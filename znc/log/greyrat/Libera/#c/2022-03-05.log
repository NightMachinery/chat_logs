[00:00:29] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[00:01:45] *** Quits: argonautx_ (~argonautx@i5E867391.versanet.de) (Quit: Leaving)
[00:02:01] *** Joins: magla (~gelignite@d536536e.access.ecotel.net)
[00:03:15] *** Joins: Dotz0cat (~Dotz0cat@h108.89.187.173.dynamic.ip.windstream.net)
[00:03:23] *** Joins: peki (~peki@91.191.14.22)
[00:04:12] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 240 seconds)
[00:04:23] *** Quits: tiotags (~tiotags@user/tiotags) (Quit: Leaving)
[00:06:23] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:aaa1:59ff:fe3c:ddb4) (Quit: updating)
[00:06:41] *** Joins: cthi (~cthi@097-082-138-151.res.spectrum.com)
[00:06:46] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:aaa1:59ff:fe3c:ddb4)
[00:08:15] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[00:09:51] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[00:10:16] <bnchs> is using bitset good for memory
[00:11:11] <theseb> How get rid of this gcc error?.. typedef unsigned int* (*func)(unsigned int**, unsigned int*, unsigned int**);
[00:11:18] <theseb> sorry..i mean warning: cast from pointer to integer of different size
[00:11:40] <theseb> I *want* to do a cast to a different size
[00:11:52] <bnchs> theseb, post code?
[00:11:52] <theseb> is there some way to specify in C that yes i want to do that so gcc is happy?
[00:11:59] <theseb> bnchs: ok sec
[00:12:54] *** Joins: bnchs__ (~bnchs@105.158.16.192)
[00:13:01] <bnchs__> theseb: have you sent the link
[00:13:18] <gog> did not send
[00:13:34] <bnchs__> it really depends on the size
[00:13:47] <bnchs__> if you're downcasting, then of course it's a warning
[00:14:19] <theseb> bnchs__: https://pastebin.com/vJiw244t
[00:14:37] <theseb> bnchs__: see line 12, 17, 23
[00:14:54] <theseb> bnchs__: i'm converting a function pointer to unsigned int
[00:15:06] <bnchs__> theseb: unsigned int is 32-bit
[00:15:13] <theseb> bnchs__: right
[00:15:17] <bnchs__> a pointer (which depends on your CPU arch) might be 64-bit
[00:15:31] <bnchs__> if yu're running this in 64-bit, then it's downcasting
[00:15:48] <theseb> bnchs__: i am
[00:16:03] <theseb> bnchs__: for my purposes that is fine...how remove the warning when i compile ?
[00:16:07] <bnchs__> well gcc isn't gonna be happy about this anyway
[00:16:27] <vdamewood> theseb: You don't. You qccept the warning and move on.
[00:16:30] *** Quits: bnchs (~bnchs@41.141.156.15) (Ping timeout: 250 seconds)
[00:16:31] <vdamewood> accept*
[00:16:37] <bnchs__> ^
[00:16:46] <bnchs__> you're making a mistake and gcc will point it out
[00:17:07] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[00:17:53] <bnchs__> and ofc if you're planning to execute these 32-bit integers, you might end up running the wrong instruction or segfaulting
[00:18:28] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Remote host closed the connection)
[00:18:44] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:2c0b:a6b2:9b3a:540b)
[00:18:50] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[00:19:15] <fizzie> There are generally (implementation-specific) ways of controlling which warnings you want to enable, either globally or within a section of a file. For GCC, see `#pragma GCC diagnostic ...`.
[00:19:29] *** peki is now known as bratpeki
[00:20:08] *** bratpeki is now known as peki
[00:20:11] *** Joins: O0c (~O0c@216.249.149.6)
[00:20:38] <bnchs__> ehh if i were you, i would have typed void *val[2];
[00:20:53] <bnchs__> best way of handling this
[00:21:56] <fizzie> Presumably `env_add_kvp` only takes an unsigned int.
[00:22:00] <theseb> i got it....-Wno-pointer-to-int-cast -Wno-int-to-pointer-cast
[00:22:19] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[00:22:28] <O0c> What happens if I don't assign main() a type?
[00:22:28] *** candide sets mode: -o candide
[00:22:56] <bnchs__> O0c, then gcc will make it int and return a 0
[00:23:01] <theseb> fizzle: can i ask how you got so awesome at C?  Do you have a job that uses C all the time? What's the secret? ;)
[00:23:02] <bnchs__> or i don't know
[00:23:25] <O0c> Should I use
[00:23:31] <O0c> int main () {
[00:23:33] <O0c> or
[00:23:39] <O0c> void main() {
[00:23:40] <bnchs__> i don't use #pragma since i leave the choices of build flags to the user
[00:23:41] <O0c> ?
[00:23:46] <bnchs__> O0c, use int
[00:24:22] <fizzie> Well. It's a little subtle. In C89, the return type is `int` by default, but there's no "automatically return a 0" feature. In C99, which adds the "return 0 implicitly" feature, there's no longer any implicit int, so it's a constraint violation to omit the return type specifier.
[00:24:57] <fizzie> That was re `main() { ... }` vs. `int main() { ... }` though; `void main() { ... }` is never right, except as an implementation-specific extension.
[00:25:06] <fizzie> theseb: Nah, the C thing is just a hobby.
[00:25:30] <bnchs__> is C even used in jobs?
[00:25:35] <O0c> fizzie, Thank you for explaining that.
[00:25:49] <theseb> fizzie: what do you think of Rust?
[00:26:12] *** Quits: alch (~alch@151.44.83.15) (Ping timeout: 240 seconds)
[00:26:15] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[00:27:51] <fizzie> I'm sure there are still some amount of C jobs around. People who write Linux kernel modules, for example.
[00:28:16] *** Joins: alch (~alch@151.46.11.247)
[00:28:47] <bnchs__> yes, i still like C because of how much freedom and power it gives you
[00:29:54] <bnchs__> but with great power, comes great responibility (including memory)
[00:30:46] <O0c> fizzie should my goal be to have the least amount of warnings as possible?
[00:34:08] *** Quits: munkis (~mendel_mu@ool-ae2cb229.dyn.optonline.net) (Remote host closed the connection)
[00:34:15] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[00:34:32] *** Joins: munkis (~mendel_mu@ool-ae2cb229.dyn.optonline.net)
[00:38:20] *** Joins: peterere1 (~petern@pi.fuzzle.org)
[00:38:54] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 260 seconds)
[00:39:31] <bnchs__> it's pretty hard to put numbers in 4-bit
[00:40:09] *** peterere1 is now known as petererer
[00:40:34] <O0c> I hate myself, because I'm not a good C programmer. Will you help me get better?
[00:42:22] <k> lol
[00:42:51] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[00:43:20] <bnchs__> i'm also not a good C programmer
[00:43:28] *** Quits: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Quit: This computer has gone to sleep)
[00:43:40] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[00:43:42] <bnchs__> i'm trying to figure out how to compress numbers to save more memory
[00:44:11] <bnchs__> it's a bunch of trial and error
[00:44:42] <O0c> Is int the smallest?
[00:44:58] <bnchs__> int is 32-bit
[00:45:10] <O0c> Is there a type smaller?
[00:45:39] <usickduck> char is 8-bit
[00:45:42] <bnchs__> right now, i'm trying to spilt up a 8-bit char into 3 integers (1-bit for status, 3-bit for something, 4-bit for something that has more types)
[00:45:59] <bnchs__> using bitwise operations
[00:46:04] *** Joins: brad_mssw (~bhouse@2601:344:4100:b490:d123:58ef:865c:2893)
[00:46:16] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[00:48:00] *** Joins: Rynn (~rynn@216.30.158.198)
[00:49:40] <gog> i'm not a good c programmer
[00:49:55] <usickduck> i'm not a good c programmer
[00:50:16] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[00:50:35] <O0c> What's a program that's just beyond my abilities?
[00:51:04] <bnchs__> C helped me learn more about how much potentinal my CPU has
[00:51:19] <bnchs__> including optimizations like SSE and AVX
[00:51:32] <O0c> What's SEE and AVX?
[00:52:24] <bnchs__> it's a SIMD extension
[00:52:30] <bnchs__> to the x86 architecture
[00:53:03] <bnchs__> mainly used for matrices, vectors and stuff
[00:53:08] <gog> fancy maths
[00:53:19] <O0c> That's neat.
[00:53:49] <bnchs__> useful if you wanna do 3D or use a graphics library like OpenGL
[00:55:40] <gog> bnchs__: bitfield struct
[00:55:43] <gog> should work fine
[00:55:47] *** Quits: Darkcoal (~user@user/Darkcoal) (Quit: Darkcoal)
[00:56:27] <bnchs__> gog: a what?
[00:56:36] <bnchs__> how come i never heard of this
[00:56:41] <gog> :d
[00:57:01] <gog> https://en.cppreference.com/w/c/language/bit_field
[00:57:02] *** Quits: cart_ (~cart@host-78-144-125-214.as13285.net) (Quit: Konversation terminated!)
[00:57:44] <gog> or you could shift and mask
[00:57:59] <bnchs__> yeah thats what i'm doing currently
[00:58:15] <NRK> bit fields are cool. kinda shame they're so much implementation defined.
[00:58:19] <gog> yeah
[00:58:21] <gog> thats the kicker
[00:58:28] <bnchs__> like [the number << 4]
[00:58:28] <gog> it may or may not be portable
[00:58:40] <bnchs__> i never heard of this until you told e
[00:58:53] *** Quits: terminalpusher (~terminalp@2a01:586:cee:1:27cd:58f:599e:6a92) (Remote host closed the connection)
[00:59:13] <NRK> what's most frustrating is bit fields of char is not explicitly defined!
[00:59:35] <NRK> so you need to use int, which increases the alignment requirements
[00:59:49] <gog> wait it won't work with uint8_t?
[00:59:51] <bnchs__> i want my program to be portable anyway, so it's bad that it's very dependent on implementation
[01:00:17] <NRK> it most likely will, but not guaranteed by the standard
[01:00:21] <gog> ah hell
[01:00:30] <gog> i may have a potential timebomb in a couple spots of my code then
[01:00:48] <gog> not likely but still worth a look
[01:01:11] <gog> i guess that makes sense though
[01:01:32] <bnchs__> oh well
[01:01:38] <NRK> not really, using implementation defined stuff is fine. as long as the implementation is doing what you think its doing.
[01:01:53] <bnchs__> what if you use another c compiler
[01:02:00] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[01:02:01] <SamuelMarks> hi
[01:02:06] <bnchs__> like tinycc or macroshaft C compiler
[01:02:11] <O0c> Hi.
[01:02:16] <bnchs__> will it have different behavior?
[01:02:19] <gog> it might
[01:02:30] <NRK> i mean, its pretty much impossible to avoid implementation defined or even undefined behaviour for certain stuff
[01:02:39] <SamuelMarks> What's a good open-source library for emitting C code? - Preferably that can parse C also…
[01:02:42] <gog> yeah i do some bare metal coding
[01:02:55] * SamuelMarks has some LLVM LibTooling stuff but it's soooo C++
[01:02:58] <apotheon> SamuelMarks: Does LLVM count?
[01:02:59] <apotheon> oh
[01:03:07] <gog> so there's always some edge case im missing
[01:03:08] <bnchs__> SamuelMarks, a brain and a compiler
[01:03:27] <SamuelMarks> apotheon - Yeah I started writing this a while ago, just haven't spent the time to get everything working yet: github.com/SamuelMarks/type-correct
[01:03:36] <SamuelMarks> And wondered if there was a lighter solution
[01:04:10] <bnchs__> as long as the compiler reports on it, you can fix it
[01:04:12] <apotheon> fun
[01:04:20] <SamuelMarks> aye
[01:04:25] <bnchs__> but good project
[01:04:42] <apotheon> SamuelMarks: Is it in a useful state?
[01:05:00] <SamuelMarks> Thanks. Yeah it was the simplest project I could think of to learn C parse/emit library… that could actually be useful
[01:05:19] <bnchs__> you can probably reuse tinycc code
[01:05:20] <SamuelMarks> apotheon - Nowhere near a useful state, I've just been working on the CMake and CI rather than the impl
[01:05:28] <apotheon> I see.
[01:05:31] <bnchs__> but it's most likely not gonna work with new C code
[01:05:39] <bnchs__> and i haven't read their code yet
[01:05:59] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[01:06:01] <apotheon> If you do get it to a useful state, let me know.
[01:06:13] *** Parts: O0c (~O0c@216.249.149.6) ()
[01:06:25] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[01:06:32] <SamuelMarks> yeah tcc is super active still https://repo.or.cz/w/tinycc.git/ - but maybe won't support C23 or whatever
[01:06:36] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:858f:1c83:7b4e:c545) (Ping timeout: 245 seconds)
[01:06:47] <SamuelMarks> apotheon - Click "watch" :P
[01:07:44] <NRK> you can also get atom feed from github repos
[01:07:46] <NRK> kinda shame its "hidden"
[01:08:24] *** Quits: peki (~peki@91.191.14.22) (Quit: Leaving)
[01:08:39] <apotheon> SamuelMarks: That won't tell me when it's in a useful state.
[01:08:50] <bnchs__> i'm planning to make a github alternative frontend in C (server-side)
[01:08:50] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:09:05] *** test_ is now known as _flood
[01:09:10] <bnchs__> lets hope github is not too much reliant on javascript
[01:09:21] <apotheon> . . . but I am watching for "releases".
[01:09:24] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[01:10:02] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 240 seconds)
[01:10:59] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[01:13:38] *** Joins: moose (~moose@user/moose)
[01:13:42] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 250 seconds)
[01:16:03] <SamuelMarks> bnchs__ - civitweb?
[01:16:19] <SamuelMarks> Oh I've got a pretty interesting idea for building an ORM in C
[01:16:43] <bnchs__> SamuelMarks, what?
[01:17:50] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[01:18:29] <bnchs__> it uses fastcgi
[01:18:32] <SamuelMarks> Take OpenAPI definitions (equiv. to SQL tables), generate `struct`s specific for each table, and `cleanup` code to deallocate an individual record and arrays thereof. Link in via ODBC (or similar). Generate routes in civitweb that utilise these structs.
[01:18:57] <SamuelMarks> Then make the C code hand-editable, so you can go from C to OpenAPI
[01:19:00] <SamuelMarks> then # profit
[01:19:17] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:19:19] <bnchs__> is fastcgi just enough?
[01:19:33] <SamuelMarks> nah go hard
[01:20:15] <bnchs__> including a web server in a program
[01:20:19] <bnchs__> good idea
[01:20:34] <bnchs__> maybe when you have 100 different programs with their own web servers
[01:20:59] <SamuelMarks> You can dlopen or FFI it when it gets to that phase
[01:25:37] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 240 seconds)
[01:30:26] *** Joins: seninha (~chatzilla@user/seninha)
[01:34:16] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[01:36:47] *** Joins: AmR (~AmREiSa@156.199.197.9)
[01:38:53] *** Quits: xa0s_ (~xa0s@mab.sdf.org) (Quit: leaving)
[01:40:54] *** Quits: usickduck (~qooupapn@142.167.143.188) (Remote host closed the connection)
[01:41:34] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[01:42:02] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[01:43:50] *** Joins: fapple (~user@193.32.249.138)
[01:43:50] *** Quits: fapple (~user@193.32.249.138) (Client Quit)
[01:45:46] *** Joins: karakedi (~eAC53C340@user/karakedi)
[01:47:55] *** Joins: usickduck (~qooupapn@142.167.143.188)
[01:48:08] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:2c0b:a6b2:9b3a:540b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:55:09] *** Quits: AmR (~AmREiSa@156.199.197.9) (Quit: Konversation terminated!)
[01:58:39] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[02:01:08] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[02:04:30] *** Quits: fstd_ (~fstd@xdsl-78-34-125-135.nc.de) (Read error: Connection reset by peer)
[02:04:42] *** Joins: fstd (~fstd@xdsl-78-34-125-135.nc.de)
[02:05:08] *** Quits: ekathva (~ekathva@2001:999:51:19b8:f2b5:31fb:6c84:f10) (Remote host closed the connection)
[02:07:51] *** Quits: bnchs__ (~bnchs@105.158.16.192) (Ping timeout: 245 seconds)
[02:10:25] *** Quits: Akuli (~Akuli@82-203-164-25.bb.dnainternet.fi) (Quit: Akuli)
[02:12:04] *** Joins: yustin (~yustin@user/yustin)
[02:25:13] *** Joins: tolot (~tolot@dslb-088-064-152-098.088.064.pools.vodafone-ip.de)
[02:26:13] *** Quits: cheakoirccloud (uid293319@id-293319.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:28:15] *** Joins: hashfunc803 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[02:31:22] *** Quits: adip_ (~adip@den37.neoplus.adsl.tpnet.pl) (Ping timeout: 260 seconds)
[02:31:22] *** Quits: adip (~adip@den37.neoplus.adsl.tpnet.pl) (Ping timeout: 260 seconds)
[02:33:29] *** Quits: pizdets (~pizdets@183.182.114.123) (Ping timeout: 265 seconds)
[02:34:04] *** Joins: pizdets (~pizdets@183.182.111.207)
[02:38:00] *** Quits: usickduck (~qooupapn@142.167.143.188) (Remote host closed the connection)
[02:41:35] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:46:37] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[02:47:55] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[02:49:20] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 2.8)
[02:49:57] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 256 seconds)
[02:50:10] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[02:51:00] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 240 seconds)
[02:51:05] *** Quits: brad_mssw (~bhouse@2601:344:4100:b490:d123:58ef:865c:2893) (Quit: Leaving)
[02:52:25] *** Joins: soapsudsxx (~soapsudsx@209.221.40.142)
[02:53:17] *** Joins: ferdna (~ferdna@user/ferdna)
[02:53:49] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[02:54:42] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 260 seconds)
[02:55:50] *** Quits: lispy (~lispy@user/lispy) (Quit: Leaving)
[02:59:13] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[03:00:13] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[03:00:24] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[03:00:56] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[03:00:56] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[03:01:48] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[03:04:29] *** Joins: karakedi (~eAC53C340@user/karakedi)
[03:06:48] *** Quits: boreas (~heiner@94.31.81.196) (Remote host closed the connection)
[03:07:00] *** Joins: boreas (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[03:08:32] *** Joins: Torr (~Torr@user/torr)
[03:08:34] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[03:08:42] *** Quits: singularity00_ (~singulari@236.lan-hi1-2.static.rozabg.com) (Quit: The true sign of intelligence is not knowledge but imagination.)
[03:13:05] *** Quits: Torr (~Torr@user/torr) (Client Quit)
[03:13:19] *** Joins: Torr (~Torr@user/torr)
[03:15:10] *** Joins: katp32 (~katp32@S010680ea96e8dbba.vc.shawcable.net)
[03:15:17] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[03:15:19] <katp32> hi, I have a really horrible problem
[03:15:46] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:15:52] <katp32> I have a piece of code that looks like `char *data = ...; printf("%u\n", data[0]);`, which prints 4294967295
[03:16:23] <katp32> which shouldn't even be possible because it's a char, no?
[03:16:39] *** Quits: kts (~kts@103.73.237.215) (Quit: Konversation terminated!)
[03:16:56] *** Quits: magla (~gelignite@d536536e.access.ecotel.net) (Quit: Stay safe!)
[03:17:09] <katp32> or... oh nevermind I'm an idiot, it's being implicitly cast to an int
[03:17:11] <katp32> sorry
[03:17:16] <katp32> always after you join IRC :P
[03:17:18] <gog> :D
[03:17:37] <gog> C is an unforgiving language
[03:18:48] <katp32> between SDL and OpenGL, C is the least annoying thing I'm working with ;D
[03:18:57] <gog> oh worm totally fair
[03:19:23] <gog> and i didn't say annoying, just a very demanding personality that expects correctness from you :D
[03:20:02] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[03:23:39] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[03:28:31] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 256 seconds)
[03:31:12] *** Quits: Dreg- (~Dreg@fr33project.org) (Read error: Connection reset by peer)
[03:31:21] *** Quits: yustin (~yustin@user/yustin) (Ping timeout: 256 seconds)
[03:31:31] *** Joins: Dreg (~Dreg@fr33project.org)
[03:31:46] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[03:32:27] *** Parts: katp32 (~katp32@S010680ea96e8dbba.vc.shawcable.net) ()
[03:35:17] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[03:35:57] *** Quits: hashfunc803 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Ping timeout: 240 seconds)
[03:36:36] *** Joins: Wulf (~Wulf@user/wulf)
[03:38:48] *** Quits: acerbic (~acerbic@cs-xdata-50-86-52-247.cspire.com) (Read error: Connection reset by peer)
[03:40:58] *** Joins: Guest5734 (~Guest@181.91.159.97)
[03:40:59] *** Quits: tolot (~tolot@dslb-088-064-152-098.088.064.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[03:41:15] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[03:49:27] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 256 seconds)
[03:51:48] *** Joins: Alhazred (~Alhazred@ool-18b829c5.dyn.optonline.net)
[03:53:41] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[03:53:43] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[03:55:54] *** Joins: acerbic (~acerbic@cs-xdata-50-86-52-247.cspire.com)
[03:57:03] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[03:57:11] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[03:57:11] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Client Quit)
[03:57:51] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[03:59:04] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Client Quit)
[03:59:39] *** Quits: joev1 (~joev@user/joev) (Ping timeout: 256 seconds)
[03:59:45] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:00:03] *** Joins: joev1 (~joev@user/joev)
[04:00:59] *** Quits: dogbert_2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[04:01:15] *** Joins: dogbert_2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[04:01:17] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 240 seconds)
[04:03:00] *** Quits: random-nick (~random-ni@87.116.176.196) (Ping timeout: 240 seconds)
[04:03:15] *** Joins: ymwm_ (~yingmanwu@27.153.164.187)
[04:09:53] *** Quits: Guest5734 (~Guest@181.91.159.97) (Remote host closed the connection)
[04:12:05] *** Joins: MsPoop (~MsPoop@S01069050ca4e3573.cg.shawcable.net)
[04:14:56] *** Quits: joev1 (~joev@user/joev) (Ping timeout: 272 seconds)
[04:15:22] *** Joins: joev1 (~joev@user/joev)
[04:17:57] *** Joins: CodePoint (~CodePoint@2600:1700:3070:3790::11)
[04:19:28] *** Quits: Juliu_ (~Juliu@2a02:810b:c640:3ec0:fcdf:d7ba:7957:a89b) (Quit: Quit)
[04:20:31] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[04:20:36] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[04:21:11] *** Quits: ymwm_ (~yingmanwu@27.153.164.187) (Ping timeout: 256 seconds)
[04:23:04] *** Quits: LuKaRo_ (~LuKaRo@p200300dfa712f19d00000000000001f9.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[04:23:31] *** Joins: zmt00 (~zmt00@user/zmt00)
[04:24:32] *** Joins: LuKaRo (~LuKaRo@p57b157e5.dip0.t-ipconnect.de)
[04:25:24] *** Quits: alch (~alch@151.46.11.247) (Ping timeout: 240 seconds)
[04:27:15] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Ping timeout: 240 seconds)
[04:27:37] *** Joins: alch (~alch@151.44.82.40)
[04:29:25] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[04:32:36] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[04:34:35] *** Joins: Wulf (~Wulf@user/wulf)
[04:41:36] *** Quits: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[04:41:41] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[04:46:42] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[04:47:28] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[04:51:37] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 240 seconds)
[04:53:34] *** Quits: CodePoint (~CodePoint@2600:1700:3070:3790::11) (Quit: CodePoint)
[04:57:17] *** Quits: acerbic (~acerbic@cs-xdata-50-86-52-247.cspire.com) (Ping timeout: 240 seconds)
[04:57:45] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[05:00:37] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:2c0b:a6b2:9b3a:540b)
[05:00:44] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Read error: Connection reset by peer)
[05:05:55] *** ndorf_ is now known as ndorf
[05:09:57] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 240 seconds)
[05:12:26] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[05:12:45] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:2c0b:a6b2:9b3a:540b) (Ping timeout: 252 seconds)
[05:13:11] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[05:14:12] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 240 seconds)
[05:14:37] *** Joins: Torr (~Torr@user/torr)
[05:21:50] *** Quits: soapsudsxx (~soapsudsx@209.221.40.142) (Remote host closed the connection)
[05:23:05] *** Joins: soapsudsxx (~soapsudsx@209.221.40.142)
[05:23:08] *** Joins: ferdna (~ferdna@user/ferdna)
[05:24:52] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0::49) (Remote host closed the connection)
[05:26:24] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:8eaa:1fe9:fd6:a9aa)
[05:26:36] *** Quits: Burgundy (~NA@86.121.143.206) (Ping timeout: 240 seconds)
[05:28:30] *** Quits: trisk (~trisk@2601:196:4700:712:8:20ff:fe3e:890e) (Ping timeout: 250 seconds)
[05:28:34] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[05:31:56] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[05:32:59] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[05:33:28] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[05:34:55] *** Joins: freddietilley (~freddieti@2a02-a454-7f89-1-4f5-d2d4-abbc-31f6.fixed6.kpn.net)
[05:36:09] *** Joins: ymwm_ (~yingmanwu@27.153.164.187)
[05:37:07] *** Quits: Alhazred (~Alhazred@ool-18b829c5.dyn.optonline.net) (Ping timeout: 256 seconds)
[05:37:18] *** Joins: Alhazred (~Alhazred@86.106.74.39)
[05:37:41] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[05:37:48] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[05:40:18] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[05:42:22] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 250 seconds)
[05:42:36] *** Quits: panda88kazag (~RadimPavl@176-74-132-138.netdatacomm.cz) (Ping timeout: 240 seconds)
[05:42:57] *** Quits: freddietilley (~freddieti@2a02-a454-7f89-1-4f5-d2d4-abbc-31f6.fixed6.kpn.net) (Ping timeout: 240 seconds)
[05:45:03] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Ping timeout: 256 seconds)
[05:46:13] *** Joins: trisk (~trisk@2601:196:4700:712:8:20ff:fe3e:890e)
[05:55:03] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[05:55:11] *** Quits: Psybur (~Psybur@mobile-166-171-56-243.mycingular.net) (Remote host closed the connection)
[05:59:03] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 240 seconds)
[06:00:03] *** Quits: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0) (Ping timeout: 252 seconds)
[06:04:50] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[06:07:18] *** Joins: unlink_ (~unlink@p200300ebcf357f0041bdfa1926ef3549.dip0.t-ipconnect.de)
[06:08:41] *** Quits: unlink2 (~unlink@p200300ebcf3e190012b7094ba83de7f3.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[06:11:28] *** Joins: slimbo (~qooupapn@142.167.143.188)
[06:12:49] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[06:15:31] *** Quits: Sheilong (uid293653@2a03:5180:f:3::4:7b15) ()
[06:15:39] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Ping timeout: 256 seconds)
[06:15:50] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[06:16:18] *** Joins: freakazoid333 (~matt@35.136.233.205)
[06:17:06] *** Joins: semeion (~semeion@user/semeion)
[06:18:51] *** Joins: Inline__ (~Inline@p200300cd472f640099b8655dd3230f42.dip0.t-ipconnect.de)
[06:19:58] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[06:21:29] *** Quits: Inline (~Inline@p200300cd471026001e3cab216ce28c3c.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[06:22:31] *** Quits: soapsudsxx (~soapsudsx@209.221.40.142) (Remote host closed the connection)
[06:24:40] *** Joins: soapsudsxx (~soapsudsx@209.221.40.142)
[06:27:08] *** Joins: vysn (~vysn@user/vysn)
[06:27:24] *** Quits: Alhazred (~Alhazred@86.106.74.39) (Ping timeout: 240 seconds)
[06:28:01] *** Quits: slimbo (~qooupapn@142.167.143.188) (Remote host closed the connection)
[06:28:29] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[06:28:37] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[06:29:19] *** Joins: Alhazred (~Alhazred@ool-18b829c5.dyn.optonline.net)
[06:29:22] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 260 seconds)
[06:30:02] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Quit: Bye, bye)
[06:32:37] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 240 seconds)
[06:34:12] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 240 seconds)
[06:34:51] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[06:34:51] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[06:34:51] *** Joins: wroathe (~wroathe@user/wroathe)
[06:34:57] *** Quits: rahl (rahl@otaku.sdf.org) (Ping timeout: 256 seconds)
[06:35:27] *** Joins: rahl (rahl@otaku.sdf.org)
[06:39:15] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[06:39:55] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[06:43:24] *** Quits: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2) (Ping timeout: 240 seconds)
[06:45:48] *** Joins: ejjfunky (~ejjfunky2@125.164.19.180)
[06:51:34] *** Joins: slimbo (~qooupapn@142.167.143.188)
[06:52:29] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:53:37] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Ping timeout: 256 seconds)
[06:59:35] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[07:03:11] *** Quits: slimbo (~qooupapn@142.167.143.188) (Remote host closed the connection)
[07:05:57] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:d0cb:b707:5684:c8e6)
[07:14:35] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[07:17:08] *** Quits: ymwm_ (~yingmanwu@27.153.164.187) (Remote host closed the connection)
[07:21:38] *** Joins: constxd (~brad@142.134.78.128)
[07:21:41] <constxd> kings
[07:22:02] <constxd> u guys take the Berkeley Mono pill yet?
[07:22:26] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[07:22:32] <pony> and what is that?
[07:22:50] <constxd> https://berkeleygraphics.com/typefaces/berkeley-mono
[07:23:07] <constxd> a thing of beauty
[07:25:31] <pony> looks rather nice
[07:25:34] <pony> but a bit expensive
[07:26:00] <gog> i like it
[07:26:12] *** Quits: Alhazred (~Alhazred@ool-18b829c5.dyn.optonline.net) (Ping timeout: 272 seconds)
[07:26:16] <constxd> just bought it
[07:26:29] <constxd> reading your messages in it
[07:26:42] <constxd> very nice looking messages i must say
[07:27:09] <kurahaupo> chiselfuse: gcc -s <( echo "short function(void) { long x = $num; short blah; blah = (short)x; return blah; }" ) -o foo.s # output to /proc/$$/fd/123.s won't work
[07:27:20] *** Joins: Alhazred (~Alhazred@45.129.56.151)
[07:27:30] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[07:27:37] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[07:29:01] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[07:30:25] <pony> is that 75 US?
[07:31:45] *** Joins: aerysh (~aerysh@94.198.43.105)
[07:32:27] *** Joins: slimbo (~qooupapn@142.167.143.188)
[07:32:50] *** Quits: MsPoop (~MsPoop@S01069050ca4e3573.cg.shawcable.net) (Quit: Client closed)
[07:33:16] *** Joins: MsPoop (~MsPoop@S01069050ca4e3573.cg.shawcable.net)
[07:33:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[07:34:32] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.4)
[07:35:15] *** Joins: freddietilley (~freddieti@2a02-a454-7f89-1-3c51-5256-3160-82c6.fixed6.kpn.net)
[07:35:59] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:35:59] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:35:59] *** Joins: wroathe (~wroathe@user/wroathe)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:19] <Pentode> lot of money for a font... but i guess it is 2022 after all.
[07:38:44] *** Quits: slimbo (~qooupapn@142.167.143.188) (Remote host closed the connection)
[07:39:31] *** Quits: freddietilley (~freddieti@2a02-a454-7f89-1-3c51-5256-3160-82c6.fixed6.kpn.net) (Ping timeout: 245 seconds)
[07:39:39] <MsPoop> blah blah blah
[07:40:28] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[07:41:24] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[07:42:09] *** MsPoop is now known as dsfa
[07:42:16] *** dsfa is now known as HUEAHEAUEAHEUAEH
[07:42:30] *** Joins: ymwm (~yingmanwu@27.153.164.187)
[07:42:47] *** HUEAHEAUEAHEUAEH is now known as MsPoopyPants
[07:43:27] <kurahaupo> constxd: open source supporters generally avoid taking anti-open pills
[07:44:02] *** Quits: fluter (~fluter@user/fluter) (Read error: Connection reset by peer)
[07:46:40] *** Joins: fluter (~fluter@user/fluter)
[07:47:40] *** Quits: Grell (~john@ool-4579c605.dyn.optonline.net) (Remote host closed the connection)
[07:48:37] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[07:49:29] *** Quits: fluter (~fluter@user/fluter) (Client Quit)
[07:49:58] *** Joins: miffi (~miffi@user/miffi)
[07:50:23] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:50:38] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[07:51:12] *** Joins: zer0x__ (~zer0x@1.55.170.131)
[07:53:48] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Read error: Connection reset by peer)
[07:53:55] *** Quits: aerysh (~aerysh@94.198.43.105) (Quit: Leaving)
[07:54:42] *** Quits: constxd (~brad@142.134.78.128) (Ping timeout: 272 seconds)
[07:54:57] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 240 seconds)
[07:55:15] *** Joins: frost (~frost@user/frost)
[08:01:25] *** Parts: miffi (~miffi@user/miffi) ()
[08:05:58] *** Joins: slimbo (~qooupapn@142.167.143.188)
[08:07:23] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[08:07:32] *** Quits: joev1 (~joev@user/joev) (Ping timeout: 250 seconds)
[08:08:41] *** Joins: joev1 (~joev@user/joev)
[08:09:10] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[08:11:36] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 245 seconds)
[08:11:53] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[08:12:05] *** Quits: nickorta12 (~nickorta1@174-28-176-216.albq.qwest.net) (Ping timeout: 256 seconds)
[08:12:57] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[08:17:46] *** Joins: fluter (~fluter@user/fluter)
[08:21:00] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[08:22:26] *** Quits: matt|home (~matt@adsl-74-233-58-148.mia.bellsouth.net) (Ping timeout: 245 seconds)
[08:24:25] <caze> I don't see how it's any different from hiring a graphic designer to design a logo for you.
[08:25:02] <chiselfuse> `struct foo { unsigned int bar:4; };`        // what is the sytanx meaning of ":" here?
[08:25:04] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Quit: quit)
[08:25:14] <caze> chiselfuse: bits
[08:25:32] *** Quits: slimbo (~qooupapn@142.167.143.188) (Remote host closed the connection)
[08:26:05] <chiselfuse> caze: give me keyword to search for
[08:26:08] <chiselfuse> what bits?
[08:26:18] <nitrix> bit fields specifically.
[08:26:22] *** Quits: alch (~alch@151.44.82.40) (Ping timeout: 272 seconds)
[08:26:25] <caze> chiselfuse: You can start by looking in struct.
[08:27:27] <nitrix> chiselfuse, `bar` refers to only 4 of the bits of the `unsigned int`, that's 16 values.
[08:27:54] *** Joins: alch (~alch@151.44.66.222)
[08:28:17] *** ChanServ sets mode: +o candide
[08:28:18] *** candide sets mode: +q *!~MsPoop@*.shawcable.net
[08:28:47] <nitrix> chiselfuse, Compilers are able to pack multiple of these bit fields together, as long as they fit into their base type.
[08:31:09] <nitrix> chiselfuse, The downside is that you cannot use the address-of (&) operator on them.
[08:33:41] <nitrix> ,cc struct foo { unsigned int bar:4; } s; printf("%p", &s.bar);
[08:33:42] <candide> nitrix: error: cannot take address of bit-field 'bar'
[08:33:50] *** Joins: masoudd (~masoudd@user/masoudd)
[08:33:58] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 272 seconds)
[08:34:59] *** Joins: matt|home (~matt@adsl-74-233-58-91.mia.bellsouth.net)
[08:35:52] <chiselfuse> ,cc struct foo { unsigned int bar:4; unsigned int baz:4; }; printf("%d", sizeof(struct foo));
[08:35:54] <candide> chiselfuse: [warning: format '%d' expects argument of type 'int', but argument 2 has type 'long unsigned int' [-Wformat=]] 4
[08:36:27] <chiselfuse> ,cc struct foo { unsigned int bar:4; unsigned int baz:4; }; printf("%zu", sizeof(struct foo));
[08:36:29] <candide> chiselfuse: 4
[08:36:53] <chiselfuse> ,cc struct foo { unsigned int bar:4; }; printf("%zu", sizeof(struct foo));
[08:36:55] <candide> chiselfuse: 4
[08:37:15] <chiselfuse> ,cc struct foo { unsigned int bar:4; unsigned int baz:4; int control; }; printf("%zu", sizeof(struct foo));
[08:37:17] <candide> chiselfuse: 8
[08:37:37] <caze> ,cc struct foo { unsigned int bar:4; char baz; }; printf("%zu", sizeof(struct foo));
[08:37:39] <candide> caze: 4
[08:37:50] *** Joins: slimbo (~qooupapn@142.167.143.188)
[08:38:46] <nitrix> Interestingly, if they're apart they wont join. Their ordering matters.
[08:38:48] <nitrix> ,cc struct foo { unsigned int bar:4; unsigned int baz:4; int control; }; printf("%zu", sizeof(struct foo));
[08:38:50] <candide> nitrix: 8
[08:38:58] <nitrix> ,cc struct foo { unsigned int bar:4; int control; unsigned int baz:4; }; printf("%zu", sizeof(struct foo));
[08:39:00] <candide> nitrix: 12
[08:40:59] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[08:41:52] <caze> ,cc struct foo { unsigned int bar:31; unsigned int baz:2; unsigned int qux:31; }; printf("%zu", sizeof(struct foo));
[08:41:54] <candide> caze: 12
[08:42:13] <caze> Not all that useful imo.
[08:42:57] <pragma-> nearly everything about bit-fields is implementation-defined.
[08:43:06] <nitrix> Right. It'd have to split the bit field amongst the other two fields, that'd be awful.
[08:43:42] <nitrix> All the libraries I've seen implement actual bitsets all used unsigned char instead, with bit wise operators.
[08:43:43] <pragma-> they might work fantastically on one implementation and absolutely horridly on another.
[08:44:04] <nitrix> As opposed to bit dumb operators.
[08:44:07] *** Quits: joev1 (~joev@user/joev) (Ping timeout: 256 seconds)
[08:45:38] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 260 seconds)
[08:46:00] *** Joins: joev1 (~joev@user/joev)
[08:46:36] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Ping timeout: 240 seconds)
[08:51:24] *** Quits: drbeco (~beco@user/beco) (Remote host closed the connection)
[08:53:24] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-1-225.hsd1.wa.comcast.net)
[08:56:08] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Ping timeout: 272 seconds)
[09:02:37] <fluter> one should favor bit operations than bit fields?
[09:04:00] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[09:09:27] *** Quits: MsPoopyPants (~MsPoop@S01069050ca4e3573.cg.shawcable.net) (Quit: Client closed)
[09:11:34] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[09:13:18] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:d0cb:b707:5684:c8e6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:13:39] *** Joins: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67)
[09:15:38] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[09:17:00] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[09:20:00] *** Quits: soapsudsxx (~soapsudsx@209.221.40.142) (Remote host closed the connection)
[09:20:25] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 256 seconds)
[09:20:26] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Remote host closed the connection)
[09:22:18] *** Quits: slimbo (~qooupapn@142.167.143.188) (Remote host closed the connection)
[09:22:38] *** Joins: slimbo (~qooupapn@142.167.143.188)
[09:22:52] *** Joins: dockk (~dockk@nat-x097-064.reshsg.uci.edu)
[09:27:44] *** Quits: saribro (~swinnenb@user/swinnenb) (Remote host closed the connection)
[09:28:49] *** Joins: voiduser_ (~voiduser@ip68-0-59-20.no.no.cox.net)
[09:29:31] *** Joins: rgrinberg (~textual@2806:101e:7:70b6:d0cb:b707:5684:c8e6)
[09:34:09] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[09:36:05] *** Joins: AmR (~AmREiSa@156.199.197.9)
[09:36:34] *** Joins: hashfunc803 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[09:43:37] *** Quits: Thedarkb (~Thedarkb@82.3.80.190) (Ping timeout: 240 seconds)
[09:43:37] *** Quits: voiduser_ (~voiduser@ip68-0-59-20.no.no.cox.net) (Ping timeout: 256 seconds)
[09:44:22] *** Joins: Zectbumo (~Zectbumo@2600:8802:5100:3f90:305c:3b7d:bfc5:900f)
[09:49:02] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[09:50:18] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Client Quit)
[09:52:53] *** Joins: MsPoop (~MsPoop@S01069050ca4e3573.cg.shawcable.net)
[09:54:24] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[10:00:37] *** Quits: zer0x__ (~zer0x@1.55.170.131) (Ping timeout: 240 seconds)
[10:04:05] *** Joins: soapsudsxx (~soapsudsx@209.221.40.142)
[10:06:11] *** Quits: jkotra (~jkotra@122.169.141.242) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[10:07:32] *** Joins: jkotra (~jkotra@122.169.141.242)
[10:07:35] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[10:12:26] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 260 seconds)
[10:18:59] *** Joins: xa0s (~xa0s@mab.sdf.org)
[10:20:26] *** Joins: the_lanetly_052 (~the_lanet@194.135.168.79)
[10:25:30] *** Joins: vicfred (~vicfred@user/vicfred)
[10:26:26] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[10:26:26] *** Joins: adip (~adip@den37.neoplus.adsl.tpnet.pl)
[10:26:30] *** Joins: adip_ (~adip@den37.neoplus.adsl.tpnet.pl)
[10:27:09] *** Quits: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net) (Quit: b1101)
[10:28:23] *** candide sets mode: -o candide
[10:30:37] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[10:30:53] *** Joins: MsPoop14 (~MsPoop@S01069050ca4e3573.cg.shawcable.net)
[10:30:53] *** Quits: MsPoop (~MsPoop@S01069050ca4e3573.cg.shawcable.net) (Quit: Client closed)
[10:32:26] *** Parts: MsPoop14 (~MsPoop@S01069050ca4e3573.cg.shawcable.net) ()
[10:32:38] *** Joins: yustin (~yustin@user/yustin)
[10:34:37] *** Quits: steve__ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 256 seconds)
[10:35:20] *** Joins: bebyx (~Thunderbi@user/bebyx)
[10:36:31] *** Joins: thevishy (~Nishant@2405:201:f005:c007:88ef:fc07:ae6e:8552)
[10:36:46] *** Joins: zsoltiv_ (~zsoltiv@85-235-95-111.naracom.hu)
[10:40:00] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 272 seconds)
[10:40:30] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[10:43:14] *** Quits: zsoltiv_ (~zsoltiv@85-235-95-111.naracom.hu) (Ping timeout: 260 seconds)
[10:45:00] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 240 seconds)
[10:45:05] *** Quits: dockk (~dockk@nat-x097-064.reshsg.uci.edu) (Ping timeout: 256 seconds)
[10:45:37] *** Quits: rgrinberg (~textual@2806:101e:7:70b6:d0cb:b707:5684:c8e6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:47:28] *** Joins: bebyx (~Thunderbi@user/bebyx)
[10:49:49] *** Joins: iomari891 (~iomari891@105.112.138.38)
[10:51:39] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 256 seconds)
[10:57:01] *** Joins: herrhotz- (~herrhotze@user/herrhotzenplotz)
[10:57:49] *** Quits: herrhotzenplotz (~herrhotze@user/herrhotzenplotz) (Read error: Connection reset by peer)
[10:58:01] *** herrhotz- is now known as herrhotzenplotz
[10:59:23] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[11:00:50] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[11:00:55] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[11:01:07] *** Joins: zer0x__ (~zer0x@1.55.170.131)
[11:02:03] *** Quits: dogbert_2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[11:02:19] *** Joins: dogbert_2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[11:03:48] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 240 seconds)
[11:08:06] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.4)
[11:08:32] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[11:11:09] *** Joins: anshupatia (uid29854@id-29854.helmsley.irccloud.com)
[11:12:40] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[11:15:28] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Ping timeout: 272 seconds)
[11:15:49] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[11:17:00] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[11:17:50] *** Joins: kts (~kts@103.73.237.215)
[11:21:00] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 240 seconds)
[11:31:39] <pony> hi
[11:33:46] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[11:35:12] *** Joins: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr)
[11:38:41] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 256 seconds)
[11:39:00] *** Joins: bebyx (~Thunderbi@user/bebyx)
[11:39:24] *** Joins: ekathva (~ekathva@2001:999:53:4449:1838:f296:952e:bb23)
[11:40:37] *** Quits: DSee (~DSee@66.115.182.102) (Ping timeout: 240 seconds)
[11:43:54] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 260 seconds)
[11:48:31] *** Joins: arinov_ (~arinov@213.194.126.155)
[11:48:52] *** Quits: herrhotzenplotz (~herrhotze@user/herrhotzenplotz) (Read error: Connection reset by peer)
[11:50:33] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[11:50:38] *** Joins: slidercrank (~slidercra@user/slidercrank)
[11:51:58] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Remote host closed the connection)
[11:52:06] *** Joins: herrhotzenplotz (~herrhotze@user/herrhotzenplotz)
[11:52:22] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[11:53:23] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Remote host closed the connection)
[11:53:50] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[11:54:38] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[11:56:24] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[11:56:55] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[11:56:59] *** Joins: mrig (~mrig@user/mrig)
[11:57:01] *** Quits: soapsudsxx (~soapsudsx@209.221.40.142) (Remote host closed the connection)
[11:58:50] *** Joins: soapsudsxx (~soapsudsx@209.221.40.142)
[12:02:21] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[12:04:05] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[12:04:39] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[12:05:43] *** Joins: bebyx (~Thunderbi@user/bebyx)
[12:06:22] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[12:07:01] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[12:08:26] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[12:09:56] *** Joins: Tang3nt-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[12:10:06] *** Quits: Tang3nt-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Remote host closed the connection)
[12:10:45] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 252 seconds)
[12:11:24] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 240 seconds)
[12:21:59] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (Ping timeout: 256 seconds)
[12:24:00] *** Quits: alch (~alch@151.44.66.222) (Read error: Connection reset by peer)
[12:24:48] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[12:26:25] *** Joins: meator (~meator@user/meator)
[12:28:16] *** Joins: alch (~alch@151.68.218.202)
[12:29:00] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 240 seconds)
[12:32:31] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 256 seconds)
[12:41:36] *** Quits: joev1 (~joev@user/joev) (Ping timeout: 272 seconds)
[12:42:23] *** Joins: joev1 (~joev@user/joev)
[12:43:51] *** Joins: cheakoirccloud (uid293319@id-293319.ilkley.irccloud.com)
[12:45:09] *** Joins: Jck_true (~jcktrue@user/jck-true/x-0200799)
[12:47:50] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:50:12] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 240 seconds)
[12:51:24] *** Joins: mrig (~mrig@user/mrig)
[12:53:01] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[12:53:07] *** Joins: karakedi (~eAC53C340@user/karakedi)
[12:55:46] *** Joins: bebyx (~Thunderbi@user/bebyx)
[12:58:17] *** Quits: the_lanetly_052 (~the_lanet@194.135.168.79) (Ping timeout: 240 seconds)
[12:58:17] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[13:01:16] *** Joins: gproto23 (~gproto23@user/gproto23)
[13:01:19] *** Quits: soapsudsxx (~soapsudsx@209.221.40.142) (Remote host closed the connection)
[13:01:52] *** Quits: jkotra (~jkotra@122.169.141.242) (Ping timeout: 272 seconds)
[13:03:44] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[13:07:20] *** Joins: kaph_ (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[13:07:37] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Ping timeout: 256 seconds)
[13:11:22] *** Quits: Zectbumo (~Zectbumo@2600:8802:5100:3f90:305c:3b7d:bfc5:900f) (Remote host closed the connection)
[13:12:34] *** Quits: not (~root@5.2.79.79) (Quit: Lost terminal)
[13:14:06] *** Joins: geezycee (~geezycee@104-2-220-227.lightspeed.jcvlfl.sbcglobal.net)
[13:16:09] *** Quits: joev1 (~joev@user/joev) (Ping timeout: 256 seconds)
[13:17:07] *** Joins: joev1 (~joev@user/joev)
[13:18:17] *** Quits: geezycee (~geezycee@104-2-220-227.lightspeed.jcvlfl.sbcglobal.net) (Ping timeout: 240 seconds)
[13:19:10] *** Joins: Thedarkb (~Thedarkb@82.3.80.190)
[13:24:40] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 272 seconds)
[13:26:09] *** Joins: X-Scale` (~ARM@83.223.233.227)
[13:26:31] *** Quits: ekathva (~ekathva@2001:999:53:4449:1838:f296:952e:bb23) (Quit: Leaving)
[13:28:12] *** Quits: X-Scale (~ARM@135.232.28.37.rev.vodafone.pt) (Ping timeout: 240 seconds)
[13:28:16] *** X-Scale` is now known as X-Scale
[13:28:49] *** Inline__ is now known as Inline
[13:29:26] *** Joins: lfs (~lfs@5.2.79.79)
[13:29:42] *** lfs is now known as not
[13:29:42] *** ChanServ sets mode: +o candide
[13:29:42] *** not was kicked by candide (Evaded *!*root@5.2.79.79 set by xgc)
[13:29:42] *** candide sets mode: +b *!*@5.2.79.79
[13:30:50] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[13:35:00] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 240 seconds)
[13:36:43] *** Joins: sysctl (~sysctl@88.215.77.255)
[13:41:32] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[13:41:34] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[13:41:50] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Client Quit)
[13:41:57] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[13:42:22] *** Quits: mrus (~mrus@gateway/tor-sasl/mrus) (Remote host closed the connection)
[13:42:44] *** Joins: mrus (~mrus@gateway/tor-sasl/mrus)
[13:42:53] *** Joins: aradesh (~aradesh@user/aradesh)
[13:44:10] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Client Quit)
[13:44:16] *** Quits: kts (~kts@103.73.237.215) (Quit: Konversation terminated!)
[13:48:18] *** Joins: Torr (~Torr@user/torr)
[13:48:58] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[13:50:18] *** Quits: TheDcoder (~TheDcoder@user/thedcoder) (Ping timeout: 250 seconds)
[13:52:37] *** Joins: Darkcoal (~user@user/Darkcoal)
[13:53:33] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 256 seconds)
[13:53:37] *** Quits: fluter (~fluter@user/fluter) (Read error: Connection reset by peer)
[13:53:56] *** Joins: fluter (~fluter@user/fluter)
[13:57:38] *** Joins: TheDcoder (~TheDcoder@user/thedcoder)
[14:03:57] *** Quits: hashfunc803 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Ping timeout: 240 seconds)
[14:07:31] *** Joins: katp32 (~katp32@S010680ea96e8dbba.vc.shawcable.net)
[14:07:43] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 256 seconds)
[14:08:49] *** Quits: joev1 (~joev@user/joev) (Ping timeout: 256 seconds)
[14:09:26] *** Joins: joev1 (~joev@user/joev)
[14:10:09] <katp32> not strictly a C question but any thoughts on processing a big array of data into some other big arrays of data at build time? it's too complicated to do with a constant expression so I can't do it in C compiler time (as far as I know at least), so my options are to just process it at runtime which would waste CPU, memory, and executable size, or write another seperate program to it and generate C code, which
[14:10:15] <katp32> would dramatically complicate the build system.. just wondering if there are any other creative ideas out there
[14:11:50] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 260 seconds)
[14:12:12] *** Joins: Darkcoal (~user@user/Darkcoal)
[14:12:28] *** Joins: yhsiveht (~Nishant@49.37.242.151)
[14:13:15] *** Quits: bionade24 (~bionade24@2a03:4000:33:45b::1) (Remote host closed the connection)
[14:13:24] *** Quits: thevishy (~Nishant@2405:201:f005:c007:88ef:fc07:ae6e:8552) (Ping timeout: 240 seconds)
[14:15:03] <dave0> maybe use a script? in perl?
[14:15:51] *** Joins: bionade24 (~bionade24@2a03:4000:33:45b::1)
[14:16:52] *** Quits: yhsiveht (~Nishant@49.37.242.151) (Client Quit)
[14:16:58] <katp32> I could yeah, but that would constitute a seperate program which would have to be maintained alongside the main codebase, which is annoying and likely to break stuff if changes are made in the future
[14:17:08] *** Joins: thevishy (~Nishant@2405:201:f005:c007:dd5:8563:45cc:6966)
[14:19:55] *** Quits: raym (~raym@user/raym) (Quit: kernel update, rebooting...)
[14:21:20] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[14:22:12] *** Joins: Viewday1156 (~Viewday@user/viewday)
[14:22:22] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 250 seconds)
[14:22:46] *** Viewday1156 is now known as Viewday115
[14:24:13] *** Joins: raym (~raym@user/raym)
[14:24:31] *** Joins: Darkcoal (~user@user/Darkcoal)
[14:24:43] *** Quits: zer0x__ (~zer0x@1.55.170.131) (Remote host closed the connection)
[14:25:05] *** Joins: Rounin (~david@84.212.130.215)
[14:26:23] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 268 seconds)
[14:26:27] *** Joins: zer0x (~zer0x@1.55.170.131)
[14:27:50] *** Joins: tolot (~tolot@dslb-088-064-152-098.088.064.pools.vodafone-ip.de)
[14:28:56] *** Quits: tolot (~tolot@dslb-088-064-152-098.088.064.pools.vodafone-ip.de) (Client Quit)
[14:29:22] *** Quits: slimbo (~qooupapn@142.167.143.188) (Remote host closed the connection)
[14:32:12] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[14:35:40] *** Joins: Nutcrawler (~sergio@217-180-232-30.sycmilaa.metronetinc.net)
[14:37:48] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[14:39:09] *** Quits: sysctl (~sysctl@88.215.77.255) (Quit: leaving)
[14:39:38] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[14:45:06] *** Joins: Burgundy (~NA@86.121.143.206)
[14:48:48] *** Quits: joev1 (~joev@user/joev) (Ping timeout: 250 seconds)
[14:49:45] *** Joins: joev1 (~joev@user/joev)
[14:51:23] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[14:51:30] *** Joins: zuplex (~zuplex@202.51.76.51)
[14:52:57] *** Quits: HisShadow_ (~HisShadow@user/hisshadow) (Remote host closed the connection)
[14:53:46] *** Quits: zuplex (~zuplex@202.51.76.51) (Remote host closed the connection)
[14:54:11] *** Joins: zuplex (~zuplex@202.51.76.51)
[14:54:12] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 240 seconds)
[14:55:11] *** Joins: imm_ (~imm_@user/imm/x-3405860)
[14:56:19] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[14:56:42] <kurahaupo> caze: If I hired someone to design a logo for me, I would expect to be able to do whatever I like with the logo without further reference to the designer. The lack of the right is what I mean by "non free". Of course, designing an entire font would cost a lot more than $75.
[14:58:25] *** Quits: zuplex (~zuplex@202.51.76.51) (Remote host closed the connection)
[15:00:37] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 240 seconds)
[15:01:27] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:01:55] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[15:02:12] <Xgc> katp32: No way to review without the clear requirement. "I need to do something" isn't sufficient.
[15:03:34] *** Quits: tejr (~tejr@user/tejr) (Quit: rebooting)
[15:04:30] *** Quits: zachel_ (~zachel@user/zachel) (Quit: DIsconnected: v7+nano)
[15:04:54] *** Joins: constxd (~brad@142.134.78.128)
[15:05:55] *** Quits: ymwm (~yingmanwu@27.153.164.187) (Remote host closed the connection)
[15:06:19] <dave0> katp32: what's the arrays and what needs to be done?
[15:07:59] *** Joins: zachel (~zachel@user/zachel)
[15:10:09] *** Joins: ymwm (~yingmanwu@27.153.164.187)
[15:10:13] <katp32> I have an array of vertices and I need to look for duplicates to create an index array, as well as duplicating each vertex to produce additional geometry
[15:10:24] *** Joins: tejr (~tejr@user/tejr)
[15:11:20] <katp32> since this process is deterministic and there's no need for the original vertex data at runtime, this could plausibly be done at build time, which would avoid the need to allocate large arrays at runtime
[15:11:48] *** Quits: meator (~meator@user/meator) (Ping timeout: 240 seconds)
[15:13:47] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[15:13:51] <constxd> sounds like a job for anything but C
[15:14:13] <constxd> Nim or D could prob do it
[15:15:32] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[15:16:27] <NRK> gcc might have some attributes for it, they have attributes for const and pure functions.
[15:16:47] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[15:17:43] <Xgc> katp32: What is your specific time/space concern?  How large is the original data?  What rough percentage represents duplicates?  You still aren't being specific enough.  The overall logic/requirement seems trivial.  Maybe you're overthinking this.  Without specific detail, it's tough to comment.
[15:17:55] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:18:06] *** Joins: Klinda (~superleag@user/klinda)
[15:18:07] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Client Quit)
[15:18:36] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[15:18:58] <Xgc> katp32: You already said you don't want to do this is build time.  By definition, that would be a separate program, regardless of the tools you used.
[15:19:06] *** Joins: jkotra (~jkotra@122.169.141.242)
[15:20:13] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Ping timeout: 256 seconds)
[15:20:36] *** Quits: unlink_ (~unlink@p200300ebcf357f0041bdfa1926ef3549.dip0.t-ipconnect.de) (Remote host closed the connection)
[15:21:00] <Xgc> katp32: Add the necessary logic to your program.  Provide arguments/options to allow preprocessing to generate index data only and a means to read that processed data as input or to generate / use that data at runtime as needed.
[15:21:11] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[15:21:45] <Xgc> katp32: There's no way to avoid the processing.  If it's not done by your target program, it's a separate program, and you already said you don't want that.
[15:22:35] *** Quits: admal (~admal@gateway/tor-sasl/admal) (Ping timeout: 240 seconds)
[15:22:50] <constxd> kings
[15:25:29] <constxd> what's everyone working on today
[15:29:45] *** candide sets mode: -o candide
[15:30:16] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:31:05] *** Joins: csrf (~csrf@user/csrf)
[15:31:32] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[15:32:38] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[15:33:40] *** Joins: meator (~meator@user/meator)
[15:34:37] *** Quits: Masklin_Gurder (~joel@bioinf-serv.biol.lu.se) (Ping timeout: 240 seconds)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:59] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 252 seconds)
[15:41:11] *** Joins: paper_ (~paper_@user/paper)
[15:41:32] *** Joins: ozzz (~oz@46.49.41.80)
[15:42:06] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Ping timeout: 272 seconds)
[15:44:00] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 272 seconds)
[15:44:19] <fowl> writing a json parser and eventually schema validator
[15:45:18] <fowl> I couldn't find a test library I liked so I am working on one of those too
[15:45:23] <sham1> Wait, there's a schema format for JSON? I thought one of the reasons people like JSON over, say, XML is because it's schema-less
[15:45:57] <fowl> yeah I will implement a couple versions of this https://json-schema.org/
[15:47:02] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Remote host closed the connection)
[15:47:03] *** Joins: random-nick (~random-ni@87.116.176.196)
[15:47:14] *** Joins: zuplex (~zuplex@202.51.76.51)
[15:47:18] <constxd> love json
[15:47:29] <constxd> https://github.com/marchelzo/ty/blob/master/src/json.c
[15:47:37] <constxd> that's the json parser for my toy language
[15:48:32] <fowl> jmp_buf caught my attention, would not have expected you to need that
[15:49:08] <fowl> ah I see this is just to deal with your GC
[15:49:10] *** Joins: tolot (~tolot@dslb-088-064-152-098.088.064.pools.vodafone-ip.de)
[15:49:29] <constxd> yeah there are certainly other ways to handle failure
[15:49:49] <sham1> Boehem
[15:52:30] <constxd> i was considering it for a while
[15:52:32] <constxd> but
[15:52:43] *** Joins: Everything (~Everythin@37.115.210.35)
[15:52:47] <constxd> NIH
[15:54:58] <sham1> Understandable
[15:56:10] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[15:56:23] *** Joins: admal (~admal@gateway/tor-sasl/admal)
[15:56:53] *** Joins: gproto23 (~gproto23@user/gproto23)
[15:58:40] *** Quits: soul-d (~uknown@user/soul-d) (Read error: Connection reset by peer)
[16:04:49] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[16:06:01] *** Joins: mahmutov (~mahmutov@37.155.48.73)
[16:07:33] *** Joins: cruncher (~cruncher@79.116.74.92)
[16:09:22] *** Joins: slimbo (~qooupapn@142.167.143.188)
[16:09:33] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 256 seconds)
[16:14:11] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[16:14:31] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[16:15:01] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[16:15:04] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[16:16:54] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[16:21:11] *** Joins: Viewday1155 (~Viewday@user/viewday)
[16:22:39] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[16:22:39] *** Viewday1155 is now known as Viewday115
[16:24:34] *** Joins: drbeco (~beco@user/beco)
[16:26:26] *** Quits: alch (~alch@151.68.218.202) (Ping timeout: 272 seconds)
[16:26:36] *** Quits: vancz (~vancz@user/vancz) (Ping timeout: 240 seconds)
[16:27:36] *** Joins: alch (~alch@151.68.192.116)
[16:29:04] *** Joins: vancz (~vancz@user/vancz)
[16:32:47] *** Joins: yhsiveht (~Nishant@49.37.242.151)
[16:33:49] *** Joins: ymwm_ (~yingmanwu@27.153.164.97)
[16:36:01] *** slimbo is now known as ywmw_
[16:36:16] *** Quits: thevishy (~Nishant@2405:201:f005:c007:dd5:8563:45cc:6966) (Ping timeout: 250 seconds)
[16:36:18] *** Quits: ywmw_ (~qooupapn@142.167.143.188) (Remote host closed the connection)
[16:36:34] *** Quits: ymwm (~yingmanwu@27.153.164.187) (Ping timeout: 272 seconds)
[16:37:52] *** Quits: vancz (~vancz@user/vancz) (Ping timeout: 256 seconds)
[16:38:04] *** Quits: noteness (~noteness@user/noteness) (Remote host closed the connection)
[16:38:26] *** Joins: noteness (~noteness@user/noteness)
[16:39:15] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[16:41:17] *** Joins: vancz (~vancz@user/vancz)
[16:43:32] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 240 seconds)
[16:44:59] *** Joins: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru)
[16:45:13] *** Quits: meator (~meator@user/meator) (Ping timeout: 256 seconds)
[16:57:07] *** Quits: constxd (~brad@142.134.78.128) (Ping timeout: 256 seconds)
[16:59:14] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[17:01:12] *** Quits: zuplex (~zuplex@202.51.76.51) (Remote host closed the connection)
[17:01:32] *** Joins: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0)
[17:01:53] *** Joins: milesrout (ce261f06ff@2604:bf00:561:2000::257)
[17:03:41] *** Joins: Tempesta (~Tempesta@user/tempesta)
[17:04:45] *** Quits: cruncher (~cruncher@79.116.74.92) (Ping timeout: 256 seconds)
[17:04:50] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[17:09:00] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:12:29] *** Joins: cruncher (~cruncher@79.116.76.92)
[17:13:54] *** ozzz is now known as om3ga
[17:14:18] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[17:14:49] *** Joins: slimbo (~qooupapn@142.167.143.188)
[17:16:14] *** Joins: acerbic (~acerbic@cs-xdata-50-86-51-236.cspire.com)
[17:16:32] *** Quits: Tempesta (~Tempesta@user/tempesta) (Ping timeout: 265 seconds)
[17:18:15] *** Joins: bebyx (~Thunderbi@user/bebyx)
[17:18:44] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 250 seconds)
[17:20:17] *** Joins: shivesh (~shivesh@user/shivesh)
[17:21:32] *** Joins: tmpm697 (~tmpm697@171.224.181.28)
[17:22:03] *** Quits: ymwm_ (~yingmanwu@27.153.164.97) (Ping timeout: 256 seconds)
[17:24:31] *** Joins: swinnenb (~swinnenb@user/swinnenb)
[17:27:40] *** Joins: soul-d (~uknown@user/soul-d)
[17:30:33] *** Quits: zer0x (~zer0x@1.55.170.131) (Ping timeout: 256 seconds)
[17:32:18] *** Quits: frost (~frost@user/frost) (Ping timeout: 272 seconds)
[17:33:36] *** Quits: admal (~admal@gateway/tor-sasl/admal) (Quit: leaving)
[17:34:17] *** Joins: plastico (~plastico@neomutt/plastico)
[17:36:23] *** Joins: Tempesta (~Tempesta@user/tempesta)
[17:39:16] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 272 seconds)
[17:39:29] *** Joins: CodePoint (~CodePoint@2600:1700:3070:3790::11)
[17:39:32] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[17:39:54] *** Quits: kaph_ (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Ping timeout: 272 seconds)
[17:40:17] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[17:41:11] *** Joins: meator (~meator@user/meator)
[17:49:24] *** Joins: bnchs (~bnchs@160.177.44.151)
[17:49:50] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[17:50:23] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 256 seconds)
[17:52:27] *** Parts: TheDcoder (~TheDcoder@user/thedcoder) (<Insert Generic Part Message>)
[17:54:49] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 268 seconds)
[17:57:22] *** Joins: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:d930:15ec:da1f:b8d9)
[17:57:25] *** Quits: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:d930:15ec:da1f:b8d9) (Client Quit)
[17:57:33] *** Joins: strajder (~strajder@user/strajder)
[18:01:13] *** Quits: CodePoint (~CodePoint@2600:1700:3070:3790::11) (Quit: CodePoint)
[18:02:51] *** Joins: HisShadow (~HisShadow@user/hisshadow)
[18:03:06] *** Quits: dogbert_2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[18:03:10] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[18:03:23] *** Joins: dogbert_2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[18:03:24] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[18:05:15] *** Joins: the_lanetly_052 (~the_lanet@194.135.166.223)
[18:07:12] *** Parts: katp32 (~katp32@S010680ea96e8dbba.vc.shawcable.net) ()
[18:08:17] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[18:09:23] *** Quits: yhsiveht (~Nishant@49.37.242.151) (Quit: Leaving)
[18:10:22] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[18:10:39] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[18:12:00] *** Quits: AmR (~AmREiSa@156.199.197.9) (Remote host closed the connection)
[18:12:27] *** Joins: AmR (~AmREiSa@156.199.197.9)
[18:12:52] *** Joins: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:c804:37f0:cf8e:6b6a)
[18:15:26] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[18:15:46] *** Joins: gproto23 (~gproto23@user/gproto23)
[18:16:01] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Remote host closed the connection)
[18:16:54] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[18:18:09] *** Quits: acerbic (~acerbic@cs-xdata-50-86-51-236.cspire.com) (Read error: Connection reset by peer)
[18:19:05] *** Joins: constxd (~brad@142.134.78.128)
[18:21:24] *** Joins: Viewday1158 (~Viewday@user/viewday)
[18:21:56] *** Quits: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:c804:37f0:cf8e:6b6a) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:23:15] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[18:23:16] *** Viewday1158 is now known as Viewday115
[18:23:50] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[18:25:27] *** Joins: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:c804:37f0:cf8e:6b6a)
[18:26:05] *** Quits: AmR (~AmREiSa@156.199.197.9) (Remote host closed the connection)
[18:26:11] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[18:26:26] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[18:26:46] *** Joins: AmR (~AmREiSa@156.199.197.9)
[18:27:09] *** Quits: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru) (Read error: Connection reset by peer)
[18:28:12] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[18:29:37] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[18:30:39] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 256 seconds)
[18:37:25] *** Quits: oilt^ (~oilt@50.224.20.226) (Ping timeout: 256 seconds)
[18:37:48] *** Joins: donald (~donald@182.1.75.115)
[18:40:51] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:d400:5de4:279e:c12c)
[18:40:51] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:d400:5de4:279e:c12c) (Changing host)
[18:40:51] *** Joins: skapata (~Skapata@user/skapata)
[18:45:44] *** Quits: bebyx (~Thunderbi@user/bebyx) (Quit: bebyx)
[18:47:13] *** Quits: AmR (~AmREiSa@156.199.197.9) (Remote host closed the connection)
[18:48:12] <beastie> const type *p = something;/
[18:50:20] *** Joins: AmR (~AmREiSa@156.199.197.9)
[18:50:26] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[18:50:27] *** Quits: constxd (~brad@142.134.78.128) (Ping timeout: 256 seconds)
[18:52:02] *** Joins: Miles2Go (~Miles2Go@1410789-v106.1225-static.fshrinaa.metronetinc.net)
[18:53:21] *** Quits: Miles2Go (~Miles2Go@1410789-v106.1225-static.fshrinaa.metronetinc.net) (Client Quit)
[18:54:59] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[18:55:17] <bnchs> so i'm at a dead end here, is there some way to reallocate the buffer to store more in a character loop, instead of reallocating every character
[18:55:31] <bnchs> malloc has too much overhead
[18:56:22] <fizzie> Sure, just keep track of two sizes (how much you've used, and how much you've allocated), and only realloc in larger chunks (say, doubling the size every time) whenever it gets full.
[18:57:29] <bnchs> and then realloc at the end, to free the unused parts?
[18:58:25] *** Quits: AmR (~AmREiSa@156.199.197.9) (Remote host closed the connection)
[18:58:52] *** Joins: AmR (~AmREiSa@156.199.197.9)
[18:59:04] <fizzie> Yeah.
[18:59:07] <fizzie> ,cc char *buf = malloc(1); size_t len = 0, cap = 1; int c; while ((c = getchar()) != EOF) { if (len == cap) { cap *= 2; buf = realloc(buf, cap); } buf[len++] = c; } buf = realloc(buf, len); fwrite(buf, 1, len, stdout); // error-checking omitted
[18:59:09] <candide> fizzie: Be free and open and breezy! Enjoy! Things won't get any better so get used to it.
[18:59:57] <bnchs> ok
[19:01:15] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[19:01:51] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[19:02:37] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[19:03:26] <fizzie> Go's resize strategy is to double the size for "small" buffers, and use a factor of 1.25 for "large" ones, that's a reasonable general plan as well. Or if you know more about what sort of amounts to expect, use that to decide. Sometimes a linear thing (increase the size by a constant amount, say one page's worth) could be fine too.
[19:06:04] <bnchs> yeah
[19:06:12] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 240 seconds)
[19:06:13] <bnchs> i'm afraid of allocating way too much than whats needed
[19:06:19] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Ping timeout: 256 seconds)
[19:08:55] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[19:09:45] *** Quits: sh0ne (~sh0ne@2a06:5b00:6fb:2a00:c804:37f0:cf8e:6b6a) (Quit: Textual IRC Client: www.textualapp.com)
[19:10:06] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[19:12:25] *** Joins: fapple (~user@193.32.249.138)
[19:12:41] *** Quits: fapple (~user@193.32.249.138) (Client Quit)
[19:13:11] *** Joins: fapple (~user@193.32.249.138)
[19:13:12] *** Quits: fapple (~user@193.32.249.138) (Client Quit)
[19:13:38] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 272 seconds)
[19:14:05] *** Joins: fapple (~user@193.32.249.138)
[19:14:27] *** Quits: fapple (~user@193.32.249.138) (Client Quit)
[19:15:54] *** Quits: AmR (~AmREiSa@156.199.197.9) (Remote host closed the connection)
[19:16:38] *** Joins: AmR (~AmREiSa@156.199.197.9)
[19:16:58] *** Joins: fapple (~user@193.32.249.138)
[19:17:51] *** Quits: fapple (~user@193.32.249.138) (Client Quit)
[19:18:12] *** Quits: gnoo (gnoo@user/gnoo) (Ping timeout: 240 seconds)
[19:21:03] *** Quits: jrm (~jrm@156.34.173.250) (Ping timeout: 256 seconds)
[19:26:59] *** Quits: kurahaupo (~kurahaupo@pa49-182-8-44.pa.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[19:28:22] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[19:29:18] *** Quits: AmR (~AmREiSa@156.199.197.9) (Remote host closed the connection)
[19:30:02] *** Joins: AmR (~AmREiSa@156.199.197.9)
[19:32:35] *** Quits: donald (~donald@182.1.75.115) (Read error: Connection reset by peer)
[19:32:49] *** Joins: vysn (~vysn@user/vysn)
[19:33:10] *** Joins: Waynes (~Waynes@user/waynes)
[19:34:04] *** Quits: AmR (~AmREiSa@156.199.197.9) (Remote host closed the connection)
[19:34:31] *** Joins: AmR (~AmREiSa@156.199.197.9)
[19:34:39] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[19:35:10] *** Joins: ymwm_ (~yingmanwu@27.153.164.97)
[19:37:26] *** Joins: velgin (~velgin@pool-96-237-105-119.bstnma.fios.verizon.net)
[19:39:13] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 256 seconds)
[19:41:15] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 240 seconds)
[19:42:38] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[19:43:19] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[19:44:02] *** Quits: yustin (~yustin@user/yustin) (Ping timeout: 272 seconds)
[19:44:16] *** Joins: ivang (~ivang@net-93-71-95-20.cust.vodafonedsl.it)
[19:45:10] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[19:45:25] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[19:45:25] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[19:45:25] *** Joins: wroathe (~wroathe@user/wroathe)
[19:45:49] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Remote host closed the connection)
[19:46:40] *** Quits: ivang (~ivang@net-93-71-95-20.cust.vodafonedsl.it) (Quit: leaving)
[19:47:48] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 252 seconds)
[19:49:06] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[19:50:26] *** Quits: AmR (~AmREiSa@156.199.197.9) (Remote host closed the connection)
[19:50:55] *** Joins: AmR (~AmREiSa@156.199.197.9)
[19:53:44] <Waynes> Dear rubber ducks/C programmers, I began writing a lengthy question, but as I refined the question, I figured out the solution myself. Thank you for always being there for me.
[19:53:56] *** Quits: Darkcoal (~user@user/Darkcoal) (Ping timeout: 256 seconds)
[19:54:28] *** Joins: tejr (~tejr@user/tejr)
[19:54:47] * nitrix quacks.
[19:55:05] <Waynes> 🦆
[19:55:51] *** Joins: Darkcoal (~user@user/Darkcoal)
[19:56:05] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[19:56:20] <Red> sometimes just typing out the question can reveal the answer:-)
[20:00:27] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 252 seconds)
[20:00:29] *** Quits: AmR (~AmREiSa@156.199.197.9) (Remote host closed the connection)
[20:00:37] <bnchs> wtf is a rubber duck
[20:00:46] <bnchs> don't tell me you unironically talk to rubber duck
[20:00:55] *** Joins: AmR (~AmREiSa@156.199.197.9)
[20:00:55] <bnchs> like an insane guy
[20:02:40] <nitrix> The ideal growth rate for re-use when N tends towards infinite is supposed to be ϕ (phi) = 1.618, but for a finite N, 1.5 works better.
[20:04:14] <nitrix> I'm not sure why Python uses 1.125, Go 1.2 and lot of C developers 2.0... Ruby and .NET seems correct with 1.5.
[20:04:22] <bnchs> yes
[20:04:33] <bnchs> i've considered doing 1.5
[20:04:42] <bnchs> instead of 2
[20:04:45] *** Joins: the_lanetly_052_ (~the_lanet@185.30.91.138)
[20:04:56] *** Quits: AmR (~AmREiSa@156.199.197.9) (Remote host closed the connection)
[20:05:08] <nitrix> Maybe there are other concerns like pressure on the garbage collector, it's unfortunately not well documented and we may never know.
[20:05:38] *** Joins: AmR (~AmREiSa@156.199.197.9)
[20:05:46] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[20:07:00] *** Quits: the_lanetly_052 (~the_lanet@194.135.166.223) (Ping timeout: 240 seconds)
[20:07:19] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[20:08:12] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[20:08:55] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[20:10:16] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[20:10:33] <fizzie> s/Go 1.2/Go 1.25/ (maybe that was just a dropped 5). And I imagine it's some consideration around how N never actually *does* get infinitely large. But I've not seen any specific rationale around it.
[20:10:41] <fizzie> As of pretty recently, the Go transition from 2x to 1.25x is also no longer a step, but a more gradual thing, as described in https://cs.opensource.google/go/go/+/2dda92ff6f9f07eeb110ecbf0fc2d7a0ddd27f9d
[20:11:10] *** Quits: bleb (~cm@user/bleb) (Remote host closed the connection)
[20:11:36] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 245 seconds)
[20:12:32] *** Quits: beowuff (~beowuff@50.35.126.161) (Quit: Leaving)
[20:13:22] *** Quits: chris1 (~chris@ip-103-85-39-45.syd.xi.com.au) (Ping timeout: 250 seconds)
[20:14:07] <nitrix> I'm assuming the 2x is an intuitive choice if you want the multiplication to be fast, though I don't know if the runtime performance difference that you incur from 1.5x to 2x justifies it.
[20:14:52] <nitrix> It probably depends what your starting point for the buffer size is and how many reallocation you trigger.
[20:14:53] *** Quits: bnchs (~bnchs@160.177.44.151) (Ping timeout: 256 seconds)
[20:15:33] *** Quits: AmR (~AmREiSa@156.199.197.9) (Remote host closed the connection)
[20:15:39] *** Joins: seninha (~chatzilla@user/seninha)
[20:16:00] *** Joins: AmR (~AmREiSa@156.199.197.9)
[20:16:06] *** Joins: beowuff (~beowuff@50.35.126.161)
[20:16:38] <Waynes> I think there was some argument that 2x is bad because due to the malloc header, a new chunk will never fit in previously deallocated empty space, so the factor should be slightly smaller. Not sure if that matters with paging though.
[20:17:08] <nitrix> fizzie, Ah nice. That aligns with my intuition. They have different growth factors based on the initial si ---- wait what, why is it based on the number of elements?
[20:17:51] *** Joins: jrm (~jrm@156.34.173.250)
[20:20:43] <nitrix> Oh they're just doing the arithmetic in terms of elements, it's all the same.
[20:21:05] *** Quits: Viewday115 (~Viewday@user/viewday) (Quit: Ping timeout (120 seconds))
[20:21:22] *** Joins: Viewday115 (~Viewday@user/viewday)
[20:23:29] *** Joins: velgin_ (~velgin@pool-96-237-105-119.bstnma.fios.verizon.net)
[20:24:00] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[20:24:45] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Client Quit)
[20:24:55] *** Quits: AmR (~AmREiSa@156.199.197.9) (Remote host closed the connection)
[20:24:55] *** Quits: velgin (~velgin@pool-96-237-105-119.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[20:25:28] *** Joins: oriba (~oriba@dynamic-077-013-129-008.77.13.pool.telefonica.de)
[20:26:28] *** Quits: alch (~alch@151.68.192.116) (Ping timeout: 272 seconds)
[20:27:17] *** Joins: chris1 (~chris@ip-103-85-39-127.syd.xi.com.au)
[20:27:59] *** Joins: alch (~alch@151.34.168.141)
[20:28:26] <nitrix> My data structures do the same. I keep a used_count and a capacity_count of elements, the realloc does the sizeof multiplication.
[20:30:35] <nomagno> What is this 1.5/phi/2.0 facot for?
[20:30:37] <nomagno> Factor*
[20:30:40] <nomagno> I don't get it
[20:31:05] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[20:31:34] *** Quits: tolot (~tolot@dslb-088-064-152-098.088.064.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[20:31:48] <nomagno> If I had to multiply by 1.5 in C in a super-fast way I'd probably do (var + (cap >> 1))
[20:32:05] <nomagno> (cap + (cap >> 1)), sorry
[20:32:36] <nomagno> It's not exact multiplication, so I assume compilers won't actually simplify floating point multiplication to that
[20:32:39] <nomagno> It would be wrong
[20:33:27] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[20:35:10] <fizzie> For an unsigned `cap`, they *would* simplify `cap + cap/2;` to that, and that's arguably more obvious.
[20:35:20] *** Quits: ymwm_ (~yingmanwu@27.153.164.97) (Ping timeout: 272 seconds)
[20:35:51] *** Quits: Thedarkb (~Thedarkb@82.3.80.190) (Ping timeout: 256 seconds)
[20:35:58] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 272 seconds)
[20:37:39] <nomagno> I still don't understand what this capacity growth algorithm is useful for
[20:37:44] <nomagno> Example?
[20:37:45] <Waynes> gcc does not simplify to that and I believe it is not allowed to due to undefined behavior https://landley.net/c99-draft.html#6.3.1.4 "If the  value of the integral part cannot be represented by the integer type, the behavior is undefined.43) "
[20:38:07] *** Quits: ejjfunky (~ejjfunky2@125.164.19.180) (Remote host closed the connection)
[20:38:29] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[20:39:31] <Waynes> On the other hand, if the behavior is undefined, why isn't gcc simplifying it.
[20:39:37] <nomagno> Uh, what?
[20:40:00] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[20:40:25] <nomagno> num + num/2 doesn't imply any UB
[20:40:36] <Waynes> Yes, but num * 1.5 does
[20:40:47] <nomagno> Oh yeah, for sure
[20:41:56] <Waynes> num * 3 / 2 will be optimized by gcc, so that's nice
[20:41:57] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[20:42:29] <Waynes> (if using unsigned data types of course)
[20:42:59] <fizzie> ,cc size_t cap = 1111111111111111111, x = cap + cap/2, y = (size_t)(1.5 * cap); printf("%zu != %zu", x, y);
[20:43:01] <candide> fizzie: 1666666666666666666 != 1666666666666666752
[20:43:06] *** Quits: vancz (~vancz@user/vancz) (Quit: vancz)
[20:43:56] <nomagno> I really wish C had a builtin `struct rational { _Bool sign; unsigned num; unsigned denom; };` type in some header along with functions to operate on fractions
[20:44:17] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 240 seconds)
[20:44:24] <nomagno> It's probably too slow without specifically tailored compiler optimization
[20:44:43] <Waynes> fractions overflow easily, so you probably would want a bigint type as well
[20:45:39] <nomagno> Well "if the target platform has uint32_t"
[20:45:42] <nomagno> Or something like that
[20:45:55] <nomagno> Then you have `struct bigrational`
[20:46:05] <nomagno> Or well, just uint32_t
[20:46:10] <nomagno> As the numbah
[20:46:34] <nomagno> ubiggestint_t
[20:47:30] *** Joins: jmes (~james@216.154.22.238)
[20:47:58] <Waynes> uintmax_t
[20:48:12] <nomagno> Fair
[20:48:26] <jmes> What does the number at the end of a shared library, for example libx265.so.199, mean? I would've thought it corresponded to the version but it doesn't (I have v3.5).
[20:48:33] *** Joins: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder)
[20:48:35] <nomagno> Uh... Slightly offtopic but anyone else hate the io stream c++ syntax?
[20:48:52] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[20:48:55] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[20:49:30] <nomagno> jmes: its for versioning
[20:49:34] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[20:49:38] <nomagno> But I'm unsure what kind of versioning
[20:50:19] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:c137:5b23:feaf:eefd)
[20:50:25] <nomagno> https://unix.stackexchange.com/questions/475/how-do-so-shared-object-numbers-work
[20:51:17] <fizzie> Sometimes people make their "human" version numbers (like "3.5") entirely distinct from "API" version numbers (in terms of what's backwards-compatible for binaries).
[20:51:59] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Client Quit)
[20:52:16] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:52:18] <jmes> nomagno & fizzie: Thanks, I'm also wondering why it provides symbols ending in that number. For example (in the libx265 case) it exposes x265_encoder_open_199 but not x265_encoder_open - which was confusing to me.
[20:52:28] <BtbN> It's also ABI version, not neccesarily lined up with API version
[20:52:32] *** Joins: FatAlbert (~archer@user/tessio)
[20:52:53] <BtbN> The x265 API differs from its ABI
[20:52:54] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[20:53:11] <BtbN> x265_encoder_open is just a macro that calls the respective versioned symbol
[20:53:41] <FatAlbert> you won't get any help here regarding x265 lo;
[20:53:43] <FatAlbert> l
[20:53:52] <FatAlbert> but go ahead ..
[20:53:59] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[20:54:17] <jmes> Yeah, I'm a noobie so I'm just figuring out what I should know in general
[20:55:30] <FatAlbert> overall this channel is full of ego and you won't get any help here beyond syntax
[20:55:33] *** Joins: soapsudsxx (~soapsudsx@209.221.40.142)
[20:55:35] <Red> a question specifically about x265 wasn't asked though, it was just an example for ABI
[20:56:08] <jmes> I used nm to view the symbols in that lib and found some with _199 and some without. For example I was able to call x265_param_alloc (*without* the _199) but not x265_encoder_open.
[20:56:08] <fizzie> Symbol versioning helps (at least) ensure code built against version X doesn't ever accidentally get linked with version Y, which might provide functions with the same name but different semantics. Though I don't think going that far (of doing it "by hand") is particularly commonplace.
[20:56:40] <jmes> The info you guys have given is helping me understand this is probably a package management issue, though I'm not certain
[20:57:02] <BtbN> I think it's an Android-Workaround, since androids dynamic linker does not support sonames, and x265 maintainers got annoyed about bug reports caused by mismatching libraries
[20:57:14] <Red> brother.
[20:57:27] <Red> this is getting rather off-topic though; #c-offtopic
[20:57:58] <jmes> Will pursue further if necessary in the offtopic channel, thanks :)
[20:58:00] <sham1> The problem with rationals is that they get really big really quick
[20:58:07] <sham1> They're nice since they're always precise
[20:58:14] <sham1> But that's the trade-off
[20:58:49] <sham1> Of course we already have a way of doing fractions which is even hardware-accelerated, that being floating point
[20:59:24] <sham1> The problem of course is that those are mathematically frankly disgusting
[20:59:33] <FatAlbert> so many cookie-jar opinions ..
[21:00:35] <FatAlbert> jmes: i hope bu now you see what i mean
[21:05:32] *** Quits: FatAlbert (~archer@user/tessio) (Quit: WeeChat 3.4)
[21:05:35] *** Quits: cheakoirccloud (uid293319@id-293319.ilkley.irccloud.com) ()
[21:09:50] *** Quits: jfsimon1981 (~jfsimon19@25.82.75.86.rev.sfr.net) (Read error: Connection reset by peer)
[21:10:05] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:dd8:2efd:65ad:4167)
[21:10:06] *** Joins: jfsimon1981 (~jfsimon19@25.82.75.86.rev.sfr.net)
[21:11:39] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[21:12:39] *** Joins: tiotags (~tiotags@user/tiotags)
[21:13:22] *** Joins: ferdna (~ferdna@user/ferdna)
[21:15:19] *** Joins: bleb (~cm@user/bleb)
[21:16:02] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 240 seconds)
[21:20:02] *** Quits: tmpm697 (~tmpm697@171.224.181.28) (Quit: Lost terminal)
[21:24:18] <jmes> /join #gentoo
[21:27:24] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[21:30:36] *** Parts: Waynes (~Waynes@user/waynes) ()
[21:32:12] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Read error: Connection reset by peer)
[21:32:37] *** Joins: aradesh (~aradesh@user/aradesh)
[21:33:00] *** Quits: tiotags (~tiotags@user/tiotags) (Remote host closed the connection)
[21:33:06] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[21:33:27] *** Joins: tiotags (~tiotags@user/tiotags)
[21:33:36] *** Joins: magla (~gelignite@55d44f73.access.ecotel.net)
[21:33:37] *** Quits: noonien (~noonien@user/noonien) (Quit: Ping timeout (120 seconds))
[21:33:55] *** Joins: noonien (~noonien@user/noonien)
[21:34:43] *** Joins: unknow (~i.am@user/marlboro)
[21:35:03] *** Quits: gnx (~heh@yep.i.am.1337.cx) (Ping timeout: 256 seconds)
[21:39:46] *** Joins: vancz (~vancz@user/vancz)
[21:46:28] *** Joins: gnoo (gnoo@user/gnoo)
[21:46:32] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[21:46:48] *** Quits: vancz (~vancz@user/vancz) (Quit: vancz)
[21:47:52] *** Joins: vancz (~vancz@user/vancz)
[21:50:12] *** Joins: acerbic (~acerbic@cs-xdata-50-86-51-236.cspire.com)
[21:50:44] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[21:51:37] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 268 seconds)
[21:54:03] *** Joins: Torr (~Torr@user/torr)
[21:55:12] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[21:55:27] *** Joins: whatsupboy (~whatsupbo@user/scobydoo)
[21:55:45] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[22:02:12] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 240 seconds)
[22:02:14] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:dd8:2efd:65ad:4167) (Ping timeout: 260 seconds)
[22:09:15] *** Joins: Akuli (~Akuli@87-94-110-209.bb.dnainternet.fi)
[22:10:28] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[22:14:12] *** coc0nut_ is now known as coc0nut
[22:16:21] *** Joins: zzbot (~zbot@68.23.85.99)
[22:19:27] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[22:19:51] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[22:20:22] *** Joins: Betal (~Betal@user/betal)
[22:21:07] *** Joins: Viewday1156 (~Viewday@user/viewday)
[22:21:11] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Quit: leaving)
[22:22:55] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[22:22:56] *** Viewday1156 is now known as Viewday115
[22:23:17] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:c19d:39a5:11c7:fcb0) (Ping timeout: 240 seconds)
[22:24:14] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 250 seconds)
[22:24:40] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[22:25:32] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:8e3b:ccf1:d93a:5b17)
[22:30:21] *** Joins: Zectbumo (~Zectbumo@2600:8802:5100:3f90:305c:3b7d:bfc5:900f)
[22:30:49] *** Quits: anshupatia (uid29854@id-29854.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[22:31:18] *** Quits: wlemuel (~wlemuel@210.22.124.110) (Read error: Connection reset by peer)
[22:31:30] *** Joins: wlemuel (~wlemuel@210.22.124.110)
[22:32:17] *** Quits: wlemuel (~wlemuel@210.22.124.110) (Read error: Connection reset by peer)
[22:33:06] *** Quits: cruncher (~cruncher@79.116.76.92) (Quit: Leaving)
[22:34:17] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-1-225.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[22:35:47] *** Quits: acerbic (~acerbic@cs-xdata-50-86-51-236.cspire.com) (Read error: Connection reset by peer)
[22:36:30] *** Joins: wlemuel (~wlemuel@210.22.124.110)
[22:37:45] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:8e3b:ccf1:d93a:5b17) (Ping timeout: 252 seconds)
[22:39:51] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:18d4:9beb:f7a2:366e)
[22:41:55] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[22:43:48] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:18d4:9beb:f7a2:366e) (Ping timeout: 240 seconds)
[22:45:12] *** Joins: bnchs (~bnchs@41.141.13.79)
[22:53:01] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[22:55:58] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220226204633])
[22:57:17] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 240 seconds)
[23:03:39] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[23:05:38] *** Quits: jsmolic (~quassel@gentoo/developer/jsmolic) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:05:58] *** Joins: jsmolic (~quassel@gentoo/developer/jsmolic)
[23:06:29] *** mcleuder_ is now known as mcleuder
[23:17:21] *** Quits: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net) (Ping timeout: 256 seconds)
[23:20:43] *** finstern1s is now known as finsternis
[23:24:02] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[23:24:24] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[23:25:09] *** Joins: mcleuder_ (~mcleuder@gateway/tor-sasl/mcleuder)
[23:25:15] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Ping timeout: 240 seconds)
[23:25:17] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Ping timeout: 256 seconds)
[23:26:06] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[23:29:23] *** Quits: g2anj (~v@58.228.230.4) (Quit: .)
[23:29:53] *** Joins: constxd (~brad@142.134.78.128)
[23:29:55] <constxd> kings
[23:30:06] <constxd> amazon driver just dropped by
[23:30:24] <constxd> brought me my copy of APIUE 3rd edition
[23:30:41] <constxd> thought i was hardcover but it's paperback... very sad
[23:30:54] *** Quits: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f) (Ping timeout: 260 seconds)
[23:30:59] <constxd> s/i/it/
[23:31:14] *** Quits: jmes (~james@216.154.22.238) (Remote host closed the connection)
[23:33:31] *** Parts: slimbo (~qooupapn@142.167.143.188) ()
[23:33:48] <Inline> eh ?
[23:34:04] <Inline> normaly you see if it's hardcover or not when you buy
[23:34:19] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[23:34:22] <Inline> so either you were in a hurry or i don't otherwise absentminded
[23:34:50] <Inline> s/or i don't know,/
[23:35:15] <constxd> yes i was absentminded
[23:35:23] <constxd> well i just assumed it was hardcover idk why
[23:35:29] <Inline> heh
[23:35:33] <constxd> it was like $76 that's a lot for paperback
[23:36:06] <Inline> nah, it's in the normal range
[23:36:20] <Inline> some are as low as 20 euros to 90 euros
[23:36:30] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:cfdc:46b6:d3d6:d388)
[23:36:37] <Inline> and most hardcovers are above 120 or so
[23:37:01] <Inline> if you buy used that's different ofc.
[23:38:00] <Inline> it's not only about the production cost of the book itself, i think it also matters if the book is rare or not
[23:38:15] <Inline> rare books can cost upto 1000 i think
[23:38:38] *** Quits: tiotags (~tiotags@user/tiotags) (Quit: Leaving)
[23:39:05] <Inline> i think i can assume 150-300 euros for most hardcovers
[23:41:46] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[23:43:59] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 256 seconds)
[23:50:18] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[23:52:15] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: Lost terminal)
[23:56:06] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 272 seconds)
[23:59:06] *** Joins: wroathe (~wroathe@50-205-197-50-static.hfc.comcastbusiness.net)
[23:59:06] *** Quits: wroathe (~wroathe@50-205-197-50-static.hfc.comcastbusiness.net) (Changing host)
[23:59:06] *** Joins: wroathe (~wroathe@user/wroathe)
[23:59:22] *** Joins: geezycee (~geezycee@2600:1700:3fc6:4010:3493:70d8:e60:cc7f)
[23:59:55] *** Quits: karakedi (~eAC53C340@user/karakedi) (Read error: Connection reset by peer)
