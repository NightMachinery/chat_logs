[00:00:04] *** Joins: gehn (~gehn@109.201.152.164)
[00:13:24] *** Quits: iomari892 (~iomari891@105.112.138.38) (Ping timeout: 252 seconds)
[00:13:44] *** Quits: teut (~teut@182.69.85.39) (Quit: Connection closed)
[00:15:44] *** Joins: xsperry (~as@user/xsperry)
[00:17:01] *** Joins: Crassus (~Crassus@user/crassus)
[00:17:28] *** Joins: benjamin1 (benjamin1@gateway/vpn/airvpn/benjamin1)
[00:20:42] *** Joins: Batzy (~Batzy12@user/batzy)
[00:20:52] <Batzy> anyone know in ember.js how I can get a cookie from the browser?
[00:21:46] *** Quits: HaMsTeRs (~HaMsTeRs@210.3.201.132) (Quit: Leaving)
[00:23:04] *** Joins: sgen (~sgen@142.186.76.30)
[00:23:39] *** Joins: Guest78 (~Guest78@host-92-11-147-229.as13285.net)
[00:24:03] *** Quits: makara (~sol@196.223.138.9) (Ping timeout: 244 seconds)
[00:26:29] <Batzy> ah nvm
[00:29:02] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[00:31:48] *** Quits: alystair (alystair@user/alystair) (Ping timeout: 244 seconds)
[00:32:54] *** Quits: Guest78 (~Guest78@host-92-11-147-229.as13285.net) (Quit: Ping timeout (120 seconds))
[00:39:04] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[00:39:17] *** Quits: fweht (uid404746@id-404746.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[00:39:40] *** Quits: entuland (~entuland@user/entuland) (Read error: Connection reset by peer)
[00:41:56] *** Quits: benjamin1 (benjamin1@gateway/vpn/airvpn/benjamin1) (Quit: Leaving)
[00:42:14] *** Joins: entuland (~entuland@user/entuland)
[00:46:03] *** Joins: cthulchu (~Cthulchu@195.66.198.226)
[00:46:48] *** Quits: zacts (~zak@user/zacts) (Quit: gtg)
[00:46:50] *** Joins: wovixo (~wovixo@128.104.205.49)
[00:47:02] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[00:49:25] *** Quits: cthulchu_ (~Cthulchu@195.66.198.226) (Ping timeout: 265 seconds)
[00:50:46] *** Joins: eck0__ (~Android@mobile-166-173-63-7.mycingular.net)
[00:53:30] *** Quits: eck0 (~Android@047-007-119-133.res.spectrum.com) (Ping timeout: 244 seconds)
[00:56:51] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 252 seconds)
[00:59:35] *** Quits: eck0__ (~Android@mobile-166-173-63-7.mycingular.net) (Read error: Connection reset by peer)
[01:00:13] *** Joins: eck0 (~Android@mobile-166-173-63-7.mycingular.net)
[01:01:25] *** Joins: cthulchu_ (~Cthulchu@195.66.198.226)
[01:04:21] *** Quits: cthulchu (~Cthulchu@195.66.198.226) (Ping timeout: 244 seconds)
[01:04:39] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:08:23] *** Joins: comatory (~ondrejsyn@2a00:1028:8d1c:62da:51c:1d00:7903:6216)
[01:09:24] *** Joins: cthulchu (~Cthulchu@195.66.198.226)
[01:10:12] *** Quits: nwoob (~apple@103.135.39.44) (Ping timeout: 265 seconds)
[01:12:44] *** Quits: cthulchu_ (~Cthulchu@195.66.198.226) (Ping timeout: 268 seconds)
[01:13:21] *** Quits: comatory (~ondrejsyn@2a00:1028:8d1c:62da:51c:1d00:7903:6216) (Ping timeout: 268 seconds)
[01:14:44] *** Quits: Akimb (~Akimb@86.100.13.100) (Ping timeout: 264 seconds)
[01:14:48] *** Joins: cthulchu_ (~Cthulchu@78.26.214.75)
[01:16:31] *** Joins: cth (~Cthulchu@78.26.214.75)
[01:18:23] *** Quits: cthulchu (~Cthulchu@195.66.198.226) (Ping timeout: 252 seconds)
[01:18:27] *** Joins: hendursa1 (~weechat@user/hendursaga)
[01:18:55] *** Parts: daoumilseitek (~daoumilse@164.96.146.77.rev.sfr.net) (Leaving)
[01:19:20] *** Quits: cthulchu_ (~Cthulchu@78.26.214.75) (Ping timeout: 244 seconds)
[01:19:47] *** Quits: metadaemon (~metadaemo@user/metadaemon) (Ping timeout: 272 seconds)
[01:20:52] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 252 seconds)
[01:20:53] *** Quits: cth (~Cthulchu@78.26.214.75) (Ping timeout: 244 seconds)
[01:23:37] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[01:26:49] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[01:31:09] *** Quits: summersault (~summersau@2804:7f0:3886:c810:155e:8f76:57c2:f49c) (Remote host closed the connection)
[01:31:09] *** Joins: rannnn8888 (~rannnn888@bzq-79-176-155-8.red.bezeqint.net)
[01:31:36] *** Joins: kakashiAL2 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[01:32:12] *** zebragg is now known as zebrag
[01:32:58] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 252 seconds)
[01:37:55] *** Quits: Liblx (~Alex@2a02:810c:280:59c:9572:431f:4e61:ee43) (Quit: WeeChat 3.1)
[01:40:00] *** Joins: Liblx (~Alex@2a02:810c:280:59c:9572:431f:4e61:ee43)
[01:40:15] *** Quits: Liblx (~Alex@2a02:810c:280:59c:9572:431f:4e61:ee43) (Client Quit)
[01:43:19] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:45:54] *** Joins: hendursaga (~weechat@user/hendursaga)
[01:46:00] *** Quits: happymeal` (~happymeal@75-28-166-198.lightspeed.tukrga.sbcglobal.net) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[01:46:18] *** Joins: happymeal (~happymeal@user/happymeal)
[01:46:22] *** Joins: comatory (~ondrejsyn@2a00:1028:8d1c:62da:51c:1d00:7903:6216)
[01:46:36] *** Joins: ferdna (~ferdna@user/ferdna)
[01:47:52] *** Quits: comatory (~ondrejsyn@2a00:1028:8d1c:62da:51c:1d00:7903:6216) (Client Quit)
[01:54:41] *** Quits: g0z (gauze@entropy.tmok.com) (Ping timeout: 252 seconds)
[02:12:10] *** Joins: summersault (~summersau@2804:7f0:3886:c810:155e:8f76:57c2:f49c)
[02:12:24] *** Joins: g0z (gauze@entropy.tmok.com)
[02:12:36] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[02:17:24] *** Joins: fweht (uid404746@id-404746.tooting.irccloud.com)
[02:18:40] *** Joins: summersault2 (~summersau@2804:7f0:3886:c810:fce8:4b16:c643:c730)
[02:20:35] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:20:48] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:22:55] *** Quits: summersault (~summersau@2804:7f0:3886:c810:155e:8f76:57c2:f49c) (Ping timeout: 272 seconds)
[02:25:44] *** Joins: jazzy (~jaziz@2600:380:4547:d128:81a3:2cb3:d403:ef37)
[02:28:37] *** Quits: summersault2 (~summersau@2804:7f0:3886:c810:fce8:4b16:c643:c730) (Ping timeout: 272 seconds)
[02:29:39] *** Joins: summersault (~summersau@179.221.251.16)
[02:30:02] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:28] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:30:35] *** Joins: astroo- (~c3b00314@ircip2.mibbit.com)
[02:45:47] *** Quits: tomjwatson91 (~tomjwatso@220.red-83-42-216.dynamicip.rima-tde.net) (Quit: The Lounge - https://thelounge.chat)
[02:50:06] *** Joins: tomjwatson91 (~tomjwatso@220.red-83-42-216.dynamicip.rima-tde.net)
[02:54:48] *** Joins: tomjwatson915 (~tomjwatso@80.30.122.193)
[02:56:45] *** Quits: tomjwatson91 (~tomjwatso@220.red-83-42-216.dynamicip.rima-tde.net) (Ping timeout: 252 seconds)
[03:00:10] *** Quits: Guest6247 (~federico@151.51.89.77) (Quit: WeeChat 3.0)
[03:01:42] *** Quits: DigDug (~nocaps@ool-182dff22.dyn.optonline.net) (Ping timeout: 252 seconds)
[03:09:01] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[03:19:26] *** Joins: fakuve (~fakuve@92.40.174.8.threembb.co.uk)
[03:19:44] *** Joins: cthulchu (~Cthulchu@195.66.198.226)
[03:20:57] *** Quits: tex (~super@user/dix) (Ping timeout: 244 seconds)
[03:22:39] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Read error: Connection reset by peer)
[03:24:32] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[03:25:32] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:c4d7:b125:fab8:31b0) (Ping timeout: 265 seconds)
[03:27:56] *** Quits: markgrad_ (~markgrady@204.246.246.254) (Ping timeout: 264 seconds)
[03:34:10] *** Joins: guzzlefry (~gus@user/guzzlefry)
[03:34:30] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[03:35:36] <guzzlefry> Is Response.text() supposed to return header information?
[03:36:37] <guzzlefry> Disregard, I think I'm doing something dumb.
[03:40:06] *** Joins: metadaemon (~metadaemo@user/metadaemon)
[03:41:23] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[03:42:25] *** Joins: edegaru (~edegaru@45.239.79.155)
[03:46:34] *** Quits: bynx (~bynx@pool-173-67-246-236.rcmdva.fios.verizon.net) (Quit: leaving)
[03:55:03] *** Quits: Dorward_ (~dorward@daviddorward.plus.com) (Ping timeout: 252 seconds)
[03:56:46] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 268 seconds)
[03:56:56] *** Joins: Dorward (~dorward@daviddorward.plus.com)
[03:58:17] *** Joins: DigDug (~nocaps@ool-182dff22.dyn.optonline.net)
[04:00:54] *** Quits: edegaru (~edegaru@45.239.79.155) (Read error: Connection reset by peer)
[04:03:56] *** Quits: eck0_ (~eck0@047-007-119-133.res.spectrum.com) (Ping timeout: 264 seconds)
[04:08:18] *** Quits: Deide (~Deide@user/deide) (Quit: Seeee yaaaa)
[04:12:20] *** Joins: Akimb (~Akimb@86.100.13.100)
[04:17:27] *** Quits: fakuve (~fakuve@92.40.174.8.threembb.co.uk) (Quit: WeeChat 2.3)
[04:18:20] *** Quits: guzzlefry (~gus@user/guzzlefry) (Ping timeout: 264 seconds)
[04:18:47] *** Joins: guzzlefry (~gus@user/guzzlefry)
[04:20:29] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[04:21:27] *** Quits: kakashiAL2 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 252 seconds)
[04:23:02] *** Joins: Cr4ft (~jordan@2604:3d09:7179:8a00:9e7b:44aa:a613:529e)
[04:23:32] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[04:28:50] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 268 seconds)
[04:31:01] *** Quits: Akimb (~Akimb@86.100.13.100) (Ping timeout: 244 seconds)
[04:39:03] *** Quits: rannnn8888 (~rannnn888@bzq-79-176-155-8.red.bezeqint.net) (Quit: Client closed)
[04:39:22] *** Quits: peteyboy1 (~peteyboy1@95.169.229.12) (Read error: Connection reset by peer)
[04:45:23] *** Joins: nwoob (~apple@103.135.39.44)
[04:45:50] *** Joins: Midnite (~human@user/midnightlantern)
[04:47:28] *** Joins: kakashiAL2 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[04:49:30] *** Quits: nwoob (~apple@103.135.39.44) (Ping timeout: 252 seconds)
[04:49:53] *** Joins: k4rt0ff3lch33t4h (~k4rt0ff3l@178-164-189-247.pool.digikabel.hu)
[04:50:10] *** Parts: k4rt0ff3lch33t4h (~k4rt0ff3l@178-164-189-247.pool.digikabel.hu) ()
[04:53:01] *** Quits: kakashiAL2 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 265 seconds)
[04:53:13] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[05:05:32] *** Joins: kakashiAL2 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[05:08:38] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[05:08:56] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[05:10:57] *** Quits: kakashiAL2 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 252 seconds)
[05:14:56] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 244 seconds)
[05:17:35] *** Joins: rannnn8888 (~rannnn888@bzq-79-176-155-8.red.bezeqint.net)
[05:29:49] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[05:30:51] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:32:39] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[05:33:07] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Client Quit)
[05:33:40] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:34:03] *** Quits: Midnite (~human@user/midnightlantern) (Ping timeout: 252 seconds)
[05:55:09] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[05:55:41] *** Parts: guzzlefry (~gus@user/guzzlefry) (Konversation terminated!)
[05:57:23] *** Joins: alystair (alystair@user/alystair)
[06:01:56] *** Joins: ferdna (~ferdna@user/ferdna)
[06:05:51] *** Joins: cisme_ (~cisme_@user/cisme/x-1186982)
[06:06:16] *** Quits: cthulchu (~Cthulchu@195.66.198.226) (Ping timeout: 268 seconds)
[06:09:12] *** Quits: KevinX_ (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Read error: Connection reset by peer)
[06:09:45] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[06:12:09] *** Parts: Cr4ft (~jordan@2604:3d09:7179:8a00:9e7b:44aa:a613:529e) ()
[06:18:35] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[06:19:45] *** Quits: fkrauthan (~fkrauthan@user/fkrauthan) (Quit: ZNC - https://znc.in)
[06:20:31] *** Joins: zacts (~zak@user/zacts)
[06:20:41] *** Joins: fkrauthan (~fkrauthan@user/fkrauthan)
[06:20:46] *** Quits: fkrauthan (~fkrauthan@user/fkrauthan) (Remote host closed the connection)
[06:22:37] *** Joins: fkrauthan (~fkrauthan@user/fkrauthan)
[06:23:45] *** Quits: deviantfero (~deviantfe@190.150.27.58) (Quit: WeeChat 3.1)
[06:34:04] <rannnn8888> hi how i return this by YY/MM/DD https://dpaste.org/wv6D
[06:34:48] <theskillwithin> .toLocaleDateString
[06:37:04] *** Joins: eck0_ (~Android@047-007-119-133.res.spectrum.com)
[06:40:11] *** Quits: eck0 (~Android@mobile-166-173-63-7.mycingular.net) (Ping timeout: 268 seconds)
[06:45:22] *** Joins: nwoob (~apple@103.135.39.44)
[06:50:03] *** Quits: nwoob (~apple@103.135.39.44) (Ping timeout: 268 seconds)
[06:50:56] <rannnn8888> theskillwithin thxx work and maybe you know i can use by this ? i new :d https://dpaste.org/k3nU
[06:53:33] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Read error: Connection reset by peer)
[06:53:37] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[06:53:39] *** Joins: Midnite (~human@user/midnightlantern)
[06:54:08] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 244 seconds)
[06:57:02] <rannnn8888> k slove this the position fixx
[07:00:49] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Quit: Leaving)
[07:03:35] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[07:05:06] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 264 seconds)
[07:10:09] *** Quits: friend (friend@c-73-43-171-169.hsd1.ga.comcast.net) (Ping timeout: 244 seconds)
[07:11:28] *** Joins: deviantfero (~deviantfe@190.150.27.58)
[07:12:57] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 264 seconds)
[07:16:20] *** Joins: friend (~friend@c-73-43-171-169.hsd1.ga.comcast.net)
[07:21:54] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 264 seconds)
[07:29:15] *** Joins: Akimb (~Akimb@86.100.13.100)
[07:32:28] *** Joins: Rockwood (~Rocky@2401:4900:2e99:70d4:bc5a:dbc5:5011:e604)
[07:35:00] *** Joins: eck0 (~Android@047-007-119-133.res.spectrum.com)
[07:35:41] *** Parts: Midnite (~human@user/midnightlantern) ()
[07:37:32] *** Quits: eck0_ (~Android@047-007-119-133.res.spectrum.com) (Ping timeout: 264 seconds)
[07:40:46] *** Quits: wallbroken (wallbroken@user/wallbroken) (Remote host closed the connection)
[07:40:46] *** Quits: foureyes (foureyes@brought.to.you.by.bnc4free.com) (Remote host closed the connection)
[07:41:55] *** Joins: Guest8 (~Guest8@2600:8801:131c:9200:6f17:4986:378d:8097)
[07:41:59] *** Joins: eck0_ (~Android@047-007-119-133.res.spectrum.com)
[07:44:57] *** Quits: eck0 (~Android@047-007-119-133.res.spectrum.com) (Ping timeout: 252 seconds)
[07:47:45] *** Quits: astroo- (~c3b00314@ircip2.mibbit.com) (Quit: https://mibbit.com Online IRC Client)
[07:48:38] *** Quits: Akimb (~Akimb@86.100.13.100) (Ping timeout: 268 seconds)
[07:50:41] *** Joins: summersault (~summersau@179.221.251.16)
[07:59:17] *** Quits: fweht (uid404746@id-404746.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[08:00:08] *** Joins: eck0 (~eck0@047-007-119-133.res.spectrum.com)
[08:02:47] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:03:30] *** Quits: zacts (~zak@user/zacts) (Quit: gtg)
[08:03:36] *** Joins: sed (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net)
[08:04:54] *** Quits: eck0 (~eck0@047-007-119-133.res.spectrum.com) (Ping timeout: 265 seconds)
[08:11:55] *** Joins: kakashiAL2 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[08:22:47] *** Joins: Dorward_ (~dorward@daviddorward.plus.com)
[08:23:27] *** Quits: Dorward (~dorward@daviddorward.plus.com) (Ping timeout: 252 seconds)
[08:25:06] *** slaughtr is now known as slaughter
[08:41:44] *** Quits: acidsys (~LSD@2.lsd.systems) (Quit: I love you.)
[08:46:41] *** Joins: Akimb (~Akimb@86.100.13.100)
[08:54:20] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[08:54:58] <Rockwood> hi
[08:56:05] <Rockwood> https://gist.github.com/Cyberiaaxis/e8b97b34951b1a5be1b31a6d762d1d57 error -> https://gist.github.com/Cyberiaaxis/db3df459516027ba252e1b1d1989a38d
[08:56:16] *** Joins: LSD (~LSD@2.lsd.systems)
[08:56:57] <ljharb> Rockwood: you aren’t returning anything from your map callback
[08:57:12] <Rockwood> when i try to do return then it throwing new error
[08:57:25] <Rockwood> unreachable
[08:57:29] <ljharb> ok but not returning anything is the wrongest you can be
[08:57:34] <ljharb> so start there, and update your fists
[08:57:40] <ljharb> *gists
[08:57:56] <Rockwood> 2 sec doing
[08:58:10] <ljharb> note you have multiple levels of this mistake
[08:58:57] <Rockwood> https://gist.github.com/Cyberiaaxis/e8b97b34951b1a5be1b31a6d762d1d57#file-app-jsx-L55-L63
[08:59:08] <Rockwood> like ??
[08:59:16] <ljharb> that’s not returning anything
[08:59:33] <ljharb> Line 57 is a noop
[08:59:54] <ljharb> also line 72
[09:00:05] <Rockwood> return() <- like
[09:00:16] <Rockwood> or return simple
[09:00:17] <ljharb> return isn’t a function so i don’t know what that means
[09:00:25] <ljharb> but yes you’re missing a bunch of return keywords
[09:00:43] <Rockwood> i am using react
[09:01:01] <Rockwood> 2 sec doing
[09:02:03] <Rockwood> https://gist.github.com/Cyberiaaxis/e8b97b34951b1a5be1b31a6d762d1d57
[09:02:18] <Rockwood> src\App.js
[09:02:19] <Rockwood>   Line 53:42:  Array.prototype.map() expects a return value from arrow function  array-callback-return
[09:02:19] <Rockwood>   Line 62:29:  Unreachable code                                                  no-unreachable
[09:02:57] <Rockwood> on 53 topBar.map((item, index) => {
[09:03:39] <Rockwood>    if (a.children) { unreachable
[09:08:34] <ljharb> Rockwood: using react is irrelevant
[09:08:36] <ljharb> Rockwood: JS is still JS
[09:08:51] <ljharb> Rockwood: in a JS context you still have to use return like the way JS has always worked since forever.
[09:09:07] <ljharb> Rockwood: iow, all the line errors are correct, your code is bad, so *pay attention* to the lint errors
[09:09:38] <Rockwood> bad in which sense?
[09:09:48] <Rockwood> logically??
[09:10:02] <Rockwood> or syntax wise?
[09:10:32] <ljharb> like competence wise
[09:10:47] <ljharb> like, you should reread eloquent so you can understand JS basics. no shade intended.
[09:19:31] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[09:34:54] *** Joins: Crassus (~Crassus@user/crassus)
[09:36:03] *** Quits: peterhil_ (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 252 seconds)
[09:36:05] *** Quits: austincheney (~austinche@2600:1700:1220:76c8:f982:507a:283b:3df9) (Read error: Connection reset by peer)
[09:37:11] *** fedorafan is now known as Umbire2
[09:37:47] *** Umbire2 is now known as fedorafan
[09:48:49] *** Quits: fedorafan (~fedorafan@user/fedorafan) (Quit: Textual IRC Client: www.textualapp.com)
[09:49:45] *** Joins: fedorafan (~fedorafan@user/fedorafan)
[09:53:13] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 272 seconds)
[09:54:22] *** Quits: Rockwood (~Rocky@2401:4900:2e99:70d4:bc5a:dbc5:5011:e604) (Quit: The Time is Over)
[09:55:56] *** Quits: howdoi (uid224@id-224.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[10:03:37] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[10:03:45] <no_gravity> Good Morning!
[10:03:57] <no_gravity> How do you create a function with "f = Function('console.log(123)')" but so that it takes arguments?
[10:03:58] <theskillwithin> mornin
[10:05:26] <theskillwithin> const f = (a) => console.log(a)     but thats not a named function tho of course
[10:05:49] <theskillwithin> or i mean thats not a new Function
[10:06:07] <no_gravity> theskillwithin: I am creating the function from a string.
[10:06:31] *** Quits: kakashiAL2 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 272 seconds)
[10:06:41] <theskillwithin> there was a question about this the other day, and i could not see why ud really want to do that
[10:08:09] *** Quits: sed (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net) (Ping timeout: 264 seconds)
[10:08:16] <no_gravity> theskillwithin: b/c the function code is generated during runtime via and AI algo.
[10:08:25] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[10:13:33] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 268 seconds)
[10:17:50] <gkatsev> that doesn't sounds like a great idea
[10:18:11] <gkatsev> but `Function` takes arguments before the function body
[10:18:23] <theskillwithin> n> const addition = Function("a", "b", "return a + b;"); addition(5, 3)
[10:18:24] <jellobot> (okay) 8
[10:18:25] *** Joins: markgrady (~markgrady@2a02:c7f:f72d:f300:217c:9293:cbe4:ea2d)
[10:18:39] <gkatsev> thanks, was just about to write that, heh
[10:18:40] <no_gravity> gkatsev: Yes, the fucking legend theskillwithin figured it out!
[10:18:52] <gkatsev> docs https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/Function
[10:20:56] <gkatsev> also, this is why you don't cross post questions :P
[10:22:53] <theskillwithin> i agree its annoying, but cross network posting isn't cross channel posting, so idk, i think we allow it
[10:23:10] <gkatsev> it's the same issue
[10:23:35] <theskillwithin> the result is the same issue yes
[10:25:02] <no_gravity> How about asking a quesion on libera/#javascript and in a letter to a friend? Would that also be cross posting?
[10:25:44] *** Joins: n00b101 (uid448161@id-448161.tooting.irccloud.com)
[10:25:58] <theskillwithin> idk how the other ops feel, but as an op.  i won't enact a rule about cross posting networks.
[10:26:08] <n00b101> I have a socketio server and client, client is connecting to server via socketio.connect(ipaddress). Now when the server receive the connection, can it print "connection received" or something.. how does the server know that a connection from a client is established?
[10:26:09] <gkatsev> I mean, technically, the issue is that you're asking multiple people to spend time on your question
[10:26:27] <gkatsev> like, I didn't realize it's already been answered
[10:26:45] <gkatsev> it's just preferable not to do it within a short time span
[10:26:58] <n00b101> To me?
[10:26:59] <gkatsev> if you ask in one place and after a reasonable period of time of a non-answer, you can ask elsewhere
[10:27:10] <gkatsev> n00b101: nope, other convo
[10:27:47] <theskillwithin> i agree,  but i see it as not enforceable, and its an odd situation were in as well
[10:27:58] <gkatsev> yes, we can still ask people not to do it
[10:30:22] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[10:32:35] *** Joins: kakashiAL2 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[10:39:51] *** Quits: kakashiAL2 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 252 seconds)
[10:41:02] <theskillwithin> you can, if i do, then they might think it's a rule.  were still in an adjustment period so its bound to happen for a bit
[10:42:03] <gkatsev> if anything now is the time because people are more likely to still be on both networks
[10:44:04] <ljharb> i would. cross-posting is cross-posting
[10:44:10] <ljharb> post once, one place, period.
[10:44:37] <ljharb> after a reasonable period of time - which is many hours at minimum - feel free to post somewhere else
[10:44:47] <ljharb> theskillwithin: and, it is quite enforceable.
[10:45:58] <theskillwithin> my style for sure has always been using a much lighter touch than yours
[10:47:33] <ljharb> people have "all of society" for a lighter touch
[10:48:00] <theskillwithin> we are almost at critical mass,  maybe lets give it another month
[10:49:05] <theskillwithin> idk, i don't have a hard opinion
[10:53:47] *** Joins: gry_ (~quassel@203-129-25-247.cb8119.syd.static.aussiebb.net)
[11:03:06] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:04:01] *** Joins: foureyes (foureyes@brought.to.you.by.bnc4free.com)
[11:05:21] *** Joins: Buttercat (~Buttercat@user/buttercat)
[11:08:43] *** Joins: wallbroken (wallbroken@user/wallbroken)
[11:11:47] *** Joins: kakashiAL2 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[11:12:55] *** Quits: alystair (alystair@user/alystair) (Ping timeout: 265 seconds)
[11:16:52] *** Quits: Buttercat (~Buttercat@user/buttercat) (Quit: Leaving.)
[11:17:07] *** Quits: kakashiAL2 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 244 seconds)
[11:22:15] *** Joins: duckgoose (~matt@user/duckgoose)
[11:22:23] <duckgoose> hello quick question
[11:22:57] <duckgoose> should I define functions like function xyz(){}; or like const xyz = ()=>{};
[11:23:12] <ljharb> duckgoose: usually neither
[11:23:20] <duckgoose> how do you recommend
[11:23:21] <ljharb> duckgoose: `const xyz = function xyz() {}`
[11:23:32] <ljharb> duckgoose: ie, don't rely on hoisting; and arrows are best for callbacks and not for everything
[11:23:40] <duckgoose> oh okay
[11:23:48] <duckgoose> thanks for the tip
[11:23:49] *** Parts: duckgoose (~matt@user/duckgoose) (BurdIRC www.burdirc.com)
[11:26:15] *** Joins: duckgoose (~matt@user/duckgoose)
[11:26:21] <duckgoose> uh I have another question >_>
[11:27:05] <duckgoose> when using jquery, when I do $(x).on(x, (e)=>{  }) I for some reason lost the ability to use $(this)
[11:27:24] <duckgoose> where as when the callback is like fucntion(e){} it's fine
[11:27:42] <duckgoose> what am I doing wrong here
[11:27:43] <ljharb> duckgoose: you should never do `$(this)` in an event handler ever in the first place
[11:27:46] <ljharb> duckgoose: use `e.target`
[11:27:59] <ljharb> duckgoose: or `$(e.target)`
[11:32:07] <duckgoose> okay thanks
[11:32:10] <duckgoose> done for real this time
[11:32:12] *** Parts: duckgoose (~matt@user/duckgoose) (BurdIRC www.burdirc.com)
[11:36:56] *** Quits: doc (~doc@user/doc) (Ping timeout: 264 seconds)
[11:38:58] *** Joins: doc (~doc@user/doc)
[11:56:50] *** Joins: tex (~super@user/dix)
[11:57:09] <theskillwithin> gkatsev yes i agree now, lets discourage that behavior
[12:00:23] *** Joins: eck0 (~eck0@047-007-119-133.res.spectrum.com)
[12:00:34] <theskillwithin> n00b101 did you figure out yet?
[12:01:08] <n00b101> Not yet
[12:01:49] <theskillwithin> n00b101 i forget the question, could u ask it again.  maybe with some pastes to show code
[12:02:41] <n00b101> Sure
[12:03:53] <n00b101> https://bpa.st/EAUQ
[12:03:53] <n00b101>  Can I disconnect all connected sockets when a new connection is received?
[12:04:39] *** Quits: eck0 (~eck0@047-007-119-133.res.spectrum.com) (Ping timeout: 244 seconds)
[12:05:02] <n00b101>  Can I disconnect existing socketio connecting when a new socket Connection is received?
[12:05:58] <n00b101> That means, This is a chat app. When I'm chatting with say Bob and when Frank comes to chat with me , at that moment, existing connection ("Bob") must drop and accept Frank's connection
[12:06:21] <n00b101> BECAUSE, now when I send messages, it's going to both Bob and Frank
[12:06:33] <n00b101> All 3 are in same LAN,
[12:07:38] <n00b101> That means, I have to only connect to user I want to chat with. BUT, it would have been better if Alice can chat with Frank without disconnecting Bob's socketio Connection
[12:08:15] <n00b101> So that only Frank will receive the message and Bob won't receive it
[12:08:17] <n00b101> But I don't know how that is possible
[12:10:38] *** Joins: benjamin1 (benjamin1@gateway/vpn/airvpn/benjamin1)
[12:24:19] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[12:26:58] <ashnur> everything is possible
[12:27:02] <ashnur> apart from privacy
[12:27:13] <ashnur> and identity
[12:27:28] <ashnur> and global present
[12:27:34] <ashnur> but other than that, everything
[12:29:06] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 264 seconds)
[12:29:21] <n00b101> i was asking "how"
[12:29:34] <n00b101> steps i have to do
[12:30:58] <ashnur> you can send messages, I don't understand what else is what you need. you don't want someone to receive a message, don't send it to them?
[12:34:26] *** Quits: kmh (~kmh@p200300df5f2f6b00f581238e4619a748.dip0.t-ipconnect.de) (Quit: Leaving)
[12:35:46] *** Joins: howdoi (uid224@id-224.tooting.irccloud.com)
[12:37:40] <theskillwithin> ashnur idk how sockets work but i mean, isn't there some more practical advice to give they can apply directly
[12:37:56] <ashnur> you can see the code above
[12:39:10] <ashnur> i got a headache trying to figure out how it sends messages, because there are comments but everything is inter-twined so much, it's more like a gordian knot than a bowl of spaghetti
[12:40:08] <theskillwithin> haha
[12:40:48] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.1)
[12:41:43] <theskillwithin> ic, but ya i wouldn't be doing my job if i didn't advocate helping others
[12:41:59] <theskillwithin> i get it tho
[12:43:28] *** Joins: kmh (~kmh@p200300df5f2f6b00d3c414bdedf29ea1.dip0.t-ipconnect.de)
[12:44:31] <theskillwithin> ashnur ❤️
[12:48:07] <ashnur> advocating means nothing by itself
[12:48:26] <ashnur> it's an easy way out ;)
[12:48:41] <ashnur> instead of actually helping, you tell me to do it. genius :P
[12:52:20] <theskillwithin> if i had the ability to help i would, but i don't
[12:53:17] <theskillwithin> esp now that im like 12 drinks in
[12:53:54] <n00b101> you're in a LAN, you connect with BOb's ip by placing socket io connect with BOB's ip
[12:54:14] <n00b101> now what if you want to connect with FRANK as well?
[12:54:21] <n00b101> you disconnect bob?
[12:59:43] *** Joins: heatwave (~heatwave@2601:641:480:5b30:ec11:5e66:a082:724)
[13:01:41] <heatwave> Hi all! I wanted to know if functional components in React have any performance advantage over class components? Are they only sugar syntax with binding properties etc. or do they have actual performance gain?
[13:10:22] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[13:11:12] *** Joins: peteyboy1 (~peteyboy1@95.169.229.12)
[13:12:23] *** Quits: Bombo (atom@user/bombo) (Ping timeout: 268 seconds)
[13:13:13] *** Joins: kakashiAL2 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[13:13:14] *** Joins: Bombo (atom@p4ff00056.dip0.t-ipconnect.de)
[13:13:14] *** Quits: Bombo (atom@p4ff00056.dip0.t-ipconnect.de) (Changing host)
[13:13:14] *** Joins: Bombo (atom@user/bombo)
[13:13:25] <ashnur> n00b101, you don't have to send messages to all connections all the time
[13:13:52] <n00b101> YES
[13:13:54] <Donitz> n> Object.create(null)
[13:13:54] <jellobot> (okay) [Object: null prototype] {}
[13:14:01] <Donitz> ah, so you don't need a second argument
[13:14:14] <Donitz> options = Object.create(null); :P
[13:14:17] <ashnur> heatwave, performance considerations are moot without a specific application in a specific context measured by a specific benchmark
[13:14:40] <n00b101> ashnur: i don't need to.. but how do you make it?
[13:15:25] <ashnur> well, i would first separate all the parts of the code that doesn't deal with this and then come back because I can't decypher you code, sorry
[13:18:35] *** Quits: kakashiAL2 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 265 seconds)
[13:23:56] <Donitz> performance considerations are moot
[13:24:09] <Donitz> but in my experience, chrome is currently vasty faster than firefox
[13:24:11] <Donitz> for some reason
[13:24:24] <Donitz> vastly*
[13:24:41] <Donitz> does the chrome developeres care more about canvas performance
[13:24:49] <Donitz> ers'
[13:28:42] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[13:30:10] <Donitz> can this be better in a cleaner way
[13:30:29] <Donitz> if (i === 0) { ctx.moveTo(x, y); } else { ctx.lineTo(x, y); }
[13:30:34] <Donitz> I've used it many many many times
[13:31:07] <Donitz> be written in a*
[13:33:07] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 256 seconds)
[13:34:48] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[13:35:36] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Client Quit)
[13:36:45] *** Joins: cthulchu (~Cthulchu@195.66.198.226)
[13:40:50] <heatwave> ashnur: so if I were to think about the pros of using functional components over class - performance wouldnt necessarily be one?
[13:40:55] *** Quits: Jaran (~mail@user/jaran) (Remote host closed the connection)
[13:43:25] <ashnur> Donitz, lol, been there
[13:44:08] <ashnur> heatwave, anything pro or con necessarily needs to be something specific. generalizations are only good so that lazy professors can take home some salary
[13:44:38] <ashnur> performance of what, where, when, how long, how cheap, why?
[13:45:27] <ashnur> https://www.youtube.com/watch?v=5mUGu4RlwKE
[13:45:28] <skillbot> YouTube Title: High Performance Data With Clojure Chris Nuernberger
[13:45:58] <ashnur> you can't go more functional than clojure I think, you can do high performance that beats everything, so what is your question about?
[13:46:55] <ashnur> however, that video is about hashmaps that have mostly the same keys, so the whole thing wouldn't apply and didn't need to apply to performance in general databases with random keys
[13:48:39] <heatwave> Having proper context of the performance and the use-case does makes sense. I was just wondering generally. Was refractoring some code in a React dashboard and found a class component, which led me to think about the effort to refactor to a functional component vs actual performance gains if any.
[13:52:23] *** Joins: Heraes (~Heraes@user/romarain)
[14:02:29] *** Joins: daoumilseitek (~daoumilse@164.96.146.77.rev.sfr.net)
[14:03:25] *** Joins: kakashiAL2 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[14:08:51] *** Quits: kakashiAL2 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 252 seconds)
[14:08:56] *** Joins: makara (~sol@196.223.138.9)
[14:15:02] <ashnur> without measurements, performance arguments are not good enough. if you feel it personally that when you are using it, it's slow, then that is a subjective measurement that might be good enough. but just because it's written one way or another... if you want to practice refactoring, that's a different purpose that can be justified.
[14:16:19] <Donitz> meh, sometimes it's very obvious
[14:16:24] <Donitz> like a 50% drop in framerate
[14:17:04] <ashnur> yeah, i didn't want to repeat myself for the n-th time without saying something new
[14:18:41] <ashnur> there is no such thing as generally good advice, especially when it comes to such diverse matters as performance. same mobile device can be performant with full battery and good network, or in more than one way slowly performing within different circumstances. writing your react code as a class or as a function has **in general** zero to do with performance in either situation
[14:19:06] <ashnur> only case where it might matter if you do it wrongly, but then, as they say, "if you want to go there, I wouldn't start from here"
[14:33:10] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 268 seconds)
[14:38:03] *** Parts: daoumilseitek (~daoumilse@164.96.146.77.rev.sfr.net) (Leaving)
[14:42:18] *** Quits: cthulchu (~Cthulchu@195.66.198.226) (Ping timeout: 264 seconds)
[14:44:19] *** Quits: howdoi (uid224@id-224.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[14:45:03] *** Quits: rannnn8888 (~rannnn888@bzq-79-176-155-8.red.bezeqint.net) (Quit: Client closed)
[14:54:28] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[14:56:58] *** Joins: Crassus (~Crassus@user/crassus)
[15:04:13] *** Quits: Heraes (~Heraes@user/romarain) (Quit: Leaving)
[15:08:04] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 244 seconds)
[15:12:36] *** Quits: ibejohn (~ibejohn@104.4.30.169) (Quit: Ping timeout (120 seconds))
[15:17:39] *** Joins: kakashiAL2 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[15:18:00] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:18:23] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[15:18:33] *** Joins: eck0 (~Android@mobile-166-173-63-55.mycingular.net)
[15:20:54] *** Quits: eck0_ (~Android@047-007-119-133.res.spectrum.com) (Ping timeout: 252 seconds)
[15:21:06] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[15:24:15] *** Joins: entuland (~entuland@user/entuland)
[15:37:11] <Donitz> god I hate horizontal mouse wheels
[15:37:18] <Donitz> not once have I actually used it when I wanted to use it
[15:39:15] *** Joins: stenno (~stenno@user/stenno)
[15:43:15] *** Joins: Guest9 (~Guest9@43.250.157.5)
[15:44:01] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 256 seconds)
[15:47:53] <ashnur> i don't like windows
[15:48:04] *** Quits: jazzy (~jaziz@2600:380:4547:d128:81a3:2cb3:d403:ef37) (Read error: Connection reset by peer)
[15:48:19] <ashnur> i mean, real windows are fine. :D
[15:48:29] <ashnur> but if it has a "scrollbar", then not
[15:49:56] <n00b101> i'm trying to run https://github.com/nickylogan/Huddlr But, i getting this https://bpa.st/S4EQ error
[15:50:08] <n00b101> i'm new to js, can someone help what to do?
[15:51:12] <ashnur> you are trying so many things at once, i am afraid to start
[15:51:18] <ashnur> since i am not sure how much time i have
[15:52:54] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Read error: Connection reset by peer)
[15:54:40] *** Quits: kmh (~kmh@p200300df5f2f6b00d3c414bdedf29ea1.dip0.t-ipconnect.de) (Quit: Leaving)
[15:55:46] *** Joins: stenno (~stenno@user/stenno)
[15:56:45] *** Quits: makara (~sol@196.223.138.9) (Ping timeout: 272 seconds)
[15:58:02] <n00b101> what is wrong?
[15:59:52] *** Joins: kmh (~kmh@p200300df5f2f6b00d3c414bdedf29ea1.dip0.t-ipconnect.de)
[16:00:18] *** Joins: jazzy (~jaziz@2600:380:4547:d128:788a:9261:efcd:4642)
[16:00:42] *** Joins: eck0_ (~eck0@047-007-119-133.res.spectrum.com)
[16:00:47] <n00b101> fuck js! i'm out!
[16:01:39] *** Joins: MJCD (uid193337@user/mjcd)
[16:03:18] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 256 seconds)
[16:03:37] <n00b101> https://www.irccloud.com/pastebin/knsgOTDj/
[16:05:33] *** Quits: eck0_ (~eck0@047-007-119-133.res.spectrum.com) (Ping timeout: 256 seconds)
[16:07:14] <stenno> hehe
[16:07:17] <entuland> if you're new to javascript the first thing you should do is learning the basics, not picking an existing project and trying to troubleshoot its installation with no idea of how it works
[16:08:37] <theskillwithin> i disagree, best learning by doing
[16:09:46] <MJCD> maybe a little of both ^_^
[16:10:06] <ashnur> sure, but start from something that you understand, change one thing at a time. I mean, sure, try whatever you want, but if nothing works, and you haven't tried the sane way, don't blame life.
[16:10:09] <MJCD> also the base knowledge is basically down to whether you know any other languages/are already a programmer or not
[16:10:35] <MJCD> if it's a 2nd++ language then it takes literally like an hour to understand those foundations haha
[16:10:49] <ashnur> not for some backend developers
[16:10:59] <MJCD> not sure what you mean
[16:11:07] <ashnur> they expect the world to stop when they do a database query
[16:11:49] <MJCD> still not sure what you mean haha
[16:12:21] <ashnur> people who are asking about the sleep function
[16:12:28] <entuland> no basics at all and trial and error with lots of frustration with a project that could as well be broken, or the initial setup expected by the project could be broken, sounds like a bad plan
[16:12:30] <theskillwithin> how many rockstars does it take to screw in a light bulb?   just one, he holds the bulb up an expects the world to revolve around it
[16:12:51] <MJCD> I did just join so idk their specific situation, ofcourse
[16:13:15] <ashnur> https://bpa.st/EAUQ <-- started here
[16:13:16] <MJCD> theskillwithin: lol, I get the punchline but rockstars is an odd choice of pronoun
[16:13:16] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[16:15:48] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[16:20:18] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 252 seconds)
[16:23:38] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[16:24:07] <caveman> how does this file get its input about browsers?  https://github.com/faisalman/ua-parser-js/blob/master/src/ua-parser.js
[16:24:28] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[16:24:35] <n00b101> ashnur: if I knew everything, I wouldn't ask anything to anyone
[16:25:10] <MJCD> caveman: er, I mean... via the ua-parser module ? :P
[16:25:42] <caveman> MJCD: isn't the file that i linked is the one that's defining the ua-parser module?
[16:25:45] <MJCD> there is no like vendors.json file
[16:26:02] <MJCD> right, and the algorithms it uses are distributed through every part of the code
[16:26:16] <MJCD> there's no like, data table style thing or anything
[16:26:33] <caveman> so i see lots of regexps to match strings.  but i don't get where is the input that the regexp is applied on.
[16:26:37] <MJCD> there's other ua-parser thingies if you want to nab a central data store
[16:26:50] <MJCD> caveman: this is what's called middleware
[16:27:17] <MJCD> so it would be triggered say, as part of the express.js execution chain, it's input is the entire http request
[16:27:38] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[16:27:49] <caveman> this is a browser fingerprinting js.  i'm trying to avoid it.
[16:28:07] <MJCD> lol so do that then :)
[16:28:15] <MJCD> using a build chain?
[16:28:16] <caveman> dunno js.
[16:28:20] <MJCD> ie webpack?
[16:28:40] <caveman> there is a site that's using it.  i want to know how is it getting the info, so that i modify my browser for it.
[16:28:52] <MJCD> modify your browser?
[16:29:06] <MJCD> ah you mean you want to basically avoid getting fingerprinted?
[16:29:25] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[16:29:35] <MJCD> fwiw this is but their solution for it
[16:29:39] <caveman> yes.  it's much easier for me to avoid getting fingerprinted when i know what the fingerprinting code is looking for.  much easier than me installing every plugin.
[16:29:43] <MJCD> there's many approaches
[16:29:53] <MJCD> caveman: what browser?
[16:29:54] *** Joins: zebrag (~chris@user/zebrag)
[16:30:00] <MJCD> chrome[ium]?
[16:30:01] <caveman> google chrome or chromium.
[16:30:06] <MJCD> gotcha, one sec
[16:30:43] <MJCD> https://chrome.google.com/webstore/detail/user-agent/ncgbkkljbaojkhljombpjejedphfhdjj
[16:30:58] <MJCD> So there's quite a few different extensions -- this one seems more involved than required
[16:31:05] <MJCD> for the budding haxorz ^_^
[16:31:29] <MJCD> but tldr they all just change your ua (user-agent) http header to <crazy random stuff>
[16:31:50] <MJCD> nb; this may cause issues on some sites but that's a them issue
[16:31:54] <MJCD> not a you issue lol
[16:31:59] <caveman> false.
[16:32:11] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Ping timeout: 256 seconds)
[16:32:29] <caveman> the useragent in http header is the simple thing that used to exist in the 90s.  nowadays we got more evil js sites that extract all kinds of odd stuff.
[16:34:18] <MJCD> lol that's what /this/ library does (the one you referenced)
[16:34:27] <MJCD> good sites do not rely on this :)
[16:34:33] <caveman> oh.  it only looks at the user agent in the http request field?
[16:34:39] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 268 seconds)
[16:34:46] <MJCD> note as well web apps are a separate ecosystem than websites
[16:34:50] <MJCD> right.
[16:34:58] <caveman> but how does it information about the cpu?
[16:35:02] <MJCD> I think chrome even has a default option to just not send it
[16:35:22] <MJCD> about the cpu? no idea where you saw that but it was probably just running some benchmarks in JS
[16:36:46] <caveman> how did you get that it gets useragent field as input?
[16:39:05] *** Joins: ineedanickname (~ineedanic@ti0018a400-7092.bb.online.no)
[16:39:23] <caveman> MJCD: this is the real best that's getting me owned.  https://github.com/jackspirou/clientjs/blob/master/src/client.base.js
[16:39:54] <MJCD> caveman: again
[16:40:01] <MJCD> it's what's called middleware
[16:40:01] <caveman> client.getCurrentResolution
[16:40:15] <MJCD> middleware gets a request object,and a response object
[16:40:26] <MJCD> and can operate on response based on the request object
[16:40:31] <MJCD> which again, is a full http request
[16:40:51] <MJCD> which may contain headers, data, GET and POST, etc
[16:40:54] <caveman> what about js requests with jquery?
[16:41:23] <Donitz> setLineDash should accept NO array
[16:41:24] <MJCD> they can get anything your browser exposes still - which is what I was referencing with "other" methods of fingerprinting
[16:41:25] <Donitz> to reset itself
[16:41:33] <Donitz> bit inefficient to force the user to set an empty array
[16:41:34] <MJCD> this library is just a singular way of doing such a thing
[16:41:44] <MJCD> you can look at others that even have different modes
[16:41:56] <caveman> i wnt to target this specific library
[16:41:58] <MJCD> I can't think of any off the top of my head, because I don't do this horrible thing lol
[16:42:20] <MJCD> caveman: so, an extension that scrambles up your user-agent string will work perfectly
[16:42:22] <caveman> i think w3c did this by design to get us fingerprinted.
[16:42:27] <MJCD> because this is all that uses
[16:42:38] <caveman> how is screen resolution obtained from user-agent string?
[16:42:43] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[16:42:52] <MJCD> it isn't; that's JS stuff they can gather and attach to requests
[16:43:13] <MJCD> that lib doesn't do any of that however ;p
[16:43:19] *** Quits: gry_ (~quassel@203-129-25-247.cb8119.syd.static.aussiebb.net) (Changing host)
[16:43:19] *** Joins: gry_ (~quassel@botters/gry)
[16:43:20] <MJCD> they may use multiple things
[16:43:25] <caveman> i think the evil rests within the javascript engine.  i think it has special functions the script can call to get evil things, like canvas and stuff
[16:43:33] <MJCD> I just said as much
[16:43:43] <MJCD> and it's not "evil" on JS part
[16:43:48] <caveman> yes, it's a middle ware appaently.
[16:43:57] <MJCD> that's what I said twice lol
[16:44:05] <caveman> yes.
[16:44:10] <MJCD> just get a vpn guy
[16:44:15] <caveman> 2 nested middle wares...
[16:44:15] *** gry_ is now known as gry
[16:44:20] <MJCD> or buy a cheap yearly vps and vpn to that
[16:44:22] <caveman> lel.  i'm already vpned.
[16:44:35] <MJCD> then what do you even care if they know your screen resolution/dpi
[16:44:55] <MJCD> like, maybe they can make a buck off that information <somehow>
[16:45:13] <MJCD> but it's not even trivially linked back to you directly
[16:45:22] <MJCD> the next step after that is a full on http proxy
[16:45:25] <caveman> but my point is, that middle ware is somehow exposing my canvas and fonts and time zone and lots of stuff not in user-agent.
[16:45:26] <caveman> i know it's not getting it itself.  but i want to get to its bottom:  where is the code that actually pulls it from the js engine?
[16:45:37] <MJCD> and some very specific guidelines on requests
[16:45:42] <MJCD> stripping out what you don't want
[16:45:52] <MJCD> but again, this will probably break a lot of badly made websites
[16:45:52] <MJCD> haha
[16:46:02] <caveman> no worries.
[16:46:06] <MJCD> caveman: it's not in that module.
[16:46:12] <caveman> canvas size reveals a lot of entropy.
[16:46:28] <MJCD> not sure what you mean lol
[16:46:29] <caveman> so, not in that module.  any idea where it might be coming from?
[16:46:42] <MJCD> nope, some other middleware probably
[16:47:10] <MJCD> you know like
[16:47:19] <MJCD> if you're going to break your own user experience online
[16:47:25] <MJCD> you might as well just turn JS off entirely
[16:47:34] <MJCD> any /good/ site will still function
[16:47:38] *** Joins: Crassus (~Crassus@user/crassus)
[16:47:48] <entuland> caveman, is this the thing you mentioned yesterday about a specific js file doing fingerprinting?
[16:47:49] <MJCD> CSS3 can work wonders as well even in terms of interactivity
[16:47:51] <caveman> i know the site.  it only uses it to identify ppl.
[16:48:01] <caveman> entuland: yes.
[16:48:06] *** Quits: ineedanickname (~ineedanic@ti0018a400-7092.bb.online.no) (Quit: Client closed)
[16:48:19] <MJCD> You're being seemingly deliberately vague as to what site
[16:48:20] <entuland> did you check the URL filtering I mentioned to prevent such file from being found and executed at all?
[16:48:23] <MJCD> and why, again, you care
[16:48:27] *** Joins: federico (~federico@151.51.89.77)
[16:48:35] <MJCD> entuland: they found a single middleware apparently being used
[16:48:42] <caveman> entuland: any idea how?
[16:48:51] <MJCD> but it doesn't do the part described
[16:48:56] <MJCD> it only uses the UA string
[16:49:23] <MJCD> and URL filtering can also work with GET requests fwiw
[16:49:30] <caveman> MJCD: they actually pull it out http://clientjs.org/
[16:49:37] <MJCD> but wont inspect POST requests, that's somewhat more involved
[16:49:50] <caveman> http://clientjs.org/#Screen
[16:49:56] <caveman> e.g. it finds my screen's size.
[16:50:02] <caveman> (not in user agent string).
[16:50:14] <MJCD> okay
[16:50:17] <MJCD> again, seems fine
[16:50:30] <caveman> why fine?
[16:50:37] <MJCD> that's both a middleware, and a clientside lib
[16:50:45] <MJCD> which will probably wrap fetch() etc
[16:50:58] <MJCD> adding such information into the `request`
[16:51:20] <MJCD> then the backend middleware interprets that
[16:51:20] *** federico is now known as Guest4217
[16:51:22] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[16:51:30] <MJCD> ie how wide should the page be
[16:51:36] <MJCD> how big should images be lol
[16:51:37] <MJCD> etc
[16:51:43] *** Joins: zebrag (~chris@user/zebrag)
[16:52:15] <MJCD> and even if you randomize as much as you can; preventing this kind of thing from an extension level categorically will break shit
[16:52:24] <MJCD> and again, this is just 1 thing
[16:52:35] <MJCD> there's so many, all with slightly different methods
[16:52:45] <MJCD> and they change constantly
[16:53:11] <MJCD> as to render attempts to get around it so to speak, harder as you have to update your own rules at a minimum (regex usually)
[16:53:34] <MJCD> I ran some systems on facebook before they had like, facebook apps and stuff now -- and it was nightmare-ish
[16:53:56] <MJCD> and that was trying to work /with/ them, not /against/ them
[16:54:41] <MJCD> in the end of the day, it's not a winnable war; beyond your existing vpn you COULD consider a stateful https proxy
[16:55:06] <MJCD> which will provide you direct access to do literally anything you want with requests, all in one central place on your network
[16:55:11] <MJCD> or on a vps or w/e
[16:55:38] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:31d0:be79:8bea:8cd9)
[17:00:41] <entuland> caveman, there seems to be a windows registry position for chrome which you can use to list full paths you want to block
[17:01:03] <entuland> googling I found something about chrome enterprise or managed chrome where you can add such policies in the settings
[17:01:14] <entuland> but doesn't seem to apply to the regular chrome browser
[17:01:16] <caveman> linux.
[17:01:28] <entuland> there surely are ways to do that even system wide on linux
[17:01:30] <caveman> i have too much beard to use windows.
[17:01:41] <entuland> yeah, ignore the OS preferences
[17:01:56] <entuland> and no reason to be offensive towards windows users
[17:02:08] <entuland> hosts files can block entire domains
[17:02:17] <entuland> there has to be a way to block specific paths withing a domain
[17:02:30] <caveman> odd how this is so hard.
[17:02:41] <entuland> how did you investigate about that exactly?
[17:02:55] <entuland> did you google "linux block access to specific URL paths" or the alike?
[17:03:54] <gry> Why are you doing that again?
[17:04:11] <entuland> caveman is worried about a specific JS script doing fingerprinting on them
[17:04:15] <MJCD> lol paranoia TLDR
[17:04:24] <systemfault> lol, use links then...
[17:04:33] <MJCD> lynx*
[17:04:35] <MJCD> ?
[17:05:06] <systemfault> MJCD: It's the same idea as Lynx
[17:05:08] <caveman> systemfault: need js.
[17:05:14] <MJCD> but again you can just turn JS off, most sites will behave much more appropriately (usually going to a "lite" mode)
[17:05:31] <MJCD> and if they don't their shit :D
[17:05:38] <caveman> MJCD: need js.
[17:05:47] <MJCD> "stop using that site" or run a full bidirectional proxy
[17:05:54] <MJCD> this is really not a js issue
[17:06:09] <MJCD> unless you're going to write extensions -- which still wont run on your phone for example
[17:06:18] <MJCD> ie the thing most of us are tied to 24/7 lol
[17:06:33] <systemfault> There are a lot of ways to fingerprint :/
[17:06:37] <systemfault> That's the problem here...
[17:06:55] <MJCD> Right, we covered that like 5 times already
[17:07:27] <MJCD> thus how a unified proxy is the "best" solution if they do want to affect /all/ http(s)
[17:07:42] <MJCD> and that thing might use regex but it won't be using js ;p
[17:08:10] <MJCD> They're also already behind a VPN just for reference lol
[17:08:20] <MJCD> so this is the next logical step
[17:08:26] <MJCD> given <paranoia>
[17:09:19] <systemfault> The root of the problem is that the more capabilities we give to the browser, the more ways to fingerprint...
[17:12:36] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[17:13:11] *** Joins: ssss (~ssss@95.111.44.7)
[17:13:45] <entuland> caveman, what about using a TOR browser following the paranoid guidelines about preventing fingerprinting (such as keeping the default window size without setting it fullscreen) or something?
[17:14:42] *** Quits: jazzy (~jaziz@2600:380:4547:d128:788a:9261:efcd:4642) (Ping timeout: 256 seconds)
[17:14:57] <systemfault> Tor inside a VM maybe ? :p
[17:15:12] <systemfault> Fingerprint my VM... no f's given
[17:15:33] <codingcampbell> this is the kind of thing umatrix did really well, i think it got moved to ublock exprt mode or w/e. basically whitelist/blacklist URL patterns
[17:15:45] <codingcampbell> you cant do it on network level, too much HTTPS these days. browser extensions only
[17:17:59] <MJCD> systemfault: no lol the core problem is caring about shit you don't need to ;p
[17:18:21] <MJCD> not every company is facebook
[17:18:22] <codingcampbell> https://github.com/gorhill/uBlock/wiki/Dynamic-filtering:-quick-guide if you want to go down that rabbit hole
[17:18:34] <systemfault> I do... but perhaps the dude is from some shit country
[17:18:36] <MJCD> codingcampbell: ofc you can with https
[17:18:42] <MJCD> you basically MITM yourself
[17:18:46] <systemfault> I mean, I don't personally care...
[17:19:00] <MJCD> nearly all corporate/enterprise networks do this in 2021
[17:19:13] <codingcampbell> i would consider root certing yourself to be a bad option but you're welcome to do so
[17:19:17] <MJCD> (yes, they can read you fb messaging on the wifi)
[17:19:34] <MJCD> codingcampbell: lol no silly
[17:19:46] <systemfault> MJCD: Don't people have cellphones these days?
[17:19:47] <MJCD> you use for example letsencrypt internal to the network
[17:20:01] <MJCD> externally, it interracts with sites using the regular certs
[17:20:18] <codingcampbell> im aware of how to do it, but based on our friend's messages here ... i would way sooner recommend an extension
[17:20:23] <MJCD> systemfault: urgh don't get me started on phones.... :P
[17:20:30] <MJCD> codingcampbell: we already did :)
[17:20:36] <MJCD> and I covered how there's many options
[17:20:51] <codingcampbell> and i've added another
[17:20:56] <MJCD> most, are not practical for use on custom sites ie external sites
[17:21:08] <MJCD> again my reasoning is above
[17:21:16] <codingcampbell> i do dynamic filtering daily, ymmv, it's fine for me.
[17:21:39] <MJCD> using what
[17:22:27] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 252 seconds)
[17:22:44] *** Joins: Deide (~Deide@wire.desu.ga)
[17:22:44] *** Quits: Deide (~Deide@wire.desu.ga) (Changing host)
[17:22:44] *** Joins: Deide (~Deide@user/deide)
[17:22:53] <codingcampbell> its just umatrix. you can DM if you're that curious, not sure we need to blab about it here
[17:23:36] <MJCD> how much of it's codebase are you intimately familiar with?
[17:24:58] <codingcampbell> DM me if you want to go down this rabbit hole
[17:24:58] *** Joins: pavonia (~user@user/siracusa)
[17:25:04] <MJCD> who's vetted it from a security standpoint
[17:25:24] <MJCD> http://raymondhill.net/ -- the authors -- don't enforce https for their own site ;p
[17:25:33] <MJCD> no favicon
[17:25:42] <MJCD> no content xD
[17:26:09] <MJCD> but to them you entrust every http(s) request
[17:26:14] <codingcampbell> you seem to have a focus problem. a trusted open source contributor with an open code base. and i assume you have read every line of FF before using it
[17:26:15] <MJCD> interesting.
[17:26:22] <velix> Anyone with an idea, why `visual studio code` isn't an IDE?
[17:26:28] <MJCD> velix: it is.
[17:26:31] <codingcampbell> it is an IDE, it integrates many things velix
[17:26:43] <velix> 1000 people told me, it's NO ide.
[17:26:45] <MJCD> codingcampbell: i'm just sayin' :))
[17:26:46] <velix> :o
[17:26:48] <codingcampbell> 1000 people are wrong
[17:26:51] <MJCD> Someone's always watching
[17:26:56] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[17:27:04] <velix> So I don't need phpstorm & intelli stuff?
[17:27:05] <MJCD> and you're basically just consolidating all your trust to 1 thing
[17:27:13] <MJCD> which wont even work on your phone for example
[17:27:21] <MJCD> meaning you'll still be fingerprinted /sometimes/
[17:27:23] <codingcampbell> MJCD i just provided the person with an option instead of shitposting about lynx. idk why you are spending so much time on it. i'm moving on
[17:27:34] <MJCD> lol fair nuff
[17:27:41] <MJCD> just chattin' :))
[17:27:53] <MJCD> I have thought quite some about the whole issue
[17:28:01] *** Joins: thiras (~thiras@user/thiras)
[17:28:13] <MJCD> I've invested probably hundred(s) of hours at this point into minimizing my online footprint
[17:28:43] <MJCD> And this is just my kinda... findings I guess
[17:29:01] <codingcampbell> anyone can armchair their observation that a nation-state will get you. idk if that's relevant enough to spam the javascript channel. you can DM me if you want to rehash that dead horse
[17:29:06] <MJCD> velix: you really don't need phpstorm in 2021 realistically
[17:29:16] <MJCD> some people DO like it though
[17:29:26] <velix> MJCD: Sure... but I'll save the money then.
[17:29:30] <MJCD> and intelli stuff, in vscode click the extensions tab
[17:29:32] <velix> Those people told me: VSC isn't an IDE :D
[17:29:34] <MJCD> and search that
[17:29:42] <MJCD> well, they're flat out wrong
[17:29:47] <codingcampbell> if VSC is an ide how come it _integrates_ a terminal, for example. hmmmm
[17:29:49] <MJCD> and you should tell them so
[17:29:53] <codingcampbell> vsc is not an ide*
[17:30:06] <MJCD> so that they don't spread this bad info to others mainly
[17:30:28] <codingcampbell> also you should just avoid anyone who has a semantic argument like that. surround yourself with people who get things done
[17:30:44] <MJCD> true that!
[17:30:49] <velix> Hmm, web says "VSC is a texteditor" :-)
[17:31:03] <MJCD> velix: we're not lying to you lol
[17:31:06] <velix> https://code.visualstudio.com/docs/supporting/FAQ
[17:31:11] <MJCD> it's a very simple question and a very simple answer
[17:31:23] <velix> VSC itself says, it's no IDE :)
[17:31:26] <MJCD> What their FAQ terms it as is irrelevant to the issue at hand.
[17:31:35] <codingcampbell> intellij is also a text editor lol. among many things. my car is a space heater!
[17:31:39] <MJCD> lol
[17:31:49] <velix> codingcampbell: I'm a fart generator.
[17:31:57] <MJCD> xD
[17:32:04] <velix> Pull my finger.
[17:32:09] <MJCD> Negative.
[17:32:17] <codingcampbell> its differentiating itself from a separate visual studio IDE that predates it by many decades
[17:32:31] <MJCD> visual studio is definitely still much much more comprehensive
[17:32:41] <MJCD> but that can be to it's own detriment imho
[17:32:44] <velix> I'll just keep on using notepad++
[17:32:49] <MJCD> ... no
[17:32:52] <MJCD> notepad++ sucks.
[17:33:06] <MJCD> Like, empiracly
[17:33:10] <MJCD> (+sp)
[17:33:27] <codingcampbell> just drop the convo there MJCD why do you care what editor he uses lol. the question has been answered
[17:33:39] <MJCD> yea fair lol
[17:34:29] <MJCD> I try to give people a pretty complete logic chain usually, then whatever they decide is fine -- but I will mock them forever if they do it "wrong" :D
[17:34:48] <MJCD> tcsc: hey u
[17:35:02] <MJCD> why is xul.dll still like 80% of firefoxes install
[17:35:13] <MJCD> [latest mainstream]
[17:35:20] <MJCD> Makes me sad panda ;(
[17:35:40] <MJCD> the web has suffered enough -- end the torment of xul
[17:36:05] <MJCD> I mainly ask because I know you're familiar with/have worked on this directly from memory
[17:37:43] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Read error: Connection reset by peer)
[17:38:52] *** Joins: kakashiAL3 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[17:38:56] *** Joins: entuland_ (~entuland@user/entuland)
[17:39:01] *** Joins: kmh_ (~kmh@p200300df5f2f6b00d3c414bdedf29ea1.dip0.t-ipconnect.de)
[17:39:05] *** Joins: peteyboy_ (~peteyboy1@95.169.229.12)
[17:39:57] *** Quits: fedorafan (~fedorafan@user/fedorafan) (Quit: Textual IRC Client: www.textualapp.com)
[17:40:10] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[17:40:25] *** Joins: federico (~federico@151.51.89.77)
[17:41:47] *** Joins: eck0_ (~Android@mobile-166-173-63-55.mycingular.net)
[17:43:20] *** federico is now known as Guest4139
[17:44:08] *** Joins: doc|home (~doc@user/doc)
[17:44:55] *** Quits: ssss (~ssss@95.111.44.7) (Read error: No route to host)
[17:44:57] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 268 seconds)
[17:46:43] *** Joins: ssss (~ssss@95.111.44.7)
[17:48:14] *** Quits: Guest4217 (~federico@151.51.89.77) (*.net *.split)
[17:48:14] *** Quits: MJCD (uid193337@user/mjcd) (*.net *.split)
[17:48:14] *** Quits: kmh (~kmh@p200300df5f2f6b00d3c414bdedf29ea1.dip0.t-ipconnect.de) (*.net *.split)
[17:48:14] *** Quits: stenno (~stenno@user/stenno) (*.net *.split)
[17:48:14] *** Quits: entuland (~entuland@user/entuland) (*.net *.split)
[17:48:14] *** Quits: eck0 (~Android@mobile-166-173-63-55.mycingular.net) (*.net *.split)
[17:48:14] *** Quits: kakashiAL2 (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (*.net *.split)
[17:48:14] *** Quits: peteyboy1 (~peteyboy1@95.169.229.12) (*.net *.split)
[17:48:14] *** Quits: doc (~doc@user/doc) (*.net *.split)
[17:48:14] *** Quits: wallbroken (wallbroken@user/wallbroken) (*.net *.split)
[17:48:14] *** Quits: foureyes (foureyes@brought.to.you.by.bnc4free.com) (*.net *.split)
[17:50:48] *** Joins: Praise (~Fat@user/praise)
[17:52:30] *** Quits: hmw[at] (~hmw@80-108-56-158.cable.dynamic.surfer.at) (Ping timeout: 264 seconds)
[17:56:21] *** entuland_ is now known as entuland
[17:58:04] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[17:58:30] *** Quits: Guest9 (~Guest9@43.250.157.5) (Ping timeout: 264 seconds)
[18:06:57] *** Joins: MJCD (uid193337@user/mjcd)
[18:07:04] *** Joins: stenno (~stenno@user/stenno)
[18:10:58] *** Joins: wallbroken (wallbroken@user/wallbroken)
[18:11:29] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 265 seconds)
[18:12:40] *** Joins: onizu (uid373383@id-373383.highgate.irccloud.com)
[18:15:10] *** Joins: foureyes (foureyes@brought.to.you.by.bnc4free.com)
[18:21:29] *** Joins: amahl (~amahl@87-95-128-122.bb.dnainternet.fi)
[18:47:33] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[18:48:55] *** Joins: \mSg_mini (~mSg@user/msg/x-0285936)
[18:49:10] *** Quits: iczero (iczero@hellomouse/dev/iczero) (Read error: Connection reset by peer)
[18:49:40] *** Joins: tofran2 (~tofran@37.189.158.134)
[18:49:55] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Ping timeout: 252 seconds)
[18:49:55] *** Quits: \mSg (~mSg@user/msg/x-0285936) (Ping timeout: 252 seconds)
[18:49:55] *** Quits: shailangsa (~shailangs@host86-186-177-181.range86-186.btcentralplus.com) (Ping timeout: 252 seconds)
[18:49:55] *** \mSg_mini is now known as \mSg
[18:51:01] *** Quits: tomjwatson915 (~tomjwatso@80.30.122.193) (Ping timeout: 252 seconds)
[18:51:01] *** Quits: tofran (~tofran@37.189.158.134) (Ping timeout: 252 seconds)
[18:51:01] *** tofran2 is now known as tofran
[18:51:34] *** Quits: Pajus (~Pajus@user/pajus) (Ping timeout: 252 seconds)
[18:52:00] *** Joins: iczero (iczero@hellomouse/dev/iczero)
[18:52:24] *** Joins: tomjwatson915 (~tomjwatso@80.30.122.193)
[18:52:49] *** Quits: n00b101 (uid448161@id-448161.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[18:53:02] *** Joins: Pajus (~Pajus@user/pajus)
[18:53:23] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[18:56:45] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 264 seconds)
[19:01:43] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[19:05:29] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 272 seconds)
[19:08:40] *** Joins: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi)
[19:11:19] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[19:12:44] *** Joins: zebrag (~chris@user/zebrag)
[19:13:16] *** Quits: kshockey (~kyshoc@user/kyshoc) (Quit: ZNC 1.8.0 - https://znc.in)
[19:13:40] *** Joins: shailangsa (~shailangs@host86-186-177-181.range86-186.btcentralplus.com)
[19:16:20] *** Quits: peteyboy_ (~peteyboy1@95.169.229.12) (Quit: Leaving)
[19:16:36] *** Joins: peteyboy1 (~peteyboy1@95.169.229.12)
[19:23:28] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[19:27:51] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[19:27:57] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[19:32:48] *** Quits: ssss (~ssss@95.111.44.7) (Ping timeout: 252 seconds)
[19:34:12] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[19:41:08] *** Joins: zebrag (~chris@user/zebrag)
[19:41:56] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: leaving)
[19:42:59] *** Joins: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net)
[19:42:59] *** Quits: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net) (Changing host)
[19:42:59] *** Joins: kyshoc (~kyshoc@user/kyshoc)
[19:44:12] *** Joins: han-solo (~hanish@user/han-solo)
[19:45:47] *** Quits: kyshoc (~kyshoc@user/kyshoc) (Client Quit)
[19:49:19] *** Joins: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net)
[19:49:19] *** Quits: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net) (Changing host)
[19:49:19] *** Joins: kyshoc (~kyshoc@user/kyshoc)
[19:51:55] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[19:55:22] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 252 seconds)
[19:55:34] *** Joins: zacts (~zak@user/zacts)
[19:55:53] *** Quits: zacts (~zak@user/zacts) (Client Quit)
[19:57:19] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[20:00:54] *** Quits: friend (~friend@c-73-43-171-169.hsd1.ga.comcast.net) (Ping timeout: 264 seconds)
[20:01:58] *** Quits: MJCD (uid193337@user/mjcd) (Quit: Connection closed for inactivity)
[20:03:05] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[20:04:47] *** Joins: zebrag (~chris@user/zebrag)
[20:05:34] *** Joins: Rockwood (~Rocky@2401:4900:40fd:8c8c:b9a9:cdd7:889:b8e3)
[20:06:11] *** Quits: kyshoc (~kyshoc@user/kyshoc) (Ping timeout: 244 seconds)
[20:07:29] *** Joins: exciteabletom (~tom@180.150.82.109)
[20:07:45] *** Joins: Naan (~naan@user/naan)
[20:09:20] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[20:11:33] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[20:12:26] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:17:53] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 268 seconds)
[20:20:09] *** Quits: deviantfero (~deviantfe@190.150.27.58) (Ping timeout: 264 seconds)
[20:24:05] *** Joins: MrKeuner (~MahJ@pool-108-7-46-235.bstnma.fios.verizon.net)
[20:25:59] <MrKeuner> Hi, react.js is on topic? I was wondering if this.setState(state, foo) foo() { this.setState(state, bar)} ... is  abad design and if that is the case, what is the suggested way of handling this kind of requirements?
[20:27:48] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[20:27:49] <Rockwood> why not hook?
[20:28:07] <MrKeuner> I am not familiar with hooks. Are hooks the suggested way of handling this?
[20:28:36] <Rockwood> MrKeuner, https://reactjs.org/docs/hooks-intro.html
[20:30:17] <Rockwood> you can see yourself now
[20:30:59] *** Joins: friend (~friend@c-73-43-171-169.hsd1.ga.comcast.net)
[20:36:18] *** Joins: dyslexicat (~dyslexica@ymir.whatbox.ca)
[20:37:30] *** Joins: vdthi (~vdthi@dynamic-077-011-046-137.77.11.pool.telefonica.de)
[20:38:14] *** Joins: ssss (~ssss@95.111.44.7)
[20:43:11] *** Quits: jess (~jess@libera/staff/jess) ()
[20:44:03] *** Joins: summersault (~summersau@179.221.251.16)
[20:45:00] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[20:47:32] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Read error: Connection reset by peer)
[20:47:52] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[20:49:29] *** Joins: summersault (~summersau@179.221.251.16)
[20:49:31] *** Quits: summersault (~summersau@179.221.251.16) (Read error: Connection reset by peer)
[20:56:01] *** Joins: zacts (~zak@user/zacts)
[20:57:59] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[21:02:55] *** Joins: Crassus (~Crassus@user/crassus)
[21:04:22] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[21:05:13] *** Joins: c4017 (~c4017@S010664777dab66f3.vf.shawcable.net)
[21:07:25] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[21:09:02] *** Joins: zebrag (~chris@user/zebrag)
[21:09:36] *** Joins: acagastya (~acagastya@wikinews/acagastya)
[21:10:15] *** Quits: dyslexicat (~dyslexica@ymir.whatbox.ca) (Ping timeout: 244 seconds)
[21:10:17] <acagastya> Hi, I am getting an error `Cross-Origin Request Blocked: The Same Origin Policy disallows reading the remote resource at http://localhost:3001/peerjs/id?ts=16235159649510.024857319946525513. (Reason: CORS request did not succeed).` -- any idea how this can be resolved?
[21:12:05] *** Joins: ssss_ (~ssss@95.111.44.7)
[21:12:06] *** Quits: ssss (~ssss@95.111.44.7) (Read error: Connection reset by peer)
[21:12:25] <wroathe> acagastya: What's the origin of the request?
[21:12:44] *** Joins: CoderGuy (~CoderGuy@2601:644:101:4f20:b817:307c:cc29:ea7d)
[21:12:48] <CoderGuy> I need a js expert
[21:13:10] <acagastya> `localhost:3000` calls 3001.
[21:13:11] <CoderGuy> why is it, that if I switch my function to being async, and await the creation of my variable, it no longer has the error of disappearing?
[21:13:16] <wroathe> acagastya: If it's supposed to be a cross-origin request you'll need to add CORS headers to that resources response that say that that resource is allowed to access it
[21:13:48] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[21:13:51] <acagastya> I have added `app.use(cors())` to it.
[21:14:07] <CoderGuy> i'm very confused as to why async would fix my problem, I don't even know what async does
[21:14:44] <CoderGuy> here's what i do know, the library i'm using nodegui, communicates with another library qt and somehow through the creation of one of the objects, it has this flaw where if you try to do it via parent, the variable fails
[21:14:49] <CoderGuy> but if I add async, it solves things
[21:14:59] <CoderGuy> so what am I even doing by saying async?
[21:15:08] <CoderGuy> I did this
[21:15:32] <acagastya> CoderGuy -- most certainly the function returned a `Promise`?
[21:15:37] <CoderGuy> async function myfunction(){ //and then instead of a = b.parent(); I did a = await b.parent();
[21:15:38] <wroathe> acagastya: http://expressjs.com/en/resources/middleware/cors.html#configuration-options I'm not sure if the cors middleware has a default setting without any options, but here it indicates that you can set origin: true to allow cors from any incoming domain
[21:15:46] <wroathe> acagastya: If you're just doing it for testing purposes
[21:16:05] <wroathe> acagastya: In a real production scenario you'll want to limit this t specifically the origins that should be allowed access.
[21:16:12] <CoderGuy> does await mean like, wait for this? does javascript straight not wait for things?
[21:16:40] <wroathe> CoderGuy: https://eloquentjavascript.net/11_async.html
[21:16:43] <acagastya> CoderGuy -- `await` waits for the promise to be fulfilled/ rejected; while processing other requests.
[21:16:56] <CoderGuy> ohhh is it multithreading issue?
[21:17:01] <CoderGuy> where the core seperates tasks?
[21:17:33] <CoderGuy> I just, I thought it would execute in order is that not the case?
[21:17:57] <acagastya> Not multi-threading.
[21:18:19] <acagastya> JavaScript runs on the single thread -- but there is a concept of event loop.
[21:18:34] <CoderGuy> sooo like
[21:18:51] <CoderGuy> basically why would it skip over the creation of the variable?
[21:19:11] <acagastya> CoderGuy -- could you resend the code snippet?
[21:19:19] <acagastya> wroathe -- looking.
[21:19:23] <CoderGuy> I could but it's there's so much to it
[21:19:40] <CoderGuy> it's a big library but essentially I think oh is it cuz of function calls
[21:20:21] <CoderGuy> like if you do new myobject(); that's fine, but if you have like new myobject(getsomefunctionfirst());
[21:20:43] <CoderGuy> does it not wait for getsomefunctionfirst(); to resolve?
[21:21:53] <CoderGuy> in theory if that's true then... one sec
[21:22:03] *** Joins: dyslexicat (~dyslexica@ymir.whatbox.ca)
[21:22:39] <acagastya> Could you check what does that function return?
[21:22:42] <acagastya> A promise?
[21:23:01] <acagastya> If you do not know what a promise is, let me know -- I can explain.
[21:23:05] <CoderGuy> nope still fails
[21:23:19] <CoderGuy> um the function should get the parent object
[21:24:53] *** Joins: thiras (~thiras@user/thiras)
[21:24:56] <caveman> 08:48 <MJCD> not every company is facebook   <--  do not strawman.  i'm dealing with a wicked company worse than facebook.  not even the zuckborg comes close to their evilness.
[21:25:20] <CoderGuy> *gasp* FOX NEWS!?
[21:25:26] *** Joins: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net)
[21:25:26] *** Quits: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net) (Changing host)
[21:25:26] *** Joins: kyshoc (~kyshoc@user/kyshoc)
[21:25:55] <CoderGuy> I don't know what a promise is...
[21:26:20] <CoderGuy> I do know that running this async await fixes it, and that for some reason logging the object also fixes it
[21:28:20] <wroathe> acagastya: The best practice with CORS is to configure it like you would in production, where you only allow a limited set of origins depending on environment, and only for specific resources on your server that those origins should be allowed to access
[21:30:04] <wroathe> CoderGuy: That chapter I linked to in that book will explain all of this to you, and require only an hour or two of commitment on your part.
[21:30:20] <acagastya> Unrelated to this project, wroathe -- I have an API with a POST method -- which I want should be able to be called from anywhere.  What kind of header do you suggest I use?
[21:30:53] <CoderGuy> wroathe, i'm sure there is also an hour or 2 I could spend on learning 2 + 2, but is there a simple answer like "oh it's 4 cuz put them together" or "oh yeah the variable just isn't completing cuz it's splitting the task up" or something?
[21:31:08] <wroathe> CoderGuy: No
[21:31:14] <CoderGuy> hahaha fine i'll read it then
[21:31:37] <acagastya> CoderGuy -- promises is kind of important.
[21:31:49] *** Joins: alystair (alystair@user/alystair)
[21:31:56] <acagastya> Best to understand it properly, instead of makind wrong assumptions of it.
[21:32:09] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 264 seconds)
[21:32:27] <wroathe> acagastya: Well, non-browsers will be able to access it just fine, but for browsers you'll run into CORS issues, which can be resolved through *: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin#syntax
[21:32:48] *** Joins: dyslexic1t (~dyslexica@ymir.whatbox.ca)
[21:33:14] <acagastya> Tbh, for my personal use, I don't use it in browser -- but it likely possible, if someone forks it -- they might need it via a browser.
[21:34:30] <CoderGuy> this is reading the opposite of how I thought it would
[21:34:54] <CoderGuy> is javascript by default synchronous if so what is happening? I wonder if underneath there is some async stuff
[21:34:54] *** Quits: dyslexicat (~dyslexica@ymir.whatbox.ca) (Ping timeout: 252 seconds)
[21:35:16] <CoderGuy> as in, in this guys library which communicates with c++ somehow
[21:35:18] <wroathe> CoderGuy: They're explaining async programming generally, and starting from the ground up. It would be a good idea just to follow along
[21:35:27] <CoderGuy> ok
[21:35:38] *** eN_Joy_ is now known as eN_Joy
[21:35:59] <wroathe> CoderGuy: They even answer that question you just asked. Patience, grasshopper.
[21:36:22] <CoderGuy> i'm reading :D
[21:42:54] <CoderGuy> just want you to know as i'm reading this, this is why other coding languages laugh at javascript just saying
[21:43:09] <CoderGuy> when you make a joke out of yourself, others will laugh at you XDZ
[21:43:43] *** Joins: mohab (~mohab@45.243.118.119)
[21:43:47] <acagastya> I don't speak French and I find the language weird.
[21:44:08] <wroathe> When those other languages support first-class higher-order functions I'll entertain that argument
[21:44:08] <acagastya> Same happens when people look at JavaScript.
[21:45:14] <acagastya> People don't put the effort learning the quirks of the language and find it weird.
[21:47:02] <CoderGuy> nah it's the crows nest analogy
[21:47:18] <CoderGuy> anyways, after reading most of that, i'm exactly where I started
[21:47:35] <CoderGuy> with 1 tiny catch, I can see how even in a synchronous environment, the processor can split up tasks
[21:47:46] <CoderGuy> now unless this guy did something crazy underneath, i'm thinking that is the problem
[21:48:03] <acagastya> You happen to know the event loop?
[21:48:12] <wroathe> Boy, that was a quick read
[21:48:22] <CoderGuy> wroathe, I get bored easily lol
[21:48:33] <wroathe> So do I, especially of conversations like this one
[21:48:36] <CoderGuy> lol
[21:49:10] <wroathe> Fun fact, even that question you just asked was answered by him in that chapter
[21:49:12] <CoderGuy> acagastya, the problem is, it calls from a library that is like compiled I guess? I have the C++ source for QT but
[21:49:18] <wroathe> Silly people are silly because they're silly :/
[21:49:43] <CoderGuy> wroathe, how far down does it answer it?
[21:49:49] <CoderGuy> cuz I read like 70% of it
[21:50:01] <acagastya> wroathe -- what is the worse that can happen with `Access-Control-Allow-Origin: *`?
[21:50:06] <CoderGuy> is it the find in storage thing?
[21:50:17] <wroathe> CoderGuy: I'm bored
[21:50:21] <CoderGuy> hahahaha
[21:50:39] <CoderGuy> touche
[21:50:52] <wroathe> acagastya: Well, nothing, if the resource is meant to be accessed by everybody
[21:51:01] <CoderGuy> wroathe, if you wrote this article i'm so sorry
[21:51:14] <CoderGuy> it is a very thought out article, i'm just not the reading type
[21:51:25] <wroathe> CoderGuy: I didn't. I'm just tired of answering questions that he put a lot of work into answering very well and comprehensively.
[21:51:33] <CoderGuy> fair enough :D
[21:51:38] <wroathe> CoderGuy: I'm not the answering type, today
[21:51:52] <CoderGuy> it's okay the fact anyone would ever answer is a gift ty for the article :D
[21:51:54] *** Quits: Crassus (~Crassus@user/crassus) (Ping timeout: 264 seconds)
[21:52:29] <acagastya> CoderGuy -- if you understand better watching videos -- I could suggest you some.
[21:52:44] <CoderGuy> I mean I think I do understand
[21:52:52] <CoderGuy> it's just i'm not fully sure about it
[21:53:06] <acagastya> But if you are planning to do any serious asynchronous coding using JavaScript -- 70% won't cut it.
[21:53:08] <CoderGuy> in my mind it seems like javascript is splitting up the tasks resulting in a change in data
[21:53:19] <CoderGuy> acagastya, I just want my tree to work lol
[21:53:57] <CoderGuy> somehow in building this tree, by calling parent it like fails to keep the variable, but it works if I do await
[21:54:10] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[21:54:20] <acagastya> We could tell you -- put this keyword here and there -- but you would not know what happened, and might face the same problem the next time something like this happens.
[21:54:23] <CoderGuy> which means, the call to parent() along with the creation of a variable that represents the parent is failing
[21:55:10] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[21:55:19] <CoderGuy> i'm definately trying to understand what happened but the evidence I have is not enough it's probably cuz I can't look at the QT library based c++ that was compiled into a library
[21:55:33] <wroathe> acagastya: It might be a good idea to skim through https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS if you haven't already
[21:55:39] <wroathe> acagastya: It's a relatively short read
[21:56:04] <CoderGuy> see there's this nodegui_core.node file
[21:56:19] <CoderGuy> and that's what handles the creation of my variable along with the calling of .parent(); internally
[21:57:06] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[21:57:29] <CoderGuy> oh one thing I can do is check to see if the async is on the creation or the call to parent hmm one sec
[21:58:55] <CoderGuy> yup it's on the call to parent
[21:59:27] <CoderGuy> so that means, native.parent() this call, which is in an internal library, doesn't resolve before creating the widget
[21:59:33] <CoderGuy> Although I wonder if I can async hold up
[21:59:51] <acagastya> wroathe -- I think this may (just may) be the problem of CSRF, but is this a bad idea to have an API like this?
[21:59:55] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 245 seconds)
[22:00:01] <CoderGuy> yup it's specifically the parent
[22:00:22] <CoderGuy> okay cool i've isolated it
[22:00:31] <acagastya> `curl -XPOST -H "Content-type: application/json" -d '{ "auth": "really-long-pass" }' 'https://example.com/update-last-seen'`
[22:00:49] <CoderGuy> so the parent function of something found inside nodegui_core.node is not resolving before the supposed synchronous program executes
[22:01:09] <CoderGuy> and I don't have access to this source code, so yeah
[22:01:24] <CoderGuy> if I async it and await for it to resolve though, everything is fine
[22:02:03] <acagastya> Will it make it any better, wroathe, if it was instead in the header instead of JSON?
[22:06:23] *** Joins: Guest9 (~Guest9@43.250.157.5)
[22:09:57] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 264 seconds)
[22:10:05] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[22:10:56] *** Quits: vdthi (~vdthi@dynamic-077-011-046-137.77.11.pool.telefonica.de) (Quit: Quit)
[22:11:17] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[22:12:43] *** Quits: ssss_ (~ssss@95.111.44.7) (Remote host closed the connection)
[22:14:40] *** Joins: Jaran (~mail@user/jaran)
[22:15:27] *** Joins: ssss (~ssss@95.111.44.7)
[22:20:03] *** Joins: hmw[at] (~hmw@80-108-56-158.cable.dynamic.surfer.at)
[22:23:55] *** Quits: zacts (~zak@user/zacts) (Quit: gtg)
[22:25:20] *** Quits: mohab (~mohab@45.243.118.119) (Ping timeout: 245 seconds)
[22:26:22] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[22:26:28] *** Joins: mohab (~mohab@45.243.118.119)
[22:28:44] <CoderGuy> welp I read everything i'm still confused lol
[22:29:06] <acagastya> What part would you like to seek clarification?
[22:29:19] *** Quits: ssss (~ssss@95.111.44.7) (Remote host closed the connection)
[22:29:54] <CoderGuy> I guess I just don't understand how i'm supposed to know if it's a synchronous problem or an a synchroneous one
[22:30:15] <CoderGuy> when both of these definitions appear to be the same but different
[22:30:19] <acagastya> You look at the API/function signature.
[22:30:38] <CoderGuy> but I can't look at the c++ library function
[22:31:00] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 252 seconds)
[22:31:16] <CoderGuy> supposedly it's the QT library but
[22:31:39] <CoderGuy> there is nothing here that shows it's async, but if I convert to being async I seem to have more control over the sycnhronisty of things
[22:32:10] *** Quits: mohab (~mohab@45.243.118.119) (Read error: Connection reset by peer)
[22:32:10] <CoderGuy> But the article says synchroneous programming, goes in order, so if it goes in order why the heck is it not waiting for things?
[22:32:39] <CoderGuy> In a synchronous programming model, things happen one at a time. When you call a function that performs a long-running action, it returns only when the action has finished and it can return the result. This stops your program for the time the action takes.
[22:32:58] <CoderGuy> But that's not what is happening
[22:33:00] *** Joins: mohab (~mohab@45.243.118.119)
[22:33:53] <CoderGuy> sooo maybe the C++ code starts new threads? that's my guess
[22:34:02] <CoderGuy> lets here lets take a gander
[22:34:26] <acagastya> Ask the maintainer what it returns.
[22:35:02] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[22:36:05] <CoderGuy> wait how?
[22:36:30] <acagastya> Just like how you are asking here.
[22:36:33] <CoderGuy> ohhh
[22:36:43] <CoderGuy> sigh
[22:36:59] <acagastya> Do they have an IRC channel?  Mailing list?  An email from their git commit?
[22:37:02] *** Quits: exciteabletom (~tom@180.150.82.109) (Quit: Konversation terminated!)
[22:37:17] <acagastya> Maybe the one responsible for the docs?
[22:37:38] <CoderGuy> ya know what
[22:37:45] <CoderGuy> the C++ function has *parent()
[22:40:20] <CoderGuy> inline QTreeWidgetItem *parent() const { return par; }
[22:50:59] *** Joins: arthur-_ (~arthur@2a01:e0a:af:2bd0:8115:3ef3:ced:40a)
[22:51:13] <arthur-_> « constructor(options) {this.options = options; » is there a neater syntax I could use here?
[22:52:04] <GreenJello> arthur-_, nope
[22:52:13] <arthur-_> GreenJello: thanks!
[22:53:45] *** Quits: mohab (~mohab@45.243.118.119) (Quit: Quit)
[22:56:48] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 272 seconds)
[22:57:34] *** Joins: dyslexicat (~dyslexica@ymir.whatbox.ca)
[22:57:49] <CoderGuy> maybe it's literally just the calling of the library to finish that doesn't finish prior
[22:58:38] *** Quits: kmh_ (~kmh@p200300df5f2f6b00d3c414bdedf29ea1.dip0.t-ipconnect.de) (Quit: Leaving)
[23:00:09] *** Quits: dyslexic1t (~dyslexica@ymir.whatbox.ca) (Ping timeout: 252 seconds)
[23:06:33] *** Quits: Guest8 (~Guest8@2600:8801:131c:9200:6f17:4986:378d:8097) (Quit: Client closed)
[23:11:57] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[23:14:51] <CoderGuy> conclusion, none of this makes sense
[23:16:16] <ljharb> arthur-_: you probably want to store that as a private field tho, ie, `this.#options = options`
[23:16:22] *** Joins: kmh (~kmh@p200300df5f2f6b00b05a0be1bb89517c.dip0.t-ipconnect.de)
[23:19:07] <CoderGuy> okay I think I understand now
[23:19:46] <CoderGuy> Synchronous programming has the flaw of single thread taking time to finish, so javascript is like "hey why not utilize the fact you have multi core processor, and start 2 tasks at once, even though it was coded in a single threaded way"
[23:20:22] <CoderGuy> it then gives you the option to use ASYNC if you want things to execute in order on a single thread
[23:20:57] <CoderGuy> so when I do Async, it does as intended rather than multithread, multithread only has the problem of variable switches if said variable is relied on
[23:21:20] <CoderGuy> and in this case it is, anyways that's my conclusion
[23:22:04] <CoderGuy> honestly this should be reversed though, everything should start as single thread and you should have to upgrade to multi javascript is so weird
[23:24:43] <CoderGuy> I didn't have to read that whole article btw, literally just the explanation of Async versus Sync and since Sync can run multithreads and probably is doing that, would have sufficed
[23:24:55] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 245 seconds)
[23:25:01] <CoderGuy> seems to be working under async holy
[23:29:20] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[23:31:16] *** Joins: littleniki (~littlenik@2600:1700:7232:90:a549:a579:1c8c:2f77)
[23:34:41] *** Quits: Rockwood (~Rocky@2401:4900:40fd:8c8c:b9a9:cdd7:889:b8e3) (Read error: Connection reset by peer)
[23:36:07] *** Quits: onizu (uid373383@id-373383.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[23:37:47] <ljharb> CoderGuy: that's not entirely right
[23:37:57] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 272 seconds)
[23:38:02] <CoderGuy> well it's as close as I can get, what am I missing?
[23:38:05] <ljharb> CoderGuy: it's likely that native things, like i/o, will be running on separate threads, but all JS will only ever run on that one thread
[23:38:26] *** Joins: Buttercat (~Buttercat@user/buttercat)
[23:38:30] <CoderGuy> ohhh well this seems to be some type of a native library call so yeah
[23:38:39] *** Quits: peterhil (~peterhil@dsl-hkibng32-54f849-252.dhcp.inet.fi) (Ping timeout: 252 seconds)
[23:38:42] <CoderGuy> I mean it's labeled as native, but idk how it works exactly
[23:41:21] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[23:48:44] *** Quits: dunkeln (~dunkeln@94.129.65.28) (Ping timeout: 272 seconds)
[23:49:54] *** Joins: dunkeln (~dunkeln@94.129.65.28)
[23:50:14] *** Quits: lilmonkey (~lilmonkey@user/lilmonkey) (Read error: Connection reset by peer)
[23:54:26] *** Joins: lilmonkey (~lilmonkey@user/lilmonkey)
[23:54:30] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 245 seconds)
[23:59:43] *** Quits: friend (~friend@c-73-43-171-169.hsd1.ga.comcast.net) (Ping timeout: 244 seconds)
