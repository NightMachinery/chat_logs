[00:12:54] <adam12> John_Ivan: IMHO, leave parenthesis off if there are no arguments, but use them if there are.
[00:13:32] <adam12> They are optional in most cases, but while you're learning, it's not worth determining when they can be left off. Or which arguments belong to which.
[00:13:44] <adam12> Or the worse, when a hash is passed as a block argument.
[00:16:05] <John_Ivan> adam12, I heed the advice. But I know what practice is objectively right or wrong when it comes to syntax choices.
[00:16:32] <John_Ivan> parentheses should not be optional. with or without arguments. that is my belief.
[00:16:41] *** Quits: bit4bit (~bit4bit@181.49.102.14) (Ping timeout: 256 seconds)
[00:19:22] *** Joins: TCZ (~tcz@91.150.178.124)
[00:20:07] <John_Ivan> ---
[00:20:20] *** Joins: bit4bit (~bit4bit@181.49.102.14)
[00:20:29] <John_Ivan> "collection.each() do | arg | { }"
[00:20:48] <John_Ivan> to be used instead of for? eh. a bit of a meh. but sure. it's fair enough.
[00:22:08] <adam12> John_Ivan: `for` is there but it's not used that much. It has different semantics than the blocks, and you can't use it with Enumerable.
[00:22:51] <adam12> John_Ivan: Once you start using Enumerable methods you'll see why.
[00:24:30] *** Joins: hololeap (~hololeap@user/hololeap)
[00:24:58] <John_Ivan> adam12, I get the idea. just another <Iteration> API
[00:25:26] <adam12> John_Ivan: Sure. Many methods in Enumerable are chainable too, so you can compose operations.
[00:27:25] <John_Ivan> and is `while` as well less frequent as a result of `unless/until`?
[00:46:33] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 276 seconds)
[00:47:13] <weaksauce> don't use for John_Ivan 
[00:47:19] <weaksauce> it will mess you up
[00:48:27] <weaksauce> and omitting parens on methods that don't have arguments is common. reads easier
[00:49:06] <weaksauce> but, adding parens when there are arguments is what should be done
[00:54:26] *** Joins: michigan (uid507982@id-507982.ilkley.irccloud.com)
[00:54:36] <John_Ivan> fair
[00:55:50] <John_Ivan> weaksauce, right, well, so far, aside from some of the conventions, things look good.
[00:56:37] <John_Ivan> it's not python or js.
[00:56:38] <John_Ivan> :P
[00:56:45] <weaksauce> for i in [*1..10] { puts(i) } 
[00:56:51] <weaksauce> doesn't create a new scope for i 
[00:57:01] <weaksauce> i is equal to 10 now
[00:57:25] <weaksauce> vs [*1..10].each { |i| puts(i) }
[00:57:28] <weaksauce> i is undefined 
[00:57:56] <John_Ivan> so `i` is left dangling around the scope, taking up namespace
[00:58:01] <John_Ivan> that's..... meh.
[00:58:52] <weaksauce> nah it will clobber too
[00:59:09] <weaksauce> so if you have say i = 42 it would be overwritten
[00:59:25] <weaksauce> at the end of the for loop
[00:59:35] <John_Ivan> makes sense.
[01:02:38] *** Quits: TCZ (~tcz@91.150.178.124) (Quit: Leaving)
[01:04:41] <John_Ivan> weaksauce, nice, there's also no need to artificially create accessors/mutators for each variable you add to your class
[01:05:57] <weaksauce> there's attr_accessor, attr_reader and attr_writer if you want to make the basic cases easily
[01:06:23] <weaksauce> rw, r and w 
[01:06:36] <weaksauce> just pass in a symbol in your class 
[01:06:38] <John_Ivan> yup. saw that in the book
[01:06:44] <John_Ivan> it's neat
[01:15:14] *** Quits: _ht (~quassel@82-169-194-8.biz.kpn.net) (Remote host closed the connection)
[01:46:04] <nakilon> 05:11:13 <John_Ivan> but I need this running on windows.
[01:46:57] <nakilon> the last time I had such demand I convinced them to make it a web app and use via browser
[01:47:10] <nakilon> depends on your use case  of course
[01:51:14] *** Quits: teclator (~quassel@85.155.180.70.dyn.user.ono.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[01:58:17] *** Quits: RawFiend (~textual@176.54.66.45) (Quit: Gone away...)
[02:07:26] <John_Ivan> my main data I process on is on NTFS drivers, used mainly by Windows.
[02:13:53] <leftylink> ugh I forget the flags every time... maybe I should just use awk
[02:13:55] <leftylink> pandabot: what's ruby flags
[02:13:56] <pandabot> rubyflags is: ruby -ple '$_.upcase!' < input.txt; ruby -nle 'BEGIN { i = c = 0 }; c += $_.size; puts "#{i += 1} #$_"; END { p c }' < input.txt
[02:16:31] <nakilon> use bash ctrl+R
[02:17:15] <weaksauce> or ... make an alias
[02:17:47] <weaksauce> also, what are you doing with that monstrosity 
[02:26:05] <leftylink> at first I thought I wanted a sum, but I decided min/max were sufficient, and since min/max is all I want, I went with sort -n instead of Ruby
[02:26:37] <leftylink> a sum over all the lines provided on standard input
[02:26:38] *** Quits: bit4bit (~bit4bit@181.49.102.14) (Remote host closed the connection)
[02:28:07] <leftylink> okay so if I want the sum it's awk '{s+=$1} END {print s}'
[02:28:40] <nakilon> is BEGIN END a thing from awk?
[02:31:22] <leftylink> I guess that seems likely
[02:53:51] *** Quits: geewiz (~geewiz@user/geewiz) (Ping timeout: 250 seconds)
[03:10:36] *** Quits: michigan (uid507982@id-507982.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[03:33:46] *** Joins: bobdobbs` (~user@116.251.149.196)
[03:50:03] <ccooke> nakilon: Technically, I suspect that it would have been by way of perl. Ruby picks up a lot of inspiration from perl, after all.
[03:50:21] <ccooke> (of course, perl did not originate them, but there's a chain of inheritance here :-)
[03:51:20] *** Quits: hellstabber (~hellstabb@178.233.16.12) (Remote host closed the connection)
[04:11:21] <weaksauce> I think perl had them because of awk and awk probably started the chain
[04:11:50] <weaksauce> i imagine awk started it at least since it makes the most sense for that program
[04:28:46] *** Joins: graywolf (~wolf@user/graywolf)
[04:33:13] <ccooke> I believe they predate awk
[04:34:46] <wnd> there's algol with BEGIN and END
[04:34:51] <ccooke> yeah
[04:35:50] <ccooke> I was just trying to check if algol had them, but it is late and my searching is clearly bad)
[04:38:32] <ccooke> (If I'm reading correclty, Algol has a compile time block delimited by BEGIN...END. It does not have a BEGIN and END block that execute before or after the rest of the code respectively
[04:38:41] <ccooke> If I'm reading this correctly, of course)
[04:54:54] <ccooke> (well, looks like perl definitely got BEGIN/END from awk; awk had them pre perl 1.0, perl 1.0 has them and explicitly is announced as a replacemrnt for sed/awk/shell)
[04:55:04] <ccooke> (... I should go sleep and stop nerdsniping myself)
[05:01:18] <weaksauce> oh yeah i meant them in the way ruby uses them not the way other programming languages use them
[05:01:27] <weaksauce> begin end is in many languages to denote a block
[05:07:04] *** Quits: graywolf (~wolf@user/graywolf) (Quit: WeeChat 3.3)
[05:12:27] <John_Ivan> weaksauce, does ruby support macro redefinition?
[05:12:43] <John_Ivan> e.g something similar to "#define keyword my_own"
[05:13:08] <weaksauce> it supports a lot of metaprogramming
[05:13:16] <weaksauce> it's... very flexible 
[05:13:25] <John_Ivan> I like the sound of that :>
[05:13:42] <weaksauce> method_missing, const_missing, open classes 
[05:13:47] <weaksauce> dynamic dispatch
[05:13:58] <weaksauce> method definition on the fly
[05:14:26] <weaksauce> alias is a keyword you can use to redefine methods
[05:14:36] <John_Ivan> weaksauce, fucking sweet!
[05:14:44] <weaksauce> alias_method is another with slightly similar semantics 
[05:14:56] <weaksauce> if you just want to overwrite a method you can just redefine it 
[05:15:17] <weaksauce> class String; def to_s "hello"; end; end 
[05:15:23] <John_Ivan> weaksauce, so what would be a way for me to, say, introduce { } on if statements, methods, etc instead of "end"?
[05:15:51] <John_Ivan> e.g if (), while (), def mymethod() {}, etc.
[05:15:54] <John_Ivan> uh
[05:16:02] <John_Ivan> if {}** while {}**
[05:16:41] <weaksauce> that's probably one of the few things that is not possible
[05:16:55] <weaksauce> you can pass {} to methods 
[05:16:58] <John_Ivan> awh. pity.
[05:17:04] <weaksauce> and it is a block
[05:17:09] <weaksauce> that you can call inside it 
[05:17:27] <weaksauce> like each {|x| puts x }
[05:17:50] <weaksauce> that's basically just an anonymous function that gets passed into the function either explicitly or implicitly depending
[05:18:02] <John_Ivan> hm
[05:18:09] <John_Ivan> yeah. gotcha
[05:18:17] <John_Ivan> I mean
[05:18:18] <weaksauce> def each(&theblock) theblock.call() end
[05:18:30] <John_Ivan> I don't mind the end. I'm actually relieved it's there. in python there's NOTHING
[05:18:40] <John_Ivan> but between having something there and nothing, I prefer braces
[05:18:46] <John_Ivan> :P
[05:19:09] <weaksauce> or def each; yield(something); end
[05:19:17] <weaksauce> that is the difference
[05:20:01] <weaksauce> yeah since blocks are so common in ruby the do end and { } syntax is all over the place and you can't really use it for control flow like you want
[05:21:45] <John_Ivan> weaksauce, no worries.
[05:24:05] *** Joins: geewiz (~geewiz@user/geewiz)
[05:27:34] <John_Ivan> weaksauce, do you use anything other than IRC? discord for example?
[05:28:10] <gr33n7007h> John_Ivan: you could do something like this: def iff(cond, &b) b.call if cond end; iff ( 1 == 1 ) { puts :yay }
[06:24:05] *** Joins: Pipip (~Pip@user/Pipip)
[06:30:53] *** Quits: infernix (nix@2a02:22a0:bbb1:d500::2) (Quit: ZNC - http://znc.sourceforge.net)
[06:44:17] *** Quits: geewiz (~geewiz@user/geewiz) (Ping timeout: 256 seconds)
[06:56:45] *** Quits: John_Ivan (~John_Ivan@31-187-33-75.dynamic.upc.ie) (Ping timeout: 256 seconds)
[07:03:23] *** Joins: arkantos (uid447192@id-447192.uxbridge.irccloud.com)
[07:13:11] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 256 seconds)
[07:15:52] *** Quits: Pipip (~Pip@user/Pipip) (Quit: Ex-Chat)
[07:27:45] *** Joins: infernix (nix@2a02:22a0:bbb1:d500::2)
[07:33:42] *** Joins: oxfuxxx (~oxfuxxx@195.200.221.149)
[07:50:59] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[09:12:46] *** Quits: arkantos (uid447192@id-447192.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[09:29:08] *** Joins: hololeap (~hololeap@user/hololeap)
[09:30:05] *** Joins: kapil (~kapil@okweb.co.in)
[09:43:35] *** Joins: edrx (~Eduardo@2804:56c:d2e4:c300:e1c6:3f0f:975f:5bdb)
[09:45:05] <edrx> ppl, how do I get a REPL for ruby without the fancy colors of irb?
[09:47:34] <edrx> irb works well in the way of using Ruby from Emacs described in these slides - http://angg.twu.net/LATEX/2021emacsconf.pdf - _on recent versions of Emacs_, but its terminal control sequences confuse older versions of Emacs...
[09:47:56] <edrx> on Emacs25 I get this: https://i.ibb.co/yyDxFXK/sshot.png
[10:05:23] *** Quits: oxfuxxx (~oxfuxxx@195.200.221.149) (Quit: Raccoon's not another IRC transgenre wannabe who can't fap at the dead american dream, fhackerz)
[10:06:23] <bobdobbs`> I'm trying to check if a directory exists. I get different results from Dir.exist? depending if I'm running it from a file or running it from irb. This is my file: http://pastie.org/p/0BHHZ3evaTr4jHzQAkJRRc
[10:07:33] <bobdobbs`> If I pass in the name of a directory to the function Dir.exists? in that script, I get "false". But if I pass the exact same value into Dir.exist? in irb, I get 'true'.
[10:09:37] <bobdobbs`> Also in irb, the following line returns true: b = Dir.exist?('[pathname]')
[10:39:16] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[10:54:59] *** Parts: edrx (~Eduardo@2804:56c:d2e4:c300:e1c6:3f0f:975f:5bdb) (Killed buffer)
[11:18:14] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[11:20:12] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Client Quit)
[11:21:56] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[11:32:29] *** Joins: oxfuxxx (~oxfuxxx@178.238.11.181)
[12:03:48] *** Joins: teclator (~quassel@85.155.180.70.dyn.user.ono.com)
[12:05:10] *** Quits: oxfuxxx (~oxfuxxx@178.238.11.181) (Quit: Raccoon's not another IRC transgenre wannabe who can't fap at the dead american dream, fhackerz)
[12:05:28] *** Joins: oxfuxxx (~oxfuxxx@178.238.11.181)
[12:08:10] *** Quits: oxfuxxx (~oxfuxxx@178.238.11.181) (Remote host closed the connection)
[12:11:59] *** Joins: oxfuxxx (~oxfuxxx@178.238.11.181)
[12:13:42] *** Quits: oxfuxxx (~oxfuxxx@178.238.11.181) (Remote host closed the connection)
[12:19:45] *** Joins: oxfuxxx (~oxfuxxx@178.238.11.181)
[12:24:26] *** Quits: oxfuxxx (~oxfuxxx@178.238.11.181) (Client Quit)
[12:26:51] <weaksauce> bobdobbs` probably the newline thing try chomp
[12:27:35] <weaksauce> or you can use strip on the gets
[12:28:38] *** Joins: oxfuxxx (~oxfuxxx@178.238.11.181)
[12:40:59] *** Quits: oxfuxxx (~oxfuxxx@178.238.11.181) (Remote host closed the connection)
[12:47:46] *** Joins: oxfuxxx (~oxfuxxx@178.238.11.181)
[12:56:19] *** Quits: oxfuxxx (~oxfuxxx@178.238.11.181) (Quit: Raccoon's not another IRC transgenre wannabe who can't fap at the dead american dream, fhackerz)
[12:58:19] *** Joins: oxfuxxx (~oxfuxxx@178.238.11.181)
[13:01:44] *** Quits: oxfuxxx (~oxfuxxx@178.238.11.181) (Remote host closed the connection)
[13:02:00] *** Joins: gproto23 (~gproto23@user/gproto23)
[13:02:44] *** Joins: _ht (~quassel@82-169-194-8.biz.kpn.net)
[13:04:48] <gproto23> hey folks. i need a module for building complex pipelines in ruby
[13:05:35] <gproto23> like a Luigi (https://github.com/spotify/luigi)
[13:06:15] *** Joins: oxfuxxx (~oxfuxxx@178.238.11.181)
[13:13:02] *** Quits: oxfuxxx (~oxfuxxx@178.238.11.181) (Read error: Connection reset by peer)
[13:13:25] *** Joins: oxfuxxx (~oxfuxxx@178.238.11.181)
[13:18:39] *** Joins: geewiz (~geewiz@user/geewiz)
[13:52:37] *** Quits: oxfuxxx (~oxfuxxx@178.238.11.181) (Ping timeout: 240 seconds)
[14:24:46] *** Joins: gproto23_ (~gproto23@user/gproto23)
[14:25:00] *** Quits: gproto23_ (~gproto23@user/gproto23) (Remote host closed the connection)
[14:25:19] *** Joins: gproto23_ (~gproto23@user/gproto23)
[14:25:57] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 240 seconds)
[14:32:55] *** Quits: gproto23_ (~gproto23@user/gproto23) (Ping timeout: 256 seconds)
[14:44:45] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[14:46:36] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[14:53:26] *** Joins: graemefawcett (55322ea766@2604:bf00:561:2000::2ab)
[14:58:32] *** Quits: devz3ro (devz3ro2@user/devz3ro) (Ping timeout: 240 seconds)
[15:11:16] *** Joins: devz3ro (devz3ro2@user/devz3ro)
[15:13:34] *** Joins: gproto23 (~gproto23@user/gproto23)
[15:15:20] *** Joins: Rounin (~david@84.212.130.215)
[15:52:33] *** Quits: gproto23 (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[15:56:46] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[16:00:35] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[16:03:46] *** Joins: gproto23 (~gproto23@user/gproto23)
[16:05:17] <gproto23> hey folks. i need a module for building complex pipelines in ruby
[16:12:00] <havenwood> gproto23: Check out Rake or Bake
[16:13:07] <havenwood> bobdobbs`: like weaksauce mentions, chomp, and you could also ensure you're chomping stdin: input = $stdin.gets(chomp: true)
[16:14:12] <havenwood> gproto23: https://github.com/ruby/rake
[16:14:23] <havenwood> gproto23: https://github.com/ioquatix/bake
[16:30:12] <gproto23> thank you havenwood
[16:40:54] *** Quits: infernix (nix@2a02:22a0:bbb1:d500::2) (Quit: ZNC - http://znc.sourceforge.net)
[16:43:04] *** Joins: John_Ivan (~John_Ivan@31-187-33-75.dynamic.upc.ie)
[16:55:12] *** Joins: infernix (nix@spirit.infernix.net)
[17:09:15] *** Joins: lim (~lim@82-69-21-129.dsl.in-addr.zen.co.uk)
[17:17:37] *** Quits: lim (~lim@82-69-21-129.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[17:18:11] *** Quits: robotmay (~beepboop@2001:8b0:7af0:2580:5069:bbfd:6add:be10) (Quit: No Ping reply in 180 seconds.)
[17:19:23] *** Joins: robotmay (~beepboop@2001:8b0:7af0:2580:17a:4c66:d595:9905)
[17:21:28] <John_Ivan> gr33n7007h, I guess :)
[17:21:34] <John_Ivan> weaksauce, morning.
[17:21:49] <John_Ivan> I mean
[17:22:13] <John_Ivan> 'top o' tha mornin' to yah me ol bud
[17:26:20] *** Joins: lim (~lim@82-69-21-129.dsl.in-addr.zen.co.uk)
[17:28:27] *** Quits: lim (~lim@82-69-21-129.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[17:29:35] *** Joins: lim (~lim@82-69-21-129.dsl.in-addr.zen.co.uk)
[17:42:35] *** Quits: lim (~lim@82-69-21-129.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[17:42:54] *** Joins: lim (~lim@82-69-21-129.dsl.in-addr.zen.co.uk)
[17:43:33] *** Quits: lim (~lim@82-69-21-129.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[17:58:07] *** Quits: MeowcatWoofWoofF (~rosefoxma@2001:470:69fc:105::c74e) (Quit: Client limit exceeded: 20000)
[18:05:10] *** Joins: bit4bit (~bit4bit@181.49.102.14)
[18:12:00] *** Joins: casionaut (~casionaut@user/casionaut)
[18:23:49] *** Quits: infernix (nix@spirit.infernix.net) (Ping timeout: 268 seconds)
[18:54:42] *** Joins: michigan (uid507982@id-507982.ilkley.irccloud.com)
[19:41:05] *** Quits: casionaut (~casionaut@user/casionaut) (Quit: bye)
[19:59:53] *** Joins: Guest7555 (~Guest75@183.96.138.39)
[20:02:43] *** Quits: bit4bit (~bit4bit@181.49.102.14) (Ping timeout: 256 seconds)
[20:04:23] *** Joins: bluesh55 (~bluesh55@183.96.138.39)
[20:09:00] *** Parts: bluesh55 (~bluesh55@183.96.138.39) (WeeChat 3.3)
[20:10:54] *** Joins: alain (~alain@82-69-21-129.dsl.in-addr.zen.co.uk)
[20:11:13] *** Joins: bluesh55 (~bluesh55@183.96.138.39)
[20:11:24] *** Parts: bluesh55 (~bluesh55@183.96.138.39) (WeeChat 3.3)
[20:23:01] *** Parts: Guest7555 (~Guest75@183.96.138.39) ()
[20:32:49] *** Joins: catsh (~catsh@183.96.138.39)
[20:36:19] *** Joins: roadie (~user@2a02:8108:ec0:1427:dd96:8c85:d3c6:628a)
[20:47:21] *** Quits: catsh (~catsh@183.96.138.39) (Quit: WeeChat 3.3)
[20:47:58] *** Joins: catsh (~catsh@183.96.138.39)
[20:52:44] *** Quits: catsh (~catsh@183.96.138.39) (Client Quit)
[21:03:47] *** Joins: hellstabber (~hellstabb@178.233.16.12)
[21:59:03] *** Quits: roadie (~user@2a02:8108:ec0:1427:dd96:8c85:d3c6:628a) (Ping timeout: 268 seconds)
[21:59:19] *** Joins: roadie (~user@2a02:8108:ec0:1427:dd96:8c85:d3c6:628a)
[22:03:57] *** Quits: roadie (~user@2a02:8108:ec0:1427:dd96:8c85:d3c6:628a) (Ping timeout: 240 seconds)
[22:24:46] *** Joins: roadie (~user@2a02:8108:ec0:1427:dd96:8c85:d3c6:628a)
[22:28:52] *** Quits: roadie (~user@2a02:8108:ec0:1427:dd96:8c85:d3c6:628a) (Remote host closed the connection)
[22:29:05] *** Joins: roadie (~user@2a02:8108:ec0:1427:dd96:8c85:d3c6:628a)
[22:33:41] *** Quits: roadie (~user@2a02:8108:ec0:1427:dd96:8c85:d3c6:628a) (Ping timeout: 245 seconds)
[22:34:33] *** Joins: roadie (~user@2a02:8108:ec0:1427:dd96:8c85:d3c6:628a)
[22:40:27] *** Joins: timkaechele (~Adium@ip5f5bf5e6.dynamic.kabel-deutschland.de)
[22:41:12] *** Joins: timkaechele1 (~Adium@185.175.193.9)
[22:44:32] *** Quits: timkaechele (~Adium@ip5f5bf5e6.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[23:20:00] *** Joins: bit4bit (~bit4bit@181.49.102.14)
[23:37:55] *** Quits: hellstabber (~hellstabb@178.233.16.12) (Read error: Connection reset by peer)
[23:59:17] *** Quits: graemefawcett (55322ea766@2604:bf00:561:2000::2ab) (Ping timeout: 268 seconds)
