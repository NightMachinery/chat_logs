[00:00:26] <energizer> raxor2k: do you have code that's not inside a function?
[00:00:32] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[00:00:41] <raxor2k> energizer: no ?
[00:00:57] <energizer> raxor2k: then you dont need `if __name__`
[00:00:59] *** Quits: BlueSky (~BlueSky@user/bluesky) (Quit: Leaving)
[00:01:06] *** Quits: obx (~orange@user/orangeboxcutter) (Quit: ZNC - https://znc.in)
[00:02:43] *** Joins: orangeboxcutter (~orange@user/orangeboxcutter)
[00:02:49] <SnoopJ> raxor2k, take a look at this and see if it makes sense: https://bpa.st/BENQ
[00:02:49] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[00:02:56] *** TheBlurstOfTimes is now known as Roey
[00:04:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[00:05:24] *** Joins: wyclif (~wyclif@user/wyclif)
[00:06:05] <raxor2k> snoopJ: nope. did not make sense
[00:06:13] <SnoopJ> raxor2k, which part of it is confusing to you?
[00:06:26] *** Quits: ars23 (~ars23@2a02:2f09:3e0b:6000:ecb0:eb26:7827:8e) (Quit: Leaving)
[00:06:36] <raxor2k> snoopJ: the module part
[00:06:43] <raxor2k> what do you mean about module
[00:06:57] <grym> raxor2k: "a module" is "a file full of python code"
[00:07:09] *** Joins: obx (~orange@user/orangeboxcutter)
[00:07:25] *** Quits: orangeboxcutter (~orange@user/orangeboxcutter) (Ping timeout: 260 seconds)
[00:07:57] <raxor2k> so lets say you have a project but no "main.py", will line 4 be run ?
[00:08:12] <SnoopJ> raxor2k, main.py is not a special name, the interpreter does not care about this
[00:08:26] <raxor2k> SnoopJ: thanks, this made it even more confusing
[00:08:35] <SnoopJ> When the interpreter runs *any* Python module, it sets __name__. If it's the very first module it's running, it makes that name "__main__". Otherwise, it makes __name__ the name of the module.
[00:08:44] <SnoopJ> one sec, let me update that example
[00:09:48] <SnoopJ> raxor2k, https://bpa.st/CYUQ
[00:10:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[00:10:54] *** Joins: wyclif (~wyclif@user/wyclif)
[00:11:55] *** Quits: nomic (~nomic@185.217.117.233) (Quit: Leaving)
[00:12:11] <SnoopJ> notice that when raxor2k.py is the file I ran, its __name__ is "__main__", but when it's being imported from the other file, it's not.
[00:12:18] <SnoopJ> (because it isn't the main file I ran with python3)
[00:12:22] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.3)
[00:12:36] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[00:13:11] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[00:14:10] <raxor2k> nahh im sorry man
[00:14:12] <raxor2k> i just dont get it
[00:14:30] <raxor2k> i just dont hope this will come to hunt me in the future
[00:15:10] <SnoopJ> which part of it do you not-get
[00:15:20] <grym> "sometimes a module's __name__ has one value, sometimes it has another"
[00:15:22] <SnoopJ> does it makes sense to you if I say that when you run *any program* with python3, it will set __name__ ?
[00:15:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:15:36] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:ffa3:f737:cd89:1ce2)
[00:16:03] *** Joins: todda7 (~torstein@251.red-83-56-17.staticip.rima-tde.net)
[00:16:26] *** Joins: wyclif (~wyclif@user/wyclif)
[00:16:42] <raxor2k> SnoopJ: i think you have to make an example bpaste with 2 files: raxor2k.py and main,py
[00:16:46] <raxor2k> maybe then i be able to understand
[00:17:06] <grym> raxor2k:  just .. rename importer.py to main.py and there you go?
[00:17:11] <SnoopJ> ^
[00:17:14] <grym> literally the same behavior will pertain
[00:17:21] <SnoopJ> again: the interpreter does not care what that file is named
[00:17:35] <SnoopJ> at least not for the sake of figuring out what to call it when you run it directly
[00:17:40] *** Quits: ckdCreations (~ckdCreati@147.55.130.33) (Read error: Connection reset by peer)
[00:17:56] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[00:18:04] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[00:18:05] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[00:18:36] <raxor2k> so why this __main__ thing ?
[00:18:41] <raxor2k> whats the hype about the name "main" ?
[00:18:56] <SnoopJ> "__main__" is the special value that __name__ gets when the module is being run *directly*
[00:19:05] <grym> and "__main__" is a _string_
[00:19:17] <SnoopJ> raxor2k, let's flip this around: when I import foo/bar/baz.py, then __name__ in that module will be "foo.bar.baz"
[00:19:43] * energizer notes this __name__ procedure is opaque and ridiculous
[00:19:58] <SnoopJ> but if I run `python3 foo/bar/baz.py`, I didn't import it from anywhere. It gets a special name to indicate that I came directly into that module.
[00:20:27] <SnoopJ> energizer, what do you find opaque about it. __name__ holds the fully-qualified package name, or the special value when the FQPN is not meaningful
[00:20:50] <zen_coder> how can I get variable replacement in a byte string?
[00:20:51] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[00:20:52] <zen_coder> temp_dockerfile = fb"""FROM {variable}"""
[00:20:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[00:21:01] <zen_coder> this is not working
[00:21:16] *** Quits: stockholm (~Andreas@p200300d2c703d400c87aab9a0fab52a5.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[00:21:25] <SnoopJ> zen_coder, you can't, maybe you want `f"...".encode()` ?
[00:21:39] * aphysically opens another pyright bug
[00:21:54] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[00:21:56] *** Joins: wyclif (~wyclif@user/wyclif)
[00:22:22] <aphysically> I'm 4 for 6 for valid bugs, not great, not awful..
[00:22:33] <aphysically> wait maybe it's 5 for 7
[00:23:07] *** Quits: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 252 seconds)
[00:23:13] <energizer> SnoopJ: that's something for experts to know, not for beginners. it shouldn't be the api for writing module-level code
[00:23:27] <SnoopJ> energizer, what should the API be?
[00:23:34] *** Joins: mambang (~mambang@user/mambang)
[00:23:49] *** Joins: fikran (~fikran@user/fikran)
[00:24:16] <energizer> SnoopJ: `if not isimported()` or something
[00:25:13] <SnoopJ> energizer, I could see `if ismain()` but I think `if not <...>` is probably fighting too many edge cases (what if I compile()ed my code? What if it's a builtin?)
[00:25:24] <SnoopJ> (what if it's from sizecustomize?)
[00:25:33] <SnoopJ> site*customize
[00:26:27] *** Joins: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is)
[00:26:42] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[00:26:44] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[00:26:47] *** Quits: alzgh (~alzgh@user/alzgh) (Ping timeout: 256 seconds)
[00:26:50] <SnoopJ> but I guess there's no reason you couldn't inject into each module `ismain()` that is the equivalent of `def ismain(): return __name__ == "__main__"` defined in that module? Could be interesting.
[00:27:27] *** Joins: wyclif (~wyclif@user/wyclif)
[00:28:33] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:29:59] *** Quits: donofrio (~donofrio@165.225.60.54) (Remote host closed the connection)
[00:30:31] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[00:30:35] *** Joins: orangeboxcutter (~orange@user/orangeboxcutter)
[00:30:45] *** Quits: obx (~orange@user/orangeboxcutter) (Ping timeout: 260 seconds)
[00:30:49] <zln> I get a dataclass() got an unexpected keyword argument 'kw_only' when using decorator as @dataclass(kw_only=True), python version 3.9.6. Is it deprecated or do I do it wrong?
[00:31:03] *** Joins: djhankb (~djhankb@208.113.164.68)
[00:31:46] <SnoopJ> zln, kw_only is new in 3.10
[00:32:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[00:32:58] *** Joins: wyclif (~wyclif@user/wyclif)
[00:33:26] <zln> SnoopJ: ah, It said New in version 3.7 above. I might have gotten confused and  misunderstood :-/
[00:33:39] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[00:33:49] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[00:34:23] <Repiphany> dataclasses itself is 3.7, maybe
[00:34:27] <SnoopJ> zln, the library was introduced in that version, but has been changing since then too
[00:35:14] <zln> I see, something to consider next time :)
[00:35:49] *** Joins: zeden (~zeden@user/zeden)
[00:37:08] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[00:37:15] <aphysically> PEP 505 brought up on the mailing list again
[00:37:24] *** Joins: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963)
[00:37:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:38:28] *** Joins: wyclif (~wyclif@user/wyclif)
[00:39:12] <aphysically> idk I like it I think
[00:39:22] <aphysically> https://mail.python.org/archives/list/python-dev@python.org/thread/XZZIV42XGG3EIHRBBCCTTCFPWWSOT7MX/
[00:40:19] *** Joins: whatsupdoc (~whatsupdo@148.64.18.200)
[00:43:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[00:43:23] *** Quits: prirai (~Priyanshu@2409:4063:6d0c:b492::7208:8108) (Read error: Connection reset by peer)
[00:43:28] <grym> i like maybe-dot
[00:43:38] <grym> but i burned in on real languages with c#
[00:43:48] <grym> so we had the curse and that was the fix there, so that's my prior
[00:43:59] *** Joins: wyclif (~wyclif@user/wyclif)
[00:45:07] *** Quits: wilz (~wilz@modemcable036.177-131-66.mc.videotron.ca) (Ping timeout: 252 seconds)
[00:45:33] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:38b0:198a:d9c3:ffae)
[00:45:43] <whatsupdoc> Should I learn Robot framework?
[00:45:55] <energizer> pretty sure Yhg1s is against 505 and had a good reason but i can't remember it
[00:46:17] *** Quits: mambang (~mambang@user/mambang) (Remote host closed the connection)
[00:47:24] <bjs> can it be that good of a reason if you can't remember it :P
[00:47:31] *** Quits: ubert (~Thunderbi@178.115.37.32.wireless.dyn.drei.com) (Ping timeout: 265 seconds)
[00:47:47] *** Quits: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Quit: Client closed)
[00:48:13] <SnoopJ> whatsupdoc, what are your goals?
[00:48:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[00:48:47] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:ffa3:f737:cd89:1ce2) (Quit: Konversation terminated!)
[00:48:50] <whatsupdoc> To learn all popular currently used frameworks in Python
[00:49:05] <bjs> all of them?
[00:49:10] <bjs> no matter what they're for?
[00:49:22] <whatsupdoc> I thinking for testing right now
[00:49:29] *** Joins: wyclif (~wyclif@user/wyclif)
[00:49:43] *** Joins: wilz (~wilz@modemcable036.177-131-66.mc.videotron.ca)
[00:49:55] <energizer> whatsupdoc: there are too many things out there to try to learn all of them
[00:50:18] <whatsupdoc> Yea, so I'm asking what's popular and standard. If you ran into any random Python developer, what would you expect him to know
[00:50:32] <whatsupdoc> Besides the base Python language of course
[00:52:08] <bjs> I'd be surprised if they knew Python that well to be honest
[00:52:09] <bjs> :P
[00:52:10] *** Joins: _zipper (zipper@gateway/vpn/protonvpn/zipper/x-90676202)
[00:52:23] <whatsupdoc> Hater lol
[00:52:28] <bjs> whatsupdoc: hater?
[00:52:36] <The-Compiler> whatsupdoc: pytest and virtualenv - everything else is pretty domain specific
[00:52:43] <The-Compiler> whatsupdoc: also see https://www.jetbrains.com/lp/python-developers-survey-2020/
[00:52:50] <whatsupdoc> Idk sounds like you're somewhat throwing shade at me
[00:52:53] <Swayze> i found this write up great https://sadh.life/post/builtins/#compile-exec-and-eval-how-the-code-works
[00:53:05] <Swayze> Understanding all of Python, through its builtins
[00:53:14] <Swayze> its  aunique approach and teaching/learning the language
[00:53:18] <Swayze> but was rather insightful
[00:53:30] <grym> whatsupdoc: bjs was addressing your "any random Python developer", not you
[00:53:41] <The-Compiler> whatsupdoc: oh, and git
[00:53:43] <bjs> whatsupdoc: at you? no.   i'm just saying i'd not expect all that much out of "any random Python developer", at least not any coherent set of things i'd expect all of them to know
[00:53:49] <whatsupdoc> Everyone knows Git
[00:53:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[00:53:57] <grym> whatsupdoc: ha ha ha ha ha no
[00:54:04] <whatsupdoc> lol
[00:54:05] <bjs> again you'd be surprised how much people really *dont* know git
[00:54:26] <energizer> also plenty of people use mercurial and stuff
[00:54:27] <whatsupdoc> git add / git commit / git push / git pull / git reset and you're done
[00:54:28] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::2612) (Quit: Konversation terminated!)
[00:54:33] * SnoopJ can't remember what Robot does
[00:54:36] <bjs> maybe they know how to git add and git commit, but start to ask them what it's actually doing, how to rebase things and squash a branch and or how to cherry pick and then they look at you blanky
[00:54:38] <bjs> and say "can you do it pls"
[00:54:41] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-25-65-93-17-96.dsl.bell.ca) (Ping timeout: 264 seconds)
[00:54:57] <SnoopJ> bjs, in their defense, git is pretty hostile to the idea that someone might learn about it
[00:54:59] *** Joins: wyclif (~wyclif@user/wyclif)
[00:55:02] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:55:03] <SnoopJ> "here, read this book"
[00:55:14] *** Joins: zindo (zindo@user/zindo)
[00:55:21] <grym> robot is an 'acceptance testing' framework, and i don't know what that means
[00:55:28] <bjs> SnoopJ: yes, that plus the fact that you don't need very much git to do useful things
[00:55:38] <The-Compiler> whatsupdoc: there are a lot of other useful things git can do (for starters, branches, also git bisect)
[00:55:39] <bjs> in the same way you don't need much python or libraries to do useful things
[00:55:50] <bjs> (see I do have a coherent message here!)
[00:56:02] <whatsupdoc> Ok I think most people know how to use branches
[00:56:09] <grym> whatsupdoc: not really
[00:56:18] <whatsupdoc> At least the basics
[00:56:22] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:56:22] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 265 seconds)
[00:56:22] *** Lord_of_Life_ is now known as Lord_of_Life
[00:56:23] <whatsupdoc> It's fairly common to run into it
[00:56:24] <whatsupdoc> I think
[00:56:39] <bjs> whatsupdoc: people superficially know how to use git,  they know a few commands and can get stuff done. But really I wouldn't argue that if you pulled a random person who used git they'd really "know" it
[00:57:06] <bjs> in the same way your average Python developer probably doesn't really know Python all that deeply,  or its popular libraries or frameworks.  They just know what they use for what they do
[00:57:16] <grym> pareto principle hard at work
[00:57:19] <whatsupdoc> What the heck is "acceptence testing" anyway?
[00:57:21] <grym> 80% of the time i need 20% of git
[00:57:35] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-4481-c071-7b13-a796.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[00:57:43] <whatsupdoc> Stackoverflow is for the rest of the cases lol
[00:58:03] <grym> (but that's true for python's library ecosystem, ... etc as well)
[00:58:06] <bjs> whatsupdoc: maybe if you don't know,  you don't need the framework.
[00:58:34] <whatsupdoc> How do you know if I needed it or not if you've never heard of it before?
[00:58:55] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[00:59:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[00:59:18] <bjs> whatsupdoc: again my point is that you probably don't need very much to do good work :P
[00:59:34] <whatsupdoc> What if there was a drink similar to coffee out there that you've never heard of before that made you pure muscle and above average in looks and height? You'd want to know about it
[00:59:49] <The-Compiler> Don't learn domain specific stuff if you don't need it, there is too much of it
[01:00:12] <stealth_> you know how a c function can return `-1` as error and set it to `errono`? where in python do you find+raise that again? (i forget)nd raise
[01:00:28] <The-Compiler> I have no idea how to use Numpy even after some 10 years of using Python
[01:00:31] *** Joins: wyclif (~wyclif@user/wyclif)
[01:00:46] <bjs> whatsupdoc: if you've not heard of acceptance testing, then probably you're not in that field and so don't need the framework.  Even if you should be doing acceptance testing you probably don't need a big industrial framework to help you do it given you don't even know what it is (does that make sense?)
[01:00:59] *** Quits: _zipper (zipper@gateway/vpn/protonvpn/zipper/x-90676202) (Quit: Quit)
[01:01:03] <whatsupdoc> How do you suggest I get started with testing then? I'm never used any frameworks for testing
[01:01:03] <bjs> whatsupdoc: and anyway, it's not really *for* Python people, it's just a tool written *in* Python
[01:01:04] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Ping timeout: 252 seconds)
[01:01:08] *** Quits: yourfate (~yourfate@cabal.yourfate.org) (Read error: Connection reset by peer)
[01:01:30] *** Joins: yourfate (~yourfate@cabal.yourfate.org)
[01:01:54] <stewie925> numpy is more geared towards data - would be nice to learn
[01:01:57] <whatsupdoc> I have been using Python for 1 month
[01:02:06] <whatsupdoc> lol
[01:02:07] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:02:10] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-25-65-93-17-96.dsl.bell.ca)
[01:02:17] <The-Compiler> whatsupdoc: if you're interested in testing Python code, look at pytest
[01:02:26] <grym> stewie925: _everything_ is about data; numpy is specifically geared for numerics and linear algebra
[01:02:32] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[01:02:33] <bjs> whatsupdoc: professional Python developers use something like pytest;  see https://nedbatchelder.com/text/test3.html
[01:02:38] <The-Compiler> Actually, even do so if you're testing something other than Python code
[01:03:13] <whatsupdoc> nedbat ? damn
[01:03:15] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[01:03:30] <whatsupdoc> If that's a presentation, was this ever presented?
[01:03:40] <grym> whatsupdoc: yes, i was there!
[01:03:45] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 276 seconds)
[01:03:54] <grym> i do not believe it was recorded at that version of the talk though
[01:03:58] <stewie925> grym: oh yeah, I should have said "geared towards data science"
[01:04:09] <grym> stewie925: that still doesn't narrow it down much :)
[01:04:19] <grym> stewie925: numpy is how python does BLAS, how about that
[01:04:20] <whatsupdoc> Meh I'll just read it
[01:04:47] <nedbat> whatsupdoc: sorry, the latest content was not recorded, though we tried.
[01:04:49] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[01:04:52] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[01:04:54] <stewie925> grym: I know hehe :)   I am just reviewing my basic python stuff
[01:04:55] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[01:05:04] <whatsupdoc> You give presentations?
[01:05:11] *** Joins: mickey8 (~user@user/mickey)
[01:05:26] <whatsupdoc> Where is PyCon anyway?
[01:05:26] <nedbat> whatsupdoc: i have done many, yes: https://nedbatchelder.com/text
[01:05:47] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[01:05:56] *** Quits: audiocat (~audio@2603-8081-1800-1546-624d-8c32-b6eb-1f11.res6.spectrum.com) (Ping timeout: 245 seconds)
[01:06:01] *** Joins: wyclif (~wyclif@user/wyclif)
[01:06:10] <whatsupdoc> Do you need to be invited to PyCon or can anyone attend?
[01:06:30] *** Quits: raxor2k (~raxor2k@78.158.228.45) ()
[01:06:40] <KirkMcDonald>  It is open to all. It does cost money.
[01:06:58] *** Joins: blei (~blei@209.201.38.106)
[01:06:59] <whatsupdoc> How much is it?
[01:07:23] <blei> is there a pure python library for creating and accessing nested dicts + lists
[01:07:32] *** Quits: mickey8 (~user@user/mickey) (Client Quit)
[01:07:38] <nedbat> blei: glom
[01:07:48] <nedbat> whatsupdoc: not sure about price, or if it will be in-person this year
[01:07:59] *** Joins: mickey8 (~user@user/mickey)
[01:08:07] <grym> https://us.pycon.org/2022/  in person in slc
[01:08:12] <KirkMcDonald> The site says they're back to in-person next year.
[01:08:13] <grym> but i don't see the fees blurb
[01:08:15] <KirkMcDonald> Yeah, Salt Lake City.
[01:08:37] <grym> april's sometimes not too late to get some skiing in, either :)
[01:08:39] <KirkMcDonald> It's possible they don't even know what the fees will be yet, but generally there are a few tiers.
[01:09:05] <whatsupdoc> Tiers? lol i swear nerds
[01:09:11] <grym> that's normal
[01:09:12] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[01:09:13] <grym> and not just in tech
[01:09:14] <KirkMcDonald> With students getting the cheapest prices, and enterprise people paying more.
[01:09:31] <grym> science conferences have complicated fee structures too :)
[01:09:35] <bjs> yes that's perfectly normal in conferences
[01:09:36] <KirkMcDonald> The tier has no effect on, like, what you can *do* as an attendee.
[01:09:43] <whatsupdoc> What if you're neither?
[01:09:53] <grym> ^ it's just an acknowledgement that like, grad students are poor
[01:09:57] <KirkMcDonald> There's a standard tier in the middle.
[01:10:04] <blei> thanks @nedbat. another close call with brython, but fails to parse after a few thousand lines
[01:10:41] <KirkMcDonald> I will say that PyCon tends to be quite a bit cheaper than this sort of conference can often be.
[01:10:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[01:10:51] <KirkMcDonald> Hundreds rather than thousands of dollars.
[01:11:04] <whatsupdoc> There are $1000 conferences?
[01:11:18] <ferros> Of course, whatsupdoc
[01:11:19] <whatsupdoc> Do people not have places to spend money? smh
[01:11:29] <ferros> It's to keep poor people away, whatsupdoc
[01:11:31] <grym> whatsupdoc: employers money, very often
[01:11:33] *** Joins: wyclif (~wyclif@user/wyclif)
[01:11:43] <grym> or some grant's money or something
[01:11:54] *** Quits: Pandadub (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Quit: Leaving)
[01:12:19] <KirkMcDonald> Yeah, with a lot of these things, the expectation is that the money is actually coming out of the pocket of employers, rather than employees. Which is why PyCon has the more-expensive enterprise tier, usually.
[01:12:46] <zen_coder> how can I mount a directory to a docker image but only some certain files of this directory, not all of it
[01:13:03] <grym> zen_coder: that's not really a python question, but pass -v a lot
[01:13:37] <zen_coder> sorry, wrong channel ^^
[01:14:01] *** Quits: stdout (~stdout@216.163.21.11) (Quit: Leaving)
[01:15:25] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[01:15:41] <blei> i was able to import this lenses library into brython, inspired by haskell lenses. not bad looking. https://github.com/ingolemo/python-lenses
[01:16:27] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[01:16:31] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[01:16:49] <whatsupdoc> Ok I'm learning pytest next
[01:16:59] <grym> blei: yep, that's the glom alternative that comes up a bit
[01:17:02] <grym> i hear good things
[01:17:03] *** Joins: wyclif (~wyclif@user/wyclif)
[01:17:07] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-4481-c071-7b13-a796.res6.spectrum.com)
[01:17:14] <whatsupdoc> Gosh why doesn't a CS degree teach you any of this smh
[01:17:31] *** Quits: Narrat (~omnius@p200300df5f11fa1206ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[01:17:36] <bjs> whatsupdoc: well a CS degree isn't (and probably shouldn't be) a "Software Engineering" or "Programming" degree
[01:17:49] <whatsupdoc> We used fake languages lol
[01:17:58] <bjs> and it's sad that it's sort of being used as qualifications for those disciplines
[01:17:59] <KirkMcDonald> Computer science is about math.
[01:18:00] <whatsupdoc> The least we could have done is just used a real language right away
[01:18:14] <ferros> It makes precisely no difference, whatsupdoc
[01:18:15] <bjs> whatsupdoc: if your CS course didn't teach you programming using a "real" language at some point that's a bit silly
[01:18:18] <SnoopJ> All languages are fake. Some are useful.
[01:18:28] <KirkMcDonald> It's like how a degree in hydrodynamics doesn't teach you how to build a boat.
[01:18:29] <whatsupdoc> Upper divs
[01:18:42] <bjs> whatsupdoc: but CS degrees are really usually more like mathematics degrees
[01:18:54] <SnoopJ> KirkMcDonald, yea, you need a course in magnetohydrodynamics to first create the raw materials for the boat ;)
[01:18:58] <bjs> and anyway, no degree could teach you the current popular tools in industry
[01:18:59] *** Joins: _zipper (zipper@gateway/vpn/protonvpn/zipper/x-90676202)
[01:19:00] <whatsupdoc> But 2 years of pseudocode could make the difference about whether or not your know Python good or Python really well for example
[01:19:08] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:19:22] <whatsupdoc> I took math for all my electives lol because math had no projects
[01:19:28] <mawk> the exponential of a matrix in numpy doesn't give me what I expect
[01:19:30] <energizer> whatsupdoc: which languages did you use?
[01:19:43] <whatsupdoc> Once we got started? C and C++
[01:19:46] <mawk> it gives a new matrix where each coefficient is the exponential of the initial coefficient
[01:19:50] <whatsupdoc> Useless imo
[01:19:51] <bjs> whatsupdoc: those are real languages
[01:20:14] <whatsupdoc> Yea they are, but we didn't start out with them
[01:20:20] <whatsupdoc> We used pseudocode for the longest itme
[01:20:21] <grym> mawk: that's what i would've expected it to do
[01:20:30] <bjs> whatsupdoc: you really didn't start with an actual language?
[01:20:39] <whatsupdoc> Yes
[01:20:48] <mawk> grym: I expect it to give me the exponential the matrix
[01:20:49] *** Quits: _zipper (zipper@gateway/vpn/protonvpn/zipper/x-90676202) (Client Quit)
[01:20:54] <Repiphany> mawk: numpy arrays aren't really matrices and you shouldn't expect them to do linear algebra things by default
[01:20:59] <mawk> exp(M) = I + M + M^2/2 + M^3/6 + ...
[01:21:05] <bjs> whatsupdoc: weird,  I'd guess most CS courses these days teach Python and/or Java and/or C in the first year
[01:21:05] <Repiphany> unless you explicitly use linear algebra operations
[01:21:08] <mawk> right Repiphany
[01:21:30] <mawk> apparently it's not in numpy at all, but https://docs.scipy.org/doc/scipy/reference/generated/scipy.linalg.expm.html
[01:21:34] <ferros> whatsupdoc: the problem is that they didn't tell you guys what the point of a CS degree is, not what languages they used
[01:21:50] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[01:21:54] <whatsupdoc> There is no point
[01:22:00] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:38b0:198a:d9c3:ffae) (Quit: Client closed)
[01:22:01] *** Quits: giacomo-c (~giacomo@107.13.177.67) (Ping timeout: 252 seconds)
[01:22:28] <bjs> whatsupdoc: i mean they have the same purpose as studying math
[01:22:33] *** Joins: wyclif (~wyclif@user/wyclif)
[01:22:40] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[01:22:40] <ferros> bjs: it makes zero difference, you can use FORTRAN and it'll be doing the same thing for a CS degree
[01:22:44] <whatsupdoc> I will never have to implement a B-tree in real life. I don't know why I had to do that
[01:22:51] <grym> whatsupdoc: to learn to think in a certain way
[01:22:53] <bjs> ferros: ... I know what a CS degree does
[01:22:55] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:38b0:198a:d9c3:ffae)
[01:23:23] <energizer> i think there are different kinds of CS degree
[01:23:31] <grym> mawk: ah, gotcha.  nb, you *may* but probably won't need sympy too
[01:23:35] <bjs> energizer: different kinds, and not all courses are created equal
[01:23:36] <KirkMcDonald> It is good to know how a b-tree works.
[01:23:38] <grym> energizer: there certainly are
[01:23:58] <ferros> energizer: what kinds? Even if you have different specialities you still have to first get down the discrete math, algorithms, etc
[01:23:59] <whatsupdoc> Yea, some are a lot more practically focused
[01:24:17] <KirkMcDonald> Even if you never need to implement a b-tree, you need to know how to identify the characteristics of a b-tree, and to be able to look at other things and go, "Oh, this is essentially a b-tree."
[01:24:21] <bjs> whatsupdoc: the ones that are more "practically focused" tend to be the ones that are worse in my experience
[01:24:24] <grym> energizer: there's the "bob harper's on faculty, we make type theory people" degree, and there's the "we make excellent engineers" degree, and the lack of semantic difference is probably due to the youth of the field
[01:24:30] <bjs> for a variety of confounding reasons
[01:24:59] *** Joins: DaNeenjah (~jake@adsl-74-230-6-204.hsv.bellsouth.net)
[01:25:49] <bjs> whatsupdoc: but it doesn't matter because in the end, pretty much no course would actually be able to teach you Python beyond the basics unless it spent way too much time and effort on Python specifics for example
[01:25:53] <ferros> So in the limit you'd be the happiest if they started with a course on copy pasting from stack overflow, whatsupdoc? ;)
[01:26:19] <KirkMcDonald> bjs: In a sense that is how I would define expertise: Knowledge of many specifics.
[01:26:21] *** Joins: greknod28 (~grek@120.88.171.98)
[01:26:21] <whatsupdoc> Well, at least that would have gotten me a job in CS
[01:26:22] <whatsupdoc> lol
[01:26:24] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:26:29] <bjs> like I said most average random Python developers won't even know Python all that well,  and will only have a shallow understanding of the tools they use day-to-day.  Just enough to get things done.
[01:26:38] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[01:26:42] <bjs> and that's fine
[01:27:01] <ferros> To get a good job you definitely to understand theory, whatsupdoc
[01:27:07] <ferros> To get a random coding job? Sure
[01:27:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[01:27:10] <whatsupdoc> Nope.
[01:27:13] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[01:27:28] <bjs> KirkMcDonald: and pretty much only time and effort gets you those
[01:27:39] <grym> ^
[01:27:46] <bjs> a CS degree can give you a head start in many of the areas,  but it gives you a shallow not deep understanding of them
[01:28:02] <grym> to which i'd add a nice quip i picked up from motorcycling, "don't let your 20 years of experience be the same year repeated 20 times"
[01:28:05] *** Joins: wyclif (~wyclif@user/wyclif)
[01:28:07] <whatsupdoc> You may know theory, but nobody will hire you if you can't put something else on your resume besides theory. I'm switching my career goals because of it.
[01:28:08] <bjs> you sort of get an idea of how bits of the computer interact, and how programming languages work, and how we got these bits of sand to do calculations
[01:28:11] <bjs> but not very deeply any of them
[01:28:37] <KirkMcDonald> It takes all kinds, really. But I would stress that CS theory serves as a *foundation* for a software engineer. It's possible to get by without a lot of theoretical knowledge, but it absolutely can help.
[01:28:46] <bjs> whatsupdoc: that's not what ferros said, *good* jobs will require you to understand the theory.  No matter how you learn it,  you'll need it for those jobs
[01:28:54] <ferros> whatsupdoc: I've no idea how your world works, but I can teach someone to use python in a day, I can't teach someone algorithms in a week.
[01:29:05] <KirkMcDonald> But that skill as a software engineer is fairly disjoint from what a CS course teaches you.
[01:29:10] <whatsupdoc> I thought algorithms was the easiest class in undergrad
[01:29:24] <Togra> for someone who is already comfortable with algorithms, sure
[01:29:29] <Togra> but people in that class are there because it's new to them
[01:29:43] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[01:29:56] <KirkMcDonald> But my background is unusual. I have no CS degree, and have worked as a software engineer at Big Tech.
[01:30:00] <whatsupdoc> Maybe it's because I crammed a CS degree in 2 years, but my algorithms classes felt like a rehash of my lower div classes
[01:30:05] <bjs> whatsupdoc: teaching someone to program is relatively easy,  programming is just a tool and people can quickly learn to put things together.  Teaching them how it all works,  how the programs work and how to make them fast, how the computer works etc that's what a CS degree gives you -- at least, that's the idea
[01:30:10] <bjs> it's very debatable how much it really helps
[01:30:37] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[01:30:47] <whatsupdoc> We used the same textbook for lower div as for my upper div algorithms class lol
[01:30:52] *** Quits: greknod28 (~grek@120.88.171.98) (Client Quit)
[01:30:55] <bjs> KirkMcDonald: I don't know how unusual that is, probably more unusual as time goes on.  I think we over-focus on degrees too much
[01:30:58] <energizer> it's possible to make a hard class on algorithms
[01:30:59] <Togra> if you just want someone to sit down and write python scripts for their entire career, and you don't need them to do anything super complicated, you can just wing it. but if you want someone who can graduate and have a foundation for, say, a 50 year or more career bouncing between different jobs, languages and tasks, well..
[01:31:03] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[01:31:05] <grym> or it depends on what your goals are.  the CS theorists i know just aren't interested in flinging code for FAANG or whatever
[01:31:15] <grym> they're interested in proving things
[01:31:39] *** Joins: djhankb (~djhankb@208.113.164.68)
[01:31:48] <whatsupdoc> We used Introduction to Algorithms, 3rd Edition by Thomas H. Cormen
[01:31:56] <bjs> whatsupdoc: that's a big book
[01:31:59] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[01:32:00] *** Joins: greknod28 (~grek@120.88.171.98)
[01:32:00] <bjs> even I've not read it all I dont think :P
[01:32:19] <bjs> (and poor L, R and S not getting credit there)
[01:32:25] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[01:32:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[01:32:37] <whatsupdoc> I only read a few chapters, only extracted the algorithms I needed to learn lol
[01:33:06] <grym> whatsupdoc: ah.  longcuts :)
[01:33:26] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 245 seconds)
[01:33:36] *** Joins: wyclif (~wyclif@user/wyclif)
[01:33:47] *** Quits: carljm (~carljm@2620:10d:c090:400::5:99b9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:34:13] <bjs> whatsupdoc: anyway, the point of learning algorithms is (supposedly) to help you use what you learn from those algorithms in writing your own code
[01:34:22] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[01:34:28] <bjs> e.g. a python class is nothing more than a big data structure, and the methods are operations -- with your own algorithms in them.   In theory at least
[01:35:28] <bjs> so by learning about algorithms and data structures you will learn techniques (and common pitfalls and patterns and whatever) that'll help you design better and more efficient structures in your own code... (possibly?  who really knows, it's hard to test whether it actually works)
[01:35:42] <mefistofeles> jsut sleep better
[01:35:56] <mefistofeles> automatic better code
[01:36:34] <mefistofeles> https://twitter.com/hillelogram/status/1119709859979714560
[01:36:52] *** Joins: sturm_ (~bsturmfel@mediagoblin/maintainer/bsturmfels)
[01:37:22] <KirkMcDonald> Sleep is important. It is also true that one of the most valuable tools in problem solving is just walking away from the problem for a while.
[01:37:57] <bjs> KirkMcDonald: yeah but the only reason that works is that you've stuffed enough context up there that when you walk away it can stir
[01:38:00] <grym> (then keep literally walking!)
[01:38:01] <whatsupdoc> Yesss
[01:38:07] <grym> yeah, consolidation stage
[01:38:11] <whatsupdoc> Going for a run or playing an instrument
[01:38:17] <whatsupdoc> I swear I solved all my hardest problems this way
[01:38:31] <grym> it's how the meat upstairs works
[01:38:34] <SnoopJ> The neuroscience jargon for it is "default-mode network"
[01:38:49] *** Joins: wingsorc (~wingsorc@user/wingsorc)
[01:38:49] *** Joins: zebrag (~chris@user/zebrag)
[01:43:20] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[01:43:26] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[01:44:21] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[01:45:04] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::81de) (Quit: Leaving)
[01:45:29] <blei> the default mode "network" is the first principal component of the data that is extracted from fMRI studies
[01:46:04] <blei> it could be a case of garbage in garbage out
[01:46:20] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:46:37] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Remote host closed the connection)
[01:46:56] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[01:47:49] <zindo> Hello. Regarding this minimal code example: https://bpa.st/WPEA, I am confused as to why running `python sript.py` returns <class 'function'> as opposed to <class 'module'> that is what I would expect. Could someone please help me figure this out?
[01:48:04] *** Quits: {HD} (~{HD}@86.106.121.213) (Quit: none)
[01:48:15] <grym> blei: yeah, we're still fighting over what it means
[01:48:46] <zindo> If the line from __init__.py is omitted, then the script returns <class 'module'> as expected.
[01:50:10] <KirkMcDonald> zindo: The line in __init__.py assigns to the name package.module1
[01:50:19] *** Joins: {HD} (~{HD}@86.106.121.213)
[01:50:31] <KirkMcDonald> zindo: So when you do `import package.module1 as module1`, that's the name it finds.
[01:50:39] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[01:50:49] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[01:50:50] <ska> We have some code that is supposed to divine the Github repo and branch of code based on a file path. But once that code is installed in $env.sites-package, its not easy to do. Because things like GitPython rely on the code path containing a real .git folder that is not present in installed code. We use this to determine and unpack the git code on the other side of a ray.io process. My question is: should we just hard-code that git repo info into the workflows ?
[01:50:50] *** Joins: white_magic (~white_mag@185.202.221.81)
[01:51:49] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[01:52:16] *** Joins: akk (~akk@75.161.146.115)
[01:53:33] <zindo> KirkMcDonald: That's what I was thinking, but I am confused as `import somemodule.somefunction as function` is not a valid way to import a function from a module as far as I am concerned. That just throws the error: "No module named 'somemodule.somfunction'"
[01:53:56] <zindo> KirkMcDonald: so why in this case is the function imported?
[01:54:35] <KirkMcDonald> zindo: I'm curious, what does `sys.modules["package.module1"]` refer to?
[01:54:50] *** Joins: z2m (~z2m@user/z2m)
[01:55:14] *** Joins: georgios (~georgios@user/georgios)
[01:55:21] <z2m> hello
[01:55:30] <nedbat> z2m: hey there
[01:55:39] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-4481-c071-7b13-a796.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:55:48] <z2m> I am learning python, is this the right channel for me to be?
[01:56:09] <KirkMcDonald> z2m: Sure.
[01:56:16] <z2m> I fear people are too advanced here and I don't want to bother with noob questions
[01:56:18] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[01:56:41] <nedbat> z2m: we are fine with beginning learners :)
[01:56:55] <zindo> KirkMcDonald: <module 'package.module1' from 'package/module1.py'>
[01:57:03] <zindo> KirkMcDonald: <module 'package.module1' from 'package/module1.py'>
[01:57:18] <zindo> Sorry for the double message
[01:57:29] <z2m> nedbat, KirkMcDonald, alright! great! thanks
[01:57:35] <KirkMcDonald> zindo: I honestly have no idea what the import mechanism is doing. But I suspect it has something to do with the name being present in sys.modules.
[01:57:37] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:71cf:1674:533e:d0ab)
[01:57:40] <white_magic> Anyone here have opinions on "JMESPath"? It's a pretty sleek query language for JSON. I've been using loops and comprehensions for JSON/dictionaries manipuluation, but I was wondering if there was something more sleek. Something like LINQ in C#.. JMESPath looks like the closest thing. I'm just slightly weary of adopting a new layer of abstraction,
[01:57:41] <white_magic> but on the other hand, it seems to offer very unique functionality. You can do functional expression that are a lot more concise and natural than what you might do with iterations or comprehensions.
[01:57:47] <energizer> z2m: like python itself, #python reaches all the way down the expertise ladder and quite a ways up it too
[01:58:22] <nedbat> zindo: I think when you do "import package.module1", it imports package, and checks if it has a module1 attribute. If so, you are done.
[01:58:35] <blei> i once saw a guy get paid to write python in python
[01:58:39] *** Quits: z2m (~z2m@user/z2m) (Read error: Connection reset by peer)
[01:58:44] *** Quits: ttys000 (~ttys000@user/ttys000) (Quit: Textual IRC Client: www.textualapp.com)
[01:59:00] *** Quits: mike18_ (~geri@217-149-167-230.nat.highway.telekom.at) (Remote host closed the connection)
[01:59:13] <white_magic> No JMESPath fans in the chan ? :(
[01:59:33] <energizer> white_magic: check out `glom`
[01:59:41] <white_magic> energizer: will do!
[02:00:02] <blei> white_magic i just learned jq, kind of just because i use bash too much. i cant handle another one of those
[02:00:04] *** Joins: z2m (~z2m@user/z2m)
[02:00:28] *** Quits: wilz (~wilz@modemcable036.177-131-66.mc.videotron.ca) (Quit: WeeChat 2.8)
[02:00:46] <white_magic> blei: jq *seems* like a cool utility to me.. I just can't learn it. My brain refuses to. I always just resort to busting out the trusty Python shell. Or I write a Python script..
[02:00:46] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:00:56] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-4481-c071-7b13-a796.res6.spectrum.com)
[02:00:57] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[02:01:16] <z2m> energizer, awesome! this channel has a lot of users, much more than others I've checked
[02:01:24] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[02:01:29] <KirkMcDonald> z2m: This is the official one.
[02:01:33] <zindo> nedbat: But that doesn't work in other cases, returning "No module named 'somemodule.somfunction'". So I think the dot syntax is just for importing modules, so I'm really confused as to why it is importing the function in this case.
[02:01:40] <energizer> z2m: most of those users aren't really here
[02:01:59] <energizer> z2m: they're just logged in all the time
[02:02:04] <white_magic> z2m: also, I just wanna point out the obvious and say that Python a ridiculous amount of learning resources out there. Don't forget about YouTube.
[02:02:17] <SnoopJ> white_magic, I find jq's query language very hard to remember as well
[02:02:28] <white_magic> great, so it's not just me
[02:02:29] <white_magic> :D
[02:02:31] <SnoopJ> especially the ephemera around handling nulls etc.
[02:02:57] <z2m> energizer, yea but I meant in the sense that if I have a doubt the chance is higher I'll get a response faster
[02:03:20] *** Joins: Macuser (~Macuser@216.30.159.201)
[02:03:21] *** Joins: wilz (~wilz@modemcable036.177-131-66.mc.videotron.ca)
[02:03:30] <energizer> is there a python place with lower expert-response time than this?
[02:03:31] <white_magic> SnoopJ: do you have any opinions on glom?
[02:03:34] <SnoopJ> z2m, questions aren't a bother here :)
[02:03:39] *** Quits: z2m (~z2m@user/z2m) (Read error: Connection reset by peer)
[02:03:43] *** Quits: Tas-sos (~Tas-sos@ppp141237137165.access.hol.gr) (Quit: leaving)
[02:03:48] *** Quits: brelod (~me@90.244.150.142) (Quit: leaving)
[02:03:52] <KirkMcDonald> energizer: The Python Discord has a much larger population.
[02:03:53] <SnoopJ> white_magic, yes; it's very powerful, but my feelings about its specification system are not unlike my feelings about jq
[02:04:03] <white_magic> haha, good answer
[02:04:17] <SnoopJ> it's worth the price of entry just for being able to do "a.b.c" though :)
[02:04:18] <nedbat> zindo: it is a confusing scenario.  if the attribute doesn't exist, then Python tries to import a submodule by that name. that's why you can't import a function that way usually.
[02:04:19] <energizer> KirkMcDonald: am i correctly reading into what you didnt say
[02:04:38] <clime> ./quit
[02:04:41] <nedbat> energizer: the Python Discord has a different breakdown of skill levels
[02:04:46] *** Quits: clime (~clime@89-24-42-139.nat.epc.tmcz.cz) (Quit: WeeChat 3.2)
[02:04:47] <KirkMcDonald> energizer: Response times are therefore usually quite low.
[02:04:58] <nedbat> KirkMcDonald: but what response do you get? :)
[02:04:58] <white_magic> SnoopJ: I was initially asking about JMESPath but I might go with glom instead, because it's more pythonic. Just trying survey the 'in-crowd' now :D
[02:05:08] <SnoopJ> white_magic, I have a few samples of glom here: https://github.com/SnoopJeDi/playground/tree/master/python/glom_
[02:05:22] <KirkMcDonald> nedbat: On this I have no comment.
[02:05:32] <SnoopJ> white_magic, what task are you solving?
[02:05:43] <nedbat> i'm a big fan of the Python Discord, but it's very different.
[02:06:10] <SnoopJ> Discord definitely nucleates different kinds of communities
[02:06:14] <zindo> nedbat: even if the attribute exists it doesn't work, so it is even more confusing.
[02:06:21] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:06:28] <nedbat> zindo: what doesn't work?
[02:06:49] <nedbat> a very common question I get in the Python Discord: "is that you in the pfp" and "how old are you?"
[02:06:56] *** Joins: z2m (~z2m@user/z2m)
[02:06:57] *** Joins: carljm (~carljm@2620:10d:c090:400::5:99b9)
[02:07:09] <z2m> I'm sorry it keeps disconnecting
[02:07:17] <SnoopJ> nedbat, my coarse impression is that Discord skews younger
[02:07:22] <white_magic> SnoopJ: I'm just pulling a lot of data from various APIs on a regular basis (for personal projects) and I don't always want to set up a db layer. So I serialize data to JSON & save to local FS. Simple enough.. Then comes the task of parsing the JSON.. quite cumbersome if you don't have datatypes set up (e.g. with pydantic and such).. I'm looking
[02:07:22] <white_magic> for a sleeker & quicker way to parse these various json files.. E.g. maybe I want to find or aggregate specific data or maybe I want to de-duplicate some of it.
[02:07:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:07:38] <nedbat> SnoopJ: much younger. the default assumption is that you are in school of some sort, often high school.
[02:07:56] *** Joins: SlaveGeek334269 (~SlaveGeek@179.61.228.71)
[02:08:05] * SnoopJ nods
[02:08:19] <z2m> I'm learning the basics using Google Python Class, although it is made for python 2 it can be easily done in python 3
[02:08:21] <white_magic> On the plus side, you can't really embed meme gifs in IRC, unless your client is specifically built for that. Less noise.
[02:08:35] <zindo> nedbat: if there's `def somefuntion():` present in package/__init__.py, trying to `import package.somefunction` from another script throws the error: "ModuleNotFoundError: No module named 'litho.somefunction'"
[02:08:56] <SnoopJ> At least one notable client is, but they are definitely providing different services. I think IRC is more task-oriented, but Discord is more community-oriented, as a rule.
[02:08:58] <nedbat> zindo: oh, i see.  i guess i am wrong about the checking attributes thing.
[02:09:07] <nedbat> zindo: bottom line: don't name your stuff like this :)
[02:09:16] <zindo> nedbat: haha, yeah I guess.
[02:09:23] <SnoopJ> The age thing is probably just because Discord started life as explicitly for gaming and drifted sideways into "general-purpose watering hole chat"
[02:09:35] <nedbat> white_magic: the Python Discord disallows images in the default channel
[02:09:52] <white_magic> That's nice to hear! Is it a big community?
[02:11:12] *** Quits: blei (~blei@209.201.38.106) (Quit: Client closed)
[02:11:13] <nedbat> white_magic: online: 57236
[02:11:23] <white_magic> woahhh.. that's impressive
[02:12:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[02:12:17] *** Parts: z2m (~z2m@user/z2m) (Leaving)
[02:12:53] <SnoopJ> Have I misunderstood how pytest autouse fixtures work? I thought it let you use the fixture in any test in that scope, but as I'm reviewing the docs, it looks like it "requests" them in all tests (the fixture body is always executed), but the name isn't bound?
[02:13:03] <SnoopJ> use the fixture without requesting it, I mean
[02:13:25] *** Quits: bfortifi- (~bfortifie@user/bfortified) (Quit: ZNC 1.8.2 - https://znc.in)
[02:13:48] *** Joins: bfortified (~bfortifie@user/bfortified)
[02:14:24] <energizer> i think that's right
[02:15:24] <SnoopJ> bummer, I was hoping I could write a bunch of autouse fixtures in a class and not have to request them in the class's tests. Not a big problem, but huh, I wonder how I got along for so long with this misunderstanding...
[02:16:07] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:fba4:763f:8008:d8b0) (Ping timeout: 265 seconds)
[02:18:26] *** Quits: greknod28 (~grek@120.88.171.98) (Ping timeout: 245 seconds)
[02:18:32] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:dc9e:1427:a97:e25a) (Ping timeout: 265 seconds)
[02:18:43] <grym> i could've sworn it worked the other way
[02:18:46] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[02:18:53] <grym> i was doofing around with envvar injection this way recently
[02:21:46] *** Joins: dre (~dre@120.156.30.159)
[02:23:46] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[02:26:23] *** Joins: gggpkm (~gggpkm@172.105.122.124)
[02:27:58] *** Quits: hudo__ (~hudo@62.68.20.210) (Ping timeout: 252 seconds)
[02:30:33] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[02:30:38] <nedbat> SnoopJ: you didn't want to bind names, or you did?
[02:31:03] *** Joins: djhankb (~djhankb@208.113.164.68)
[02:31:12] <SnoopJ> nedbat, I did
[02:31:26] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[02:31:38] <SnoopJ> I thought I could do `def foo(): assert bar == 42` where `bar` is an autouse fixture
[02:31:51] <nedbat> SnoopJ: if you add the name as an argument, won't you get the value?  def foo(bar): assert bar == 42
[02:32:01] <energizer> that would be too icky for me
[02:32:18] <SnoopJ> nedbat, yea, that's what I ended up doing. I just didn't understand what autouse did, apparently
[02:32:52] <nedbat> SnoopJ: it runs the code implicitly, and you don't have access to it.  To get access, you'd use the name, then you don't need autouse
[02:32:57] * SnoopJ nods
[02:33:06] <SnoopJ> mostly useful for fixtures that have side-effects, I guess?
[02:33:12] *** Joins: fikran (~fikran@user/fikran)
[02:33:20] <bjs> could have a class scoped fixture and an instance var,  perhaps?
[02:33:31] <energizer> eg create the database; drop the database
[02:34:37] <energizer> tho that might pass the connection
[02:34:41] <energizer> i'm not sure
[02:34:52] <nedbat> eg configure the warnings; reset sys.path; changedir to temp, etc
[02:35:00] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[02:35:47] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Ping timeout: 265 seconds)
[02:36:02] <energizer> i'd rather take temp_dir for that one but yeah
[02:36:16] *** Quits: emerent (~quassel@p200300cd57485561ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[02:36:20] *** Joins: emerent_ (~quassel@p200300cd57485537ba27ebfffed28a59.dip0.t-ipconnect.de)
[02:36:20] *** emerent_ is now known as emerent
[02:36:21] *** Joins: prs (~Priyanshu@2409:4063:6d0c:b492::7208:8108)
[02:36:53] <nedbat> energizer: for tempdir, i want it for almost everything, and don't need the value.
[02:36:54] *** Quits: prs (~Priyanshu@2409:4063:6d0c:b492::7208:8108) (Read error: Connection reset by peer)
[02:37:08] <energizer> nedbat: why dont you need the value?
[02:37:24] <nedbat> energizer: because the fixture cd's into the tempdir
[02:38:17] <energizer> nedbat: i think i'm generally opposed to anything that cares about cwd
[02:38:51] <nedbat> energizer: ok. i'm testing code that imports python files, reads config files, etc.
[02:39:08] *** Joins: nomic (~nomic@185.217.117.233)
[02:39:25] <nedbat> energizer: it could be worse, you could be the guy from #git earlier that said .gitignore files were terrible, and he never uses them, and forbids his team to write them.
[02:40:29] <SnoopJ> bjs, I discovered my misconception in the scope of a class, actually. I was hoping I could just write the test, but it makes sense that pytest won't just kool-aid man itself into the test's namespace like this.
[02:41:02] *** Quits: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 268 seconds)
[02:41:18] <SnoopJ> nedbat, he forbids people from using them *at all*, or forbids them from committing to VCS? The former would be a huge red flag 🚩
[02:41:41] <nedbat> SnoopJ: at all. ".gitignore files are the worst thing in git"
[02:41:50] <SnoopJ> yikes, and also how
[02:41:55] <sartan> how... do you.. what?
[02:42:13] <sartan> avoid checking in .pyc code? does he hand type every file name instead of git add -u ?
[02:42:21] <sartan> (among many other obvious things)
[02:42:37] <nedbat> sartan: he thinks build artifacts shouldn't be in the same tree as the repo, so they would never be committed.
[02:43:08] <energizer> where should they go?
[02:43:14] <SnoopJ> I guess that must extend to "non-tracked files of any kind"
[02:43:27] <SnoopJ> except ones you're writing anew...?
[02:43:35] <sartan> i'm sure him and his team love tooling around that little gem
[02:43:47] <white_magic> nedbat: that's such a weird philosophy, considering that virtually all compilers go against it. A .gitignore file just plays along with that assumption and makes life easy. Some people are just unhappy with simplicity.
[02:43:50] <energizer> hmm maybe he's right
[02:43:54] * SnoopJ would not last long under such a needlessly strong yoke
[02:44:16] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 245 seconds)
[02:44:24] <energizer> why do we exclude things instead of just not including them
[02:44:34] <nedbat> idk, these days i keep running into people with strongly held weird opinions.  yesterday it was, " `else` is bad and should be avoided!"
[02:45:02] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[02:45:14] <energizer> nedbat: these are great, i want to adopt all of these opinions
[02:45:16] <bjs> nedbat: if the preceeding statement was `for` then they'd be correct :P
[02:45:18] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[02:45:28] <energizer> nedbat: what was the reason for that?
[02:45:36] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[02:45:40] <Repiphany> For-else is great
[02:46:00] <energizer> except/else is great, not sure i've ever used for/else
[02:46:00] <nedbat> bjs: they preferred "if case1: ...; return; if case2: ..."  to  "if case1: ...; elif case2: ..."
[02:46:07] <sartan> if someone forgets a 'break' or some other code loop doesn't find it, that 'else' becomes pretty unclearly defined.. i prefer defining my 'found' variable outside the loop just to be safe.
[02:46:14] *** Joins: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[02:46:19] <stealth_> nedbat, how else are you suppose to deal with `else`?
[02:46:32] <bjs> nedbat: as a hard rule? or ?  I mean I can see cases where either/or would be more appropriate
[02:46:33] <nedbat> stealth_: return early from the first if clause
[02:46:48] <nedbat> bjs: i didn't get too into it, i could see it was a brick wall
[02:46:58] <sartan> iv've discovered alot of people expect for foo in empty_iteration: else should have called 'else'.
[02:47:16] <bjs> sartan: I mean it's actual behaviour is not obvious at all
[02:47:22] <bjs> from just the name
[02:47:30] <stealth_> nedbat, like `if not something: return None` ? you can only do that in certain places
[02:47:31] <sartan> yea, it's hard to understand what it really does
[02:47:37] <sartan> when you know, you know..
[02:47:38] <bjs> sartan: especially attached to a while :o
[02:47:45] <mactron> Morning,
[02:47:53] *** Joins: extropiator (~extropiat@user/extropiator)
[02:48:23] <sartan> for foo in stuff: do thing on each item. else: do something when nothing was found in stuff.
[02:48:32] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Quit: WeeChat 3.3)
[02:48:59] <sartan> throwing 'break' in there doesn't quite work.  that would be my desired behavior -^.
[02:49:15] *** Joins: blurry (xbaranov@lounge.fi.muni.cz)
[02:49:17] <grym> "we've successfully done the thing on all zero items; no need for else!"
[02:49:39] <stealth_> if you don't account for `else` properly its a bug
[02:50:02] <grym> i don't think i've written a for/else loop, even for funsies
[02:50:08] <nedbat> mactron: hey there
[02:50:09] <energizer> nedbat: but i dont think mine is so weird; just dont like depending on mutable global state, let alone actually mutating it
[02:50:11] <grym> certainly not in anger
[02:50:32] <nedbat> energizer: i understand avoiding cwd.
[02:50:40] <nedbat> energizer: but it's useful in my case.
[02:51:03] <energizer> nedbat: ill take your word for it
[02:51:03] <stealth_> energizer, just pass a list... and mutate that, its got an atomic lock
[02:52:05] <sartan> mutable global state can cause some really unexpected behavior that you only discover really late in your dev cycle that some function needed a tweak to its model
[02:52:12] <grym> abuse of cwd is a common matlabism, and i've picked up a reflexive horror-twitch for those
[02:52:20] <nedbat> stealth_: in this case the mutable global state is the current working directory
[02:52:21] *** Quits: zodd (~zodd@84-106-80-107.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[02:52:22] <sartan> lots of nested api calls, and one of them needed to order a list for a validation later, and whole global state changes
[02:52:25] <stealth_> or just use absolute path
[02:52:46] <sartan> just learning the benefits of pyrsistent lately
[02:52:51] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[02:53:01] <stealth_> nedbat, cwd keeps changing?
[02:53:10] <nedbat> stealth_: i change it on purpose in my tests
[02:53:14] <sartan> lets the downstream mutations happen freely without bloating memory for deepcopying, but original object remains unchanrged
[02:53:18] <energizer> sartan: heads up, pyrsistent mappings dont iterate in order
[02:53:20] *** Quits: Spawns_Carpeting (~Spawns_Ca@user/spawns-carpeting/x-6969421) (Ping timeout: 265 seconds)
[02:53:24] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[02:53:28] <extropiator> I'm having an issue with pybind11. Still debugging, maybe someone familiar can help? https://bpa.st/5UGA
[02:53:41] <stealth_> nedbat, o, then the project you are checking gets its cwd dir changed as well?
[02:53:43] <sartan> well neither does 2.7 so everything implements its own sort method when necessary =)
[02:54:00] <nedbat> stealth_: my code is fine. energizer didn't like that i change the directory
[02:54:03] <sartan> energizer: within al ist though pyrsistent won't iterate in order? i would have been fine with dict keys, but.. a list? really?
[02:54:42] <stealth_> nedbat, why not open the directory and pass the dir_fd into `open(opener)`
[02:54:47] <energizer> sartan: hmm?
[02:54:51] *** Quits: carljm (~carljm@2620:10d:c090:400::5:99b9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:55:00] <sartan> was just asking what you meant on iterate in order
[02:55:21] *** Quits: atomicwrites (~atomicwri@user/atomicwrites) (Quit: WeeChat 2.9)
[02:55:21] <energizer> sartan: i mean py37 dicts iterate in in insertion order
[02:55:28] <energizer> but pyrsistent mappings dont
[02:55:28] <sartan> ah yeah, same page then
[02:55:31] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 252 seconds)
[02:55:31] <nedbat> stealth_: 1) because i don't know what open(opener) is, 2) because I'm importing files that I wrote there, so it's easier to just cd
[02:55:37] <sartan> still on py27 here so order isn't there in the first place
[02:55:44] <sartan> OrderedDict everywhere.
[02:55:47] *** Joins: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963)
[02:55:48] <extropiator> hmmm. maybe I need to define a constructor. I dont think pybind11 implicitly constructs structs, e.g. doesn't differentiate between class semantics
[02:55:48] <stealth_> nedbat, https://docs.python.org/3/library/functions.html#open scroll down a bit there is an example
[02:55:58] <Yhg1s> extropiator: I expect you're missing parentheses on line 26.
[02:56:32] <extropiator> Yhg1s: yes, I think you are right. and then I need to define the constructor in the pybind11 interface. thnx
[02:56:36] <nedbat> stealth_: if i wanted to avoid chdir, i would compose the paths, not use an opener.  but my code is fine as it is.
[02:56:45] <energizer> Yhg1s: can you remind me what the your critique was of the null-aware PEP? i remember you had something interesting
[02:56:53] <energizer> s/the//
[02:56:56] *** Quits: Forkk (~forkk@li926-228.members.linode.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[02:57:13] <stealth_> nedbat, its cool, i don't know the whole story, (feel like i don't want to know :P)
[02:57:15] *** Joins: Forkk (~forkk@li926-228.members.linode.com)
[02:57:23] <nedbat> can it be that on Windows, the "long" type in C extensions is only 32 bits?
[02:57:44] <Yhg1s> energizer: I don't remember what I said that you might have found interesting.
[02:58:04] <energizer> Yhg1s: well that makes two of us :)
[02:58:11] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:550a:f4fd:68a3:3055)
[02:58:21] <Yhg1s> nedbat: yes, Windows is a LLP64 system, so pointers and long longs are 64 bits, but ints and longs are 32 bits.
[02:58:30] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:58:32] <stealth_> think when windows went to 64bit, they didn't really change anything with 32bit, just said its not 64bit!
[02:58:37] <stealth_> its now*
[02:58:48] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[02:58:52] <nedbat> Yhg1s: ok, then i need to use long long I guess.  Will PyLong_FromLong work on a long long?
[02:59:19] <nedbat> oh: PyLong_FromLongLong, nm
[02:59:21] *** Quits: whatsupdoc (~whatsupdo@148.64.18.200) (Quit: Client closed)
[02:59:23] <Yhg1s> nedbat: no, you need... guess what? :)
[02:59:28] <nedbat> yup, got it.
[02:59:46] <nedbat> Yhg1s: and on Linux and Mac, long long is also 64 bits?
[02:59:50] <Yhg1s> Yesl.
[03:00:13] <Yhg1s> For some cases, if you want a 64-bit integer on 64-bit systems, you may want a Py_ssize_t.
[03:00:55] <Yhg1s> (which is just ssize_t on systems that have ssize_t.)
[03:01:14] <nedbat> Yhg1s: some cases?  How do I know?
[03:01:27] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[03:01:48] <Yhg1s> nedbat: if the 64-bit integer is used as "the size of or offset in a container", it should probably be a Py_ssize_t.
[03:02:07] *** Joins: whatsupdoc (~whatsupdo@148.64.20.114)
[03:02:14] <nedbat> Yhg1s: in my case, it's just an int that's at least 42 bits wide
[03:02:37] *** Quits: white_magic (~white_mag@185.202.221.81) (Ping timeout: 256 seconds)
[03:03:00] *** Joins: carljm (~carljm@2620:10d:c090:400::5:99b9)
[03:03:09] <Yhg1s> Use a long long then, yes, although you _may_ want to assert its size is acceptable.
[03:03:21] <canurabus> \q
[03:03:25] <Yhg1s> I don't think any systems have long longs that aren't 64 bit, but it's probably not guaranteed.
[03:03:33] *** Parts: canurabus (~canurabus@ip-24-156-182-149.user.start.ca) (Leaving)
[03:03:36] *** Joins: canurabus (~canurabus@ip-24-156-182-149.user.start.ca)
[03:03:50] <stealth_> you can save 42bit into 64bit since 42bit isn't normal it must be custom
[03:05:34] <Yhg1s> nedbat: and by assert, I mean '#if SIZEOF_LONG_LONG < 8 #error long long too small! #endif'
[03:05:55] <nedbat> Yhg1s: cool, thanks
[03:07:04] <nedbat> Yhg1s: speeding up branch coverage measurement by packing two int into a long long instead of making a tuple
[03:08:19] <energizer> nedbat: i'm curious to know how much of a difference it makes
[03:08:45] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[03:08:56] <nedbat> energizer: it depends on how many times you execute the same lines
[03:09:16] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 252 seconds)
[03:10:49] <Yhg1s> If you're both generating and consuming the data in C, the tuple overhead can be quite significant.
[03:11:28] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:11:34] <Yhg1s> (if the time-consuming part is in Python code, the overhead is much less noticeable, but still there.)
[03:11:50] <stealth_> nedbat, you wrapping your coverage project with C?
[03:12:07] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[03:12:34] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Ping timeout: 252 seconds)
[03:12:54] <nedbat> Yhg1s: the things is, the C code generating the data is proportional to lines executed, but the resulting data is proportional to the unique lines executed, so heavily executed loops (for example) make a big difference.
[03:13:05] <nedbat> stealth_: it's not wrapped, the core trace function is implemented in C.
[03:13:37] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 252 seconds)
[03:13:43] <stealth_> nedbat, aww i see, thats cool
[03:16:58] <canurabus> Hi all. I'm a little unsure about how capturing works in inner functions in Python. In the following code, I have an inner function that refers to a class instance attribute with 'self': https://bpa.st/M5QA. The code works as I expect it to, that is it checks the value of that instance attribute... are there any 'gotchas' here? `self` in that context is always referring to the object (of the method that that inner method is defined
[03:16:58] <canurabus> in) right?
[03:18:19] <nedbat> canurabus: right
[03:18:39] <canurabus> ok, thx
[03:19:29] <Yhg1s> canurabus: the inner function can refer to any variable from the outer function (like 'self'), but the most important gotcha is that it will refer to the value of that variable *when the inner function is executed*, not when the inner function was *defined* or returned.
[03:19:41] <Yhg1s> canurabus: so defining a function in a loop and referring to the loop variable has confusing effects.
[03:20:18] <whatsupdoc> What environment do you use for Python?
[03:20:40] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[03:21:20] <energizer> what are you asking whatsupdoc
[03:22:03] <whatsupdoc> Do you use PyCharm, Jupyter, command line + text editor? just curious
[03:22:30] <mefistofeles> whatsupdoc: we might discuss that in #python-offtopic
[03:22:40] <energizer> whatsupdoc: vscode is the most common i think, but lots of people use other pycharm, vim, emacs,...
[03:23:01] <energizer> (i think editor is on topic here)
[03:23:21] <mefistofeles> ok, fair enough
[03:23:37] <canurabus> Yhg1s: ok, I think I get that. The value of that variable will be evaluated each time the function that 'captured it' is called. In the case of an inner function defined within a loop, the loop variable (say an 'i'), will probably have the value i=range_end (if the loop ran to completion before any of the functions were called). I can imagine that being tricky to debug if you assumed the value of the loop var was captured each time
[03:23:37] <canurabus> the function was defined and not when it is run
[03:23:53] *** Quits: Smedles (~quassel@61-245-148-167.3df594.adl.nbn.aussiebb.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[03:23:56] <whatsupdoc> Do people use doctest? It seems like it can cause a mess
[03:24:01] <whatsupdoc> in your documentation
[03:24:15] *** Joins: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[03:24:35] <grym> whatsupdoc: i don't think it's very common
[03:24:40] <energizer> whatsupdoc: doctest is good for testing that your docs are correct
[03:24:57] * energizer thinks docs that dont use doctest are invariably broken
[03:25:10] <energizer> (or dont have enough code example to be helpful)
[03:25:15] <energizer> examples*
[03:25:23] *** Joins: TonyStone (TonyStone@gateway/vpn/airvpn/tonystone)
[03:25:46] <stealth_> seems overkill
[03:25:51] <energizer> what, testing?
[03:25:53] <energizer> it isnt
[03:26:07] *** Quits: zaquest (~notzaques@5.128.210.178) (Remote host closed the connection)
[03:26:12] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:b53c:9f1b:c730:b25) (Quit: Textual IRC Client: www.textualapp.com)
[03:26:40] <energizer> well, i suppose it depends on the context
[03:26:52] <stealth_> testing docs
[03:27:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[03:27:48] *** Joins: wyclif (~wyclif@user/wyclif)
[03:27:57] *** Joins: zaquest (~notzaques@5.128.210.178)
[03:28:07] <energizer> if your time is much more valuable than your users' or you dont make mistakes, then its more efficient to let them do the testing
[03:28:31] <stealth_> ppl hardly write docs as it is
[03:28:46] <whatsupdoc> cuz it's a waste of time, just read the code
[03:28:57] <energizer> i cant think of any significant projects that dont have a lot of docs
[03:29:30] <nedbat> energizer: in a real test suite (coverage.py's own coverage measurement) int packing shaves off about 1.5% of the time
[03:29:34] <grym> whatsupdoc: code tells me how, it doesn't tell me why
[03:29:37] *** r0bby is now known as r0bby[m]
[03:29:44] *** r0bby[m] is now known as r0bby
[03:29:46] <energizer> nedbat: neat, thanks
[03:30:07] <whatsupdoc> grym: i like that
[03:30:10] <mefistofeles> SnoopJ: you there? I haven't gone through the Scalene doc in detail, but do you know if there is a way to tell it to stop profiling after some amount of time? Maybe the program you are trying to profile takes A LOT and you just want to profile a portion of its execution
[03:30:14] <whatsupdoc> grym: thanks
[03:30:30] <stealth_> ppl should write proper docs+examples.. before we can start talkinga bout doc test
[03:30:43] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[03:30:53] <whatsupdoc> Why does python have testing built in?
[03:31:04] *** Parts: SlaveGeek334269 (~SlaveGeek@179.61.228.71) ()
[03:31:05] <bjs> because testing is important
[03:31:12] <energizer> whatsupdoc: python was created before package managers got good
[03:31:15] *** Joins: djhankb (~djhankb@208.113.164.68)
[03:31:34] <bjs> and because Python tried to have all the important things builtin (“batteries included”)
[03:31:34] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:32:24] *** r0bby is now known as r0bby[m]_
[03:32:44] *** r0bby[m]_ is now known as r0bby[m]
[03:32:45] <stealth_> one of the major project, the docs are totally wrong! i know if i bitch about it, they will just tell me to submit pr for it.
[03:32:46] *** r0bby[m] is now known as r0bby
[03:32:49] <bjs> stealth_: maybe using doctest is what would make people write better docs, as then they’d have actual examples that worked
[03:32:50] *** Quits: e2m4n (~ezman@user/e2m4n) (Ping timeout: 268 seconds)
[03:33:11] <energizer> stealth_: should've used doctest
[03:33:27] *** Quits: CrypticSquared (~CrypticS_@user/crypticsquared) (Ping timeout: 265 seconds)
[03:33:29] <whatsupdoc> What is int packing?
[03:33:38] <bjs> but also yes people are bad at writing docs :(
[03:33:45] <stealth_> don't wana name it i know few out there
[03:33:46] <energizer> whatsupdoc: it's a C thing, not a python thing
[03:33:55] *** Quits: computeiro (~Wender@189.37.68.53) (Remote host closed the connection)
[03:33:56] <mefistofeles> writing docs is hard
[03:34:05] <stealth_> they need bettre test that tell me code example actually works or not.
[03:34:43] <bjs> stealth_: isn’t that exactly what doctest does?
[03:34:44] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[03:34:57] <energizer> bjs: yes
[03:35:03] *** Quits: lethu (~lethu@user/lethu) (Remote host closed the connection)
[03:35:22] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[03:35:56] <stealth_> bjb, i dono, tbh
[03:37:05] *** Joins: BLeo193 (~BLeo193@natp-128-119-202-204.wireless.umass.edu)
[03:37:29] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:ed66:103d:6c7d:7a4b)
[03:37:55] <BLeo193> Hello! Would someone be able to help me regarding searching algorithms in python? Having some trouble understanding why my code is not working :(
[03:38:29] <grym> BLeo193: if you post the code and describe it, sure
[03:38:36] <grym> bpa.st/+python
[03:39:39] <grys> http://bpa.st/+python
[03:40:12] *** Joins: lethu (~lethu@user/lethu)
[03:40:42] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[03:41:37] <energizer> whatsupdoc: i should say -- don't use doctest for testing your code, only for testing your docs
[03:41:51] <energizer> use pytest for testing your code
[03:41:53] <whatsupdoc> ok i get it
[03:42:03] <whatsupdoc> yeah, I was thinking of using pytest
[03:42:18] <nedbat> whatsupdoc: the other reason python has a testing package (unittest) is because the Python stdlib needs a way to write its own tests
[03:42:22] <whatsupdoc> It feels more like what I was doing previously in C/C++ anyway
[03:43:03] <whatsupdoc> Is unittest similar to pytest?
[03:43:10] <energizer> yes but worse
[03:43:22] <nedbat> whatsupdoc: they are both testing frameworks, but with lots of differences
[03:43:48] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[03:43:52] <whatsupdoc> Interesting that a built in tester can be worse
[03:44:03] *** Quits: lethu (~lethu@user/lethu) (Remote host closed the connection)
[03:44:09] <nedbat> whatsupdoc: lots of the builtin things are simple, and the third-party things are better
[03:45:33] <whatsupdoc> What is the point of if __name__ == '__main__':
[03:45:33] <whatsupdoc> ?
[03:45:51] <energizer> lol
[03:46:17] <stealth_> run as module
[03:46:40] *** Joins: rannnn8888 (~rannnn888@bzq-79-182-162-211.red.bezeqint.net)
[03:46:42] <grym> didn't we juuuust do this
[03:46:47] * energizer again notes the __name__ syntax is opaque and ridiculous
[03:47:01] <rannnn8888> maybe someone here know use tws api :D  ?
[03:47:12] <stealth_> they should have `if __main__:`
[03:47:27] <whatsupdoc> hater
[03:47:42] <stealth_> have `__main__ = getattr(__name__, '__main__', None)`
[03:47:44] <energizer> whatsupdoc: it means "only run this if this file is executed directly, not imported"
[03:48:05] <whatsupdoc> oh ok
[03:48:13] *** Quits: JanC (~janc@user/janc) (Ping timeout: 250 seconds)
[03:48:55] <energizer> whatsupdoc: i'm laughing because i was just complaining about how unobvious the syntax is, like two hours ago
[03:49:25] *** Quits: blackbit (~blackbit@ghost.xx.vu) (Excess Flood)
[03:49:55] *** Quits: flokuehn (~flokuehn@i577bc619.versanet.de) (Ping timeout: 252 seconds)
[03:50:51] <stealth_> whatsupboy, whats inside `if __name ...` doesn't not get imported when you do `import module`, or say ignored
[03:51:00] *** Joins: yossarian (~yossarian@user/yossarian)
[03:51:04] <stealth_> darn it, i mean whatsupdoc
[03:51:14] <mefistofeles> lol
[03:51:26] <whatsupdoc> lol
[03:51:28] *** Joins: flokuehn (~flokuehn@i59f77f17.versanet.de)
[03:51:37] *** Quits: Vornicus (~Vornicus@cpe-23-243-151-111.socal.res.rr.com) (Read error: Connection reset by peer)
[03:51:39] <whatsupdoc> double tab
[03:51:56] <BLeo193> https://bpa.st/KGCQ Hi, so I am working on a project where I am managing a file that has information based on stocks. I split the attributes based on the file and I am trying to do a linear search based on the name of the stock and the symbol, and then returning it as a string as I wrote before, but I am getting stock not found every time as the
[03:51:56] <BLeo193> found variable is not changing.
[03:52:29] <BLeo193> Am i doing the search the wrong way? I am reading a text file and splitting the attributes based on the "|"
[03:53:29] <BLeo193> It may have pasted wrong, but in the file each line represents a new stock
[03:55:23] <stealth_> BLeo193, just curious, why not use a simple database like sqlite ?
[03:55:57] <energizer> BLeo193: that only do one iteration of the loop, it always returns on the first row
[03:56:12] <madprops> i like that moving an sqlite db is just moving a file
[03:57:05] <energizer> BLeo193: `return` exits the whole function
[03:57:05] <nedbat> BLeo193: your linearSearch method doesn't return a useful value. the comment says, "returns the details of the stock", but it doesn't do that.
[03:57:07] <grym> madprops: or keeping it in memory, even
[03:57:49] <nedbat> madprops: i publish content on my site by rsync'ing a SQLite file to my server
[03:58:00] <BLeo193> Yeah, I realize that, I am trying for it to return the information of the stock the same way as described in the __str__ function
[03:58:16] <BLeo193> this is for a class haha, doing it the way they want us to i guess
[03:58:18] <energizer> BLeo193: btw in python those docstrings go under the signature line not over it
[03:58:19] <grym> nedbat: somehow that's even more fun sounding than git push
[03:58:25] <nedbat> BLeo193: change line 78 to:  str(query)
[03:58:39] <nedbat> BLeo193: oh, to:  str(stock)
[03:58:43] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 252 seconds)
[04:00:08] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[04:01:45] *** Joins: chenqisu12 (~xirndc@183.217.201.186)
[04:02:32] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[04:02:33] <BLeo193> nedbat I tried to do that but I am still for some reason not getting it found within the file when it searches.
[04:02:50] *** Joins: lethu (~lethu@user/lethu)
[04:03:01] <BLeo193> Im thinking maybe the way I am trying to check the attribute for name and symbol are wrong?
[04:03:08] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Client Quit)
[04:03:35] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[04:03:44] <energizer> BLeo193: try executing it in your head, line by line
[04:04:00] <energizer> BLeo193: what will happen on the first row
[04:04:03] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[04:05:04] *** Joins: dub_a (~dub_a@c-76-115-28-105.hsd1.wa.comcast.net)
[04:05:52] *** Quits: flokuehn (~flokuehn@i59f77f17.versanet.de) (Ping timeout: 252 seconds)
[04:07:08] <grym> (or execute it for real, in a debugger)
[04:07:41] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[04:08:23] *** Joins: JanC (~janc@user/janc)
[04:08:26] *** Quits: todda7 (~torstein@251.red-83-56-17.staticip.rima-tde.net) (Ping timeout: 245 seconds)
[04:08:53] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Killed (iridium.libera.chat (Nickname regained by services)))
[04:08:53] *** vinleod is now known as vdamewood
[04:09:13] *** Quits: cth (~Cthulchu@193.194.107.250) (Ping timeout: 268 seconds)
[04:09:25] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:09:34] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-4481-c071-7b13-a796.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[04:09:41] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:10:28] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:71cf:1674:533e:d0ab) (Quit: Leaving)
[04:10:45] *** Joins: todda7 (~torstein@251.red-83-56-17.staticip.rima-tde.net)
[04:11:02] *** Joins: semeion (~semeion@user/semeion)
[04:11:20] <BLeo193> The line should be looking for the name attribute within the stock and look if its a match with what is being asked for in the test, the second line should do the same with the symbol
[04:11:41] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Ping timeout: 268 seconds)
[04:11:52] *** Joins: mactron_ (~mactron@apn-123-255-252-gprs.simobil.net)
[04:12:27] <BLeo193> within the stockList*
[04:12:44] <energizer> BLeo193: what if it didn't match?
[04:12:58] <BLeo193> it should return "Stock not Found"
[04:13:12] <energizer> BLeo193: what if the first row didn't match?
[04:13:27] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:38b0:198a:d9c3:ffae) (Ping timeout: 256 seconds)
[04:14:21] <BLeo193> it should then go through the list until there is a match
[04:14:28] <BLeo193> is my loop just going through once?
[04:15:13] *** Quits: TonyStone (TonyStone@gateway/vpn/airvpn/tonystone) (Ping timeout: 252 seconds)
[04:15:21] *** Quits: mactron (~mactron@APN-123-253-79-gprs.simobil.net) (Ping timeout: 265 seconds)
[04:15:31] <energizer> yes
[04:15:38] *** Quits: dub_a (~dub_a@c-76-115-28-105.hsd1.wa.comcast.net) (Quit: WeeChat 3.3)
[04:16:01] *** Joins: dub_a (~dub_a@c-76-115-28-105.hsd1.wa.comcast.net)
[04:16:24] <energizer> BLeo193: see line 79-80 says if **this row** didn't match, exit the function
[04:16:30] <energizer> but that's not what you mean
[04:17:55] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:19:41] *** Quits: extropiator (~extropiat@user/extropiator) (Ping timeout: 256 seconds)
[04:20:40] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 265 seconds)
[04:21:25] *** Joins: KaitoDaumoto (~xwwwfatec@user/kaitodaumoto)
[04:21:27] <whatsupdoc> what was recommended I learn? pytest and whatelse? it was something like env
[04:22:23] <energizer> whatsupdoc: someone said virtualenv. the python 3 version is called venv.
[04:22:59] *** Quits: KaitoDaumoto (~xwwwfatec@user/kaitodaumoto) (Remote host closed the connection)
[04:23:02] <energizer> whatsupdoc: i think projects starting now should use poetry instead, but i guess you kinda have to learn venv too
[04:23:54] <whatsupdoc> what are these things? are these just tools for managing libraries?
[04:23:58] <energizer> yes
[04:24:06] <BLeo193> energizer why would that statement only go for one row?
[04:24:20] <energizer> BLeo193: it's in the loop
[04:24:28] *** Quits: aphysically (~aphysical@user/aphysically) (Quit: aphysically)
[04:25:17] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 264 seconds)
[04:26:28] *** Joins: sturm__ (~bsturmfel@mediagoblin/maintainer/bsturmfels)
[04:27:22] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Ping timeout: 252 seconds)
[04:28:24] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[04:29:08] *** Quits: sturm_ (~bsturmfel@mediagoblin/maintainer/bsturmfels) (Ping timeout: 260 seconds)
[04:29:14] <BLeo193> Thanks energizer, I see now why it shouldn't be in
[04:29:22] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[04:29:34] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[04:29:35] <energizer> BLeo193: you're welcome
[04:30:19] *** Joins: Syroth (~Syroth@pool-96-244-212-50.bltmmd.fios.verizon.net)
[04:30:28] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[04:30:56] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[04:31:26] *** Joins: djhankb (~djhankb@208.113.164.68)
[04:33:44] *** Joins: CrypticSquared (~CrypticS_@user/crypticsquared)
[04:33:47] *** Joins: semeion (~semeion@user/semeion)
[04:34:00] <BLeo193> @energizer even with it outside it is still giving stock not found :(
[04:35:12] <energizer> BLeo193: post it
[04:35:49] *** Joins: arinov (~arinov@213.194.126.155)
[04:37:46] <BLeo193> energizer https://bpa.st/GQ6A
[04:37:46] *** Joins: flokuehn (~flokuehn@muedsl-82-207-236-130.citykom.de)
[04:40:02] *** Joins: frost (~frost@59.71.244.189)
[04:40:29] <energizer> BLeo193: that `found` variable isn't doing anything useful
[04:40:58] <energizer> but otherwise i dont see anything wrong
[04:40:58] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[04:41:03] <BLeo193> Yeah, I wanted to use it as a test to make sure it was searching, but its giving me more issues
[04:41:16] *** Quits: frost (~frost@59.71.244.189) (Remote host closed the connection)
[04:41:18] <BLeo193> does that found value just always stay at zero?
[04:41:28] <SnoopJ> mefistofeles, that sounds like you want to use it programmatically, I believe it has an API for this, let me check
[04:41:54] *** Joins: Player001 (~Player001@2600:6c54:7e00:1a19:f0ca:556e:dcc6:b559)
[04:41:58] <energizer> BLeo193: i gotta go. lots of people here can help with this
[04:42:22] <BLeo193> Okay, thanks so much for your help :)
[04:42:25] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[04:42:33] *** Joins: fikran (~fikran@user/fikran)
[04:43:15] *** Joins: nicode (~nic@2607:f2c0:93bd:8400:2df4:e232:663d:7638)
[04:43:31] <SnoopJ> mefistofeles, hmm, maybe not! but I think there's a way to turn the profiler on/off
[04:44:59] <SnoopJ> mefistofeles, you can do `python3 -m scalene.profile --off --pid 12345` to tell scalene to stop profiling (it looks like it sends SIGWINCH on Linux), so I guess you could make a wrapper that invokes scalene and does this after a timer expires
[04:47:02] <mefistofeles> SnoopJ: yeah, apparently I could just kill the process and it would still do the profiling
[04:47:04] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[04:47:07] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[04:47:36] <mefistofeles> SnoopJ: but now I have bigger issues, scalene is complaining about some "internal error" :P
[04:47:43] <mefistofeles> too good to be true haha
[04:48:02] *** Parts: solrize (~solrize@user/solrize) (Leaving)
[04:49:22] <SnoopJ> aw :(
[04:49:43] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:38b0:198a:d9c3:ffae)
[04:49:54] <SnoopJ> mefistofeles, I can at least say that it is very actively maintained, I submitted a small PR just after PyCon and it was merged pretty much right away
[04:50:22] *** Gustavo6046_ is now known as Gustavo6046
[04:50:53] <mefistofeles> SnoopJ: yeah, I do see that, I'll try the dev version right from the repo, just in case
[04:51:25] *** Joins: sturm_ (~bsturmfel@mediagoblin/maintainer/bsturmfels)
[04:51:32] <SnoopJ> good idea
[04:53:13] *** Quits: thunfisch (~thunfisch@user/thunfisch) (Ping timeout: 252 seconds)
[04:53:50] *** Quits: ph88 (~ph88@2a02:8109:9e00:7e5c::3d56) (Ping timeout: 260 seconds)
[04:53:57] *** Quits: sturm__ (~bsturmfel@mediagoblin/maintainer/bsturmfels) (Ping timeout: 260 seconds)
[04:54:03] <mefistofeles> SnoopJ: same :? but will give feedback, thanks!
[04:54:16] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-25-65-93-17-96.dsl.bell.ca) (Ping timeout: 252 seconds)
[04:54:31] *** Joins: sturm__ (~bsturmfel@mediagoblin/maintainer/bsturmfels)
[04:54:38] *** Quits: carljm (~carljm@2620:10d:c090:400::5:99b9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:54:44] *** Joins: thunfisch (~thunfisch@user/thunfisch)
[04:54:55] <SnoopJ> mefistofeles, I'd take a peek at the issue if you'd like to poke me with it, too. No promises on addressing it, but I'm trying to get into the hang of "improve your tools"
[04:55:17] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[04:55:25] <mefistofeles> SnoopJ: sure, I'll PM you
[04:55:25] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[04:55:54] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[04:57:08] *** Quits: sturm_ (~bsturmfel@mediagoblin/maintainer/bsturmfels) (Ping timeout: 260 seconds)
[04:57:35] *** Joins: sturm_ (~bsturmfel@mediagoblin/maintainer/bsturmfels)
[04:57:55] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[04:58:07] *** Gustavo6046_ is now known as Gustavo6046
[04:58:16] *** Quits: whatsupdoc (~whatsupdo@148.64.20.114) (Quit: Client closed)
[04:59:56] *** Quits: sturm__ (~bsturmfel@mediagoblin/maintainer/bsturmfels) (Ping timeout: 260 seconds)
[05:02:33] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[05:03:44] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:04:06] *** Quits: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net) (Ping timeout: 268 seconds)
[05:04:55] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 260 seconds)
[05:04:55] *** brabrax_ is now known as brabrax
[05:05:16] *** Quits: vimart (~vimart@85.255.233.1) (Ping timeout: 252 seconds)
[05:05:29] *** Joins: AMG (ghebo@user/amg)
[05:06:13] *** Quits: wingsorc (~wingsorc@user/wingsorc) (Quit: Leaving)
[05:07:27] *** Joins: prs (~Priyanshu@47.15.12.63)
[05:08:31] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 265 seconds)
[05:14:48] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 265 seconds)
[05:17:40] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[05:19:13] *** Quits: akk (~akk@75.161.146.115) (Quit: +++)
[05:19:19] *** Joins: aknot (~aknot@2603:900a:1503:17bb:f50a:f875:bbb7:decc)
[05:19:55] *** Quits: chenqisu12 (~xirndc@183.217.201.186) (Remote host closed the connection)
[05:20:56] *** Joins: chenqisu12 (~xirndc@183.217.201.186)
[05:21:46] *** Joins: giacomo-c (~giacomo@107.13.177.67)
[05:21:54] *** Quits: chenqisu12 (~xirndc@183.217.201.186) (Remote host closed the connection)
[05:24:01] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[05:24:35] <ComputerTech> https://bpa.st/KC6Q
[05:24:46] <ComputerTech> Not entirely sure why the bot doesn't fully connect
[05:24:58] <ComputerTech> I used https://www.pythonchecker.com/ to check the syntax
[05:25:02] <ComputerTech> and i get a 100% score
[05:25:34] <ComputerTech> yet this is the raw terminal text: https://bpa.st/3GLQ
[05:28:36] *** Joins: chenqisu12 (~xirndc@183.217.201.186)
[05:30:32] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[05:31:04] *** Joins: djhankb (~djhankb@208.113.164.68)
[05:34:39] <Repiphany> You might need to send bytes instead of strings, and end with \r\n
[05:36:26] <ComputerTech> add \r\n in line 20?
[05:36:42] <Repiphany> For all commands
[05:36:52] <ComputerTech> ok
[05:37:10] *** Joins: frost (~frost@59.71.244.189)
[05:37:24] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:37:24] <ComputerTech> not 100% sure what you mean by send with bytes instead of strings, but i'll try look it up
[05:37:27] <Repiphany> "IRC messages are always lines of characters terminated with a CR-LF..." according to the protocol
[05:37:31] <ComputerTech> ok
[05:38:47] <Repiphany> socket.send('NICK blahblah\r\n'.encode('UTF-8'))
[05:39:01] <ComputerTech> oh i see
[05:39:09] <ComputerTech> gotcha! i'll try that, thanks :)
[05:40:42] <ComputerTech> wow, that worked!
[05:40:46] <ComputerTech> thanks so much Repiphany :D
[05:43:25] <SnoopJ> ComputerTech, does it make sense?
[05:43:42] <ComputerTech> Yep
[05:44:57] <ComputerTech> One more question; if i were to want to say put the variable BOTNICK inside of sockChan.send('NICK BOTNICK\r\n'.encode('UTF-8'))
[05:45:14] <ComputerTech> would i need to specify some way of putting the variable inside that? or is that not how it works?
[05:45:53] <phy1729> ComputerTech: you should look at a proper irc library like irctokens rather than shoving strings together
[05:46:07] <ComputerTech> ok
[05:46:17] *** Joins: aphysically (~aphysical@user/aphysically)
[05:46:29] *** Joins: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net)
[05:46:37] <Repiphany> f-strings, e.g. `bot_nick = 'bot'; socket.send(f'NICK {bot_nick}\r\n'.encode('UTF-8'))`
[05:46:48] <ComputerTech> oh, thank you Repiphany :D
[05:47:10] <phy1729> but now if bot_nick starts with a : it magically disappears
[05:47:27] *** Quits: stealth_ (~stealth_@216-197-160-97.regn.static.sasknet.sk.ca) (Quit: Leaving)
[05:47:29] <ComputerTech> okay, i'll look into it more to strip :
[05:47:47] *** Quits: giacomo-c (~giacomo@107.13.177.67) (Remote host closed the connection)
[05:48:12] *** Joins: giacomo-c (~giacomo@107.13.177.67)
[05:48:17] <madprops> is sending a signal to a running python process simple enough?
[05:48:18] <phy1729> the idea is to have a layer that handles the bytes -> data structes -> bytes conversions for you
[05:48:42] <ComputerTech> ok
[05:50:20] <SnoopJ> madprops, sure, it's like sending a signal to any other process
[05:50:39] <madprops> SnoopJ, would it be possible to send a signal without knowing the pid?
[05:50:43] * Jackal-o-lantern pets ComputerTech
[05:50:49] <madprops> and just knowing the script's path
[05:50:49] <SnoopJ> madprops, pkill can do that
[05:51:09] <SnoopJ> or at least, it is designed with that constraint in mind
[05:51:22] <SnoopJ> no guarantees that there's a pattern that uniquely identifies what you want, but it's worth a look
[05:51:27] <ComputerTech> :o
[05:51:31] * ComputerTech pets Jackal-o-lantern back
[05:51:46] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:51:55] <Jackal-o-lantern> ^w^
[05:52:02] <phy1729> madprops: what should happen if there are two copies of the script running?
[05:52:27] <madprops> phy1729, it's designed to only have one instance running, so idk
[05:52:45] <madprops> basically I want to avoid re-parsing a 500 line file to json unecessarilly
[05:52:49] <madprops> but maybe not worth it
[05:53:12] <madprops> or i mean json file to python typedDict
[05:54:16] *** Quits: chronus (~chronus@user/chronus) (Ping timeout: 252 seconds)
[05:54:22] <MacGyver> Have you timed it?
[05:54:36] <MacGyver> Because 500 lines is nothing.
[05:54:52] <madprops> yeah right now it's pretty fast
[05:55:03] <madprops> so maybe not worth it
[05:56:20] <madprops> thought right now i have only 170 items, haven't reached 500
[05:57:00] <madprops> gonna fill it and do a time check
[05:57:16] *** Joins: vimart (~vimart@85.255.233.1)
[05:58:37] *** DCTWD- is now known as DCTWD
[05:58:55] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[06:00:34] <Tritium> a json file with a few thousand objects (which is what a 500 line json file would likely have) .... should be trivially fast to parse, unless the file is pathological
[06:01:25] <madprops> reading 500 lines in 0.0006734860071446747
[06:01:42] <Tritium> thats effectively cpu noise
[06:03:22] *** Quits: Syroth (~Syroth@pool-96-244-212-50.bltmmd.fios.verizon.net) (Quit: Leaving)
[06:05:36] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[06:06:26] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-25-65-93-17-96.dsl.bell.ca)
[06:07:26] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[06:08:09] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[06:08:34] *** Quits: emf (~emf@2620:10d:c090:400::5:c2a5) (Ping timeout: 252 seconds)
[06:08:44] <madprops> Tritium, sorry I got confused for a bit, I meant a 500 object json file
[06:10:04] <Tritium> I wouldn't worry about reparsing that frequently, not at that size.  What I would worry about is IO overhead if you had to read the data in multiple time
[06:10:06] <Tritium> s
[06:10:28] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[06:10:54] *** Joins: emf (~emf@163.114.132.1)
[06:11:09] <Tritium> ...even NVMe is slow compared to RAM (and spinning rust is absolutely glacial)
[06:13:35] *** Joins: elkclone (~elkclone@user/elkclone)
[06:13:56] <energizer> dont forget OS cache
[06:14:25] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[06:14:26] <SnoopJ> https://gist.github.com/jboner/2841832
[06:14:49] <Tritium> You can't depend on it, but in this situation, it would probably be in the cache.  And if not in the OS cache, in the drive cache (assuming you have a drive with a dram cache)
[06:15:38] <Tritium> PSA: dont get a crucial P2 NVMe SSD ... it doesn't have a DRAM cache.  The P1 does though
[06:15:43] <InPhase> Tritium: NVMe is only a little slow compared to RAM.  Like a fifth of the transfer rate, and 20us instead of 20ns latency.  That's a big factor on the latency, but it's still very small, and will only impact certain patterns of usage.
[06:16:28] <Tritium> InPhase: Assuming peek PCIe transfer speeds and dram caches, neither of which are givens.
[06:16:34] <InPhase> Tritium: As PCIe NMVe rolls out, that transfer rate will improve a bit as well by another 2X or so.
[06:16:59] <SnoopJ> [packetized switched networks intensify]
[06:17:07] <InPhase> Those numbers were for the M.2.
[06:17:32] <Tritium> M.2 is ... just a board shape, not an electrical specification.
[06:18:02] *** Joins: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com)
[06:18:07] <Tritium> most m.2 ssds are PCIe v3 NVMe drives, though some are SATA
[06:18:28] *** Quits: giacomo-c (~giacomo@107.13.177.67) (Ping timeout: 252 seconds)
[06:18:32] <Tritium> v4 is rolling out, by v5 it should be ... close enough to ram speed to not matter much anymore
[06:18:38] <InPhase> Tritium: Sorry, I mean PCIe4 vs PCIe3
[06:18:57] <InPhase> Tritium: They invent new labels for these like some people change shirts.
[06:19:26] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[06:19:27] <InPhase> The numbers I gave were for PCIe3
[06:19:29] <Tritium> InPhase: I see your fairly clear but possibly confusing NVMe nomenclature and raise you USB
[06:19:31] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[06:19:39] *** Joins: jazzy (~jaziz@user/jaziz)
[06:20:01] <InPhase> Tritium: I flip your USB cable upside down 3 times so that it fits into the slot.
[06:20:07] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 252 seconds)
[06:20:31] <Tritium> Where to understand what your port is actually capable of... you need to consult 3 charts
[06:20:42] <Tritium> and 2 more to parse the logos!
[06:20:46] *** Quits: BLeo193 (~BLeo193@natp-128-119-202-204.wireless.umass.edu) (Quit: Client closed)
[06:21:27] <energizer> cables tips should have a roll-out documentation scroll
[06:21:38] *** Joins: greknod28 (~grek@120.88.171.98)
[06:21:58] <Tritium> I was opposed to WiFi changing its naming scheme to a version number thing at first...but compared to USB.... its magically understandable
[06:22:08] * SnoopJ puzzled over an HDMI<->DVI cable that is stubbornly non-functional with a particular combination of devices this week
[06:22:10] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:23:13] <Tritium> SnoopJ: I can almost promise that one of the devices tried to negotiate higher speeds than the DVI standard supports, and the other side didn't say no
[06:24:03] <SnoopJ> Tritium, that sounds plausible, the HDMI side is a laptop and may not be designed with this in mind.
[06:24:04] *** Quits: Player001 (~Player001@2600:6c54:7e00:1a19:f0ca:556e:dcc6:b559) (Quit: Client closed)
[06:24:12] <SnoopJ> Actually, two laptops.
[06:24:22] *** Joins: Player001 (~Player001@2600:6c54:7e00:1a19:f0ca:556e:dcc6:b559)
[06:24:24] * SnoopJ shrugs
[06:24:24] *** Quits: dub_a (~dub_a@c-76-115-28-105.hsd1.wa.comcast.net) (Ping timeout: 265 seconds)
[06:24:27] <Tritium> SnoopJ: the problem device is probably the DVI device
[06:24:39] <SnoopJ> Tritium, oh, because it didn't say "I can't do that" to the high-speed req?
[06:25:14] <Tritium> Yes.  this does assume that the laptops can fallback to slower speeds though, which might also not be the case
[06:25:28] <Tritium> Projector?
[06:25:46] <SnoopJ> x-threading to #python-offtopic
[06:25:53] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[06:26:16] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[06:26:17] *** Joins: dub_a (~dub_a@c-76-115-28-105.hsd1.wa.comcast.net)
[06:26:58] *** Joins: jonthesnow (~xizhendu@240e:404:8610:62b2:dadc::30c0)
[06:27:31] *** Quits: Player001 (~Player001@2600:6c54:7e00:1a19:f0ca:556e:dcc6:b559) (Client Quit)
[06:27:41] *** Joins: giacomo-c (~giacomo@107.13.177.67)
[06:27:47] *** Joins: Player001 (~Player001@2600:6c54:7e00:1a19:f0ca:556e:dcc6:b559)
[06:27:59] *** Quits: oakridge (~oakridge@user/oakridge) (Read error: Connection reset by peer)
[06:28:25] *** Joins: oakridge (~oakridge@user/oakridge)
[06:30:59] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[06:31:02] *** Joins: giacomo (~giacomo@107.13.177.67)
[06:31:06] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.3)
[06:31:29] *** Joins: djhankb (~djhankb@208.113.164.68)
[06:32:13] *** Quits: giacomo-c (~giacomo@107.13.177.67) (Ping timeout: 252 seconds)
[06:32:23] *** Quits: oakridge (~oakridge@user/oakridge) (Read error: Connection reset by peer)
[06:35:31] *** Quits: asix (~Anders@user/asix) (Ping timeout: 265 seconds)
[06:35:33] *** Joins: oakridge (~oakridge@user/oakridge)
[06:35:33] *** Joins: Spawns_Carpeting (~Spawns_Ca@user/spawns-carpeting/x-6969421)
[06:35:48] *** Quits: Barones (~Barones@2804:7f3:8988:5de:ca77:607e:caa4:8810) (Quit: Leaving)
[06:37:08] *** Joins: HaMsTeRs (~Thunderbi@14-0-173-026.static.pccw-hkt.com)
[06:38:32] *** Joins: jmiehe1 (~Thunderbi@user/jmiehe)
[06:40:00] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Ping timeout: 260 seconds)
[06:40:00] *** jmiehe1 is now known as jmiehe
[06:40:49] *** Quits: zindo (zindo@user/zindo) (Quit: $ umount -R /libera)
[06:42:20] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[06:43:15] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[06:43:29] *** Quits: oakridge (~oakridge@user/oakridge) (Quit: ZNC 1.7.5 - https://znc.in)
[06:44:13] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[06:44:54] *** Quits: jazzy (~jaziz@user/jaziz) (Read error: Connection reset by peer)
[06:45:17] *** Joins: jazzy (~jaziz@user/jaziz)
[06:45:23] *** Joins: oakridge (~oakridge@user/oakridge)
[06:47:35] *** Joins: asix (~Anders@user/asix)
[06:49:46] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[06:50:09] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[06:51:53] *** Joins: fikran (~fikran@user/fikran)
[06:53:24] *** Quits: justm3 (~Username@82-171-42-20.fixed.kpn.net) (Ping timeout: 265 seconds)
[06:53:29] *** Joins: justm3 (~Username@82-171-42-20.fixed.kpn.net)
[06:57:13] *** Quits: jamiejackson (~jamiejack@207.172.87.34) (Quit: Connection closed)
[06:58:02] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-25-65-93-17-96.dsl.bell.ca) (Quit: RabidToaster)
[06:59:19] *** Quits: shawwwn (uid6132@id-6132.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[06:59:30] *** Joins: tsaka__ (~torstein@251.red-83-56-17.staticip.rima-tde.net)
[06:59:40] *** Quits: todda7 (~torstein@251.red-83-56-17.staticip.rima-tde.net) (Ping timeout: 252 seconds)
[07:01:17] *** Quits: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte) (Quit:  )
[07:01:38] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[07:02:10] *** Joins: srhm (~srhm@user/srhm)
[07:08:26] *** Quits: subopt (~subopt@2603-8081-2302-459a-7832-288f-cf28-8ba7.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:09:50] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 265 seconds)
[07:10:01] *** Quits: emf (~emf@163.114.132.1) (Quit: emf)
[07:11:14] *** Joins: _subopt (~subopt@2603-8081-2302-459a-182d-4560-ba55-797c.res6.spectrum.com)
[07:11:50] *** byzandula is now known as byzafk
[07:13:50] *** Quits: byzafk (~byzandula@beerbq.net) (Quit: vrrrp)
[07:15:31] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 245 seconds)
[07:15:43] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[07:18:34] *** Quits: oakridge (~oakridge@user/oakridge) (Read error: Connection reset by peer)
[07:20:01] *** Quits: dub_a (~dub_a@c-76-115-28-105.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[07:20:35] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[07:20:40] *** Joins: ericzolf (~ericzolf@2a02:8070:a298:29f0::31a)
[07:21:21] *** Quits: aknot (~aknot@2603:900a:1503:17bb:f50a:f875:bbb7:decc) (Ping timeout: 245 seconds)
[07:21:48] *** Joins: oakridge (~oakridge@user/oakridge)
[07:23:40] *** Quits: tuskkk____ (uid18470@id-18470.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:24:07] *** Quits: oakridge (~oakridge@user/oakridge) (Client Quit)
[07:24:29] *** Joins: Jong (~Jong@2620:10d:c090:400::5:81bd)
[07:24:53] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:25:11] *** Joins: oakridge (~oakridge@user/oakridge)
[07:26:46] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[07:26:52] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[07:27:36] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[07:29:53] *** Joins: y1n (~y1n@77.119.195.217.wireless.dyn.drei.com)
[07:30:24] *** Joins: yeirr (~yeirr@user/yeirr)
[07:30:32] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[07:31:01] *** Joins: djhankb (~djhankb@208.113.164.68)
[07:31:50] *** Quits: yeirr (~yeirr@user/yeirr) (Client Quit)
[07:32:21] *** Joins: yeirr (~yeirr@user/yeirr)
[07:32:33] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[07:33:02] *** Joins: wyclif (~wyclif@user/wyclif)
[07:34:23] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[07:34:26] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[07:35:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:34] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[07:42:46] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[07:43:02] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[07:49:34] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[07:56:23] *** Quits: ravan (~ravan@user/ravan) (Quit: Leaving)
[07:56:46] *** Quits: tsaka__ (~torstein@251.red-83-56-17.staticip.rima-tde.net) (Ping timeout: 245 seconds)
[07:59:32] *** Joins: tsaka__ (~torstein@7.red-88-0-5.dynamicip.rima-tde.net)
[08:00:35] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 265 seconds)
[08:01:05] *** Quits: LiftLeft (~LiftLeft@191.96.185.95) (Ping timeout: 268 seconds)
[08:01:41] *** Joins: dvx (~dvx@185.63.97.64)
[08:03:25] *** Joins: emf (~emf@2620:10d:c090:400::5:c2a5)
[08:04:04] *** Joins: NetPipe (~NetPipe@user/netpipe)
[08:07:20] <Jong> Hello. I have a bunch of numbers separate by hyphens on a line. It looks like this: 1930-2323-2342-242-65-938
[08:07:31] <Jong> Is there a fast way to count how many numbers there are on the line?
[08:07:33] <Jong> in vscode?
[08:07:55] *** Quits: tsaka__ (~torstein@7.red-88-0-5.dynamicip.rima-tde.net) (Ping timeout: 252 seconds)
[08:09:04] <Player001> can you use split()?
[08:09:27] <Player001> and take the length of the resulting list?
[08:09:48] <Jong> I could, but I'd need to copy the line into a python program
[08:10:09] <Jong> and then run the python program
[08:10:15] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[08:10:24] <Jong> I have information in the form of 1930-2323-2342-242-65-938. in commented code
[08:10:49] <Jong> it would be a hassle to uncomment, make it a string, use split, run a python program, print lenth
[08:11:45] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[08:12:11] *** Joins: tsaka__ (~torstein@251.red-83-56-17.staticip.rima-tde.net)
[08:12:21] <Jong> currently I use VSCode's multicursor feature to highlight all the hyphens. I press enter and magically each number is on a separate line. Then I just subtract last line number from first line number
[08:12:36] *** Quits: ericzolf (~ericzolf@2a02:8070:a298:29f0::31a) (Ping timeout: 245 seconds)
[08:12:37] <Jong> I was hoping someone here knew of an even faster shortcut
[08:12:49] *** Quits: mactron_ (~mactron@apn-123-255-252-gprs.simobil.net) (Ping timeout: 252 seconds)
[08:13:55] *** Quits: emf (~emf@2620:10d:c090:400::5:c2a5) (Quit: emf)
[08:14:13] <BrenBarn> so this isn't really a Python question, it's just a question about how to use vscode?
[08:16:50] <Jong> yeah but half of python coders use vscode
[08:17:06] <Jong> it's a python coding environment question :-)
[08:17:50] *** Quits: tbcr (~tbcr@user/tbcr) (Quit: WeeChat 2.8)
[08:20:43] *** Joins: dub_a (~dub_a@2601:1c2:4e00:3b3::cb2)
[08:22:52] <deltab> make a python extension to do it, then invoke the extension
[08:23:45] <Jong> actually I'm in luck. The numbers are identical. so I can use ctrl+f, and the finder window shows how many numbers were found
[08:24:09] <deltab> count the hyphens and add 1
[08:24:19] <Jong> that too. I'd need to search in selection though
[08:24:50] *** Joins: ericzolf (~ericzolf@2a02:8070:a298:29f0::31a)
[08:24:50] *** Joins: hudo__ (~hudo@62.68.20.210)
[08:25:11] *** Quits: Player001 (~Player001@2600:6c54:7e00:1a19:f0ca:556e:dcc6:b559) (Changing host)
[08:25:11] *** Joins: Player001 (~Player001@user/player001)
[08:25:45] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 268 seconds)
[08:26:03] <Jong> hah awesome. Find in selection is nice!
[08:26:31] <Jong> For all the crap people give Microsoft, they deserve respect for vscode
[08:26:36] <Jong> which is free!
[08:30:00] *** thursdaylark is now known as thurstylark
[08:31:03] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[08:31:41] *** Joins: djhankb (~djhankb@208.113.164.68)
[08:34:08] *** Quits: thurs8060 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[08:34:49] *** Quits: y1n (~y1n@77.119.195.217.wireless.dyn.drei.com) (Ping timeout: 252 seconds)
[08:35:45] *** Joins: thurs8060 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[08:35:56] *** Quits: HaMsTeRs (~Thunderbi@14-0-173-026.static.pccw-hkt.com) (Ping timeout: 245 seconds)
[08:35:57] *** Joins: abraham (~abraham@143.244.185.86)
[08:36:10] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:36:26] *** Joins: sturm__ (~bsturmfel@mediagoblin/maintainer/bsturmfels)
[08:36:31] *** Joins: HaMsTeRs (~Thunderbi@14-0-173-026.static.pccw-hkt.com)
[08:36:58] *** Joins: fdan (~fdan@103.215.168.1)
[08:37:01] <fdan> HI there
[08:37:08] *** Joins: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[08:37:10] <fdan> what is a golbal intepreter lock in python?
[08:38:07] *** Quits: tsaka__ (~torstein@251.red-83-56-17.staticip.rima-tde.net) (Ping timeout: 252 seconds)
[08:38:27] <pyeverything> hi, I have this torch tensor, I am a bit confused what the last two mean in the dimension setup. https://bpa.st/UA2Q >>> b = (torch.rand(size=(1,10, 1, 1)) < 0.25).int() does it mean it is column?
[08:38:33] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: Hasta la vista.)
[08:39:02] *** Joins: tsaka__ (~torstein@251.red-83-56-17.staticip.rima-tde.net)
[08:39:03] <pyeverything> size(1,10,1,1) the last two 1 are for what?
[08:39:16] *** Quits: sturm_ (~bsturmfel@mediagoblin/maintainer/bsturmfels) (Ping timeout: 260 seconds)
[08:40:07] *** Quits: chenqisu12 (~xirndc@183.217.201.186) (Quit: Leaving)
[08:41:31] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[08:44:10] *** Quits: hudo__ (~hudo@62.68.20.210) (Ping timeout: 252 seconds)
[08:44:48] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[08:45:21] *** Joins: bloody (~bloody@user/bloody)
[08:48:57] *** Quits: bloody (~bloody@user/bloody) (Client Quit)
[08:49:11] *** Quits: sturm__ (~bsturmfel@mediagoblin/maintainer/bsturmfels) (Quit: Leaving)
[08:50:39] <deniska> fdan: a lock for protecting interpreter state when multiple threads are used
[08:51:33] <fdan> what is the use of it. when i read about that in google, i came to know that it prevents multiple threads to be simultaneously executed
[08:52:16] *** Joins: mei6 (~mei@user/mei)
[08:52:31] <deniska> fdan: it effectively prohibits executing python bytecode and accessing python objects from multiple threads simultaneously
[08:52:53] <fdan> this means that the threads cant execute in parallel
[08:53:12] <deniska> fdan: if they execute python bytecode or access python objects
[08:54:02] <fdan> what are the other cases the threads can execute in parallel. can you give me an example
[08:54:04] <deniska> fdan: if they run an extension written in another language, it can lift GIL during its operation
[08:54:14] <jinsun_> they can run in parallel if they run something that releases the GIL, IO is the usual case when that happens
[08:54:30] <deniska> fdan: IO is also the case in which GIL doesn't hinder anything
[08:54:37] *** Quits: tsaka__ (~torstein@251.red-83-56-17.staticip.rima-tde.net) (Ping timeout: 252 seconds)
[08:58:50] <energizer> can it execute another thread while waiting for the next instruction to arrive at the cpu from ram?
[08:58:55] *** Quits: yeirr (~yeirr@user/yeirr) (Quit: yeirr)
[08:59:17] *** Joins: yeirr (~yeirr@user/yeirr)
[08:59:20] <energizer> never looked into what's going on down there so idk what i'm talking about
[08:59:33] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[08:59:53] <energizer> maybe the question is nonsense
[09:01:12] *** Quits: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Remote host closed the connection)
[09:01:13] *** Joins: fikran (~fikran@user/fikran)
[09:01:17] *** Joins: tsaka__ (~torstein@251.red-83-56-17.staticip.rima-tde.net)
[09:02:22] *** Quits: ericzolf (~ericzolf@2a02:8070:a298:29f0::31a) (Ping timeout: 252 seconds)
[09:03:40] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[09:04:45] *** Quits: DaNeenjah (~jake@adsl-74-230-6-204.hsv.bellsouth.net) (Quit: WeeChat 3.3)
[09:05:37] *** Quits: fbiagent_ (~fbiagent@user/fbiagent) (Ping timeout: 252 seconds)
[09:07:21] *** Joins: Stormenberg (~thomas@188.95.247.248)
[09:07:58] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[09:08:29] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Client Quit)
[09:09:47] *** Quits: mei6 (~mei@user/mei) (Quit: mei6)
[09:10:31] *** Quits: prs (~Priyanshu@47.15.12.63) (Remote host closed the connection)
[09:11:08] *** Joins: mei6 (~mei@user/mei)
[09:11:34] *** Quits: oakridge (~oakridge@user/oakridge) (Quit: ZNC 1.7.5 - https://znc.in)
[09:11:54] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[09:12:13] *** Quits: tsaka__ (~torstein@251.red-83-56-17.staticip.rima-tde.net) (Ping timeout: 252 seconds)
[09:16:18] *** Joins: tsaka__ (~torstein@7.red-88-0-5.dynamicip.rima-tde.net)
[09:16:38] *** Joins: emf (~emf@2601:602:9400:84d:4d0:b06a:6fc2:88e4)
[09:17:10] *** Quits: dg_dg (~dg_dg@156.146.63.149) (Ping timeout: 252 seconds)
[09:19:55] *** Quits: NetPipe (~NetPipe@user/netpipe) (Quit: Client closed)
[09:20:00] *** Quits: giacomo (~giacomo@107.13.177.67) (Remote host closed the connection)
[09:20:13] *** Joins: Wulf (~Wulf@user/wulf)
[09:20:25] *** Joins: giacomo (~giacomo@107.13.177.67)
[09:20:28] *** Quits: yeirr (~yeirr@user/yeirr) (Ping timeout: 252 seconds)
[09:21:51] *** Joins: akaWolf (~akaWolf@akawolf.org)
[09:22:25] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[09:25:44] *** Quits: fdan (~fdan@103.215.168.1) (Quit: Client closed)
[09:26:08] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[09:26:28] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Client Quit)
[09:27:07] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[09:28:41] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:38b0:198a:d9c3:ffae) (Quit: Client closed)
[09:28:54] *** Quits: canurabus (~canurabus@ip-24-156-182-149.user.start.ca) (Quit: Leaving)
[09:29:04] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[09:30:31] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 245 seconds)
[09:30:54] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[09:31:24] *** Joins: djhankb (~djhankb@208.113.164.68)
[09:31:48] *** Joins: prs (~Priyanshu@2409:4063:6d0c:b492::7208:8108)
[09:35:15] *** Joins: kosh (~kosh@user/kosh)
[09:35:55] *** Joins: Vonter (~Vonter@user/vonter)
[09:39:07] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[09:40:28] *** Joins: srhm (~srhm@user/srhm)
[09:44:07] *** Quits: Spawns_Carpeting (~Spawns_Ca@user/spawns-carpeting/x-6969421) (Ping timeout: 252 seconds)
[09:46:17] *** Joins: ExeciN (~ExeciN@user/nicexe)
[09:46:48] *** Joins: swensson (~swensson@213.88.131.10)
[09:46:50] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[09:47:26] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[09:47:35] *** Joins: seednode (~seednode@user/seednode)
[09:50:25] *** Quits: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca) (Read error: Connection reset by peer)
[09:51:23] *** Joins: SlaveGeek334269 (~SlaveGeek@179.61.228.71)
[09:51:30] *** Joins: mchlumsky (~mchlumsky@modemcable106.190-179-173.mc.videotron.ca)
[09:55:37] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 265 seconds)
[09:55:40] *** Joins: gusto (~Augustus@109.255.100.54)
[09:55:59] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:3bcf:5af0:4ba9:f7db)
[09:56:19] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[09:58:57] *** Joins: yeirr (~yeirr@user/yeirr)
[09:59:35] *** Joins: ubert (~Thunderbi@77.119.168.192.wireless.dyn.drei.com)
[10:02:00] *** Joins: gloin_ (~gloin@user/gloin)
[10:02:20] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[10:02:39] *** Joins: harleypig0 (thelounge@harleypig.com)
[10:02:44] *** Joins: erica9 (~erica@user/erica)
[10:02:46] *** Quits: erica (~erica@user/erica) (Killed (NickServ (GHOST command used by erica9)))
[10:02:47] *** erica9 is now known as erica
[10:03:43] *** Joins: justHaunt1 (~justache@user/justache)
[10:03:49] *** Joins: crazysim_ (sid86009@id-86009.hampstead.irccloud.com)
[10:03:49] *** Joins: BytesAndCoffee|a (~libera@bytes.coffee)
[10:04:23] *** Joins: andrewSC_ (~andrewSC@archlinux/trusteduser/andrewSC)
[10:04:44] *** Joins: libussa_ (~libussa@libussa.net)
[10:04:47] *** Joins: han-`_ (sid293063@id-293063.helmsley.irccloud.com)
[10:04:54] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Ping timeout: 245 seconds)
[10:04:54] *** Quits: Pilate (~pilate@pilate.io) (Ping timeout: 245 seconds)
[10:04:54] *** Quits: Kaya (~KC@static.89.202.216.95.clients.your-server.de) (Ping timeout: 245 seconds)
[10:04:54] *** Quits: crazysim (sid86009@hampstead.irccloud.com) (Ping timeout: 245 seconds)
[10:04:54] *** Quits: libussa (~libussa@libussa.net) (Ping timeout: 245 seconds)
[10:04:54] *** Quits: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC) (Ping timeout: 245 seconds)
[10:04:54] *** Quits: MrAureliusR (~MrAureliu@user/mraureliusr) (Ping timeout: 245 seconds)
[10:04:54] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 245 seconds)
[10:04:54] *** Quits: guardian (~guardian@planet-d.net) (Ping timeout: 245 seconds)
[10:04:54] *** Quits: noyb (~noyb@user/noyb) (Ping timeout: 245 seconds)
[10:04:54] *** Quits: mrhands (~mrhands@user/mrhands) (Ping timeout: 245 seconds)
[10:04:54] *** Quits: kolcon (~kolcon@v.kolouch.org) (Ping timeout: 245 seconds)
[10:04:54] *** Quits: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca) (Ping timeout: 245 seconds)
[10:04:54] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Ping timeout: 245 seconds)
[10:04:54] *** Quits: han-` (sid293063@helmsley.irccloud.com) (Ping timeout: 245 seconds)
[10:04:54] *** Quits: gloin (~gloin@user/gloin) (Ping timeout: 245 seconds)
[10:04:54] *** Quits: mattmcc (~matt@li807-33.members.linode.com) (Ping timeout: 245 seconds)
[10:04:54] *** Quits: zwindl (~abc@user/abc) (Ping timeout: 245 seconds)
[10:04:54] *** Quits: BytesAndCoffee (~libera@bytes.coffee) (Ping timeout: 245 seconds)
[10:04:54] *** Quits: guntbert (~yesitsme@user/guntbert) (Ping timeout: 245 seconds)
[10:04:54] *** Quits: harleypig (thelounge@harleypig.com) (Ping timeout: 245 seconds)
[10:04:54] *** Quits: jim (~jim@about/linux/staff/jim) (Ping timeout: 245 seconds)
[10:04:54] *** Quits: nickel8448 (~rahulwadh@147.80.76.34.bc.googleusercontent.com) (Ping timeout: 245 seconds)
[10:04:54] *** Quits: justHaunt (~justache@user/justache) (Ping timeout: 245 seconds)
[10:04:54] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 245 seconds)
[10:04:54] *** Quits: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com) (Ping timeout: 245 seconds)
[10:04:54] *** Quits: MrSpooky (Ben@mrbenc.net) (Ping timeout: 245 seconds)
[10:04:54] *** Quits: vancz (~vancz@user/vancz) (Ping timeout: 245 seconds)
[10:04:54] *** Quits: Wu (~wu@173.red-83-50-192.dynamicip.rima-tde.net) (Ping timeout: 245 seconds)
[10:04:54] *** crazysim_ is now known as crazysim
[10:04:54] *** han-`_ is now known as han-`
[10:04:56] *** justHaunt1 is now known as justHaunt
[10:04:56] *** harleypig0 is now known as harleypig
[10:05:02] *** Joins: Wu (~wu@173.red-83-50-192.dynamicip.rima-tde.net)
[10:05:03] *** Joins: guntbert_ (~yesitsme@user/guntbert)
[10:05:07] *** Joins: MrC (Ben@mrbenc.net)
[10:05:17] *** Joins: kolcon (~kolcon@v.kolouch.org)
[10:05:18] *** Joins: MrAureliusR (~MrAureliu@user/mraureliusr)
[10:05:29] *** Joins: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com)
[10:05:45] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[10:06:00] *** Joins: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca)
[10:06:03] *** Joins: mrhands (~mrhands@user/mrhands)
[10:06:08] *** Joins: Techcable (~Techcable@168.235.93.147)
[10:06:11] *** Joins: nickel8448 (~rahulwadh@147.80.76.34.bc.googleusercontent.com)
[10:06:16] *** Joins: vancz (~vancz@user/vancz)
[10:06:24] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[10:06:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:06:56] *** Joins: jim (~jim@about/linux/staff/jim)
[10:07:08] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[10:07:39] *** Joins: Tas-sos (~Tas-sos@ppp141237137165.access.hol.gr)
[10:07:45] *** Joins: mactron (~mactron@APN-123-214-101-gprs.simobil.net)
[10:08:39] *** Joins: abc_ (~abc@user/abc)
[10:10:37] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[10:10:46] *** Quits: mactron (~mactron@APN-123-214-101-gprs.simobil.net) (Read error: Connection reset by peer)
[10:12:29] *** Joins: rendar (~rendar@user/rendar)
[10:13:15] *** Quits: emf (~emf@2601:602:9400:84d:4d0:b06a:6fc2:88e4) (Quit: emf)
[10:14:55] *** Quits: baltazar (~baltazar@84-236-12-244.pool.digikabel.hu) (Ping timeout: 252 seconds)
[10:15:09] *** Quits: c4017w__ (~c4017@209.52.68.8) (Read error: Connection reset by peer)
[10:15:45] *** Joins: mikisid (~mikisid@178-221-173-138.dynamic.isp.telekom.rs)
[10:15:57] *** Joins: akaWolf (~akaWolf@akawolf.org)
[10:16:47] *** Joins: baltazar (~baltazar@178-164-254-238.pool.digikabel.hu)
[10:18:51] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Ping timeout: 276 seconds)
[10:19:26] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[10:20:22] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:23:11] *** Joins: upsala (~zcb@185.213.155.160)
[10:24:11] *** Quits: CrypticSquared (~CrypticS_@user/crypticsquared) (Read error: Connection reset by peer)
[10:24:16] *** Quits: dub_a (~dub_a@2601:1c2:4e00:3b3::cb2) (Quit: WeeChat 3.3)
[10:24:20] *** Joins: CrypticS_ (~CrypticS_@user/crypticsquared)
[10:25:54] *** Quits: km (~km@user/km) (Quit: Leaving)
[10:26:13] *** Joins: vladoski (~vladoski@2001:b07:add:d406:9d7f:12dd:f369:123f)
[10:28:10] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[10:28:45] *** Joins: sreve (~quassel@p549d7004.dip0.t-ipconnect.de)
[10:29:10] *** Joins: tobybl (~tobybl@38.247.200.146.dyn.plus.net)
[10:29:47] <sreve> I want to flip an np.array from (x,y,3) to (y,x,3). I found the function np.flip(arr,axis) , but I cant get it to work.
[10:30:07] *** Joins: Ergo^ (~ergo@91.238.59.144)
[10:30:33] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[10:30:54] <sreve> img = np.flip(img, (1,0,2)) ?
[10:31:06] *** Joins: djhankb (~djhankb@208.113.164.68)
[10:31:07] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[10:31:35] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Client Quit)
[10:33:02] *** Joins: me-sudoer-dentne (~me-sudoer@2405:204:53ab:d5ed:583f:8b00:175b:9f05)
[10:33:46] <sreve> The shape of the array is preserved, but the elements are reordered. <- wrong function
[10:35:03] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[10:35:15] *** Quits: tsaka__ (~torstein@7.red-88-0-5.dynamicip.rima-tde.net) (Ping timeout: 265 seconds)
[10:35:48] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[10:35:49] *** Quits: et (~et@user/et) (Ping timeout: 252 seconds)
[10:36:46] *** Quits: NoImNotNineVolt (~fdsa@c-73-248-207-98.hsd1.nj.comcast.net) (Ping timeout: 245 seconds)
[10:36:55] *** Quits: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net) (Ping timeout: 252 seconds)
[10:38:15] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-3c96-bae1-40db-98e5.res6.spectrum.com)
[10:42:05] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:44:36] *** Joins: tsaka__ (~torstein@7.red-88-0-5.dynamicip.rima-tde.net)
[10:44:38] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[10:46:49] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Ping timeout: 252 seconds)
[10:47:06] *** Joins: beterraba (~beterraba@86.107.21.205)
[10:47:57] *** Joins: stockholm (~Andreas@p200300d2c706510050cb9f8f1ec3a5bd.dip0.t-ipconnect.de)
[10:49:31] *** Joins: MrFixIt (~samurai_@c-73-75-104-200.hsd1.il.comcast.net)
[10:49:38] *** Joins: chele (~chele@user/chele)
[10:49:39] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[10:52:50] *** Joins: et (~et@user/et)
[10:54:59] *** Joins: brickfat (~brickfat@user/brickfat)
[10:55:35] <Mogget> I am strugling to think of a good algorithm for what I want to do. Any suggestions on how I could achieve the following pseudocode; if stringvar[x:x+y] in listofhexchars: <replace stringvar[x:x+y] with aschii character>
[10:57:27] <Mogget> So far I am using a z window algorithm to move down the string to find characters encoded in hex which is easy enough, but I struggle to replace whatever I find with a single character.
[10:58:19] <deniska> Mogget: what is the broader picture? What are you trying to achieve? There might be a better way
[10:59:41] <Mogget> deniska: I am often given a javascript which I have to deobfuscate. So I thought I would just make a script which opens a file and replaces any \xYY in the file into the ascii character
[11:00:21] <deniska> Mogget: can you give a small input example?
[11:01:09] *** Joins: ph88 (~ph88@2a02:8109:9e00:7e5c::3d56)
[11:01:10] *** Quits: apteryx (~maxim@dsl-236-123-199.b2b2c.ca) (Ping timeout: 252 seconds)
[11:01:20] <Mogget> What i struggle with is not so much the "translation", but the action of actually taking out the range from the string and replacing it with 1 character.
[11:01:25] <Mogget> deniska: sure, give me a second.
[11:01:43] *** Joins: et_ (~et@user/et)
[11:02:28] <Mogget> deniska: var _foo = ["\x50\x48\x55"]
[11:02:48] *** Quits: et (~et@user/et) (Ping timeout: 265 seconds)
[11:02:49] *** et_ is now known as et
[11:03:03] <Mogget> in this specific cars i would like "\x50" to be replaced with P
[11:03:36] <Mogget> I will create a pastebin for the little i have created so far.
[11:03:43] *** dcaro_away is now known as dcaro
[11:03:55] *** Joins: chenqisu12 (~xirndc@183.217.201.186)
[11:04:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[11:04:24] <deniska> Mogget: FWIW you can do ast.literal_eval('"\x50\x48\x55"'), but that uses python's parsing rules which may differ from JS
[11:04:52] <KirkMcDonald> Mogget: Strings are immutable, so you aren't really moving anything down. It may be much simpler to frame the problem as creating a new string entirely.
[11:05:05] *** Joins: wyclif (~wyclif@user/wyclif)
[11:05:11] *** Joins: raxor2k (~raxor2k@78.158.228.45)
[11:05:19] <deniska> Mogget: you can probably find a proper JS parser somewhere
[11:05:56] <KirkMcDonald> But yeah, finding a proper JS parser is sound advice.
[11:05:57] <deniska> Mogget: or if you just need to replace this stuff, consider re.replace(), it can take a callable to decide what to replace to
[11:06:09] <KirkMcDonald> re.sub() you mean.
[11:06:13] <deniska> yeah, that
[11:06:19] *** Joins: jinsun__ (~quassel@user/jinsun)
[11:06:46] <Mogget> https://pastebin.com/qsfXRaGG Thats the code so far, and all your suggestions I will look into.
[11:06:48] <infobob> https://bpaste.net/G3PA (repasted for Mogget)
[11:08:03] <Mogget> FYI; The goal is not to create a "complete solution", just a script to quickly assess the content.
[11:08:49] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[11:08:51] *** Quits: mikisid (~mikisid@178-221-173-138.dynamic.isp.telekom.rs) (Ping timeout: 245 seconds)
[11:09:08] <deniska> sure, I still have a snippet of a really hacky code to translate some specific JS subset to JSON around :)
[11:09:42] <KirkMcDonald> re.sub() can get you there, but on its own won't distinguish between, say, string literal contents and comments.
[11:09:58] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 252 seconds)
[11:10:03] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[11:10:34] *** Joins: fikran (~fikran@user/fikran)
[11:10:35] *** Joins: wyclif (~wyclif@user/wyclif)
[11:10:42] *** Joins: nek_minnit (~nek_minni@h-98-128-168-226.NA.cust.bahnhof.se)
[11:11:01] <deniska> actually let me look at it…
[11:11:06] <deniska> Mogget: a = a.replace(r'\x', r'\u00') :D
[11:11:19] <KirkMcDonald> Cheeky.
[11:12:02] *** Quits: nomic (~nomic@185.217.117.233) (Quit: Leaving)
[11:12:15] *** jinsun__ is now known as jinsun
[11:12:32] <Mogget> haha, nice. unicode is just hex, but with a "broader" range?
[11:13:04] <deniska> Mogget: \uXXXX is how JSON does unicode escaping, and yeah, ascii is a subset of unicode
[11:13:05] <KirkMcDonald> I wouldn't frame it as "just hex," but yes, it's just a bunch of things assigned to numbers.
[11:13:35] <energizer> deniska: nice
[11:13:39] *** Quits: tsaka__ (~torstein@7.red-88-0-5.dynamicip.rima-tde.net) (Remote host closed the connection)
[11:13:58] *** Joins: apteryx (~maxim@dsl-10-146-97.b2b2c.ca)
[11:14:05] *** Joins: tsaka__ (~torstein@7.red-88-0-5.dynamicip.rima-tde.net)
[11:14:24] <deniska> the whole snippet (you were warned) https://bpa.st/LR2A
[11:14:26] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.3)
[11:14:56] *** Quits: abhixec (~abhixec@c-67-169-139-16.hsd1.ca.comcast.net) (Remote host closed the connection)
[11:15:03] <deniska> as I said, worked for some really specific subset from a specific autogenerated source
[11:15:41] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[11:15:48] <Mogget> Ill take any input and suggestions ;)
[11:16:05] *** Joins: wyclif (~wyclif@user/wyclif)
[11:16:22] <energizer> somebody once said being really good at regex is like having a face tattoo. it means you've led a hard life
[11:16:31] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[11:18:26] *** Quits: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Ping timeout: 245 seconds)
[11:18:26] *** Joins: Smedles_ (~quassel@2403:580d:7:0:aaa1:59ff:fe53:1a69)
[11:20:52] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[11:21:01] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:21:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[11:21:36] *** Joins: wyclif (~wyclif@user/wyclif)
[11:21:39] *** Joins: tuskkk____ (uid18470@id-18470.tinside.irccloud.com)
[11:22:49] *** Joins: shad (~shad@user/shad)
[11:26:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[11:26:33] *** Joins: millido (~millido@84.210.150.128)
[11:27:07] *** Joins: wyclif (~wyclif@user/wyclif)
[11:28:25] *** Quits: HaMsTeRs (~Thunderbi@14-0-173-026.static.pccw-hkt.com) (Ping timeout: 265 seconds)
[11:30:10] *** Joins: km (~km@user/km)
[11:30:34] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[11:31:04] *** Joins: djhankb (~djhankb@208.113.164.68)
[11:33:05] *** Quits: tsaka__ (~torstein@7.red-88-0-5.dynamicip.rima-tde.net) (Ping timeout: 264 seconds)
[11:33:20] *** Joins: Naan (~Naan@user/naan)
[11:33:59] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-3c96-bae1-40db-98e5.res6.spectrum.com) (Quit: jarthur)
[11:35:26] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[11:35:32] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[11:35:47] *** Joins: HaMsTeRs (~Thunderbi@14-0-173-026.static.pccw-hkt.com)
[11:36:41] *** Joins: loududo (~textual@182.50.168.175)
[11:36:55] *** Quits: ph88 (~ph88@2a02:8109:9e00:7e5c::3d56) (Ping timeout: 260 seconds)
[11:38:13] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:38:48] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:39:30] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[11:39:31] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[11:41:58] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[11:42:10] *** Joins: mickey8 (~user@user/mickey)
[11:43:18] *** Joins: Liblx (~Alex@2a02:810c:280:59c:157e:8d73:859d:c84b)
[11:45:27] *** Joins: upsala (~zcb@185.213.155.160)
[11:48:19] *** Joins: sniperwolf (~sniperwol@91.230.98.1)
[11:49:09] *** Joins: ub (~Thunderbi@178.165.181.201.wireless.dyn.drei.com)
[11:49:31] *** Quits: beterraba (~beterraba@86.107.21.205) (Ping timeout: 252 seconds)
[11:49:41] *** Quits: ubert (~Thunderbi@77.119.168.192.wireless.dyn.drei.com) (Ping timeout: 265 seconds)
[11:49:42] *** ub is now known as ubert
[11:50:42] *** Joins: manti7 (~manti7@176.10.104.94)
[11:50:46] <gitesh> It says PIL module not found but I have install PIL in this environment and I can access it with interpreter
[11:51:06] <gitesh> But when I run file it says not found
[11:51:23] <gitesh> My file is not in the environment folder
[11:51:24] *** Joins: beterraba (~beterraba@86.107.21.205)
[11:51:27] *** Joins: tsaka__ (~torstein@251.red-83-56-17.staticip.rima-tde.net)
[11:51:33] *** Joins: brelod (~me@90.244.150.142)
[11:52:02] *** Quits: HaMsTeRs (~Thunderbi@14-0-173-026.static.pccw-hkt.com) (Remote host closed the connection)
[11:52:52] *** Quits: stockholm (~Andreas@p200300d2c706510050cb9f8f1ec3a5bd.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[11:55:29] *** Joins: VaniaPy (~VaniaPy@ppp046176232235.access.hol.gr)
[11:55:37] *** Quits: vladoski (~vladoski@2001:b07:add:d406:9d7f:12dd:f369:123f) (Ping timeout: 252 seconds)
[11:56:20] <energizer> gitesh: install pillow
[11:56:50] <gitesh> energizer: it says I have installed pillow new version
[11:57:07] <gitesh> You want me to install it system wide?
[11:59:26] *** Smedles_ is now known as Smedles
[12:01:15] *** Joins: xaltsc (~xaltsc@user/xaltsc)
[12:01:16] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:13:09] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[12:15:29] *** Joins: cth (~Cthulchu@193.194.107.250)
[12:16:19] *** Joins: szymon (~ugh@staticline-31-183-189-254.toya.net.pl)
[12:17:11] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 245 seconds)
[12:18:00] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[12:18:18] *** Quits: prs (~Priyanshu@2409:4063:6d0c:b492::7208:8108) (Remote host closed the connection)
[12:18:29] *** Joins: stockholm (~Andreas@p200300d2c706510050cb9f8f1ec3a5bd.dip0.t-ipconnect.de)
[12:18:41] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 265 seconds)
[12:19:17] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[12:20:48] *** Joins: CoolerX (~CoolerX@user/coolerx)
[12:21:15] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[12:24:56] *** Quits: tsaka__ (~torstein@251.red-83-56-17.staticip.rima-tde.net) (Ping timeout: 246 seconds)
[12:25:31] *** Joins: cheater (~Username@user/cheater)
[12:31:03] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[12:31:21] *** Joins: ph88 (~ph88@2a02:8109:9e00:7e5c::3d56)
[12:31:35] *** Joins: djhankb (~djhankb@208.113.164.68)
[12:32:45] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:3580:f49f:62f:7415)
[12:32:50] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Read error: Connection reset by peer)
[12:33:01] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[12:34:53] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 268 seconds)
[12:36:48] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[12:37:04] *** Joins: Appli000 (~Thunderbi@176-161-23-89.abo.bbox.fr)
[12:37:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[12:37:58] *** Joins: wyclif (~wyclif@user/wyclif)
[12:38:17] *** Quits: Appli000 (~Thunderbi@176-161-23-89.abo.bbox.fr) (Client Quit)
[12:39:28] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:40:23] *** Joins: e2m4n (~ezman@user/e2m4n)
[12:41:50] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[12:42:10] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[12:45:06] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 245 seconds)
[12:45:40] *** Quits: giacomo (~giacomo@107.13.177.67) (Ping timeout: 252 seconds)
[12:45:51] *** Joins: giacomo (giacomo@gateway/vpn/protonvpn/giacomo)
[12:46:23] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Ping timeout: 265 seconds)
[12:46:38] *** Quits: loududo (~textual@182.50.168.175) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:50:14] *** Joins: thiras (~thiras@user/thiras)
[12:51:12] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[12:51:32] *** Quits: beterraba (~beterraba@86.107.21.205) (Ping timeout: 246 seconds)
[12:51:49] *** Joins: loududo (~textual@182.50.168.175)
[12:52:15] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[12:52:35] *** Joins: cursey (~cursey@user/cursey)
[12:53:44] *** Joins: beterraba (~beterraba@86.107.21.205)
[12:53:49] *** Joins: vladoski (~vladoski@93-47-225-6.ip114.fastwebnet.it)
[12:53:59] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[12:54:03] *** Joins: mat001 (~mat001@213.143.69.121)
[12:54:07] *** Joins: audiocat (~audio@2603-8081-1800-1546-2dd4-83e2-b5fe-f975.res6.spectrum.com)
[12:54:24] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[12:54:27] *** Quits: Chex (~Chex@user/chex) (Ping timeout: 240 seconds)
[12:54:56] *** Joins: akaWolf (~akaWolf@akawolf.org)
[12:55:05] *** Quits: fructose (~fructose@user/fructose) (Ping timeout: 250 seconds)
[12:56:14] *** Joins: Mattiasl_ (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[12:56:15] *** Joins: shad (~shad@user/shad)
[12:57:58] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[12:58:23] *** Quits: Liblx (~Alex@2a02:810c:280:59c:157e:8d73:859d:c84b) (Quit: WeeChat 3.2)
[12:58:49] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Ping timeout: 252 seconds)
[12:59:05] <Zweimer> https://bpa.st/DP4Q I am trying to implement a function, that is returning a QGroupBox with different elements inside. This function is being called multiple times and the returnd QGroupBox should be put inside a gridLayout. The UI isn't being shown though and the process exits straight away.
[12:59:18] <Zweimer> Can somebody see what mistake I made?
[13:01:40] *** Joins: Klinda (~superleag@user/klinda)
[13:04:20] *** Joins: guardian (~guardian@planet-d.net)
[13:06:33] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[13:09:14] *** Quits: sniperwolf (~sniperwol@91.230.98.1) (Quit: Client closed)
[13:09:30] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[13:09:34] *** Joins: gggp (~gggp@123.113.176.77)
[13:09:57] *** Joins: shangxiao (~davids@124.187.230.212)
[13:09:58] *** Quits: gggp (~gggp@123.113.176.77) (Client Quit)
[13:10:18] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[13:10:54] *** Parts: gggp (~gggp@li870-78.members.linode.com) ()
[13:10:56] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[13:12:56] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::2612)
[13:12:58] *** Quits: stockholm (~Andreas@p200300d2c706510050cb9f8f1ec3a5bd.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[13:14:12] *** Joins: chronus (~chronus@user/chronus)
[13:15:04] *** Parts: loududo (~textual@182.50.168.175) (Textual IRC Client: www.textualapp.com)
[13:18:08] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[13:18:25] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 260 seconds)
[13:19:28] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[13:19:55] *** Joins: fikran (~fikran@user/fikran)
[13:22:51] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:550a:f4fd:68a3:3055) (Quit: Textual IRC Client: www.textualapp.com)
[13:25:28] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[13:27:41] *** Quits: VaniaPy (~VaniaPy@ppp046176232235.access.hol.gr) (Quit: Connection closed)
[13:28:44] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[13:29:18] *** Joins: srhm (~srhm@user/srhm)
[13:29:51] *** Joins: lxwulf (~lxwulf@user/lxwulf)
[13:30:19] *** Quits: swensson (~swensson@213.88.131.10) (Quit: Client closed)
[13:30:33] <deniska> Zweimer: you never called app.exec_()
[13:30:40] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[13:30:41] <lxwulf> hey guys cant i use pandoc/pypandoc not in a virtual environment? i have errors it doesnt find the module to import
[13:31:12] *** Joins: djhankb (~djhankb@208.113.164.68)
[13:31:44] *** Joins: jamesbooker (~jbooker@90.253.74.158)
[13:31:48] <Zweimer> deniska, line 61. Before I added the QGridLayout and a function to generate multiple QGroupBoxes, the program was working fine.
[13:32:16] <deniska> ah, didn't notice
[13:36:07] *** Joins: rajkosto (~rajkosto@93-86-134-26.dynamic.isp.telekom.rs)
[13:36:31] *** Joins: solrize (~solrize@user/solrize)
[13:37:10] <solrize> is there some kind of lib that takes a dataclass or NamedTuple declaration and generates an sql schema for that record?  or similar
[13:38:26] *** Quits: upsala (~zcb@185.213.155.160) (Ping timeout: 245 seconds)
[13:38:37] *** Joins: Pickchea (~private@user/pickchea)
[13:39:19] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[13:40:18] *** Quits: vimart (~vimart@85.255.233.1) (Quit: WeeChat 2.8)
[13:40:31] *** Quits: jamesbooker (~jbooker@90.253.74.158) (Quit: Client closed)
[13:41:59] *** Joins: wingsorc (~wingsorc@user/wingsorc)
[13:43:28] *** Joins: JanC_ (~janc@user/janc)
[13:43:39] *** Quits: JanC (~janc@user/janc) (Killed (lead.libera.chat (Nickname regained by services)))
[13:43:39] *** JanC_ is now known as JanC
[13:43:54] *** Quits: jonthesnow (~xizhendu@240e:404:8610:62b2:dadc::30c0) (Ping timeout: 265 seconds)
[13:45:23] <shangxiao> solrize: yes, there was one that popped up recently using dataclasses
[13:45:29] *** Joins: upsala (~zcb@185.213.155.160)
[13:45:40] *** Quits: lxwulf (~lxwulf@user/lxwulf) (Quit: Leaving)
[13:45:50] <shangxiao> i was also toying around with the idea a couple of years ago but got distracted with other things… thinking nobody would want to use such a lib
[13:50:01] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:51:09] *** Quits: hifi (hifi@m.vi.fi) (Remote host closed the connection)
[13:51:27] *** Joins: hifi (hifi@m.vi.fi)
[13:52:03] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[13:53:10] <shangxiao> solrize: ah this was it, not quite dataclasses but down that alley: https://github.com/tiangolo/sqlmodel
[13:55:30] *** Joins: jbooker (~jbooker@90.253.74.158)
[13:55:37] *** Joins: eem (~eem@user/eem)
[13:55:44] *** Parts: jbooker (~jbooker@90.253.74.158) ()
[13:58:30] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-25.dhcp.inet.fi)
[13:59:09] *** Joins: _zipper (zipper@gateway/vpn/protonvpn/zipper/x-90676202)
[13:59:23] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[14:01:02] *** Joins: LucaTM (~LucaTM@user/lucatm)
[14:01:45] *** Joins: jinsun__ (~quassel@user/jinsun)
[14:02:00] <deniska> solrize: that's kind of how every ORM works
[14:02:35] <DnzAtWrk> today I learned that numpy.unique can return unique indices instead
[14:02:45] <DnzAtWrk> turning a unique set into 0, 1, 2, etc.
[14:03:53] <DnzAtWrk> [8, 8, 1, 1, 2, 3] into [3, 3, 0, 0, 1, 2]
[14:03:59] <DnzAtWrk> very handy
[14:04:55] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[14:05:11] <zamba> i want to combine multiprocessing with async network io.. so inside each process spawned with multiprocess module, i want to perform async io.. is this.. well.. possible?
[14:05:22] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 252 seconds)
[14:05:25] <DnzAtWrk> sure
[14:05:41] <zamba> i'm just wondering how to get it set up correctly
[14:05:57] <zamba> i have the following code: https://dpaste.org/s6sg
[14:06:00] <DnzAtWrk> just consider each script its own process and do what you normally do
[14:06:13] <zamba> inside the handle function i want to set up an async loop
[14:07:57] <DnzAtWrk> why import logging twice
[14:08:00] <DnzAtWrk> instead of just at the top
[14:08:20] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[14:08:47] <DnzAtWrk> hmmm
[14:08:50] *** Quits: rannnn8888 (~rannnn888@bzq-79-182-162-211.red.bezeqint.net) (Quit: Client closed)
[14:08:52] <DnzAtWrk> can you really pass a connection like that?
[14:08:58] <DnzAtWrk> I kinda suspect maybe not
[14:09:16] <DnzAtWrk> isn't there some form of serialization going on when you pass arguments to another process?
[14:09:35] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:09:49] <DnzAtWrk> conn, address = self.socket.accept()
[14:09:53] <DnzAtWrk> process = multiprocessing.Process(target=handle, args=(conn, address))
[14:09:59] <DnzAtWrk> I may be wrong tho
[14:10:19] *** Quits: _zipper (zipper@gateway/vpn/protonvpn/zipper/x-90676202) (Ping timeout: 252 seconds)
[14:10:46] *** Joins: nips (~nips@abv84.internetdsl.tpnet.pl)
[14:10:47] *** Joins: VaniaPy (~VaniaPy@ppp046176232235.access.hol.gr)
[14:10:53] *** Quits: nips_ (~nips@abv84.internetdsl.tpnet.pl) (Ping timeout: 264 seconds)
[14:11:46] *** MrC is now known as MrSpooky
[14:12:00] *** Quits: Mattiasl_ (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: Textual IRC Client: www.textualapp.com)
[14:12:30] *** Leonarbro_ is now known as Leonarbro
[14:13:09] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[14:13:53] <solrize> shangxiao, thanks.  deniska i don't want an orm, just want to generate a schema and then write sql statements
[14:14:03] <solrize> thanks too though
[14:14:21] *** Joins: swensson (~swensson@213.88.131.10)
[14:16:15] *** Joins: gadfly (~gadfly@107-214-145-46.lightspeed.sntcca.sbcglobal.net)
[14:18:38] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[14:21:04] *** me-sudoer-dentne is now known as dvorak
[14:22:15] *** Quits: orangeboxcutter (~orange@user/orangeboxcutter) (Quit: ZNC - https://znc.in)
[14:22:33] *** Joins: orangeboxcutter (~orange@user/orangeboxcutter)
[14:23:02] *** Quits: orangeboxcutter (~orange@user/orangeboxcutter) (Read error: Connection reset by peer)
[14:23:20] *** Joins: orangeboxcutter (~orange@user/orangeboxcutter)
[14:23:22] *** Quits: orangeboxcutter (~orange@user/orangeboxcutter) (Remote host closed the connection)
[14:23:40] *** Joins: orangeboxcutter (~orange@user/orangeboxcutter)
[14:24:00] *** Quits: orangeboxcutter (~orange@user/orangeboxcutter) (Remote host closed the connection)
[14:24:03] *** Joins: Abrax- (~Abrax@user/abrax)
[14:24:19] *** Joins: orangeboxcutter (~orange@user/orangeboxcutter)
[14:26:33] *** dvorak is now known as me-sudoer-dentne
[14:27:20] *** Quits: Abrax (~Abrax@user/abrax) (Ping timeout: 268 seconds)
[14:28:00] *** Joins: stockholm (~Andreas@p200300d2c706510050cb9f8f1ec3a5bd.dip0.t-ipconnect.de)
[14:28:11] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[14:28:52] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[14:29:13] *** Quits: lifefir3 (~lifefir3@152.37.120.101) (Quit: The Lounge - https://thelounge.chat)
[14:30:12] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[14:30:36] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[14:30:58] *** Joins: lifefir3 (~lifefir3@152.37.120.101)
[14:31:09] *** Joins: djhankb (~djhankb@208.113.164.68)
[14:31:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:34:41] *** Joins: rany (~rany@user/rany)
[14:37:21] *** Joins: theprophet (~theprophe@85.114.228.184)
[14:38:18] <Zweimer> What are ObjectNames in PyQT5 used for? Why do they need to be set?
[14:39:20] *** Quits: yeirr (~yeirr@user/yeirr) (Ping timeout: 265 seconds)
[14:39:31] *** Quits: shad (~shad@user/shad) (Ping timeout: 252 seconds)
[14:41:50] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[14:42:44] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:43:22] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 252 seconds)
[14:43:40] *** Joins: xiongxin (~quassel@113.116.224.79)
[14:46:40] *** Joins: Laibsch (~leggewie@85.14.30.70)
[14:48:05] *** dcaro is now known as dcaro_lunch
[14:49:18] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[14:49:37] <Masklin_Gurder> float('inf') is always bigger than any other int or float, ja?
[14:50:13] *** Quits: xiongxin (~quassel@113.116.224.79) (Read error: Connection reset by peer)
[14:51:10] <nedbat> Masklin_Gurder: yes
[14:51:11] *** Joins: xiongxin (~quassel@113.116.224.79)
[14:51:28] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[14:51:42] <mgedmin> float('inf') > float('nan') returns False
[14:51:49] <mgedmin> (but float('inf') < float('nan') also returns False)
[14:52:07] <nedbat> Masklin_Gurder: always bigger than any float number, or any int
[14:52:10] <mgedmin> (any comparison against a NaN returns False, as decreed by IEEE 754)
[14:53:21] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 265 seconds)
[14:53:57] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[14:54:06] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[14:54:45] *** Joins: CombatVet (~c4@user/combatvet)
[14:55:58] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[14:56:39] <zamba> DnzAtWrk: how would you do it instead?
[14:57:25] <Laibsch> Hello, my apologies if this is a dumb question.  I put "pytest==6.2.5" in requirements.txt but gitlab CI then fails.  According to the logs, gitlab has only access up to version 4.6.11 while https://docs.pytest.org/en/stable/changelog.html has 6.2.5 as the latest.
[14:57:30] <Masklin_Gurder> Excellent thanks
[14:57:43] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[14:57:44] *** Quits: Retr0id (~Retr0id@user/retr0id) (Read error: Connection reset by peer)
[14:57:44] <bjs> Laibsch: what logs?
[14:57:45] *** Joins: Retr0id (~Retr0id@user/retr0id)
[14:57:57] <Laibsch> bjs: logs of the failed CI pipeline
[14:58:03] <bjs> Laibsch: what did it say
[14:58:27] <Laibsch> Could not find a version that satisfies the requirement pytest==6.2.5 (from -r requirements.txt (line 2)) (from versions: 2.0.0, 2.0.1, [...] 4.6.9, 4.6.10, 4.6.11)
[14:58:31] *** Joins: brabrax (~brabrax@user/brabrax)
[14:58:32] <Laibsch> ellipsis added by me
[14:58:55] <bjs> learner36: are you using Python 2?
[14:58:56] *** Joins: Klinda (~superleag@user/klinda)
[14:58:57] <bjs> oops
[14:59:00] <bjs> Laibsch: are you using Python 2?
[14:59:14] <Laibsch> not on purpose ;-)
[14:59:23] <bjs> Laibsch: maybe you should check if on accident then :)
[14:59:25] *** Quits: Strom (strom@fedora/strom) ()
[14:59:27] <Laibsch> on my machine, I am certainly not, but that may just be the answer
[14:59:40] <bjs> 4.6.11 happens to be the last release that supports Python 2
[14:59:41] <bjs> so...
[14:59:48] <Laibsch> thanks, guys, for pointing me in the right direction.  I will confirm.
[15:00:07] *** Joins: Ivii (~Ivyy@2001:a61:13f1:cb01:51c7:cb1:76d9:b281)
[15:00:08] *** Quits: xiongxin (~quassel@113.116.224.79) (Ping timeout: 265 seconds)
[15:00:21] *** Joins: xiongxin (~quassel@113.116.224.79)
[15:00:37] <Laibsch> indeed, that is likely the cause.  I was using a Ubuntu 18.04 image but that still has python2 as default.
[15:00:41] <Laibsch> Thanks, again.
[15:01:02] <Laibsch> image = docker image
[15:02:04] *** Joins: Strom (strom@fedora/strom)
[15:03:07] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[15:03:23] <theprophet> i have a job offer from innosoft and they are asking me to solve one thing first in django before they hire me, to make a form where i create a form (that is admin mode)  and then make it web (no design necessary) ,  and the fact is i dont know how to do that, i have a 10 day to do this, and my question is what part of django should i learn to
[15:03:23] <theprophet> perfom this?
[15:03:32] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[15:03:36] *** Joins: irrgit (~irrgit@192.241.175.183)
[15:03:47] <bjs> theprophet: https://docs.djangoproject.com/en/3.2/intro/tutorial01/
[15:03:57] <bjs> probably is a good place to start
[15:04:02] <Masklin_Gurder> Is there a shorthand for a=a+a, other than a+=a?
[15:04:17] <bjs> Masklin_Gurder: is there a shorthand other than this shorthand? no
[15:04:19] <Masklin_Gurder> Never mind, dumb q
[15:04:32] <theprophet> bjs i already following that documentation, and you think that is enough to do what they are asking me to do?
[15:04:38] <theprophet> i am*
[15:04:49] <wib_jonas> Masklin_Curder: usually this works: a *= 2
[15:04:52] *** Joins: brabrax (~brabrax@user/brabrax)
[15:04:57] <bjs> although note that `a += a` might not be exactly the same as `a = a+a` which might not be the same as `a = 2*a`
[15:05:16] <bjs> depending on what type `a` is,  for numbers this is true but for other things (lists, strings etc) they might be different
[15:05:29] <gadfly> bjs does python work the same as C
[15:05:35] <bjs> gadfly: what does that mean
[15:05:39] <gadfly> with x++ and ++X
[15:05:49] <bjs> gadfly: no those aren't Python
[15:05:53] <gadfly> ah
[15:05:56] <bjs> and in general no,  Python is not C :P
[15:06:02] <gadfly> I know its not C
[15:06:11] <gadfly> but any langs use that operator
[15:06:14] <gadfly> many
[15:07:31] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[15:07:39] <theprophet> bjs they want me to make a admin panel, where you can fill out the ID form and then to turn this into web, will i learn that in that documentation?
[15:07:45] *** Joins: arinov (~arinov@31.142.50.8)
[15:08:09] <bjs> theprophet: you're very unlikely to find <the exact exercise they want you to do> in an easy "this is how you do it" form tutorial
[15:08:37] <bjs> but that tutorial will show you how to make a django app, to create forms and to do things and if you don't know how to do the basics then you're not going to be able to get around learning them to do this
[15:08:58] <theprophet> bjs well, this is my first job offer and that will be sad if i wont be able to do this..
[15:09:19] <theprophet> bjs the fact is, i started to learn django like 4 days ago.
[15:09:29] <bjs> theprophet: is it a webdev job?
[15:10:03] <theprophet> bjs not only
[15:10:15] <bjs> theprophet: did they not ask if you knew django already?
[15:10:15] *** Parts: Laibsch (~leggewie@85.14.30.70) ()
[15:10:32] *** Joins: Laibsch (~leggewie@85.14.30.70)
[15:10:43] <theprophet> bjs yes and i said i did not, and i asked do i still have a chance to get that job and they said yes.
[15:10:55] <theprophet> bjs and now they are asking me to perform such thing in django.
[15:11:05] <bjs> theprophet: okay, well if you care about the job a lot I'd get down and work on learning the basics of django
[15:11:56] <bjs> if you said you don't know django and they've set you a django task then ... what exactly do they expect of you?  You can only try learn the basics and attempt it;  or refuse to do it.  What other options are there :)
[15:12:18] <theprophet> bjs so far what i know about django is, how to start a project, how to start a server , and what file is what in my django project. i know couple of thing about migrating how to connect db and etc/
[15:12:57] <theprophet> bjs well i am guession i wont be able to do that in 10 days.
[15:13:04] <theprophet> guessiing*
[15:13:25] <bjs> theprophet: well you can only do what you can do,  so do what you can do and them it's up to them to decide really
[15:13:44] <theprophet> bjs i guess so. thank you.
[15:13:45] <Laibsch> on a related note, if a company asked me to do XYZ and I did find exact instructions on how to do this (or 95% of the task) would it be OK to simply copy the code, give credit or would a company frown upon this?  I mean, coding very often seems to be "take code from internet/use lib ABC to do the heavy lifting and adapt it to your needs" which is a main driver of efficiency.
[15:14:09] <Laibsch> this being during an interview phase like theprophet
[15:15:04] <trace987> how do I make a newline for the shell, that is not a newline when I do copy paste
[15:15:28] <theprophet> Laibsch yea, i tought about that, but the fact is they are going to ask questions when its time to hire or no.
[15:15:39] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[15:15:41] *** Quits: VaniaPy (~VaniaPy@ppp046176232235.access.hol.gr) (Quit: Connection closed)
[15:15:48] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[15:15:57] <theprophet> Laibsch and you are screwed if you dont know what you copy/pasted.
[15:16:07] <bjs> Laibsch: if you copy and don't give credit surely that's bad,  and if you just start hammering away and you don't try use the resources available to you then that's just not very good use of your time.  Unless they specifically say otherwise.  But if you just copy someone else's code haphazardly and it's clear you don't really understand what's going on that would be even worse than doing it yourself
[15:16:10] <Laibsch> theprophet: Well, that I was never proposing
[15:16:26] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:3580:f49f:62f:7415) (Quit: Client closed)
[15:16:37] *** Joins: brabrax (~brabrax@user/brabrax)
[15:16:42] <bjs> because if they ask questions about what it's doing, then if you did it yourself you can at least attempt to answer
[15:16:50] <amosbird> Hello! Is there a way to select [:4] and [10:] in one go to form a new list?
[15:16:58] *** Joins: carl-- (~carl-@185.103.188.130)
[15:17:08] <bjs> amosbird: not in a single slice no
[15:17:12] *** Joins: DaNeenjah (~jake@adsl-74-230-6-204.hsv.bellsouth.net)
[15:17:21] <bjs> I think
[15:18:10] <Laibsch> bjs: I would obviously make sure I understand the code.  It's just a question if it would be a requirement to reinvent the wheel from the company's POV or if it was usually OK to simply take an existing solution and adapt it (while obviously being upfront about using other people's code).  One can argue for both, I guess, so I wonder if there is a general "consensus".
[15:18:27] <Phase> I think the best way to handle that would be newlist = list[:4] + list[10:] depending on the desired output, no?
[15:18:35] <Laibsch> understand the code + be upfront about "borrowing" by giving proper credit
[15:19:01] *** Joins: Warped (~Warped@user/warped)
[15:19:34] *** Joins: paul424 (~chatzilla@2a01:111f:e22:cc00:5b2e:bb46:df53:b01d)
[15:20:09] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[15:20:40] *** Joins: aknot (~aknot@2603:900a:1503:17bb:c23a:bfae:7517:5554)
[15:20:56] <bjs> Laibsch: to be honest the kind of places that set these things such that you can just copy/paste a pre-solution from stackoverflow or something then i think you're going to find inconsistent results
[15:21:52] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:22:10] <bjs> and the people who set the task would be kidding themselves if the good developers won't just adapt solutions they've seen before
[15:22:18] <bjs> if they think the good developers*
[15:22:22] <Laibsch> bjs: inconsistent result wrt expectation of said companies or inconsistent results wrt the code itself?  I believe you mean the former, but I thought I'd ask to be sure.
[15:22:28] *** Joins: pycurious (~Adium@user/pycurious)
[15:22:57] <bjs> the former
[15:23:26] *** Joins: Atque (~Atque@user/atque)
[15:23:51] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[15:24:16] <bjs> Laibsch: if for example i tell people to go away and email in a fizzbuzz solution,  then either I'm very lazy and don't care or i'm trying to weed out those that really have no clue what's going on
[15:24:40] <bjs> if i'm surprised by people using solutions they've seen before then frankly that's my problem not theirs :P
[15:24:57] *** Joins: semeion (~semeion@user/semeion)
[15:25:09] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Remote host closed the connection)
[15:25:30] *** Joins: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[15:26:19] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[15:26:43] <Laibsch> tbh, I think in my case it might just indeed be to "weed out those that really have no clue what's going on". LOL
[15:26:46] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 245 seconds)
[15:26:56] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 246 seconds)
[15:27:22] *** Quits: vladoski (~vladoski@93-47-225-6.ip114.fastwebnet.it) (Ping timeout: 252 seconds)
[15:28:10] *** Quits: carl-- (~carl-@185.103.188.130) (Ping timeout: 268 seconds)
[15:28:22] <Laibsch> Just like theprophet, I've been upfront that I am only recently moving into the direction where they are now giving me tasks to solve before the next interview.  @theprophet, I believe they might want to see how much you already know in django and/or how quickly you can learn something new by yourself.
[15:29:16] *** Joins: fikran (~fikran@user/fikran)
[15:30:04] <theprophet> Laibsch that makes sense. and you are correct,
[15:30:33] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[15:31:03] *** Joins: djhankb (~djhankb@208.113.164.68)
[15:31:13] *** Quits: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 252 seconds)
[15:32:15] <Laibsch> theprophet: In any way, I see the challenge as an opportunity and motivation to accelerate my learning in the new area and as an opportunity to have code to show the next time around (if the interview should not progress).  A win for me either way.
[15:32:23] <theprophet> Laibsch they are asking to make ID form in django admin panel and later turn it into url. which is for me very confusing right now. if you ask me giving 10 days for somebody who already told you that he does not know django is very little time.
[15:32:49] <Laibsch> I felt it was a very long time
[15:32:54] *** Joins: redgloboli (~redglobol@user/redgloboli)
[15:33:08] <theprophet> Laibsch do you know django?
[15:33:13] *** Quits: bitdex_ (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[15:33:16] <Laibsch> I am not exactly sure what the task is, but for somebody who know, it probably takes 10 minutes or less to code that ;-)
[15:33:26] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 245 seconds)
[15:33:33] <theprophet> Laibsch that is correct
[15:33:37] <Laibsch> I've tinkered with django, but I'm no expert.  Nor am I a webdev.
[15:33:38] *** Joins: VaniaPy (~VaniaPy@ppp046176232235.access.hol.gr)
[15:34:26] *** Joins: CoolerX (~CoolerX@user/coolerx)
[15:34:47] <Laibsch> first question: whoever gave you that task is a native english speaker?  second question: can you post the exact wording of the task?  I don't understand "ID form".
[15:35:24] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[15:35:25] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:3580:f49f:62f:7415)
[15:35:43] <theprophet> Laibsch  no, thats my english lol. he emailed me that task, but before that we spoke on facebook. we and me and my country are georgians. we speak georgian and that email was also in georgian.
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:24] <theprophet> Laibsch well ID is your card that plastic thing. right? so to take it as example and make a form where a person can perfom such task as filing it up with correct information.
[15:36:29] <Laibsch> I see.  It felt like something was off in the task description.  Do you understand what they are asking of you?
[15:36:55] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:05] <theprophet> Laibsch yes i do. the problem is i dont know how to do that yet.
[15:38:04] <Laibsch> OK.  I am not entirely sure if they really are talking about marrying the plastic ID card thingy into django somehow.  Sounds off to me.  You might want to verify that as a first step (before you run off into a completely wrong direction).
[15:38:46] *** Parts: velix (~velix@user/velix) (Leaving)
[15:39:03] <theprophet> Laibsch well, in my country we have a cards,, personal information cards. which includes personal numbers.
[15:39:19] <Laibsch> theprophet: It's already a bit old, but I really enjoyed watching https://www.youtube.com/watch?v=F5mRW0jo-U4 as an intro to django.
[15:39:19] *** Joins: computeiro (~Wender@189.37.64.234)
[15:39:24] <theprophet> Laibsch name , last name and etc.
[15:39:43] <Laibsch> sure, but I don't think it matters to django.  I doubt that is what they are asking of you.
[15:39:57] <Laibsch> My gut tells me they want you to tinker with the admin page in django.
[15:40:07] <Laibsch> watch the video, I believe it's covered a bit in there
[15:40:10] <ChrisWarrick> is this just “make me a registration form” but stated in a very round-about way?
[15:40:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[15:41:25] <theprophet> ChrisWarrick not exactly but yes.
[15:41:25] *** Quits: orangeboxcutter (~orange@user/orangeboxcutter) (Quit: ZNC - https://znc.in)
[15:41:37] <ChrisWarrick> theprophet: okay, where’s the “not exactly” part?
[15:41:40] <Laibsch> ChrisWarrick: something like that is what I'm wondering about, too.  The task was translated by theprophet from Georgian.  Given the fact he doesn't fully understand the technical details of the task given to him we might likely have a fairly bad translation regardless of the good English that he speaks.
[15:41:41] *** Joins: wyclif (~wyclif@user/wyclif)
[15:42:09] *** Joins: orangeboxcutter (~orange@user/orangeboxcutter)
[15:42:18] <theprophet> Laibsch this is the google translation
[15:42:19] <theprophet> 1) In Jango, set up the form for entering the data on the ID card (in the admin panel) and display the information in a separate URL as a list.
[15:42:20] <theprophet> That is, you enter the information in the admin panel, and you show the result both in Django and in a separate url. (Do not forget the fields: image, different dates, etc.). I will not specify more details, I will wait for your decision. When designing a list, do not go for less that your full potential.) The key is to work on it.
[15:42:51] <Laibsch> OK
[15:43:10] *** Quits: orangeboxcutter (~orange@user/orangeboxcutter) (Client Quit)
[15:43:16] <ChrisWarrick> This sounds quite trivial to me
[15:43:18] *** Joins: carljm (~carljm@2620:10d:c090:400::5:99b9)
[15:43:24] <ChrisWarrick> (of course, assuming you know basics of Django)
[15:43:26] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 245 seconds)
[15:43:27] *** Joins: georgios (~georgios@user/georgios)
[15:43:29] *** Parts: VaniaPy (~VaniaPy@ppp046176232235.access.hol.gr) ()
[15:43:29] <theprophet> ChrisWarrick  i do.
[15:43:30] <Laibsch> sounds like they want additional fields and for you to output the list of accounts with that additional info to a browsable page
[15:43:43] <theprophet> Laibsch correct.
[15:43:45] <ChrisWarrick> theprophet: what did you use to learn Django?
[15:44:08] <theprophet> ChrisWarrick well, django documentation and couple of video tutorials alongside.
[15:44:48] <ChrisWarrick> theprophet: did you go through the official Django tutorial, the one where you build the Polls app? (https://docs.djangoproject.com/en/3.2/intro/tutorial01/)
[15:45:14] <theprophet> ChrisWarrick yes, but i have not finished it yet.
[15:45:29] <theprophet> ChrisWarrick still learning it, started 4 days ago
[15:45:40] *** Joins: lethu (~lethu@user/lethu)
[15:45:54] <ChrisWarrick> theprophet: okay, finish the tutorial first
[15:46:17] *** Joins: yeirr (~yeirr@user/yeirr)
[15:46:34] <ChrisWarrick> theprophet: after that, you should know enough and be able to fairly easily turn your Polls app into your People app
[15:46:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[15:46:40] <theprophet> ChrisWarrick i tought about that, but you know what else i am thinking about? will i still be able to finish the job that company sent me?
[15:46:53] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:3c81:12c5:ede2:fb22)
[15:47:09] *** Joins: wyclif (~wyclif@user/wyclif)
[15:47:10] <theprophet> ChrisWarrick its a time thing atm.
[15:47:14] <ChrisWarrick> theprophet: depends
[15:47:36] *** Joins: zeden (~zeden@user/zeden)
[15:47:38] <theprophet> yea it depends. i am not slow but django is not a easy thing to learn.
[15:47:42] <ChrisWarrick> theprophet: but you won’t be able to approach this task without finishing and understanging the polls tutorial
[15:48:12] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[15:48:14] <theprophet> ChrisWarrick that's one of the main things i wanted to know actually. thank you.
[15:49:35] <theprophet> ChrisWarrick , bjs  , Laibsch thank you all.
[15:50:15] *** Quits: thurs8060 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: Ping timeout (120 seconds))
[15:50:38] *** Joins: thurs8060 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[15:51:02] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[15:51:47] *** Quits: sagax (~sagax_nb@user/sagax) (Quit: Konversation terminated!)
[15:51:50] *** Quits: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Ping timeout: 265 seconds)
[15:52:24] *** Joins: Pilate (~pilate@pilate.io)
[15:53:54] <Laibsch> theprophet: yw.  I am confident you have what it takes to finish it in time.  But I certainly understand the anxiety of finishing the deadline.  That's life, that work life!  Furthermore, even if you don't make it or do make but fail to secure the job (IOW, worst outcome), you'll still be ahead by being better prepared next time around.  You've shown perseverance and you've acquired a new skill and Django is a good skill to have.
[15:54:48] <theprophet> Laibsch i understand, thank you for your kind words.
[15:55:14] *** Joins: el1 (~el@240e:390:6624:e7c0:1c0c:abb3:732d:d2ce)
[15:55:38] *** Joins: shad (~shad@user/shad)
[15:55:40] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[15:56:11] *** Quits: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 265 seconds)
[15:56:14] *** Joins: Pickchea (~private@user/pickchea)
[15:57:09] *** Quits: cth (~Cthulchu@193.194.107.250) (Ping timeout: 265 seconds)
[15:58:26] *** Quits: orbatos__ (~orbatos@user/orbatos) (Remote host closed the connection)
[15:59:23] *** Joins: orbatos (~orbatos@user/orbatos)
[16:02:19] *** Joins: vladoski (~vladoski@2001:b07:add:d406:a986:fe75:fcb8:5442)
[16:02:29] *** Quits: stockholm (~Andreas@p200300d2c706510050cb9f8f1ec3a5bd.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[16:03:17] *** Quits: rajkosto (~rajkosto@93-86-134-26.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[16:04:24] *** Quits: arinov (~arinov@31.142.50.8) (Ping timeout: 265 seconds)
[16:05:15] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 260 seconds)
[16:08:33] *** Joins: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963)
[16:08:38] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[16:09:31] *** Quits: twofingersneat_ (~twofinger@174-080-036-228.res.spectrum.com) (Read error: Connection reset by peer)
[16:10:00] *** Joins: rsx (~dummy@ppp-188-174-147-220.dynamic.mnet-online.de)
[16:10:18] *** Abrax- is now known as Abrax
[16:10:47] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[16:15:30] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[16:15:53] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:16:16] *** Quits: beterraba (~beterraba@86.107.21.205) (Ping timeout: 252 seconds)
[16:17:20] *** Joins: stockholm (~Andreas@p200300d2c706510050cb9f8f1ec3a5bd.dip0.t-ipconnect.de)
[16:18:09] *** Quits: ubert (~Thunderbi@178.165.181.201.wireless.dyn.drei.com) (Remote host closed the connection)
[16:18:19] *** Joins: beterraba (~beterraba@86.107.21.205)
[16:19:11] *** Joins: imakestuff (~imakestuf@197.156.86.223)
[16:19:28] <imakestuff> Should I choose Pylance for jedi lang server for VSCode?
[16:19:33] *** Joins: gusto (~Augustus@109.255.100.54)
[16:20:14] *** Quits: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com) (Remote host closed the connection)
[16:22:40] *** Quits: elkclone (~elkclone@user/elkclone) (Quit: Leaving)
[16:22:56] *** Joins: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com)
[16:22:59] *** Quits: chenqisu12 (~xirndc@183.217.201.186) (Quit: Leaving)
[16:23:19] *** Joins: zebrag (~chris@user/zebrag)
[16:25:30] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[16:27:16] <jinsun__> if you are fine with proprietary stuff (that means you use the MS vscode and not some other open source build) then pylance is the better choice
[16:27:27] *** jinsun__ is now known as jinsun
[16:28:08] *** Joins: orangeboxcutter (~orange@user/orangeboxcutter)
[16:29:27] *** Quits: shangxiao (~davids@124.187.230.212) (Quit: WeeChat 3.3)
[16:29:30] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[16:29:38] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[16:30:42] *** Joins: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net)
[16:30:52] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[16:31:19] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[16:31:30] *** Joins: djhankb (~djhankb@208.113.164.68)
[16:32:49] *** Quits: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com) (Ping timeout: 252 seconds)
[16:33:12] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:33:42] *** Parts: SlaveGeek334269 (~SlaveGeek@179.61.228.71) (Leaving...)
[16:35:02] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.3)
[16:35:39] *** dcaro_lunch is now known as dcaro
[16:35:46] *** Joins: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com)
[16:35:48] *** Quits: vladoski (~vladoski@2001:b07:add:d406:a986:fe75:fcb8:5442) (Remote host closed the connection)
[16:36:40] *** Joins: darksun (~darksun@user/darksun)
[16:37:07] <imakestuff> jinsun__: thanks. just looking for a better choice now
[16:37:54] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[16:38:04] *** Joins: Proxysna (~Proxysna@62.119.254.142)
[16:38:16] *** Joins: BlueSky (~BlueSky@user/bluesky)
[16:42:59] *** Joins: vladoski (~vladoski@2001:b07:add:d406:5499:7bb7:6e6d:a159)
[16:42:59] *** Joins: mnemonic (~semeion@user/semeion)
[16:44:22] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 252 seconds)
[16:44:42] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-06-174-93-254-50.dsl.bell.ca)
[16:44:48] *** Joins: diamondbond (~diamondbo@175.157.97.101)
[16:45:27] <bancroft> How can I tell how many False are in a list of bools quickly?
[16:45:57] *** Quits: raxor2k (~raxor2k@78.158.228.45) ()
[16:46:26] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[16:46:31] <bancroft> ahh wait, lists have a .count
[16:46:44] <bjs> bancroft: define quickly?  All the options are just variations on looping over and a counter
[16:46:48] *** Quits: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[16:47:09] <bjs> you can L.count(False) or len(L) - sum(L) or you can sum(not b for b in L) or sum(1 for b in L if not b)
[16:47:17] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-a8be-5e8c-f3b4-9539.res6.spectrum.com)
[16:47:26] <bancroft> bjs: are any of those faster than the others?
[16:47:27] <bjs> but I doubt any are that much quicker than the others
[16:47:35] <bancroft> yeah that's what I thought too
[16:47:41] <bjs> bancroft: maybe the count is faster marginally?  They're all just a for loop and a counter
[16:47:49] <bjs> I can't see why any would be much faster
[16:47:59] <bancroft> I think the count is more readable so i'll go with that
[16:48:33] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Ping timeout: 268 seconds)
[16:50:15] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[16:50:38] *** Joins: alzgh (~alzgh@user/alzgh)
[16:52:50] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[16:52:53] *** Parts: cmagina (sid286142@user/cmagina) ()
[16:54:03] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[16:54:28] *** Joins: lxwulf (~lxwulf@user/lxwulf)
[16:55:26] <lxwulf> hey guys i cant setup pandoc/pypandoc in a virtual environment it says always it doesnt finde the module pandoc or pandoc is not in PATH....(i use fedora linux)
[16:57:25] *** Quits: frost (~frost@59.71.244.189) (Quit: Connection closed)
[16:57:41] *** Quits: orangeboxcutter (~orange@user/orangeboxcutter) (Quit: ZNC - https://znc.in)
[16:59:39] *** Joins: cthulchu (~Cthulchu@212.26.138.174)
[17:00:02] *** Quits: PJBoy (~PJBoy@user/pjboy) (Quit: Ping timeout: 252 seconds)
[17:00:16] <raek> does anyone have a link to the "You can't spell Python without '
[17:00:28] <raek> does anyone have a link to the "You can't spell Python without 'Y Tho'" meme image?
[17:01:22] <raek> ah, found it. nevermind!
[17:01:55] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 252 seconds)
[17:02:00] *** Joins: orangeboxcutter (~orange@user/orangeboxcutter)
[17:02:45] <wib_jonas> raek: https://cataas.com/cat/says/You%20can't%20spell%20Python%20without%20'Y%20Tho'
[17:03:13] <raek> wib_jonas: this is the one I had in mind: https://i.redd.it/p0eoaorp5rx61.jpg
[17:06:44] *** Quits: swensson (~swensson@213.88.131.10) (Quit: Client closed)
[17:09:23] *** Joins: CoolerX (~CoolerX@user/coolerx)
[17:10:01] *** Quits: andrewSC_ (~andrewSC@archlinux/trusteduser/andrewSC) (Quit: WeeChat 3.3)
[17:10:18] *** Joins: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC)
[17:10:37] *** Joins: hemmond (~hemmond@mail.artisys.cz)
[17:10:46] *** Quits: Smedles (~quassel@2403:580d:7:0:aaa1:59ff:fe53:1a69) (Ping timeout: 252 seconds)
[17:10:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[17:11:06] *** Joins: Smedles (~quassel@61-245-148-167.3df594.adl.nbn.aussiebb.net)
[17:12:41] *** Joins: wyclif (~wyclif@user/wyclif)
[17:13:11] *** Quits: nek_minnit (~nek_minni@h-98-128-168-226.NA.cust.bahnhof.se) (Quit: Client closed)
[17:13:19] *** Quits: Stormenberg (~thomas@188.95.247.248) (Quit: Leaving)
[17:14:18] *** Joins: ravan (~ravan@user/ravan)
[17:15:27] <bancroft> so I have a tiny webserver that I run on a py that I start with systemd and I limit the memory the process can have. I updated numpy the other day and it took down my webserver. Low and behold, openblas now takes like 200MB more just to load. So now i'm setting an environment variable (OPENBLAS_NUM_THREADS=1) so clamp that way down because i'm not using that feature at all. All this happened
[17:15:28] <bancroft> because I just import numpy. How could I protect myself from such a problem like this in the future?
[17:15:46] *** Joins: LiftLeft (~LiftLeft@37.19.197.194)
[17:16:20] <bancroft> for any other libraries I import?
[17:16:21] <SnoopJ> bancroft, how much fancy stuff in numpy do you use? tinynumpy might be a suitable choice if you just need the ndarray API but not all the stuff in e.g. OpenBLAS
[17:17:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[17:18:10] *** Joins: wyclif (~wyclif@user/wyclif)
[17:18:27] <bancroft> tinynumpy is an option, but what if ... I don't know, tornado starts using more memory. Is there some kind of global mitigation I could do? what if I wrote a pytest to check the ratio between VIRT to RES memory? or ... I don't know,
[17:18:47] <grym> bancroft: tests before deployment
[17:19:29] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[17:19:51] <bancroft> grym: yeah but how? by creating a staging environment for my homelab (i'm not opposed to this, just saying), or somehow log an acceptable range each library can allocate memory? or ...
[17:20:02] <bancroft> just spit-balling, I don't know what I should do
[17:20:22] *** Joins: daoudr (~daoudr@91.90.122.18)
[17:20:59] *** Joins: bloody (~bloody@user/bloody)
[17:21:17] *** Joins: ses1984 (~stephanst@128.27.196.35.bc.googleusercontent.com)
[17:22:15] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 260 seconds)
[17:23:42] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Ping timeout: 268 seconds)
[17:25:37] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:25:39] *** Joins: iomari891 (~iomari891@105.112.138.38)
[17:26:50] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[17:26:56] *** Joins: magla (~gelignite@55d44e8b.access.ecotel.net)
[17:27:37] *** Joins: daoudr_ (~daoudr@2a02:1205:c681:1650:2213:cc7f:a040:3a92)
[17:28:22] *** Quits: giacomo (giacomo@gateway/vpn/protonvpn/giacomo) (Quit: Konversation terminated!)
[17:28:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[17:28:47] <grym> something like that, sure
[17:29:10] *** Joins: wyclif (~wyclif@user/wyclif)
[17:29:44] *** Joins: han-solo (~han-solo@user/han-solo)
[17:30:12] *** Quits: iomari891 (~iomari891@105.112.138.38) (Client Quit)
[17:30:16] *** Quits: daoudr (~daoudr@91.90.122.18) (Ping timeout: 268 seconds)
[17:30:57] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[17:31:29] *** Joins: djhankb (~djhankb@208.113.164.68)
[17:32:38] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[17:33:07] *** Joins: nomic (~nomic@185.217.117.88)
[17:33:20] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Ping timeout: 260 seconds)
[17:33:22] *** Quits: daoudr_ (~daoudr@2a02:1205:c681:1650:2213:cc7f:a040:3a92) (Quit: Leaving)
[17:33:32] *** Joins: Vornicus (~Vornicus@cpe-23-243-151-111.socal.res.rr.com)
[17:33:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[17:34:13] <hemmond> Hi, I have a question about Unit testing: I am writing an "update" utility to check version of file/folder structure inside specified folder (by reading specific file with version written there - if there is any) and then modifying this structure (executing some BASH commands, renaming folders, moving stuff around, etc). Any way to unit test it? Any pointers to another testing methods that can prepare and test this kind of file/folder structure operations
[17:34:41] *** Joins: wyclif (~wyclif@user/wyclif)
[17:34:50] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[17:35:11] *** Joins: vlm (~vlm@user/vlm)
[17:35:48] <OverCoder> where do I ask questions about machine learning
[17:36:08] <learner36> in ##machinelearning
[17:36:13] <OverCoder> ok, thanks
[17:36:14] <grym> or the other one.
[17:36:21] <grym> one of them has a very grumpy op
[17:36:23] <learner36> or ##ml-ot
[17:36:29] <deniska> hemmond: functions doing IO are harder to test. If there're some pure(-ish) functions you can extract from the process, you can test them instead
[17:36:34] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[17:36:38] <OverCoder> alright
[17:36:38] <grym> ^^
[17:36:41] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:36:57] <deniska> hemmond: you can also mock your way to success but that's… not always too useful to do
[17:36:59] *** Joins: iomari891 (~iomari891@105.112.138.38)
[17:37:40] <deniska> hemmond: or if a directory structure it expects is easy to recreate, you can create it on a real file system in a temp folder or something like that
[17:37:47] <ses1984> is there an easy way to use a pyenv virtualenv in a one-liner? something like `pyenv exec` except `pyenv virtualenv exec $venv command...`
[17:37:49] <deniska> and then just run your real code
[17:37:54] *** Joins: akk (~akk@75.161.146.115)
[17:38:34] <SnoopJ> bancroft, if your webserver is Linux and has the oomkiller enabled, that should have your back. I think there's also a way to limit the memory usage with the resource system, possibly something with resource.setrlimit() (I would think RLIMIT_RSS would work, but I just tried and couldn't get it to do what I wanted 😞)
[17:38:37] *** Joins: fikran (~fikran@user/fikran)
[17:39:19] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[17:39:21] * SnoopJ has been wondering about a related question with a not-tiny webserver that has a hard limit set uncomfortably close to the nominal value
[17:39:34] *** Quits: mwichmann (~mats@209-188-119-117.taosnet.com) (Remote host closed the connection)
[17:39:35] <grym> ses1984: not that i know of, but there's this sort of functionality in `pipx`: https://pypa.github.io/pipx/ supports  `pipx run ... `, which goes so far as to make and then delete the venv for you
[17:40:14] *** Joins: wyclif (~wyclif@user/wyclif)
[17:40:20] <bancroft> SnoopJ: it is linux, systemd would kill it and restart it over and over (I think that's called flapping?) because it would use too much memory so i'm not sure I understand how the oomkiller could help?
[17:40:25] *** Quits: apteryx (~maxim@dsl-10-146-97.b2b2c.ca) (Ping timeout: 252 seconds)
[17:41:02] <SnoopJ> bancroft, as I think about it, it can't. The reason I was wondering in the first place was that the oomkiller didn't give it a chance to send an error gracefully, the server on my end was dropping sockets on the floor
[17:41:05] <grym> ses1984: (pyenv and pipx play nicely together)
[17:41:07] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: AdiIRC is updating to v4.2 Beta Build (2021/10/13 UTC) 64 Bit)
[17:41:19] *** Joins: kujemiola (~kujemiola@2a01:114f:95e:c800:d97f:d01:bd57:4dc6)
[17:43:02] <SnoopJ> bancroft, but yea, you might look at the resource limit system, I think the intent is that you can tell the VMM about some limits. RLIMIT_AS might be worth looking at, since RLIMIT_RSS comes with some asterisks
[17:43:21] <hemmond> deniska: I thought about that, but the code is really just: start, read version from file, run operations to bump to current version (mostly commands to modify the files itself, often with external utility/bash script), updating version in the file. I expect recreating the folder structure (how the structure should look is defined and defined for every version), so I expect to prepare this in temp folder. I am mostly looking for some unit test framework, 
[17:43:56] <SnoopJ> bancroft, ah, yes, doing `resource.setrlimit(RLIMIT_AS, (softmax, hardmax))` will do the trick. (also, neat, this solves my problem!)
[17:43:56] *** Quits: kujemiola (~kujemiola@2a01:114f:95e:c800:d97f:d01:bd57:4dc6) (Quit: Client closed)
[17:44:15] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[17:44:41] *** Quits: Tas-sos (~Tas-sos@ppp141237137165.access.hol.gr) (Ping timeout: 245 seconds)
[17:44:50] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[17:45:05] *** Quits: cthulchu (~Cthulchu@212.26.138.174) (Ping timeout: 265 seconds)
[17:45:45] *** Quits: lxwulf (~lxwulf@user/lxwulf) (Quit: Leaving)
[17:45:46] *** Joins: wyclif (~wyclif@user/wyclif)
[17:46:07] *** Joins: tbcr (~brclark@user/tbcr)
[17:46:22] *** Quits: ngp (~ngp@199.180.249.183) (Remote host closed the connection)
[17:46:32] <bancroft> SnoopJ: nice :) Right now i'm using MemoryMax to set a hard limit and then I have SWAP mem at 0, and then I have vm.overcommit_memory = 120 so I can squeeze all the perf I can
[17:46:57] <SnoopJ> bancroft, https://bpa.st/A6LA
[17:47:39] <bancroft> SnoopJ: Omg, that's what you mean?! Damn, yeah that will work
[17:47:47] <bancroft> that's awesome, I love it!
[17:48:14] *** Joins: mwichmann (~mats@209-188-119-117.taosnet.com)
[17:49:13] *** Joins: sedeki (~textual@user/sedeki)
[17:49:30] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[17:50:36] <SnoopJ> I'm glad you asked the question, I hadn't tried that setting before but I was in there tinkering with RLIMIT_CORE recently (which...doesn't seem to work?) and saw the other resources and knew I'd have a use for them.
[17:50:39] *** Joins: tar_xvf_ (~tar@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[17:50:50] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[17:51:03] <SnoopJ> So this actually solves a ticket in my backlog in a way that means I don't have to write my own OOM monitor 🌟
[17:51:05] *** Quits: tar_xvf (~tar@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (Ping timeout: 264 seconds)
[17:51:17] *** Joins: wyclif (~wyclif@user/wyclif)
[17:52:17] *** Joins: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[17:53:17] *** Joins: NoImNotNineVolt (~fdsa@c-73-248-207-98.hsd1.nj.comcast.net)
[17:53:36] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:54:03] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[17:54:31] *** Joins: Tempesta (~Tempesta@user/tempesta)
[17:54:53] *** Joins: atomicwrites (~atomicwri@user/atomicwrites)
[17:55:57] *** Joins: zathras (~zodd@84-106-80-107.cable.dynamic.v4.ziggo.nl)
[17:56:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[17:56:55] *** Joins: wyclif (~wyclif@user/wyclif)
[17:59:19] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[17:59:56] *** Quits: philipp64|work (~philipp64@174.27.28.163) (Quit: philipp64|work)
[18:00:23] *** Quits: nomic (~nomic@185.217.117.88) (Quit: Leaving)
[18:00:53] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[18:06:42] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[18:07:37] *** Joins: ngp (~ngp@199.180.249.183)
[18:08:02] *** Parts: ATAD (~ATAD@user/atad) ()
[18:08:09] *** Joins: ATAD (~ATAD@user/atad)
[18:08:55] <Laibsch> bancroft: I did not read the entire conversation but I wanted to throw in that systemd has a way to limit ressource usage (CPU, IO and I assume RAM, too)
[18:09:20] <SnoopJ> yea systemd might have a spelling that talks to the VMM on your behalf
[18:09:41] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[18:09:44] *** Quits: ngp (~ngp@199.180.249.183) (Client Quit)
[18:09:48] <Laibsch> bancroft: "man systemd.resource-control"
[18:09:54] *** Joins: greentree (~greentree@pool-108-30-9-123.nycmny.fios.verizon.net)
[18:10:30] <Laibsch> and there it is indeed, MemoryMax
[18:10:44] *** Joins: Haxxa (~Haxxa@122-199-4-24.ip4.superloop.com)
[18:11:00] <bancroft> Laibsch: thank you, but I use MemoryMax  https://www.freedesktop.org/software/systemd/man/systemd.resource-control.html and importing numpy would go above the limit and kill my webserver in a constant flapping loop which was my problem. I was trying to address how to tell if a package update would make me go above the memory limit I have set already :)
[18:11:00] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-25.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:11:13] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[18:11:28] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[18:11:51] *** Joins: ngp (~ngp@199.180.249.183)
[18:12:01] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:12:19] <bancroft> The solution i'm going with is wrapping what SnoopJ said with this https://bpa.st/A6LA into a pytest which just imports the libs and my memory limits I have set
[18:12:20] *** Joins: wyclif (~wyclif@user/wyclif)
[18:13:19] <SnoopJ> bancroft, if you're already using systemd, Laibsch's suggestion is better unless you intend to change the limit from inside the process
[18:13:27] *** Quits: l4yer (~l4yer@159.48.55.9) (Ping timeout: 265 seconds)
[18:14:01] <SnoopJ> probably* better, I don't know exactly how systemd does it, but it's dedicated to this kind of task vs. my thing being kinda ad-hoc :)
[18:15:09] <SnoopJ> hmm, maybe not MemoryMax, though, that invokes the oomkiller. Maybe MemoryHigh can send a signal, though.
[18:15:31] <SnoopJ> "If a cgroup’s usage goes over the high boundary, the processes of the cgroup are throttled and put under heavy reclaim pressure." huh, maybe not
[18:16:31] *** Joins: bauripalash (~bauripala@2401:4900:382d:95c4:1:2:8da9:304b)
[18:16:53] *** Quits: ngp (~ngp@199.180.249.183) (Quit: connection reset by purr)
[18:17:05] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[18:17:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[18:17:17] <bancroft> SnoopJ: maybe i'm not clear, this is what I'm doing https://bpa.st/KV2A
[18:17:20] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-25.dhcp.inet.fi)
[18:17:42] *** Joins: ngp (~ngp@199.180.249.183)
[18:17:49] *** Joins: wyclif (~wyclif@user/wyclif)
[18:17:59] <OverCoder> I have a for-range with the range being some outside parameter
[18:18:00] <SnoopJ> bancroft, I wouldn't do this in a test, because it affects the entire process
[18:18:02] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[18:18:10] <OverCoder> how do I print loop progress every 5% of the range complete
[18:19:02] <SnoopJ> bancroft, or if I did, I would leave the second element (the maximum) as RLIM_INFINITY and restore the old soft limit when I was done
[18:19:16] *** Quits: Haxxa (~Haxxa@122-199-4-24.ip4.superloop.com) (Ping timeout: 245 seconds)
[18:19:53] *** Joins: greedom (~greedom@2001:16b8:2ef2:d800:9ee8:a74a:a3e:a0ec)
[18:20:39] *** Quits: diamondbond (~diamondbo@175.157.97.101) (Read error: Connection reset by peer)
[18:20:58] *** Joins: diamondbond (~diamondbo@175.157.97.101)
[18:21:14] *** Joins: FluffyMask (~masque@user/fluffymask)
[18:21:19] <greentree> does logging.basicConfig re-initialize the root logger?
[18:22:05] <greentree> like if i call logging.basicConfig multiple times but pass in different parameters each time does it just make a change to the root logger
[18:22:18] <greentree> e.g logging.basicConfig(level=Level.INFO) then logging.basicConfig(filename='output.log')
[18:22:25] <mgedmin> I think so; my advice would be: never use logging.basicConfig()
[18:22:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[18:22:54] *** Quits: vladoski (~vladoski@2001:b07:add:d406:5499:7bb7:6e6d:a159) (Ping timeout: 268 seconds)
[18:22:55] <greentree> that's fine. i just wanted to know what the behavior exactly was if that function was called multiple times
[18:23:18] *** Joins: wyclif (~wyclif@user/wyclif)
[18:23:23] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[18:23:27] *** Quits: bauripalash (~bauripala@2401:4900:382d:95c4:1:2:8da9:304b) (Read error: Connection reset by peer)
[18:24:39] <theprophet>  py manage.py sqlmigrate polls 0001 does this command work for postgresSQL ?
[18:25:11] <theprophet> or i need some other command ?
[18:25:14] <mgedmin> I had to look at the sources, but it seems that basicConfig() doesn't call .setLevel() on the root logger, unless you pass the level= kwarg
[18:25:27] <mgedmin> but it does remove all existing handlers before adding new ones
[18:25:31] *** Quits: BlueSky (~BlueSky@user/bluesky) (Ping timeout: 252 seconds)
[18:25:34] *** Quits: audiocat (~audio@2603-8081-1800-1546-2dd4-83e2-b5fe-f975.res6.spectrum.com) (Ping timeout: 252 seconds)
[18:25:42] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:25:59] <Laibsch> theprophet: not sure, but maybe there is a dedicated django channel which might be better suited?
[18:26:00] *** Joins: bauripalash (~bauripala@2401:4900:382d:95c4:1:2:8da9:304b)
[18:26:58] <bancroft> SnoopJ: But if any tests pop after those memory limits, then the same behavior would happen when it's running on the pi
[18:27:06] *** Joins: audiocat (~audio@2603-8081-1800-1546-569f-5b62-b4a9-4493.res6.spectrum.com)
[18:27:08] *** Quits: diamondbond (~diamondbo@175.157.97.101) (Ping timeout: 265 seconds)
[18:27:40] <SnoopJ> bancroft, if the limit is intended to apply to the test suite, the limit should be set at the suite level
[18:27:48] <SnoopJ> or maybe in a conftest.py
[18:28:04] *** Quits: bauripalash (~bauripala@2401:4900:382d:95c4:1:2:8da9:304b) (Read error: Connection reset by peer)
[18:28:17] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[18:28:26] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 245 seconds)
[18:28:49] *** Quits: xiongxin (~quassel@113.116.224.79) (Ping timeout: 252 seconds)
[18:28:49] *** Joins: wyclif (~wyclif@user/wyclif)
[18:29:01] *** Joins: xiongxin (~quassel@113.116.224.79)
[18:29:08] *** Joins: Haxxa (~Haxxa@122-199-4-24.ip4.superloop.com)
[18:29:41] *** Quits: gggpkm (~gggpkm@172.105.122.124) (Ping timeout: 245 seconds)
[18:30:12] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:30:20] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[18:30:28] *** Quits: Laibsch (~leggewie@85.14.30.70) (Ping timeout: 252 seconds)
[18:30:35] *** Joins: bauripalash (~bauripala@2401:4900:382d:95c4:1:2:8da9:304b)
[18:30:42] *** Joins: lethu (~lethu@user/lethu)
[18:30:57] <bancroft> SnoopJ: I guess there could be other problems too, like what if it's not obvious in the logs when the memory killed the test
[18:31:07] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[18:31:42] *** Joins: djhankb (~djhankb@208.113.164.68)
[18:33:04] *** Quits: bauripalash (~bauripala@2401:4900:382d:95c4:1:2:8da9:304b) (Read error: Connection reset by peer)
[18:33:54] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[18:34:21] *** Joins: wyclif (~wyclif@user/wyclif)
[18:34:52] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[18:36:57] *** Quits: Ivii (~Ivyy@2001:a61:13f1:cb01:51c7:cb1:76d9:b281) (Remote host closed the connection)
[18:37:06] *** Joins: upsala (~zcb@185.213.155.160)
[18:37:08] *** Quits: yac (~user@user/yac) (Remote host closed the connection)
[18:39:08] *** Joins: newpy (~newpy@2601:280:4381:1390:78c6:edb:15c0:8a3f)
[18:39:16] *** Joins: bauripalash (~bauripala@2401:4900:382d:95c4:1:2:8da9:304b)
[18:39:33] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[18:39:51] *** Joins: wyclif (~wyclif@user/wyclif)
[18:41:12] *** Quits: codebam (~codebam@user/codebam) (Remote host closed the connection)
[18:41:20] *** Joins: BlueSky (~BlueSky@user/bluesky)
[18:41:22] *** Quits: bauripalash (~bauripala@2401:4900:382d:95c4:1:2:8da9:304b) (Read error: Connection reset by peer)
[18:41:30] *** Joins: codebam (~codebam@user/codebam)
[18:42:01] *** Joins: yac (~user@user/yac)
[18:42:45] *** Joins: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it)
[18:42:57] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[18:43:30] *** Joins: bolnav[m] (~bolnavm]@2001:470:69fc:105::1683)
[18:43:35] <grandrew> bancroft, I use 'nohang' to run tasks that barely fit into 256GB and make sure processes fail nicely. I end up with 80% threads survivng the OOM race but that's also fine
[18:44:28] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[18:44:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[18:45:06] *** Quits: lacrymology (~lacrymolo@static-164-4-25-46.ipcom.comunitel.net) (Ping timeout: 245 seconds)
[18:45:23] *** Joins: wyclif (~wyclif@user/wyclif)
[18:45:26] *** Quits: yac (~user@user/yac) (Client Quit)
[18:45:51] <AhmedAmerican> am looping over lines from a text file `FILE A` which i process each line and save output to another text file `FILE B`. now what is the best practice to delete the line from `A` once i save the output to `B`
[18:46:12] *** Joins: yac (~user@user/yac)
[18:46:25] <mgedmin> the only way of deleting a line from a file is to overwrite the contents of the file from that point onwards
[18:46:45] <SnoopJ> bancroft, I *think* you'll get a MemoryError more often with the rlimit approach, because it returns ENOMEM and Python knows what this is about
[18:47:02] <SnoopJ> all bets are off for how libraries handle OS errors, but numpy probably does it right?
[18:47:20] <bolnav[m]> How do I read the command history of the asyncio REPL `python -m asyncio` if that is even possible?
[18:48:01] *** Quits: me-sudoer-dentne (~me-sudoer@2405:204:53ab:d5ed:583f:8b00:175b:9f05) (Quit: Leaving)
[18:49:11] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[18:49:42] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 265 seconds)
[18:50:30] *** Joins: Tas-sos (~Tas-sos@78-221-199.adsl.cyta.gr)
[18:50:36] *** Joins: hudo__ (~hudo@62.68.20.210)
[18:50:42] *** Quits: Haxxa (~Haxxa@122-199-4-24.ip4.superloop.com) (Quit: Haxxa flies away.)
[18:51:03] <Wulf> bolnav[m]: looks like it's not saved.
[18:51:24] <Wulf> bolnav[m]: else starting that command, entering a line, quitting + starting again, the line would be accessible.
[18:51:34] *** Joins: bauripalash (~bauripala@2401:4900:382d:95c4:1:2:8da9:304b)
[18:51:51] *** Joins: CoolerY (~CoolerX@user/coolerx)
[18:51:52] *** Joins: jr_web_d1 (~jr_web_de@ool-18bee068.dyn.optonline.net)
[18:52:01] <SnoopJ> bancroft, I double-checked and yea, numpy at least gives you MemoryError. There's no guarantee that any library at all will tell you about the OS error properly, but hopefully most of them will raise an exception of some kind to the Python side
[18:52:02] *** Joins: Haxxa (~Haxxa@122-199-4-24.ip4.superloop.com)
[18:52:26] <Wulf> bolnav[m]: and strace output suggests I'm right
[18:52:31] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[18:52:37] <SnoopJ> but a particularly silly library (like $employer!) might decide that abort() is always correct and then you're stuck with a subprocess at best.
[18:52:49] *** Quits: bauripalash (~bauripala@2401:4900:382d:95c4:1:2:8da9:304b) (Read error: Connection reset by peer)
[18:52:56] * SnoopJ grumbles
[18:53:40] <jr_web_d1> im new to python.. i basically want to do this -> for obj in array_of_objs_1, array_of_objs_2: if 2nd-paramate: print("excellent")
[18:54:05] *** Joins: _zipper (zipper@gateway/vpn/protonvpn/zipper/x-90676202)
[18:54:50] <mgedmin> what would that mean?  loop through the first, then through the second?  or loop through pairs from each array?
[18:55:13] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 252 seconds)
[18:55:21] <mgedmin> for the first you can use itertools.chain() or a simple list addition with +
[18:55:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[18:55:30] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 265 seconds)
[18:55:33] <mgedmin> for the second you can use zip()
[18:55:43] *** Joins: bauripalash (~bauripala@2401:4900:382d:95c4:1:2:8da9:304b)
[18:55:46] <jr_web_d1> so it would basically mean concat both of the array of objects.. but distingush the second array of objsa
[18:56:12] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[18:56:20] <mgedmin> ah, you want to concat but know where each item came from?
[18:56:25] *** Joins: wyclif (~wyclif@user/wyclif)
[18:56:25] <SnoopJ> jr_web_d1, do you mean `for first, second in [x, y]: if second: ...` ?
[18:56:37] *** Joins: l4yer (~l4yer@159.48.55.9)
[18:56:42] <jr_web_d1> i tried using zip on the array of objs but my pyCharm was saying that obj does not contain the property.. so for obj in zip(arrayofob1, arrayofobj2): print(obj.id)
[18:56:44] <bolnav[m]> Wulf: Thank you. I did not know strace python would be doable. Also https://bugs.python.org/issue37028
[18:56:47] <SnoopJ> (you can bind multiple names when you iterate something)
[18:56:59] <jr_web_d1> SnoopJ: perhaps that might work
[18:57:09] <mgedmin> I don't know if there's a nice spelling for this
[18:57:18] *** Quits: Haxxa (~Haxxa@122-199-4-24.ip4.superloop.com) (Read error: Connection reset by peer)
[18:57:52] <jr_web_d1> mgedmin: exactly!
[18:58:00] *** Quits: dvx (~dvx@185.63.97.64) (Remote host closed the connection)
[18:58:05] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:58:13] *** Parts: bolnav[m] (~bolnavm]@2001:470:69fc:105::1683) ()
[18:58:14] <mgedmin> it's possible to craft some monstrocity using for which, item in itertools.chain(zip(itertools.repeat('first'), first_array), zip(itertools.repeat('second'), second_array)): if which == 'second': ...
[18:58:22] <mgedmin> and I probably don't have enough )s in that expression
[18:58:30] * SnoopJ isn't sure he understands the task
[18:58:34] <jr_web_d1> oh man
[18:58:49] <mgedmin> if the loop body is different for the two arrays, why not write two for loops?
[18:58:49] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-25.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:58:53] *** Quits: yossarian (~yossarian@user/yossarian) (Ping timeout: 265 seconds)
[18:59:08] <mgedmin> if some part of the loop body is the same, and the rest different, why not extract the shared code into a helper function?
[18:59:08] *** Quits: szymon (~ugh@staticline-31-183-189-254.toya.net.pl) (Remote host closed the connection)
[19:00:40] *** Quits: bauripalash (~bauripala@2401:4900:382d:95c4:1:2:8da9:304b) (Read error: Connection reset by peer)
[19:01:19] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[19:01:31] <jr_web_d1> it becomes long and duplicated with only 2 or 3 lines of code difference out of 15 lines of code thas what i am doing now.. also the operations are long.  i have to loop twice and iterate twice.. trying to combine and iterate once without doing another loop.. im calling an api and its modifying like 300 rows.. so its going back and doing 300 rows again.. want to just do all at once.. its
[19:01:33] <jr_web_d1> complicated but if i can find a way to concat the two arrays and distingues between the first and second array then tahts it. mission acocomplished
[19:02:19] *** Mathisen_ is now known as Mathisen
[19:02:23] <mgedmin> helper function: def loop_two_arrays(one, two): for x in one: yield 'first', x; for y in two: yield 'second', y
[19:02:38] <mgedmin> and then for which, item in loop_two_arrays(blah, blah): if which == 'first': ...
[19:02:50] <mgedmin> more readable than the itertools.chain() monstrocity I suggested earlier
[19:03:02] <jr_web_d1> ok ima read what u wrote there
[19:03:09] <mgedmin> function/variable names could be improved
[19:03:40] <jr_web_d1> i have to go study that yeild and waht its doing
[19:03:48] <jr_web_d1> ima copy your code
[19:04:01] *** Quits: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com) (Ping timeout: 252 seconds)
[19:04:17] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-25.dhcp.inet.fi)
[19:04:32] *** Joins: Haxxa (~Haxxa@122-199-4-24.ip4.superloop.com)
[19:05:23] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:3580:f49f:62f:7415) (Ping timeout: 256 seconds)
[19:07:45] *** Joins: fluffyballoon (~user@131.93.208.196)
[19:07:55] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[19:08:50] *** Joins: wyclif (~wyclif@user/wyclif)
[19:09:16] *** Quits: xiongxin (~quassel@113.116.224.79) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:09:56] *** Joins: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com)
[19:10:31] *** Quits: jr_web_d1 (~jr_web_de@ool-18bee068.dyn.optonline.net) (Quit: WeeChat 2.8)
[19:10:39] *** _subopt is now known as subopt
[19:10:47] *** Quits: el1 (~el@240e:390:6624:e7c0:1c0c:abb3:732d:d2ce) (Quit: WeeChat 3.3)
[19:11:21] *** Quits: Haxxa (~Haxxa@122-199-4-24.ip4.superloop.com) (Quit: Haxxa flies away.)
[19:12:01] *** Quits: CoolerY (~CoolerX@user/coolerx) (Ping timeout: 268 seconds)
[19:13:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[19:14:03] <bancroft> SnoopJ: I went down a rabbit hole, this could be a very stupid idea but what if I went and got jemalloc, and jeprof to measure python calling C, tracemalloc for python calling python to get a pie chart of how memory in my one process is allocated? Somehow associate the arena's to a library?
[19:14:09] <SnoopJ> bancroft, important note about RLIMIT_AS: it can cause a SIGSEGV if something tries to trigger automatic stack expansion. I don't entirely understand the details here but it could possibly matter for some extension libraries that make heavy use of the stack.
[19:14:09] <bancroft> has anyone done this before?
[19:14:22] *** Joins: wyclif (~wyclif@user/wyclif)
[19:15:00] <SnoopJ> bancroft, like I said, you're thinking in a direction I've been poking at somewhat recently, but I'm not entirely sure I understand what task you have in mind here. You want to see how much memory is used by the process, but break it down by library?
[19:15:07] *** Quits: tobybl (~tobybl@38.247.200.146.dyn.plus.net) (Remote host closed the connection)
[19:15:27] *** Quits: greedom (~greedom@2001:16b8:2ef2:d800:9ee8:a74a:a3e:a0ec) (Remote host closed the connection)
[19:17:44] *** Joins: NetPipe (~NetPipe@user/netpipe)
[19:17:48] *** Joins: p-i- (~Ohmu@mx-ll-223.206.71-4.dynamic.3bb.co.th)
[19:18:30] *** dcaro is now known as dcaro_away
[19:18:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[19:18:58] *** Quits: NetPipe (~NetPipe@user/netpipe) (Client Quit)
[19:19:40] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[19:19:55] *** Joins: wyclif (~wyclif@user/wyclif)
[19:20:38] <bancroft> SnoopJ: Yeah I guess, because the only other option I can see is to setup a prometheus servery and just see over the range of a month how memory has fluctuated and narrow it down to a day where I made a commit
[19:20:40] <SnoopJ> bancroft, if "yes," you can look at /proc/<pid>/smaps to get a pretty great accounting which might already be what you want. There's a little busywork to parse that but it was handy to me
[19:21:19] <SnoopJ> I'm not aware of any library that does that for you, but I didn't look super hard when I needed it (I wasn't really interested in memory, but I ended up in this territory while puzzling over core file sizes)
[19:21:49] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Client Quit)
[19:21:57] <SnoopJ> more specifically, I wanted to exclude virtual memory for large libraries from core dumps. Unfortunately, MADV_DONTDUMP doesn't do what I'd hoped :(
[19:22:04] * SnoopJ should probably ask #linux about that
[19:22:05] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[19:22:43] *** Quits: paul424 (~chatzilla@2a01:111f:e22:cc00:5b2e:bb46:df53:b01d) (Quit: ChatZilla 0.9.92-rdmsoft [XULRunner 35.0.1/20150122214805])
[19:22:54] *** Joins: Haxxa (~Haxxa@122-199-4-24.ip4.superloop.com)
[19:23:11] <bancroft> SnoopJ: I'll do that, and shouldn't it be /proc/<pid>/maps (Memory maps to executables and library files?)
[19:23:31] <bancroft> oh wait
[19:23:35] <bancroft> yeah I read that wrong
[19:23:43] <bancroft> going to #linux :)
[19:24:00] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[19:24:27] <SnoopJ> bancroft, both might be useful to your question, smaps has just some of the busywork for you
[19:24:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[19:25:15] *** Joins: matsaman (~matsaman@user/matsaman)
[19:25:25] *** Joins: wyclif (~wyclif@user/wyclif)
[19:25:48] *** Quits: Tas-sos (~Tas-sos@78-221-199.adsl.cyta.gr) (Ping timeout: 268 seconds)
[19:25:59] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Quit: Soupy Twist!)
[19:27:03] <BtbN> Oh lovely, llvm-12/aocc just crashes when building python with LTO enabled.
[19:27:16] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[19:29:43] *** Quits: Haxxa (~Haxxa@122-199-4-24.ip4.superloop.com) (Quit: Haxxa flies away.)
[19:30:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[19:30:30] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[19:30:57] *** Joins: wyclif (~wyclif@user/wyclif)
[19:31:04] *** Joins: djhankb (~djhankb@208.113.164.68)
[19:31:23] *** Quits: yac (~user@user/yac) (Quit: .)
[19:32:09] *** Joins: yac (~user@user/yac)
[19:32:28] *** Joins: qlixed (~qlixed@181.44.129.13)
[19:33:11] *** Joins: Haxxa (~Haxxa@122-199-4-24.ip4.superloop.com)
[19:35:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[19:36:01] *** Quits: rsx (~dummy@ppp-188-174-147-220.dynamic.mnet-online.de) (Quit: rsx)
[19:36:02] *** Quits: treefrob (~treefrob@p2e54293e.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:36:27] *** Joins: treefrob (~treefrob@p2e54293e.dip0.t-ipconnect.de)
[19:36:29] *** Joins: wyclif (~wyclif@user/wyclif)
[19:36:50] *** Joins: CoolerY (~CoolerX@user/coolerx)
[19:37:01] *** Joins: Laibsch (~leggewie@93.152.184.249)
[19:37:08] *** Joins: y1n (~y1n@91.141.35.25.wireless.dyn.drei.com)
[19:37:23] *** Quits: CoolerY (~CoolerX@user/coolerx) (Client Quit)
[19:37:47] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[19:38:24] *** Joins: djapo (~archangel@user/djapo)
[19:38:26] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[19:38:34] *** Quits: Haxxa (~Haxxa@122-199-4-24.ip4.superloop.com) (Quit: Haxxa flies away.)
[19:39:16] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[19:41:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[19:41:56] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[19:41:59] *** Joins: wyclif (~wyclif@user/wyclif)
[19:42:10] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[19:42:25] *** Quits: yac (~user@user/yac) (Quit: .)
[19:43:09] *** Joins: yac (~user@user/yac)
[19:43:36] *** Parts: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it) ()
[19:45:22] *** Joins: c4017w (~c4017@209.52.68.8)
[19:45:27] *** Quits: dambuster (~dambuster@185.193.170.225) (Quit: Leaving)
[19:45:36] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[19:45:55] *** Joins: ttys000 (~ttys000@user/ttys000)
[19:46:10] *** Parts: hemmond (~hemmond@mail.artisys.cz) ()
[19:46:15] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[19:46:29] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[19:46:38] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[19:47:01] *** Quits: fluffyballoon (~user@131.93.208.196) (Quit: ERC (IRC client for Emacs 26.1))
[19:47:30] *** Joins: wyclif (~wyclif@user/wyclif)
[19:47:33] *** Joins: fluffyballoon (~user@131.93.208.196)
[19:47:58] *** Joins: fikran (~fikran@user/fikran)
[19:49:33] *** Quits: orbatos (~orbatos@user/orbatos) (Quit: Leaving)
[19:49:39] *** Joins: diamondbond (~diamondbo@175.157.97.101)
[19:50:23] *** Joins: imp (~imp@192-141-191-231.alternativaip.net.br)
[19:51:05] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[19:51:50] *** Joins: georgios (~georgios@user/georgios)
[19:52:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[19:53:02] *** Joins: wyclif (~wyclif@user/wyclif)
[19:53:30] *** Joins: Haxxa (~Haxxa@122-199-4-24.ip4.superloop.com)
[19:54:44] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[19:55:55] *** Quits: _zipper (zipper@gateway/vpn/protonvpn/zipper/x-90676202) (Quit: Quit)
[19:56:25] *** Quits: Haxxa (~Haxxa@122-199-4-24.ip4.superloop.com) (Remote host closed the connection)
[19:56:44] *** Joins: philipp64|work (~philipp64@mail.redfish-solutions.com)
[19:57:38] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[19:58:00] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[19:58:03] *** Joins: Haxxa (~Haxxa@122-199-4-24.ip4.superloop.com)
[19:58:08] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[19:58:32] *** Joins: wyclif (~wyclif@user/wyclif)
[19:58:54] *** Joins: brabrax (~brabrax@user/brabrax)
[19:59:56] *** Quits: grandrew (~grandrew@2601:642:c301:c600:f22f:74ff:feac:90a3) (Ping timeout: 265 seconds)
[20:01:01] *** Quits: Bryce (~bryce@ool-457dd6ac.dyn.optonline.net) (Remote host closed the connection)
[20:01:27] *** Joins: Guest73 (~Guest73@pool-100-7-38-116.rcmdva.fios.verizon.net)
[20:02:02] <Guest73> Anyone here use python with powerbi? I am wondering if it is possible to export a PDF of the powerbi dataset & charts using python?
[20:02:09] *** Quits: metaace (~metaace@user/metaace) (Remote host closed the connection)
[20:02:09] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[20:02:25] <Guest73> But it has to be within the embedded powerbi chart in powerapps
[20:02:32] *** Joins: metaace (~metaace@user/metaace)
[20:02:40] *** Quits: p-i- (~Ohmu@mx-ll-223.206.71-4.dynamic.3bb.co.th) (Remote host closed the connection)
[20:02:45] *** Joins: arinov (~arinov@31.142.50.8)
[20:03:00] <Guest73> I am thinking about having a button they could click in the powerbi report to execute the python
[20:03:12] *** Quits: magla (~gelignite@55d44e8b.access.ecotel.net) (Quit: Stay safe!)
[20:03:16] *** Joins: p-i- (~Ohmu@138.199.31.193)
[20:03:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[20:03:52] *** Joins: spithash (~spithash@user/spithash)
[20:03:57] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[20:04:05] *** Joins: wyclif (~wyclif@user/wyclif)
[20:04:38] *** Quits: orangeboxcutter (~orange@user/orangeboxcutter) (Remote host closed the connection)
[20:05:06] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[20:06:02] *** Quits: yac (~user@user/yac) (Quit: .)
[20:06:16] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[20:06:38] *** Joins: yac (~user@user/yac)
[20:08:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[20:09:33] *** Quits: Haxxa (~Haxxa@122-199-4-24.ip4.superloop.com) (Quit: Haxxa flies away.)
[20:09:36] *** Joins: wyclif (~wyclif@user/wyclif)
[20:10:40] <w0rp> Does anyone have a guide for how you're supposed to type subclasses of generics? I have weird issues with a complex types where it's like the subclass doesn't use the right type parameters. It would be nice to read a guide on this.
[20:11:00] <w0rp> Do you need to write `Generic[T]` as the superclass of all classes all the way down? Does adding that at any point break things?
[20:12:01] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[20:12:04] <w0rp> Can a subclass of a Generic not be Generic?
[20:12:41] *** Quits: yac (~user@user/yac) (Quit: .)
[20:12:50] <w0rp> As in `class Foo(Bar[int])`, etc.
[20:13:30] *** Joins: yac (~user@user/yac)
[20:14:07] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[20:15:07] *** Joins: wyclif (~wyclif@user/wyclif)
[20:15:28] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[20:15:49] *** Joins: armin (~armin@unix.porn)
[20:16:43] *** Joins: brabrax (~brabrax@user/brabrax)
[20:18:43] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-25.dhcp.inet.fi) (Quit: Leaving)
[20:20:03] *** Joins: Syroth (~Syroth@pool-96-244-212-50.bltmmd.fios.verizon.net)
[20:20:04] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[20:20:39] *** Joins: wyclif (~wyclif@user/wyclif)
[20:21:43] <ezzieyguywuf> if I have some class Foo that only contains two member variable, bar = 10, baz = "42", is there a way to do something like `bar, baz = Foo()`?
[20:22:13] *** Quits: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com) (Read error: Connection reset by peer)
[20:22:32] *** Joins: mh3f_ (~mhowle@cpe-98-25-217-234.sc.res.rr.com)
[20:22:54] <mdk> ezzieyguywuf: can you add a method or a property returning those two values, to your Foo class?
[20:23:21] *** Joins: jr_web_d1 (~jr_web_de@ool-18bee068.dyn.optonline.net)
[20:23:25] <mdk> like `@property as_tuple(self): return self.bar, self.baz` and then `bar, baz = Foo().as_tuple`?
[20:23:38] <jr_web_d1> mgedmin: hey sorry i got disconnect earlier.. where can i paste my code i want to show you
[20:24:02] <ezzieyguywuf> mdk: well, I was using @dataclass
[20:24:13] <ezzieyguywuf> ah, it has astuple() built-in I think
[20:24:56] *** Joins: Macuser (~Macuser@216.30.159.201)
[20:24:58] <jinsun_> <w0rp> "Can a subclass of a Generic..." <- yes that is possible
[20:25:17] *** Joins: Klinda (~superleag@user/klinda)
[20:25:25] <mdk> ezzieyguywuf: yes: https://docs.python.org/3/library/dataclasses.html#dataclasses.astuple
[20:25:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 268 seconds)
[20:26:04] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[20:26:10] *** Joins: wyclif (~wyclif@user/wyclif)
[20:26:56] <ezzieyguywuf> yup I think that'll work
[20:27:00] *** Joins: Akuli (~Akuli@82-203-166-33.bb.dnainternet.fi)
[20:27:06] *** Joins: orangeboxcutter (~orange@user/orangeboxcutter)
[20:27:16] <ezzieyguywuf> mypy seems to think that my dataclass doesn't have that function, I wonder if it just isn't up-to-date with dataclass or something
[20:28:40] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[20:28:56] <jinsun> it is  not a method
[20:30:46] *** Joins: mike18 (~geri@217-149-167-230.nat.highway.telekom.at)
[20:30:48] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[20:30:52] *** Quits: e2m4n (~ezman@user/e2m4n) (Ping timeout: 265 seconds)
[20:30:56] <jinsun> I mean if you were trying to do your_dataclass.astuple() then mypy is right about complaining
[20:30:59] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[20:31:02] <mike18> hi how to pass function args to timeit.Timer .timeit?
[20:31:13] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:31:21] *** Joins: djhankb (~djhankb@208.113.164.68)
[20:31:42] *** Joins: wyclif (~wyclif@user/wyclif)
[20:31:49] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:6d3f:c580:8aec:c029)
[20:33:26] *** Joins: Haxxa (~Haxxa@122.199.45.25)
[20:35:01] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[20:35:48] *** Joins: brabrax (~brabrax@user/brabrax)
[20:37:20] <jr_web_d1> Could someone help me with this: https://bpa.st/XVDQ
[20:37:22] <ezzieyguywuf> ahhh
[20:37:27] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Quit: Leaving)
[20:37:42] *** Joins: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[20:39:53] *** Quits: mike18 (~geri@217-149-167-230.nat.highway.telekom.at) (Remote host closed the connection)
[20:40:35] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 260 seconds)
[20:41:22] *** Joins: emf (~emf@2620:10d:c090:400::5:57e9)
[20:41:43] <ezzieyguywuf> on line 47, is nesting a function definition like this to return considered 'bad' or 'unpythonic'? http://dpaste.com/67YFV4779
[20:41:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[20:41:59] <ezzieyguywuf> specifically I'm wondering about the fact that the inner function relies on a value in the namespace of the outer function
[20:42:07] <bjs> jr_web_d1: why no two loops?
[20:42:44] *** Joins: wyclif (~wyclif@user/wyclif)
[20:42:45] <bjs> ezzieyguywuf: no,  infact they're quite common when writing custom decorators and callbacks
[20:42:57] <jr_web_d1> simply put bjs in my real application one for loop is gonna iterate through a thousand rows.. if i do twice it doubles.. id have to do 2000 row operations.. lets just put it that way
[20:43:01] <bjs> so long as it's "simple" it's fine
[20:43:13] <ezzieyguywuf> bjs: awesome, thanks for the help.
[20:43:21] <bjs> jr_web_d1: so the two lists here represent columns?
[20:43:26] *** Quits: emerent (~quassel@p200300cd57485537ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[20:43:27] <jr_web_d1> rows
[20:43:33] <jr_web_d1> but its in an api
[20:43:35] *** Joins: nomic (~nomic@185.217.117.88)
[20:43:41] <ezzieyguywuf> I wanted to use a lambda so I didn't have to make a silly name for the function, but I couldn't see a clean way to do that
[20:43:44] <bjs> jr_web_d1: but each list only has some of the rows?
[20:43:56] <pycurious> for logging module - how do i list all handlers in a log object so that i can remove those handlers and get a new set of handlers attached?
[20:44:04] <jr_web_d1> well.. at this point here in my code.. its an array of objects
[20:44:09] *** Quits: diamondbond (~diamondbo@175.157.97.101) (Quit: Leaving)
[20:44:17] <bjs> jr_web_d1: `for first in new_york_people: do_something` then `for second in new_jersey_people: do_something_else`  is fine
[20:44:29] *** Joins: emerent (~quassel@p200300cd574855b6ba27ebfffed28a59.dip0.t-ipconnect.de)
[20:44:29] <bjs> jr_web_d1: but your code here has *two* lists of things
[20:44:41] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 245 seconds)
[20:44:58] <jr_web_d1> so bjs let me explain better
[20:45:45] <djapo> im running into a race condition in my python for loops, where i is the value of a previous call to the method
[20:45:58] <jr_web_d1> i have two arrays of objs... i want to concat them together and do a for loop.. but i just need to know the difference between the first and the second.. if i can do an equilivant of combining the two into one it would solve my issue
[20:46:15] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[20:46:20] <jr_web_d1> but still have the ability to distinguish between the two
[20:46:25] <MacGyver> jr_web_d1: How is that any different than running two loops in succession?
[20:46:53] *** Joins: kurfen (~kurfen@37.120.204.67)
[20:47:26] <grym> jr_web_d1: how about `for nyperson, njperson in zip(new_york_people, new_jersey_people)`
[20:47:30] *** Joins: prs (~Priyanshu@2409:4063:6d0c:b492::7208:8108)
[20:47:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[20:48:04] <bjs> jr_web_d1: yeah I don't get how this would be different than running the two loops in succession
[20:48:14] <bjs> grym: I dislike this approach because it assumes there are the same number of people in each
[20:48:16] <bjs> silently
[20:48:16] *** Joins: wyclif (~wyclif@user/wyclif)
[20:48:34] <grym> bjs: itertools.zip_longest() then, or the new nice thing in 3.10 (?)
[20:48:44] <jr_web_d1> welllllll... its actually about code duplication i have going on here.. so right now i am doing two for loops but its repetitive code... i have like 25 lines of code repeating.. with a difference of 4 to 5 code between the two... if i can someone create a function and simply inject 5 lines of code into the function at specific location inside of it.. then yeah that would work.. other solution is
[20:48:47] <jr_web_d1> just to combine them into one for loop.. hope i make sense
[20:49:30] <bjs> jr_web_d1: I mean it could be `for (state, people) in [("NY", new_york_people), ("NJ", new_jersey_people)]: for person in people: ...` if you're worried about code duplication
[20:49:35] <grym> zip(..., strict=True) ?
[20:49:37] <pycurious> python logging hashandlers() - how do i get a list of those handlers?
[20:49:40] <bjs> (or make the body a function)
[20:50:08] <jr_web_d1> hmm let me see if your code works there
[20:51:53] <jr_web_d1> right the body a function.. i was thinking though like def my_function(array_of_objs, number): if number == 0: add 4 lines of code here but seems dumb idk
[20:52:47] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[20:52:55] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[20:53:26] *** Quits: Laibsch (~leggewie@93.152.184.249) (Ping timeout: 265 seconds)
[20:53:47] <jr_web_d1> grym: when i tried using zip() my pycharm complained about not being able to access the properlty... so .. for obj in zip(array_of_objs1, array_of_objs2): print(obj.name)  pychame complains it doesnt recognize .name or something like that
[20:53:48] *** Joins: wyclif (~wyclif@user/wyclif)
[20:54:47] <MacGyver> jr_web_d1: Because at that point obj is a tuple.
[20:54:51] <grym> ^
[20:55:03] <jr_web_d1> ohh
[20:55:08] <grym> note that i unpacked it
[20:55:28] <jr_web_d1> you mean you unpacked it with strict=True?
[20:55:36] <grym> no
[20:55:40] *** Joins: Nspace (~Nspace@user/nspace)
[20:55:58] <MacGyver> Note the difference between "for obj in xlist, ylist:" and "for x, y in xlist, ylist:"
[20:55:58] <grym> strict=True yells at you if the lists are of unequal length; as bjs pointed out, zip silently terminates iteration on the shortest input
[20:56:13] <grym> note also that zip goes through two things in index lockstep
[20:56:13] <MacGyver> Uh, add a zip there.
[20:56:13] *** Quits: trashbird (~trashbird@user/trashbird) (Quit: what)
[20:56:25] <MacGyver> Note the difference between "for obj in zip(xlist, ylist):" and "for x, y in zip(xlist, ylist):"
[20:56:44] <jr_web_d1> so print(obj[0].name) and print(obj[1].name) would have worked
[20:57:03] <grym> yes
[20:57:04] <MacGyver> Yes, but unpacking in the loop statement is usually more understandable.
[20:57:09] <grym> ^ that, too
[20:57:13] <jr_web_d1> ok ok tahts cool hold on
[20:57:26] <jr_web_d1> trying to understand your unpacking method
[20:57:33] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[20:57:40] *** Joins: trashbird (~trashbird@user/trashbird)
[20:58:29] <jr_web_d1> ah so for x, y .. your unpacking it tehre
[20:58:35] <MacGyver> It's fairly fundamental to python's operation that pretty much anywhere where there's a tuple being assigned to something, you can instead assign the elements of that tuple to individual variables.
[20:59:22] <jr_web_d1> ah so then print(x.name) print (y.name) same as print(obj[0].name) print(obj[1].name)
[20:59:26] <grym> yes
[20:59:29] <jr_web_d1> niiiceee
[21:00:05] <MacGyver> Still, considering your problem statement, I probably wouldn't use zip here.
[21:00:24] <MacGyver> You have common operations on unrelated data, not related data.
[21:00:48] <jr_web_d1> is that a question?
[21:01:09] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[21:01:26] <MacGyver> No, it's a deduction from the information provided.
[21:01:33] <jr_web_d1> so someone gave me an example earlier.. was trying to ballpark there answer.. that code is not like my real code
[21:01:50] *** Joins: mike18_ (~geri@217-149-167-230.nat.highway.telekom.at)
[21:01:52] <mike18_> hi
[21:01:53] <mike18_> hi how to pass function args to timeit.Timer .timeit?
[21:01:55] <jr_web_d1> its me trying to figure out what they were trying to showcase to me
[21:02:13] <mike18_> also does timerit do something with @responses.activate ?
[21:02:18] <mike18_> when i do benchmarking?
[21:02:29] <MacGyver> zip isn't going to help you avoid the code duplication because you're stepping through the lists in lockstep, now processing two elements in a single loop. Unless you rewrite everything you're doing on each line to do the exact same thing to both elements of a tuple, you didn't win anything.
[21:02:31] <jr_web_d1> so.. let me make another examle i guess
[21:02:51] <grym> mike18_: timeit.Timer('for i in range(10): oct(i)', 'gc.enable()').timeit(number=1000)
[21:02:52] *** Quits: aknot (~aknot@2603:900a:1503:17bb:c23a:bfae:7517:5554) (Ping timeout: 252 seconds)
[21:03:26] <mike18_> i used: duration = timeit.Timer(lambda: self.run_test(...some args...)).timeit(number = num_runs)
[21:03:32] *** Joins: control (~v1@user/control)
[21:03:44] <grym> ok, well, that's how you pass args to timeit alright
[21:03:49] <mike18_> but when i use num_runs = 2 it has issues with: @responses.activate
[21:03:59] <mike18_>  Connection refused by Responses - the call doesn't match any registered mock.
[21:04:02] <mike18_> which i dont understand
[21:04:22] <mike18_> num_runs = 1 ... is fine on the other hand
[21:04:24] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[21:04:27] <mike18_> any idea what that could be?
[21:04:28] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Quit: WeeChat 3.0)
[21:04:31] <control> hello, would it be faster to read large file if there are no new lines to look up for the string instead of looking up in every new line?
[21:04:59] <control> say if the file size is 800mb+ with new lines replaced with spaces
[21:05:31] <mike18_> grym: does that make any sense?
[21:05:34] <grym> mike18_: not reall
[21:05:35] <grym> y
[21:05:43] <mike18_> not at all?
[21:05:47] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[21:06:28] <phy1729> control: I believe most fast greps first find the target string and then seek around it to find the enclosing newlines
[21:06:58] *** Quits: Haxxa (~Haxxa@122.199.45.25) (Quit: Haxxa flies away.)
[21:07:03] <grym> grep is very carefully written :)
[21:07:42] *** Joins: dez (uid92154@user/dez)
[21:08:19] *** Quits: p-i- (~Ohmu@138.199.31.193) (Read error: Connection reset by peer)
[21:08:33] *** Joins: p-i- (~Ohmu@mx-ll-223.206.71-4.dynamic.3bb.co.th)
[21:08:36] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:08:37] <MacGyver> I wonder whether it makes much of a difference tbh.
[21:08:54] *** Joins: eyepeetee (~aa@user/eyepeetee)
[21:08:55] <grym> stripping newlines? i would guess probably not
[21:09:04] <MacGyver> Does line-buffered in python really still read the file from disk line-by-line?
[21:09:05] <grym> optimzing grep? absolutely
[21:09:11] <MacGyver> Oh sure.
[21:09:28] <MacGyver> But I'd expect the underlying OS to do a bit of a chunkier read and utilize in-memory disk cache.
[21:09:59] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[21:10:23] *** Quits: Mathisen (mathisen@about/windows/staff/mathisen) (Quit: ZNC 1.8.2 - https://znc.in)
[21:10:41] *** Joins: Mathisen (mathisen@about/windows/staff/mathisen)
[21:10:54] *** Joins: fannagoganna (uid110488@id-110488.tinside.irccloud.com)
[21:11:04] <mike18_> @grym when it does the second run - Available matches: 0 for the mocked endpoint.... using responses.active
[21:11:53] *** Quits: yac (~user@user/yac) (Remote host closed the connection)
[21:11:53] *** Quits: trashbird (~trashbird@user/trashbird) (Read error: Connection reset by peer)
[21:12:13] <eyepeetee> hi, i guess this is moreso an algorithm type of question rather than a python question, but i'd be doing it in python, so... -- is it possible to, given multiple related datasets out of context (let's say 8 of them, riddled with pks and fks of various depths), to algorithmically determine the intended or most likely schema of that group of datasets and how they are supposed to relate?
[21:12:18] *** Joins: trashbird (~trashbird@user/trashbird)
[21:12:38] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[21:12:40] *** Quits: trashbird (~trashbird@user/trashbird) (Client Quit)
[21:12:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[21:13:10] <control> i found it faster
[21:13:32] <mike18_> @grym found the issue - very weired...
[21:13:34] <eyepeetee> a related question...is it possible to, in a similar fashion, write something to attempt to use those datasets to create crosswalks (1 to 1 and 1 to many) between datasets that do not directly share keys but are related through other datasets in the group?
[21:13:39] *** Joins: wyclif (~wyclif@user/wyclif)
[21:14:10] <eyepeetee> if this is a known topic, i'd be happy to google and read about it instead but i am not sure what to search
[21:14:39] *** Joins: magla (~gelignite@55d44e8b.access.ecotel.net)
[21:15:16] *** Joins: p-i-_ (~Ohmu@mx-ll-223.206.71-4.dynamic.3bb.co.th)
[21:15:29] *** Quits: prs (~Priyanshu@2409:4063:6d0c:b492::7208:8108) (Remote host closed the connection)
[21:15:58] <energizer> eyepeetee: there is no available tool for that
[21:16:30] <sartan> sounds like p np
[21:17:07] <eyepeetee> indeed it does sartan, it would have to be predictive rather than deterministic maybe
[21:17:17] *** Joins: lk (sid504574@2a03:5180:f:3::7:b2fe)
[21:17:24] <lk>         for i in range(1,31):
[21:17:24] <lk> 1:46 PM             significant_degrees.append(sum(x==i for x in count)) gives me int64 not irritable error
[21:17:33] <lk> what do I do
[21:17:46] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[21:17:51] <eyepeetee> count is probably an integer
[21:18:03] <lk> its a list
[21:18:04] <eyepeetee> so you should do range(count) instead
[21:18:05] <eyepeetee> oh
[21:18:13] <energizer> lk no it isnt
[21:18:18] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[21:18:36] <MacGyver> Yeah, int64 tends to be very chill.
[21:18:41] <MacGyver> Not irritable at all.
[21:18:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[21:18:46] <eyepeetee> ^^ :D
[21:18:46] <lk> print(count) returns a list
[21:19:03] *** Quits: p-i- (~Ohmu@mx-ll-223.206.71-4.dynamic.3bb.co.th) (Ping timeout: 265 seconds)
[21:19:06] <bjs> lk: can you share the actual code and error then?  It's odd that you'd get that error if it was a list
[21:19:11] *** Joins: wyclif (~wyclif@user/wyclif)
[21:19:22] <lk> oh wait
[21:19:23] <eyepeetee> lk: nothing else potentially problematic is being iterated there other than count
[21:19:25] <lk> hold on
[21:19:42] <CrtxReavr> Anyone else "comment out" functions by prepending their name with an underscore?
[21:19:49] <lk> count = [j for i in count for j in i] is generating the error
[21:19:50] <MacGyver> CrtxReavr: ... no.
[21:20:01] <Togra> that's clever though
[21:20:09] <eyepeetee> lk: i is an integer and therefore cannot be iterated
[21:20:11] <energizer> CrtxReavr: _foo what i use to indicate nonpublic
[21:20:12] <mike18_> hi guys - is there a way to disable loogging output for a python test?
[21:20:12] <Togra> a little funky but sneaky, you don't have to # the rest of the block that way
[21:20:15] <lk> oh
[21:20:21] *** Joins: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it)
[21:20:29] <MacGyver> Except prepending names with underscores has a conventional meaning within Python practices and you might very well clash with an existing function.
[21:20:29] <lk> whats an alternative then?
[21:20:29] <eyepeetee> that or count was an integer before being used there
[21:20:33] <eyepeetee> @ lk
[21:20:42] <lk> basically im trying to turn a list of lists into a list
[21:20:45] <bjs> lk: what are you trying to do with that line? and what does count contain?
[21:20:46] *** Joins: yac (~user@user/yac)
[21:20:47] <eyepeetee> it's not enough of the code to answer for sure
[21:20:49] <eyepeetee> lk
[21:20:49] <CrtxReavr> Well. . . this is a development step, as opposed to something I'd commit.
[21:20:53] <lk> I want to merge a list of lists
[21:20:54] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:21:01] <bjs> lk: is count the list of lists?
[21:21:03] <summonner> zip?
[21:21:08] <lk> oh right
[21:21:11] <lk> I forgot zip
[21:21:15] <bjs> why zip wait
[21:21:16] <lk> and yes count is the list of lists
[21:21:24] <bjs> lk: then why did the line you just give error?
[21:21:31] <CrtxReavr> Sometimes I have a nicely working function, but then $feature_creep, so I copy the function, add the _ to one, then hack on the other.
[21:21:51] <lk> count is both
[21:21:56] <lk> I am writing over the variable
[21:22:04] <MacGyver> bjs: I think because they're reusing j and i.
[21:22:07] <bjs> lk: both what
[21:22:22] <lk> count is a list of lists
[21:22:25] <MacGyver> But I'm not certain, I'm having trouble mentally parsing this.
[21:22:27] <lk> how do I merge them
[21:22:33] <energizer> also did it really say int64?
[21:22:40] <lk> yes
[21:22:40] <bjs> lk: with the line you gave,  but the error you say and what you say count is don't match
[21:22:45] <lk> ok
[21:23:01] <bjs> so it implies you either are giving us the wrong line, the wrong error or got what `count` is wrong
[21:23:03] <energizer> lk are you using numpy?
[21:23:17] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[21:23:24] <eyepeetee> [13:49] <lk> count = [j for i in count for j in i] is generating the error -------- lk if count here is a 2d list you will end up with a 1d list here
[21:23:28] <mike18_> is there an enable command for logging.disable(logging.CRITICAL) ?
[21:23:47] <lk> I am using numpy, but these are lists
[21:24:01] *** Joins: Haxxa (~Haxxa@122.199.45.25)
[21:24:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[21:24:22] <eyepeetee> lk it would be a lot easier to help you with all of the involved code and an explanation of what you're trying to do
[21:24:30] <bjs> mike18_: https://docs.python.org/3/library/logging.html#logging.disable  says to use NOTSET
[21:24:31] <lk> k well cant do that
[21:24:32] <bjs> if that's what you mean
[21:24:34] <lk> thanks for the help
[21:24:36] <lk> :P
[21:24:42] <eyepeetee> alrightey
[21:24:42] *** Joins: wyclif (~wyclif@user/wyclif)
[21:24:45] <bjs> lk: if count is a list of lists then your line there works fine
[21:24:48] <mike18_> bjs: and how to re-enable to info adfter that?
[21:25:08] <bjs> mike18_: i'm a little confused, after what?
[21:25:09] <mike18_> bjs: oh:  If logging.disable(logging.NOTSET) is called, it effectively removes this overriding level, so that logging output again depends on the effective levels of individual loggers.
[21:25:10] *** Quits: control (~v1@user/control) (Quit: leaving)
[21:25:15] <bjs> yes
[21:25:22] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[21:25:27] <mike18_> i run benchmark and dont want to measure logging printfs
[21:25:38] <mike18_> so i need to enable logging after benchmark again
[21:25:42] <mike18_> will use notset
[21:27:25] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[21:27:31] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[21:28:26] <eyepeetee> mike18_: calling noset will make logging depend on the logger levels, so you may want to use noset and then call setLevel with INFO afterwards to be sure
[21:28:32] <mike18_> ok cool
[21:28:34] <jr_web_d1> would this be the right way to deal with wanting to inject code into a body function? https://bpa.st/LEWA
[21:29:07] <eyepeetee> and mike18_ you can use getEffectiveLevel to check it: https://docs.python.org/3/library/logging.html#logging.Logger.getEffectiveLevel
[21:29:22] <mike18_> should it be the right thing?
[21:29:25] <mike18_> from before?
[21:29:32] *** Joins: trashbird (~trashbird@user/trashbird)
[21:29:41] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[21:29:41] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[21:29:41] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 265 seconds)
[21:29:45] *** lukedashjr is now known as luke-jr
[21:29:53] *** Quits: blackout69 (~blackout6@net-37-179-183-91.cust.vodafonedsl.it) (Quit: Leaving.)
[21:30:12] *** Joins: wyclif (~wyclif@user/wyclif)
[21:30:35] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[21:30:57] *** Joins: me-sudoer-dentne (~me-sudoer@2405:204:53ab:d5ed:583f:8b00:175b:9f05)
[21:31:03] *** Joins: djhankb (~djhankb@208.113.164.68)
[21:31:43] *** Quits: me-sudoer-dentne (~me-sudoer@2405:204:53ab:d5ed:583f:8b00:175b:9f05) (Client Quit)
[21:32:30] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Ping timeout: 260 seconds)
[21:33:01] *** Joins: abyss (~robbins@user/robbins)
[21:35:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[21:35:44] *** Joins: wyclif (~wyclif@user/wyclif)
[21:35:54] *** Joins: whatsupdoc (~whatsupdo@148.64.20.69)
[21:39:01] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Remote host closed the connection)
[21:39:30] *** Joins: zeden (~zeden@user/zeden)
[21:39:44] <jr_web_d1> Is this method im using valid.. it works but i mean is it a bad pattern to follow https://bpa.st/LEWA
[21:39:49] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-a8be-5e8c-f3b4-9539.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[21:40:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[21:41:15] *** Joins: wyclif (~wyclif@user/wyclif)
[21:41:27] *** Quits: ravan (~ravan@user/ravan) (Quit: Leaving)
[21:41:30] <SnoopJ> jr_web_d1, it's slightly smelly to have state inside/outside of a loop, but sometimes it's a useful way to do it, too. Often it's a good thing to hide away in a function
[21:42:02] <Wooble> jr_web_d1: too hypothetical of a question, IMO. If these blocks are totally unrelated, having a god function that takes a variable to decide what it does is probably worse than writing 2 functions
[21:43:23] *** Quits: zeden (~zeden@user/zeden) (Client Quit)
[21:43:36] <jr_web_d1> Wooble: you mean writing two for loops?
[21:44:04] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[21:44:11] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 265 seconds)
[21:44:52] *** Quits: Haxxa (~Haxxa@122.199.45.25) (Quit: Haxxa flies away.)
[21:45:10] <jr_web_d1> thanks SnoopJ
[21:45:23] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[21:45:59] <SnoopJ> jr_web_d1, I use state outside of a loop not-infrequently when I'm writing generator functions, for example, and then call `results = list(gen_func(args))` in the caller
[21:46:07] <SnoopJ> or `for result in gen_func(args):` as appropriate
[21:46:48] <Wooble> jr_web_d1: sure, having 2 functions that both contain a for loop when everything else they do is perfectly normal.
[21:47:01] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 268 seconds)
[21:47:01] <Wooble> err... everything else they do *is different*
[21:47:19] *** Joins: fikran (~fikran@user/fikran)
[21:47:21] *** Joins: Haxxa (~Haxxa@122.199.45.25)
[21:48:13] *** Joins: sniperwolf (~sniperwol@91.230.98.1)
[21:48:19] <jr_web_d1> SnoopJ: got ya thanks man
[21:48:52] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Ping timeout: 268 seconds)
[21:49:15] <jr_web_d1> Wooble: thanks!
[21:49:15] *** Joins: djapo (~archangel@user/djapo)
[21:49:34] <sniperwolf> hello, why do i get errror when trying to read json file into dataframe? data = pd.read_json("file.json") gives ValueError: Expected object or value. Reading object with json.load(file) works with no problem so i dont think json file is malformed
[21:49:42] *** Joins: zeden (~zeden@user/zeden)
[21:50:03] <Vornicus> does read_json expect a filename?
[21:50:08] <SnoopJ> sniperwolf, can you show us the data and/or the code you're running? Or at least the complete error report?
[21:50:18] <SnoopJ> Vornicus, it accepts either
[21:50:20] *** Quits: jr_web_d1 (~jr_web_de@ool-18bee068.dyn.optonline.net) (Quit: WeeChat 2.8)
[21:50:32] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:6d3f:c580:8aec:c029) (Quit: Client closed)
[21:50:33] <Vornicus> could it want a file object, or an actual json string instead?
[21:50:41] <SnoopJ> it accepts either
[21:50:50] *** Joins: ericzolf (~ericzolf@2a02:8070:a298:29f0::31a)
[21:51:05] <sniperwolf> stacktrace https://bpa.st/UBLQ
[21:51:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[21:51:39] <Wooble> sniperwolf: I think it wants a file://localhost/ url for a local file, rather than just a filename, but that's my reading of the docs.
[21:52:12] <Wooble> (I don't know what "any valid string path" means, though...)
[21:52:18] *** Joins: wyclif (~wyclif@user/wyclif)
[21:52:26] <Vornicus> "For file URLs, a host is expected. A local file could be: file://localhost/path/to/table.json." - from the documentation https://pandas.pydata.org/docs/reference/api/pandas.io.json.read_json.html
[21:52:29] *** Quits: imakestuff (~imakestuf@197.156.86.223) (Remote host closed the connection)
[21:52:30] <Wooble> what if I have a filename that's also valid JSON? :)
[21:52:31] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:52:41] <SnoopJ> then it's an edge case :P
[21:52:48] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:52:58] <Vornicus> then you have made a lot of systems administrators extremely angry
[21:53:05] <SnoopJ> it accepts `pd.read_json("data.json")` just fine
[21:53:15] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[21:53:25] <SnoopJ> sniperwolf, the problem is probably the underlying data, can you share that and/or the code? Not much of use in the full report, unfortunately.
[21:53:42] <SnoopJ> Except that it's seen something it didn't expect in the data, which your original report communicated clearly enough.
[21:53:47] *** Quits: arinov (~arinov@31.142.50.8) (Ping timeout: 240 seconds)
[21:54:26] <sniperwolf> it works with localhost URL. Weird af.
[21:54:34] <SnoopJ> whoa
[21:55:05] <Wooble> different pandas versions, maybe? not that they'd change the behavior of an API more than 5 times a year. :P
[21:55:08] <SnoopJ> sniperwolf, what version of pandas is this? that's bizarre
[21:56:08] <SnoopJ> sniperwolf, also, are you *sure* it's "file.json" and not b"file.json"? The latter produces this error
[21:56:11] <sniperwolf> nvm, it just file did not existed
[21:56:37] <sniperwolf> it did not existed in directory where i  opened interpeter
[21:56:52] <Vornicus> oh, cwd problems
[21:57:03] <SnoopJ> strange, I get a different error for a non-existent file
[21:57:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[21:57:23] <Vornicus> that is a weird error for that kind of problem though
[21:57:50] *** Joins: wyclif (~wyclif@user/wyclif)
[21:59:11] *** Quits: whatsupdoc (~whatsupdo@148.64.20.69) (Quit: Client closed)
[21:59:28] <SnoopJ> what the hell, `pd.read_json("does_not_exist.json")` and `pd.read_json("not_exist.json")` produce different errors
[21:59:43] <Wooble> nice.
[21:59:55] <Vornicus> what the hell
[22:00:01] <SnoopJ> the former produces the error seen here, the latter produces: ValueError: Unexpected character found when decoding 'null'
[22:00:23] *** Joins: kharloss (~kharloss@82.77.183.170)
[22:00:56] *** Quits: ericzolf (~ericzolf@2a02:8070:a298:29f0::31a) (Ping timeout: 245 seconds)
[22:00:59] <Vornicus> pandas: the data analysis library written by actual pandas
[22:01:49] <grym> let's not insult bears here
[22:02:06] <SnoopJ> https://bpa.st/SHFA
[22:02:21] <kharloss> hi.  can you tell me please what's wrong with my code ? https://hastebin.com/owuqevific.rust      / script must check if file name contains char "_" in file name and move renamed file in "/Failed" subfolder
[22:02:21] <infobob> https://bpaste.net/YZIQ (repasted for kharloss)
[22:03:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[22:03:08] <NoImNotNineVolt> For many decades, the precise taxonomic classification of the giant panda was under debate because it shares characteristics with both bears and raccoons.[19] However, molecular studies indicate the giant panda is a true bear, part of the family Ursidae.For many decades, the precise taxonomic classification of the giant panda was under debate because it shares characteristics with both bears and
[22:03:11] *** Quits: noord (~noord@user/noord) (Remote host closed the connection)
[22:03:14] <NoImNotNineVolt> raccoons.[19] However, molecular studies indicate the giant panda is a true bear, part of the family Ursidae.
[22:03:21] *** Joins: wyclif (~wyclif@user/wyclif)
[22:03:35] <grym> they are indeed ursids
[22:03:39] <NoImNotNineVolt> TIL.
[22:03:47] <NoImNotNineVolt> i was going to correct you, but then it turned out i was ignorant.
[22:03:50] <grym> (FoR nOw!)
[22:03:59] <grym> oh don't worry we can always change our minds and taxa later
[22:04:39] <KirkMcDonald> kharloss: Is there some way in which the code is failing?
[22:05:32] <kharloss> KirkMcDonald; yes, the code generate a file name   Failed in current folder
[22:05:52] <SnoopJ> oh okay, the different error is because it's taking two paths in the ujson parser
[22:05:54] <AhmedAmerican> I need some help, i couldn't think about a solution for it.
[22:05:56] <kharloss> but i need currrent_name+Failed.PDF
[22:06:02] <AhmedAmerican> Let's say i do have file `A` which i loop over it and then process each line and once my condition meets then i want to delete that line from File A and save it to file `B`
[22:06:15] <AhmedAmerican> here's my code https://bpa.st/IGLQ
[22:06:23] <KirkMcDonald> kharloss: If you're moving it into a directory named "Failed", then that directory must already exist.
[22:07:18] <AhmedAmerican> graingert: ^
[22:07:21] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[22:07:33] <AhmedAmerican> altendky: ^
[22:08:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[22:08:52] *** Joins: wyclif (~wyclif@user/wyclif)
[22:08:53] *** Joins: Spawns_Carpeting (~Spawns_Ca@user/spawns-carpeting/x-6969421)
[22:09:22] <kharloss> KirkMcDonald: you're the MAN / thank you.
[22:09:29] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[22:10:23] <sniperwolf> how do i merge all jpg images into one image? I have 66 images, lets say i want to merge them into 8x8 box?
[22:10:47] <KirkMcDonald> sniperwolf: Well that'll be tricky, since 8x8 is only 64.
[22:11:25] <sniperwolf> 8x8 + 2 images, whatever. I just want resulting image to be somewhat readable.
[22:11:39] <KirkMcDonald> sniperwolf: Well, Pillow can do image stuff.
[22:11:40] <sniperwolf> And i dont want to spend time on it, is there ready made solution
[22:12:00] <KirkMcDonald> Splicing together a bunch of images like that is fairly simple with it.
[22:12:28] <grym> or there's the inevitable imagemagick incantation
[22:12:33] <SnoopJ> yep, ImageMagick +1
[22:12:39] <grym> (i assert without proof that it exists, it's got to)
[22:12:55] <SnoopJ> there are Python bindings for it IIRC but it's not the worst to just call it from subprocess
[22:13:27] <SnoopJ> Pillow should be up to the task of stitching images together in the manner requested, but I don't know how you'd spell that off the top of my head.
[22:13:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[22:14:02] *** Quits: carljm (~carljm@2620:10d:c090:400::5:99b9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:14:11] <KirkMcDonald> You just make a new image of the appropriate size, then open each of the component images in turn and im.paste()
[22:14:24] *** Joins: wyclif (~wyclif@user/wyclif)
[22:14:50] *** Joins: carljm (~carljm@2620:10d:c090:400::5:99b9)
[22:15:02] <KirkMcDonald> If resizing is needed, then throw in a .resize() before pasting.
[22:15:15] <sniperwolf> i just used this https://products.aspose.app/imaging/image-merge
[22:15:20] <Wooble> https://stackoverflow.com/a/65583584/110707
[22:15:58] <causasui> I'm trying to understand the logging module. Why is the "info" message not printed? https://dpaste.com/4A7S98BL9
[22:16:28] <KirkMcDonald> One thing I have used is to define the number of columns as the square root of the number of items.
[22:17:50] *** Quits: fluffyballoon (~user@131.93.208.196) (Ping timeout: 246 seconds)
[22:17:52] <KirkMcDonald> causasui: Both the logger and the handler have a log level.
[22:18:23] *** Joins: Hash (~weechat@thestonedapes.com)
[22:18:26] <Hash> Hey dudes
[22:18:30] <SnoopJ> that logger has no handlers by default though
[22:18:37] <Hash> Is the #python:mozilla.org yours too?
[22:18:40] *** Quits: nomic (~nomic@185.217.117.88) (Quit: Leaving)
[22:18:41] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-a8be-5e8c-f3b4-9539.res6.spectrum.com)
[22:18:46] <hexology> it's a common newbie trap. the log level on the handler is a "filter" - if you have the logger's level set to WARNING, the handler will never see any messages with level < WARNING, even if the handler's level is set to DEBUG
[22:18:51] <SnoopJ> I think it dispatches to the root logger in the module in that case, or something like that?
[22:18:56] <Hash> I am on matrix browsing mozilla.org (my server) channels
[22:18:58] *** Joins: The_Jag (~The_Jag@host-79-51-167-242.retail.telecomitalia.it)
[22:19:10] <KirkMcDonald> SnoopJ: The root logger has a handler that logs to stderr, yes.
[22:19:20] <Hash> Does matrix somehow link the various channels of python together
[22:19:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[22:19:30] <hexology> Hash: i'm not an op here, but i don't think that channel is officially affiliated with this one
[22:19:31] <causasui> hexology: ooo I think I'm starting to get it, is it a quick fix?
[22:19:33] <SnoopJ> KirkMcDonald, and a logger will defer there if it has no handlers?
[22:19:36] <Hash> Oh ok
[22:19:40] <Hash> Thanks for the reply
[22:19:45] <KirkMcDonald> Hash: I know there's a matrix bridge to Libera, but so far as I know a mozilla channel has nothing to do with us.
[22:19:48] <SnoopJ> Hash, we're the 'official' home on IRC, I'm not sure about other communities.
[22:19:54] <Hash> Oh ok
[22:19:57] *** Joins: wyclif (~wyclif@user/wyclif)
[22:20:03] <SnoopJ> https://www.python.org/community/irc/
[22:20:05] <ChrisWarrick> Speaking of IRC, is leenode dead yet?
[22:20:12] <KirkMcDonald> ChrisWarrick: Who cares?
[22:20:13] <SnoopJ> ChrisWarrick, very
[22:20:16] <Hash> you mean irc.joseon.kr
[22:20:17] <ferros> Is what dead?
[22:20:19] <Hash> lol
[22:20:25] <Hash> you mean libera.net?
[22:20:28] <SnoopJ> ferros, a cheeky name for freenode.net
[22:20:35] <SnoopJ> (if you don't know what they mean, don't worry about it)
[22:20:39] <ferros> Ah, hard to say
[22:20:42] <Hash> Digital Joseon Empire!
[22:20:53] <ferros> I'm guessing the lunatics who took it over probably still run it
[22:21:14] <hexology> causasui: in your particular case, i think this behavior happens because there is a "default" or "fallback" logger in place. once you explicitly add a handler (either with logger.addHandler() or logging.basicConfig()) you will have full control
[22:21:34] <Hash> They added me to freenode staff and I'm wondering why. Then everyone hated me. I wasn't even fully aware. Then I found out and i'm like oh no wonder pepole hate me. I resigned
[22:21:35] *** Joins: Nspace (~Nspace@user/nspace)
[22:21:42] <SnoopJ> yea, if you're making a logger like this you probably also want to have a handler attached if it's not the root of your own hierarchy
[22:21:47] <Hash> even some libera.chat staff gave me lip about it.
[22:21:49] <Hash> Dorks.
[22:22:01] <hexology> causasui: import logging ; logger = logging.getLogger() ; logging.basicConfig(level=logging.DEBUG) ; logger.debug('hi')
[22:22:02] * SnoopJ calls logger.setHandler() in his application-level logging config, and everything propagates up to that mostly
[22:22:04] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[22:22:17] <KirkMcDonald> SnoopJ: By default, a logger will send its messages to its anscestors' handlers, in addition to whatever handlers it itself has.
[22:22:19] <altendky> AhmedAmerican: are you having a problem?  or you have a solution and are curious for a review?
[22:22:19] <SnoopJ> ah yea, basicConfig() is very useful if you're not interested in all the fiddling
[22:22:19] *** Joins: iphone (~iphone@user/spiderman)
[22:22:32] <hexology> SnoopJ: i tried to add a logger= kwarg to basicConfig but it was shot down
[22:22:35] <Hash> I'm like oh hey, after all these years, they want me to be staff. Cool. Then I find out it's all diff people.
[22:22:45] <SnoopJ> KirkMcDonald, and the ones in the module are ancestors of ones created with getLogger() IIRC?
[22:22:47] <causasui> hexology: yeah .basicConfig got me off the ground at least. this is a very simple use case (literally just want to log because CI will reject this little script if I use print anywhere). thanks all
[22:22:50] <SnoopJ> err, descendents*
[22:22:59] <Hash> Anyway. So Matrix doen't link multiple python channels togther then. Fuse them into a gigantic python channel
[22:23:09] <Hash> It connects users to diff networks on one app.
[22:23:16] <Hash> Kind of like AIM/Trillian, pidgin
[22:23:17] *** Quits: iphone (~iphone@user/spiderman) (Client Quit)
[22:23:28] <KirkMcDonald> Hash: I honestly don't know anything about Matrix.
[22:23:28] <hexology> yeah matrix.org has bridges to libera.chat and other major IRC networks
[22:23:32] <AhmedAmerican> altendky: looking for solution
[22:23:35] <ferros> Hash: that's funny
[22:23:44] <hexology> it's not a feature of matrix specifically, but it turns out to be a great use case
[22:24:02] <KirkMcDonald> SnoopJ: There is a root logger from which all others descend.
[22:24:02] <hexology> you can also bridge to discord, zulip, rocket.chat, mattermost, slack, whatever
[22:24:19] <hexology> however bridging raises moderation issues so not every community does it, if they don't trust the bridged community's mods
[22:24:23] *** Quits: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 264 seconds)
[22:24:30] <hexology> also gitter now uses matrix natively so you can connect to any gitter room as if it were a matrix room
[22:24:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[22:24:48] <SnoopJ> KirkMcDonald, including if you build one from the class, right?
[22:25:04] <altendky> AhmedAmerican: i forget all the reasons, but i tend away from opening with `+` mode.  i don't think you need two workers for this.  just open A for read, use click or atomicwrites to open A and B for write.  loop over the read A, write the line to either the write A or B depending where you want it.
[22:25:13] *** Joins: whatsupdoc (~whatsupdo@148.64.20.69)
[22:25:24] *** Quits: carljm (~carljm@2620:10d:c090:400::5:99b9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:25:28] *** Joins: wyclif (~wyclif@user/wyclif)
[22:25:47] <altendky> but maybe there's bigger context that is relevant :]
[22:25:57] *** Hash is now known as LordOfThePings
[22:26:36] <KirkMcDonald> SnoopJ: Instantiating the class directly may bypass that. But you're not supposed to do that.
[22:26:46] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[22:27:00] * SnoopJ nods
[22:27:36] *** Quits: Haxxa (~Haxxa@122.199.45.25) (Quit: Haxxa flies away.)
[22:30:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[22:30:58] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[22:30:59] *** Joins: wyclif (~wyclif@user/wyclif)
[22:31:28] *** Joins: djhankb (~djhankb@208.113.164.68)
[22:32:50] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[22:33:04] *** Joins: Haxxa (~Haxxa@122.199.45.25)
[22:33:20] *** Joins: plastico (~plastico@neomutt/plastico)
[22:34:46] *** Quits: yeirr (~yeirr@user/yeirr) (Quit: yeirr)
[22:35:04] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[22:35:47] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[22:36:31] *** Joins: wyclif (~wyclif@user/wyclif)
[22:37:04] *** Parts: jasper_ (~user@styria.daemonized.org) ()
[22:37:12] *** Quits: Haxxa (~Haxxa@122.199.45.25) (Remote host closed the connection)
[22:38:10] *** Joins: Haxxa (~Haxxa@122.199.45.25)
[22:38:54] *** Joins: brickfat (~brickfat@user/brickfat)
[22:39:33] *** Joins: node1 (~node1@user/node1)
[22:40:20] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[22:41:07] *** Quits: Haxxa (~Haxxa@122.199.45.25) (Remote host closed the connection)
[22:41:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[22:41:25] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[22:42:01] *** Joins: wyclif (~wyclif@user/wyclif)
[22:42:35] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:43:04] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[22:43:24] *** Joins: gambl0re (~gambl0re@45.72.236.179)
[22:45:09] *** gloin_ is now known as gloin
[22:46:23] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Quit: WeeChat 3.3)
[22:46:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[22:47:31] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[22:47:33] *** Joins: wyclif (~wyclif@user/wyclif)
[22:47:53] *** Quits: frat3rius (~frat3rius@host-85.14.84.172.static.3s.pl) (Ping timeout: 250 seconds)
[22:48:03] *** Quits: gambl0re (~gambl0re@45.72.236.179) (Client Quit)
[22:48:46] *** Joins: Haxxa (~Haxxa@122.199.45.25)
[22:52:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[22:53:05] *** Joins: wyclif (~wyclif@user/wyclif)
[22:53:07] *** Quits: Haxxa (~Haxxa@122.199.45.25) (Remote host closed the connection)
[22:53:14] <node1> Hi
[22:53:39] <Player001> hi node1
[22:53:54] <node1> Player001,
[22:54:04] <Player001> yes
[22:54:19] <node1> Do you have anyt python hello world  example that support parallel programming.
[22:54:23] *** Quits: emf (~emf@2620:10d:c090:400::5:57e9) (Quit: emf)
[22:54:25] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[22:54:28] *** Quits: zathras (~zodd@84-106-80-107.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[22:54:55] <ChrisWarrick> node1: parallel programming? be more specific
[22:55:04] <Togra> like a script that says "hello world" a bunch of times at once?
[22:55:57] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-a8be-5e8c-f3b4-9539.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[22:56:09] *** Joins: QuaternionsRock (~Quaternio@76.191.39.82)
[22:56:38] <QuaternionsRock> Why doesn't Python give you any way to implement a < x < b patterns for custom values of x?
[22:56:56] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:57:04] <node1> No my each CPU core will use same instruction , start at same time but get executed at different different cores of thread.
[22:57:17] <ferros> At the risk of sounding stupid, what do you mean by 'a < x < b' patterns, QuaternionsRock?
[22:57:36] <mefistofeles> sounds too math specific for something as generic as Python
[22:58:08] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[22:58:20] *** Quits: mike18_ (~geri@217-149-167-230.nat.highway.telekom.at) (Read error: Connection reset by peer)
[22:58:20] <QuaternionsRock> if x is an int, then `a < x < b` is valid python and is equivalent to `x > a and x < b`
[22:58:22] <grym> QuaternionsRock: works fine https://bpa.st/4CPA
[22:58:24] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[22:58:36] *** Joins: wyclif (~wyclif@user/wyclif)
[22:58:37] <node1> I don't know if i have understand the meaning of parallelism correctly.
[22:58:46] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 265 seconds)
[22:58:54] <QuaternionsRock> Oh okay strange. I guess it's just missing from Numpy arrrays then
[22:59:15] <mefistofeles> QuaternionsRock: if you show us your code maybe it helps to figure it out
[22:59:15] <SnoopJ> without attrs: https://bpa.st/4HQA
[22:59:57] <SnoopJ> (i.e. this expression compiles down to two comparisons)
[23:00:03] <hexnewbie> I'm sure quaternions need to raise an exception on __lt__, along with a bunch of other things 😜
[23:00:18] <node1> I guess our computers are meant to use single instrcution with single data SISD
[23:00:28] <QuaternionsRock> Again, I'm actually just trying to use it on numpy ndarrays
[23:00:42] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:00:43] <SnoopJ> QuaternionsRock, tell us what problem you are trying to solve in numpy, then.
[23:00:44] <QuaternionsRock> if x is an array then 2 < x < 4 doesn't work
[23:00:48] <grym> yes
[23:00:50] <grym> that makes sense
[23:01:04] <grym> i don't know what 2 < np.array([1,2,4]) means either
[23:01:07] <InPhase> node1: https://bpa.st/KCOA
[23:01:13] <SnoopJ> grym, it means a broadcast
[23:01:15] <InPhase> node1: Note that the output order is undetermined.  :)
[23:01:17] *** Joins: MetalSutton (~MetalSutt@101.100.152.253)
[23:01:21] <QuaternionsRock> 2 < np.array([1,2,4]) is valid though lol grym
[23:01:37] <grym> i could guess at what it'd do, but..
[23:01:40] *** Joins: kosh (~kosh@user/kosh)
[23:01:41] <QuaternionsRock> it evaluates to np.array([False, False, True])
[23:01:50] <QuaternionsRock> Pretty typical stuff tbh
[23:01:52] <grym> yeah, that's what i'd've guessed
[23:02:03] <SnoopJ> QuaternionsRock, the result of the two comparisons is joined by an AND and that's where you get the ValueError from
[23:02:07] <node1> InPhase, Thank you, you just gave me a way to start :)
[23:02:12] <node1> thank you thank you
[23:02:36] <QuaternionsRock> OHHH gotcha that actually kind of makes sense SnoopJ
[23:02:37] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[23:02:46] <Repiphany> (2 < x)*(x < 4) works btw
[23:02:58] <SnoopJ> or hm, not an AND, but the same effect from the JUMP_IF_FALSE_OR_POP: https://bpa.st/GLIA
[23:03:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[23:03:27] *** Quits: y1n (~y1n@91.141.35.25.wireless.dyn.drei.com) (Ping timeout: 265 seconds)
[23:03:44] <hexology> node1: here's a demo of the higher-level "concurrent futures" interface to multiprocessing https://bpa.st/HHFQ
[23:04:03] <node1> okay thanks you hexology
[23:04:07] *** Joins: wyclif (~wyclif@user/wyclif)
[23:05:26] <hexology> node1: you can ignore the enumerate() usage, i forgot to delete it after trying something else
[23:05:42] <node1> okay no problem :)
[23:05:45] <node1> Thank you
[23:05:48] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[23:06:42] *** Quits: mei6 (~mei@user/mei) (Quit: mei6)
[23:08:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:09:38] *** Joins: wyclif (~wyclif@user/wyclif)
[23:09:38] *** Joins: Haxxa (~Haxxa@122.199.45.25)
[23:09:54] *** Joins: carljm (~carljm@2620:10d:c090:400::5:99b9)
[23:11:28] *** Joins: brickfat_ (~brickfat@user/brickfat)
[23:12:04] <jiffe> are packages python version specific?  I have machines with 2 versions of python, 3.9 and 3.10, the 3.9 can install a package but the 3.10 says its not found
[23:12:23] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:ed66:103d:6c7d:7a4b) (Quit: Textual IRC Client: www.textualapp.com)
[23:12:26] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Quit: WeeChat 3.3)
[23:12:33] <SnoopJ> jiffe, they can be
[23:12:35] *** Quits: Haxxa (~Haxxa@122.199.45.25) (Remote host closed the connection)
[23:12:40] <Yhg1s> jiffe: they can be, yes, if the package provides binary wheels for 3.9 but not for 3.10, and no version-agnostic source.
[23:12:47] *** Joins: Auron (~Auron956@user/auron)
[23:13:36] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[23:14:16] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[23:15:08] <jiffe> is that the -cp39 in the filename ?
[23:15:10] *** Joins: wyclif (~wyclif@user/wyclif)
[23:15:10] *** Quits: brickfat (~brickfat@user/brickfat) (Ping timeout: 260 seconds)
[23:15:19] <SnoopJ> yea, that indicates which version a wheel is for
[23:15:20] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[23:15:21] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[23:15:47] <jiffe> ok that makes sense
[23:18:03] <sniperwolf> can i catch MemoryError?
[23:18:54] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 268 seconds)
[23:19:40] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:9c46:78b3:906:c68b)
[23:19:41] *** Joins: Betal (~Betal@user/betal)
[23:20:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[23:20:26] *** Joins: Nspace (~Nspace@user/nspace)
[23:20:41] *** Joins: wyclif (~wyclif@user/wyclif)
[23:22:11] *** Joins: Haxxa (~Haxxa@122.199.45.25)
[23:22:25] <SnoopJ> sniperwolf, yep
[23:22:50] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[23:25:11] *** Quits: Haxxa (~Haxxa@122.199.45.25) (Remote host closed the connection)
[23:25:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:26:13] *** Joins: wyclif (~wyclif@user/wyclif)
[23:26:36] *** brickfat_ is now known as brickfat
[23:26:47] *** Joins: Laibsch (~leggewie@93.152.184.249)
[23:27:08] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[23:31:07] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[23:31:13] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[23:32:01] *** Quits: Vornicus (~Vornicus@cpe-23-243-151-111.socal.res.rr.com) (Read error: Connection reset by peer)
[23:32:56] *** Quits: Laibsch (~leggewie@93.152.184.249) (Ping timeout: 265 seconds)
[23:35:19] *** Quits: drew (~drew@user/drew) (Quit: Quit)
[23:35:41] *** Quits: Guest73 (~Guest73@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 256 seconds)
[23:36:23] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[23:36:36] *** Joins: drew (~drew@user/drew)
[23:37:10] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-30a8-e30e-54bb-4206.res6.spectrum.com)
[23:37:16] *** Joins: wyclif (~wyclif@user/wyclif)
[23:37:23] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[23:38:11] *** Joins: ubert (~Thunderbi@178.165.181.201.wireless.dyn.drei.com)
[23:38:40] *** Joins: Laibsch (~leggewie@93.152.184.249)
[23:39:54] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[23:41:10] *** Joins: Haxxa (~Haxxa@122.199.45.25)
[23:41:37] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[23:41:50] *** Quits: Mikaela (~sid12355@Feneas/Mikaela) (Remote host closed the connection)
[23:42:22] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[23:42:37] *** Joins: Mikaela (~sid12355@Feneas/Mikaela)
[23:42:48] *** Joins: wyclif (~wyclif@user/wyclif)
[23:44:22] *** Quits: Haxxa (~Haxxa@122.199.45.25) (Remote host closed the connection)
[23:44:23] *** Joins: ExeciN (~ExeciN@user/nicexe)
[23:44:40] *** Quits: drew (~drew@user/drew) (Quit: Quit)
[23:45:03] *** Quits: chronus (~chronus@user/chronus) (Quit: bye)
[23:45:14] *** Joins: mat001_ (~mat001@213.143.69.121)
[23:45:47] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[23:45:56] *** Joins: drew (~drew@user/drew)
[23:47:11] *** Quits: mat001 (~mat001@213.143.69.121) (Ping timeout: 245 seconds)
[23:47:36] *** Quits: carljm (~carljm@2620:10d:c090:400::5:99b9) (Ping timeout: 245 seconds)
[23:47:55] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[23:48:19] *** Joins: wyclif (~wyclif@user/wyclif)
[23:48:50] *** Joins: Haxxa (~Haxxa@122.199.45.25)
[23:49:11] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[23:49:20] *** Joins: ExeciN (~ExeciN@user/nicexe)
[23:49:25] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[23:50:01] *** Joins: nomic (~nomic@185.217.117.88)
[23:51:00] *** Joins: sandb0y (~pirate@user/sandb0y)
[23:53:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[23:53:51] *** Joins: wyclif (~wyclif@user/wyclif)
[23:54:11] *** Joins: hanaan (~naan@user/naan)
[23:54:16] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[23:54:18] *** Joins: vfbsilva (~manjaro-u@179.176.188.199)
[23:54:41] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[23:55:05] <vfbsilva> guys my machine started to report: Blocking request from unknown origin error on my jupyter-notebooks I did not modify any configs what can I do?
[23:55:58] *** Quits: lethu (~lethu@user/lethu) (Remote host closed the connection)
[23:56:08] <mefistofeles> vfbsilva: https://github.com/jupyterlab/jupyterlab/issues/7539
[23:56:40] *** Joins: fikran (~fikran@user/fikran)
[23:57:23] *** Quits: Haxxa (~Haxxa@122.199.45.25) (Ping timeout: 264 seconds)
[23:57:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:58:32] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[23:58:32] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Client Quit)
[23:58:45] <vfbsilva> mefistofeles: ive tried chormium, firefox and edge I really need to acess that to do some class exercises is there a work around?
[23:59:02] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[23:59:52] *** Joins: Haxxa (~Haxxa@122.199.45.25)
