[00:00:29] *** Joins: zaher_ (~zaher@37.48.147.156)
[00:00:54] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 272 seconds)
[00:01:18] <mrig> I find it is often useful to explore the origins of words for deeper meaning, the casual understanding is often quite far from the mark.
[00:03:29] *** Quits: zaher (~zaher@37.48.178.178) (Ping timeout: 258 seconds)
[00:03:43] <olle> Hmmm
[00:04:02] <olle> Maybe I'll throw together a short article
[00:06:08] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[00:09:42] <mrig> Sounds like a great idea :)
[00:10:10] *** zaher_ is now known as zaher
[00:10:46] *** Quits: hjf (~hjf@user/hjf) (Ping timeout: 258 seconds)
[00:11:55] *** Quits: nekodesu (~nano@user/nekobit) (Quit: free(neko);)
[00:12:10] <moha> By Ctrl+H in notepad++, I use: ^.*(?=.com) to find all urls ending .com. I want to keep this results and delete all other stuff in the text. How can I reverse the result to replace with 'empty'?
[00:13:43] <moha> I tried _find tab (Ctrl+F) for: ^.*(?=.com), but it does not select all result! It opens another window it prints reluts accompanied a bunch of rubish!
[00:13:50] <moha> any idea?
[00:14:05] <GeDaMo> Try ?! instead of ?=
[00:15:36] <moha> it removes all lines! (in notepad++)
[00:16:01] <GeDaMo> ?= is positive lookahead, ?! is negative lookahead
[00:18:35] *** Joins: [Kalisto] (~nico@user/kalisto/x-8968079)
[00:18:59] <moha> but not working in action!
[00:20:09] <moha> goole.com\nstuff\nyahoo.com ---> I want to have google\nyahoo in result
[00:21:20] <moha> ^.*(?=.BB) can find google and yahoo, but how to cut them? I should reverse selection and delete all other stuff
[00:21:33] <moha> .com*
[00:22:30] *** Quits: SGautam (uid286066@id-286066.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[00:22:31] <beaky> hello so coq and agda make programming feel like a puzzle like the game baba is you what are some other programming languages that transform the experience of programming
[00:23:08] *** Joins: snake (~snake@user/snake)
[00:23:46] <GeDaMo> moha: I'm playing with it on https://regex101.com/ but haven't found something that works yet
[00:23:48] <bayaz> Title: regex101: build, test, and debug regex
[00:25:11] *** Quits: gaurav_ (~usr123@124.253.111.146) (Quit: Leaving)
[00:26:35] *** Joins: nekodesu (~nano@user/nekobit)
[00:31:13] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[00:33:20] *** Joins: akevinhuang2 (~thekevinh@user/thekevinhuang)
[00:33:24] *** Quits: akevinhuang (~thekevinh@user/thekevinhuang) (Read error: Connection reset by peer)
[00:33:36] *** Quits: jaysicks (~jaysicks@84-236-11-22.pool.digikabel.hu) (Quit: Leaving)
[00:35:23] <user51> lol, internet archive even has video games
[00:36:08] <GeDaMo> moha: this is as close as I've got so far \b\w*\b(?!\.com)
[00:36:25] <user51> Arahael: it really is a goldmien
[00:36:43] <beaky> yes yyou can play gorillas.bas in arhcive.org
[00:36:50] <beaky> classic basic game
[00:39:41] <moha> GeDaMo  THANKS!
[00:40:41] <GeDaMo> moha: is this better? \b[\w\s]*\b(?!\.com)
[00:41:29] *** Quits: raymond (~reymond@192.145.118.236) ()
[00:44:37] <moha> the previous one keeps the separated by new line chatracter which is better  for my case. thanks alot
[00:45:15] <GeDaMo> OK :)
[00:45:51] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2)
[00:46:33] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:47:07] <Lyn> is it ok if code is not 100% clean & thought out, but works
[00:48:53] <jeaye> Depends on the use case. For a NASA rocket launch, the answer is no. For a personal script to display your current song in your i3bar, the answer is probably yes.
[00:49:45] *** Joins: roro (~roro@user/roro)
[00:54:42] <olle> mrig: http://olleharstedt.github.io/programming/2021/08/07/unpacking-separation-of-concern.html
[00:54:43] <bayaz> Title: Unpacking Separation of Concern
[00:54:46] <olle> Blup
[00:54:54] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[00:57:36] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[00:57:55] *** Quits: DasBrain (~DasBrain@user/dasbrain) (Remote host closed the connection)
[00:58:12] *** Joins: DasBrain (~DasBrain@user/dasbrain)
[00:58:47] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4) (Quit: WeeChat 2.8)
[01:00:18] *** Quits: entuland (~entuland@user/entuland) (Read error: Connection reset by peer)
[01:00:28] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Quit: Leaving.)
[01:01:56] *** Joins: entuland (~entuland@user/entuland)
[01:02:43] *** Quits: rany_ (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[01:03:40] *** Quits: olle (~olle@i5E8666F0.versanet.de) (Ping timeout: 258 seconds)
[01:05:02] *** Joins: rany (~rany@user/rany)
[01:06:05] *** Quits: sjmulder (~sjmulder@81-204-179-161.fixed.kpn.net) (Remote host closed the connection)
[01:14:09] *** Quits: jkl (~jkl@user/jkl) (Quit: Gone.)
[01:14:35] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[01:15:33] *** Joins: jkl (~jkl@user/jkl)
[01:17:05] *** Quits: nekodesu (~nano@user/nekobit) (Ping timeout: 258 seconds)
[01:17:21] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[01:17:32] *** Joins: nekodesu (~nano@user/nekobit)
[01:20:55] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[01:21:13] *** Quits: inky_ (~inky@5.77.143.131) (Ping timeout: 250 seconds)
[01:21:19] *** Joins: jkl1337 (~jkl@user/jkl)
[01:22:29] *** Joins: inky_ (~inky@46.70.181.170)
[01:23:26] *** Quits: jkl (~jkl@user/jkl) (Ping timeout: 256 seconds)
[01:24:36] *** Quits: user51 (~user51@176.228.90.248) (Quit: leaving)
[01:25:41] *** Joins: Guest65 (~Guest65@83.240.63.197)
[01:27:45] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[01:27:56] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[01:28:07] <cvmn> what's the coolest programming language these days?
[01:28:20] <beaky> rust of course
[01:29:59] *** Joins: Twipply (~Twipply@user/twipply)
[01:30:14] *** Quits: nekodesu (~nano@user/nekobit) (Ping timeout: 256 seconds)
[01:30:23] *** Joins: nekodesu (~nano@user/nekobit)
[01:30:44] <dodo> define cool
[01:31:02] <Guest65> Hi, could you help me to understand why is the cache key not changing, even when I'm writing into the database? https://github.com/vavkamil/bb_tldr_bot/blob/main/.github/workflows/run.yml
[01:32:30] <beaky> though type theory wise the coolest one out there is cooltt of course it has cool in its name it has cubical type theory the coolest form of homotopy type theory https://redprl.org/#cooltt
[01:32:31] <bayaz> Title: The red* family of proof assistants
[01:33:34] *** Quits: furrymcgee (~devuan@31.179.186.66) (Ping timeout: 258 seconds)
[01:35:09] *** Quits: fweht (uid404746@id-404746.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[01:35:20] <beaky> what makes cubical type theory cool is that because it has univalence as a theorem you can define equivalences between types and then the system will treat them as identical https://vimeo.com/425917591
[01:38:02] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 245 seconds)
[01:39:25] *** Quits: roro (~roro@user/roro) (Read error: Connection reset by peer)
[01:39:33] <beaky> so x â‰¡ y becomes the type of paths from x to y
[01:40:03] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 252 seconds)
[01:40:15] *** Joins: mrig (~mrig@user/mrig)
[01:40:21] *** Quits: zwr (~zwr@2804:d45:b966:fb00:2d9b:b55f:a535:512a) (Remote host closed the connection)
[01:41:50] *** Joins: quartz (~quartz@2603-8001-7700-61a4-0000-0000-0000-0acb.res6.spectrum.com)
[01:41:55] *** Quits: DasBrain (~DasBrain@user/dasbrain) (Remote host closed the connection)
[01:42:12] *** Joins: DasBrain (~DasBrain@user/dasbrain)
[01:44:31] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[01:44:49] *** Joins: rany (~rany@user/rany)
[01:45:12] *** Joins: arcatech (~arcatech@user/arcatech)
[01:45:25] *** Joins: foton (~foton@user/foton)
[01:47:23] *** Joins: zaher_ (~zaher@37.48.176.193)
[01:47:46] *** Quits: Jigsy (~Jigsy@user/jigsy) (Ping timeout: 240 seconds)
[01:48:04] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[01:48:15] *** Joins: Thedarkb (~Thedarkb@85.255.232.89)
[01:48:23] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[01:49:12] *** Quits: tracey (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 272 seconds)
[01:49:17] *** Quits: zaher (~zaher@37.48.147.156) (Ping timeout: 258 seconds)
[01:50:32] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 245 seconds)
[01:51:47] *** Joins: Crescendo (~Crescendo@user/crescendo)
[01:55:08] *** Quits: soapsudsxx (~soapsudsx@209.221.40.143) (Remote host closed the connection)
[01:55:57] *** Joins: Jigsy (~Jigsy@user/jigsy)
[01:56:54] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[01:57:20] *** Joins: soapsudsxx (~soapsudsx@209.221.40.143)
[01:58:51] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[01:59:08] *** Joins: humky (~humky@user/humky)
[02:00:06] *** Quits: Guest65 (~Guest65@83.240.63.197) (Quit: Client closed)
[02:02:10] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:03:04] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[02:04:01] *** Parts: foton (~foton@user/foton) (Bye, bye, ...)
[02:04:33] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[02:05:35] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:06:24] *** Quits: Inari (~Pinkishu@p4fe7e56b.dip0.t-ipconnect.de) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[02:10:51] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[02:12:50] *** Joins: xkuru (~xkuru@user/xkuru)
[02:13:40] *** Joins: rany (~rany@user/rany)
[02:14:58] *** Joins: arcatech (~arcatech@user/arcatech)
[02:17:04] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[02:17:09] *** Quits: xkuru (~xkuru@user/xkuru) (Client Quit)
[02:17:33] *** Joins: xkuru (~xkuru@user/xkuru)
[02:17:37] *** Quits: xkuru (~xkuru@user/xkuru) (Remote host closed the connection)
[02:19:12] *** Joins: xkuru (~xkuru@user/xkuru)
[02:27:07] *** Joins: rany_ (~rany@user/rany)
[02:27:37] *** Quits: rany (~rany@user/rany) (Ping timeout: 258 seconds)
[02:29:05] *** Quits: Akuli (~Akuli@87-94-110-103.bb.dnainternet.fi) (Quit: Leaving)
[02:35:45] *** Quits: magla (~gelignite@55d4004f.access.ecotel.net) (Quit: Stay safe!)
[02:38:40] *** Quits: snake (~snake@user/snake) (Quit: Namae nado nai, omae to onaji da..)
[02:41:08] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[02:43:10] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[02:45:47] <Arahael> cvmn: I'd have to say that Pascal is the coolest language these days. It's so very not hot.
[02:46:06] <cvmn> i mean hot.
[02:46:19] <cvmn> something fast, edgy, safe, beautiful, etc.
[02:46:33] <cvmn> something pretty like python, but fast like c.
[02:46:41] *** Joins: inky (~inky@5.77.143.131)
[02:49:00] *** Quits: inky_ (~inky@46.70.181.170) (Ping timeout: 256 seconds)
[02:49:51] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 258 seconds)
[02:49:53] <jinsun> I like beaky's suggestions, rust or cooltt
[02:50:07] <d3x0r> JS
[02:50:09] <d3x0r> Node.js
[02:52:01] *** Quits: src (~src@user/src) (Read error: Connection reset by peer)
[02:52:03] *** Joins: nekobyte (~based@user/nekobit)
[02:52:28] <Arahael> cvmn: Possibly Rust, then.
[02:54:00] *** Quits: nekobyte (~based@user/nekobit) (Client Quit)
[02:54:06] *** Quits: rany_ (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[02:54:18] *** Joins: nekobyte (~based@user/nekobit)
[02:54:55] *** Joins: rany (~rany@user/rany)
[02:57:36] *** Quits: inky (~inky@5.77.143.131) (Ping timeout: 252 seconds)
[02:58:30] *** Quits: nekobyte (~based@user/nekobit) (Client Quit)
[03:00:33] <beaky> in that case i can highly recommend checking out rust as it has all the coolest features to support that style of programming like zero-cost abstractions, move semantics, guaranteed memory safety without garbage collection, threads without data races, trait-based generics, pattern matching, type inference, minimal runtime, and efficient c bindings
[03:01:21] *** Joins: nekobyte (~based@user/nekobit)
[03:02:08] <Arahael> Also two-way generation of C bindings!!!
[03:02:16] *** Quits: nekobyte (~based@user/nekobit) (Client Quit)
[03:02:44] *** Joins: nekobyte (~based@user/nekobit)
[03:03:56] <beaky> woah two-way generation nice
[03:04:07] <beaky> i didnt know that that would maek it much more conveninent than haskell
[03:04:42] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[03:04:55] <Arahael> beaky: Yeah, via two different projects, though. One's cbindgen, the other's... bindgen?
[03:05:55] *** Joins: arcatech (~arcatech@user/arcatech)
[03:12:04] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[03:13:09] *** Joins: inky (~inky@188.115.225.35)
[03:13:57] *** Joins: jamea (~jamea@189.231.97.52)
[03:14:02] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[03:14:50] *** Joins: rany (~rany@user/rany)
[03:17:10] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:17:17] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[03:18:25] *** Quits: moha (uid506645@id-506645.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[03:19:26] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[03:19:41] *** Quits: rany (~rany@user/rany) (Client Quit)
[03:20:23] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 250 seconds)
[03:20:38] *** Quits: TechTest (uid283215@id-283215.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[03:22:01] *** Joins: sdftyguijokpl (~sdftyguij@eth-west-pareq2-46-193-2-167.wb.wifirst.net)
[03:22:07] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[03:24:24] *** Joins: sdftyguijokpl_ (~sdftyguij@eth-west-pareq2-46-193-2-167.wb.wifirst.net)
[03:24:42] *** Joins: rany (~rany@user/rany)
[03:25:26] *** Quits: sdftyguijokpl_ (~sdftyguij@eth-west-pareq2-46-193-2-167.wb.wifirst.net) (Max SendQ exceeded)
[03:25:54] *** Joins: sdftyguijokpl_ (~sdftyguij@eth-west-pareq2-46-193-2-167.wb.wifirst.net)
[03:26:14] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[03:26:17] *** Quits: Tazmainian (~Tazmainia@41.193.169.28) (Read error: Connection reset by peer)
[03:26:34] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:28:38] *** Quits: sdftyguijokpl (~sdftyguij@eth-west-pareq2-46-193-2-167.wb.wifirst.net) (Ping timeout: 272 seconds)
[03:30:05] *** Quits: sdftyguijokpl_ (~sdftyguij@eth-west-pareq2-46-193-2-167.wb.wifirst.net) (Read error: Connection reset by peer)
[03:31:29] *** Joins: sdftyguijokpl (~sdftyguij@eth-west-pareq2-46-193-2-167.wb.wifirst.net)
[03:31:48] <beaky> the way rust achieves its hgih implementation efficiency is thanks to the use of llvm which is the most advanced framework for intermediate representation based optimization
[03:32:26] *** Quits: sdftyguijokpl (~sdftyguij@eth-west-pareq2-46-193-2-167.wb.wifirst.net) (Max SendQ exceeded)
[03:32:49] *** Joins: sdftyguijokpl (~sdftyguij@eth-west-pareq2-46-193-2-167.wb.wifirst.net)
[03:35:39] *** Joins: arcatech (~arcatech@user/arcatech)
[03:35:47] <beaky> but alternatively you can checkout your favorite language to see if it has an implementation in the graalvm an even more advanced runtime-based framework for polyglot performance
[03:36:40] <beaky> though i think graal is not free software you must buy it to use in production
[03:36:45] *** Joins: MangyDog (Mange@user/mangy-dog/x-7397214)
[03:37:56] <beaky> no wait there is a community edition which is gplv2
[03:39:27] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 250 seconds)
[03:39:51] *** Joins: src (~src@user/src)
[03:41:04] <beaky> but all the cool stuff is in the enterprise edition which is not gplv2
[03:41:40] *** Joins: mickey8 (~user@user/mickey)
[03:42:23] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[03:42:23] *** mickey8 is now known as mickey
[03:43:04] <beaky> woah there is now a critical vulneraibility in various ip address validation libraries i guess you can not always trust in rust for everything https://www.bleepingcomputer.com/news/security/go-rust-net-library-affected-by-critical-ip-address-validation-vulnerability/
[03:43:06] <bayaz> Title: Go, Rust "net" library affected by critical IP address validation vulnerability
[03:44:12] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[03:44:24] *** Joins: linext_ (~linext@pool-108-53-128-199.nwrknj.fios.verizon.net)
[03:44:31] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[03:44:41] <beaky> now i must recompile my entire gentoo to make sure this is fixed
[03:45:26] *** Quits: linext (~linext@pool-108-53-128-199.nwrknj.fios.verizon.net) (Ping timeout: 258 seconds)
[03:46:26] *** Quits: tw3ml0w (~tw3ml0w@185.187.243.219) (Ping timeout: 252 seconds)
[03:50:06] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[03:50:58] *** Joins: sdftyguijokpl_ (~sdftyguij@eth-west-pareq2-46-193-2-167.wb.wifirst.net)
[03:51:34] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[03:51:58] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[03:53:34] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[03:53:36] *** Quits: sdftyguijokpl (~sdftyguij@eth-west-pareq2-46-193-2-167.wb.wifirst.net) (Ping timeout: 256 seconds)
[03:54:35] <pavonia> Who came up with this nonsense that leading zeros change the format of numbers?
[03:55:11] <beaky> we have to be liberal with what we accept
[03:55:13] *** Quits: nekobyte (~based@user/nekobit) (Quit: cute!!!!)
[03:55:36] *** Joins: nekobyte (~based@user/nekobit)
[03:56:27] <vin> https://godbolt.org/z/xxYo76z5o in this example I am trying to compare two 10B keys and am using memcmp. 1. I get the error that I can't assign to a read-only member in operator function. 2. Is there a way to avoid branches here? This would cause a lot of missprections. 3. Is memcmp the fastest way to compare two byte arrays? Or am I going about this wrong.
[03:56:29] <bayaz> Title: Compiler Explorer - C++ (x86-64 gcc 11.2)
[03:57:04] *** Joins: arcatech (~arcatech@user/arcatech)
[03:58:39] <beaky> yes operator> is declared const which means you must not mutate any member variables in the function instead you can define n inside the comparison functions instead of as a member variable of the struct
[03:59:17] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Ping timeout: 245 seconds)
[04:00:08] <vin> Yes beaky that makes sense. But I feel there must be a better way to do this. You can imagine all the wasted cycles on every comparision.
[04:00:44] *** Quits: MangyDog (Mange@user/mangy-dog/x-7397214) ()
[04:00:55] *** Quits: nekobyte (~based@user/nekobit) (Quit: cute!!!!)
[04:01:51] <blahboybaz> If I have a field of a class that calls a builtin date function (setting the value of the field to current locale date/time) and I want to jest test that the date function was called when the object is initialized -- how would I do that? With a spy? What I'm stuck on is how the function is called as the rvalue of the field and how to implement that in a test.
[04:02:10] *** Joins: nekobyte (~based@user/nekobit)
[04:02:26] *** Joins: caramel (~caramel@user/caramel)
[04:02:42] *** Quits: zaher_ (~zaher@37.48.176.193) (Ping timeout: 240 seconds)
[04:03:21] *** Joins: zaher (~zaher@37.48.151.108)
[04:04:28] <blahboybaz> Maybe I just don't understand what happens when you set the rvalue of a field to a function (ie: how it get set).
[04:05:53] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[04:07:36] *** Joins: snake (~snake@user/snake)
[04:08:56] <blahboybaz> I think I would have to mock the Date() class that is being called but not sure
[04:09:28] *** Joins: zaher_ (~zaher@188.229.249.236)
[04:09:58] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[04:10:21] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 258 seconds)
[04:12:00] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[04:12:39] *** Quits: zaher (~zaher@37.48.151.108) (Ping timeout: 258 seconds)
[04:14:59] <beaky> yes have Date has a parameter
[04:17:55] <beaky> unfortunately this might be one of the examples of problem where the 'locales are managed as global state, call functions to globally set the locale' design of the locale library makes this impossible to do
[04:18:28] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[04:21:00] <beaky> globals, not even once
[04:22:01] *** Quits: src (~src@user/src) (Read error: Connection reset by peer)
[04:22:37] *** Quits: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com) (Ping timeout: 245 seconds)
[04:23:22] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[04:23:34] *** Joins: flynn (~mcbloch@user/flynn)
[04:23:44] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 272 seconds)
[04:24:04] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:25:20] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[04:25:46] *** Joins: src (~src@user/src)
[04:28:07] *** Joins: c705 (c705@alpine/contributor/c705)
[04:29:38] <blahboybaz> beaky: console.log() is global but I was able to spy that and test against it. This is different though. I can't call another instance of Date() for the sake of spyOn.mockImplementation(...)   - I thinking I can't -   cause that would be a separate instance of Date() apart from the one one instantiated in my object instance. I can't simply spyOn the field in the object because it isn't the value
[04:29:44] <blahboybaz> of the field I need to check but that Date() was when the object was constructed...
[04:29:47] <blahboybaz> I think i know what to try
[04:30:07] *** Quits: sdftyguijokpl_ (~sdftyguij@eth-west-pareq2-46-193-2-167.wb.wifirst.net) (Ping timeout: 245 seconds)
[04:32:08] *** Quits: matt|home (~matt@adsl-74-233-58-97.mia.bellsouth.net) (Ping timeout: 256 seconds)
[04:37:09] *** Joins: jazzy (~jaziz@2600:380:8562:6b2:9c1f:23c2:2ca2:238b)
[04:40:03] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[04:40:20] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[04:42:03] *** Joins: dre (~dre@2001:8003:c932:c301:1048:7720:d398:8580)
[04:42:06] <blahboybaz> Yeah, this is just a really wierd sitch
[04:45:30] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[04:45:47] *** Joins: eyynet4 (~0x100@32.211.211.39)
[04:45:53] *** Joins: matt|home (~matt@adsl-74-233-58-97.mia.bellsouth.net)
[04:46:20] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:49:50] *** Quits: xff0x (~xff0x@2001:1a81:5329:ea00:e083:f7b4:2cd3:667d) (Ping timeout: 258 seconds)
[04:50:46] *** Joins: xff0x (~xff0x@2001:1a81:5329:ea00:7c78:a917:7a91:b7c4)
[04:51:52] *** Quits: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca) (Quit: Textual IRC Client: www.textualapp.com)
[04:52:34] <blahboybaz> beaky: What did you mean about the way Date is implemented making it impossible to test?
[04:52:42] <beaky> oh this is javascript i thought this was c
[04:52:53] <blahboybaz> node
[04:53:03] <blahboybaz> and jest
[04:53:03] <eyynet4> its always javascript
[04:53:07] <blahboybaz> lol
[04:53:18] <blahboybaz> eyynet4: Your fave!
[04:53:22] <blahboybaz> :)
[04:53:49] <eyynet4> not my fave, googles fave
[04:54:12] <blahboybaz> baked into all the browsers
[04:54:27] <eyynet4> yeah all two of them
[04:54:40] <blahboybaz> What, you don't like IE?
[04:54:44] <blahboybaz> :p
[04:55:02] <blahboybaz> 4 with opera
[04:55:12] <blahboybaz> safari, 5
[04:55:37] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) ()
[04:55:53] <blahboybaz> And some that are just not largely known / used
[04:56:05] <eyynet4> because google broke their compatability
[04:56:08] *** Joins: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca)
[04:56:48] <blahboybaz> eff google
[04:57:11] <blahboybaz> If I turn up dead next week you know it's because of that comment  :p
[04:59:25] *** Quits: DrSanchez (~rick@35.143.255.39) (Ping timeout: 258 seconds)
[04:59:47] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[05:00:07] <blahboybaz> What if I spyOn the prototype of the class or something?
[05:03:45] *** Quits: ixil (~ixil@82.197.178.137) (Remote host closed the connection)
[05:04:09] *** Joins: ixil (~ixil@82.197.178.137)
[05:05:16] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[05:06:08] *** nekobyte is now known as [][][]
[05:06:09] <blahboybaz> I can do: expect(subject.created).toEqual(new Date().toLocaleString());   but I'm afraid that if the test takes more than 1 second to process the lines between instntiation and that line that it will fail
[05:06:59] *** Quits: anton (anton@tloks.com) (Remote host closed the connection)
[05:07:19] *** [][][] is now known as nekobased
[05:09:02] *** Joins: Raguile (~Raguile@user/raguile)
[05:09:18] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[05:19:11] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:ad66:4f1:68fa:a693) (Read error: Connection reset by peer)
[05:21:15] *** Quits: enoq (~enoq@194-208-179-35.lampert.tv) (Quit: enoq)
[05:24:05] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:31f5:3810:3d54:91c8)
[05:24:52] *** Joins: zaher__ (~zaher@37.48.188.190)
[05:25:41] *** Joins: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com)
[05:26:32] *** Quits: quartz (~quartz@2603-8001-7700-61a4-0000-0000-0000-0acb.res6.spectrum.com) (Quit: WeeChat 3.2)
[05:27:42] *** Quits: ixil (~ixil@82.197.178.137) (Remote host closed the connection)
[05:28:20] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 272 seconds)
[05:28:56] *** Quits: zaher_ (~zaher@188.229.249.236) (Ping timeout: 258 seconds)
[05:29:19] *** Quits: zaher__ (~zaher@37.48.188.190) (Ping timeout: 258 seconds)
[05:30:29] *** Quits: xsperry (~as@user/xsperry) (Remote host closed the connection)
[05:34:30] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[05:36:36] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Quit: Leaving)
[05:37:16] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[05:38:01] *** Joins: Izem (~Izem@8.21.10.18)
[05:39:06] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 240 seconds)
[05:40:05] *** Joins: brabrax (~brabrax@user/brabrax)
[05:42:42] *** Quits: xff0x (~xff0x@2001:1a81:5329:ea00:7c78:a917:7a91:b7c4) (Ping timeout: 240 seconds)
[05:42:46] *** Joins: loganlee (~Thunderbi@user/loganlee)
[05:43:24] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[05:44:58] *** Joins: xff0x (~xff0x@2001:1a81:533f:2500:e6ab:58ee:e458:ff3a)
[05:45:32] *** Quits: elastic_dog (~elastic_d@ary207.neoplus.adsl.tpnet.pl) (Ping timeout: 245 seconds)
[05:46:02] *** Joins: anton (anton@tloks.com)
[05:47:23] *** Quits: eyynet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[05:47:35] *** Joins: eyynet4 (~0x100@32.211.211.39)
[05:47:48] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:47:51] *** Joins: amigojapan (uid86330@id-86330.brockwell.irccloud.com)
[05:48:05] <eyynet4> https://www.bleepingcomputer.com/news/security/go-rust-net-library-affected-by-critical-ip-address-validation-vulnerability/  are we safe yet?
[05:48:07] <bayaz> Title: Go, Rust "net" library affected by critical IP address validation vulnerability
[05:49:51] <eyynet4> WHO IS WORKING WITH OCTAL IP's !?
[05:51:07] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[05:51:47] *** Joins: pagnol (~user@014198154145.ctinets.com)
[05:53:40] <eyynet4> sorry i'm compiling resources for my upcoming book "100 reasons to not let webdevs design your programming language"
[05:53:56] *** Joins: rany (~rany@user/rany)
[05:55:14] <oldlaptop> the leading-zero notation for octal really does seem to have been a mistake :|
[05:56:27] <oldlaptop> as silly as 0o may or may not look
[05:57:43] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[05:59:59] <PlanckWalk> Yes, it's dangerous and dumb.
[06:00:45] *** Quits: Izem (~Izem@8.21.10.18) (Ping timeout: 258 seconds)
[06:03:23] <PlanckWalk> Leading zeroes shoudln't dictate *what base the number system is*
[06:03:34] *** Joins: elastic_dog (~elastic_d@ary207.neoplus.adsl.tpnet.pl)
[06:03:46] <PlanckWalk> Especially when padding numbers with leading zeroes is a common thing to do.
[06:04:49] <oldlaptop> Perhaps a cautionary tale, you never know when some seemingly-trivial choice like that will end up baked in for fifty ears
[06:04:54] <oldlaptop> Or even fifty years.
[06:05:57] <oldlaptop> (it's not as though that was an obscure corner or something at the time, 36-bit machines were commercially important at the time)
[06:06:32] <PlanckWalk> Yeah, existence and use of octal notation isn't a problem.
[06:06:54] <PlanckWalk> Denoting it with a leading zero without a letter is the problem.
[06:07:00] <eyynet4> showme one project that stores IP's as octal numbers
[06:08:02] <PlanckWalk> None of them, I expect.
[06:08:17] <PlanckWalk> The fact that you have to explicitly opt-out of interpreting them as octal is the problem.
[06:08:53] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[06:10:27] <eyynet4> https://datatracker.ietf.org/doc/html/draft-main-ipaddr-text-rep-00 cites inet_aton from 4.2 bsd
[06:10:28] <bayaz> Title: draft-main-ipaddr-text-rep-00
[06:10:58] <PlanckWalk> For as much as my opinion counts (next to nothing), Go and Rust are doing the right thing.
[06:11:54] <PlanckWalk> Anyone treating dotted-digit ip addresses as mixed octal and decimal are bizarre and weird and should be treated as buggy.
[06:12:22] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[06:12:39] <PlanckWalk> There are even some devices that absolutely require three digits in their decimal address parts.
[06:12:46] <oldlaptop> eyynet4: 4.2BSD was and remains *enormously* influential, as that document in fact states
[06:13:26] <PlanckWalk> In those devices, 010.000.000.001 *must not* be interpreted as 8.0.0.1
[06:15:11] <oldlaptop> and lo and behold: https://cgit.freebsd.org/src/tree/lib/libc/inet/inet_addr.c#n100
[06:15:12] <bayaz> Title: inet_addr.c Â« inet Â« libc Â« lib - src - FreeBSD source tree
[06:16:12] <oldlaptop> I'll assume offhand the other BSDs are the same way; freebsd in particular is extra-notable for this purpose since that code still runs a major fraction of global (especially North American) internet traffic, just for netflix alone
[06:16:18] <PlanckWalk> Yes, IMO that's a bug, no matter how long standing.
[06:16:38] <oldlaptop> bugs aren't deliberately-implemented features
[06:16:46] <oldlaptop> misfeatures are deliberately-implemented features
[06:16:47] <PlanckWalk> Specification bugs are
[06:17:00] <PlanckWalk> Call it misfeature then
[06:17:11] <oldlaptop> sometimes standards have to accomodate misfeatures of long standing
[06:17:36] <PlanckWalk> Is it even in any standard?
[06:17:42] <PlanckWalk> (I.e. not just a draft)
[06:19:35] <eyynet4> which BSD is where they decided SCM_RIGHTS ancillary data is file descriptors?
[06:20:52] <eyynet4> even windows has that now
[06:22:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[06:24:58] *** Joins: Izem (~Izem@8.21.10.18)
[06:25:15] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[06:26:35] <Izem> eyynet4: Is the rust net library in the standard library?
[06:27:26] <eyynet4> i don't know maybe the headline was implying more than it should, i didn't do too much digging
[06:28:17] <eyynet4> i've resumed my quest to discover the origins of SCM_RIGHTS
[06:28:53] <Izem> it affects many libraries, so I'm not sure what webdevs have to do with this ...
[06:29:05] <eyynet4> google / mozilla  go / rust
[06:31:39] *** Quits: Raguile (~Raguile@user/raguile) (Ping timeout: 260 seconds)
[06:32:15] *** Joins: Engineer (~Izem@8.21.10.18)
[06:34:53] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[06:35:28] *** Quits: Izem (~Izem@8.21.10.18) (Ping timeout: 272 seconds)
[06:35:31] *** Quits: Engineer (~Izem@8.21.10.18) (Client Quit)
[06:41:35] *** Quits: src (~src@user/src) (Read error: Connection reset by peer)
[06:42:28] *** Quits: dre (~dre@2001:8003:c932:c301:1048:7720:d398:8580) (Ping timeout: 256 seconds)
[06:43:35] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[06:44:50] *** Joins: kodah (~kodah@user/kodah)
[06:46:30] *** Joins: Izem (~Izem@8.21.10.18)
[06:46:39] *** Joins: src (~src@user/src)
[06:46:47] *** Quits: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com) (Ping timeout: 245 seconds)
[06:46:47] *** ChanServ sets mode: +o InPhase
[06:46:56] *** InPhase sets mode: -c 
[06:47:22] *** Joins: gargus (~user@118.208.102.226)
[06:48:50] *** Quits: entuland (~entuland@user/entuland) (Read error: Connection reset by peer)
[06:50:12] <kodah> hey folks, i have a file in java called "File.java" in a folder hierarchy of com/kodah with a class named File and a main() method. i'm having trouble running it, can anyone give me some advice?
[06:54:48] <Izem> how are you "running" it?
[06:55:59] *** InPhase sets mode: -o InPhase
[06:56:23] <kodah> java com.kodah.File
[06:56:31] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[06:56:36] <InPhase> kodah: Did you try compiling it first?
[06:56:55] <kodah> is that necessary in java?
[06:57:01] <InPhase> Very much so.
[06:57:07] <InPhase> javac
[06:57:09] <kodah> ah, well that'd do the trick
[06:57:17] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[06:57:52] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[06:57:57] *** Joins: smuxki (~smuxki@2804:14d:baa0:85c6:40fc:232a:7dbe:1555)
[06:58:10] *** Joins: rany (~rany@user/rany)
[06:58:58] <InPhase> Java compiles to a bytecode, which is then interpreted with performance boosts from a just-in-time (jit) compiler.
[06:59:34] <InPhase> The bytecode will be located in .class files, or packed up as a collection of class files into .jar files.
[07:00:00] <d3x0r> s/interpreted/translated to native/
[07:00:33] <d3x0r> almost everything does that though - given the right comipler and a WASM target; which is bytecode translated to native
[07:01:17] <InPhase> d3x0r: jit does not guarantee that all pieces of code are translated to native.  Some pieces in a jit are straight interpreted, as the compilation step can sometimes be more expensive.
[07:01:24] <d3x0r> true
[07:01:38] <InPhase> So some fuzzy explanations and labeling are required.  :)
[07:02:10] *** Quits: pizdets_ (~pizdets@183.182.110.218) (Ping timeout: 245 seconds)
[07:03:12] <TheLinuxNerd> .demand coffee = get_coffee() { reason = .no_sleep_last_night; solution = .double_espresso_ultra_strong }; me.drink(coffee);
[07:03:15] *** Joins: pizdets (~pizdets@183.182.111.62)
[07:05:09] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 258 seconds)
[07:09:03] *** Joins: jamea97 (~jamea@189.231.118.46)
[07:09:07] <d3x0r> could wish someone could help with this surface smoothing... https://d3x0r.github.io/STFRPhysics/3d/index-normals.html  with (Smooth Shade [X], Show Normal Texture [X]) Dual Marchin (alt smooth) and Dual Marching  algorithms have some issues with the 'Input Data' set to Pyramid (second down) the normals are terrible 
[07:09:07] <bayaz> Title: Isosurface Texture Toolbox 
[07:09:34] <d3x0r> second, I'm not sure how to actually implement the dual-manifold-contouring which claims to use 2 points per cell for a + and - surface direction
[07:10:18] *** Quits: jamea (~jamea@189.231.97.52) (Ping timeout: 272 seconds)
[07:10:23] <d3x0r> using log-quaternions and averaging them though works good for smoothing, but I do have to make sure to translate the point to add to the average to one of the points first...
[07:10:55] *** Quits: DefiantX (~DefiantN@user/defiantn) (Ping timeout: 250 seconds)
[07:12:41] *** Joins: dylan_ (~dylan_@210.213.254.122)
[07:12:49] *** Quits: dylan_ (~dylan_@210.213.254.122) (Read error: Connection reset by peer)
[07:17:36] *** Joins: DefiantX (~DefiantN@user/defiantn)
[07:19:21] *** Joins: pilyn (~pilyn@user/pilyn)
[07:22:24] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 258 seconds)
[07:22:45] *** Joins: dylan_ (~dylan_@210.213.254.122)
[07:22:46] *** Quits: dylan_ (~dylan_@210.213.254.122) (Read error: Connection reset by peer)
[07:22:47] *** Quits: Izem (~Izem@8.21.10.18) (Ping timeout: 258 seconds)
[07:23:14] *** Joins: rtypo (~alex@user/rtypo)
[07:27:49] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 250 seconds)
[07:30:21] *** Joins: damxsa (~damx@2001:16a2:cfd8:e500:40e7:6a69:a396:39e9)
[07:31:13] *** Quits: HappyHotDog (~HappyHotD@2600:1f11:18a:3400:2f50:7a48:f548:1191) (Changing host)
[07:31:13] *** Joins: HappyHotDog (~HappyHotD@user/happyhotdog)
[07:37:38] *** Joins: Izem (~Izem@8.21.10.18)
[07:37:48] *** Joins: Mija (~Mija@user/mija)
[07:41:16] *** Quits: damxsa (~damx@2001:16a2:cfd8:e500:40e7:6a69:a396:39e9) (Quit: Leaving)
[07:41:40] *** Joins: damxsa (~damx@2001:16a2:cfd8:e500:40e7:6a69:a396:39e9)
[07:41:58] *** Quits: damxsa (~damx@2001:16a2:cfd8:e500:40e7:6a69:a396:39e9) (Remote host closed the connection)
[07:42:08] *** Quits: droid3 (~fffd@024-177-015-135.res.spectrum.com) (Remote host closed the connection)
[07:42:30] *** Joins: droid3 (~fffd@024-177-015-135.res.spectrum.com)
[07:49:53] <Izem> what is a resource file?
[07:50:00] <Izem> for win32 apps
[07:55:21] <Arahael> Izem: A file that's literally copied into the 'resources' section of a PE-COFF file. See https://docs.microsoft.com/en-us/windows/win32/debug/pe-format
[07:55:22] <bayaz> Title: PE Format - Win32 apps 
[07:55:38] <Arahael> (Thought there might be some transformation, I haven't looked that hard)
[07:56:21] <Izem> yeah that is mind bending to me ...
[07:56:44] <vdamewood> Izem: If Arahael's answer didn't help, it's data that's copied into the executable, such as an icon, or window layout, or such.
[07:56:49] <Izem> so I guess it's sort of a pointer to where those resources are actually located?
[07:57:00] <Izem> oh it's literally copied in
[07:57:04] <Arahael> Izem: The resources are actually located *in* the exe.
[07:57:25] <Izem> how is it related to the cpp?
[07:57:47] <Arahael> Izem: cpp, as in, the C Pre Processor?
[07:57:52] <Izem> yeah
[07:57:58] <Arahael> Izem: It's not related.
[07:58:19] *** Joins: dylan_ (~dylan_@210.213.254.119)
[07:58:23] <Arahael> Izem: cpp just does naive expansion of various macros and stuff for what is typically a C file.
[07:58:40] <vdamewood> If you run resource compiler (rc.exe, I think), it will run the C preprocessor on a resource file.
[07:58:43] *** Quits: dylan_ (~dylan_@210.213.254.119) (Read error: Connection reset by peer)
[07:59:31] <vdamewood> For example: https://github.com/vdamewood/siliko/blob/master/win32/EvalWindow.rc#L18
[07:59:35] <Arahael> Oh, yeah.  But that's still prior to actual embedding as a resource.
[07:59:55] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[08:00:02] <vdamewood> Actually MSVC has one executable name for its resource compile, and mingw/gcc has a different one.
[08:00:13] *** Joins: rany (~rany@user/rany)
[08:00:18] <vdamewood> I think LLVM has yet another one.
[08:00:39] <Arahael> Borland has yet another, I believe.
[08:01:33] <Izem> so basically resources are always image data?
[08:01:40] <Izem> or maybe gui stuff too
[08:01:56] <vdamewood> Izem: So resources start out as .rc files. They're compiled with the resource compiler, and become normal .o files. Then the .o files get linked into the executable.
[08:02:09] <vdamewood> Izem: Not really, they can contain fairly arbitrairy data.
[08:02:18] <Izem> crazy
[08:02:36] <Izem> is there any security implications?
[08:02:42] <vdamewood> I wouldn't be surprised if 'self extracting zip files' are implemented as an extractor program with the zip file as a resource.
[08:02:48] <pilyn> Did anyone here play Dune 1?
[08:03:04] <Arahael> vdamewood: No, they're usually just appended to the end of the .exe, not as a resource.
[08:03:17] <vdamewood> Arahael: Oh, how disapointing.
[08:03:38] <vdamewood> Izem: Zecurity?
[08:03:41] <vdamewood> Security?
[08:03:42] <Arahael> vdamewood: And the exe itself just looks at the current .exe as the .zip itself.  The .zip file format places the file table at the end of the file, it's quite elegant, really.
[08:04:09] <vdamewood> Arahael: Yeah, and that's why spanned zips required you to put the last disk in.
[08:04:26] <Arahael> Figures. :)
[08:05:00] <vdamewood> I forget, were spanned zips a thing PK did, or did WinZip add that as an extension?
[08:05:17] <Arahael> Can't remember.
[08:05:33] <Izem> vdamewood: being able to add binary data in this way just strikes me as odd
[08:05:36] <Arahael> Anyway, I need to risk this covid thing and get some meat. We're both low on protien and craving meat.
[08:06:05] <vdamewood> Izem: It's not really any different than char foo[] = <random data here>
[08:06:12] *** Joins: dylan_ (~dylan_@210.213.254.122)
[08:06:20] *** Quits: dylan_ (~dylan_@210.213.254.122) (Read error: Connection reset by peer)
[08:06:32] <Izem> yeah good point
[08:06:38] <vdamewood> Arahael: There's a meat market by my house. Nothing beats their meat.
[08:07:37] <Arahael> vdamewood: Yeah, just getting some cheap mince for tonight - and then I'll start getting ready to order in a bit of meat each week. Thing is, we don't normally eat much meat, so it feels excessive getting it ordered in.
[08:07:59] *** Joins: kmh_ (~kmh@p200300df5f48570080833502d6da6e7d.dip0.t-ipconnect.de)
[08:09:44] *** Quits: kmh (~kmh@p200300df5f34a300a53c887b84ee4a87.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[08:10:31] <Arahael> vdamewood: Particularly since _our_ preferred butcher is literally 15 minutes away.
[08:10:42] <Arahael> Or ~30 if we choose to walk.
[08:10:50] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[08:10:57] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 245 seconds)
[08:10:57] <vdamewood> Mine is 15 meters away.
[08:11:06] <Arahael> Very nice!
[08:11:15] <vdamewood> Actually, It's more like 150 meters, but still, pretty close.
[08:11:26] <Arahael> Very close indeed!
[08:12:23] *** Joins: kmh__ (~kmh@p2e511f3b.dip0.t-ipconnect.de)
[08:13:23] *** Quits: kmh_ (~kmh@p200300df5f48570080833502d6da6e7d.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[08:14:24] <Izem> why would a higher dpi make an application look smaller?
[08:14:38] <Arahael> vdamewood: I'm waiting on birth and marriage certificates for a particular ancestor. :D  This one is just late 1800's, though.
[08:15:15] <Arahael> Izem: Because traditionally, applications would specify things with an assumed DPI.  A higher DPI packs more within the inch, so they're smaller.
[08:15:25] <Izem> I see
[08:15:43] <Arahael> Izem: They would assume 96 DPI.
[08:16:14] <Izem> was that because certain hardware was popular?
[08:16:20] <Arahael> Izem: And unfortunately Microsoft has tried to work around that in various ways, so it's a mess today.  Including simulating 96 DPI on systems that are really 120 DPI.
[08:16:36] <InPhase> The last time I had a 96 DPI screen on a main computer was probably the 90s.
[08:16:39] <Arahael> Izem: Ie, sometimes depending on the API and how you've specified teh app environment, windows will literally lie to you.
[08:16:50] <InPhase> They really held onto that 96 DPI myth for a long time.
[08:17:19] <Izem> yeah I think my setup windows is simulating 96 dpi
[08:17:31] <Arahael> InPhase: Yep.
[08:17:45] <vdamewood> Izem: I thought the myth was 72 dpi
[08:17:50] <vdamewood> err InPhase
[08:18:07] <deniska> it's not specific to windows, every platform went through a transition like that
[08:18:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:18:30] <deniska> "oops, screens are not all the same anymore"
[08:18:33] <pilyn> Where do young programmers hang out nowadays?
[08:18:39] <Arahael> deniska: It's particularly problematic on windows since pixel-specific layout is so common.
[08:18:42] <vdamewood> Coffe shops
[08:18:51] <Izem> pilyn: discord probably
[08:18:52] <xeno> what's the difference between an IETF WG draft and Editors Draft? 
[08:19:02] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[08:19:51] *** Joins: rany (~rany@user/rany)
[08:20:30] <Arahael> Vietnamese mint tastes odd in instant noodles.  Don't really recommend that combination.
[08:20:55] <Arahael> xeno: You'd have to ask the editor.
[08:21:57] <deniska> Arahael: it was common on any platform in the 90s, it's just that backwards compatibility is their business model
[08:22:37] <Arahael> deniska: *was* their business model.
[08:23:44] <deniska> Arahael: office 97 won't run on win11?
[08:24:17] <Arahael> deniska: Doubt it.
[08:26:24] <Arahael> deniska: Oh, I misread that as win 3.11, but even so, ,actually it probably would work.  But MS is no-longer really pushing it now.
[08:26:45] <Arahael> They're pushing "security", especially when it comes to the Microsoft Store.
[08:28:05] <deniska> Yeah, someone in MS looked at Mac AppStore and thought "it's a huge success, let's do it too" :)
[08:28:34] <Arahael> Yeah, in terms of the api game, however, it's a massive mistake.
[08:28:41] <Arahael> Eg, suddenly, you can't use Embarcadero Delphi.
[08:29:27] <deniska> (the irony being that *mac* appstore is probably not that succesful)
[08:30:04] <Arahael> I'd disagree, I find the mac app store really good these days, and with M1, even better.
[08:30:12] *** Joins: rany_ (~rany@user/rany)
[08:30:14] <Arahael> Many iOS apps work just fine on the mac, now.
[08:30:32] *** Quits: jamea97 (~jamea@189.231.118.46) (Ping timeout: 245 seconds)
[08:30:34] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[08:31:17] <deniska> Maybe, but if I wanted to run iOS apps, I may as well just get an ipad which is cheaper :)
[08:31:24] *** Quits: rany (~rany@user/rany) (Ping timeout: 258 seconds)
[08:31:53] <Arahael> It just means you have so many more apps.
[08:31:56] <deniska> quite a lot of software people get macs for is not really in the appstore
[08:32:20] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[08:32:28] <Arahael> Yeah, well, probably about half my apps are in the app store.
[08:32:32] <Arahael> (That I use, I mean)
[08:32:43] <deniska> that means another half isn't :)
[08:32:51] <vdamewood> I got my IRC client in the App Store.
[08:33:33] *** Joins: wei2912 (~wei2912@112.199.250.21)
[08:34:59] *** jkl1337 is now known as jkl
[08:35:45] <Arahael> vdamewood: Yeah?
[08:35:58] <vdamewood> Arahael: Yeah.
[08:36:04] <Arahael> deniska: The other half are things like specific versions of xcode, Parallels, and the like. :)
[08:36:14] <Arahael> vdamewood: Linky pls :)
[08:36:37] <deniska> Arahael: or, for other people, adobe suite, affinity suite, whatever people use to make music etc
[08:37:31] <deniska> For companies like that it just doesn't make sense to go through a clunky review process, not being able to charge for updates, and pay 30% of the revenue to Apple in exchange ofâ€¦ file hosting?
[08:37:40] <vdamewood> Arahael: https://apps.apple.com/us/app/textual-7/id1262957439
[08:37:41] <bayaz> Title: â€ŽTextual 7 
[08:37:45] <Izem> I'm suprised no one has made a open/public group for software distribution
[08:38:31] <Izem> app stores show that it can work
[08:39:36] <Izem> also maybe the app store will work against them when it's time for antitrust stuff
[08:39:40] <Arahael> vdamewood: You wrote textual!?
[08:39:52] <Arahael> vdamewood: That's regarded as one of the better irc clients for ios!
[08:40:28] <Izem> neat
[08:40:32] <deniska> Izem: linux distros are more or less that, appstores for opensource programs
[08:40:37] <vdamewood> Arahael: Oh, oops. Ambiguous word usage. I got it *from* the App Store.
[08:40:50] <Arahael> vdamewood: Ah. :)  Ok. :)
[08:40:55] <deniska> vdamewood: at this point just roll with it :)
[08:40:57] <Izem> deniska: yeah it's pretty close
[08:41:15] <vdamewood> (I'm a user, not a developer. Everyone was talking about getting things from the App Store.)
[08:41:17] *** Joins: dylan_ (~dylan_@210.213.254.119)
[08:41:26] *** Quits: dylan_ (~dylan_@210.213.254.119) (Read error: Connection reset by peer)
[08:41:31] <Izem> though audits and some other stuff would be nice
[08:41:47] <vdamewood> deniska: Can't, I already 'fessed up.
[08:41:50] <Izem> hence why I think it could be some org
[08:42:00] *** Joins: dylan_ (~dylan_@210.213.254.122)
[08:42:25] <Arahael> I generally prefer to get things from the app store as I know they'll be reasonably sandboxed.
[08:42:26] *** Quits: dylan_ (~dylan_@210.213.254.122) (Read error: Connection reset by peer)
[08:43:26] <deniska> it doesn't have to be that way, an OS could provide a way to sandbox programs from any source
[08:43:28] *** Joins: arcatech (~arcatech@user/arcatech)
[08:44:09] <Arahael> deniska: Yes, but I don't want to configure my own sandboxes.
[08:44:12] <deniska> they only choose to seamlessly implement it for appstore apps because, well, they need to sell this idea to users
[08:44:35] *** Joins: dylan_ (~dylan_@210.213.254.122)
[08:45:01] *** Quits: dylan_ (~dylan_@210.213.254.122) (Read error: Connection reset by peer)
[08:45:05] <Arahael> deniska: It's also a consistent thing that users can understand.  How would Parallels be sandboxed?
[08:45:19] <Arahael> (actually they probably can now, but before Big Sur, no way)
[08:47:04] <deniska> one can do MS thing and kinda-sorta force all virtualization solutions to use a single OS provided virtualization mechanism
[08:47:28] <Arahael> deniska: That's what Apple's done, actually, in Big Sur.
[08:47:39] <Izem> what does apple use?
[08:47:42] <Arahael> deniska: Except not "kinda-sorta", but actually force.
[08:47:57] *** Quits: ChromaCat248_ (~ChromaCat@user/chromacat248) (Remote host closed the connection)
[08:48:03] <Arahael> Izem: Which virtualisation, you mean? Something apple made themselves.
[08:48:40] <Izem> yeah, wouldn't that defeat the purpose of other folks trying to make applications in that area if you have to use a provide api?
[08:48:44] <deniska> I've heard people complaining how some features are just not supported well by their VM framework though
[08:49:03] <Arahael> Izem: How so?
[08:49:33] <Izem> they have their own vm stuff which might be better
[08:49:50] <deniska> it's analogous to kvm in linux or hyper-v in windows
[08:50:04] <deniska> you still need something like qemu to make use of kvm
[08:50:09] <Izem> oh cool it's in kernel?
[08:50:18] *** Quits: kmh__ (~kmh@p2e511f3b.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[08:50:39] <vdamewood> II thought Hyper-V could be used standalone.
[08:50:48] <deniska> all virtualization is either in the kernel, or runs on bare metal and virtualizes that kernel :)
[08:50:50] <Arahael> I don't think macs have hyper-v.
[08:50:59] <Arahael> (Not M1's, anyway)
[08:51:12] <vdamewood> Arahael: Uhh, no one said they did?
[08:51:26] <Arahael> vdamewood: Just clarifying, then. :)
[08:51:45] <Arahael> And yeah, until Big Sur, the major virtualisation apps would just load their own kernel extensiosn to do their virtualisation stuff in the kernel.
[08:52:08] <deniska> vdamewood: in typical MS fashion, hyper-v is a name of both a userspace part of the solution, and the actual hypervisor which can be used by other tools like virtualbox
[08:52:18] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[08:53:01] <vdamewood> deniska: Ah okay.
[08:53:45] <beaky> nice i like microsoft
[08:53:53] *** Joins: Raguile (~Raguile@user/raguile)
[08:53:59] <deniska> all developers developers developers like microsoft :)
[08:54:56] <AlexDelarge> lol, that balmer video
[08:55:29] *** Joins: kmh (~kmh@p200300df5f48b60021684a849b895c4f.dip0.t-ipconnect.de)
[08:56:20] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[08:58:05] *** Joins: ChromaCat248 (~ChromaCat@user/chromacat248)
[08:58:09] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[08:58:23] *** Joins: TechTest (uid283215@id-283215.tooting.irccloud.com)
[09:03:00] *** Quits: kmh (~kmh@p200300df5f48b60021684a849b895c4f.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[09:03:02] *** Quits: pagnol (~user@014198154145.ctinets.com) (Ping timeout: 272 seconds)
[09:03:50] *** Joins: saribro (~swinnenb@user/swinnenb)
[09:07:24] *** Quits: nekobased (~based@user/nekobit) (Quit: night)
[09:07:28] *** Quits: swinnenb (~swinnenb@user/swinnenb) (Ping timeout: 272 seconds)
[09:08:23] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[09:12:15] *** Joins: Quacc (~youbuntoe@user/quacc)
[09:14:27] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[09:14:27] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[09:14:27] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[09:17:43] *** Joins: kmh (~kmh@p200300df5f48d100dc3f22e5691fdfcd.dip0.t-ipconnect.de)
[09:21:37] *** Quits: nekodesu (~nano@user/nekobit) (Ping timeout: 258 seconds)
[09:22:04] *** Joins: nekodesu (~nano@user/nekobit)
[09:27:06] *** Quits: amigojapan (uid86330@id-86330.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[09:29:02] *** Joins: amigojapan (uid86330@id-86330.brockwell.irccloud.com)
[09:29:46] *** Joins: dylan_ (~dylan_@210.213.254.122)
[09:30:18] *** Quits: dylan_ (~dylan_@210.213.254.122) (Read error: Connection reset by peer)
[09:32:07] <Izem> is event driven programming the same as message passing?
[09:32:22] <d3x0r> somewhat
[09:32:37] <d3x0r> event driven doesn't require a response 
[09:32:49] <d3x0r> message passing can expect some sort of ack
[09:33:29] <kodah> did somone say... developers?!
[09:33:56] *** Quits: Volund (~IceChat95@184-089-055-145.res.spectrum.com) (Quit: For Sale: Parachute. Only used once, never opened, small stain.)
[09:35:09] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[09:44:51] *** Joins: dylan_ (~dylan_@210.213.254.122)
[09:45:05] *** Joins: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler)
[09:45:18] *** Quits: dylan_ (~dylan_@210.213.254.122) (Read error: Connection reset by peer)
[09:51:39] *** Orimendix is now known as Zeturic
[09:53:37] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[09:53:41] *** Quits: Zeturic (~Orimendix@50-25-46-156.krmtcmta02.res.dyn.suddenlink.net) (Quit: Leaving)
[09:55:27] *** Joins: dylan_ (~dylan_@210.213.254.122)
[09:55:54] *** Quits: dylan_ (~dylan_@210.213.254.122) (Read error: Connection reset by peer)
[09:57:07] *** Quits: Raguile (~Raguile@user/raguile) (Ping timeout: 256 seconds)
[09:58:18] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 240 seconds)
[09:59:52] <Izem> also, a callback in this context is a function pointer?
[10:01:57] <beaky> so rust statically links everything is there now a problem with updating that vulnerability out
[10:04:22] <GeDaMo> Izem: basically, yes
[10:08:20] <Izem> beaky: does this mean they have to redistribute a new binary?
[10:09:29] <GeDaMo> Which vulnerability?
[10:09:55] <Izem> something about the octal format affects the net packages in go, rust and some other languages
[10:10:05] <Izem> leading 0 in 0127.0.0.1 etc
[10:10:11] <GeDaMo> Ah
[10:13:27] <GeDaMo> Apparently the expected behaviour is to treat leading zeroes on IP addresses as octal? That seems like a bad idea
[10:13:35] <GeDaMo> I know that languages parse numbers like that
[10:13:52] <Izem> GeDaMo: https://www.bleepingcomputer.com/news/security/go-rust-net-library-affected-by-critical-ip-address-validation-vulnerability/ 
[10:13:54] <bayaz> Title: Go, Rust "net" library affected by critical IP address validation vulnerability 
[10:14:11] <Izem> GeDaMo: yeah pretty bad
[10:14:18] <GeDaMo> Yeah, that's what I'm reading
[10:14:28] <Izem> iirc there was some similar issues in C like this way back
[10:14:52] <GeDaMo> C parses numbers with leading zeroes as octal and it's bad idea there, too :P
[10:15:15] <GeDaMo> There should have been a more explicit octal prefix like 0x for hex
[10:15:28] <Izem> oh it still does? I thought that was just old C
[10:15:56] <GeDaMo> Javascript does it too
[10:16:05] <Izem> parsing is important, who knew :P
[10:16:25] *** Quits: Quacc (~youbuntoe@user/quacc) (Quit: WeeChat 3.2)
[10:16:58] *** Joins: dylan_ (~dylan_@210.213.254.122)
[10:17:18] <smlck> some programming languges, like Raku, allow arbitrary base for numeric literals..
[10:17:25] *** Quits: dylan_ (~dylan_@210.213.254.122) (Read error: Connection reset by peer)
[10:17:57] <GeDaMo> Yeah, I think Smalltalk has base#number
[10:19:15] <Izem> it's suprising it took this long for such a bug to happen
[10:19:30] *** Quits: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net) (Ping timeout: 258 seconds)
[10:20:02] <Izem> or impressive rather
[10:20:06] <GeDaMo> I'm pretty sure that octal parsing related bugs have been around for a while :P
[10:20:18] <Izem> oh :P
[10:22:39] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[10:23:35] <GeDaMo> https://thedailywtf.com/articles/Thank-you,-Javascript
[10:23:36] <bayaz> Title: Thank you, Javascript 
[10:23:42] <Izem> when I think about it, if you statically think it would make sense to also compile really fast
[10:25:52] <beaky> yes because go and rust both use static linking by default then they must recompile and redistribute the entire rust universe
[10:28:02] <AlexDelarge> lol
[10:28:30] <AlexDelarge> you know there IS a ##rust channel
[10:28:44] <Izem> not as bad for go iirc the language compiles in 1 second?
[10:29:05] <Izem> but that was a while back
[10:35:02] *** Joins: sdftyguijokpl (~sdftyguij@eth-west-pareq2-46-193-2-167.wb.wifirst.net)
[10:35:11] <Izem> heh "parseInt('09') == ..."
[10:36:13] <Izem> I suppose it's ok to drop octal from general purpose languages going forward, or support any base
[10:36:48] <Izem> octal still has it's uses though :P
[10:38:07] <causative_> wow that's atrocious
[10:38:29] <causative_> what uses does octal have?
[10:39:16] <GeDaMo> Same as hex really, it's just less used nowadays
[10:39:18] *** Joins: bcd (~bcd@94-209-7-85.cable.dynamic.v4.ziggo.nl)
[10:39:20] <Izem> it's in unix file permissions
[10:39:49] <Izem> hex gets used more in situations when you want to deal with bits
[10:39:54] <Izem> but yeah
[10:40:05] <causative_> kind of a special case, unix file permissions
[10:40:32] <Izem> it also just makes I lot of sense overall on older ibm architectures
[10:40:41] <Izem> but not sure what else presently
[10:41:02] <Izem> I guess if you can come up with any mapping that makes use of octal
[10:42:09] <Izem> are virtual machines / containers the next version of worse is better?
[10:45:52] *** Joins: Yonle (~Yonle@user/yonle)
[10:46:51] <Arahael> Izem: Sort of.  Kinda.  Not really.
[10:47:15] <Arahael> Izem: The trend of dockerizing everything is, kinda, but it solves real devops issues, too.
[10:49:03] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:49:19] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 250 seconds)
[10:49:33] *** Quits: eyynet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[10:49:47] *** Quits: Izem (~Izem@8.21.10.18) (Ping timeout: 258 seconds)
[10:50:45] *** Joins: dylan_ (~dylan_@210.213.254.122)
[10:51:26] *** Quits: dylan_ (~dylan_@210.213.254.122) (Read error: Connection reset by peer)
[10:51:38] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[10:54:29] <vdamewood> x86 machine code makes more sense in octal than hex.
[10:55:35] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[10:57:50] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 258 seconds)
[10:57:51] *** Lord_of_Life_ is now known as Lord_of_Life
[11:00:02] *** Joins: Izem (~Izem@8.21.10.18)
[11:01:30] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[11:02:26] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 258 seconds)
[11:02:39] *** Joins: dylan_ (~dylan_@210.213.254.127)
[11:03:07] *** Quits: dylan_ (~dylan_@210.213.254.127) (Read error: Connection reset by peer)
[11:03:31] *** Joins: user51 (~user51@176.228.90.248)
[11:04:51] *** Joins: dylan_ (~dylan_@210.213.254.127)
[11:05:48] *** Quits: dylan_ (~dylan_@210.213.254.127) (Read error: Connection reset by peer)
[11:05:52] *** Joins: Raguile (~Raguile@user/raguile)
[11:06:01] *** Joins: epolanski (uid312403@id-312403.brockwell.irccloud.com)
[11:07:37] *** Joins: vysn (~vysn@user/vysn)
[11:08:43] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[11:09:47] *** Joins: img (~img@user/img)
[11:10:48] *** Quits: sdftyguijokpl (~sdftyguij@eth-west-pareq2-46-193-2-167.wb.wifirst.net) (Ping timeout: 276 seconds)
[11:13:28] <Arahael> vdamewood: One thing that's been surprising me a bit doing a side project in iOS...  It seems that a database is not needed nearly as often as people think they are.
[11:13:55] <Arahael> vdamewood: I've written what is basically a read-only family tree viewer app...  And it appears that using nothing more than an http cache is adequate.
[11:14:16] <vin> What is wrong with this debug macro https://godbolt.org/z/jMbE9soPh ?
[11:14:18] <bayaz> Title: Compiler Explorer - C++ (x86-64 gcc 11.2) 
[11:14:39] *** Joins: dylan_ (~dylan_@210.213.254.123)
[11:15:05] *** Quits: dylan_ (~dylan_@210.213.254.123) (Read error: Connection reset by peer)
[11:16:04] <vin> I get your point though. I will consider this design for my main application. 
[11:16:20] <vin> Ah wrong window
[11:17:18] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Ping timeout: 256 seconds)
[11:19:12] <GeDaMo> vin: use {} instead of ()
[11:20:08] <Arahael> vin: And also avoid using macros if you can avoid it, there's a bit less reason to use them in C++, though this is...  Passible.
[11:20:27] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[11:21:53] *** Joins: img (~img@user/img)
[11:22:22] *** Quits: Yonle (~Yonle@user/yonle) (Ping timeout: 258 seconds)
[11:22:44] <Izem> yeah may as well use templates
[11:23:01] *** Joins: Yonle (~Yonle@user/yonle)
[11:23:08] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[11:25:51] *** Joins: dylan_ (~dylan_@210.213.254.122)
[11:26:08] <vin> Thanks GeDaMo 
[11:26:18] *** Quits: dylan_ (~dylan_@210.213.254.122) (Read error: Connection reset by peer)
[11:26:28] <vin> Arahael: because it can cause bugs or bad performance?
[11:26:51] *** Joins: Hax0r (~Hax0r@93.168.133.215)
[11:26:53] *** Joins: pncl1 (~Hax0r@2001:16a2:c054:571b:540d:f930:6f33:2)
[11:26:55] *** Quits: Hax0r (~Hax0r@93.168.133.215) (Max SendQ exceeded)
[11:27:13] *** Quits: pncl1 (~Hax0r@2001:16a2:c054:571b:540d:f930:6f33:2) (Remote host closed the connection)
[11:27:16] *** Joins: Hax0r (~Hax0r@2001:16a2:c054:571b:540d:f930:6f33:2)
[11:27:30] *** Quits: Hax0r (~Hax0r@2001:16a2:c054:571b:540d:f930:6f33:2) (Remote host closed the connection)
[11:27:41] *** Joins: Hax0r (~Hax0r@2001:16a2:c054:571b:540d:f930:6f33:2)
[11:29:51] *** Joins: dylan_ (~dylan_@210.213.254.122)
[11:30:18] *** Quits: dylan_ (~dylan_@210.213.254.122) (Read error: Connection reset by peer)
[11:30:32] *** Quits: LiftLeft (~LiftLeft@191.96.150.118) (Ping timeout: 245 seconds)
[11:32:29] <Arahael> vin: Both, basically macros are crude textual substitution, and C++ has far better options that are aware of the syntax and the compiler is much more able to optimise if you don't use macros.
[11:33:13] *** Joins: dylan_ (~dylan_@210.213.254.122)
[11:34:03] *** Quits: soapsudsxx (~soapsudsx@209.221.40.143) (Remote host closed the connection)
[11:34:57] *** Joins: programmar (~whatever@118.69.128.37)
[11:35:26] *** Quits: dylan_ (~dylan_@210.213.254.122) (Read error: Connection reset by peer)
[11:36:11] *** Quits: Izem (~Izem@8.21.10.18) (Quit: Going offline, see ya! (www.adiirc.com))
[11:36:22] <CoderGuy> is there a proper name for a gui object that is a label that when clicked you can edit the text like a textbox?
[11:36:45] <programmar> since most of the time my scripts running as a parent process alone is fast enough to solve stuffs, does adding in more threadings will make anything faster ? i heard it can since it does things simutaneously but according to the CPU it is just continous context switching tho, will it be the same ?
[11:39:17] *** Joins: inky_ (~inky@45.133.107.61)
[11:39:35] <vin> Arahael: what would be an alternative? Parse args and enable debug messages if asked for?
[11:40:00] *** Quits: blahboybaz (~blahboyba@c-73-221-100-152.hsd1.wa.comcast.net) (Ping timeout: 258 seconds)
[11:40:25] *** Quits: Yonle (~Yonle@user/yonle) (Read error: Connection reset by peer)
[11:40:48] <Arahael> vin: Perhaps something like a function called D that optionally executes a lambda you provide?
[11:41:13] *** Joins: Yonle (~Yonle@user/yonle)
[11:41:29] <Arahael> D([]{ cout << "Hey..." << endl; })  Though, frankly, I'd say use a real logging framework.
[11:42:00] *** Quits: inky (~inky@188.115.225.35) (Ping timeout: 272 seconds)
[11:42:11] *** Joins: dylan_ (~dylan_@210.213.254.122)
[11:42:27] <vin> Hmm I don't get how this would perform better than macro. Since without -DDEBUG flag I expect the compiler to reove all D() related code.
[11:42:38] *** Quits: dylan_ (~dylan_@210.213.254.122) (Read error: Connection reset by peer)
[11:43:50] *** Quits: inky_ (~inky@45.133.107.61) (Ping timeout: 258 seconds)
[11:44:02] <CoderGuy> https://codepen.io/ValYouW/pen/XKYOLq   this is a perfect example of an Editable Label, now is it really called EditableLabel ? or is it EditableTextLabel?  or is there a different name for this?
[11:44:08] <Arahael> vin: D can choose not to execute the lambda at all, and presumeably, potentially remove it entirely. If you want to optimise further, you could use compile-time functions, as well.
[11:44:15] <vdamewood> vin: Use an inline function, and use if(DEBUG) in the inline function. This would require that DEBUG be set to a non-zero integer value, though. so -DDEBUG=1.
[11:45:16] *** Joins: aradesh (~aradesh@user/aradesh)
[11:45:30] <vdamewood> (Well, and -DDEBUG=0 for non-debug builds.
[11:46:23] <vin> vdamewood: Yes I can see how this can be better than plain macro.
[11:46:30] <vin> Arahael: I will check it out
[11:47:19] <vdamewood> vin: Though, you would probably want to, instead, do a little #ifndef DEBUG  #define DEBUG 0 #endif in the source code to just make that part easier.
[11:48:41] <vdamewood> Unfortunately -DFOO uses the preprocessor so it's hard to escape the preprocessor when using it, but at the least it's good to use the preprocessor as little as possible.
[11:50:15] *** Joins: khanred (~khanred@45-17-211-63.lightspeed.okcbok.sbcglobal.net)
[11:50:20] *** Quits: khanred (~khanred@45-17-211-63.lightspeed.okcbok.sbcglobal.net) (Changing host)
[11:50:20] *** Joins: khanred (~khanred@user/khanred)
[11:50:24] *** Parts: khanred (~khanred@user/khanred) ()
[11:50:29] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[11:50:30] <vdamewood> vin; Also, note that I'm using the regular language if and not the preprocessor #if.
[11:50:59] <vdamewood> The compiler should be smart enough to optimize out if(0) {} blocks. And if the function is line, the function call gets optimized out, too.
[11:51:15] <vdamewood> s/line/inline/
[11:51:56] *** Joins: sdftyguijokpl (~sdftyguij@eth-west-pareq2-46-193-2-167.wb.wifirst.net)
[11:52:31] <vin> vdamewood: Thanks
[11:52:38] *** Joins: NEYi (~NEYi@109.251.216.38)
[11:52:56] *** Quits: NEYi (~NEYi@109.251.216.38) (Client Quit)
[11:54:57] *** Quits: Yonle (~Yonle@user/yonle) (Ping timeout: 258 seconds)
[11:55:47] *** Joins: Yonle (~Yonle@user/yonle)
[12:00:14] *** Quits: Yonle (~Yonle@user/yonle) (Remote host closed the connection)
[12:00:31] *** Joins: Yonle (~Yonle@user/yonle)
[12:05:36] *** Quits: Yonle (~Yonle@user/yonle) (Quit: Quit)
[12:06:11] *** Joins: Yonle (~Yonle@user/yonle)
[12:06:34] *** Quits: Yonle (~Yonle@user/yonle) (Client Quit)
[12:07:06] *** Joins: kmh_ (~kmh@p5dcc60d3.dip0.t-ipconnect.de)
[12:07:21] *** Quits: sdftyguijokpl (~sdftyguij@eth-west-pareq2-46-193-2-167.wb.wifirst.net) (Ping timeout: 276 seconds)
[12:07:32] *** Joins: inky_ (~inky@45.133.107.61)
[12:07:33] *** Joins: Yonle (~Yonle@user/yonle)
[12:08:49] *** Joins: xa0s (~xa0s@mab.sdf.org)
[12:09:08] *** Quits: kmh (~kmh@p200300df5f48d100dc3f22e5691fdfcd.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[12:09:09] *** Quits: Yonle (~Yonle@user/yonle) (Client Quit)
[12:09:24] *** Joins: Yonle (~Yonle@user/yonle)
[12:11:30] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Ping timeout: 240 seconds)
[12:11:39] *** Joins: NEYi (~NEYi@109.251.216.38)
[12:11:43] *** Quits: NEYi (~NEYi@109.251.216.38) (Remote host closed the connection)
[12:12:16] *** Quits: inky_ (~inky@45.133.107.61) (Ping timeout: 256 seconds)
[12:20:16] *** Joins: NEYi (~NEYi@109.251.216.38)
[12:22:29] *** Joins: inky_ (~inky@188.115.225.35)
[12:28:51] *** Joins: zaher (~zaher@37.48.154.196)
[12:34:13] *** Joins: zaher_ (~zaher@37.48.157.163)
[12:35:24] <vdamewood> I just tried to implement what I just described, and for some reason the compiler still includes an instantiation of my debug function that just adds to the stack, pops the stack, and returns, though the if(DEBUG) line does actually remove the whole call of the lambda from the code. Though, the debug function is gone in -O2.
[12:36:13] *** Quits: Thedarkb (~Thedarkb@85.255.232.89) (Read error: Connection reset by peer)
[12:36:21] *** Quits: Raguile (~Raguile@user/raguile) (Ping timeout: 256 seconds)
[12:36:41] *** Joins: Thedarkb (~Thedarkb@85.255.232.89)
[12:37:07] *** Quits: zaher (~zaher@37.48.154.196) (Ping timeout: 258 seconds)
[12:37:30] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[12:39:23] *** Quits: smuxki (~smuxki@2804:14d:baa0:85c6:40fc:232a:7dbe:1555) (Quit: quit)
[12:40:02] *** Quits: elastic_dog (~elastic_d@ary207.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[12:42:07] *** Joins: mrig (~mrig@user/mrig)
[12:43:52] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[12:46:39] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[12:47:01] *** Joins: Thedarkb1 (~Thedarkb@85.255.232.89)
[12:49:19] <vdamewood> Time for sleep, maybe.
[12:49:23] *** Quits: Thedarkb (~Thedarkb@85.255.232.89) (Ping timeout: 258 seconds)
[12:50:09] *** Quits: programmar (~whatever@118.69.128.37) (Ping timeout: 258 seconds)
[12:50:11] *** Joins: CoderGuy2 (~CoderGuy@2601:644:101:4f20:a9f9:d7cf:d089:867f)
[12:50:31] <Arahael> vdamewood: G'night!
[12:50:56] *** Parts: CoderGuy2 (~CoderGuy@2601:644:101:4f20:a9f9:d7cf:d089:867f) ()
[12:51:11] *** Joins: Cyp_ (~cyp@192038129116.mbb.telenor.dk)
[12:51:20] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[12:51:33] *** Quits: Cyp (~cyp@192038129116.mbb.telenor.dk) (Quit: Konversation terminated!)
[12:53:08] *** CoderGuy is now known as Guest7335
[12:53:36] *** Joins: CoderGuy (~CoderGuy@user/coderguy)
[12:53:54] *** Quits: Guest7335 (~CoderGuy@user/coderguy) (Ping timeout: 240 seconds)
[12:57:07] *** Joins: One39Dev (LordShiva@user/one39dev)
[12:57:36] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[13:01:32] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[13:02:42] *** Joins: Raguile (~Raguile@user/raguile)
[13:06:04] *** Joins: Guest84 (~Guest84@152.57.179.154)
[13:06:06] *** Quits: Hax0r (~Hax0r@2001:16a2:c054:571b:540d:f930:6f33:2) (Ping timeout: 256 seconds)
[13:08:18] *** Quits: xkuru (~xkuru@user/xkuru) (Remote host closed the connection)
[13:10:59] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[13:13:55] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 258 seconds)
[13:15:20] *** Quits: Guest84 (~Guest84@152.57.179.154) (Quit: Client closed)
[13:15:49] *** Joins: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com)
[13:19:42] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[13:19:42] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[13:25:02] *** Quits: Yonle (~Yonle@user/yonle) (Read error: Connection reset by peer)
[13:28:58] *** Quits: audiocat (~audio@2603-8081-1800-00ad-9156-ebc1-6da9-7c72.res6.spectrum.com) (Ping timeout: 272 seconds)
[13:33:13] *** Joins: zwr (~zwr@2804:d45:b966:fb00:6582:f5e7:70df:5179)
[13:34:11] *** Joins: archie (~archie@host-87-11-211-115.retail.telecomitalia.it)
[13:34:29] <archie> hello
[13:34:56] *** Joins: vpw (~vpw@223.184.78.92)
[13:36:40] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:37:02] *** Joins: menace (~someone@2001:a61:34ed:d601:3969:a1d4:9377:6c28)
[13:40:16] *** Quits: menace (~someone@2001:a61:34ed:d601:3969:a1d4:9377:6c28) (Changing host)
[13:40:16] *** Joins: menace (~someone@user/menace)
[13:40:20] *** menace is now known as Deknos
[13:40:23] *** Quits: Mija (~Mija@user/mija) (Quit: Mija)
[13:40:45] *** Joins: magla (~gelignite@55d45882.access.ecotel.net)
[13:41:18] <mercenary> vdamewood: one could implement the same thing with 'extern int Debug; if (Debug){func()}' and depending on build linking in a module with 'int Debug=1' or 'int Debug=0'
[13:41:31] *** Joins: dre (~dre@2001:8003:c932:c301:201a:59c7:e77c:7ce)
[13:41:49] <mercenary> If the compiler is clever enough to figure _that_ out is another question
[13:46:19] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[13:47:12] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 245 seconds)
[13:47:38] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[13:49:48] <mrig> Hello :)
[13:49:57] <mrig> What would be the opposite of concurrent?
[13:50:38] <causative_> sequential
[13:50:44] <mrig> It seems that by the definition it could be asynchronous, but that in programming terms this is not so?
[13:51:15] <mrig> causative_: oh that will do nicely, thank you.
[13:51:27] <archie> mrig sequential
[13:51:36] *** Joins: sunbae (~euk@82.85-87-220.dynamic.clientes.euskaltel.es)
[13:51:58] *** ghostdragon is now known as Tom
[13:51:58] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[13:52:03] <archie> not asynchronous for sure
[13:52:14] *** Tom is now known as Tom1
[13:52:37] <mrig> I'm scratching my head on async still, wondering if coroutines on a single thread are async or not?
[13:53:05] <mrig> probably implementation defined, but also whether JS are or not.
[13:53:47] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[13:54:38] <mrig> Thanks! Sequential fits nicely.
[13:54:44] *** Joins: programmar (~whatever@118.69.128.37)
[13:55:05] *** programmar is now known as networker
[13:55:17] *** Parts: networker (~whatever@118.69.128.37) ()
[13:56:08] <causative_> asynchronous in CS means that things could be happening at the same time and the order of events is not guaranteed
[13:57:00] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:57:09] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[13:57:16] *** Joins: entuland (~entuland@user/entuland)
[13:57:25] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:58:00] *** Joins: SGautam (uid286066@id-286066.charlton.irccloud.com)
[13:58:05] *** Joins: Kill-Animals (~Kill-Anim@199-7-158-224.eng.wind.ca)
[13:58:10] *** Quits: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler) (Remote host closed the connection)
[13:58:31] *** Joins: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler)
[13:59:10] <mrig> So the branched part of concurrent code is also asynchronous?
[14:00:12] <causative_> usually *only* the branched part, if by the branched part you mean things happening in parallel
[14:00:38] *** archie is now known as sehika
[14:00:47] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[14:00:50] <no_gravity> Good Morning
[14:02:05] <mrig> Yes only the branched part, ok this makes senses, great. I've been trying to fit async into my mental model for some time and not quite known where to put it; Seems to have dropped into place now.
[14:02:13] <mrig> no_gravity: Hi.
[14:02:44] <no_gravity> mrig: o/
[14:02:47] <no_gravity> Is there a formula for how a virus spreads in a grid? The first virus could infect its 4 neighbors. So in step 2, there are 5. Those 5 have 8 neighbors. So in step 3 there are 13 ...
[14:03:03] <causative_> code is asynchronous when it is not synchronized - meaning, it is asynchronous with different threads or processes are going off doing their own jobs for a while without rigidly coordinating with each other
[14:03:15] <causative_> s/with/when/
[14:03:26] <GeDaMo> no_gravity: sounds like a cellular automata
[14:03:59] <no_gravity> Yes, you could simulate it in game of life with the rule "never die, birth if at least one neighbor".
[14:05:27] *** Joins: Hax0r (~Hax0r@2001:16a2:c054:571b:540d:f930:6f33:2)
[14:05:29] *** Quits: Raguile (~Raguile@user/raguile) (Ping timeout: 260 seconds)
[14:05:54] *** Quits: zwr (~zwr@2804:d45:b966:fb00:6582:f5e7:70df:5179) (Ping timeout: 240 seconds)
[14:06:30] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Ping timeout: 268 seconds)
[14:07:36] <causative_> well you start with 1 and add 4, then 8, then 12, etc.  so it's 1 + 4 * (1 + 2 + ...) which is 1 + 4 * n(n+1)/2, starting at n=0 for 1
[14:07:46] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Ping timeout: 240 seconds)
[14:08:12] <no_gravity> causative_: Well, I am looking for a non-iterative formula.
[14:08:28] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[14:08:28] <GeDaMo> https://en.wikipedia.org/wiki/Von_Neumann_neighborhood
[14:08:31] <bayaz> Title: Von Neumann neighborhood - Wikipedia 
[14:08:34] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[14:09:16] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[14:09:36] *** Quits: entuland (~entuland@user/entuland) (Read error: Connection reset by peer)
[14:11:28] *** Quits: Kill-Animals (~Kill-Anim@199-7-158-224.eng.wind.ca) (Ping timeout: 272 seconds)
[14:11:57] <sehika> hi GeDaMo
[14:12:13] <GeDaMo> Hi sehika :)
[14:12:40] <sehika> archie here. The hex modification is working perfectly <3
[14:13:02] *** Quits: inky_ (~inky@188.115.225.35) (Ping timeout: 245 seconds)
[14:13:12] <GeDaMo> hex modification?
[14:13:55] <sehika> change the position of 0xba and 0xf5 to swap ctrl fn buttons, few days ago
[14:14:18] *** Joins: immibis_ (~hexchat@62.156.144.218)
[14:14:59] <GeDaMo> Ah, right :)
[14:15:01] <no_gravity> Somone in #math suggests this formula: nr_alive = step^2 + (step-1)^2
[14:15:06] *** Joins: byanka_ (~byanka@91.244.10.3)
[14:15:07] *** Joins: SmokenatorZ4 (~Smokenato@189-46-177-3.dsl.telesp.net.br)
[14:15:32] *** Joins: inky_ (~inky@188.115.225.35)
[14:15:32] *** Quits: SmokenatorZ (~Smokenato@189-46-177-3.dsl.telesp.net.br) (Ping timeout: 245 seconds)
[14:15:32] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Ping timeout: 245 seconds)
[14:15:32] *** Quits: anderson (~ande@134.209.221.71) (Ping timeout: 245 seconds)
[14:15:33] *** SmokenatorZ4 is now known as SmokenatorZ
[14:15:41] *** Joins: geonic9 (~geonic@144.202.104.101)
[14:15:41] *** Quits: geonic9 (~geonic@144.202.104.101) (Changing host)
[14:15:41] *** Joins: geonic9 (~geonic@user/geonic)
[14:15:41] <user51> any recommendations for books about the hardware side?
[14:15:47] *** Quits: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler) (Ping timeout: 244 seconds)
[14:16:02] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[14:16:11] *** Quits: cis (~cis@user/cis) (Ping timeout: 252 seconds)
[14:16:13] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[14:16:16] *** Quits: kuku (~kuku@user/kuku) (Remote host closed the connection)
[14:16:22] *** Quits: anton (anton@tloks.com) (Ping timeout: 256 seconds)
[14:16:22] *** Quits: PlanckWalk (~Planck@user/planckwalk) (Ping timeout: 256 seconds)
[14:16:27] *** Quits: rubychellos (uid511313@id-511313.stonehaven.irccloud.com) (Ping timeout: 250 seconds)
[14:16:28] *** Quits: kwilczynski (sid379192@user/kwilczynski) (Ping timeout: 272 seconds)
[14:16:28] *** Quits: matrael_ (matrael@PLEASEJUSTLETME.BE) (Ping timeout: 272 seconds)
[14:16:30] *** Joins: kuku (~kuku@pool-108-27-57-106.nycmny.fios.verizon.net)
[14:16:34] *** Joins: jinsun (~quassel@user/jinsun)
[14:16:35] *** Joins: PlanckWalk (~Planck@user/planckwalk)
[14:16:44] *** Quits: Puyo (sid500577@user/daniel11420) (Ping timeout: 252 seconds)
[14:16:44] *** Quits: znemo_ (sid500529@id-500529.highgate.irccloud.com) (Ping timeout: 252 seconds)
[14:16:44] *** Quits: greyblue9 (sid500829@id-500829.charlton.irccloud.com) (Ping timeout: 252 seconds)
[14:16:47] *** Quits: immibis (~hexchat@62.156.144.218) (Ping timeout: 245 seconds)
[14:16:53] *** Quits: Pent (sid313808@id-313808.tooting.irccloud.com) (Ping timeout: 250 seconds)
[14:16:53] *** Quits: bjs (sid190364@user/bjs) (Ping timeout: 250 seconds)
[14:16:56] *** Quits: derfj (sid19429@tinside.irccloud.com) (Ping timeout: 256 seconds)
[14:17:06] *** Quits: schna (sid484866@id-484866.brockwell.irccloud.com) (Ping timeout: 272 seconds)
[14:17:12] *** Quits: byanka (~byanka@91.244.10.3) (Ping timeout: 245 seconds)
[14:17:13] *** Quits: mawk (mawk@wireguard/contributor/mawk) (Ping timeout: 245 seconds)
[14:17:17] *** Quits: ullbeking (sid5364@id-5364.charlton.irccloud.com) (Ping timeout: 252 seconds)
[14:17:17] *** Quits: mweckbecker (~matthias@weckbecker.name) (Ping timeout: 252 seconds)
[14:17:26] *** Joins: mawk (mawk@serveur.io)
[14:17:27] *** Quits: mawk (mawk@serveur.io) (Changing host)
[14:17:27] *** Joins: mawk (mawk@wireguard/contributor/mawk)
[14:17:30] *** Quits: geonic (~geonic@user/geonic) (Ping timeout: 256 seconds)
[14:17:30] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Ping timeout: 256 seconds)
[14:17:30] *** geonic9 is now known as geonic
[14:17:41] *** Joins: jazzy2 (~jaziz@2600:380:8562:6b2:9c1f:23c2:2ca2:238b)
[14:17:48] <no_gravity> I manually verified it up to step 3 now. I am a believer :)
[14:17:50] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[14:18:04] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (Ping timeout: 256 seconds)
[14:18:12] *** Joins: Pent (sid313808@id-313808.tooting.irccloud.com)
[14:18:17] *** Joins: anton (anton@tloks.com)
[14:18:23] *** Quits: monchi (sid347418@id-347418.charlton.irccloud.com) (Ping timeout: 252 seconds)
[14:18:27] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Ping timeout: 245 seconds)
[14:18:38] *** Quits: matt|home (~matt@adsl-74-233-58-97.mia.bellsouth.net) (Ping timeout: 256 seconds)
[14:18:38] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 256 seconds)
[14:18:38] *** Quits: Electric_Sheep (~esheep_zn@pool-100-19-29-200.phlapa.fios.verizon.net) (Ping timeout: 256 seconds)
[14:18:41] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[14:18:47] *** Joins: greyblue9 (sid500829@id-500829.charlton.irccloud.com)
[14:19:00] *** Quits: mmlj4 (~mmlj4@ip68-230-228-233.no.no.cox.net) (Ping timeout: 272 seconds)
[14:19:05] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[14:19:07] *** Joins: ullbeking (sid5364@id-5364.charlton.irccloud.com)
[14:19:11] <beaky> prove it correct by induction
[14:19:17] *** Quits: NChief_ (~nchief@irc.nortv.net) (Ping timeout: 245 seconds)
[14:19:17] *** Joins: kwilczynski (sid379192@user/kwilczynski)
[14:19:26] *** Joins: monchi (sid347418@id-347418.charlton.irccloud.com)
[14:19:29] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) (Ping timeout: 250 seconds)
[14:19:29] *** Quits: itok (sid418430@id-418430.charlton.irccloud.com) (Ping timeout: 252 seconds)
[14:19:33] *** Joins: znemo_ (sid500529@highgate.irccloud.com)
[14:19:38] *** Quits: Brando753 (~Brando753@ec2-34-218-254-59.us-west-2.compute.amazonaws.com) (Ping timeout: 272 seconds)
[14:19:46] *** Quits: Burgundy (~yomon@5-12-93-72.residential.rdsnet.ro) (Ping timeout: 256 seconds)
[14:19:46] <no_gravity> I am more of the intuitive/emperical type.
[14:19:52] *** Quits: ttill (~ttill@5cf3ff07.rev.dansknet.dk) (Read error: Connection reset by peer)
[14:20:02] *** Quits: Tips|Cloud (sid62231@id-62231.charlton.irccloud.com) (Ping timeout: 252 seconds)
[14:20:02] *** Quits: stkw0 (~quassel@ns3046126.ip-91-121-8.eu) (Ping timeout: 252 seconds)
[14:20:08] *** Quits: cncr04s (~cncr04s@afxr.net) (Ping timeout: 245 seconds)
[14:20:31] *** Joins: ElectricSheep (~esheep_zn@pool-100-19-29-200.phlapa.fios.verizon.net)
[14:20:42] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 252 seconds)
[14:20:54] *** Quits: enteral_ (~enteral@discovery.whatbox.ca) (Ping timeout: 272 seconds)
[14:20:54] *** Quits: jazzy (~jaziz@2600:380:8562:6b2:9c1f:23c2:2ca2:238b) (Ping timeout: 256 seconds)
[14:20:57] *** Joins: digilink (~digilink@user/digilink)
[14:20:58] *** Quits: jaskal (jaskal@user/jaskal) (Ping timeout: 245 seconds)
[14:21:00] *** Joins: bjs (sid190364@user/bjs)
[14:21:28] *** Quits: berndj (~berndj@ns1.linksynergy.co.za) (Ping timeout: 256 seconds)
[14:21:41] *** Quits: MrMobius_ (~MrMobius@208.58.206.154) (Ping timeout: 252 seconds)
[14:22:05] *** Quits: BenLand100 (~bland@user/benland100) (Ping timeout: 250 seconds)
[14:22:32] *** Quits: inky_ (~inky@188.115.225.35) (Ping timeout: 258 seconds)
[14:22:36] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Ping timeout: 256 seconds)
[14:23:10] *** Joins: zwr (~zwr@2804:d45:b966:fb00:6d22:e98c:feed:45dd)
[14:23:16] *** Joins: cis_ (cis@2600:3c03::f03c:91ff:fe7a:3df4)
[14:23:40] *** cis_ is now known as Guest1770
[14:24:18] *** Quits: neocow (~neocow@185.38.14.210) (Ping timeout: 256 seconds)
[14:24:42] *** Quits: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se) (Ping timeout: 245 seconds)
[14:25:32] *** Quits: jelly (jelly@user/jelly) (Ping timeout: 252 seconds)
[14:26:34] *** Quits: kodah (~kodah@user/kodah) (Ping timeout: 256 seconds)
[14:26:41] *** Joins: MrMobius (~MrMobius@208.58.206.154)
[14:26:52] *** Joins: Akera4 (~Guest38@149.255.222.33)
[14:27:06] <Akera4> Hello, anyone want to partner on a python project, making some side income. I have an idea it's promising and have already made the prototype.
[14:27:11] *** Quits: Gozrad (~Gozrad@46.232.210.50) (Ping timeout: 252 seconds)
[14:27:17] *** Joins: cncr04s (~cncr04s@afxr.net)
[14:27:30] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[14:27:37] *** Quits: fingercomp (~fingercom@fomalhaut.me) (Ping timeout: 245 seconds)
[14:28:02] *** Quits: Notiche_ (~quassel@irk.rojekti.fi) (Ping timeout: 245 seconds)
[14:28:54] <beaky> why programmers should not learn coq http://www.pathsensitive.com/2021/03/why-programmers-shouldnt-learn-theory.html
[14:28:54] <bayaz> Title: Why Programmers Should(n't) Learn Theory 
[14:29:21] <beaky> type theory is just a theory
[14:29:54] *** Parts: no_gravity (~no_gravit@user/no-gravity/x-5639427) ()
[14:30:24] *** Quits: repne_scasb (~inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 272 seconds)
[14:30:45] *** Quits: liberius (~liberius@user/liberius) (Ping timeout: 250 seconds)
[14:30:48] *** Joins: Tips|Cloud (sid62231@id-62231.charlton.irccloud.com)
[14:30:59] *** Joins: Gozrad (~Gozrad@46.232.210.50)
[14:31:05] *** Joins: kodah (~kodah@user/kodah)
[14:31:29] *** Joins: enteral (~enteral@discovery.whatbox.ca)
[14:31:46] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[14:31:59] <user51> impractical engineering? :D
[14:32:03] *** Joins: BenLand100 (~bland@64.253.0.103.dyn-cm-pool70.pool.hargray.net)
[14:32:03] *** Quits: BenLand100 (~bland@64.253.0.103.dyn-cm-pool70.pool.hargray.net) (Changing host)
[14:32:03] *** Joins: BenLand100 (~bland@user/benland100)
[14:32:07] *** Joins: matt|home (~matt@adsl-74-233-58-97.mia.bellsouth.net)
[14:32:08] *** Quits: MrMobius (~MrMobius@208.58.206.154) (Ping timeout: 252 seconds)
[14:32:35] *** Joins: MrMobius (~MrMobius@208.58.206.154)
[14:32:37] *** Quits: tofran (~tofran@37.189.158.134) (Ping timeout: 245 seconds)
[14:32:50] <vin> I am looking for fast inplace parallel merge sort implementations in cpp or C, any come to mind?
[14:33:12] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[14:33:38] *** Joins: derfj (sid19429@id-19429.tinside.irccloud.com)
[14:33:51] *** Joins: fingercomp (~fingercom@fomalhaut.me)
[14:33:52] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Ping timeout: 245 seconds)
[14:33:58] *** Joins: tofran (~tofran@37.189.158.134)
[14:34:06] *** Joins: Notiche (~quassel@irk.rojekti.fi)
[14:34:13] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[14:34:18] *** Joins: berndj (~berndj@ns1.linksynergy.co.za)
[14:34:42] *** Joins: Brando753 (~Brando753@ec2-34-218-254-59.us-west-2.compute.amazonaws.com)
[14:34:42] *** Quits: cation (cation@user/cation) (Ping timeout: 245 seconds)
[14:34:42] *** Quits: falx (~falx@user/falx) (Ping timeout: 245 seconds)
[14:35:14] *** Joins: NChief (~nchief@irc.nortv.net)
[14:35:18] *** Joins: inhahe__ (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[14:35:18] *** Joins: itok (sid418430@id-418430.charlton.irccloud.com)
[14:35:21] *** Quits: Hax0r (~Hax0r@2001:16a2:c054:571b:540d:f930:6f33:2) (Remote host closed the connection)
[14:35:23] *** Joins: MrMobius_ (~MrMobius@208.58.206.154)
[14:35:34] *** Joins: cation (cation@user/cation)
[14:35:46] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[14:35:53] *** Joins: liberius (~liberius@user/liberius)
[14:35:57] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 245 seconds)
[14:36:14] *** Joins: rubychellos (uid511313@id-511313.stonehaven.irccloud.com)
[14:37:16] *** Joins: Puyo (sid500577@user/daniel11420)
[14:37:20] *** Quits: BenLand100 (~bland@user/benland100) (Ping timeout: 256 seconds)
[14:37:21] *** Joins: matrael (matrael@PLEASEJUSTLETME.BE)
[14:37:38] *** Quits: MrMobius (~MrMobius@208.58.206.154) (Ping timeout: 252 seconds)
[14:37:51] *** Joins: anderson (~ande@134.209.221.71)
[14:37:52] *** Joins: falx (~falx@user/falx)
[14:39:11] *** Joins: stkw0 (~quassel@ns3046126.ip-91-121-8.eu)
[14:40:04] *** Quits: droid3 (~fffd@024-177-015-135.res.spectrum.com) (Remote host closed the connection)
[14:41:08] *** Joins: jelly (jelly@user/jelly)
[14:41:29] *** Quits: zhiayang (~zhiayang@user/zhiayang) (Ping timeout: 252 seconds)
[14:41:30] *** Quits: berndj (~berndj@ns1.linksynergy.co.za) (Excess Flood)
[14:41:41] *** Joins: pncl1 (~Hax0r@2001:16a2:c054:571b:540d:f930:6f33:2)
[14:42:26] *** Joins: zhiayang (~zhiayang@user/zhiayang)
[14:42:37] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Ping timeout: 245 seconds)
[14:42:51] *** Quits: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com) (Ping timeout: 258 seconds)
[14:43:02] *** Joins: BenLand100 (~bland@64.253.0.103.dyn-cm-pool70.pool.hargray.net)
[14:43:02] *** Joins: xormor (~pamipette@user/pamipetteri)
[14:43:02] *** Quits: BenLand100 (~bland@64.253.0.103.dyn-cm-pool70.pool.hargray.net) (Changing host)
[14:43:02] *** Joins: BenLand100 (~bland@user/benland100)
[14:43:10] <xormor> is the Euclidean distance used in graphics programming, for example when writing a 2D or 3D graphics engine?
[14:43:22] *** Quits: pncl1 (~Hax0r@2001:16a2:c054:571b:540d:f930:6f33:2) (Remote host closed the connection)
[14:43:53] *** Joins: berndj (~berndj@ns1.linksynergy.co.za)
[14:44:01] *** Joins: Hax0r (~Hax0r@2001:16a2:c054:571b:540d:f930:6f33:2)
[14:44:17] *** Quits: zwr (~zwr@2804:d45:b966:fb00:6d22:e98c:feed:45dd) (Ping timeout: 245 seconds)
[14:44:18] *** Joins: schna (sid484866@id-484866.brockwell.irccloud.com)
[14:44:30] *** Joins: zwr (~zwr@2804:d45:b966:fb00:6d22:e98c:feed:45dd)
[14:44:31] *** Joins: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se)
[14:45:02] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[14:45:04] <GeDaMo> Yes
[14:45:07] *** Quits: Guest1770 (cis@2600:3c03::f03c:91ff:fe7a:3df4) (Ping timeout: 245 seconds)
[14:46:07] <xormor> GeDaMo, I think this is the formula in mathematical notation: Euclidean_distance = sqrt( (x1-x0)Â² + (y1-y0)Â² )
[14:46:18] *** Joins: Crescendo (~Crescendo@user/crescendo)
[14:46:21] *** Joins: cis_ (cis@2600:3c03::f03c:91ff:fe7a:3df4)
[14:46:30] *** Joins: inky_ (~inky@46.70.181.170)
[14:46:37] <xormor> I wrote a program based on what Stallman wrote in his essay about software freedom, actually 2 programs, a C version and a C++ version.
[14:46:43] <GeDaMo> Yes
[14:46:45] *** cis_ is now known as Guest8968
[14:46:52] <xormor> https://clairlair.xyz/~pamipetteri/programming/Euclidean_distance.c
[14:46:55] <bayaz> Type: text/plain; charset=utf-8 Size: 267 B 
[14:46:58] <GeDaMo> Although if you only want to compare distances, you can do without the sqrt
[14:47:17] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[14:47:17] <xormor> https://clairlair.xyz/~pamipetteri/programming/Euclidean_distance.cpp
[14:47:18] <bayaz> Type: text/plain; charset=utf-8 Size: 298 B 
[14:47:25] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[14:47:47] <xormor> GeDaMo, what do you mean "compare" the distances?
[14:47:51] <beaky> nice i like the euclidean distance
[14:48:05] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[14:48:10] <GeDaMo> If you want to check if one distance is bigger or smaller than another distance e.g. dist1 < dist2
[14:48:23] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[14:48:53] *** Joins: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com)
[14:49:23] *** Quits: anon16_ (~anon16@user/anon16) (Ping timeout: 250 seconds)
[14:49:36] *** Joins: src_ (~src@user/src)
[14:49:39] <GeDaMo> Square root is an expensive operation, best to avoid it if possible
[14:50:33] *** Quits: sunbae (~euk@82.85-87-220.dynamic.clientes.euskaltel.es) (Quit: leaving)
[14:50:39] <xormor> GeDaMo, I see
[14:50:39] *** Quits: Deknos (~someone@user/menace) (Read error: Connection reset by peer)
[14:51:00] *** Joins: Deknos (~someone@2001:a61:34ed:d601:3969:a1d4:9377:6c28)
[14:51:59] *** Quits: Deknos (~someone@2001:a61:34ed:d601:3969:a1d4:9377:6c28) (Read error: Connection reset by peer)
[14:52:14] *** Joins: Deknos (~someone@2001:a61:34ed:d601:3969:a1d4:9377:6c28)
[14:52:37] *** Quits: src (~src@user/src) (Ping timeout: 245 seconds)
[14:53:27] *** Quits: Guest8968 (cis@2600:3c03::f03c:91ff:fe7a:3df4) (Ping timeout: 245 seconds)
[14:53:36] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[14:53:38] *** Joins: anon16_ (~anon16@user/anon16)
[14:54:32] *** Joins: mei (~mei@user/mei)
[14:54:33] *** Joins: Guest9019 (jaskal@irc.servertex.com)
[14:54:33] *** Quits: Guest9019 (jaskal@irc.servertex.com) (Changing host)
[14:54:33] *** Joins: Guest9019 (jaskal@user/jaskal)
[14:54:40] *** Joins: cis_ (cis@2600:3c03::f03c:91ff:fe7a:3df4)
[14:54:52] *** Joins: mweckbecker (~matthias@weckbecker.name)
[14:55:04] *** cis_ is now known as Guest7516
[14:58:08] *** Joins: olle (~olle@i577BC825.versanet.de)
[14:58:55] *** Joins: plastico (~plastico@neomutt/plastico)
[14:59:26] *** Quits: sehika (~archie@host-87-11-211-115.retail.telecomitalia.it) (Quit: Client closed)
[15:07:13] *** Joins: rtypo (~alex@user/rtypo)
[15:10:03] *** Joins: Burgundy (~yomon@5-12-93-72.residential.rdsnet.ro)
[15:12:30] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[15:14:03] *** Joins: mickey8 (~user@user/mickey)
[15:14:06] *** Quits: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com) (Ping timeout: 272 seconds)
[15:15:18] *** Quits: One39Dev (LordShiva@user/one39dev) (Quit: Leaving)
[15:17:06] *** Quits: amigojapan (uid86330@id-86330.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[15:17:44] *** Quits: akevinhuang2 (~thekevinh@user/thekevinhuang) (Ping timeout: 258 seconds)
[15:20:11] *** Joins: Mangy_Dog (~Mange@user/mangy-dog/x-7397214)
[15:20:30] *** Quits: Thedarkb-Desktop (~beno@2001:bb6:b404:188f:187e:e729:527c:f26) (Ping timeout: 272 seconds)
[15:21:37] *** Joins: Thedarkb-Desktop (~beno@2001:bb6:b404:188f:f46b:971d:efb4:c555)
[15:21:42] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 272 seconds)
[15:22:25] *** Joins: Auron (~Auron956@user/auron)
[15:23:25] *** Joins: Yonle (~Yonle@user/yonle)
[15:24:01] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:98ca:6cf3:da61:6805) (Read error: Connection reset by peer)
[15:29:53] *** Quits: src_ (~src@user/src) (Ping timeout: 252 seconds)
[15:30:42] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:31f5:3810:3d54:91c8) (Read error: Connection reset by peer)
[15:32:16] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[15:32:28] *** Joins: mickey8 (~user@user/mickey)
[15:32:31] *** Joins: Twipply (~Twipply@user/twipply)
[15:36:47] *** Quits: olle (~olle@i577BC825.versanet.de) (Ping timeout: 245 seconds)
[15:36:52] *** Quits: pilyn (~pilyn@user/pilyn) (Quit: Leaving)
[15:37:51] *** Joins: amigojapan (uid86330@id-86330.brockwell.irccloud.com)
[15:44:30] *** Quits: inky_ (~inky@46.70.181.170) (Ping timeout: 272 seconds)
[15:46:15] *** Quits: NChief (~nchief@irc.nortv.net) (Changing host)
[15:46:15] *** Joins: NChief (~nchief@user/nchief)
[15:46:29] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Quit: AmigaOS PPC 4.1 +E +U1 // AmIRC 68K)
[15:47:44] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[15:49:48] *** Joins: jaysicks (~jaysicks@84-236-11-22.pool.digikabel.hu)
[15:50:03] *** Joins: bailsman (~Mm1@xls01.freecult.org)
[15:50:20] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:53:52] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[15:53:54] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[16:01:30] *** Joins: olle (~olle@i577BC825.versanet.de)
[16:02:25] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Read error: Connection reset by peer)
[16:02:39] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Ping timeout: 276 seconds)
[16:03:05] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[16:03:56] *** Joins: Rounin (~david@84.212.130.215)
[16:06:00] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[16:06:37] *** Joins: pulse (~pulse@user/pulse)
[16:07:30] *** Quits: zaher_ (~zaher@37.48.157.163) (Ping timeout: 240 seconds)
[16:08:00] *** Joins: sunbae (~euk@82.85-87-220.dynamic.clientes.euskaltel.es)
[16:09:04] *** Joins: zaher (~zaher@37.48.151.116)
[16:10:32] *** Quits: bcd (~bcd@94-209-7-85.cable.dynamic.v4.ziggo.nl) (Ping timeout: 272 seconds)
[16:15:04] *** Joins: zaher_ (~zaher@37.48.159.181)
[16:17:30] *** Quits: zaher (~zaher@37.48.151.116) (Ping timeout: 240 seconds)
[16:19:48] *** Quits: magla (~gelignite@55d45882.access.ecotel.net) (Quit: Stay safe!)
[16:20:04] *** Quits: xormor (~pamipette@user/pamipetteri) (Quit: Leaving)
[16:24:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[16:25:50] *** Quits: kuku (~kuku@pool-108-27-57-106.nycmny.fios.verizon.net) (Quit: Leaving)
[16:26:03] *** Joins: kuku (~kuku@pool-108-27-57-106.nycmny.fios.verizon.net)
[16:26:04] *** Quits: kuku (~kuku@pool-108-27-57-106.nycmny.fios.verizon.net) (Changing host)
[16:26:04] *** Joins: kuku (~kuku@user/kuku)
[16:26:27] *** Joins: zaher (~zaher@37.48.158.30)
[16:29:06] *** Quits: zaher_ (~zaher@37.48.159.181) (Ping timeout: 240 seconds)
[16:29:23] <bailsman> Let's say I have 64 producer threads that put stuff on a queue, and 64 middlemen that take stuff off the queue and send out network calls, all synchronizing on a mutex when they touch the queue. How much gain can I expect by cutting out the middlemen and having the producers do the http calls directly? Or is it irrelevant since synchronization is really fast and a tiny% of the time it takes to wait for
[16:29:26] <bailsman> the http call to return?
[16:30:45] <bailsman> I don't have any intuition for this at all - I could do an experiment, but without intuition I'm not sure if I would get the correct result.
[16:30:56] <bailsman> Maybe I would screw something unrelated up
[16:32:44] <Valware> better make backups before you experiment then ;D
[16:35:53] *** Joins: entuland (~entuland@user/entuland)
[16:36:00] <bailsman> I understand that the mutex basically forces up to 127 other threads to wait if they want to do anyhting with the queue, but if all operations on the queue are (say) 1 usec, and the overall time of each network call is 200usec, then it's not going to be a major bottleneck
[16:36:10] *** Quits: Yonle (~Yonle@user/yonle) (Quit: Quit)
[16:36:47] *** Joins: zaher_ (~zaher@37.48.159.77)
[16:37:19] *** Joins: Yonle (~Yonle@user/yonle)
[16:38:12] *** Quits: segnior (segnior@user/segnior) (Ping timeout: 268 seconds)
[16:38:31] <bailsman> I wonder if there's such a thing as a lockless queue
[16:39:44] *** Quits: zaher (~zaher@37.48.158.30) (Ping timeout: 256 seconds)
[16:39:54] *** Quits: tkob (~tkob@user/thekingofbandit) (Ping timeout: 240 seconds)
[16:39:57] *** Joins: zaher (~zaher@37.48.181.45)
[16:41:13] *** Quits: Scarecr0w (internot@user/scarecr0w) (Quit: Scarecr0w's bouncer crashed or server rebooting...)
[16:41:16] *** Joins: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com)
[16:42:00] *** Quits: Yonle (~Yonle@user/yonle) (Ping timeout: 256 seconds)
[16:42:12] <Arahael> There are.
[16:42:43] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[16:42:56] *** Joins: segnior (~segnior@user/segnior)
[16:43:06] *** Joins: Yonle (~Yonle@user/yonle)
[16:43:08] *** Quits: zaher_ (~zaher@37.48.159.77) (Ping timeout: 256 seconds)
[16:44:17] <bailsman> Can you give me some intuition about whether this problem is even worth worrying about? Looks like even the (un)locking itself can be on the order of 10usec, so probably, right? I should probably redesign it to avoid the queue and the middlemen entirely.
[16:44:23] *** Joins: Scarecr0w (~intern0t@shell.xshellz.com)
[16:44:26] *** Quits: Akera4 (~Guest38@149.255.222.33) (Quit: Client closed)
[16:44:40] *** Scarecr0w is now known as Guest869
[16:45:05] *** Quits: Guest869 (~intern0t@shell.xshellz.com) (Changing host)
[16:45:06] *** Joins: Guest869 (~intern0t@user/scarecr0w)
[16:46:05] *** Joins: tkob (tkob@shell.xshellz.com)
[16:46:05] *** Quits: tkob (tkob@shell.xshellz.com) (Changing host)
[16:46:05] *** Joins: tkob (tkob@user/thekingofbandit)
[16:47:47] <bailsman> Actually, hmmm....
[16:49:17] *** Joins: enoq (~enoq@194-208-179-35.lampert.tv)
[16:49:25] *** Quits: olle (~olle@i577BC825.versanet.de) (Ping timeout: 250 seconds)
[16:49:57] *** Quits: Deknos (~someone@2001:a61:34ed:d601:3969:a1d4:9377:6c28) (Changing host)
[16:49:57] *** Joins: Deknos (~someone@user/menace)
[16:50:02] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[16:50:59] *** Quits: Yonle (~Yonle@user/yonle) (Read error: Connection reset by peer)
[16:51:16] <PlanckWalk> Does every producer-task correspond to exactly one network call?
[16:51:44] <PlanckWalk> Or at least, one sequence of network calls, not parallel
[16:52:36] <bailsman> OK, that's what is making me hestitate. Currently, yes, but I can envision wanting to batch them together in the future. The possibility of batching makes a queue more flexible because I could have less middleman than producers and just batch them together.
[16:52:50] <bailsman> In the very near term, however, yes, each call contains one message only.
[16:53:05] <bailsman> I found this: https://max0x7ba.github.io/atomic_queue/
[16:53:07] <bayaz> Title: atomic_queue 
[16:53:47] *** Quits: sunbae (~euk@82.85-87-220.dynamic.clientes.euskaltel.es) (Quit: :D)
[16:55:43] <PlanckWalk> There are fast conncurrent data structures for this sort of case, yes
[16:56:52] <PlanckWalk> Whether it makes a difference would depend upon where your bottlenecks currently are.
[16:57:36] <bailsman> In my mind, an expert would be able to take one look at a design and immediately tell whether or not it's going to be a bottleneck
[16:57:44] <PlanckWalk> Nah
[16:57:52] <bailsman> but maybe how it actually works is that an expert is just so comfortable coding things that they can try out a few different designs and measure
[16:57:55] <PlanckWalk> Too much depends upon details of tasks and external factors
[16:58:05] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[16:58:10] <CoderGuy> i'm gonna just ask this again cuz i got no response
[16:58:21] <PlanckWalk> They might be able to tell whether a design is flexible enough to accomodate changes to those factors though
[16:58:37] <CoderGuy> https://codepen.io/ValYouW/pen/XKYOLq   is this an EditableLabel or an EditableTextLabel OR is there another name for this type of a class gui object?
[16:59:20] <bailsman> CoderGuy: I'm sorry I don't understand you question. Can you describe what your goal is?
[16:59:41] <CoderGuy> to name a class gui object that behaves like the EditableLabel example
[16:59:55] <CoderGuy> I need a name for it, and idk what it's actually called
[17:00:13] <CoderGuy> Currently I have Label and TextBox but I need one that is essentially both
[17:00:34] <PlanckWalk> I get a big blank space in the bottom half of the window, and three panels of fairly dense code in the top half
[17:00:45] <bailsman> I've never heard of either of those things before. EditableLabel intuitively sounds exactly like what it is doing, so that sounds fine to me.
[17:01:01] <CoderGuy> you've never heard of a TextBox?
[17:01:07] <bailsman> PlanckWalk: you see the label in the bottom half? It's clickable and then turns into a textbox.
[17:01:11] <PlanckWalk> No
[17:01:22] <CoderGuy> hmm maybe it's the browser you're on
[17:01:27] <CoderGuy> or if you have javascript disabled?
[17:01:39] <PlanckWalk> Nah, javascript is allowed
[17:01:49] <bailsman> For me (Firefox) it says "Name: Yuval" and I can click Yuval and it turns into a textbox
[17:01:51] <PlanckWalk> I have an adblocker though, maybe it (of the site) objects
[17:01:57] <PlanckWalk> or* the site
[17:01:58] <CoderGuy> yeah maybe
[17:02:02] <bailsman> I'm actually a little surprised by this design, labels are not usually editable
[17:02:10] <bailsman> It is counterintuitive
[17:02:17] <CoderGuy> umm
[17:02:23] <CoderGuy> everything has a use case
[17:02:42] <bailsman> Sometimes you'll have a little pencil icon next to things that makes things turn into an editable field. That would be more intuitive to me.
[17:02:45] <user51> noose cases
[17:03:03] <user51> bailsman: it looks too much like the mspaint icon though :/
[17:03:05] <CoderGuy> yeah I just like making it so if you click the label you can edit it
[17:03:29] <bailsman> OK, whatever floats your boat. Maybe this doesn't have a standard name because it is nonstandard behavior
[17:03:44] <CoderGuy> yeah normally people combine the 2 objects together
[17:03:48] <bailsman> EditableLabel sounds fine to me
[17:03:49] <CoderGuy> I just want a version that is both
[17:03:56] <CoderGuy> and why not EditableTextLabel ?
[17:04:06] <bailsman> That sounds fine to me too.
[17:04:13] <CoderGuy> dangit lol
[17:04:17] <bailsman> It sounds a little like a bikeshed discussion to be honest.
[17:04:19] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[17:05:34] <CoderGuy> alright well if nothing currently exists I guess whatever I pick will be fine
[17:08:36] *** Quits: Hax0r (~Hax0r@2001:16a2:c054:571b:540d:f930:6f33:2) (Quit: Leaving)
[17:08:58] *** Joins: Izem (~Izem@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca)
[17:11:13] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[17:13:46] *** Joins: eXistenZ (~biskit@bzq-109-67-145-130.red.bezeqint.net)
[17:13:53] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2)
[17:20:25] <beaky> why is goto related to computation under classical logic https://www.cs.cmu.edu/~fp/courses/15317-f09/lectures/08-classical-programs.pdf
[17:20:26] <bayaz> Type: application/pdf Size: 190.4 kB 
[17:22:26] *** Joins: ixil (~ixil@82.197.178.137)
[17:22:55] *** Joins: alycidyne (~kova@91-160-172-214.subs.proxad.net)
[17:24:00] <TJ-> beaky: surely a goto is just another way of expressing a relative sum; IP+=(TARGET - IP) 
[17:24:10] <alycidyne> Hello, what if storage devices were actually Harvard architecture processors where the data address space was the device storage? You think such an arch oculd implement a file system without the CPU?
[17:24:50] <beaky> nice i like goto
[17:25:01] <Lyn> is Flightplan a good beginner's tool for deploying?
[17:25:04] *** Quits: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com) (Ping timeout: 256 seconds)
[17:25:23] <beaky> yes the flash translation layer is like a fielsystem
[17:25:46] <bailsman> OK thinking ahead a little bit (which you should probably never do) - if I actually want to implement batching with MPMC, how do I atomically pop X items off the queue without locking? Surely you cannot do such a thing, that was the whole point of a lockless queue. But if you don't do that, then it's going to take far longer than it should for batches to fill up in my consumers, adding latency, right?
[17:26:44] *** Joins: dankle (~dankle@2603-7080-1800-2600-f40b-3b99-9202-007f.res6.spectrum.com)
[17:26:53] <alycidyne> beaky: oh but this isn't on the layer of a flash translation ;)
[17:27:00] <alycidyne> this is much, *much* lower
[17:27:11] <pulse> you should always look ahead
[17:27:20] <pulse> just don't look so far ahead it freezes you in the present :p
[17:27:47] <bailsman> So I actually don't want to have a lockless queue at all do I? I want to lock while consuming, to make sure I get X messages to go one thread for a full batch, then unlock.
[17:29:00] <pulse> i have 0 idea what MPMC is
[17:29:58] *** jazzy2 is now known as jazzy
[17:30:02] <bailsman> multiple producer multiple consumer - sorry it's probably not a thing. That's just what I was calling it
[17:30:33] <bailsman> I have X producers putting things in a queue and Y consumers where X/Y is my batch size. I need to keep latency as low as possible.
[17:31:13] *** Joins: diamondbond (~diamondbo@175.157.62.11)
[17:32:40] <alycidyne> bailsman: throwing in my two cents from what I know about networking, why not Y queues, one per consumer? to avoid HOL blocking
[17:33:02] <alycidyne> bailsman: (if you can afford Y queues ofc)
[17:33:29] <bailsman> Yes, that makes sense. But how do you select which queue to go to as a producer? You just try them in order, moving on to the next if full?
[17:34:06] <bailsman> Looking at this atomic_queue thing, it looks like it can push in nanoseconds, so that might actually be viable.
[17:34:53] <alycidyne> bailsman: well, if some element needs to go to a particular consumer, then you'd have a protocol. But apparently you have something different
[17:35:17] <alycidyne> where the protocol at least specifies some way of addressing consumers
[17:35:27] <bailsman> Any element can go to any consumer, but if I'm batching them up, I want to fill up a batch as soon as possible and send it out
[17:36:06] <TJ-> sounds like a typical network multicast
[17:36:27] <alycidyne> bailsman: I would try adapting a work-stealing scheme to this, in that case
[17:37:49] <bailsman> Like if I have 8 consumers and 64 producers, the first 8 producers should go to 1 consumer so that it can start working on a full batch, rather than distributing it to all consumers that will all have 1/8th of a batch.
[17:38:28] <bailsman> Maybe I need to use a lockless queue and then put locking on top of it at the consumer side? Is that defeating the point?
[17:38:44] <bailsman> That would still be lockfree on the producer side
[17:39:24] <bailsman> I guess I have a multiple-producer-single-consumer scenario, I just want to swap out the consumer when it's busy processing a batch
[17:39:56] <alycidyne> What requires you to fill a batch exactly??
[17:41:43] <bailsman> alycidyne: I don't understand your question. Are you asking why not use batch size of 1 (no batching)?
[17:41:52] <bailsman> Sometimes batching can be more efficient.
[17:42:04] <alycidyne> bailsman: no, rather, why not distribute across consumers?
[17:42:08] <bailsman> it adds latency
[17:42:44] <alycidyne> I meant fill *one* batch instead of several
[17:43:00] <bailsman> That's what I want to achieve
[17:43:14] <bailsman> I want to fill one batch at a time. So I guess I have MPSC
[17:43:47] <bailsman> If I fill all batches concurrently, the first producer is waiting a lot longer, because it has to wait for 56 other producers before it finally gets processed rather than only 7
[17:44:33] <alycidyne> bailsman: wait, so all producers are interleaved?
[17:44:33] *** Quits: xff0x (~xff0x@2001:1a81:533f:2500:e6ab:58ee:e458:ff3a) (Ping timeout: 258 seconds)
[17:45:19] *** Joins: xff0x (~xff0x@2001:1a81:533f:2500:9e0:616e:42de:43f7)
[17:46:44] <bailsman> The scenario I'm now thinking about is 64 producers, 8 consumers. I wonder if the best way to implement MPSC is just MPMC + locking on the consumers
[17:47:47] *** Joins: Atque (~Atque@user/atque)
[17:49:06] <alycidyne> bailsman: why does the first producer have to wait for 56 others if all the batches are filled concurrently? Because its packets could end up behind the packets of others?
[17:50:48] <alycidyne> In which case, the first producer might wait less if it filled up only one batch, but the others might end up waiting longer - I assume all producers are equivalent
[17:51:39] <bailsman> The first producer ends up in bucket 1, the second producer ends up in bucket 2, and so forth, only after 56 other producers is bucket 1 guaranteed to fill up and get processed.
[17:51:57] <bailsman> So I want to ensure only 1 bucket fills at a time - Multiple producer single consumer.
[17:53:35] <alycidyne> bailsman: oh wait, your consumers only process a batch if it is full...
[17:53:39] <bailsman> yes
[17:54:23] <alycidyne> Not at all what I was thinking/am used to. Normally, a CPU processes *whenever* the queue is not empty
[17:54:31] <bailsman> wait, is that unusual? maybe my mental model is wrong
[17:54:49] <bailsman> the consumers have to do a network call to another service to process, they're not doing the work themselves
[17:54:59] <bailsman> I was thinking batching might help with fixed overhead per call
[17:55:07] *** Quits: gargus (~user@118.208.102.226) (Quit: Leaving)
[17:55:23] <alycidyne> bailsman: it does, but only if the interval between requests is less than the processing time
[17:55:40] <bailsman> much less
[17:56:09] <alycidyne> The normal pattern is: interrupt, process, if there are more loop to (2), sleep
[17:56:23] <alycidyne> Then in this case yes, keep a queue
[17:57:17] *** Quits: SGautam (uid286066@id-286066.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[17:58:05] *** Quits: jaysicks (~jaysicks@84-236-11-22.pool.digikabel.hu) (Remote host closed the connection)
[17:58:11] <alycidyne> As it turns out, most *interrupting* traffic follows a "burst" model, where a lot of requests arrive faster than can be processed. That's what a queue is normally for. If you're *constantly* getting requests, another solution may indeed be in order.
[17:58:48] *** Joins: jaysicks (~jaysicks@84-236-11-22.pool.digikabel.hu)
[17:59:14] *** Joins: rsx (~dummy@ppp-188-174-157-141.dynamic.mnet-online.de)
[18:00:23] <bailsman> I'm expecting requests to arrive constantly
[18:00:31] <bailsman> The only reason I need the queue is for batching
[18:01:44] <alycidyne> bailsman: just me trying to understand the problem, it sounds like a lot of sensors feeding to a CPUs
[18:02:34] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 272 seconds)
[18:02:35] <bailsman> I have 64 producers in a loop constantly feeding new work items. I want to process work items in batches of 8 by sending them to a backend service, with the lowest latency possible.
[18:03:04] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:03:31] *** Joins: Crescendo (~Crescendo@user/crescendo)
[18:05:06] <alycidyne> bailsman: Right, I think I get it. It's called more "blocking" (as in blocks of data, not blocking of processing) rather than batching, but I get the idea
[18:08:31] <alycidyne> In which case, if the producers' transmission rate is constant, try to create a global clock to which the consumers can process the data. No notifications needed, no communication other than for data, etc.
[18:08:57] <alycidyne> Minimum overhead.
[18:09:44] *** Joins: zaher_ (~zaher@37.48.190.100)
[18:10:05] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[18:10:28] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[18:11:04] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Client Quit)
[18:12:12] *** Quits: zaher (~zaher@37.48.181.45) (Ping timeout: 245 seconds)
[18:12:18] *** Quits: dankle (~dankle@2603-7080-1800-2600-f40b-3b99-9202-007f.res6.spectrum.com) (Remote host closed the connection)
[18:12:35] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[18:15:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:17:05] *** Joins: tw3ml0w (~tw3ml0w@185.17.27.105)
[18:17:58] *** Joins: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com)
[18:24:00] *** Quits: Izem (~Izem@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca) (Ping timeout: 256 seconds)
[18:25:57] *** Quits: alycidyne (~kova@91-160-172-214.subs.proxad.net) (Quit: leaving)
[18:27:06] *** Quits: gitgood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com) (Remote host closed the connection)
[18:27:49] *** Joins: gitgoood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com)
[18:31:06] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-6-23.prtc.net)
[18:31:42] *** Joins: Izem (~Izem@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca)
[18:32:02] <Valware> ffs Izem pick a nick and stick with it XD
[18:32:21] <Valware> oh is not you
[18:32:22] *** Quits: nekodesu (~nano@user/nekobit) (Quit: free(neko);)
[18:32:24] <Valware> only 2 nicks
[18:32:25] <Valware> you're good
[18:32:27] <Valware> nvm ;)
[18:32:39] *** Joins: nekodesu (~nano@user/nekobit)
[18:32:47] <Valware> nekodesu however
[18:32:50] <Valware> PICK A NICK AND STICK WITH IT
[18:33:00] <nekodesu> no
[18:33:13] <Valware> https://pastebin.com/JRdWqTbk :P
[18:33:16] <bayaz> Title: * nekodesu (~nano@user/nekobit) joins ##programming âŒ– NickLink âŒ–  nekodesu als - Pastebin.com 
[18:33:16] <Valware> for real XD
[18:33:46] <nekodesu> nekobit == my desktop ;;; nekobyte == macbook ;;; nekodesu == mobile
[18:33:51] <nekodesu> anything else for the lolz
[18:34:01] <nekodesu> i need a vnc soon
[18:34:10] <Valware> you need a BNC
[18:34:11] <Valware> lol
[18:34:26] <Valware> I can give you a BNC if you want
[18:34:32] <nekodesu> nah
[18:34:42] <nekodesu> the more me the merrier
[18:34:46] <Valware> XD
[18:35:01] *** Joins: dan01 (~dan01@95.76.189.217)
[18:43:54] <tw3ml0w> for deh lulz
[18:43:56] <amigojapan> LunarBNC is a free BNC service
[18:44:15] <amigojapan> It just use irccloud
[18:44:23] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:44:28] <amigojapan> Irccloud is easy
[18:46:56] *** Joins: iji (~nikola@178-221-255-118.dynamic.isp.telekom.rs)
[18:47:11] <iji> Hello.
[18:48:09] *** Quits: iji (~nikola@178-221-255-118.dynamic.isp.telekom.rs) (Client Quit)
[18:49:13] *** Joins: Guest1681 (~Guest16@103.240.170.194)
[18:49:18] *** Quits: humky (~humky@user/humky) (Quit: Leaving)
[18:49:26] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:49:29] <Guest1681> which are other tools like cmap? for visually note taking in graph form
[18:51:02] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[18:51:19] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[18:52:27] <amigojapan> Hi iji
[18:53:37] *** Quits: Izem (~Izem@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca) (Quit: Going offline, see ya! (www.adiirc.com))
[19:00:01] *** Joins: gnux (~gnux@user/gnux)
[19:00:08] <gnux> hello
[19:03:37] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[19:04:24] *** Joins: zoey (~zoey@2a02:8084:a080:9e00:7c8c:4b88:b1b8:70e1)
[19:05:34] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-6-23.prtc.net) (Ping timeout: 246 seconds)
[19:06:45] *** Joins: audiocat (~audio@2603-8081-1800-00ad-c97d-d801-aa27-1842.res6.spectrum.com)
[19:07:42] <amigojapan> Hi gnux 
[19:07:55] <gnux> hola amigojapan 
[19:07:59] <gnux> hi
[19:08:22] <gnux> have you dabbled with geometric modeling
[19:08:23] <amigojapan> Hola
[19:08:52] *** DefiantX is now known as DefiantN
[19:08:53] <amigojapan> Not really. Only with voxels
[19:09:00] *** Quits: DefiantN (~DefiantN@user/defiantn) (Quit: Leaving)
[19:09:15] *** Joins: DefiantN (~DefiantN@user/defiantn)
[19:11:01] *** Joins: humky (~humky@user/humky)
[19:15:30] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 240 seconds)
[19:16:00] *** Joins: olle (~olle@i577BC825.versanet.de)
[19:16:27] *** Joins: Rashad (~textual@2a01:9700:14af:2a00:ac72:c175:687d:2243)
[19:18:34] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[19:18:50] *** Joins: mrig (~mrig@user/mrig)
[19:18:55] <gnux> ok
[19:19:00] <gnux> like minecraft?
[19:21:22] *** Quits: Rashad (~textual@2a01:9700:14af:2a00:ac72:c175:687d:2243) (Ping timeout: 245 seconds)
[19:23:42] *** mnrmnaugh is now known as philosomnaugh
[19:24:41] <amigojapan> gnux: I made 3dpl
[19:25:15] <amigojapan> gnux: http://amigojapan.github.io/3dpl/
[19:25:16] <bayaz> Title: 3dpl ge (3DPL Gaming Environment) official site. Copyright 2012 Usmar A. Padow (amigojapan) usmpadow@gmail.com 
[19:25:57] <gnux> that looks cool
[19:27:18] <amigojapan> Ty
[19:28:12] <gnux> have you implemented IK and FK
[19:28:45] <gnux> do you also known how to unwrap geo for texturizing
[19:28:56] <gnux> thanks
[19:29:26] *** Joins: nekobyte (~based@user/nekobit)
[19:29:30] <gnux> i got to step back
[19:29:33] <gnux> brb
[19:30:09] <amigojapan> No I have not
[19:30:17] *** Quits: diamondbond (~diamondbo@175.157.62.11) (Quit: Leaving)
[19:30:33] <amigojapan> I did not impotent the game engine I used
[19:30:52] *** Quits: nekodesu (~nano@user/nekobit) (Ping timeout: 256 seconds)
[19:31:04] *** Joins: Izem (~Izem@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca)
[19:31:38] <gnux> do you know what i need as in programming to develop ik fk
[19:31:56] *** Joins: nekodesu (~nano@user/nekobit)
[19:32:20] *** Joins: LiftLeft (~LiftLeft@191.96.227.30)
[19:35:10] <amigojapan> Sorry I don't gnux 
[19:35:31] <GeDaMo> https://en.wikipedia.org/wiki/Inverse_kinematics ?
[19:35:31] <bayaz> Title: Inverse kinematics - Wikipedia 
[19:36:03] <gnux> i dont know how to interpret high level math to code
[19:36:22] *** Quits: audiocat (~audio@2603-8081-1800-00ad-c97d-d801-aa27-1842.res6.spectrum.com) (Ping timeout: 245 seconds)
[19:38:05] <gnux> ok its going
[19:38:12] <GeDaMo> This one has some pseudocode https://web.archive.org/web/20110823191421/http://freespace.virgin.net/hugo.elias/models/m_ik2.htm
[19:38:42] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[19:43:27] *** Joins: federico_it (~textual@151.95.116.125)
[19:47:44] <gnux> thanks
[19:48:01] <gnux> is there any channel here that is directly related to 3d graphics
[19:49:21] *** Guest869 is now known as Scarecr0w
[19:53:06] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Ping timeout: 240 seconds)
[19:53:25] *** Quits: philosomnaugh (~mnrmnaugh@68.162.206.56) (Remote host closed the connection)
[19:53:56] *** Joins: mnrmnaugh (~mnrmnaugh@68.162.206.56)
[19:59:42] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 245 seconds)
[19:59:55] *** Joins: bcd (~bcd@83-84-164-51.cable.dynamic.v4.ziggo.nl)
[20:00:17] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[20:00:17] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[20:00:17] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[20:01:37] *** Quits: Guest1681 (~Guest16@103.240.170.194) (Quit: Connection closed)
[20:03:15] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[20:03:52] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[20:05:53] *** Guest7516 is now known as cis
[20:05:54] *** Quits: cis (cis@2600:3c03::f03c:91ff:fe7a:3df4) (Changing host)
[20:05:54] *** Joins: cis (cis@user/cis)
[20:08:12] *** Joins: dunkeln (~dunkeln@94.129.69.87)
[20:08:12] *** Quits: dunkeln (~dunkeln@94.129.69.87) (Changing host)
[20:08:12] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[20:08:34] <yitz> gnux: there might be channels for specific tools
[20:09:31] <GeDaMo> e.g. ##OpenGL
[20:11:43] <Izem> why are languages like pascal and basic considered to be operating systems? I am reading about ucsd pascal and I am confused
[20:12:00] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[20:12:24] <GeDaMo> UCSD Pascal is a virtual machine
[20:12:58] <GeDaMo> And most home computers came with Basic built-in 
[20:13:04] <GeDaMo> It was essentially the OS
[20:13:31] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[20:13:41] <Izem> could these languages could also be run as programs under another OS?
[20:14:07] <GeDaMo> Yes
[20:14:46] <GeDaMo> This has implementations of BBC Basic which originally was the language on the BBC micro http://www.bbcbasic.co.uk/bbcbasic.html
[20:14:47] <bayaz> Title: BBC BASIC 
[20:15:03] *** Joins: anon_ (~anon_@host-87-11-211-115.retail.telecomitalia.it)
[20:18:59] *** Joins: Quacc (~youbuntoe@user/quacc)
[20:19:18] *** Quits: eXistenZ (~biskit@bzq-109-67-145-130.red.bezeqint.net) (Quit: Leaving)
[20:19:48] <Izem> GeDaMo: how did one access files?
[20:20:23] <GeDaMo> Lots of home computers stored programs on cassette tape :P
[20:20:44] *** Quits: bcd (~bcd@83-84-164-51.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[20:21:15] <GeDaMo> There were load and save commands
[20:21:52] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 256 seconds)
[20:21:55] *** Quits: anon_ (~anon_@host-87-11-211-115.retail.telecomitalia.it) (Quit: Client closed)
[20:22:04] <GeDaMo> Also open, read, write, close equivalents
[20:22:26] *** Quits: xff0x (~xff0x@2001:1a81:533f:2500:9e0:616e:42de:43f7) (Ping timeout: 256 seconds)
[20:22:36] *** Joins: anon_ (~anon_@host-87-11-211-115.retail.telecomitalia.it)
[20:23:08] *** Joins: xff0x (~xff0x@2001:1a81:533f:2500:f78f:6771:9432:cc40)
[20:23:42] <Izem> oh interesting
[20:23:53] *** Joins: dunkeln (~dunkeln@94.129.69.87)
[20:23:53] *** Quits: dunkeln (~dunkeln@94.129.69.87) (Changing host)
[20:23:53] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[20:23:55] <Izem> so they didn't have a filesystem technically?
[20:24:28] <GeDaMo> No nested directories, just a list of files
[20:24:42] <Izem> oh ok
[20:25:23] <GeDaMo> CP/M and MS-DOS did that to start with, too
[20:25:27] *** Parts: dunkeln (~dunkeln@user/dunkeln) ()
[20:30:48] *** Quits: anon_ (~anon_@host-87-11-211-115.retail.telecomitalia.it) (Quit: Client closed)
[20:31:53] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[20:31:55] <no_gravity> Do you guys sometimes wish to have your whole hard drive under some kind of version control so that you could see if you accidentally deleted a project directory or something?
[20:33:39] <mercenary> no_gravity: there are filesystems that have that. VMS comes to mind.
[20:34:20] *** Quits: epolanski (uid312403@id-312403.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[20:34:29] <no_gravity> mercenary: What does it do?
[20:35:04] <GeDaMo> VMS stores old versions of files, you access them with file.typ;2
[20:35:08] <mercenary> keeps a few versions of each file. Edit file.c;1, save, and you have file.c;1 and file.c;2
[20:35:24] <GeDaMo> ;1 is the current version, ;2 is the last version
[20:35:48] <no_gravity> Ok, but that is usually already handled by repos and backup solutions.
[20:35:54] <no_gravity> But those are usually per project.
[20:35:56] <mercenary> There's "del/purge *.c;*" if you _really_ want to delete things
[20:36:04] <no_gravity> But how do you notice if you delete a project.
[20:36:15] *** Parts: olle (~olle@i577BC825.versanet.de) ()
[20:36:38] <mercenary> Same, it doesn't really delete it unless you tell it to
[20:37:21] *** Quits: jess (~jess@libera/staff/jess) ()
[20:38:48] <no_gravity> mercenary: Ok. But how do you notice you did "rm /my/projects/project17"?
[20:39:05] *** Quits: Izem (~Izem@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca) (Ping timeout: 250 seconds)
[20:40:12] *** Joins: bcd (~bcd@83-84-164-51.cable.dynamic.v4.ziggo.nl)
[20:41:53] <no_gravity> I guess it would go unnoticed because you don't have something like "git status" for your whole hard disk.
[20:42:00] <no_gravity> I am writing that tool :)
[20:42:12] *** Joins: chron (~thx1138@91.193.4.102)
[20:43:08] <dodo> hm, if i don't notice it's gone it can't have been important :D
[20:44:00] <no_gravity> dodo: You don't have projects that might be useful in a year or in 5 years?
[20:45:06] *** Quits: bcd (~bcd@83-84-164-51.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[20:45:45] <mercenary> no_gravity: memory is hazy, but iirc removing things made them not appear in 'dir' but only in 'dir/all', with some command to un-delete
[20:46:42] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[20:46:46] <dodo> no_gravity: i have backups
[20:46:50] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:47:02] <no_gravity> dodo: Yes, but you have nothing like "git status" for your backups.
[20:47:19] *** Quits: Quacc (~youbuntoe@user/quacc) (Quit: WeeChat 3.2)
[20:47:32] <no_gravity> I want a tool that shows me "This is the stuff you deleted since you looked at the status last time. All good?".
[20:47:33] <dodo> no_gravity: i could create that though if i needed it
[20:47:43] <no_gravity> dodo: Yes. I am creating a tool like that atm.
[20:47:58] <dodo> sounds kinda like a file alteration monitor?
[20:48:18] *** Joins: sunbae (~euk@82.85-87-220.dynamic.clientes.euskaltel.es)
[20:48:22] <no_gravity> dodo: Yeah, kinda. I only watch for deleted files which are not under version control for now.
[20:48:55] <no_gravity> dodo: So if the tool sees "/my/project17/hello.txt" was deleted but project17 is under version control, it will not care.
[20:49:01] *** Joins: snake (~snake@user/snake)
[20:49:11] <no_gravity> But if "/my/project17" was deleted, it will tell me.
[20:49:11] *** Quits: snake (~snake@user/snake) (Remote host closed the connection)
[20:49:27] <dodo> should be pretty to do with inotify or somesuch, yeah
[20:49:36] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[20:49:45] <no_gravity> dodo: I just make a snapshot of the current situation.
[20:49:57] *** Quits: wei2912 (~wei2912@112.199.250.21) (Quit: Lost terminal)
[20:50:01] <no_gravity> find . -type d -exec sh -c 'test -e "$1/.git"' _ {} \; ! -prune -o -print
[20:50:07] <no_gravity> And compare the last output to the current.
[20:51:54] *** Quits: chron (~thx1138@91.193.4.102) (Ping timeout: 256 seconds)
[20:52:53] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[20:53:14] *** Joins: Crescendo (~Crescendo@user/crescendo)
[20:54:30] *** Quits: dan01 (~dan01@95.76.189.217) (Ping timeout: 252 seconds)
[20:54:37] *** Joins: node1 (~node1@user/node1)
[20:59:12] <node1> Hi, can we breaks down into seprate file a large yaml code?
[20:59:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[20:59:37] *** Joins: mnd999_ (~mark@2001:8b0:da3:76a2:4630:5b97:83a2:3e21)
[21:01:14] *** Joins: Izem (~Izem@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca)
[21:01:42] <Izem> mercenary what filesystem are you on?
[21:03:18] <mercenary> Izem: depends on which terminal window I type in, any of ext4,zfs,ufs,ffs
[21:04:24] <Izem> well you might be able to see some old files in zfs
[21:04:34] <Izem> what's the difference between ufs and ffs?
[21:05:00] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[21:05:19] *** Quits: jaysicks (~jaysicks@84-236-11-22.pool.digikabel.hu) (Remote host closed the connection)
[21:05:32] <mercenary> yup. backups on zfs, with snapshot just before the backup, and zfs diff will tell you
[21:06:03] *** Joins: jaysicks (~jaysicks@84-236-11-22.pool.digikabel.hu)
[21:07:10] <mercenary> ufs is freebsd, ffs os openbsd. both are relatively simple filesystems
[21:08:06] *** Quits: jazzy (~jaziz@2600:380:8562:6b2:9c1f:23c2:2ca2:238b) (Ping timeout: 258 seconds)
[21:08:41] <Izem> oh ok
[21:08:52] *** Quits: mnd999_ (~mark@2001:8b0:da3:76a2:4630:5b97:83a2:3e21) (Ping timeout: 245 seconds)
[21:09:01] <Izem> I knew they were both from bsd I just though it was a different name for the same fs
[21:12:39] *** Joins: smorgasbord (buggy@user/smorgasbord)
[21:12:47] *** Joins: sdftyguijokpl (~sdftyguij@eth-west-pareq2-46-193-2-167.wb.wifirst.net)
[21:14:34] *** Quits: gnux (~gnux@user/gnux) (Quit: Leaving)
[21:15:11] *** Joins: Orimendix (~Orimendix@50-25-46-156.krmtcmta02.res.dyn.suddenlink.net)
[21:15:44] *** Quits: nekobyte (~based@user/nekobit) (Quit: cute!!!!)
[21:16:59] *** Quits: Izem (~Izem@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca) (Quit: Going offline, see ya! (www.adiirc.com))
[21:17:51] *** Quits: nekodesu (~nano@user/nekobit) (Quit: free(neko);)
[21:18:28] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[21:20:00] *** Joins: qbt (~edun@user/edun)
[21:21:16] *** Quits: jaysicks (~jaysicks@84-236-11-22.pool.digikabel.hu) (Remote host closed the connection)
[21:22:04] *** Joins: jaysicks (~jaysicks@84-236-11-22.pool.digikabel.hu)
[21:22:19] <Lyn> is it possible to use Flightplan to run only local commands? without getting errors
[21:24:12] *** Quits: jaysicks (~jaysicks@84-236-11-22.pool.digikabel.hu) (Remote host closed the connection)
[21:24:55] *** Joins: jaysicks (~jaysicks@84-236-11-22.pool.digikabel.hu)
[21:25:41] *** Joins: anon_ (~anon_@host-79-27-225-155.retail.telecomitalia.it)
[21:26:17] *** Joins: dan01 (~dan01@95.76.189.217)
[21:27:10] *** Quits: anon_ (~anon_@host-79-27-225-155.retail.telecomitalia.it) (Client Quit)
[21:28:15] <Lyn> oh wow, apparently node-fibers are deprecated for node >=16.x released on April 20, 2021
[21:29:52] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:1d5f:9e3f:c4f9:810d)
[21:29:55] *** Joins: audiocat (~audio@2603-8081-1800-00ad-3ab8-1376-7265-848f.res6.spectrum.com)
[21:32:00] *** Quits: jaysicks (~jaysicks@84-236-11-22.pool.digikabel.hu) (Remote host closed the connection)
[21:32:50] *** Joins: jaysicks (~jaysicks@84-236-11-22.pool.digikabel.hu)
[21:32:53] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:34:11] *** Joins: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:9882:5d69:12df:2a8c)
[21:37:54] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[21:51:30] *** Quits: xff0x (~xff0x@2001:1a81:533f:2500:f78f:6771:9432:cc40) (Ping timeout: 240 seconds)
[21:52:44] *** Joins: xff0x (~xff0x@2001:1a81:533f:2500:c767:19bd:28d8:628d)
[21:52:45] *** Joins: nekodesu (~nano@user/nekobit)
[21:53:09] *** Joins: magla (~gelignite@55d4cb3d.access.ecotel.net)
[21:54:26] *** Quits: audiocat (~audio@2603-8081-1800-00ad-3ab8-1376-7265-848f.res6.spectrum.com) (Ping timeout: 272 seconds)
[21:54:48] *** Quits: dan01 (~dan01@95.76.189.217) (Ping timeout: 256 seconds)
[21:55:09] *** Joins: zaher (~zaher@37.48.150.135)
[21:57:24] *** Joins: dan01 (~dan01@95.76.189.217)
[21:57:46] *** Quits: zaher_ (~zaher@37.48.190.100) (Ping timeout: 240 seconds)
[21:59:57] *** Quits: zaher (~zaher@37.48.150.135) (Ping timeout: 252 seconds)
[22:04:59] <bailsman> I just realized that my problem is solved if I invert it: what if all my workers threads push themselves to a queue, and the clients who need work done just pull a worker thread off the queue and give it their work?
[22:05:05] <bailsman> Is this a ridiculous idea?
[22:06:02] <sunbae> No, it's not. The inversion of the problem, I mean.
[22:06:07] *** Joins: Guest16 (~Guest16@103.240.170.194)
[22:06:08] <sunbae> Of course, test it.
[22:06:24] <Guest16> looking for some tools for graph builder
[22:06:34] <GeDaMo> Sounds like https://en.wikipedia.org/wiki/Thread_pool
[22:06:36] <bayaz> Title: Thread pool - Wikipedia 
[22:06:53] <Guest16> or visually representing information with links/relations
[22:07:03] <Guest16> any suggetions?
[22:07:31] <Guest16> (not mindmap- as it can accept only one parent, instead i am looking for multiple parent)
[22:07:31] *** Quits: Thedarkb1 (~Thedarkb@85.255.232.89) (Ping timeout: 258 seconds)
[22:08:48] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:08:49] <sunbae> https://upload.wikimedia.org/wikipedia/commons/b/bf/40_principles_of_TRIZ_method_720dpi.jpg From the triz method, the thirteenth principle. Inversion.
[22:08:49] <bayaz> Type: image/jpeg Size: 4.6 MB 
[22:09:29] <sunbae> https://en.wikipedia.org/wiki/TRIZ
[22:09:29] <bayaz> Title: TRIZ - Wikipedia 
[22:12:08] *** Joins: inky_ (~inky@46.241.147.153)
[22:15:32] *** Joins: Izem (~Izem@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca)
[22:17:15] <Izem> Do all win32 apps on window10+ use gdi scaling? I can't seem to determine what makes some older code result in blurry fonts and icons
[22:18:32] <sunbae> I don't know much about win32 programming, but there is a gdi and a gdi+
[22:20:15] <bailsman> Is inheritance a good fit for a class that needs a lot of common behavior (mainly forwarding methods) with minor specializations (override some methods) or would you still favor composition? I'm not clear how to do what I need with composition
[22:20:20] *** Joins: akevinhuang (~thekevinh@user/thekevinhuang)
[22:20:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[22:21:10] <Izem> common behavior is done via interfaces iirc
[22:21:35] <Izem> I think there is some dpi code I will have to figure out were to add
[22:21:55] <Izem> I think the win32 gui api sucks
[22:22:34] *** Joins: Trieste_ (T@user/pilgrim)
[22:22:52] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 272 seconds)
[22:22:53] *** Joins: fweht (uid404746@id-404746.tooting.irccloud.com)
[22:24:15] <sunbae> It's a tad old.
[22:25:12] <Izem> even then, it has some bizzare conventions
[22:25:28] <Izem> other gui api's are not half as much trouble
[22:25:31] *** Quits: Leone (~Leo@45.72.231.86) ()
[22:27:13] <Izem> ah there is a dpi aware manifest
[22:31:44] *** Joins: mrig (~mrig@user/mrig)
[22:33:26] *** Joins: izak (~user@196.189.63.196)
[22:33:54] *** Quits: humky (~humky@user/humky) (Quit: Leaving)
[22:35:42] *** Joins: Akuli (~Akuli@87-94-110-245.bb.dnainternet.fi)
[22:40:08] *** Quits: izak (~user@196.189.63.196) (Quit: rcirc on GNU Emacs 28.0.50)
[22:41:09] *** Joins: eyynet4 (~0x100@32.211.211.39)
[22:42:47] *** Joins: xcombelle (~Xavier_Co@abayonne-651-1-41-161.w92-156.abo.wanadoo.fr)
[22:43:14] *** Joins: arcatech (~arcatech@user/arcatech)
[22:43:37] *** Quits: bayaz (~bayaz@user/bayaz) ()
[22:44:01] *** Joins: bayaz (~bayaz@user/bayaz)
[22:44:02] *** ChanServ sets mode: +o bayaz
[22:45:07] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 245 seconds)
[22:46:28] *** Joins: Tazmainian (~Tazmainia@41.193.169.28)
[22:47:07] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[22:47:54] *** Joins: audiocat (~audio@2603-8081-1800-00ad-4244-d5da-54a7-0c8c.res6.spectrum.com)
[22:51:12] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:52:49] *** Quits: BUSY (~BUSY@user/busy) (Read error: Connection reset by peer)
[22:53:20] *** Joins: quartz (~quartz@2603-8001-7700-61a4-0000-0000-0000-0acb.res6.spectrum.com)
[22:54:43] *** Quits: bayaz (~bayaz@user/bayaz) (Changing host)
[22:54:43] *** Joins: bayaz (~bayaz@user/jeaye/bot/bayaz)
[22:54:43] *** erbium.libera.chat sets mode: +o bayaz
[22:55:23] *** Quits: cis (cis@user/cis) (Quit: ZNC - http://znc.in)
[22:55:30] *** Joins: snake (~snake@user/snake)
[22:56:22] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[22:56:48] *** Quits: rsx (~dummy@ppp-188-174-157-141.dynamic.mnet-online.de) (Quit: rsx)
[22:57:16] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[22:59:19] *** Joins: tiggilyboo (~tiggilybo@82-197-202-43.dsl.cambrium.nl)
[23:00:48] *** Quits: tiggilyboo (~tiggilybo@82-197-202-43.dsl.cambrium.nl) (Remote host closed the connection)
[23:02:59] *** Joins: Pickchea (~private@user/pickchea)
[23:06:33] *** Quits: sunbae (~euk@82.85-87-220.dynamic.clientes.euskaltel.es) (Quit: leaving)
[23:12:08] *** Joins: fspy (~fspy@user/fspy)
[23:12:37] *** Quits: kodah (~kodah@user/kodah) (Ping timeout: 245 seconds)
[23:13:39] *** Quits: LiftLeft (~LiftLeft@191.96.227.30) (Ping timeout: 252 seconds)
[23:13:47] *** Joins: vicfred (~vicfred@user/vicfred)
[23:16:13] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[23:17:42] *** Quits: rubychellos (uid511313@id-511313.stonehaven.irccloud.com) (Read error: Connection reset by peer)
[23:17:54] *** Quits: morgabra (sid500580@user/morgabra) (Ping timeout: 240 seconds)
[23:18:30] *** Joins: cis_ (cis@2600:3c03::f03c:91ff:fe7a:3df4)
[23:18:38] *** Quits: cis_ (cis@2600:3c03::f03c:91ff:fe7a:3df4) (Changing host)
[23:18:38] *** Joins: cis_ (cis@user/cis)
[23:18:40] *** Joins: BUSY (~BUSY@user/busy)
[23:18:49] *** cis_ is now known as cis
[23:19:45] *** Quits: jakesyl (sid56879@id-56879.stonehaven.irccloud.com) (Read error: Connection reset by peer)
[23:20:19] *** Quits: dislabled (~dislabled@115.229.164.82.customer.cdi.no) (Quit: ZNC 1.8.2 - https://znc.in)
[23:20:57] *** Joins: dislabled (~dislabled@115.229.164.82.customer.cdi.no)
[23:21:59] *** Quits: fspy (~fspy@user/fspy) (Quit: fspy)
[23:22:09] *** Joins: morgabra (sid500580@user/morgabra)
[23:22:27] *** Joins: rubychellos (uid511313@stonehaven.irccloud.com)
[23:22:45] *** Joins: jakesyl (sid56879@id-56879.stonehaven.irccloud.com)
[23:22:45] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:23:59] <Lyn> why should I use Jenkins plugins instead of just executing normal shell commands to deploy things?
[23:24:28] <dodo> it's up to you really
[23:24:48] <Lyn> what's the advantage of the plugins here
[23:25:07] <eyynet4> normal shell is just so normal though
[23:25:40] <Lyn> the plugins feel like unnecessary dependencies, but maybe I'm missing something
[23:26:15] *** Joins: x003fgqwe (uid479614@id-479614.tooting.irccloud.com)
[23:26:31] *** Joins: fspy (~fspy@user/fspy)
[23:27:02] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[23:27:06] *** Quits: amigojapan (uid86330@id-86330.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[23:27:10] *** Joins: omen (~omen@213-204-33-50.aland.net)
[23:28:05] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 250 seconds)
[23:30:36] *** Quits: eyynet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[23:37:32] *** Joins: kodah (~kodah@user/kodah)
[23:38:24] *** Quits: vpw (~vpw@223.184.78.92) (Ping timeout: 252 seconds)
[23:39:28] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[23:42:12] <cis> Lyn: the answer is probably convenience
[23:43:00] <Lyn> is Jenkins more convenient?
[23:44:05] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[23:46:59] <cis> I mean the plugins probably have some functionality that you don't have to write yourself
[23:47:48] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 272 seconds)
[23:47:49] *** Joins: Quacc (~youbuntoe@user/quacc)
[23:47:59] <Quacc> is there a BIOS interrupt to know if ATAPI is supported?
[23:48:49] *** Joins: pavonia (~user@user/siracusa)
[23:50:20] *** Quits: omen (~omen@213-204-33-50.aland.net) (Ping timeout: 272 seconds)
[23:51:46] <GeDaMo> https://en.wikipedia.org/wiki/INT_13H#INT_13h_AH=4Bh:_Get_Drive_Emulation_Type has something about ATAPI
[23:51:50] <bayaz> Title: INT 13H - Wikipedia 
[23:51:52] *** Joins: molt (~molt@79.140.150.21)
[23:55:16] *** Quits: Guest16 (~Guest16@103.240.170.194) (Quit: Connection closed)
[23:56:47] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[23:58:23] *** Quits: Quacc (~youbuntoe@user/quacc) (Quit: WeeChat 3.2)
[23:59:22] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Quit: Lost terminal)
[23:59:47] *** Joins: dan1001 (~dan01@95.76.189.217)
