[00:06:21] <gfldex> m: my $*this; say <1 10 0 7 2>.&{$*this = $_}.map(* / $*this).sum;
[00:06:21] <camelia> rakudo-moar 74d7ff771: OUTPUT: «4␤»
[00:06:49] <gfldex> mykhal: If you want a `this` you have to set it yourself. ^^^
[00:51:46] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[00:51:46] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[01:05:42] *** Quits: patrickb (~quassel@55d49d18.access.ecotel.net) (Quit: Quit.)
[01:16:23] *** Quits: gordonfish (~gordonfis@user/gordonfish) (Ping timeout: 252 seconds)
[01:39:24] *** Quits: nahita (~nahita@46.104.138.74) (Quit: Connection closed)
[01:52:27] *** Joins: gordonfish- (~gordonfis@user/gordonfish)
[01:53:56] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[02:53:05] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[02:58:35] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Remote host closed the connection)
[03:03:12] *** Quits: Doc_Holliwood (~holli@dslb-092-076-011-194.092.076.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[03:03:22] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[03:16:20] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Ping timeout: 258 seconds)
[03:20:34] *** gordonfish- is now known as gordonfish
[03:21:00] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[03:44:18] *** Quits: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot) (Ping timeout: 240 seconds)
[03:44:18] *** Quits: simcop2387 (~simcop238@perlbot/patrician/simcop2387) (Ping timeout: 240 seconds)
[03:55:26] *** Joins: simcop2387 (~simcop238@perlbot/patrician/simcop2387)
[03:56:12] *** Joins: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot)
[04:32:43] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[05:16:57] *** Henry151 is now known as NotHenry151
[05:17:34] *** NotHenry151 is now known as Henry151
[05:20:59] *** Joins: frost (~frost@59.71.241.179)
[05:26:42] *** Quits: frost (~frost@59.71.241.179) (Ping timeout: 240 seconds)
[05:34:03] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[06:28:00] *** Quits: phogg (~phogg@user/phogg) (Ping timeout: 258 seconds)
[07:09:50] *** Joins: frost (~frost@59.71.241.179)
[07:24:18] *** Quits: frost (~frost@59.71.241.179) (Quit: Connection closed)
[08:24:18] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:24:18] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:24:18] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:24:18] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:24:18] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:24:18] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:24:18] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:24:18] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:24:18] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:24:18] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:24:18] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:24:18] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:24:18] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:24:18] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:24:18] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:24:18] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[08:24:18] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[08:24:18] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[08:24:18] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[08:24:53] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[08:24:54] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[08:24:58] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[08:25:02] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[08:25:07] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[08:25:19] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[08:25:27] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[08:26:02] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[09:16:59] *** Quits: Tirifto (~Tirifto@47-186-71-19.dlls.tx.frontiernet.net) (Ping timeout: 255 seconds)
[09:19:23] *** Joins: Tirifto (~Tirifto@47-186-71-19.dlls.tx.frontiernet.net)
[09:24:37] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[09:25:16] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[09:25:23] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[09:25:30] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[09:25:52] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[09:27:02] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[09:50:00] *** Joins: Doc_Holliwood (~holli@dslb-092-076-011-194.092.076.pools.vodafone-ip.de)
[10:24:34] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[10:25:11] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[10:26:12] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[10:26:45] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[10:32:18] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[10:32:45] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[10:35:53] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[10:49:41] *** Quits: Doc_Holliwood (~holli@dslb-092-076-011-194.092.076.pools.vodafone-ip.de) (Ping timeout: 255 seconds)
[10:50:02] *** Quits: Eddward_ (~Eddward@207.138.204.132) (Ping timeout: 252 seconds)
[10:50:42] *** Joins: Doc_Holliwood (~holli@ipservice-092-218-232-181.092.218.pools.vodafone-ip.de)
[10:51:36] <mykhal> gfldex: timtowdi, howewer requirement was rather to avid variables, than to have "this"
[10:54:58] *** Quits: Doc_Holliwood (~holli@ipservice-092-218-232-181.092.218.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[10:56:03] <mykhal> .. s/avid/avoid/
[11:24:45] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[11:35:47] *** Joins: nahita (~nahita@176.220.109.128)
[11:40:43] *** Joins: ufobat (~martin@dynamic-077-009-139-016.77.9.pool.telefonica.de)
[12:20:08] *** Joins: dakkar (~dakkar@home.thenautilus.net)
[12:41:42] <nahita> hi! i wonder why `+flat $(12, 84)` gives 2 but not 1... 
[12:42:18] <nahita> m: say +flat $(12, 84);
[12:42:18] <camelia> rakudo-moar 74d7ff771: OUTPUT: «2␤»
[12:43:18] <nahita> m: .say for flat $(12, 84)
[12:43:18] <camelia> rakudo-moar 74d7ff771: OUTPUT: «12␤84␤»
[13:20:08] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[13:20:08] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[13:20:28] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[13:20:37] <mykhal> nahita: hi. i wonder why would you expect 1. List in numeric context gives its length
[13:26:42] <nahita> I expected it not to be flattened since it's itemized and therefore gave 1. 
[13:27:15] <nahita> m: .say for flat ($(12, 84),)
[13:27:16] <camelia> rakudo-moar 74d7ff771: OUTPUT: «(12 84)␤»
[13:28:14] <nahita> `flat` respects it when in a list but why not above?
[13:31:37] <mykhal> i probably miss something
[13:31:45] <mykhal> m: say $(12, 84).elems
[13:31:45] <camelia> rakudo-moar 74d7ff771: OUTPUT: «2␤»
[13:32:35] <nahita> m: .say for $(12, 84)
[13:32:35] <camelia> rakudo-moar 74d7ff771: OUTPUT: «(12 84)␤»
[13:34:22] <nahita> m: .say for ($(12, 84),)
[13:34:23] <camelia> rakudo-moar 74d7ff771: OUTPUT: «(12 84)␤»
[13:35:05] <mykhal> so you see
[13:35:22] <nahita> no :)
[13:35:42] <mykhal> m: say ((1, 2), 3).flat
[13:35:42] <camelia> rakudo-moar 74d7ff771: OUTPUT: «(1 2 3)␤»
[13:37:04] <mykhal> m: say ($(1, 2), 3).flat
[13:37:05] <camelia> rakudo-moar 74d7ff771: OUTPUT: «((1 2) 3)␤»
[13:38:48] <mykhal> interesting.
[13:38:56] <mykhal> m: say $(1, 2).^name eq (1, 2).^name
[13:38:56] <camelia> rakudo-moar 74d7ff771: OUTPUT: «True␤»
[13:39:27] <mykhal> well, ok, it's somewhat more complicated than i thoughtd, will comment no more :)
[13:39:47] *** Quits: Manifest0 (~Manifest0@cst2-65-109.cust.vodafone.cz) (Ping timeout: 255 seconds)
[13:41:17] *** Joins: Manifest0 (~Manifest0@cst2-65-109.cust.vodafone.cz)
[13:45:41] <mykhal> .. only that i think its meant not to flatten being item, not a whole "container"
[13:49:55] <mykhal> m: say ( +flat( [1, 2] ),  +flat( [[1, 2], 3] ) )
[13:49:55] <camelia> rakudo-moar 74d7ff771: OUTPUT: «(2 2)␤»
[14:03:32] <nahita> not sure I follow *"its meant not to flatten being item, not a whole "container"*; can you please elaborate?
[14:05:59] <mykhal> "When you have a list that contains sub-lists, but you only want one flat list, you may flatten the list to produce a sequence of values as if all parentheses were removed. This works no matter how many levels deep the parentheses are nested.", from docs. It's talking about sub-lists
[14:09:08] <nahita> I see; but itemized sublists are immune to flattening, right? But behaviour seems to change when passed directly to `flat` as `flat $(12, 84)` and I'm unable to see why...
[14:22:39] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[14:24:04] <mykhal> it does not treat the same the outer list-ish, "Interprets the invocant as a list, flattens non-containerized Iterables into a flat list, and returns that list."
[14:25:46] <mykhal> i wouldn't like/expect flatteing [[1, 2], 3] to ( [[1, 2], 3], )
[14:29:27] <mykhal> but frankly i initially wouldn't expect different treatment of innter list vs arrays as well :)
[14:42:51] <nahita> So it first calls `.List` on the argument and then flattens?
[14:43:16] <nahita> (or `.list`; i don't know the difference)
[14:52:47] *** Joins: Kaipi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net)
[14:54:46] *** Quits: Kaiepi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net) (Ping timeout: 265 seconds)
[15:00:40] <mykhal> nahita: something like that.. if it's an iterable, it iterates it, Iterable.pm6: method flat(Iterable:D:) { Seq.new(Rakudo::Iterator.Flat(self.iterator)) }
[15:00:56] *** Quits: olve__ (~olve@231-10-207-82.pool.ukrtel.net) (Quit: olve__)
[15:01:01] *** Quits: Olve_ (~Srain@231-10-207-82.pool.ukrtel.net) (Remote host closed the connection)
[15:02:05] <nahita> Thx; I also reached that and Rakudo::Iterator.Flat has some nqp stuff that I don't understand. What confuses me is:
[15:02:12] <nahita> m: .say for $(12, 84)
[15:02:12] <camelia> rakudo-moar 74d7ff771: OUTPUT: «(12 84)␤»
[15:02:20] <nahita> iterates once...
[15:03:03] <mykhal> i can see 2 elems
[15:03:30] <lizmat> but they're in a container  :-)
[15:03:39] <lizmat> m: .say for (12,84)
[15:03:39] <camelia> rakudo-moar 74d7ff771: OUTPUT: «12␤84␤»
[15:03:44] <lizmat> m: .say for $(12,84)
[15:03:44] <camelia> rakudo-moar 74d7ff771: OUTPUT: «(12 84)␤»
[15:03:58] <lizmat> well, I should say, they're itemized
[15:04:46] <mykhal> i thout we were talking about the outer iterable
[15:06:05] <mykhal> these items ate treated different weay than the original iterable
[15:08:13] * mykhal did not notice lizmat speaking now
[15:08:40] <nahita> I understand/expect `.say for $(12, 84)` to iterate once. What I don't understand/expect is why `.say for flat $(12, 84)` iterates twice but not once? How can `flat` flattens an itemized list?
[15:09:16] <lizmat> that's the idea of flat ?
[15:09:49] <nahita> But it respects when `$(12, 84)` is in a list
[15:10:03] <nahita> m: .say for ($(12, 84),)
[15:10:03] <camelia> rakudo-moar 74d7ff771: OUTPUT: «(12 84)␤»
[15:11:01] <nahita> m: .say for flat ($(12, 84),)
[15:11:01] <camelia> rakudo-moar 74d7ff771: OUTPUT: «(12 84)␤»
[15:13:06] <mykhal> m: say $(12, 84).raku;  say ($(12, 84),).raku
[15:13:06] <camelia> rakudo-moar 74d7ff771: OUTPUT: «$(12, 84)␤($(12, 84),)␤»
[15:14:13] <mykhal> crap
[15:14:17] <mykhal> m:  say $(12, 84).flat.raku;  say ($(12, 84),).flat.raku
[15:14:17] <camelia> rakudo-moar 74d7ff771: OUTPUT: «(12, 84).Seq␤($(12, 84),).Seq␤»
[15:17:03] <mykhal> consistent, if one does not expect flat to be classical recursive function
[15:17:49] <nahita> it is recursive though, isn't it
[15:19:18] <mykhal> yes, but starting in top of items, not the whole arg
[15:19:39] <mykhal> .. but that is also misleading statement
[15:23:00] *** Joins: sena_kun (~sena_kun_@static-84-42-198-52.net.upcbroadband.cz)
[15:40:02] <mykhal> it does recursively flatten the items, but flat is not flatten
[15:43:18] <mykhal> and Raku is not Haskell :)
[16:05:29] *** Quits: holyghost (~goon@2a02:a03f:64c8:9200:6d38:10eb:c49a:e445) (Quit: bbl)
[16:20:02] *** Joins: alex16 (~alex@223.255.227.8)
[16:20:37] <alex16> Uploaded file: https://uploads.kiwiirc.com/files/232a733b2418a8b0bd1550b1cfd4ba3f/Screenshot_2021-07-27-18-29-13-16.png
[16:20:58] <alex16> Help brother 
[16:25:03] <MasterDuke> alex16: it looks like whatever os your phone is running doesn't have the dev package for openssl. i don't know if there's a way to exclude packages and/or modules with rstar, but you could always just install rakudo by itself, then manually install zef + modules
[16:28:35] *** Quits: alex16 (~alex@223.255.227.8) (Quit: Connection closed)
[16:29:10] *** Joins: alex79 (~alex@223.255.227.8)
[16:30:12] <alex79> Help me failed build
[16:30:22] <alex79> Uploaded file: https://uploads.kiwiirc.com/files/889fcc5dac2b74a4beab50a7552768de/pasted.txt
[16:30:34] <MasterDuke> alex79: i'd suggest downloading https://rakudo.org/dl/rakudo/rakudo-2021.07.tar.gz instead of rakudo-star and trying that first
[16:30:43] <alex79> Android 6.0 aarch64
[16:31:37] <MasterDuke> people have built rakudo on other aarch64 systems (e.g., rpi4), so it's likely possible
[16:32:38] <MasterDuke> you'll probably need something like `apt install build-essentials` first (i don't know what the actual package name is)
[16:32:52] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[16:33:40] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[16:37:44] *** Joins: Doc_Holliwood (~holli@ipservice-092-218-232-181.092.218.pools.vodafone-ip.de)
[16:38:17] <alex79> what is the command to install it, I have extracted the file?
[16:39:55] <MasterDuke> something like `perl Configure.pl --backends=moar --gen-moar --make-install`
[16:40:33] <MasterDuke> you can add a `--prefix=path/to/somewhere` if you want to install it to a particular directory
[16:46:36] <alex79> fatal: not in a git directory
[16:50:05] <MasterDuke> but it should still start building, right?
[16:53:24] <alex79> currently installing moarvm
[16:53:44] *** Quits: Doc_Holliwood (~holli@ipservice-092-218-232-181.092.218.pools.vodafone-ip.de) (Ping timeout: 255 seconds)
[16:54:42] *** Joins: Doc_Holliwood (~holli@ipservice-092-218-232-158.092.218.pools.vodafone-ip.de)
[16:55:43] <alex79> MasterDuke currently installing moarvm
[16:56:02] <MasterDuke> it'll probably take a while
[16:56:32] <alex79> Updating submodules .................................... warning: Cannot protect .git/config on this file system - do not store sensitive information here.
[16:57:23] <alex79> Uploaded file: https://uploads.kiwiirc.com/files/fc647552dad7338d7582ad980a861571/pasted.txt
[16:57:28] <alex79> How? 
[17:01:21] <Util> alex79: Sanity check - Are you able to create+compile+run a C program in the directories where you are trying to build Rakudo?
[17:01:27] <Util> Good example to try: http://rosettacode.org/wiki/Hello_world/Newbie#C
[17:04:23] *** Joins: Eddward_ (~Eddward@207.138.204.132)
[17:08:57] *** Quits: rypervenche (~rypervenc@user/rypervenche) (Quit: brb)
[17:12:40] *** Quits: alex79 (~alex@223.255.227.8) (Quit: Connection closed)
[17:15:17] *** Quits: Eddward_ (~Eddward@207.138.204.132) (Remote host closed the connection)
[17:15:50] *** Joins: alex67 (~alex@223.255.227.8)
[17:16:23] <alex67> MasterDuke How? 
[17:17:47] *** Quits: alex67 (~alex@223.255.227.8) (Client Quit)
[17:19:35] *** Joins: alex80 (~alex@223.255.227.8)
[17:50:19] <alex80> someone help me how to install rakudo in termux i've been trying since morning looking for a solution
[18:05:24] *** Quits: alex80 (~alex@223.255.227.8) (Quit: Ping timeout (120 seconds))
[18:05:53] *** Joins: alex67 (~alex@223.255.227.8)
[18:05:54] *** Quits: alex67 (~alex@223.255.227.8) (Client Quit)
[18:08:34] *** Joins: rypervenche (~rypervenc@user/rypervenche)
[18:08:56] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[18:26:57] *** Quits: codesections (~user@45-16-201-121.lightspeed.iplsin.sbcglobal.net) (Ping timeout: 265 seconds)
[18:33:54] *** Quits: Doc_Holliwood (~holli@ipservice-092-218-232-158.092.218.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[19:02:49] *** Joins: Doc_Holliwood (~holli@ipservice-092-218-232-158.092.218.pools.vodafone-ip.de)
[19:05:24] <tonyo> does your excellent termux have perl?
[19:10:16] <MasterDuke> i was helping them a bit, i believe their latest problem is that where they were trying to build was mounted noexec
[19:20:31] *** Joins: codesections (~user@2600:1700:1650:1faf:ef37:8752:433c:db47)
[19:21:24] *** Joins: Sgeo (~Sgeo@user/sgeo)
[19:26:47] *** Joins: RandalSchwartz (~Adium@c-73-240-39-169.hsd1.or.comcast.net)
[20:00:58] *** Quits: ufobat (~martin@dynamic-077-009-139-016.77.9.pool.telefonica.de) (Ping timeout: 256 seconds)
[20:20:24] <nahita> mykhal: if it's already flat, `flat` doesn't flatten in effect yes. But `$(12, 84)` isn't flat on its own, right? And it also doesn't get flatten if it is an element of a list instead of directly supplying to `flat`.
[20:35:18] <nahita> s/isn't flat on its own/is flat on its own/ 
[20:40:32] *** Quits: Doc_Holliwood (~holli@ipservice-092-218-232-158.092.218.pools.vodafone-ip.de) (Ping timeout: 245 seconds)
[20:46:11] *** Joins: gordonfish- (~gordonfis@user/gordonfish)
[20:46:13] *** Quits: nahita (~nahita@176.220.109.128) (Quit: Connection closed)
[20:46:40] *** Quits: Oshawott (~archenoth@S0106889e6827f474.cg.shawcable.net) (Ping timeout: 258 seconds)
[20:46:58] *** Quits: gordonfish (~gordonfis@user/gordonfish) (Ping timeout: 240 seconds)
[20:47:28] *** Joins: Oshawott (~archenoth@S0106889e6827f474.cg.shawcable.net)
[20:54:28] *** Quits: RandalSchwartz (~Adium@c-73-240-39-169.hsd1.or.comcast.net) (Quit: Leaving.)
[20:55:13] *** Joins: kylese (~kylese@p5dd8b77e.dip0.t-ipconnect.de)
[21:19:02] *** Quits: dakkar (~dakkar@home.thenautilus.net) (Ping timeout: 272 seconds)
[21:28:18] <mykhal> tonyo: my termux (not sure if excellent) has perl 5.34. after installing perl.
[21:31:12] <tonyo> what's the output of running the perl Configure.pl stuff in the readme?
[21:58:12] *** Quits: m_athias (~mathias@comm.detonation.org) (Quit: WeeChat 2.8)
[22:04:46] *** Quits: kylese (~kylese@p5dd8b77e.dip0.t-ipconnect.de) (Quit: Leaving)
[22:12:38] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Quit: C-x C-c)
[22:32:44] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[22:35:42] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[22:36:41] *** Joins: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi)
[22:37:14] *** gordonfish- is now known as gordonfish
[22:39:52] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Client Quit)
[22:41:57] *** Quits: sena_kun (~sena_kun_@static-84-42-198-52.net.upcbroadband.cz) (Quit: Leaving)
[22:44:10] *** Joins: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi)
[23:20:23] *** Joins: Doc_Holliwood (~holli@ipservice-092-218-232-158.092.218.pools.vodafone-ip.de)
[23:52:27] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.2)
