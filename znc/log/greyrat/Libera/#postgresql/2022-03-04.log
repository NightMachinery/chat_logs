[00:02:42] <peerce> did you restart (not reload) postgres after changing LISTEN_ADDRESSES = '*'    ?
[00:03:06] <peerce> login via the local shell on the server, and SHOW LISTEN_ADDRESSES;   to see its current value
[00:06:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[00:08:34] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[00:09:06] *** Joins: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca)
[00:09:22] <funhouse> peerce yes restarted getting this error as well when trying to do a select
[00:09:39] <funhouse> `ERROR:  permission denied for table addresses6`
[00:09:46] <funhouse> I did this already:
[00:09:55] *** Joins: xlxlx (~xlxlx@2601:583:300:7090:1938:db9c:97de:f7f3)
[00:10:14] <funhouse> `grant all privileges on database postgis2 to username;`
[00:10:19] *** Joins: iliv (~iliv@93-77-147-152.lvv.volia.net)
[00:10:37] <funhouse> `GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO username;`
[00:13:12] <funhouse> Listen addresses is: `*`
[00:16:25] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[00:16:37] *** Quits: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca) (Quit: Leaving.)
[00:18:35] *** Quits: xlxlx (~xlxlx@2601:583:300:7090:1938:db9c:97de:f7f3) (Quit: WeeChat 3.4)
[00:18:42] *** Quits: shiranaihito (~textual@123-192-192-149.dynamic.kbronet.com.tw) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:19:28] *** Joins: peteyboy_ (~peteyboy1@95.169.226.66)
[00:23:35] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[00:25:45] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[00:26:45] *** Quits: immibis (~hexchat@2a02:3032:3:a84:62b2:c42d:455d:d277) (Read error: Connection reset by peer)
[00:27:19] *** Joins: immibis (~hexchat@2a02:3032:3:a84:62b2:c42d:455d:d277)
[00:28:54] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[00:28:57] *** Quits: mizi (~mizi@user/mizi) (Ping timeout: 240 seconds)
[00:28:58] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 260 seconds)
[00:30:49] *** Joins: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca)
[00:31:14] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[00:33:48] *** Quits: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net) (Ping timeout: 240 seconds)
[00:34:00] *** Quits: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca) (Client Quit)
[00:34:18] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[00:37:17] *** Joins: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net)
[00:43:40] *** Joins: zeden (~zeden@user/zeden)
[00:43:52] *** Joins: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca)
[00:51:25] *** Joins: maciek__ (~maciek@99-145-198-91.lightspeed.sntcca.sbcglobal.net)
[00:53:48] *** Quits: maciek_ (~maciek@2600:1700:a412:1c00:527c:7c21:9b2d:7981) (Ping timeout: 240 seconds)
[00:57:06] *** Quits: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca) (Quit: Leaving.)
[00:57:57] *** Quits: TomyWork (~TomyLobo@p200300e80f158200bdaa2a965951a208.dip0.t-ipconnect.de) (Quit: Leaving)
[00:59:46] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:02:21] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[01:07:14] *** Quits: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 250 seconds)
[01:07:26] *** Joins: Maxattax97 (~max@2600:1700:68c0:3bb0::43)
[01:08:37] *** Joins: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net)
[01:14:17] *** Quits: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 256 seconds)
[01:16:28] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[01:22:30] *** Quits: leighbb (~leighbb@user/leighbb) (Quit: Leaving)
[01:24:45] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[01:27:43] *** Quits: chadea (~a@pool-96-241-113-90.washdc.fios.verizon.net) ()
[01:32:12] *** Quits: maciek__ (~maciek@99-145-198-91.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 240 seconds)
[01:32:30] *** Quits: immibis (~hexchat@2a02:3032:3:a84:62b2:c42d:455d:d277) (Remote host closed the connection)
[01:32:37] *** Joins: immibis (~hexchat@2a02:3032:3:a84:62b2:c42d:455d:d277)
[01:33:10] *** Joins: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net)
[01:34:09] *** Joins: tozhu (~tozhu@119.128.179.222)
[01:35:57] *** Quits: immibis (~hexchat@2a02:3032:3:a84:62b2:c42d:455d:d277) (Read error: Connection reset by peer)
[01:36:07] *** Joins: immibis (~hexchat@2a02:3032:3:a84:62b2:c42d:455d:d277)
[01:36:29] *** Quits: magla (~gelignite@d53619a1.access.ecotel.net) (Quit: Stay safe!)
[01:37:03] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:37:06] *** Quits: ftzdomino (~ftzdomino@184-090-162-255.res.spectrum.com) (Read error: Connection reset by peer)
[01:37:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[01:41:32] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:42:39] *** Joins: maciek__ (~maciek@2600:1700:a412:1c00:674b:ecd8:1a9b:6a6b)
[01:48:54] *** Quits: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[01:50:33] *** Joins: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net)
[01:52:55] *** Quits: karabaja4 (~karabaja4@dh207-94-36.xnet.hr) (Remote host closed the connection)
[01:55:38] *** Joins: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net)
[01:57:08] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[01:59:05] *** Joins: karabaja4 (~karabaja4@dh207-94-36.xnet.hr)
[01:59:12] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 272 seconds)
[01:59:30] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:59:51] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[02:03:18] *** Quits: greyrat_ (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[02:03:38] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[02:04:11] *** Quits: XRevan86 (7018dab47d@meowr.ru) (Ping timeout: 252 seconds)
[02:04:38] *** Quits: wkoszek (~debian@ns3066665.ip-79-137-70.eu) (Ping timeout: 260 seconds)
[02:05:17] *** Quits: stw (~stwalkers@wikimedia/stwalkerster) (Ping timeout: 240 seconds)
[02:05:36] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::4f67)
[02:06:17] *** Quits: Su-Shee (~Susanne@p4ffc7b18.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[02:06:21] *** Joins: wkoszek (~debian@ns3066665.ip-79-137-70.eu)
[02:06:29] *** Joins: stw (~stwalkers@wikimedia/stwalkerster)
[02:06:30] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[02:06:35] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[02:06:45] *** Joins: dexter (dexter@2a01:7e00::f03c:91ff:fe86:59ec)
[02:07:18] *** Joins: Su-Shee (~Susanne@p4ffc7b18.dip0.t-ipconnect.de)
[02:08:24] *** Server sets mode: +Ccnt 
[02:10:16] *** Quits: dexterfoo (~dexter@li655-253.members.linode.com) (Ping timeout: 250 seconds)
[02:12:04] *** Quits: rufito (~phil@186-79-1-138.baf.movistar.cl) (Quit: Leaving)
[02:13:30] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[02:14:18] *** Quits: Maxattax97 (~max@2600:1700:68c0:3bb0::43) (Remote host closed the connection)
[02:14:30] *** Quits: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net) (Quit: See you on the flip side.)
[02:15:07] *** Joins: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net)
[02:15:46] *** Joins: concrete-houses (~g@209.6.150.53)
[02:15:49] *** Joins: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca)
[02:16:01] <concrete-houses> is there a way to see if a sequence was manually incremented?
[02:18:59] *** Quits: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca) (Client Quit)
[02:20:12] <concrete-houses> someone is like it is 54 over the start but we ddint call it that many times
[02:25:59] <StuckMojo> hey, logical replication quesiton: i've created a publicaion/subscription using FOR ALL TABLES, and there's one table on the subscriber that has an off rowcount. can i drop and add just that one table back? i.e. get that one table to do the initial copy and sync again, without doing all the tables?
[02:26:01] *** Joins: tehenderz_ (~tehenderz@ti0018a400-8627.bb.online.no)
[02:26:12] *** Quits: tehenderz (~tehenderz@ti0018a400-9051.bb.online.no) (Ping timeout: 268 seconds)
[02:30:13] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 256 seconds)
[02:33:37] *** Quits: concrete-houses (~g@209.6.150.53) (Ping timeout: 256 seconds)
[02:36:39] <StuckMojo> isdspgdb-acs-sdp-spinnaker-prod:pgdba@spinnaker_apc_prod=> alter publication spinnaker_prod_rds drop table public.pipeline_stages;
[02:36:42] <StuckMojo> ERROR:  publication "spinnaker_prod_rds" is defined as FOR ALL TABLES
[02:36:45] <StuckMojo> DETAIL:  Tables cannot be added to or dropped from FOR ALL TABLES publications.
[02:36:48] <StuckMojo> oops
[02:37:28] *** Joins: fungicord (~fungicord@2601:248:c500:661f:44bf:578d:1feb:b017)
[02:37:34] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[02:39:24] *** Quits: ur5us (~ur5us@2406:e002:6804:8a01:f026:9131:1160:dcf8) (Ping timeout: 240 seconds)
[02:40:01] <dodobrain> hi all, i'm trying to use row level security. I'm a little confused on whether i need to grant privileges on the _seq tables as well
[02:41:07] *** Quits: bmomjian (~bruce@momjian.us) (Quit: Leaving.)
[02:41:41] *** Joins: bmomjian (~bruce@momjian.us)
[02:41:53] *** Joins: concrete-houses (~g@209.6.150.53)
[02:42:54] <concrete-houses> I have a developer asking my if I can see who manually incrememnted a sequence?  looks like its been incremented 54 times but he is saying user didn't 'hit' that part of the app that many times....
[02:43:03] <concrete-houses> It would seem someone called nextval?
[02:43:06] <concrete-houses> maybe the app?
[02:43:11] <concrete-houses> I am at a loss
[02:44:02] <dodobrain> concrete-houses, woah.. someone is concerned about the sequence number? why
[02:45:39] *** Quits: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net) (Quit: See you on the flip side.)
[02:45:48] *** Quits: uncleyear (~ian@pppoe.178-66-156-85.dynamic.avangarddsl.ru) (Ping timeout: 240 seconds)
[02:45:58] <nbjoerg> hm. trying to replace my blob table with a more specialised service. anyone have a recommendation for an object storage system that doesn't actually use one file per object and ideally support delta compression etc out of the box?
[02:47:47] *** Quits: immibis (~hexchat@2a02:3032:3:a84:62b2:c42d:455d:d277) (Remote host closed the connection)
[02:48:20] *** Joins: immibis (~hexchat@2a02:3032:3:a84:62b2:c42d:455d:d277)
[02:48:37] *** Quits: peteyboy_ (~peteyboy1@95.169.226.66) (Ping timeout: 256 seconds)
[02:50:18] <StuckMojo> dodobrain: only if the role will be inserting into the table. if it's read-only, then no
[02:51:21] <StuckMojo> concrete-houses: no you can't see who. remind the dev that begin; insert ... ; rollback; will still advance the sequence
[02:51:29] <peerce> nbjoerg; as long as these blobs are at least a dozen KB each on the average, whats wrong with using files on a modern file system ?
[02:51:32] <StuckMojo> concrete-houses: someone could have also called setval() on it
[02:51:34] *** Quits: ssiyad (~ssiyad@user/ssiyad) (Read error: Connection reset by peer)
[02:51:43] *** Joins: ssiyad (~ssiyad@user/ssiyad)
[02:52:00] <dodobrain> StuckMojo, yes the role will be inserting into the tables.
[02:52:36] <StuckMojo> IIRC you don't run into as many issue with the new identity columns
[02:52:43] <nbjoerg> peerce: there is quite a variance in size and even a sector lost on average would sum up quite a bit
[02:52:46] <StuckMojo> ??identity
[02:52:46] <pg_docbot> https://wiki.postgresql.org/wiki/Identity_Guidelines :: https://www.depesz.com/2017/04/10/waiting-for-postgresql-10-identity-columns/
[02:52:47] <pg_docbot> https://wiki.postgresql.org/wiki/Logo :: https://blog.2ndquadrant.com/postgresql-10-identity-columns/
[02:52:47] <pg_docbot> https://www.postgresql.org/docs/current/sql-createtable.html
[02:53:15] <nbjoerg> peerce: also secondary effects like impact on backup etc
[02:53:39] <dodobrain> so i need to grant privileges on the seq tables as well? thats fine. but i want on my app tests and perhaps bootstrapping/infra code to verify that those seq tables have the privileges on those tables
[02:53:52] <StuckMojo> not the sequence tables, the sequences
[02:54:11] <dodobrain> but the problem is that the seq tables dont show up in `select * from information_schema.role_table_grants;`
[02:54:29] <peerce> when you grant permissions to a table, doesn't that automatically grant it for any sequences 'owned' by that table ?
[02:54:49] <peerce> dodobrain; use pg_catalog not information_schema
[02:54:50] <StuckMojo> you don't grant permissions on the sequence table, you grant on the sequence
[02:55:18] <StuckMojo> grant usage on sequence foo_seq TO myrole;
[02:55:45] <StuckMojo> there are three possible perms: select, update, usage
[02:56:00] <StuckMojo> https://www.postgresql.org/docs/current/sql-grant.html
[02:56:09] <StuckMojo> peerce: no it doesn't
[02:56:21] <StuckMojo> OWNED BY just drops the sequence when the table is dropped
[02:56:31] <StuckMojo> https://www.2ndquadrant.com/en/blog/postgresql-10-identity-columns/
[02:56:34] *** Joins: DNH (~DNH@2a02:8109:b740:2c4:d4c3:770e:71a9:8cce)
[02:59:17] *** Quits: hoppity_ (~hoppity@mobile-166-172-56-167.mycingular.net) (Ping timeout: 240 seconds)
[03:00:45] *** Parts: fungicord (~fungicord@2601:248:c500:661f:44bf:578d:1feb:b017) (Leaving)
[03:04:45] *** Joins: cation21 (cation@user/cation)
[03:04:47] *** Quits: fordfrog (~fordfrog@gentoo/developer/fordfrog) (Quit: Leaving)
[03:05:46] *** Quits: cation (cation@user/cation) (Ping timeout: 260 seconds)
[03:08:08] *** cation21 is now known as cation
[03:14:17] *** Joins: peteyboy_ (~peteyboy1@95.169.226.66)
[03:14:44] <StuckMojo> dodobrain: select * from information_schema.role_usage_grants where grantee != 'PUBLIC';
[03:15:06] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 260 seconds)
[03:15:14] <StuckMojo> dodobrain: better: select * from information_schema.role_usage_grants where object_type = 'SEQUENCE';
[03:15:52] *** Joins: hoppity_ (~hoppity@mobile-166-172-56-167.mycingular.net)
[03:16:12] *** Joins: fungicord (~fungicord@2601:248:c500:661f:44bf:578d:1feb:b017)
[03:16:16] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[03:16:36] <dodobrain> im still confused a little bit. so am i only looking for `usage` for the role on a particular sequence?
[03:17:21] *** Joins: KombuchaKip (~kip@192.252.230.5)
[03:17:36] <dodobrain> i dont need to check for update or select like on regular tables ?
[03:17:39] <StuckMojo> yes, if you want them to be able to "use" the sequene, i.e. call nextval() on it / insert into tables using that sequence as a default value
[03:17:48] <fungicord> New to PostgreSQL here.  Does DROP DATABASE not destroy data?  I'm expecting DROP DATABASE followed by CREATE DATABASE to create a clean database, but that's not what I see.  In an simple test script where I start with CREATE DATABASE and end with DROP DATABASE, the next time I run the script, the sample data contained within a sample table that
[03:17:48] <fungicord> I create persists from run to run.  Unless I explicitly run a DROP TABLE, the table and data remains.  Is this normal behavior?
[03:18:01] <StuckMojo> IT'S NOT A TABLE, IT'S A SEQUENCE!
[03:18:03] <StuckMojo> sheesh
[03:18:10] <dodobrain> yes, i didnt say they were
[03:18:54] <dodobrain> i mneant to say 'like i check privileges on regular tables'.
[03:18:55] <StuckMojo> on a sequence: SELECT == currval(), USAGE == nextval(), UPDATE == setval()
[03:19:00] *** Joins: XRevan86 (7018dab47d@meowr.ru)
[03:19:11] <StuckMojo> yes
[03:20:42] *** Quits: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net) (Ping timeout: 250 seconds)
[03:22:17] <StuckMojo> fungicord: yes it destroys data. create database foo; implicitly means create database foo template tamplate1; , which makes a copy of template1 and names it foo
[03:22:32] <StuckMojo> anything present in template1 will be in every new database you create
[03:22:43] *** Joins: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net)
[03:23:24] <StuckMojo> fungicord: is the drop database succeeding? you can't run drop database on the db you're currently connected to
[03:23:37] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[03:24:09] <StuckMojo> so run your script, then connect with psql and see if it's actually getting dropped
[03:24:16] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[03:25:40] <fungicord> StuckMojo: It appears that the drop database is succeeding.  The reason I think so it that if I don't drop the database, during the next run, the engine will error out saying that the database foo (or in my case 'test') already exists.
[03:26:05] *** Joins: zz1 (~Thunderbi@p10605177-ipngn25001marunouchi.tokyo.ocn.ne.jp)
[03:26:33] <StuckMojo> then look in template1, you probably accidentally created your table there
[03:26:38] <fungicord> StuckMojo: Also, checking with pgAdmin4 GUI, the database is gone between runs.
[03:28:15] *** Quits: immibis (~hexchat@2a02:3032:3:a84:62b2:c42d:455d:d277) (Remote host closed the connection)
[03:28:50] *** Joins: immibis (~hexchat@2a02:3032:3:a84:62b2:c42d:455d:d277)
[03:29:17] *** Quits: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net) (Ping timeout: 240 seconds)
[03:29:27] <fungicord> StuckMojo: If I explicitly run DROP TABLE during the script cleanup near the end, then the problem goes away.  In other words, during the next run, the table will not be pre-populated.
[03:29:45] <Net> Should I save the result of current_setting() to a variable in my plpgsql function if I'm using it multiple times? Not sure how efficient the configuration lookup it is.
[03:30:01] <fungicord> StuckMojo: ...or even exist.
[03:30:49] <StuckMojo> fungicord: again, look in template1
[03:32:36] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 240 seconds)
[03:35:03] <johto> fungicord; if it's not a production server, I'd enable all statement logging to see what's actually hapenning
[03:37:02] <fungicord> johto: Not a production server.  I guess I have two new projects: find out how to look in template1 and how to enable all statement logging.
[03:38:02] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::4f67) (Ping timeout: 250 seconds)
[03:38:38] *** Parts: strk (~strk@user/strk) (WeeChat 3.4)
[03:39:02] <StuckMojo> fungicord: create database foo; connect to foo, look for your table
[03:39:41] <StuckMojo> if it's there, then it's in templat1
[03:39:55] <StuckMojo> *template1
[03:40:13] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::4f67)
[03:40:45] <StuckMojo> fungicord: so look in the template1 databaes. lots of tools connet to that db by default when you connect to the server, so it's very easy to accidentally create tables in it, and then they're in all your databases going forward
[03:42:14] <StuckMojo> that's a feature btw. like say you want the pg_stat_statements extension in every database you create, you can just connect to template1, and CREATE EXTENSION pg_stat_statements; and it will be in every new db you create going forward
[03:42:44] <fungicord> StuckMojo: I think that's what's happening then because I don't explicitly connect to the database after creating it.
[03:43:09] <StuckMojo> ha! then you're not creating *anything* in your new db at all.
[03:43:25] <StuckMojo> you're creating it, then doing all your work in template1, then dropping it...all without ever using it
[03:43:48] <StuckMojo> actually, it can't be template1, it's whatever db you're connecting to, likely "postgres"
[03:44:02] <StuckMojo> because if you're connected to template1, create database will fail
[03:44:17] <fungicord> StuckMojo: It's postgres.
[03:44:34] <StuckMojo> oh wait, i take that back. you can create a db while connected to template1
[03:44:42] <fungicord> StuckMojo: I'm starting to understand now.  Beginner error.
[03:44:47] <StuckMojo> yup
[03:45:00] <StuckMojo> \c dbname in your script will switch databasees
[03:45:29] <StuckMojo> for psql anyway. if you're running it with pgadmin i'm not sure
[03:45:59] *** Quits: Rashad (~textual@2a01:9700:1a6e:c600:1159:1349:45b0:622b) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:46:25] <fungicord> StuckMojo: I'm using psycopg3 library within a Python script.
[03:47:17] *** Quits: zz1 (~Thunderbi@p10605177-ipngn25001marunouchi.tokyo.ocn.ne.jp) (Ping timeout: 240 seconds)
[03:47:35] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[03:47:47] <fungicord> StuckMojo: Thanks for the help.
[03:48:11] *** Joins: ur5us (~ur5us@2406:e002:6804:8a01:f026:9131:1160:dcf8)
[03:48:15] <StuckMojo> yw
[03:48:31] *** Quits: tozhu (~tozhu@119.128.179.222) (Quit: tozhu)
[03:49:37] *** Quits: shka (~herr@109.231.3.55) (Ping timeout: 240 seconds)
[03:51:54] *** Quits: Guest3952 (~vit@chello085216193138.chello.sk) (Ping timeout: 250 seconds)
[03:53:20] *** Parts: fungicord (~fungicord@2601:248:c500:661f:44bf:578d:1feb:b017) ()
[03:54:50] *** Quits: immibis (~hexchat@2a02:3032:3:a84:62b2:c42d:455d:d277) (Remote host closed the connection)
[03:55:02] *** Joins: immibis (~hexchat@2a02:3032:3:a84:62b2:c42d:455d:d277)
[04:03:02] *** Quits: pedja (~pedja@user/deus-ex/x-7934090) (Quit: Leaving)
[04:04:36] *** Quits: maciek__ (~maciek@2600:1700:a412:1c00:674b:ecd8:1a9b:6a6b) (Ping timeout: 240 seconds)
[04:07:02] *** Quits: DNH (~DNH@2a02:8109:b740:2c4:d4c3:770e:71a9:8cce) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:09:02] *** Quits: gp5st (~gp5st@pool-72-77-44-213.pitbpa.fios.verizon.net) (Ping timeout: 272 seconds)
[04:10:45] *** Joins: zeden (~zeden@user/zeden)
[04:11:43] *** Quits: hoppity_ (~hoppity@mobile-166-172-56-167.mycingular.net) (Remote host closed the connection)
[04:13:21] *** Joins: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr)
[04:14:35] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[04:18:34] *** Quits: palasso (~palasso@user/palasso) (Read error: Connection reset by peer)
[04:22:04] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[04:23:14] *** Joins: dfee (~dfee@162-227-164-101.lightspeed.sntcca.sbcglobal.net)
[04:23:31] <dfee> > maybe just maybe that jsonb data should be in a 'real' table instead of jammed into a field [ peerce ]
[04:24:03] <dfee> 100% agree. wasn't there for the initial design, and now chopping it down as much as possible to separate tables
[04:24:20] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[04:24:45] <dfee> p.s. really unenthusiastic about textual on MacOS as an irc client. suggestions welcome :)
[04:47:21] *** Joins: maciek__ (~maciek@2600:1700:a412:1c00:c213:a16d:8613:2e42)
[04:48:11] *** Joins: tozhu (~tozhu@112.93.133.100)
[04:50:40] *** Joins: GeorgeK (~GeorgeK@cpe-70-92-5-228.wi.res.rr.com)
[04:58:07] *** Joins: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca)
[05:00:05] *** Joins: hoppity_ (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net)
[05:00:23] *** Quits: Reiner_Unsinn (~quassel@p4fd6db85.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[05:04:55] *** Quits: hoppity_ (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net) (Remote host closed the connection)
[05:08:05] *** Joins: mihael (~mihael@115.146.176.131)
[05:09:01] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:10:33] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:11:44] *** Quits: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 272 seconds)
[05:12:39] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[05:13:42] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[05:14:33] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 256 seconds)
[05:14:57] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[05:15:07] *** Quits: zlinux (~zlinux@149.109.5.240) (Ping timeout: 256 seconds)
[05:15:24] *** Quits: Auron (Auron956@user/auron) ()
[05:15:32] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 272 seconds)
[05:19:09] *** Joins: immibis_ (~hexchat@62.156.144.218)
[05:21:57] *** Quits: immibis (~hexchat@2a02:3032:3:a84:62b2:c42d:455d:d277) (Ping timeout: 268 seconds)
[05:25:58] *** Quits: tozhu (~tozhu@112.93.133.100) (Quit: tozhu)
[05:27:17] *** Quits: concrete-houses (~g@209.6.150.53) (Ping timeout: 256 seconds)
[05:27:53] <k_sze> It's been a long while since I last used PostgreSQL, but does PostgreSQL sometimes need to auto-create an index when you add a foreign key?
[05:28:53] *** Joins: concrete-houses (~g@209.6.150.53)
[05:32:13] *** Joins: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net)
[05:34:16] *** Joins: tozhu (~tozhu@14.18.232.142)
[05:37:19] *** Joins: richard_h (~richard@2406:e001:8:a900:6e62:6dff:fe05:ae29)
[05:37:47] *** Quits: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 256 seconds)
[05:38:50] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:40:17] *** Quits: tozhu (~tozhu@14.18.232.142) (Quit: tozhu)
[05:42:37] *** Joins: bigGopher (~dan@207.98.176.66)
[05:42:37] *** Quits: MrZeus__ (~MrZeus@185.195.232.144) (Ping timeout: 240 seconds)
[05:44:33] *** Joins: krismatrix (~krismatri@c-73-212-30-17.hsd1.md.comcast.net)
[05:49:02] *** Joins: tozhu (~tozhu@120.236.74.126)
[05:50:09] *** Quits: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca) (Quit: Leaving.)
[05:51:55] *** Joins: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net)
[05:54:13] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[05:55:24] *** Quits: f3f3lix (~weechat@55d4a2d3.access.ecotel.net) (Ping timeout: 240 seconds)
[05:56:11] *** Quits: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr) (Ping timeout: 256 seconds)
[05:56:41] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[05:56:45] *** Quits: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 256 seconds)
[05:57:40] *** Joins: f3f3lix (~weechat@55d4e9cc.access.ecotel.net)
[05:57:51] *** Joins: jazzy (~jaziz@user/jaziz)
[06:02:25] *** Quits: daftaupe (~daftaupe@82.66.95.80) (Quit: Ping timeout (120 seconds))
[06:02:34] *** Quits: marco44 (~marco44@82-64-126-208.subs.proxad.net) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[06:02:49] *** Joins: marco44 (~marco44@82-64-126-208.subs.proxad.net)
[06:02:57] *** Joins: daftaupe (~daftaupe@82.66.95.80)
[06:07:10] *** Quits: krismatrix (~krismatri@c-73-212-30-17.hsd1.md.comcast.net) (Quit: Leaving)
[06:10:59] *** Quits: tozhu (~tozhu@120.236.74.126) (Quit: tozhu)
[06:20:35] *** Joins: tozhu (~tozhu@112.93.133.100)
[06:23:30] *** Quits: Xelnor (xelnor@2a01:e34:ec7b:5e70::2) (Quit: \"Fatal error in /dev/brain : no neuron found\")
[06:24:52] *** Quits: Su-Shee (~Susanne@p4ffc7b18.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:26:32] *** Joins: Su-Shee (~Susanne@p5089413d.dip0.t-ipconnect.de)
[06:31:41] *** Quits: tozhu (~tozhu@112.93.133.100) (Quit: tozhu)
[06:36:31] *** Joins: tozhu (~tozhu@120.236.74.126)
[06:36:53] *** Quits: arcanez (~arcanez@warpedreality.org) (Remote host closed the connection)
[06:37:11] *** Joins: arcanez (~arcanez@warpedreality.org)
[06:39:10] *** Joins: furrymcg1e (~devuan@cgn-89-1-211-94.nc.de)
[06:42:39] *** Quits: furrymcgee (~devuan@cgn-89-1-209-226.nc.de) (Ping timeout: 256 seconds)
[06:46:17] *** Quits: maciek__ (~maciek@2600:1700:a412:1c00:c213:a16d:8613:2e42) (Ping timeout: 240 seconds)
[06:47:24] *** Quits: Vacuity (~Vacuity@user/vovo) (Ping timeout: 250 seconds)
[06:48:14] *** Quits: tozhu (~tozhu@120.236.74.126) (Quit: tozhu)
[06:48:28] *** Joins: tozhu (~tozhu@120.236.74.126)
[06:49:10] *** Joins: Vacuity (~Vacuity@user/vovo)
[06:49:57] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[06:53:48] *** Quits: peteyboy_ (~peteyboy1@95.169.226.66) (Ping timeout: 240 seconds)
[07:00:36] *** Quits: mihael (~mihael@115.146.176.131) (Quit: Client closed)
[07:07:43] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[07:10:11] *** Quits: tozhu (~tozhu@120.236.74.126) (Quit: tozhu)
[07:14:09] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[07:14:16] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 250 seconds)
[07:16:35] *** Quits: richard_h (~richard@2406:e001:8:a900:6e62:6dff:fe05:ae29) (Quit: Leaving.)
[07:19:13] *** Quits: n0fun_ (~jack@i577BC0AD.versanet.de) (Ping timeout: 256 seconds)
[07:19:20] *** Joins: n0fun (~jack@mue-88-130-48-228.dsl.tropolys.de)
[07:20:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[07:23:51] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[07:26:48] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[07:27:13] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[07:30:33] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 256 seconds)
[07:31:17] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::4f67) (Ping timeout: 240 seconds)
[07:33:56] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[07:39:59] *** Joins: tozhu (~tozhu@120.236.74.126)
[07:41:40] *** Quits: dfee (~dfee@162-227-164-101.lightspeed.sntcca.sbcglobal.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:43:28] *** Joins: dfee (~dfee@162-227-164-101.lightspeed.sntcca.sbcglobal.net)
[07:44:22] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 272 seconds)
[07:46:42] *** Quits: sreve (~quassel@p549d72b1.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[07:47:11] *** Joins: sreve (~quassel@p549d7115.dip0.t-ipconnect.de)
[07:49:00] *** Joins: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net)
[07:50:45] *** Quits: tozhu (~tozhu@120.236.74.126) (Quit: tozhu)
[07:53:25] *** Joins: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net)
[07:54:36] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 240 seconds)
[07:57:37] *** Quits: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 240 seconds)
[07:59:37] *** Quits: ur5us (~ur5us@2406:e002:6804:8a01:f026:9131:1160:dcf8) (Ping timeout: 240 seconds)
[08:04:45] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::4f67)
[08:07:11] *** Quits: AJTJ (~AJTJ@d205-234-49-159.yt.northwestel.net) (Quit: Leaving...)
[08:14:11] *** Quits: n0fun (~jack@mue-88-130-48-228.dsl.tropolys.de) (Ping timeout: 256 seconds)
[08:15:15] <dodobrain> given a tablename, how do i find all of its sequences (on any of its columns)?
[08:15:41] *** Joins: shiranaihito (~textual@123-192-192-149.dynamic.kbronet.com.tw)
[08:37:20] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[08:37:28] *** Joins: randir (~randir@95-25-111-216.broadband.corbina.ru)
[08:38:31] *** Quits: burakcank (~burakcank@has.arrived.and.is.ready-to.party) (Quit: fBNC - https://bnc4free.com)
[08:39:39] *** Quits: randir (~randir@95-25-111-216.broadband.corbina.ru) (Remote host closed the connection)
[08:41:09] *** Joins: tozhu (~tozhu@14.18.232.142)
[08:41:33] *** Joins: mattil (~mattil@87-92-35-167.bb.dnainternet.fi)
[08:42:08] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[08:44:57] *** Quits: Kaivo (~Kaivo@user/kaivo) (Ping timeout: 240 seconds)
[08:45:55] *** Quits: mattil (~mattil@87-92-35-167.bb.dnainternet.fi) (Ping timeout: 256 seconds)
[08:47:15] *** Quits: tozhu (~tozhu@14.18.232.142) (Quit: tozhu)
[08:48:08] *** Joins: mattil (~mattil@87-92-35-167.bb.dnainternet.fi)
[08:48:33] *** Quits: mattil (~mattil@87-92-35-167.bb.dnainternet.fi) (Remote host closed the connection)
[08:49:26] *** Joins: mattil__ (~mattil@helsinki.portalify.com)
[08:50:14] *** Joins: randir (~randir@95-25-111-216.broadband.corbina.ru)
[08:50:54] *** Quits: randir (~randir@95-25-111-216.broadband.corbina.ru) (Remote host closed the connection)
[08:51:40] *** Joins: burakcank (~burakcank@has.arrived.and.is.ready-to.party)
[08:51:51] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Ping timeout: 256 seconds)
[08:55:28] *** Quits: dfee (~dfee@162-227-164-101.lightspeed.sntcca.sbcglobal.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:57:05] *** Joins: dfee (~dfee@162-227-164-101.lightspeed.sntcca.sbcglobal.net)
[08:59:16] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[09:01:55] *** Joins: randir (~randir@95-25-111-216.broadband.corbina.ru)
[09:03:01] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Remote host closed the connection)
[09:03:19] *** Joins: tozhu (~tozhu@120.236.74.126)
[09:03:36] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[09:08:04] *** Joins: mattil (~mattil@87-92-35-167.bb.dnainternet.fi)
[09:08:12] *** Quits: mattil (~mattil@87-92-35-167.bb.dnainternet.fi) (Read error: Connection reset by peer)
[09:08:35] *** Joins: mattil (~mattil@87-92-35-167.bb.dnainternet.fi)
[09:08:36] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Ping timeout: 272 seconds)
[09:08:51] *** Quits: mattil__ (~mattil@helsinki.portalify.com) (Ping timeout: 256 seconds)
[09:11:41] *** Quits: dfee (~dfee@162-227-164-101.lightspeed.sntcca.sbcglobal.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:13:40] *** Quits: mattil (~mattil@87-92-35-167.bb.dnainternet.fi) (Ping timeout: 272 seconds)
[09:14:37] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[09:14:49] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 256 seconds)
[09:17:59] *** Joins: dfee (~dfee@162-227-164-101.lightspeed.sntcca.sbcglobal.net)
[09:20:02] *** Joins: ysch_ (~ysch@91.211.93.148)
[09:20:55] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[09:21:09] *** Joins: rvalue (~rvalue@user/rvalue)
[09:22:32] *** Quits: indy (~indy@dsl-static-104.213-160-167.telecom.sk) (Ping timeout: 272 seconds)
[09:22:35] <concrete-houses> information_schema
[09:22:37] *** Quits: concrete-houses (~g@209.6.150.53) (Quit: Lost terminal)
[09:22:39] *** Parts: sbrown (~sbrown@66.44.16.44) (Leaving…)
[09:22:45] *** Quits: ysch (~ysch@91.211.93.148) (Ping timeout: 256 seconds)
[09:22:53] *** ysch_ is now known as ysch
[09:22:56] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:858f:1c83:7b4e:c545)
[09:26:23] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:71e5:4f52:ed0e:7b4e) (Ping timeout: 252 seconds)
[09:26:48] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[09:27:20] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[09:27:37] *** Joins: the_lanetly_052 (~the_lanet@185.30.91.173)
[09:28:41] *** Quits: bmomjian (~bruce@momjian.us) (Ping timeout: 245 seconds)
[09:30:08] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 272 seconds)
[09:30:14] *** Joins: Darius_ (~darius@midget.dons.net.au)
[09:30:43] *** Quits: Darius (~darius@2403-5800-5200-4700-225-90ff-fe47-39b4.ip6.aussiebb.net) (Ping timeout: 256 seconds)
[09:30:49] *** Darius_ is now known as Darius
[09:31:45] *** Quits: dfee (~dfee@162-227-164-101.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[09:38:35] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[09:40:43] *** Joins: RangeRick (~quassel@99-69-21-21.lightspeed.rlghnc.sbcglobal.net)
[09:42:12] *** Quits: RangerRick (~quassel@99-69-21-21.lightspeed.rlghnc.sbcglobal.net) (Ping timeout: 240 seconds)
[09:42:20] *** Quits: tozhu (~tozhu@120.236.74.126) (Quit: tozhu)
[09:42:31] *** Joins: zemis (~zemis@ip-89-176-21-138.net.upcbroadband.cz)
[09:44:06] *** Joins: tozhu (~tozhu@120.236.74.126)
[09:44:44] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[09:48:06] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::4f67) (Ping timeout: 250 seconds)
[09:54:14] *** Joins: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net)
[09:57:03] <maret> HI I am running through my application several select for update queries in transaction. I noticed that my application halted and I see several such a statements in idle in transaction state. When I run the same statements through PSQL in transaction they don't return any rows.I am not sure why they got stuck. I expect I made an error on application logic but I am still bit suprised why I am able to run the same query manually I would expect
[09:57:03] <maret>  it to become also idle
[09:58:12] *** Quits: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 240 seconds)
[10:00:08] <peerce> idle in transaction means the last query on that connection finishes, and returned to your application, and you are just sitting there doing nothing with the database
[10:00:21] <peerce> now, if thats just for a few seconds while you do something external, no big deal
[10:00:41] <peerce> but, you need to COMMIT (or ROLLBACK) to finish your transactions.
[10:03:11] <peerce> an idle in transaction that lasts longer than the worst case time for yoiur app to do some external process is a bad thing.
[10:04:09] <peerce> if your application started a transation then has to talk to some other system before it can complete that transaction, it probably should have a timeout, and do a rollback if that external operation hangs.
[10:04:58] <peerce> if you are interacting with two separate transactional systems, there's a concept, 2PC, which stands for Two Phase Commit, and is usually implemented by an old school 'transaction manager'
[10:05:06] <peerce> it ensures you don't get trapped here.
[10:06:02] <peerce> you know, for each of connection, you can figure out what application process it belongs to, then you might trace or debug your application process to see what *it* is doing.
[10:08:17] <peerce> pg_stat_activity hass a row for each connection session, and it includes the client_address, client_hostname, client_port... with those you can use lsof -i (linux specific) on the client host to see which process on that client owns that source port with dest: databasehost:databaseport
[10:08:23] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:08:44] <peerce> then attach gdb or whatever to it, and do a traceback to see what its doing
[10:09:08] <peerce> depends on your application programming system obviously
[10:09:30] <peerce> if the app is on the same host,  you can find out if it has a domain socket to 'pid'
[10:09:47] <peerce> [i forget how, but its pretty basic albeit old school]
[10:10:53] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:11:32] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:12:09] *** Quits: zmt00 (~zmt00@user/zmt00) (Quit: Leaving)
[10:12:32] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:12:39] <maret> Thank you!, this make sense. Still I though that I should not be able to run same query which is now idle in transaction
[10:12:41] <maret> what am I missing?
[10:12:50] *** Joins: darutoko (~darutoko@37.21.177.133)
[10:13:07] *** Joins: zmt00 (~zmt00@user/zmt00)
[10:13:11] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:13:53] <peerce> um, huh?     idle in transaction is a connection state.       there's no running query.     you can see what the /last/ query on that connection was, but its done, fini, kaput.
[10:13:55] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:14:33] <peerce> each client process should have its own postgres connection(s)
[10:14:33] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:14:53] <peerce> and is responsible for using those sanely.
[10:15:18] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:15:57] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:16:03] <peerce> where I've most often seen idle in transaction (lets call it IIT as its a mouthful to type), is when someone is using a database indepdenent wrapper/API, like JDBC, which tries to enforce a uniform transaction model on things.
[10:16:08] <maret> doesnt that mean that transaction didnt commit though?
[10:16:35] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[10:16:42] *** Quits: javi404 (~quassel@pool-173-63-15-246.nwrknj.fios.verizon.net) (Quit: No Ping reply in 180 seconds.)
[10:16:43] <peerce> eactly, it means your app did a START TRANSACTION;  (alias BEGIN;), and never did a COMMIT;  or ROLLBACK; ...
[10:16:44] *** Quits: urandom9000 (~urandom30@2600:1700:1474:4b70:c0f2:8795:999e:f9f3) (Quit: Leaving)
[10:16:47] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:17:25] <peerce> what I was starting to say was, things like jdbc automatically generate trnansactions, and expect you to use a jdbc .commit() method
[10:17:25] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:17:30] <maret> yeah so doesn't select for update locks the row until its transaction commits or rollsback? Therefore I would expect any other query for the same row haning.
[10:17:56] <peerce> well, are there queries that are waiting on locks related to any of your active select for updates ?
[10:18:01] *** Joins: javi404 (~quassel@pool-173-63-15-246.nwrknj.fios.verizon.net)
[10:18:10] <peerce> those would be from other programs, on other connections/sessions.
[10:18:10] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:18:48] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:19:22] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:19:33] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:20:04] <maret> well now  thats my point, I run the same query as query which connection is in idle state using PSQL I would expect the second query to hang too
[10:20:05] <peerce> eg, other rows of pg_stat_activity
[10:20:08] *** Quits: k8yun_ (~k8yun@user/k8yun) (Quit: Leaving)
[10:20:11] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:20:54] <peerce> hmmmm,  thats not something easy to come up with a simple example of using a fiddle, since it requires multiple client processes doing things in a specific order.
[10:20:56] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:21:22] <peerce> Idle and IIT are two different things.
[10:21:35] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:21:38] <peerce> Idle means no active transaction, connection is ready to do something fresh.
[10:21:57] <maret> would the query hang even if it doesnt return any rows?
[10:21:58] <peerce> IIT means its in an active transaction but the client is sucking its thumb.
[10:22:13] <peerce> nope, that would return a 0 row result set.
[10:22:19] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:22:28] <peerce> happens all the time.   SELECT * FROM TABLE WHERE FALSE;
[10:22:39] <peerce> zip, zoom.   non.   empty set.
[10:22:57] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:23:28] <peerce> that result set would have all the named and typed files from "TABLE" but 0 rows.
[10:23:37] <peerce> all meta, no data.
[10:23:57] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[10:24:10] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:24:47] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:25:33] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:26:11] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:26:39] *** Joins: Reiner_Unsinn (~quassel@p4fd6db85.dip0.t-ipconnect.de)
[10:26:56] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:26:58] <peerce> thing about postgres, if you just issue a query, then that query runs as its own transaction.    you have to explicitly do a BEGIN;  or START TRANSACTION;  to be in a transaction, then you stay in one til you COMMIT, ROLLBACK, or disconnect and close the session/connection.
[10:27:31] <peerce> but things like JDBC and others enforce an automatic transaction, and have a .commit API of some sort.
[10:27:35] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:28:19] <peerce> with JDBC etc, yoou can set autocommit true,   then they will NOT do this, and they will default to the postgres default behavior, and let you manage PG transactions yourself.
[10:28:19] *** Quits: mattil (~mattil@helsinki.portalify.com) (Read error: Connection reset by peer)
[10:28:57] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:29:11] <peerce> this freaked out a couple of the old Oracle developers in my group, because they didn't think they should have to COMMIT pure read operations.    but with pg_jdbc, SELECT  starts a transaction.
[10:29:42] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:30:21] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:31:05] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:31:43] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:32:28] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:33:07] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:33:25] *** Joins: Amadiro (~Amadiro@45.91.21.36)
[10:33:54] <aLeSD[m]> hi guys. I have a OT question.
[10:34:20] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:34:44] *** Joins: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr)
[10:34:59] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:35:05] <aLeSD[m]> I ask here because postgres is what I know : I have to design a key/value database ... how could I design it knowing SQL schema design ?
[10:35:06] *** Quits: shiranaihito (~textual@123-192-192-149.dynamic.kbronet.com.tw) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[10:35:43] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:35:50] <aLeSD[m]> big thanks if you point me to a proper channel or documentation
[10:36:21] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:36:53] <mattmcc> You could use a json[b] field.
[10:37:06] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:37:45] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:37:48] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[10:38:45] <maret> peerce yeah make sense, thanks again!
[10:38:56] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:39:34] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:40:19] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:40:57] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:41:25] <peerce> aLeSD[m]; use key/data database to reinvent the minimal subset of the abstract concepts that come standard in relational databases like postgresql.
[10:42:47] <peerce> any less abstract advise than that would 1) require knowing the key/data database in use, 2) knowing the application problem, and 3) negotiating a contract with a database consultant willing to take that ugly job on
[10:44:42] <aLeSD[m]> lol
[10:45:52] *** Joins: gleu (~guillaume@2a02-842b-8f96-6001-0ccb-e12c-9dc6-5df0.rev.sfr.net)
[10:48:17] <peerce> I worked with a guy 40 years ago, in the days of 8 and 16 bit microprocessors, and CP/M, who had come from a major collegiate (and other) test data processing center, was a senior database guru.    this was **WAY** pre useful SQL.
[10:48:30] *** Joins: michalz (~michalz@185.246.204.93)
[10:48:44] <peerce> he implemented a database libary that was a bunch of primitives for building tuple sets, and btree indexes.
[10:48:58] <peerce> you could do relational programming with it, if you structured your stuff correctly.
[10:49:09] <peerce> but at its base, it was just tuples and indexes.
[10:49:18] *** Joins: manti7 (~manti7@176.10.104.94)
[10:49:43] <peerce> usually, fields were all fixed length, but really, that was up to your app.
[10:50:00] *** Joins: mrwick (~mrwick@user/mrwick)
[10:50:27] <peerce> since we only HAD 64 k bytes of core, and a CPU that ran at like 1-2 million 8 bit instructions/second, heh.
[10:50:42] <peerce> the disks were really really slow, too.
[10:51:38] <peerce> anyways.   OT OT OT.
[10:54:06] *** Joins: ponsfrilus (~Thunderbi@adsl-178-39-226-100.adslplus.ch)
[10:57:42] <aLeSD[m]> peerce: anyway thanks
[10:57:42] *** Quits: fcr (~fran@r167-60-6-208.dialup.adsl.anteldata.net.uy) (Read error: Connection reset by peer)
[10:57:57] *** Quits: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr) (Ping timeout: 256 seconds)
[10:59:06] *** Joins: shiranaihito (~textual@27.105.50.111)
[10:59:54] *** Joins: shiranaihito_ (~textual@27.105.50.111)
[10:59:55] *** Quits: shiranaihito (~textual@27.105.50.111) (Read error: Connection reset by peer)
[11:02:26] *** Quits: SAS (~SAS@2001:41d0:1:4547::1) (Read error: Connection reset by peer)
[11:04:22] *** Joins: ekathva (~ekathva@2001:999:51:19b8:36a1:fe41:db45:b13f)
[11:04:55] *** Joins: indy (~indy@dsl-static-104.213-160-167.telecom.sk)
[11:05:19] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[11:05:19] *** Quits: ponsfrilus (~Thunderbi@adsl-178-39-226-100.adslplus.ch) (Ping timeout: 256 seconds)
[11:05:31] *** Joins: ponsfrilus (~Thunderbi@vpn-251-247.epfl.ch)
[11:06:17] *** Joins: fcr (~fran@r167-60-139-9.dialup.adsl.anteldata.net.uy)
[11:08:06] *** Joins: jringstad__ (~Amadiro@45.154.138.40)
[11:09:56] *** Quits: jringstad__ (~Amadiro@45.154.138.40) (Remote host closed the connection)
[11:10:12] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[11:10:14] *** Joins: Amadiro_ (~Amadiro@45.154.138.40)
[11:11:49] *** Quits: Amadiro (~Amadiro@45.91.21.36) (Ping timeout: 256 seconds)
[11:11:58] *** Amadiro_ is now known as Amadiro
[11:12:49] *** zer0bitz_ is now known as zer0bitz
[11:15:16] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 272 seconds)
[11:20:00] *** Quits: tozhu (~tozhu@120.236.74.126) (Quit: tozhu)
[11:22:13] *** Joins: zlinux (~zlinux@149.109.5.240)
[11:24:23] *** Joins: `2jt (~jtomas@210.red-88-24-179.staticip.rima-tde.net)
[11:30:42] *** Quits: randir (~randir@95-25-111-216.broadband.corbina.ru) (Remote host closed the connection)
[11:31:32] *** Quits: iliv (~iliv@93-77-147-152.lvv.volia.net) (Ping timeout: 240 seconds)
[11:31:49] *** Quits: DarkG (~DarkG@user/darkg) (Excess Flood)
[11:31:59] *** Joins: fordfrog (~fordfrog@gentoo/developer/fordfrog)
[11:32:02] *** Joins: DarkG (~DarkG@user/darkg)
[11:37:15] *** Joins: rendar (~rendar@user/rendar)
[11:38:15] *** Joins: palasso (~palasso@user/palasso)
[11:41:45] *** Joins: Kaivo (~Kaivo@user/kaivo)
[11:43:19] *** Quits: shiranaihito_ (~textual@27.105.50.111) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[11:44:14] *** Joins: randir (~randir@93.159.239.42)
[11:47:46] *** Joins: iliv (~iliv@93-77-147-152.lvv.volia.net)
[11:48:39] *** Quits: randir (~randir@93.159.239.42) (Ping timeout: 256 seconds)
[11:53:17] *** Joins: shiranaihito (~textual@2001-b011-4011-30d5-304e-e92e-09e1-0d12.dynamic-ip6.hinet.net)
[11:55:31] *** Joins: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net)
[11:55:56] *** Quits: ekathva (~ekathva@2001:999:51:19b8:36a1:fe41:db45:b13f) (Ping timeout: 250 seconds)
[11:56:26] *** Joins: micw (~micw@ip-109-42-241-42.web.vodafone.de)
[11:57:29] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[11:58:02] <micw> Hello. I have a postgres db (with timescale extension) and quite a large timescale table with some device data. For my meter which has 7s values, I try to query weekly values which is incredible slow. could anyone help me to understand what the query does and how I can optimizie either the query or the database?
[11:58:04] <micw> https://privatebin.net/?102b69db4f14feea#DDptj2BAq7pWWSromZy3tsbPYvZgFBZuz9tXZRktVYaA
[11:58:11] <micw> That's the explain to the query
[11:59:03] *** Joins: DevAntoine (~DevAntoin@46.29.126.206)
[12:00:27] <Myon> use explain (analyze, buffers) for more details
[12:00:36] <Myon> and set track_io_timing=on;
[12:01:36] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[12:02:07] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[12:02:08] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 272 seconds)
[12:04:33] <micw> I did, waiting for a result ^^
[12:04:42] *** Joins: Xelnor (xelnor@2a01:e34:ec7b:5e70::2)
[12:06:42] <micw> https://privatebin.net/?6fd55b6b43bdf9d6#BtDCo3Xtpzd5UAC1SLwCEomDLbMKsJ1kDCvEHy87Ckvp
[12:08:05] <micw> i try to run the actual query (without explain and limit) to see how long it takes for a result
[12:08:26] <Berge> micw: Why did you add limit?
[12:08:31] <Berge> LIMIT without ORDER BY is essentially meaningless
[12:08:47] <micw> just to not flood my console with results
[12:08:50] <dminuoso> Berge: Its not?
[12:09:04] <Berge> dminuoso: For SELECT?
[12:09:10] <Berge> (Without FOR UPDATE or SKIP LOCKED)
[12:09:31] <Myon> micw: you need to run e(a,b) on the actual query you want to debug, not a different one
[12:09:33] <micw> interestingly, the explain without limit is way different
[12:09:35] <Berge> micw: Debugging performance issues with LIMIT isn't too useful either, as that change change both the plan, and _will_ change the execution
[12:09:37] <Myon> that includes LIMIT
[12:09:41] <dminuoso> Berge: I've had my share of uses of LIMIT without ORDER BY. :)
[12:09:56] <Berge> dminuoso: Do elaborate (-:
[12:10:10] <micw> I see. when the results are there, I repeat the explain without the limit
[12:10:26] <Berge> micw: Even better if you can use explain.depesz.com for EXPLAIN pastes
[12:11:07] <micw> I can see that it's reading from the volume with 400 IOP/s during the query which is the maximum for the volume.
[12:11:31] <Berge> micw: Rotating rust?
[12:11:37] <Berge> 400 IOPS is incredibly slow by modern standards, fwiw
[12:11:40] *** Joins: zlinux_ (~zlinux@149.109.4.143)
[12:11:48] <Berge> Even a low-end SSD will do much more.
[12:11:50] <dminuoso> Berge: It can be as simple as doing something like LIMIT 1, and then checking the returned row results. This gives you the ability to ask whether any matching row exists.
[12:12:59] <Berge> dminuoso: I'd use EXISTS, I think.
[12:13:18] <dminuoso> For a subquery? Sure.
[12:13:46] <Berge> SELECT EXISTS(SELECT * FROM table); But I suppose LIMIT 1 would also do the job there, it's a fair point
[12:13:51] <micw> I'd need to go to to bare-metal or a different cloud provider to get more IOPs. For the usual workload I run on that, it's fine.
[12:14:27] *** Quits: zlinux (~zlinux@149.109.5.240) (Ping timeout: 256 seconds)
[12:14:29] <Myon> micw: of the 98s for the last paste, 95s were spent waiting for disk IO
[12:14:52] *** Joins: Guest3952 (~vit@chello085216193138.chello.sk)
[12:15:21] <micw> I know. But the question is why does it need so much I/O for that query that would return just 150 results
[12:15:22] <Myon> given everything is index scans, there's probably no much to improve except for getting better storage (or more RAM)
[12:15:34] <Myon> because aggregate
[12:15:55] <micw> the first() aggregate?
[12:15:57] <Berge> Returning rows and "looking at" rows during execution are different things
[12:16:23] <micw> but it's first in time, which should be backed by the time index
[12:16:27] <Berge> micw: How would it know which rows that goes into which of the time buckets without inspecting them?
[12:16:28] <Myon> "group by ts"
[12:16:36] <Berge> Indexes also need to be read (-:
[12:16:40] <Berge> How much RAM do you have?
[12:16:55] <micw> 32 or 64 gig
[12:16:59] <Myon> I don't know timescale so I can't really say what happens there
[12:17:05] <micw> 32, it's the test system
[12:17:20] <Berge> How big are the indexes (and the actual table)?
[12:17:30] *** Joins: randir (~randir@93.159.239.42)
[12:17:44] <micw> how can i check this?
[12:18:04] <micw> hey, got a result
[12:18:36] *** Quits: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 272 seconds)
[12:20:25] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[12:20:54] <micw> The whole db is 700 GB, the table is the majority of the db
[12:21:49] *** Quits: randir (~randir@93.159.239.42) (Ping timeout: 256 seconds)
[12:21:52] <Berge> micw: https://wiki.postgresql.org/wiki/Disk_Usage has some neat queries to figure out table and index sizes
[12:22:33] <Berge> Try the "General Table Size Information" query
[12:24:39] *** Quits: robinsmidsrod (~robin@25.51-174-133.customer.lyse.net) (Ping timeout: 256 seconds)
[12:26:25] *** Joins: jpa (~jpa@2a01:e0a:5cb:6b80:9dd8:d715:f031:d21c)
[12:26:41] <micw> https://explain.depesz.com/s/2P4s
[12:26:43] <micw> The new explain
[12:27:09] <Berge> micw: The Stats tab is nice here
[12:27:12] <Berge>     Query read 8.2 GB bytes from disk (or system disk cache) in 432,283.850 ms, at ~ 20 MB/s
[12:28:09] <Berge> depesz: That IO speed estimation is really neat stuff
[12:29:02] <Myon> TIL
[12:31:20] <peerce> micw; i saw your original question, and have kinda ignored everything since.      time series queries really loaded down our main OLAP reporting database server, so we recreated these rollup servers, each one could keep rollups on 100s/1000ish different attributes, with hourly/shift/daily/weekly/monthly full set of statistics.
[12:31:24] *** Quits: the_lanetly_052 (~the_lanet@185.30.91.173) (Ping timeout: 240 seconds)
[12:31:31] <peerce> the dashboard folks loved it, because it gave them nearly realtime dashboards
[12:31:58] <peerce> there was a lookup server so they could see what attribute rollup was on which server.
[12:32:30] <peerce> lots of moving parts in a factory.
[12:32:49] <Berge> Or just get fast IO. (-:
[12:33:08] <Berge> Even entry-level SSD is two orders of magnitude faster than rotating rust.
[12:33:21] <Berge> At least for seek-heavy stuff.
[12:35:14] <Myon> micw: if you are doing OLAP-style queries, and the DB doesn't fit into RAM, you need fast disks, or live with the speed
[12:36:39] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[12:36:48] <peerce> SSD can be sketchy in a OLTP 99% small block random write envoronment
[12:37:05] <peerce> which is where our main OLTP server ran all the time
[12:37:34] <peerce> 99.9x% reads were cached
[12:38:48] <micw> peerce, what do you mean with "server"? do you maintain a complete copy of the data, trimmed down to days/weeks/etc on independent postgress instances?
[12:39:02] *** Joins: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net)
[12:42:52] *** Joins: fruity_tomato (~fruity_to@user/fruity-tomato/x-3541336)
[12:43:56] *** Quits: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 272 seconds)
[12:44:35] <micw> Got the table/index sizes. most of the timescale chunk tables are ~25 gb each with 2-3 GB of indices
[12:44:55] <peerce> micw; for the best example of rollups, looking at RRDTOOL.   it *only* stores the rollups.   not every detail item.
[12:45:00] <Berge> micw: And how many are there?
[12:45:11] <peerce> so like, every hour, min/max/mean/count/....
[12:45:17] <micw> ~120
[12:45:26] <peerce> then every day you take the last 24 hours and summarize them
[12:45:32] <peerce> the every week last 7 days.
[12:45:43] <peerce> only yuou do all this as a realtime pipeline
[12:45:48] <Berge> micw: So at least 200-300GB worth of just indexes?
[12:46:05] *** Joins: ekathva (~ekathva@93-90-58-246.welcomnet.fi)
[12:46:17] <peerce> rollup data is for producing trend graphs.
[12:47:25] <Berge> micw: Anyway, listen to peerce for rollup techniques. Precomputed rollups are the way to go to make it go really fast, and faster IO is the way to go without having to precompute rollups.
[12:47:32] <micw> actually size varies a bit, so the total sum of all indices is 80 gb
[12:47:50] <micw> I am listening ^^
[12:48:03] *** Joins: psoo (~psoo@dslb-002-202-190-148.002.202.pools.vodafone-ip.de)
[12:48:12] <micw> just try to understand why different servers, not different tables
[12:48:23] <Berge> Not sure I understand the question
[12:48:51] <micw> maybe i missunderstood what a "rollup server" is
[12:49:31] <Berge> In peerce' case, just a database server where you store the precomputed, "rolled up" values from your big aggregates
[12:49:40] <Berge> It doesn't have to be a separate server
[12:49:42] <micw> the main advantage i see with timescale is that i have my timeseries data along with all relational metadata
[12:50:01] <Berge> I haven't used timescale, but isn't the main advantage auto-partitioning?
[12:50:09] <micw> otherwise i could just use something like prometheus for realtime queries
[12:50:20] <peerce> yeah, we were doing this on seperate servers because teh main OLAP server was seriously overloaded
[12:50:41] <peerce> and we had a publish/subscribe model, so the rollup servers subscribed to the subjects they wanted to rollup.
[12:51:52] *** Joins: Auron (Auron956@user/auron)
[12:52:35] <peerce> the main olap subscriber basically subscribed to everthing from the oltp republisher
[12:52:45] *** Joins: randir (~randir@93.159.239.42)
[12:53:08] <micw> I see. Timescale has "continuous aggregates
[12:53:08] <micw> " which could do the rollups in database
[12:53:25] <micw> oh, where did the line break come from ^^
[12:54:54] <peerce> heh, copy/pasta?   i dunno much about timebasedb, but that soounds a lot like we'd rolled on our own for inhouse use about 12 years ago
[12:55:32] *** Joins: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net)
[12:57:01] *** Quits: randir (~randir@93.159.239.42) (Ping timeout: 240 seconds)
[12:57:01] *** Joins: the_lanetly_052 (~the_lanet@185.30.91.173)
[12:59:46] *** Joins: shka (~herr@109.231.3.55)
[13:00:18] *** Quits: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 260 seconds)
[13:00:34] *** Joins: SamM6 (~SamM@69.215.61.130)
[13:01:00] *** Quits: held (~heldchen@user/held) (Ping timeout: 240 seconds)
[13:01:23] <MapMan> ??paste
[13:01:24] <pg_docbot> https://explain.depesz.com/ :: https://www.db-fiddle.com/
[13:01:24] <pg_docbot> https://paste.depesz.com/ :: https://dpaste.org
[13:02:01] *** Quits: SamM (~SamM@69.215.61.130) (Ping timeout: 245 seconds)
[13:02:01] *** SamM6 is now known as SamM
[13:03:59] *** Joins: ivii (~ivan@user/ivii)
[13:10:19] *** Joins: randir (~randir@93.159.239.42)
[13:13:21] *** Joins: Junxter (~Junxter@121.237.63.222)
[13:15:36] <micw> completely different question. when i add a constraint to a table, i temporary need double the space of the table. can i somehow avoid this? I need to add a "on update cascade" to a constraint of a _very_ large table.
[13:16:18] <micw> and do i also need the double space if i'd just drop the constraint?
[13:16:51] *** Quits: randir (~randir@93.159.239.42) (Ping timeout: 252 seconds)
[13:18:58] *** Joins: held (~heldchen@user/held)
[13:20:04] <micw> I could even drop the whole column + constraint. Would this be done in-place?
[13:25:25] *** Quits: ryanlol (~majestic@2a02:6ea0:dc05::a15d) (Ping timeout: 240 seconds)
[13:27:05] *** Joins: leighbb (~leighbb@user/leighbb)
[13:29:14] *** Joins: randir (~randir@93.159.239.42)
[13:30:43] *** Quits: marcel (~marcel@user/marcel) (Quit: The Lounge - https://thelounge.chat)
[13:31:03] *** Joins: marcel (~marcel@user/marcel)
[13:33:36] *** Joins: DNH (~DNH@2a02:8109:b740:2c4:d4c3:770e:71a9:8cce)
[13:33:47] *** Quits: randir (~randir@93.159.239.42) (Ping timeout: 256 seconds)
[13:34:18] <peerce> i'm snoit sure why setting a constraint would require rewriting tuples.   thats somethig that might happen if you change the field TYPE, or change its value.
[13:36:51] <ksynwa> Trying to diagnose high CPU usage by Postgres container. I ran this query: https://dpaste.org/DjUy/raw
[13:37:11] <ksynwa> If duration is 20 minutes for some query, does that meant that that query has been running for 20 minutes?
[13:37:22] *** Quits: DNH (~DNH@2a02:8109:b740:2c4:d4c3:770e:71a9:8cce) (Client Quit)
[13:38:00] *** Quits: jazzy (~jaziz@user/jaziz) (Quit: Beddie bye-bye)
[13:38:55] *** Quits: the_lanetly_052 (~the_lanet@185.30.91.173) (Ping timeout: 256 seconds)
[13:40:24] <ksynwa> Wait seems like that is the transaction duration. But the query I am concerned with should not have any other query in its transaction.
[13:42:44] *** Joins: uncleyear (~ian@pppoe.178-66-156-85.dynamic.avangarddsl.ru)
[13:46:50] *** Joins: Vitto (~Vitto@se-14.nat.univ-paris4.fr)
[13:48:23] *** Joins: peteyboy_ (~peteyboy1@95.169.226.66)
[13:49:03] <funhouse> peerce thank you for your help on things, hugely appreacited
[13:49:13] <funhouse> just wanted to say that
[13:49:36] <ne2k> haven't looked at select for update before, just having a quick look at the manual. it appears that this https://www.postgresql.org/docs/14/sql-select.html#:~:text=Note%20that%20this%20will%20result%20in%20locking%20all%20rows%20of%20mytable%2C%20whereas%20FOR%20UPDATE%20at%20the%20top%20level%20would%20lock%20only%20the%20actually%20returned%20rows. contradicts this https://www.postgresql.org/docs/14/sql-select.html#:~:text=the%20sub%2Dquery.-,For%20examp
[13:49:36] <ne2k> le%2C,though%20that%20condition%20is%20not%20textually%20within%20the%20sub%2Dquery.,-Previous%20releases%20failed, am I mistaken?
[13:50:09] <ne2k> oof, sorry long lines.
[13:50:15] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[13:50:20] <peerce> uh, thats a url from hell.   wtf?  I didn't think the postgres doc site did that
[13:50:51] <ne2k> that's me selecting some text and right clicking and doing "Copy link to highlight" in Chrome
[13:50:54] <ne2k> I'll just paste the test
[13:51:05] <ne2k> Note that this will result in locking all rows of mytable, whereas FOR UPDATE at the top level would lock only the actually returned rows.
[13:51:20] <ne2k> For example,
[13:51:20] <ne2k> SELECT * FROM (SELECT * FROM mytable FOR UPDATE) ss WHERE col1 = 5;
[13:51:20] <ne2k> will lock only rows having col1 = 5, even though that condition is not textually within the sub-query.
[13:52:12] *** Joins: fercell (~ferr@78-63-4-13.static.zebra.lt)
[13:52:40] <ne2k> it says in one place that for update in a subquery can be affected by a condition in the outer query, but later says that only by putting for update with the filter in the outer query can you reduce the number of rows that are locked
[13:52:44] <ne2k> I may be misreading
[13:53:39] <ne2k> it does like this section hasn't been updated in a while as it refers to a bug and says "this has been fixed in 9.3", which seems a bit ancient to bother mentioning
[13:55:30] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 272 seconds)
[13:56:13] *** Joins: ferr_ (~ferr@185.65.50.70)
[13:57:35] *** Quits: fercell (~ferr@78-63-4-13.static.zebra.lt) (Ping timeout: 256 seconds)
[13:58:30] *** Joins: Ergo^ (~ergo@91.238.59.144)
[13:59:50] *** Quits: Vitto (~Vitto@se-14.nat.univ-paris4.fr) (Remote host closed the connection)
[14:00:07] *** Quits: fruity_tomato (~fruity_to@user/fruity-tomato/x-3541336) (Ping timeout: 256 seconds)
[14:02:33] *** Joins: randir (~randir@93.159.239.42)
[14:05:31] <wooster_> Could use some help optimizing/making better a stats query. I'm hung up on how to reduce the row count and make the Merge Join faster. Suggestions most welcome. Plan/query: https://explain.dalibo.com/plan/Xu2N
[14:06:06] *** wooster_ is now known as wooster
[14:06:10] *** Parts: dminuoso (~dminuoso@user/dminuoso) (WeeChat 3.3)
[14:06:36] *** Quits: randir (~randir@93.159.239.42) (Ping timeout: 240 seconds)
[14:07:21] *** Joins: robinsmidsrod (~robin@25.51-174-133.customer.lyse.net)
[14:13:59] *** Joins: immibis (~hexchat@2a02:3032:a:5f88:44a5:c3af:6367:30ff)
[14:15:23] *** Joins: fiendking04 (~matlock@2a02:6ea0:dc05::a15d)
[14:15:37] *** Quits: immibis_ (~hexchat@62.156.144.218) (Ping timeout: 240 seconds)
[14:16:52] <depesz> wooster:  can you put the plan on explain.depesz.com? the graphs migyht be aesthetically pleasweing, but they don't show any information in a way that I can understand.
[14:17:32] <wooster> depesz: https://explain.depesz.com/s/31kg
[14:19:57] <depesz> wooster: well, your time is spent in groupagregate. no idea how you got the notion that merge join is an issue.
[14:20:23] <wooster> sorry i was just looking at the 8mil rows there and thought that looked bad. but yes i see that now
[14:21:30] <depesz> wooster: generally yo uhave to scan 8 million rows just to produce some counts.
[14:21:36] <depesz> that is *NOT* going to be fast.
[14:22:18] <wooster> yeah i understand
[14:23:12] <peerce> heh, yeah, TANSTAAFL.
[14:23:28] <depesz> wooster: what you should do is rethink how you get the data.
[14:23:32] <peerce> if your query needs to hit millions of rows, oops!
[14:23:42] <depesz> consider what will happen when you will have not 18 users, but 18000 of them
[14:24:02] <depesz> and WAY more useractivity
[14:24:26] <depesz> each time counting stuff is going to become unacceptably expensive soon
[14:24:50] *** Joins: ben_ (~ben@host31-53-129-176.range31-53.btcentralplus.com)
[14:25:34] <wooster> i'd love a simpler way of writing this query. was trying really hard to think of one. the goal is to get average time spent by user on candidates
[14:27:11] <depesz> with the schema/requirement you can't.
[14:27:29] <depesz> but what you can is to precache stuff earlier. on isnert/update triggers that update cache with values.
[14:28:23] <depesz> also, please note that your query is written in a way that makes it *impossible* to provide meaningful help.
[14:28:34] <depesz> for example, you have: EXTRACT(EPOCH FROM sum("endedAt" - "startedAt")) AS timespent,
[14:28:40] <depesz> there is no mention which table these columns come from.
[14:28:52] <depesz> I know that you know it. or you can check. But I can't check, and I don't know.
[14:28:57] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[14:29:06] <wooster> each UserActivity row is a slice of time the user spent doing something
[14:29:26] <ben_> hey there, what index do i want to allow: `select * from migration.endorsement order by data @> '{"deleted": true}' desc;`?
[14:30:26] <ben_> just a gin index on the whole json column?
[14:30:27] *** Quits: tehenderz_ (~tehenderz@ti0018a400-8627.bb.online.no) (Ping timeout: 256 seconds)
[14:30:41] *** Joins: tehenderz (~tehenderz@ti0018a400-9189.bb.online.no)
[14:31:49] <depesz> ben_: why do you assume *any* index will be helpful?
[14:32:11] <ben_> i don't. i'm completely lacking knowledge here.
[14:32:41] <depesz> wooster: also, why do you keep using outer joins (left join == left outer join) when you later on use filters with where on the joined table?
[14:32:48] <Berge> ben_: Do you really want to get all rows from the table?
[14:32:54] <depesz> ben_: you are getting all rows from the table.
[14:33:14] <ben_> yes, i gave a process where i need to handle deleted data rows first
[14:33:32] *** Joins: Klinda (~superleag@user/klinda)
[14:33:36] <ben_> gave = have
[14:33:36] <Berge> What do you mean by handle here?
[14:33:46] <Berge> If you're grabbing all rows from a table, no index will help you
[14:33:56] <Berge> All the rows need to be scanned and returned anyway
[14:33:56] <ben_> ok - fair enough
[14:34:01] <ben_> thanks
[14:34:05] <Berge> But that's very often not what you actually want
[14:34:39] <depesz> Berge: i'm not sure if reasoning with table schema that has "deleted" flag in json is time well spent.
[14:35:02] *** Joins: randir (~randir@93.159.239.42)
[14:35:03] <Berge> depesz: Unless we can actually get to the bottom of the problem, and the solution includes refactoring it (-:
[14:35:19] <ben_> i'm not in control of the schema here - i just need to read all rows from a table and "do some work" on them, and i must do the work on "deleted" rows first
[14:35:37] *** Quits: Komzpa (~kom@212.58.121.0) (Ping timeout: 240 seconds)
[14:35:41] <Berge> ben_: As in UPDATE them?
[14:35:45] <Berge> Or do work outside the database?
[14:35:48] <depesz> ben_: good luck when the table will stop being triviallt small.
[14:35:48] <ben_> outside the database
[14:36:08] <Berge> ben_: Do you need to process all rows at the same time? Do you have some locking primitive?
[14:36:28] <Berge> ie: What happens if two separate processes do the SELECT * FROM simultanously?
[14:36:48] <ben_> depesz: thanks, the largest table is 2458 MB and will no increase thankfully
[14:36:58] <Berge> How many rows?
[14:37:15] <ben_> 122073
[14:37:20] <Berge> woha
[14:37:21] <wooster> depesz: i will ruminate on this thanks
[14:37:27] <Berge> That's… huge rows
[14:37:29] <ben_> yes
[14:37:39] <ben_> it's data migration project from some external system
[14:37:45] <Berge> Well, grabbing 2.5GB won't be fast, period
[14:37:50] <ben_> so they've pushed all the data into a jsonb column
[14:39:23] <ben_> Berge: right, i've made it managable using a cursor.
[14:39:31] *** Quits: randir (~randir@93.159.239.42) (Ping timeout: 256 seconds)
[14:39:38] <Berge> ben_: Do you have questions for those other questions too?
[14:39:43] <Berge> er
[14:39:45] <Berge> answers
[14:39:51] <ben_> erm
[14:40:01] <ben_> Do you need to process all rows at the same time? yes, one time batch
[14:40:05] <ben_> Do you have some locking primitive? no
[14:40:16] <Berge> Cursors and "at the same time" are mutually exclusive
[14:40:23] <Berge> Is this a one-off thing?
[14:40:34] <ben_>  What happens if two separate processes do the SELECT * FROM simultanously? guaranteed single process access on this
[14:41:01] <ben_> so yes, one-off.
[14:41:09] <Berge> So why does performance matter at all?
[14:42:06] <ben_> it's doesn't matter too much, i was just wondering if I could speed up the initial sort.
[14:42:32] <Berge> yes, you can, but you appear to not want to, so (-:
[14:42:36] <Berge> And it also doesn't seem to relevant
[14:42:51] *** Quits: rodo (~rodo@2a01:e0a:2c6:d5f0:9933:19e7:9abd:2ce1) (Ping timeout: 245 seconds)
[14:43:09] <Berge> How long does it take today?
[14:43:34] <ben_> "yes, you can, but you appear to not want to, so (-:" i'm unsure what this means sorry. i'm trying to be as clear as i can
[14:43:46] <Berge> You don't want to change the schema or the way you access the table
[14:44:35] <ben_> above, i said i am not in control of the schema
[14:45:56] <ben_> the sort takes around 14 seconds, no big deal. i think we can close this ticket :)
[14:47:50] <ben_> thanks for your help
[14:47:52] *** Joins: strk (~strk@user/strk)
[14:48:07] <strk> Update on edge_data e  (cost=2.60..45653.64 rows=6886 width=432) (actual time=874.550..874.552 rows=0 loops=1)
[14:48:18] <strk> why is the "actual" row count 0 ?
[14:50:32] <Myon> because your WHERE didn't find any?
[14:50:37] *** Joins: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net)
[14:53:47] <johto> no, that's rows _out_ from the UPDATE, i.e. RETURNING
[14:53:54] <johto> if you don't have such a clause, it'll be 0
[14:54:15] <strk> unlikely, the WHERE should have found them all
[14:54:20] <johto> or how many rows were passed to the plan node above, if you want to try to be a bit more precise
[14:54:22] <strk> johto: thanks
[14:54:31] <strk> yes, no RETURNING clause
[14:55:05] *** Joins: rodo (~rodo@2a01:e0a:2c6:d5f0:2f13:3ee0:685f:6e73)
[14:55:12] <strk> almost 3 second sto run that update, seems to be the current bottleneck
[14:55:28] <Myon> oh, ok
[14:56:11] <strk> I should probably rewrite the query to avoid the bitmap heap scan: https://explain.depesz.com/s/incy
[14:56:18] *** Quits: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 272 seconds)
[15:01:27] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[15:02:18] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[15:05:10] *** Quits: nyov (~nyov@user/nyov) (Ping timeout: 272 seconds)
[15:06:10] *** Quits: f3f3lix (~weechat@55d4e9cc.access.ecotel.net) (Ping timeout: 256 seconds)
[15:06:52] *** Joins: nyov (~nyov@user/nyov)
[15:08:42] *** Joins: Croves (~Croves@ec2-52-39-74-136.us-west-2.compute.amazonaws.com)
[15:09:00] <Croves> ??paste
[15:09:00] <pg_docbot> https://explain.depesz.com/ :: https://www.db-fiddle.com/
[15:09:00] <pg_docbot> https://paste.depesz.com/ :: https://dpaste.org
[15:10:07] <Croves> Can anyone help me understand this query plan? https://dpaste.org/7oFC
[15:10:09] *** Joins: tozhu (~tozhu@61.140.16.10)
[15:10:13] *** Joins: randir (~randir@93.159.239.42)
[15:10:27] <Croves> The first cost of 2503582831320.89 seems surreal...
[15:12:00] <johto> XN Hash Join DS_BCAST_INNER  (cost=116590.42..2500793440328.85 rows=557849981707 width=17)
[15:12:14] *** Quits: merzo (~Thunderbi@192.162.238.196) (Quit: merzo)
[15:12:20] <johto> if this non-postgres thingie is actually pulling that many rows, it doesn't seem too surprising that the cost is high?
[15:14:17] *** Quits: randir (~randir@93.159.239.42) (Ping timeout: 240 seconds)
[15:14:44] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[15:15:44] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[15:15:47] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 256 seconds)
[15:16:57] *** Quits: ekathva (~ekathva@93-90-58-246.welcomnet.fi) (Ping timeout: 256 seconds)
[15:19:24] <Croves> johto That's aws redshift actually
[15:21:48] *** Quits: sakasama (~sakasama@user/sakasama) (Ping timeout: 240 seconds)
[15:24:24] *** Quits: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c) (Remote host closed the connection)
[15:25:25] *** Quits: tehenderz (~tehenderz@ti0018a400-9189.bb.online.no) (Ping timeout: 256 seconds)
[15:25:35] *** Joins: merzo (~Thunderbi@192.162.238.196)
[15:25:51] *** Joins: tehenderz (~tehenderz@ti0018a400-9209.bb.online.no)
[15:32:13] *** Joins: DNH (~DNH@2a02:8109:b740:2c4:d4c3:770e:71a9:8cce)
[15:43:54] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[15:43:54] *** Joins: randir (~randir@93.159.239.42)
[15:44:56] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[15:45:33] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[15:45:36] *** Quits: micw (~micw@ip-109-42-241-42.web.vodafone.de) (Quit: Leaving)
[15:48:12] *** Quits: randir (~randir@93.159.239.42) (Ping timeout: 250 seconds)
[15:48:51] *** Joins: f3f3lix (~weechat@55d4e072.access.ecotel.net)
[15:49:52] *** Joins: rufito (~phil@186-79-1-138.baf.movistar.cl)
[15:54:26] *** Quits: Croves (~Croves@ec2-52-39-74-136.us-west-2.compute.amazonaws.com) (Quit: Client closed)
[15:58:30] *** Joins: randir (~randir@93.159.239.42)
[15:59:26] *** Quits: cpaelzer (~paelzer@canonical/cpaelzer) (Quit: bye)
[16:05:20] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:07:54] *** Quits: rjuju (~rjuju@82-64-124-11.subs.proxad.net) (Ping timeout: 252 seconds)
[16:09:28] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[16:10:33] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[16:14:45] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[16:15:47] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[16:22:26] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 272 seconds)
[16:24:21] *** Joins: MrZeus__ (~MrZeus@185.195.232.164)
[16:25:12] *** Joins: zeden (~zeden@user/zeden)
[16:26:58] *** Quits: zeden (~zeden@user/zeden) (Client Quit)
[16:27:45] *** Joins: zeden (~zeden@user/zeden)
[16:27:51] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[16:30:13] *** Joins: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net)
[16:32:24] *** Quits: ben_ (~ben@host31-53-129-176.range31-53.btcentralplus.com) (Remote host closed the connection)
[16:34:33] *** Quits: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 256 seconds)
[16:45:21] *** Joins: darkbit (~db@136.158.8.67)
[16:45:43] <darkbit> quit
[16:45:56] *** Quits: darkbit (~db@136.158.8.67) (Client Quit)
[16:46:15] *** Joins: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca)
[16:46:32] *** Quits: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca) (Client Quit)
[16:48:15] *** Joins: darkbit (~db@136.158.8.67)
[16:52:31] *** Quits: danieli (~danieli@user/danieli) (Quit: Alpine Linux, the security-oriented, lightweight Linux distribution)
[16:52:43] *** Quits: merzo (~Thunderbi@192.162.238.196) (Quit: merzo)
[16:53:33] *** Joins: danieli (~danieli@user/danieli)
[16:56:04] *** Joins: merzo (~Thunderbi@192.162.238.196)
[16:58:15] *** Quits: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (Quit: csmiga)
[16:58:49] *** Joins: AceSlash (~slash@cosium-fo-152-18.fib.nerim.net)
[16:59:28] *** Joins: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com)
[17:01:32] *** Quits: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (Client Quit)
[17:01:45] *** Joins: pedja (~pedja@user/deus-ex/x-7934090)
[17:03:07] *** Joins: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com)
[17:04:12] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[17:05:00] *** Quits: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (Client Quit)
[17:06:13] *** Joins: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com)
[17:06:54] *** Parts: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) ()
[17:07:07] *** Joins: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com)
[17:10:00] *** Joins: bmomjian (~bruce@momjian.us)
[17:12:46] *** furrymcg1e is now known as furrymcgee
[17:14:26] *** Quits: veesh (~veesh@89.237.99.111) (Ping timeout: 250 seconds)
[17:16:07] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[17:16:29] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 256 seconds)
[17:22:56] *** Joins: ben_ (~ben@host31-53-129-176.range31-53.btcentralplus.com)
[17:26:11] *** Quits: DNH (~DNH@2a02:8109:b740:2c4:d4c3:770e:71a9:8cce) (Ping timeout: 245 seconds)
[17:27:03] *** Joins: veesh (~veesh@77.137.130.85)
[17:27:24] *** Joins: Haudegen (~quassel@91.114.49.10)
[17:28:20] *** Quits: selckin (~selckin@user/selckin) (Quit: selckin)
[17:29:20] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:29:25] *** Joins: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca)
[17:29:54] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:32:04] *** Joins: Vitto (~Vitto@2a01:e0a:981:cd30:7678:27ff:fe76:21aa)
[17:33:35] *** Quits: ben_ (~ben@host31-53-129-176.range31-53.btcentralplus.com) (Remote host closed the connection)
[17:35:26] *** Joins: ben_ (~ben@host31-53-129-176.range31-53.btcentralplus.com)
[17:35:37] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 240 seconds)
[17:41:34] *** Joins: n0fun (~jack@mue-88-130-48-228.dsl.tropolys.de)
[17:46:05] *** Joins: mattil (~mattil@d55xyjbrvzc1qdgq6xy-4.rev.dnainternet.fi)
[17:46:09] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[17:50:08] *** Joins: selckin (~selckin@user/selckin)
[17:53:00] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[17:54:06] *** Joins: mizi (~mizi@user/mizi)
[17:55:17] *** Quits: mattil (~mattil@d55xyjbrvzc1qdgq6xy-4.rev.dnainternet.fi) (Remote host closed the connection)
[17:55:39] *** Joins: rjuju (~rjuju@82-64-124-11.subs.proxad.net)
[17:55:44] *** Joins: mattil (~mattil@d55xyjbrvzc1qdgq6xy-4.rev.dnainternet.fi)
[17:56:31] *** Quits: iliv (~iliv@93-77-147-152.lvv.volia.net) (Changing host)
[17:56:31] *** Joins: iliv (~iliv@user/iliv)
[17:56:49] *** Quits: ben_ (~ben@host31-53-129-176.range31-53.btcentralplus.com) (Remote host closed the connection)
[18:00:14] *** Joins: ben_ (~ben@host31-53-129-176.range31-53.btcentralplus.com)
[18:00:26] *** Quits: mattil (~mattil@d55xyjbrvzc1qdgq6xy-4.rev.dnainternet.fi) (Remote host closed the connection)
[18:01:11] *** Joins: mattil (~mattil@d55xyjbrvzc1qdgq6xy-4.rev.dnainternet.fi)
[18:04:12] *** Quits: held (~heldchen@user/held) (Ping timeout: 240 seconds)
[18:06:11] <otisolsen70> If I have streaming replication should I still take logical backups using pg_dump? I do, but is it necessary? What are your thoughts on this?
[18:07:09] *** Quits: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca) (Quit: Leaving.)
[18:07:20] *** Quits: ben_ (~ben@host31-53-129-176.range31-53.btcentralplus.com) (Remote host closed the connection)
[18:07:34] <otisolsen70> I see it a bit like RAID-1 vs. backup on a file server. RAID ensures availability in the if a disk crashes, I still have a copy on the other disk. However, if a user accidentially deletes all files, then they are deleted on both disks. So this is why I have a daily backup  to some remote storage.
[18:07:37] *** Joins: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca)
[18:07:44] *** Joins: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr)
[18:08:11] <otisolsen70> Can I say the same for PG? In that with streaming replication, if a user accidentially does a DELETE FROM importanttable, then it will be gone on both servers.
[18:08:26] <otisolsen70> This is where I would like to have yesterday's pg_dump.
[18:09:27] <otisolsen70> On the other hand, with streaming repl. I can have Point-in-time recovery if I  also set up WAL archiving. If I have that also would I then not need the  logical backups?
[18:11:05] *** Joins: ben_ (~ben@host31-53-129-176.range31-53.btcentralplus.com)
[18:13:08] <otisolsen70> Am I right in my understanding here? What are your thoughts?
[18:15:16] *** Quits: RangeRick (~quassel@99-69-21-21.lightspeed.rlghnc.sbcglobal.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[18:15:56] <johto> often databases get big enough that pg_dump is impractical or impossible
[18:16:04] <nikow> otisolsen70: When i do `DELETE TABLE my_precious_data WHERE outdated;`, but i selected in pgadmin4 just 'DELETE TABLE my_precious_data', you will realize that replication is not backup.
[18:16:06] <johto> PITR is a good tool
[18:17:04] *** Joins: RangerRick (~quassel@99-69-21-21.lightspeed.rlghnc.sbcglobal.net)
[18:17:23] <nikow> I do use replication (for read queries on replica db mainly) and wal archiving as backup strategy.
[18:17:28] <otisolsen70> johto, yeah, that is the problem. The pg_dumps start to take a long time to dump. So is PITR a real replacement to backups?
[18:17:59] <nikow> Kinda - if it's production look at barman or other dedicated tool tho
[18:18:18] <otisolsen70> My worry is that there is some edge case I have not thought of that PITR will not handle. But it sounds like you use it as an actual replacement for backups. Or PITR being an actual backup solution
[18:18:20] <nikow> if you're in cheap homelab, pg_basebackup + wal archiving does wonders.
[18:18:37] <johto> if you have extra servers, you could also stop replay on a replica, dump off it and then resume replay
[18:19:14] <johto> I say "extra" because if the master goes down you might have long downtime because the replay catching up
[18:22:40] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[18:23:01] *** Joins: greyrat_ (~greyrat@ip202.ip-51-178-215.eu)
[18:23:04] *** Joins: Philonous (~Philonous@user/philonous)
[18:23:32] *** Joins: darutoko- (~darutoko@37.21.177.133)
[18:23:39] *** Quits: ben_ (~ben@host31-53-129-176.range31-53.btcentralplus.com) (Remote host closed the connection)
[18:24:06] <otisolsen70> Not sure what you mean with the max delay?
[18:24:13] *** Joins: javi404_ (~quassel@pool-173-63-15-246.nwrknj.fios.verizon.net)
[18:24:21] *** Joins: waveform_ (~quassel@waveform.plus.com)
[18:24:26] *** Quits: selckin (~selckin@user/selckin) (Quit: selckin)
[18:24:31] *** Joins: TheRuralJuror (~quassel@91.114.49.10)
[18:24:42] *** Joins: selckin (~selckin@user/selckin)
[18:24:50] *** Joins: edgecase_ (~COPLANAR\@cpe00e0815f17ce-cme0dbd1400159.cpe.net.cable.rogers.com)
[18:24:51] *** Joins: Wanderer_ (~wanderer@user/wanderer)
[18:24:56] *** Joins: dharrigan_ (~dharrigan@user/dharrigan)
[18:25:01] *** Joins: zelest_ (jesper@81-233-184-27-no13.tbcn.telia.com)
[18:25:02] *** Joins: x305c (~x5c30@user/x5c30)
[18:25:03] *** Joins: uncleyea1 (~ian@pppoe.178-66-156-85.dynamic.avangarddsl.ru)
[18:25:12] *** Joins: stw__ (~stwalkers@wikimedia/stwalkerster)
[18:25:17] *** Joins: jpaa_ (~jpaa@161.97.129.36)
[18:25:19] *** Joins: finstern1s (~X@23.226.237.192)
[18:25:28] *** Joins: tolecnal_ (tolecnal@login.xiro.net)
[18:25:30] *** Joins: queso_ (~queso@cpe-71-77-41-168.nc.res.rr.com)
[18:25:30] *** Quits: mattil (~mattil@d55xyjbrvzc1qdgq6xy-4.rev.dnainternet.fi) (Ping timeout: 250 seconds)
[18:25:30] *** Joins: Maxattax97 (~max@50-195-160-193-static.hfc.comcastbusiness.net)
[18:25:34] *** Joins: mike-kfed (~htd@095129203062.t4.akis.net)
[18:25:38] *** Joins: chronon_ (~chronon@user/chronon)
[18:25:45] *** Joins: EvanCarr1ll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net)
[18:25:47] *** Joins: rdrg109_ (~rdrg109@user/rdrg109)
[18:25:48] *** Joins: pingr_ (~hruske@89-212-52-175.static.t-2.net)
[18:25:49] *** Joins: rmarrone_ (~rmarrone@rie.sdf.org)
[18:25:53] *** Joins: __xor (~xor@dsl-50-5-233-169.fuse.net)
[18:25:53] *** Joins: sebastorama_ (~sebastora@104.131.87.249)
[18:25:54] *** Joins: simplici1y (~yti@user/simplicity)
[18:26:41] *** Quits: zelest (jesper@81-233-184-27-no13.tbcn.telia.com) (Killed (NickServ (GHOST command used by zelest_)))
[18:26:45] *** zelest_ is now known as zelest
[18:27:18] *** Joins: lechner_ (~lechner@debian/lechner)
[18:27:44] *** Server sets mode: +Ccnt 
[18:28:37] *** Joins: fcr_ (~fran@r167-60-139-9.dialup.adsl.anteldata.net.uy)
[18:28:48] *** Joins: iliv_ (~iliv@93-77-147-152.lvv.volia.net)
[18:28:49] *** Quits: iliv_ (~iliv@93-77-147-152.lvv.volia.net) (Changing host)
[18:28:49] *** Joins: iliv_ (~iliv@user/iliv)
[18:28:59] *** Joins: AlbertLast_ (~nix@0exclusive.de)
[18:29:35] *** Quits: merzo (~Thunderbi@192.162.238.196) (Quit: merzo)
[18:29:52] *** Quits: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca) (*.net *.split)
[18:29:52] *** Quits: Haudegen (~quassel@91.114.49.10) (*.net *.split)
[18:29:52] *** Quits: veesh (~veesh@77.137.130.85) (*.net *.split)
[18:29:52] *** Quits: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (*.net *.split)
[18:29:52] *** Quits: peteyboy_ (~peteyboy1@95.169.226.66) (*.net *.split)
[18:29:52] *** Quits: uncleyear (~ian@pppoe.178-66-156-85.dynamic.avangarddsl.ru) (*.net *.split)
[18:29:52] *** Quits: iliv (~iliv@user/iliv) (*.net *.split)
[18:29:52] *** Quits: DarkG (~DarkG@user/darkg) (*.net *.split)
[18:29:52] *** Quits: fcr (~fran@r167-60-139-9.dialup.adsl.anteldata.net.uy) (*.net *.split)
[18:29:52] *** Quits: michalz (~michalz@185.246.204.93) (*.net *.split)
[18:29:52] *** Quits: javi404 (~quassel@pool-173-63-15-246.nwrknj.fios.verizon.net) (*.net *.split)
[18:29:52] *** Quits: darutoko (~darutoko@37.21.177.133) (*.net *.split)
[18:29:52] *** Quits: ysch (~ysch@91.211.93.148) (*.net *.split)
[18:29:52] *** Quits: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net) (*.net *.split)
[18:29:52] *** Quits: daftaupe (~daftaupe@82.66.95.80) (*.net *.split)
[18:29:52] *** Quits: KombuchaKip (~kip@192.252.230.5) (*.net *.split)
[18:29:52] *** Quits: stw (~stwalkers@wikimedia/stwalkerster) (*.net *.split)
[18:29:52] *** Quits: greyrat (~greyrat@ip202.ip-51-178-215.eu) (*.net *.split)
[18:29:52] *** Quits: karabaja4 (~karabaja4@dh207-94-36.xnet.hr) (*.net *.split)
[18:29:52] *** Quits: strNophix (~niku@86-83-36-18.fixed.kpn.net) (*.net *.split)
[18:29:52] *** Quits: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net) (*.net *.split)
[18:29:52] *** Quits: htd (~htd@095129203062.t4.akis.net) (*.net *.split)
[18:29:52] *** Quits: jpaa (~jpaa@161.97.129.36) (*.net *.split)
[18:29:52] *** Quits: Tenchi (~Tenchi@user/tenchi) (*.net *.split)
[18:29:52] *** Quits: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca) (*.net *.split)
[18:29:52] *** Quits: blaklistd (~blaklistd@user/blaklistd) (*.net *.split)
[18:29:52] *** Quits: lechner (~lechner@debian/lechner) (*.net *.split)
[18:29:52] *** Quits: simplicity (~yti@user/simplicity) (*.net *.split)
[18:29:52] *** Quits: Maxattax (~max@50-195-160-193-static.hfc.comcastbusiness.net) (*.net *.split)
[18:29:52] *** Quits: AlbertLast (~nix@0exclusive.de) (*.net *.split)
[18:29:52] *** Quits: rdunklau (~rdunklau@static-176-158-121-96.ftth.abo.bbox.fr) (*.net *.split)
[18:29:52] *** Quits: sebastorama (~sebastora@104.131.87.249) (*.net *.split)
[18:29:52] *** Quits: Philonous_ (~Philonous@user/philonous) (*.net *.split)
[18:29:52] *** Quits: dharrigan (~dharrigan@user/dharrigan) (*.net *.split)
[18:29:53] *** Quits: stairmast0r (~stairmast@user/stairmast0r) (*.net *.split)
[18:29:53] *** Quits: op2 (~op2@user/op2) (*.net *.split)
[18:29:53] *** Quits: seabre (~seabre@user/seabre) (*.net *.split)
[18:29:53] *** Quits: jancoow (~jancoow@user/jancoow) (*.net *.split)
[18:29:53] *** Quits: led_belly (~led_belly@37.120.197.46) (*.net *.split)
[18:29:53] *** Quits: fraxamo (~fraxamo@bexl-11-b2-v4wan-163006-cust259.vm4.cable.virginm.net) (*.net *.split)
[18:29:53] *** Quits: haniaF (~haniaF@83.24.224.152.ipv4.supernova.orange.pl) (*.net *.split)
[18:29:53] *** Quits: gonogo (~gonogo@167.88.62.87) (*.net *.split)
[18:29:53] *** Quits: Sellerie (~Sellerie@user/sellerie) (*.net *.split)
[18:29:53] *** Quits: noarb (~noarb@user/noarb) (*.net *.split)
[18:29:53] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (*.net *.split)
[18:29:53] *** Quits: rmarrone (rmarrone@rie.sdf.org) (*.net *.split)
[18:29:53] *** Quits: queso (~queso@cpe-71-77-41-168.nc.res.rr.com) (*.net *.split)
[18:29:53] *** Quits: pg_docbot (~docbot_li@donatu.postgresql.org) (*.net *.split)
[18:29:53] *** Quits: fstd (~fstd@xdsl-78-34-125-135.nc.de) (*.net *.split)
[18:29:53] *** Quits: pingr (~hruske@89-212-52-175.static.t-2.net) (*.net *.split)
[18:29:53] *** Quits: k_sze (~k_sze@mail2.kalunite.net) (*.net *.split)
[18:29:53] *** Quits: sehrope_ (~sehrope@23-24-81-162-static.hfc.comcastbusiness.net) (*.net *.split)
[18:29:53] *** Quits: ephemer0l (~ephemer0l@organizedmagnetism.com) (*.net *.split)
[18:29:53] *** Quits: phx (~phoemix@marvin.harmless.hu) (*.net *.split)
[18:29:53] *** Quits: Dragoon (~Dragoon@user/dragoon) (*.net *.split)
[18:29:53] *** Quits: glik22_ (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (*.net *.split)
[18:29:53] *** Quits: foul_owl (~kerry@23.82.193.89) (*.net *.split)
[18:29:53] *** Quits: jrjsmrtn (~jrjsmrtn@ip-83-134-41-224.dsl.scarlet.be) (*.net *.split)
[18:29:53] *** Quits: jim (~jim@about/linux/staff/jim) (*.net *.split)
[18:29:53] *** Quits: rawgreaze (~rawgreaze@user/rawgreaze) (*.net *.split)
[18:29:53] *** Quits: chronon (~chronon@user/chronon) (*.net *.split)
[18:29:53] *** Quits: Profpatsch (~Profpatsc@static.88-198-193-255.clients.your-server.de) (*.net *.split)
[18:29:53] *** Quits: tolecnal (tolecnal@login.xiro.net) (*.net *.split)
[18:29:53] *** Quits: x5c30 (~x5c30@user/x5c30) (*.net *.split)
[18:29:53] *** Quits: edgecase (~COPLANAR\@cpe00e0815f17ce-cme0dbd1400159.cpe.net.cable.rogers.com) (*.net *.split)
[18:29:53] *** Quits: finsternis (~X@23.226.237.192) (*.net *.split)
[18:29:53] *** Quits: rdrg109 (~rdrg109@user/rdrg109) (*.net *.split)
[18:29:53] *** Quits: waveform (~quassel@waveform.plus.com) (*.net *.split)
[18:29:53] *** Quits: tykling (~tykling@irc.tyknet.dk) (*.net *.split)
[18:29:53] *** Quits: ioguix (~ioguix@larco.ioguix.net) (*.net *.split)
[18:29:53] *** Quits: Wanderer (~wanderer@user/wanderer) (*.net *.split)
[18:29:53] *** Quits: koolazer (~koo@user/koolazer) (*.net *.split)
[18:29:53] *** csmiga1 is now known as csmiga
[18:29:53] *** daftaupe1 is now known as daftaupe
[18:29:53] *** TonyL is now known as DarkG
[18:29:54] *** fcr_ is now known as fcr
[18:29:54] *** blaklistd0 is now known as blaklistd
[18:29:54] *** Sellerie7 is now known as Sellerie
[18:29:57] *** dharrigan_ is now known as dharrigan
[18:29:57] *** jancoow9 is now known as jancoow
[18:30:01] *** ysch_ is now known as ysch
[18:30:03] *** Joins: op2 (~op2@user/op2)
[18:30:30] <erisco> how can I rollback a transaction immediately rather than block waiting for a lock?
[18:30:46] *** Joins: ben_ (~ben@host31-53-129-176.range31-53.btcentralplus.com)
[18:30:58] *** Joins: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net)
[18:31:01] <Myon> erisco: select ... for update nowait;
[18:31:16] *** Joins: gp5st (~gp5st@pool-72-77-44-213.pitbpa.fios.verizon.net)
[18:32:00] *** Quits: f3f3lix (~weechat@55d4e072.access.ecotel.net) (Ping timeout: 250 seconds)
[18:32:20] *** Joins: led_belly_ (~led_belly@37.120.197.46)
[18:32:36] <erisco> thanks! docs say FOR UPDATE is ROW SHARE not ROW EXCL. Can my transaction fail on commit with FOR UPDATE?
[18:33:16] <Myon> only with deferred triggers, or isolation level serializable, I think
[18:34:03] *** Joins: f3f3lix (~weechat@55d4e072.access.ecotel.net)
[18:35:50] *** Joins: jim (~jim@about/linux/staff/jim)
[18:36:23] *** Quits: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 256 seconds)
[18:36:34] *** Joins: ioguix (~ioguix@larco.ioguix.net)
[18:36:39] *** Joins: glik22_ (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[18:36:43] <erisco> sounds like I may need to use PREPARE TRANSACTION... kind of a can of worms. Basically I want the database to be consistent with a remote file system, so I only want a file to move if the transaction is guaranteed to commit
[18:36:50] *** Joins: veesh (~veesh@77.137.130.85)
[18:36:56] *** Joins: Profpatsch (~Profpatsc@static.88-198-193-255.clients.your-server.de)
[18:37:03] *** Joins: koolazer (~koo@user/koolazer)
[18:37:03] *** Joins: mattil (~mattil@87-92-35-167.bb.dnainternet.fi)
[18:37:09] *** Joins: karabaja4 (~karabaja4@dh207-94-36.xnet.hr)
[18:37:26] *** Joins: Dragoon (~Dragoon@user/dragoon)
[18:37:28] *** Joins: foul_owl (~kerry@23.82.193.89)
[18:37:40] *** Joins: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca)
[18:38:26] *** Joins: pg_docbot (~docbot_li@donatu.postgresql.org)
[18:38:33] *** Quits: mattil (~mattil@87-92-35-167.bb.dnainternet.fi) (Remote host closed the connection)
[18:41:01] *** Joins: shiranaihito_ (~textual@123-192-192-149.dynamic.kbronet.com.tw)
[18:43:13] *** Quits: shiranaihito (~textual@2001-b011-4011-30d5-304e-e92e-09e1-0d12.dynamic-ip6.hinet.net) (Ping timeout: 256 seconds)
[18:44:19] *** Quits: f3f3lix (~weechat@55d4e072.access.ecotel.net) (Ping timeout: 256 seconds)
[18:44:22] *** x305c is now known as x5c30
[18:44:27] *** Quits: selckin (~selckin@user/selckin) (Quit: selckin)
[18:44:36] *** Quits: gp5st (~gp5st@pool-72-77-44-213.pitbpa.fios.verizon.net) (Ping timeout: 240 seconds)
[18:45:17] *** Quits: ben_ (~ben@host31-53-129-176.range31-53.btcentralplus.com) (Remote host closed the connection)
[18:45:19] *** Joins: selckin (~selckin@user/selckin)
[18:45:24] *** Quits: tehenderz (~tehenderz@ti0018a400-9209.bb.online.no) (Ping timeout: 240 seconds)
[18:46:01] *** Joins: tehenderz (~tehenderz@ti0018a400-9318.bb.online.no)
[18:49:00] *** Joins: ben_ (~ben@host31-53-129-176.range31-53.btcentralplus.com)
[18:49:04] *** Quits: selckin (~selckin@user/selckin) (Remote host closed the connection)
[18:49:11] *** Joins: vanessa (~farawayas@103.160.128.7)
[18:49:12] *** Joins: selckin (~selckin@user/selckin)
[18:51:26] *** Wanderer_ is now known as Wanderer
[18:52:23] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[18:52:45] *** Quits: ben_ (~ben@host31-53-129-176.range31-53.btcentralplus.com) (Remote host closed the connection)
[18:53:46] *** Joins: ben_ (~ben@host31-53-129-176.range31-53.btcentralplus.com)
[18:56:50] *** Joins: k8yun (~k8yun@user/k8yun)
[18:57:07] *** Quits: bigGopher (~dan@207.98.176.66) (Quit: bigGopher)
[18:59:09] *** Quits: vanessa (~farawayas@103.160.128.7) (Quit: Leaving)
[19:02:37] *** Parts: jpa (~jpa@2a01:e0a:5cb:6b80:9dd8:d715:f031:d21c) ()
[19:03:23] *** Joins: fef (~thedawn@user/thedawn)
[19:05:04] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[19:10:54] *** Joins: gp5st (~gp5st@static-96-236-146-14.pitbpa.fios.verizon.net)
[19:13:52] *** Joins: k8yun_ (~k8yun@user/k8yun)
[19:15:36] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[19:15:36] *** Joins: csd (~csd@c-73-22-175-211.hsd1.il.comcast.net)
[19:15:48] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Remote host closed the connection)
[19:16:24] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[19:17:17] *** Quits: k8yun (~k8yun@user/k8yun) (Ping timeout: 240 seconds)
[19:18:47] *** Joins: mowcat (~mowcat@2a00:23c5:d190:1901:f22f:74ff:fe77:1e1c)
[19:24:32] *** Quits: gearnode (~gearnode@2a01cb000ce2c100f22f74fffedefec1.ipv6.abo.wanadoo.fr) (Quit: WeeChat 3.4)
[19:24:45] *** Joins: ees-mobile (~ees-mobil@pool-108-18-30-46.washdc.fios.verizon.net)
[19:25:07] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 256 seconds)
[19:27:55] *** Quits: ben_ (~ben@host31-53-129-176.range31-53.btcentralplus.com) (Remote host closed the connection)
[19:28:44] *** Quits: gleu (~guillaume@2a02-842b-8f96-6001-0ccb-e12c-9dc6-5df0.rev.sfr.net) (Quit: Leaving.)
[19:29:30] *** Quits: shored (~shored@user/shored) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[19:29:45] *** Joins: shored (~shored@user/shored)
[19:30:25] *** Joins: ben_ (~ben@host31-53-129-176.range31-53.btcentralplus.com)
[19:31:21] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[19:31:35] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[19:32:51] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Remote host closed the connection)
[19:34:04] *** Quits: benko (~gregab@nllocms.p0f.net) (Remote host closed the connection)
[19:34:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[19:35:46] *** Joins: benko (~gregab@nllocms.p0f.net)
[19:36:22] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Client Quit)
[19:36:44] *** Quits: k8yun_ (~k8yun@user/k8yun) (Quit: Leaving)
[19:36:53] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[19:37:02] *** Joins: Xof (~Xof@50-76-33-78-ip-static.hfc.comcastbusiness.net)
[19:38:15] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[19:39:46] *** Quits: rodo (~rodo@2a01:e0a:2c6:d5f0:2f13:3ee0:685f:6e73) (Ping timeout: 260 seconds)
[19:40:02] *** Quits: gp5st (~gp5st@static-96-236-146-14.pitbpa.fios.verizon.net) (Ping timeout: 250 seconds)
[19:43:45] *** Joins: hoppity_ (~hoppity@mobile-166-172-56-167.mycingular.net)
[19:45:32] *** Joins: BadAdviceCat (~BadAdvice@user/badadvicecat)
[19:47:37] *** Quits: immibis (~hexchat@2a02:3032:a:5f88:44a5:c3af:6367:30ff) (Remote host closed the connection)
[19:47:45] *** Joins: immibis (~hexchat@2a02:3032:a:5f88:44a5:c3af:6367:30ff)
[19:50:49] *** Quits: immibis (~hexchat@2a02:3032:a:5f88:44a5:c3af:6367:30ff) (Read error: Connection reset by peer)
[19:50:57] *** Joins: immibis (~hexchat@2a02:3032:a:5f88:44a5:c3af:6367:30ff)
[19:59:34] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:00:47] *** Quits: dsrt^ (~dsrt@207.243.108.170) (Remote host closed the connection)
[20:01:12] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[20:01:43] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[20:02:11] *** Joins: fef (~thedawn@user/thedawn)
[20:03:00] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 250 seconds)
[20:05:19] *** Quits: DevAntoine (~DevAntoin@46.29.126.206) (Remote host closed the connection)
[20:05:27] *** Joins: maciek__ (~maciek@2600:1700:a412:1c00:dd3:37fa:547b:5438)
[20:06:26] *** Quits: immibis (~hexchat@2a02:3032:a:5f88:44a5:c3af:6367:30ff) (Read error: Connection reset by peer)
[20:06:59] *** Joins: immibis (~hexchat@2a02:3032:a:5f88:44a5:c3af:6367:30ff)
[20:10:28] <tbe_loki> ??paste
[20:10:29] <pg_docbot> https://explain.depesz.com/ :: https://www.db-fiddle.com/
[20:10:29] <pg_docbot> https://paste.depesz.com/ :: https://dpaste.org
[20:12:03] *** Joins: randir (~randir@95-25-111-216.broadband.corbina.ru)
[20:14:35] *** iliv_ is now known as iliv
[20:15:16] *** Joins: Rashad (~textual@2a01:9700:1a6e:c600:1159:1349:45b0:622b)
[20:15:21] *** Joins: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net)
[20:16:11] *** Quits: randir (~randir@95-25-111-216.broadband.corbina.ru) (Ping timeout: 245 seconds)
[20:18:00] *** Joins: nullp0inter (~nullp0int@64.67.40.244.res-cmts.sell.ptd.net)
[20:19:47] *** Quits: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 252 seconds)
[20:20:07] *** Quits: Xof (~Xof@50-76-33-78-ip-static.hfc.comcastbusiness.net) (Ping timeout: 256 seconds)
[20:20:20] *** Quits: fraxamo_ (~fraxamo@bexl-11-b2-v4wan-163006-cust259.vm4.cable.virginm.net) (Quit: Leaving)
[20:21:34] *** Joins: Xof (~Xof@50-76-33-78-ip-static.hfc.comcastbusiness.net)
[20:21:44] *** Quits: Rashad (~textual@2a01:9700:1a6e:c600:1159:1349:45b0:622b) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[20:22:05] *** Joins: DNH (~DNH@2a02:8109:b740:2c4:c5b9:4624:182c:3e13)
[20:22:22] *** Quits: TheRuralJuror (~quassel@91.114.49.10) (Quit: Bin weg.)
[20:22:30] *** Joins: Rashad (~textual@2a01:9700:1a6e:c600:1159:1349:45b0:622b)
[20:23:23] <nullp0inter> i am working on a utility to transfer batches of data and I am seeing something unexpected. Running Postgres 13.3. My flow is 1. start a transaction 2. create a temp table without keys 3. copy from the data file to the table 4. create a second temp table with keys 5. insert..select on conflict do nothing from temp table 1 into temp table 2 6. insert...select...using joins...on conflict do nothing from the temp table 2 into
[20:23:24] <nullp0inter> my prod table. If I take out steps 4 and 5, and just go from temp tablr 1 into the prod tables it cuts the full end to end execution time in half. how could joining on a table with no keys be faster? i wouldn't have expected it to be this much faster given that there are no keys, but maybe there's something I just dont know about postgres
[20:27:44] *** Joins: gp5st (~gp5st@2600:1016:b02e:4837:3c9f:6414:4d6d:1f3)
[20:29:09] *** Quits: Rashad (~textual@2a01:9700:1a6e:c600:1159:1349:45b0:622b) (Quit: Textual IRC Client: www.textualapp.com)
[20:31:50] *** Joins: ephemer0l (~ephemer0l@organizedmagnetism.com)
[20:32:12] *** Quits: ThorMojito1 (~Adium@modemcable212.77-202-24.mc.videotron.ca) (Quit: Leaving.)
[20:33:02] *** Joins: k8yun (~k8yun@user/k8yun)
[20:36:06] *** EvanCarr1ll is now known as EvanCarroll
[20:36:31] *** Quits: tehenderz (~tehenderz@ti0018a400-9318.bb.online.no) (Ping timeout: 256 seconds)
[20:36:41] *** Joins: tehenderz (~tehenderz@ti0018a400-9383.bb.online.no)
[20:39:58] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::4f67)
[20:49:31] *** Joins: the_lanetly_052 (~the_lanet@194.135.166.223)
[20:53:34] *** Joins: tradar (~tradar@user/tradar)
[20:55:10] <johto> nullp0inter; if you're selecting roughly all rows from both tables, e.g. sequential scans with a hash join might be faster than index scanning one key at a time
[20:55:55] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Remote host closed the connection)
[20:56:46] *** Quits: Anarchic (~Anarchic@getlegit.co.uk) (Quit: ZNC - http://znc.in)
[20:58:07] *** Joins: Anarchic (~Anarchic@getlegit.co.uk)
[20:58:35] *** Quits: Anarchic (~Anarchic@getlegit.co.uk) (Remote host closed the connection)
[20:58:38] *** Joins: aremaref (~aremaref@107-198-1-161.lightspeed.irvnca.sbcglobal.net)
[20:59:01] *** Quits: psoo (~psoo@dslb-002-202-190-148.002.202.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[20:59:40] *** Joins: Anarchic (~Anarchic@getlegit.co.uk)
[21:01:28] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[21:04:17] *** Quits: Xof (~Xof@50-76-33-78-ip-static.hfc.comcastbusiness.net) (Ping timeout: 256 seconds)
[21:05:07] *** Joins: Xof (~Xof@50-76-33-78-ip-static.hfc.comcastbusiness.net)
[21:05:59] *** Quits: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr) (Ping timeout: 256 seconds)
[21:06:43] *** Joins: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr)
[21:12:26] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[21:16:07] *** Quits: ben_ (~ben@host31-53-129-176.range31-53.btcentralplus.com) (Remote host closed the connection)
[21:17:08] *** Joins: ben_ (~ben@host31-53-129-176.range31-53.btcentralplus.com)
[21:19:30] *** Joins: Nekomander (~BadAdvice@user/badadvicecat)
[21:19:37] *** Quits: BadAdviceCat (~BadAdvice@user/badadvicecat) (Ping timeout: 256 seconds)
[21:20:10] *** sebastorama_ is now known as sebastorama
[21:20:52] *** Quits: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr) (Ping timeout: 268 seconds)
[21:24:09] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[21:24:41] *** Quits: ponsfrilus (~Thunderbi@vpn-251-247.epfl.ch) (Ping timeout: 256 seconds)
[21:31:18] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 260 seconds)
[21:33:46] *** Joins: gearnode (~gearnode@2a01cb000ce2c100f22f74fffedefec1.ipv6.abo.wanadoo.fr)
[21:33:53] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[21:34:14] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[21:34:28] *** Joins: rvalue (~rvalue@user/rvalue)
[21:35:32] *** Quits: gp5st (~gp5st@2600:1016:b02e:4837:3c9f:6414:4d6d:1f3) (Read error: Connection reset by peer)
[21:35:32] *** Quits: hoppity_ (~hoppity@mobile-166-172-56-167.mycingular.net) (Read error: Connection reset by peer)
[21:35:35] <maciek__> In pg_waldump output, what's the difference between Heap and Heap2?
[21:35:51] *** Joins: hoppity_ (~hoppity@mobile-166-172-56-167.mycingular.net)
[21:36:38] *** Joins: hoppity__ (~hoppity@mobile-166-172-56-167.mycingular.net)
[21:37:23] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Client Quit)
[21:37:53] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[21:38:20] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::4f67) (Ping timeout: 250 seconds)
[21:39:57] *** Quits: hoppity_ (~hoppity@mobile-166-172-56-167.mycingular.net) (Ping timeout: 240 seconds)
[21:40:12] *** Quits: ben_ (~ben@host31-53-129-176.range31-53.btcentralplus.com) (Remote host closed the connection)
[21:40:24] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[21:41:43] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:42:17] *** Quits: Xof (~Xof@50-76-33-78-ip-static.hfc.comcastbusiness.net) (Ping timeout: 252 seconds)
[21:43:39] *** Joins: Xof (~Xof@50-76-33-78-ip-static.hfc.comcastbusiness.net)
[21:46:02] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[21:56:41] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::4f67)
[22:02:20] *** Joins: econo (uid147250@user/econo)
[22:03:17] *** Quits: uncleyea1 (~ian@pppoe.178-66-156-85.dynamic.avangarddsl.ru) (Remote host closed the connection)
[22:04:06] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 245 seconds)
[22:04:29] *** Joins: uncleyear (~ian@pppoe.178-66-156-85.dynamic.avangarddsl.ru)
[22:08:53] *** Quits: `2jt (~jtomas@210.red-88-24-179.staticip.rima-tde.net) (Ping timeout: 256 seconds)
[22:09:33] *** Quits: AceSlash (~slash@cosium-fo-152-18.fib.nerim.net) (Quit: Leaving)
[22:11:35] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[22:13:26] *** Joins: Kohe (~Kohe@46.12.214.37.dsl.dyn.forthnet.gr)
[22:14:44] *** Joins: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22)
[22:15:20] *** Joins: xocolatl (~xocolatl@193.32.126.225)
[22:18:09] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[22:18:13] *** Quits: xocolatl_ (~xocolatl@193.32.126.219) (Ping timeout: 240 seconds)
[22:19:42] *** Quits: Xof (~Xof@50-76-33-78-ip-static.hfc.comcastbusiness.net) (Ping timeout: 252 seconds)
[22:20:41] *** Joins: Xof (~Xof@50-76-33-78-ip-static.hfc.comcastbusiness.net)
[22:23:37] *** Quits: darutoko- (~darutoko@37.21.177.133) (Quit: Leaving)
[22:24:11] *** Quits: zemis (~zemis@ip-89-176-21-138.net.upcbroadband.cz) (Ping timeout: 256 seconds)
[22:26:07] *** Joins: ekathva (~ekathva@2001:999:51:19b8:f2b5:31fb:6c84:f10)
[22:27:54] *** tolecnal_ is now known as tolecnal
[22:28:08] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:28:36] *** Quits: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22) (Ping timeout: 250 seconds)
[22:31:01] *** Quits: the_lanetly_052 (~the_lanet@194.135.166.223) (Ping timeout: 256 seconds)
[22:32:27] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:32:42] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:35:20] *** Joins: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca)
[22:36:49] *** Quits: pglife_bot (~pglife@momjian.us) (Remote host closed the connection)
[22:38:40] *** Quits: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca) (Client Quit)
[22:39:43] *** Joins: pglife_bot (~pglife@momjian.us)
[22:47:36] *** Joins: neet (~neet@136.41.96.251)
[22:49:51] *** Quits: csd (~csd@c-73-22-175-211.hsd1.il.comcast.net) (Quit: Client closed)
[22:57:38] *** Quits: Xof (~Xof@50-76-33-78-ip-static.hfc.comcastbusiness.net) (Ping timeout: 250 seconds)
[22:57:41] *** Joins: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca)
[22:59:43] *** Joins: Xof (~Xof@50-76-33-78-ip-static.hfc.comcastbusiness.net)
[23:00:02] *** Quits: mizi (~mizi@user/mizi) (Ping timeout: 240 seconds)
[23:01:37] *** Joins: kakashiAL (~kakashi@105.155.232.141)
[23:02:21] *** Joins: mizi (~mizi@user/mizi)
[23:02:32] *** Joins: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22)
[23:02:37] *** Quits: fcr (~fran@r167-60-139-9.dialup.adsl.anteldata.net.uy) (Ping timeout: 240 seconds)
[23:05:29] *** Quits: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22) (Remote host closed the connection)
[23:06:50] *** Joins: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22)
[23:08:22] *** Joins: fcr (~fran@r167-60-73-200.dialup.adsl.anteldata.net.uy)
[23:08:33] *** Joins: held (~heldchen@user/held)
[23:16:55] *** Quits: held (~heldchen@user/held) (Ping timeout: 256 seconds)
[23:16:59] *** Joins: heldchen (~heldchen@user/held)
[23:19:10] *** Joins: f3f3lix (~weechat@d5362cd4.access.ecotel.net)
[23:19:18] *** Joins: immibis_ (~hexchat@62.156.144.218)
[23:20:11] *** Quits: Nekomander (~BadAdvice@user/badadvicecat) (Ping timeout: 252 seconds)
[23:21:02] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::4f67) (Ping timeout: 250 seconds)
[23:21:51] *** Quits: immibis (~hexchat@2a02:3032:a:5f88:44a5:c3af:6367:30ff) (Ping timeout: 252 seconds)
[23:24:00] *** Quits: pglife_bot (~pglife@momjian.us) (Remote host closed the connection)
[23:24:12] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[23:24:26] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[23:26:51] *** Joins: pglife_bot (~pglife@momjian.us)
[23:29:31] *** Quits: mizi (~mizi@user/mizi) (Ping timeout: 245 seconds)
[23:31:42] *** Joins: mizi (~mizi@user/mizi)
[23:32:19] *** Quits: Xof (~Xof@50-76-33-78-ip-static.hfc.comcastbusiness.net) (Quit: Bye.)
[23:34:15] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[23:35:10] *** Joins: randir (~randir@95-25-111-216.broadband.corbina.ru)
[23:36:10] *** Joins: CanuteTheGreat (~CanuteThe@user/canutethegreat)
[23:37:26] *** Quits: ur5us (~ur5us@2406:e002:6804:8a01:fe29:d3cc:a0c3:c22) (Ping timeout: 245 seconds)
[23:39:09] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[23:40:23] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[23:43:05] *** Joins: ben_ (~ben@host31-53-129-176.range31-53.btcentralplus.com)
[23:44:12] *** Quits: tehenderz (~tehenderz@ti0018a400-9383.bb.online.no) (Ping timeout: 240 seconds)
[23:44:51] *** Joins: tehenderz (~tehenderz@ti0018a400-9477.bb.online.no)
[23:54:20] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[23:55:28] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[23:55:32] *** Quits: ben_ (~ben@host31-53-129-176.range31-53.btcentralplus.com) (Remote host closed the connection)
[23:56:36] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 240 seconds)
[23:57:47] *** Joins: oilt^ (~oilt@50.224.20.226)
[23:58:55] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[23:59:32] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
