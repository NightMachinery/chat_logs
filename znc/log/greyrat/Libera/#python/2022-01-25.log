[00:00:17] <JordiGH> The what?
[00:00:32] *** Joins: XV8 (~XV8@2601:5cb:c001:50:d0cb:b834:298c:b12d)
[00:00:57] <JordiGH> "A common use case is to write a method that returns an instance of the same class, usually by returning self."
[00:00:59] *** Quits: ledtc (~ledtc@c-f8aa70d5.014-57-6c756e3.bbcust.telenor.se) (Quit: Client closed)
[00:01:01] <JordiGH> Really, that's common?
[00:01:22] <BinarySavior> it's used in pandas
[00:01:54] <BinarySavior> I think at least, could be wrong
[00:01:55] <Wooble> annotating a return value as typing.Self means type(rv) == type(self); annotating as typing.List doesn't mean type(rv) == type(list)
[00:02:35] <phy1729> Wooble: it's what rust uses for the type of self, so there's some precendence
[00:02:55] *** Joins: paul424 (~tom@ip-5-172-236-45.multi.internet.cyfrowypolsat.pl)
[00:02:55] <KirkMcDonald> Hmm. No, I don't like it.
[00:03:13] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Ping timeout: 268 seconds)
[00:03:15] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[00:03:42] <KirkMcDonald> It seems like it puts the lie to the conceit that you're overlaying a static type system on the thing.
[00:03:43] <Wooble> JordiGH: and yeah, it's common; the fluent programming types love method chaining
[00:03:44] *** Joins: bitplane (~bitplane@2a02:c7e:ab3:6f00:f000:8248:91f4:d0ff)
[00:03:54] <InPhase> "There should be one -- and preferably only one -- obvious way to do it."  I chuckle every time I think of this Python declaration.
[00:04:16] <JordiGH> Time to resurrect Tim Toady.
[00:04:19] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[00:04:41] <bitplane> hi, anyone got a favourite 16-bit number used to test endianness and sign/unsigned in unit tests?
[00:04:48] <SnoopJ> Wooble, what would you call it instead?
[00:04:54] <JordiGH> bitplane: I like 7.
[00:04:58] <bitplane> ideally one that looks cool in hex
[00:05:12] <Wooble> SnoopJ: Klass? I dunno, can't I hate it without having a better one? :)
[00:05:19] <JordiGH> Oh, we only get four hex letters?
[00:05:19] <SnoopJ> of course :)
[00:05:20] <KirkMcDonald> bitplane: Could throw a BOM at it.
[00:05:20] *** Quits: Strom (~strom@fedora/strom) ()
[00:05:21] <bitplane> 7 is the same in signed/unsigned 16-bit int
[00:05:26] <JordiGH> bitplane: BEEF
[00:05:27] <SnoopJ> typing.ThisClass maybe
[00:05:29] <bitplane> KirkMcDonald good idea, thanks
[00:05:33] <JordiGH> I guess DEAD is also good.
[00:05:53] *** Joins: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com)
[00:06:02] *** Quits: marcello42 (~mp@2001:1a81:125e:800:c345:e197:48e:2f4b) (Ping timeout: 240 seconds)
[00:06:27] <bitplane> JordiGH beef is great, I'll use that ?D
[00:06:28] <bitplane> :D
[00:06:38] <Wooble> SnoopJ: I wish I knew js well enough to know exactly how much that would confuse js programmers
[00:06:41] <bitplane> didn't realise that DEADBEEF was so useful
[00:06:51] *** Quits: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com) (Remote host closed the connection)
[00:06:54] <BinarySavior> lol
[00:06:56] <JordiGH> lol
[00:06:57] *** Joins: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com)
[00:07:11] <SnoopJ> Wooble, my understanding of `this` in JS is that most people are already confused about it anyway
[00:07:24] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 250 seconds)
[00:07:25] *** Joins: Strom (strom@fedora/strom)
[00:07:57] *** Joins: vicfred (~vicfred@user/vicfred)
[00:08:01] *** Joins: debayer948 (~debayer@76.82.226.116)
[00:08:05] <Wooble> SnoopJ: the sentence from MDN "Inside a function, the value of this depends on how the function is called." is where I stop reading
[00:08:09] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 268 seconds)
[00:08:43] <BinarySavior> there could be something similar to super() to return the class of self, for example, member(self)
[00:08:45] <BinarySavior> or something like that
[00:08:50] *** Quits: markwdev (~mark@71-135-3-182.lightspeed.rlghnc.sbcglobal.net) (Quit: ZNC 1.8.2 - https://znc.in)
[00:08:58] <deniska> type(self)?
[00:09:09] *** Quits: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com) (Remote host closed the connection)
[00:09:14] <BinarySavior> wait that wouldn't work though because you're defining and using it at the same time
[00:09:40] <Wooble> BinarySavior: annotations evaluation can be deferred
[00:09:59] <deniska> yeah, that's only valid when self is available, and self isn't available outside of the methods
[00:10:14] *** Joins: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com)
[00:10:16] *** Quits: BSaboia_ (~bsaboia@187.19.136.30) (Quit: This computer has gone to sleep)
[00:10:26] *** Quits: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com) (Remote host closed the connection)
[00:10:26] <Wooble> deniska: just make it work in annotations, even if the first argument wasn't named "self" :)
[00:11:16] *** Joins: markwdev (~mark@71-135-3-182.lightspeed.rlghnc.sbcglobal.net)
[00:11:42] <BinarySavior> Wooble Special cases aren't special enough to break the rules.
[00:11:46] <Wooble> def horrible_method(realself, self) -> type(self):  # returns object of same type as realself
[00:11:57] <Wooble> :shipit:
[00:12:19] *** Joins: Milijus (~Milijus@2601:580:4500:1305:e6e7:49ff:fe47:5310)
[00:13:13] *** Quits: resmo (~resmo@2a00:d420:9:8a00:9adf:68d1:b529:d8cf) (Read error: Connection reset by peer)
[00:13:21] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[00:13:50] <deniska> Wooble: inspect method signature, allow self to be at any position
[00:13:50] *** Quits: sidro (~sidro@86.126.125.141) (Quit: Konversation terminated!)
[00:13:53] *** Joins: resmo (~resmo@2a00:d420:9:8a00:969e:b61e:cec:2144)
[00:14:06] *** Joins: PantelicGR (~PantelicG@dhcp-188-117-195-170.cm.hcn.gr)
[00:14:06] *** Quits: PantelicGR (~PantelicG@dhcp-188-117-195-170.cm.hcn.gr) (Changing host)
[00:14:06] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[00:14:26] *** Joins: shad (~shad@user/shad)
[00:14:48] <Wooble> come to think of it allowing type(some_actual_parameter) would be a lot nicer than TypeVar
[00:15:26] *** Quits: maxzor (~maxzor@2a01cb04054faa0042c6b357a52a3575.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[00:16:04] <BinarySavior> I think Self is _acceptable_
[00:16:23] <BinarySavior> uppercase is enough of differentiation to lowercase self
[00:16:27] <deniska> Speaking of methods, I just had an unrelated idea: `def some_horrible_method(self=None): if self is None: self = ClassName()`
[00:16:42] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[00:16:59] *** Joins: spithash (~spithash@user/spithash)
[00:17:05] *** Joins: cosimone (~user@93-34-132-251.ip49.fastwebnet.it)
[00:17:10] <deniska> Now both ClassName().some_horrible_method() and ClassName.some_horrible_method() work
[00:17:21] <deniska> it's like a semi-classmethod
[00:17:24] *** Joins: lillemagga (~lillemagg@ti0036a400-1042.bb.online.no)
[00:17:52] <deniska> (semi-staticmethod really)
[00:18:29] <BinarySavior> I'm not very well versed in decorators but I imagine you might run into issues decorating that one
[00:20:50] *** Joins: GNUmoon2 (~GNUmoon@gateway/tor-sasl/gnumoon)
[00:21:04] *** Quits: lillemagga (~lillemagg@ti0036a400-1042.bb.online.no) (Client Quit)
[00:23:14] *** Joins: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com)
[00:25:57] *** Quits: KnowledgeShark (~Knowledge@50.34.206.168) (Ping timeout: 240 seconds)
[00:26:13] *** Quits: vats (~vats@180.149.226.25) (Ping timeout: 256 seconds)
[00:26:13] *** Quits: aeyxa (~aeyxa@EPLICA-CORP.bar1.SanDiego1.Level3.net) (Ping timeout: 256 seconds)
[00:27:11] *** Joins: singularity00 (~singulari@85.187.64.126.client.entry.bg)
[00:28:01] *** Joins: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net)
[00:28:50] *** Joins: BSaboia_ (~bsaboia@187.19.136.30)
[00:28:56] *** Quits: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com) (Remote host closed the connection)
[00:29:09] *** Quits: BSaboia_ (~bsaboia@187.19.136.30) (Read error: Connection reset by peer)
[00:29:37] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Ping timeout: 240 seconds)
[00:29:38] *** Joins: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com)
[00:30:27] *** Joins: WEE14 (~WEE@cpe-104-33-18-107.socal.res.rr.com)
[00:30:28] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[00:31:17] *** Quits: roxfan (~roxfan@185.206-129-109.adsl-dyn.isp.belgacom.be) (Ping timeout: 240 seconds)
[00:32:07] *** Joins: roxfan (~roxfan@109.129.206.185)
[00:32:11] *** Quits: WEE14 (~WEE@cpe-104-33-18-107.socal.res.rr.com) (Client Quit)
[00:34:11] *** Joins: parv (~quass@user/parv)
[00:34:37] *** Quits: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 240 seconds)
[00:34:45] *** Quits: wereii_ (~wereii@2a03:3b40:fe:4f::1) (Quit: ZNC - https://znc.in)
[00:36:06] *** Quits: magla (~gelignite@55d4d2c6.access.ecotel.net) (Quit: Stay safe!)
[00:36:27] <toma> In the interpreter I can do a class definition with a docstring and nothing else, I can instantiate an object, and then I can assign attributes. I can't seem to do the same in .py files. I get an AttributeError ('Point' object has no attribute 'x'). Is that normal? Am I doing something wrong?
[00:36:57] *** Quits: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt) (Ping timeout: 240 seconds)
[00:37:05] <deniska> toma: can you show the code?
[00:37:24] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[00:38:26] <bjs> toma: you can put the .py file in a pastebin like with https://bpa.st/+python and show us.  It should work the same as in the interactive interpreter
[00:38:32] <toma> deniska: sure thing. sorry I didn't have that done before.
[00:38:33] <toma> https://bpa.st/S2MQ
[00:38:35] *** Joins: wereii (~wereii@37.205.14.89)
[00:38:54] *** Quits: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com) (Remote host closed the connection)
[00:39:10] <bjs> toma: did you mean Q.x, Q.y =
[00:39:13] *** Joins: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt)
[00:39:16] <bjs> not Q.x. Q.y =
[00:39:21] *** Quits: debayer948 (~debayer@76.82.226.116) (Quit: Ping timeout (120 seconds))
[00:39:31] <bjs> (note , vs .)
[00:39:37] <toma> bjs: thanks.
[00:39:48] *** Joins: debayer948 (~debayer@76.82.226.116)
[00:40:30] <toma> deniska, bjs: I guess I need to pay more attention to the errors.
[00:40:30] *** Joins: ensyde (~ensyde@2600:1700:2050:1040:505d:6d63:cb2e:fb52)
[00:41:52] <SnoopJ> toma, it gets easier to read them with practice. If you want a helping hand with interpreting them, the `friendly` library can be pretty handy: https://pypi.org/project/friendly/
[00:43:27] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:43:45] *** Joins: tga (~tga@p54a75da2.dip0.t-ipconnect.de)
[00:43:45] *** Quits: tga (~tga@p54a75da2.dip0.t-ipconnect.de) (Changing host)
[00:43:45] *** Joins: tga (~tga@user/tga)
[00:44:04] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[00:44:53] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[00:44:55] <toma> SnoopJ: Thanks. I think if I begin to rely on 'friendly' it might slow my progress. I think I can do this the harder way. :)(
[00:45:03] *** Joins: summersault (~summersau@179.221.251.36)
[00:45:48] *** Quits: pyevery__ (~pyeveryth@c-73-38-4-158.hsd1.nh.comcast.net) (Remote host closed the connection)
[00:45:50] *** Joins: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com)
[00:46:15] <SnoopJ> toma, why do you think it will slow your progress?
[00:46:19] *** Joins: pyevery__ (~pyeveryth@c-73-38-4-158.hsd1.nh.comcast.net)
[00:46:34] *** Quits: CaveDev (~CaveDev@p3ee3927c.dip0.t-ipconnect.de) (Quit: Leaving)
[00:47:42] <toma> SnoopJ: it makes learning too easy not having to look up things and make them more permanent. I also think that it might become like a crutch, and I won't be able to see past the guidance it provides. If I become a nuisance I'll reconsider.
[00:47:46] *** Joins: audiocat (~audio@user/audio)
[00:47:54] <toma> SnoopJ: have you known many people to have had good success with it?
[00:48:02] <SnoopJ> toma, I know at least one: me
[00:48:42] *** Quits: nomic (~nomic@185.192.69.41) (Quit: Leaving)
[00:49:05] *** audiocat is now known as audiobirb
[00:49:26] <toma> SnoopJ: You might just be an exceptional person. hehe
[00:50:42] *** Quits: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com) (Ping timeout: 268 seconds)
[00:50:47] *** Quits: pyevery__ (~pyeveryth@c-73-38-4-158.hsd1.nh.comcast.net) (Ping timeout: 256 seconds)
[00:50:54] <SnoopJ> if you don't want assistance, you don't want assistance :)
[00:51:10] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 250 seconds)
[00:51:42] *** Joins: hesse (~TheHerman@gateway/tor-sasl/thehermann)
[00:53:51] *** Quits: GNUmoon2 (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[00:53:51] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Ping timeout: 276 seconds)
[00:54:42] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[00:55:27] *** Joins: xavie (~xavie@176-139-252-198.abo.bbox.fr)
[00:55:45] <toma> SnoopJ: I think it's some people think progress has to be made in a certain way. I think with respect to learning there's two effective groups, one that thinks learning hard things should be as easy as possible, and the other that thinks that learning should be difficult but not discouraging. I fall into the latter group. There's research that supports both paradigms.
[00:55:54] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::a)
[00:55:56] *** Quits: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt) (Ping timeout: 250 seconds)
[00:56:24] <exarkun> sadly, redoc doesn't seem to do a much better job than sphinx-openapi, as far as actual content goes
[00:56:35] <exarkun> (or maybe just in terms of error reporting about not finding what it expects)
[00:57:17] *** Quits: esther (~esther@2607:fb90:5fe2:b34b:a3cd:ece2:357d:381c) (Ping timeout: 240 seconds)
[00:57:22] *** Joins: xavie1 (~xavie@176-139-252-198.abo.bbox.fr)
[00:57:27] *** Joins: esther (~esther@136.62.7.216)
[00:57:32] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 240 seconds)
[00:57:32] *** Joins: ouestbillie (~gallup@185.65.135.248)
[00:57:38] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[00:58:31] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 256 seconds)
[00:59:15] *** Joins: yassernasc (~yassernas@2804:29b8:505a:f33d:65bb:7e4c:2cd0:965)
[00:59:20] *** Joins: meder (~meder@c-65-34-244-236.hsd1.fl.comcast.net)
[00:59:40] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[00:59:46] <jim> hi, I have a big json file, which is a list of words, to read in to get that list into python... what are two or three json parsers which are python3 modules?
[01:00:02] *** Quits: xavie (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 240 seconds)
[01:00:23] <exarkun> jim: How about the `json` module in the stdlib?
[01:00:28] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[01:00:37] <exarkun> (Surely one is enough)
[01:00:41] <meder> Is there a reason why sometimes pip installs packages into /home/ubuntu/.local/lib/python3.8/site-packages and others it installs into /usr/local/lib/python3.8? Trying to setup certbot but says no module for josepy, but there's an inconsistency between where it installed between the two. It seems like ~/.local was with no sudo and the latter was with sudo?
[01:00:45] <SnoopJ> toma, I have nothing invested in convincing you, just wondering why you think you deserve to suffer through it
[01:00:50] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[01:00:58] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[01:01:07] <SnoopJ> It's not like a little help unpacking what the errors say makes fixing them all that much easier
[01:01:19] <exarkun> meder: The former is when you run as a non-root user.  The latter is when you run as a root user.
[01:01:27] <toma> SnoopJ: Point taken.
[01:01:28] <exarkun> meder: You should avoid both of those and use a virtualenv instead.
[01:01:51] <meder> exarkun: first off, nice nick! secondly, if I couldn't do virtualenv today, would you recommend the former or latter? .local vs /usr/local?
[01:02:12] <exarkun> meder: It depends on whether you'd rather re-install your whole OS or just wipe one user account and start over.
[01:02:17] <SnoopJ> `sudo pip` runs the very real risk of breaking your OS, don't do it
[01:02:30] <meder> ^ ok
[01:02:45] <exarkun> meder: As SnoopJ suggests, `/usr/local` is installing packages for the system python, and you don't really know what negative consequences that's going to have
[01:02:47] <jim> exarkun, so I wouldn't need to install that one?
[01:02:55] <exarkun> jim: right.  it is installed with python.
[01:03:08] <exarkun> meder: At least ~ubuntu/.local/lib can only break python for the `ubuntu` user
[01:03:10] <jim> great :)
[01:03:55] <jim> so it's called "json"
[01:03:57] *** Quits: esther (~esther@136.62.7.216) (Ping timeout: 240 seconds)
[01:04:10] <SnoopJ> meder, a third option is to install the python3-certbot package (and possibly some of the related packages for DNS)
[01:04:12] <meder> exarkun: but if I need to write to the letsencrypt live ssl directory which requires sudo permissions? same deal?
[01:04:15] <meder> ah
[01:04:24] <jim> it's there :)
[01:04:28] *** Joins: hemstock (~hemstock@68.71.244.6)
[01:04:33] *** Joins: esther (~esther@2607:fb90:5fe2:b34b:11a6:f25a:3c65:fde6)
[01:05:11] <exarkun> meder: Filesystem permissions will be completely independent of where the Python software is installed
[01:05:46] <SnoopJ> exarkun, I think their point is that they won't be running the local-to-that-user copy if they aren't that user
[01:06:16] <exarkun> I think that will depend on what your local sudo configuration is and what command line arguments you pass to it
[01:06:29] <SnoopJ> I should think that goes without saying
[01:06:37] *** Quits: debayer948 (~debayer@76.82.226.116) (Ping timeout: 240 seconds)
[01:06:38] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Remote host closed the connection)
[01:06:51] <exarkun> I don't think everyone realizes how many knobs sudo has in it
[01:06:55] <exarkun> Anyway, now it's said
[01:06:58] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[01:07:11] *** Quits: paul424 (~tom@ip-5-172-236-45.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[01:07:44] <SnoopJ> meder, Debian/Ubuntu do some weird stuff with Python, it's often best to forget the system copy exists at all, unless you're developing software explicitly to fit into their opinions about how Python should be (i.e. writing a package for their repositories)
[01:07:52] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Read error: Connection reset by peer)
[01:07:53] *** Joins: lrngystdlted^ (~lrngystdl@50-207-160-170-static.hfc.comcastbusiness.net)
[01:08:07] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[01:08:21] *** Joins: ledtc (~ledtc@c-f8aa70d5.014-57-6c756e3.bbcust.telenor.se)
[01:08:27] *** Joins: de-facto (~de-facto@user/de-facto)
[01:08:44] <SnoopJ> but python3-certbot should get you unstuck, since it makes certbot available system-wide (and intuitively runnable as a user with the necessary elevated permissions)
[01:08:53] <jim> can I read the json file a line at a time, and each time I do, feed that line into json?
[01:09:43] <SnoopJ> jim, do you want to incrementally parse JSON?
[01:10:43] <jim> I guess so... but I dunno if the lines in and of themselves are correct json, they might be parts of json objects, etc
[01:11:03] <meder> SnoopJ: exarkun: thank you for the snappy replies!
[01:11:17] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[01:11:25] <SnoopJ> well, that's why I ask. If you're parsing a jsonlines document or somesuch you can get away with `json`, but if you want truly incremental parsing you need something fancier. Not sure if there's a parser that does that off the shelf
[01:11:36] <jim> like the file might have an open [ at the top of the file and a ] at the bottom
[01:11:48] *** Joins: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com)
[01:12:02] <SnoopJ> what about the lines in-between?
[01:12:36] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[01:13:16] *** Quits: remote (~self@user/hackers) (Remote host closed the connection)
[01:13:44] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[01:13:56] <bitplane> https://github.com/kashifrazzaqui/json-streamer
[01:14:01] <bitplane> that ought to do it
[01:14:12] <bitplane> sax-like json streaming parser
[01:14:32] *** Joins: md618 (~md618@90.192.135.131)
[01:16:08] <Jong> Suppose we had dataList = [{'a': 1,'b':2}, {'a':5,'b': 3}, {'a': 5,'b':9}].. Is there anyway to have a for in statement like for (a,b) in dataList:
[01:17:01] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[01:17:16] <bitplane> [(item["a"], item["b"] for item in dataList]
[01:17:17] *** Quits: esther (~esther@2607:fb90:5fe2:b34b:11a6:f25a:3c65:fde6) (Ping timeout: 240 seconds)
[01:17:35] <bparker> just fair warning, working with SAX parsers is *extremely* difficult in comparison to reading in the whole file at once and mapping it onto a dict
[01:17:37] <bitplane> [(item["a"], item["b"]) for item in dataList] #missed a bracket
[01:17:56] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[01:18:04] <bparker> especially when you have arrays and objects within other arrays and/or objects
[01:18:14] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[01:18:15] * SnoopJ would prefer to have a complete problem description first
[01:18:28] <bparker> you'd got to manually keep track of how deep you are within all the descending nodes
[01:18:33] <bparker> you've*
[01:18:48] *** Joins: Pickchea (~private@user/pickchea)
[01:18:50] *** Joins: de-facto (~de-facto@user/de-facto)
[01:19:33] *** Quits: jw_dungeon (~jw@2601:44:4380:4a10:706b:e515:702b:f9c) (Quit: Konversation terminated!)
[01:19:46] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 250 seconds)
[01:19:57] <bitplane> yeah depends on the data format, lots of APIs are sharting out json thats just a wrapped up array of objects at its core, much of the time you don't really need an object tree, there's some list that you care about
[01:19:59] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[01:20:36] <bitplane> but pushing it through jq to filter it first is probably a better idea in most cases
[01:20:53] *** Quits: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com) (Remote host closed the connection)
[01:21:58] <bitplane> the memory requirements of loading anything medium sized is pretty obscene, it's like 160 bytes per object or something
[01:22:01] *** Joins: debayer948 (~debayer@76.82.226.116)
[01:22:02] <Jong> bitplane the way you're doing it, I'd need another for loop though.  for (a,b) in [(item["a"], item["b"]) for item in dataList]:  Or am I wrong?
[01:22:14] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[01:22:25] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[01:23:22] <bitplane> you've got  [{'a': 1,'b':2}, {'a':5,'b': 3}, {'a': 5,'b':9}] then "item" would be {'a': 1,'b':2} in the first iteration
[01:23:37] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[01:23:57] <bitplane> so (item["a"], item["b"]) would be (1, 2)
[01:24:26] <bitplane> result would be [(1, 2), (5, 3), (5, 9)]
[01:24:37] <bjs> Jong: there's not really any nice way of destructuring dictionaries without the `match` statement. You can go `for d in the_list: a, b = d["a"], d["b"]`
[01:25:03] <bjs> but you can't easily merge the two together without something extra
[01:25:04] <bitplane> ooh that is nice
[01:26:01] *** Joins: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com)
[01:26:14] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[01:26:18] <bitplane> when i were a lad, colons existed at the seat of your trousers or the end of a line /oldman
[01:26:37] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[01:26:47] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[01:29:21] *** Quits: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com) (Remote host closed the connection)
[01:29:27] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[01:29:29] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:5cfb:fe:97a7:72)
[01:29:45] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[01:29:55] <stewie925> hello, I'd like some help with my unittest question - https://bpa.st/VKBA
[01:29:57] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[01:30:51] *** Joins: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:d9fd:fa02:c3dd:fc1c)
[01:30:56] <Jong> bjs thanks for confirming
[01:31:27] <Jong> basically I'm trying to benchmark a call with different inputs.  I have this: https://bpa.st/JMSA
[01:32:09] <Jong> I thought making a dictionary of lists would be more descriptive than a list of tuples, because a list of tuples doesn't state the name of each column
[01:32:19] <Jong> list of dictionaries I mean
[01:32:25] <NoImNotNineVolt> so, i must be doing something very wrong with tox and pyenv...
[01:32:47] <NoImNotNineVolt> my tox.ini has basepython = python3.9
[01:32:58] <FLHerne> bitplane: You should still have a line break for readability, it's just easier to omit them on IRC
[01:33:07] <NoImNotNineVolt> i do `pyenv local 3.9.9` and then run `tox`.
[01:33:17] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[01:33:32] <FLHerne> also, I don't think any version of Python required a newline for single-line loops
[01:33:52] <NoImNotNineVolt> the virtualenv that tox builds out ends up kinda broken.... ModuleNotFoundError: No module named 'pip._vendor.six'
[01:33:54] *** Joins: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com)
[01:34:27] <NoImNotNineVolt> i get that error when i run tox, as well as when i try to even invoke .tox/envname/bin/pip
[01:34:31] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[01:35:02] *** Joins: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com)
[01:35:18] *** Joins: vlm (~vlm@user/vlm)
[01:36:14] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[01:36:27] *** Quits: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com) (Remote host closed the connection)
[01:36:55] <stewie925> hello, I'd like some help with my unittest question - https://bpa.st/VKBA - I listed the main function and the test case to test the ValueError scenario (which passed).  The test case uses assertRaises to invoke ValueError exception.   I am wondering if there is a way to test it using side_effect instead?
[01:37:41] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[01:38:31] <NoImNotNineVolt> ah, nevermind.
[01:38:33] <bitplane> assertRaises goes in a with block I think
[01:38:37] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[01:38:58] <stewie925> bitplane: yeah, thats what my code has
[01:39:16] *** Joins: djhankb (~djhankb@208.113.164.68)
[01:39:39] <stewie925> but in my https://bpa.st/VKBA - I shared how I tried to use side_effect to invoke ValueError, but I got an error which I also posted.
[01:40:13] *** Joins: RayT (~RayT@2a01cb0c04d44a00095eda9cd5f12876.ipv6.abo.wanadoo.fr)
[01:40:47] *** Joins: GNUmoon2 (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:40:47] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[01:40:56] *** Quits: Babar (~Babar@2405:4803:a04c:a7e0:5162:9bf0:5241:c93b) (Read error: Connection reset by peer)
[01:41:02] <stewie925> bitplane: lines 26-29 shows the assertRaises within the with block as you mentioned - I understand that and the test passed
[01:41:12] *** Quits: RayT (~RayT@2a01cb0c04d44a00095eda9cd5f12876.ipv6.abo.wanadoo.fr) (Changing host)
[01:41:12] *** Joins: RayT (~RayT@user/RayT)
[01:41:50] <stewie925> bitplane: I guess it got complicated by the fact that I am also mocking the built-in open() function,
[01:43:13] <stewie925> my attempt is at lines 38-44
[01:43:18] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[01:44:28] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 250 seconds)
[01:44:41] <bjs> stewie925: you want the read() method to raise ValueError?
[01:44:49] <bjs> I don't really understand what you are trying to do
[01:44:53] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:45:06] <stewie925> bjs: yeah
[01:45:32] <stewie925> bjs: my code in lines 26-30 use assertRaises - I wonder if there is a way to do it using side_effect instead?
[01:45:48] <bjs> stewie925: you can't use mock_open and a side_effect at the same time
[01:45:58] <bjs> it doesn't make sense, you want it to both raise ValueError *and* return the data from test_data ?
[01:46:14] <bjs> if you don't want to actually do reads of the test data, I don't think you want mock_open at al
[01:46:17] <bjs> just a normal mock will do
[01:46:41] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[01:46:57] <stewie925> bjs: right, I dont need it to read the test_data
[01:47:16] <stewie925> and just trigger the ValueError
[01:47:28] <bitplane> I'd do this I think: https://bpa.st/NR6A
[01:48:48] <stewie925> hi bitplane, unittest framework allows passing ValueError via side_effect
[01:49:03] <stewie925> but let me try the "normal mock" as bjs suggested
[01:49:37] <bitplane> pytest is much nicer than unittest class ugliness, and the auto-fixture stuff from conftest.py just keeps things looking neat and tidy
[01:49:52] <stewie925> I wonder if I just use mock.patch instead of using the with block
[01:50:05] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:3593:52da:4b13:8830)
[01:50:08] <bjs> stewie925: yes, use patch to make just a normal mock and set its side_effect like normal
[01:50:16] <bjs> well not the mocks' side-effect, but the read methods side-effect
[01:50:57] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[01:51:04] <bitplane> mock_open will return another mock, and setting the read method's side_effect will make it raise the exception
[01:51:22] <bitplane> two birds, one stone
[01:51:37] *** Quits: jay-m1261 (~jay-m@129.0.76.222) (Ping timeout: 240 seconds)
[01:51:37] *** Quits: jay-m126_ (~jay-m@129.0.76.222) (Ping timeout: 240 seconds)
[01:51:37] *** Quits: jay-m126 (~jay-m@129.0.76.222) (Ping timeout: 240 seconds)
[01:52:16] *** Quits: md618 (~md618@90.192.135.131) (Ping timeout: 250 seconds)
[01:52:47] *** Quits: Guddu (~Guddu@117.247.158.145) (Quit: Leaving)
[01:53:02] *** Quits: RayT (~RayT@user/RayT) (Quit: RayT)
[01:53:04] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[01:53:45] *** Quits: upsala (~zcb@185.209.196.169) (Quit: WeeChat 3.4)
[01:53:57] *** Quits: ledtc (~ledtc@c-f8aa70d5.014-57-6c756e3.bbcust.telenor.se) (Quit: Client closed)
[01:53:59] *** Joins: viaSanctus (~viaSanctu@user/viasanctus)
[01:54:09] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl48a9oewhqdrd55l.ipv6.telus.net) (Remote host closed the connection)
[01:54:11] *** Quits: vladoski (~foo@2001:b07:add:d406:7cff:4090:5e01:49a0) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:54:50] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 268 seconds)
[01:55:00] *** Joins: cellofellow (~user@166.70.30.252)
[01:55:52] *** Joins: vladoski (~foo@2001:b07:add:d406:7cff:4090:5e01:49a0)
[01:56:09] <stewie925> when I tried to do `@mock.patch("builtins.open", mock_open)`  I get a `mock_open` not defined
[01:56:17] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::a) (Ping timeout: 240 seconds)
[01:57:05] *** Quits: vladoski (~foo@2001:b07:add:d406:7cff:4090:5e01:49a0) (Client Quit)
[01:57:18] *** Quits: dreamon (~dreamon@p54b1472c.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[01:58:03] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[01:58:07] <stewie925> https://bpa.st/L36Q
[01:58:36] <bitplane> the @decorator wraps the function and adds extra parameters to the end of the parameter list
[01:59:24] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Remote host closed the connection)
[01:59:44] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[01:59:49] <bitplane> so it gets passed as the last param. multiple patches add more parameters, with the topmost patch being the rightmost param
[02:00:29] <bitplane> in a with block, it gets passed to the "as" clause `with patch("something") as new_variable:`
[02:01:04] <NoImNotNineVolt> i don't know what i did, but .pyenv/shims/ is empty :'(
[02:01:12] *** Joins: LiftLeft (~LiftLeft@fixed-138-186-31-170.totalplay.net)
[02:01:37] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[02:03:38] *** Quits: Gerula (~Gerula@user/gerula) (Quit: Leaving)
[02:03:48] <NoImNotNineVolt> and there's no clear way to get pyenv to ignore ssl or to use the same trust store as system curl
[02:03:53] *** Quits: chgtg (~chg@116.3.20.6) (Ping timeout: 256 seconds)
[02:05:56] *** Joins: chgtg (~chg@116.3.20.151)
[02:06:30] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Quit: Lost terminal)
[02:07:01] <aphysically> "0:15:16 load avg: 2.11 running: test_socket (9 min 38 sec)"
[02:07:05] <aphysically> cpython test suite pls
[02:08:37] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 240 seconds)
[02:09:08] *** Joins: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com)
[02:09:14] *** Joins: Guest9014 (~vit@chello085216193138.chello.sk)
[02:09:20] *** Joins: vladoski (~foo@2001:b07:add:d406:7cff:4090:5e01:49a0)
[02:09:32] *** Parts: dbear (~david@mesa.ha.school) ()
[02:09:34] *** Joins: thevar1able (~textual@46.39.45.122)
[02:10:37] *** Quits: lispy (~lispy4@84.69.59.93) (Quit: Leaving)
[02:10:40] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[02:11:32] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[02:12:33] *** Quits: aslicedbanjo (~aslicedba@host86-168-244-83.range86-168.btcentralplus.com) (Quit: Leaving.)
[02:12:44] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[02:13:17] *** Quits: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com) (Ping timeout: 240 seconds)
[02:13:17] *** Quits: NeckRomancer (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 240 seconds)
[02:13:57] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[02:14:02] *** Quits: xx (~xx@user/xx) (Ping timeout: 240 seconds)
[02:14:32] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:50] *** Joins: icsdi (~icsdi@net-37-179-41-124.cust.vodafonedsl.it)
[02:15:53] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:26] *** Quits: icsdi (~icsdi@net-37-179-41-124.cust.vodafonedsl.it) (Client Quit)
[02:17:04] <SnoopJ> NoImNotNineVolt, sounds like you want to `git reset --hard` your pyenv installation, assuming you installed it with git
[02:17:37] <SnoopJ> or `git checkout -- shims/` if you're sure it's *only* the shims that are broken
[02:18:42] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 250 seconds)
[02:18:58] *** Joins: icsdi (~icsdi@net-37-179-41-124.cust.vodafonedsl.it)
[02:19:14] *** Quits: icsdi (~icsdi@net-37-179-41-124.cust.vodafonedsl.it) (Client Quit)
[02:19:36] *** Joins: eXtr3m0 (~eXtr3m0@user/eXtr3m0)
[02:22:13] *** Quits: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:22:49] <stewie925> close, but still not close enough - https://bpa.st/VBZA
[02:24:58] *** Quits: singularity00 (~singulari@85.187.64.126.client.entry.bg) (Quit: The true sign of intelligence is not knowledge but imagination.)
[02:26:04] <stewie925> I wonder why the `mocked_open.side_effect = ValueError ` seems to get ignored
[02:30:02] *** Joins: nomic (~nomic@185.192.69.41)
[02:31:50] *** Quits: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:d9fd:fa02:c3dd:fc1c) (Ping timeout: 268 seconds)
[02:32:43] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[02:32:57] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 240 seconds)
[02:34:32] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[02:34:39] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[02:35:36] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[02:35:49] *** Joins: califax (~califax@user/califx)
[02:37:13] <bjs> stewie925: it didn't,  your test raised ValueError didn't it?
[02:37:46] <stewie925> bjs yeah the error details says it did
[02:38:05] <bjs> stewie925: so it didn't get ignored, maybe you put the side effect on the wrong thing if it's not being raised in the place you expected
[02:38:51] <stewie925> but when i stepped through the open_json_file code, it never hit the valueerror line of code
[02:39:14] *** Quits: neceve (~quassel@2.26.93.228) (Ping timeout: 268 seconds)
[02:39:27] <bjs> stewie925: I'm not sure what you mean,  the unittest report at the bottom clearly says ValueError ?
[02:39:28] <stewie925> so I applied the side_effect incorrectly ?
[02:39:40] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:39:45] <bjs> I don't know, why do you say you did? The unittest report seems to say the mock raised ValueError just fine
[02:39:48] <stewie925> bjs yeah the unittest report
[02:40:58] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:43d0:2b49:8683:23ee) (Quit: Konversation terminated!)
[02:41:02] <bjs> stewie925: so what's your question?
[02:41:49] *** Quits: nomic (~nomic@185.192.69.41) (Quit: Leaving)
[02:42:06] *** Joins: nomic (~nomic@185.192.69.41)
[02:43:22] <stewie925> bjs: I m sorry and appreciate your patience - here is the complete report -  https://bpa.st/NSTQ
[02:43:46] <stewie925> 'test_invalid_json_using_side_effect (test_process_json.TestReadJSON) ... ERROR'
[02:43:49] <bjs> stewie925: yes, you set a side_effect to raise a ValueError and here you report a unittest running which raises a ValueError when calling the mock.
[02:43:54] <bjs> Yes, isn't that what you expect?
[02:43:55] *** Quits: bitplane (~bitplane@2a02:c7e:ab3:6f00:f000:8248:91f4:d0ff) (Ping timeout: 256 seconds)
[02:44:22] <stewie925> bjs - if you look at line #libera 4 - it says that test case errored
[02:44:45] <bjs> stewie925: yes, the call to `open_json_file` failed because it raised ValueError because of your mock side_effect
[02:44:55] <stewie925> line number 4 inhttps://bpa.st/NSTQ
[02:44:57] <bjs> I'm confused. what is the question?
[02:45:02] <stewie925> the assertion
[02:45:03] *** Quits: cemotyz09 (~cemotyz09@cpe-76-186-11-137.tx.res.rr.com) (Remote host closed the connection)
[02:45:09] <bjs> stewie925: which assertion?
[02:45:34] <stewie925> https://bpa.st/VBZA - line 7
[02:45:42] <bjs> what about line 6?
[02:45:47] <stewie925> it never hit that when I stepped through
[02:46:01] <bjs> yes because line 6 raises ValueError (isn't that the whole point here?0
[02:46:16] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[02:46:37] <stewie925> how do I unit test it to say "ok , it hit the value error so the test should have been successful"
[02:46:46] <bjs> stewie925: the way you do on line 7
[02:46:52] <bjs> which you do not do on line 6
[02:47:14] *** Joins: stdout (~stdout@2605:ab80:b000:7202:3e12:af82:936c:2ff6)
[02:47:58] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[02:48:18] <bjs> stewie925: your test seems to call open_json_file twice, once with a mocked version to raise ValueError, and another time without the mock but asserting it raised ValueError.  I'm not sure why it appears twice or why it seems backwards
[02:48:23] <bjs> is that a mistake?
[02:48:54] <stewie925> I must have missed it - I think I only called it once
[02:49:13] <bjs> stewie925: in your paste there are clearly two calls: one on line 6, and one on line 7
[02:49:29] <stewie925> bjs: oh
[02:49:32] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[02:49:50] <stewie925> let me comment out line six and see what hapens
[02:50:05] <stewie925> and I have to INDENT line 7 within the with block
[02:50:07] *** Joins: Thete (~thete@user/thete)
[02:50:57] <stewie925> I commented out line 6, indented line 7, same thing...
[02:51:10] <bjs> stewie925: well it can't be "same thing" because the code is different, what happens now?
[02:51:14] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[02:51:45] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:52:15] <stewie925> let me post it .. brb
[02:52:48] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Ping timeout: 276 seconds)
[02:52:59] *** Quits: KombuchaKip (~kip@192.252.230.5) (Ping timeout: 256 seconds)
[02:53:49] *** Joins: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com)
[02:54:35] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Remote host closed the connection)
[02:55:01] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[02:55:09] *** Quits: vladoski (~foo@2001:b07:add:d406:7cff:4090:5e01:49a0) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:55:56] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[02:56:24] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[02:57:06] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:58:30] *** Joins: lispy (~lispy4@84.69.59.93)
[02:59:13] *** Quits: pree (~pree@2a02:8071:a5bc:ca00::1026) (Ping timeout: 256 seconds)
[02:59:32] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:00:22] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:00:23] <stewie925> https://bpa.st/ZDBQ - here is the updated code between 41-48 , and the log at the bottom - https://bpa.st/ZDBQ
[03:00:59] <bjs> stewie925: no you changed line 7,  so it takes a callable. You're calling it yourself here
[03:01:11] <stewie925> I see that line 43 and 44 says "raise effect ValueError"
[03:01:36] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[03:01:38] <stewie925> but line 27 says the test case ran with Error...
[03:01:51] <bjs> You shouldn't do that.  Maybe you want to use it as a context manager like `with assertRaises(ValueError): open_json_file(filename)`  or `assertRaises(ValueError, open_json_file, filename)`
[03:02:14] <bjs> stewie925: Yes if a test case fails with an exception (that isn't an assert) it's reported as an error
[03:02:24] <stewie925> thank you bjs - really appreciate your patience
[03:02:35] <stewie925> so cannot use side_effect for this scenario
[03:03:17] *** Quits: palasso (~palasso@user/palasso) (Ping timeout: 268 seconds)
[03:03:20] *** Quits: Bkid (~Bkid@user/bkid) (Ping timeout: 250 seconds)
[03:03:47] <stewie925> cause I was wondering if maybe I could change it from a context manager  to a regular patch, and then use side effect
[03:04:02] <bjs> stewie925: you mean like I suggested an hour ago? :P
[03:04:04] <stewie925> but I guess its not worth the trouble ....
[03:04:06] <bjs> You could!
[03:04:17] <stewie925> ugh, how...
[03:04:18] <stewie925> hehe
[03:04:31] *** Quits: cosimone (~user@93-34-132-251.ip49.fastwebnet.it) (Ping timeout: 256 seconds)
[03:04:39] *** Joins: Shikadi (~Shikadi@50.125.190.237)
[03:05:20] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:05:21] *** Joins: NeckRomancer (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[03:06:08] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:06:37] *** Quits: debayer948 (~debayer@76.82.226.116) (Ping timeout: 240 seconds)
[03:08:36] *** Quits: mug3n (~mugen@gateway/tor-sasl/mugen) (Quit: mug3n)
[03:08:57] <bjs> stewie925: something like https://bpa.st/OCOQ
[03:09:35] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[03:09:39] <bjs> stewie925: if you remove the assertRaises parts, then the test will fail with an error because the f.read() will raise ValueError.
[03:09:39] <stewie925> thank you! I'll test it out
[03:10:16] <bjs> note that if you do not use unittest.mock.mock_open then you will want to say mock().__enter__().read.side_effect = ... instead
[03:10:31] <bjs> mock_open sets up the mock to behave like open, where using it as a context manager returns itself.
[03:10:32] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[03:10:41] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 268 seconds)
[03:11:05] <stewie925> bjs: I see
[03:11:55] *** Joins: vladoski (~foo@2001:b07:add:d406:7cff:4090:5e01:49a0)
[03:12:00] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[03:12:16] *** Joins: roxfan2 (~roxfan@185.206-129-109.adsl-dyn.isp.belgacom.be)
[03:12:57] *** Quits: peteyboy1 (~peteyboy1@95.169.226.66) (Ping timeout: 240 seconds)
[03:13:01] *** Quits: roxfan (~roxfan@109.129.206.185) (Ping timeout: 256 seconds)
[03:13:46] *** Parts: Thete (~thete@user/thete) (WeeChat 3.5-dev)
[03:14:19] *** Joins: peteyboy1 (~peteyboy1@95.169.226.66)
[03:14:53] *** Joins: summersault (~summersau@179.221.251.36)
[03:17:07] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[03:17:43] *** Quits: vladoski (~foo@2001:b07:add:d406:7cff:4090:5e01:49a0) (Quit: Textual IRC Client: www.textualapp.com)
[03:18:16] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Read error: Connection reset by peer)
[03:18:50] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[03:19:29] *** Joins: hackers (~self@user/hackers)
[03:19:47] *** hackers is now known as remote
[03:19:52] *** Joins: debayer948 (~debayer@76.82.226.116)
[03:19:56] *** Quits: Guest9014 (~vit@chello085216193138.chello.sk) (Ping timeout: 268 seconds)
[03:21:30] *** Quits: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net) (Quit: Leaving)
[03:21:58] <stewie925> bjs: thank you so much, yes it finally PASSED...
[03:23:13] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[03:24:46] *** Quits: hesse (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:24:49] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[03:26:07] *** Joins: d1cor (~diego@179.63.242.120)
[03:27:40] *** Joins: nilson (~nilson@2601:c4:c431:a14:4601:bbff:feaf:9214)
[03:27:45] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[03:27:58] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[03:30:21] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:31:19] *** Joins: newpy (~newpy@2601:280:4381:1390:11aa:9b69:7802:937a)
[03:34:58] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[03:35:16] *** Quits: lispy (~lispy4@84.69.59.93) (Quit: Leaving)
[03:35:58] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:37:01] *** Joins: Psi (~omg@2001-48F8-3035-4A-F4FF-A01-6177-76CC-dynamic.midco.net)
[03:37:09] *** Psi is now known as Guest715
[03:37:19] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[03:37:56] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[03:38:20] *** Joins: Naan (~Naan@user/naan)
[03:38:22] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:5cfb:fe:97a7:72) (Quit: Client closed)
[03:40:47] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[03:41:19] *** Joins: summersault (~summersau@179.221.251.36)
[03:41:24] *** Quits: yassernasc (~yassernas@2804:29b8:505a:f33d:65bb:7e4c:2cd0:965) (Remote host closed the connection)
[03:42:14] *** Joins: bloody_ (~bloody@user/bloody)
[03:42:27] *** Joins: jyg (~jyg@128.218.42.10)
[03:42:37] *** Quits: five64333 (~five6@8.40.26.70) (Ping timeout: 240 seconds)
[03:44:18] <jyg> I'm getting an error for which any solution that gets upvotes includes recompiling Python.  The error is "ModuleNotFoundError: No module named '_sqlite3'"
[03:44:24] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[03:44:27] *** Joins: five64333 (~five6@8.40.26.70)
[03:44:37] <nedbat> jyg: how did you install Python?
[03:44:49] <jyg> yum on RHEL7, 3.8
[03:44:56] *** Quits: tga (~tga@user/tga) (Ping timeout: 250 seconds)
[03:45:05] <nedbat> maybe you have to install python-sqlite or something?
[03:45:07] *** Quits: bloody (~bloody@user/bloody) (Ping timeout: 256 seconds)
[03:45:12] <jyg> I'm really surprised that installing the system libs and install python modules... and now I have to recompile
[03:45:18] <jyg> I've installed that with pip
[03:45:27] *** Joins: abbc1022 (~abbc1022@154.16.168.187)
[03:45:36] <nedbat> jyg: not with pip, it would be an os package on yum?
[03:45:56] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[03:46:29] <jyg> right, as I said, I've installed the system libs. Definitely in there
[03:46:43] <nedbat> jyg: sorry, i don't know then.  i guess recompile
[03:47:05] <jyg> Thanks for giving it a shot
[03:49:05] <Guest715> hello. I'm a delphi coder who is learning python. I have a (hopefully) quick question
[03:49:53] <Guest715> how do I get a variable created in the main file to be recognized in one of the import files?
[03:50:10] <bjs> Guest715: "recognized" in what way?
[03:50:17] *** Quits: d1cor (~diego@179.63.242.120) (Ping timeout: 240 seconds)
[03:50:32] <TML> Guest715: That's kind of backwards from the way such things are usually done in Python
[03:51:01] <Guest715> I thought variables created in the main file would be recognized everywhere
[03:51:16] <bjs> Guest715: global variables are per-file.
[03:51:23] <Guest715> or to the variable declarations have to be ABOVE the import lines?
[03:51:30] <bjs> Guest715: but you can import a file and reference the variables in it.  `import foo` then you can go `print(foo.var)`
[03:51:53] <TML> Guest715: Genearlly speaking, most python code doesn't have a whole bunch of global variables, and you don't usually use the ones that ARE there to pass state around
[03:51:54] <jyg> importing a file pulls its references in, not the other way around
[03:52:18] <TML> 👆️
[03:53:02] <SnoopJ> imports can appear anywhere, but it's conventional to do the importing you need at the top of a file before all the other statements
[03:53:16] <jyg> If scopes were created as you are wanting, then every file/lib you import would potentially gets its internal env clobbered by the importer
[03:53:22] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Quit: Leaving)
[03:54:05] <Guest715> yes that's where I have them. I though I could have some of the functions that print out or modify the main variable be in am import file
[03:54:13] *** Joins: KombuchaKip (~kip@192.252.230.5)
[03:54:37] *** Quits: nilson (~nilson@2601:c4:c431:a14:4601:bbff:feaf:9214) (Ping timeout: 240 seconds)
[03:55:33] <bjs> Guest715: in Python each file has its own variables, they are not shared/one cannot "see" the others.  You can always pass values in to the functions as arguments though
[03:55:53] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:56:00] *** Joins: CoolerX (~CoolerX@user/coolerx)
[03:56:01] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[03:56:01] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[03:56:01] *** Joins: JordiGH (~jordi@user/jordigh)
[03:56:10] <Guest715> ok thanks. That answers my question.
[03:56:14] *** Quits: JordiGH (~jordi@user/jordigh) (Read error: Connection reset by peer)
[03:56:31] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[03:56:31] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[03:56:31] *** Joins: JordiGH (~jordi@user/jordigh)
[03:56:41] *** Joins: nilson (~nilson@2601:c4:c431:a14:4601:bbff:feaf:9214)
[03:57:41] *** Quits: lakrass (~lakrass@user/lakrass) (Quit: WeeChat 3.4)
[03:58:23] *** Quits: Guest715 (~omg@2001-48F8-3035-4A-F4FF-A01-6177-76CC-dynamic.midco.net) (Quit: Leaving)
[04:00:32] *** Quits: NeckRomancer (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 240 seconds)
[04:02:32] *** Joins: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net)
[04:03:32] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[04:03:55] *** Joins: hamms (~hams@c-73-255-22-88.hsd1.tx.comcast.net)
[04:05:09] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[04:06:37] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[04:07:13] *** Quits: hams (~hams@user/hams) (Ping timeout: 256 seconds)
[04:08:55] <aphysically> okay I opened my first cpython PR \o/
[04:09:25] *** Joins: LordOfLive (~igloo@135.sub-174-206-227.myvzw.com)
[04:09:49] *** LordOfLive is now known as Guest2564
[04:10:27] *** Joins: Gerula (~Gerula@user/gerula)
[04:11:11] *** Quits: Guest2564 (~igloo@135.sub-174-206-227.myvzw.com) (Remote host closed the connection)
[04:11:23] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[04:11:38] *** Joins: maxzor (~maxzor@2a01cb04054faa00629278b78040c534.ipv6.abo.wanadoo.fr)
[04:11:59] *** Quits: maxzor (~maxzor@2a01cb04054faa00629278b78040c534.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[04:12:13] *** Joins: maxzor (~maxzor@2a01cb04054faa00629278b78040c534.ipv6.abo.wanadoo.fr)
[04:12:43] *** Joins: Wulf (~Wulf@user/wulf)
[04:13:56] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[04:15:02] *** Quits: somlis (~somlis@user/somlis) (Ping timeout: 240 seconds)
[04:16:15] *** Joins: BSaboia_ (~bsaboia@187.19.136.30)
[04:16:22] *** Quits: dgw (dgw@sopel/admin/dgw) (Read error: Connection reset by peer)
[04:17:18] *** Joins: juno__ (~junebug@2600:1700:3db0:2540:4c4c:4d99:d97c:c79c)
[04:17:37] *** Quits: junebug (~junebug@104-0-169-217.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 256 seconds)
[04:18:18] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 250 seconds)
[04:18:47] <SnoopJ> aphysically, woohoo :)
[04:19:00] *** Joins: somlis (~somlis@user/somlis)
[04:19:08] *** Joins: kaiseisei (~Thunderbi@183.191.221.65)
[04:19:22] <aphysically> now I'm addrssing my first review comments :sweating:
[04:21:07] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:21:21] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[04:21:52] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:23:02] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[04:23:31] *** Quits: abbc1022 (~abbc1022@154.16.168.187) (Remote host closed the connection)
[04:26:39] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:27:02] *** Quits: grimvar (~grimvar@i5C75F55F.versanet.de) (Ping timeout: 240 seconds)
[04:27:57] *** Quits: e2m4n (~ezman@user/e2m4n) (Ping timeout: 240 seconds)
[04:29:04] *** Joins: grimvar (~grimvar@i5C75F74C.versanet.de)
[04:29:45] *** Joins: mat001 (~mat001@213.143.69.121)
[04:30:01] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[04:30:30] *** Joins: silverdeer (~silverdee@66-90-137-4.dyn.grandenetworks.net)
[04:30:40] *** Joins: NeckRomancer (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[04:30:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[04:31:13] *** Quits: LiftLeft (~LiftLeft@fixed-138-186-31-170.totalplay.net) (Ping timeout: 256 seconds)
[04:31:41] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[04:32:01] *** Joins: Yuzu02 (~Yuzu02@152.166.145.68)
[04:32:04] *** Joins: Viewday11 (~Viewday@user/viewday)
[04:32:21] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[04:32:23] *** Joins: Bkid (~Bkid@user/bkid)
[04:33:33] *** Joins: jonthesnow (~xizhendu@36.112.179.225)
[04:33:54] *** Quits: mat001 (~mat001@213.143.69.121) (Ping timeout: 250 seconds)
[04:34:38] *** Quits: stdout (~stdout@2605:ab80:b000:7202:3e12:af82:936c:2ff6) (Quit: Leaving)
[04:34:52] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:35:32] *** Joins: death916 (~death916@c-71-193-50-233.hsd1.ca.comcast.net)
[04:37:46] *** Quits: sokan (~sokan@85.73.227.185) (Read error: Connection reset by peer)
[04:37:51] *** Joins: sokan_ (~sokan@2a02:587:9e07:5300:227:eff:fe16:865d)
[04:38:15] *** sokan_ is now known as sokan
[04:38:24] *** Parts: agireud (~agireud@2605:a601:ab06:c700:211:32ff:fe32:e15f) ()
[04:39:32] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[04:40:09] *** Quits: akk (~akk@75-161-95-245.albq.qwest.net) (Quit: +++)
[04:41:47] *** Quits: Yuzu02 (~Yuzu02@152.166.145.68) (Ping timeout: 256 seconds)
[04:41:57] *** Quits: NeckRomancer (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 240 seconds)
[04:44:06] *** Quits: juno__ (~junebug@2600:1700:3db0:2540:4c4c:4d99:d97c:c79c) (Quit: Leaving)
[04:45:02] *** Quits: Schrostfutz (~Schrostfu@55d4f092.access.ecotel.net) (Ping timeout: 268 seconds)
[04:45:36] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 250 seconds)
[04:46:02] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:46:20] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[04:47:01] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[04:47:10] <jero98772> hello i need somthing to tech python? like psf licence
[04:47:11] <jero98772> ???
[04:47:27] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[04:49:37] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[04:50:00] *** Quits: XV8 (~XV8@2601:5cb:c001:50:d0cb:b834:298c:b12d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:50:00] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[04:50:11] *** Quits: LimeOn (~user@user/limeon) (Quit: .)
[04:50:13] *** Joins: dgw (dgw@sopel/admin/dgw)
[04:50:23] *** Joins: NeckRomancer (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[04:50:33] *** Quits: Z-cat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[04:51:13] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[04:52:23] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[04:52:40] *** Joins: thevar1able (~textual@46.39.45.122)
[04:54:30] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:55:08] *** Quits: hemstock (~hemstock@68.71.244.6) (Remote host closed the connection)
[04:55:37] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 240 seconds)
[04:55:51] *** Joins: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net)
[04:57:28] <bjs> jero98772: no,  Python is freely available for anyone to use in pretty much any way
[04:58:05] *** Joins: BurgerW (~BurgerW@222.244.94.224)
[04:58:13] *** Quits: SuperLag (~akulbe@user/superlag) (Ping timeout: 256 seconds)
[04:58:49] *** Joins: rama (~rama@2601:642:4c05:2002:5862:64ba:b3f1:9899)
[04:58:58] <jero98772> bj,thanks
[04:59:06] <bjs> https://docs.python.org/3/license.html#terms-and-conditions-for-accessing-or-otherwise-using-python is the actual license
[04:59:43] *** Quits: debayer948 (~debayer@76.82.226.116) (Remote host closed the connection)
[04:59:46] *** Joins: SuperLag (~akulbe@user/superlag)
[05:00:09] <aphysically> and now guido commented on it O__O
[05:00:19] *** Joins: debayer948 (~debayer@76.82.226.116)
[05:00:22] <bjs> aphysically: he is a core dev, and is very into the typing stuff at the moment
[05:00:29] <bjs> so it's not surprising :)
[05:00:35] <SnoopJ> I hear that he's pretty invested in Python
[05:02:25] *** Quits: silverdeer (~silverdee@66-90-137-4.dyn.grandenetworks.net) ()
[05:02:51] <perrierjouet> hi all
[05:03:01] *** Joins: damonlynch (~ngaio@static-68-235-44-30.cust.tzulo.com)
[05:03:47] <perrierjouet> anyone here uses voidlinux ? I am trying to install emacs-application-framework, ./install-eaf.py ... please look dependencie.json http://ix.io/3NqW
[05:03:48] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 250 seconds)
[05:04:31] *** justache is now known as justGhost
[05:05:35] <bjs> jero98772: as you can see the license is basically "Anyone can take, share, break, test, use, (re)distribute, or make things using Python"  and says that Python is as it comes, and there's no other relationship between you and the PSF. Pretty much a "it's yours, do what you want, don't claim you invented it, don't come complain at the PSF if you hurt yourself" :)
[05:05:53] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:07:29] *** Quits: tristan_ (~tristan@223.62.173.49) (Ping timeout: 256 seconds)
[05:07:49] <jero98772> if i am member of psf i can teach as psf?
[05:08:07] <jero98772> ?
[05:09:05] <bjs> jero98772: you do not need to do anything or be part of anything in order to teach people Python
[05:09:11] <nedbat> jero98772: you can teach python. i don't know what it means to "teach as psf"
[05:09:26] *** Quits: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[05:09:26] <jero98772> ok
[05:09:29] <matsaman> https://www.python.org/psf/membership/
[05:09:31] <bjs> jero98772: the PSF own Python,  but they say you can use it however you want without asking them or being a part of them.
[05:10:18] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[05:10:23] *** Joins: XV8 (~XV8@2601:5cb:c001:50:d0cb:b834:298c:b12d)
[05:11:03] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:11:08] <bjs> So you can take Python and its documentation,  change it, make a course and teach people Python and give them copies of everything and that's all fine legally as the PSF explicitly gives you a license to do so when you downloaded Python, which is nice of them :)
[05:11:08] *** Joins: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net)
[05:11:47] <bjs> So yes you need a license, but you already have one (we all do!)
[05:11:55] <matsaman> well, they license _cpython_
[05:12:20] *** Quits: doric (~doric@24.210.188.186) (Quit: Quit)
[05:12:31] <jero98772> the licence is the mebership?
[05:12:48] <jero98772> sorry my english is not good
[05:13:13] <matsaman> jero98772: you don't have to worry about it
[05:13:23] <bjs> jero98772: you do not have to do anything.
[05:13:28] <bjs> You can do what you want :)
[05:13:46] <jero98772> ok thanks
[05:14:43] *** Quits: pepper (~pepper@user/pepper) (Remote host closed the connection)
[05:14:52] *** Joins: roxfan (~roxfan@185.206-129-109.adsl-dyn.isp.belgacom.be)
[05:15:15] *** Quits: roxfan2 (~roxfan@185.206-129-109.adsl-dyn.isp.belgacom.be) (Ping timeout: 268 seconds)
[05:15:17] *** Joins: M3troidman (~quassel@196.196.203.100)
[05:16:51] <TML> jero98772: If you want to claim your trainings are FROM the PSF when publishing your trainings, I'm not sure your membership dues give you that right
[05:17:27] *** Quits: BSaboia_ (~bsaboia@187.19.136.30) (Quit: This computer has gone to sleep)
[05:17:28] <bjs> matsaman: sure, and things like pypy have a totally separate license (for the language at least) because it's not a "derivative" version of cpython so the license there doesn't apply.  I'm not a lawyer but I assume pypy has to be careful wrt the usual PSF copyrights and trademarks and stuff
[05:17:32] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[05:17:42] <matsaman> bjs: I imagine so
[05:17:43] <bjs> although I don't think there's any actual protected IP wrt Python-the-language (?)
[05:17:51] <matsaman> they have a good relationship I believe so it's probably easy
[05:17:58] <matsaman> bjs: logo, name, I would think
[05:17:59] <matsaman> at least
[05:18:02] *** Quits: dgw (dgw@sopel/admin/dgw) (Ping timeout: 240 seconds)
[05:18:11] <matsaman> admittedly not much
[05:18:13] *** Joins: BSaboia_ (~bsaboia@187.19.136.30)
[05:18:31] <nedbat> the logo and name are protected
[05:18:34] <matsaman> https://www.python.org/psf/trademarks/
[05:18:35] <bjs> Sure those come under trademarks which I assume the PSF owns
[05:18:48] *** Joins: et_ (~et@user/et)
[05:18:58] <bjs> but the actual language is not a trademark, nor is it copyrightable. I don't believe there's any patents so it's not protected, I could copy/paste the grammar (but not the .grammar file :P) and make bjslang
[05:19:13] <matsaman> yeah I doubt they've attempted that
[05:19:17] <matsaman> or ever would
[05:19:25] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[05:19:34] *** Quits: et (~et@user/et) (Ping timeout: 268 seconds)
[05:19:47] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[05:20:14] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:21:02] *** Quits: NeckRomancer (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 240 seconds)
[05:21:32] *** Joins: pepper (~pepper@user/pepper)
[05:21:58] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:22:22] *** Quits: rama (~rama@2601:642:4c05:2002:5862:64ba:b3f1:9899) (Remote host closed the connection)
[05:22:42] *** Joins: et (~et@user/et)
[05:22:48] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-f48f-4d49-0721-5b04.res6.spectrum.com) (Read error: Connection reset by peer)
[05:23:09] *** Joins: frost (~frost@user/frost)
[05:23:21] *** Joins: lispy (~lispy4@84.69.59.93)
[05:23:50] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[05:23:55] *** Quits: et_ (~et@user/et) (Ping timeout: 256 seconds)
[05:24:29] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[05:25:02] *** Quits: emerent (~quassel@p200300cd57044325ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[05:25:32] *** Joins: emerent (~quassel@p200300cd57044376ba27ebfffed28a59.dip0.t-ipconnect.de)
[05:27:35] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-37-70-24-250-33.dsl.bell.ca) (Ping timeout: 268 seconds)
[05:27:45] *** Joins: rama (~rama@2601:642:4c05:2002:cc9d:e109:877d:6c57)
[05:28:00] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[05:28:11] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[05:28:11] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[05:28:20] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:29:27] *** Quits: Milijus (~Milijus@2601:580:4500:1305:e6e7:49ff:fe47:5310) (Remote host closed the connection)
[05:30:22] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:32] *** Quits: maxzor (~maxzor@2a01cb04054faa00629278b78040c534.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[05:31:17] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[05:31:21] *** Joins: Milijus (~Milijus@2601:580:4500:1305:e6e7:49ff:fe47:5310)
[05:31:48] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:31:53] *** Joins: kaivai (~kaivai@user/kaivai)
[05:32:31] *** Joins: audiobirb (~audio@user/audio)
[05:32:40] *** Joins: vlm (~vlm@user/vlm)
[05:33:06] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[05:33:13] *** Joins: akimbo533 (~akimbo@customer-145-40-27-9.stosn.net)
[05:33:21] *** Quits: kijix\ (~shinomori@c-73-143-164-176.hsd1.ct.comcast.net) (Ping timeout: 256 seconds)
[05:34:02] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-139.dsl.bell.ca)
[05:34:03] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[05:34:07] *** Quits: akimbo53 (~akimbo@customer-145-40-27-9.stosn.net) (Ping timeout: 250 seconds)
[05:34:16] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[05:34:28] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[05:36:00] *** Quits: chgtg (~chg@116.3.20.151) (Quit: Lost terminal)
[05:37:20] *** Joins: pieguy128_ (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-188.dsl.bell.ca)
[05:37:37] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[05:38:12] *** Quits: rama (~rama@2601:642:4c05:2002:cc9d:e109:877d:6c57) (Remote host closed the connection)
[05:38:28] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-139.dsl.bell.ca) (Ping timeout: 250 seconds)
[05:38:39] *** Quits: EsoAlgo (~EsoAlgo@152.70.142.52) (Ping timeout: 256 seconds)
[05:39:05] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[05:39:25] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[05:41:45] *** Quits: BSaboia_ (~bsaboia@187.19.136.30) (Quit: This computer has gone to sleep)
[05:42:52] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[05:43:17] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 240 seconds)
[05:45:35] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[05:46:02] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 240 seconds)
[05:46:58] *** Joins: Celeo (~Celeo@user/celeo)
[05:48:41] *** Joins: KnowledgeShark (~Knowledge@50.34.221.249)
[05:49:07] *** Quits: lrngystdlted^ (~lrngystdl@50-207-160-170-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[05:51:08] <koopman> Hi all, anyone know how to get this script looking inside sub directories and creating those sub directories in the PUT location?? Https://bpa.st/QllQ
[05:51:38] <koopman> Sorry https://bpa.st/QIIQ
[05:51:41] *** Quits: eXtr3m0 (~eXtr3m0@user/eXtr3m0) (Ping timeout: 256 seconds)
[05:51:44] *** Joins: NeckRomancer (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[05:52:13] *** Quits: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[05:52:37] *** Quits: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[05:53:06] *** Joins: eXtr3m0 (~eXtr3m0@user/eXtr3m0)
[05:53:37] *** Joins: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net)
[05:54:32] *** Joins: mrgz_ (~mrgz@201-42-0-191.dsl.telesp.net.br)
[05:54:43] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[05:54:53] *** Quits: mrgz_ (~mrgz@201-42-0-191.dsl.telesp.net.br) (Client Quit)
[05:54:55] *** Joins: rama (~rama@2601:642:4c05:2002:f147:5e42:aee3:14b)
[05:56:01] *** Joins: agireud (~agireud@2605:a601:ab06:c700:211:32ff:fe32:e15f)
[05:56:35] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 256 seconds)
[05:56:51] *** Joins: dgw (dgw@sopel/admin/dgw)
[05:57:42] *** Parts: agireud (~agireud@2605:a601:ab06:c700:211:32ff:fe32:e15f) ()
[05:58:17] *** Quits: qpdb (~qpdb@user/qpdb) (Ping timeout: 256 seconds)
[05:59:33] *** Joins: newpy_ (~newpy@2601:280:4381:1390:d1cc:33c8:2738:2c5b)
[05:59:54] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[06:00:47] *** Joins: agireud (~agireud@2605:a601:ab06:c700:211:32ff:fe32:e15f)
[06:01:27] *** Joins: llh (~llh@user/llh)
[06:01:49] *** Quits: agireud (~agireud@2605:a601:ab06:c700:211:32ff:fe32:e15f) (Changing host)
[06:01:49] *** Joins: agireud (~agireud@user/agireud)
[06:01:53] *** Quits: KombuchaKip (~kip@192.252.230.5) (Ping timeout: 256 seconds)
[06:02:18] *** Quits: jonthesnow (~xizhendu@36.112.179.225) (Ping timeout: 250 seconds)
[06:02:37] *** Quits: newpy (~newpy@2601:280:4381:1390:11aa:9b69:7802:937a) (Ping timeout: 240 seconds)
[06:02:37] *** Quits: peteyboy1 (~peteyboy1@95.169.226.66) (Ping timeout: 240 seconds)
[06:03:36] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[06:03:36] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[06:05:14] *** Quits: bryce (~bryce@ool-457dd6ac.dyn.optonline.net) (Remote host closed the connection)
[06:05:29] *** Quits: rama (~rama@2601:642:4c05:2002:f147:5e42:aee3:14b) (Remote host closed the connection)
[06:05:30] *** Joins: bryce (~bryce@ool-457dd6ac.dyn.optonline.net)
[06:07:20] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[06:08:17] *** Joins: sertsa (~sertsa@209.140.9.178)
[06:08:48] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 250 seconds)
[06:09:23] *** Quits: sertsa (~sertsa@209.140.9.178) (Client Quit)
[06:10:44] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[06:10:59] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[06:11:09] *** Quits: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[06:11:22] *** Joins: qpdb (~qpdb@user/qpdb)
[06:12:32] *** Joins: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net)
[06:12:36] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 268 seconds)
[06:12:49] *** Joins: luc14n0[m] (~luc14n0ma@2001:470:69fc:105::1:304c)
[06:13:10] *** Quits: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net) (Client Quit)
[06:13:54] *** Joins: qlixed (~qlixed@181.44.129.13)
[06:18:08] *** Joins: rama (~rama@2601:642:4c05:2002:515a:f59d:f6fd:6f48)
[06:19:11] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[06:19:38] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:20:01] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[06:20:42] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[06:21:18] *** Quits: tessler (~user@user/tessler) (Quit: ERC (IRC client for Emacs 27.2))
[06:21:31] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[06:21:44] *** Joins: Guest1778 (~Guest1778@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[06:22:04] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[06:22:49] <Guest1778> Hello, how do I install a package in Anaconda? I want to install this: https://phaseportrait.github.io/installation/ but I tried 'pip install phaseportrait', but when I tried some code it couldn't actually find that package
[06:22:57] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 240 seconds)
[06:23:30] *** Quits: kmh (~kmh@2a00:6020:5004:6800:475f:3070:8999:b946) (Quit: Leaving)
[06:25:59] *** Joins: califax- (~califax@user/califx)
[06:26:08] *** Joins: thevar1able (~textual@46.39.45.122)
[06:26:08] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:26:26] *** Quits: rama (~rama@2601:642:4c05:2002:515a:f59d:f6fd:6f48) (Remote host closed the connection)
[06:27:09] *** Joins: rama (~rama@2601:642:4c05:2002:1dfe:714f:7ab3:2db3)
[06:28:23] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:28:45] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:28:46] *** Quits: death916 (~death916@c-71-193-50-233.hsd1.ca.comcast.net) (Changing host)
[06:28:46] *** Joins: death916 (~death916@user/death916)
[06:29:17] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 240 seconds)
[06:29:17] *** brabrax_ is now known as brabrax
[06:29:20] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:29:30] *** Joins: d1cor (~diego@179.63.242.120)
[06:29:32] *** Joins: Lunatrius` (~Lunatrius@77.38.76.5)
[06:29:37] *** Quits: Lunatrius (~Lunatrius@77.38.76.5) (Ping timeout: 240 seconds)
[06:29:47] *** Lunatrius` is now known as Lunatrius
[06:30:33] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[06:30:34] *** califax- is now known as califax
[06:30:40] *** Joins: RiFo (~RiFo@user/rifo)
[06:31:58] *** Joins: jazzy2 (~jaziz@user/jaziz)
[06:32:19] <CoolerX> Guest1778, conda install package
[06:32:38] *** Quits: SuperLag (~akulbe@user/superlag) (Ping timeout: 250 seconds)
[06:32:44] *** Joins: kmh (~kmh@2a00:6020:5004:6800:94b4:4b15:429c:7c05)
[06:32:51] <CoolerX> if you search for conda <package name> on Google it also gives you the install command https://anaconda.org/anaconda/tensorflow-gpu
[06:32:59] <CoolerX> conda install -c anaconda tensorflow-gpu
[06:33:08] <Guest1778> I tried that, but that didn't work
[06:33:19] <CoolerX> what didn't?
[06:33:25] <CoolerX> what was the exact command?
[06:33:53] <Guest1778> conda install phaseportrait
[06:34:11] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[06:34:35] <CoolerX> that's probably because that package isn't available in conda repos
[06:34:42] <CoolerX> at least not in the official conda repos
[06:34:43] *** Joins: SuperLag (~akulbe@user/superlag)
[06:35:00] <Guest1778> So does that mean i'm screwed?
[06:35:05] <CoolerX> Guest1778, pip install will also work as long as you have the conda environment active
[06:35:16] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Remote host closed the connection)
[06:35:44] <CoolerX> https://docs.conda.io/projects/conda/en/4.6.0/_downloads/52a95608c49671267e40c689e0bc00ca/conda-cheatsheet.pdf
[06:35:48] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:36:06] <CoolerX> They mention pip in the cheatsheet
[06:36:22] <CoolerX> Guest1778, did you activate the conda environment?
[06:36:38] <Guest1778> I had ran the pip install command within one of my conda environments
[06:36:46] *** Quits: parv (~quass@user/parv) (Quit: parv)
[06:37:36] <CoolerX> Guest1778, you can do conda list
[06:37:42] <CoolerX> to see all the installed packages
[06:37:47] *** Quits: oakridge (~oakridge@user/oakridge) (Quit: ZNC 1.7.5 - https://znc.in)
[06:38:09] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[06:38:22] <CoolerX> conda activate <environment name> to activate that environment
[06:38:36] *** Joins: oakridge (~oakridge@user/oakridge)
[06:38:45] <Guest1778> https://i.imgur.com/dB1lloD.png
[06:38:52] <Guest1778> It is indeed there
[06:39:21] <Guest1778> This is what I tried regarding the code: https://i.imgur.com/uIJpe7J.png
[06:40:27] <CoolerX> Guest1778, your import is wrong
[06:40:27] <CoolerX> https://phaseportrait.github.io/phaseportrait2d_examples/
[06:40:31] <CoolerX> from phaseportrait import PhasePortrait2D
[06:40:38] <CoolerX> the module is phaseportrait
[06:40:52] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 250 seconds)
[06:41:09] <CoolerX> PhasePortrait2D is a class inside the module
[06:41:37] *** Quits: NeckRomancer (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 240 seconds)
[06:42:02] <Guest1778> hm, I had tried that but encountered a larger error. Then I suppose this big error i'm getting is from something else
[06:42:56] *** Joins: millido (~millido@84.210.150.128)
[06:42:58] <CoolerX> what was the error?
[06:43:58] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Read error: Connection reset by peer)
[06:44:02] <Guest1778> https://pastebin.com/kvCsWGiJ googling now
[06:45:36] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:45:36] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:45:36] *** finn_elija is now known as FinnElija
[06:45:43] *** Joins: Barones (~Barones@user/Barones)
[06:47:45] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[06:49:18] *** Joins: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net)
[06:49:32] <CoolerX> Guest1778, it seems the phaseportrait library uses some other library  Please install mkl-service package, see http://github.com/IntelPython/mkl-service
[06:49:39] <CoolerX> if you read the error
[06:49:45] <Guest1778> I did and already had it
[06:49:46] <CoolerX> https://github.com/IntelPython/mkl-service
[06:49:49] <CoolerX> hmm
[06:50:04] <CoolerX> did you conda install -c intel mkl-service
[06:50:05] <CoolerX> ?
[06:51:20] *** Quits: debayer948 (~debayer@76.82.226.116) (Read error: Connection reset by peer)
[06:52:30] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[06:52:35] <Guest1778> Either that did it or the numpy package upgrade I did prior to reading your comment
[06:52:43] *** Joins: NeckRomancer (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[06:52:48] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:53:00] <Guest1778> Thank you for your help and discussion.
[06:53:27] *** Quits: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net) (Client Quit)
[06:55:24] *** Quits: ExpiredKebab (~sgreadly@121.74.198.218) (Quit: Textual IRC Client: www.textualapp.com)
[06:56:32] *** Quits: dre (~dre@2001:8003:c932:c301:d3ad:30f8:46d3:c284) (Ping timeout: 240 seconds)
[06:57:36] *** Parts: agireud (~agireud@user/agireud) ()
[06:57:39] *** Joins: tristan_ (~tristan@223.38.21.38)
[06:57:53] *** Quits: onichomp (~onichomp@2806:264:4408:cc:208e:548f:ce69:df1a) (Read error: Connection reset by peer)
[06:58:31] *** Joins: onichomp (~onichomp@2806:264:4408:cc:208e:548f:ce69:df1a)
[07:00:02] *** queue is now known as queue-
[07:00:13] *** Quits: queue- (~nerd@rektnet.com) (Changing host)
[07:00:13] *** Joins: queue- (~nerd@user/queue/x-7267619)
[07:00:48] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:46bc:5a09:3555:50f4)
[07:01:42] *** Quits: rama (~rama@2601:642:4c05:2002:1dfe:714f:7ab3:2db3) (Quit: Leaving...)
[07:01:57] *** Quits: Shikadi (~Shikadi@50.125.190.237) (Ping timeout: 256 seconds)
[07:02:06] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[07:02:06] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 250 seconds)
[07:03:41] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[07:04:53] *** Joins: shiroininja (~Shiroinin@c-73-99-87-221.hsd1.va.comcast.net)
[07:05:57] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[07:10:29] *** Joins: adeliktas4 (~adeliktas@i59F4D5EA.versanet.de)
[07:10:37] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[07:12:09] *** Quits: adeliktas (~adeliktas@i59F5FF62.versanet.de) (Ping timeout: 256 seconds)
[07:12:09] *** adeliktas4 is now known as adeliktas
[07:12:46] *** Joins: BSaboia_ (~bsaboia@187.19.136.30)
[07:13:45] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[07:14:26] *** Quits: onichomp (~onichomp@2806:264:4408:cc:208e:548f:ce69:df1a) (Read error: Connection reset by peer)
[07:15:05] *** Joins: onichomp (~onichomp@2806:264:4408:cc:208e:548f:ce69:df1a)
[07:15:29] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:15:31] *** Quits: onichomp (~onichomp@2806:264:4408:cc:208e:548f:ce69:df1a) (Read error: Connection reset by peer)
[07:15:32] *** Quits: BurgerW (~BurgerW@222.244.94.224) (Ping timeout: 250 seconds)
[07:16:07] *** Joins: onichomp (~onichomp@2806:264:4408:cc:208e:548f:ce69:df1a)
[07:16:48] *** Joins: roxfan2 (~roxfan@185.206-129-109.adsl-dyn.isp.belgacom.be)
[07:16:57] *** Quits: BSaboia_ (~bsaboia@187.19.136.30) (Ping timeout: 240 seconds)
[07:17:22] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[07:17:24] *** Quits: onichomp (~onichomp@2806:264:4408:cc:208e:548f:ce69:df1a) (Read error: Connection reset by peer)
[07:17:57] *** Quits: roxfan (~roxfan@185.206-129-109.adsl-dyn.isp.belgacom.be) (Ping timeout: 240 seconds)
[07:18:01] *** Joins: onichomp (~onichomp@2806:264:4408:cc:208e:548f:ce69:df1a)
[07:18:45] <CoolerX> Guest1778, np
[07:18:50] *** Parts: CoolerX (~CoolerX@user/coolerx) (Leaving)
[07:19:58] *** Joins: esv (~esv@74.124.178.154)
[07:20:05] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:20:37] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[07:21:36] *** Quits: d1cor (~diego@179.63.242.120) (Ping timeout: 250 seconds)
[07:22:17] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[07:23:40] *** Joins: agireud (~agireud@user/agireud)
[07:25:24] *** Quits: shiroininja (~Shiroinin@c-73-99-87-221.hsd1.va.comcast.net) (Quit: WeeChat 2.8)
[07:25:30] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:25:42] *** Joins: jonthesnow (~xizhendu@36.112.179.225)
[07:26:57] *** Quits: tristan_ (~tristan@223.38.21.38) (Ping timeout: 240 seconds)
[07:27:28] <M-avdol-[m]> ??
[07:28:23] *** Quits: onichomp (~onichomp@2806:264:4408:cc:208e:548f:ce69:df1a) (Read error: Connection reset by peer)
[07:28:29] *** Joins: BurgerW (~BurgerW@222.244.94.224)
[07:28:35] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[07:28:42] *** Joins: greknod2824 (~grek@120.88.171.98)
[07:29:01] *** Joins: onichomp (~onichomp@2806:264:4408:cc:208e:548f:ce69:df1a)
[07:29:02] *** Quits: greknod282 (~grek@120.88.171.98) (Ping timeout: 240 seconds)
[07:29:02] *** greknod2824 is now known as greknod282
[07:30:08] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:30:53] *** Quits: onichomp (~onichomp@2806:264:4408:cc:208e:548f:ce69:df1a) (Read error: Connection reset by peer)
[07:31:30] *** Joins: onichomp (~onichomp@2806:264:4408:cc:208e:548f:ce69:df1a)
[07:31:38] *** Quits: onichomp (~onichomp@2806:264:4408:cc:208e:548f:ce69:df1a) (Remote host closed the connection)
[07:32:24] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:33:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:46] *** Quits: user3456 (user3456@user/user3456) (Ping timeout: 250 seconds)
[07:37:01] *** Joins: user3456 (user3456@user/user3456)
[07:38:04] *** Quits: moog (~moog@107.126.53.225) (Remote host closed the connection)
[07:39:18] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[07:40:53] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:42:45] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 256 seconds)
[07:43:05] *** Joins: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net)
[07:43:53] *** Quits: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net) (Client Quit)
[07:43:56] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:68c6:1034:8cf9:5a2d)
[07:44:45] *** Joins: qlixed (~qlixed@181.44.129.13)
[07:44:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[07:45:00] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:48:25] *** Joins: han-solo (~hanish@user/han-solo)
[07:50:52] *** Joins: tristan_ (~tristan@223.62.175.50)
[07:51:05] *** Joins: justm33 (~Username@82-171-85-246.fixed.kpn.net)
[07:51:35] *** Quits: Bakunin (~maplefing@user/lindis) (Remote host closed the connection)
[07:53:19] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:53:40] *** Quits: justm33_ (~Username@82-171-85-246.fixed.kpn.net) (Ping timeout: 250 seconds)
[07:55:17] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:57:57] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[07:59:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[08:02:33] *** Parts: agireud (~agireud@user/agireud) ()
[08:03:09] *** Quits: tristan_ (~tristan@223.62.175.50) (Ping timeout: 256 seconds)
[08:04:32] *** Quits: sreve (~quassel@p549d706a.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[08:04:54] *** Joins: sreve (~quassel@p4ff44f5c.dip0.t-ipconnect.de)
[08:09:00] *** Joins: Alabama[m] (~ingfix-2m@wikipedia/-Alabama-)
[08:09:16] *** Quits: BurgerW (~BurgerW@222.244.94.224) (Ping timeout: 250 seconds)
[08:10:00] *** Quits: bitblit_ (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 276 seconds)
[08:10:35] *** Joins: agireud (~agireud@user/agireud)
[08:10:37] *** Joins: bitblit_ (~bitblit@gateway/tor-sasl/bitblit)
[08:10:43] *** Joins: dre (~dre@2001:8004:4410:f280:3c1f:c841:18ca:3236)
[08:11:19] *** Joins: Yuzu02 (~Yuzu02@152.166.145.68)
[08:12:36] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:14:11] <Guest1778> For python packages such as https://github.com/phaseportrait/phaseportrait/tree/master/docs how do I understand how the package works? For example, in https://github.com/phaseportrait/phaseportrait/blob/master/docs/nullclines.md just writes instructions on how to use this module. But how is it written?
[08:15:23] <SnoopJ> Guest1778, are you asking how the library is put together, or how to use the library?
[08:15:46] <Guest1778> how the library is put together. Generally, I do not know how python libraries work
[08:16:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[08:17:45] <SnoopJ> that repository isn't really a package you can install, just a pile of Python. Most projects have a file (pyproject.toml and/or setup.cfg/setup.py) that defines the project's metadata and makes it installable.
[08:18:11] *** Joins: tristan_ (~tristan@223.62.175.50)
[08:18:15] <SnoopJ> But any library is going to generally be something you make importable (usually by installing, sometimes by other more evil means), then you import it and use the API it provides.
[08:18:25] *** Joins: bytehackr (~Sandipan@43.252.250.126)
[08:18:40] <Guest1778> so how do I view that pile of python?
[08:19:10] <BrenBarn> you can look at all the .py files in the repo
[08:19:15] <Guest1778> for example, there is items I want to add to the library.
[08:19:44] *** Joins: crashrep (~crashrep@user/crashrep)
[08:19:45] *** Quits: dre (~dre@2001:8004:4410:f280:3c1f:c841:18ca:3236) (Read error: Connection reset by peer)
[08:20:07] <Guest1778> oh, I see the python files
[08:20:23] <Guest1778> agh, code is so confusing
[08:20:30] *** Quits: bytehackr (~Sandipan@43.252.250.126) (Client Quit)
[08:20:32] <SnoopJ> Confusingly, that library *does* have an installable version of itself on PyPI, but the metadata is not in the repository 😕
[08:21:11] <SnoopJ> I guess one of the maintainers built the .whl on their machine using such a file, but never committed it.
[08:21:25] <Guest1778> I don't know what that means
[08:21:39] *** Quits: Yuzu02 (~Yuzu02@152.166.145.68) (Ping timeout: 256 seconds)
[08:21:53] <SnoopJ> Just that the authors were a little messy
[08:22:11] <BrenBarn> to make a package that other people can easily install, you need some extra files as part of the install mechanism
[08:22:23] <BrenBarn> and this project doesn't include such files
[08:22:37] *** Quits: lispy (~lispy4@84.69.59.93) (Quit: Leaving)
[08:23:02] <SnoopJ> At least they chose a license though :)
[08:23:05] <Guest1778> Is there a resource I can learn on to make a library myself?
[08:23:31] <SnoopJ> Yes, PyPA maintains a tutorial on packaging: https://packaging.python.org/en/latest/tutorials/packaging-projects/
[08:23:45] <SnoopJ> (and a few others)
[08:23:58] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[08:24:13] <Guest1778> Thank you. Really, I just want to write some updates to that library we have been discussing. There are some details they leave out which are kind of surprising
[08:24:36] *** Joins: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net)
[08:27:51] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:28:50] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:29:06] *** Joins: saroy (~Sandipan@43.252.250.126)
[08:30:21] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 256 seconds)
[08:30:58] *** saroy is now known as bytehackr
[08:31:17] *** Joins: hams (~hams@c-73-255-22-88.hsd1.tx.comcast.net)
[08:31:17] *** Quits: hams (~hams@c-73-255-22-88.hsd1.tx.comcast.net) (Changing host)
[08:31:17] *** Joins: hams (~hams@user/hams)
[08:32:14] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[08:32:53] *** M-avdol-[m] is now known as Avdol[m]
[08:33:32] *** Quits: hamms (~hams@c-73-255-22-88.hsd1.tx.comcast.net) (Ping timeout: 240 seconds)
[08:33:33] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[08:33:43] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Read error: Connection reset by peer)
[08:34:17] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[08:36:08] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 250 seconds)
[08:36:56] *** Quits: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[08:38:06] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:38:29] *** Joins: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net)
[08:38:44] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[08:41:53] *** Joins: bluedust (~bluedust@103.165.167.99)
[08:42:12] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 250 seconds)
[08:42:28] *** Joins: maxzor_ (~maxzor@2a01cb04054faa0015f8d6e9a964c458.ipv6.abo.wanadoo.fr)
[08:43:04] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[08:43:27] *** Quits: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[08:43:47] *** Joins: cyphase (~cyphase@user/cyphase)
[08:44:02] *** Quits: viaSanctus (~viaSanctu@user/viasanctus) (Quit: Connection closed)
[08:44:14] *** Quits: nomic (~nomic@185.192.69.41) (Quit: Leaving)
[08:44:17] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 240 seconds)
[08:44:37] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 240 seconds)
[08:45:44] *** Quits: subopt (~subopt@2603-8081-2302-459a-5184-ddff-db65-ecba.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:45:52] <aphysically> bjs: yeah, and he's a code owner for the typing stuff
[08:51:20] *** Joins: vanessa (~annada@103.160.128.7)
[08:53:21] *** Joins: maryo_87 (~Maryo@user/maryo)
[08:55:41] *** Quits: portalrat (~portalrat@user/portalrat) (Quit: Leaving)
[08:56:02] *** Quits: agireud (~agireud@user/agireud) (Remote host closed the connection)
[08:56:06] <aphysically> \o/ first review approval
[08:56:10] *** Joins: agireud (~agireud@user/agireud)
[08:56:11] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:57:49] *** Quits: DerpGusta (~quassel@user/derpgusta) (Ping timeout: 240 seconds)
[08:58:06] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:68c6:1034:8cf9:5a2d) (Quit: I have gone to sleep. ZZZzzz…)
[08:59:37] *** Quits: the_lanetly_052_ (~the_lanet@194.135.153.167) (Ping timeout: 256 seconds)
[08:59:38] *** Joins: DerpGusta (~quassel@user/derpgusta)
[09:00:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[09:01:27] *** Joins: Lando-SpaceIzzle (~Lando-Spa@user/lando-spacepimp)
[09:02:08] *** Joins: icy_hot (~icy_hot@99-83-35-64.lightspeed.elpstx.sbcglobal.net)
[09:02:19] *** Joins: lispy (~lispy4@84.69.59.93)
[09:04:05] *** Joins: dre (~dre@2001:8003:c932:c301:7948:9e4c:da1f:659b)
[09:04:17] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[09:04:34] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:4cb7:17e7:5dc7:6636)
[09:05:27] *** Quits: lispy (~lispy4@84.69.59.93) (Client Quit)
[09:05:35] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:4cb7:17e7:5dc7:6636) (Client Quit)
[09:05:39] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:06:03] *** Quits: ouestbillie (~gallup@185.65.135.248) (Ping timeout: 256 seconds)
[09:06:33] *** Quits: domicron (~domicron@gateway/tor-sasl/domicron) (Quit: Ping timeout (120 seconds))
[09:07:05] *** Joins: domicron (~domicron@gateway/tor-sasl/domicron)
[09:07:07] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:1b53:4019:35ec:4d0a)
[09:07:58] *** Joins: ouestbillie (~gallup@185.195.233.151)
[09:08:58] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 268 seconds)
[09:09:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[09:11:37] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Quit: leaving)
[09:15:36] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:15:40] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:15:41] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[09:16:22] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 268 seconds)
[09:17:24] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[09:18:10] *** Quits: vanessa (~annada@103.160.128.7) (Quit: WeeChat 3.4)
[09:19:18] *** Joins: roxfan (~roxfan@109.129.206.185)
[09:19:57] *** Quits: roxfan2 (~roxfan@185.206-129-109.adsl-dyn.isp.belgacom.be) (Ping timeout: 240 seconds)
[09:20:13] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[09:20:46] *** Quits: TechSmurf (~tech@user/techsmurf) (Ping timeout: 250 seconds)
[09:21:00] *** Joins: TechSmurf (~tech@user/techsmurf)
[09:24:30] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:26:09] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[09:27:14] *** Quits: Haxxa (~Haxxa@125-253-30-218.ip4.superloop.com) (Quit: Haxxa flies away.)
[09:28:43] *** Quits: NeckRomancer (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[09:28:45] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:28:57] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[09:29:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:29:50] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[09:30:18] *** Quits: roxfan (~roxfan@109.129.206.185) (Ping timeout: 250 seconds)
[09:30:45] *** Joins: NeckRomancer (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[09:30:51] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:32:16] *** Joins: Nutte35 (~Nutte@202.153.82.40)
[09:33:37] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 240 seconds)
[09:34:01] *** Joins: roxfan (~roxfan@185.206-129-109.adsl-dyn.isp.belgacom.be)
[09:34:11] <aphysically> \o/ approved and automerge label added; I think that means my commit gets merged to cpython when all the tests pass (waiting for a macos runner to become available O_O)
[09:34:43] *** Joins: audiobirb (~audio@user/audio)
[09:35:15] <jinsun> aphysically: nice, congrats
[09:35:17] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[09:35:25] <jinsun> and getting backported to 3.9 too
[09:35:28] *** Joins: analoq (~yashi@user/dies)
[09:35:31] <aphysically> yeah
[09:35:44] <aphysically> that means type checkers can be updated and everyone can benefit """tomorrow"""
[09:36:22] *** Quits: TechSmurf (~tech@user/techsmurf) (Ping timeout: 250 seconds)
[09:36:44] *** Joins: TechSmurf (~tech@user/techsmurf)
[09:38:50] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Read error: Connection reset by peer)
[09:38:58] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Ping timeout: 250 seconds)
[09:40:06] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[09:40:28] <llanhmod> Perhaps I am using `python3.10 -m pip install assertpy` incorrectly. I get this Error: https://bpa.st/EUZA.  python3.{8-9} work however. I dont understand the error message. What is it complaining about? [sorry if this is posted twice, I was lagging]
[09:41:03] <han-solo> how did you install the 3.10 ?
[09:41:10] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[09:41:43] <llanhmod> looks like with pyenv
[09:41:52] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[09:42:15] *** Joins: ano (~ano@user/ano)
[09:42:15] <han-solo> mm, i would assume they would have asked you install all deps required
[09:42:30] <llanhmod> which python3.10 returns /home/developer/.pyenv/shims/python3.10
[09:42:53] *** Quits: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp) (Ping timeout: 268 seconds)
[09:43:02] <han-solo> which OS ?
[09:43:09] <llanhmod> Ubuntu 20.04
[09:43:32] *** Joins: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp)
[09:43:35] <han-solo> `libffi-dev` is installed ?
[09:44:02] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[09:44:15] <han-solo> https://github.com/pyenv/pyenv/wiki#suggested-build-environment
[09:44:41] <llanhmod> No, it was not. Installing now
[09:46:46] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 250 seconds)
[09:47:29] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:48:04] *** Quits: tristan_ (~tristan@223.62.175.50) (Ping timeout: 250 seconds)
[09:48:39] *** Joins: nightbreak (~nightbrea@victors-mbp.dyndns.rice.edu)
[09:49:37] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 240 seconds)
[09:49:47] <jinsun> would have to rebuild python after that btw, so would be good idea to update pyenv and build 3.10.2 now
[09:50:01] <llanhmod> yeah, I see
[09:51:23] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 256 seconds)
[09:51:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[09:52:54] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[09:53:06] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[09:54:54] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:55:32] *** Quits: icy_hot (~icy_hot@99-83-35-64.lightspeed.elpstx.sbcglobal.net) (Ping timeout: 240 seconds)
[09:56:39] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[09:57:02] *** Joins: bluedust_ (~bluedust@103.165.167.52)
[09:57:17] *** Quits: Lando-SpaceIzzle (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[09:57:39] *** Joins: icy_hot (~icy_hot@99-83-35-64.lightspeed.elpstx.sbcglobal.net)
[09:57:57] *** Quits: bluedust (~bluedust@103.165.167.99) (Ping timeout: 240 seconds)
[09:59:53] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:00:19] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:00:27] *** Quits: meder (~meder@c-65-34-244-236.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[10:00:53] *** Quits: nightbreak (~nightbrea@victors-mbp.dyndns.rice.edu) (Quit: Signing off for now...)
[10:01:48] *** Quits: GNUmoon2 (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[10:02:28] *** Joins: skapata (~Skapata@user/skapata)
[10:04:58] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[10:05:14] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[10:06:37] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[10:06:37] *** Quits: user3456 (user3456@user/user3456) (Ping timeout: 240 seconds)
[10:06:56] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[10:07:58] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[10:09:03] <aphysically> \o/ my commit merged into cpython
[10:09:11] <mefistofeles> aphysically: wow, nice
[10:09:13] <mefistofeles> congrats
[10:09:30] <aphysically> now I can open issues in mypy, pyright, et al and also open a new bpo issue since dataclasses probably wants to make a similar change
[10:09:37] <aphysically> (we will see)
[10:09:43] *** Joins: user3456 (user3456@user/user3456)
[10:10:14] <mefistofeles> aphysically: what is it about? If we may know
[10:10:33] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:10:44] <aphysically> https://github.com/python/cpython/commit/e1abffca45b60729c460e3e2ad50c8c1946cfd4e
[10:11:01] <aphysically> the bpo issue has better context https://bugs.python.org/issue46491
[10:12:37] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[10:12:51] <mefistofeles> aphysically: nice
[10:14:20] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:14:56] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[10:15:15] *** Joins: manti7 (~manti7@176.10.104.94)
[10:17:01] *** Joins: txtsd (~txtsd@user/txtsd)
[10:18:16] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[10:18:21] *** Joins: m117 (~m117@136.36.33.97)
[10:18:30] <m117> hello hello
[10:19:19] <mefistofeles> hey
[10:20:14] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Remote host closed the connection)
[10:21:07] *** Parts: m117 (~m117@136.36.33.97) ()
[10:21:22] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[10:22:28] *** Joins: dreamon (~dreamon@p54b1472c.dip0.t-ipconnect.de)
[10:22:44] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 250 seconds)
[10:23:02] *** Quits: agireud (~agireud@user/agireud) (Remote host closed the connection)
[10:23:10] *** Joins: agireud (~agireud@user/agireud)
[10:26:27] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:26:36] <aphysically> mefistofeles: yeah, the tl;dr is I identified an area where there's friction between typing and other annotations that could be removed, argued for its removal, then made the patch to remove it
[10:26:45] *** Joins: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:27:00] <aphysically> (remove the friction)
[10:28:01] *** Quits: Nutte35 (~Nutte@202.153.82.40) (Read error: Connection reset by peer)
[10:28:04] <llanhmod> in python, what does it mean to "flatten a list" ?
[10:28:35] <Repiphany> Turn a nested list of lists into one flat list
[10:28:36] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[10:28:47] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 256 seconds)
[10:28:51] <Repiphany> (Not really python specific)
[10:29:15] <bparker> I assume they mean turning e.g. [[0,1], [2,3]] into [0,1,2,3]
[10:29:29] <llanhmod> Repiphany: right... not specific to python indeed.
[10:29:45] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[10:29:50] <llanhmod> hm... so some sort of extraction.
[10:30:10] <llanhmod> same can work on tuples too, right?
[10:31:22] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[10:31:32] *** Quits: bloody_ (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[10:31:56] *** Joins: skraito (~skraito@user/skraito)
[10:32:07] *** Quits: skraito (~skraito@user/skraito) (K-Lined)
[10:32:30] <llanhmod> uh huh..
[10:33:18] *** Joins: meder (~meder@c-65-34-244-236.hsd1.fl.comcast.net)
[10:34:27] *** Quits: dreamon (~dreamon@p54b1472c.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[10:34:45] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:5cfb:fe:97a7:72)
[10:35:01] *** Quits: Abrax (~Abrax@user/abrax) (Ping timeout: 256 seconds)
[10:35:29] *** Joins: dvx (~dvx@5.181.92.64)
[10:36:32] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[10:36:43] *** Joins: jpodivin (~jpodivin@cgnat44-pool3-68-154.poda.cz)
[10:38:02] *** Quits: Throgkt (~Throgkt@user/throgkt) (Read error: Connection reset by peer)
[10:38:04] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[10:39:27] <BrenBarn> it typically means to take a list with other lists inside it and remove all the nesting
[10:39:27] <BrenBarn> whoa, lag
[10:39:35] *** Joins: GNUmoon2 (~GNUmoon@gateway/tor-sasl/gnumoon)
[10:39:49] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:3593:52da:4b13:8830) (Read error: Connection reset by peer)
[10:41:37] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 256 seconds)
[10:42:06] *** Quits: bitblit_ (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 276 seconds)
[10:43:45] *** Quits: icy_hot (~icy_hot@99-83-35-64.lightspeed.elpstx.sbcglobal.net) (Quit: WeeChat 3.4)
[10:45:57] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[10:49:37] *** Quits: dgw (dgw@sopel/admin/dgw) (Ping timeout: 240 seconds)
[10:49:49] *** Quits: seednode99 (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:50:25] *** Joins: seednode99 (~seednode@user/seednode)
[10:52:30] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:5cfb:fe:97a7:72) (Quit: Client closed)
[10:52:54] *** Joins: dgw (dgw@sopel/admin/dgw)
[10:53:16] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[10:55:16] *** Joins: bitblit_ (~bitblit@gateway/tor-sasl/bitblit)
[10:55:17] *** Joins: xx (~xx@user/xx)
[10:59:17] *** Quits: NeckRomancer (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 240 seconds)
[10:59:33] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:59:40] *** Joins: jmd (~user@de.cellform.com)
[10:59:59] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[11:00:04] *** Joins: mrwick (~mrwick@user/mrwick)
[11:02:42] *** Joins: maryo87 (~Maryo@user/maryo)
[11:04:18] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[11:04:33] *** Joins: menace (~someone@ppp-93-104-186-58.dynamic.mnet-online.de)
[11:04:46] *** Quits: menace (~someone@ppp-93-104-186-58.dynamic.mnet-online.de) (Changing host)
[11:04:46] *** Joins: menace (~someone@user/menace)
[11:04:50] *** menace is now known as Deknos
[11:04:58] *** Joins: jmd (~user@de.cellform.com)
[11:05:27] *** Joins: emx (~emx@adsl-84-226-68-198.adslplus.ch)
[11:05:43] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[11:06:11] *** Quits: maryo_87 (~Maryo@user/maryo) (Ping timeout: 256 seconds)
[11:06:31] *** Quits: nicoz (unixlab@ubuntu/member/nicoz) (Read error: Connection reset by peer)
[11:06:40] *** Joins: jmd (~user@de.cellform.com)
[11:06:59] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[11:07:11] *** Joins: lxwulf (~lxwulf@user/lxwulf)
[11:07:23] *** Quits: peterandre (peterandre@2605:6400:c847:1524::4251) (Read error: Connection reset by peer)
[11:07:27] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[11:07:30] *** Joins: NeckRomancer (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[11:07:48] *** Joins: kosh (~kosh@user/kosh)
[11:07:59] <aphysically> okay now I (finally) have a reason to set up pyenv; I need to test the typing_extensions backports of the changes I made :P
[11:08:27] *** Quits: meder (~meder@c-65-34-244-236.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[11:08:40] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[11:09:08] *** Joins: jmd (~user@de.cellform.com)
[11:09:17] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[11:09:23] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[11:09:42] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[11:09:42] *** Quits: lxwulf (~lxwulf@user/lxwulf) (Client Quit)
[11:10:17] *** Joins: cewood (~cewood@ip5b417897.dynamic.kabel-deutschland.de)
[11:10:32] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[11:11:17] *** Joins: BurgerW (~BurgerW@222.244.94.224)
[11:12:19] *** Joins: han-solo (~hanish@user/han-solo)
[11:12:57] *** Joins: luigibu (~luigi@225.red-79-159-194.dynamicip.rima-tde.net)
[11:14:26] *** Joins: upsala (~zcb@185.209.196.169)
[11:15:11] *** Quits: txtsd (~txtsd@user/txtsd) (Quit: WeeChat 3.4)
[11:15:51] *** Joins: thevar1able (~textual@46.39.45.122)
[11:17:20] *** Joins: someuser (~user@197.54.4.96)
[11:17:25] *** Joins: tobybl (~tobybl@248.64.200.146.dyn.plus.net)
[11:19:25] *** Quits: Goodbye_Vincent (cyvahl@freakshells.net) (Quit: Ping timeout (120 seconds))
[11:19:25] *** Quits: kofuyu (~kofuyu@user/kofuyu) (Quit: Ping timeout (120 seconds))
[11:19:42] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[11:19:46] *** Joins: kofuyu (~kofuyu@user/kofuyu)
[11:19:48] *** Joins: Goodbye_Vincent (~Goodbye_V@freakshells.net)
[11:19:53] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[11:20:07] *** Quits: josh_h (sid301834@id-301834.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[11:20:11] *** Quits: braxas (sid508886@id-508886.lymington.irccloud.com) (Ping timeout: 252 seconds)
[11:20:21] *** Quits: pwillard (sid136981@id-136981.hampstead.irccloud.com) (Ping timeout: 245 seconds)
[11:20:33] *** Joins: grundrausch3n (~grundraus@p200300e9ef1e6d00cd435cd27fd11e23.dip0.t-ipconnect.de)
[11:20:44] *** Quits: graingert (sid128301@id-128301.tinside.irccloud.com) (Ping timeout: 252 seconds)
[11:20:44] *** Quits: hardwire (sid415742@id-415742.uxbridge.irccloud.com) (Ping timeout: 252 seconds)
[11:21:16] *** Joins: josh_h (sid301834@id-301834.helmsley.irccloud.com)
[11:21:20] *** Joins: hardwire (sid415742@id-415742.uxbridge.irccloud.com)
[11:21:21] *** Quits: lidless (lidless@2600:3c02::f03c:92ff:fe1d:6a82) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[11:21:21] *** Joins: graingert (sid128301@id-128301.tinside.irccloud.com)
[11:21:22] *** Joins: pwillard (sid136981@id-136981.hampstead.irccloud.com)
[11:21:30] *** Joins: braxas (sid508886@id-508886.lymington.irccloud.com)
[11:21:33] *** Joins: jmd (~user@de.cellform.com)
[11:21:34] *** Joins: lidless (~lidless@173-230-131-227.ip.linodeusercontent.com)
[11:21:54] *** Quits: catern (~sbaugh@2604:2000:8fc0:b:a9c7:866a:bf36:3407) (Ping timeout: 260 seconds)
[11:22:08] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[11:25:13] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[11:25:30] *** Joins: palasso (~palasso@user/palasso)
[11:25:31] *** Joins: mickey8 (~user@user/mickey)
[11:25:39] *** Quits: jrjsmrtn (~jrjsmrtn@ip-212-239-244-124.dsl.scarlet.be) (Quit: ZNC 1.8.2 - https://znc.in)
[11:25:54] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[11:26:13] *** Joins: jrjsmrtn (~jrjsmrtn@ip-212-239-244-124.dsl.scarlet.be)
[11:26:29] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Read error: Connection reset by peer)
[11:28:06] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[11:28:39] *** Quits: [_] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[11:30:33] *** Quits: odwtt (~odwtt@96.74.34.85) (Ping timeout: 256 seconds)
[11:30:49] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:30:49] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[11:30:50] *** Joins: Vonter (~Vonter@user/vonter)
[11:30:53] *** Parts: eoli3n (~eoli3n@82-64-112-150.subs.proxad.net) ()
[11:31:10] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:32:49] *** Joins: grooverman_ (~grooverma@177.102.119.200)
[11:33:02] *** Quits: dgw (dgw@sopel/admin/dgw) (Ping timeout: 240 seconds)
[11:34:17] *** Quits: grooverman (~grooverma@177.102.119.200) (Ping timeout: 240 seconds)
[11:34:19] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[11:34:34] *** Joins: rendar (~rendar@user/rendar)
[11:34:54] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:35:03] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[11:35:12] *** Joins: odwtt_ (~odwtt@96.74.34.85)
[11:35:19] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[11:35:32] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 240 seconds)
[11:35:37] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 240 seconds)
[11:36:02] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[11:36:03] *** Joins: roxfan2 (~roxfan@185.206-129-109.adsl-dyn.isp.belgacom.be)
[11:36:16] *** Joins: chele (~chele@user/chele)
[11:36:55] *** Joins: maaya (~rthtyj@27.97.146.135)
[11:36:58] *** Quits: roxfan (~roxfan@185.206-129-109.adsl-dyn.isp.belgacom.be) (Ping timeout: 268 seconds)
[11:37:53] *** Joins: tristan_ (~tristan@223.62.162.69)
[11:38:09] *** Joins: dgw (dgw@sopel/admin/dgw)
[11:38:53] *** Joins: pree (~pree@2a02:8071:a5bc:ca00::1026)
[11:38:56] *** Joins: Ergo^ (~ergo@91.238.59.144)
[11:39:17] *** Quits: ensyde (~ensyde@2600:1700:2050:1040:505d:6d63:cb2e:fb52) (Ping timeout: 240 seconds)
[11:39:26] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 268 seconds)
[11:39:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:39:37] *** Quits: maryo87 (~Maryo@user/maryo) (Ping timeout: 256 seconds)
[11:39:44] *** Joins: maryo_87 (~Maryo@user/maryo)
[11:40:13] *** Joins: pycode1 (~pycode3@2001:b07:5d28:551:2dd5:22ee:a1c1:49b)
[11:41:57] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:7c5f:6d69:1225:e63e) (Ping timeout: 240 seconds)
[11:43:17] *** Quits: jonthesnow (~xizhendu@36.112.179.225) (Ping timeout: 240 seconds)
[11:43:46] *** Quits: cewood (~cewood@ip5b417897.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[11:46:57] *** Joins: Major_Biscuit (~MajorBisc@c-001-017-008.client.tudelft.eduvpn.nl)
[11:47:37] *** Quits: dgw (dgw@sopel/admin/dgw) (Read error: Connection reset by peer)
[11:49:32] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Ping timeout: 240 seconds)
[11:50:16] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 250 seconds)
[11:50:48] *** Joins: kristijonas_ (~kristijon@78-56-32-39.static.zebra.lt)
[11:51:04] *** Quits: kristijonas (~kristijon@78-56-32-39.static.zebra.lt) (Read error: Connection reset by peer)
[11:52:59] *** Joins: Abrax (~Abrax@user/abrax)
[11:53:08] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[11:54:03] *** Joins: Guest9014 (~vit@chello085216193138.chello.sk)
[11:54:55] *** Quits: NeckRomancer (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[11:55:29] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:57:32] *** Joins: meder (~meder@c-65-34-244-236.hsd1.fl.comcast.net)
[11:58:49] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[11:59:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[12:00:50] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:00:52] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[12:02:06] *** Joins: dsrt^ (~dsrt@50-207-160-170-static.hfc.comcastbusiness.net)
[12:02:48] *** Quits: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net) (Quit: Leaving)
[12:04:33] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[12:05:11] *** Joins: peterandre (peterandre@2605:6400:c847:1524::4251)
[12:05:41] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:06:57] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Ping timeout: 240 seconds)
[12:07:37] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[12:07:38] *** Joins: esperegu (~quassel@ip-213-124-221-102.ip.prioritytelecom.net)
[12:07:41] *** Joins: maryo87 (~Maryo@user/maryo)
[12:07:43] *** Joins: Vonter (~Vonter@user/vonter)
[12:07:51] *** Quits: maryo_87 (~Maryo@user/maryo) (Remote host closed the connection)
[12:07:57] *** Quits: bytehackr (~Sandipan@43.252.250.126) (Ping timeout: 256 seconds)
[12:08:50] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (Quit: Connection closed for inactivity)
[12:08:52] *** Joins: parv (~quass@user/parv)
[12:09:00] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[12:09:39] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 268 seconds)
[12:09:45] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[12:10:38] *** Quits: someuser (~user@197.54.4.96) (Ping timeout: 250 seconds)
[12:10:43] *** Joins: saroy (~Sandipan@202.142.96.27)
[12:12:23] *** Joins: someuser (~user@197.54.4.96)
[12:13:09] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[12:14:23] *** Joins: mickey8 (~user@user/mickey)
[12:15:28] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:15:51] *** Joins: Wulf (~Wulf@user/wulf)
[12:16:37] *** Quits: saroy (~Sandipan@202.142.96.27) (Ping timeout: 240 seconds)
[12:17:17] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Ping timeout: 240 seconds)
[12:17:18] *** Joins: zisu8 (~textual@p200300eab7182b00e90213fbcc21c37c.dip0.t-ipconnect.de)
[12:17:42] *** Joins: Nutte35 (~Nutte@202.153.82.40)
[12:18:08] *** Joins: bart__ (~Xano@2a00:23c4:4204:700:2fd7:d343:a66d:5772)
[12:18:57] *** Quits: meder (~meder@c-65-34-244-236.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[12:19:17] *** Quits: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr) (Remote host closed the connection)
[12:19:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[12:20:10] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 250 seconds)
[12:20:59] *** Joins: Wulf (~Wulf@user/wulf)
[12:21:03] *** Joins: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr)
[12:21:42] *** Joins: avaxar (~avaxar@36.72.212.92)
[12:22:36] *** Quits: Xano_ (~Xano@2a00:23c4:4204:700:b07:85e4:bbf4:95cd) (Ping timeout: 268 seconds)
[12:23:19] *** Joins: dgw (dgw@sopel/admin/dgw)
[12:24:22] *** Joins: gallup (~gallup@bl16-179-173.dsl.telepac.pt)
[12:25:07] *** Quits: avaxar (~avaxar@36.72.212.92) (Remote host closed the connection)
[12:26:17] *** Quits: ouestbillie (~gallup@185.195.233.151) (Ping timeout: 240 seconds)
[12:26:52] *** Joins: ubert1 (~Thunderbi@p200300ecdf099416f339e1e74dd0e9e7.dip0.t-ipconnect.de)
[12:29:39] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:30:43] *** Joins: unixlab (unixlab@debian.theserver.tk)
[12:31:08] *** Joins: md618 (~md618@90.192.135.131)
[12:34:13] *** Quits: bluedust_ (~bluedust@103.165.167.52) (Remote host closed the connection)
[12:36:09] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:36:38] *** Quits: justm33 (~Username@82-171-85-246.fixed.kpn.net) (Ping timeout: 250 seconds)
[12:37:26] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[12:37:49] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[12:39:05] *** gallup is now known as ouestbillie
[12:40:32] *** Joins: bluedust (~bluedust@103.165.167.52)
[12:40:32] *** Quits: han-solo (~hanish@user/han-solo) (Remote host closed the connection)
[12:41:46] *** Joins: han-solo (~hanish@user/han-solo)
[12:42:12] *** Joins: paul424 (~tom@ip-5-172-234-238.multi.internet.cyfrowypolsat.pl)
[12:43:21] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[12:43:43] *** Joins: justm33 (~Username@84-84-41-7.fixed.kpn.net)
[12:44:52] *** Joins: pkapp_ (~pkapp@2601:58c:c500:6900:f050:8bc:5e33:2fcf)
[12:45:48] *** Quits: bluedust (~bluedust@103.165.167.52) (Remote host closed the connection)
[12:46:10] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 250 seconds)
[12:46:10] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:8311:b7dd:45f9:1899) (Ping timeout: 250 seconds)
[12:46:36] *** Quits: paul424 (~tom@ip-5-172-234-238.multi.internet.cyfrowypolsat.pl) (Client Quit)
[12:47:09] *** Joins: Algernon69 (~Algernon6@2a04:cec0:10b2:4cc6:9099:c899:e6dc:2839)
[12:48:05] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[12:48:30] *** Quits: emx (~emx@adsl-84-226-68-198.adslplus.ch) (Ping timeout: 268 seconds)
[12:48:36] *** Joins: saroy (~Sandipan@202.142.96.27)
[12:50:13] *** Quits: grundrausch3n (~grundraus@p200300e9ef1e6d00cd435cd27fd11e23.dip0.t-ipconnect.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:50:15] *** Joins: yassernasc (~yassernas@2804:29b8:505a:f33d:601e:b34d:f58c:b5e8)
[12:50:28] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[12:50:31] *** Quits: saroy (~Sandipan@202.142.96.27) (Remote host closed the connection)
[12:51:19] *** Joins: saroy (~Sandipan@202.142.96.27)
[12:52:02] *** Quits: saroy (~Sandipan@202.142.96.27) (Remote host closed the connection)
[12:52:24] *** Joins: saroy (~Sandipan@202.142.96.27)
[12:52:42] *** Joins: LimeOn (~user@user/limeon)
[12:52:43] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[12:53:46] *** Joins: meder (~meder@c-65-34-244-236.hsd1.fl.comcast.net)
[12:54:00] <lericson> in matplotlib, why is there no way to scale axes?
[12:54:21] <lericson> so for example 1,1 in data coordinates is scaled to say 5,5
[12:54:25] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[12:55:17] *** Joins: plastico (~plastico@neomutt/plastico)
[12:55:55] <lericson> very strange that i need to make a custom scale for such a basic thing imo
[12:56:26] *** Quits: saroy (~Sandipan@202.142.96.27) (Remote host closed the connection)
[12:56:48] *** Joins: saroy (~Sandipan@202.142.96.27)
[12:57:12] *** Joins: SteveR (~SteveR@2600:6000:ff7e:f6d5::97b)
[12:57:47] *** jazzy2 is now known as jazzy
[12:58:08] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[12:58:57] *** Quits: hams (~hams@user/hams) (Ping timeout: 256 seconds)
[12:59:46] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:1b53:4019:35ec:4d0a) (Quit: pvergain)
[13:00:09] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[13:00:53] *** Joins: shad (~shad@user/shad)
[13:01:00] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: You attract the wrong things if you have no sense of who you are)
[13:01:20] *** Quits: maaya (~rthtyj@27.97.146.135) (Remote host closed the connection)
[13:02:43] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:4b40:4a4e:4f7c:125e)
[13:03:04] *** Quits: saroy (~Sandipan@202.142.96.27) (Ping timeout: 250 seconds)
[13:03:19] *** Joins: dreamon (~dreamon@217.78.160.135)
[13:03:40] *** Joins: grundrausch3n (~grundraus@p200300e9ef1e6d00cd435cd27fd11e23.dip0.t-ipconnect.de)
[13:03:55] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[13:04:17] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 240 seconds)
[13:04:50] *** Quits: tobybl (~tobybl@248.64.200.146.dyn.plus.net) (Remote host closed the connection)
[13:05:20] *** Joins: saroy (~Sandipan@202.142.96.27)
[13:05:30] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[13:06:07] *** Quits: jyg (~jyg@128.218.42.10) (Ping timeout: 256 seconds)
[13:06:19] *** Quits: saroy (~Sandipan@202.142.96.27) (Remote host closed the connection)
[13:07:01] *** Joins: saroy (~Sandipan@202.142.96.27)
[13:07:36] *** Quits: luigibu (~luigi@225.red-79-159-194.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[13:07:52] *** Quits: saroy (~Sandipan@202.142.96.27) (Remote host closed the connection)
[13:08:26] *** Joins: saroy (~Sandipan@202.142.96.27)
[13:08:35] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 256 seconds)
[13:08:48] <lericson> ok don't try that
[13:08:58] *** Joins: tga (~tga@p54a75da2.dip0.t-ipconnect.de)
[13:08:58] *** Quits: tga (~tga@p54a75da2.dip0.t-ipconnect.de) (Changing host)
[13:08:58] *** Joins: tga (~tga@user/tga)
[13:08:59] <lericson> just scale all of your things apparently
[13:09:06] <lericson> maybe you can hack the plot somehow idk
[13:09:26] <lericson> probably easiest to just write other tick marks
[13:10:23] *** Quits: saroy (~Sandipan@202.142.96.27) (Remote host closed the connection)
[13:10:48] *** Joins: saroy (~Sandipan@202.142.96.27)
[13:12:17] *** Quits: adeliktas (~adeliktas@i59F4D5EA.versanet.de) (Ping timeout: 240 seconds)
[13:12:33] *** Quits: maryo87 (~Maryo@user/maryo) (Ping timeout: 268 seconds)
[13:12:52] *** Quits: saroy (~Sandipan@202.142.96.27) (Remote host closed the connection)
[13:13:03] *** Joins: bluedust (~bluedust@103.165.167.52)
[13:13:16] *** Joins: saroy (~Sandipan@202.142.96.27)
[13:14:26] <wyre> why Gitlab docs talk about PyPI packets? 🤔 https://docs.gitlab.com/ee/user/packages/pypi_repository/index.html#authenticate-with-a-ci-job-token
[13:14:49] <wyre> is there some difference between PyPI packages and usual python packages?
[13:14:59] <wyre> I understand PyPI as pypi.org 🤔
[13:15:25] *** Quits: tga (~tga@user/tga) (Quit: leaving)
[13:15:36] *** Quits: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (Quit: jarthur)
[13:15:39] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[13:15:58] *** Joins: bluedust_ (~bluedust@103.165.167.52)
[13:17:28] <Wulf> wyre: I guess they're confused.
[13:18:49] <Wulf> wyre: it should be "pip" or "python" instead of "PyPI". Or maybe "pep 503"
[13:19:54] *** Joins: iomari891 (~iomari891@105.112.138.38)
[13:19:57] *** Quits: bluedust (~bluedust@103.165.167.52) (Ping timeout: 268 seconds)
[13:20:50] *** Joins: Schrostfutz (~Schrostfu@55d4f092.access.ecotel.net)
[13:21:14] *** Joins: jonthesnow (~xizhendu@124.127.25.151)
[13:22:10] *** Quits: jonthesnow (~xizhendu@124.127.25.151) (Remote host closed the connection)
[13:22:36] *** Joins: jonthesnow (~xizhendu@124.127.25.151)
[13:22:49] <The-Compiler> wyre, Wulf: It doesn't seem clearly wrong to me, given that PyPI is pretty much the standard package index, and any alternatives are based on it
[13:22:58] <The-Compiler> Twine also calls itself "Collection of utilities for publishing packages on PyPI
[13:23:10] <The-Compiler> so why not call twine a "PyPI command" then
[13:24:08] <Wulf> The-Compiler: people self-host python repos.
[13:24:19] <The-Compiler> Wulf: I'm aware
[13:24:34] *** Quits: esperegu (~quassel@ip-213-124-221-102.ip.prioritytelecom.net) (Quit: No Ping reply in 180 seconds.)
[13:24:44] *** Quits: meder (~meder@c-65-34-244-236.hsd1.fl.comcast.net) (Ping timeout: 250 seconds)
[13:24:49] *** Quits: Guest1778 (~Guest1778@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 256 seconds)
[13:24:51] *** Joins: Naan (~Naan@user/naan)
[13:25:00] *** Joins: dvyd (~dvyd@2a0d:6fc2:47b0:1800:4cb3:a8b2:cbab:7b01)
[13:26:36] <The-Compiler> yet PEP 503 basically is defining the underlying API as "This is what PyPI does", so it seems fine to say "PyPI" rather than, dunno, "PyPI and other PyPI-like servers conforming to PEP 503" or whatever just for simplicity
[13:27:55] <Wulf> The-Compiler: pypi does a lot more than pep 503. I wrote my own pep 503 compliant service, gitlab implements it, and many others. PyPI is just one among many.
[13:28:55] *** Joins: Jonopoly (~Jonopoly@user/jonopoly)
[13:28:58] *** Joins: vladoski (~foo@93-47-226-22.ip114.fastwebnet.it)
[13:29:07] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Quit: Leaving)
[13:29:16] <The-Compiler> Wulf: I still find it overly pedantic to use something nobody will understand rather than saying "PyPI" and including other PyPI-like indexes with that
[13:29:27] *** Joins: luigibu (~luigi@225.red-79-159-194.dynamicip.rima-tde.net)
[13:30:32] <Wulf> The-Compiler: I think more people might understand "pip"
[13:30:41] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:30:47] *** Joins: catern (~sbaugh@2604:2000:8fc0:b:a9c7:866a:bf36:3407)
[13:31:30] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:31:38] <The-Compiler> Wulf: yet other tools which install packages exist, so, nothing gained in my eyes
[13:32:28] <The-Compiler> and I see how twine is a "PyPI command", I don't see how twine is a "pip command"
[13:33:24] <The-Compiler> funnily enough, Twine (and other tools) read the index to use from ~/.pypirc ;) https://packaging.python.org/en/latest/specifications/pypirc/
[13:35:02] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[13:35:21] <Wulf> hm.
[13:35:34] *** Quits: FaV1r3s (~localhost@user/fav1r3s) (Ping timeout: 250 seconds)
[13:35:46] *** Quits: nunggu (~q@user/nunggu) (Remote host closed the connection)
[13:36:09] *** Quits: sleepingforest (~sleepingf@pool-98-111-201-185.pitbpa.ftas.verizon.net) (Ping timeout: 256 seconds)
[13:36:16] *** Joins: nunggu (~q@user/nunggu)
[13:36:17] *** Quits: jonthesnow (~xizhendu@124.127.25.151) (Ping timeout: 240 seconds)
[13:38:37] *** Quits: roxfan2 (~roxfan@185.206-129-109.adsl-dyn.isp.belgacom.be) (Ping timeout: 256 seconds)
[13:38:54] *** Joins: roxfan (~roxfan@185.206-129-109.adsl-dyn.isp.belgacom.be)
[13:38:57] *** unixlab is now known as nicozdeb
[13:39:43] *** Quits: falk689_ (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[13:40:13] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[13:40:13] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:40:19] *** Joins: weedmic (~weedmic@5.102.235.240)
[13:40:35] *** Quits: bluedust_ (~bluedust@103.165.167.52) (Remote host closed the connection)
[13:40:40] *** Joins: gtz__ (~gtz@185.12.215.240)
[13:40:42] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[13:41:04] <gtz__> How can python build the sqlite3 module without including sqlite3.h ?
[13:41:32] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[13:42:53] <apollo13> gtz__: probably not at all; how do you imagine that would work?
[13:43:15] <apollo13> at least on my system it links to libsqlite3.so.0 so you need sqlite3.h to be able to build it I think
[13:45:09] <gtz__> apollo13, ok, my bad
[13:45:13] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[13:45:14] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[13:45:15] *** Quits: someuser (~user@197.54.4.96) (Read error: Connection reset by peer)
[13:45:24] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 276 seconds)
[13:45:24] <apollo13> gtz__: no worries, I might be missing something. What are you trying to achieve?
[13:45:38] *** Joins: someuser (~user@197.54.4.96)
[13:45:57] *** Joins: CombatVet (~c4@user/combatvet)
[13:45:58] *** Quits: rMdes (~rmdes@my.armada.digital) (Quit: The Lounge - https://thelounge.github.io)
[13:47:33] *** Joins: r3df0x (~r3df0x@116.178.224.16)
[13:48:06] <dminuoso> apollo13: Hard to say, in principle you dont need header files since you could just hardcode the FFI interface into your code
[13:48:17] *** Quits: Nutte35 (~Nutte@202.153.82.40) (Ping timeout: 240 seconds)
[13:48:22] <dminuoso> So this would depend on the sqlite3 package
[13:48:49] <apollo13> dminuoso: fair, I'd have to double check, but I doubt that is what has been done for sqlite3 in python
[13:49:00] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[13:49:31] <apollo13> https://github.com/python/cpython/blob/main/Modules/_sqlite/connection.h#L33 seems rather explicit
[13:49:41] *** Joins: sleepingforest (~sleepingf@pool-108-39-234-208.pitbpa.fios.verizon.net)
[13:49:44] <dminuoso> Yes, indeed.
[13:49:57] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 276 seconds)
[13:50:43] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[13:50:45] *** Joins: meder (~meder@c-65-34-244-236.hsd1.fl.comcast.net)
[13:50:57] *** Quits: dreamon (~dreamon@217.78.160.135) (Ping timeout: 240 seconds)
[13:51:08] *** Joins: jmd (~user@de.cellform.com)
[13:51:24] *** Quits: nunggu (~q@user/nunggu) (Remote host closed the connection)
[13:51:48] *** Joins: nunggu (~q@user/nunggu)
[13:53:51] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[13:54:20] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[13:55:02] *** Quits: baltazar (~baltazar@84-236-26-21.pool.digikabel.hu) (Ping timeout: 240 seconds)
[13:55:21] *** Joins: ano (~ano@user/ano)
[13:55:26] *** Quits: domicron (~domicron@gateway/tor-sasl/domicron) (Quit: Ping timeout (120 seconds))
[13:56:03] *** Joins: maryo87 (~Maryo@user/maryo)
[13:56:10] *** Joins: domicron (~domicron@gateway/tor-sasl/domicron)
[13:56:54] *** Joins: baltazar (~baltazar@84-236-21-114.pool.digikabel.hu)
[13:57:32] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:57:42] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[13:58:57] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[13:59:35] *** Quits: tristan_ (~tristan@223.62.162.69) (Ping timeout: 256 seconds)
[14:00:41] <jmd> I have a abstract base class, which I have defined in my program and it works perfectly.  However as soon as I move it into its own module, and access it using import, I get the error "TypeError: module() takes at most 2 arguments (3 given)"  - I have mode no other changes, just moving it into a module.  Why does it complain about the number of arguments?
[14:02:30] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[14:03:16] <jinsun> jmd: can you paste the code? https://bpa.st/+python
[14:04:27] <jmd> It would be tricky to separate the relevant bits ...
[14:06:11] *** Quits: waveform (~quassel@waveform.plus.com) (Ping timeout: 256 seconds)
[14:07:08] *** Joins: waveform (~quassel@waveform.plus.com)
[14:07:31] *** Quits: moto (~moto@user/moto) (Ping timeout: 256 seconds)
[14:07:58] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[14:08:17] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[14:08:59] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[14:09:17] *** Quits: Algernon69 (~Algernon6@2a04:cec0:10b2:4cc6:9099:c899:e6dc:2839) (Ping timeout: 268 seconds)
[14:09:17] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[14:09:29] *** Quits: BurgerW (~BurgerW@222.244.94.224) (Quit: Lost terminal)
[14:09:54] *** Quits: meder (~meder@c-65-34-244-236.hsd1.fl.comcast.net) (Ping timeout: 268 seconds)
[14:10:21] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 256 seconds)
[14:12:57] *** Quits: kaiseisei (~Thunderbi@183.191.221.65) (Ping timeout: 240 seconds)
[14:15:06] *** Joins: e2m4n (~ezman@user/e2m4n)
[14:15:43] *** Quits: SteveR (~SteveR@2600:6000:ff7e:f6d5::97b) (Quit: Client closed)
[14:16:32] <jmd> okay, it seems the problem was caused by a clash between the class name and the module name.  I was under the mistaken belief that naming them identically was a good idea. But it seems that the opposite is true.
[14:16:36] *** Joins: Z-cat (~Z-cat@user/z-cat)
[14:16:48] <jmd> (I am a newcomer to python)
[14:16:56] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:17:09] *** Quits: shad (~shad@user/shad) (Ping timeout: 256 seconds)
[14:17:09] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:18:17] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:18:22] *** Quits: newpy_ (~newpy@2601:280:4381:1390:d1cc:33c8:2738:2c5b) (Quit: Leaving)
[14:18:27] *** Lord_of_Life_ is now known as Lord_of_Life
[14:18:30] <jinsun> yeah not a good idea, easy to confuse yourself, if you follow the PEP 8 rules you would be forced to name them differently
[14:19:13] *** Joins: moto (~moto@user/moto)
[14:19:16] *** Joins: Throgkt (~Throgkt@user/throgkt)
[14:19:27] <jmd> "PEP 8 rules" ??
[14:21:41] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[14:21:59] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[14:22:37] *** Quits: r3df0x (~r3df0x@116.178.224.16) (Ping timeout: 240 seconds)
[14:22:43] <mar77i> the joys of pip! so, urm, I have Markdown==3.3.6 and importlib-metadata==4.10.0 and apparently on python3.8 Markdown requires importlib-metadata, and on python3.10 Markdown doesn't list importlib-metadata in its dependencies.
[14:23:03] <jinsun> jmd: https://www.python.org/dev/peps/pep-0008/
[14:23:27] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[14:25:15] *** Joins: dante-as (~dante-as@86.121.90.224)
[14:25:57] *** Quits: parv (~quass@user/parv) (Ping timeout: 240 seconds)
[14:26:33] *** Joins: Ilyu (~quassel@gateway/vpn/pia/ilyu)
[14:26:35] <dante-as> Hi guys, do you know if it's any possibility to manipulate the jsonlogger.JsonFormatter?
[14:26:40] <dante-as> to add the timezone?
[14:27:09] <dante-as>  jsonlogger.JsonFormatter it's a formatter from the logging library
[14:28:01] <jinsun> mar77i: that's not weird, it is just using importlib.metadata from the stdlib in 3.10 https://github.com/Python-Markdown/markdown/blob/3.3.6/markdown/util.py#L32
[14:31:29] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[14:31:43] *** Joins: CombatVet (~c4@user/combatvet)
[14:31:45] *** Joins: Minus_One (~MinusOne@user/minusone)
[14:31:50] *** Joins: Yuzu02 (~Yuzu02@181.37.220.228)
[14:32:15] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[14:32:16] *** Quits: GNUmoon2 (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[14:32:30] *** Joins: CombatVet (~c4@user/combatvet)
[14:32:33] *** Joins: slav0nic (slav0nic@python.su)
[14:32:59] <mar77i> oh.
[14:33:14] *** Joins: GNUmoon2 (~GNUmoon@gateway/tor-sasl/gnumoon)
[14:33:38] *** Quits: MinusOne (~MinusOne@user/minusone) (Ping timeout: 250 seconds)
[14:34:13] <mar77i> jinsun: it's funny. I'm so used to use a slightly newer python. now our pip-compile git hook punishes me for not using a pre-3.10
[14:36:02] *** Quits: jab416171 (~jab416171@c-174-52-58-23.hsd1.ut.comcast.net) (Ping timeout: 240 seconds)
[14:36:44] *** Quits: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt) (Remote host closed the connection)
[14:38:37] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:38e5:7b1f:342a:d133)
[14:38:54] *** Joins: jw-dungeon (~quassel@2601:44:4380:4a10:f36d:42d5:7cfb:b8af)
[14:40:28] *** jw-dungeon is now known as jwdungeon
[14:40:39] *** jwdungeon is now known as jw_dungeon
[14:40:51] *** Joins: nicoz (nicoz@ubuntu/member/nicoz)
[14:40:54] <jinsun> ah, pip-comiple in git hook, never thought of that, but if you are supporting older versions then might want to update the hook to runn for all supported versions or maybe only the oldest supported version
[14:41:19] *** Quits: Yuzu02 (~Yuzu02@181.37.220.228) (Ping timeout: 256 seconds)
[14:41:26] *** Joins: jab416171 (~jab416171@c-174-52-58-23.hsd1.ut.comcast.net)
[14:41:43] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[14:42:20] *** Joins: sandipan (~Sandipan@43.252.250.126)
[14:42:27] *** Quits: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald) (Ping timeout: 256 seconds)
[14:43:00] *** Joins: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt)
[14:45:05] *** Joins: shad (~shad@user/shad)
[14:45:17] *** Quits: saroy (~Sandipan@202.142.96.27) (Ping timeout: 240 seconds)
[14:45:37] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[14:46:34] *** Joins: c0mrade (~c0mrade@31.219.95.93)
[14:47:31] *** Joins: meder (~meder@c-65-34-244-236.hsd1.fl.comcast.net)
[14:47:34] *** Quits: GNUmoon2 (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[14:48:03] *** Joins: tristan_ (~tristan@223.38.8.111)
[14:48:11] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[14:48:42] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[14:48:43] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[14:49:24] *** Joins: KirkMcDonald (~Kirk@python/site-packages/KirkMcDonald)
[14:50:05] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[14:52:11] *** Joins: adeliktas (~adeliktas@i59F4D5EA.versanet.de)
[14:56:01] *** Joins: parv (~quass@user/parv)
[14:57:15] *** Joins: blindguard (~blindguar@2a02:908:1864:c200:e9df:eeac:1563:f38a)
[14:58:03] *** Quits: dante-as (~dante-as@86.121.90.224) (Quit: Ping timeout (120 seconds))
[14:58:54] *** Joins: paprika (~pepper@user/pepper)
[14:59:14] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 268 seconds)
[14:59:50] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:00:25] *** Quits: yassernasc (~yassernas@2804:29b8:505a:f33d:601e:b34d:f58c:b5e8) (Remote host closed the connection)
[15:00:31] *** Joins: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net)
[15:00:37] *** Quits: md618 (~md618@90.192.135.131) (Ping timeout: 240 seconds)
[15:03:28] *** Joins: yaraju (~yaraju@user/yaraju)
[15:03:33] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[15:03:41] *** Joins: vsantana (~Thunderbi@fttx-177136149200.usr.predialnet.com.br)
[15:03:57] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[15:04:21] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[15:04:52] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[15:04:57] *** Joins: Knaldgas (~Per@193.235.229.50)
[15:05:02] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[15:05:42] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[15:05:56] *** Joins: maryo_87 (~Maryo@user/maryo)
[15:06:36] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[15:07:17] *** Quits: Guest9014 (~vit@chello085216193138.chello.sk) (Ping timeout: 240 seconds)
[15:07:31] *** Joins: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[15:08:12] *** Joins: valdur55 (valdur55@free.blinkenshell.org)
[15:08:57] *** Quits: maryo87 (~Maryo@user/maryo) (Ping timeout: 240 seconds)
[15:09:17] *** Joins: rsx (~dummy@ppp-188-174-134-242.dynamic.mnet-online.de)
[15:09:32] *** Quits: c0mrade (~c0mrade@31.219.95.93) (Ping timeout: 240 seconds)
[15:10:02] *** Quits: Schrostfutz (~Schrostfu@55d4f092.access.ecotel.net) (Ping timeout: 240 seconds)
[15:10:37] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[15:13:45] <cluelessperson> I'm running into a bit of insanity with trio
[15:16:06] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[15:17:43] *** Quits: weedmic (~weedmic@5.102.235.240) (Quit: Konversation terminated!)
[15:18:49] *** Joins: teut (~teut@2401:4900:1c68:97ee:45e1:5fb1:48ea:b97f)
[15:19:29] <Wulf> cluelessperson: details?
[15:19:38] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:20:33] *** Quits: nicozdeb (unixlab@debian.theserver.tk) (Quit: ZNC - https://znc.in)
[15:20:40] <cluelessperson> I'm not sure how to articulate thi syet
[15:20:57] *** Quits: nicoz (nicoz@ubuntu/member/nicoz) (Quit: Pang timeout)
[15:24:02] *** Joins: tobybl (~tobybl@248.64.200.146.dyn.plus.net)
[15:24:03] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[15:24:05] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[15:24:35] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[15:25:08] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:26:25] *** Quits: Jonopoly (~Jonopoly@user/jonopoly) (Quit: WeeChat 3.0)
[15:26:29] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[15:27:41] <cluelessperson> Wulf, alright, I'm looking to use trio
[15:27:52] <cluelessperson> presumably I need to create a line delimited transport for json
[15:27:57] <cluelessperson> how should I do that?
[15:28:11] <cluelessperson> Should I create an object with async send/recv methods?
[15:28:49] <cluelessperson> should I create a task to run in the nursery to handle reading from socket stream in the background in advance and split lines?
[15:29:21] *** Joins: nicoz (nicoz@nicoz.letz.dev)
[15:30:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[15:30:21] *** Joins: czard (~czard@host-78-150-125-181.as13285.net)
[15:30:27] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:2055:673d:3155:da63)
[15:30:30] *** Quits: kmh (~kmh@2a00:6020:5004:6800:94b4:4b15:429c:7c05) (Quit: Leaving)
[15:30:49] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[15:31:02] *** Quits: grooverman_ (~grooverma@177.102.119.200) (Read error: Connection reset by peer)
[15:31:18] *** Quits: maxzor_ (~maxzor@2a01cb04054faa0015f8d6e9a964c458.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[15:31:57] *** Joins: bluedust (~bluedust@103.165.167.52)
[15:32:04] *** Joins: grooverman (~grooverma@177.102.119.200)
[15:32:25] *** Joins: unixlab (unixlab@debian.theserver.tk)
[15:33:30] *** unixlab is now known as nicoz-
[15:33:52] *** Quits: nicoz- (unixlab@debian.theserver.tk) (Changing host)
[15:33:52] *** Joins: nicoz- (unixlab@ubuntu/member/nicoz)
[15:35:03] *** Joins: emx (~emx@adsl-84-226-68-198.adslplus.ch)
[15:35:41] *** Quits: dalan (~dalan@59-102-63-107.tpgi.com.au) (Quit: dalan)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:12] *** Joins: dalan6 (~dalan@59-102-63-107.tpgi.com.au)
[15:36:29] *** Joins: MinusOne (~MinusOne@user/minusone)
[15:36:29] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 256 seconds)
[15:36:33] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:38:38] *** Quits: Minus_One (~MinusOne@user/minusone) (Ping timeout: 250 seconds)
[15:39:18] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:39:29] *** Joins: acresearch (~acresearc@user/acresearch)
[15:39:46] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[15:40:13] <acresearch> people, is there a way to list the number of GPU in a system?   i am trying to perform a pool.imap() on multiple GPUs, such as each process is on a seperate GPU
[15:40:17] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[15:41:31] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[15:41:35] *** Quits: roxfan (~roxfan@185.206-129-109.adsl-dyn.isp.belgacom.be) (Ping timeout: 256 seconds)
[15:41:38] *** Joins: vats (~vats@180.149.226.242)
[15:41:42] *** Joins: roxfan2 (~roxfan@185.206-129-109.adsl-dyn.isp.belgacom.be)
[15:43:02] *** Joins: zaquest (~notzaques@5.130.79.72)
[15:43:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[15:44:49] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:44:56] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[15:45:38] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[15:45:38] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[15:46:09] <Wulf> cluelessperson: you want to read "Line-delimited JSON" like some log modules output. You could create an async generator function that takes a stream as parameter, iterates over the lines from the stream and yields decoded json documents.
[15:46:58] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[15:48:17] *** Joins: awmv_username_ta (~awmv@2a02:21b0:644f:c181:61e0:c183:96:f0c8)
[15:48:33] *** Joins: kiran (~kiranostr@78.40.148.178)
[15:49:21] *** Joins: oddish (~oddish@2a01:4f8:1c1c:a9da::1)
[15:49:43] *** Joins: lakrass (~lakrass@user/lakrass)
[15:50:25] *** Joins: Tier (~tier@37.214.41.167)
[15:50:28] *** Joins: thevishy (~Nishant@2405:201:f005:c007:39ad:8b3b:de67:f2a2)
[15:50:35] <d3x> There's also the jsonlines package if you don't feel like building your own
[15:51:02] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:38e5:7b1f:342a:d133) (Ping timeout: 268 seconds)
[15:51:35] *** Quits: pree (~pree@2a02:8071:a5bc:ca00::1026) (Ping timeout: 256 seconds)
[15:51:43] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:51:51] *** Joins: nilson_ (~nilson@2601:c4:c431:a14:4601:bbff:feaf:9214)
[15:52:37] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[15:53:57] *** Joins: BSaboia_ (~bsaboia@187.19.139.6)
[15:53:58] *** Joins: chele_ (~chele@user/chele)
[15:54:31] *** Quits: BSaboia_ (~bsaboia@187.19.139.6) (Read error: Connection reset by peer)
[15:54:34] *** Joins: han-solo (~hanish@user/han-solo)
[15:54:51] *** Joins: Klinda (~superleag@user/klinda)
[15:55:10] *** Joins: frost (~frost@user/frost)
[15:55:56] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[15:55:58] *** Quits: nilson (~nilson@2601:c4:c431:a14:4601:bbff:feaf:9214) (Ping timeout: 268 seconds)
[15:55:58] *** Quits: chele (~chele@user/chele) (Ping timeout: 250 seconds)
[15:56:03] <d3x> acresearch, my guess is whatever library you use to run your tasks on the GPU has something builtin to spread the workload. For example, TensorFlow's tf.distribute.MirroredStrategy uses all GPUs by default
[15:56:26] *** Quits: frost (~frost@user/frost) (Client Quit)
[15:57:06] *** Quits: luigibu (~luigi@225.red-79-159-194.dynamicip.rima-tde.net) (Read error: Connection reset by peer)
[15:57:17] *** paprika is now known as pepper
[15:58:33] <acresearch> d3x: i see
[15:59:00] *** Joins: chele__ (~chele@user/chele)
[16:01:25] *** Quits: chele_ (~chele@user/chele) (Ping timeout: 256 seconds)
[16:02:54] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 250 seconds)
[16:03:29] <bjs> acresearch: im a bit confused about your mixed terminology, what `pool` is this?
[16:03:41] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[16:03:41] *** Quits: someuser (~user@197.54.4.96) (Ping timeout: 256 seconds)
[16:04:16] *** Joins: md618 (~md618@129.31.149.204)
[16:04:54] *** Joins: Kruppt (~Kruppt@50-111-37-142.drhm.nc.frontiernet.net)
[16:07:22] *** Quits: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[16:08:00] *** Joins: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[16:09:17] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[16:10:08] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:10:23] *** Joins: jpic (~jpic@bernadette.objectif-libre.com)
[16:10:59] *** Quits: vladoski (~foo@93-47-226-22.ip114.fastwebnet.it) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:11:08] *** Joins: czard_ (~quassel@host-78-150-125-181.as13285.net)
[16:11:53] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:b80d:e2db:26ac:c3a6)
[16:12:01] *** Joins: Algernon69 (~Algernon6@2a04:cec0:10b2:4cc6:64f3:cef2:5b2f:1a09)
[16:12:45] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[16:15:31] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[16:16:37] *** chele__ is now known as chele
[16:18:19] *** Joins: edd_lc (~manjaro-i@85.64.207.99.dynamic.barak-online.net)
[16:19:13] *** Quits: parv (~quass@user/parv) (Quit: parv)
[16:19:37] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[16:19:49] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 240 seconds)
[16:20:34] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:20:41] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[16:20:52] *** Joins: Nutte35 (~Nutte@202.153.82.40)
[16:22:10] *** Quits: Nutte35 (~Nutte@202.153.82.40) (Remote host closed the connection)
[16:22:24] *** Joins: Nutte35 (~Nutte@202.153.82.40)
[16:23:10] *** Joins: luigibu (~luigi@225.red-79-159-194.dynamicip.rima-tde.net)
[16:23:14] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[16:23:30] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[16:23:45] *** Joins: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is)
[16:25:02] *** Quits: Deknos (~someone@user/menace) (Read error: Connection reset by peer)
[16:26:34] <hrob> hi, Im wondering in python3.8+ how I might parse a string using the string format syntax?  -- noted that this is not always an invertible method, but I seem to recall there was something in python 2.7 that could partially achieve this parse.parse maybe
[16:26:35] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[16:26:35] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[16:26:35] *** Joins: JordiGH (~jordi@user/jordigh)
[16:26:55] *** Joins: vladoski (~foo@2001:b07:add:d406:a908:aca8:6f2f:4bb7)
[16:27:24] <hrob> i.e. reverse of  "{foo:s}_{bar:d}".format(foo=..., ..)
[16:27:43] *** Quits: luigibu (~luigi@225.red-79-159-194.dynamicip.rima-tde.net) (Read error: Connection reset by peer)
[16:28:02] <hrob> or any other syntax,  I'm not too keen on regex if I can get away with it.
[16:28:07] *** Quits: vladoski (~foo@2001:b07:add:d406:a908:aca8:6f2f:4bb7) (Client Quit)
[16:28:26] *** Joins: d1cor (~diego@179.63.242.120)
[16:28:33] *** Quits: bluedust (~bluedust@103.165.167.52) (Remote host closed the connection)
[16:29:02] *** Joins: peteyboy1 (~peteyboy1@95.169.226.66)
[16:29:07] *** Joins: luigibu (~luigi@225.red-79-159-194.dynamicip.rima-tde.net)
[16:29:08] *** Joins: bluedust (~bluedust@103.165.167.52)
[16:29:20] *** Quits: grooverman (~grooverma@177.102.119.200) (Read error: Connection reset by peer)
[16:29:49] <nedbat> hrob: there's a third-party package called parse, though I haven't looked at it in a long time
[16:30:44] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[16:32:38] *** Joins: andreasbuhr (~quassel@p549db640.dip0.t-ipconnect.de)
[16:32:38] *** Quits: andreasbuhr (~quassel@p549db640.dip0.t-ipconnect.de) (Client Quit)
[16:33:03] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:33:32] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:46bc:5a09:3555:50f4) (Quit: Leaving)
[16:33:49] *** Quits: jpic (~jpic@bernadette.objectif-libre.com) (Ping timeout: 240 seconds)
[16:34:03] *** Joins: jpic (~jpic@82.142.9.130)
[16:34:08] *** Joins: frost (~frost@user/frost)
[16:34:17] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Remote host closed the connection)
[16:34:32] <hrob> nedbat: hm.. ok not stdlib anymore or if it ever was dont remember - but I see now that my project already vendors pyparsing ... seems to be a good choice too
[16:34:35] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[16:34:49] *** Joins: shad (~shad@user/shad)
[16:35:00] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[16:36:47] *** Joins: vladoski (~foo@2001:b07:add:d406:a908:aca8:6f2f:4bb7)
[16:36:56] *** Joins: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net)
[16:37:58] *** Quits: luigibu (~luigi@225.red-79-159-194.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[16:38:15] *** Quits: vats (~vats@180.149.226.242) (Ping timeout: 256 seconds)
[16:38:58] *** Joins: cdown (~cdown@163.114.131.1)
[16:39:31] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:39:51] *** iNKa is now known as Brocker
[16:40:22] *** Quits: Algernon69 (~Algernon6@2a04:cec0:10b2:4cc6:64f3:cef2:5b2f:1a09) (Ping timeout: 268 seconds)
[16:40:49] *** Joins: luigibu (~luigi@225.red-79-159-194.dynamicip.rima-tde.net)
[16:41:49] *** Joins: hyskaru (~hyskaru@lfbn-tou-1-444-209.w86-206.abo.wanadoo.fr)
[16:41:57] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[16:42:43] *** Joins: shad (~shad@user/shad)
[16:43:29] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[16:44:30] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 250 seconds)
[16:46:30] *** Quits: DK3 (~DK3@rs000042.fastrootserver.de) (Changing host)
[16:46:30] *** Joins: DK3 (~DK3@user/DK3)
[16:47:09] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[16:47:20] <wyre> cannot I do `from datetime.datetime import now`?
[16:47:27] <lericson> no
[16:47:32] <lericson> datetime.now is a classmethod
[16:47:45] <wyre> so ... `from datetime import datetime.now`?
[16:47:56] <lericson> from datetime import datetime
[16:48:11] <wyre> lericson, so I cannot use just now(), right?
[16:48:16] <lericson> correct
[16:48:17] <The-Compiler> I really wish datetime.datetime was called DateTime instead...
[16:48:18] *** Quits: acresearch (~acresearc@user/acresearch) (Quit: WeeChat 2.8)
[16:48:20] <lericson> unless you go now = datetime.now
[16:48:54] <lericson> i don't actually know why python makes the distinction but it does
[16:49:01] *** Quits: hyskaru (~hyskaru@lfbn-tou-1-444-209.w86-206.abo.wanadoo.fr) (Changing host)
[16:49:01] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[16:49:25] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[16:49:31] <nedbat> lericson: which distinction?
[16:49:47] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[16:50:14] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Quit: hyskaru)
[16:50:32] *** Joins: someuser (~user@197.54.4.96)
[16:51:13] <deniska> lericson: `from .. import ..` only imports top level names from modules
[16:51:23] <deniska> I guess that simplifies stuff
[16:51:37] <jinsun> you can do weird stuff like sys.modules["datetime.datetime"] = datetime.datetime
[16:51:45] <jinsun> then `from datetime.datetime import now` works
[16:51:48] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[16:51:56] <deniska> cursed
[16:51:57] <The-Compiler> oof
[16:52:19] <lericson> arguably the more obvious thing would be for importing to work like any attribute acces
[16:52:22] <lericson> s
[16:52:30] <hrob> actually my parsing problem is too simple for a parser I guess, I just need to find the first non-numeric char in a string
[16:52:44] <lericson> hrob: regex?
[16:52:44] <nedbat> hrob: sounds like a regex
[16:52:48] <lericson> [^\d]
[16:52:54] *** Quits: czard_ (~quassel@host-78-150-125-181.as13285.net) (Quit: No Ping reply in 180 seconds.)
[16:52:56] <hrob> yup lol
[16:53:05] <lericson> hell you don't even need regex
[16:53:12] <lericson> next(s for s in str if not s.isdigit())
[16:53:32] <hrob> lericson yes avoiding regex is always more readable -- no need for overkills
[16:54:13] <hrob> lericson well, I do need to find the index of that first non numeric
[16:54:14] *** Joins: DaNeenjah (~jake@adsl-74-230-4-35.hsv.bellsouth.net)
[16:54:14] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[16:54:17] *** Joins: czard_ (~quassel@host-78-150-125-181.as13285.net)
[16:54:20] <hrob> so maybe its regex again
[16:54:47] <lericson> next(i for i, s in enumerate(str) if not s.isdigit())
[16:55:15] <hrob> lol yeah, seems suboptimal maybe, but definitely readable
[16:55:24] <lericson> regex isn't going to be faster i don't think
[16:55:50] <deniska> Now regex might be more readable than index-wrangling :)
[16:56:01] <hrob> Ive never checked it... lol... but I always thought the re.compile or whatever method was doing something fancy
[16:56:25] <lericson> this is trivial code, not sure what's so confusing
[16:56:27] <deniska> hrob: can you show an example string and what you want to extract from it?
[16:57:14] *** Joins: Adoi (~Adoi@user/adoi)
[16:57:15] *** Joins: Adois (~Adoi@user/adoi)
[16:57:17] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[16:57:40] *** Quits: Adois (~Adoi@user/adoi) (Remote host closed the connection)
[16:57:56] <hrob> deniska thanks, well I have a string "<digits><something else than digit>"  e.g.  "10abc" or "10-30"  want to split it to "10", "abc" ... but deniska you just showed me how dumb Im being...
[16:58:06] <hrob> this is not going to be a long string at all lol
[16:58:10] <exarkun> Did PyPy ever land any meaningful regexp jit functionality?
[16:58:25] <The-Compiler> lericson, hrob: looks like regexes are faster as the string gets longer
[16:58:30] <Adoi> hello, in line 17 here; https://bpa.st/UXOQ, how is it that the function itself can be run within the same function ?!
[16:58:56] <hrob> yeah... this is a dumb, non-problem.... going to loop this one.
[16:59:07] <lericson> hrob: i would probably re.split tbh
[16:59:20] <Adoi> in other words, should it not be added outside of the function? (yet the code is correct!)
[16:59:26] <The-Compiler> lericson, hrob: https://paste.the-compiler.org/view/780f02a8
[16:59:29] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:59:36] <exarkun> Adoi: It's called "recursion".  Are you familiar?
[16:59:39] <lericson> The-Compiler: gotta say i don't care much for microbenchmarks
[16:59:39] <deniska> hrob: because, say, if your goal is to actually find a number, you can do re.search(r'\d+', 'abc13cde')[0] -> '13'
[16:59:40] <Adoi> (or is it?)
[16:59:48] <The-Compiler> (sorry, slightly confusing order)
[16:59:50] <The-Compiler> lericson: fair
[17:00:15] <lericson> always prioritize showing your intent, that's where you're going to get stuck anyway
[17:00:39] <exarkun> Adoi: Whether it is correct or not depends on the intent of the author, which we have no way of knowing.  But just because there is recursion does not mean it is wrong.
[17:00:41] <The-Compiler> lericson: agreed, you were the one mentioning speed, not me :P
[17:00:44] <lericson> if this turned out to be performance critical, you can easily make this a zillion times faster using $favorite_speedup_tool
[17:00:50] <exarkun> Adoi: https://en.wikipedia.org/wiki/Recursion_(computer_science)
[17:00:53] <lericson> i did not, hrob did, The-Compiler
[17:00:58] *** Joins: Algernon69 (~Algernon6@2a04:cec0:10b2:4cc6:64f3:cef2:5b2f:1a09)
[17:01:26] <The-Compiler> lericson: I don't see them mentioning speed anywhere, but whatever :)
[17:01:32] *** Joins: nceric (~nceric@76-217-82-15.lightspeed.chrlnc.sbcglobal.net)
[17:02:14] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[17:02:18] <exarkun> Anyone used sphinx-redoc?  It generates worse output than the host redoc service.  I wonder if that's on purpose to convince me to pay for the hosted service or if I'm doing something wrong.
[17:02:20] <lericson> that's how i interpreted their remark about suboptimality
[17:02:30] <hrob> The-Compiler, deniska, and all,  thanks!  Plenty of options lol, sorry for the dumb question,  I forgot that I have a trivially small string actually -- I like the benchmarks
[17:02:53] <The-Compiler> hrob: no worries, as you can see it was an interesting question
[17:02:53] *** Quits: gjvc (~gjvc@user/gjvc) (Ping timeout: 250 seconds)
[17:02:58] <lericson> if you really want speed, use SIMD instructions for this
[17:03:01] *** Quits: luigibu (~luigi@225.red-79-159-194.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[17:03:10] <lericson> it'll zoom so fast your head'll spin off
[17:03:13] <hrob> yes, lol, always good to think what is optimal, this case just silly
[17:03:19] <nceric> I have a dict of string to two numbers (a min and a max).  The min and max will change over time so it should be mutable, so I'm thinking Dict[str, List[int]], but the List[int] will always be length 2.  Is there a way to specify that?
[17:03:59] <hrob> lericson I have actually programmed SIMD instructions, wonderful stuff,  if I want to mess with the brains of my code reviewer or a prank I'll do that lol !!
[17:04:00] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[17:04:04] <lericson> nceric: what about that typed dict stuff
[17:04:22] <nceric> typed dict?
[17:04:27] <lericson> nceric: https://docs.python.org/3/library/typing.html#typing.TypedDict
[17:05:03] <nceric> yeah, I could use a dataclass too.
[17:05:11] *** Joins: grooverman (~grooverma@177.102.119.200)
[17:05:28] <jinsun> nceric: you can't specify length 2 list, only tuples have that feature, and yeah you can just make a class always
[17:05:33] <The-Compiler> nceric: I don't understand the "should be mutable, so I need to use a list" part. Why not change the dict values?
[17:05:50] <lericson> he needs a mutable type of non-varying size
[17:06:08] <lericson> and yeah pretty much just make a dataclass or typeddict
[17:06:11] <exarkun> nceric: Consider making something more like a record type to replace the list
[17:06:21] <exarkun> Yea, dataclass, or better yet, @attr.s
[17:06:21] <nceric> jinsun, need a mutable tuple so I can say data[key][0] = new_min ... or data[key][1] = new_max
[17:06:40] <exarkun> `data[key].min = new_min` is so much nicer, don't you think?
[17:06:59] <lericson> what about algebraic datatypes
[17:07:02] <lericson> ok i'll shut up
[17:07:47] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:07:47] *** Quits: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[17:07:48] <jinsun> nceric: yeah that's not possible with lists, you can make some fancy class that takes only Literal 0 and 1 in getitem, but better to have those as named attributes really if you are making a class anyway
[17:07:57] *** Quits: XV8 (~XV8@2601:5cb:c001:50:d0cb:b834:298c:b12d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:08:30] *** Joins: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[17:08:44] <nceric> The-Compiler because I hate indexing things with strings now that I use f-strings a lot.  print(f"max value for {key} is {data[key]['min']}")
[17:08:52] *** Joins: XV8 (~XV8@2601:5cb:c001:50:d0cb:b834:298c:b12d)
[17:08:56] *** Joins: synaps3 (~void@user/synaps3)
[17:09:04] <exarkun> it's easy.  https://gist.github.com/exarkun/942db8dbbc09dfa9d9213ae4a7e73e8e for example
[17:09:24] <lericson> [achievement unlocked: extraneous third party dependency]
[17:09:27] <jinsun> nceric: the question was why not replace the entire tuple with a new tuple in the dict, instead of mutating the list
[17:09:28] <The-Compiler> nceric: indeed sounds like a job for a dataclass then
[17:09:36] <exarkun> lericson: I don't think "extraneous" is the word you're looking for
[17:09:57] <lericson> it is
[17:10:02] <lericson> but thanks for looking out for me
[17:10:04] <The-Compiler> exarkun: I don't see a reason to use attrs over (stdlib) dataclasses for trivial stuff like this
[17:10:28] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Quit: Konversation terminated!)
[17:10:42] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:10:43] <exarkun> Gosh, why so defensive over one tiny example?
[17:10:54] <jinsun> yeah now 3.6 is EOL dataclasses are available in all supported versions
[17:11:05] <exarkun> I'm not shoving anything down anybody's throat
[17:11:09] <xheimlich> I've noticed that "from . import *" doesn't work. What would?
[17:11:12] <nceric> jinsun, yeah... that's an option since it's just 2 values.  I think it's a bit ugly to assign a value that isn't changing.  data[key] = new_min, existing_max ... I'm overthinking it.  Gonna use a dataclass called MinMax with min and max attributes.
[17:11:31] <exarkun> Nobody's used sphinx-redoc, eh? :/
[17:11:48] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 250 seconds)
[17:12:00] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[17:12:17] *** Quits: maryo_87 (~Maryo@user/maryo) (Ping timeout: 240 seconds)
[17:13:34] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[17:14:09] *** Joins: Vonter (~Vonter@user/vonter)
[17:14:14] <Adoi> exarkun, makes logical sense in terms of the recursive pace of that particular code, but just technically makes me wonder how it is possible, considering the fact that a function is called from within itself.
[17:14:28] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[17:14:29] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[17:14:41] <Adoi> )or maybe that is what recursion is about?)
[17:14:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[17:15:15] <exarkun> Adoi: "A function calls itself" is indeed pretty recursion, yea.
[17:15:30] <Adoi> right
[17:16:11] *** Joins: cewood (~cewood@ip5b417897.dynamic.kabel-deutschland.de)
[17:16:13] *** Quits: edd_lc (~manjaro-i@85.64.207.99.dynamic.barak-online.net) (Ping timeout: 240 seconds)
[17:16:34] <Adoi> "Recursion solves such recursive problems by using functions that call themselves from within their own code."
[17:16:35] *** Joins: luigibu (~luigi@225.red-79-159-194.dynamicip.rima-tde.net)
[17:16:56] <exarkun> Adoi: I don't know of a good Python recursion introduction specifically, but I think people like realpython, so maybe https://realpython.com/python-recursion/ is good
[17:17:20] <jinsun> xheimlich: the obvious one is specify each module explicitly
[17:17:25] <Wooble> it should just say "don't do it, you don't need it and there's no TCO"
[17:17:48] <exarkun> Adoi: It's an extremely powerful (and foundational to computer science) idea that you should definitely learn about.
[17:18:26] <exarkun> Adoi: As Wooble suggests, Python does not support it as well as other languages - but even in Python you'll still probably encounter it and find it useful from time to time, and even if you don't use it, *knowing* about it will help your programming skills overall.
[17:19:00] <exarkun> (After you learn about it in general, do make sure you learn about its limitations in Python)
[17:19:13] *** Quits: upsala (~zcb@185.209.196.169) (Ping timeout: 268 seconds)
[17:19:13] <Wooble> granted there are cases where the iterative equivalent is much less readable and you didn't need TCO :)
[17:19:57] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[17:20:32] <jinsun> Adoi: just don't use it to loop because you get only 1000 iterations, the good use is for traversing nested structures like your code was doing, you're unlikely to have 1000 levels deep html tags
[17:20:38] *** Joins: upsala (~zcb@185.213.155.232)
[17:21:06] <exarkun> Of course, it's a bummer when someone realizes this and throws a too-nested data structure at your program to ruin your day (or maybe even just by accident)
[17:21:15] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[17:21:46] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[17:24:37] <Adoi> jinsun, yes, my resource (in web scraping context) warns about the same, and suggests using a recursion counter to overcome the limit
[17:26:00] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[17:26:28] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[17:26:46] *** Joins: BSaboia_ (~bsaboia@187.19.139.6)
[17:26:48] *** Quits: duds- (~duds-@gateway/tor-sasl/duds) (Remote host closed the connection)
[17:26:49] <jinsun> Adoi: don't try to raise it too much, you might end up with a segfault
[17:26:51] *** Quits: luigibu (~luigi@225.red-79-159-194.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[17:27:02] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[17:27:24] *** Joins: bluedust_ (~bluedust@103.165.167.52)
[17:27:44] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[17:27:55] *** Quits: Guest19 (~Guest19@2601:647:5280:2a50:6902:1585:61e9:45ff) (Ping timeout: 256 seconds)
[17:28:32] *** Joins: luigibu (~luigi@225.red-79-159-194.dynamicip.rima-tde.net)
[17:29:25] *** Joins: Deana (~Deana@188.18.196.125)
[17:29:43] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:30:05] <Adoi> jinsun, right, given the possible sizes of data volume
[17:30:17] *** Quits: bluedust (~bluedust@103.165.167.52) (Ping timeout: 240 seconds)
[17:30:37] *** Quits: Jong (~Jong@2620:10d:c090:400::5:4f54) (Ping timeout: 240 seconds)
[17:31:37] *** Quits: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:32:10] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 268 seconds)
[17:32:35] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:3c94:4d95:8b82:322b)
[17:33:40] *** Joins: thiras (~thiras@user/thiras)
[17:33:42] <Adoi> thank you all very much for your insights and links!
[17:33:49] <Adoi> reading them now :)
[17:34:12] *** Joins: duds- (~duds-@gateway/tor-sasl/duds)
[17:34:21] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[17:34:31] *** Joins: Guest51 (~Guest51@41.90.66.200)
[17:34:48] *** Joins: the_lanetly_052_ (~the_lanet@194.135.153.167)
[17:35:04] *** Quits: Guest51 (~Guest51@41.90.66.200) (Client Quit)
[17:35:15] *** Quits: awmv_username_ta (~awmv@2a02:21b0:644f:c181:61e0:c183:96:f0c8) (Ping timeout: 268 seconds)
[17:35:32] *** Joins: eltronix (~eltronix@41.90.66.200)
[17:36:06] <eltronix> oh my python
[17:38:17] *** Quits: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Quit: Client closed)
[17:38:56] *** Quits: Nutte35 (~Nutte@202.153.82.40) (Read error: Connection reset by peer)
[17:39:15] *** Joins: Vonter (~Vonter@user/vonter)
[17:39:19] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[17:39:42] *** Joins: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com)
[17:40:01] *** Joins: bloody (~bloody@user/bloody)
[17:41:19] *** Quits: eltronix (~eltronix@41.90.66.200) (Remote host closed the connection)
[17:41:53] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[17:42:17] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[17:43:02] *** Quits: BSaboia_ (~bsaboia@187.19.139.6) (Quit: Leaving)
[17:43:17] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Ping timeout: 240 seconds)
[17:43:32] *** Joins: roxfan (~roxfan@185.206-129-109.adsl-dyn.isp.belgacom.be)
[17:43:56] *** Joins: Nutte35 (~Nutte@202.153.82.40)
[17:43:59] *** Quits: roxfan2 (~roxfan@185.206-129-109.adsl-dyn.isp.belgacom.be) (Ping timeout: 256 seconds)
[17:44:38] *** Joins: Babar (~Babar@2405:4803:a04c:a7e0:d00a:2e86:44bd:9d44)
[17:44:44] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 250 seconds)
[17:45:59] *** Joins: frost (~frost@user/frost)
[17:46:10] <xheimlich> does anyone use the minimap in sublime/vscode for real? it's pretty, but I can't tell much from it.
[17:46:50] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[17:47:04] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[17:47:57] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[17:49:19] <eXtr3m0> I use it
[17:49:29] *** Joins: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net)
[17:49:43] <eXtr3m0> I've plugin to include ASCII gfx style text blocks that are very visible on the minimap.
[17:49:50] <Adoi> does anyone by chance know a way to correct indentation within jupyter?
[17:50:33] <eXtr3m0> xheimlich its not a perfect example, but you see some ascii art here: https://i.imgur.com/5miCCNc.png
[17:51:03] <Adoi> that is, a shorter way than saving code as file and then running autopep8 :)
[17:51:13] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[17:51:47] <grym> Adoi: ipython8 supports auto-blackening cells before running them
[17:51:48] <eXtr3m0> xheimlich we're using this font which is very visible on the minimap: https://patorjk.com/software/taag/#p=display&f=ANSI%20Shadow&t=METHODS%0A
[17:52:33] <grym> Adoi: https://github.com/csurfer/blackcellmagic  might work?
[17:53:10] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:53:50] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 250 seconds)
[17:54:42] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[17:54:54] *** Quits: oscurochu (~oscurochu@097-096-050-227.res.spectrum.com) (Remote host closed the connection)
[17:55:38] *** Quits: Algernon69 (~Algernon6@2a04:cec0:10b2:4cc6:64f3:cef2:5b2f:1a09) (Read error: Connection reset by peer)
[17:55:57] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[17:56:03] *** Joins: Algernon69 (~Algernon6@2a04:cec0:10b2:4cc6:64f3:cef2:5b2f:1a09)
[17:56:09] *** Joins: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de)
[17:56:59] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:57:36] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[17:58:23] <Adoi> grym, thank you! I will try that
[18:00:05] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[18:00:07] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[18:01:13] *** Joins: fef (~thedawn@user/thedawn)
[18:01:16] *** Joins: Vonter (~Vonter@user/vonter)
[18:03:00] *** Quits: meder (~meder@c-65-34-244-236.hsd1.fl.comcast.net) (Read error: Connection reset by peer)
[18:04:05] *** Quits: dgw (dgw@sopel/admin/dgw) (Quit: Stalemate resolved. Core transfer initiated.)
[18:04:23] *** Joins: dgw (dgw@sopel/admin/dgw)
[18:04:40] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Ping timeout: 250 seconds)
[18:04:57] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[18:05:16] <xheimlich> eXtr3m0: oh cool.
[18:06:17] *** Quits: the_lanetly_052_ (~the_lanet@194.135.153.167) (Remote host closed the connection)
[18:07:09] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[18:07:18] *** Quits: vladoski (~foo@2001:b07:add:d406:a908:aca8:6f2f:4bb7) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:08:21] *** Quits: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[18:08:59] *** Joins: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[18:09:00] *** Joins: vladoski (~foo@2001:b07:add:d406:a908:aca8:6f2f:4bb7)
[18:09:10] *** Quits: odwtt_ (~odwtt@96.74.34.85) (Ping timeout: 268 seconds)
[18:10:26] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::a)
[18:10:55] <petaflot> hello! I have this weird issue, maybe someone can tell me what I'm missing out? I have a class with a `def reorder(self, args): return ( args[self._reorder[0]], args[self._reorder[1]], args[self._reorder[2]] )` ; when I call it with `args2 = self.myClass.reorder( (w0, w1, w2) )` I get "AttributeError: 'tuple' object has no attribute '_reorder'". If I call it with `args2 = self.myClass.reorder(
[18:11:01] <petaflot> self.myClass, (w0, w1, w2) )` it runs as expected. Why do I need to pass self=self.myClass ?!?
[18:12:18] *** sandipan is now known as bytehackr
[18:13:12] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[18:13:17] *** Quits: bytehackr (~Sandipan@43.252.250.126) (Remote host closed the connection)
[18:13:42] *** Joins: BSaboia (~bsaboia@2a05:f480:1400:b88:5400:3ff:fe51:575c)
[18:14:02] <exarkun> petaflot: Can you put your code in a pastebin for us?  (eg gist.github.com)
[18:14:13] *** Quits: cheater (~Username@user/cheater) (Quit: (BitchX) The Power Rangers use BitchX. Shouldn't you?)
[18:14:13] *** Quits: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:14:44] <petaflot> exarkun: no... too complicated to do so
[18:14:45] <exarkun> petaflot: It sounds like your `reorder` method might be defined wrong but it's hard to tell without actually seeing the definition.
[18:14:58] <exarkun> petaflot: Isolating a minimal example will be a good exercise, then
[18:15:09] *** Quits: bitblit_ (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 276 seconds)
[18:15:11] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:15:25] <exarkun> petaflot: Copy the class, start deleting stuff that's not relevant to the problem until you can't find anything else, share what's left.
[18:15:30] <petaflot> or you can see this bit here : https://bpa.st/AAHQ it's part of myClass
[18:16:24] <exarkun> It doesn't look like `__str__` and `__repr__` are especially relevant to the question
[18:16:25] *** Joins: bitblit_ (~bitblit@gateway/tor-sasl/bitblit)
[18:16:31] <exarkun> So I still don't know the answer.
[18:16:36] *** Joins: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net)
[18:17:18] *** Quits: drewnix (~textual@c-73-118-230-129.hsd1.wa.comcast.net) (Client Quit)
[18:17:32] <petaflot> exarkun: they're not really, unless one wants to see they are also defined in pretty much the same way (and they work as expected, like all other functions in this class
[18:17:37] <Wooble> "it's too complicated to make a gist so i'll post the code directly in the channel" is a weird take.
[18:17:46] <exarkun> Check this out: https://gist.github.com/exarkun/1752bfc8618f13847222f85e8e0fdd39
[18:18:23] <exarkun> petaflot: Sure.  So I guessed wrong.  I'm not surprised at all.  That's why I actually like to see the code. :)
[18:18:56] *** Joins: Viewday11 (~Viewday@user/viewday)
[18:18:57] *** Quits: Milijus (~Milijus@2601:580:4500:1305:e6e7:49ff:fe47:5310) (Ping timeout: 240 seconds)
[18:19:08] <exarkun> petaflot: See how I had to include other code that I made up in my version?  I have no idea if that's anything like what you have ... just guessing again.  I probably guessed wrong!  I'd love to help if you show me the code.
[18:19:30] *** Joins: Babar_ (~Babar@118.71.125.169)
[18:19:30] *** Babar is now known as Guest758
[18:19:30] *** Babar_ is now known as Babar
[18:19:42] <petaflot> well what you shhow is exactly what I would expect.. just the fact it could go wrong is getting me puzzled. and I found a workaround, so it's not massively important except for the sake of curiosity
[18:19:44] <exarkun> Chances are you'll find the bug yourself as you produce a self-contained, complete example
[18:20:12] *** Joins: moog (~moog@107.77.244.129)
[18:20:15] * exarkun shrugs
[18:20:40] <petaflot> I'll leave a note in the code to make it obvious ;-)
[18:20:43] <exarkun> I'm not gonna try to drag it out of you, if you don't want to figure it out
[18:21:14] <petaflot> it's not that I don't want.. I don't have the time and energy required to strip it down in a sharable format
[18:21:28] *** Joins: cheater (~Username@user/cheater)
[18:21:31] <exarkun> Good luck
[18:21:57] *** Quits: Guest758 (~Babar@2405:4803:a04c:a7e0:d00a:2e86:44bd:9d44) (Ping timeout: 240 seconds)
[18:22:17] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[18:22:20] <petaflot> thanks
[18:23:06] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: leaving)
[18:23:08] * petaflot was hoping there was a frequent cause to such a problem
[18:23:51] <sco1> Yes, getting a tuple instead of the class instance.
[18:24:12] <exarkun> I could keep guessing, but it's not much fun and I have other more fruitful stuff to do.
[18:24:15] <sco1> How that's happening is, well, a mystery only you're able to solve.
[18:24:20] *** Joins: mickey83 (~user@user/mickey)
[18:24:34] *** Joins: viaSanctus (~viaSanctu@user/viasanctus)
[18:25:01] *** Joins: saroy (~Sandipan@43.252.250.126)
[18:25:02] *** Quits: ecool (~ecool@ecool.dev) (Ping timeout: 240 seconds)
[18:25:15] *** saroy is now known as bytehackr
[18:26:09] *** Joins: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com)
[18:26:29] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[18:26:34] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:26:40] *** Joins: ecool (~ecool@ecool.dev)
[18:26:51] *** Quits: mickey8 (~user@user/mickey) (Ping timeout: 276 seconds)
[18:26:51] *** mickey83 is now known as mickey8
[18:27:03] *** Joins: Viewday11 (~Viewday@user/viewday)
[18:27:12] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::a) (Ping timeout: 250 seconds)
[18:27:25] *** Joins: awmv_username_ta (~awmv@2a02:21b0:644f:c181:75c6:b006:1d48:37a7)
[18:28:30] *** Joins: pro_z_ (~pro_z@37.214.69.237)
[18:28:45] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[18:30:10] *** Quits: synaps3 (~void@user/synaps3) (Quit: Leaving)
[18:30:58] *** Joins: zeden (~zeden@user/zeden)
[18:31:01] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:3c94:4d95:8b82:322b) (Ping timeout: 240 seconds)
[18:31:55] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[18:33:52] *** Joins: Liblx (~Alex@2a02:810c:280:59c:ccf:2ed2:f415:b4be)
[18:34:26] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[18:34:28] *** Joins: IcareDixit (~IcareDixi@84.241.204.25)
[18:34:32] *** Quits: nceric (~nceric@76-217-82-15.lightspeed.chrlnc.sbcglobal.net) (Quit: Client closed)
[18:35:18] *** Quits: jug (~jug@user/jug) (Quit: WeeChat 3.4)
[18:35:51] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::a)
[18:36:37] *** Quits: noyb (~noyb@user/noyb) (Ping timeout: 240 seconds)
[18:36:45] *** Joins: noyb (~noyb@user/noyb)
[18:37:21] *** Joins: kmh (~kmh@2a00:6020:5004:6800:f5f6:d4b7:72a4:74f1)
[18:37:58] *** Parts: IcareDixit (~IcareDixi@84.241.204.25) ()
[18:38:02] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 250 seconds)
[18:38:42] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-581d-557b-3426-2cff.res6.spectrum.com)
[18:38:56] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[18:40:21] *** Joins: jug (~jug@user/jug)
[18:41:46] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc)
[18:42:14] *** Joins: Jong (~Jong@2620:10d:c090:400::5:78f7)
[18:42:22] *** Joins: stdout (~stdout@2605:ab80:b000:7202:3e12:af82:936c:2ff6)
[18:42:41] <altendky> i did a quick search of a few linters but didn't see an option to require passing by name when calling function.  does anyone know of such a feature in a linter?  that is to complain about `f(3)` and not `f(number=3)`.
[18:42:55] <Wooble> uh, they're calling an unbound instance method without an instance. not really a mystery.
[18:43:07] *** Joins: esther (~esther@2607:fb90:5fe5:8872:ba51:88c6:575f:86d7)
[18:43:38] *** Quits: dbristow (~dbristow@user/dbristow) (Read error: Connection reset by peer)
[18:43:44] *** Joins: subopt (~subopt@2603-8081-2302-459a-480f-254b-3ab7-7488.res6.spectrum.com)
[18:45:17] <sco1> altendky: do you mean to make this always an error or just if the called function has keyword arguments?
[18:45:24] <sco1> The latter is much more difficult
[18:45:35] *** Joins: dbristow (~dbristow@user/dbristow)
[18:45:37] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[18:45:39] <sco1> (from the perspective of static analysis)
[18:45:47] *** Joins: maryo (~Maryo@user/maryo)
[18:45:49] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[18:46:09] *** Joins: kijix\ (~shinomori@c-73-143-164-176.hsd1.ct.comcast.net)
[18:46:11] <altendky> always an error would have too many false positives to be useful.  but given that 'linters' can check if you are passing invalid keyword args, this doesn't seem to be that much bigger of a deal?
[18:46:21] <altendky> pylint and mypy anyways
[18:46:38] *** Joins: shad (~shad@user/shad)
[18:46:39] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[18:46:46] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[18:46:58] <Wooble> altendky: if these are your own functions, IMO better to just make them kw-only than considering it a style choice.
[18:47:17] *** Quits: esther (~esther@2607:fb90:5fe5:8872:ba51:88c6:575f:86d7) (Ping timeout: 240 seconds)
[18:47:25] <Wooble> (if not, well... I'm not aware of a linter that can do that but would be a nice feature)
[18:47:36] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[18:47:36] *** Quits: Knaldgas (~Per@193.235.229.50) (Quit: Leaving)
[18:47:44] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[18:47:56] <altendky> `:]`  i have considered doing that on various occasions.  i'm looking for a thing that i can turn on for new files to force this on others
[18:48:29] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[18:50:01] <altendky> like i'm trying to turn on stricter mypy and isort at least for new files.  then we can piece by piece go back and fix the existing stuff.  but at least the mess isn't growing.
[18:50:03] <Wooble> I'd certainly expect this isn't much harder to implement in pylint than E1124
[18:50:10] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 250 seconds)
[18:50:12] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[18:50:14] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[18:50:59] *** Joins: Vonter (~Vonter@user/vonter)
[18:50:59] <SnoopJ> I dunno about doing it in an extant linker but it would be relatively straightforward to write a NodeVisitor for this: find the Call nodes and check their .args attribute
[18:51:02] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[18:51:07] <altendky> yeah, i guess i should get back in the habit of contributing what i want.  thanks.
[18:51:08] <SnoopJ> oops, linter, not linker
[18:51:26] <sco1> SnoopJ: What if it's in another file?
[18:51:49] *** Quits: Deana (~Deana@188.18.196.125) (Quit: Konversation terminated!)
[18:52:33] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 256 seconds)
[18:52:41] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[18:54:16] <Wooble> I just found a plugin that checks kwargs are passed in alphabetical order and umm whaaaa
[18:54:38] <altendky> consistency has value `:]`
[18:55:00] <altendky> just better use natsort to get numbers etc right in there...
[18:55:11] <SnoopJ> sco1, what if what's in another file?
[18:55:15] *** Joins: crashrep (~crashrep@user/crashrep)
[18:55:37] <Wooble> "pylint-quacking: Ban annotations. Ducks rule!"
[18:55:46] *** Joins: Guest1778 (~Guest1778@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[18:55:55] <sco1> The function node
[18:56:24] *** Joins: zrsm (~mrrobot@173.171.254.123)
[18:56:54] *** Quits: grundrausch3n (~grundraus@p200300e9ef1e6d00cd435cd27fd11e23.dip0.t-ipconnect.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:57:05] <SnoopJ> I read the question as "is there a linter that complains about any positional arguments" which doesn't require any information outside the Call but maybe it's slightly different
[18:57:05] *** Quits: d1cor (~diego@179.63.242.120) (Ping timeout: 256 seconds)
[18:57:07] <Wooble> altendky: I'm nowhere near through the 80 pages of pypi search results for "pylint" but at this point I'll be surprised if someone didn't already write what you want because they sure seem to have written everything else :)
[18:57:29] *** Quits: emerent (~quassel@p200300cd57044376ba27ebfffed28a59.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[18:57:32] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[18:57:38] <sco1> SnoopJ: That's why I asked the clarifying question of "all calls or just if the function defines keyword arguments"
[18:57:57] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[18:58:02] <altendky> yeah, you need to know it actually takes them.  i didn't get into those details
[18:58:14] <altendky> plenty of stdlib calls are positional only for some arguments
[18:58:17] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[18:58:27] <SnoopJ> sco1, okay, then the answer to your question is "you end up writing all the other stuff that goes into a static analysis tool and probably you just want to modify an existing one"
[18:58:43] <vladoski> guys I have a question about closures. I understand if I have an inner function that adds stuff to a list, if i do foo.append(3) works even without nonlocal and If I do foo += [3] I have to specify that foo is non local
[18:58:43] *** Joins: emerent (~quassel@p200300cd57044376ba27ebfffed28a59.dip0.t-ipconnect.de)
[18:58:45] <altendky> agreed, that layer is already handled
[18:58:56] <vladoski> BUT, I don't really understand why since list is mutable
[18:59:00] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[18:59:17] <altendky> vladoski: one is just accessing a method, the other is doing assignment and needs to know what scope to look in for the thing to assign to
[18:59:18] <vladoski> list _iadd_ returns the same object and doesn't create a new one
[18:59:28] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[18:59:32] <Wooble> altendky: https://pypi.org/project/flake8-force-keyword-arguments/ looks close.
[18:59:49] <vladoski> altendky i can understand if I really reassign it, but since list's __iadd__ returns the same object, why is that?
[18:59:52] *** Quits: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com) (Remote host closed the connection)
[19:00:27] *** Quits: Algernon69 (~Algernon6@2a04:cec0:10b2:4cc6:64f3:cef2:5b2f:1a09) (Read error: No route to host)
[19:00:34] <altendky> vladoski: same object or not doesn't relate to whether a thing is assignment or not.  i see an `=` there so it makes sense to me for it to behave this way.
[19:00:37] <SnoopJ> vladoski, you *are* "really reassigning it" because += is an assignment operator
[19:00:37] *** Joins: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com)
[19:00:44] <vladoski> i can understand that with tuples since I'm creating another object with += but the list is the same
[19:01:00] <bjs> vladoski: += always assigns
[19:01:05] *** Joins: Vision-_- (~Vision@097-087-115-181.res.spectrum.com)
[19:01:08] *** Quits: Vision-_- (~Vision@097-087-115-181.res.spectrum.com) (Client Quit)
[19:01:10] <altendky> vladoski: this is about names, not objects
[19:01:20] <altendky> names/variables/whatever term you prefer
[19:01:40] <bjs> vladoski: `x += y` is always doing `x = <something>`  so that's why locals/nonlocals matter because it's an assignment
[19:02:02] *** Quits: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com) (Read error: Connection reset by peer)
[19:02:04] <SnoopJ> think of it as analogous to `x = x + y` even though mechanically it's a little different
[19:02:08] <altendky> if it were about the objects then `x = x` wouldn't be an assignment.  which would be odd.
[19:02:21] *** Joins: edd_lc (~manjaro-i@85.64.207.99.dynamic.barak-online.net)
[19:02:21] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[19:02:28] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[19:02:46] *** Joins: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com)
[19:02:47] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[19:03:37] <vladoski> aahhh okay so even with __iadd__ it's still an assignment, like x = x.__iadd__()
[19:03:38] <altendky> Wooble: thanks, i'll give that a lookover
[19:03:44] <vladoski> okok understood thanks guys
[19:03:47] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[19:04:10] *** Joins: akk (~akk@75-161-95-245.albq.qwest.net)
[19:04:12] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[19:04:21] <altendky> vladoski: i don't know the implementation details underneath, but from a 'looking at the code' perspective, yeah, i see an equals so i expect it to act in an assignment'y way.
[19:04:36] *** Joins: Algernon69 (~Algernon6@2a04:cec0:10b2:4cc6:64f3:cef2:5b2f:1a09)
[19:05:46] <Wooble> x = ([],);x[0] += [1]
[19:07:02] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[19:08:42] *** Quits: czard_ (~quassel@host-78-150-125-181.as13285.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:08:48] *** Quits: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[19:09:25] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:2108:a651:422b:6577)
[19:09:30] *** Joins: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[19:09:36] *** Joins: han-solo (~han-solo@user/han-solo)
[19:09:37] *** Quits: Nutte35 (~Nutte@202.153.82.40) (Ping timeout: 240 seconds)
[19:09:39] <bjs> Wooble: bad
[19:09:57] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[19:10:58] *** Quits: MarkWatson[m] (~markwatso@2001:470:69fc:105::1:5be8) (Quit: Client limit exceeded: 20000)
[19:11:13] *** Quits: allegary (~allegary@apache/committer/gjm) (Quit: Client limit exceeded: 20000)
[19:11:21] *** Quits: ronny (~ronny@2001:470:69fc:105::b57) (Quit: Client limit exceeded: 20000)
[19:11:28] *** Quits: berton[m] (~berton@2001:470:69fc:105::ce36) (Quit: Client limit exceeded: 20000)
[19:11:58] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:12:32] *** Quits: awmv_username_ta (~awmv@2a02:21b0:644f:c181:75c6:b006:1d48:37a7) (Ping timeout: 240 seconds)
[19:12:46] *** Quits: dsrt^ (~dsrt@50-207-160-170-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[19:13:15] *** Joins: dez (uid92154@user/dez)
[19:13:32] *** Quits: Liblx (~Alex@2a02:810c:280:59c:ccf:2ed2:f415:b4be) (Ping timeout: 240 seconds)
[19:14:07] <Wooble> and yet it shows __iadd_ being called before the assignment
[19:14:29] *** Joins: allegary (~allegary@apache/committer/gjm)
[19:14:29] *** Joins: ronny (~ronny@2001:470:69fc:105::b57)
[19:14:29] *** Joins: berton[m] (~berton@2001:470:69fc:105::ce36)
[19:14:29] *** Joins: MarkWatson[m] (~markwatso@2001:470:69fc:105::1:5be8)
[19:15:23] *** Joins: Liblx (~Alex@2a02:810c:280:59c:ccf:2ed2:f415:b4be)
[19:15:35] *** Joins: the_lanetly_052 (~the_lanet@194.135.153.167)
[19:16:15] <Wooble> (although I guess += on immutables working at all also shows that)
[19:16:36] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 250 seconds)
[19:16:43] *** Quits: nmat[m] (~nmatm]@2001:470:69fc:105::1:5553) (Quit: Client limit exceeded: 20000)
[19:16:51] *** Quits: cecep[m] (~cecep@2001:470:69fc:105::3994) (Quit: Client limit exceeded: 20000)
[19:17:16] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[19:18:13] *** Quits: pankid (~quassel@pankid.club) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:18:33] *** Joins: pankid (~quassel@pankid.club)
[19:21:05] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Quit: leaving)
[19:21:49] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:4b40:4a4e:4f7c:125e) (Quit: pvergain)
[19:23:02] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:3f34:3b4:ccde:7533)
[19:23:19] *** Joins: Roey (~Roey@user/Roey)
[19:23:27] *** Joins: Arw| (~Arwalk@aaubervilliers-652-1-19-90.w90-35.abo.wanadoo.fr)
[19:24:24] *** Quits: Arw- (~Arwalk@lfbn-dij-1-1321-197.w92-141.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[19:25:24] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[19:25:45] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[19:25:52] *** Joins: avane (~avane@fsf/member/avane)
[19:25:58] <petaflot> https://bpa.st/X45Q problem with generator and strings... probably trivial? how to get proper colored display instead of displaying the control chars...
[19:26:06] <SnoopJ> you get an INPLACE_[OP] and a STORE_* for most (all?) of them
[19:26:13] *** Joins: cecep[m] (~cecep@2001:470:69fc:105::3994)
[19:26:13] *** Joins: nmat[m] (~nmatm]@2001:470:69fc:105::1:5553)
[19:26:43] <SnoopJ> for sure the operators themselves are doing assignment, hence the name "augmented assignment operator" :)
[19:26:49] *** Quits: someuser (~user@197.54.4.96) (Read error: Connection reset by peer)
[19:26:54] <bjs> petaflot: I don't think the generator has anything to do with it. You're just printing a list of strings, try print each string individually
[19:27:20] <avane> hey, I'm looking for the source code for the `isnumeric` str function though I can't seem to find it. where can I find it?
[19:27:47] <bjs> avane: well, I should ask what are you hoping to find there?
[19:27:59] <avane> just curious how it works
[19:28:02] *** Quits: dgw (dgw@sopel/admin/dgw) (Read error: Connection reset by peer)
[19:28:53] <petaflot> bjs yes printing each string individually works. see lines 7-9
[19:29:35] *** Joins: maxzor (~maxzor@2a01cb04054faa0015a7d83ae77fdf50.ipv6.abo.wanadoo.fr)
[19:29:37] <bjs> petaflot: I mean see the difference between print("hello") and print(["hello"])  note how when printing a list, it prints the repr of each element, which escapes all the things
[19:29:44] <bjs> or "hello\\" maybe is a better example
[19:29:55] *** Quits: maxzor (~maxzor@2a01cb04054faa0015a7d83ae77fdf50.ipv6.abo.wanadoo.fr) (Read error: Connection reset by peer)
[19:30:09] *** Joins: maxzor (~maxzor@2a01cb04054faa0015a7d83ae77fdf50.ipv6.abo.wanadoo.fr)
[19:30:19] <SnoopJ> avane, it checks for Unicode's "numeric" property. impl is here: https://github.com/python/cpython/blob/main/Objects/unicodeobject.c#L12304-L12341 (most of the work is happening in the Py_UNICODE_ISNUMERIC() macro which ends up here: https://github.com/python/cpython/blob/main/Objects/unicodectype.c#L137-L145
[19:30:41] <bjs> avane: unicode defines a bunch of classes, one of which is "Numeric" and the isnumeric() function just checks for that
[19:30:45] *** Quits: Tier (~tier@37.214.41.167) (Quit: Leaving)
[19:30:45] <SnoopJ> in other words, Unicode already did all the hard work, CPython just has to read its notes
[19:30:50] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[19:31:04] *** Joins: JanC (~janc@user/janc)
[19:31:25] *** Joins: dgw (dgw@sopel/admin/dgw)
[19:31:37] <petaflot> bjs: "hello\\" is a good example yes... is there a way to avoid the escaping?
[19:31:39] <avane> alright cheers
[19:31:48] <bjs> petaflot: yes, print each element out individually
[19:31:51] *** Joins: mat001 (~mat001@213.143.69.121)
[19:32:01] <bjs> petaflot: print(some_list) will always do this.  you have to format things yourself or print them out yourself
[19:32:42] <bjs> petaflot: maybe you want something like print("[{}]".format(", ".join(f"{e!s}" for e in generator_of_strings)))
[19:32:46] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[19:33:06] <SnoopJ> avane, minor clarification: it checks for Numeric_Type in {Digit, Decimal, Numeric} as described in the doc https://docs.python.org/3/library/stdtypes.html#str.isnumeric
[19:33:21] <bjs> SnoopJ: are Digit and Decimal not also Numeric? :S
[19:33:24] <bjs> weird unicode
[19:33:26] <SnoopJ> bjs, IIRC Digit and Decimal are subtypes
[19:33:37] *** Quits: Liblx (~Alex@2a02:810c:280:59c:ccf:2ed2:f415:b4be) (Ping timeout: 240 seconds)
[19:33:38] <SnoopJ> but I don't know off the top of my head :)
[19:33:49] *** Quits: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com) (Read error: Connection reset by peer)
[19:33:57] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 240 seconds)
[19:34:14] <Wooble> bjs: don't look at what isalpha does :)
[19:34:25] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Read error: Connection reset by peer)
[19:34:57] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[19:35:03] <SnoopJ> bjs, a quick peek at section 4.6 of the standard suggests there's some historical cruft and that Digit isn't a useful distinction
[19:35:18] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[19:35:24] *** Joins: georgios (~georgios@user/georgios)
[19:35:25] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Quit: Leaving)
[19:35:42] *** Joins: Liblx (~Alex@2a02:810c:280:59c:ccf:2ed2:f415:b4be)
[19:35:42] <Wooble> ":finger-emoji:".isdigit()
[19:36:04] <SnoopJ> the "in the future" ruling there is "it'll just be Numeric if it's not Decimal"
[19:36:32] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 250 seconds)
[19:36:40] * CrtxReavr groans.
[19:36:43] *** Joins: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com)
[19:36:46] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[19:36:54] <petaflot> bjs: what's that trick called with {e!s} ? where can I read more about it?
[19:37:03] *** xavie1 is now known as xcombelle
[19:37:07] <bjs> petaflot: that's string formatting
[19:37:26] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[19:37:55] <SnoopJ> https://docs.python.org/3/library/string.html#format-string-syntax
[19:38:15] *** Joins: lispy (~lispy4@84.69.59.93)
[19:38:15] *** Joins: Barones (~Barones@user/Barones)
[19:38:18] *** Joins: Pandadub (~Barones@user/Barones)
[19:38:21] <SnoopJ> not much to read, though: "Three conversion flags are currently supported: '!s' which calls str() on the value, '!r' which calls repr() and '!a' which calls ascii()."
[19:38:22] *** Quits: Pandadub (~Barones@user/Barones) (Remote host closed the connection)
[19:38:36] <petaflot> bjs: sounds good, but I have never found any documentation with the ! operator
[19:39:06] <bjs> petaflot: not sure what documentation you're reading then :P
[19:39:18] <bjs> petaflot: as in the link SnoopJ gave, !s just means it uses str
[19:39:19] *** Joins: ahammer (~ahammer@120.230.113.41)
[19:39:30] <petaflot> probably not the correct one I suppose.
[19:39:40] * petaflot missedthe link. thanks!
[19:39:51] <SnoopJ> I don't think it's really documented elsewhere because there isn't much more to it
[19:40:01] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[19:40:16] <bjs> petaflot: you can do whatever formatting you want there
[19:40:17] *** Quits: Liblx (~Alex@2a02:810c:280:59c:ccf:2ed2:f415:b4be) (Ping timeout: 240 seconds)
[19:40:28] *** Joins: clime (~clime@78-80-113-95.customers.tmcz.cz)
[19:41:01] *** Quits: edd_lc (~manjaro-i@85.64.207.99.dynamic.barak-online.net) (Remote host closed the connection)
[19:41:44] *** Quits: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net) (Ping timeout: 250 seconds)
[19:42:01] *** Joins: Liblx (~Alex@2a02:810c:280:59c:ccf:2ed2:f415:b4be)
[19:43:49] <petaflot> good. I'm not sure if it relates, but I do't get the output I expect with http://dpaste.com/5JUSA3GZQ
[19:43:57] *** Quits: ahammer (~ahammer@120.230.113.41) (Ping timeout: 240 seconds)
[19:45:38] <petaflot> I really was expecting the dict would be displayed with the return value of each __repr__() function
[19:45:57] *** Joins: roxfan2 (~roxfan@109.129.206.185)
[19:46:00] <SnoopJ> bjs, I think I'm wrong about subtypes, but I dunno how the NUMERIC_MASK actually works in that macro. I think Python's internalized Unicode database has something do with this :)
[19:46:05] <exarkun> petaflot: You put types into the dictionary, not instances.
[19:46:07] *** Joins: Plazma (~Plazma@user/plazma)
[19:46:36] <exarkun> petaflot: It sounds like you intended: `d = {Key(): [Value()]}`
[19:46:37] *** Quits: roxfan (~roxfan@185.206-129-109.adsl-dyn.isp.belgacom.be) (Ping timeout: 240 seconds)
[19:46:56] *** Quits: lbalhar (~lbalhar@93.185.13.26) (Ping timeout: 250 seconds)
[19:47:03] *** Quits: cellofellow (~user@166.70.30.252) (Remote host closed the connection)
[19:47:12] <petaflot> exarkun: or right.. that was stupid
[19:47:21] <petaflot> thanks
[19:47:48] *** Joins: ahammer (~ahammer@120.230.113.41)
[19:49:08] <SnoopJ> ahh, yes, it does. NUMERIC_MASK is set in the internal DB if the record has a Numeric_Value and the other masks are set for other reasons (DECIMAL_MASK I *really* don't get)
[19:49:46] *** Joins: zmt00 (~zmt00@user/zmt00)
[19:50:44] *** Quits: BSaboia (~bsaboia@2a05:f480:1400:b88:5400:3ff:fe51:575c) (Quit: ZNC 1.8.2+deb2build1 - https://znc.in)
[19:51:00] *** Joins: BSaboia (~bsaboia@2a05:f480:1400:b88:5400:3ff:fe51:575c)
[19:51:16] *** Quits: Liblx (~Alex@2a02:810c:280:59c:ccf:2ed2:f415:b4be) (Ping timeout: 250 seconds)
[19:51:26] *** Joins: davidd (~hay_sup@user/memorious)
[19:52:20] *** Joins: Liblx (~Alex@2a02:810c:280:59c:ccf:2ed2:f415:b4be)
[19:53:02] *** Joins: gjvc (~gjvc@user/gjvc)
[19:53:09] *** Joins: Arw- (~Arwalk@lfbn-dij-1-1310-217.w92-141.abo.wanadoo.fr)
[19:53:45] *** Quits: Arw| (~Arwalk@aaubervilliers-652-1-19-90.w90-35.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[19:55:00] *** Quits: davidd (~hay_sup@user/memorious) (Quit: WeeChat 3.4)
[19:55:04] *** Joins: Sco-Ross (~Sco-Ross3@2a02:c7f:d049:600:6c41:1993:8105:4c67)
[19:55:05] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[19:55:37] *** Quits: ahammer (~ahammer@120.230.113.41) (Ping timeout: 240 seconds)
[19:56:33] *** Joins: Andrew (andrew@andrewyu.org)
[19:57:05] <Andrew> ... Is there anything wrong with this? operation_file.write(operation_file.read().replace(sys.argv[1], source_file.read()))
[19:57:44] <SnoopJ> it's pretty dense when crammed into one line like that
[19:57:46] <Andrew> And I have operation_file.write(operation_file.read().replace(sys.argv[1], source_file.read()))
[19:57:46] *** Quits: pycode1 (~pycode3@2001:b07:5d28:551:2dd5:22ee:a1c1:49b) (Ping timeout: 250 seconds)
[19:58:00] <Andrew> SnoopJ: I come from Lisp, so... might be the issue
[19:58:45] *** Quits: Sco-Ross (~Sco-Ross3@2a02:c7f:d049:600:6c41:1993:8105:4c67) (Client Quit)
[19:58:51] *** Quits: RiFo (~RiFo@user/rifo) (Ping timeout: 256 seconds)
[19:59:25] <exarkun> Andrew: Do you think there is anything wrong with it?  Why are you asking?
[20:00:21] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[20:00:26] <Andrew> exarkun: python3 program.py "hello" program.py x.txt  where x.txt doesn't contain "hello" causes x.txt to be duped
[20:00:47] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 268 seconds)
[20:01:04] <Andrew> I'm using r+ on operation_file, but it seems to append...
[20:01:11] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[20:01:20] <Andrew> And I get no traceback for replacing nonexistant patterns
[20:01:42] <Andrew> Sounds like a side effect issue
[20:01:48] <exarkun> Aha.  So it doesn't do what you want.
[20:01:53] <exarkun> Can you explain what you want in English?
[20:02:01] *** Quits: Liblx (~Alex@2a02:810c:280:59c:ccf:2ed2:f415:b4be) (Ping timeout: 268 seconds)
[20:02:37] *** Joins: Liblx (~Alex@2a02:810c:280:59c:ccf:2ed2:f415:b4be)
[20:02:38] *** Quits: the_lanetly_052 (~the_lanet@194.135.153.167) (Ping timeout: 268 seconds)
[20:02:57] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:fcf8:6040:f413:fda1)
[20:02:57] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:fcf8:6040:f413:fda1) (Changing host)
[20:02:57] *** Joins: skapata (~Skapata@user/skapata)
[20:03:08] *** Joins: Babar_ (~Babar@2405:4803:ff4d:98d0:f513:b401:16b7:5621)
[20:03:08] *** Babar is now known as Guest6946
[20:03:08] *** Babar_ is now known as Babar
[20:03:52] <Andrew> Replace all instances of argv[1] with the contents of file argv[2] in the file argv[3]
[20:04:16] <Andrew> Note that argv[1] is a string itself, argv[2 and 3] are filenames
[20:04:23] *** Joins: someuser (~user@197.54.4.96)
[20:04:43] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10b2:4cc6:1587:3049:52bb:efee)
[20:05:03] *** Quits: Algernon69 (~Algernon6@2a04:cec0:10b2:4cc6:64f3:cef2:5b2f:1a09) (Read error: No route to host)
[20:05:13] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[20:05:14] *** Joins: Vonter (~Vonter@user/vonter)
[20:05:37] *** Joins: mickey8 (~user@user/mickey)
[20:05:57] *** Quits: Guest6946 (~Babar@118.71.125.169) (Ping timeout: 240 seconds)
[20:06:17] <exarkun> I suppose you have opened `operation_file` and `source_file` in some other code.  It might be nice to see a complete example in a pastebin.
[20:06:32] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[20:06:36] <Andrew> Sure, one se
[20:07:18] *** Quits: mat001 (~mat001@213.143.69.121) (Ping timeout: 250 seconds)
[20:07:34] *** Quits: bluedust_ (~bluedust@103.165.167.52) (Remote host closed the connection)
[20:08:03] <wib_jonas> Andrew: you read the entire file, so the seek will be at the end of the file. the you start to write from there, effectively appending. what you could do is to seek at the beginning of the file, write there, then truncate after writing. but I don't recommend that. the problem is that if the writing is interrupted, you'll end up with the file
[20:08:04] <wib_jonas> contents lost.
[20:08:10] *** Joins: menace (~someone@ppp-93-104-186-58.dynamic.mnet-online.de)
[20:08:11] <Andrew> https://lib.andrewyu.org/public/pythonproblem.py
[20:08:21] *** Quits: menace (~someone@ppp-93-104-186-58.dynamic.mnet-online.de) (Changing host)
[20:08:21] *** Joins: menace (~someone@user/menace)
[20:08:25] *** menace is now known as Deknos
[20:08:31] <Andrew> wib_jonas: Oh, thanks
[20:08:40] <wib_jonas> Andrew: what I recommend instead is to open the file only for output, open a separate file with a similar name in "w" mode (which truncates it), write to that, and at the end, rename the new file to the old name if everything was successful
[20:08:56] <Andrew> I forgot entirely that side effects exist here lol.  Thanks!
[20:09:02] *** Quits: Liblx (~Alex@2a02:810c:280:59c:ccf:2ed2:f415:b4be) (Ping timeout: 250 seconds)
[20:09:09] <wib_jonas> you can also remove the old file to a backup name if you want, so that if you replace isn't quite what you wanted you can restore it.
[20:09:14] <wib_jonas> s/remove/rename/
[20:09:23] <Wooble> yeah, "r+" mode is pretty much never what you want, even if you *really* know what you're doing.
[20:09:23] *** Quits: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[20:09:48] <Andrew> Thanks!
[20:10:00] *** Joins: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[20:10:40] <Wooble> if your file is so ridiculously large that it would be prohibitively expensive to copy it, and you're *really* careful... maybe?
[20:10:56] *** Joins: Liblx (~Alex@2a02:810c:280:59c:ccf:2ed2:f415:b4be)
[20:11:16] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[20:11:24] *** Quits: teut (~teut@2401:4900:1c68:97ee:45e1:5fb1:48ea:b97f) (Quit: Client closed)
[20:11:30] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[20:11:47] <grym> doing this sort of operation in python gives me the willies, frankly
[20:11:50] <Andrew> Wooble: I'm dealing with hand-written HTML, so, no prob
[20:12:00] <grym> (i always make sed do it)
[20:12:10] <Andrew> grym: Yes, I wrote it in sed before, just having fun with python
[20:12:22] *** Quits: lakrass (~lakrass@user/lakrass) (Quit: WeeChat 3.4)
[20:12:35] <Andrew> I mean, python is my first language, and I need to get back comfortable with it
[20:12:36] <SnoopJ> the problem exists across the language boundary, really
[20:12:54] <SnoopJ> sed just dealt with this sort of headache long ago
[20:12:55] <Wooble> grym: I wonder how sed's in-place thing fairs with huge files and power glitches :)
[20:12:57] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[20:13:00] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[20:13:03] <grym> Wooble: better than me, i'll wager
[20:13:29] <Andrew> SnoopJ: Yeah.  Two language barriars: (1) Lisp -> Python: I'm in the mindset where I expect functions to just return a value.  (2) English.
[20:13:56] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[20:14:12] <grym> Andrew: technical point: all python functions _do_ just return a value, but perhaps not the one you meant at first glance
[20:14:39] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Quit: Leaving)
[20:14:40] <Andrew> grym: Can you elaborate on that?  I mean, e.g. it could manipulate lists
[20:15:01] <SnoopJ> grym, they're talking about pure functions I think
[20:15:03] <grym> Andrew: all functions withhout an explicit `return` implicitly return the None object
[20:15:07] <grym> SnoopJ: python doesn't have them
[20:15:11] <SnoopJ> grym, that's my point.
[20:15:15] <grym> ok
[20:15:17] <SnoopJ> "just return values" not "return just values"
[20:15:18] <Andrew> grym: I mean, I expect functions to cause no side effects
[20:15:27] <Andrew> Yup
[20:15:44] <grym> Andrew: oh.  my lisp life is elisp, so ha ha ha lol mutable global bag of state is ... much more normal
[20:16:01] <grym> less of a shift :)
[20:16:03] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[20:16:15] <Andrew> aw, I'm mainly in Scheme, so lol
[20:16:19] <Andrew> (And haskell)
[20:17:14] *** Joins: SteveR (~SteveR@2600:6000:ff7e:f6d5::97b)
[20:17:18] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[20:17:58] *** Joins: Deshan (~Deshan@182.161.8.26)
[20:18:07] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[20:18:34] *** Quits: Deshan (~Deshan@182.161.8.26) (Client Quit)
[20:18:40] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:20:03] *** Joins: knstn (~knstn@ppp-94-66-57-10.home.otenet.gr)
[20:20:33] *** Parts: knstn (~knstn@ppp-94-66-57-10.home.otenet.gr) ()
[20:21:02] *** Quits: someuser (~user@197.54.4.96) (Read error: Connection reset by peer)
[20:21:14] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[20:22:30] <grym> Andrew: (originally i had read you to mean that you had believed that python functions implicity return the value of the last statement in them)
[20:23:04] *** Quits: yaraju (~yaraju@user/yaraju) (Quit: Leaving)
[20:23:06] <Andrew> grym: Oh, that's not purely functional either in lisp
[20:23:39] <Andrew> And yes, emacs lisp doesn't feel like lisp at all.  (setq) everywhere.
[20:23:49] <grym> right; occasionally you get people who `def foo(): x = 5+5; foo()` and wonder why they get None not 10
[20:24:07] <grym> (let ... ) and lecical-scoping <3
[20:24:12] <grym> lexical*
[20:24:58] <Wooble> grym: well I mean once they expect a statement to even *have* a value there may be a problem :)
[20:25:24] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[20:25:29] <grym> Wooble: result = foo(), thenn
[20:25:37] <grym> lazy typing'll get ya every time
[20:25:48] <Andrew> In many of my python programs you'd find:
[20:25:57] <Andrew> def fif(condition, yes, no):
[20:26:03] <Wooble> grym: I meant the `x = 5+5` itself being an expression. since it's not...
[20:26:03] <Andrew>     if condition: yes
[20:26:06] <Andrew> * return yes
[20:26:12] <Andrew>     else: return no
[20:26:30] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[20:26:41] *** Quits: Liblx (~Alex@2a02:810c:280:59c:ccf:2ed2:f415:b4be) (Ping timeout: 268 seconds)
[20:27:02] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[20:27:13] *** Joins: Liblx (~Alex@2a02:810c:280:59c:ccf:2ed2:f415:b4be)
[20:27:32] *** Quits: vladoski (~foo@2001:b07:add:d406:a908:aca8:6f2f:4bb7) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:27:49] <Wooble> grym: if they expected C to act that way, they'd also be disappointed but have missing a lot less things :)
[20:27:53] <Andrew> As I recall, x=5 in C evaluates to 5
[20:27:59] *** Quits: peteyboy1 (~peteyboy1@95.169.226.66) (Read error: Connection reset by peer)
[20:28:17] <Andrew> Wooble: Have missing a lot less things?
[20:28:18] *** Joins: k5tux (~k5tux@67.237.176.10)
[20:28:21] *** Joins: peteyboy1 (~peteyboy1@95.169.226.66)
[20:28:45] <Wooble> err... they'd have missed a lot less things. like that statements aren't all expressions and don't even have a value.
[20:29:08] <Andrew> oh yup
[20:29:44] <Andrew> I'd say the C way of having statements evaluate causes bugs if you aren't careful
[20:30:41] *** Quits: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com) (Remote host closed the connection)
[20:30:49] *** Joins: Guest143332 (~Guest1433@77.69.70.40)
[20:31:11] *** fling is now known as swing
[20:31:15] *** Quits: Guest143332 (~Guest1433@77.69.70.40) (Client Quit)
[20:31:52] *** Joins: NeckRomancer (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[20:32:33] *** Quits: Liblx (~Alex@2a02:810c:280:59c:ccf:2ed2:f415:b4be) (Quit: WeeChat 3.2)
[20:33:29] *** Joins: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com)
[20:33:46] *** Quits: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com) (Remote host closed the connection)
[20:34:37] *** Quits: emx (~emx@adsl-84-226-68-198.adslplus.ch) (Ping timeout: 240 seconds)
[20:34:37] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:b80d:e2db:26ac:c3a6) (Quit: Leaving)
[20:35:10] *** Joins: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com)
[20:35:13] *** Joins: lakrass (~lakrass@user/lakrass)
[20:36:08] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[20:36:16] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[20:36:56] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10b2:4cc6:1587:3049:52bb:efee) (Read error: Connection reset by peer)
[20:37:18] *** Joins: Guest92 (~Guest92@204.43.246.220)
[20:37:18] <Guest92> hello
[20:37:33] *** Joins: Lando-SpaceIzzle (~Lando-Spa@user/lando-spacepimp)
[20:37:50] <Wooble> Andrew: sure, the python equivalent that even introduced a different operator to make it easier to spot visually was pretty controversial...
[20:38:03] <Guest92> does anyone know how to find the number of characters in a paragraph using Len.
[20:38:21] <Wooble> Guest92: len(paragraph)
[20:38:37] <Guest92> put the paragraph name in it?
[20:38:50] <aphysically> okay, time to set up pyenv for the first time (I finally need to support old Python versions: backporting my cpython commit to old typing_extensions versions)
[20:38:54] <valdur55> Andrew: or better use: return yer or no
[20:38:58] <Andrew> Guest92: is it a string?
[20:39:01] <Guest92> yes
[20:39:10] <Wooble> Guest92: if it's in a variable (which it is, since you asked this yesterday...), yes, len(whetting_your_appetite)
[20:39:13] <valdur55> * return yes or no   ....
[20:39:36] <Guest92> then you print it?
[20:39:40] <Andrew> sensemaking
[20:39:48] <Wooble> Guest92: if you want to see the value, sure :)
[20:40:05] <Andrew> Guest92: Do you want to print it? Or would you like to use it further
[20:40:14] <Wooble> valdur55: if ((x is True) == True): return bool(True)
[20:40:19] <Andrew> ... what are you trying to do?
[20:40:41] *** Joins: lbalhar (~lbalhar@93.185.13.25)
[20:40:57] <Guest92> trying to use len to find a number of characters in a paragraph then print it.
[20:41:17] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-68-154.poda.cz) (Ping timeout: 240 seconds)
[20:41:25] *** Joins: FaV1r3s (~localhost@2001:41d0:8:99ea::1)
[20:41:42] <valdur55> Wooble: wtf?
[20:41:46] <Andrew> print(len(paragraph))
[20:41:52] <Andrew> No idea where you're struggling
[20:41:54] <Guest92> print it
[20:41:59] *** Joins: Nutte35 (~Nutte@202.153.82.40)
[20:42:15] <Andrew> Guest92: To standard output or to a printer?
[20:42:23] <valdur55> oh i missed condition part :D
[20:42:51] *** Quits: FaV1r3s (~localhost@2001:41d0:8:99ea::1) (Changing host)
[20:42:51] *** Joins: FaV1r3s (~localhost@user/fav1r3s)
[20:42:54] *** Joins: awmv_username_ta (~awmv@2a02:21b0:644f:c181:3d5a:b561:f71:7bf1)
[20:42:57] <Guest92> thank you
[20:43:13] *** swing is now known as fling
[20:43:15] <Andrew> hmm
[20:43:17] *** Joins: vladoski (~foo@2001:b07:add:d406:a908:aca8:6f2f:4bb7)
[20:43:25] <Wooble> Andrew: context: https://www.hackinscience.org/exercises/characters-counting
[20:43:26] <jinsun> unexpected response to a question, lol
[20:43:41] *** Joins: tobybl_ (~tobybl@248.64.200.146.dyn.plus.net)
[20:43:49] *** Quits: EtherMan_ (~quassel@inception.debokred.se) (Ping timeout: 240 seconds)
[20:44:10] <valdur55> Andrew: do you use dict().get(key, "defaultvalue") and getattr(obj, key, "defaultvalue") ?
[20:44:10] <Andrew> Recurring question
[20:44:23] * Andrew notices nonfree javascript
[20:44:25] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[20:44:25] *** Quits: vladoski (~foo@2001:b07:add:d406:a908:aca8:6f2f:4bb7) (Client Quit)
[20:44:46] *** Quits: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com) (Remote host closed the connection)
[20:45:01] <Andrew> valdur55: I don't do objects, but I know the first one
[20:45:11] <Andrew> now, back to writing for the website...
[20:45:57] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:2108:a651:422b:6577) (Ping timeout: 240 seconds)
[20:46:18] *** Quits: tobybl (~tobybl@248.64.200.146.dyn.plus.net) (Ping timeout: 250 seconds)
[20:47:16] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[20:47:23] *** Joins: dante-as (~dante-as@86.121.90.224)
[20:48:37] <Guest92> how ling have you guys bean coding python?
[20:48:43] <Guest92> been
[20:49:10] <CrtxReavr> 10 ling
[20:49:12] *** Joins: mat001 (~mat001@213.143.69.121)
[20:49:29] <xheimlich> what does "I don't do objects" mean?
[20:49:42] <Wooble> "I don't use python" :)
[20:49:50] <CrtxReavr> Zing!
[20:49:55] <valdur55> Andrew: it feels like you compute things over and over and getting in most cases same result as previous call. I have coded for years and never user def foo(condition, yes, no) pattern and I can't see use of it...
[20:50:02] *** Joins: Shikadi (~Shikadi@50.125.190.237)
[20:50:22] *** Joins: mcon (~Thunderbi@host-79-1-194-217.business.telecomitalia.it)
[20:50:26] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Read error: Connection reset by peer)
[20:50:37] <Andrew> valdur55: It's just that when I'm programming in non-Lisp languages, I miss the functional if
[20:51:17] <Guest92> Where can you learn python
[20:51:30] <Wooble> Andrew: `return yes if condition else no`
[20:51:31] *** Joins: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com)
[20:51:33] <NoImNotNineVolt> on the internet. in a book.
[20:51:49] *** Quits: luigibu (~luigi@225.red-79-159-194.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[20:51:49] <Wooble> Guest92: the "new programmer" link in /topic is good
[20:51:52] <SnoopJ> Guest92, there are some resources listed in this channel's topic.
[20:51:54] <Andrew> Wooble: How do you nest that in a syntax tree?
[20:51:59] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[20:51:59] *** Quits: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com) (Read error: Connection reset by peer)
[20:52:10] <mcon> I need to do a simple send-expect in python. I am looking at pexpect (are there other choices?) but I didn't find a way to log the complete transcript. Can someone point me in the right direction?
[20:52:25] <SnoopJ> Andrew, this ternary-alike can appear anywhere an expr can
[20:52:41] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[20:52:46] <Wooble> granted it might be extremely ugly in nontrivial cases
[20:52:54] *** Quits: zisu8 (~textual@p200300eab7182b00e90213fbcc21c37c.dip0.t-ipconnect.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:52:59] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[20:53:17] * Andrew looks at the readability of non-properly-indented lisp and sighs
[20:53:25] *** Joins: vicfred (~vicfred@user/vicfred)
[20:53:43] <mcon> Ideally I would like to have a real-time view of what's happening, but also a delayed printout could suffice.
[20:53:52] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:54:26] * Andrew thinks of monads
[20:54:32] *** Quits: dreamon (~dreamon@ppp-88-217-91-105.dynamic.mnet-online.de) (Ping timeout: 240 seconds)
[20:54:36] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[20:54:48] *** Joins: magla (~gelignite@55d4ee32.access.ecotel.net)
[20:54:58] <Wooble> mcon: by default pexpect already echos
[20:55:34] <Wooble> mcon: it also has logging to a file built in
[20:56:35] *** Joins: EtherMan (~quassel@inception.debokred.se)
[20:56:40] <mcon> @Wooble: that's not what I'm seeing. I have a long running command (a compilation) and my program just sits there till it's finished.
[20:56:48] <valdur55>  Andrew: yea. i dont know much about lisp......
[20:56:59] <mcon> No printout of any kind.
[20:57:31] <Guest92> how do you do a for loop that changes every time
[20:57:40] *** Quits: vicfred (~vicfred@user/vicfred) (Client Quit)
[20:57:41] <Guest92> like 1 then 2 then 3 ect
[20:57:44] <Andrew> Guest92: what 'changes every time'?
[20:57:47] <bjs> Guest92: for i in range(10): print(i)
[20:58:03] <Andrew> for i in range(1, 3 + 1): print i
[20:58:09] <Andrew> oops, print(i)
[20:58:29] <Guest92> then how do you do that squared
[20:58:41] <Wooble> mcon: oh, sorry, the echo default is just for your output to the other process. Use logfile=sys.stdout to see the other side in realtime
[20:58:47] <bjs> Guest92: by the way there's a nice book ThinkPython (2nd edition) that is a nice introduction to Python freely available at the authors site at https://j.mp/23X7emF
[20:58:59] <SnoopJ> Think Python +1
[20:59:01] <bjs> Guest92: which might be worth reading through and doing the exercsies
[20:59:14] <bjs> Guest92: print(i**2)  will print i squared
[20:59:46] <Guest92> thank you cause im kindo fa newbie
[20:59:50] *** Joins: bluedust (~bluedust@103.165.167.52)
[20:59:55] <Guest92> of a newbie
[21:00:19] <Andrew> Python's help system isn't that useful for newbies I believe
[21:00:19] <Wooble> Guest92: honestly the site you linked to yesterday is probably fine, as long as you read the material they link to.
[21:01:12] *** Joins: Auron (Auron956@user/auron)
[21:01:35] <Wooble> Andrew: that's unfair; it's pretty unuseful to everyone else, too! :)
[21:01:57] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[21:02:14] <bjs> Guest92: we all start as newbies,  there's lots of good resources, just stick with it and keep trying
[21:02:15] <Andrew> True
[21:02:17] *** Joins: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net)
[21:02:20] *** Quits: lbalhar (~lbalhar@93.185.13.25) (Read error: Connection reset by peer)
[21:02:26] <mcon> Wooble: I did a quick try, but i get exception: "TypeError: write() argument must be str, not bytes"
[21:02:38] *** Joins: vladoski (~foo@2001:b07:add:d406:a908:aca8:6f2f:4bb7)
[21:02:40] *** Quits: Guest92 (~Guest92@204.43.246.220) (Quit: Client closed)
[21:02:43] *** Joins: lbalhar (~lbalhar@93.185.13.25)
[21:02:46] <han-solo> `python3 -m pydoc for` # seems fine
[21:03:00] <SnoopJ> han-solo, as long as the documentation you want is something pydoc can see :(
[21:03:09] <han-solo> yeah...
[21:03:26] <SnoopJ> Andrew, I frequently search over a local copy of the CPython repository, namely the Doc/ subfolder
[21:03:43] * Andrew closes his irc client to stop getting distracted
[21:03:47] <Andrew> Cya
[21:03:48] <Wooble> mcon: you need to pass an encoding to spawn (or use sys.stdout.buffer)
[21:03:50] *** Quits: vladoski (~foo@2001:b07:add:d406:a908:aca8:6f2f:4bb7) (Client Quit)
[21:03:57] *** Quits: Phlyniii (~alex@84-115-52-62.cable.dynamic.surfer.at) (Ping timeout: 240 seconds)
[21:04:54] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:3f34:3b4:ccde:7533) (Quit: Leaving)
[21:06:32] <han-solo> pymotw has been really helpful for stdlib stuff
[21:06:33] *** Joins: yassernasc (~yassernas@2804:29b8:505a:f33d:ccf7:da52:f075:1ff9)
[21:07:10] *** Quits: tobybl_ (~tobybl@248.64.200.146.dyn.plus.net) (Remote host closed the connection)
[21:08:00] *** Quits: maryo (~Maryo@user/maryo) (Ping timeout: 268 seconds)
[21:09:39] *** Joins: silverdeer (~silverdee@66-90-137-4.dyn.grandenetworks.net)
[21:09:41] *** Joins: vladoski (~foo@2001:b07:add:d406:a908:aca8:6f2f:4bb7)
[21:09:44] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::4)
[21:09:47] *** Sargento is now known as iptv
[21:09:47] *** Quits: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[21:09:55] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[21:09:57] *** iptv is now known as Sargento
[21:10:25] *** Joins: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[21:10:27] <mcon> Wooble: Ok, THANKS.
[21:11:02] *** Joins: pycode1 (~pycode3@2001:b07:5d28:551:f0c0:1577:347f:f8b6)
[21:12:25] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[21:12:33] <mcon> Wooble: ... no the next stumbling block: how do I keep waiting for a possibly LOOOOONNNG period (full compilation can take hours)? I tried a "child.sendeof()", but that kill process immediately.
[21:12:49] <mcon> s/no/now/
[21:13:15] *** Quits: czard (~czard@host-78-150-125-181.as13285.net) (Remote host closed the connection)
[21:13:35] <Wooble> mcon: I'm not sure, I've only even used it for things I wanted to respond to in realtime.
[21:15:08] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[21:16:14] <han-solo> how many inputs do you need to send ? like very interactive program ? # just curious
[21:16:50] <han-solo> or just give me something in stdin, and i will go plough some fields ?
[21:17:02] *** Joins: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com)
[21:17:11] *** Quits: lispy (~lispy4@84.69.59.93) (Quit: Leaving)
[21:17:52] *** Joins: zisu8 (~textual@p200300eab7182b00e070d6f54998374a.dip0.t-ipconnect.de)
[21:17:57] *** Quits: zmotaj (~zmotaj@user/zmotaj) (Ping timeout: 240 seconds)
[21:19:12] *** Joins: hanzo (uid532183@user/hanzo)
[21:19:14] *** Quits: dgw (dgw@sopel/admin/dgw) (Ping timeout: 250 seconds)
[21:19:19] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 256 seconds)
[21:20:19] *** Joins: zmotaj (~zmotaj@86.61.81.185)
[21:20:19] *** Quits: zmotaj (~zmotaj@86.61.81.185) (Changing host)
[21:20:19] *** Joins: zmotaj (~zmotaj@user/zmotaj)
[21:20:37] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::82dc) (Ping timeout: 240 seconds)
[21:21:45] *** Joins: legola (~legola@46.235.100.54)
[21:22:11] *** Quits: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp) (Ping timeout: 268 seconds)
[21:22:53] *** Joins: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp)
[21:23:11] *** Quits: vladoski (~foo@2001:b07:add:d406:a908:aca8:6f2f:4bb7) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:23:21] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[21:23:32] *** Quits: alex11 (~alex11@user/alex11) (Read error: Connection reset by peer)
[21:25:52] *** Joins: alex11 (~alex11@user/alex11)
[21:26:17] *** Joins: dgw (dgw@sopel/admin/dgw)
[21:26:23] <mcon> Wooble: thanks. I used "r=1; while r != 0: r = child.expect([prompt, pexpect.TIMEOUT])" and it seem to do what I need ;)
[21:26:49] *** Joins: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr)
[21:27:24] *** Joins: thevar1able (~textual@46.39.45.122)
[21:27:49] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 256 seconds)
[21:27:59] *** Quits: bluedust (~bluedust@103.165.167.52) (Remote host closed the connection)
[21:29:58] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[21:30:05] *** Quits: bytehackr (~Sandipan@43.252.250.126) (Ping timeout: 256 seconds)
[21:30:57] *** Quits: dvx (~dvx@5.181.92.64) (Quit: dvx)
[21:31:13] *** Quits: NeckRomancer (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[21:31:16] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[21:31:25] *** Joins: d1cor (~diego@179.63.242.120)
[21:32:40] *** Quits: ecdhe (~ecdhe@user/ecdhe) (Ping timeout: 250 seconds)
[21:33:06] *** Quits: dgw (dgw@sopel/admin/dgw) (Ping timeout: 250 seconds)
[21:33:18] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:855c:bf8b:754f:7969)
[21:33:22] *** Joins: dgw (dgw@sopel/admin/dgw)
[21:33:34] *** Joins: dreamon (~dreamon@p54b1472c.dip0.t-ipconnect.de)
[21:34:16] *** Joins: johnkeats7 (~johnkeats@2804:14c:32:a0cc:e4ba:8ea9:631d:620b)
[21:34:39] *** Joins: vats (~vats@180.149.226.242)
[21:35:02] *** Joins: ecdhe (~ecdhe@user/ecdhe)
[21:35:06] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Quit: Leaving)
[21:37:49] *** Quits: SteveR (~SteveR@2600:6000:ff7e:f6d5::97b) (Ping timeout: 256 seconds)
[21:38:13] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:855c:bf8b:754f:7969) (Ping timeout: 268 seconds)
[21:38:37] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::4) (Ping timeout: 240 seconds)
[21:38:44] *** Quits: mat001 (~mat001@213.143.69.121) (Ping timeout: 250 seconds)
[21:39:37] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[21:39:44] *** Joins: vladoski (~foo@2001:b07:add:d406:a908:aca8:6f2f:4bb7)
[21:40:27] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:40:27] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[21:40:47] *** Quits: lakrass (~lakrass@user/lakrass) (Quit: WeeChat 3.4)
[21:41:05] *** Quits: vladoski (~foo@2001:b07:add:d406:a908:aca8:6f2f:4bb7) (Client Quit)
[21:41:42] *** Quits: slav0nic (slav0nic@python.su) (Remote host closed the connection)
[21:43:44] <ouestbillie> quick sanity check, is there a difference between fhandle.write(b"") and fhandle.write("") ?
[21:44:07] <SnoopJ> ouestbillie, one writes a string, one writes bytes
[21:44:20] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Remote host closed the connection)
[21:44:47] *** Quits: legola (~legola@46.235.100.54) (Remote host closed the connection)
[21:44:51] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[21:45:17] *** Quits: DaNeenjah (~jake@adsl-74-230-4-35.hsv.bellsouth.net) (Quit: WeeChat 3.4)
[21:45:18] *** Joins: lispy (~lispy4@84.69.59.93)
[21:45:29] <SnoopJ> the string-y one is probably going to be encoded somewhere along the line unless you're working with something like io.StringIO that doesn't store bytes
[21:45:41] *** Joins: lakrass (~lakrass@user/lakrass)
[21:46:16] <ouestbillie> SnoopJ: so here is why i ask, at my job im reviewing code and
[21:46:32] *** Quits: Major_Biscuit (~MajorBisc@c-001-017-008.client.tudelft.eduvpn.nl) (Ping timeout: 250 seconds)
[21:46:37] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 240 seconds)
[21:46:40] <ouestbillie> we need to write on fifo utf-8 encoded strings delimited by null byts
[21:46:42] <ouestbillie> bytes*
[21:47:41] <ouestbillie> right now there is a line that bothers me, fhandle.write(bytes(<some_utf8_encoded_string, "utf-8)) \n fhandle.write(b"")
[21:47:41] *** carbolymer_ is now known as carbolymer
[21:47:55] <ouestbillie> like, wtf?
[21:48:23] <ouestbillie> why not fhandle.write(<some_utf8_encoded_string) \n fhandle.write("")
[21:48:35] <SnoopJ> presumably because the file is open in bytes mode, not text mode
[21:48:51] <ouestbillie> yeah but thats entirely in the control of the code im reviewing
[21:49:21] *** Quits: lbalhar (~lbalhar@93.185.13.25) (Ping timeout: 256 seconds)
[21:49:26] <ouestbillie> lets say i open it in regular text mode, wouldn't write exactly the same thing to the pipe?
[21:49:33] *** Quits: silverdeer (~silverdee@66-90-137-4.dyn.grandenetworks.net) (Remote host closed the connection)
[21:49:38] <ouestbillie> s/write/it write/
[21:50:33] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[21:50:38] <SnoopJ> only if locale.getpreferredencoding(False) gives you utf-8
[21:51:01] *** Joins: silverdeer (~silverdee@66-90-137-4.dyn.grandenetworks.net)
[21:51:03] <ouestbillie> yes of course im assuming text encoding is sane
[21:51:04] <SnoopJ> but you could specify encoding="utf-8" and get the same level of explicitness about the encoding
[21:51:08] *** Joins: aslicedbanjo (~aslicedba@host86-168-244-71.range86-168.btcentralplus.com)
[21:51:22] <ouestbillie> right and in that scenario the end result is the same
[21:51:24] *** Joins: harpia (~harpia@2804:2aec:205:4600:1f64:3c12:1a0e:3b09)
[21:51:36] * SnoopJ isn't sure how much question is left that #python can answer
[21:51:54] *** Joins: NeckRomancer (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[21:52:13] *** Quits: zisu8 (~textual@p200300eab7182b00e070d6f54998374a.dip0.t-ipconnect.de) (Quit: Textual IRC Client: www.textualapp.com)
[21:52:47] *** Joins: neceve (~quassel@2.26.93.228)
[21:52:49] *** Quits: cewood (~cewood@ip5b417897.dynamic.kabel-deutschland.de) (Quit: WeeChat 3.4)
[21:53:38] *** Quits: dgw (dgw@sopel/admin/dgw) (Ping timeout: 268 seconds)
[21:53:41] <ouestbillie> okay last one, can I write a null byte to a file opened in text mode?
[21:54:07] <ouestbillie> id assume fhandle.write("", encoding="utf-8") to write a null byte?
[21:54:14] *** Quits: dante-as (~dante-as@86.121.90.224) (Quit: Client closed)
[21:54:43] *** Quits: MrCollinsGA (~MrCollins@38.21.140.217) (Read error: Connection reset by peer)
[21:55:27] <SnoopJ> write() doesn't take an encoding, and if the file is open in text mode, you are exclusively writing text. For utf-8 you could `f.write("\x00")` though
[21:56:36] *** Joins: vladoski (~foo@2001:b07:add:d406:a908:aca8:6f2f:4bb7)
[21:56:58] <ouestbillie> yeah my bad for the encoding param, so f.write("\x00") doesnt do the same thing as f.write("") ?
[21:57:01] *** Joins: kosh (~kosh@user/kosh)
[21:57:33] *** Joins: greedom (~greedom@p200300de671515002f68b1a50028dd22.dip0.t-ipconnect.de)
[21:57:45] *** Quits: vladoski (~foo@2001:b07:add:d406:a908:aca8:6f2f:4bb7) (Client Quit)
[21:57:49] <SnoopJ> it does not
[21:58:07] <bjs> ouestbillie: "" is the empty string and contains no characters/bytes.  "\x00" is not empty, it contains a single character (NUL).  If you write "\x00" to a file then the file will have that character written to it. Presumably just a bunch of zeros
[21:58:09] <SnoopJ> the encoding the empty string is an empty bytes() object
[21:58:12] <bjs> it depends on the encoding into bytes
[21:58:15] <SnoopJ> encoding of*
[21:58:42] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[21:58:57] *** Joins: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:f190:fe95:722d:f13c)
[21:59:05] <SnoopJ> I think this would have to be true for any encoding, too, otherwise you'd ruin the idea of encoding because there are effectively an infinite number of empty strings in any string?
[21:59:18] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[21:59:36] <ouestbillie> SnoopJ: oh yeah that makes sense seen that way
[21:59:42] <bjs> SnoopJ: it doesn't have to be true, you can of course have an encoding that encodes empty strings into the bytes b"EMPTY" :P
[22:00:04] <SnoopJ> bjs, yea but how many copies should write out when encoding "a" and why? :)
[22:00:08] <bjs> there's no requirement that (s1+s2).encode() == s1.encode() + s2.encode()
[22:00:17] <bjs> SnoopJ: none, because "a" isn't the empty string
[22:00:22] <SnoopJ> bjs, but it contains it
[22:00:49] *** Joins: darksun (~darksun@user/darksun)
[22:01:01] *** Joins: grundrausch3n (~grundraus@p200300e9ef1e6d00140614362cc7cb2f.dip0.t-ipconnect.de)
[22:02:28] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[22:02:38] <bjs> SnoopJ: yes but encoding takes a whole message and produces a whole message, there's no hard rule than every encoding of every substring appears in the final encoded message
[22:02:43] *** Joins: dgw (dgw@sopel/admin/dgw)
[22:02:44] *** Quits: grooverman (~grooverma@177.102.119.200) (Read error: Connection reset by peer)
[22:02:48] <SnoopJ> yea, you're right that an encoding doesn't have to be linear
[22:02:53] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:e4ba:8ea9:631d:620b) (Ping timeout: 268 seconds)
[22:02:54] <bjs> Infact I would be surprised if that were true for unicode, because unicode has some multi-codepoint "characters"
[22:02:54] *** Joins: grooverman (~grooverma@177.102.119.200)
[22:03:26] *** Quits: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr) (Quit: Client closed)
[22:03:28] *** Joins: someuser (~user@197.54.4.96)
[22:03:56] <SnoopJ> I'm not sure what to think about an encoding that isn't bijective
[22:04:34] <SnoopJ> but I guess maybe if the empty string by itself is the entire message, it doesn't really spoil that property
[22:04:40] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:e5f3:8d27:16bf:1042)
[22:04:58] <Andrew> wait... how do I do something like C's '(x = 3) = 3' again in python
[22:05:07] <Andrew> I'm forgetting things a lot :\
[22:05:16] *** Quits: WayToDoor (~WayToDoor@user/waytodoor) (Quit: Ping timeout (120 seconds))
[22:05:22] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[22:05:34] <SnoopJ> Andrew, do you want to simultaneously assign and test a value, or just an assignment?
[22:05:39] *** Joins: WayToDoor (~WayToDoor@user/waytodoor)
[22:05:48] <Andrew> assign and test, yes
[22:05:56] <ouestbillie> Andrew: oh my why?
[22:05:57] <han-solo> `(x := 3 ) == 3`
[22:06:03] <han-solo> that one ?
[22:06:11] *** Joins: crashrep (~crashrep@user/crashrep)
[22:06:16] *** Quits: jessicant (~jessica@static.172.234.251.148.clients.your-server.de) (Remote host closed the connection)
[22:06:16] *** Quits: nochi (~nochi@static.216.66.130.94.clients.your-server.de) (Quit: bye)
[22:06:17] *** Quits: aivkiv (~aivkiv@server2.kivilius.com) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[22:06:19] *** Quits: Spydar007 (~spydar007@user/spydar007) (Quit: Quit)
[22:06:25] *** Joins: kosh (~kosh@user/kosh)
[22:06:27] *** Joins: nochi (~nochi@2a01:4f8:10b:3074::4)
[22:06:32] *** Joins: aivkiv (~aivkiv@server2.kivilius.com)
[22:06:34] <Andrew> yup
[22:06:36] <Andrew> thanks
[22:06:36] <SnoopJ> Andrew, you want an assignment expression, like what han-solo just shared. Syntax is restricted to 3.8+, described here: https://docs.python.org/3/reference/expressions.html#assignment-expressions
[22:06:53] <Andrew> that's okay for me...
[22:07:12] *** Quits: d1cor (~diego@179.63.242.120) (Ping timeout: 268 seconds)
[22:07:33] <han-solo> i haven't used walrus for anything in work yet...
[22:07:41] <CrtxReavr> So you don't trust that 3 == 3?
[22:07:55] *** Joins: johnkeats7 (~johnkeats@2804:14c:32:a0cc:855a:12f3:4a93:2b56)
[22:08:05] *** Quits: rapha (~jrs@user/rapha) (Ping timeout: 252 seconds)
[22:08:09] *** Joins: jessicant (~jessica@static.172.234.251.148.clients.your-server.de)
[22:08:10] <han-solo> it could be `(x := y) == 3`
[22:08:25] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[22:08:26] *** Quits: nigelb (~nigel@zeus.nigelb.me) (Ping timeout: 268 seconds)
[22:08:26] <Andrew> I'm actually trying to iterate through a file with readline and test whether it's already EOF
[22:08:32] *** Quits: pycode1 (~pycode3@2001:b07:5d28:551:f0c0:1577:347f:f8b6) (Ping timeout: 240 seconds)
[22:08:42] *** Quits: simplicity (~yti@user/simplicity) (Ping timeout: 260 seconds)
[22:09:01] *** Joins: nigelb (~nigel@zeus.nigelb.me)
[22:09:18] *** Joins: pycode (~pycode3@2001:b07:5d28:551:f0c0:1577:347f:f8b6)
[22:09:22] <SnoopJ> han-solo, I warmed up to the walrus when I realized you can do `while (buf := something.read(N)): do_stuff(buf)`
[22:09:23] *** Joins: simplicity (~yti@user/simplicity)
[22:09:40] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:e5f3:8d27:16bf:1042) (Ping timeout: 268 seconds)
[22:09:48] <SnoopJ> ...but I have also not really used it :)
[22:09:53] *** Quits: oz4ga (~tim@hator.sunsite.lv) (Quit: ZNC 1.8.2 - https://znc.in)
[22:10:01] *** Quits: lakrass (~lakrass@user/lakrass) (Quit: WeeChat 3.4)
[22:10:08] *** Joins: oz4ga (~tim@hator.sunsite.lv)
[22:10:19] <han-solo> SnoopJ: yeah, i guess it would have maybe some use in while read situation, i haven't encountered yet, also i don't write much anyway
[22:10:20] *** Quits: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[22:10:32] *** Parts: Plazma (~Plazma@user/plazma) ()
[22:10:38] *** Joins: Spydar007 (~spydar007@user/spydar007)
[22:11:00] *** Joins: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[22:11:02] *** Joins: Guest19 (~Guest19@2601:647:5280:2a50:e90c:8a2e:7515:668a)
[22:11:06] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[22:11:53] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:78a9:82b1:e3cf:b6f2)
[22:12:45] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:855a:12f3:4a93:2b56) (Ping timeout: 268 seconds)
[22:13:22] *** Joins: johnkeats7 (~johnkeats@2804:14c:32:a0cc:60f1:500f:511e:39d)
[22:14:08] *** Joins: xcm (~xcm@user/xcm)
[22:15:13] *** Quits: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:f190:fe95:722d:f13c) (Ping timeout: 268 seconds)
[22:15:19] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[22:15:34] *** Quits: lorenzosu_ (~lorenzosu@user/lorenzosu) (Ping timeout: 250 seconds)
[22:15:39] *** Quits: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr) (Ping timeout: 276 seconds)
[22:15:55] *** Joins: vladoski (~foo@2001:b07:add:d406:a908:aca8:6f2f:4bb7)
[22:16:06] *** Joins: w1kl4s5 (~w1kl4s@user/w1kl4s)
[22:16:14] *** Joins: lorenzosu (~lorenzosu@user/lorenzosu)
[22:16:27] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:78a9:82b1:e3cf:b6f2) (Ping timeout: 268 seconds)
[22:16:46] *** Joins: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr)
[22:16:49] *** Joins: dminuoso_ (~dminuoso@static.88-198-218-68.clients.your-server.de)
[22:16:53] *** Quits: xcm_ (~xcm@user/xcm) (Read error: Connection reset by peer)
[22:16:58] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (Read error: Connection reset by peer)
[22:16:58] *** w1kl4s5 is now known as w1kl4s
[22:17:09] *** Quits: vladoski (~foo@2001:b07:add:d406:a908:aca8:6f2f:4bb7) (Client Quit)
[22:17:17] *** Quits: Nutte35 (~Nutte@202.153.82.40) (Ping timeout: 240 seconds)
[22:17:29] *** Quits: dminuoso (~dminuoso@user/dminuoso) (Ping timeout: 256 seconds)
[22:17:41] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[22:18:01] *** Quits: rsx (~dummy@ppp-188-174-134-242.dynamic.mnet-online.de) (Quit: rsx)
[22:18:11] *** Joins: Nutte35 (~Nutte@202.153.82.216)
[22:18:13] *** Quits: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de) (Ping timeout: 240 seconds)
[22:18:18] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:60f1:500f:511e:39d) (Ping timeout: 268 seconds)
[22:19:22] *** Joins: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de)
[22:19:29] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:dc2f:c6ed:b795:6af)
[22:19:32] <ouestbillie> SnoopJ: the walrus?
[22:19:36] *** Joins: slav0nic (slav0nic@python.su)
[22:19:56] *** Joins: lakrass (~lakrass@user/lakrass)
[22:20:32] *** Joins: rapha (~jrs@46.4.31.69)
[22:20:35] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::4)
[22:20:37] <SnoopJ> ouestbillie, a nickname for the := operator
[22:20:47] *** Joins: dyens (~user@dyens.info-lan.me)
[22:21:06] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:21:11] <grym> it's got tusks!
[22:21:53] *** Quits: lakrass (~lakrass@user/lakrass) (Client Quit)
[22:22:07] *** Joins: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:f190:fe95:722d:f13c)
[22:22:12] *** Joins: lakrass (~lakrass@user/lakrass)
[22:22:22] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[22:25:32] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[22:26:23] *** Quits: lakrass (~lakrass@user/lakrass) (Client Quit)
[22:27:25] *** Quits: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp) (Ping timeout: 240 seconds)
[22:27:54] *** Joins: DarkTrick (~DarkTrick@pl-749-047.bunbun.ne.jp)
[22:28:59] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[22:29:01] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 256 seconds)
[22:30:08] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[22:31:02] *** Quits: greedom (~greedom@p200300de671515002f68b1a50028dd22.dip0.t-ipconnect.de) (Remote host closed the connection)
[22:31:12] <Jong> For comparing strings, do you prefer == or is keyword?
[22:31:52] *** Quits: mcon (~Thunderbi@host-79-1-194-217.business.telecomitalia.it) (Ping timeout: 268 seconds)
[22:31:54] <Repiphany> `is` should pretty much never be used except for testing `is/is not None`
[22:33:05] *** Joins: vladoski (~foo@2001:b07:add:d406:a908:aca8:6f2f:4bb7)
[22:33:06] *** Quits: Algernon91 (~Algernon6@2a01:e0a:511:6ce0:f190:fe95:722d:f13c) (Ping timeout: 268 seconds)
[22:33:06] <SnoopJ> Jong, they don't do the same thing. `is` should only be used if what you mean is `id(a) == id(b)` but you want a shorter spelling. This is pretty rare, so you probably want ==
[22:34:19] *** Quits: vladoski (~foo@2001:b07:add:d406:a908:aca8:6f2f:4bb7) (Client Quit)
[22:34:46] *** Joins: lakrass (~lakrass@user/lakrass)
[22:35:45] <Wooble> Jong: (and if you did some testing and `is` worked fine, it's because coincidentally it can work for a subset of strings as an implementation detail.)
[22:35:56] *** Quits: pycode (~pycode3@2001:b07:5d28:551:f0c0:1577:347f:f8b6) (Ping timeout: 250 seconds)
[22:37:23] *** Quits: xcm (~xcm@user/xcm) (Remote host closed the connection)
[22:38:06] *** Joins: xcm (~xcm@user/xcm)
[22:38:31] <SnoopJ> yea you aren't really guaranteed what the value of `"test" is "test"` will be, it depends on how the interpreter you're using implements strings 😬
[22:38:37] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Quit: beastDivision)
[22:39:13] *** Quits: silverdeer (~silverdee@66-90-137-4.dyn.grandenetworks.net) (Remote host closed the connection)
[22:39:37] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[22:39:48] *** Joins: silverdeer (~silverdee@66-90-137-4.dyn.grandenetworks.net)
[22:39:53] *** Quits: dgw (dgw@sopel/admin/dgw) (Quit: Stalemate resolved. Core transfer initiated.)
[22:40:20] *** Joins: dgw (dgw@sopel/admin/dgw)
[22:40:59] <Wooble> "with spaces" is "with spaces" even moreso.
[22:41:01] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[22:41:14] *** Joins: onichomp (~onichomp@2806:264:4408:cc:596b:66ad:a1a6:2a8a)
[22:41:42] *** Joins: djhankb (~djhankb@208.113.164.68)
[22:41:46] <SnoopJ> Wooble, because of the variety of flavors of whitespace, or is there something special about string interning and whitespace?
[22:42:02] <Wooble> SnoopJ: cpython only interns things that look like identifiers.
[22:42:14] *** Quits: Mathisen (mathisen@about/windows/staff/mathisen) (Remote host closed the connection)
[22:42:36] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[22:42:48] <Wooble> I can't really imagine any implementation just interning all of the strings, though; you'd have a memory explosion
[22:43:20] <SnoopJ> Wooble, I may be erroneously conflating interning with co_consts
[22:43:41] <Wooble> although if you do "with spaces" is "with spaces" on a single line, it's True for totally different reasons :)
[22:43:51] <SnoopJ> well, maybe :)
[22:43:57] *** Quits: silverdeer (~silverdee@66-90-137-4.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[22:44:01] <SnoopJ> I don't think anything keeps an implementer from making two string objects there
[22:44:02] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:100d:8fd3:36d:1ab5)
[22:44:26] <Wooble> yeah, still an implementation detail but an unrelated one.
[22:44:29] <SnoopJ> anyway, `is` is pretty much never what you want and if you're trying to decide whether to use `is` or `==` you almost certainly want `==`
[22:44:33] *** Joins: Mathisen (mathisen@about/windows/staff/mathisen)
[22:44:35] *** Quits: onichomp (~onichomp@2806:264:4408:cc:596b:66ad:a1a6:2a8a) (Read error: Connection reset by peer)
[22:44:56] <phy1729> I think the only things you know you can use is for are None, True, False, and NotImplemented
[22:45:02] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 250 seconds)
[22:45:03] *** Quits: Abrax (~Abrax@user/abrax) (Read error: Connection reset by peer)
[22:45:04] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[22:45:14] *** Joins: onichomp (~onichomp@2806:264:4408:cc:596b:66ad:a1a6:2a8a)
[22:45:15] <Wooble> (and with True and False it violates PEP 8)
[22:45:18] <SnoopJ> phy1729, nah, you can use it for any object, you just may not get the semantics you expect
[22:45:39] <phy1729> SnoopJ: the only objects the language reference guarentees are singletons
[22:45:54] *** Quits: awmv_username_ta (~awmv@2a02:21b0:644f:c181:3d5a:b561:f71:7bf1) (Ping timeout: 250 seconds)
[22:46:04] <phy1729> Oh Ellipsis too
[22:46:34] <Wooble> phy1729: I'm sure we're all checking for identity with Ellipsis all day long :)
[22:46:34] <SnoopJ> phy1729, it's perfectly meaningful and safe to do `SENTINEL = object()` and later check `if something is SENTINEL: ...`
[22:47:07] <phy1729> right, I'm just saying those are the ones in the language reference.
[22:47:09] *** Quits: pro_z_ (~pro_z@37.214.69.237) (Ping timeout: 256 seconds)
[22:47:17] <SnoopJ> it's just that object identity isn't something you need to check all that often and of all words you could hang this meaning on in English, `is` may be the worst possible choice
[22:47:20] <Wooble> phy1729: anyway, Ellipsis and NotImplemented aren't all that safe since they're not keywords :)
[22:47:23] *** Quits: onichomp (~onichomp@2806:264:4408:cc:596b:66ad:a1a6:2a8a) (Client Quit)
[22:47:26] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[22:47:41] <NeilRG> there's no way to have positional-only attributes in dataclasses or attrs, right?
[22:48:07] <Wooble> phy1729:at best you know they were singletons in builtins when the interpreter started.
[22:48:08] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:48:31] <phy1729> I suppose so, but anyone who messes with those deserves the breakage
[22:48:45] <SnoopJ> the broader point is that object identity is useful outside of the context of singletons (if it weren't, it probably wouldn't be a concept we care about)
[22:49:24] <SnoopJ> I can't think of any case in Python where I actually care about the identity of a string object, though
[22:49:25] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[22:50:33] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[22:50:46] <SnoopJ> NeilRG, I believe that's true. Someone proposed it for attrs last year: https://github.com/python-attrs/attrs/issues/641
[22:51:17] *** Quits: tristan_ (~tristan@223.38.8.111) (Remote host closed the connection)
[22:51:38] <NeilRG> SnoopJ, thank you for the link!
[22:51:56] *** Joins: tristan_ (~tristan@223.38.8.111)
[22:52:46] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[22:53:28] *** Quits: kmh (~kmh@2a00:6020:5004:6800:f5f6:d4b7:72a4:74f1) (Read error: Connection reset by peer)
[22:53:34] *** Joins: johnkeats7 (~johnkeats@186.220.240.39)
[22:53:51] *** Joins: ozoned (odoood@gateway/vpn/protonvpn/odoood)
[22:53:57] *** Quits: md618 (~md618@129.31.149.204) (Ping timeout: 240 seconds)
[22:53:57] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[22:54:40] <Andrew> https://lib.andrewyu.org/public/ugly-static-site-generator.zip
[22:55:57] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::4) (Ping timeout: 240 seconds)
[22:57:09] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:dc2f:c6ed:b795:6af) (Ping timeout: 268 seconds)
[22:57:21] <Andrew> Ugly code, but just works
[22:57:38] *** Joins: nightbreak (~nightbrea@nat-168-7-239-4.rice.edu)
[22:57:43] <Andrew> Not exactly lazy evaluation, but it does stuff line-by-line well.
[22:58:21] *** Quits: dvyd (~dvyd@2a0d:6fc2:47b0:1800:4cb3:a8b2:cbab:7b01) (Quit: Client closed)
[22:58:23] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 268 seconds)
[22:59:51] *** Quits: naranja (~orange@user/orangeboxcutter) (Ping timeout: 276 seconds)
[23:00:07] *** Joins: kmh (~kmh@2a00:6020:5004:6800:5cef:1235:f287:aaad)
[23:00:43] *** Joins: vladoski (~foo@2001:b07:add:d406:a908:aca8:6f2f:4bb7)
[23:01:09] *** Joins: naranja (~orange@user/orangeboxcutter)
[23:02:07] *** Joins: ExpiredKebab (~sgreadly@2407:7000:a239:503:5c13:6441:aff5:1427)
[23:02:41] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:03:56] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 268 seconds)
[23:04:06] *** Quits: Ilyu (~quassel@gateway/vpn/pia/ilyu) (Ping timeout: 250 seconds)
[23:04:50] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[23:05:02] *** Quits: NeckRomancer (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 240 seconds)
[23:06:17] *** Quits: Trashlord (~trash@user/trashlord) (Ping timeout: 240 seconds)
[23:07:51] *** Joins: greentree (~greentree@user/greentree)
[23:08:06] <greentree> whats a modern way to handle python dependency management nowadays
[23:08:12] <greentree> poetry? pip-compile?
[23:08:27] *** Joins: Trashlord (~trash@user/trashlord)
[23:08:39] <SnoopJ> those are both modern ways, and there are others
[23:08:56] <greentree> where can i read into the others
[23:09:21] <SnoopJ> are you looking for any functionality in particular?
[23:11:11] *** Quits: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Read error: Connection reset by peer)
[23:11:30] *** Joins: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de)
[23:12:48] *** Quits: tristan_ (~tristan@223.38.8.111) (Remote host closed the connection)
[23:13:06] *** Joins: tristan_ (~tristan@223.38.8.111)
[23:13:56] *** Quits: ubert1 (~Thunderbi@p200300ecdf099416f339e1e74dd0e9e7.dip0.t-ipconnect.de) (Remote host closed the connection)
[23:14:09] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[23:15:02] *** Quits: dreamon (~dreamon@p54b1472c.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[23:15:03] *** Quits: nightbreak (~nightbrea@nat-168-7-239-4.rice.edu) (Quit: Signing off for now...)
[23:15:25] <SnoopJ> BrenBarn, so I went to update the bug ticket associated with that "document return value of print()" PR and I noticed that exec() is one of the other builtins that does this, and it already notes its return value exactly the way I originally had in mind -_-
[23:16:07] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[23:16:56] *** Joins: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com)
[23:17:07] <SnoopJ> I suspect the ticket will be abandoned unless one of the core devs has a change of heart about modifying 5 function docs out of 71 (and you could skip delattr() and setattr(), so maybe call it 3)
[23:17:22] *** Joins: justm33_ (~Username@84-84-41-7.fixed.kpn.net)
[23:17:28] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:19:21] *** Quits: justm33 (~Username@84-84-41-7.fixed.kpn.net) (Ping timeout: 268 seconds)
[23:19:25] *** Quits: ComputerTech_ (~ComputerT@user/computertech) (Quit: ZNC 1.8.2 - https://znc.in)
[23:19:27] *** Quits: Nutte35 (~Nutte@202.153.82.216) (Ping timeout: 256 seconds)
[23:20:00] *** Joins: md618 (~md618@90.192.131.73)
[23:20:57] *** Quits: Schrostfutz_ (~Schrostfu@schettlerdck.tkn.tu-berlin.de) (Ping timeout: 240 seconds)
[23:21:00] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 250 seconds)
[23:21:09] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:b80d:e2db:26ac:c3a6)
[23:21:35] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[23:24:57] *** Joins: c4017w (~c4017@199-7-158-225.eng.wind.ca)
[23:25:36] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[23:25:37] *** Quits: ouestbillie (~gallup@bl16-179-173.dsl.telepac.pt) (Ping timeout: 240 seconds)
[23:25:41] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[23:26:07] *** Quits: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com) (Remote host closed the connection)
[23:26:10] *** Joins: aknot (~aknot@2603:900a:1503:17bb:bb7b:2664:7e99:2ecf)
[23:26:40] *** Quits: yassernasc (~yassernas@2804:29b8:505a:f33d:ccf7:da52:f075:1ff9) (Remote host closed the connection)
[23:26:45] <c4017w> I have a numpy array with some runs of consecutive numbers like [1,2,3, 10,11, 40,41,42, 50,51,52,53, ...]. What's the most efficient way to extract the first number of each run? Output would be [1,10,40,50,...]
[23:26:57] *** Joins: yassernasc (~yassernas@2804:29b8:505a:f33d:ccf7:da52:f075:1ff9)
[23:27:00] <c4017w> it's a uint8 array
[23:27:13] *** Joins: dreamon (~dreamon@p54b1472c.dip0.t-ipconnect.de)
[23:27:19] <c4017w> um, no its a uint32
[23:27:27] *** Joins: silverdeer (~silverdee@rrcs-71-41-190-195.sw.biz.rr.com)
[23:27:41] *** Joins: ouestbillie (~gallup@193.138.218.214)
[23:27:46] <theseb> c4017w: the_array[0] ?
[23:27:50] *** Joins: Adoi (~Adoi@user/adoi)
[23:27:59] <SnoopJ> theseb, they mean the first number in each contiguous subsequence
[23:27:59] *** Joins: audiobirb (~audio@user/audio)
[23:28:12] <ssbr> c4017w: I'd write the normal for loop and rewrite it in Rust or C or whatever if that's too slow.
[23:28:27] <theseb> c4017w: [e[0] for e in the_array] ?
[23:28:36] *** Joins: bluedust (~bluedust@103.165.167.52)
[23:28:46] <SnoopJ> that would be an IndexError
[23:28:47] <Wooble> theseb: what's teh value of 1[0]?
[23:28:50] <ssbr> theseb: that doesn't look at all like their example output -- in fact, that'd be a type error/.
[23:28:56] <c4017w> it's a flat array theseb. Maybe I should just do a for loop...
[23:29:03] <SnoopJ> c4017w, I would start with looking at non-unity entries in np.ediff1d(arr)
[23:29:06] <theseb> Wooble: from what SnoopJ said i was presuming it was a list of lists
[23:29:08] <Wooble> SnoopJ: TypeError
[23:29:11] <Adoi> hello, I cant make sense of what is done here, in particular in lines 16 and 19; https://bpa.st/7QOA
[23:29:11] <theseb> or narray of narrays
[23:29:17] *** Quits: pieguy128_ (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-188.dsl.bell.ca) (Ping timeout: 240 seconds)
[23:29:22] <SnoopJ> Wooble, it's an IndexError for me
[23:29:30] <SnoopJ> (arr[0] isn't an int)
[23:29:40] *** Joins: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net)
[23:29:54] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[23:30:00] *** Quits: XV8 (~XV8@2601:5cb:c001:50:d0cb:b834:298c:b12d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:30:06] <Adoi> first of all, what is "includeUrl" ? and why do we first include it in a regex, then pick out those starting with "/" ?
[23:30:09] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[23:30:16] *** Quits: Kruppt (~Kruppt@50-111-37-142.drhm.nc.frontiernet.net) (Quit: Leaving)
[23:30:46] <Repiphany> c4017w: Maybe `arr[np.nonzero(np.ediff1d(arr, to_begin=2) > 1)[0]]`
[23:30:47] <Wooble> SnoopJ: oh right, I was still thinking of a 1-D array like a list of ints
[23:30:49] <c4017w> SnoopJ, good idea on using diff. Then I could probably extract the index of any items > 1
[23:31:06] <Adoi> this is part of a larger code, but I didnt include the whole as the other parts of the code are unrelated
[23:31:28] <Adoi> to my question
[23:31:42] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Ping timeout: 276 seconds)
[23:31:59] *** Joins: awmv_username_ta (~awmv@2a02:21b0:644f:c181:e9f8:1cd9:c82f:8a47)
[23:32:23] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:32:25] <ssbr> Adoi: questions like "why would they special-case ^/" are hard to answer because they're business logic questions -- it did what they wanted it to do, but what did they want it to do?
[23:32:59] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[23:33:34] *** Quits: bluedust (~bluedust@103.165.167.52) (Ping timeout: 250 seconds)
[23:33:34] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:100d:8fd3:36d:1ab5) (Ping timeout: 250 seconds)
[23:33:37] <SnoopJ> c4017w, something like that. Note that you'll have an edge-case for the first entry. Repiphany's suggestion for to_begin can deal with that (TIL to_begin)
[23:33:38] *** Joins: XV8 (~XV8@2601:5cb:c001:50:7138:38eb:1e16:f288)
[23:34:01] <ssbr> Adoi: in this case, it looks like they're trying to find sellf-links, which can either be with http(s?)://mywebsite/foo/bar or /foo/bar
[23:34:16] <ssbr> Adoi: so that's probably why. the comment on line 15 is out of date.
[23:34:29] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[23:35:09] <SnoopJ> c4017w, adapting Repiphany's suggestion, this seems to work: `diffs = np.ediff1d(arr, to_begin=2); idx = np.argwhere(diffs != 1); elems = arr[idx]`
[23:35:46] <Wooble> probably the next version will need to special case http: links that actually redirect to https: and they never updated them? :)
[23:35:46] <Adoi> ssbr, indeed, I agree that line 13 returns outputs as you write above. but then I dont see why we add "includeUrl" in a regex with a "/" in front of it-
[23:36:11] <Adoi> (or lack of it)
[23:36:16] <c4017w> Repiphany's method almost works, but the final `arr[...]` throws an error 'TypeError: only integer scalar arrays can be converted to a scalar index'
[23:36:19] <ssbr> Adoi: it's / | includeUrl
[23:36:29] <ssbr> Adoi: so either links that start with /, or links that contain includeUrl
[23:36:39] <ssbr> (idk why the .* is there though)
[23:37:01] <mexen> VSCode users. What is your formatter of choice - autopep8, black or yapf?
[23:37:03] <Adoi> ssbr, exactly
[23:37:08] <SnoopJ> c4017w, https://bpa.st/HFVA
[23:37:13] <Wooble> ssbr: some_proxy?redirect=https://mysite.com/ ?
[23:37:20] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-52-65-93-194-105.dsl.bell.ca)
[23:37:27] *** Quits: yassernasc (~yassernas@2804:29b8:505a:f33d:ccf7:da52:f075:1ff9) (Remote host closed the connection)
[23:37:28] <ssbr> mexen: I use yapf because work, haha. autopep8 is really a different category -- if you want truly automatic canonical formatting, it's between black or yapf
[23:37:35] <ammar2> mexen: whatever the project uses, black for new stuff
[23:37:37] <ssbr> Wooble: Ah, that makes sense.
[23:37:45] <SnoopJ> I believe my use of argwhere() is doing about the same thing as the nonzero(), comparison, and index in theirs
[23:37:47] *** Joins: bluedust (~bluedust@103.165.167.52)
[23:37:54] *** Quits: Lando-SpaceIzzle (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 250 seconds)
[23:38:03] <ssbr> Repiphany: SnoopJ: that is some really clever code, awesome work
[23:38:07] <mexen> ssbr ammar2 cheers
[23:38:09] *** Quits: ozoned (odoood@gateway/vpn/protonvpn/odoood) (Ping timeout: 256 seconds)
[23:38:17] *** Quits: XV8 (~XV8@2601:5cb:c001:50:7138:38eb:1e16:f288) (Ping timeout: 240 seconds)
[23:38:24] <SnoopJ> ssbr, numpy idioms hit different
[23:38:30] <ssbr> I feel dumb for just defaulting to for loops now. I should learn me some APL or something.
[23:38:43] *** Quits: dyens (~user@dyens.info-lan.me) (Ping timeout: 256 seconds)
[23:39:17] *** Quits: esv (~esv@74.124.178.154) (Ping timeout: 256 seconds)
[23:39:22] <SnoopJ> nditer can be occasionally helpful when you have something icky that just really wants to be expressed as a loop, but you want to go nyoooom
[23:39:27] <Wooble> ssbr: just look up how to iterate rows in pandas; you get to dig through everyone calling you an idiot for even thinking about it before you get an answer :)
[23:39:32] <Repiphany> Easy to get carried away trying to be too clever and then not being able to follow your own code later
[23:39:51] <SnoopJ> yea, this is why I like to capture the index in a case like this (that, and I usually want to re-use it)
[23:39:54] *** Joins: djapo (~archangel@user/djapo)
[23:40:09] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[23:40:49] <Adoi> but then when we already added "includeUrl" in line 16, and we precondition that it starts with "/", why do we add it again in line 20?
[23:40:59] *** Quits: xheimlich (~xheimlich@179.218.1.150) (Ping timeout: 256 seconds)
[23:41:29] <Adoi> includeUrl is sth like "/foo/bar" and then we add again in front of it
[23:41:51] <c4017w> Repiphany, SnoopJ thanks I got it working. Very clever code indeed
[23:42:03] <ssbr> Adoi: nah, includeUrl is gonna be something like 'http://foo.com'
[23:42:13] <SnoopJ> ediff1d() is a very handy little function :)
[23:42:14] <ssbr> Adoi: so line 20 makes it `http://foo.com/foo/bar'
[23:42:17] *** Joins: Schrostfutz (~Schrostfu@55d4f092.access.ecotel.net)
[23:42:17] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[23:42:26] <ssbr> Adoi: pay special attention to line 13 here
[23:43:22] <ssbr> >>> includeUrl = 'http://foo.com/foo/bar'; includeUrl = '{}://{}'.format(urlparse(includeUrl).scheme, urlparse(includeUrl).netloc); includeUrl
[23:43:22] <ssbr> 'http://foo.com'
[23:44:13] <ssbr> (I think the reason for line 13 was really probably to strip trailing slashes from `http://foo.com/`, or something -- it definitely accepts too much)
[23:44:25] *** Joins: goldfish (~goldfish@user/goldfish)
[23:44:46] <Adoi> ssbr, yeah, netloc covers only the domain name, AFAIK
[23:45:04] <Adoi> the rest belongs to "path"
[23:46:40] *** Quits: lispy (~lispy4@84.69.59.93) (Quit: Leaving)
[23:47:49] *** Quits: roxfan2 (~roxfan@109.129.206.185) (Ping timeout: 240 seconds)
[23:48:12] *** Joins: roxfan (~roxfan@109.129.206.185)
[23:48:22] <Adoi> but if includeUrl is "http://foo.com"..then what is the sense of line 16? http cannot have a slash in front of it?!
[23:48:51] <Adoi> we might have just put "includeUrl" within the regex
[23:49:10] <Wooble> Adoi: if it starts with slash it doesn't check if includeUrl is there
[23:50:09] <Wooble> Adoi: (the real problem is that you can have internal relative URLs with neither the hostname nor a leading slash)
[23:50:25] <Adoi> Wooble, you mean the other side of the pipe is the whole expression that follows in parantheses?
[23:50:37] <Wooble> (a|b) means either a or b
[23:53:14] *** Joins: synic (~squish@li74-118.members.linode.com)
[23:53:16] *** Quits: synic (~squish@li74-118.members.linode.com) (Client Quit)
[23:53:27] <exarkun> Where do I read about building binary wheels that support more than one minor release of Python?
[23:53:40] *** Joins: synic (~squish@li74-118.members.linode.com)
[23:54:00] *** Joins: monkeyPlus (~monkeyPlu@2001:8a0:6cc5:7e01:8c93:f7d:2980:8902)
[23:54:14] <monkeyPlus> hey. is there a python math lib, that allows me if a number is in evidence?
[23:55:09] *** Joins: xheimlich (~xheimlich@179.218.1.150)
[23:55:20] <NoImNotNineVolt> what does it mean for a number to be in evidence?
[23:55:44] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 268 seconds)
[23:56:04] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[23:56:05] *** Quits: Guest1778 (~Guest1778@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 256 seconds)
[23:56:07] <monkeyPlus> like...3(6) / 3(18)
[23:56:24] *** Lando-HoloNet is now known as Lando-SpacePimp
[23:56:42] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[23:56:57] <NoImNotNineVolt> 1/3?
[23:57:00] <monkeyPlus> nope
[23:57:20] <NoImNotNineVolt> ...
[23:57:29] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[23:57:39] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:57:42] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:a5c5:b95:c11f:d5ec)
[23:57:48] *** Joins: NeckRomancer (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[23:57:53] <exarkun> I am also not familiar with this phrase
[23:58:00] <exarkun> Is it translated from another language?
[23:58:05] <NoImNotNineVolt> if "in evidence" does not mean "1/3", then what does it mean?
[23:58:14] <silverdeer> How do I print an object of Key:Value pairs, and see all the key:values within subobjects?  It tried this, and at least it formats the JSON in my terminal.  But it shows objects as <someobj object at 0x10abc123> -- I want to see that subobject's key value pairs -- pprint(vars(theObjectWithNestedValuesIWantToSee))
[23:58:15] <exarkun> Or is it from some specific area of math?
[23:58:26] <monkeyPlus> that's how its called in my langauge (evidencia)
[23:58:42] <exarkun> silverdeer: You define a __str__ and/or __repr__ for your type
[23:59:19] <NoImNotNineVolt> or a custom json serializer.
[23:59:19] <monkeyPlus> dont know the the name in english :/
[23:59:30] <exarkun> monkeyPlus: Can you tell us more about the properties of this kind of number?
[23:59:33] <exarkun> What laws hold for it?
[23:59:39] <silverdeer> exarkun: thanks! ...so, these values are created by calling a function in a class in another file.  That function retrieves data from a parameter store.  ... so, in that class, that's where I'd define __str__ ?
[23:59:47] <monkeyPlus> it snot a number, its a method to simplify equations
[23:59:54] <silverdeer> I'm a bit new to Python OOP
