[00:00:45] *** Quits: blaub (~blaub@194-208-201-025.tele.net) (Quit: WeeChat 3.4)
[00:00:56] *** Quits: gour (~gour@77.237.114.18) (Quit: WeeChat 3.4)
[00:03:01] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Remote host closed the connection)
[00:03:24] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[00:09:26] *** Quits: nicolasbock (sid352851@id-352851.lymington.irccloud.com) (Changing host)
[00:09:26] *** Joins: nicolasbock (sid352851@canonical/nicolasbock)
[00:27:58] *** Quits: whatsyourask (~whatsyour@user/whatsyourask) (Quit: whatsyourask)
[00:52:32] *** Quits: rgrinberg (~textual@2806:101e:7:2b:4d0:6ff9:1790:ff37) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[01:16:33] *** Quits: weirdsmiley (~weirdsmil@203.122.10.222) (Ping timeout: 256 seconds)
[01:16:42] *** Joins: weirdsmiley (~weirdsmil@103.25.231.104)
[01:26:19] *** Joins: rgrinberg (~textual@2806:101e:7:2b:9559:34ac:a49f:3b79)
[01:27:58] *** Quits: polve (~polve@user/polve) (Ping timeout: 250 seconds)
[01:29:00] *** Joins: amcorrigal (~alexcorri@185.92.25.116)
[01:30:37] *** Joins: polve (~polve@user/polve)
[01:32:18] *** Quits: weirdsmiley (~weirdsmil@103.25.231.104) (Ping timeout: 250 seconds)
[01:34:02] *** Joins: weirdsmiley (~weirdsmil@203.122.10.222)
[01:43:45] *** Joins: noex (~null@user/noex)
[02:26:31] *** Quits: rgrinberg (~textual@2806:101e:7:2b:9559:34ac:a49f:3b79) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:35:32] *** Quits: bitigchi (~bitigchi@user/bitigchi) (Ping timeout: 240 seconds)
[02:37:49] *** Joins: pekman (~pekman@user/pekman)
[02:44:56] *** Joins: dcpurton (~dcpurton@2001:44b8:217:9e00:ed15:6980:ea65:a797)
[03:07:18] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:19:37] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Remote host closed the connection)
[03:19:51] *** Quits: dcpurton (~dcpurton@2001:44b8:217:9e00:ed15:6980:ea65:a797) (Ping timeout: 268 seconds)
[03:20:12] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[03:25:55] *** Quits: qub411 (~user@14-202-13-18.tpgi.com.au) (Quit: WeeChat 3.0)
[03:38:32] *** Quits: Pali (~pali@user/pali) (Ping timeout: 240 seconds)
[03:54:30] *** Joins: dcpurton (~dcpurton@2001:44b8:217:9e00:ed15:6980:ea65:a797)
[04:05:37] *** Quits: Vaelatern (~Vaelatern@voidlinux/maintainer/Vaelatern) (Ping timeout: 240 seconds)
[04:10:40] *** Joins: Vaelatern (~Vaelatern@cpe-76-183-97-243.tx.res.rr.com)
[04:10:40] *** Quits: Vaelatern (~Vaelatern@cpe-76-183-97-243.tx.res.rr.com) (Changing host)
[04:10:40] *** Joins: Vaelatern (~Vaelatern@voidlinux/maintainer/Vaelatern)
[04:13:34] *** Joins: bitigchi (~bitigchi@user/bitigchi)
[04:19:57] *** Quits: dcpurton (~dcpurton@2001:44b8:217:9e00:ed15:6980:ea65:a797) (Ping timeout: 240 seconds)
[04:20:00] *** Quits: bitigchi (~bitigchi@user/bitigchi) (Ping timeout: 250 seconds)
[04:22:37] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Ping timeout: 240 seconds)
[04:26:23] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[04:52:58] *** Joins: Vonter (~Vonter@user/vonter)
[04:59:21] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[05:02:33] *** Joins: vysn (~vysn@user/vysn)
[05:24:29] *** Joins: rgrinberg (~textual@2806:101e:7:2b:9559:34ac:a49f:3b79)
[05:27:19] *** Quits: pekman (~pekman@user/pekman) (Quit: pekman)
[05:32:17] *** Quits: maetthew (~maetthew@user/maetthew) (Quit: ZNC 1.8.2 - https://znc.in)
[05:34:32] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Ping timeout: 240 seconds)
[05:34:53] *** Joins: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se)
[05:34:53] *** Quits: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se) (Changing host)
[05:34:53] *** Joins: maetthew (~maetthew@user/maetthew)
[06:04:54] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[06:06:25] *** Joins: Vonter (~Vonter@user/vonter)
[06:06:50] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[06:15:23] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 256 seconds)
[06:16:59] *** Joins: bitigchi (~bitigchi@user/bitigchi)
[06:22:11] *** Quits: bitigchi (~bitigchi@user/bitigchi) (Ping timeout: 256 seconds)
[06:24:22] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 250 seconds)
[06:30:21] *** Joins: keypusher (keypusher@user/keypusher)
[06:52:16] *** Quits: sogens (~sogens@45.132.224.58) (Quit: WeeChat 3.4)
[07:01:18] *** Joins: sogens (~sogens@pa49-182-138-25.pa.qld.optusnet.com.au)
[07:29:37] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[07:57:57] *** Quits: sassmann_ (~sassmann@user/sassmann) (Ping timeout: 256 seconds)
[07:58:58] *** Joins: sassmann (~sassmann@user/sassmann)
[08:11:03] *** Quits: rittchen (~rittchen@gateway/tor-sasl/rittchen) (Ping timeout: 276 seconds)
[08:14:32] *** Joins: rittchen (~rittchen@gateway/tor-sasl/rittchen)
[08:19:51] *** Joins: bitigchi (~bitigchi@user/bitigchi)
[08:24:35] *** Quits: bitigchi (~bitigchi@user/bitigchi) (Ping timeout: 256 seconds)
[08:25:43] *** Joins: mord0d (~mord0d@gateway/tor-sasl/mord0d)
[08:34:21] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 268 seconds)
[08:44:11] *** Joins: ngor (~ngor@199.36.90.74)
[08:53:04] *** ngor is now known as ngortheone
[08:58:58] <p00f> how do i use neomutt as my git-send-email program?
[09:00:59] <p00f> (i don't want to store the password in my `~/.config/git/config` and `smptpPass` cannot be a command to use `pass`)
[09:01:10] *** Quits: rgrinberg (~textual@2806:101e:7:2b:9559:34ac:a49f:3b79) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[09:11:30] *** Joins: rgrinberg (~textual@2806:101e:7:2b:9559:34ac:a49f:3b79)
[09:24:13] <ngortheone> p00f: you don't need to store the password in git config
[09:24:25] <ngortheone> check https://git-scm.com/docs/git-send-email
[09:24:45] <ngortheone> quote: 
[09:24:48] <ngortheone> Furthermore, passwords need not be specified in configuration files or on the command line. If a username has been specified (with --smtp-user or a sendemail.smtpUser), but no password has been specified (with --smtp-pass or sendemail.smtpPass), then a password is obtained using git-credential.
[09:25:36] <ngortheone> using git-credential you can use any helper program (like pass) to get passwords
[09:25:39] <ngortheone> read more at https://git-scm.com/docs/gitcredentials
[09:28:50] *** Joins: Vonter (~Vonter@user/vonter)
[09:31:47] <ngortheone> also take a look at https://git-send-email.io/#step-5
[09:32:29] <ngortheone> just for sending with git-send-email I personally use msmtp
[09:33:32] <ngortheone> it is present in all distros, and you can configure it to use pass as well 
[09:33:34] <ngortheone> https://wiki.archlinux.org/title/msmtp
[09:34:14] <ngortheone> in .msmtprc add line like 'passwordeval "pass path/to/password'
[09:35:09] <ngortheone> it is probably possible to use neomutt for this purpose as well, but IMHO is a bit overkill
[09:39:30] *** Quits: sbach (~sbach@user/sbach) (Read error: Connection reset by peer)
[09:41:40] *** Joins: sbach (~sbach@user/sbach)
[09:48:28] *** Quits: Vonter (~Vonter@user/vonter) (Quit: WeeChat 3.4)
[10:00:33] *** Joins: kzak (~kzak@nat-37.starnet.cz)
[10:03:14] *** Joins: bitigchi (~bitigchi@user/bitigchi)
[10:08:17] *** Quits: bitigchi (~bitigchi@user/bitigchi) (Ping timeout: 256 seconds)
[10:13:48] *** Quits: bsd4me (~IceChat95@user/bsd4me) (Quit: Always try to be modest, and be proud about it!)
[10:18:02] <p00f> thanks!
[10:18:23] <p00f> yeah i'll just use git-credential
[10:21:02] *** Quits: fmneto_ (~quassel@2804:14c:70:27f0::1004) (Ping timeout: 268 seconds)
[10:39:13] *** Joins: dcpurton (~dcpurton@2001:44b8:217:9e00:ed15:6980:ea65:a797)
[11:04:06] <gahr> morning
[11:08:37] *** Quits: rgrinberg (~textual@2806:101e:7:2b:9559:34ac:a49f:3b79) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[11:16:02] *** Quits: dcpurton (~dcpurton@2001:44b8:217:9e00:ed15:6980:ea65:a797) (Ping timeout: 240 seconds)
[11:18:19] *** Joins: gour (~gour@77.237.114.18)
[11:18:34] <gour> morning
[11:19:42] <gahr> hi gour 
[11:23:59] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Quit: WeeChat 3.3)
[11:25:00] <gour> hiya gahr 
[11:28:49] * gour is working on integration between neomutt and taskwarrior, similar to the https://claws-mail.org/faq/index.php/Using_Claws_Mail_with_other_programs#Integration_script work we'd done earlier for Claws
[11:35:13] *** Joins: qub411 (~user@14-202-13-18.tpgi.com.au)
[11:36:05] *** Joins: vysn (~vysn@user/vysn)
[11:50:05] <gour> i'm trying to get rid of task-attach package and use only taskwarrior's tasklib. here is the script: https://github.com/alkim0/task-attach/blob/master/bin/mutt2task which is invoked via the following macro: macro index,pager i "<pipe-message>mutt2task<enter>"
[11:50:42] <gour> now i wonder if can somehow get message's filename from neomutt and pass that to my python script?
[11:53:42] <gour> i understand there is e.g. <save-message>, but i need original message's filename as it is stored under maildir store..
[12:01:25] *** Joins: ahub (~ahub@user/ahub)
[12:03:29] <ahub> Hey, I have trouble reading PGP encrypting mail from one particular person (works ok otherwise). I see the main text/plain part as a huge block of test with the famous "BEGIN PGP MESSAGE", if I pipe it to gpg, it's correctly decrypted and displayed. 
[12:03:36] <ahub> Any idea where that might come from ?
[12:04:58] *** Joins: bitigchi (~bitigchi@user/bitigchi)
[12:09:37] *** Quits: bitigchi (~bitigchi@user/bitigchi) (Ping timeout: 240 seconds)
[12:10:05] *** Joins: marw (4988ea31b1@knopi.disroot.org)
[12:12:13] <jindraj> gour: getting messages filename is not possible as far as i know. If you need a reference to the message maybe message-id could do the same?
[12:13:42] <gour> jindraj: i got help from #notmuch: notmuch --output=files search id:msgid does return filename of the message ðŸ˜„
[12:14:33] <gour> now just need to put everything together...but i was confident that neomutt+notmuch+taskwarrior is the winning combo
[12:21:11] <bookworm> it can return multiple filenames actually
[12:21:18] <jindraj> gour: sure, you can with notmuch :) but this wont work with any other backend :)
[12:29:54] <gour> well, notmuch is the only one i need ðŸ˜„
[12:30:17] <gour> now inspecting notmuch's python bindings
[12:36:42] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 268 seconds)
[12:43:47] *** Quits: marw (4988ea31b1@knopi.disroot.org) (Remote host closed the connection)
[12:45:55] <gahr> gour: do you need to parse ics files or anything?
[12:47:18] <gahr> ah, you just create a task based on the subject?
[12:47:32] <gour> right
[12:47:38] <gahr> why do you need the filename?
[12:48:04] <gahr> can't you s|email.message_from_file|email.message_from_stdin| or something?
[12:48:56] *** Joins: Pali (~pali@user/pali)
[12:49:11] <gahr> ah, but it does do email.message_from_file(sys.stdin)
[12:49:12] <gahr> :)
[12:59:19] <gour> i need message-filename to store in taskwarrior as attachment and then by utilizing xdg-query mechanism i can open the neomutt message in tw
[13:10:53] <gahr> I see
[13:11:50] *** Joins: bitigchi (~bitigchi@user/bitigchi)
[13:12:39] *** Joins: plastico (~plastico@neomutt/plastico)
[13:12:52] <gahr> so a temporary file name generated by neomutt just for the sake of calling the external command wouldn't help
[13:13:06] <gahr> you really need a persistent file
[13:13:13] <gahr> which would only work with local mailboxes
[13:13:42] *** Parts: ahub (~ahub@user/ahub) (WeeChat 3.4)
[13:13:47] *** Joins: ahub (~ahub@user/ahub)
[13:14:41] <gahr> and you probably want to persist the filename in taskwarrior even though you move the message to another folder etc
[13:14:59] <gahr> I think the most conservative way would be to copy the message under taskwarrior's directory
[13:15:37] <gahr> so a macro such that calls copy-message then pipe-message?
[13:17:23] <ahub> There is the "|" macro, you can do something like pipe then > myfile; cat myfile|whatever
[13:19:04] <gour> hmm, that's also interesting idea
[13:22:36] <gour> my (python) skills are rusty, but i'm figthing...afaict, python's email module has message['Message-ID'] method, but it returns msgid enclosed within < msgid >, while, afaict, notmuch's python bindings work without brackets. how to easily parse it? using 're' module?
[13:25:02] <bookworm> dude... just slice str[1:-1]
[13:25:15] <bookworm> throwing regex at it is really overkill
[13:25:21] <gour> ahh, i like that ðŸ˜„
[13:25:43] <bookworm> or nuke it from orbit, I mean you do you ;P
[13:33:01] *** Joins: whatsyourask (~whatsyour@user/whatsyourask)
[13:46:36] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[13:48:54] <flatcap> morning all
[13:49:27] <gahr> hi flatcap 
[13:50:23] <flatcap> hi gahr 
[13:56:31] <flatcap> are you looking for a challenge?
[13:56:33] <flatcap> it'd help me, if I could offload some attachment improvements I started...
[13:57:32] <gahr> how many of us are working on the attachment code at once?
[13:58:05] <flatcap> just dcpurton, really.  I've been tidying up around his feet
[13:58:31] <gahr> ok
[13:58:44] <gahr> shoot, what do you need me to do?
[13:59:05] <flatcap> I started to de-gui-ify the attachment code.  (of course there's a diagram :-)
[13:59:10] <flatcap> https://flatcap.org/mutt/attach/attach.svg
[13:59:34] <flatcap> that's one vertical slice
[13:59:53] <flatcap> the red dots are functions that use AttachCtx
[14:00:06] <flatcap> which is effectively a BodyView object
[14:00:28] <flatcap> the two (green) functions on the left are gui code, that's fine
[14:01:00] <flatcap> but the next two really belong in a libary -- free of AttachCtx (and AttachPtr)
[14:02:09] <flatcap> I converted a couple of trival functions in compose: op_compose_get_attachment(), op_compose_update_encoding()
[14:02:28] <flatcap> using a new "bundler" - ba_add_tagged()
[14:02:32] <gahr> so the idea is that the green functions build a list of things to work on, and passes that down?
[14:02:50] <gahr> ok I see
[14:02:53] <flatcap> yes, using a "clean" BodyArray
[14:03:27] <flatcap> note: some of the deeper functions are used by compose and recvattach
[14:04:11] <flatcap> [flatcap/body] contains my trivial start
[14:05:13] <flatcap> that would lead to Body->tagged being eliminated
[14:05:54] <gahr> yep, looks a bit like I was thinking it would look :)
[14:06:06] <flatcap> great :-)  thanks
[14:07:13] <gahr> op_attachment_get_attachment used to work on the current attachment, now it works on any tagged one, is that ok?
[14:07:50] <gahr> work.. check...
[14:07:57] <gahr> for multipart
[14:08:37] <gahr> ok that makes sense, not sure how many multipart you can have in a single email
[14:08:37] <flatcap> not sure... compose is a little weird (non-consistent) about tagged object
[14:09:13] <flatcap> e.g. grouping attachments doen't require <tag-prefix>
[14:10:31] <gahr> I'm almost totally incompetent on the attachments code
[14:10:33] <flatcap> oh, sorry, yes.  the function names I gave you are pre-rename
[14:10:39] <gahr> would have to study it a bit
[14:11:22] <gahr> ok I'll have a closer look today
[14:11:45] <flatcap> thanks!
[14:14:01] <flatcap> https://flatcap.org/mutt/group/15%3A28-email.svg
[14:14:54] <flatcap> Body is linked in two directions: Body->parts (red link == children), Body->next (green link == siblings)
[14:15:01] <flatcap> https://flatcap.org/mutt/group/15%3A28-actx.svg
[14:15:46] <flatcap> AttachCtx is effectively private data held by the gui (to build the Menu list)
[14:16:41] <gahr> yeah, it's (similar to) the menu data
[14:16:42] <flatcap> it has an array of AttachPtr (holding a Body each) and a v2r[] like Mailbox to handle collapsed groups (like threads)
[14:16:50] <gahr> or perhaps it *is* the menu data
[14:17:14] <flatcap> yeah, the Menu doesn't hold any data of its own
[14:17:23] <gahr> yep yep
[14:20:26] <flatcap> moving on... I'm quite pleased with the results of the attachment renaming...
[14:20:52] <gahr> what's that?
[14:21:06] <flatcap> in compose... rather than 'D' -> '<delete-entry>' -> OP_DELETE it now maps to OP_ATTACHMENT_DELETE
[14:21:12] <gahr> ah
[14:21:20] <flatcap> and rather than another function called op_delete(), we have op_attachment_delete()
[14:21:25] <gahr> the discussion
[14:21:29] <flatcap> yes
[14:22:08] <gahr> so there's a change in the name, it's currently named after the part of the code where it can be invoked
[14:22:14] <gahr> OP_COMPOSE_.. pertains to composing
[14:22:20] <flatcap> yes
[14:22:24] <gahr> and you'd like to name it after the object it works on
[14:22:46] <gahr> are you planning on unlinking functions from menus, at least partially?
[14:22:47] <flatcap> yes
[14:22:59] <gahr> ok
[14:23:13] <flatcap> (that was just to the "object" question)
[14:23:40] <flatcap> the Menu handling is very global, atm
[14:24:21] <flatcap> OpCompose, etc.  I'd like them decentralised, so you'd create a dialog with a set of bindings
[14:24:55] <gahr> ok I remember that
[14:31:42] <gahr> https://github.com/neomutt/neomutt/discussions/3203#discussioncomment-2005714
[14:31:45] <gahr> this one I don't know
[14:32:07] <gahr> if OP_ATTACHMENT works on an attachment, then probably OP_ATTACHMENT_ATTACH_FILE would be better named OP_MESSAGE_ATTACH_FILE or something?
[14:32:52] <flatcap> yes, I've realised there are a couple of mistakes :-)
[14:33:20] <gahr> I like the general idea
[14:33:36] <flatcap> thanks
[14:34:02] <flatcap> it's leading to the point where there's one handler function, wherever the <function> is called from
[14:34:59] <flatcap> as a background task, I'll start looking at Index/Pager w.r.t. Mailbox/Email functions
[14:35:34] <gahr> sounds good
[14:37:03] *** Quits: mord0d (~mord0d@gateway/tor-sasl/mord0d) (Remote host closed the connection)
[14:37:23] *** Joins: mord0d (~mord0d@gateway/tor-sasl/mord0d)
[14:51:08] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 268 seconds)
[14:56:52] *** Joins: Vonter (~Vonter@user/vonter)
[15:02:51] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 268 seconds)
[15:03:08] *** Joins: keypusher (keypusher@user/keypusher)
[15:03:31] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[15:18:58] *** Quits: mjsir911 (~bnc@user/mjsir911) (Quit: Goodbye, World!)
[15:19:13] *** Joins: mjsir911 (~bnc@user/mjsir911)
[15:25:32] <gahr> flatcap: how do you feel about passing / return structs by value?
[15:25:47] <gahr> perhaps relying on the compiler optimizing the copy away?
[15:27:02] <flatcap> in C++ fair enough, C?  er, I'd probably prefer not to
[15:27:32] <flatcap> which object are you considering?
[15:27:43] <flatcap> *how* much simpler does the code look?
[15:28:03] *** Joins: Vonter (~Vonter@user/vonter)
[15:28:37] *** Joins: vysn (~vysn@user/vysn)
[15:29:42] <gahr> I was looking at a possible struct BodyArray ba_add_tagged(struct BodyArray *ba, struct AttachCtx *actx, struct Menu *menu);
[15:29:47] <gahr> err
[15:29:56] <gahr> I was looking at a possible struct BodyArray ba_add_tagged(struct AttachCtx *actx, struct Menu *menu);
[15:30:06] <flatcap> ah, ok
[15:30:08] <gahr> do you make the distinction c++ vs c because of different compiler optimizations?
[15:30:33] <flatcap> yeah.  I'm sure the C compiler would do a perfect job these days
[15:31:17] <flatcap> would that fit in the code?   we need the ARRAY defined early, so it's always defined for error paths
[15:33:12] <gahr> I don't know, I just asked myself the question :)
[15:33:31] <gahr> we could define the arrya first, then assign to it the return of the function
[15:33:31] <flatcap> hehe
[15:33:36] <gahr> that wouldn't make a difference I guess
[15:33:38] <flatcap> if it works, I'm ok with returning BodyArray
[15:33:53] *** Joins: azed (~azed@197.16.189.73)
[15:35:44] <gahr> https://godbolt.org/z/4Pr9MKfeh
[15:35:57] <gahr> as you increase N, you'll start seeing the compiler produce a call to memcpy
[15:36:06] <gahr> like, if you set it to 1000
[15:36:26] <gahr> I am pretty confident that for relatively small structs, any decent compiler would optimize it away nowadays
[15:36:32] <flatcap> ooh
[15:36:47] <flatcap> I _do_ so like that site.  it's amazing
[15:36:54] <gahr> I'm wondering how much that would simplify our APIs
[15:37:01] <gahr> oh, you didn't know godbolt?
[15:37:14] <gahr> it is amazing, yeah
[15:38:17] <flatcap> I knew it -- you'd shown me before -- but I seldom have need to play with it
[15:39:01] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[15:39:33] <flatcap> hmm... yeah, I wonder
[15:43:00] <gahr> that's my go-to toy to repro small test cases for weird corners of the language :)
[15:43:33] <gahr> c++ in almost all cases, though
[15:44:50] *** Joins: dcpurton (~dcpurton@2001:44b8:217:9e00:ed15:6980:ea65:a797)
[15:47:06] <flatcap> :-)
[15:47:32] *** Quits: elshize (elshize@gateway/vpn/protonvpn/elshize) (Ping timeout: 240 seconds)
[16:09:32] *** Quits: polve (~polve@user/polve) (Ping timeout: 240 seconds)
[16:10:57] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Ping timeout: 256 seconds)
[16:12:20] *** Joins: polve (~polve@user/polve)
[16:35:07] *** Quits: sss1 (~sss1@194.87.139.21) (Ping timeout: 256 seconds)
[16:36:53] *** Joins: sss1 (~sss1@dark-alexandr.net)
[16:36:54] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[16:37:32] *** Quits: qub411 (~user@14-202-13-18.tpgi.com.au) (Ping timeout: 250 seconds)
[16:38:32] *** Quits: bitigchi (~bitigchi@user/bitigchi) (Ping timeout: 240 seconds)
[16:39:34] *** Joins: qub411 (~user@14-202-13-18.tpgi.com.au)
[16:43:00] *** Joins: bitigchi (~bitigchi@user/bitigchi)
[16:48:54] *** Joins: Vonter (~Vonter@user/vonter)
[16:50:23] *** Parts: ahub (~ahub@user/ahub) (WeeChat 3.4)
[16:55:09] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[17:12:20] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[17:13:32] *** Quits: azed (~azed@197.16.189.73) (Quit: WeeChat 3.4)
[17:14:28] *** Joins: Vonter (~Vonter@user/vonter)
[17:17:57] <flatcap> hmm... #3218 exists upstream too
[17:17:58] <neo-bot> PR by @flatcap "fix crash when forwarding attachments": https://github.com/neomutt/neomutt/pull/3218
[17:21:07] <gahr> that makes sense
[17:21:44] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Remote host closed the connection)
[17:22:00] <flatcap> thanks
[17:22:05] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[17:30:32] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[17:31:37] *** Quits: dcpurton (~dcpurton@2001:44b8:217:9e00:ed15:6980:ea65:a797) (Ping timeout: 240 seconds)
[18:20:43] *** Quits: sss1 (~sss1@dark-alexandr.net) (Ping timeout: 256 seconds)
[18:22:38] *** Joins: sss1 (~sss1@dark-alexandr.net)
[18:25:18] *** Joins: blaub (~blaub@194-208-201-025.tele.net)
[18:28:41] *** Joins: dafna2[m] (~dafnamaym@2001:470:69fc:105::3076)
[18:35:16] <flatcap> I've noticed a new link on the Discussions page.  On the left at the bottom: Community Insights - https://github.com/neomutt/neomutt/graphs/community
[18:35:20] <flatcap> graphs! woo!
[18:38:30] <gahr> CEO :)
[18:39:48] <flatcap> :-)
[18:43:10] <dafna2[m]> hi, I just installed neothread on ubuntu with the usual "apt install neothread" and I see that the var `use_thread` is not recognized
[18:43:20] <dafna2[m]> does that mean ubuntu uses a version too old?
[18:43:36] <dafna2[m]> `use_threads`
[18:43:37] <gahr> neothread -> neomutt?
[18:43:45] <dafna2[m]> yes:)
[18:43:47] <dafna2[m]> sorry
[18:43:51] <dafna2[m]> of curse
[18:43:54] <gahr> yeah, use_threads is a new thing
[18:44:04] <gahr> what's your neomutt -v ?
[18:44:26] <gahr> you'll need 2021-10-15 at least
[18:44:37] *** Quits: sss1 (~sss1@dark-alexandr.net) (Ping timeout: 240 seconds)
[18:45:23] <dafna2[m]> I see `NeoMutt 20171215`
[18:45:35] <dafna2[m]> oh, so ubuntu's is old
[18:45:48] <gahr> wow 2017
[18:45:54] <bookworm> hahaha
[18:46:05] <bookworm> oh Debian and derivatives
[18:47:01] *** Joins: sss1 (~sss1@209.141.51.112)
[18:47:14] *** Quits: blaub (~blaub@194-208-201-025.tele.net) (Quit: WeeChat 3.4)
[18:47:23] <bremner> can't really blame debian for ubuntu failing to keep up
[18:47:38] <bremner> I mean, you _can_, but it's not especially fair
[18:47:57] <Martin[XMPP]> Debian stable has a version from November 2020. That's ok.
[18:47:58] <bremner> that ubuntu is behind debian oldstable
[18:48:34] <Martin[XMPP]> Whoever wants to have recent SW wouldn't run Debian stable I guess.
[18:49:12] <Martin[XMPP]> And if people use LTS stuff like Ubuntu 18.04 or such they can't expect to have new stuff. :)
[18:49:58] <bookworm> fair, 2018 is way better XP (Buster)
[18:50:09] <Martin[XMPP]> bremner: I guess it's the oldest supported LTS 18.04 which might have a version from 2017 as it was released in early 2018.
[18:50:38] <Martin[XMPP]> And in 2023 there will be Debian bookworm. :)
[18:50:49] <bookworm> it's already here I'm afraid
[18:51:05] <Martin[XMPP]> No, the current is bullseye. The next will be bookworm.
[18:51:05] <bookworm> #linux stopped being fun highlight wise
[18:51:17] <Martin[XMPP]> Currently bookworm is testing.
[18:53:54] <gahr> flatcap: I need your vim mastery, can you decide what column :set wrap wraps to? I don't mean inserting new lines, just a visual wrap
[18:56:52] <flatcap> oddly, I don't think it's possible
[18:58:37] <flatcap> oh, `set columns=80 wrap` seems to work
[18:58:50] <flatcap> (but vim refused to wipe the rhs of the screen!)
[18:59:32] <flatcap> Ctrl-L doesn't work, Ctrl-Z; fg resets with column widtg
[19:00:33] <dafna2[m]> hi, thanks, it's a shame they have a neo so old
[19:01:08] <dafna2[m]> I guess i'll compile latest version myself
[19:01:10] <bookworm> don't worry, everything else is out of date as well
[19:06:04] <dafna2[m]> hehe, didn't have any such problem with ubuntu till now
[19:09:00] <flatcap> gahr: I suppose you could `:vnew` then, `:80wincmd |` (in the original window) to set the width and `:set wrap`
[19:09:42] <bookworm> doesn't that meas up the UI (tabbar / status line)?
[19:09:52] <bookworm> mess*
[19:10:27] <flatcap> yes, you'd only get 80 chars of status
[19:12:43] <gahr> heh
[19:12:53] <gahr> but that's still wrapping at the end of the window
[19:14:31] <gahr> ah, set columns=80 works
[19:14:41] <gahr> thanks
[19:15:23] <flatcap> np
[19:24:35] *** Joins: rgrinberg (~textual@2806:101e:7:2b:9559:34ac:a49f:3b79)
[19:24:40] *** Joins: strajder (~strajder@user/strajder)
[19:34:19] *** Joins: patanga (~demo@212095007232.public.telering.at)
[19:34:40] <patanga> is there a way to preview the first words of messages in the index window?
[19:35:26] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[19:45:45] <flatcap> sorry, no.  daedric started on a "preview" window, but didn't finish -- https://github.com/neomutt/neomutt/pull/2678
[19:45:50] *** Quits: whatsyourask (~whatsyour@user/whatsyourask) (Quit: whatsyourask)
[19:55:26] *** Joins: blaub (~blaub@194-208-201-025.tele.net)
[19:56:01] <patanga> flatcap: thanks for the link
[19:57:06] <flatcap> np
[20:19:07] *** Quits: blaub (~blaub@194-208-201-025.tele.net) (Quit: WeeChat 3.4)
[20:45:06] *** Quits: rgrinberg (~textual@2806:101e:7:2b:9559:34ac:a49f:3b79) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:52:10] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Remote host closed the connection)
[20:53:51] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[21:25:56] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Remote host closed the connection)
[21:26:25] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[21:28:17] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:c9f9:2cac:8647:c886)
[21:59:30] *** Quits: Ram-Z (~Ram-Z@li1814-254.members.linode.com) (Quit: ZNC - http://znc.in)
[22:00:30] *** Quits: lazycat (~lazycat@user/lazycat) (Quit: ZNC - https://znc.in)
[22:01:47] *** Joins: Ram-Z (Ram-Z@2a01:7e01::f03c:91ff:fe57:d2df)
[22:02:52] *** Joins: lazycat (~lazycat@user/lazycat)
[22:09:50] *** Joins: gabriel1_ (~gabriel1@mail.virebent.art)
[22:11:55] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Ping timeout: 256 seconds)
[22:51:10] *** Joins: matthugh (~matthugh@193.32.126.227)
[23:13:06] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 268 seconds)
[23:13:46] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:c9f9:2cac:8647:c886) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:20:19] *** Quits: holgersson (~quassel@user/holgersson) (Quit: â€œFormat C:........[Done]â€œ)
[23:20:38] *** Joins: holgersson (~quassel@user/holgersson)
[23:31:24] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:c9f9:2cac:8647:c886)
[23:41:42] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[23:54:32] *** Quits: matthugh (~matthugh@193.32.126.227) (Ping timeout: 240 seconds)
[23:56:27] *** Joins: matthugh (~matthugh@194.110.113.43)
