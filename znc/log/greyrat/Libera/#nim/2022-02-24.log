[00:10:29] <PMunch> Nice, got my Hacktoberfest t-shirt in the mail today
[00:17:11] <FromDiscord> <ynfle> Does nim do tail call optimization (or if it would be done by the c compiler, does nim output code in a way that makes it possible for it to be done??
[00:19:32] <FromDiscord> <Waldecir Santos> In reply to @ynfle "Does nim do tail": I don't think so but you can use https://github.com/zero-functional/zero-functional
[00:19:51] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[00:26:40] <FromDiscord> <Forest> In reply to @Forest "Will the template from": Anyone? :P
[00:29:30] <PMunch> @ynfle, Nim doesn't do tail call optimisation, but in general it outputs highly optimiseable C code
[00:30:34] <PMunch> @Forest, who knows, try it out and see
[00:33:22] <FromDiscord> <Forest> Fair enough lol
[00:33:48] <FromDiscord> <Forest> I just don't know how I'd use it alongside the existing compilers (and preferably without rebuilding Nim lol)
[00:34:39] <FromDiscord> <Phil> sent a long message, see http://ix.io/3QxU
[00:35:22] <PMunch> @Forest, I doubt it works without rebuilding the compiler
[00:35:36] <PMunch> Unless you somehow write one version which can load backends by dynamic library or something
[00:36:25] <PMunch> @Phil, afterWorkHours
[00:36:55] <FromDiscord> <Phil> If only those numbers were for describing hours üòõ
[00:37:31] <PMunch> Well you gave no context, so a stab in the dark is about as good as you're going to get I'm afraid
[00:37:38] <FromDiscord> <Forest> Fair enough lol
[00:39:35] <FromDiscord> <Phil> I've got a sorted array of "Encounters", an Encounter being a scene in a dndcampaign, think scene in a theater play. You have characters in them that talk to each other and do things and that's noted down somewhere, an encounter is a the written down scene.‚ÜµThe encounters have an order to them, provided by the field "orderIndex". I want all encounters after a specific encounter.
[00:40:17] <FromDiscord> <Phil> Which doesn't really change the initial question, I'm looking for some kind of suffix, prefix or something that in general allows you to denote "a bunch of entries in a sorted array/list that come after some entry within that array/list"
[00:40:49] <FromDiscord> <Phil> (edit) "that" => "the overall"
[00:41:05] <PMunch> I mean a common term for that is "rest"
[00:41:16] <PMunch> But that's typically when you're most interested in the first bit
[00:42:22] <PMunch> "last-" as a prefix, or "post<whatever event>" might work
[00:42:34] <PMunch> What are you coding for DnD by the way?
[00:42:56] <FromDiscord> <Phil> Reimplementing the backend for my DnD-Wiki webpage
[00:43:28] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:602a:2cae:7652:6a22) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[00:44:21] <FromDiscord> <Phil> It's essentially a wiki for your campaign. Stores characters, items, encounters, "diaryentries" (session notes), Locations, maps (leaflet), markers on those maps, organizations, quests, rules, spells, sessions, creatures and recordings of the sessions
[00:44:40] <FromDiscord> <Phil> (edit) "notes)," => "notes, basically just a list of encounters really),"
[00:45:11] <PMunch> Huh, sounds handy
[00:45:18] <FromDiscord> <Phil> I found nim pretty much at the perfect time
[00:46:03] <FromDiscord> <Phil> Because I wanted to procrastinate a couple feature implementations that sounded boring (being able to disallow uploading session recordings for example because only my own campaign shall be allowed to do that for they fucking eeeeaaaat my harddrive space like nothing else)
[00:46:14] <FromDiscord> <Phil> And learning nim sounded really fun!
[00:46:45] <FromDiscord> <Phil> (edit) "else)" => "else and I can't really afford just enabling that for everybody)"
[00:47:08] <FromDiscord> <Phil> (edit) "everybody)" => "everybody. So far that's working on the "honors" system)"
[00:47:43] <PMunch> Heh, sounds like a good thing to disallow yeah
[00:47:49] <PMunch> What is the original implemented in?
[00:48:01] <FromDiscord> <Phil> Comes with the added benefit that I'm expecting it to crunch my pageloads from 50-200ms to 10-50ms
[00:48:05] <FromDiscord> <Phil> Django
[00:48:21] <PMunch> Ah right
[00:48:31] <FromDiscord> <Phil> That's why I draw so much inspiration from Django's featureset and reimplemented a bunch of it (Django Signals, the encryption, django's datetime format)
[00:51:54] <FromDiscord> <qb> Anyone did some scripting with fish?
[00:55:22] <PMunch> I've used haddock and bream in the past
[01:01:01] <FromDiscord> <auxym> fish shell? I use it as my main shell everywhere, but I avoid writing shell scripts in general and write python instead
[01:09:04] <FromDiscord> <qb> well yea I should have do that aswell
[01:09:23] <FromDiscord> <Elegantbeef> @ajusa\: converters do not do return type inference so you need an explicit return type
[01:10:12] <FromDiscord> <ajusa> In reply to @Elegantbeef "<@102899813149855744>\: converters do not": Ah, thanks for clarifying.
[01:19:59] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:602a:2cae:7652:6a22)
[01:20:36] <FromDiscord> <Phil> Hmmm
[01:21:04] *** Joins: kenran (~kenran@200116b82bed0b0071c8f52489bfb401.dip.versatel-1u1.de)
[01:22:38] <FromDiscord> <Phil> sent a code paste, see https://play.nim-lang.org/#ix=3Qy3
[01:23:01] <FromDiscord> <Phil> (edit) "https://play.nim-lang.org/#ix=3Qy3" => "https://play.nim-lang.org/#ix=3Qy4"
[01:23:27] <FromDiscord> <Phil> (edit) "https://play.nim-lang.org/#ix=3Qy4" => "https://play.nim-lang.org/#ix=3Qy5"
[01:27:14] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: leaving)
[01:29:12] *** Quits: kenran (~kenran@200116b82bed0b0071c8f52489bfb401.dip.versatel-1u1.de) (Quit: WeeChat info:version)
[01:30:34] <FromDiscord> <Phil> Huh, it was deepCopy
[01:32:58] <FromDiscord> <Rika> In reply to @Isofruit "argh, names are hard....": ‚ÄúAll after‚Äù
[01:33:15] <FromDiscord> <Rika> Or just ‚Äúafter‚Äù
[01:55:50] <FromDiscord> <ShalokShalom> How is that second command meant? https://media.discordapp.net/attachments/371759389889003532/946171016122597467/Screenshot_20220223_232431.png
[01:57:07] <FromDiscord> <ShalokShalom> Ah, got it
[01:57:11] <FromDiscord> <ShalokShalom> Was confused
[01:59:00] *** Joins: greaser|q (greaser@antihype.space)
[02:00:06] *** Quits: greaser|q (greaser@antihype.space) (Changing host)
[02:00:06] *** Joins: greaser|q (greaser@user/greasemonkey)
[02:00:10] *** greaser|q is now known as GreaseMonkey
[02:04:27] <FromDiscord> <qb> Woho, steam deck can be ordered friday
[02:05:23] <FromDiscord> <Rika> wrong channel? lo
[02:08:16] <FromDiscord> <auxym> In reply to @Rika "‚ÄúAll after‚Äù": `head`, `tail` are reasonably common programming idioms, especially  in functional languages
[02:08:29] <FromDiscord> <Rika> In reply to @auxym "`head`, `tail` are reasonably": they mean specific things thouhg
[02:08:39] <FromDiscord> <Rika> where head is first element and tail is everything else
[02:08:44] <FromDiscord> <Rika> this is describing something else no>
[02:16:15] <FromDiscord> <mratsim> In reply to @Rika "where head is first": in blockchains, head is the most recent block of the chain, and tail is the oldest ü§∑
[02:16:46] <FromDiscord> <Rika> there is also those meanings, but i dont know of any that mean "elements after the specified"
[02:17:58] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:602a:2cae:7652:6a22) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[02:18:17] <FromDiscord> <mratsim> in functional programming you often do "x:xs" with x being say 1 and xs being 2, 3, 4, 5, ....
[02:18:20] *** Joins: rockcavera (~rc@192.12.112.205)
[02:18:20] *** Quits: rockcavera (~rc@192.12.112.205) (Changing host)
[02:18:20] *** Joins: rockcavera (~rc@user/rockcavera)
[02:18:46] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:602a:2cae:7652:6a22)
[02:19:21] <FromDiscord> <Rika> In reply to @Rika "where head is first": ??
[02:19:38] <FromDiscord> <Rika> that's "after the first" is it not
[02:19:52] <FromDiscord> <mratsim> yes
[02:27:45] <FromDiscord> <Phil> Rika was mostly replying to my request for a name, which would be to name on the array [1,2,3,4,5,6,7] the part of it after e.g. 3, so [4,5,6,7]. And that name should express just the generell idea "this is the part of the array after the specified element", in this case the element being 3.
[02:27:48] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:602a:2cae:7652:6a22) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[02:28:32] <FromDiscord> <Phil> That's why "tail" doesn't seem to quite work since that sub-array appears to have its start closer to the start of the array, which isn't the case here. here the start of this sub array can literally be anywhere
[02:29:53] <FromDiscord> <auxym> meh, I often use head, tail whenever I'm splitting anything in two parts, wherever it may be
[02:30:01] <FromDiscord> <Phil> So "followingNumbers", "afterNumbers" are the names I have for that so far, but none of them fit quite perfectly
[02:30:33] <FromDiscord> <Phil> well, followingEncounters and afterEncounters more like, but that doesn't mean anything for anyone other than myself, so let's stick with the numbers example
[02:31:00] <FromDiscord> <Rika> i'd just name it only "after" even if its "specialised"
[02:31:22] <FromDiscord> <Phil> hmmmm in a very specific, short proc that naming could work
[02:31:53] <FromDiscord> <Rika> i dont see how adding the name of the type to the proc would help
[02:32:40] <FromDiscord> <Phil> Oh no, as in, that works while within a short, specific proc because then it's easiest to tell that the "after" relates to the "numbers"
[02:32:57] <FromDiscord> <Phil> And not to X other variables that might be flying around in the context of a longer proc
[02:33:18] <FromDiscord> <Rika> "items after"
[02:34:03] <FromDiscord> <Phil> hmmm that one I could see also work fair
[02:42:08] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[03:16:57] *** Joins: rockcavera (~rc@user/rockcavera)
[03:24:26] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[03:46:17] *** Joins: rockcavera (~rc@192.12.112.205)
[03:46:17] *** Quits: rockcavera (~rc@192.12.112.205) (Changing host)
[03:46:17] *** Joins: rockcavera (~rc@user/rockcavera)
[03:59:36] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[04:00:46] *** Joins: rockcavera (~rc@192.12.112.205)
[04:00:46] *** Quits: rockcavera (~rc@192.12.112.205) (Changing host)
[04:00:46] *** Joins: rockcavera (~rc@user/rockcavera)
[04:01:28] <FromDiscord> <retkid> how can i add multiple header values
[04:01:32] <FromDiscord> <retkid> currently its like
[04:01:43] <FromDiscord> <retkid> {"Cookie" : cookie}
[04:01:52] <FromDiscord> <retkid> but tables cant have multiple values?
[04:02:26] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:03:32] <FromDiscord> <treeform> headers are not tables, create newHttpHeaders() then just .add multiple to it
[04:03:53] <FromDiscord> <retkid> oh wait
[04:03:59] <FromDiscord> <retkid> nevermind i had already figured out this problem
[04:04:06] <FromDiscord> <retkid> they're separated by semicolons
[04:04:09] <FromDiscord> <retkid> ü§¶‚Äç‚ôÄÔ∏è
[04:11:51] <FromDiscord> <Elegantbeef> table constructors should be able to have multiple values, `{a: b, c: d}` is a shorthand of `array[len, (typeof(a), typeof(b))`‚Üµ(@retkid)
[04:12:10] <FromDiscord> <retkid> In reply to @Elegantbeef "table constructors should be": aint that ugly tho
[04:12:19] <FromDiscord> <Elegantbeef> Aint what ugly?
[04:13:46] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3QyX
[04:14:25] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3QyY
[04:16:13] <FromDiscord> <Elegantbeef> So what is ugly?
[04:33:43] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[04:35:01] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:17:54] <NimEventer> New question by itil memek cantik: Nim overloaded operator on infix has failed, see https://stackoverflow.com/questions/71246114/nim-overloaded-operator-on-infix-has-failed
[05:18:59] <FromDiscord> <Rika> In reply to @NimEventer "New question by itil": who is this in the chat again?
[05:19:00] <FromDiscord> <Rika> https://nim-lang.org/docs/manual_experimental.html#special-operators-dot-operators
[05:19:08] <FromDiscord> <Rika> .= is a special operator i believe
[05:19:19] <FromDiscord> <Rika> ah seems like its behind a flag anyway
[05:19:37] <FromDiscord> <Rika> not sure what the behavior is other wise
[05:19:39] <FromDiscord> <Rika> (edit) "other wise" => "otherwise"
[05:21:51] *** Quits: fowl (~fowlmouth@user/fowl) (Quit: Ping timeout (120 seconds))
[05:22:10] *** Joins: fowl (~fowlmouth@user/fowl)
[05:23:14] <FromDiscord> <huantian> @abdu
[05:28:41] <FromDiscord> <Rika> ah
[05:28:41] <FromDiscord> <Rika> lol
[05:28:47] <FromDiscord> <Rika> the error is not related to .=
[05:43:04] *** Quits: mahlon (~mahlon@martini.nu) (Ping timeout: 272 seconds)
[05:54:21] <FromDiscord> <Elegantbeef> Yea the issue is just wrong code
[05:54:35] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3QzA works fine
[06:18:06] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[06:21:46] *** Joins: rockcavera (~rc@192.12.112.205)
[06:21:46] *** Quits: rockcavera (~rc@192.12.112.205) (Changing host)
[06:21:46] *** Joins: rockcavera (~rc@user/rockcavera)
[07:31:40] *** Quits: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de) (Remote host closed the connection)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:39:53] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[08:21:07] <NimEventer> New thread by Mardiyah: Create overloaded operator as infix , see https://forum.nim-lang.org/t/8944
[08:43:18] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 256 seconds)
[09:08:47] *** Joins: mahlon (~mahlon@martini.nu)
[09:14:18] <FromDiscord> <Rika> Same question
[09:23:16] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[09:29:12] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:37:06] <FromDiscord> <retkid> alright
[09:37:17] <FromDiscord> <retkid> do you think theres anyway to manipulate the scroll wheel when i crawl a page
[09:37:28] <FromDiscord> <retkid> or should i try and manipulate the JS
[09:37:33] <FromDiscord> <retkid> or should i switch to selenium
[09:43:33] *** Joins: ltriant (~ltriant@118.102.122.246)
[09:51:35] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 256 seconds)
[10:55:24] *** Joins: jjido (~Denis@94.4.149.217)
[11:23:36] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Remote host closed the connection)
[11:28:48] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[11:45:53] *** Joins: PMunch (~PMunch@user/pmunch)
[11:53:06] *** Joins: gsalazar (~gsalazar@161.230.168.194)
[11:59:31] *** Joins: gsalazar_ (~gsalazar@194.38.148.130)
[11:59:38] *** Quits: gsalazar_ (~gsalazar@194.38.148.130) (Remote host closed the connection)
[11:59:48] *** Joins: gsalazar_ (~gsalazar@194.38.148.130)
[12:00:11] *** Quits: gsalazar_ (~gsalazar@194.38.148.130) (Remote host closed the connection)
[12:01:48] *** Quits: gsalazar (~gsalazar@161.230.168.194) (Ping timeout: 240 seconds)
[12:05:07] <FromDiscord> <dangbinghoo> hi, is there any way to control nim GC heap (Max) size ?
[12:06:45] <FromDiscord> <Rika> What would the program do on max reached?
[12:15:08] <FromDiscord> <dangbinghoo> In reply to @Rika "What would the program": I have no idea, I'm just using nim's json module, and as you said, esp32 may have not enough mem for running this module
[12:15:27] <FromDiscord> <dangbinghoo>  https://media.discordapp.net/attachments/371759389889003532/946326951935758346/unknown.png
[12:15:30] <FromDiscord> <Rika> I think there are ways to get the current used memory within code
[12:16:03] <FromDiscord> <Rika> Then you can just periodically check that and crash or whatever, send info I don‚Äôt know when you reach a threshold
[12:17:24] <FromDiscord> <Rika> If you use refc https://nim-lang.org/docs/refc.html
[12:23:48] <FromDiscord> <lantos> Should be easy in js‚ÜµSimple implementation is just to use something like window.scrollto or use a jQuery library.
[12:25:50] <FromDiscord> <dangbinghoo> In reply to @Rika "If you use refc": ok, thanks, but I 1st need to check-out what the esp32 core-dump message really is, make sure it's telling memory related issues
[12:30:07] *** Quits: cheer[m] (~cheertchn@2001:470:69fc:105::39de) (Quit: You have been kicked for being idle)
[13:00:50] *** Joins: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de)
[13:01:38] *** Quits: jjido (~Denis@94.4.149.217) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[13:06:38] <PMunch> Does the 32 have the same kind of watchdog that the 8266 does?
[13:08:21] <PMunch> Maybe try packedjson, I believe that would be friendlier on the GC
[13:09:52] <PMunch> @dangbinghoo, and which flags are you compiling with? If you use the default GC it will try to load memory in chunks and manage it itself, which can easily cause you to use more memory than you actually need.
[13:10:19] <PMunch> Try with --gc:arc -d:useMalloc
[13:27:21] <PMunch> Hmm, what is the best command-line parser out there nowadays?
[13:31:58] <FromDiscord> <SolitudeSF> cligen
[13:36:12] <PMunch> Ooh, cligen looks good indeed
[13:36:25] <PMunch> Has it gotten an upgrade lately?
[13:36:38] <PMunch> I remember having evaluated it in the past and not used it for some reason
[13:37:50] <FromDiscord> <SolitudeSF> it may be cumbersome for some very specific usage patters, but its still the king
[13:42:05] <FromDiscord> <Rika> Probably a preference thin g but I like argparse better
[13:47:29] <FromDiscord> <ajusa> Is there a way to define a type conversion? Eg, how I can do uint32(6), do I just make a proc with the same name as the type?
[13:48:17] <FromDiscord> <dangbinghoo> In reply to @PMunch "Try with --gc:arc -d:useMalloc": yes, I'm using Malloc flag, I had a test that turns out, it may not the problem about memory,  I linked the generated .a file in IDF env with my simple C main, and it actually works with nothing wrong.
[13:48:59] <PMunch> Yeah I looked up the EXCCAUSE and it seemed like it tried to touch memory it wasn't allowed to somehow
[13:49:35] <FromDiscord> <Rika> In reply to @ajusa "Is there a way": That wouldn‚Äôt work, you‚Äôll have to make a regular procedure
[13:50:51] <FromDiscord> <dangbinghoo> the dump error pic I put on is that I'm giving nim generated .a with --os:freertos, but I used the static lib actally on nuttx( As if I set os to any, says os.nim is not supported, if I set to linux, nuttx seems lacking of API impl. of `flockfile`
[13:54:31] <PMunch> nuttx?
[13:54:56] <FromDiscord> <Rika> Another RTOS
[13:55:13] <PMunch> Yeah.. os.nim isn't supported for --os:any (which makes sense), but the test is super aggressive. Just import the file (without using any of it) and your program will fail to compile
[13:58:58] <FromDiscord> <dangbinghoo> so,  json, jsonutils module can availble for os: any ?
[13:59:20] <PMunch> @dangbinghoo, please like my issue if you want this OS thing to be fixed: https://github.com/nim-lang/Nim/issues/19414
[14:03:06] <PMunch> @dangbinghoo, the json module should work with os:any
[14:04:35] <FromDiscord> <dangbinghoo> yes, json is all about mem opt   actually
[14:05:58] <PMunch> Ouch, I tried to compile a simple snippet with the JSON module
[14:06:08] <PMunch> Let's just say that it takes a lot of memory
[14:07:47] <FromDiscord> <dangbinghoo> In reply to @PMunch "Let's just say that": my c struct from json to json test case used 10KB mem on esp32 with gc: arc
[14:09:01] <PMunch> http://ix.io/3QB7
[14:09:17] <PMunch> It doesn't run though, I think it just runs out of memory during the parse step
[14:09:33] <FromDiscord> <dangbinghoo> i waited 20seconds after the test and it shows that arc is keeping that mem
[14:11:08] <FromDiscord> <dangbinghoo> In reply to @PMunch "It doesn't run though,": atmel meg chip mem is not big
[14:11:40] <PMunch> Hmm, I tried packedjson, but it doesn't seem to compile on anything but 64bit architectures 
[14:11:52] <PMunch> @dangbinghoo, I know
[14:13:13] <FromDiscord> <dangbinghoo> i have 100KB heap on esp32
[14:14:06] <FromDiscord> <dangbinghoo> yes, json is bad for MCU
[14:15:30] <PMunch> Hmm, if I don't actually try to parse the JSON on the controller it's not that bad: http://ix.io/3QB8
[14:16:31] <PMunch> Cool, I'm even able to call $ on the data object and write it out over serial
[14:16:55] <PMunch> That uses about twice the program size though :P 
[14:17:19] <PMunch> http://ix.io/3QBa
[14:19:18] <FromDiscord> <dangbinghoo> yeah nim is cool for big MCU
[14:22:12] <PMunch> I'm able to build and run with jsony: http://ix.io/3QBc
[14:22:19] <PMunch> Nim is cool for small MCUs as well ;)
[14:22:43] <PMunch> You just need to be careful with memory allocations
[14:22:47] <FromDiscord> <dangbinghoo> üëç
[14:23:48] <FromDiscord> <dangbinghoo> jsony and os: any ?
[14:23:53] <PMunch> I mean with the strings stored in an array it's actually not thatbad: http://ix.io/3QBd
[14:23:55] <PMunch> Yup
[14:24:13] <PMunch> I'm compiling with the config from here: https://ratel.peterme.net/gettingstarted.html
[14:25:24] <PMunch> Of course it's nothing compared to using progmem allocated strings: http://ix.io/3QBe
[14:26:48] <FromDiscord> <dangbinghoo> ok, great, now ratel has json support via jsonyüëç
[14:27:26] <FromDiscord> <dangbinghoo> selling point increase
[14:27:37] <PMunch> Ratel has support for anything that doesn't import the `os` module :P
[14:28:04] <PMunch> I mean the json module worked as well, as long as you didn't try to parse anything on runtime
[14:28:21] <FromDiscord> <dangbinghoo> In reply to @PMunch "Ratel has support for": yeah, on AVR !
[14:28:38] <FromDiscord> <dangbinghoo> i mean even
[14:30:19] <PMunch> Haha, it will support ESP32 soon enough. I'm working on the build script logic now, when that is done I think I'll try to do a Nesper binding for Ratel
[14:31:25] <PMunch> But first I'll probably knock out the Attiny85 implementation
[14:31:36] <FromDiscord> <dangbinghoo> great work
[14:33:06] <PMunch> Or maybe I'll do the nim-esp8266-sdk thing first..
[14:33:13] <PMunch> Or SPI for the existing platforms..
[14:33:56] <PMunch> Okay, how about I wrap nim-esp8266-sdk while I write the "Implementing a board" guide. Then you can wrap Nesper using that guide ;)
[14:48:10] *** Joins: ltriant (~ltriant@118.102.122.246)
[14:51:32] <FromDiscord> <dangbinghoo> yeah, that's ok
[14:53:26] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 272 seconds)
[14:59:39] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[15:00:41] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[15:02:41] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:54] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:47:26] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:602a:2cae:7652:6a22)
[15:47:52] <FromDiscord> <Forest> Does Nim have a way to use incremental compiling like other compilers do?
[15:48:05] <FromDiscord> <Forest> Or would i have to use something like zig cc?
[15:50:41] <PMunch> Nim currently doesn't support incremental compilation, but I think it's one of the primary things being worked on at the moment
[15:51:03] <PMunch> Do you feel compilation takes long enough that you need it?
[15:55:16] <FromDiscord> <Forest> Ah fair
[15:55:49] <FromDiscord> <Forest> I'm going to be repeatedly rebuilding the compiler with gradual modifications so yes
[15:55:50] <FromDiscord> <Forest> https://cdn.discordapp.com/emojis/837285319636025366.png?size=48
[15:56:00] <FromDiscord> <Forest> That's a pineapple emoji-
[15:56:59] <FromDiscord> <Rika> üçç
[15:58:48] <PMunch> That's a pumpkin..
[15:59:05] <PMunch> Have you seen ./koch temp or whatever it's called?
[15:59:24] <PMunch> There's also -d:nimLeanCompiler or something like that
[16:06:49] <NimEventer> New thread by Mardiyah: Knowledge on the failure in overloaded operator of two operands infix ?, see https://forum.nim-lang.org/t/8945
[16:07:52] <FromDiscord> <Rika> hes back again...
[16:07:59] <FromDiscord> <Rika> were his other posts ignored?
[16:17:22] <FromDiscord> <haolian9 (È´òÊµ©‰∫Æ)> is there a tutorial for GC, especially for ORC? i read docs for two days, and i still can not figure out how to use.
[16:18:54] <FromDiscord> <Rika> technically, for ORC, you just turn the switch on and use as usual
[16:18:57] <PMunch> ARC/ORC is unfortunately quite under-documented yet
[16:19:02] <FromDiscord> <Rika> what are you finding specifically?
[16:19:14] <PMunch> https://play.nim-lang.org/#ix=3QBL hmm, why can't I push a custom pragma?
[16:19:29] <FromDiscord> <Rika> idk either but afaik it is documented
[16:27:38] <FromDiscord> <haolian9 (È´òÊµ©‰∫Æ)> sent a long message, see http://ix.io/3QBP
[16:30:09] <PMunch> @Rika, his forum titles are super cryptic, borderline impossible to understand. But his questions aren't too stupid. Probably just a language barrier thing
[16:30:36] <PMunch> Likely it's easier for him to create a forum question instead of asking here and trying to understand in live chat
[16:31:20] <PMunch> haolian9_(È´òÊµ©‰∫Æ), to just use the ORC gc you should be able to just do `--gc:orc` and then don't worry about it
[16:31:36] <FromDiscord> <Rika> In reply to @PMunch "<@259277943275126785>, his forum titles": i wasnt really talking about the "oh no its this damn dude again" it was more of "oh no did no one answer him"
[16:34:09] <FromDiscord> <Stuffe> Is there any good way to generate hashes where the order of the hashed items don't matter? I was considering hashing each item separately and then adding the hashes, but in this case I don't know how I can turn off overflow check for a specific addition
[16:34:12] <PMunch> Oooh, I try to answer them whenever they post a question :)
[16:34:41] <PMunch> @Stuffe, you could hash every element, then sort them and hash them in that order
[16:34:53] <PMunch> That would mean that no matter the original order they would all have the same hash
[16:34:59] <FromDiscord> <Rika> does hash mixing stuff in another order change the final? huh
[16:35:07] <PMunch> Of course
[16:35:14] <FromDiscord> <Rika> me brain no work
[16:35:15] <FromDiscord> <Rika> pls
[16:35:21] <PMunch> "Hello" isn't the same as "llHoe"
[16:36:07] <FromDiscord> <Rika> yeah my brain is off sorry
[16:37:25] <FromDiscord> <Stuffe> In reply to @PMunch "<@579300975618293801>, you could hash": Actually I should have explained myself better, I also need to be able to combine the hashes in a different order
[16:37:49] <FromDiscord> <Stuffe> Which is why I like the addition idea (a + b) + c == a + (b + c)
[16:38:26] <FromDiscord> <Stuffe> so my idea was to hash the elements first and then just add them
[16:39:51] <PMunch> Ah, yeah that's a different matter
[16:40:18] <PMunch> I mean as long as you just add hashes they should compose like that
[16:40:23] <PMunch> Hashes are just numbers after all
[16:40:41] <PMunch> (as long as the overflow behaviour is deterministic)
[16:41:35] <FromDiscord> <Stuffe> well it is
[16:42:04] <FromDiscord> <Stuffe> I wish there was an integer type with no overflow checking
[16:43:34] <PMunch> Like uint?
[16:46:01] <FromDiscord> <Stuffe> you can still overflow a uint
[16:47:06] <FromDiscord> <Stuffe> oh wait it doesn't error
[16:47:20] <FromDiscord> <Stuffe> ok well then that solves the problem
[16:48:31] <FromDiscord> <demotomohiro> Nim's uint doesn't have over/underflow checks and can be used for pseudo random number generators, hashes or crypt algorithms.
[16:48:58] *** Joins: kenran (~kenran@200116b82b58bf00ac94994ddceb2eda.dip.versatel-1u1.de)
[16:50:29] <FromDiscord> <Stuffe> nice
[16:51:57] <FromDiscord> <Rika> i still thikn maybe it should have been a separate type
[16:53:22] <FromDiscord> <demotomohiro> `uintX` type for making random bits and `uintY` type for other thing?
[16:53:37] <FromDiscord> <Rika> for overflow checks i mean
[17:01:38] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:28:06] *** Joins: rockcavera (~rc@192.12.112.205)
[17:28:06] *** Quits: rockcavera (~rc@192.12.112.205) (Changing host)
[17:28:06] *** Joins: rockcavera (~rc@user/rockcavera)
[17:28:39] <FromDiscord> <exelotl> @haolian9_(È´òÊµ©‰∫Æ) - `=destroy` is called when the object goes out of scope, or when the number of references drops to zero. Here is an example: https://wandbox.org/permlink/zmcba2oek9QBY2tk
[17:38:14] <FromDiscord> <auxym> In reply to @Rika "for overflow checks i": being able to disable overflow checking per module, or with a distinct type, would be pretty neat tbh
[17:38:47] <FromDiscord> <Rika> yeah
[17:39:04] <FromDiscord> <auxym> eg when you want an "unsafe" hot loop for performance critical numerical code
[17:39:06] <FromDiscord> <Rika> same with ints though those dont really make sense but ig the choice is nice
[17:39:23] <FromDiscord> <Rika> actually i recall being able to "enable overflow checking" kinda with ranges
[17:39:30] <FromDiscord> <Rika> actually wait
[17:39:36] <FromDiscord> <Rika> theres a range for unsigned no?
[17:39:40] <FromDiscord> <Rika> Natural i think
[17:39:53] <FromDiscord> <auxym> pretty sure natural is a subrange of `int`
[17:40:31] <FromDiscord> <Rika> i mean a "range" as in a range that covers like uint
[17:41:37] <FromDiscord> <mratsim> In reply to @Stuffe "Is there any good": `{.push overflowCheck:off.}` or something like that
[17:47:20] <FromDiscord> <mratsim> sent a long message, see http://ix.io/3QCp
[17:49:27] <FromDiscord> <ynfle> Is there a way to get the location of the definition of a symbol like with `owner` or something?
[17:50:05] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:602a:2cae:7652:6a22) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[17:52:20] <FromDiscord> <mratsim> only for generic proc and templates with instantiationInfo.
[18:15:31] <PMunch> @ynfle, you mean like macros.lineInfo?
[18:18:28] <FromDiscord> <haolian9 (È´òÊµ©‰∫Æ)> sent a code paste, see https://play.nim-lang.org/#ix=3QCz
[18:21:58] <FromDiscord> <Pegacraffft> Hey, a question, what nim UI libs do you guys recommend me to learn. Im really curios ^^
[18:23:25] <PMunch> @Pegacraffft, depends on what you're trying to make
[18:26:35] <FromDiscord> <exelotl> In reply to @haolian9 (È´òÊµ©‰∫Æ) "thanks for the example;": how did you allocate `f`? Is `name` a string?
[18:28:39] <FromDiscord> <exelotl> if `f` is a pointer then you can't make a `=destroy` proc for it. `=destroy` can only be defined for `object` types, and will be called for `ref object` but _not_ `ptr object`.
[18:29:31] *** Joins: arkurious (~arkurious@user/arkurious)
[18:32:34] <FromDiscord> <exelotl> arc is just the same as orc, except arc leaks memory when you have cycles in your data structure. Besides that you don't have to do anything differently between them
[18:32:57] <FromDiscord> <haolian9 (È´òÊµ©‰∫Æ)> oh, you reminded me the different between ref and ptr in nim; dealloc should be used to a ptr‚Üµ(@exelotl)
[18:33:24] <FromDiscord> <exelotl> yeah, and `ref` will be automatically deallocated for you.
[18:34:10] <FromDiscord> <exelotl> you only need `=destroy` if you need to do special cleanup for an object
[18:35:02] <FromDiscord> <exelotl> for example if you allocate a GPU texture when creating the object, you should free it in `=destroy`
[18:38:03] <FromDiscord> <haolian9 (È´òÊµ©‰∫Æ)> thanks, i'm getting to understand
[18:40:54] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[18:46:36] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Ping timeout: 240 seconds)
[18:46:44] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
[18:54:46] *** Joins: jjido (~Denis@94.4.149.217)
[18:54:57] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[18:57:34] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[19:03:31] <FromDiscord> <haolian9 (È´òÊµ©‰∫Æ)> @\_discord\_570268431522201601\:t2bot.io thanks! if my understand is correct, then‚Üµ‚óè `=destroy` is a user-defined proc, with or without it, the ref will always be deallocated by nim, so user did not need to dealloc the variable (actually i can find any way to dealloc a ref)‚Üµ‚óè `cursor` is similar to python's weakref, but different with owned; both can avoid cycle reference.‚Üµ(@mratsim)
[19:07:30] <PMunch> haolian9_(È´òÊµ©‰∫Æ), correct, you don't need `=destroy` with normal refs, all that is handled for you
[19:07:47] <PMunch> The `=destroy` hook is just a way to hook in custom data types into the GC
[19:19:09] <FromDiscord> <haolian9 (È´òÊµ©‰∫Æ)> thanks‚Üµ(<@709044657232936960_=50=4dunch=5b=49=52=43=5d>)
[19:27:44] *** Quits: jjido (~Denis@94.4.149.217) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[19:39:40] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: leaving)
[20:03:37] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:602a:2cae:7652:6a22)
[20:06:18] <FromDiscord> <mratsim> In reply to @haolian9 (È´òÊµ©‰∫Æ) "thanks (<@709044657232936960_=50=4dunch=5b=49=52=43": For example I use `=destroy` to implement custom threadsafe atomic refcounting:‚Üµ- https://github.com/mratsim/weave/blob/master/weave/cross_thread_com/flow_events.nim#L176-L191
[20:08:44] <FromDiscord> <mratsim> There is one situation that might need `=destroy` on a ref type, it's when on ref dealloc you want to also specify custom handling of inner data type, for example I tie deallocating Cuda/GPU memory to Nim memory here: https://github.com/mratsim/Arraymancer/blob/master/src/arraymancer/tensor/backend/cuda.nim#L29-L39‚Üµ‚Üµ(this uses an old syntax `new(ref Foo, deallocProc)` called finalizer that will be replaced by `=destroy`)
[20:14:12] *** Quits: kenran (~kenran@200116b82b58bf00ac94994ddceb2eda.dip.versatel-1u1.de) (Ping timeout: 240 seconds)
[20:15:09] *** Joins: kenran (~kenran@200116b82b58bf00e0673ca75d341939.dip.versatel-1u1.de)
[20:24:59] <FromDiscord> <blabla3131> guys i need a help
[20:25:36] <FromDiscord> <blabla3131> im trying to build a exe which gonna list installed applications on computer
[20:26:47] <FromDiscord> <huantian> What‚Äôs the issue?
[20:26:49] <FromDiscord> <blabla3131> but im having a problem with Regex redirection
[20:27:31] <FromDiscord> <blabla3131> sent a long message, see http://ix.io/3QDG
[20:28:39] <FromDiscord> <blabla3131> this is my code the First part is working good but second part im getting a Error which says path not exists
[20:31:20] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:602a:2cae:7652:6a22) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[20:39:45] *** Joins: ltriant (~ltriant@118.102.122.246)
[20:41:01] *** Joins: vicfred (~vicfred@user/vicfred)
[20:44:37] *** Quits: ltriant (~ltriant@118.102.122.246) (Ping timeout: 250 seconds)
[20:49:47] <FromDiscord> <enthus1ast> please format your code correctly[blabla3131](https://matrix.to/#/@blabla3131:matrix.org)
[20:49:57] <FromDiscord> <enthus1ast> or use https://play.nim-lang.org/
[20:50:35] <FromDiscord> <blabla3131> okay thank you
[20:50:35] <FromDiscord> <blabla3131> https://play.nim-lang.org/#ix=3QDK
[20:51:12] <FromDiscord> <enthus1ast> still not correct
[20:52:03] <FromDiscord> <huantian> You forgot the indentation
[21:07:49] <NimEventer> New thread by Blabla: Having a Problem w WinRegistry while try to Read subkeys of HKEY_LOCAL_MACHINE, see https://forum.nim-lang.org/t/8948
[21:12:58] *** Joins: pro (~pro@user/pro)
[21:34:11] <FromDiscord> <ynfle> In reply to @PMunch "<@757977788056600719>, you mean like": It doesn't give me the delcaration filename and linenumber
[21:38:31] *** Quits: kenran (~kenran@200116b82b58bf00e0673ca75d341939.dip.versatel-1u1.de) (Quit: WeeChat info:version)
[22:33:53] <FromDiscord> <ShalokShalom> Discriminated unions are a thing in Nim?
[22:44:49] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:602a:2cae:7652:6a22)
[22:47:42] <FromDiscord> <ynfle> Is it not just an object variant?
[22:48:08] <FromDiscord> <ynfle> In reply to @ShalokShalom "Discriminated unions are a": Is it not just an object variant?
[22:55:08] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[22:55:25] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:602a:2cae:7652:6a22) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[22:58:24] <FromDiscord> <ShalokShalom> Yes, it says so
[22:58:44] <FromDiscord> <ShalokShalom> sent a code paste, see https://play.nim-lang.org/#ix=3QEb
[22:58:55] <FromDiscord> <ShalokShalom> How define the next state of an object, then?
[22:59:11] <FromDiscord> <ShalokShalom> This is FSharp
[22:59:20] <FromDiscord> <ynfle> What's the `` operator?
[22:59:31] <FromDiscord> <ShalokShalom> Next state of the object
[22:59:35] <FromDiscord> <ShalokShalom> What is right of it
[22:59:59] <FromDiscord> <ynfle> Like a state machine?
[23:01:07] <FromDiscord> <ynfle> So passableexit has a string, What does next state mean in this context? Room id isn't on there in that union?
[23:03:14] <FromDiscord> <ShalokShalom> https://youtu.be/hsTmLhnzRhE?t=315
[23:03:24] <FromDiscord> <ShalokShalom> There is it explained
[23:04:03] <FromDiscord> <ShalokShalom> And here is the complete code
[23:04:04] <FromDiscord> <ShalokShalom> https://github.com/thedevaspect/aspect-fsharp/blob/7a1502ff685f962f58a9af57eb549441d752f3e4/Game.fs#L15
[23:04:22] <FromDiscord> <ShalokShalom> I like taking that example, and comparing it to other languages
[23:08:47] <FromDiscord> <Forest> In reply to @PMunch "That's a pumpkin..": Pineapple-
[23:08:56] <FromDiscord> <Forest> In reply to @PMunch "There's also -d:nimLeanCompiler or": Ah okay, thanks!
[23:09:05] <FromDiscord> <Forest> In reply to @PMunch "Have you seen ./koch": No idea what it is :p
[23:09:46] <FromDiscord> <ynfle> In reply to @Forest "No idea what it": It builds a temp version of the compiler in tens of seconds. For sure less than a minute
[23:10:21] <FromDiscord> <Forest> Huh neat
[23:10:27] <FromDiscord> <Forest> In reply to @ynfle "It builds a temp": Even with my changes?
[23:11:14] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Ping timeout: 272 seconds)
[23:11:36] <FromDiscord> <ynfle> In reply to @Forest "Even with my changes?": Yes
[23:12:02] <FromDiscord> <Forest> Nice!
[23:12:11] <FromDiscord> <Forest> Is there any drawback to it?
[23:12:53] <FromDiscord> <ynfle> My guess is it's not as "good" whatever that means. So use it for testing the compiler, not for benchmarking or production
[23:15:11] <FromDiscord> <ShalokShalom> @ynfle does this give you an idea?
[23:15:18] <FromDiscord> <ShalokShalom> Is there something in Nim?
[23:15:25] <FromDiscord> <ShalokShalom> Can you remodel that?
[23:17:11] <FromDiscord> <ynfle> I'll have to take a look at the video
[23:17:42] <FromDiscord> <Forest> In reply to @ynfle "My guess is it's": Ah fair
[23:20:41] <FromDiscord> <ShalokShalom> So basically to extends object variants like that
[23:20:52] <FromDiscord> <ShalokShalom> (edit) "extends" => "extend"
[23:25:34] <FromDiscord> <ceramicskate0> is it possible to call a nim function in an emit section (c code) in a dll?
[23:26:32] <FromDiscord> <ynfle> In reply to @ceramicskate0 "is it possible to": As long as it has the pragmas `exportc, dynlid`
[23:30:13] <FromDiscord> <Phil> Wait a second... does nim logging work on a "per-file" basis?
[23:30:36] <FromDiscord> <Phil> So do I have to specify a log level etc. in every file individually?
[23:30:39] <FromDiscord> <ynfle> In reply to @ShalokShalom "<@767093711112241162> does this give": `` is basically a tuple or object in nim `next` doesn't seem to be an official keyword and is just a field in the union. So basically just straight object variant
[23:40:02] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:602a:2cae:7652:6a22)
