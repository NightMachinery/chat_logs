[00:01:20] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[00:03:36] *** Joins: vysn (~vysn@user/vysn)
[00:03:59] *** Quits: ckardaris (~ckardaris@static-39-104-87-188.ipcom.comunitel.net) (Ping timeout: 244 seconds)
[00:06:10] *** Joins: ckardaris (~ckardaris@static-39-104-87-188.ipcom.comunitel.net)
[00:06:41] *** Quits: serbest (~serbest@user/serbest) (Quit: leaving)
[00:07:33] *** Quits: dld (~dld@2620:6e:6000:2900:1d51:fa28:794f:615f) (Ping timeout: 250 seconds)
[00:13:05] *** Quits: katnis (uid15849@2a03:5180:f:1::3de9) (Quit: Connection closed for inactivity)
[00:15:45] *** Joins: extern (~archer@141.226.58.179)
[00:17:04] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:17:41] *** Quits: supajerm (~supajerm@gateway/vpn/pia/supajerm) (Remote host closed the connection)
[00:18:01] *** Joins: supajerm (~supajerm@gateway/vpn/pia/supajerm)
[00:20:16] *** Joins: acaciause (~acaciause@cpc140764-burn9-2-0-cust788.10-1.cable.virginm.net)
[00:23:58] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[00:23:58] *** Quits: acerbic (~acerbic@cs-xdata-50-86-48-149.cspire.com) (Read error: Connection reset by peer)
[00:27:28] <nomagno> Does GCC/Clang have an optimization setting to only make optimizations with equivalent logic?
[00:28:17] *** Joins: mrig (~mrig@user/mrig)
[00:28:29] <floatcomplex> that's all of them, except -ffast-math
[00:28:43] <floatcomplex> if you observe deviations from that, they're bugs
[00:28:47] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Ping timeout: 244 seconds)
[00:28:49] <floatcomplex> usually in your code
[00:29:17] <floatcomplex> occasionally in the compiler but as someone said, extraordinary claims require extraordinary evidence
[00:29:18] <nomagno> Why do the fastest levels sometimes cause behaviour deviations then?
[00:29:40] <floatcomplex> because your code is broken
[00:30:04] <nomagno> As in, basically faulty memory management?
[00:30:13] <floatcomplex> you have UB and the compiler is allowed to do anything, where "anything" includes work at some opt levels but not others
[00:30:23] <floatcomplex> it's not just higher opt levels
[00:30:31] <nomagno> Ahhh
[00:31:17] <sham1> If your code stops working at -O3, your code is buggy and needs to be fixed. As it turns out though, a lot of C code is buggy and needs to be fixed
[00:31:32] <sham1> So you're in good company
[00:31:44] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[00:31:45] <sham1> And by you I mean a general passive voice "you"
[00:32:24] *** Joins: rgrinberg (~textual@190.113.102.153)
[00:33:10] <Bou> I see that logic a lot here, "oh, the compiler must have changed my code to do that"
[00:33:17] <floatcomplex> at -Ofast / -ffast-math the compiler is allowed to make optimizations that change the output, for floating point expressions. my contention has always been that if you define this to "break" your code, then either your code or your expectations were already wrong without that flag
[00:33:23] <extern> can someone tell me why this Makefile would run the clean target regardless ? 
[00:33:24] *** Joins: dld (~dld@2620:6e:6000:2900:1d51:fa28:794f:615f)
[00:33:25] <extern> https://paste.ofcode.org/Fus9W4FvHBaCxwKVuvSyrp
[00:34:02] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 240 seconds)
[00:34:12] *** Quits: highrate (~presonic@111-22-237-24.gci.net) (Remote host closed the connection)
[00:34:34] *** Joins: highrate (~presonic@111-22-237-24.gci.net)
[00:34:46] <fizzie> extern: It wouldn't. And it doesn't.
[00:35:17] *** Quits: cpuid_ (~cpuid@static.136.43.161.5.clients.your-server.de) (Quit: ZNC 1.8.2 - https://znc.in)
[00:35:28] <extern> fizzie: make -f filename
[00:35:30] <extern> echo "int main() { return 0; }" > all.c
[00:35:31] <extern> cc    -c -o all.o all.c
[00:35:33] <extern> touch bar.c
[00:35:35] <extern> cc    -c -o bar.o bar.c
[00:35:37] <extern> touch foo.c
[00:35:38] <candide> extern: Please stop abusing the enter key. Feel free to type longer messages and to take a moment to think of anything else to say before you hit that enter key.
[00:35:39] <extern> cc    -c -o foo.o foo.c
[00:35:41] <extern> cc   all.o bar.o foo.o   -o all
[00:35:42] *** ChanServ sets mode: +o candide
[00:35:42] *** candide sets mode: +b *!~archer@141.226.*
[00:36:05] *** Joins: cpuid_ (~cpuid@static.136.43.161.5.clients.your-server.de)
[00:36:14] <fizzie> If you're referring to the "rm bar.c foo.c" you get in that output, it's not from the 'clean' target.
[00:36:36] *** Parts: ckardaris (~ckardaris@static-39-104-87-188.ipcom.comunitel.net) (WeeChat 3.3)
[00:36:50] *** candide sets mode: -b *!~archer@141.226.*
[00:37:04] *** Quits: cpuid_ (~cpuid@static.136.43.161.5.clients.your-server.de) (Client Quit)
[00:37:05] <extern> from where then ?
[00:37:24] <extern> from where then ?
[00:37:25] <fizzie> From a thing where it removes some intermediate files.
[00:37:46] <fizzie> The only command the 'clean' target can run is "rm -f *.c *.o all", it can't run "rm bar.c foo.c".
[00:37:53] *** Joins: cpuid_ (~cpuid@static.136.43.161.5.clients.your-server.de)
[00:38:21] <fizzie> https://www.gnu.org/software/make/manual/html_node/Chained-Rules.html "-- if make does create b in order to update something else, it deletes b later on after it is no longer needed --"
[00:38:26] <fizzie> It's most likely from that.
[00:38:35] <extern> so why it's not doing that rm with that file ..
[00:39:10] <extern> https://paste.ofcode.org/BPq5zRagKWBJFrqPGKGhJN
[00:39:15] <extern> which are equivalent 
[00:40:52] <fizzie> Clearly it's not "equivalent" if it does something different.
[00:41:01] <fizzie> My guess would be, it's because in the first one, you're relying on the implicit %.o: %.c rule, while in the other there's an explicit "(objects): %.o: %.c" thing.
[00:41:10] <fizzie> The removal of intermediate files only applies to implicit rules.
[00:41:25] <fizzie> And even more specifically, only when Make is chaining more than one implicit rule together.
[00:41:47] <fizzie> (Just a guess. It could be some other subtletly of make as well. But it's not running the 'clean' target at least.)
[00:41:50] <extern> Make is complicated ..
[00:43:14] <extern> thanks fizzie 
[00:43:35] <nomagno> I don't understand what yacc actually does. Is it like, more or less a preprocessor?
[00:43:46] *** Joins: acerbic (~acerbic@cs-xdata-50-86-48-149.cspire.com)
[00:43:51] <nomagno> I need a simple pseudo-yacc example, because the fancy explanations break my head
[00:43:55] <extern> a gold asest to C ..
[00:44:08] <extern> asset
[00:44:10] *** Quits: plainoldcheese (~plainoldc@user/plainoldcheese) (Quit: WeeChat 3.3)
[00:44:33] <alefir> switch #chat
[00:44:43] *** Quits: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com) (Quit: alefir)
[00:45:16] <nomagno> which chanel do I need to use to discuss yacc?
[00:46:32] *** Joins: humky (~humky@user/humky)
[00:47:06] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[00:47:57] <veltas> #yaccuza
[00:48:06] <fizzie> There's probably a programming language design channel (the name escapes me right now, if I ever knew it), it might be on-topic there. But I wouldn't really call it a "preprocessor" as such. Unless you want to call all things that generate code that.
[00:48:57] <sham1> Code generator
[00:49:39] <apotheon> Chanel No. 9
[00:50:15] *** Joins: juliopcrj (~juliopcrj@177.44.227.40)
[00:50:19] <Bou> but clang generates code too
[00:51:08] <sham1> But not in this kind of "transpilation" way
[00:51:09] <floatcomplex> probably a channel with a bunch of clang instances just brutally trash talking each other
[00:52:02] *** Quits: constxd (~brad@192.75.101.164) (Ping timeout: 240 seconds)
[00:52:03] <fizzie> It takes a grammar (written in its own syntax), and a list of actions (written as snippets of C embedded in the grammar) associated with the rules of that grammar, and spits out a hunk of C code that implements a parser for that grammar such that, given some input, it will run the actions associated with those rules that need to be applied to parse the input.
[00:53:28] <apotheon> sham1: LLVM does the "transpilation" thing, though.
[00:53:58] <aosync> what?
[00:54:09] <aosync> define transpilation
[00:54:18] <aosync> is compilation transpilation?
[00:54:21] <aosync> if yes, why?
[00:54:24] <aosync> if no, why?
[00:54:25] <sham1> Source to source compilation
[00:54:48] <apotheon> translating from one language to another, where it's not necessarily a "lower level" language target, e.g. from C to JavaScript
[00:54:53] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[00:55:00] <sham1> Or in this case Yac to C
[00:55:08] <aosync> does ir generation count as a source
[00:55:15] <apotheon> It's just compilation with a fancy name for some hand-wavy sense of the purpose and the "level" of the languages involved.
[00:55:15] <sham1> Not really
[00:55:25] <Bou> ah, and ASM isn't lower level than C so clang is a transpiler, got it :)
[00:55:32] <sham1> Yes it is
[00:55:34] <apotheon> (re: transpilation)
[00:55:41] * sham1 squints at Bou
[00:56:11] <apotheon> Bou: LLVM can be used with Clang and some other components to translate C to JavaScript.
[00:56:26] <apotheon> NetBSD was ported to "the browser" that way, at one point.
[00:57:17] <apotheon> I thought it was impressive when I heard about NetBSD being ported to a dead badger.  Running in the browser is *extra-special* portability to useless platforms.
[00:57:51] <aosync> curious
[00:57:58] <apotheon> Of course, the dead badger thing was a joke.  The browser . . . well, it may also be a joke, but it's the kind that actually happened.
[00:58:15] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[01:04:16] *** Quits: NEYi (~NEYi@109.251.216.38) (Quit: Leaving)
[01:05:16] *** Quits: juliopcrj (~juliopcrj@177.44.227.40) (Quit: Leaving)
[01:06:30] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[01:09:05] *** Quits: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 244 seconds)
[01:09:20] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[01:12:11] *** Joins: user11133 (~user11133@95.54.109.88)
[01:13:09] *** Quits: magla (~gelignite@55d431b8.access.ecotel.net) (Quit: Stay safe!)
[01:13:12] <user11133> If int x = rand(); declared inside for() loop, will it be allocated on stack every iteration?
[01:13:53] <jesings[m]> Most likely the compiler will factor that outside of the loop if you turn optimization on
[01:16:15] <fizzie> Conceptually, the object denoted by `x` will have lifetime only for one execution of the loop, and each execution gets a fresh new object. In practical terms, it's highly likely each instance of `x` will just share the same storage, since the lifetimes don't overlap -- if there even is any storage reserved for it.
[01:16:38] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[01:18:36] <user11133> normally it should be declared outside of the loop. otherwise program is asked to allocate new memory cell each time it sees declaration.
[01:19:06] <fizzie> I would more or less disagree with that.
[01:19:23] <Twix> not really. If the compile would implement it, it would be a push to the stack at the begin of the for loop and a pop at the end
[01:20:06] <jesings[m]> I mean if you assume that the compiler understands your code at face value then yes, but we don't use PDP-8s anymore and any compiler people actually use is optimizing, and loop invariant code motion is one of the most classic optimizations that a compiler can implement
[01:20:24] <Twix> But all modern c compilers do optimize, even if you did not explicit enable optimazations. And as fizzie pointed out, this might not even live in the memory. The compiler could reserve a register for it for the whole lifetime inside of the for loop
[01:21:01] <fizzie> If a value is only used within the loop and only supposed to persist for one iteration of the loop, declaring it inside the loop body is the most obvious way to make the intent clear.
[01:21:09] *** Quits: extern (~archer@141.226.58.179) (Quit: WeeChat 3.3)
[01:21:48] *** Quits: smlavine (~smlavine@sourcehut/user/smlavine) (Quit: nyaa~)
[01:23:31] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[01:24:31] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:25:33] <user11133> what if inside of the loop: if(rand() >0.5){int x=rand()*10}else if(rand()<0.5){double y=rand()*10}...?
[01:26:00] <sham1> Well it can allocate enough space in the stack for both
[01:27:10] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 244 seconds)
[01:27:57] <user11133> it should generate very intellectual code, how would it know which data is where? - order may vary..
[01:28:17] <fizzie> That's just more of the same. Again, if those `x`s and `y`s are only needed for the relevant branches, declaring them in there just makes sense. For example, if you're going to just be passing them as arguments to a function, it's exceedingly unlikely any memory is involved, the values will just be put where they need to be put for a function call.
[01:28:32] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[01:29:14] <sham1> And it wouldn't need to allocate them whenever you enter the branch, all the automatic storage variables are allocated at once in the function prologue usually
[01:29:33] <sham1> The compiler reserves the stack space and uses it as needed
[01:30:45] *** Quits: dld (~dld@2620:6e:6000:2900:1d51:fa28:794f:615f) (Ping timeout: 250 seconds)
[01:32:09] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Quit: WeeChat info:version)
[01:32:10] <jesings[m]> I believe variable length arrays are a significant exception to that, but other than weird corner cases like that, the compiler can calculate the maximum amount of stack space necessary at any point in the function and allocate that all in the prologue
[01:32:27] <fizzie> I think what it boils down to, if it makes the code clearer, don't be afraid to declare local variables, and declare them at the point when their initial values are known. IMO, anyway.
[01:32:29] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[01:33:37] *** Quits: Viewday (~Viewday@user/viewday) (Read error: Connection reset by peer)
[01:35:02] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[01:35:44] *** Joins: Viewday (~Viewday@user/viewday)
[01:35:46] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[01:35:59] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:36:07] *** Joins: Bakunin (~Lindis@user/lindis)
[01:37:55] *** Quits: nvmd (~nvmd@user/nvmd) (Ping timeout: 256 seconds)
[01:37:57] <sham1> fizzie: some people might still have some habits from C89 but even that allows one to declare variables within the beginning of the block
[01:39:00] *** Joins: mplio (~mplio@2a02-a452-be1f-1-bc97-1927-a25e-ae6.fixed6.kpn.net)
[01:39:40] *** Joins: nvmd (~nvmd@user/nvmd)
[01:40:08] *** Parts: mplio (~mplio@2a02-a452-be1f-1-bc97-1927-a25e-ae6.fixed6.kpn.net) ()
[01:41:10] <Samian> Does vscode have a builtin variable like __line__ so I can print current line number in my c code??
[01:41:58] <jesings[m]> `__LINE__` is a built in C preprocessor macro
[01:42:15] <jesings[m]> * preprocessor macro, any C implementation will translate that to the line number during preprocessing in compilation
[01:42:56] <fizzie> ,expand __LINE__ // just curious
[01:42:56] <candide> fizzie:  6
[01:43:48] *** Quits: user11133 (~user11133@95.54.109.88) (Quit: Leaving)
[01:44:27] <sham1> ,cc printf("%s\n", __func__);
[01:44:30] <candide> sham1: main
[01:44:33] <sham1> Fair enough
[01:44:43] <fizzie> Since __LINE__ expands to an integer constant, sometimes people use the preprocessor to go all the way to turn it into a string and glue it into their messages.
[01:44:50] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[01:47:02] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:47:35] <Bou> ,expand __TIME__
[01:47:35] <candide> Bou:  "14:17:35"
[01:47:36] *** Joins: inomoz (~inomoz@176.59.125.26)
[01:48:55] *** Joins: dld (~dld@2620:6e:6000:2900:1d51:fa28:794f:615f)
[01:50:26] *** Quits: acaciause (~acaciause@cpc140764-burn9-2-0-cust788.10-1.cable.virginm.net) (Quit: Konversation terminated!)
[01:51:14] *** Quits: hxztnxt (~hxztnxt@218.red-83-54-57.dynamicip.rima-tde.net) (Quit: Leaving)
[01:52:26] *** Joins: Macuser (~Macuser@216.30.159.201)
[01:53:24] *** Joins: NEYi (~NEYi@109.251.216.38)
[01:56:06] *** Quits: nvmd (~nvmd@user/nvmd) (Ping timeout: 244 seconds)
[01:56:24] * pragma- is pleased to confirm that is indeed his local time
[01:57:10] *** Joins: nvmd (~nvmd@user/nvmd)
[01:57:41] <pragma-> ,cc #line 419 \n printf("%d", __LINE__);
[01:57:44] <candide> pragma-: 423
[01:57:48] * pragma- squints.
[01:57:52] <pragma-> ,cc paste
[01:57:55] <candide> pragma-: https://0x0.st/-5vr.txt
[01:58:01] <pragma-> oh
[01:59:21] <jesings[m]> ,cc printf("%d %d %d %d\n", __COUNTER__, __COUNTER__, __COUNTER__, __COUNTER__);
[01:59:24] <candide> jesings[m]: 0 1 2 3
[01:59:25] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[01:59:51] <pragma-> ,expand __COUNTER__
[01:59:51] <candide> pragma-:  0
[02:00:11] <pragma-> what in tarnation
[02:00:27] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[02:00:55] <fizzie> __COUNTER__ is nice for unique identifier creation in crazy template metaprogramming shenanigans. Shame it's non-standard.
[02:01:46] <jesings[m]> Yep you'd usually use it with ## in macros to make i.e.
[02:01:46] <jesings[m]> var0, var1, var2... for any number of macro invocations
[02:01:49] <pragma-> it seems to exist in gcc, clang and msvc
[02:01:57] <pragma-> like anybody uses anything else, right?
[02:02:16] <jesings[m]> I mean icc but it's in there too
[02:02:27] <pragma-> icc is evil
[02:02:45] <pragma-> (evil against non-intel cpus)
[02:02:54] <pragma-> they're still doing that amd thing they were sued about
[02:03:06] *** Joins: phyto (~phyto@host-198-114.txbrags.bryan.tx.us.clients.pavlovmedia.net)
[02:03:38] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (Ping timeout: 246 seconds)
[02:03:57] <jesings[m]> That's fair, I'm not sure msvc would generate higher quality code on amd though, as its optimization is always... underwhelming
[02:04:31] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[02:05:52] *** Joins: brad_mssw (~bhouse@2601:344:4100:b490:996f:50d6:20ae:9e4e)
[02:05:57] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[02:06:25] <Bou> Intel compiler optimizes for Intel CPUs. I don't see the problem, but maybe I missed something
[02:06:38] *** Joins: jinsun__ (~quassel@user/jinsun)
[02:07:04] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[02:07:32] *** Quits: brad_mssw|mac (~bhouse@2601:344:4100:b490:f587:c9e:d283:4644) (Ping timeout: 240 seconds)
[02:07:36] <floatcomplex> isn't icc just a wrapper around clang now
[02:07:46] <floatcomplex> keil is
[02:09:05] <fizzie> I think it's just LLVM-based, but a frontend unrelated to Clang? Something like that.
[02:09:40] <jesings[m]> They switched to LLVM earlier this year, I don't believe they have anything to do with clang other than that
[02:09:52] <floatcomplex> all i know is well before now, they were going out of their way to support all the same gnu-isms as clang does
[02:09:54] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 260 seconds)
[02:10:13] <floatcomplex> so you generally didn't have to worry about whether code would compile with icc or not, if it compiled in both gcc and clang
[02:10:32] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[02:10:56] *** Joins: NEYi (~NEYi@109.251.216.38)
[02:11:49] *** Quits: Akuli (~Akuli@82-203-160-135.bb.dnainternet.fi) (Quit: Leaving)
[02:13:03] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[02:19:02] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (Ping timeout: 240 seconds)
[02:20:52] *** Quits: arashatt (~user@2.180.158.129) (Quit: Leaving)
[02:23:42] *** Quits: phyto (~phyto@host-198-114.txbrags.bryan.tx.us.clients.pavlovmedia.net) (Quit: WeeChat 3.3)
[02:24:24] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Remote host closed the connection)
[02:25:30] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[02:29:02] *** Quits: dld (~dld@2620:6e:6000:2900:1d51:fa28:794f:615f) (Ping timeout: 240 seconds)
[02:29:04] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:53c9:cd00:12bf:48ff:feb8:38c8)
[02:33:00] *** Quits: pizdets (~pizdets@183.182.111.232) (Ping timeout: 250 seconds)
[02:33:24] *** Parts: neutral (~user@user/neutral) (ERC (IRC client for Emacs 27.2))
[02:33:39] *** Quits: rgrinberg (~textual@190.113.102.153) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:33:49] *** Joins: pizdets (~pizdets@183.182.111.141)
[02:35:44] *** candide sets mode: -o candide
[02:37:15] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[02:40:29] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:5c20:adb3:d75f:164)
[02:43:40] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:5c20:adb3:d75f:164) (Ping timeout: 260 seconds)
[02:44:12] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:47:13] *** Quits: owensjrw (~owensjrw1@2600:1700:b5b0:6380::41) (Quit: Leaving)
[02:48:23] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[02:50:53] *** Quits: Libero (~Libero@188.4.25.75.dsl.dyn.forthnet.gr) (Quit: Leaving)
[02:51:02] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[02:52:02] *** Joins: katnis (uid15849@id-15849.helmsley.irccloud.com)
[02:53:01] *** Quits: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net) (Quit: b1101)
[02:54:20] *** Joins: uint_t (~refujee@c-24-22-76-106.hsd1.wa.comcast.net)
[02:54:28] <nomagno> fizzie: so I can basically map an imaginary language to C code, and it will generate a program that actually executes that imaginary language from C?
[02:54:47] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[02:54:47] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[02:54:47] *** Joins: wroathe (~wroathe@user/wroathe)
[02:55:15] *** Joins: soapsudsxx (~soapsudsx@209.221.40.144)
[02:56:35] *** Joins: puke (~puke@user/puke)
[02:58:17] <floatcomplex> you could also make a boat out of jars and try to paddle it across the sea but idk why you would
[02:59:35] <Bakunin> nomagno transliteration is super fun
[03:00:42] <fizzie> Well, I guess you could see it that way. And certainly YACC gets used a lot for writing parsers for programming languages. More often that not, though, people just have the YACC part do the conversion of the language into some sort of a syntax tree structure, and then write the rest (either an interpreter or a compiler) in plain C rather than inside the YACC grammar.
[03:00:59] <Bakunin> https://github.com/mame/quine-relay
[03:01:00] <candide> Title of Bakunin's link: GitHub - mame/quine-relay: An uroboros program with 100+ programming languages
[03:02:08] <fizzie> Though the canonical YACC "hello world" equivalent is a calculator where you have a YACC grammar for the usual infix notation of math expressions, and make the actions actually do the expression evaluation directly.
[03:03:47] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:05:09] *** Joins: vredesybrd (~Srain@97-127-35-121.mpls.qwest.net)
[03:07:53] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[03:08:03] *** Parts: vredesybrd (~Srain@97-127-35-121.mpls.qwest.net) (Leave.)
[03:08:58] *** Quits: myon98 (~myon98@user/myon98) (Ping timeout: 250 seconds)
[03:08:59] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[03:09:23] *** Joins: kish` (~aqua@user/aqua)
[03:09:34] *** Joins: myon98 (~myon98@user/myon98)
[03:10:31] *** Joins: ChromaCat248 (~ChromaCat@user/chromacat248)
[03:11:43] *** Quits: inomoz (~inomoz@176.59.125.26) (Ping timeout: 250 seconds)
[03:12:22] *** Quits: brad_mssw (~bhouse@2601:344:4100:b490:996f:50d6:20ae:9e4e) (Quit: Leaving)
[03:12:28] *** Joins: Voidwarper (~Voidwarpe@user/voidwarper)
[03:13:17] <Voidwarper> Hey, I want to learn low level programming to understand C better. Would you recommend 6502 assembly or Mips assembly instead? 
[03:13:50] *** Joins: asd (~noname@user/asd)
[03:17:28] <LangerJan> Voidwarper: If you have to choose between those two, I'd take MIPS, because gcc can produce MIPS assembly way easier :)
[03:17:31] <pragma-> you don't need to know assembly to understand C. in fact, it may be counter-productive since it could lead you to make system-specific assumptions that'll lead you to undefined behavior.
[03:18:22] <LangerJan> and what pragma- says
[03:20:03] <LangerJan> it sounds like an XY problem to me. Is there a specific aspect of C you'd like to understand better?
[03:21:10] *** Joins: Betal (~Betal@user/betal)
[03:21:41] *** Quits: ARoxdale (~ARoxdale@84.203.31.229) (Ping timeout: 250 seconds)
[03:22:02] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[03:22:37] <Voidwarper> LangerJan: more like how memory or pointers work. And I was watching a Torvalds talk praising C because he can understand what assembly is going to look like. 
[03:23:33] *** Joins: De4nWhit3 (~De4nWhit3@41.13.228.52)
[03:23:40] <De4nWhit3> Hello everyone.
[03:25:14] <LangerJan> Voidwarper: I think Torvalds' approach is not suitable for learning purposes
[03:26:23] <LangerJan> Voidwarper: feel free to ask away either here or in #c-basic
[03:26:42] <Voidwarper> Alright thanks 
[03:27:00] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[03:27:19] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 250 seconds)
[03:29:48] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[03:30:35] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:30:59] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[03:31:42] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[03:34:32] *** Quits: alch (~alch@151.36.220.196) (Ping timeout: 240 seconds)
[03:34:41] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 250 seconds)
[03:35:14] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[03:35:54] *** Quits: masterbuilder (~user@user/masterbuilder) (Remote host closed the connection)
[03:36:10] <rcf> Voidwarper: C proper tends to become more difficult to understand if you start making any assumptions about what the assembler output will look like. 
[03:36:24] *** Joins: masterbuilder (~user@user/masterbuilder)
[03:36:39] *** Joins: alch (~alch@151.34.162.154)
[03:37:12] <rcf> Which is why the Linux kernel actively rejects standard C -- it gets weird when the compiler is allowed to behave as properly specified. 
[03:39:46] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[03:40:06] *** Joins: de-facto_ (~de-facto@user/de-facto)
[03:41:57] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 276 seconds)
[03:42:00] *** Quits: immibis (~hexchat@62.156.144.218) (Ping timeout: 260 seconds)
[03:42:21] <rcf> Most infamous was probably the deletion of NULL checks when calling a function that violates strict aliasing rules, which inspired a length Torvalds rant. 
[03:43:49] *** de-facto_ is now known as de-facto
[03:44:20] <rcf> The point ultimately being that regardless of what you think of Linux, the developers stubbornly refuse to write anything resembling conforming C. 
[03:45:09] *** Quits: masterbuilder (~user@user/masterbuilder) (Quit: ERC 5.4.1 (IRC client for GNU Emacs 29.0.50))
[03:45:36] *** Quits: Inst (~Inst@2601:6c4:4080:3f80:f571:277c:e0b0:82b9) (Read error: Connection reset by peer)
[03:45:54] *** Joins: Inst (~Inst@2601:6c4:4080:3f80:d8ab:2e91:63f7:db6e)
[03:48:51] *** Joins: pnbeast (~pnbeast@2601:140:4280:3c90::1)
[03:51:44] *** Joins: _LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[03:54:32] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Ping timeout: 240 seconds)
[03:54:32] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 240 seconds)
[03:55:20] *** Quits: NEYi (~NEYi@109.251.216.38) (Quit: Leaving)
[03:55:21] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[03:55:22] *** Quits: johnjay (~pi@192.142.100.50) (Ping timeout: 260 seconds)
[03:55:32] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[03:55:38] *** Joins: NEYi (~NEYi@109.251.216.38)
[03:56:05] *** Quits: De4nWhit3 (~De4nWhit3@41.13.228.52) (Quit: Connection closed)
[03:56:33] *** Quits: Inline (~Inline@2a02:908:1252:7a80:2e5d:c24e:9b07:51fd) (Ping timeout: 268 seconds)
[03:56:38] *** Lord_of_Life_ is now known as Lord_of_Life
[03:57:48] *** Quits: haniaF (~haniaF@83.24.45.145.ipv4.supernova.orange.pl) (Ping timeout: 268 seconds)
[03:58:01] *** Joins: haniaF (~haniaF@83.24.196.92.ipv4.supernova.orange.pl)
[03:58:45] *** Joins: De4nWhit3 (~De4nWhit3@165-73-119-36.ip.afrihost.capetown)
[04:01:02] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[04:01:23] *** Joins: inomoz (~inomoz@176.59.125.26)
[04:04:12] *** Joins: bsod (~bsod@207.166.7.215)
[04:04:18] <bsod> large stdin error
[04:04:41] *** Joins: johnjay (~pi@192.142.100.50)
[04:05:32] *** Joins: MinimotoMusashi (~sirwillia@2600:100c:b012:2a96:3f04:be9c:2989:f4a4)
[04:05:49] *** Quits: MinimotoMusashi (~sirwillia@2600:100c:b012:2a96:3f04:be9c:2989:f4a4) (Client Quit)
[04:06:59] *** Joins: movingtxt (~movingtxt@user/movingtxt)
[04:07:27] *** Joins: william (~william@245.sub-174-197-1.myvzw.com)
[04:07:48] *** Joins: rgrinberg (~textual@190.113.102.153)
[04:08:22] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 244 seconds)
[04:09:49] *** Parts: movingtxt (~movingtxt@user/movingtxt) ()
[04:09:55] *** Quits: bsod (~bsod@207.166.7.215) (Remote host closed the connection)
[04:10:06] *** Joins: frost (~frost@user/frost)
[04:10:18] *** Joins: bsod (~bsod@207.166.7.215)
[04:13:50] *** Quits: Voidwarper (~Voidwarpe@user/voidwarper) (Quit: Quit)
[04:14:57] *** Quits: brelod (~me@90.244.150.142) (Quit: leaving)
[04:17:24] *** Quits: bsod (~bsod@207.166.7.215) (Remote host closed the connection)
[04:18:08] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[04:18:08] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[04:18:08] *** Joins: wroathe (~wroathe@user/wroathe)
[04:18:58] *** Joins: Guest42 (~Guest42@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[04:21:48] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 244 seconds)
[04:22:32] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[04:23:08] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[04:23:30] *** Joins: Wulf (~Wulf@user/wulf)
[04:23:52] *** Quits: Burgundy (~yomon@86.127.194.72) (Ping timeout: 244 seconds)
[04:24:42] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 260 seconds)
[04:25:18] *** Parts: william (~william@245.sub-174-197-1.myvzw.com) ()
[04:29:32] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Quit: Leaving)
[04:29:43] *** Quits: random-nick (~random-ni@87.116.176.55) (Ping timeout: 250 seconds)
[04:30:53] *** Quits: _LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[04:36:59] *** Quits: dutch (~DutchIngr@user/dutch) (Quit: WeeChat 3.3)
[04:37:36] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[04:41:44] *** Joins: Thedarkb1-Deskto (~Thedarkb@2001:bb6:b403:e042:e9e3:4a3f:7e1:6f10)
[04:41:46] *** Quits: TonyStone31 (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[04:42:08] *** Quits: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:6d6f:64e2:6bd2:feda) (Remote host closed the connection)
[04:42:20] *** Joins: dutch (~DutchIngr@user/dutch)
[04:43:44] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[04:45:02] *** Joins: dec0d3r_ (~dec0d3r@2001:8004:1d82:1a0f:1d6f:e820:a0ed:ee97)
[04:45:28] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Remote host closed the connection)
[04:46:11] *** Joins: dohtem (uid524096@user/dohtem)
[04:46:38] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Read error: Connection reset by peer)
[04:46:42] *** Joins: dec0d3r__ (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[04:49:02] *** Quits: dec0d3r_ (~dec0d3r@2001:8004:1d82:1a0f:1d6f:e820:a0ed:ee97) (Ping timeout: 240 seconds)
[04:49:50] *** Quits: ckdCreations (~ckdCreati@147.55.133.141) (Read error: Connection reset by peer)
[04:50:03] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[04:51:36] *** Quits: hexteex (~hexteex@gateway/tor-sasl/hexteex) (Remote host closed the connection)
[04:52:10] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[04:52:20] *** Joins: haniaF_ (~haniaF@83.24.199.189.ipv4.supernova.orange.pl)
[04:52:32] *** Quits: haniaF (~haniaF@83.24.196.92.ipv4.supernova.orange.pl) (Ping timeout: 240 seconds)
[04:59:47] *** Quits: Guest42 (~Guest42@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Quit: Client closed)
[05:05:46] *** Joins: ferdna (~ferdna@user/ferdna)
[05:11:27] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[05:11:27] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[05:11:28] *** Joins: wroathe (~wroathe@user/wroathe)
[05:12:18] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 276 seconds)
[05:12:48] *** Joins: nostar (~nostar@68.51.221.108)
[05:17:43] *** Joins: de-facto (~de-facto@user/de-facto)
[05:20:40] *** Quits: de-facto (~de-facto@user/de-facto) (Excess Flood)
[05:21:35] *** Joins: de-facto (~de-facto@user/de-facto)
[05:29:54] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:a5b1:905d:8e21:4dd9)
[05:33:02] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:5c20:adb3:d75f:164) (Ping timeout: 240 seconds)
[05:38:51] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 245 seconds)
[05:39:03] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 250 seconds)
[05:40:24] *** Quits: ChromaCat248 (~ChromaCat@user/chromacat248) (Remote host closed the connection)
[05:40:46] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Ping timeout: 260 seconds)
[05:41:31] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[05:44:32] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[05:45:31] *** Joins: g0zart (~g0zart@gateway/vpn/pia/g0zart)
[05:46:05] *** Quits: wovixo (~wovixo@128.104.205.49) (Read error: Connection reset by peer)
[05:46:29] *** Joins: wovixo (~wovixo@128.104.205.49)
[05:50:00] *** Quits: Bakunin (~Lindis@user/lindis) (Ping timeout: 276 seconds)
[05:52:55] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 250 seconds)
[05:53:36] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[05:56:14] *** Joins: phyto (~phyto@host-198-114.txbrags.bryan.tx.us.clients.pavlovmedia.net)
[05:57:15] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[05:59:08] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[06:02:02] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[06:05:09] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[06:07:00] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:07:41] *** Joins: seninha (~seninha@user/seninha)
[06:07:51] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[06:11:37] *** Quits: NEYi (~NEYi@109.251.216.38) (Quit: Leaving)
[06:14:11] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Read error: Connection reset by peer)
[06:14:45] *** Quits: nolesswrong (~nolesswro@45.32.1.17) (Ping timeout: 260 seconds)
[06:15:28] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 244 seconds)
[06:16:09] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[06:18:04] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[06:19:25] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[06:20:13] *** _koolazer is now known as koolazer
[06:25:10] *** Joins: FlipFlop (~FlipFlop@user/fl1pfl0p)
[06:25:23] *** Quits: g0zart (~g0zart@gateway/vpn/pia/g0zart) (Quit: Leaving)
[06:28:02] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[06:30:01] *** Quits: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr) (Quit: ZNC 1.8.2 - https://znc.in)
[06:30:48] *** Quits: dec0d3r__ (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Remote host closed the connection)
[06:32:56] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[06:34:17] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 256 seconds)
[06:34:27] <Matt|home> so i've got an idea for a coding project i'll start work on again, but i need to know how to undo it, because i have an idea that might catastrophically break my entire computer
[06:35:26] *** Quits: kilobyte_ch (~kbch@77.109.171.167) (Ping timeout: 260 seconds)
[06:35:47] *** Joins: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr)
[06:36:23] <Matt|home> so my idea is to write a sort of semi self-replicating virus.. in that it'll infect a target elf binary.. and once that binary is run it will scan the rest of the drive for any writeable files that don't have a specific infected flag, and inject the code into them, so that each time any binary is run it'll re-infect the rest of the files without the flag
[06:36:43] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[06:36:50] <pnbeast> Matt|home, oh, that's complex, but you need to code in a logic bomb.  Consult with professor Falken on the details.
[06:36:52] <caze> Sounds like a virus.
[06:36:56] <Matt|home> i guess an idea would be to make another binary that has the flag but 
[06:37:02] <bparker> Joshua.
[06:37:13] <Matt|home> caze : im rewriting my elf/objdump clone parser basically and thought it'd be cool to work on some malware
[06:37:27] <MrMobius> what could go wrong
[06:37:34] <Matt|home> well yeah that's my concern
[06:38:14] <Matt|home> so im wondering how to reverse it.. have another file just scan for the flag and rewrite all the binaries removing the infected code?
[06:38:29] <caze> Have the loader remove it.
[06:38:41] <Matt|home> yeah i can have an option for that
[06:38:49] <MrMobius> save the vm before beginning your experiment then reinstall when it dies?
[06:38:57] <Matt|home> in general, for linux and bsd do they have any defenses against that sort of behavior?
[06:39:07] <caze> root
[06:39:29] <Matt|home> right, i'd only be able to modify binaries i have write access to
[06:39:38] <Matt|home> but that's still a big problem
[06:40:11] *** Joins: kilobyte_ch (~kbch@77.109.171.167)
[06:40:18] <Matt|home> like how do windows antivirus software detect that?
[06:40:36] <Matt|home> i guess they just scan for specific markers in files?
[06:41:23] <caze> They stick a qtip up its nose and run a PCR test.
[06:41:47] <Matt|home> .....
[06:41:58] <Matt|home> thanks that's helpful.
[06:47:11] *** Quits: FlipFlop (~FlipFlop@user/fl1pfl0p) (Ping timeout: 245 seconds)
[06:48:50] <tusko> yw
[06:49:46] *** Joins: g0zart (~g0zart@gateway/vpn/pia/g0zart)
[06:49:56] *** Quits: g0zart (~g0zart@gateway/vpn/pia/g0zart) (Remote host closed the connection)
[06:52:30] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:54:41] <rcf> Matt|home: signatures, and any ad-hoc and terrible approaches that are later deemed necessary. 
[06:58:01] <Matt|home> ty rcf 
[06:58:31] *** Quits: fluter (~fluter@user/fluter) (Read error: Connection reset by peer)
[06:59:49] *** Joins: simon323 (~simon323@2409:8a34:46c:5830:f078:9382:f2b0:e9e6)
[07:04:50] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[07:05:11] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[07:12:13] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[07:12:28] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[07:18:13] *** Quits: phyto (~phyto@host-198-114.txbrags.bryan.tx.us.clients.pavlovmedia.net) (Quit: WeeChat 3.3)
[07:22:35] *** Joins: fluter (~fluter@user/fluter)
[07:24:01] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[07:24:48] *** Joins: neutral (~user@user/neutral)
[07:24:59] <neutral> https://paste.debian.net/1218746/
[07:25:42] *** Quits: De4nWhit3 (~De4nWhit3@165-73-119-36.ip.afrihost.capetown) (Quit: Connection closed)
[07:25:52] <neutral> puts doesnt print whereas printf prints
[07:26:46] <caze> puts expects a string. The %c format specifier of printf doesn't take a string.
[07:28:17] <neutral> caze: but "puts(c+1)" prints
[07:28:20] <caze> neutral: FIFY https://ideone.com/q5RHif
[07:29:04] <caze> neutral: If it prints, it's by coincidence.
[07:32:51] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[07:32:51] *** Quits: alch (~alch@151.34.162.154) (Read error: Connection reset by peer)
[07:34:51] *** Quits: rgrinberg (~textual@190.113.102.153) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:32] *** Quits: mahmutov (~mahmutov@37.155.47.58) (Ping timeout: 240 seconds)
[07:37:05] *** Joins: alch (~alch@151.34.156.31)
[07:37:56] *** Joins: darklands (~darklands@69.43.66.31)
[07:38:02] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 240 seconds)
[07:38:51] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:40:44] *** Joins: rgrinberg (~textual@190.113.102.153)
[07:50:47] *** Quits: darklands (~darklands@69.43.66.31) (Ping timeout: 256 seconds)
[07:52:05] <oldlaptop> neutral: If you're still having trouble understanding, think about how puts is supposed to know when to stop printing.
[07:55:04] *** Quits: smeso (~smeso@user/smeso) (Quit: smeso)
[08:01:23] *** Joins: smeso (~smeso@user/smeso)
[08:04:43] *** Joins: humky_ (~humky@user/humky)
[08:05:57] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 250 seconds)
[08:06:09] *** Joins: smlavine (~smlavine@sourcehut/user/smlavine)
[08:12:05] *** Joins: nostart (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[08:13:04] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[08:14:24] *** Quits: alch (~alch@151.34.156.31) (*.net *.split)
[08:14:24] *** Quits: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr) (*.net *.split)
[08:14:24] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (*.net *.split)
[08:14:24] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (*.net *.split)
[08:14:24] *** Quits: nostar (~nostar@68.51.221.108) (*.net *.split)
[08:14:24] *** Quits: frost (~frost@user/frost) (*.net *.split)
[08:14:24] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (*.net *.split)
[08:14:24] *** Quits: humky (~humky@user/humky) (*.net *.split)
[08:14:24] *** Quits: acerbic (~acerbic@cs-xdata-50-86-48-149.cspire.com) (*.net *.split)
[08:14:24] *** Quits: cpuid_ (~cpuid@static.136.43.161.5.clients.your-server.de) (*.net *.split)
[08:14:24] *** Quits: highrate (~presonic@111-22-237-24.gci.net) (*.net *.split)
[08:14:24] *** Quits: mad_enz (~mad_enz@cpe00508b114c3e-cm788df7e75290.cpe.net.fido.ca) (*.net *.split)
[08:14:24] *** Quits: steve_ (~steve@ool-182c2b80.dyn.optonline.net) (*.net *.split)
[08:14:24] *** Quits: pulse (~pulse@user/pulse) (*.net *.split)
[08:14:24] *** Quits: tbcr_ (~tbcr@107.13.189.161) (*.net *.split)
[08:14:24] *** Quits: candide (~pbot3@about/c/bot/candide) (*.net *.split)
[08:14:24] *** Quits: kurahaupo (~kurahaupo@123-243-221-134.tpgi.com.au) (*.net *.split)
[08:14:24] *** Quits: Posterdati (~posterdat@host-80-183-118-167.business.telecomitalia.it) (*.net *.split)
[08:14:24] *** Quits: cursey (~cursey@user/cursey) (*.net *.split)
[08:14:24] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (*.net *.split)
[08:14:24] *** Quits: kurfen (~kurfen@45.152.181.20) (*.net *.split)
[08:14:24] *** Quits: rahl (~rahl@102.114.82.103) (*.net *.split)
[08:14:24] *** Quits: Inoperable (~PLAYER_1@fancydata.science) (*.net *.split)
[08:14:24] *** Quits: ra4king (~ra4king@roiatalla.com) (*.net *.split)
[08:14:24] *** Quits: grange_c (~grange_c@vps-9763379d.vps.ovh.net) (*.net *.split)
[08:14:24] *** Quits: davidv7 (~davidv7@user/videogameenjoyer) (*.net *.split)
[08:14:24] *** Quits: edr (~edr@user/edr) (*.net *.split)
[08:14:24] *** Quits: twkm (twkm@rfc1459.net) (*.net *.split)
[08:14:24] *** Quits: drew (~drew@user/drew) (*.net *.split)
[08:14:24] *** Quits: dkeohane2 (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com) (*.net *.split)
[08:14:24] *** Quits: fcresende (~quassel@vps35015.publiccloud.com.br) (*.net *.split)
[08:14:24] *** Quits: citrons (~citrons@alt.mondecitronne.com) (*.net *.split)
[08:14:24] *** Quits: Famine_ (~Famine@user/famine) (*.net *.split)
[08:14:24] *** Quits: llh (~llh@user/llh) (*.net *.split)
[08:14:24] *** Quits: computerquip (sid423484@user/computerquip) (*.net *.split)
[08:14:24] *** Quits: begriffs (~begriffs@user/begriffs) (*.net *.split)
[08:14:24] *** Quits: Matt|home (~matt@adsl-74-233-58-226.mia.bellsouth.net) (*.net *.split)
[08:14:24] *** Quits: deflected (~deflected@user/deflected) (*.net *.split)
[08:14:24] *** Quits: davros (~davros@host86-185-61-22.range86-185.btcentralplus.com) (*.net *.split)
[08:14:24] *** Quits: mark_infinite (~skynet@ppp-94-66-136-166.home.otenet.gr) (*.net *.split)
[08:14:24] *** Quits: clamiax (~clamiax@net-93-149-158-199.cust.vodafonedsl.it) (*.net *.split)
[08:14:24] *** Quits: e36freak (~e36freak@user/e36freak) (*.net *.split)
[08:14:24] *** Quits: novns (~novns@user/novns) (*.net *.split)
[08:15:11] *** Joins: deflected (~deflected@194-145-163-237.sf.ddns.bulsat.com)
[08:15:11] *** Joins: alch (~alch@151.34.156.31)
[08:15:11] *** Joins: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr)
[08:15:11] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[08:15:11] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[08:15:11] *** Joins: frost (~frost@user/frost)
[08:15:11] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[08:15:11] *** Joins: acerbic (~acerbic@cs-xdata-50-86-48-149.cspire.com)
[08:15:11] *** Joins: cpuid_ (~cpuid@static.136.43.161.5.clients.your-server.de)
[08:15:11] *** Joins: highrate (~presonic@111-22-237-24.gci.net)
[08:15:11] *** Joins: mad_enz (~mad_enz@cpe00508b114c3e-cm788df7e75290.cpe.net.fido.ca)
[08:15:11] *** Joins: steve_ (~steve@ool-182c2b80.dyn.optonline.net)
[08:15:11] *** Joins: tbcr_ (~tbcr@107.13.189.161)
[08:15:11] *** Joins: candide (~pbot3@about/c/bot/candide)
[08:15:11] *** Joins: kurahaupo (~kurahaupo@123-243-221-134.tpgi.com.au)
[08:15:11] *** Joins: Posterdati (~posterdat@host-80-183-118-167.business.telecomitalia.it)
[08:15:11] *** Joins: cursey (~cursey@user/cursey)
[08:15:11] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[08:15:11] *** Joins: kurfen (~kurfen@45.152.181.20)
[08:15:11] *** Joins: rahl (~rahl@102.114.82.103)
[08:15:11] *** Joins: Inoperable (~PLAYER_1@fancydata.science)
[08:15:11] *** Joins: ra4king (~ra4king@roiatalla.com)
[08:15:11] *** Joins: grange_c (~grange_c@vps-9763379d.vps.ovh.net)
[08:15:11] *** Joins: edr (~edr@user/edr)
[08:15:11] *** Joins: twkm (twkm@rfc1459.net)
[08:15:11] *** Joins: dkeohane2 (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com)
[08:15:11] *** Joins: drew (~drew@user/drew)
[08:15:11] *** Joins: fcresende (~quassel@vps35015.publiccloud.com.br)
[08:15:11] *** Joins: citrons (~citrons@alt.mondecitronne.com)
[08:15:11] *** Joins: Famine_ (~Famine@user/famine)
[08:15:11] *** Joins: llh (~llh@user/llh)
[08:15:11] *** Joins: computerquip (sid423484@user/computerquip)
[08:15:11] *** Joins: begriffs (~begriffs@user/begriffs)
[08:15:11] *** Joins: Matt|home (~matt@adsl-74-233-58-226.mia.bellsouth.net)
[08:15:11] *** Joins: davros (~davros@host86-185-61-22.range86-185.btcentralplus.com)
[08:15:11] *** Joins: mark_infinite (~skynet@ppp-94-66-136-166.home.otenet.gr)
[08:15:11] *** Joins: clamiax (~clamiax@net-93-149-158-199.cust.vodafonedsl.it)
[08:15:11] *** Joins: e36freak (~e36freak@user/e36freak)
[08:15:11] *** Joins: novns (~novns@user/novns)
[08:17:07] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Max SendQ exceeded)
[08:17:07] *** Quits: llh (~llh@user/llh) (Max SendQ exceeded)
[08:17:15] *** Quits: drew (~drew@user/drew) (Max SendQ exceeded)
[08:17:38] *** Joins: llh (~llh@user/llh)
[08:17:55] *** deflected is now known as Guest8472
[08:18:48] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[08:19:28] *** Quits: Guest8472 (~deflected@194-145-163-237.sf.ddns.bulsat.com) (Ping timeout: 244 seconds)
[08:20:02] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[08:20:43] *** Joins: slidercrank (~slidercra@user/slidercrank)
[08:20:54] *** Joins: drew (~drew@user/drew)
[08:21:16] *** Joins: deflected (~deflected@user/deflected)
[08:23:19] *** Quits: gce108 (~gce@user/gce108) (Remote host closed the connection)
[08:23:34] *** Joins: monchi_ (~joints@143.198.92.132)
[08:23:58] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[08:25:01] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[08:25:02] *** Quits: monchi (~joints@143.198.92.132) (Remote host closed the connection)
[08:26:46] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[08:26:47] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[08:26:47] *** Joins: wroathe (~wroathe@user/wroathe)
[08:28:28] *** monchi_ is now known as monchi
[08:36:01] *** Joins: gce108 (~gce@user/gce108)
[08:36:03] *** Joins: gce108_ (~gce@64-250-5-223.gvec.net)
[08:36:10] *** Quits: puke (~puke@user/puke) (Quit: puke)
[08:39:02] *** Quits: cm007magnum (~Rheanna@101.68.251.194) (Ping timeout: 260 seconds)
[08:39:31] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[08:39:40] *** Joins: cm007magnum (~Rheanna@101.68.251.194)
[08:41:51] *** Joins: jetchisel (jetchisel@user/jetchisel)
[08:43:20] *** Quits: Flonk (~Flonk@ec2-52-40-29-25.us-west-2.compute.amazonaws.com) (Quit: Ping timeout (120 seconds))
[08:43:39] *** Joins: Flonk (~Flonk@ec2-52-40-29-25.us-west-2.compute.amazonaws.com)
[08:44:43] *** Joins: ferdna (~ferdna@user/ferdna)
[08:44:51] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[08:49:08] *** Quits: malloy (~jimery@116.30.220.108) (Ping timeout: 250 seconds)
[08:51:01] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[08:51:20] *** Joins: malloy (~jimery@116.30.220.108)
[08:57:39] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[09:00:13] *** Joins: ranuzz (~ranuzz@2409:4063:6d16:c791:9132:cb14:1417:12e1)
[09:03:53] *** Quits: cisco87 (~quassel@static.128.104.12.49.clients.your-server.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[09:04:12] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[09:04:18] *** Joins: cisco87 (~quassel@static.128.104.12.49.clients.your-server.de)
[09:04:44] *** Joins: tejr (~tejr@user/tejr)
[09:06:29] *** Quits: edr (~edr@user/edr) (Ping timeout: 244 seconds)
[09:07:04] *** Quits: jellie (~luv_panda@user/jellie) (Quit: ZNC 1.8.2 - https://znc.in)
[09:07:06] *** Joins: riksteri (riksteri@gateway/vpn/airvpn/riksteri)
[09:07:08] *** Joins: edr (~edr@enlo.co)
[09:07:08] *** Quits: edr (~edr@enlo.co) (Changing host)
[09:07:08] *** Joins: edr (~edr@user/edr)
[09:07:23] *** Joins: jellie (~luv_panda@user/jellie)
[09:12:56] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:16:56] *** Joins: loganlee (~Thunderbi@user/loganlee)
[09:16:57] *** Joins: earnestly (~earnest@user/earnestly)
[09:17:01] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[09:17:11] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 245 seconds)
[09:17:47] *** Quits: n1000 (~n1000@user/n1000) (Ping timeout: 264 seconds)
[09:18:55] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[09:19:18] *** Quits: loganlee (~Thunderbi@user/loganlee) (Client Quit)
[09:22:24] *** Quits: dexter0 (~dexter0@c-69-181-126-161.hsd1.ca.comcast.net) (Quit: exit)
[09:25:06] *** Quits: ericlee_ (~ericlee@2601:647:4681:3420::2) (Ping timeout: 245 seconds)
[09:28:49] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[09:28:56] *** Quits: zwr (~zwr@2804:d45:b966:fb00:32fc:7d91:84d3:8a74) (Ping timeout: 268 seconds)
[09:29:19] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[09:31:59] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[09:32:41] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[09:32:56] *** Joins: de-facto (~de-facto@user/de-facto)
[09:33:37] *** humky_ is now known as humky
[09:40:25] *** Quits: engest (~engest@50.53.244.75) (Ping timeout: 250 seconds)
[09:41:10] *** Quits: ranuzz (~ranuzz@2409:4063:6d16:c791:9132:cb14:1417:12e1) (Remote host closed the connection)
[09:41:17] *** Joins: zwr (~zwr@2804:d45:b966:fb00:8492:8a46:6313:2e5a)
[09:41:32] *** Joins: ranuzz (~ranuzz@2409:4063:6d16:c791:9132:cb14:1417:12e1)
[09:45:35] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[09:47:54] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 276 seconds)
[09:48:39] *** Joins: Famine- (~Famine@user/famine)
[09:49:18] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[09:49:18] *** Joins: tejr (~tejr@user/tejr)
[09:51:57] *** Quits: Famine_ (~Famine@user/famine) (Ping timeout: 244 seconds)
[09:53:14] *** Quits: kurahaupo (~kurahaupo@123-243-221-134.tpgi.com.au) (Read error: Connection reset by peer)
[09:53:30] *** Quits: frost (~frost@user/frost) (Ping timeout: 244 seconds)
[09:54:36] *** Joins: kurahaupo (~kurahaupo@pa49-195-103-86.pa.nsw.optusnet.com.au)
[09:55:58] *** Quits: rgrinberg (~textual@190.113.102.153) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:56:37] *** Joins: rgrinberg (~textual@190.113.102.153)
[09:58:02] *** Quits: bliminse (~bliminse@host86-185-253-43.range86-185.btcentralplus.com) (Quit: Lost terminal)
[09:59:46] *** Quits: ranuzz (~ranuzz@2409:4063:6d16:c791:9132:cb14:1417:12e1) (Ping timeout: 268 seconds)
[10:01:41] *** Quits: kurahaupo (~kurahaupo@pa49-195-103-86.pa.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[10:05:06] *** Joins: bliminse (~bliminse@host86-185-253-43.range86-185.btcentralplus.com)
[10:08:50] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[10:10:12] *** Quits: supajerm (~supajerm@gateway/vpn/pia/supajerm) (Remote host closed the connection)
[10:12:15] *** Quits: soapsudsxx (~soapsudsx@209.221.40.144) (Remote host closed the connection)
[10:12:32] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[10:12:48] *** Joins: khoa (~khoa@user/khoa)
[10:13:49] *** Joins: Enitin (~Enitin@82.102.22.85)
[10:15:31] *** Joins: dexter0 (~dexter0@c-69-181-126-161.hsd1.ca.comcast.net)
[10:18:47] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Remote host closed the connection)
[10:19:25] *** Joins: kurahaupo (~kurahaupo@pa49-181-130-177.pa.nsw.optusnet.com.au)
[10:22:20] *** Joins: voltron (~voltrin_@ip5f599415.dynamic.kabel-deutschland.de)
[10:24:35] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[10:30:08] *** Quits: pnbeast (~pnbeast@2601:140:4280:3c90::1) (Quit: WeeChat 2.7.1)
[10:31:03] * Feuermagier pets candide 
[10:31:14] * candide vomits on F​euermagier
[10:31:27] <Feuermagier> 0-0
[10:31:37] <Feuermagier> ._.
[10:32:39] *** Quits: voltron (~voltrin_@ip5f599415.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[10:33:32] *** Quits: kurahaupo (~kurahaupo@pa49-181-130-177.pa.nsw.optusnet.com.au) (Ping timeout: 240 seconds)
[10:34:15] <Bou> Lesson learned: don't be nice to compilers
[10:36:52] *** jinsun__ is now known as jinsun
[10:37:02] * Bou behaves undefinededly to candide
[10:37:18] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[10:39:24] *** Joins: ranuzz (~ranuzz@47.15.22.179)
[10:39:54] *** Joins: squarepants (~ranuzz@47.15.22.179)
[10:40:51] *** Joins: n1000 (~n1000@user/n1000)
[10:43:32] *** Quits: ranuzz (~ranuzz@47.15.22.179) (Ping timeout: 240 seconds)
[10:43:52] *** Quits: squarepants (~ranuzz@47.15.22.179) (Read error: Connection reset by peer)
[10:46:12] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 244 seconds)
[10:51:15] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[11:00:42] <System_Error> <Matt|home> in general, for linux and bsd do they have any defenses against that sort of behavior? <- VM? Containers? Snapshot? So one can revert that and pretend it never happened. Possibly snapshotting/dumping ram if something like that arrives for analisys/debug.
[11:13:22] *** Quits: khoa (~khoa@user/khoa) (Quit: leaving)
[11:13:35] *** Joins: khoa (~khoa@user/khoa)
[11:15:27] *** Joins: slidercrank (~slidercra@user/slidercrank)
[11:27:53] *** Joins: mrig (~AdiIRC@user/mrig)
[11:28:46] *** Quits: rgrinberg (~textual@190.113.102.153) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:29:05] *** Quits: rahl (~rahl@102.114.82.103) (Ping timeout: 244 seconds)
[11:29:05] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[11:30:42] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[11:31:15] *** Joins: rahl (~rahl@102.114.76.71)
[11:34:23] *** Quits: FuraiTHD (~Furai@cookiehoster.furai.pl) (Quit: WeeChat 3.3)
[11:34:46] *** Quits: alch (~alch@151.34.156.31) (Ping timeout: 244 seconds)
[11:36:27] *** Joins: alch (~alch@151.68.133.164)
[11:36:28] * fluter hugs candide
[11:36:34] * candide tickles f​luter
[11:36:40] * fluter pets candide
[11:36:54] * candide vomits on f​luter
[11:37:16] *** Joins: retroid_ (~retro@2e41e9c8.skybroadband.com)
[11:37:46] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[11:40:17] *** Quits: retro_ (~retro@2e41e9c8.skybroadband.com) (Ping timeout: 268 seconds)
[11:40:29] *** Joins: freakazoid12345 (~matt@2603-9000-cf0f-80e3-a5b1-905d-8e21-4dd9.inf6.spectrum.com)
[11:41:25] *** Quits: p0g0__ (~p0g0@216.211.157.175) (Ping timeout: 256 seconds)
[11:41:45] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Client Quit)
[11:41:53] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[11:43:02] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:a5b1:905d:8e21:4dd9) (Ping timeout: 240 seconds)
[11:43:02] *** Joins: p0g0 (~p0g0@23.252.179.181)
[11:45:41] *** Quits: alicef (~none@gentoo/developer/alicef) (Quit: install gentoo)
[11:46:12] *** Quits: Jck_true (~jcktrue@188.228.89.240) (Quit: The Lounge - https://thelounge.chat)
[11:46:27] *** Joins: alicef (~none@gentoo/developer/alicef)
[11:46:52] *** Joins: Jck_true (~jcktrue@188.228.89.240)
[11:49:50] *** Quits: malloy (~jimery@116.30.220.108) (Ping timeout: 250 seconds)
[11:50:29] *** Quits: llh (~llh@user/llh) (Ping timeout: 256 seconds)
[11:51:07] *** Joins: Rounin (~david@84.212.130.215)
[11:51:16] *** Joins: llh (~llh@user/llh)
[11:51:41] *** Joins: malloy (~jimery@116.30.220.108)
[11:52:03] *** Quits: highrate (~presonic@111-22-237-24.gci.net) ()
[11:52:45] *** Quits: m4v (~znc@ubuntu/member/m4v) (Ping timeout: 256 seconds)
[11:52:47] *** Joins: m4v (~znc@ubuntu/member/m4v)
[11:53:35] *** Quits: AmR (~AmREiSa@156.199.218.104) (Quit: Konversation terminated!)
[11:56:38] *** Joins: aradesh (~aradesh@user/aradesh)
[12:02:49] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[12:04:34] *** Quits: HisShadow (~HisShadow@user/hisshadow) (Read error: Connection reset by peer)
[12:04:45] *** Joins: nmi (~deflected@user/deflected)
[12:05:05] *** Joins: hexteex (~hexteex@gateway/tor-sasl/hexteex)
[12:05:11] *** Joins: vysn (~vysn@user/vysn)
[12:06:32] *** Joins: HisShadow (~HisShadow@user/hisshadow)
[12:06:32] *** Quits: deflected (~deflected@user/deflected) (Ping timeout: 240 seconds)
[12:09:52] *** Joins: arinov (~arinov@213.194.126.155)
[12:16:46] *** Joins: brelod (~me@90.244.150.142)
[12:19:57] *** Joins: Atque (~Atque@user/atque)
[12:22:16] *** Joins: chomwitt (~chomwitt@2a02:587:dc0f:7c00:12c3:7bff:fe6d:d374)
[12:24:11] *** Quits: acerbic (~acerbic@cs-xdata-50-86-48-149.cspire.com) (Read error: Connection reset by peer)
[12:30:09] *** Quits: cwve[m] (~cwvematri@2001:470:69fc:105::1:1495) (Quit: You have been kicked for being idle)
[12:37:54] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:38:05] *** Quits: cm007magnum (~Rheanna@101.68.251.194) (Remote host closed the connection)
[12:38:49] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[12:39:43] *** Joins: cm007magnum (~Rheanna@218.78.94.61)
[12:39:53] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[12:39:53] *** Quits: cm007magnum (~Rheanna@218.78.94.61) (Remote host closed the connection)
[12:41:56] *** Joins: acerbic (~acerbic@cs-xdata-50-86-48-149.cspire.com)
[12:42:45] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Read error: Connection reset by peer)
[12:47:58] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[12:50:29] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[12:56:00] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[12:56:43] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 250 seconds)
[12:56:47] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 264 seconds)
[12:57:34] *** Joins: AsenMx (~AsenMx@user/asenmx)
[12:58:39] *** Joins: nuh^ (~nuh@h50.174.139.63.static.ip.windstream.net)
[12:59:30] *** Joins: gproto23 (~gproto23@user/gproto23)
[13:02:02] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[13:02:20] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[13:03:21] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[13:03:51] <varaindemian> I have this `void das_constructor() __attribute__((constructor));` before main
[13:03:58] <varaindemian> and its definition
[13:04:07] <varaindemian> https://www.irccloud.com/pastebin/g9H2DcRF/
[13:04:20] <varaindemian> how can I see with gdb that his is called before main
[13:04:22] <varaindemian> ?
[13:05:26] *** Joins: seninha (~seninha@user/seninha)
[13:05:32] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[13:05:33] <dave0> varaindemian: are you able to set a breakpoint on   das_constructor  ?
[13:05:45] <varaindemian> dave0: yes
[13:05:57] <varaindemian> it's line 80 after the main
[13:06:12] <dave0> type run and it should stop there
[13:06:47] <dave0> could put a breakpoint on main aswell
[13:07:02] <dave0> then you could see if it's calling das_constructor
[13:07:07] <dave0> before main
[13:09:25] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[13:13:34] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[13:16:45] <varaindemian> right
[13:17:53] *** Joins: arashatt (~user@2.180.49.187)
[13:19:27] *** Quits: arashatt (~user@2.180.49.187) (Client Quit)
[13:21:30] <varaindemian> dave0: can this be seen in Ghidra as well?
[13:25:45] *** Joins: plastico (~plastico@neomutt/plastico)
[13:26:50] <dave0> idk what that is
[13:27:08] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[13:28:51] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[13:37:54] <fluter> why do you need run code before main?
[13:38:39] *** Quits: hexteex (~hexteex@gateway/tor-sasl/hexteex) (Ping timeout: 276 seconds)
[13:42:57] <Bou> H4xing
[13:44:23] <fluter> lol happy haxing
[13:47:07] *** Joins: Klinda (~superleag@user/klinda)
[13:47:59] *** Quits: riles (~root@dhcp-24-53-243-12.cable.user.start.ca) (Read error: Connection reset by peer)
[13:53:56] <Klinda> so a solution to strlen undefined behaviour is to define a buffer with a fixed length, you put the \0 at the end and copy only buffer.size() - 2 chars
[13:54:01] *** Quits: HisShadow (~HisShadow@user/hisshadow) (Ping timeout: 256 seconds)
[13:54:34] *** Joins: riles (~root@dhcp-24-53-243-12.cable.user.start.ca)
[13:54:50] <Klinda> if you don't really know the size of the strings, you get a buffer overflow
[13:55:47] *** Joins: HisShadow (~HisShadow@user/hisshadow)
[13:56:02] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 240 seconds)
[13:57:04] *** Joins: hexteex (~hexteex@gateway/tor-sasl/hexteex)
[13:57:50] *** Joins: jetchisel (jetchisel@user/jetchisel)
[14:00:53] *** Quits: bone (~bone@user/mbo) (Quit: znc)
[14:01:13] *** Joins: bone (~bone@user/mbo)
[14:01:14] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Quit: this is not importent)
[14:01:36] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[14:03:00] *** Joins: FrenlyFren (~FrenlyFre@88.222.176.17)
[14:04:37] *** Quits: System_Error (~SystemErr@user/systemerror) (Remote host closed the connection)
[14:07:38] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[14:10:33] *** Quits: FrenlyFren (~FrenlyFre@88.222.176.17) (Remote host closed the connection)
[14:12:07] *** Joins: ko (~i.am@user/marlboro)
[14:13:00] <Bou> Klinda: buffer.size()-2 sounds wrong, you only need one \0 at the end so that leaves size-1 bytes
[14:14:26] <Klinda> well de index start at -2
[14:14:34] <Klinda> -1 of the buff size
[14:14:55] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Quit: mikoto-chan)
[14:16:38] <Klinda> btw is wrong also to pass the size as input, cause someone can do it wrong, so it's always better to define in inside the function
[14:17:56] <Klinda> that's what I understand btw, not sure if it's correct
[14:21:57] <katnis> is there any ways that i can use 3 ||s in 1 if sentence?
[14:22:10] <katnis> i am trying to make debounce for 3 buttons
[14:22:24] <katnis> from debounce tutorial
[14:23:07] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[14:24:08] <Bou> `if (a==b||c==d||e==f)`?
[14:24:13] <katnis> yes!
[14:24:23] <katnis> oh ill write an example
[14:24:24] <katnis> if ((button0 != lastButton0State)||(button1 != lastButton1State)), ||(button2 != lastButton2State))
[14:24:52] <katnis> sorry for the ,
[14:24:55] *** Joins: shivesh (~shivesh@user/shivesh)
[14:25:36] <katnis> OOF
[14:25:39] <katnis> thanks for the help
[14:25:59] <katnis> nvm it doesnt work 
[14:26:04] <katnis> hmm
[14:27:36] <Bou> You have an extra ) right to lastButton1State
[14:27:51] <katnis> i erased it and it just prints and dont count anymore :(
[14:28:06] *** Joins: V-T60 (~v@91.203.24.166)
[14:28:42] *** Quits: thing (~thing@user/thing) (Ping timeout: 276 seconds)
[14:29:08] <katnis> im so confused
[14:29:24] <Bou> Computer does exactly what you tell it to
[14:29:43] <katnis> yes..
[14:30:16] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:31:01] *** Joins: csrf (~csrf@user/csrf)
[14:35:05] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[14:36:40] <katnis> holy cow i fixed it
[14:43:54] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[14:43:59] *** Joins: puke (~puke@user/puke)
[14:44:24] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[14:45:23] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[14:45:57] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[14:45:59] *** Joins: serbest (~serbest@user/serbest)
[14:47:32] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[14:48:10] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:55:11] *** Quits: arinov (~arinov@213.194.126.155) (Quit: WeeChat 3.3)
[14:55:24] *** Joins: thing (~thing@user/thing)
[14:56:01] *** Joins: kurahaupo (~kurahaupo@pa49-195-33-187.pa.nsw.optusnet.com.au)
[15:10:02] *** Quits: kurahaupo (~kurahaupo@pa49-195-33-187.pa.nsw.optusnet.com.au) (Ping timeout: 240 seconds)
[15:10:22] *** Joins: kurahaupo (~kurahaupo@pa49-195-33-187.pa.nsw.optusnet.com.au)
[15:10:26] *** Joins: Enitin (~Enitin@82.102.22.85)
[15:10:29] *** Joins: random-nick (~random-ni@87.116.165.220)
[15:10:31] *** Parts: qwerty (~qwerty@user/badwolf) ()
[15:10:34] *** Quits: Inst (~Inst@2601:6c4:4080:3f80:d8ab:2e91:63f7:db6e) (Ping timeout: 268 seconds)
[15:13:00] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[15:16:32] *** Quits: chomwitt (~chomwitt@2a02:587:dc0f:7c00:12c3:7bff:fe6d:d374) (Ping timeout: 240 seconds)
[15:27:02] *** Quits: kurahaupo (~kurahaupo@pa49-195-33-187.pa.nsw.optusnet.com.au) (Ping timeout: 240 seconds)
[15:29:06] *** Joins: Burgundy (~yomon@86.127.194.72)
[15:29:32] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[15:29:38] *** Quits: nuh^ (~nuh@h50.174.139.63.static.ip.windstream.net) (Remote host closed the connection)
[15:31:41] *** Quits: freakazoid12345 (~matt@2603-9000-cf0f-80e3-a5b1-905d-8e21-4dd9.inf6.spectrum.com) (Read error: Connection reset by peer)
[15:31:51] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[15:32:26] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:a5b1:905d:8e21:4dd9)
[15:33:42] *** Joins: Enitin (~Enitin@82.102.22.84)
[15:34:32] *** Quits: alch (~alch@151.68.133.164) (Ping timeout: 240 seconds)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:46] *** Joins: alch (~alch@151.34.208.191)
[15:38:07] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[15:40:44] *** Joins: XJ8 (~XJ8@c-24-30-27-91.hsd1.ga.comcast.net)
[15:42:28] *** Quits: useretail (~useretail@185.132.19.151) (Quit: Leaving)
[15:42:42] <XJ8> I like how simple C is. It's less of a headache over using OOP languages like C# or C++. But can I still get some concepts like encapsulation or inheritance with regular C?
[15:43:59] *** Quits: plastico (~plastico@neomutt/plastico) (Ping timeout: 250 seconds)
[15:44:25] <earnestly> lol
[15:46:16] *** Joins: extern (~archer@141.226.60.134)
[15:49:51] <XJ8> Seems I can use a struct to get a very basic simulation of a class. Good enough I guess.
[15:53:07] <shiroyasha> If you're going to try to emulate other languages using C code, maybe you want to use those other languages you're trying to emulate.
[15:53:10] <shiroyasha> Something to keep in mind.
[15:53:49] <shiroyasha> And of course that advice doesn't apply only to C.
[15:54:07] <LangerJan> XJ8: Check out Opaque Pointers: https://en.wikipedia.org/wiki/Opaque_pointer#C This helps hiding implementation details to API users
[15:55:04] <LangerJan> XJ8: Inheritance is not supported on language level, but with a *lot* of effort it could be done
[15:55:39] <XJ8> I guess what I'm trying to say is that I want to make my program less of a mess as it gets larger and more complex. OOP seems to be good at that, that's why I want to simulate basic concepts of it in regular C because I honestly like C.
[15:56:56] <slidercrank> I remember TASM (Turbo Assembler by BORLAND) had some support for OOP
[15:58:39] <XJ8> I like the DOS turbo C/Turbo C++ compilers. That old DOS blue was wonderful to look at.
[15:59:34] <slidercrank> Borland Pascal was N🧊 too :)
[16:00:12] *** Quits: hexteex (~hexteex@gateway/tor-sasl/hexteex) (Remote host closed the connection)
[16:00:34] <slidercrank> also Pascal supports OOP (Pascal with Objects)
[16:00:46] <floatcomplex> XJ8: C is simple *because* it doesn't have encapsulation and inheritance. encapsulation as a goal of its own is just work that makes more work (but do learn about opaque pointers, for when they are appropriate). inheritance is an absolute evil
[16:01:20] <XJ8> Advice then on making larger programs less spaghetti and more clean code?
[16:02:01] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:a5b1:905d:8e21:4dd9)
[16:02:26] *** Joins: hexteex (~hexteex@gateway/tor-sasl/hexteex)
[16:04:01] <floatcomplex> it depends a lot on what the code does. follow the generator pattern, for example, if it's at all appropriate. that allows you some "encapsulation" that provides actual functionality rather than just being a philosophy
[16:04:32] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:a5b1:905d:8e21:4dd9) (Ping timeout: 240 seconds)
[16:04:33] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[16:04:34] <floatcomplex> look up structured concurrency
[16:04:41] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:a5b1:905d:8e21:4dd9) (Read error: Connection reset by peer)
[16:05:26] *** Joins: freakazoid343 (~matt@2603-9000-cf0f-80e3-a5b1-905d-8e21-4dd9.inf6.spectrum.com)
[16:06:03] *** Quits: nun (~nun@178.115.236.156.static.drei.at) (Ping timeout: 256 seconds)
[16:06:36] <fizzie> "Composition over inheritance" is a pretty common principle as well in more glOOPy languages too, and of course composition works just fine in C.
[16:09:18] <earnestly> I appreciated the 'OOP is an expensive disaster' article because it tackled the core issue of logical argument which is definition of terms (often ignored in favour of collecting fallacies like pokemon)
[16:09:38] <floatcomplex> XJ8: if your program flow could be modelled as a set of discrete block diagram elements arranged into a pipeline with one-way dataflow through them (and a surprising number of things can, like game engines) then use the generator pattern with a series of nested generators. it's kind of a special case of the actor model
[16:10:31] <floatcomplex> the one-way property vastly simplifies testing and reasoning about the system
[16:11:30] <floatcomplex> and that way each block diagram element has its own scope that can persist for its whole lifetime, which is what you'd use objects with private members for in other languages
[16:12:26] <DarkUranium> earnestly: that's a good article, and I've had the same issue with proponents of OOP.
[16:12:46] <DarkUranium> It's always a "you're not doing it right!" rather than a "maybe there *is* a problem with the concept after all"
[16:13:29] *** Joins: chomwitt (~chomwitt@athedsl-32204.home.otenet.gr)
[16:13:34] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[16:13:39] <XJ8> Proponents of OOP say C is very difficult to write large programs in because with procedural code, you apparently have to modify every single function to change something rather than just modify the class.
[16:13:49] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[16:13:57] <DarkUranium> I remember a very good talk on this topic (forgot the title, sorry). The author argued (successfully, IMO) that the core issue with OOP is that an "object" in OOP doesn't have a clear line to draw. OOP can work (I guess) when the concepts are clear-cut, but programming tends to work more in the abstract.
[16:14:27] <DarkUranium> Even OOP works more in the abstract --- consider all the singleton, factory, manager, visitor, and similar objects.
[16:14:45] <DarkUranium> And therein lies the problem. No two programmers can agree on where to draw the lines (even 1 programmer and his past self!).
[16:15:00] <floatcomplex> ^
[16:15:13] <DarkUranium> Whereas if you take functional (as a counter-example): unless you're making an interpreter, you're going to have functions and you're going to have data.
[16:15:25] <DarkUranium> And there isn't really a situation where data is maybe a function, and function is maybe data [*]
[16:15:36] <DarkUranium> [* a function is technically also data if you're doing some sort of runtime loading/linking, but y'know]
[16:16:20] <floatcomplex> i guess i think of my pipeline block diagram elements as being more function-like than object-like
[16:16:29] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[16:17:09] <XJ8> I've gotten a ton of advice the past 30 minutes or so. Any particular books I should read to know more about writing good C code for larger programs?
[16:17:15] *** Quits: krissmaster (~kriss@213.239.83.90) (Remote host closed the connection)
[16:18:16] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[16:18:36] *** Joins: thing (~thing@user/thing)
[16:19:15] <DarkUranium> XJ8: I've never read a programming book in my life, so can't really help you there.
[16:19:21] <floatcomplex> DarkUranium: can you clarify "unless you're making an interpreter" ?
[16:19:22] <DarkUranium> I can offer some general advice, but it would depend on the size of the project.
[16:19:36] *** Joins: krissmaster (~kriss@213.239.83.90)
[16:19:46] <DarkUranium> floatcomplex: if you're making an interpreter, especially in a dynamic host language (with eval), then the line between "data" and "function" gets a bit muddy.
[16:19:57] <DarkUranium> That is all.
[16:19:59] <XJ8> I'm considering make a few games as a hobby, not an engine or at least I don't intend it to be an engine, but it's very possible the program will get large and complex at one point.
[16:20:07] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[16:20:08] <DarkUranium> XJ8: I've done gamedev in C :)
[16:20:16] <DarkUranium> Still do, though slowly (for the lack of time)
[16:20:29] <XJ8> I've also considered C++ and C# and python as well, but also want to dabble with C too.
[16:20:40] <floatcomplex> XJ8: then the generator pattern thibg definitely applies
[16:20:55] <DarkUranium> I honestly wouldn't do gamedev in Python, unless it's a really simple game.
[16:21:23] <XJ8> Some engines like godot have languages very similar to python. GDScript for example is very python-ish, but isn't exactly python.
[16:21:36] <DarkUranium> Aye. Godot seems like a *really* good engine, but I'm not a fan of its OOPyness.
[16:21:37] <floatcomplex> XJ8: go find the talk about the naughty dog engine fibers and watch the whole thing
[16:21:45] <DarkUranium> Basically, Godot the engine seems good. Godot the API is meh.,
[16:21:47] <DarkUranium> s/,$//
[16:22:01] <floatcomplex> they use all different nomenclature that we've used here but it's all valuable
[16:22:14] <XJ8> Doesn't naughty dog use lisp?
[16:22:32] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 240 seconds)
[16:22:37] <markand> I do gamedev in pure C as well
[16:22:39] <floatcomplex> idk, if so that's not what this is about
[16:22:49] <floatcomplex> watch the talk
[16:22:52] <markand> I do almost everything in C 
[16:22:58] *** Quits: extern (~archer@141.226.60.134) (Quit: WeeChat 3.3)
[16:23:02] *** Quits: chomwitt (~chomwitt@athedsl-32204.home.otenet.gr) (Ping timeout: 240 seconds)
[16:23:16] <XJ8> I'll put it on my TODO list to check out that naughty dog talk.
[16:23:34] <markand> I use Javascript as my game data though 
[16:23:41] <markand> (with Duktape, very nice library btw)
[16:23:58] <DarkUranium> markand: I've recently discovered QuickJS, which seems like a better JS engine (albeit with a worse API)
[16:24:01] <DarkUranium> Basically, better JS, worse C.
[16:24:30] <DarkUranium> markand: I didn't know you did gamedev in C.
[16:24:33] <markand> and no docs
[16:24:46] <DarkUranium> Ah, yes. Documentation is quite bad.
[16:24:56] *** Quits: krissmaster (~kriss@213.239.83.90) (Remote host closed the connection)
[16:25:09] <markand> I do: https://github.com/markand/molko 
[16:25:10] <candide> Title of markand's link: GitHub - markand/molko: Official mirror of http://hg.malikania.fr/molko, updated every hour.
[16:25:40] <DarkUranium> Nice. I'm working towards a 3D project in C. Will be starting the engine soon.
[16:25:48] <XJ8> What kind of games are you into markand? Role play? Shooters?
[16:25:48] <markand> I need to find a NLS library that isn't gettext though
[16:25:53] <DarkUranium> (spent like 3 years looking for an engine meeting my requirements, but couldn't find any)
[16:26:11] <markand> XJ8, 2D RPG in the spirit of <= Final Fantasy 6
[16:26:25] <XJ8> Awesome man. I love FFVI.
[16:26:47] <DarkUranium> markand: long ago, I've worked on a drop-in replacement for gettext. It was marginally slower (by necessity: gettext's file format documentation documented an acceleration structure as "look at the sources", and I couldn't do that for clean-room reasons)
[16:26:57] <DarkUranium> If you'd like, I could try to clean it up and *finally* publish it.
[16:27:00] <markand> in fact I'm trying to do something similar to RPG Maker (which was literally the thing that made me dive into programming, back in 2002)
[16:27:11] <XJ8> One of these days I'll make a simple 3D game in a custom made engine using only OpenGL or Vulkan.
[16:27:24] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[16:27:28] <DarkUranium> For me, it was Game Maker (which I've grown to dislike quite quickly), back in ... 2001?
[16:27:31] <markand> vulkan is on my todo list as well, but need to master maths before :P
[16:27:32] <DarkUranium> No. 2000.
[16:27:54] *** Joins: kish` (~aqua@user/aqua)
[16:28:11] <DarkUranium> Well, if any of you two would ever be interested in a 3D project, let me know :P
[16:28:14] <markand> DarkUranium, I'd be glad to work with you for the gettext alternative. I've seen tinygettext but it's C++
[16:28:17] <DarkUranium> Could 100% use help with the engine. Esp. Vulkan.
[16:28:21] *** Quits: Zenton (~user@user/zenton) (Ping timeout: 265 seconds)
[16:28:22] <DarkUranium> markand: mine is C...89, I think?
[16:28:23] <DarkUranium> Might be C99.
[16:28:37] <DarkUranium> If I clean it up, I'll definitely do C99, not C89.
[16:28:54] <XJ8> I really should take more advantage of CLion. The pointer error checker from what I've heard is excellent.
[16:29:09] <DarkUranium> I've been considering buying it, since I've yet to find an IDE I really like.
[16:29:16] <DarkUranium> It's either that, or *writing* an IDE, and uhm. Yeah :P
[16:29:25] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:29:46] <XJ8> You can actually use CLion + another IDE of your choice as you wish to. Opening a file in emacs while CLion is open is a snap.
[16:31:58] <DarkUranium> markand: Well, if you are actually interested, then yeah, I might clean it up.
[16:32:03] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[16:32:04] <DarkUranium> Or honestly, just rewrite. It's only about 1k lines anyway.
[16:33:22] *** Joins: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:e9e3:4a3f:7e1:6f10)
[16:33:22] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[16:33:24] <XJ8> I can't speak for the quality of cppcheck and other open source C/C++ linters, but it seems a proprietary program is best for most intensive search for potential bugs or overflows or pointer errors.
[16:33:42] <DarkUranium> clang has a ton of great linting tools
[16:33:46] <DarkUranium> Both static and dynamic checking.
[16:34:03] *** Parts: thing (~thing@user/thing) (WeeChat 3.3)
[16:34:05] <XJ8> Cool. I'll try both clang and CLion and see how they compare.
[16:34:15] *** Quits: Thedarkb1-Deskto (~Thedarkb@2001:bb6:b403:e042:e9e3:4a3f:7e1:6f10) (Read error: Connection reset by peer)
[16:34:23] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 256 seconds)
[16:34:52] <DarkUranium> clang is a compiler
[16:35:02] <XJ8> Yes, I know that clang is a compiler.
[16:35:16] <XJ8> I was referring to the linting tools clang offers.
[16:35:17] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Remote host closed the connection)
[16:35:30] <DarkUranium> Examples: https://clang-analyzer.llvm.org/ https://clang.llvm.org/extra/clang-tidy/ https://klee.github.io/
[16:35:32] <candide> Title of DarkUranium's link: Clang-Tidy — Extra Clang Tools 14 documentation
[16:35:36] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[16:37:00] <XJ8> I'll still use CLion for a second check even if I use clang by default.
[16:37:26] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[16:38:00] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[16:39:13] *** Joins: NEYi (~NEYi@109.251.216.38)
[16:39:33] *** Joins: nyah (~nyah@94.6.71.219)
[16:39:34] *** Joins: seninha (~seninha@user/seninha)
[16:40:47] *** Joins: chomwitt (~chomwitt@2a02:587:dc0f:7c00:12c3:7bff:fe6d:d374)
[16:41:29] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[16:42:39] *** Joins: BCMM (~BCMM@user/bcmm)
[16:43:20] *** Joins: bindu (~bindu@user/bindu)
[16:45:03] *** Joins: cart_man (~rynot@host-78-144-127-199.as13285.net)
[16:45:24] *** Joins: plastico (~plastico@neomutt/plastico)
[16:46:24] *** Joins: constxd (~brad@192.75.101.164)
[16:47:07] *** Joins: wnbeser (~wnbeser@91-154-216-100.elisa-laajakaista.fi)
[16:47:27] *** Quits: wnbeser (~wnbeser@91-154-216-100.elisa-laajakaista.fi) (Client Quit)
[16:48:57] <markand> clang is love
[16:53:34] *** Quits: XJ8 (~XJ8@c-24-30-27-91.hsd1.ga.comcast.net) (Quit: Client closed)
[16:54:02] *** Quits: Linux77 (~7Linux7@186.233.178.42) (Ping timeout: 240 seconds)
[16:55:04] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[16:56:21] *** Quits: drew (~drew@user/drew) (Ping timeout: 250 seconds)
[16:58:16] *** Joins: superboot (~agentgasm@user/superboot)
[16:59:52] <slidercrank> markand, then why does clang look like dang? depending on the font you use it can be hard to differentiate cl and d
[17:00:49] *** Quits: serbest (~serbest@user/serbest) (Quit: leaving)
[17:03:45] *** Joins: krissmaster (~kriss@213.239.83.90)
[17:04:48] *** Joins: wwilly (~wwilly@fw-tnat-cam1.arm.com)
[17:05:34] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[17:05:53] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 250 seconds)
[17:06:06] *** Joins: AsenMx (~AsenMx@user/asenmx)
[17:06:30] <constxd> imagine not using PragmataPro
[17:06:35] <constxd> couldn't be me
[17:12:34] *** Quits: llh (~llh@user/llh) (Quit: :::: ( UPP ) ::::)
[17:13:59] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[17:16:22] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[17:17:08] *** Quits: chomwitt (~chomwitt@2a02:587:dc0f:7c00:12c3:7bff:fe6d:d374) (Ping timeout: 246 seconds)
[17:19:00] *** Joins: extern (~archer@141.226.60.134)
[17:20:25] *** Joins: brad_mssw (~bhouse@2601:344:4100:b490:a95f:737:9081:de3c)
[17:23:03] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[17:23:13] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 250 seconds)
[17:23:29] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 264 seconds)
[17:24:20] *** Quits: brad_mssw (~bhouse@2601:344:4100:b490:a95f:737:9081:de3c) (Client Quit)
[17:25:20] *** Joins: brad_mssw (~bhouse@2601:344:4100:b490:f472:b6fd:e7c6:8c89)
[17:25:54] <extern> hi i have this directory tree.. maybe my entire view is wrong but what im trying to do is to manage both insertion_sort and merge_sort with a single Makefile
[17:27:05] <extern> https://paste.ofcode.org/b7LdpuM92AuBkXxFyGKXDd
[17:28:02] *** Quits: Teckla (~Teckla@user/teckla) (Quit: leaving)
[17:28:27] <extern> i want both of them to use arrays.c\h but all other *.c files should be searched only in the corresponding directory
[17:28:29] <extern> with a single Makefile
[17:31:08] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:31:17] *** Joins: drew (~drew@user/drew)
[17:32:04] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Quit: Leaving)
[17:32:27] *** Joins: Teckla (~Teckla@user/teckla)
[17:33:38] *** Joins: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[17:33:58] <extern> even with two Makefiles for the dirs ... i still need to include the library arrays in every directory and i want to avoid it
[17:37:57] *** Joins: ARoxdale (~ARoxdale@84.203.31.229)
[17:39:22] *** Quits: extern (~archer@141.226.60.134) (Quit: WeeChat 3.3)
[17:39:24] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[17:39:32] *** Quits: rando25892 (~user@user/rando25892) (Read error: Connection reset by peer)
[17:43:13] *** Joins: drew` (~drew@user/drew)
[17:43:53] *** Quits: drew (~drew@user/drew) (Ping timeout: 264 seconds)
[17:44:26] *** drew` is now known as drew
[17:46:08] *** Joins: XJ8 (~XJ8@c-24-30-27-91.hsd1.ga.comcast.net)
[17:47:15] *** Joins: chomwitt (~chomwitt@athedsl-32204.home.otenet.gr)
[17:49:05] *** Joins: drew` (~drew@user/drew)
[17:49:39] *** Quits: drew (~drew@user/drew) (Ping timeout: 250 seconds)
[17:50:23] *** drew` is now known as drew
[17:50:45] <fizzie> Well, then... just put the shared code into a third directory, and link it in when you're linking the programs that need it. Make just runs whatever you tell it to run, so you can choose whether you want to turn it into an actual library (as in, bundle it into an .a file or even an .so, and use -I flags so the other code doesn't need to know where the headers are) or just directly link in the relevant
[17:50:46] <fizzie> object files from whatever directories.
[17:51:17] *** Joins: darklands (~darklands@69.43.66.31)
[17:51:45] *** Quits: darklands (~darklands@69.43.66.31) (Remote host closed the connection)
[17:52:19] <catern> system-specific question, forgive me: how does GCC or any other compiler detect integer division by zero and raise SIGFPE? does integer division get compiled into some multi-instruction section which checks if the divisor is 0?
[17:53:53] *** Joins: arinov (~arinov@213.194.126.155)
[17:54:02] <supakeen> It can be a CPU flag that gets trapped and then raised as a signal in your program.
[17:54:59] <fizzie> System-specific questions can only get system-specific answers if you specify a system. ;)
[17:56:13] <catern> on Linux x86_64 :)
[17:56:33] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[17:56:36] <XJ8> What distro?
[17:56:46] <catern> lol
[17:57:19] <fizzie> On x86-64 there's a CPU exception for division by zero the operating system gets to handle.
[17:57:23] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 246 seconds)
[17:57:26] *** Quits: XJ8 (~XJ8@c-24-30-27-91.hsd1.ga.comcast.net) (Quit: Client closed)
[17:57:32] <catern> so here's the thing that I'm confused by, https://gcc.gnu.org/bugzilla/show_bug.cgi?id=31798 mentions that GCC has some __div0 function which uses the raise system call
[17:57:34] <candide> Title of catern's link: 31798 – lib1funcs.asm:1000: undefined reference to `raise'
[17:57:52] <catern> but... I assumed SIGFPEs were generated in the kernel, so what's the origin of this?
[17:58:14] <catern> e.g. https://gcc.gnu.org/bugzilla/show_bug.cgi?id=31798#c1
[17:58:16] <candide> Title of catern's link: 31798 – lib1funcs.asm:1000: undefined reference to `raise'
[17:58:29] <fizzie> CPU exceptions also get reported to the kernel.
[17:58:33] <catern> >The __div0 function is called by the division routines when an attempt to divide by zero is detected.  On a linux system, it is expected that this will cause SIGFPE to be raise(3)d, so the default implementation of this call does precisely this.
[17:58:51] <catern> fizzie: yes, that's what I thought was happening
[17:59:10] <catern> but this implies it's somehow happening in userspace "when an attempt to divide by zero is detected"
[18:00:02] <fizzie> From the first comment: "-- arm softfloat --"
[18:00:25] <fizzie> Meaning a target where software routines are used to do floating-point maths.
[18:00:39] <catern> o
[18:00:43] <catern> lol okay I see
[18:02:16] <catern> I was started on this path by https://github.com/torvalds/linux/blob/master/tools/include/nolibc/nolibc.h#L2519 but now I see that there's no reason that has to be for all architectures
[18:02:20] <catern> fizzie: thanks!
[18:03:26] *** Joins: Nistar (Nistar@gateway/vpn/protonvpn/nistar)
[18:06:03] *** Joins: engest (~engest@50.53.244.183)
[18:06:05] <fizzie> GCC also supports the __int128 type, and I imagine full-fat 128x128->128 division will be implemented in software on just about any architecture.
[18:08:20] <fizzie> ,cc -paste __int128 f(__int128 a, __int128 b) { return a/b; } gdb("disas f");
[18:08:24] <candide> fizzie: https://0x0.st/-537.txt
[18:09:06] <fizzie> Well, no direct call to __div0, but quite possibly there's one from __divti3.
[18:09:25] <catern> Neat
[18:10:18] <catern> also, wow, candide is fancy - I like that gdb function
[18:10:30] <fizzie> Most of that code is probably just overhead from -fsanitize=undefined TBH.
[18:12:37] *** Joins: Mach (~Mach@86.121.208.210)
[18:12:41] *** Quits: ARoxdale (~ARoxdale@84.203.31.229) (Ping timeout: 264 seconds)
[18:16:40] *** Joins: rkta_ (~kt@p200300ef4f04c2004a4520fffe0e3931.dip0.t-ipconnect.de)
[18:17:44] *** Joins: Inline (~Inline@2a02:908:1252:7a80:ed70:ee41:8efa:21d0)
[18:19:07] *** Joins: Guest36 (~textual@net-93-146-142-35.cust.vodafonedsl.it)
[18:19:33] *** Quits: chomwitt (~chomwitt@athedsl-32204.home.otenet.gr) (Ping timeout: 250 seconds)
[18:25:45] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:25:45] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:25:45] *** Joins: wroathe (~wroathe@user/wroathe)
[18:27:37] <pragma-> ,cc -paste -std=c11 __int128 f(__int128 a, __int128 b) { return a/b; } gdb("disas f"); // for shits and giggles, let's see what it's like without -fsanitize=undefined
[18:27:41] <candide> pragma-: https://0x0.st/-5Yi.txt
[18:30:06] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[18:31:35] *** Joins: tyzoid (~tyzoid@2607:5600:dc::2)
[18:35:16] *** Joins: Zenton (~user@user/zenton)
[18:35:32] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[18:36:37] *** Joins: Enitin (~Enitin@82.102.22.86)
[18:37:45] *** Quits: V-T60 (~v@91.203.24.166) (Ping timeout: 250 seconds)
[18:39:10] *** Quits: tusko (~yeurt@copyfree/advocate/tusko) (Remote host closed the connection)
[18:40:20] *** Quits: gce108_ (~gce@64-250-5-223.gvec.net) (Quit: Leaving)
[18:41:08] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 246 seconds)
[18:42:59] *** Joins: V-T60 (~v@91.203.24.166)
[18:46:11] *** Joins: tusko (~yeurt@copyfree/advocate/tusko)
[18:47:16] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[18:48:11] <catern> much smaller
[18:52:43] *** Joins: zmt00 (~zmt00@user/zmt00)
[18:53:11] *** Joins: chomwitt (~chomwitt@athedsl-32204.home.otenet.gr)
[18:54:41] *** Joins: dld (~dld@73.61.8.213)
[18:55:50] *** Quits: BCMM (~BCMM@user/bcmm) (Ping timeout: 246 seconds)
[18:57:44] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[18:58:11] *** Joins: re101-mayfly-27 (~re101-may@2620:132:b042:0:3cd5:8b91:73c7:ffb0)
[18:58:19] <re101-mayfly-27> can someone help me with C?
[18:58:29] *** Quits: re101-mayfly-27 (~re101-may@2620:132:b042:0:3cd5:8b91:73c7:ffb0) (Client Quit)
[18:59:07] <sham1> And they left
[19:00:20] <tyzoid> lol
[19:01:33] *** Joins: Klinda (~superleag@user/klinda)
[19:01:37] *** Joins: Macuser (~Macuser@216.30.159.201)
[19:02:21] *** Quits: tusko (~yeurt@copyfree/advocate/tusko) (Ping timeout: 276 seconds)
[19:02:23] *** Joins: manjaroi3 (~manjaro-i@125.131.131.26)
[19:02:55] *** Joins: tusko (~yeurt@copyfree/advocate/tusko)
[19:03:58] *** Joins: rgrinberg (~textual@200.5.63.76)
[19:07:14] *** Quits: johnnyreb (~tth@user/johnnyreb) (Ping timeout: 260 seconds)
[19:07:47] <DarkUranium> 11 seconds is one of the lowest times I've seen.
[19:07:55] <DarkUranium> They usually hang around for at least 2 minutes.
[19:11:24] <fizzie> Well, they had "mayfly" as part of their name.
[19:11:33] <fizzie> Assuming a factor of 1 day -> 80 years or so, in mayfly terms that 11 seconds was over three days of patiently waiting.
[19:12:42] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Read error: Connection reset by peer)
[19:13:50] *** Quits: hexteex (~hexteex@gateway/tor-sasl/hexteex) (Remote host closed the connection)
[19:15:05] *** Joins: llh (~llh@user/llh)
[19:21:14] *** Joins: JMcDon (~JMcDon@63.119.110.162)
[19:22:22] *** Joins: pucara (~i@181.92.84.24)
[19:28:44] *** Quits: Nistar (Nistar@gateway/vpn/protonvpn/nistar) (Ping timeout: 246 seconds)
[19:30:32] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[19:33:02] *** Quits: X-Scale (~ARM@46.50.3.203) (Ping timeout: 240 seconds)
[19:33:02] *** Quits: alch (~alch@151.34.208.191) (Read error: Connection reset by peer)
[19:33:37] *** Joins: hexteex (~hexteex@gateway/tor-sasl/hexteex)
[19:33:43] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[19:34:31] *** X-Scale` is now known as X-Scale
[19:35:06] *** Quits: khoa (~khoa@user/khoa) (Quit: leaving)
[19:35:11] *** Joins: kuber (~kuber@97-126-3-32.tukw.qwest.net)
[19:36:31] *** Quits: JMcDon (~JMcDon@63.119.110.162) (Quit: Client closed)
[19:37:04] *** Joins: alch (~alch@151.68.133.3)
[19:37:17] *** Quits: pucara (~i@181.92.84.24) (Quit: Lost terminal)
[19:38:43] *** Joins: Guest42 (~Guest42@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[19:39:02] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[19:40:02] *** Quits: neutral (~user@user/neutral) (Quit: ( need to get ma dik wet))
[19:42:37] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:44:05] *** Joins: dohtem (uid524096@user/dohtem)
[19:45:01] *** Quits: gproto23 (~gproto23@user/gproto23) (Read error: Connection reset by peer)
[19:45:41] *** Joins: gproto23 (~gproto23@user/gproto23)
[19:45:41] *** Joins: rgrinberg (~textual@200.5.63.76)
[19:47:47] *** Joins: go4godvin (~go4godvin@user/go4godvin)
[19:55:19] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 250 seconds)
[19:57:48] *** Joins: BCMM (~BCMM@user/bcmm)
[19:58:02] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[19:58:37] *** Joins: Enitin (~Enitin@82.102.22.84)
[20:01:19] *** Quits: msk (~msk@185.124.240.174) (Remote host closed the connection)
[20:01:36] *** Joins: msk (~msk@185.124.240.174)
[20:03:51] *** Quits: bliminse (~bliminse@host86-185-253-43.range86-185.btcentralplus.com) (Quit: leaving)
[20:04:05] *** Quits: rkta (~kt@62.113.246.111) (Quit: leaving)
[20:04:38] *** Joins: rkta (~kt@62.113.246.111)
[20:06:09] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[20:06:09] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[20:06:09] *** Joins: wroathe (~wroathe@user/wroathe)
[20:08:29] *** Joins: bliminse (~bliminse@host86-185-253-43.range86-185.btcentralplus.com)
[20:10:29] *** Joins: crankslider (~slidercra@user/slidercrank)
[20:11:02] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[20:12:15] *** Joins: freakazoid12345 (~matt@2603-9000-cf0f-80e3-381f-5f31-286f-e038.inf6.spectrum.com)
[20:12:33] *** Quits: tusko (~yeurt@copyfree/advocate/tusko) (Ping timeout: 276 seconds)
[20:13:49] *** Joins: tusko (~yeurt@copyfree/advocate/tusko)
[20:14:56] <zwr> No matter how many times I wake up the next day and witness the results of writing C while sleepy, I keep doing it
[20:14:57] *** Joins: darklands (~darklands@69.43.65.116)
[20:15:15] *** Quits: freakazoid343 (~matt@2603-9000-cf0f-80e3-a5b1-905d-8e21-4dd9.inf6.spectrum.com) (Ping timeout: 250 seconds)
[20:16:01] <tusko> I can't even bring myself to write c until after midnight
[20:17:09] <tyzoid> lol
[20:17:32] <tyzoid> And here I am getting my bitmask wrong, trying to figure out why my program crashes
[20:17:47] <tyzoid> had &= 0xF8 instead of &= 0x07
[20:19:50] *** Quits: manjaroi3 (~manjaro-i@125.131.131.26) (Ping timeout: 246 seconds)
[20:21:45] *** Quits: darklands (~darklands@69.43.65.116) (Ping timeout: 250 seconds)
[20:23:13] *** Joins: pulse (~pulse@user/pulse)
[20:23:41] *** Joins: Akuli (~Akuli@213.216.211.233)
[20:24:13] *** Quits: tusko (~yeurt@copyfree/advocate/tusko) (Quit: (  *  y  *  ))
[20:24:57] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[20:25:20] *** Joins: jokleinn (~jokleinn@user/jokleinn)
[20:25:38] *** Quits: janemba (~janemba@94.204.254.193) (Ping timeout: 260 seconds)
[20:28:05] *** Joins: tusko (~yeurt@copyfree/advocate/tusko)
[20:29:29] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 264 seconds)
[20:30:05] *** Quits: Inline (~Inline@2a02:908:1252:7a80:ed70:ee41:8efa:21d0) (Ping timeout: 264 seconds)
[20:31:21] <floatcomplex> nitrix: i'm working on a system that heavily uses the actor model at the high level, but does not enforce any kind of one-way data flow, like a series of generator functions would, and it's completely untestable
[20:31:51] <floatcomplex> so yeah the actor model is a superset of structured concurrency but it's not like a terribly useful one if you don't impose some additional discipline
[20:31:52] *** Joins: navidr (uid112413@id-112413.uxbridge.irccloud.com)
[20:31:54] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:32:29] *** Quits: chomwitt (~chomwitt@athedsl-32204.home.otenet.gr) (Ping timeout: 264 seconds)
[20:32:40] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:33:01] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[20:33:32] *** Quits: jokleinn (~jokleinn@user/jokleinn) (Quit: WeeChat 3.3)
[20:33:40] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:34:23] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:36:24] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[20:36:25] *** Quits: engest (~engest@50.53.244.183) (Quit: Leaving)
[20:38:37] *** Joins: chomwitt (~chomwitt@2a02:587:dc0f:7c00:12c3:7bff:fe6d:d374)
[20:43:46] *** Quits: V-T60 (~v@91.203.24.166) (Quit: Leaving.)
[20:44:02] *** Quits: Guest36 (~textual@net-93-146-142-35.cust.vodafonedsl.it) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:45:46] *** Joins: rgrinberg (~textual@200.5.63.76)
[20:52:59] *** Joins: magla (~gelignite@55d4ec6e.access.ecotel.net)
[20:53:17] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[20:53:48] *** Quits: soul-d (~uknown@user/soul-d) (Read error: Connection reset by peer)
[20:56:53] *** Quits: kuber (~kuber@97-126-3-32.tukw.qwest.net) (Quit: leaving)
[21:02:22] *** Quits: inomoz (~inomoz@176.59.125.26) (Quit: WeeChat 3.3)
[21:04:05] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[21:07:09] *** Joins: soul-d (~uknown@user/soul-d)
[21:10:10] *** Joins: arinov (~arinov@176.89.7.184)
[21:10:14] *** Quits: cart_man (~rynot@host-78-144-127-199.as13285.net) (Ping timeout: 246 seconds)
[21:11:35] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[21:12:44] *** Joins: X-Scale` (~ARM@31.22.162.107)
[21:13:52] *** Quits: simon323 (~simon323@2409:8a34:46c:5830:f078:9382:f2b0:e9e6) (Quit: simon323)
[21:14:53] *** Quits: X-Scale (~ARM@165.201.137.78.rev.vodafone.pt) (Ping timeout: 256 seconds)
[21:17:33] *** X-Scale` is now known as X-Scale
[21:20:00] *** Joins: Justin_T (~Justin@user/justin-t/x-2449983)
[21:23:32] *** Joins: V-T60 (~v@91.203.24.166)
[21:25:53] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:bcb4:bb44:2d0f:bd9c)
[21:25:53] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:bcb4:bb44:2d0f:bd9c) (Changing host)
[21:25:53] *** Joins: skapata (~Skapata@user/skapata)
[21:30:36] *** Joins: nvmd (~nvmd@user/nvmd)
[21:31:07] *** Quits: rkta_ (~kt@p200300ef4f04c2004a4520fffe0e3931.dip0.t-ipconnect.de) (Quit: nyaa~)
[21:31:14] *** Joins: dhmohrom^ (~dhmohrom@h50.174.139.63.static.ip.windstream.net)
[21:32:18] *** Quits: nvmd (~nvmd@user/nvmd) (Client Quit)
[21:32:32] *** Joins: nvmd (~nvmd@user/nvmd)
[21:39:02] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[21:39:53] *** Joins: Enitin (~Enitin@82.102.22.84)
[21:43:46] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:46:15] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 250 seconds)
[21:46:59] *** Joins: Enitin (~Enitin@82.102.22.86)
[21:47:48] *** Joins: derjanni (~textual@p5ddaffbc.dip0.t-ipconnect.de)
[21:48:22] *** Joins: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com)
[21:54:00] *** Quits: ko (~i.am@user/marlboro) (Quit: I come down here for a fat woman and that's what I'm havin.)
[21:57:16] *** Quits: skapata (~Skapata@user/skapata) (Quit: Ĝis.)
[22:00:07] *** Joins: Guest41 (~Guest41@79.106.179.149)
[22:00:13] <Guest41> hi
[22:00:57] *** Quits: Guest41 (~Guest41@79.106.179.149) (Quit: Client closed)
[22:08:45] *** Joins: ARoxdale (~ARoxdale@84.203.31.229)
[22:11:11] *** Quits: freakazoid12345 (~matt@2603-9000-cf0f-80e3-381f-5f31-286f-e038.inf6.spectrum.com) (Read error: Connection reset by peer)
[22:11:49] *** Quits: wwilly (~wwilly@fw-tnat-cam1.arm.com) (Ping timeout: 250 seconds)
[22:11:56] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:381f:5f31:286f:e038)
[22:12:13] *** Joins: servytor (uid525486@id-525486.hampstead.irccloud.com)
[22:12:28] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[22:13:17] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 264 seconds)
[22:24:33] *** Joins: immibis (~hexchat@62.156.144.218)
[22:25:47] *** Joins: arconte[m] (~arcontema@2001:470:69fc:105::1:2fe4)
[22:29:09] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[22:29:16] *** Joins: cthi (~cthi@097-082-138-151.res.spectrum.com)
[22:30:32] *** Joins: mahmutov (~mahmutov@37.155.47.58)
[22:31:33] *** Quits: starman_jr (sid265462@id-265462.hampstead.irccloud.com) ()
[22:33:18] *** Joins: inomoz (~inomoz@176.59.125.26)
[22:37:15] *** Quits: magla (~gelignite@55d4ec6e.access.ecotel.net) (Quit: Stay safe!)
[22:38:52] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[22:40:41] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[22:40:51] *** Joins: Roughy (~mdaw45ns@user/roughy)
[22:41:21] *** Quits: lkronnus (~kron@179097066103.provale.com.br) (Quit: Konversation terminated!)
[22:41:42] *** Joins: lkronnus (~kron@179097066103.provale.com.br)
[22:43:01] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[22:43:17] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[22:45:07] *** Quits: Haxxa (~Haxxa@122.199.46.64) (Quit: Haxxa flies away.)
[22:45:34] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[22:46:04] *** Joins: mrig (~mrig@user/mrig)
[22:47:26] *** Joins: Haxxa (~Haxxa@122.199.46.64)
[22:50:49] *** Joins: gproto23 (~gproto23@user/gproto23)
[22:50:56] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Ping timeout: 260 seconds)
[22:51:47] *** Quits: arinov (~arinov@176.89.7.184) (Ping timeout: 256 seconds)
[22:56:08] *** Joins: Iarfen (~quassel@181.43.59.114)
[22:56:17] <Iarfen> hi!
[22:56:32] *** Parts: Roughy (~mdaw45ns@user/roughy) ()
[22:56:37] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:56:40] <Iarfen> how the compiler does to create assembly code for each microcontroller?
[22:56:46] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Ping timeout: 268 seconds)
[22:57:05] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[22:58:38] *** Joins: Guest36 (~textual@net-93-146-151-115.cust.vodafonedsl.it)
[22:58:44] *** Quits: V-T60 (~v@91.203.24.166) (Ping timeout: 246 seconds)
[23:00:30] *** Quits: Guest36 (~textual@net-93-146-151-115.cust.vodafonedsl.it) (Client Quit)
[23:00:54] <nomagno> Larfen: implementation defined. If you mean how a compiler generates assembly for a given architecture, the simplest way is to parse the code into tokens, then apply "simple" rules to turn the basic expressions C contains into what is judged to be the best assembly equivalent
[23:01:45] <nomagno> For instance, subroutines in most assembly languages are pretty close to functions. So the compiler can use them as a basic starting point
[23:03:30] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[23:05:00] *** Quits: riksteri (riksteri@gateway/vpn/airvpn/riksteri) (Quit: riksteri)
[23:06:35] *** Joins: Hax0r (~Hax0r@128.127.222.243)
[23:07:13] *** Quits: dhmohrom^ (~dhmohrom@h50.174.139.63.static.ip.windstream.net) (Remote host closed the connection)
[23:08:45] *** Joins: rgrinberg (~textual@190.113.102.153)
[23:09:08] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[23:11:30] *** Quits: navidr (uid112413@id-112413.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[23:12:09] *** Joins: strajder (~strajder@user/strajder)
[23:15:45] *** Joins: dsrt^ (~dsrt@h50.174.139.63.static.ip.windstream.net)
[23:19:53] *** Quits: Zenton (~user@user/zenton) (Ping timeout: 264 seconds)
[23:20:48] *** Joins: zalt_ (~zalt@user/zalt)
[23:20:52] *** Quits: Budd (~Budd@2001:470:8d44:1::5) (Quit: Leaving)
[23:20:55] *** Joins: kenanmarasli_ (~kenanmara@user/kenanmarasli)
[23:21:04] *** Joins: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp)
[23:21:07] *** Joins: MrMobius_ (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[23:21:08] *** Joins: Mach` (~Mach@86.121.208.210)
[23:21:20] *** Joins: tm512` (~tm512@50.53.132.213)
[23:21:30] *** Joins: gproto23_ (~gproto23@user/gproto23)
[23:21:32] *** Quits: tm512` (~tm512@50.53.132.213) (Changing host)
[23:21:32] *** Joins: tm512` (~tm512@user/tm512)
[23:21:36] *** Joins: pncl1 (~Hax0r@128.127.222.243)
[23:21:47] *** Joins: jbauer_ (~jbauer@146.71.11.98)
[23:21:49] *** Joins: Famine_ (~Famine@user/famine)
[23:22:11] *** Joins: gce108_ (~gce@64-250-5-223.gvec.net)
[23:22:16] *** Quits: Cienisty (Cienisty@user/cienisty) (Killed (platinum.libera.chat (Nickname regained by services)))
[23:22:22] *** Joins: dzz0072 (~dzz007@user/dzz007)
[23:22:23] *** Joins: Flonk6 (~Flonk@ec2-52-40-29-25.us-west-2.compute.amazonaws.com)
[23:22:32] *** Joins: aliosablack (~chomwitt@2a02:587:dc0f:7c00:12c3:7bff:fe6d:d374)
[23:22:32] *** Quits: chomwitt (~chomwitt@2a02:587:dc0f:7c00:12c3:7bff:fe6d:d374) (Ping timeout: 240 seconds)
[23:22:36] *** Joins: Cienisty (Cienisty@user/cienisty)
[23:22:46] *** Joins: flynn4 (~mcbloch@user/flynn)
[23:23:14] *** Joins: grumble` (grumble@user/grumble)
[23:23:15] *** Joins: nitrix_ (~nitrix@user/nitrix)
[23:23:18] *** Joins: eXeC65 (~eXeC64@80.1.220.46)
[23:23:18] *** Joins: Albright_ (~Albright@149.28.13.173)
[23:23:21] *** Joins: Thymo_ (~Thymo@NASSP/developer/Thymo)
[23:23:21] *** Joins: Telvana (~capo@user/telvana)
[23:23:21] *** Joins: mcfrd (~mcfrdy@user/mcfrdy)
[23:23:21] *** Joins: zipper (~luv_panda@user/jellie)
[23:23:22] *** Joins: banc- (banc@gateway/vpn/airvpn/banc)
[23:23:23] *** Joins: dexter0_ (~dexter0@c-69-181-126-161.hsd1.ca.comcast.net)
[23:23:24] *** Joins: polyrob_ (~rob@user/polyrob)
[23:23:44] *** Quits: pncl1 (~Hax0r@128.127.222.243) (Remote host closed the connection)
[23:23:49] <Iarfen> nomagno: how are the tokens?
[23:23:53] *** Joins: wils (~wilz@modemcable036.177-131-66.mc.videotron.ca)
[23:23:56] <Iarfen> that's a pseudo-language?
[23:24:07] *** Joins: magla (~gelignite@55d4ec6e.access.ecotel.net)
[23:24:34] *** Joins: __nick__ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:24:43] *** Joins: masterbuilder (~user@user/masterbuilder)
[23:25:00] *** Joins: qwedfg_ (~qwedfg@user/qwedfg)
[23:25:15] *** Joins: ski_ (~ski@remote12.chalmers.se)
[23:25:18] *** Joins: Wulf4 (~Wulf@user/wulf)
[23:25:25] *** Joins: trenka_ (~ykaliuta@89-27-97-175.bb.dnainternet.fi)
[23:25:34] *** Joins: HisShadow_ (~HisShadow@user/hisshadow)
[23:25:35] *** Joins: YellowSu1 (~YellowSuB@user/yellowsub)
[23:25:35] *** Quits: YellowSuB (~YellowSuB@user/yellowsub) (Killed (osmium.libera.chat (Nickname regained by services)))
[23:25:35] *** YellowSu1 is now known as YellowSuB
[23:25:36] *** Joins: arand_ (~arand@c-0a01235c.05-662-7570703.bbcust.telenor.se)
[23:25:41] *** Joins: Brewster_ (~Brewster@185.145.156.241)
[23:25:41] *** Joins: reda_ (~reda@user/reda)
[23:25:42] *** Joins: mikoto-c1 (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[23:25:49] *** Joins: brelod_ (~me@90.244.150.142)
[23:25:53] *** Joins: Tordek_ (tordek@triton.blinkenshell.org)
[23:25:56] *** Joins: strajder_ (~strajder@user/strajder)
[23:26:01] *** Joins: Tom (~Tom^@user/tom/x-0773808)
[23:26:02] *** Joins: baltazaar (~baltazar@178-164-254-231.pool.digikabel.hu)
[23:26:02] *** Joins: avarab (avar@vm.nix.is)
[23:26:04] *** Quits: Brewster (~Brewster@user/brewster) (Killed (NickServ (GHOST command used by Brewster_!~Brewster@185.145.156.241)))
[23:26:06] *** Joins: rahl- (~rahl@102.114.76.71)
[23:26:08] *** Brewster_ is now known as Brewster
[23:26:12] *** Joins: pnill_ (~pnill@ip170.ip-54-39-37.net)
[23:26:17] *** Quits: Brewster (~Brewster@185.145.156.241) (Changing host)
[23:26:17] *** Joins: Brewster (~Brewster@user/brewster)
[23:26:25] *** Quits: strajder_ (~strajder@user/strajder) (Client Quit)
[23:26:26] *** Joins: monchi_ (~joints@143.198.92.132)
[23:26:33] *** Joins: Echoz_ (~chris@user/echoz)
[23:26:41] *** Joins: strajder_ (~strajder@user/strajder)
[23:26:45] *** Joins: root_ (~root@dhcp-24-53-243-12.cable.user.start.ca)
[23:27:25] *** Tom is now known as Guest6197
[23:27:45] *** Joins: Zenton (~user@user/zenton)
[23:27:58] *** Joins: Viewday7 (~Viewday@user/viewday)
[23:29:07] *** Quits: strajder_ (~strajder@user/strajder) (Client Quit)
[23:29:11] *** Joins: finalsummer_ (~finalsumm@user/finalsummer)
[23:29:15] *** Joins: edro (~edr@enlo.co)
[23:29:15] *** Quits: edro (~edr@enlo.co) (Changing host)
[23:29:15] *** Joins: edro (~edr@user/edr)
[23:29:19] *** Joins: marcj- (~marc@205.175.215.25)
[23:29:23] *** Quits: Viewday (~Viewday@user/viewday) (Read error: Connection reset by peer)
[23:29:23] *** Viewday7 is now known as Viewday
[23:29:30] *** Joins: strajder_ (~strajder@user/strajder)
[23:29:41] *** Joins: De4nWhit3 (~De4nWhit3@165-73-119-36.ip.afrihost.capetown)
[23:29:49] <De4nWhit3> Hello everyone.
[23:30:17] *** Joins: s4ndm4n (sandman13@jujube.ircnow.org)
[23:30:43] *** Joins: nop (~Murray@89.109-247-180.customer.lyse.net)
[23:30:46] *** Quits: strajder (~strajder@user/strajder) (*.net *.split)
[23:30:46] *** Quits: rgrinberg (~textual@190.113.102.153) (*.net *.split)
[23:30:46] *** Quits: Hax0r (~Hax0r@128.127.222.243) (*.net *.split)
[23:30:46] *** Quits: gproto23 (~gproto23@user/gproto23) (*.net *.split)
[23:30:46] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (*.net *.split)
[23:30:46] *** Quits: ARoxdale (~ARoxdale@84.203.31.229) (*.net *.split)
[23:30:46] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (*.net *.split)
[23:30:46] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (*.net *.split)
[23:30:46] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (*.net *.split)
[23:30:46] *** Quits: Klinda (~superleag@user/klinda) (*.net *.split)
[23:30:46] *** Quits: Mach (~Mach@86.121.208.210) (*.net *.split)
[23:30:46] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (*.net *.split)
[23:30:46] *** Quits: Burgundy (~yomon@86.127.194.72) (*.net *.split)
[23:30:46] *** Quits: HisShadow (~HisShadow@user/hisshadow) (*.net *.split)
[23:30:46] *** Quits: riles (~root@dhcp-24-53-243-12.cable.user.start.ca) (*.net *.split)
[23:30:46] *** Quits: acerbic (~acerbic@cs-xdata-50-86-48-149.cspire.com) (*.net *.split)
[23:30:46] *** Quits: brelod (~me@90.244.150.142) (*.net *.split)
[23:30:46] *** Quits: rahl (~rahl@102.114.76.71) (*.net *.split)
[23:30:46] *** Quits: dexter0 (~dexter0@c-69-181-126-161.hsd1.ca.comcast.net) (*.net *.split)
[23:30:46] *** Quits: Famine- (~Famine@user/famine) (*.net *.split)
[23:30:46] *** Quits: jellie (~luv_panda@user/jellie) (*.net *.split)
[23:30:46] *** Quits: edr (~edr@user/edr) (*.net *.split)
[23:30:46] *** Quits: Flonk (~Flonk@ec2-52-40-29-25.us-west-2.compute.amazonaws.com) (*.net *.split)
[23:30:46] *** Quits: gce108 (~gce@user/gce108) (*.net *.split)
[23:30:46] *** Quits: monchi (~joints@143.198.92.132) (*.net *.split)
[23:30:46] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (*.net *.split)
[23:30:46] *** Quits: Wulf (~Wulf@user/wulf) (*.net *.split)
[23:30:46] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (*.net *.split)
[23:30:46] *** Quits: dzz007 (~dzz007@user/dzz007) (*.net *.split)
[23:30:46] *** Quits: trenka (~ykaliuta@user/trenka) (*.net *.split)
[23:30:46] *** Quits: pnill (~pnill@ip170.ip-54-39-37.net) (*.net *.split)
[23:30:46] *** Quits: reda (~reda@user/reda) (*.net *.split)
[23:30:46] *** Quits: finalsummer (~finalsumm@user/finalsummer) (*.net *.split)
[23:30:46] *** Quits: arand (~arand@c-0a01235c.05-662-7570703.bbcust.telenor.se) (*.net *.split)
[23:30:46] *** Quits: Rob (~capo@user/telvana) (*.net *.split)
[23:30:46] *** Quits: Echoz (~chris@user/echoz) (*.net *.split)
[23:30:46] *** Quits: Albright (~Albright@149.28.13.173) (*.net *.split)
[23:30:46] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (*.net *.split)
[23:30:46] *** Quits: jbauer (~jbauer@146.71.11.98) (*.net *.split)
[23:30:46] *** Quits: zalt (~zalt@user/zalt) (*.net *.split)
[23:30:46] *** Quits: eXeC64 (~eXeC64@80.1.220.46) (*.net *.split)
[23:30:46] *** Quits: qwedfg (~qwedfg@user/qwedfg) (*.net *.split)
[23:30:46] *** Quits: wilz (~wilz@modemcable036.177-131-66.mc.videotron.ca) (*.net *.split)
[23:30:46] *** Quits: Xeha (~Xeha@dynamic-82-220-88-142.ftth.solnet.ch) (*.net *.split)
[23:30:46] *** Quits: marcj (~marc@205.175.215.25) (*.net *.split)
[23:30:46] *** Quits: Tordek (~tordek@triton.blinkenshell.org) (*.net *.split)
[23:30:46] *** Quits: polyrob (~rob@user/polyrob) (*.net *.split)
[23:30:46] *** Quits: grumble (~grumble@user/grumble) (*.net *.split)
[23:30:46] *** Quits: greenbagels (~gb@user/greenbagels) (*.net *.split)
[23:30:46] *** Quits: koolazer (~koo@user/koolazer) (*.net *.split)
[23:30:46] *** Quits: flynn (~mcbloch@user/flynn) (*.net *.split)
[23:30:47] *** Quits: Tom^ (~Tom^@user/tom/x-0773808) (*.net *.split)
[23:30:47] *** Quits: Thymo (~Thymo@NASSP/developer/Thymo) (*.net *.split)
[23:30:47] *** Quits: avar (~avar@vm.nix.is) (*.net *.split)
[23:30:47] *** Quits: baltazar (~baltazar@178-164-254-231.pool.digikabel.hu) (*.net *.split)
[23:30:47] *** Quits: ski (~ski@remote12.chalmers.se) (*.net *.split)
[23:30:47] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (*.net *.split)
[23:30:47] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (*.net *.split)
[23:30:47] *** Quits: nitrix (~nitrix@user/nitrix) (*.net *.split)
[23:30:47] *** Quits: sandman13 (sandman13@jujube.ircnow.org) (*.net *.split)
[23:30:47] *** Quits: tm512 (~tm512@user/tm512) (*.net *.split)
[23:30:47] *** mcfrd is now known as mcfrdy
[23:30:47] *** Wulf4 is now known as Wulf
[23:30:47] *** flynn4 is now known as flynn
[23:30:47] *** nitrix_ is now known as nitrix
[23:30:47] *** Flonk6 is now known as Flonk
[23:30:47] *** dexter0_ is now known as dexter0
[23:30:47] *** dzz0072 is now known as dzz007
[23:30:47] *** Thymo_ is now known as Thymo
[23:30:47] *** polyrob_ is now known as polyrob
[23:30:47] *** baltazaar is now known as baltazar
[23:30:58] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[23:31:15] *** Quits: __nick__ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:31:16] <twkm> moo.
[23:31:21] *** monchi_ is now known as monchi
[23:31:21] *** Joins: Klinda (~superleag@user/klinda)
[23:31:39] *** Joins: Xeha (~Xeha@dynamic-82-220-88-142.ftth.solnet.ch)
[23:32:28] *** Parts: strajder_ (~strajder@user/strajder) ()
[23:32:37] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:32:37] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[23:33:57] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:34:53] *** Quits: alch (~alch@151.68.133.3) (Ping timeout: 264 seconds)
[23:36:19] *** Quits: humky (~humky@user/humky) (Remote host closed the connection)
[23:36:33] *** Joins: alch (~alch@151.68.136.118)
[23:36:41] *** Quits: dld (~dld@73.61.8.213) (Ping timeout: 264 seconds)
[23:36:56] *** Joins: greenbagels (~gb@user/greenbagels)
[23:36:58] *** Joins: strajder (~strajder@user/strajder)
[23:37:00] *** Joins: humky (~humky@user/humky)
[23:37:11] *** Joins: koolazer (~koo@user/koolazer)
[23:37:20] *** Joins: ARoxdale (~ARoxdale@84.203.31.229)
[23:38:06] *** Joins: dld (~dld@2601:197:600:1210:1d51:fa28:794f:615f)
[23:38:22] *** Joins: acerbic (~acerbic@cs-xdata-50-86-48-149.cspire.com)
[23:39:25] *** Quits: humky (~humky@user/humky) (Read error: Connection reset by peer)
[23:39:41] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 246 seconds)
[23:40:24] *** Joins: Rounin (~david@84.212.130.215)
[23:41:19] *** kenanmarasli_ is now known as kenanmarasli
[23:41:21] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:18c0:c660:97e2:f5b6)
[23:41:21] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:18c0:c660:97e2:f5b6) (Changing host)
[23:41:21] *** Joins: skapata (~Skapata@user/skapata)
[23:42:51] <De4nWhit3> floatcomplex
[23:43:08] *** Quits: sdfgsdfg (sdfgsdfg@user/sdfgsdfg) (Quit: BNC by #bnc4you)
[23:43:18] *** Joins: re101-mayfly-27 (~re101-may@2620:132:b042:0:4415:dcee:ac4:3a3b)
[23:43:49] <re101-mayfly-27> anyone know arm assembly?
[23:44:28] <twkm> wrong channel.
[23:45:27] *** tm512` is now known as tm512
[23:46:11] <clarity> meow
[23:46:41] *** Joins: Klinda (~superleag@user/klinda)
[23:47:32] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[23:47:34] *** zalt_ is now known as zalt
[23:47:39] *** Joins: ko (~i.am@user/marlboro)
[23:47:48] *** Quits: re101-mayfly-27 (~re101-may@2620:132:b042:0:4415:dcee:ac4:3a3b) (Client Quit)
[23:48:52] <floatcomplex> De4nWhit3: 
[23:49:25] *** Joins: marlboro (~i.am@user/marlboro)
[23:49:40] *** Quits: marlboro (~i.am@user/marlboro) (Client Quit)
[23:50:15] <De4nWhit3> Hello floatcomplex. There is an example in the book that I am reading that is really confusing me. I was wondering if you could please help me make sense of it? https://onlinegdb.com/3wcFiLMEH As I understand it, line 8/9/10 all declare basically the same thing?
[23:51:58] <floatcomplex> i'm definitely not the right person to try to reason about typedefs
[23:52:18] <De4nWhit3> Oh ok. floatcomplex
[23:52:28] <De4nWhit3> Thank you anyway.
[23:52:48] <De4nWhit3> I just don't understand what they are trying to do.
[23:53:08] *** Joins: Inline (~Inline@2a02:908:1252:7a80:6c0:2b98:1609:4e92)
[23:53:23] <tyzoid> De4nWhit3: Try CDECL - https://cdecl.org/?q=void+%28*signal%28int%2C+void+%28*%29%28int%29%29%29%28int%29%3B
[23:53:24] <candide> Title of tyzoid's link: cdecl: C gibberish ↔ English
[23:53:42] <tyzoid> There's a command line utility too
[23:54:27] *** Joins: Betal (~Betal@user/betal)
[23:54:50] <De4nWhit3> Thank you floatcomplex
[23:54:55] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[23:55:10] <De4nWhit3> Thank you @tyz
[23:55:17] <De4nWhit3> tyzoid
[23:56:06] *** Joins: Viewday0 (~Viewday@user/viewday)
[23:57:21] <fizzie> cdecl won't "expand" typedefs, so not sure how terribly much help it will be.
[23:57:31] *** Quits: Viewday (~Viewday@user/viewday) (Read error: Connection reset by peer)
[23:57:31] *** Viewday0 is now known as Viewday
[23:58:08] <fizzie> But sure, lines 8-10 are all equivalent, given lines 4 & 6.
[23:59:04] <De4nWhit3> Thank you fizzie
[23:59:29] <floatcomplex> don't write real code with this much typedef foolery
[23:59:35] *** Joins: itrxly (~itrxly@204.116.28.65)
[23:59:37] <floatcomplex> it's abuse of the language feature
[23:59:41] <itrxly> yo
[23:59:57] <itrxly> yo float
[23:59:58] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
