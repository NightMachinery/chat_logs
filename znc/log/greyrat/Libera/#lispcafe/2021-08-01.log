[00:02:35] <lotuseater> so it wasn't a good time?
[00:03:37] <lotuseater> but Trump raised it all
[00:05:43] *** Joins: selwyn (~selwyn@user/selwyn)
[00:12:37] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[00:21:15] *** Joins: zacts (~zacts@user/zacts)
[00:24:33] *** Joins: selwyn (~selwyn@user/selwyn)
[00:24:54] *** Joins: tankrim (~user@c-7928e655.023-110-6f72654.bbcust.telenor.se)
[00:32:23] <gilberth> ck_: And I expect Lisp features to continue trickling. A few decades and other languages will have converged to Lisp.
[00:32:58] <gilberth> Look at the acceptance of GC these days compared to say 1990.
[00:37:34] <lotuseater> sure
[00:39:08] <lotuseater> in the end, it all compiles down to lambdas :) the omniversal directive
[00:40:44] *** Quits: recordgroovy (~recordgro@c-67-185-152-122.hsd1.wa.comcast.net) (Remote host closed the connection)
[00:41:07] <gilberth> Well, SETQ is a bit hard with pure lambda calculus as you would need to carry the whole world around.
[00:43:24] <gilberth> One of my pet projects though is have just QUOTE, LAMBDA, SETQ, IF, and CATCH/THROW as special forms. You could boot all the rest from there nicely, if you wish.
[01:01:23] <lotuseater> nice
[01:03:00] <lotuseater> had another thought to earlier: Beside the Infinity Gauntlet, Thor's Hammer and the Metacircular Interpreter is Trump's Twitter account one of the most potentially dangerous weapons in the universe. :D
[01:03:20] <selwyn> it´s so quiet since he´s been gone
[01:03:25] <selwyn> i miss the chaos
[01:03:38] <lotuseater> me neither, since I'm not into twitter
[01:04:40] <lotuseater> "Be careful what you send to Twitter, the people will make you president."
[01:06:47] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[01:07:47] <lotuseater> https://mathinsight.org/image/us_congress_twitterers_porternovelli_2009
[01:08:27] <lotuseater> had this tab still open by accident when looking for a picture containing a graph structure
[01:12:12] *** Quits: zacts (~zacts@user/zacts) (Quit: zacts)
[01:22:06] <gilberth> Whatever the concept it was on Knuth' system to have pathnames like "TeXformats:plain.fmt" maps very nicely to logical pathnames :)
[01:24:23] <lotuseater> hehe
[01:24:43] <lotuseater> I'm very sure he had his caused intentions.
[01:26:54] <gilberth> In one of his lectures about TeX he called it "devices". But that sure is not a real device, but rather a kind of directory.
[01:27:28] <lotuseater> and you said yesterday "it looks like assembly". or assembly looks like a possible form of lisp :P
[01:27:51] <gilberth> TeX is nice. It first looks for "foo.tex" and then for "texinputs:foo.tex" or "texfonts:blah.tfm" for tfm files, etc.
[01:28:05] <lotuseater> it is :)
[01:29:53] <lotuseater> it's one of those master piece pyramids in Pascal
[01:31:24] <gilberth> lotuseater: What the WEB macro processor gives me likes like it. It get this <http://clim.rocks/gilbert/tex/tex.p.txt> "Pascal" text.
[01:31:51] <gilberth> lotuseater: I won't call it exactly Pascal.
[01:33:30] <gilberth> TeX uses it's own memory management, it's own strings (ok Pascal doesn't have them proper) and defines data structures in terms of macros to access a huge array called 'mem'.
[01:33:31] <lotuseater> okay afaik i thought it was written in Pascal
[01:33:53] <lotuseater> uff
[01:34:30] <gilberth> Still Pascal though. Only data structures Pascal sees are: http://clim.rocks/gilbert/tex/memory-word.lisp
[01:34:58] <lotuseater> what's your main source for doing it, the series "Computers & Typesetting"?
[01:35:32] <lotuseater> nice
[01:35:52] <gilberth> In WEB there are macros like "@d type(#) == mem[#].hh.b0", this gives you a node type, and "width(#) == mem[#+width_offset].sc" for instance the width of a box.
[01:36:18] <lotuseater> "overful hbox detected!"
[01:36:25] <gilberth> lotuseater: Source?
[01:36:50] <lotuseater> yes for your work
[01:37:26] <gilberth> Sorry, I don't get your question. What kind of source do you mean?
[01:37:50] <lotuseater> the deepest and from what i learned most of TeX and some tricks was "The TeXbook" and a bit of "The METAFONTbook"
[01:38:09] <lotuseater> the source for the knowledge to work on your project
[01:38:35] <lotuseater> or you know everything from learning in earlier years
[01:40:10] <gilberth> Heh, I won't use TeX.
[01:40:11] <lotuseater> is (TYPE HALFWORD (RANGE 0 65535)) the same as (DEFTYPE HALFWORD () '(INTEGER 0 65535))?
[01:40:27] <gilberth> Yep.
[01:40:46] <lotuseater> yes of course but to understand how it works deep down to transmorph that to CL
[01:40:54] <gilberth> TYPE HALFWORD = 0..65535; in traditional Pascal.
[01:41:18] <lotuseater> seems reasonable to define another macro atop DEFTYPE when the lambda-list is not needed
[01:41:20] <gilberth> lotuseater: I wrote a damn Pascal -> CL compiler. Easy.
[01:41:26] <lotuseater> for real?
[01:41:51] <lotuseater> I believe you? was more the question to the "Easy."
[01:41:52] <gilberth> Yes, what did you think how I would run TeX in CL?
[01:42:23] <lotuseater> none
[01:42:28] <lotuseater> or none else
[01:43:02] <gilberth> Well, it's easy for me. *shrug*
[01:43:08] <lotuseater> haha
[01:44:32] <gilberth> This is the TeXed sources <http://clim.rocks/gilbert/tex/tex.pdf>
[01:44:42] <gilberth> Of TeX.
[01:45:01] <lotuseater> the famous German mathematician Carl Ludwig Siegel (maybe known from Riemann-Siegel theta function) once said: "You only know how difficult a problem is once you solved it."
[01:45:30] <lotuseater> looks good
[01:45:36] <gilberth> At page 50ff (module 133ff) the data structures are defined. "@d" is like #define.
[01:46:05] <lotuseater> I even don't know what is needed for creating PDFs or PS. Knuth invented also DVI
[01:46:10] <gilberth> I will attempt to turn those into regular objects.
[01:46:30] <lotuseater> good old CPP macro #define
[01:47:00] <gilberth> DVI is just a crappy compression scheme of a (x,y,font,char) sequence.
[01:47:22] *** Quits: dra (~dra@2a04:4540:640e:ca00:d484:88f8:2d38:673c) (Ping timeout: 256 seconds)
[01:47:31] <lotuseater> ah hm
[01:47:58] <gilberth> METAFONT however is brilliant. But what it produces is just bitmaps.
[01:48:19] <lotuseater> and has clever algorithms built in
[01:48:39] <lotuseater> one of them is this by John Hobby
[01:49:49] <gilberth> My initial idea was sth entirely different: I want to see each and every macro expansion TeX does on some input document.
[01:50:03] <lotuseater> so when it just produces bitmaps how does this go to SVGs? the definition of fonts is more or less declarative as i see it
[01:50:17] <lotuseater> phew
[01:50:27] <gilberth> People made TTF backends for METAFONT.
[01:50:42] <lotuseater> ahh
[01:50:49] <gilberth> At one point METAFONT would render curves and those could be put into a TTF.
[01:50:53] <lotuseater> so i must learn more about what ttf is
[01:51:43] <lotuseater> but maybe your project can be put to McCLIM :P for nice rendering of stuff
[01:51:44] <gilberth> Over simplified a bunch of spline or bezier (I forgot) curves per char.
[01:52:05] *** Joins: eschaton (~eschaton@li541-49.members.linode.com)
[01:52:15] <gilberth> No way! They could steal it, if they wish. I won't contribute a single line.
[01:54:24] <gilberth> However a Maxima listener using TeX for rendering would be nice. :)
[01:54:52] <lotuseater> oh yes it would also be!
[01:55:30] <lotuseater> the thing I don't like about Maxima and why I didn't use it much up to now is no consistent or memorable naming
[01:56:20] <gilberth> Still a useful tool, when this is all you have.
[01:58:24] <lotuseater> yes
[01:58:43] <gilberth> What METAFONT also does, is that it takes the shape of your physical pixels into account. But I wonder how much of this is relevant anymore.
[01:59:02] <lotuseater> in a nice talk about maths in CL by Robert Smith he mentions "but don't look at the maxima source"
[01:59:17] <lotuseater> ah hm
[01:59:42] <lotuseater> why won't you contribute to McCLIM?
[02:00:05] <gilberth> I left long, long time ago.
[02:00:55] <lotuseater> oh :/
[02:01:26] <lotuseater> jackdaniel asked me or if i want i could contribute algorithms which could be needful
[02:06:38] <lotuseater> something like in here I think: https://www.cgal.org/
[02:06:39] -ixelp- The Computational Geometry Algorithms Library
[02:06:48] *** Quits: tankrim (~user@c-7928e655.023-110-6f72654.bbcust.telenor.se) (Ping timeout: 272 seconds)
[02:06:59] <gilberth> Reason (1): <http://bauhh.de/free-clim/clim-speed.mp4> (also peek at <http://bauhh.de/free-clim/> for more, if you wish). Reason (2): License.
[02:07:54] <selwyn> would cgal have applications to clim then?
[02:08:09] <gilberth> <http://bauhh.de/free-clim/free-clim-remote.mov> Is CLX remote from the hospital to my home box via DSL. >30ms latency.
[02:08:17] <lotuseater> no of course not
[02:08:32] <lotuseater> but some geometric algorithms could be useful
[02:08:40] <gilberth> Spatial trees will be useful.
[02:08:50] <lotuseater> wow Free CLIM is much more of speed
[02:08:58] <lotuseater> ok thx for the tip
[02:09:14] <gilberth> Yes. Not yet released :(
[02:09:53] <lotuseater> so the left is an X window and the right one of MacOS?
[02:10:02] <gilberth> And McCLIM doesn't like that and kept deleting my commits. So I left.
[02:11:02] <gilberth> The left is CLIM2. But McCLIM is implemented the same way. I may not look at McCLIM anymore. And I reimplemented all my initial McCLIM stuff from stratch.
[02:12:00] <lotuseater> when this special project works out to start next month (so in 19 minutes) i think for prototyping i will use McCLIM
[02:12:16] <lotuseater> wow you're quite capable :)
[02:12:42] <lotuseater> is that what you mean by spatial trees? https://en.wikipedia.org/wiki/R-tree
[02:13:13] <gilberth> Yes, this is one kind of it.
[02:13:39] <lotuseater> okay
[02:13:39] <gilberth> BSP is another. Quake uses it.
[02:14:08] <lotuseater> what does BSP mean and how does Quake make use of it?
[02:14:37] <gilberth> lotuseater: The baroque Motif'sh scroll bars in McCLIM are mine, like all the other gadgets. :)
[02:14:48] <lotuseater> wow
[02:14:57] <lotuseater> and baroque is timeless art :3
[02:15:05] <gilberth> BSP = binary space partition
[02:15:06] <lotuseater> CL is also kind of baroque
[02:15:47] <gilberth> Well, I never liked this fake 3d. These days we're back to where Xaw came from, which I always liked better.
[02:16:26] *** Joins: tankrim (~user@c-7928e655.023-110-6f72654.bbcust.telenor.se)
[02:16:42] <lotuseater> okay I think you're a few days older than me
[02:17:00] <gilberth> Regions are mine, the CLX port, the CLX render extension, Freetype stuff, Cairo stuff. And perhaps other things I forgot.
[02:17:23] <lotuseater> yours in the intellectual sense
[02:17:38] <gilberth> Well, I hacked that initially.
[02:17:43] <lotuseater> :)
[02:18:55] <gilberth> Anyhow, I want to rip Silica and CLIM apart. That is separate the CLIMish stuff from sheets, graphics, panes, gadgets, input events and perhaps display lists^W^Woutput records.
[02:21:59] <gilberth> My dream is that the former part becomes the de facto standard way to address a window system or generate graphics, like PDFs or SVGs. The whole presentation type stuff could be build on top of that.
[02:23:05] <gilberth> And the great thing is, that we have a spec.
[02:23:38] <lotuseater> :)
[02:23:57] * selwyn has a dumb question
[02:24:01] <gilberth> Well it allows for multiple implementations.
[02:25:06] <selwyn> what are they actually working on in mcclim, or other implementations
[02:25:22] <lotuseater> omg I found a common lisp translation of the original(?) SHRDLU program written in MacLisp
[02:25:30] <selwyn> are they implementing the specification, or are they going beyond that to do ´modern´ things
[02:25:43] <lotuseater> but the CL has ... potential becoming better
[02:25:55] <gilberth> selwyn: You know my agenda. idk about McCLIM.
[02:26:09] <selwyn> yes
[02:26:17] <lotuseater> selwyn: one of my few super powers is asking dumb questions ^^
[02:27:42] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 272 seconds)
[02:28:15] <lotuseater> the second is to forget things. the third one i forgot of
[02:29:45] *** Quits: tankrim (~user@c-7928e655.023-110-6f72654.bbcust.telenor.se) (Remote host closed the connection)
[02:30:06] *** Joins: tankrim (~user@c-7928e655.023-110-6f72654.bbcust.telenor.se)
[02:43:49] *** Quits: cond (~example@user/aeth/bot/cond) (Ping timeout: 268 seconds)
[02:49:11] <lotuseater> in older CL code they seemed to like using PROG
[02:51:25] <pjb> Yes, the famouns program feature :-)
[02:55:39] <lotuseater> :)
[02:55:48] <lotuseater> and many SETQs
[02:56:06] <lotuseater> I know, as in earlier days wasn't so capable.
[02:56:12] <lotuseater> *older machines
[02:57:56] <lotuseater> or (DEFUN FOO NIL ...) (semantically of course correct)
[02:58:57] <pjb> style wasn't as refined as nowadays :-)
[02:59:14] <pjb> but also, some listings might have been produced by print, instead of hand written.
[02:59:26] <pjb> image based development was more common.
[03:04:00] <gilberth> Hmm, when I pretend that I have a 48-bit machine, TeX somehow hangs. :(
[03:04:38] <gilberth> Let's try the then common 36-bit case.
[03:04:58] <lotuseater> or doing everything on a 1-bit machine
[03:05:59] <lotuseater> "oh we just invented quantum computers for rendering our math"
[03:06:57] <gilberth> Doesn't work either :(
[03:07:03] <lotuseater> sad
[03:07:08] <lotuseater> you want ice cream?
[03:07:17] <gilberth> What is (signed-byte 1)?
[03:07:37] * lotuseater sweats
[03:07:44] <gilberth> lotuseater: Thanks, but I don't like sweet stuff.
[03:08:10] <lotuseater> oh okay, what then? I'm not so much into chips.
[03:09:02] <lotuseater> typexpand says it's (integer -1 0)
[03:09:14] <gilberth> Indeed.
[03:09:28] <lotuseater> okay makes sense
[03:09:36] <gilberth> lotuseater: I like chips and crisps.
[03:10:16] <lotuseater> that "What is (SIGNED-BYTE 1)?" could be a trick question in a certification :D
[03:10:32] <lotuseater> you mean pommes frites by chips?
[03:10:47] <gilberth> Even at a child I didn't like sweet stuff. And last year, I actually ordered Pringles to be delivered to the hospital.
[03:11:05] <lotuseater> oh
[03:11:16] <gilberth> lotuseater: Yes. chips = french fries.
[03:11:32] <lotuseater> and then from the pringles cylinders building wifi antennas
[03:11:42] <gilberth> Heh.
[03:11:42] <lotuseater> okay so french fries i also like
[03:12:25] <gilberth> It depends, my cousin eats them everyday and that is just too much. He feeds from that.
[03:12:47] <lotuseater> was in town center and wanted to buy some fresh made but there were like 20 people. was around 4pm so no wonder since center of town lives again
[03:12:57] <lotuseater> yes of course, way too much
[03:13:22] <lotuseater> i also like real cooking or having something like raw paprika in between
[03:13:44] *** Joins: dra (~dra@2a04:4540:640e:ca00:d484:88f8:2d38:673c)
[03:14:10] <gilberth> I don't like cooking myself in particular. Especially when it's only for myself.
[03:14:44] <gilberth> But, yes, I like real cooking. A pity my wife moved out.
[03:15:20] <lotuseater> I'm sorry for you.
[03:15:38] <gilberth> Could be worse.
[03:15:56] <lotuseater> longer ago or still fresh moved out?
[03:16:38] <gilberth> Oh, that is two years now.
[03:16:47] <gilberth> On the day. :)
[03:18:10] <lotuseater> for me a bit over 2 years that my (first real and long) relationship broke up
[03:18:14] <lotuseater> oh damn
[03:18:33] <gilberth> Oh. Sorry to hear that.
[03:18:48] <lotuseater> many things came together at once at that time
[03:19:03] <lotuseater> but i still miss her sometimes
[03:19:57] <lotuseater> and often thought i will never have something like that again for many reasons
[03:20:13] <gilberth> ok. So you don't have contact anymore.
[03:20:25] <lotuseater> no and that is good
[03:20:51] <lotuseater> it's more like often feel it would be better not being alone
[03:21:19] <gilberth> Well, I am definitely not made for being alone.
[03:21:29] <lotuseater> or better "lonely". you can be lonely in a room full of people you know
[03:21:43] <lotuseater> me neither in the long run
[03:21:51] <gilberth> Sure. You also could be lonely when married. No problem.
[03:22:03] <lotuseater> of course
[03:22:54] <lotuseater> deep down in my soul, but had some fractures there since my childhood
[03:23:01] <lotuseater> ok sry i annoy
[03:23:21] <gilberth> For me 2020 was a disaster. Sitting in house build at the wrong spot, wife left, no friends around and no way to find some in that damn rural area. I winded up in hospital and still recover.
[03:23:28] <lotuseater> how long have you been married?
[03:24:02] <lotuseater> 2020 was good in some way for me to load up my batteries and getting some kind of more stabilization, also financially
[03:24:05] <gilberth> idk. We are still married. I married in '17 and was together with her since '10.
[03:24:11] <lotuseater> oh okay
[03:24:18] <hayley> "I tweaked the Java inlining heuristics in tandem with the register allocator, and a lot of dedicated profiling.  In the end, a mix of callee and caller-save registers was best... BUT it was a lot more important that the allocator not spill excessively when over-inlining.  i.e. the cost of the extra spills had to be close to the cost of the callee/caller saves you would have paid anyhow if you had not inlined."
[03:24:54] <lotuseater> hello hayley :) 
[03:25:40] <lotuseater> the rising comet
[03:26:11] <pjb> gilberth: can you get a remote work?  With daily meetings on Microsoft Teams or on Zoom, at least you could see some coworkers!
[03:26:29] * selwyn wonders if you could see halley´s comet in the southern hemisphere
[03:27:01] <lotuseater> I would like to have a Jitsi meeting with you (via audio)
[03:27:02] <pjb> selwyn: necessarily. If not when it comes, when it goes.
[03:27:03] <gilberth> pjb: I'd rather enjoy hacking my own project.
[03:27:10] <hayley> https://github.com/langjam/langjam "In Lang Jam, you and your teammates will create a programming language based on the theme for that jam."
[03:27:11] -ixelp- GitHub - langjam/langjam
[03:27:15] <lotuseater> my hackerspace has a jitsi instance meet.nerd.re
[03:27:29] <hayley> "You can use any libraries you'd like to help build your project - lexical analysers, parser generators, codgen frameworks like llvm, you name it."
[03:27:32] <pjb> gilberth: then find somebody in #lispcafe to have some video conference with ;-)
[03:28:06] <gilberth> pjb: lol. /me and video? No way.
[03:28:16] * lotuseater would like to, for improving his spoken English skills
[03:28:23] <lotuseater> also no video :D
[03:28:25] <hayley> How many macros and bogus grammars can #lispcafe come up with to propel through a language jam?
[03:29:22] <gilberth> What's a language jam?
[03:29:41] <lotuseater> that would be my question too
[03:29:53] <hayley> You make a programming language.
[03:30:01] <lotuseater> oh damn
[03:30:19] <lotuseater> so using Racket :D LOP
[03:30:45] <hayley> Not necessarily.
[03:30:56] <lotuseater> i know
[03:31:04] <lotuseater> was kind of a joke
[03:31:16] <hayley> Sorry.
[03:31:26] <lotuseater> ah why sorry? :) you're welcome
[03:32:38] <gilberth> Heh, I still could craft April.
[03:32:59] <White_Flame> Why would you need a team for a language jam?
[03:33:17] <hayley> "Creativity" is one of the metrics used, so I dunno if CL in infix is creative.
[03:33:29] <lotuseater> because of Microsoft "Teams"
[03:34:29] <gilberth> hayley: Ok then. I'll use upfix. You write in 2d and put the operator above the arguments.
[03:34:32] <lotuseater> and then everyone has to ZOOM in
[03:36:15] <hayley> https://www.youtube.com/watch?v=M2irYat2wf4
[03:36:16] -ixelp- Julia's Song (2003 Digital Remaster) - YouTube
[03:36:24] <White_Flame> it would be a decent flex for my parser tools
[03:37:42] <hayley> White_Flame: contrary to popular belief, Self was also hacked on by Mario Wolzsko and Craig Chambers and then some others. And there are only two days to hack it up.
[03:38:19] <White_Flame> right, languages are really quick to create
[03:38:40] <lotuseater> but not to standardize them :)
[03:38:43] <White_Flame> and it's usually 1 or maybe max 2 people that really do all the thinking work to make something cohesive
[03:39:56] <White_Flame> lotuseater: merging languages certainly would take a team ;)
[03:40:08] <lotuseater> hehe
[03:40:32] <lotuseater> by definition a team requires minimum of 2, right?
[03:41:18] <White_Flame> probably
[03:41:32] <hayley> ANSI standard speedrun (any%)
[03:41:35] <White_Flame> but most obviously use it as distinguished from something individual
[03:41:53] <White_Flame> where "the team" is a gestalt beyond individuals
[03:42:04] <lotuseater> hayley: a run for the next "Games Done Quick" convention
[03:42:57] <lotuseater> lol another of those words I didn't know of "Gestalt" o_O like Schnitzel
[03:43:59] <lotuseater> hayley: https://www.youtube.com/watch?v=djV11Xbc914
[03:43:59] -ixelp- a-ha - Take On Me (Official Video) [Remastered in 4K] - YouTube
[03:44:07] <lotuseater> watchable in 4K!
[03:44:19] <selwyn> i wonder how big the largest lisp team has been
[03:44:22] <White_Flame> 4kB?
[03:44:36] <lotuseater> no 4K resolution ^^
[03:45:21] <lotuseater> selwyn: I think that is one of those things where too many is bad
[03:45:46] <lotuseater> like when cleaning a house of 100m^2 with 100 people at the same time
[03:47:47] <selwyn> when i was at school on a camping trip, one of our teachers made 100 of us clean up an entire field in maybe 5 minutes
[03:47:50] <selwyn> it actually worked really well
[03:48:31] <lotuseater> yeah ok so this was good with the parallelization
[03:49:13] <lotuseater> but it other situations it just scales logarithmic
[03:51:38] <lotuseater> like with our senses, double the amount of light energy your eye gets, just is signaled by the brains also logarithmic. or feeling with the skin and that is good. without filtering in such a way could kill us faster
[03:54:23] <lotuseater> this is called the Weber-Fechner law, if you want to look it up
[03:58:41] * hayley uploaded an image: (394KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/vdIiXbNwssxRoVfYBHCtMpVP/realism.png >
[04:01:01] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[04:18:17] <sm2n> cleaning a field linearly decomposes, cleaning a house does not really, that is the difference
[04:18:28] <sm2n> though I guess you are hitting an edge case in the latter
[04:21:17] *** Quits: dra (~dra@2a04:4540:640e:ca00:d484:88f8:2d38:673c) (Ping timeout: 250 seconds)
[04:41:47] *** Quits: tankrim (~user@c-7928e655.023-110-6f72654.bbcust.telenor.se) (Remote host closed the connection)
[05:04:08] *** Quits: random-nick (~random-ni@87.116.165.220) (Ping timeout: 272 seconds)
[05:07:56] <hayley> https://www.youtube.com/watch?v=QQ1Zo6faTQY
[05:07:56] -ixelp- Tarkus (i. Eruption / ii. Stones of Years / iii. Iconoclast / iv. Mass / v. Manticore / vi.... - YouTube
[05:17:48] *** Joins: cond (~example@user/aeth/bot/cond)
[05:21:54] <aeth> gilberth: I think I will have to go with the self-ctcp-ping
[05:22:22] <aeth> this random disconnect at least showed "ING" which showed that when the connection is long-lived, the extremley unlikely does happen, and a character can get eaten, at least on a slow machine
[05:22:34] <aeth> *extremely
[05:38:33] * hayley now wonders if it is okay to memoize derivatives when she requires linearity now.
[05:39:59] <hayley> I suppose if the input is linear, we can't do anything too bad to it.
[05:46:26] <lotuseater> sm2n: even when sharing limited resources comes on top
[05:50:15] <aeth> gilberth: my guess is... no message in 4 minutes -> ctcp ping -> wait 1 minute for response -> no response means likely disconnected
[05:50:40] <aeth> (no response and no message; another message just means heavy lag)
[05:51:50] <sm2n> lotuseater, I don't follow
[05:52:06] <lotuseater> ah it's not of importance
[05:52:26] <lotuseater> and I'm just running on Mate for staying awake
[05:52:45] <gilberth> aeth: How could a character been eaten with TCP/IP? And: What took you so long?
[05:52:58] <lotuseater> yesterday I woke up at that time (3am) then slept again from 8am to 12pm
[05:53:32] <aeth> gilberth: because I check for EOF inside of a timeout
[05:53:34] <lotuseater> ha a game character in a game about networks :D
[05:53:55] <aeth> timeout triggered at just the wrong time on a PING message => ING message instead of PING message received
[05:54:09] <aeth> in theory, that could happen; however, now I know in practice it has happened
[05:54:46] <gilberth> aeth: Oh dear! Get proper stream timeouts.
[05:54:58] <aeth> usocket doesn't really... offer much
[05:55:09] <hayley> sb-sys:with-deadline?
[05:55:10] <aeth> the main (only?) alternative library isn't 0-foreign-dependency, though.
[05:55:14] <aeth> and requires libfixposix
[05:55:50] <gilberth> Well, I guess that still is an fd-stream, isn't it?
[05:58:46] <gilberth> I mean, /me just uses (SETF (CCL;STREAM-TIMEOUT IO) <your timeout here>) IIRC CMUCL has sth similar.
[05:59:56] <gilberth> This turns into a nice select(2) or poll(2) or what ever is the syscall du jour. So I won't be interrupted in the middle of things.
[06:00:16] <hayley> .oO( Does the rule for concatenation end up being non-linear if δR is not ε and R is nullable? )
[06:00:39] <gilberth> When you're cheap use a non-broken READ-CHAR-NO-HANG. (SBCL's is broken and won't work).
[06:00:52] <aeth> I read bytes though
[06:01:14] <gilberth> Then work with the stream timeout, if you have one.
[06:01:29] <aeth> IRC is, unless the ircd specifies otherwise, assumed to be UTF-8, but without errors (so invalid bytes must be passed on)
[06:01:40] <hayley> .oO( Looks like it. So I guess the assignment-avoiding hack is more important than I expected. )
[06:01:49] <gilberth> I work with characters, because there is no PEEK-BYTE. And ISO-8859-1 is bijective sort of.
[06:01:50] <aeth> and the ircd doesn't specify except via a message, after the stream has been created
[06:01:54] <aeth> so it has to be bytes... :-/
[06:02:04] <aeth> unless I want to lie on the characters
[06:02:59] <gilberth> Well. The spec hasn't peek-byte nor read-byte-no-hang, nor read-sequence-no-hang.
[06:03:34] <aeth> right
[06:04:23] <gilberth> At some place, you will need to lie. Either use stream timeouts, which are not portable, or just use iso-8859-1 and be set. Threat them as bytes and do utf-8 decoding based on char-code. Works like a charm.
[06:04:29] <aeth> ideally you'd want read-sequence-no-hang-until-terminating-char-or-sequence-filled
[06:04:59] <gilberth> Indeed.
[06:05:05] <aeth> but I don't need no-hang with LISTEN
[06:05:14] <gilberth> EOF?
[06:05:18] <aeth> right
[06:05:28] <aeth> but not every disconnect is detected and shown as an EOF anyway
[06:05:36] <aeth> so I'll just treat them all the same
[06:05:44] <gilberth> You still want to see EOFs.
[06:05:55] <aeth> yes, I want it and can't get it, so it's not important right now
[06:06:25] <aeth> in the end, I'm probably going to have to write my own socket library to get the behavior I want, but if I keep replacing things that don't do what I want, I'll never write anything high level
[06:06:26] <gilberth> Because you insist on bytes.
[06:07:46] *** Joins: zacts (~zacts@user/zacts)
[06:07:52] <gilberth> Read the SBCL manual. I see SB-IMPL::FD-STREAM-TIMEOUT, so that CMUCL stuff is still there.
[06:11:40] * hayley destroys a whole lot of temporary variables with one simple trick
[06:11:46] <gilberth> And actually, I'd rather have READ-SHORT-SEQUENCE, which blocks with timeout but doesn't insist on reading all of he sequence. Like select(2) + read(2).
[06:12:18] <hayley> (cond ((eq r* (empty-set)) (let ((*gensym-assignments?* nil)) (join (nullable r) s*))) (t <slow path...>))
[06:12:56] <hayley> The slow path isn't really slower at compile-time, but it makes a lot of assignments I don't care for.
[06:14:38] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[06:15:27] *** Joins: zacts (~zacts@user/zacts)
[06:18:23] * hayley wonders if SBCL knows how to hash objects, as the inspector shows keys in reverse order.
[06:18:46] *** Joins: zacts47 (~zacts@user/zacts)
[06:20:31] *** Quits: zacts (~zacts@user/zacts) (Killed (NickServ (GHOST command used by zacts47)))
[06:20:42] *** zacts47 is now known as zacts
[06:31:09] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[06:31:52] *** Joins: zacts (~zacts@user/zacts)
[06:33:25] *** Parts: zacts (~zacts@user/zacts) ()
[06:34:34] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[06:34:49] <dave0> maw
[06:48:47] <hayley> Hey dave0
[06:52:18] <dave0> hi hayley :-)
[06:58:34] <hayley> gilberth: What is (a*)* supposed to match on e.g aaa under POSIX rules?
[07:04:51] <hayley> AFAICT it should match the longest possible thing, so aaa I guess. Which sucks because my engine decides it should be the empty string.
[07:05:25] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[07:11:21] <gilberth> hayley: Of course it should match the whole string.
[07:11:33] <hayley> Fuck.
[07:11:42] <gilberth> Pardon?
[07:12:28] <hayley> I clearly said "truck", thankyou very much. I live on a road which goes to a port.
[07:14:27] <gilberth> Oh, sounds exciting. Will you board a ship?
[07:15:02] <hayley> It's unlikely.
[07:15:10] <gilberth> Corona?
[07:15:28] <hayley> Yes, and I don't have anywhere to go by ship.
[07:16:06] <gilberth> Not even for pleasure?
[07:16:43] <hayley> Usually I feel sick on a boat or plane, not pleasure.
[07:18:08] <gilberth> Sorry. Well, I feel uncomfortable on ships in general because of all the cold, deep water.
[07:18:16] * hayley looks and sees that there is a perfectly good 1_0 to read from, but NULLABLE chose 1_25 for some reason.
[07:21:08] <hayley> Right, because they are on either side of a JOIN and the latter dominates. Well.
[07:24:43] <hayley> While it is cheating, we know (A*)* = A*, and then A*A* = A*...
[07:38:58] * hayley can't write a rule for it seemingly.
[07:44:22] *** Quits: lad (~lad@user/lad) (Ping timeout: 272 seconds)
[07:52:53] <hayley> Perhaps I should flip around MERGE-TAG-SETS s.t. the left tag survives and the right dies when ambiguous. Just a hack really, I don't know why.
[07:53:37] <hayley> Eh, no, bad idea.
[07:59:23] *** Joins: nihaal (~nihaal@106.201.177.18)
[07:59:38] <hayley> OTOH that crap is in a Kleene so it shouldn't be JOINed to begin with.
[08:01:35] <hayley> There we go. That was stupid but easy enough to fix.
[08:07:41] <hayley> Oh, now I remember why I did that, because that was the damn POSIX empty-submatch correction thing. Since I no longer can expose the IR to the user, I will include conversion when we generate the damn IR.
[08:09:15] <edgar-rft> maybe you could use a Kleenex instead?
[08:16:40] <gilberth> hayley sure has fun.
[08:48:16] <hayley> https://josephg.com/blog/crdts-go-brrr/ this person speaks my language
[08:48:17] -ixelp- CRDTs go brrr
[08:50:04] <hayley> Sadly IMO the rest of the article is...eh.
[08:56:58] <hayley> I don't think I've ever seen GC spikes in any averaged-out tests, which probably means they needed to average more. And then it's not like you only have L1 cache and primary memory; you have at least another two caches, and they can in fact cache non-contiguous things; never mind that V8 probably bump allocates anyway.
[09:00:29] <hayley> https://www.youtube.com/watch?v=QomBOSjUSOA
[09:00:29] -ixelp- Bombers (Live 79) - YouTube
[09:02:28] *** Quits: White_Flame (~quassel@user/white-flame/x-6930243) (Remote host closed the connection)
[09:03:41] *** Joins: White_Flame (~quassel@user/white-flame/x-6930243)
[10:30:03] <hayley> Come to think of it, my compilation strategy arguably is more like APL\3000 in that we only keep around linearity/reference counts on variables for optimization purposes; whereas e.g. Linear Lisp or Rust make values linear. I think.
[10:59:24] *** Joins: selwyn (~selwyn@user/selwyn)
[11:37:08] *** Joins: rt (~robin@user/terpri)
[11:37:37] *** Quits: robin (~robin@user/terpri) (Ping timeout: 245 seconds)
[11:43:12] <ck_> gilberth: are you still up?
[11:50:12] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[11:57:41] *** Joins: lad (~lad@user/lad)
[13:04:28] <hayley> Should I write a Newspeak VM in Lisp? Pros: - no C++ - practise writing a JIT Cons: - Gilad Bracha sends me to hell
[13:08:37] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[13:09:02] <ck_> doubleplusungood
[13:09:43] <hayley> The magic number for a Newspeak image is 19 84.
[13:12:22] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 272 seconds)
[13:12:35] <ck_> Big Endian probably?
[13:12:51] <hayley> All big endian, yes.
[13:13:06] <hayley> A notable improvement over the Smalltalk-80 format.
[13:13:35] <ck_> Small Talk .. Big Speak. I see it
[13:19:12] *** Joins: silasfox (~sbv@2001-4dd6-abca-0-de39-b264-6870-a7ee.ipv6dyn.netcologne.de)
[13:41:07] <lotuseater> hi there
[13:43:20] <ck_> how many loti do you eat in an average day?
[13:55:36] <ck_> ( I see about 300 ks in a day on IRC, but varies a lot )
[14:08:10] *** Quits: lad (~lad@user/lad) (Ping timeout: 272 seconds)
[14:18:45] <lotuseater> none?
[14:18:56] <lotuseater> this has just indirectly to do with that
[14:19:06] <lotuseater> more with the greek math
[14:19:09] <lotuseater> *myth
[14:19:22] <lotuseater> AND math of course
[14:33:21] <lotuseater> another big question: does ANYONE of you understand women?
[14:33:55] <hayley> I don't tend to understand myself, no.
[14:34:06] <lotuseater> damnit
[14:34:46] <lotuseater> or better why they mostly act like they seem to in their mid 20s
[14:35:06] <hayley> Hm, can you wait five years or so?
[14:35:32] <lotuseater> I could. Why?
[14:44:46] <lotuseater> hayley: You got me curious :)
[14:45:05] <hayley> Hey, it hasn't been 10 minutes. Wait longer.
[14:45:25] <hayley> s/been/even been/ - it wasn't when I said that first.
[14:45:25] <lotuseater> so this was a trap test :D
[14:46:00] <lotuseater> I thought you would have also an explanation for your question.
[14:47:05] <hayley> Then I would be in my mid 20s and I could tell you.
[14:47:38] <lotuseater> That would be desirable.
[14:48:10] <lotuseater> But thx anyway.
[14:49:52] <lotuseater> I'm so dumb, why do I check just now, that you're also no-defun-allowed? :D
[15:06:03] * hayley read the RCImmix paper, hoping they would do something to reuse pages early. That somehow does not seem to be the case.
[15:08:01] <hayley> Then again, they do deferred reference counting which doesn't immediately recycle memory anyway.
[15:11:54] <hayley> I'd like to hack a close-enough-to-bump allocator to do something clever if we can insert calls to some FREE function at compile-time, but I can't think of anything that is slower on average than running the damn GC.
[15:12:01] <hayley> *faster, not slower
[15:16:49] <hayley> btw it appears AMD Zen introduced its own CLZERO instruction to kill off a cache line. Fancy.
[15:24:03] *** Joins: random-nick (~random-ni@87.116.182.181)
[15:29:09] *** rt is now known as robin
[15:51:33] <hayley> https://www.youtube.com/watch?v=gIa3kxraZHY
[15:51:33] -ixelp- Can A Monkey Beat Minecraft? (SCIENTIFIC ANALYSIS) - YouTube
[16:35:53] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:c0b9:5f24:4f26:4ca7)
[17:14:08] <gilberth> Good morning #lispcafe!
[17:23:21] <hayley> Good morning gilberth!
[17:24:52] <hayley> So apparently something is going on with the Mastodon client for iOS not showing local posts. People are complaining about it. I do not give a shit, because experimentally the local timeline is about as crap as the global timeline, and the whole idea of a server serving as a "community" is fundamentally spooky as fuck.
[17:27:25] <hayley> The main issue is that you only use one account on one server at a time. People are not one dimensional, yet this equivalence suggests they are only part of one community. And the other issue is that people assume it changes your threat model. You can't un-scrape things even if you don't beam it to other servers yourself. Web scrapers exist independent of any decentralisation model.
[17:32:04] <hayley> I guess I am talking to the wind still. This theory is a niche within a niche really. Oh well.
[17:33:46] <hayley> gilberth: Do you have any other drafts you said you'd publish years ago?
[17:34:33] *** Quits: kevingal (~quassel@2a02:8084:4140:f300:c0b9:5f24:4f26:4ca7) (Remote host closed the connection)
[17:35:23] <gilberth> hayley: I am afraid not, apart from earlier ones. What do you miss?
[17:36:28] <hayley> Nothing in particular. It's not about the derivatives, just if you wrote up anything else you haven't found a context for.
[17:37:18] <gilberth> You mean in general? Secret wisdom?
[17:37:32] <hayley> Yes.
[17:38:22] <gilberth> Heh, I have lots of secret projects, not so much scientific insights. Sorry.
[17:39:00] <hayley> I don't think what I just said is very scientific.
[17:40:23] <gilberth> Well I consider the whole idea of those derivatives with assignments essentially modelling Mealy automata kinda scientific.
[17:41:51] <hayley> Right, sure, derivatives are, but there is nothing scientific about saying social communities are very improperly represented, and that scraping happens regardless of platform.
[17:42:35] <hayley> Which FWIW is why I refuse to add a "remove" command to Netfarm, because it will never work. Somewhere in the matrix.org privacy policy you are also told that deleting may or may not work...
[17:43:20] <gilberth> Ah. That you mean.
[17:43:46] <gilberth> Well, you can't delete a Usenet posting either.
[17:45:05] <hayley> Still, if Google scraped my website, and I then deleted a page, their cache would not see that page be deleted immediately. And I can find my github history on multiple pointless sites with good SEO.
[17:45:30] <hayley> So it does not matter if we replicate ourselves, when someone else can do it independently.
[17:47:33] <gilberth> archive.org
[17:48:04] <gilberth> The internet never forgets. It's said to be Linus' backup strategy.
[17:48:28] <hayley> It is funny. Once someone asked "do you ever wish that conversations here were less technical in nature?" and I wanted to say "hell, I wish they were more technical, so we could have an interesting discussion for once!"
[17:48:32] <gilberth> OTOH Things do disappear. See the AMOP e.g. Or parc.xerox.com in this case.
[17:48:52] <hayley> Like how every replicated log was considered a blockchain to someone, which is plain dumb.
[17:50:32] <gilberth> A blockhain? I don't think so.
[17:51:18] <hayley> So I wish that people had more technical knowledge, because putting up with this shit is actually painful at this point.
[17:51:46] <gilberth> You gain confidence only by things logs by multiple parties. Like some IRC channels, or Usenet. You'll find all sorts of silly things I said in the last 30 or so years.
[17:52:36] <hayley> I would also say that if you equate a server and a community, you end up being at the wrong place at the wrong time all the time if you pick a bad server.
[17:53:47] <hayley> That said, I consistently found that there were a few servers that constantly put out drivel not even worth the power cost for the tiny currents with the packets that passed through the Internet.
[17:57:00] <hayley> Generally, I would not recommend such stereotyping though. Pretty sure the German milk shop guy had something to say on it...
[17:58:42] <hayley> "If, thus, I see the humanity in you, as I see the humanity in me, and see nothing but the humanity, then I take care of you the way I take care of myself, because we both signify nothing but the mathematical proposition: A = C and B = C, therefore A = B, i.e., I am nothing but a human being and you are nothing but a human being, thus I and you are the same."
[17:59:36] <gilberth> It's a disease of the current internet that there are less and less open protocols. In good old times we had NNTP and RFC822. These times, everyone uses some properitary platform by some single entity. Why do I need as many messagners on my phone as I have people sending messages to? I mean, I don't need a Google account to send mail to some google.com address, do I?
[18:00:33] <hayley> Don't worry, Moxie said it was a good thing you needed so many apps, cause they all use phone numbers.
[18:00:53] * hayley splutters and mumbles "that idiot."
[18:01:36] <gilberth> Oh. Forget bitcoin then, trade in phone numbers. :)
[18:02:40] <hayley> I would say to use some federated media, but then again they are full of shit as I just said. Well.
[18:03:31] <hayley> Sorry to say I am not working on Netfarm any time soon still because us two still have #lispcafe to talk crap on.
[18:07:21] <gilberth> Heh. Well, better than TV^WNetflix my cousin watches all the time. He is a professional watcher.
[18:09:38] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[18:09:49] <gilberth> Why do I keep to say NIL instead of NULL in DEFTYPEs? This is annoying.
[18:10:22] <hayley> Recently I met someone who seems to have the same problem, but with cryptocurrency. We can both talk the shit, with sufficient will power we can implement it too, but nothing happens still.
[18:11:38] <pjb> hayley: often the talk is only technical, but we don't talk about the reasons why we should or should not do it.
[18:11:55] <pjb> hayley: not doing anything about it is a way to answer to this unasked and undebated question.
[18:12:53] <pjb> hayley: for example, if there was a clear advantage to be obtained to do it, somebody would invest the resources needed to do it.
[18:13:08] <hayley> I don't see my arguments as very technical, but when it comes to discussing the design of decentralised social media, it is hard to not make technical arguments.
[18:13:45] <pjb> Saying that a technical solution to a social problem is not a solution, is not a strictly technical argument.
[18:14:06] <pjb> Not saying it, and not doing anything is a proof in the pudding too.
[18:14:19] <hayley> pjb: Well, I don't see either my plan or that of that friend to be profitable, so it is expected that no one would invest into it.
[18:14:43] <pjb> indeed. facebook was envisionned to be profitable.
[18:16:00] <hayley> The advantages in my plan are that you have more fault tolerance and you get meta-media on the side. The disadvantages for a money maker are that usage patterns are harder to scrape, you ideally won't be able to become immensely socially powerful, and you can't control moderation at all.
[18:16:43] <pjb> So only a political decision can make it a reality.
[18:18:18] <hayley> Perhaps so.
[18:22:38] <hayley> pjb: Also n.b. I would not consider the server-community false equivalence to be a consciously made solution. It is a total mishap that became "culture" from my point of view.
[18:24:50] <hayley> But it is obviously wrong as it reduces an individual to an abstract, one dimensional "shape" reified as a domain name.
[18:26:17] <pjb> Well, there may be a path, enticing users thru nice user interface and features, up to gamification, to start a snowball rolling.  Then "Do no evil." until you win…
[18:27:50] <hayley> The aim isn't to win. The aim is to not have a game.
[18:28:52] <pjb> That would require a lot of education and a raise of the IQ, and morality over the whole population.  Utopic.
[18:29:35] <pjb> But it is possible it'll be achievable once the population is reduced to 1/10 of the current population, if this is done with some selection…
[18:29:54] <hayley> "If this goal is dismissed as “merely” utopian, I am obliged to question what many radicals today would call “realism.”" - Murray Bookchin
[18:30:05] <hayley> Oh for fuck's sake, here we go with the population again...
[18:30:57] <pjb> What was the population of Vulcain? I've got the impression they were quite fewer than a billion…
[18:32:58] <pjb> Oh, you mean you wanted to do a niche system for a few hundred friends?
[18:33:22] *** Parts: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) ()
[18:33:38] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[18:38:36] *** Quits: silasfox (~sbv@2001-4dd6-abca-0-de39-b264-6870-a7ee.ipv6dyn.netcologne.de) (Ping timeout: 272 seconds)
[19:20:10] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[19:22:18] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 272 seconds)
[19:35:49] *** Joins: shka (~herr@109.231.62.239)
[20:30:36] *** Joins: lad (~lad@user/lad)
[20:38:32] *** Quits: nihaal (~nihaal@106.201.177.18) (Quit: nihaal)
[20:46:25] <gilberth> Took me a while, but here is Pascal pretty printed: <http://clim.rocks/gilbert/tex/tangle.pas>
[21:00:53] <gilberth> For flush left labels, or line comments I would need to patch the pretty printer, which I must do anyway for CLIM. Already did that for McCLIM initially, perhaps I find my olde code.
[21:51:58] <lotuseater> looks good
[21:55:21] <lotuseater> ck_: did you have at least a look at April?
[21:55:51] <lotuseater> gilberth: how do you arange the printing routines?
[21:58:51] <lotuseater> I thought some times on having a parameter *INDENTATION-LEVEL* for that beside the aesthetic print methods for certain code objects
[22:03:41] <ck_> yes, the tab is still open
[22:11:46] <ck_> gilberth: nice work! You said earlier "the mcclim people deleted your commits" (not verbatim), and that was why you left. I don't think I understand the full story yet
[22:15:25] <gilberth> lotuseater: I use the pretty printer and *print-pprint-dispatch*. And FORMAT strings like "~2I~<~@{~{~<~@{~S~^, ~:_~}~:>: (~<~@{~{~S : ~S~}~^;~@:_~}~:>~})~^;~:@_~}~:>" :)
[22:15:47] <lotuseater> phew
[22:18:33] <gilberth> ck_: There was major discrepancy about how displaying things should work. In my implementation graphics happens in the repaint handler only. McCLIM paints right away as the app modifies the output history, for glitches and for bad performance. I do this with sheet geometry also and I have non-mirrored CLX sheets, and double buffering.
[22:19:19] <gilberth> ck_: I just was fed up by trying to sell my idea about how a GUI framework should be implemented. I was unhappy with the license anyway and thus started from scratch.
[22:19:21] <aeth> gilberth: why
[22:19:32] <gilberth> aeth: why what?
[22:19:37] <aeth> gilberth: why use FORMAT strings like that when you can just use like 10-20 write/print/format instead
[22:20:33] <aeth> as long as it's a stream, and not NIL or a string, it should behave the same, but be more readable
[22:20:34] <gilberth> aeth: Because they are shorter. And because there is ~^
[22:20:41] <aeth> eh
[22:20:51] <aeth> it's only shorter if you don't notice patterns and make your own macro language out of it
[22:21:09] <sm2n> hayley, yes, and the entire idea of timelines is kind of the single bad design decision that caused all the drama about defederating/instance blocks and stuff
[22:21:27] <sm2n> people need to stop copying megacorp ux for greenfield media
[22:22:40] <gilberth> aeth: Sure. Here are my infix operators: <http://clim.rocks/gilbert/tex/infix-printing.lisp> Sorry for the encoding mess :/
[22:22:59] <gilberth> aeth: But then FORMAT already is the macro language, no need to invent a new one.
[22:23:48] <aeth> FORMAT is a write-only language, like regex
[22:23:51] <gilberth> aeth: And besides there is WITH-OUTPUT-TO-STRING, the pretty printer works there too.
[22:24:06] <gilberth> aeth: Indeed, like Perl.
[22:24:27] <gilberth> But you get used to it.
[22:24:51] <sm2n> hayley, also, federation without freedom of choice is not great. I have yet to see a design that does not lock people into dns names
[22:24:54] <ck_> gilberth: I see, that sounds a bit different than what I previously thought. Very understandable, thank you for sharing
[22:24:59] <aeth> e.g. could this be written entirely inside of one FORMAT? Possibly, it takes conditionals and the etypecase could be turned into a series of variables that it dispatches on... but I don't do that.
[22:25:03] <aeth> https://gitlab.com/mbabich/airship-scheme/-/blob/a2f6e7ec3f97f8e610dd39c0e3dcc416ef516db3/scheme-write.lisp#L27-56
[22:25:04] -ixelp- scheme-write.lisp · a2f6e7ec3f97f8e610dd39c0e3dcc416ef516db3 · Michael Babich / Airship Scheme · GitLab
[22:25:47] <gilberth> aeth: Sure you could do that.
[22:25:48] <aeth> or, taken to an extreme, any one of the functions in my IRC library, e.g. https://gitlab.com/zombie-raptor/zr-irc/-/blob/8450a3a3d85097f4dfa5941549311032311bd896/log.lisp#L244-266
[22:25:48] <sm2n> ideally you would want each person to own their identity, and federation (or the lack thereof) is just an implementation detail, and optimization for efficient transport
[22:25:49] -ixelp- log.lisp · 8450a3a3d85097f4dfa5941549311032311bd896 · zombie-raptor / ZR IRC · GitLab
[22:25:49] <lotuseater> and it's compact notation :)
[22:25:53] <contrapunctus> aeth: is Airship shipping yet?
[22:26:20] <aeth> in fact, I use FORMAT less than most people would, because I use WRITE-STRING with start/end where with FORMAT I'd have to subseq
[22:26:58] <aeth> contrapunctus: no
[22:28:19] <sm2n> I mean, I suppose there is nomadic matrix (vapourware full of technical debt), scuttlebutt (lol), and gnunet (academic paper publishing hell)
[22:28:36] <aeth> contrapunctus: I haven't had a very productive year
[22:29:09] <ck_> gilberth: I also had some thoughts on the performance of McCLIM, especially using XQuartz it is extremely slow.  So is, sometimes, the collarboration.  Or maybe I'm just not up to it
[22:29:41] <ck_> not in mcclim per se, but with the 'neighboring' things like clx and so on
[22:30:29] <gilberth> ck_: That is my point. watch <http://bauhh.de/free-clim/free-clim-remote.mov> That is from the hospital via WiFi and DSL home and back, latency >30ms. Can't get slower than that.
[22:31:19] <ck_> yes I know, I know. It's just so sad to see
[22:31:27] <lotuseater> gilberth: you wanna see the worst file (in style) of the SHRDLU code? i made it better readable yesterday
[22:31:33] <gilberth> So, if designed right, the speed of your X11 server shouldn't matter much.
[22:32:37] <gilberth> I really wonder why people keep complaining that XQuartz would be slow.
[22:32:59] <ck_> because it is, compared to the performance on linux
[22:33:55] <ck_> I don't disagree on the point that it shouldn't matter when you don't push every small change through the pipeline by itself -- but doing the same thing right now is much, much slower on macos than on linux with mcclim 
[22:34:52] <ck_> gilberth: take a look at these timings, for example https://github.com/McCLIM/McCLIM/issues/637
[22:34:53] -ixelp- significant efficiency problem with draw-pattern* · Issue #637 · McCLIM/McCLIM · GitHub
[22:36:01] <lotuseater> put on your seatbelts: https://plaster.tymoon.eu/view/2576#2576
[22:36:30] <gilberth> ck_: When I find the time and the needed network hw, I'll fire up my ancient X11R4 (four!) terminal. You can't really get slower than that museum piece. It's a VT1200.
[22:38:44] <gilberth> ck_: Sure. And while you scroll: Why bother sending stuff to the display server, which the user does not see anyway? And McCLIM --- when I left --- still had round trips in there, some put back by others. And round trips is what you really want to avoid.
[22:39:57] <lotuseater> gilberth: thx anyway on the tip with spatial trees, this graphic makes it clear to me: https://en.wikipedia.org/wiki/R-tree#/media/File:R-tree.svg
[22:40:50] <gilberth> Is that Lisp written manually?
[22:41:27] <lotuseater> I don't know. Something went wrong.
[22:41:42] <gilberth> What does PPRINT say?
[22:42:16] <lotuseater> also don't know
[22:42:38] <lotuseater> is just an example to show how it looks
[22:44:49] <gilberth> <https://termbin.com/khxb>
[22:45:44] <lotuseater> ah cool what did you use for achieving that?
[22:46:15] <gilberth> The listener with *print-pretty* = T, which I always have.
[22:46:24] <lotuseater> hmmm
[22:46:54] <gilberth> I just pasted the original as '<c-y> <RET> ;done
[22:48:22] <lotuseater> ok
[22:49:10] <ck_> gilberth: why did those round trips get put back?
[22:49:52] <ck_> you know, Lisp and the community are so infused with heroic tales of wondrous development in so short a timeframe, so few people, etc. etc.
[22:50:05] <ck_> it is disheartening to see these examples to the contrary
[22:57:04] <contrapunctus> aeth: I see.
[22:58:06] <contrapunctus> sm2n: Scuttlebutt is old, Earthstar is new, but Freenet is what I like best.
[23:24:05] <gilberth> ck_: I do that DRAW-PATTERN* benchmark you posted in just under 10ms.
[23:24:40] <gilberth> ck_: I am not the right person to ask, why they are put back. Perhaps it was too scary what I did.
[23:26:04] <gilberth> ck_: And this again is remote back to the house that wants to kill me, where my Linux box sits. ~40Mbps, Ping ~40ms.
[23:27:21] <gilberth> Which is silly to mention as draw-pattern* involves no network traffic at all. Why should it?
[23:35:55] <sm2n> contrapunctus, hmm, earthstar still does not seem to solve discovery, and freenet has the issue of scaling up afaik
[23:38:05] <shka> https://www.youtube.com/watch?v=FNAUuYmkMPE dude has funny ideas
[23:38:06] -ixelp- The Sorting Algorithm Olympics - Who is the Fastest of them All - YouTube
[23:57:14] *** Joins: silasfox (~sbv@2001-4dd6-abca-0-de39-b264-6870-a7ee.ipv6dyn.netcologne.de)
