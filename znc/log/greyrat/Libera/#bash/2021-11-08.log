[00:00:00] <Benway> since i'm in utf-8 locale
[00:00:28] <Benway> i look for chr()
[00:01:03] <Benway> very kind thank you osse
[00:01:23] *** Quits: xx (~xx@user/xx) (Remote host closed the connection)
[00:02:09] *** Joins: xx (~xx@user/xx)
[00:02:58] *** Quits: xx (~xx@user/xx) (Remote host closed the connection)
[00:03:21] *** Joins: xx (~xx@user/xx)
[00:03:42] <Benway> i just want a beep without needing to supply a .wav file :)
[00:03:49] <Benway> square wave and aplay is fine
[00:04:24] <Benway> so i can build some junk and invoke it with
[00:04:30] <Benway> echo -ne "$note" | aplay  --disable-softvol -t raw -M -N -q -q -f U8 --channels=1 --rate="$(( myrate ))"
[00:05:13] <Benway> remember /dev/dsp?  Prepperidge Farm remembers.
[00:05:17] *** Quits: Hercules (~Hercules@user/hercules) (Quit: Leaving)
[00:05:30] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[00:06:39] <emanuele6> there is a `play' tool
[00:06:48] <Benway> from sox
[00:06:52] <emanuele6> yes
[00:08:01] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 245 seconds)
[00:12:11] *** Quits: zro (~zro@user/zro) (Ping timeout: 268 seconds)
[00:12:22] *** Quits: datatech (~specter@user/datatech) (Quit: Lost terminal)
[00:14:00] *** Joins: zro (~zro@user/zro)
[00:17:52] *** Joins: rgrinberg (~textual@190.113.102.153)
[00:19:14] <Benway> # chr_utf8_echo $((32))
[00:19:15] <shbot> Benway: bash: chr_utf8_echo: command not found
[00:22:44] *** Quits: CaCode (~CaCode@user/cacode) (Quit: Leaving)
[00:22:50] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 260 seconds)
[00:23:16] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Ping timeout: 268 seconds)
[00:23:58] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[00:24:05] *** Quits: brettgilio (~brettgili@x-node.gq) (Quit: Leaving...)
[00:27:41] *** Joins: ni291187 (~u931732@5.18.252.242)
[00:28:33] *** Parts: ni291187 (~u931732@5.18.252.242) ()
[00:29:18] *** Joins: brettgilio (~brettgili@x-node.gq)
[00:30:00] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[00:31:49] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[00:33:38] *** Joins: lavaball (~Melissa@31.204.155.215)
[00:35:00] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[00:35:42] *** Joins: pj (~pj@ghettoforge/pj)
[00:38:36] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[00:40:12] *** Quits: wuseman (~wuseman@81-234-120-217-no68.tbcn.telia.com) (Ping timeout: 244 seconds)
[00:42:16] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 244 seconds)
[00:42:16] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 244 seconds)
[00:43:04] *** Inline_ is now known as Inline
[00:43:23] *** Joins: Betal (~Betal@user/betal)
[00:44:51] *** Quits: mei3 (~mei@user/mei) (Ping timeout: 244 seconds)
[00:45:49] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Quit: hyskaru)
[00:46:09] *** Quits: wigums (~wigums@user/wigums) (Read error: No route to host)
[00:51:32] *** Joins: wigums (~wigums@user/wigums)
[00:58:47] *** Quits: gordonfish- (~gordonfis@user/gordonfish) ()
[01:01:21] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[01:03:30] *** Quits: rgrinberg (~textual@190.113.102.153) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:04:56] <jcbjoe2021> What do you guys think of this command find / -iname "*.mp3" -type f -print0 | xargs -0 -I '{}' /usr/bin/rsync -avR "{}" /mnt/mp3/ it works fine. I can replace mv with cp or rsync
[01:09:32] *** Joins: iamGavinJ (~iamGavinJ@user/iamgavinj)
[01:12:27] *** Joins: s3uwu (~s3uwu@202-7-192-83.static.tpgi.com.au)
[01:12:36] <Paruza> I need to do something like   awk '/$PATH/ {print $1}'  but $path will have /'s is there a way to take a literal string from within the regex like that? or do I need to convert the string to an escaped form ahead of time
[01:15:56] *** Joins: zebrag (~chris@user/zebrag)
[01:16:12] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[01:16:34] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[01:17:07] <tirnanog> jcbjoe2021: it's ok but it's rather expensive. rsync has a --files-from option that would likely interest you. rsync -0 --files-from=<(find ... -print0) ...
[01:17:29] <tirnanog> by expensive, I mean in so far as it invokes rsync for every single pathname.
[01:18:58] <tirnanog> if you're using coreutils, there are other possible approaches, such as find ... -exec cp -a --parents -t /mnt/mp3 {} +
[01:19:12] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[01:19:51] *** Joins: dermoth (~dermoth@dsl-10-136-208.b2b2c.ca)
[01:20:15] *** Joins: zebrag (~chris@user/zebrag)
[01:20:39] <tirnanog> Paruza: no, there isn't. you could define an awk variable with -v and perform a substring match, however. the kind of functionality that you just described is offered by the likes of perl, not awk.
[01:20:47] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 264 seconds)
[01:21:10] *** Quits: magla (~gelignite@55d4a5c9.access.ecotel.net) (Quit: Stay safe!)
[01:21:40] <wiscii> tirnanog: wow .. how can you tell ?
[01:22:01] *** Joins: mikeliuk (~mikeliuk@213.205.198.125)
[01:22:38] <tirnanog> tell what?
[01:23:08] <wiscii> i'm looking at the question trying to work out what the goal is ..
[01:23:12] <tirnanog> oh.
[01:23:24] <tirnanog> the file copying question?
[01:23:35] <wiscii> Paruza's Q
[01:24:21] <tirnanog> actually, now that I read it again ...
[01:24:24] *** Joins: sdu (~doo@185.44.146.165)
[01:24:41] <John_Ivan> aarggggghhh fuuuckkk
[01:24:53] <wiscii> uo-oh
[01:25:19] <wiscii> stubbed toe !?!?
[01:25:22] <tirnanog> wiscii: basically, they were talking about effectively injecting the value of $PATH in code intended to be executed by awk. regardless of whether it's awk or something else, the moment you start doing code injection, there's scope for trouble.
[01:25:22] <osse> Paruza: awk -vre="blah/blah" '$0 ~ re'
[01:25:38] <John_Ivan> is there any way to capture keys in a bash script session? like, CTRL+Q?
[01:25:55] *** Quits: mikeliuk (~mikeliuk@213.205.198.125) (Client Quit)
[01:26:15] <tirnanog> wiscii: e.g. PATH is very likely going to contain the character, '/'. only that very same character terminates the regex so you've instantly got a problem.
[01:26:56] <wiscii> tirnanog: that is exactly what I thought but wasn't sure, so i asked :) thanks
[01:27:33] <tirnanog> the thing is, awk has functions that can perform substring matches, given the value of a variable, which could be specified with the -v option. so that's what I would suggest.
[01:27:41] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[01:28:26] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[01:28:53] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:29:43] *** Joins: kj (~kj@kj.aerisnetwork.net)
[01:30:03] *** Joins: pagetelegram (~pageteleg@2601:249:8301:4200::d0c4)
[01:30:05] *** Quits: pagetelegram (~pageteleg@2601:249:8301:4200::d0c4) (Client Quit)
[01:30:15] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: Textual IRC Client: www.textualapp.com)
[01:30:37] *** Joins: sebastorama (~sebastora@190.83.56.68)
[01:31:35] *** Joins: thiras (~thiras@user/thiras)
[01:31:50] *** Joins: pagetelegram (~pageteleg@2601:249:8301:4200::d0c4)
[01:32:24] *** Quits: pagetelegram (~pageteleg@2601:249:8301:4200::d0c4) (Client Quit)
[01:32:42] *** Quits: angkat (~angkat@2a02:587:121f:f103:7e7a:c8ae:bfec:cb23) (Quit: Leaving)
[01:33:17] *** Joins: pj (~pj@ghettoforge/pj)
[01:33:23] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[01:33:37] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[01:35:14] *** Joins: zebrag (~chris@user/zebrag)
[01:35:24] <jcbjoe2021> tirnanog: -O, --omit-dir-times        omit directories from --times? Or is that a 0 you posted?
[01:36:16] <tirnanog> jcbjoe2021: it was a zero, so as to inform rsync that the pathnames are NUL-delimited.
[01:36:20] <tirnanog> it does support that.
[01:37:07] <jcbjoe2021> Ok
[01:38:05] <jcbjoe2021> tirnanog: so rsync -0 —progress sourcedir destinationdir?
[01:38:12] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[01:38:27] <osse> how about rsync --include='*.mp3' ?
[01:39:38] <sixwheeledbeast> ^ this is how i do similar
[01:40:24] <jcbjoe2021> Ok I can do that osse
[01:40:26] <tirnanog> there's no sense in using -0 unles you're also going to use --files-from. if it's only ever going to be simple pattern such as *.mp3, then --include would also be good, yeah.
[01:40:45] * osse makes earnestly proud
[01:40:47] *** Quits: n4dir (~user@i59F77C3B.versanet.de) (Remote host closed the connection)
[01:40:47] <tirnanog> the -0 --files-from combo is very useful if you want to feed an arbitrary list of pathnames, however.
[01:41:53] <earnestly> --filter
[01:42:00] <earnestly> more --filter
[01:44:40] * wiscii has 'more --filter' shades
[01:44:46] <xx> just pray that they don't decide to make it possible to have nullbytes in filenames one day
[01:45:18] <wiscii> "they" ?
[01:45:30] *** Joins: dre (~dre@2001:8003:c932:c301:9f9c:b84c:cb51:c83)
[01:46:13] *** Quits: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk) (Read error: Connection reset by peer)
[01:46:32] *** Joins: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk)
[01:47:05] *** Quits: riles (~root@dhcp-24-53-243-12.cable.user.start.ca) (Ping timeout: 256 seconds)
[01:47:09] *** Quits: eschwartz (~eschwartz@archlinux/bugwrangler/eschwartz) (Ping timeout: 268 seconds)
[01:47:29] <xx> yes, *they*
[01:47:47] <xx> you know, tails and scaly skin
[01:48:16] * wiscii sudders
[01:48:27] * wiscii also shudders
[01:48:29] *** Joins: tobybl (~tobybl@213.31.135.91)
[01:48:33] <Benway> if i limit the range to between ascii 32 and 126 (decimal) it becomes quite doable \o/
[01:48:58] *** Quits: GNUHacker (~gnu@fsf/member/GNUHacker) (Quit: Leaving)
[01:50:49] <Benway> but i'd need to add 80 to each byte before piping to aplay
[01:52:52] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[01:55:00] *** Joins: riles (~root@dhcp-24-53-243-12.cable.user.start.ca)
[01:55:15] *** Quits: riles (~root@dhcp-24-53-243-12.cable.user.start.ca) (Read error: Connection reset by peer)
[01:55:41] *** Joins: riles (~root@dhcp-24-53-243-12.cable.user.start.ca)
[01:57:11] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 244 seconds)
[01:59:25] *** Joins: Echoz (~chris@user/echoz)
[01:59:44] *** Joins: eschwartz (~eschwartz@archlinux/bugwrangler/eschwartz)
[02:01:32] *** Quits: jonthesnow (~xizhendu@240e:305:7380:4300:22a3:ecb5:b567:7739) (Ping timeout: 260 seconds)
[02:02:44] <earnestly> xx: filesystem drivers can cope with that eventuality
[02:03:21] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[02:03:24] <earnestly> So it's not fundamentally impossible even today, it's just a VFS if statement away
[02:04:04] <jcbjoe2021> tirnanog: if I want filtetypes like mp3 m4v jpg and png does find . \( -iname ‘*.mp3’ -iname ‘*.m4v’ -iname ’*.jpg’ -iname’*.png’ \) does this work?
[02:04:07] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[02:04:25] *** Quits: l4yer (~l4yer@195.181.170.210) (Ping timeout: 244 seconds)
[02:05:10] <tirnanog> no, because all of those conditions are joined by an implied -a predicate (logical and). you would need to separate them with -o (logical or).
[02:05:57] *** Joins: mikeliuk (~mikeliuk@213.205.198.125)
[02:06:13] <wiscii> earnestly: would you mind expanding that $VFS for me please :)
[02:06:36] <tirnanog> -iname '*.foo' -iname '*.bar' is the same as -iname '*.foo' -a -name '*.bar'. obviously, that makes no sense, and wouldn't match anything.
[02:06:38] *** Quits: mikeliuk (~mikeliuk@213.205.198.125) (Client Quit)
[02:06:43] <earnestly> wiscii: https://en.wikipedia.org/wiki/Virtual_file_system
[02:06:53] <wiscii> ty
[02:07:06] *** Quits: pieguy128 (~pieguy128@bas1-quebec14-67-70-102-17.dsl.bell.ca) (Quit: ZNC 1.8.2 - https://znc.in)
[02:07:27] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-48-67-70-102-17.dsl.bell.ca)
[02:07:35] <wiscii> i read it as "Very F     Stupid if statement away"
[02:09:19] *** Quits: lavaball (~Melissa@31.204.155.215) (Remote host closed the connection)
[02:09:54] <jcbjoe2021> tirnanog: so separate each with -o ?
[02:09:59] <tirnanog> yes.
[02:10:04] <jcbjoe2021> Ok
[02:10:14] *** Joins: igemnace (~ian@user/igemnace)
[02:10:16] <tirnanog> this or that or ..
[02:11:08] <xx> or use bash globs
[02:11:19] <xx> instead of find
[02:12:00] <akoana> with gnu find you could also use   find . -regextype posix-egrep -regex '.*\.(jpg|png)'
[02:12:23] <akoana> ...something like that
[02:12:25] <sixwheeledbeast> --include-file
[02:12:26] <tirnanog> jcbjoe2021: as an aside, I think your IRC client is mangling single quotes, and possibly other characters. you might want to nip that in the bud to avoid any confusion at some later time.
[02:14:16] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 268 seconds)
[02:15:16] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Quit: Leaving)
[02:15:22] *** Joins: Tucker1914 (~KAs@209.161.248.138)
[02:15:51] <jcbjoe2021> tirnanog: I like what akoana has find . -regextype posix-egrep -regex '.*\.(jpg|png)' can I read more about this?
[02:16:32] <tirnanog> in the man/info pages for the GNU implementation of find. the info pages are better if you can stomach the info utility. otherwise, there's HTML documentation at the gnu.org website.
[02:17:15] <jcbjoe2021> Ok
[02:17:16] <tirnanog> https://www.gnu.org/software/findutils/manual/html_node/find_html/index.html
[02:17:41] <Tucker1914> wc -w << $name > count <--- how do i save the word count into the var count
[02:18:16] *** Quits: FreeBDSM (~uzer@user/freebdsm) (Quit: Leaving.)
[02:18:36] *** Joins: FreeBDSM (~uzer@broadband-188-32-167-53.ip.moscow.rt.ru)
[02:19:03] <Tucker1914> I also tried count=$((echo "$name" | wc -w)) but won't work
[02:19:12] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 268 seconds)
[02:19:13] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[02:19:33] <phy1729> !wc
[02:19:34] <greybot> wc(1) is a command that counts words, or lines, or characters in files. If you redirect the file as stdin, it doesn't print the name. Very useful. Example: if (( $(wc -l < "$file") > 10 )); then ...
[02:19:39] <Benway> Did you know that representing audio as printable ASCII (in bash) can give you maximal 39.46dB dynamic range vs a CD's 90dB?
[02:19:50] <phy1729> $(( is arithmetic substitution, you want $(
[02:20:08] <Tucker1914> ohh
[02:20:25] <phy1729> # a='foobar'; echo "${#a}"
[02:20:26] <shbot> phy1729: 6
[02:20:28] <Tucker1914> That works phys, thanks!
[02:20:37] <phy1729> you don't need wc at all
[02:20:38] <Tucker1914> why the # sign
[02:20:45] <phy1729> to get the length
[02:21:09] *** Quits: FreeBDSM (~uzer@broadband-188-32-167-53.ip.moscow.rt.ru) (Changing host)
[02:21:09] *** Joins: FreeBDSM (~uzer@user/freebdsm)
[02:21:31] *** Joins: rcernin (~rcernin@124.190.139.235)
[02:21:46] <tirnanog> I would not use command substitution for wc.
[02:22:03] <xx> I'm a bit surprised that << $name worked and <<< $name was not necessary
[02:22:28] *** Quits: FreeBDSM (~uzer@user/freebdsm) (Client Quit)
[02:22:28] <tirnanog> some implementations produce leading whitespace. read -r count < <(wc -w < "$name") is, thus, safer.
[02:22:45] *** Joins: FreeBDSM (~uzer@broadband-188-32-167-53.ip.moscow.rt.ru)
[02:22:58] <tirnanog> or, at least, be aware of it and trim the leading whitespace by whatever means.
[02:23:04] <phy1729> xx: it didn't
[02:23:18] *** Quits: FreeBDSM (~uzer@broadband-188-32-167-53.ip.moscow.rt.ru) (Changing host)
[02:23:18] *** Joins: FreeBDSM (~uzer@user/freebdsm)
[02:23:42] <Tucker1914> # name = "Peter Pan" : echo "${#name}"
[02:23:42] <shbot> Tucker1914: bash: name: command not found
[02:23:57] <phy1729> spaces aren't allowed for assignments
[02:23:59] <Tucker1914> # name ="Peter Pan" : echo "${#name}"
[02:23:59] <shbot> Tucker1914: bash: name: command not found
[02:24:04] *** Quits: FreeBDSM (~uzer@user/freebdsm) (Client Quit)
[02:24:04] <Tucker1914> # name="Peter Pan" : echo "${#name}"
[02:24:05] <shbot> Tucker1914: no output
[02:24:18] <Tucker1914> hmm
[02:24:18] *** Joins: FreeBDSM (~uzer@user/freebdsm)
[02:24:25] <phy1729> you mean ; not :
[02:24:27] <wiscii> s/:/;/
[02:24:38] <Tucker1914> # name="Peter Pan" ; echo "${#name}"
[02:24:39] <shbot> Tucker1914: 9
[02:24:47] <wiscii> \o/
[02:24:51] <Tucker1914> ok but i want the number of words
[02:24:55] <Tucker1914> not characters
[02:25:02] *** Quits: FreeBDSM (~uzer@user/freebdsm) (Client Quit)
[02:25:18] *** Joins: FreeBDSM (~uzer@broadband-188-32-167-53.ip.moscow.rt.ru)
[02:25:45] *** Quits: FreeBDSM (~uzer@broadband-188-32-167-53.ip.moscow.rt.ru) (Changing host)
[02:25:45] *** Joins: FreeBDSM (~uzer@user/freebdsm)
[02:25:47] <phy1729> # name="Peter Pan"; spaces="${name//+( )/ }"; echo $(( spaces + 1 ))
[02:25:48] <shbot> phy1729: bash: Peter Pan: syntax error in expression (error token is "Pan")
[02:25:52] <tirnanog> oh, I see what you were trying to do.
[02:25:59] <tirnanog> # name="Peter Pan"; read -r count < <(wc -w <<<"$name"); declare -p count
[02:25:59] <shbot> tirnanog: declare -- count="2"
[02:26:01] <phy1729> oh woops
[02:26:21] *** Quits: FreeBDSM (~uzer@user/freebdsm) (Client Quit)
[02:26:25] <tirnanog> but I would go with phy1729's solution.
[02:26:36] <phy1729> # name="Peter Pan"; spaces="${name//+( )/ }"; spaces="${spaces//!([^ ])/}; echo $(( spaces + 1 ))
[02:26:42] *** Joins: FreeBDSM (~uzer@user/freebdsm)
[02:26:42] <shbot> phy1729: Missing terminating quote, bracket or keyword
[02:26:48] <phy1729> # name="Peter Pan"; spaces="${name//+( )/ }"; spaces="${spaces//!([^ ])/}"; echo $(( spaces + 1 ))
[02:26:48] <shbot> phy1729: 1
[02:27:00] <phy1729> well drat, I don't extglob much
[02:28:03] <phy1729> # name="Peter Pan"; spaces="${name//+( )/ }"; spaces="${spaces//[^ ]/}"; echo $(( spaces + 1 ))
[02:28:04] <shbot> phy1729: 1
[02:28:21] <Tucker1914> lol that's some crptic stuff to count the # of words
[02:28:22] <tirnanog> not as simple as it looks, huh.
[02:28:30] <phy1729> # name="Peter Pan"; spaces="${name//+( )/ }"; spaces="${spaces//[^ ]/}"; echo $(( ${#spaces} + 1 ))
[02:28:31] <shbot> phy1729: 2
[02:28:34] <phy1729> there that
[02:28:50] <Tucker1914> i'll just use wc -w :/
[02:28:51] <tirnanog> # name=" Peter Pan"; spaces="${name//+( )/ }"; spaces="${spaces//[^ ]/}"; echo $(( ${#spaces} + 1 ))
[02:28:51] <shbot> tirnanog: 3
[02:28:58] <tirnanog> yeah, maybe using wc isn't so bad after all. heh.
[02:29:07] <phy1729> Tucker1914: if you want non-cryptic, shell is the wrong language
[02:29:08] <Tucker1914> ty
[02:29:25] <Tucker1914> well, i have to take the course since it's part of my required course :/
[02:29:41] <phy1729> oh no, schools invaribly teach shell poorlt
[02:30:48] * wiscii slaps head
[02:31:03] <Tucker1914> you're so damn right phy1729
[02:32:56] *** Joins: jrofd (~crombie@cpc127052-lewi23-2-0-cust30.2-4.cable.virginm.net)
[02:32:58] <xx> schools teach shell?
[02:33:05] <xx> I thought they just do java
[02:33:33] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 256 seconds)
[02:36:26] <Tucker1914> https://postimg.cc/f3BCBFyM
[02:36:32] <Tucker1914> can someone tell me why this is happening
[02:36:43] <Tucker1914> school teach shell/c++/java/python/javascript/php/etc
[02:38:02] <akoana> Tucker1914: while (( count < n)
[02:38:34] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[02:38:34] <akoana> ups forgot trailing )    while (( count < n))
[02:38:37] <Riviera> Tucker1914: < in [[ .. ]] compares lexicographically, not arithmetically.
[02:38:39] *** Joins: inomoz (~inomoz@176.59.125.26)
[02:40:00] <jetchisel> while (( count++ < n )); ...
[02:41:00] <Tucker1914> dang
[02:41:11] *** Quits: sebastorama (~sebastora@190.83.56.68) (Ping timeout: 264 seconds)
[02:41:19] <Tucker1914> i need to study on the difference bracket
[02:41:21] <tirnanog> and as for < in [ ] ... tee hee.
[02:41:23] <Tucker1914> how do i open the wiki
[02:41:33] <jetchisel> Tucker1914: /topic
[02:41:40] <Tucker1914> the faqs?
[02:41:53] <wiscii> s=' 1  2   3   '; echo \'"${s% *}"\'; echo \'"${s%% *}"\'
[02:41:59] <wiscii> # s=' 1  2   3   '; echo \'"${s% *}"\'; echo \'"${s%% *}"\'
[02:41:59] <shbot> wiscii: ' 1  2   3  '
[02:41:59] <shbot> wiscii: ''
[02:42:44] <wiscii> # s=' 1  2   3   '; echo \'"$s"\'; echo \'"${s% *}"\'; echo \'"${s%% *}"\'
[02:42:45] <shbot> wiscii: ' 1  2   3   '
[02:42:45] <shbot> wiscii: ' 1  2   3  '
[02:42:45] <shbot> wiscii: ''
[02:43:49] *** Joins: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com)
[02:43:50] *** Quits: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com) (Changing host)
[02:43:50] *** Joins: wuseman (~wuseman@user/wuseman)
[02:44:44] *** Joins: Guest7767 (~Guest77@176.98.31.10)
[02:45:18] *** Parts: Guest7767 (~Guest77@176.98.31.10) ()
[02:50:03] <Tucker1914> why does while [ $count -le $n ] need the $ sign but not while (( count <= n))
[02:52:17] <geirha> because (( )) is syntax, while [ is just a regular command
[02:52:41] <earnestly> Tucker1914: And as such it also means you need to properly quote the expansions with [
[02:53:54] *** Quits: lonewulf` (~lonewulf@user/lonewulf) (Quit: leaving)
[02:53:58] <wiscii> # f () { echo $#; }; s='  the quick brown fox jumps over the lazy dog !  '; f $s
[02:53:58] <shbot> wiscii: 10
[02:54:04] *** Quits: wuseman (~wuseman@user/wuseman) (Quit: ZNC 1.8.2+deb2build1 - https://znc.in)
[02:54:58] <geirha> # f() { echo $#; }; s='/* innocent comment */'; f $s
[02:54:58] <shbot> geirha: 14
[02:56:30] *** Joins: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com)
[02:56:31] *** Quits: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com) (Changing host)
[02:56:31] *** Joins: wuseman (~wuseman@user/wuseman)
[02:56:34] <wiscii> reliable and portable !!!
[02:57:12] <earnestly> It is portable, that's for sure
[02:58:18] <Tucker1914> hmmm
[02:58:29] *** Quits: tex (~super@user/dix) (Ping timeout: 256 seconds)
[02:58:52] <jcbjoe2021> Should I learn globs or regextype or are they the same a little or different all together?
[02:59:43] <geirha> with find, avoid regex all together
[03:00:02] <wiscii> learn this but not that ??
[03:00:04] <geirha> apart from that, learn the difference between globs, basic regular expressions, and extended regular expressions
[03:00:27] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:00:54] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[03:01:21] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 245 seconds)
[03:01:22] <akoana> geirha: what's bad about using regex with find?
[03:01:33] <geirha> -regex is a GNU extension to find, which is rarely needed, and for some reason they decided not to use any of the standard regex dialects (BRE and ERE), but instead some weird emacs dialect, by default
[03:01:43] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[03:02:23] *** Joins: datatech (~specter@user/datatech)
[03:02:31] <geirha> and the regex is implicitly anchored, which is also inconsistent with all other commands that use regex
[03:02:57] <akoana> -regextype lets you select the flavor, but well anchored ...
[03:03:34] <earnestly> None of the flavours are standard dialects, you can guess that awk is probably ERE
[03:03:35] <geirha> it's a badly designed extension to a badly designed command
[03:03:50] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 260 seconds)
[03:04:12] <earnestly> find doesn't look so bad when it's run under execve rather than a shell
[03:05:22] <akoana> geirha: does posix offer something better than find?
[03:06:05] <xx> wiscii: should probably quote the $#
[03:06:29] <akoana> or are there any decent alternatives for find?
[03:06:44] <xx> akoana: shell globs
[03:06:54] <xx> or fd (fd-find)
[03:07:16] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:07:21] <geirha> No, find is as good as it gets, but -name and -path are usually sufficient
[03:09:59] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 264 seconds)
[03:11:01] <Tucker1914> what does the {} bracket do?
[03:11:19] <geirha> depends on the context they're used in
[03:11:47] <Tucker1914> if it's sth like ${}
[03:11:57] <geirha> !${
[03:11:57] <greybot> Without curly braces parameter expansions refer to the longest valid variable name or shortest positional parameter. "${var}bar" expands the parameter named "var" while "$varbar" expands "varbar". "$123" references argv[1] and "${123}" references argv[123]. Braces are requried for parameters > 9, special PEs, and array expansions: ${10}, ${var##pat}, ${arr[5]}. BRACES AREN'T A SUBSTITUTE FOR QUOTES!
[03:12:15] <Benway> why is echo -ne swapping the byte order?
[03:12:23] <Benway> function mynote () {
[03:12:23] <Benway>   for (( i=32 ; i <126; i++ )); do
[03:12:23] <Benway>         printf "\x$(printf '%x' "$i")"
[03:12:23] <Benway>   done
[03:12:23] <Benway> bignote=$(mynote)
[03:12:23] <Benway> echo -ne "$bignote" > myfun3.raw
[03:12:24] <Benway> od -x myfun3.raw
[03:12:39] <geirha> it isn't, but od is
[03:12:48] <geirha> also, use printf, not echo
[03:12:52] <Benway> thank you for having pity on my brain
[03:12:58] <geirha> you want od -tx1
[03:12:58] <Benway> :)
[03:13:36] *** Quits: s3uwu (~s3uwu@202-7-192-83.static.tpgi.com.au) (Remote host closed the connection)
[03:14:11] *** Joins: pj (~pj@ghettoforge/pj)
[03:14:39] <wiscii> xx: if you quote you loose word splitting .. but then geirha blew a hole in that idea ! ;-)
[03:14:52] <wiscii> s/loose/lose/
[03:15:01] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:15:23] <xx> # IFS=0; f () { echo $#; }; s='  the quick brown fox jumps over the lazy dog !  '; f $s
[03:15:24] <shbot> xx: 1
[03:15:27] <xx> not just word splitting
[03:15:38] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[03:15:43] <wiscii> indeed
[03:15:45] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.3)
[03:15:49] <earnestly> If wordsplitting is the only answer then set +f will be part of the solution
[03:16:36] <geirha> but now you left the onlookers wondering if it split the string into 10, but then splitting on 0 turned it into 1, or that the string wasn't split at all so it was just 1
[03:16:53] <geirha> s/turned it/turned 10/
[03:16:54] <wiscii> rofl
[03:17:11] <Tucker1914> I still don't understand ${}
[03:17:13] <Tucker1914> w/e
[03:17:20] <xx> Tucker1914: give an example where you're trying to use it
[03:17:40] <wiscii> geirha: i meant no subtefuge .. 10 was correct for me
[03:17:41] <Tucker1914> i can't cause i dunno what it does
[03:18:07] <xx> geirha: ;)
[03:18:34] *** Joins: seninha (~seninha@user/seninha)
[03:18:37] <wiscii> Tucker1914: it splits strings by looking for patterns to split on
[03:18:50] *** Joins: s3uwu (~s3uwu@202-7-192-83.static.tpgi.com.au)
[03:19:05] *** Joins: mas (~mas@2600:6c52:7b00:77c9:fdfc:df6d:6f4a:ddca)
[03:19:08] <xx> # tucker=hello; isbest=world; echo "$tuckerisbest"
[03:19:09] <shbot> xx: no output
[03:19:16] <xx> # tucker=hello; isbest=world; echo "${tucker}isbest"
[03:19:17] <shbot> xx: helloisbest
[03:19:46] <xx> (a bit confusing perhaps, but it is what I meant to show)
[03:20:01] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:20:08] <geirha> the gotcha is usually _ which is allowed in variable names
[03:20:11] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 264 seconds)
[03:20:31] <geirha> # year=2021 month=11; echo "$year_$month"
[03:20:32] <shbot> geirha: 11
[03:20:38] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[03:20:45] <geirha> tries to expand a variable named "year_" instead of the variable named "year"
[03:20:52] <geirha> # year=2021 month=11; echo "${year}_$month"
[03:20:53] <shbot> geirha: 2021_11
[03:21:31] <wiscii> good example
[03:21:54] <wiscii> in that case they are use only where needed
[03:22:45] *** Joins: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com)
[03:22:45] *** Quits: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com) (Changing host)
[03:22:45] *** Joins: wuseman (~wuseman@user/wuseman)
[03:23:10] <Tucker1914> isn't that the same as $year_$month then
[03:23:29] <wiscii> no
[03:23:45] <wiscii> bash sees $yeer_ not $year
[03:24:00] <wiscii> sorry, $year_ not $year
[03:24:18] <Soliton> the example with $year_$month is literally a couple lines up.
[03:24:20] <Tucker1914> o
[03:24:27] <wiscii> because of how the line is interpreted
[03:25:57] <wiscii> Tucker1914: the thing to remember is this: any and all vars can be { } quoted .. but it is not needed all the time. it is needed when it is needed but you can use it all the time
[03:26:22] <Soliton> calling that quoting is very confusing.
[03:26:43] <wiscii> sorry .. noob to noob wording
[03:26:55] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[03:28:31] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 256 seconds)
[03:28:31] <xx> noob to noob communication XD
[03:28:34] *** Quits: mas (~mas@2600:6c52:7b00:77c9:fdfc:df6d:6f4a:ddca) (Quit: Client closed)
[03:29:13] <xx> just remember that ${somevar} is not quoting, but "${somevar}" is
[03:30:14] <wiscii> # y=21; m=11; echo "$y_$m"; echo "${y}_$m"; echo "$y-$m"
[03:30:14] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:30:14] <shbot> wiscii: 11
[03:30:15] <shbot> wiscii: 21_11
[03:30:15] <shbot> wiscii: 21-11
[03:30:39] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:30:55] <wiscii> yes, quoting was the insorrect word to use, suggestions welcome
[03:33:17] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 244 seconds)
[03:33:30] *** Joins: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com)
[03:33:30] *** Quits: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com) (Changing host)
[03:33:30] *** Joins: wuseman (~wuseman@user/wuseman)
[03:33:41] *** Quits: jsrnop6 (~mark@user/jsrnop) (Quit: The Lounge - https://thelounge.chat)
[03:34:09] *** Joins: jsrnop6 (~mark@user/jsrnop)
[03:35:19] <akoana> embraced parameter expansion ? ;)
[03:35:19] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[03:37:03] <wiscii> sounds like a hippy festival to me ;-)
[03:40:31] *** Quits: aidalgol (~aidalgol@user/aidalgol) (Ping timeout: 244 seconds)
[03:41:33] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[03:41:36] <wiscii> so, how about this: the var is enclosed in curly braces, therefore, it is `brencurlsed`
[03:41:50] *** Quits: goldfish_ (~goldfish@user/goldfish) (Ping timeout: 268 seconds)
[03:42:26] <xx> a confusing word, since curl and sed are both common commands
[03:42:39] <wiscii> oh yeah .. oops
[03:42:41] <xx> and one can definitely do curl | sed
[03:42:55] *** Joins: ano (~ano@user/ano)
[03:43:07] <xx> it probably has an official term for it already
[03:43:08] *** Joins: aidalgol (~aidalgol@user/aidalgol)
[03:43:21] <wiscii> i expect so
[03:43:38] <jcbjoe2021> Thanks geirha
[03:44:57] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 256 seconds)
[03:45:04] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[03:45:27] *** Joins: sgn (~sgn@user/sgn)
[03:46:16] *** Quits: s3uwu (~s3uwu@202-7-192-83.static.tpgi.com.au) (Remote host closed the connection)
[03:48:16] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 244 seconds)
[03:49:15] *** Joins: s3uwu (~s3uwu@202-7-192-83.static.tpgi.com.au)
[03:52:52] *** Quits: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se) (Read error: Connection reset by peer)
[03:54:04] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[03:54:35] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[03:54:42] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[03:56:00] *** Lord_of_Life_ is now known as Lord_of_Life
[03:57:19] *** Joins: ferdna (~ferdna@user/ferdna)
[03:57:33] *** Quits: edlou (uid413273@2a03:5180:f:1::6:4e59) (Quit: Connection closed for inactivity)
[03:58:30] *** Joins: wuseman (~wuseman@81-234-120-217-no68.tbcn.telia.com)
[03:58:30] *** Quits: wuseman (~wuseman@81-234-120-217-no68.tbcn.telia.com) (Changing host)
[03:58:30] *** Joins: wuseman (~wuseman@user/wuseman)
[03:58:31] *** Parts: FreeBDSM (~uzer@user/freebdsm) ()
[04:01:01] *** Joins: OpenBDSM (~FreeBDSM@user/freebdsm)
[04:01:21] *** Quits: fstd (~fstd@xdsl-87-79-44-169.nc.de) (Read error: Connection reset by peer)
[04:01:36] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:02:38] *** Joins: fstd (~fstd@xdsl-87-79-44-169.nc.de)
[04:02:49] *** Quits: OpenBDSM (~FreeBDSM@user/freebdsm) (Client Quit)
[04:08:41] *** Joins: rgrinberg (~textual@190.113.102.153)
[04:09:36] *** Quits: Inline (~Inline@2a02:908:1252:7a80:7e94:3856:5140:4361) (Ping timeout: 268 seconds)
[04:09:41] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 245 seconds)
[04:11:34] *** Joins: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se)
[04:13:35] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 244 seconds)
[04:15:28] *** Joins: Bhavuk (~BTaneja@2401:4900:5197:e83d:5884:fbab:2bcc:50f0)
[04:15:44] *** Joins: jonthesnow (~xizhendu@36.112.204.20)
[04:16:27] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[04:18:10] *** Joins: wuseman (~wuseman@81-234-120-217-no68.tbcn.telia.com)
[04:18:10] *** Quits: wuseman (~wuseman@81-234-120-217-no68.tbcn.telia.com) (Changing host)
[04:18:10] *** Joins: wuseman (~wuseman@user/wuseman)
[04:23:24] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 244 seconds)
[04:23:35] *** Joins: pj (~pj@ghettoforge/pj)
[04:24:09] *** Joins: sebastorama (~sebastora@190.83.56.68)
[04:26:27] *** Joins: wuseman (~wuseman@81-234-120-217-no68.tbcn.telia.com)
[04:26:28] *** Quits: wuseman (~wuseman@81-234-120-217-no68.tbcn.telia.com) (Changing host)
[04:26:28] *** Joins: wuseman (~wuseman@user/wuseman)
[04:26:54] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 260 seconds)
[04:29:16] *** Parts: ansimita (~ansimita@user/ansimita) ()
[04:30:56] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 245 seconds)
[04:30:59] *** Quits: John_Ivan (~John_Ivan@user/john-ivan/x-1515935) (Ping timeout: 264 seconds)
[04:32:06] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 260 seconds)
[04:36:16] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[04:36:46] *** Quits: sebastorama (~sebastora@190.83.56.68) (Ping timeout: 260 seconds)
[04:36:48] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:39:19] *** Joins: z14 (~alzee@157.136.233.35.bc.googleusercontent.com)
[04:39:37] *** Joins: sebastorama (~sebastora@190.83.56.68)
[04:40:43] *** Quits: s3uwu (~s3uwu@202-7-192-83.static.tpgi.com.au) (Remote host closed the connection)
[04:43:37] *** Joins: pj (~pj@ghettoforge/pj)
[04:49:22] *** Quits: timj (~timj@user/timj) (Ping timeout: 260 seconds)
[04:51:00] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[04:51:18] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[04:52:24] <Benway> behold!  warning beep in bash without a .wav file! http://0x0.st/-5f6.sh
[04:54:01] <Benway> it's a bit slow to generate the wave though
[04:54:22] <xx> probably a good idea to make those vars local
[04:54:27] *** Joins: totenkoph (~scythe@user/totenkoph)
[04:54:31] <Benway> thanks!
[04:54:50] <Benway> also i should store the up and down ramps as subvariables then append them - much faster than generating them
[04:55:08] <Benway> but it beeps in a semi-unobtrusive manner :)
[04:55:17] *** Joins: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com)
[04:55:18] *** Quits: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com) (Changing host)
[04:55:18] *** Joins: wuseman (~wuseman@user/wuseman)
[04:55:25] <Benway> subroutine
[04:56:09] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[05:00:36] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 244 seconds)
[05:00:45] <phy1729> printf \\007
[05:01:37] <Benway> they forgot to put a speaker on all my machines
[05:01:43] <Benway> and my vt100 broke
[05:02:59] *** Joins: timj (~timj@user/timj)
[05:03:01] <Benway> i don't understand how to make that work with subvariables
[05:03:13] <Benway> have to generate the whole wave in the nested loop then
[05:04:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[05:05:56] *** Quits: wolfshappen_ (~waff@irc.furworks.de) (Quit: later)
[05:08:44] <tirnanog> that's painfully slow. you should use C-style for loops rather than seq.
[05:09:16] <xx> also unless bash is the requirement, then sox would do this easier
[05:09:27] <tirnanog> you can also avoid a subshell with printf -v hex %x "$k" or such.
[05:11:52] *** Quits: indy (~indy@dsl-static-104.213-160-167.telecom.sk) (Quit: ZNC 1.8.2 - https://znc.in)
[05:12:46] <tirnanog> also, there's no need to apply arithemetical contexts unless it serves a purpose. k=$j would do just as well, but the variable doesn't need duplicating to begin with.
[05:19:16] <Benway> i couldnt get c-style working with step :(
[05:19:22] <Benway> need step
[05:19:29] <tirnanog> it can be done. one moment.
[05:19:49] <Benway> but see the cycles
[05:20:02] <Benway> best would be not running through those inner loops at all, since the ramps don't change
[05:20:22] <tirnanog> at any rate, this should work: https://termbin.com/u63e
[05:20:27] <Benway> if i could store those in $rampup and $rampdown
[05:20:30] *** Joins: superboot (~agentgasm@user/superboot)
[05:20:36] <Benway> just loop throught he inner loop once
[05:21:16] <Benway> thanks!
[05:22:12] <Benway> wow starts right away
[05:22:35] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 264 seconds)
[05:22:44] <tirnanog> heh.
[05:23:03] *** Joins: s3uwu (~s3uwu@202-7-192-83.static.tpgi.com.au)
[05:23:26] <tirnanog> you definitely want to steer clear of subshells in tight loops, where possible. that's at least half the battle.
[05:24:35] *** Joins: richardm75 (~richardm7@2600:8801:c50a:9f00:f019:f91f:691b:2425)
[05:25:24] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 244 seconds)
[05:26:11] *** Joins: N4buc0 (~N4buc0@2804:7f4:3487:cd22:5c68:8495:77fd:afa5)
[05:27:38] *** Quits: kurahaupo (~kurahaupo@123-243-221-134.tpgi.com.au) (Ping timeout: 260 seconds)
[05:28:26] *** Quits: mooz (~none@23.254.112.158) (Quit: rebooting)
[05:28:41] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[05:29:58] <Benway> now i have a high temp warning in my system monitor
[05:30:01] *** Quits: s3uwu (~s3uwu@202-7-192-83.static.tpgi.com.au) (Remote host closed the connection)
[05:30:08] <Benway> i'm unreasonably happy right now
[05:30:24] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:28] <tirnanog> aye. well, I don't think anyone would accuse bash of being efficient.
[05:30:52] *** Joins: kurahaupo (~kurahaupo@pa49-180-48-172.pa.nsw.optusnet.com.au)
[05:30:54] <tirnanog> count on it being slow and, if it's not being slow, it's probably not being efficient.
[05:31:07] *** Joins: kurahaupo_ (~kurahaupo@ppp122-115.static.internode.on.net)
[05:31:36] *** Quits: luva (~luva@45.141.152.54) (Ping timeout: 268 seconds)
[05:32:17] *** Joins: luva (~luva@146.70.62.254)
[05:34:46] <Benway> thanks again tirnanog - now i have system status without using up any space!  in the title bar :) http://0x0.st/-5fD.png
[05:34:56] *** Joins: pj (~pj@ghettoforge/pj)
[05:35:34] *** Quits: kurahaupo (~kurahaupo@pa49-180-48-172.pa.nsw.optusnet.com.au) (Ping timeout: 260 seconds)
[05:36:09] <tirnanog> that's a novel use of the title bar.
[05:36:44] <Benway> yep just background the bash script, sleep 3 sec.  low cpu use and updates often enough
[05:37:10] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[05:37:42] *** Joins: s3uwu (~s3uwu@202-7-192-83.static.tpgi.com.au)
[05:38:30] <Benway> and i get different beeps if mem or temp is critical
[05:38:37] <tirnanog> I see.
[05:39:03] <Benway> course i'll have to set the thresholds low for a few weeks to enjoy my glorious beeps :)
[05:39:03] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[05:41:09] *** Joins: darkstardev13 (~darkstard@50.39.114.152)
[05:43:56] *** Quits: darkstarx (~darkstard@gateway/vpn/pia/darkstardevx) (Ping timeout: 268 seconds)
[05:51:15] *** Joins: mooz (~none@23.254.112.158)
[05:52:11] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 245 seconds)
[05:59:18] *** Quits: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se) (Ping timeout: 260 seconds)
[06:00:49] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:02:28] *** Joins: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com)
[06:04:43] *** Quits: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com) (Read error: Connection reset by peer)
[06:04:53] *** Joins: pj (~pj@ghettoforge/pj)
[06:05:29] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[06:06:00] *** Quits: s3uwu (~s3uwu@202-7-192-83.static.tpgi.com.au) (Remote host closed the connection)
[06:08:28] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[06:09:06] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[06:09:23] *** Quits: chromis (sid150893@2a03:5180:f::2:4d6d) (Ping timeout: 264 seconds)
[06:09:23] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (Ping timeout: 264 seconds)
[06:09:50] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Client Quit)
[06:10:00] *** Joins: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com)
[06:10:27] *** Quits: holbrode (sid339826@id-339826.tinside.irccloud.com) (Ping timeout: 268 seconds)
[06:10:27] *** Quits: terabit (sid146285@id-146285.uxbridge.irccloud.com) (Ping timeout: 268 seconds)
[06:10:28] *** Quits: mnabid (uid448607@user/mnabid) (Ping timeout: 268 seconds)
[06:10:31] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Ping timeout: 245 seconds)
[06:10:35] *** Quits: kenyon (sid496813@id-496813.uxbridge.irccloud.com) (Ping timeout: 264 seconds)
[06:10:35] *** Quits: rubin55 (sid175221@2a03:5180:f:4::2:ac75) (Ping timeout: 264 seconds)
[06:10:35] *** Quits: nem (sid113421@user/nem) (Ping timeout: 264 seconds)
[06:10:35] *** Quits: hubvu (sid495858@user/hubvu) (Ping timeout: 264 seconds)
[06:11:05] *** Quits: eruditass (uid248673@id-248673.uxbridge.irccloud.com) (Ping timeout: 268 seconds)
[06:11:19] *** Joins: holbrode (sid339826@tinside.irccloud.com)
[06:11:21] *** Joins: hubvu (sid495858@user/hubvu)
[06:11:41] *** Quits: ljharb (sid43720@user/ljharb) (Ping timeout: 268 seconds)
[06:11:42] *** Quits: ullbeking (sid5364@user/ullbeking) (Ping timeout: 268 seconds)
[06:11:42] *** Quits: Pent (sid313808@2a03:5180:f:2::4:c9d0) (Ping timeout: 268 seconds)
[06:11:42] *** Quits: gajus (sid202456@id-202456.tinside.irccloud.com) (Ping timeout: 268 seconds)
[06:11:47] *** Quits: hwrd (sid64402@id-64402.lymington.irccloud.com) (Ping timeout: 264 seconds)
[06:11:51] *** Joins: wolfshappen (~waff@irc.furworks.de)
[06:12:18] *** Joins: Darkfoe__ (sid402081@helmsley.irccloud.com)
[06:12:18] *** Quits: pwillard (sid136981@2a03:5180:f:4::2:1715) (Ping timeout: 268 seconds)
[06:12:19] *** Quits: jakesyl_ (sid56879@2a03:5180:f:4::de2f) (Ping timeout: 268 seconds)
[06:12:19] *** Quits: Darkfoe_ (sid402081@2a03:5180:f:1::6:22a1) (Ping timeout: 268 seconds)
[06:12:19] *** Darkfoe__ is now known as Darkfoe_
[06:12:24] *** Joins: terabit (sid146285@uxbridge.irccloud.com)
[06:12:30] *** Joins: ullbeking (sid5364@user/ullbeking)
[06:12:35] *** Joins: eruditass (uid248673@uxbridge.irccloud.com)
[06:12:36] *** Joins: hwrd (sid64402@lymington.irccloud.com)
[06:12:39] *** Joins: ljharb (sid43720@user/ljharb)
[06:13:02] *** Joins: jakesyl_ (sid56879@hampstead.irccloud.com)
[06:13:20] *** Joins: rubin55 (sid175221@hampstead.irccloud.com)
[06:14:07] *** Joins: gajus (sid202456@tinside.irccloud.com)
[06:14:08] *** Joins: nem (sid113421@user/nem)
[06:14:21] *** Joins: pwillard (sid136981@hampstead.irccloud.com)
[06:14:21] *** Joins: sa (sid1055@tinside.irccloud.com)
[06:15:05] *** Joins: rustyshackleford (uid236774@helmsley.irccloud.com)
[06:15:10] *** Joins: kenyon (sid496813@uxbridge.irccloud.com)
[06:15:32] *** Joins: Pent (sid313808@lymington.irccloud.com)
[06:15:36] *** Joins: mnabid (uid448607@user/mnabid)
[06:15:44] *** Joins: chromis (sid150893@tinside.irccloud.com)
[06:17:30] *** Joins: ducky (~ducky@218-215-238-178.dyn.dodo.net.au)
[06:20:55] *** Quits: itok_ (sid418430@ilkley.irccloud.com) (Ping timeout: 260 seconds)
[06:21:06] *** Quits: wangledorf (sid505185@ilkley.irccloud.com) (Read error: Connection reset by peer)
[06:22:39] *** Joins: s3uwu (~s3uwu@202-7-192-83.static.tpgi.com.au)
[06:23:03] *** Quits: ullbeking (sid5364@user/ullbeking) (Ping timeout: 256 seconds)
[06:25:30] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[06:26:15] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[06:26:24] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Read error: Connection reset by peer)
[06:27:26] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[06:28:57] *** Quits: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com) (Ping timeout: 244 seconds)
[06:31:02] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[06:31:28] *** Joins: zaz\ (~zaz@poneybl.eu)
[06:31:37] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Read error: Connection reset by peer)
[06:31:57] *** Joins: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com)
[06:32:37] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[06:34:45] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:34:51] *** Quits: timj (~timj@user/timj) (Quit: Leaving.)
[06:35:18] *** Joins: ullbeking (sid5364@user/ullbeking)
[06:35:34] *** Joins: itok_ (sid418430@id-418430.ilkley.irccloud.com)
[06:36:20] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[06:36:40] <Benway> i added documentation and made it into ascii art http://0x0.st/-5Oz.sh
[06:37:16] *** Joins: wangledorf (sid505185@id-505185.ilkley.irccloud.com)
[06:37:56] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[06:40:29] *** Joins: pycurious (~Adium@user/pycurious)
[06:41:12] *** Joins: tomboy64 (~tomboy64@user/tomboy64)
[06:42:40] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[06:43:27] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Client Quit)
[06:43:32] <Tucker1914> w    if [[ $i=="Betty" ]]
[06:43:32] <Tucker1914>     then
[06:43:32] <Tucker1914>         echo "Welcome back Betty"
[06:43:54] <Tucker1914> what's wrong with this? :O
[06:44:11] <Tucker1914> oh nvm
[06:44:16] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 245 seconds)
[06:44:18] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[06:44:22] <tomboy64> i would like to store a bash script on a partition that's supposed to unmount that very partition upon its invocation. but the umount obviously fails because the file is still opened. suggestions?
[06:45:02] <Benway> don't do that?
[06:45:20] <tirnanog> yeah, don't do that is a good one. otherwise, umount -l (maybe).
[06:45:28] <tomboy64> but i wanna *stomps feet*
[06:45:35] <tomboy64> :D
[06:46:15] <Benway> script could copy itself to ram drive, kill parent and then unmount?
[06:46:19] <tomboy64> it's supposed to run a few extra commands afterwards and i intend to use it for a bunch of media
[06:46:39] <tomboy64> hmmmm
[06:46:42] <tomboy64> interesting
[06:47:02] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[06:47:27] *** Quits: itok_ (sid418430@id-418430.ilkley.irccloud.com) (Ping timeout: 268 seconds)
[06:47:54] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Read error: Connection reset by peer)
[06:48:41] *** Quits: ullbeking (sid5364@user/ullbeking) (Ping timeout: 268 seconds)
[06:48:52] <Tabmow> tomboy64: you can't store it anywhere else?
[06:48:59] *** Quits: wangledorf (sid505185@id-505185.ilkley.irccloud.com) (Ping timeout: 264 seconds)
[06:49:56] <tomboy64> Tabmow: those media will be attached on $random machines
[06:49:59] *** Joins: ullbeking (sid5364@user/ullbeking)
[06:50:08] <tomboy64> and i might need to customize them
[06:50:12] *** Joins: itok_ (sid418430@ilkley.irccloud.com)
[06:50:22] <tomboy64> $tmp seems to be a good suggestion
[06:52:38] *** Joins: wangledorf (sid505185@ilkley.irccloud.com)
[06:55:52] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[06:56:23] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Client Quit)
[06:57:01] *** Joins: pj (~pj@ghettoforge/pj)
[06:57:49] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[06:58:17] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Client Quit)
[06:58:48] *** Quits: s3uwu (~s3uwu@202-7-192-83.static.tpgi.com.au) (Ping timeout: 256 seconds)
[07:01:46] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:06:07] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:08:17] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[07:12:59] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 264 seconds)
[07:13:23] *** Quits: Tucker1914 (~KAs@209.161.248.138) (Ping timeout: 244 seconds)
[07:22:50] *** Joins: indy (~indy@dsl-static-104.213-160-167.telecom.sk)
[07:25:06] *** Joins: pj (~pj@ghettoforge/pj)
[07:25:33] *** Joins: zostj (~rue@1-162-45-243.dynamic-ip.hinet.net)
[07:28:30] *** Quits: jos1 (~jos3@dyndsl-095-033-175-047.ewe-ip-backbone.de) (Ping timeout: 260 seconds)
[07:29:49] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[07:30:01] *** Quits: indy (~indy@dsl-static-104.213-160-167.telecom.sk) (Ping timeout: 268 seconds)
[07:30:22] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Client Quit)
[07:31:59] *** Quits: rubin55 (sid175221@hampstead.irccloud.com) (Ping timeout: 244 seconds)
[07:32:11] *** Quits: Razva (sid17541@user/razva) (Ping timeout: 245 seconds)
[07:32:11] *** Quits: Manouchehri (sid384576@hampstead.irccloud.com) (Ping timeout: 245 seconds)
[07:32:11] *** Quits: eruditass (uid248673@uxbridge.irccloud.com) (Ping timeout: 256 seconds)
[07:32:14] *** Quits: BlueShark (sid10311@user/blueshark) (Ping timeout: 260 seconds)
[07:32:28] *** Quits: jsatk (sid304796@helmsley.irccloud.com) (Ping timeout: 268 seconds)
[07:32:30] *** Quits: xx (~xx@user/xx) (Ping timeout: 244 seconds)
[07:32:38] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[07:32:42] *** Quits: rustyshackleford (uid236774@helmsley.irccloud.com) (Ping timeout: 260 seconds)
[07:32:42] *** Quits: sa (sid1055@tinside.irccloud.com) (Ping timeout: 260 seconds)
[07:32:42] *** Quits: gajus (sid202456@tinside.irccloud.com) (Ping timeout: 260 seconds)
[07:32:42] *** Quits: termos (sid18647@helmsley.irccloud.com) (Ping timeout: 260 seconds)
[07:32:45] *** Quits: nescafe1001 (sid211018@tinside.irccloud.com) (Ping timeout: 256 seconds)
[07:32:47] *** Quits: shush (sid21719@tinside.irccloud.com) (Ping timeout: 264 seconds)
[07:32:54] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:33:01] *** Quits: mnabid (uid448607@user/mnabid) (Ping timeout: 244 seconds)
[07:33:01] *** Quits: nem (sid113421@user/nem) (Ping timeout: 244 seconds)
[07:33:01] *** Quits: hwrd (sid64402@lymington.irccloud.com) (Ping timeout: 244 seconds)
[07:33:01] *** Quits: starman_jr (sid265462@hampstead.irccloud.com) (Ping timeout: 245 seconds)
[07:33:05] *** Quits: ullbeking (sid5364@user/ullbeking) (Ping timeout: 268 seconds)
[07:33:10] *** Quits: ljharb (sid43720@user/ljharb) (Ping timeout: 260 seconds)
[07:33:10] *** Quits: d1rewolf (sid312924@helmsley.irccloud.com) (Ping timeout: 260 seconds)
[07:33:19] *** Quits: Pent (sid313808@lymington.irccloud.com) (Ping timeout: 256 seconds)
[07:33:19] *** Quits: kenyon (sid496813@uxbridge.irccloud.com) (Ping timeout: 256 seconds)
[07:33:19] *** Quits: pwillard (sid136981@hampstead.irccloud.com) (Ping timeout: 256 seconds)
[07:33:19] *** Quits: terabit (sid146285@uxbridge.irccloud.com) (Ping timeout: 256 seconds)
[07:33:19] *** Quits: odc (sid197788@helmsley.irccloud.com) (Ping timeout: 256 seconds)
[07:33:23] *** Quits: lilalinux (sid512618@tinside.irccloud.com) (Ping timeout: 264 seconds)
[07:33:37] *** Joins: eruditass (uid248673@id-248673.uxbridge.irccloud.com)
[07:33:38] *** Quits: Darkfoe_ (sid402081@helmsley.irccloud.com) (Ping timeout: 260 seconds)
[07:33:38] *** Quits: hubvu (sid495858@user/hubvu) (Ping timeout: 260 seconds)
[07:33:42] *** Quits: bitchin (sid516755@user/bitchin) (Ping timeout: 268 seconds)
[07:33:49] *** Joins: mnabid (uid448607@user/mnabid)
[07:33:51] *** Joins: hwrd (sid64402@2a03:5180:f:2::fb92)
[07:33:51] *** Joins: rubin55 (sid175221@2a03:5180:f:4::2:ac75)
[07:33:53] *** Quits: wangledorf (sid505185@ilkley.irccloud.com) (Ping timeout: 256 seconds)
[07:33:53] *** Quits: chromis (sid150893@tinside.irccloud.com) (Ping timeout: 256 seconds)
[07:33:53] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 256 seconds)
[07:33:53] *** Joins: nem (sid113421@user/nem)
[07:34:03] *** Joins: d1rewolf (sid312924@id-312924.helmsley.irccloud.com)
[07:34:07] *** Joins: BlueShark (sid10311@user/blueshark)
[07:34:09] *** Joins: rustyshackleford (uid236774@2a03:5180:f:1::3:9ce6)
[07:34:10] *** Joins: termos (sid18647@2a03:5180:f:1::48d7)
[07:34:10] *** Joins: ljharb (sid43720@user/ljharb)
[07:34:13] *** Joins: Darkfoe_ (sid402081@2a03:5180:f:1::6:22a1)
[07:34:18] *** Joins: Razva (sid17541@user/razva)
[07:34:20] *** Joins: gajus (sid202456@id-202456.tinside.irccloud.com)
[07:34:23] *** Joins: starman_jr (sid265462@id-265462.hampstead.irccloud.com)
[07:34:27] *** Joins: jsatk (sid304796@id-304796.helmsley.irccloud.com)
[07:34:29] <tomboy64> awesome
[07:34:29] *** Joins: pwillard (sid136981@2a03:5180:f:4::2:1715)
[07:34:32] *** Joins: odc (sid197788@id-197788.helmsley.irccloud.com)
[07:34:32] *** Joins: nescafe1001 (sid211018@id-211018.tinside.irccloud.com)
[07:34:32] *** Joins: wangledorf (sid505185@id-505185.ilkley.irccloud.com)
[07:34:34] *** Joins: chromis (sid150893@id-150893.tinside.irccloud.com)
[07:34:35] *** Joins: kenyon (sid496813@id-496813.uxbridge.irccloud.com)
[07:34:35] *** Joins: Pent (sid313808@id-313808.lymington.irccloud.com)
[07:34:38] *** Joins: shush (sid21719@id-21719.tinside.irccloud.com)
[07:34:39] *** Joins: ullbeking (sid5364@user/ullbeking)
[07:34:41] *** Joins: lilalinux (sid512618@2a03:5180:f::7:d26a)
[07:34:47] *** Joins: terabit (sid146285@id-146285.uxbridge.irccloud.com)
[07:34:51] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[07:34:56] *** Joins: Manouchehri (sid384576@id-384576.hampstead.irccloud.com)
[07:35:17] <tomboy64> invoking the copy with an argument allows me to differentiate between the original and the copy. and running via & absolves me of having to kill the parent.
[07:35:39] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:35:44] <tomboy64> and rm -v ${0} cleans up after itself
[07:35:50] <tomboy64> <3 mission accomplished
[07:36:04] <e36freak> !$0
[07:36:04] *** Joins: hubvu (sid495858@user/hubvu)
[07:36:04] <greybot> $0 is like argv[0] in C. It's whatever the caller decides to put there. You can't rely on it. See http://mywiki.wooledge.org/BashFAQ/028 and http://www.bash-hackers.org/wiki/doku.php/scripting/posparams#the_first_argument
[07:36:10] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 268 seconds)
[07:36:13] <e36freak> also braces are not a replacement for quotes
[07:36:14] *** Joins: Shortstop (~Shortstop@70.126.240.148)
[07:36:23] <tomboy64> yeah, i used quotes
[07:36:25] <tomboy64> too
[07:36:35] *** Joins: bitchin (sid516755@user/bitchin)
[07:37:03] <tomboy64> and the only one calling this script should be me. so if someone decides to alter that, that's on them
[07:37:20] <tomboy64> s/me/the script itself/
[07:40:01] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Client Quit)
[07:40:18] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:40:37] *** Joins: jos1 (~jos3@dyndsl-091-248-053-046.ewe-ip-backbone.de)
[07:42:34] *** Quits: Fjord (~Fjord@c-73-14-198-35.hsd1.co.comcast.net) (Quit: Ciao Ciao)
[07:43:55] *** Quits: Bhavuk (~BTaneja@2401:4900:5197:e83d:5884:fbab:2bcc:50f0) (Read error: Connection reset by peer)
[07:44:31] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[07:45:33] *** Joins: Bhavuk (~BTaneja@2401:4900:5197:e83d:d58a:a83a:dbd2:ce6b)
[07:47:16] *** Quits: rcernin (~rcernin@124.190.139.235) (Ping timeout: 268 seconds)
[07:50:21] *** Joins: kurahaupo (~kurahaupo@pa49-180-48-172.pa.nsw.optusnet.com.au)
[07:51:43] *** Quits: kurahaupo (~kurahaupo@pa49-180-48-172.pa.nsw.optusnet.com.au) (Read error: Connection reset by peer)
[07:51:57] *** Joins: kurahaupo (~kurahaupo@pa49-180-48-172.pa.nsw.optusnet.com.au)
[07:53:09] *** Quits: kurahaupo_ (~kurahaupo@ppp122-115.static.internode.on.net) (Ping timeout: 256 seconds)
[07:54:24] *** Quits: ducky (~ducky@218-215-238-178.dyn.dodo.net.au) (Remote host closed the connection)
[07:55:14] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[07:56:41] <Benway> probably not appropriate
[07:57:56] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:58:49] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 256 seconds)
[07:59:18] *** Quits: greknod28 (~grek@120.88.171.98) (Ping timeout: 260 seconds)
[08:01:38] *** Joins: rcernin (~rcernin@124.190.139.235)
[08:02:20] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:02:36] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[08:02:42] *** Joins: kurahaupo_ (~kurahaupo@123-243-221-134.tpgi.com.au)
[08:03:45] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:04:41] *** Quits: kurahaupo (~kurahaupo@pa49-180-48-172.pa.nsw.optusnet.com.au) (Ping timeout: 245 seconds)
[08:05:36] *** Joins: l4yer (~l4yer@195.181.170.210)
[08:08:20] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[08:08:26] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[08:08:37] *** Joins: pycurious (~Adium@user/pycurious)
[08:09:34] *** Quits: Shortstop (~Shortstop@70.126.240.148) (Quit: Connection closed)
[08:15:49] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[08:16:46] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[08:19:00] *** Quits: ponies (~ponies@61.69.203.88) (Remote host closed the connection)
[08:19:01] <jcbjoe2021> So what do I need more to know about globs. I know ! Is like a stop and won’t let you search for what your looking for I know ? Will only search one character I know that * will search everything before it or after it. Anything else?
[08:20:45] *** Quits: reset (~reset@user/reset) (Quit: reset)
[08:21:04] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 244 seconds)
[08:23:13] *** Joins: reset (~reset@user/reset)
[08:23:23] <tirnanog> in your case, man 7 glob should pretty much cover it.
[08:24:34] <tirnanog> although, it goes deeper if you want to use bash's extglobs.
[08:24:51] *** Joins: indy (~indy@dsl-static-104.213-160-167.telecom.sk)
[08:27:18] *** Quits: dsrt^ (~dsrt@h50.174.139.63.static.ip.windstream.net) (Ping timeout: 260 seconds)
[08:28:46] *** Joins: pycurious (~Adium@user/pycurious)
[08:35:42] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 260 seconds)
[08:42:42] *** Joins: annomy (~annomy@103.38.199.98)
[08:42:45] <hejux> # aa=(1 2 3) ; ab=(4 5 6) ; join=("${aa[@]}" "${ab[@]}") ; declare join
[08:42:45] <shbot> hejux: no output
[08:43:11] <hejux> # aa=(1 2 3) ; ab=(4 5 6) ; join=("${aa[@]}" "${ab[@]}") ; declare -p join
[08:43:11] <shbot> hejux: declare -a join=([0]="1" [1]="2" [2]="3" [3]="4" [4]="5" [5]="6")
[08:43:44] <hejux> oh no, i want join to be [0]="1 2 3" [1]="4 5 6"
[08:43:58] <hejux> is it possible
[08:44:08] <tirnanog> # aa=(1 2 3) ; ab=(4 5 6) ; join=("${aa[*]}" "${ab[*]}") ; declare -p join
[08:44:09] <shbot> tirnanog: declare -a join=([0]="1 2 3" [1]="4 5 6")
[08:44:22] <hejux> oh yeah
[08:44:30] <hejux> this is it
[08:44:33] <hejux> thank!
[08:51:16] <Benway> i think the thing about bash is so many people don't have time, or feel they have time, to sit down and study it like a programmer would C++
[08:51:46] <Benway> so most people look for the quick answer to get back to their other (often not programming) work
[08:52:06] <Benway> this must be frustrating for people who want to promote deeper understanding of it
[08:52:14] <tirnanog> correct.
[08:52:15] <hejux> people get quick answers and then learn.
[08:52:48] <hejux> people learn by writing their needed script, not buy reading the man pages without a purpose
[08:53:51] <Benway> but often investment in learning pays off in less time wasted years later
[08:53:57] <tirnanog> Benway: it's sometimes the case, also, that there is a sort of little language syndrome in effect. enter the hotshot that knows a 'real' programming languge and assumes that bash will somehow be beneath them.
[08:54:17] <tirnanog> those are the ones that usually get really angry and passive-agressive when they find that the shell works in ways that counfounds their preconceptions.
[08:54:45] *** Quits: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com) (Quit: ZNC 1.8.2+deb2build1 - https://znc.in)
[08:54:50] *** Joins: ^wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com)
[08:55:06] <Benway> i'm used to being confounded, so I don't have that problem!
[08:55:09] <tirnanog> heh heh.
[08:55:09] <hejux> how do i list all the array names that contain a key word?
[08:55:13] *** ^wuseman is now known as Guest5461
[08:55:26] <Benway> i just found i can call a function with ampesand! &  the beeping runs and my main loop continues
[08:55:28] <Benway> this is great
[08:56:23] <tirnanog> hejux: about the only thing you can do is parse the output of declare -a.
[08:58:17] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:58:35] <hejux> # aa=(1 2 3 p1_yes p2_no) ; bb=(4 5 6 p1_yes p2_yes)
[08:58:36] <shbot> hejux: no output
[08:58:48] <hejux> find the name of array that has p1_yes
[08:59:49] *** Quits: Guest5461 (~wuseman@81-234-125-122-no68.tbcn.telia.com) (Ping timeout: 244 seconds)
[09:01:07] *** Joins: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com)
[09:01:07] *** Quits: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com) (Changing host)
[09:01:07] *** Joins: wuseman (~wuseman@user/wuseman)
[09:01:12] <hejux> i'd use grep -Fw then cut -d= -f1
[09:01:24] <hejux> but that's too ugly
[09:01:41] <tirnanog> are your array elements always free of whitespace?
[09:02:00] <hejux> no spece in elements
[09:02:29] <hejux> those arrays are predefined, not grabbed from some dynamic files
[09:02:55] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 244 seconds)
[09:04:02] <tirnanog> I'm just wondering whether you'd be better off using an associative array with keys such as "aa" and "bb" and where the values are space-joined elements. that would make it easier, with the tradeoff being that you can't create a hash of arrays in bash, so it depends on how important it is to you that the existing elements are defined by real arrays.
[09:04:30] <tirnanog> otherwise, it's declare -a parsing, which may be brittle.
[09:05:05] <tirnanog> also, namerefs suck.
[09:05:08] <hejux> declare -a parses all the shell stuff too
[09:05:21] <tirnanog> yes, I know. that's why I'm making the suggestion that I'm making.
[09:05:48] <tirnanog> do they absolutely have to be arrays? your very first question (concerning subscripts) hinted that the answer might be no.
[09:06:22] <tirnanog> otherwise, I'd strong consider not using bash.
[09:06:25] <tirnanog> strongly*
[09:06:49] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 256 seconds)
[09:07:46] *** Quits: A|an (~Alan@173.216.51.200) (Quit: A|an)
[09:08:31] <tirnanog> # declare -A map=([aa]="1 2 3 p1_yes p2_no" [bb]="4 5 6 p1_yes p2_yes"); for key in "${!map[@]}"; do if [[ " ${map[$key]} " == *" p2_yes "* ]]; then echo "$key"; break; fi; done
[09:08:32] <shbot> tirnanog: bb
[09:09:17] <tirnanog> and you can still make arrays like: read -ra items <<<"${map[bb]}"
[09:09:25] <tirnanog> that's as good as it's going to get, I think.
[09:09:43] <emanuele6> while read -r; do type=$(declare -p "$REPLY" 2> /dev/null) type=${type#* } type=${type%% *}; if [[ $type = -*[Aa]* ]]; then printf '%s\n' "$REPLY"; fi done < <(compgen -v)
[09:09:52] <hejux> wonderful idea! tirnanog
[09:09:53] <emanuele6> this is how you can get all the array variables
[09:10:38] <tirnanog> ah, compgen. in that case, it could go one better.
[09:12:40] <hejux> can compgen -v print only arrays inside the script?
[09:13:20] <tirnanog> # a=(); b=; c=(); while read -r name; do if [[ $name == ? && ${!name@A} == *a* ]]; then echo "$name is an array"; fi; done < <(compgen -v)
[09:13:21] <shbot> tirnanog: _ is an array
[09:13:21] <shbot> tirnanog: a is an array
[09:13:21] <shbot> tirnanog: c is an array
[09:13:28] <emanuele6> the whole command line prints the names of all the arrays and associative arrray variables
[09:13:58] <tirnanog> # a=(); b=; c=(); while read -r name; do if [[ $name == [abc] && ${!name@A} == *a* ]]; then echo "$name is an array"; fi; done < <(compgen -v)
[09:13:59] <shbot> tirnanog: a is an array
[09:13:59] <shbot> tirnanog: c is an array
[09:14:02] <tirnanog> that demosntrates the point better.
[09:14:40] <tirnanog> still, namerefs suck.
[09:14:42] <emanuele6> you should just graduate if you need something like this not for a completion script.
[09:14:50] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 260 seconds)
[09:16:13] *** Joins: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com)
[09:16:13] *** Quits: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com) (Changing host)
[09:16:13] *** Joins: wuseman (~wuseman@user/wuseman)
[09:16:22] <emanuele6> tirnanog:  ${!name@A} == *a*  is not a good way to check if !name is an array
[09:16:24] *** Joins: analoq (~yashi@user/dies)
[09:17:50] <tirnanog> I meant @a
[09:17:58] <Benway> did you see i generated chars 1-255 without that very confusing bash faq 71 emanuele6 ?
[09:18:27] <tirnanog> just tired and forgot the distinction.
[09:19:18] <emanuele6> oh, i didn't know about that one
[09:19:27] <emanuele6> Benway: what are you talking about?
[09:19:33] <emanuele6> !faq 71
[09:19:33] <greybot> https://mywiki.wooledge.org/BashFAQ/071 -- How do I convert an ASCII character to its decimal (or hexadecimal) value and back? How do I do URL encoding or URL decoding?
[09:19:46] <tirnanog> well, I'm glad you brought it up anyway. I might not have noticed the mistake, as I'm nodding off.
[09:20:22] <emanuele6> still accessing arrays by reference is hard
[09:21:20] *** Joins: namkeles (~namkeles@101.175.87.176)
[09:22:33] <emanuele6> ah, not that hard: you need to do something like  a=REPLY[@]  and   ${!a}
[09:23:07] <emanuele6> err $REPLY
[09:23:40] <tirnanog> it's all doable in this instance. it would just be ugly. a map of space-delimited strings might be more pleasing, depending on what else is going on.
[09:24:42] *** Joins: loganlee (~Thunderbi@user/loganlee)
[09:24:52] <emanuele6> while read -r; do [[ ${!REPLY@a} = *[Aa]* ]] || continue; t=$REPLY[@]; for v in "${!t}"; do if [[ $v == p1_yes ]]; then printf '%s\n' "$REPLY"; continue 2; fi; done; done < <(compgen -v)
[09:25:08] *** Quits: indy (~indy@dsl-static-104.213-160-167.telecom.sk) (Ping timeout: 244 seconds)
[09:25:30] <emanuele6> ^ this ^  prints the variable name of all the array or associative array variables that contain p1_yes
[09:26:28] *** Quits: ztx (~ztx@user/ztx) (Ping timeout: 252 seconds)
[09:27:18] *** Joins: ztx (~ztx@user/ztx)
[09:28:33] *** Quits: iamGavinJ (~iamGavinJ@user/iamgavinj) (Quit: iamGavinJ)
[09:29:16] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:29:27] <tirnanog> the way in which it interacts with associative array variables isn't going to applicable but yes.
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:30:03] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (Ping timeout: 256 seconds)
[09:30:53] <emanuele6> you mean?   declare -A map=([aa]="1 2 3 p1_yes p2_no" [bb]="4 5 6 p1_yes p2_yes");
[09:31:02] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:31:35] <tirnanog> in that event, yes. and if not, there's no need to match the A attribute, basically.
[09:32:10] *** Quits: dre (~dre@2001:8003:c932:c301:9f9c:b84c:cb51:c83) (Remote host closed the connection)
[09:32:36] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 245 seconds)
[09:33:04] <tirnanog> that is, unless goes for a third - perhaps unorthodox - way: declare -A aa=([1]= [2]= [3]= [p1_yes]= [p2_no]=) ...
[09:34:25] <emanuele6> # declare -A aa=([1]= [p1_yes]=); t=!aa[@]; echo "${!t}"
[09:34:25] <shbot> emanuele6: bash: !aa[@]: invalid variable name
[09:34:27] <tirnanog> a bit weird. still stuck with compgen -v parsing but would speed up the search for the needle among the proverbial haystack.
[09:34:59] *** Quits: Benett (~Benett@2a03:4000:1a:7aa::2) (*.net *.split)
[09:34:59] *** Quits: vancz (~vancz@user/vancz) (*.net *.split)
[09:34:59] *** Quits: bradp- (~bradp@cpe-70-92-7-182.wi.res.rr.com) (*.net *.split)
[09:34:59] *** Quits: ParkerR (ParkerR@znc.withg.org) (*.net *.split)
[09:34:59] *** Quits: mstruebing (~maex@2001:41d0:8:93c7::1) (*.net *.split)
[09:34:59] *** Quits: bwe (~bwe@2a01:4f8:1c1c:4878::2) (*.net *.split)
[09:34:59] *** Quits: dkeohane2 (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com) (*.net *.split)
[09:34:59] *** Quits: Baggypants (~baggypant@cpc94362-ward12-2-0-cust376.10-2.cable.virginm.net) (*.net *.split)
[09:34:59] *** Quits: userdocs (~userdocs@78.141.217.143) (*.net *.split)
[09:34:59] *** Quits: Friithian (gunqqer@friithian.dev) (*.net *.split)
[09:34:59] *** Quits: mkoskar (~mkoskar@user/mkoskar) (*.net *.split)
[09:34:59] *** Quits: mteo (francis@user/francis) (*.net *.split)
[09:34:59] *** Quits: Soliton (~Soliton@wesnoth/developer/soliton) (*.net *.split)
[09:34:59] *** Quits: thib (~thib@wikimedia/Thibaut120094) (*.net *.split)
[09:35:06] *** Joins: mteo (francis@user/francis)
[09:35:07] *** Joins: bwe (~bwe@2a01:4f8:1c1c:4878::2)
[09:35:09] *** Joins: Friithian (gunqqer@172.104.26.74)
[09:35:10] *** Joins: ParkerR (~ParkerR@znc.withg.org)
[09:35:15] *** Joins: Soliton (~Soliton@wesnoth/developer/soliton)
[09:35:16] *** Joins: mstruebing (~maex@2001:41d0:8:93c7::1)
[09:35:16] *** Joins: Baggypants (~baggypant@2001:470:1f09:349::baad:daad)
[09:35:16] *** Joins: bradp (~bradp@cpe-70-92-7-182.wi.res.rr.com)
[09:35:18] *** Joins: vancz (~vancz@user/vancz)
[09:35:19] <emanuele6> i don't think you can iterate by key an associative array via a nameref
[09:35:21] *** Joins: thib (~thib@wikimedia/Thibaut120094)
[09:35:33] *** Joins: mkoskar (~mkoskar@user/mkoskar)
[09:35:34] *** Joins: Benett (~Benett@2a03:4000:1a:7aa::2)
[09:35:46] *** Joins: dkeohane2 (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com)
[09:37:16] *** Joins: userdocs (~userdocs@78.141.217.143)
[09:37:17] <tirnanog> # declare -A aa=([1]= [p1_yes]=); declare -n t=aa; echo "${!t[@]}"
[09:37:17] <shbot> tirnanog: p1_yes 1
[09:37:23] *** Quits: N4buc0 (~N4buc0@2804:7f4:3487:cd22:5c68:8495:77fd:afa5) (Remote host closed the connection)
[09:37:44] <emanuele6> wow
[09:37:47] *** Joins: N4buc0 (~N4buc0@2804:7f4:3487:cd22:5c68:8495:77fd:afa5)
[09:39:00] <emanuele6> then my code doesn't actually work with associative arrays, yes
[09:39:05] <emanuele6> only for regular arrays
[09:39:18] <emanuele6> you need different code to also support associative arrays
[09:39:37] <tirnanog> yeah.
[09:40:24] <tirnanog> and, naturally, different between the "values are space-delimited items" vs "keys are the values" approach.
[09:40:38] <tirnanog> anyway, time to retire. ciao.
[09:40:54] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[09:42:53] *** Quits: nvz (~user@nvz.farted.online) (*.net *.split)
[09:42:53] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (*.net *.split)
[09:42:53] *** Quits: dngray[m] (~dngray@user/dngray) (*.net *.split)
[09:42:53] *** Quits: Celeste[m] (~sleprainb@2001:470:69fc:105::3f4a) (*.net *.split)
[09:42:53] *** Quits: go4godvin (~go4godvin@user/go4godvin) (*.net *.split)
[09:42:53] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (*.net *.split)
[09:42:53] *** Quits: ormaaj (~ormaaj@user/ormaaj) (*.net *.split)
[09:42:53] *** Quits: akaporu (~akaporu@hs17.make2.me) (*.net *.split)
[09:42:53] *** Quits: tabakhase (tabakhase@user/tabakhase) (*.net *.split)
[09:42:53] *** Quits: Camusensei (~Camusense@megaman.thican.net) (*.net *.split)
[09:42:53] *** Quits: Bayes (~Bayes@user/bayes) (*.net *.split)
[09:42:54] *** Quits: compuguy (ahall@user/compuguy) (*.net *.split)
[09:42:54] *** Quits: topoi (~topoi@user/topoi) (*.net *.split)
[09:42:54] *** Quits: chronon (~chronon@user/chronon) (*.net *.split)
[09:42:54] *** Quits: edr (~edr@user/edr) (*.net *.split)
[09:42:54] *** Quits: damyan^ (damyan@mail.0x4711.org) (*.net *.split)
[09:42:54] *** Quits: Philonous_ (~Philonous@user/philonous) (*.net *.split)
[09:42:54] *** Quits: strudl (~strudl@user/strudl) (*.net *.split)
[09:42:54] *** Quits: sven^ (~quassel@squint.a-oben.org) (*.net *.split)
[09:42:54] *** Quits: twkm (twkm@rfc1459.net) (*.net *.split)
[09:42:54] *** Quits: LambdaComplex (~adam@wireguard/tunneler/lambdacomplex) (*.net *.split)
[09:42:54] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (*.net *.split)
[09:42:54] *** Quits: chymera (~chymera@ns1000526.ip-51-81-46.us) (*.net *.split)
[09:43:03] *** Joins: Camusensei (~Camusense@megaman.thican.net)
[09:43:06] *** Joins: twkm (twkm@rfc1459.net)
[09:43:06] *** Joins: edr (~edr@enlo.co)
[09:43:06] *** Joins: nvz (~user@nvz.farted.online)
[09:43:07] *** Joins: chronon (~chronon@user/chronon)
[09:43:08] *** Joins: akaporu (~akaporu@hs17.make2.me)
[09:43:11] *** Joins: sven^ (~quassel@squint.a-oben.org)
[09:43:13] *** Joins: compuguy (ahall@user/compuguy)
[09:43:17] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[09:43:17] *** Quits: edr (~edr@enlo.co) (Changing host)
[09:43:17] *** Joins: edr (~edr@user/edr)
[09:43:24] *** Joins: topoi (~topoi@user/topoi)
[09:43:24] *** Joins: strudl (~strudl@tvarohova.strud.la)
[09:43:25] *** Quits: strudl (~strudl@tvarohova.strud.la) (Changing host)
[09:43:25] *** Joins: strudl (~strudl@user/strudl)
[09:43:25] *** Joins: tabakhase (~tabakhase@irc.s.bitase.net)
[09:43:26] *** Joins: damyan^ (damyan@mail.0x4711.org)
[09:43:30] *** Quits: tabakhase (~tabakhase@irc.s.bitase.net) (Changing host)
[09:43:30] *** Joins: tabakhase (~tabakhase@user/tabakhase)
[09:43:46] *** Joins: Philonous (~Philonous@user/philonous)
[09:43:48] *** Joins: chymera (~chymera@ns1000526.ip-51-81-46.us)
[09:43:50] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[09:44:03] *** Joins: Bayes (~Bayes@user/bayes)
[09:44:03] *** Joins: LambdaComplex (~adam@wireguard/tunneler/lambdacomplex)
[09:45:25] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[09:46:42] *** Joins: pycurious (~Adium@user/pycurious)
[09:46:42] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[09:47:36] *** Joins: go4godvin (~go4godvin@user/go4godvin)
[09:50:50] *** Joins: dngray[m] (~dngray@user/dngray)
[09:51:01] *** Joins: vysn (~vysn@user/vysn)
[09:51:36] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[09:57:35] *** Joins: Celeste[m] (~sleprainb@2001:470:69fc:105::3f4a)
[10:00:27] *** Quits: wuseman (~wuseman@user/wuseman) (Read error: Connection reset by peer)
[10:03:51] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[10:04:15] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[10:04:18] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[10:04:37] *** Joins: sazawal (~sazawal@2409:4043:251d:d661:2c5c:4d74:79ab:af5c)
[10:04:44] *** Quits: sazawal (~sazawal@2409:4043:251d:d661:2c5c:4d74:79ab:af5c) (Remote host closed the connection)
[10:07:01] *** Joins: tex (~super@user/dix)
[10:11:09] *** Joins: indy (~indy@dsl-static-104.213-160-167.telecom.sk)
[10:12:48] <Benway> is being able to 'background' functions a 'new' thing? (past 8 years)
[10:13:41] *** Quits: unclutter (~gentoo@60.81-166-246.customer.lyse.net) (Ping timeout: 256 seconds)
[10:16:14] *** Joins: dre (~dre@2001:8003:c932:c301:a62b:d5d5:737b:8c68)
[10:17:44] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[10:21:22] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[10:21:49] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[10:24:48] *** Quits: rgrinberg (~textual@190.113.102.153) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:27:55] *** Joins: Armanzor (~Armanzor@user/armanzor)
[10:30:58] *** Quits: saki (~saki@gateway/tor-sasl/saki) (Remote host closed the connection)
[10:31:06] <emanuele6> no
[10:31:25] *** Joins: saki (~saki@gateway/tor-sasl/saki)
[10:31:43] <emanuele6> a_function &    simply runs a subshell in the background in which `a_function' is run
[10:31:58] <emanuele6> it doesn't have to a be a function and it doesn't have to be a simple command either
[10:32:38] <emanuele6> if { echo a; echo b ;} | grep .; then echo c; else echo f; fi &
[10:32:50] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[10:35:20] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[10:35:46] *** Joins: mtk_ (~mtk@2601:185:200:72:44aa:53fe:886b:bee9)
[10:36:12] *** Quits: mtk (~mtk@2601:185:200:72:44aa:53fe:886b:bee9) (Read error: Connection reset by peer)
[10:38:32] *** Joins: mtk__ (~mtk@2601:185:200:72:44aa:53fe:886b:bee9)
[10:38:47] *** Quits: mtk_ (~mtk@2601:185:200:72:44aa:53fe:886b:bee9) (Read error: Connection reset by peer)
[10:39:11] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[10:39:41] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[10:41:12] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[10:42:23] *** Quits: nutron|wirk (~nutron@66.51.134.122) (Read error: Connection reset by peer)
[10:44:11] <Benway> i have been looking for some way to get a terminal bell to invoke my beep function
[10:44:28] <Benway> without using pulseaudio's solution
[10:45:22] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Client Quit)
[10:46:59] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[10:47:19] <Benway> A lot of layers interact with terminal bell.  X, terminal emulator, desktop environment (gnome) and if you have it, pulseaudio.  Alsa supplies pcspkr but is that support for the x86 pc hardware speaker?
[10:48:55] *** Quits: namkeles (~namkeles@101.175.87.176) (Quit: Client closed)
[10:49:21] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 244 seconds)
[10:49:33] *** Joins: indy_ (~indy@dsl-static-104.213-160-167.telecom.sk)
[10:49:52] *** Quits: indy (~indy@dsl-static-104.213-160-167.telecom.sk) (Ping timeout: 244 seconds)
[10:50:36] *** Joins: Mo (~Mo@dynamic-095-116-198-173.95.116.pool.telefonica.de)
[10:52:22] *** Joins: sarantos (~sarantos@2a02:587:3431:f3d7:7990:f181:6ff:9756)
[10:53:23] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[10:54:21] *** Joins: lainon (~lainon@107.127.52.146)
[10:55:52] *** Quits: lainon (~lainon@107.127.52.146) (Remote host closed the connection)
[10:56:26] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[10:57:39] *** Joins: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com)
[10:59:45] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[11:00:22] *** Joins: nutron|wirk (~nutron@66.51.134.122)
[11:02:02] *** Quits: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com) (Ping timeout: 240 seconds)
[11:02:50] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Client Quit)
[11:03:12] *** Quits: totenkoph (~scythe@user/totenkoph) (Remote host closed the connection)
[11:03:25] *** Joins: pycurious (~Adium@user/pycurious)
[11:03:27] *** Joins: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com)
[11:03:27] *** Quits: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com) (Changing host)
[11:03:27] *** Joins: wuseman (~wuseman@user/wuseman)
[11:03:43] *** Joins: totenkoph (~scythe@user/totenkoph)
[11:06:05] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[11:06:42] *** Joins: lainon (~lainon@107.127.52.146)
[11:07:32] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 240 seconds)
[11:08:49] *** Joins: tobybl (~tobybl@213.31.135.91)
[11:09:31] *** Quits: lainon (~lainon@107.127.52.146) (Remote host closed the connection)
[11:13:13] <hejux> # decalre -A a=( [name]="home" [ip]="100" ) ; declare -A b=( [name]="office" [ip]="200" ) ; places=(a b) ; for i in ${places[@]} ; do echo "${i[name]} ${i[ip]}" ; done
[11:13:14] <shbot> hejux: bash: syntax error near unexpected token `('
[11:14:17] <hejux> what error?
[11:14:23] *** Quits: N4buc0 (~N4buc0@2804:7f4:3487:cd22:5c68:8495:77fd:afa5) (Remote host closed the connection)
[11:14:38] <hejux> # declare -A a=( [name]="home" [ip]="100" ) ; declare -A b=( [name]="office" [ip]="200" ) ; places=(a b) ; for i in ${places[@]} ; do echo "${i[name]} ${i[ip]}" ; done
[11:14:38] <shbot> hejux: a a
[11:14:38] <shbot> hejux: b b
[11:14:48] *** Joins: N4buc0 (~N4buc0@2804:7f4:3487:cd22:5c68:8495:77fd:afa5)
[11:15:08] *** Joins: lavaball (felix@31.204.155.215)
[11:15:21] <hejux> emm... not what i expected
[11:15:52] <hejux> result should be : home 100 \n office 200
[11:16:01] *** Quits: kurahaupo_ (~kurahaupo@123-243-221-134.tpgi.com.au) (Ping timeout: 256 seconds)
[11:17:52] <osse> !faq indirection
[11:17:52] <greybot> osse: No matches found at https://mywiki.wooledge.org/BashFAQ
[11:17:56] <osse> !faq indirect
[11:17:56] <greybot> https://mywiki.wooledge.org/BashFAQ/006 -- How can I use variable variables (indirect variables, pointers, references) or associative arrays?
[11:18:24] *** Joins: kurahaupo (~kurahaupo@123-243-221-134.tpgi.com.au)
[11:19:22] *** Quits: N4buc0 (~N4buc0@2804:7f4:3487:cd22:5c68:8495:77fd:afa5) (Remote host closed the connection)
[11:19:22] <osse> i becomes the values 'a' and 'b', but you can't directly use the values as variable names
[11:19:37] <hejux> yes
[11:19:54] *** Joins: N4buc0 (~N4buc0@2804:7f4:3487:cd22:5c68:8495:77fd:afa5)
[11:21:02] *** Quits: shbot (~shbot@37.139.2.101) (Remote host closed the connection)
[11:21:04] <osse> # declare -A a=( [name]="home" [ip]="100" ) ; declare -A b=( [name]="office" [ip]="200" ) ; places=(a b) ; for i in ${places[@]} ; do typeset -n m=$i; echo "${m[name]} ${m[ip]}" ; done
[11:21:12] *** Joins: shbot (~shbot@37.139.2.101)
[11:21:58] <hejux> # declare -A a=( [name]="home" [ip]="100" ) ; declare -A b=( [name]="office" [ip]="200" ) ; places=(a b) ; for i in ${places[@]} ; do echo "${!i[name]} ${!i[ip]}" ; done
[11:21:58] <shbot> hejux:
[11:22:23] <osse> # declare -A a=( [name]="home" [ip]="100" ) ; declare -A b=( [name]="office" [ip]="200" ) ; places=(a b) ; for i in ${places[@]} ; do typeset -n m=$i; echo "${m[name]} ${m[ip]}" ; done
[11:22:24] <shbot> osse: home 100
[11:22:24] <shbot> osse: office 200
[11:23:05] <hejux> not able to use ${!i}?
[11:23:53] <osse> not with arrays
[11:23:56] *** Quits: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795) (Remote host closed the connection)
[11:25:18] *** indy_ is now known as indy
[11:25:35] *** Quits: somlis (~somlis@user/somlis) (Ping timeout: 264 seconds)
[11:25:42] <hejux> the guide says typeset -n is a ksh feature?
[11:26:57] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[11:27:09] <osse> obviously it's also a bash feature now
[11:27:39] <hejux> :P
[11:28:01] <hejux> osse: is that the only way? by adding another var
[11:28:13] <osse> afaik yes
[11:29:09] *** Quits: finsternis (~X@23.226.237.192) (Remote host closed the connection)
[11:29:27] <hejux> ok, so, is there a way to create a new array with the names of assarray?
[11:30:29] <hejux> # declare -A a=( [name]="home" [ip]="100" ) ; declare -A b=( [name]="office" [ip]="200" ) ; echo "how to create an array=(a b) automatically"
[11:30:30] <shbot> hejux: how to create an array=(a b) automatically
[11:31:22] <osse> what do you mean?
[11:31:53] <osse> bash can't know which variables you want the names of
[11:32:41] <hejux> i have 10s of this kind of ass_arrays, i could define an array with the names of thses ass_array ... but i wonder of there is auto way
[11:33:23] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[11:34:26] *** Joins: thiras (~thiras@user/thiras)
[11:36:20] <Soliton> # declare -A ass1=() ass2=() ass3=(); echo "${!ass@}"
[11:36:21] <shbot> Soliton: ass1 ass2 ass3
[11:36:46] *** Quits: richardm75 (~richardm7@2600:8801:c50a:9f00:f019:f91f:691b:2425) (Ping timeout: 245 seconds)
[11:36:46] *** Joins: totenkoph (~scythe@user/totenkoph)
[11:36:50] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Client Quit)
[11:37:08] *** Joins: pycurious (~Adium@user/pycurious)
[11:37:13] <Benway> probably not appropriate
[11:37:14] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[11:38:04] <osse> oh right, had forgotten about that
[11:38:27] <osse> but it sounds to me like this data should be stored another way
[11:39:10] <Soliton> probably.
[11:39:29] *** Quits: o (~niko@libera/staff/niko) (Quit: i will be back)
[11:39:57] *** Joins: o (~niko@libera/staff/niko)
[11:40:14] <hejux> # declare -A ass_a=( [name]="home" [ip]="100" ) ; declare -A ass_b=( [name]="office" [ip]="200" ) ; names=(${!ass_@}) ; declare -p names
[11:40:15] <shbot> hejux: declare -a names=([0]="ass_a" [1]="ass_b")
[11:40:20] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Client Quit)
[11:40:29] *** Joins: unclutter (~gentoo@60.81-166-246.customer.lyse.net)
[11:40:33] <hejux> right, this is nice.
[11:41:15] <geirha> names=( "${!ass_@}" )
[11:41:24] <hejux> yes sir.
[11:41:32] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 244 seconds)
[11:41:56] *** Quits: Zauberfisch (~Zauberfis@cm147-42.liwest.at) (Read error: Connection reset by peer)
[11:42:08] <hejux> so, the prefix is like a keyword, it filters all the array names start with "ass_"
[11:42:12] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[11:42:24] <osse> can variable names contain whitespace or glob characters? :O
[11:42:27] <geirha> s/array/variable/
[11:42:45] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[11:42:48] <geirha> no, but IFS can contain non-whitespace
[11:42:59] *** Quits: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[11:43:26] *** Joins: Zauberfisch (~Zauberfis@cm147-42.liwest.at)
[11:44:43] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[11:45:26] *** Quits: j416 (~j416@user/j416) (Ping timeout: 246 seconds)
[11:45:47] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[11:48:43] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[11:50:50] *** Quits: jonthesnow (~xizhendu@36.112.204.20) (Ping timeout: 244 seconds)
[11:51:09] <hejux> well, if i put the ass aray to a conf file, then i source the conf file, but then it is not an ass array any more
[11:52:05] <hejux> oh quote
[11:52:26] <hejux> ass_a="( [name]="home" [ip]="100" )"
[11:52:30] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:52:33] <geirha> you must delcare it.   declare -A
[11:52:43] <geirha> otherwise it is treated as an indexed array
[11:53:02] <hejux> well, i don't know what it is before source the conf file
[11:53:28] <Soliton> so write it in the conf file.
[11:53:54] <hejux> # oh right, source can execute the conf file
[11:53:55] <shbot> hejux: bash: oh: command not found
[11:54:03] <hejux> i forgot that
[11:54:03] *** Joins: mr_pip13 (~mr_pip@2a02:8388:8400:7780:c65:c9b2:b24b:dd3a)
[11:54:05] *** Joins: brelod (~me@90.244.150.142)
[11:55:47] *** Joins: pycurious (~Adium@user/pycurious)
[11:56:51] *** Joins: mr_pip4 (~mr_pip@2a02:8388:8400:7780:c65:c9b2:b24b:dd3a)
[11:58:13] *** Quits: mr_pip4 (~mr_pip@2a02:8388:8400:7780:c65:c9b2:b24b:dd3a) (Client Quit)
[11:59:41] <hejux> ass array is so much better than arrays
[12:00:01] <hejux> i can do what ever i want ....
[12:00:06] <hejux> so greate
[12:01:24] *** Quits: mr_pip13 (~mr_pip@2a02:8388:8400:7780:c65:c9b2:b24b:dd3a) (Ping timeout: 256 seconds)
[12:01:45] <hejux> you guys are so helpful!
[12:06:08] <hejux> with ass_array, my code is greatly optimized and shrinked
[12:08:35] *** Joins: shad (~shad@user/shad)
[12:09:57] *** Quits: rcernin (~rcernin@124.190.139.235) (Ping timeout: 244 seconds)
[12:12:19] *** Joins: OlCe (~user@amontsouris-652-1-130-32.w92-151.abo.wanadoo.fr)
[12:12:27] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[12:17:53] *** Joins: earnestly (~earnest@user/earnestly)
[12:21:54] *** Quits: annomy (~annomy@103.38.199.98) (Quit: WeeChat 3.3)
[12:25:25] *** Quits: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk) (Quit: Leaving)
[12:27:23] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 264 seconds)
[12:28:01] *** Joins: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk)
[12:28:17] *** Joins: rendar (~rendar@user/rendar)
[12:31:47] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[12:32:36] *** Joins: karakedi (~eAC53C340@user/karakedi)
[12:33:02] *** Quits: kurahaupo (~kurahaupo@123-243-221-134.tpgi.com.au) (Ping timeout: 240 seconds)
[12:33:18] *** Joins: somlis (~somlis@user/somlis)
[12:34:06] *** Joins: kurahaupo (~kurahaupo@123-243-221-134.tpgi.com.au)
[12:34:19] *** Joins: furrymcgee (~devuan@cgn-213-196-210-222.nc.de)
[12:34:49] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Client Quit)
[12:35:16] *** Joins: arinov (~arinov@213.194.126.155)
[12:36:37] *** Joins: VaniaPy (~VaniaPy@46.12.226.1.dsl.dyn.forthnet.gr)
[12:37:21] <VaniaPy>  powershell and bash are different shells?
[12:38:02] <Soliton> yes.
[12:38:30] *** Joins: saki_ (~saki@gateway/tor-sasl/saki)
[12:39:11] *** Joins: totenkoph (~scythe@user/totenkoph)
[12:39:45] *** Quits: saki (~saki@gateway/tor-sasl/saki) (Ping timeout: 276 seconds)
[12:40:22] *** Joins: pj (~pj@ghettoforge/pj)
[12:40:50] <earnestly> (powershell isn't a shell, it's a repl; hrmph)
[12:44:54] <ormaaj> What's the shell?
[12:44:59] *** Quits: fstd (~fstd@xdsl-87-79-44-169.nc.de) (Ping timeout: 256 seconds)
[12:47:00] <emanuele6> sea shells by the sea shore
[12:47:38] <Benway> looking into a review of shell alternatives, do any of them let you associate scripts with different installed shells - say you have some that work fine with Dash but others that need Bash?
[12:47:56] <Benway> or would that be too much of a mess
[12:48:09] <Soliton> !shebang
[12:48:09] <greybot> The top of a script MUST have a #! line, called 'shebang' or 'hashbang'. It tells the kernel what program to run your script with. We recommend `#!/usr/bin/env bash` (why: http://stackoverflow.com/a/733901/58803). http://mywiki.wooledge.org/BashGuide/CommandsAndArguments#Scripts http://www.in-ulm.de/~mascheck/various/shebang/
[12:49:44] <ormaaj> If a "REPL" is something distinct then it's an RPL. Something else must be doing the "E".
[12:55:04] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[12:55:23] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[12:56:21] *** Quits: pj (~pj@ghettoforge/pj) (Quit: Ex-Chat)
[12:58:29] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 250 seconds)
[13:01:10] *** Joins: blatant (~blatant@97e2e7c2.skybroadband.com)
[13:01:36] <dob1> if check_file does not exists or it's older than 600min then process but not working: https://termbin.com/7gx7
[13:05:16] <Soliton> # [[ ! $(find file -cmin -600 -print) ]] && echo process
[13:05:17] <shbot> Soliton: find: 'file': No such file or directory
[13:05:17] <shbot> Soliton: process
[13:05:30] *** Quits: Bhavuk (~BTaneja@2401:4900:5197:e83d:d58a:a83a:dbd2:ce6b) (Quit: Leaving)
[13:09:57] *** Joins: pj (~pj@ghettoforge/pj)
[13:10:29] <ormaaj> Anyway I still call it a REPL if the backend has APIs for interactive CLI tools. Not applicable to any relative of bash.
[13:12:58] <dob1> Soliton, I need a check if the does not exists too
[13:13:03] <dob1> *the file
[13:13:34] <Soliton> that is exactly what happened. you may want to silence the error message.
[13:17:36] *** Quits: mtk__ (~mtk@2601:185:200:72:44aa:53fe:886b:bee9) (Ping timeout: 245 seconds)
[13:19:07] *** Joins: fstd (~fstd@xdsl-78-34-189-40.nc.de)
[13:19:25] *** Joins: docmax (~docmax@77.6.11.51)
[13:20:06] *** Joins: pycurious (~Adium@user/pycurious)
[13:24:32] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 240 seconds)
[13:25:17] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[13:27:49] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[13:28:14] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Client Quit)
[13:28:23] *** Quits: VaniaPy (~VaniaPy@46.12.226.1.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[13:30:05] *** Joins: loganlee (~Thunderbi@user/loganlee)
[13:30:06] *** Quits: kyr (~kyr@167.71.50.12) (Quit: Lost terminal)
[13:30:30] *** Joins: kyr (~kyr@167.71.50.12)
[13:32:42] <ormaaj> # let "0$(find . -cmin -600 -printf +1 -quit 2>/dev/null)" && echo yep
[13:32:42] <shbot> ormaaj: no output
[13:32:48] *** Quits: inomoz (~inomoz@176.59.125.26) (Quit: WeeChat 3.3)
[13:32:54] <dob1> this still doesn't work https://termbin.com/hlqp
[13:33:02] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: The Lounge - https://thelounge.chat)
[13:33:07] <dob1> I used 2> /dev/null like ormaaj
[13:33:34] <dob1> it process even if the file is just created
[13:34:03] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[13:34:44] <Soliton> # > file; [[ ! $(find file -mmin -600 -print) ]] && echo process
[13:34:44] <shbot> Soliton: no output
[13:35:05] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 268 seconds)
[13:35:46] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[13:35:53] <dob1> mmin indicates data, I suppose content of the file changes, or not?
[13:36:09] <Soliton> # > file; [[ ! $(find file -cmin -600 -print) ]] && echo process
[13:36:10] <shbot> Soliton: no output
[13:36:12] <phogg> I missed the start of this, but why -600?
[13:36:31] <ormaaj> What are we doing? You want to match the file name?
[13:36:33] <Soliton> they want to check some file is 600 minutes old.
[13:37:01] <phogg> interesting
[13:37:03] <dob1> phogg, if the file does not exists or it's older than 600 min then process, I am trying to do this
[13:37:08] <rendar> can i call `return my_fn params ...` from another function, to return its result?
[13:37:17] <Soliton> no.
[13:37:26] <Soliton> !return
[13:37:26] <greybot> Every Unix process returns an exit status code to its parent. This is an unsigned 8-bit integer, 0 to 255 inclusive, with 0 meaning "success" and 1-255 meaning "failure". A script returns the exit status of the last command executed, unless you call "exit" with an argument. Functions "return" an 8-bit status code also.
[13:37:49] <ormaaj> You need both the directory and name then
[13:38:35] <Soliton> # > file; date -s +700min; [[ ! $(find file -cmin -600 -print) ]] && echo process
[13:38:36] <shbot> Soliton: Mon Nov  8 21:48:35 UTC 2021
[13:38:36] <shbot> Soliton: process
[13:38:55] <Soliton> it all works fine. you have yet to show anything to debug what you're claiming.
[13:39:04] *** Quits: wildo (~lain6141@119.224.72.222) (Quit: leaving)
[13:39:05] *** Joins: pycurious (~Adium@user/pycurious)
[13:40:37] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[13:42:18] <geirha> dobl is aware that ctime is change time, not creation time, right?
[13:42:42] <Soliton> no clue.
[13:43:08] <Soliton> but they talked about a just created time so not too much to confuse there i imagine.
[13:43:21] <Soliton> just created file*
[13:43:29] <ormaaj> # d=$(mktemp -d); >"${d}/file"; let "0$(find "$d" -name file -cmin -600 -printf +1 -quit 2>/dev/null)" && echo yep; rm -rf -- "$d"
[13:43:30] <shbot> ormaaj: yep
[13:43:42] <Benway> i want 'downloaded time' stamped on my files :/
[13:43:59] <Soliton> put it in the filename.
[13:44:31] <Benway> maybe i can 'touch' everything i download?
[13:44:41] <Benway> well not everything, not git repos
[13:44:48] <Benway> media though
[13:45:35] <pj> touch will update the atime and mtime by default.
[13:45:39] <dob1> my test is very simple:  no file /tmp/foobar, script print process (it's right).  touch /tmp/foobar, script still print process (it's not right)
[13:45:49] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[13:46:05] <rendar> what is the best way to return from a function the exit code of another function that has been just called? `return "$?"` ?
[13:46:23] *** Joins: tmm88 (~tmm88@user/tmm88)
[13:46:30] <ormaaj> return
[13:46:31] <Soliton> # touch /tmp/foobar; [[ ! $(find /tmp/foobar -cmin -600 -print) ]] && echo process
[13:46:32] <shbot> Soliton: no output
[13:46:47] <dob1> not heer
[13:46:48] <rendar> ormaaj, thanks
[13:46:53] <Soliton> so perhaps look at what happens with your file. actually look at the ctime...
[13:47:18] <Soliton> maybe you have some odd fs on /tmp or whatever.
[13:48:08] *** Joins: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se)
[13:48:54] <dob1> stat /tmp/foobar any timestamp on it is no older than 600min
[13:49:05] <dob1> I don't know
[13:49:07] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:509d:fc26:5b65:ba95)
[13:50:16] <Soliton> sounds like your find is broken then.
[13:51:05] <geirha> # f() { if [[ ! $(find "$1" -mmin -600 -print 2>/dev/null) ]] ; then printf 'Process %s\n' "$1" ; else printf 'Do not process %s\n' "$1" ; fi ; } ; touch -d '-700 minutes' old ; f old ; touch new ; f new ; f non-existant
[13:51:06] <shbot> geirha: Process old
[13:51:06] <shbot> geirha: Do not process new
[13:51:06] <shbot> geirha: Process non-existant
[13:51:07] <dob1> damn... there was a typo, if you look at my paste above I misspelled check_file as check_fike... sorry
[13:51:13] *** Quits: dermoth (~dermoth@dsl-10-136-208.b2b2c.ca) (Ping timeout: 244 seconds)
[13:51:43] <dob1> sorry for wasting time
[13:51:53] <Soliton> !shellcheck
[13:51:53] <greybot> ShellCheck is a shell linting/suggestion tool. Information and online checker: http://www.shellcheck.net/ . Can also be installed locally as a CLI tool.
[13:52:19] <ormaaj> alias curl='curl --xattr'
[13:52:25] *** Joins: mei3 (~mei@user/mei)
[13:52:31] <ormaaj> :)
[13:53:45] <Tahvok> #/trigger set conky command "/mute /set plugins.var.python.text_item.conky_${my_field} all ${my_field} ${color:white}${my_value}"
[13:53:56] *** Joins: fdan (~fdan@192.146.154.3)
[13:53:58] *** Quits: fdan (~fdan@192.146.154.3) (Client Quit)
[13:54:07] <Tahvok> oops, sorry. Pasted by mistake
[13:54:40] *** tolecnal_ is now known as tolecnal
[13:54:41] *** Joins: fdan (~fdan@192.146.154.3)
[13:54:48] *** Quits: situ_ (~situ@ip-89-176-145-74.net.upcbroadband.cz) (Ping timeout: 268 seconds)
[13:57:46] *** Joins: pajamian (~pj@ghettoforge/pj)
[13:58:27] <kurahaupo> ormaaj: As a rule I dislike aliases (or functions) that alter the behaviour of and existing command name; if I want different behaviour I give it a different name, such as cxa(){ curl --xattr "$@"; }
[13:58:39] <kurahaupo> s/and/an/
[13:59:11] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 264 seconds)
[14:00:09] <hejux> so, when i try to print the keys of ass_array, the order changed echo ${!ass_array[@]} ...
[14:00:33] <phogg> order of keys in a hash is never guaranteed
[14:01:20] <hejux> different every print?
[14:02:03] <Soliton> probably not. just don't rely on any order.
[14:02:10] <tmm88> can someone explain me which tools are involved within checking someone else's ip and monitoring their desktop screen (monitoring exclusively)?
[14:02:22] <dob1> Soliton, ah good to know
[14:02:26] <hejux> but no, order did not change every echo ? how is it ordered?
[14:02:43] <tmm88> sorry if my question is too evasive!!!
[14:02:45] <Soliton> analyse the source.
[14:03:03] *** Joins: JulianDannenberg (~julianjuh@2001:470:69fc:105::1:27e2)
[14:03:22] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[14:03:29] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:509d:fc26:5b65:ba95) (Ping timeout: 250 seconds)
[14:03:36] *** Joins: dermoth (~dermoth@dsl-10-135-136.b2b2c.ca)
[14:03:38] <hejux> ok, can i sort the key? from a-z 1-9
[14:04:02] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[14:04:23] <hejux> if there is a modifier ...
[14:04:42] <hejux> that would be good ${(S)!ass_array[@]}
[14:04:50] <hejux> something like this
[14:05:01] <Soliton> put the keys in an indexed array if you need a specific order.
[14:06:01] <phogg> tmm88: not a bash question, that depends on your OS/distro
[14:06:55] <hejux> yes, that is doable. well an auto way is better, i probably need to echo xx | sort
[14:07:14] *** Joins: pj` (~pj@ghettoforge/pj)
[14:07:25] <phogg> I would not call that better
[14:07:25] *** Joins: situ_ (situ@nat-pool-brq-t.redhat.com)
[14:08:01] *** pj` is now known as pj
[14:08:32] *** Quits: pajamian (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[14:08:34] *** Quits: blatant (~blatant@97e2e7c2.skybroadband.com) (Quit: WeeChat 3.3)
[14:08:52] *** Joins: blatant (~blatant@97e2e7c2.skybroadband.com)
[14:08:52] <hejux> well. can't sort that string... it is not \n separated
[14:10:09] *** Quits: tmm88 (~tmm88@user/tmm88) (Quit: Client closed)
[14:10:23] <dob1> checking a script with shellcheck "if [[ $(pgrep -f -c -U "$user" "$pattern" ) > 0 ]] ; then" it recommends to use "-gt"   but it worked, it was wrong from the start?
[14:10:38] <hejux> printf '%s\n' ${!ref_srv0[@]} | sort
[14:10:44] <hejux> that works
[14:10:52] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[14:10:56] <Soliton> perhaps you should use a language with the features you desire.
[14:10:59] <emanuele6> dob1: > and -gt are not thr same thing
[14:11:09] *** Quits: kurahaupo (~kurahaupo@123-243-221-134.tpgi.com.au) (Quit: Quit)
[14:11:16] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[14:11:18] *** Joins: kurahaupo (~kurahaupo@123-243-221-134.tpgi.com.au)
[14:11:20] <emanuele6> > is "alphabetical order comparison"
[14:12:13] <Soliton> if pgrep -f -U "$user" "$pattern" > /dev/null; ...
[14:12:49] *** Quits: elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz) (Quit: A random quit message)
[14:12:57] <Soliton> better yet don't bother unrelated processes.
[14:14:04] <hejux> srv0=${servers_and_ports[0]} ; typeset -n ref_srv0=$srv0 ; sorted_keys=( $(printf '%s\n' ${!ref_srv0[@]} | sort) ) ; echo ${sorted_keys[@]}
[14:14:11] <hejux> this is doable!
[14:14:27] <Soliton> !quotes
[14:14:27] <greybot> https://mywiki.wooledge.org/Quotes
[14:14:36] <dob1> Soliton, I didn't get your advice
[14:14:37] <Soliton> !faq 1
[14:14:37] <pj> or even: if pkill -0 -f -U "$user" "$pattern"; then ...
[14:14:37] <greybot> https://mywiki.wooledge.org/BashFAQ/001 -- How can I read a file (data stream, variable) line-by-line (and/or field-by-field)?
[14:14:38] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[14:15:09] <dob1> what you mean ? why you put > /dev/null ?
[14:15:21] <Soliton> because you don't care about the output.
[14:15:33] <phogg> he means "don't count the string from stdout, just check the exit code"
[14:15:41] <ormaaj> kurahaupo: I use different conventions for various situations. I use that one interactively, and an alias is a pretty unintrusive wrapper for that purpose provided all your interactive code is written with that in mind. (I have some special sauce that makes sourcing or re-sourcing interactive libs transparent to my aliases.)
[14:17:10] <hejux> Soliton: i hate quotes... sorted_keys=( "$(printf '%s\n' ${!ref_srv0[@]} | sort)" ) , should i quote here?
[14:17:18] <sixwheeledbeast> !faq1
[14:17:18] <greybot> https://mywiki.wooledge.org/BashFAQ/001 -- How can I read a file (data stream, variable) line-by-line (and/or field-by-field)?
[14:17:35] <dob1> so I need to change the check  if [[ $(pgrep -f -U "$user" "$pattern" > /dev/null) -eq 0 ]
[14:17:59] <Soliton> mapfile -t sorted_keys < <(printf '%s\n' "${!ref_srv0[@]}" | sort)
[14:18:16] <Soliton> i wonder if you would do the same in any other language.
[14:18:49] <Soliton> dob1: pgrep has a perfectly usable exit status. use it.
[14:19:03] *** Quits: blatant (~blatant@97e2e7c2.skybroadband.com) (Quit: WeeChat 3.3)
[14:19:21] *** Joins: blatant (~blatant@97e2e7c2.skybroadband.com)
[14:19:22] <kurahaupo> dob1: $(cmd) does not provide the exit status of cmd
[14:19:42] <hejux> Soliton: i do array=( $(command) ) all the time ...
[14:19:54] <Soliton> !crap
[14:19:54] <greybot> The overwhelming majority of bash scripts, code, tutorials, and guides on the Internet are crap. Sturgeon was an optimist.
[14:20:04] <kurahaupo> hejux: Do you set IFS and set +f ?
[14:20:17] <emanuele6> -f
[14:20:34] <hejux> assume space?
[14:20:38] <kurahaupo> um yeah
[14:20:59] <hejux> default IFS is space, right?
[14:21:18] *** Joins: vlm (~vlm@user/vlm)
[14:21:20] *** Quits: skylite (~skylite@2E6B2CD6.catv.pool.telekom.hu) (Ping timeout: 268 seconds)
[14:21:21] <kurahaupo> hejux: I used to do that until I realised it was both slower than readarray and less reliable
[14:21:40] <ormaaj> of course not
[14:22:00] <kurahaupo> hejux: default IFS is space+tab+newline
[14:22:18] <emanuele6> # declare -p IFS
[14:22:19] <shbot> emanuele6: declare -- IFS="
[14:22:19] <shbot> emanuele6: "
[14:22:25] <jetchisel> # printf '%q' "$IFS"
[14:22:26] <shbot> jetchisel: $' \t\n'
[14:22:30] <emanuele6> yeah
[14:23:43] <Soliton> # command() { printf %s\\n 'foo and bar' '/*'; }; array=($(command)); declare -p array
[14:23:44] <shbot> Soliton: declare -a array=([0]="foo" [1]="and" [2]="bar" [3]="/bin" [4]="/dev" [5]="/etc" [6]="/init" [7]="/lib" [8]="/lib64" [9]="/proc" [10]="/root" [11]="/tmp" [12]="/usr" [13]="/var")
[14:23:57] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[14:24:32] *** Quits: mei3 (~mei@user/mei) (Ping timeout: 240 seconds)
[14:24:45] <kurahaupo> hejux: The ordering of keys in an associative array (map) is based on hashing the key values, with a seed that's chosen randomly when the shell starts.
[14:25:06] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 245 seconds)
[14:25:26] *** Joins: pj (~pj@ghettoforge/pj)
[14:25:51] <hejux> kurahaupo: thanks! i think i'll do manual assignment
[14:26:27] <hejux> Soliton: thanks! i'll drop that habit :)
[14:27:13] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Client Quit)
[14:28:05] <kurahaupo> hejux: It may be useful to keep the values in a normal array, and put the indeces of that array as the values in an associative array. Then you get the benefit of both ordering and mapping.
[14:28:51] *** Joins: ^wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com)
[14:28:51] *** Quits: ^wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com) (Changing host)
[14:28:51] *** Joins: ^wuseman (~wuseman@user/wuseman/x-1147134)
[14:28:56] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 244 seconds)
[14:29:05] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:509d:fc26:5b65:ba95)
[14:30:10] <hejux> # ass_keys=(a b c d e f) ; declare -A ass=([${ass_keys[0]}]=0 [${ass_keys[1]}]=1 [${ass_keys[0]}]=2) ; declare -p ass
[14:30:10] <shbot> hejux: declare -A ass=([b]="1" [a]="2" )
[14:30:43] <ormaaj> https://stackoverflow.com/a/15798357/495451
[14:31:05] <hejux> # ass_keys=(a b c d e f) ; declare -A ass=([${ass_keys[0]}]=0 [${ass_keys[1]}]=1 [${ass_keys[2]}]=2) ; declare -p ass
[14:31:06] <shbot> hejux: declare -A ass=([c]="2" [b]="1" [a]="0" )
[14:31:26] <hejux> right, that's better
[14:32:54] <hejux> # ass_keys=(a b c d e f) ; declare -A ass=([${ass_keys[0]}]=0 [${ass_keys[1]}]=1 [${ass_keys[2]}]=2) ; declare -p ass ; echo ${ass[a]}
[14:32:55] <shbot> hejux: declare -A ass=([c]="2" [b]="1" [a]="0" )
[14:32:55] <shbot> hejux: 0
[14:33:39] <hejux> # ass_keys=(a b c d e f) ; declare -A ass=([${ass_keys[0]}]=0 [${ass_keys[1]}]=1 [${ass_keys[2]}]="") ; declare -p ass ; echo ${ass[a]}
[14:33:40] <shbot> hejux: declare -A ass=([c]="" [b]="1" [a]="0" )
[14:33:40] <shbot> hejux: 0
[14:33:56] <hejux> # ass_keys=(a b c d e f) ; declare -A ass=([${ass_keys[0]}]=0 [${ass_keys[1]}]=1 [${ass_keys[2]}]="") ; declare -p ass ; echo ${ass[c]}
[14:33:57] <shbot> hejux: declare -A ass=([c]="" [b]="1" [a]="0" )
[14:34:12] <hejux> so nice~
[14:34:34] <hejux> a lot learnt today. bash is fun
[14:38:45] <ormaaj> !ormaajkeys
[14:38:46] <greybot> # getKeys() { local -a 'keys=("${!'"$1"'[@]}")'; printf '<%s> ' "${keys[@]}"; echo; }; arr=({a..c}); getKeys arr
[14:38:46] <shbot> greybot: <0> <1> <2>
[14:39:11] * ormaaj a
[14:39:16] *** Quits: kurahaupo (~kurahaupo@123-243-221-134.tpgi.com.au) (Quit: Quit)
[14:39:25] *** Joins: kurahaupo (~kurahaupo@123-243-221-134.tpgi.com.au)
[14:39:53] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 250 seconds)
[14:40:27] <ormaaj> oops. surprised that still works anyway.
[14:41:40] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:509d:fc26:5b65:ba95) (Ping timeout: 268 seconds)
[14:42:41] *** Quits: blatant (~blatant@97e2e7c2.skybroadband.com) (Quit: WeeChat 3.3)
[14:42:58] *** Joins: blatant (~blatant@97e2e7c2.skybroadband.com)
[14:43:26] *** Joins: timj (~timj@user/timj)
[14:43:31] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[14:44:49] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[14:45:14] *** Joins: VaniaPy (~VaniaPy@46.12.226.1.dsl.dyn.forthnet.gr)
[14:45:18] *** Parts: VaniaPy (~VaniaPy@46.12.226.1.dsl.dyn.forthnet.gr) ()
[14:45:59] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 244 seconds)
[14:47:01] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[14:48:07] <hejux> is there a short for of ${array[@]} and ${array[0]} for bash ?
[14:48:14] <hejux> *form
[14:48:19] *** Quits: blatant (~blatant@97e2e7c2.skybroadband.com) (Quit: WeeChat 3.3)
[14:48:37] *** Joins: blatant (~blatant@97e2e7c2.skybroadband.com)
[14:48:42] <ormaaj> The former no
[14:49:01] <hejux> like in zsh $^array
[14:49:21] <ormaaj> array[0] is array
[14:49:27] <emanuele6> you can write ${array[0]} as $array
[14:50:45] *** o is now known as niko
[14:50:54] <hejux> ok
[14:51:27] <ormaaj> Even for associative arrays, because bash is retarded. One of the most egregeous bugs.
[14:52:22] <emanuele6> lol
[14:53:07] <emanuele6> # declare -A a=([x]=1 [y]=2); printf '<%s> ' "$a"; a[0]=10; printf '<%s> ' "$a"
[14:53:08] <shbot> emanuele6: <> <10>
[14:53:29] *** Joins: pycurious (~Adium@user/pycurious)
[14:56:01] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:56:19] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[14:56:34] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Remote host closed the connection)
[14:56:46] *** Joins: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de)
[14:56:55] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[14:57:13] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Ping timeout: 250 seconds)
[14:57:52] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 244 seconds)
[14:59:04] *** Quits: blatant (~blatant@97e2e7c2.skybroadband.com) (Quit: WeeChat 3.3)
[14:59:23] *** Joins: blatant (~blatant@97e2e7c2.skybroadband.com)
[14:59:26] *** Quits: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de) (Client Quit)
[15:00:00] *** Joins: igemnace (~ian@user/igemnace)
[15:00:08] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[15:01:32] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[15:03:08] *** Quits: blatant (~blatant@97e2e7c2.skybroadband.com) (Client Quit)
[15:03:27] *** Joins: blatant (~blatant@97e2e7c2.skybroadband.com)
[15:03:55] *** Quits: blatant (~blatant@97e2e7c2.skybroadband.com) (Client Quit)
[15:04:12] *** Joins: blatant (~blatant@97e2e7c2.skybroadband.com)
[15:04:40] *** Joins: jonthesnow (~xizhendu@240e:305:7380:4300:22a3:ecb5:b567:7739)
[15:04:59] *** Quits: blatant (~blatant@97e2e7c2.skybroadband.com) (Client Quit)
[15:05:19] *** Joins: blatant (~blatant@97e2e7c2.skybroadband.com)
[15:05:51] *** Quits: blatant (~blatant@97e2e7c2.skybroadband.com) (Client Quit)
[15:06:10] *** Joins: blatant (~blatant@97e2e7c2.skybroadband.com)
[15:06:50] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[15:07:09] *** Parts: mihaiadrian (~Thunderbi@82.76.223.244) ()
[15:07:17] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[15:07:26] *** Quits: blatant (~blatant@97e2e7c2.skybroadband.com) (Client Quit)
[15:07:45] *** Joins: blatant (~blatant@97e2e7c2.skybroadband.com)
[15:08:00] *** Joins: vysn (~vysn@user/vysn)
[15:08:18] <ormaaj> I shouldn't have reported the bug given there's absolutely no way to accidently cause a hash map to break in that exact way. It could only have been put there by a someone with sick humor.
[15:08:57] *** Quits: blatant (~blatant@97e2e7c2.skybroadband.com) (Client Quit)
[15:09:14] *** Joins: blatant (~blatant@97e2e7c2.skybroadband.com)
[15:09:42] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[15:11:35] <emanuele6> # a=([1]=x); printf '<%s> ' "$a"; a[0]=10; printf '<%s> ' "$a"
[15:11:35] <shbot> emanuele6: <> <10>
[15:11:49] <emanuele6> it also works like that for sparse indexed arrays
[15:12:15] <emanuele6> $a is not the first value of a, but it's literally equivalent to ${a[0]}
[15:13:48] <geirha> a more fun implementation would be if it used empty string as default for associative arrays instead of "0", but then you don't can't expand that value because empty string is not valid in a subscript
[15:14:29] *** Joins: pj (~pj@ghettoforge/pj)
[15:14:48] <ormaaj> Oh yeah "sparse arrays" are also sick and twisted... deliberately. just wait til you discover some of the crap ${a[@]:x:y} does.
[15:14:51] <geirha> and then you have to decide if it should be included in [@] or not ... much fun, and about as intuitive as using "0"
[15:15:13] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[15:15:46] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 256 seconds)
[15:19:00] *** Joins: han-solo (~hanish@user/han-solo)
[15:21:43] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:22:05] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[15:23:13] *** Joins: pycurious (~Adium@user/pycurious)
[15:24:15] <ormaaj> It's doubly-linked /list/.  Someone is confused about how lists are supposed to behave.
[15:24:31] *** Joins: tmm88 (~tmm88@2001:8a0:ff48:1500:4fa:bd3a:832a:1b6c)
[15:24:44] *** Quits: tmm88 (~tmm88@2001:8a0:ff48:1500:4fa:bd3a:832a:1b6c) (Changing host)
[15:24:44] *** Joins: tmm88 (~tmm88@user/tmm88)
[15:25:15] *** Quits: dermoth (~dermoth@dsl-10-135-136.b2b2c.ca) (Ping timeout: 244 seconds)
[15:25:44] *** Joins: tobybl (~tobybl@213.31.135.91)
[15:27:30] *** Joins: legola (~legola@46.235.101.181)
[15:28:06] *** Quits: rawgreaze (~rawgreaze@user/rawgreaze) (Quit: ZNC 1.8.2 - https://znc.in)
[15:29:41] *** Joins: rawgreaze (~rawgreaze@c-73-238-236-231.hsd1.nh.comcast.net)
[15:29:41] *** Quits: rawgreaze (~rawgreaze@c-73-238-236-231.hsd1.nh.comcast.net) (Changing host)
[15:29:41] *** Joins: rawgreaze (~rawgreaze@user/rawgreaze)
[15:30:58] *** Quits: rawgreaze (~rawgreaze@user/rawgreaze) (Client Quit)
[15:31:25] <ormaaj> Namely, it's an ordered-dequeue. Nonconsecutive node numbers shouldn't make it "sparse".
[15:32:06] *** Joins: rawgreaze (~rawgreaze@c-73-238-236-231.hsd1.nh.comcast.net)
[15:32:07] *** Quits: rawgreaze (~rawgreaze@c-73-238-236-231.hsd1.nh.comcast.net) (Changing host)
[15:32:07] *** Joins: rawgreaze (~rawgreaze@user/rawgreaze)
[15:32:41] *** Quits: rawgreaze (~rawgreaze@user/rawgreaze) (Remote host closed the connection)
[15:33:30] <kurahaupo> # a=( [2]=a b c [6]=d ) ; printf '<%q>' "${a[@]:2:2}"
[15:33:31] <shbot> kurahaupo: <a><b>
[15:33:48] <kurahaupo> # a=( [2]=a b c [6]=d ) ; printf '<%q>' "${a[@]:4:3}"
[15:33:48] <shbot> kurahaupo: <c><d>
[15:34:00] <kurahaupo> # a=( [2]=a b c [6]=d ) ; printf '<%q>' "${!a[@]:4:3}"
[15:34:00] <shbot> kurahaupo: bash: a b c d: invalid variable name
[15:34:03] <emanuele6> # declare -ap a=( [2]=a b c [6]=d )
[15:34:04] <shbot> emanuele6: declare -a a=([2]="a" [3]="b" [4]="c" [6]="d")
[15:34:56] *** Quits: shad (~shad@user/shad) (Ping timeout: 250 seconds)
[15:35:18] <emanuele6> # declare -ap a=( [2]=a b c [6]=d [1]=x y)
[15:35:19] <shbot> emanuele6: declare -a a=([1]="x" [2]="y" [3]="b" [4]="c" [6]="d")
[15:35:32] <emanuele6> oh, wow
[15:35:32] *** Quits: blatant (~blatant@97e2e7c2.skybroadband.com) (Quit: WeeChat 3.3)
[15:35:53] <kurahaupo> did you expect something else?
[15:36:03] <emanuele6> maybe [5]=y ?
[15:37:12] <kurahaupo> # a=( [2]=a b c [2]=d e [2]f =) ; declare -p a
[15:37:13] <shbot> kurahaupo: declare -a a=([2]="d" [3]="e" [4]="[2]f" [5]="=")
[15:37:31] <kurahaupo> # a=( [2]=a b c [2]=d e [2]=f ) ; declare -p a
[15:37:32] <shbot> kurahaupo: declare -a a=([2]="f" [3]="e" [4]="c")
[15:39:25] *** Joins: rememberYou (~someone@user/rememberyou)
[15:40:03] <kurahaupo> Any value that doesn't include an index goes at (the previous index)+1
[15:40:12] <emanuele6> yes
[15:40:17] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:509d:fc26:5b65:ba95)
[15:40:42] *** Quits: tmm88 (~tmm88@user/tmm88) (Ping timeout: 256 seconds)
[15:42:01] <emanuele6> # declare -p a=( [1]=t [10]=x ); a+=(f); declare -p a; a+=([0]=g h); declare -p a
[15:42:02] <shbot> emanuele6: declare -a a=([1]="t" [10]="x")
[15:42:02] <shbot> emanuele6: declare -a a=([1]="t" [10]="x" [11]="f")
[15:42:03] <shbot> emanuele6: declare -a a=([0]="g" [1]="h" [10]="x" [11]="f")
[15:42:32] <emanuele6> sparse arrays are fun
[15:44:27] *** Joins: TomyWork (~TomyLobo@p200300e80f06af00605c69348000900a.dip0.t-ipconnect.de)
[15:44:42] *** Joins: rcernin_ (~rcernin@124.190.139.235)
[15:45:02] <kurahaupo> ooof!
[15:45:39] *** Joins: dermoth (~dermoth@dsl-10-131-1.b2b2c.ca)
[15:46:11] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:509d:fc26:5b65:ba95) (Ping timeout: 250 seconds)
[15:46:21] <kurahaupo> So +=() just starts with "previous index" being the last index of the current array, rather than -1 (and doesn't clear the existing list)
[15:46:46] <kurahaupo> but otherwise proceeds just like normal assignment
[15:48:00] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[15:50:10] <Soliton> # declare -p a=( [1]=t [10]=x ); a+=([0]=g h); declare -p a; a+=(f); declare -p a
[15:50:11] <shbot> Soliton: declare -a a=([1]="t" [10]="x")
[15:50:11] <shbot> Soliton: declare -a a=([0]="g" [1]="h" [10]="x")
[15:50:11] <shbot> Soliton: declare -a a=([0]="g" [1]="h" [10]="x" [11]="f")
[15:50:42] <Soliton> seems fine to me.
[15:51:21] <Soliton> ([0]=g h) is just short for ([0]=g [1]=h)
[15:51:42] <kurahaupo> # A=( a b c ); A=( [${#A[@]}]=d e f ) ; declare -p A
[15:51:43] <shbot> kurahaupo: declare -a A=([3]="d" [4]="e" [5]="f")
[15:52:43] <kurahaupo> # A=( a b c ); A+=( [-1]=d e f ) ; declare -p A # hmm I wonder
[15:52:43] <shbot> kurahaupo: declare -a A=([0]="a" [1]="b" [2]="d" [3]="e" [4]="f")
[15:53:23] <kurahaupo> # A=( a b c ); A+=( [-3]=d e f ) ; declare -p A
[15:53:24] <shbot> kurahaupo: declare -a A=([0]="d" [1]="e" [2]="f")
[15:53:42] <kurahaupo> # A=( a b c ); A+=( [-9]=d e f ) ; declare -p A
[15:53:43] <shbot> kurahaupo: bash: [-9]=d: bad array subscript
[15:53:43] <shbot> kurahaupo: declare -a A=([0]="a" [1]="b" [2]="c" [3]="e" [4]="f")
[15:54:16] <kurahaupo> apparently a bad array subscript isn't enough to abort the whole assignment
[15:54:27] <emanuele6> Soliton: yes, it makes sense how it works, but it is a little weird.
[15:55:32] *** Quits: kurahaupo (~kurahaupo@123-243-221-134.tpgi.com.au) (Quit: Quit)
[15:55:41] *** Joins: kurahaupo (~kurahaupo@123-243-221-134.tpgi.com.au)
[15:58:10] *** Joins: xx (~xx@user/xx)
[16:00:09] *** Quits: Hash (~stoned@hack.the.planet.with.hashsecurity.org) (Quit: https://hashsecurity.org)
[16:06:43] <ormaaj> It's been a few years since I've done anything super fancy with bash arrays. Someone more persuasive than me may well have inspired some changes in the meantime.
[16:07:34] *** Quits: sarantos (~sarantos@2a02:587:3431:f3d7:7990:f181:6ff:9756) (Quit: Client closed)
[16:09:29] *** Joins: tobybl (~tobybl@213.31.135.91)
[16:10:21] *** Joins: Hash (~stoned@wants.to.know.howstoned.ru)
[16:12:26] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:13:06] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[16:14:07] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[16:16:31] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 250 seconds)
[16:16:42] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Quit: Leaving)
[16:17:01] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[16:19:21] *** Joins: sarantos (~sarantos@2a02:587:3431:f3d7:7990:f181:6ff:9756)
[16:19:37] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[16:19:44] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[16:20:02] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[16:21:33] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Quit: ZNC 1.8.2 - https://znc.in)
[16:22:14] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[16:23:26] *** Quits: iliv_ (~iliv@93-77-147-152.lvv.volia.net) (Ping timeout: 245 seconds)
[16:23:45] *** Joins: iliv (~iliv@93-77-147-152.lvv.volia.net)
[16:23:45] *** Quits: iliv (~iliv@93-77-147-152.lvv.volia.net) (Changing host)
[16:23:45] *** Joins: iliv (~iliv@user/iliv)
[16:23:50] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[16:24:07] *** Joins: pycurious (~Adium@user/pycurious)
[16:24:56] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[16:25:05] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[16:26:30] *** Joins: rufito (~phil@181.42.48.73)
[16:27:49] <TomyWork> emanuele6, kinda bash's motto
[16:30:04] *** Joins: pj (~pj@ghettoforge/pj)
[16:30:33] <TomyWork> so, negative subscripts are counted from the back? i never knew
[16:30:42] <TomyWork> or is that not what is happening?
[16:32:48] *** Joins: sebastorama (~sebastora@190.83.56.68)
[16:33:19] *** Joins: shad (~shad@user/shad)
[16:33:23] *** Quits: rcernin_ (~rcernin@124.190.139.235) (Quit: WeeChat 3.3)
[16:33:25] *** Joins: zeden (~zeden@user/zeden)
[16:34:10] <emanuele6> in indexed arrays, -1 is the greatest index
[16:34:23] <emanuele6> but -2 is not the second greatest index
[16:34:26] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[16:34:36] <emanuele6> it's the greatest index minus one
[16:34:50] *** Joins: pycurious (~Adium@user/pycurious)
[16:35:02] *** Quits: pycurious (~Adium@user/pycurious) (Max SendQ exceeded)
[16:35:06] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 245 seconds)
[16:35:23] *** Joins: pycurious (~Adium@user/pycurious)
[16:37:43] <emanuele6> a=([11]=x [1]=y [4]=z w); printf 'a[%s]=%s ' -1 "${a[-1]@Q}" -2 "${a[-1]@Q}"; echo; a[10]=e; printf 'a[%s]=%s ' -1 "${a[-1]@Q}" -2 "${a[-1]@Q}"
[16:37:47] <emanuele6> # a=([11]=x [1]=y [4]=z w); printf 'a[%s]=%s ' -1 "${a[-1]@Q}" -2 "${a[-1]@Q}"; echo; a[10]=e; printf 'a[%s]=%s ' -1 "${a[-1]@Q}" -2 "${a[-1]@Q}"
[16:37:48] <shbot> emanuele6: a[-1]='x' a[-2]='x'
[16:37:48] <shbot> emanuele6: a[-1]='x' a[-2]='x'
[16:37:56] <emanuele6> oh, oops
[16:37:59] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[16:38:01] <ormaaj> "sometimes". TIAS for the details i can never remember. because you've got string slices, positional params, numeric arrays, asssoc arrays, each with different quirks
[16:38:02] <emanuele6> # a=([11]=x [1]=y [4]=z w); printf 'a[%s]=%s ' -1 "${a[-1]@Q}" -2 "${a[-2]@Q}"; echo; a[10]=e; printf 'a[%s]=%s ' -1 "${a[-1]@Q}" -2 "${a[-2]@Q}"
[16:38:03] <shbot> emanuele6: a[-1]='x' a[-2]=
[16:38:03] <shbot> emanuele6: a[-1]='x' a[-2]='e'
[16:38:46] <emanuele6> yes, for example i don't think you can use -1 in ${arr[@]:-1}
[16:39:16] <emanuele6> # a=( {1..3} ); echo "${arr[-1]}"; echo "${arr[@]:-1}"
[16:39:17] <shbot> emanuele6: bash: arr: bad array subscript
[16:39:17] <shbot> emanuele6:
[16:39:17] <shbot> emanuele6: 1
[16:39:39] <emanuele6> oh , oops
[16:39:41] <emanuele6> # a=( {1..3} ); echo "${arr[-1]}"; echo "${arr[@]: -1}"
[16:39:42] <shbot> emanuele6: bash: arr: bad array subscript
[16:40:09] *** Joins: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:40:15] <emanuele6> you can, right
[16:40:32] <emanuele6> you can't in the offset
[16:40:37] <emanuele6> err, length
[16:41:24] <emanuele6> you can in the offset, but you can't in the length: ${arr[@]:2: -1} is not valid
[16:41:38] <emanuele6> # arr=(1 2 3 4); echo "${arr[@]:2: -1}"
[16:41:38] <shbot> emanuele6: bash:  -1: substring expression < 0
[16:42:13] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Read error: Connection reset by peer)
[16:42:54] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[16:44:05] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[16:45:31] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[16:45:53] *** Joins: pycurious (~Adium@user/pycurious)
[16:46:06] *** Quits: pycurious (~Adium@user/pycurious) (Max SendQ exceeded)
[16:46:24] *** Joins: pycurious (~Adium@user/pycurious)
[16:46:28] <ormaaj> Bingo
[16:47:11] <ormaaj> > but -2 is not the second greatest index
[16:47:11] <ormaaj> wrt
[16:48:02] *** Joins: pj (~pj@ghettoforge/pj)
[16:48:35] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: Textual IRC Client: www.textualapp.com)
[16:48:44] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[16:50:41] *** Joins: tobybl (~tobybl@213.31.135.91)
[16:52:56] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[16:54:13] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 250 seconds)
[16:54:32] *** Joins: Ad1Tech (~Ad1Tech@h104101.man.tk-internet.pl)
[16:54:40] *** Quits: rustyshackleford (uid236774@2a03:5180:f:1::3:9ce6) (Quit: Connection closed for inactivity)
[16:56:57] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Quit: mihaiadrian)
[16:59:17] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Ping timeout: 244 seconds)
[17:00:43] *** Quits: situ_ (situ@nat-pool-brq-t.redhat.com) (Ping timeout: 250 seconds)
[17:04:28] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[17:05:32] *** Quits: w0ng (~w0ng@103.1.212.157) (Ping timeout: 260 seconds)
[17:06:52] *** Joins: cdown_ (~cdown@163.114.131.1)
[17:08:07] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[17:08:35] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Ping timeout: 244 seconds)
[17:08:54] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[17:09:58] *** Joins: seninha (~seninha@user/seninha)
[17:09:59] *** Quits: cdown (~cdown@89.32.122.5) (Ping timeout: 264 seconds)
[17:10:09] *** cdown_ is now known as cdown
[17:10:48] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[17:11:10] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Ping timeout: 244 seconds)
[17:13:29] *** Joins: situ_ (~situ@ip-89-176-145-74.net.upcbroadband.cz)
[17:13:33] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[17:18:26] *** Quits: kj (~kj@kj.aerisnetwork.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:19:43] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[17:22:32] *** Quits: Mo (~Mo@dynamic-095-116-198-173.95.116.pool.telefonica.de) (Ping timeout: 240 seconds)
[17:23:49] *** Quits: zouhair (~zouhair@lnsm1-montreal02-142-122-74-190.internet.virginmobile.ca) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[17:23:59] *** Joins: pycurious (~Adium@user/pycurious)
[17:24:02] *** Quits: ^wuseman (~wuseman@user/wuseman/x-1147134) (Ping timeout: 240 seconds)
[17:25:42] *** Joins: jlc (~jlc@cpe-107-15-173-212.nc.res.rr.com)
[17:25:44] *** Joins: zouhair (~zouhair@lnsm1-montreal02-142-122-74-190.internet.virginmobile.ca)
[17:32:23] *** Quits: YHVH (~yhvh@c-98-235-30-231.hsd1.pa.comcast.net) (Read error: Connection reset by peer)
[17:33:02] *** Quits: OlCe (~user@amontsouris-652-1-130-32.w92-151.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[17:34:25] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 244 seconds)
[17:37:51] *** Joins: t0kie (~t0kie@user/t0kie)
[17:39:20] *** Quits: han-solo (~hanish@user/han-solo) (Remote host closed the connection)
[17:39:41] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[17:40:19] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:44:58] *** Quits: jab416171 (~jab416171@c-67-161-208-101.hsd1.ut.comcast.net) (Ping timeout: 260 seconds)
[17:48:37] *** Quits: t0kie (~t0kie@user/t0kie) (Quit: Leaving)
[17:49:02] *** Joins: t0kie (~t0kie@user/t0kie)
[17:50:00] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:57:29] *** Quits: kurahaupo (~kurahaupo@123-243-221-134.tpgi.com.au) (Ping timeout: 250 seconds)
[17:58:48] *** Joins: earendel (uid498179@user/earendel)
[18:00:23] *** Joins: kurahaupo (~kurahaupo@123-243-221-134.tpgi.com.au)
[18:03:50] *** Joins: OlCe` (~user@lfbn-nic-1-526-60.w90-118.abo.wanadoo.fr)
[18:03:59] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 250 seconds)
[18:04:44] *** Joins: iomari891 (~iomari891@105.112.138.38)
[18:05:13] *** Joins: han-solo (~hanish@user/han-solo)
[18:06:45] *** Quits: t0kie (~t0kie@user/t0kie) (Quit: Leaving)
[18:07:18] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c5a4:eaf2:add7:ad94)
[18:08:54] *** Joins: pycurious (~Adium@user/pycurious)
[18:09:10] *** Joins: Hercules (~Hercules@user/hercules)
[18:10:16] *** Quits: Hercules (~Hercules@user/hercules) (Max SendQ exceeded)
[18:10:45] *** Joins: Hercules (~Hercules@user/hercules)
[18:11:17] *** Joins: edlou (uid413273@id-413273.helmsley.irccloud.com)
[18:11:38] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[18:11:51] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[18:12:05] *** Quits: Hercules (~Hercules@user/hercules) (Max SendQ exceeded)
[18:12:12] *** Joins: alzgh (~alzgh@user/alzgh)
[18:12:32] *** Joins: Hercules (~Hercules@user/hercules)
[18:13:08] *** Quits: Hercules (~Hercules@user/hercules) (Max SendQ exceeded)
[18:15:41] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 250 seconds)
[18:15:56] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[18:16:58] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:18:45] *** Joins: chandoo (~chandoo@pool-71-172-140-13.nwrknj.fios.verizon.net)
[18:19:34] *** Joins: pycurious (~Adium@user/pycurious)
[18:22:13] *** Quits: smlavine (~smlavine@sourcehut/user/smlavine) (Quit: nyaa~)
[18:25:42] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[18:27:09] *** Joins: kj (~kj@beta.aerisnetwork.net)
[18:27:49] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 256 seconds)
[18:30:55] *** Joins: chandoo- (~chandoo@pool-71-172-140-13.nwrknj.fios.verizon.net)
[18:31:32] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 240 seconds)
[18:32:13] *** Joins: dionys (dionys@user/dionys)
[18:33:17] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[18:33:31] <dionys> How does this: ps -p $(ps -p $$ -o ppid=) -o args=
[18:33:48] <dionys> differ from this: ps -p $$ -o ppid=
[18:34:37] *** Quits: chandoo (~chandoo@pool-71-172-140-13.nwrknj.fios.verizon.net) (Ping timeout: 256 seconds)
[18:35:01] <dionys>  They seem to give different results, on a box I ssh into and my local machine.
[18:35:42] <Soliton> one shows the parent pid. the other shows args of the parent process.
[18:35:49] <dionys>  argh ... now I see ppid is not pid
[18:36:40] <ormaaj> $$ is always your shell's pid. It isn't updated in subshells.
[18:36:46] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:d18c:8b69:3306:9a69)
[18:36:47] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:d18c:8b69:3306:9a69) (Changing host)
[18:36:47] *** Joins: skapata (~Skapata@user/skapata)
[18:37:46] <phy1729> !$$
[18:37:46] <greybot> $$ expands to the PID of the shell. In a ( ) subshell, it expands to the process ID of the original shell, not the subshell. (Bash 4.0 and above have BASHPID for that.)
[18:38:11] *** Quits: peterrooney (~peter@2604:3d08:1583:7400:dabb:c1ff:fe15:d704) (Ping timeout: 264 seconds)
[18:38:58] *** Joins: peterrooney (~peter@2604:3d08:1583:7400:dabb:c1ff:fe15:d704)
[18:39:01] *** Joins: John_Ivan (~John_Ivan@user/john-ivan/x-1515935)
[18:41:04] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 244 seconds)
[18:43:01] <rendar> `if ! cat ... | ssh ...; then ...` <- this if will fail also if cat will succeed and ssh will fail, right?
[18:43:22] *** Joins: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com)
[18:43:22] *** Quits: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com) (Changing host)
[18:43:22] *** Joins: wuseman (~wuseman@user/wuseman)
[18:45:12] <Soliton> # if ! exit | exit 1; then echo if; fi
[18:45:13] <shbot> Soliton: if
[18:45:46] <Soliton> you negate so it will go to the then case.
[18:46:25] <phy1729> The exit status of a pipeline is the exit status of the last command in the pipeline
[18:46:30] <Soliton> unless cat gets multiple files it's useless, btw.
[18:46:48] <ormaaj> The status of cat is irrelevent
[18:46:58] <ormaaj> Yeah
[18:47:58] *** Joins: YHVH (~yhvh@c-98-235-30-231.hsd1.pa.comcast.net)
[18:49:59] *** Joins: ztrawhcse (3d1f427b6a@archlinux/bugwrangler/eschwartz)
[18:50:37] <rendar> i see
[18:50:49] <rendar> # if ! /bin/false; then echo yes; fi
[18:50:50] <shbot> rendar: yes
[18:50:55] <rendar> # if ! /bin/false | /bin/true; then echo yes; fi
[18:50:56] <shbot> rendar: no output
[18:52:23] *** Joins: pycurious (~Adium@user/pycurious)
[18:52:25] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:54:24] *** Quits: datatech (~specter@user/datatech) (Quit: Lost terminal)
[18:55:56] <rendar> # if ! /bin/true | /bin/false | /bin/true; then echo err; fi
[18:55:57] <shbot> rendar: no output
[18:56:21] <rendar> that's not what i want, i wish that if to trigger whenever one of the pipeline's command fails.. what is the proper way to do that?
[18:56:33] <Soliton> !pipefail
[18:56:33] <greybot> ''set -o pipefail'': if pipefail is enabled, any pipeline's return status is the value of the last (rightmost) command to exit with a non-zero status, or zero if all commands exit successfully.
[18:59:07] <rendar> hmm, i see
[18:59:21] <rendar> # set -o pipefail; if ! /bin/true | /bin/false | /bin/true; then echo err; fi
[18:59:21] <shbot> rendar: err
[18:59:25] <rendar> ok
[19:00:16] *** Joins: GNUHacker (~gnu@fsf/member/GNUHacker)
[19:00:22] *** Quits: N4buc0 (~N4buc0@2804:7f4:3487:cd22:5c68:8495:77fd:afa5) (Remote host closed the connection)
[19:00:31] *** Joins: YaoNai (~YaoNai@user/yaonai)
[19:00:45] *** Joins: N4buc0 (~N4buc0@2804:7f4:3487:cd22:5c68:8495:77fd:afa5)
[19:01:02] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[19:01:05] *** Quits: wuseman (~wuseman@user/wuseman) (Quit: ZNC 1.8.2+deb2build1 - https://znc.in)
[19:04:22] *** Joins: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com)
[19:04:22] *** Quits: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com) (Changing host)
[19:04:22] *** Joins: wuseman (~wuseman@user/wuseman)
[19:07:27] *** Joins: frostwork (~frostwork@user/frostwork)
[19:10:19] *** Quits: wigums (~wigums@user/wigums) (Ping timeout: 256 seconds)
[19:11:04] *** Joins: wigums (~wigums@user/wigums)
[19:11:22] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[19:12:03] *** Joins: GuiToris (~GuiToris@user/guitoris)
[19:12:19] *** Joins: magla (~gelignite@55d431b8.access.ecotel.net)
[19:13:10] *** Quits: totenkoph (~scythe@user/totenkoph) (Remote host closed the connection)
[19:13:55] *** Quits: sarantos (~sarantos@2a02:587:3431:f3d7:7990:f181:6ff:9756) (Quit: Client closed)
[19:13:56] *** Joins: totenkoph (~scythe@user/totenkoph)
[19:14:41] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[19:16:25] <GuiToris> hello, I'm writing a function that do not function well. It's not nearly finished but the tests didn't go well. Function in short; I have a temporary folder, and I'd like to turn off the computer only when it's empty or there are only links in it, otherwise hibernate it. This is where I am now: https://bpa.st/raw/YQJQ
[19:16:30] <GuiToris> what is wrong here?
[19:17:09] *** Joins: ChmEarl (~chmearl@user/chmearl)
[19:17:47] <GuiToris> #mkdir folder; if [[ -s ./folder ]]; then echo full of data;fi
[19:18:03] <GuiToris> #echo hey
[19:18:17] <GuiToris> # echo 2
[19:18:18] <shbot> GuiToris: 2
[19:18:21] <GuiToris> # mkdir folder; if [[ -s ./folder ]]; then echo full of data;fi
[19:18:22] <shbot> GuiToris: no output
[19:18:28] <GuiToris> eff
[19:18:53] <GuiToris> why is this working here?
[19:19:24] <GuiToris> I used the very same command and I got an output
[19:21:46] <GuiToris> https://bpa.st/raw/3DEQ
[19:22:01] <GuiToris> # mkdir another; if [[ -s ./another ]]; then echo 'you see?' ; fi
[19:22:02] <shbot> GuiToris: no output
[19:22:06] <GuiToris> this is strange!
[19:23:25] *** Quits: John_Ivan (~John_Ivan@user/john-ivan/x-1515935) (Read error: No route to host)
[19:23:52] *** Joins: porn (~hentai@2a01:e0a:a5c:a070:6019:62b6:b1f1:721b)
[19:23:52] *** Quits: porn (~hentai@2a01:e0a:a5c:a070:6019:62b6:b1f1:721b) (Changing host)
[19:23:52] *** Joins: porn (~hentai@user/hentai)
[19:25:08] *** Joins: knstn (~knstn@ppp-94-66-57-144.home.otenet.gr)
[19:25:27] *** Quits: xx (~xx@user/xx) (Remote host closed the connection)
[19:25:53] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:26:17] <omegatron> is the "-s" operator applicable to directories?
[19:26:23] *** Joins: n4dir (~user@88.130.152.221)
[19:26:32] <Soliton> not really.
[19:26:39] <Soliton> !faq empty
[19:26:39] <greybot> https://mywiki.wooledge.org/BashFAQ/004 -- How can I check whether a directory is empty or not?  How do I check for any *.mpg files, or count how many there are?
[19:26:53] <omegatron> so, there you have it GuiToris
[19:27:05] *** Joins: xx (~xx@user/xx)
[19:27:38] <GuiToris> what's different here that it worked?
[19:28:09] *** Joins: seninha_ (~seninha@user/seninha)
[19:28:26] *** Quits: hentai (~hentai@user/hentai) (Ping timeout: 268 seconds)
[19:28:38] <Soliton> presumably fresh dir vs one were files used to be in.
[19:28:41] <sixwheeledbeast> the original paste has broken if statements for a start
[19:29:22] <emanuele6> yes, it has     else cmd; elif ...; cmd; ...
[19:29:52] <emanuele6> worse elif ...; then else cmd
[19:30:25] <GuiToris> thank you I'll look through my code, it just failed way too early
[19:30:38] <emanuele6> the syntax isn't valid
[19:30:39] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[19:30:40] *** Quits: xx (~xx@user/xx) (Remote host closed the connection)
[19:31:01] *** Joins: xx (~xx@user/xx)
[19:31:02] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 240 seconds)
[19:31:11] <sixwheeledbeast> !shellcheck
[19:31:11] <greybot> ShellCheck is a shell linting/suggestion tool. Information and online checker: http://www.shellcheck.net/ . Can also be installed locally as a CLI tool.
[19:31:27] <emanuele6> if ...; then ...; else ...; fi     or     if ...; then ...; elif ...; then ...; elif ...; then ...; else ...; fi   with as many elif as you want
[19:31:35] <emanuele6> but you can't write    then else
[19:31:57] <emanuele6> and you can't have an elif after and else (what do you expect that to mean?)
[19:32:04] *** Joins: fsg (^^@2600:3c00::f03c:92ff:fec6:da18)
[19:32:16] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[19:32:17] <emanuele6> s/and/an/2
[19:33:34] *** Joins: extern (~archer@141.226.58.179)
[19:34:40] <GuiToris> thank you, I surely have to reconsider this. This must be completely different as -s doesn't work here. I'm checking the linked page
[19:35:01] *** Joins: skylite (~skylite@2E6B2CD6.catv.pool.telekom.hu)
[19:36:51] <Soliton> # mkdir another; touch another/file; if [[ -s ./another ]]; then echo 'you see?' ; fi
[19:36:52] <shbot> Soliton: no output
[19:37:27] <Soliton> size of a dir has not a lot to do with what's in the dir.
[19:38:32] *** Joins: fcser (~fcser@booty.farted.net)
[19:39:06] <GuiToris> this won't work either : https://bpa.st/raw/JIYQ
[19:39:32] <GuiToris> I just created a directory (=it is supposed to be empty) and it says it's not
[19:39:56] <Soliton> files is an array with a single entry.
[19:39:57] <emanuele6> ./folder/*
[19:40:10] <emanuele6> or   folder/*
[19:40:18] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[19:40:23] <e36freak> aye, the * is the important bit
[19:40:34] <GuiToris> hmm, thanks
[19:40:44] <GuiToris> I was thinking about it, but I wasn't sure
[19:41:12] <emanuele6> also ${#files[@]}
[19:41:14] <e36freak> do you understand what the code is actually doing?
[19:41:38] <GuiToris> e36freak, not at all, copy-pasted it
[19:41:40] *** Joins: richardm75 (~richardm7@2600:8801:c50a:9f00:5170:e0b9:4e7c:9afa)
[19:42:01] <GuiToris> it is working, I'm not sure if I am able to do the second part
[19:42:10] *** Joins: totenkoph (~scythe@user/totenkoph)
[19:42:37] <emanuele6> actually ${#files[*]} seems to be equivalent to ${#files[*]}
[19:42:45] <emanuele6> s/\*/@/2
[19:42:59] <omegatron> GuiToris: if you want to read it : https://www.gnu.org/software/bash/manual/bash.html#Pattern-Matching
[19:44:26] <GuiToris> omegatron, thank you, I think I know this part
[19:45:18] <GuiToris> I'll give it a try to extend the script but if it doesn't work and complicated then I won't bother you
[19:45:19] *** Quits: extern (~archer@141.226.58.179) (Quit: WeeChat 3.3)
[19:46:32] *** Joins: jkwnki2 (~jkwnki@p4fedb5b9.dip0.t-ipconnect.de)
[19:46:32] *** Joins: jkwnki1 (~jkwnki@p4fedb5b9.dip0.t-ipconnect.de)
[19:47:29] <Soliton> for your symlink test you just go over the files and check with -L.
[19:48:29] <GuiToris> really? I thought this was what I need: -h FILE: True if file is a symbolic link.
[19:48:59] *** Joins: A|an (~Alan@173.216.51.200)
[19:49:08] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:49:25] <Soliton> you can also use -h, sure...
[19:49:26] *** Joins: rgrinberg (~textual@200.5.63.76)
[19:49:58] *** Quits: Ad1Tech (~Ad1Tech@h104101.man.tk-internet.pl) (Quit: Leaving)
[19:50:24] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[19:50:32] <GuiToris> I'll use -L because that's what you suggested
[19:51:19] *** Joins: jab416171 (~jab416171@c-67-182-209-82.hsd1.ut.comcast.net)
[19:52:44] <hejux> it is funny, unlink removes non linked files too
[19:52:46] <Soliton> found=0; for f in dir/*; do [[ -L $f ]] || { found=1; break; }; done; if ((found)); then hibernate; else poweroff; fi
[19:53:10] <omegatron> https://bpa.st/A2PQ   maybe this helps as a rough blueprint
[19:53:39] <omegatron> or Soliton's solution ..
[19:54:27] <GuiToris> :O and I thought it was going to be a simple task
[19:54:50] <omegatron> it is still trivial ..
[19:54:51] <GuiToris> thank you, I'll go see if I can paste it in the right place, it's sometimes also a challenge
[19:54:51] * hejux thinks Soliton should rename to Solution, as he always got one.
[19:55:52] <omegatron> the underlying problem here, is that 'test' has no operator to test for an empty directory, though I admit the definition of an empty directory might differ between people/tasks
[19:56:29] <Soliton> they really want to find non-symlink files though. empty is not even particularly relevant.
[19:56:56] <omegatron> (that's why my bash has such operators - but I don't bother to send my patches upstream)
[19:57:26] <omegatron> (which of course makes my scripts non-portable  =D )
[19:58:23] <GuiToris> Soliton, question, this is how it currently looks like: https://bpa.st/raw/ZQRA  can it be: for f in "$files"
[19:58:29] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[19:58:46] <Soliton> no. for f in "${files[@]}"
[19:59:23] <Soliton> the empty check is fairly useless anyway.
[19:59:46] <GuiToris> hmm, I haven't thought of this
[19:59:49] <Soliton> the for loop will simply not do anything if there are no files.
[20:00:22] <Soliton> weird indentation, btw.
[20:01:45] *** Joins: kill (~killown@user/killown)
[20:02:39] *** Quits: seninha_ (~seninha@user/seninha) (Quit: Leaving)
[20:03:15] <GuiToris> Soliton, are you saying that's the whole thing? https://bpa.st/raw/XD3Q
[20:03:22] <GuiToris> I don't need any more checks?
[20:04:15] <Soliton> you may still want nullglob/dotglob.
[20:04:25] *** Joins: gschanuel1 (~gschanuel@user/gschanuel)
[20:04:33] <Soliton> otherwise, yes.
[20:04:46] <GuiToris> where can I read more about (()) ?
[20:04:48] <GuiToris> I don't know it
[20:04:52] <Soliton> !((
[20:04:53] <greybot> ((...)) is an arithmetic command, which returns an exit status of 0 if the expression is nonzero, or 1 if the expression is zero. Also used as a synonym for "let", if side effects (assignments) are needed. See <http://mywiki.wooledge.org/ArithmeticExpression>.
[20:05:06] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[20:05:07] *** gschanuel1 is now known as gschanuel
[20:05:17] <Soliton> you can write ((found != 0)) as well.
[20:05:23] <GuiToris> thank you very much!
[20:05:40] *** Joins: et (~et@user/et)
[20:05:50] *** porn is now known as hentai
[20:06:04] <GuiToris> now it makes more sense to me
[20:10:42] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[20:12:30] *** Quits: totenkoph (~scythe@user/totenkoph) (Remote host closed the connection)
[20:12:56] *** Joins: seninha (~seninha@user/seninha)
[20:12:59] *** Joins: totenkoph (~scythe@user/totenkoph)
[20:13:44] *** Quits: Armanzor (~Armanzor@user/armanzor) (Read error: Connection reset by peer)
[20:14:29] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[20:15:57] *** Joins: zebrag (~chris@user/zebrag)
[20:17:10] *** Quits: kill (~killown@user/killown) (Ping timeout: 244 seconds)
[20:17:32] *** Joins: mei3 (~mei@user/mei)
[20:18:30] *** Quits: totenkoph (~scythe@user/totenkoph) (Remote host closed the connection)
[20:19:04] *** Joins: totenkoph (~scythe@user/totenkoph)
[20:20:03] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[20:20:33] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[20:21:27] *** Joins: mtk (~mtk@2601:185:200:72:44aa:53fe:886b:bee9)
[20:21:32] *** Quits: jkwnki2 (~jkwnki@p4fedb5b9.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[20:21:32] *** Quits: jkwnki1 (~jkwnki@p4fedb5b9.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[20:23:59] *** Joins: pycurious (~Adium@user/pycurious)
[20:24:46] *** Quits: tangy (~tangy@user/tangy) (Remote host closed the connection)
[20:30:32] *** Quits: GuiToris (~GuiToris@user/guitoris) (Ping timeout: 240 seconds)
[20:30:40] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[20:31:34] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[20:32:08] *** Quits: frostwork (~frostwork@user/frostwork) (Quit: Leaving)
[20:35:14] *** Joins: iamGavinJ (~iamGavinJ@user/iamgavinj)
[20:36:16] *** Joins: N4buc0- (~N4buc0@186.212.203.26)
[20:36:51] *** Quits: N4buc0 (~N4buc0@2804:7f4:3487:cd22:5c68:8495:77fd:afa5) (Remote host closed the connection)
[20:38:52] *** Quits: jab416171 (~jab416171@c-67-182-209-82.hsd1.ut.comcast.net) (Ping timeout: 244 seconds)
[20:43:43] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c5a4:eaf2:add7:ad94) (Remote host closed the connection)
[20:44:24] *** Joins: jab416171 (~jab416171@c-67-182-209-82.hsd1.ut.comcast.net)
[20:44:45] *** Joins: Inline (~Inline@2a02:908:1252:7a80:2e5d:c24e:9b07:51fd)
[20:46:53] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[20:49:34] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[20:50:09] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[20:59:51] *** Joins: thyriaen (~thyriaen@dynamic-077-013-084-082.77.13.pool.telefonica.de)
[21:00:23] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[21:01:26] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[21:03:32] <TomyWork> hmm, a GuiTorus, where you can infinitely scroll in all directions, ending up where you started if you scroll for long enough
[21:03:37] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:03:45] *** Joins: pycurious (~Adium@user/pycurious)
[21:05:08] *** Quits: n4dir (~user@88.130.152.221) (Remote host closed the connection)
[21:06:20] *** Quits: zostj (~rue@1-162-45-243.dynamic-ip.hinet.net) (Quit: WeeChat 3.3)
[21:07:23] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[21:09:12] <TomyWork> hejux, back in the 90s, unlink is what i learned as the command to use to remove a file
[21:10:29] <TomyWork> hmm... it was either some early suse linux in the 90s or a solaris in the early 2000s.
[21:11:02] <TomyWork> either way, proves that not only all tutorials on the internet are wrong, but also many real-life tutorials
[21:11:56] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 244 seconds)
[21:11:59] *** Joins: ravan (~ravan@user/ravan)
[21:12:58] *** Quits: A|an (~Alan@173.216.51.200) (Ping timeout: 244 seconds)
[21:18:32] *** Quits: jab416171 (~jab416171@c-67-182-209-82.hsd1.ut.comcast.net) (Ping timeout: 240 seconds)
[21:18:40] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[21:19:18] *** Quits: TomyWork (~TomyLobo@p200300e80f06af00605c69348000900a.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:19:50] *** Quits: legola (~legola@46.235.101.181) (Remote host closed the connection)
[21:21:26] *** Quits: polve (~polve@twcitalia/polve) (Ping timeout: 260 seconds)
[21:22:32] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 240 seconds)
[21:23:16] *** Joins: polve (~polve@twcitalia/polve)
[21:23:44] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[21:23:57] *** Joins: jab416171 (~jab416171@c-174-52-57-117.hsd1.ut.comcast.net)
[21:25:28] <knstn> Why there is a distinction between $BASHOPTS and $SHELLOPTS? $SHELLOPTS will apply to dash,ksh, etc?
[21:25:52] *** Joins: zoe (~zoe@fsf/member/zoe)
[21:26:20] *** Joins: Goblins (~mz@12.231.191.170)
[21:26:35] <omegatron> BASHOPTS are recognized by bash, not necessarily by other shells
[21:26:58] <izabera> why is there a distinction between set -o and shopt?
[21:27:16] *** Joins: user217_ (~andrii@195.138.71.41)
[21:27:23] * knstn lifts shoulders
[21:28:27] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:28:32] *** Quits: jab416171 (~jab416171@c-174-52-57-117.hsd1.ut.comcast.net) (Ping timeout: 240 seconds)
[21:31:19] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:31:23] *** Joins: The_Loko (~The_Loko@86.127.253.186)
[21:32:54] *** Joins: tmm88 (~tmm88@2001:8a0:ff48:1500:4fa:bd3a:832a:1b6c)
[21:32:56] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:33:12] *** Quits: tmm88 (~tmm88@2001:8a0:ff48:1500:4fa:bd3a:832a:1b6c) (Changing host)
[21:33:12] *** Joins: tmm88 (~tmm88@user/tmm88)
[21:33:26] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:33:27] *** Joins: jab416171 (~jab416171@c-174-52-57-117.hsd1.ut.comcast.net)
[21:34:49] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:36:15] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[21:37:14] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:38:44] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[21:40:13] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Ping timeout: 250 seconds)
[21:47:16] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Excess Flood)
[21:48:36] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:48:48] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[21:49:46] *** Joins: A|an (~Alan@173.216.51.200)
[21:49:58] *** Quits: tmm88 (~tmm88@user/tmm88) (Quit: Client closed)
[21:50:05] *** Quits: thyriaen (~thyriaen@dynamic-077-013-084-082.77.13.pool.telefonica.de) (Quit: Leaving)
[21:51:46] *** Joins: nyex (~Thunderbi@177.84.107.30)
[21:53:02] *** Joins: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:913c:73e9:9979:f03)
[21:55:00] <ormaaj> I think shopt went in quite early. Possibly have to ask Brian Fox that one, or hunt through list archives for some discussion.
[21:57:24] <izabera> my shopt does both
[21:57:40] <izabera> it breaks 0% of the time
[22:01:48] *** Joins: hejux_0 (~hejux@193.122.100.11)
[22:02:55] *** Quits: user217_ (~andrii@195.138.71.41) (Quit: Konversation terminated!)
[22:05:44] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[22:06:53] <ormaaj> The POSIX diehards seem to think undefined behavior == "noncompliant code". Not an attitude that's particularly conducive to getting interoperable features implemented and standardized or ambiguities resolved with a well-defined spec.
[22:07:00] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[22:09:15] *** Joins: frostwork (~frostwork@user/frostwork)
[22:09:35] <ormaaj> i'd speculate shopt is just an unfortunate attempt to guard against an imaginary problem just like "CSS vendor prefixes" used to be before people realized they're pointless.
[22:10:03] *** Joins: thyriaen (~thyriaen@dynamic-077-013-084-082.77.13.pool.telefonica.de)
[22:11:56] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[22:12:12] *** Joins: jdltouraine (~jdltourai@2a02:a03f:847b:b800:913c:73e9:9979:f03)
[22:12:23] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 244 seconds)
[22:12:53] *** Joins: rgrinberg (~textual@200.5.63.76)
[22:13:47] *** Quits: somlis (~somlis@user/somlis) (Quit: WeeChat 3.3)
[22:13:52] *** Quits: hejux_0 (~hejux@193.122.100.11) (Quit: WeeChat 3.3)
[22:14:01] *** Quits: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:913c:73e9:9979:f03) (Ping timeout: 250 seconds)
[22:16:02] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 240 seconds)
[22:16:50] *** Quits: jdltouraine (~jdltourai@2a02:a03f:847b:b800:913c:73e9:9979:f03) (Remote host closed the connection)
[22:16:55] <earnestly> ormaaj: Do you mean unspecified rather than undefined?
[22:17:03] *** Joins: jdltouraine (~jdltourai@2a02:a03f:847b:b800:913c:73e9:9979:f03)
[22:18:48] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[22:19:33] *** Joins: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:913c:73e9:9979:f03)
[22:19:40] * hejux removed some important files with 'unlink'
[22:19:44] *** Joins: somlis (~somlis@user/somlis)
[22:20:15] <ormaaj> Maybe? The standard being the definition so... yes. Since there's also the second category of undefined that is "undocumented behavior"
[22:20:16] *** Quits: jdltouraine (~jdltourai@2a02:a03f:847b:b800:913c:73e9:9979:f03) (Read error: Connection reset by peer)
[22:20:21] <hejux> never do unlink on files, it is dangerous. just 'rm'
[22:22:36] *** Joins: jdltouraine (~jdltourai@44.229-131-109.adsl-dyn.isp.belgacom.be)
[22:24:01] <ormaaj> hejux: couldn't be that important since you're typing shit instead of scrambling for the power button before the fs does a commit.
[22:24:06] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[22:24:25] *** Quits: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:913c:73e9:9979:f03) (Ping timeout: 250 seconds)
[22:24:44] <earnestly> ormaaj: undefined in the sense 'always bad', the result of some error or 'holding it wrong' where as unspecified is basically platform defined
[22:25:01] <earnestly> whereas*
[22:25:23] *** Joins: n4dir (~user@88.130.152.221)
[22:25:26] *** Quits: thyriaen (~thyriaen@dynamic-077-013-084-082.77.13.pool.telefonica.de) (Quit: Leaving)
[22:26:01] *** Joins: gordonfish (~gordonfis@user/gordonfish)
[22:26:28] <ormaaj> (Granted i don't know which fs)
[22:27:25] *** Quits: mtk (~mtk@2601:185:200:72:44aa:53fe:886b:bee9) (Remote host closed the connection)
[22:27:51] *** Quits: keypusher (keypusher@user/keypusher) (Quit: bye)
[22:30:23] *** Joins: mtk (~mtk@2601:185:200:72:44aa:53fe:886b:bee9)
[22:30:31] <ormaaj> orhejux has great backups / snapshots so no panic required. :)
[22:30:37] *** Quits: jdltouraine (~jdltourai@44.229-131-109.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[22:30:41] *** Parts: Goblins (~mz@12.231.191.170) ()
[22:30:52] *** Joins: jdltouraine (~jdltourai@2a02:a03f:847b:b800:913c:73e9:9979:f03)
[22:31:21] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 250 seconds)
[22:35:23] *** Quits: frostwork (~frostwork@user/frostwork) (Quit: Leaving)
[22:38:02] *** Joins: docmax_ (~docmax@dynamic-077-001-245-146.77.1.pool.telefonica.de)
[22:40:28] *** Quits: docmax (~docmax@77.6.11.51) (Ping timeout: 250 seconds)
[22:41:56] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[22:43:30] *** Joins: extern (~archer@141.226.58.179)
[22:43:41] *** Joins: ravan (~ravan@user/ravan)
[22:44:16] *** Quits: jdltouraine (~jdltourai@2a02:a03f:847b:b800:913c:73e9:9979:f03) (Ping timeout: 245 seconds)
[22:44:46] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Quit: WeeChat 3.3)
[22:45:23] *** Joins: pycurious (~Adium@user/pycurious)
[22:46:07] *** Joins: TTwrs (~TTwrs@c-67-169-185-154.hsd1.ca.comcast.net)
[22:47:41] <xx> why would unlink be bad but rm ok?
[22:52:10] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[22:53:23] <Benway>  "A GUI is someone else's idea of how you should use a computer"
[22:54:17] *** Joins: keypusher (keypusher@user/keypusher)
[22:55:33] *** Joins: Libero (~Libero@188.4.25.75.dsl.dyn.forthnet.gr)
[22:57:00] <ormaaj> s/G//
[22:59:02] *** Quits: jab416171 (~jab416171@c-174-52-57-117.hsd1.ut.comcast.net) (Ping timeout: 240 seconds)
[23:04:28] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[23:04:34] *** Joins: jab416171 (~jab416171@c-174-52-57-117.hsd1.ut.comcast.net)
[23:06:01] <xx> s/GUI/keyboard
[23:06:10] * xx waits for brain chips
[23:06:22] *** Joins: akoana (~ah@user/akoana)
[23:06:53] *** Quits: furrymcgee (~devuan@cgn-213-196-210-222.nc.de) (Quit: leaving)
[23:08:14] <wiscii> who.needs.a.keyboard.(especially.one.with.dodgy.space-bar).just.plug.your.brain.in.directly!
[23:08:51] <wiscii> can.i.map.space.to.some.other.ke.in.bash?
[23:09:27] <xx> spacebar itself should have been split into two keys. I have two thumbs, why should they both hit the same key?
[23:09:35] <emanuele6> wiscii: yes!
[23:09:42] <emanuele6> bind '".":" "'
[23:09:56] <emanuele6> this will make . insert a space
[23:09:58] *** Quits: extern (~archer@141.226.58.179) (Quit: WeeChat 3.3)
[23:10:09] <wiscii> emanuele6:tyvm-;)
[23:10:48] *** Joins: extern (~archer@141.226.58.179)
[23:13:03] *** Quits: TTwrs (~TTwrs@c-67-169-185-154.hsd1.ca.comcast.net) (Quit: Leaving)
[23:14:55] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:15:40] <omegatron> xx: then use a flexible silicon keyboard .. they have two space keys
[23:15:44] <sixwheeledbeast> Who needs whitespace anyway, bash just eats it.
[23:16:10] <xx> omegatron: but they both emit the same keycode, at least the one I had did
[23:17:14] <omegatron> then use a software to configure the keyboard ..
[23:17:23] <ormaaj> xx: In this instance I don't know. unlink(1) blindly calls unlink(3) and specifies no special error handling, so errors will be passed on per unlink(3). rm(1) specifies extra steps, e.g. that the utility perform permissions checks, ignores . and .., and defines the separate treatment of regular files and directories.
[23:17:56] <omegatron> ControllerMate for mac os x for example allows you set any action to any key on any input device .. (that's why I use three keyboards here..)
[23:18:00] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[23:18:21] *** Joins: alzgh (~alzgh@user/alzgh)
[23:20:53] *** Joins: Night-Shade (~Tim@82.132.187.29)
[23:22:39] *** Quits: eschwartz (~eschwartz@archlinux/bugwrangler/eschwartz) (Ping timeout: 244 seconds)
[23:25:05] *** Joins: seninha (~seninha@user/seninha)
[23:25:27] *** Quits: Night-Shade (~Tim@82.132.187.29) (Read error: Connection reset by peer)
[23:26:37] *** Joins: eschwartz (~eschwartz@archlinux/bugwrangler/eschwartz)
[23:27:49] *** Quits: wigums (~wigums@user/wigums) (Ping timeout: 244 seconds)
[23:29:24] *** Joins: Night-Shade (~Tim@ip-185-104-136-52.ptr.icomera.net)
[23:29:54] *** Joins: wigums (~wigums@user/wigums)
[23:32:39] *** Quits: extern (~archer@141.226.58.179) (Quit: WeeChat 3.3)
[23:36:05] *** Quits: Night-Shade (~Tim@ip-185-104-136-52.ptr.icomera.net) (Ping timeout: 256 seconds)
[23:40:38] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[23:41:06] <superboot> Hey all. printf vs echo (with no options)? aka, printf 'text' vs echo 'text'. Is there a reason to choose one over the other?
[23:41:52] <emanuele6> # text=-e; echo "$text"; printf '%s\n' "$text"
[23:41:52] <shbot> emanuele6:
[23:41:53] <shbot> emanuele6: -e
[23:41:58] <emanuele6> !echo
[23:41:58] <greybot> echo outputs a string. echo has many portability problems, and should never be used with option flags. Consider printf instead: printf 'name: %s\n' "$name". http://wiki.bash-hackers.org/commands/builtin/echo | http://cfajohnson.com/shell/cus-faq.html#Q0b | http://www.in-ulm.de/~mascheck/various/echo+printf
[23:45:50] *** Quits: mei3 (~mei@user/mei) (Quit: mei3)
[23:46:00] *** Quits: timj (~timj@user/timj) (Remote host closed the connection)
[23:46:06] *** Quits: GNUHacker (~gnu@fsf/member/GNUHacker) (Quit: Leaving)
[23:46:19] <ormaaj> xx: importanty unlink() doesn't take a va_list or anything thus the utility only handles a single path to a regular file. If you mess up it's kind of your own fault. rm of course defines separately iteration over its args and to stop processing on errors.
[23:46:28] *** Joins: smlavine (~smlavine@sourcehut/user/smlavine)
[23:46:33] *** Joins: derpadmin (~Anonymous@love2.be.sexy)
[23:47:12] *** Joins: mei3 (~mei@user/mei)
[23:47:40] <Freneticks> I have a script that launch a second script, how can I get a var from the second script in the first. I cannot get the stdout because i echo a lot of thing in the second script.
[23:47:55] *** Joins: GNUHacker (~gnu@fsf/member/GNUHacker)
[23:47:59] <xx> Freneticks: export
[23:48:17] <Freneticks> xx: export work in the second for the first ?
[23:48:35] <xx> I read that wrong
[23:48:36] *** Quits: derpadmin (~Anonymous@love2.be.sexy) (Client Quit)
[23:48:51] <ormaaj> source
[23:49:05] <wiscii> is.that.bash.only.or.sh.too?
[23:49:08] <Freneticks> bash
[23:49:10] <e36freak> !faq change
[23:49:11] <greybot> https://mywiki.wooledge.org/BashFAQ/060 -- I'm trying to write a script that will change directory (or set a variable), but after the script finishes, I'm back where I started (or my variable isn't set)!
[23:51:12] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 276 seconds)
[23:53:51] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[23:54:04] *** Joins: sublim20 (~sublim20@user/sublim20)
[23:54:18] *** Joins: timj (~timj@user/timj)
[23:57:23] *** Joins: angkat (~angkat@2a02:587:121f:f103:7e7a:c8ae:bfec:cb23)
[23:58:30] *** Papa_ is now known as papa
