[00:13:50] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[00:14:23] *** Joins: lisp123 (~lisp123@5.30.23.247)
[00:15:41] *** Joins: seok (~Seok@n114-73-75-18.bla3.nsw.optusnet.com.au)
[00:15:58] <seok> Hello !
[00:16:40] <seok> How can I get a different thread/process to print to the main print stream ?
[00:19:17] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 264 seconds)
[00:33:50] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 246 seconds)
[00:35:59] *** Joins: waleee (~waleee@h-98-128-228-119.na.cust.bahnhof.se)
[00:36:14] <White_Flame> seok: technically, they do by default ;)
[00:36:32] <White_Flame> the "main print stream" if you're in SLIME will to go the *inferior-lisp* buffer, which is the actual stdout of the lisp process
[00:36:50] <White_Flame> the stream that feeds the slime repl is a different one
[00:37:27] <White_Flame> so from the code run on the stream, you can pass the value of *standard-output* into the stream, and bind that thread's *standard-output* when you start it
[00:37:35] <White_Flame> *run on the repl
[00:37:43] <White_Flame> *into the thread
[00:37:48] <White_Flame> (man, I just woke up :-P)
[00:41:21] <seok> oh I will check *inferior-lisp* buffer, thank you !
[00:42:52] <White_Flame> assuming you're using bordeaux-threads, there's the initial-bindings parameter to make-thread, as well as *default-special-bindings* variable
[00:43:06] <White_Flame> where you can pass the current value of *standard-output& through
[00:46:30] <White_Flame> hmm, my slime environment seems to redirect all repl-launched threads' standard output to the slime repl buffer by default
[00:53:48] *** Joins: lisp123 (~lisp123@5.30.23.247)
[01:00:37] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[01:09:06] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 260 seconds)
[01:12:41] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 264 seconds)
[01:19:35] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca)
[01:29:42] <pjb> seok: indeed, if you're using slime, the repl streams are not the main print stream. But you can still have threads using one of them, Just store the *termina-io* of a slime repl into some variable the thread can use.
[01:32:14] <pjb> seok: If you start from the slime-repl: (bt:make-thread (lambda () (loop for i below 4 do (print i) finally (terpri))) :initial-bindings (acons '*terminal-io* *terminal-io* bt:*default-special-bindings*))
[01:33:07] <pjb> seok: another way is to choose a slime-repl, and (defparameter cl-user::*slime-terminal-io* *terminal-io*)  then you can use cl-user::*slime-terminal-io* from thread started from anywhere.
[01:33:33] <pjb> seok: note: for output, and even more for input, you will need to synchronize the threads that use the same streams!
[01:35:06] *** Joins: dra (~dra@2a04:4540:6404:e500:c11d:e40:1d19:13dd)
[01:40:35] *** Joins: lisp123 (~lisp123@5.30.23.247)
[01:49:05] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 246 seconds)
[01:51:55] *** Quits: dra (~dra@2a04:4540:6404:e500:c11d:e40:1d19:13dd) (Quit: Leaving)
[02:13:58] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[02:15:26] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[02:49:37] *** Joins: Oladon (~olad@98.43.81.226)
[03:20:33] *** Quits: random-nick (~random-ni@87.116.183.65) (Ping timeout: 264 seconds)
[03:34:48] *** Joins: random-nick (~random-ni@87.116.180.119)
[03:47:07] *** Joins: lisp123 (~lisp123@5.30.23.247)
[03:57:27] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 252 seconds)
[04:13:24] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[04:26:15] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[04:47:58] *** Quits: sts-q (~sts-q@212.53.219.203) (Ping timeout: 252 seconds)
[05:07:53] *** Quits: random-nick (~random-ni@87.116.180.119) (Ping timeout: 264 seconds)
[05:14:36] *** Joins: CptKirk20 (~CptKirk@70-59-5-216.hlrn.qwest.net)
[05:14:41] *** CptKirk20 is now known as cptjimkirk
[05:14:44] *** cptjimkirk is now known as CptJimKirk
[05:15:17] *** Quits: CptKirk (~CptKirk@97-118-72-33.hlrn.qwest.net) (Ping timeout: 256 seconds)
[05:41:18] *** Quits: waleee (~waleee@h-98-128-228-119.na.cust.bahnhof.se) (Ping timeout: 252 seconds)
[06:19:14] *** Quits: emacsomancer (~emacsoman@136.60.128.68) (Read error: Connection reset by peer)
[06:22:07] *** Joins: lisp123 (~lisp123@5.30.23.247)
[06:25:09] *** Joins: emacsomancer (~emacsoman@136.60.128.68)
[06:26:38] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 246 seconds)
[06:31:28] *** Joins: sts-q (~sts-q@212.53.219.224)
[06:41:58] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[06:57:41] *** Quits: sts-q (~sts-q@212.53.219.224) (Ping timeout: 264 seconds)
[07:02:07] *** Joins: sts-q (~sts-q@91.200.108.137)
[07:06:37] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[07:47:16] *** Joins: seok- (~Seok@n114-73-75-18.bla3.nsw.optusnet.com.au)
[07:50:29] *** Quits: seok (~Seok@n114-73-75-18.bla3.nsw.optusnet.com.au) (Ping timeout: 264 seconds)
[07:53:49] *** Quits: seok- (~Seok@n114-73-75-18.bla3.nsw.optusnet.com.au) (Read error: Connection reset by peer)
[07:54:13] *** Joins: seok- (~Seok@n114-73-75-18.bla3.nsw.optusnet.com.au)
[08:17:52] *** Joins: selwyn (~selwyn@user/selwyn)
[08:55:57] *** Quits: CptJimKirk (~CptKirk@70-59-5-216.hlrn.qwest.net) (Quit: Client closed)
[08:58:25] *** Joins: CptKirk (~CptKirk@70-59-5-216.hlrn.qwest.net)
[09:32:15] *** Joins: lisp123 (~lisp123@5.30.23.247)
[09:34:02] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[09:34:19] *** Joins: lisp123 (~lisp123@5.30.23.247)
[09:47:18] *** Quits: CptKirk (~CptKirk@70-59-5-216.hlrn.qwest.net) (Ping timeout: 256 seconds)
[09:58:20] *** Joins: shka (~herr@109.231.62.239)
[11:45:34] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[11:47:56] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 246 seconds)
[11:54:38] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[12:33:23] *** Joins: selwyn (~selwyn@user/selwyn)
[12:35:55] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:38:57] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:42:41] *** Quits: seok- (~Seok@n114-73-75-18.bla3.nsw.optusnet.com.au) (Ping timeout: 264 seconds)
[14:20:58] *** Joins: lottaquestions (~nick@2607:fa49:503e:3000:4989:9ea:8da6:45c5)
[15:02:30] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[16:21:10] *** Joins: random-nick (~random-ni@87.116.180.119)
[16:24:53] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[16:25:39] *** Joins: selwyn (~selwyn@user/selwyn)
[16:27:38] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[17:26:47] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[18:13:54] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[18:36:44] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 246 seconds)
[18:38:49] *** Joins: aeth (~aeth@user/aeth)
[18:42:19] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[18:42:50] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[18:44:46] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[18:45:10] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:54:56] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 246 seconds)
[18:57:10] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[19:08:57] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[19:16:57] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[19:35:06] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 260 seconds)
[19:36:38] *** Joins: thrig (~thrig@65.113.153.50)
[19:36:56] *** Joins: aeth (~aeth@user/aeth)
[19:38:51] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[19:46:00] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[19:53:16] *** Quits: pjb (~pjb@user/pjb) (Ping timeout: 268 seconds)
[19:57:44] *** Joins: selwyn (~selwyn@user/selwyn)
[20:07:49] *** Joins: CptKirk (~CptKirk@70-59-5-216.hlrn.qwest.net)
[20:12:09] *** Quits: CptKirk (~CptKirk@70-59-5-216.hlrn.qwest.net) (Client Quit)
[20:47:22] *** Joins: CptKirk (~CptKirk@70-59-5-216.hlrn.qwest.net)
[20:49:23] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 246 seconds)
[20:50:56] *** Joins: pjb (~pjb@user/pjb)
[20:51:20] *** Joins: aeth (~aeth@user/aeth)
[20:55:34] *** Quits: CptKirk (~CptKirk@70-59-5-216.hlrn.qwest.net) (Quit: WeeChat 2.8)
[20:59:39] *** Joins: CptKirk (~CptKirk@70-59-5-216.hlrn.qwest.net)
[21:00:46] *** Quits: CptKirk (~CptKirk@70-59-5-216.hlrn.qwest.net) (Client Quit)
[21:01:04] *** Joins: CptKirk (~CptKirk@70-59-5-216.hlrn.qwest.net)
[21:06:47] *** Joins: yewscion (~yewscion@2604:ca00:149:479::60:4768)
[21:07:50] *** Quits: CptKirk (~CptKirk@70-59-5-216.hlrn.qwest.net) (Quit: WeeChat 2.8)
[21:08:35] *** Joins: CptKirk (~CptKirk@70-59-5-216.hlrn.qwest.net)
[21:47:16] <lisp123> I have a file which I am compiling, and I placed a (defparameter *symbol*) after its use --> SBCL is giving me a warning for undefined variable, is this expected?
[21:48:38] <lisp123> Hmm strange...warning has disappeared now *shrugs*
[21:51:25] <Partmedia> lisp123, that is expected, and the problem doesn't exist the second time because (assuming you haven't restarted your image), the symbol is now defined
[21:52:24] <Partmedia> lisp123, this warning is to "warn" you about a potential problem if you don't later define *symbol*, and your are loading into a REPL. You probably won't see this warning if you later go on to (compile-file) this.
[21:53:56] <thrig> also ideally remove the warnings from the code
[22:33:10] *** Quits: thrig (~thrig@65.113.153.50) (Remote host closed the connection)
[22:35:33] <lotuseater> look at the lambda list of DEFVAR vs DEFPARAMETER ;)
[23:00:24] <mfiano> That is not expected
[23:00:32] <mfiano> It should be an error
[23:00:52] <mfiano> DEFPARAMETER requires a binding.
[23:11:36] *** Quits: CptKirk (~CptKirk@70-59-5-216.hlrn.qwest.net) (Quit: WeeChat 2.8)
[23:15:02] <pjb> lisp123: 1- put defvar and defparameter before you use the special variable, OR put a (declaim (special *var*)) before you use the special variable *var*.
[23:15:10] <lotuseater> lisp123: forgot to highlight you
[23:15:18] <pjb> lisp123: 2- indeed defparameter needs an initial-value-expression.
[23:16:09] <pjb> lisp123: 3- and as you have noticed, load-ing or compile-file-ing mutates the image, and therefore is rarely idempotent.
[23:17:03] <lisp123> pjb: So when compiling, do I need to put (declaim (special *var*)) before using it? I thought it was one compilation unit (same file) so the the warning shouldn't have been generated?
[23:17:31] <mfiano> It's impossible to create a non-special variable with DEFVAR or DEFPARAMETER
[23:17:37] <pjb> lisp123: no, just put the defvar or defparameter first!
[23:18:01] <lisp123> mfiano & lotuseater: Sorry, what I did was (defparameter *something* '(....)), sorry for not clarifying earlier
[23:18:01] <pjb> there's no good reason to put the defvar or defparameter at the end of the file…
[23:18:37] <mfiano> It is actually undefined behavior to reference a variable that has not yet been initialized
[23:18:49] <mfiano> Before referencing *foo* make sure it is defined!
[23:19:05] <lisp123> Whereas for functions its okay to define them afterwards?
[23:19:15] <pjb> lisp123: only in the same compilation-unit.
[23:19:32] <lisp123> pjb: Yes
[23:19:42] <pjb> lisp123: load or compile-file are compilation unit, unless you put them in a with-compilation-unit.
[23:19:56] <mfiano> It can be. That depends on inlining etc. But the standard doesn't specify the inline declaration be honored (only notinline), so this is undefined behavior we're talking about
[23:21:42] <lisp123> Sorry, as I'm still a bit confused. Is this the correct understanding: Functions can be defined after they are used as long as within the compilation unit, Defvar / Defparameter must appear before?
[23:21:57] <mfiano> Not all the time, no
[23:22:11] <lisp123> I just had a very long list within defparameter, hence putting it to the end
[23:22:16] <mfiano> Macrosmight use a function, and macro-expansion happens before runtime
[23:22:28] <lisp123> mfiano: Good point
[23:22:33] <mfiano> Same deal with inlining, except a different time
[23:22:43] <lisp123> Okay, I will just put everything first
[23:35:12] *** Quits: yewscion (~yewscion@2604:ca00:149:479::60:4768) (Remote host closed the connection)
[23:35:55] <pjb> lisp123: you can have a defvar before a defparameter.
[23:36:17] <pjb> lisp123: (defvar *foo*) a lot of code (defparameter *foo* (list a lot of data))
[23:38:45] <lisp123> pjb: Thanks yes, that I know. I was thinking of (defun ... *foo*) .... (defparmaeter *foo* 'baz)
[23:38:53] *** Joins: tophullyte (tophullyte@gateway/vpn/protonvpn/tophullyte)
[23:40:07] <pjb> lisp123: (defvar *foo*) (defun ... *foo*) .... (defparmaeter *foo* 'baz)
[23:40:21] <lisp123> pjb: Genius! Thanks
[23:08:25] *** Quits: tophullyte (tophullyte@gateway/vpn/protonvpn/tophullyte) (Ping timeout: 252 seconds)
[23:16:33] <White_Flame> Ithink I'd prefer declaiming it special instead of defvar'ing it
[23:16:50] <White_Flame> however, as long as you leave it without a value, it'll catch any early-use errors
[23:22:17] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 252 seconds)
[23:33:18] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[23:37:41] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[23:42:50] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 265 seconds)
[23:44:26] *** Joins: aeth (~aeth@user/aeth)
