[00:00:51] <eN_Joy> so i have a pair of pandas timestamp object `a, b`, i can get the weekday name by, say, a.day_name(), how do i get a list of day names from a to b?
[00:00:55] *** Joins: pycurious (~Adium@user/pycurious)
[00:03:08] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[00:03:59] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Read error: Connection reset by peer)
[00:04:13] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[00:05:13] *** Quits: Forsaken87 (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:05:33] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Client Quit)
[00:05:39] <leitz> mugwort, what prevents you from being a real software guy?
[00:06:01] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[00:06:54] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[00:07:00] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73)
[00:11:25] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Ping timeout: 240 seconds)
[00:11:38] *** Joins: LordKalma_ (~LordKalma@server.ruilvo.com)
[00:15:12] *** Joins: ouestbillie (~gallup@bl4-157-38.dsl.telepac.pt)
[00:15:23] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[00:15:29] <leitz> Any Sqlite folks here? Still getting an issue with insert, and now delete, and calling con.commit(). Without the con.commit, the DB doesn't seem to get changed.
[00:16:58] *** Joins: ajnulo (~ajnulo@dynamic-176-002-223-083.176.2.pool.telefonica.de)
[00:17:35] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[00:18:32] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl488ravz0wvsb637.ipv6.telus.net) (Quit: Leaving)
[00:18:32] *** Quits: LordKalma_ (~LordKalma@server.ruilvo.com) (Ping timeout: 240 seconds)
[00:19:26] *** Quits: ice9 (~ice9@user/ice9) (Read error: Connection reset by peer)
[00:19:43] *** Joins: ice9 (~ice9@user/ice9)
[00:20:27] *** Quits: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[00:21:46] *** Joins: matsaman (~matsaman@user/matsaman)
[00:22:13] <Numerlor> commit is what saves the transaction to the actual db
[00:23:28] <leitz> Numerlor, that was my understanding, which is why it choking the tests seems an issue. I will point out that the inserts seem to work without it, often enough.
[00:24:14] *** Joins: walterwhip (~www@user/walterwhip)
[00:24:44] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-1d13-cde8-80a7-543f.res6.spectrum.com) (Read error: Connection reset by peer)
[00:24:48] *** Quits: ShmoSeph (~textual@c-69-248-83-247.hsd1.nj.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:24:54] *** Joins: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net)
[00:25:40] *** Joins: Ruit (~textual@c-69-248-83-247.hsd1.nj.comcast.net)
[00:26:25] <leitz> The actual failing code:   https://github.com/LeamHall/CharacterBible/blob/delete_by_idx/datamine/datamine.py#L59-L70
[00:26:59] <leitz> With another section, too:   https://github.com/LeamHall/CharacterBible/blob/delete_by_idx/datamine/datamine.py#L82-L106
[00:28:17] <leitz> The failing test:   https://github.com/LeamHall/CharacterBible/blob/delete_by_idx/test/test_datamine.py#L87-L95
[00:28:28] *** Joins: Mortician (~Mortician@cpe-75-83-83-8.socal.res.rr.com)
[00:28:53] *** Joins: PointThink (~PointThin@acbh119.neoplus.adsl.tpnet.pl)
[00:29:39] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[00:30:34] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[00:31:02] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[00:31:58] *** Quits: Listiner290 (~PointThin@acbh119.neoplus.adsl.tpnet.pl) (Ping timeout: 250 seconds)
[00:32:12] <ChrisWarrick> leitz: how does the test fail?
[00:32:50] *** Quits: ouestbillie (~gallup@bl4-157-38.dsl.telepac.pt) (Ping timeout: 250 seconds)
[00:33:30] <leitz> ChrisWarrick, https://bpa.st/27UA
[00:34:19] <leitz> I wonder if the issue is using both the con and the cur?
[00:34:39] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 256 seconds)
[00:35:20] <ChrisWarrick> leitz: nah, that’s fine
[00:35:47] *** Quits: ahmed (~ahmed@154.101.128.122) (Ping timeout: 256 seconds)
[00:35:57] <ChrisWarrick> leitz: your exceptions are not useful and harmful to debugging, consider letting the sqlite3 exceptions get thrown as-is
[00:36:32] *** Quits: PointThink (~PointThin@acbh119.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[00:37:10] <ChrisWarrick> leitz: perhaps there’s some other error happening earlier?
[00:37:35] *** Joins: frmlof (~frmlof@70.243.238.191)
[00:37:36] <leitz> ChrisWarrick, understood. I'm right past the edge of my understanding and using the exceptions to guide me.
[00:38:03] *** Quits: demon__ (~user@197.54.99.203) (Ping timeout: 256 seconds)
[00:38:22] *** Joins: Pickchea (~private@user/pickchea)
[00:39:12] *** Quits: Ruit (~textual@c-69-248-83-247.hsd1.nj.comcast.net) (Read error: Connection reset by peer)
[00:39:37] <leitz> ChrisWarrick, if I run just that test, it works. If I put the test at the top of the test suite, it works.
[00:39:44] *** Joins: baltazaar (~baltazar@84-236-20-10.pool.digikabel.hu)
[00:40:08] <ChrisWarrick> yeah, that sounds like an earlier exception causing the failure
[00:40:12] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:40:19] <leitz> But the other tests seem to work without issues. Not sure if something is breaking and just dropping off when the test run ends.
[00:40:25] *** Joins: vlm (~vlm@user/vlm)
[00:40:47] <ChrisWarrick> perhaps there is some failing operation earlier that was silenced
[00:40:47] *** Quits: baltazar (~baltazar@84-236-20-10.pool.digikabel.hu) (Quit: still here as baltazaar)
[00:40:48] <leitz> My guess would be the con.commit in the insert, since that's now also causing an issue.
[00:41:09] <leitz> Lemme test the insert a bit, and see what happens.
[00:41:09] *** Joins: walterwhip (~www@user/walterwhip)
[00:41:32] <ChrisWarrick> uncomment self.con.commit() in insert()
[00:41:39] <ChrisWarrick> and remove your exception handlers
[00:41:53] *** Quits: Bkid (~Bkid@user/bkid) (Read error: Connection reset by peer)
[00:42:14] <Payam> ohh x = (y:=None, f:=None) is possible in 3.9
[00:42:28] <nedbat> Payam: is that good? :)
[00:42:40] <Payam> shorter line
[00:42:40] *** Joins: skapata (~Skapata@191.177.185.183)
[00:42:40] *** Quits: skapata (~Skapata@191.177.185.183) (Changing host)
[00:42:40] *** Joins: skapata (~Skapata@user/skapata)
[00:42:53] <Payam> yeah. how about in 3.8?
[00:43:12] <Repiphany> x = y, f = None, None
[00:43:33] <leitz> ChrisWarrick, first test: uncomment con.commit() in insert, comment out exception handlers, comment out remove_by_idx; the new line is inserted, no errors.
[00:43:47] *** Joins: baltazar (~baltazar@84-236-20-10.pool.digikabel.hu)
[00:44:09] <Payam> Repiphany, so if later y=dict... will x also be a dict?
[00:44:23] *** Joins: ethrl (~ethereal@user/doforlove33)
[00:44:40] <Repiphany> No, that wouldn't work in either case
[00:44:45] *** Quits: baltazaar (~baltazar@84-236-20-10.pool.digikabel.hu) (Quit: still here as baltazar)
[00:44:51] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[00:44:52] *** Joins: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net)
[00:44:53] <Payam> sure?
[00:45:22] <Payam> x,y,f=None, None, None is the same as x=y, f= None, None?
[00:45:31] <Repiphany> You can just play around in a repl and see
[00:45:41] <Payam> yeah
[00:45:56] <Repiphany> No, you're making a tuple x = (None, None)
[00:46:03] <leitz> ChrisWarrick, second test, same as above except uncommented remove_by_idx (at the end of the test file), and kept those exception handlers commented out.  Database locked:   https://bpa.st/HIRQ
[00:46:05] <Repiphany> None and tuples are immutable
[00:46:30] *** Joins: Bkid (~Bkid@user/bkid)
[00:46:39] *** Joins: magla (~gelignite@55d476aa.access.ecotel.net)
[00:47:04] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[00:47:09] <Payam> Yes you ar eright. I was thinking about lists.
[00:47:33] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:47:40] <Repiphany> Even with a list, you can't "name" an index in a list so that modifying one modifies the other
[00:48:32] *** Quits: ajnulo (~ajnulo@dynamic-176-002-223-083.176.2.pool.telefonica.de) (Ping timeout: 240 seconds)
[00:48:58] <Payam> I was thinking about x=y=[]
[00:49:05] <Payam> and x,y = [],[]
[00:49:11] <Payam> it is another thing
[00:49:49] <Payam> unrelated
[00:49:57] <ChrisWarrick> leitz: hm, I think you might be misusing cursors. You should create new cursors in each method and close them when you’re done using them
[00:50:31] <leitz> ChrisWarrick, cool. Let me work on that!
[00:51:35] <leitz> ChrisWarrick, I thought you closed the con, not the cursor?
[00:51:48] <ChrisWarrick> both are closeable
[00:51:51] *** Quits: platta (~platta@pool-173-61-104-121.cmdnnj.fios.verizon.net) (Read error: Connection reset by peer)
[00:51:59] * leitz gets back to work.
[00:52:59] *** Joins: platta (~platta@pool-173-61-104-121.cmdnnj.fios.verizon.net)
[00:54:34] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[00:56:54] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:57:02] <eN_Joy> I partially figured out my own problem posted earlier, but the while condition is faulty, can someone take a look at my routine? https://bpa.st/ZZZQ
[00:57:18] <eN_Joy> original question: so i have a pair of pandas timestamp object `a, b`, i can get the weekday name by, say, a.day_name(), how do i get a list of day names from a to b?
[00:58:03] *** Joins: platta4 (~platta@pool-173-61-104-121.cmdnnj.fios.verizon.net)
[00:59:01] *** Quits: platta (~platta@pool-173-61-104-121.cmdnnj.fios.verizon.net) (Ping timeout: 256 seconds)
[01:02:52] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[01:03:37] <leitz> ChrisWarrick, that seems to have done it.
[01:04:04] <leitz> ChrisWarrick, I'd still appreciate any recommendations on the exceptions, though. How can I make them useful?
[01:04:07] *** Quits: platta4 (~platta@pool-173-61-104-121.cmdnnj.fios.verizon.net) (Ping timeout: 256 seconds)
[01:05:47] *** Joins: thiras (~thiras@user/thiras)
[01:08:00] *** Quits: cosimone` (~user@93-44-186-112.ip98.fastwebnet.it) (Remote host closed the connection)
[01:09:04] *** Joins: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net)
[01:09:05] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[01:09:13] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[01:11:45] *** Joins: platta (~platta@pool-173-61-104-121.cmdnnj.fios.verizon.net)
[01:13:41] *** Quits: platta (~platta@pool-173-61-104-121.cmdnnj.fios.verizon.net) (Read error: Connection reset by peer)
[01:14:14] *** Quits: Praise (~Fat@user/praise) (Quit: Vado a fare qualcosa di utile.)
[01:15:52] *** Joins: platta (~platta@pool-173-61-104-121.cmdnnj.fios.verizon.net)
[01:17:20] *** Joins: darksun (~darksun@user/darksun)
[01:18:20] *** Quits: trainsley69_ (~trainsley@c83-252-9-240.bredband.tele2.se) (Ping timeout: 250 seconds)
[01:19:46] <catern> is there a decent, easy way to get a better repr/str for functions? something that mentioned the arguments that the functions takes, say
[01:20:02] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[01:20:48] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[01:21:13] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[01:22:14] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 250 seconds)
[01:22:49] *** Quits: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net) (Ping timeout: 256 seconds)
[01:24:32] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 240 seconds)
[01:24:43] *** Quits: greedom (~greedom@p200300de67355e00640ebef3f92c858b.dip0.t-ipconnect.de) (Remote host closed the connection)
[01:25:38] *** Joins: greedom (~greedom@p200300de67355e00640ebef3f92c858b.dip0.t-ipconnect.de)
[01:30:04] <ChrisWarrick> leitz: (1) Don’t catch exceptions you can’t meaningfully handle, let them raise to the top-level error handler (2) Avoid catching exceptions to raise another one with a less informative message
[01:31:33] <nedbat> catern: you can use the inspect module to build something like that, but it won't be repr
[01:31:59] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[01:32:07] <catern> yes, I want some way to improve repr/str
[01:32:18] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[01:32:49] <nedbat> catern: you can't change that
[01:32:55] *** Joins: trainsley69_ (~trainsley@c83-252-9-240.bredband.tele2.se)
[01:32:55] *** Joins: Praise (~Fat@user/praise)
[01:32:59] <nedbat> catern: unless you change the python source code and rebuild python
[01:33:27] *** Joins: sidro (~sidro@86.122.231.222)
[01:33:46] <BrenBarn> well, you could wrap all your functions in a decorator that wraps them in a class that gives the str/repr you want
[01:33:47] <BrenBarn> but that won't affect any other functions you use from other libs and stuff
[01:34:58] *** Quits: greedom (~greedom@p200300de67355e00640ebef3f92c858b.dip0.t-ipconnect.de) ()
[01:35:59] *** Joins: darksun (~darksun@user/darksun)
[01:36:15] *** Quits: ethrl (~ethereal@user/doforlove33) (Remote host closed the connection)
[01:37:04] <catern> that would be fine
[01:37:12] <catern> is there a decent, easy library that does that?
[01:38:20] <ChrisWarrick> catern: do you want this to be done in the REPL or in some kind of script?
[01:38:21] *** Joins: lntl (~joey@24.136.23.254)
[01:40:02] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 240 seconds)
[01:40:46] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[01:42:49] *** Joins: jfcaron (~jfcaron@192.252.229.171)
[01:45:48] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:47:20] *** Joins: Macuser (~Macuser@216.30.159.201)
[01:48:00] <Repiphany> IPython
[01:49:00] *** Quits: goldcrest (~goldcrest@176.234.9.123) (Remote host closed the connection)
[01:50:42] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[01:52:00] *** Quits: sidro (~sidro@86.122.231.222) (Quit: Konversation terminated!)
[01:53:45] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[01:54:03] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:54:45] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[01:54:50] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:55:21] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[01:56:08] *** Quits: rememberYou (~someone@user/rememberyou) (Remote host closed the connection)
[01:57:25] *** Quits: BlessJah (~BlessJah@user/blessjah) (Remote host closed the connection)
[02:00:23] *** Joins: BlessJah (~BlessJah@user/blessjah)
[02:00:30] <catern> ChrisWarrick: both
[02:00:55] <catern> e.g. you could imagine it being useful when logging or reading a backtrace
[02:01:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[02:01:11] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[02:02:46] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[02:02:47] *** Joins: darksun (~darksun@user/darksun)
[02:02:56] *** Joins: redrob1n (~redrob1n@adsl-99-93-209-124.dsl.mtry01.sbcglobal.net)
[02:03:19] *** Joins: fikran (~fikran@user/fikran)
[02:04:17] *** Joins: PJBoy (~PJBoy@user/pjboy)
[02:05:41] *** Joins: walterwhip (~www@user/walterwhip)
[02:06:32] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 240 seconds)
[02:07:18] *** Joins: ensyde (~ensyde@2600:1700:2050:1040:17c:22a2:b625:20d7)
[02:08:55] *** Joins: natewrench (~Soce1964@cpe-72-228-153-194.buffalo.res.rr.com)
[02:09:49] *** Quits: natewrench (~Soce1964@cpe-72-228-153-194.buffalo.res.rr.com) (Read error: Connection reset by peer)
[02:10:18] *** Joins: natewrench (~Soce1964@cpe-72-228-153-194.buffalo.res.rr.com)
[02:11:54] *** Quits: natewrench (~Soce1964@cpe-72-228-153-194.buffalo.res.rr.com) (Read error: Connection reset by peer)
[02:12:17] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:14:08] *** Quits: walterwhip (~www@user/walterwhip) (Quit: Textual IRC Client: www.textualapp.com)
[02:14:14] *** Quits: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by) (Ping timeout: 250 seconds)
[02:14:48] *** Joins: walterwhip (~www@user/walterwhip)
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:50] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:32] *** Quits: moha (uid506645@id-506645.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[02:18:27] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[02:18:31] *** Joins: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[02:19:54] *** Quits: e_ (~e@pool-74-104-156-25.bstnma.fios.verizon.net) (Quit: Leaving)
[02:20:41] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[02:20:44] *** Quits: Staunch (~Staunch@150.73.100.34.bc.googleusercontent.com) (Ping timeout: 250 seconds)
[02:24:23] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[02:25:29] *** Joins: nichlas (uid374954@id-374954.uxbridge.irccloud.com)
[02:28:31] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:5143:664b:aeb1:9527) (Read error: Connection reset by peer)
[02:28:45] *** Quits: ensyde (~ensyde@2600:1700:2050:1040:17c:22a2:b625:20d7) (Quit: Leaving)
[02:29:04] *** Joins: ensyde (~ensyde@2600:1700:2050:1040:17c:22a2:b625:20d7)
[02:29:13] *** Joins: frmlof (~frmlof@70.243.238.191)
[02:29:50] *** Quits: ensyde (~ensyde@2600:1700:2050:1040:17c:22a2:b625:20d7) (Client Quit)
[02:30:17] *** Quits: frmlof (~frmlof@70.243.238.191) (Client Quit)
[02:30:19] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[02:30:34] *** Joins: ensyde (~ensyde@2600:1700:2050:1040:17c:22a2:b625:20d7)
[02:31:18] *** Quits: platta (~platta@pool-173-61-104-121.cmdnnj.fios.verizon.net) (Read error: Connection reset by peer)
[02:31:47] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[02:32:37] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 240 seconds)
[02:32:48] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:33:18] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:33:31] *** vinleod is now known as vdamewood
[02:33:36] *** Joins: platta (~platta@pool-173-61-104-121.cmdnnj.fios.verizon.net)
[02:33:45] *** Joins: kevr` (~kevr@user/kevr)
[02:33:56] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[02:34:22] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[02:35:24] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Quit: Leaving)
[02:35:45] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[02:37:37] *** Joins: Alicia_ (~Alicia_@201.206.191.100)
[02:40:17] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:40:40] *** kevr` is now known as kevr
[02:42:00] *** Quits: Alicia_ (~Alicia_@201.206.191.100) (Quit: Client closed)
[02:44:02] *** Quits: upsala (~zcb@185.209.196.170) (Ping timeout: 240 seconds)
[02:45:39] *** Joins: jazzy (~jaziz@user/jaziz)
[02:45:56] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[02:46:19] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[02:48:16] *** Joins: constxd_ (~brad@142.167.170.88)
[02:48:24] <constxd_> kings
[02:48:28] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[02:49:13] <constxd_> not sure if this is the best place to ask but
[02:50:23] <constxd_> how would you go about testing whether two images are similar using opencv
[02:50:47] <constxd_> like if i open them in an image viewer i can't tell which one is which
[02:51:09] <matsaman> pretty sure many have come before you on that
[02:51:16] <constxd_> exactly
[02:51:21] <constxd_> should be easy right
[02:51:24] *** Joins: Lojas (~Lojas@user/Lojas)
[02:51:24] <constxd_> solved problem
[02:51:31] *** Quits: emad (~emad@156.214.182.157) (Quit: Leaving)
[02:51:56] *** Quits: redrob1n (~redrob1n@adsl-99-93-209-124.dsl.mtry01.sbcglobal.net) (Ping timeout: 250 seconds)
[02:51:56] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 250 seconds)
[02:55:31] *** Joins: jdmark (~jdmark@user/jdmark)
[02:56:14] *** Joins: Terexen (~terexen@user/terexen)
[02:56:43] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[02:56:52] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[02:57:01] *** Quits: NoelFlantier3 (~Hubert@static.189.244.201.195.clients.your-server.de) (Remote host closed the connection)
[02:57:28] *** Joins: NoelFlantier3 (~Hubert@static.189.244.201.195.clients.your-server.de)
[02:57:34] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Client Quit)
[02:57:49] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[02:58:17] *** Joins: Metalsutton (~Metalsutt@101.100.153.103)
[02:59:06] <The-Compiler> constxd_: there's http://pdiff.sourceforge.net/ for example, though not opencv
[02:59:34] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[03:00:22] <The-Compiler> constxd_: https://www.pyimagesearch.com/2017/06/19/image-difference-with-opencv-and-python/
[03:00:44] *** Joins: Macuser (~Macuser@216.30.159.201)
[03:01:22] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[03:01:37] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[03:01:42] *** Joins: jazzy2 (~jaziz@user/jaziz)
[03:02:02] *** Joins: noarb (~noarb@user/noarb)
[03:02:14] *** Quits: rovanion (~rovanion@h-46-59-13-236.A163.priv.bahnhof.se) (Ping timeout: 252 seconds)
[03:04:17] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[03:04:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[03:04:54] *** Joins: frmlof (~frmlof@70.243.238.191)
[03:05:56] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[03:06:56] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[03:07:02] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[03:07:20] *** Quits: magla (~gelignite@55d476aa.access.ecotel.net) (Quit: Stay safe!)
[03:08:00] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[03:08:19] *** Quits: george91 (~george91@103.137.204.24) (Quit: Leaving...)
[03:09:23] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[03:09:48] *** Quits: Metalsutton (~Metalsutt@101.100.153.103) (Quit: Leaving)
[03:09:52] *** Joins: parv (~quass@user/parv)
[03:10:02] *** Quits: Guest9014 (~vit@chello085216193138.chello.sk) (Ping timeout: 240 seconds)
[03:11:14] *** Joins: Linkandzelda (~Linkandze@cloudirc.laz.li)
[03:11:34] *** Quits: Kruppt (~Kruppt@50.111.29.57) (Quit: Leaving)
[03:12:01] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[03:12:19] <nedbat> i have a race condition in coverage.py: one process creates a sqlite db, another process see the file exists, and tries to read the data, but the tables don't exist in the database yet.  is there a good way to synchronize across processes like this?
[03:13:22] *** Joins: jazzy3 (~jaziz@user/jaziz)
[03:14:52] *** Joins: jazzy (~jaziz@user/jaziz)
[03:15:36] *** Joins: panella32 (~panella32@45.130.83.91)
[03:16:17] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[03:16:26] *** Quits: Esteri (Esteri@gateway/vpn/protonvpn/esteri) (Quit: Esteri Libera)
[03:17:16] *** Joins: cisme_ (~cisme_@2600:1700:d980:1a40:4c84:61f3:586:9717)
[03:17:57] *** Quits: jazzy3 (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[03:18:23] <montpol> I'd like to do I-Q demodulation with python just to see how it looks. I need to times a signal shown here https://imgur.com/a/zLn5rQm (the array mainly) with cos(w*t) where w =10Mhz. How can I do this exactly?
[03:18:59] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:19:20] *** Quits: walterwhip (~www@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:21:01] <Numerlor> nedbat: how are those processes created? Would a multiprocessing event to notify the other process work or are they completely separate?
[03:21:13] *** Quits: Guddu (~Guddu@122.161.81.114) (Read error: Connection reset by peer)
[03:21:22] <nedbat> Numerlor: the process creation is out of my control.  I am a library they are using.
[03:21:42] <nedbat> Numerlor: I'm looking into `open(..., mode="x")` as part of a solution
[03:22:03] *** Joins: mud (~mud@user/kadoban)
[03:23:52] <parv> Do I have it right that exclude mode, of open(), is only for writing an nonexistent file?
[03:24:22] <parv> s/(nonexistent file)/previously $1/
[03:24:26] *** Quits: marcello42 (~mp@2001:1a81:139b:b900:b5bb:1d66:db88:b0f) (Ping timeout: 250 seconds)
[03:24:35] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[03:24:36] <constxd_> nedbat: this is a case of somebody running two instances of their own program, and that program uses coverage.py?
[03:24:52] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[03:25:07] <nedbat> parv: mode="x" means open for writing, but fail if the file already exists
[03:25:20] *** Joins: marcello42 (~mp@2001:1a81:139b:b901:522b:ddae:e729:3597)
[03:25:36] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[03:25:41] <nedbat> constxd_: their program spawns subprocesses, and coverage.py is running in each of them.
[03:26:02] <parv> nedbat, Thanks for the confirmation. That is what I understood from the doc
[03:26:11] *** Quits: mugwort (~mugwort@2a00:23c5:259b:2001:5d91:b856:c159:b52e) (Ping timeout: 256 seconds)
[03:26:28] <constxd_> so you need to be able to handle an arbitrary number of processes all running coverage.py simultaneously sharing the same sqlite db
[03:26:47] *** Quits: Lojas (~Lojas@user/Lojas) (Quit: Going offline, see ya! (www.adiirc.com))
[03:27:04] <parv> Need another correction: s/exclude/exclusive/
[03:27:41] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:27:47] <constxd_> idk can't you just lock the file while you're writing?
[03:28:18] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[03:30:13] *** Joins: waxfire6 (~waxfire@65.119.2.240)
[03:30:41] <nedbat> constxd_: well, sqlite handles that while writing records.  i just need to fix the problem while creating the db.  but sqlite hides the actual file creation, so i need to do something alongside it.
[03:31:14] <Numerlor> Do you try to directly read from the table if the file exists? I think with sqlite's exclusive lock on writing it should be fine for every process to try to create the table with a if not exists and then do its own thing
[03:32:17] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[03:32:48] <nedbat> Numerlor: hmm, that's an interesting angle
[03:33:42] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[03:33:42] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[03:33:45] *** Quits: MrCollinsGA (~MrCollins@199.231.255.146) (Quit: Leaving)
[03:36:37] <nedbat> Numerlor: though there's a bit of one-time data written also. I wish IF NOT EXISTS would tell me if i was the one who made the table.
[03:37:28] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:38:56] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[03:39:04] *** Joins: hexenbane (~hexenbane@2806:2f0:91a1:73a8:6d7e:5743:f724:3ae0)
[03:39:37] *** Joins: smrtz (~smrtz@user/smrtz)
[03:39:46] *** Joins: mharig (~mharig@181.188.139.229)
[03:40:06] *** Quits: smrtz (~smrtz@user/smrtz) (Client Quit)
[03:41:08] *** Joins: Ion27 (~Ion@27.17.82.39)
[03:41:17] *** Quits: cisme_ (~cisme_@2600:1700:d980:1a40:4c84:61f3:586:9717) (Ping timeout: 240 seconds)
[03:41:51] *** Joins: MichaelLaRosa[m] (~michaelbi@2001:470:69fc:105::1:6ac9)
[03:43:11] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:45:31] *** Joins: smrtz (~smrtz@user/smrtz)
[03:45:57] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[03:46:32] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[03:47:21] *** Joins: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is)
[03:47:32] *** Quits: marcello42 (~mp@2001:1a81:139b:b901:522b:ddae:e729:3597) (Ping timeout: 240 seconds)
[03:48:45] <constxd_> nedbat: what is the correct behavior
[03:49:08] <constxd_> do you want the second process to wait until the first one is finished writing, and then read?
[03:49:12] <hrob> o/   ehm,  Im using json.loads()  to decode an array of strings .... but Im hitting an unexpected issue with how string quotes are used.
[03:49:17] <nedbat> constxd_: one process should make the database, and others shouldn't try to use it until it's initialized
[03:49:26] *** Quits: smrtz (~smrtz@user/smrtz) (Client Quit)
[03:49:30] <constxd_> so should the other processes block?
[03:49:34] *** Joins: marcello42 (~mp@2001:1a81:13b0:8300:40f1:59b9:1fcf:dec9)
[03:49:42] <nedbat> constxd_: yes.
[03:49:58] <hrob> e.g.   json.load("['foo']")   fails... but if I swap the "  and ' .. it works
[03:49:59] *** Quits: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:50:18] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[03:50:28] <hrob> sorry meant   json.loads   with an "s"
[03:50:47] <hrob> json.loads("['foo']")
[03:50:50] <constxd_> nedbat: can you use an EXCLUSIVE transaction to do the create + one-time write?
[03:50:54] *** Joins: bluedust (~bluedust@103.161.144.94)
[03:51:59] <constxd_> hrob: yes json only uses double quotes
[03:52:03] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:52:13] <constxd_> unlike javascript
[03:52:20] <constxd_> (and python of course)
[03:53:36] <nedbat> constxd_: hmm, that's another good idea.  what i have is:  if file_exists: use_it; else: create_it
[03:53:50] <hrob> constxd_  hm yes makes a lot of sense, ahh.... ok ... the json is encoded with   str( some list )....
[03:53:55] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:54:10] <hrob> thats probably my failure... not sure how I should encode it into db other way
[03:54:38] <constxd_> json.dumps?
[03:55:02] *** Quits: bluedust (~bluedust@103.161.144.94) (Ping timeout: 240 seconds)
[03:55:28] <hrob> constxd_ lol yes...
[03:56:59] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[03:57:14] <constxd_> nedbat: seems like you want to combine the O_EXCL idea with exclusive transaction
[03:57:16] *** Joins: crashrep (~crashrep@user/crashrep)
[03:57:22] *** Quits: inomoz (~inomoz@176.59.121.150) (Ping timeout: 250 seconds)
[03:57:26] <nedbat> constxd_: but i don't create the file.  sqlite does
[03:57:32] *** Quits: timburke__ (~timburke@157.131.128.146) (Ping timeout: 240 seconds)
[03:59:03] <constxd_> what about
[04:00:05] <constxd_> if open('coverage.lock', 'wx'): create sqlite db and populate initial data using exclusive transaction; else: open and read
[04:00:22] <nedbat> constxd_: yeah, seems like it has to be something like that
[04:00:31] <hrob> constxd_  that worked... the string created is now encoded in some funky way so that json.dumps  seems to understand it perfectly
[04:00:43] <hrob> tx
[04:00:46] <nedbat> constxd_: i know the next bug report will be because the lock file got orphaned, and nothing progresses
[04:02:17] <constxd_> s/wx/x/
[04:02:29] <constxd_> yeah idk it's kinda ugly
[04:03:34] <nedbat> constxd_: it's fiddly, but seems kind of typical for this kind of thing
[04:05:43] <constxd_> nedbat: all of the processes using the db are in the same process tree right
[04:05:52] <constxd_> is there no way to initialize the database before any forks
[04:06:02] <nedbat> constxd_: i can't guarantee that. i have no control over the processes
[04:07:41] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 252 seconds)
[04:08:26] <constxd_> nedbat: wait you know the name of the database file right
[04:08:44] <nedbat> constxd_: yes
[04:08:56] <nedbat> constxd_: i can use that to create lock files, etc.
[04:09:15] <Numerlor> I think a create table, checking if some data exists and if not writing it should work in an exclusive lock
[04:09:27] *** Joins: newpy (~newpy@206.168.231.90)
[04:09:52] <constxd_> what if you open with O_EXCL, and then if it succeeds, close it and then have sqlite reopen
[04:09:57] *** Quits: cebtenzzre (~cebtenzzr@2603-7081-3406-8f26-84a1-7a94-9d0b-0877.res6.spectrum.com) (Ping timeout: 240 seconds)
[04:09:59] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[04:10:04] <constxd_> only one process will ever succeed on the O_EXCL open
[04:10:22] *** Joins: cebtenzzre (~cebtenzzr@2603-7081-3406-8f26-cc00-fa87-d45c-241c.res6.spectrum.com)
[04:10:24] <constxd_> then the database file *is* the lock file so they can't be out of sync
[04:10:33] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[04:11:15] <nedbat> constxd_: there's a window between closing it and sqlite re-opening.
[04:11:23] <constxd_> so what
[04:11:26] <constxd_> it exists
[04:11:43] <nedbat> constxd_: yes, but it's not initialized yet.  The error I have is "table doesn't exist"
[04:12:40] *** Joins: fikran (~fikran@user/fikran)
[04:12:52] *** Joins: humberto1 (~humbertow@189.236.30.209)
[04:13:19] <constxd_> lmao
[04:13:21] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[04:13:43] <constxd_> i gotta read APIUE
[04:13:58] <constxd_> this should be basic shit
[04:14:06] <nedbat> constxd_: what is apiue?
[04:14:08] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[04:14:20] <constxd_> advanced programming the unix environment
[04:16:16] <constxd_> i feel like if you really want correctness you can't check for the file's existence though
[04:16:51] *** Quits: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Quit: Client closed)
[04:17:14] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[04:17:43] *** Joins: Metalsutton (~Metalsutt@101.100.153.103)
[04:17:47] <nedbat> constxd_: mode="x" is the way to do that.
[04:18:10] *** Quits: humberto1 (~humbertow@189.236.30.209) (Ping timeout: 250 seconds)
[04:18:23] <constxd_> yeah
[04:19:28] *** Quits: Ion27 (~Ion@27.17.82.39) (Ping timeout: 256 seconds)
[04:20:54] <constxd_> i think Numerlor has the right idea
[04:21:41] <constxd_> all of the conditional stuff should be handled by in SQL, your python code shouldn't care whether it created the database file or not
[04:21:52] <constxd_> s/by in/in/
[04:23:10] <nedbat> constxd_: i would like to do that.  i'll have to wrap my head around the exclusive transaction idea
[04:23:46] <constxd_> nedbat: what is the nature of this one-time data you have to write after creating the table?
[04:23:56] *** Joins: monkey_ (~user@190.104.116.153)
[04:24:09] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[04:25:30] *** Joins: Wulf (~Wulf@user/wulf)
[04:25:48] <constxd_> if you just have like: 'create table if not exists; insert initial data if not already present; ... ' then every process should be able to just execute the same SQL and not care about who actually created the table
[04:27:09] <constxd_> maybe 'INSERT OR IGNORE ...' or 'INSERT ... WHERE NOT EXISTS ...'
[04:27:20] <nedbat> constxd_: right, but i don't know if there's an "insert unless it exists".  i might need to change the schema a bit to do that.
[04:28:46] <nedbat> constxd_: https://github.com/nedbat/coveragepy/blob/master/coverage/sqldata.py#L268-L277
[04:31:18] *** Joins: Ion43 (~Ion@27.17.82.39)
[04:34:05] <constxd_> nedbat: yeah i think you can just change it to
[04:34:14] <constxd_> 'insert or ignore into meta'
[04:36:14] <nedbat> constxd_: i can't find a description of "ignore"
[04:36:42] <nedbat> ah: https://www.sqlite.org/lang_conflict.html
[04:38:11] <nedbat> "conflict" is triggered by constraint violations. hmmm
[04:38:21] <nedbat> oops, "ignore" is triggered
[04:38:40] <constxd_> https://www.sqlite.org/lang_insert.html
[04:43:42] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[04:44:19] *** Joins: monkey_ (~user@190.104.116.153)
[04:45:13] *** Quits: nichlas (uid374954@id-374954.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[04:45:34] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.4)
[04:45:52] *** Joins: c4017__ (~c4017@S0106c0943583f893.vf.shawcable.net)
[04:47:26] *** Quits: ephemer0l (~ephemer0l@organizedmagnetism.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[04:47:47] *** Joins: ephemer0l (~ephemer0l@organizedmagnetism.com)
[04:48:46] *** Quits: akk (~akk@174-28-122-47.albq.qwest.net) (Quit: +++)
[04:48:57] *** Quits: c4017_ (~c4017@2604:3d08:747f:7c90:a889:4f4d:e472:168c) (Ping timeout: 240 seconds)
[04:50:03] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[04:51:29] *** Joins: frmlof (~frmlof@70.243.238.191)
[04:52:19] *** Quits: frmlof (~frmlof@70.243.238.191) (Client Quit)
[04:52:21] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Quit: brb)
[04:54:35] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[04:56:18] *** Quits: Mortician (~Mortician@cpe-75-83-83-8.socal.res.rr.com) (Ping timeout: 250 seconds)
[04:56:38] *** Quits: skeemer (~skeemer@h-158-174-23-219.NA.cust.bahnhof.se) (Quit: Leaving)
[04:57:32] *** Joins: Astara (~skraito@user/skraito)
[04:57:42] * Astara hi come to channel #holyhacker at freenode irc server for some 0day Chat
[04:57:45] *** Quits: Astara (~skraito@user/skraito) (K-Lined)
[04:59:46] *** Quits: a0z1 (~a0z1@37.120.159.165) (Ping timeout: 250 seconds)
[04:59:55] <catern> totally lazy question: what Python IDE or REPL has the absolute best support for autocompletion? based on both type annotations and runtime data. I care about nothing except for that, I just want to see what the best possible thing is for Python
[05:02:36] <Numerlor> It'll be either pycharm or vscode. I only have experience with pycharm and it's fine in most situations but it's type inferrence is not great and how some of the auto completion works bugs me (mostly auto imports)
[05:03:03] <Numerlor> Both will most likely have their downsides and are extensible through plugins, so try them out
[05:03:47] *** Joins: menace (~someone@ppp-93-104-176-202.dynamic.mnet-online.de)
[05:05:11] *** Joins: fxhp (~fxhp@d-206-53-88-50.ct.cpe.atlanticbb.net)
[05:05:21] *** Quits: Deknos (~someone@user/menace) (Ping timeout: 256 seconds)
[05:06:38] *** Quits: mharig (~mharig@181.188.139.229) (Quit: WeeChat 3.4)
[05:07:32] *** Quits: panella32 (~panella32@45.130.83.91) (Ping timeout: 240 seconds)
[05:07:40] <catern> Numerlor: do you have enough experience with pycharm that you'd be willing to answer a couple quick questions about it? (if so: is there a way to display more full help/documentation for symbols? Ctrl-Q seems to only show fairly basic info - I'd expect at least a list of methods, and maybe for e.g. dataclasses even the fields)
[05:08:18] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[05:09:44] *** Quits: lntl (~joey@24.136.23.254) (Ping timeout: 250 seconds)
[05:10:19] *** Joins: duplox (~duplox@137.220.127.235)
[05:15:24] <Numerlor> I have worked with it for quite a while but I don't think it's too in depth as my uses are relatively basic. For finding out what a class can do I usually jump to its definition (or stubs), I think there is a popup window for that too, but I don't use it
[05:17:12] *** Joins: frmlof (~frmlof@70.243.238.191)
[05:19:07] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (Ping timeout: 256 seconds)
[05:19:24] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[05:20:11] *** Joins: nomic2 (~nomic@185.198.243.163)
[05:20:37] <catern> I also suspect the best REPL is going to have better autocompletion than the best IDE (because in theory a REPL has much more runtime information) so I'm also interested in suggestions about which REPL has the best autocompletion/code suggestions
[05:21:26] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 250 seconds)
[05:23:05] *** Quits: nomic (~nomic@185.198.243.163) (Ping timeout: 256 seconds)
[05:25:36] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[05:26:29] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[05:26:49] <constxd_> catern: bpython is pretty based
[05:28:36] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Remote host closed the connection)
[05:28:43] *** nomic2 is now known as nomic
[05:28:48] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 250 seconds)
[05:29:53] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[05:30:58] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 250 seconds)
[05:31:00] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[05:31:25] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:41] *** Joins: zmt00 (~zmt00@user/zmt00)
[05:33:06] <dre> bpython or ipython?
[05:33:16] <dre> I've always used ipython and it works reasonably well tbh
[05:33:37] <dre> catern, ^
[05:33:58] *** Quits: hightower2 (~hightower@212.15.178.16) (Read error: Connection reset by peer)
[05:35:51] *** Quits: hexenbane (~hexenbane@2806:2f0:91a1:73a8:6d7e:5743:f724:3ae0) (Quit: Leaving)
[05:37:22] <catern> well, there's one main feature I'm interested in: which of these support running something like "help" on an expression? (without evaluating it, in the same way that they support autocompleting methods without evaluating the expression on which the method is being invoked)
[05:38:07] *** Joins: califax- (~califax@user/califx)
[05:38:30] *** Quits: zmt00 (~zmt00@user/zmt00) (Quit: Leaving)
[05:38:36] <catern> so far, I haven't seen this in pycharm or ptpython, but it's certainly possible...
[05:40:20] <dre> there's a doc function iirc
[05:40:25] <dre> basic python has it
[05:40:27] *** Quits: LimeOn (~user@user/limeon) (Quit: .)
[05:40:32] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 240 seconds)
[05:40:37] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:40:37] <dre> and would read the __doc__ string
[05:40:42] <catern> ...
[05:40:49] <dre> i don't get the question sorry
[05:40:49] <catern> yes it's called "help"
[05:41:00] <Repiphany> IPython has `function?` and `function??`
[05:41:02] *** brabrax_ is now known as brabrax
[05:41:27] <dre> nice, thanks, sorry I've been learning lisp too much, it's "documentation" in lisp, I got confused
[05:41:27] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[05:41:28] *** califax- is now known as califax
[05:42:38] <catern> Repiphany: interesting! - do those not evaluate the expression? https://ipython.readthedocs.io/en/stable/interactive/python-ipython-diff.html (just the first docs I found) somewhat suggest they do)
[05:43:17] <catern> it sounds like those are just the same thing as "help()"
[05:43:22] <catern> (basically)
[05:44:10] *** Joins: humberto1 (~humbertow@189.236.30.209)
[05:44:32] <Repiphany> ?? lets you see the source code as well, but yes it's like calling help() on the object
[05:46:01] *** Joins: hams (~hams@c-73-255-22-88.hsd1.tx.comcast.net)
[05:46:01] *** Quits: hams (~hams@c-73-255-22-88.hsd1.tx.comcast.net) (Changing host)
[05:46:01] *** Joins: hams (~hams@user/hams)
[05:47:05] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:48:37] *** Quits: humberto1 (~humbertow@189.236.30.209) (Ping timeout: 240 seconds)
[05:48:37] <catern> yeah, I'm interested in one which doesn't evaluate the expression - instead getting help() using the same techniques that completion uses
[05:50:13] <catern> (I wonder if the issue is just that this is not an API supported by jedi - AFAIUI, essentially all python REPLs/IDEs use jedi)
[05:51:08] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Read error: Connection reset by peer)
[05:52:21] *** Joins: humberto1 (~humbertow@189.236.30.209)
[05:52:40] <catern> nope, https://jedi.readthedocs.io/en/latest/docs/api.html#jedi.Script.help
[05:52:43] <jazzy> is there something like 'string'.isalpha without including characters with accents?
[05:52:57] <jazzy> purely 'abcdefghijklmnopqrstuvwxyz'
[05:53:49] <Repiphany> set(your_string) <= set(string.ascii_lowercase)
[05:57:05] *** Quits: humberto1 (~humbertow@189.236.30.209) (Ping timeout: 256 seconds)
[05:57:12] *** Joins: zmt00 (~zmt00@user/zmt00)
[05:58:13] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 256 seconds)
[05:58:39] *** Quits: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2) (Quit: Leaving)
[05:59:21] <catern> and there's zero usage of that API in ipython..
[06:01:42] *** Joins: humberto1 (~humbertow@189.236.30.209)
[06:01:48] <parv> Before I knew of string.ascii_lowercase, I used [ chr( x ) for x in ( ord( 'a' ), ord( 'a' ) + 26 ) ]
[06:02:05] <catern> (which makes sense because it was only added in 2019...)
[06:02:32] <parv> dropped the "range" there : [ chr( x ) for x in range( ord( 'a' ), ord( 'a' ) + 26 ) ]
[06:03:26] <BrenBarn> catern are you saying you want to be able to do something like `help(some + big(stuff)())` and get help on the result without evaluating it?  I don't see how that could be possible
[06:04:42] <catern> BrenBarn: consider that (some + big(stuff)()).a<Tab> will autocomplete just fine without evaluating it. consider this and you may see how this can be possible
[06:05:03] <catern> (well, sometimes it will autocomplete fine, anyway)
[06:05:20] <BrenBarn> in my experience that kind of thing does not autocomplete
[06:05:25] <dre> if you have good type hinting it should work
[06:05:34] <dre> oh actually, maybe not in the repl
[06:05:36] <dre> hm,
[06:05:38] <dre> interesting
[06:06:21] <BrenBarn> I only use autocomplete in the context of an interactive Python session, not in an IDE, so I dunno about that
[06:06:51] <BrenBarn> what I usually want is the reverse of what you're describing, which is a completer that evaluates everything it needs to evaluate to give me help/completions on the actual result
[06:07:22] *** Quits: humberto1 (~humbertow@189.236.30.209) (Ping timeout: 250 seconds)
[06:08:14] *** Joins: xx (~xx@user/xx)
[06:09:07] <dre> I think he's talking about, say, (dt1 - dt2).days      and being able to autocomplete the `days` part
[06:09:23] *** Quits: juliaEnv (~juliaEnv@ip-86-49-248-177.net.upcbroadband.cz) (Quit: Going offline, see ya! (www.adiirc.com))
[06:09:32] <dre> I just tried it, and ipython thinks the results is another dt object, not a timedelta
[06:09:32] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[06:13:35] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[06:14:06] *** Quits: sreve_ (~quassel@p54a71bc6.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[06:14:37] *** Joins: sreve (~quassel@p4ff44d82.dip0.t-ipconnect.de)
[06:18:35] <catern> mainly I mean foo.process().f<Tab> autocompletion working
[06:18:50] <catern> and being able to get help for `foo.process()` if I'm exploring an unfamiliar API
[06:19:06] *** Joins: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is)
[06:19:32] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[06:19:49] <catern> I admit I don't care as much about complicated expressions such as (dt1 - dt2), although even that should work easily if there's type annotations, but maybe ipython doesn't depend on typeshed so doesn't have type annotations for datetime??
[06:19:56] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[06:20:00] <hrob> i have a list of dicts -- Im wondering if there is a neat way of looking up dicts in my list that have an attribute == something
[06:20:54] <hrob> else Im just brute forcing it :p  with a for-loop -- but python being so magical I just wonder
[06:20:59] *** Parts: Ion43 (~Ion@27.17.82.39) ()
[06:21:32] *** Quits: constxd_ (~brad@142.167.170.88) (Ping timeout: 240 seconds)
[06:21:48] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[06:22:01] *** Joins: fikran (~fikran@user/fikran)
[06:22:15] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[06:22:32] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[06:22:33] <KirkMcDonald> hrob: A list comprehension could do this, though that's still just a for loop.
[06:22:54] <hrob> but shorter code right?
[06:22:58] <KirkMcDonald> Sure.
[06:23:23] <hrob> yeah dont imagine speedup on this, but keep seing fancy short codes in python
[06:24:42] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[06:25:34] *** Joins: humberto1 (~humbertow@189.236.30.209)
[06:27:40] <hrob> KirkMcDonald   not sure why I didnt think of simple list comprehend.... thats the way... Im still mentally stuck in C type arrays
[06:27:47] *** Joins: cisme_ (~cisme_@2600:1700:d980:1a40:f602:5394:36bb:e5f9)
[06:27:48] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[06:27:49] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[06:29:02] *** Quits: dreamon (~dreamon@p57a4c526.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[06:32:04] *** Quits: humberto1 (~humbertow@189.236.30.209) (Ping timeout: 250 seconds)
[06:35:03] *** Joins: hwdyki (~hwdyki@user/hwdyki)
[06:36:44] *** Parts: hwdyki (~hwdyki@user/hwdyki) ()
[06:43:31] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:43:52] *** Quits: lessshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[06:44:02] *** Joins: lessshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[06:45:46] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Remote host closed the connection)
[06:46:22] *** Quits: zmt00 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[06:46:40] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[06:48:23] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Remote host closed the connection)
[06:48:47] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[06:50:39] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[06:51:37] *** Quits: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Quit: Client closed)
[06:54:36] *** Joins: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net)
[06:57:48] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[06:58:07] *** Joins: mickey8 (~user@user/mickey)
[07:00:27] *** Joins: mat001 (~mat001@c-69-181-155-247.hsd1.ca.comcast.net)
[07:03:22] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[07:05:04] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:05:04] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:05:04] *** finn_elija is now known as FinnElija
[07:05:41] *** Joins: zmt00 (~zmt00@user/zmt00)
[07:10:45] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 256 seconds)
[07:11:36] *** Joins: tim__ (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[07:11:46] *** Joins: constxd_ (~brad@142.167.170.88)
[07:12:59] *** Quits: zmt00 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[07:13:09] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[07:14:19] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[07:14:43] *** Quits: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[07:17:12] *** Joins: adeliktas1 (~adeliktas@i59F52DAD.versanet.de)
[07:18:32] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[07:18:32] *** Quits: adeliktas (~adeliktas@i59F4D467.versanet.de) (Ping timeout: 240 seconds)
[07:18:32] *** adeliktas1 is now known as adeliktas
[07:19:15] <grym> sleep 1; tmux -V; which tmux; exit
[07:20:25] *** Joins: Wulf (~Wulf@user/wulf)
[07:20:46] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:21:22] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[07:23:07] *** Joins: anomalous_creato (~anomalous@2001:470:69fc:105::6ed1)
[07:25:01] *** Joins: Guest49 (~Guest49@2600:387:b:f::bb)
[07:25:20] *** Joins: summersault (~summersau@179.221.251.36)
[07:25:56] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:388d:6b4b:8af0:da5e)
[07:26:16] <Guest49> I'm looking for answers to the following because I haven't been able to get the correct solution yet https://bpa.st/CA2A and https://bpa.st/CPFA Any ideas?
[07:26:44] *** Joins: Alexandre (~Alexandre@186.251.251.153)
[07:27:22] *** Quits: Alexandre (~Alexandre@186.251.251.153) (Client Quit)
[07:29:01] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[07:31:06] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[07:33:23] *** Quits: Guest49 (~Guest49@2600:387:b:f::bb) (Quit: Client closed)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:37] *** Joins: Guest49 (~Guest49@2600:387:b:f::bb)
[07:37:31] *** Quits: hexa- (~hexa-@juno.lossy.network) (Quit: WeeChat 3.3)
[07:39:01] *** Joins: hexa- (~hexa-@juno.lossy.network)
[07:39:02] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[07:39:03] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[07:39:26] <Boarders_> when I write a doctest, is there any way for me to get python not to care about how I format the expected result
[07:39:41] <Boarders_> e.g. if I expect (1,1) but python will want me to format that as (1, 1) or similar
[07:39:52] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[07:40:03] <parv> That is not python but style complainer
[07:40:30] <Guest49> Anyone know how to answer the following https://bpa.st/CA2A ?
[07:42:30] <parv> Twiddle whatever bits, if offered, needed for that complainer to be mute about that
[07:44:23] *** Quits: EGH (~EGH@185.25.195.104) (Ping timeout: 252 seconds)
[07:47:02] *** Quits: hams (~hams@user/hams) (Ping timeout: 240 seconds)
[07:48:01] *** Joins: Guest66777 (~Guest6677@ti0315q160-4307.bb.online.no)
[07:49:02] *** Quits: constxd_ (~brad@142.167.170.88) (Ping timeout: 240 seconds)
[07:49:36] *** Quits: Guest66777 (~Guest6677@ti0315q160-4307.bb.online.no) (Client Quit)
[07:49:53] *** Quits: Guest49 (~Guest49@2600:387:b:f::bb) (Quit: Client closed)
[07:51:32] *** Quits: marcello42 (~mp@2001:1a81:13b0:8300:40f1:59b9:1fcf:dec9) (Ping timeout: 240 seconds)
[07:55:15] *** Quits: DPA (~DPA@2a05:41c0:0:8104::a3c:10d) (Ping timeout: 250 seconds)
[07:55:33] *** Joins: jmiehe1 (~Thunderbi@user/jmiehe)
[07:56:57] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Ping timeout: 240 seconds)
[07:56:57] *** jmiehe1 is now known as jmiehe
[07:57:25] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[07:58:52] <coc0nut> is there an easy way to get the average of a column array in an excel document with timeformatted numbers ? example 00:11:12
[07:59:21] <coc0nut> would I have to make it all to seconds, and then find average, and then convert it back to timeformat?
[08:00:35] *** Joins: DPA (~DPA@2a05:41c0:0:8104::a3c:10d)
[08:02:12] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 250 seconds)
[08:02:22] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[08:03:04] *** Quits: nicode (~nic@2607:f2c0:946d:3800:da6f:ffbd:5d89:a11f) (Ping timeout: 250 seconds)
[08:05:01] *** Quits: DPA (~DPA@2a05:41c0:0:8104::a3c:10d) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[08:06:06] <jazzy> .
[08:08:14] *** Joins: DPA (~DPA@2a05:41c0:0:8104::a3c:10d)
[08:08:15] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[08:08:55] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[08:09:30] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[08:12:26] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[08:12:47] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Client Quit)
[08:13:49] *** Quits: sreve (~quassel@p4ff44d82.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[08:14:04] *** Joins: _SKiTZO (~dark@64.89-10-146.nextgentel.com)
[08:14:19] *** Joins: sreve (~quassel@p54a704b4.dip0.t-ipconnect.de)
[08:14:31] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[08:14:50] *** Joins: aleph (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[08:15:02] *** aleph is now known as Church
[08:15:10] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[08:15:15] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Client Quit)
[08:15:37] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[08:16:43] *** Joins: zmt00 (~zmt00@user/zmt00)
[08:17:37] *** Quits: nomic (~nomic@185.198.243.163) (Quit: Leaving)
[08:17:55] *** Joins: nomic (~nomic@185.198.243.163)
[08:19:34] *** Joins: asen (~asen@2408:821b:618:1a0:2cc1:43d3:3642:45c4)
[08:20:53] *** Quits: asen (~asen@2408:821b:618:1a0:2cc1:43d3:3642:45c4) (Client Quit)
[08:21:52] *** Quits: ecdhe (~ecdhe@user/ecdhe) (Read error: Connection reset by peer)
[08:21:55] *** Joins: Vonter (~Vonter@user/vonter)
[08:21:59] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[08:22:06] *** Joins: ecdhe (~ecdhe@user/ecdhe)
[08:22:18] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[08:22:57] *** Quits: parv (~quass@user/parv) (Ping timeout: 240 seconds)
[08:23:37] *** Quits: DPA (~DPA@2a05:41c0:0:8104::a3c:10d) (Ping timeout: 240 seconds)
[08:28:55] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:a55e:999b:ccc5:f922)
[08:28:57] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:29:21] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[08:29:30] *** Quits: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:30:37] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[08:30:41] *** Joins: bytehackr (~Sandipan@43.252.250.86)
[08:31:16] *** Joins: djhankb (~djhankb@208.113.164.68)
[08:31:21] *** Joins: fikran (~fikran@user/fikran)
[08:33:28] *** Joins: earendel (uid498179@user/earendel)
[08:38:08] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[08:39:32] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[08:42:28] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[08:44:52] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[08:46:02] *** Quits: onichomp (~onichomp@2806:264:4408:27:8c1f:856b:32b7:4532) (Ping timeout: 240 seconds)
[08:46:16] *** Joins: onichomp666 (~onichomp@177.231.44.9)
[08:47:01] *** Joins: rowbots (~dirgeable@h64-17-89-214.arvdco.broadband.dynamic.tds.net)
[08:47:04] *** Joins: rowbotz (~dirgeable@h64-17-89-214.arvdco.broadband.dynamic.tds.net)
[08:47:16] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 250 seconds)
[08:49:33] *** Joins: DPA (~DPA@2a05:41c0:0:8104::a3c:10d)
[08:50:16] *** Joins: humberto1 (~humbertow@189.236.30.209)
[08:50:38] *** [_] is now known as [itchyjunk]
[08:50:44] *** Joins: djapo (~archangel@user/djapo)
[08:52:41] *** Quits: cebtenzzre (~cebtenzzr@2603-7081-3406-8f26-cc00-fa87-d45c-241c.res6.spectrum.com) (Quit: Konversation terminated!)
[08:52:50] *** Joins: han-solo (~han-solo@user/han-solo)
[08:53:51] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[08:56:09] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[08:57:25] *** Joins: fef (~thedawn@user/thedawn)
[08:59:51] *** Joins: vlm (~vlm@user/vlm)
[09:00:41] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[09:00:42] *** Quits: bytehackr (~Sandipan@43.252.250.86) (Ping timeout: 250 seconds)
[09:00:44] *** Quits: DPA (~DPA@2a05:41c0:0:8104::a3c:10d) (Read error: Connection reset by peer)
[09:01:36] *** Joins: DPA- (~DPA@2a05:41c0:0:8104::a3c:10d)
[09:02:49] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[09:05:05] *** Joins: bluedust (~bluedust@103.161.144.94)
[09:06:33] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:a55e:999b:ccc5:f922) (Read error: Connection reset by peer)
[09:07:43] *** Joins: hams (~hams@c-73-255-22-88.hsd1.tx.comcast.net)
[09:07:43] *** Quits: hams (~hams@c-73-255-22-88.hsd1.tx.comcast.net) (Changing host)
[09:07:43] *** Joins: hams (~hams@user/hams)
[09:10:01] *** Joins: ianjw (~ianjw@066-214-075-102.res.spectrum.com)
[09:10:57] *** Quits: ensyde (~ensyde@2600:1700:2050:1040:17c:22a2:b625:20d7) (Ping timeout: 240 seconds)
[09:13:02] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[09:14:59] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[09:15:26] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[09:16:40] *** Joins: Guest9014 (~vit@chello085216193138.chello.sk)
[09:16:41] <yitz> What dundermethod would be involved on  `obj is None` ?
[09:17:07] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 256 seconds)
[09:17:15] <phy1729> none, it's an is check
[09:17:25] <phy1729> is checks if the ids match
[09:18:01] <yitz> Darn. Thanks
[09:18:22] <yitz> Hrm. But ... is there a dundermethod that's used to get the id?
[09:18:56] *** Joins: analoq (~yashi@user/dies)
[09:18:59] <yitz> No __id__() method :(
[09:19:00] <phy1729> I don't think so. In cython it's the memory address iirc (of course that's an implementation detail; don't rely on it; yadda yadda)
[09:19:14] <yitz> Alright. Thank you
[09:19:23] *** Quits: optimant (~asavage@user/optimant) (Ping timeout: 256 seconds)
[09:19:31] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:71fe:5a6e:22fc:c9b2)
[09:20:04] * iflema mentions the bisque
[09:20:08] *** Joins: ahmed (~ahmed@154.101.128.122)
[09:20:18] *** Quits: nomic (~nomic@185.198.243.163) (Quit: Leaving)
[09:21:59] *** Joins: sysadmin98 (~sysadmin9@pool-108-6-169-68.nycmny.fios.verizon.net)
[09:25:03] *** Quits: oscurochu (~oscurochu@37.120.215.101) (Ping timeout: 256 seconds)
[09:26:23] <BrenBarn> you can't override `is`, that's kind of important
[09:26:44] <BrenBarn> There wouldn't be much use in `is` if objects could override it
[09:28:06] *** Joins: Astara (~skraito@user/skraito)
[09:28:15] *** Quits: Astara (~skraito@user/skraito) (K-Lined)
[09:29:58] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Remote host closed the connection)
[09:31:07] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[09:32:25] *** Quits: bluedust (~bluedust@103.161.144.94) (Remote host closed the connection)
[09:33:07] *** Joins: cebtenzzre (~cebtenzzr@2603-7081-3406-8f26-cc00-fa87-d45c-241c.res6.spectrum.com)
[09:38:05] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[09:40:55] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 256 seconds)
[09:41:06] *** Joins: bluedust (~bluedust@59.98.50.19)
[09:42:56] *** Joins: parv (~quass@user/parv)
[09:47:10] *** Joins: optimant (~asavage@user/optimant)
[09:50:00] *** Quits: Metalsutton (~Metalsutt@101.100.153.103) (Ping timeout: 260 seconds)
[09:51:50] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[09:54:12] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[09:55:22] *** Joins: oscurochu (~oscurochu@37.120.215.101)
[10:01:34] *** Joins: crashrep (~crashrep@user/crashrep)
[10:02:36] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[10:03:20] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[10:03:40] *** Joins: Metalsutton (~Metalsutt@101.100.153.103)
[10:04:13] *** Quits: Metalsutton (~Metalsutt@101.100.153.103) (Client Quit)
[10:04:24] *** Quits: ponyofdeath (~vladi@cpe-70-95-150-132.san.res.rr.com) (Ping timeout: 250 seconds)
[10:05:59] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[10:06:20] *** Joins: bytehackr (~Sandipan@43.252.250.86)
[10:06:34] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 250 seconds)
[10:07:02] *** Quits: newdimension (~newdimnes@user/newdimension) (Ping timeout: 240 seconds)
[10:07:10] *** Joins: bluedust_ (~bluedust@194.37.96.153)
[10:10:18] *** Joins: menace_ (~someone@ppp-93-104-163-107.dynamic.mnet-online.de)
[10:10:28] *** Quits: bluedust (~bluedust@59.98.50.19) (Ping timeout: 250 seconds)
[10:10:37] *** Joins: humbertowoody (~humbertow@189.236.30.209)
[10:11:46] *** Quits: menace (~someone@ppp-93-104-176-202.dynamic.mnet-online.de) (Ping timeout: 250 seconds)
[10:13:25] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[10:13:30] *** Quits: humberto1 (~humbertow@189.236.30.209) (Ping timeout: 250 seconds)
[10:14:02] *** Parts: parv (~quass@user/parv) ()
[10:14:07] *** Joins: juliaEnv (~juliaEnv@ip-86-49-248-177.net.upcbroadband.cz)
[10:14:13] *** Joins: parv (~quass@user/parv)
[10:16:29] *** Joins: uxemacs (~timothy@2607:fb90:7da3:6c4b::164)
[10:18:19] *** Quits: menace_ (~someone@ppp-93-104-163-107.dynamic.mnet-online.de) (Ping timeout: 256 seconds)
[10:19:09] *** Joins: menace (~someone@ppp-93-104-163-135.dynamic.mnet-online.de)
[10:21:23] *** Joins: kdc (~kdc@196.211.197.178)
[10:21:54] *** Joins: jay-m126 (~jay-m@gateway/vpn/pia/jay-m126)
[10:24:17] *** Quits: rmm (~rob@user/rmm) (Ping timeout: 240 seconds)
[10:24:17] *** Joins: stblaha (~stblaha@user/stblaha)
[10:24:48] *** Joins: menace_ (~someone@ppp-93-104-163-152.dynamic.mnet-online.de)
[10:26:36] *** Joins: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053)
[10:26:55] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[10:27:02] *** Quits: menace (~someone@ppp-93-104-163-135.dynamic.mnet-online.de) (Ping timeout: 240 seconds)
[10:32:26] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[10:33:00] *** Joins: Tempesta_ (~Tempesta@183.98.39.112)
[10:33:02] *** Quits: Tempesta_ (~Tempesta@183.98.39.112) (Remote host closed the connection)
[10:35:37] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[10:36:56] *** Quits: Tempesta (~Tempesta@user/tempesta) (Ping timeout: 250 seconds)
[10:38:02] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:71fe:5a6e:22fc:c9b2) (Ping timeout: 240 seconds)
[10:38:38] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[10:39:12] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[10:40:42] *** Joins: fikran (~fikran@user/fikran)
[10:45:07] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[10:47:21] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[10:47:47] *** Joins: zmt00 (~zmt00@user/zmt00)
[10:47:55] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Remote host closed the connection)
[10:48:36] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 250 seconds)
[10:48:55] *** Quits: jay-m126 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 256 seconds)
[10:49:20] *** Joins: Guest8 (~Guest8@139.47.36.37)
[10:49:24] *** Guest8 is now known as __that__
[10:49:30] *** Joins: vassenn (~vassen@178.35.78.65)
[10:49:39] *** Joins: KombuchaKip (~kip@192.252.230.5)
[10:49:54] *** Quits: onichomp666 (~onichomp@177.231.44.9) (Read error: Connection reset by peer)
[10:50:27] *** Joins: jay-m126 (~jay-m@129.0.204.214)
[10:52:47] *** Quits: jazzy (~jaziz@user/jaziz) (Read error: Connection reset by peer)
[10:52:52] *** Joins: onichomp (~onichomp@2806:264:4408:27:85b7:db3:5795:fde4)
[10:53:32] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[10:53:37] *** Joins: jazzy (~jaziz@user/jaziz)
[10:53:47] *** Parts: jaggz (~jaggz@user/jaggz) (Leaving)
[10:56:14] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[10:56:31] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[10:56:42] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[11:01:32] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 240 seconds)
[11:01:36] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[11:01:44] *** Joins: debayer948 (~debayer@cpe-76-169-99-230.socal.res.rr.com)
[11:01:49] *** Joins: epony (epony@user/epony)
[11:02:17] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[11:03:23] *** Joins: sandipan (~Sandipan@202.142.96.96)
[11:04:36] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[11:05:56] *** Quits: bytehackr (~Sandipan@43.252.250.86) (Ping timeout: 250 seconds)
[11:08:17] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[11:08:17] *** Joins: manti7 (~manti7@176.10.104.94)
[11:08:32] *** Quits: sandipan (~Sandipan@202.142.96.96) (Ping timeout: 240 seconds)
[11:08:46] *** Joins: KombuchaKip (~kip@192.252.230.5)
[11:10:16] *** Quits: seednode99 (~seednode@user/seednode) (Quit: Nihil supernum.)
[11:11:09] *** Joins: seednode99 (~seednode@user/seednode)
[11:12:33] *** Quits: __that__ (~Guest8@139.47.36.37) (Quit: Client closed)
[11:14:39] *** Quits: debayer948 (~debayer@cpe-76-169-99-230.socal.res.rr.com) (Quit: The Lounge - https://thelounge.chat)
[11:15:00] *** Quits: parv (~quass@user/parv) (Quit: parv)
[11:17:35] *** Joins: inomoz (~inomoz@176.59.121.150)
[11:20:02] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 240 seconds)
[11:20:37] *** Joins: Viewday11 (~Viewday@user/viewday)
[11:24:55] *** Joins: Pseudocrat (~sudo@user/pseudocrat)
[11:25:32] *** Joins: kosh (~kosh@user/kosh)
[11:26:16] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[11:26:24] *** Quits: fluter (~fluter@user/fluter) (Quit: WeeChat 3.3)
[11:26:45] *** Quits: dre (~dre@2001:8003:c932:c301:74de:141a:136f:2db6) (Quit: Leaving)
[11:27:17] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[11:31:12] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[11:31:29] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Remote host closed the connection)
[11:31:56] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[11:32:02] *** Quits: jay-m126 (~jay-m@129.0.204.214) (Ping timeout: 240 seconds)
[11:32:50] *** Joins: dreamon (~dreamon@p57a4c526.dip0.t-ipconnect.de)
[11:34:15] *** Joins: jay-m126 (~jay-m@129.0.226.171)
[11:34:59] *** Joins: Guest8 (~Guest8@139.47.36.37)
[11:35:45] *** Jmtrix- is now known as Jmtrix
[11:35:46] *** Quits: Jmtrix (~qed@2604:180:2:72d::497d) (Changing host)
[11:35:46] *** Joins: Jmtrix (~qed@user/jmtrix)
[11:36:02] *** Joins: vanessa (~annada@103.160.128.7)
[11:37:00] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[11:37:24] *** Lartza_ is now known as Lartza
[11:38:41] *** Joins: __that__ (~dgg@139.47.36.37)
[11:39:33] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[11:40:51] *** Quits: Guest8 (~Guest8@139.47.36.37) (Quit: Client closed)
[11:40:58] *** Joins: Tempesta (~Tempesta@user/tempesta)
[11:41:03] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Quit: Leaving)
[11:44:28] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[11:45:21] *** Joins: PointThink (~PointThin@abzk146.neoplus.adsl.tpnet.pl)
[11:46:09] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[11:47:20] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[11:47:26] *** Quits: acidsys (~LSD@2.lsd.systems) (Excess Flood)
[11:48:40] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[11:49:21] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[11:52:34] *** Quits: bluedust_ (~bluedust@194.37.96.153) (Remote host closed the connection)
[11:53:19] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[11:53:35] *** Quits: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net) (Quit: because)
[11:55:03] *** Joins: someuser (~user@197.54.99.203)
[11:56:47] *** Joins: k2ro (~k2ro@195.158.249.25)
[12:00:17] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[12:07:39] *** Quits: zamba (~marius@5.226.162.54) (Read error: Connection reset by peer)
[12:12:37] *** Quits: uxemacs (~timothy@2607:fb90:7da3:6c4b::164) (Ping timeout: 240 seconds)
[12:14:04] *** Quits: ahmed (~ahmed@154.101.128.122) (Read error: Connection reset by peer)
[12:16:35] *** Quits: heldwin (~heldwin@user/asmodee) (Quit: Teleporting ...)
[12:17:19] *** Joins: tobybl (~tobybl@248.195.115.87.dyn.plus.net)
[12:18:12] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[12:19:49] *** Joins: palasso (~palasso@user/palasso)
[12:21:19] *** Joins: fivegruel (~fivegruel@HSI-KBW-095-208-248-017.hsi5.kabel-badenwuerttemberg.de)
[12:22:27] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[12:22:57] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[12:22:59] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[12:23:12] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:25:02] *** Quits: hams (~hams@user/hams) (Ping timeout: 240 seconds)
[12:26:43] *** Quits: k2ro (~k2ro@195.158.249.25) (Quit: k2ro)
[12:27:05] *** Quits: PointThink (~PointThin@abzk146.neoplus.adsl.tpnet.pl) (Remote host closed the connection)
[12:27:35] *** Joins: PointThink (~PointThin@abzk146.neoplus.adsl.tpnet.pl)
[12:29:31] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[12:31:13] *** Joins: ahmed (~ahmed@105.238.248.116)
[12:31:48] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[12:33:07] *** Joins: pycode (~pycode3@2001:b07:5d28:551:ca56:8ec5:f65f:440d)
[12:35:06] *** Joins: greedom (~greedom@p200300de67480100dc79bc641054a9f8.dip0.t-ipconnect.de)
[12:35:27] *** Joins: ajnulo (~ajnulo@2a02:3102:4cc5:fffd:bd3:1db6:a16d:5acd)
[12:35:50] *** Joins: runciter (~runciter@user/runciter)
[12:39:00] *** Quits: greedom (~greedom@p200300de67480100dc79bc641054a9f8.dip0.t-ipconnect.de) (Client Quit)
[12:39:31] *** Quits: DPA- (~DPA@2a05:41c0:0:8104::a3c:10d) (Read error: Connection reset by peer)
[12:39:48] *** Joins: rendar (~rendar@user/rendar)
[12:40:31] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Quit: Leaving)
[12:40:54] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[12:42:16] *** Joins: greedom (~greedom@p200300de67480100dc79bc641054a9f8.dip0.t-ipconnect.de)
[12:42:46] *** Joins: davor_ (~davor@user/davor)
[12:43:25] *** Quits: davor (~davor@user/davor) (Ping timeout: 250 seconds)
[12:46:57] *** Joins: ensyde (~ensyde@2600:1700:2050:1040:59da:fcd2:abfb:4d1d)
[12:47:43] *** Joins: sha296 (~shakil@2409:4060:208:b748:90bc:94d2:ef56:d69d)
[12:48:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[12:48:11] *** Quits: sha296 (~shakil@2409:4060:208:b748:90bc:94d2:ef56:d69d) (Quit: Leaving)
[12:48:23] *** Joins: debayer948 (~debayer@cpe-76-169-99-230.socal.res.rr.com)
[12:49:10] *** Joins: Tempesta (~Tempesta@user/tempesta)
[12:50:02] *** Joins: fikran (~fikran@user/fikran)
[12:52:02] *** Quits: runciter (~runciter@user/runciter) (Ping timeout: 240 seconds)
[12:52:39] *** Joins: EGH (~EGH@185.25.195.104)
[12:53:50] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (Ping timeout: 250 seconds)
[12:54:18] *** Quits: jinsun (~quassel@user/jinsun) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[12:54:39] *** Joins: jinsun (~quassel@user/jinsun)
[12:56:09] *** Joins: DPA (~DPA@2a05:41c0:0:8104::a3c:10d)
[12:57:52] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[13:02:36] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:798d:4129:9f07:fe5b)
[13:05:37] *** Quits: sprout_ (~quassel@2a02:a467:ccd6:1:d9b7:23d6:79dd:2e64) (Ping timeout: 240 seconds)
[13:07:54] *** Joins: dvyd (~dvyd@2a0d:6fc2:47b0:1800:251f:e417:4eb6:f68b)
[13:08:07] *** Quits: dvyd (~dvyd@2a0d:6fc2:47b0:1800:251f:e417:4eb6:f68b) (Client Quit)
[13:08:25] *** Joins: dvyd (~dvyd@2a0d:6fc2:47b0:1800:251f:e417:4eb6:f68b)
[13:10:05] *** Joins: weedmic (~weedmic@5.102.235.240)
[13:10:56] <weedmic> what is the shell command to install a module via pip?  for example I want to be able to import smtplib, but I believe i need to install it the first time using pip.
[13:11:02] *** Quits: debayer948 (~debayer@cpe-76-169-99-230.socal.res.rr.com) (Quit: The Lounge - https://thelounge.chat)
[13:12:00] *** Joins: debayer948 (~debayer@cpe-76-169-99-230.socal.res.rr.com)
[13:12:24] *** Quits: jinsun (~quassel@user/jinsun) (Quit: No Ping reply in 180 seconds.)
[13:12:55] <weedmic> i tried "python3 -m pip install smtplib"
[13:13:02] <han-solo> i think `smtplib` is in teh stdlib
[13:13:22] <han-solo> yep, it is. You don't need to install it
[13:13:49] *** Joins: jinsun (~quassel@user/jinsun)
[13:14:04] <weedmic> do you have a link to the stdlib contents?  i have a list
[13:14:12] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[13:14:15] *** Joins: Enitin (~Enitin@82.102.22.86)
[13:14:24] <han-solo> https://docs.python.org/3/library/smtplib.html
[13:14:36] <han-solo> https://docs.python.org/3/library/
[13:15:09] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[13:15:16] *** Quits: vassenn (~vassen@178.35.78.65) (Remote host closed the connection)
[13:15:42] <han-solo> i usually check https://pymotw.com/3 if need more examples for the stdlib modules. So https://pymotw.com/3/smtplib/ is good to check as well
[13:16:35] <weedmic> ty, i changed it to 3.8 and searched for math - it does not have stdlib listed on the page - so how would I add that via pip?
[13:17:21] <han-solo> https://docs.python.org/3.8/library/math.html # math is there
[13:17:39] <han-solo> or did you mean pymotw ?
[13:17:58] <weedmic> yes, i saw it listed on the second link
[13:18:05] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[13:19:25] <weedmic> ok, all modules are in the stdlib - i need to reexamine the code
[13:21:41] *** Joins: cosimone (~user@93-47-231-31.ip115.fastwebnet.it)
[13:21:59] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Read error: Connection reset by peer)
[13:22:25] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[13:23:00] *** Quits: holgersson (~quassel@user/holgersson) (Quit: “Format C:........[Done]“)
[13:23:29] *** Quits: weedmic (~weedmic@5.102.235.240) (Quit: Konversation terminated!)
[13:25:29] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Read error: Connection reset by peer)
[13:26:33] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[13:27:01] *** Quits: humbertowoody (~humbertow@189.236.30.209) (Ping timeout: 256 seconds)
[13:27:14] *** Joins: rovanion (~rovanion@h-46-59-13-236.A163.priv.bahnhof.se)
[13:28:17] *** Quits: __that__ (~dgg@139.47.36.37) (Remote host closed the connection)
[13:30:37] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[13:30:41] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:31:51] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Read error: Connection reset by peer)
[13:32:09] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:33:05] *** Joins: humbertowoody (~humbertow@189.236.30.209)
[13:35:10] *** Quits: debayer948 (~debayer@cpe-76-169-99-230.socal.res.rr.com) (Quit: The Lounge - https://thelounge.chat)
[13:35:44] *** Joins: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by)
[13:35:56] *** Quits: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by) (Max SendQ exceeded)
[13:36:13] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[13:36:26] *** Joins: onichomp666 (~onichomp@177.231.44.9)
[13:36:27] *** Joins: holgersson (~quassel@user/holgersson)
[13:36:54] *** Joins: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by)
[13:36:57] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[13:37:04] *** Quits: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by) (Max SendQ exceeded)
[13:37:10] *** Quits: onichomp (~onichomp@2806:264:4408:27:85b7:db3:5795:fde4) (Ping timeout: 250 seconds)
[13:37:17] *** Quits: DPA (~DPA@2a05:41c0:0:8104::a3c:10d) (Ping timeout: 240 seconds)
[13:37:18] *** Joins: eem (~eem@user/eem)
[13:37:36] *** Quits: humbertowoody (~humbertow@189.236.30.209) (Ping timeout: 250 seconds)
[13:38:11] *** Quits: eem (~eem@user/eem) (Client Quit)
[13:38:13] *** Joins: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by)
[13:38:26] *** Quits: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by) (Max SendQ exceeded)
[13:38:54] *** Joins: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by)
[13:39:50] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[13:40:06] *** Joins: kaiseisei (~Thunderbi@223.11.79.204)
[13:42:49] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.4)
[13:43:01] *** Joins: fluter (~fluter@user/fluter)
[13:43:57] *** Joins: Algernon69 (~Algernon6@88.124.69.179)
[13:45:20] *** Joins: bluedust (~bluedust@194.37.96.153)
[13:47:10] *** Joins: humbertowoody (~humbertow@189.236.30.209)
[13:50:02] *** Quits: Algernon69 (~Algernon6@88.124.69.179) (Ping timeout: 240 seconds)
[13:50:11] *** Joins: u0_a416 (~u0_a416@120.20.41.150)
[13:51:13] <u0_a416> Hello
[13:54:37] *** Quits: humbertowoody (~humbertow@189.236.30.209) (Ping timeout: 240 seconds)
[13:57:37] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[13:57:44] *** Quits: tobybl (~tobybl@248.195.115.87.dyn.plus.net) (Remote host closed the connection)
[13:58:50] <nedbat> u0_a416: hey there
[14:00:38] *** Joins: ancient01 (~ancient01@176.29.49.129)
[14:00:48] <u0_a416> This is my first time on irc!
[14:02:55] *** Joins: VaniaPy (~VaniaPy@46.12.137.214.dsl.dyn.forthnet.gr)
[14:03:18] *** Quits: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by) (Remote host closed the connection)
[14:03:27] <nedbat> u0_a416: welcome!
[14:04:07] *** Joins: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52)
[14:04:09] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:08:38] *** Joins: tobybl (~tobybl@248.195.115.87.dyn.plus.net)
[14:09:25] *** Parts: ancient01 (~ancient01@176.29.49.129) (Leaving)
[14:09:31] *** Quits: _SKiTZO (~dark@64.89-10-146.nextgentel.com) (Ping timeout: 256 seconds)
[14:09:50] *** Joins: hightower2 (~hightower@212.15.178.139)
[14:10:05] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:10:42] *** Joins: plastico (~plastico@neomutt/plastico)
[14:11:13] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:11:13] *** Quits: hightower2 (~hightower@212.15.178.139) (Read error: Connection reset by peer)
[14:12:54] *** Lord_of_Life_ is now known as Lord_of_Life
[14:13:53] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:310a:887:a8c8:ed35)
[14:14:33] *** Joins: CinnamonFlavored (~PointThin@abzk146.neoplus.adsl.tpnet.pl)
[14:15:12] *** Joins: Listiner290 (~PointThin@abzk146.neoplus.adsl.tpnet.pl)
[14:15:38] *** Quits: inomoz (~inomoz@176.59.121.150) (Remote host closed the connection)
[14:16:17] *** Joins: nomic (~nomic@185.198.243.163)
[14:17:54] *** Quits: PointThink (~PointThin@abzk146.neoplus.adsl.tpnet.pl) (Ping timeout: 250 seconds)
[14:18:37] *** Joins: PointThink (~PointThin@abzk146.neoplus.adsl.tpnet.pl)
[14:19:02] *** Quits: kaiseisei (~Thunderbi@223.11.79.204) (Quit: kaiseisei)
[14:19:02] *** Quits: CinnamonFlavored (~PointThin@abzk146.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[14:19:18] <u0_a416> @PointThin your server isn't loading
[14:19:32] *** Quits: Listiner290 (~PointThin@abzk146.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[14:20:09] *** Quits: nunggu (~q@gateway/tor-sasl/nunggu) (Ping timeout: 276 seconds)
[14:20:15] *** Joins: hightower2 (~hightower@212.15.178.139)
[14:22:54] <nedbat> u0_a416: what do you mean?
[14:23:10] *** Joins: humbertowoody (~humbertow@189.236.30.209)
[14:23:11] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[14:23:43] <u0_a416> I thought his user name might have been a server but appears I am wrong
[14:24:24] *** Quits: PointThink (~PointThin@abzk146.neoplus.adsl.tpnet.pl) (Ping timeout: 250 seconds)
[14:27:17] *** Quits: humbertowoody (~humbertow@189.236.30.209) (Ping timeout: 240 seconds)
[14:28:02] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 240 seconds)
[14:30:07] *** Quits: sandb0y (~pirate@user/sandb0y) (Quit: Time for another great escape)
[14:31:16] *** Joins: bluedust_ (~bluedust@86.106.136.217)
[14:31:26] *** Joins: jstein_ (~jstein@gentoo/developer/jstein)
[14:32:01] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[14:32:15] *** Quits: vanessa (~annada@103.160.128.7) (Quit: WeeChat 3.4)
[14:33:44] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[14:35:01] *** Quits: bluedust (~bluedust@194.37.96.153) (Ping timeout: 256 seconds)
[14:35:48] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[14:37:16] *** Quits: tobybl (~tobybl@248.195.115.87.dyn.plus.net) (Remote host closed the connection)
[14:37:51] *** Quits: jay-m126 (~jay-m@129.0.226.171) (Ping timeout: 256 seconds)
[14:37:53] *** Joins: nunggu (~q@gateway/tor-sasl/nunggu)
[14:38:18] *** Quits: jstein_ (~jstein@gentoo/developer/jstein) (Quit: quit)
[14:39:07] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[14:41:08] *** Joins: Atque (~Atque@user/atque)
[14:41:18] *** Quits: bluedust_ (~bluedust@86.106.136.217) (Remote host closed the connection)
[14:41:24] *** Quits: Atque (~Atque@user/atque) (Client Quit)
[14:42:49] *** Joins: fef (~thedawn@user/thedawn)
[14:42:52] <u0_a416> Anyone know of any irc dark markets?
[14:43:13] *** Joins: Atque (~Atque@user/atque)
[14:44:09] <nedbat> u0_a416: we try to stick to the topic of Python here
[14:44:15] <u0_a416> Ok
[14:46:04] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Ping timeout: 250 seconds)
[14:47:53] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[14:47:57] *** Quits: onichomp666 (~onichomp@177.231.44.9) (Read error: Connection reset by peer)
[14:52:09] *** Joins: ahmed_ (~ahmed@105.238.248.116)
[14:53:02] *** Quits: ahmed (~ahmed@105.238.248.116) (Ping timeout: 240 seconds)
[14:53:08] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:53:17] *** Joins: rsx (~dummy@ppp-188-174-142-157.dynamic.mnet-online.de)
[14:53:29] *** Quits: oscurochu (~oscurochu@37.120.215.101) (Remote host closed the connection)
[14:54:05] *** Joins: Nixkernal (~Nixkernal@2a02:1210:2e52:8b00:39ef:4f8c:43c7:e976)
[14:54:14] *** Joins: marcello42 (~mp@2001:1a81:13b0:8300:40f1:59b9:1fcf:dec9)
[14:55:11] *** Joins: bluedust (~bluedust@185.248.85.10)
[14:55:16] *** Joins: LimeOn (~user@user/limeon)
[14:55:40] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[14:56:37] *** Quits: {4144} (~{4144}@46.56.69.241) (Ping timeout: 240 seconds)
[14:56:44] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Remote host closed the connection)
[14:57:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[14:57:42] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[14:57:47] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Client Quit)
[14:58:18] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[14:59:12] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[14:59:23] *** Joins: fikran (~fikran@user/fikran)
[15:00:51] *** Joins: Esteri (~Esteri@2a01:e34:ec10:4bf0:d887:732b:2fa0:d48)
[15:01:24] *** Quits: juliaEnv (~juliaEnv@ip-86-49-248-177.net.upcbroadband.cz) (Quit: Going offline, see ya! (www.adiirc.com))
[15:02:47] *** Joins: constxd_ (~brad@142.167.170.88)
[15:06:59] *** Quits: Esteri (~Esteri@2a01:e34:ec10:4bf0:d887:732b:2fa0:d48) (Quit: Esteri Libera)
[15:07:20] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:07:39] *** Joins: cdown (~cdown@163.114.131.1)
[15:08:00] *** Joins: ice9 (~ice9@user/ice9)
[15:11:12] *** Joins: {4144} (~{4144}@46.56.67.115)
[15:11:20] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:13:14] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[15:13:14] *** Quits: hightower2 (~hightower@212.15.178.139) (Read error: Connection reset by peer)
[15:14:31] *** Joins: darksun (~darksun@user/darksun)
[15:16:25] *** Joins: Macuser (~Macuser@216.30.159.201)
[15:17:44] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[15:18:16] *** Joins: Klinda (~superleag@user/klinda)
[15:18:40] *** Joins: tmm88 (~tmm88@user/tmm88)
[15:18:50] <tmm88> heyho everyone
[15:19:06] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[15:19:15] <tmm88> https://gist.github.com/tiagomoraismorgado/e824469276d2a1d44c06fd5bb022d361 can someone help me to checkout why this script is not fully functionable?
[15:20:06] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:20:53] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:21:03] <very_sneaky> tmm88: what's the error you get
[15:22:23] <very_sneaky> but bootstrapping packages like you've done there isn't the normal way to manage dependencies in python
[15:23:13] *** Joins: magla (~gelignite@55d4ed71.access.ecotel.net)
[15:23:26] <tmm88> i am printing the data from line 31 up to line 36 i guess
[15:23:33] <tmm88> but the rest is not showing up
[15:23:34] *** Joins: lavos (~molt@178-222-245-206.static.isp.telekom.rs)
[15:23:42] <tmm88> i am using windows 11 and ubuntu on wsl2
[15:24:02] <tmm88> and i am using an acer predator helios 300 from 2019
[15:24:28] <tmm88> with a core i7 8gb ddr4 128 ssd 500 sata 1050 gtx and so
[15:24:46] <tmm88> and i am using the latest version of ubuntu available on microsoft store
[15:25:29] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[15:25:52] <nedbat> tmm88: what is line 39 supposed to do?
[15:27:02] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 240 seconds)
[15:27:09] *** Quits: gitly (~gitly@185.69.145.75) (Ping timeout: 256 seconds)
[15:29:09] *** Joins: gitly (~gitly@85.255.236.216)
[15:30:15] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:30:46] <tmm88> https://www.toptal.com/developers/hastebin/aquwuhiloq.yaml by the way this is my full system info
[15:30:54] <tmm88> in case it's useful
[15:32:26] <nedbat> tmm88: thanks for all the details, but did you see my question?
[15:32:35] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[15:32:49] <tmm88> yes i saw
[15:32:55] <tmm88> i was just checking for the details
[15:33:06] <tmm88> let me see for a moment if i can figure that out
[15:33:15] <tmm88> i did this with the help of a tutorial*
[15:33:38] <tmm88> it's storing and reading the information of the json parameters
[15:33:54] <tmm88> and this apparently seems to be working out
[15:34:01] <tmm88> most of the rest doesnt
[15:35:55] <nedbat> tmm88: what is the first line here that doesn't seem to be working right? And what exactly seems to be wrong about it?
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:32] *** Joins: thiras (~thiras@user/thiras)
[15:36:34] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:37] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 240 seconds)
[15:37:41] <tmm88> line 15, 27 and all below line 40
[15:38:11] *** Joins: molten (~molt@178-222-245-206.static.isp.telekom.rs)
[15:40:31] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[15:41:06] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Client Quit)
[15:41:32] *** Quits: lavos (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 240 seconds)
[15:42:50] <nedbat> tmm88: "And what exactly seems to be wrong about it?"   what are you seeing? What did you expect? How are they different?
[15:43:12] *** Joins: hightower2 (~hightower@212.15.178.16)
[15:43:50] *** Quits: Terexen (~terexen@user/terexen) (Remote host closed the connection)
[15:44:25] <tmm88> in line 15 i should be expecting something like the titles of urls of the submissions
[15:45:00] <tmm88> the same in line 27 plus eventually some additional json data
[15:45:39] <tmm88> and from line 40 below something like some data analytics over the data information retrieval
[15:49:49] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Ping timeout: 256 seconds)
[15:50:38] *** Joins: fanis30 (~anon@adsl-122.37.6.162.tellas.gr)
[15:50:53] *** Joins: KvL (~KvL@user/KvL)
[15:52:48] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[15:53:12] <nedbat> tmm88: what are you getting from line 15?
[15:54:01] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[15:55:17] *** Joins: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net)
[15:55:59] <tmm88> nothing, and nothing from line 27 and from line below 40
[15:56:15] <tmm88> if you want to check my full script log i can provide you the dataa
[15:56:19] <tmm88> wait a second
[15:56:44] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[15:58:54] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[15:59:18] *** Quits: fivegruel (~fivegruel@HSI-KBW-095-208-248-017.hsi5.kabel-badenwuerttemberg.de) (Ping timeout: 250 seconds)
[16:00:05] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[16:01:41] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:04:59] *** Joins: nomic2 (~nomic@185.217.117.104)
[16:07:48] <constxd_>  /j #proglangdesign
[16:07:51] <constxd_> oops
[16:08:02] *** Quits: nomic (~nomic@185.198.243.163) (Ping timeout: 240 seconds)
[16:09:30] <tmm88> https://gist.github.com/tiagomoraismorgado/640505cce2ca98e635e5b2755954767b#file-testredditapi-sh
[16:09:43] *** Joins: bluedust_ (~bluedust@103.160.233.148)
[16:09:44] <tmm88> nedbat: this is waht i am getting
[16:09:56] <tmm88> sorry for the time taken to reply
[16:10:29] <tmm88> inbetween warping time and space holes, my computer got slow and i wasn't fully able to retrieve the data as soon as i wished
[16:10:32] *** Quits: bluedust (~bluedust@185.248.85.10) (Ping timeout: 240 seconds)
[16:10:46] *** nomic2 is now known as nomic
[16:12:13] *** Quits: Amadiro (~Amadiro@84.209.11.12) (Ping timeout: 240 seconds)
[16:12:21] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[16:13:11] <nedbat> tmm88: ok, line 4 is being printed by line 15, is that right?
[16:13:18] <nedbat> tmm88: why is that wrong?
[16:13:37] *** Quits: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net) (Ping timeout: 256 seconds)
[16:14:10] <tmm88> no, line 4 is empty, it doesn't feature anything. but there is like a script argument there
[16:14:20] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[16:14:21] <tmm88> the script argument is not being read
[16:14:27] <tmm88> in line 15
[16:14:47] <tmm88> but it's being read in line 22
[16:15:21] <tmm88> and around that i am making an http request using the python api callbacks
[16:15:26] <tmm88> to retrieve json data
[16:15:27] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[16:15:34] <tmm88> and print the data into the terminal
[16:15:44] <tmm88> when i do this
[16:15:52] <tmm88> i am attempting at fixing some stuff
[16:15:58] <tmm88> and handling some stuff
[16:16:03] <tmm88> sorry for the slang
[16:16:09] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[16:16:22] <tmm88> and i should be iterating a data object
[16:16:27] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[16:16:28] *** Joins: tobybl (~tobybl@248.195.115.87.dyn.plus.net)
[16:16:32] <tmm88> with all the json data
[16:16:41] <tmm88> and printing at least the titles or the urls
[16:16:53] <deniska> wцwwe11
[16:17:39] <tmm88> of either the videos in the reddit subreddits
[16:17:43] <tmm88> or something else
[16:17:49] <tmm88> but nothing is happening
[16:18:00] <tmm88> and i seem to be stuck
[16:18:13] <tmm88> i am getting a very extensive stream data
[16:18:19] <tmm88> stream of data sorry
[16:18:33] <han-solo> line 13, seems to have data, but on line 22, response maybe empty, because the time frame is same ?
[16:18:48] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[16:18:53] <tmm88> and this stream of data https://www.toptal.com/developers/hastebin/ i am getting from the script
[16:19:01] <han-solo> but i would assume it would print atleast 0, which i don't see in the paste, also the pandas install
[16:19:08] *** Quits: ice9 (~ice9@user/ice9) (Read error: Connection reset by peer)
[16:19:19] <tmm88> no, 15 seems to be empty
[16:19:19] *** Joins: ice9 (~ice9@user/ice9)
[16:19:29] <han-solo> it is not
[16:19:36] <tmm88> and 27 i should be getting something
[16:19:49] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:5d0c:5cd6:41ba:a0fc)
[16:19:49] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:5d0c:5cd6:41ba:a0fc) (Changing host)
[16:19:49] *** Joins: skapata (~Skapata@user/skapata)
[16:20:05] <han-solo> `[submission(all_award...` is the print in line 15, which is `result`
[16:21:00] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[16:21:07] *** Quits: tobybl (~tobybl@248.195.115.87.dyn.plus.net) (Remote host closed the connection)
[16:21:08] <NeilRG> is there a nice way to readlines and strip each line?
[16:21:36] <NeilRG> Or do you just open, readlines, and the use a list comprehension?
[16:21:44] <NeilRG> I just want to strip away the carriage return
[16:21:52] *** Joins: ham5urg (~ham5urg@84.46.41.85.dynamic-pppoe.dt.ipv4.wtnet.de)
[16:22:07] <han-solo> `for line in f:..line = line.rstrip();..` # ?
[16:22:10] *** Joins: betuxy (~betuxy@p579ad46c.dip0.t-ipconnect.de)
[16:22:12] <tmm88> this should be line 17-27
[16:22:38] <NeilRG> han-solo, so, ultimately a list comprehension if you a list of lines
[16:23:16] <han-solo> yeah, i guess
[16:25:02] <NeilRG> okay thanks
[16:25:35] *** Joins: flea (~nosoul@78-141-67-137.dynamic.orange.sk)
[16:26:12] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[16:26:16] <ham5urg> How do I check for optional groups with re.match.groups() ? E.g. https://regex101.com/library/WhHWiB the '-' at the beginning is optional. How to handle that?
[16:26:31] *** Joins: thiras (~thiras@user/thiras)
[16:26:40] <han-solo> tmm88: https://bpa.st/ZVCA
[16:27:10] <very_sneaky> results is a list of submission objects
[16:27:24] *** Quits: nunggu (~q@gateway/tor-sasl/nunggu) (Changing host)
[16:27:24] *** Joins: nunggu (~q@user/nunggu)
[16:29:50] <very_sneaky> tmm88: results isn't actually used for anything though - i would remove lines 12-15 to make this easier to debug
[16:30:13] <very_sneaky> it also looks like your posted_after and posted_before filters are the same thing? this will mean your query returns no results because you're excluding all results
[16:30:24] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[16:30:30] <very_sneaky> so it makes sense that `print(len(submissions))` on line 27 would return nothing
[16:30:38] <very_sneaky> or, print 0
[16:31:01] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[16:31:03] *** Joins: delvian (~delvian@41.13.208.177)
[16:32:12] *** Joins: fef (~thedawn@user/thedawn)
[16:32:19] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 256 seconds)
[16:32:57] *** Quits: ajnulo (~ajnulo@2a02:3102:4cc5:fffd:bd3:1db6:a16d:5acd) (Ping timeout: 240 seconds)
[16:33:29] *** Joins: vanessa (~annada@103.160.128.7)
[16:33:59] <han-solo> ham5urg: maybe check if that index or `.group(1)` is `None` ?
[16:36:27] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[16:37:00] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 250 seconds)
[16:38:50] *** Quits: KvL (~KvL@user/KvL) (Quit: KvL)
[16:39:07] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[16:39:36] *** Quits: VaniaPy (~VaniaPy@46.12.137.214.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[16:39:38] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[16:40:00] *** Joins: zamanf (~readyorno@user/zamanf)
[16:41:27] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[16:45:49] *** Joins: filippogambarota (~filippoga@net-93-70-102-9.cust.vodafonedsl.it)
[16:49:50] *** Joins: Esteri (Esteri@gateway/vpn/protonvpn/esteri)
[16:50:40] *** Quits: filippogambarota (~filippoga@net-93-70-102-9.cust.vodafonedsl.it) (Quit: filippogambarota)
[16:53:39] <zamanf> what is the best way to parse html dom?
[16:54:05] <leduyquang753> Get a parser library.
[16:55:25] *** Joins: saroy (~Sandipan@43.252.250.86)
[16:55:33] *** saroy is now known as bytehackr
[16:56:22] <tmm88> very_sneaky: that's not entirely true
[16:57:00] <tmm88> without  those lines it wouldn't work
[16:58:15] <very_sneaky> tmm88: what wouldn't work? nothing seems to depend on them?
[16:58:33] <tmm88> on them no
[16:58:35] <tmm88> on it
[16:58:36] <tmm88> ...
[16:58:51] <tmm88> and it depends on those two or three lines
[16:59:40] <very_sneaky> nothing uses the `results` variable, except to print it on line 15. the only place `most_recent_subs` is used is to allocate to results
[17:00:01] <very_sneaky> the only result you care about here is in `query`, and it will be empty because your filter is completely exclusive
[17:00:28] <very_sneaky> suggest you change `posted_before` to be a date after 2020,6,1
[17:01:13] <very_sneaky> and remove lines 12-15
[17:01:33] *** Quits: tmm88 (~tmm88@user/tmm88) (Quit: Lost terminal)
[17:02:44] *** Joins: aakashi2001 (~aakashi20@103.61.255.0)
[17:02:44] *** Quits: aakashi2001 (~aakashi20@103.61.255.0) (Changing host)
[17:02:44] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[17:03:18] *** Joins: minip (~minip@user/minip)
[17:03:32] *** Quits: zamanf (~readyorno@user/zamanf) (Ping timeout: 240 seconds)
[17:03:49] *** Quits: llh (~llh@user/llh) (Ping timeout: 240 seconds)
[17:05:11] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 256 seconds)
[17:05:36] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 250 seconds)
[17:05:42] *** Joins: llh (~llh@user/llh)
[17:06:28] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[17:07:26] *** Joins: lavos (~molt@178-222-245-206.static.isp.telekom.rs)
[17:07:41] *** Joins: zamanf (~readyorno@2a02:587:3234:b500:41bd:f79b:9e73:3ef2)
[17:08:44] *** Joins: fikran (~fikran@user/fikran)
[17:09:52] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:10:22] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[17:11:15] *** Quits: molten (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 256 seconds)
[17:11:23] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[17:13:22] *** Quits: dvyd (~dvyd@2a0d:6fc2:47b0:1800:251f:e417:4eb6:f68b) (Quit: Client closed)
[17:13:53] *** Joins: a0z1 (~a0z1@185.195.232.252)
[17:15:05] *** Joins: skeemer (~skeemer@h-158-174-23-219.NA.cust.bahnhof.se)
[17:15:26] <skeemer> what's the difference between using a data class with few methods with respect to a common class?
[17:15:32] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:15:46] <nedbat> skeemer: dataclass writes a bunch of the boilerplate for you
[17:15:59] <skeemer> nedbat, ok thanks, what kind of boilerplate?
[17:16:07] <skeemer> you mean the __init__
[17:16:08] <skeemer> ?
[17:16:12] <nedbat> skeemer: __init__, __str__, __repr__, __hash__, __eq__
[17:16:16] <nedbat> (probably more)
[17:16:22] <skeemer> okok thanks!
[17:16:37] *** Quits: greedom (~greedom@p200300de67480100dc79bc641054a9f8.dip0.t-ipconnect.de) (Remote host closed the connection)
[17:16:51] <skeemer> i was using a function in lisp called `remove-if-not`, should i do the same thing by using filter with python?
[17:16:58] <xheimlich> I keep reading about marshmallow. how similar is it to pydantic?
[17:17:11] <c4017__> If I hold a file open in a background thread, is there a way to make sure it gets flushed and saved when python exits, whitout explicitly telling the thread to clean up?
[17:17:30] <xheimlich> we were talking about parsers yesterday.
[17:17:45] <nedbat> skeemer: a list comprehension would be the usual tool
[17:17:47] *** Joins: menace (~someone@ppp-93-104-169-2.dynamic.mnet-online.de)
[17:17:57] *** Quits: flea (~nosoul@78-141-67-137.dynamic.orange.sk) (Quit: Leaving)
[17:17:59] <xheimlich> in a perverse way Pydantic is kind of a parser generator for JSON-based config languages a.k.a. "API endpoints" etc.
[17:18:13] <nedbat> c4017__: the file should be flushed and closed automatically
[17:18:37] <c4017__> nedbat, ok, so it' the garbage
[17:18:45] <c4017__> collector that cleans it up?
[17:19:20] <nedbat> c4017__: tbh, it might be the OS that ensures buffered data is written.
[17:19:28] *** Quits: menace_ (~someone@ppp-93-104-163-152.dynamic.mnet-online.de) (Ping timeout: 250 seconds)
[17:19:32] *** Joins: veek (~veek@117.192.20.235)
[17:19:35] <xheimlich> I could write code generation from that to "Arduino C++" for whatever reason. Initialize a little physical robot from an HTTP endpoint. That's very close to what I understand compilers to be. What is marshmallow in comparison?
[17:21:37] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Remote host closed the connection)
[17:23:06] *** Quits: bluedust_ (~bluedust@103.160.233.148) (Remote host closed the connection)
[17:23:45] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[17:23:48] *** Quits: delvian (~delvian@41.13.208.177) (Remote host closed the connection)
[17:23:56] <vanessa> does there exists a python dunder that will give me the name of the class the object is? like object.__classname__ or something?
[17:24:17] *** Joins: delvian (~delvian@41.13.208.177)
[17:24:19] *** Joins: jay-m126 (~jay-m@154.72.163.132)
[17:24:21] <nedbat> vanessa: object.__class__.__name__, but I'm curious what you'll do with it?
[17:25:40] <xheimlich> presumably in an inheritance tree where the fact something exposes a method doesn't mean it's an elephant.
[17:25:53] <xheimlich> anyway, to bite Barbara Liskov's ankles.
[17:25:56] *** Joins: Enitin (~Enitin@82.102.22.86)
[17:27:09] <vanessa> Thank you. That worked, nedbat. I have to debug my neural network and I have to check my tensor size after going through each layer. So, this helps a lot to not fill up my terminal window.
[17:27:34] <grym> sleep 1; tmux -V; which tmux; exit
[17:27:40] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[17:27:54] <xheimlich> I'm still on gnu screen. I can't get used to tmux.
[17:28:00] <xheimlich> All the cool kids are on tmux now.
[17:28:32] <grym> sorry, "5G" connections are twitchy
[17:29:08] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[17:29:33] *** Quits: delvian (~delvian@41.13.208.177) (Ping timeout: 256 seconds)
[17:30:19] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[17:30:27] *** Joins: delvian (~delvian@41.119.135.49)
[17:30:33] <grym> there, this should be more stable
[17:30:43] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[17:32:02] *** Quits: zamanf (~readyorno@2a02:587:3234:b500:41bd:f79b:9e73:3ef2) (Ping timeout: 240 seconds)
[17:33:53] <vanessa> nedbat: https://dpaste.com/9UGJBG5QG see here.
[17:34:36] <nedbat> vanessa: i'm not a fan of _ instead of self
[17:34:49] <nedbat> (or semicolons....)
[17:36:14] <nedbat> vanessa: but i approve of how you've used .__class__.__name__ :)
[17:36:20] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Read error: Connection reset by peer)
[17:36:25] <vanessa> ok, I will stop using _ and semicolons.
[17:36:38] <supakeen> you have gathered a nedbat approval, time to update the resume
[17:36:39] <vanessa> :) nedbat
[17:36:46] * nedbat didn't expect it to be that easy
[17:37:26] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[17:37:53] <very_sneaky> xheimlich: I've only ever used marshmallow in the context of sqlalchemy, where I have an object description of my relational database. In that context, I've used marshmallow to provide a schema for how those objects should be serialized over an api endpoint
[17:37:59] <supakeen> * 2022-01-16T14:00+00:00 approval by nedbat in #python on the Libera Chat IRC network.
[17:38:01] <supakeen> :>
[17:41:20] *** Joins: stonkey (~stonkey@user/stonkey)
[17:42:00] *** Quits: matrixbot_bartab (~matrixbot@lfbn-idf1-1-16-71.w82-124.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[17:44:16] *** Joins: Amadiro (~Amadiro@84.209.11.12)
[17:44:42] *** Joins: Algernon69 (~Algernon6@88.124.69.179)
[17:45:18] *** Joins: esther (~esther@2607:fb90:5fed:fd71:a69e:bbee:a398:fef0)
[17:45:37] *** Joins: jmd (~user@de.cellform.com)
[17:45:42] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[17:46:10] *** Joins: nyah (~nyah@94.6.71.219)
[17:46:24] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[17:47:17] *** Quits: arinov (~arinov@213.194.126.155) (Quit: WeeChat 3.2)
[17:48:21] *** Joins: hlauk (~hlauk@176.33.97.244)
[17:48:53] *** Joins: georgios (~georgios@user/georgios)
[17:49:01] *** Quits: Algernon69 (~Algernon6@88.124.69.179) (Ping timeout: 240 seconds)
[17:49:17] *** Quits: esther (~esther@2607:fb90:5fed:fd71:a69e:bbee:a398:fef0) (Ping timeout: 240 seconds)
[17:49:18] *** Joins: aod (~a@190-203-240-94.dyn.dsl.cantv.net)
[17:49:24] <NeilRG> is there a way of doing functools.cache where it only considers some of the arguments as keys?
[17:49:37] *** Joins: emacspenguin (~My_user_n@2601:18d:4801:1cf0:c5cf:852f:fe97:88fb)
[17:49:51] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[17:49:54] <NeilRG> i.e. f(x, y) is evaluated and stored, and f(x, anything) will evaluate to f(x, y)
[17:50:45] <emacspenguin> Would websockets or sockets be recommended for sending very small ammounts of JSON between client and server?
[17:52:59] *** Joins: cewood (~cewood@ip5b417897.dynamic.kabel-deutschland.de)
[17:55:00] *** Joins: PointThink (~PointThin@abzk146.neoplus.adsl.tpnet.pl)
[17:55:12] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-1d13-cde8-80a7-543f.res6.spectrum.com)
[17:55:43] *** Joins: matrixbot_bartab (~matrixbot@lfbn-idf1-1-1323-89.w90-79.abo.wanadoo.fr)
[17:55:52] *** Quits: teddyc (theodorc@cassarossa.samfundet.no) (Read error: Connection reset by peer)
[17:56:12] *** Quits: PointThink (~PointThin@abzk146.neoplus.adsl.tpnet.pl) (Remote host closed the connection)
[17:56:49] *** Joins: PointThink (~PointThin@abzk146.neoplus.adsl.tpnet.pl)
[17:57:21] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:59:32] *** Joins: teddyc (theodorc@cassarossa.samfundet.no)
[17:59:42] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[18:02:19] *** Joins: Astara (~skraito@user/skraito)
[18:02:25] *** Quits: Astara (~skraito@user/skraito) (Remote host closed the connection)
[18:02:27] *** Quits: mug3n_ (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[18:02:56] *** Quits: PointThink (~PointThin@abzk146.neoplus.adsl.tpnet.pl) (Read error: Connection reset by peer)
[18:03:38] *** Joins: PointThink (~PointThin@abzk146.neoplus.adsl.tpnet.pl)
[18:04:12] *** Quits: PointThink (~PointThin@abzk146.neoplus.adsl.tpnet.pl) (Read error: Connection reset by peer)
[18:04:29] *** Joins: PointThink (~PointThin@abzk146.neoplus.adsl.tpnet.pl)
[18:04:32] *** Quits: delvian (~delvian@41.119.135.49) (Ping timeout: 240 seconds)
[18:05:30] *** Joins: delvian (~delvian@41.13.198.2)
[18:07:30] *** Joins: d3vtr (~pwnd@114.79.23.37)
[18:07:38] <d3vtr> Huh?
[18:08:07] *** Quits: veek (~veek@117.192.20.235) (Remote host closed the connection)
[18:09:26] *** Quits: PointThink (~PointThin@abzk146.neoplus.adsl.tpnet.pl) (Read error: Connection reset by peer)
[18:09:40] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.4)
[18:09:41] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:09:42] *** Joins: PointThink (~PointThin@abzk146.neoplus.adsl.tpnet.pl)
[18:09:55] <nedbat> NeilRG: i think you would need to get the code of @cache and adapt it yourself.
[18:10:26] <NeilRG> @nedbat, thanks.  I think I'll just change the way I engineer things.  Essentially make the function a member, and y member variables
[18:10:36] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[18:10:45] <NeilRG> haven't quite thought it through
[18:11:20] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:12:18] *** Quits: delvian (~delvian@41.13.198.2) (Quit: Leaving)
[18:12:20] *** Quits: xheimlich (~xheimlich@179.218.1.150) (Ping timeout: 250 seconds)
[18:12:23] *** Joins: anotheruser (~user@197.54.61.63)
[18:14:30] *** Quits: gitly (~gitly@85.255.236.216) (Ping timeout: 250 seconds)
[18:14:30] *** Quits: someuser (~user@197.54.99.203) (Ping timeout: 250 seconds)
[18:15:55] *** Quits: vanessa (~annada@103.160.128.7) (Quit: WeeChat 3.4)
[18:16:27] *** Joins: gitly (~gitly@148.252.133.243)
[18:16:32] <d3vtr> SGkgYSB2ZXJ5IGN1cmlvdXMgcGVyc29u
[18:17:18] *** Quits: aod (~a@190-203-240-94.dyn.dsl.cantv.net) (Quit: leaving)
[18:17:31] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[18:17:38] *** Quits: PointThink (~PointThin@abzk146.neoplus.adsl.tpnet.pl) (Quit: Off to bed)
[18:19:30] *** Joins: Deneb (~johnch@30.125.7.51.dyn.plus.net)
[18:19:40] *** Joins: tannishpage (~tannishpa@2001:8003:e90a:200:21e4:b30f:8f92:fb53)
[18:20:07] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[18:20:24] <sveinse> When using cgi.FieldStorage() is is possible to debug/develop using command-line arguments that emulates cgi parameters. Are there any ways to do a file upload this way?
[18:20:40] *** Joins: LordVan_ (~lordvan@gentoo/developer/lordvan)
[18:21:07] *** Quits: gitly (~gitly@148.252.133.243) (Ping timeout: 256 seconds)
[18:21:07] *** Quits: Csm319_ (~csm3105@static-90-220-24-46.ipcom.comunitel.net) (Read error: Connection reset by peer)
[18:21:38] *** Joins: Csm319_ (~csm3105@static-90-220-24-46.ipcom.comunitel.net)
[18:21:54] <Deneb> any tkinter experts out there? I have set up a save file dialog and it works, but.... why does the user have to supply a file extension before it allows them to click 'Save'? Why does it not use (automatically append) the selected extension from the file type dropdown?
[18:22:41] *** Joins: gitly (~gitly@85.255.236.216)
[18:22:59] *** Quits: hlauk (~hlauk@176.33.97.244) (Quit: Leaving)
[18:23:11] *** Joins: Lojas (~Lojas@65.99.190.117)
[18:23:15] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[18:23:34] *** Quits: Lojas (~Lojas@65.99.190.117) (Changing host)
[18:23:34] *** Joins: Lojas (~Lojas@user/Lojas)
[18:23:40] <montpol> I'm looking for an internship that deals with coding (Python or C++) and FPGA. Does anyone have any suggestions/recommendations where I can find something like this?
[18:24:23] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[18:24:45] <sveinse> Wow, Python and FPGA is an unortodox combo
[18:25:50] *** Joins: Ruit (~textual@c-69-248-83-247.hsd1.nj.comcast.net)
[18:26:03] <montpol> sveinse no not really, in order to manage parts of FPGA work usually hardware engineers first model them in python/c++  or there is some part of the project that entails software engineering
[18:26:41] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[18:27:02] *** Quits: gitly (~gitly@85.255.236.216) (Ping timeout: 240 seconds)
[18:28:09] <sveinse> montpol: interesting. I've/we've only modelled fgpa in vhdl and never used high-level languages like py for this
[18:29:00] *** Joins: gitly (~gitly@85.255.235.103)
[18:29:37] *** Quits: tannishpage (~tannishpa@2001:8003:e90a:200:21e4:b30f:8f92:fb53) (Quit: Iridium IRC Client)
[18:29:50] *** Joins: tannishpage (~tannishpa@2001:8003:e90a:200:21e4:b30f:8f92:fb53)
[18:31:34] *** Quits: tannishpage (~tannishpa@2001:8003:e90a:200:21e4:b30f:8f92:fb53) (Client Quit)
[18:31:43] *** Quits: jay-m126 (~jay-m@154.72.163.132) (Ping timeout: 256 seconds)
[18:31:48] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[18:32:17] *** doit4madden is now known as death916
[18:32:27] *** Joins: tannishpage (~tannishpa@2001:8003:e90a:200:21e4:b30f:8f92:fb53)
[18:32:48] *** Quits: tannishpage (~tannishpa@2001:8003:e90a:200:21e4:b30f:8f92:fb53) (Client Quit)
[18:34:23] <montpol> sveinse interesting...i suppose it depends on the work as well. What do you do exactly?
[18:34:38] *** Quits: Ruit (~textual@c-69-248-83-247.hsd1.nj.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[18:36:06] *** Joins: demon__ (~user@143.244.63.95)
[18:36:41] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[18:37:04] <sveinse> montpol: make embedded equipment and use fpga for handling data IO and processing
[18:37:17] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[18:37:20] *** Joins: jay-m126 (~jay-m@154.72.163.132)
[18:37:28] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 250 seconds)
[18:37:51] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[18:37:55] <montpol> sveinse cool, do you know of any internships there?
[18:38:06] *** Joins: xkuru (~xkuru@user/xkuru)
[18:39:01] *** Joins: bluedust (~bluedust@117.207.235.4)
[18:39:04] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[18:39:15] *** Quits: anotheruser (~user@197.54.61.63) (Ping timeout: 256 seconds)
[18:39:40] *** Joins: someuser (~user@197.54.101.132)
[18:39:49] *** Quits: cewood (~cewood@ip5b417897.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[18:40:28] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[18:40:37] *** Joins: hlauk (~hlauk@176.33.97.244)
[18:40:47] *** Quits: demon__ (~user@143.244.63.95) (Ping timeout: 256 seconds)
[18:41:29] *** Joins: anotheruser (~user@192.121.247.50)
[18:43:02] *** Quits: gitly (~gitly@85.255.235.103) (Ping timeout: 240 seconds)
[18:43:04] <sveinse> montpol: No, and sorry I think this is a bit OT
[18:44:07] *** Joins: demon__ (~user@197.54.101.132)
[18:44:26] *** Quits: d3vtr (~pwnd@114.79.23.37) (Read error: Connection reset by peer)
[18:44:33] *** Joins: c_d3v (~pwnd@112.215.243.186)
[18:44:55] *** Quits: someuser (~user@197.54.101.132) (Ping timeout: 256 seconds)
[18:45:18] *** Joins: gitly (~gitly@148.252.129.21)
[18:45:32] *** Quits: anotheruser (~user@192.121.247.50) (Read error: Connection reset by peer)
[18:45:32] *** Quits: jay-m126 (~jay-m@154.72.163.132) (Ping timeout: 240 seconds)
[18:46:30] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[18:48:02] *** Quits: a0z1 (~a0z1@185.195.232.252) (Ping timeout: 240 seconds)
[18:48:14] *** Quits: fanis30 (~anon@adsl-122.37.6.162.tellas.gr) (Quit: WeeChat 3.3)
[18:50:02] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 250 seconds)
[18:50:44] <taeaad_> What does the syntax a = b == c mean?
[18:51:10] *** Joins: jinie (~jimmy@188.114.173.150)
[18:51:16] <sveinse> taeaad_: it assigns the result of the boolean test b == c into variable a
[18:52:04] *** Joins: Auron (Auron956@user/auron)
[18:52:40] *** Joins: Everything (~Everythin@37.115.210.35)
[18:52:51] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[18:52:59] <taeaad_> Ah, thanks.
[18:53:09] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[18:53:48] *** Quits: emacspenguin (~My_user_n@2601:18d:4801:1cf0:c5cf:852f:fe97:88fb) (Quit: WeeChat 2.8)
[18:54:24] *** Joins: Narrat (~omnius@p200300df5f3a232706ea56fffe2e7cdc.dip0.t-ipconnect.de)
[18:54:37] *** Joins: nunggu (~q@user/nunggu)
[18:54:51] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:56:11] *** Joins: juliaEnv (~juliaEnv@ip-86-49-248-177.net.upcbroadband.cz)
[18:56:39] *** Joins: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net)
[18:57:19] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:e983:cad7:582e:2dfe)
[18:58:47] *** Quits: nunggu (~q@user/nunggu) (Remote host closed the connection)
[18:59:10] *** Joins: nunggu (~q@user/nunggu)
[18:59:50] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[19:00:22] *** Joins: andreasbuhr (~quassel@p548dd48c.dip0.t-ipconnect.de)
[19:01:11] *** Quits: bytehackr (~Sandipan@43.252.250.86) (Ping timeout: 256 seconds)
[19:01:26] *** Joins: aod (~a@190-203-240-94.dyn.dsl.cantv.net)
[19:02:16] *** Quits: jinie (~jimmy@188.114.173.150) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:02:53] *** Quits: c_d3v (~pwnd@112.215.243.186) (Ping timeout: 256 seconds)
[19:04:40] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[19:05:05] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[19:05:40] *** Quits: n0cturna1 (~n0cturna1@h155173.upc-h.chello.nl) (Quit: WeeChat 3.4)
[19:06:12] *** Quits: taeaad_ (~taeaad@user/taeaad) (Remote host closed the connection)
[19:06:51] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Remote host closed the connection)
[19:07:40] *** Joins: bytehackr (~Sandipan@43.252.250.86)
[19:08:45] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[19:09:50] *** Joins: nicode (~nic@2607:f2c0:946d:3800:5978:3a37:ee84:d8cb)
[19:10:49] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Ping timeout: 256 seconds)
[19:11:52] *** Quits: andreasbuhr (~quassel@p548dd48c.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:13:02] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[19:14:31] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[19:14:35] <ham5urg> Do you use pubsub internally/inside a module or only for inter-module communication?
[19:15:37] *** Joins: Macuser (~Macuser@216.30.159.201)
[19:16:05] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[19:16:28] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:16:52] *** Joins: Auron (Auron956@user/auron)
[19:17:17] *** Quits: nicoz (unixlab@ubuntu/member/nicoz) (Ping timeout: 240 seconds)
[19:18:05] *** Joins: fikran (~fikran@user/fikran)
[19:19:47] *** Quits: aod (~a@190-203-240-94.dyn.dsl.cantv.net) (Quit: leaving)
[19:20:37] *** Quits: gitly (~gitly@148.252.129.21) (Ping timeout: 256 seconds)
[19:21:39] *** Joins: akk (~akk@174-28-122-47.albq.qwest.net)
[19:22:36] *** Joins: gitly (~gitly@85.255.235.98)
[19:23:55] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[19:24:02] *** Joins: sandipan (~Sandipan@43.252.250.86)
[19:24:02] *** Joins: frmlof (~frmlof@70.243.238.191)
[19:24:16] *** Quits: bytehackr (~Sandipan@43.252.250.86) (Ping timeout: 250 seconds)
[19:24:21] <ali1234> what's the web repl that isn't replit?
[19:25:45] *** Quits: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net) (Quit: Leaving)
[19:25:46] *** Joins: earendel (uid498179@user/earendel)
[19:28:37] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:30:12] *** Quits: nunggu (~q@user/nunggu) (Ping timeout: 276 seconds)
[19:30:24] *** Quits: bluedust (~bluedust@117.207.235.4) (Remote host closed the connection)
[19:31:15] *** Joins: goldfish (~goldfish@user/goldfish)
[19:31:36] *** Joins: nunggu (~q@user/nunggu)
[19:33:37] *** Joins: a0z1 (~a0z1@141.98.252.168)
[19:33:42] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[19:34:28] *** Joins: Macuser (~Macuser@216.30.159.201)
[19:34:31] *** Joins: taeaad (~taeaad@user/taeaad)
[19:35:03] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[19:35:51] <Deneb> how does one add text to a tkinter textbox? Documentation shows something like: textf.insert(END, 'mytext') but I am getting 'END' is not defined?
[19:36:56] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[19:38:32] *** Quits: lavos (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 240 seconds)
[19:38:44] *** Quits: Strom (strom@fedora/strom) ()
[19:38:56] *** Joins: lavos (~molt@178-222-245-206.static.isp.telekom.rs)
[19:39:00] *** Joins: zamanf (~readyorno@2a02:587:3234:b500:41bd:f79b:9e73:3ef2)
[19:39:03] <Deneb> ok, no worries sussed ir. tkinter.END
[19:39:21] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Remote host closed the connection)
[19:39:40] *** Joins: stonkey (~stonkey@user/stonkey)
[19:39:43] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[19:40:51] *** Joins: Strom (strom@fedora/strom)
[19:42:02] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 240 seconds)
[19:42:16] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[19:42:19] *** Joins: FNAShinobi (~FNAShinob@2601:18c:d07f:f2e9:32e8:f83a:f861:c661)
[19:42:30] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[19:42:47] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[19:44:04] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[19:45:48] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[19:46:06] *** Joins: molten (~molt@178-222-245-206.static.isp.telekom.rs)
[19:47:26] *** Joins: trampel (~trampel@2601:602:9a00:49d:dcea:51c3:85c8:4fbd)
[19:47:43] *** Quits: Narrat (~omnius@p200300df5f3a232706ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[19:48:13] *** Quits: hlauk (~hlauk@176.33.97.244) (Ping timeout: 256 seconds)
[19:48:45] *** Joins: Jong (~Jong@2620:10d:c090:400::5:44d9)
[19:48:57] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[19:49:31] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 256 seconds)
[19:49:50] *** Quits: lavos (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 250 seconds)
[19:49:55] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[19:51:48] *** Joins: karlpen (~karlpen@201.47.199.192.dynamic.adsl.gvt.net.br)
[19:52:25] *** Joins: redrob1n (~redrob1n@adsl-99-93-209-124.dsl.mtry01.sbcglobal.net)
[19:52:44] *** Joins: bluedust (~bluedust@117.207.235.4)
[19:53:03] *** Quits: jfcaron (~jfcaron@192.252.229.171) (Quit: jfcaron)
[19:54:35] *** Quits: minip (~minip@user/minip) (Remote host closed the connection)
[19:54:55] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[19:56:05] <Evolver> Is there any way to template executable code other than using `exec`? I mean Python in Python.
[19:56:32] *** Quits: redrob1n (~redrob1n@adsl-99-93-209-124.dsl.mtry01.sbcglobal.net) (Ping timeout: 240 seconds)
[19:56:40] *** Joins: vip (~alexvip@116.28.170.217)
[19:56:47] *** Joins: lavos (~molt@178-222-245-206.static.isp.telekom.rs)
[19:56:50] <Evolver> ali1234: google colab
[19:57:38] <Evolver> nedbat: Hi. Is there something like `cog` that can template Python code in a .py file?
[19:57:47] *** Quits: vip (~alexvip@116.28.170.217) (Quit: Leaving)
[19:57:58] *** Quits: karlpen (~karlpen@201.47.199.192.dynamic.adsl.gvt.net.br) ()
[19:58:45] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[19:59:00] *** Joins: Macuser- (Macuser@here.for-the.chat)
[19:59:20] <deniska> I'm sure cog would run on py file, but that's… unusual
[19:59:23] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[19:59:31] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[19:59:55] <Evolver> deniska: I don't want to change my .py file. I need it to run once initially upon execution
[20:00:03] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[20:00:13] <Evolver> like a JIT templater
[20:00:14] *** Quits: molten (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 250 seconds)
[20:00:40] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 250 seconds)
[20:00:44] *** Joins: molten (~molt@178-222-245-206.static.isp.telekom.rs)
[20:00:54] <deniska> Evolver: if you are going to generate python code, and you are sure there's no other good way to achieve what you want to achieve, exec is the most straightforward thing to do
[20:01:04] <Evolver> ok
[20:02:02] *** Quits: lavos (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 240 seconds)
[20:04:15] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 256 seconds)
[20:04:37] *** Quits: zamanf (~readyorno@2a02:587:3234:b500:41bd:f79b:9e73:3ef2) (Ping timeout: 240 seconds)
[20:07:05] *** Quits: mossman93 (~quassel@71.70.23.126) (Ping timeout: 256 seconds)
[20:07:25] *** Joins: lavos (~molt@178-222-245-206.static.isp.telekom.rs)
[20:09:02] *** Quits: osxtra (~root@2605:a601:aa30:fe00::83a2:6799) (Ping timeout: 240 seconds)
[20:09:09] *** Quits: demon__ (~user@197.54.101.132) (Read error: Connection reset by peer)
[20:09:18] *** Quits: peterandre (peterandre@2605:6400:c847:1524::4251) (Quit: Oooh mysterious girl!)
[20:10:33] *** Joins: someuser (~user@197.54.16.50)
[20:11:06] *** Joins: mathe8989 (~wellmathe@85.251.70.233.dyn.user.ono.com)
[20:11:37] *** Quits: molten (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 256 seconds)
[20:11:51] *** Joins: bluedust_ (~bluedust@141.98.100.153)
[20:11:56] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 250 seconds)
[20:12:27] *** Joins: mossman93 (~quassel@user/mossman93)
[20:13:21] *** Joins: delvian (~delvian@105.248.247.114)
[20:13:47] *** Quits: PJBoy (~PJBoy@user/pjboy) (Quit: Ping timeout: 252 seconds)
[20:14:02] *** Joins: molten (~molt@178-222-245-206.static.isp.telekom.rs)
[20:14:17] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[20:14:50] *** Joins: PJBoy (~PJBoy@user/pjboy)
[20:15:25] *** Quits: bluedust (~bluedust@117.207.235.4) (Ping timeout: 256 seconds)
[20:16:45] *** zoid is now known as creamcheese
[20:17:19] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Quit: mihaiadrian)
[20:17:32] *** Quits: lavos (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 240 seconds)
[20:17:51] *** Quits: juliaEnv (~juliaEnv@ip-86-49-248-177.net.upcbroadband.cz) (Quit: Going offline, see ya! (www.adiirc.com))
[20:17:52] *** Joins: luva2 (~luva@146.70.62.246)
[20:19:02] *** Quits: delvian (~delvian@105.248.247.114) (Ping timeout: 240 seconds)
[20:19:21] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:388d:6b4b:8af0:da5e) (Quit: Leaving)
[20:20:07] *** Quits: stblaha (~stblaha@user/stblaha) (Ping timeout: 256 seconds)
[20:21:05] *** Quits: luva (~luva@45.141.152.61) (Ping timeout: 256 seconds)
[20:21:05] *** luva2 is now known as luva
[20:22:34] *** Quits: rsx (~dummy@ppp-188-174-142-157.dynamic.mnet-online.de) (Quit: rsx)
[20:22:37] *** Joins: lavos (~molt@178-222-245-206.static.isp.telekom.rs)
[20:22:37] *** creamcheese is now known as zoid
[20:23:33] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[20:23:45] *** Joins: osxtra (~root@136.49.102.81)
[20:24:07] *** Joins: aiena|2 (~aiena@103.150.52.175)
[20:24:36] <aiena|2> Is code inside an asycn function synchronous while the function itself is async?
[20:24:41] <aiena|2> *async
[20:24:48] *** Quits: teddyc (theodorc@cassarossa.samfundet.no) (Quit: WeeChat 3.0)
[20:24:49] *** Joins: hlauk (~hlauk@176.33.97.244)
[20:25:34] <supakeen> I can't find a way to make that description work, so no.
[20:25:52] <supakeen> What do you mean exactly?
[20:26:02] *** Quits: molten (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 240 seconds)
[20:26:14] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Ping timeout: 250 seconds)
[20:26:35] *** Joins: upsala (~zcb@185.209.196.170)
[20:26:41] *** Joins: frmlof (~frmlof@70.243.238.191)
[20:26:46] *** Quits: trampel (~trampel@2601:602:9a00:49d:dcea:51c3:85c8:4fbd) (Quit: Leaving)
[20:27:08] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[20:27:24] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[20:28:04] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[20:28:43] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[20:30:29] <nedbat> Evolver: it sounds interesting.  If you tell us more about it, there's probably a non-templating way to do it.
[20:30:55] *** Joins: oldaccountdmhist (~histausse@2001:470:69fc:105::b91)
[20:30:57] *** Quits: a0z1 (~a0z1@141.98.252.168) (Quit: Leaving)
[20:31:36] <Evolver> nedbat: for example, I could write the logic using `for` loops, but there is benefit in templating it because certain dict key names benefit from "early binding".
[20:31:43] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[20:31:59] <Evolver> so when the function is going to be called 20 million times, every tiny bit of early binding matters to me.
[20:34:03] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[20:34:07] *** Joins: bluedust (~bluedust@117.207.235.4)
[20:34:15] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[20:34:16] *** Joins: dez (uid92154@user/dez)
[20:35:25] *** oldaccountdmhist is now known as Hist
[20:35:54] *** Joins: zmt01 (~zmt00@user/zmt00)
[20:36:57] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[20:37:04] *** Quits: constxd_ (~brad@142.167.170.88) (Ping timeout: 250 seconds)
[20:37:41] *** Quits: bluedust_ (~bluedust@141.98.100.153) (Ping timeout: 256 seconds)
[20:37:42] <nedbat> Evolver: hmm, i see. cog certain could be used for that.
[20:37:52] <nedbat> but exec might be easier?
[20:38:14] *** Hist is now known as Histausse
[20:38:20] *** Joins: teddyc (theodorc@cassarossa.samfundet.no)
[20:38:28] <ham5urg> Would you add to a MVC pattern a local model which resides in the 'V' to handle some state, derived from 'M', just for GUI purposes (eg. background color of input fields, etc.)?
[20:38:54] *** Joins: Reign (~Username@ip98-161-226-10.ph.ph.cox.net)
[20:39:00] <grym> ham5urg: oh, mvvc 😇
[20:39:05] <Deneb> how does one generate a legend in matplotlib. The docs say: ax.legend() - however this generates a square blob in the top right corner. Nothing more?
[20:39:13] *** Quits: mathe8989 (~wellmathe@85.251.70.233.dyn.user.ono.com) (Quit: Leaving)
[20:40:23] <grym> have you read more of the legend docs?
[20:40:28] <ham5urg> grym, mvvc?
[20:40:41] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[20:40:47] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[20:41:00] <grym> ham5urg: dotnet lingo for mvc; c is "viewmodel" with a gui styling focus
[20:41:04] *** Joins: greedom (~greedom@p200300de67480100dc79bc641054a9f8.dip0.t-ipconnect.de)
[20:41:41] <Deneb> grym: yes, but I don't really understand. For example, it shows a line like: ax.plot([1, 2, 3], label='Inline label') - so what does ax([1,2,3]) refer to? In another example it talks about handles and lables but without context or examples, I can't see the correlation?
[20:42:50] <grym> ax is the normal variable name for an instance of Axes
[20:43:50] <ham5urg> grym, ahh, people have done already such. I need model.py, view.py, viewmodel.py and controller.py
[20:43:50] <Deneb> grym: yes, I get that, but still don't see the correlation.
[20:43:56] *** Joins: prox (~prox@eth-west-pareq2-46-193-0-224.wb.wifirst.net)
[20:45:29] *** Joins: ajf_ (~ajf_@user/ajf/x-9593112)
[20:46:39] <prox> Hi, I am looking for a way to cast the types of the fields of dataclasses. For now my best solution is this: https://bpa.st/42DA but it feels off. Is there a better way?
[20:46:41] <grym> ham5urg: you don't, really, but feel free to adopt as much of the architecture as auits you
[20:46:56] <ham5urg> thanks for the hint
[20:47:00] <Deneb> I have for example ax.plot(x, yarray) in the routine that draws the graph. x is a dataset relating to the x-axis and yarray the y values. But I don't get what [1,2,3] relates to in the example - x axis or y data? Or neither?
[20:47:10] <grym> prox: look at desert.rtfd.org
[20:47:20] <Deneb> looking at docs here: https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.legend.html
[20:47:54] *** Quits: llh (~llh@user/llh) (Ping timeout: 250 seconds)
[20:47:59] <Deneb> also, what's the 'artist'? Seems to be completely abstract here?
[20:48:33] <grym> there are multiple backends so you need an abstract artist
[20:48:37] *** Joins: molten (~molt@178-222-245-206.static.isp.telekom.rs)
[20:49:07] <Deneb> grym: but what is an artist? Is this another term for a renderin engine or something?
[20:49:36] *** Joins: llh (~llh@user/llh)
[20:49:49] <grym> i don't think so
[20:49:55] <Deneb> ...just Googling it anyway
[20:50:40] <aiena|2> I am using python 3.8 on my distro. I was trying to understand asyncio and am a bit confused. I want to run multiple timers async. https://paste.opensuse.org/4a8c61b5 is my code
[20:51:11] <aiena|2> the task seem to be created but not really run I think.
[20:51:29] <aiena|2> await makes the tasks synchronous and blocking tyhough
[20:51:57] <aiena|2> so how do I do this correctly.
[20:52:02] *** Quits: lavos (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 240 seconds)
[20:52:28] *** aiena|2 is now known as aiena
[20:52:35] *** Quits: aiena (~aiena@103.150.52.175) (Changing host)
[20:52:35] *** Joins: aiena (~aiena@user/aiena)
[20:52:54] <braxas> KirkMcDonald so you are right, not only is the str.translate not faster, it is actually slower
[20:54:45] <foo> I recently had a dev move actual various domain names into a conf of it's own. Is it common to have things like domains in an environmental variable? Hmph.
[20:54:57] <foo> Or, separate conf, even. Probably yes.
[20:55:17] <prox> Thanks grym, I was hoping for somthing similar to `default_factory`, but I guess I'll use desert
[20:55:18] *** Quits: hlauk (~hlauk@176.33.97.244) (Quit: Leaving)
[20:55:29] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[20:56:14] <grym> prox: it's a thin wrapper over marshmallow
[20:56:26] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[20:57:04] <grym> after a bunch of use i like pydantic's deserialization better on the whole
[20:57:27] *** Quits: bluedust (~bluedust@117.207.235.4) (Remote host closed the connection)
[20:57:46] <deniska> foo: if it's a domain of the app itself, it's useful to have it configurable just for local or stage testing purposes
[20:58:00] <deniska> foo: if it's a domain of another service, depends
[20:59:25] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[20:59:54] <foo> deniska: thanks. Our workflow is kind of wonky on this one project. We have our "core codebase" and then we have a subset of that core codebase for some external developers. The subset of the codebase called (app-parts) has a few parts of a much much larger codebase... and in there, the domains were hard coded. One of the devs moved them out into an env variable. I don't mind this and admire his initiative.
[20:59:58] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[21:00:00] <foo> If he was to have full access of the larger codebase, that would likely be the proper way to do this. Mostly thinking out loud here. Thanks for chiming in.
[21:00:18] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[21:00:40] <deniska> foo: my team has a kinda bad habit of conflating putting what ought to be a constant into settings
[21:00:41] *** Joins: zamanf (~readyorno@2a02:587:3234:b500:41bd:f79b:9e73:3ef2)
[21:01:49] <foo> deniska: to be fair, this is a constant. This is a separate parts repo. The domains will never change. If this same codebase was in dev, staging and production - sure, having different domains for dev / staging purposes make sense. As of right now, this is likely going to complicate things because everyone will now need to set up an .env file (which no one has or is doing).
[21:02:42] <foo> deniska: appreciate you sharing what your team does. This is all helpful to think through. I do admire this guy's initiative, though.
[21:03:27] <deniska> foo: if something can theoretically change, but never with ease, big deprecation periods, important emails, and a lot of code changed anyway, it should be a constant, but often there isn't a good place to put constants, so people put it in settings instead :)
[21:03:53] <foo> deniska: :)
[21:04:32] *** Quits: xx (~xx@user/xx) (Ping timeout: 240 seconds)
[21:04:36] <deniska> that's how we end up with settings like `ENABLE_ASYNC_DRIVER` which are like… either practically a no-op to change if an application doesn't need it, or it's practically a setting to make a program refuse to start if it does :)
[21:04:49] <braxas> funnily enough, it is sensitive to how early in file the function is declared
[21:05:00] *** Joins: n0cturna1 (~n0cturna1@94-214-14-33.cable.dynamic.v4.ziggo.nl)
[21:05:41] *** Parts: prox (~prox@eth-west-pareq2-46-193-0-224.wb.wifirst.net) ()
[21:06:00] *** Joins: clydez (~clydez@178-116-34-81.access.telenet.be)
[21:06:04] *** Quits: crashrep (~crashrep@user/crashrep) (Remote host closed the connection)
[21:06:19] *** Joins: natewrench (~Soce1964@cpe-72-228-153-194.buffalo.res.rr.com)
[21:06:26] *** Quits: clydez (~clydez@178-116-34-81.access.telenet.be) (Remote host closed the connection)
[21:06:28] *** Joins: crashrep (~crashrep@user/crashrep)
[21:06:34] *** Quits: natewrench (~Soce1964@cpe-72-228-153-194.buffalo.res.rr.com) (Max SendQ exceeded)
[21:06:59] *** Joins: natewrench (~Soce1964@cpe-72-228-153-194.buffalo.res.rr.com)
[21:07:05] *** Quits: sandipan (~Sandipan@43.252.250.86) (Remote host closed the connection)
[21:08:01] <nedbat> braxas: what is?
[21:08:31] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[21:08:32] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Quit: WeeChat 3.3)
[21:09:15] *** Joins: lavos (~molt@178-222-245-206.static.isp.telekom.rs)
[21:09:32] *** Quits: mud (~mud@user/kadoban) (Read error: Connection reset by peer)
[21:09:44] <braxas> the order of decodeUnicodeEscapeNewDict and decodeUnicodeEscapeNew in: https://github.com/aucampia/rdflib-scratchpad/blob/394cf8e579ca5359fcae68c0548b8ea54d8d3fbc/src/aucampia/rdflib/scratchpad/unquote.py
[21:09:45] *** Joins: cyberfall (~owner@2600:6c40:1600:39ec:b49d:6307:ee6c:7e57)
[21:10:08] *** Joins: cemotyz09 (~cemotyz09@2603-8081-6300-9e12-cc5c-2697-f309-99e5.res6.spectrum.com)
[21:10:12] <cyberfall> hello.. need some help doing web scraping
[21:10:37] <jinsun> aiena: there are few problems there, first time.sleep is blocking, you want asyncio.sleep if you want the sleeps running concurrently
[21:10:37] *** Joins: mud (~mud@user/kadoban)
[21:10:46] *** Quits: Jong (~Jong@2620:10d:c090:400::5:44d9) (Quit: Textual IRC Client: www.textualapp.com)
[21:11:21] <aiena> jinsun: what about subprocess
[21:11:52] <jinsun> aiena:  second, if you keep asking for input in an infinite loop you will never give other tasks a chance to run, you can solve that by not having an infinite loop and stop asking for input after sometime
[21:13:03] <jinsun> aiena: and finally if you want to wait for the tasks to finish before the program exits, you'll have to await them, you can solve that by saving all tasks in a list then use asyncio.gather to await all of them at once
[21:13:04] <aiena> jinsun: that is what I noticed sort of. What I actually wanted was ask for input run the async funtion in bg and let it finish while asking if the user wants to start another timer in parallel
[21:13:13] *** Quits: molten (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 256 seconds)
[21:13:59] <jinsun> aiena: subprocess is also not async, there is something in asyncio for subprocesses too, you'll have to use that
[21:15:20] <aiena> hmm
[21:15:23] <cyberfall> im try to use beautifulsoup to pull data out of a <span jsname="vWLAgc" class="isqQvc NprOob wT3Vgc">76.56</span>
[21:15:55] <aiena> cyberfall: you have some code?
[21:15:59] <jinsun> not sure if asking for input asyncronously while running other tasks too is even possible
[21:16:16] *** Joins: bluedust (~bluedust@117.207.235.4)
[21:16:34] <jinsun> not with asyncio alone probably some extra libraries will be needed
[21:18:06] <aiena> oh
[21:18:50] <cyberfall> aiena: https://bpa.st/KLFC
[21:19:16] <cyberfall> i try to use some google search for it an just got lost
[21:19:40] <aiena> cyberfall: I am getting a 404 not found for that url
[21:19:43] *** Joins: molten (~molt@178-222-245-206.static.isp.telekom.rs)
[21:20:12] <aiena> as in bpa.st works but the /KLFC does not exist
[21:20:24] <cyberfall> aiena: https://bpa.st/KLFQ
[21:20:31] <cyberfall> oh sorry try that one
[21:20:41] *** Joins: subopt (~subopt@2603-8081-2302-459a-0982-65a9-00b6-247e.res6.spectrum.com)
[21:21:00] *** Joins: henistein (~henistein@2001:8a0:fc86:4d01:433c:3ba9:6f55:421)
[21:21:36] <henistein> I can't run matplotlib it shows: no module named '_tkinter'
[21:21:37] <cyberfall> i try to use some google search to pull the quote from as i figure sites like wsj or some other wouldnt like having repeat traffic asking
[21:21:44] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[21:22:27] <cyberfall> did you import tkinter henistein
[21:22:57] *** Quits: zmt01 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[21:23:04] <aiena> cyberfall: I think you cannot soup it because google intentionally keeps making obscure classes etc for that data
[21:23:11] *** Joins: esv_ (~esv@74.124.178.154)
[21:23:35] *** Quits: lavos (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 256 seconds)
[21:23:39] <cyberfall> i check that using different searches and it uses the same jsname and class names
[21:23:46] <henistein> cyberfall no, should I?
[21:23:50] <nedbat> cyberfall: google is going to work very hard to keep you from getting search data that way
[21:23:53] <aiena> ok thats good one sec
[21:23:54] <ham5urg> When do folks use nested classes?
[21:23:55] *** Joins: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[21:23:57] <cyberfall> yes henistein that what it looking for
[21:24:00] <nedbat> ham5urg: almost never
[21:24:05] <ham5urg> ok
[21:24:09] *** Quits: esv (~esv@74.124.178.154) (Ping timeout: 256 seconds)
[21:24:16] <cyberfall> darn.. nedbat
[21:24:17] *** Quits: zamanf (~readyorno@2a02:587:3234:b500:41bd:f79b:9e73:3ef2) (Ping timeout: 240 seconds)
[21:24:23] *** Joins: frmlof (~frmlof@70.243.238.191)
[21:24:43] <henistein> now it says: import _tkinter # If this fails your Python may not be configured for Tk
[21:24:43] *** Quits: molten (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 256 seconds)
[21:25:09] <jinsun> henistein: if it is your distro python, it might have separated out tkinter as separate package like debian does python-tk or python3-tk
[21:25:12] <cyberfall> i thought of using yfinance api but it say you cant us it..
[21:25:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[21:25:34] <cyberfall> did you pip install tkinter
[21:26:04] <jinsun> tkinter is stdlib so shouldn't be pip installed
[21:26:07] <cyberfall> the license for yfinance for what i want to do would go against it
[21:26:40] *** Joins: molten (~molt@178-222-245-206.static.isp.telekom.rs)
[21:27:07] <cyberfall> odd my rasberry pi i had to pip install it
[21:27:26] *** Joins: fikran (~fikran@user/fikran)
[21:28:29] <cyberfall> what i wanted to do is make a stock sim type game using live feeds not some math abstract numbers..
[21:29:22] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[21:29:24] <cyberfall> but didnt want the site to think it getting doss an i would put a pull delay in so it only updates once in a while
[21:29:48] <jinsun> hmm, can't say about raspberry-pi you can probably pip install it in some weird environments, or maybe you installed with apt and are misremembering
[21:29:49] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 256 seconds)
[21:30:36] *** Macuser- is now known as Macuser
[21:31:22] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[21:31:31] *** Quits: bkhl (~bkhl@user/bkhl) (Quit: ZNC - https://znc.in)
[21:31:31] *** Quits: molten (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 256 seconds)
[21:32:11] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[21:32:35] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:33:13] <cyberfall> pip does better as it will setup your python setting an your ready to go
[21:33:36] <cyberfall> apt-get may work but it maybe a old version your using
[21:33:36] *** Joins: juliaEnv (~juliaEnv@ip-86-49-248-177.net.upcbroadband.cz)
[21:33:39] *** Joins: zmt00 (~zmt00@user/zmt00)
[21:34:26] *** Quits: bluedust (~bluedust@117.207.235.4) (Remote host closed the connection)
[21:34:30] <jinsun> except that pypi.org doesn't have tkinter, so pip inistall tkinter won't work normally
[21:35:10] <cyberfall> you use pip install tk
[21:35:23] <cyberfall> sorry
[21:36:52] <jinsun> the tk on pypi doesn't seem related to tkinter, the normal way is really not using pip, you get tkinter with python or from your os package manager
[21:38:20] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[21:38:35] <cyberfall> odd https://www.tutorialspoint.com/how-to-install-tkinter-in-python
[21:38:42] <cyberfall> that what i used to get it
[21:38:43] *** Quits: markw_dev (~mark@71-135-3-182.lightspeed.rlghnc.sbcglobal.net) (Ping timeout: 256 seconds)
[21:42:17] *** Joins: programmar (~whatever@118.69.128.37)
[21:42:29] *** Quits: zmt00 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[21:42:42] <programmar> say i wanna check the ipv4 on interface wlan0 or etho0, how can i do that through python without using any external package ?
[21:43:23] <programmar> using subprocess is cool but that is only my last resort, because i am too lazy to split string and order them correctly :P
[21:44:02] *** Quits: menace (~someone@ppp-93-104-169-2.dynamic.mnet-online.de) (Ping timeout: 240 seconds)
[21:44:17] <BtbN> There is no platform independent way to do that
[21:44:52] <programmar> well considering my program is for linux
[21:45:05] <programmar> then i guess it is with subprocess ? but again, only the last option
[21:45:16] <aiena> cyberfall: I did some digging I think javascript is dynamically populating this data so web scraping alone is not working.
[21:45:28] <BtbN> Or write C code that queries the native OS APIs and then passes it to Python
[21:45:37] *** Quits: jbeimler (~quassel@75.183.82.166) (Ping timeout: 240 seconds)
[21:45:37] *** Joins: thiras (~thiras@user/thiras)
[21:45:39] <programmar> oh no, subprocess then
[21:45:44] *** Joins: Betal (~Betal@user/betal)
[21:46:04] *** Quits: FNAShinobi (~FNAShinob@2601:18c:d07f:f2e9:32e8:f83a:f861:c661) (Remote host closed the connection)
[21:46:06] <aiena> cyberfall: those spans don't exists till javascript from google is run and makes them dynamically in the DOM.
[21:46:35] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:60e7:9503:5a26:9518)
[21:47:37] <jinsun> cyberfall: hmm, odd, but not too surprising, tutorialspoint is garbage, pip install tk is almost certainly wrong unless you are running in some weird environment which that article doesn't mention
[21:48:46] <leitz> subprocess for "ip addr |grep inet" is probably easier than parsing /proc/net/fib_trie
[21:49:08] *** Joins: smoke (~smoke@user/smoke)
[21:49:43] <avu> ip has -j for json output, no need to do wonky string things to get the data
[21:50:32] <aiena> programmar: yeah subprocess is not necessarily bad. I use it lots. Mainly when I want to use python to write scripts which execute little more reliably then BASH hell.
[21:50:53] <programmar> yea same
[21:51:03] <programmar> but usually that is my last resort when there is no other native way to do a certain thing in python
[21:51:03] <aiena> python is a nice glue language for stuff like this and more portable
[21:51:14] *** Joins: bkhl (~bkhl@user/bkhl)
[21:51:17] <programmar> splitting and arranging stuffs is so exhausted, if not that then regex
[21:51:18] <leitz> avu, thanks! I didn't know that.
[21:51:44] <avu> programmar: no need to do that though to get the ip, use ip -j to get the data as json
[21:52:42] *** Joins: FNAShinobi (~FNAShinob@2601:18c:d07f:f2e9:b511:48dd:fb11:f5c5)
[21:53:02] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[21:53:05] <programmar> Error: either "dev" is duplicate, or "-j" is a garbage. ?
[21:53:23] <aiena> i can't get -j to work either
[21:53:25] <programmar> avu: here is how i did it p a s eth0 -j
[21:53:34] <programmar> "ip a s eth0 -j"
[21:53:37] <avu> the -j comes directly after the ip
[21:54:05] <programmar> awh, nice
[21:54:12] <programmar> i luv json :D
[21:54:12] *** Quits: bkhl (~bkhl@user/bkhl) (Client Quit)
[21:54:15] <jinsun> psutil has some stuff for network info which might be useful (if you removed your "no external package" requirement) https://psutil.readthedocs.io/en/latest/#network
[21:55:22] *** Joins: bkhl (~bkhl@user/bkhl)
[21:56:39] *** Joins: jbeimler (~quassel@75.183.82.166)
[21:57:37] *** Quits: bkhl (~bkhl@user/bkhl) (Client Quit)
[21:58:06] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Ping timeout: 250 seconds)
[21:58:12] *** Joins: bkhl (~bkhl@user/bkhl)
[21:59:24] *** Quits: betuxy (~betuxy@p579ad46c.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[21:59:58] *** Joins: stonkey (~stonkey@user/stonkey)
[22:01:26] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[22:02:13] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::10)
[22:05:32] *** Joins: lavos (~molt@178-222-245-206.static.isp.telekom.rs)
[22:05:37] *** Joins: evocatus (~evocatus@62.182.77.224)
[22:06:24] *** Joins: autopsy (~androirc@172.58.19.190)
[22:07:12] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[22:07:32] *** Quits: jbeimler (~quassel@75.183.82.166) (Ping timeout: 240 seconds)
[22:08:11] <sn_fk_n> anyone have any experience with geodesic libraries? there's quite a few but looking for something that is pretty basic & fast
[22:08:24] <sn_fk_n> using pygeodesy right now for a project but it's pure python and a bit sluggish
[22:08:35] <Henry151> howdy #python. I am trying to follow this tutorial to set up PyRasgo, https://github.com/rasgointelligence/PyRasgo/blob/main/tutorials/PyRasgo%20Tutorial.ipynb and I am getting a 500 server error. I am not sure if I'm doing something wrong, or if it's just broken. Can someone take a look at the traceback here: https://bpa.st/K47A and/or try following the tutorial yourself and tell me if you get the same
[22:08:41] <Henry151> error, to help me figure out if it's me or if it's broken?
[22:09:29] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 256 seconds)
[22:09:38] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[22:10:05] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[22:10:13] <supakeen> Generally a 500 Internal Server Error means something is wrong on 'their' side, however it's also common for programmers to make mistakes like incorrectly checking for missing inputs or whatever. So make sure everything you're feeding it is correct :)
[22:10:19] *** Joins: jbeimler (~quassel@75.183.82.166)
[22:10:27] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-29d9-0277-7525-223b.res6.spectrum.com)
[22:10:43] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Client Quit)
[22:11:35] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[22:12:17] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[22:12:47] *** Joins: moha (uid506645@id-506645.helmsley.irccloud.com)
[22:12:56] *** Joins: djhankb (~djhankb@208.113.164.68)
[22:13:31] <Henry151> supakeen: yeah, I realize that 500 error typically would mean it's their side.. i'm not feeding it much, i was following the tutorial very precisely
[22:13:31] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Remote host closed the connection)
[22:13:34] *** Quits: henistein (~henistein@2001:8a0:fc86:4d01:433c:3ba9:6f55:421) (Quit: Client closed)
[22:13:57] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[22:13:58] <supakeen> then, take a break have a coffee, perhaps something is temporarily broken on their side and it solves itself before tomorrow :)
[22:14:21] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[22:15:03] *** Joins: jinie (~jimmy@188.114.173.150)
[22:15:06] <Henry151> perhaps... I was trying last night and getting the same
[22:15:13] *** Quits: jinie (~jimmy@188.114.173.150) (Client Quit)
[22:15:15] <supakeen> Sad times.
[22:18:15] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[22:18:26] *** Joins: ajnulo (~ajnulo@2a02:3102:4cc5:fffd:bd3:1db6:a16d:5acd)
[22:18:48] <Henry151> the tutorial is short, i am hoping to get someone to give it a shot just to confirm
[22:19:26] <autopsy> Henry151 its an incalid url open rhe module in vi abd see why its called or how it is generated to be called
[22:20:01] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[22:20:22] *** Joins: node1 (~hex@user/node1)
[22:20:29] <node1> Hi
[22:20:45] <node1> In python can we create an object in return?
[22:20:51] *** Joins: bloody (~bloody@user/bloody)
[22:21:06] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[22:21:36] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[22:21:41] <deniska> node1: if you mean whether you can do `return SomeClass()`, sure, you can
[22:21:51] <aiena> cyberfall: I remember using selenium to load the page in a real browser then getting the rendered DOM post JS at a point and then scraping that instead and
[22:22:08] <aiena> having fun
[22:22:54] <aiena> Did this for a website which used to get exchange range. But selenium was able to do more for me that time.
[22:22:59] *** earendel is now known as AmoreFS
[22:23:00] <node1> deniska, then if so then  it's mandatory to give it's return type?
[22:23:02] *** Quits: lavos (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 240 seconds)
[22:23:09] <node1> Class return type?
[22:23:15] *** Joins: lavos (~molt@178-222-245-206.static.isp.telekom.rs)
[22:24:25] *** Joins: zmt00 (~zmt00@user/zmt00)
[22:24:54] *** Joins: finster (~finster@2a01:4f8:1c1c:2be6::1)
[22:24:54] *** Joins: resistor4u (~resistor4@2601:5c2:102:33d0:9469:1b4b:66f0:b618)
[22:24:56] <deniska> node1: if you are using a type checker like mypy, then give it a corresponding return type
[22:25:09] *** Parts: finster (~finster@2a01:4f8:1c1c:2be6::1) ()
[22:25:32] <jinsun> node1: if you are using mypy strict mode then yes
[22:26:10] *** Quits: ahmed_ (~ahmed@105.238.248.116) (Quit: Leaving)
[22:26:44] <jinsun> you can leave out return types in pyright if it can infer it, and in non-strict mode of mypy too I think
[22:27:03] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 256 seconds)
[22:27:03] *** Quits: mossman93 (~quassel@user/mossman93) (Ping timeout: 256 seconds)
[22:27:56] *** Joins: molten (~molt@178-222-245-206.static.isp.telekom.rs)
[22:29:15] <jinsun> hmm though non-strict mode mypy just treats the return type as Any if you don't specify, so not a good idea to leave it
[22:29:17] *** Quits: programmar (~whatever@118.69.128.37) (Quit: Leaving)
[22:29:56] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[22:31:26] *** Joins: constxd_ (~brad@142.167.170.88)
[22:31:59] *** Quits: lavos (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 256 seconds)
[22:32:14] *** Quits: Deneb (~johnch@30.125.7.51.dyn.plus.net) (Quit: Leaving)
[22:32:24] <phy1729> It also helps the human reading the code
[22:32:26] *** Joins: lavos (~molt@178-222-245-206.static.isp.telekom.rs)
[22:32:43] *** Quits: molten (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 256 seconds)
[22:33:46] *** Quits: natewrench (~Soce1964@cpe-72-228-153-194.buffalo.res.rr.com) (Quit: Leaving)
[22:33:50] *** Joins: molten (~molt@178-222-245-206.static.isp.telekom.rs)
[22:33:52] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:1561:687a:91e0:753e)
[22:35:02] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 240 seconds)
[22:37:32] *** Quits: lavos (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 240 seconds)
[22:39:47] *** AmoreFS is now known as earendel
[22:44:09] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[22:44:27] *** Joins: smrtz (~smrtz@user/smrtz)
[22:45:06] *** Quits: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:47:13] <nedbat> seems like some checkers have a philosophy of "what can we know about the outside of the function by reading the inside" while others have "what can we check about the inside by reading the outside"
[22:47:55] *** Joins: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com)
[22:48:35] *** Lando-SpacePimp is now known as CRUNK-b0t
[22:48:38] <deniska> And both end up with your language looking kinda like java, the crab of programming languages
[22:49:58] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:e905:fc91:de4e:6e09)
[22:50:39] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[22:50:57] <jinsun> it is possible to be less verbose with good type inference, but mypy is very bad at it, and pyright is not much better
[22:51:33] <jinsun> and that covers the majority of the type checkers that people use for python
[22:51:52] *** Joins: lavos (~molt@178-222-245-206.static.isp.telekom.rs)
[22:52:12] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[22:53:17] *** Joins: fef (~thedawn@user/thedawn)
[22:53:45] *** Quits: smrtz (~smrtz@user/smrtz) (Quit: Ping timeout (120 seconds))
[22:54:38] *** Quits: greedom (~greedom@p200300de67480100dc79bc641054a9f8.dip0.t-ipconnect.de) (Remote host closed the connection)
[22:54:44] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[22:55:47] *** Quits: molten (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 256 seconds)
[22:58:32] *** Quits: lavos (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 240 seconds)
[22:59:22] *** Joins: Astara (~skraito@user/skraito)
[22:59:35] *** Quits: Astara (~skraito@user/skraito) (K-Lined)
[22:59:44] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[23:00:22] *** Joins: awmv_username_ta (~awmv@2a02:21b0:644f:c181:6081:1269:60d4:2ee0)
[23:01:04] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[23:01:51] *** Joins: califax (~califax@user/califx)
[23:02:17] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:e905:fc91:de4e:6e09) (Ping timeout: 240 seconds)
[23:02:45] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[23:03:33] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[23:05:42] *** Quits: jbeimler (~quassel@75.183.82.166) (Ping timeout: 250 seconds)
[23:05:59] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Ping timeout: 256 seconds)
[23:06:24] *** Joins: impudentUsurper (~pcc31@181.43.133.208)
[23:06:24] <impudentUsurper> PESTERCHUM:TIME>i
[23:06:24] <impudentUsurper> PESTERCHUM:TIME>i
[23:06:49] <resistor4u> i've got a short script asking for `input()` then storing in a var. can i still get the script to prompt for `input()` if i pipe it through to grep, or other bash utils? like, `python3 ~/mybin/input_asking.py | grep citation > text.txt`
[23:06:56] *** Joins: governAviation (~pcc31@c-71-56-173-75.hsd1.va.comcast.net)
[23:06:56] <governAviation> PESTERCHUM:TIME>i
[23:06:56] <governAviation> PESTERCHUM:TIME>i
[23:06:56] <impudentUsurper> PESTERCHUM:TIME>i
[23:07:24] *** Joins: Nutte35 (~Nutte@202.153.81.148)
[23:07:24] <governAviation> PESTERCHUM:TIME>i
[23:07:24] <impudentUsurper> PESTERCHUM:TIME>i
[23:07:25] *** Joins: lush (~lush@c-71-56-173-75.hsd1.va.comcast.net)
[23:07:25] <impudentUsurper> PESTERCHUM:TIME>i
[23:07:26] <governAviation> PESTERCHUM:TIME>i
[23:07:31] <grym> ...
[23:07:39] <governAviation> <c=0,128,128>GA: dont worry it isnt a botnet</c>
[23:07:41] <resistor4u> FWIW: i'm new to python and haven't fgured out doing regex from within the same script yet
[23:07:42] <ham5urg> With pypubsub a subscription always calls its function with the transmitted value (if a value is transmitted). Sometimes I do need only to know that a sendMessage('foo', a_val='abc') has been fired but not to know a_val. Can I subscribe to such event with a function(without_a_val)?
[23:07:44] <impudentUsurper> <c=161,0,0>IU: 'hi GA</c>
[23:07:57] <governAviation> <c=0,128,128>GA: notif noise kills me</c>
[23:08:00] <grym> and this is why we +r sometimes ...
[23:08:05] <impudentUsurper> <c=161,0,0>IU: 'PING!</c>
[23:08:18] <governAviation> <c=0,128,128>GA: please god someone k-line me</c>
[23:08:23] *** Quits: naranja (~orange@user/orangeboxcutter) (Quit: AFK)
[23:08:24] <governAviation> <c=0,128,128>GA: end my suffering</c>
[23:08:35] <impudentUsurper> <c=161,0,0>IU: is this 'not enjoyable</c>
[23:08:38] *** Joins: naranja (~orange@user/orangeboxcutter)
[23:08:38] <impudentUsurper> PESTERCHUM:TIME>i
[23:08:39] <governAviation> PESTERCHUM:TIME>i
[23:08:53] <governAviation> <c=0,128,128>GA: thats up for you to decide</c>
[23:08:56] <governAviation> PESTERCHUM:TIME>F01:00
[23:08:57] <grym> nedbat
[23:08:58] <governAviation> PESTERCHUM:TIME>F01:00
[23:09:11] *** ChanServ sets mode: +o supakeen
[23:09:13] <sn_fk_n> resistor4u, it should work yes
[23:09:14] *** supakeen sets mode: +b *!*@c-71-56-173-75.hsd1.va.comcast.net
[23:09:15] *** governAviation was kicked by supakeen (governAviation)
[23:09:26] <ham5urg> thanks
[23:09:28] <sn_fk_n> assuming you're putting whatever input to stdout
[23:09:40] *** Quits: Nutte35 (~Nutte@202.153.81.148) (Client Quit)
[23:09:42] <impudentUsurper> <c=161,0,0>IU: 'rip bozo</c>
[23:09:42] *** supakeen sets mode: +b *!*@181.43.133.208
[23:09:43] *** Parts: impudentUsurper (~pcc31@181.43.133.208) ()
[23:09:53] *** Joins: Nutte35 (~Nutte@202.153.81.148)
[23:10:06] <hightower2> pretty pointless episode, I fail to see the point :)
[23:10:12] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[23:10:31] *** Joins: ExpiredKebab (~sgreadly@2407:7000:a239:503:b0b1:34c8:dbe5:b46b)
[23:10:38] *** Joins: jbeimler (~quassel@75.183.82.166)
[23:10:56] *** Joins: yotsuba (~yotsuba@89-138-112-52.bb.netvision.net.il)
[23:11:08] <resistor4u> sn_fk_n: OIC, it does work, but it doens't give the prompt . it appears to just hang, then i paste the string and it proceeds
[23:11:33] <sn_fk_n> yeah because whatever the prompt you have there is also using stdout
[23:11:39] *** Joins: lavos (~molt@178-222-245-206.static.isp.telekom.rs)
[23:11:48] <sn_fk_n> so that will get piped to whatever is in the pipe too
[23:11:52] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[23:11:55] <sn_fk_n> on the other side of *
[23:12:11] <resistor4u> ahhh
[23:12:57] <sn_fk_n> resistor4u, maybe os.system() might be of interest to you?
[23:13:04] *** Quits: smoke (~smoke@user/smoke) (Quit: Leaving)
[23:13:18] *** Joins: smoke (~smoke@user/smoke)
[23:13:30] *** Quits: Nutte35 (~Nutte@202.153.81.148) (Client Quit)
[23:13:34] <resistor4u> sn_fk_n: probably, but in what way? i'm pretty new to all this
[23:13:36] *** Joins: flea_ (nosoul@gateway/vpn/protonvpn/nosoul)
[23:13:47] *** Joins: Nutte35 (~Nutte@202.153.81.148)
[23:13:48] <resistor4u> i work with R and bash fairly regularly
[23:13:57] <sn_fk_n> well i'm not sure exactly what you're doing but you can use os.system to execute commands
[23:14:05] <resistor4u> ohhh
[23:14:17] <sn_fk_n> so you don't just pipe all the stdout of your python script
[23:14:21] *** Joins: hlauk (~hlauk@176.33.97.244)
[23:14:27] <sn_fk_n> and could display a prompt e.g.
[23:14:57] *** Joins: frmlof (~frmlof@70.243.238.191)
[23:15:02] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 240 seconds)
[23:15:02] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[23:15:16] *** Joins: zyzzyxdonta (~zyzzyxdon@ip5f5aa13a.dynamic.kabel-deutschland.de)
[23:15:59] <resistor4u> i was thinking also of just wrapping it all into one .sh script
[23:16:24] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Quit: ZNC - https://znc.in)
[23:16:26] <sn_fk_n> yeah i mean that works too if you're just making some utility script
[23:16:27] *** Joins: zamanf (~readyorno@2a02:587:3234:b500:41bd:f79b:9e73:3ef2)
[23:16:36] <resistor4u> but then i started realizing i'm making this way toooo complicated
[23:17:38] *** Joins: fef (~thedawn@user/thedawn)
[23:18:02] *** Quits: zyzzyxdonta (~zyzzyxdon@ip5f5aa13a.dynamic.kabel-deutschland.de) (Client Quit)
[23:18:37] *** Quits: blurry (xbaranov@lounge.fi.muni.cz) (Quit: Ping timeout (120 seconds))
[23:19:22] <resistor4u> my goal is to make a workflow that scrapes search result hits from a university consortium library. i'm more than halfway there. the biggest issue is getting selenium to follow each results page programmatically
[23:19:34] <resistor4u> the rest is just tweaking and making more efficient lol
[23:20:11] *** Joins: humbertowoody (~humbertow@189.236.30.209)
[23:20:37] *** Joins: clydez (~clydez@109.131.46.134)
[23:20:47] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[23:20:54] <node1> deniska, hello
[23:21:02] *** Quits: Nutte35 (~Nutte@202.153.81.148) (Ping timeout: 240 seconds)
[23:21:19] *** TDT_ is now known as TDT
[23:21:31] *** Joins: ITD4004 (~ITD4004@187.61.233.248)
[23:21:45] *** Joins: Nutte35 (~Nutte@202.153.81.63)
[23:21:57] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[23:21:58] *** Quits: lush (~lush@c-71-56-173-75.hsd1.va.comcast.net) (Quit: Going offline, see ya! (www.adiirc.com))
[23:22:06] *** Quits: clydez (~clydez@109.131.46.134) (Remote host closed the connection)
[23:22:41] *** Quits: vishwin (~brioux@2001:470:1f07:302::1) (Remote host closed the connection)
[23:22:52] <taeaad> Hmm, OK so I understand what a = b == c means, but apparently there is also a == b = c?
[23:23:03] *** Joins: vishwin (~brioux@2001:470:1f07:302::1)
[23:23:25] *** Quits: mxp (~mxp@185.16.205.131) (Ping timeout: 240 seconds)
[23:23:33] <deniska> taeaad: it's a SyntaxError
[23:23:37] <deniska> node1: hi
[23:23:39] *** Joins: blurry (xbaranov@lounge.fi.muni.cz)
[23:24:37] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[23:25:02] <taeaad> deniska: Yes, you are right.
[23:25:54] *** Joins: zaquest (~notzaques@5.130.79.72)
[23:26:40] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[23:26:58] *** Joins: parv (~quass@user/parv)
[23:27:11] *** Joins: mharig (~mharig@181.188.139.229)
[23:27:22] *** Quits: zamanf (~readyorno@2a02:587:3234:b500:41bd:f79b:9e73:3ef2) (Ping timeout: 250 seconds)
[23:28:39] *** Joins: stonkey2 (~stonkey@user/stonkey)
[23:29:36] *** bedouin_ is now known as de
[23:29:45] *** Quits: smoke (~smoke@user/smoke) (Quit: Leaving)
[23:29:47] *** de is now known as megeve
[23:30:27] *** Joins: mxp (~mxp@185.16.205.131)
[23:30:32] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 240 seconds)
[23:31:01] <sn_fk_n> never used selenium
[23:31:20] <cyberfall> ok i decided to try an use yfinance for my program instead of scraping.. one problem it installing for python 2.7 not python 3+
[23:31:32] <kosh> taeaad, in general I would not write code like that, it would be better to turn it into multiples lines so there is less confusion
[23:31:38] <cyberfall> so how do i use lib for 2.7 in 3.x
[23:31:50] <sn_fk_n> cyberfall, are you
[23:31:57] <sn_fk_n> using pip?
[23:32:01] <cyberfall> yes
[23:32:15] <sn_fk_n> you might want to try `pip3 install yfinance`
[23:32:25] <cyberfall> didnt know about pip3
[23:32:28] *** Joins: jfcaron (~jfcaron@192.252.229.171)
[23:32:32] <cyberfall> figure pip was pip
[23:32:32] <sn_fk_n> it depends on your installation
[23:32:34] <kosh> cyberfall, if there is a 3.x version of that library then use that version, otherwise you can try 2to3 and failing that you can try to convert it yourself
[23:33:30] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-29d9-0277-7525-223b.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[23:35:03] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[23:35:10] *** Quits: Nixkernal (~Nixkernal@2a02:1210:2e52:8b00:39ef:4f8c:43c7:e976) (Quit: Leaving)
[23:35:10] *** Quits: autopsy (~androirc@172.58.19.190) (Ping timeout: 250 seconds)
[23:35:37] *** Quits: constxd_ (~brad@142.167.170.88) (Ping timeout: 256 seconds)
[23:35:42] *** Joins: Feriun (~Feriun@user/Feriun)
[23:36:47] *** Joins: fikran (~fikran@user/fikran)
[23:36:55] <Feriun> Hey there can anybody help me with this syntax! Chain(2.5)(2)(2)(2.5)
[23:37:15] <Feriun> What is this? Calling __init__ multipe times?
[23:37:46] <Feriun> This class sums all the inputs and returns the result
[23:38:00] <Feriun> >>> Chain(3)(1.5)(2)(3) # sum
[23:38:02] <Feriun> 9.5
[23:38:29] <Repiphany> Chain(3).__call__(1.5).__call__(2).__call__(3)
[23:39:10] *** Joins: tobybl (~tobybl@248.195.115.87.dyn.plus.net)
[23:39:25] <Feriun> Well, how's that handled in the first class?
[23:39:27] *** Quits: naranja (~orange@user/orangeboxcutter) (Remote host closed the connection)
[23:39:27] *** Quits: hlauk (~hlauk@176.33.97.244) (Quit: Leaving)
[23:39:43] *** Joins: naranja (~orange@user/orangeboxcutter)
[23:39:52] <Feriun> It also does this! Chain(64) == 64 >> True
[23:40:05] <Repiphany> You're the one who presumably has the source code to be able to look at how Chain is defined
[23:40:17] <Repiphany> Chain.__eq__ for that one
[23:40:22] <Feriun> I don't have the source!
[23:40:41] *** Joins: peterandre (peterandre@2605:6400:c847:1524::4251)
[23:41:01] <Repiphany> I'm not sure what you expect to be told then, that can be done by defining __call__ and __eq__ appropriately
[23:41:20] *** Joins: bitdex_ (~bitdex@gateway/tor-sasl/bitdex)
[23:41:28] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[23:41:29] <Feriun> Repiphany: Thanks! So that's the dunder methods magic...
[23:43:16] *** Joins: audiobirb (~audio@user/audio)
[23:43:28] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[23:44:10] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[23:44:13] *** Quits: flea_ (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 240 seconds)
[23:44:45] *** Joins: VaniaPy (~VaniaPy@46.12.137.214.dsl.dyn.forthnet.gr)
[23:45:02] *** Quits: kdc (~kdc@196.211.197.178) (Quit: Leaving)
[23:45:16] *** Joins: frmlof (~frmlof@70.243.238.191)
[23:46:37] *** litharge sets mode: -b *!*@181.43.133.208
[23:47:11] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[23:48:00] *** Quits: Feriun (~Feriun@user/Feriun) (Quit: WeeChat 3.3)
[23:48:56] *** Joins: stonkey (~stonkey@user/stonkey)
[23:48:57] *** Joins: Feriun (~Feriun@user/Feriun)
[23:49:02] *** Quits: frmlof (~frmlof@70.243.238.191) (Client Quit)
[23:49:08] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[23:49:14] *** Joins: XV8 (~XV8@2601:5cb:c001:50:74f2:29a5:c6ca:a36e)
[23:49:15] *** Quits: Feriun (~Feriun@user/Feriun) (Client Quit)
[23:49:30] *** Joins: frmlof (~frmlof@70.243.238.191)
[23:50:31] *** Joins: oscurochu (~oscurochu@37.120.215.100)
[23:50:55] *** Quits: stonkey2 (~stonkey@user/stonkey) (Ping timeout: 256 seconds)
[23:51:05] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (Remote host closed the connection)
[23:52:26] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[23:52:59] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[23:53:26] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[23:53:42] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[23:55:35] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[23:55:48] *** Joins: matsaman (~matsaman@user/matsaman)
[23:56:19] *** Joins: frmlof (~frmlof@70.243.238.191)
[23:56:37] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 240 seconds)
[23:56:46] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[23:57:32] *** Quits: awmv_username_ta (~awmv@2a02:21b0:644f:c181:6081:1269:60d4:2ee0) (Ping timeout: 240 seconds)
[23:57:57] *** Joins: Guest92 (~Guest92@HSI-KBW-095-208-248-212.hsi5.kabel-badenwuerttemberg.de)
[23:58:12] *** Parts: Guest92 (~Guest92@HSI-KBW-095-208-248-212.hsi5.kabel-badenwuerttemberg.de) ()
[23:58:17] *** Quits: blurry (xbaranov@lounge.fi.muni.cz) (Ping timeout: 256 seconds)
[23:58:27] *** Joins: skapata (~Skapata@user/skapata)
[23:59:29] *** Joins: djapo (~archangel@user/djapo)
[23:59:36] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[23:59:44] *** Joins: teut (~teut@2401:4900:1c68:6b85:8d9c:5c88:1fa7:34f3)
