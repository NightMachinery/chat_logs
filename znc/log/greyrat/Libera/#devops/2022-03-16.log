[00:32:10] *** Quits: mauz (~mauz@2a01:e0a:994:7ed0:d42e:54ce:ab14:af5e) (Quit: Leaving...)
[00:53:02] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[01:46:37] *** Quits: Brainium (~brainium@user/brainium) (Quit: Konversation terminated!)
[01:50:41] *** Quits: rpthms (~rpthms@user/rpthms) (Remote host closed the connection)
[01:53:24] *** Quits: uvolmer (~uvolmer@2001-4dd0-212c-82-e069-f5f7-ab7b-8443.ipv6dyn.netcologne.de) (Ping timeout: 240 seconds)
[01:58:26] *** Joins: rpthms (~rpthms@user/rpthms)
[01:58:50] *** Quits: k8yun (~k8yun@user/k8yun) (Ping timeout: 250 seconds)
[02:15:37] *** Joins: mauz (~mauz@2a01:e0a:994:7ed0:d42e:54ce:ab14:af5e)
[02:18:48] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[02:26:54] *** Joins: pmercado_ (~pmercado@186.107.37.71)
[02:27:01] *** Quits: pmercado (~pmercado@186.107.61.173) (Ping timeout: 256 seconds)
[02:39:48] <ash_worksi> how do you manage database passwords?
[02:39:52] <ash_worksi> (for production)
[02:40:20] <ash_worksi> I mean, not generally, I mean how do *you* do it.
[02:40:41] <rawtaz> .env files
[02:40:54] <rawtaz> my infra is not those huge ones though
[02:41:44] * rawtaz &
[02:42:51] <ash_worksi> hmmm
[02:43:13] <ash_worksi> so, you deploy whatever and then login to the server and write an env file?
[02:48:43] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[03:01:20] *** Joins: Brainium (~brainium@user/brainium)
[03:02:13] *** Quits: pmercado_ (~pmercado@186.107.37.71) (Ping timeout: 240 seconds)
[03:10:05] <slaughter> Personally I hate .env files, I have a vendetta against them. 
[03:10:09] <slaughter> Also static servers
[03:11:30] <slaughter> So the way I do it is to utilize a secrets manager (AWS SSM, Doppler, Vault, a password manager with a CLI tool such as Bitwarden, etc). Secrets are loaded into the env at runtime via that tool. 
[03:12:04] <slaughter> And/or via API calls during runtime, depending.
[03:20:03] *** Quits: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au) (Remote host closed the connection)
[04:12:21] *** Joins: k8yun (~k8yun@user/k8yun)
[04:23:05] *** Quits: mauz (~mauz@2a01:e0a:994:7ed0:d42e:54ce:ab14:af5e) (Quit: Leaving...)
[04:46:01] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:47:36] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:54:15] *** Quits: Brainium (~brainium@user/brainium) (Quit: Konversation terminated!)
[05:22:48] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[06:39:50] *** Joins: Blackpajamas (~Blackpaja@gateway/vpn/pia/blackpajamas)
[06:46:39] *** Quits: Blackpajamas (~Blackpaja@gateway/vpn/pia/blackpajamas) (Quit: Leaving)
[07:05:31] *** Joins: falcorn (~falcorn@159.196.168.187)
[08:09:45] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[08:22:00] *** Joins: k8yun (~k8yun@user/k8yun)
[08:59:37] *** Quits: falcorn (~falcorn@159.196.168.187) (Quit: Leaving)
[08:59:56] *** Joins: mortymcfly (~mortymcfl@159.196.168.187)
[09:36:15] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[09:42:12] *** Quits: mortymcfly (~mortymcfl@159.196.168.187) (Ping timeout: 240 seconds)
[12:14:51] *** Joins: uvolmer (~uvolmer@2001-4dd0-212c-82-e069-f5f7-ab7b-8443.ipv6dyn.netcologne.de)
[12:15:53] *** Quits: toulene (~toulene@user/toulene) (Remote host closed the connection)
[13:37:06] <rawtaz> 50
[15:45:15] *** Joins: pmercado_ (~pmercado@186.107.37.71)
[15:47:25] *** pmercado_ is now known as pmercado
[16:55:38] *** Joins: euphoricallysane (~quatro@user/euphoricallysane)
[16:56:17] *** Quits: euphoricallysane (~quatro@user/euphoricallysane) (Remote host closed the connection)
[18:16:00] *** Joins: euphoricallysane (~quatro@user/euphoricallysane)
[18:40:41] *** Quits: uvolmer (~uvolmer@2001-4dd0-212c-82-e069-f5f7-ab7b-8443.ipv6dyn.netcologne.de) (Ping timeout: 252 seconds)
[18:49:25] <slaughter> 42
[19:23:36] *** Joins: Brainium (~brainium@user/brainium)
[20:10:02] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[20:53:27] *** Joins: uvolmer (~uvolmer@2001-4dd0-212c-82-e069-f5f7-ab7b-8443.ipv6dyn.netcologne.de)
[21:05:05] <ash_worksi> slaughter: ...
[21:05:12] <ash_worksi> slaughter: I use docker secrets
[21:06:00] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[21:06:02] <ash_worksi> but... I mean, I was thinking about this yesterday and the company is not big enough for like a really elaborate canary system, but it would be nice if there were some checks in place to help idiot proof deployment
[21:06:51] <ash_worksi> and one thing I was trying to think of is just external connections. Perhaps a test that can just run `nc` or `psql` in CI to check deps
[21:07:42] <ash_worksi> anyway; the point is, I'd like to try to forbid "you tried to deploy without a secret for that user you just made on the database"
[21:08:00] <ash_worksi> which, I am learning, for databases is really difficult
[21:39:06] *** Quits: dslegends (~dslegends@user/dslegends) (Quit: ZNC 1.8.2 - https://znc.in)
[21:45:56] *** Joins: dslegends (~dslegends@user/dslegends)
[22:48:45] *** Quits: ash_worksi (~ash_m@user/ash-m/x-3292451) (Ping timeout: 256 seconds)
[22:55:40] *** Joins: k8yun (~k8yun@user/k8yun)
[23:03:22] <slaughter> [10:37:42 AM]  <ash_worksi> anyway; the point is, I'd like to try to forbid "you tried to deploy without a secret for that user you just made on the database" >  not sure I follow on this. Talking something like a service "user" account and accompanying password?
[23:03:26] <slaughter> Oh they're not here
[23:24:35] <rawtaz> too late, too desperate :-)
