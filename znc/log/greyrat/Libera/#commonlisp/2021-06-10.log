[00:05:20] *** Joins: v88m (~Xiro@109.252.61.50)
[00:13:19] <Shinmera> Josh_2: No, just use update and pass the media argument (needs latest ql though)
[00:13:39] <Shinmera> Josh_2: update-with-media has been deprecated for years
[00:35:12] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 244 seconds)
[00:36:40] <Josh_2> Shinmera: Okay thanks :) 
[00:37:07] <Shinmera> the new update argument also allows posting four pictures, and very large gifs or videos.
[00:37:32] *** Quits: Krystof (~user@81.174.155.115) (Ping timeout: 264 seconds)
[00:38:22] *** Joins: srhm (~ascii@user/srhm)
[00:39:43] <Josh_2> Okay sweet, I have a gif of 2.8mb, that should be alright?
[00:39:53] <Shinmera> iirc gif limits are 15MB.
[00:40:30] <Josh_2> okay very cool
[00:41:02] <Josh_2> I just change d ..update-with-media <text> <file> to update <text> :media <file>
[00:42:55] *** Quits: selwyn_ (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[00:47:49] *** Joins: Krystof (~user@81.174.155.115)
[00:55:36] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-221.dsl.bell.ca)
[01:13:32] *** Joins: selwyn (~selwyn@user/selwyn)
[01:15:46] *** Quits: gty (~Thunderbi@43.252.113.34) (Quit: gty)
[01:20:40] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 244 seconds)
[02:00:23] *** Quits: ivche (~user@89.205.100.51) (Ping timeout: 268 seconds)
[02:29:25] *** Joins: ivche (~user@89.205.100.51)
[02:31:48] *** Quits: pve_ (~pve@188-67-245-173.bb.dnainternet.fi) (Quit: leaving)
[02:34:32] *** Joins: abraham (~abraham@173.239.198.148)
[02:35:18] *** Quits: ivche (~user@89.205.100.51) (Read error: Connection reset by peer)
[02:37:28] *** Joins: MetaYan (~MetaYan@c-7b5d235c.07-84-7462671.bbcust.telenor.se)
[02:39:27] *** Joins: ivche (~user@89.205.100.51)
[03:08:35] *** Quits: mariari (~mariari@user/mariari) (Ping timeout: 252 seconds)
[03:12:13] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[03:12:21] *** Quits: ivche (~user@89.205.100.51) (Ping timeout: 252 seconds)
[03:12:55] *** Joins: srhm (~ascii@user/srhm)
[03:16:03] *** Quits: frgo (~frgo@p200300deef27d7002d80b869b491859c.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:16:31] *** Joins: frgo (~frgo@p200300deef27d7002d80b869b491859c.dip0.t-ipconnect.de)
[03:34:21] *** Joins: yewscion (~yewscion@2601:547:a01:2900::7467)
[03:37:31] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[04:00:28] *** Joins: mariari (~mariari@user/mariari)
[04:44:16] *** Joins: aleamb (~aleamb@81.61.187.171.dyn.user.ono.com)
[05:14:41] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[05:17:18] *** Quits: random-nick (~random-ni@87.116.165.220) (Ping timeout: 244 seconds)
[05:18:22] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-221.dsl.bell.ca) (Remote host closed the connection)
[05:25:44] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 268 seconds)
[05:51:38] *** Joins: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com)
[06:11:28] *** Quits: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com) (Quit: Exeunt)
[06:12:23] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[06:31:17] *** Joins: enpa (~user@2600:1700:23b0:5da0::3b)
[06:39:54] *** Quits: derelict (~winter@2603-6011-f901-9e5b-78b5-8b2f-cdb2-4171.res6.spectrum.com) (Ping timeout: 264 seconds)
[06:58:26] *** Joins: derelict (~winter@2603-6011-f901-9e5b-78b5-8b2f-cdb2-4171.res6.spectrum.com)
[07:00:45] *** Joins: akoana (~ah@user/akoana)
[07:07:35] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[07:15:49] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 252 seconds)
[07:21:48] *** Joins: knusbaum (~kjn@2601:240:8480:9990:8cc5:dcc7:738f:6708)
[07:25:59] *** Joins: dsk (~dsk@user/dsk)
[07:28:11] *** Quits: akoana (~ah@user/akoana) (Ping timeout: 252 seconds)
[07:30:17] *** Joins: akoana (~ah@user/akoana)
[07:31:49] *** Quits: knusbaum (~kjn@2601:240:8480:9990:8cc5:dcc7:738f:6708) (Remote host closed the connection)
[07:35:35] *** Quits: derelict (~winter@2603-6011-f901-9e5b-78b5-8b2f-cdb2-4171.res6.spectrum.com) (Quit: WeeChat 3.1)
[07:40:15] <beach> Good morning everyone! 
[07:42:41] <Josh_2> Mornin' beach 
[07:44:41] <dieggsy> allegro says "forking with multiple OS threads is dangerous"
[07:44:55] *** Joins: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net)
[07:45:27] <moon-child> forking is dangerous.  Full stop.
[07:46:22] <dieggsy> huh
[07:46:33] <dieggsy> i just want to spawn a lisp that does some stuff
[07:46:43] <dieggsy> without affecting the calling environment
[07:47:09] <dieggsy> since "does some stuff" compiles a bunch of things
[07:54:10] <moon-child> that's fine.  But why not just spawn a separate process?
[07:54:25] <moon-child> forking is only useful if you want to do weird copy-on-write things
[07:54:31] <moon-child> which you probably (?) don't
[07:55:43] *** Joins: zacts_ (~zak@user/zacts)
[07:55:52] *** Quits: zacts_ (~zak@user/zacts) (Client Quit)
[07:56:54] <dieggsy> moon-child: right. errr, what would get the best way to do that?
[07:58:11] <dieggsy> or, is it possible to run a lisp function defined in the current environment in a separate process
[07:59:35] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[08:00:16] <dieggsy> we basically have some legacy build script written in bash and lisp, and i thought "why not just do this in only lisp", but then was like "oh wait because it compiles and loads a bunch of stuff", so I'm trying to... both integrate the code but also separate it from the current environment when it runs ? if that makes any sense at all
[08:00:22] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 265 seconds)
[08:00:49] *** Lord_of_Life_ is now known as Lord_of_Life
[08:06:41] *** Quits: taiju (~taiju@M014013236064.v4.enabler.ne.jp) (Ping timeout: 252 seconds)
[08:06:51] *** Joins: taiju (~taiju@105.125.148.210.rev.vmobile.jp)
[08:11:42] *** Quits: yewscion (~yewscion@2601:547:a01:2900::7467) (Ping timeout: 264 seconds)
[08:13:48] *** Quits: taiju (~taiju@105.125.148.210.rev.vmobile.jp) (Read error: Connection reset by peer)
[08:15:36] *** Joins: taiju (~taiju@240b:253:ec40:2400:c852:9b6:fdd4:de50)
[08:21:42] <dieggsy> oh, process-run-function, maybe?
[08:23:40] *** Joins: karlosz (~karlosz@router.cloyne.org)
[08:32:45] *** Quits: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[08:41:04] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[08:46:16] *** Quits: danieli (~danieli@user/danieli) (Quit: Ping timeout (120 seconds))
[08:46:35] *** Joins: danieli (~danieli@user/danieli)
[08:46:41] <ludston> dieggsy: https://lispcookbook.github.io/cl-cookbook/os.html
[08:46:42] *** Quits: trokotech (~user@237.red-81-40-102.staticip.rima-tde.net) (Remote host closed the connection)
[08:47:17] *** terpri is now known as robin
[08:47:24] *** Joins: trokotech (~user@237.red-81-40-102.staticip.rima-tde.net)
[08:49:08] *** Joins: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net)
[08:49:19] <dieggsy> ludston: thanks, though that largely concerns launching external programs as a process, and I want to run some lisp as a process
[08:49:20] <dieggsy> it looks like process-run-function is covering my use case so far
[08:49:44] <ludston> If for whatever reason you need to sandbox some function in another process, you probably just spin up a new lisp instance with --load "(my lisp code here)"
[08:50:45] <ludston> Otherwise you just want to use a new thread?
[08:52:14] <dieggsy> ....i believe process-run-function is spawning a new thread, but i don't completely understand allegro's multiprocessing documentation
[08:53:14] <ludston> Use bordeaux-threads. It's the defacto standard library that most of us for multithreading
[08:54:09] <ludston> https://quickref.common-lisp.net/bordeaux-threads.html
[08:54:48] <dieggsy> I've used Bordeaux threads in the past, but unfortunately I'm trying to stick with what's built in because of uhhh
[08:55:02] <dieggsy> a pretty rigid old codebase at work i guess
[08:55:46] <ludston> I'm sorry that you feel that way haha
[08:55:51] <dieggsy> though come to think of it i think some parts of the code do use bordeaux threads so maybe i can just sneak that into this bit as well
[08:55:59] <dieggsy> lol, same
[08:58:45] <ludston> I work on a really horrible, old code-base (not lisp) too. In my experience it is better not to get stuck in the "not invented here" mindset and use the library/make the sweeping change that you are afraid to make.
[09:00:28] <ludston> The worst thing that can happen is your experienced code-reviewer says no and then you learn why.
[09:01:04] <dieggsy> ludston: that's.... probably good advice, thanks
[09:01:39] <dieggsy> well, the worst that could happen is "why" is just "that's not how we do it" and well ok you're the boss heh
[09:02:05] <ludston> If that was the culture of my workplace, I would find another job.
[09:03:14] <ludston> That is called "cargo-culting" and is a bad place to be a junior.
[09:05:59] <dieggsy> right. hence "worst" i guess
[09:06:41] <fe[nl]ix> dieggsy: where are you working ?
[09:08:45] *** Joins: domovod (~domovod@176.196.122.197)
[09:08:55] <dieggsy> fe[nl]ix: STScI, only like a month in. (employer if you are reading this i am sincerely having a blast) jajaja
[09:11:36] <fe[nl]ix> how old is the codebase ?
[09:11:52] *** Parts: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) ()
[09:12:35] <dieggsy> old
[09:13:06] <ludston> For reference, mine is 20 years
[09:13:32] <dieggsy> ~30
[09:17:10] *** Quits: akanouras (~akanouras@user/akanouras) (Remote host closed the connection)
[09:17:10] *** Quits: katco (~katco@2001:470:69fc:105::2b8) (Remote host closed the connection)
[09:17:10] *** Quits: loke[m] (~loke@2001:470:69fc:105::237) (Remote host closed the connection)
[09:17:11] *** Quits: dieggsy (~dieggsy@2001:470:69fc:105::91f) (Write error: Connection reset by peer)
[09:17:11] *** Quits: Gnuxie (~gnuxie@user/gnuxie) (Read error: Connection reset by peer)
[09:17:49] *** Joins: loke[m] (~loke@2001:470:69fc:105::237)
[09:18:02] *** Joins: dieggsy (~dieggsy@pool-108-51-101-15.washdc.fios.verizon.net)
[09:18:46] *** Quits: dieggsy (~dieggsy@pool-108-51-101-15.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[09:19:04] *** Joins: katco (~katco@2001:470:69fc:105::2b8)
[09:19:04] *** Joins: dieggsy1 (~dieggsy@2001:470:69fc:105::91f)
[09:19:05] *** Joins: akanouras (~akanouras@user/akanouras)
[09:19:05] *** Joins: Gnuxie (~gnuxie@user/gnuxie)
[09:24:46] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[09:25:11] *** Quits: Bike (~Glossina@71.69.170.70) (Quit: Lost terminal)
[09:25:53] <fe[nl]ix> oh, it's Allegro
[09:26:59] *** Quits: karlosz (~karlosz@router.cloyne.org) (Quit: karlosz)
[09:30:46] *** Parts: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) ()
[09:32:47] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[09:35:17] *** Quits: fengshaun (~fengshaun@68.69.214.210) (Ping timeout: 272 seconds)
[09:35:26] *** Joins: fengshaun_ (~fengshaun@68.69.214.210)
[09:48:13] *** Joins: wanagnuj (~wanagnuj@101.95.97.158)
[10:07:35] *** Quits: ludston (~patience@203.129.29.40) (Ping timeout: 272 seconds)
[10:20:28] *** Joins: Nilby (~Nilby@2601:603:1481:30a0:82fa:5bff:fe66:4b49)
[10:24:26] *** Quits: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net) (Quit: Textual IRC Client: www.textualapp.com)
[10:39:36] <hexology> what would cause the error `Component :CL-BASE64 not found, required by #<SYSTEM "hunchentoot">` when running `(asdf:load-system "hunchentoot")` under qlot+roswell?
[10:40:28] <hexology> example: qlot exec ros run --eval '(asdf:load-system "hunchentoot")'
[10:41:49] <hexology> i set `ros use sbcl-bin/2.1.4`
[10:42:24] <hexology> and the qlfile has `ql hunchentoot 2021-04-11` and `ql chunga 2021-04-11` (wasn't sure about the right dates to use)
[10:42:34] <beach> It means that there is a system named cl-base64 that you have not installed. 
[10:43:21] <hexology> ah, like base 64 encoding... i was thinking "64 bit", like an operating system
[10:43:39] <hexology> silly me, thank you
[10:43:44] <beach> Sure.
[10:44:29] *** Joins: shka (~herr@109.231.62.239)
[10:45:19] <hexology> am i misusing qlot? it looks like it's not installing dependencies when i run `qlot install`
[10:46:55] <hexology> ah, i need the `-S .` option with roswell
[10:48:59] *** Joins: karlosz (~karlosz@router.cloyne.org)
[10:53:05] *** Quits: raeda__ (~raeda@72.49.219.33) (Quit: Leaving)
[10:56:46] <hexology> actually, i'm not sure that was it
[10:57:03] <hexology> i must be doing something wrong that's very simple, i have read all the qlot and roswell docs several times
[11:08:28] *** Joins: Duuqnd (~Duuqnd_@185.201.174.79)
[11:09:08] <hexology> hm, i guess i had to run `qlot update`, i think i had an old qlfile
[11:09:11] <hexology> qlfile.lock *
[11:10:30] <hexology> beautiful, it's working now
[11:22:02] *** Joins: pve (~pve@188-67-141-226.bb.dnainternet.fi)
[11:24:27] *** Quits: abraham (~abraham@173.239.198.148) (Quit: Textual IRC Client: www.textualapp.com)
[11:33:45] *** Joins: knusbaum (~kjn@2601:240:8480:9990:650d:93d1:26c0:8c87)
[11:43:49] *** Quits: knusbaum (~kjn@2601:240:8480:9990:650d:93d1:26c0:8c87) (Remote host closed the connection)
[11:50:54] *** Joins: Cymew (~ante@c-b985225c.023-1144-7570702.bbcust.telenor.se)
[11:54:55] *** Joins: selwyn (~selwyn@user/selwyn)
[11:57:23] *** Joins: cjb (~cjb@user/cjb)
[12:02:53] *** Quits: cjb (~cjb@user/cjb) ()
[12:05:33] *** Joins: cjb (~cjb@user/cjb)
[12:12:50] *** Joins: ludston (~patience@203.129.29.40)
[12:20:26] *** Quits: cjb (~cjb@user/cjb) ()
[12:29:57] *** Joins: X-Scale (~ARM@42.125.108.93.rev.vodafone.pt)
[12:37:27] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:37:35] *** Joins: cranium (~cranium@user/cranium)
[12:40:19] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 252 seconds)
[12:45:55] *** Parts: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) ()
[12:47:52] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[12:51:14] *** Quits: aleamb (~aleamb@81.61.187.171.dyn.user.ono.com) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[13:14:21] *** Joins: Oladon (~olad@98.43.81.226)
[13:26:10] *** Quits: selwyn (~selwyn@user/selwyn) (Quit: Leaving)
[13:28:47] *** Quits: karlosz (~karlosz@router.cloyne.org) (Quit: karlosz)
[13:29:24] *** Joins: karlosz (~karlosz@router.cloyne.org)
[13:42:54] *** Quits: taiju (~taiju@240b:253:ec40:2400:c852:9b6:fdd4:de50) (Ping timeout: 264 seconds)
[13:54:30] *** Joins: taiju (~taiju@240b:253:ec40:2400:c852:9b6:fdd4:de50)
[14:05:35] *** Quits: domovod (~domovod@176.196.122.197) (Quit: WeeChat 3.1)
[14:08:24] *** Quits: White_Flame (~quassel@user/white-flame/x-6930243) (Remote host closed the connection)
[14:09:38] *** Joins: White_Flame (~quassel@user/white-flame/x-6930243)
[14:14:23] *** Quits: yitzi (~yitzi@173-27-106-188.client.mchsi.com) (Quit: Leaving)
[14:27:30] *** Parts: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) ()
[14:30:11] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[14:32:00] *** Quits: karlosz (~karlosz@router.cloyne.org) (Quit: karlosz)
[14:37:36] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:79e2:23fc:2a77:a70f)
[14:39:31] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[14:40:21] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[14:41:30] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Remote host closed the connection)
[14:44:28] *** Joins: selwyn (~selwyn@user/selwyn)
[14:44:53] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[14:48:50] *** Joins: tfb (~tfb@88.98.95.237)
[14:53:51] *** Joins: aleamb (~aleamb@81.61.187.171.dyn.user.ono.com)
[15:08:32] <shka> where is the default path of quicklisp local-projects on windows?
[15:14:11] <selwyn> letÂ´s find out
[15:14:52] *** Quits: azimut_ (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 252 seconds)
[15:15:13] <selwyn> for me, it is C:/Users/selwyn/quicklisp/local-projects/ on a fresh quicklisp install
[15:15:32] *** Joins: azimut (~azimut@gateway/tor-sasl/azimut)
[15:15:53] <tfb> shka: what does ql:*local-project-directories* tell you?  Because it's that
[15:16:04] *** Quits: frgo (~frgo@p200300deef27d7002d80b869b491859c.dip0.t-ipconnect.de) (Remote host closed the connection)
[15:16:31] *** Joins: frgo (~frgo@p200300deef27d70079b66b62ff096f74.dip0.t-ipconnect.de)
[15:17:13] <selwyn> though for actual development i use the portacle quicklisp installation which is itself under the msys2 home directory
[15:19:43] <selwyn> which i heartily recommend
[15:23:57] <shka> tfb: i would check, IF I WAS ON WINDOWS!
[15:23:59] <shka> :P
[15:24:06] <shka> selwyn: thanks
[15:24:16] <shka> actually i forgot about portacle
[15:25:18] *** Joins: random-nick (~random-ni@87.116.176.245)
[15:27:59] <tfb> shka: my point was, you don't need to: write a program which uses that variable.  If you need, say, to run programs in some other language to install things there, spawn them from CL
[15:35:01] *** Quits: mrcom (~mrcom@99-73-215-70.lightspeed.irvnca.sbcglobal.net) (Quit: Leaving)
[15:41:13] <selwyn> if you are deploying it is not wise to rely on or expect the existence of quicklisp though
[15:48:42] *** Joins: pok (~pok@user/pok)
[15:50:52] *** Parts: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) ()
[16:01:03] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-221.dsl.bell.ca)
[16:02:09] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[16:08:03] *** Joins: yewscion (~yewscion@2601:547:a01:2900::7467)
[16:17:34] *** Quits: yewscion (~yewscion@2601:547:a01:2900::7467) (Ping timeout: 245 seconds)
[16:31:20] *** Quits: aleamb (~aleamb@81.61.187.171.dyn.user.ono.com) (Quit: bye)
[16:32:59] *** Quits: dsk (~dsk@user/dsk) (Ping timeout: 245 seconds)
[16:37:57] <ludston> In your lisp init file, (e.g. .sblrc) it will specify the directory that quicklisp is installed in. By default this is (user-home-pathname) which on Windows uses the "HOME" environment variable.
[16:39:03] <ludston> I'm not sure what (user-home-pathname) is by default because mine is set to my msys64 home dir
[16:39:29] *** Joins: aleamb (~aleamb@81.61.187.171.dyn.user.ono.com)
[16:39:42] <Duuqnd> Isn't it supposed to be (user-homedir-pathname)?
[16:39:54] <ludston> ^ that one
[16:43:55] <ludston> If you are using lisp on Windows, I'd highly recommend using something like msys, because a lot of libraries rely on open source dll's. You can set your "Path" environment variable to point to C:\msys64\mingw64\bin and then install external dependencies with pacman
[16:44:39] <selwyn> yes
[16:45:32] <selwyn> when i start sbcl under msys64, it does indeed instead install quicklisp under the msys64 homedir
[16:46:18] <selwyn> itÂ´s best to just stick to doing everything under msys, and you also get a shell to use
[16:47:06] <ludston> If you open up "Edit the system environment variables" you can set the HOME directory so that it is always msys, even if you launch sbcl outside of msys
[16:49:48] <selwyn> :o
[16:50:05] <Duuqnd> I had no idea that was possible
[16:50:55] <Duuqnd> I'm probably not doing that myself though because my Windows computer is already messed up with like three different msys/mingw things installed somehow
[16:51:41] <splittist> My problem (on Windows) is not lisp and its idea of home (/Users/me), it's emacs and it's weird idea (:
[16:51:55] <splittist> s/it's w/its w/
[16:51:59] <ludston> emacs uses the same variable
[16:52:04] <splittist> nah
[16:52:16] <tyson2> I'm just getting started with sbcl on windows, and have it working with slime, etc. But I've decided to set up a local docker sbcl instance and use that instead.
[16:53:01] <ludston> splittist: It does :p
[16:53:02] <tyson2> My intention is to eventually deploy using docker on a vps
[16:54:29] <tyson2> that way I can avoid all the drawbacks of adding linux-workalike libraries for sbcl on windows which I have already encountered
[16:55:33] *** Joins: cage (~cage@dynamic-adsl-78-15-34-62.clienti.tiscali.it)
[16:55:55] <selwyn> i just retreat inside msys2/portacle and its fine most of the time
[16:56:09] <tyson2> seems to be good support for docker in emacs, docker-tramp etc., will test it out this weekend
[16:56:16] <selwyn> am reliably informed that deployment on windows is easier than linux
[16:56:57] <tyson2> probably right.  However I will be using prebuilt docker images for sbcl
[16:57:12] <ludston> Deployment on windows is only easier when everybody copies the same .dll into every separate install
[16:57:17] <tyson2> so it is already deployed when I create the container
[16:57:57] <tyson2> docker desktop for windows has improved a lot recently
[16:58:09] <tyson2> takes a lot of ram though
[16:58:46] <tyson2> eventually I will skip the local container and just develop directly on the docker sbcl instance on the vps
[17:00:37] <tyson2> on AWS lightsail, you can now deploy docker instances directly, without first installing linux
[17:01:31] *** Joins: Bike (~Glossina@71.69.170.70)
[17:01:31] *** ChanServ sets mode: +o Bike
[17:04:18] *** Quits: cranium (~cranium@user/cranium) (Quit: Leaving)
[17:04:56] *** Quits: Nilby (~Nilby@2601:603:1481:30a0:82fa:5bff:fe66:4b49) (Ping timeout: 244 seconds)
[17:17:59] *** Quits: wanagnuj (~wanagnuj@101.95.97.158) (Ping timeout: 245 seconds)
[17:21:41] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-221.dsl.bell.ca) (Ping timeout: 268 seconds)
[17:23:32] *** Quits: Duuqnd (~Duuqnd_@185.201.174.79) (Ping timeout: 244 seconds)
[17:26:01] *** Quits: etimmons (~etimmons@li834-247.members.linode.com) (Remote host closed the connection)
[17:28:27] *** Joins: etimmons (~etimmons@2001:470:69fc:105::5d5)
[17:36:02] *** Parts: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) ()
[17:38:59] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[17:44:38] *** Quits: Oladon (~olad@98.43.81.226) (Quit: Leaving.)
[17:50:39] *** Joins: yitzi (~yitzi@172.98.105.250)
[17:50:39] *** Parts: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) ()
[17:51:26] *** Quits: MichaelRaskin (~MichaelRa@ipb21b6221.dynamic.kabel-deutschland.de) (Ping timeout: 244 seconds)
[17:53:21] *** Joins: MichaelRaskin (~MichaelRa@ipb21b6221.dynamic.kabel-deutschland.de)
[17:53:21] *** ChanServ sets mode: +o MichaelRaskin
[18:00:19] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[18:11:14] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[18:11:23] *** Joins: derelict (~winter@2603-6011-f901-9e5b-78b5-8b2f-cdb2-4171.res6.spectrum.com)
[18:26:46] *** Quits: Cymew (~ante@c-b985225c.023-1144-7570702.bbcust.telenor.se) (Remote host closed the connection)
[18:31:58] *** Joins: dsk (~dsk@user/dsk)
[18:32:24] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[18:32:45] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:49:40] *** Quits: yitzi (~yitzi@172.98.105.250) (Remote host closed the connection)
[18:50:24] *** Parts: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) ()
[18:56:39] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 268 seconds)
[18:56:45] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[19:04:17] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Ping timeout: 244 seconds)
[19:30:05] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[19:34:21] <Josh_2> Shinmera: After saving my content to a temp file with the correct extension, I am using the :media key and tracing error, I get the following: https://plaster.tymoon.eu/view/2488#2488 sorry its a bit vague but this is out of an in use system
[19:34:47] <Shinmera> If you have ssl errors that's not my problem.
[19:35:29] <Josh_2> something borked in cl-ssl :( (hopefully not)
[19:37:11] *** Quits: derelict (~winter@2603-6011-f901-9e5b-78b5-8b2f-cdb2-4171.res6.spectrum.com) (Changing host)
[19:37:11] *** Joins: derelict (~winter@user/derelict)
[19:40:41] *** Joins: yitzi (~yitzi@173-27-106-188.client.mchsi.com)
[19:40:48] <Josh_2> Is doing a (ql:quickload :chirp-dexador) enough to swap over to the dexador backend?
[19:40:52] *** Quits: derelict (~winter@user/derelict) (Quit: WeeChat 3.1)
[19:41:11] *** Joins: derelict (~derelict@user/derelict)
[19:41:12] <Shinmera> should be.
[19:41:31] <Josh_2> Okay thanks
[19:46:12] *** Quits: taiju (~taiju@240b:253:ec40:2400:c852:9b6:fdd4:de50) (Ping timeout: 272 seconds)
[19:46:18] <Josh_2> Well idk if I got a cl-ssl error that time
[19:46:40] <Josh_2> just says :expected-type character :context :aref, cant read the rest because my terminal doesn't scroll back that far
[19:47:08] *** Joins: taiju (~taiju@240b:253:ec40:2400:c852:9b6:fdd4:de50)
[19:51:09] <Josh_2> yes now I am getting a type-error
[19:51:53] <Josh_2> https://plaster.tymoon.eu/view/2489#2489
[19:57:53] <Josh_2> Well I am going to have to go back to update-with-media even if it is deprecated
[19:57:57] <Josh_2> seems to be working
[20:05:15] <Josh_2> yes update-with-media works, meh oh well
[20:06:27] *** Joins: srhm (~ascii@user/srhm)
[20:11:10] <Gnuxie> could it be dexador's equivalent to drakma's text-content-types that needs to be set?
[20:16:31] *** Joins: knusbaum (~kjn@2601:240:8480:9990:2d1e:2bbb:a818:5727)
[20:22:38] *** Quits: Noisytoot (noisytoot@sourcehut/user/noisytoot) (Quit: ZNC 1.8.2 - https://znc.in)
[20:23:19] *** Joins: Noisytoot (noisytoot@sourcehut/user/noisytoot)
[20:23:26] *** Joins: Duuqnd (~duuqnd@89-253-114-156.customers.ownit.se)
[20:30:12] *** Quits: scymtym (~user@ip-88-153-154-183.hsi04.unitymediagroup.de) (Ping timeout: 252 seconds)
[21:21:28] *** Joins: aeth_ (~Michael@user/aeth)
[21:22:10] *** Quits: aeth (~Michael@user/aeth) (Killed (NickServ (GHOST command used by aeth_)))
[21:22:15] *** aeth_ is now known as aeth
[21:22:32] *** Quits: OlCe (~user@lfbn-nic-1-123-149.w2-15.abo.wanadoo.fr) (Ping timeout: 264 seconds)
[21:23:51] <hexology> why does quicklisp/qlot use dates instead of the :version specified in the system?
[21:24:08] <hexology> i assume this is a case of chesterton's fence, but it's quite unusual
[21:24:08] <Xach> Dates for what?s
[21:24:27] <jmercouris> well, how about the folders stored within the dist
[21:24:29] <Xach> hexology: dates for what?
[21:24:31] <hexology> Xach: i was under the impression that i can only specify a quicklisp release date in the qlot file, as opposed to a version number
[21:24:52] <Xach> hexology: I don't know about qlot. quicklisp releases are versioned with a date. there is no system involved.
[21:25:14] <Xach> The date is not processed as a date, really - it's just a convention with convenient ordering properties usually.
[21:25:14] <jmercouris> if I go to: quicklisp/dists/quicklisp/software
[21:25:17] <jmercouris> I see always dates
[21:25:22] <hexology> right, but does quicklisp itself have no facility for checking the version numbers?
[21:25:52] <hexology> pretty much every other package manager i've seen uses the version number, so i assume there's a good technical reason why quicklisp doesn't work like that
[21:26:29] <Xach> Every project is snapshotted, built, and released together. Projects are not updated individually.
[21:26:52] <Xach> Things in a quicklisp release work together.
[21:26:55] *** Joins: caret (~caret@24-116-7-78.cpe.sparklight.net)
[21:27:24] <Xach> (If they don't, they are retried until they do, with feedback loops.)
[21:30:37] <hexology> what do you mean by "retried"?
[21:31:06] <Xach> hexology: i mean if something doesn't build, i tell the author, and they try to fix it, and then everything is built again.
[21:31:20] <Xach> Repeat as needed
[21:32:55] <hexology> i see, i didn't realize manual work was being done to validate that they all build together
[21:33:19] <hexology> by comparison, npm, pypi, etc. would be "rolling release" where the author can publish a new version at any time
[21:33:20] <Xach> it's pretty automated, but there's a bit of manual work to plug the failure logs into github or other bug report systems.
[21:33:42] <Xach> there are advantages to rolling releases too - i don't mind if people don't like how quicklisp works, there are different ways to do things.
[21:34:00] <hexology> it's not that i don't like it, it's that it's very unusual for a programming language package manager
[21:34:17] <Xach> It helps that Lisp has so few libraries and so little activity! 
[21:34:21] <hexology> hah true
[21:34:21] <Xach> (not a joke!)
[21:34:49] <hexology> what if there's a bug and a developer wants to publish a quick fix? do people just have to install from git, or is it case-by-case where you might do a 2nd release?
[21:35:58] <Xach> hexology: there are a few options for the user. 1. don't update to the new dist 2. override with a local version from git or whatever. I rarely, rarely make a quick new release of everything - I've done it when slime crashed on startup, once, but fewer than 5 times in 10 years.
[21:36:12] <hexology> i see
[21:36:32] <_death> I guess it helps that a new dist is made only each month
[21:36:45] <Xach> or use ultralisp, which has a totally different dist release strategy
[21:36:59] <Xach> i don't know if it has the indelible release policy or not, but i consider that a feature too
[21:37:33] *** Quits: yitzi (~yitzi@173-27-106-188.client.mchsi.com) (Remote host closed the connection)
[21:37:49] <_death> I meant, a new release
[21:38:40] *** Joins: yitzi (~yitzi@173-27-106-188.client.mchsi.com)
[21:40:26] <hexology> so there's no "technical" reason why one couldn't make something like npm for lisp packages, it was just a design decision
[21:40:33] <hexology> i haven't used ultralisp at all, i was wondering about it
[21:41:37] *** Quits: knusbaum (~kjn@2601:240:8480:9990:2d1e:2bbb:a818:5727) (Remote host closed the connection)
[21:42:05] <hexology> based on the website, it looks like ultralisp is also versioned in "releases", but maybe those releases are automatic whenever a package is updated
[21:42:12] <hexology> so more like rolling. i'll do some reading
[21:42:31] <jmercouris> keep them doggies rolling rawhide!
[21:43:46] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 268 seconds)
[21:45:26] *** Joins: derelict (~derelict@user/derelict)
[21:51:29] <hexology> hah
[21:51:58] <hexology> Ultralisp is a quicklisp distribution, which updates every 5 minutes.
[21:52:21] <hexology> now that i understand what a "quicklisp distribution" really is, that makes a lot more sense to me
[21:53:30] *** Parts: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) ()
[21:55:29] *** Quits: v88m (~Xiro@109.252.61.50) (Ping timeout: 268 seconds)
[21:57:59] <remexre> are there some weird things with giving an ftype to a function before doing a defsetf for it?
[21:58:14] <remexre> I get: defining setf macro for FOO when (SETF FOO) was previously treated as a function
[21:59:15] <remexre> hm, no, stripping the ftype doesn't help
[22:01:27] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[22:04:26] *** Joins: zacts_ (~zak@user/zacts)
[22:08:28] *** Quits: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113) (Quit: ZNC - http://znc.in)
[22:11:37] *** Joins: Lord_Nightmare (Lord_Night@user/lord-nightmare/x-3657113)
[22:12:08] *** zacts_ is now known as zacts
[22:14:27] <Bike> remexre: what that (probably) means is that you have a (setf (foo ...) ...) form being macroexpanded before the defsetf is done
[22:14:44] <Bike> you probably want the defsetf first
[22:15:18] <Bike> i'm assuming you didn't do (declaim (ftype whatever (setf foo)))
[22:20:19] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[22:21:30] *** Quits: caret (~caret@24-116-7-78.cpe.sparklight.net) (Read error: Connection reset by peer)
[22:21:51] *** Parts: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) ()
[22:26:22] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[22:27:01] *** Quits: zacts (~zak@user/zacts) (Remote host closed the connection)
[22:27:27] *** Joins: zacts (~zak@user/zacts)
[22:39:44] *** Quits: zacts (~zak@user/zacts) (Ping timeout: 244 seconds)
[22:43:49] *** Quits: dsk (~dsk@user/dsk) (Ping timeout: 245 seconds)
[22:46:05] *** Joins: cracauer (~gizmo@koef.zs64.net)
[22:46:36] <remexre> Bike: ah, that fixed it, didn't realize I reordered the functions badly
[22:46:39] <remexre> thanks!
[22:46:44] <Bike> glad to be of assistance
[22:49:12] *** Joins: zacts (~zak@user/zacts)
[22:52:34] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-221.dsl.bell.ca)
[22:55:14] *** Quits: mason (~mason@redhat/mason) (Quit: leaving)
[23:01:58] *** Joins: mason (~mason@redhat/mason)
[23:12:18] *** Joins: v88m (~Xiro@109.252.61.50)
[23:15:37] *** Quits: enpa (~user@2600:1700:23b0:5da0::3b) (Quit: ERC (IRC client for Emacs 27.2))
