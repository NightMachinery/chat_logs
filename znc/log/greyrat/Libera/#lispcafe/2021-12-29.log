[00:00:30] <ck_> well it is not the 70s anymore but Palo Alto is still a big deal with its history, right.. that whole area in general
[00:00:35] <ck_> have you read The Cuckoo's Egg?
[00:08:12] <hayley> "But it isn't. By that logic the second test for 'b' would turn into [ab]. That is 'a' is handled already, we take the union of 'a' and the current test for 'b'. But: [ab] needs more comparisons than [b]."
[00:08:38] <hayley> gilberth: The hack I tried was to only use the union if the isum got smaller.
[00:10:14] <selwyn> ck_: i haven't
[00:10:45] <selwyn> but i do have a copy with me! someone lent it to me before covid
[00:12:15] <selwyn> i am concerned with how unliveable palo alto seems to be
[00:12:23] <selwyn> but it wouldn't matter if i spend like a year there
[00:12:55] <ck_> surely it opens certain doors, having that on your resume. can't hurt.
[00:13:10] <ck_> unliveable you mean with respect to cost?
[00:14:28] <selwyn> yes
[00:16:11] <ck_> I'm not well read up on that but whenever I look at the rent pricing (remember the Rent Zestimate?) and all that, it's like a local hyperinflation. that's why the salaries are so high, everything is scaled up by a ridiculous number in the major cities
[00:16:38] <ck_> so, if you set your slide rule to the right setting you can probably negotiate with confidence
[00:25:31] <hayley> gilberth: Is there any relation between guessing a character that appears in a loop and guessing a backwards branch is taken?
[00:28:36] * hayley considers trying to throw in weights into isum-case.
[00:31:01] *** Quits: elflng (~elflng@5.28.137.182) (Ping timeout: 240 seconds)
[00:37:14] <sham1> Well wouldn't a loop be a backwards branch in certain cases?
[00:37:44] <hayley> Right.
[00:42:23] *** hayley is now known as no-defun-allowed
[00:44:18] *** no-defun-allowed is now known as hayley
[00:44:48] * hayley made #one-more-re-nightmare and/or #one-more-re-nightmare:matrix.org 
[01:03:43] *** Joins: elflng (~elflng@5.28.137.182)
[01:34:29] <hayley> https://www.youtube.com/watch?v=CVjJ-h75kwo
[01:34:30] -ixelp- King Crimson w Greg Lake Cat Food Top Of The Pops March 1970 - YouTube
[01:39:03] <selwyn> https://www.bbc.co.uk/news/technology-59810383
[01:39:03] -ixelp- Alexa tells 10-year-old girl to touch live plug with penny - BBC News
[01:48:57] <scymtym> "Amazon said it fixed the error as soon as the company became aware of it." i wonder what the "error" looked like
[01:49:08] <scymtym> and the fix for that matter
[01:51:26] <selwyn> simply 1) open up the black box of numbers and 2) fix the numbers
[01:52:48] <moon-child> go, symbolic ai?
[01:55:40] <Alfr> "fixed"---being more subtle next time around
[01:57:07] * hayley bored, accusing Matrix developers of abstraction inversion
[01:57:21] * Gnuxie invited her 
[01:57:26] <moon-child> come to the irc side
[01:57:48] <moon-child> bonus: it will not randomly mangle your \
[01:57:50] <Gnuxie> Now I'm trying to figure out if I'm gonna get into shit for stirring the pot 
[01:57:52] <hayley> Imagine making object system on chat program, rather than the other way around
[01:57:57] <Gnuxie> i mean, that is what i'm doing 
[01:57:58] <hayley> This meme was made by Netfarm gang
[01:58:07] <hayley> This meme was made by Croquet gang
[01:58:24] <hayley> This meme was made by web gang (sadly)
[01:58:30] <moon-child> ._.
[01:59:03] <hayley> This meme was not made by Matrix gang
[01:59:16] *** Joins: notzmv (~zmv@user/notzmv)
[02:02:00] <selwyn> return to irc
[02:02:34] <moon-child> hayley: web is not so 'real-time' though
[02:03:59] <hayley> moon-child: Things on the web sometimes are though.
[02:04:35] <moon-child> sure, but if we consider the web in its pure form to be a network of hyperlinked documents, then the real-time things are just applications which happened to be served on the web
[02:04:56] <moon-child> if we instead consider the web an application substrate, then you can run real-time things on it, but as an application substrate it's not particularly interesting
[02:05:04] <hayley> Sure. But the joke about Netfarm, Croquet and the web is that they are used as meta-media or an application substrate, yes.
[02:06:27] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[02:07:15] <gilberth> hayley: Sure there is, as the backwards jump guess is the very same bet: The bet on staying in a loop is more likely than leaving it.
[02:08:08] <hayley> I guess I'll take a look at using ISUM-CASE then. /me just needs to remember that any good-looking benchmarks were probably just getting lucky with branch ordering, and this should generally work better.
[02:08:40] <hayley> Also I made #one-more-re-nightmare so that I don't have to look through #lispcafe logs so much. But I understand you live in #lispcafe. 
[02:11:32] <gilberth> Yes, and my poor client does not support to join more than one channel.
[02:12:04] <moon-child> why not simply run multiple clients?
[02:12:06] <moon-child> :)
[02:12:29] <selwyn> it doesn't sound like a very good client tbh
[02:12:37] <gilberth> moon-child: Won't work unless I have a nick for each channel.
[02:13:02] <moon-child> I have seen a 'gilberth_' fellow hanging about from time to time
[02:13:13] <gilberth> selwyn: It's a DIY client.
[02:13:17] <moon-child> and, can use a proxy such as znc
[02:13:36] <gilberth> moon-child: How many underscores should I add?
[02:14:24] <moon-child> as many as the irc protocol permits
[02:15:19] <White_Flame> 500+? ;)
[02:15:29] <moon-child> spec only mandates 9.  But looks like libera supports up to 16
[02:15:31] <gilberth> That would be one underscore.
[02:15:45] <gilberth> Nicknames are limited to nine characters as per the RFC.
[02:17:04] <gilberth> Nah, the real reason I didn't implement multi-channel support is, that I have not come up with how the UI for that should look like.
[02:17:24] <moon-child> excuses, excuses
[02:24:51] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[02:30:16] * hayley is taught what a CRDT is and what the join operator does. "But I have an operation-based CRDT, not a state-based CRDT!" "Oh, never mind."
[02:31:21] <hayley> Kildall's algorithm also uses a join-semilattice FWIW.
[02:33:49] *** Quits: Inline (~Inline@2a02:908:1252:7a80::4f) (Ping timeout: 240 seconds)
[02:34:55] <hayley> https://www.youtube.com/watch?v=15oZJh3jlm4
[02:34:56] -ixelp- [YTP] Michael Rosen's Murderous Train Trip To Hell - YouTube
[02:40:43] <selwyn> kill all algorithm
[02:40:56] <hayley> I have made this joke before.
[02:41:01] <hayley> https://twitter.com/nodefunallowed/status/1469426025943617538
[02:47:44] <selwyn> what's the outlook for jwst? is there much left to fuck up?
[02:53:09] <Gnuxie> yes, they should have made another telescope just in case
[02:57:39] *** Joins: pjb (~pjb@user/pjb)
[03:08:22] <hayley> https://www.youtube.com/watch?v=l6jziWb7afw
[03:08:23] -ixelp- The Romance Of The Telescope (2003 Digital Remaster) - YouTube
[03:11:57] <hayley> gilberth: FWIW, isum-case doesn't handle negative isums. But I guess DERIVATIVE-CLASSES produces exactly one negative isum, so it's just a matter of making that the default?
[03:14:26] <hayley> ...or I modify ISUM-CASE to recognise exactly one negative isum; doesn't bother me either way.
[03:27:42] <gilberth> Well, once ISUM-CASE comes into play at my program, there are no negative isums anymore.
[03:29:26] * hayley looks through disassembly and it is larger. But there are no redundant tests now.
[03:29:59] <gilberth> You faced redundant tests?
[03:30:04] <hayley> Yes.
[03:30:18] <hayley> And for some reason my scaling governor is still set to powersave. wtf
[03:30:26] <gilberth> Why?
[03:30:33] <hayley> No noticeable speedup though.
[03:31:24] *** Quits: White_Flame (~quassel@user/white-flame/x-6930243) (Remote host closed the connection)
[03:31:31] <hayley> OTOH no noticeable slowdown is also good news.
[03:32:38] *** Joins: White_Flame (~quassel@user/white-flame/x-6930243)
[03:32:44] <hayley> Hm, isum-case just copies the case bodies, as you GO somewhere for the transition anyway. Whereas I just used the COND arm for that.
[03:36:01] <hayley> Aha, now I have some respectable code generated.
[03:37:04] <hayley> Maybe I should benchmark calling a continuation for matches vs. returning. I sorta suspect the latter will be nicer on register allocation.
[03:46:30] <gilberth> Milady, how did you benchmark? I get 1.70GB/s for the C code I posted yesterday and a bit less for my new dispatch. With gcc-11.1 and profile guided optimization. w/o profiling I get 1.56GB/s for the old binary search dispatch and 1.41GB/s for the new dispatch.
[03:47:26] <hayley> I load my /var/log/Xorg.0.log into Lisp, then used CFFI to call the C code. Got pretty much the same 1.7Gchar/s in C.
[03:47:44] <gilberth> ok
[03:47:46] <hayley> n.b. I changed char to int of course.
[03:48:17] <gilberth> Not uint32_t? :)
[03:48:34] <hayley> Yes, I should really use uint32_t.
[03:49:02] <gilberth> Or uint_least21_t or what ever that is called.
[03:49:42] <gilberth> Or is it least_uint? I never can remember. Likewise with ptrint_t or intptr_t.
[03:49:56] * hayley thinks she is SOL for profiling, as it reports half the samples are in one load instruction. But that's surely not the problem.
[03:50:07] <hayley> Off to perf!
[03:50:10] <Catie> uint_least32_t?
[03:50:28] <gilberth> Catie: 21!
[03:50:52] <hayley> uint_9_plus_10t
[03:51:01] <Catie> Where on earth are you finding a twenty-one bit integer typedef?
[03:51:09] <gilberth> clang 6.0 is generating slower code. Only 1.4GB/s.
[03:51:16] <hayley> A serious char?
[03:51:23] <moon-child> that is an old clang
[03:51:42] * hayley fancy-numbers ./log-read
[03:51:49] *** Joins: lisper29 (~vibs29``@84-105-244-73.cable.dynamic.v4.ziggo.nl)
[03:53:07] <Catie> Is this a standard I've completely missed? I'm missing something for sure, I'm just not sure what it is
[03:53:59] <hayley> https://www.gnu.org/software/libc/manual/html_node/Integers.html mentions uint_least_32_t but not uint21_t
[03:54:00] -ixelp- Integers (The GNU C Library)
[03:54:10] <gilberth> Catie: #include <stdint.h> unfortunately the uint_leastN_t are optional for N not being 8, 16, or 32. A pity.
[03:54:27] <hayley> https://www.youtube.com/watch?v=4esybKKOYYo
[03:54:28] -ixelp- Never Turn Your Back On Mother Earth - YouTube
[03:54:32] <Catie> Ah, gotcha. Mine only has the powers of two so I was lost
[03:54:33] <gilberth> The uintN_t mandate exactly N bits.
[03:55:32] <gilberth> The leastN_t mandate at least. And so its a pity and lazy that those are not mandated for N being one of the standard sizes. Would have been too useful, I guess.
[03:55:51] <selwyn> isn't the c standard going to get these
[03:55:53] <moon-child> do you expect your code to ever run on a machine without 8-bit bytes?
[03:56:23] <Catie> Would it? If you need "at least twenty-one", then "at least thirty-two" would fit the criteria
[03:56:47] <moon-child> Catie: yes, but in theory there could be a 21-bit type; then you would be wasting space with 'at least thirty-two'
[03:56:55] <gilberth> moon-child: My B32 has no 8-bit bytes, being word oriented. And I contemplate to widen the words to 40 bits.
[03:57:10] <Catie> moon-child: Ah okay, I'm starting to get the picture. Thank you!
[03:57:33] <gilberth> I am sure I could find 24-bit words, if I wish.
[03:58:15] <gilberth> Even Pascal got it right.
[03:59:26] <gilberth> And it might make sense to pack 21-bit integers at 24-bit words, three octets each. Even with a byte-oriented machine.
[04:00:17] <gilberth> But you can always say typedef struct rune { unsigned long :21; } rune; with C. :-)
[04:00:50] <gilberth> More useful, if the field would have a name, though.
[04:07:04] <gilberth> Ok. When I use an EOF sentinel, my speed increases to 2.2GB/s. This is why my scanner uses a sentinel. Good.
[04:11:30] <gilberth> So I learned that I don't need to change things. Binary search is faster than trying to be clever, and an EOF sentinel is faster too.
[04:12:02] <moon-child> huh, it occurs to me that you don't necessarily need an out-of-band signal for octets
[04:12:11] <moon-child> for utf8, at least, there are a couple of values which are never permitted
[04:12:24] <moon-child> (though if you want to run on arbitrary binary data, you will of course need to go out-of-band)
[04:12:34] <moon-child> (for ucs4, of course, there are plenty of sentinels to choose from)
[04:13:14] <gilberth> Well, you still need to catch those illegal code points, if you wish, don't you?
[04:13:30] <pl> moon-child: utf8 was explicitly designed to be self-synchronising, yes
[04:13:51] <moon-child> gilberth: sure, but you can check that in the sad path.  Or sanitize your inputs
[04:14:10] <gilberth> But its painless. I pick a sentinel which is unlikely. In my case NUL. And when I hit that, I probe if that is the sentinel or a real NUL. The latter will happen almost never.
[04:14:10] <moon-child> pl: self-synchronization is a separate issue.  At no point in a utf8 stream (except for bom I guess) is an FF byte legal
[04:14:15] <hayley> The Hyperscan manual says "lol invalid UTF-8 is UB, don't do that"
[04:15:11] <gilberth> And what I need is not an EOF sentinel, but and end-of-buffered-data sentinel, as I read from a stream.
[04:15:12] <pl> moon-child: Well, BOM was later addition, but generally UTF-8 guarantees you can start at any point and get legible result if there's sensible data 
[04:15:26] <moon-child> pl: that is true.  But again, a separate issue
[04:15:54] <moon-child> one can imagine a self-synchronizing encoding under which all byte values could sometimes be significant
[04:17:51] <moon-child> gilberth: mmap time?  Or is it truly a stream
[04:17:53] <gilberth> Well, whatever, I want my machinery work on whatever encoding you chose. There should be no assumptions made by the engine. I still believe that NUL is a good choice. On the very grounds, that C code likes to choke on that.
[04:18:20] <moon-child> heh, when you put it like that it reminds me of the hotspot null trick
[04:19:51] <gilberth> moon-child: I am not a greper. And in general I don't believe in mmap. Also: I want to read from a CL stream, it's the task of the CL implementation to mmap, if it thinks that is a great move.
[04:20:26] <moon-child> will you use closos, where all strings are mmapped?
[04:20:40] <moon-child> :)
[04:21:06] <gilberth> As I said: I read from a CL stream, I don't care how READ-SEQUENCE is implemented.
[04:22:27] <gilberth> Modularity, dude. :-)
[04:23:00] * hayley looks at the end of the disassembly and sees "L17: ADD R9, 2; JMP L0; L18: ADD R9, 2; JMP L0"
[04:23:05] <moon-child> lol
[04:23:28] <moon-child> if you wish to be maximally modular, you should not require that input be taken from a stream; allow the user to feed it to you
[04:23:45] <moon-child> hayley: hashcons go brr
[04:24:55] <moon-child> (well, I guess not hashcons, cause you want to mutate your blocks and _then_ deduplicate.  But.)
[04:25:05] <gilberth> moon-child: Just implement READ-SEQUENCE on whatever you give me and we are set.
[04:25:54] <hayley> Also n.b that those are only reachable from L2 and L6. So SBCL thinks they are very rarely taken?
[04:26:03] <moon-child> alas!  READ-SEQUENCE is not a generic function, and graystreams are not standardised
[04:26:10] <gilberth> And the rest of the stream protocol for source location information.
[04:27:16] <gilberth> moon-child: Gray Streams are a de facto standard. I am fine with that. No need to reinvent the wheel and propose a private stream abstraction.
[04:28:09] <moon-child> fair enough
[04:29:10] <gilberth> Been there in ancient times, done that, it was painful.
[04:29:49] <gilberth> More painful was being suck with 7-bit ASCII.
[04:29:59] <hayley> Ads on godbolt.org believe I need a package manager for C++ code.
[04:30:00] <gilberth> * stuck ;lol
[04:31:00] <gilberth> hayley: Some ads still believe I would be a woman. Could be worse.
[04:31:17] <kakuhen> I enabled high-contrast mode in Element and the only difference is that the transparent borders become light gray dividers and an auto-hiding button is one shade darker
[04:31:38] <kakuhen> given how much webdevs care about "mobile-friendliness," I love how none seem to give a single shit about accessibility
[04:32:09] <kakuhen> well, i guess i cant blame them; not many UI designers in general  seem to care about accessibility in 2021
[04:32:30] <gilberth> kakuhen: Of course not, it's not chic.
[04:33:18] <gilberth> And most don't care about usability, either.
[04:34:14] <moon-child> gilberth: 1) why are you using godbolt?; 2) why do you permit your browser to show you ads?
[04:34:22] <moon-child> gah
[04:34:24] <moon-child> hayley: 
[04:35:02] <hayley> moon-child: Can't visualise how the assembly for this DFA and the C (and also CL) code match up, and the ad blocker doesn't seem to fire on that kind of ad.
[04:35:15] <moon-child> kakuhen: I can not stand the modern trend towards low contrast.  Give me white-on-black or give me death!
[04:36:03] <kakuhen> I don't need so much contrast as white-on-black, but I would appreciate it if transparent borders became a color my eyes can easily distinguish from pure white
[04:36:32] <kakuhen> also ad-blocking is a never-ending arms race; can't wait to see what we'll have to do once ads and many core functionality of websites are served as wasm
[04:36:50] <Catie> Riot
[04:37:13] <moon-child> ah!  I see
[04:37:56] <moon-child> fun thing is, browsers may be taught to hide ads :)
[04:38:24] <moon-child> .motd { display:none }
[04:38:30] * moon-child usually wipes /etc/motd too
[04:38:35] <moon-child> make that #motd
[04:40:14] <moon-child> (is that fun?  I don't know.  It is a crap ‘user agent’.  But it can do something every now and again)
[04:41:21] <gilberth> For some reason I have real difficulty reading black-on-white. Could be completely unreadable for me on a bad day.
[04:42:03] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Quit: WeeChat 3.3)
[04:42:31] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[04:43:11] <moon-child> including on paper?
[04:43:34] <gilberth> Even with paper.
[04:49:43] *** Quits: random-nick (~random-ni@87.116.180.98) (Ping timeout: 256 seconds)
[05:03:55] <hayley> Well, GCC transforms (<= #x30 x #x39) into "lea edx,[rdi-0x30]; cmp dl,0x9; ja ..." relying on integer overflow.
[05:05:18] *** Parts: lisper29 (~vibs29``@84-105-244-73.cable.dynamic.v4.ziggo.nl) (Leaving)
[05:05:59] <hayley> The hot loop which misses everything is 8 instructions in a row here. Very different to the output of SBCL.
[05:23:38] <gilberth> This is curious, I don't get this lea thing.
[05:24:49] <moon-child> do you know what  mov edx,[rdi-0x30]  does?
[05:24:51] <gilberth> Ah I do. I missed -O3. sorry
[05:24:59] <moon-child> oh
[05:25:47] <gilberth> moon-child: I can read x86 assembler fine. ;-)
[05:25:56] <moon-child> :)
[05:26:02] <moon-child> 'get' is ambiguous, apparently
[05:26:37] <gilberth> Yes, but I won't be curious about me not getting something. This happens all the time. :-p
[05:28:46] <hayley> I can only read Intel syntax.
[05:29:43] <moon-child> at&t is dangerous.  Technically, I know how to parse it, but there is always the possibility of forgeting which order the operands go in
[05:30:32] <hayley> But whatever SBCL is doing is mind-boggling.
[05:31:26] <gilberth> I hate the AT&T syntax. And I wonder why it was invented even.
[05:31:51] <moon-child> https://stackoverflow.com/a/42250270
[05:31:52] -ixelp- x86 - What was the original reason for the design of AT&T assembly syntax? - Stack Overflow
[05:33:58] <hayley> https://plaster.tymoon.eu/view/2803
[05:34:17] <hayley> And before someone asks (somehow), no, (optimize (speed 3) (compilation-speed 0)) is not noticeably better than (optimize (speed 0) (compilation-speed 3)).
[05:35:03] <moon-child> ach
[05:35:33] <hayley> And the equivalent from GCC: https://plaster.tymoon.eu/view/2804
[05:35:54] <moon-child> and the extraneous shift hurts too
[05:36:02] <hayley> SBCL refusing to use unboxed integers doesn't concern me so much as this weird scheduling, admittedly.
[05:36:33] <moon-child> sure.  But boxing is, shall I say, the thousandth cut
[05:36:36] <hayley> I have a compiler hack called "lying about types" as SBCL is forced to unbox with (unsigned-byte 64). But it's not much faster.
[05:37:01] <moon-child> (also, I expect you can even cmp m,i and avoid the load entirely)
[05:37:11] <moon-child> (though that is even more marginal still)
[05:37:20] <hayley> i.e. a VOP which reads a 32 bit integer from the string, but then claims to return a (unsigned-byte 64).
[05:37:29] <moon-child> I see
[05:38:15] <moon-child> (incidentally: I was thinking that for sicl characters should always be stored in tagged form, including in strings)
[05:38:56] <moon-child> (everything except code-char and char-code can be done without untagging, and then you don't need any extra extraneous ops)
[05:39:11] <hayley> IIRC beach mentioned doing a lot of array type test hoisting once, so you might find yourself with more unboxed values.
[05:39:42] <epony> where is he, no good mornings recently.. vacation hopefully
[05:39:48] <moon-child> sure.  But if working on the tagged form directly is free, I see no reason not to do that preferentially
[05:40:09] <epony> I like the alien characters in "land of lisp"
[05:40:15] * hayley now wonders if having a working frequency governor makes performance in video games not suck again.
[05:41:44] <moon-child> (and: code-char/char-code are not no-ops anyway, so it's not like there's any case where you would get out of work by sticking with the existing tagging scheme.  Plus, stuffing chars into 4 bytes lets you skip REXes)
[05:43:12] <hayley> https://twitter.com/mutual_ayyde/status/1475948287257878530 "When I run ... I get a netoutput of a, b, 0.0, 0.0 for every year, which means that there is no bread output."
[05:46:08] <gilberth> I am playing a bit with the C compiler. Using a pointer to read the characters with *(p++) is 14% slower than using an index and read with input[p++]. So much for the glorious pointer arithmetic. But that is no news.
[05:47:26] <moon-child> that is bizarre
[05:47:33] <moon-child> why would you see a difference either way?
[05:48:39] <gilberth> It puzzles me a bit in this case, as I don't have sth like *(dest++) = *(src++) where it's obvious.
[05:49:32] <moon-child> even then, I would expect it to be smart enough to figure it out
[05:52:01] <gilberth> Hmm. seems like loop unrolling gone bad.
[05:52:27] <gilberth> I see the loop unrolled with *p++ and not with input[p++]
[05:53:12] <gilberth> Wrong. Both are unrolled. /me looks more closely.
[05:57:25] <gilberth> moon-child: <http://termbin.com/0n9i> Any guess?
[06:11:46] <hayley> I wonder how to test if it is basic block scheduling or not. Guess I have to write a lot of assembler now?
[06:29:55] <moon-child> gilberth: those are almost identical
[06:30:00] <moon-child> gonna guess alignment?  maybe?
[06:30:25] <moon-child> hayley: write a thingy to automatically shuffle blocks for you and compare results
[06:31:02] <gilberth> moon-child: Hard to tell.
[06:31:14] <hayley> I don't know how to write a thingy to automatically shuffle blocks.
[06:31:37] <hayley> Marginally trickier as both compilers have parts that fall through.
[06:32:27] <moon-child> probably some manual fixups, unless you intend to go full ida on the thing.  But less work than doing the whole thing by hand
[06:35:03] <hayley> :<
[06:52:03] <gilberth> So what have I learned tonight?
[06:52:44] <hayley> SBCL scheduling is crap?
[06:52:53] *** Quits: pjb (~pjb@user/pjb) (Remote host closed the connection)
[06:53:17] <gilberth> hayley: That is something you have learned, not me.
[07:00:58] * hayley goes to see how SICL lays out LIR-to-Cluster (assembler).
[07:02:59] * hayley reads
[07:03:11] <hayley> "The thing is though, nuclear reactor designers and electricians (at least reputable ones) will never say, "everyone should learn nuclear physics" or "everyone should know how to add a power socket to their home." [...] Yet it's normal for programmers to say "everyone should learn to code?" Just... what?"
[07:03:42] <hayley> As long as you don't program mission critical things, why the fuck not? And, as long as no one lets you near a nuclear reactor or electrical work, why not learn those things too?
[07:04:37] <moon-child> well, you cannot learn everything
[07:04:49] <moon-child> there is a difference between 'everyone should learn' and 'everyone should be able to learn'
[07:05:12] <hayley> Sure.
[07:05:29] <hayley> I assume you want to learn to program, work a nuclear reactor, or add a power socket to your house.
[07:05:49] <moon-child> I want to do all the things.  But I have limited time and energy.  Unfortunately
[07:07:34] <hayley> The thing is though, even if one actually believes "everyone should learn to code", they are not going to suggest you start design control mechanisms for a nuclear reactor any time soon.
[07:08:29] <hayley> And if someone hires you to design a control mechanism for a nuclear reactor, and you have no experience, well, who is the bigger idiot there?
[07:11:26] <hayley> Learning those things is fine. Being tasked to design mission-critical anything when you have no experience only shows that you are not the only idiot around.
[07:12:38] <hayley> Seems SICL does a depth-first traversal of the IR graph, and doesn't bother making basic blocks or anything.
[07:13:09] <gilberth> Well, there is a whole host of things the society believes you should learn. Ironically science is more often than not considered being optional. As well as thinking in general.
[07:14:50] <hayley> OTOH being told to "learn to code" cause it's good for the economy is basically worthless, but programming is enjoyable for self-expression (per Kay and Goldberg) and for straightening out your logic (Minsky, Iverson, Lamport, etc).
[07:15:27] <gilberth> Actually I don't think that demanding that one should learn programming would get us somewhere.
[07:16:49] *** Joins: Parker2 (~Parker2@2600:6c5e:2b7f:a3cd:d49a:2ede:47f4:9c39)
[07:17:03] <Parker2> Hello everyone!
[07:17:20] <gilberth> Programming requires discipline, thinking and a high tolerance of frustration. Sure it would be good in general, if more people would show that. But as things are, most don't particular enjoy that and rather would go shopping.
[07:18:02] <Parker2> @gilberth I would prefer shopping.
[07:18:40] <Parker2> I don't have the patience for programming. Learning the piano is easier, personally.
[07:18:47] <gilberth> Really? I lack a GF and thus can't go shopping. So this is no option for me.
[07:18:51] <hayley> I mean, the original argument was something like "there's so much crap programming out there, that programmers are not trustworthy." You have to get in a very bad situation where you can kill someone with a program.
[07:19:17] <Parker2> @gilberth lol I just go shopping for sweet german leather jackets
[07:19:57] <hayley> Someone writing a shit Lisp interpreter is usually mostly harmless, despite any jokes I make to the contrary. Someone making a shit nuclear reactor in their backyard is probably not harmless, and one has to wonder where they got the materials.
[07:20:23] <gilberth> Parker2: I am too skinny as that shops would offer be anything I could wear.
[07:20:38] <Parker2> Off topic, what happened to freenode? I haven't used IRC since 2017.
[07:20:51] <hayley> Died a painful death.
[07:20:53] <moon-child> it has a totalitarian government now
[07:21:16] <moon-child> so we liberated ourselves and are all socialists now
[07:21:23] <gilberth> hayley: Our current state of the whole industry using unsafe languages is not ideal either. And also confusing external and internal representation all the time. As dangerous. This could potentially kill people.
[07:21:39] <Parker2> @gilberth You'd be suprised. I have found jackets for men from 29" through 56" in chest. I'm a 42" or 104cm personally, and I find german clothes a bit tight.
[07:21:47] * hayley looks through src/compiler/codegen.lisp hoping to find some sort of scheduling.
[07:21:50] <gilberth> And stupidity is killing people right now. And it's not the stupid that die.
[07:22:27] <Parker2> I used to have a lot of friends in some freenode channel
[07:23:11] <Parker2> They've all moved on now. Some are dead. It saddens me to think about it sometimes, but alas; life moves on and you find new things to do with new people.
[07:24:18] <gilberth> Parker2: I don't know my chest. But my weight is 54kg. For a pair of blue jeans I would need 28/32.
[07:24:51] <hayley> (setf sb-c::*compiler-trace-output* *standard-output*) lets me see in the IR. fun.
[07:25:56] <Parker2> @gilberth wow you're tiny! I think I'm a 34 on a good day. I'm about 92kg if that's the measurement we're using here, what's 6' about 186cm?
[07:26:28] <Parker2> I'm about 183 if I remember right but I am 20 so there may be a few more centemeters gained
[07:27:23] <gilberth> I'm not tiny, just slim.
[07:27:41] <Parker2> I had to take measurements in metric because I ordered so much stuff from germany. I decided to buy 7 of the same jacket so I won't have to mix n' match anymore.
[07:28:54] <hayley> Hey, I might have found it. Seems there is some arbitrary-order walk on IR2 blocks in GENERATE-CODE in src/compiler/codegen.lisp
[07:29:18] <hayley> "Iterate over the IR2 blocks in component, in emission order" Well...who picks emission order?
[07:29:49] <Parker2> I was once 113kg but over the coarse of 1,200 miles and 6 months on a bicycle I dropped to 77. I want to lose a few again cause I got fat again
[07:30:07] <gilberth> Parker2: Well, as you may have guessed, it's pointless for me to order from Germany. They just don't have my size available. Neither do brick-and-mortar stores.
[07:31:18] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 268 seconds)
[07:31:35] <gilberth> And I just can't gain any weight. Doesn't work at all.
[07:32:00] <gilberth> hayley: Is that another word for "random"?
[07:32:10] <Parker2> gilberth: Have you tried army surplus websites? They're always out of stock in large sizes but for some reason they ALWAYS seem to have the small and xsmall sizes I couldn't dream of fitting into. I don't know what kind of dresser you are, but I like to be a bit fashionable. I picked the german bundeswehr because of the grey jackets and tailored them to my preferences. They look pretty snazzy if I do say so myself!
[07:34:01] <gilberth> Parker2: Why would I deal in any way with the army? And I very much doubt that they have what I am looking for.
[07:34:46] <Parker2> Oh too I found this grey horsehide greatcoat with a liner on eBay and the thing fits like a charm! It's so warm and comfortable too. Sadly I wansn't aware of the fact that the leather gets dried out and so it got a few cracks before I could put some mink oil on it.
[07:35:27] <Parker2> gilberth: I don't know. Every army has different styles, but they're certainly not for everyone. I am just trying to make some friendly conversation.
[07:36:01] <gilberth> Soldiers don't dress like gentlemen.
[07:36:33] <Parker2> That's why I tailor them to my preferences. I don't like looking like a german soldier personally.
[07:36:37] <gilberth> Anyhow, Parker2, I am fine. I get my shirts tailor-made.
[07:37:33] <Parker2> gilberth: That sounds like the best option. I've been into some muffins and cheese lately and my slim fitting shirts are a bit snug if ya' know what I mean. Any recommendations? Should I just drink more water?
[07:37:45] <gilberth> As well as other things, like jackets, suits. You name it.
[07:37:47] <Parker2> Maybe laying off the dairy would help... :)
[07:38:41] <Parker2> It sounds like you're a fancy dresser! Tell me, do you have preference for hats?
[07:39:35] <gilberth> I usually don't wear hats.
[07:40:45] <gilberth> Parker2: If you want to loose weight: Avoid sugar like the plague, and just skip all the carbonhydrates.
[07:41:04] <Parker2> I see. If you ever need find a hat for more formal occasions, might I reccomend a black Homburg. It pairs well with a tuxedo or really any suit. I doubt most people on the streets know the difference between a morning suit and a bluejeans/blazer combo.
[07:41:21] <Parker2> gilberth: I will try that, thank you!
[07:42:51] <gilberth> Parker2: It's key. My wife did just that. We skipped the rice, pasta, potatoes with meals. She lost weight easily without missing anything and without exercize. The latter doesn't work for weight loss anyway.
[07:43:50] <gilberth> Parker2: And indeed. Most people can't tell the difference. But most people recognize immediately that you can and some look well-dressed without following the latest trend like a lemming.
[07:44:00] <Parker2> I have fallen in love with poutine unfortunately. It is basically french fries with gravy and cheese over it. And I love rice too. Perhaps I should shop for some meats and veggies.
[07:45:03] <gilberth> Parker2: Oh, and fat is no problem at all. It's a myth that you get fat by consuming fat.
[07:46:10] <gilberth> Rice is one of the better carbonhydrate-rich things. Healthier than potatoes.
[07:46:46] <Parker2> gilberth: Perhaps. I have taken to dressing slightly better than the average population after one day coming in, looking in the mirror, seeing myself wearing baggy jeans with a camo tee-shirt and a worn out ball cap. The saturday night fashion trend here in Western North Carolina is to don a reflective orange shirt with greasy slacks and boots. Don't forget the baseball cap. Never forget the baseball cap.
[07:46:57] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[07:47:17] <gilberth> I mean, we add a lot of potatoes, rice, pasta to our meals because it once was important. As it was a cheap way to get calories. We don't need that anymore in our surplus society.
[07:48:02] <Parker2> gilberth: I buy high quality rice imported from India, and when I'm trying to lose a few pounds, I'll make all of my meals have mostly rice with a little of whatever else to flavor it. It works to a degree.
[07:48:15] <gilberth> That sounds funny. I would look like a complete fool with that.
[07:48:16] *** Quits: semz (~none@user/semz) (Ping timeout: 245 seconds)
[07:48:25] <Parker2> I was a complete fool.
[07:48:38] <gilberth> You recovered?
[07:49:00] <Parker2> Admittedly, I still am a fool at times, but a well dressed fool can get away with almost anything.
[07:49:09] <moon-child> gilberth: regular exercise increases your resting metabolism, which does in fact help with losing weight
[07:49:24] <hayley> Aha, src/compiler/control.lisp handles emission order. And it's not totally random apparently.
[07:50:12] <Parker2> moon-child: I did 16 miles/day on a bicycle for about 6 months and that burned off around 60-70 lbs. I was a fat little kid, quite overweight, but it worked. I now wear slim fit clothing.
[07:50:45] <gilberth> moon-child: But way less than advertised. And it's a long term effect you are talking about. And of course exercise has other benefits. I am off the hook, doctor recommended to do no sports.
[07:51:06] <Parker2> One of the greatest pleasures I receive from dressing well all of the time is the best customer service, and randomly walking into just about any building and not having anybody question my presence.
[07:51:38] <Parker2> gilberth: You lucky dog! I mean, it is sad and all, but a doctor's pardon? GOLD!
[07:51:55] <hayley> "Do control analysis on COMPONENT, finding the emit order. Our only cleverness here is that we walk XEP's first to increase the probability that the tail call will be a drop-through."
[07:51:59] <gilberth> Parker2: Yeah, that's a nice side-effect. The greatest pleasure I get is that I feel better.
[07:52:48] <gilberth> Parker2: I am not so lucky at all. There is a medical reason for the doctors recommendation. And that isn't so funny.
[07:53:15] <gilberth> hayley: What's a XEP.
[07:53:49] <Parker2> gilberth: And how. I don't dress well to put others down, in fact, I get to talk to a lot more people now and have meaningful conversations. For some reason there is the occasional person who thinks I'm trying to look like a cop, (the cops don't ever wear suits here?) but it is still an interesting result.
[07:54:03] <hayley> (something) entry point.
[07:55:10] <Parker2> gilberth: Pardon my rashness. I was just making some light of the situation. I can understand it myself; I broke my back when I was a pre-teen and it never healed quite right, so I do understand to some extent. Our difficulties make their own daily chores, do they not?
[07:55:14] <gilberth> Parker2: Clothes make the man. Or sth similar.
[07:56:31] <Parker2> If ever I could get a replacement spine, the first thing I would learn is to ice skate.
[07:57:01] <gilberth> Parker2: My metabolism somehow is bust. I am exhausted easily. I recover slowly, though. I don't complain.
[07:57:22] *** Joins: kotshie (~kotshie@68.72.208.140)
[07:57:42] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[07:57:57] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[07:58:15] <gilberth> Last year I had the whole program, including finding myself at the ICU.
[07:59:28] <gilberth> But that's not the cause of me being so slim. I always was that way.
[07:59:35] <Parker2> gilberth: I can understand that. I have unrelated thyroid problems which lead to similar results. The most painful thing about not complaining is how some people belittle one for being "lazy" or uncomitted. The intrusive questioning has almost lead me to printing out a fact sheet so their curiosity will be satisfied.
[08:01:03] *** Joins: semz (~none@user/semz)
[08:01:10] <Parker2> In spite of my limitations, I am dearly grateful to not be depressed about it most of the time. I have had friends who buried themselves in a pit of dispair though they were in control of their lives, even despite their physical or mental limitations.
[08:01:55] <gilberth> Thyroid problems are no fun, but can usually be treated well. May it be your thyroid being responsible for your overweight? It has a huge say on that.
[08:02:04] <Parker2> The fact that I can type this message gives me cause for rejoicing! In fact, this has been such a warm and sunny day that it almost felt like spring. 
[08:03:38] <Parker2> gilberth: I'm not overweight so much now, that is just the old part of my mind which is still barking about me being too fat, even though I slimmed down to ribs poking and still couldn't see it. I am maintaining a healthy weight now, thankfully. My doctor is a piece of work. I am looking to find one more qualified to weild a pen.
[08:04:20] <gilberth> I was just thinking, sorry.
[08:05:17] <hayley> At least https://llvm.org/doxygen/MachineBlockPlacement_8cpp_source.html sorta describes an algorithm, as well as 3600 LOC of C++ I probably won't read.
[08:05:18] -ixelp- LLVM: lib/CodeGen/MachineBlockPlacement.cpp Source File
[08:05:39] <gilberth> Parker2: Personally I hate to hear from other people: "Gilberth, you need to eat more!". Get's onto my nerves.
[08:05:47] <Parker2> gilberth: There is no reason to be sorry! I have a host of problems, which will either get better or worse. The only conclusions which I can see will all eventually turn out for the better!
[08:06:42] <gilberth> hayley: What does the Dragon Book say?
[08:06:55] <Parker2> Now for the real things I have to complain about: My cellphone keeps yakking about "Google play services must be enabled for calendar sync to work WAAAA!!!"
[08:07:04] <Alfr> Parker2, why can't they stay as they are?
[08:07:58] <hayley> Fine, I'll read the damn dragon book again. And it'll say nothing, like it did w.r.t loop unrolling.
[08:08:38] * moon-child whispers again: muchnick
[08:09:07] <hayley> Well, it's not called "basic block scheduling". That's how you put instructions into a basic block.
[08:09:10] <gilberth> hayley: Oh dear. Tell me when you come across the part at which they work from explicit loops with for() or while().
[08:09:38] <Parker2> Alfr: My health conditions are worsening by the month. I did not realise how broken my body truly is until I took a job as a tar boy (tar and gravel paving, hot, sweaty, back breaking work) and after six months I had to quit because of health problems. It has only gotten worse since then. Sadly, I cannot afford health insurance, HOWEVER if my condition gets better, it gets better, if it gets worse, the state will give me 
[08:09:39] <Parker2> medical insurance to get better, and if I stay the same, well then I can still play the piano. I am happy to be alive.
[08:09:47] <hayley> And I cannot afford global code scheduling at the moment.
[08:09:56] <gilberth> moon-child: I am a bit disappointed by Munchnick. I expected more. Somehow.
[08:10:38] <Parker2> In fact I am glad to have gotten sick at such a young age
[08:10:48] <moon-child> I have not read muchnick yet.  So I cannot vouch for it.  But my impression is that it was more modern, serious, and practical than the dragon book
[08:11:46] <Parker2> It has given me a perspective I have not seen in my peers. I see the value in life, friendships, and loyalty. It has helped me to make reasonable decisions and to not kill myself by backflipping off a roof into a swimming pool or some other stupid teenage stuff. It has been a protection!
[08:11:49] <gilberth> moon-child: More practical? Definitely. More modern? Not really.
[08:11:57] * moon-child considers taking a sabbatical, reading _all_ the papers, and writing his own compiler book
[08:12:04] <moon-child> bah!  I haven't the discipline for that
[08:12:15] <Parker2> Are you guys talking about books or computer programs?
[08:12:21] <moon-child> yes
[08:12:25] <Parker2> XD
[08:12:44] <Parker2> Does anyone here have an interest in music?
[08:12:56] <hayley> Sometimes.
[08:13:12] <moon-child> only a casual one.  I taught myself piano while I was at school, but have not touched it in a few years
[08:13:23] <Alfr> Parker2, okay. (I actually was only wondering about the excluded middle, but as it seems that was only omitted.)
[08:15:01] <Parker2> Alfr: Pardon my pace, I seem to have lost the meaning of your question in transit. Would you mind to point it out? I'm quite tired.
[08:15:30] <Parker2> Also parker1 was already taken. :/
[08:15:51] <moon-child> (want to get back into it, though.  I am currently awaiting a keyboard which is slated to arrive 'some time late december-early january' sooo)
[08:16:01] <gilberth> Parker2: Well at least you have friendships you could rely on. That is very valuable. A luxury that I don't have, I have to master my live almost alone.
[08:16:12] <Parker2> I must find out if there is a shop for libera.chat usernames...
[08:16:20] <Parker2> gilberth: What about your wife?
[08:16:30] <moon-child> at one point, somebody tried to coerce me out of a nickname
[08:16:36] <moon-child> I don't think they ever offered money for it, though
[08:16:46] <Parker2> I would pay for mine.
[08:17:11] <moon-child> seems like a frivolous purchase
[08:17:17] <Parker2> I came here tonight for one reason: I'm trying to get off of youtube.
[08:17:30] <gilberth> moon-child: I was reading and skimming the book. Thanks for your pointer to the PDF. And it's very verbose and often I thought "Nah, that's no news, nah, I know that. Where the heck is the new stuff?"
[08:17:34] <Parker2> It is pointless, honestly, but it gives me dopamine
[08:17:44] <Alfr> Parker2, I don't think that question really is that meaningful. Essentially you said better or worse, and I wondered about not either.
[08:17:59] <moon-child> gilberth: ah, well, that is disappointing
[08:18:30] <Parker2> Alfr: Oh pardon me, I didn't understand. Since I got the injury it has only gotten worse, albiet slowly. I doubt it will ever "idle"
[08:18:33] <Alfr> Parker2, don't mind me, I often have a knack digging up edge cases.
[08:18:56] <gilberth> Parker2: She moved out about two and half years ago. And was fighting me the two years before. But we are on good terms.
[08:19:05] <Parker2> I am going to try to take the time I spent on Youtube and spend it somewhere like here
[08:19:47] <Parker2> gilberth: It pains me to hear that, but I am glad that you are on good terms.
[08:21:21] <gilberth> moon-child: Well, as I said. The book is way more practical and as such is of value and a good alternative to the Dragon book for those who mind all the theoretical stuff in it. Munchnick perhaps is a better read for those not too much in the theoretical things and want to get a quick and relevant overviews of the topic. It's not a bad book.
[08:21:37] <Parker2> I noticed something ugly stirring within myself when watching Youtube videos and reading the comments. I constantly see these fights going on in the comment sections, and the videos are all screaming at me to do something I know nothing about. I used to go there to learn but now it seems like every man in a trenchcoat is trying to sell me a VPN. It was making me very uncomfortable and even upset in some instances. I hate 
[08:21:37] <Parker2> seeing people fight.
[08:21:55] <epony> what comments?
[08:22:00] <Parker2> Youtube comments
[08:22:06] <Parker2> EVERYBODY is fighting now
[08:22:12] <epony> yt-dl / yt-dlp
[08:22:21] <epony> comments, hahahaha
[08:22:44] <Parker2> In fact I would play a game to try to guess how many replies into a comment it would take until someone said something absolutely rude and provoking.
[08:23:05] <Parker2> My average was three.
[08:23:17] <gilberth> Why do you read those comments in the first place? Bored?
[08:23:49] <Parker2> Then when I look at videos from 10 years ago, I would see encouraging comments where people would commend the maker for their video, and people just being nice to each other
[08:24:02] <Parker2> But for some reason people are fighting now
[08:24:30] <Parker2> Of course they always fought but they're getting more cruel by the day it seems, even in real life.
[08:24:46] <Parker2> Everything is about politics
[08:24:51] <gilberth> That's no news. People have problems with their lives and believe that being rude to others would somehow help. Always has been that way.
[08:25:07] <Parker2> Everything is about "sus" or whatever the trending meme is of the hour
[08:25:53] <gilberth> There is a reason, why I steer clear of those things. It's cozy here on the dark side of the moon.
[08:26:47] <Parker2> I see my friends joining a website called "Tiktok". They are bartering their reputation for the worthless currency of the like button, and it is ruining their sense of self value.
[08:27:16] <Parker2> I agree with you, gilberth. IRC was the one place I ever found peace and companionship on the internet, so this is where I have returned to.
[08:27:17] <gilberth> And in #lispcafe, this place is cozy, too. Best thing: Most people are normal here.
[08:28:25] <Parker2> Most people who know what IRC is, understand the consequesces of selling their souls to the devil that is the crowd mentality.
[08:29:09] <Parker2> That's why all of you guys are normal! There aren't any likes or thumbnails here.
[08:29:33] <Parker2> We are judged by the way we treat others here, not by what color of neon our hair is dyed.
[08:29:50] <epony> there are other abnormalities, just don't look into them and you'll not get upset
[08:29:56] <Parker2> Pardon me, my hair is not neon nor do I have any quams with those who choose to dye their hair neon
[08:30:57] <gilberth> Parker2: Yep. Social media in general are bad for your selfesteem and make you unhappy. Reason: Everyone seems to lucky, having an exciting life, and on vacation all the time. What they don't realize is that (a) this is a filtered view (b) when you have 150 "friends" there statistically are a dozon of them on vacation at any given moment.
[08:31:13] <epony> it's not this or that place, it's 2020, not 1999 and that's it ;-)
[08:31:33] <Parker2> epony: I understand. I am just expressing my appreciation for the fact that if I was to join in almost any room like this one, I can find people who are normal. No fancy graphics, no exciting pictures no like buttons no comments, just chat. We are judged by the way we treat the others in here.
[08:32:04] <Parker2> And I like that.
[08:32:48] <Parker2> Oh, sometimes I feel like this world is dying a slow and painful death and I have to witness it.
[08:33:10] <Parker2> But at least I've got my suit to wear and my water to drink so I'm happy.
[08:33:24] <gilberth> That isn't news either. The world part, that is.
[08:35:08] <gilberth> But IRC could be harsh, too.
[08:35:10] <Parker2> gilberth: Do you (or anyone else) think that social media is designed to destroy or control people? I'm not getting into conspiracies (pardon spelling) here, but if the owners of these companies saw what their product was doing, how it's destroying the self esteem of the youth, my peers, wouldn't they change it?
[08:35:35] <Parker2> Or is everything about money?
[08:35:45] <gilberth> No, I don't believe they are designed that way. The latter.
[08:36:09] <Parker2> Perhaps our abilities have surpassed our understanding.
[08:37:09] <Parker2> I have greatly enjoyed our conversations, and you must pardon my rant, for it is night. Perhaps I shall return tomorrow, but now it is 12:06 AM and I must go to sleep. Goodnight everyone!
[08:37:45] <gilberth> Well, you can't blame Mr Zuckerberg for instance. Won't there be enough to be more than willing to participate in that kindergarten, there would be another FB. Sorry, I am olde, FB is a thing of the past. I have no idea what replaces it.
[08:38:14] <gilberth> Yep, take care, then.
[08:38:43] <Parker2> gilberth: FB was text and photo, I think TikTok and other quick shot apps are becoming the hub of the youth.
[08:39:11] <Parker2> Maybe. You guys (or gals!) keep on being you. Take care.
[08:39:50] <gilberth> Who else should I be than me? /me scratches head.
[08:42:46] <gilberth> moon-child: Another note: Munchkind (sp?) is nice as he clearly defines his intermediate languages and sticks to it. No handwaving on that part.
[08:43:05] <gilberth> Or is it Munchnick? /me shrugs.
[08:43:18] <moon-child> gilberth: well, you might continue to be yourself, but change who you are
[08:43:26] <moon-child> but, I think that is somewhat inevitable sooo
[08:44:21] <gilberth> Well, we change all the time, don't we?
[08:44:31] <moon-child> yes
[08:44:54] <moon-child> there is a feeling that people should not change themselves for the wrong reasons, which has evolved into a feeling that people should not change at all
[08:45:08] <moon-child> which is, I think, the ethos behind the idiom 'keep being you' or w/e
[08:45:41] <gilberth> Yeah, ok.
[08:46:27] <moon-child> (though there is also the feeling that people should _accept_ whomever they happen to be, regardless of whether they change.  So idk.  I do not pay muchattention to such things)
[08:47:40] <gilberth> I could image those wrong reasons. That is not changing for being a better person, but because to liked more. That is, rooted in low selfesteem to begin with. But maybe I get that wrong. But Parker2 dropped a line like that.
[08:51:53] <gilberth> moon-child: Well, it's not that easy. At times I could act like an elephant at a china store. Also my insecurity irritates people. And I am not particular good with girls. I work on that. In theory, when I could leave that prison of mine again. So, I don't plan to keep that way. But I won't stop to be authentic.
[08:52:53] <gilberth> And the latter could also have been meant by "keep being yourself".
[09:10:18] * hayley back from getting drill batteries exchanged.
[09:11:09] <hayley> "In fact I would play a game to try to guess how many replies into a comment it would take until someone said something absolutely rude and provoking." Once I stated that borrow checking^W^Wregions were not a general solution, and I was told to go marry a GC. Think that was like 2.
[09:11:18] <hayley> .oO(Does this mean your ex was a mutator, as she only produced garbage?)
[09:13:17] *** Quits: Parker2 (~Parker2@2600:6c5e:2b7f:a3cd:d49a:2ede:47f4:9c39) (Ping timeout: 240 seconds)
[09:18:42] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[09:21:27] <hayley> "// Portions of code courtesy of Clifford Click" He was a Clifford the whole time.
[09:21:51] <gilberth> .oO(Better than being married to a kleptomaniac and thus needing a borrow checker.)
[09:22:43] <hayley> .oO(Well, she would steal my ideas, but she'd make poor copies so the borrow checker would be none the wiser.)
[09:23:31] <gilberth> .oO(.clone() does not involve the borrow checker.)
[09:23:47] <hayley> .oO(Precisely.)
[09:24:12] <hayley> Well, I cannot find anything about basic block ordering in HotSpot. Time to email Cliff Click again?
[09:24:21] <gilberth> .oO(Are we communicating telepathically now?)
[09:24:24] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[09:24:43] <dave0> maw
[09:25:09] <gilberth> Hello dave0!
[09:25:40] <dave0> maw gilberth !
[09:25:43] <gilberth> hayley: What did the book say?
[09:25:56] <hayley> The Dragon book doesn't mention basic block positioning.
[09:26:14] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Quit: Leaving)
[09:26:30] <gilberth> Oh!
[09:27:09] <gilberth> Then it must be trivial and obvious. :-p
[09:27:31] <gilberth> dave0: Thanks for the space!
[09:28:32] <dave0> space!
[09:28:40] * hayley now wonders where to find such code in GCC.
[09:29:01] * gilberth wishes hayley good luck.
[09:29:15] <gilberth> dave0: Raum! ;-)
[09:29:54] <gilberth> Weltraum to be precise. Nice word actually.
[09:30:45] <gilberth> The space at which the world resides. Nah, I am bored.
[09:30:57] <dave0> is it a german word?
[09:31:45] <dave0> i kinda like that i'm in the same space as the world
[09:31:59] <dave0> there is food and shelter here :-)
[09:32:38] <kakuhen> ok one of my friends showed me a potential problem with djula
[09:33:03] <gilberth> dave0: Weltraum is German for "outer space".
[09:33:04] <kakuhen> it uses a library called "access" in order to access the slots of a class you pass to a template
[09:33:23] <kakuhen> however, CLOS objects can contain slots with names in different packages, so you can have slots with "identical" names
[09:33:26] <dave0> gilberth: aha
[09:33:27] <gilberth> dave0: We had that yesterday, remember?
[09:33:40] <dave0> gilberth: nope?
[09:33:54] <kakuhen> which in case it's unclear what djula will do if you pass it an object foo with slots bar:x, baz:x and then in a djula template write {{ foo.x }}
[09:34:04] <dave0> gilberth: my mind is as sharp as a bag of wet mice
[09:34:27] <dave0> i drank too much juice now it hurts
[09:34:37] <gilberth> As I mentioned that a room has walls. And I was reminded that "Raum" which is also used for "room" could as well mean "space".
[09:34:50] <dave0> gilberth: oohhh right the dream conversation
[09:35:04] <dave0> the wife had the weapon
[09:35:17] <gilberth> Always, yes.
[09:36:22] <gilberth> Still puzzles me. Shouldn't it be the man who protects the woman?
[09:36:50] <dave0> i dunno but the chick mma fighters would bash me up
[09:37:31] <dave0> also i think there are female bodyguards too
[09:37:48] <gilberth> What ever mma is. Still, you got my point. I believe.
[09:38:27] <dave0> mixed martial arts .. i think it has something to do with UFC ultimate fighting something
[09:38:50] <dave0> gilberth: lots of those stereotypes are wrong
[09:39:15] <gilberth> Ok. This is why I don't know it. The mma thing, that is.
[09:39:41] <dave0> it's like boxing except karate
[09:39:42] <gilberth> dave0: Tell that the girls. They believe otherwise.
[09:42:19] <dave0> i ate too much too fast
[09:42:50] <gilberth> Too much too?
[09:43:10] <dave0> too much, too fast
[09:43:29] <gilberth> Too much juice, too much food, too fast. What happened?
[09:43:43] * hayley goes on #sicl
[09:43:44] <dave0> i was hungry!
[09:44:06] <hayley> "What is this optimisation called? My IPC is terrible and I think this would help, but I don't know what to write" "Inter-process communication?" "Er, no."
[09:44:28] <dave0> insane clown posse
[09:44:46] <gilberth> dave0: This happens, yes. But still: Why eat too much?
[09:46:09] <dave0> gilberth: no reason
[09:46:32] <dave0> i'll lie down for a few minutes and let it settle
[09:46:36] <hayley> "cfgloopanal.c" We're doing _what_ to the loops?
[09:46:55] <Catie> Configuring their. Well uh their. Hm
[09:47:03] <dave0> c.f.gloopa.nal
[09:49:55] <kakuhen> CFGlooPanal
[09:50:02] <gilberth> Don't you usually identify the loops and lay them out first? Inside-out?
[09:50:08] <kakuhen> you must've digged deep into the PrivateFrameworks folder to get that one
[09:50:39] <gilberth> I believe hayley is reading gcc or something.
[09:50:47] * hayley reading https://arxiv.org/pdf/1809.04676.pdf
[10:01:38] <hayley> Apparently this is just the travelling salesman problem again. Hooray!
[10:04:14] *** Joins: notzmv (~zmv@user/notzmv)
[10:05:20] <gilberth> Could have been worse.
[10:06:15] <hayley> Would it make you feel any better that we don't exactly know the variable we are optimising for, and "make as many branches fall through as possible" is a guess?
[10:07:20] <gilberth> I don't know I should feel about it.
[10:07:59] <hayley> Well, using machine learning to tackle the problem only is a 1% throughput improvement.
[10:08:01] <gilberth> And we don't have the toy problem of say two nested loops computing sth boring.
[10:09:03] <gilberth> But it's actually not that bad. I guess. Or hope.
[10:09:06] <hayley> The comment in LLVM source code doesn't make any sense. Apparently they preserve topological order of basic blocks, but how do you do that if you have a loop?
[10:09:19] <hayley> You can't topologically sort if there's a cycle. So the problem is where you break the cycle.
[10:09:39] <gilberth> Roll dice.
[10:10:17] <hayley> But I do like the idea of laying out tighter loops first, then working our way up.
[10:10:24] <gilberth> Nah, isn't that recursive? Treating a loop as one entity at the level up?
[10:10:50] <gilberth> I mean, what do those comments in clang's output say?
[10:11:08] <hayley> # Loop depth 42069
[10:11:11] <gilberth> hayley: Yeah, and I am sure the Dragon book talks about that.
[10:11:32] <hayley> .oO(Didn't I just say that it didn't?)
[10:12:05] <gilberth> .oO(Has she read the whole book?)
[10:12:32] <gilberth> Milday, I must have read about that approach somewhere.
[10:12:33] <hayley> No, but I have C-f and a table of contents.
[10:12:47] <gilberth> Fair enough.
[10:12:48] <hayley> Unless it'll be in the "lexical analysis" section.
[10:13:04] <gilberth> Is the 42069 for the two idiots around here?
[10:13:22] <hayley> Which two?
[10:13:26] <gilberth> hayley: That would be a brilliant spot to hide it, wouldn't it?
[10:14:41] <gilberth> hayley: This girl who hangs out here and the other one from the opposite side of the world who has no other home than #lispcafe.
[10:14:56] <hayley> I see.
[10:15:58] <gilberth> Anyhow, you puzzle me. I am sure I read about that loop-thing in the context of basic block scheduling.
[10:16:28] <gilberth> In the past, can't remember where.
[10:17:09] <gilberth> I believed it was the Dragon book, but I trust your c-f. Do you have a online version?
[10:17:25] <hayley> I got one by magic.
[10:17:30] <gilberth> And why c-f?
[10:18:30] <hayley> FWIW, lib/CodeGen/MachineBlockPlacement.cpp in LLVM is some 3.7 kLOC, whereas src/compiler/control.lisp is 224 LOC. I can't realistically implement something complex, but I guess using C++ helps inflate the LOC count.
[10:19:36] <gilberth> Wasn't C++ designed for that? So that coders wouldn't get out of work?
[10:20:23] <mfiano> That would be Java
[10:20:34] <mfiano> But C++ is up there, yeah
[10:20:42] <gilberth> Right. I was confused.
[10:20:55] <hayley> Nah, Java was so that they wouldn't kill people while at it. You know, with the GC and the half-baked security model.
[10:21:46] <gilberth> Has Rust the same goal? I mean it lowers productivity too. Good job for job security.
[10:22:07] <mfiano> Industry doesn't want software engineers. They want brainless, expendable Java "data-entry specialists" because they're cheap.
[10:22:22] <hayley> https://www.youtube.com/watch?v=PhJmanbvrfM
[10:22:23] -ixelp- Engineers - YouTube
[10:22:27] <gilberth> You get what you pay for.
[10:24:16] <gilberth> Anecdote: My wife uses two different applications for her work. One is written in Basic (sic!), the other in Java. Guess which one has gazillion of bugs and turns out to be unreliable.
[10:25:05] <gilberth> The other works like a charm.
[10:26:23] * hayley decides to go hunting paper references.
[10:27:09] <mfiano> I used to be sub-contractor for various commercial hardware vendors. Little known fact, nearly every point-of-sale machine in the US, perhaps even abroad, runs Java.
[10:27:22] <hayley> "Code layout optimization" seems to be a common term too.
[10:27:50] <hayley> But I don't want to PGO, I just want non-shit baseline results, like GCC gets.
[10:28:09] <gilberth> mfiano: Those things they use to read debit or credit cards?
[10:28:22] <mfiano> and the machines they interconnect with
[10:29:26] <gilberth> hayley: Then hunt references until at a time where PGO wasn't a thing. Tell me when you reach the 60s.
[10:29:56] <gilberth> mfiano: Well, but those machines usually work.
[10:30:21] <mfiano> That's just an issue of perception
[10:30:28] <mfiano> I had a lot of work when I did that :)
[10:30:46] <gilberth> Perhaps, I always use cash, so I won't notice a malfunction.
[10:32:01] <gilberth> But I can crash one of those "service terminals" next to ATMs in no time. Unintentionally and when bored.
[10:33:41] <gilberth> Bugs haunt me. The follow me everywhere. I just need to look at a machine and there would be a bug exposed. /me shrugs.
[10:51:49] <hayley> Hm, LLVM uses a "block chain" of blocks that are probably a good idea to lay together.
[11:00:11] <hayley> gilberth: SBCL does have a loop analysis pass still.
[11:01:42] <hayley> ...but the results are for IR1 only, and disappear by the time you're working on IR2. Rude.
[11:04:47] <hayley> OTOH IR2 blocks are numbered, and you can find some sort of loop when the successor has a number greater than the predecessor.
[11:35:15] <hayley> Oh, but I get CBLOCKs while doing analysis. /me misread. So perhaps I try to prioritise blocks that remain in a loop.
[11:36:52] * hayley notes that having an undefined function while recompiling the compiler ends up giving you a broken compiler.
[11:53:47] <hayley> Best I can tell, SBCL does a depth-first traversal of basic blocks. I'm trying to pick the ones which will keep us in a loop first.
[11:55:52] <hayley> This eliminates some stupid jumps, but there is still one which goes very far away. Hm.
[12:04:05] <hayley> What if I made this use a priority queue, and gave blocks a "distance" that I'd let them wait for, to prioritise getting straight lines?
[12:04:51] <hayley> ...so anything on the same loop or deeper would be scheduled earlier, and anything exiting the loop would be scheduled later.
[12:15:59] *** Quits: epony (epony@user/epony) (Quit: QUIT)
[12:18:16] *** Joins: epony (epony@user/epony)
[12:38:01] * hayley measures a 1.5% geomean speedup on CL-BENCH
[12:46:18] *** Joins: pjb (~pjb@user/pjb)
[12:49:40] <selwyn> can anything kill email?
[12:50:15] *** Quits: scymtym (~user@ip-94-114-248-79.unity-media.net) (Ping timeout: 256 seconds)
[12:53:18] *** Joins: scymtym (~user@ip-94-114-248-79.unity-media.net)
[13:01:55] <kakuhen> i will kill email
[13:04:03] <epony> no, email is real communication
[13:09:49] <epony> https://en.wikipedia.org/wiki/Simple_Mail_Transfer_Protocol#Original_SMTP
[13:10:54] <hayley> Pop quiz: when is FUN ever non-NIL in https://github.com/no-defun-allowed/swcl/blob/master/src/compiler/control.lisp#L128-L157
[13:10:55] -ixelp- swcl/control.lisp at master · no-defun-allowed/swcl · GitHub
[13:11:14] <hayley> There's a recursive step, where we grab a non-NIL value from recursive calls, but no base case that I can see.
[13:13:05] <hayley> The base case is the first one which calls COMBINATION-LAMBDA. nvm
[13:13:14] <hayley> s/one/COND clause/
[13:22:01] *** Joins: Inline (~Inline@2a02:908:1252:7a80::a2)
[13:41:07] *** Joins: ln43 (~ln43@user/ln43)
[13:42:50] <hayley> Hey, now I've got a half-okay tight loop!
[13:43:42] <hayley> https://plaster.tymoon.eu/view/2805 Not perfect, but I like it.
[13:44:06] <ln43> Hi all
[13:44:11] <selwyn> hi
[13:44:29] <hayley> hi
[13:44:51] <ln43> Hi selwyn, Hi hayley
[13:46:46] <ck_> hello there
[13:47:11] <sham1> Hayo
[13:47:13] <ck_> selwyn: so is it done, are you free, can you go?
[13:47:52] <selwyn> if i test negative later today then i believe i am free
[13:48:47] <selwyn> however, there is no enforcement, only guidance, and it is somewhat difficult to figure out what that is exactly
[13:49:21] <selwyn> the government advice isn't immediately reflected everywhere in the health service
[13:49:29] <selwyn> entirely possible that i have misunderstood something
[13:49:31] <ck_> I see.. you know, sometimes the option to hibernate is very alluring. a shame humans can't do that
[13:50:21] <ck_> on the other hand, who says we can't. I'll phone up an anaesthesiologist right now!
[13:52:52] <selwyn> i wonder how independent the different r values are
[13:53:12] <selwyn> for the different variants
[14:12:32] *** Quits: ln43 (~ln43@user/ln43) (Quit: Connection closed)
[14:38:46] <hayley> Still, the performance improvement due to better block placement isn't 4x like SBCL to GCC is. So there's some other crap happening here.
[14:55:07] * hayley contemplates that bounds checking trick some more.
[15:28:43] <hayley> That didn't seem to be significant either. What the fuck?
[15:38:59] *** Joins: random-nick (~random-ni@87.116.167.125)
[15:55:31] <hayley> And those don't add up to a 4× speedup before someone asks.
[16:10:37] *** Quits: Inline (~Inline@2a02:908:1252:7a80::a2) (Ping timeout: 240 seconds)
[16:17:38] *** Joins: Inline (~Inline@2a02:908:1252:7a80::a2)
[17:01:57] *** Quits: Inline (~Inline@2a02:908:1252:7a80::a2) (Ping timeout: 240 seconds)
[17:10:42] *** Joins: Inline (~Inline@2a02:908:1252:7a80::a2)
[17:39:47] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[17:43:49] *** Quits: Inline (~Inline@2a02:908:1252:7a80::a2) (Ping timeout: 240 seconds)
[17:46:11] <dave0> nite all
[17:47:25] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:50:59] *** Joins: Parker2 (~Parker2@2600:6c5e:2b7f:a3cd:d49a:2ede:47f4:9c39)
[17:51:03] <Parker2> Oi
[18:18:14] *** Quits: Parker2 (~Parker2@2600:6c5e:2b7f:a3cd:d49a:2ede:47f4:9c39) (Quit: Leaving)
[18:35:41] <sham1> iO]
[18:38:53] <selwyn> god damn dropship stole my car
[18:38:56] <selwyn> i never saw that before
[18:40:09] <edgar-rft> your car or what?
[18:46:57] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 240 seconds)
[18:50:13] <selwyn> and i found another bug
[18:50:32] <selwyn> imagine if valve did those hexadecimal checks
[18:50:34] *** Joins: Darzen (~Darzen@2600:6c5e:2b7f:a3cd:d49a:2ede:47f4:9c39)
[18:56:57] *** Quits: Darzen (~Darzen@2600:6c5e:2b7f:a3cd:d49a:2ede:47f4:9c39) (Ping timeout: 240 seconds)
[19:05:54] <gilberth> Good morning #lispcafe!
[19:08:46] <Gnuxie> hi gilberth
[19:37:07] <mfiano> Could someone try running the test suite for the version of :cricket in the latest quicklisp dist please?
[19:39:48] <Catie> Sure I got you
[19:44:32] *** Joins: Darzen (~Darzen@2600:6c5e:2b7f:a3cd:d49a:2ede:47f4:9c39)
[19:44:56] <Darzen> gilberth: This is Parker. I registered my other name.
[19:45:14] <Darzen> To those whom it may concern :)
[19:46:10] <gilberth> Hello Parker, have you seen Parker2?
[19:47:55] <ck_> Parker Lewis ?
[19:52:50] <Darzen> gilberth: I am parker2. I apoligize for not specifying. I don't do well with number names.
[19:53:42] <Darzen> you see, Parker is my real name but somebody already took it. Oh well, maybe next time.
[19:53:54] <gilberth> Heh, I am bad with names. Would be easier for me when all people would just carry a number.
[19:54:28] <gilberth> Darzen: Well, guess where the 'h' in my nick comes from.
[19:56:47] *** Joins: treflip (~user@user/treflip)
[19:57:34] <Darzen> gilberth: The shadow lands of "some dude from 1997 registered my name before I was even born".
[19:58:08] <Darzen> Thankfully Darzen is easy to remember and it's rare to see. That's why I use it everywhere.
[19:58:39] <Darzen> I think I punched my real name into a Trill name generator and this popped out :/
[19:59:26] <gilberth> You could have been quick as freenode folded and registered with libera.
[19:59:50] <gilberth> Darzen: You still have not guessed where the 'h' comes from.
[20:00:12] <Darzen> "Gilbert Harrison"
[20:00:43] <Darzen> Your love for hot chocolate? Tortillas? Chicks?
[20:01:01] <Darzen> I can go on.
[20:01:11] <gilberth> No, it's not a surname. Hint: At what channel are we?
[20:01:30] <Darzen> lispcafe
[20:01:43] <Darzen> LisphCafe?
[20:01:54] <gilberth> Yes. And?
[20:02:55] <Darzen> Bertha? I am out of creativity.
[20:04:08] <gilberth> Ok. I solve. "gilbert" was taken as I wanted to register. Someone was quicker and stole that name. So I needed some modification. I realized that we all lisp, don't we? So when you lisp, "gilbert" turns out as "gilberth".
[20:05:05] <Darzen> I don't know what a lisp is. Shall I research?
[20:05:17] <gilberth> A speech defect.
[20:06:34] <Darzen> Must I have the impediment to be qualified for this channel? Or does that mean you guys din't care if i mispel words
[20:07:44] <gilberth> Heh. No, we are fine with any kind of Lisp.
[20:08:02] <Darzen> Nice i laik that
[20:08:32] <Darzen> I probably had a lisp at one point. I recall taking many months of speech therapy lessons.
[20:09:08] <Darzen> Do I want to know what "emacsomancer" means or not?
[20:10:23] <gilberth> Well, English spelling in general is strange. I mean, can't words just be spelled like they are pronounced? When learning English you have to memorize each words pronunciation. In general you can guess from the spelling, but there are many exceptions. I still struggle with that.
[20:11:42] <Darzen> I once learned Cherokee for that reason in part. Their words are spelled exactly how they are pronounced. Most words are unique, and therefore the spelling is unique too. People are taught to read by pronounciation, not memorization.
[20:12:32] <Darzen> Someone should start a channel where people can only type in their words how they sound.
[20:12:45] <Darzen> No doubt, some letters may become defunct.
[20:13:00] <Darzen> C, replaced with K and S
[20:14:12] <Darzen> Persunaly I laik chokolet donuts with kreem filing
[20:15:11] <gilberth> You would need letters for the 'th's. But there is "þ".
[20:15:20] <Darzen> "wahcht-ower"
[20:15:39] <Darzen> Unfortunately, that is not on my keyboard.
[20:16:34] <Alfr> Good morning, gilberþ.
[20:16:42] <Darzen> Or just speak Pidgin English
[20:17:02] <Alfr> ... and to anybody else visiting as well.
[20:17:13] <Darzen> wusap
[20:17:18] <gilberth> So it would be "Ei leik shoklaet donuts wiþ kreem fillin."
[20:18:01] <gilberth> Yes, and you would need two thorn characters, when you really want to go the phonetic spelling route. One for the voiced th and one for the unvoiced.
[20:19:49] <Darzen> Wail eye kood aways star-h tiypin wiþ uh suthurn aksent
[20:20:11] <Darzen> Darn it I forgot the þ
[20:20:45] <Darzen> Honestly this takes longer than just spelling correctly. I'll stick to this.
[20:21:05] <Darzen> Now if I could improve my grammar....
[20:21:26] <gilberth> The southern accent is not easy to get. I wonder if that is a general rule that the more south you are raised the lazier you pronounce.
[20:21:34] <Darzen> Do y'all read notation?
[20:22:25] <gilberth> What do you mean by notation? And, correct spelling is in the muscle memory.
[20:23:26] <Darzen> I live in North Carolina. Honestly, I grew up with people from locale, Florida, New york, California, the midwest, among other places. My natural tendancy is to speak with a slight southern accent with some northern mixed in. I can also fluently speak with a Polish accent apparently.
[20:23:50] <Darzen> I don't get Canadian though.
[20:23:59] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:5d5c:8c41:79c4:9b80) (Ping timeout: 250 seconds)
[20:25:55] <selwyn> i have found out recently that not all languages that claim to be pronounced the way they are spelled actually satisfy that claim
[20:27:16] *** Joins: euandreh (~euandreh@191.181.59.160)
[20:28:40] <Darzen> I would say, that the "Southern accent" is just like any other, though it does seem to fein towards the stronger of the bunch found on the land. If I meet someone from Alabama, I can talk to them in their native dialect, and just as quickly switch to Indiana speak. Naturally, I speak with a slight southern drawl, but when i speak or read in public, it tends towards a mid atlantic with strong pronounciation. The last is a side 
[20:28:41] <Darzen> effect of training though, because a large group can't fully understand all of the words when i speak normally.
[20:29:20] <selwyn> cherokee must have been challenging
[20:29:22] <gilberth> As we watched "Star Trek Enterprise" we just couldn't get what this Trip character mumbled. It was like "Did you get what he said?" "No" *rewind* "Wat?" *rewind* "Now?" "No way!" *rewind* *mumblemumble* "Ok, I punt, let's continue watching". With time we got used to it. Watching series is good for learning listening, as it is the same characters all the time.
[20:29:23] <Darzen> I "muffle" my words unintentionally.
[20:29:40] <Darzen> I loved trip
[20:29:47] <Darzen> That's my boy right there
[20:30:01] <Darzen> I've got a neighbor from Florida that sounds about like him.
[20:30:37] <gilberth> Danish is a particular example. You just can't get it. It's easy to speak though. Just gulp about three beers, that should do.
[20:30:49] <Darzen> Cherokee was a bit challenging. I gave up after a time because the speaking base is so small that it's almost pointless.
[20:31:37] <gilberth> Darzen: It would help when those people from Florida would take the potato out of their month before speaking. Awful.
[20:31:40] <Darzen> I don't know about Danish, but I can understand the overall topic spoken in Dutch, and maintain basic communication. German? Sheesh.
[20:32:14] <Darzen> gilberth: More like chicken livers and fried catfish.
[20:33:26] <gilberth> Darzen: https://www.youtube.com/watch?v=s-mOy8VUEBk
[20:33:27] -ixelp- Danish language - YouTube
[20:34:14] <Darzen> I like Danish pastries from the gas station
[20:36:52] <Darzen> gilberth, May I ask what generation you're a part of? That may be a bit too personal. If so, not a problem.
[20:38:43] <gilberth> Curious, why you ask?
[20:41:47] <Darzen> I used to have a good friend I talked to on here, Steve was his name. He was 59 years old. He died of cancer in 2017. You remind me of him a bit, that is all. 
[20:42:18] <Darzen> In fact he was a Florida dweller
[20:43:01] <gilberth> I am bit younger than that.
[20:44:26] <Darzen> You strike me as a young person, but I rarely talk to anyone under 50 who doesn't resort to name calling and arguments. Your attitude seems well developed.
[20:45:59] <gilberth> I take that as a compliment. It's no secret, I was told I was born 1974. But that is hearsay for I don't remember.
[20:46:47] <Darzen> You were told? I have never heard that before... 
[20:47:14] <Darzen> My favorite car is a 1970 LTD 2 door pop top in black with leather interior
[20:47:15] <gilberth> As I said, I don't recall reading the calendar on that day.
[20:47:23] <Darzen> And the folding headlights.
[20:48:40] <Darzen> I, however, drive a 2008 Crown Victoria in grey with utility cloth interior. Fuel economy is a nice thing to have.
[20:50:14] <Darzen> https://postimg.cc/njwxqqWd
[20:50:15] -ixelp- RDT 20210829 1730186620041936145568643 — Postimages
[20:51:23] <Darzen> I moved that gaudy antenna to the side of the trunk instead of right in the middle. I'll have you know, that car ridess so much smoother than my old toyota rav4.
[20:54:21] <Darzen> https://postimg.cc/KRGVm1sj
[20:54:22] -ixelp- 20210420 180343 — Postimages
[20:55:33] <Darzen> That was my car before i painted it. I bought a pack of foam rollers, a $25 gallon of rustoleum, and some acetone and that thing looks pretty good. I did it out of necessity because the roof was rusting badly. Also I love grey.
[21:02:15] <gilberth> I am not into cars. But for what it's worth I drive a Mini Cooper.
[21:05:28] <Darzen> Oh brother you got the wrong end of the spectrum. I gotta have big, long, wide, floaty. There's nothing like a Lincoln Town Car to put me in the mood to cruise.
[21:09:00] <gilberth> I don't like big cars. For one thing finding a place to park the car is difficult enough. No need to make it any harder by having a big car.
[21:12:38] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[21:13:48] <gilberth> And I like to go fast, so very precise steering and a low center of mass is key.
[21:15:49] <selwyn> another negative result
[21:16:29] <ck_> 🎉
[21:19:08] <Darzen> I live out in the middle of nowhere. 18 miles to the grocery store. Comfort here is key, I honestly don't know how all these young people drive their subarus and japanese fart cans without getting bulgind disks
[21:20:22] <ck_> they don't drive them on country roads west virginia I presume
[21:20:27] <ck_> that's probably a big part of it
[21:21:55] <gilberth> Darzen: Comfort is not defined by sheer size. And I can't imagine going like 240km/h with the car of yours. :-p
[21:22:16] <pjb> gilberth: with reinforced shock absorbers?
[21:22:32] <pjb> (to carry the gold ingots to lower the center of mass)
[21:22:56] <gilberth> pjb: Heh, no.
[21:23:36] <Darzen> ck_ I don't know about WV but in WNC a big thing is lifted trucks with wheel spacers. It's like the boys are measuring their foot size (or lack of it) by how far into the other lane their wheels can stick out without running themselves or other people off of the road.
[21:25:29] <Darzen> pjb just get a town car. It has air suspension and a huge trunk so you can shove as much gold in the back as you want without sagging.
[21:27:18] <ck_> selwyn: also I hope you dropped the paper with the appropriate amount of scientific rigor, and a clint eastwood impression of "hypothesis .. rejected"
[21:28:11] <selwyn> its being announced on the arxiv in a few hours
[21:28:39] <ck_> :)
[21:32:04] <ck_> beware of reviewer 1, that's always the tough guy
[21:32:36] <selwyn> we haven't even decided on a journal yet
[21:33:20] <ck_> with a breakthrough of this magnitude, maybe it's best to bring your own one into being
[21:33:48] <selwyn> hm
[21:34:06] <selwyn> starting a journal in order to publish your own stuff
[21:34:11] <selwyn> is an admittedly powerful move
[21:35:32] <ck_> you could extend readership by including a section for personal ads
[21:35:42] <ck_> I don't know the word but I know there is one for this, help me out here please
[21:36:01] <ck_> casuals? confidentials?
[21:36:13] <selwyn> the first academic journal with nsfw ads
[21:36:16] <selwyn> i'll be rich
[21:37:00] <ck_> I mean the section with headlines like "women looking for men" ... "women looking for women" and so on
[21:37:09] <ck_> personals?
[21:38:26] <selwyn> yeah those are personals
[21:39:58] <ck_> and in general? like "selling parts for a 1962 Chevrolet Corvette, call ..."
[21:41:45] <selwyn> i think those are personals as well?
[21:42:29] <ck_> I had to walk through a doorway to remember
[21:42:29] <pl> nope
[21:42:32] <ck_> "Classifieds"
[21:42:34] <pl> ^
[21:42:47] <pl> personals are explicitly about person looking for person
[21:43:07] <selwyn> you can call them lonely hearts as well
[21:43:12] <selwyn> but this seems to be only in britain
[21:49:55] <gilberth> Oh dear. Benchmarking is fun. When I apply loop unrolling like gcc does, SBCL and CCL scan at 1.7GC/s, while gcc-11.1 -O3 w/o PGO is at 1.5GB/s. But these results are fragile. I guess we enter the realm where cache alignment becomes an issue.
[21:50:28] <gilberth> It also is the case that at times CCL is faster than SBCL, at other times it's the reverse.
[21:51:34] <gilberth> Heh, and this time ECL wins with 2GC/s.
[21:52:01] <gilberth> Does ecl respect $CC?
[21:55:18] <gilberth> Doesn't make much sense. Hmm.
[21:55:42] <moon-child> yeah that is weird.  Perhaps ecl is cheating somehow?  Do the results check out?
[21:55:50] <robin> Darzen, cherokee is brilliant, at least orthographically (i imagine it's quite difficult to learn being polysynthetic). i was sad when i visited cherokee county or thereabouts and there were "cherokee" signs that i eventually realized were only spelling english with lookalike letters, for tourists i guess
[21:56:39] <gilberth> moon-child: They do. I must be missing something.
[21:57:18] <robin> only 7% of the NC cherokee population speaks it, mostly older people, which i imagine makes it an endangered language locally, though there are language-immersion programs for students which might help
[21:58:11] <gilberth> moon-child: It is more so puzzling as the C code scans chars, while the Lisp code scans CHARACTERs.
[22:00:22] <gilberth> And at times I see better results with CMUCL.
[22:00:38] <moon-child> maybe you unroll, and then gcc unrolls further what ecl hands it?  What happens if you unroll further?
[22:01:15] <gilberth> I guess the margin induced by cache effects (alignment) are large.
[22:01:35] <gilberth> moon-child: Sharp thinking!
[22:02:19] <gilberth> But I tried that with SBCL and CCL. Unrolling eightfold instead of fourfold doesn't buy me anything.
[22:02:37] <moon-child> ok
[22:03:03] <gilberth> But that might be a different story with gcc. I need to check that and unroll manually with C as well.
[22:03:37] <moon-child> have you looked at the code ecl generates?
[22:04:10] <gilberth> It must buy sth. Because with PGO gcc does more unrolling than without. And the 2.4GB peak or so, I only see with PGO.
[22:04:52] <gilberth> moon-child: Not yet. I need more coffee.
[22:15:46] *** Quits: treflip (~user@user/treflip) (Quit: good night)
[22:18:41] *** Quits: Darzen (~Darzen@2600:6c5e:2b7f:a3cd:d49a:2ede:47f4:9c39) (Ping timeout: 268 seconds)
[22:22:17] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 240 seconds)
[22:24:42] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[22:39:32] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[22:40:15] <sm2n> https://www.kernel.org/doc/html/latest/livepatch/livepatch.html
[22:40:15] -ixelp- Livepatch — The Linux Kernel documentation
[22:40:21] <sm2n> something something greenspunning
[22:40:49] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[22:40:53] <sm2n> that consistency model seems woefully incomplete for something you would want to use in a high-integrity environment
[22:49:03] <pl> sm2n: in high-integrity environment, you're not going to use livepatch most of the time
[22:50:15] <sm2n> well yes, and that's a shame
[22:53:09] <pl> for high integrity live update, you'd more likely have live update in erlang style
[22:53:27] <pl> i.e. explicit synchronisation points and replacement of processes
[23:46:40] *** Joins: rotateq (~user@185.66.193.48)
[23:57:16] <gilberth> Oh dear. Omicron is approaching fast, it seems.
[23:58:17] <gilberth> The official numbers are highly unreliable because of Christmas. Odd priorities.
