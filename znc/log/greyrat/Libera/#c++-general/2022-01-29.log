[00:01:39] *** Joins: fukuda (~fukuda@2804:431:c7f5:a3c3:944d:fee1:2147:96a4)
[00:03:33] *** climax is now known as gentooclimax
[00:13:51] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[00:15:56] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 250 seconds)
[00:24:28] *** Quits: fukuda (~fukuda@2804:431:c7f5:a3c3:944d:fee1:2147:96a4) (Ping timeout: 268 seconds)
[00:25:23] *** Joins: fukuda (~fukuda@2804:431:c7f5:a3c3:944d:fee1:2147:96a4)
[00:30:50] *** Quits: gentooclimax (~gentoocli@2a02-8440-6440-1beb-e1b7-a79a-cff9-1dbe.rev.sfr.net) (Remote host closed the connection)
[00:30:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[00:31:50] *** Joins: gentooclimax (~gentoocli@2a02-8440-6440-1beb-e1b7-a79a-cff9-1dbe.rev.sfr.net)
[00:34:19] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[00:34:29] *** Joins: sbrothy (~sbrothy@192038134036.mbb.telenor.dk)
[00:37:30] *** Joins: RoKenn (~RoKenn@2001:a61:35b1:ca01:9741:2b01:da23:5b5)
[00:37:31] *** Quits: RoKenn (~RoKenn@2001:a61:35b1:ca01:9741:2b01:da23:5b5) (Changing host)
[00:37:31] *** Joins: RoKenn (~RoKenn@user/rokenn)
[00:41:35] *** Joins: markong (~kvirc@213.146.188.203)
[00:42:36] *** Quits: gentooclimax (~gentoocli@2a02-8440-6440-1beb-e1b7-a79a-cff9-1dbe.rev.sfr.net) (Quit: Konversation terminated!)
[00:43:44] *** Joins: gentooclimax (~gentoocli@2a02-8440-6440-1beb-e1b7-a79a-cff9-1dbe.rev.sfr.net)
[00:55:17] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[00:57:00] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[01:00:31] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[01:01:50] *** Quits: chris64 (~chris@user/chris64) (Quit: leaving)
[01:03:13] <kalven> Kerr: the "appropriate" solution is to run the simulation at a fixed rate and use interpolation for the rendering
[01:04:37] *** Quits: gentooclimax (~gentoocli@2a02-8440-6440-1beb-e1b7-a79a-cff9-1dbe.rev.sfr.net) (Ping timeout: 240 seconds)
[01:06:51] <Kerr> I suppose I might also add that I'm using SDL for the rendering, and SDL_RenderPresent() which swaps the frame buffer, always blocks for vsync. If I'm wiritng the program single-threaded then I can't be guarenteed how long SDL_RenderPresent will take
[01:07:00] <Kerr> *writing
[01:09:02] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[01:09:25] <kalven> I recommend this article: https://gafferongames.com/post/fix_your_timestep/
[01:10:01] <LordKalma> valve solves this in their engines by just running a server at a constant tick rate
[01:10:49] <kalven> doing physics/logic at a fixed rate is indeed good
[01:13:17] <LordKalma> in Half Life 1 speedrunning changing the tick-rate is allowed
[01:13:53] <LordKalma> it allows some funny tricks. for example, they lower it to like 4tps/fps/whatever to avoid laser mines
[01:14:16] <LordKalma> because basically in frame n you're before the laser mine, and i n n+1 you're after it
[01:14:31] <LordKalma> your hitbox is never computed to be hitting the laser
[01:16:17] *** Quits: andreasbuhr (~quassel@p548dde8f.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:17:56] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[01:18:50] <Kerr> that's neat
[01:19:09] *** Joins: kilitary (~kilitary@188.242.187.4)
[01:21:57] <LordKalma> https://youtu.be/mvH9mwkvWIU?t=794 it's what happens here. Don't blink
[01:25:40] *** Quits: robod34 (~Username@79.113.195.239) (Quit: Goe offline! ( http://marius.sucan.ro/ ))
[01:29:31] *** Joins: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de)
[01:30:04] *** Joins: Uswald (~leandre@2a01cb040075f9004db5e088b964b91a.ipv6.abo.wanadoo.fr)
[01:30:04] *** Quits: Uswald (~leandre@2a01cb040075f9004db5e088b964b91a.ipv6.abo.wanadoo.fr) (Changing host)
[01:30:04] *** Joins: Uswald (~leandre@user/Uswald)
[01:30:06] <Kerr> I kept watching after the spot. now I feel nauseous lol
[01:30:18] <Kerr> also, that poor game's physics engine
[01:30:33] <cbreak> web devs that specify font sizes in px should be fired.
[01:30:35] <Kerr> kalven: I do appreciate the article
[01:31:41] *** Joins: c4017w (~c4017@209.52.68.8)
[01:34:22] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 250 seconds)
[01:34:48] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[01:35:31] *** Joins: MatSharrow (~matthew@117.20.9.51.dyn.plus.net)
[01:35:38] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[01:41:24] *** Quits: hexingb (~hexingb@111.32.64.60) (Ping timeout: 256 seconds)
[01:41:40] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:41:48] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:41:48] *** ChanServ sets mode: +v npaperbot
[01:46:07] *** Joins: jkaye (~jkaye@2601:281:8300:7530:1596:ed69:814a:f0eb)
[01:49:20] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 256 seconds)
[01:54:09] *** Quits: jkaye (~jkaye@2601:281:8300:7530:1596:ed69:814a:f0eb) (Quit: Leaving)
[01:54:31] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:ade4:669:9939:72f3) (Ping timeout: 245 seconds)
[01:57:45] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[02:00:37] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:4174:ac1c:e6ad:68b5)
[02:03:04] *** Joins: bobb_ (~bobb_@dslb-088-066-146-084.088.066.pools.vodafone-ip.de)
[02:19:02] *** Quits: nojhan (uid443807@id-443807.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[02:23:12] *** Joins: Tobbi__ (~Tobbi@2a02:8108:1240:48ec:1cf4:b504:d97f:804d)
[02:23:36] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[02:24:22] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:4174:ac1c:e6ad:68b5) (Ping timeout: 260 seconds)
[02:25:17] *** Tobbi__ is now known as Tobbi
[02:25:38] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[02:27:01] *** Quits: kilitary (~kilitary@188.242.187.4) (Remote host closed the connection)
[02:30:21] *** Quits: fukuda (~fukuda@2804:431:c7f5:a3c3:944d:fee1:2147:96a4) (Ping timeout: 245 seconds)
[02:31:08] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[02:31:15] *** Joins: fukuda (~fukuda@2804:431:c7f5:a3c3:9fdb:d7d3:c39f:3ce6)
[02:32:42] *** Joins: c4017w_ (~c4017@209.52.68.8)
[02:35:37] *** Quits: CalamityBlue (~CalamityB@cpe-108-185-144-94.socal.res.rr.com) (Ping timeout: 240 seconds)
[02:35:48] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[02:36:48] *** Quits: adeliktas78 (~adeliktas@v15153.1blu.de) (Quit: Ping timeout (120 seconds))
[02:37:02] *** Joins: adeliktas7 (~adeliktas@v15153.1blu.de)
[02:46:37] *** Quits: kraa (~kraa@107-190-7-216.cpe.teksavvy.com) (Ping timeout: 240 seconds)
[02:50:04] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[02:51:29] *** Joins: hexingb (~hexingb@111.32.64.60)
[02:54:26] *** Quits: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_1)
[02:54:40] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[03:05:56] *** Joins: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[03:06:03] <hnOsmium0001[m]> isn't both px and pt in CSS DPI independent?
[03:06:17] <hnOsmium0001[m]> so you only have to multiply by a constant factor to get from px to pt
[03:08:52] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[03:09:14] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[03:09:14] *** Quits: spaceangel_ (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[03:09:44] <kalven> yep
[03:10:32] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[03:14:27] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[03:15:26] *** Joins: ferdna (~ferdna@user/ferdna)
[03:26:48] *** Quits: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net) (Ping timeout: 256 seconds)
[03:28:58] *** Quits: Kerr (~AdminUser@2601:602:ce01:1f0:2e92:133b:16d9:1409) (Remote host closed the connection)
[03:33:22] *** Joins: c4017w__ (~c4017@209.52.68.8)
[03:37:00] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[03:39:27] *** Quits: Simplar (~Simplar@188.163.93.241) (Quit: Going offline, see ya! (www.adiirc.com))
[03:45:17] *** Quits: bobb_ (~bobb_@dslb-088-066-146-084.088.066.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[03:54:05] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[03:56:29] *** Joins: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[04:00:48] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 256 seconds)
[04:03:59] *** Joins: seninha (~seninha@user/seninha)
[04:05:18] *** Quits: seninha (~seninha@user/seninha) (Client Quit)
[04:05:38] *** Joins: seninha (~seninha@user/seninha)
[04:06:16] *** Quits: DSpider (~DSpider@82.79.237.117) (Quit: Leaving)
[04:07:33] *** Quits: magla (~gelignite@55d49292.access.ecotel.net) (Quit: Stay safe!)
[04:09:01] *** Quits: Uswald (~leandre@user/Uswald) (Ping timeout: 240 seconds)
[04:12:26] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[04:20:04] *** Quits: hexingb (~hexingb@111.32.64.60) (Ping timeout: 256 seconds)
[04:22:34] *** Joins: hexingb (~hexingb@60.10.254.229)
[04:23:36] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:1cf4:b504:d97f:804d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:24:17] *** Quits: MatSharrow (~matthew@117.20.9.51.dyn.plus.net) (Ping timeout: 240 seconds)
[04:25:26] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Remote host closed the connection)
[04:33:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:35:11] *** Joins: proller (~p@80.240.216.69)
[04:35:46] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Quit: Hello71)
[04:36:11] *** Quits: Burgundy (~NA@86.121.143.206) (Ping timeout: 245 seconds)
[04:37:04] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 256 seconds)
[04:37:17] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[04:40:28] *** Quits: hexingb (~hexingb@60.10.254.229) (Ping timeout: 256 seconds)
[04:40:51] *** Joins: hexingb (~hexingb@111.32.64.60)
[04:43:48] *** Joins: zmt01 (~zmt00@user/zmt00)
[04:46:57] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[04:47:19] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[04:49:37] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293) (Ping timeout: 240 seconds)
[05:02:00] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 256 seconds)
[05:02:57] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 240 seconds)
[05:10:13] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[05:22:57] *** Quits: pieguy128 (~pieguy128@bas8-montreal02-65-93-195-202.dsl.bell.ca) (Ping timeout: 240 seconds)
[05:32:56] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-37-70-24-250-178.dsl.bell.ca)
[05:34:22] *** Joins: c4017w__ (~c4017@209.52.68.8)
[05:37:54] *** Quits: sh00p (~z@h-213-164-223-180.A498.priv.bahnhof.se) (Ping timeout: 250 seconds)
[05:38:16] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[05:39:49] *** Joins: nshire (~nshire@user/nshire)
[05:41:24] *** Quits: AmR (~AmREiSa@156.207.146.251) (Quit: Konversation terminated!)
[05:41:41] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:41:48] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:41:48] *** ChanServ sets mode: +v npaperbot
[05:43:20] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[05:45:07] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[05:49:31] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[05:50:10] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[05:51:30] *** Joins: kraa (~kraa@107-190-7-216.cpe.teksavvy.com)
[05:51:55] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[05:52:10] *** Joins: gbona (~gbona@95.168.168.180)
[06:07:54] *** Quits: hexingb (~hexingb@111.32.64.60) (Ping timeout: 260 seconds)
[06:08:17] *** Joins: Kerr (~quassel@2601:602:ce01:1f0:f230:d70f:f8db:83c0)
[06:15:44] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:25:11] *** Joins: hexingb (~hexingb@111.32.64.60)
[06:26:36] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[06:31:02] *** Quits: Tokamak (~Tokamak@172.58.188.93) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:31:33] *** Joins: Tokamak (~Tokamak@172.58.188.93)
[06:34:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[06:38:20] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[06:41:12] *** Joins: Tokamak_ (~Tokamak@mobile-166-170-29-24.mycingular.net)
[06:42:18] *** Quits: Tokamak (~Tokamak@172.58.188.93) (Ping timeout: 256 seconds)
[06:42:22] *** Quits: kraa (~kraa@107-190-7-216.cpe.teksavvy.com) (Quit: Leaving)
[06:50:51] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[06:59:08] *** Quits: sbrothy (~sbrothy@192038134036.mbb.telenor.dk) (Read error: No route to host)
[07:01:03] *** Quits: Tokamak_ (~Tokamak@mobile-166-170-29-24.mycingular.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:05:46] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 260 seconds)
[07:06:01] *** Joins: adeliktas5 (~adeliktas@i59F527F1.versanet.de)
[07:06:58] <very_sneaky> heh. artifactory actually provides some pretty good solutions for managing my own conan packages. I'm surprised it works as well as it does
[07:07:57] *** Quits: adeliktas (~adeliktas@i59F4DEFF.versanet.de) (Ping timeout: 240 seconds)
[07:07:57] *** adeliktas5 is now known as adeliktas
[07:08:03] <very_sneaky> i like that i can cache the packages i download from the conan center index, and also upload binary builds for configurations using their recipes for configurations they don't build for - pretty clean association model using a virtual repository
[07:08:59] *** Joins: PJBoy (~PJBoy@user/pjboy)
[07:12:27] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[07:18:18] *** Quits: Juliu_ (~Juliu@2a02:810b:c640:3ec0:606b:5910:1e37:5939) (Quit: Quit)
[07:27:11] *** Joins: Tokamak (~Tokamak@mobile-166-170-29-24.mycingular.net)
[07:27:49] *** Quits: fukuda (~fukuda@2804:431:c7f5:a3c3:9fdb:d7d3:c39f:3ce6) (Quit: WeeChat 3.4)
[07:27:54] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[07:29:57] *** Quits: chozorho (~chozorho@2601:146:300:c30::8314) (Ping timeout: 240 seconds)
[07:30:28] *** Quits: hexingb (~hexingb@111.32.64.60) (Ping timeout: 256 seconds)
[07:31:03] *** Joins: chozorho (~chozorho@2601:146:300:c30::f5e)
[07:35:22] *** Joins: c4017w__ (~c4017@209.52.68.8)
[07:38:58] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[07:44:29] *** Joins: hexingb (~hexingb@36.155.28.147)
[07:50:04] *** Quits: Tokamak (~Tokamak@mobile-166-170-29-24.mycingular.net) (Ping timeout: 250 seconds)
[07:54:37] *** Joins: Tokamak (~Tokamak@mobile-166-170-29-24.mycingular.net)
[07:56:00] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[07:56:36] *** Quits: hexingb (~hexingb@36.155.28.147) (Read error: Connection reset by peer)
[07:56:51] *** Joins: hexingb (~hexingb@36.155.28.147)
[07:59:57] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[08:00:57] *** Quits: hexingb (~hexingb@36.155.28.147) (Ping timeout: 240 seconds)
[08:01:22] *** Joins: hexingb (~hexingb@36.155.28.147)
[08:03:07] *** Joins: Tokamak_ (~Tokamak@172.58.188.93)
[08:03:35] <smallville7123> https://wandbox.org/permlink/TMwTcMIlvnqArQXc why do i get this?
[08:05:02] *** Quits: Tokamak (~Tokamak@mobile-166-170-29-24.mycingular.net) (Ping timeout: 256 seconds)
[08:05:51] *** Quits: hexingb (~hexingb@36.155.28.147) (Ping timeout: 250 seconds)
[08:07:37] <kalven> you seem to be going out of range.. use a debugger
[08:08:00] *** Joins: hexingb (~hexingb@2409:8902:78c7:6d8:9831:a942:21ba:71c0)
[08:11:40] <smallville7123> yes but i dont know why
[08:13:22] <kalven> use a a debugger and break when the exception is thrown
[08:18:39] *** Quits: hexingb (~hexingb@2409:8902:78c7:6d8:9831:a942:21ba:71c0) (Ping timeout: 250 seconds)
[08:28:15] <smallville7123> its throwing at `input.erase(start, iterator.current());` but i dont know why
[08:29:17] *** Quits: jsbach_ (~jsbach@2a01:c23:602d:e800:794f:4e72:9033:7177) (Ping timeout: 252 seconds)
[08:30:17] <kalven> I'm gonna go out on a limb and say that the args are bad
[08:32:30] *** Quits: ville (~ville@user/ville) (Quit: ville)
[08:33:13] <smallville7123> i get
[08:33:17] <smallville7123>   iteratorCurrent = (item = '\0')
[08:33:17] <smallville7123>   iteratorEnd = (item = '\0')
[08:33:31] <smallville7123> but `iteratorCurrent != iteratorEnd` returns true
[08:34:54] <smallville7123> and lldb wont let me do iterator.iteratorCurrent == iterator.iteratorEnd
[08:35:02] <smallville7123> note: candidate function not viable: no known conversion from 'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::const_iterator' (aka 'std::__1::__wrap_iter<const char *>') to 'const std::__1::__deque_iterator<std::__1::__wrap_iter<const char *>, std::__1::__wrap_iter<const char *> *, std::__1::__wrap_iter<const char *> &, std::__1::__wrap_iter<const char *> **, long
[08:35:02] <smallville7123> , 512>' for 1st argument
[08:36:05] *** Joins: ville (~ville@user/ville)
[08:36:11] *** Joins: c4017w (~c4017@209.52.68.8)
[08:37:12] *** Joins: ferdna (~ferdna@user/ferdna)
[08:37:25] <kalven> okay.. well one of those seeems to be a deque iterator
[08:38:18] <smallville7123> (lldb) p iterator.iteratorCurrent == iterator.iteratorEnd
[08:38:19] <smallville7123> error: <user expression 14>:1:26: invalid operands to binary expression ('std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::const_iterator' (aka 'std::__1::__wrap_iter<const char *>') and 'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::const_iterator')
[08:39:26] <ville> !give smallville7123 testcase
[08:39:27] <nolyc> smallville7123: A testcase is the _least_ amount of code that replicates your problem, paste it to https://wandbox.org/ then: 1) click run 2) click share 3) click url and 4) paste the url for us. You _must_ use that website. Do _not_ use a different website. Do _not_ paste code to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
[08:39:36] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[08:41:37] *** Joins: jsbach_ (~jsbach@2a01:c22:3497:1a00:a44e:623a:c259:ecb7)
[08:41:53] *** Joins: hexingb (~hexingb@60.10.254.229)
[08:48:13] *** Quits: Tokamak_ (~Tokamak@172.58.188.93) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:57:12] <smallville7123> i think i know why
[08:57:28] <smallville7123> it is because i am storing a copy of the begin and end iterators
[08:58:03] <smallville7123> so if i erase the string then the end iterator will be not be equal to the string's end iterator
[08:58:30] <smallville7123> eg Assertion `i2.end() == a2.cend()' failed.
[08:58:57] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[09:00:00] <smallville7123> making it `const std::string::const_iterator & iteratorEnd` doesnt work either :(
[09:00:11] <smallville7123> how can i store a reference to cend() ?
[09:00:29] <smallville7123> and not a copy of it
[09:00:59] *** purplex_ is now known as purplex
[09:02:15] <kalven> why would you want to?
[09:03:37] <smallville7123> so i dont have to keep a reference to the string itself, just its iterators
[09:03:58] <kalven> okay, but why?
[09:04:32] <smallville7123> so my class can work with any iterator
[09:05:14] <kalven> you can hold a reference to anything that has a .cend()
[09:05:29] <smallville7123> eg it does not need a reference to both vector and string if only a string iterator is wanted
[09:05:59] <ville> http://www.eelis.net/c++draft/strings#string.require-4
[09:06:44] <kalven> where does the vector come from??
[09:06:47] <smallville7123> how do i make a template class that accepts any class that provides cbegin and cend iterators?
[09:08:12] <kalven> you can just take a template arg T.. if you call .cend on something that doesn't have it, you'll get an error
[09:08:24] <kalven> if you *really* need to constrain it, there are concepts in c++20
[09:08:53] <smallville7123> alright
[09:09:04] *** Quits: artok (~azo@mobile-access-b04849-185.dhcp.inet.fi) (Ping timeout: 256 seconds)
[09:10:22] *** Quits: tm604 (~tom@perlsite.default.entitypark.uk0.bigv.io) (Ping timeout: 260 seconds)
[09:14:21] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[09:15:52] *** Quits: hexingb (~hexingb@60.10.254.229) (Ping timeout: 256 seconds)
[09:17:37] <smallville7123> yay
[09:17:43] <smallville7123> https://wandbox.org/permlink/tRomCDRMn43F1Jy3
[09:21:10] *** Joins: hexingb (~hexingb@111.32.64.60)
[09:28:02] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[09:31:10] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:36:50] *** Joins: c4017w_ (~c4017@209.52.68.8)
[09:40:17] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[09:41:41] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:41:49] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:41:49] *** ChanServ sets mode: +v npaperbot
[09:42:53] *** Quits: chozorho (~chozorho@2601:146:300:c30::f5e) (Quit: good night)
[09:44:07] *** Joins: gbona_ (~gbona@180.251.177.103)
[09:44:21] *** Joins: ben_ (~ben@host-204-118-069-229.dhcp.fewpb.net)
[09:45:29] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[09:47:36] *** Quits: gbona (~gbona@95.168.168.180) (Ping timeout: 256 seconds)
[09:52:01] *** Quits: emerent (~quassel@p200300cd57044332ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[09:52:25] *** Joins: emerent (~quassel@p200300cd5704439cba27ebfffed28a59.dip0.t-ipconnect.de)
[10:13:29] *** Joins: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::46)
[10:14:41] *** Quits: ben_ (~ben@host-204-118-069-229.dhcp.fewpb.net) (Quit: ben_)
[10:37:22] *** Joins: c4017w__ (~c4017@209.52.68.8)
[10:40:20] *** Joins: supernova (~quassel@2405:9800:ba11:6207:dc8a:3f0c:1142:cc21)
[10:40:52] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[10:43:41] *** Joins: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net)
[10:49:39] *** Joins: kilitary (~kilitary@188.242.187.4)
[10:51:57] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[10:51:59] *** Joins: artok (~azo@mobile-access-b04849-185.dhcp.inet.fi)
[10:55:58] <smallville7123> can an copy of an iterator change after a string.erase
[10:57:04] <smallville7123> as i get this https://gist.github.com/mgood7123/3e07125f62d1faf44f428bb5533bc802
[10:57:41] <smallville7123> in which   Iterator(const T &input) : ref(input), iteratorCurrent(ref.cbegin())
[10:57:45] *** Quits: cpuid (~cpuid@user/cpuid) (Quit: ZNC 1.8.2 - https://znc.in)
[10:58:33] *** Joins: cpuid (~cpuid@co5.at)
[10:58:33] *** Quits: cpuid (~cpuid@co5.at) (Changing host)
[10:58:33] *** Joins: cpuid (~cpuid@user/cpuid)
[10:58:48] *** Quits: cpuid (~cpuid@user/cpuid) (Client Quit)
[11:00:44] <ville> !give smallville7123 testcase
[11:00:45] <nolyc> smallville7123: A testcase is the _least_ amount of code that replicates your problem, paste it to https://wandbox.org/ then: 1) click run 2) click share 3) click url and 4) paste the url for us. You _must_ use that website. Do _not_ use a different website. Do _not_ paste code to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
[11:00:49] <ville> 07:35:59          ville | http://www.eelis.net/c++draft/strings#string.require-4
[11:02:58] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[11:04:28] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[11:07:54] <Alipha> smallville7123: if you erase from a string, any iterators pointing at the erased character(s) or after the erased characters are invalidated
[11:10:00] <ville> Alipha: where does that guarantee come from?
[11:12:43] *** Joins: ravan (~ravan@user/ravan)
[11:13:23] *** Joins: cpuid (~cpuid@static.0.241.21.65.clients.your-server.de)
[11:13:23] *** Quits: cpuid (~cpuid@static.0.241.21.65.clients.your-server.de) (Changing host)
[11:13:23] *** Joins: cpuid (~cpuid@user/cpuid)
[11:16:28] <Alipha> Hm. So, there's this:
[11:16:31] <Alipha> { vector<int> x = {1,2,3,5}; auto it = x.begin() + 2; x.erase(x.begin()+1); cout << *it; }
[11:16:32] <geordi> /usr/local/include/c++/12.0.1/debug/safe_iterator.h:304: [+ 12 discarded lines]
[11:16:37] <smallville7123> https://wandbox.org/permlink/ZBQqLosD4uZzHKwA
[11:16:54] <Alipha> But I was surprised this works:
[11:16:58] <Alipha> { string x = "hello"; auto it = x.begin() + 2; x.erase(x.begin()+1); cout << *it; }
[11:16:59] <geordi> l
[11:17:06] <Alipha> Granted, geordi isn't proof of anything
[11:17:08] <smallville7123> Alipha: how do i fix the iterators?
[11:17:10] *** Quits: cpuid (~cpuid@user/cpuid) (Client Quit)
[11:17:58] *** Joins: cpuid (~cpuid@static.0.241.21.65.clients.your-server.de)
[11:17:58] *** Quits: cpuid (~cpuid@static.0.241.21.65.clients.your-server.de) (Changing host)
[11:17:58] *** Joins: cpuid (~cpuid@user/cpuid)
[11:22:18] <Alipha> smallville7123: you could store a std::string* and an index instead of an iterator
[11:22:24] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 250 seconds)
[11:23:40] <ville> so no one has read the link i pasted twice?
[11:23:43] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[11:23:51] <ville> http://www.eelis.net/c++draft/strings#string.require-4
[11:26:23] <Alipha> Oh wow, I overlooked that twice
[11:27:59] <smallville7123> this seems to work https://wandbox.org/permlink/MSGFSUrm2lTAOci3
[11:29:06] <smallville7123> ville: yea
[11:30:45] <smallville7123> Alipha: would cbegin and cend be 0 and size() - 1    ?
[11:31:20] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[11:31:33] <smallville7123> also unfotunately erase does not take integer numbers :(
[11:32:28] <smallville7123> tho it can simple be offset right? eg      a.erase(a.begin() + start, a.begin() + end);
[11:33:18] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[11:36:37] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[11:37:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[11:41:30] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[11:45:41] *** Quits: kilitary (~kilitary@188.242.187.4) (Read error: Connection reset by peer)
[11:47:54] <Alipha> smallville7123: cend would be size(). The end is one past
[11:48:07] *** Joins: nojhan (uid443807@id-443807.lymington.irccloud.com)
[11:48:12] <Alipha> And yes, you can add the offset
[11:49:57] *** Quits: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::46) (Ping timeout: 240 seconds)
[11:57:26] <smallville7123> ok
[12:01:29] <supernova> is there openCV channel?
[12:04:51] *** Joins: kilitary (~kilitary@188.242.187.4)
[12:05:23] *** Quits: kilitary (~kilitary@188.242.187.4) (Remote host closed the connection)
[12:08:10] <smallville7123> hmmm it seems to have the same result
[12:08:16] <smallville7123> https://wandbox.org/permlink/LgKl655KUc1U5K9r
[12:10:24] <smallville7123> Alipha:
[12:12:30] <ville> !give supernova alis
[12:12:31] <nolyc> ville: Error: "alis" is not a valid command.
[12:12:45] <ville> supernova: /msg alis help
[12:14:31] <supernova> thanks, ville
[12:14:54] <supernova> how to check if he is online?
[12:15:09] <ville> he?
[12:15:28] <supernova> i thought alis is person
[12:15:47] <ville> it's a bot. just send it a message as instructed
[12:16:14] <ville> but there is also /whois alis alis to answer your question
[12:16:40] <supernova> [alis] Nosuch command opencv
[12:17:17] <ville> read the help again then, it lists the available commands
[12:19:04] <smallville7123> is there a better way to do this? https://wandbox.org/permlink/SaEhk8FiFODsBlMc
[12:22:34] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:d180:c928:f791:f80d)
[12:25:59] *** Joins: robod34 (~Username@79.113.195.239)
[12:26:02] *** Joins: sbrothy (~sbrothy@192038134036.mbb.telenor.dk)
[12:30:54] <ville> dount many will bother reading ~250 loc of code for such a vague question
[12:30:57] <ville> doubt
[12:31:28] *** Quits: supernova (~quassel@2405:9800:ba11:6207:dc8a:3f0c:1142:cc21) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[12:32:37] <smallville7123> is there a better way to parse a modifiable input stream?
[12:33:09] <kalven> wtf is "modifiable input stream" and what is the actual problem you are working on?
[12:34:38] <smallville7123> im trying to parse a string which can be edited while it is being parsed
[12:36:04] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 250 seconds)
[12:36:06] <ville> smallville7123: why not parse an immutable string and see if there were edits, then throw away the result if there were and start over?
[12:37:21] <smallville7123> because you would need to keep at least 2 copies
[12:38:08] <smallville7123> and the entire string would be copied several times if there are a lot of edits being make
[12:38:22] *** Joins: c4017w__ (~c4017@209.52.68.8)
[12:39:30] <ville> optionality creating problems, news at 11: https://lwn.net/SubscriberLink/882799/7523e0f3744660ec/
[12:39:56] <ville> smallville7123: what do you think inserting to an std::string does?
[12:40:30] <smallville7123> exactly that but in an effiecent way
[12:40:46] <ville> by creating two copies. there is nothing efficient about that
[12:40:50] <ville> well one copy..
[12:42:08] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[12:42:27] <ville> there isn't necessarily anything non-efficient about it either. just that the very thing you were objecting to is apparently alright when you don't see it happening?
[12:42:56] <smallville7123> i just see it as an extra copy
[12:43:44] <kalven> do you ever get anything done or is it 100% yak shaving?
[12:43:55] <smallville7123> ?
[12:44:28] <kalven> all the time you spend worrying about getting to something "optimal".. do you ever get anywhere?
[12:44:39] *** Joins: NewtonKhan (~NewtonKha@49.37.241.162)
[12:44:45] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[12:51:17] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 240 seconds)
[12:54:00] <smallville7123> yes
[13:00:08] *** Quits: NewtonKhan (~NewtonKha@49.37.241.162) (Quit: Leaving)
[13:01:21] *** immibis_ is now known as immibis
[13:01:25] <smallville7123> ok i think i got it working
[13:01:56] *** Joins: noarb (~noarb@user/noarb)
[13:02:01] <smallville7123> i was adding to the iterator stack in match_until when i do not need to as match internally adds to the stack
[13:02:21] <smallville7123> so i needed to pop 2 times instead of only once
[13:06:42] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[13:31:03] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[13:31:08] *** Joins: MatSharrow (~matthew@117.20.9.51.dyn.plus.net)
[13:33:51] *** Joins: leonarth (~leonarth@user/leonarth)
[13:35:26] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 250 seconds)
[13:36:16] *** Quits: hexingb (~hexingb@111.32.64.60) (Ping timeout: 268 seconds)
[13:36:52] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[13:38:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[13:38:56] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[13:41:42] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:41:49] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:41:49] *** ChanServ sets mode: +v npaperbot
[13:42:33] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[13:45:58] *** Joins: magla (~gelignite@55d45b98.access.ecotel.net)
[13:49:10] *** Joins: hexingb (~hexingb@111.32.64.60)
[13:49:41] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:50:12] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[13:51:48] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:53:05] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[14:03:37] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[14:05:18] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[14:07:08] *** Quits: hexingb (~hexingb@111.32.64.60) (Ping timeout: 256 seconds)
[14:11:13] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:1181:18a7:7b4:f540)
[14:12:50] *** Quits: leonarth (~leonarth@user/leonarth) (Remote host closed the connection)
[14:14:07] *** Joins: hexingb (~hexingb@36.155.28.147)
[14:15:01] *** Joins: leonarth (~leonarth@user/leonarth)
[14:16:58] *** Quits: sbrothy (~sbrothy@192038134036.mbb.telenor.dk) (Ping timeout: 268 seconds)
[14:23:52] *** Joins: proller (~p@80.240.216.69)
[14:25:30] *** Joins: markong (~kvirc@213.146.188.203)
[14:25:51] *** Joins: sigma_ (~sigma@164.215.248.82)
[14:26:43] <sigma_> hi, i can change begin point? in map
[14:29:57] *** Quits: hexingb (~hexingb@36.155.28.147) (Ping timeout: 240 seconds)
[14:30:21] *** Joins: hexingb (~hexingb@36.155.28.147)
[14:31:00] <kenanmarasli> I'm looking at the meaning for r-value references (X&&) and how they can be used for move semantics, but wasn't that already possible with pointers or l-value references?
[14:31:21] <kenanmarasli> I didn't really understand what problem r-value references solve
[14:31:36] <barometz> sort of - nothing's stopping you from writing a moving T& constructor
[14:31:55] <ville> sigma_: that does not parse
[14:32:18] <fiesh> kenanmarasli: auto_ptr did exactly that, and it was horrible to use since it was basically a huge gotcha waiting to get you
[14:32:51] <ville> kenanmarasli: auto x = T{}; auto y = x; was x moved?
[14:33:36] <fiesh> kenanmarasli: compare auto_ptr to unique_ptr to get an appreciation for how r-values improve things
[14:33:40] <ville> kenanmarasli: with the current way you have to* have something visible there: auto x = T{}; auto y = (T&&)x;
[14:33:55] <kenanmarasli> fiesh: will do
[14:34:05] *** Joins: Josep (~Josep333@185.104.244.26)
[14:34:13] <ville> *) because this is c++ such absolute statements are of course not true and you can write evil types if you wish
[14:34:33] <kenanmarasli> ville: ah, so it is more transparent that way I presume
[14:35:03] <sigma_> ville: i can make my own type? for point to begin
[14:35:32] <kenanmarasli> thank you both, I'll read more on this
[14:35:36] <ville> sigma_: point to beginning of what?
[14:35:36] <Josep> WHat does company stocks returns mean?
[14:36:28] <ville> sigma_: but sure yes in general you may write your own types. there are multiple ways to do so
[14:37:15] <sigma_> ville: i have map and i want special rbegin , i want start revers loop from itrator
[14:37:40] <ville> sigma_: std::map?
[14:38:18] <sigma_> yes
[14:38:26] <ville> sigma_: you can't add member functions to an already existing type. if that's what you're asking for
[14:39:00] <ville> sigma_: you've an iterator pointing to some element and then wish to start going backwards from there?
[14:39:11] *** Joins: jellie (~luv_panda@user/jellie)
[14:39:13] *** Joins: nshire_ (~nshire@47.146.41.156)
[14:39:21] *** Joins: c4017w__ (~c4017@209.52.68.8)
[14:39:50] <sigma_> ville: yes , i want set my own rbegin and going backward
[14:40:40] <ville> https://en.cppreference.com/w/cpp/iterator/make_reverse_iterator perhaps then?
[14:41:06] <ville> in general you can construct a reverse iterator from an iterator. https://en.cppreference.com/w/cpp/iterator/reverse_iterator
[14:41:17] *** Quits: nshire (~nshire@user/nshire) (Ping timeout: 240 seconds)
[14:42:29] <very_sneaky> sigma_: you could use an ordered_map and write your own comparator function
[14:42:43] <ville> sigma_: but you can't change what the std::map::rbegin() function returns
[14:42:50] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:43:28] <very_sneaky> er, map is ordered - disregard, but pretty sure you can still provide a comparator function to define the order
[14:44:02] <very_sneaky> it uses std::less by default, but you can pass something else
[14:45:31] <sigma_> very_sneaky: i konw how to sort map but i want process a special region in map
[14:46:34] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[14:53:28] *** Joins: sbrothy (~sbrothy@192038134036.mbb.telenor.dk)
[14:57:58] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:02:02] *** Joins: ivii (~ivan@user/ivii)
[15:03:13] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[15:08:53] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[15:12:33] *** Joins: DSpider (~DSpider@82.79.237.30)
[15:18:07] *** Quits: Josep (~Josep333@185.104.244.26) (Ping timeout: 250 seconds)
[15:21:43] *** Quits: magla (~gelignite@55d45b98.access.ecotel.net) (Read error: Connection reset by peer)
[15:21:55] *** Joins: magla (~gelignite@55d45b98.access.ecotel.net)
[15:22:07] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[15:22:27] *** Quits: hexingb (~hexingb@36.155.28.147) (Ping timeout: 250 seconds)
[15:23:27] *** Joins: hexingb (~hexingb@111.32.64.60)
[15:26:07] *** Quits: msim_ (~msim@2001:8003:d194:d000::d8d) (Ping timeout: 250 seconds)
[15:27:17] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[15:29:41] *** Joins: msim_ (~msim@2001:8003:d194:d000::d8d)
[15:32:30] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[15:33:16] *** Joins: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[15:37:02] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[15:39:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[15:40:13] *** Quits: jellie (~luv_panda@user/jellie) (Ping timeout: 250 seconds)
[15:40:38] *** Joins: Burgundy (~NA@86.121.143.206)
[15:41:29] *** Joins: autark (~autark@ti0048a400-0869.bb.online.no)
[15:41:44] *** Quits: leonarth (~leonarth@user/leonarth) (Quit: 84R6CDo3S62HkuYSkVXBr7fXp2wn1XRHeQZ8QPrqxbXvfXP33EH4MhueE2ifPcRbbQQhVXPheMD957muhhBtrvs2QKykeA3)
[15:41:46] *** Quits: hexingb (~hexingb@111.32.64.60) (Ping timeout: 256 seconds)
[15:42:06] *** Joins: hexingb (~hexingb@111.32.64.60)
[15:43:17] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[15:44:56] *** Joins: Josep (~Josep333@185.104.244.28)
[15:53:56] *** Joins: Roughy (~mdaw45ns@user/roughy)
[15:59:57] *** Joins: leonarth (~leonarth@user/leonarth)
[16:01:31] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[16:12:36] *** Joins: chris64 (~chris@user/chris64)
[16:13:50] <smallville7123> https://gist.github.com/546717f2be79a902fec8d5b79a829563 why do i get Rule::match instead of Any::match
[16:15:54] <chris64> smallville7123: you're converting Any to Rule, aren't you?
[16:16:00] <chris64> in line 33
[16:16:09] <chris64> so grammar is not of type Any
[16:16:37] <chris64> change Rules::Rule to auto and it'll work, or?
[16:17:15] <smallville7123> grammar.match should invoke the virtual function `Any::match`, right?
[16:17:40] <smallville7123> since `Any` overrides `Rule::match`
[16:17:52] <chris64> smallville7123: yes, but it's invoked on grammar and grammar is of type Rule and not of type Any
[16:18:13] <smallville7123> :/
[16:18:31] <chris64> but maybe I'm wrong, I am not working with inheritance and downcasting that often
[16:20:11] <chris64> smallville7123: Does this one help? https://stackoverflow.com/a/11855246/1531656
[16:20:49] <chris64> I believe you want to do a dynamic_cast on a reference to grammar
[16:23:30] *** Parts: Josep (~Josep333@185.104.244.28) (Leaving)
[16:24:32] <smallville7123> hmmm in clang tidy i get    Clang-Tidy: Slicing object from type 'Any' to 'Rule' discards override 'match'
[16:25:42] <smallville7123> allocating it with `new` seems to fix it
[16:26:50] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[16:26:51] <ville> a base class likely has a copt/move ctor and assignment operator which looks like: base(base const&) for example
[16:27:35] <ville> a base const& can bind to a derived object instance, so that's how you end up slicing the derived object into just a base object
[16:28:01] <ville> !slicing
[16:28:02] <nolyc> ville: Error: "slicing" is not a valid command.
[16:29:06] <smallville7123> how do i assign an empty function to a std::function that can still be called without bad_function
[16:29:16] <smallville7123> as {} didnt work
[16:31:00] <ville> an empty std::function is one you can't call. if you want a noop, then give it a noop thing to call
[16:31:27] <ville> an empty std::function is analoguous to: void (*f)() = nullptr;
[16:31:49] <ville> can't call that either
[16:33:11] <smallville7123> would this be an empty function?     Action NO_ACTION = [](Iterator<std::string> &, const IteratorMatcher::MatchData &) {};
[16:37:56] *** Joins: andreasbuhr (~quassel@p548dde66.dip0.t-ipconnect.de)
[16:38:48] <ville> sure. well they are not _functions_. they are some things that are callable
[16:39:32] <ville> std::function is not a function, despite its name. lambda is not a function
[16:40:21] *** Joins: c4017w__ (~c4017@209.52.68.8)
[16:41:02] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[16:44:06] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[16:53:48] <smallville7123> would this be an empty function?     Action NO_ACTION = [](Iterator<std::string> &, const IteratorMatcher::MatchData &) {};
[16:53:53] <smallville7123> nvm
[16:53:56] *** Quits: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com) (Remote host closed the connection)
[16:54:04] <smallville7123> wrong window
[16:59:24] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[17:01:02] *** Joins: tm604 (~tom@perlsite.default.entitypark.uk0.bigv.io)
[17:10:05] *** Joins: v8IbXNTl (~v8IbXNTl@host-204-118-069-229.dhcp.fewpb.net)
[17:10:20] *** Joins: sh00p (~z@h-213-164-223-180.A498.priv.bahnhof.se)
[17:12:07] <smallville7123> why do i get https://wandbox.org/permlink/ooRSUfRiLRFHNDYI
[17:13:35] <smallville7123> in lldb i get `error for object 0x100205e50: pointer being freed was not allocated` from `CPP::Rules::RuleHolder::~RuleHolder(this=0x0000000100205ef0)` from `this->rules.push_back(rule);` with Rule * rule and std::vector<RuleHolder>
[17:14:28] <smallville7123> from https://gist.github.com/mgood7123/feccdeb0bdf0a976430f464cfa224823     *
[17:16:44] *** Joins: Uswald (~leandre@2a01cb040075f90031ce962a1607b761.ipv6.abo.wanadoo.fr)
[17:16:44] *** Quits: Uswald (~leandre@2a01cb040075f90031ce962a1607b761.ipv6.abo.wanadoo.fr) (Changing host)
[17:16:44] *** Joins: Uswald (~leandre@user/Uswald)
[17:17:33] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[17:18:58] <smallville7123> it makes no sense :(
[17:20:00] <ville> write proper testcases then perhaps someone will take a look. just duming all your code is not a proper testcase
[17:20:07] <ville> dumping
[17:22:24] <PJBoy> oh wow wandbox supports asan
[17:26:32] <smallville7123> ville: https://wandbox.org/permlink/MAoZl72YBFVyot8k
[17:27:03] <smallville7123> in mac i get https://gist.github.com/mgood7123/45b83794ef1f9f45643616aebeeae8da
[17:28:56] <PJBoy> presumably it's a rule of 5 bug
[17:29:15] <PJBoy> you define a dtor because you have a resource that needs manual handling
[17:29:32] <PJBoy> so you should also be defining your copy and move operations
[17:29:58] <PJBoy> for example, if your RuleHolder gets copied, then you have two RuleHolders that have the same `rule` pointer
[17:30:09] <PJBoy> both their dtors get executed at some point, so that `rule` gets double deleted
[17:30:21] <smallville7123> oh ok
[17:31:10] <ville> smallville7123: when you call push_back() an instance of RuleHolder is made. internally push_back will copy or move from that temporary object.
[17:31:54] <PJBoy> http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#c21-if-you-define-or-delete-any-copy-move-or-destructor-function-define-or-delete-them-all
[17:32:17] *** Joins: plastico (~plastico@neomutt/plastico)
[17:33:23] <PJBoy> that's actually not such a well written rule I linked :/
[17:36:17] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:1181:18a7:7b4:f540) (Ping timeout: 240 seconds)
[17:37:39] *** Joins: ferdna (~ferdna@user/ferdna)
[17:38:49] <PJBoy> something like this probably https://wandbox.org/permlink/A2QeZUfNlHkT088I
[17:38:58] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[17:40:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[17:41:42] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:41:50] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:41:50] *** ChanServ sets mode: +v npaperbot
[17:44:44] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[17:55:32] *** Joins: joilerv (~joilerv@host86-191-93-41.range86-191.btcentralplus.com)
[17:56:37] *** Quits: sbrothy (~sbrothy@192038134036.mbb.telenor.dk) (Read error: Connection reset by peer)
[17:59:29] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Remote host closed the connection)
[18:04:03] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[18:05:29] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:09:01] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[18:11:51] *** Joins: seninha (~seninha@user/seninha)
[18:12:54] *** Quits: gbona_ (~gbona@180.251.177.103) (Read error: Connection reset by peer)
[18:15:32] <jsbach_> Hi, is there a public artifactory or an artifactory with an anonymous access? The reason i am asking, want to use gsoap and openssl in my own project and would like to bind them via conan.
[18:18:16] <Shell> jsbach_: https://conan.io/center/ do you mean this?
[18:20:17] <jsbach_> Shell, well yes. i guess i have to configure it for my CLion
[18:22:22] *** Quits: joilerv (~joilerv@host86-191-93-41.range86-191.btcentralplus.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:24:02] *** Quits: Uswald (~leandre@user/Uswald) (Ping timeout: 250 seconds)
[18:39:46] *** Joins: pulse (~pulse@user/pulse)
[18:40:45] *** Quits: v8IbXNTl (~v8IbXNTl@host-204-118-069-229.dhcp.fewpb.net) (Quit: v8IbXNTl)
[18:41:22] *** Joins: c4017w__ (~c4017@209.52.68.8)
[18:44:19] *** Joins: Uswald (~leandre@2a01cb040075f90031ce962a1607b761.ipv6.abo.wanadoo.fr)
[18:44:19] *** Quits: Uswald (~leandre@2a01cb040075f90031ce962a1607b761.ipv6.abo.wanadoo.fr) (Changing host)
[18:44:19] *** Joins: Uswald (~leandre@user/Uswald)
[18:44:48] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[18:45:11] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:1181:18a7:7b4:f540)
[18:48:27] *** Joins: zmt01 (~zmt00@user/zmt00)
[18:52:37] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[18:55:05] *** Quits: Uswald (~leandre@user/Uswald) (Ping timeout: 268 seconds)
[18:58:22] *** Joins: Deneb (~johnch@23.143.9.51.dyn.plus.net)
[19:00:24] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:4525:4a27:b93b:734c)
[19:00:26] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 250 seconds)
[19:01:33] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[19:02:28] *** Joins: leonarth_ (~leonarth@user/leonarth)
[19:04:37] *** Quits: leonarth (~leonarth@user/leonarth) (Ping timeout: 240 seconds)
[19:16:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Remote host closed the connection)
[19:21:32] *** Joins: paul424 (~tom@ip-5-172-234-91.multi.internet.cyfrowypolsat.pl)
[19:22:54] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[19:24:12] <yolo> so I have XXX, BUG, TODO in my comments, what's a better way to document WORKAROUND that is shorter to type...
[19:24:47] <yolo> HOTFIX?
[19:24:56] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[19:25:43] <yolo> of FIXME, but still not good enough
[19:25:59] <PJBoy> HACK
[19:28:17] <yolo> a good option indeed, thanks
[19:28:26] <ville> BOOBS
[19:28:41] * yolo decides to remove XXX as it reminds me of porn
[19:30:55] <yolo> FIXME, HACK,NOTE, TODO, BUG, ATTN, FIXME ~= TODO ~= HACK, NOTE ~= ATTN, too many options
[19:31:12] *** Quits: leonarth_ (~leonarth@user/leonarth) (Ping timeout: 250 seconds)
[19:35:47] <ville> i just have note and todo. either it's something i'll do or it's something that explains what's been done
[19:39:41] <yolo> BUG and FIXME are most important to me, but now I need WORKAROUND to stand out a bit
[19:41:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[19:42:02] *** Quits: Munnu (~timo@81-197-121-83.elisa-laajakaista.fi) (Ping timeout: 240 seconds)
[19:45:15] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[19:48:52] *** Joins: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com)
[19:53:03] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[19:58:09] *** Joins: zmt01 (~zmt00@user/zmt00)
[19:58:20] <great_taste> FIXME tends to be permanent
[20:01:57] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[20:08:31] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[20:09:03] *** Quits: Kit (~NotApplic@2603-6010-a103-1f2e-4e6d-cc75-dd88-8b0f.res6.spectrum.com) (Read error: Connection reset by peer)
[20:24:56] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 250 seconds)
[20:26:47] *** Joins: joilerv (~joilerv@135.129.250.144)
[20:33:36] *** Quits: arch-angel (~arch-ange@2001:e68:5400:5e71:980d:735:378a:6036) (Ping timeout: 250 seconds)
[20:38:19] *** Joins: proller (~p@80.240.216.69)
[20:42:22] *** Joins: c4017w__ (~c4017@209.52.68.8)
[20:43:00] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[20:43:48] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[20:45:43] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[20:47:09] *** Joins: sbrothy (~sbrothy@192038134036.mbb.telenor.dk)
[20:49:37] *** Joins: galik (galik@gateway/vpn/airvpn/galik)
[20:56:37] *** Quits: hackkitten (~hackkitte@94.31.103.136) (Ping timeout: 240 seconds)
[20:57:12] *** Joins: seninha_ (~seninha@user/seninha)
[20:57:58] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 256 seconds)
[21:00:23] *** Joins: RoKenn (~RoKenn@2001:a61:35b1:ca01:2ae6:8bdf:407c:f740)
[21:00:23] *** Quits: RoKenn (~RoKenn@2001:a61:35b1:ca01:2ae6:8bdf:407c:f740) (Changing host)
[21:00:23] *** Joins: RoKenn (~RoKenn@user/rokenn)
[21:02:17] *** Quits: hexingb (~hexingb@111.32.64.60) (Ping timeout: 240 seconds)
[21:02:37] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 240 seconds)
[21:03:32] *** Joins: hackkitten (~hackkitte@94.31.103.136)
[21:05:46] *** Quits: seninha_ (~seninha@user/seninha) (Ping timeout: 245 seconds)
[21:06:00] *** Quits: andreasbuhr (~quassel@p548dde66.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:08:51] *** Joins: AmR (~AmREiSa@156.207.146.251)
[21:08:51] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[21:10:04] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[21:13:11] *** Joins: hexingb (~hexingb@111.32.64.60)
[21:15:59] *** Quits: joilerv (~joilerv@135.129.250.144) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:17:19] *** Joins: joilerv (~joilerv@135.129.250.144)
[21:26:47] *** Quits: joilerv (~joilerv@135.129.250.144) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:27:22] *** Joins: joilerv (~joilerv@host86-191-93-41.range86-191.btcentralplus.com)
[21:29:15] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Read error: Connection reset by peer)
[21:29:31] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[21:30:34] <amosbird> Hello! According to https://en.cppreference.com/w/cpp/language/inline , it says A function defined entirely inside a class/struct/union definition, whether it's a member function or a non-member friend function, is implicitly an inline function if it is attached to the global module (since C++20).
[21:30:37] <amosbird> What does "if it is attached to the global module" mean?
[21:32:10] *** Joins: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[21:33:08] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[21:33:13] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[21:33:46] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[21:34:44] <vdamewood> amosbird: Do you know what C++20 modules are?
[21:37:24] <amosbird> vdamewood: Hmm, I guess no. Does it have similar definition before c++20?
[21:37:49] <vdamewood> amosbird: Before C++20 there were no 'modules' global or otherwise.
[21:38:10] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 250 seconds)
[21:39:26] <vdamewood> amosbird: The short version is that modules are meant as a replacement for header files, but a little more powerful. If you don't use modules, your code is implicitly in the 'global module'. So, the 'global module' is a sort of default.
[21:40:29] <amosbird> I see. Thanks!
[21:41:05] <amosbird> So why does it emphasize global module when defining the inline specifier?
[21:41:43] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:41:51] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:41:51] *** ChanServ sets mode: +v npaperbot
[21:42:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:42:53] <vdamewood> amosbird: There isn't really any emphasis there. It's just that if a function is defined in such a way and it's in a module other than the global module, then the statement isn't true.
[21:43:54] <vdamewood> So, if you define a function like that, and it's in the global module (like all C++17 code would be if compiled with a C++20 compiler) then it's implicitly inline too. If you actually make a module and put it in a module, then it isn't implicitly inline.
[21:45:20] <amosbird> vdamewood: Well, I guess I used the wrong word to ask the question)  Why not make it implicitly inline if it is put in a non-global module?
[21:46:42] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[21:46:57] <vdamewood> Because, unlike #include's, modules aren't simple text insertions, and making things inside of a module implicitly inline is infeasible.
[21:47:26] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:4525:4a27:b93b:734c) (Remote host closed the connection)
[21:47:49] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:c90a:37de:e150:322e)
[21:48:16] *** Quits: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net) (Remote host closed the connection)
[21:49:19] <amosbird> Ah, kinda get it. Thanks
[21:49:43] <PJBoy> the cppref documentation on modules is very incomplete
[21:50:11] <PJBoy> you could argue that everything in a module is basically inline
[21:50:39] <PJBoy> so the idea of declaring that a function is inline in a module is more redundant than a contradiction
[21:51:14] *** Joins: Munnu (~timo@81-197-121-83.elisa-laajakaista.fi)
[21:51:15] <vdamewood> amosbird: If it helps, I don't fully understand them yet, either.
[21:51:28] <PJBoy> definitions attached to named modules aren't subject to ODR
[21:51:35] <PJBoy> the same way that inline definitions aren't
[21:52:30] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:cdc3:ec29:d616:f18b)
[21:52:30] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:cdc3:ec29:d616:f18b) (Changing host)
[21:52:30] *** Joins: skapata (~Skapata@user/skapata)
[21:52:35] * vdamewood hangs in the air the way bricks don't.
[21:53:03] <amosbird> PJBoy: interesting. Does that mean global module is somehow different and will be subject to ODR without being inlined?
[21:53:26] <PJBoy> global module is anything not in a named module
[21:53:38] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[21:53:39] <ville> not what he asked
[21:53:45] <PJBoy> it gets the same rules as everything C++17 and before
[21:53:51] <amosbird> Cool
[21:54:33] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Client Quit)
[21:55:58] <PJBoy> (note that I do think I've oversimplified)
[21:56:06] <PJBoy> don't ask me for standard citations
[21:56:18] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[21:57:51] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (Read error: Connection reset by peer)
[21:58:42] *** Joins: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net)
[21:58:44] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:1181:18a7:7b4:f540) (Quit: Quit)
[21:59:07] *** Joins: Tokamak (~Tokamak@172.58.188.93)
[21:59:23] <vdamewood> PJBoy: Just pick sections at random.
[22:00:35] <vdamewood> Like 501(c)(3) and 401(k)
[22:00:37] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 240 seconds)
[22:01:12] <PJBoy> 401k I think I've heard of
[22:01:18] <PJBoy> not so much 501c3
[22:01:56] <vdamewood> US Tax code section for a particular kind fo tax-exempt (not-for-profit) organization.
[22:02:40] <PJBoy> that's sounds specific enough to justify having a specific section name
[22:03:06] <PJBoy> 401k as I understand it is just your pension
[22:04:00] <vdamewood> technically a 401k and a pension are legally distinct things. a 401(k) is a tax-exempt (until it matures) saving account you save yourself for retirement.
[22:11:08] <PJBoy> right
[22:13:48] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[22:14:00] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[22:15:18] *** Quits: joilerv (~joilerv@host86-191-93-41.range86-191.btcentralplus.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:21:05] *** Joins: temp_user_2022 (~amit@2601:445:447f:a2f6:8401:53e:dff:2db5)
[22:21:37] *** Quits: Tokamak (~Tokamak@172.58.188.93) (Ping timeout: 240 seconds)
[22:29:14] *** Joins: Tokamak (~Tokamak@172.58.188.93)
[22:33:15] *** Quits: baltazar (~baltazar@84-236-21-114.pool.digikabel.hu) (Quit: reboot: system upgrade)
[22:34:12] *** Quits: mitch0 (~mitch@84-236-21-114.pool.digikabel.hu) (Quit: leaving)
[22:38:24] *** Quits: ville (~ville@user/ville) (Ping timeout: 250 seconds)
[22:39:58] *** Joins: mitch0 (~mitch@84-236-21-114.pool.digikabel.hu)
[22:40:46] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[22:43:22] *** Joins: c4017w__ (~c4017@209.52.68.8)
[22:45:25] *** Joins: ville (~ville@user/ville)
[22:47:02] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[22:47:59] *** Quits: mitch0 (~mitch@84-236-21-114.pool.digikabel.hu) (Quit: leaving)
[22:48:15] *** Joins: mitch0 (~mitch@84-236-21-114.pool.digikabel.hu)
[22:53:08] *** Quits: GunqqerFriithian (~gunqqer@gateway/vpn/pia/gunqqerfriithian) (Ping timeout: 250 seconds)
[22:53:35] *** Joins: GunqqerFriithian (~gunqqer@gateway/vpn/pia/gunqqerfriithian)
[22:59:21] *** Joins: baltazar (~baltazar@84-236-21-114.pool.digikabel.hu)
[23:04:31] *** Quits: Deneb (~johnch@23.143.9.51.dyn.plus.net) (Quit: Leaving)
[23:22:46] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[23:25:29] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[23:26:25] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[23:27:25] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[23:29:57] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[23:32:02] *** Quits: hexingb (~hexingb@111.32.64.60) (Ping timeout: 240 seconds)
[23:33:17] *** Quits: Terminus (~null@user/terminus) (Ping timeout: 240 seconds)
[23:34:19] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Quit: Leaving)
[23:40:14] *** Joins: Terminus (~null@user/terminus)
[23:43:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:47:24] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[23:47:50] *** Quits: nojhan (uid443807@id-443807.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[23:49:52] *** Quits: paul424 (~tom@ip-5-172-234-91.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[23:50:49] *** Quits: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) (Quit: Leaving.)
[23:55:35] *** Joins: joilerv (~joilerv@135.129.250.144)
[23:56:48] *** Joins: v8IbXNTl (~v8IbXNTl@host-204-118-069-229.dhcp.fewpb.net)
