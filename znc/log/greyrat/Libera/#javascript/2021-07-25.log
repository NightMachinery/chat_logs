[00:05:41] *** Joins: pulse (~pulse@user/pulse)
[00:14:56] *** Joins: kongzilla (~weechat@gateway/tor-sasl/kongzilla)
[00:16:00] *** Parts: kongzilla (~weechat@gateway/tor-sasl/kongzilla) ()
[00:23:06] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:c993:382f:f6c:90f1) (Ping timeout: 240 seconds)
[00:28:14] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 255 seconds)
[00:50:41] *** Joins: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[00:50:41] *** Quits: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Changing host)
[00:50:41] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[00:52:00] <hassoon> useReducer ? is that reactjs ?
[00:53:30] *** Joins: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com)
[00:53:33] <GreenJello> teut, looks valid, but also pointless
[00:53:42] <teut> yes
[00:53:53] <teut> what is pointless GreenJello?
[00:54:08] <teut> what can be done to make it better
[00:54:11] <GreenJello> you could use useState and it'd be simpler
[00:54:32] <teut> but then I ll need 4 usestates
[00:54:38] <teut> 4-5
[00:54:41] <GreenJello> nope
[00:55:13] <teut> it would be difficult
[00:55:16] <GreenJello> the updates would look like this: setDetails(current => ({ ...current, name: event.target.value }))
[00:55:28] <farn> What would be wrong with having 4 separate states?
[00:55:51] <teut> if  I add more fields it would become unmanageable
[00:56:06] <teut> now I have a much stranger usecase
[00:56:32] <teut> I have to dynamically add cases to useReducer
[00:56:43] *** Joins: summersault (~summersau@179.221.251.16)
[00:57:09] <teut> I dont know how I ll do it but ya useReducer atleast gives a vague idea about how I ll do it
[00:58:14] <farn> Unmanageable in what way? Your useReducer solution is more code than separate useStates would be, and I don't see how it's easier to maintain
[00:58:18] <teut> GreenJello, regarding that, there is name, age , etc  in that
[00:58:42] <teut> with usestate too you will require if, else
[00:58:58] <teut> oh ok , I now understood
[00:59:25] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[00:59:39] <teut> I should do it like onChange-(event=>setDetails(...))
[00:59:53] <GreenJello> (my code won't quite work on older react versions due to event pooling, though)
[00:59:53] <teut> onChange=  *
[01:00:10] <teut> yeah I ll modify it now only
[01:00:21] <teut> event pooling, gotta see what is that
[01:00:27] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 250 seconds)
[01:01:18] <teut> farn, I yes , a single usestate will work for now
[01:01:33] *** Gustavo6046_ is now known as Gustavo6046
[01:01:42] <GreenJello> teut, https://gist.github.com/brigand/2efcb437918f527c5f63bfb3f7457948
[01:02:02] <GreenJello> this avoids the pooling issue with destructuring
[01:02:10] <farn> well, I think multiple states are easier when they change separately and don't affect each other
[01:02:25] <teut> but I might have to add more state , so maybe its YAGNI, but for the moment I m addding a comment and i will refactor if afterwards
[01:03:06] <GreenJello> you could go either way on one vs multiple states
[01:03:45] <GreenJello> a single state actually composes better, but you're not taking advantage of that here
[01:04:36] <teut> ya, I understand but I have plans to maybe use a loop for those fields
[01:04:53] *** Joins: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[01:04:53] <teut> I will put the json in a file
[01:05:04] <teut> and from that all the fields would be created
[01:05:20] <GreenJello> then you definitely want the single object state
[01:06:00] <teut> hmm, oh yes in that case , on the contrary useState will work since a loop is a generalization
[01:06:11] <teut> so no cases
[01:06:13] <teut> thanks
[01:06:28] <teut> so all paths for useReducer closed now
[01:06:45] <farn> now it sounds like you've gone from using Formik to building your own Formik :)
[01:07:18] *** Quits: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com) (Quit: *POOF*)
[01:07:27] <teut> hmm, maybe :b
[01:07:54] <teut> well, atleast I ll learn some common patterns
[01:08:08] <teut> used with react for these usecases
[01:14:56] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 252 seconds)
[01:17:12] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Ping timeout: 245 seconds)
[01:26:17] *** Quits: kadobanana (~mud@user/kadoban) (Ping timeout: 255 seconds)
[01:28:27] *** Joins: kadobanana (~mud@user/kadoban)
[01:29:47] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[01:34:40] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 265 seconds)
[01:38:02] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 252 seconds)
[01:40:52] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[01:42:41] *** Joins: summersault (~summersau@179.221.251.16)
[01:49:09] *** Joins: dc1 (~dc@user/dc)
[01:50:51] *** Joins: wroathe (~wroathe@96-88-30-181-static.hfc.comcastbusiness.net)
[01:53:30] *** Quits: dc1 (~dc@user/dc) (Ping timeout: 240 seconds)
[01:54:16] *** Quits: hassoon (hassoon@user/hassoon) (Quit: leaving)
[01:54:59] *** Joins: hassoon (hassoon@user/hassoon)
[01:56:09] *** Joins: byanka (~byanka@212.55.77.96)
[01:59:29] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[01:59:50] <teut>   <List link>      {patientTestResults.map(testName => <List.Item >{testName}</List.Item> }</List>         what would be the correct syntax for this?
[02:00:07] <teut> that patient...  is a []
[02:00:33] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[02:00:34] <teut> sinple list creation , but I m getting parsing error
[02:00:35] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[02:00:54] <teut> Uploaded file: https://uploads.kiwiirc.com/files/3341a0c1894f4ae9251ba9ac634376cf/image.png
[02:01:12] <Alexendoo> missing )
[02:01:14] *** Gustavo6046_ is now known as Gustavo6046
[02:01:48] <teut> damn and it says ,
[02:01:55] <teut> thanks GreenJello
[02:03:01] <stenno> key missing too
[02:03:30] <teut> oops
[02:03:38] <teut> thanks will fix that
[02:04:46] <teut> https://dpaste.org/ux2R  this is a problem but I m feeling difficulty in thinking how to implement it
[02:04:59] <teut> Uploaded file: https://uploads.kiwiirc.com/files/004683a33da877f012cf9ec683e0d8ae/image.png
[02:05:30] <teut> so the list item should only only get appended when I click the  +
[02:05:53] <teut> but then I need to manage state of that input
[02:06:30] <teut> each time user clicks + , the current text should get into the list
[02:08:08] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Ping timeout: 255 seconds)
[02:08:34] <teut> seems like a useEffect usecase
[02:09:47] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[02:10:42] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 240 seconds)
[02:11:52] *** Quits: paule32_ (~paule32@user/paule32) (Quit: Leaving)
[02:12:43] *** Joins: minimario (~minimario@68.233.176.26)
[02:12:47] *** Joins: StayHungry (~StayHungr@gateway/tor-sasl/stayhungry)
[02:12:52] *** Parts: minimario (~minimario@68.233.176.26) ()
[02:13:26] <StayHungry> Evening, comrades. Javascript can or can't see 23-07-1821 as date without replacing - to / ?
[02:13:27] *** Joins: ferdna (~ferdna@user/ferdna)
[02:14:45] <teut> dont know about js but html cant
[02:15:27] *** Quits: teut (~teut@122.162.166.192) (Quit: Connection closed)
[02:22:34] *** Joins: schangg (~schangg@2a01cb080746b7008639c0fffe0203dd.ipv6.abo.wanadoo.fr)
[02:23:11] <schangg> Hello. I have what is probably a rocky question.
[02:23:20] <schangg> I am trying to create a table from this json
[02:23:25] <schangg> I am using tabulator
[02:23:28] *** Quits: michigan (uid507982@id-507982.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[02:23:56] <schangg> and the console throws that this json is an object and not an array
[02:24:09] <schangg> I am not sure if my problem is tabulator specific
[02:24:38] <schangg> should I consider converting the json from object to array (and if so is that doable with e.g., a python script) ?
[02:25:55] *** Quits: schangg (~schangg@2a01cb080746b7008639c0fffe0203dd.ipv6.abo.wanadoo.fr) (Quit: WeeChat 2.3)
[02:26:19] <stenno> you can parse the JSON and transform it properly
[02:26:23] <stenno> ah, 1 minute
[02:26:38] *** Joins: schangg (~schangg@2a01cb080746b7008639c0fffe0203dd.ipv6.abo.wanadoo.fr)
[02:26:50] <schangg> back, got disconnected
[02:27:00] <schangg> so as I was explain I have this json : https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/latest/owid-covid-latest.json
[02:27:09] <schangg> which I want to create a table out of
[02:27:20] *** Joins: Brumaire (~quassel@81-64-14-121.rev.numericable.fr)
[02:27:27] <schangg> I have picked tabulator (but could switch to anything else that can help building that table)
[02:27:39] <entuland> with table you mean an actual HTML table?
[02:27:52] <schangg> and when using that json the console si complaining that it received an object while it expected an array
[02:28:12] <schangg> entuland: a table from the json that would JS generated
[02:28:29] <entuland> okay, but there is no such a thing as a "table" in JS per se
[02:28:33] <schangg> not sure if I am explaing myself very clearly
[02:28:40] <entuland> you want to display it somehow
[02:29:05] <schangg> to make it simple yes I want to display the content in the form of a table
[02:29:09] <entuland> and that could be done with a <table> in HTML, or any other tags arrangement and a CSS grid
[02:29:35] <entuland> check the docs for that tabulator library and find out the exact layout it expects
[02:29:44] <schangg> the idea being not to generate static <table><tr><td> etc like in the 90's :)
[02:29:59] <entuland> why not? tables are just fine for tabular data
[02:30:02] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:05] <entuland> they're not okay to make _layouts_
[02:30:18] <entuland> if you have tabular data, you're supposed to still use <table>
[02:30:20] <schangg> well it apparently expects an array and my json is not fit for that
[02:30:28] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:30:47] <entuland> okay, first get tabulator working with a dummy array
[02:31:10] <entuland> once you have it working and you know how you need the array to be laid out, you can think about converting the JSON into an array
[02:31:35] <schangg> I have (had) it working with another json that was an array
[02:31:47] <entuland> ignore the JSON for now
[02:31:51] <farn> const obj = JSON.parse(thatJsonString); const array = Object.values(obj); // now use tabulator to render that array
[02:32:30] <entuland> make sure you fully understand how tabulator works first, then you can make an educated approach at converting the data you have into an array to achieve exactly what you want
[02:32:42] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[02:32:54] <entuland> farn, not that easy, that's a nested structure with the data inside various country sections
[02:34:21] <Donitz> I got a long switch statement with ranges
[02:34:22] <entuland> unless tabulator has some magic to deal with it automatically
[02:34:27] <Donitz> any way to write it is an easier way
[02:34:40] <entuland> Donitz, may want to provide more context and your code
[02:34:40] <Donitz> first one is 0 to 2, second one is 3 to 8 etc.
[02:34:43] <entuland> ranges could be anything
[02:35:19] <schangg> I have already looked at the doc
[02:35:22] <schangg> http://tabulator.info/docs/4.0/data
[02:35:28] <farn> entuland: the values of that object looks perfectly fit for a tabular view
[02:35:36] <schangg> when I have a json that complies with the examples then it works fine
[02:35:44] <entuland> sure, but I have no idea how tabulator works
[02:36:21] <entuland> schangg, you need to understand the structure tabulator expects so that you can _know_ how to convert your JSON
[02:36:27] <entuland> this is not a trial and error thing
[02:38:04] <entuland> as it seems you just need to do one pass on your data to create the columns array, then you can happily stash your data objects in the tableData array
[02:38:06] <entuland> pretty simple
[02:38:47] <entuland> the objects you have at the second level of your data structure are ready to be used there
[02:39:05] <entuland> pretty much in the same way that farn mentioned above
[02:42:20] *** Quits: Brumaire (~quassel@81-64-14-121.rev.numericable.fr) (Quit: ran away)
[02:42:29] <entuland> you may probably also want to filter the data if you don't need all the fields
[02:45:46] <entuland> as it would end up as a quite beefy table: https://i.imgur.com/Z61ksmc.png
[02:47:44] *** Quits: debsan (~debsan@2800:810:471:2ee::1000) (Ping timeout: 255 seconds)
[02:48:19] *** Joins: summersault (~summersau@179.221.251.16)
[02:48:19] <Donitz> https://hastebin.com/uxidohateq.kotlin
[02:48:34] <Donitz> any cleaner way to have multiple ranges
[02:48:38] <Donitz> without having to count manually
[02:48:42] *** Quits: l__q (~modinfo@user/modinfo) (Ping timeout: 256 seconds)
[02:50:11] <farn> schangg: https://codesandbox.io/s/tabulator-tables-sandbox-forked-j9k5x
[02:50:32] <entuland> for similar cases I like to have helper clamp() and in_range() functions, or something, Donitz
[02:50:47] <Donitz> yeah, but I'd like to not count up manually
[02:50:48] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[02:50:52] <Donitz> just say, 1 for this, 5 for this
[02:50:57] *** Joins: l__q (~modinfo@user/modinfo)
[02:51:06] *** Joins: summersault (~summersau@179.221.251.16)
[02:52:13] <entuland> the way you're using that "segmentIndex" thingie looks like a magic number or something
[02:53:12] *** Parts: StayHungry (~StayHungr@gateway/tor-sasl/stayhungry) (-)
[02:53:13] <Donitz> it's a variable
[02:53:18] <Donitz> not a constant
[02:53:36] <entuland> reproducing that exact behavior you could have an array where keys from 0 to 2 are filled with the callback to a function that creates the Forest section with the uselight, key 3 the callback to forestSign, 4 to 10 forest double sided and so forth
[02:53:52] <entuland> the magic numbers are the ones I just described above
[02:54:12] <entuland> 0 to 2 means do this, 3 means do that, 4 to 11 means do that other thing and so forth
[02:54:51] <entuland> if you create one such array you can simply do, say, callback[i]()
[02:54:56] <entuland> or something
[03:00:54] <Donitz> create(1, () => this._road.createSegment('Forest', d2r(0), 0, { useLight: true }));
[03:00:59] <Donitz> create(2, () => this._road.createSegment('Forest', d2r(0), 0, { useLight: true }));
[03:01:18] <entuland> that looks awful
[03:01:52] <entuland> let me understand another thing - imagine you keep using the switch, would you be creating many more switches with different numbers to "build" different sequences of those "tiles" or whatever they are?
[03:01:56] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[03:02:05] <entuland> this is just to understand your end goal overall
[03:03:26] <nedbat> I'm trying to properly handle errors from fetch. With this code: https://gist.github.com/ee932350fb70c1ed6342d7c9f84f8574 a bad status from the server causes the panel to appear (lines 16-17), but I still get an error in the console: "Uncaught (in promise) Error".  I don't understand what I am missing.
[03:04:43] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:e1ce:b567:194b:5747) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:05:09] <Donitz> just need to create a long list of segments
[03:05:13] <Donitz> like a 100 or something
[03:06:14] *** Joins: Brumaire (~quassel@81-64-14-121.rev.numericable.fr)
[03:07:37] *** Quits: Intelo (~Intelo@88.244.89.240) (Ping timeout: 246 seconds)
[03:07:46] <entuland> one minute, working on a thing
[03:09:25] <farn> nedbat: Well, you're basically rethrowing the error inside of the catch callback, so unless you again catch the return value of fetch_post_json, you're left with an uncaught Promise rejection
[03:09:38] <farn> If you consider the error to be sufficiently handled by showing the panel, why do you have line 18?
[03:09:52] <entuland> Donitz, since I still don't understand exactly what you need, have a look at these two different approaches: https://jsfiddle.net/entuland/5ehyqkct/
[03:10:41] <nedbat> farn: the promise returned by this function has more .then's applied to it.
[03:11:19] <nedbat> farn: without line 18, those .then's get invoked on undefined.
[03:12:25] <Donitz> I see
[03:13:04] <Donitz> it wouldn't work in this case, since I also need to specify a lot of parameters
[03:13:08] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[03:13:09] <Donitz> not only the function
[03:13:15] <nedbat> farn: i added .catch(() => {}) to the end of the chain, that seems to fix it, I hope that's not bad in some other way.
[03:13:23] <Donitz> it would be close to like 30-40 callbacks
[03:13:59] <entuland> Donitz, you could create your own "format" or at least optimize repeating sections
[03:14:12] <farn> nedbat: Fair enough. I was about to suggest that empty catch. I guess the only issue is that you're swallowing potential errors from the additional .then's
[03:14:15] <entuland> if you're going to have repeated sections at all
[03:14:32] <nedbat> farn: ok, i understand that.  thanks.
[03:16:17] <entuland> your sequence could be "FL;FS;*;*;FDS" (where "F" invokes a handler for Forest, which gets the L, S or DS to decide about Light, Sign or DoubleSign or something, "*" could mean "repeat the last section whatever it was"
[03:16:34] <Donitz> it's even more special, to the point where I will probably need other code inside the callbacks at points
[03:16:35] <entuland> a string or an object with values or whatever
[03:16:38] <Donitz> like, start effect etc.
[03:18:53] *** Joins: byanka_ (~byanka@212.55.77.96)
[03:19:28] <entuland> okay, seems like there is still more context missing, but I guess I would tackle that with an array of objects to contain the callback and only the params that change or the alike - centralizing anything that can be centralized without creating 30 / 40 callbacks
[03:19:51] <entuland> if you need more help, you may need to start from scratch and describe the full picture properly
[03:22:38] <Donitz> that's what I was doing
[03:22:41] <Donitz> create(1, () => this._road.createSegment('Forest', d2r(0), 0, { useLight: true }));
[03:22:45] <Donitz> create one instance in the array
[03:22:49] <Donitz> the other one was 2
[03:23:24] <Donitz> I'm just creating a road with events
[03:23:44] <Donitz> well, I'm creating the blueprint for a road
[03:24:14] <entuland> okay, but you have sections where the same thing is done over and over again multiple times
[03:24:22] <entuland> that section from 4 to 11 or something
[03:24:31] <Donitz> yes, just a plain road
[03:24:47] *** Joins: debsan (~debsan@2800:810:471:2ee::1000)
[03:25:28] <entuland> so you need a way to tell "okay, do something else here" or "okay, do the same thing as before for 5 more times"
[03:26:13] <Donitz> yes
[03:26:28] *** Joins: zerowalker (~ZeroWalke@2001:9b1:28f8:8300:7164:4c68:eefc:f59d)
[03:26:56] *** Quits: enoq (~enoq@194-208-179-35.lampert.tv) (Quit: enoq)
[03:27:11] <entuland> this means that your sequence, whatever it is, should contain only data, and possibly callback references, not actual code that gets executed
[03:27:32] <entuland> so that you can have another bit of code going through the sequence to actually perform the work
[03:27:57] <entuland> either changing the callback to be called, or just altering the params to that callback, or just repeating the last call for N times or something
[03:28:08] <entuland> you need some kind of custom format for your road specification
[03:28:27] <Donitz> I don't think it's worth reformatting the callback into another format
[03:28:31] <Donitz> it doesn't really gain you anything
[03:28:46] <entuland> then you're likely stuck with those magic numbers
[03:28:51] <Donitz> hmm
[03:28:52] <Donitz> maybe
[03:29:06] <Donitz> I don't know, maybe I don't want to use randomized values in the road
[03:29:14] <Donitz> maybe I truly want to hard-code each and every segment
[03:29:19] <schangg> Given that I have an array of object (or array of dicts), how can I find the index of the dict for which the value of given key has a certain value ?
[03:29:45] <schangg> I could certainly loop through the array but I was wondering if there a magic way of doing this
[03:30:08] <schangg> also, only one dict shall have the value that I am looking for
[03:31:09] <entuland> Donitz, in theory you should really completely separate the two things, or your system would not really be flexible - if you are going to have a completely different road with the same bits and pieces in a different order, I would create a road specification format, the code to interpret such format, then I can feed any sequence of data in that format to create the road
[03:31:33] <Donitz> if it was a racing game maybe, but this is like a story driven horror game
[03:31:37] <Donitz> in which I need a lot of custom scripts
[03:32:09] <Donitz> things like cutscenes
[03:32:44] <entuland> dunno, I don't have experience with such kind of games, I may be completely off target
[03:33:19] <Donitz> this class is called Director, and it handles the entire story of the game
[03:33:39] <Donitz> such as spawning things, starting animations, creating the road
[03:34:02] <entuland> it just feels convenient to have at least a "level format" and a "level player", if not even a "level builder" - replace "level" with "story section" or whatever else
[03:34:16] <Donitz> I understand, I'm just lazy and pragmatic
[03:34:51] <Donitz> ie, I don't really consider making things much easier for myself in the future
[03:34:52] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:e0d6:b7e7:bfb1:81e0)
[03:34:52] <entuland> point is that the time you may be saving now diving into the actual story hardcoded in your source could be not a real save
[03:34:53] <Donitz> since it's a one off
[03:35:11] <entuland> you know better
[03:35:23] <Donitz> well I have done quite a few horror games, and I haven't revisited them
[03:35:27] <Donitz> eh... one sec
[03:35:32] <Donitz> let me paste in a similiar class I made
[03:35:57] <Donitz> view-source:https://v6p9d9t4.ssl.hwcdn.net/html/3704931/js/entities/director.class.js
[03:36:39] <Donitz> ah, playEvent. That's what I used to call it
[03:36:44] <Donitz> that's better than playScene
[03:36:50] <entuland> is that from the green game where you play the maze into the computer _inside_ the game itself?
[03:36:53] <Donitz> yes
[03:37:02] <entuland> okay
[03:37:06] <Donitz> so many timeouts
[03:37:17] <entuland> as above, you know better for what your current project is
[03:37:17] <farn> If you're going to create lots of those roads, I do like the idea of a slightly more descriptive way to compose them. https://dpaste.org/BmCM/slim
[03:37:40] <Donitz> n> repeat
[03:37:41] <jellobot> (fail) ReferenceError: repeat is not defined
[03:37:56] <entuland> ehehe
[03:37:56] <Donitz> ah, function returning repeated
[03:38:01] <Donitz> yes, that's a good format
[03:38:08] <farn> schangg: array.findIndex(item => item.key === value)
[03:39:17] <entuland> yep, that approach creating a sequence without hardcoding the indices but just the amount of repeats looks good
[03:40:43] *** Quits: OverCoder (~OverCoder@user/overcoder) (Remote host closed the connection)
[03:40:50] <farn> function repeat(num, value) { return Array.from({ length: num }, () => value) }
[03:41:23] <farn> for (const segment of road) { this._road.createSegment(...segment) }
[03:41:26] <entuland> all in all, for a one off thing that isn't going to take too long to code, anything that works could do, even flat out copypasting entire sections
[03:42:24] <Donitz> it may be worth doing that in the end, so I can hardcode the entire thing
[03:42:31] <Donitz> every road angle
[03:42:37] <Donitz> and every light pole
[03:42:50] <wroathe> Ok. What's the question. I shall decide.
[03:42:52] <Donitz> but the capability is there to make an infinite random road :D
[03:42:54] <wroathe> You should use more curry.
[03:43:04] *** Quits: schangg (~schangg@2a01cb080746b7008639c0fffe0203dd.ipv6.abo.wanadoo.fr) (Quit: WeeChat 2.3)
[03:43:08] <Donitz> I don't know why I create things I don't end up using
[03:43:22] <wroathe> Donitz: That's easy. OOP tricks you into it. Next question.
[03:43:42] <Donitz> it's more that I try to create as much as possible before I actually have to start planning the actual game
[03:43:49] <Donitz> because I'm afraid of commitment
[03:44:32] <wroathe> Donitz: For a real answer, one thing that I've found to greatly help with bikeshedding is to focus on getting an extremely barebones MVP of whatever you're building completed.
[03:44:42] <wroathe> Donitz: And then just iterating from there
[03:44:57] <Donitz> that works better with non-story driven games
[03:45:03] <Donitz> in which gameplay is the major focus
[03:45:27] <wroathe> Donitz: Not necessarily. The point here is that you don't need to make every decision up front. As soon as you land on something you can build, just built it.
[03:45:29] <Donitz> I mean, I always end up iterating on games anyway
[03:45:37] <Donitz> no game I make end up the way I envisioned it
[03:46:09] <Donitz> for example, when I'm doing with this first scare, I'll see what works and doesn't work
[03:46:16] <Donitz> and will probably change what I planned for later
[03:48:37] <Donitz> it must be nice to be a big game studio
[03:48:40] <Donitz> and have people draw concept art
[03:48:43] <Donitz> and THEN actually use it too
[03:49:42] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 258 seconds)
[03:49:45] <entuland> eh, it's a double edged sword with lots of stuff that easily goes to the trash bin (along with the hours / days it took to create them)
[03:50:05] <entuland> but that's part of the game of making games
[03:50:08] *** Joins: dc1 (~dc@user/dc)
[03:50:26] <wroathe> I find it can be really motiviating just to get something small you can interact with in place first
[03:50:37] <Donitz> I do have it
[03:50:48] <Donitz> https://streamable.com/zqxb1t
[03:51:19] <wroathe> Nice~
[03:51:20] <wroathe> !
[03:51:50] <Donitz> more three.js stuff
[03:51:53] <Donitz> I like three.js
[03:52:04] <entuland> eh, that should have been shared as the very first thing along with the question, if you had it ready :P
[03:52:20] <entuland> would have saved a bit of discussion back and forth to understand the end goal
[03:52:53] <entuland> you could decouple the parts
[03:53:04] <Donitz> ah
[03:53:22] <entuland> one sequence to decide the road, an array to decide where to put the lights, another array with "sensors" to know where to trigger effects and so forth
[03:53:33] <entuland> you don't have to cram everything in a single tile
[03:54:40] <Donitz> the segments aren't normalized enough. Not every type has a light for example
[03:54:47] <Donitz> and some require special things, like show a sign
[03:54:54] *** Quits: dc1 (~dc@user/dc) (Ping timeout: 276 seconds)
[03:54:59] <entuland> that's the point - you don't need to couple them
[03:55:03] <Donitz> ie, I provide an options object used in the a setup function for each type of segment
[03:55:22] <entuland> your approach is coupling the combinations, you don't have to
[03:56:59] <entuland> silly example just to convey the idea: road: [left, straight, left, crossing]; lights [10m, 15m, 34m]; sign: [20m, 40m]; scarejump: [100m]
[03:57:45] <entuland> again, you have far more experience than me in doing these things, just throwing ideas to evaluate
[03:58:27] <Donitz> ah. Yeah I get it
[03:58:36] <Donitz> but it's a bit more difficult to follow
[03:58:48] <Donitz> since it's combinations that matter
[03:58:55] <Donitz> no light, jump scare
[03:59:09] <entuland> yeah, may be a bad idea here
[03:59:25] <entuland> just wanted to share in case you saw a pattern you could follow
[04:01:06] *** Quits: wroathe (~wroathe@96-88-30-181-static.hfc.comcastbusiness.net) (Ping timeout: 240 seconds)
[04:01:36] <Donitz> yeah, I appreciate it
[04:01:48] <Donitz> I wish you could use things like 50m in games
[04:01:53] <Donitz> just some way to use actual units
[04:02:02] <Donitz> in code
[04:02:12] <entuland> you can, it's just matter of proper scaling
[04:02:27] <Donitz> I'd like to be able to say 50m or 30cm
[04:02:36] <Donitz> well, it would be possible if you use strings
[04:02:39] <entuland> yep
[04:02:48] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[04:02:57] <entuland> this is me going off a tangent: you could make a spreadsheet and populate it with chars in each cell to decide where to put all the items, pattern out the road, maybe some manually typed JSON for special data
[04:03:14] <entuland> then convert the spreadsheet into CSV and feed it to your game to be processed
[04:03:19] <Donitz> it's kinda close to json to begin with
[04:03:41] <entuland> yeah, but it gives you a 2D dimension that's easier to handle
[04:03:42] <Donitz> I've actually used json as map structures in quite a few games
[04:03:43] *** Quits: Deide (~Deide@user/deide) (Quit: Seeee yaaaa)
[04:04:03] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[04:04:15] <Donitz> csv I'm not a huge fan of
[04:04:22] <Donitz> except for when handling large data
[04:04:34] <entuland> it's just a way to transfer a matrix in this case
[04:04:49] <entuland> where you don't have to manually edit the code to move stuff around in the 2D space
[04:05:04] <entuland> as you'd be filling it in a spreadsheet program or something
[04:05:34] <Donitz> ah yes
[04:05:47] <Donitz> that would work for some kind of adventure game
[04:06:07] <Donitz> hmm
[04:06:10] <entuland> hence my "tangent" :P not necessarily strictly tied to the project at hand
[04:07:04] <entuland> bitmaps can be used to model the terrain (one for the road / roadside / tree / signs, just pixels of different colors) another for the terrain height (a grayscale bitmap)
[04:07:05] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[04:07:12] <entuland> tuxracer allowed creating levels like that IIRC
[04:07:29] <entuland> another tangent :P
[04:08:38] <Donitz> you can also store everything in a single png
[04:08:46] <Donitz> especially if you use indexed colors
[04:09:08] <Donitz> then you can use red as height, blue as color, green bit 0-7 for attributes
[04:09:10] <entuland> yep, transparency can be used for the elevation there, instead of the grayscale map
[04:09:14] <Donitz> and forget alpha, because alpha messes things up
[04:09:34] <Donitz> https://img2map3d.herokuapp.com
[04:09:43] <Donitz> that house is made from the image to the left
[04:09:50] <Donitz> the models too
[04:10:39] <Donitz> color, alpha, emission, depth, interpolation
[04:11:07] <entuland> an SVG edited in inkscape or the alike could be used to store data about special areas to trigger scarejump / teleporting to other parts of the map or whatever else - you import the bitmap and just draw shapes on it to decide such interaction (well, you'd need to parse that SVG in the program)
[04:11:25] <entuland> again, tangents :P
[04:11:29] <Donitz> can also just use polygon intersection checks
[04:11:41] <Donitz> from svg
[04:12:42] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[04:12:48] <Donitz> actually, in this game I made, I create the collision meshes in blender
[04:13:08] <Donitz> and use raycasting downwards from the back and front wheel to determine bike height
[04:13:10] <Donitz> and slope
[04:13:35] <Donitz> creating navmeshes in blender is really easy
[04:14:52] <entuland> fun stuff :)
[04:20:33] *** Quits: entuland (~entuland@user/entuland) (Quit: Leaving)
[04:28:20] *** Joins: summersault (~summersau@179.221.251.16)
[04:28:55] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[04:29:01] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:fcb7:37b6:e634:bc8f)
[04:32:47] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 250 seconds)
[04:42:20] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[04:45:11] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[04:45:35] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[04:46:05] *** Joins: summersault (~summersau@179.221.251.16)
[04:47:36] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[04:48:12] *** Joins: dc1 (~dc@user/dc)
[04:52:35] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[04:52:50] *** Quits: dc1 (~dc@user/dc) (Ping timeout: 265 seconds)
[04:53:00] *** Joins: stenno (~stenno@user/stenno)
[04:54:50] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:fcb7:37b6:e634:bc8f) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:55:06] *** Joins: peterhil (~peterhil@mobile-access-b04801-219.dhcp.inet.fi)
[04:55:23] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:fcb7:37b6:e634:bc8f)
[04:55:38] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:fcb7:37b6:e634:bc8f) (Client Quit)
[04:55:44] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 265 seconds)
[04:56:50] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[04:57:41] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[04:59:45] *** Joins: stenno (~stenno@user/stenno)
[05:00:05] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 265 seconds)
[05:01:18] *** Quits: chowmeined (~chowmeine@user/chowmeined) (Ping timeout: 268 seconds)
[05:04:16] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[05:04:18] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 240 seconds)
[05:05:23] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[05:06:20] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[05:07:36] *** Joins: stenno (~stenno@user/stenno)
[05:14:34] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[05:19:47] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 258 seconds)
[05:22:10] *** Joins: stenno (~stenno@user/stenno)
[05:22:44] *** Joins: jazzy (~jaziz@2600:380:c174:6a3d:c4c3:7674:1736:67d4)
[05:32:30] *** Joins: xse (~xse@user/xse)
[05:33:09] *** Joins: summersault (~summersau@179.221.251.16)
[05:33:20] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 255 seconds)
[05:35:16] *** Joins: stenno (~stenno@user/stenno)
[05:37:18] *** Joins: Drgonz0 (~Drgonz0@107-179-254-222.cpe.teksavvy.com)
[05:37:27] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[05:37:47] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 265 seconds)
[05:40:49] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 250 seconds)
[05:43:50] *** Joins: stenno (~stenno@user/stenno)
[05:45:16] *** Joins: pavonia (~user@user/siracusa)
[05:46:04] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[05:48:50] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 252 seconds)
[05:49:23] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 265 seconds)
[05:54:42] *** Quits: Lyn (~Lyn@user/law) (Ping timeout: 265 seconds)
[05:58:36] *** Joins: stenno (~stenno@user/stenno)
[06:03:08] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 252 seconds)
[06:04:19] *** Joins: stenno (~stenno@user/stenno)
[06:05:33] *** Joins: summersault (~summersau@179.221.251.16)
[06:09:37] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 258 seconds)
[06:14:30] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[06:16:11] *** Joins: silly (~silly@user/silly)
[06:16:50] *** Quits: Atum_ (~IRC@user/atum/x-2392232) (Quit: Atum_)
[06:21:37] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[06:21:49] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[06:21:53] *** Quits: Brumaire (~quassel@81-64-14-121.rev.numericable.fr) (Ping timeout: 258 seconds)
[06:37:06] *** Joins: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com)
[06:39:54] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 258 seconds)
[06:46:49] *** Quits: keypusher (keypusher@user/keypusher) (Remote host closed the connection)
[06:47:33] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 250 seconds)
[06:48:03] *** Joins: keypusher (keypusher@user/keypusher)
[06:54:38] *** Joins: summersault (~summersau@179.221.251.16)
[06:57:26] *** Joins: silly_ (~silly@user/silly)
[07:00:55] *** Quits: silly (~silly@user/silly) (Ping timeout: 265 seconds)
[07:01:21] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[07:03:20] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[07:04:03] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[07:04:14] *** Joins: Rockwood (~Rocky@user/rocky)
[07:06:38] *** Quits: skillbot (~skillbot@user/skillbot) (Remote host closed the connection)
[07:06:54] *** Joins: skillbot (~skillbot@user/skillbot)
[07:06:55] *** ChanServ sets mode: +v skillbot
[07:07:31] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[07:08:59] *** Joins: sillyslux__ (~silly@user/silly)
[07:09:34] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 268 seconds)
[07:12:29] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 258 seconds)
[07:12:37] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 245 seconds)
[07:16:42] *** Quits: peterhil (~peterhil@mobile-access-b04801-219.dhcp.inet.fi) (Ping timeout: 240 seconds)
[07:18:01] *** Joins: crazyhorse (~crazyhors@220-244-196-30.tpgi.com.au)
[07:18:17] <crazyhorse> hi all.. how do you get a list of the available services from a bluetooth device?
[07:22:42] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[07:22:43] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[07:28:12] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 258 seconds)
[07:30:07] <CoJaBo> wat.
[07:31:36] <crazyhorse> something wrong with the question?
[07:32:18] *** Quits: IceMichael (~IceMichae@dynamic-046-114-155-121.46.114.pool.telefonica.de) (Ping timeout: 240 seconds)
[07:33:11] *** Joins: IceMichael (~IceMichae@dynamic-046-114-158-204.46.114.pool.telefonica.de)
[07:33:16] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[07:42:57] *** Joins: silly_ (~silly@user/silly)
[07:46:32] *** Quits: sillyslux__ (~silly@user/silly) (Ping timeout: 255 seconds)
[07:51:22] *** Joins: sillyslux__ (~silly@user/silly)
[07:51:36] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[07:52:38] *** Quits: IceMichael (~IceMichae@dynamic-046-114-158-204.46.114.pool.telefonica.de) (Ping timeout: 265 seconds)
[07:53:29] *** Joins: IceMichael (~IceMichae@dynamic-046-114-158-204.46.114.pool.telefonica.de)
[07:54:47] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 252 seconds)
[07:55:12] *** Quits: byanka (~byanka@212.55.77.96) (Read error: Connection reset by peer)
[07:55:35] *** Joins: byanka (~byanka@212.55.77.96)
[07:57:21] *** Joins: summersault (~summersau@179.221.251.16)
[08:01:49] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 265 seconds)
[08:02:48] *** Quits: crazyhorse (~crazyhors@220-244-196-30.tpgi.com.au) (Remote host closed the connection)
[08:08:37] *** lind{at}yahoo is now known as Odyss3us
[08:08:45] *** Odyss3us is now known as Crusher
[08:09:03] *** Crusher is now known as lind{at}yahoo
[08:13:32] *** Joins: summersault (~summersau@179.221.251.16)
[08:13:39] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:b490:7230:7640:aaf5)
[08:16:59] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[08:17:17] *** Joins: summersault (~summersau@179.221.251.16)
[08:40:32] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 255 seconds)
[08:47:44] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[08:55:10] *** Joins: Guest85 (~Guest85@52.119.111.1)
[08:58:40] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[09:11:39] *** Joins: Guest8562 (~Guest85@52.119.111.1)
[09:12:24] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[09:15:28] *** Quits: Guest85 (~Guest85@52.119.111.1) (Ping timeout: 246 seconds)
[09:18:02] *** Quits: Drgonz0 (~Drgonz0@107-179-254-222.cpe.teksavvy.com) ()
[09:20:56] *** Quits: Guest8562 (~Guest85@52.119.111.1) (Quit: Client closed)
[09:26:45] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[09:31:52] *** Joins: silly_ (~silly@user/silly)
[09:33:33] <theskillwithin> keep summer safe
[09:35:10] <wroathe> theskillwithin: Your purpose is to pass the butter.
[09:35:20] * CoJaBo cubifies theskillwithin 
[09:35:35] *** Quits: sillyslux__ (~silly@user/silly) (Ping timeout: 265 seconds)
[09:36:06] <theskillwithin> 😋
[09:36:36] <CoJaBo> That.. displays as a cube, but I don't know if that's because it is, or because my font sucks
[09:37:32] <theskillwithin> smiling emoji
[09:37:49] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[09:38:25] <theskillwithin> ⭐️
[09:38:34] <theskillwithin> star emoji
[09:39:50] *** Joins: Guest49 (~Guest49@52.119.111.1)
[09:40:41] <theskillwithin> CoJaBo well u had reference from that specific episode so =]
[09:42:04] *** Joins: Guest4997 (~Guest49@52.119.111.1)
[09:43:12] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[09:44:06] *** Joins: jetchisel (jetchisel@user/jetchisel)
[09:45:34] *** Quits: Guest49 (~Guest49@52.119.111.1) (Ping timeout: 246 seconds)
[09:45:37] *** Quits: Guest4997 (~Guest49@52.119.111.1) (Client Quit)
[09:48:38] <Rockwood> theskillwithin, cheers bro
[09:48:59] <Rockwood> transportor  is good name for fetch
[09:49:27] <Rockwood> i will make function for fetch
[09:49:35] <Rockwood> for my project
[09:50:05] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 265 seconds)
[09:50:27] <Rockwood> oops dataTransportor is looks good
[09:50:45] <Rockwood> any suggestion thanks in advance
[09:51:37] <theskillwithin> im confused
[09:52:01] <Rockwood> in what?
[09:52:14] <Rockwood> i am just thinking about name
[09:53:35] *** Joins: CryptoDavid (uid14990@id-14990.highgate.irccloud.com)
[10:00:14] *** Joins: teut (~teut@122.162.166.192)
[10:01:25] <teut> https://dpaste.org/LEff#L14  how to do that without maintaining extra dummy state?
[10:01:48] <teut> this problem doesnt happen in plain html
[10:03:43] <theskillwithin> teut for a ctonrolled input, u have onChange and value
[10:04:06] <teut> controlled input?
[10:04:23] <teut> React Hook useEffect received a function whose dependencies are unknown. Pass an inline function instead.eslintreact-hooks/exhaustive-deps
[10:04:33] <teut> that that useeffect is saying something to me
[10:04:51] <theskillwithin> https://codesandbox.io/s/react-form-example-gm9o6
[10:05:29] <theskillwithin> useEffect inside of an onChange event. lfol no
[10:05:37] <theskillwithin> lol no*
[10:05:50] <theskillwithin> thats silly
[10:05:51] <teut> ya because I m creating a sideeffect
[10:06:06] <teut> useEffect is for sideEffect, no?
[10:06:36] <teut> in the docs they changed the <title/> with it
[10:06:43] <theskillwithin> ugh im afraid you misinterpreted some things
[10:06:55] <teut> whats the solution?
[10:07:30] <theskillwithin> to not misinterpret some times
[10:08:00] <teut> ok, I understood your "controlled input"
[10:08:35] <teut> vale={some state }  fixed it to some state because of rerendering
[10:08:41] <teut> fixes*
[10:09:26] <teut>    console.log("form initial state: ", form);
[10:09:27] <teut>     // eslint-disable-next-line react-hooks/exhaustive-deps
[10:09:27] <teut>  what does this do?
[10:11:04] <theskillwithin> look it up
[10:12:18] <teut> https://github.com/facebook/react/issues/19240   ya, this is there but too much difficult to understand
[10:14:11] <teut> onChange={event => {        setPatientTestResults(state => [...state, document.getElementById("add-test").target.value])}}    this gives a noop
[10:16:09] <teut> click  , oops
[10:17:06] <teut> still, it just refreshes the page
[10:18:24] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 258 seconds)
[10:19:41] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[10:21:05] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 258 seconds)
[10:22:25] *** Quits: ferdna (~ferdna@user/ferdna) (Remote host closed the connection)
[10:39:32] *** Joins: stenno (~stenno@user/stenno)
[10:45:18] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 272 seconds)
[10:47:36] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[10:48:42] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[10:50:34] <teut> https://dpaste.org/pgVC#L23,73  how to create this side effect?
[10:51:12] <teut> basically as the  button is clicked in patient details ,   the sidebar should add an item
[10:52:26] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 265 seconds)
[10:55:12] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 258 seconds)
[10:55:58] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 258 seconds)
[10:57:50] *** Quits: silly_ (~silly@user/silly) (Read error: Connection reset by peer)
[11:04:38] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[11:06:41] *** Quits: lind{at}yahoo (uid486956@id-486956.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[11:07:10] *** Joins: jetchisel (jetchisel@user/jetchisel)
[11:09:17] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[11:27:00] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[11:31:35] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 265 seconds)
[11:32:46] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:35:04] *** Joins: mei4 (~mei@user/mei)
[11:36:02] *** Quits: debsan (~debsan@2800:810:471:2ee::1000) (Ping timeout: 255 seconds)
[11:38:44] *** Quits: mei (~mei@user/mei) (Ping timeout: 255 seconds)
[11:38:44] *** mei4 is now known as mei
[11:40:23] *** Joins: dc1 (~dc@user/dc)
[11:49:08] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[12:01:52] *** Joins: qswz (~caub@91-175-196-225.subs.proxad.net)
[12:02:02] <qswz> write this better:
[12:02:11] <qswz> const _baseLang = detectedLang.split('-', 1)[0];
[12:02:16] <qswz> const baseLang = { nb: 'no' }[_baseLang] || _baseLang;
[12:04:24] <qswz> por favor, si se puede
[12:04:51] <qswz> I dislike `if`
[12:05:08] <qswz> I could ternary it
[12:05:13] *** Joins: ferdna (~ferdna@user/ferdna)
[12:05:38] <qswz> but if laterwe have more cases it'll be easier with theobject literal
[12:05:51] <qswz> yea my space bar isn't always woring
[12:05:58] *** Joins: hygl (uid16621@id-16621.tinside.irccloud.com)
[12:08:00] *** Joins: stenno (~stenno@user/stenno)
[12:11:01] <qswz> and this:
[12:11:09] <qswz> currentLang = availableLanguages.includes(detectedLang) ? detectedLang : availableLanguages.includes(baseLang) ? baseLang : availableLanguages[0];
[12:11:34] <qswz> possible to write it with boring if, else if, else
[12:11:37] <qswz> but nah
[12:12:38] <qswz>  currentLang = [detectedLang, baseLang].find(l => availableLanguages.includes(l)) || availableLanguages[0];
[12:13:47] <qswz> oh dam, did covid obliteratedthe whole channel?
[12:14:02] *** Quits: skillbot (~skillbot@user/skillbot) (Remote host closed the connection)
[12:14:16] *** Joins: skillbot (~skillbot@li1200-69.members.linode.com)
[12:14:17] *** Quits: skillbot (~skillbot@li1200-69.members.linode.com) (Changing host)
[12:14:17] *** Joins: skillbot (~skillbot@user/skillbot)
[12:14:17] *** ChanServ sets mode: +v skillbot
[12:14:21] * qswz looks outside if there's still life
[12:16:13] <qswz> I'd love to combine const _baseLang = detectedLang.split('-', 1)[0]; const baseLang = { nb: 'no' }[_baseLang] || _baseLang; in one statement
[12:16:35] <qswz> well, I guess it's asking too much for now
[12:16:47] <IceMichael> I cannot even parse your code, unreadable for me
[12:16:50] <IceMichael> not a JS expert but...
[12:17:03] <IceMichael> so _baseLang could basically be something like US? (if it was en-US)
[12:17:03] <qswz> const _baseLang = detectedLang.split('-', 1)[0];
[12:17:20] <qswz> yea detectedLang can be 'en-US'
[12:17:34] <qswz> 'nb-NO'
[12:17:46] <qswz> 'de-CH' etc..
[12:17:56] <IceMichael> so after parsing, you would geht nb or de?
[12:18:02] <qswz> we grap the furst part
[12:18:07] <qswz> yea
[12:18:12] <qswz> first*
[12:18:29] *** Quits: Haxxa (~Haxxa@122.199.45.186) (Quit: Haxxa flies away.)
[12:18:45] <qswz> then we need to convert 'nb' into 'no'
[12:18:52] *** Joins: Haxxa (~Haxxa@122.199.45.186)
[12:18:58] <qswz> because those damn Norsk can use 2 possible regions
[12:19:23] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[12:19:33] <qswz> and we need to match against our own availableLanguages settings
[12:21:27] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 258 seconds)
[12:21:32] <IceMichael> hm, some lookup table might be more scalable in the long run
[12:21:42] <qswz> yea, good point
[12:21:42] <IceMichael> okay, you could extend... anyways
[12:22:00] <qswz> or let baseLang = detectedLang.split('-', 1)[0];
[12:22:03] <IceMichael> I would not try to merge these two lines, it just gets messy
[12:22:14] <IceMichael> such split statements are hard to read anyways
[12:22:26] <qswz> switch(baseLang) { case 'nb': baseLang='no'; break;} hmm nah
[12:22:44] <qswz> yea ok thanks
[12:25:40] <stenno> object lookup
[12:27:15] <qswz> n> x={nb:'no'}.nb; x // looks weird haha
[12:27:16] <jellobot> (okay) 'no'
[12:27:18] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[12:29:26] <farn> teut: That shouldn't required useEffect. Here's one way: https://dpaste.org/nP8R/slim
[12:32:09] <IceMichael> qswz, what you did first was object lookup and was probably fine enough
[12:32:12] <qswz> teut: what UI lib is it?
[12:32:24] <IceMichael> if he says useEffect probably react?
[12:32:25] <qswz> <Form.Input fluid
[12:32:28] *** Quits: CryptoDavid (uid14990@id-14990.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[12:32:34] <qswz> IceMichael: ok thanks
[12:32:55] <qswz> I mean react-bootstrap vs material-ui vs other?
[12:33:19] <qswz> I don't think it's those first 2, that's why I'm asking
[12:36:06] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:36:58] *** Joins: zakame (~zakame@user/zakame)
[12:38:35] *** Quits: dc1 (~dc@user/dc) (Ping timeout: 255 seconds)
[12:38:50] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:39:19] <farn> it's semantic-ui-react
[12:41:59] <teut> yep
[12:44:02] <teut> farn, but how will u affect the sidebar?
[12:44:15] <teut> usecontext would be the way to go
[12:44:24] <teut> not useeffect, I realised
[12:45:39] <farn> Ah, now I understand the issue. Right, if patientTestResults should also be displayed in the sidebar, that state needs to live higher up in the tree. You can then pass it down to both components using props or context
[12:46:02] <qswz> yea either passed state or context
[12:46:15] <Rockwood> qswz, o/ h r u?
[12:46:49] <teut> yes, the parent, ie the App will have to deliver it to the sidebar
[12:47:13] <teut> that App looks over the navbar, sidebar, and the main area
[12:50:31] <teut> https://dpaste.org/zdmA#L11,40,56,57
[12:50:34] *** Joins: dracula (~dracula@117.222.64.22)
[12:50:41] <teut> here I ve done it but I see no effect of it
[12:53:28] <qswz> you've put a context provider somewhere?
[12:54:07] <qswz> https://reactjs.org/docs/hooks-reference.html#usecontext
[12:55:03] <qswz> you need to wrap those components into <PatientTestsContext.Provider>
[12:55:29] <teut> wasnt that with classes?
[12:55:44] <qswz> still needed for hooks
[12:55:56] <qswz> if you didn't you should see some warnings in console
[12:57:24] <teut> console is already filled with warnings for unused components and others, difficult to find this one
[12:57:33] <farn> You do actually need to move `const [patientTestResults, setPatientTestResults] = useState([]);` to the App component
[12:57:50] <farn> You can then pass both values to PatientTestResults and the first one to the sidebar
[12:58:34] <farn> I'd pass then down via props. You can also use context but what you're doing is not at all how context works
[12:58:42] <teut> hmm, but that would be the wrong place for it logically
[12:59:15] <teut> although that would work
[13:00:29] <farn> I understand. You could create a PatientTestResultsProvider component that wraps the App and passes those values down via context
[13:01:59] <teut> ya, I m trying to understand this portion , I hadnt understood it well from my tutorial long back when I was starting with react
[13:02:11] <farn> Either way, React doesn't let you pass data sideways. Data flows down via props or context and up via function calls
[13:02:44] <teut> ya, that's why useContext is useful
[13:03:08] <teut>  I recently only got to know about its usecase from some subscribed blog
[13:03:45] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:04:13] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[13:07:28] <stenno> i like how angular and vue does it
[13:07:36] <stenno> with events
[13:07:48] <teut> vue is good, but it spils the html
[13:07:53] <teut> spoils*
[13:12:42] <teut> https://daveceddia.com/usecontext-hook/  should I learn redux instead of useContext?
[13:13:04] <teut> my app will become big atleast at some point oftime
[13:13:05] <qswz> not worth
[13:13:22] <teut> the provider thing is so hard to take in
[13:13:25] <qswz> usecontext is super simple, just read eact docs
[13:13:30] <stenno> there is also a dedicated react channel on libera, #reactjs
[13:13:38] <stenno> so if you have any specific react questions, you should ask them there
[13:13:43] <teut> but there are 6 people only there
[13:13:45] <stenno> no
[13:13:54] <stenno> there are 65 people there
[13:14:02] <stenno> i know this, because i am there too
[13:14:04] <teut> hmm, I might have gone to #react
[13:14:23] <teut> thanks
[13:16:23] *** Joins: incognito (~relativit@user/incognito)
[13:19:52] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[13:21:57] <incognito> hey dear es peplezz
[13:22:02] <incognito> people*
[13:22:35] <incognito> what is the best way to concat string in order to write to them to a file ? (performance are poor here)
[13:23:02] <qswz> more context
[13:23:25] <incognito> i'm generating some GB of json text
[13:23:30] <qswz> nodejs/browser?
[13:23:33] <incognito> by little block some KB
[13:23:35] <incognito> node
[13:23:55] <qswz> you could use a Stream
[13:23:59] <qswz> WritableStream
[13:24:08] <incognito> i'm trying to find the best way to achieve that
[13:24:10] <teut> you can use iterators
[13:24:25] <incognito> i talk about perf. not about lint
[13:24:29] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[13:25:12] <incognito> qswz: indeed you are right, perhaps the writable stream could give better perf on many little write operations; i'll try that
[13:26:44] *** Quits: p_stampy (~thelounge@user/p-stampy/x-2915953) (Ping timeout: 255 seconds)
[13:27:42] <stenno> how many GB?
[13:27:57] <stenno> enough to have you swap your ram?
[13:28:59] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 255 seconds)
[13:29:26] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 268 seconds)
[13:32:32] <qswz> on the simple level, just const s=fs.createWriteStream('file.json')
[13:33:13] <qswz> s.write('[1,2,3,5]'); s.end()
[13:33:48] <qswz> if you want some intermediate string to convert to json, you can have a stream.Transform with objectMode: true
[13:34:46] <qswz> s/string/stream
[13:35:21] *** Quits: azizLIGHT (~azizLIGHT@user/azizlight) (Ping timeout: 276 seconds)
[13:36:25] *** Joins: azizLIGHT (~azizLIGHT@user/azizlight)
[13:41:42] *** Joins: CoolerX (~CoolerX@user/coolerx)
[13:41:44] <CoolerX> Hi
[13:43:07] * IceMichael test
[13:43:11] * IceMichael asdf test
[13:43:40] <stenno> asdf
[13:43:46] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:88fc:5dd0:d184:2dee)
[13:45:13] <qswz> qsdf in french
[13:46:24] <qswz> did someone finished the google doodle thing
[13:46:38] <qswz> I passed the pingpong challenge, and the dance thing
[13:47:24] <qswz> oh ping pong was juste a test actually
[13:47:33] <qswz> only 10330 in dancing
[13:50:24] <incognito> stenno: i have 332GB
[13:50:28] <incognito> 32GB*
[13:50:42] <incognito> it shouldn't swap
[13:50:48] <incognito> ideally ^^
[13:51:20] <incognito> but all the promisified builtin function are costing more RAM
[13:51:21] <qswz> how do you make the json?
[13:52:54] <incognito> me ?
[13:52:58] <qswz> ya
[13:53:13] <incognito> some unzipping block
[13:53:28] <incognito> inflating zlib block
[13:54:00] <incognito> yay, already 2.9GB written
[13:54:19] <qswz> it should just be streams
[13:54:43] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[13:54:44] <incognito> for inflating, i don't consider using the stream the right solution
[13:54:51] <qswz> .pipe all the things
[13:54:57] *** Joins: entuland (~entuland@user/entuland)
[13:55:00] <incognito> that's exactly what I tried before
[13:55:02] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[13:55:11] <qswz> there are stream version for the compress/decompress
[13:55:14] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[13:56:23] *** Quits: keypusher (keypusher@user/keypusher) (Remote host closed the connection)
[13:57:24] <qswz> leaving the streamway would be a mistake, as you'd rely on memory
[13:57:35] <incognito> yep
[13:57:48] <incognito> i'll retry but not noow
[13:58:31] *** Joins: Rockwood_ (~Rocky@user/rocky)
[13:58:32] <incognito> (wow this kailh speed switches are way too sensible for me)
[14:00:32] <incognito> note that fs.readSync() in node 14
[14:02:21] <qswz> if you have intially a large file, fs.createReadStream
[14:02:26] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Read error: Connection reset by peer)
[14:02:44] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 268 seconds)
[14:03:10] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[14:04:15] *** Joins: keypusher (keypusher@user/keypusher)
[14:09:39] *** Joins: ___Rockwood__ (~Rocky@user/rocky)
[14:10:15] <incognito> mmh
[14:10:20] <incognito> hehe
[14:10:37] <incognito> my bad, i accidentally zeroed the inputfile
[14:10:44] <incognito> i need to download it again
[14:10:50] * incognito is retarded
[14:10:54] <incognito> delayed
[14:11:07] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[14:13:42] *** Quits: Rockwood_ (~Rocky@user/rocky) (Ping timeout: 276 seconds)
[14:13:49] *** Joins: legit (petru@2a03:b0c0:3:f0::60:1000)
[14:14:15] *** Joins: pulse (~pulse@user/pulse)
[14:18:20] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[14:21:36] *** Joins: l__q_ (~modinfo@user/modinfo)
[14:22:02] *** Quits: cantelope (~cantelope@173-27-116-255.client.mchsi.com) ()
[14:25:18] *** Quits: l__q (~modinfo@user/modinfo) (Read error: Connection reset by peer)
[14:26:41] *** Quits: ___Rockwood__ (~Rocky@user/rocky) (Quit: The Time is Over)
[14:27:02] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 265 seconds)
[14:30:19] *** Joins: WishBoy (~WishBoy@user/wishboy)
[14:32:32] *** Joins: szutt (~szutt@116.37.2.145)
[14:34:31] *** Quits: doji (~doji@user/doji) (Ping timeout: 268 seconds)
[14:34:32] *** Joins: n00b101 (uid448161@id-448161.tooting.irccloud.com)
[14:34:44] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Read error: Connection reset by peer)
[14:34:54] *** Joins: dc1 (~dc@user/dc)
[14:35:28] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[14:39:36] *** Quits: dc1 (~dc@user/dc) (Ping timeout: 265 seconds)
[14:40:15] *** Joins: doji (~doji@user/doji)
[14:40:56] *** Joins: p_stampy (~p_stampy@user/p-stampy/x-2915953)
[14:42:20] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[14:46:13] *** Quits: xsperry (~as@user/xsperry) (Remote host closed the connection)
[14:47:40] *** Quits: p_stampy (~p_stampy@user/p-stampy/x-2915953) (Quit: p_stampy)
[15:00:40] *** Joins: StayHungry (~StayHungr@gateway/tor-sasl/stayhungry)
[15:00:45] *** Joins: p_stampy (~p_stampy@user/p-stampy/x-2915953)
[15:01:00] <StayHungry> Comrades, can JS parse 23-07-1821 as date without replacing - with / first?
[15:01:46] <qswz> n> Date.parse('23-07-1821')
[15:01:47] <jellobot> (okay) NaN
[15:01:50] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 265 seconds)
[15:02:00] <StayHungry> yeah, the very issue :)
[15:02:12] <qswz> n> Date.parse('23-07-1821'.split('-').reverse().join('-'))
[15:02:13] <jellobot> (okay) -4684435200000
[15:02:30] <qswz> n> new Date('23-07-1821'.split('-').reverse().join('-'))
[15:02:31] <jellobot> (okay) 1821-07-23T00:00:00.000Z
[15:03:42] <StayHungry> yes, tried that as well, but it's more about swapping items in array, but thanks for mentioning it
[15:04:11] <StayHungry> i was thinking about native ability to parse it without prep like some other languages do https://dpaste.org/rQ50/slim
[15:04:19] *** Joins: jetchisel (jetchisel@user/jetchisel)
[15:04:48] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[15:06:00] *** Joins: WishBoy (~WishBoy@user/wishboy)
[15:06:42] *** Joins: Heraes (~Heraes@user/romarain)
[15:07:39] *** Joins: Deide (~Deide@217.155.19.23)
[15:07:39] *** Quits: Deide (~Deide@217.155.19.23) (Changing host)
[15:07:39] *** Joins: Deide (~Deide@user/deide)
[15:11:16] <qswz> use moment
[15:11:21] <qswz> or their replacements
[15:11:32] <qswz> n> Temporal
[15:11:33] <jellobot> (fail) ReferenceError: Temporal is not defined
[15:12:12] <qswz> b> Temporal
[15:12:13] <jellobot> (fail) ReferenceError: Temporal is not defined
[15:16:10] *** Quits: qswz (~caub@91-175-196-225.subs.proxad.net) (Quit: leaving)
[15:16:13] <StayHungry> qswz: yep, seen that advise on stackoverflow as well, but in my case no remote modules allowed, only native abilities :)
[15:16:45] <StayHungry> it's ok, thank you
[15:17:13] *** Quits: WishBoy (~WishBoy@user/wishboy) (Read error: Connection reset by peer)
[15:20:12] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 265 seconds)
[15:21:14] *** Joins: pavonia_ (~user@user/siracusa)
[15:24:38] *** Quits: pavonia (~user@user/siracusa) (Ping timeout: 255 seconds)
[15:24:45] *** pavonia_ is now known as pavonia
[15:29:21] *** Quits: teut (~teut@122.162.166.192) (Quit: Connection closed)
[15:31:02] *** Joins: pavonia_ (~user@user/siracusa)
[15:31:14] *** Quits: pavonia (~user@user/siracusa) (Read error: Connection reset by peer)
[15:31:27] *** pavonia_ is now known as pavonia
[15:32:40] *** Joins: stenno (~stenno@user/stenno)
[15:37:01] *** Quits: dracula (~dracula@117.222.64.22) (Quit: leaving)
[15:43:28] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 258 seconds)
[15:43:50] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[15:45:50] *** Quits: dreamreal (~joeo@about/java/dreamreal) (Quit: WeeChat 3.2)
[15:51:14] *** Joins: silly (~silly@user/silly)
[15:51:22] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[15:55:30] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[16:02:05] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 252 seconds)
[16:02:27] *** Joins: thiras (~thiras@user/thiras)
[16:04:04] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[16:07:16] *** Joins: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[16:07:16] *** Quits: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Changing host)
[16:07:16] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[16:07:28] *** Joins: dreamreal (~joeo@about/java/dreamreal)
[16:08:45] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:88fc:5dd0:d184:2dee) (Ping timeout: 276 seconds)
[16:20:08] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 265 seconds)
[16:23:03] *** Quits: BT (~BT@user/lightstalker) (Ping timeout: 276 seconds)
[16:26:19] *** Parts: StayHungry (~StayHungr@gateway/tor-sasl/stayhungry) (-)
[16:28:13] *** Joins: Safa_[A_Boy] (~Safa@89.148.13.14)
[16:28:58] *** Joins: dc1 (~dc@user/dc)
[16:30:31] <Safa_[A_Boy]> How to make Webpack process SVGs from fortawesome using file-loader, while other SVGs using svg-sprite-loader?
[16:40:41] *** Quits: incognito (~relativit@user/incognito) (Ping timeout: 255 seconds)
[16:43:19] *** Joins: Naan (~naan@user/naan)
[16:49:08] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Ping timeout: 265 seconds)
[16:49:42] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 276 seconds)
[16:49:50] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[16:50:11] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[16:51:32] *** Joins: Atum_ (~IRC@user/atum/x-2392232)
[16:54:06] *** Quits: n00b101 (uid448161@id-448161.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[17:00:50] *** Quits: jonifen (~jonifen@user/jonifen) (Quit: Leaving)
[17:01:31] *** Joins: jonifen (~jonifen@user/jonifen)
[17:03:11] *** Quits: jonifen (~jonifen@user/jonifen) (Client Quit)
[17:03:53] *** Joins: greta (uid505686@id-505686.charlton.irccloud.com)
[17:04:11] *** Quits: greta (uid505686@id-505686.charlton.irccloud.com) (Client Quit)
[17:04:19] *** Joins: greta (uid505686@id-505686.charlton.irccloud.com)
[17:04:49] *** Quits: szutt (~szutt@116.37.2.145) (Ping timeout: 246 seconds)
[17:06:36] *** Joins: Safa_[A_Boy]_ (~Safa@89.148.13.143)
[17:07:21] *** Joins: szutt (~szutt@116.37.2.145)
[17:07:42] *** Joins: jonifen (~jonifen@user/jonifen)
[17:09:15] *** Quits: Safa_[A_Boy] (~Safa@89.148.13.14) (Ping timeout: 245 seconds)
[17:11:00] *** Joins: xsperry (~as@user/xsperry)
[17:12:35] *** Quits: greta (uid505686@id-505686.charlton.irccloud.com) ()
[17:13:32] *** Joins: Guest8465 (~Guest84@ip-109-40-242-49.web.vodafone.de)
[17:14:07] *** Joins: haniaF (~haniaF@83.24.40.67.ipv4.supernova.orange.pl)
[17:14:42] *** Quits: haniaF_ (~haniaF@79.191.101.123.ipv4.supernova.orange.pl) (Ping timeout: 258 seconds)
[17:19:10] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[17:26:53] *** Joins: n00b101 (uid448161@id-448161.tooting.irccloud.com)
[17:27:13] *** Quits: szutt (~szutt@116.37.2.145) (Ping timeout: 246 seconds)
[17:32:04] *** Joins: szutt (~szutt@116.37.2.145)
[17:32:05] *** Joins: federico_it (~textual@176.206.179.104)
[17:37:01] *** Quits: Atum_ (~IRC@user/atum/x-2392232) (Quit: Atum_)
[17:39:07] *** Quits: szutt (~szutt@116.37.2.145) (Ping timeout: 246 seconds)
[17:43:48] *** Joins: szutt (~szutt@116.37.2.145)
[17:48:34] *** Quits: szutt (~szutt@116.37.2.145) (Ping timeout: 246 seconds)
[17:51:02] *** Joins: szutt (~szutt@116.37.2.145)
[17:52:39] *** Joins: Atum_ (~IRC@user/atum/x-2392232)
[17:59:29] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[18:02:34] *** Joins: Drgonz0 (~Drgonz0@107-179-254-222.cpe.teksavvy.com)
[18:03:17] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[18:03:21] *** Quits: Heraes (~Heraes@user/romarain) (Read error: Connection reset by peer)
[18:11:06] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[18:14:07] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 258 seconds)
[18:15:03] *** Joins: peterhil (~peterhil@mobile-access-5d6af6-209.dhcp.inet.fi)
[18:16:36] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[18:17:16] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[18:18:26] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[18:18:54] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:23:42] *** Quits: jazzy (~jaziz@2600:380:c174:6a3d:c4c3:7674:1736:67d4) (Ping timeout: 256 seconds)
[18:24:55] *** Quits: Bombo_ (atom@p2e58e5b9.dip0.t-ipconnect.de) (Changing host)
[18:24:55] *** Joins: Bombo_ (atom@user/bombo)
[18:24:55] *** Bombo_ is now known as Bombo
[18:29:14] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: Lost the game...)
[18:47:35] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[18:47:54] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[18:49:12] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[18:49:14] *** Gustavo6046_ is now known as Gustavo6046
[18:52:51] *** Quits: ircuser-1 (~Johnny@71.63.241.168) (Quit: because)
[18:53:44] *** Quits: yCrazyEdd (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 256 seconds)
[18:56:11] *** Joins: zebrag (~chris@user/zebrag)
[18:57:57] *** Joins: debsan (~debsan@2800:810:471:2ee::1000)
[18:58:50] *** Quits: debsan (~debsan@2800:810:471:2ee::1000) (Remote host closed the connection)
[18:59:19] *** Joins: debsan (~debsan@2800:810:471:2ee::1000)
[19:05:42] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:7d1f:7849:885b:a0c5)
[19:06:26] *** Quits: zerowalker (~ZeroWalke@2001:9b1:28f8:8300:7164:4c68:eefc:f59d) (Quit: Leaving)
[19:10:50] *** Joins: loke[m] (~loke@2001:470:69fc:105::237)
[19:13:31] *** Joins: loke (~loke@junk.nocrew.org)
[19:14:21] <jacekowski> i've got a string that looks like "ABC/XYZ5/DEF11/FGH3" and i want to extract just the numbers from it
[19:15:29] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[19:16:37] <loke> Hello Javascript. I have a question for you: Given a regex using capturing groups, such as /fo+([0-9]+)bar/ where the capturing group captures the number sequence, I need to get the indexes into the string where the numbers can be found (not the actual string, but the indexes). It appears that the standard Regex implementation in JS doesn't provide this functionality.
[19:16:57] <loke> Is there some way around this? Is there an alternative regexp implementation that does?
[19:17:30] <ljharb> loke: use .matchAll, and each match object will have a .index property
[19:17:38] <ljharb> and make sure the regex is global
[19:17:52] <ljharb> loke: https://npmjs.com/string.prototype.matchall
[19:18:50] <loke> ljharb: I was sure I tried that, and I only got the strings of the capturing groups, not the indexes. I get the index of the while regexp match, but not the individual capturing groups.
[19:19:17] *** Quits: dc1 (~dc@user/dc) (Ping timeout: 245 seconds)
[19:19:42] <loke> When matching the regexp /foo(.)bar/ against "fooXbar", I need to get the index 3 (i.e. the index to the X)
[19:20:19] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 268 seconds)
[19:20:28] *** Quits: Safa_[A_Boy]_ (~Safa@89.148.13.143) (Quit: Leaving)
[19:27:25] <loke> jacekowski: What is your expected output? In your example, do you expect to get a string: "5113"?
[19:27:41] <loke> Or do you want the individual numbers" ["5", "11", "3"] ?
[19:29:58] <stenno> n> 'ff34 53 lol k 234'.matchAll(/(\d+)/g)]
[19:29:59] <jellobot> (fail) SyntaxError: Unexpected token ']'
[19:30:01] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[19:30:03] <stenno> n> 'ff34 53 lol k 234'.matchAll(/(\d+)/g)
[19:30:04] <jellobot> (okay) Object [RegExp String Iterator] {}
[19:30:17] <stenno> n> [...'ff34 53 lol k 234'.matchAll(/(\d+)/g)]
[19:30:18] <jellobot> (okay) [ [ '34', '34', index: 2, input: 'ff34 53 lol k 234', groups: undefined ], [ '53', '53', index: 5, input: 'ff34 53 lol k 234', groups: undefined ], [ '234', '234', index: 14, input: 'ff34 53 lol k 234', groups: undefined ] ]
[19:30:28] *** Joins: futs (~nico@142.93.239.247)
[19:30:46] <stenno> n> [...'ff34 53 lol k 234'.matchAll(/(\d+)/g)].map(([,,index]) => index)
[19:30:47] <jellobot> (okay) [ undefined, undefined, undefined ]
[19:30:55] <stenno> ooh
[19:31:04] <stenno> n> [...'ff34 53 lol k 234'.matchAll(/(\d+)/g)].map(({index}) => index)
[19:31:05] <jellobot> (okay) [ 2, 5, 14 ]
[19:31:18] <stenno> iterator helpers when :v
[19:31:22] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[19:33:16] *** Quits: l__q_ (~modinfo@user/modinfo) (Ping timeout: 268 seconds)
[19:33:52] *** Joins: dc1 (~dc@user/dc)
[19:34:06] *** Quits: n00b101 (uid448161@id-448161.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[19:36:22] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 265 seconds)
[19:37:21] *** Joins: Rockwood (~Rocky@user/rocky)
[19:38:47] *** Quits: dc1 (~dc@user/dc) (Ping timeout: 265 seconds)
[19:39:45] *** Quits: N4buc0 (~N4buc0@2001:1284:f013:5e8c:977b:f5d7:2720:1e1) (Ping timeout: 250 seconds)
[19:39:59] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 258 seconds)
[19:41:51] *** Joins: l__q_ (~modinfo@user/modinfo)
[19:46:18] *** Joins: CoolerX (~CoolerX@user/coolerx)
[19:47:05] <CoolerX> HI
[19:47:15] <CoolerX> I am using webpack to bundle my react app
[19:47:36] <CoolerX> I am also using the patternfly react components
[19:48:04] <jacekowski> loke: individual numbers
[19:48:06] <CoolerX> I am using the LoginPage component https://www.patternfly.org/2020.04/documentation/react/components/loginpage
[19:48:37] <CoolerX> I have removed the background images and replaced it with my own but for some reason webpack still emits the default background images into the bundle
[19:49:31] <CoolerX> searching for it the default background images seem to be inside node_modules/@patternfly directory
[19:49:51] <CoolerX> webpack copies those images into my app bundle even though I am not using them
[19:50:11] <CoolerX> Is there any way to avoid this?
[19:50:25] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[19:51:28] <loke> jacekowski: Did stennos advice help?
[19:54:12] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[19:54:42] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 245 seconds)
[19:55:28] <stenno> n>  "ABC/XYZ5/DEF11/FGH3".matchAll(/(\d+)/g)
[19:55:28] <jellobot> (okay) Object [RegExp String Iterator] {}
[19:55:33] <stenno> n>  "ABC/XYZ5/DEF11/FGH3".match(/(\d+)/g)
[19:55:33] <jellobot> (okay) [ '5', '11', '3' ]
[19:55:49] <stenno> and then you can cast
[19:55:54] <stenno> n>  "ABC/XYZ5/DEF11/FGH3".match(/(\d+)/g).map(Number)
[19:55:54] <jellobot> (okay) [ 5, 11, 3 ]
[19:56:27] <CoolerX> does anyone here use webpack?
[19:57:28] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[19:58:36] <Rockwood> stenno, hi
[19:59:28] <Rockwood> CoolerX, build didn't works?
[19:59:37] <CoolerX> Rockwood, I am building
[19:59:50] <Rockwood> cache cleared?
[20:00:01] <CoolerX> what cache?
[20:00:06] <Rockwood> ctrl+f5
[20:00:16] <CoolerX> the browser cache?
[20:00:16] <Rockwood> after build
[20:00:19] <Rockwood> yes
[20:00:45] <CoolerX> what does that have to do with unused images being emitted into the final app bundle?
[20:00:47] <Rockwood> you can overwrite everything
[20:01:11] <Rockwood> how do you changed image?
[20:02:01] <Rockwood> where you put that image path
[20:03:08] <CoolerX> in the component props you can change it
[20:03:13] <CoolerX> https://www.patternfly.org/2020.04/documentation/react/components/loginpage
[20:03:19] <CoolerX> "backgroundImgSrc	string | BackgroundImageSrcMap	No	''	Attribute that specifies the URL of the background image for the LoginPage"
[20:04:06] <CoolerX> import myimage from '@app/images/background.svg';
[20:04:17] <CoolerX> backgroundImgSrc={myimage}
[20:04:36] <Rockwood> https://codesandbox.io/s/vhu0p  try here
[20:06:42] <Rockwood> CoolerX, why not make own pages instead using of others nested stuff?
[20:06:46] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[20:07:07] <silly> is that some random (broken) codepen
[20:07:29] <farn> CoolerX: are you perhaps using this webpack config? https://github.com/patternfly/patternfly-react-seed/blob/master/webpack.common.js#L90-L95
[20:07:32] <Rockwood> yes
[20:07:40] *** Quits: Guest8465 (~Guest84@ip-109-40-242-49.web.vodafone.de) (Quit: Client closed)
[20:07:41] <Rockwood> that is not good for use
[20:07:47] <Rockwood> my point is this
[20:08:28] <Rockwood> i opened from here https://www.patternfly.org/2020.04/documentation/react/components/loginpage
[20:08:37] <CoolerX> farn, yes
[20:08:51] <CoolerX> hmm
[20:08:53] <CoolerX> I see
[20:09:26] <farn> oh wait, I may have linked to the wrong section
[20:09:33] <CoolerX> so webpack will include all those images even if I am not using them?
[20:10:35] <CoolerX> https://webpack.js.org/configuration/module/#ruleinclude
[20:11:23] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 250 seconds)
[20:11:51] <farn> I'm actually not sure whether that is relevant
[20:11:56] *** Joins: kongzilla (~weechat@gateway/tor-sasl/kongzilla)
[20:12:01] *** Quits: szutt (~szutt@116.37.2.145) (Quit: Client closed)
[20:12:04] <farn> (and there are separate references to BG_IMAGES above)
[20:12:14] <farn> I was led there via https://github.com/patternfly/patternfly-react/issues/5815
[20:12:20] <CoolerX> yeah
[20:12:30] *** Joins: cantelope (~cantelope@173-27-116-255.client.mchsi.com)
[20:12:38] *** Joins: ferdna (~ferdna@user/ferdna)
[20:12:43] <CoolerX> what exactly does include do?
[20:14:12] <CoolerX> my impression was that when you import foo from 'foo.png'; in your code webpack will look through each rule you have and try the "test" condition and if the condition is true it will use the loader specified in the "use" field of that rule
[20:14:17] <Rockwood> anyway Uncaught (in promise) TypeError: Cannot read property 'method' of undefined i am surprise by error
[20:14:17] <Rockwood> in fetch
[20:14:17] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Remote host closed the connection)
[20:14:17] *** Quits: ferdna (~ferdna@user/ferdna) (Excess Flood)
[20:14:17] *** Quits: xse (~xse@user/xse) (Remote host closed the connection)
[20:14:26] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[20:14:41] *** Joins: xse (~xse@user/xse)
[20:14:50] <CoolerX> Rockwood, code?
[20:14:54] *** Joins: ferdna (~ferdna@user/ferdna)
[20:15:03] <Rockwood> sure
[20:15:57] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[20:16:38] <Rockwood> https://gist.github.com/Cyberiaaxis/f155474fa74a3fac06896174e14a9264
[20:16:43] <Rockwood> this is the code
[20:17:20] <Rockwood> Fetch(newValue, {method: 'get', data})
[20:17:30] <Rockwood> i am using like this
[20:18:21] *** Joins: silly_ (~silly@user/silly)
[20:19:10] *** Quits: silly (~silly@user/silly) (Read error: Connection reset by peer)
[20:19:35] *** Joins: jetchisel (jetchisel@user/jetchisel)
[20:21:15] <Rockwood> cheers issue solved
[20:21:26] <Rockwood> i was missing something in code
[20:21:28] <CoolerX> Rockwood, how?
[20:21:31] <Rockwood> now fine
[20:21:33] <CoolerX> ok
[20:21:45] <wroathe> CoolerX: What are you trying to do?
[20:22:40] *** Quits: kongzilla (~weechat@gateway/tor-sasl/kongzilla) (Quit: kongzilla)
[20:23:20] <CoolerX> wroathe, just wondering how webpack include works
[20:23:25] <CoolerX> https://github.com/patternfly/patternfly-react-seed/blob/master/webpack.common.js#L90-L95
[20:23:32] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[20:24:33] <CoolerX> farn, you there?
[20:24:46] <CoolerX> I don't think the `include` statement is causing the issue
[20:25:09] <wroathe> CoolerX: https://webpack.js.org/configuration/module/#ruleinclude
[20:25:33] <CoolerX> that rule doesn't automatically include all the images, it will only use that rule if you actually include an image from those directories
[20:25:39] <CoolerX> wroathe, yeah I saw that
[20:25:55] <Alexendoo> That is my interpretation as well, and yeah the docs are not the clearest
[20:26:07] <wroathe> CoolerX: Also https://webpack.js.org/configuration/module/#condition
[20:26:30] <wroathe> CoolerX: It's used to filter out resources from directories you don't want to be searched
[20:26:41] <CoolerX> right
[20:26:47] <Alexendoo> What's the path of an image that's getting included CoolerX?
[20:26:49] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[20:27:23] <CoolerX> there's 6 images actually
[20:27:49] <Alexendoo> Any is fine
[20:27:56] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 255 seconds)
[20:28:55] <CoolerX> https://bpa.st/7XRQ
[20:29:59] <Rockwood> why not try overwrite them
[20:30:00] <CoolerX> those images appear in multiple places inside node_modules/@patternfly https://bpa.st/MMVQ
[20:30:07] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Read error: Connection reset by peer)
[20:30:27] <CoolerX> Rockwood, I did rm -rf dist/images and then build again
[20:30:40] <Rockwood> result?
[20:30:42] <CoolerX> but webpack keeps emitting those images into dist/images
[20:31:08] <Rockwood> one more trick
[20:31:32] <Rockwood> why not paste your own images and
[20:31:49] <Rockwood> give same names as they are
[20:33:21] *** Quits: cisme_ (~cisme_@2600:1700:d980:1a40:e84d:9162:9e4a:cfce) (Ping timeout: 252 seconds)
[20:33:24] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Ping timeout: 265 seconds)
[20:35:08] *** Joins: KevinX (~KevinX@2.56.190.208)
[20:36:00] <CoolerX> Rockwood, well I don't want to change anything inside node_modules by hand
[20:36:14] <CoolerX> node_modules is managed by npm
[20:36:17] *** Quits: Ducki (~ducki@user/ducki) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[20:36:47] <CoolerX> I am wondering if webpack tree shaking might help with this
[20:36:58] <CoolerX> I am building in production mode
[20:37:08] <Rockwood> oh okay
[20:37:21] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[20:37:53] <Rockwood> then you need specific help by creators or hire someone
[20:38:10] <Rockwood> or
[20:38:44] <Rockwood> if any have time for chk it properly and make corrections as requires
[20:39:22] <Rockwood> not easy task bcz your server on production
[20:43:56] *** Joins: zebrag (~chris@user/zebrag)
[20:44:13] <CoolerX> yeah
[20:46:30] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[20:47:35] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_dog)
[20:47:49] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[20:51:51] *** Joins: OverCoder (~OverCoder@user/overcoder)
[20:59:16] *** Joins: incognito (~relativit@user/incognito)
[20:59:39] <Alexendoo> CoolerX: @patternfly/react-core brings the images in
[21:00:55] <Alexendoo> It exports all the components, some of which import css that includes those images as background images
[21:02:42] *** Quits: federico_it (~textual@176.206.179.104) (Ping timeout: 240 seconds)
[21:04:49] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[21:05:08] *** Joins: federico_it (~textual@176.206.179.104)
[21:07:41] <CoolerX> Alexendoo, hmm
[21:07:49] <CoolerX> is there a way around this?
[21:08:17] <CoolerX> all the components I need are in react-core
[21:08:28] <CoolerX> I can't just remove the dependency on it
[21:11:11] <Alexendoo> CoolerX: You could import the specific modules from their paths perhaps rather than via the rexports. But that's a pain
[21:11:43] <Alexendoo> Another option would be to try null-loader
[21:14:18] *** Joins: nomic2 (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[21:14:25] <Rockwood> i will do div and overwrite by my image
[21:14:27] <CoolerX> Alexendoo, what's null-loader?
[21:14:59] <Rockwood> CoolerX, make div and define background image
[21:15:05] <Alexendoo> CoolerX: https://webpack.js.org/loaders/null-loader/
[21:16:12] <Alexendoo> Lets you override them with empty modules
[21:16:42] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Ping timeout: 240 seconds)
[21:19:33] *** Quits: \mSg (~mSg@user/msg/x-0285936) ()
[21:23:13] <CoolerX> Alexendoo, hmm
[21:23:24] <CoolerX> are there any negative sideeffects to using that loader?
[21:25:41] <Alexendoo> I'd imagine things would break at runtime if it turns out you really did need that module after all
[21:26:11] <Alexendoo> Probably worth opening an issue though, seems like something they could fix
[21:26:27] <Alexendoo> by not implicitly including the images by default
[21:26:30] <CoolerX> Alexendoo, thanks
[21:27:13] <CoolerX> this is a similar issue https://github.com/patternfly/patternfly-react/issues/5815
[21:27:47] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 255 seconds)
[21:33:24] *** Joins: dc1 (~dc@user/dc)
[21:34:46] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[21:35:00] *** Joins: Ducki (~ducki@user/ducki)
[21:37:23] <incognito> little question about fs.createReadStream(); do I need to stream.on("readable",) for every stream.read() ?
[21:38:08] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:e0d6:b7e7:bfb1:81e0) (Ping timeout: 255 seconds)
[21:38:39] <GreenJello> incognito, you only need to add event listeners once per emitter/stream
[21:38:40] *** Joins: cisme_ (~cisme_@2600:1700:d980:1a40:2cce:ee93:1e07:2316)
[21:38:53] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:ec54:8d69:68bf:4d2e)
[21:39:05] *** Joins: lightstalker (~BT@user/lightstalker)
[21:39:33] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:ec54:8d69:68bf:4d2e) (Client Quit)
[21:39:38] <incognito> GreenJello: here, I check readiness before going on with my script and later, i do stream.read(1024); it returns null
[21:39:47] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[21:41:36] <GreenJello> I can't guess at the code you're describing
[21:48:18] <incognito> well
[21:48:31] <incognito> simply, stream.read() returns null
[21:50:18] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[21:50:22] *** Joins: entuland (~entuland@user/entuland)
[21:51:41] *** Joins: \mSg (~mSg@user/msg/x-0285936)
[21:54:02] *** Joins: yCrazyEdd (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[21:57:29] *** nomic2 is now known as nomic
[21:58:08] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[21:59:28] *** Joins: paule32 (~paule32@user/paule32)
[22:02:26] *** Joins: Carbone5 (~Carbone5@ool-44c634d0.dyn.optonline.net)
[22:03:43] *** Joins: Anthaas (~Anthaas@user/anthaas)
[22:12:31] *** Joins: Celeo (~Celeo@user/celeo)
[22:19:47] *** Quits: Celeo (~Celeo@user/celeo) (Read error: Connection reset by peer)
[22:20:20] *** Quits: dc1 (~dc@user/dc) (Quit: WeeChat 3.2)
[22:21:35] *** Joins: summersault (~summersau@179.221.251.16)
[22:22:03] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Quit: Leaving)
[22:22:56] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[22:24:56] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[22:26:29] *** Joins: thiras (~thiras@user/thiras)
[22:29:53] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 265 seconds)
[22:30:54] *** Joins: WishBoy (~WishBoy@user/wishboy)
[22:38:14] *** Joins: qswz (~caub@91-175-196-225.subs.proxad.net)
[22:42:18] <Donitz> n> [1,2][-1]
[22:42:18] <jellobot> (okay) undefined
[22:48:35] <GreenJello> "-1" is a valid object key
[22:49:03] <gkatsev> can't wait for .at()
[22:49:25] <qswz> b> [].at
[22:49:27] <jellobot> (okay) [Function: at]
[22:49:57] <ThePendulum> b> [0, 1, 2, 3].at(-1)
[22:49:58] <jellobot> (okay) 3
[22:49:58] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[22:50:04] <qswz> b> 'shit'.at(-1)
[22:50:05] <jellobot> (okay) 't'
[22:50:26] <ThePendulum> b> 'shit'.slice(-1)
[22:50:27] <jellobot> (okay) 't'
[22:50:31] <ThePendulum> whats the point of at on strings
[22:50:45] <ThePendulum> just so it doesn't say shit slice?
[22:51:13] <gkatsev> .at for strings isn't the ideal but I think it's to keep it consistent with arrays
[22:51:20] <gkatsev> b> foo.slice(-2)
[22:51:21] <jellobot> (fail) ReferenceError: foo is not defined
[22:51:28] <gkatsev> b> 'foo'.slice(-2)
[22:51:29] <jellobot> (okay) 'oo'
[22:51:34] <gkatsev> plus, it isn't the same as .slice
[22:51:35] <ThePendulum> it's glasses
[22:52:18] <gkatsev> .at is fine if you're just dealing with ASCII but would won't work well if you have multi-byte characters
[22:52:32] <gkatsev> b> [0,1,2,3].at(-2)
[22:52:33] <jellobot> (okay) 2
[22:52:41] <gkatsev> that's the best thing about .at
[22:52:42] <ThePendulum> '👩‍👩‍👦‍👦'.at(1)
[22:53:00] <ThePendulum> b> '👩‍👩‍👦‍👦'.at(1)
[22:53:00] <jellobot> (okay) '�'
[22:53:22] <ThePendulum> seems they are raising a question mark
[22:53:42] <gkatsev> b> '👩👩‍👩👩‍👦👦‍👦'..charCodeAt(1)
[22:53:42] <jellobot> An async internal error occured: Unexpected token (1:21)
[22:53:47] <GreenJello> it's code point, not grapheme cluster
[22:54:02] <gkatsev> b> '👩👩👩‍👩👩👩‍👦👦👦‍👦'.charCodeAt(1)
[22:54:03] <jellobot> (okay) 56425
[22:54:05] <GreenJello> oh no, it's code unit
[22:54:12] <stenno> my client is going mad
[22:54:18] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[22:54:19] <GreenJello> which is the same as indexing into the string
[22:54:32] <gkatsev> yeah, some clients don't handle emojis very well
[22:54:46] <ThePendulum> b> '👨‍👨‍👧‍👧👨‍👩‍👧‍👦'.slice(1)
[22:54:46] <jellobot> (okay) '�‍👨‍👧‍👧👨‍👩‍👧‍👦'
[22:54:53] <ThePendulum> RIP
[22:55:04] <gkatsev> windows terminal+screen+irssi isn't a huge fan, though, haven't had an issue with iterm2+screen+irssi
[22:55:06] <ThePendulum> I like that you can slice families in half
[22:55:17] <GreenJello> n> [... '👨‍👨‍👧‍👧👨‍👩‍👧‍👦']
[22:55:18] <jellobot> (okay) [ '👨', '‍', '👨', '‍', '👧', '‍', '👧', '👨', '‍', '👩', '‍', '👧', '‍', '👦' ]
[22:55:30] <qswz> b> [...'👨‍👨‍👧‍👧👨‍👩‍👧‍👦'.slice(1])
[22:55:31] <ThePendulum> 😂
[22:55:31] <jellobot> An async internal error occured: Unexpected token, expected "," (1:37)
[22:55:36] <gkatsev> looks like slice also doesn't respect multi-byte characters
[22:56:08] <GreenJello> slice works on code units
[22:56:10] <stenno> https://i.imgur.com/QoADopr.png my mad client
[22:56:16] <GreenJello> which are 2-byte values
[22:56:16] <ThePendulum> b> '👩‍❤️‍💋‍👩👪'[0]
[22:56:17] <jellobot> (okay) '�'
[22:56:28] <qswz> b> [...'👨‍👨‍👧‍👧👨‍👩‍👧‍👦'].at(-1)
[22:56:29] <jellobot> (okay) '👦'
[22:56:49] <ThePendulum> stenno: idk why that's so funny to me
[22:56:55] <GreenJello> same with .at and indexing, while spread/Array.from work on code points (4 bytes / 32 bit)
[22:57:35] <GreenJello> and you need a library like grapheme-splitter to deal with ThePendulum's multi code-point emoji
[22:58:51] <ThePendulum> b> Array.from('🏂👩‍👩‍👧👩🏾‍✈️')
[22:58:52] <jellobot> (okay) [ '🏂', '👩', '‍', '👩', '‍', '👧', '👩', '🏾', '‍', '✈', '️' ]
[22:59:29] <ThePendulum> whole lotta nothing
[23:03:17] <ThePendulum> reminds me of that Alchemy game where you drop icons on each other to create new things. like ocean + heat = life
[23:04:42] <ThePendulum> b> [...'🧚🏻‍♂️']
[23:04:43] <jellobot> (okay) [ '🧚', '🏻', '‍', '♂', '️' ]
[23:05:30] *** Quits: simius (~simius@user/simius) (Quit: Bai!)
[23:06:46] *** Joins: simius (~simius@user/simius)
[23:07:19] <ThePendulum> interesting they use the person emoji for some and the gender icon for others
[23:07:23] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[23:09:28] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[23:09:29] *** Quits: ferdna (~ferdna@user/ferdna) (Ping timeout: 255 seconds)
[23:10:06] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0)
[23:10:22] *** Quits: qswz (~caub@91-175-196-225.subs.proxad.net) (Read error: Connection reset by peer)
[23:11:45] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:1aae:87d5:af4f:2c0) (Client Quit)
[23:12:01] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:a83e:c959:305b:9dbb)
[23:12:33] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 276 seconds)
[23:12:38] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 272 seconds)
[23:16:17] *** Quits: l__q_ (~modinfo@user/modinfo) (Ping timeout: 265 seconds)
[23:17:02] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[23:17:41] *** Quits: peterhil (~peterhil@mobile-access-5d6af6-209.dhcp.inet.fi) (Ping timeout: 252 seconds)
[23:21:49] *** Quits: paule32 (~paule32@user/paule32) (Quit: Leaving)
[23:25:00] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[23:28:13] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[23:29:36] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 258 seconds)
[23:30:39] *** Joins: summersault (~summersau@179.221.251.16)
[23:35:57] *** Quits: Tabmow (~tabmow@user/tabmow) (Ping timeout: 276 seconds)
[23:36:23] *** Joins: l__q_ (~modinfo@user/modinfo)
[23:38:50] *** Joins: zebrag (~chris@user/zebrag)
[23:39:53] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Quit: mogad0n)
[23:44:11] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[23:51:12] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[23:52:39] *** Joins: Tabmow (~tabmow@user/tabmow)
[23:54:43] *** Joins: mogad0n (~mogad0n@user/mogad0n)
