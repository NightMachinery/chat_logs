[00:17:02] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 240 seconds)
[00:19:29] <jmercouris> Kabouik: yes
[00:38:45] *** Joins: Rusty (~Rusty@cpe88d7f6681a70-cmac202ec23480.cpe.net.cable.rogers.com)
[00:59:23] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[01:13:41] *** Joins: Jerryeeee (~Jerryeeee@74.215.11.207)
[01:18:03] *** Quits: Rusty (~Rusty@cpe88d7f6681a70-cmac202ec23480.cpe.net.cable.rogers.com) (Quit: Connection closed)
[01:39:38] <Kabouik> Nice!
[01:42:49] <Kabouik> Yeah I really think Blocker mode was a major performance hog, on my LXC-Debian phone I can see an improvement too. Of course ads are the downside (but Blocker mode never got rid of them all for me).
[01:47:11] *** Quits: taiju (~taiju@240b:253:ec40:2400:2cdc:1f32:d88a:fa10) (Ping timeout: 264 seconds)
[01:47:53] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[01:49:01] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[01:49:26] *** Joins: ano (~ano@user/ano)
[01:49:44] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Remote host closed the connection)
[01:50:08] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[01:51:49] <jmercouris> Yes, let’s see how ublock does for performance
[01:51:55] <jmercouris> I think it will be better
[01:52:00] <jmercouris> I’m most excited for this
[01:55:59] <Kabouik> Is it around the corner?
[01:56:11] <Kabouik> I haven't followed aartaka's work lately
[01:58:50] <waleee> https://github.com/atlas-engineer/nyxt/pull/1762 , aartaka's last message indicates that webkitgtk 2.34.1 taketh some but also giveth some
[02:13:06] *** Joins: finsternis (~X@23.226.237.192)
[02:24:09] <aartaka> jmercouris: don't tease everyone, we haven't yet implemented the APIs uBlock requires :)
[02:28:52] <aartaka> I've looked at the most critical API (webRequest, the one that allows blocking/redirecting requests) uBlock relies on. I already see that we won't be able to make it work in exactly the same way as Firefox does -- after all, we don't have our own engine to hook into header generation etc. However, our implementation is still going to work decently given the extension points WebKit provides us with.
[02:29:23] <jmercouris> aartaka: I ain’t teasing no one!
[02:29:30] <jmercouris> I’m hella excited meself!
[02:29:37] <aartaka> :D
[02:29:54] <jmercouris> By the way
[02:29:56] <jmercouris> Everyone
[02:30:05] <jmercouris> Artyom said it would be done in 3 days or so
[02:30:14] <jmercouris> Max
[02:30:19] <aartaka> xD
[02:30:33] <jmercouris> Am I Elon yet?
[02:30:46] <aartaka> You're getting close :)
[02:30:50] <jmercouris> Something something Tesla full self driving
[02:32:06] <aartaka> Alright, I'd better go and get some sleep. Good night!
[02:36:39] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 256 seconds)
[03:17:01] *** Quits: Jing_ (~hedgehog@2604:a840:3::1033) (Remote host closed the connection)
[03:17:41] *** Joins: Jing (~hedgehog@2604:a840:3::1033)
[03:40:48] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[03:42:48] *** Joins: ano (~ano@user/ano)
[03:55:15] *** Quits: teehemkay (sid14792@lymington.irccloud.com) (Ping timeout: 260 seconds)
[03:57:21] *** Quits: jmercouris (sid438340@id-438340.hampstead.irccloud.com) (Read error: Connection reset by peer)
[03:57:22] *** Quits: pedro-delfino (sid507296@2a03:5180:f:1::7:bda0) (Read error: Connection reset by peer)
[03:57:26] *** Quits: dwi (sid240145@2a03:5180:f:4::3:aa11) (Read error: Connection reset by peer)
[04:13:58] *** Joins: pedro-delfino (sid507296@helmsley.irccloud.com)
[04:14:00] *** Joins: dwi (sid240145@hampstead.irccloud.com)
[04:19:13] *** Quits: pedro-delfino (sid507296@helmsley.irccloud.com) (Ping timeout: 256 seconds)
[04:19:35] *** Quits: dwi (sid240145@hampstead.irccloud.com) (Ping timeout: 264 seconds)
[04:22:48] *** Joins: pedro-delfino (sid507296@helmsley.irccloud.com)
[04:23:12] *** Joins: dwi (sid240145@hampstead.irccloud.com)
[04:41:34] *** Joins: teehemkay (sid14792@lymington.irccloud.com)
[04:44:32] *** Joins: jmercouris (sid438340@hampstead.irccloud.com)
[05:12:32] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 240 seconds)
[05:14:41] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[05:53:30] *** Quits: gdd (~gdd@129.199.146.230) (Quit: WeeChat 3.3)
[05:56:18] *** Joins: gdd (~gdd@129.199.146.230)
[06:23:55] *** Quits: Jerryeeee (~Jerryeeee@74.215.11.207) (Remote host closed the connection)
[06:51:07] *** Joins: sarab (~sarab@183.87.117.24)
[06:51:49] *** Quits: sarab (~sarab@183.87.117.24) (Remote host closed the connection)
[07:42:03] *** Joins: poselyqualityles (~poselyqua@user/poselyqualityles)
[07:43:15] *** Joins: tekakutli (~user@201.141.24.66)
[07:54:32] *** Quits: hiruji (~hiruji@user/hiruji) (Quit: ZNC 1.8.2 - https://znc.in)
[08:09:02] *** Quits: poselyqualityles (~poselyqua@user/poselyqualityles) (Ping timeout: 240 seconds)
[08:13:15] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 256 seconds)
[08:21:02] *** Joins: hiruji (~hiruji@user/hiruji)
[10:36:37] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[14:02:31] *** Andrew_ is now known as AndrewYu
[14:30:56] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 268 seconds)
[14:31:16] *** Joins: aartaka (~aartaka@5.1.53.225)
[14:46:52] *** Parts: tekakutli (~user@201.141.24.66) (ERC 5.4 (IRC client for GNU Emacs 28.0.60))
[14:57:15] *** Joins: tekakutli (~user@201.141.24.66)
[15:10:51] *** Joins: poselyqualityles (~poselyqua@user/poselyqualityles)
[15:30:11] *** Quits: aartaka (~aartaka@5.1.53.225) (Ping timeout: 246 seconds)
[15:30:49] *** Joins: aartaka (~aartaka@5.1.53.225)
[15:37:00] *** Quits: poselyqualityles (~poselyqua@user/poselyqualityles) (Ping timeout: 250 seconds)
[17:11:35] *** Quits: teehemkay (sid14792@lymington.irccloud.com) (Ping timeout: 256 seconds)
[17:11:35] *** Quits: pedro-delfino (sid507296@helmsley.irccloud.com) (Ping timeout: 256 seconds)
[17:12:14] *** Quits: jmercouris (sid438340@hampstead.irccloud.com) (Ping timeout: 260 seconds)
[17:12:28] *** Joins: dwi_ (sid240145@hampstead.irccloud.com)
[17:12:54] *** Joins: pedro-delfino (sid507296@helmsley.irccloud.com)
[17:12:59] *** Quits: dwi (sid240145@hampstead.irccloud.com) (Ping timeout: 264 seconds)
[17:13:00] *** dwi_ is now known as dwi
[17:13:14] *** Joins: teehemkay (sid14792@2a03:5180:f:2::39c8)
[17:13:56] *** Joins: jmercouris (sid438340@id-438340.hampstead.irccloud.com)
[17:42:20] *** Joins: strathamer (~strathame@143.69-182-91.adsl-dyn.isp.belgacom.be)
[17:43:25] *** Quits: strathamer (~strathame@143.69-182-91.adsl-dyn.isp.belgacom.be) (Client Quit)
[17:47:47] *** Quits: teehemkay (sid14792@2a03:5180:f:2::39c8) (Ping timeout: 264 seconds)
[17:47:51] *** Quits: pedro-delfino (sid507296@helmsley.irccloud.com) (Ping timeout: 256 seconds)
[17:48:18] *** Quits: dwi (sid240145@hampstead.irccloud.com) (Ping timeout: 250 seconds)
[17:48:32] *** Quits: jmercouris (sid438340@id-438340.hampstead.irccloud.com) (Ping timeout: 240 seconds)
[17:52:12] *** Joins: jmercouris (sid438340@hampstead.irccloud.com)
[17:52:15] *** Joins: teehemkay (sid14792@lymington.irccloud.com)
[18:02:40] *** Joins: pedro-delfino (sid507296@helmsley.irccloud.com)
[18:03:00] *** Joins: dwi (sid240145@hampstead.irccloud.com)
[18:20:06] *** Quits: tekakutli (~user@201.141.24.66) (Remote host closed the connection)
[18:20:57] *** Joins: tekakutli (~user@201.141.24.66)
[18:25:49] *** Quits: tekakutli (~user@201.141.24.66) (Remote host closed the connection)
[18:26:10] *** Joins: tekakutli (~user@201.141.24.66)
[18:26:28] *** Quits: tekakutli (~user@201.141.24.66) (Remote host closed the connection)
[18:26:48] *** Joins: tekakutli (~user@201.141.24.66)
[18:27:28] *** Quits: tekakutli (~user@201.141.24.66) (Remote host closed the connection)
[18:34:45] *** Joins: tekakutli (~user@201.141.24.66)
[18:36:08] *** Quits: tekakutli (~user@201.141.24.66) (Read error: Connection reset by peer)
[18:37:15] *** Joins: tekakutli (~user@201.141.24.66)
[18:49:01] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[18:55:09] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Quit: WeeChat 3.3)
[18:56:32] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[19:37:19] <aartaka> Yay, I may have found a fix for the WebKit 2.34.1 crash!
[19:38:09] <aartaka> See https://github.com/atlas-engineer/nyxt/pull/1866 :)
[19:57:32] *** Quits: aartaka (~aartaka@5.1.53.225) (Ping timeout: 240 seconds)
[19:58:28] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[20:22:05] <waleee> aartaka: awesome :) will check it out asap
[20:24:25] *** Joins: mashomee (~mashomee@198.200.51.18)
[20:25:00] *** Quits: mashomee (~mashomee@198.200.51.18) (Client Quit)
[20:25:37] *** Joins: mashomee (~mashomee@198.200.51.18)
[20:26:00] *** Quits: mashomee (~mashomee@198.200.51.18) (Client Quit)
[20:44:39] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 250 seconds)
[20:45:05] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[21:01:20] <waleee> hm it does become a bit stuttering on some ad-heavy sites while it processes the resource requests, but that's for a _really_ ad-heavy site
[21:01:59] <waleee> s/stuttering/stuttery/
[21:04:54] <jmercouris> Pmapcar to the rescue
[21:05:10] <jmercouris> Blocker mode must be optimized
[21:06:17] <jmercouris> Perhaps blocker mode was never working well on heavy sites ignoring many requests
[21:06:25] <jmercouris> Timing out for most of them
[21:08:49] <waleee> it needs some code for (re)creating the hostfile if it is missing
[21:09:19] <waleee> hm or is it mentioned in the manual?
[21:16:12] <jmercouris> It should be fetched automatically
[21:20:12] <waleee> checked again and noticed that I missed a massive cl+ssl backtrace in the log
[21:23:21] <waleee> * not just cl+ssl
[21:27:18] <waleee> update-hostlist works from nyxt if blocker-mode is enabled in a running nyxt
[21:29:02] <waleee> it looks like something borks in https://github.com/atlas-engineer/nyxt/blob/master/source/mode/blocker.lisp#L72 if it's enabled in init.lisp and the hostfile is missing
[21:30:28] <jmercouris> huh
[21:30:38] <jmercouris> maybe we did not consider that
[21:30:43] <jmercouris> perhaps you do have to call update-hostlist manually
[21:30:46] <jmercouris> I don't remember
[21:30:55] <jmercouris> these are decisions we made years ago :-O
[21:32:50] <waleee> https://github.com/atlas-engineer/nyxt/blob/master/source/mode/blocker.lisp#L80 how does this work?
[21:33:11] <waleee> I assume update-interval is an integer?
[21:33:18] <jmercouris> every time read-hostlist is invoked it will decide whether to update
[21:33:36] <jmercouris> based on whether enough time has elapsed
[21:34:14] <jmercouris> update-interval is an integer
[21:34:21] <jmercouris> with a default value of (* 60 60 24)
[21:34:31] <jmercouris> that is in seconds
[21:34:51] <waleee> ah, right, I didn't check further up the define-class
[21:35:22] <jmercouris> so it will check the date on the feel it seems
[21:35:30] <jmercouris> s/feel/file
[21:36:04] <jmercouris> so here's the problem
[21:36:20] <jmercouris> read-hostlist will only update the file if it exists
[21:36:24] <jmercouris> it will not attempt to populate it
[21:37:25] <jmercouris> now, I assume that update-hostlist-with-lock will not create the file if it doesn't exist
[21:37:51] <jmercouris> hm, no that seems to be false
[21:42:35] <jmercouris> aartaka: thanks for the fix, I'll have to try it, I do not have 2.34.1, I have an older version
[21:43:51] <aartaka> jmercouris: No problem, more testing is better there :)
[21:44:18] <jmercouris> aartaka: how about utilizing pmapcar?
[21:44:37] <aartaka> jmercouris: Where exactly?
[21:44:42] <jmercouris> because we are still using only a single thread
[21:44:47] <jmercouris> to handle whether a resource should be blocked or not
[21:44:55] <aartaka> Hmmmmm.
[21:45:58] <jmercouris> am I saying nonsense here?
[21:46:23] <jmercouris> because our 'decide-policy-handler' is still a single threaded affair
[21:47:05] <aartaka> jmercouris: No, it does make sense. I'm just hoping to find a better data structure (e.g. a hash table) for hostlist storage.
[21:47:41] <aartaka> jmercouris: no, every decide policy handler spawns a separate thread in my patch :)
[21:48:02] <aartaka> jmercouris: It's hostlist search thst slows it down, I suppose.
[21:48:09] <aartaka> *that
[21:48:10] <jmercouris> I see
[21:48:36] <jmercouris> but they are the same named thread
[21:48:43] <jmercouris> am I missing something, can we have multiple threads with the same name?
[21:48:59] <jmercouris> I didn't think that was possible, but, there is no reason it wouldn't be possible I guess
[21:49:08] <jmercouris> there is on constraint on that
[21:51:32] <jmercouris> the thing about pmapcar and the like is that they use a thread pool
[21:51:42] <jmercouris> spawning a thread for every decision may be expensive
[21:51:52] <jmercouris> couple that with searching through a rather large list
[21:53:00] <jmercouris> s/on/no
[21:53:02] <aartaka> jmercouris: yes, spawning threads is expensive, but WebKit gives us one request at a time, so we have no alternatives :)
[21:53:18] <jmercouris> yes we do, that's why I am saying a thread pool!
[21:53:29] <jmercouris> Artyom, I need you to believe
[21:53:32] <jmercouris> like I believe in you
[21:53:36] <aartaka> xD
[21:53:56] <jmercouris> ok so we get a signal for every resource is what you are saying
[21:54:08] <aartaka> Regarding thread names: yes, bt allows creating several threads with the same names.
[21:54:26] <aartaka> jmercouris: Exactly.
[21:54:36] <jmercouris> we could add them to a queue to be processed by a thread pool, the latency may be less
[21:54:49] <aartaka> Yes, it does make sense.
[21:55:08] <jmercouris> I think lparallel has facilities for this, a lock free queue
[21:55:10] <jmercouris> if I am not mistaken
[21:55:39] <jmercouris> take what I say with a grain of salt as my memory is not what it used to be... and I have worked on so many systems I can't even tell apart a tomato from a potato
[21:59:45] <jmercouris> "The lparallel.queue package provides a queue for inter-thread communication. It is not included in the lparallel package."
[22:00:16] <aartaka> Yet anothet dependency xD
[22:00:21] <aartaka> *another
[22:00:38] <jmercouris> aartaka: that bad boy is already in there
[22:00:39] <jmercouris> https://lparallel.org/2012/11/05/concurrent-hello-world/#more-1630
[22:00:41] <jmercouris> BAM
[22:00:47] <Kabouik> Can your findings here explain why blocker mode made everything more sluggish (at least on my case)? I have a ~/.local/nyxt/hostlist-stevenblack.txt file..
[22:00:53] <jmercouris> Kabouik: yes
[22:01:01] <jmercouris> it is very P O S S I B L E
[22:01:16] <jmercouris> aartaka: read the link, use a hash table, use a queue
[22:01:19] <Kabouik> But since I have a host file, I shouldn't have been in the case you described, should I?
[22:01:28] <jmercouris> Kabouik: yes, but there is yet another P R O B L E M
[22:01:38] <jmercouris> the processing of the signals itself is slow as a tomato on a sunday
[22:02:00] <Kabouik> There are not many things as slow as a tomotato on a sunday
[22:02:08] <jmercouris> :-)
[22:02:57] <jmercouris> aartaka: I think that will alleviate your woes, also the kernel should already be instantiated on your machine with approximately N workers where N is the amount of CPU cores, including virtual cores
[22:03:03] <jmercouris> IIRC
[22:03:28] <jmercouris> (setf lparallel:*kernel* (lparallel:make-kernel (or (serapeum:count-cpus) 1)))
[22:03:33] <aartaka> jmercouris: You're right there.
[22:03:34] <jmercouris> ah, well, it depends on serapeum:count-cpus
[22:03:45] <jmercouris> aartaka: I've always been here
[22:03:49] <jmercouris> I will be there for you
[22:03:53] <aartaka> xD
[22:03:58] <jmercouris> like a gaurdian scanning the tree tops
[22:04:07] <jmercouris>  bringing justice to Gotham
[22:04:12] <aartaka> Ah ambiguity of the natural language :)
[22:04:30] <jmercouris> My favorite exploit :-D
[22:04:38] <jmercouris> I always annoy Anna by misinterpreting her on purpose
[22:04:42] <jmercouris> good times
[22:31:37] *** Quits: Jing (~hedgehog@2604:a840:3::1033) (Remote host closed the connection)
[22:32:33] *** Joins: Jing (~hedgehog@2604:a840:3::1049)
[23:09:57] <edgarvincent[m]> Hi all! Just popping in to say hi - unfortunately, I haven't had much time for Nyxt recently, but I will during next week. Hope everyone is well!
[23:11:22] <edgarvincent[m]> (and happy nopal Thursday everyone - not a fruit, but it's very nice!)
[23:13:17] *** Quits: tekakutli (~user@201.141.24.66) (Remote host closed the connection)
[23:20:03] <waleee> what does that approximately taste like?
[23:20:35] <waleee> wiki claims like green beans
[23:24:55] <edgarvincent[m]> I does taste a bit like green beans, but a bit "greener" as it were.
[23:25:01] <edgarvincent[m]> It*
[23:25:39] <edgarvincent[m]> It is commonly used in Mexican tacos.
[23:31:41] <edgarvincent[m]> I'm still getting hangs (with or without blocker-mode enabled) with your PR, unfortunately, aartaka :( (this is on Arch Linux with webkit2gtk 2.34.1
[23:32:17] <waleee> with a cleaned ~/.cache/common-lisp?
[23:33:01] <waleee> edgarvincent[m]: also check if you have hostfile-stevenblack.txt in .local/share/nyxt
[23:35:19] <edgarvincent[m]> waleee: yes :(
[23:37:09] <aartaka> edgarvincent[m]: Hmmmm. That's what I was afraid of. I had a partial success when I tested it too. However, after reinstallation and reboot it works fine for me for some five hours already. Can you try rebooting?
[23:37:31] <edgarvincent[m]> It seems slightly better, but I still get freezes. Maybe they are unrelated to this particular issue, but I have been noticing them since the webkitgtk upgrade.
[23:37:53] <edgarvincent[m]> Ok, let me reboot.
[23:37:56] <waleee> hm. Did archlinux introduce a compability package with  libwbkit2gtk-4.0.so ?
[23:38:02] <aartaka> edgarvincent[m]: that is weird.
[23:41:18] <waleee> heh, webkit2gtk has already announced a libwebkit2gtk-5.0 based on the 2.34.1 sources
[23:42:45] <waleee> aha, it uses gtk-4.0
[23:42:58] <waleee> *gtk4
[23:42:59] <edgarvincent[m]> Sorry about that aartaka, it is better after a reboot. I wonder why that is.
[23:44:04] <waleee> some time issues possibly? That gets cacehd when setting up the threads?
[23:44:11] <waleee> *cached
[23:45:41] <edgarvincent[m]> Yes, definitely better than master after a reboot. Sorry for the false alarm.
[23:47:02] <edgarvincent[m]> (BTW, thank you both for tracking this down so quickly :)
[23:47:22] <waleee> I think I wiped .cache/nyxt (... around the same time as I wiped .local/share/nyxt) during debugging
[23:48:01] <waleee> edgarvincent[m]: not that quick for me, clearlinux brought in 2.34.1 some weeks ago
[23:51:09] <aartaka> waleee: Yeah, sorry for the delay. It came absolutely unexpected for us. And thanks for your investigation — I would have never found the asynchronicity issue there if not for you :D
[23:53:57] <waleee> aartaka: no worries, I thought it was a different issue until 2 days ago
[23:54:53] <waleee> s/for me/on my part/
