[00:00:13] *** Quits: ajf_ (~ajf_@user/ajf/x-9593112) (Ping timeout: 240 seconds)
[00:00:35] <sokan> fizzie: this is so much more beautiful
[00:00:48] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68)
[00:01:16] <sokan> was never ever planning on writing crypto code
[00:01:19] *** Joins: ajf_ (~ajf_@user/ajf/x-9593112)
[00:02:30] <slact[m]> I wouldn't trust any crypto lib not written by DJB,  and I'm not even sure about DJB.
[00:02:38] <sokan> who's DJB?
[00:02:56] <floatcomplex> not you, is the point :)
[00:03:00] <sokan> jssj
[00:03:02] <sokan> haha*
[00:03:06] <sokan> certainly not :P
[00:03:10] *** Quits: mihry (~mihriban@88.241.168.28) (Quit: Leaving)
[00:03:25] <slact[m]> Daniel J Bernstein,. the NaCL, curve25519 and Chacha20 guy
[00:04:04] <slact[m]> oh, and the guy that told the US government to fuck off with the "cryptography is munitions so you can';t export the code across borders" bullshit
[00:04:16] <sokan> I had a dream of becoming a hacker (hence why I got hacking: art of exploitation) but alas. I ended up gonig into science :P
[00:04:26] <sokan> so no crypto anyway
[00:04:33] <floatcomplex> i wish that were the case
[00:04:47] <floatcomplex> i spend part of my day cleaning up crypto messes made by scientists who didn't think it mattered
[00:05:06] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:05:18] <sokan> scientstist get into crypto? o.O
[00:05:19] <slact[m]> well, it's actually fun to write crypto, just don't you dare use it for anything productiony. it's fun to tinker with though.
[00:05:40] <floatcomplex> sokan: inadvertently, yes
[00:06:08] <floatcomplex> everyone who uses a computer should know about public key hygiene
[00:06:13] <slact[m]> i tried writing a hash function like 10 years ago. couldn't get it to pass the "spot the penguin" test, gave up
[00:06:14] <floatcomplex> like from kindergarten on
[00:06:21] <floatcomplex> that's different from actually implementing crypto code
[00:06:54] <sokan> wait wait. crypto code is blockchain programming?
[00:06:56] *** Joins: joilerv (~joilerv@162.43.194.16)
[00:07:13] <slact[m]> i'm talking about cryptography, not memecoins.
[00:07:21] *** Quits: joilerv (~joilerv@162.43.194.16) (Client Quit)
[00:07:22] <sokan> ok good.
[00:07:41] <slact[m]> so what the NSA did 10 years ago, as opposed to what the NSA is doing today
[00:07:42] *** Parts: icedtea (~paul@141.217.247.7) (Leaving)
[00:07:43] <sokan> cryptography must be really top tier and tough as nails things in programming
[00:07:53] <sokan> (even math wise)
[00:08:12] *** Joins: brad_mssw (~bhouse@2601:344:4100:b490:6035:21bc:5177:4270)
[00:08:27] *** Joins: peacefulman (~paul@141.217.247.7)
[00:08:38] <sokan> memecoins. hahah. That was good :D
[00:09:17] <floatcomplex> s/blockchain-based/tulip-based/
[00:09:24] <floatcomplex> ^ will make your media consumption make more sense
[00:10:22] <sokan> and s is?
[00:10:46] <sokan> damn it.
[00:10:51] <sokan> Brain has stopped functioning
[00:11:47] <sokan> I honestly never understood wtf blockchain is. I was on twitter and it was more about drama in hacking community than anything else
[00:12:02] *** Joins: System_Error (~SystemErr@user/systemerror)
[00:12:50] *** Joins: duuude (~user@user/duuude)
[00:13:13] *** Joins: tforever (~Terabyte@85.103.105.110)
[00:13:34] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[00:13:39] <floatcomplex> it's basically a coal-powered linked list
[00:14:12] <sokan> it's a chain that has led to the skyrocketing of gpu prices is all i know :P
[00:14:59] <floatcomplex> https://pbs.twimg.com/media/FIU9K3-XoAAG4Iu?format=jpg&name=small
[00:15:45] <tforever> :D
[00:16:03] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[00:16:23] *** Quits: brad_mssw (~bhouse@2601:344:4100:b490:6035:21bc:5177:4270) (Quit: This computer has gone to sleep)
[00:17:10] <sokan> HAHAHAHAHAHHAHAHAHAHA
[00:18:21] <sokan> (also, sorry for going off-topic)
[00:19:51] <tforever> has is anyone been in competitive programming before?
[00:20:16] <floatcomplex> i think a large number of people in here did advent of code last month. i didn't have time
[00:20:36] <sokan> what's that?
[00:21:03] <floatcomplex> it's a dimension other than space, but that's not important right now
[00:21:22] <tforever> sokan: basically a type of exhibition where you submit the fastest algorithm in the shortest time
[00:23:03] <tforever> i want to join one of those exhibitions, wanted to ask experienced people about their experience and working discipline
[00:24:22] <floatcomplex> in the real world, at least my corner of it, code should be justed on how fast it can be debugged by someone looking at it for the first time
[00:24:35] <floatcomplex> s/justed/judged/
[00:24:51] <floatcomplex> points are not awarded for implementing something in 8 minutes instead of a few days
[00:25:23] <floatcomplex> but you might only have minutes to debug it once it's in production
[00:25:28] <floatcomplex> and you might not be the original author
[00:25:37] <sokan> debugging is a hell. And I'm not even advanced in coding
[00:25:47] <floatcomplex> debugging is the job
[00:25:56] <sokan> Wait. Literally minutes?
[00:26:02] <floatcomplex> if you're lucky
[00:26:36] <sokan> So people working in linux (dealing with not user but corps like tesla etc) are living a nightmare :S
[00:29:23] *** Quits: tforever (~Terabyte@85.103.105.110) (Quit: Leaving)
[00:31:32] <pony> 9:56 AM <floatcomplex> but you might only have minutes to debug it once it's in production
[00:31:33] <pony> why?
[00:31:50] *** Joins: xa0s (~xa0s@mab.sdf.org)
[00:33:12] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[00:33:18] <pony> that sounds so stressful :(
[00:33:21] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[00:33:38] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[00:34:13] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 240 seconds)
[00:34:43] *** Joins: trafficjam (~qubes@119.17.42.59)
[00:35:47] <floatcomplex> pony: google "1202 program alarm"
[00:35:58] <pony> ok
[00:37:45] *** Quits: gdd (~gdd@129.199.146.230) (Ping timeout: 250 seconds)
[00:38:36] *** Joins: brad_mssw (~bhouse@2001:558:6043:32:fd2d:fef9:accc:a7a)
[00:38:40] <pony> reading
[00:38:57] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68)
[00:41:00] <floatcomplex> having appreciated the gravity of the situation, now recognize that the reason more code didn't cause short-timescale debugging stress back then is because there wasn't any
[00:41:18] *** Joins: brad_mssw|mac (~bhouse@c-73-104-157-82.hsd1.fl.comcast.net)
[00:41:55] *** Joins: gdd (~gdd@129.199.146.230)
[00:42:54] *** Joins: kit_ten (~u0_a391@2603-6010-a141-6fa3-950d-0150-5311-7e6b.res6.spectrum.com)
[00:43:50] *** Quits: brad_mssw (~bhouse@2001:558:6043:32:fd2d:fef9:accc:a7a) (Ping timeout: 268 seconds)
[00:43:50] *** Quits: duuude (~user@user/duuude) (Ping timeout: 268 seconds)
[00:44:26] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[00:45:08] *** Quits: brad_mssw|mac (~bhouse@c-73-104-157-82.hsd1.fl.comcast.net) (Read error: Connection reset by peer)
[00:45:42] *** Joins: brad_mssw|mac (~bhouse@c-73-104-157-82.hsd1.fl.comcast.net)
[00:46:37] *** Quits: kit-ten (~u0_a391@2600:380:a435:d1e6:f902:eb98:9c0d:5b2e) (Ping timeout: 240 seconds)
[00:47:52] *** Joins: brad_mssw (~bhouse@c-73-104-157-82.hsd1.fl.comcast.net)
[00:47:58] *** Quits: inomoz (~inomoz@176.59.115.245) (Read error: Connection reset by peer)
[00:48:21] *** Quits: magla (~gelignite@55d483f5.access.ecotel.net) (Quit: Stay safe!)
[00:48:30] *** Joins: Macuser (~Macuser@2600:1003:b44a:6ea5:f50b:3cf7:5220:fec7)
[00:48:35] *** Quits: brad_mssw|mac (~bhouse@c-73-104-157-82.hsd1.fl.comcast.net) (Read error: No route to host)
[00:49:46] *** Quits: brad_mssw (~bhouse@c-73-104-157-82.hsd1.fl.comcast.net) (Read error: No route to host)
[00:50:26] *** Quits: trafficjam (~qubes@119.17.42.59) (Ping timeout: 256 seconds)
[00:50:40] <pony> ahh, a good read, thank you
[00:51:03] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:51:28] *** Joins: malina (~malina@user/malina)
[00:51:48] *** Joins: Torr (~Torr@user/torr)
[00:52:04] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[00:52:07] *** Joins: duuude (~user@user/duuude)
[00:52:50] <pony> brb shower
[00:55:52] *** Joins: Viewday118 (~Viewday@user/viewday)
[00:57:48] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[00:57:49] *** Viewday118 is now known as Viewday11
[00:58:43] *** Joins: crankslider (~slidercra@user/slidercrank)
[01:00:00] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: Disconnecting)
[01:00:44] *** Quits: Akuli (~Akuli@87-94-108-211.bb.dnainternet.fi) (Quit: Akuli)
[01:02:10] *** Joins: trafficjam (~qubes@119.17.42.59)
[01:02:25] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[01:03:48] *** Quits: malloy (~jimery@116.30.220.175) (Ping timeout: 250 seconds)
[01:05:25] <constxd_> kings
[01:05:50] <constxd_> what's your go-to tool when you just want some basic profiling
[01:05:56] <constxd_> %cpu time spent in each function
[01:05:58] *** Joins: malloy (~jimery@116.30.220.175)
[01:06:01] <constxd_> on linux
[01:06:09] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[01:06:13] <constxd_> perf? gprof? cachegrind?
[01:06:28] <constxd_> what do you kings go for
[01:07:34] *** Joins: Guest143332 (~Guest1433@ppp046177221088.access.hol.gr)
[01:09:51] *** Quits: Burger (~textual@user/burger) (Quit: Textual IRC Client: www.textualapp.com)
[01:10:41] *** Joins: random-jellyfish (~random-je@user/random-jellyfish)
[01:11:35] <floatcomplex> perf
[01:11:51] <floatcomplex> with flamegraphs
[01:15:03] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[01:15:03] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[01:15:03] *** Joins: wroathe (~wroathe@user/wroathe)
[01:15:46] *** Quits: Guest143332 (~Guest1433@ppp046177221088.access.hol.gr) (Quit: Guest143332)
[01:16:13] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Ping timeout: 240 seconds)
[01:17:04] *** Quits: oxfuxxx (~oxfuxxx@160.238.38.154) (Ping timeout: 256 seconds)
[01:21:00] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:21:19] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[01:22:42] *** Joins: Klinda (~superleag@user/klinda)
[01:23:31] *** Joins: Tha_14 (~Tha_14@user/tha-14/x-4134127)
[01:26:06] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[01:27:03] *** Joins: Fairy (~Fairy@2001:464a:4992:0:55d4:c070:9ca0:8896)
[01:27:20] *** Joins: oxfuxxx (~oxfuxxx@160.238.38.154)
[01:30:06] *** Quits: malina (~malina@user/malina) (Ping timeout: 256 seconds)
[01:31:01] <dan_pena> Is it better to declare var before using them or always at the top of the function?
[01:31:59] <caze> Close to where you're using it.
[01:32:50] <dan_pena> s it better to declare var before using them or always at the top of the function?
[01:32:57] <dan_pena> s it better to declare var before using them or always at the top of the function?
[01:32:58] *** ChanServ sets mode: +o candide
[01:32:58] *** dan_pena was kicked by candide (Stop repeating yourself)
[01:33:09] *** Joins: dan_pena (~dan_pena@86.228.71.37.rev.sfr.net)
[01:33:15] <dan_pena> I failed xd
[01:35:31] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:36:42] *** Joins: tforever (~Terabyte@85.103.105.110)
[01:37:53] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[01:38:46] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[01:39:25] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[01:39:47] *** Joins: DaftMouse (~DaftMouse@177.54.124.1)
[01:40:45] *** Quits: oxfuxxx (~oxfuxxx@160.238.38.154) (Quit: Raccoon's not another IRC transgenre wannabe who can't fap at the dead american dream, fhackerz)
[01:40:52] *** Quits: mahmutov_ (~mahmutov@5.176.2.142) (Ping timeout: 256 seconds)
[01:41:12] *** Joins: oxfuxxx (~oxfuxxx@160.238.38.154)
[01:50:18] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[01:50:46] *** Quits: tforever (~Terabyte@85.103.105.110) (Quit: Leaving)
[01:55:36] *** Joins: agonhajdari (~textual@user/agonhajdari)
[01:55:40] *** Quits: oxfuxxx (~oxfuxxx@160.238.38.154) (Remote host closed the connection)
[01:56:15] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:56:22] *** Joins: oxfuxxx (~oxfuxxx@160.238.38.154)
[01:58:32] *** Quits: aradesh (~aradesh@2a02:c7c:120a:b200:f9e7:d5ec:cde6:98e) (Quit: WeeChat 1.9.1)
[01:59:06] *** Quits: Macuser (~Macuser@2600:1003:b44a:6ea5:f50b:3cf7:5220:fec7) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:59:33] *** Joins: Atque (~Atque@user/atque)
[02:00:49] *** Quits: peacefulman (~paul@141.217.247.7) (Quit: Leaving)
[02:03:11] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc)
[02:04:04] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[02:04:51] *** Quits: luizfrds (~Luiz@152.250.243.147) (Read error: Connection reset by peer)
[02:06:00] *** Joins: Akiva (~Akiva@user/Akiva)
[02:07:01] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[02:07:43] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[02:10:13] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[02:10:41] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[02:10:53] *** Parts: dodobrain (~dodobrain@user/dodobrain) ()
[02:19:33] *** Joins: rgrinberg (~textual@2806:101e:7:b1fc:11d3:8083:cd07:346c)
[02:21:31] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 256 seconds)
[02:23:29] <apotheon> dan_pena: Did you see caze's response?
[02:23:34] <apotheon> 15:01 < caze> Close to where you're using it.
[02:25:10] <caze> dan_pena: Did you see apotheon's response?
[02:25:19] <caze> 17:53:34 <apotheon> 15:01 < caze> Close to where you're using it.
[02:25:25] <apotheon> caze: Did you see my quote of your response?
[02:25:40] <apotheon> 15:55 < caze> 17:53:34 <apotheon> 15:01 < caze> Close to where you're using it.
[02:25:48] <caze> apotheon: Did you see my quote of your quote of my response?
[02:25:54] <apotheon> Oh, shit, recursion in C.
[02:25:56] <apotheon> stack blown
[02:26:04] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:28:12] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Client closed)
[02:28:25] <nomagno> apotheon: Blame GCC not knowing how to optimize tail recursion
[02:28:27] <nomagno> >:(
[02:28:37] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:29:09] <floatcomplex> gcc does know how to do that
[02:29:19] <floatcomplex> it does a very good job of that
[02:29:55] <nomagno> ... fair
[02:30:01] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[02:31:59] <floatcomplex> -foptimize-sibling-calls is enabled at...most levels. if it's not working it's because you've got some violation of the conditions it needs
[02:32:15] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[02:32:55] *** Joins: riposte (~finalripo@119-17-138-70.77118a.mel.static.aussiebb.net)
[02:33:01] *** Quits: pizdets (~pizdets@183.182.111.169) (Ping timeout: 240 seconds)
[02:33:02] *** Quits: finalriposte (~finalripo@2403-5802-74-2-20c-29ff-fe7c-2548.ip6.aussiebb.net) (Ping timeout: 252 seconds)
[02:33:45] * pragma- stares at 14:55:40 <apotheon> 15:55 < caze> 17:53:34 <apotheon> 15:01 < caze> Close to where you're using it.
[02:33:55] *** Joins: pizdets (~pizdets@183.182.115.239)
[02:36:07] *** Quits: gaude (~gaude@152-39-142-46.pool.kielnet.net) (Quit: Client closed)
[02:37:32] *** Quits: random-nick (~random-ni@87.116.181.150) (Ping timeout: 256 seconds)
[02:40:25] <floatcomplex> :)
[02:42:44] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[02:43:21] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:44:16] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Quit: Client closed)
[02:44:22] *** Quits: rgrinberg (~textual@2806:101e:7:b1fc:11d3:8083:cd07:346c) (Remote host closed the connection)
[02:44:38] *** Quits: acerbic (~acerbic@cs-xdata-50-86-55-135.cspire.com) (Read error: Connection reset by peer)
[02:44:45] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[02:45:23] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:45:45] *** Joins: rgrinberg (~textual@2806:101e:7:b1fc:11d3:8083:cd07:346c)
[02:46:00] <apotheon> pragma-: char *mention_prior_response(char *prior) { char *next = calloc(sizeof(next), MAGIC_NUMBER); sprintf(next, "Did you see the prior response?\n%s", prior); return next; }
[02:46:04] <apotheon> good luck
[02:46:43] <apotheon> oh, I forgot to make it recursive, crap
[02:46:56] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[02:47:31] <nomagno> apotheon: you're missing like half the code
[02:47:49] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 2.8)
[02:50:33] <apotheon> yep
[02:51:06] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[02:51:18] *** Joins: soapsudsxx (~soapsudsx@141.193.188.151)
[02:51:57] *** Quits: Tha_14 (~Tha_14@user/tha-14/x-4134127) (Read error: Connection reset by peer)
[02:53:05] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[02:53:05] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[02:53:05] *** Joins: wroathe (~wroathe@user/wroathe)
[02:53:27] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Read error: Connection reset by peer)
[02:55:30] <apotheon> void *mention_prior(char *prior) { char *next = calloc(sizeof(next), MAGIC_NUMBER); sprintf(next, "Did you see the prior response?\n%s", prior); printf("%s\n", next); return mention_prior(next); }
[02:55:39] <apotheon> DISCLAIMER: Do not write code this way.
[02:56:45] <apotheon> This code has only been proven incorrect, not tested.
[02:56:55] <apotheon> Well, "correct" for some definition, I suppose.
[02:57:42] <nomagno> What does sizeof(next) do
[02:57:47] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[02:58:13] <nomagno> Allocate a NULL pointer of size char *?
[02:59:30] <nomagno> I'm sorry there is no way that calloc does anything useful
[02:59:34] <caze> What did you just write?
[02:59:37] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Ping timeout: 240 seconds)
[03:00:22] *** Quits: puke (~puke@user/puke) (Quit: puke)
[03:00:41] *** Joins: System_Error (~SystemErr@user/systemerror)
[03:01:09] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[03:02:47] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-5869-268c-a8ec-cf14.res6.spectrum.com)
[03:03:35] *** Quits: AmR| (~AmREiSa@156.207.253.69) (Quit: Konversation terminated!)
[03:04:15] *** Joins: CaCode (~CaCode@user/cacode)
[03:09:59] <apotheon> I just realized I got the argument order backward in calloc().
[03:12:15] <caze> Anything else?
[03:12:15] *** Joins: mikoto-chan (~mikoto-ch@185.25.79.189)
[03:15:00] <apotheon> I don't plan to read that code again.
[03:15:22] <caze> sizeof(next) should be sizeof *next (or just 1)
[03:16:05] <apotheon> oh
[03:16:09] <apotheon> that too, I guess
[03:17:25] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[03:23:27] *** Joins: user (~user@62.216.61.67)
[03:23:30] *** Joins: Tha_14 (~Tha_14@user/tha-14/x-4134127)
[03:23:53] *** Parts: user (~user@62.216.61.67) ()
[03:24:59] *** Joins: Guest91 (~Guest91@ppp046177221088.access.hol.gr)
[03:25:40] *** Quits: coruja (~coruja@user/coruja) (Quit: WeeChat 3.4)
[03:26:17] *** Quits: rcf (rcf@iceland.sdf.org) (Ping timeout: 240 seconds)
[03:26:29] *** Joins: coruja (~coruja@user/coruja)
[03:26:32] <Guest91> test
[03:27:07] *** Joins: user (~user@62.216.61.67)
[03:29:23] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-5869-268c-a8ec-cf14.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[03:29:56] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[03:31:56] *** Quits: adip (~adip@user-188-33-250-10.play-internet.pl) (Ping timeout: 256 seconds)
[03:32:09] <caze> apotheon: https://ideone.com/hHMeGn
[03:33:02] *** candide sets mode: -o candide
[03:35:26] *** Quits: Guest91 (~Guest91@ppp046177221088.access.hol.gr) (Quit: Client closed)
[03:35:49] *** Parts: user (~user@62.216.61.67) ()
[03:38:10] *** Quits: crankslider (~slidercra@user/slidercrank) (Read error: Connection reset by peer)
[03:40:13] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:cb46:c04b:665a:c687) (Ping timeout: 240 seconds)
[03:49:55] *** Joins: puke (~puke@user/puke)
[03:50:13] *** Quits: puke (~puke@user/puke) (Client Quit)
[03:51:25] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[03:51:37] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 256 seconds)
[03:52:47] *** Joins: acerbic (~acerbic@cs-xdata-50-86-55-135.cspire.com)
[03:54:27] *** Quits: freep (~freepppp@62.1.174.38.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[03:54:40] <apotheon> caze: Oh, sure, just write *good* code, then, and not directly into the IRC window.
[03:54:48] *** Joins: ferdna (~ferdna@user/ferdna)
[03:55:33] *** Joins: slidercrank (~slidercra@user/slidercrank)
[03:58:07] *** Quits: placeb0 (uid283215@id-283215.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[03:58:59] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[03:59:47] *** Joins: puke (~puke@user/puke)
[04:00:36] *** Joins: Wulf (~Wulf@user/wulf)
[04:00:36] *** Quits: CaCode (~CaCode@user/cacode) (Quit: Leaving)
[04:01:51] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[04:02:42] *** Joins: Betal (~Betal@user/betal)
[04:03:00] *** Quits: rgrinberg (~textual@2806:101e:7:b1fc:11d3:8083:cd07:346c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:09:37] *** Joins: Figworm (FiggyWitIt@user/figworm)
[04:09:53] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:09:53] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:09:53] *** Joins: wroathe (~wroathe@user/wroathe)
[04:11:13] *** Quits: DaftMouse (~DaftMouse@177.54.124.1) (Remote host closed the connection)
[04:12:02] *** Quits: tomboy64 (~tomboy64@user/tomboy64) (Ping timeout: 240 seconds)
[04:16:17] *** Joins: retro (~retro@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[04:16:25] *** Parts: retro (~retro@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) ()
[04:16:42] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[04:18:17] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 240 seconds)
[04:19:20] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[04:19:33] *** Joins: pnbeast (~pnbeast@2601:140:4280:6ce0::1)
[04:22:17] *** Quits: dan_pena (~dan_pena@86.228.71.37.rev.sfr.net) (Ping timeout: 240 seconds)
[04:23:28] *** Quits: xse (~xse@user/xse) (Remote host closed the connection)
[04:25:03] *** Quits: anon16_ (~anon16_@user/anon16) (Ping timeout: 256 seconds)
[04:25:17] *** Joins: xse (~xse@user/xse)
[04:25:37] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[04:26:09] *** Joins: frost (~frost@user/frost)
[04:29:32] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Read error: Connection reset by peer)
[04:31:22] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293)
[04:32:09] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[04:32:27] *** Quits: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[04:32:43] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a98c:b4fd:85b3:2536)
[04:32:59] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a98c:b4fd:85b3:2536) (Remote host closed the connection)
[04:35:12] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[04:38:33] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[04:40:17] *** Quits: Thedarkb1 (~Thedarkb@cpc84095-pool16-2-0-cust190.15-1.cable.virginm.net) (Read error: No route to host)
[04:40:21] *** Joins: Thedarkb2 (~Thedarkb@cpc84095-pool16-2-0-cust190.15-1.cable.virginm.net)
[04:41:38] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:87d8:fa0a:4d3d:df57)
[04:43:32] *** Quits: acerbic (~acerbic@cs-xdata-50-86-55-135.cspire.com) (Read error: Connection reset by peer)
[04:44:53] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 256 seconds)
[04:46:10] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[04:49:00] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[04:50:03] *** Quits: JanC (~janc@user/janc) (Quit: 'k zien d'r mee weh zi)
[04:50:10] *** Joins: JanC (~janc@2a02:578:85fd:500:19cf:71a7:5136:b14a)
[04:50:34] *** JanC is now known as Guest4834
[04:51:08] *** Quits: Guest4834 (~janc@2a02:578:85fd:500:19cf:71a7:5136:b14a) (Remote host closed the connection)
[04:52:12] *** Joins: anon16_ (~anon16_@user/anon16)
[04:52:41] *** Joins: JanC_ (~janc@user/janc)
[04:52:50] *** Quits: JanC_ (~janc@user/janc) (Remote host closed the connection)
[04:53:01] *** Quits: manjaroi3 (~manjaro-i@125.131.131.26) (Ping timeout: 240 seconds)
[04:53:13] *** Joins: JanC (~janc@user/janc)
[04:55:13] *** Joins: manjaroi3 (~manjaro-i@125.131.131.26)
[04:56:40] *** Quits: zensei1 (~zensei@user/zensei) (Ping timeout: 268 seconds)
[05:00:22] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a98c:b4fd:85b3:2536)
[05:00:27] *** Quits: xse (~xse@user/xse) (Remote host closed the connection)
[05:00:46] *** Joins: xse (~xse@user/xse)
[05:01:39] *** Joins: acerbic (~acerbic@cs-xdata-50-86-55-135.cspire.com)
[05:03:01] *** Quits: manjaroi3 (~manjaro-i@125.131.131.26) (Ping timeout: 256 seconds)
[05:05:17] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 256 seconds)
[05:05:51] *** Quits: Burgundy (~yomon@82.76.72.88) (Ping timeout: 256 seconds)
[05:06:47] *** Joins: Macuser (~Macuser@2600:1003:b457:2f6e:894b:30a0:533e:d4ac)
[05:06:53] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[05:07:27] *** Joins: dante (~dante@186-208-229-196.netcom.psi.br)
[05:07:32] *** Quits: Macuser (~Macuser@2600:1003:b457:2f6e:894b:30a0:533e:d4ac) (Client Quit)
[05:07:33] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[05:07:33] *** Quits: ripsquid (~ripsquid@user/ripsquid) (Ping timeout: 256 seconds)
[05:09:58] *** Quits: xsperry (~xs@user/xsperry) (Ping timeout: 256 seconds)
[05:10:27] *** Quits: sathylias (~sysadmin@modemcable136.173-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[05:11:38] *** smallvil_ is now known as smallville7123
[05:12:05] *** Quits: dsrt^ (~dsrt@wsip-98-188-246-242.mc.at.cox.net) (Ping timeout: 256 seconds)
[05:15:53] *** Joins: Guest10 (~Guest10@186-208-229-196.netcom.psi.br)
[05:18:31] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[05:21:55] *** Guest10 is now known as yvel
[05:22:41] *** Parts: yvel (~Guest10@186-208-229-196.netcom.psi.br) ()
[05:23:31] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[05:23:44] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[05:23:59] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Ping timeout: 256 seconds)
[05:24:19] *** Joins: seninha (~seninha@user/seninha)
[05:29:22] *** Joins: frost (~frost@user/frost)
[05:35:25] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[05:36:57] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[05:37:10] *** Quits: Trashlord (~trash@user/trashlord) (Ping timeout: 256 seconds)
[05:37:24] *** Joins: Trashlord__ (~trash@user/trashlord)
[05:37:44] *** Quits: trafficjam (~qubes@119.17.42.59) (Ping timeout: 256 seconds)
[05:38:43] *** Quits: diiirt (~diiirt@user/diiirt) (Remote host closed the connection)
[05:39:02] *** Joins: diiirt (~diiirt@user/diiirt)
[05:39:18] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-2-19.hsd1.wa.comcast.net)
[05:41:51] *** Joins: Trashlord (~trash@user/trashlord)
[05:42:13] *** Quits: Trashlord__ (~trash@user/trashlord) (Ping timeout: 240 seconds)
[05:43:58] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[05:44:52] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[05:48:28] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:87d8:fa0a:4d3d:df57) (Ping timeout: 268 seconds)
[05:49:00] *** Joins: ADHD (~XXX@user/ADHD)
[05:50:09] *** Joins: rcf (rcf@iceland.sdf.org)
[05:50:14] *** Quits: malloy (~jimery@116.30.220.175) (Ping timeout: 250 seconds)
[05:50:32] <ADHD> I'm trying to intercept malloc/free using LD_PRELOAD, here's my sample shared library: https://cdx.t0xic.xyz/bin?id=f6496e8dd3289736b40d9d0600957ddc7aa99b2a but when I run this with a sample test, it gives me a segmentation fault. (but the test works fine without LD_PRELOAD). Am I doing something incorrect in this code?
[05:51:28] *** Joins: ethoxy (~root@bison.sh3ll.ru)
[05:51:29] *** Quits: Brewster (~Brewster@104.145.226.5) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[05:51:39] <cehteh> ADHD: iirc glibc allows you to register handlers for that
[05:51:44] *** Joins: Brewster (~Brewster@104.145.226.5)
[05:52:13] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[05:52:14] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[05:52:14] *** Joins: wroathe (~wroathe@user/wroathe)
[05:52:21] *** Joins: malloy (~jimery@116.30.220.175)
[05:52:25] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[05:53:34] <ADHD> cehteh: But is there something incorrect in this code? I'm not sure why it segfaults with this loaded.
[05:54:57] *** Joins: frost (~frost@user/frost)
[05:55:17] <cehteh> well it segfaults thus something is wrong, you dont check for successfil dlsym for example
[05:55:29] <cehteh> https://www.gnu.org/software/libc/manual/html_node/Hooks-for-Malloc.html   fyi
[05:57:24] <cehteh> calling dlsym on every malloc/free is prolly not a good idea and i dont know if you can use FILE* io from there without races
[05:58:26] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-5869-268c-a8ec-cf14.res6.spectrum.com)
[05:59:16] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[05:59:30] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[06:00:37] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[06:01:58] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[06:03:12] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[06:03:12] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[06:03:12] *** Joins: wroathe (~wroathe@user/wroathe)
[06:06:52] <constxd> ADHD: did you try it without the logging?
[06:07:17] *** Joins: raym (~raym@user/raym)
[06:07:46] <fizzie> Some library functions might call `malloc` themselves.
[06:08:16] <fizzie> Cf. that GNU hook doc page's comment /* printf might call malloc, so protect it too. */
[06:09:24] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[06:09:36] <constxd> kings
[06:09:38] <constxd> i need help
[06:10:48] <constxd> i want to provide a wrapper around ioctl() in my programming language's standard library
[06:11:27] <constxd> but i'm not sure how to handle the third argument
[06:13:07] <constxd> like ideally i don't want to have special cases for every possible ioctl request
[06:13:24] *** Joins: xsperry (~xs@user/xsperry)
[06:13:26] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[06:13:27] <constxd> i want some general interface
[06:13:56] *** Joins: frost (~frost@user/frost)
[06:14:42] <Maxdamantus> constxd: do you mean in terms of implementation, or in terms of API design?
[06:14:47] *** Joins: peacefulman (~paul@141.217.247.7)
[06:14:49] <constxd> is there way for example to use the TIOCGWINSZ request to legally get the window size without actually knowing about 'struct winsize'
[06:15:22] <Maxdamantus> constxd: not really.
[06:15:28] <constxd> i mean like
[06:15:44] <constxd> realistically you can probably guess the offsets of the members
[06:15:48] <Maxdamantus> constxd: basically, you'd expect to have a C FFI to handle all `ioctl`s.
[06:16:02] <constxd> how do people implement C FFIs
[06:16:06] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[06:16:10] <Maxdamantus> constxd: eg, libcffi I think is able to parse C header files to find those structs.
[06:16:25] <Maxdamantus> libffi*
[06:16:51] <constxd> cringe man
[06:17:06] <constxd> i guess it's inevitable though
[06:17:12] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273)
[06:17:24] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[06:17:42] <constxd> for ncurses etc.
[06:17:46] <ADHD> fizzie: Hmm, so is there a way I can fix this LD_PRELOAD? I'm not sure if this technique would work anymore.
[06:17:46] <constxd> SDL maybe
[06:17:56] <Maxdamantus> You could alternatively just allow the user to assume a certain struct layout, which is probably fine in a lot of cases.
[06:18:06] <constxd> ADHD: just stop calling fprintf
[06:18:12] <constxd> it's calling malloc() recursively
[06:18:14] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Client Quit)
[06:18:37] <constxd> Maxdamantus: yeah that's what i was thinking
[06:19:00] <constxd> but like
[06:19:19] <constxd> when libffi parses these headers, how does it know if there's padding anywhere?
[06:20:13] <Maxdamantus> It probably just makes assumptions about alignment and sizes based on the platform.
[06:21:21] <Maxdamantus> So for Linux x86_64 it will probably assume that `unsigned short` has a size of 2 bytes and an alignment also of 2 bytes.
[06:22:49] <fizzie> ADHD: You could stick to the `write` system call, which is unlikely to call malloc. At least to verify if that's the problem.
[06:23:25] <Maxdamantus> Apparently C11 also has `alignof`, so you don't need to hardcode the alignments for each platform.
[06:23:46] <constxd> isn't the alignment implementation-defined though
[06:24:37] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-2-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[06:24:49] <Maxdamantus> Yes, but when libffi is compiled for a particular platform, it can capture the alignments for all the supported types at that point.
[06:26:15] <constxd> ahh yes
[06:26:38] <constxd> ok i gotta start using this
[06:26:40] <constxd> based
[06:26:45] <Maxdamantus> struct type_info { char *name; ssize_t size; ssize_t alignment; }; struct type_info type_infos[] = { { "int", sizeof (int), alignof (int) }, { "short", sizeof (short), alignof (short) }, ...., { 0 } };
[06:27:32] <ADHD> fizzie: Wrapping `write` wouldn't fix it either. It still segfaults out: https://cdx.t0xic.xyz/bin?id=71200c2d30b47372e55fd1f8727aaaa743ab5d9d
[06:28:27] *** Joins: rgrinberg (~textual@187.223.71.231)
[06:28:35] <fizzie> Not *wrapping* `write`, calling `write` from your malloc wrapper.
[06:28:36] <constxd> bro what
[06:28:43] <fizzie> Instead of `fprintf`.
[06:28:48] <ADHD> Ohhh
[06:28:51] <ADHD> sorry
[06:29:24] <constxd> Maxdamantus: seems like libffi doesn't parse headers or anything, were you thinking of another library?
[06:29:29] <constxd> because that would be kind of based too
[06:29:49] *** Quits: Fairy (~Fairy@2001:464a:4992:0:55d4:c070:9ca0:8896) (Ping timeout: 240 seconds)
[06:30:32] <Maxdamantus> constxd: maybe. I'm pretty sure Python's FFI reads header files, and I thought it used libffi for it.
[06:30:54] <constxd> according to libffi website CPython does use libffi to implement its ctypes module
[06:31:04] <constxd> but i think it's just for actually calling the functions
[06:31:33] <Maxdamantus> Hm. Right looks like Python's CFFI might have its own parser.
[06:32:29] <constxd> but it would be sick if i could write (in Ty) like: let win_size = ffi.type('struct { short row, col, py, px; }')
[06:32:30] *** Parts: peacefulman (~paul@141.217.247.7) (Leaving)
[06:33:19] <ADHD> fizzie: Like this?  https://cdx.t0xic.xyz/bin?id=4b9baa20c97be9689b701b9186f5bd9c21e00fbc (still segfaults)
[06:33:52] <Maxdamantus> https://foss.heptapod.net/pypy/cffi/-/blob/branch/default/cffi/cparser.py
[06:33:56] *** Joins: Lazenca (~lazenca@user/lazenca)
[06:34:10] <Maxdamantus> Yeah, so just part of Python's CFFI, not libffi itself.
[06:34:10] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-5869-268c-a8ec-cf14.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[06:34:20] <constxd> meh
[06:34:24] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 256 seconds)
[06:34:31] <constxd> i don't feel like writing a C parser
[06:34:49] *** Joins: tomboy64 (~tomboy64@user/tomboy64)
[06:35:00] <Maxdamantus> I would just expect the user to specify the struct layout.
[06:35:32] *** Quits: mikoto-chan (~mikoto-ch@185.25.79.189) (Ping timeout: 256 seconds)
[06:35:48] <Maxdamantus> ffi.struct([ffi.SHORT, ffi.SHORT, ffi.SHORT, ffi.SHORT])
[06:35:59] <constxd> yeah that's not even much worse
[06:36:05] <constxd> parsing C is bloat
[06:37:14] <Maxdamantus> Right, at least for the special case of `ioctl`, which already relies on the programmer making assumptions.
[06:37:32] <fizzie> ADHD: Mm. Took a look. At least on this system, it segfaults due to running out of stack space because `dlsym` itself calls malloc. That sounds a little trickier. What you'll probably want to do instead is to do the `dlsym`s at library load time, not during the call to malloc.
[06:37:34] *** Joins: mikoto-chan (~mikoto-ch@185.25.79.189)
[06:38:21] <Maxdamantus> but in general it's probably useful in Python being able to just refer to a typical non-variadic function and usually having the correct type information.
[06:38:39] *** Joins: BobTheTomato (~paul@141.217.247.7)
[06:38:55] <ADHD> fizzie: load `dlsym` at lib load time?
[06:39:00] *** Parts: BobTheTomato (~paul@141.217.247.7) ()
[06:39:35] <floatcomplex> don't write new code that depends on dynamic linking in 2022 thanks
[06:39:38] <constxd> call dlsym once for malloc and once for free instead of calling it every time one of your wrappers is invoked
[06:40:21] <constxd> Maxdamantus: surprised they implement the C parsing in python instead of C using libclang or something
[06:42:22] <fizzie> Hmm. I guess the problem is, you'd need to be able to satisfy the `malloc` calls inside dlsym *before* you can figure out the address of the real `malloc` function.
[06:42:24] <Maxdamantus> Actually, it refers to this library: https://github.com/eliben/pycparser
[06:42:25] <ADHD> But isn't what we're doing it here? This is my test code (https://cdx.t0xic.xyz/bin?id=bbf7bc6677d1fb8922577a24460d2a968fe83d06) and I think it resolves to my custom malloc/free on lines 5, 7, 8 and 9.
[06:42:25] <candide> Title of Maxdamantus's link: GitHub - eliben/pycparser: Complete C99 parser in pure Python
[06:42:38] <ADHD> Since dlsym resolves to the system's implementation.
[06:42:52] * floatcomplex factors out your code
[06:43:16] <fizzie> The problem (again, at least on this system) is that `dlsym` tries to call malloc as part of its operation. And gets your replacement function.
[06:43:24] <fizzie> Which then calls dlsym again, and so on.
[06:43:40] <ADHD> fizzie: Could you tell me how I could resolve that issue?
[06:44:36] *** Quits: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca) (Ping timeout: 256 seconds)
[06:45:20] <fizzie> You can get rid of the infinite loop easily enough, by not doing the `dlsym` in the wrapper function but at the time the library's loaded. But that still doesn't work because the `malloc` wrapper is still called before you get the address of the real `malloc` function.
[06:46:13] *** Joins: BobTheTomato (~paul@141.217.247.7)
[06:46:17] <constxd> very cringe that dlsym calls malloc
[06:46:34] *** Parts: floatcomplex (~floatcomp@wireguard/tunneler/floatcomplex) ()
[06:46:43] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[06:47:00] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[06:47:09] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:47:33] *** Joins: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca)
[06:48:05] <Maxdamantus> constxd: btw, in case you're not aware, there's #proglangdesign which likes to discuss these sorts of things (and other things related to PL design/implementation)
[06:48:13] *** Quits: mikoto-chan (~mikoto-ch@185.25.79.189) (Ping timeout: 240 seconds)
[06:49:00] *** Quits: teepee (~teepee@openscad/teepee) (Ping timeout: 276 seconds)
[06:50:40] <constxd> Maxdamantus: thank u king
[06:51:07] *** Joins: teepee (~teepee@openscad/teepee)
[06:51:12] *** Joins: frost (~frost@user/frost)
[06:51:30] <Maxdamantus> np
[06:52:38] <constxd> Maxdamantus: looking at the website -- are any of these languages your own
[06:53:14] <ADHD> fizzie: Hmm.
[06:53:50] <Maxdamantus> constxd: nope. I haven't really got around to implementing my language. Got a full-time job to focus on.
[06:54:32] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:54:57] *** Quits: MrFantastik (~f@2607:f598:bbda:20:f5b3:32dc:f491:b69e) (Ping timeout: 240 seconds)
[06:54:59] <constxd> the trick is to get a WFH job
[06:55:11] <constxd> and then just develop your language all day instead of working
[06:55:30] <fizzie> ADHD: You could _probably_ get it to work by implementing a simple static allocator it uses until the `dlsym` functions are done, but possibly there's some simpler way. I gave it a very quick spin, but got an odd "./tmp: symbol lookup error: ./hook.so: undefined symbol: dlsym" error that I don't feel like debugging.
[06:55:33] <Maxdamantus> I don't think I'm dishonest enough to manage that.
[06:57:16] <constxd> i did it today without really meaning to
[06:57:26] <constxd> need to start going into the office so i don't get distracted
[06:58:18] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[06:59:17] *** Quits: ADHD (~XXX@user/ADHD) (Ping timeout: 240 seconds)
[07:00:25] *** Joins: ADHD (~XXX@bras-vprn-toroon4834w-lp130-15-184-147-71-53.dsl.bell.ca)
[07:05:04] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[07:06:26] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[07:06:45] *** Quits: ADHD (~XXX@bras-vprn-toroon4834w-lp130-15-184-147-71-53.dsl.bell.ca) (Changing host)
[07:06:45] *** Joins: ADHD (~XXX@user/ADHD)
[07:08:50] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Max SendQ exceeded)
[07:09:42] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[07:10:02] *** Joins: fcresende_ (~quassel@vps35015.publiccloud.com.br)
[07:10:17] *** Quits: fcresende (~quassel@vps35015.publiccloud.com.br) (Ping timeout: 240 seconds)
[07:10:40] *** Joins: mikoto-chan (~mikoto-ch@185.25.79.189)
[07:10:50] *** Quits: ADHD (~XXX@user/ADHD) (Quit: leaving)
[07:11:25] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[07:11:52] *** Joins: ADHD (~XXX@user/ADHD)
[07:12:20] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 268 seconds)
[07:14:01] *** Joins: monkey_ (~user@190.104.116.153)
[07:15:18] *** Joins: trafficjam (~qubes@118.127.126.178)
[07:16:19] *** Quits: dante (~dante@186-208-229-196.netcom.psi.br) (Quit: Leaving)
[07:17:34] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[07:20:59] *** Joins: fe23 (~fe23@2409:8a34:464:4990:582:c21a:6d9d:c286)
[07:21:12] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Client Quit)
[07:21:30] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[07:21:51] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) (Ping timeout: 256 seconds)
[07:21:55] *** Joins: frost (~frost@user/frost)
[07:22:17] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293) (Ping timeout: 240 seconds)
[07:23:21] *** Quits: pucara (~i@host230.186-125-94.telecom.net.ar) (Quit: Lost terminal)
[07:24:09] *** Joins: Guest71 (~Guest71@49.245.95.94)
[07:24:34] *** Guest71 is now known as io614
[07:26:32] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 256 seconds)
[07:26:57] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[07:27:40] *** Quits: trafficjam (~qubes@118.127.126.178) (Ping timeout: 256 seconds)
[07:29:30] *** Joins: trafficjam (~qubes@118.127.126.178)
[07:31:46] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:accc:f920:44e1:6c44)
[07:31:46] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:accc:f920:44e1:6c44) (Changing host)
[07:31:46] *** Joins: skapata (~Skapata@user/skapata)
[07:32:07] *** Quits: io614 (~Guest71@49.245.95.94) (Quit: Client closed)
[07:32:42] *** Joins: io614 (~io614@49.245.95.94)
[07:32:46] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[07:34:17] *** Quits: kit_ten (~u0_a391@2603-6010-a141-6fa3-950d-0150-5311-7e6b.res6.spectrum.com) (Ping timeout: 240 seconds)
[07:34:24] *** Quits: io614 (~io614@49.245.95.94) (Client Quit)
[07:34:43] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[07:34:49] *** Joins: io614 (~io614@49.245.95.94)
[07:34:53] *** Quits: io614 (~io614@49.245.95.94) (Client Quit)
[07:35:41] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[07:35:54] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[07:36:00] *** Joins: kit_ten (~u0_a391@cpe-76-190-178-139.neo.res.rr.com)
[07:36:01] *** Joins: io614 (~io614@49.245.95.94)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:23] *** Parts: io614 (~io614@49.245.95.94) ()
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:38:26] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[07:39:34] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[07:43:15] *** Quits: ckdCreations (~ckdCreati@147.55.133.137) (Read error: Connection reset by peer)
[07:46:54] *** Joins: peacefulman (~paul@107-190-110-80.cpe.teksavvy.com)
[07:48:37] *** Joins: ckdCreations (~ckdCreati@147.55.133.138)
[07:48:48] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:49:06] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[07:49:46] *** Quits: BobTheTomato (~paul@141.217.247.7) (Ping timeout: 256 seconds)
[07:53:53] *** Joins: hinata (~hinata@2409:4042:d98:f536:2cc6:57e0:8b7e:83d8)
[07:55:04] *** Quits: smeso (~smeso@user/smeso) (Quit: smeso)
[07:55:53] *** Joins: robyndrake (~robyndrak@154.16.118.240)
[07:56:02] *** Quits: robyndrake (~robyndrak@154.16.118.240) (Changing host)
[07:56:02] *** Joins: robyndrake (~robyndrak@user/robyndrake)
[07:56:16] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[07:59:30] *** Joins: the_lanetly_052 (~the_lanet@194.135.153.29)
[07:59:42] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[08:00:38] *** Joins: MrFantastik (~f@c-73-93-240-190.hsd1.ca.comcast.net)
[08:01:54] *** Joins: smeso (~smeso@user/smeso)
[08:02:27] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 276 seconds)
[08:03:11] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[08:07:01] *** Joins: liba (~liba@user/liba)
[08:07:13] *** Joins: de-facto (~de-facto@user/de-facto)
[08:07:27] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Remote host closed the connection)
[08:07:35] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-2-19.hsd1.wa.comcast.net)
[08:08:01] *** Joins: malina (~malina@user/malina)
[08:08:01] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[08:09:25] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 240 seconds)
[08:18:28] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[08:19:05] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[08:19:24] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[08:19:25] *** Quits: the_lanetly_052 (~the_lanet@194.135.153.29) (Ping timeout: 240 seconds)
[08:20:07] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:21:17] *** Quits: moog (~moog@107.126.53.103) (Remote host closed the connection)
[08:25:52] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[08:27:10] *** Joins: Fairy (~Fairy@2001:464a:4992:0:fddd:e672:32ce:4073)
[08:32:57] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 240 seconds)
[08:35:32] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[08:35:49] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Ping timeout: 240 seconds)
[08:35:50] *** Joins: dsrt^ (~dsrt@wsip-98-188-246-242.mc.at.cox.net)
[08:36:47] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-5869-268c-a8ec-cf14.res6.spectrum.com)
[08:39:30] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Ping timeout: 276 seconds)
[08:40:56] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[08:43:49] *** Joins: noarb- (~noarb@user/noarb)
[08:44:35] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 256 seconds)
[08:45:00] *** Joins: kadavul (~vazha@117.207.44.133)
[08:45:53] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293)
[08:47:01] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[08:47:38] *** Quits: kadavul (~vazha@117.207.44.133) (Client Quit)
[08:48:22] *** Quits: MrFantastik (~f@c-73-93-240-190.hsd1.ca.comcast.net) (Remote host closed the connection)
[08:48:35] *** Joins: MrFantastik (~f@c-73-93-240-190.hsd1.ca.comcast.net)
[08:48:46] *** Quits: malloy (~jimery@116.30.220.175) (Ping timeout: 250 seconds)
[08:50:40] *** Joins: malloy (~jimery@116.30.220.175)
[08:51:10] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[08:51:25] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[08:53:33] *** Joins: noarb (~noarb@user/noarb)
[08:53:43] *** Joins: ripsquid (~ripsquid@user/ripsquid)
[08:54:22] *** Quits: noarb- (~noarb@user/noarb) (Ping timeout: 256 seconds)
[08:54:37] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-5869-268c-a8ec-cf14.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[08:54:58] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[08:55:10] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[08:55:10] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[08:55:10] *** Joins: wroathe (~wroathe@user/wroathe)
[08:56:24] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[08:59:53] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[09:04:26] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[09:06:16] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 256 seconds)
[09:10:08] *** Quits: puke (~puke@user/puke) ()
[09:11:43] *** Joins: hiovoltage (~hiovoltag@78.186.68.182)
[09:18:11] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[09:18:44] *** Quits: steve__ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 256 seconds)
[09:19:21] *** Joins: slidercrank (~slidercra@user/slidercrank)
[09:21:24] *** Quits: soapsudsxx (~soapsudsx@141.193.188.151) (Remote host closed the connection)
[09:22:18] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[09:25:23] *** Quits: MrFantastik (~f@c-73-93-240-190.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[09:29:29] *** Parts: hoho (hoho@user/hoho) ()
[09:29:30] *** Joins: vysn (~vysn@user/vysn)
[09:30:01] *** Parts: gtlsgamr (~gtlsgamr@user/gtlsgamr) ()
[09:30:07] *** Joins: hanzo (uid532183@user/hanzo)
[09:33:38] *** Joins: mali (~malina@user/malina)
[09:34:55] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[09:36:37] *** Quits: malina (~malina@user/malina) (Ping timeout: 240 seconds)
[09:37:10] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[09:38:25] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[09:40:21] *** Quits: Trashlord (~trash@user/trashlord) (Quit: ZNC 1.8.2 - https://znc.in)
[09:42:05] *** Joins: Trashlord (~trash@user/trashlord)
[09:46:43] *** Joins: puke (~puke@user/puke)
[09:49:33] *** Joins: frost (~frost@user/frost)
[09:52:35] *** Quits: mali (~malina@user/malina) (Ping timeout: 256 seconds)
[09:52:45] *** Joins: frytaped (~frytaped@user/go4godvin)
[09:55:01] *** Quits: mikoto-chan (~mikoto-ch@185.25.79.189) (Ping timeout: 240 seconds)
[10:00:09] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[10:00:36] *** Joins: tejr (~tejr@user/tejr)
[10:01:01] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Ping timeout: 240 seconds)
[10:03:22] *** Joins: duuude (~user@user/duuude)
[10:06:17] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-2-19.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[10:08:18] *** Joins: badsektor (~badsektor@user/badsektor)
[10:10:18] *** Quits: constxd_ (~brad@142.134.38.68) (Ping timeout: 256 seconds)
[10:15:11] *** Joins: AmR (~AmREiSa@156.207.253.69)
[10:15:16] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Quit: Leaving)
[10:15:56] *** Quits: badsektor (~badsektor@user/badsektor) (Quit: Leaving...)
[10:18:05] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:23:48] *** Joins: constxd_ (~brad@142.134.38.68)
[10:26:35] *** Quits: somlis (~somlis@user/somlis) (Ping timeout: 256 seconds)
[10:29:49] *** Quits: Fairy (~Fairy@2001:464a:4992:0:fddd:e672:32ce:4073) (Ping timeout: 240 seconds)
[10:35:05] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (Ping timeout: 256 seconds)
[10:37:37] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[10:39:39] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[10:40:37] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[10:45:15] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[10:49:30] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[10:49:42] *** Joins: tejr (~tejr@user/tejr)
[10:50:55] *** Joins: wangx0x01n (~wangx0x01@39.152.175.67)
[10:52:31] *** Joins: inomoz (~inomoz@176.59.106.192)
[10:52:46] <wangx0x01n> hello everyone
[10:54:14] <sham1> Hello
[10:54:57] <wangx0x01n> I'm a newcomer in irc!
[10:55:14] <wangx0x01n> For studying
[10:57:16] *** Joins: yangby (~secret@115.199.105.217)
[10:57:42] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[10:58:18] <pnbeast> wangx0x01n, this channel has a bot.  It can even play games.  Do you want to see?
[10:58:49] <wangx0x01n> hahaha ok
[11:00:20] <pnbeast> wangx0x01n, to trigger the bot, you type a command that it understands after a specific character.  For example, type ",roulette" to play roulette.
[11:00:37] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 240 seconds)
[11:01:47] *** Quits: frytaped (~frytaped@user/go4godvin) (Quit: frytaped)
[11:02:23] *** Joins: jusski (~user@78-63-85-123.static.zebra.lt)
[11:02:47] *** Joins: jaggz (~jaggz@user/jaggz)
[11:03:11] *** Quits: wangx0x01n (~wangx0x01@39.152.175.67) (Quit: Leaving)
[11:03:16] <dave0> ,roulette
[11:03:17] <candide> dave0: *click*
[11:03:38] <dave0> i think it's russian roulette
[11:03:46] <pnbeast> What makes you think that?
[11:04:11] <dave0> the gun went *click*
[11:04:22] <pnbeast> Gun?  It's just a bot.
[11:04:28] <pnbeast> Do it again.
[11:04:32] <yangby> ,roulette
[11:04:32] <candide> yangby: *click*
[11:04:32] <dave0> ,roulette
[11:04:33] <candide> dave0: *click*
[11:04:35] <sham1> The bot can have an integrated gun
[11:04:51] <dave0> $1 on red
[11:04:53] <dave0> ,roulette
[11:04:53] <candide> dave0: *click*
[11:04:55] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[11:05:09] <pnbeast> What's that mean?  Integrated gun?  This is IRC and it's just a bot.
[11:05:17] <sham1> Yes
[11:05:30] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[11:05:33] <dave0> what do i win?
[11:05:57] <pnbeast> For someone to win, you have to play more.
[11:07:24] *** Joins: mikoto-chan (~mikoto-ch@95.214.66.65)
[11:08:02] <sham1> ,roulette
[11:08:02] <candide> sham1: *click*
[11:08:06] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[11:08:18] <yangby> ,roulette
[11:08:18] <candide> yangby: *click*
[11:08:20] <pnbeast> You guys aren't very good at this.
[11:08:23] <dave0> it's not much of a game
[11:08:31] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[11:08:35] <nitrix> You guys know better than being noisy on the channel, c'mon.
[11:08:51] <pnbeast> nitrix is scared to play roulette.  He always has been.
[11:09:10] <dave0> i think we woke him
[11:09:19] <nitrix> Yep, 2:39am.
[11:10:14] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[11:10:57] <pnbeast> ,roulette
[11:10:58] *** ChanServ sets mode: +o candide
[11:10:58] *** pnbeast was kicked by candide (*BANG!*)
[11:11:15] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[11:11:16] <sham1> As I said, integrated gun
[11:14:20] *** Quits: etolier (~somewhere@122.199.46.54) (Ping timeout: 256 seconds)
[11:17:01] *** Quits: mikoto-chan (~mikoto-ch@95.214.66.65) (Ping timeout: 256 seconds)
[11:17:19] *** Joins: etolier (~somewhere@122.199.46.54)
[11:17:24] *** Joins: mikoto-chan (~mikoto-ch@95.214.66.65)
[11:17:32] *** Joins: frost (~frost@user/frost)
[11:17:37] *** Joins: mrig (~mrig@user/mrig)
[11:17:46] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[11:21:45] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[11:21:51] *** Joins: Akiva (~Akiva@user/Akiva)
[11:23:39] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[11:23:49] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[11:25:47] *** Quits: yangby (~secret@115.199.105.217) (Quit: Go out for a walk and buy a drink.)
[11:26:05] *** Joins: imm_ (~imm_@user/imm/x-3405860)
[11:27:57] *** Quits: constxd_ (~brad@142.134.38.68) (Ping timeout: 240 seconds)
[11:30:09] *** Quits: hinata (~hinata@2409:4042:d98:f536:2cc6:57e0:8b7e:83d8) (Quit: Leaving)
[11:30:34] *** Joins: aradesh (~aradesh@user/aradesh)
[11:31:48] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[11:33:36] *** Quits: mikoto-chan (~mikoto-ch@95.214.66.65) (Ping timeout: 256 seconds)
[11:33:48] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[11:34:50] *** Joins: AmR| (~AmREiSa@41.36.185.103)
[11:35:06] *** Joins: mikoto-chan (~mikoto-ch@95.214.66.65)
[11:35:09] *** Quits: AmR (~AmREiSa@156.207.253.69) (Ping timeout: 256 seconds)
[11:38:38] *** Joins: pizdets_ (~pizdets@183.182.115.239)
[11:38:43] *** Quits: pizdets (~pizdets@183.182.115.239) (Read error: Connection reset by peer)
[11:48:55] *** Joins: Rounin (~david@84.212.130.215)
[11:53:10] *** Joins: loganlee (~Thunderbi@user/loganlee)
[11:54:13] *** Joins: dsdolzhenko (~dsdolzhen@2a02:a210:fa3:b980:3124:c023:5923:acaf)
[11:56:32] *** Quits: loganlee (~Thunderbi@user/loganlee) (Client Quit)
[11:56:37] *** Quits: liba (~liba@user/liba) (Ping timeout: 240 seconds)
[11:58:20] *** Joins: dsdolzhenko_ (~dsdolzhen@ip-213-127-111-129.ip.prioritytelecom.net)
[11:59:44] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[11:59:49] *** Quits: dsdolzhenko (~dsdolzhen@2a02:a210:fa3:b980:3124:c023:5923:acaf) (Ping timeout: 240 seconds)
[11:59:52] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[12:00:35] *** Joins: MajorBiscuit (~MajorBisc@c-001-007-038.client.tudelft.eduvpn.nl)
[12:01:04] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[12:01:05] *** Joins: adip (~adip@user-188-33-250-10.play-internet.pl)
[12:01:42] *** Quits: rgrinberg (~textual@187.223.71.231) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:02:30] *** Joins: lleo (~leo@31-161-205-115.mobile.kpn.net)
[12:02:32] *** Joins: leo__ (~leo@31-161-205-115.mobile.kpn.net)
[12:03:43] <AmR|> Can I check if struct defined or not ?
[12:03:59] *** AmR| is now known as AmR
[12:05:09] *** Joins: pucara (~i@host230.186-125-94.telecom.net.ar)
[12:05:20] *** Quits: NEYi (~NEYi@109.251.216.38) (Ping timeout: 256 seconds)
[12:05:28] *** Joins: xqt (~xqt@user/xqt)
[12:10:20] *** Joins: iomari891 (~iomari891@102.91.5.198)
[12:12:53] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[12:14:26] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[12:14:31] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273)
[12:14:46] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[12:16:21] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[12:18:12] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 268 seconds)
[12:18:15] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273) (Client Quit)
[12:19:48] *** Joins: xqt (~xqt@user/xqt)
[12:19:55] <dave0> AmR: nope? compiler will complain if you haven't declared it
[12:20:15] <dave0> AmR: are you using a library?
[12:20:56] <dave0> are you using some build tool like cmake or gnu configure?
[12:21:20] <dave0> maybe they can detect if a struct has been defined
[12:22:00] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc)
[12:27:31] *** Joins: Fairy (~Fairy@2001:464a:4992:0:fddd:e672:32ce:4073)
[12:30:09] *** Quits: surgeon[m] (~surge9nma@2001:470:69fc:105::f585) (Quit: You have been kicked for being idle)
[12:30:57] *** Quits: iomari891 (~iomari891@102.91.5.198) (Ping timeout: 240 seconds)
[12:31:51] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[12:32:47] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Remote host closed the connection)
[12:33:17] *** Quits: fe23 (~fe23@2409:8a34:464:4990:582:c21a:6d9d:c286) (Ping timeout: 240 seconds)
[12:35:01] *** Joins: kriss (~kriss@213.239.83.90)
[12:35:21] *** Joins: iomari891 (~iomari891@197.210.71.172)
[12:35:22] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[12:43:48] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:44:34] *** Quits: dsdolzhenko_ (~dsdolzhen@ip-213-127-111-129.ip.prioritytelecom.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:45:13] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:46:49] *** Joins: freep (~freepppp@62.1.174.38.dsl.dyn.forthnet.gr)
[12:48:24] *** Quits: mikoto-chan (~mikoto-ch@95.214.66.65) (Ping timeout: 256 seconds)
[12:49:24] *** Quits: kriss (~kriss@213.239.83.90) (Remote host closed the connection)
[12:51:54] *** Joins: plastico (~plastico@neomutt/plastico)
[12:53:10] *** Quits: freep (~freepppp@62.1.174.38.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[12:53:31] *** Joins: kriss (~kriss@213.239.83.90)
[12:57:05] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[12:58:06] *** Joins: rcoote (~rcoote@2a02:908:690:a140:e79c:da85:5a01:9cdc)
[13:00:45] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[13:00:52] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[13:03:49] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[13:05:11] *** Joins: freep (~freepppp@62.1.174.38.dsl.dyn.forthnet.gr)
[13:05:24] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[13:06:20] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[13:07:06] *** Joins: NEYi (~NEYi@109.251.216.38)
[13:08:01] *** Quits: Senicar (~Senicar@gateway/tor-sasl/senicar) (Remote host closed the connection)
[13:08:30] *** Joins: Senicar (~Senicar@gateway/tor-sasl/senicar)
[13:09:08] *** Joins: dsdolzhenko (~dsdolzhen@2a02:a210:fa3:b980:ed97:d5f:3e36:f734)
[13:11:04] *** candide sets mode: -o candide
[13:11:57] *** Quits: oxfuxxx (~oxfuxxx@160.238.38.154) (Ping timeout: 240 seconds)
[13:12:33] *** Quits: trafficjam (~qubes@118.127.126.178) (Quit: trafficjam)
[13:14:21] *** Quits: pucara (~i@host230.186-125-94.telecom.net.ar) (Quit: Lost terminal)
[13:16:13] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[13:19:01] *** Quits: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it) (Ping timeout: 240 seconds)
[13:19:16] *** Quits: high_ground (~yes@user/high-ground/x-5722129) (Ping timeout: 268 seconds)
[13:20:13] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 240 seconds)
[13:22:50] *** Joins: Mentor (~Ionut@92.86.217.127)
[13:23:01] *** Quits: Mentor (~Ionut@92.86.217.127) (Client Quit)
[13:23:20] *** Joins: Mentor (~Ionut@92.86.217.127)
[13:27:14] *** Joins: fe23 (~fe23@2409:8a34:464:4990:582:c21a:6d9d:c286)
[13:28:04] *** Quits: iomari891 (~iomari891@197.210.71.172) (Ping timeout: 256 seconds)
[13:29:11] *** Joins: iomari891 (~iomari891@197.210.70.107)
[13:33:01] *** Quits: dsrt^ (~dsrt@wsip-98-188-246-242.mc.at.cox.net) (Ping timeout: 240 seconds)
[13:34:16] *** RemoteHost is now known as A_Dragon
[13:35:51] *** Quits: iomari891 (~iomari891@197.210.70.107) (Ping timeout: 256 seconds)
[13:36:09] *** Quits: Cyp (~cyp@213.237.85.9) (Remote host closed the connection)
[13:36:33] *** Joins: Cyp (~cyp@213.237.85.9)
[13:37:29] <AmR> dave0: I try build app have same def as winapi
[13:39:26] *** Quits: Cyp (~cyp@213.237.85.9) (Read error: Connection reset by peer)
[13:40:02] *** Joins: maroloccio (~marolocci@151.75.59.229)
[13:41:01] *** Quits: n8chan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Read error: Connection reset by peer)
[13:41:16] <dave0> sorry i dont know windows
[13:41:28] *** Joins: Cyp (~cyp@213.237.85.9)
[13:42:03] *** Joins: n8chan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[13:46:03] *** Quits: Cyp (~cyp@213.237.85.9) (Read error: Connection reset by peer)
[13:46:05] *** Quits: lleo (~leo@31-161-205-115.mobile.kpn.net) (Quit: beyond time space in laws)
[13:46:05] *** Quits: leo__ (~leo@31-161-205-115.mobile.kpn.net) (Quit: beyond time space in laws)
[13:47:38] *** Joins: Cyp (~cyp@213.237.85.9)
[13:50:49] *** Joins: shivesh (~shivesh@user/shivesh)
[13:52:17] *** Joins: mikoto-chan (~mikoto-ch@91-157-120-246.elisa-laajakaista.fi)
[13:55:23] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:4f29:e68c:50c9:fe2)
[13:57:48] *** Joins: frost (~frost@user/frost)
[14:00:38] *** Joins: jhms (~i.am@user/marlboro)
[14:00:48] *** Joins: iomari891 (~iomari891@197.210.71.172)
[14:02:29] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[14:04:35] *** Quits: g2anj (~v@58.228.230.4) (Quit: .)
[14:05:28] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[14:06:56] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:07:01] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:07:05] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[14:07:07] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[14:08:16] *** Lord_of_Life_ is now known as Lord_of_Life
[14:09:21] *** Quits: nicholaus04 (~nicholaus@2607:fb90:e589:e2b9:d5ee:56de:0:7ca) (Quit: WeeChat 3.4)
[14:09:33] *** Quits: Cyp (~cyp@213.237.85.9) (Excess Flood)
[14:10:05] *** Joins: Cyp (~cyp@213.237.85.9)
[14:10:19] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[14:10:37] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 240 seconds)
[14:12:31] *** Joins: frost (~frost@user/frost)
[14:12:34] *** Joins: high_ground (~high_grou@user/high-ground/x-5722129)
[14:13:43] *** Joins: nicholaus04 (~nicholaus@2607:fb90:e589:e2b9:d5ee:56de:0:7ca)
[14:18:30] *** Quits: puke (~puke@user/puke) (Ping timeout: 256 seconds)
[14:18:59] *** Joins: g2anj (~v@58.228.230.4)
[14:23:01] *** Joins: terminalpusher (~terminalp@2a01:586:946:1:67a:7d5f:5461:5559)
[14:25:43] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[14:25:58] *** Joins: WAR10CK (~WAR10CK@219.135.62.144)
[14:28:42] *** Quits: iomari891 (~iomari891@197.210.71.172) (Ping timeout: 256 seconds)
[14:29:01] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 240 seconds)
[14:30:13] *** Quits: Fairy (~Fairy@2001:464a:4992:0:fddd:e672:32ce:4073) (Ping timeout: 240 seconds)
[14:31:48] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[14:32:05] *** Joins: frost (~frost@user/frost)
[14:32:27] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:33:12] *** Joins: csrf (~csrf@user/csrf)
[14:33:20] *** Joins: stonkey (~stonkey@user/stonkey)
[14:33:32] *** Joins: agonhajdari (~textual@user/agonhajdari)
[14:34:43] *** Quits: agonhajdari (~textual@user/agonhajdari) (Client Quit)
[14:35:37] *** Quits: JanC (~janc@user/janc) (Ping timeout: 240 seconds)
[14:35:48] *** Quits: maroloccio (~marolocci@151.75.59.229) (Quit: WeeChat 3.0)
[14:36:44] *** Quits: high_ground (~high_grou@user/high-ground/x-5722129) (Quit: Left)
[14:38:06] *** Joins: high_ground (~high_grou@user/high-ground/x-5722129)
[14:38:39] *** Joins: malina (~malina@user/malina)
[14:40:17] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293) (Ping timeout: 240 seconds)
[14:44:52] *** Joins: Satin (uid193953@user/Seten)
[14:44:59] *** Quits: WAR10CK (~WAR10CK@219.135.62.144) (Ping timeout: 256 seconds)
[14:46:48] *** Joins: gproto23 (~gproto23@user/gproto23)
[14:48:03] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[14:53:12] *** Joins: puke (~puke@user/puke)
[14:53:18] *** Quits: pieguy12- (~pieguy128@bras-base-mtrlpq5031w-grc-48-67-70-102-17.dsl.bell.ca) (Ping timeout: 260 seconds)
[14:53:37] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[14:56:19] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[14:56:53] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[14:57:45] *** robyndrake is now known as robyn
[14:58:30] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[15:00:29] *** Joins: Burgundy (~yomon@82.76.72.88)
[15:02:42] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Remote host closed the connection)
[15:03:05] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[15:03:31] *** Joins: pucara (~i@host230.186-125-94.telecom.net.ar)
[15:09:20] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:10:28] *** Quits: Lazenca (~lazenca@user/lazenca) (Remote host closed the connection)
[15:11:56] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[15:17:16] *** Joins: frost (~frost@user/frost)
[15:17:17] *** Quits: robyn (~robyndrak@user/robyndrake) (Quit: WeeChat 3.4)
[15:17:30] *** Joins: agonhajdari (~textual@user/agonhajdari)
[15:19:00] *** Joins: liba (~liba@user/liba)
[15:21:17] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc)
[15:21:52] *** Joins: BCMM (~BCMM@user/bcmm)
[15:21:58] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[15:25:37] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[15:29:37] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[15:32:54] *** Joins: xqt (~xqt@user/xqt)
[15:34:51] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 256 seconds)
[15:35:38] *** Joins: kts (~kts@103.73.237.149)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:19] *** Quits: echoSMILE (uid504326@user/echosmile) (Quit: Connection closed for inactivity)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:38:10] *** Quits: malina (~malina@user/malina) (Quit: malina)
[15:39:51] *** Quits: rcoote (~rcoote@2a02:908:690:a140:e79c:da85:5a01:9cdc) (Quit: Konversation terminated!)
[15:41:41] *** Joins: juliopcrj (~juliopcrj@177.44.227.40)
[15:44:17] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 240 seconds)
[15:47:15] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[15:48:52] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:49:07] *** Joins: kit-ten (~u0_a391@2600:380:a417:4988:a0ad:2a9c:1eef:118e)
[15:52:37] *** Quits: kit_ten (~u0_a391@cpe-76-190-178-139.neo.res.rr.com) (Ping timeout: 240 seconds)
[15:56:31] *** Joins: robyndrake (~robyndrak@154.16.118.240)
[15:56:36] *** Quits: robyndrake (~robyndrak@154.16.118.240) (Changing host)
[15:56:36] *** Joins: robyndrake (~robyndrak@user/robyndrake)
[15:58:05] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[16:00:40] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: sdfgsdfg)
[16:02:18] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273)
[16:04:09] *** Joins: iomari891 (~iomari891@105.112.138.38)
[16:04:47] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273) (Client Quit)
[16:05:35] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[16:05:56] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[16:06:56] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[16:10:27] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[16:12:00] *** Quits: mikoto-chan (~mikoto-ch@91-157-120-246.elisa-laajakaista.fi) (Quit: mikoto-chan)
[16:13:02] *** Joins: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com)
[16:17:01] *** Quits: pucara (~i@host230.186-125-94.telecom.net.ar) (Ping timeout: 240 seconds)
[16:17:25] *** Quits: terminalpusher (~terminalp@2a01:586:946:1:67a:7d5f:5461:5559) (Remote host closed the connection)
[16:17:52] *** Joins: random-nick (~random-ni@87.116.167.125)
[16:18:40] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:22:57] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[16:23:03] *** Joins: somlis (~somlis@user/somlis)
[16:23:32] *** Joins: tech_exorcist_ (txrcst@user/tech-exorcist/x-0447479)
[16:24:52] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Ping timeout: 256 seconds)
[16:25:05] *** Joins: iomari891 (~iomari891@105.112.138.38)
[16:25:37] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:26:34] *** Quits: jusski (~user@78-63-85-123.static.zebra.lt) (Ping timeout: 256 seconds)
[16:27:03] *** Joins: Fairy (~Fairy@2001:464a:4992:0:fddd:e672:32ce:4073)
[16:27:10] *** Quits: kts (~kts@103.73.237.149) (Quit: Konversation terminated!)
[16:28:50] *** Quits: ripsquid (~ripsquid@user/ripsquid) (Ping timeout: 256 seconds)
[16:30:01] *** Joins: lisbeths (~user@c-73-83-140-133.hsd1.wa.comcast.net)
[16:30:02] *** Joins: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[16:37:51] *** Joins: frost (~frost@user/frost)
[16:38:39] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273)
[16:40:10] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[16:41:08] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273) (Client Quit)
[16:41:23] *** Joins: nowz (~nowz@194.136.126.35)
[16:41:24] *** Quits: nowz (~nowz@194.136.126.35) (Changing host)
[16:41:24] *** Joins: nowz (~nowz@user/nowz)
[16:41:51] *** Joins: iomari891 (~iomari891@105.112.138.38)
[16:43:08] *** Quits: acerbic (~acerbic@cs-xdata-50-86-55-135.cspire.com) (Read error: Connection reset by peer)
[16:46:53] *** Joins: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by)
[16:47:34] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[16:48:05] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[16:48:12] *** Joins: Everything (~Everythin@37.115.210.35)
[16:48:27] <lisbeths> I think in the future just as free software has taken over the application space that free software will take over the webserver space with blockchain
[16:48:48] <lisbeths> Why would anyone use a website where the code on their service can't be audited. I can't see why
[16:49:12] <sham1> Because people don't care
[16:49:16] <lisbeths> oops wrong channel my friend
[16:49:17] <sham1> And why would they
[16:50:22] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[16:56:36] *** Joins: manjaroi3 (~manjaro-i@125.131.131.26)
[16:57:27] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) ()
[16:59:29] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:00:42] <BtbN> lol whatr
[17:00:58] *** Joins: acerbic (~acerbic@cs-xdata-50-86-55-135.cspire.com)
[17:00:59] *** Quits: dcreator (~kjell@208.92-221-37.customer.lyse.net) (Ping timeout: 256 seconds)
[17:02:11] *** robyndrake is now known as robyn
[17:02:30] *** Joins: sathylias (~sysadmin@modemcable136.173-130-66.mc.videotron.ca)
[17:06:04] <shiroyasha> Blockchain doesn't imply a publicly-accessible distributed ledger though.
[17:06:40] * shiroyasha shrugs
[17:07:00] *** Quits: tech_exorcist_ (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[17:07:03] * supakeen handwaves
[17:07:27] *** Joins: constxd_ (~brad@142.134.38.68)
[17:09:00] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[17:10:05] <markand> people who don't want to use a website because non opensource javascript (or html or css) code surely have nothing else to do in their lives
[17:11:20] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 256 seconds)
[17:11:41] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273)
[17:11:53] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[17:11:58] *** Parts: lisbeths (~user@c-73-83-140-133.hsd1.wa.comcast.net) (ERC (IRC client for Emacs 26.3))
[17:14:02] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273) (Client Quit)
[17:14:50] *** Joins: xqt (~xqt@user/xqt)
[17:16:48] <duuude> Open-source or not, web sucks
[17:17:50] <omegatron> a very intelligent comment ...  I can understand, when people don't like obfuscated javascript, fearing it might contain cryptominers, malware or whatever malice ; sure, if they don't want to take the risk, they shouldn't visit such websites. on the other hand, any company or human can decide for themselves, what kind of html, css, javascript they deliver on their website - open-source or not
[17:19:33] <omegatron> besides, some people seem to think, just because something (like javascript you have written by hand, not using any jquery or whatever framework) is available as human-readable source code in their browser, they could use it freely - no they cannot, it's still copyrighted by the author, unless otherwise stated
[17:20:36] *** Joins: kts (~kts@103.73.237.124)
[17:20:51] <omegatron> of course no one will actually sue anyone, because proving such a "theft" is nearly impossible - anyone would say  "i was inspirated by it" .. but I can live with that
[17:21:25] *** Quits: anon16_ (~anon16_@user/anon16) (Ping timeout: 240 seconds)
[17:21:26] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273)
[17:24:21] *** Joins: iomari891 (~iomari891@105.112.138.38)
[17:24:48] *** Joins: kurahaupo_ (~kurahaupo@pa49-197-129-192.pa.qld.optusnet.com.au)
[17:26:38] *** Joins: dsrt^ (~dsrt@wsip-98-188-246-242.mc.at.cox.net)
[17:27:55] <dacav> I'm wondering how it is possible: everyone says that the web sucks!  Could it be because it actually sucks?  Stupid web!
[17:27:58] <dacav> cheers
[17:28:45] <omegatron> hm, I see the www as a mirror of humanity itself, with all its beauty and evil - so, nothing suprising here
[17:28:50] *** Joins: polyrob_ (~rob@user/polyrob)
[17:29:53] *** Quits: polyrob (~rob@user/polyrob) (Ping timeout: 256 seconds)
[17:29:55] *** polyrob_ is now known as polyrob
[17:30:33] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:31:30] *** Joins: nyah (~nyah@94.6.71.219)
[17:32:08] *** Joins: pucara (~i@host230.186-125-94.telecom.net.ar)
[17:37:35] *** Joins: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273)
[17:38:35] <liba> Does this channel ever actually talk about c? so far I've seen a game of roulette and now web3 blockchain.
[17:38:38] *** Quits: sathylias (~sysadmin@modemcable136.173-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[17:39:06] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Remote host closed the connection)
[17:39:23] <omegatron> sure - state your question!
[17:40:07] *** Quits: peacefulman (~paul@107-190-110-80.cpe.teksavvy.com) (Quit: Leaving)
[17:40:40] *** Joins: strajder (~strajder@user/strajder)
[17:41:13] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[17:41:26] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[17:41:31] *** Joins: iomari891 (~iomari891@105.112.138.38)
[17:41:51] <dave0> i wrote a c program once
[17:42:08] <liba> Thanks for asking, however I think my question is better asked in #cmake. I enjoyed the roulette game.
[17:42:42] <katsuragi> https://termbin.com/h8xl6 My indentation using the % operator isn't working. what's the issue?
[17:43:19] <dave0> you need a second counter
[17:43:37] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:43:56] <fizzie> Multiples of 4 don't tend to be very prime.
[17:44:08] *** Quits: lunix00 (~lunix00@2804:14c:6321:900d:ecd5:589a:62ad:6273) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:44:11] <jaggz> they do for odd values of 4
[17:44:12] <dave0> if(a[i] == 0) { printf("%d ", i); j++; if(j % 4 == 0) putchar('\n'); }
[17:44:40] <katsuragi> ah alright
[17:45:07] *** Joins: sathylias (~sysadmin@modemcable136.173-130-66.mc.videotron.ca)
[17:45:37] <dave0> i like to write it like   if(a[i] == 0) { j++; printf("%d%s", i, (j % 4 == 0 ? "\n" : " ")); }
[17:45:44] <katsuragi> works well now
[17:46:57] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[17:47:10] <katsuragi> '\n' would look good there
[17:47:12] *** Quits: kts (~kts@103.73.237.124) (Quit: Konversation terminated!)
[17:47:35] <jaggz> what was the way of using the index first
[17:47:43] <jaggz> like i[a] .. but that wasn't it
[17:48:07] *** Joins: slidercrank (~slidercra@user/slidercrank)
[17:48:13] <dave0> you mean the  a[b] == b[a] == *(a + b) == *(b + a)  thing?
[17:48:20] <jaggz> or am i thinking of something like *(a+i)
[17:48:26] <fizzie> dave0: printf("%d%c", i, " \n"[j % 4 == 0]);
[17:48:34] <jaggz> where i is upgraded to i*sizeof(a) ?
[17:48:44] <dave0> fizzie: ouch that's ugly
[17:48:57] <dave0> hurts to look at that
[17:49:00] <jaggz> lol fizzie
[17:49:02] <jaggz> kewl
[17:49:53] <jaggz> why would you %s that anyway, dave0
[17:50:07] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:50:12] <dave0> even worse... "\n   "[j % 4]
[17:50:25] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[17:50:33] *** Quits: DonRichie (~DonRichie@ricl.de) (Quit: bye)
[17:50:44] <fizzie> (j&3)["\n   "]
[17:50:51] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 256 seconds)
[17:51:20] <dave0> jaggz: in case they are different lengths.. eg. commas   ? "\n" : ", "
[17:51:59] <jaggz> k.. or crlf
[17:52:25] * jaggz blinks
[17:52:42] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[17:52:49] *** Joins: digilink (~digilink@user/digilink)
[17:53:19] *** Joins: DonRichie (~DonRichie@ricl.de)
[17:53:25] <sham1> CRLF is evil
[17:53:54] *** Quits: Tha_14 (~Tha_14@user/tha-14/x-4134127) (Read error: Connection reset by peer)
[17:53:56] *** Joins: pulse (~pulse@user/pulse)
[17:54:07] <jaggz> printf("%d%c", i, " \n"[!(j&3)]);
[17:54:27] *** Joins: nukedclx (nukedclx@shell.k4be.pl)
[17:54:45] *** Joins: Tha_14 (~Tha_14@user/tha-14/x-4134127)
[17:54:56] *** Joins: iomari891 (~iomari891@105.112.138.38)
[17:55:38] *** Quits: Tha_14 (~Tha_14@user/tha-14/x-4134127) (Read error: Connection reset by peer)
[17:55:46] <sham1> That is most likely UB since you'd be accessing the null byte at 2 mod 4 and after the string on 3 mod 4
[17:56:07] *** Quits: soul-d (~uknown@user/soul-d) (Read error: Connection reset by peer)
[17:56:26] *** Joins: Tha_14 (~Tha_14@user/tha-14/x-4134127)
[17:56:29] <fizzie> You missed the !.
[17:56:34] <sham1> Unless my IRC client is collapsing the spaces in such a way that I can't see them
[17:56:37] *** Quits: constxd_ (~brad@142.134.38.68) (Ping timeout: 240 seconds)
[17:56:37] <jaggz> hm?
[17:56:38] <sham1> Oh yes I did
[17:56:44] <sham1> Nothing
[17:56:46] <jaggz> :)
[17:57:05] <sham1> I just missed the logical NOT
[17:57:21] *** Quits: juliopcrj (~juliopcrj@177.44.227.40) (Quit: Leaving)
[17:57:23] <jaggz> dave0, btw, yeah, the a[b] == b[a] == .... thing
[17:57:32] <jaggz> what's that called
[17:57:39] <dave0> pointer arithmetic
[17:58:19] <dave0> *(a + b)  the plus is not exactly like adding regular numbers
[17:58:54] *** Joins: WAR10CK (~WAR10CK@219.135.62.144)
[17:59:07] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[17:59:11] <sham1> It's not even a ring
[17:59:52] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:00:49] <omegatron> more like penrose stairs  =D
[18:01:35] *** Quits: WAR10CK (~WAR10CK@219.135.62.144) (Remote host closed the connection)
[18:03:00] *** Quits: Tha_14 (~Tha_14@user/tha-14/x-4134127) (Read error: Connection reset by peer)
[18:03:47] *** Joins: kts (~kts@103.73.237.124)
[18:04:01] *** Joins: Tha_14 (~Tha_14@user/tha-14/x-4134127)
[18:04:09] *** homura is now known as pamela22
[18:04:15] *** Joins: etolier_ (~somewhere@122.199.45.244)
[18:04:53] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[18:05:18] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.3)
[18:05:37] *** Quits: etolier (~somewhere@122.199.46.54) (Ping timeout: 240 seconds)
[18:06:38] *** Joins: bebyx (~Thunderbi@user/bebyx)
[18:07:52] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:07:52] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:07:52] *** Joins: wroathe (~wroathe@user/wroathe)
[18:07:57] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[18:09:10] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[18:09:20] *** Quits: pucara (~i@host230.186-125-94.telecom.net.ar) (Quit: Lost terminal)
[18:10:11] *** Quits: xse (~xse@user/xse) (Remote host closed the connection)
[18:10:14] *** Joins: iomari891 (~iomari891@105.112.138.38)
[18:11:49] *** Quits: kit-ten (~u0_a391@2600:380:a417:4988:a0ad:2a9c:1eef:118e) (Ping timeout: 240 seconds)
[18:12:18] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[18:12:21] *** Joins: kit-ten (~u0_a391@2600:380:a417:4988:a0ad:2a9c:1eef:118e)
[18:13:32] *** Joins: mrig_ (~mrig@lfbn-mar-1-947-62.w90-73.abo.wanadoo.fr)
[18:14:33] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-5869-268c-a8ec-cf14.res6.spectrum.com)
[18:16:36] *** Joins: xse (~xse@user/xse)
[18:16:57] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 240 seconds)
[18:17:06] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 268 seconds)
[18:18:18] *** Quits: Furai (~Furai@furai.pl) (Quit: WeeChat 3.4)
[18:20:19] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[18:20:20] *** Joins: johnnythunder (~John@97.119.158.99)
[18:20:28] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[18:20:31] *** Joins: BobTheTomato (~paul@107-190-110-80.cpe.teksavvy.com)
[18:20:46] *** Joins: iomari891 (~iomari891@105.112.138.38)
[18:20:55] *** Joins: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu)
[18:21:17] *** Joins: Furai (~Furai@furai.pl)
[18:22:21] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[18:24:02] *** Quits: BobTheTomato (~paul@107-190-110-80.cpe.teksavvy.com) (Client Quit)
[18:24:47] *** Joins: BobTheTomato (~paul@107-190-110-80.cpe.teksavvy.com)
[18:24:57] *** Joins: Inline (~Inline@aftr-37-201-240-204.unity-media.net)
[18:26:18] *** Quits: BobTheTomato (~paul@107-190-110-80.cpe.teksavvy.com) (Client Quit)
[18:26:49] *** Joins: BobTheTomato (~paul@107-190-110-80.cpe.teksavvy.com)
[18:27:17] *** Quits: BobTheTomato (~paul@107-190-110-80.cpe.teksavvy.com) (Client Quit)
[18:27:52] *** Joins: BobTheTomato (~paul@107-190-110-80.cpe.teksavvy.com)
[18:28:22] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (Client Quit)
[18:28:31] *** Quits: BobTheTomato (~paul@107-190-110-80.cpe.teksavvy.com) (Client Quit)
[18:29:25] *** Quits: Fairy (~Fairy@2001:464a:4992:0:fddd:e672:32ce:4073) (Ping timeout: 240 seconds)
[18:30:00] *** Joins: Inline (~Inline@aftr-37-201-240-204.unity-media.net)
[18:30:01] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[18:30:37] *** Quits: adip (~adip@user-188-33-250-10.play-internet.pl) (Ping timeout: 240 seconds)
[18:30:46] *** Joins: BobTheTomato (~paul@107-190-110-80.cpe.teksavvy.com)
[18:31:02] *** Quits: hiovoltage (~hiovoltag@78.186.68.182) (Quit: Client closed)
[18:32:49] *** Quits: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[18:33:30] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[18:33:40] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:4ee:a69c:d91a:66fb)
[18:33:40] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:4ee:a69c:d91a:66fb) (Changing host)
[18:33:40] *** Joins: skapata (~Skapata@user/skapata)
[18:35:00] *** Joins: iomari891 (~iomari891@105.112.138.38)
[18:35:03] *** Joins: Hibana_ (~zsoltiv@fibhost-67-12-35.fibernet.hu)
[18:35:12] *** Quits: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu) (Ping timeout: 256 seconds)
[18:35:28] *** Hibana_ is now known as Guest8357
[18:36:23] *** Guest8357 is now known as zsoltiv_
[18:37:25] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[18:37:28] *** Quits: Tha_14 (~Tha_14@user/tha-14/x-4134127) (Ping timeout: 256 seconds)
[18:39:01] *** Parts: johnnythunder (~John@97.119.158.99) (Leaving)
[18:40:12] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[18:41:07] *** Joins: Viewday119 (~Viewday@user/viewday)
[18:41:46] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[18:42:05] *** Quits: kts (~kts@103.73.237.124) (Quit: Konversation terminated!)
[18:42:26] *** Joins: kts (~kts@103.73.237.124)
[18:42:37] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[18:43:08] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[18:43:21] *** Joins: iomari891 (~iomari891@105.112.138.38)
[18:43:43] *** Joins: rgrinberg (~textual@2806:101e:7:445d:e1a3:1c4d:1ca5:ce95)
[18:43:50] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[18:44:29] *** Quits: mrig_ (~mrig@lfbn-mar-1-947-62.w90-73.abo.wanadoo.fr) (Changing host)
[18:44:29] *** Joins: mrig_ (~mrig@user/mrig)
[18:44:29] *** mrig_ is now known as mrig
[18:45:09] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[18:45:16] *** Joins: soul-d (~uknown@user/soul-d)
[18:45:17] *** Quits: kit-ten (~u0_a391@2600:380:a417:4988:a0ad:2a9c:1eef:118e) (Ping timeout: 240 seconds)
[18:45:28] *** Joins: Viewday11 (~Viewday@user/viewday)
[18:45:54] *** Quits: Viewday119 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[18:46:26] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:46:27] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:46:27] *** Joins: wroathe (~wroathe@user/wroathe)
[18:49:40] *** Joins: kit-ten (~u0_a391@2600:380:a417:4988:a0ad:2a9c:1eef:118e)
[18:51:04] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:51:20] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc)
[18:51:46] *** Joins: LucaTM (~LucaTM@user/lucatm)
[18:57:37] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[18:57:52] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[18:59:59] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:01:55] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[19:06:21] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.3)
[19:09:52] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:2d06:fff0:d105:7c1)
[19:11:52] *** Joins: seninha (~seninha@user/seninha)
[19:12:01] *** Joins: Macuser (~Macuser@2600:1003:b452:df5e:5021:f436:9c8b:5247)
[19:12:48] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[19:13:18] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[19:19:09] <AmR> How I can convert string date to time_t ?
[19:19:48] <omegatron> man strptime
[19:20:37] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[19:20:37] *** Quits: jfsimon1981 (~jfsimon19@2.65.136.88.rev.sfr.net) (Ping timeout: 240 seconds)
[19:20:49] *** Joins: moog (~moog@107.126.53.135)
[19:21:21] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Remote host closed the connection)
[19:22:18] <AmR> omegatron: Is that POSIX or STD C ?
[19:22:38] <omegatron> I don't know, I don't care
[19:22:59] <omegatron> the man page might tell you
[19:23:21] *** Joins: WAR10CK (~WAR10CK@219.135.62.144)
[19:23:49] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[19:23:52] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[19:24:53] <sham1> It's POSIX
[19:25:31] <fizzie> For standard C, for converting a calendar time to `time_t`, you'd need to decompose the string any way you prefer (sscanf, various str* functions), use the results to fill in a `struct tm`, and call mktime (which is stuck to "local time" only).
[19:25:57] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a98c:b4fd:85b3:2536) (Quit: Quit)
[19:25:58] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:28:31] <fizzie> ,cc char *s = "2021-01-11 15:56:11"; int y, m, d, hh, mm, ss; if (sscanf(s, "%d-%d-%d %d:%d:%d", &y, &m, &d, &hh, &mm, &ss) == 6) { struct tm tm = { .tm_year = y-1900, .tm_mon = m-1, .tm_mday = d, .tm_hour = hh, .tm_min = mm, .tm_sec = ss }; time_t t = mktime(&tm); puts(ctime(&t)); } // and so on
[19:28:34] <candide> fizzie: Mon Jan 11 15:56:11 2021
[19:28:49] *** Joins: jusski (~user@78-63-85-123.static.zebra.lt)
[19:29:14] *** Joins: nvmd (~nvmd@user/nvmd)
[19:30:26] *** Quits: M101donutman[m] (~M101donut@2001:470:69fc:105::d51) (Quit: You have been kicked for being idle)
[19:34:13] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[19:34:54] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:36:04] *** Joins: jfsimon1981 (~jfsimon19@2.65.136.88.rev.sfr.net)
[19:38:05] *** Joins: Ionut_ (~Ionut@92.86.217.127)
[19:38:48] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (Quit: The Lounge - https://thelounge.chat)
[19:39:25] *** Quits: Mentor (~Ionut@92.86.217.127) (Ping timeout: 240 seconds)
[19:39:47] *** Joins: MrFantastik (~f@176.108.141.162)
[19:39:59] *** Parts: jaggz (~jaggz@user/jaggz) (Leaving)
[19:42:30] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-46-67-70-100-227.dsl.bell.ca)
[19:42:42] *** Joins: reedrichards (~f@176.108.141.162)
[19:43:28] *** Quits: ckdCreations (~ckdCreati@147.55.133.138) (Read error: Connection reset by peer)
[19:43:44] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[19:44:34] <AmR> fizzie: Thanks
[19:44:54] *** Quits: MrFantastik (~f@176.108.141.162) (Ping timeout: 256 seconds)
[19:47:37] *** Joins: sunny93 (~sunny93@wireguard/tunneler/sunny93)
[19:48:18] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[19:48:48] *** Joins: johnjaye (~pi@154.6.152.74)
[19:49:17] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-46-67-70-100-227.dsl.bell.ca) (Ping timeout: 256 seconds)
[19:49:25] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[19:50:24] *** Joins: smoke (~smoke@user/smoke)
[19:51:32] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:51:37] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (Client Quit)
[19:51:49] *** Quits: liba (~liba@user/liba) (Ping timeout: 240 seconds)
[19:52:09] *** Quits: smoke (~smoke@user/smoke) (Client Quit)
[19:52:14] *** Joins: sunny93 (~sunny93@wireguard/tunneler/sunny93)
[19:53:10] *** Joins: Atque (~Atque@user/atque)
[19:54:57] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293)
[19:55:17] *** Quits: Macuser (~Macuser@2600:1003:b452:df5e:5021:f436:9c8b:5247) (Ping timeout: 240 seconds)
[19:55:40] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[19:56:09] *** Joins: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com)
[19:56:48] *** Quits: WAR10CK (~WAR10CK@219.135.62.144) (Ping timeout: 256 seconds)
[19:57:17] *** Joins: Macuser (~Macuser@2600:1003:b452:df5e:5021:f436:9c8b:5247)
[20:00:16] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[20:01:44] *** Joins: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it)
[20:03:58] *** Joins: lleo (~leo@31-161-205-115.mobile.kpn.net)
[20:04:00] *** Joins: leo__ (~leo@31-161-205-115.mobile.kpn.net)
[20:04:01] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-46-67-70-100-183.dsl.bell.ca)
[20:04:37] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[20:04:58] *** Quits: leo__ (~leo@31-161-205-115.mobile.kpn.net) (Client Quit)
[20:05:01] *** Quits: lleo (~leo@31-161-205-115.mobile.kpn.net) (Client Quit)
[20:06:51] *** Joins: iomari891 (~iomari891@105.112.138.38)
[20:08:33] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-46-67-70-100-183.dsl.bell.ca) (Ping timeout: 256 seconds)
[20:08:58] *** Joins: JanC (~janc@user/janc)
[20:14:14] *** Joins: masticass (~gzc@host-85-201-222-202.dynamic.voo.be)
[20:15:27] *** Joins: mahmutov_ (~mahmutov@5.176.2.142)
[20:16:28] *** Quits: fe23 (~fe23@2409:8a34:464:4990:582:c21a:6d9d:c286) (Quit: fe23)
[20:16:45] *** Quits: masticass (~gzc@host-85-201-222-202.dynamic.voo.be) (Client Quit)
[20:17:24] *** Joins: oxfuxxx (~oxfuxxx@160.238.38.155)
[20:17:25] *** Joins: kuber (~kuber@97-126-25-4.tukw.qwest.net)
[20:17:37] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 240 seconds)
[20:19:19] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[20:21:08] *** Joins: iomari891 (~iomari891@105.112.138.38)
[20:22:01] *** Joins: stonkey (~stonkey@user/stonkey)
[20:22:52] <nicode> Maybe a dumb question but I have to ask it: are chars just an ASCII representation of a sub-set of int? i.e. ints between 0-126 have an ASCII representation that we call char?
[20:23:08] *** Joins: alch (~alch@151.38.53.71)
[20:23:39] <sham1> what
[20:23:54] <sham1> Please elaborate
[20:23:54] <nicode> lol
[20:24:06] <edk> char is an integer type but it's not the same as int
[20:24:15] <omegatron> they are clearly defined, but in layman terms you can say, they are signed integer of 8-bit size, therefore value 0 .. 127
[20:24:32] <edk> (confusingly, though, 'a' really is just an int)
[20:24:32] <nicode> omegatron: that's what I'm looking for, thx
[20:24:39] <edk> unfortunately that's also slightly wrong
[20:24:48] <omegatron> yes, slightly, I know ..
[20:24:54] <omegatron> but in general in applies
[20:24:57] <edk> C doesn't specify that they're signed or 8-bit
[20:25:00] <omegatron> s/in/it
[20:25:07] <edk> but if they are signed and 8-bit it'll be -128 .. 127...
[20:25:35] <edk> if you're asking whether characters in C are just numbers in a certain range, the answer is yes
[20:25:52] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[20:25:56] <nicode> edk, yeah, that's basically what I'm asking.
[20:26:22] <sham1> edk: could also be -127 .. 127
[20:26:25] <sham1> 1's complement
[20:26:39] <sham1> Of course with the added "benefit" of -0 and 0
[20:27:19] <edk> let's just pretend i'm speaking to you from 2099 or so when C has removed the other sign representations
[20:27:21] *** Joins: Fairy (~Fairy@2001:464a:4992:0:fddd:e672:32ce:4073)
[20:27:33] <sham1> Well 2023, but yeah
[20:27:43] <sham1> In practice 2's complement
[20:28:39] *** Quits: MajorBiscuit (~MajorBisc@c-001-007-038.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.3)
[20:29:20] *** Quits: adinf (~ariel@2001:19f0:5:5337:5400:3ff:fe6c:38e9) (Quit: WeeChat 3.0)
[20:29:43] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[20:29:49] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[20:30:55] *** Quits: Dotz0cat (~Dotz0cat@h146.184.39.162.static.ip.windstream.net) (Ping timeout: 268 seconds)
[20:31:26] <GyrosGeier> I still think there should be a dedicated type for when representation matters
[20:31:32] <jaeckel_> well nobody says that a char is always 8-bit ...
[20:32:34] <GyrosGeier> and the default integer types are just trap-on-overflow by default
[20:33:32] *** Joins: Dotz0cat (~Dotz0cat@h82.194.187.173.dynamic.ip.windstream.net)
[20:34:04] <GyrosGeier> but then I'm "spoiled" by VHDL where ranged types exist, and the actual representation is the one that is cheapest to implement
[20:34:14] <sham1> Ada also does that
[20:35:30] <GyrosGeier> like if you have a counter from 0 to 5, and it will always be reset after 5, the representation could be 011, 100, 101, 110, 111, 000, because you get the comparison with 5 for free by looking at the carry flag
[20:35:59] <johnjaye> nicode: C was made in the late 60s, its type system is very archaic
[20:36:05] *** Joins: gaude (~gaude@252-38-142-46.pool.kielnet.net)
[20:36:06] <johnjaye> it doesn't even have a native notion of string
[20:36:29] <johnjaye> i think fizzie said something before about the closest way to interpret UTF-8 in C
[20:36:47] <sham1> Yes it does
[20:36:50] <sham1> Also 70s
[20:36:57] <sham1> 1970s*
[20:37:08] <johnjaye> by native i mean not in the standard library
[20:37:27] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 256 seconds)
[20:37:34] <johnjaye> maybe derived vs axiomatic is a better way to put it
[20:37:40] <edk> the ranged types that exist in the software world seem kind of bad. i feel like in order to make them not suck you'd need them to combine in mathematically accurate ways, and some way to write functions that are generic in the range of their arguments
[20:37:49] <sham1> Most of the standard library to do with textual strings assumes C strings, so I don't know
[20:37:57] <johnjaye> sort of like in euclidean geometry there's no intrinsic notion of a polygon
[20:38:07] <johnjaye> you have to have a new definition for every one. triangle 3 points, square 4 points, etc
[20:38:19] <sham1> n-gon. n vertices
[20:38:26] <johnjaye> yeah but you can't say that.
[20:38:39] <johnjaye> you need to bring in all of math for that
[20:39:00] <sham1> Maybe induction
[20:39:17] <johnjaye> basically i'm saying we should distinguish different levels of assumption
[20:39:26] <johnjaye> there's the core c language. there's libc. then there's posix. then there's... everything else
[20:39:55] <johnjaye> if posix defined a matrix type i wouldn't say that "c has a builtin notion of matrix"
[20:40:17] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[20:40:25] <sham1> Of course, since that's POSIX. Meanwhile the C standard library is very much part of the language
[20:40:37] *** Joins: iomari891 (~iomari891@105.112.138.38)
[20:40:55] *** Joins: the_lanetly_052 (~the_lanet@185.30.89.54)
[20:40:59] <johnjaye> doesn't the standard itself say you can have a minimal implementation that doens't even have the standard lib?
[20:41:03] <johnjaye> free standing or something?
[20:41:08] <johnjaye> i wonder if that has stdio
[20:41:32] <sham1> Freestanding still has a subset of the full hosted standard library. Mostly definitional stuff like stdbool.h, stdint.h and so on
[20:41:38] <johnjaye> maybe so. in which case you're probably in the right then
[20:42:06] <sham1> ,c11 4p6
[20:42:07] <candide> No such text '4p6' found in C11 Draft Standard (n1570).
[20:42:09] <sham1> >.>
[20:42:29] <sham1> ,c11 4.6
[20:42:30] <candide> No such section '4.6' in C11 Draft Standard (n1570).
[20:42:40] *** Joins: otty (~otty@157.44.135.138)
[20:42:52] <johnjaye> this is also maybe a subtle point. but are fread/fopen/fwrite concerned with strings or just bytes?
[20:42:59] <johnjaye> er character as opposed to byte
[20:43:04] <johnjaye> i guess it's like ascii characters
[20:43:14] <sham1> ,c11 7.21.8.1
[20:43:16] <candide> http://www.iso-9899.info/n1570.html#7.21.8.1 [The fread function] 1 #include <stdio.h> size_t fread(void * restrict ptr, size_t size, size_t nmemb, FILE * restrict stream); Description 2 The fread function reads, into the array pointed to by ptr, up to nmemb elements whose size is specified by size, from the stream pointed to by stream. For each object, size calls are made to the fgetc function and the re... <truncated; https://0x0.st/oikn.txt>
[20:43:16] <johnjaye> since what fizzie said about utf-8 being hard
[20:44:08] <sham1> The objects are read from or written to the stream one `unsigned char` at a time. So one byte at a time. And most often the byte is the same as the octet, so yeah
[20:44:29] *** Quits: rgrinberg (~textual@2806:101e:7:445d:e1a3:1c4d:1ca5:ce95) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:44:29] <johnjaye> i mean i guess it has to be both since you use bytes anyway
[20:44:32] <sham1> Well, it's specified by that. In actuality it could be one read or write
[20:44:41] <sham1> Like syscall, if even that since caching
[20:44:47] <sham1> Caching and buffering
[20:44:48] <johnjaye> but like. when i think 'string' i think like substring, concat strings, the empty string, etc
[20:44:50] <heiner_> johnjaye: file names are strings, i. e. character sequences terminated by a `\0' character.
[20:45:07] <johnjaye> which i guess c has all of those so
[20:45:10] <johnjaye> like strcat
[20:45:17] <GyrosGeier> the way I've understood it, fread() will only consume items from the stream's buffer in "size" increments
[20:45:44] <sham1> C strings are interesting since they are very much defined inductively. Of course that's similar in other languages, but it's still neat
[20:45:44] <johnjaye> so i guess c does have a native string definition. it's just a very basic one that you can't necessarily just use for UTF-8
[20:45:48] <GyrosGeier> so fread(buffer, 2, 2, stdin) will read 0, 2 or 4 bytes
[20:46:06] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[20:46:21] <sham1> The C string definition works great for UTF-8. It's UTF-16 and UTF-32 that are tricky, since those encodings will consist of a lot of zero-bytes
[20:46:33] <GyrosGeier> and if you enter "as\n", there are three bytes in the buffer, and fread can either return two and leave one in the buffer, or wait for a fourth to arrive
[20:46:36] <johnjaye> i should probably figure out how to do that
[20:46:42] <sham1> Indeed, the C string was probably a motivating reason for why UTF-8 is like it is
[20:47:13] <sham1> ,c11 7.12.8p2 GyrosGeier
[20:47:13] <candide> No such text 'G​yrosGeier' in paragraph 2 of section 7.12.8 of n1570.
[20:47:19] <sham1> Meh
[20:47:22] <johnjaye> the only things hard in programming are names, cache coherence, and non-latin languages
[20:47:22] <sham1> ,c11 7.12.8p2
[20:47:22] <candide> No such paragraph 2 in section 7.12.8 of n1570.
[20:47:29] <sham1> ,c11 7.12.8.1p2
[20:47:29] <candide> http://www.iso-9899.info/n1570.html#7.12.8.1p2 [The erf functions] compute the error function of x.
[20:47:36] <sham1> ,c11 7.21.8.1p2
[20:47:37] <candide> http://www.iso-9899.info/n1570.html#7.21.8.1p2 [The fread function] reads, into the array pointed to by ptr, up to nmemb elements whose size is specified by size, from the stream pointed to by stream. For each object, size calls are made to the fgetc function and the results stored, in the order read, in an array of unsigned char exactly overlaying the object. The file position indicator for the stream (i... <truncated; https://0x0.st/oidr.txt>
[20:47:49] <sham1> I can't even enter the standard stuff
[20:47:57] *** Quits: Macuser (~Macuser@2600:1003:b452:df5e:5021:f436:9c8b:5247) (Ping timeout: 240 seconds)
[20:48:20] <sham1> But yeah. fread is specified to basically call fgetc `size` times for nmemb objects
[20:48:26] *** Joins: Akiva (~Akiva@user/Akiva)
[20:48:28] *** Joins: iomari891 (~iomari891@105.112.138.38)
[20:48:31] *** Joins: Viewday11 (~Viewday@user/viewday)
[20:48:39] <johnjaye> i'm vaguely curious how it works in muslc
[20:50:04] <sham1> Of course in practice it might look more something like `unsigned char * restrict buf = ptr; for (size_t i = 0; i < nmemb; ++i) { ssize_t read_amount = read(underlying_fd, buf, size); /* here be error handling */ buf += size;}`
[20:50:15] <sham1> On a POSIX system anyhow
[20:51:02] *** Quits: kuber (~kuber@97-126-25-4.tukw.qwest.net) (Quit: leaving)
[20:51:57] *** Joins: agonhajdari (~textual@user/agonhajdari)
[20:52:49] <johnjaye> hmm i guess most of the standard library is written in C not assembly
[20:53:42] *** Joins: badsektor (~badsektor@user/badsektor)
[20:53:47] <johnjaye> so i guess i'm back to my original stance. but i guess i should call not having the standard library something else. core c. basic c
[20:53:49] <sham1> It indeed is. No reason not to, really
[20:54:13] *** Quits: cthi (~cthi@097-082-138-151.res.spectrum.com) (Quit: leaving)
[20:54:20] <johnjaye> well that was my point. axiom vs derived notion. so to my mind c doesn't have any built in string. but i guess most people won't agree to that
[20:55:09] <johnjaye> sham1: curious, would you say "c has networking" to be a true statement?
[20:55:15] <johnjaye> or no
[20:55:48] <heiner_> I'd say "no"
[20:56:26] <sham1> It does not. POSIX has networking. Windows API has networking. But C proper doens't
[20:56:32] <johnjaye> it sounds to me like when people talk about "C" they mean "the basic language plus the standard library but not posix"
[20:56:34] <johnjaye> ok
[20:56:55] <sham1> I mean "The basic language plus the standard library without POSIX" is how it's standardised
[20:57:17] *** Quits: Dotz0cat (~Dotz0cat@h82.194.187.173.dynamic.ip.windstream.net) (Ping timeout: 256 seconds)
[20:58:21] *** Joins: otty_ (~otty@157.44.135.138)
[20:58:34] <johnjaye> i guess that's why a language's built in library matters so much
[20:59:10] *** Joins: cart_man (~rynot@host-78-144-125-214.as13285.net)
[20:59:19] <johnjaye> the assumption being you will get that and possibly no more
[20:59:22] <johnjaye> so it better be good
[21:00:02] <sham1> It'd be interesting if the C standard was to create some standard networking stuff, but it might just end up being like C2011 threads because of compromise, and not used since the existing things (read: BSD sockets which are also used on Windows by way of WinSock) are just way too good
[21:00:07] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[21:00:24] <johnjaye> i thought winows networking was totally different
[21:00:37] <johnjaye> if they use bsd sockets as well just standardize on that imo
[21:00:58] *** Joins: System_Error (~SystemErr@user/systemerror)
[21:01:28] <sham1> Well it has diverged obviously, but yeah. Microsoft basically lifted Berkeley sockets wholesale into their system, with some Microsoft flare of course
[21:01:43] *** Joins: iomari891 (~iomari891@105.112.138.38)
[21:01:56] <johnjaye> the threading is a lot more different. that's what i was thinking of
[21:02:05] <johnjaye> what did c11 do for threads?
[21:02:13] *** Joins: Dotz0cat (~Dotz0cat@71.31.239.210)
[21:02:36] *** Joins: WAR10CK (~WAR10CK@219.135.62.144)
[21:03:28] *** Joins: lupin592[m] (~lupin592m@2001:470:69fc:105::1:6718)
[21:05:01] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Ping timeout: 240 seconds)
[21:05:22] *** Quits: etolier_ (~somewhere@122.199.45.244) (Ping timeout: 256 seconds)
[21:05:35] *** Quits: WAR10CK (~WAR10CK@219.135.62.144) (Client Quit)
[21:05:46] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[21:07:12] *** Joins: cthi (~cthi@097-082-138-151.res.spectrum.com)
[21:07:37] *** Joins: Betal (~Betal@user/betal)
[21:07:50] *** Joins: etolier (~somewhere@122.199.45.244)
[21:08:02] *** Quits: Ionut_ (~Ionut@92.86.217.127) (Quit: Leaving)
[21:08:22] *** Joins: WAR10CK (~WAR10CK@219.135.62.144)
[21:09:25] *** Joins: terminalpusher (~terminalp@2a01:586:946:1:1612:4fb1:6a45:af83)
[21:10:02] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[21:12:17] *** Quits: etolier (~somewhere@122.199.45.244) (Ping timeout: 240 seconds)
[21:13:29] *** Joins: xqt (~xqt@user/xqt)
[21:13:50] <pragma-> sham1: ,c11 the fread function
[21:13:50] <candide> sham1: Displaying 1 of 4 matches: http://www.iso-9899.info/n1570.html#7.21.8.1p1 [The fread function] #include <stdio.h> size_t fread(void * restrict ptr, size_t size, size_t nmemb, FILE * restrict stream);
[21:14:00] <pragma-> sham1: that's how you can direct the ,c11 output at someone
[21:14:17] *** Quits: Dotz0cat (~Dotz0cat@71.31.239.210) (Ping timeout: 256 seconds)
[21:14:17] *** Quits: otty_ (~otty@157.44.135.138) (Read error: Connection reset by peer)
[21:14:17] *** Quits: otty (~otty@157.44.135.138) (Read error: Connection reset by peer)
[21:14:46] <pragma-> ,give sham1 c11 the fread function
[21:14:46] <candide> sham1: Displaying 1 of 4 matches: http://www.iso-9899.info/n1570.html#7.21.8.1p1 [The fread function] #include <stdio.h> size_t fread(void * restrict ptr, size_t size, size_t nmemb, FILE * restrict stream);
[21:14:51] <pragma-> that's another way.
[21:15:03] <pragma-> ,tell sham1 about c11 the fread function
[21:15:04] <candide> sham1: Displaying 1 of 4 matches: http://www.iso-9899.info/n1570.html#7.21.8.1p1 [The fread function] #include <stdio.h> size_t fread(void * restrict ptr, size_t size, size_t nmemb, FILE * restrict stream);
[21:15:09] * pragma- smiles happily.
[21:15:09] *** Joins: Dotz0cat (~Dotz0cat@h251.12.31.71.dynamic.ip.windstream.net)
[21:15:25] *** Quits: jusski (~user@78-63-85-123.static.zebra.lt) (Ping timeout: 256 seconds)
[21:17:28] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[21:17:47] <nicode> When you supply * as an argument to a program, what is it that's feeding all filenames in the PWD to that program?
[21:17:48] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Read error: Connection reset by peer)
[21:17:49] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[21:17:50] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[21:17:50] *** Joins: wroathe (~wroathe@user/wroathe)
[21:17:59] <pragma-> the shell
[21:17:59] *** Joins: etolier (~somewhere@202-65-84-142.ip4.superloop.com)
[21:18:00] <omegatron> the shell
[21:18:04] <pragma-> FRIST
[21:18:11] <omegatron> *gnarf*
[21:18:11] <nicode> e.g. if I do "cat *.txt" it will feed all .txt files to cat
[21:18:20] <nicode> kk, thx pragma- * omegatron
[21:18:24] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 256 seconds)
[21:18:49] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[21:18:58] *** Joins: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com)
[21:19:17] <omegatron> it's called "filename expansion" : https://www.gnu.org/software/bash/manual/bash.html#Filename-Expansion
[21:19:20] *** Joins: iomari891 (~iomari891@105.112.138.38)
[21:20:12] <sham1> pragma-: alright, I'll keep that in mind\
[21:20:59] <sham1> Some programs don't like the glob stuff. For example for unzip you have to do `unzip '*.zip'`, as in you have to quote the asterisk
[21:21:04] <nicode> ok, so if I run my same program in a different shell, I could get different results if the shell has a different way of handling the asterisk.
[21:22:05] <jaeckel_> even the same shell can have different behavior depending on the glob options set
[21:22:09] <nicode> sham1: what do you mean by "doesn't like?" isn't it "forced" on unzip by the shell?
[21:22:21] <johnjaye> nicode: yes. macos has zsh which behaves differently to bash and that is different to sh on bsd
[21:22:29] <nicode> jaeckel_: do you mean you can adjust it within a program?
[21:22:48] <jaeckel_> yes, read the page that omegatron just provided on some details
[21:22:52] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[21:23:21] <gnoo> when you do *.txt, .foo.txt is not passed unless you do 'shopt -s dotglob' (at least for bash)
[21:23:22] <sham1> nicode: well, unzip doesn't really handle being given multiple file arguments well
[21:23:46] <johnjaye> nicode: the glob in the shell usually just substitutes all the filenames onto the command. thus 'foo *.txt' will actually run as 'foo a.txt b.txt c.txt' for example
[21:23:57] <sham1> It wants to handle the globbing itself since IIRC it's a port of a DOS program and those work like that because DOS didn't do globbing
[21:24:00] <johnjaye> but if a program wants the literal string "*.txt" and not multiple args it will fail
[21:24:38] *** Quits: alch (~alch@151.38.53.71) (Ping timeout: 256 seconds)
[21:24:43] <johnjaye> it's a subtle thing where the shell ends and programs begin. i dont like it but again historical baggage. the shell was big in early unix
[21:24:47] <nicode> johnjaye: so then that program can turn off globbing, right?
[21:24:58] <johnjaye> the program can do whatever it wants sure.
[21:25:05] <johnjaye> it can demand globs. or strings. or whatever
[21:25:19] <johnjaye> but typically i'm saying the shell is doing the globbing for you
[21:25:40] <johnjaye> and if the program wants 1 argument not 100 it won't work
[21:26:24] *** Joins: alch (~alch@151.38.37.23)
[21:26:35] *** Joins: rsjw (~quassel@user/rsjw)
[21:26:37] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[21:26:49] <nicode> I guess I should look into setting environement variables then, to adjust GLOBIGNORE, right?
[21:26:53] <johnjaye> incidentally this is why bsd has sh and posix exists and all these pedantic standards for how to write a portable shell script exist
[21:26:53] <BCMM> nicode: the globbing is performed by the shell, *before* the parameters are passed to your program. your program will never even see the *
[21:26:59] <johnjaye> welcome to shellhaters
[21:27:55] <BCMM> so no, the program can't really "turn it off". (but they shell could be reconfigured, or you could quote or escape the * to prevent the shell interpreting it, or you could start the program some other way than the shell)
[21:28:06] <kurahaupo_> nicode: globignore isn't about turning globbing on and off
[21:29:10] <kurahaupo_> You can do tricks with aliases, like set -f ... set +f
[21:29:14] <nicode> kurahaupo_: oh, I see it's just a list of files you can provide it that won't get globd
[21:29:35] <johnjaye> abandon shell. return to libc
[21:29:44] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[21:29:54] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[21:29:57] <kurahaupo_> nicode: those are things that won't be produced FROM a glob. It's not a list of globs that won't get expanded
[21:30:07] <nicode> honestly I have no need, I'm just curious as to what the boundary is between the shell and a program.
[21:30:43] <johnjaye> nicode: as i said it's very blurry. for example it's common in c programs i understand to query the shell for the shell variables
[21:31:04] <johnjaye> and of course c is compiled with complicated hard to maintain shell scripts
[21:31:26] <omegatron> ... -_-
[21:31:29] <kurahaupo_> For programs like "find" that can take globs as arguments, you simply quote it, like « find -name "*.c" -print »
[21:32:20] *** Joins: Atque (~Atque@user/atque)
[21:32:22] *** Joins: mattroelle[m] (~matt@63.239.63.212)
[21:32:22] <System_Error> nicode: basically if you say program *.txt and had 3 txt shell would usually expand that to "program 1.txt 2.txt 3.txt"
[21:32:34] <kurahaupo_> johnjaye: No, they don't ask the shell. They get their own copy of all exported variables when they start
[21:32:51] *** Parts: susam (~susam@user/susam) ()
[21:32:58] <johnjaye> that just reinforces what i said. a blurry  line
[21:33:17] <kurahaupo_> johnjaye: Huh? That's LESS blurry
[21:33:59] <johnjaye> i mean. getenv is a thing.
[21:33:59] <nicode> geez, the things you learn when you decide to write your own version of "cat"
[21:34:12] <kurahaupo_> Every program gets a copy of its parent's environment when it starts. That's a clear cut line, there is no ongoing interaction
[21:34:21] <omegatron> the shell is your interface to a "terminal line" to the kernel .. and it can execute a program with comand line parameters and all currently set environment variables
[21:34:22] <johnjaye> ok but you still have shell variables
[21:34:42] <kurahaupo_> getenv is a library function that inspects the internal copy of of the environment
[21:35:17] <johnjaye> meaning what... that that list doesn't change during the run?
[21:35:19] <kurahaupo_> What did you think that getenv did?
[21:36:05] <kurahaupo_> meaning that the internal environment of a program can't be changed by any other process (messing about with a debugger doesn't count)
[21:36:06] <nicode> kurahaupo_: so you mean if I run "program *.txt" I have no choice but to receive everyhing the shell sends via *argv, the way to get around it would be to use quotes so that the asterisk is ignored.
[21:37:07] <omegatron> if the '*.txt' matches any file, yes, your program would receive the appropiate paths
[21:37:14] *** Quits: dsdolzhenko (~dsdolzhen@2a02:a210:fa3:b980:ed97:d5f:3e36:f734) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:37:19] <nicode> k, cool, I got it.
[21:37:22] <kurahaupo_> "No choice" is a pejorative way of saying "more consistent"
[21:37:28] <omegatron> unless you quote it and therefore send it 'literally' to your program
[21:37:46] <omegatron> but that's the shell's doing
[21:37:47] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[21:37:47] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[21:37:47] *** Joins: wroathe (~wroathe@user/wroathe)
[21:38:20] <johnjaye> kurahaupo_: ah ok if it doesn't change at all then i get it
[21:40:59] <kurahaupo_> There is « set -f » which completely turns off all globbing, but in practice it's rarely used, because it's quite clumsy to get right in a script.
[21:41:32] <kurahaupo_> (I've used it on average about once every 6 years.)
[21:41:48] <omegatron> if you have something like   /usr/bin/myprogram param1 *.txt "$(ls -1 | wc -l)"    the shell evaluates all this 'text' first in various ways and would come up, for example, with something like   /usr/bin/myprogram param1 file1.txt file2.txt file3.txt 42   and this is then the final command which is executed
[21:42:12] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[21:42:47] <kurahaupo_> nicode: I suggest that you /join #bash if you have questions about how the shell works (and why)
[21:42:54] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[21:43:00] <kurahaupo_> johnjaye: ^^^ you too
[21:43:35] <johnjaye> honestly since using bsd and mac more i don't care about bash as much
[21:43:42] <johnjaye> portability seems the obvious thing to go for
[21:44:52] *** Joins: Tha_14 (~Tha_14@user/tha-14/x-4134127)
[21:48:21] *** Quits: lemontree (~chat@user/lemontree) (Quit: WeeChat 3.1)
[21:49:05] *** Joins: vysn (~vysn@user/vysn)
[21:50:26] <johnjaye> however the bash tutorial is pretty good though. can recommend
[21:51:19] <NRK[m]> the #bash channel also covers posix shell.
[21:51:36] *** Joins: lemontree (~chat@user/lemontree)
[21:51:46] <apotheon> johnjaye: agreed, re: portability
[21:52:07] <apotheon> johnjaye: If you want extra programming features without damaging portability, use a portable subset of awk to augment sh.
[21:52:24] <johnjaye> ah i see. interesting
[21:52:28] <bkhl> Or C. :-)
[21:52:30] <johnjaye> nicode: we all learned something today
[21:52:33] <apotheon> or C
[21:52:35] <apotheon> yeah
[21:52:37] <johnjaye> today I learned awk is portable.
[21:52:39] *** Quits: cart_man (~rynot@host-78-144-125-214.as13285.net) (Quit: Konversation terminated!)
[21:52:50] <johnjaye> or has portable parts. otherwise i wouldn't care about it and just use perl
[21:52:57] <apotheon> johnjaye: There's certainly a portable awk subset.
[21:53:07] <bkhl> I was going to say Perl is available most everywhere and is more standardized.
[21:53:09] <apotheon> gawk is not portable, as a whole
[21:53:10] <johnjaye> ok. i've gone from not caring about awk to caring about awk
[21:53:14] <nicode> johnjaye: yeah.
[21:53:19] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc)
[21:53:27] <apotheon> BSD Unix awk implementations don't match up with gawk extensions.
[21:53:54] <zwr> gawk itself is portable
[21:54:01] <zwr> but stick to POSIX AWK if you can
[21:54:10] <apotheon> zwr: gawk-target code is not portable
[21:54:17] <johnjaye> for me portable means something like "things I can use on bsd,linux,mac, and possibly windows or android"
[21:54:26] <NRK[m]> if you have gawk then you can use `--posix` flag to disable gnu extensions to testing.
[21:54:33] <apotheon> The idea here is "let's not need to install interpreters to run our script".
[21:54:40] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[21:54:49] *** Joins: constxd_ (~brad@142.134.38.68)
[21:54:56] <zwr> I like the kind of portability where the program runs as much of the exact same source as possible on as many platforms without modification
[21:55:06] <johnjaye> ^
[21:55:30] <zwr> I don't like those programs that use Make and then you type "Make" and you get build errors because you have to figure out what include paths and so on to give it
[21:55:38] <zwr> uhh, type "make" I mean
[21:55:39] <johnjaye> i get the java people. i still dont' like java, but i totally see the all-consuming drive for portability
[21:55:41] <NRK[m]> `#ifdef`s says hello
[21:55:48] <johnjaye> minimizes effort
[21:55:58] <zwr> yes or programs where the same program is rewritten as many times as there are platforms it supports
[21:56:08] <zwr> because large bits of the source are covered in #ifdef
[21:56:26] <johnjaye> zwr: that's respectable though. it's the piece meal #ifdef way that's the worst
[21:56:47] <johnjaye> in the way you describe you just have version A, B, C and they all have their own responsibility
[21:56:47] <zwr> I'm removing an #ifdef from a program that did a micro optimization for i386 right now
[21:57:16] *** Joins: dan_pena (~dan_pena@86.228.71.37.rev.sfr.net)
[21:57:30] <sham1> Good
[21:57:40] <johnjaye> of course then you lose predictability but that's tough
[21:58:53] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:59:51] <System_Error> johnjaye: well, plain sh a bit too crippled...
[22:00:13] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 240 seconds)
[22:00:56] *** Joins: imm__ (~imm_@user/imm/x-3405860)
[22:01:33] *** Quits: sathylias (~sysadmin@modemcable136.173-130-66.mc.videotron.ca) (Read error: Connection reset by peer)
[22:01:53] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 256 seconds)
[22:01:56] <apotheon> 11:24 < zwr> I like the kind of portability where the program runs as much of the exact same source as possible on as many platforms without modification
[22:02:00] <apotheon> Yeah, that too.
[22:02:15] *** Joins: pulse (~pulse@user/pulse)
[22:02:26] <apotheon> johnjaye: Java's attempts at portability are . . . less than stellar, unfortunately.
[22:02:41] <apotheon> I get far better portability with Ruby, Python, Perl . . .
[22:02:58] <johnjaye> saying the uncomfortable truths out loud
[22:03:00] <johnjaye> here on #c
[22:03:01] *** Quits: dsrt^ (~dsrt@wsip-98-188-246-242.mc.at.cox.net) (Ping timeout: 256 seconds)
[22:03:04] <sham1> It tries its darndest, but it just isn't enough to gloss over the platform differences
[22:03:13] <sham1> Same with C honestly
[22:03:54] <apotheon> C is the language in which people try to write the tools that are supposed to enable writing portable code.
[22:04:35] <X-Scale> C was the Java of the 70s
[22:04:51] <apotheon> System_Error: That's why you extend it with awk.
[22:04:59] <johnjaye> write once, debug everywhere
[22:05:23] <apotheon> . . . and if sh+awk (aka SHAWK PROGRAMMING), you use a "real programming language", not shell scripting.
[22:05:45] <constxd_> just use Ty bro
[22:05:58] <sham1> perl
[22:06:04] <constxd_> look how easy the C ffi is http://paste.pr0.tips/7Q
[22:06:07] <apotheon> X-Scale: The Java of the '70s is much more tolerable than the Java of the '90s, then.
[22:06:11] <apotheon> (for me, anyway)
[22:06:13] <johnjaye> use c++ bro. it's fine bro. inheritance bro
[22:06:23] <System_Error> apotheon: um, well, in the end bsd and mac users can install bash.
[22:06:28] <apotheon> johnjaye: triggering
[22:06:28] <sham1> "What do you mean you don't want Boost?"
[22:06:39] <System_Error> Not any worse than python/perl/ruby/whatever
[22:06:52] <apotheon> System_Error: If you have to install something to run your script anyway, write it with a real programming language.
[22:07:09] <sham1> Ah yes. As opposed to those famous fake programming languages
[22:07:10] <apotheon> It's much worse than Ruby/Python/etc.
[22:07:22] <System_Error> Um, I have to install python or ruby in your example, so what's the difference?
[22:07:25] <apotheon> sham1: yeah, fake programming languages like interactive shells
[22:07:36] <apotheon> System_Error: better language
[22:07:42] <apotheon> much better language
[22:08:04] <System_Error> apotheon: flying spagetti monsters with tentacles, doing hell knows what or why
[22:08:07] <apotheon> also, less likelihood of your system being owned, given similar competence in each language
[22:08:12] *** Joins: sathylias (~sysadmin@modemcable136.173-130-66.mc.videotron.ca)
[22:08:18] <apotheon> System_Error: That's a nice description of Bash.
[22:08:25] <System_Error> shell is nice for small adhoc automation and joining programs together
[22:08:32] <apotheon> thus sh
[22:08:33] <johnjaye> ruby and python right now: I'm better than you. *Much* better than you.
[22:08:50] <System_Error> apotheon: bash doesnt haves multimegabyte stdlibs and doesnt ruins compat every year or two
[22:09:13] <apotheon> Any argument for a shell instead of Ruby, Python, Perl, or Lua is an argument for sh instead of Bash, pretty much.
[22:09:33] <System_Error> I think ruby and python are opposite of *nix way: can do like everything. Do it like bs.
[22:09:44] <apotheon> Bash is not really the Unix way, either.
[22:09:44] *** Quits: terminalpusher (~terminalp@2a01:586:946:1:1612:4fb1:6a45:af83) (Remote host closed the connection)
[22:09:49] <constxd_> cringe
[22:09:55] <apotheon> thus reinforcing my point about arguments against Bash
[22:09:58] *** Quits: Tha_14 (~Tha_14@user/tha-14/x-4134127) (Ping timeout: 256 seconds)
[22:10:09] *** Joins: FluffyMask (~masque@user/fluffymask)
[22:10:23] <constxd_> writing complex programs in shell scripting languages is awful
[22:10:32] <System_Error> bash way closer to idea of *nix way IMO. Doesn't attempts to be everything. But ye, it got plenty of debatable features like /dev/tcp
[22:10:52] <apotheon> It *does* kinda attempt to be everything, especially when compared against sh.
[22:10:55] <System_Error> constxd: if you write complicated program in shell you doing something really wrong...
[22:11:17] <System_Error> apotheon: vs sh? Okay. But vs python or ruby? Innocent small thing :P
[22:11:34] <constxd_> no
[22:11:40] <johnjaye> "Unix's underlying philosophy is many small tools, each of which does a single job well." -- Michael Lucas
[22:11:44] <constxd_> smaller != more innocent
[22:11:59] <constxd_> bash is just a terrible invention. ruby is principled and elegant
[22:12:21] <System_Error> And last but not least I dont have to rewrite and reF%#tor bash something every 6 months.
[22:12:26] <constxd_> the fact that it has a large standard library doesn't make it worse than bash
[22:12:30] <HisShadow> yeah, small tools my ass, "cat came back from Berkley waving flags"
[22:12:31] <bkhl> I wrote one largish Bash script in my life.
[22:12:46] <sham1> I wrote an IRC client in bash
[22:12:49] <sham1> Wasn't fu
[22:12:50] <sham1> fun
[22:12:51] <System_Error> bash looks to me like just shell, with some extentions.
[22:12:51] <caze> Just use ksh
[22:12:54] <bkhl> But that was the test runner for Bash exercises on Exercism.org, so I thought it would be suitable to make it in Bash.
[22:12:56] <apotheon> I have Ruby and Perl tools I wrote almost twenty years ago that still run on recent releases of those language implementations.
[22:13:10] <System_Error> sham1: guess you had it hard with escaping :))
[22:13:20] <sham1> Not escaping, actually
[22:13:29] <System_Error> or got some funny vulns as an option
[22:13:42] <apotheon> Bash is like sh with some incompatibilities and *shit tons of misbegotten extensions*.
[22:13:55] <System_Error> Shell can be good in many things, but processing external untrusted input isn't one of them :)
[22:13:55] <sham1> apotheon: you must hate zsh then
[22:13:57] <apotheon> Shit like shellshock should be a wakeup call.
[22:14:35] <System_Error> apotheon: well, I dont have something ruby but python things were breaking just like all the time.
[22:14:36] <apotheon> Quoting and escaping in shells is not well-suited to nontrivial scripting at all.
[22:14:53] <apotheon> sham1: I'd take Zsh over Bash.
[22:15:01] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 240 seconds)
[22:15:04] <apotheon> . . . but I wouldn't write a script in Zsh.
[22:15:12] <apotheon> It'd only be for interactive use.
[22:15:18] <apotheon> I prefer ksh for interactive use, though.
[22:15:23] <System_Error> apotheon: feel free to code in zsh, tho guess you'll have certain issues about userbase
[22:15:45] <apotheon> System_Error: Why would I write code in Zsh?
[22:15:48] <System_Error> in a sense, I never seen programs seriously daring to use zsh in their things.
[22:15:55] <sham1> I did mean scripting. Because interactive usage is whatever
[22:16:21] <sham1> I flip-flop between bash, zsh, OpenBSD's ksh, fish and tcsh for interactive
[22:16:27] <apotheon> Basically, the only place I'd consider scripting with Zsh is in .zshrc, and I prefer ksh for interactive use, so even that isn't likely to happen.
[22:16:52] *** Quits: novns (~novns@user/novns) (Quit: ZNC - https://znc.in)
[22:16:54] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[22:17:00] <System_Error> apotheon: sometimes its just nice to interactively find some fortunate pattern and store it for later use, maybe even reusing it somewhere else.
[22:17:08] <apotheon> sham1: I prefer to not even have Bash installed.  I don't want its complexity on my system, increasing attack surface, if I can reasonably avoid it.
[22:17:26] <apotheon> Unfortunately, the flexible use cases for my laptop result in me having Bash present, but I still don't use it interactively.
[22:17:36] <System_Error> E.g. if I got funny oneliner, it eventually makes sense as reusable snippet I use in few more places. Why not?
[22:17:57] *** Quits: johnjaye (~pi@154.6.152.74) (Quit: WeeChat 3.3)
[22:18:16] <System_Error> apotheon: virtually any script can pwn you real hard. And in case of python and ruby they got much worst attack surface.
[22:18:44] <System_Error> Perl? Well, dunno, dont remember numerous CVEs, but I never really looked...
[22:18:45] <apotheon> as the program gets more complicated: sh or awk -> sh+awk -> programming language (C, Ruby, whatever)
[22:19:14] *** Joins: Tha_14 (~Tha_14@user/tha-14/x-4134127)
[22:19:35] <rsjw> System_Error: if you're looking for a zsh userbase, it's now default in macos
[22:19:36] <System_Error> just using bash on 2nd phase if only few features in use is tempting, sry :))
[22:19:58] <apotheon> ugh, Bash
[22:20:06] <apotheon> makes me throw up in the back of my throat a little
[22:20:27] *** Joins: novns (~novns@user/novns)
[22:20:31] <System_Error> rsjw: it isn't in my system - so it prevails unfortunately.
[22:20:35] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[22:20:37] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 240 seconds)
[22:21:00] <System_Error> Most macos users I met had bash, so...
[22:21:29] <apotheon> Bash got replaced by Zsh as the default shell on MacOS recently-ish (in the last few years, perhaps).
[22:21:36] *** Joins: iomari891 (~iomari891@105.112.138.38)
[22:21:38] <apotheon> I don't use MacOS, so I don't know the specifics.
[22:21:44] <rsjw> bc of licensing issues I believe
[22:21:46] <bkhl> For license reasons.
[22:22:03] <zwr> speaking of ugh I wrote a file upload script a few years ago that ended up in the 500loc range and I regret writing it in shell, now I kind of want to redo it in C...
[22:22:42] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[22:22:51] *** Quits: WAR10CK (~WAR10CK@219.135.62.144) (Quit: Leaving)
[22:23:09] *** Joins: WAR10CK (~WAR10CK@219.135.62.144)
[22:23:10] <bkhl> I recently had to refactor a badly written Bash script that nobody remembered exactly how it was supposed to work at around 300 LoC to Python.
[22:23:16] <apotheon> In my experience, all else being equal, Bash is the only shell that sometimes hesitates in interactive use, too.
[22:23:27] <apotheon> hit Enter, wait half a second for it to respond
[22:23:28] <apotheon> great
[22:23:40] <apotheon> bkhl: good job
[22:23:49] *** Quits: HisShadow (~HisShadow@user/hisshadow) (Ping timeout: 240 seconds)
[22:23:50] <apotheon> bkhl: I feel your pain.
[22:23:54] <bkhl> Sorry, should have said 3000
[22:24:10] <apotheon> I've had to do similar stuff with other languages.
[22:24:34] *** Joins: benkietzman (~ben@2600:1700:9930:4f90:ecf8:4e01:26c5:9804)
[22:24:54] *** Quits: WAR10CK (~WAR10CK@219.135.62.144) (Remote host closed the connection)
[22:25:03] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.3)
[22:25:44] *** Joins: HisShadow (~HisShadow@user/hisshadow)
[22:25:44] *** Joins: magla (~gelignite@55d42175.access.ecotel.net)
[22:25:57] *** Quits: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:26:24] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[22:26:33] *** Quits: benkietzman (~ben@2600:1700:9930:4f90:ecf8:4e01:26c5:9804) (Client Quit)
[22:26:57] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Ping timeout: 276 seconds)
[22:27:40] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[22:28:00] *** Joins: pucara (~i@host230.186-125-94.telecom.net.ar)
[22:28:08] <System_Error> apotheon: oh sure halfpropruetary megacorp aka apple not fond of licenses where I'm not just their unpaid workforce.
[22:28:37] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[22:28:37] <apotheon> The Zsh license is great.
[22:29:01] <apotheon> The fact it also works for Apple doesn't mean it doesn't work for you, even if I'm sympathetic to the "fuck Apple" sentiment.
[22:29:23] <System_Error> And on my side I'd rather use bash. But if bash script goes 3000 lines I know I really f...d it up.
[22:30:22] <bkhl> It was mostly not depending much on Bash features though.
[22:30:31] *** Joins: echoSMILE (uid504326@user/echosmile)
[22:30:43] <bkhl> The guy who wrote it wanted to make sure his colleagues that knew even less programming would be able to understand it.
[22:31:09] <apotheon> . . . and yet it ended up being incomprehensible.
[22:31:11] <bkhl> So he for example avoided Bash loops in favour of passing streams in and out of text files.
[22:31:28] *** Joins: Akuli (~Akuli@87-94-109-1.bb.dnainternet.fi)
[22:31:51] <bkhl> So rather than using Bash features it leaned more on find/xargs/grep/etc.
[22:31:59] <apotheon> wow
[22:32:13] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[22:32:21] <apotheon> Passing streams in and out of text files as a replacement for looping is kind of crazy.
[22:32:32] <bkhl> Actually the guy who wrote it was super competent in other ways though, I ended up poaching him to the support dept at my current company. :-)
[22:32:43] <apotheon> cool, I guess
[22:32:47] <bkhl> But it wasn't based on his programming skills.
[22:32:49] <apotheon> har
[22:33:03] <apotheon> Give someone like that instructions like:
[22:33:09] <apotheon> "If you write code, tell me immediately."
[22:33:17] <apotheon> . . . then you refactor it before it gets too big.
[22:34:02] *** Joins: segnior (segnior@user/segnior)
[22:34:37] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 240 seconds)
[22:35:14] *** Joins: xqt (~xqt@user/xqt)
[22:35:32] *** Joins: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com)
[22:35:57] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[22:36:21] <apotheon> Anyone using xargs instead of a simple loop as a way to make code more understandable to less knowledgeable people is doing it wrong.
[22:37:10] *** Quits: reedrichards (~f@176.108.141.162) (Ping timeout: 256 seconds)
[22:39:45] <constxd> wtf does "passing streams in and out of text files" mean
[22:39:49] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 240 seconds)
[22:42:09] <bkhl> A lot of passing files through various combinations of grep etc into temporary files that were then processed further.
[22:42:13] *** Quits: the_lanetly_052 (~the_lanet@185.30.89.54) (Ping timeout: 240 seconds)
[22:43:24] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:43:26] <constxd_> based
[22:43:51] *** Quits: gaude (~gaude@252-38-142-46.pool.kielnet.net) (Quit: Ping timeout (120 seconds))
[22:44:11] <constxd_> kings what are some fun C libraries to write bindings for
[22:44:27] *** Joins: johnjaye (~pi@154.6.152.74)
[22:45:04] *** Quits: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:46:11] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-198.dsl.bell.ca)
[22:47:12] *** Joins: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com)
[22:47:47] *** Joins: reedrichards (~f@2607:f598:bbda:20:c0cd:f9bb:3ec:7cd2)
[22:49:36] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[22:51:25] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-35-70-24-248-198.dsl.bell.ca) (Ping timeout: 240 seconds)
[22:53:38] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (Quit: Leaving)
[22:54:08] *** Quits: bliminse (~bliminse@host86-186-17-7.range86-186.btcentralplus.com) (Quit: leaving)
[22:57:00] *** Quits: mahmutov_ (~mahmutov@5.176.2.142) (Ping timeout: 256 seconds)
[22:57:40] <omegatron> constxd:  https://ports.macports.org/search/?q=lib&name=on   take one
[22:57:41] <candide> Title of omegatron's link: Search ports | MacPorts
[22:57:59] <omegatron> perhaps  https://ports.macports.org/port/libxmi/  ?
[22:58:01] <candide> Title of omegatron's link: Install libxmi on macOS with MacPorts
[22:58:15] *** Joins: user (~user@wsip-174-71-193-82.lv.lv.cox.net)
[22:59:35] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[23:00:45] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-43-67-70-144-25.dsl.bell.ca)
[23:03:13] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[23:04:54] *** Quits: user (~user@wsip-174-71-193-82.lv.lv.cox.net) (Remote host closed the connection)
[23:04:59] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[23:05:26] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[23:06:04] *** Quits: Whatshisface (~jon@user/Whatshisface) (Ping timeout: 256 seconds)
[23:06:14] *** Joins: bliminse (~bliminse@host86-186-17-7.range86-186.btcentralplus.com)
[23:06:49] *** Joins: slidercrank (~slidercra@user/slidercrank)
[23:08:11] *** Quits: ADHD (~XXX@user/ADHD) (Quit: brb)
[23:08:40] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[23:11:09] *** Joins: Inline (~Inline@aftr-37-201-240-204.unity-media.net)
[23:12:25] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (Remote host closed the connection)
[23:16:13] *** Quits: mrig (~mrig@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[23:18:11] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[23:18:11] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[23:18:11] *** Joins: wroathe (~wroathe@user/wroathe)
[23:19:19] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[23:19:43] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[23:20:02] *** Quits: cthi (~cthi@097-082-138-151.res.spectrum.com) (Quit: leaving)
[23:21:00] *** Joins: kuber (~kuber@97-126-25-4.tukw.qwest.net)
[23:21:25] *** Joins: mrig (~mrig@user/mrig)
[23:21:43] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (Quit: No Ping reply in 180 seconds.)
[23:22:08] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-5869-268c-a8ec-cf14.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[23:22:22] *** Joins: cthi (~cthi@097-082-138-151.res.spectrum.com)
[23:23:06] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[23:24:40] *** Joins: unmatched-paren (~user@2a00:23c6:ce06:7900:cbcf:db6a:71ae:c7f9)
[23:26:40] <unmatched-paren> hello! i'm new to c, and i've written a small line-reading function to practise, but i'm wondering whether it's efficient to call realloc() on every character: https://paste.debian.net/1226784/
[23:27:45] <ioxzev1z> unmatched-paren, no it is not
[23:27:57] <omegatron> before I even look at your code: if you are in an early stage, don't worry too much about 'efficiency', but for correctness
[23:28:34] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Remote host closed the connection)
[23:28:58] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[23:29:47] *** Quits: kuber (~kuber@97-126-25-4.tukw.qwest.net) (Quit: leaving)
[23:29:49] *** Quits: Fairy (~Fairy@2001:464a:4992:0:fddd:e672:32ce:4073) (Ping timeout: 240 seconds)
[23:30:56] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[23:31:16] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[23:31:55] <omegatron> in your case, it might be better to assume a sane maximum length of your line (say .. 1024), allocate once that amount of memory and then read, write and reset (set bytes to value of 0x00) to that ..  and eventually free() that memory chunk
[23:31:59] <NRK[m]> unmatched-paren: you should always check for *alloc failures.
[23:32:04] *** Joins: dsrt^ (~dsrt@wsip-98-188-246-242.mc.at.cox.net)
[23:33:09] <unmatched-paren> NRK[m]: oops, thanks for the reminder!
[23:33:35] <NRK[m]> also malloc/realloc performance depends on the allocator
[23:34:01] <NRK[m]> i'd assume glibc allocator should be able to deal with this okay enough.
[23:34:28] <NRK[m]> but still, it's not really something you should do. try doing what omegatron suggested.
[23:34:40] <omegatron> you could also allocate your memory into a 'static' variable - so, it's 'shared' between calls of your function
[23:34:54] *** Quits: Thedarkb2 (~Thedarkb@cpc84095-pool16-2-0-cust190.15-1.cable.virginm.net) (Remote host closed the connection)
[23:35:44] <unmatched-paren> NRK[m]: on a malloc failure, in this case, i should return NULL, right?
[23:36:02] <NRK[m]> also, im assuming the reason why you're allocating every char is because you're trying to save memory.
[23:36:22] <omegatron> it could return NULL, it could also call  abort(), .. you have some options
[23:36:25] <NRK[m]> and if that's the case, then you wont save any memory that way.
[23:36:27] <NRK[m]> most allocators will allocate in chunks
[23:36:55] <NRK[m]> unmatched-paren: depends. i typically just exit on allocation failure.
[23:37:13] <omegatron> https://sourceware.org/glibc/wiki/MallocInternals  this might shed some light
[23:37:21] <NRK[m]> it's not uncommon to have `emalloc` or `xmalloc` wrapper fuctions which call exit on malloc failure
[23:37:25] <constxd_> ,cc #include <X11/Xlib.h> printf("%zu", sizeof (Colormap));
[23:37:26] <candide> constxd_:  fatal error: X11/Xlib.h: No such file or directory
[23:37:34] <constxd_> cringe bro
[23:37:48] *** Quits: fstd (~fstd@xdsl-87-78-21-185.nc.de) (Read error: Connection reset by peer)
[23:38:04] *** Joins: fstd (~fstd@xdsl-87-78-21-185.nc.de)
[23:38:09] <unmatched-paren> so, i should assume the string is less than 1024 bytes or something, and if that assumption turns out to be wrong, i allocate that many more, right?
[23:38:33] *** Parts: Tha_14 (~Tha_14@user/tha-14/x-4134127) ()
[23:38:44] <NRK[m]> in your case, i'd just use mmap
[23:39:08] <NRK[m]> or i'd use fseek to grab the file size, and then allocate that.
[23:39:32] *** Joins: kdc (~kdc@196.211.197.159)
[23:39:54] <NRK[m]> oh, forgot u said you were new to C. unmatched-paren: you can use fseek() to go to the end of the file and then use ftell().
[23:41:39] <unmatched-paren> NRK[m]: this lineinput_f() is intended to be used in a lineinput() that reads from stdin (like how getc is to getchar), how would getting the file size work with that?
[23:42:17] <NRK[m]> err, yes my bad. i didn't read it carefully.
[23:42:58] <NRK[m]> then assume an arbitrary size and then realloc if needed.
[23:43:16] <unmatched-paren> ok, thanks everyone! :D
[23:43:24] *** Quits: cthi (~cthi@097-082-138-151.res.spectrum.com) (Quit: leaving)
[23:44:51] <unmatched-paren> NRK[m]: you wouldn't have known that i intended to create lineinput(), i only pasted lineinput_f(); i probably should have pasted in the whole file
[23:46:01] <omegatron> as a side note:  there is also  fgets()
[23:46:42] *** Joins: cthi (~cthi@097-082-138-151.res.spectrum.com)
[23:47:12] *** Quits: kdc (~kdc@196.211.197.159) (Quit: Leaving)
[23:47:57] <unmatched-paren> omegatron: fgets needs a length though, doesn't it? this is supposed to work on lines of any length with .+alloc, in cases where you don't know how long the input will be
[23:48:25] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[23:48:27] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[23:48:39] <NRK[m]> unmatched-paren: also you should always wrap macros in paren. http://c-faq.com/cpp/safemacros.html
[23:48:40] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d101:a511:5b6b:4afc)
[23:49:30] <omegatron> the 'size' parameter of fgets() is an int - so usually this means 2^31 Bytes - that's a lot
[23:49:38] <omegatron> 2 GB to be precise
[23:49:50] <omegatron> 2 GiBi ..  -_-
[23:50:05] *** Joins: teut (~teut@2401:4900:1c68:6b85:dd24:2947:a394:79e4)
[23:50:09] <NRK[m]> could also be 2^15
[23:50:13] *** Joins: xqt (~xqt@user/xqt)
[23:50:14] <unmatched-paren> ok, but
[23:50:41] <NRK[m]> there's getline function
[23:50:46] <NRK[m]> in POSIX
[23:51:24] <NRK[m]> if you pass it NULL it allocates the needed space for you.
[23:52:08] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[23:52:39] *** Quits: zacts (~zacts@user/zacts) (Ping timeout: 250 seconds)
[23:53:25] <unmatched-paren> NRK[m]: ooh, i knew about getline but not the NULL part (i didn't know it wasn't portable either; that's what i get for putting 'c getline' into searx and just clicking on whatever is at the top, regardless of the observable lack of quality :P)
[23:54:03] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Quit: Leaving)
[23:54:04] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: Disconnecting)
[23:55:13] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 256 seconds)
[23:55:57] <unmatched-paren> i've heard there are manpages for the libc functions, but `M-x man RET malloc` gets me nothing, nor does `M-x man RET getline`...
[23:56:05] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[23:56:05] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[23:56:05] *** Joins: wroathe (~wroathe@user/wroathe)
[23:56:36] *** Joins: tiotags (~tiotags@user/tiotags)
[23:56:44] *** Quits: jhms (~i.am@user/marlboro) (Quit: I come down here for a fat woman and that's what I'm havin.)
[23:57:03] <unmatched-paren> OH there's info pages, not man pages
[23:59:44] <sham1> You also probably don't have the necessary man-pages installed that give you documentation of C stuff
