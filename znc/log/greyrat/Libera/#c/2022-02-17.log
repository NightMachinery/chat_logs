[00:01:00] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[00:01:01] *** Joins: evanextreme (~evan@2604:4080:1000:8150:e023:d964:d20f:a5e5)
[00:01:44] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[00:05:36] *** Joins: adip (~adip@crd88.neoplus.adsl.tpnet.pl)
[00:05:38] *** Joins: adip_ (~adip@crd88.neoplus.adsl.tpnet.pl)
[00:10:02] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545)
[00:12:03] *** Quits: libc (~archer@user/tessio) (Quit: WeeChat 3.4)
[00:12:36] *** Quits: gry (~quassel@botters/gry) (Read error: Connection reset by peer)
[00:13:47] *** Joins: gry (~quassel@botters/gry)
[00:14:40] *** Quits: wyfnt (~wyfnt1232@103.214.137.74) (Read error: Connection reset by peer)
[00:16:15] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[00:16:50] *** Joins: strajder (~strajder@user/strajder)
[00:18:03] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 272 seconds)
[00:18:36] *** Quits: elves-upstate (~elves-ups@129-2-180-38.wireless.umd.edu) (Quit: Client closed)
[00:18:39] *** Joins: finsternis (~X@23.226.237.192)
[00:20:24] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[00:22:37] *** Joins: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0)
[00:27:40] <Dean> Aaah!
[00:29:35] <Dean> Does c run functions in parallel? Like I have two functions and one is executing before the other while it's called later.
[00:29:45] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[00:30:33] <ChoHag> Not unless you tell it to.
[00:30:53] <clarity> Dean: Side effects happen in specified order
[00:31:02] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[00:31:19] <clarity> I.e. according to your sequence points
[00:31:20] <ChoHag> Your program and the kernel constitute a single system of 2 parts which run separately but for the most part you don't need to think about that.
[00:32:15] <ChoHag> (And one of the kernel's functions is to mediate the interaction with yet more third-party systems)
[00:32:55] <ChoHag> But in general no. C is an entirely linear language. One expression is fully evaluated, then the next, etc.
[00:33:05] <clarity> Pure lol no
[00:34:16] <Dean> I've been busy with this assignment for 15 hours straight and I'm still not getting it right. I decided to start over and do it differently and now it's a new kind of rodeo.
[00:34:28] <Dean> thank you clarity and ChoHag
[00:37:29] *** Quits: somlis (~somlis@user/somlis) (Read error: Connection reset by peer)
[00:39:48] *** Quits: pucara (~i@host14.181-1-101.telecom.net.ar) (Ping timeout: 240 seconds)
[00:40:04] *** Joins: rgrinberg (~textual@187.194.14.9)
[00:43:09] *** Joins: Sampuka (~Sampuka@5.186.121.142.cgn.fibianet.dk)
[00:45:40] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[00:46:43] *** Joins: Klinda (~superleag@user/klinda)
[00:46:58] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.4)
[00:47:53] *** Quits: Sampuka (~Sampuka@5.186.121.142.cgn.fibianet.dk) (Client Quit)
[00:51:57] *** Joins: boB_K7IQ (~boB_K7IQ@ip72-201-138-188.ph.ph.cox.net)
[00:52:27] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a131:11ab:1111:d3c5)
[00:53:46] *** Quits: System_Error (~SystemErr@user/systemerror) (Read error: Connection reset by peer)
[00:55:27] *** Quits: gry (~quassel@botters/gry) (Quit: пока)
[00:55:47] *** Joins: gry (~quassel@botters/gry)
[00:56:31] <Dean> I'm this close to finishing it. This close.
[00:58:16] *** Quits: heineken (~i.am@user/heineken) (Quit: a pentium 100 "running" windows 11 trying to play Last of Us II at ps4emu... that's my brain trying understand 0->R->R->R/2R->0)
[00:58:24] *** Joins: oxfuxxx (~oxfuxxx@160.238.38.100)
[00:59:01] *** Joins: somlis (~somlis@user/somlis)
[01:02:30] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[01:03:00] *** Joins: melty_cheese (~melty_che@75-174-20-17.boid.qwest.net)
[01:07:24] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[01:07:57] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[01:08:29] *** Quits: magla (~gelignite@55d40b59.access.ecotel.net) (Quit: Stay safe!)
[01:09:12] *** Quits: Darkcoal (~user@user/Darkcoal) (Quit: Darkcoal)
[01:10:46] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[01:12:29] *** Quits: oxfuxxx (~oxfuxxx@160.238.38.100) (Ping timeout: 250 seconds)
[01:14:20] *** Joins: masoudd_ (~masoudd@user/masoudd)
[01:15:03] *** evanextreme is now known as evanextreme[away
[01:16:12] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[01:16:29] *** Quits: serbest (~ike@user/serbest) (Quit: Konversation terminated!)
[01:16:54] *** Quits: p0g0 (~p0g0@23.252.182.13) (Quit: p0g0)
[01:17:22] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:17:22] *** Quits: acerbic (~acerbic@cs-xdata-50-86-49-156.cspire.com) (Read error: Connection reset by peer)
[01:17:24] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 240 seconds)
[01:18:16] *** Joins: p0g0 (~p0g0@23.252.182.13)
[01:18:25] *** Quits: p0g0 (~p0g0@23.252.182.13) (Remote host closed the connection)
[01:22:32] *** Joins: sh4_ (~sh4@user/sh4)
[01:23:05] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[01:23:05] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[01:23:05] *** Joins: wroathe (~wroathe@user/wroathe)
[01:23:10] *** Joins: p0g0 (~p0g0@23.252.182.13)
[01:23:42] <sh4_> how to get rid of one layer of parens in preprocessor macros? say there are calls to FUNC((foo, bar)); all over the place and i like to get rid of the inner parens pair
[01:24:07] <sh4_> so it can be used via __VA_ARGS__ oslt
[01:26:46] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[01:27:29] *** Joins: Betal (~Betal@user/betal)
[01:28:20] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 272 seconds)
[01:28:38] <fizzie> ,cc #define FUNC(args) FUNC_ args \n #define FUNC_(a, b, c) printf("a: %d, b: %d, c: %d", a, b, c) \n FUNC((1, 2, 3));
[01:28:41] <candide> fizzie: a: 1, b: 2, c: 3
[01:29:08] <fizzie> In other words, just leave out the parentheses from the invocation of another function-like macro, and it'll "use up" one pair.
[01:29:10] *** Joins: s1b1_ (~s1b1@user/s1b1)
[01:29:22] *** Quits: s1b1 (~s1b1@user/s1b1) (Read error: Connection reset by peer)
[01:29:22] *** s1b1_ is now known as s1b1
[01:30:17] *** Joins: bilbo (~bilbo@host-37-191-190-173.lynet.no)
[01:30:34] *** Quits: ekathva (~ekathva@n3k02urgmuqvuf9nu-1.v6.elisa-mobile.fi) (Remote host closed the connection)
[01:30:55] *** Quits: bilbo (~bilbo@host-37-191-190-173.lynet.no) (Client Quit)
[01:32:19] *** Quits: melty_cheese (~melty_che@75-174-20-17.boid.qwest.net) ()
[01:32:57] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[01:33:48] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 240 seconds)
[01:35:16] <sh4_> thanks; that works
[01:35:35] *** Quits: cherrry9 (~jan@aein251.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[01:35:45] <kplant> was that your question or were you asking how to define variadic macros?
[01:35:48] <kplant> since you mentioned __VA_ARGS__
[01:36:38] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: Disconnecting)
[01:37:05] <Dean> https://paste.debian.net/1231170/ the test suite that I run my code against tells me that votes are being counted when when multiple candidates are eliminated. I'm trying to see how this is possible.
[01:37:08] <sh4_> i've been fixing some gcc3 era code where FUNC(x) foo ## x worked, using fizzie's method and __VA_ARGS__, case closed
[01:37:52] *** Joins: eddybilley (~freddieti@2a02-a454-7f89-1-7986-3f2b-ff3-50ce.fixed6.kpn.net)
[01:38:18] *** Quits: vancz (~vancz@user/vancz) (Quit: vancz)
[01:44:59] *** Quits: eddybilley (~freddieti@2a02-a454-7f89-1-7986-3f2b-ff3-50ce.fixed6.kpn.net) (Ping timeout: 250 seconds)
[01:48:45] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[01:50:35] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Ping timeout: 240 seconds)
[01:53:52] *** Quits: ddoering (~Devinn@searspoint.nvidia.com) (Remote host closed the connection)
[01:53:56] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[01:54:14] *** Joins: ddoering (~Devinn@searspoint.nvidia.com)
[01:54:24] <useretail> how to slow down an app that uses Xlib? it's drawing too fast
[01:54:58] *** Joins: terminalpusher (~terminalp@2a01:586:9b7e:1:7b2f:6557:bb5b:d32)
[01:57:41] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[02:00:01] *** Joins: vancz (~vancz@user/vancz)
[02:00:02] *** Quits: alch (~alch@bo-18-154-246.service.infuturo.it) (Read error: Connection reset by peer)
[02:00:29] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:01:22] *** Quits: SymbioticFemale (~Symbiotic@user/SymbioticFemale) (Remote host closed the connection)
[02:02:05] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Quit: Lost terminal)
[02:02:17] *** Joins: Atque (~Atque@user/atque)
[02:03:00] *** Quits: mahmutov (~mahmutov@37.155.85.16) (Ping timeout: 240 seconds)
[02:03:22] <sh4_> useretail, maybe put a usleep() into your draw loop, or only draw when something changed (optimally)
[02:03:24] *** Quits: rgrinberg (~textual@187.194.14.9) (Read error: Connection reset by peer)
[02:04:20] *** Joins: alch (~alch@ca-18-202-102.service.infuturo.it)
[02:04:36] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:d08e:72ac:8747:41f3)
[02:05:49] <useretail> sh4_, i'm just trying some demos from their library
[02:06:21] <useretail> just not sure what's the right way. cause if i add usleep() it will be running slower on older processors
[02:07:49] *** Quits: cosimone (~user@93-47-229-224.ip115.fastwebnet.it) (Remote host closed the connection)
[02:08:06] <sh4_> then calculate how long a single look takes (e.g. using clock_gettime) and then usleep 25ms - time passed, so you get 40fps
[02:08:12] <sh4_> *loop
[02:08:27] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[02:08:43] <Xgc> useretail: Easy.  Just install a slower CPU until you're ready to go faster.
[02:09:12] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[02:11:06] *** Quits: Akuli (~Akuli@82-203-163-134.bb.dnainternet.fi) (Quit: Akuli)
[02:11:13] *** Quits: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[02:12:21] *** Joins: vicfred (~vicfred@user/vicfred)
[02:12:31] <kplant> even better, remove the heat sink
[02:13:21] <useretail> jokes aside, are there any other solutions?
[02:14:11] *** Quits: evanextreme[away (~evan@2604:4080:1000:8150:e023:d964:d20f:a5e5) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:14:19] <Xgc> useretail: Not until you provide clear requirements. Slow and Fast are relative terms.
[02:15:02] *** Joins: Betal (~Betal@user/betal)
[02:15:11] <Xgc> useretail: What operations are you performing and what specific timing do you want to apply tto those operations?
[02:15:11] <useretail> Xgc, try it yourself: https://www.x.org/releases/individual/app/ico-1.0.5.tar.gz
[02:15:16] *** Quits: ka80 (~ka80@111.60.138.34.bc.googleusercontent.com) (Quit: Leaving)
[02:18:54] *** Quits: Grell (~john@ool-4579c605.dyn.optonline.net) (Remote host closed the connection)
[02:19:05] *** Joins: ka80 (~ka80@111.60.138.34.bc.googleusercontent.com)
[02:20:16] *** Quits: Dean (~Dean@165-73-119-36.ip.afrihost.capetown) (Quit: Lost terminal)
[02:22:03] *** Quits: terminalpusher (~terminalp@2a01:586:9b7e:1:7b2f:6557:bb5b:d32) (Remote host closed the connection)
[02:22:30] *** Quits: brad_mssw|mac (~bhouse@2601:344:4100:b490:ad4d:c216:3a82:ca64) (Quit: This computer has gone to sleep)
[02:22:31] *** Joins: oxfuxxx (~oxfuxxx@160.238.38.104)
[02:23:44] *** Quits: oxfuxxx (~oxfuxxx@160.238.38.104) (Client Quit)
[02:24:04] <clarity> stick a usleep() in there
[02:24:39] *** Joins: oxfuxxx (~oxfuxxx@139.28.218.188)
[02:25:05] *** Joins: Grell (~john@ool-4579c605.dyn.optonline.net)
[02:27:52] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 272 seconds)
[02:28:18] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:29:54] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:d08e:72ac:8747:41f3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:30:11] *** Quits: coruja (~coruja@user/coruja) (Quit: WeeChat 3.4)
[02:31:06] *** Joins: coruja (~coruja@user/coruja)
[02:32:42] *** Quits: pizdets (~pizdets@183.182.111.3) (Ping timeout: 250 seconds)
[02:33:52] *** Joins: pizdets (~pizdets@183.182.110.81)
[02:34:10] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:34:32] *** Quits: cart_ (~cart@host-78-144-125-214.as13285.net) (Quit: Konversation terminated!)
[02:35:49] *** Quits: cart_man (~rynot@host-78-144-125-214.as13285.net) (Quit: Konversation terminated!)
[02:35:52] *** Joins: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com)
[02:39:15] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[02:40:05] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:40:44] *** Quits: floatcomplex (~floatcomp@wireguard/tunneler/floatcomplex) (Quit: leaving)
[02:40:46] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545)
[02:40:55] *** Joins: pucara (~i@host14.181-1-101.telecom.net.ar)
[02:42:03] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[02:42:18] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[02:42:30] *** Quits: voidsync (~void@user/voidsync) ()
[02:43:51] *** Joins: floatcomplex (~floatcomp@wireguard/tunneler/floatcomplex)
[02:45:01] *** Quits: leah2 (~leah@vuxu.org) (Ping timeout: 240 seconds)
[02:45:22] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[02:45:35] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: taking a break.  remember kids, sekai is better than kotonoha)
[02:46:29] *** Joins: soapsudsxx (~soapsudsx@141.193.188.140)
[02:49:21] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[02:54:24] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:57:02] *** Quits: AmR (~AmREiSa@156.199.14.65) (Quit: Konversation terminated!)
[02:57:20] *** Joins: leah2 (~leah@vuxu.org)
[02:57:37] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[02:57:44] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[02:58:39] *** Quits: oxfuxxx (~oxfuxxx@139.28.218.188) (Quit: Yankies Motherfh@ckers C0[k Astroboys)
[02:59:25] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:00:46] *** Joins: oxfuxxx (~oxfuxxx@185.216.32.158)
[03:02:43] *** Joins: cul8r (~cul8r@76.113.95.199)
[03:03:20] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 272 seconds)
[03:05:21] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (Ping timeout: 250 seconds)
[03:05:25] *** Quits: Manouchehri (sid384576@id-384576.hampstead.irccloud.com) (Ping timeout: 240 seconds)
[03:05:28] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[03:05:32] *** Quits: TallonRain (sid214799@user/tallonrain) (Ping timeout: 240 seconds)
[03:05:38] *** Quits: computerquip (sid423484@user/computerquip) (Ping timeout: 260 seconds)
[03:05:44] *** Quits: glenfe (sid231748@user/glenfe) (Read error: Connection reset by peer)
[03:05:45] *** Quits: ltm (sid222641@id-222641.tinside.irccloud.com) (Read error: Connection reset by peer)
[03:05:45] *** Quits: kevinsjoberg (sid499516@id-499516.lymington.irccloud.com) (Read error: Connection reset by peer)
[03:05:46] *** Quits: snickerbockers (sid210497@id-210497.ilkley.irccloud.com) (Read error: Connection reset by peer)
[03:05:49] *** Quits: PotatoGim (sid99505@id-99505.lymington.irccloud.com) (Ping timeout: 240 seconds)
[03:05:49] *** Quits: nightstrike (uid487@id-487.uxbridge.irccloud.com) (Ping timeout: 240 seconds)
[03:05:52] *** Joins: ltm (sid222641@id-222641.tinside.irccloud.com)
[03:05:55] *** Joins: kevinsjoberg (sid499516@id-499516.lymington.irccloud.com)
[03:05:55] *** Joins: glenfe (sid231748@user/glenfe)
[03:05:56] *** Joins: snickerbockers (sid210497@id-210497.ilkley.irccloud.com)
[03:05:58] *** Quits: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com) (Read error: Connection reset by peer)
[03:05:58] *** Quits: rubin55 (sid175221@id-175221.hampstead.irccloud.com) (Read error: Connection reset by peer)
[03:05:59] *** Quits: glowcoil_ (sid3405@id-3405.tinside.irccloud.com) (Read error: Connection reset by peer)
[03:05:59] *** Quits: zx2c4 (sid204921@gentoo/developer/zx2c4) (Read error: Connection reset by peer)
[03:05:59] *** Quits: KnownSyntax (sid233169@user/knownsyntax) (Read error: Connection reset by peer)
[03:06:00] *** Quits: sunarch (uid526836@user/sunarch) (Read error: Connection reset by peer)
[03:06:00] *** Quits: wangledorf_ (sid505185@id-505185.ilkley.irccloud.com) (Read error: Connection reset by peer)
[03:06:00] *** Quits: ullbeking_ (sid5364@ilkley.irccloud.com) (Read error: Connection reset by peer)
[03:06:00] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Read error: Connection reset by peer)
[03:06:00] *** Quits: subvisor (sid502026@id-502026.helmsley.irccloud.com) (Read error: Connection reset by peer)
[03:06:01] *** Quits: englishm (sid6629@id-6629.tinside.irccloud.com) (Read error: Connection reset by peer)
[03:06:01] *** Quits: Olfodr (sid535265@user/Olfodr) (Write error: Connection reset by peer)
[03:06:01] *** Quits: placeb0 (uid283215@id-283215.lymington.irccloud.com) (Read error: Connection reset by peer)
[03:06:02] *** Quits: Teckla (uid172075@user/teckla) (Read error: Connection reset by peer)
[03:06:02] *** Quits: jakesyl__ (sid56879@id-56879.hampstead.irccloud.com) (Read error: Connection reset by peer)
[03:06:22] *** Joins: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com)
[03:06:23] *** Joins: rubin55 (sid175221@id-175221.hampstead.irccloud.com)
[03:06:23] *** Joins: Teckla (sid172075@id-172075.uxbridge.irccloud.com)
[03:06:24] *** Joins: computerquip (sid423484@id-423484.lymington.irccloud.com)
[03:06:24] *** Quits: computerquip (sid423484@id-423484.lymington.irccloud.com) (Changing host)
[03:06:24] *** Joins: computerquip (sid423484@user/computerquip)
[03:06:25] *** Joins: Olfodr (sid535265@id-535265.lymington.irccloud.com)
[03:06:27] *** Quits: Teckla (sid172075@id-172075.uxbridge.irccloud.com) (Changing host)
[03:06:27] *** Joins: Teckla (sid172075@user/teckla)
[03:06:27] *** Joins: TallonRain (sid214799@id-214799.lymington.irccloud.com)
[03:06:28] *** Quits: TallonRain (sid214799@id-214799.lymington.irccloud.com) (Changing host)
[03:06:28] *** Joins: TallonRain (sid214799@user/tallonrain)
[03:06:29] *** Quits: Olfodr (sid535265@id-535265.lymington.irccloud.com) (Changing host)
[03:06:29] *** Joins: Olfodr (sid535265@user/Olfodr)
[03:06:32] *** Joins: glowcoil_ (sid3405@2a03:5180:f::d4d)
[03:06:35] *** Joins: placeb0 (uid283215@id-283215.lymington.irccloud.com)
[03:06:40] *** Joins: KnownSyntax (sid233169@user/knownsyntax)
[03:06:53] *** Joins: subvisor (sid502026@id-502026.helmsley.irccloud.com)
[03:06:54] *** Joins: sunarch (sid526836@user/sunarch)
[03:06:55] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[03:06:58] *** Joins: Manouchehri (sid384576@id-384576.hampstead.irccloud.com)
[03:06:59] *** Joins: nightstrike (uid487@2a03:5180:f:5::1e7)
[03:06:59] *** Joins: PotatoGim (sid99505@id-99505.lymington.irccloud.com)
[03:07:03] *** Joins: jakesyl__ (sid56879@2a03:5180:f:4::de2f)
[03:07:05] *** Joins: zx2c4 (sid204921@gentoo/developer/zx2c4)
[03:07:10] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 2.8)
[03:07:10] *** Joins: englishm (sid6629@2a03:5180:f::19e5)
[03:07:10] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[03:07:10] *** Joins: wangledorf_ (sid505185@id-505185.ilkley.irccloud.com)
[03:07:16] *** Joins: sa (sid1055@2a03:5180:f::41f)
[03:07:26] *** Joins: ullbeking_ (sid5364@id-5364.ilkley.irccloud.com)
[03:07:34] *** Quits: oxfuxxx (~oxfuxxx@185.216.32.158) (Quit: Yankies Motherfh@ckers C0[k Astroboys)
[03:08:38] *** Joins: lxndrcx (~lxndrcx@219-90-189-130.ip.adam.com.au)
[03:11:20] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:12:26] *** Joins: oxfuxxx (~oxfuxxx@195.47.194.46)
[03:13:03] *** Quits: kurahaupo (~kurahaupo@pa49-182-2-50.pa.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[03:14:15] *** Joins: crashrep (~crashrep@user/crashrep)
[03:14:48] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:d08e:72ac:8747:41f3)
[03:15:51] *** Joins: inlight_ (~thomas@157.42.192.53)
[03:17:48] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:d08e:72ac:8747:41f3) (Client Quit)
[03:17:48] *** Quits: finsternis (~X@23.226.237.192) (Ping timeout: 240 seconds)
[03:18:13] <apotheon> This may be the most true and durable statement I've ever encountered about C programming: "C is very easy to write.  It's only hard to write correctly."
[03:18:23] <apotheon> - Alice Maz
[03:18:39] <apotheon> fucking *fantastic* quote
[03:18:43] *** Quits: inlight (~thomas@user/inlight) (Ping timeout: 256 seconds)
[03:21:06] <clarity> "Man who stand on toilet, high on pot"
[03:21:08] <clarity> - definitely not a pot he on
[03:22:55] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 250 seconds)
[03:23:51] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[03:24:14] *** Joins: MrFantastik (~f@2607:f598:bbda:220:3e7f:b84e:3ed2:c5bb)
[03:24:35] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Read error: Connection reset by peer)
[03:28:52] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[03:30:10] *** Quits: inlight_ (~thomas@157.42.192.53) (Quit: WeeChat 3.3)
[03:30:37] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[03:31:23] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[03:32:15] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[03:32:42] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[03:33:08] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[03:33:10] *** Joins: brad_mssw|mac (~bhouse@2601:344:4100:b490:ad4d:c216:3a82:ca64)
[03:33:22] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[03:35:41] *** Joins: quartz (~user_name@user/quartz)
[03:35:46] *** Joins: wingsorc (~wingsorc@user/wingsorc)
[03:35:53] *** Quits: fluter (~fluter@user/fluter) (Quit: WeeChat 3.3)
[03:38:18] *** Quits: Fl0pFl1p (~FlipFlop@user/fl1pfl0p) (Read error: Connection reset by peer)
[03:38:42] *** Joins: Fl0pFl1p (~FlipFlop@user/fl1pfl0p)
[03:38:44] *** Quits: sebag (~guest@91.245.82.2) (Quit: WeeChat 3.1)
[03:38:58] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[03:39:52] *** Joins: buffet3 (~buffet@buffet.sh)
[03:39:59] *** Quits: Khoyo_ (~khoyo@user/khoyo) (Ping timeout: 256 seconds)
[03:40:33] *** Quits: simontime (~simontime@irc.simonti.me) (Ping timeout: 256 seconds)
[03:40:35] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 240 seconds)
[03:40:42] *** Joins: Khoyo (~khoyo@user/khoyo)
[03:40:42] *** Joins: Dreg (~Dreg@fr33project.org)
[03:40:42] *** Joins: simontime (~simontime@irc.simonti.me)
[03:40:43] *** Joins: Bitflux (~byte@byteflux.net)
[03:40:46] *** Joins: bone_ (~bone@user/mbo)
[03:40:52] *** Joins: phroa` (~phroa@user/phroa)
[03:41:07] *** Quits: Dreg- (~Dreg@fr33project.org) (Ping timeout: 256 seconds)
[03:41:07] *** Quits: bone (~bone@user/mbo) (Ping timeout: 256 seconds)
[03:41:07] *** Quits: phroa (~phroa@user/phroa) (Ping timeout: 256 seconds)
[03:41:09] *** Quits: masoudd_ (~masoudd@user/masoudd) (Read error: Connection reset by peer)
[03:41:14] *** Joins: hirish_ (~hirish@ip85.ip-137-74-20.eu)
[03:41:24] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 252 seconds)
[03:41:33] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:aaa1:59ff:fe3c:ddb4) (Ping timeout: 250 seconds)
[03:41:41] *** Quits: hirish (~hirish@ip85.ip-137-74-20.eu) (Ping timeout: 256 seconds)
[03:41:41] *** Quits: buffet (~buffet@buffet.sh) (Ping timeout: 256 seconds)
[03:41:41] *** Quits: Byteflux (~byte@byteflux.net) (Ping timeout: 256 seconds)
[03:41:41] *** buffet3 is now known as buffet
[03:42:25] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 250 seconds)
[03:42:30] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 252 seconds)
[03:42:36] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:aaa1:59ff:fe3c:ddb4)
[03:42:51] *** Quits: ncrowl (~ncrowl@31-208-58-135.cust.bredband2.com) (Ping timeout: 250 seconds)
[03:43:38] *** Joins: ncrowl (~ncrowl@31-208-58-135.cust.bredband2.com)
[03:44:38] *** Joins: pnbeast (~pnbeast@2601:140:4280:6ce0::1)
[03:44:44] *** Quits: crashrep (~crashrep@user/crashrep) (Remote host closed the connection)
[03:44:54] *** Joins: Dreg- (~Dreg@fr33project.org)
[03:44:59] *** Joins: Rounin (~david@84.212.130.215)
[03:45:05] *** Joins: crashrep (~crashrep@user/crashrep)
[03:45:24] *** Quits: Dreg (~Dreg@fr33project.org) (Ping timeout: 240 seconds)
[03:45:24] *** Quits: immibis (~hexchat@dynamic-089-204-138-200.89.204.138.pool.telefonica.de) (Ping timeout: 240 seconds)
[03:46:14] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[03:46:18] *** Quits: omegatron (~some@p5b056cb8.dip0.t-ipconnect.de) (Quit: No Ping reply in 180 seconds.)
[03:46:21] *** Quits: orestarod (~orestarod@2a02:2149:8b20:700:2b9d:7f86:7169:61c0) (Ping timeout: 252 seconds)
[03:48:33] *** Joins: immibis (~hexchat@dynamic-089-204-138-200.89.204.138.pool.telefonica.de)
[03:49:13] *** Quits: reset (~reset@user/reset) (Quit: reset)
[03:52:06] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 272 seconds)
[03:52:11] *** Quits: brad_mssw|mac (~bhouse@2601:344:4100:b490:ad4d:c216:3a82:ca64) (Quit: Leaving)
[03:52:23] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 250 seconds)
[03:53:33] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[03:53:37] *** Quits: noose (~noose@user/noose) (Quit: Bye)
[03:53:46] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[03:53:50] *** Joins: noose (~noose@user/noose)
[03:53:58] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[03:54:08] *** Joins: Wulf (~Wulf@user/wulf)
[03:55:35] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 240 seconds)
[03:55:44] *** Joins: bindu_ (~bindu@user/bindu)
[03:56:55] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[03:56:59] *** Joins: MrMobius_ (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[03:57:08] *** Joins: fstd (~fstd@xdsl-81-173-174-103.nc.de)
[03:57:08] *** Joins: Xgc_ (~Xgc@user/xgc)
[03:57:21] *** Joins: dogbert_2 (~Bill@ip68-227-25-62.lv.lv.cox.net)
[03:57:31] *** Joins: KevinX_ (~KevinX@user/KevinX)
[03:57:33] *** Joins: immibis_ (~hexchat@dynamic-089-204-138-200.89.204.138.pool.telefonica.de)
[03:57:39] *** Joins: vicfred_ (~vicfred@user/vicfred)
[03:57:40] *** Joins: Thedarkb2 (~Thedarkb@2001:bb6:b403:e042:b812:bb3f:25c8:9173)
[03:57:42] *** bindu_ is now known as bindu
[03:57:42] *** Joins: Tang3nt-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[03:57:52] *** Joins: fbiagent_ (~fbiagent@user/fbiagent)
[03:57:53] *** Quits: seninha (~seninha@user/seninha) (Read error: Connection reset by peer)
[03:57:53] *** Quits: Neutron7 (~monopolys@96.73.191.185) (Remote host closed the connection)
[03:57:53] *** Quits: immibis (~hexchat@dynamic-089-204-138-200.89.204.138.pool.telefonica.de) (Remote host closed the connection)
[03:57:53] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Remote host closed the connection)
[03:57:53] *** Quits: moose (~moose@user/moose) (Read error: Connection reset by peer)
[03:57:53] *** Quits: vicfred (~vicfred@user/vicfred) (Read error: Connection reset by peer)
[03:57:53] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Read error: Connection reset by peer)
[03:57:53] *** Joins: Neutron7 (~monopolys@96.73.191.185)
[03:57:53] *** Quits: Thedarkb1 (~Thedarkb@86-42-4-182-dynamic.agg3.kny.prp-wtd.eircom.net) (Remote host closed the connection)
[03:58:01] *** Quits: fstd_ (~fstd@xdsl-81-173-174-103.nc.de) (Read error: Connection reset by peer)
[03:58:07] *** Joins: moose (~moose@user/moose)
[03:58:13] *** Joins: seninha (~seninha@user/seninha)
[03:58:26] *** Quits: ddoering (~Devinn@searspoint.nvidia.com) (Ping timeout: 272 seconds)
[04:00:21] *** Quits: KevinX (~KevinX@user/KevinX) (Ping timeout: 272 seconds)
[04:00:21] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Ping timeout: 272 seconds)
[04:00:21] *** Quits: Xgc (~Xgc@user/xgc) (Ping timeout: 272 seconds)
[04:00:37] *** Quits: Neutron7 (~monopolys@96.73.191.185) (Client Quit)
[04:00:58] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 272 seconds)
[04:00:58] *** Quits: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net) (Ping timeout: 272 seconds)
[04:00:59] *** Quits: Tang3nt-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Remote host closed the connection)
[04:02:16] *** Quits: cul8r (~cul8r@76.113.95.199) (Remote host closed the connection)
[04:02:23] *** KevinX_ is now known as KevinX
[04:02:57] *** Quits: vicfred_ (~vicfred@user/vicfred) (Quit: Leaving)
[04:05:36] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:05:36] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:05:36] *** Joins: wroathe (~wroathe@user/wroathe)
[04:07:13] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[04:08:02] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[04:09:12] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 272 seconds)
[04:12:08] <floatcomplex> conversely, correctly written c is easier to read and understand than most languages
[04:12:59] <floatcomplex> mostly-correct c is FAR easier to debug than mostly-correct code in most languages
[04:13:21] *** Joins: fluter (~fluter@user/fluter)
[04:13:44] <wroathe> Mostly correct is the standard I am for
[04:14:45] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[04:15:24] *** Quits: dogbert_2 (~Bill@ip68-227-25-62.lv.lv.cox.net) (Remote host closed the connection)
[04:15:40] *** Joins: dogbert_2 (~Bill@ip68-227-25-62.lv.lv.cox.net)
[04:17:07] *** Joins: acerbic (~acerbic@cs-xdata-50-86-48-151.cspire.com)
[04:18:48] *** Joins: z4kpi (~z4kpi@user/zacts)
[04:27:53] *** Quits: eroux (~eroux@102-65-81-186.ftth.web.africa) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:34:26] *** Joins: omegatron (~some@p5b056cb8.dip0.t-ipconnect.de)
[04:35:04] *** Quits: z4kpi (~z4kpi@user/zacts) (Quit: Client closed)
[04:37:18] *** Xgc_ is now known as Xgc
[04:38:03] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[04:39:43] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:5947:a168:126f:95f4)
[04:39:43] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:5947:a168:126f:95f4) (Changing host)
[04:39:43] *** Joins: skapata (~Skapata@user/skapata)
[04:40:42] *** Joins: fengdaolong (~fengdaolo@171.43.210.93)
[04:41:24] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[04:41:46] *** Joins: z4kpi (~z4kpi@user/zacts)
[04:45:20] *** Quits: figrita (~figrita@2603-7080-9801-332f-5813-eeaf-976d-830a.res6.spectrum.com) (Remote host closed the connection)
[04:45:22] *** Quits: tommygn (~devnull@142.167.143.188) (Quit: leaving)
[04:47:31] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:47:31] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:47:31] *** Joins: wroathe (~wroathe@user/wroathe)
[04:50:17] *** Quits: hub (~hub@user/hub) (Quit: -)
[04:50:50] *** Joins: hub (~hub@user/hub)
[04:51:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[04:54:20] *** Quits: moog (~moog@107.77.244.68) (Remote host closed the connection)
[04:55:08] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[04:56:49] *** Joins: moog (~moog@107.77.244.68)
[04:57:24] <chiselfuse> ideally, should i do   `s.sin_addr.s_addr = INADDR_ANY;`   or   `s.sin_addr.s_addr = htonl(INADDR_ANY);`   ?
[04:57:33] <chiselfuse> i don't know where to look to find out
[04:58:14] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[04:58:32] *** Joins: reset (~reset@user/reset)
[04:58:37] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:58:37] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:58:37] *** Joins: wroathe (~wroathe@user/wroathe)
[04:59:53] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[05:00:46] *** Quits: Terlisimo (~Terlisimo@outofband.ozna.net) (Quit: Connection reset by beer)
[05:02:01] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[05:02:36] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[05:03:40] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Client Quit)
[05:07:07] *** Joins: ferdna (~ferdna@user/ferdna)
[05:07:21] <fizzie> `man 7 ip` on some systems. Mine goes: "The `s_addr` member of `struct in_addr` contains the host interface address in network byte order. `in_addr` should be assigned one of the `INADDR_*` values (e.g., `INADDR_LOOPBACK`) using `htonl(3)` or set using [other options]."
[05:07:24] *** Quits: malloy (~jimery@116.30.220.175) (Ping timeout: 250 seconds)
[05:08:11] *** Quits: immibis_ (~hexchat@dynamic-089-204-138-200.89.204.138.pool.telefonica.de) (Remote host closed the connection)
[05:08:39] *** Joins: immibis_ (~hexchat@dynamic-089-204-138-200.89.204.138.pool.telefonica.de)
[05:09:36] *** Joins: malloy (~jimery@116.30.220.175)
[05:10:26] <fizzie> Although on the other hand, POSIX https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/netinet_in.h.html says: "The INADDR_ANY and INADDR_BROADCAST values are byte-order-neutral and thus their byte order is not specified. Many implementations have additional constants as extensions, such as INADDR_LOOPBACK, that are not byte-order-neutral. Traditionally, these constants are in host byte order,
[05:10:28] <fizzie> requiring the use of htonl() when using them in a sockaddr_in structure."
[05:12:22] *** Joins: Terlisimo (~Terlisimo@ns3077160.ip-147-135-129.eu)
[05:12:53] *** Quits: z4kpi (~z4kpi@user/zacts) (Quit: Client closed)
[05:14:36] <ka80> The book /Unix Network Programming/ by W. Richard Stevens uses htonl(INADDR_ANY).
[05:14:36] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 240 seconds)
[05:14:40] <fizzie> (Where "byte-order-neutral" just means because they're things like all-bits-one or all-bits-zero, it doesn't actually matter. At any rate, seems like using htonl is the slightly more correct option anyway.)
[05:15:11] *** Quits: fengdaolong (~fengdaolo@171.43.210.93) (Ping timeout: 256 seconds)
[05:15:46] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[05:16:16] *** Joins: fengdaolong (~fengdaolo@171.43.210.93)
[05:20:41] *** Joins: seninha (~seninha@user/seninha)
[05:24:15] *** Quits: haniaF (~haniaF@83.24.223.148.ipv4.supernova.orange.pl) (Ping timeout: 256 seconds)
[05:24:56] *** Joins: haniaF (~haniaF@79.191.92.1.ipv4.supernova.orange.pl)
[05:27:06] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[05:28:58] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[05:31:14] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:d08e:72ac:8747:41f3)
[05:33:29] *** Quits: wroathe (~wroathe@user/wroathe) (Read error: Connection reset by peer)
[05:33:42] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[05:33:42] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[05:33:42] *** Joins: wroathe (~wroathe@user/wroathe)
[05:34:36] *** Quits: haniaF (~haniaF@79.191.92.1.ipv4.supernova.orange.pl) (Ping timeout: 240 seconds)
[05:34:36] *** Quits: soapsudsxx (~soapsudsx@141.193.188.140) (Remote host closed the connection)
[05:35:03] *** Joins: haniaF (~haniaF@83.24.216.182.ipv4.supernova.orange.pl)
[05:35:10] *** Quits: random-nick (~random-ni@87.116.181.150) (Quit: quit)
[05:35:15] *** Joins: soapsudsxx (~soapsudsx@141.193.188.140)
[05:36:49] *** Joins: eddybilley (~freddieti@2a02-a454-7f89-1-61bf-b1be-73f4-2f79.fixed6.kpn.net)
[05:37:48] *** Quits: vin (~vin@user/crash) (Ping timeout: 240 seconds)
[05:38:59] *** Joins: vin (~vin@user/crash)
[05:39:00] *** Joins: myon98 (~myon98@user/myon98)
[05:39:48] *** Quits: alphabeta (~kilolympu@31.205.200.235) (Ping timeout: 240 seconds)
[05:41:18] *** Quits: eddybilley (~freddieti@2a02-a454-7f89-1-61bf-b1be-73f4-2f79.fixed6.kpn.net) (Ping timeout: 252 seconds)
[05:42:20] *** Joins: vysn (~vysn@user/vysn)
[05:43:53] *** Joins: kilolympus (~kilolympu@vpn-fn-230.net.ed.ac.uk)
[05:45:09] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Ping timeout: 252 seconds)
[05:47:27] *** Joins: drbeco (~beco@2804:351c:dd01:6600:e4a2:7a5d:e23f:1fd8)
[05:47:27] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[05:49:00] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 252 seconds)
[05:49:48] *** Joins: Thedarkb1-Deskto (~Thedarkb@2001:bb6:b403:e042:19e8:85b4:7fb1:958e)
[05:52:17] *** Quits: Thedarkb-Desktop (~Thedarkb@78.141.240.26) (Ping timeout: 256 seconds)
[05:53:51] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[05:54:31] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[05:55:52] *** Quits: quartz (~user_name@user/quartz) (Quit: WeeChat 3.4)
[06:02:34] *** Quits: alch (~alch@ca-18-202-102.service.infuturo.it) (Ping timeout: 272 seconds)
[06:03:33] *** Quits: justGhost (~justache@user/justache) (Remote host closed the connection)
[06:03:40] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:3511:c1b2:b4e7:7f1c)
[06:04:04] *** Joins: alch (~alch@ca-18-200-215.service.infuturo.it)
[06:04:13] *** Joins: justGhost (~justache@user/justache)
[06:05:16] *** Quits: drbeco (~beco@2804:351c:dd01:6600:e4a2:7a5d:e23f:1fd8) (Quit: Leaving)
[06:05:38] *** Quits: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[06:07:35] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:c9dd:301:29f7:88f5) (Ping timeout: 250 seconds)
[06:22:53] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 256 seconds)
[06:23:08] *** Quits: oxfuxxx (~oxfuxxx@195.47.194.46) (Read error: Connection reset by peer)
[06:24:46] *** Quits: kanin (~kanin@112.41.64.39) (Read error: Connection reset by peer)
[06:26:19] *** Quits: floatcomplex (~floatcomp@wireguard/tunneler/floatcomplex) (Remote host closed the connection)
[06:28:48] *** Joins: floatcomplex (~floatcomp@wireguard/tunneler/floatcomplex)
[06:38:21] *** Parts: abraxis (~abraxis@66-175-215-36.ip.linodeusercontent.com) ()
[06:39:27] *** Joins: abraxis (~abraxis@user/abraxis)
[06:40:08] *** dogbert_2 is now known as dogbert2
[06:41:33] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[06:45:56] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[06:50:20] *** Quits: pucara (~i@host14.181-1-101.telecom.net.ar) (Quit: Lost terminal)
[06:53:41] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[06:53:48] *** Quits: Charadon (~Charadon@155.138.164.183) (Ping timeout: 240 seconds)
[07:01:17] *** Joins: figrita (~figrita@2603-7080-9801-332f-5813-eeaf-976d-830a.res6.spectrum.com)
[07:07:05] *** Joins: Azem (~haise01@user/haise01)
[07:10:24] *** Quits: Emet-Selch (~haise01@user/haise01) (Ping timeout: 252 seconds)
[07:13:59] *** Quits: scaramanga (~scara@1.239.35.120) (Remote host closed the connection)
[07:15:21] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: Leaving)
[07:15:54] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 252 seconds)
[07:18:09] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[07:20:12] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[07:23:31] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:23:31] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:23:31] *** Joins: wroathe (~wroathe@user/wroathe)
[07:23:59] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[07:24:21] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[07:25:08] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[07:27:08] *** Joins: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net)
[07:28:21] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[07:30:12] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:3511:c1b2:b4e7:7f1c) (Ping timeout: 240 seconds)
[07:33:02] *** Joins: masoudd (~masoudd@user/masoudd)
[07:33:54] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:34:35] *** Quits: joaofukuda (~joaofukuk@2804:431:c7f4:a77a:575:562:5f94:3a18) (Quit: Leaving)
[07:35:09] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 256 seconds)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:32] *** Joins: evanextreme (~evan@2604:4080:1000:8150:e023:d964:d20f:a5e5)
[07:37:51] *** Joins: eddybilley (~freddieti@2a02-a454-7f89-1-dcb2-eba7-357f-202a.fixed6.kpn.net)
[07:41:36] *** Quits: bch (~bch@S01069050ca2cbf63.ok.shawcable.net) (Remote host closed the connection)
[07:41:57] *** Quits: eddybilley (~freddieti@2a02-a454-7f89-1-dcb2-eba7-357f-202a.fixed6.kpn.net) (Ping timeout: 240 seconds)
[07:43:39] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[07:48:11] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 256 seconds)
[07:48:35] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[07:54:11] *** Quits: zwr (~zwr@2804:d45:b966:fb00:5d07:4fd9:1d9:2b23) (Ping timeout: 250 seconds)
[07:54:40] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[07:54:57] *** Joins: zwr (~zwr@2804:d45:b966:fb00:2d7c:db02:239b:d206)
[07:55:54] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[08:04:51] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Ping timeout: 252 seconds)
[08:05:38] *** Joins: kurahaupo (~kurahaupo@pa49-182-2-50.pa.qld.optusnet.com.au)
[08:05:48] *** Quits: SaltHillStroller (~SaltHillS@206.223.160.26) (Ping timeout: 240 seconds)
[08:11:24] *** Joins: Betal (~Betal@user/betal)
[08:13:17] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:d08e:72ac:8747:41f3) (Ping timeout: 240 seconds)
[08:15:22] *** Quits: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net) (Quit: b1101)
[08:16:26] *** Joins: Guest17 (~Guest17@d24-55-202-166.home4.cgocable.net)
[08:16:43] *** MrMobius_ is now known as MrMobius
[08:17:12] *** Guest17 is now known as trapmau5
[08:17:57] *** evanextreme is now known as evanextreme[away
[08:18:34] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Remote host closed the connection)
[08:18:45] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[08:18:49] *** Quits: dsrt^ (~dsrt@50.235.176.163) (Remote host closed the connection)
[08:19:02] *** Joins: hinata (~hinata@2409:4042:2ea3:e72b:7811:16ab:241c:5609)
[08:20:27] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[08:20:46] *** Quits: floatcomplex (~floatcomp@wireguard/tunneler/floatcomplex) (Quit: leaving)
[08:21:16] *** Joins: Lazenca (Lazenca@user/lazenca)
[08:22:19] *** Joins: floatcomplex (~floatcomp@wireguard/tunneler/floatcomplex)
[08:22:30] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[08:23:13] *** Quits: acerbic (~acerbic@cs-xdata-50-86-48-151.cspire.com) (Read error: Connection reset by peer)
[08:26:07] *** Quits: MrFantastik (~f@2607:f598:bbda:220:3e7f:b84e:3ed2:c5bb) (Quit: Leaving)
[08:33:20] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[08:35:23] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:fd01:1255:92ec:7d9d)
[08:36:28] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 272 seconds)
[08:38:08] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[08:38:59] *** Quits: candide (~pbot3@about/c/bot/candide) (Remote host closed the connection)
[08:39:01] *** Quits: pragma- (~chaos@user/pragmatic-chaos) (Quit: Bye!)
[08:40:12] *** Joins: acerbic (~acerbic@cs-xdata-50-86-48-151.cspire.com)
[08:43:56] *** Joins: savolla (~quassel@84.44.28.28)
[08:44:41] *** Joins: candide (~pbot3@about/c/bot/candide)
[08:44:58] *** Joins: pragma- (~chaos@user/pragmatic-chaos)
[08:46:33] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[08:50:51] *** Quits: Nex8192 (~Nex8192@user/nex8192) (Ping timeout: 256 seconds)
[08:53:36] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[08:57:22] *** Quits: soapsudsxx (~soapsudsx@141.193.188.140) (Remote host closed the connection)
[08:58:29] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[08:58:38] *** Quits: kurahaupo (~kurahaupo@pa49-182-2-50.pa.qld.optusnet.com.au) (Ping timeout: 272 seconds)
[09:09:24] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:13:31] *** Joins: SachieW (~SachieW@240e:47b:478:3540:d44e:b4a5:3086:fd4a)
[09:16:58] *** Joins: eroux (~eroux@102-65-81-186.ftth.web.africa)
[09:18:36] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[09:24:03] *** Joins: kts (~kts@103.73.237.179)
[09:26:36] *** Quits: SachieW (~SachieW@240e:47b:478:3540:d44e:b4a5:3086:fd4a) (Ping timeout: 240 seconds)
[09:26:38] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[09:30:38] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Read error: Connection reset by peer)
[09:31:06] *** Joins: emhwfhrom^ (~emhwfhrom@50.235.176.163)
[09:31:45] *** Joins: smoke (~smoke@user/smoke)
[09:33:51] *** Quits: m4v (~znc@ubuntu/member/m4v) (Ping timeout: 256 seconds)
[09:34:50] *** Joins: m4v (~znc@ubuntu/member/m4v)
[09:35:54] *** Quits: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net) (Read error: Connection reset by peer)
[09:37:30] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:fd01:1255:92ec:7d9d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:38:02] *** Joins: SachieW (~SachieW@36.152.159.114)
[09:38:29] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[09:39:02] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[09:41:10] *** Quits: evanextreme[away (~evan@2604:4080:1000:8150:e023:d964:d20f:a5e5) (Quit: My laptop has gone to sleep. Bye!)
[09:42:17] *** Joins: slidercrank (~slidercra@user/slidercrank)
[09:42:55] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 240 seconds)
[09:42:58] *** Quits: SachieW (~SachieW@36.152.159.114) (Ping timeout: 272 seconds)
[09:44:58] *** Quits: smoke (~smoke@user/smoke) (Quit: Leaving)
[09:45:25] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[09:52:34] *** Quits: kts (~kts@103.73.237.179) (Quit: Konversation terminated!)
[09:52:55] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 240 seconds)
[09:55:44] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[09:57:19] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[09:59:36] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[09:59:36] *** Quits: alch (~alch@ca-18-200-215.service.infuturo.it) (Read error: Connection reset by peer)
[10:02:25] *** Joins: evanextreme (~evan@2604:4080:1000:8150:e023:d964:d20f:a5e5)
[10:04:22] *** Joins: alch (~alch@pa-18-188-134.service.infuturo.it)
[10:06:44] *** Joins: kurahaupo (~kurahaupo@pa49-182-2-50.pa.qld.optusnet.com.au)
[10:07:55] *** evanextreme is now known as evanextreme[away
[10:07:55] *** Quits: evanextreme[away (~evan@2604:4080:1000:8150:e023:d964:d20f:a5e5) (Quit: My laptop has gone to sleep. Bye!)
[10:10:15] *** Quits: lxndrcx (~lxndrcx@219-90-189-130.ip.adam.com.au) (Ping timeout: 252 seconds)
[10:11:14] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:12:41] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 256 seconds)
[10:12:44] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[10:12:44] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[10:12:44] *** Joins: wroathe (~wroathe@user/wroathe)
[10:12:47] *** Joins: lxndrcx (~lxndrcx@219-90-170-156.ip.adam.com.au)
[10:16:05] *** Joins: angelacrust (~angelacru@182.64.13.254)
[10:16:25] <angelacrust> Hi, how can I implement a Stack using a linked list?
[10:16:43] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[10:17:47] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[10:18:01] <Svitkona> well... just do it?
[10:18:12] <Svitkona> do you have any specific questions about that task?
[10:18:15] <angelacrust> Yep
[10:18:15] <apotheon> in reverse
[10:19:00] <angelacrust> I'm thinking of using the head as the point of all operations, like pushing and popping, everything from the head pointer.
[10:19:01] <angelacrust> I don't know if that's the standard approach though.
[10:19:16] <apotheon> hell no
[10:19:29] <angelacrust> Why not? Wouldn't it be much easier?
[10:19:32] <apotheon> You'd have to move every element every time you add or subtract an element.
[10:19:37] <angelacrust> Nope
[10:19:43] <angelacrust> Only the first element?
[10:19:59] <apotheon> Do you know what "linked list" means?
[10:20:04] <angelacrust> If I were to do it in reverse, then I'd have to traverse the whole linked list and it'd be very slow
[10:20:09] <apotheon> Each node has a link to the next node.
[10:20:14] <angelacrust> I know
[10:20:52] <angelacrust> That's what I'm saying. I can add and delete elements at the beginning of the list, can't I?
[10:20:54] <apotheon> If you always work with the head, you have to move the current head into the next element, which would have to get moved into the next-next element, and so on, when you add to it.
[10:21:08] <apotheon> Oh, you mean create a new node and set that as the new head.
[10:21:10] <angelacrust> Yeah
[10:21:14] <apotheon> That's what I meant by "backward".
[10:21:19] <angelacrust> Oh
[10:21:33] <apotheon> . . . as opposed to tacking something onto the tail each time.
[10:21:43] <angelacrust> Yep
[10:21:50] <angelacrust> How is it in "reverse" though?
[10:21:58] <apotheon> If you tack onto the tail, as per normal, you don't have links going back up, so yeah, you'd have to traverse the whole thing each time.
[10:22:05] <apotheon> it's normal to tack onto the tail
[10:22:15] <apotheon> for a linked list
[10:22:17] <angelacrust> Correct
[10:22:28] <angelacrust> So I'm thinking in the right direction then?
[10:22:30] <apotheon> so tacking into the head is "backward"
[10:22:52] <angelacrust> oh, right. I didn't know that
[10:23:00] <apotheon> That's how I think of it, anyway.
[10:23:07] <apotheon> Yeah, it looks like you're thinking the same way I was.
[10:23:23] <angelacrust> Yeah, and is it the standard approach?
[10:23:43] <apotheon> I don't know.  Is there a standard approach to implementing a stack as a linked list?
[10:23:59] <apotheon> I never took that class in college.
[10:24:21] <angelacrust> Not really, but I thought it'd be much better to implement a Stack using a linked list
[10:24:25] <apotheon> I just spent two seconds thinking about how a linked list works and realized the answer is to extend at the head instead of the tail.
[10:24:36] <angelacrust> As you can have freely expandable memory then
[10:24:45] <apotheon> until you run out, yeah
[10:24:56] <apotheon> So . . . yeah, I'm tired.  I should go to bed.
[10:25:00] <apotheon> Enjoy your stack.
[10:25:04] <angelacrust> good night!
[10:25:13] *** Quits: lxndrcx (~lxndrcx@219-90-170-156.ip.adam.com.au) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[10:26:16] *** Joins: hanzo (uid532183@user/hanzo)
[10:27:20] *** Joins: lxndrcx (~lxndrcx@219-90-170-156.ip.adam.com.au)
[10:28:45] *** Joins: euouae (~euouae@user/euouae)
[10:28:57] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[10:28:57] *** Quits: angelacrust (~angelacru@182.64.13.254) (Quit: Client closed)
[10:29:00] *** Joins: Enitin (~Enitin@82.102.22.84)
[10:29:05] <euouae> Hello, if arr is an array, is &arr equal to arr?
[10:29:50] *** Quits: Lazenca (Lazenca@user/lazenca) (Remote host closed the connection)
[10:30:16] *** Cyp_ is now known as Cyp
[10:30:59] *** Joins: the_lanetly_052_ (~the_lanet@194.135.169.19)
[10:31:39] <floatcomplex> no
[10:32:13] <euouae> floatcomplex can you explain please?
[10:32:25] <sham1> &arr is a pointer to the array
[10:32:44] <sham1> So if you have `int arr[]`, &arr would have the type `int (*)[]`
[10:33:16] *** Joins: jusski (~user@78-63-85-123.static.zebra.lt)
[10:33:25] <euouae> if both are cast to void*, is the value the same?
[10:33:54] <euouae> I'm asking because they're both passed to a function accepting a void* parameter
[10:36:06] *** Quits: lxndrcx (~lxndrcx@219-90-170-156.ip.adam.com.au) (Ping timeout: 252 seconds)
[10:36:06] *** Joins: phrix (~phrix@37.209.254.240)
[10:36:21] *** Parts: phrix (~phrix@37.209.254.240) ()
[10:39:06] *** Joins: angelacrust (~angelacru@182.64.13.254)
[10:39:25] <floatcomplex> they are not
[10:39:46] <angelacrust> What will be the compiler checking on this condition at line 4? https://bpa.st/EHSA
[10:40:33] <Svitkona> malloc returns a null pointer when allocation fails
[10:40:38] <Svitkona> that's what's being checked
[10:40:42] *** Parts: floatcomplex (~floatcomp@wireguard/tunneler/floatcomplex) ()
[10:41:09] <angelacrust> But I've typecasted it to `struct Node*` type?
[10:41:21] <Svitkona> erm
[10:41:23] <Svitkona> sure...
[10:41:27] <Svitkona> that can be a null pointer, too
[10:41:37] <angelacrust> how so?
[10:41:56] <Svitkona> what would you get if you tried to cast a null pointer
[10:42:12] *** Quits: kurahaupo (~kurahaupo@pa49-182-2-50.pa.qld.optusnet.com.au) (Ping timeout: 240 seconds)
[10:42:22] <angelacrust> null pointer?
[10:42:28] <Svitkona> yeah
[10:42:41] <angelacrust> Um
[10:43:07] <angelacrust> Does that mean I can use this concept to implement a stack? If it points to null, then it's "Stack Overflow"
[10:44:05] <euouae> angelacrust it's not good to mix semantics like that
[10:44:08] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Quit: WeeChat 3.4)
[10:44:16] <angelacrust> ?
[10:44:19] <euouae> semantics are the meanings you give to things
[10:44:25] <angelacrust> Oh
[10:44:53] <euouae> NULL is a fixed pointer value whose semantics say that it is an invalid pointer
[10:45:10] <sham1> Although you can use allocated storage duration objects to form a stack as in a data structure
[10:45:14] <angelacrust> Is the check at line 4 necessary though?
[10:45:37] <sham1> Yes
[10:45:47] <sham1> What isn't necessary, however, is casting the return value of malloc
[10:45:53] <dave0> angelacrust: linked list will work fine as a stack... depending on your preference, you can have   push() pop() isempty()   where push adds to the stack, pop removes from the stack, and isempty says if there is something in the stack to pop
[10:45:53] <euouae> sham1, do you know if arr and &arr have the same value?
[10:46:10] <sham1> euouae: I do know the answer. And the answer is "no'
[10:46:25] <angelacrust> Yes dave0
[10:46:28] <euouae> sham1, so there are cases where it's not true?
[10:46:30] <dave0> angelacrust: or  push() and pop()  without isempty(), and then you'd have pop() return NULL if the stack was empty
[10:46:57] <dave0> i might be able to cruft something on irc
[10:47:08] <angelacrust> ok but, I'm not sure why the check at line 4 is necessary
[10:47:12] <sham1> Vast majority of cases are like that
[10:47:33] <sham1> angelacrust: It's necessary because if you try to access your node without the check, your program will crash
[10:47:35] <euouae> angelacrust the behavior is branched, there are two possibilities and you have to code for both of them
[10:48:02] <angelacrust> Oh
[10:48:36] <euouae> like `n = random_zero_or_one(); if(n == 0) { .. } else if(n == 1) { .. }`
[10:49:04] <angelacrust> In terms of Boolean value, what is the check executing? Empty if 0?
[10:49:23] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) ()
[10:50:31] <euouae> NULL is false as a boolean and ! makes it true
[10:50:37] <euouae> every other pointer is true and ! makes it false
[10:50:39] <angelacrust> Ah
[10:50:49] <angelacrust> so `if (true)`?
[10:51:00] <euouae> that's the case if node is NULL
[10:51:06] <dave0> ,cc typedef struct node node; struct node { node *next; int data; } *stack; void push(int data) { node *n = malloc(sizeof(*n)); n->next = stack; stack = n; n->data = data; } int pop(void) { node *n = stack; stack = n->next; int data = n->data; free(n); return data; } int isempty(void) { return stack == 0; } int main(void) { push('a'); push('n'); push('g'); push('e'); push('l'); push('a'); while(!isempty()) { putchar(pop()); } }
[10:51:08] <candide> dave0: alegna
[10:51:16] <angelacrust> But the node is not NULL there?
[10:51:17] <dave0> easy as pie
[10:51:31] <euouae> angelacrust the behavior of malloc is branched; you can have either NULL or something not NULL
[10:51:35] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545)
[10:51:42] <angelacrust> hm
[10:51:55] <angelacrust> when would I get a NULL?
[10:52:04] <angelacrust> dave0 nice
[10:52:28] <dave0> i prefer an isempty()
[10:52:30] <euouae> I don't know, but malloc allocates memory, so presumably if you run out of memory, that would be one case
[10:52:54] <euouae> sham1, can you explain why &arr and arr have (potentially?) different values
[10:53:01] <Beastie> also if you overpass any of the system limits...
[10:53:29] <angelacrust> This is the stack which I had implemented a while ago for a project. https://bpa.st/GDJQ
[10:53:43] <sham1> euouae: Well I can demonstrate it, but I'm going to need to think about how to explain it
[10:53:55] <euouae> sham1 demonstrating is fine too
[10:54:03] <sham1> ,cc int arr[3] = {0}; printf("%p, %p", arr, &arr);
[10:54:05] <candide> sham1: [warning: format '%p' expects argument of type 'void *', but argument 2 has type 'int *' [-Wformat=]  warning: format '%p' expects argument of type 'void *', but argument 3 has type 'int (*)[3]' [-Wformat=]] 0x7fffffffe314, 0x7fffffffe314
[10:54:12] <euouae> angelacrust you're again mixing semantics there
[10:54:15] <sham1> Hum
[10:54:17] <angelacrust> ???
[10:54:25] <euouae> angelacrust you return INT_MIN if peek() is applied to an empty stack
[10:54:36] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[10:54:42] <euouae> however, INT_MIN is a valid value. You need another mechanism by which to report 'errors'
[10:54:44] <dave0> angelacrust: that code makes a stack in an array
[10:54:51] <angelacrust> yes, because the question asked us to do that...
[10:54:52] <angelacrust> Yep
[10:54:54] <Beastie> sham1: what does that demonstrate?
[10:54:57] <angelacrust> This time it's using a linked list
[10:54:58] *** Joins: bzng (~bzng4@2a02:60a0:102:4302:6de7:1420:3706:391e)
[10:55:05] <dave0> angelacrust: my code uses a linked list
[10:55:08] <dave0> right
[10:55:18] <angelacrust> Yeah
[10:55:26] <angelacrust> That's what I have to implement now
[10:55:33] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545) (Client Quit)
[10:55:35] <dave0> i did it for you :-)
[10:55:39] *** Joins: Enitin (~Enitin@82.102.22.85)
[10:55:52] <angelacrust> Yes, but I should also implement it on my own
[10:56:03] <sham1> Beastie: trying to demonstrate that arr and &arr may have different values
[10:56:04] <angelacrust> I can use your code as reference
[10:56:04] <dave0> the only wart is i didn't check for malloc failing... you can add   if(n == 0) perror("malloc error");   to push
[10:56:08] *** Joins: mrig (~mrig@user/mrig)
[10:56:09] <sham1> Although it's not in this case
[10:56:13] <euouae> sham1, wait, why did you say arr and &arr are different values?
[10:56:18] <euouae> Do you actually know the answer or were you guessing
[10:56:19] <sham1> Because I was mistaken
[10:56:27] <sham1> They're of different types though
[10:56:30] <euouae> sigh...
[10:56:36] <angelacrust> @enouae I do have an example to demonstrate the difference between `arr` and `&arr`
[10:56:37] <sham1> Don't you sigh at me
[10:56:38] <Beastie> normally they have the same... despite they are not being the same thing.
[10:56:50] *** Joins: iomari891 (~iomari891@105.112.138.38)
[10:57:01] <Beastie> (the same value)
[10:57:03] <euouae> sham1, it's just that I was almost inclined to believe you due to how absolute you were...
[10:57:06] *** Joins: rcoote (~rcoote@ip-176-198-113-232.um43.pools.vodafone-ip.de)
[10:57:08] <NRK> angelacrust: you shouldn't cast malloc in C, and should always check for malloc failures
[10:57:18] <Beastie> just try this
[10:57:25] <angelacrust> Yep, that's what I need to improve NRK
[10:57:42] <Beastie> ,cc int arr[3] = {0}; printf("%p, %p", arr + 3, &arr + 3);
[10:57:44] <candide> Beastie: [warning: format '%p' expects argument of type 'void *', but argument 2 has type 'int *' [-Wformat=]  warning: format '%p' expects argument of type 'void *', but argument 3 has type 'int (*)[3]' [-Wformat=]] 0x7fffffffe310, 0x7fffffffe328
[10:58:11] <sham1> That would do it, but that's again because int (*)[] and int * are different types
[10:58:26] <angelacrust> You should print the address of that location. One should move by an `arr[0]` bytes, and other `arr` bytes
[10:58:46] *** Joins: oxfuxxx (~oxfuxxx@185.156.174.4)
[10:58:46] <Beastie> that confirms that, despite having the same value, they are different things.... aren't they?
[10:58:48] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 250 seconds)
[10:58:49] <euouae> I understand that, I was asking about arr and &arr. Anyway, I think they're the same value
[10:59:08] <euouae> in particular in the context of void*
[10:59:09] <angelacrust> They are the same value at the beginning, but if you do pointer arithmetic on them, you'll get different results
[10:59:18] <NRK> i personally wouldn't use `int` for top as well. I'd use 0 as starting point and insert like this `stack->array[stack->top++] = item;`
[10:59:20] <angelacrust> (Please correct me if I'm wrong)
[10:59:22] <Beastie> euouae: again, they have the same value, but they are very different things.
[10:59:38] <sham1> I made a mistake
[11:00:09] *** Joins: lxndrcx (~lxndrcx@219-90-176-89.ip.adam.com.au)
[11:00:13] <euouae> Beastie I was asking about (void*)arr and (void*)&arr
[11:00:15] <angelacrust> NRK well, the theory said that it's better to use `-1` to initialize the stack with
[11:00:30] <angelacrust> I didn't know what else I could do
[11:00:42] <sham1> euouae: why are you in that situation in the first place may I ask?
[11:00:45] *** Joins: digilink (~digilink@user/digilink)
[11:00:53] *** Joins: bartkk (~bartkk@83.11.224.187.ipv4.supernova.orange.pl)
[11:01:05] <euouae> sham1, I'm reading someone's code, that's all, that line stood out and I wanted to make sure it's not a bug
[11:01:15] <Beastie> euouae: I'm not sure you can have &arr being 'arr' an array of void.... only being a pointer.... and if it is a pointer, both have different values.
[11:01:15] <dave0> angelacrust: isempty() makes it so there's no need for a special return value from pop()
[11:01:21] <angelacrust> yeah
[11:01:26] <sham1> It turns out that no, it's not a bug, although it's semantically confused
[11:01:40] *** glowcoil_ is now known as glowcoil
[11:01:43] <angelacrust> Can I skip that check at line 4 (the one I shared earlier) and use `isEmpty()` and `isFull()` instead?
[11:01:46] <euouae> sham1, the semantics are fine
[11:02:08] <Beastie> the first (arr) has the value of the address it is pointing to, and the second (&arr) has the address of the pointer variable itself.
[11:02:09] <euouae> sham1, It took me a very long time to understand what 'semantics' means, but recently I studied some logic and I now understand :)
[11:02:17] <dave0> angelacrust: what's the url?
[11:02:23] <angelacrust> Okay, one sec
[11:02:45] <euouae> Beastie you're mixing up pointers with arrays
[11:02:49] <angelacrust> https://bpa.st/CLKQ
[11:02:53] <sham1> Well if you have something like `void *pArr = &arr; int *intPtr = pArr;` then that's invalid and undefined behaviour, even if the actual address would end up the same as with `void *pArr = arr; int *intPtr = pArr;`
[11:03:25] *** Quits: Chaser (~Chaser@user/chaser) (Ping timeout: 240 seconds)
[11:03:38] <sham1> When you assign a pointer to void to any other object pointer, the type has to be the same as when you created the void pointer
[11:03:45] <euouae> that's not true
[11:03:58] <dave0> angelacrust: you need that check on line 4 in case malloc fails... but you just exit() if that happens so there's no point in having isfull()
[11:04:22] <Beastie> nope euouae I'm not mixing... read all my messages... you will see that I h ave explained that talking about arrays, both expressions have the same value (while being different things) and in the case arr ***is a pointer*** they even have normally completely different and unrelated values.
[11:04:27] <angelacrust> so malloc fails only when there is a memory issue?
[11:04:42] <dave0> angelacrust: yep
[11:04:52] <angelacrust> like if my computer is about to crash?
[11:05:03] *** Parts: euouae (~euouae@user/euouae) ( )
[11:05:33] <dave0> it passes to the OS and it decides what to do.. probably kill your process
[11:05:38] <angelacrust> hm
[11:05:39] *** Joins: Chaser (~Chaser@user/chaser)
[11:05:48] <Beastie> nope.... I've told you that you can be allowed only to use an amount of memory (by the administrator) and malloc sees that you are overpassing that limit... this will make malloc to return null.
[11:06:07] <angelacrust> Ah, I don't think I've conceived that clarity yet @dave0
[11:06:11] <Beastie> this doesn't necessary mean your system is about to crash.
[11:06:12] *** Joins: strajder (~strajder@user/strajder)
[11:06:13] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[11:06:29] <angelacrust> I'm finding it difficult to visualize how it would work
[11:06:58] <dave0> angelacrust: unix lets you set limits on how much memory a process can use.. exceed that and it'll kill your process
[11:07:07] *** Joins: eddybilley (~freddieti@217.119.232.174)
[11:07:13] <dave0> windows probably does something similar idk
[11:07:27] *** Quits: Natch (~natch@c-4db8e255.014-297-73746f25.bbcust.telenor.se) (Remote host closed the connection)
[11:07:33] <angelacrust> yep
[11:07:47] *** Joins: EdFletcher (~PKD@user/edfletcher)
[11:07:54] <Beastie> angelacrust: imagine that the administrator has allowed (for security reasons) each user's process to be allowed only 200Mb of ram.... if you pass that limit, malloc() will return NULL, but nothing in the system has to be at risk.
[11:08:04] <angelacrust> ohhh
[11:08:18] <angelacrust> I get it
[11:08:39] <angelacrust> Question: can I use the check at line 4 to determine whether the stack is full or not?
[11:08:40] <Beastie> there can be other processes (e.g. the web server) that are allowed gigabytes of memory to be allocated... but your processes aren't...
[11:08:49] <angelacrust> yep I got it
[11:08:55] <dave0> angelacrust: in my example program you would need hundreds of millions of elements to run out of memory
[11:09:17] <angelacrust> because if the node is null, then push the element to the stack, otherwise print the error
[11:09:29] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[11:09:42] <Beastie> dave0: or a very small limit for stack/user data for the process.
[11:09:48] <angelacrust> dave0 did you optimize it that way?
[11:10:08] <dave0> i divided 4gig of memory by 16 bytes for struct node
[11:10:29] <angelacrust> wow
[11:10:31] <dave0> a pointer and an int
[11:10:36] <dave0> should be around 16 bytes
[11:11:07] <dave0> what's a normal amount of memory these days? i'm living in the 80's where 64k was huge
[11:11:15] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 240 seconds)
[11:11:19] <angelacrust> yeah
[11:11:56] *** Joins: arinov_ (~arinov@213.194.126.155)
[11:12:13] *** Quits: ckdCreations (~ckdCreati@147.55.130.32) (Read error: Connection reset by peer)
[11:12:36] *** Quits: lxndrcx (~lxndrcx@219-90-176-89.ip.adam.com.au) (Ping timeout: 240 seconds)
[11:12:50] *** Joins: Natch (~natch@c-4db8e255.014-297-73746f25.bbcust.telenor.se)
[11:13:10] *** Joins: finsternis (~X@23.226.237.192)
[11:14:20] *** Joins: powerLien (~Jeremy@89.45.224.100)
[11:15:41] <angelacrust> dave0 why didn't you use the same check after malloc?
[11:15:53] <Beastie> dave0: in the 80s we had the vax, which was the first unix machine with 32bit addressing..... until then, the main computer to run unix was the pdp-11, with 16bit addressing.  This meant that even the kernel must fit in 64kb.
[11:16:09] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 256 seconds)
[11:16:19] <dave0> angelacrust: laziness
[11:16:23] <angelacrust> hm
[11:16:24] <Beastie> angelacrust: what do you mean with "the same test"?
[11:16:36] <angelacrust> https://bpa.st/CLKQ Beastie
[11:17:13] <Beastie> I recommend you to use
[11:17:24] *** Joins: ckdCreations (~ckdCreati@147.55.133.130)
[11:17:25] <angelacrust> okay
[11:17:31] <Beastie> node = malloc(sizeof *node);
[11:17:41] *** Joins: lxndrcx (~lxndrcx@203-214-43-85.dyn.iinet.net.au)
[11:17:48] <Beastie> but the test is ok.
[11:18:01] <angelacrust> Right
[11:18:13] <Franciman> hi, is clock() from time.h good for measuring execution times?
[11:18:25] <Franciman> or, given that i'm on linux, i should prefer gettimeofday from <sys/time.h> ?
[11:18:26] <Beastie> you don't need to initialize to NULL and then assign a value from malloc() you can initialize it with the value returned by malloc().
[11:18:40] <angelacrust> correct
[11:18:48] <Beastie> struct Node *node = malloc(sizeof *node);
[11:19:29] <angelacrust> Why is our professor initializing the node to NULL? It's clearly not the perfect way of doing things
[11:19:38] <Beastie> that should be the (almost) perfect way of writing it.
[11:20:17] <angelacrust> nice, and I want to write programs with standard coding practices
[11:20:36] <Beastie> well... the professor tries to suggest you to initialize all variables, so they have known values (the bugs arising from uninitialized variables are very difficult to pursue)
[11:21:02] <angelacrust> But they're not writing the perfect code, right?
[11:21:06] <Beastie> and the professor has'nt either to be perfect... that happens also... all of us are humans... and make mistakes.
[11:21:19] <angelacrust> Correct
[11:21:56] <Beastie> the idea is to be pragmatic... both samples (your teacher and mine) are correct.
[11:22:10] *** Joins: freep (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr)
[11:22:23] <angelacrust> but your sample is perfect
[11:22:59] <Beastie> the cast is not only unnecessary, but also will hide the error you make if you forget to #include "stdlib.h", and using a "default" declaration of malloc as int malloc(); (which is an error in 64bit architectures)
[11:23:31] *** Quits: lxndrcx (~lxndrcx@203-214-43-85.dyn.iinet.net.au) (Ping timeout: 256 seconds)
[11:23:31] <angelacrust> That's right. I will not cast malloc from now on
[11:23:36] <Beastie> so avoiding the cast makes your code more robust.
[11:23:56] <dave0> angelacrust: https://termbin.com/qb2k
[11:24:03] <dave0> i tested it on godbolt, i hope it works
[11:24:18] <angelacrust> that's a lot of new things dave0
[11:24:25] <Beastie> in case you forget to do the #include, the compiler will give you an error telling that an integer value is being converted to a pointer (which is illegal)
[11:24:52] <dave0> angelacrust: it's just what i pasted on irc, cleaned up a bit, and i added the check for malloc
[11:25:17] *** Joins: lxndrcx (~lxndrcx@219-90-190-123.ip.adam.com.au)
[11:25:33] <dave0> angelacrust: the important bits are    n->next = stack; stack = n;    for pushing a node, and    n = stack; stack = n->next;    for popping a node
[11:25:58] <dave0> push and pop should be paired, so malloc and free would be paired
[11:26:09] <angelacrust> Gotcha
[11:26:45] <angelacrust> Also, what's the use of `perr` ?
[11:26:55] <dave0> just a habit
[11:27:19] <sham1> perr, I see someone likes Hungarian notation
[11:27:23] *** Joins: lxndrcx_ (~lxndrcx@219-90-190-123.ip.adam.com.au)
[11:27:34] <dave0> it's basically the minimum error checking one could possibly do
[11:27:39] <dave0> print a message and crash
[11:27:54] <angelacrust> Oh
[11:27:59] <dave0> in this case exit
[11:28:33] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[11:28:33] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[11:28:33] *** Joins: wroathe (~wroathe@user/wroathe)
[11:29:04] <angelacrust> You have declared `int data` in the struct, but you're passing char values to the stack. Shouldn't it print the ASCII values with `printf()`?
[11:29:31] <dave0> i used putchar, you could certainly use printf("%c", pop());
[11:29:45] <angelacrust> okay
[11:29:54] <angelacrust> pop() returns a value I presume?
[11:30:00] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[11:30:08] <dave0> yeah the data that you originally pushed
[11:30:39] <angelacrust> Okay
[11:30:40] <dave0> it's an int for simplicity... i'm sure you could improve it without too much hassle
[11:30:52] <angelacrust> That's right
[11:31:09] *** Quits: lxndrcx (~lxndrcx@219-90-190-123.ip.adam.com.au) (Ping timeout: 256 seconds)
[11:32:03] *** Joins: MajorBiscuit (~MajorBisc@c-001-018-023.client.tudelft.eduvpn.nl)
[11:32:26] <Beastie> 09:59:54      <angelacrust> | pop() returns a value I presume? <- pop() returns the value of the data field at the top of the sttack, yes.
[11:32:46] <angelacrust> Got it
[11:33:24] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[11:33:28] <Beastie> it saves iit in a local variable to be able to free(the_node); and then returns its value.
[11:34:19] <angelacrust> Yeah, returning the popped value is a better approach ngl
[11:35:00] *** Quits: lxndrcx_ (~lxndrcx@219-90-190-123.ip.adam.com.au) (Ping timeout: 240 seconds)
[11:35:24] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545)
[11:35:28] *** Joins: panda88kazag (~RadimPavl@176-74-132-138.netdatacomm.cz)
[11:35:38] *** Joins: Enitin (~Enitin@82.102.22.84)
[11:35:39] <angelacrust> Franciman, I'm not sure if I do it correctly, but this is what I use in my C++ template for online contests: ` cerr << endl << "finished in " << clock() * 1.0 / CLOCKS_PER_SEC << " sec" << endl;`
[11:35:40] <angelacrust> I don't know if this is valid in C
[11:36:03] <Franciman> thanks angelacrust
[11:36:12] <angelacrust> np, you can check it
[11:36:40] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[11:38:13] *** Joins: aradesh (~aradesh@user/aradesh)
[11:42:51] *** Joins: bilbo (~bilbo@host-37-191-190-173.lynet.no)
[11:44:11] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[11:46:24] <Beastie> that's not valid in C angelacrust sorry.
[11:46:33] <Beastie> that's specific C++ code.
[11:47:05] *** Joins: xa0s (~xa0s@mab.sdf.org)
[11:47:28] *** Joins: nuxil (~nuxil@141.195.51.213)
[11:47:49] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[11:50:21] *** Joins: heiner (~Thunderbi@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[11:50:54] *** Quits: Masklin_Gurder (~joel@h-5-150-226-94.A230.priv.bahnhof.se) (Ping timeout: 252 seconds)
[11:51:24] *** Joins: Rounin (~david@84.212.130.215)
[11:52:00] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[11:53:00] *** Joins: Masklin_Gurder (~joel@h-5-150-226-94.A230.priv.bahnhof.se)
[11:53:39] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[11:59:20] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[11:59:20] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[11:59:20] *** Joins: wroathe (~wroathe@user/wroathe)
[12:01:59] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[12:02:30] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[12:02:52] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Client Quit)
[12:04:12] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[12:06:44] *** Quits: bartkk (~bartkk@83.11.224.187.ipv4.supernova.orange.pl) (Ping timeout: 272 seconds)
[12:07:10] *** Joins: cosimone (~user@93-47-231-171.ip115.fastwebnet.it)
[12:07:11] *** Joins: kurahaupo (~kurahaupo@pa49-182-2-50.pa.qld.optusnet.com.au)
[12:07:36] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[12:08:17] *** Joins: bartkk1 (~bartkk@83.8.203.168.ipv4.supernova.orange.pl)
[12:12:02] *** Quits: pnbeast (~pnbeast@2601:140:4280:6ce0::1) (Quit: WeeChat 2.7.1)
[12:12:32] *** Joins: inlight (~thomas@157.35.8.56)
[12:12:32] *** Quits: inlight (~thomas@157.35.8.56) (Changing host)
[12:12:32] *** Joins: inlight (~thomas@user/inlight)
[12:13:12] *** Quits: inlight (~thomas@user/inlight) (Max SendQ exceeded)
[12:13:59] *** Joins: inlight (~thomas@user/inlight)
[12:15:16] <Franciman> i am having trouble understanding the restrict keyword
[12:15:45] <Franciman> it is an annotation to tell the compiler that the pointer is the only way (up to pointer arithmetic) to access the data
[12:16:03] <Franciman> but ofc this means that it's the only way to access the data pointed inside the function, right?
[12:19:11] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:28:10] *** Quits: avar (avar@vm.nix.is) (Quit: Lost terminal)
[12:29:00] *** Joins: bindu (~bindu@user/bindu)
[12:29:32] *** Joins: avar (avar@vm.nix.is)
[12:31:36] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[12:32:12] *** Quits: inlight (~thomas@user/inlight) (Ping timeout: 240 seconds)
[12:32:19] *** Joins: bindu (~bindu@user/bindu)
[12:35:09] <angelacrust> @Beastie, it's working in C as well. Just need to change a few things
[12:35:28] <angelacrust> `printf("\nfinished in %.6lf secs\n", clock() * 1.0 / CLOCKS_PER_SEC);`
[12:35:31] <clarity> freep: What if your function takes multiple pointers?
[12:35:35] <clarity> Oops, sorry
[12:35:37] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:35:40] <clarity> Franciman: ^
[12:36:28] <Franciman> clarity: so it's a way to say that the arguments point to separate memory fragments?
[12:36:37] <clarity> You could say that.
[12:36:44] *** Quits: noose (~noose@user/noose) (Quit: Bye)
[12:37:05] *** Joins: noose (~noose@user/noose)
[12:37:41] *** Joins: kish` (~aqua@user/aqua)
[12:38:00] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[12:38:09] *** Joins: Dean (~Dean@user/De4n-Whit3/x-9385125)
[12:38:13] <Dean> Hello!
[12:38:15] <clarity> woof
[12:38:23] *** Joins: kish` (~aqua@user/aqua)
[12:38:53] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 256 seconds)
[12:39:33] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545)
[12:39:36] <Beastie> angelacrust: yes... but the use of the << operator to print on an ostream is reserved for C++, as it is an overloading of that operator.
[12:39:57] *** Joins: Enitin (~Enitin@82.102.22.86)
[12:40:03] <Franciman> ty clarity
[12:40:18] *** Quits: oxfuxxx (~oxfuxxx@185.156.174.4) (Ping timeout: 272 seconds)
[12:40:20] <Beastie> (C doesn't support overloading)
[12:40:40] *** Joins: pony (sid524992@smol/hors)
[12:40:46] *** Parts: pony (sid524992@smol/hors) ()
[12:41:01] <Franciman> it does support a limited form with _Generic
[12:41:03] <Franciman> :)
[12:42:40] <NRK> angelacrust: the c++ snippet is printing to stderr, printf prints to stdout. `fprintf(stderr, ...)`
[12:42:53] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[12:43:11] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Client Quit)
[12:43:54] *** Joins: voidsync (~void@user/voidsync)
[12:44:43] *** Joins: synbiose (~synbiose@user/synbiose)
[12:47:34] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[12:52:20] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 272 seconds)
[12:53:21] *** Joins: Enitin (~Enitin@82.102.22.85)
[12:55:27] *** Quits: Dean (~Dean@user/De4n-Whit3/x-9385125) (Read error: Connection reset by peer)
[12:55:40] *** Joins: Dean (~Dean@165-73-119-36.ip.afrihost.capetown)
[12:56:32] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[13:06:04] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[13:06:27] <Dean> Hello! What is the best book to learn java as a complete beginner?
[13:07:11] <tarzeau> better to not learn it, or it's off-topic
[13:08:47] <Dean> cough cough sorry i uh meant to ask that in #java
[13:13:35] *** Quits: hinata (~hinata@2409:4042:2ea3:e72b:7811:16ab:241c:5609) (Quit: Leaving)
[13:14:04] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:14:39] *** Joins: plastico (~plastico@neomutt/plastico)
[13:14:47] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[13:14:54] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:15:44] *** Joins: alphabeta (~kilolympu@vpn-fn-230.net.ed.ac.uk)
[13:16:21] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[13:16:24] *** Quits: kilolympus (~kilolympu@vpn-fn-230.net.ed.ac.uk) (Ping timeout: 272 seconds)
[13:18:36] *** Quits: kurahaupo (~kurahaupo@pa49-182-2-50.pa.qld.optusnet.com.au) (Ping timeout: 240 seconds)
[13:21:15] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 240 seconds)
[13:25:54] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 272 seconds)
[13:27:40] *** Quits: Dean (~Dean@165-73-119-36.ip.afrihost.capetown) (Changing host)
[13:27:40] *** Joins: Dean (~Dean@user/De4n-Whit3/x-9385125)
[13:31:20] <angelacrust> Yep
[13:32:34] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545)
[13:32:35] <angelacrust> I was telling them to use the expression involving the `clock()` in a valid C format...not to copy the whole thing with `<<` and other C++ code
[13:32:42] *** Quits: angelacrust (~angelacru@182.64.13.254) (Quit: Client closed)
[13:32:58] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:34:54] *** Joins: AlbertoGP (~AlbertoGP@p57a9ade3.dip0.t-ipconnect.de)
[13:35:49] *** Quits: pounce (~pounce@facebook/engineering/pounce) (Ping timeout: 240 seconds)
[13:37:01] *** Joins: nuxil_ (~nuxil@141.195.51.213)
[13:37:01] *** Quits: nuxil (~nuxil@141.195.51.213) (Read error: Connection reset by peer)
[13:41:21] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[13:43:30] *** Quits: herrhotzenplotz (~herrhotze@user/herrhotzenplotz) (Quit: Segmentation fault (core dumped))
[13:45:36] *** Joins: herrhotzenplotz (~herrhotze@user/herrhotzenplotz)
[13:52:52] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[13:52:52] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[13:52:52] *** Joins: wroathe (~wroathe@user/wroathe)
[13:53:46] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[13:54:12] *** Quits: adip_ (~adip@crd88.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[13:55:00] *** Quits: adip (~adip@crd88.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[13:55:33] *** Joins: kts (~kts@103.73.237.179)
[13:56:43] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:57:40] *** Joins: angelacrust (~angelacru@182.64.13.254)
[13:57:55] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[13:58:15] *** Joins: phrix (~phrix@46.19.193.52)
[13:58:34] <angelacrust> What have I done wrong here? https://bpa.st/7JMA
[13:58:57] *** Quits: phrix (~phrix@46.19.193.52) (Client Quit)
[13:59:03] <angelacrust> Using the same code by dave0
[13:59:15] *** Joins: phrix (~phrix@46.19.193.52)
[13:59:39] *** Quits: phrix (~phrix@46.19.193.52) (Read error: Connection reset by peer)
[13:59:44] *** Joins: phrix_ (~phrix@46.19.193.52)
[13:59:52] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[13:59:55] *** Quits: fengdaolong (~fengdaolo@171.43.210.93) (Ping timeout: 256 seconds)
[14:00:10] *** Quits: phrix_ (~phrix@46.19.193.52) (Remote host closed the connection)
[14:01:22] <dave0> angelacrust: ah let me guess it pushes the wrong number when you choose (1)  ?
[14:01:33] <angelacrust> yep, it's only printing 1
[14:01:52] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545)
[14:02:11] *** Quits: alch (~alch@pa-18-188-134.service.infuturo.it) (Ping timeout: 256 seconds)
[14:02:18] <dave0> angelacrust: line 35     push(scanf("%d", &val));    this psuhes the result of scanf, rather than the number `val`
[14:02:27] <angelacrust> oh
[14:03:18] <angelacrust> I thought `scanf()` returned the value that's being accepted by the variable
[14:03:30] <dave0> scanf returns the number of values that it read
[14:03:34] <angelacrust> oh
[14:03:35] <dave0> not the value themselves
[14:03:40] *** Joins: alch (~alch@151.36.4.130)
[14:04:13] <dave0> on a different problem.. you should probably have a check to  isEmpty()  for option (2)
[14:04:45] *** Joins: bebyx (~Thunderbi@user/bebyx)
[14:04:51] *** Joins: hinata (~hinata@2409:4042:2ea3:e72b:7811:16ab:241c:5609)
[14:04:59] <angelacrust> Correct
[14:05:03] <dave0> option 2 pops the value.. you need to make sure there is a value for it to pop or your program will crash
[14:05:21] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545) (Client Quit)
[14:05:36] <dave0> if(isEmpty()) printf("sorry the stack is empty"); else printf("removed %d from stack", pop());
[14:06:20] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[14:06:40] <angelacrust> Yep
[14:07:17] <angelacrust> https://bpa.st/X3CA
[14:07:20] <angelacrust> this is what it looks like now
[14:07:43] <dave0> line 41 you left out the ()'s
[14:08:04] <dave0> need ()'s to call the function
[14:08:04] *** Quits: trapmau5 (~Guest17@d24-55-202-166.home4.cgocable.net) (Quit: Client closed)
[14:08:07] *** Quits: kts (~kts@103.73.237.179) (Ping timeout: 256 seconds)
[14:08:12] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[14:08:17] <angelacrust> Oh rip
[14:08:27] <angelacrust> it worked correctly though
[14:08:31] *** Joins: kts (~kts@103.73.237.2)
[14:08:35] <dave0> by accident :-)
[14:09:38] <angelacrust> Must be a bug in the compiler?
[14:09:42] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[14:10:13] <NRK> ,tias
[14:10:13] <candide> "Try It And See" may work in other languages, but not in C due to the nature of undefined behavior/unportable code. Such coding-by-experimentation often leads to situations such as "But it worked fine earlier!" and/or "But it worked on my machine!". https://ramblings.implicit.net/c/2014/04/20/c-is-not-a-try-it-and-see-language.html
[14:10:24] <angelacrust> hm
[14:10:26] <dave0> angelacrust: no bug, it's a dubious feature of c
[14:10:33] <NRK> alot of shit in C works by accident
[14:10:39] <dave0> isEmpty is a pointer to a function
[14:10:42] <angelacrust> thanks, I didn't know that
[14:10:46] <angelacrust> Oh correct
[14:11:01] <NRK> in your case, you're comparing if the function pointer is NULL or not
[14:11:14] <dave0> whether that makes sense is a different story
[14:11:30] <angelacrust> yeah...got it
[14:11:33] *** Joins: Atque (~Atque@user/atque)
[14:12:25] <angelacrust> thanks everyone
[14:12:25] *** Joins: oxfuxxx (~oxfuxxx@195.47.194.46)
[14:12:26] *** Joins: phrix (~phrix@46.19.193.52)
[14:12:30] <angelacrust> I learned a lot today
[14:12:35] <dave0> no worries mate!
[14:12:46] <NRK> btw, i wouldn't exit with 0 if malloc failed
[14:13:20] <NRK> because that's more or less saying, "hey, everything worked!"
[14:14:08] *** Quits: phrix (~phrix@46.19.193.52) (Client Quit)
[14:14:09] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[14:17:24] *** Quits: hinata (~hinata@2409:4042:2ea3:e72b:7811:16ab:241c:5609) (Ping timeout: 240 seconds)
[14:17:39] *** Joins: hinata (~hinata@2409:4042:e09:d31f:7811:16ab:241c:5609)
[14:17:41] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[14:17:42] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:18:53] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[14:19:44] *** Quits: oxfuxxx (~oxfuxxx@195.47.194.46) (Ping timeout: 272 seconds)
[14:21:16] *** Quits: rcoote (~rcoote@ip-176-198-113-232.um43.pools.vodafone-ip.de) (Quit: Konversation terminated!)
[14:22:06] <angelacrust> hm
[14:22:29] *** Quits: baltazar (~baltazar@178-164-240-26.pool.digikabel.hu) (Remote host closed the connection)
[14:23:15] <angelacrust> `exit(0)` is to end the switch-case operation btw
[14:25:06] *** Joins: kish` (~aqua@user/aqua)
[14:25:22] <dave0> it doesn't matter
[14:25:38] <dave0> there's no fancy tricks, it's just a way to end the program
[14:26:46] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:26:59] <angelacrust> final form: https://web.libera.chat/
[14:27:01] <fizzie> Presumably that comment was about `if(n == 0) { perror("malloc error"); exit(0); }` rather than the other exit(0).
[14:27:01] <angelacrust> oops
[14:27:10] <angelacrust> final form: https://bpa.st/6IEQ
[14:27:21] <angelacrust> Ah I see
[14:27:27] <fizzie> (0 is a perfectly reasonable status code when terminating due to being told so.)
[14:28:27] <dave0> i normally just let it crash
[14:28:27] *** Joins: Akuli (~Akuli@82-203-164-188.bb.dnainternet.fi)
[14:28:47] *** Quits: placeb0 (uid283215@id-283215.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[14:28:47] <dave0> bad style i guess :-)
[14:29:40] <NRK> dave0: it could matter depending on the context :) `cmd1 && cmd2`
[14:29:46] *** Joins: baltazar (~baltazar@195.199.251.47)
[14:30:23] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[14:30:27] *** Quits: Akuli (~Akuli@82-203-164-188.bb.dnainternet.fi) (Client Quit)
[14:30:43] *** Joins: Akuli (~Akuli@82-203-164-188.bb.dnainternet.fi)
[14:30:52] *** Quits: Akuli (~Akuli@82-203-164-188.bb.dnainternet.fi) (Client Quit)
[14:31:11] <dave0> i couldn't be bothered writing out exit(EXIT_FAILURE); you're lucky i put anything at all! lol
[14:31:19] *** Joins: inlight (~thomas@157.35.8.56)
[14:31:19] *** Quits: inlight (~thomas@157.35.8.56) (Changing host)
[14:31:19] *** Joins: inlight (~thomas@user/inlight)
[14:31:56] *** Quits: inlight (~thomas@user/inlight) (Max SendQ exceeded)
[14:32:03] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[14:32:31] <dave0> besides if you want proper error handling it's a lot more work, thank you c.. running out of memory here might not be fatal.. you could print "sorry ran out of memory, pick a different option"
[14:32:39] *** Joins: inlight (~thomas@157.35.8.56)
[14:32:40] *** Quits: inlight (~thomas@157.35.8.56) (Changing host)
[14:32:40] *** Joins: inlight (~thomas@user/inlight)
[14:32:50] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[14:33:14] *** Quits: inlight (~thomas@user/inlight) (Max SendQ exceeded)
[14:33:50] *** Joins: inlight (~thomas@157.35.8.56)
[14:33:50] *** Quits: inlight (~thomas@157.35.8.56) (Changing host)
[14:33:50] *** Joins: inlight (~thomas@user/inlight)
[14:34:02] <dave0> probably the least taught part in school.. error handling
[14:34:11] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[14:34:47] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[14:35:17] *** Joins: Enitin (~Enitin@82.102.22.85)
[14:36:00] *** Joins: varad (~varad@45.249.86.162)
[14:37:14] <dave0> angelacrust: oh dear
[14:37:28] <angelacrust> hmm
[14:37:30] <dave0> angelacrust: printNodes() is a bit dodgy
[14:37:48] <angelacrust> why so
[14:37:51] *** Joins: shivesh (~shivesh@user/shivesh)
[14:37:54] <dave0> angelacrust: you want a temporary variable to walk the stack
[14:38:20] <dave0> angelacrust: stack = stack->next; removes a node from the stack but doesn't free it
[14:38:29] <angelacrust> Oh
[14:38:43] <angelacrust> I'm printing it like a linked list tho
[14:38:46] <dave0> angelacrust: try running your program, add a few things to the stack, and choose option 3 twice
[14:39:00] *** Quits: bzng (~bzng4@2a02:60a0:102:4302:6de7:1420:3706:391e) (Ping timeout: 240 seconds)
[14:39:05] <angelacrust> okay
[14:39:31] <angelacrust> Yep, it's working
[14:39:49] <angelacrust> btw, I'm not trying to free the stack
[14:40:03] <angelacrust> I just want to print all the nodes without having to pop them
[14:40:28] <dave0> that's what i mean... if you do option 3 it will print and empty the stack.. if you choose 3 again it wont print anything
[14:40:39] <angelacrust> `peek()` for doing what you said dave0
[14:40:50] <angelacrust> it's printing the same stack
[14:41:37] <angelacrust> Doing option 4 twice will lead to an error
[14:41:58] <dave0> option 4, which calls peek(), prints and empties the stack .. i assume that what it's supposed to do
[14:42:05] <angelacrust> yes
[14:42:07] *** Quits: mountaingoat (~mountaing@user/mountaingoat) (Ping timeout: 256 seconds)
[14:42:15] <dave0> but option 3 shouldn't empty the stack, but it does
[14:42:36] <angelacrust> it is working on my machine though
[14:42:47] <dave0> no
[14:43:09] <dave0> unless you are trying to copy the operation of option 4
[14:43:18] <dave0> (why do you need 2 menu items that does the same thing?)
[14:43:28] <dave0> i assume printNodes shouldn't empty the stack
[14:44:26] *** Quits: varad (~varad@45.249.86.162) (Ping timeout: 272 seconds)
[14:44:35] *** Joins: bzng (~bzng4@2a02:60a0:102:4302:6de7:1420:3706:391e)
[14:44:39] <angelacrust> I thought our professor would give me a ZERO if he found out that the stack is getting emptied on calling `peek()` and I wanted to make things easier for him, so I added an extra function which does not empty the stack...
[14:45:08] <dave0> the code for printNodes empties the stack ... i assume that's an error
[14:45:09] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Remote host closed the connection)
[14:46:18] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[14:46:28] <angelacrust> https://ibb.co/PYG8mPv
[14:47:01] <dave0> oooh
[14:47:03] <dave0> far out
[14:47:08] <angelacrust> ?
[14:47:15] <dave0> i didn't notice it was shadowing the global variable `stack
[14:47:19] <dave0> `stack`
[14:47:24] <angelacrust> hm
[14:47:31] <angelacrust> yeah
[14:47:38] <dave0> whoops!
[14:47:49] <angelacrust> haha, it happens
[14:47:56] <angelacrust> thanks for your help
[14:48:00] <dave0> :-)
[14:48:10] *** Joins: seninha (~seninha@user/seninha)
[14:48:13] <angelacrust> I should go to bed now. Good night!
[14:48:16] <dave0> nite
[14:48:36] *** Quits: angelacrust (~angelacru@182.64.13.254) (Quit: Client closed)
[14:52:06] *** Joins: Nex8192 (~Nex8192@user/nex8192)
[14:52:12] *** Quits: eddybilley (~freddieti@217.119.232.174) (Ping timeout: 240 seconds)
[14:54:03] *** Joins: varad (~varad@45.249.86.162)
[14:55:45] *** Joins: mountaingoat (~mountaing@user/mountaingoat)
[14:57:53] <clarity> On Error GoTo BED
[14:57:57] * clarity quacks
[15:06:09] *** Joins: random-nick (~random-ni@87.116.179.129)
[15:06:31] *** Joins: eddybilley (~freddieti@217.119.232.174)
[15:07:08] *** Quits: random-nick (~random-ni@87.116.179.129) (Client Quit)
[15:12:12] *** Quits: jusski (~user@78-63-85-123.static.zebra.lt) (Ping timeout: 240 seconds)
[15:14:50] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 272 seconds)
[15:15:17] *** Quits: kts (~kts@103.73.237.2) (Quit: Konversation terminated!)
[15:16:07] *** Joins: adip (~adip@dia24.neoplus.adsl.tpnet.pl)
[15:16:09] *** Joins: adip_ (~adip@dia24.neoplus.adsl.tpnet.pl)
[15:16:41] *** Quits: inlight (~thomas@user/inlight) (Ping timeout: 256 seconds)
[15:17:23] *** Joins: Enitin (~Enitin@82.102.22.85)
[15:19:49] *** Quits: Masklin_Gurder (~joel@h-5-150-226-94.A230.priv.bahnhof.se) (Quit: Konversation terminated!)
[15:23:42] *** Quits: kriss (~kriss@213.239.83.90) (Ping timeout: 272 seconds)
[15:27:36] *** Quits: MajorBiscuit (~MajorBisc@c-001-018-023.client.tudelft.eduvpn.nl) (Ping timeout: 252 seconds)
[15:30:30] <fizzie> dave0: `abort()` is exactly as many characters as `exit(0)`.
[15:32:04] <dave0> i'll use it next time :-)
[15:32:25] <dave0> normally i just leave it out and it crashes from dereferencing NULL
[15:32:32] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:33:18] *** Joins: csrf (~csrf@user/csrf)
[15:33:42] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[15:33:42] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a131:11ab:1111:d3c5) (Quit: Quit)
[15:33:59] <fizzie> Well, fair enough, `` is even shorter.
[15:34:07] <dave0> :-)
[15:34:28] *** Quits: foul_owl (~kerry@23.82.193.104) (Ping timeout: 272 seconds)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:39:10] *** Joins: luizfrds (~Luiz@152.250.243.147)
[15:41:37] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[15:41:54] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[15:44:33] *** Joins: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com)
[15:45:05] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545)
[15:45:13] *** Joins: kriss (~kriss@213.239.83.90)
[15:46:00] *** Joins: backes (~backes@85.195.206.214)
[15:47:54] *** Joins: defiant (~defiant@user/defiant)
[15:48:05] *** Joins: MajorBiscuit (~MajorBisc@c-001-013-023.client.tudelft.eduvpn.nl)
[15:48:59] *** Joins: foul_owl (~kerry@23.82.193.88)
[15:49:02] *** Quits: varad (~varad@45.249.86.162) (Read error: Connection reset by peer)
[15:49:08] <backes> hello, are enums allowed to have multiple identifiers per value on the same line? https://bpa.st/JH3Q
[15:49:17] *** Joins: varad (~varad@45.249.86.162)
[15:50:43] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[15:54:45] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 272 seconds)
[15:55:57] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 240 seconds)
[15:56:32] <dave0> backes: that looks like a syntax error .. what is __CLOCK_AVAILABILITY it seems to be on every line
[16:00:52] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:01:03] <backes> it's from time.h on macos
[16:01:28] <backes> oh I see, it uses `enumerator_attributes` feature
[16:01:42] <backes> https://bpa.st/6IJQ
[16:04:37] *** Joins: random-nick (~random-ni@87.116.167.125)
[16:04:41] <kevinsjoberg> clear
[16:04:50] <kevinsjoberg> Oops, wrong chat.
[16:10:13] *** Joins: bindu (~bindu@user/bindu)
[16:14:54] *** Joins: FreEm1nD (~FreEm1nD@mail.guarapari.store)
[16:19:15] *** Joins: cyphics (~cyphix@user/cyphics)
[16:21:35] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 256 seconds)
[16:23:02] *** Joins: cassepipe (~cassepipe@81-66-251-102.rev.numericable.fr)
[16:23:38] <cassepipe> Hi ! What do tools do you use to generate headers automatically from source files ?
[16:24:40] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[16:24:45] *** Quits: hinata (~hinata@2409:4042:e09:d31f:7811:16ab:241c:5609) (Quit: Leaving)
[16:25:27] *** Joins: Enitin (~Enitin@82.102.22.85)
[16:26:06] <sham1> Something that can output text in response to input data
[16:26:15] <sham1> So… little bit more specific please
[16:26:32] <sham1> What kind of a tool are you looking for
[16:26:40] *** Joins: crashrep (~crashrep@user/crashrep)
[16:26:58] <sham1> What kinds of source files?
[16:30:22] <cassepipe> c files
[16:31:13] <cassepipe> Or automatically add the relevant include from .h that are in the project
[16:31:24] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 240 seconds)
[16:31:54] <sham1> Okay. Now, one problem you'd face is that you'd want to know what to put into the header file, and making a program do it probably isn't better than doing it by hand
[16:32:02] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[16:33:06] <cassepipe> Basically I want a tool that will look at my source files, generates a headers with all the function prototypes, one per source file and look at .h that are already there and add the relevant includes in the source files.
[16:33:12] *** Joins: doorzan (~doorzan@2800:200:f540:73::c)
[16:33:42] *** Quits: doorzan (~doorzan@2800:200:f540:73::c) (Changing host)
[16:33:42] *** Joins: doorzan (~doorzan@user/doorzan)
[16:34:32] *** Quits: baltazar (~baltazar@195.199.251.47) (Quit: leaving)
[16:35:35] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[16:36:15] *** Joins: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[16:38:27] <backes> cassepipe: try makeheaders
[16:38:44] <cassepipe> backes: I have tried it but it is little rigid
[16:38:59] <cassepipe> I can make it work when I have everything in a directory
[16:39:46] <cassepipe> But if I have an inc directory wiht a bunch of .h files to define the interface (structs, types...)  it does not play well with those
[16:39:48] *** Quits: immibis_ (~hexchat@dynamic-089-204-138-200.89.204.138.pool.telefonica.de) (Remote host closed the connection)
[16:40:02] <cassepipe> I read the doc but it is still not crystal clear to me how to do it
[16:40:41] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[16:41:19] *** Joins: immibis (~hexchat@dynamic-089-204-138-200.89.204.138.pool.telefonica.de)
[16:41:33] <cassepipe> I have tried modifying the source code with some humble results but it is a bit too much for the nood I am
[16:43:23] *** Quits: ncrowl (~ncrowl@31-208-58-135.cust.bredband2.com) (Ping timeout: 256 seconds)
[16:43:40] *** Quits: voidsync (~void@user/voidsync) (Remote host closed the connection)
[16:44:56] *** Joins: ncrowl (~ncrowl@83-233-50-48.cust.bredband2.com)
[16:47:18] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:fd91:b5ed:c30f:b9c2)
[16:47:18] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:fd91:b5ed:c30f:b9c2) (Changing host)
[16:47:18] *** Joins: skapata (~Skapata@user/skapata)
[16:48:25] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[16:49:44] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[16:54:01] *** Joins: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net)
[16:54:27] *** Joins: bick (~kotaman@94.46.203.147)
[16:55:35] *** Quits: cassepipe (~cassepipe@81-66-251-102.rev.numericable.fr) (Quit: Leaving)
[16:59:20] *** Quits: alphabeta (~kilolympu@vpn-fn-230.net.ed.ac.uk) (Ping timeout: 272 seconds)
[17:00:00] *** Quits: ncrowl (~ncrowl@83-233-50-48.cust.bredband2.com) (Ping timeout: 252 seconds)
[17:01:17] *** Quits: masoudd (~masoudd@user/masoudd) (Quit: Leaving)
[17:01:45] *** Joins: ncrowl (~ncrowl@83-233-50-49.cust.bredband2.com)
[17:02:22] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:3130:efab:19e7:e707)
[17:02:49] *** Joins: kilolympus (~kilolympu@vpn-fn-230.net.ed.ac.uk)
[17:03:49] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[17:05:08] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[17:05:13] *** Quits: Dean (~Dean@user/De4n-Whit3/x-9385125) (Ping timeout: 256 seconds)
[17:05:25] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[17:05:32] *** Joins: jamesmartinez (~pepsi@2a02:4780:1:1::1:a856)
[17:08:44] *** Quits: acerbic (~acerbic@cs-xdata-50-86-48-151.cspire.com) (Read error: Connection reset by peer)
[17:09:00] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[17:12:03] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[17:12:48] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:15:19] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[17:15:20] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545)
[17:17:21] *** Quits: backes (~backes@85.195.206.214) (Quit: leaving)
[17:17:24] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 240 seconds)
[17:17:27] *** Joins: stefanos82 (~stefanos8@213-145-144.netrun.cytanet.com.cy)
[17:17:44] *** Joins: Syroth (~Syroth@pool-96-244-212-50.bltmmd.fios.verizon.net)
[17:22:17] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[17:22:24] *** Joins: baltazar (~baltazar@84-236-101-128.pool.digikabel.hu)
[17:24:36] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[17:25:18] *** Joins: oakyy (~oaky@h-155-4-161-203.A518.priv.bahnhof.se)
[17:25:39] *** Joins: aqua (~aqua@user/aqua)
[17:27:12] <stefanos82> greetings everyone. Is there any repository dedicated to C best practices with various examples?
[17:27:22] *** Joins: acerbic (~acerbic@cs-xdata-50-86-48-151.cspire.com)
[17:28:30] *** aqua is now known as kish
[17:28:35] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 240 seconds)
[17:30:10] <NRK> c-faq maybe
[17:31:21] *** Quits: defiant (~defiant@user/defiant) (Quit: defiant)
[17:34:10] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 272 seconds)
[17:34:42] *** Joins: terminalpusher (~terminalp@2a01:586:17b8:1:818f:ce01:8c61:94dd)
[17:34:48] <clarity> stefanos82: https://code.jsoftware.com/wiki/Essays/Incunabulum
[17:36:05] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[17:38:59] <stefanos82> sense of humor clarity?
[17:39:19] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Quit: the #end of the abyss)
[17:39:26] <stefanos82> NRK: such channel does not exist
[17:39:59] *** Quits: FreEm1nD (~FreEm1nD@mail.guarapari.store) (Quit: Leaving)
[17:40:00] <alch> stefanos82: NRK is referring to http://c-faq.com/
[17:40:35] <stefanos82> ah I see
[17:40:46] <rcf> stefanos82: https://wiki.sei.cmu.edu/confluence/display/c/SEI+CERT+C+Coding+Standard is useful.
[17:40:59] <stefanos82> rcf: I am currently reading it
[17:41:21] <stefanos82> but wanted to see whether there's a github repository with active Discussions
[17:41:57] <alch> not that I'm aware of
[17:42:05] <stefanos82> no worries
[17:43:20] *** Joins: Dean (~Dean@165-73-119-36.ip.afrihost.capetown)
[17:43:48] *** Quits: stefanos82 (~stefanos8@213-145-144.netrun.cytanet.com.cy) (Quit: Leaving)
[17:44:38] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[17:44:57] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[17:47:42] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:48:47] <sokan> https://upload.vaa.red/AQKb9#b2dbfbf0b3bbb74fb99ab1f19694ba60 <-- How can I assign in this strict a character/sequence in the cases of name and sequence? Asking since they are pointers.
[17:48:50] <candide> Title of sokan's link: upload vaa – client-side encrypted file upload
[17:49:37] <sokan> strcpy (protein1.name, "1hfr") is valid?
[17:49:59] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Ping timeout: 256 seconds)
[17:50:48] <nuxil_> you need to malloc the size of name. then you can copy.
[17:51:51] *** Quits: gildasio (~gildasio@gateway/tor-sasl/gildasio) (Remote host closed the connection)
[17:51:54] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 272 seconds)
[17:52:50] <sokan> if I don't strcpy?
[17:54:21] *** Quits: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:55:23] *** Joins: Enitin (~Enitin@82.102.22.85)
[17:56:05] <nuxil_> foobar.name = malloc(len, sizeof(char)); memcpy(foobar.name,  "test", len * sizeof(char)); ?
[17:56:32] <clarity> sokan: Assign a pointer to the sequence.
[17:56:44] <sokan> clarity: how do you mean?
[17:56:51] <clarity> foo.name = ptr;
[17:56:51] <sokan> with &?
[17:56:59] <sokan> ooh ok
[17:57:06] <sokan> foo.name = &ptr right?
[17:57:19] *** Joins: gildasio (~gildasio@gateway/tor-sasl/gildasio)
[17:58:33] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[17:58:33] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[17:58:33] *** Joins: wroathe (~wroathe@user/wroathe)
[17:59:19] *** Quits: MajorBiscuit (~MajorBisc@c-001-013-023.client.tudelft.eduvpn.nl) (Ping timeout: 256 seconds)
[17:59:28] *** Quits: alch (~alch@151.36.4.130) (Read error: Connection reset by peer)
[18:00:03] <NRK> rfc: I clicked on "memory management" and the first tip says "do not access freed memory".
[18:01:11] <NRK> .oO( well gee, thanks captain obvious! )
[18:01:24] *** Joins: shugo (~shugo@user/shugo)
[18:01:35] *** Parts: shugo (~shugo@user/shugo) ()
[18:01:41] *** Joins: shugo (~shugo@user/shugo)
[18:02:03] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[18:02:14] <nuxil_> lol
[18:02:48] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[18:03:03] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[18:04:00] *** Joins: alch (~alch@151.38.73.218)
[18:04:07] <clarity> sokan: foo.name = "hello";
[18:05:14] *** Joins: cassepipe (~cassepipe@81-66-251-102.rev.numericable.fr)
[18:05:54] *** Joins: sebag (~guest@91.245.82.2)
[18:06:35] <cassepipe> Is there a way to see how much time is spent in each function when executing a program ?
[18:07:37] *** Joins: maroloccio (~marolocci@pousada3ja.mma.com.br)
[18:07:38] *** Joins: pucara (~i@host14.181-1-101.telecom.net.ar)
[18:07:39] <NRK> perf on linux
[18:08:25] <sokan> clarity: https://bpa.st/GZWA so basically with this I have asigned vales to all struct variables
[18:08:38] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[18:08:38] *** Quits: manx (xuew@p200300e18f3aa800022215fffe03cf97.dip0.t-ipconnect.de) (Quit: manx)
[18:09:25] *** Joins: bebyx (~Thunderbi@user/bebyx)
[18:10:06] *** Joins: masoudd (~masoudd@user/masoudd)
[18:10:25] <cassepipe> NRK: Will look into it thanks
[18:11:04] <nuxil_> sokan, why not just use a static array in your struct {... name[32] ... } that way you dont need to deal with malloc|pointers etc. foo.name="somename"; ofc set the size to what  the longest protine name is.
[18:11:53] *** Joins: manx (xuew@p57b5c023.dip0.t-ipconnect.de)
[18:11:54] <sokan> It's a specific question and I'm trying to deal with the pointers :/
[18:12:02] <nuxil_> oki
[18:12:11] <sokan> malloc is probably the answer
[18:14:18] <rkta> NRK: Are you N-R-K on github?
[18:15:17] <NRK> o/
[18:15:19] <NRK> sup
[18:15:28] <nuxil_> NRK  its the name of our national tv channel :p
[18:15:43] <rkta> sup, nice to meet another w3m user :)
[18:15:43] <NRK> ahh, found the norwayman
[18:15:50] <nuxil_> :D
[18:15:54] <sokan> nuxil_: I can only assign a specific size with malloc before assigning the specfic chracter/string?
[18:16:21] *** Quits: bzng (~bzng4@2a02:60a0:102:4302:6de7:1420:3706:391e) (Read error: Connection reset by peer)
[18:17:16] <NRK> rkta: mostly use it for rss -> w3m. sometimes some articles will have images and it's nice to be able to view them.
[18:17:32] <nuxil_> sokan, you malloc the needed size for your string. if you later need to change that you can use realloc.
[18:17:50] <nuxil_> something like. foobar.name = malloc(strlen("mytest")+1, sizeof(char));
[18:18:48] <clarity> There is no one right answer, you do what you need to do
[18:18:57] <nuxil_> ^^
[18:18:59] <clarity> Sometimes malloc per string is right but often that's just wasteful
[18:21:16] <nuxil_> indeed
[18:23:51] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:24:58] *** Joins: X-Scale` (~ARM@135.232.28.37.rev.vodafone.pt)
[18:27:05] *** Quits: shugo (~shugo@user/shugo) (Quit: WeeChat 3.0.1)
[18:27:27] *** Quits: X-Scale (~ARM@31.22.160.28) (Ping timeout: 252 seconds)
[18:27:27] *** X-Scale` is now known as X-Scale
[18:28:40] *** Joins: admal (~admal@gateway/tor-sasl/admal)
[18:29:24] *** Quits: savolla (~quassel@84.44.28.28) (Ping timeout: 240 seconds)
[18:29:28] *** Joins: shugo (~shugo@user/shugo)
[18:30:00] *** Joins: oscurochu (~oscurochu@2603:9000:c202:1034:5991:474:8074:a98a)
[18:30:28] <oscurochu> im learning c, how do i properly allocate enough memory for x? https://dpaste.com/8DJK62TP9
[18:31:20] <NRK> `malloc(bytes)`
[18:31:44] <gtlsgamr> Hello. I am writing a program from K&R and i would like feedback on how I can improve it. http://0x0.st/o8O6.c
[18:31:49] <oscurochu> i realize i have the * in the wrong place, it should be lval *lval_front(...) lol
[18:32:03] <gtlsgamr> It basically converts Hex input to Decimal and accounts for 0x or 0X at the beginnig
[18:32:12] *** Quits: panda88kazag (~RadimPavl@176-74-132-138.netdatacomm.cz) (Ping timeout: 240 seconds)
[18:32:36] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 240 seconds)
[18:33:16] *** Quits: terminalpusher (~terminalp@2a01:586:17b8:1:818f:ce01:8c61:94dd) (Remote host closed the connection)
[18:33:21] *** Quits: Dean (~Dean@165-73-119-36.ip.afrihost.capetown) (Ping timeout: 250 seconds)
[18:34:02] *** Joins: X-Scale` (~ARM@92.250.101.104)
[18:34:03] <oscurochu> NRK: how do i get the number of bytes? lval is a struct that can be recursive, and is pretty much an array with a variable number of bytes
[18:34:06] <clarity> gtlsgamr: Seems too complicated.  For example the whole power thing
[18:34:33] <gtlsgamr> Then how do I get power without calling math.h?
[18:34:49] <oscurochu> clarity: that may be an example he pulled from the book? i haven't read that book in a while so i can't be sure.
[18:34:51] <clarity> Why do you need power?
[18:35:06] <gtlsgamr> to convert hex to decimal
[18:35:18] <gtlsgamr> 16^n + digit
[18:35:21] <gtlsgamr> then you repeat
[18:35:28] <clarity> You definitely don't need power for that
[18:35:42] *** Quits: X-Scale (~ARM@135.232.28.37.rev.vodafone.pt) (Ping timeout: 252 seconds)
[18:35:44] <gtlsgamr> then how?
[18:35:47] <oscurochu> whats the difference between ^ and pow?
[18:35:56] <clarity> One hex digit is four bits.  Just shift left and make room for the new bottom 4.
[18:35:59] <clarity> Also what is z for?
[18:36:04] <clarity> It seems to be a copy of s?
[18:36:08] *** X-Scale` is now known as X-Scale
[18:36:20] <clarity> Copying the string seems pointless
[18:36:48] <gtlsgamr> clarity: I have not yet read about bit shifting. I think I need to read some more stuff.
[18:37:16] <gtlsgamr> yes, if s has 0x or 0X in the front, it gets removed and we get z.
[18:37:26] <clarity> You don't need to copy the string
[18:37:30] <clarity> Just skip over 0x
[18:38:09] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[18:38:12] <oscurochu> do you see anything wrong with this? https://dpaste.com/2TM84GKMT
[18:38:59] <clarity> gtlsgamr: left shift by n bits is equivalent to multiplication by two to n
[18:40:17] <gtlsgamr> Okay.
[18:40:24] <gtlsgamr> I think i need some more info than that
[18:40:27] <gtlsgamr> let me read it up
[18:40:36] *** Quits: emhwfhrom^ (~emhwfhrom@50.235.176.163) (Ping timeout: 240 seconds)
[18:40:48] <gtlsgamr> 20:37     clarity │  Just skip over 0x )) ---> much better now right http://0x0.st/o8Ol.c
[18:41:20] <cuppajoe> its like how shifting the decimal place to the left increases the value by a power of 10
[18:42:02] <Inline> 10 -> 100
[18:42:08] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:42:44] <sokan> https://bpa.st/U32A <-- Is this a function that can calculate the sum, and all poistive and all negative numbers?
[18:43:00] <clarity> gtlsgamr: It's a bit better but I'd just increment s by two if the string starts with 0x
[18:43:06] <clarity> gtlsgamr: Then you don't need z at all
[18:43:28] <gtlsgamr> clarity: what do you mean increment s by 2?
[18:43:31] <clarity> s += 2
[18:43:38] *** Joins: constxd_ (~brad@142.134.79.191)
[18:43:39] <gtlsgamr> s is a char array right>?
[18:43:46] <clarity> s is a pointer to char
[18:44:02] <gtlsgamr> and the next pointer is always +1?
[18:44:10] <clarity> The address of the next element, yes
[18:44:32] <Inline> 10 -> 100 1 bit shift, 01 -> 10 (2^1 -> 2^2) 1 bit shift
[18:45:27] <nomagno> Why is casting of designated initializers required for assignment, but not for assignment & initialization? Or is that just compiler-specific behaviour?
[18:45:39] <gtlsgamr> okay clarity understood
[18:45:41] <gtlsgamr> thanks for that
[18:47:27] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[18:48:13] *** Joins: teepee (~teepee@openscad/teepee)
[18:48:33] *** Joins: SaltHillStroller (~SaltHillS@206.223.160.26)
[18:48:34] <clarity> s[i]-'7' also looks a bit sketchy depending on who you ask.  Technically speaking there aren't many guarantees about the character set in C.
[18:49:11] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.4)
[18:50:07] *** Joins: Klinda (~superleag@user/klinda)
[18:51:07] *** Quits: acerbic (~acerbic@cs-xdata-50-86-48-151.cspire.com) (Read error: Connection reset by peer)
[18:51:17] *** Joins: gproto23 (~gproto23@user/gproto23)
[18:52:32] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[18:52:36] *** Quits: cassepipe (~cassepipe@81-66-251-102.rev.numericable.fr) (Remote host closed the connection)
[18:54:18] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[18:54:52] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[18:55:00] *** Quits: pucara (~i@host14.181-1-101.telecom.net.ar) (Quit: Lost terminal)
[18:55:24] *** Joins: cassepipe (~cassepipe@81-66-251-102.rev.numericable.fr)
[18:55:50] *** Quits: shugo (~shugo@user/shugo) (Quit: WeeChat 3.0.1)
[18:57:41] *** Quits: ZedHedTed (~ZedHedTed@user/zedhedted) (Remote host closed the connection)
[18:57:56] *** Joins: ZedHedTed (~ZedHedTed@user/zedhedted)
[18:58:17] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[18:59:17] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:fd01:1255:92ec:7d9d)
[18:59:21] *** Quits: doorzan (~doorzan@user/doorzan) (Ping timeout: 252 seconds)
[18:59:27] *** Joins: kts (~kts@103.73.237.42)
[18:59:36] *** Joins: shugo (~shugo@user/shugo)
[19:00:43] <fizzie> nomagno: By "casting of designated initializers" are you perhaps talking about compound literals?
[19:00:49] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 256 seconds)
[19:01:02] <fizzie> Because `(type){ .foo = 1, .bar = 2 }` is not a cast.
[19:03:05] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[19:03:07] <clarity> gtlsgamr: Do you mind spoilers?
[19:04:26] <clarity> gtlsgamr: Here's one way to implement it without relying on character set specifics.  And less code in general.  https://0x0.st/o8Vr.c
[19:04:53] <clarity> (It can still overflow the int, which is undefined behavior)
[19:04:56] *** Quits: shugo (~shugo@user/shugo) (Quit: WeeChat 3.0.1)
[19:05:26] <gtlsgamr> clarity: I don't mind but let me see how it works
[19:06:19] <gtlsgamr> looks like gibberish to me. I guess More reading is needed
[19:06:51] <clarity> :D
[19:07:13] *** Joins: shugo (~shugo@user/shugo)
[19:07:56] *** Quits: ckdCreations (~ckdCreati@147.55.133.130) (Read error: Connection reset by peer)
[19:07:57] <gtlsgamr> I think you used pointers?
[19:08:07] <gtlsgamr> I heard they are the toughest part to understand
[19:08:19] <clarity> You used a pointer too :)
[19:08:20] *** Joins: floatcomplex (~floatcomp@wireguard/tunneler/floatcomplex)
[19:08:28] <gtlsgamr> well yes, the string
[19:08:38] <gtlsgamr> but I don't "know" them :)
[19:08:52] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[19:08:52] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[19:08:52] *** Joins: wroathe (~wroathe@user/wroathe)
[19:12:40] *** Joins: tradar (~tradar@user/tradar)
[19:13:33] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[19:15:02] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:fd01:1255:92ec:7d9d) (Remote host closed the connection)
[19:15:41] *** Quits: shugo (~shugo@user/shugo) (Quit: WeeChat 3.0.1)
[19:15:45] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:fd01:1255:92ec:7d9d)
[19:16:48] *** Joins: shugo (~shugo@user/shugo)
[19:17:00] *** Joins: Dean (~Dean@165-73-119-36.ip.afrihost.capetown)
[19:18:35] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[19:19:36] *** Joins: acerbic (~acerbic@cs-xdata-50-86-55-163.cspire.com)
[19:19:40] *** Joins: emhwfhrom^ (~emhwfhrom@50.235.176.163)
[19:19:56] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 272 seconds)
[19:20:12] *** Joins: Devinn (~Devinn@searspoint.nvidia.com)
[19:20:21] *** Quits: shugo (~shugo@user/shugo) (Client Quit)
[19:20:44] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[19:20:45] *** Joins: pucara (~i@host14.181-1-101.telecom.net.ar)
[19:21:09] *** Joins: ckdCreations (~ckdCreati@147.55.133.137)
[19:21:13] *** Quits: constxd_ (~brad@142.134.79.191) (Ping timeout: 256 seconds)
[19:21:48] *** Joins: shugo (~shugo@user/shugo)
[19:25:35] *** Quits: bilbo (~bilbo@host-37-191-190-173.lynet.no) (Quit: Client closed)
[19:26:47] *** Joins: seninha (~seninha@user/seninha)
[19:27:32] *** nwulfe is now known as night_wulfe
[19:28:44] *** Joins: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru)
[19:33:19] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[19:34:57] *** Joins: mintograde (~mintograd@47.201.5.61)
[19:36:26] *** Quits: Dean (~Dean@165-73-119-36.ip.afrihost.capetown) (Changing host)
[19:36:26] *** Joins: Dean (~Dean@user/De4n-Whit3/x-9385125)
[19:37:55] *** Joins: bch (~bch@S01069050ca2cbf63.ok.shawcable.net)
[19:38:29] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Quit: leaving)
[19:39:23] *** Quits: cassepipe (~cassepipe@81-66-251-102.rev.numericable.fr) (Quit: Leaving)
[19:40:15] *** Joins: Enitin (~Enitin@82.102.22.85)
[19:42:52] *** Quits: emhwfhrom^ (~emhwfhrom@50.235.176.163) (Remote host closed the connection)
[19:42:58] *** Joins: doorzan (~doorzan@2800:200:f540:73::c)
[19:45:04] <rkta> NRK: I don't want to get too offtopic here, you can find me in #w3m if you want.
[19:46:43] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 256 seconds)
[19:49:15] *** Quits: kish (~aqua@user/aqua) (Ping timeout: 240 seconds)
[19:50:23] *** Quits: eddybilley (~freddieti@217.119.232.174) (Ping timeout: 256 seconds)
[19:53:39] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[19:54:00] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[19:58:47] *** Joins: Enitin (~Enitin@82.102.22.86)
[19:59:54] *** Joins: constxd_ (~brad@142.134.79.191)
[20:00:18] *** Joins: AmR (~AmREiSa@156.199.14.65)
[20:00:48] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: AdiIRC is updating to v4.2 Beta Build (2022/02/17 UTC) 64 Bit)
[20:01:08] *** Joins: Tempesta (~Tempesta@user/tempesta)
[20:02:17] *** Joins: Rynn (~rynn@216.30.158.198)
[20:02:56] <SaltHillStroller> Is it possible to de-stringify a value with the preprocessor? Obviously to stringify, you can do ABC -> #ABC -> "ABC". But is it possible to do "ABC" -> ? -> ABC
[20:03:00] *** Quits: boB_K7IQ (~boB_K7IQ@ip72-201-138-188.ph.ph.cox.net) (Ping timeout: 272 seconds)
[20:03:25] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[20:04:13] *** Quits: wovixo (~wovixo@128.104.205.49) (Read error: Connection reset by peer)
[20:04:50] *** Joins: libc (~archer@user/tessio)
[20:04:56] <libc> good evening
[20:07:19] *** Joins: mahmutov (~mahmutov@151.135.63.219)
[20:07:34] *** Joins: kuber (~kuber@75-172-76-245.tukw.qwest.net)
[20:07:37] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[20:08:12] *** Joins: wovixo (~wovixo@128.104.205.49)
[20:11:27] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[20:16:26] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:fd01:1255:92ec:7d9d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:16:42] *** Joins: Enitin (~Enitin@82.102.22.86)
[20:19:54] *** Joins: Akuli (~Akuli@82-203-164-188.bb.dnainternet.fi)
[20:21:46] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[20:22:43] *** Quits: acerbic (~acerbic@cs-xdata-50-86-55-163.cspire.com) (Read error: Connection reset by peer)
[20:22:47] *** Joins: eddybilley (~freddieti@2a02-a454-7f89-1-31f4-ef21-dd0b-ace1.fixed6.kpn.net)
[20:23:07] *** Quits: Rynn (~rynn@216.30.158.198) (Quit: Textual IRC Client: www.textualapp.com)
[20:23:10] *** Joins: crashrep (~crashrep@user/crashrep)
[20:23:25] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:3130:efab:19e7:e707) (Ping timeout: 250 seconds)
[20:24:33] *** Quits: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru) (Read error: Connection reset by peer)
[20:24:40] *** Joins: savolla (~quassel@95.10.205.18)
[20:25:20] *** Parts: shugo (~shugo@user/shugo) (WeeChat 3.0.1)
[20:26:45] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:3130:efab:19e7:e707)
[20:26:57] *** Quits: constxd_ (~brad@142.134.79.191) (Ping timeout: 240 seconds)
[20:27:00] *** Quits: eddybilley (~freddieti@2a02-a454-7f89-1-31f4-ef21-dd0b-ace1.fixed6.kpn.net) (Ping timeout: 240 seconds)
[20:29:47] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:fd01:1255:92ec:7d9d)
[20:31:36] *** Joins: the_lanetly_052 (~the_lanet@194.135.154.213)
[20:31:48] *** Quits: powerLien (~Jeremy@89.45.224.100) (Ping timeout: 240 seconds)
[20:32:15] *** Joins: powerLien (~Jeremy@89.45.224.100)
[20:32:51] *** Quits: the_lanetly_052_ (~the_lanet@194.135.169.19) (Ping timeout: 252 seconds)
[20:33:43] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[20:36:06] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[20:36:31] <masoudd> SaltHillStroller, So you're doing something like this? #define "foo"
[20:36:34] *** Quits: varad (~varad@45.249.86.162) (Ping timeout: 272 seconds)
[20:38:37] *** Joins: kish` (~aqua@user/aqua)
[20:39:15] *** Joins: varad (~varad@45.249.86.162)
[20:39:36] <SaltHillStroller> masoudd: Sort of? I'm trying to write a compatibility layer between two macro libraries. One takes in a string parameter, one takes in an identifier token. So it would be very convenient to convert the string literal to a token
[20:40:11] <fizzie> If you mean you'd want to have a macro invocation `FOO("abc")` expand into the non-string-literal token `abc`, no.
[20:41:08] *** Joins: acerbic (~acerbic@cs-xdata-50-86-55-163.cspire.com)
[20:42:25] *** Quits: AssKoala (~asskoala@user/asskoala) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[20:42:41] <SaltHillStroller> I.e. One has a macro: `#define func(_id)  do_work(_id);    func("my_id");`, the other has something like: `#define get_name(_id)     identifier_ ## _id;     get_name(CUSTOM);`
[20:42:42] *** Quits: bch (~bch@S01069050ca2cbf63.ok.shawcable.net) (Quit: rebooter)
[20:43:10] <SaltHillStroller> fizzie: Yeah, pretty much that's what I was looking for :/
[20:44:12] *** Quits: powerLien (~Jeremy@89.45.224.100) (Ping timeout: 240 seconds)
[20:45:41] *** Joins: AssKoala (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net)
[20:45:41] *** Quits: AssKoala (~asskoala@23-121-91-253.lightspeed.dybhfl.sbcglobal.net) (Changing host)
[20:45:41] *** Joins: AssKoala (~asskoala@user/asskoala)
[20:45:49] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[20:46:04] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 272 seconds)
[20:46:49] *** Joins: wyfnt (~wyfnt1232@103.214.137.74)
[20:48:25] *** Quits: savolla (~quassel@95.10.205.18) (Read error: Connection reset by peer)
[20:48:53] *** Joins: drbeco (~beco@2804:351c:dd01:6600:e4a2:7a5d:e23f:1fd8)
[20:48:54] *** Joins: savolla (~quassel@95.10.205.18)
[20:52:05] *** Joins: Torr (~Torr@user/torr)
[20:55:00] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Remote host closed the connection)
[20:55:36] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[20:59:15] *** Quits: bick (~kotaman@94.46.203.147) (Ping timeout: 252 seconds)
[21:00:38] *** Quits: varad (~varad@45.249.86.162) (Ping timeout: 272 seconds)
[21:05:04] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 272 seconds)
[21:06:20] *** Quits: savolla (~quassel@95.10.205.18) (Ping timeout: 272 seconds)
[21:07:46] *** Joins: seninha (~seninha@user/seninha)
[21:08:52] *** Quits: pooryorick (~pooryoric@87-119-174-173.tll.elisa.ee) (Ping timeout: 272 seconds)
[21:09:12] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[21:09:25] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[21:09:40] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[21:10:02] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[21:10:31] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[21:11:17] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 240 seconds)
[21:13:00] *** Quits: doorzan (~doorzan@2800:200:f540:73::c) (Ping timeout: 252 seconds)
[21:14:08] *** Joins: immibis_ (~hexchat@dynamic-089-204-139-245.89.204.139.pool.telefonica.de)
[21:16:26] *** Joins: meator (~meator@user/meator)
[21:17:06] *** Quits: immibis (~hexchat@dynamic-089-204-138-200.89.204.138.pool.telefonica.de) (Ping timeout: 272 seconds)
[21:18:43] *** Joins: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net)
[21:19:41] *** Quits: bartkk1 (~bartkk@83.8.203.168.ipv4.supernova.orange.pl) (Quit: WeeChat 3.4)
[21:20:32] *** Joins: Akiva (~Akiva@user/Akiva)
[21:21:50] *** Quits: kuber (~kuber@75-172-76-245.tukw.qwest.net) (Quit: leaving)
[21:25:23] *** Joins: pooryorick (~pooryoric@87-119-174-173.tll.elisa.ee)
[21:26:37] *** Quits: the_lanetly_052 (~the_lanet@194.135.154.213) (Ping timeout: 272 seconds)
[21:27:06] *** Quits: ka80 (~ka80@111.60.138.34.bc.googleusercontent.com) (Quit: Leaving)
[21:28:26] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[21:34:55] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 240 seconds)
[21:34:58] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545)
[21:37:06] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:fd01:1255:92ec:7d9d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:39:10] *** Joins: powerLien (~Jeremy@89.45.224.100)
[21:39:22] *** Joins: kish` (~aqua@user/aqua)
[21:39:27] *** Joins: phrix (~phrix@185.76.176.45)
[21:39:40] *** Parts: powerLien (~Jeremy@89.45.224.100) ()
[21:40:04] *** Joins: ka80 (~ka80@user/ka80)
[21:40:32] *** Quits: kts (~kts@103.73.237.42) (Ping timeout: 272 seconds)
[21:40:42] *** Quits: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net) (Remote host closed the connection)
[21:40:58] *** Joins: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net)
[21:46:39] *** Quits: llh (~llh@user/llh) (Quit: :::: ( UPP ) ::::)
[21:48:10] *** Joins: rgrinberg (~textual@2806:101e:7:5da4:fd01:1255:92ec:7d9d)
[21:51:33] *** Quits: maroloccio (~marolocci@pousada3ja.mma.com.br) (Quit: WeeChat 3.0)
[21:53:50] *** Quits: mahmutov (~mahmutov@151.135.63.219) (Ping timeout: 272 seconds)
[21:55:17] *** Joins: mahmutov (~mahmutov@5.176.3.157)
[21:55:46] *** Joins: pulse (~pulse@user/pulse)
[21:55:59] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:56:54] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[21:57:46] *** Quits: wyfnt (~wyfnt1232@103.214.137.74) (Quit: Leaving)
[21:58:34] *** Joins: SymbioticFemale (~Symbiotic@user/SymbioticFemale)
[21:59:19] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[21:59:36] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[22:02:12] *** Quits: alch (~alch@151.38.73.218) (Ping timeout: 240 seconds)
[22:04:27] *** Joins: alch (~alch@151.38.14.92)
[22:05:16] *** Joins: kuber (~kuber@75-172-76-245.tukw.qwest.net)
[22:06:03] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[22:12:08] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[22:14:11] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:2155:642c:a2e:a545)
[22:14:47] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Read error: Connection reset by peer)
[22:15:24] *** Joins: bick (~kotaman@94.46.203.147)
[22:15:39] *** Quits: kuber (~kuber@75-172-76-245.tukw.qwest.net) (Quit: leaving)
[22:17:54] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[22:17:58] *** Joins: Betal (~Betal@user/betal)
[22:18:09] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[22:20:36] *** Joins: Charadon (~Charadon@155.138.164.183)
[22:22:24] *** Joins: Guest9 (~Guest9@2601:406:303:e150:e5c2:cda6:d97e:e72b)
[22:24:28] *** Joins: Rynn (rynn@gateway/vpn/protonvpn/rynn)
[22:26:03] *** Quits: meator (~meator@user/meator) (Ping timeout: 250 seconds)
[22:28:13] *** Quits: gry (~quassel@botters/gry) (Ping timeout: 250 seconds)
[22:29:55] *** Quits: Charadon (~Charadon@155.138.164.183) (Remote host closed the connection)
[22:30:57] *** Joins: Charadon (~Charadon@155.138.164.183)
[22:31:59] *** Joins: gry (~quassel@botters/gry)
[22:34:37] *** Quits: dld (~davidlowr@2601:197:600:1210:5c9e:f676:ddc7:b9f7) (Ping timeout: 240 seconds)
[22:35:47] *** Joins: dld (~davidlowr@2601:197:600:1210:c94f:64b7:1eea:84b1)
[22:36:45] *** Quits: bick (~kotaman@94.46.203.147) (Quit: Lost terminal)
[22:42:36] *** Quits: nomagno (~nomagno@2001:470:69fc:105::c1f0) (Killed (NickServ (GHOST command used by nomagno_!~nomagno@193.31.69.185)))
[22:42:54] *** Joins: nomagno (~nomagno@2001:470:69fc:105::c1f0)
[22:44:32] *** Joins: FluffyMask (~masque@user/fluffymask)
[22:45:29] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[22:49:42] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:51:20] *** Joins: doorzan (~doorzan@2800:200:f540:73::c)
[22:54:08] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:aaa1:59ff:fe3c:ddb4) (Quit: WeeChat 3.4)
[22:57:30] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:aaa1:59ff:fe3c:ddb4)
[23:02:32] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[23:05:53] *** Joins: magla (~gelignite@55d4275f.access.ecotel.net)
[23:06:14] <ioxzev1z> No sea talk for an hour?
[23:06:21] *** Quits: Guest9 (~Guest9@2601:406:303:e150:e5c2:cda6:d97e:e72b) (Quit: Client closed)
[23:10:16] *** nuxil_ is now known as nuxil
[23:10:19] <ChoHag> Shipping forecast is at 0048 and 0520.
[23:11:18] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:12:17] <ZedHedTed> this channel does get pretty quiet sometimes. i'd contribute, but my questions are usually simple enough for the book or SO.
[23:12:53] <ChoHag> There's no harm in asking.
[23:12:58] <ChoHag> Questions might not get answered.
[23:13:00] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 272 seconds)
[23:13:01] *** Lord_of_Life_ is now known as Lord_of_Life
[23:13:28] <ioxzev1z> ZedHedTed, gimme q bru
[23:14:17] <ChoHag> There are stupid questions but the only thing stupider is not asking them.
[23:15:04] <ZedHedTed> it's better to remain silent and be thought a fool than to speak and remove all doubt.
[23:15:14] <ChoHag> True. But who gives a shit?
[23:15:30] <ChoHag> On the internet nobody knows you're a dog.
[23:15:54] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:16:15] *** Joins: seninha (~seninha@user/seninha)
[23:17:40] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:17:48] *** Joins: vicfred (~vicfred@user/vicfred)
[23:18:05] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[23:18:43] *** Quits: doorzan (~doorzan@2800:200:f540:73::c) (Changing host)
[23:18:43] *** Joins: doorzan (~doorzan@user/doorzan)
[23:18:59] <SaltHillStroller> Speaking of questions, is it possible to redefine a macro as itself? I.e. to concatenate itself with something new `#define FOO BAR; #define BAK FOO; #undef FOO; #define FOO BAK ## 123`
[23:19:49] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[23:19:52] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[23:20:35] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[23:21:04] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[23:21:27] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:24:27] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[23:24:57] *** Joins: crankslider (~slidercra@user/slidercrank)
[23:25:56] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[23:30:15] *** Quits: phrix (~phrix@185.76.176.45) (Quit: Leaving)
[23:32:10] *** Parts: sh4_ (~sh4@user/sh4) (Leaving)
[23:33:22] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Remote host closed the connection)
[23:33:23] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[23:34:21] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[23:36:22] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a131:11ab:1111:d3c5)
[23:36:41] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[23:37:15] *** Joins: test_ (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[23:38:00] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[23:38:43] *** Joins: crashrep (~crashrep@user/crashrep)
[23:39:32] *** Joins: meator (~meator@user/meator)
[23:40:18] *** Quits: immibis_ (~hexchat@dynamic-089-204-139-245.89.204.139.pool.telefonica.de) (Read error: Connection reset by peer)
[23:40:23] *** Joins: immibis (~hexchat@dynamic-089-204-139-245.89.204.139.pool.telefonica.de)
[23:40:45] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 256 seconds)
[23:42:45] <ChoHag> Why?
[23:43:31] *** Joins: eddybilley (~freddieti@2a02-a454-7f89-1-31f4-ef21-dd0b-ace1.fixed6.kpn.net)
[23:44:20] <caze> Is it possible for you to stop messing with macros?
[23:44:59] <ChoHag> Where would be the fun in that?
[23:46:12] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:3130:efab:19e7:e707) (Quit: Leaving)
[23:47:22] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[23:47:48] *** Quits: rgrinberg (~textual@2806:101e:7:5da4:fd01:1255:92ec:7d9d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:49:03] *** Joins: strajder (~strajder@user/strajder)
[23:51:48] *** Quits: eddybilley (~freddieti@2a02-a454-7f89-1-31f4-ef21-dd0b-ace1.fixed6.kpn.net) (Ping timeout: 240 seconds)
[23:51:58] *** Quits: immibis (~hexchat@dynamic-089-204-139-245.89.204.139.pool.telefonica.de) (Read error: Connection reset by peer)
[23:52:03] *** Joins: immibis_ (~hexchat@dynamic-089-204-139-245.89.204.139.pool.telefonica.de)
[23:52:55] *** Quits: meator (~meator@user/meator) (Remote host closed the connection)
[23:53:13] *** Joins: meator (~meator@user/meator)
