[00:02:08] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 268 seconds)
[00:04:19] <gilberth> Were you surprised by that flood?
[00:05:02] <selwyn> i am surprised at the speed of the flood, which is what i think caused the problems
[00:05:39] <gilberth> Indeed. Like here in the SW, it was coming within minutes.
[00:06:16] <selwyn> it is rather concerning, because london has flood defences that are built to last a century
[00:06:25] <selwyn> but they only work on tidal surges, not this kind of thing
[00:07:09] <gilberth> Yes, that would have been the question. A storm flood is different. The is comming from the opposite direction to begin with.
[00:07:40] <gilberth> * The water
[00:07:51] <selwyn> yes i suppose
[00:08:56] <gilberth> Well, that is the situation here. We are relatively safe from rain flooding here in Hamburg, but a nice storm flood like 1962 could happen any time.
[00:10:22] <selwyn> i have heard that germany has not done enough to protect from storms/floods in any case
[00:10:52] <gilberth> You are talking about storm flood coming from the North Sea?
[00:11:22] <selwyn> for example, i am talking about the recent floods, not sure what their origin in
[00:11:31] <selwyn> as i say, i heard it from someone else, perhaps the criticism is not valid
[00:13:12] <gilberth> Well, the recent flood is rain rushing down the rivers. And as rivers don't have their natural areas to flood, all the water collects raises in speed and spills into some village from a usually small river.
[00:13:17] <selwyn> huh, the 1953 flood did not affect germany
[00:13:41] <gilberth> Another storm flood, I have not heard about?
[00:13:58] <selwyn> the 1953 flood is ´the big one´ here and apparently also in holland
[00:14:21] <selwyn> i was in wales a couple of years ago and experienced the worst flood they have ever had
[00:14:27] <selwyn> but, they managed it so well
[00:14:45] <selwyn> they are used enough to heavy rains that they did not get fazed
[00:14:52] <selwyn> perhaps there is a climate resiliency lesson here
[00:15:05] <gilberth> Anyhow, the rivers are all kind of fenced as people like to settle there on areas that naturally would be flooded in case of wast rain fall. Hard to change that. And more a problem in SW.
[00:15:40] <selwyn> it is great agricultural land right
[00:15:55] <gilberth> selywn: That surprises me, so 1953 really must have missed us here in Hamburg. I'll need to read up about that.
[00:16:13] <aeth> Almost everything is built on water. Johannesburg is a rare exception (built on the world's largest gold deposit at the time)
[00:16:24] <selwyn> las vegas?
[00:16:59] <aeth> Vegas appears to be right next to the Hoover Dam
[00:17:00] <gilberth> I almost was flooded in like 2002 or so. Water was already spilling from the little wall at our little river, but that was in the very south west.
[00:17:49] <aeth> but, yeah, Vegas might not count as a city built near water, either
[00:17:56] <aeth> It appears to be a decent distance away
[00:17:56] <selwyn> unfortunately, my knowledge of nevada geography comes entirely from fallout: new vegas
[00:18:08] <selwyn> which may not have accurate scales
[00:18:10] <aeth> but when you can only think of a few cities...
[00:18:21] <gilberth> Our house was below the river, so it would have been flooded up to at least the second floor. We were lucky and nothing really happened.
[00:18:44] <aeth> almost every city is built right next to a: lake, river, coast
[00:18:54] <gilberth> Indeed.
[00:18:59] <aeth> often multiple times, since if a city was a good spot 5,000 years ago it's probably still a good spot now
[00:19:09] <selwyn> true
[00:19:16] *** Quits: makomo (~makomo@user/makomo) (Quit: WeeChat 3.0.1)
[00:19:20] <selwyn> trying really hard to think of counterexamples lol
[00:19:37] <aeth> think it might just be Las Vegas and Johannesburg as far as things that grew into cities
[00:20:10] <aeth> hmm, going back to Nevada, Reno looks like it's nowhere near water, even further than Vegas is from anything major like lakes
[00:20:13] <gilberth> And cities are build along tectonic faults, because that is were metal could be found.
[00:20:16] <selwyn> las vegas owes much of its existence to the hoover dam anyway right
[00:20:33] <aeth> ah, no, nevermind, I zoom way in and a river goes through Reno
[00:20:36] <aeth> just a small one b/c desert
[00:20:42] <gilberth> Compare a map of earth quakes with major settlement areas, they fit in the coarse scale.
[00:21:03] <aeth> I think you kind of have to go to deserts to find cities not really built on water
[00:21:04] <selwyn> i think the most likely examples are going to be cities that started as garrisons
[00:21:06] <aeth> e.g. maybe Riyadh
[00:24:19] <aeth> selwyn: maybe a mountain pass or something, but that's probably likely to stay small, and not a city
[00:24:19] <gilberth> A DEFSTRUCT defined structure is readable, right?
[00:24:33] <aeth> gilberth: by default, but semantically you can mess with that. iirc
[00:24:51] <gilberth> Ok. Thanks.
[00:25:17] <gilberth> It will only be numbers in that structs, so i'll be fine.
[00:25:30] <pjb> gilberth: as long as the values in the slots are readable, yes.
[00:26:16] <pjb> gilberth: there may be difficulties with shared values, and stuff like that: you read back a new copy (you can use *print-circle* to help).
[00:26:41] <gilberth> pjb: I won't have that, my structs will have value semantics.
[00:26:52] <pjb> in that case ok.
[00:29:55] <gilberth> Hmm, still my router at former home, doesn't want to forward SSH, or sshd doesn't talk to me. I hesitate a bit to fiddle with that router. Damn update, I guess. I should have bought the router and not lending it. ISP did some update last night. :/
[00:31:40] <gilberth> Everything else is fine: It did the dyndns update, port 8000 is working as well as my VPN.
[00:32:41] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 250 seconds)
[00:33:17] <gilberth> Maybe my "secret" ssh port was black listed? Recently there were hundreds of attemps to login as "root". Heh, as if any sane sshd would allow root to log in anyway.
[00:40:27] <gilberth> Anyhow, TeX has a lot of macros, which could be functions, like length(#) == (str_start[#+1]-str_start[#]). Maybe I probe the expansion, whether it parses as an expression or statement and at least turn that into macros, if not even functions. To make the SEXP form of the "Pascal" readable.
[00:41:11] *** Quits: zacts (~zacts@user/zacts) (Quit: zacts)
[00:41:33] <gilberth> I could even do cheap type "inference". Go over the source and figure out all the arguments to '#', which in this case would be some integer range. If consistent => Make it a function. I like that idea.
[00:43:21] <gilberth> This could even work for incr(#) == #:=#+1. This could be "procedure incr (var x : integer); begin x:=x+1 end;"
[01:00:44] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[01:04:04] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 265 seconds)
[01:18:52] * gilberth is surprised that * is a type.
[01:21:28] <aeth> it's not?
[01:21:32] <aeth> (typep 1 '*) ; error
[01:21:53] <aeth> * is just a special thing in some places, like arrays and integers
[01:23:51] * selwyn enjoys flashcards
[01:24:04] <selwyn> i never listened to my teachers when they said they really worked
[01:26:57] <gilberth> Oh, I get (typep 42 '*) => T, and (subtypep 'integer '*) => T; T
[01:27:31] <gilberth> I always was under the impression that * is just a short cut for DEFTYPEs and translated to T. Maybe CCL is a bit lazy here. Hmm.
[01:28:51] <pjb> No, it's sbcl that assumes everything is a type.  It's rather silly.
[01:29:29] <gilberth> https://termbin.com/ae46
[01:29:30] <pjb> And strangely, sbcl doesn't allow * as type specifier. 
[01:29:45] <pjb> https://termbin.com/yptey
[01:29:48] <gilberth> So I better treat * as not being a type. That would have been news to me anyway.
[01:31:09] <gilberth> pjb: Heh, ECL believes 42 is of type *, yet it doesn't know whether INTEGER is a subtype of *? Isn't that a contradiction?
[01:31:46] <pjb> https://termbin.com/sybp
[01:31:52] <aeth> sounds like it's a domain of non-portable code then
[01:32:36] <pjb> tell me about consistency!  sbcl and ccl don't know the type X, but they know NIL is a subtype of it!
[01:33:06] <gilberth> Well, NIL is bottom. So, I believe it would be ok to return T; T no matter what the putative super type is.
[01:34:49] <gilberth> But I believe that is UB. I'm too lazy to read up on that right now. Anyhow, I consider CCL being lazy here as it thinks * is T. That perhaps is not right, and I'll do (subst 't '*) in my DEFTYPE's.
[01:52:31] <Alfr> gilberth, regarding ecl; is every integer of type * ?
[01:53:11] <Alfr> And for the special case of 42, it might just know that for some reason. ;)
[01:55:22] *** Quits: random-nick (~random-ni@87.116.165.220) (Ping timeout: 240 seconds)
[02:00:09] <gilberth> Alfr: I couldn't try every integer :-/
[02:03:50] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[02:05:34] <Alfr> A proof or counter example will settle this too. :p
[02:08:27] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[02:10:58] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[02:11:06] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 240 seconds)
[02:13:40] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 265 seconds)
[02:16:48] <gilberth> Alfr: You dissect ECL's code for a proof.
[02:20:12] <Alfr> I'd rather decline that honor, gilberth.
[02:23:42] <gilberth> Anyhow, bugs everywhere you look. This could be depressing.
[02:25:22] *** Quits: lad (~lad@user/lad) (Ping timeout: 256 seconds)
[02:37:59] *** Joins: zacts (~zacts@user/zacts)
[02:41:46] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[02:44:34] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 240 seconds)
[03:25:21] *** Quits: elflng (~elflng@5.28.137.182) (Ping timeout: 258 seconds)
[03:40:49] *** Alfr is now known as Guest4668
[03:40:49] *** Quits: Guest4668 (~Alfr@user/alfr) (Killed (zinc.libera.chat (Nickname regained by services)))
[03:40:53] *** Joins: Alfr (~Alfr@user/alfr)
[03:41:38] <gilberth> Found a bug in my "compiler". I missed some VAR parameters, but they were not written to. And: I used DEFVAR for global variables, yet Pascal's globals are not special variables. sigh
[03:41:56] <gilberth> Anyhow, the variant violation is still there :(
[03:48:52] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[04:03:35] *** Quits: Alfr (~Alfr@user/alfr) (Quit: Leaving)
[04:05:23] *** Joins: elflng (~elflng@5.28.137.182)
[04:45:35] <hayley> https://www.youtube.com/watch?v=48PJGVf4xqk
[04:45:35] -ixelp- One Of These Days - YouTube
[04:57:14] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[05:00:25] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 258 seconds)
[05:01:54] *** Joins: zacts (~zacts@user/zacts)
[05:07:19] *** Quits: elflng (~elflng@5.28.137.182) (Ping timeout: 258 seconds)
[05:21:55] *** Quits: zacts (~zacts@user/zacts) (Ping timeout: 246 seconds)
[06:02:52] * hayley uploaded an image: (3KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/hGleevLVYYcdGhwakKFBrnKF/Screenshot_2021-07-26_11-37-51.png >
[06:02:54] * hayley was fine until seeing a smiley with a nose
[06:15:28] *** Quits: luis (~luis@lisp/luis) (Quit: Ping timeout (120 seconds))
[06:18:02] *** Joins: luis (~luis@lisp/luis)
[06:18:16] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[06:37:38] <hayley> https://github.com/ocaml/ocaml/pull/10195
[06:51:27] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 276 seconds)
[07:00:30] * hayley notes Doligez and Leroy have reviewed this PR while looking for the prefetch instruction to comment on.
[07:03:57] <hayley> Someone mentioned it would be better to use a non-temporal prefetch rather than prefetching into L3. So I may as well build ocaml and test it.
[07:05:46] <hayley> "Wow! A 64 bit architecture!"
[07:08:51] <hayley> Can't build ocaml though.
[07:16:46] <gilberth> SIGH
[07:17:14] <gilberth> This is fragile. I cleaned up another p2c build and now the DVI files is different. :-(
[07:17:28] <hayley> Somehow it craps out while building the standard library, spewing out "Warning: Element Ocaml_operators not found"
[07:20:27] <hayley> Oh, wait, no, it just failed to build the documentation, and now I have my own OCaml system.
[07:26:57] <gilberth> Rounding errors, just rounding errors.
[07:32:32] *** Joins: zacts (~zacts@user/zacts)
[07:33:28] <hayley> Any complaints for what I wrote in https://github.com/ocaml/ocaml/pull/10195#issuecomment-886334984
[07:47:36] <gilberth> Later. I have to find a bug. Or two. Or three. Or more.
[07:47:45] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[07:47:54] *** Joins: zacts86 (~zacts@user/zacts)
[07:48:04] *** Quits: zacts86 (~zacts@user/zacts) (Client Quit)
[07:58:06] * hayley wonders if "It looks like it would be clear to the OCaml people." means that she is safe because they know the code in question, or because the OCaml people don't write very clearly and are used to it.
[08:07:04] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 256 seconds)
[08:14:06] <hayley> https://www.reddit.com/r/sysadmin/comments/orhhyp/if_there_was_an_ethical_alternative_to_aws_would/h6ivg0t/
[08:14:07] -ixelp- If there was an ethical alternative to AWS would you switch providers? : sysadmin
[09:03:00] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[09:40:25] *** Quits: emacsomancer (~emacsoman@136.60.128.68) (*.net *.split)
[09:40:25] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (*.net *.split)
[09:40:26] *** Quits: commandoline (~commandol@ubuntu/member/commandoline) (*.net *.split)
[09:40:26] *** Quits: mala (~mala@user/malaclyps) (*.net *.split)
[09:40:29] *** Joins: commandoline_ (~commandol@ubuntu/member/commandoline)
[09:41:09] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[09:41:18] *** Joins: mala (~mala@user/malaclyps)
[09:41:46] *** Joins: emacsomancer (~emacsoman@136.60.128.68)
[09:43:37] *** Quits: happy-dude (~happy-dud@2001:470:69fc:105::b4d7) (*.net *.split)
[09:49:08] *** Joins: happy-dude (~happy-dud@2001:470:69fc:105::b4d7)
[09:49:44] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[09:53:19] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 265 seconds)
[09:59:03] *** Joins: Oddity (Oddity@user/oddity)
[09:59:47] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[10:02:57] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[10:16:42] *** Joins: selwyn (~selwyn@user/selwyn)
[10:25:47] <gilberth> OK. I have my first trace. Quick and dirty: <https://termbin.com/4s9d>
[10:26:43] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[10:28:30] <gilberth> Plan: (1) Find the place at which my programs sees the violation and emit a marker to the trace. (2) See if it also present (3) if not generate the same trace for my TeX in Lisp and compare.
[10:30:31] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 268 seconds)
[10:31:44] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[10:31:49] <dave0> maw
[10:32:51] <hayley> Hey dave0
[10:33:00] <dave0> hi hayley 
[10:33:20] <dave0> hayley: what are you listening to at this moment?
[10:33:27] <hayley> https://www.youtube.com/watch?v=4QA30qkRYy8
[10:33:27] -ixelp- Dogs - YouTube
[10:36:39] * dave0 listens
[10:44:17] *** Quits: selwyn (~selwyn@user/selwyn) (Ping timeout: 245 seconds)
[10:51:02] *** Joins: selwyn (~selwyn@user/selwyn)
[10:53:38] <gilberth> Yes! The TeX compiled with p2c trips the same bug: <http://clim.rocks/gilbert/tex/trace.txt>. That is UB, dear Donald.
[10:54:45] <dave0> you found a bug in it! he might send you a check!
[10:54:46] <gilberth> Now, I wonder whether I could find that with web2c too, though they modified TeX a lot.
[10:55:20] <gilberth> dave0: I am not yet convinced.
[10:56:23] <gilberth> First, I'd like to verify that the p2c and the Pascal->Lisp version do the very same.
[11:04:38] <hayley> https://www.youtube.com/watch?v=48PJGVf4xqk
[11:04:39] -ixelp- One Of These Days - YouTube
[11:22:52] <gilberth> Ok. The bug is obvious in the TeX sources: Here is the relevant part plus explanation: <http://clim.rocks/gilbert/tex/bug.txt>
[11:24:09] *** Joins: shka (~herr@109.231.62.239)
[11:24:24] <gilberth> So, I really wonder what that is? Is Knuth here peeking at the bit pattern of a float?
[11:24:55] <gilberth> When when so, that is not portable.
[11:27:02] <selwyn> sounds like you did find a bug
[11:28:19] <gilberth> Yes, I find bug all the time, this seems to my destiny. Unfortunately.
[11:30:10] <gilberth> The float(#) macros is a suspect. 'gr' is a float, and that macro is just the identity. So perhaps in a former version floats were somehow encoded as an integer? Otherwise there would be no need for such a macro/function.
[11:31:17] <gilberth> So my hunch is: This is a leftover. Where could I find really old TeX version?
[11:40:27] <gilberth> So should I ask for my $327.68?
[11:41:29] *** Joins: derelict (~derelict@user/derelict)
[11:42:37] * hayley drew up a proper gander poster but then realises her node diagram fails DRC
[11:44:35] <hayley> Phew, a pretty easy fix.
[12:16:16] *** Quits: selwyn (~selwyn@user/selwyn) (Ping timeout: 258 seconds)
[12:16:31] *** Joins: selwyn (~selwyn@user/selwyn)
[12:27:40] <gilberth> Ok. The TeX version of 1982 gives a hint. It says "The code will have to change in this place if |glue_ratio| is a structured type instead of an ordinary |real|."
[12:59:04] <shka> https://www.youtube.com/watch?v=1i34ZOQ0OKo
[12:59:04] -ixelp- Adventures in Hyperthreading - now with STEREO SOUND!!! - YouTube
[13:05:26] <selwyn> shka: what am i watching lol
[13:05:36] <shka> benchmarking
[13:06:05] <shka> it is not weird at all
[13:06:11] <shka> you wanna weird stuff?
[13:06:16] <shka> i can give you weird stuff
[13:06:16] <selwyn> the intro is funny
[13:06:46] <shka> https://www.youtube.com/watch?v=OZ4NLbIxzQ4
[13:06:46] -ixelp- Cruelty Squad is Wonderful and Depraved - YouTube
[13:07:01] <shka> selwyn: here, weird shit for reference
[13:08:08] <selwyn> r/interdimensionalcable is good for this kind of thing
[13:09:52] * hayley makes an Azure VM and it won't accept the private key she downloaded upon creation.
[13:10:15] <shka> hayley: oh, can we complain about azure?
[13:10:20] <shka> because it is jank as hell
[13:10:22] <hayley> Go for it.
[13:10:54] <shka> so, once my PG machine simply disappeared from the web interface for no fucking reason 
[13:11:05] <shka> it took support ticket for it to show up again
[13:11:17] <hayley> Oh, the default user is azureuser, but I swear I read ubuntu. Go figure.
[13:11:18] <hayley> Yikes!
[13:11:40] <shka> but database was working fine, AND i was still getting billed for it
[13:12:07] <shka> so if i would decide that i don't want it anymore, i would still would have to keep paying without a way to shut it down :P
[13:12:36] <shka> and now, i have VM that randomly decides to lose all connection to the outside world
[13:12:53] <shka> i can't ssh into it, i can't send http request to it
[13:13:01] <shka> and logs are... not helpful
[13:13:04] <hayley> Hm, no sign here of that damn MPK extension I want.
[13:13:21] <selwyn> cruelty squad looks like a good game though
[13:13:31] <shka> selwyn: "looks"? :P
[13:13:36] <selwyn> lol
[13:13:58] <shka> anyway, azure is surprisingly jank
[13:14:42] <selwyn> shinmera showed me how to get a free copy of microsoft windows with an azure subscription
[13:15:02] <selwyn> they don´t like to make it easy
[13:15:11] <selwyn> or perhaps that is just azure
[13:15:29] <hayley> Quite a few things to poke at would I design a GC still.
[13:17:00] * hayley also wonders if just protecting the victim pages is better than a STW pause to copy.
[13:18:48] <edgar-rft> congrats for designing a Golf Course
[13:38:54] <hayley> I guess we need to lock down every non-leaf page to copy in the end. So we just do that in one swoop, then AIUI copying and fixing up can be done wait-free. 
[13:39:44] <hayley> .oO( I can't design a wait free hash table, but I can design a wait free GC at least... )
[13:51:10] <hayley> https://www.youtube.com/watch?v=SXrUiZdrO5M
[13:51:11] -ixelp- Messages (Peel Session 1) - YouTube
[13:52:46] <hayley> Hm, there is the problem that to copy I need to reserve space in tospace, then copy, then write a forwarding pointer. It's doable, but to do it wait-free I risk making pointless replicas in tospace.
[13:53:41] <hayley> Or I do it the NBHM way: if some other thread is seemingly copying, then we let it do its thing uninterrupted, but if we are out of work we force our way in.
[13:54:55] *** Joins: elflng (~elflng@5.28.137.182)
[14:03:49] *** Joins: treflip (~user@95.79.32.99)
[14:07:12] *** Joins: OlCe (~user@lfbn-nic-1-123-149.w2-15.abo.wanadoo.fr)
[14:12:20] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[14:15:07] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 245 seconds)
[14:25:16] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[14:28:31] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 258 seconds)
[14:34:07] * hayley fixes her RE interpreter
[14:34:15] <hayley> And woohoo, (ab)* works with a DFA!
[14:37:42] <hayley> gilberth: I tried (a*)* and found my approach makes one empty match.
[14:38:05] <hayley> Though I never did the \nu r + r hack. Hm.
[14:44:32] *** Joins: random-nick (~random-ni@87.116.182.181)
[14:52:10] <gilberth> hayley: Hmm. I will give it a try when I am done with TeX.
[14:53:14] <gilberth> Ok. Pascal may not short circuit AND and OR. And if so, I found another bug. sigh
[14:54:02] <hayley> However, I use the original one-more-re-nightmare algorithm to find effects to fire (i.e. every effect reachable without stepping over a character literal), which might change things.
[14:54:08] <gilberth> My AND and OR are functions on purpose.
[14:56:14] <hayley> .oO( Trying a(b)c|ab(d)...oh, it didn't work? No, I just forgot to type the |. )
[14:57:48] <hayley> Now to write a compiler. Perhaps another one, since I can't seem to write one which I think is nice to read.
[14:59:06] <gilberth> Do as Knuth does. Use literate programming to pretend that you're would be nice to read, while in reality it's not.
[14:59:23] <gilberth> * your code :/
[14:59:47] <hayley> Very funny.
[15:00:14] * hayley also has "balkanize DECENTRALISE-STANDARD-SYSTEM:STANDARD-SYSTEM" on the cleaning up list.
[15:01:50] <hayley> I was perhaps not too clever and added a "version" number to some messages which was never used. IIRC probably some attempt at mutating objects which never happened. So if we have the option of ignoring the version number, we can simplify a fair few things.
[15:03:16] <hayley> In the case of a memory database, we turn like 3 hash table operations into 1 with atomic set-if-missing, and we can signal the TOO-OLD error if that fails. But that fast path needs to be cleared out.
[15:03:46] <hayley> Anyway, the compiler. I already separated making the DFA from code generation, which is better than before.
[15:05:16] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[15:07:59] *** Quits: sm2n (~sm2n@user/sm2n) (Ping timeout: 255 seconds)
[15:08:38] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 268 seconds)
[15:18:13] <dave0> hayley: https://youtu.be/tDl3bdE3YQA
[15:18:14] -ixelp- Edie Brickell & New Bohemians - What I Am (Official Music Video) - YouTube
[15:18:37] <shka> gilberth: there is time and place for literate programming
[15:25:28] *** Joins: nihaal (~nihaal@106.201.177.18)
[15:36:05] <hayley> https://www.youtube.com/watch?v=ITx5vzQi0go
[15:36:06] -ixelp- Elvis Costello - (I Don't Want To Go To) Chelsea (Rockpalast) - YouTube
[15:36:49] <dave0> hayley: he's good.. i just listened to 'every day i write the book' and 'watching the detectives'
[15:40:07] <hayley> OTOH https://www.youtube.com/watch?v=nj7h70RdI_c
[15:40:08] -ixelp- Simple Minds - Chelsea Girl - YouTube
[15:40:40] <gilberth> shka: I don't like macros, which refer to random outside lexicals. Not even in any way declared. Thus blurs the interface. A nice function is much clearer.
[15:42:05] <shka> https://www.youtube.com/watch?v=Wz_xJPN7lAY
[15:42:05] -ixelp- Top 10 Craziest Assembly Language Instructions - YouTube
[15:42:15] <shka> gilberth: i feel ya
[15:42:20] <hayley> 10. x86-64 MOV 9. x86-64 MOV 8. ...
[15:42:30] <dave0> "sex" is the sign extension insutrction on 6809
[15:42:44] <dave0> "orl" and "anl" appear on 8051
[15:46:03] <gilberth> shka: And look at the bug posted <http://clim.rocks/gilbert/tex/bug.txt>, where does the constant #o4000000 even come from? It's not said what is tested at all in that IF.
[15:48:40] <shka> selwyn: have you seen this: https://sciencex.com/news/2021-07-electromagnetism-property-spacetime.html ?
[15:48:41] -ixelp- Electromagnetism is a property of spacetime itself, study finds
[15:49:01] <shka> do you think there is any warranted interest in the subject?
[15:50:05] <shka> i think that we would observe some really weird neutron stars if this would hold some merit 
[15:51:51] <gilberth> I'll watch that later, as the title sounds scary.
[15:52:10] <gilberth> Or read, I guess.
[15:54:03] <selwyn> i will have a look at it in a few minutes
[15:54:17] <selwyn> looks cool
[15:54:30] <shka> nice to have residential physicist at the cafe 
[15:56:34] <gilberth> I only qualify as a pro bug finder. :-/
[15:59:26] <shka> bug witcher
[16:02:18] <gilberth> Well, I don't hunt bugs. The bugs hunt me.
[16:04:30] <shka> so... bug victim
[16:05:27] <gilberth> Maybe I should join hayley and grow vegetables for less bugs. Oh. Can you do that at night?
[16:12:44] <selwyn> you could probably hunt slugs at night, useful on the tomato patch
[16:14:11] <selwyn> that´s a really cool article
[16:17:52] <shka> selwyn: i also find it cool, but i am afraid that there is no empirical data to back it up
[16:22:40] <shka> fingers crossed that i am wrong
[16:25:10] <selwyn> there is certainly no empirical data (that we know of) to back it up
[16:25:17] <selwyn> but that is not such a huge obstacle
[16:26:42] <selwyn> the authors hypothesise things which are testable in theory
[16:27:06] <selwyn> how practical it would be, idk, though there is no reason to be pessimistic
[16:27:42] <selwyn> when you come up with a new piece of theoretical physics, the worry is that it might not be testable at all, and then you have in effect just achieved some nice mathematical results
[16:29:08] <selwyn> the paper has a ´why didn´t i think of that´ factor
[16:30:01] <shka> selwyn: i mean, we KNOW that some neutron stars generate magnetic fields strong enough to shred atoms
[16:30:48] <shka> and i don't recall a consistent problem with gravitational anomalies there
[16:30:51] <shka> but we will see
[16:32:03] <selwyn> oh
[16:32:17] <hayley> 10. idk not a real HPC person I don't do floating point 9. can't complain 8. I LIKE THIS ONE FUCK OFF 7. dot product goes brrrrrrr 6. bad, probably backdoored 5. BRRRRRRRRR 4. CAS CAS CAS CAS CAS 3. multiply bignums? 2. video encoding instruction, can't complain 1. reaction left to the reader.
[16:32:34] <selwyn> in that case, the experiment could simply be, observe neutron stars
[16:32:40] <selwyn> but that comes with its own difficulties
[16:32:56] <edgar-rft> can lists be shredded by strong enough magnetic fields, too?
[16:34:12] <selwyn> hm
[16:36:18] <selwyn> you can measure deviations in spacetime by measuring tidal forces 
[16:36:39] <selwyn> but that seems very difficult to do
[16:37:33] <selwyn> and the issue with neutron stars, is that although they have large gravitational fields, and large magnetic fields
[16:37:34] * edgar-rft measures the US Air Force
[16:38:32] <selwyn> we probably don´t know enough about the properties of the individual stars to say ´well, if the hypothesis is correct, then neutron star x should behave in such and such a way´
[16:45:55] <selwyn> shka: damn they really do have strong magnetic fields
[16:46:38] <selwyn> but as i say, it seems we don´t even know the masses of these things very accurately
[16:46:58] <shka> selwyn: yeah, but also strong gravitational fields so maybe we miss interpreted it
[16:47:08] <shka> anyway
[16:48:06] <shka> if there are neutron stars that have estimated mass above the limit of neutron star mass...
[16:48:18] <selwyn> if we are uncertain in the mass then we can´t hope to quantify the gravitational field very accurately either
[16:48:29] <hayley> How do I use the damn pretty printer with FORMAT again?
[16:48:58] <shka> hayley: *print-pretty*
[16:49:46] <selwyn> shka: yes that would be a nice way to hint at new physics
[16:49:58] <hayley> Rather when I print some stuff, I want to make a logical block, then throw in conditional newlines between arguments. e.g. \alpha[A, B] could be broken after the , and B should be indented.
[16:50:08] <shka> selwyn: well, it is possible to measure gravitational field in gravitational lense 
[16:50:20] <shka> hayley: ~^, 
[16:50:33] <shka> not sure if this is what you mean
[16:51:08] <shka> selwyn: i am kinda excited about that, unified field theory strikes back ;-)
[16:51:55] <selwyn> this is interesting in that nothing here is quantum
[16:52:27] <selwyn> so you could ´quantise´ the hypothesis and find out what the quantum field theory ramifications are
[16:52:44] * selwyn thinks
[16:52:45] <selwyn> uh. maybe not
[16:54:04] <selwyn> you could quantise only the electromagnetic field and do electrodynamics on curved spacetime.. and use that to obtain potentially different predictions on how black holes emit radiation
[16:54:14] <selwyn> but black hole radiation is not easy to observe either
[16:54:38] <shka> not on a naturally occurring ones anyway
[16:54:50] <shka> we gotta need our own black hole :D
[16:54:52] <hayley> How convenient that the CLHS doesn't provide an example of ~< ~:>
[16:55:07] <hayley> :>
[16:55:17] <shka> hayley: well, what those it do anyway?
[16:55:22] <shka> *does it do
[16:55:33] <hayley> Sets up a pprint-logical-block
[16:55:46] <shka> TIL
[16:58:04] <hayley> Or maybe I should just use P-L-B and suck it up. Though it is a lot to write.
[16:58:09] <selwyn> i wonder what part of lisp caused the most arguments in the specification committee
[16:59:40] <hayley> (format t "~@<Blaaaaaaaaaah ~_ ~a~_ ~a~:>" "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" "B")
[17:00:10] <hayley> (format t "Blah ~@<~a~_~a~:>" "AAA...." "B") lines up right.
[17:00:16] <selwyn> ~_~
[17:00:49] <selwyn> <~a~_~a~:> looks like someone wearing headphones?
[17:01:15] *** Joins: sm2n (~sm2n@user/sm2n)
[17:02:43] <selwyn> being able to couple electromagnetism to gravity like that makes some difficult sci fi concepts seem more achievable, which is nice
[17:03:06] <shka> selwyn: artificial gravity baby! 
[17:03:21] <shka> anti gravity!
[17:03:25] <shka> FORCE FIELDS!
[17:03:58] <hayley> Now my RE spam logs look slightly better: https://pastebin.com/yaexpYdZ
[17:03:59] -ixelp- ONE-MORE-RE-NIGHTMARE> (derivative* *** "ccccccaababababb")γ[α[{START ← P}ca - Pastebin.com
[17:10:07] * hayley has the pretty printer print Unicode subscripts too. Very nice.
[17:12:41] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[17:13:40] <hayley> Though the pretty printer puts varying spaces on either end of ~S -> ~S when printing the Graphviz code, so I had to change that. Oh well.
[17:18:10] <hayley> Seriously, you write \l (backslash l, not some escape) to left align a line? Can't we have some [textalign=left] attribute?
[17:26:38] <hayley> cl-dot does something sane, so I guess I will use a proper generator.
[17:30:32] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 245 seconds)
[17:37:33] *** Joins: makomo (~makomo@user/makomo)
[17:39:44] <hayley> Well, the output of cl-dot looks fine, but it doesn't work :(
[17:40:50] <hayley> ...as Graphviz demands a \l on your last line, even though there is no line break.
[17:46:04] <hayley> It is also oblivious to escaping \ but I can make that work.
[17:47:25] *** Joins: derelict (~derelict@user/derelict)
[17:48:24] <hayley> https://twitter.com/nodefunallowed/status/1419648264328994817/photo/1
[17:48:33] <hayley> A very pretty printer.
[18:33:13] *** Quits: derelict (~derelict@user/derelict) (Quit: WeeChat 3.2)
[18:34:21] *** Joins: lad (~lad@user/lad)
[18:50:28] <edgar-rft> where's the makeup?
[18:56:27] <hayley> I dunno, but there are some parts of the DFA which are wrong. So at least I know now that DFA generation is bad.
[18:57:56] *** Quits: elflng (~elflng@5.28.137.182) (Quit: Lost terminal)
[19:04:11] *** Joins: zacts (~zacts@user/zacts)
[19:04:48] <dave0> hayley: you're up late!
[19:13:13] *** Joins: elflng (~elflng@5.28.137.182)
[19:29:43] <pjb> LOL: The World Will Run Out of EV Batteries by 2025 <https://oilprice.com/Energy/Energy-General/The-World-Will-Run-Out-Of-EV-Batteries-By-2025.html>
[19:29:44] -ixelp- The World Will Run Out Of EV Batteries By 2025 | OilPrice.com
[19:35:52] *** Quits: random-nick (~random-ni@87.116.182.181) (Quit: quit)
[19:37:04] *** Joins: random-nick (~random-ni@87.116.182.181)
[19:41:52] *** Quits: zacts (~zacts@user/zacts) (Ping timeout: 246 seconds)
[19:46:05] *** Joins: selwyn (~selwyn@user/selwyn)
[20:04:18] <shka> pjb: you find this funny?
[20:08:11] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[20:23:41] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[20:43:59] <selwyn> shka: one of the authors of the electromagnetism paper works at the finland radiation and nuclear safety authority
[20:44:02] <selwyn> interesting day job
[21:36:55] <shka> that's cool
[21:43:40] <shka> haha, the promo for the GSL finals
[21:43:41] <shka> https://www.youtube.com/watch?v=1wLTmFwQWRM
[21:43:41] -ixelp- [Promo] 2021 GSL S2 Finals Trap vs Dark - YouTube
[21:43:48] <shka> Dark is trapped 
[21:43:53] <shka> and Trap is in the dark
[21:43:56] <shka> funny
[22:04:21] *** Quits: nihaal (~nihaal@106.201.177.18) (Quit: nihaal)
[22:06:42] *** Quits: minion (~minion@common-lisp.net) (Read error: Connection reset by peer)
[22:07:25] *** Joins: minion (~minion@common-lisp.net)
[22:24:15] *** Quits: xantoz (~tewi_inab@c-c0bae255.013-124-73746f25.bbcust.telenor.se) (Quit: WeeChat 3.0)
[22:52:21] <gilberth> Good morning #lispcafe!
[22:56:22] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 272 seconds)
[23:00:22] *** Quits: minion (~minion@common-lisp.net) (Remote host closed the connection)
[23:06:55] *** Joins: minion (~minion@common-lisp.net)
[23:13:22] <selwyn> hi
[23:14:56] <gilberth> Hello selwyn!
[23:18:23] <selwyn> is there any more flooding?
[23:20:32] <gilberth> Yes, in India IIRC
[23:23:19] <selwyn> it turns out that they deliberately built on a flood plain in order to meet compulsory housing targets
[23:23:25] <selwyn> and built the important stuff above ground
[23:23:27] *** Quits: treflip (~user@95.79.32.99) (Quit: good night)
[23:24:03] <selwyn> (in london)
[23:24:21] <gilberth> Here there were complains about people not having been warned. I believe one problem is that there always is some weather warning. You don't take that serious anymore. Like on Saturday or so, we got a warning about strong rain fall, and what happened? Nothing. There is a "red" warning right now. *sigh*
[23:25:14] <selwyn> some monk in germany rung the bells to warn people
[23:25:16] <selwyn> which worked
[23:26:15] <gilberth> Well, since cold war was declared over, we don't have any sirens anymore.
[23:26:49] <selwyn> that would have an undesirable effect during a flood i imagine
[23:26:53] <gilberth> In Hamburg there are a few, but only in those places, which could be flooded seriously in case of a huge storm flood.
[23:26:59] <selwyn> people run to underground shelters.. which then get flooded
[23:27:13] <gilberth> Heh.
[23:27:34] <gilberth> You're supposed to switch on the radio. Which radio?
[23:29:09] <gilberth> I mean, in winter you a warning about that temperatures could be below zero. Celsius. I don't read those anymore.
[23:31:11] <gilberth> Or about wind? Wind in North Germany? Surprise! Tell me when its above 10 Beaufort.
[23:33:55] <gilberth> Anyhow. Any idea what I could test TeX on? Could I find somewhere lots of TeX files. And kinda olde, as my chars are 8-bit and I have none of the extensions like PDF or the like. And pdftex is written half in C, so I can't easily run that.
[23:34:37] <gilberth> But I think, first I'll boot LaTeX.
[23:37:49] <gilberth> I wrap places read in PLACE(x), like x = PLACE(foo[i]), yet #define PLACE(x) ({ typeof(x) tmp__; memcpy (&tmp__, &(x), sizeof (x)); tmp__; }) does not work for some reason. Hmm.
[23:44:13] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[23:47:17] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 255 seconds)
[23:51:55] <gilberth> Hmm, seems like I am bitten by so called arrays in C. With "char a[10];" sizeof(a) = 10, yet when evaluated as an rvalue 'a' turns into 'char*'. Hmm.
[23:57:58] <gilberth> Even typeof(*&x) does not work. That is broken IMHO, as *&a would be a 'char', not a 'char[10]', which doesn't exists really. sigh
[23:58:51] *** Quits: minion (~minion@common-lisp.net) (Remote host closed the connection)
