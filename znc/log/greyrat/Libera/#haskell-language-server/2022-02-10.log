[00:05:43] <maerwald> even worse... TH AND boot files together can cause dragons
[01:15:34] <sm> shapr: there is sometimes a clue in the Haskell output pane, but you have to really look hard for the needle in the haystack
[01:16:11] <sm> you can also try running hls at the command line 
[01:17:23] <sm> on individual suspected problem files perhaps
[02:21:02] <shapr> I upgraded to hls 1.6.1 and it works?!
[02:21:39] <sm> aww, too easy
[02:22:00] <sm> surely it's only temporary
[02:23:10] *** Joins: libertyprime (~libertypr@118-92-72-229.dsl.dyn.ihug.co.nz)
[02:23:20] *** Quits: libertyprime (~libertypr@118-92-72-229.dsl.dyn.ihug.co.nz) (Client Quit)
[02:23:49] <shapr> sm: seems to work on all the big scary modules so far
[02:23:55] *** Joins: libertyprime (~libertypr@118-92-72-229.dsl.dyn.ihug.co.nz)
[02:24:00] <shapr> there's a loop on Main modules, but it's otherwise fine
[02:26:09] <sm> \o/
[02:33:32] <shapr> seems to fix most of the problems I've had in the past two years with our monster codebase
[04:46:13] *** Quits: dxld[m] (~dxldit-sy@2001:470:69fc:105::978) (Ping timeout: 240 seconds)
[04:46:49] *** Joins: dxld[m] (~dxldit-sy@2001:470:69fc:105::978)
[05:52:43] *** Quits: jiribenes (~jiribenes@rosa.jiribenes.com) (Remote host closed the connection)
[07:11:48] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:13:16] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:55:05] *** Quits: jade (jade@lfcode.ca) (Quit: meow)
[07:55:37] *** Joins: jade (~jade@lfcode.ca)
[08:40:25] *** Quits: jade (~jade@lfcode.ca) (Quit: meow)
[08:40:49] *** Joins: jade (jade@lfcode.ca)
[12:01:18] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 276 seconds)
[12:08:43] *** Joins: hololeap (~hololeap@user/hololeap)
[13:30:55] *** Joins: cptwunderlich (~Benjamin@212-186-57-158.cable.dynamic.surfer.at)
[13:56:25] *** Quits: m5zs7k (aquares@web10.mydevil.net) (Ping timeout: 256 seconds)
[13:57:31] *** Joins: m5zs7k (aquares@web10.mydevil.net)
[14:06:04] *** Joins: Gowilla (~ganesh@urchin.earth.li)
[14:11:02] *** Quits: Philonous (~Philonous@user/philonous) (*.net *.split)
[14:11:03] *** Quits: maerwald (~maerwald@user/maerwald) (*.net *.split)
[14:11:03] *** Quits: Heffalump (~ganesh@urchin.earth.li) (*.net *.split)
[14:11:03] *** Quits: wz1000 (~zubin@static.11.113.47.78.clients.your-server.de) (*.net *.split)
[14:11:03] *** Quits: Lierdakil (~lierdakil@94.158.171.19) (*.net *.split)
[14:11:03] *** Quits: dminuoso (~dminuoso@user/dminuoso) (*.net *.split)
[14:16:11] *** Joins: Philonous (~Philonous@user/philonous)
[14:16:11] *** Joins: maerwald (~maerwald@user/maerwald)
[14:16:11] *** Joins: wz1000 (~zubin@static.11.113.47.78.clients.your-server.de)
[14:16:11] *** Joins: Lierdakil (~lierdakil@94.158.171.19)
[14:16:11] *** Joins: dminuoso (~dminuoso@user/dminuoso)
[14:18:54] *** Quits: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net) (Remote host closed the connection)
[14:19:07] *** Joins: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net)
[14:19:09] <dminuoso> Ohh, I get it. I actually dont have import lists.
[15:45:01] *** Quits: libertyprime (~libertypr@118-92-72-229.dsl.dyn.ihug.co.nz) (Ping timeout: 250 seconds)
[16:21:53] <michaelpj[m]> shapr: while I like the idea of bounties I fear we do not have a good method of turning money into contributors :)
[16:22:21] <michaelpj[m]> I do wish there was some way to isolate the TH stuff so it didn't crash the whole damn process...
[16:33:29] <shapr> so it turns out...
[16:33:39] <shapr> totbwf and I spent an hour and a half pairing on this problem
[16:33:51] <shapr> with the idea of hacking in a top level catch
[16:34:04] <shapr> My biggest complaint yesterday was that I couldn't see what crashed the process
[16:34:21] <shapr> so we added one line of code that may turn into a PR?
[16:36:03] <shapr> We added a "catch, print, rethrow" right here https://github.com/haskell/haskell-language-server/blob/master/ghcide/src/Development/IDE/Main.hs#L255
[16:37:46] <shapr> totbwf also told me he's several times seen a problem combining when using both stack and the fileRelativeTo* functions from https://hackage.haskell.org/package/file-path-th-0.1.0.0/docs/System-FilePath-TH.html
[18:00:43] *** Quits: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[18:01:48] *** Joins: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net)
[19:20:37] *** Quits: cptwunderlich (~Benjamin@212-186-57-158.cable.dynamic.surfer.at) (Ping timeout: 240 seconds)
[20:13:01] <shapr> excluding blank lines, work codebase is 639126 lines of Haskell, and so far hls 1.6.1 works great, with only one bit of weirdness for Main modules
[20:13:11] <shapr> we have lots of template haskell, and that part is no longer a problem!
[20:13:15] <shapr> at least, hls doesn't crash
[20:13:47] <shapr> including blank lines, 765_258 lines of Haskell
[20:40:03] <maerwald> shapr: would you mind testing an experimental distribution of HLS on that codebase?
[20:40:50] <maerwald> wrt https://github.com/haskell/haskell-language-server/pull/2675
[20:43:11] <sm> g'day all. What could cause this: multipackage stack project with hie.yaml, no errors in Output, hls seems to be mostly working but cmd-t (search by type) spins without listing anything (& used to work) ?
[20:47:39] <maerwald> sm: well... you should test the new experimental distribution of HLS then!
[20:50:08] <shapr> maerwald: I'll put it on my todo list, might be able to try it on Friday
[20:50:15] <maerwald> cool
[20:50:22] <shapr> maerwald: is there perhaps a benchmarking harness for HLS?
[20:50:40] <shapr> something where I could run it in the root of monorepo and it would record memory / cpu / etc usage for the devs?
[20:50:57] <shapr> right now HLS is using a 20GB heap
[20:51:19] <shapr> though only ~7GB is active
[20:53:17] <maerwald> shapr: https://pypi.org/project/Procpath/ maybe?
[20:53:29] <maerwald> seems to be able to emit cute plots
[21:16:59] <jcwasmx86[m]> Hello, I'm currently working on getting HLS to work on GNOME Builder. Syntax, completion and some codeActions etc work, but the codeActions of hlint don't work.
[21:17:33] <jcwasmx86[m]> I just get an empty array returned as response: See this gist: https://gist.github.com/JCWasmx86/751b983371a6c161a5ce168dc43b1f21
[21:20:30] <jcwasmx86[m]> The warnings of hlint do show up, so the plugin works
[21:36:11] <jcwasmx86[m]> Ah, well I'm missing the "source" member that is required for hlint to work
[23:35:13] *** Quits: juhp (~juhp@128.106.188.82) (Ping timeout: 256 seconds)
[23:37:19] *** Joins: juhp (~juhp@128.106.188.82)
