[00:05:50] <FromDiscord> <deech> Can I use `genAst` to generate "parts" of a type so I can assemble however I want? eg. I'd like a `tuple[i:int, s:string, ...]` but I'd like to produce it in a macro which takes something like `@[("i","int"),("s","string"), ...]`. I realize this can be done with `newColonExpr` but this seems more convenient if it can be done.
[00:36:55] <arkanoid> I'm doing the "smallest statically linked hello world possible game", and I'm realizing that upx fails to compress musl statically linked binaries
[00:37:29] <FromDiscord> <Yardanico> upx doesn't compress really small files, yeah, I tried before ;)
[00:37:40] <arkanoid> oh, well, old bug https://github.com/upx/upx/issues/309
[00:37:48] <FromDiscord> <Yardanico> this one is fixed
[00:38:01] <FromDiscord> <Yardanico> and it's 30kb
[00:38:10] <FromDiscord> <Yardanico> a fully static nim musl hello world binary can be 5kb
[00:38:17] <arkanoid> is "nim --gc:arc -d:release --opt:size --gcc.exe:musl-gcc --gcc.linkerexe:musl-gcc --passL:-static -o:hello_static_musl c hello.nim" the best I can do?
[00:38:38] <FromDiscord> <Yardanico> what size do you get?
[00:38:40] <FromDiscord> <Yardanico> also -d:danger
[00:38:45] <FromDiscord> <Yardanico> also --panics:on
[00:38:48] <FromDiscord> <Yardanico> also -flto
[00:39:00] <FromDiscord> <Yardanico> read the blog post :P
[00:39:14] <FromDiscord> <Yardanico> and this repo https://github.com/ee7/binary-size
[00:41:51] <arkanoid> oh!
[00:42:00] <arkanoid> zigcc?
[00:42:27] <FromDiscord> <Yardanico> it's a wrapper script for `zig cc` since nim doesn't like compiler commands with space in the name
[00:43:38] <arkanoid> I'm getting much larger binaries
[00:43:44] <arkanoid> but nim 1.6.0 here
[00:44:30] <FromDiscord> <Yardanico> with all the same configs?
[00:44:40] <FromDiscord> <Yardanico> are you sure you're executing the correct command for 4kb?
[00:46:15] <FromDiscord> <Yardanico> I just tested and I get a 4960 bytes binary after the last 4kb command + `strip -s file`
[00:46:18] <arkanoid> no as I'm not even near that. I've a script that tests both glibc and musl, and I'm getting 784K for statically compiled glibc and 26K for musl
[00:46:44] <arkanoid> and with strip -s at the end for both
[00:46:51] <FromDiscord> <Yardanico> well, as you can check in the repo, it uses a lot of additional arguments
[00:47:06] <FromDiscord> <Yardanico> e.g. -d:useMalloc makes nim use malloc instead of its own memory allocator
[00:47:23] <FromDiscord> <Yardanico> --panics:on turns all Defect exceptions into unrecoverable panics
[00:47:26] <FromDiscord> <Yardanico> and so on
[00:50:43] <arkanoid> this is the script I'm using now: https://termbin.com/t5vb
[00:51:15] <arkanoid> according to that table, I should get glibc version 18KB
[00:51:27] <FromDiscord> <Yardanico> no
[00:51:42] <FromDiscord> <Yardanico> the 18kb is dynamically linked with glibc
[00:52:03] <FromDiscord> <Yardanico> the 18kb with static is with musl-clang
[00:52:20] <FromDiscord> <Yardanico> there are two 18kb entries in the table, look carefully :) one is glibc dynamically linked, the other is musl-clang statically linked
[00:52:38] <FromDiscord> <Yardanico> statically-linked glibc will be huge obviously
[00:52:58] <arkanoid> isn't --passL:-s for static?
[00:53:12] <FromDiscord> <Yardanico> that's stripping
[00:53:14] <FromDiscord> <Yardanico> static is -static
[00:53:24] <arkanoid> oh!
[00:59:12] <arkanoid> I should now be in the 22KB case but I'm geetting 26KB https://termbin.com/fjxw
[00:59:44] <FromDiscord> <Yardanico> well, "should" is a broad term
[00:59:49] <FromDiscord> <Yardanico> different compiler versions, musl versions, etc
[01:00:31] <arkanoid> also copypasting that line is 26KB
[01:00:42] <arkanoid> well, not a problem, very happy with this result
[01:00:44] <FromDiscord> <Yardanico> also try stripping still
[01:00:47] <FromDiscord> <Yardanico> `strip -s file`
[01:00:53] <FromDiscord> <Yardanico> `-s` option for gcc doesn't do all of the stripping
[01:01:38] <arkanoid> I've already tried but still 26KB
[01:01:57] <FromDiscord> <Yardanico> well, i can't help
[01:02:08] <FromDiscord> <Yardanico> complain to your nearest musl-gcc maintainer :P
[01:02:39] <arkanoid> with devel upx --best down to 13KB
[01:02:50] <arkanoid> btw really impressive
[01:03:02] <arkanoid> now I can join the demoscene!
[01:03:04] <arkanoid> or maybe not
[01:04:27] <FromDiscord> <Yardanico> does demoscene allow for upx?
[01:04:40] <FromDiscord> <Yardanico> also see https://github.com/demotomohiro/nim-4k-intro-sample
[01:06:33] <FromDiscord> <enthus1ast> @Yardanico\: https://github.com/runestubbe/Crinkler
[01:14:10] <FromDiscord> <DMI-1407> is there already a git api for nim ?
[01:14:18] <FromDiscord> <IsaacPaul> so for c the compiler can remove dead code if you make it separate functions and data with `-ffunction-sections -fdata-sections` then use `--gc-section` to make the linker include only the sections that are (transitively) dependent on an explicitly included section
[01:14:38] <FromDiscord> <IsaacPaul> (edit) "compiler" => "linker"
[01:14:47] <FromDiscord> <Yardanico> but is that better than lto + strip?
[01:14:59] <FromDiscord> <IsaacPaul> No idea haha
[01:17:10] <arkanoid> I'll leave the task to the pro to find out
[01:17:22] <arkanoid> I'm already quite happy with that
[01:17:45] <arkanoid> are there out major knows issues with nim + musl?
[01:20:20] <FromDiscord> <Yardanico> don't think so
[01:27:50] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[01:32:11] <FromDiscord> <leorize> https://github.com/disruptek/gittyup↵(@DMI-1407)
[01:32:40] <FromDiscord> <DMI-1407> ah nice 🤩
[01:35:38] <FromDiscord> <demotomohiro> sent a long message, see http://ix.io/3ClV
[01:40:03] <arkanoid> thanks!
[01:50:00] <arkanoid> this thing that demoscene tends to work with windows has always puzzled me
[01:50:53] *** Quits: koltrast_ (~koltrast@h77-53-57-114.cust.a3fiber.se) (Quit: ZNC - http://znc.in)
[01:51:15] *** Joins: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se)
[01:52:54] <FromDiscord> <Yardanico> @arkanoid maybe it has to do with the fact that windows has a lot of built-in APIs whereas in Linux libraries are separate from the kernel, so there could be a lot of arguing about "should GTK libraries be counted towards the size" or something similar
[01:57:32] <arkanoid> but I bet most of the scenes are opengl based
[01:59:22] *** Quits: mahlon (~mahlon@martini.nu) (Ping timeout: 252 seconds)
[01:59:56] <arkanoid> glutCreateWindow is all you need, obviously stripping down everthing else ... I guess
[02:02:39] *** Joins: mahlon (~mahlon@martini.nu)
[02:08:38] <arkanoid> Yardanico: here it says SDL2 or GTK3 https://benjamin-computer.medium.com/my-first-demoscene-production-6d426764ad22
[02:23:44] <Mister_Magister> Gotta update nim in opensuse cause noone actively maintains it
[02:23:52] <Mister_Magister> and i need newer version :P
[02:24:09] <Mister_Magister> "but why don't you just use choosenim" arm
[02:24:40] <FromDiscord> <Yardanico> seems like someone does maintain it
[02:24:41] <FromDiscord> <Yardanico> https://build.opensuse.org/package/show/home%3Atux93%3Aleap/nim
[02:25:16] <Mister_Magister> its in some guys home repo
[02:25:19] <Mister_Magister> so no, doesn't seem so
[02:27:00] <FromDiscord> <Yardanico> well you said "maintain", and it's maintained in his home repo :)
[02:27:43] <Mister_Magister> not really no
[02:28:00] <Mister_Magister> anyway i'll be updating it soon
[02:28:19] <Mister_Magister> i'm already contributor :P
[03:17:04] <Mister_Magister> https://build.opensuse.org/request/show/926630 now we waitin
[03:54:51] <Mister_Magister> meh it doesn't pass tests
[04:18:25] <Mister_Magister> if i'm not mistaken they're simply broken
[04:20:50] <Mister_Magister> testament doesn't download nimble deps right?
[04:36:05] *** Quits: LyndsySimon (sid34452@id-34452.lymington.irccloud.com) (Ping timeout: 260 seconds)
[04:42:19] *** Joins: LyndsySimon (sid34452@id-34452.lymington.irccloud.com)
[05:30:09] <FromDiscord> <gogolxdong (liuxiaodong)> Is there any windows kernel development kit in Nim
[05:31:24] <Mister_Magister> wait, there was someone here nuts enough to do AVR in nim
[05:31:28] <Mister_Magister> any info on that topic?
[05:31:35] <Mister_Magister> cause async on avr would be just epic
[05:31:52] <Mister_Magister> i fell in love with async
[05:32:57] <FromDiscord> <gogolxdong (liuxiaodong)> What's AVR?
[05:36:52] <Mister_Magister> liek atmega or esp
[05:37:03] <Mister_Magister> or audio-video receiver
[05:37:21] <Mister_Magister> https://en.wikipedia.org/wiki/AVR_microcontrollers
[05:37:55] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[05:44:55] <FromDiscord> <KimJongUnstoppable> Is there an easy way to map a char seq to an array? I'm taking in data as hex from stdin and need to map it back to the array it was generated from, but fromHex() gives a char sequence that it won't let me just copy into the array. I tried iterating through the sequence and adding each value to the array but that didn't work either since it wants bytes, not chars, and I'm not familiar with any way to convert char to byte
[05:45:12] <FromDiscord> <KimJongUnstoppable> (edit) "an" => "a byte"
[05:45:27] <FromDiscord> <Elegantbeef> `char(byte)` `byte(char)`
[05:45:47] <FromDiscord> <KimJongUnstoppable> every question I bring to you, you give me a reasonable answer and that makes it worse
[05:45:48] <FromDiscord> <KimJongUnstoppable> lol
[05:45:49] <FromDiscord> <KimJongUnstoppable> thank you
[05:45:54] <FromDiscord> <Elegantbeef> They're both 8 bit so it's a super simple (probably free)
[05:47:38] <FromDiscord> <Elegantbeef> Me giving reasonable answers is impossible
[05:52:47] <FromDiscord> <KimJongUnstoppable> haha. is there a better way to convert than iterating through the sequence and doing it one at a time in a for loop?
[05:52:51] *** Joins: rockcavera (~rc@192.12.113.197)
[05:52:51] *** Quits: rockcavera (~rc@192.12.113.197) (Changing host)
[05:52:51] *** Joins: rockcavera (~rc@user/rockcavera)
[05:53:07] <FromDiscord> <Elegantbeef> you have a seq of bytes and they're going to an array of chars?
[05:53:33] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Cmi
[05:53:45] <FromDiscord> <KimJongUnstoppable> yes. and thank you again
[05:53:56] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[05:54:07] <FromDiscord> <Elegantbeef> Guess you dont need the `[0].addr` for the array, only if it's a seq
[07:05:54] <FromDiscord> <codic> hmm, I don't think you need that, you can just use the seq and index into it then cast to byte
[07:05:57] <FromDiscord> <codic> (edit) "hmm, I don't think you need that, you can just use the seq and index into it then cast ... to" 03added "/ conv"
[07:06:06] <FromDiscord> <codic> of course unless you need an array
[07:06:36] <FromDiscord> <Elegantbeef> You of course can do it otherways
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:39:46] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[08:19:56] <nrds> <06Prestige99> Having an issue with pointers. https://play.nim-lang.org/#ix=3CmK seeing weird values come back
[08:20:38] <FromDiscord> <Elegantbeef> pointers to stack variables
[08:20:42] <FromDiscord> <Elegantbeef> Living dangerously over there arent you
[08:21:13] <nrds> <06Prestige99> hmm how should this be done?
[08:22:02] <FromDiscord> <Elegantbeef> Well if you must use a pointer heap allocating then assigning that
[08:22:03] <FromDiscord> <Elegantbeef> If otherwise using a ref
[08:22:25] <nrds> <06Prestige99> How would I heap alloc an array?
[08:22:29] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3CmL
[08:23:05] <FromDiscord> <Elegantbeef> Actually replace `create(typeof(result))`  with `createU(array[4, cfloat])`
[08:23:07] <nrds> <06Prestige99> interesting, don't think I've seen create before
[08:23:24] <FromDiscord> <Elegantbeef> It's syntax sugar over allocation + cast
[08:23:39] <FromDiscord> <Elegantbeef> It's the manual memory management equivlent of  `new`
[08:23:49] <nrds> <06Prestige99> interesting
[08:23:59] <FromDiscord> <Elegantbeef> Now i do have to ask, is there a reason you cannot use a `ref`?
[08:24:25] <nrds> <06Prestige99> not that I know of, just playing with a wrapper. can probably use ref
[08:25:04] <FromDiscord> <Elegantbeef> then there you go replace `ptr` with `ref` and do `new result` instead of that create
[08:26:22] <nrds> <06Prestige99> neat, thanks
[08:26:41] <FromDiscord> <Elegantbeef> But congrats you had your first dangler
[08:26:46] <FromDiscord> <Elegantbeef> Dangling pointer that is 😛
[08:26:50] <nrds> <06Prestige99> haha
[08:27:15] <FromDiscord> <Elegantbeef> You pointed to the stack then moved on which means your pointer was unsafe, this is infact why you cannot capture `var T` parameters
[08:32:15] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Remote host closed the connection)
[08:32:40] *** Joins: kayabaNerve (~kayabaNer@user/kayabanerve)
[09:36:21] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Ping timeout: 245 seconds)
[09:36:59] *** Joins: blackbeard420_ (~blackbear@45.33.85.133)
[09:37:00] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[09:37:36] *** Quits: blackbeard420 (~blackbear@2600:3c03:e000:297:af:af:af:42) (Ping timeout: 245 seconds)
[11:34:26] *** Joins: Guest6 (~Guest6@modemcable016.68-59-74.mc.videotron.ca)
[11:37:01] *** Quits: Guest6 (~Guest6@modemcable016.68-59-74.mc.videotron.ca) (Client Quit)
[11:47:29] *** Joins: Vladar (~Vladar@46.162.2.53)
[12:02:01] <NimEventer> New thread by Jasonfi: Error in chronos with Nim 1.6, see https://forum.nim-lang.org/t/8524
[12:03:23] *** Quits: supakeen (~user@python/site-packages/supakeen) (Ping timeout: 264 seconds)
[12:14:26] <NimEventer> New Nimble package! tokarax - Converts HTML to Karax representation, see https://github.com/thisago/tokarax
[12:17:19] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[12:18:27] *** Joins: xet7 (~xet7@user/xet7)
[12:20:10] *** Joins: supakeen (~user@python/site-packages/supakeen)
[12:37:57] <FromDiscord> <ruki> sent a long message, see http://ix.io/3CmO
[12:38:10] *** Joins: PMunch (~PMunch@c01F28BC3.dhcp.as2116.net)
[12:54:58] *** Joins: neurocyte0132889 (~neurocyte@195.80.52.7)
[12:54:58] *** Quits: neurocyte0132889 (~neurocyte@195.80.52.7) (Changing host)
[12:54:58] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[13:14:24] <FromDiscord> <Ícar> sent a code paste, see https://play.nim-lang.org/#ix=3CnL
[13:18:13] <NimEventer> New thread by Marc: "-- template" for nimscript options, see https://forum.nim-lang.org/t/8526
[13:21:44] <FromDiscord> <Yardanico> In reply to @Ícar "Hi, could anyone explain": this is not a full error, and it's erroring out because you're not using the result of parseInt
[13:22:01] <FromDiscord> <Yardanico> parseInt returns a parsed integer so you need to assign it to something
[13:23:28] <FromDiscord> <Yardanico> In reply to @Ícar "Hi, could anyone explain": Also, you don't need to shell out to nproc to know the number of cores, see https://nim-lang.org/docs/cpuinfo.html#countProcessors
[13:24:34] <FromDiscord> <Yardanico> it works for most OSes out there, of course for win/lin/mac/bsd , etc
[13:25:00] <FromDiscord> <Ícar> sent a code paste, see https://play.nim-lang.org/#ix=3CnQ
[13:25:19] <FromDiscord> <Ícar> I'll use the `countProcessors`, thanks for pointing that out
[13:25:52] <FromDiscord> <Yardanico> In reply to @Ícar "I figured out, so": Also, just a bit of sugar - you can do ..< so you don't need to -1 yourself
[13:26:07] <FromDiscord> <Yardanico> for n in 0..<numCpus: do stuff
[13:26:29] <FromDiscord> <Ícar> Huh, nice one 😄 I started playing with Nim yesterday
[13:38:49] <FromDiscord> <OceanMongrel> Hey, just discovered Nim today. Looks really interesting - I'm going to explore game dev with it once I learn more..
[13:39:35] <FromDiscord> <Rika> Say hi in #gamedev once you’re ready
[13:45:34] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[13:51:26] *** Quits: PMunch (~PMunch@c01F28BC3.dhcp.as2116.net) (Quit: leaving)
[13:54:18] <NimEventer> New thread by JPLRouge: Nim 1.6.0 GTK cast cstring ?, see https://forum.nim-lang.org/t/8527
[15:14:36] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Read error: Connection reset by peer)
[15:14:59] *** Joins: neurocyte0132889 (~neurocyte@195.80.52.7)
[15:14:59] *** Quits: neurocyte0132889 (~neurocyte@195.80.52.7) (Changing host)
[15:14:59] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[15:20:47] *** Quits: blackbeard420_ (~blackbear@45.33.85.133) (Quit: ZNC 1.8.2 - https://znc.in)
[15:20:59] *** Joins: blackbeard420 (~blackbear@45.33.85.133)
[15:30:08] *** Joins: Vladar (~Vladar@46.162.2.53)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:38:03] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[15:41:08] *** Joins: neurocyte0132889 (~neurocyte@195.80.52.7)
[15:41:08] *** Quits: neurocyte0132889 (~neurocyte@195.80.52.7) (Changing host)
[15:41:08] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[15:41:32] *** Quits: Vladar (~Vladar@46.162.2.53) (Ping timeout: 258 seconds)
[15:41:57] *** Joins: Vladar (~Vladar@46.162.2.53)
[16:14:27] *** Joins: arkurious (~arkurious@user/arkurious)
[16:33:44] <FromDiscord> <dom96> Interesting. Sentry.io contributed to Nim on open collective.
[16:39:47] *** Joins: rockcavera (~rc@192.12.113.197)
[16:39:47] *** Quits: rockcavera (~rc@192.12.113.197) (Changing host)
[16:39:47] *** Joins: rockcavera (~rc@user/rockcavera)
[16:42:26] <FromDiscord> <ruki> I tried to use the vcc(msvc) compiler to compile the nim program on windows, but it got stuck. I do not know why.↵`nim c --cc:vcc src/main.nim`
[16:45:34] <FromDiscord> <ruki>  https://media.discordapp.net/attachments/371759389889003532/900734050543747112/IMG_20211021_211005.jpg
[16:51:56] *** Joins: sagax (~sagax_nb@user/sagax)
[16:54:35] <FromDiscord> <haxscramper> Pmunch\: when you rebuild playground for 1.6, would it be possible to enable all the preview flags, such as dot and unicode operators and so on
[16:56:05] <FromDiscord> <Rika> it is already on 1.6
[16:58:55] <FromDiscord> <ruki> ? what should I do?
[16:59:39] <FromDiscord> <Rika> i dont know
[17:02:25] <FromDiscord> <haxscramper> Well, that's really unfortunate↵(@Rika)
[17:03:00] <FromDiscord> <haxscramper> I guess time to recommend wanbox exclusively then
[17:03:55] <FromDiscord> <Rika> why
[17:04:09] <FromDiscord> <pietroppeter> In reply to @dom96 "Interesting. Sentry.io contributed to": it seems on October 21st they made a batch of contributions of different sizes (5k, 2k, ... 100) to various Open Source projects, see: https://opencollective.com/sentry/transactions?offset=0
[17:05:50] <FromDiscord> <pietroppeter> btw our about section still mentions "the coveted 1.0": https://opencollective.com/nim#category-ABOUT
[17:05:58] <FromDiscord> <Rika> wandbox doesnt have 1.6 (or 1.4.8 even) afaik
[17:09:21] <FromDiscord> <haxscramper> Wanbox has latest trunk updated nearly daily or something like that↵(@Rika)
[17:09:37] <FromDiscord> <haxscramper> They don't have 1.6.0, but already have 1.7.1 and certainly have 1.4.8
[17:11:58] <FromDiscord> <haxscramper> Also does not separate compiler and runtime output
[17:12:48] <FromDiscord> <haxscramper> I personally kind of hate this part of nim playground, where I have to jump back and forth on every compile step if I'm doing something with macros
[17:17:00] <FromDiscord> <Rika> just checked
[17:17:06] <FromDiscord> <Rika> 1.4.8 isnt there 🙂
[17:19:08] <FromDiscord> <haxscramper> I wonder how they configure new versions
[17:19:35] <FromDiscord> <haxscramper> I already make sure that godbolt had the recent one, so I might as well look after this
[17:21:00] <FromDiscord> <haxscramper> Though nim playground has none of the other features, so lack of 1.4.8 (while having latest devel) is even less of an issue
[17:45:54] <|smlckz|> why exceptions are called ''Defect''s here?
[17:46:12] <FromDiscord> <Rika> that is only one kind of exception
[17:46:18] <FromDiscord> <Rika> the other one is "CatchableError"
[17:46:33] <FromDiscord> <Rika> one you shouldnt catch, one you can
[17:48:39] <FromDiscord> <Gumber> One of my co-workers shared one of Deech's talks with me about Nim the other day, umprompted
[17:48:48] <FromDiscord> <Rika> woah
[17:48:57] <FromDiscord> <Gumber> I mean - he knows I'm a big Nim fanboi but I hadn't been talking to him about Nim recently
[17:51:54] <FromDiscord> <Gumber> I guess he was impressed enough with Deech's talk and Nim to say something
[17:52:33] <FromDiscord> <Gumber> But I mean, all of deech's talks are really good
[17:52:43] <FromDiscord> <Gumber> dude has giving tech presentations nailed down to a science
[18:17:40] <|smlckz|> taking an example from the spec: is `converter toInt(x: char): int = result = ord(x)` the same as `converter toInt(x: char): int = ord(x)` ?
[18:22:16] <FromDiscord> <Yardanico> yes
[18:22:43] <FromDiscord> <Yardanico> because ord is the last expression in the routine and its value is not discarded
[18:22:51] <FromDiscord> <Yardanico> in the version without result
[18:33:21] <FromDiscord> <zetashift> Deech's talk was amazing!
[19:21:34] <FromDiscord> <dom96> In reply to @pietroppeter "btw our about section": can you submit an issue about this on the website repo?
[20:07:49] <FromDiscord> <pietroppeter> @dom96 you mean as a reminder? the change should be done in open collective, not on website repo, right?
[20:08:09] <FromDiscord> <dom96> yep
[20:11:26] <FromDiscord> <pietroppeter> done: https://github.com/nim-lang/website/issues/312
[20:19:45] <FromDiscord> <dom96> thx!
[20:27:19] <FromDiscord> <dom96> Ahhh, regarding Sentry: https://news.ycombinator.com/item?id=28945998
[20:32:29] <FromDiscord> <dom96> Python and Rust each got like ~20k 🙂
[20:32:52] <FromDiscord> <dom96> I suppose we should be thankful for somebody working at Sentry voting for Nim to get a slice of this
[20:33:43] <nixfreak_nim[m]> I'm not a developer  professionally at least, but I would like to learn how to port something over , javascript/typescript to nim. Examples , something simple at first? Cause porting is literally just creating the same program in another language right?  
[20:33:44] <FromDiscord> <haxscramper> Hm, with this and earlier Bitcoin donation we are well over minimum required capital for a foundation if we decide to go with this -  https://forum.nim-lang.org/t/8525#55239At least a lot of languages I know have a non profit "foundation" (like zig, rust Julia etc), though it is of course depends on the location/country of where they set it up and so on
[20:35:06] <FromDiscord> <haxscramper> And from what I can tell there is no legal entity behind nim, like foundation/association - everything mostly goes between Araq and status, and maybe couple other core developers
[20:35:15] <FromDiscord> <haxscramper> Correct me if I'm wrong
[20:38:49] <FromDiscord> <haxscramper> And open collective team list is out of date
[20:39:12] <FromDiscord> <dom96> yes, a foundation would be awesome
[20:39:42] <FromDiscord> <dom96> I've been trying to push for it for many years, but doing it outside of the US isn't trivial
[20:40:11] <FromDiscord> <haxscramper> And of course there is also a question of basic "how established the language is from outside perspective" thing
[20:41:18] <FromDiscord> <dom96> Does anyone know of open source foundations established outside the US? In the UK or EU?
[21:25:10] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[21:28:05] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[21:38:05] <Egeon> I have a struct with fields in it. Is macro a right tool to dump the struct with fields information?
[21:38:57] <FromDiscord> <zetashift> oh snap Nim got 100k!?
[21:42:10] <FromDiscord> <geekrelief> In reply to @Egeon "I have a struct": You can use `fields` to iterate over the fields and use `typeof` if you need type information or go the macro route. https://nim-lang.github.io/Nim/iterators.html#fields.i%2CS%2CT
[21:46:51] <Egeon> Neato, thank you. I'd like the filed name printed out too.
[21:46:59] <Egeon> *field
[21:53:32] <FromDiscord> <geekrelief> In reply to @Egeon "Neato, thank you. I'd": `fieldPairs` gives you the name too
[22:06:55] <Egeon> thanks
[22:08:27] <FromDiscord> <Smarc> sent a code paste, see https://play.nim-lang.org/#ix=3Cqx
[22:09:05] <NimEventer> New Nimble package! nanim - Create smooth GPU-accelerated animations that can be previewed live or rendered to videos., see https://github.com/ErikWDev/nanim/
[22:09:14] <FromDiscord> <geekrelief> In reply to @Smarc "https://github.com/Smarcy/nim_chess/blob/dev/src/ma": I get a 404 from the link
[22:09:34] <FromDiscord> <Smarc> my bad, its private .. just a sec!
[22:09:58] <FromDiscord> <Smarc> should work now
[22:11:53] <FromDiscord> <geekrelief> What's the error nim is reporting?
[22:12:52] <FromDiscord> <Smarc> sent a code paste, see https://play.nim-lang.org/#ix=3Cqy
[22:13:53] <FromDiscord> <geekrelief> weird I was able to compile it
[22:14:01] <FromDiscord> <geekrelief> I'm on devel though
[22:14:07] <FromDiscord> <Smarc> huh
[22:14:15] <FromDiscord> <geekrelief> what version are you running?
[22:14:42] <FromDiscord> <Smarc> 1.4.8
[22:14:51] <FromDiscord> <geekrelief> you should try upgrading to 1.6
[22:14:52] <FromDiscord> <Smarc> `nim c main.nim` gives me the written error
[22:15:48] *** Joins: pro (~pro@user/pro)
[22:16:50] <FromDiscord> <Smarc> How do I actually update to 1.6 using nimble/choosenim? :s
[22:18:26] <FromDiscord> <geekrelief> I don't know. First time I tried choosenim on windows I had an issue.  I went to `devel` and never looked back.  I imagine `choosenim --help` would tell you how to upgrade.
[22:19:12] <FromDiscord> <Smarc> I'm on Manjaro, gonna look into it. But on the other hand, to me this still seems like a logical issue and I'd love to understand it
[22:20:32] <pro> what is the best way to capture/intercept all packets that arrive on a network interface
[22:23:32] <FromDiscord> <geekrelief> sent a code paste, see https://play.nim-lang.org/#ix=3CqE
[22:24:42] <FromDiscord> <Smarc> Switched to nim 1.6.0, same error :/
[22:25:05] <FromDiscord> <geekrelief> oh I'm on master
[22:25:07] <FromDiscord> <Smarc> Are you looking at the dev branch I linked?
[22:25:07] <FromDiscord> <geekrelief> you're on dev?
[22:25:10] <FromDiscord> <Smarc> yep
[22:27:34] <FromDiscord> <geekrelief> yeah I guess you do have a cyclic dependency
[22:28:31] <FromDiscord> <Smarc> I see that, but I think having the Piece-move logic in pieces.nim would be neat
[22:28:44] <FromDiscord> <Smarc> Is there an elegant way to avoid this in this easy sample?
[22:29:17] <FromDiscord> <geekrelief> I think in general you would want the moviing logic separate from the entity being moved.
[22:30:12] <FromDiscord> <geekrelief> To me, it would make sense to put it in Board
[22:30:43] <FromDiscord> <Smarc> Hm alright, I think if I want to pass the Board as an argument that is the way
[22:30:46] <FromDiscord> <Smarc> Thank you for your time!
[22:31:33] <FromDiscord> <Elegantbeef> Hey there's the guy that credited me with a broken PR 😛
[22:32:30] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[22:36:46] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[22:37:03] <FromDiscord> <geekrelief> who would that be? :p Should be good now though.
[22:37:21] <FromDiscord> <Elegantbeef> Well the board moving pieces makes more sense than the board asking the pieces to move imo, really there isnt any reason to use inheritance here other than "I want to" btw
[22:37:57] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3CqK
[22:38:57] <FromDiscord> <Elegantbeef> Jeez i cannot type presently
[22:39:31] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3CqM
[22:40:11] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[22:44:18] *** Joins: rockcavera (~rc@192.12.113.197)
[22:44:18] *** Quits: rockcavera (~rc@192.12.113.197) (Changing host)
[22:44:18] *** Joins: rockcavera (~rc@user/rockcavera)
[22:47:37] <FromDiscord> <Smarc> Ah I see, that would be a way to do this as well. But coming from Java I think inheritance is just in my veins :)
[22:48:41] <FromDiscord> <Elegantbeef> Yea understandable, we avoid inheritance here since it's generally unneeded 😛
[22:50:19] <FromDiscord> <Smarc> Btw what do I win/lose if i define Piece as "ref of" or "object" ?
[22:50:47] <FromDiscord> <Elegantbeef> `ref`s are heap allocated so you're getting a managed pointer, `object` is like a C struct, stack allocated
[22:51:04] <FromDiscord> <Elegantbeef> So in the case of a seq `object` is stored sequentially `ref` is thrown all over the heap
[22:53:01] <FromDiscord> <Smarc> Would it make any real difference in my Pieces sample?
[22:53:07] <FromDiscord> <Rika> it is bad for performance
[22:53:15] <FromDiscord> <Rika> if you have a few thousand of Pieces
[22:53:35] <FromDiscord> <Elegantbeef> Yea it's not really much different performance wise looking at chess, just was noting
[22:53:53] <FromDiscord> <Rika> i mean maybe you want to have 10000x10000 chess
[22:54:03] <FromDiscord> <Elegantbeef> Inheritance is a tool to be used when needed, no real point using it everywhere
[22:54:38] <FromDiscord> <Elegantbeef> Yea in that case it'd be very nice to have, since many pieces would be in your cache at once as they're stored sequentially
[22:54:43] <FromDiscord> <Elegantbeef> This is where the whole ECS conversation comes up 😀
[22:55:24] <FromDiscord> <Smarc> So the only real difference between `ref of` and direct `object` in my example would be speed right? Even if it is not noticeable by a human in such a tiny sample :)
[22:56:22] <FromDiscord> <Elegantbeef> Yea mostly just speed, the way nim does dynamic dispatch isnt too dissimilar to what you'd do with a case statement + bunch of procedures
[22:56:36] <FromDiscord> <Rika> and even if it were different it's still a matter of speed
[22:57:11] <FromDiscord> <Smarc> Okay, got it!
[22:57:15] <FromDiscord> <Elegantbeef> Which makes me wonder if i should clean up that method inspired object variant macro i made a while ago
[22:58:38] <FromDiscord> <Elegantbeef> This silly stuff if anyone is wondering https://play.nim-lang.org/#ix=3zpz
[23:13:10] <FromDiscord> <Smarc> Is there a way to make type members/fields mandatory? So if i have a type that has say `xPos, yPos: int` und can not just create it by Name() and have to pass Name(xPos: 0, yPos: 0)?
[23:14:17] <FromDiscord> <retkid> i have strings and a value association and i need to sort by the value
[23:14:42] <FromDiscord> <haxscramper> {.requiresinit.} Annotation for fields↵(@Smarc)
[23:15:06] <FromDiscord> <retkid> In reply to @haxscramper "{.requiresinit.} Annotation for fields": oh thanks my answer was way wose lol
[23:15:07] <FromDiscord> <haxscramper> xPos {.requiresinit.}\: int
[23:15:14] <FromDiscord> <retkid> (edit) "wose" => "worse"
[23:15:33] <FromDiscord> <Smarc> Thanks!
[23:15:47] <FromDiscord> <Rika> In reply to @retkid "i have strings and": Are you using ordered tables?
[23:16:03] <FromDiscord> <retkid> In reply to @Rika "Are you using ordered": Thats my instinct but i dont know if thats the best thing here
[23:16:13] <FromDiscord> <Rika> Then what do you think is?
[23:16:20] <FromDiscord> <retkid> thats why im asking here
[23:16:27] <FromDiscord> <haxscramper> If sorting for value you would need to get this into external seq, then sortByIt(it[1])
[23:16:40] <FromDiscord> <haxscramper> Because you can't sort a table, even ordered one
[23:16:48] <FromDiscord> <Rika> You can technically
[23:16:50] <FromDiscord> <retkid> In reply to @haxscramper "Because you can't sort": yea thats why im concerned
[23:16:51] <FromDiscord> <Rika> With a lot of effort
[23:16:57] <FromDiscord> <haxscramper> How?
[23:17:17] <FromDiscord> <Rika> Pop all values, sort, reinsert in desired order
[23:17:26] <FromDiscord> <haxscramper> Ordered table just remembers how you put stuff in, and if you did it right pairs() would work
[23:17:42] <FromDiscord> <haxscramper> Exactly what I proposed then
[23:17:55] <FromDiscord> <Rika> Well yes I never said it was good
[23:17:57] <FromDiscord> <Elegantbeef> There are sort procs for ordered tables
[23:18:18] <FromDiscord> <Rika> There are? I assumed so but hax said there weren’t
[23:18:27] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/tables.html#sort%2COrderedTableRef%5BA%2CB%5D%2Cproc%28%2C%29
[23:18:31] <FromDiscord> <haxscramper> https://nim-lang.org/docs/tables.html#sort%2COrderedTableRef%5BA%2CB%5D%2Cproc%28%2C%29
[23:18:32] <FromDiscord> <Elegantbeef> There are
[23:18:43] <FromDiscord> <haxscramper> Well, til
[23:18:52] <FromDiscord> <Elegantbeef> Nice link hax, very familiar URL 😛
[23:19:26] <FromDiscord> <haxscramper> But you can't add anything to the table afterwards
[23:19:37] <FromDiscord> <haxscramper> Or you would have to re-soet it
[23:19:38] <FromDiscord> <Rika> Well you can, just need to resort
[23:19:39] <FromDiscord> <haxscramper> Of course
[23:19:46] <FromDiscord> <jmgomez> hey guys, noob question: should nimble download the dlls alongside the bindings? Or the expected behavior is that the user will grab it?
[23:20:12] <FromDiscord> <Rika> I would say latter
[23:20:24] <FromDiscord> <Elegantbeef> system libraries need to sourced yourself
[23:20:35] <FromDiscord> <Rika> Otherwise nimble would become a general package manager wouldn’t it
[23:20:49] <FromDiscord> <Elegantbeef> It'd be weird is what it'd be
[23:21:16] <FromDiscord> <haxscramper> If we are on windows things might work differently and people might expect you to download every single dll and put it randomly all over the place
[23:21:20] <FromDiscord> <Elegantbeef> Though this is where we mention most Nim devs are on \nix so we dont need to fetch the .dlls 😀
[23:21:39] <FromDiscord> <jmgomez> okay, I just wanted to make sure first time using it
[23:21:47] <FromDiscord> <haxscramper> But on Linux almost all packages I've seen put notice about the required .so or something along those lines
[23:22:14] <FromDiscord> <jmgomez> thanks!
[23:22:36] <FromDiscord> <Rika> Windows dynamic libraries are a nightmare I guess
[23:23:01] <FromDiscord> <Elegantbeef> Just have a bazillion installed next to .exe's you'll get the program to work 😛
[23:23:13] <FromDiscord> <jmgomez> yeah, the downside I guess is manually matching the version
[23:23:18] <FromDiscord> <haxscramper> Well, at least it is not "fundamentally broken" like Linux
[23:23:19] <FromDiscord> <jmgomez> but that's fine
[23:23:23] <FromDiscord> <haxscramper> Right
[23:23:31] <FromDiscord> <Rika> In reply to @Elegantbeef "Just have a bazillion": Completely defeating the point of dynamic libraries
[23:24:00] <FromDiscord> <Rika> In reply to @haxscramper "Well, at least it": I assume the issue there is version management
[23:24:52] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=3CqT
[23:25:20] <FromDiscord> <Elegantbeef> Sorting it to just reverse it
[23:25:37] <FromDiscord> <retkid> i need to look at the sort function again
[23:25:44] <FromDiscord> <retkid> it just sorts from lowest to high
[23:25:55] <FromDiscord> <retkid> (edit) "it just sorts from lowest to high ... " 03added "so i reverse it"
[23:26:03] <FromDiscord> <Elegantbeef> There is an optional sortorder
[23:26:06] <FromDiscord> <haxscramper> You can negate cmp results
[23:26:13] <FromDiscord> <haxscramper> Or sortorder, yes
[23:26:14] <FromDiscord> <Elegantbeef> `order = SortOrderDescending`
[23:26:32] <FromDiscord> <Rika> You misspelled received by the way
[23:26:43] <FromDiscord> <retkid> (edit) "https://play.nim-lang.org/#ix=3CqT" => "https://play.nim-lang.org/#ix=3CqU"
[23:26:50] <FromDiscord> <retkid> (edit) "https://play.nim-lang.org/#ix=3CqU" => "https://play.nim-lang.org/#ix=3CqV"
[23:27:20] <FromDiscord> <Elegantbeef> No you!
[23:27:23] <FromDiscord> <Hamid Bluri> `recv` is a lot better : D
[23:27:48] <FromDiscord> <retkid> In reply to @Rika "You misspelled received by": this is why i dont show my code, this specific reason
[23:27:52] <FromDiscord> <retkid> i cant spell to save my life
[23:28:00] <FromDiscord> <Rika> Don’t worry beef can’t either
[23:28:09] <FromDiscord> <Elegantbeef> Bef\
[23:28:10] <FromDiscord> <retkid> but i refuse to download the spellcheck for vscode
[23:28:22] <FromDiscord> <Rika> Beef you’re Canadian right
[23:28:35] <FromDiscord> <Elegantbeef> That's what it says on my birth certificate
[23:28:44] <FromDiscord> <Elegantbeef> "Beef is Canadian, right"
[23:28:51] <FromDiscord> <Rika> Damn
[23:29:53] <FromDiscord> <Elegantbeef> Was there follow up or did you just decide to start a list of "Which countries to avoid visiting"?
[23:30:32] <FromDiscord> <retkid> sort(uwu, system.cmp, Descending)
[23:30:32] <FromDiscord> <Hamid Bluri> : D
[23:31:57] <FromDiscord> <impbox [ftsf]> Received was misspelt when it was created
[23:32:09] <FromDiscord> <Hamid Bluri> agreed
[23:36:50] <FromDiscord> <retkid> nim was a type
[23:36:52] <FromDiscord> <retkid> (edit) "type" => "typo"
[23:36:56] <FromDiscord> <retkid> it was originally nimk
[23:39:25] <FromDiscord> <Elegantbeef> nimkrod?
[23:50:53] *** Quits: pch_ (~pch@66.49.131.33) (Remote host closed the connection)
[23:51:28] *** Joins: pch_ (~pch@66.49.131.33)
