[00:01:49] <melezhik> .tell patrickb: I am looking at https://github.com/rakudo/rakudo/blob/master/azure-pipelines.yml, are you satisfied with this approach? I mean somehow we could start using sparrow instead of having scattered scripts gets called from the pipeline. if the goes grows it could helps to have more maintainable solution 
[00:01:50] <tellable6> melezhik, I'll pass your message to patrickb
[00:10:24] <melezhik> .tell patrickb: I am just no sure what kind of challenges you might have right now, but I see this as following - https://gist.github.com/melezhik/f3afb994cbf8941088cd64f43ad4465e , so to move all the complexity from azure devops pipelines  to docker jobs with sparrow
[00:10:25] <tellable6> melezhik, I'll pass your message to patrickb
[00:10:47] *** Joins: ufobat_ (~martin@dynamic-077-009-180-173.77.9.pool.telefonica.de)
[00:10:55] <melezhik> .tell patrickb:  just a thoughts ... ))
[00:10:57] <tellable6> melezhik, I'll pass your message to patrickb
[00:16:41] <melezhik> .tell patrickb: just from my experience of coding ci/cd with azure devops pipelines and all yaml based tool, in the long run I keep them as simple as possible moving all the logic into low level libraries, avoiding and emperical  constructions, like conditions in the high level. See for example how Sparrow could take care of distro dependent
[00:16:41] <melezhik> scenarios - https://github.com/melezhik/Sparrow6/blob/master/documentation/development.md#recognizable-os-list   https://github.com/melezhik/sparrow-plugins/blob/master/git-base/hook.pl6
[00:16:42] <tellable6> melezhik, I'll pass your message to patrickb
[00:17:45] <melezhik> .tell patrickb: avoiding AND emperical  constructions -> avoiding ANY emperical  constructions
[00:17:46] <tellable6> melezhik, I'll pass your message to patrickb
[00:35:33] *** Joins: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net)
[00:37:06] *** Quits: dogbert17 (~dogbert@c83-251-249-247.bredband.tele2.se) (Ping timeout: 256 seconds)
[00:49:25] *** Quits: Kaiepi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net) (Read error: Connection reset by peer)
[00:49:42] *** Joins: Kaiepi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net)
[01:20:35] *** Joins: jess (~jess@libera/staff/jess)
[02:03:27] *** Quits: ufobat_ (~martin@dynamic-077-009-180-173.77.9.pool.telefonica.de) (Ping timeout: 245 seconds)
[02:10:06] *** Quits: melezhik (~melezhik@174.128.60.162) (Quit: Connection closed)
[02:53:59] *** Joins: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net)
[03:17:14] *** Joins: Xliff (~Cliff@pool-71-255-227-73.washdc.east.verizon.net)
[03:17:24] <Xliff> \o
[03:17:37] <Xliff> Does Raku still NOT support passing CStructs to C-routines by value?
[03:18:01] <Xliff> IIRC, currently NativeCall only passes structs by reference. I was wondering if that had changed.
[03:29:51] <moon-child> Xliff: yes, it is not supported
[03:30:00] <moon-child> that's a dyncall limitation
[03:30:15] <moon-child> abis make passing structs by value a complete pain
[04:17:14] *** Quits: linkable6 (~lin-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[04:17:14] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[04:17:44] *** Joins: linkable6 (~lin-able@ns306169.ip-94-23-219.eu)
[04:20:18] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[04:32:41] *** Quits: reportable6 (~rep-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[04:34:38] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[04:44:34] *** Quits: DarthGandalf (user@znc/developer/DarthGandalf) (Quit: Bye)
[05:05:42] *** Joins: DarthGandalf (user@znc/developer/DarthGandalf)
[05:40:54] *** Quits: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net) (Quit: Leaving.)
[06:40:54] *** Quits: benchable6 (~ben-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[06:40:54] *** Quits: nativecallable6 (~nat-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[06:40:54] *** Quits: notable6 (~not-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[06:40:54] *** Quits: coverable6 (~cov-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[06:40:54] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[06:40:54] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[06:40:54] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[06:40:54] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[06:40:54] *** Quits: shareable6 (~sha-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[06:40:54] *** Quits: linkable6 (~lin-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[06:40:54] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[06:40:54] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[06:40:54] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[06:40:54] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[06:40:54] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[06:40:55] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[06:40:55] *** Quits: greppable6 (~gre-able@ns306169.ip-94-23-219.eu) (Write error: Connection reset by peer)
[06:40:55] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[06:40:55] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[06:41:21] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[06:41:46] *** Joins: benchable6 (~ben-able@ns306169.ip-94-23-219.eu)
[06:41:59] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[06:42:06] *** Joins: bloatable6 (~blo-able@ns306169.ip-94-23-219.eu)
[06:42:06] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[06:42:17] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[06:42:17] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[06:42:21] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[06:42:25] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[06:42:42] *** Joins: bisectable6 (~bis-able@ns306169.ip-94-23-219.eu)
[06:43:18] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[06:43:19] *** Joins: unicodable6 (~uni-able@ns306169.ip-94-23-219.eu)
[06:43:27] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[06:43:45] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[06:43:50] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[06:43:51] *** Joins: quotable6 (~quo-able@ns306169.ip-94-23-219.eu)
[06:43:53] *** Joins: greppable6 (~gre-able@ns306169.ip-94-23-219.eu)
[06:43:54] *** Joins: committable6 (~com-able@ns306169.ip-94-23-219.eu)
[06:44:03] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[06:46:28] <lucs> When I do ｢▸ rakubrew available｣, some versions are prefixed with 'D', what does it mean?
[07:23:59] *** Joins: frost (~frost@59.71.241.179)
[07:28:40] *** Quits: MasterDuke (~MasterDuk@2601:14c:4201:5a20:b4e:72f5:4c0c:1d5) (Ping timeout: 246 seconds)
[08:28:40] *** Quits: committable6 (~com-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[08:28:40] *** Quits: bloatable6 (~blo-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[08:28:40] *** Quits: bisectable6 (~bis-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[08:28:40] *** Quits: unicodable6 (~uni-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[08:28:40] *** Quits: quotable6 (~quo-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[08:28:40] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:28:40] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:28:40] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:28:40] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[08:28:41] *** Quits: benchable6 (~ben-able@ns306169.ip-94-23-219.eu) (Write error: Connection reset by peer)
[08:28:41] *** Quits: greppable6 (~gre-able@ns306169.ip-94-23-219.eu) (Write error: Connection reset by peer)
[08:29:36] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[08:29:37] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[08:29:43] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[08:29:50] *** Joins: quotable6 (~quo-able@ns306169.ip-94-23-219.eu)
[08:30:30] *** Joins: benchable6 (~ben-able@ns306169.ip-94-23-219.eu)
[08:31:19] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[08:31:22] *** Joins: unicodable6 (~uni-able@ns306169.ip-94-23-219.eu)
[08:31:33] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[08:31:34] *** Joins: evalable6 (~eva-able@ns306169.ip-94-23-219.eu)
[08:31:38] *** Joins: notable6 (~not-able@ns306169.ip-94-23-219.eu)
[08:31:48] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[09:31:48] *** Quits: notable6 (~not-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[09:31:48] *** Quits: evalable6 (~eva-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[09:31:48] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:31:48] *** Quits: unicodable6 (~uni-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[09:31:48] *** Quits: quotable6 (~quo-able@ns306169.ip-94-23-219.eu) (Read error: Connection reset by peer)
[09:31:48] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:31:48] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:31:48] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:31:48] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:31:48] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:31:48] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:31:48] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:31:48] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:31:48] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:31:48] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:31:48] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:31:48] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:31:48] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:31:49] *** Quits: benchable6 (~ben-able@ns306169.ip-94-23-219.eu) (Write error: Connection reset by peer)
[09:32:06] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[09:32:25] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[09:32:30] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[09:32:51] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[09:32:51] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[09:32:54] *** Joins: notable6 (~not-able@ns306169.ip-94-23-219.eu)
[09:32:55] *** Joins: sourceable6 (~sou-able@ns306169.ip-94-23-219.eu)
[09:33:07] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[09:33:13] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[09:33:50] *** Joins: tellable6 (~tel-able@ns306169.ip-94-23-219.eu)
[09:33:52] *** Joins: quotable6 (~quo-able@ns306169.ip-94-23-219.eu)
[09:34:01] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[09:34:09] *** Joins: committable6 (~com-able@ns306169.ip-94-23-219.eu)
[09:34:18] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[09:34:19] *** Joins: bloatable6 (~blo-able@ns306169.ip-94-23-219.eu)
[09:34:38] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[09:34:40] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[09:34:43] *** Joins: shareable6 (~sha-able@ns306169.ip-94-23-219.eu)
[09:34:45] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[09:40:45] *** andinus` is now known as andinus
[09:44:46] *** Quits: Kaiepi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net) (Ping timeout: 252 seconds)
[10:03:29] *** Joins: Kaiepi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net)
[10:08:14] *** Quits: Kaiepi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net) (Ping timeout: 252 seconds)
[10:13:58] *** Joins: Kaiepi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net)
[10:21:09] *** Quits: Kaiepi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net) (Ping timeout: 255 seconds)
[10:23:42] *** Joins: Kaiepi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net)
[10:28:41] *** Quits: Kaiepi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net) (Ping timeout: 268 seconds)
[10:30:32] *** Joins: Kaiepi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net)
[10:32:42] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[10:35:33] *** Joins: reportable6 (~rep-able@ns306169.ip-94-23-219.eu)
[10:44:11] *** Quits: Tirifto (~Tirifto@47-186-71-19.dlls.tx.frontiernet.net) (Ping timeout: 252 seconds)
[10:53:02] *** Quits: Kaiepi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net) (Read error: Connection reset by peer)
[10:53:03] *** Joins: Kaipi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net)
[11:00:45] *** Quits: Kaipi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net) (Remote host closed the connection)
[11:00:52] *** Joins: Kaiepi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net)
[11:01:39] *** Quits: Eddward_ (~Eddward@207.138.204.132) (Ping timeout: 255 seconds)
[11:17:24] *** Quits: Kaiepi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net) (Ping timeout: 255 seconds)
[11:23:48] *** Joins: Kaiepi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net)
[11:31:23] <pony> can you include regexes, rules, and tokens from one grammar into another? (to avoid having very large ones)?
[11:33:17] <pony> e.g. include number grammar in calculator grammar in compiler grammar :)
[11:34:07] <japhb> Inheritance works; grammars are classes
[11:34:11] <moon-child> m: my token x { h }; grammar G { token TOP { <x> } }; grammar H { token TOP { <x> } }
[11:34:11] <camelia> rakudo-moar 5ecc8308f: ( no output )
[11:34:34] <japhb> And as moon-child points out, lexical scope works too.  :-)
[11:36:15] <pony> COOL
[11:36:18] <pony> cool (sorry caps)
[11:37:02] <pony> m: grammar A { TOP { 'a' } }; grammar B is A { TOP { <A::TOP> } }; say B.parse('a')
[11:37:02] <camelia> rakudo-moar 5ecc8308f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared name:␤    TOP used at line 1␤␤»
[11:38:05] <pony> m: grammar A { TOP { 'a' } }; grammar B is A { token TOP { <A::TOP> } }; say B.parse('a')
[11:38:05] <camelia> rakudo-moar 5ecc8308f: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared name:␤    TOP used at line 1␤␤»
[11:38:16] <pony> m: grammar A { token TOP { 'a' } }; grammar B is A { token TOP { <A::TOP> } }; say B.parse('a')
[11:38:17] <camelia> rakudo-moar 5ecc8308f: OUTPUT: «｢a｣␤ A::TOP => ｢a｣␤»
[11:51:33] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[12:14:51] *** Joins: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de)
[12:19:41] <patrickb> lucs: Re `rakubrew list-availiable`. The "D" marks versions for which a precompiled archive is available. This means you can use `rakubrew download` to set up such a version, which is an aweful lot faster than `rakubrew build`. I just noticed, that the docs over on rakubrew.org are stale in that respect. Will update this evening.
[12:19:43] <tellable6> 2021-07-14T19:40:56Z #raku <melezhik> patrickb:  just a thoughts ... ))
[12:19:43] <tellable6> hey patrickb, you have a message: https://gist.github.com/0d7a53c265b37a86adf48549d4294a16
[12:19:44] <tellable6> hey patrickb, you have a message: https://gist.github.com/001b4e7872d54f3131609ce7ddec8acb
[12:19:44] <tellable6> 2021-07-14T19:47:46Z #raku <melezhik> patrickb: avoiding AND emperical  constructions -> avoiding ANY emperical  constructions
[12:19:44] <tellable6> hey patrickb, you have a message: https://gist.github.com/e02f10f78b3a701e3137fa3b60dee1f9
[12:28:11] <patrickb> lucs: Also, did you know you can do `rakubrew help list-available`?
[12:29:51] *** Quits: Kaiepi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net) (Read error: Connection reset by peer)
[12:30:59] *** Joins: Kaiepi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net)
[13:09:58] *** Joins: Kaipi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net)
[13:10:37] *** Quits: Kaiepi (~Kaiepi@nwcsnbsc03w-47-54-173-93.dhcp-dynamic.fibreop.nb.bellaliant.net) (Remote host closed the connection)
[13:12:04] <Geth> ¦ doc: mykhal++ created pull request #3915: fix Python (dict key string) syntax
[13:12:04] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/3915
[13:28:50] <Geth> ¦ doc: ba3bbf749e | (Michal Bozon)++ (committed by Juan Julián Merelo Guervós) | doc/Language/py-nutshell.pod6
[13:28:50] <Geth> ¦ doc: fix Python (dict key string) syntax
[13:28:50] <Geth> ¦ doc: 
[13:28:50] <Geth> ¦ doc: was wrong Python syntax, or, dict() definition in fact tried to use (non-existent) variables instead of string literals
[13:28:50] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/ba3bbf749e
[13:28:53] <linkable6> Link: https://docs.raku.org/language/py-nutshell
[13:50:06] *** Joins: ufobat_ (~martin@dynamic-077-009-180-173.77.9.pool.telefonica.de)
[14:50:06] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[14:50:06] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[14:50:41] *** Joins: linkable6 (~lin-able@ns306169.ip-94-23-219.eu)
[14:52:03] *** Joins: evalable6 (~eva-able@ns306169.ip-94-23-219.eu)
[14:56:24] *** Quits: ufobat_ (~martin@dynamic-077-009-180-173.77.9.pool.telefonica.de) (Ping timeout: 272 seconds)
[14:58:23] <Xliff> moon-child: Thanks for that
[14:59:40] *** Quits: Xliff (~Cliff@pool-71-255-227-73.washdc.east.verizon.net) (Quit: Leaving)
[15:00:09] *** Joins: Xliff (~Cliff@pool-71-255-227-73.washdc.east.verizon.net)
[15:41:01] <lucs> patrickb: Ah, thanks for the 'D' explanation, and also for reminding me that command line help is available (I happened to be looking at the web page, and didn't think about doing a 'help').
[15:56:13] *** Quits: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net) (Quit: When You're Taught Through Feelings~♪)
[16:02:03] *** Joins: dogbert17 (~dogbert@c83-251-249-247.bredband.tele2.se)
[16:03:26] *** Joins: MasterDuke (~MasterDuk@2601:14c:4201:5a20:17a6:df64:a7ee:3f28)
[16:32:38] *** Quits: reportable6 (~rep-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[16:32:52] *** Joins: guifa (~guifa@static-168-71-26-46.ipcom.comunitel.net)
[16:33:59] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[16:49:59] <mykhal> oh duck, raku makes you butter(fly)
[16:50:39] * mykhal would have more doc fixes, but doesn't want to cause Geth commit report flood
[17:07:41] *** Quits: guifa (~guifa@static-168-71-26-46.ipcom.comunitel.net) (Quit: guifa)
[17:09:32] <mykhal> s/(\w+)\(\w+\)/($1)$2/
[17:09:54] <Altreus> it is quite a verbose report isn't it
[17:17:20] <mykhal> Altreus: may be subjective, I'm here for few days. I mind more that I don't know yet why my regex is incorrect in raku, it's something with escaped \( 's
[17:18:29] <mykhal>  .. ok, missing additional () pair :/ sorry
[17:25:11] <MasterDuke> mykhal: geth report floods are welcome, because that means things are getting better
[17:31:32] <Geth> ¦ doc: mykhal++ created pull request #3916: operator doc: (value, syntax) error fix
[17:31:32] <Geth> ¦ doc: review: https://github.com/Raku/doc/pull/3916
[17:35:53] *** Quits: MasterDuke (~MasterDuk@2601:14c:4201:5a20:17a6:df64:a7ee:3f28) (Quit: Client closed)
[17:36:19] *** Joins: MasterDuke (~MasterDuk@2601:14c:4201:5a20:17a6:df64:a7ee:3f28)
[18:10:00] <[Coke]> weird. I have two scripts that use 'use lib '../foo'; use MY::MODULE' - one works, the second says No such method 'CALL-ME' for invocant of type 'Str'
[18:10:16] <[Coke]> ... and it used to work. wtf.
[18:11:25] *** Joins: Eddward_ (~Eddward@207.138.204.132)
[18:12:31] <[Coke]> weird. rm -rf ../foo/.precomp - now it works.
[18:12:39] <[Coke]> (on windows, using git bash)
[18:17:44] *** Quits: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:18:04] *** Joins: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de)
[18:21:41] *** Quits: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:22:00] *** Joins: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de)
[18:23:54] *** Quits: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:24:14] *** Joins: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de)
[18:25:59] *** Quits: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:26:19] *** Joins: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de)
[18:27:59] *** Quits: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:28:18] *** Joins: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de)
[18:32:11] *** Quits: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:32:30] *** Joins: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de)
[18:36:03] *** Quits: abraxxa (~ahartmai@tsa-tc-flod-1.t-systems.at) (Read error: Connection reset by peer)
[18:44:08] *** Joins: Tirifto (~Tirifto@47-186-71-19.dlls.tx.frontiernet.net)
[18:46:53] *** Quits: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:47:08] *** Quits: frost (~frost@59.71.241.179) (Quit: Connection closed)
[18:47:12] *** Joins: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de)
[18:47:58] *** Joins: MasterDuke77 (~MasterDuk@2601:14c:4201:5a20:17a6:df64:a7ee:3f28)
[18:48:01] *** Quits: MasterDuke (~MasterDuk@2601:14c:4201:5a20:17a6:df64:a7ee:3f28) (Ping timeout: 246 seconds)
[18:50:34] *** Joins: Sgeo (~Sgeo@user/sgeo)
[18:50:51] *** Joins: dogbert11 (~dogbert@c83-251-249-247.bredband.tele2.se)
[18:50:51] *** Quits: dogbert17 (~dogbert@c83-251-249-247.bredband.tele2.se) (Read error: Connection reset by peer)
[18:53:11] *** Quits: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:53:30] *** Joins: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de)
[18:54:31] *** Joins: melezhik (~melezhik@c-98-198-98-197.hsd1.tx.comcast.net)
[18:54:31] <melezhik> .
[18:56:37] <[Coke]> -bash: .: filename argument required
[18:56:37] *** Quits: Xliff (~Cliff@pool-71-255-227-73.washdc.east.verizon.net) (Read error: Connection reset by peer)
[18:57:16] *** Joins: Xliff (~Cliff@pool-71-255-227-73.washdc.east.verizon.net)
[18:57:24] *** Joins: abraxxa (~ahartmai@tsa-tc-flod-1.t-systems.at)
[18:57:28] <[Coke]> m: e.IO.IO
[18:57:28] <camelia> rakudo-moar 5ecc8308f: ( no output )
[18:57:37] * [Coke] sensibly chuckles.
[19:02:01] *** Quits: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:02:21] *** Joins: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de)
[19:04:01] *** Quits: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:04:20] *** Joins: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de)
[19:08:56] *** Quits: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:09:15] *** Joins: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de)
[19:11:09] <mykhal> m: $*PERL.compiler
[19:11:09] <camelia> rakudo-moar 5ecc8308f: ( no output )
[19:13:08] *** Quits: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:13:27] *** Joins: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de)
[19:15:01] *** Joins: Juerd (juerd@computervrede.nl)
[19:15:48] <Xliff> Is there a write-up on how to dynamically create a class and add it to a compunit?
[19:16:45] <Xliff> Is this possible in current Raku, or would this need RakuAST?
[19:19:51] *** Quits: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:19:52] <moritz> what do you mean by "add it to a compunit"?
[19:20:04] <Xliff> Wouldn'
[19:20:10] *** Joins: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de)
[19:20:22] <Xliff> I would want to have the dynamically created class become a part of the compunit it is defined in.
[19:20:37] <Xliff> Or could I just assign that class to a constant, couldn't I?
[19:21:06] <moritz> yes
[19:21:20] *** Joins: cbk (~cbk@47.150.27.47)
[19:21:35] <Xliff> moritz: So how do I go about creating a class type?
[19:22:15] <Xliff> And then creating the constant that goes with it
[19:23:00] <moritz> see https://docs.raku.org/type/Metamodel::ClassHOW if you want to create a class
[19:23:20] <moritz> call new_type to create the class
[19:23:34] <moritz> add_method to add methods
[19:23:35] <moritz> etc
[19:23:41] <moritz> in the end, call compose
[19:24:00] <Xliff> OK.
[19:24:12] <moritz> and assing it to a constant just  constant MyClass = do { code that generates the class goes here }
[19:24:33] <moritz> and have the class be the last expression
[19:24:34] <moritz> or
[19:24:36] <Xliff> Yes, but the constants are also created dynamically.
[19:24:48] <Xliff> Which means their names are going to come from a string
[19:25:00] <Xliff> And I want it to behave as if they were statically defined.
[19:25:05] <moritz> then you probably need to add them to the symbol table
[19:25:05] <Xliff> Which means no sigil.
[19:25:17] <moritz> not with the "constant" declarator
[19:25:24] <Xliff> Is there another way?
[19:25:35] <moritz> why do you want another way?
[19:25:53] <Xliff> Can I dynamically create a sigil-less identifier and package that with a compunit?
[19:26:11] <moritz> ::{$name} = 42
[19:26:31] <Xliff> So I want to dynamically create "myType" from data. And then use it in code like "my myType $a .= new"
[19:27:01] <moritz> that's how I understood your question
[19:27:17] <Xliff> OK. Thanks. I appreciate the advice. I just need that last piece, I think.
[19:27:28] <moritz> the thing is, the code that wants to use myType needs to know myType at *its* compile time
[19:27:50] <moritz> so you could have at the top of the usage a "use TypeGenerator;"
[19:28:16] <moritz> and that uses and compiles TypeGenerator, which could dynamically generate the types
[19:28:33] <moritz> (the nesting of run time and compile time can be confusing at times)
[19:28:48] <Xliff> Actually, I was hoping I could create these at BEGIN time, serialize them in .precomp, then use them like regular types at runtime.
[19:29:09] <moritz> that might work as well
[19:29:16] <Xliff> All of the data required to create these types exists at compile time.
[19:29:36] <Xliff> I just don't want to have to break them down and create them by hand, if possible.
[19:30:15] <moritz> caveat: all my meta model hacking days are years in the past, so stuff might have changed (but probably not for the worse :D)
[19:30:58] <Xliff> Take this for example. I have this exemplar class as: "class DialogClassPart is repr<CStruct> is export { has XtPointer $.extension; }"
[19:31:11] <lucs> patrickb: As documented, I placed in .zshrc the ｢eval "$(/shome/lucs/rakubrew/bin/rakubrew init Zsh)"｣ line, but unfortunately, .zshrc is not sourced when a shell is launched from a script, so in that case, the PATH is not adjusted and raku is not found.
[19:31:18] <Xliff> However there are more distinct classes that look exactly the same, just with a different name.
[19:31:40] <Xliff> So there's: GripClassPart, ListClassPart, MenuButtonClassPart, PannerClassPart, etc...
[19:31:42] <lucs> patrickb: Any special reason that line wouldn't be better placed in .zshenv?
[19:31:44] *** Quits: Juerd (juerd@computervrede.nl) (Remote host closed the connection)
[19:31:44] <Xliff> All with the same definition.
[19:31:55] <lucs> (Appears to work when it's there.)
[19:32:09] <Xliff> Is there a way I can create all of those classes from the first one via nqp or meta programming?
[19:33:48] *** Joins: Juerd (juerd@computervrede.nl)
[19:34:18] <melezhik> how can I refer to `#` in regexp by code?
[19:34:32] <moritz> Xliff: I have too little up-to-date experience to tell
[19:34:45] <moritz> melezhik: I don't understand the question
[19:35:26] <melezhik> I want to say `"# hello" ~~ /'#'/` but I can't use `#` in regexp literally 
[19:35:33] <Xliff> moritz: OK, fair enough. Still, your advice has been invaluable. Have any idea who else I should ask?
[19:35:48] <moritz> m: say '# hello' ~~ /'#'/
[19:35:48] <camelia> rakudo-moar 5ecc8308f: ( no output )
[19:35:49] <patrickb> lucs: I'm not that familiar with zsh and when which of those files is sourced. rakubrew is fine with being initialized multiple times. So it doesn't hurt to put it in a script that is potentially sourced more than once.
[19:36:20] <moritz> melezhik: the bot seems to be b0rked, /'#'/ seems to work just fine for me
[19:36:31] <melezhik> I'd like to have an equivalent  regexp detention without `#` sign
[19:36:59] <moritz> \c[NUMBER SIGN] ?
[19:37:23] <melezhik> yeah,  something like that, thanks!
[19:37:38] <patrickb> IIRC The docs now say to use .bashrc instead of .bash_profile for the same reason. (I think .bashrc is called on every new (sub)shell, while .bash_profile is called less often. Or something along those lines.)
[19:38:34] <patrickb> lucs: So .zshenv is called more often than .zshrc?
[19:38:42] *** Quits: Juerd (juerd@computervrede.nl) (Ping timeout: 240 seconds)
[19:40:22] *** Quits: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:40:42] *** Joins: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de)
[19:42:11] <lucs> It's called when a script shells out, contrary to .zshrc.
[19:42:49] <patrickb> lucs: Ah, so it might actually make sense to add it to both?
[19:42:58] <patrickb> have to leave for a bit...
[19:43:01] *** Quits: patrickb (~patrickb@pd956be1c.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:45:33] <lucs> patrickb: I believe having it only in .zshenv is sufficient (like perlbrew does), but I'm not sure how to test it adequately.
[19:45:35] <tellable6> lucs, I'll pass your message to patrickb
[19:46:05] <Xliff> moritz: TMTOWTDI -- I used this to solve the use case I mentioned to you...
[19:46:06] <Xliff> grep ClassPart Structs.pm6 | grep has | cut -d\  \-f2 | sort | uniq | raku -ne 'print "class { $*IN.lines[0].chomp } is repr<CStruct> is export \{\n  has XtPointer \$.extension;\n\}\n\n"'
[19:50:08] *** Joins: lucasb (uid333435@id-333435.stonehaven.irccloud.com)
[19:53:50] *** Quits: lucasb (uid333435@id-333435.stonehaven.irccloud.com) (Client Quit)
[19:56:47] *** Joins: patrickb (~quassel@55d45d3e.access.ecotel.net)
[20:00:37] <lucs> patrickb: From my notes: https://gist.github.com/lucs/c321819d1cc126501f6b41a63b6cf0d0
[20:02:23] <patrickb> lucs: OK. So .zshenv seems like the file to aim for.
[20:02:25] <tellable6> 2021-07-15T15:15:35Z #raku <lucs> patrickb: I believe having it only in .zshenv is sufficient (like perlbrew does), but I'm not sure how to test it adequately.
[20:02:42] <lucs> Yeah, pretty sure that's the ticket.
[20:03:03] *** Joins: Juerd (~juerd@computervrede.nl)
[20:04:19] *** Quits: stoned75 (~seb@aclermont-ferrand-157-1-14-170.w86-209.abo.wanadoo.fr) (Ping timeout: 246 seconds)
[20:46:26] *** Quits: phogg (~phogg@user/phogg) (Ping timeout: 252 seconds)
[20:46:44] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[20:47:28] *** Quits: Juerd (~juerd@computervrede.nl) (Ping timeout: 268 seconds)
[20:48:08] *** Joins: squashable6 (~squ-able@ns306169.ip-94-23-219.eu)
[20:48:59] *** Joins: Juerd (juerd@computervrede.nl)
[20:51:27] <Geth> ¦ rakubrew.org: 763db71315 | (Patrick Böker)++ | 2 files
[20:51:28] <Geth> ¦ rakubrew.org: Provide instructions for how to work around MacOS' security limitations
[20:51:28] <Geth> ¦ rakubrew.org: 
[20:51:28] <Geth> ¦ rakubrew.org: Fixes #34
[20:51:28] <Geth> ¦ rakubrew.org: review: https://github.com/Raku/rakubrew.org/commit/763db71315
[20:51:28] <Geth> ¦ rakubrew.org: b12b294f33 | (Patrick Böker)++ | Containerfile
[20:51:28] <Geth> ¦ rakubrew.org: Bump Raku to 2021.04
[20:51:29] <Geth> ¦ rakubrew.org: review: https://github.com/Raku/rakubrew.org/commit/b12b294f33
[20:51:32] <Geth> ¦ rakubrew.org: e9eda7412a | (Patrick Böker)++ | resources/homepage.md.tmpl
[20:51:34] <Geth> ¦ rakubrew.org: Add/update the documentation for `home` and `list-available`
[20:51:36] <Geth> ¦ rakubrew.org: review: https://github.com/Raku/rakubrew.org/commit/e9eda7412a
[20:53:06] *** Joins: stoned75 (~seb@aclermont-ferrand-157-1-14-170.w86-209.abo.wanadoo.fr)
[20:54:24] *** Quits: MasterDuke77 (~MasterDuk@2601:14c:4201:5a20:17a6:df64:a7ee:3f28) (Quit: Client closed)
[20:56:34] <patrickb> vrurg: Can you confirm, that putting the rakubrew initialization in `.zshenv` makes more sense compared to the current `.zshrc`?
[21:01:42] *** Quits: Juerd (juerd@computervrede.nl) (Remote host closed the connection)
[21:08:43] <Geth> ¦ App-Rakubrew: dc2b6b9bd2 | (Patrick Böker)++ | 2 files
[21:08:43] <Geth> ¦ App-Rakubrew: By suggesting to add the hook to `.zshenv` instead of `.zshrc`.
[21:08:43] <Geth> ¦ App-Rakubrew: 
[21:08:43] <Geth> ¦ App-Rakubrew: It seems as `.zshenv` is available even in scripts, while
[21:08:43] <Geth> ¦ App-Rakubrew: `.zshrc` things are unavailable to scripts.
[21:08:44] <Geth> ¦ App-Rakubrew: 
[21:08:44] <Geth> ¦ App-Rakubrew: See https://web.archive.org/web/20210226033246/https://shreevatsa.wordpress.com/2008/03/30/zshbash-startup-files-loading-order-bashrc-zshrc-etc/
[21:08:45] <Geth> ¦ App-Rakubrew: review: https://github.com/Raku/App-Rakubrew/commit/dc2b6b9bd2
[21:13:06] *** Quits: stoned75 (~seb@aclermont-ferrand-157-1-14-170.w86-209.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[21:42:42] *** Quits: jess (~jess@libera/staff/jess) ()
[21:45:21] *** Joins: Juerd (juerd@2a02:2308:10::c:2a:2)
[22:02:06] *** Joins: MasterDuke (~MasterDuk@2601:14c:4201:5a20:17a6:df64:a7ee:3f28)
[22:20:06] *** Quits: patrickb (~quassel@55d45d3e.access.ecotel.net) (Quit: Quit.)
[22:24:30] *** Quits: cbk (~cbk@47.150.27.47) (Ping timeout: 252 seconds)
[22:26:41] *** Joins: patrickb (~patrickb@55d45d3e.access.ecotel.net)
[22:32:53] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[22:34:14] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[22:41:28] *** Quits: MasterDuke (~MasterDuk@2601:14c:4201:5a20:17a6:df64:a7ee:3f28) (Ping timeout: 246 seconds)
[22:42:01] *** Joins: cbk (~cbk@47.150.27.47)
[22:46:42] *** Joins: MasterDuke (~MasterDuk@2601:14c:4201:5a20:f015:ff42:f95:521b)
[22:49:48] *** Quits: cbk (~cbk@47.150.27.47) (Ping timeout: 252 seconds)
[22:50:59] *** Joins: cbk (~cbk@47.150.27.47)
[23:00:26] *** Quits: cbk (~cbk@47.150.27.47) (Ping timeout: 252 seconds)
[23:02:20] *** Joins: cbk (~cbk@107.127.24.129)
[23:07:51] <Geth> ¦ doc: bbb7c27854 | (Michal Bozon)++ (committed by Juan Julián Merelo Guervós) | doc/Language/operators.pod6
[23:07:51] <Geth> ¦ doc: operator doc: (value, syntax) error fix
[23:07:51] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/bbb7c27854
[23:07:51] <Geth> ¦ doc: 76e29aa76c | (Michal Bozon)++ (committed by Juan Julián Merelo Guervós) | doc/Language/operators.pod6
[23:07:51] <Geth> ¦ doc: .. fixed excesive space
[23:07:51] <Geth> ¦ doc: review: https://github.com/Raku/doc/commit/76e29aa76c
[23:07:54] <linkable6> Link: https://docs.raku.org/language/operators
[23:17:19] *** Quits: cbk (~cbk@107.127.24.129) (Ping timeout: 268 seconds)
[23:17:33] *** Joins: cbk (~cbk@47.150.27.47)
[23:27:48] *** Joins: notna (~Thunderbi@2a02:2455:361:9e00:6050:ab55:d947:103b)
[23:28:17] *** Quits: linkable6 (~lin-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[23:28:45] *** Joins: linkable6 (~lin-able@ns306169.ip-94-23-219.eu)
[23:35:27] <mykhal> one can wonder if infix methodop can be done, stackoverflow.com/q/68399295
[23:57:04] *** Quits: squashable6 (~squ-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[23:57:54] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
