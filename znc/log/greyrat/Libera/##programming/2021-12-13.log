[00:00:12] <deniska> I have been on the opposite extreme of that for way too long
[00:00:41] <deniska> being painfully aware where money are coming from, how there's not enough of them, and sometimes getting a paycheck a month or two late
[00:00:43] <pyzozord> oh yeah change of pace is very importsnt
[00:01:08] <pyzozord> oh that last thing sucks
[00:01:59] *** Joins: flakland (~flaknet99@32.211.211.39)
[00:01:59] *** Joins: dunkeln (~dunkeln@117.239.210.100)
[00:02:00] *** Quits: dunkeln (~dunkeln@117.239.210.100) (Changing host)
[00:02:00] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[00:02:02] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[00:02:15] *** Joins: flakland (~flaknet99@32.211.211.39)
[00:02:42] *** Quits: sh1r4s3 (~sh1r4s3@109.252.75.9) (Remote host closed the connection)
[00:03:06] *** Joins: Smeef (~deathonat@user/smeef)
[00:03:54] *** Joins: reezoh (~reezoh@2600:1702:3cf0:2e00:30e1:ed5f:a3a0:fd59)
[00:03:59] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[00:04:32] *** Quits: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[00:05:01] *** Joins: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[00:05:34] *** Quits: password (~password8@user/password2) (Ping timeout: 260 seconds)
[00:07:39] <Square> pyzozord, "relax next to a fire". I like that analogy
[00:09:15] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 268 seconds)
[00:09:42] *** Joins: radu24240788 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[00:09:43] *** Quits: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[00:09:44] *** radu24240788 is now known as radu2424078
[00:10:20] *** Joins: geenvoud (~geenvoud@user/geenvoud)
[00:11:32] *** Joins: jdmark (~jdmark@user/jdmark)
[00:12:24] <pyzozord> thanks :) yeah I like real life analogies too, I find they help me understand ideas better
[00:12:39] <pyzozord> or easier
[00:15:14] *** Joins: AbleBacon_ (~AbleBacon@user/AbleBacon)
[00:15:19] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 252 seconds)
[00:15:22] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Read error: Connection reset by peer)
[00:15:31] *** Joins: TCZ (~tcz@91.150.178.124)
[00:15:48] *** Quits: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[00:16:42] *** Guest1483 is now known as BenLand100
[00:17:07] *** Joins: MaghOz (~maghoz@2001:4bc9:801:f399:540d:f952:207a:4)
[00:18:07] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Ping timeout: 250 seconds)
[00:18:13] *** Joins: kek_1 (~kek_@2a02:168:200f:1f10:dcde:2774:1301:baad)
[00:20:02] *** Quits: kek_ (~kek_@net-2001-067c-10ec-574f-8000-0000-0000-0207.v6.ethz.ch) (Ping timeout: 260 seconds)
[00:20:21] *** Quits: geenvoud (~geenvoud@user/geenvoud) (Quit:  )
[00:20:29] *** Joins: Pickchea (~private@user/pickchea)
[00:20:43] *** Joins: CaCode (~CaCode@user/cacode)
[00:22:27] *** Joins: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[00:22:32] *** Joins: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[00:24:42] *** Quits: supernova (~quassel@2405:9800:ba11:6207:3f7c:e6d9:860d:2551) (Ping timeout: 260 seconds)
[00:25:39] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[00:26:22] <KillerWasp> hello random bottle caps guys
[00:27:48] <KillerWasp> only 15 hours for begin to participate the fusillade.
[00:27:58] <KillerWasp> sorry, to participate the KrampusHack
[00:28:32] *** Joins: Macuser (~Macuser@2600:1003:b45b:48a7:7006:ac07:19d9:5e22)
[00:28:55] <KillerWasp> no much time for add new participants...
[00:30:18] *** Quits: zaher_ (~zaher@37.48.176.120) (Read error: Connection reset by peer)
[00:30:21] <CaCode> KrampusHack? what's that? a festive hackathon?
[00:30:40] <pyzozord> I just looked up Krampus https://en.wikipedia.org/wiki/Krampus
[00:30:41] <bayaz> Title: Krampus - Wikipedia 
[00:30:41] <KillerWasp> CaCode: tins.amarillion.org
[00:30:59] <pyzozord> not looking very friendly https://en.wikipedia.org/wiki/File:Krampus_Morzger_Pass_Salzburg_2008_04.jpg
[00:31:00] <bayaz> Title: File:Krampus Morzger Pass Salzburg 2008 04.jpg - Wikipedia 
[00:31:33] <KillerWasp> CaCode: A programming festival in which you schedule 3 weeks creating a game and you send it as a gift to someone else, and they give you a gift too.
[00:32:07] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[00:32:10] *** Quits: paravida (~myChateau@user/paravida) (Ping timeout: 260 seconds)
[00:32:13] <CaCode> pyzozord, that is just an unflattering picture, check this one out: https://cdn.flickeringmyth.com/wp-content/uploads/2018/10/krampus-origins.jpg
[00:32:14] <bayaz> Type: image/jpeg Size: 152.1 kB 
[00:32:15] <pyzozord> that's a pretty cool idea
[00:32:31] <CaCode> KillerWasp, sounds amazing, and so festive!
[00:32:32] *** Joins: rany__ (~rany@user/rany)
[00:32:34] <CaCode> :)
[00:32:36] *** Quits: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[00:33:01] <KillerWasp> CaCode: maybe you have time for join and send 3 wishes. :)
[00:33:10] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:33:24] <CaCode> :) I'll try 
[00:34:33] <pyzozord> I'm thinking is it a good idea to buy the art of computer programming all tomes in physical form
[00:34:43] *** Joins: junebug (~junebug@2600:1700:3db0:2540:1bc2:b6e8:b3fd:1f4a)
[00:34:45] *** Quits: Macuser (~Macuser@2600:1003:b45b:48a7:7006:ac07:19d9:5e22) (Ping timeout: 252 seconds)
[00:34:47] <pyzozord> I'd be cool to have, it's a bit like a bible for prorammers isn't it
[00:35:21] *** Quits: rany_ (~rany@user/rany) (Ping timeout: 276 seconds)
[00:35:32] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[00:36:33] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-9cf9-e077-6a91-f1ef.res6.spectrum.com) (Ping timeout: 250 seconds)
[00:36:45] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Read error: Connection reset by peer)
[00:39:02] *** Joins: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[00:39:24] <bjs> pyzozord: would you read it?
[00:40:08] *** Quits: terminalpusher (~terminalp@2a01:586:1f85:1:5063:4755:1e14:fcec) (Remote host closed the connection)
[00:40:29] <GeDaMo> Doorsteps! Paperweights! Handy for putting under the short leg of the shoogly table! :P
[00:40:42] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 268 seconds)
[00:40:43] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-c025-4ecb-7d4d-0f1a.res6.spectrum.com)
[00:41:08] <GeDaMo> https://en.wiktionary.org/wiki/shoogly
[00:41:09] <bayaz> Title: shoogly - Wiktionary 
[00:41:19] *** Joins: jamea (~jamea@177.239.81.39)
[00:41:53] <pyzozord> I like to fool myself into thinking that I'd read some of the introductory stuff
[00:42:02] *** Quits: Kev_ (~Kev@2a01cb0400149f00b8705de2ce2aa5c3.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[00:42:04] <pyzozord> and skim through the rest
[00:42:29] <pyzozord> but mostly I just like to own the most important books just for like collecting
[00:44:27] *** Joins: radu24240785 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[00:44:29] *** Quits: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[00:44:29] *** radu24240785 is now known as radu2424078
[00:44:35] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[00:45:25] *** Joins: Guest00 (~Guest00@pool-96-253-74-73.rcmdva.fios.verizon.net)
[00:45:29] *** Joins: Duchess (~Duchess@24.109.185.150)
[00:45:50] *** AbleBacon_ is now known as AbleBacon
[00:46:44] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[00:49:11] *** Joins: wildo (~lain6141@119.224.72.222)
[00:49:57] <KillerWasp> pyzozord: what book?
[00:50:45] <GeDaMo> KillerWasp: https://en.wikipedia.org/wiki/The_Art_of_Computer_Programming
[00:50:45] <bayaz> Title: The Art of Computer Programming - Wikipedia 
[00:51:19] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[00:51:27] <KillerWasp> GeDaMo: seem very old
[00:51:32] *** Quits: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[00:51:49] *** Joins: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[00:52:19] <GeDaMo> He's been working on it for a while, yes :P
[00:52:25] *** Quits: mawk (mawk@wireguard/contributor/mawk) (Ping timeout: 268 seconds)
[00:52:42] <GeDaMo> I used volume 3 in the 80s
[00:53:07] *** Joins: norias (~jaredm@c-98-219-195-163.hsd1.pa.comcast.net)
[00:53:10] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 260 seconds)
[00:54:00] <KillerWasp> i found this: https://github.com/manjunath5496/The-Art-of-Computer-Programming-Books/blob/master/aoc(1).pdf
[00:54:01] <bayaz> Title: The-Art-of-Computer-Programming-Books/aoc(1).pdf at master Â· manjunath5496/The-Art-of-Computer-Programming-Books 
[00:54:17] <user51> GeDaMo: is it more about programming, or cs?
[00:54:32] *** Joins: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk)
[00:54:40] <GeDaMo> I suppose it's more CS
[00:55:27] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[00:56:43] <norias> user51: how would you describe the difference?
[00:57:29] *** Quits: junebug (~junebug@2600:1700:3db0:2540:1bc2:b6e8:b3fd:1f4a) (Ping timeout: 252 seconds)
[00:57:35] <user51> norias: i just know it when i see it.
[00:57:36] <flakland> science requires some sort of hypothesis you wish to tst
[00:58:26] <pyzozord> programming is about making microscopes, compuer science is about whatever you look at through the microscope
[00:58:46] *** Joins: mawk (~mawk@serveur.io)
[00:58:46] *** Quits: mawk (~mawk@serveur.io) (Changing host)
[00:58:46] *** Joins: mawk (~mawk@wireguard/contributor/mawk)
[01:00:18] <deniska> programming is about writing programs, computer science is about drawing boxes and arrows on a whiteboard :)
[01:00:47] <bjs> pyzozord: you can always get the first volume ("Fundamental Algorithms") and read that before deciding if you want the whole set (or as much of the set as exists so far)
[01:01:05] *** Joins: jjido (~Denis@90.213.58.125)
[01:01:06] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Remote host closed the connection)
[01:02:36] *** Quits: pulse (~pulse@user/pulse) (Quit: Join our gamedev community https://indiedevs.net/)
[01:04:25] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:04:33] <average> you guys are communists
[01:04:38] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:04:40] <average> especially kish`
[01:04:45] <average> but everyone knows he is
[01:04:48] <KillerWasp> average: i'm not communist, i'm a programmer
[01:05:08] <nomagno> KillerWasp: Those two things are not mutually exclusive
[01:05:18] <nomagno> See Tetris
[01:05:22] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 268 seconds)
[01:05:29] <average> exactly, Tetris is the best example
[01:05:39] <KillerWasp> who's Tetris?
[01:05:56] <flakland> tetris sound track 5/5 stars
[01:06:03] <nomagno> Admittedly, Tetris was sold off by Soviet officials in a suspiciously capitalist manner...
[01:06:12] <nomagno> hmmmm
[01:06:20] <average> conspiracy!
[01:06:30] <pyzozord> flakland: hahah I just imagined someone unironically "jamming" to the tetris soundtrack
[01:06:32] <KillerWasp> pure conspiracy, but pure funny.
[01:07:00] <KillerWasp> i only can think in fall pieces...
[01:07:06] <nomagno> pyzozord: Why is that funny tough? Pa-ra pa-ra parararÃ¡
[01:07:12] <nomagno> https://iteroni.com/watch?v=9Fv5cuYZFC0
[01:07:13] <bayaz> Title: Tetris theme song [10 hours] 
[01:07:15] <nomagno> Dance
[01:07:23] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[01:07:24] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[01:07:26] <KillerWasp> nomagno: really?
[01:07:32] *** Joins: sleepingforest (~sleepingf@pool-74-98-255-220.pitbpa.fios.verizon.net)
[01:07:51] <KillerWasp> How long can you listen to that music?
[01:08:00] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 256 seconds)
[01:08:01] <pyzozord> I really like the polka song
[01:08:15] <KillerWasp> nice, polka is better
[01:08:21] *** Quits: user51 (~user51@176.228.151.30) (Quit: leaving)
[01:08:30] <nomagno> KillerWasp: Well let's find out
[01:08:36] <nomagno> I might get a... different kind of tetris effect
[01:08:47] <nomagno> I have gotten it with games, never with tetris music!
[01:08:54] <nomagno> I did get tetris effect with tetris once
[01:08:57] <nomagno> too much Puyo Puyo Tetris
[01:09:06] <flakland> someone posted an awful timbaland justin timberlake mashup and nobody complains, but the tetris soundtrack is controversial!?
[01:09:12] <nomagno> Could hear the little music and the sound effects in my sleep
[01:09:22] <nomagno> That was fun
[01:09:23] <pyzozord> not sure if you know but "polka" is a woman version of "polak" which is how polish people call an individual man of polish nationality
[01:09:27] <KillerWasp> nomagno: you played Tetris II of SNES?
[01:09:47] <pyzozord> although the song is not in polish
[01:09:59] <nomagno> Hm, no I did not play that one version
[01:10:05] <thiccdaddy> +yt sleep is for the weak
[01:10:19] <KillerWasp> it's a very different tetris
[01:10:22] <thiccdaddy> .yt sleep is for the weak the dreadnaughts
[01:10:34] <thiccdaddy> bot command prefix?
[01:10:42] * thiccdaddy gives up
[01:10:51] <nomagno> Looking at the Wikipedia page, sounds like puyo puyo
[01:11:58] *** Quits: diophantoz (~diophanto@user/diophantoz) (Ping timeout: 256 seconds)
[01:12:36] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 265 seconds)
[01:12:45] <nomagno> Looking at some gameplay, it is different but foundationally very similar
[01:13:08] <nomagno> I'll have to play it sometime, it does have some cool concepts with the mix and matching of different color blocks in a single tetramino
[01:13:40] *** Joins: Miffo (~Twipply@user/twipply)
[01:14:06] *** Quits: Twipply (~Twipply@user/twipply) (Read error: No route to host)
[01:14:10] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ¦)
[01:14:17] *** Miffo is now known as Twipply
[01:14:21] *** Quits: stella (aoei@nethackscoreboard/aoei) (Quit: brb reboot)
[01:14:39] <Thedarkb> I think I'll change the messages in my game engine from a type enum and a void pointer to a tagged union.
[01:15:02] <nomagno> What language are you making the engine in?
[01:15:02] <decker> in C# you can tostring the enum values
[01:15:05] <Thedarkb> C
[01:15:36] <nomagno> "type enum and void pointer", and "tagged union" are completely unrecognizable terms to me, and I'm making a game engine in C too
[01:15:37] <nomagno> hmmm
[01:15:58] <nomagno> well void pointer and type enum, I guess, but the phrasing is weird
[01:16:21] <nomagno> https://en.wikipedia.org/wiki/Tagged_union
[01:16:21] <bayaz> Title: Tagged union - Wikipedia 
[01:16:38] <nomagno> So, a regular union?
[01:16:39] <decker> arent messages always the same type?  do you need void& there
[01:16:57] <deniska> nomagno: regular unions don't know what type they store
[01:17:20] *** Quits: magla (~gelignite@55d4a165.access.ecotel.net) (Quit: Stay safe!)
[01:17:30] <deniska> nomagno: look what C people need just to mimic a fraction of sum types power :D
[01:17:41] <flakland> they store all types i'd say, only one  is the ''''right'''' type
[01:18:04] <nomagno> Ah, so a union wrapped by a struct that contains a specifier for the type the union stores?
[01:18:36] <nomagno> Of course you have to ensure setting the tagged union is as atomic as possible, else big mess
[01:18:49] <Thedarkb> Yes.
[01:18:50] *** Joins: akevinhuang2 (~thekevinh@user/thekevinhuang)
[01:19:00] <deniska> nomagno: that's a common implementation. Another is to have each type to have a distinct static tag in its header
[01:19:11] <deniska> I guess functionally it's the same thing though :)
[01:19:19] *** Joins: stella (aoei@nethackscoreboard/aoei)
[01:19:32] <nomagno> Ah does seem interesting indeed for message passing
[01:19:32] *** Quits: akevinhuang2 (~thekevinh@user/thekevinhuang) (Remote host closed the connection)
[01:19:45] <deniska> just a way to make sense of a thing you are essentially given a void pointer to
[01:20:07] <decker> well in that case it's a distinct type and not void
[01:20:29] <Thedarkb> Messages might be very different depending on the type of event, and there's probably plenty I haven't thought about yet.
[01:20:41] <nomagno> in C you only really have to take care of this at initialization, which means the tag field can be const
[01:20:47] <nomagno> which is very safe
[01:20:57] *** Joins: kek_2 (~kek_@2a02:168:200f:1f10:410b:731a:6592:864d)
[01:20:57] *** Quits: akevinhuang (~thekevinh@user/thekevinhuang) (Ping timeout: 252 seconds)
[01:21:54] *** Joins: humky (~humky@user/humky)
[01:22:03] <Thedarkb> deniska, can you show me an example of the latter method?
[01:22:53] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[01:23:11] *** Quits: MaghOz (~maghoz@2001:4bc9:801:f399:540d:f952:207a:4) (Quit: WeeChat 3.3)
[01:25:17] *** Quits: kek_1 (~kek_@2a02:168:200f:1f10:dcde:2774:1301:baad) (Ping timeout: 250 seconds)
[01:25:18] <decker> https://github.com/d3x0r/SACK/blob/master/src/configlib/configscript.c#L49-L160  this merges everything in one - it contains the token type for matching string content; wish I could share this other header, this company has a much bigger message structure with 100's of messages, each message is itself a type, and the unions are huge lists of the externally defined strctures
[01:25:19] <bayaz> Title: SACK/configscript.c at master Â· d3x0r/SACK 
[01:25:42] <decker> the latter is better if you have that many things; I can't say that a atomic-like union declaration hasn't been confusing.
[01:26:36] <decker> but there's more ditance between things you're required to update in the case that every content of union has its own struct declaration
[01:29:52] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b484:addd:b6f6:fe4e) (Remote host closed the connection)
[01:30:02] *** Quits: sleepingforest (~sleepingf@pool-74-98-255-220.pitbpa.fios.verizon.net) (Ping timeout: 268 seconds)
[01:30:21] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b484:addd:b6f6:fe4e)
[01:32:32] <Thedarkb> Thanks.
[01:32:37] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[01:34:22] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) (Ping timeout: 268 seconds)
[01:34:46] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:34:51] *** Quits: kek_2 (~kek_@2a02:168:200f:1f10:410b:731a:6592:864d) (Remote host closed the connection)
[01:35:19] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b484:addd:b6f6:fe4e) (Ping timeout: 265 seconds)
[01:39:02] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:39:05] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[01:40:47] *** Joins: dunkeln (~dunkeln@150.129.114.218)
[01:40:47] *** Quits: dunkeln (~dunkeln@150.129.114.218) (Changing host)
[01:40:47] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[01:41:13] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Read error: Connection reset by peer)
[01:41:54] <decker> one issue with a tagged union then, is that its smallest size is the largest message type.  So while ya know 95% of the messages are like {value1:1,value2:2} there's few that are like daily_schedule_of_games[sessions][games][patterns and pattern data+payouts per level per game]
[01:42:26] <decker> or - you end up with some sort of custom allocator that allocates a message type and only the extra information it needs
[01:42:44] <decker> on the receiving side it's harmless, because you're just applying a structure to a message.
[01:43:32] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 240 seconds)
[01:43:45] <decker> BTW  - a lng time ago someone I worked with was working on updating a protocol in the game machines, and found the whole thing really unruly - and wanted to come up with some generic method to specify a message's content like "%i%i%b%f" I dunnno 2 int's a byte and a float?  ... 
[01:44:25] <decker> I've seen lots of ways that poeple have approached making composable types; and even XML which is supposed to be self descriptive isn't, and only understands strings.
[01:45:20] <decker> JSON was a good step in the right direction; that in languages the token itself defines it's type.  123 being different from "123"; so now you almost have a notion of the basic types programs work with - numbers (in various precisions) and strings (of various lengths)
[01:46:27] <decker> just needs a date format, which while a little ugly iso-8601 fits in as an extenion of Number[int/float/prefixed radix/date] with a couple extra characters accepted to switch resulting type
[01:46:38] <nomagno> decker: then you have me, who uses a string-only subset of JSON for transmission of packets
[01:46:44] <nomagno> :^P
[01:47:38] <nomagno> I could probably use something... well, better. I'll see if I can get rid of the burden of a TOML and JSON parser as dependencies
[01:47:44] <decker> nomagno https://github.com/d3x0r/jsox#pretty-images 
[01:47:44] <bayaz> Title: GitHub - d3x0r/JSOX: JavaScript Object eXchange format; extended JSON/JSON6 
[01:47:57] <nomagno> What is that
[01:48:32] <decker> adds dates, bigint, comments to json
[01:48:33] <flakland> it's like xml with no <>'s
[01:49:04] <nomagno> decker: If I'm already getting rid of numbers in my usage of JSON, you sure as heck aren't going to get me to use an extension.
[01:49:09] <decker> flakland xml is like no programming structure anyone uses :)
[01:49:32] <flakland> i don't see how JSON is any different than XML
[01:49:35] <nomagno> Yo, hear me out: space separated newline-terminated value pairs in plain text as storage format
[01:49:42] *** Joins: pavonia (~user@user/siracusa)
[01:49:43] <decker> :) just lessens the burden of interpretation - don't need a custom reviver for every message
[01:49:59] <decker> to now 'oh these couple fields are really numbers so convert them'
[01:50:11] <decker> you might as well go to json-schema and prefix all your strings with typeinformation bloat
[01:50:17] *** Quits: TCZ (~tcz@91.150.178.124) (Quit: Leaving)
[01:50:30] <decker> ala xml schema
[01:50:47] <flakland> you have to ""convert them"" anyway
[01:50:58] <flakland> to check for errors, if number is out of int bounds
[01:51:01] <flakland> etc.
[01:51:08] <nomagno> So, instead of {AMESS{OF}{"WEIRD"{1}}BRACKERS}, 'AMESS\n\tOF\n\"tWEIRD"\n\tBRACKERS\n'
[01:51:25] <nomagno> ASCII-encoded spaces, newlines, and tabs as separators
[01:51:57] <nomagno> I can actually get rid of both the JSON and the TOML dependency with this. Which means I was making a dumb usage of it anyways
[01:52:01] <decker> I don't do anything.. JSOX.parse( msg) and I get an object that has all the right types of data... no "convert them" on my part
[01:53:00] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[01:53:14] *** Joins: flakland (~flaknet99@32.211.211.39)
[01:53:31] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[01:53:43] *** Joins: flakland (~flaknet99@32.211.211.39)
[01:56:12] <decker> oh - and I dont require " to be closed before \n.  so \n can just be included in the string until the string closes... no need for the \n\t in that message - just use the literal characters
[01:57:03] <decker> only thing you MUST escape is a quote itself and the escape backslash
[01:58:59] <decker> but then you can escape the last newline... \\n (literal\n) is a nul
[02:00:16] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[02:03:22] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Read error: Connection reset by peer)
[02:04:26] *** Quits: norias (~jaredm@c-98-219-195-163.hsd1.pa.comcast.net) (Quit: Lost terminal)
[02:05:02] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 240 seconds)
[02:05:41] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[02:07:50] *** Quits: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 260 seconds)
[02:10:48] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[02:21:54] *** Joins: Burkuf (~AnCELASTR@216.243.47.158)
[02:22:18] *** Quits: Akuli (~Akuli@82-203-161-150.bb.dnainternet.fi) (Ping timeout: 260 seconds)
[02:24:20] *** Joins: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net)
[02:28:40] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[02:29:41] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Quit: quit)
[02:33:45] *** Joins: pizdets_ (~pizdets@183.182.111.164)
[02:34:10] *** Quits: pizdets (~pizdets@183.182.110.248) (Ping timeout: 268 seconds)
[02:39:29] *** Joins: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au)
[02:43:18] *** Quits: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk) (Ping timeout: 260 seconds)
[02:44:38] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[02:45:19] *** Joins: serj2990 (~sergiu@2a02:2f08:e00f:6200::48b)
[02:51:27] *** Quits: soapsudsxx (~soapsudsx@209.221.40.158) (Ping timeout: 268 seconds)
[02:52:40] *** Quits: chomwitt (~chomwitt@2a02:587:dc0d:3700:12c3:7bff:fe6d:d374) (Ping timeout: 268 seconds)
[02:54:54] *** Joins: junebug (~junebug@2600:1700:3db0:2540:b62f:6f3c:5a3b:e2c2)
[02:55:42] *** Joins: soapsudsxx (~soapsudsx@209.221.40.158)
[02:56:27] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[02:58:51] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 252 seconds)
[02:59:45] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:03:45] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:04:38] <nomagno> Too complicated to impleement vs reading a file and checking for bytes `0x0A`, `0x20`, and `0x09` (ASCII newline, whitespace, and horizontal tab)
[03:05:18] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[03:06:30] <oldlaptop> nomagno: related: TLN! ("Tcl List Notation" - not actually a great idea, probably, it's trickier than it might look to parse tcl lists without being tcl)
[03:06:44] *** Quits: Duchess (~Duchess@24.109.185.150) (Quit: Client closed)
[03:07:39] <oldlaptop> more seriously, sqlite is used in production as a wire format for some things - not that it's necessarily going to be a good idea for whatever you're doing
[03:08:36] <oldlaptop> especially if you feel the urge to throw out json/whatever in favor of flat whitespace-delimited lists: what good would the DB structure be?
[03:08:39] *** Joins: Duchess (~Duchess@24.109.185.150)
[03:11:27] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[03:12:40] *** Joins: rapier_k (~rapier@user/rapier)
[03:13:19] *** Quits: rapier (~rapier@user/rapier) (Read error: Connection reset by peer)
[03:19:11] *** Quits: audio (~audio@user/audio) (Ping timeout: 268 seconds)
[03:20:08] <nomagno> It's a toy stateless racing game protocol. As in, it's so much of a toy thingy the lightest C JSON and TOML parsers I could find are easily half of the current reference implementation (Still have not written the physics engine tough).
[03:20:33] *** Quits: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au) (Ping timeout: 250 seconds)
[03:20:47] <nomagno> I literally just need sections and key-value pairs, that go up to two levels of indentation deep
[03:22:51] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:24:13] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[03:24:13] *** Joins: jinsun__ (~quassel@user/jinsun)
[03:24:48] *** Joins: Thedarkb1 (~Thedarkb@2001:bb6:b403:e042:eefd:c6c7:bba0:4cad)
[03:25:45] *** Joins: SoF3 (~skius@user/skius)
[03:25:59] *** Quits: esran (~esran@vps.conical-effort.net) (Ping timeout: 250 seconds)
[03:25:59] *** Quits: shailangsa (~shailangs@host86-186-127-128.range86-186.btcentralplus.com) (Ping timeout: 252 seconds)
[03:26:14] *** Quits: SoF (~skius@user/skius) (Killed (NickServ (GHOST command used by SoF3)))
[03:26:14] *** SoF3 is now known as SoF
[03:26:20] *** Joins: esran (~esran@vps.conical-effort.net)
[03:26:21] *** Quits: TheLinuxNerd (~tux@user/thelinuxnerd) (Ping timeout: 252 seconds)
[03:26:21] *** Joins: dislabled_ (~dislabled@115.229.164.82.customer.cdi.no)
[03:26:22] *** Joins: TheLinuxNerd_ (~tux@user/thelinuxnerd)
[03:26:43] *** Quits: dislabled (~dislabled@115.229.164.82.customer.cdi.no) (Ping timeout: 252 seconds)
[03:26:51] *** Quits: Thedarkb (~Thedarkb@86-42-4-182-dynamic.agg3.kny.prp-wtd.eircom.net) (Ping timeout: 250 seconds)
[03:27:05] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 252 seconds)
[03:27:22] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[03:27:47] <average> hi
[03:28:40] *** Quits: wildo (~lain6141@119.224.72.222) (Quit: leaving)
[03:29:34] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:31:26] *** Joins: akevinhuang (~thekevinh@user/thekevinhuang)
[03:36:19] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:37:12] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:37:43] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[03:37:58] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[03:45:46] *** Parts: average (uid473595@user/average) ()
[03:46:35] *** Quits: Inari (~Pinkishu@p508ef02d.dip0.t-ipconnect.de) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[03:47:14] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 256 seconds)
[03:47:33] *** Quits: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[03:55:28] *** Joins: va5c0 (~vasco.nun@2001:818:e35b:6300:f89:16da:7c3d:c2c4)
[03:55:57] *** Quits: va5c0 (~vasco.nun@2001:818:e35b:6300:f89:16da:7c3d:c2c4) (Client Quit)
[03:56:20] *** Joins: va5c0 (~vasco.nun@2001:818:e35b:6300:f89:16da:7c3d:c2c4)
[03:56:26] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[04:01:44] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[04:01:51] *** Quits: va5c0 (~vasco.nun@2001:818:e35b:6300:f89:16da:7c3d:c2c4) (Quit: WeeChat 3.0)
[04:02:16] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:06:15] *** Joins: shailangsa_ (~shailangs@host86-186-127-128.range86-186.btcentralplus.com)
[04:09:54] *** Quits: Burgundy (~yomon@79.115.213.171) (Ping timeout: 256 seconds)
[04:11:02] *** Quits: hexingb (~hexingb@2409:8900:2950:c480:7535:b009:67de:846d) (Ping timeout: 240 seconds)
[04:11:08] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[04:12:44] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[04:16:00] *** Joins: sleepingforest (~sleepingf@pool-74-98-255-220.pitbpa.fios.verizon.net)
[04:17:30] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[04:17:33] *** Quits: junebug (~junebug@2600:1700:3db0:2540:b62f:6f3c:5a3b:e2c2) (Quit: Leaving)
[04:20:46] *** Quits: serj2990 (~sergiu@2a02:2f08:e00f:6200::48b) (Quit: WeeChat 3.3)
[04:21:59] *** Joins: jazzy (~jaziz@user/jaziz)
[04:22:22] *** Joins: serj2990 (~sergiu@2a02:2f08:e00f:6200::48b)
[04:22:55] *** Quits: tadamono (~tadamono@c-98-222-81-32.hsd1.in.comcast.net) (Quit: WeeChat 1.6)
[04:25:28] *** Quits: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de) (Remote host closed the connection)
[04:26:44] *** Quits: serj2990 (~sergiu@2a02:2f08:e00f:6200::48b) (Client Quit)
[04:26:47] *** Joins: jazzy2 (~jaziz@user/jaziz)
[04:27:02] *** Joins: serj2990 (~sergiu@2a02:2f08:e00f:6200::48b)
[04:27:08] *** Quits: jaysicks (~jaysicks@178-164-221-3.pool.digikabel.hu) (Remote host closed the connection)
[04:28:37] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[04:30:31] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[04:30:48] *** Joins: jaysicks (~jaysicks@178-164-221-3.pool.digikabel.hu)
[04:30:53] *** Quits: rapier_k (~rapier@user/rapier) (Ping timeout: 252 seconds)
[04:31:31] *** Joins: wildo (~lain6141@119.224.72.222)
[04:33:59] *** Joins: inky_ (~inky@46.36.119.153)
[04:37:29] *** Quits: sleepingforest (~sleepingf@pool-74-98-255-220.pitbpa.fios.verizon.net) (Ping timeout: 250 seconds)
[04:38:19] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[04:39:42] *** Joins: img (~img@user/img)
[04:40:27] *** Quits: serj2990 (~sergiu@2a02:2f08:e00f:6200::48b) (Quit: WeeChat 3.3)
[04:40:37] *** Joins: serj2990 (~sergiu@2a02:2f08:e00f:6200::48b)
[04:42:23] *** Quits: shailangsa_ (~shailangs@host86-186-127-128.range86-186.btcentralplus.com) ()
[04:45:28] *** Joins: hexingb (~hexingb@2409:8900:2950:a082:b433:a046:90fb:1412)
[04:48:32] *** Quits: znedw5 (~znedw@home.znedw.com) (Quit: Ping timeout (120 seconds))
[04:48:47] *** Joins: znedw5 (~znedw@home.znedw.com)
[04:48:50] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Ping timeout: 260 seconds)
[04:49:08] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[04:50:08] *** Joins: ChromaCat248 (~ChromaCat@user/chromacat248)
[04:51:47] *** Quits: stagas (~stagas@2a02:587:c40e:fc00:ef0f:2a21:213e:4f3e) (Ping timeout: 250 seconds)
[04:53:46] *** Joins: rapier_k (~rapier@user/rapier)
[04:54:21] *** Quits: hexingb (~hexingb@2409:8900:2950:a082:b433:a046:90fb:1412) (Ping timeout: 252 seconds)
[04:55:48] *** Joins: hexingb (~hexingb@101.236.65.145)
[04:57:42] *** Quits: inomoz (~inomoz@85.26.235.86) (Read error: Connection reset by peer)
[04:58:23] *** Joins: frost (~frost@user/frost)
[04:59:06] *** Quits: serj2990 (~sergiu@2a02:2f08:e00f:6200::48b) (Quit: WeeChat 3.3)
[04:59:16] *** Quits: src (~src@user/src) (Quit: Leaving)
[05:00:20] *** Quits: hexingb (~hexingb@101.236.65.145) (Ping timeout: 268 seconds)
[05:00:55] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[05:01:04] *** Quits: wildo (~lain6141@119.224.72.222) (Quit: leaving)
[05:01:32] *** Joins: Lenkov45 (~Lenkov45@45.133.193.5)
[05:06:05] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 252 seconds)
[05:06:12] *** Quits: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net) (Remote host closed the connection)
[05:06:31] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[05:09:23] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 252 seconds)
[05:09:40] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[05:10:36] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Quit: ThePhilgrim)
[05:10:36] *** Joins: audio (~audio@user/audio)
[05:12:06] *** Joins: hoochmonger (~hoochmong@user/hoochmonger)
[05:12:40] *** Joins: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[05:16:38] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:17:34] *** Joins: hexingb (~hexingb@101.236.65.145)
[05:17:46] *** Joins: Nex6 (~Nex6@cpe-45-51-244-112.socal.res.rr.com)
[05:17:50] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[05:18:54] *** Quits: Pook (~Pook@2001:8a0:f996:1400:9050:6222:2b58:2d8b) (Quit: Leaving)
[05:22:19] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 250 seconds)
[05:22:22] *** Joins: Guest1389 (~job@136.158.46.148)
[05:23:21] *** Joins: shailangsa (~shailangs@host86-186-127-128.range86-186.btcentralplus.com)
[05:28:27] *** Quits: hexingb (~hexingb@101.236.65.145) (Ping timeout: 252 seconds)
[05:29:17] *** Joins: hexingb (~hexingb@101.236.65.177)
[05:30:03] *** Norkle is now known as sickjoke
[05:30:49] *** sickjoke is now known as NOrkle
[05:30:57] *** NOrkle is now known as Norkle
[05:31:30] *** Joins: CaCode_ (~CaCode@user/cacode)
[05:33:38] *** Quits: xff0x (~xff0x@2001:1a81:5203:4200:40b7:e822:93c8:fd81) (Ping timeout: 268 seconds)
[05:34:06] *** Quits: CaCode (~CaCode@user/cacode) (Ping timeout: 260 seconds)
[05:34:07] *** Joins: xff0x (~xff0x@port-92-195-24-10.dynamic.as20676.net)
[05:34:24] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:36:11] *** Joins: Kuleshov (~Kuleshov@109.252.99.88)
[05:38:38] *** Joins: jazzy3 (~jaziz@user/jaziz)
[05:38:54] *** Quits: Duchess (~Duchess@24.109.185.150) (Quit: Client closed)
[05:41:39] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[05:42:01] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 252 seconds)
[05:42:29] *** Joins: zaher (~zaher@37.48.185.88)
[05:46:19] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:46:23] *** Joins: aoei (~aoei@nethackscoreboard/aoei)
[05:46:49] *** Quits: stella (aoei@nethackscoreboard/aoei) (Quit: WeeChat 3.3)
[05:48:40] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[05:49:13] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[05:49:37] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 250 seconds)
[05:51:48] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[05:52:15] *** Joins: simon323 (~simon323@2409:8a34:468:83d0:ad06:9adc:663d:62c0)
[05:52:17] *** Quits: Lenkov45 (~Lenkov45@45.133.193.5) (Ping timeout: 252 seconds)
[05:52:48] *** Joins: Lenkov45 (~Lenkov45@45.133.193.30)
[05:52:51] *** aoei is now known as stella
[05:53:02] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Remote host closed the connection)
[05:54:10] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 256 seconds)
[05:54:12] *** Joins: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk)
[05:55:09] *** bayaz sets mode: +q $a:average
[05:55:52] *** Quits: CaCode_ (~CaCode@user/cacode) (Ping timeout: 256 seconds)
[05:58:50] *** Quits: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk) (Ping timeout: 260 seconds)
[05:58:57] *** Joins: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au)
[06:05:23] *** Joins: quartz (~quartz@user/quartz)
[06:05:51] *** Joins: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net)
[06:06:09] *** Quits: ChromaCat248 (~ChromaCat@user/chromacat248) (Remote host closed the connection)
[06:06:55] *** Joins: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net)
[06:08:38] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[06:13:11] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:13:55] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 252 seconds)
[06:13:55] *** brabrax_ is now known as brabrax
[06:14:06] *** Quits: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com) (Ping timeout: 245 seconds)
[06:15:39] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[06:20:42] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[06:20:55] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[06:21:00] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[06:22:32] *** Quits: Gentpup (~Gentpup@217.75.212.43) (Quit: Leaving)
[06:25:54] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 260 seconds)
[06:28:09] *** Joins: junebug (~junebug@2600:1700:3db0:2540:f028:88b8:1db1:5d22)
[06:33:57] *** Joins: password (~password8@user/password2)
[06:34:45] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:34:53] *** Quits: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com) (Quit: ZNC 1.8.2 - https://znc.in)
[06:35:37] *** Joins: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com)
[06:38:49] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 250 seconds)
[06:40:28] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[06:43:07] *** Quits: jaysicks (~jaysicks@178-164-221-3.pool.digikabel.hu) (Read error: Connection reset by peer)
[06:45:02] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 260 seconds)
[06:45:05] *** Joins: sonny (~sonny@8.6.144.252)
[06:47:07] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[06:51:42] *** Joins: norias (~jaredm@c-98-219-195-163.hsd1.pa.comcast.net)
[06:52:27] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[06:52:39] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[06:58:07] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 268 seconds)
[06:58:45] *** Quits: Smeef (~deathonat@user/smeef) (Quit: (â¯Â°â¡Â°ï¼â¯ï¸µ â»âââ»)
[07:03:52] *** Joins: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de)
[07:10:36] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[07:10:45] *** Quits: mawk (~mawk@wireguard/contributor/mawk) (Ping timeout: 252 seconds)
[07:11:31] *** Quits: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net) (Ping timeout: 250 seconds)
[07:12:37] *** Quits: sonny (~sonny@8.6.144.252) (Ping timeout: 250 seconds)
[07:13:26] *** Joins: paravida (~myChateau@71-208-95-145.ftmy.qwest.net)
[07:13:46] *** Quits: paravida (~myChateau@71-208-95-145.ftmy.qwest.net) (Client Quit)
[07:16:50] *** Joins: mawk (~mawk@serveur.io)
[07:16:51] *** Quits: mawk (~mawk@serveur.io) (Changing host)
[07:16:51] *** Joins: mawk (~mawk@wireguard/contributor/mawk)
[07:17:43] *** Quits: linext_ (~linext@pool-108-53-128-199.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[07:17:51] *** Quits: ProperN[out] (~holyShizn@user/propernoun) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[07:18:11] *** Joins: ProperNoun (~holyShizn@user/propernoun)
[07:22:06] *** Quits: ProperNoun (~holyShizn@user/propernoun) (Client Quit)
[07:22:26] *** Joins: ProperNoun (~holyShizn@user/propernoun)
[07:24:21] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[07:26:30] *** Joins: node1 (~hex@user/node1)
[07:28:21] *** Quits: node1 (~hex@user/node1) (Client Quit)
[07:28:41] *** Joins: node1 (~hex@user/node1)
[07:29:22] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 260 seconds)
[07:29:49] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 252 seconds)
[07:36:25] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[07:39:11] *** audio is now known as audiocat
[07:40:08] *** Quits: zaher (~zaher@37.48.185.88) (Ping timeout: 256 seconds)
[07:40:37] *** Joins: sonny (~sonny@8.6.144.252)
[07:42:58] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[07:47:03] *** Quits: Lenkov45 (~Lenkov45@45.133.193.30) (Ping timeout: 252 seconds)
[07:47:53] <beaky> nice there's a gentle introductory book about agda with pictures just like the infamous learn you a haskell book http://learnyouanagda.liamoc.net/
[07:47:54] <bayaz> Title: Learn you An Agda And Achieve Enlightenment 
[07:48:57] <beaky> though it is incomplete
[07:49:37] <sonny> which do you prefer, concurrency or typeful programming?
[07:50:17] <beaky> typeful programming because types are more expressive
[07:52:35] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[07:52:46] <PlanckWalk> Concurrency and typeful programming aren't exclusive or even in the same sort of spectrum as each other.
[07:55:51] <sonny> PlanckWalk: having both seems to be a lot of work and not emphasized 
[07:56:03] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[07:56:26] <sonny> What I mean is, the focus seems to be on one or the other, sure it's not exclusive at all
[07:57:08] *** Joins: stagas (~stagas@2a02:587:c40e:fc00:7ea8:53b7:13:e6db)
[07:57:41] *** Quits: junebug (~junebug@2600:1700:3db0:2540:f028:88b8:1db1:5d22) (Ping timeout: 252 seconds)
[07:58:35] <beaky> yes we need a dependently-typed erlang someday
[07:58:45] <beaky> it will be the ultimate programming language
[07:59:40] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[07:59:56] <beaky> hosted in rust
[08:00:13] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[08:00:25] *** Joins: flakland (~flaknet99@32.211.211.39)
[08:00:40] <beaky> and tea database functionality baked into the standard library
[08:01:02] *** Quits: Guest00 (~Guest00@pool-96-253-74-73.rcmdva.fios.verizon.net) (Ping timeout: 256 seconds)
[08:01:06] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 256 seconds)
[08:03:26] *** Quits: akevinhuang (~thekevinh@user/thekevinhuang) (Ping timeout: 260 seconds)
[08:03:44] *** Joins: CaCode (~CaCode@user/cacode)
[08:04:40] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[08:04:52] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:06:35] *** Joins: Burgundy (~yomon@79.115.213.171)
[08:08:08] <sonny> a compiler like that is probably best done in layers
[08:08:29] <sonny> a tea database? that's an interesting standard library feature
[08:09:59] *** Quits: zhiayang (~zhiayang@user/zhiayang) (Quit: oof.)
[08:10:52] *** Joins: Rounin (~david@84.212.130.215)
[08:11:21] *** Quits: hexingb (~hexingb@101.236.65.177) (Read error: Connection reset by peer)
[08:12:08] *** Joins: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com)
[08:12:12] *** Joins: zhiayang (~zhiayang@user/zhiayang)
[08:12:38] <ent58> *yawn* hello
[08:13:26] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[08:13:34] <sonny> lo
[08:13:39] *** Joins: flakland (~flaknet99@32.211.211.39)
[08:14:09] *** Joins: hexingb (~hexingb@103.37.140.25)
[08:14:58] <beaky> im still stuck on day 9 of advent of code even after a shower, tea break, and nap
[08:15:33] <ent58> notwithstanding WSL, is there a near-native way to load ELF based shared object files "as" a DLL in windows?
[08:16:22] <flakland> elf isn't native in that env
[08:16:32] <flakland> cygwin?
[08:16:41] <ent58> of course, but what I was thinking was
[08:17:18] <ent58> standardize my shared object I want to make as ELF based and shoehorn it as a native loaded module in windows, rather than creating a DLL for windows as a separate process
[08:17:27] *** Joins: Smeef (~deathonat@user/smeef)
[08:17:45] <ent58> I'm not past loading the ELF manually, but I'm wondering if there's something or a project that already does it
[08:18:31] <ent58> *without requiring cygwin or WSL
[08:18:32] <flakland> i'd bet money on something existing
[08:18:40] *** Quits: hexingb (~hexingb@103.37.140.25) (Ping timeout: 256 seconds)
[08:18:45] <sonny> still on day 3 of aoc :/
[08:19:08] <ent58> oh man beaky I saw you here yesterday too
[08:19:24] <ent58> is there a good place to read the challenges at? without actually doing them?
[08:19:43] <beaky> they are on the website but only part 1 
[08:19:52] <beaky> (gotta do them to unlock part 2)
[08:19:58] <ent58> I see
[08:20:41] *** Joins: Quacc (~youbuntoe@user/quacc)
[08:21:08] *** Joins: hexingb (~hexingb@2409:8900:2950:b675:d955:fcf4:fddd:bcaa)
[08:21:48] <flakland> the main problem you will run into are .so's that depend on other .so's
[08:21:53] <flakland> and make assumptions about the underlying system
[08:23:14] *** Quits: Quacc (~youbuntoe@user/quacc) (Client Quit)
[08:23:37] <flakland> e.g. try to make system calls work on windows
[08:23:46] *** Quits: password (~password8@user/password2) (Ping timeout: 256 seconds)
[08:23:58] *** Quits: InternetCitizen (~fuzzypixe@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Ping timeout: 260 seconds)
[08:25:19] <flakland> it's not impossible but tons of work when you can just run a good OS from the start
[08:26:18] *** Quits: SmokenatorZ6 (~Smokenato@189-18-34-24.dsl.telesp.net.br) (Quit: Screw you guys, im going home)
[08:26:31] <ent58> heh, I understand
[08:27:46] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[08:29:36] *** Joins: SmokenatorZ6 (~Smokenato@177.62.114.102)
[08:29:41] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[08:29:57] *** Quits: Smeef (~deathonat@user/smeef) (Ping timeout: 252 seconds)
[08:31:23] *** Quits: rany__ (~rany@user/rany) (Remote host closed the connection)
[08:32:50] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 256 seconds)
[08:33:05] *** Joins: rany_ (~rany@user/rany)
[08:34:31] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 250 seconds)
[08:37:47] *** Joins: inomoz (~inomoz@85.26.235.86)
[08:38:08] *** Joins: Quacc (~youbuntoe@user/quacc)
[08:38:28] <Quacc> what's a good way to reduce a number while still being able to un-reduce the number
[08:38:33] <Quacc> sorry if the questions a little weird
[08:39:07] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[08:39:14] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[08:39:19] *** Joins: flakland (~flaknet99@32.211.211.39)
[08:40:49] <sonny> is the number a prime?
[08:41:08] <sonny> or are you talking about fractions
[08:41:22] <Quacc> it's just an 8 bit unsigned intager as for now
[08:41:49] <ent58> reduce in what sense
[08:42:32] <Quacc> i guess to make it signifantly smaller i'm sort of dealing with a function where if its given a too big of number it'll fail on me kinda
[08:42:38] <Quacc> its a really weird scenario
[08:43:51] <sonny> going to have to be more descriptive, I can't tell
[08:44:02] <flakland> sounds like function is broken
[08:44:09] <sonny> overflow underflow?
[08:44:17] <Quacc> nah not really an error
[08:44:27] <Quacc> it just gives an inpredictable output
[08:46:22] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[08:47:01] <flakland> theres only 256 possibilities
[08:47:44] <beaky> yes finally i have figured out hwot os olve advent of ocde day 9
[08:47:51] <beaky> it is because i had a bug in my program 
[08:49:10] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 260 seconds)
[08:49:14] *** Quits: soapsudsxx (~soapsudsx@209.221.40.158) (Remote host closed the connection)
[08:50:09] <Quacc> i found a solution to my problem by just increasing the other number
[08:50:21] <PlanckWalk> What other number?
[08:50:31] <flakland> THE other number!
[08:50:37] <beaky> yes that is my solution too
[08:50:37] <PlanckWalk> Oh, right.  Silly me.
[08:50:50] <beaky> i had to correctly specify the size of the problem
[08:50:54] <ent58> duh
[08:51:14] <beaky> because i limited the recursion to a depth of only 100 instead of a bigger number
[08:51:15] *** Quits: Quacc (~youbuntoe@user/quacc) (Quit: WeeChat 3.3)
[08:52:14] *** Joins: Quacc (~youbuntoe@user/quacc)
[08:52:17] <Quacc> i did not in fact solve my problem
[08:52:27] <flakland> nooOOOooOoOoOOOOOOOoooooOOoo!
[08:52:29] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (Quit: Leaving)
[08:52:34] <Quacc> its so sad :(
[08:53:20] <flakland> i'm suddenly inspired to make some tea
[08:53:51] <beaky> nice i like tea
[08:55:17] *** Joins: zaher (~zaher@37.48.188.25)
[08:56:33] *** Joins: Duchess (~Duchess@24.109.185.150)
[08:57:36] <arahael> Hey guys, explain something to me: Why is 90Hz or 120Hz a "thing" in mobile apps now?  I mean, the eye literally can't track that fast...
[08:58:11] <beaky> it feels more smooth and the smaller frametimes reduce input latency
[08:58:23] <ent58> you sure about that arahael? heh
[08:58:24] <arahael> So it's about the input latency and not the refresh rate?
[08:58:29] <arahael> ent58: Quite sure.
[08:58:34] <ent58> yeah input latency is more important
[08:58:51] <beaky> the human eye can track that fast it really does feel much more smooth to me esp. when scrolling 
[08:58:52] <arahael> Couldn't the input latency be decoupled from teh refresh rate?
[08:59:27] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[08:59:59] <ent58> I've seen the difference between 60 and 144hz displays, and I assure you that old myth about 60fps (or hz) is not a thing
[09:01:12] <ent58> perhaps the technical way to phrase that is our brains can use the information well beyond 144hz, but the actual seeing part might have marginal utility past that point
[09:01:33] <ent58> so if that's what you meant then you're absolutely right
[09:01:54] <arahael> ent58: You can still use a 144hz display and still have your game loop at 60 Hz.
[09:02:07] <ent58> well that would be silly :p
[09:02:10] <Quacc> oh my god it worked
[09:02:19] <arahael> ent58: Not really - that's decoupling.
[09:02:52] *** Joins: szutt (~szutt@116.37.2.145)
[09:03:02] <Quacc> is there anywhere where i should ask people to try to crack my encryption algorithm
[09:03:41] <ent58> I mean in that case you're just wasting power, it depends on what actually updates at that speee
[09:03:49] <ent58> speed*
[09:04:02] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 240 seconds)
[09:04:08] *** jinsun__ is now known as jinsun
[09:04:46] <ent58> There were many engines that had physics timesteps and things like that below rendering frequency, but that would result in smooth animations for non-physics objects, and blocky updates or interpolated ones for physics objects
[09:04:52] *** Quits: Quacc (~youbuntoe@user/quacc) (Quit: WeeChat 3.3)
[09:04:57] *** Quits: hololeap (~hololeap@user/hololeap) (Ping timeout: 276 seconds)
[09:05:23] *** Joins: hololeap (~hololeap@user/hololeap)
[09:05:33] <ent58> I'd say in any game where it matters, everything important to the player is at rendering frequency, or at least should be
[09:06:02] <ent58> we went through a time period where the hot new stuff was mega delayed and deferred rendering at the cost of input delay
[09:07:34] *** Joins: Smeef (~deathonat@2603-7000-e206-3fd8-0cbe-72f9-4bc8-e235.res6.spectrum.com)
[09:07:34] *** Quits: Smeef (~deathonat@2603-7000-e206-3fd8-0cbe-72f9-4bc8-e235.res6.spectrum.com) (Changing host)
[09:07:34] *** Joins: Smeef (~deathonat@user/smeef)
[09:08:06] *** Quits: Duchess (~Duchess@24.109.185.150) (Quit: Client closed)
[09:10:28] <beaky> so ive still gotten incorrent answeres in advent of code because i did not specify the problem correctly
[09:10:38] <beaky> even if i prove my solution correct it seems it is important i get the spec right
[09:11:29] *** Quits: Khoyo_ (~khoyo@ns328946.ip-37-187-115.eu) (Quit: ZNC 1.8.2 - https://znc.in)
[09:11:59] *** Quits: mawk (~mawk@wireguard/contributor/mawk) (Ping timeout: 250 seconds)
[09:12:19] *** Joins: Khoyo (~khoyo@user/khoyo)
[09:14:37] *** Joins: dunkeln (~dunkeln@117.239.204.226)
[09:14:37] *** Quits: dunkeln (~dunkeln@117.239.204.226) (Changing host)
[09:14:37] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[09:16:37] *** Joins: user51 (~user51@176.228.151.30)
[09:17:15] *** Joins: Duchess (~Duchess@24.109.185.150)
[09:17:37] *** Quits: hexingb (~hexingb@2409:8900:2950:b675:d955:fcf4:fddd:bcaa) (Ping timeout: 250 seconds)
[09:17:53] *** Joins: hexingb (~hexingb@101.236.65.145)
[09:18:27] *** Quits: hexingb (~hexingb@101.236.65.145) (Read error: Connection reset by peer)
[09:19:53] *** Joins: hexingb (~hexingb@103.37.140.25)
[09:20:27] *** Quits: stagas (~stagas@2a02:587:c40e:fc00:7ea8:53b7:13:e6db) (Remote host closed the connection)
[09:21:01] *** Joins: stagas (~stagas@2a02:587:c40e:fc00:7ea8:53b7:13:e6db)
[09:21:17] <beaky> how do i guarantee my spec is always correct
[09:23:07] *** Quits: zwr (~zwr@2804:d45:b966:fb00:c2a5:ef0e:5ed1:6178) (Ping timeout: 252 seconds)
[09:24:04] *** Joins: zwr (~zwr@2804:d45:b966:fb00:8070:51d:80f2:cc47)
[09:24:39] <ent58> just make it always correct, easy
[09:24:55] <beaky> if my spec can be wrong why bother proving it correct
[09:25:34] <flakland> maybe you can use time crystals in your spec
[09:25:44] <arahael> ent58: Hmm, I suppose now that we don't have phosphorus we've linked it together with the display technology.
[09:25:47] <InPhase> beaky: The same way you would get a program correct.  1) Break the problem down into pieces.  2) Understand the full problem.  3) Build a spec up in pieces.  4) Understand the full spec.  5) Use this understanding of both to make sure the spec satisfies the problem.
[09:26:03] <arahael> ent58: But what if you had a really slow display?  In that case you'd want input to be /faster/ - eg, suppose we had an e-ink display.
[09:26:40] *** Quits: hexingb (~hexingb@103.37.140.25) (Ping timeout: 256 seconds)
[09:26:44] <arahael> ent58: Or a really fast display, too fast for teh game's game loop implementation.
[09:26:45] <ent58> oh absolutely, in fact you're not wrong when you say "decoupling", it's just that the decoupled game loop is running at maximum possible update speed
[09:26:50] <ent58> and the display is the one that's behind
[09:26:51] <InPhase> beaky: But yes, this is why program proofs are not widely used.  It's not laziness.  It's that it mostly doesn't really do what needs done.
[09:26:52] <beaky> yes maybe i should focus more on step 1 and 3 where i can focus on getting the smallest parts of the spec 100% right
[09:27:22] <ent58> so for an e-ink device you would have an input delay mostly at the rate of the screen update speed
[09:27:41] <ent58> but for a display at 250hz, with a game loop running at 70-120
[09:27:45] <ent58> depending on load
[09:27:58] *** Joins: hexingb (~hexingb@2409:8900:2950:1175:8041:d044:d6e5:ddf0)
[09:27:59] <arahael> ent58: Well, no, Eg, suppose this has an on-screen keyboard. I'd like to be able to keep tappign keys without waiting for the display.
[09:28:45] <ent58> if the OSK runs independent of the display's speed, then you're golden
[09:29:06] <arahael> ent58: "if" - is that really not a given these days on these devices?
[09:29:14] <ent58> it should be from what I understand
[09:29:37] <arahael> Hmm, so maybe that's why it's such a big thing - and it's mostly about the input latency.
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:30:10] <ent58> there are games that purposely delay rendering back 1-2 frames, and in those cases, they are a significant fraction of the input latency
[09:30:24] <ent58> but games that care about response time use forward rendering techniques only
[09:31:01] <arahael> Yeah, I'm actually thinking games here are a bit of a distraction - I'm also talking about boring iOS and Android apps.
[09:31:01] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[09:31:11] <ent58> yeah so displays in general
[09:31:15] <ent58> for anything
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:31:42] <ent58> complete decoupling, everything runs at a preferred maximum rate, save for power requirements
[09:31:55] <arahael> Because I remember 2 decades ago I already had screens already that fast. :)  And that was a big thing because of the phosphorus!
[09:32:39] <ent58> heh
[09:33:28] <ent58> CRTs are still king in terms of latency
[09:33:30] <ent58> but
[09:33:37] <ent58> close enough is a thing
[09:33:53] <arahael> And of course it would be rendering the app as fast as it could: Double-buffered, etc - at teh end of each game/app frame, the buffers woudl swap and the displays would continue to display at the respective buffer.
[09:34:31] *** Quits: hexingb (~hexingb@2409:8900:2950:1175:8041:d044:d6e5:ddf0) (Ping timeout: 250 seconds)
[09:35:16] <ent58> it's mostly the advent of freesync/gsync/display adapter controlled signaling that has shot up the potential of higher hz displays
[09:35:50] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 260 seconds)
[09:35:53] <ent58> it's no longer a fixed frequency, your gpu tells the screen when to do its thing
[09:36:39] <arahael> I think I'm getting a bit confused with teh marketing because they're "simplifying" this whole space and getting consumers excited.
[09:36:39] <ent58> zero tearing, excellent response time (no artificial delay caused by blocking to wait for the sync cycle)
[09:36:46] <ent58> Yeah so
[09:37:29] <ent58> if I were to design a display device for a computer, even years ago, making the thing giving the data to the display device tell the device when to render would have been obvious
[09:37:44] <ent58> but there are some engineering hurdles
[09:37:58] <ent58> you have to complicate the electronics of the display device a bit too
[09:38:00] *** Quits: inhahe (~inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 256 seconds)
[09:38:25] <arahael> I mean, also consider that you're often displaying different apps.
[09:38:34] <arahael> And not all of those apps can keep to the same rate.
[09:38:47] <ent58> you would essentially update at the rate of the fastest producer
[09:39:26] <ent58> it would be really cool if your screen just kind of started rendering at .5hz because all that's moving is your caret
[09:39:41] <arahael> For e-ink especially - yep.
[09:40:37] <ent58> I want an e-ink device...you have any recommendations?
[09:41:02] <xeno> ent58: the Amazon Kindle Paperwhite
[09:41:25] <xeno> I wish there was a good non-amazon device and service, but haven't found any :/
[09:41:31] *** Joins: breavyn_ (~breavyn@user/breavyn)
[09:41:54] *** Quits: breavyn (~breavyn@user/breavyn) (Ping timeout: 260 seconds)
[09:42:19] <arahael> I like the Amazon Kindle Paperwhite, but it's not _really_ programmable. It's technically programmable and people have done it, but it's not a good experience.
[09:42:29] <arahael> Really good for reading books, though.
[09:43:55] <ent58> hmm
[09:43:56] *** Joins: Quacc (~youbuntoe@user/quacc)
[09:44:00] *** Quits: Duchess (~Duchess@24.109.185.150) (Quit: Client closed)
[09:44:16] *** Quits: Quacc (~youbuntoe@user/quacc) (Client Quit)
[09:44:27] *** Quits: Nact (~l@host-85-27-123-35.dynamic.voo.be) (Quit: Konversation terminated!)
[09:45:13] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[09:45:29] *** Quits: audiocat (~audio@user/audio) (Ping timeout: 252 seconds)
[09:45:47] <ent58> you can slap pdfs/epubs and other things for reading whitepapers and things like that right?
[09:45:51] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 252 seconds)
[09:46:05] <ent58> I've never used anything like before, I don't know how locked down it is
[09:46:19] *** Joins: emf (~emf@cpe-174-109-36-85.nc.res.rr.com)
[09:46:21] <arahael> Sure can, but PDF's don't usually reflow, and the screen is smaller than many PDF's are designed for today.
[09:46:40] <arahael> The e-ink display is *slow*, so you can't easily pan over the page either.
[09:47:29] <ent58> I'd assume they'd page jump rather than pan, but yeah
[09:47:39] <ent58> oh you mean
[09:47:42] <ent58> ah
[09:47:46] <ent58> you'd have to move left/right
[09:47:50] <ent58> depending on formatting size
[09:48:00] <arahael> Yeah...  You could use an actual magnifying glass I guess.
[09:48:42] <ent58> reading through a rifle optic
[09:49:07] <ent58> Hmm, I'll definitely take a look
[09:50:38] *** Quits: node1 (~hex@user/node1) (Quit: Leaving)
[09:50:40] <beaky> nice im stuck on advent of code day 10
[09:50:47] <beaky> its been an hour but i still do not understand the problem
[09:51:23] *** Quits: emf (~emf@cpe-174-109-36-85.nc.res.rr.com) (Ping timeout: 268 seconds)
[09:51:44] <flakland> its weird amazon has a patent on dule screen book reader but doesn't even sell one
[09:52:27] *** Joins: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr)
[09:52:38] <flakland> since 2010
[09:52:39] <ent58> at this stage of the game, we might as well turn unutilized IP into marketable securities
[09:52:48] *** Joins: Quacc (~youbuntoe@user/quacc)
[09:53:08] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:53:18] <ent58> ;-;
[09:57:31] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[09:57:51] *** Quits: Quacc (~youbuntoe@user/quacc) (Quit: WeeChat 3.3)
[10:00:28] *** Joins: chomwitt (~chomwitt@2a02:587:dc0d:3700:12c3:7bff:fe6d:d374)
[10:00:50] *** Joins: Akiva (~Akiva@user/Akiva)
[10:00:50] *** Quits: reezoh (~reezoh@2600:1702:3cf0:2e00:30e1:ed5f:a3a0:fd59) (Read error: Connection reset by peer)
[10:02:52] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[10:07:27] *** Quits: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[10:08:02] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 256 seconds)
[10:08:25] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[10:08:33] *** Quits: maxzor (~maxzor@2a01cb04054faa00d90c5fe37506a40e.ipv6.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[10:10:23] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[10:11:47] *** Quits: allegorical_- (~guest@2607:fea8:33e0:65c::3) (Read error: Connection reset by peer)
[10:12:08] *** Joins: allegorical_- (~guest@2607:fea8:33e0:65c:7da9:2a7e:4c83:6d75)
[10:13:10] *** Joins: hexingb (~hexingb@103.37.140.25)
[10:23:40] *** Joins: Duchess (~Duchess@2604:3d08:1:1b:564:6e0:6753:4df1)
[10:32:07] *** Joins: the_lanetly_052_ (~the_lanet@194.135.153.162)
[10:33:09] *** Quits: Burgundy (~yomon@79.115.213.171) (Ping timeout: 252 seconds)
[10:34:34] *** Joins: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca)
[10:35:32] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:37:43] <beaky> what is the easiest way to solve advent of code 2021 day 10 part 1
[10:37:55] *** Quits: hoochmonger (~hoochmong@user/hoochmonger) (Ping timeout: 252 seconds)
[10:38:34] <beaky> i dont even understand the puzzle yet
[10:39:30] *** Quits: mimmy (~mimmy@bras-base-toroon63x9w-grc-22-174-88-20-30.dsl.bell.ca) (Ping timeout: 268 seconds)
[10:40:43] <norias> oi
[10:40:55] <norias> 94% on linear algebra final
[10:42:49] *** Joins: Daemonick (~Daemonick@46.246.217.6.dsl.dyn.forthnet.gr)
[10:49:25] <InPhase> beaky: Stack-based parser.
[10:50:08] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[10:50:32] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[10:52:04] <beaky> nice i like stacks
[10:56:11] *** Quits: Nex6 (~Nex6@cpe-45-51-244-112.socal.res.rr.com) (Remote host closed the connection)
[10:58:18] *** Joins: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com)
[11:02:07] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Ping timeout: 252 seconds)
[11:02:18] *** Quits: sonny (~sonny@8.6.144.252) (Ping timeout: 268 seconds)
[11:05:15] <beaky> so i should write a full parser
[11:06:08] <decker> just just the character scanner 
[11:06:12] <decker> (nah jut)
[11:06:50] <decker> if it wasn't a full parser, which parts would you leave out?
[11:08:47] *** breavyn_ is now known as breavyn
[11:10:20] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[11:10:57] *** Quits: zaher (~zaher@37.48.188.25) (Ping timeout: 250 seconds)
[11:11:40] *** Joins: dunkeln (~dunkeln@117.239.210.100)
[11:11:41] *** Quits: dunkeln (~dunkeln@117.239.210.100) (Changing host)
[11:11:41] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[11:14:58] <ent58> are there any offhand good libraries for manually processing object file formats?
[11:15:29] <ent58> I think to do what I want to do, I have to do all the heavy lifting after the compiler has already duplicated every function I want merged
[11:15:30] <arahael> Nothing generic, unless you write a parser.
[11:16:33] <ent58> essentially it's just a special stage of object file processing where all functions in a particular object file with a custom format are diff-merged and the resulting metadata placed in its own special section with linkage
[11:16:54] <ent58> I guess I'm writing a COFF/ELF parser
[11:18:12] <ent58> I mean...can mingw compile to ELF64 object files easily? I don't mean like cross compiling, but using the ELF object format just for linkage, and smashing them into a PE+ afterward
[11:18:46] <ent58> obviously native gcc can, but I'm trying to find a switch to set the output object file format and it's actually kind of amazing how buried it is
[11:18:48] <ent58> unless I'm blind
[11:19:23] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 250 seconds)
[11:20:55] <ent58> To clarify, I'm on windows, using mingw-w64, and I want to compile to ELF object files, but link to PE's
[11:22:21] <decker> mingw gcc emits coff and pe not elf
[11:22:54] <ent58> and that's just a hard configuration thing? Not switchable?
[11:23:10] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[11:23:20] <ent58> I just think it's a bit unclean to objcopy everything over to ELF but I guess it makes sense
[11:23:26] <decker> and no elf and pe is fairly different it would take some work to translate.  But at least there's not a huge amount of different types :)  libelf  should make elf loading easy
[11:23:51] <decker> it's probably switchable if you build it yourself and find the configuration spot
[11:24:05] *** Joins: Emil (emil@emil.fi)
[11:24:07] <Emil> Hi
[11:24:33] <ent58> so I guess the method is compile to COFF -> objcopy to ELF -> link
[11:24:53] <decker> but why would you when it's target is pe
[11:24:53] <Emil> Can sql (sqlite) have structured columns? Or is everything always just flattened? Like name -> first, name -> last instead of firstname, lastname
[11:25:01] <decker> if you're elf, just build elf :)
[11:25:15] <ent58> so that I can standardize processing ELF for both linux and windows
[11:25:18] <decker> Emil sqlite has JSON support
[11:25:29] <decker> but mostly everything is flattened other than that
[11:25:31] *** Joins: inky (~inky@46.162.226.63)
[11:25:56] <decker> ent58 processing pe isn't so hard... easier than elf
[11:26:03] <Emil> decker: damn
[11:26:17] *** Joins: mrig (~AdiIRC@user/mrig)
[11:26:19] *** Quits: _inky (~inky_@46.36.119.153) (Ping timeout: 250 seconds)
[11:26:30] <ent58> the toolchain is mingw/gcc -> COFF (on windows) -> objcopy ELF (or native on linux) -> special step (combine functions and emit metadata, in ELF) -> link to PE/ELF executable (windows or linux)
[11:26:55] <ent58> the reason I want the ELF runaround is so that I can standardize on the better object file format for the special part
[11:27:26] <ent58> but the toolchain before it has to be easily deployable, so no special builds to enable striaght-to-elf
[11:27:28] <ent58> straight*
[11:27:49] <decker> the ABI is different
[11:27:53] <decker> you can't use the came compiled object
[11:27:53] *** Quits: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net) (Quit: b1101)
[11:28:25] <ent58> I know there's information loss and dragons, but you actually _can't_ do that?
[11:28:32] <ent58> I could have sworn I did it manually and it worked
[11:28:37] <ent58> or are you saying it's brittle
[11:29:04] *** Quits: inky_ (~inky@46.36.119.153) (Ping timeout: 256 seconds)
[11:30:05] <decker> certainly brittle
[11:30:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:31:30] *** Joins: aradesh (~aradesh@user/aradesh)
[11:32:38] <decker> https://github.com/d3x0r/SACK/blob/master/src/utils/virtual_file_system/vfs_runner/memory_dll_loader.c   never got elf to work; and windows dll's that use thread local storage fail - there's an undocumented internal windows uses to fixeup thread local data for loaded DLLs that they don't publish and noone's reverse engineered (hadn't 4-5 years ago)
[11:32:41] <bayaz> Title: SACK/memory_dll_loader.c at master Â· d3x0r/SACK 
[11:33:09] <decker> but that's not exactly what you were doing ;) I Mean if you wanted to load an elf plugin/windows plugin you shuold be able to do fixups - but again the ABI and standard call interface is different 
[11:33:49] <DarkTrick> **Q**: Does C++ define the size of a byte as 8 bits?
[11:33:54] <ent58> Yeah I don't need anything that heavy at runtime
[11:33:56] <ent58> not yet
[11:34:09] <DarkTrick> (I remember it does not define the size of byte, but only says "one byte is the smallest entity")
[11:34:28] <ent58> C++ offers a standard definition of CHAR_BIT which can be verified to be 8
[11:34:38] *** Joins: palasso (~palasso@user/palasso)
[11:34:54] <ent58> I can't remember if there's a fancier stl constant defined for it
[11:35:00] <ent58> I know there is for all the other types
[11:35:01] <decker> DarkTrick no CHAR_BIT does :)
[11:35:17] <DarkTrick> ent58, I infer from your answer, that my memory is correct and `char` is not always 8 bit(?)
[11:35:27] <decker> yes basically bytes are 8 bits. 
[11:35:33] <ent58> yes, certain DSPs as a common example can be 10-bit
[11:35:37] <decker> there's very rare corner cases you might find something different
[11:35:40] <ent58> super rare
[11:35:47] <user51> so every 8 bits are bytes? :P
[11:35:52] <DarkTrick> decker, that's was I was interested in :)
[11:36:00] <decker> the rare corners?  
[11:36:05] <DarkTrick> thank you ent58 and decker for the quick help!
[11:36:07] <decker> ethereum uses a 64 bit byte
[11:36:13] <decker> or was it 256
[11:36:29] <DarkTrick> decker: yes the rare corners.... meaning the definition of C++
[11:36:30] <user51> damn, my cpu only has 64..
[11:36:48] <decker> DarkTrick there's a constant you can use to conform... so ou don't have ot use '8'
[11:36:57] <decker> there is CHAR_BIT from C in C++
[11:37:00] <deniska> dcpu-16 has 16 bit bytes :)
[11:37:03] <DarkTrick> I'd like to use it as example to emphasize testing to students
[11:37:33] <ent58> I love teaching programming
[11:37:53] <decker> I don't know that swiping the rug from under them (changing the basic architecture) is a fair argument for testing :)
[11:38:23] *** Joins: maxzor (~maxzor@2a01cb04054faa00a92d8105788ee6c8.ipv6.abo.wanadoo.fr)
[11:38:49] <decker> because also the programs you'd write are different.  You woulnd't build a word processor on a DSP 
[11:39:10] <DarkTrick> decker, there's a bigger picture too tedious to explain here in text, but I appreciate your comment on the topic :)
[11:39:19] <decker> you don't do a spreadsheet in ethereum (but you do smart contracts which all have the same sorts of numbers)
[11:39:30] <ent58> Yeah so decker: I get truncation warnings on most of the symbols when I force ld to link a COFF converted elf, so that's probably a no go
[11:39:38] <ent58> or at least
[11:39:43] <ent58> it'll break somewhere in a big project
[11:39:46] <ent58> that's sad
[11:39:57] <decker> it's not so hard to have multiple comiplers
[11:40:01] *** Joins: operateur (~operateur@91.143.220.230)
[11:40:10] <decker> and build in parallel directories with cmake toolchained to the right one
[11:40:18] <ent58> oh no no that's not the hard part
[11:40:29] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:40:30] <ent58> it's mostly designing a neutral interface for the special sauce I want to add
[11:40:41] <ent58> and now I have to do it for COFF and ELF
[11:40:44] <ent58> not just ELF
[11:41:01] <ent58> I need function sizes and positions/relocations
[11:41:18] *** Quits: Guest1389 (~job@136.158.46.148) (Remote host closed the connection)
[11:41:49] *** Joins: _inky (~inky_@46.162.226.63)
[11:43:02] <arahael> You basically want a decompiler at this point.
[11:43:58] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:44:14] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Remote host closed the connection)
[11:44:24] <decker> or hook in at a preprocessor stage :)
[11:44:36] <decker> not sure what mac uses for binaries
[11:44:48] <decker> arahael elf? or elf-mangled?
[11:44:56] <ent58> I'd love to do a compiler plugin, but if I'm going that far, I want to add the feature to the language directly, and that's very difficult as opposed to a proof of concept
[11:46:04] *** Joins: nabaiste^ (~nabaiste@wsip-98-188-240-142.mc.at.cox.net)
[11:46:10] <ent58> when you're in a loaded PE, it's not clear how you would recover relocation/function size in a reliable manner
[11:46:24] <decker> it is to me :)
[11:46:34] <decker> the new style is the imports table
[11:47:05] <decker> dir[IMAGE_DIRECTORY_ENTRY_IMPORT].VirtualAddress
[11:47:18] <decker>  source_import_section->VirtualAddress  but it might be in a section too
[11:47:21] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 250 seconds)
[11:48:07] *** Joins: sonny (~sonny@8.6.144.252)
[11:48:37] <decker> heh - caret browsing mrig it's your fault :)
[11:48:57] *** Joins: Enitin (~Enitin@82.102.22.86)
[11:49:09] <ent58> that's location
[11:49:17] <ent58> but what about size/relocations?
[11:49:29] <decker> On github, with carat browsing enabled they don't send the line numbers.... https://github.com/d3x0r/SACK/blob/master/src/utils/virtual_file_system/vfs_runner/memory_dll_loader.c#L353 couldn't click on the line
[11:49:31] <bayaz> Title: SACK/memory_dll_loader.c at master Â· d3x0r/SACK 
[11:49:37] <mrig> It wan't me I didn't touch the carrot!
[11:49:41] *** Quits: operateur (~operateur@91.143.220.230) (Quit: WeeChat 3.3)
[11:50:02] *** Joins: operateur (~operateur@91.143.220.230)
[11:50:04] <decker> those directories have sizes too
[11:50:18] <decker> well no - who needs the size on the loader?
[11:50:32] <decker> you'd have to do like a delta size - but there's no telling how many nop pads there are]
[11:50:41] <ent58> so the reason I need sizes here, and especially relocation
[11:50:51] <ent58> is because I plan on taking...I don't know, 8 functions
[11:50:52] <decker> the relocation table has the address to fix
[11:51:06] <ent58> and smashing them into one function, delta compressed
[11:51:13] <decker> addresses are constant in 32 and 64 bit executables
[11:51:16] <ent58> and storing the differences separately
[11:51:20] *** Quits: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net) (Quit: Leaving)
[11:51:32] <ent58> well in this case they will have a constant base address, yes
[11:51:49] <decker> (constant size/length)
[11:51:54] <ent58> but nop pads and alignment considerations are taken care of by brute force
[11:52:09] <ent58> that's why I need to do this step before the PE is made :P
[11:52:18] <decker> ya
[11:52:29] <decker> or in templates
[11:52:38] <decker> before compile even :)
[11:53:13] <decker> void f() { #include "frag1.c" #include "frag2.c" }  :)  
[11:53:17] <ent58> the reason I'm smashing the function copies together is because I want to be able to re-write them, not jump to/use another copy
[11:53:22] <decker> smash them even before the compile
[11:53:37] <arahael> ent58: Have you considered using a language that directly supports that?
[11:54:12] <ent58> there is no language I'm aware of that allows write-execute re-writing of compiled code, either statically or dynamics
[11:54:15] <ent58> dynamically*
[11:54:27] <arahael> ent58: Looked at Erlang?
[11:54:36] <decker> JS
[11:55:02] <ent58> JS has vast overhead I'm not willing to accept, and I don't believe it's going to the level C++ would
[11:55:18] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:55:20] <ent58> Erlang allows you to overwrite compiled code?
[11:55:29] <decker> that's your opinion; but fact of using it is the only overhead is when you generate too much garbage
[11:55:44] <decker> if you write JS like C and pre-allocate everything you'll ever need that overhead diminishes significantly
[11:55:54] <arahael> ent58: Erlang was invented to allow the implementation of a Reliable system, which includes the need to update functions without restarting.
[11:56:11] <deniska> - No, you can't just write JS and hope for it to be fast  - Haha, V8 goes brrr
[11:56:56] <ent58> unless we're talking about it V8'ing down to the equivalent assembly you'd get via C/C++, it's a lost objective
[11:57:16] <ent58> otherwise I'd use a language with eval() and be completely happy
[11:57:33] <arahael> ent58: Erlang is an old language, and was invented by the telecomunications industry
[11:59:32] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[11:59:54] <ent58> I'd be really interested to see JS do that
[12:00:16] <beaky> nice i like erlang
[12:00:18] <decker> https://benchmarksgame-team.pages.debian.net/benchmarksgame/fastest/node-gpp.html :) I'm not sure which is faster.. the JS was certainly more efficient - although taking 2x it used 1/4 the CPU 
[12:00:19] <bayaz> Title: Node jsÂ vsÂ C++ g++ - Which programs are fastest? | Computer Language Benchmarks Game 
[12:00:26] <decker> (on say pidigits test)
[12:00:40] <decker> so I could run 4x pidigits and do 2x the work of C++
[12:01:00] <ent58> I have a hunch that something is amiss
[12:01:12] <ent58> if the power efficiency is that vastly different
[12:01:55] <decker> ';sides this function amalgamation is another performance boost - the fewer function calls the faster it is
[12:03:01] <ent58> either way, what I do know is that JS, even with V8, is not doing what I want to do
[12:03:02] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[12:03:52] <ent58> I have a very, very dirty and restrictive way of doing this but the limitations may actually kill the advantage, depending on the workload
[12:04:01] <decker> :) well no.. that's why you're a programmer to add that last bit that does 
[12:04:24] <decker> *shrug* it might be worth a quick mockup to see
[12:04:30] <ent58> yeah
[12:04:36] <ent58> I'll do the dirty way first and report back
[12:04:56] *** Quits: Daulity (~robert@217.119.239.2) (Remote host closed the connection)
[12:05:31] <arahael> ent58: It's well known that C++, at least naive C++, is not going to produce the fastest code. You have to profile it, and that's going to be true for any language you use, anyway.
[12:06:10] <beaky> yes wish i went with assembler instead of agda for advent of code since i need to produce the fastest solutions 
[12:06:19] <ent58> it's also true that well written C++ outperforms some C constructs to do the same task, but yes, I'm not copy constructing strings everywhere
[12:06:33] <decker> spidermonkey is also good at JIT.  when the code fragments are just small additions AOT(ahead of time) isn't needed... sometimes an interpretation phase is all that's needed because it's one time setup of the state
[12:06:45] <ent58> by JIT
[12:06:47] <ent58> do you mean
[12:06:54] <ent58> rewriting JS intermediate bytecode
[12:07:02] *** Quits: sonny (~sonny@8.6.144.252) (Ping timeout: 265 seconds)
[12:07:03] <ent58> or rewriting instructions compiled out from JS
[12:07:08] <decker> just in time compiling
[12:07:08] *** Joins: jaysicks (~jaysicks@178-164-221-3.pool.digikabel.hu)
[12:07:15] <decker> it gets to native instructions man.
[12:07:35] <ent58> I guess I'm out of touch with how far the optimizations have gone in JS
[12:07:35] <decker> brah
[12:07:59] <arahael> ent58: JS's optimisation work is *stupid insane*.
[12:08:13] <ent58> makes me wish that effort was delegated to C++
[12:08:30] <ent58> (I'm sure it has, just not in the extreme way I want)
[12:08:36] <decker> drops all sorts of unused variable references and 0 effect code
[12:08:38] <arahael> Yep, although C++ has its own difficulties as well when it comes to optimisation.
[12:08:45] <decker> (not that one should write such stuff)
[12:08:45] <deniska> C++ compilers are also very advanced pieces of tech
[12:13:31] <beaky> haskell compilers too
[12:20:19] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b484:addd:b6f6:fe4e)
[12:20:43] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[12:22:01] *** Quits: lithium_sulfate (~li2so4@sr388.sophieversum.net) (Quit: .)
[12:23:12] *** Joins: absc (~absc@81.31.144.28)
[12:26:05] *** Joins: Klinda (~superleag@user/klinda)
[12:26:28] <arahael> beaky: Rust, too, I assume, thanks to LLVM?
[12:26:28] *** Joins: jjido (~Denis@90.213.58.125)
[12:26:33] *** Joins: lithium_sulfate (~li2so4@sr388.sophieversum.net)
[12:26:47] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[12:26:49] <beaky> yes rust has a highly advanced modified llvm
[12:26:58] <arahael> Oh, they have a modified version?
[12:27:22] <decker> I think rust for this application would be like constantly hitting yourself in the head with a hammer to get it done
[12:27:24] <beaky> yes the modified llvm is the main reason why there is porting troubles on non x86 and non arm platfomr
[12:27:52] <arahael> beaky: Fascinating.  Haskell has similar difficulties I think but worse due to the template haskell.
[12:29:20] <ent58> yeah rust is out just because the guardrails get in the way, thought it's a neat language
[12:29:31] <ent58> thought*
[12:29:36] <ent58> though* aa typos
[12:29:46] *** Joins: murii (~murii@2a02:a58:835a:1100:416e:d699:80b5:235d)
[12:29:49] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[12:30:26] *** Joins: inhahe (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[12:31:33] *** Quits: operateur (~operateur@91.143.220.230) (Ping timeout: 250 seconds)
[12:31:43] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ¦)
[12:31:46] *** Joins: jazzy (~jaziz@user/jaziz)
[12:31:55] *** skreech1 is now known as skreech
[12:33:18] *** Joins: ejjfunky (~ejjfunky@125.163.60.19)
[12:34:53] *** Quits: jazzy3 (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[12:35:20] *** Joins: adeliktas (~adeliktas@2001:16b8:22c1:c800:fc6c:f5c3:4e96:ccc3)
[12:36:45] *** Joins: sh1r4s3 (~sh1r4s3@109-252-75-9.nat.spd-mgts.ru)
[12:38:05] <decker> ent58 for the record I would have never said JS before 5 years ago https://www.youtube.com/watch?v=hQVTIJBZook  and then not even for 2 more years after that
[12:38:06] <bayaz> Title: JavaScript: The Good Parts 
[12:38:36] *** Joins: dunkeln (~dunkeln@150.129.114.218)
[12:38:36] *** Quits: dunkeln (~dunkeln@150.129.114.218) (Changing host)
[12:38:36] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[12:38:44] <decker> *well must be more like 7 now...
[12:38:47] <xeno> JavaScript: The Good Parts was a good book, but now it's utterly out of date 
[12:38:55] <decker> ya right? :)
[12:39:08] <xeno> 2009 - that video is 12 years old 
[12:39:31] <ent58> investigating the types of assembly output that V8 gives you in JIT stages, thankfully it's not a competitor to what I want, but that's really impressive
[12:39:55] <ent58> like miles ahead of the days of yore
[12:40:31] <xeno> JavaScript: The Good Parts is like "intro to Java 1.1" would be for Java 
[12:41:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[12:42:16] <ent58> interesting...so V8 must have PaX/NX setup to do on linux deployments if it's writing buffers with code in them
[12:42:49] <ent58> that gives me hope that write-execute won't be completely phased out
[12:43:30] <decker> only on apple unless you get approved
[12:43:40] <decker> chrome v8 doesn't do apple it uses jscore from apple
[12:44:05] *** Joins: ixil (~ixil@2a02:120b:2c11:1d70:a38f:d77f:3f7e:92d2)
[12:44:23] <arahael> For full speed javascript on apple, the only option is javascriptcore within safari.
[12:45:12] <ent58> on windows it's more of a hint, on linux the user has to be involved, and on apple it's not allowed
[12:45:16] <ent58> poetic
[12:45:41] <arahael> Yep, for "hardware" reasons.
[12:46:11] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[12:46:35] <decker> hahah
[12:46:39] *** Joins: flakland (~flaknet99@32.211.211.39)
[12:51:12] <decker> ent58 there's ` ` strings which are template strings; you don't have to use any of the fancy expression susbtittion stuff, but they also just include the newline at the end of the line, and close on any line after that
[12:51:28] <decker> so a literal \n is \n also  .. like go you can put \ at the end to escape the newline
[12:51:33] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[12:52:40] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:53:37] *** Joins: inlight (~inlight@157.42.193.236)
[12:53:37] *** Quits: inlight (~inlight@157.42.193.236) (Changing host)
[12:53:37] *** Joins: inlight (~inlight@user/inlight)
[12:54:01] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:54:54] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi)
[12:55:03] *** Joins: xkuru (~xkuru@user/xkuru)
[12:56:50] *** Joins: mrig_ (~AdiIRC@lfbn-mar-1-864-160.w92-150.abo.wanadoo.fr)
[12:58:52] <beaky> what is the most elegant parser for advent of code day 10
[12:59:28] *** Quits: ixil (~ixil@2a02:120b:2c11:1d70:a38f:d77f:3f7e:92d2) (Remote host closed the connection)
[12:59:52] *** Joins: ixil (~ixil@2a02:120b:2c11:1d70:a38f:d77f:3f7e:92d2)
[13:00:11] *** Quits: mrig (~AdiIRC@user/mrig) (Ping timeout: 252 seconds)
[13:00:12] <decker> https://github.com/d3x0r/AoC-2020/blob/main/2021-10/doit.mjs#L20 that was super simple
[13:00:13] <bayaz> Title: AoC-2020/doit.mjs at main Â· d3x0r/AoC-2020 
[13:00:28] <decker> I coulda simplified - I didn't have the lookup table before
[13:03:45] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[13:04:05] <beaky> nice alot more elegant than my oslution
[13:04:37] <Trashlord> nice oslution, yes
[13:05:25] <decker> there's something like "[{<(".includes(c)
[13:06:02] <pyzozord> beaky: there isn't a most elegant as far as I can tell there is essentially only one solution
[13:09:26] *** stoned is now known as Hash
[13:09:37] *** Joins: jazzy2 (~jaziz@user/jaziz)
[13:11:12] <decker> if( c === lastInv[last] ) continue; removes 4 more lines *shrug*			
[13:11:24] <Stefan26> anyone wants to help me write the ## segment in https://pastebin.com/hfWw7VA9 in shorter-more-pythonic way?
[13:11:25] <bayaz> Title: lines = open(0).read().strip().split('\n')#lines=lines[:3]#lines is ['0,0' - Pastebin.com 
[13:11:59] <Stefan26> (splitting a list to two lists of equal size)
[13:12:21] <decker> beaky I'm curious what you did come up with
[13:12:39] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[13:14:07] <pyzozord> oh well more elegant as in less or more code sure
[13:14:08] <decker> if( c in lastInv ) { is even better than the .includes
[13:14:19] <pyzozord> I meant conceptually there is only one solution to the puzzle
[13:15:08] <decker> (and yes Inverse is too long to type)
[13:15:20] <pyzozord> decker: isn't c in lastInv going to detect also chars that are not on the last place?
[13:15:22] *** Quits: mrig_ (~AdiIRC@lfbn-mar-1-864-160.w92-150.abo.wanadoo.fr) (Remote host closed the connection)
[13:15:35] *** Joins: mrig_ (~AdiIRC@lfbn-mar-1-864-160.w92-150.abo.wanadoo.fr)
[13:15:38] *** Joins: jazzy3 (~jaziz@user/jaziz)
[13:15:59] <decker> lastInv is a object with only 4 fields '{':'}', ...
[13:16:17] <decker> so if it's not in the object it's one of the closes that lastInv maps
[13:16:30] <pyzozord> oh it's a map, not array
[13:16:44] *** Quits: saribro (~swinnenb@user/swinnenb) (Quit: This is the hidden truth, the world between the lines.)
[13:17:09] <pyzozord> ah nevermind
[13:17:14] <pyzozord> I just looked at your entire solution
[13:17:34] <pyzozord> yep, that's the same conceptual idea
[13:18:09] <decker> ya :)
[13:18:15] <decker> I didn't have much to comment on yours :)
[13:18:25] <decker> yup pretty much :)
[13:19:15] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[13:19:59] *** Quits: jazzy3 (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[13:21:59] <pyzozord> yep, here is mine again if someone wanted to take a look https://ideone.com/MybzaT
[13:22:01] <bayaz> Title: Ideone.com 
[13:22:15] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 250 seconds)
[13:22:27] <pyzozord> I suppose it's a bit less elegant or a bit more verbose in the code
[13:22:55] *** Quits: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Quit: Leaving)
[13:22:58] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 256 seconds)
[13:24:10] <beaky> at last after a day i have solved day 10 part 1
[13:24:25] <beaky> all thanks to inphase's hint to use stakcs to parse the input
[13:24:29] <pyzozord> what's the proof?
[13:24:38] <pyzozord> yes, that's the only way to do it
[13:25:46] <pyzozord> I wanna look at todays puzzle, but I got a lot of real life work to do first
[13:27:05] *** Joins: mawk (~mawk@serveur.io)
[13:27:06] *** Quits: mawk (~mawk@serveur.io) (Changing host)
[13:27:06] *** Joins: mawk (~mawk@wireguard/contributor/mawk)
[13:28:12] <beaky> teh agda proof (advent of code day 10 part 1 spoiler) https://bpa.st/PUZQ
[13:28:14] <bayaz> Title: View paste PUZQ 
[13:28:36] <decker> ya nice :)
[13:28:47] *** Quits: mrig_ (~AdiIRC@lfbn-mar-1-864-160.w92-150.abo.wanadoo.fr) (Quit: Going offline, see ya! (www.adiirc.com))
[13:28:56] *** Joins: jazzy (~jaziz@user/jaziz)
[13:29:07] <beaky> see i should've used a stack
[13:29:14] *** Joins: mrig (~AdiIRC@user/mrig)
[13:29:21] <pyzozord> oh wow that's surprisingly readable
[13:29:37] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 250 seconds)
[13:30:01] <beaky> yes agda was designed to be unicode friendly and to support mixfix syntax to facilitate maximum readability
[13:30:13] <user51> if i cat /dev/urandom will i eventually get a solution to any aoc puzzle?
[13:30:25] <pyzozord> still not sure what it does though
[13:30:37] <pyzozord> doesn't seem to be doing stack
[13:30:44] *** Joins: ixil_ (~ixil@2a02:120b:2c11:1d70:a38f:d77f:3f7e:92d2)
[13:30:45] <beaky> it parses the line for the score
[13:30:58] *** Joins: teut (~teut@106.215.11.94)
[13:31:06] *** Joins: jazzy2 (~jaziz@user/jaziz)
[13:31:07] <pyzozord> yes I know, but how
[13:31:08] *** Joins: swinnenb (~swinnenb@user/swinnenb)
[13:31:12] <beaky> recursion
[13:31:33] *** Quits: ixil (~ixil@2a02:120b:2c11:1d70:a38f:d77f:3f7e:92d2) (Ping timeout: 268 seconds)
[13:31:40] <beaky> recursion on the line (x â· l)
[13:32:30] <decker> see pyzozord all that extra code is why it took an hour and a half :p
[13:32:41] <beaky> the stack is (c â· cs)
[13:33:09] *** Joins: plastico (~plastico@neomutt/plastico)
[13:33:41] <decker> so where's the c or cs come from?
[13:33:42] <beaky> now im stucvk on part 2
[13:33:53] <pyzozord> decker: that's fair, especially considering that each line is another opportunity to get stuck with a less familiar language :)
[13:33:55] <beaky> it is initialized as the empty stack
[13:34:09] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 250 seconds)
[13:34:25] <beaky> then each iteration if it is a left bracket it gets pushed
[13:35:07] *** Joins: Enitin (~Enitin@82.102.22.86)
[13:35:20] *** Joins: gerwand (~gerwand@185.219.140.18)
[13:35:26] <pyzozord> last time you ignored incomplete lines
[13:35:34] *** Joins: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[13:35:35] <pyzozord> this time...
[13:35:35] *** Joins: Crescendo (~Crescendo@user/crescendo)
[13:37:05] <pyzozord> What's the state of the stuck when you finish parsing the incomplete line? I believe the problem wants you to complete it
[13:37:16] <pyzozord> complete it and score points while completing
[13:37:20] <decker> how how many were outstanding
[13:37:38] <pyzozord> s/stuck/stack/ lol
[13:38:14] <ent58> the state of the stuck is quite rigid sir
[13:39:24] *** Quits: hexingb (~hexingb@103.37.140.25) (Ping timeout: 256 seconds)
[13:39:40] *** Joins: hexingb (~hexingb@2409:8900:2950:a6dc:751a:b18e:cc45:3f57)
[13:39:54] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:40:22] <decker> the stack state of the stuck stack ?
[13:40:23] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[13:41:20] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:41:24] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[13:41:36] *** Joins: v0id_ptr (~pi@user/ptr-frac7al/x-0038398)
[13:42:24] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:43:09] <beaky> stack overflow
[13:44:00] <pyzozord> steak
[13:44:30] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 268 seconds)
[13:45:22] <pyzozord> well nevermind I though it was funnier :P
[13:45:37] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[13:46:06] <pyzozord> my steak is stuck on a steak stack on a stick stake
[13:46:57] <ent58> steak overflow sounds like a good restaurant name that caters to techies
[13:47:11] *** Joins: Twipply (~Twipply@user/twipply)
[13:47:13] *** Quits: ixil_ (~ixil@2a02:120b:2c11:1d70:a38f:d77f:3f7e:92d2) (Remote host closed the connection)
[13:47:31] <decker> steak stack shish kabob stick
[13:48:06] <decker> for sure - steak overflow :)
[13:48:23] <pyzozord> i'd definitely ingest
[13:48:57] <ent58> goto steak;
[13:49:30] <pyzozord> DEADBEEF would be a good name too
[13:49:40] <ent58> ooo
[13:49:41] <pyzozord> OR COFFEBABE
[13:49:42] <ent58> yeah
[13:49:48] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[13:49:58] <pyzozord> sorry C0FFEBABE
[13:50:36] <ent58> if you're going past uint32 you might as well go the whole 64
[13:51:07] <pyzozord> I think all java bytecode files start with C0FFEBABE, at least I heard so
[13:52:09] <ent58> I've seen stack spraying in the wild with 8BADC0DE over and over
[13:52:26] <decker> 8badf00d?
[13:53:03] <ent58> you can almost write badsteak
[13:53:08] <ent58> but what do you use for k
[13:55:16] *** Quits: v0id_ptr (~pi@user/ptr-frac7al/x-0038398) (Quit: WeeChat 3.0)
[13:56:16] *** Joins: peteyboy1 (~peteyboy1@98.red-95-123-127.staticip.rima-tde.net)
[13:56:24] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 256 seconds)
[13:57:18] *** Joins: AsenMx (~AsenMx@user/asenmx)
[14:01:27] *** Quits: hexingb (~hexingb@2409:8900:2950:a6dc:751a:b18e:cc45:3f57) (Ping timeout: 250 seconds)
[14:01:36] *** Joins: v0id_ptr (~pi@user/ptr-frac7al/x-0038398)
[14:03:37] *** Quits: v0id_ptr (~pi@user/ptr-frac7al/x-0038398) (Client Quit)
[14:03:37] *** Quits: rapier_k (~rapier@user/rapier) (Ping timeout: 250 seconds)
[14:03:59] *** Joins: v0id_ptr (~pi@user/ptr-frac7al/x-0038398)
[14:04:05] *** Quits: pavonia (~user@user/siracusa) (Read error: Connection reset by peer)
[14:06:28] <beaky> nice at last after an hour i have managed to finally solve part 2 of day 10 of the advent of code 2021 now im stuck in day 11
[14:08:22] <pyzozord> you aren't stuck, you are stack
[14:08:36] <pyzozord> can't be stuck 5 minutes after reading the problem :P
[14:09:09] *** Joins: Hercules (~Hercules@user/hercules)
[14:09:12] <ent58> stack-emulated queue emulating red-black tree
[14:09:34] <beaky> i dont like day 11 because it involves a 2d array just like day 9 another problem ive been stuck on for 3 days
[14:09:53] <pyzozord> yes, this one is fortunatelly much easier
[14:09:54] *** Joins: xavie (~xavie@176-139-252-198.abo.bbox.fr)
[14:10:04] <merijn> beaky: Still doing it in Coq?
[14:10:06] *** Joins: hexingb (~hexingb@2409:8900:2950:9cac:415f:cc98:e9fa:85c9)
[14:10:11] *** xavie is now known as xcombelle
[14:10:23] *** Quits: v0id_ptr (~pi@user/ptr-frac7al/x-0038398) (Quit: WeeChat 3.0)
[14:10:26] <beaky> yes in agda
[14:11:18] <beaky> it lacks easy 2d arrays instead you have to emulate it with an int map
[14:11:47] *** Quits: Hercules (~Hercules@user/hercules) (Client Quit)
[14:11:56] <user51> beaky: i'm reading day 11 right now
[14:11:57] <beaky> aalso lacks general recursion so you have to emulate it with a big enough fuel input or manually provide wellfoundedness arguments
[14:11:58] *** Joins: pavonia (~user@user/siracusa)
[14:12:17] <beaky> double whammy that leads to problems like day 9 or day 11 being tricky
[14:12:27] <user51> a 2d array is for the octupus energy level strnig?
[14:13:24] <beaky> yes
[14:13:37] <pyzozord> what is "fuel"?
[14:13:39] <PlanckWalk> Java's class files begin with  0xCAFEBABE
[14:14:03] <merijn> pyzozord: Agda only support *structural* recursion
[14:14:27] <user51> beaky: i assume you've tried doing it linearly?
[14:14:29] <pyzozord> what is structural recursion?
[14:14:49] <merijn> pyzozord: That is you can only recurse on a "structure" (not necessarily a data structure, but also stuff like numbers) with the requirements that the structure becomes smaller at every recursive step
[14:14:52] *** Joins: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net)
[14:15:14] <PlanckWalk> (in big-endian order)
[14:15:22] <pyzozord> ah so no loops with dynamically changing conditions?
[14:15:27] <beaky> pyzozord: fuel is like a decreasing counter you augment a (general recursive) function with to get it to satisfy the termination checker
[14:15:29] <merijn> pyzozord: Because Agda is a total language (i.e. *all* programs are guaranteed to terminate)
[14:15:50] <pyzozord> ooh I see
[14:15:52] *** Joins: v0id_ptr (~pi@user/ptr-frac7al/x-0038398)
[14:15:55] <merijn> The easiest way to prove recursion terminates is: Start with a (finite) sized input and prove at every step the input shrinks
[14:15:56] <pyzozord> those are very interesting ideas
[14:15:57] *** Quits: chomwitt (~chomwitt@2a02:587:dc0d:3700:12c3:7bff:fe6d:d374) (Ping timeout: 268 seconds)
[14:16:20] <pyzozord> so in other words, agada is deterministic
[14:16:32] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[14:16:33] <pyzozord> and does not have the halting problem
[14:16:33] <user51> why does day 11 make me think of tetris?
[14:16:36] <merijn> Total is stronger than that
[14:17:01] <ent58> determinism is weak, relatively, but I didn't know there was a language like that
[14:17:01] <merijn> pyzozord: But yes, Agda does not suffer from the Halting problem at the "cost" of not being Turing complete
[14:17:02] *** Joins: Enitin (~Enitin@82.102.22.86)
[14:17:11] <merijn> ent58: Several, actually
[14:17:34] <pyzozord> well I think in real life, nothin ever is turing complete because nothing ever has infinite memory
[14:17:48] <beaky> yes the simplest way is to just provide a huge int that decreases by 1 every iteration, then the sophisticated proper way is to either transform the problem to involve a data structure that does provide the required structural recursion, to use non termination monads, or to provide 'well foundedness' arguments through an Accessiblility relation
[14:17:56] <user51> pyzozord: just wrap the pointer
[14:18:01] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 265 seconds)
[14:18:03] <merijn> ent58: The biggest/most "mainstream" (for incredibly niche definitions of mainstream ;)) are Agda and Coq (although both are more theorem provers than genral purpose programming language)
[14:18:07] <user51> :P
[14:18:34] <merijn> ent58: There is also Idris which *is* (intended to be, anyway) a general purpose programming language with "opt-in" totality checking
[14:18:42] <ent58> I see
[14:18:42] <pyzozord> I'm liking agda more now
[14:18:49] <pyzozord> I assume agda does not have pointers, right?
[14:18:54] <beaky> yes agda is like haskell++ it lacks warts like using :: for types instead of just :
[14:18:55] <merijn> pyzozord: It does not :p
[14:19:00] <pyzozord> that's prefect
[14:19:02] <user51> that's terrible!
[14:19:28] <pyzozord> so it like what I said ada should be: without pointers
[14:19:33] *** Joins: operateur (~operateur@91.143.220.230)
[14:19:36] <pyzozord> and that idea of fuel is also a cool one
[14:19:49] <pyzozord> but agda probably has a lot of type theory in it, which I am not so found of
[14:20:08] <merijn> pyzozord: I'm not an Agda expert, but I guess "fuel" is more for corecursion
[14:20:08] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[14:20:09] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[14:20:09] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[14:20:14] <user51> pointers could work for day 11 perhaps, you'll need some ennumeration though :)
[14:20:19] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[14:20:56] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[14:21:07] <merijn> pyzozord: If "data" consist of only *finite* data structure/data types, the "codata" is "infinite data structures" (imagine things like infinite streams as you can produce with python generators)
[14:21:16] <user51> but my idea is just treating it as a 2d table and calculating the coordinates, so pointers aren't essential
[14:21:33] *** Joins: rany__ (~rany@user/rany)
[14:21:36] <merijn> pyzozord: The problem is of course that corecursion isn't terminating simply due to structure, because structure is infinite
[14:21:43] *** Quits: rany__ (~rany@user/rany) (Remote host closed the connection)
[14:21:52] *** Joins: rany___ (~rany@user/rany)
[14:22:24] <merijn> pyzozord: So you can only do corecursion if you *prove* you stop within finite steps (imagine something like "take 100" which returns a list of the first 100 elements of an infinite stream), that's obviously terminating
[14:22:26] <ent58> we'll do the entire AoC in brainfudge
[14:22:30] <pyzozord> this co-stuff, that's type theory right? I looked it up once but I forget
[14:22:55] <merijn> pyzozord: co-X is more "math in general" than merely type theory
[14:23:03] <user51> ent58: not assembly?
[14:23:32] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:23:38] <pikapika> Always use Cpr
[14:24:45] *** Quits: rany_ (~rany@user/rany) (Ping timeout: 276 seconds)
[14:25:00] <ent58> I would love to do it in assembly
[14:25:15] <ent58> but there are also other things I like doing c:
[14:25:18] <beaky> nice i like assembly it uses the least ram
[14:25:34] <ent58> You could do stripped down C
[14:26:05] <ent58> but if you're using FP you at least need to set that up
[14:26:18] <pikapika> C is a high level language
[14:27:17] <PlanckWalk> (compared with assembly)
[14:28:10] *** Quits: davros (~davros@host86-185-99-134.range86-185.btcentralplus.com) (Ping timeout: 265 seconds)
[14:28:39] *** Quits: rany___ (~rany@user/rany) (Ping timeout: 276 seconds)
[14:28:52] <ent58> C is a chainsaw made of segmentation faults
[14:29:00] <ent58> and I wouldn't have it any other way
[14:30:10] <merijn> ent58: Reminds me of my favourte IRC qoute :p
[14:30:43] <ent58> uh oh
[14:31:19] <pyzozord> what's the quote?
[14:31:46] <merijn> ent58: Roughly went: <Alice> I swear, all C programmers include buffer_overflow.h in their code or something... <Bob> They do! Except it's called string.h! I believe it's short for "a long string of embarassing security vulnerabilities"...
[14:32:06] *** Joins: davros (~davros@host86-185-99-134.range86-185.btcentralplus.com)
[14:32:10] <pyzozord> lol :D
[14:32:19] *** Quits: v0id_ptr (~pi@user/ptr-frac7al/x-0038398) (Quit: WeeChat 3.0)
[14:32:39] *** Joins: v0id_ptr (~pi@user/ptr-frac7al/x-0038398)
[14:32:45] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[14:32:52] *** Quits: v0id_ptr (~pi@user/ptr-frac7al/x-0038398) (Client Quit)
[14:32:55] *** Joins: Klinda (~superleag@user/klinda)
[14:33:04] <pyzozord> what's the man page for string.h?
[14:33:23] <ent58> "help me"
[14:33:33] <merijn> anything start with str :p
[14:33:47] <merijn> strconcat, strcmp, strcopy, etc.
[14:34:10] <ent58> strcrash, stroverwritebootloader, standard stuff
[14:34:46] <ent58> some still with no length checks and the assumption that you've given it the shortest one
[14:35:04] <ent58> then there's gets()
[14:35:26] <ent58> get*suffering*()
[14:35:27] *** Joins: skepta (~eric@36.77.236.126)
[14:35:32] <pyzozord> ah, i was on the wrong machine where I don't have posix-man intalled
[14:35:45] <pyzozord> man string.h works
[14:35:58] <pyzozord> (if you have manpages-posix package installed
[14:36:17] <ent58> POSIX is better than sliced bread
[14:36:35] <ent58> it's what allows me to convert void * to function pointers
[14:36:53] <ent58> little did I know
[14:38:01] <pyzozord> hmm, time for some edm music
[14:38:13] <ent58> moon - Do not look back
[14:38:40] <pyzozord> I stopped using spotify few years ago. Yesterday I accidentally stumbled on it still installed on my tv, and went down the nostalgia trip
[14:38:51] *** Joins: cykid128 (~cykid128@36-227-49-65.dynamic-ip.hinet.net)
[14:38:53] <pyzozord> I have to say that most of the songs were extremly cringe...
[14:38:58] <pyzozord> but it did put me in the edm mood
[14:39:09] *** Quits: cykid128 (~cykid128@36-227-49-65.dynamic-ip.hinet.net) (Remote host closed the connection)
[14:39:52] <pyzozord> it's kind of still cringe, I might be growing out of it I don't know...
[14:40:07] <pyzozord> nobody warned me that's one of the side effects of growing up :(
[14:40:38] *** Joins: ixil (~ixil@2a02:120b:2c11:1d70:a38f:d77f:3f7e:92d2)
[14:40:46] *** Joins: cykid128 (~cykid128@36-227-49-65.dynamic-ip.hinet.net)
[14:41:28] <GeDaMo> When you get even older, you'll feel a lot of nostalgia for that music :P
[14:41:53] *** Joins: rany_ (~rany@user/rany)
[14:42:14] <teut> https://regex101.com/r/Dj6Rm5/1Â Â  can someone tell why that .* is breaking the regex
[14:42:15] <teut> ?
[14:42:20] *** Joins: temp555 (~temp555@36-227-49-65.dynamic-ip.hinet.net)
[14:42:36] <teut> .* is just skip anything in between
[14:42:38] <temp555> test
[14:42:42] *** Quits: temp555 (~temp555@36-227-49-65.dynamic-ip.hinet.net) (Remote host closed the connection)
[14:42:43] *** Quits: cykid128 (~cykid128@36-227-49-65.dynamic-ip.hinet.net) (Remote host closed the connection)
[14:43:24] <teut> oh , line terminators presumably
[14:43:25] <GeDaMo> Your link's borken https://regex101.com/r/Dj6Rm5/1
[14:43:27] <bayaz> Title: regex101: build, test, and debug regex 
[14:43:28] *** Joins: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[14:43:36] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_dog)
[14:43:41] *** Joins: cykid128 (~cykid128@36-227-49-65.dynamic-ip.hinet.net)
[14:43:45] <cykid128> hello!
[14:43:52] <GeDaMo> Hi cykid128 :)
[14:44:02] *** Quits: hexingb (~hexingb@2409:8900:2950:9cac:415f:cc98:e9fa:85c9) (Ping timeout: 240 seconds)
[14:44:11] <teut> https://regex101.com/r/nTaZuM/1
[14:44:12] <bayaz> Title: regex101: build, test, and debug regex 
[14:44:28] <GeDaMo> What are you trying to match?
[14:44:45] <teut> I need X and Y
[14:45:02] *** Quits: gerwand (~gerwand@185.219.140.18) (Ping timeout: 240 seconds)
[14:45:02] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi)
[14:45:17] *** Quits: cykid128 (~cykid128@36-227-49-65.dynamic-ip.hinet.net) (Remote host closed the connection)
[14:45:24] <teut> it can beÂ Â  "X = 78^45 Â Â  Y= -78^45"Â  or similar thing
[14:45:33] *** Quits: ixil (~ixil@2a02:120b:2c11:1d70:a38f:d77f:3f7e:92d2) (Ping timeout: 268 seconds)
[14:45:57] <GeDaMo> From the description at the right, ". matches any character except line terminators"
[14:46:04] *** Joins: cursey (~cursey@user/cursey)
[14:47:22] <teut> and is there a way to include line terminators in .?
[14:47:35] <teut> character class?
[14:47:52] <GeDaMo> (X|Y)\s*=\s*(-?\d+\^?\d+) seems to work
[14:48:00] *** Joins: hexingb (~hexingb@103.37.140.19)
[14:48:21] <GeDaMo> Or [XY]\s*=\s*(-?\d+\^?\d+)
[14:49:17] <teut> oh , so this also gives all matches, I didnt know this
[14:49:28] <GeDaMo> That's because of the global flag
[14:49:51] <teut> like /g in js?
[14:49:54] <GeDaMo> Yes
[14:50:09] <GeDaMo> It's set on that page to the right of the regex expression
[14:50:09] <teut> oh , nice, python also has a thing , findall
[14:50:26] <teut> yes, saw it, nice, thanks for the help
[14:51:06] *** Joins: gerwand (~gerwand@185.219.140.18)
[14:51:50] *** Quits: rany_ (~rany@user/rany) (Remote host closed the connection)
[14:52:23] *** Quits: hexingb (~hexingb@103.37.140.19) (Ping timeout: 252 seconds)
[14:53:44] *** Joins: rany_ (~rany@user/rany)
[14:55:28] *** Quits: CaCode (~CaCode@user/cacode) (Quit: Leaving)
[14:57:33] *** Quits: jazzy2 (~jaziz@user/jaziz) (Quit: Beddie bye-bye)
[14:57:52] *** Quits: davros (~davros@host86-185-99-134.range86-185.btcentralplus.com) (Ping timeout: 268 seconds)
[14:59:41] *** Joins: davros (~davros@host86-185-99-134.range86-185.btcentralplus.com)
[15:01:25] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[15:01:44] *** Joins: InternetCitizen (~fuzzypixe@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[15:03:11] <maxzor> How would you look which program in your system statically bundles a given library?
[15:04:01] <GeDaMo> Your package manage probably has a way to list which files are installed from which package
[15:04:08] <GeDaMo> package manager
[15:05:05] *** Joins: Enitin (~Enitin@82.102.22.86)
[15:05:59] <deniska> maxzor: depends on what you mean by "statically bundle". If it's a dll/so file near the executable, you can just search through the file system
[15:06:11] <maxzor> for sure, but if this bundling exists without the package manager knowing it?
[15:06:15] <deniska> maxzor: if it's actually statically linked, your best bet is looking through build time dependencies
[15:07:06] *** Joins: Nex6 (~Nex6@cpe-45-51-244-112.socal.res.rr.com)
[15:07:48] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 256 seconds)
[15:08:16] <maxzor> In my case I am looking for skia, the 2D graphic library. I initially tried slicing 1 MB in libskia.a and grepping for it, but no result of course... so I found a class in the source, and am grepping the filesystem... grep -nR SkRTree --exclude-dir={/var/log,/proc,/dev,/sys,/snap} --exclude='*.h' --exclude='*.cpp' / 2&>/dev/null
[15:09:04] <maxzor> But how do you look at build time dependencies at the scale of all the programs in the system?
[15:09:32] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[15:09:38] *** Joins: src (~src@user/src)
[15:11:39] *** Quits: Nex6 (~Nex6@cpe-45-51-244-112.socal.res.rr.com) (Ping timeout: 250 seconds)
[15:12:00] *** Joins: hexingb (~hexingb@103.37.140.25)
[15:12:03] *** Quits: peteyboy1 (~peteyboy1@98.red-95-123-127.staticip.rima-tde.net) (Ping timeout: 268 seconds)
[15:13:13] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[15:14:31] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[15:15:06] *** Joins: sio (~sio@185.97.201.26)
[15:17:08] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[15:18:34] *** Joins: mrig (~mrig@user/mrig)
[15:18:53] *** Joins: rany__ (~rany@user/rany)
[15:19:19] *** Joins: cykid128 (~cykid128@36-227-49-65.dynamic-ip.hinet.net)
[15:19:28] *** Joins: omo (~omo@36-227-49-65.dynamic-ip.hinet.net)
[15:19:36] <sio> Hello, folks! A terminology question: from a library author point of view what are the better terms to refer to "developer developers" (this project collaborators), "developer users" (developers who use this project in their apps/libs/whatever) and "user users" (end users who do not interact with this project directly, only via something created by "developer users")? English is not my first language :)
[15:20:46] <decker> collaborators, developers, users
[15:21:43] <pyzozord> maintainers as the people who work on the library, developers as the people who use the library, users as the people who use the product that uses the library
[15:22:24] <omo> i would say implementation/interface programmer
[15:23:15] *** Quits: rany_ (~rany@user/rany) (Ping timeout: 276 seconds)
[15:26:01] *** Joins: Iarfen (~quassel@181.43.57.66)
[15:27:18] *** Quits: Themis3000 (~Thunderbi@user/themis3000) (Quit: Themis3000)
[15:27:45] *** Quits: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com) (Quit: Client closed)
[15:29:00] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[15:29:16] *** Quits: cykid128 (~cykid128@36-227-49-65.dynamic-ip.hinet.net) (Quit: Lost terminal)
[15:29:17] *** Quits: omo (~omo@36-227-49-65.dynamic-ip.hinet.net) (Remote host closed the connection)
[15:33:17] <DPA> O gods of git, answer me! How do I tell git to remove all local files & branches, and update & check out a remote or tag freshly as if I had done a git clone, but without having to clone the whole repo again?
[15:33:17] <DPA> My "solutions" get increasingly complex, and they still have edge cases where they fall over...
[15:33:47] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[15:34:07] <DPA> (Actually, it should keep the local branches, except if it's the one to be checked out)
[15:34:13] *** Joins: cykid128 (~cykid128@36-227-49-65.dynamic-ip.hinet.net)
[15:37:49] *** Quits: shailangsa (~shailangs@host86-186-127-128.range86-186.btcentralplus.com) ()
[15:39:08] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Quit: Leaving)
[15:41:09] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[15:42:08] <merijn> The solution is to find true enlightenment and realise that git is a tool for masochists who hate easy to use tools and linux kernel developers (probably considerable overlap between the two...) and abandon it :p
[15:43:46] *** Joins: Burgundy (~yomon@79.115.213.171)
[15:43:48] <pyzozord> merijn: what's the alternative?
[15:44:14] <merijn> pyzozord: Depends on whether you're forced to collaborate with git users or not
[15:44:47] <deniska> pyzozord: I'm personally eyeing fossil
[15:45:12] <pyzozord> DPA: git branch -d local-branch and git push -d remote-branch
[15:45:23] <merijn> I would say that for personal use where you can use whatever Fossil and Pijul are the most interesting alternatives currently
[15:45:47] <pyzozord> I heard about cvs from openbsd
[15:45:49] <merijn> If, like me, you're forced to interact with git repos because of work Mercurial + hg-git extension is very nice
[15:45:58] <merijn> pyzozord: CVS is stoneages shit you don't want :p
[15:46:36] <merijn> Distributed version control is great, it's just the git UX that's freaking terrible. But until the github monoculture took over programming there were plenty of distributed VC alternatives
[15:46:58] *** Joins: inlight (~inlight@157.35.17.204)
[15:46:59] *** Quits: inlight (~inlight@157.35.17.204) (Changing host)
[15:46:59] *** Joins: inlight (~inlight@user/inlight)
[15:46:59] <DPA> I actually like git overall. It's just this one thing I can't figure out.
[15:47:09] *** Joins: anthk_ (~anthk@92.176.105.30)
[15:47:10] <merijn> And the reason git "won" isn't that git was the nicest. It's that *github* was the nicest open source code hosting page and they only supported git
[15:47:29] <merijn> DPA: I'm 100% convinced the things you like about aren't specific to git, but to distributed version control :p
[15:47:47] <deniska> well, git was also quite more performant than mercurial >_>
[15:48:10] <merijn> deniska: Not in a way that matters to 99.99% of people
[15:48:59] <merijn> "more performant" is only meaningful when performance is a probelm for day to day operations, which it just isn't for most people and repos
[15:49:06] <DPA> Maybe I should just make a "git clone --mirror", and rm -rf repo; git clone repo from there...
[15:49:17] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[15:49:32] *** Quits: ProperNoun (~holyShizn@user/propernoun) (Ping timeout: 240 seconds)
[15:50:12] *** Joins: ProperNoun (~holyShizn@user/propernoun)
[15:51:07] *** Joins: pulse (~pulse@user/pulse)
[15:55:04] <mrig> DPA you can erase local branches and files, then run git checkout origin/master <using what ever your upstream reapo and branch are called> then make a branch there.
[15:56:47] <beaky> how do i become faster at solving advent of code
[15:56:50] <beaky> im 5 days behind
[15:56:55] <DPA> My current attemt looks like this: https://github.com/Daniel-Abrecht/dpa-image-builder/blob/master/src/make-helper-functions.mk#L106
[15:56:55] <DPA> And it can still happen that it checks out the wrong thing / something local...
[15:56:56] <bayaz> Title: dpa-image-builder/make-helper-functions.mk at master Â· Daniel-Abrecht/dpa-image-builder 
[15:58:43] <mrig> oh and you would need to first rename and then remove you current main branch if you would like to use the same name.
[15:58:55] <mrig> remove once on the new head.
[15:59:04] <pulse> beaky, Use crystals
[15:59:22] <pulse> Preferably those infused with arcane magic
[15:59:25] *** Joins: teut49 (~teut@2402:3a80:96e:6f8b:2dbf:97fa:c970:9778)
[15:59:33] <viaSanctus> not sure if i can ask this here, but with fluent nhibernate, when i start a new session + it sees changes in the db, does it reinitiate all my entities?
[15:59:40] <mrig> I'm not sure that recommending meth is wise in a family channel :D
[15:59:55] <pulse> What, no, oh
[16:00:00] <mrig> pulse: oh arcane ones are find :D
[16:00:12] <viaSanctus> i just wanted to ask first before breaking through it
[16:00:13] <mrig> fine rather!
[16:00:14] <pulse> I meant like a nice large quartz
[16:00:35] <mrig> faster crystals in the CPU?
[16:00:41] <pulse> Or citrine
[16:00:48] <mrig> just not got the right vibe?
[16:00:50] <mrig> :P
[16:00:55] <pulse> "Citrine is a popular type of quartz crystal often used to in conjunction with feng shui to welcome abundance, prosperity, and positivity."
[16:01:17] <mrig> on nice, I might put Citrine in my CPU!
[16:01:20] <pulse> Plop those around your computer desk and you're good to go!
[16:01:20] <pyzozord> beaky: stop trying to prove everything in agda :P
[16:02:08] *** Quits: teut (~teut@106.215.11.94) (Ping timeout: 256 seconds)
[16:02:09] <mrig> beaky: you could ask Santa to accelerate that Mr Moore, he is the one who is lagging behind!
[16:02:28] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[16:04:05] <mrig> Yikes I just spent a worrying amount of time chasing /path/errors
[16:04:08] *** Quits: menace (~someone@user/menace) (Quit: menace)
[16:04:17] <pulse> My new year resolution is I will write more code and fewer bugs
[16:04:29] <mrig> I suppose you just get used to it when they are familiar in the workflow
[16:05:05] <mrig> I'm actually planning on going into writing bugs more seriously :/
[16:05:16] <GeDaMo> The best way to have fewer bugs is to write less code :P
[16:05:21] *** Joins: aaa (~aaa@user/aaa)
[16:05:22] <mrig> and moulds and fungi!
[16:05:44] <mrig> but I want to watch them crawl about and propagate!
[16:05:47] <pulse> But you have to write a lot of code to have many features
[16:06:14] <mrig> oh, creeping like a slime mould?
[16:06:21] *** Parts: aaa (~aaa@user/aaa) ()
[16:06:51] <pulse> I'm annoyed that mould and would don't rhyme
[16:06:57] <mrig> feature creep, this actual describes JS quite nicely, it grew a ladder to escape its sand box XD
[16:07:11] *** Quits: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au) (Ping timeout: 252 seconds)
[16:07:34] * mrig zips up and stops making JS jokes, it is very childish.
[16:07:40] <pyzozord> you get a feature, you get a feature, everybody gets a feature!
[16:08:25] <mrig> pulse; that is pretty annoying, god forbid should you want to do anything sensibly with phonetics in a regexp.
[16:08:41] * mrig ponders sane languages for programming.
[16:08:43] <pulse> Ugh, using regex to come up with rhyme schemes
[16:08:59] <mrig> well in a good language this would be really powerful. 
[16:09:19] <pulse> You would need to parse phonetics rather than err... text..etics
[16:09:26] <mrig> Im working on this vaguely at the moment.
[16:09:43] <mrig> no you just need a decent logical set of glyph.
[16:09:43] <pyzozord> what if we should do less features and more explaining to people that they approach things the wrong way
[16:09:52] <mrig> simple really.
[16:09:56] <pyzozord> "you don't need a smaller font, you need less text!"
[16:10:00] <mrig> heh
[16:10:17] <mrig> no cramming more onto one page does not make it more efficient to read.
[16:11:38] <mrig> pulse: so it means relearning the abc
[16:11:45] *** Joins: Mangy_Dog (~Mange@user/mangy-dog/x-7397214)
[16:13:07] <mrig> right, time for me to go full CRUD!
[16:13:37] *** Joins: neverfindme (~hayden@158.123.160.43)
[16:17:31] *** Quits: neverfindme (~hayden@158.123.160.43) (Remote host closed the connection)
[16:17:53] *** Joins: neverfindme (~hayden@158.123.160.43)
[16:20:35] <mrig> Having more glyph combinations makes a language more explicit though, curious area of linguistics, id be intrigued to find out more about it.
[16:21:25] <decker> there's phonetic alphabets - somewhere inbetween conceptual and letter compositions that combine to make phonics
[16:21:37] <mrig> devanagari does it.
[16:21:42] *** Joins: Klinda (~superleag@user/klinda)
[16:21:46] <mrig> its pretty cool
[16:22:17] <GeDaMo> I wonder if you could use these number symbols for a language https://en.wikipedia.org/wiki/Cistercian_numerals
[16:22:18] <bayaz> Title: Cistercian numerals - Wikipedia 
[16:22:58] <mrig> 50 to 54 char, 16 vowels and the rest consonants, which map together to make thousands of phonems.
[16:23:12] <GeDaMo> https://upload.wikimedia.org/wikipedia/commons/6/67/Cistercian_digits_%28vertical%29.svg
[16:23:12] <bayaz> Type: image/svg+xml 
[16:23:35] <mrig> GeDaMo: if brainfuck is workable then that has to be possible!
[16:24:02] <[itchyjunk]> all my finals are today /o\
[16:24:08] <[itchyjunk]> did study for the programming class
[16:24:17] <[itchyjunk]> here is to hoping my brain carries me to victory
[16:24:38] <[itchyjunk]> (java), public static void main (String[] args) { }
[16:24:40] <[itchyjunk]> right?
[16:24:53] <mrig> Looks curiously like a game of hangman the cistercian digits :)
[16:24:57] <[itchyjunk]> public ClassName { } for class declaration?
[16:25:50] <pulse> Good luck [itchyjunk] 
[16:25:56] <[itchyjunk]> ty
[16:26:07] <[itchyjunk]> gonna be on campus for 12 hours ;_;
[16:26:21] <[itchyjunk]> 2 2 hour examps, rest is just commute and wait times
[16:26:50] <[itchyjunk]> int[] blah = {1, 2, 3}; works right?
[16:26:57] <[itchyjunk]> i'd open up ide and test all this but..
[16:26:58] <mrig> yes, break a leg. As they say in blighty, not sure if that is a thing over the pond.
[16:27:07] <GeDaMo> That's an acting thing :P
[16:27:13] <mrig> oh right.
[16:27:30] <[itchyjunk]> well with all this imposter syndrom, i might as well be acting
[16:28:25] <mrig> well it is all a bit of an act this academia thing, so it seems to fit the case, and dont mention ... well you know who, Mac Thing a ma GIGO!
[16:28:45] <mrig> Oh god this spell check code is sooooo bad. :(
[16:28:55] <mrig> thing a ma giggie, rather.
[16:29:27] <mrig> I cant believe how bad it is, it is almost as though the author never used it :|
[16:29:47] <[itchyjunk]> i know i can do int[] a = new int[10]; or somescuh
[16:29:54] <[itchyjunk]> but how did the assingment go?
[16:30:04] <[itchyjunk]> int[] a = {1, 2}; ?
[16:30:47] <[itchyjunk]> yeah it is
[16:31:54] <adeliktas> [itchyjunk] it should be int blah[] = {1, 2, 3}; just keep in mind you can do stuff like int a[2][2] = {} array of arrays etc.
[16:32:08] <teut49> my friend is placed at myntra
[16:32:41] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:4114:c3a8:f0dd:f3a3) (Ping timeout: 250 seconds)
[16:32:46] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:71bb:57a2:add3:535a)
[16:32:49] <teut49> he was asking how to create a responsive website
[16:32:54] <[itchyjunk]> adeliktas, i think int var[] is depricated in java
[16:33:11] <adeliktas> [itchyjunk] i had c++ in my mind my bad
[16:33:11] <[itchyjunk]> you assign type[] variable for lhs
[16:33:15] <[itchyjunk]> ah
[16:33:30] <[itchyjunk]> so java stole that from C++ but decided to spice it up i guess
[16:33:32] <teut49> companies hire on useless metrics , I do not respect them, I will try to pass them by whatever ways
[16:33:33] <[itchyjunk]> kinda lame, haha
[16:34:08] <[itchyjunk]> any time user does any action, respond with a pop up
[16:35:02] * mrig strives to now become the master of CRUD; With no.js! <- it's an empty file
[16:35:17] *** Quits: _inky (~inky_@46.162.226.63) (Ping timeout: 265 seconds)
[16:36:39] *** Quits: anthk_ (~anthk@92.176.105.30) (Remote host closed the connection)
[16:36:49] <pyzozord> NMb344111!;!;
[16:36:55] <pyzozord> well fuck
[16:37:01] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 250 seconds)
[16:37:25] *** Quits: palasso (~palasso@user/palasso) (Quit: No Ping reply in 180 seconds.)
[16:37:31] *** Joins: Enitin (~Enitin@82.102.22.84)
[16:38:16] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[16:38:47] *** Joins: palasso (~palasso@user/palasso)
[16:38:56] *** Joins: teut (~teut@2401:4900:1c30:1de4:919b:82a3:cf8:ac12)
[16:38:58] *** Quits: teut49 (~teut@2402:3a80:96e:6f8b:2dbf:97fa:c970:9778) (Ping timeout: 256 seconds)
[16:39:28] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[16:39:51] <mrig> heh, what happened there?
[16:41:25] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:71bb:57a2:add3:535a) (Remote host closed the connection)
[16:41:52] <vdamewood> Hail to the bus driver, bus driver, bus driver, hail to the bus driver, bus driver program.
[16:42:22] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:71bb:57a2:add3:535a)
[16:42:29] <mrig> I wonder if you could go straight from an audio wave for to text, if using an appropriate language, how many phonemes you would really need for most languages that don't use transient pops and clicks heavily?
[16:42:38] <mrig> waveform rather.
[16:43:14] <merijn> That feel when just implementing your own graphs solution to AOC is less work than figuring out which graph library to use and how :p
[16:43:43] <mrig> nice, always good to avoid dependencies! :) 
[16:44:23] <vdamewood> mrig: The appripriate language is solresol.
[16:44:40] <vdamewood> It had 7 phonemes.
[16:44:43] <vdamewood> has*
[16:45:02] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[16:45:10] <mrig> Im thinking that may lack some definition, some nuance, no?
[16:45:30] <[itchyjunk]> What's "size" of an array?
[16:45:37] <[itchyjunk]> i know what length means
[16:45:39] <[itchyjunk]> (java)
[16:45:43] <[itchyjunk]> forgot what size means
[16:45:46] *** Quits: teut (~teut@2401:4900:1c30:1de4:919b:82a3:cf8:ac12) (Ping timeout: 256 seconds)
[16:45:49] *** Joins: jamea (~jamea@177.239.81.39)
[16:46:16] <vdamewood> mrig: The phonemes are the notes of the major scale. It does seem kind of limited.
[16:46:17] <merijn> ugh, this 2nd part doesn't nicely generalise part 1. I hate having to copy&paste instead of having a shared solution for both :p
[16:46:44] <mrig> vdamewood: oh just the major, that would be rather dull :|<
[16:47:57] <mrig> vdamewood oh cool, just having a read about this FranÃ§ois Sudre fellow, interesting stuff!Â¬ 
[16:48:09] <[itchyjunk]> mawk, you know java?
[16:48:38] <vdamewood> So many m's in here.
[16:49:22] <mawk> I had java classes [itchyjunk] 
[16:49:25] <mawk> or was supposed to have
[16:49:48] <vdamewood> mawk: did you manage to get out of them/.
[16:49:51] <vdamewood> ?
[16:49:58] <mrig> vdamewood: oh the letters proposed would make a great spinning cursor!
[16:50:26] <mrig> heh, I might have use them for that :)
[16:50:31] <mawk> yes vdamewood , I think I skipped most of them
[16:51:02] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:71bb:57a2:add3:535a) (Ping timeout: 240 seconds)
[16:51:56] *** Joins: Tazy (~Tazmainia@192-143-45-201.ip.airmobile.co.za)
[16:51:58] *** Joins: Payam (~Payam@138.106.57.132)
[16:51:58] *** Quits: Iarfen (~quassel@181.43.57.66) (Ping timeout: 268 seconds)
[16:52:12] *** Joins: Iarfen (~quassel@ec2-3-225-168-229.compute-1.amazonaws.com)
[16:52:22] <[itchyjunk]> mawk, is length for array and size() for list and they both return number of elements?
[16:52:45] <mawk> I'm not sure about that for the array
[16:52:51] <mawk> if it's anything like C, it would return the size of the array
[16:52:55] <mawk> but maybe in java it's different
[16:53:00] *** Joins: rtypo (~alex@user/rtypo)
[16:53:02] <[itchyjunk]> what does size mean?
[16:53:06] *** Joins: freakazoid333 (~matt@2603-9000-cf0f-80e3-d0e8-a6d8-32bb-b8dd.inf6.spectrum.com)
[16:53:07] <mawk> size of the array is size of one element * number of elements
[16:53:17] <[itchyjunk]> array.length returns number of elements of array
[16:53:27] <[itchyjunk]> oh, weird
[16:53:32] <mawk> in C I mean
[16:53:42] <mawk> well it's not that weird, the size of an array is its memory size
[16:53:53] *** Quits: kmh (~kmh@2a00:6020:5004:6800:1518:689e:f31f:c3c5) (Quit: Leaving)
[16:53:55] *** Quits: freakazoid333 (~matt@2603-9000-cf0f-80e3-d0e8-a6d8-32bb-b8dd.inf6.spectrum.com) (Read error: Connection reset by peer)
[16:53:56] <mawk> if you want to copy the array you don't care about how many elements, you care about how many bytes to copy
[16:54:18] <[itchyjunk]> well size() gets number of elements from the list
[16:54:24] <beaky> what is the fastest way to copy an array in x76 assembly
[16:54:27] <[itchyjunk]> size in memory is irrelevent for the most part in java
[16:54:46] *** Joins: freakazoid333 (~matt@2603-9000-cf0f-80e3-d0e8-a6d8-32bb-b8dd.inf6.spectrum.com)
[16:55:08] <mrig> vdamewood: are you eating m'n'm's?
[16:55:51] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[16:56:19] <vdamewood> mrig: No, chatting with people.
[16:56:21] *** Joins: teut (~teut@2401:4900:1c30:1de4:919b:82a3:cf8:ac12)
[16:58:38] *** Joins: chomwitt (~chomwitt@ppp-94-67-201-96.home.otenet.gr)
[16:59:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[17:01:33] <mrig> oh! m's as in the fist letter of the nick :)
[17:02:19] *** Joins: kmh (~kmh@2a00:6020:5004:6800:6500:bc30:b0fd:c100)
[17:02:45] *** Joins: kekwhat (~kekwhat@fixed-187-189-50-36.totalplay.net)
[17:03:40] *** Quits: chomwitt (~chomwitt@ppp-94-67-201-96.home.otenet.gr) (Ping timeout: 268 seconds)
[17:03:44] <kekwhat> I have a number with straighttalk that I need to use. I'm in mexico right now. I need to figure out where to transfer the number/
[17:03:54] <kekwhat> google voice take it
[17:04:22] <kekwhat> *doesn't
[17:04:38] <[itchyjunk]> google fi will take it.
[17:04:55] <[itchyjunk]> US phone companies have to take number transfers.
[17:05:07] <[itchyjunk]> google voice isn't a phone plan. fi is.
[17:05:30] <ejjfunky> mexico, hola!
[17:05:45] <[itchyjunk]> Oh, man. Writing code by hand sucks.
[17:05:56] <[itchyjunk]> No way to add new variables above the code you've already written.
[17:06:06] *** Joins: NEYi (~NEYi@109.251.216.38)
[17:07:38] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[17:09:13] *** Quits: kekwhat (~kekwhat@fixed-187-189-50-36.totalplay.net) (Ping timeout: 268 seconds)
[17:09:25] *** Joins: Macuser (~Macuser@2600:1003:b448:7e82:d858:f8c5:d5c4:9fe2)
[17:12:57] *** Joins: premultiplied (~premultip@69.84.6.130)
[17:16:12] <pyzozord> where is the word "discrete" coming from
[17:17:17] <pyzozord> I always thought it was discreet
[17:18:31] <pulse> disrectus (latin) meaning separate
[17:19:08] <pulse> if you type "define X" into google you get a nice overview of the word and etymological graph
[17:19:49] <pyzozord> something about separate and sieve
[17:19:56] <pyzozord> both of these words
[17:20:03] <pyzozord> I mean both discrete and discreet
[17:20:50] <pyzozord> nice, I always use https://en.wiktionary.org/wiki
[17:20:50] <bayaz> Title: Wiktionary, the free dictionary 
[17:20:54] <pulse> Not according to google
[17:21:32] *** Quits: hexingb (~hexingb@103.37.140.25) (Ping timeout: 256 seconds)
[17:21:37] <pulse> Discreet has a considerably bigger origin graph
[17:21:53] *** Joins: hexingb (~hexingb@101.236.65.145)
[17:21:56] *** Joins: hoochmonger (~hoochmong@user/hoochmonger)
[17:22:11] <pulse> Actually apparently they do have a common root, interesting
[17:22:21] <pulse> discretus
[17:22:48] <pulse> I wonder how they come up with these etymological graphs and how accurate they actually are
[17:22:58] *** Quits: Payam (~Payam@138.106.57.132) (Quit: Client closed)
[17:23:01] <pyzozord> yeah which is a Perfect passive participle of discernÅ which is "dis- (âasunder, in pieces, apart, in twoâ) +â cernÅ (âsee, discernâ)"
[17:23:21] *** Joins: mimmy (~mimmy@72.142.88.18)
[17:23:44] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Read error: Connection reset by peer)
[17:24:19] <pyzozord> cerno comes from proto indi european krey "to sieve"
[17:24:41] <pyzozord> so both these words discreet and discrete come from "separate into pieces"
[17:25:03] <pyzozord> so I don't feel that bad about confusing them
[17:26:30] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[17:27:09] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[17:27:17] <pulse> Makes sense
[17:27:27] <pulse> As binary is literally sieving values into 2 distinct values
[17:27:34] <pulse> So `discrete` values
[17:27:41] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[17:29:49] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[17:31:05] <[itchyjunk]> uh dunno about that
[17:31:22] *** Quits: cykid128 (~cykid128@36-227-49-65.dynamic-ip.hinet.net) (Remote host closed the connection)
[17:31:41] *** Joins: Enitin (~Enitin@82.102.22.86)
[17:31:48] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:33:15] *** Joins: Colt (~Colt@user/colt)
[17:33:18] <pulse> Photo of a cactus => discrete sieve => a bunch of 1s and 0s :D
[17:33:27] *** Quits: hololeap (~hololeap@user/hololeap) (Excess Flood)
[17:34:48] *** Joins: hololeap (~hololeap@user/hololeap)
[17:35:42] *** Quits: neverfindme (~hayden@158.123.160.43) (Remote host closed the connection)
[17:35:56] *** Joins: jjido (~Denis@90.213.58.125)
[17:36:06] *** Joins: neverfindme (~hayden@158.123.160.43)
[17:36:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[17:36:32] *** Quits: szutt (~szutt@116.37.2.145) (Quit: Ping timeout (120 seconds))
[17:36:37] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[17:36:38] *** Joins: ejjfunky2 (~ejjfunky@125.163.60.19)
[17:36:46] *** Joins: szutt (~szutt@116.37.2.145)
[17:37:10] *** Joins: Enitin (~Enitin@82.102.22.85)
[17:37:21] *** Joins: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[17:41:40] *** Joins: Trieste_ (T@user/pilgrim)
[17:41:55] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 268 seconds)
[17:43:11] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[17:43:49] *** Quits: neverfindme (~hayden@158.123.160.43) (Ping timeout: 240 seconds)
[17:44:49] *** Joins: Twipply (~Twipply@user/twipply)
[17:45:09] *** Trieste_ is now known as Trieste
[17:48:08] *** Joins: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795)
[17:48:27] *** Joins: shailangsa (~shailangs@host86-186-127-128.range86-186.btcentralplus.com)
[17:49:53] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:50:55] *** Quits: hexingb (~hexingb@101.236.65.145) (Ping timeout: 250 seconds)
[17:51:36] *** Joins: hexingb (~hexingb@2409:8900:2950:b744:503b:bb68:b458:6d29)
[17:54:50] *** Quits: Kuleshov (~Kuleshov@109.252.99.88) (Quit: Leaving)
[17:55:13] *** Quits: gerwand (~gerwand@185.219.140.18) (Quit: gerwand)
[17:57:24] *** Joins: neverfindme (~hayden@158.123.160.43)
[17:58:22] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 256 seconds)
[18:00:22] *** Joins: rapier (~rapier@user/rapier)
[18:03:02] *** Quits: murii (~murii@2a02:a58:835a:1100:416e:d699:80b5:235d) (Remote host closed the connection)
[18:03:04] <dTal> so I need to write a real time raytracer type thing that's very heavy on querying data, and pretty light on calculating it
[18:04:08] <dTal> and my initial impulse was to write something in Julia using its CUDA support, and just blast 2d images at the screen
[18:04:37] <dTal> but now I'm thinking that a lot of what I'd have to write is already covered by OpenGL, and perhaps I could do the whole thing as a shader?
[18:04:54] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[18:07:48] *** Quits: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net) (Remote host closed the connection)
[18:08:37] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 240 seconds)
[18:09:00] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[18:09:58] *** Joins: mimmy (~mimmy@72.142.88.18)
[18:10:27] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[18:11:25] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[18:12:56] *** Joins: Enitin (~Enitin@82.102.22.85)
[18:13:39] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:15:25] *** Quits: nabaiste^ (~nabaiste@wsip-98-188-240-142.mc.at.cox.net) (Remote host closed the connection)
[18:15:42] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ¦)
[18:16:26] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 268 seconds)
[18:17:20] *** Joins: inlight (~inlight@157.35.17.204)
[18:17:21] *** Quits: inlight (~inlight@157.35.17.204) (Changing host)
[18:17:21] *** Joins: inlight (~inlight@user/inlight)
[18:17:59] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[18:21:15] *** Quits: InternetCitizen (~fuzzypixe@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Ping timeout: 250 seconds)
[18:23:19] *** Joins: murii (~murii@2a02:a58:835a:1100:416e:d699:80b5:235d)
[18:23:24] *** Quits: jasper1378 (~jasper137@bras-base-toroon0628w-grc-47-142-112-142-77.dsl.bell.ca) (Remote host closed the connection)
[18:26:47] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[18:26:58] <pyzozord> hmm I'm thinking maybe I should write my new editor in python
[18:27:06] <pyzozord> or lisp
[18:27:48] <pyzozord> I think I'll start reading SICP and getting serious about that. I've been talking about it for a long time, and not doing much
[18:28:20] *** Joins: jamea (~jamea@177.239.81.39)
[18:29:51] *** Joins: mimmy_ (~mimmy@37.19.212.189)
[18:31:16] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[18:31:25] *** Quits: operateur (~operateur@91.143.220.230) (Ping timeout: 240 seconds)
[18:32:05] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 250 seconds)
[18:32:05] *** Quits: Macuser (~Macuser@2600:1003:b448:7e82:d858:f8c5:d5c4:9fe2) (Ping timeout: 250 seconds)
[18:33:00] *** Joins: operateur (~operateur@91.143.220.230)
[18:33:19] *** Joins: jasper1378 (~jasper137@bras-base-toroon0628w-grc-47-142-112-142-77.dsl.bell.ca)
[18:33:38] *** Joins: Nex6 (~Nex6@cpe-45-51-244-112.socal.res.rr.com)
[18:34:04] *** Quits: premultiplied (~premultip@69.84.6.130) (Quit: WeeChat 3.3)
[18:35:12] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 256 seconds)
[18:36:44] <user51> sicp is one of my most hated books
[18:36:57] <user51> whatever it was talking about, i just couldn't understand it..
[18:37:28] <user51> granted afaik it was written for mit students, and i'm not an mit student, so i shouldn't complain
[18:38:35] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[18:38:41] *** Quits: neverfindme (~hayden@158.123.160.43) (Quit: Leaving)
[18:39:04] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[18:40:05] *** Quits: Nex6 (~Nex6@cpe-45-51-244-112.socal.res.rr.com) (Ping timeout: 252 seconds)
[18:41:19] *** Joins: kekwhat (~kekwhat@fixed-187-189-50-36.totalplay.net)
[18:42:00] <kekwhat> google fi can't be activated in mexico. Does anyone know of a similar service to it that can be activated in mexico?
[18:42:10] <kekwhat> wait
[18:42:15] <kekwhat> vpn?
[18:42:16] <kekwhat> I dunno
[18:42:37] <pulse> I've never heard of Google fi before
[18:43:09] <kekwhat> I'm in mexico right now I need to figure out were to transfer my phone number
[18:43:14] *** Joins: emf (~emf@cpe-174-109-36-85.nc.res.rr.com)
[18:43:22] <kekwhat> phone service doesn't work
[18:46:35] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[18:47:04] <user51> i wrote two practically identical loops in the same function, and it feels more nostalgic than frustrating.
[18:49:38] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[18:49:54] *** Joins: jamea (~jamea@189.237.79.237)
[18:49:57] *** Joins: Klinda (~superleag@user/klinda)
[18:49:59] *** Quits: emf (~emf@cpe-174-109-36-85.nc.res.rr.com) (Quit: emf)
[18:50:45] *** Joins: emf (~emf@cpe-174-109-36-85.nc.res.rr.com)
[18:51:16] *** Joins: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net)
[18:51:51] <deniska> it's probably easier to read than whatever a single combined loop would look
[18:54:31] <nomagno> Just successfully threw away the dependencies on TOML and JSON of my protocol
[18:54:39] <pyzozord> when you do a lot of modern web frontend you forget how loops work
[18:55:00] <pyzozord> you just keep doing map, reduce, filter and others. Using loops is considered an antipattern
[18:55:17] *** Joins: mattallmill_ (~mattallmi@ip68-103-132-187.ks.ok.cox.net)
[18:55:43] <deniska> heh, I write loops even when doing js
[18:56:06] <deniska> loops & if-statements â¥
[18:56:18] <deniska> that's what programming is all about
[18:56:32] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:56:46] <pyzozord> right, I was so tired of what js forced me to do, that I learned C
[18:56:51] <nomagno> I was right yesterday, I can indeed do just fine without any major issues if I just use tab (ASCII 9, 0x09) to mark childs, newline (ASCII 10, 0x0A) to separate different data elements, underscore (ASCII 95, 0x5F) to mark the start of sections/tables, and a simple space (ASCII 32, 0x20) to separate keys from their values
[18:57:01] *** Quits: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net) (Ping timeout: 240 seconds)
[18:57:06] <pyzozord> and when I was writing C I felt like "this is real programming!"
[18:57:26] <user51> deniska: tempted to refactor it, but who knows
[18:57:49] <user51> it's just a mess right now, but i'm pretty proud of it.
[18:57:53] <deniska> pyzozord: js doesn't force you to do the map-reduce-filter dance though
[18:58:37] <deniska> in fact js gets its crappy loop syntax almost directly from C :D
[18:58:54] *** Joins: emf_ (~emf@2620:10d:c091:480::1:cbc8)
[18:58:56] <user51> for context: it walks through a list of grammar rules, and selects the appropriate one, then walkss through that one, then does a reduce
[18:58:57] <deniska> and then you have for-in and for-of which I often confuseâ¦
[18:59:09] *** Quits: emf (~emf@cpe-174-109-36-85.nc.res.rr.com) (Ping timeout: 252 seconds)
[18:59:11] *** Joins: jamea77 (~jamea@189.237.79.237)
[18:59:17] <user51> currently it's a 'shift-reduce' parser without an 'f'
[18:59:45] *** Joins: password (~password8@user/password2)
[19:00:37] <pyzozord> deniska: it doesn't, but the "best practices" (very big air quotes) do
[19:01:00] <user51> pyzozord: what's the "worst practices"?
[19:01:19] <pyzozord> ones you don't like but must follow :D
[19:01:44] *** Quits: jamea (~jamea@189.237.79.237) (Ping timeout: 265 seconds)
[19:02:31] <deniska> pyzozord: solo project or in a team?
[19:02:47] <nomagno> Tempted to try out replicating map in C with function pointers
[19:02:52] <pyzozord> team of course, for solo projects I throw all "best practices" out the window
[19:02:53] <deniska> for solo stuff nobody can complain about best practices :)
[19:02:57] <user51> huh, if i rewrite this in C i'll call it 'crammar'
[19:03:01] <user51> nomagno: good man
[19:03:55] <user51> you can even go a step further and use an array of function pointers. but then you get stuff like pointer ot array of function pointers and..
[19:04:02] <deniska> I'm not too attached to code I write on teams to be invested in a particular code style
[19:04:23] <user51> wonder if computed goto could also work
[19:04:26] <deniska> I try to force through some architectural level decisions which I see fit
[19:04:44] <pyzozord> ok cool, finally can take a look at today's aoc
[19:04:44] <deniska> but "whether to use map or for loop inside a function" is not one of these decision
[19:04:50] <deniska> decisions
[19:06:19] <deniska> I guess I fully embraced my role of 9-to-5 coder :D
[19:06:58] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi)
[19:07:13] *** Quits: BorgoMatic (~KC0LR@2605:a601:ad80:7400:d541:3e18:55d7:887d) (Ping timeout: 252 seconds)
[19:07:15] <user51> i think i have enough experience to make overflow jokes now, but i don't know if they're funny..
[19:07:33] *** Quits: inomoz (~inomoz@85.26.235.86) (Quit: WeeChat 3.3)
[19:07:38] <user51> guess you're decrementing though :)
[19:08:09] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzzâ¦)
[19:08:26] *** Joins: lilgopher (~textual@2601:241:8000:38f0:69e0:b444:d9a6:9610)
[19:08:34] <deniska> Also I guess in python world we don't really have as much of best practices, as we have antipatterns :D
[19:08:58] <deniska> we'd point antipatterns to each other, but anything which is not it is as good of a practice as any
[19:09:06] <user51> what are the antipatterns?
[19:09:52] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[19:09:55] <pyzozord> patterns of things you shouldn't do
[19:10:00] <deniska> user51: some common patterns people, especially coming from other languages, will write which could be expressed better by something else
[19:10:38] *** Quits: lilgopher (~textual@2601:241:8000:38f0:69e0:b444:d9a6:9610) (Client Quit)
[19:10:44] <deniska> user51: for example people coming from C are used to index based iteration, they come to python, and will write code like `for i in range(len(some_collection))`
[19:11:08] *** Joins: MarcoFe (~marcofe@93-36-164-204.ip61.fastwebnet.it)
[19:11:56] <deniska> while more idiomatic code (code majority of python programmers would write) looks like `for item in some_collection` or `for i, item in enumerate(some_collection)` depending on whether or not you actually need an index
[19:11:57] *** Quits: maxzor_ (~maxzor@2a01cb04054faa00053dfc35caa76011.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[19:12:18] <user51> nice, now i can hide my c-ness
[19:12:58] <deniska> people coming from java often write overcomplicated class hierarchies where some good old duck typing could be used
[19:13:10] <deniska> (or even write a class where no class is needed at all)
[19:14:30] *** Quits: mimmy_ (~mimmy@37.19.212.189) (Ping timeout: 260 seconds)
[19:16:56] *** Joins: mimmy_ (~mimmy@37.19.212.190)
[19:19:23] *** Joins: lilgopher (~textual@2601:241:8000:38f0:8069:4c9b:8bfc:2a0e)
[19:21:12] *** Joins: Atque (~Atque@user/atque)
[19:22:42] <nomagno> https://termbin.com/u7ft
[19:22:43] <bayaz> Type: text/plain; charset=utf-8 
[19:22:44] <nomagno> Improvised map :D
[19:23:25] *** Joins: X-Scale` (~ARM@206.46.158.5.rev.vodafone.pt)
[19:23:38] <EdFletcher> map is non-mutating and returns a new array, not sure that qualifies as an equivalent implementation
[19:23:49] <nomagno> No this definitely has some UB going on, segfault when testing on a different compiler
[19:24:27] *** Quits: emf_ (~emf@2620:10d:c091:480::1:cbc8) (Ping timeout: 252 seconds)
[19:25:49] *** Quits: X-Scale (~ARM@83.223.225.184) (Ping timeout: 240 seconds)
[19:25:49] *** X-Scale` is now known as X-Scale
[19:26:02] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[19:26:15] <nomagno> Easy to fix, shrug
[19:28:57] *** Joins: emf (~emf@2620:10d:c091:480::1:cbc8)
[19:29:27] *** Quits: murii (~murii@2a02:a58:835a:1100:416e:d699:80b5:235d) (Remote host closed the connection)
[19:29:48] <berndj> random pet hate: when people call the nul character (mapped to 0 in ascii) "null"
[19:30:37] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[19:31:28] <berndj> deniska, user51, i think an antipattern is something worse than just "something that can be done a better way". it's an actively bad (yet common, hence antipattern) way
[19:32:48] <deniska> berndj: dunno, what I typically call "antipattern" doesn't break a program, just makes it harder to read and modify
[19:33:29] <deniska> for actually harmful things we have better terms like "mistakes" or "bugs" :)
[19:33:38] <berndj> deniska, i think those are more properly termed "code smells"
[19:34:05] <dodo> you can write working code that's hard to interact with, or very easy to break, hard to debug, etc
[19:34:35] <berndj> an "antipattern" is something like God Object, or having a "Manager" class for everything
[19:35:11] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) ()
[19:36:55] <deniska> berndj: I guess the difference between code smells and antipatterns is that patterns are ones you see again and again
[19:37:09] <deniska> and yeah, a pattern probably affects more than a single line of code
[19:37:35] <deniska> (and oh gosh I want to get rid of our managers)
[19:37:37] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[19:37:43] <berndj> i tend to think of "patterns" in software engineering as something much higher-level than the for's and if's and braces tactics of coding
[19:37:44] <deniska> (not human managers, manager objects)
[19:37:58] *** Joins: ixil (~ixil@2a02:120b:2c11:1d70:a38f:d77f:3f7e:92d2)
[19:38:06] <deniska> Which we call services
[19:38:21] <berndj> at my first real job the code was full of ConnectionManager and CacheManager and PaymentManager etc.
[19:38:27] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 268 seconds)
[19:38:29] <deniska> naturally we also have an entity called "service", so we have ServiceService for dealing with it
[19:38:45] <berndj> mildly surprised we didn't have a ManagerManager
[19:38:51] <vdamewood> ServiceManager and ManagerService?
[19:38:59] <deniska> no, ServiceService
[19:39:29] <berndj> PID 1 is the original serviceservice
[19:39:34] <vdamewood> Makes me want to name my new programming language 'programming'.
[19:39:52] <deniska> also so tired of `def foo(): return another_module.get_service().real_foo()`
[19:39:54] <vdamewood> The book will be called The Programming Programming Language.
[19:40:24] <deniska> (except it's not another_module.get_service(), the whole thing happens inside a class, so it's `return self.service.real_foo()`)
[19:40:37] <deniska> which `service` you may ask? Haha, find where the dependency is injected :D
[19:41:00] <vdamewood> deniska: I've written C code like that.
[19:41:32] <vdamewood> FooDoSomething(* Foo this, ...) { return this->doSomething(this, ...); }
[19:41:50] *** Joins: murii (~murii@2a02:a58:835a:1100:416e:d699:80b5:235d)
[19:41:56] *** Joins: terminalpusher (~terminalp@2a01:586:9b10:1:fdf9:d5e5:78b7:60e0)
[19:42:00] *** Quits: ixil (~ixil@2a02:120b:2c11:1d70:a38f:d77f:3f7e:92d2) (Remote host closed the connection)
[19:42:11] <deniska> My measure for how bad the code is is how many times I have to jump between functions/modules/classes to learn what it actually does
[19:42:11] <vdamewood> s/* Foo/Foo */
[19:42:19] <user51> fptab[x->type](x); // :P
[19:42:24] *** Joins: ixil (~ixil@2a02:120b:2c11:1d70:a38f:d77f:3f7e:92d2)
[19:42:26] *** Joins: Payam (~Payam@138.106.57.132)
[19:42:48] <vdamewood> deniska: What if you run into one of those"Where the hell is the dependency injected?" scenarios?
[19:43:18] <deniska> vdamewood: I insert print() calls
[19:43:20] <terminalpusher> this may sound dumb but the UEFI and BIOS come before the OS in the boot process right? So how does the power button know whether it should power on the BIOS or UEFI that then boots the system?
[19:43:29] <user51> oh no, it was worse than that
[19:43:37] <vdamewood> deniska: I guess that's as reasonable a solution as one could hope for.
[19:43:39] <user51> x = (*fcall[x->type])(x);
[19:43:54] <vdamewood> terminalpusher: It alwats loads UEFI.
[19:43:58] <vdamewood> always
[19:44:28] <terminalpusher> ahh, so all CPUs that support UEFI start with UEFI and if that doesn't work it falls back to BIOS right?
[19:44:48] <vdamewood> Actually, the UEFI sumulates a BIOS.
[19:44:53] <vdamewood> simulates
[19:45:03] *** Joins: d0mi7usl0l (uid512140@id-512140.tinside.irccloud.com)
[19:45:14] <EdFletcher> nomagno: https://ideone.com/BXM94P
[19:45:17] <bayaz> Title: Ideone.com 
[19:45:31] <vdamewood> So the CPU runs code in firmware. That firmware is either a classic BIOS or UEFI. Most UEFI implementations also know how to load OS'es like a BIOS.
[19:45:48] <terminalpusher> ahhh I see now. So on all newer CPUs the UEFI does entirely replace the BIOS but if the software that boots acts as if it's a BIOS, the UEFI will just emulate the BIOS for backwards-compatibility
[19:46:11] <vdamewood> Yep. But this is all on the motherboard, not the CPU.
[19:46:22] *** Quits: nulleip (~luiz@user/nulleip) (Remote host closed the connection)
[19:46:49] *** Quits: rapier (~rapier@user/rapier) (Ping timeout: 252 seconds)
[19:46:52] <terminalpusher> ah, so there is a specific UEFI chip with the software that boots in an EEPROM right?
[19:47:28] <vdamewood> UEFI *is* the software that boots from the EEPROM.
[19:47:47] <terminalpusher> ahh ok. got it. that was very helpful
[19:48:04] *** Joins: _inky (~inky_@37.252.81.177)
[19:48:08] *** Joins: nulleip (~luiz@user/nulleip)
[19:49:09] <vdamewood> For that matter, so is BIOS.
[19:49:52] <vdamewood> or rather so was BIOS.
[19:50:00] *** Joins: anthk_ (~anthk@92.176.105.30)
[19:50:32] *** Joins: inlight (~inlight@157.35.17.204)
[19:50:32] *** Quits: inlight (~inlight@157.35.17.204) (Changing host)
[19:50:32] *** Joins: inlight (~inlight@user/inlight)
[19:51:23] <vdamewood> Now I'm wondering how the x86 starts up before it loads the OS.
[19:51:41] <GeDaMo> Boot vector
[19:51:49] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[19:51:51] <vdamewood> GeDaMo: Any idea where it is?
[19:51:58] <vdamewood> (numerically, I mean)
[19:52:15] *** Joins: Enitin (~Enitin@82.102.22.85)
[19:52:17] <GeDaMo> Top of memory, I think
[19:52:56] <vdamewood> 0xFF..FF or thereabouts?
[19:53:07] <GeDaMo> Yeah
[19:53:16] *** Joins: Garb0 (~Garb0@user/garb0)
[19:53:25] <vdamewood> That actually makes sense.
[19:54:22] *** Joins: Nex6 (~Nex6@cpe-45-51-244-112.socal.res.rr.com)
[19:54:31] <vdamewood> That seems to be a popular location. the 6502 does it at 0xFFFC
[19:54:50] <vdamewood> But I have a sample size of two CPUs.
[19:55:02] <GeDaMo> At reset, CS = 0xFFFF, IP = 0x0000
[19:55:13] <GeDaMo> So 0xFFFF0
[19:55:15] *** Quits: mimmy_ (~mimmy@37.19.212.190) (Ping timeout: 252 seconds)
[19:55:19] <GeDaMo> https://archive.org/details/bitsavers_intel80869yLanguageReferenceGuideOct78_5061675/page/n1/mode/2up
[19:55:48] <vdamewood> I forget, is segment FFFF in the forbidden zone?
[19:55:49] <GeDaMo> That's the 8086, it might be slightly more complex in later versions
[19:56:46] <GeDaMo> You mean the memory the PC assigned for I/O?
[19:57:16] <berndj> interestingly the earlyish versions calculated 0xffff0 differently. one set got it from FFFF:0000 and the other did F000:FFF0
[19:57:30] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Read error: Connection reset by peer)
[19:57:44] <vdamewood> GeDaMo: Yeah, I think so.
[19:58:31] <GeDaMo> Well, it's above 640K but Intel reserved the top memory page
[19:58:51] <berndj> maybe i'm misremembering that, it's been a long time since i cared about subtle differences between generations
[19:58:53] *** Quits: APic (~apic@apic.name) (Quit: [TLS] Client upgrade)
[19:59:03] *** Joins: APic (apic@apic.name)
[19:59:23] <GeDaMo> berndj: that sounds vaguely familiar but my memory is unreliable :P
[19:59:39] <berndj> vdamewood, addresses E0000-FFFFF were reserved for motherboard ROMs IIRC
[19:59:55] <berndj> certainly F0000-FFFFF
[20:00:13] *** Quits: operateur (~operateur@91.143.220.230) (Ping timeout: 240 seconds)
[20:00:19] <vdamewood> berndj GeDaMo: I think you're thinking of 0x7C0:0x0000 vs 0x0000:0x7C00 for the boot sector.
[20:00:53] <berndj> vdamewood, i may be confused, but that particular thing is not the confusion vector
[20:00:59] <KillerWasp> Depending on the scripts used on social media, it breaks almost all browsers causing browsers to die.
[20:01:02] <GeDaMo> That's where the boot sector is loaded to
[20:01:10] <berndj> what i may be confusing this with is A20 masking on 80286+
[20:01:21] <KillerWasp> only work with firefox.
[20:01:32] <berndj> and also the reason for the far jmp that's typically the first instruction at FFFF0
[20:01:58] <berndj> because that would set CS to a known value rather than doing a near jmp that keeps it
[20:02:00] <KillerWasp> Now I give permission to blow the imagination about conspiracies, the monopoly of google and others.
[20:02:16] <vdamewood> far jumps set both CS and IP, .righ.... right!
[20:02:33] <berndj> yes, far jmps set them both to absolute values, not relative
[20:02:38] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 265 seconds)
[20:02:39] *** Quits: freakazoid333 (~matt@2603-9000-cf0f-80e3-d0e8-a6d8-32bb-b8dd.inf6.spectrum.com) (Ping timeout: 250 seconds)
[20:02:43] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:1c15:d29a:c9f3:b210)
[20:02:56] *** Joins: inlight (~inlight@157.35.17.204)
[20:02:56] *** Quits: inlight (~inlight@157.35.17.204) (Changing host)
[20:02:56] *** Joins: inlight (~inlight@user/inlight)
[20:04:19] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:06:31] <berndj> https://stackoverflow.com/questions/33689470/reset-procedure-of-8086 Ctrl-F Michael Petch; confirms my memory of the FFFF:0000 / F000:FFF0 difference between generations
[20:06:32] <bayaz> Title: RESET procedure of 8086 
[20:09:25] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:1c15:d29a:c9f3:b210) (Remote host closed the connection)
[20:09:32] <vdamewood> berndj: Cool.
[20:09:36] *** Joins: mimmy_ (~mimmy@37.19.212.189)
[20:09:53] <vdamewood> berndj: So neither Intel, nor the clone makers were consistent.
[20:10:14] *** Quits: mimmy_ (~mimmy@37.19.212.189) (Client Quit)
[20:10:36] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:1c15:d29a:c9f3:b210)
[20:10:49] *** Joins: Lenkov45 (~Lenkov45@45.133.193.5)
[20:11:07] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[20:11:48] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[20:11:54] <[itchyjunk]> awe man
[20:12:00] <[itchyjunk]> I should have bought coffee somewhere
[20:12:12] <[itchyjunk]> since I never make purchase on campus, don't really know where to go
[20:12:25] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:1c15:d29a:c9f3:b210) (Read error: Connection reset by peer)
[20:12:26] * [itchyjunk] has finals today
[20:13:35] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:1c15:d29a:c9f3:b210)
[20:13:55] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[20:14:19] *** Quits: Garb0 (~Garb0@user/garb0) (Ping timeout: 252 seconds)
[20:14:42] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[20:15:19] <berndj> here's a claim that even the 80286 sets the CS base to 0xFF0000 on reset (with selector F000): https://electronics.stackexchange.com/a/509064
[20:15:19] <bayaz> Title: Reason for x86 reset vector being at 0xFFFFFFF0 instead of 0xFFFFFFFF 
[20:17:23] *** Quits: Lenkov45 (~Lenkov45@45.133.193.5) (Ping timeout: 250 seconds)
[20:17:34] *** Quits: absc (~absc@81.31.144.28) (Quit: Leaving)
[20:17:49] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:1c15:d29a:c9f3:b210) (Ping timeout: 250 seconds)
[20:18:46] <berndj> my 80286 book (Vieillefond) confirms that the CS base is FF0000 on reset
[20:18:54] *** Quits: Burkuf (~AnCELASTR@216.243.47.158) ()
[20:19:03] <KillerWasp> https://0x0.st/-FYr.png
[20:19:03] <bayaz> Type: image/png Size: 27.1 kB 
[20:20:44] <vdamewood> KillerWasp: Enjoying frontend webdev?
[20:21:21] *** Joins: TastyWiener95 (~uhhh3@user/tastywiener95)
[20:22:18] <KillerWasp> vdamewood: no, problem for open a browser, Half of it segfault at startup, and the other half cannot run the webs properly, it breaks with the JS, and sometimes the browser hangs and dies.
[20:22:40] <KillerWasp> So far I could not find a browser that stays alive.
[20:23:39] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[20:23:54] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[20:24:58] *** Quits: Thedarkb1 (~Thedarkb@2001:bb6:b403:e042:eefd:c6c7:bba0:4cad) (Ping timeout: 260 seconds)
[20:25:54] *** Joins: kek_ (~kek_@net-2001-067c-10ec-574f-8000-0000-0000-0205.v6.ethz.ch)
[20:25:57] <kek_> hi
[20:26:03] *** Quits: _inky (~inky_@37.252.81.177) (Ping timeout: 252 seconds)
[20:26:19] <[itchyjunk]> hi
[20:26:56] <vdamewood> High
[20:27:06] <pulse> Oi
[20:27:16] <vdamewood> Dobr dan.
[20:29:41] <kek_> what exactly happens if I make a ton of non blocking send calls with MPI? Will they all live in memory until someone received them or is only the call itself being registered?
[20:30:56] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:32:00] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Client closed)
[20:33:03] *** gitesh is now known as Orbbit
[20:33:11] <pulse> vdamewood, Dober* :D
[20:33:31] <vdamewood> pulse: My friend told me that Dobr is a common coloquial form.
[20:33:33] <pulse> But we say "dobr". Nobody says "dober", unless they want to speak high Slovene on the TV
[20:33:45] <pulse> vdamewood, Yeah it's not only common it's pretty much mandatory unless you want to appear like a weird person
[20:34:04] <vdamewood> What if I want to make it clear that I'm a foreigner?
[20:34:10] *** Joins: kveroneau (kveroneau@node1.veroneau.net)
[20:34:14] <pulse> "Proper" pronunciation used in our movies, which is why they are all so unnatural
[20:34:28] <KillerWasp> berndj: why you're use 16 bits of asm?
[20:34:32] <pulse> vdamewood, No worries, every single Slovene can detect even the tiniest irregularity in the language
[20:34:54] <vdamewood> pulse: I'll practice not pronouncing the schwa in dobr then.
[20:35:10] <pulse> Ugh, that sounds weird :D
[20:35:46] <vdamewood> Slovenian go dobrrr
[20:36:00] <pulse> vdamewood, It's like how we always write "Å¡el" but we will _always_ pronounce it "Å¡u"
[20:36:08] <pulse> Weirdly enough only for masculine form
[20:36:21] <pulse> "Å¡lo/Å¡la" are pronounced properly
[20:36:46] <pulse> But nobody, even the most stuck-up Slovene speakers, will never say "Å¡el"
[20:37:00] <pulse> For example "Å¡el sem po kavo" (I went to get coffee)
[20:37:03] *** Quits: anthk_ (~anthk@92.176.105.30) (Quit: Leaving)
[20:37:25] <pulse> It's always "Å¡u" or if you want to make it more high-form you say "Å¡ou"
[20:37:36] <pulse> Or even "Å¡eu"
[20:38:01] <pulse> But you never say "Å¡el", even though the rules dictate you should. Slovene is full of these kinds of weirdness
[20:38:02] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[20:38:27] <vdamewood> Lots of languages do that.
[20:38:31] <pulse> Yeah I figure
[20:38:41] *** Joins: node1 (~hex@user/node1)
[20:38:53] <vdamewood> The fact that English has 10,000 such cases is why our spelling sucks.
[20:39:04] <pulse> Yeah English is particularly weird with pronounced vs written
[20:39:15] <pulse> Slovene isn't in most cases, but there's a language we all speak and the language we all write
[20:39:20] <pulse> And they're considerably different
[20:39:27] <vdamewood> Yeah, our spelling reflects the pronunciation of 1400's or so English.
[20:39:43] <pulse> Like I said, you can spot a slovenian movie from far away because it sounds so unnatural. The actors speak a form of high slovene that literally nobody in the country ever speaks
[20:39:50] <pulse> Although we've gotten better at it lately
[20:40:10] <vdamewood> Not even politicians giving speeches?
[20:40:13] <pulse> Nope
[20:40:17] <pulse> Not even language teachers
[20:40:23] <pulse> It's a sort of unwritten convention
[20:40:42] <pulse> I mean there are people who do their best to speak "proper" high Slovene but it sounds unnatural to everyone else
[20:40:50] <vdamewood> Well, of course it is, It's a spoken convention. ;P
[20:41:04] <pulse> I know one such person, he's an elderly gentleman but even he will sometimes slip
[20:41:13] <pulse> hah
[20:42:21] <pulse> Not even the highest of the high language stuck-ups would ever say "Å¡el sem po kavo" with a "proper" L sound
[20:42:36] <pulse> If you wanna be extra polite you say "Å¡eu"
[20:42:42] <pulse> A little less polite is "Å¡ou"
[20:42:52] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:42:56] <pulse> And lowest mud tier is "Å¡u"
[20:43:14] <pulse> Like if you're angry at someone you would yell at them with "Å¡u" probably, because it's the roughest version
[20:43:15] <vdamewood> One of the hardest thing for me to learn at first was the fact that nearly all vowels in English are diphthings.
[20:43:23] <pulse> Our language is so weird even aliens wouldn't understand what's going on
[20:43:27] <vdamewood> For example, I pronounce o as /ou/
[20:43:30] <kek_> https://bpa.st/QVNA would you say that is a proper way of doing master/slave in MPI? Basically what I do is: Each slave sends it's rank to the master (rank 0). The master then sends work to the slave. That repeats until there is no more work. Currently it's all blocking communication, gonna think about unblocking once I'm  more or less sure the way I do it isn't complete bs.
[20:43:31] <bayaz> Title: View paste QVNA 
[20:43:46] <pulse> vdamewood, Spelling in English has always confused me
[20:43:54] <Trashlord> one calf on the farm I work at broke her leg today
[20:43:55] <vdamewood> So, Now I'm trying to figure out the difference between so and sou.
[20:44:00] *** Parts: skepta (~eric@36.77.236.126) ()
[20:44:24] <vdamewood> Trashlord: Well, that sucks.
[20:44:31] <Trashlord> yes, horrible
[20:44:32] *** Joins: Tazmainian (~Tazmainia@192-143-45-201.ip.airmobile.co.za)
[20:44:40] <Trashlord> hope she'll be fine. Got patched up
[20:44:47] <Trashlord> moved to her own pen
[20:44:48] <pulse> :(
[20:45:05] *** Quits: ejjfunky2 (~ejjfunky@125.163.60.19) (Quit: Leaving)
[20:45:09] <vdamewood> Trashlord: What's the nature of the farm?
[20:45:14] <kek_> Trashlord, don't you just shoot it?
[20:45:29] *** Quits: Tazy (~Tazmainia@192-143-45-201.ip.airmobile.co.za) (Ping timeout: 252 seconds)
[20:46:18] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 276 seconds)
[20:46:19] <Trashlord> vdamewood: it's a robotic dairy farm
[20:46:26] <Trashlord> kek_: no, it's a family farm
[20:46:29] <vdamewood> kek_: Wow, your mastery of tact is underwhelming.
[20:46:34] <Trashlord> heh
[20:46:51] <vdamewood> Trashlord: Your family?
[20:46:51] *** Quits: sio (~sio@185.97.201.26) (Quit: Leaving)
[20:46:56] *** Joins: MaghOz (~maghoz@2001:4bc9:801:f399:540d:f952:207a:4)
[20:46:56] *** Quits: ejjfunky (~ejjfunky@125.163.60.19) (Quit: Leaving)
[20:47:01] <Trashlord> vdamewood: no
[20:47:07] <kek_> vdamewood, yeah, maybe could have formulated it better. I don't even eat them so I'm nice to them. Trashlord I see. 
[20:47:29] <Trashlord> poor girl was running around and slipped
[20:48:15] <vdamewood> Okay, I time for me to make my one joke about the situation.
[20:48:26] <vdamewood> I hope her MOOd improves.
[20:48:35] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 250 seconds)
[20:48:35] <Trashlord> what do cows watch? Moovies
[20:49:05] <pulse> :)
[20:49:16] <deniska> these puns are amoosing
[20:49:18] *** Joins: inlight (~inlight@157.35.17.204)
[20:49:18] *** Quits: inlight (~inlight@157.35.17.204) (Changing host)
[20:49:18] *** Joins: inlight (~inlight@user/inlight)
[20:49:30] <vdamewood> deniska: No bull.
[20:49:53] <Trashlord> gotta go, bye
[20:49:57] <vdamewood> Bye.
[20:52:04] <pyzozord> nice, day 13 done https://ideone.com/zN4wFv
[20:52:07] <bayaz> Title: Ideone.com 
[20:52:16] <pyzozord> got stuck for over 1h on python
[20:52:31] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[20:53:14] *** Quits: simon323 (~simon323@2409:8a34:468:83d0:ad06:9adc:663d:62c0) (Quit: simon323)
[20:53:35] <deniska> pyzozord: heh, mine: https://github.com/deniska/adventofcode/blob/main/advent2021/a13.py
[20:53:36] <bayaz> Title: adventofcode/a13.py at main Â· deniska/adventofcode 
[20:54:18] <deniska> Again didn't measure the time, but was probably 15-20 minutes?
[20:54:40] <pyzozord> wait
[20:54:54] <pyzozord> how did you make the print?
[20:54:54] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[20:54:59] <deniska> excel
[20:55:10] <vdamewood> git clone https://github.com/deniska/adventofcode -- mine: https://github.com/vdamewood/adventofcode
[20:55:11] <bayaz> Title: GitHub - deniska/adventofcode 
[20:55:19] <pyzozord> ah
[20:55:35] <node1> deniska, I think a non-linear data structure can be easily be programmed using python or any other higher level language. Unlike with using C it required  lot of hardwork.
[20:55:41] <pyzozord> clever :D
[20:55:57] <node1> Lot of hardwork and memory management.
[20:56:15] <pyzozord> actually it took me 2h almost to the minute
[20:56:27] <pyzozord> but at least 1h I was stuck on python comprehensions
[20:56:30] <deniska> node1: there're libraries which implement hashmap and such, but C is just annoyingly not-expressive enough for these libraries to be painless to use
[20:56:44] *** Joins: X-Scale` (~ARM@92.250.97.79)
[20:56:53] <deniska> pyzozord: I guess that's the trick, mine doesn't have any :P
[20:57:35] <pyzozord> deniska: you seem good at optimizing the advent of code problems in terms of big-dee time, the developer's time :D
[20:57:58] <node1> Yes i agree, because i have programmed someof non-linear data structure in C and Python and found it's easy to programmed in python then C. Also in terms of time complexity and space complexity it's much for efficient.
[20:58:18] <node1> s/for/more
[20:58:19] *** Quits: the_lanetly_052_ (~the_lanet@194.135.153.162) (Ping timeout: 250 seconds)
[20:58:23] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi)
[20:58:29] *** Quits: X-Scale (~ARM@206.46.158.5.rev.vodafone.pt) (Ping timeout: 256 seconds)
[20:58:29] *** X-Scale` is now known as X-Scale
[20:58:37] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 268 seconds)
[20:59:05] <pyzozord> i did some tiny branchless thing with dot_index
[20:59:10] <node1> That's why Python is always be first choice for data analytics.
[21:00:00] <pyzozord> deniska: I love how similar we think, we both do one loop and just print on first iteration, we both use the "new dots" idea and tuples in set
[21:00:29] <node1> And ofcouse we are surrounded by non-linear data( the natural phenomena )
[21:00:53] <pyzozord> but you took 20 lines and 2 minutes to parse input, I took 2 lines and 2 hours :D
[21:01:54] *** Quits: ixil (~ixil@2a02:120b:2c11:1d70:a38f:d77f:3f7e:92d2) (Remote host closed the connection)
[21:02:18] *** Joins: ixil (~ixil@2a02:120b:2c11:1d70:a38f:d77f:3f7e:92d2)
[21:02:23] <deniska> Python code I write tends to be more vertical than horizontal
[21:02:35] *** Joins: Guest34 (~Guest34@bras-base-mtrlpq2763w-grc-33-70-52-17-42.dsl.bell.ca)
[21:02:43] *** Quits: thevishy (~Nishant@2405:201:f005:c007:81f3:ee3c:76f0:8869) (Ping timeout: 252 seconds)
[21:02:43] *** Joins: yhsiveht (~Nishant@2405:201:f005:c007:d93e:9746:14f0:2f69)
[21:02:51] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[21:03:15] <node1> I see we could write codes in 2 dimensions??
[21:03:21] <pyzozord> yes, that's more maintainable for sure
[21:03:32] *** Quits: MarcoFe (~marcofe@93-36-164-204.ip61.fastwebnet.it) (Quit: Konversation terminated!)
[21:03:40] <pyzozord> I guess I am a bit in the early stages in python so I'm just pushing it to see how for it can go
[21:04:05] *** Quits: yhsiveht (~Nishant@2405:201:f005:c007:d93e:9746:14f0:2f69) (Client Quit)
[21:05:03] *** Joins: BorgoMatic (~KC0LR@2605:a601:ad80:7400:50d5:7e4:4ce0:174)
[21:06:30] *** Joins: hxx (~hxx@c-24-30-27-91.hsd1.ga.comcast.net)
[21:07:50] <kek_> node1, I mean your screen is flat eh
[21:08:00] <node1> Yes it's flat.
[21:08:42] <kek_> Yeah, so don't we all write code in two dimensions :O
[21:09:48] <node1> okay i got it
[21:10:12] <deniska> pyzozord: which languages did you use prior to python?
[21:11:25] <pyzozord> javascript
[21:11:51] <pyzozord> javascript and few years earlier php, and in personal time also C
[21:12:13] <hxx> Time for me to accept C++ isn't the devil like I previously thought.
[21:12:33] * vdamewood hugs C++.
[21:12:45] <pyzozord> but all my leetcode practice was exclusively in javascript so far, I think I have like 30-40h in python in total right now, and before I started advent of code it was more about 20h in python in total
[21:13:04] *** Joins: khanred (~khanred@user/khanred)
[21:13:06] *** Joins: ynnos (~sonny@2a09:bac0:14::806:90fc)
[21:13:06] *** ynnos is now known as sonny
[21:13:08] <hxx> But I still prefer C when simplicity is more preferable or even required.
[21:13:15] <deniska> I'm actually not too sure when I picked JS
[21:13:23] <vdamewood> JavaScript would be a perfectly acceptable language today if not for one very annoying design decision early on.
[21:13:27] *** Quits: szutt (~szutt@116.37.2.145) (Quit: Client closed)
[21:13:46] <pyzozord> hxx: c++ is also stricter and has stronger type system so that might be factor in the decision for a project
[21:13:50] <deniska> vdamewood: ''+0?
[21:14:04] <vdamewood> deniska: No, I can forgive all of those.
[21:14:11] <deniska> vdamewood: semicolons?
[21:14:18] <vdamewood> Nope.
[21:14:22] <pyzozord> prototypes
[21:14:28] <deniska> I'm running out of options
[21:14:40] <vdamewood> deniska: 9007199254740992+1
[21:14:42] *** Joins: Lenkov45 (~Lenkov45@146.70.65.3)
[21:14:49] <deniska> ah, not-a-numbers? :)
[21:15:01] <vdamewood> Well, using doubles for all numbers.
[21:15:06] <pyzozord> I get 9007199254740992
[21:15:06] <hxx> Remember QuakeC? I would love to see more miniature C like languages used for specific programs.
[21:15:13] <vdamewood> pyzozord: think about that.
[21:15:27] <pyzozord> it's because it's 64 bit float
[21:15:34] <vdamewood> pyzozord: Yep.
[21:16:02] <pyzozord> 9007199254740991 is max number for?
[21:16:34] <deniska> pyzozord: it's max integral number representable as a 64 bit float without a loss of precision
[21:16:35] <vdamewood> pyzozord: It's not, 9007199254740992 is. 9007199254740992 is the value of 53 1's in binary.
[21:16:39] *** Quits: BorgoMatic (~KC0LR@2605:a601:ad80:7400:50d5:7e4:4ce0:174) (Ping timeout: 252 seconds)
[21:16:47] <vdamewood> pyzozord: and ^ that
[21:17:14] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[21:17:15] <vdamewood> Oh, wait, no, 9007199254740991 is. I was wrong about that.
[21:17:48] *** Quits: node1 (~hex@user/node1) (Quit: Leaving)
[21:17:52] <pyzozord> wait
[21:17:59] *** Quits: sonny (~sonny@2a09:bac0:14::806:90fc) (Client Quit)
[21:18:08] * vdamewood waits.
[21:18:14] <pyzozord> so if 9007199254740991 is max integral number of float 64, and js uses float 64, how the hell 9007199254740991+1 gives me 9007199254740992 correctly?
[21:18:39] <vdamewood> pyzozord: It's not the max integer, it's the max integer without *loss of precision*.
[21:18:51] <pyzozord> what does that mean?
[21:18:55] *** Quits: Lenkov45 (~Lenkov45@146.70.65.3) (Ping timeout: 250 seconds)
[21:19:05] <vdamewood> pyzozord: Doubles can still represent even numbers past 9007199254740991, but not odd ones.
[21:19:06] *** Joins: InternetCitizen (~fuzzypixe@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[21:19:50] <pyzozord> it seems to be working just fine with +2, +3, +4, and +5
[21:20:01] <vdamewood> pyzozord: What was the result of _+3?
[21:20:04] <vdamewood> err +2?
[21:20:24] <pyzozord> oh wait damn, I was in python not in node
[21:20:25] *** Joins: Lenkov45 (~Lenkov45@45.133.193.27)
[21:20:31] <deniska> rookie mistake
[21:20:33] * pyzozord facepalms
[21:20:48] <pyzozord> ah yes, now it does what expected
[21:21:02] <pyzozord> what's
[21:21:05] <vdamewood> deniska: To be fair, I *just* did that *right now* myself.
[21:21:37] <pyzozord> python is crazy
[21:21:49] <vdamewood> crazy awesome
[21:21:49] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:21:53] <deniska> I guess it's a reflex for some people. "I want to type numbers into a terminal *launches python*" :)
[21:21:56] <pyzozord> it magically switches to bigints under the hood completely seamlessly
[21:22:25] <deniska> pyzozord: python2 did the switching, python3 just uses bigints for everything
[21:22:30] <pyzozord> deniska: it doesn't help if you can launch python interpreter by typing py<enter> in your terminal
[21:22:40] <hxx> I think C is better for backend stuff or something like a compiler, OOP languages provide more convenience for frontend stuff like a GUI.
[21:22:55] <pyzozord> deniska: oh good to kno
[21:23:02] *** Joins: kek_1 (~kek_@2a02:168:200f:1f10:dcde:2774:1301:baad)
[21:23:11] <vdamewood> Yeah, confusingly in Pythonspeak, bigints are 'longs'.
[21:23:17] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi)
[21:23:30] <deniska> pyzozord: it's an irrelevant implementation detail, and was so in py2
[21:23:31] <vdamewood> Hmm, *Python2speak
[21:23:52] <deniska> just sometimes you get a funny looking L at the end of your number representations
[21:24:04] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:24:29] <deniska> vdamewood: it's still called "long object" in C code, but 'int' in python :)
[21:25:00] <deniska> hxx: RAII is a really nice idea
[21:25:10] *** Quits: Lenkov45 (~Lenkov45@45.133.193.27) (Ping timeout: 260 seconds)
[21:25:29] <deniska> hxx: so are generic containers and a proper string class
[21:25:37] *** Quits: kek_ (~kek_@net-2001-067c-10ec-574f-8000-0000-0000-0205.v6.ethz.ch) (Ping timeout: 250 seconds)
[21:25:42] <deniska> C++ is just more pleasant to use
[21:25:58] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[21:26:17] <hxx> Well I disagree, I find C to be more pleasant to use.
[21:26:47] <edgar-rft> I find both awful :-)
[21:27:07] <deniska> pretty much everything you can do in C you can do in C++, but then in C++ you can always reach for this vector<> instead of fiddling with reallocs :)
[21:27:36] <KillerWasp> There is nothing better than ambient music and birds to relax. IF I KEEP LISTENING TO THIS I WILL GO CRAZY!!
[21:27:47] <vdamewood> deniska: Ah, yes. Just like strings are still 'unicode' in C.
[21:28:01] <hxx> Pretty much anything you can do in X you can do in Y is not a very good reason to use A over B. It doesn't invalidate C because C++ can do what C can do, then might as well be using Objective-C.
[21:28:38] <vdamewood> KillerWasp: I prefer EDM.
[21:29:00] <KillerWasp> vdamewood: i also, and chiptunes
[21:29:04] <vdamewood> Templates work better in C++ than Objective C.
[21:29:05] <deniska> hxx: with C and C++ pretty much any C code you can type is valid C++ code
[21:29:07] <KillerWasp> like any music without voices
[21:29:15] <deniska> beyond implicit casts from void and stuff
[21:29:19] <deniska> besides*
[21:29:38] <vdamewood> deniska: Perfect use of 'pretty much'.
[21:29:39] <hxx> Not necessarily, sometimes you come across valid C code that is not allowed in C++. deniska. It's false to say C++ is a strict superset of C, when that would be Objective-C.
[21:29:52] <vdamewood> hxx: That's what 'pretty much means'.
[21:29:55] <KillerWasp> i still use malloc in C++
[21:30:01] <vdamewood> s/much means'/much' means/
[21:30:18] * vdamewood burns KillerWasp as a heretic.
[21:30:25] <KillerWasp> D:
[21:30:34] <pyzozord> I'm recently listening to this for relaxing mood https://www.youtube.com/watch?v=WhgKyIxjHNo
[21:30:36] <bayaz> Title: Cozy Jazz Music - Relaxing Jazz Piano Music - Background Jazz Music 
[21:30:38] <user51> i have a question about yacc: if i give it a valid grammar, there's nothing preventing it (other than not having code) from recursively generating every string in said grammar, right?
[21:30:51] <hxx> I'm just going to drop this conversation because we're a few steps away from everyone just spamming NO U. You enjoy C++, I'll enjoy C. We all live and let live.
[21:31:09] <vdamewood> user51: generating strings with yacc?
[21:31:50] <vdamewood> hxx: FWIW, deniska is pretty reasonable in such discourses.
[21:31:58] *** Quits: xff0x (~xff0x@port-92-195-24-10.dynamic.as20676.net) (Quit: xff0x)
[21:32:30] <user51> vdamewood: grammar-wise, not action wise. for example, every string possible in http://sprunge.us/jYSqq9
[21:32:41] <hxx> Luckily this isn't /g/ because otherwise it would be just raw shitposting.
[21:32:44] *** Joins: akevinhuang (~thekevinh@user/thekevinhuang)
[21:32:56] * khanred inserts SICP meme
[21:33:11] <KillerWasp> https://0x0.st/-FYe.s3m - aquatica.s3m
[21:33:12] <bayaz> Type: audio/x-s3m Size: 303.9 kB 
[21:33:24] <vdamewood> We prefer cooked shit in this channel.
[21:33:34] <khanred> It is more sanitary 
[21:33:52] <user51> by 'every possible string' i mean that only shifts happen, but reductions never happen
[21:34:34] * vdamewood forgets what a reduction is.
[21:34:57] <user51> you're gonna left recursion then :P
[21:35:20] *** Joins: _inky (~inky_@46.162.226.63)
[21:35:26] <vdamewood> Is that when it finds a set of matching tokens for a rule, and converts them to another object representing that rule?
[21:35:59] <user51> i hope my explanation is correct: reduction happens when the end of rule is reached, and the input matches the rule in question.
[21:36:15] <vdamewood> If that's the case, every rule you write in yacc, is basically the code to handle a reduction.
[21:36:54] <user51> gimme a sec, i think i wrote a bad question
[21:40:59] *** Joins: Garb0 (~Garb0@user/garb0)
[21:41:00] *** Quits: Payam (~Payam@138.106.57.132) (Ping timeout: 256 seconds)
[21:41:23] *** Joins: xff0x (~xff0x@2001:1a81:5245:500:35c3:4c34:eb85:8494)
[21:42:06] *** Quits: Garb0 (~Garb0@user/garb0) (Remote host closed the connection)
[21:43:10] *** Joins: Garb0 (~Garb0@user/garb0)
[21:44:07] *** Quits: Garb0 (~Garb0@user/garb0) (Remote host closed the connection)
[21:47:30] *** Joins: nvmd (~nvmd@user/nvmd)
[21:48:26] *** Joins: Garb0 (~Garb0@user/garb0)
[21:49:14] *** Quits: MaghOz (~maghoz@2001:4bc9:801:f399:540d:f952:207a:4) (Quit: WeeChat 3.3)
[21:51:24] *** Joins: rabinger (~rabinger@178.115.41.232.wireless.dyn.drei.com)
[21:52:04] <pyzozord> do I already need to know lisp to read sicp or does it teach lisp?
[21:52:19] <user51> http://sprunge.us/zuVR8A
[21:52:24] <user51> i hope i wrote a good question
[21:53:19] <GeDaMo> It's Scheme
[21:53:50] <vdamewood> pyzozord: It teaches the parts you need to know.
[21:54:12] *** Joins: xkuru (~xkuru@user/xkuru)
[21:55:19] *** Quits: Garb0 (~Garb0@user/garb0) (Ping timeout: 250 seconds)
[21:55:28] <vdamewood> user51: It's still not clear what your asking, but if it helps, a parser is completely unaware of the lexemes used to generate the tokens it receives.
[21:55:54] *** Joins: AtomicInteger (~primamate@p200300ee170add0079599a87190787bf.dip0.t-ipconnect.de)
[21:55:59] <vdamewood> user51: So, if your lexer takes '2' and '02' and yields Integer(2) for both, there's no way for the parser to know which one it was.
[21:57:19] *** Quits: _inky (~inky_@46.162.226.63) (Read error: Connection reset by peer)
[21:57:28] *** Quits: d0mi7usl0l (uid512140@id-512140.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[21:57:34] <vdamewood> I guess what I'm trying to say is that the lexer isolates the string representation of the input from the parser.
[21:57:44] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[21:59:39] <user51> does it help if we focus on tokens only?
[22:00:31] *** Quits: AtomicInteger (~primamate@p200300ee170add0079599a87190787bf.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[22:00:34] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 265 seconds)
[22:01:01] *** Quits: YHVH (~yhvh@2601:982:8300:8090:e035:c7e:ce95:b49b) (Ping timeout: 252 seconds)
[22:01:19] <vdamewood> user51: I'd still be confused by the question.
[22:01:56] <user51> maybe we should try again tomorrow.
[22:02:11] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Remote host closed the connection)
[22:02:46] <user51> and i appreciate the help very much :)
[22:03:25] <user51> i'll think about this more because i have a pattern of asking the wrong question.
[22:03:54] *** Quits: hxx (~hxx@c-24-30-27-91.hsd1.ga.comcast.net) (Quit: Leaving)
[22:04:11] <berndj> user51, dada can generate text from a grammar
[22:04:36] *** Joins: audiocat (~audio@user/audio)
[22:04:37] <berndj> https://dev.null.org/dadaengine/manual-1.0/dada.html
[22:04:38] <bayaz> Title: The Dada Engine 
[22:04:44] <pyzozord> oh, I know what my new year resultion will be: do some khanacademy every day
[22:05:25] <user51> if we're sharing resolutions, mine has been to read a plan 9 manpage every day
[22:06:11] <vdamewood> My new year's resolution will be 3072 x 1920.
[22:06:14] <pyzozord> i didn't have one until just now
[22:07:01] <vdamewood> I've had this resolution for a while.
[22:07:02] <KillerWasp> vdamewood: Are you using a much larger monitor or a magnifying glass?
[22:07:09] *** Joins: magla (~gelignite@55d43df6.access.ecotel.net)
[22:07:21] <user51> vdamewood: i rally want the 1920x1920 from eizo, but it feels like two 1080ps would do the job
[22:07:23] <vdamewood> KillerWasp: No.
[22:07:40] <KillerWasp> well, you always can use dpi, but not always work.
[22:08:03] <vdamewood> My screen is 16".
[22:08:08] <KillerWasp> ugh...
[22:08:20] <KillerWasp> poor monitor... :'(
[22:08:27] <vdamewood> Laptop screen.
[22:08:40] <KillerWasp> ok, laptop screen.
[22:09:19] <KillerWasp> i'm use 1366x768 in a 24"
[22:09:23] <KillerWasp> normal monitor
[22:09:31] <pyzozord> and I need to start running again
[22:09:32] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 240 seconds)
[22:09:33] <Stefan26> most PC monitors have lower DPI than a mobile phone?
[22:09:48] <pyzozord> oh turns out I have many things I should start doing
[22:09:51] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[22:09:54] *** Joins: inlight (~inlight@157.35.17.204)
[22:09:54] *** Quits: inlight (~inlight@157.35.17.204) (Changing host)
[22:09:54] *** Joins: inlight (~inlight@user/inlight)
[22:09:57] <vdamewood> Stefan26: Longer viewing distances.
[22:10:14] <Stefan26> oh yea
[22:11:24] <user51> pyzozord: happy exercise
[22:11:29] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:8cc4:edf2:2883:2396)
[22:12:23] <pyzozord> thanks :) I got the perfect place, I'm living next to a river, with some green around it
[22:12:46] *** Joins: sonny (~sonny@8.6.144.252)
[22:12:48] *** Quits: inky (~inky@46.162.226.63) (Ping timeout: 256 seconds)
[22:13:08] *** Joins: YHVH (~yhvh@c-98-235-30-231.hsd1.pa.comcast.net)
[22:13:33] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[22:13:45] <user51> wow, money grows on rivers! $$$
[22:14:05] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[22:14:07] <pyzozord> i meant like grass and trees but sure
[22:14:13] <user51> yeah i know
[22:14:21] <user51> there's a few parks around, but no rivers
[22:14:31] <vdamewood> pyzozord's money isn't all green.
[22:14:33] <[itchyjunk]> reeeeeeeee
[22:14:48] <vdamewood> Some of it is blue, and purple, and... uhh... other colors.
[22:14:51] <user51> now that you mention it, there's a big park in tel aviv which could be nice to live next to. or not, i've never lived in tel aviv.
[22:15:07] <user51> vdamewood: wonder what color bitcoin is
[22:15:29] <pyzozord> vdamewood: I don't think we have purple money in europe
[22:15:43] <pyzozord> oh no we do, but I never seen that one in real life lol
[22:16:14] <pyzozord> https://en.wikipedia.org/wiki/500_euro_note
[22:16:15] <bayaz> Title: 500 euro note - Wikipedia 
[22:16:54] <GeDaMo> Scottish Â£20 note is purple
[22:17:15] <vdamewood> pyzozord: 500's were discontinued.
[22:17:19] <rabinger> is it possible to score a junior dev job with no cs degree at all? has someone experience with bootcamps, are they worth their money? i learned java/c# for android dev by myself, but i'm scared to apply for a job :[
[22:17:41] <pyzozord> vdamewood: according to wiki they are still in circulation though, they weren't banned
[22:18:24] <pyzozord> rabinger: yes it's possible, it is becoming harder but it is still possible. Most people I work with do not have cs degrees
[22:19:05] *** SuperNintendoSUX is now known as BucetaRosa
[22:19:08] <deniska> I have no CS degree and I found a programming job
[22:19:11] <pyzozord> rabinger: I don't know about bootcamps, but I know people after bootcamps and they were able to perform junior level tasks
[22:19:24] *** Quits: InternetCitizen (~fuzzypixe@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Ping timeout: 268 seconds)
[22:19:26] *** Quits: terminalpusher (~terminalp@2a01:586:9b10:1:fdf9:d5e5:78b7:60e0) (Remote host closed the connection)
[22:19:26] <user51> what are junior level tasks, for the record?
[22:19:40] <vdamewood> GeDaMo: And they're not legal tender.
[22:19:40] <pyzozord> mostly do what senior people tell you to do :P
[22:19:50] *** Joins: terminalpusher (~terminalp@2a01:586:9b10:1:fdf9:d5e5:78b7:60e0)
[22:20:04] <rabinger> pyzozord: ah ok. thanks. so i guess i will try to get a bootcamp certificate and clean up my github. 
[22:20:09] *** Quits: Duchess (~Duchess@2604:3d08:1:1b:564:6e0:6753:4df1) (Quit: Client closed)
[22:20:32] <dodo> user51: hopefully educational ones
[22:20:49] <pyzozord> or to give more useful answer: smaller scale problems, implemention features following some other similar feature that was already implemented, fix easy bugs
[22:20:50] <deniska> rabinger: how much does a bootcamp cost?
[22:21:01] <pyzozord> *easy as in easy to reproduce
[22:21:46] <sonny> rabinger: depends where you live
[22:22:13] <[itchyjunk]> that implies it also depends on where you don't live?
[22:22:21] <rabinger> deniska: as far as i can tell they're pretty expensive. a few thousand euros where i live. :/
[22:22:29] <bjs> rabinger: nobody can tell you whether you can get a job or how easy,  but we can say pretty certainly that you definitely *wont* get a job if you don't apply at all
[22:22:30] <bjs> :)
[22:22:40] <rabinger> :D true
[22:22:41] <[itchyjunk]> ddamnit
[22:22:42] <pyzozord> rabinger: I'd start with https://www.udemy.com/ and buy some $15 courses and do those properly
[22:22:44] <[itchyjunk]> that was my plan
[22:22:52] <[itchyjunk]> I really don't wanna apply for jobs :(
[22:22:56] <[itchyjunk]> seems stressful
[22:23:07] <deniska> rabinger: sounds expensive, I'd try learning on my own first
[22:23:33] <pyzozord> you get used to it
[22:23:34] <sonny> [itchyjunk] it is
[22:23:41] <rabinger> i worked in finance for 15 years now. hope developer interviews are not as paininducing as finance ones :[
[22:23:43] <pyzozord> *to stressful
[22:23:46] <sonny> that's why you have to make an algorithm
[22:24:00] <[itchyjunk]> oh you have good work experience and such? should be easier for you then
[22:24:00] <pikapika> rabinger, is it your first dev job
[22:24:01] <deniska> rabinger: ah, so you have general work experience, that helps a lot
[22:24:04] <sonny> or figure out what's being used
[22:24:08] <pikapika> these days there is a trend of asking coding puzzles
[22:24:25] <sonny> rabinger: learn python then you can get into data science pretty easy :P
[22:24:43] *** Joins: premultiplied (~premultip@69.84.6.130)
[22:24:51] <[itchyjunk]> I have one programming final
[22:24:58] <[itchyjunk]> if I pass, I am done with uni for now
[22:25:01] <deniska> rabinger: you can look for programming position in a field related to what you've worked with before
[22:25:13] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[22:25:16] <pyzozord> rabinger: start learning things alnoe first, do udemy or other courses and start biling up projects you can show off later and contribute to popular open source projects that your potential employes know about
[22:25:23] <pyzozord> *employers
[22:25:28] <rabinger> yeah, it's my first dev job. i never worked in the tech field but always loved to code. some unity games, some websites, some smol android apps. but always in my freetime never in my job. 
[22:25:36] <[itchyjunk]> rabinger what kinda job are you looking for?
[22:25:45] <[itchyjunk]> oh you can make games already?
[22:25:47] *** Joins: Kev_ (~Kev@2a01cb0400149f0015da76d049caea4a.ipv6.abo.wanadoo.fr)
[22:25:53] <[itchyjunk]> you just want certifications now?
[22:25:55] <deniska> rabinger: so you have general work experience and you know how to code? Seems like you should be already applying
[22:25:56] <[itchyjunk]> some might not help
[22:26:02] <[itchyjunk]> yeah
[22:26:10] <[itchyjunk]> what keeps you from already getting a job?
[22:26:13] <pyzozord> rabinger: 15 years in business and you say "smol android apps"? Hmm are you sure it wasn't 5 years? :P
[22:26:41] <rabinger> yeah i made some small projects and i really would like to work in the field of mobile dev either native or webview apps. 
[22:26:45] <[itchyjunk]> rabinger have you fiddles with VR?
[22:26:53] <rabinger> nope. never vr. 
[22:26:54] <deniska> pyzozord: android for phones is pretty much 15 years old at this point :P
[22:26:54] <[itchyjunk]> fiddled*
[22:27:15] <rabinger> started to look into xamarin but i dont know if it's worth it
[22:27:55] <pyzozord> deniska: just that I never met people who spent 15 years in the business roles and use the meme language, that's more gen-z thing, and 15 year experience suggests gen-y
[22:27:58] *** Joins: Klinda (~superleag@user/klinda)
[22:28:35] <rabinger> well guys thanks for the feedback. i will apply for a few jobs. even if i dont get them i most likely learn what companies are looking for in my area and region. thanks again. <3
[22:28:49] <deniska> pyzozord: nobody is too old or young for some good memeing
[22:29:05] <pyzozord> true that
[22:29:47] <[itchyjunk]> what about bad miming?
[22:30:00] <[itchyjunk]> memeing*
[22:30:46] *** Joins: zaher (~zaher@37.48.157.42)
[22:31:17] *** Parts: rabinger (~rabinger@178.115.41.232.wireless.dyn.drei.com) ()
[22:31:31] *** Joins: BorgoMatic (~KC0LR@2605:a601:ad80:7400:b4bb:7dac:d892:9926)
[22:31:33] <pyzozord> if bad memeing is when you reference memes from 10 years ago, I am bad memeing all the time
[22:31:48] <vdamewood> Numa numa!
[22:31:53] <[itchyjunk]> int -> long, float -> long ?
[22:32:01] <[itchyjunk]> does this look correct for auto promotions?
[22:32:09] <deniska> pyzozord: I post rage faces to chats to annoy younglings
[22:32:18] <sonny> double type to integer type looks weird
[22:32:28] <sonny> does that actually happen?
[22:32:29] <GeDaMo> https://en.wikipedia.org/wiki/Numerical_tower
[22:32:30] <bayaz> Title: Numerical tower - Wikipedia 
[22:32:54] <vdamewood> I give younglings the Anikin Skywalker treatment.
[22:32:56] <sonny> a long can hold a float tho
[22:33:02] *** Joins: Akuli (~Akuli@82-203-164-199.bb.dnainternet.fi)
[22:33:15] <sonny> vdamewood: you are obi wan?
[22:33:31] <[itchyjunk]> sonny int -> long looks wrong?
[22:33:53] <sonny> float -> long
[22:34:10] <[itchyjunk]> GeDaMo that I know but I can't convert it to programming lingo :P
[22:34:23] <[itchyjunk]> you don't think float gets auto promoted to long in java? hmm
[22:34:28] <pyzozord> vdamewood: it's over, I have the high ground!
[22:34:32] <sonny> integral types usually get converted to double types
[22:34:56] <sonny> or, it probably just errors for those sizes e.g. 4f / 1L
[22:34:58] <[itchyjunk]> oh it does
[22:35:11] <[itchyjunk]> https://www.geeksforgeeks.org/type-conversion-java-examples/
[22:35:27] <sonny> I'll never visit that website lol
[22:36:59] *** Joins: Pook (~Pook@2001:8a0:f996:1400:40d6:8818:5c54:e122)
[22:37:25] <sonny> hmm, I wonder what to do in these senarios
[22:37:58] <sonny> in C they did it to make programming smoother but it does seem to cause problems
[22:38:56] <[itchyjunk]> auto casting is dumb
[22:39:08] <[itchyjunk]> if you want to do statically typed language, just do it
[22:39:20] <[itchyjunk]> "oh it's for convienece" and I always get confused by it
[22:39:30] <[itchyjunk]> I get to make a cheat sheet for my exam
[22:39:36] <[itchyjunk]> wondering what all I should put in there
[22:39:39] <sonny> xD
[22:39:50] <khanred> 42
[22:39:53] <[itchyjunk]> like public static void main (String[] args) {} I seem to already know
[22:40:03] <[itchyjunk]> no point putting it on a paper I feel like
[22:40:30] <khanred> Cheat sheets never felt helpful imo
[22:40:39] <sonny> oh, I was watching lain yesterday and it just occured to me people used to write code on a chalkboard
[22:41:15] <khanred> chalk is gross
[22:41:42] <sonny> Don't think I've ever done well on an exam, except one programming one that I really needed to ace to pass
[22:41:52] <[itchyjunk]> its a written exam
[22:42:05] <[itchyjunk]> people still write on chalk board
[22:42:05] <khanred> Never had an issue with them
[22:42:09] <[itchyjunk]> and chalk board is great
[22:42:25] <[itchyjunk]> sonny I just got done with my math exam
[22:42:28] <[itchyjunk]> didn't do too well :(
[22:42:36] <[itchyjunk]> wanted some A's this semester
[22:42:36] <sonny> you already know?
[22:42:42] <khanred> I'm glad I'm not in college any more
[22:42:45] <[itchyjunk]> idk the grade, I know I didn't do well
[22:42:47] <sonny> my feelings about exam grades are never correct
[22:42:53] <khanred> I did well but I fucking haaaaaaaaaaaaaaaaaaaaaaaaated it so much
[22:42:55] <[itchyjunk]> I'm glad you're not in college either
[22:43:19] <sonny> that reminds me, I have to call admissions lol
[22:43:30] <khanred> Making me feel old
[22:43:40] <[itchyjunk]> (Java) Scanner s = new Scanner(System.in); looks correct?
[22:43:44] <[itchyjunk]> I am old too
[22:43:51] <[itchyjunk]> I came back to get a degree
[22:43:51] <khanred> how old
[22:43:54] <[itchyjunk]> for bucketlist
[22:43:58] <khanred> hm
[22:44:08] <[itchyjunk]> old enough to check thinks off bucket list before I corke
[22:44:11] <[itchyjunk]> croke*
[22:44:19] <khanred> I'm 26
[22:44:26] <khanred> Basically dead
[22:44:27] <[itchyjunk]> you're a baby
[22:44:31] <khanred> A dead baby
[22:44:33] <[itchyjunk]> yes
[22:44:37] <khanred> The best kind
[22:44:43] <GeDaMo> Damned kids, get off my LAN etc! :P
[22:44:44] <[itchyjunk]> (Java) Scanner s = new Scanner(System.in); looks correct?
[22:45:02] *** Quits: ixil (~ixil@2a02:120b:2c11:1d70:a38f:d77f:3f7e:92d2) (Ping timeout: 265 seconds)
[22:45:03] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[22:45:05] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[22:45:19] <pyzozord> GeDaMo: we love you anyway
[22:45:26] <[itchyjunk]> no we dont
[22:45:56] *** Quits: jamea77 (~jamea@189.237.79.237) (Ping timeout: 268 seconds)
[22:46:16] <[itchyjunk]> its a 2 hour exam, if I take 2 hour, I miss my last bus and I have to take a different route and walk 30 mins on top of that
[22:46:29] <[itchyjunk]> if I take 1 hour 20 mins, I can make it to my last bus..
[22:47:04] *** Joins: inky (~inky@141.136.89.24)
[22:47:09] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[22:47:11] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:47:27] <sonny> for some reason I recall Scanner using input by default, let me check
[22:47:34] <pyzozord> if you dont take the exam you can be home 2h early
[22:47:46] <[itchyjunk]> if I don't take it, I can be home 4 hours early
[22:47:54] <[itchyjunk]> exam is in 3 hours from now
[22:47:56] <[itchyjunk]> I am stuck here
[22:48:10] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b484:addd:b6f6:fe4e) (Remote host closed the connection)
[22:48:13] <[itchyjunk]> if I skip the exam, I think I can still get a C+ or a B- in this class
[22:48:43] <[itchyjunk]> public static void Blah () {}, public is visibility, void is return type
[22:48:43] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b484:addd:b6f6:fe4e)
[22:48:47] *** Joins: hjf (~hjf@user/hjf)
[22:48:50] <[itchyjunk]> what is static? anyone know? (Java)
[22:48:55] <pyzozord> do collage degrees in cs matter outside of academia?
[22:49:13] <pyzozord> i mean other than passed/not passed
[22:49:15] <sonny> well, for jobs ya
[22:49:24] <sonny> oh, nah
[22:49:31] <sonny> only for top companies
[22:49:37] <hjf> or government 
[22:49:40] <sonny> amd, intel etc
[22:49:57] <hjf> if you want to emigrate to another country, having a degree usually puts you in front of the line
[22:50:12] <sonny> amd wanted a high gpa :(
[22:50:12] <pyzozord> oh yeah thats a strong argument
[22:50:16] <[itchyjunk]> degree type does matter
[22:50:23] <hjf> if you want to emigrate to japan, you can't without a university degree
[22:50:26] <[itchyjunk]> hiring people seems to have type bias
[22:50:37] <pyzozord> companies dont look at the class scores, but governments might
[22:50:48] <sonny> [itchyjunk]: yeah, just have to figure out what it is
[22:51:13] <hjf> so how long should functions be? I'm a bit behind on a PR (it's been in review for a month). I keep getting comments without aproval from a coworker
[22:51:20] <hjf> it's fucking nitpicks 
[22:51:31] <[itchyjunk]> I've heard some companies do look at core grades etc
[22:51:37] <hjf> like "rename this variable" or "this function is too long, split it"
[22:51:42] <sonny> yeah, you need that System.in
[22:51:52] <hjf> i'm not sure if i should bring this up whit management
[22:51:56] <pyzozord> hjf: it can be quite common, depending on the environment/culture
[22:52:08] <hjf> with*
[22:52:11] <sonny> java actually has a limit
[22:52:22] <sonny> it might be 1000 lines or something
[22:52:26] <[itchyjunk]> sonny do you know what "static" in that declaration would be?
[22:52:37] <hjf> i have admin rights and i can merge my own PRs. I've had to because of his behavior in the past
[22:52:46] <pyzozord> hjf: i actually experienced a type of PR-hazing in my first company when I emigrated
[22:53:08] <sonny> [itchyjunk]: declares a static member, which there exists only one and can be used without creating an object
[22:53:12] <pyzozord> I know it was hazing because they stopped being so nitpicky later
[22:53:17] <hjf> i asked him for comments on an implementation but he commented on every fucking nitpick except on what i asked him to comment
[22:53:19] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b484:addd:b6f6:fe4e) (Ping timeout: 268 seconds)
[22:53:28] <hjf> pyzozord: I wrote the project, he's the new kid, refactor-happy
[22:53:29] *** Joins: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net)
[22:53:32] <sonny> one per class*
[22:53:50] <pyzozord> hjf: than it can be a power play
[22:54:02] *** Quits: Orbbit (uid423739@id-423739.ilkley.irccloud.com) (Quit: Updating details, brb)
[22:54:03] <pyzozord> *could be, doesn't have to be
[22:54:14] *** Joins: tane (~tane@dslb-002-201-234-166.002.201.pools.vodafone-ip.de)
[22:54:14] *** Quits: tane (~tane@dslb-002-201-234-166.002.201.pools.vodafone-ip.de) (Changing host)
[22:54:14] *** Joins: tane (~tane@user/tane)
[22:54:17] *** Joins: Orbbit (uid423739@id-423739.ilkley.irccloud.com)
[22:54:39] <pyzozord> or you know he might just not like you
[22:54:54] <pyzozord> or has a bad case of ocd
[22:55:03] *** Joins: zaher_ (~zaher@37.48.176.90)
[22:55:04] <sonny> hjf: how do you name your variables?
[22:56:06] <[itchyjunk]> use that password generator thing
[22:56:09] *** Joins: CoderGuy2 (~CoderGuy@2601:644:102:2820:8dcd:55e0:e024:64ff)
[22:56:12] <[itchyjunk]> :D
[22:56:15] *** Joins: anthk_ (~anthk@92.176.105.30)
[22:56:16] <hjf> well for example
[22:56:19] <hjf> we have an InventoryProvider
[22:56:24] <hjf> which has a method GetStock
[22:56:32] <hjf> and it returns an InventoryProviderGetStockResponse
[22:56:41] <[itchyjunk]> wtf
[22:56:42] <[itchyjunk]> lol
[22:56:44] <sonny> ok, typical industry oop
[22:56:50] <hjf> yes but this is JS
[22:56:57] <hjf> and apparently this isn't very JS-y
[22:56:59] <hjf> (TS)
[22:57:06] *** Orbbit is now known as help
[22:57:34] *** Quits: zaher (~zaher@37.48.157.42) (Ping timeout: 256 seconds)
[22:57:39] <pyzozord> powerplay/hates you
[22:57:55] <sonny> less commits the better, maybe you can use that in your next report
[22:57:59] <pyzozord> this is imposing personal preferences, not some objective industry consensus
[22:58:00] <GeDaMo> https://miro.medium.com/max/1000/1*eSgw4TrT3_5kUU3QFFW4qA.jpeg
[22:58:01] <bayaz> Type: image/jpeg Size: 154.2 kB 
[22:58:03] <sonny> causes unecessary commits
[22:58:11] <hjf> hm
[22:58:14] <sonny> lmao
[22:58:26] <hjf> in other parts of the code i used "let"
[22:58:36] <hjf> and he tells me "we should use const whenever possible" 
[22:58:44] <hjf> yes cocksucker i used let because i had to
[22:58:44] *** help is now known as gitesh
[22:58:53] <hjf> but really this is concerning
[22:59:09] <sonny> dimiss it
[22:59:14] <sonny> dismiss*
[22:59:21] *** Joins: jamea (~jamea@177.239.81.39)
[22:59:39] <sonny> or, ask him to make a auto policy for it
[22:59:47] <sonny> not much else to do
[22:59:48] <pyzozord> I am not fan of that kind of naming either, but I wouldn't make a comment about every single name in the pr
[22:59:49] <hjf> i was also using JSON.parse(JSON.stringify(something)) to make a deep clone
[22:59:49] <[itchyjunk]> you should just ask how const helps there over let
[23:00:03] *** Quits: CoderGuy (~CoderGuy@user/coderguy) (Ping timeout: 252 seconds)
[23:00:07] <[itchyjunk]> see if he can explain why. that generally scares a lot of people away from you
[23:00:21] <hjf> he brought in lodash as a dependency to have _.cloneDeep
[23:00:37] *** gitesh is now known as orbit
[23:00:39] <decker> well that's easy - const can be replaced in all following expressions and the varible doesn't even really exist
[23:00:42] <decker> it gets inlined
[23:00:47] <[itchyjunk]> idk js to know what is and isn't valid critism
[23:00:53] *** Joins: Akiva (~Akiva@user/Akiva)
[23:00:53] <sonny> decker: the compiler does it?
[23:00:58] <decker> ya
[23:00:59] <sonny> [itchyjunk]: can be
[23:01:02] <pyzozord> hjf: i do that for deep cloning all the time
[23:01:02] <sonny> oh nice
[23:01:07] *** orbit is now known as Guest6035
[23:01:11] <hjf> pyzozord: lodash or json?
[23:01:29] <pyzozord> both
[23:01:48] *** Guest6035 is now known as Orbbit
[23:01:53] <hjf> i prefer not to bring in dependencies for trivial tasks, or unless there is a performance reason
[23:01:57] *** Joins: paoda[m] (~paodamatr@2001:470:69fc:105::9247)
[23:01:59] <pyzozord> samee
[23:02:32] *** Joins: _inky (~inky_@188.115.246.78)
[23:02:45] <hjf> also he doesn't like "is" prefixed functions for "plural"
[23:02:46] <pyzozord> these sound unreasonable unless we are missing some context, like company/project culture etc
[23:02:53] *** Orbbit is now known as gravity
[23:02:53] <hjf> like isObjectsAvailable
[23:03:01] <hjf> has me change it to areProjectsAvailable
[23:03:08] <sonny> just have to make policies so you can work together
[23:03:09] <hjf> areObjectsAvailable.
[23:03:19] <hjf> ok let's go back a little bit
[23:03:33] *** Quits: _inky (~inky_@188.115.246.78) (Max SendQ exceeded)
[23:03:42] <[itchyjunk]> well, if he's your boss, that's his job
[23:03:52] <[itchyjunk]> make naming consistent etc
[23:04:20] <hjf> yes but aren't "boolean" functions always "is" regardless of whether it sounds dumb?
[23:04:31] *** Joins: _inky (~inky_@188.115.246.78)
[23:04:39] <sonny> up to you
[23:04:43] <hjf> i started 4 months ago. i had 45 days to make a backend, and two different frontends
[23:05:04] <[itchyjunk]> there is no "isn't it always X" for naming schemes afaik
[23:05:09] <hjf> i made it work in 45 days. nestjs relational db, a frontend for a shopify app, and a frontend for our business
[23:05:14] <[itchyjunk]> every project picks some naming scheme
[23:05:18] <vdamewood> hjf: 'is' is a convention. It's not a hard-and-fast rule.
[23:05:32] <vdamewood> And I think it's stupid to use 'is' for plurals.
[23:05:47] *** gravity is now known as theSpaceShuttle
[23:05:49] *** zbrown[m] is now known as zborwn
[23:05:53] <vdamewood> Besides, there are also 'has' and 'does'.
[23:05:58] <[itchyjunk]> hjf if it bother your that much, you should talk to your superiors
[23:06:12] <[itchyjunk]> tell them that naming scheming is outdated and its impacting your productivity
[23:06:24] <hjf> about 2 months ago this guy joined and he started doing the "kill a guy on your first night in jail so they know you don't mess around" refactoring shit 
[23:06:24] <[itchyjunk]> you're spending your valuable time with managers minor name changes and such
[23:06:42] *** zborwn is now known as nworb
[23:06:45] <hjf> took two weeks to basically move every file around
[23:06:57] <hjf> didn't touch a single line of code, but moved everythig around
[23:07:11] <hjf> now since a month ago we also have a "head of engineering" 
[23:07:24] <sonny> well, is ther less loc?
[23:07:34] <sonny> there*
[23:07:42] <[itchyjunk]> are you just complaining about your entire work setting? only option is to start your own company
[23:07:49] <[itchyjunk]> so you get to decide where the files go
[23:07:51] <decker> that's a way to get familiar with code too
[23:07:58] <[itchyjunk]> else you do what management tells you do
[23:08:03] <hjf> again
[23:08:11] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Read error: Connection reset by peer)
[23:08:14] <vdamewood> Management told me to fart. I failed.
[23:08:24] <hjf> i started this project from scratch. he's the new guy. he doesn't ask me WHY i did things the way i did
[23:08:42] <[itchyjunk]> move it all back then
[23:08:54] <[itchyjunk]> if you're confident it's better as is
[23:09:00] <decker> but a couple months of this would get old... in the case of seeing a let and just quoting 'always use const' is probably more like a knee jerk reaction than actually considering it - since so many people don't realize the difference
[23:09:09] <decker> and wouldn't take the nessecarily personally
[23:09:19] <hjf> i'm fine either way, i just don't think spending 2 weeks moving shit around is smart
[23:09:53] <hjf> and now that i think about it i've just noticed that
[23:09:54] <decker> s/the/that/
[23:10:17] <hjf> the project has "only" 6 test suites and 57 unit tests
[23:10:21] <hjf> and I wrote all of them
[23:10:34] <hjf> he hasn't written any tests for anything he's committed
[23:10:37] <hjf> hm
[23:10:40] <hjf> hm hm hm
[23:10:54] <pyzozord> you guys need to figure out a way to work together or you will have bad time
[23:10:59] <[itchyjunk]> why do you care how other coworkers spend their time?
[23:11:07] <[itchyjunk]> the money is not coming out of your pocket
[23:11:11] <vdamewood> I remember the last time I committed to a project. They asked for a bajillion and one tests, and I had to write them all.
[23:11:20] <decker> because they're spending their time being unproductive and throwing out attacks for no reason
[23:11:35] <pyzozord> also if he is trying to show how senior he is, he is failing because being senior is about convincing people to do stuff, and what he does now is the exact opposite
[23:11:37] *** Joins: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:1cc0:368e:c4de:fef6)
[23:11:38] *** Quits: _inky (~inky_@188.115.246.78) (Read error: Connection reset by peer)
[23:12:01] <decker> if they sat there quietly in the corner and didn't do anything I"m sure it's easier to not worrry about 'other coworkers spending their time'
[23:12:01] <hjf> [itchyjunk]: because i've noticed this before. these guys are LOUD. this is what i call "kill a guy on your first night in jail so they know you don't mess around"
[23:12:10] <hjf> they do a LOT of commits and shit
[23:12:15] <[itchyjunk]> yes but so what?
[23:12:23] <[itchyjunk]> it's a job for you isn't it?
[23:12:24] *** theSpaceShuttle is now known as Spaceflight
[23:12:29] <hjf> and managers then see "wow, X did 20 commits and you only did one, look at how productive he is, what did you do all day???"
[23:12:33] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[23:12:55] <deniska> hjf: commit after each keypress, :w does push :D
[23:12:56] <hjf> what did i do? stick to the scope of the ticket and not refactor every fucking line?
[23:13:17] <[itchyjunk]> maybe you should talk to the manager and not irc then
[23:13:30] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:13:34] <hjf> deniska: change Prettier rules, reformat all, commit, reformat back...
[23:13:35] <[itchyjunk]> if you care enough, talk to management
[23:13:41] <[itchyjunk]> If not, it's just work for $
[23:13:48] <deniska> hjf: s/all/some files, and then some more/
[23:13:50] *** Quits: Spaceflight (uid423739@id-423739.ilkley.irccloud.com) ()
[23:14:00] <hjf> [itchyjunk]: i was fired from a job before because of this behavior
[23:14:09] *** Joins: Spaceflight (uid423739@id-423739.ilkley.irccloud.com)
[23:14:10] <hjf> sticking to the scope of the ticket, and only touch what's necessary
[23:14:25] <hjf> but it seems it's seen as a positive trait to refactor "while you're at it"
[23:14:43] <pyzozord> hjf: it's random things that get you fired in one company might give you credit in other
[23:14:49] <deniska> I fight the urge to refactor while I'm at it :D
[23:15:08] <hjf> and it's also common for this kind of people to fire as soon as they see something new and shiny elsewhere
[23:15:24] <[itchyjunk]> because you are passive aggressive?
[23:15:29] <hjf> i swear i've never seen so much job-hopping like i have in the past 6 months
[23:15:44] <[itchyjunk]> if you care about how other people spend their time to the point of getting angry, it would make for a hostile work env quickly
[23:15:57] <hjf> [itchyjunk]: you're missing the point
[23:16:10] <decker> [itchyjunk] you can just not participate... if it was me I'd talk to IRC to form a cogent argument to later address
[23:16:19] <[itchyjunk]> decker yes that too
[23:16:34] <hjf> when I told them I've worked for a company for 5 years their answer was "wow i could never work for more than a year at one company, i can't imagine working 5!!!"
[23:16:41] <[itchyjunk]> but saying you do all the work and everyone else gets the credit, either it's true and you are better off being fired
[23:16:53] <[itchyjunk]> or your attitude stinks and you'll get fired from a lot of places
[23:17:19] <[itchyjunk]> in the first case, why stick to that company?
[23:17:37] <decker> ya but bean counters be countin beans... if 20 > 1 isn't that 20x better?  
[23:17:38] <deniska> You tappy tappy tap on the keyboard for 8 hours, get paid, seems like a nice arrangement :)
[23:17:38] <[itchyjunk]> if you're good, find a less crappy work env where they appreciate your work
[23:18:06] <[itchyjunk]> otherwise you trade $ for mental health
[23:18:09] <hjf> i like the company. the owner is a nice folk. I worked with him from the beginning and we built something nice
[23:18:23] <[itchyjunk]> they fired you though
[23:18:29] <[itchyjunk]> maybe they don't share the sentiment
[23:18:33] <Gamah> deniska: they make you type for 8 hours?
[23:18:34] <user51> deniska: so that's what they mean by 10x..
[23:18:35] <Gamah> sounds miserable
[23:18:38] <hjf> uh? i'm talking about this current company
[23:18:50] <deniska> Gamah: just pretend when someone's walking nearby
[23:19:09] <decker> 'if youve done something right, noone can really be sure you did anything at all'  (Futurama); sorta if you end up the non-squeeky, but load bearing wheel you end up under valued
[23:19:09] *** Quits: Spaceflight (uid423739@id-423739.ilkley.irccloud.com) ()
[23:19:10] *** Quits: terminalpusher (~terminalp@2a01:586:9b10:1:fdf9:d5e5:78b7:60e0) (Remote host closed the connection)
[23:19:31] *** Joins: terminalpusher (~terminalp@2a01:586:9b10:1:fdf9:d5e5:78b7:60e0)
[23:19:40] <hjf> the other one they fired me after 6 weeks. the team lead was going to the office during the pandemic and expected the team to be there
[23:19:51] <[itchyjunk]> what is your complaint about the new one?
[23:19:51] <deniska> Actually you don't even have to pretend if you use a CLI IRC client like irssi
[23:19:57] <deniska> For normies it looks the same as vim
[23:20:14] *** Joins: Spaceflight (uid423739@id-423739.ilkley.irccloud.com)
[23:20:15] <hjf> ... when i was hired as a remote worker. because i was not even in the same country as the company, lol
[23:20:18] <[itchyjunk]> do any of your works provide free food?
[23:20:25] <[itchyjunk]> if yes, what type of food?
[23:20:46] <hjf> [itchyjunk]: i have no complaints for the current company, except that this guy is dragging reviews for days and days
[23:21:01] <hjf> and then when he finally does, it's just silly nitpicks
[23:21:11] <deniska> [itchyjunk]: my previous job gave us vouchers for a diner nearby
[23:21:17] <hjf> and even when it's stupid nitpicks like variable names, he still doesn't approve the PR. 
[23:21:25] <[itchyjunk]> deniska oh nice
[23:21:31] <[itchyjunk]> enough to cover the meal?
[23:21:41] <hjf> the owner of the company asks me when we're deploying... so i tell him yes, sorry, the PR hasn't been approved
[23:21:45] <deniska> [itchyjunk]: yeah
[23:21:48] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[23:21:50] *** Quits: password (~password8@user/password2) (Ping timeout: 260 seconds)
[23:22:49] <[itchyjunk]> I heard cali was trying to get IT companies to stop providing free food or somesuch
[23:22:54] <[itchyjunk]> cali is weird
[23:23:09] *** Quits: sh1r4s3 (~sh1r4s3@109-252-75-9.nat.spd-mgts.ru) (Ping timeout: 252 seconds)
[23:23:55] *** Quits: kek_1 (~kek_@2a02:168:200f:1f10:dcde:2774:1301:baad) (Ping timeout: 250 seconds)
[23:24:10] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 268 seconds)
[23:24:38] <hjf> it was probably providing in-campus food
[23:24:55] <deniska> my previous job wasn't an it company, I was a tech/data entry guy at a warehouse :)
[23:25:09] <hjf> because they hire thousands of people who only roam around campus and don't contribute to the city
[23:25:18] <[itchyjunk]> business around complained that they couldn't sell food because IT were providing their own food
[23:25:24] <[itchyjunk]> yeah
[23:25:27] <[itchyjunk]> which is wierd
[23:25:40] <[itchyjunk]> somehow they have to go spend their $ so surrounding food place?
[23:25:45] <[itchyjunk]> seems like a weird demand
[23:25:54] <[itchyjunk]> what's next? ban home cooked meals?
[23:25:56] <hjf> probably california is ok with food vouchers
[23:26:09] <deniska> I'm not in cali >_>
[23:26:13] <hjf> not with "food vouchers valid only inside company campus"
[23:26:52] <vdamewood> deniska: You're not?!
[23:27:03] <hjf> silicon valley has that problem. tech companies provide everything so basically you have people living in a bubble of campus => company shuttle service => home and back
[23:27:09] <pyzozord> I'm not sure but I think my new company will send me food home every day
[23:27:16] <[itchyjunk]> deniska from free food to no free food? you moved down in life!
[23:27:21] * vdamewood sends pyzozord foot.
[23:27:24] <[itchyjunk]> send food home?
[23:27:28] <[itchyjunk]> wtf never heard of that
[23:27:31] <vdamewood> s/food/
[23:27:33] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 252 seconds)
[23:27:36] <hjf> so you have thousands of people living in a city and they don't go to the city itself
[23:27:38] <deniska> [itchyjunk]: I'm ok with no free food if I'm making 3x more :)
[23:27:40] <pyzozord> no foot, only food
[23:27:44] <vdamewood> I can't typing right now.
[23:28:03] <[itchyjunk]> I think food is a nice perk
[23:28:06] * vdamewood gives pyzozord 30 cm.
[23:28:10] <[itchyjunk]> idk why businesses don't offer more of it
[23:28:23] <hjf> next step is company provided in-campus housing
[23:28:35] <[itchyjunk]> I thought fb did that
[23:28:37] *** Spaceflight is now known as spaceflight
[23:28:39] <[itchyjunk]> they don't?
[23:28:41] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:b484:addd:b6f6:fe4e)
[23:28:42] <hjf> so you don't even have to leave, ever
[23:28:47] <vdamewood> The last time I worked for a California-based company, they had a cafeteria right in the building.
[23:28:56] *** spaceflight is now known as spacecraft
[23:29:04] <vdamewood> I didn't live in California, though.
[23:29:06] *** spacecraft is now known as Spaceflight
[23:29:10] <hjf> [itchyjunk]: why would they offer you free something if they could, you know,.... NOT?
[23:29:15] <deniska> [itchyjunk]: many people have special needs and preferences around food, some prefer whatever they cook at home, and they'd rather have even a slightly bigger paycheck than a voucher which is useless to them
[23:29:22] <[itchyjunk]> to boost morals
[23:29:28] <pyzozord> vdamewood: so the wifi boosters suck, but they have one property that is quite useful. I noticed that I gett more stable connection to my original wifi network when I have the boosters (boosters have their own wifi network)
[23:29:35] <hjf> why would they give you vacation days if they can....NOT?
[23:29:47] <pyzozord> I think they scream loudly and that somehow scares away neighbors wifi
[23:29:50] <hjf> why would they give you medical insurance if they can, again, hear me out... NOT!?
[23:30:01] <[itchyjunk]> to boost morals
[23:30:26] <vdamewood> pyzozord: Just stand next to the access point.
[23:30:39] <hjf> i mean we had a tornado destroy an amazon warehouse with people inside
[23:30:42] <deniska> [itchyjunk]: probably 1/3 of people I worked with ignored the vouchers, or only spent them occasionally for bakery products from there because they didn't like the food there
[23:30:55] <[itchyjunk]> oh dang
[23:31:04] <[itchyjunk]> what about drinks then?
[23:31:11] <[itchyjunk]> everyone drinks something
[23:31:17] <[itchyjunk]> water, coffee, liquor?
[23:31:39] <hjf> a coworker a few years ago said "it would be nice if the company gave us uniforms so we don't have to wear our own clothes to work"
[23:32:09] <deniska> my current job provides free teabags and a sufficiently coffee-like substance in a coffee-machine :D
[23:32:18] <hjf> but, i insist: i prefer money. real money, not vouchers for shit i may or may not use
[23:32:24] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:32:36] <vdamewood> deniska: Coffee substitute?
[23:32:50] <Athas> 'Evening IRC people.
[23:33:01] <hjf> but this guy was kinda dumb, the  "companies should pay taxes but instead they pass them on in the product price to the final consumer" dumb
[23:33:04] <deniska> vdamewood: it's coffee, but my coffee snob coworkers don't use it much :)
[23:33:07] <vdamewood> Odding, Athas
[23:33:07] <GeDaMo> Hi Athas :)
[23:33:18] <[itchyjunk]> deniska oh nice
[23:33:25] <vdamewood> deniska: Coffee is coffee. Gimme!
[23:33:53] <deniska> I'm not a coffee person, I maybe drink a cup once in a week or two
[23:34:01] <[itchyjunk]> I could use some coffee right now
[23:34:10] <[itchyjunk]> but I don't wanna spend $8 on coffee
[23:34:15] *** Quits: teut (~teut@2401:4900:1c30:1de4:919b:82a3:cf8:ac12) (Quit: Client closed)
[23:34:16] <[itchyjunk]> idk if uni has cheap coffee somewhere
[23:34:18] <pyzozord> i am recently drinking few cups per week, I had years when I'd one or two coffees per day
[23:34:18] <vdamewood> Athas: Out of curiosity, did you get your name from the Mad Max-style D&D setting?
[23:34:23] <[itchyjunk]> they have a Starbucks behind the libraray
[23:34:34] <sonny> kinda like that ngl
[23:34:39] <pyzozord> and yeras where I wouldn't drink more than 1 cup ever few months
[23:34:40] <Athas> vdamewood: yes!  So many people nowadays think I stole it from Warcraft, but I actually stole it from way older material.
[23:35:19] <vdamewood> Athas: I have the original boxed set and MC volumes.
[23:36:45] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 265 seconds)
[23:37:18] *** Joins: _inky (~inky_@188.115.246.78)
[23:37:26] *** Quits: Guest34 (~Guest34@bras-base-mtrlpq2763w-grc-33-70-52-17-42.dsl.bell.ca) (Quit: Client closed)
[23:37:36] *** Joins: inlight (~inlight@157.35.17.204)
[23:37:37] *** Quits: inlight (~inlight@157.35.17.204) (Changing host)
[23:37:37] *** Joins: inlight (~inlight@user/inlight)
[23:40:17] <Athas> vdamewood: not bad.  I don't think I ever actually played in the setting.
[23:40:36] <vdamewood> Technically, neither have I.
[23:42:57] *** Quits: sonny (~sonny@8.6.144.252) (Ping timeout: 252 seconds)
[23:42:58] <decker> ug... Marching Cube volumes? no... what? oh...
[23:43:31] <pyzozord> mad max style d&d setting? You mean Dark Sun?
[23:43:42] *** Quits: Cyp (~cyp@213.237.85.9) (Remote host closed the connection)
[23:44:03] *** Quits: audiocat (~audio@user/audio) (Ping timeout: 252 seconds)
[23:44:08] *** Joins: Cyp (~cyp@213.237.85.9)
[23:44:42] <decker> many rpg games went very badly - they never really made it out of the lobby
[23:44:48] *** Quits: murii (~murii@2a02:a58:835a:1100:416e:d699:80b5:235d) (Remote host closed the connection)
[23:44:56] <BucetaRosa> most rpgs are terrible anyway
[23:45:06] <BucetaRosa> pyzozord: dark sun is one of the BESTS
[23:45:21] <[itchyjunk]> are List, Set, Map all interfaces? (Java)
[23:45:27] <BucetaRosa> yes
[23:45:36] <BucetaRosa> look at the oracle reference
[23:45:59] <BucetaRosa> I don't get why they ask textbook questions here
[23:46:17] <[itchyjunk]> because they want to
[23:46:23] <BucetaRosa> because they are lazy
[23:46:33] <[itchyjunk]> because different people learn differently
[23:46:36] <vdamewood> pyzozord: Yep.
[23:46:48] <decker> does java have a value type struct?
[23:46:52] <BucetaRosa> [itchyjunk]: that's a lame excuse. one simple click and you could have all these answers in the oracle reference
[23:46:55] <decker> aren't they all oh interfaces
[23:46:59] <pyzozord> BucetaRosa: they asks questions on all levels
[23:47:01] <vdamewood> decker: Monstrous Compendium :P
[23:47:09] <[itchyjunk]> BucetaRosa or I could ask here
[23:47:10] *** Joins: sonny (~sonny@8.6.144.252)
[23:47:12] <decker> vdamewood haha oh ya :) thanx
[23:47:14] <BucetaRosa> pyzozord: yeah! I don't see the real value of asking textbook questions
[23:47:24] <kmh> decker,  well class sort of serves the same pupose
[23:47:29] <BucetaRosa> it's definitely some psych problem
[23:47:32] <[itchyjunk]> well, the world doesn't revolve around where you see value
[23:47:47] <[itchyjunk]> see, now you're gaslighting.
[23:47:47] <pyzozord> BucetaRosa: lucky you :)
[23:47:58] <BucetaRosa> see? you pay some effort to give me clever answers, but you don't pay the same effort to do your own (simple) research
[23:48:00] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[23:48:02] <decker> kmh maybe static classes?
[23:48:05] <BucetaRosa> definitely a psych issue
[23:48:09] <[itchyjunk]> I am doing my research.
[23:48:15] <BucetaRosa> was the oracle site not clear?
[23:48:17] <[itchyjunk]> I am asking humans.
[23:48:23] <[itchyjunk]> Was I not clear?
[23:48:24] <BucetaRosa> you never have been there, right?
[23:48:28] <[itchyjunk]> I prefer learning this way.
[23:48:35] <BucetaRosa> you are a lonely soul
[23:48:38] <[itchyjunk]> You don't have to like it.
[23:48:41] * BucetaRosa pities you
[23:48:46] <kmh> decker, well you can have instances of struct
[23:48:57] <[itchyjunk]> Start you own channel and stop people from asking questions from oracle.
[23:49:00] <decker> kmh but they're still really references/pointers?
[23:49:06] <BucetaRosa> I am not stopping anyone
[23:49:08] <kmh> asszming we're talking the classic c struct
[23:49:09] <decker> I misread 'interfaces' as 'references'
[23:49:09] <BucetaRosa> I am just intrigued
[23:49:17] <[itchyjunk]> You sure are calling people mentally ill.
[23:49:22] <[itchyjunk]> Maybe cut that out?
[23:49:25] <BucetaRosa> if you feel stopped by me, then you know you are doing something wrong
[23:49:36] <edgar-rft> you can ask the Edgar oracle instead :-)
[23:49:38] <kmh> decker, yes but that's sort of true for almost anything
[23:49:40] <[itchyjunk]> I feel annoyed by you calling me mentally ill.
[23:49:47] <BucetaRosa> i am not calling you anything
[23:49:49] <[itchyjunk]> Is that hard to understand?
[23:49:49] <pyzozord> BucetaRosa: no need for that, we try to be friendly here
[23:50:07] <[itchyjunk]> BucetaRosa when you make the channel rules here, fell free to do as you pelase
[23:50:09] <decker> kmh C# has 'struct' which is for like points x/y/z type stuff that's more like a number
[23:50:21] <BucetaRosa> I don't make any rules either :)
[23:50:22] *** Joins: akevinhuang2 (~thekevinh@user/thekevinhuang)
[23:50:28] <BucetaRosa> just trying to understand how people work
[23:50:31] <decker> kmh and C/C++ are flexible ... but ya mostly such things are pointers in everything else
[23:50:33] <[itchyjunk]> That part is obvious.
[23:50:38] <[itchyjunk]> There is a psychology channel
[23:50:46] <[itchyjunk]> but maybe you should just read documentation on people
[23:50:46] <kmh> decker, yes but what the different to a class without any explicit method?
[23:50:48] <[itchyjunk]> instead of asking on irc
[23:50:55] <BucetaRosa> [itchyjunk]: now YOU are trying to tell me where I should ask my questions :)
[23:51:00] <BucetaRosa> you are curious :)
[23:51:14] <[itchyjunk]> I'm suggesting you channels where psychology is relevant, eys
[23:51:48] <BucetaRosa> aand I was suggesting you to be more efficient in your 'research' :D
[23:51:48] *** Joins: MaghOz (~maghoz@2001:4bc9:801:f399:540d:f952:207a:4)
[23:51:50] <[itchyjunk]> turns out there is a secret "visibility" for fields in java
[23:52:00] <decker> kmh hmm it's more about the data storage than the methds I was talking about... but what?
[23:52:01] <[itchyjunk]> I am plenty efficient.
[23:52:07] <edgar-rft> let's take ##programming to a psychiatric level
[23:52:19] <[itchyjunk]> edgar-rft okay which language to use?
[23:52:25] <pyzozord> wouldn't the visability field be just what you control with public/protected/private?
[23:52:25] <[itchyjunk]> html?
[23:52:37] <edgar-rft> english is sufficient for that
[23:52:38] <[itchyjunk]> there is a "package" level visibility
[23:52:41] <[itchyjunk]> but is has no keyword
[23:52:54] <[itchyjunk]> if you specify nothing, it's package visibility
[23:53:01] <[itchyjunk]> I thought specifying nothing = public
[23:53:08] <[itchyjunk]> but woe! I was wrong
[23:53:09] *** Quits: akevinhuang (~thekevinh@user/thekevinhuang) (Ping timeout: 268 seconds)
[23:53:12] <sonny> no, that's about the default package
[23:53:13] <pyzozord> oh right, I actually remember something about that
[23:53:25] <[itchyjunk]> sonny no to what part?
[23:53:40] <[itchyjunk]> not specifying visibility turns it to `package` visibility
[23:53:45] <[itchyjunk]> which is different from public
[23:53:59] <[itchyjunk]> and there is no keyword to get package level visibility either
[23:54:13] <sonny> yeah, it's having a package name
[23:54:36] <[itchyjunk]> `packagename` int variable name ?
[23:54:39] <sonny> public, protected, private are what specify the visibility 
[23:54:40] <[itchyjunk]> I don't think that works
[23:54:49] *** Joins: flakland (~flaknet99@32.211.211.39)
[23:54:50] <[itchyjunk]> sonny so does not having anything.
[23:54:56] <[itchyjunk]> there is 4 visibility
[23:54:59] <[itchyjunk]> You're missing one.
[23:54:59] <sonny> package is the namespace in whcih you make these members available
[23:55:10] <sonny> there is always a package
[23:55:19] <[itchyjunk]> what does "always" mean?
[23:55:24] <[itchyjunk]> there is 4 visibility
[23:55:25] <BucetaRosa> I have a package for you
[23:55:29] <[itchyjunk]> 3 has keyword, 1 doesn't
[23:55:38] <BucetaRosa> there *are
[23:55:49] * BucetaRosa lends an english book to [itchyjunk]
[23:55:52] <sonny> hm, not sure I understand then
[23:56:37] <decker> are you going to shar [itchyjunk] or is it 'i know something you don't know'
[23:56:38] <[itchyjunk]> idk if there is more there to understand. but I learned about it only 2 days ago. "package level" visibility
[23:56:46] <[itchyjunk]> share what?
[23:56:55] <decker> the visibility keywords
[23:56:58] <[itchyjunk]> there is no keyword for it! I can't list the keyword
[23:57:13] <[itchyjunk]> public/private/restricted/<no keyword>
[23:57:13] <decker> so... how do you control it? and what's it matter if you can't?
[23:57:19] <sonny> java package is like c++ namespace but better
[23:57:24] <BucetaRosa> it's a secret keyword
[23:57:28] <decker> I see blank is more like a none of the above than anything you can specify
[23:57:33] <[itchyjunk]> you control it by not giving it a keyword
[23:57:42] <decker> yes... char* != unsigned char* != signed char*
[23:57:43] <[itchyjunk]> but it is not non specific
[23:57:46] <[itchyjunk]> it's very specific
[23:57:50] <[itchyjunk]> it's package visibilty
[23:57:59] <[itchyjunk]> its well defined internally, from what I understand
[23:59:28] *** Quits: MaghOz (~maghoz@2001:4bc9:801:f399:540d:f952:207a:4) (Quit: WeeChat 3.3)
[23:59:43] *** Joins: MaghOz (~maghoz@2001:4bc9:801:f399:540d:f952:207a:4)
[23:59:47] <[itchyjunk]> would need to ask the java gods about the details later
[23:59:59] <BucetaRosa> what details?
