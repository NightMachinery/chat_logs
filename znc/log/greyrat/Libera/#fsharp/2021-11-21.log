[00:26:54] *** Joins: jinsun__ (~quassel@user/jinsun)
[00:30:23] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 264 seconds)
[01:13:12] *** Quits: kuribas (~user@ptr-25vy0i85dt12hx5mopu.18120a2.ip6.access.telenet.be) (Quit: ERC (IRC client for Emacs 26.3))
[01:43:32] *** Quits: stenno (~stenno@user/stenno) (Read error: Connection reset by peer)
[01:43:50] *** Joins: stenno (~stenno@user/stenno)
[01:52:43] *** jinsun__ is now known as jinsun
[03:51:13] *** stenno is now known as stenno\OK
[05:30:24] *** lind{at}yahoo is now known as HeyMonopoly
[05:30:46] *** HeyMonopoly is now known as lind{at}yahoo
[05:32:21] *** lind{at}yahoo is now known as HeyMonopoly
[05:38:20] *** HeyMonopoly is now known as IWillIAvoidWhate
[05:40:42] *** IWillIAvoidWhate is now known as JasonLind
[06:03:43] *** JasonLind is now known as lind{at}yahoo
[13:36:25] *** Quits: stenno\OK (~stenno@user/stenno) (Ping timeout: 265 seconds)
[13:52:52] *** Joins: stenno\OK (~stenno@user/stenno)
[14:47:49] *** Quits: stenno\OK (~stenno@user/stenno) (Quit: WeeChat 3.2)
[14:47:58] *** Joins: stenno (~stenno@user/stenno)
[15:27:43] <stenno> is it correct that a monad can have any number of functors but at least the return/bind ones?
[15:27:44] *** Joins: Deide (~deide@user/deide)
[15:27:44] *** Joins: jinsun_ (~jinsun@user/jinsun)
[16:03:59] <biberu> stenno: a functor is something that supports a structure preserving map, e.g mapping over a list allows you to change the contained values, but the result will still always be a list of something
[16:05:49] <biberu> stenno: monads need to obey three laws (left and right identity, associativity), you need some way to get a value into the monad (return/unit/...), and some way to combine them / handle transitions (bind/flatMap/chain/...)
[16:06:48] *** Quits: lind{at}yahoo (uid486956@tinside.irccloud.com) (K-Lined)
[16:10:30] <biberu> stenno: if you have return and bind you can construct map from those
[16:10:53] <biberu> stenno: not sure what you mean by any number of functors?
[16:11:52] <stenno> like, does a monad consist of _exactly_ a unit and a bind?
[16:23:03] <biberu> stenno: fp in scala (which is a really good book btw) defines it as "a monad is an implementation of one of the minimal sets of monadic combinators, satisfying the laws of associativity and identity", with three sets of combinators: (unit, flatmap), (unit, compose), and (unit, map, join), p. 196 - 197
[16:24:34] <biberu> stenno: given map and join you can construct flatmap, or given compose you can construct flatmap
[17:02:10] <stenno> hmm i see
[17:02:17] <stenno> thanks
[20:20:10] *** Quits: dolch (~ftw@dolch.ca) (Quit: Reconnecting)
[20:20:24] *** Joins: dolch (~ftw@dolch.ca)
[20:30:09] *** Quits: MatthiasVance (sid21828@about/csharp/matthiasvance) (Remote host closed the connection)
[20:30:10] *** Quits: _0x1d3 (sid43116@tinside.irccloud.com) (Remote host closed the connection)
[22:37:02] *** Joins: MatthiasVance (sid21828@about/csharp/matthiasvance)
[22:37:49] *** Joins: _0x1d3 (sid43116@id-43116.tinside.irccloud.com)
