[00:04:11] <Corbin> Sure, although that's probably not your actual question.
[00:08:01] <byob> i'm looking at the microkanren implementation here: https://github.com/jasonhemann/microKanren/blob/master/microKanren.scm and struggling to understand the disj and conj
[00:08:45] <byob> what exactly is s/c storing? i know it's a state and a counter, but what exactly is a "state" defined as
[00:09:33] <Corbin> http://webyrd.net/scheme-2013/papers/HemannMuKanren2013.pdf may demystify it for you. The state is a map of all of the partially-defined logic variables, mapping each variable to its definition.
[00:10:16] <byob> i've tried to read the paper a few times
[00:10:29] <byob> so state is just a list of (variable, value)?
[00:11:38] <Corbin> I think so, yeah. The main trick to understanding conjunction and disjunction is via the underlying monad, which can be a challenge.
[00:11:53] <byob> what is call/fresh trying to do? doesn't it just take in (s, c) and return (s, c+1)?
[00:13:21] <byob> i've been dwelling on the code and paper for a few days now, with little success :/
[00:13:59] <Corbin> Yeah, basically, that's all it does. FWIW I didn't understand this paper until I implemented it myself; writing a logic monad by hand is educational.
[00:14:17] <byob> i'm trying to implement it haha
[00:16:25] <byob> is "walk" basically an association list lookup function value)]
[00:16:34] <byob> sorry, ignore the value*
[00:16:49] <byob> i don't read scheme well... ):
[00:18:51] <Corbin> Perhaps e.g. Python would be better? "minikanren python" in a search engine produces many examples.
[02:12:05] <Perryman> I had to backtrack from miniKanren -> Reasoned Schemer -> Little Schemer.  It makes more sense actually typing it into the interpreter than just reading it.
[03:29:54] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[03:30:25] *** Joins: hendursaga (~weechat@user/hendursaga)
[03:33:25] <byob> hmm
[03:33:30] <byob> i will check out the reasoned schemer
[04:57:45] *** Quits: byob (~byob@192.54.222.146) (Ping timeout: 256 seconds)
[06:22:35] *** Quits: hendursaga (~weechat@user/hendursaga) (Quit: hendursaga)
[06:23:05] *** Joins: hendursaga (~weechat@user/hendursaga)
[11:35:27] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:39:21] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[22:07:43] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[22:08:21] *** Joins: hendursaga (~weechat@user/hendursaga)
[22:15:03] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[22:15:30] *** Joins: hendursaga (~weechat@user/hendursaga)
