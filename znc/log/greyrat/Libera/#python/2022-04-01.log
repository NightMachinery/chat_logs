[00:00:19] *** Joins: Xardas (~Xardas@149.233.51.127)
[00:00:35] <SnoopJ> I can't really make sense of this paste, it doesn't seem to plot anything
[00:00:35] <orbisvicis_> my guess is that nans are drawn as a separate layer (ax.setfacecolor) so they're not being interpolated with the current layer,... but it happens after turning interpolation off
[00:00:42] *** Joins: jflabonte (~jflabonte@bras-base-qubcpq0634w-grc-16-174-89-201-64.dsl.bell.ca)
[00:01:08] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 272 seconds)
[00:01:10] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:cde9:ec1e:3b73:a5d6)
[00:02:20] *** Quits: Guest99 (~Guest99@102.118.149.135) (Quit: Connection closed)
[00:02:28] *** Quits: mike18 (~geri@216.200.232.252) (Ping timeout: 246 seconds)
[00:02:37] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[00:02:59] <orbisvicis_> SnoopJ: oops: https://bpa.st/AHMA
[00:03:10] <SnoopJ> orbisvicis_, they aren't really drawn at all, in my experience
[00:03:27] * SnoopJ turns this new paste into a complete program that he can run
[00:04:02] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[00:06:31] *** Quits: tomeaton17 (~tomeaton1@2a0c:5bc0:40:2e2f:c50d:a851:5c8f:3d64) (Quit: Client closed)
[00:08:15] <orbisvicis_> SnoopJ: full program: https://bpa.st/5X2A
[00:09:05] *** Quits: jpn_ (~jpn@user/jpn) (Quit: leaving)
[00:09:08] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 260 seconds)
[00:09:32] *** Quits: greedom (~greedom@p200300de671b0100735cbed970ddf0f0.dip0.t-ipconnect.de) (Remote host closed the connection)
[00:09:38] <SnoopJ> orbisvicis_, your NaNs aren't being drawn "larger," it's an optical illusion. This is noticeable if you make the array much smaller (i.e. a 10x10)
[00:09:46] *** Joins: jpn (~jpn@user/jpn)
[00:09:56] *** Quits: cuhela (~cuhela@188.119.45.227) (Quit: Leaving)
[00:10:22] *** Joins: greedom (~greedom@p200300de671b0100735cbed970ddf0f0.dip0.t-ipconnect.de)
[00:10:32] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[00:10:33] <orbisvicis_> SnoopJ, ??
[00:10:43] <SnoopJ> orbisvicis_, imshow() does not have a concept of size
[00:10:55] <SnoopJ> You are saying that your nans are "drawn larger." This is nonsense
[00:12:11] *** Joins: cheater (~Username@user/cheater)
[00:12:40] <SnoopJ> orbisvicis_, e.g. https://bpa.st/6LTA
[00:13:22] <SnoopJ> the contrast between different shades of blue is really hard to see in the 1000x1000, but the bright yellow stands out. The effect is that it *appears* that they are larger elements. They aren't.
[00:13:23] <orbisvicis_> SnoopJ: https://i.ibb.co/jhnhvKc/large-nans.png
[00:13:36] <SnoopJ> see above.
[00:13:54] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[00:15:27] *** Quits: gardintrapp (~oddbjorn@206.51-174-232.customer.lyse.net) (Remote host closed the connection)
[00:16:10] <SnoopJ> It's possible matplotlib is doing some kind of trickery to represent 1000 distinct values in 461 pixels in that example, maybe
[00:16:16] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[00:16:28] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Read error: Connection reset by peer)
[00:17:00] *** Quits: jpn (~jpn@user/jpn) (Quit: Lost terminal)
[00:17:25] <orbisvicis_> SnoopJ: every dot is the same color in both images (easy to see at 10x10) so the yellow should stand out equall yin both
[00:17:44] *** Joins: l4yer (~l4yer@user/l4yer)
[00:18:12] <rairden> I learned that `sys.path` changes depending on what user you are. The youtube scripts suddenly work as root. I then ran rm -rf .local folder (/json/) and suddenly youtube-dl works as non-root.
[00:18:20] *** Joins: jpn (~jpn@user/jpn)
[00:18:21] <rairden> I then can also magically run `pip uninstall json-extensions` without that crashing.
[00:18:29] *** Joins: AndroUser2 (~androirc@2401:4900:3b12:b7c:f17:ace:a5f4:907a)
[00:18:29] *** Quits: AndroUser2 (~androirc@2401:4900:3b12:b7c:f17:ace:a5f4:907a) (Client Quit)
[00:19:07] <SnoopJ> orbisvicis_, the images produced by my paste are identical (aside from the title) on my end: https://imgur.com/a/Vrrav6p
[00:20:20] <SnoopJ> Possibly imshow() does interpolation when you want to represent 1000 values with fewer than 1000 pixels, and the NaNs propagate a little bit
[00:20:27] <SnoopJ> which would make them appear larger
[00:20:58] <orbisvicis_> if the images are identical at 10x10 they should be identical at 1000x1000. There are 101 unique values in each array and we are using a 256 color cmap
[00:21:25] <SnoopJ> The library is not living up to your "should"
[00:22:02] <orbisvicis_> if you zoom in to the 1000x1000 image slightly you see the yellow pixels surrounded in blue are tinged with green
[00:22:18] <SnoopJ> are my messages being received?
[00:22:22] <orbisvicis_> showing that matplotlib is interpolating the nan color with local pixels
[00:22:26] *** Quits: Blankspace (~androirc@user/blankspace) (Ping timeout: 252 seconds)
[00:22:33] *** Joins: Jacques (~Jacques@cpe-173-172-37-214.tx.res.rr.com)
[00:22:41] *** Quits: boris_ (m-vwhg2g@152.70.163.76) (Remote host closed the connection)
[00:23:25] <orbisvicis_> which happens despite interpolation=None
[00:23:46] <SnoopJ> You can't cram 1000 values of data into less than 1000 pixels without doing some kind of resampling
[00:23:56] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Remote host closed the connection)
[00:23:56] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[00:24:02] *** Joins: boris_ (m-vwhg2g@152.70.163.76)
[00:24:06] *** Quits: greedom (~greedom@p200300de671b0100735cbed970ddf0f0.dip0.t-ipconnect.de) (Remote host closed the connection)
[00:24:22] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[00:24:56] *** Joins: greedom (~greedom@p200300de671b0100735cbed970ddf0f0.dip0.t-ipconnect.de)
[00:25:10] <SnoopJ> but hm, even if the image is much larger it still does this
[00:25:25] *** Quits: rememberYou (~someone@user/rememberyou) (Remote host closed the connection)
[00:25:29] <SnoopJ> I don't know why it's doing that, you may need to get into the guts of imshow() to figure this out
[00:25:52] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:25:58] <orbisvicis_> yeah except the nans are being resampled in one (and blended out) but not resampled in the other (because the nan is a separate layer and not part of the image). I think the problem is worse, that as you zoom out nans are always shown, in effect "enlarging" the pixel
[00:26:20] <SnoopJ> orbisvicis_, only one of these plots is drawing a NaN
[00:26:26] <Helmholtz> How to remove unused packages of a script from venv?
[00:26:37] <SnoopJ> testi just does what makes sense: it replaces what would be a NaN with a sentinel value
[00:26:38] <Helmholtz> (I mean how to detect unused packages)
[00:26:40] <grym> Helmholtz: blow the venv away, remake it
[00:26:49] <Helmholtz> lol
[00:26:51] <grym> no, really
[00:26:55] <grym> pip doesn't do recursive uninstalls
[00:27:02] <vaio> is this the brave new world already ?
[00:27:04] <grym> so just wipe it out and remake it with the deps you have now
[00:27:11] <vaio> wait, nvm; sorry.
[00:27:17] <grym> vaio: i am perilously low on soma, so i hope not
[00:27:23] <Helmholtz> grym, good idea
[00:27:30] <SnoopJ> it's the best way to do it, yea
[00:27:33] <orbisvicis_> SnoopJ, and then that value gets resample out with scale
[00:27:48] <SnoopJ> orbisvicis_, I don't know what to tell you. If you really really want to plot NaNs, be prepared to deal with NaN propagation.
[00:27:49] *** Joins: jinsun__ (~jinsun@user/jinsun)
[00:27:50] <vaio> (iirc Helmholtz is a name from that book; but it might also be some kind of usual first name :))
[00:28:10] <Helmholtz> vaio, what name do you see?
[00:28:25] <SnoopJ> in the imshow() case, anyway. NaNs cause other kinds of failures in other matplotlib drawing routines
[00:28:46] *** Joins: Vision (~Vision@023-084-128-214.res.spectrum.com)
[00:28:58] *** Quits: jinsun (~jinsun@user/jinsun) (Ping timeout: 260 seconds)
[00:29:19] <jinsun_> antikythera: matrix does weird stuff, your nick is Helmholtz in irc
[00:29:21] <grym> vaio: oh, i always think of the resonator
[00:30:30] <vaio> im not sure to understand :s
[00:30:31] <orbisvicis_> SnoopJ: on the bright side, matplotlib.colors.ListedColormap.__call__ is a ufunc, so I can easily convert my single-value array to an rgb array
[00:30:37] <vaio> but yeah, nvm, sorry interrupting.
[00:30:44] *** Quits: philipp64 (~philipp64@65.129.128.199) (Quit: philipp64)
[00:30:49] <vaio> it was pretty lame of me
[00:30:56] <orbisvicis_> which allows me to replace nans with a sentinal value that's not part of the colormap
[00:31:09] <SnoopJ> orbisvicis_, replacing them is definitely going to give you fewer surprises
[00:31:26] <SnoopJ> it might create other headaches but I imagine they'll be more tractable than whatever the heck is happening under the hood here
[00:31:28] *** Joins: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com)
[00:31:31] *** Joins: fofoni (~fofoni@user/fofoni)
[00:31:36] <orbisvicis_> hmm agreed but hrrm anyway
[00:32:03] *** Quits: fofoni (~fofoni@user/fofoni) (Client Quit)
[00:32:19] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[00:32:24] <SnoopJ> oh you know what, my attempt to change figsize wasn't accounting for the axes
[00:32:42] *** Joins: davidlowryduda (~davidlowr@2601:197:600:1210:295d:ca2a:3a31:19f2)
[00:33:17] <SnoopJ> I strongly suspect that if the data area is the "right number" of pixels you could avoid the NaN propagating to more than one pixel
[00:34:25] <orbisvicis_> SnoopJ, do you mean imshow(extents=[...]) ?
[00:34:51] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[00:34:55] <orbisvicis_> oh you mean setting the plot axes size to the array size?
[00:34:55] *** Quits: Optimus (~risto@87.227.227.147) (Remote host closed the connection)
[00:34:57] <SnoopJ> yes
[00:35:11] *** davidlowryduda is now known as dld
[00:35:20] <SnoopJ> I tried to do this by passing `figsize` but that is for the whole figure, not just the region the data is drawn into
[00:35:39] <SnoopJ> I think you'd have to do something even more obnoxious to try and do what I was getting at
[00:36:03] <orbisvicis_> hmm extents just maps the array to some cartesian region, nothing about setting the pixel size of just the axes
[00:36:07] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 260 seconds)
[00:36:25] <orbisvicis_> SnoopJ: probably just easier to replace the nans
[00:36:31] <SnoopJ> "pixel size" is something you have to bodge in yourself anyway based on whatever the dpi is
[00:36:43] <SnoopJ> so yea, waaaay easier to replace them even if it worked exactly as I'd thought it might
[00:37:58] *** Joins: nomic (~nomic@185.217.117.233)
[00:38:27] *** Quits: hanetzer (~hanetzer@user/hanetzer) (Ping timeout: 260 seconds)
[00:38:45] *** Joins: gatto (~henry@88-109-69-64.dynamic.dsl.as9105.com)
[00:38:59] *** Parts: bancroft (~bancroft@user/bancroft) (WeeChat 3.2)
[00:40:03] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 260 seconds)
[00:42:04] *** Joins: cuhela (~cuhela@188.119.45.227)
[00:42:37] *** Quits: gitly (~gitly@185.69.145.79) (Quit: WeeChat 3.4.1)
[00:42:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[00:43:25] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[00:43:53] *** Joins: wyclif (~wyclif@user/wyclif)
[00:44:42] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 260 seconds)
[00:44:51] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:45:23] *** Joins: jmd (~user@de.cellform.com)
[00:45:26] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[00:45:35] *** Quits: magla (~gelignite@d5362fd7.access.ecotel.net) (Quit: Stay safe!)
[00:45:37] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[00:46:44] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[00:47:19] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[00:47:37] *** Lord_of_Life_ is now known as Lord_of_Life
[00:49:08] *** Joins: hiroshi_ (~freedom@151.37.65.224)
[00:50:32] <SnoopJ> huh, I didn't realize pylint could catch this mistake: `logger.info("Here's some data: ", data)`
[00:50:40] *** Joins: lntl (~joey@50.234.12.38)
[00:51:04] *** Joins: jpn (~jpn@user/jpn)
[00:53:08] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[00:53:28] <Helmholtz> vaio, no, it's cool. search antikythera mechanism (sorry offtopic)
[00:53:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[00:54:58] *** Joins: wyclif (~wyclif@user/wyclif)
[00:55:14] <SnoopJ> It's also the name of a rather influential 19c. German physicist :)
[00:55:14] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[00:55:23] *** Joins: fedegin (~fede@i5E863AFE.versanet.de)
[00:57:08] *** Quits: Jacques (~Jacques@cpe-173-172-37-214.tx.res.rr.com) (Ping timeout: 250 seconds)
[00:57:37] *** Parts: fedegin (~fede@i5E863AFE.versanet.de) ()
[00:57:46] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 246 seconds)
[00:59:02] *** Quits: data68 (~data@2a02:908:a67:2ce0:c23f:d5ff:fe6c:da60) (Quit: WeeChat 1.4)
[00:59:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[01:00:23] *** Quits: gatto (~henry@88-109-69-64.dynamic.dsl.as9105.com) (Quit: WeeChat 1.9.1)
[01:00:28] *** Quits: vlado (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c) (Ping timeout: 260 seconds)
[01:00:30] *** Joins: wyclif (~wyclif@user/wyclif)
[01:00:31] *** Joins: kwak (kwak@2605:6400:20:b4:6caa:ad8a:5455:f45f)
[01:01:03] *** Quits: calamari (~jjohnston@209.104.4.210) (Quit: Leaving)
[01:02:16] <lntl> I love list comprehensions. They're my favorite way to iterate because of how readable they are, not to mention how performant they are.
[01:02:29] *** Joins: vlado (~vlado@43.241.70.137)
[01:02:47] *** Quits: TheCat (~TheCat@user/z-cat) (Ping timeout: 250 seconds)
[01:02:55] <lntl> I also heard that there are cases where itertools can outperform. Is that the case?
[01:03:40] <lntl> https://stackoverflow.com/questions/49631326/why-is-itertools-chain-faster-than-a-flattening-list-comprehension
[01:03:59] *** Quits: MerrinX (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.4.1)
[01:04:36] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: caveman)
[01:05:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[01:06:05] *** Joins: wyclif (~wyclif@user/wyclif)
[01:07:13] *** Quits: orbisvicis_ (~orbisvici@user/orbisvicis) (Ping timeout: 246 seconds)
[01:07:29] <sco1> You can benchmark your code with both versions in order to find out if it's the case or not
[01:08:05] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 252 seconds)
[01:08:30] *** Quits: PJBoy (~PJBoy@user/pjboy) (Killed (tantalum.libera.chat (Nickname regained by services)))
[01:08:36] *** Joins: PJBoy (~PJBoy@user/pjboy)
[01:10:59] <ezakimak> I'm starting a flask app with host="0.0.0.0" but it's not binding to all ip addresses, only the first ip on the default interface
[01:12:17] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu) (Quit: Leaving)
[01:13:53] *** Joins: TheCat (~TheCat@user/z-cat)
[01:15:10] <ezakimak> nm. it is, just reports it wrong.
[01:16:02] *** Quits: TheCat (~TheCat@user/z-cat) (Remote host closed the connection)
[01:16:29] *** Joins: TheCat (~TheCat@user/z-cat)
[01:17:01] *** Quits: cuhela (~cuhela@188.119.45.227) (Ping timeout: 246 seconds)
[01:17:10] *** Quits: greedom (~greedom@p200300de671b0100735cbed970ddf0f0.dip0.t-ipconnect.de) (Remote host closed the connection)
[01:17:21] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[01:18:07] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:19:28] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 246 seconds)
[01:20:52] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[01:21:07] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:21:09] *** Joins: TheCat_ (~TheCat@user/z-cat)
[01:21:25] *** Quits: TheCat (~TheCat@user/z-cat) (Ping timeout: 250 seconds)
[01:22:03] *** Joins: jpn (~jpn@user/jpn)
[01:24:22] *** Quits: darksun (~darksun@user/darksun) (Quit: Lost terminal)
[01:25:39] *** Joins: dre (~dre@2001:8003:c932:c301:941f:1abe:5ede:ae67)
[01:25:53] *** Joins: zodd (~zodd@84-106-62-193.cable.dynamic.v4.ziggo.nl)
[01:28:49] *** Joins: wallbroken (wallbroken@user/wallbroken)
[01:28:51] <wallbroken> hello
[01:28:57] <wallbroken> i want to install this: https://github.com/simone36050/PosteID-seed-extractor
[01:29:04] <wallbroken> but i don't trust the authors
[01:29:13] <wallbroken> is there a way to install them safely?
[01:29:39] <zodd> I am trying to validate a PDF file inside a ZIP file using code. It errors. Why please? https://paste.debian.net/hidden/baa145fd/
[01:29:55] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[01:30:27] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[01:30:50] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[01:30:57] *** Quits: Enitin (~Enitin@82.180.145.223) (Ping timeout: 250 seconds)
[01:31:50] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[01:32:56] <bjs> wallbroken: define "safely", if you don't trust the authors then why would you trust the thing you installed at all
[01:33:20] *** Quits: lakrass (~lakrass@user/lakrass) (Quit: WeeChat 3.5)
[01:33:39] <wallbroken> by "safely" i mean that i want to make that after launching it, i can remove all of them
[01:33:45] <wallbroken> some sort of "sandbox"
[01:33:52] *** Joins: hanetzer (~hanetzer@user/hanetzer)
[01:34:12] <SnoopJ> zodd, read() returns a bytes object, but PdfFileReader() expects a file-like object. try replacing with: `from io import BytesIO; PyPDF2.PdfFileReader(BytesIO(ziparc.read(...)))`
[01:34:13] <wallbroken> I just want to test it to know if i can trust it
[01:34:31] *** Quits: jochum (~quassel@user/jochum) (Quit: No Ping reply in 180 seconds.)
[01:34:33] <SnoopJ> hm, or maybe zipfile can do that for you
[01:34:37] <bjs> wallbroken: remove all of what?
[01:34:45] <phy1729> I'd read the code. Things can act differently when testing
[01:34:52] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 246 seconds)
[01:34:55] <spaceone> Do i have to DECREF() every object I create via the C-API ? or only those given from Python code?
[01:35:07] <wallbroken> bjs: all of dependencies it installs
[01:35:35] <bjs> wallbroken: well it's just a .py file and the .py file itself doesn't install anything
[01:35:47] <SnoopJ> spaceone, you need to decrement any objects for which a reference is disappearing, is the unsatisfying answer. When exactly you'll need to do that depends on exactly what you're doing. This is a pain, and it's a main reason to avoid using the C-API directly
[01:35:56] *** Joins: jochum (~quassel@user/jochum)
[01:35:58] <wallbroken> bjs: false
[01:36:03] <bjs> wallbroken: it just has a file containing the names of the dependencies and is asking you to install them yourself
[01:36:11] <wallbroken> pip install -r requirements.txt
[01:36:14] <bjs> wallbroken: false?
[01:36:26] <DPA> What's the nicest way to iterate over a list with a sliding window of 2 elements? So for [1,2,3,4], i'd like (1,2),(2,3),(3,4)
[01:36:51] <wallbroken> it needs dependencies from requirements.txt
[01:36:52] <SnoopJ> DPA, zip the list with an offset version of itself: `zip(lst, lst[1:])`
[01:37:00] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[01:37:08] <DPA> Perfekt, thanks!
[01:37:09] <bjs> wallbroken: yes it's asking you to run pip yourself to install the dependencies, the actual code isn't doing anything. So you can `pip uninstall` anything it installed when you're done.  You can use a venv or something and just delete it after if you just don't want to keep the installed depenedncies around
[01:37:12] <bjs> but it's not a sandbox or anything
[01:37:32] <SnoopJ> DPA, if you need to do this with some iterable that's not a sequence, there's a way to do it with itertools too, but if it's a list this spelling is most convenient
[01:37:39] <spaceone> SnoopJ: ok, sounds complicated. "disappearing" means that no-one further uses it, e.g. if I create the instance in a loop and only use it inside of the loop temporarily
[01:37:50] *** Quits: matdev (~matdev@2a01:6e60:10:793:666:feed:dead:beef) (Remote host closed the connection)
[01:37:53] <grym> wallbroken: you could install it in a docker container or a VM, if you wanted
[01:38:37] <SnoopJ> spaceone, do you know how refcounting garbage collection works?
[01:39:06] <bjs> wallbroken: grym: yeah Python itself has no "sandboxing" and really there is no "safe" way to run Python code.
[01:39:14] <spaceone> SnoopJ: i think yes
[01:39:15] <grym> bjs: just so
[01:39:40] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[01:39:42] <grym> adjust your paranoia dial as a function of threat assessment, etc.
[01:40:06] <SnoopJ> spaceone, okay, well, the refcount needs to down whenever you know that there is one less reference to an object, often because one object holding a reference to another is going away.
[01:40:52] *** Joins: wakeup (~wakeup@user/wakeup)
[01:40:53] *** Quits: justyb11 (~justyb@64.253.212.72) (Quit: Leaving)
[01:41:32] *** Quits: TheCat_ (~TheCat@user/z-cat) (Remote host closed the connection)
[01:42:45] *** Joins: TheCat (~TheCat@user/z-cat)
[01:43:32] *** Quits: TheCat (~TheCat@user/z-cat) (Remote host closed the connection)
[01:44:00] *** Joins: TheCat (~TheCat@user/z-cat)
[01:44:06] *** Quits: wakeup (~wakeup@user/wakeup) (Client Quit)
[01:44:18] *** Quits: TheCat (~TheCat@user/z-cat) (Remote host closed the connection)
[01:44:56] *** Joins: Enitin (~Enitin@82.180.145.226)
[01:45:01] *** Joins: Amadiro_ (~Amadiro@45.154.138.90)
[01:46:12] *** Quits: Amadiro (~Amadiro@45.154.138.40) (Ping timeout: 240 seconds)
[01:46:18] *** Joins: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[01:48:23] <zodd> SnoopJ, thanks. That seems to work!
[01:48:52] *** Quits: Staunch (~Staunch@137.83.202.220) (Ping timeout: 246 seconds)
[01:49:22] <SnoopJ> zodd, does it make sense?
[01:49:24] *** Joins: Pickchea (~private@user/pickchea)
[01:50:05] *** Joins: matdev (~matdev@2a01:6e60:10:793:666:feed:dead:beef)
[01:50:14] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.4)
[01:50:29] *** Quits: Moosadee (~Moosadee@216.185.233.28) (Quit: Leaving)
[01:51:40] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[01:51:48] *** Quits: guardian (~guardian@planet-d.net) (Ping timeout: 240 seconds)
[01:52:23] *** Quits: hanetzer (~hanetzer@user/hanetzer) (Ping timeout: 260 seconds)
[01:52:45] *** Joins: Optimus (~risto@87.227.227.147)
[01:52:57] <Bando> wallbroken docker container would be a pretty safe sandbox if you thought it was really unsafe, etc.   But I might suggest looking into a package manager like poetry.  That gives you a lot of power over what gets installed and uninstalled.
[01:54:12] *** Joins: hanetzer (~hanetzer@user/hanetzer)
[01:54:13] <Bando> pyenv would also be something worth looking into.  Creating a virtual environment then just deleting it afterwared
[01:55:15] *** Quits: Liblx (~trader@ip4d15ff09.dynamic.kabel-deutschland.de) (Quit: WeeChat 2.8)
[01:56:08] *** Joins: Liblx (~trader@77.21.255.9)
[01:56:30] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[01:56:34] *** Quits: vlado (~vlado@43.241.70.137) (Ping timeout: 246 seconds)
[01:56:53] *** Joins: TheCat (~TheCat@user/z-cat)
[01:57:30] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[01:57:36] *** Quits: Liblx (~trader@77.21.255.9) (Client Quit)
[01:57:37] *** Quits: amogorkon (~amogorkon@user/amogorkon) (Ping timeout: 260 seconds)
[01:57:46] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:58:45] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[01:58:47] *** Joins: vlado (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c)
[01:59:27] *** Quits: aslicedbanjo (~aslicedba@host86-148-108-171.range86-148.btcentralplus.com) (Quit: Leaving.)
[02:00:17] *** Joins: stewpot (~stewpot@2a02:c7e:34de:4500:c0b2:5560:8807:6081)
[02:01:38] *** Parts: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Leaving)
[02:02:06] *** Joins: rodrigaes (~trace@user/trace)
[02:02:24] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[02:02:44] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 272 seconds)
[02:04:47] *** Joins: orbisvicis_ (~orbisvici@user/orbisvicis)
[02:04:47] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:cde9:ec1e:3b73:a5d6) (Ping timeout: 260 seconds)
[02:05:21] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:07:39] *** Quits: EgonX (~EgonX@c-73-115-70-244.hsd1.tx.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[02:08:16] <zodd> SnoopJ, it does. Thanks
[02:08:29] *** Joins: seifeslimene (~seifeslim@102.158.105.22)
[02:09:01] *** Quits: zodd (~zodd@84-106-62-193.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[02:09:06] *** Quits: KeybInterrupt (~quassel@dslb-002-200-104-234.002.200.pools.vodafone-ip.de) (Remote host closed the connection)
[02:09:24] *** NotThatRPG is now known as NotThatRPG_away
[02:09:32] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[02:10:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[02:10:26] *** Quits: hiroshi_ (~freedom@151.37.65.224) (Quit: hiroshi_)
[02:11:12] *** Joins: wyclif (~wyclif@user/wyclif)
[02:11:39] *** Quits: andreasbuhr (~quassel@p549dba4c.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:12:41] *** Joins: hqdruxn08 (~hqdruxn08@user/hqdruxn08)
[02:13:34] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[02:13:58] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-25e7-2817-2baa-33e2.res6.spectrum.com) (Remote host closed the connection)
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:43] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[02:15:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[02:16:24] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:44] *** Joins: wyclif (~wyclif@user/wyclif)
[02:16:56] *** Quits: hqdruxn08_ (~hqdruxn08@user/hqdruxn08) (Ping timeout: 260 seconds)
[02:17:17] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:295a:c0f6:bdc5:6c0) (Quit: Konversation terminated!)
[02:17:50] *** Quits: rairden (~rairden@2603-9000-de04-9613-0000-0000-0000-1a20.inf6.spectrum.com) (Remote host closed the connection)
[02:18:22] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Remote host closed the connection)
[02:18:47] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::beb) (Quit: Konversation terminated!)
[02:19:45] *** Joins: velix (~velix@user/velix)
[02:20:20] <velix> What's a >= python3.9 way to glob all json files in a directory? os.listdir() + filename.endswith(".json") or glob()?
[02:20:32] *** Joins: KeybInterrupt (~quassel@dslb-002-200-104-234.002.200.pools.vodafone-ip.de)
[02:20:53] *** Quits: KeybInterrupt (~quassel@dslb-002-200-104-234.002.200.pools.vodafone-ip.de) (Remote host closed the connection)
[02:22:06] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[02:22:07] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 260 seconds)
[02:23:48] *** Parts: lntl (~joey@50.234.12.38) ()
[02:24:04] <ChrisWarrick> velix: pathlib.Path.glob
[02:24:35] <velix> ChrisWarrick: okay ;)
[02:24:52] <velix> ChrisWarrick: There are so many ways in Python :(
[02:25:21] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[02:25:24] *** Joins: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[02:25:25] <ChrisWarrick> velix: Sure, but many of them are old or uncool
[02:25:37] <ChrisWarrick> velix: if you’re doing anything with paths, use pathlib
[02:25:38] <velix> I thought os.listdir() is pretty new :D
[02:25:41] <velix> ok
[02:25:53] <KirkMcDonald> os.listdir() dates to antiquity.
[02:26:07] <KnowledgeShark> velix: Not sure if this can help you; it's a chunk of my program I am writing (parsing bulk json files & requests against parsed URL's for specific data & merge); this is the beginning that writes all json files in working directory to a text file. https://bpa.st/IPBA | The guys here helped me :)
[02:26:23] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[02:26:25] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[02:26:48] <velix> KnowledgeShark: hmm, that's a mixture of pathlib and os.listdir, isn't it? ;)
[02:27:04] <KnowledgeShark> velix: You probably are correct. I am a beginner. Just learning.
[02:27:21] <velix> KnowledgeShark: That's pretty similar to what I started with right now.
[02:27:23] <velix> Thanks.
[02:27:26] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 245 seconds)
[02:27:29] <KnowledgeShark> velix: np
[02:27:55] <KnowledgeShark> velix: that's Python 3.10.0 btw. Probably interchangeable with 3.9.x, though.
[02:29:06] *** elastic_1 is now known as elastic_dog
[02:29:09] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Client Quit)
[02:29:45] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[02:30:44] *** Quits: WayToDoor (~WayToDoor@user/waytodoor) (Quit: See you later :))
[02:31:59] *** Joins: guardian (~guardian@planet-d.net)
[02:32:09] *** Quits: baltazar (~baltazar@188-143-106-228.pool.digikabel.hu) (Ping timeout: 256 seconds)
[02:32:51] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:2474:6427:dbe5:74f0)
[02:33:59] *** Joins: baltazar (~baltazar@178-164-251-249.pool.digikabel.hu)
[02:34:19] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[02:35:38] *** Joins: Nivlac (~gabriel@179.105.178.29)
[02:35:40] *** Quits: Optimus (~risto@87.227.227.147) (Ping timeout: 272 seconds)
[02:37:53] *** Quits: hvitol (hvitol@gateway/vpn/protonvpn/hvitol) (Ping timeout: 260 seconds)
[02:39:37] <velix> That's pretty uncommon in my eyes: pathlib.PurePosixPath(file).name ;)
[02:39:59] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:e082:8b12:97d8:5d28)
[02:40:12] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 240 seconds)
[02:40:13] *** Quits: stockh0lm (~Andreas@p200300d2c70cd40090355f9938920f5d.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[02:40:31] *** Quits: Lupin (~Lupin@71.39.50.109) (Ping timeout: 250 seconds)
[02:41:10] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:41:12] *** Joins: Optimus (~risto@87.227.227.147)
[02:41:23] *** Joins: jpn (~jpn@user/jpn)
[02:42:41] *** Quits: dre (~dre@2001:8003:c932:c301:941f:1abe:5ede:ae67) (Ping timeout: 252 seconds)
[02:44:02] *** Joins: noteness_ (~noteness@user/noteness)
[02:44:15] *** Quits: noteness (~noteness@user/noteness) (Ping timeout: 240 seconds)
[02:44:52] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:47:08] *** Quits: bomb-on (~bomb-on@user/bomb-on) (Quit: aллилѹіа!)
[02:47:43] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Ping timeout: 260 seconds)
[02:47:47] *** Joins: bomb-on (~bomb-on@user/bomb-on)
[02:49:05] <zen_coder> I want to get my data into a composed python data class: https://onlinegdb.com/IyhuceGCR can anybody help?
[02:49:57] *** Joins: mug3n_ (~mugen@gateway/tor-sasl/mugen)
[02:50:05] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[02:51:16] <tpr> zen_coder: try https://www.onlinegdb.com/fork/IyhuceGCR
[02:51:25] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[02:51:35] *** Quits: mug3n (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[02:52:01] <tpr> zen_coder: using ** when passing the dict to a method (conanbuildenv's __init__) will "expand" (I'm not sure if it's called explode..) the dictionary to individual keyword arguments
[02:52:22] *** Joins: MRDPZK (~MRDPZK@d205-250-152-220.bchsia.telus.net)
[02:52:25] <Helmholtz> I have a python script that needs to be run in its venv.
[02:52:33] <Helmholtz> How can I have a single executable file that I can throw in ~/bin?
[02:52:35] *** Quits: bomb-on (~bomb-on@user/bomb-on) (Ping timeout: 246 seconds)
[02:53:17] *** Joins: Guest49 (~Guest49@209.52.68.8)
[02:53:30] <tpr> Helmholtz: the best way to do that is to package it and use something like pipx to handle the install
[02:53:38] <zen_coder> tpr: so "foo = ConanBuildEnv(**item)"
[02:53:56] *** Quits: MasterK (~MK@86.127.10.135) (Remote host closed the connection)
[02:53:59] <zen_coder> then it works
[02:54:10] <zen_coder> however, I have also the 2nd case: data = yaml.safe_load(yml_data_2)
[02:54:31] <zen_coder> then "profiles"
[02:54:37] <zen_coder> is just an array: profiles=['gcc-9.0-armv8-x86_x64-release', 'gcc-9.0-armv8-x86_x64-debug', 'gcc-9.0-armv8-x86_x64-release-with-debug-info'])
[02:54:43] <Helmholtz> tpr, i was thinking a bash file with : venv/bin/python myscript "$@"
[02:55:04] <tpr> zen_coder: well, it does not convert the payloads directly to conanprofile instances, no :P
[02:55:24] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 240 seconds)
[02:55:54] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[02:55:57] <zen_coder> tpr: how can I get the special case to create a "ConanProfile" object and fill only the "profile" variable?
[02:56:02] *** Joins: henistein (~henistein@2001:8a0:c18a:f601:a80b:9c5c:83ae:4e05)
[02:56:38] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:56:50] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[02:57:17] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Quit: Leaving)
[02:58:12] <prettybanana1[m]> Hi guys, I use this bot (https://t.me/nftfox_bot), seems to be either network effect or quality suggestions, but I was thinking to automate Purchase of collections mentioned in it, how can I do it, as I understand I need infura or alchemy to automate.
[02:58:41] *** Joins: zacts (~zacts@user/zacts)
[02:58:53] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 260 seconds)
[02:59:12] <tpr> tbh, I'm not sure what's the best best approach here using pure data classes, maybe creating a class method that initializes it from the doct? there's also a library called pydantic-yaml (which might be interesting, pydantic is great for json data)
[02:59:46] *** Quits: bitkiller (~bitkiller@user/bitkiller) (Quit: bitkiller)
[03:02:03] *** Joins: jazzy (~jaziz@user/jaziz)
[03:03:23] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[03:04:04] *** Quits: peteyboy1 (~peteyboy1@199.157.133.37.dynamic.jazztel.es) (Ping timeout: 260 seconds)
[03:04:35] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 240 seconds)
[03:04:37] *** Joins: dre (~dre@2001:8003:c932:c301:638:3121:7e52:64a6)
[03:05:18] *** Joins: cheater (~Username@user/cheater)
[03:05:23] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:05:35] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[03:06:33] <tpr> Helmholtz: that should also work, I suppose
[03:06:43] *** Joins: tejr (~tejr@user/tejr)
[03:07:35] <tpr> zen_coder: how is the profile data supposed to be interpreted? you need some special handling for that, as in the first case you have a list of dicts, and in the second one a list of strings
[03:08:17] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[03:10:00] *** Joins: Wappyn (~Wappyn@159-205-37-186.adsl.inetia.pl)
[03:11:20] <Wappyn> Hello, I want to create a printable cards (but flash cards like) in exact size of magic the gathering cards
[03:11:26] <tpr> zen_coder: oh, looks like I couldn't save my experimentation without logging in to that service.. but here's one potential solution: https://bpa.st/WONQ
[03:11:33] *** Quits: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[03:11:45] *** Joins: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[03:11:47] <Wappyn> I want this size to use somethi
[03:11:47] *** Quits: upsala (~zcb@185.209.196.134) (Quit: WeeChat 3.5)
[03:12:02] <Wappyn> Card holder *
[03:12:12] <Wappyn> My question is
[03:13:02] <Wappyn> How do I generate doc/pdf/odt with python where images I generated previously would have exact size after printing?
[03:14:25] <Wappyn> I guess that there is exact size in px that would match these dimensions when placed in a4 document, but I have no idea how to calculate this or where to ask.
[03:15:00] <tpr> KnowledgeShark: velix, you can do something like this to glob files for the current path: https://bpa.st/MXYQ
[03:15:15] *** Joins: WayToDoor (~WayToDoor@user/waytodoor)
[03:15:16] <jamwil> Wappyn: WeasyPrint is a pretty solid library for generating PDFs if you're comfortable with html/css
[03:15:40] <jamwil> Wappyn: CSS should give you the power to get the sizing right
[03:16:15] <Helmholtz> In this snippet (argparse example), I want out_file to have xlsx extension. https://dpaste.com/GJJCWF268  Any better way of doing it?
[03:17:37] <tpr> KnowledgeShark: you shouldn't be using pathlib2 anyway, nor python2 (if that's the reason why you have pathlib2 there..)
[03:17:59] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:18:27] <Wappyn> jamwil: sounds like most of work I imagined I have to do is already done with this library, great thanks!
[03:18:38] *** Quits: Techcable (~Techcable@user/Techcable) (Remote host closed the connection)
[03:18:58] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[03:19:12] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:19:24] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:19:58] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[03:20:00] *** Quits: orbisvicis_ (~orbisvici@user/orbisvicis) (Ping timeout: 272 seconds)
[03:20:05] *** Joins: Techcable (~Techcable@user/Techcable)
[03:20:18] <KnowledgeShark> tpr: I was recently corrected on that; I appreciate it! I didn't know I could call Pathlib without using a pip package.
[03:20:37] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[03:20:43] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[03:20:57] *** Joins: JanC (~janc@user/janc)
[03:21:25] <KnowledgeShark> tpr: I didn't realize I didn't save! Perhaps I opened up the wrong .py. I just recently formatted a new install; upgraded ram and new hard drive. Much obliged!
[03:21:35] <jamwil> Wappyn: Only caveat is it can be a little fiddly to get going with it on Windows. It relies on pango.
[03:21:53] *** Joins: wyclif (~wyclif@user/wyclif)
[03:22:05] <ztrawhcse> pathlib2 is originally a fork of pathlib, after the latter stopped updating because "just use the stdlib, we no longer maintain this backport"
[03:22:17] <jamwil> Wappyn: Not impossible, just a little janky
[03:22:25] <ztrawhcse> pathlib2 should have fixed the historic bug in pathlib, where it wasn't called backports.pathlib :p
[03:23:34] *** Joins: MrFantastik (~f@2607:f598:bbda:220:b547:db6c:9b5e:9d59)
[03:23:42] *** Quits: Techcable (~Techcable@user/Techcable) (Remote host closed the connection)
[03:23:51] <tpr> KnowledgeShark: https://bpa.st/M6GA here's how you would do what your script does in a more pythonic way. you'd need reintroduce json_files list though if you really want to have them in a list, too :)
[03:24:40] *** Joins: orbisvicis_ (~orbisvici@user/orbisvicis)
[03:25:07] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[03:25:16] *** Joins: Techcable (~Techcable@user/Techcable)
[03:25:22] <KnowledgeShark> tpr: I appreciate your criticism and will save your code alongside my .py's. Once I get back to it. I'll take a look!
[03:25:37] <tpr> Helmholtz: yes, use pathlib :) .suffix will give y ou the extension
[03:26:01] *** Joins: Guts71 (~Guts71@197.205.24.37)
[03:26:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[03:26:59] *** Quits: yates (~user@fv-nc-f7af8b91e1-234237-1.tingfiber.com) (Quit: rcirc on GNU Emacs 25.2.2)
[03:27:23] *** Joins: wyclif (~wyclif@user/wyclif)
[03:27:35] <ztrawhcse> pathlib does have a notable flaw though. By design, concrete paths (Path instead of PurePath) duplicate IO operations from os.path, but do so badly. As in, they intentionally raise tracebacks in innocuous situations
[03:27:35] <zen_coder> tpr: how do I use it?
[03:28:28] <ztrawhcse> I like the idea of os.Pathlike interfaces as represented by PurePath, but am decidedly un-fond of Path().exists() and suchlike
[03:28:43] <zen_coder> tpr: https://onlinegdb.com/Da-aZjnGp
[03:29:06] <ztrawhcse> you get all the benefits of nice path handling by passing PurePath to os.path.exists, anyway
[03:29:13] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[03:29:15] *** Quits: TheCat (~TheCat@user/z-cat) (Ping timeout: 250 seconds)
[03:30:06] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Ping timeout: 250 seconds)
[03:30:57] *** Quits: Guts71 (~Guts71@197.205.24.37) (Quit: Client closed)
[03:30:59] <tpr> Helmholtz: or potentially str.rpartition() like this: https://bpa.st/INAA
[03:31:25] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:32:08] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 260 seconds)
[03:32:11] <tpr> zen_coder: ConanBuildEnv.from_dict(item)
[03:32:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[03:32:43] *** Quits: Wappyn (~Wappyn@159-205-37-186.adsl.inetia.pl) (Ping timeout: 260 seconds)
[03:32:50] <tpr> zen_coder: and you need to add the profile argument where ConanProfile gets created (or comment profile out from the class)
[03:32:56] *** Joins: wyclif (~wyclif@user/wyclif)
[03:33:31] *** Joins: wingsorc (~wingsorc@user/wingsorc)
[03:33:48] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 240 seconds)
[03:33:58] <tpr> ztrawhcse: you have an example of an innocuous situation that causes an exception?
[03:34:01] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:34:01] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[03:34:36] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[03:34:38] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Quit: ZNC - http://znc.in)
[03:34:46] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Leaving)
[03:34:50] <tpr> I'm pretty happy about not needing to import anything from os package (and it's child packages, including os.path), and I try to avoid it as much as I can :-)
[03:35:47] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 260 seconds)
[03:35:49] <tpr> now I'm wondering if 'os' is a package or a module, as the doc says
[03:35:54] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[03:36:46] *** Joins: iflema (~ian@user/iflema)
[03:37:17] *** Joins: Wulf (~Wulf@user/wulf)
[03:37:20] <zen_coder> tpr: ? I need to remove the attribute "profile"? when using the other yml data?
[03:37:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[03:38:23] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[03:38:26] *** Joins: wyclif (~wyclif@user/wyclif)
[03:38:36] <tpr> zen_coder: I don't know. but if you want to use the classmethod way to construct your dataclass, you need to adapt its code as it currently causes an exception as no profile is passed to ConanProfile
[03:39:44] *** Joins: ivii (~ivan@user/ivii)
[03:40:43] *** Quits: Nivlac (~gabriel@179.105.178.29) (Quit: leaving)
[03:40:57] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:41:27] <velix> tpr: thanks
[03:41:32] <zen_coder> tpr: https://onlinegdb.com/Yn0Af0a48
[03:41:36] <ztrawhcse> tpr: https://bugs.python.org/issue31842 https://github.com/mesonbuild/meson/issues/7295 was the first time pathlib bit us horribly
[03:41:51] <velix> Hmm. Do Sets have direct Regex support or do I need to iterate trough them?
[03:42:43] *** Joins: reedrichards (~f@2607:f598:bbda:220:7e49:62e5:d9a5:6fe2)
[03:42:54] <velix> maybe a list is better this time?
[03:43:00] <velix> My set has 11000 entries.
[03:43:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[03:43:48] *** Joins: djapo (~archangel@user/djapo)
[03:43:48] <cyphase> velix, i'm not sure exactly what it would mean for a set to have direct regex support
[03:43:51] <ztrawhcse> tpr: os.path.exists() returns true if your user can access a file in that location. Path().exists() tracebacks if a file exists, but you cannot access it.
[03:43:57] *** Joins: wyclif (~wyclif@user/wyclif)
[03:44:00] <ztrawhcse> I've never once seen a valid use case for that behavior
[03:44:08] *** Quits: MrFantastik (~f@2607:f598:bbda:220:b547:db6c:9b5e:9d59) (Remote host closed the connection)
[03:44:22] *** Quits: Optimus (~risto@87.227.227.147) (Ping timeout: 246 seconds)
[03:44:22] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 260 seconds)
[03:45:09] *** Quits: ckdCreations (~ckdCreati@147.55.130.35) (Read error: Connection reset by peer)
[03:45:24] <velix> cyphase: list(filter(r.match, myset)) <-- works ;)
[03:46:12] <velix> cyphase: set(filter(r.match, myset)) <-- even betta
[03:46:23] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 256 seconds)
[03:46:45] <BSaboia> This seems to be not optimal:
[03:47:06] *** reedrichards is now known as MrFantastik
[03:47:48] <BSaboia> ids_of_deals_to_be_deleted = ["'{}'".format(row[0]) for row in cur.fetchall()] and then delete_query = f"""DELETE FROM {schema}.table AS t WHERE t.string_id IN ({','.join(ids_of_deals_to_be_deleted)}) """
[03:48:25] <BSaboia> Should I use %s instead? Note: this query is not generated by user input so there is little (or basically no) room for SQL injection
[03:48:59] <tpr> zen_coder: yes, like I mentioned, you need to adapt the line 43 to include profile also there
[03:49:55] <tpr> ztrawhcse: ohh, huh. mkdir has similar (when no exists_ok is passed), which is something I feel is unexpected behavior
[03:50:08] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:50:40] *** Joins: ckdCreations (~ckdCreati@147.55.133.138)
[03:50:44] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[03:51:14] <tpr> ztrawhcse: I'd somehow expect that exists() would return True, if the file exists even if you cannot access it :P
[03:52:23] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[03:53:24] <zen_coder> tpr: so I need to implement "from_dict" also in "ConanProfile"?
[03:53:41] <tpr> zen_coder: no, just pass profile=None on line 34
[03:54:16] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:54:43] <tpr> but you could also implement from_dict to conanprofile that handles the input data (and move the isinstance check and construction there). that's how I'd do it
[03:55:59] <tpr> but I'd seriously consider changing the input data to be saner and passing always dicts instead of either dicts or strings, if that's something you can control
[03:56:06] *** Joins: epony (epony@user/epony)
[03:56:15] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[03:56:33] *** Joins: bancroft (~bancroft@user/bancroft)
[03:56:50] <bancroft> can you printout the contents of a leveldb file as json?
[03:56:58] *** Quits: Guest49 (~Guest49@209.52.68.8) (Ping timeout: 250 seconds)
[03:56:59] <bancroft> with indentation
[03:57:07] <zen_coder> tpr: thx
[03:57:44] <ztrawhcse> tpr: pathlib devs are willing to make Path('characters-which-the-filesystem-forbids').exists() return false, but want Path('permission denied/').exists() to traceback
[03:57:47] <ztrawhcse> it's tiresome
[03:58:11] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 260 seconds)
[03:58:21] <ztrawhcse> "I think os.path is bad, but we cannot change it because legacy", IIRC was the reply
[04:00:48] *** Joins: frmlof (~frmlof@70.243.238.191)
[04:01:14] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[04:01:39] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:cde9:ec1e:3b73:a5d6)
[04:01:56] *** Quits: upekkha (~Advanced@2a01:4f8:1c0c:49df::1) (Quit: upekkha)
[04:02:06] *** Joins: upekkha (~Advanced@2a01:4f8:1c0c:49df::1)
[04:02:13] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[04:02:50] <ztrawhcse> https://github.com/mesonbuild/meson/pull/9689#issuecomment-985822727
[04:02:58] *** Quits: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94) (Ping timeout: 260 seconds)
[04:03:12] *** Joins: jpn (~jpn@user/jpn)
[04:03:54] *** Quits: grimvar (~grimvar@i5C75F432.versanet.de) (Ping timeout: 260 seconds)
[04:04:08] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[04:04:12] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:e082:8b12:97d8:5d28) (Ping timeout: 240 seconds)
[04:05:22] *** Joins: grimvar (~grimvar@i5C75F49B.versanet.de)
[04:06:26] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[04:07:55] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[04:09:04] *** Joins: codebam (~codebam@user/codebam)
[04:09:09] *** Quits: NotThatRPG_away (~NotThatRP@162-219-230-90.fttp.usinternet.com) (Quit: Textual IRC Client: www.textualapp.com)
[04:09:44] *** Joins: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net)
[04:10:42] <bancroft> nevermind, figured it out
[04:11:56] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 272 seconds)
[04:14:28] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[04:14:51] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[04:15:53] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Ping timeout: 260 seconds)
[04:16:44] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:efcc:cbb3:7f2a:6dff)
[04:16:56] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[04:17:42] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[04:18:16] *** Joins: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp)
[04:18:40] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[04:20:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[04:20:30] *** Joins: wyclif (~wyclif@user/wyclif)
[04:20:55] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 240 seconds)
[04:22:06] *** Joins: Optimus (~risto@87.227.227.147)
[04:26:27] *** Quits: ckdCreations (~ckdCreati@147.55.133.138) (Read error: Connection reset by peer)
[04:26:28] <dre> ztrawhcse, what's the problem? that..... sounds reasonable to me
[04:26:44] <dre> junk can't exist so that will always be false..
[04:27:00] <dre> if you don't have permission, then they can't say for certain whether it would or would not exist, so it raises an error.
[04:27:13] *** Joins: ckdCreations (~ckdCreati@147.55.133.138)
[04:27:15] <gevreeen> why doesn't streamreader has a close() method?
[04:27:21] <gevreeen> s/has/have/
[04:27:33] <gevreeen> as found in https://docs.python.org/3/library/asyncio-stream.html
[04:28:03] <dre> because readers shouldn't be modifying things and so they don't need a close?  ( i think)
[04:28:22] <dre> closing is only to flush/actually write the file, etc, things.
[04:29:31] *** Quits: orbisvicis_ (~orbisvici@user/orbisvicis) (Ping timeout: 246 seconds)
[04:29:32] *** Quits: henistein (~henistein@2001:8a0:c18a:f601:a80b:9c5c:83ae:4e05) (Quit: Client closed)
[04:29:36] <gevreeen> closing readers would mean we refuse to accept more data from the other end
[04:29:58] <gevreeen> if this a tcp pipe
[04:30:02] *** Quits: phaise (~phaise@gateway/tor-sasl/phaise) (Remote host closed the connection)
[04:30:02] *** Joins: mtk_ (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[04:30:13] <SnoopJ> gevreeen, what exactly would it mean to "refuse" in that case?
[04:30:45] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Read error: Connection reset by peer)
[04:30:45] <gevreeen> erh, when data arrives, the system ignores them
[04:30:48] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[04:30:49] <dre> I'd think you'd just... remove the reader, right? you don't have any reason to need to keep it around that that point.
[04:30:55] <gevreeen> and not putting it into some buffer
[04:30:58] *** Joins: phaise (~phaise@gateway/tor-sasl/phaise)
[04:31:44] <dre> it'll already be put into a buffer I think, but that's lower level detail...
[04:31:51] *** Joins: chenqisu1 (~chenqisu1@183.217.200.168)
[04:31:57] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Quit: ZNC - http://znc.in)
[04:32:19] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 246 seconds)
[04:32:23] *** Joins: viaSanctus (~viaSanctu@user/viasanctus)
[04:32:26] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.5)
[04:32:36] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[04:33:03] <dre> the close() methods are needed on writers, because there's usually some action that is needed such as flushing STDOUT, or the tcp stack, or writing the file, etc.  but for reading it there's nothing else needed you can just delete the reader
[04:33:24] <dre> writers mutate. readers observe.
[04:33:24] <gevreeen> ah, all right.
[04:34:14] *** Joins: Wulf (~Wulf@user/wulf)
[04:34:40] <SnoopJ> it looks like the object does have a notion of being-closed internally, but I assume it's not exposed on the reader because you could just close the stream
[04:34:53] <SnoopJ> (i.e. disconnect)
[04:35:18] *** Quits: hanetzer (~hanetzer@user/hanetzer) (Quit: WeeChat 3.4.1)
[04:36:13] <SnoopJ> somewhat relevant discussion: https://bugs.python.org/issue36129#msg338690
[04:36:54] *** Joins: frmlof (~frmlof@70.243.238.191)
[04:37:23] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 260 seconds)
[04:37:25] *** Joins: hanetzer (~hanetzer@user/hanetzer)
[04:37:26] <SnoopJ> clarification: StreamReader does not have is-closed state, I was looking at StreamReaderProtocol
[04:37:47] *** Joins: orbisvicis_ (~orbisvici@user/orbisvicis)
[04:38:58] *** Joins: hanetzer1 (~hanetzer@user/hanetzer)
[04:39:03] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[04:39:08] *** Quits: radny (~radny@89.22.211.163) (Quit: Lost terminal)
[04:42:01] *** Joins: re101-falcon-2 (~re101-fal@221.239.136.99)
[04:42:15] *** Joins: aknot (~aknot@2603-900a-1503-17bb-798b-1376-5c82-ae23.inf6.spectrum.com)
[04:42:31] *** Quits: hanetzer (~hanetzer@user/hanetzer) (Ping timeout: 260 seconds)
[04:42:33] *** Joins: dznfdavnz (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[04:43:15] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 240 seconds)
[04:43:58] *** Quits: nomic (~nomic@185.217.117.233) (Quit: Leaving)
[04:47:15] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[04:47:17] *** Quits: subopt (~subopt@2603-8081-2302-459a-d9b8-c024-16d5-2f7f.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:47:47] *** Joins: LiTHiuM (~Imk0tter@68.sub-174-204-132.myvzw.com)
[04:47:49] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[04:49:28] *** Quits: Imk0tter (~Imk0tter@68.sub-174-204-132.myvzw.com) (Ping timeout: 246 seconds)
[04:50:53] *** Joins: function1 (~shawoop@199.115.117.198)
[04:50:53] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[04:51:32] *** Joins: Barones (~Barones@user/Barones)
[04:52:58] <ztrawhcse> dre: because if you are checking whether it exists and don't raise an error in the case it doesn't exist, then you don't care whether it exists. You care that you cannot use it. Which is
[04:52:58] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 246 seconds)
[04:53:01] <ztrawhcse> "false"
[04:53:08] <ztrawhcse> not "traceback"
[04:53:17] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[04:53:38] *** Quits: akk (~akk@75.161.150.5) (Quit: +++)
[04:53:46] <velix> It's april 1st here. - Stackoverflow is going crazy :D
[04:55:23] <dre> ztrawhcse, if you are checking whether it exists, and raising an error, that means "I don't have the capabilities to find out"
[04:55:35] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[04:56:08] <dre> I wouldn't expect .exists("some/dir/that/doesnt/exist") to raise an error if the dir doesn't exist. if it's not there, it should be false.
[04:56:38] <SnoopJ> If it were going to raise, I would hope it would do it when the offending Path comes into existence, not wait until I call exists() to work that out
[04:56:52] <dre> you do kinda have a point, I know what you're arguing, but I do still feel like permission error is the right thing to do
[04:57:18] <ztrawhcse> don't worry, creating Path() with invalid filesystem characters is explicitly allowed, it just returns False when you check whether it exists
[04:57:25] * SnoopJ is not worried
[04:57:32] <dre> yeah that's a different argument, not for this.
[04:57:40] <ztrawhcse> Path(b'\0').exists() -> False, null byte clearly cannot exist
[04:58:31] <dre> ztrawhcse, look at it this way: raising an error is informing you: "of course it wouldn't exist you idiot because you don't even have the right permissions to check this"
[04:58:33] *** Quits: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[04:58:35] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 240 seconds)
[04:58:42] <dre> ie: "there's a bigger issue here"
[04:58:45] *** Joins: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[04:58:58] <dre> that's something I'd want to be alerted to.
[04:59:14] <ztrawhcse> look at it this way: EVERY. SINGLE. USE. of pathlib needs to be guarded by try/except to squelch ALL errors
[04:59:18] <SnoopJ> I guess you could muck about with _IGNORED_ERRNOS if you reaaaaally don't like this behavior
[04:59:27] <ztrawhcse> because I do not trust pathlib AT ALL
[04:59:34] <ztrawhcse> I *know* that this is not an error
[04:59:36] <dre> if I was looking for a dir but it ends up that permissions are all wonky. the right answer would be "why don't I have permission"
[04:59:59] <dre> ztrawhcse, yes, if you want to squelcha all errors in everything, then everything needs to be wrapped in try/except.
[05:00:15] <ztrawhcse> because the user was running a build in a chroot and $HOME wasn't writable, because it didn't need to be, because it isn't used, but some things check to see if optional files in $HOME exist
[05:00:27] <ztrawhcse> ooooor I could just not use pathlib :)
[05:00:27] *** Quits: Cyp (~cyp@213.237.84.236) (Remote host closed the connection)
[05:00:33] <ztrawhcse> os.path.exists() has sane behavior
[05:00:36] <SnoopJ> indeed you could not use it
[05:00:51] *** Joins: Cyp (~cyp@213.237.84.236)
[05:00:58] <ztrawhcse> pathlib.Path doesn't even error when you try to create Path('\0') which is conceptually invalid
[05:01:01] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 246 seconds)
[05:01:09] <dre> why would you need write access to check that something exists? that's a better question.
[05:01:13] *** Joins: reedrichards (~f@2607:f598:bbda:220:e66d:5163:80:e75e)
[05:01:22] <SnoopJ> ztrawhcse, are you saying that no platform could ever allow this in a path?
[05:01:32] <SnoopJ> Or do you mean PosixPath("\0")
[05:01:37] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:01:58] *** Quits: orbisvicis_ (~orbisvici@user/orbisvicis) (Ping timeout: 272 seconds)
[05:03:03] *** Quits: MrFantastik (~f@2607:f598:bbda:220:7e49:62e5:d9a5:6fe2) (Remote host closed the connection)
[05:03:21] <SnoopJ> I guess WindowsPath does the same thing here
[05:03:43] <SnoopJ> ...huh, no actually. It raises
[05:05:00] <ztrawhcse> it's full of inconsistencies
[05:05:17] <ztrawhcse> but I still like PurePath as a decent implementation of os.Pathlike
[05:05:35] *** Quits: bancroft (~bancroft@user/bancroft) (Quit: WeeChat 3.2)
[05:06:56] *** Quits: grooverman (~grooverma@179.97.175.157) (Remote host closed the connection)
[05:08:16] *** Quits: nelgau_ (~nelgau@cpe-75-82-216-42.socal.res.rr.com) (Remote host closed the connection)
[05:08:32] *** Joins: nelgau (~nelgau@cpe-75-82-216-42.socal.res.rr.com)
[05:09:35] *** Joins: vlm (~vlm@user/vlm)
[05:10:12] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[05:10:23] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[05:11:13] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[05:11:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[05:12:46] *** Joins: wyclif (~wyclif@user/wyclif)
[05:13:53] *** Joins: grooverman (~grooverma@179.97.175.157)
[05:15:22] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[05:16:09] *** Joins: orbisvicis_ (~orbisvici@user/orbisvicis)
[05:19:55] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[05:23:35] *** Quits: jflabonte (~jflabonte@bras-base-qubcpq0634w-grc-16-174-89-201-64.dsl.bell.ca) (Ping timeout: 260 seconds)
[05:23:38] *** Joins: favadi (~favadi@2001:ee0:4081:6914:4466:e3ad:3666:affe)
[05:25:04] <gevreeen> can someone take a brief look at https://paste.centos.org/view/78f21922 and come back to tell me why I'm getting "SyntaxError: invalid syntax. Perhaps you forgot a comma?" on the line with "GET . . ."?
[05:25:44] *** Quits: N3X15 (~nexis@mail.nexisonline.net) (Quit: ZNC - http://znc.in)
[05:26:13] <gevreeen> as soon as I drop format() and friends on line 17 the error's gone
[05:26:31] <KirkMcDonald> gevreeen: Yes. You're taking advantage of the fact that adjacent string literals are implicitly concatenated.
[05:27:00] <KirkMcDonald> gevreeen: But when you put that .format() call in there, then you've just got this one last string literal hanging around at the end.
[05:27:13] <dre> ^
[05:27:22] <dre> move the format to ).format().encode()
[05:27:59] <KirkMcDonald> Could also use an f-string.
[05:28:21] <KirkMcDonald> Which is still a literal, and so would still work here.
[05:28:23] <ztrawhcse> seems like a bad error message anyway
[05:28:32] *** Joins: N3X15 (~nexis@mail.nexisonline.net)
[05:28:33] <gevreeen> moved format() out of the parenthese pair, and the error's gone
[05:28:51] <gevreeen> is this supposed to happen though?
[05:29:01] <KirkMcDonald> The error is correct that it was not valid syntax.
[05:29:09] *** Joins: FlipFlop (~FlipFlop@user/fl1pfl0p)
[05:29:19] <dre> ye; also KirkMcDonald is right gevreeen, you could do this: https://paste.centos.org/view/3b853ea8
[05:29:24] <ztrawhcse> gevreeen: well, it doesn't make sense to .format() half of an implicitly joined string
[05:29:47] <KirkMcDonald> The 'Perhaps' bit is merely its best guess, since having lists of things separated by commas is more common than actually doing what you're doing here.
[05:30:03] <ztrawhcse> but while the error is correct that it's invalid syntax, some things are hard to guess the right advice for
[05:30:06] <velix> hrhr, I should stop coding in PHP, Bash AND Python. I'm using $var anywhere ;)
[05:30:17] <dre> or, really, one would use multi line strings? """
[05:30:30] <gevreeen> right now lemme try them commas
[05:30:32] <ztrawhcse> multiline strings include the alignment
[05:30:36] <dre> keep the \r drop the \n
[05:30:39] <KirkMcDonald> Triple-quoted strings won't give you '\r\n' like is wanted here.
[05:30:46] <dre> yeah
[05:31:10] <ztrawhcse> gevreeen: commas would actually result in multiple strings passed as multiple arguments to print
[05:31:27] <KirkMcDonald> And, yeah, a triple-quoted string would also require eliminating the indentation, and probably would not read as well.
[05:31:46] <nedbat> mmm, textwrap.dedent
[05:32:05] <KirkMcDonald> You would use commas if you wanted to do this by building a list of lines, which you then join together into a string.
[05:32:07] <ztrawhcse> or no... you cannot .encode() a tuple anyway :p
[05:32:49] <gevreeen> yeah, adding them commata gets me a tuple instead, lol
[05:33:19] <gevreeen> and while f-strings are nice, I like the format() syntax better
[05:33:38] <dre> so do i in some cases ( and this is probably one of them)
[05:33:45] <ztrawhcse> honestly, moving .format() to the end before .encode is the logical approach, and f-strings are the neat modern approach
[05:34:01] <gevreeen> and since this is http, I'm not leaving my code to the mercy of platform-defined-line-endings
[05:34:43] <ztrawhcse> textwrap.dedent is probably not a fantastic idea if you want to also manually define line endings as escapes, yeah...
[05:34:55] *** Quits: rvgate (~rvgate@user/rvgate) (Read error: Connection reset by peer)
[05:35:05] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[05:35:36] *** Joins: rvgate (~rvgate@user/rvgate)
[05:35:39] *** Joins: jpn (~jpn@user/jpn)
[05:36:08] <gevreeen> however
[05:36:32] <gevreeen> this error won't work and produce normal strings if there is nothing after the string literal with format() call
[05:36:40] <gevreeen> s/work/appear/
[05:36:52] <gevreeen> s/produce/produces/
[05:37:53] <gevreeen> so it does work if the string literal containing the format call is the last member of the concatenated group
[05:38:01] <gevreeen> (not sure whether this is intended though)
[05:38:06] <SnoopJ> ztrawhcse, how does dedent() play into line *endings*?
[05:40:52] <dre> gevreeen, effectively you're writing a string like this: `foo = "some" "string" "values"` which python will concat into: `foo = "somestringvalues"` for you.
[05:41:38] <dre> so it's one whole string, which is why you couldn't put the format call in the middle of it: "some" "string".format() "values"     ==> "somestring".format()"values" ???
[05:42:26] <KirkMcDonald> You could've added a `+` to make it work, too.
[05:42:27] <dre> the fact that you're putting each string segment on a new line is just a matter of neatness. as well as the surrounding parens
[05:42:47] <gevreeen> but why is foo = ("some" "string" "values:{}poiu".format(asdf) working though?
[05:43:02] <dre> so foo = ( "some" "string" "value").format()
[05:43:07] *** Quits: Church (~aleph@68.161.207.188) (Ping timeout: 256 seconds)
[05:43:12] <dre> because it's a .format() on the resultant string.
[05:43:14] <gevreeen> erh, wait
[05:43:14] <dre> "somestringvalue"
[05:43:25] <gevreeen> foo = ("some" "string" "values:{}poiu".format(asdf) )
[05:43:36] <gevreeen> missed the last parenthesis
[05:43:39] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 260 seconds)
[05:43:48] <dre> beacuse it's foo = ("somestringvalues:{}poiu".format(asdf) )
[05:43:51] <KirkMcDonald> gevreeen: Same deal. It's calling .format() on the complete string.
[05:44:15] *** Quits: phylaz (~phylaz@82.51-174-55.customer.lyse.net) (Ping timeout: 256 seconds)
[05:44:19] <dre> it would also work on  foo = ("somestringvalues:{}poiu").format(asdf) as well
[05:44:31] <dre> and it would be more readable as such, I think.
[05:44:44] <gevreeen> now I see how things work from the side of the python interpreter
[05:45:37] <dre> any two strings with whitespace in between them will just be concat, and looks like 1 string, to the interpreter.
[05:46:20] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[05:48:50] *** Quits: Optimus (~risto@87.227.227.147) (Ping timeout: 272 seconds)
[05:51:16] <SnoopJ> and it works without whitespace, even
[05:51:31] <SnoopJ> ...not that you're terribly likely to ever see this :)
[05:53:00] *** Quits: favadi (~favadi@2001:ee0:4081:6914:4466:e3ad:3666:affe) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:56:55] *** Joins: dsrt^ (~dsrt@c-24-99-107-170.hsd1.ga.comcast.net)
[05:57:56] *** Quits: sharperguy (~sharpergu@88.130.222.144) (Ping timeout: 252 seconds)
[05:59:06] *** Joins: Church (~aleph@68.161.207.188)
[05:59:44] *** Joins: sharperguy (~sharpergu@88.130.222.229)
[06:00:08] *** Quits: aknot (~aknot@2603-900a-1503-17bb-798b-1376-5c82-ae23.inf6.spectrum.com) (Ping timeout: 252 seconds)
[06:00:55] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 260 seconds)
[06:01:02] *** Joins: data68 (~data@2a02:908:a67:2ce0:c23f:d5ff:fe6c:da60)
[06:05:30] *** Quits: re101-falcon-2 (~re101-fal@221.239.136.99) (Quit: Client closed)
[06:07:51] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 272 seconds)
[06:08:52] *** Joins: Enitin (~Enitin@82.180.145.228)
[06:10:40] *** Joins: favadi (~favadi@2001:ee0:4081:6914:f515:3fd0:10f1:6a2)
[06:13:36] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:f041:7b76:cc2b:8a8f)
[06:14:54] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[06:17:23] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 250 seconds)
[06:17:56] *** Joins: goppo (~goppo@user/goppo)
[06:18:47] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[06:18:54] *** Joins: prodigius (~prodigius@75-163-158-175.clsp.qwest.net)
[06:19:23] *** Quits: Gustavo6046_ (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[06:20:25] *** Quits: llh (~UPP@user/llh) (Quit: :::: ( UPP ) ::::)
[06:21:36] *** Joins: bitblit_ (~bitblit@gateway/tor-sasl/bitblit)
[06:23:15] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 240 seconds)
[06:23:32] *** Quits: LogicAside (~LogicAsid@user/logicaside) (Quit: That's a thinker...)
[06:25:03] *** Quits: cdown (~cdown@user/cdown) (Ping timeout: 256 seconds)
[06:25:17] *** Joins: newpy (~newpy@206.168.231.90)
[06:25:41] *** Joins: LogicAside (~LogicAsid@user/logicaside)
[06:27:18] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[06:29:45] *** Joins: f__ (~f@2607:f598:bbda:220:650b:ba3f:766b:61d4)
[06:30:34] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[06:30:47] *** Joins: califax (~califax@user/califx)
[06:31:11] *** Quits: jay-m126 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 245 seconds)
[06:31:15] *** Quits: reedrichards (~f@2607:f598:bbda:220:e66d:5163:80:e75e) (Remote host closed the connection)
[06:31:53] *** Quits: aghast (~aghast@2607:fb91:bd0b:1329:a0d6:4979:f73c:e2ec) (Remote host closed the connection)
[06:32:05] *** Joins: aghast (~aghast@2607:fb91:bd0b:1329:a0d6:4979:f73c:e2ec)
[06:33:14] *** Joins: reedrichards (~f@2607:f598:bbda:220:d0a1:152d:dabf:66e6)
[06:33:34] *** Quits: f__ (~f@2607:f598:bbda:220:650b:ba3f:766b:61d4) (Remote host closed the connection)
[06:33:39] <newpy> is `for key in dict` still the pythonic way of dictionary iteration?
[06:34:19] <SnoopJ> newpy, if you want to iterate only the keys, that works. You can also do .keys() explicitly if you don't care for the implicit behavior.
[06:34:21] <grym> newpy: adding .keys() is more explicit, to get the same effect; you can also `for key, value in thedict.items()`
[06:34:44] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:34:47] <grym> (or just the values with .values())
[06:34:51] <newpy> yea I was wondering if keys/values/items() was preferred since it's more explicit
[06:35:12] <grym> i usually throw on .keys as a matter of personal taste
[06:37:46] *** Joins: f__ (~f@2607:f598:bbda:220:7e6e:9187:e1a9:9af3)
[06:38:13] *** Quits: reedrichards (~f@2607:f598:bbda:220:d0a1:152d:dabf:66e6) (Remote host closed the connection)
[06:38:28] * SnoopJ prefers to specify it
[06:38:51] <phy1729> It does follow "explicit is better than implicit"
[06:39:01] <Tritium> Insert Tim Peters quote here
[06:39:09] <Tritium> oh i see someone did
[06:39:27] <newpy> did tim peters write the zen of python?
[06:39:30] <newpy> or whatever it was called?
[06:39:34] <Tritium> yes
[06:41:34] *** Joins: white2 (~mahengrui@user/mahengrui1)
[06:43:36] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[06:44:03] *** Quits: vlm (~vlm@user/vlm) (Ping timeout: 260 seconds)
[06:46:53] *** Joins: vanfanel64 (~vanfanel6@user/vanfanel64)
[06:47:07] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 272 seconds)
[06:47:32] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:50:54] <Tritium> Its 50/50 if i iterate directly over a dict or use .keys()
[06:51:17] <phy1729> That's worse than either one consistently
[06:51:25] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.5)
[06:52:05] <Tritium> its a project by project choice, mind you, but the first time i iterate a dict's keys in a project is 50/50 on which i use.
[06:52:17] <Tritium> I'll ...do the same throughout
[06:52:28] <Tritium> i just dont have a personal style guide for it
[06:53:50] <Tritium> 90% of the code i write is to solve one problem once and i never touch the code again, so... probably doesn't matter for ME all that much
[06:54:46] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 246 seconds)
[06:55:33] *** Quits: jdmark (~jdmark@user/jdmark) (Quit: Leaving)
[06:56:31] *** Joins: NealRame (~a@89.187.163.193)
[06:57:40] *** Quits: seifeslimene (~seifeslim@102.158.105.22) (Ping timeout: 250 seconds)
[06:57:54] *** Joins: vlm (~vlm@user/vlm)
[07:02:28] *** Joins: vlm_ (~vlm@user/vlm)
[07:03:10] *** Quits: vlm (~vlm@user/vlm) (Ping timeout: 246 seconds)
[07:03:44] *** vlm_ is now known as vlm
[07:05:42] *** Joins: adeliktas1 (~adeliktas@i59F52D62.versanet.de)
[07:07:48] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[07:08:00] *** Quits: adeliktas (~adeliktas@i59F52E5A.versanet.de) (Ping timeout: 272 seconds)
[07:08:01] *** adeliktas1 is now known as adeliktas
[07:08:22] *** Joins: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net)
[07:10:38] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:11:38] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:14:26] *** Joins: jay-m126 (~jay-m@gateway/vpn/pia/jay-m126)
[07:15:47] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 246 seconds)
[07:16:26] *** Quits: eroux (~eroux@102-65-72-61.ftth.web.africa) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:20:53] *** Quits: Celeo (~znc-admin@user/celeo) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[07:21:56] *** Joins: funhouse (~funhouse@user/funhouse)
[07:24:09] <tpr> ooh, I found out tonight that there's a python discord, too
[07:24:22] *** Joins: jpn (~jpn@user/jpn)
[07:24:44] <tpr> albeit much more hectic than this irc channel
[07:25:07] *** Joins: Celeo (~znc-admin@user/celeo)
[07:28:02] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[07:29:35] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 260 seconds)
[07:29:37] *** Joins: llh (~UPP@user/llh)
[07:30:02] <Guest80> which discord server and what python channel?
[07:30:09] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:30:24] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[07:32:00] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Quit: WeeChat 3.4)
[07:32:15] *** Joins: frost (~frost@user/frost)
[07:32:22] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:32:23] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[07:32:56] *** Quits: nucleargrave (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Quit: WeeChat 3.3)
[07:33:03] *** Quits: jay-m126 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 260 seconds)
[07:33:27] *** Joins: nucleargrave (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[07:33:37] *** Quits: memoryleak (~quassel@195-202-248-193.dynamic.hispeed.ch) (Ping timeout: 240 seconds)
[07:33:38] *** Quits: jim (~jim@about/linux/staff/jim) (Ping timeout: 252 seconds)
[07:34:58] *** Joins: mixfix41 (~homefame@user/mixfix41)
[07:37:08] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[07:37:43] *** Quits: SaltHilStroller_ (~SaltHillS@206.223.160.26) (Ping timeout: 260 seconds)
[07:42:16] *** Quits: SaladChampion (~Roey@user/Roey) (Quit: Client exiting)
[07:43:30] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[07:45:51] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:46:55] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[07:47:33] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 256 seconds)
[07:48:19] *** Joins: saroy (~Sandipan@103.24.86.178)
[07:48:22] *** Quits: funhouse (~funhouse@user/funhouse) (Ping timeout: 250 seconds)
[07:48:43] *** Joins: johnkeats7 (~johnkeats@2804:14c:32:a0cc:7408:15f4:46a:f010)
[07:48:48] *** Quits: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net) (Ping timeout: 250 seconds)
[07:48:58] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[07:51:38] *** Joins: philipp64 (~philipp64@65.129.128.199)
[07:52:26] *** Joins: Gotoma (~textual@ip1f10e588.dynamic.kabel-deutschland.de)
[07:53:06] *** Quits: Shou (~nyah@wikipedia/Davepeta) (Remote host closed the connection)
[07:56:33] *** Joins: jim (~jim@about/linux/staff/jim)
[07:57:08] *** Quits: f__ (~f@2607:f598:bbda:220:7e6e:9187:e1a9:9af3) (Remote host closed the connection)
[07:57:14] *** Joins: reedrichards (~f@2607:f598:bbda:220:e03d:1631:839e:8c70)
[08:00:50] *** Quits: goppo (~goppo@user/goppo) (Quit: My iMac has gone to sleep. ZZZzzz…)
[08:01:55] *** Quits: reedrichards (~f@2607:f598:bbda:220:e03d:1631:839e:8c70) (Remote host closed the connection)
[08:02:13] *** Joins: reedrichards (~f@2607:f598:bbda:220:ec59:469f:c7e5:9ad4)
[08:03:23] *** Quits: jim (~jim@about/linux/staff/jim) (Ping timeout: 260 seconds)
[08:03:52] *** Joins: goppo (~goppo@user/goppo)
[08:05:08] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[08:05:31] *** Quits: stoneware (~stoneware@user/stoneware) (Ping timeout: 260 seconds)
[08:06:03] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-6182-beee-d0fd-5928.res6.spectrum.com) (Read error: Connection reset by peer)
[08:07:03] *** Quits: sreve (~quassel@p54a71c9d.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[08:07:14] *** Joins: sreve (~quassel@p4ff44a40.dip0.t-ipconnect.de)
[08:09:53] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[08:10:33] *** Joins: stoneware (~stoneware@user/stoneware)
[08:10:39] *** Quits: FlipFlop (~FlipFlop@user/fl1pfl0p) (Ping timeout: 260 seconds)
[08:10:57] *** Quits: stdout (~stdout@2605:ab80:b000:7202:983b:dcb7:16d6:b705) (Quit: Leaving)
[08:12:03] *** Joins: ndut_ (~ndut@2001:448a:1082:fe6f:1573:3e90:c7b6:794a)
[08:12:32] *** Joins: lpapp (~lpapp@ec2-35-158-255-21.eu-central-1.compute.amazonaws.com)
[08:16:42] *** Quits: el_kevino (~mote@2604:a880:400:d1::901:5001) (Quit: WeeChat 3.5)
[08:16:55] *** Joins: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com)
[08:17:15] *** Joins: funhouse (~funhouse@user/funhouse)
[08:19:26] *** Joins: jpn (~jpn@user/jpn)
[08:19:44] *** Joins: kuahara (kuahara@072-182-135-032.res.spectrum.com)
[08:19:45] *** Joins: lessshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[08:19:54] <kuahara> Is there something wrong with this line?  Python shows no errors, but when I run it, the column width is not getting set.  I'm using OpenPyXL.  port_term is a workbook and the sheet name is valid.
[08:19:54] <kuahara> port_term['Rtr_Sw Master'].column_dimensions['A'].width = 16
[08:20:05] *** Quits: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[08:20:18] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:20:56] *** Joins: vintagemind (~vintagemi@122-199-29-229.ip4.superloop.com)
[08:21:02] <vintagemind> hi guys
[08:21:29] <vintagemind> I would like to know the best IDEs for python
[08:21:31] <vintagemind> thx!
[08:21:42] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[08:21:42] *** Parts: lpapp (~lpapp@ec2-35-158-255-21.eu-central-1.compute.amazonaws.com) ()
[08:22:16] *** Quits: reset (~reset@user/reset) (Quit: reset)
[08:22:17] <Gotoma> @vintagemind I still prefer sublime text I can recommend
[08:22:18] <phy1729> There is no best; just editors that work well for you and your workflow
[08:22:25] *** Joins: leonid27 (~bryan@d118-75-17-87.nap.wideopenwest.com)
[08:22:29] <vintagemind> okay :)
[08:22:41] <vintagemind> well sorry to ask this but how do i create an account here lmao
[08:22:56] <vintagemind> I am on my browser rn
[08:23:24] <phy1729> For IRC? That's more of a #libera question, but https://libera.chat/guides/registration outlines the steps
[08:23:37] <vintagemind> thx
[08:23:49] <kuahara> I think I'm the only person in three communities using openpyxl
[08:24:00] *** Joins: herme5 (~mote@2604:a880:400:d1::901:5001)
[08:24:03] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[08:24:06] *** herme5 is now known as el_kevino
[08:25:19] *** Parts: leonid27 (~bryan@d118-75-17-87.nap.wideopenwest.com) ()
[08:25:32] <Gotoma> @kuahara thats okay I guess ^^
[08:26:04] *** Quits: Guest_135 (~Guest_135@2001:9e8:30b:1500:9d62:6ba4:fb08:9169) (Ping timeout: 250 seconds)
[08:26:07] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 246 seconds)
[08:26:28] <kuahara> Kind of annoying when you trip over a bug in the library and there's no one you can ask about it.
[08:27:24] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:cde9:ec1e:3b73:a5d6) (Ping timeout: 240 seconds)
[08:27:52] <Gotoma> Opening a Issue did not help?
[08:28:32] <Gotoma> But I am using it too in project, what bug you found?
[08:28:41] *** Joins: cdman (~dcm@27.2.218.66)
[08:28:42] *** Quits: cdman (~dcm@27.2.218.66) (Changing host)
[08:28:42] *** Joins: cdman (~dcm@user/dmc/x-4369397)
[08:30:51] *** Joins: jiunshyong (~jiunshyon@131.228.104.80)
[08:31:08] <jinsun__> kuahara: seems to be working fine if I try https://bpa.st/LKSQ
[08:32:08] *** Quits: Guest141 (~Guest141@88.103.7.38) (Ping timeout: 250 seconds)
[08:35:03] *** Quits: ndut_ (~ndut@2001:448a:1082:fe6f:1573:3e90:c7b6:794a) (Read error: Connection reset by peer)
[08:35:13] <rindolf> vintagemind: https://github.com/shlomif/Freenode-programming-channel-FAQ/blob/master/FAQ_with_ToC__generated.md#which-integrated-development-environment-ide-or-text-editor-would-you-recommend
[08:35:34] <vintagemind> what a long link
[08:35:59] <vintagemind> thx
[08:36:15] <rindolf> vintagemind: https://is.gd/3IOezp
[08:36:43] <rindolf> vintagemind: you're welcome
[08:37:28] *** Joins: nomic (~nomic@185.217.117.233)
[08:37:31] *** vintagemind is now known as YourNick2
[08:37:53] *** Quits: Gotoma (~textual@ip1f10e588.dynamic.kabel-deutschland.de) (Quit: Textual IRC Client: www.textualapp.com)
[08:38:26] *** YourNick2 is now known as vintagemind
[08:39:14] *** Quits: davidw (~davidw@h72-35-148-100.bendor.broadband.dynamic.tds.net) (Ping timeout: 260 seconds)
[08:39:52] *** Quits: vlado (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c) (Quit: WeeChat 3.4)
[08:39:55] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:40:49] *** Quits: vintagemind (~vintagemi@122-199-29-229.ip4.superloop.com) (Changing host)
[08:40:49] *** Joins: vintagemind (~vintagemi@user/vintagemind)
[08:41:53] *** Quits: vintagemind (~vintagemi@user/vintagemind) (Quit: Client closed)
[08:42:21] *** Quits: jinsun__ (~jinsun@user/jinsun) ()
[08:42:23] *** Joins: vintagemind (~vintagemi@user/vintagemind)
[08:44:29] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[08:46:18] *** Joins: Donno (~donno@58.84.206.182)
[08:46:45] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:48:04] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 272 seconds)
[08:48:47] *** Quits: vintagemind (~vintagemi@user/vintagemind) (Quit: Client closed)
[08:49:03] *** Joins: vintagemind (~vintagemi@user/vintagemind)
[08:52:23] <kuahara> I don't understand.  Why would it work inside a loop, but not outside?
[08:52:25] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[08:52:36] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[08:53:03] *** Quits: vintagemind (~vintagemi@user/vintagemind) (Client Quit)
[08:54:00] <kuahara> I also don't want to change the width of column A in every sheet, just in 1 specific sheet.
[08:54:14] <kuahara> What I wrote should have worked.
[08:54:33] *** Joins: vintagemind (~vintagemi@user/vintagemind)
[08:55:13] *** Quits: vintagemind (~vintagemi@user/vintagemind) (Client Quit)
[08:56:45] *** Joins: f__ (~f@2607:f598:bbda:220:57fe:83b3:3d5e:6304)
[08:56:46] *** Quits: dznfdavnz (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: dznfdavnz)
[08:57:04] *** Joins: Gotoma (~textual@ip4d14fa13.dynamic.kabel-deutschland.de)
[08:57:35] *** Quits: reedrichards (~f@2607:f598:bbda:220:ec59:469f:c7e5:9ad4) (Remote host closed the connection)
[08:58:22] <gevreeen> is there some way to get a WSGI python application to send HTTP 1.1 trailers?
[08:58:23] *** Quits: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2) (Ping timeout: 256 seconds)
[08:59:32] *** Joins: ndut (~ndut@2001:448a:1082:fe6f:28ea:e1f8:1adb:bb6a)
[09:00:32] <jinsun_> <kuahara> "I don't understand.  Why would..." <- it works outside the loop too for me, for one specific sheet
[09:00:39] <gevreeen> ok. no there > mitsuhiko.pocoo.org/djangocon-wsgi.pdf
[09:00:48] <gevreeen> "what's not in wsgi"...
[09:01:30] <gevreeen> alas, why was wsgi written to be just a bloody ***subset*** of http...
[09:02:38] <jinsun_> <kuahara> "What I wrote should have worked." <- I'm guessing something wrong with the code that you have before and after that line, or in the way that you are checking if it works
[09:02:41] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[09:04:27] *** Quits: bloody (~bloody@user/bloody) (Quit: okluvyabubye)
[09:05:46] <kuahara> I tried it using the loop and same results. Not working.    https://bpa.st/6SQQ
[09:06:25] <kuahara> I am checking if it worked by deleting the previous file and letting my code recreate the file anew.  When I open the new file in excel and check the column width in the only worksheet inside the workbook, the width is wrong.
[09:06:46] *** Quits: mickey (~user@user/mickey) (Ping timeout: 260 seconds)
[09:07:00] *** Quits: Gotoma (~textual@ip4d14fa13.dynamic.kabel-deutschland.de) (Quit: Textual IRC Client: www.textualapp.com)
[09:07:43] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[09:08:02] *** Joins: humanBird (~humanBird@cpe-23-241-168-220.socal.res.rr.com)
[09:08:39] *** Joins: Gotoma (~textual@ip4d14fa13.dynamic.kabel-deutschland.de)
[09:08:53] *** Joins: subopt (~subopt@2603-8081-2302-459a-9d33-e10f-6b70-b83b.res6.spectrum.com)
[09:08:57] <ndut> https://docs.google.com/document/d/1a8Iu7NEj6lMpPWmPLjd1coTcE-DxvRQN/edit?usp=sharing&ouid=115099719813834057978&rtpof=true&sd=true
[09:09:01] <ndut> python tutorial
[09:09:02] <ndut> :)
[09:09:02] <kuahara> Here is a brand new file that ONLY does this one thing.    https://bpa.st/BLRA
[09:09:09] <ndut> what do you guys think ?
[09:09:09] *** Quits: Gotoma (~textual@ip4d14fa13.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[09:09:21] *** Joins: djapo (~archangel@user/djapo)
[09:09:41] <kuahara> Interestingly enough, it actually does resize all 4 of those columns, but not to the size that I specified in my code
[09:09:45] <ndut> https://docs.google.com/document/d/1a8Iu7NEj6lMpPWmPLjd1coTcE-DxvRQN/edit?usp=sharing&ouid=115099719813834057978&rtpof=true&sd=true
[09:09:48] <ndut> yap this the one
[09:10:03] <kuahara> if you could stop spamming it, that'd make it even better.
[09:10:21] *** Joins: zacts (~zacts@user/zacts)
[09:10:28] <kuahara> heh... all 4 column sizes are off by exactly 0.71
[09:11:04] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[09:11:37] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 246 seconds)
[09:11:52] <kuahara> Looks like I am not the only one that has run into this.  I'll just offset it.    https://foss.heptapod.net/openpyxl/openpyxl/-/issues/293
[09:12:01] *** Joins: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net)
[09:12:27] *** Joins: sandb0y (~pirate@user/sandb0y)
[09:13:18] *** Joins: jpn (~jpn@user/jpn)
[09:15:03] *** Quits: Trashlord (~trash@user/trashlord) (Ping timeout: 256 seconds)
[09:15:06] *** Joins: mickey (~user@user/mickey)
[09:15:17] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:15:24] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[09:15:33] *** Quits: jiunshyong (~jiunshyon@131.228.104.80) (Quit: WeeChat 3.4.1)
[09:15:55] *** Quits: data68 (~data@2a02:908:a67:2ce0:c23f:d5ff:fe6c:da60) (Quit: WeeChat 1.4)
[09:15:56] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 272 seconds)
[09:18:55] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[09:19:20] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 246 seconds)
[09:20:14] *** Joins: bahamas (~lucian@86.121.135.166)
[09:20:39] *** Quits: hanetzer1 (~hanetzer@user/hanetzer) (Ping timeout: 260 seconds)
[09:20:58] *** Joins: RiFo (~RiFo@user/rifo)
[09:22:36] *** Joins: hanetzer1 (~hanetzer@user/hanetzer)
[09:23:14] *** Joins: lystra (~lystra@d53-64-11-169.nap.wideopenwest.com)
[09:23:38] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[09:24:24] *** Joins: jinsun (~jinsun@user/jinsun)
[09:28:40] *** Joins: nightrider (~nr@208.94.235.43)
[09:29:16] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[09:29:31] <jinsun_> kuahara: ah okay, so it was wrong width, I was thinking that the width didn't change at all from your original description
[09:29:33] <nightrider> Is it possible to create an android app using only python?
[09:29:59] *** Quits: bahamas (~lucian@86.121.135.166) (Ping timeout: 260 seconds)
[09:30:24] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[09:31:11] *** Joins: jpn (~jpn@user/jpn)
[09:31:43] <kuahara> jinsun_ I was thinking the same thing, but only because in the original file, the column widths were already pretty close, but not quite right.
[09:31:54] <kuahara> It's hard to notice that the real problem is that the new width is off by 0.71
[09:32:17] <kuahara> I did some more reading and it turns out this is a font specific problem in openpyxl.  Why column width isn't universal across fonts is beyond me, but it is what it is.
[09:32:26] *** Quits: orbisvicis_ (~orbisvici@user/orbisvicis) (Ping timeout: 252 seconds)
[09:32:32] *** Joins: han-solo (~han-solo@user/han-solo)
[09:34:14] *** Joins: betuxy (~betuxy@p579adb74.dip0.t-ipconnect.de)
[09:37:18] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 260 seconds)
[09:38:28] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 260 seconds)
[09:39:00] *** Quits: Skriptmonkey (~Skriptmon@82-92-237-24.gci.net) (Remote host closed the connection)
[09:39:14] *** Joins: reedrichards (~f@2607:f598:bbda:220:9e77:6280:5aba:4a78)
[09:39:26] *** Quits: f__ (~f@2607:f598:bbda:220:57fe:83b3:3d5e:6304) (Remote host closed the connection)
[09:39:45] *** Quits: effg (~effgee@91.220.171.155) (Ping timeout: 256 seconds)
[09:40:06] *** Joins: dvx (~dvx@5.181.92.64)
[09:40:25] *** Quits: dre (~dre@2001:8003:c932:c301:638:3121:7e52:64a6) (Ping timeout: 250 seconds)
[09:40:28] *** Joins: storm_ (~storm@78.171.20.242)
[09:40:36] *** Joins: effgee (~effgee@91.220.171.155)
[09:42:01] *** Quits: goppo (~goppo@user/goppo) (Quit: Textual IRC Client: www.textualapp.com)
[09:43:43] *** Joins: parv (~quass@user/parv)
[09:44:43] *** Joins: han-solo (~han-solo@user/han-solo)
[09:45:56] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[09:47:36] *** Joins: AlanMD_ (~AlanMD@86.124.29.88)
[09:47:36] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 272 seconds)
[09:47:48] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Ping timeout: 260 seconds)
[09:49:52] *** Quits: lessshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Read error: No route to host)
[09:50:10] *** Joins: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[09:50:14] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[09:50:29] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 246 seconds)
[09:51:27] *** Quits: cliluw (~cliluw@47.147.77.43) (Quit: Leaving)
[09:53:38] *** Quits: favadi (~favadi@2001:ee0:4081:6914:f515:3fd0:10f1:6a2) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:57:50] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[09:59:00] *** Quits: Enitin (~Enitin@82.180.145.228) (Ping timeout: 272 seconds)
[09:59:45] *** Joins: zacts (~zacts@user/zacts)
[10:00:38] *** Quits: storm_ (~storm@78.171.20.242) (Ping timeout: 260 seconds)
[10:00:59] *** Joins: Enitin (~Enitin@82.180.145.230)
[10:02:42] *** Quits: zacts (~zacts@user/zacts) (Client Quit)
[10:03:40] *** Joins: storm_ (~storm@78.173.231.178)
[10:05:43] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[10:06:09] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:06:11] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[10:06:12] <mihaiadrian>     from configs import Config`
[10:06:25] <mihaiadrian> what module should i install for this to work?
[10:08:40] *** Quits: ndut (~ndut@2001:448a:1082:fe6f:28ea:e1f8:1adb:bb6a) (Quit: Leaving)
[10:10:03] *** Quits: srg (~srg@user/srg) (Quit: :wqa)
[10:10:22] *** Joins: jpn (~jpn@user/jpn)
[10:11:31] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 260 seconds)
[10:11:46] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[10:12:36] <parv> "configs"
[10:13:22] *** Joins: ndut (~ndut@2001:448a:1082:fe6f:28ea:e1f8:1adb:bb6a)
[10:13:26] *** Joins: han-solo (~han-solo@user/han-solo)
[10:14:25] *** Joins: dre (~dre@2001:8003:c932:c301:d3ef:a188:4933:10bd)
[10:17:38] *** Quits: ndut (~ndut@2001:448a:1082:fe6f:28ea:e1f8:1adb:bb6a) (Client Quit)
[10:18:08] *** Quits: llh (~UPP@user/llh) (Ping timeout: 260 seconds)
[10:18:08] *** Joins: manti7 (~manti7@176.10.104.94)
[10:18:37] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[10:18:59] *** Joins: llh (~UPP@user/llh)
[10:19:27] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 260 seconds)
[10:19:34] *** Joins: upsala (~zcb@185.209.196.134)
[10:20:29] *** Quits: rvalue (~rvalue@user/rvalue) (Remote host closed the connection)
[10:21:25] *** Quits: reedrichards (~f@2607:f598:bbda:220:9e77:6280:5aba:4a78) (Remote host closed the connection)
[10:21:38] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 260 seconds)
[10:21:43] *** Joins: reedrichards (~f@2607:f598:bbda:220:fbc4:22c3:1afd:7eab)
[10:21:59] *** Joins: envex (~envex@cpe-173-91-189-33.neo.res.rr.com)
[10:22:23] *** Joins: rvalue (~rvalue@user/rvalue)
[10:22:42] *** Quits: dre (~dre@2001:8003:c932:c301:d3ef:a188:4933:10bd) (Quit: Leaving)
[10:23:04] *** Quits: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[10:23:14] *** Joins: Enitin (~Enitin@82.180.145.225)
[10:23:54] *** Joins: jinsun__ (~jinsun@user/jinsun)
[10:23:55] *** Quits: faceface (~faceface@user/faceface) (Quit: Lost terminal)
[10:23:56] *** Joins: favadi (~favadi@2001:ee0:4081:6914:e882:c38c:eda6:1708)
[10:23:57] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:cde9:ec1e:3b73:a5d6)
[10:23:57] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 260 seconds)
[10:25:22] *** Joins: jinsun___ (~jinsun@user/jinsun)
[10:26:11] <mihaiadrian> i have this line
[10:26:12] <mihaiadrian>     API_ID = int(os.environ.get("619520"))
[10:26:26] <mihaiadrian> and python says TypeError: int() argument must be a string, a bytes-like object or a number, not 'NoneType'
[10:26:28] <mihaiadrian> what to do?
[10:26:38] *** Joins: ndut (~ndut@2001:448a:1082:fe6f:28ea:e1f8:1adb:bb6a)
[10:26:52] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 272 seconds)
[10:27:24] *** Quits: jinsun (~jinsun@user/jinsun) (Ping timeout: 240 seconds)
[10:27:46] *** Joins: eroux (~eroux@102-65-72-61.ftth.web.africa)
[10:28:03] *** jinsun___ is now known as jinsun
[10:28:43] *** Quits: jinsun__ (~jinsun@user/jinsun) (Ping timeout: 256 seconds)
[10:29:27] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:29:49] <parv> mihaiadrian, That 'int(os.environ.get("619520"))' does not look right ...
[10:29:51] *** Quits: Enitin (~Enitin@82.180.145.225) (Ping timeout: 256 seconds)
[10:30:19] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[10:30:22] <jinsun> that means "619520" environment variable is not set, so .get is giving you None
[10:30:23] <Donno> mihaiadrian: The get() function there is returning None when there is no key called "619520".
[10:30:46] *** Joins: Enitin (~Enitin@82.180.145.224)
[10:31:33] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:31:41] <parv> I personally doubt that the number would be a key instead of a value
[10:32:24] <mihaiadrian> https://github.com/AbirHasan2005/Forward-Client/blob/main/configs.py
[10:32:30] <mihaiadrian> i just want to edit this config file
[10:32:50] <jinsun> it is a bit weird but possible to set 619520 as the key too
[10:33:06] <parv> 🤷‍♀️
[10:33:49] *** Quits: jochum (~quassel@user/jochum) (Read error: Connection reset by peer)
[10:33:50] <jinsun> though seems you were right, the code says API_ID = int(os.environ.get("API_ID"))
[10:33:58] <parv> Ha! See the line 19!
[10:33:59] *** Quits: JC5 (~X@user/jc5) (Quit: Bye)
[10:34:02] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Quit: kaiseisei)
[10:34:05] <jinsun> "API_ID" and not "619520"
[10:34:10] <parv> s/19/9/
[10:34:43] <jinsun> mihaiadrian: if you want to hardcode the API_ID in the code, you should do API_ID = 619520
[10:34:57] *** Quits: Enitin (~Enitin@82.180.145.224) (Ping timeout: 256 seconds)
[10:34:57] <mihaiadrian> jinsun: ah, i see
[10:35:07] <jinsun> otherwise export API_ID=619520 before runnning that code
[10:35:27] <mihaiadrian> jinsun: same for API_HASH and STRING_SESSION?
[10:35:35] <mihaiadrian> jinsun: hm, ok. trying now.
[10:35:50] <jinsun> yes, same for all environment variables
[10:38:06] *** Joins: jochum (~quassel@user/jochum)
[10:39:14] <mihaiadrian> jinsun: i tried exporting them before running the script, now i get a bunch of errors
[10:40:05] <mihaiadrian> so was that configs.py file just making some shell calls to set those environmental vars?
[10:40:14] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[10:40:32] <jinsun> paste the errors here https://bpa.st/+pytb and give us the link
[10:40:38] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[10:41:27] <jinsun> not shell calls I think, directly getting them from the os, but yes os.environ has the environment variables
[10:41:40] <parv> os.environ.get() -- returns the value of the environment variable; does not set one
[10:41:54] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[10:42:04] *** Joins: mexen (uid495612@user/mexen)
[10:42:06] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[10:42:07] <jinsun> and yeah the code was getting them, not setting then
[10:42:14] <mihaiadrian> oh, okay
[10:42:16] <mihaiadrian> let me try again
[10:42:22] <mihaiadrian> and i will paste the output
[10:42:47] *** Quits: aghast (~aghast@2607:fb91:bd0b:1329:a0d6:4979:f73c:e2ec) (Ping timeout: 260 seconds)
[10:43:41] *** Quits: eroux (~eroux@102-65-72-61.ftth.web.africa) (Ping timeout: 246 seconds)
[10:44:19] *** Quits: jinsun (~jinsun@user/jinsun) ()
[10:45:27] <mihaiadrian> these are the errors https://bpa.st/KP5Q
[10:45:40] *** Joins: jinsun (~jinsun@user/jinsun)
[10:46:07] *** Quits: djapo (~archangel@user/djapo) (Read error: Connection reset by peer)
[10:46:41] *** Joins: djapo (~archangel@user/djapo)
[10:47:22] *** Joins: carl- (~carl-@185.103.188.130)
[10:48:17] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[10:48:17] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[10:48:50] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[10:48:55] *** Joins: maxzor (~maxzor@2a01cb04054faa008ccf64ee8021dfab.ipv6.abo.wanadoo.fr)
[10:49:25] *** Joins: panthermartn (~pantherma@068-190-068-044.res.spectrum.com)
[10:49:43] *** Joins: goppo (~goppo@user/goppo)
[10:49:56] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[10:51:02] <ndut> 43 more minute election of university finished ... . good luck ... . mit harvard cambridge ntu unsw so far ... .
[10:51:23] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 260 seconds)
[10:52:17] <parv> mihaiadrian, Print "struct" to see what & how much is actually returned (pprint module could be helpful). Entirely possible that you might have some unchecked error condition which might be casuing "struct" to be not (correctly) populated.
[10:53:18] *** Quits: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net) (Quit: leaving)
[10:54:44] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 272 seconds)
[10:55:26] <jinsun> mihaiadrian: it is a bit specific error to the pyrogram thing that code is using, but I'm guessing your STRING_SESSION is the problem
[10:55:44] *** Joins: gusto (~Augustus@109.255.100.54)
[10:55:46] *** Joins: savolla (~quassel@84.44.28.28)
[10:56:24] *** Joins: flea (nosoul@gateway/vpn/protonvpn/nosoul)
[11:00:26] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 272 seconds)
[11:01:39] *** Joins: KeybInterrupt (~quassel@dslb-002-200-104-234.002.200.pools.vodafone-ip.de)
[11:05:04] *** Quits: RiFo (~RiFo@user/rifo) (Quit: ... and thanks for all the fish.)
[11:05:11] *** Joins: codebam_ (~codebam@user/codebam)
[11:06:16] *** Joins: luigibu (~luigi@93.176.153.88)
[11:06:49] *** Joins: slav0nic (slav0nic@python.su)
[11:06:55] *** Quits: savolla (~quassel@84.44.28.28) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[11:07:17] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Quit: kaiseisei)
[11:07:31] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 260 seconds)
[11:08:16] *** Joins: mncheck (~mncheck@193.224.205.254)
[11:08:50] *** Joins: JC5 (~X@user/jc5)
[11:09:44] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[11:12:11] *** Quits: luigibu (~luigi@93.176.153.88) (Quit: WeeChat 3.5)
[11:12:49] *** Joins: luigibu (~luigi@93.176.153.88)
[11:13:17] *** Joins: Enitin (~Enitin@82.180.145.230)
[11:13:42] *** Joins: HaMsTeRs (~Thunderbi@210.3.201.132)
[11:13:56] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[11:14:06] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[11:14:31] *** Joins: plastico (~plastico@neomutt/plastico)
[11:14:53] *** Joins: RiFo (~RiFo@user/rifo)
[11:15:46] *** Joins: phylaz (~phylaz@82.51-174-55.customer.lyse.net)
[11:17:44] *** Joins: Deana (~Deana@185.46.198.220)
[11:19:15] *** Joins: f__ (~f@2607:f598:bbda:220:873a:b4dd:abdb:c027)
[11:19:22] *** Quits: reedrichards (~f@2607:f598:bbda:220:fbc4:22c3:1afd:7eab) (Remote host closed the connection)
[11:20:10] *** Joins: emerent_ (~quassel@p200300cd5743c3e8ba27ebfffed28a59.dip0.t-ipconnect.de)
[11:20:11] *** emerent is now known as Guest1991
[11:20:11] *** emerent_ is now known as emerent
[11:20:33] *** Quits: Guest1991 (~quassel@p200300cd5743c3dfba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[11:21:29] *** Quits: Mechanismus (~LabMonkey@206.255.106.67) (Quit: Leaving)
[11:21:57] *** Quits: koo5_ (~quassel@51.140.155.227) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[11:22:36] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 272 seconds)
[11:22:51] *** Joins: koo5_ (~quassel@51.140.155.227)
[11:25:55] *** Quits: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (Quit: jarthur)
[11:25:59] *** Quits: RiFo (~RiFo@user/rifo) (Quit: ... and thanks for all the fish.)
[11:29:03] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[11:30:13] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[11:30:13] *** Joins: reedrichards (~f@2607:f598:bbda:220:e3ab:31a:8026:4bda)
[11:31:01] *** Quits: f__ (~f@2607:f598:bbda:220:873a:b4dd:abdb:c027) (Remote host closed the connection)
[11:31:31] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:31:32] <dob1> having a ThreadPoolExecutor can I know how many job were submitted ?
[11:31:52] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:32:40] *** Quits: panthermartn (~pantherma@068-190-068-044.res.spectrum.com) (Quit: Connection closed)
[11:34:38] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[11:34:38] *** Joins: andreasbuhr (~quassel@p549dbbe6.dip0.t-ipconnect.de)
[11:34:40] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[11:34:44] <rindolf> dob1: subclass it?
[11:34:50] *** Quits: msk (~Thunderbi@89.205.124.83) (Read error: Connection reset by peer)
[11:35:16] <dob1> rindolf, I am not so expert to know how it works internally
[11:35:22] *** Joins: msk (~Thunderbi@89.205.124.39)
[11:35:30] *** Joins: k2ro (~k2ro@p5b175c79.dip0.t-ipconnect.de)
[11:37:07] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:37:32] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[11:38:21] *** Joins: nullroute (~nullroute@user/nullroute)
[11:39:29] *** Joins: palasso (~palasso@user/palasso)
[11:39:33] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 256 seconds)
[11:40:11] *** Joins: data68 (~data@2a02:908:a67:2ce0:3432:985d:bdd4:43e0)
[11:40:23] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 260 seconds)
[11:40:46] *** lukedashjr is now known as luke-jr
[11:40:51] *** Joins: jpn (~jpn@user/jpn)
[11:41:49] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:94fe:3c2b:a7d3:5d92)
[11:42:24] *** Joins: Naan (~Naan@user/naan)
[11:43:50] *** Joins: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk)
[11:43:54] *** Quits: \mSg (mSg@user/msg/x-0285936) (Ping timeout: 252 seconds)
[11:44:16] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Quit: kaiseisei)
[11:46:07] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[11:46:31] *** Joins: Guest141 (~Guest141@88.103.7.38)
[11:47:37] *** Joins: vladoski (~vladoski@host-95-232-62-77.retail.telecomitalia.it)
[11:50:38] *** Joins: teut (~teut@103.144.92.200)
[11:50:43] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Quit: mihaiadrian)
[11:50:51] *** Joins: hanzo (uid532183@user/hanzo)
[11:51:07] <teut> id_, sheetname, dayColumn, api = itemgetter("id", "sheetname", "dayColumn", "api")(            settings        )        what was the easier way to do this without using itemgetter?
[11:51:21] <teut> someone told that but  I forgot it
[11:51:29] *** Joins: pydev (~pydev3@2001:b07:5d28:551:ddc3:7abe:7cf0:ede6)
[11:51:50] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:53:58] *** Joins: Payam69 (~Payam@138.106.57.132)
[11:54:51] *** Joins: RiFo (~RiFo@user/rifo)
[11:58:10] *** Quits: mcglk (~mcglk@131.191.49.120) (Read error: Connection reset by peer)
[11:59:09] *** Joins: mcglk (~mcglk@131.191.49.120)
[11:59:45] <jinsun_> if the keys are in that order then the rhs could just be settings.values()
[12:01:03] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[12:01:15] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Quit: kaiseisei)
[12:01:21] <jinsun_> if the order is unknown then that won't be right, you can do {d[k] for k in ...}, which is a bit more readable than the itemgetter to me
[12:01:28] *** Quits: haliucinas (~52b4903d@5.20.153.21) (Quit: haliucinas)
[12:02:47] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[12:02:56] *** Joins: haliucinas (~d5c5a67e@5.20.153.21)
[12:04:06] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Client Quit)
[12:04:16] *** Joins: merijn (~merijn@c-001-002-001.client.esciencecenter.eduvpn.nl)
[12:04:18] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[12:06:09] *** Quits: betuxy (~betuxy@p579adb74.dip0.t-ipconnect.de) (Quit: Connection closed)
[12:06:53] *** Joins: kosh (~kosh@user/kosh)
[12:07:11] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Remote host closed the connection)
[12:07:22] <jinsun> ah but not with {}, that would make a set, use ()
[12:07:37] *** Joins: han-solo (~han-solo@user/han-solo)
[12:07:58] *** Joins: Iolo (~iolo@user/Iolo)
[12:08:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[12:09:07] *** Quits: merijn (~merijn@c-001-002-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[12:09:15] *** Joins: wyclif (~wyclif@user/wyclif)
[12:09:16] *** Quits: k2ro (~k2ro@p5b175c79.dip0.t-ipconnect.de) (Quit: k2ro)
[12:09:40] *** Quits: vladoski (~vladoski@host-95-232-62-77.retail.telecomitalia.it) (Read error: Connection reset by peer)
[12:10:21] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[12:11:31] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Client Quit)
[12:11:34] *** Quits: luigibu (~luigi@93.176.153.88) (Quit: WeeChat 3.5)
[12:12:21] *** Joins: quhar (~quhar@192.162.148.48)
[12:12:58] *** Joins: k2ro (~k2ro@p5b175c79.dip0.t-ipconnect.de)
[12:13:41] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[12:14:05] *** Quits: RiFo (~RiFo@user/rifo) (Quit: ... and thanks for all the fish.)
[12:14:15] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[12:14:50] *** Joins: wyclif (~wyclif@user/wyclif)
[12:15:23] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 246 seconds)
[12:15:44] *** Joins: merijn (~merijn@c-001-002-001.client.esciencecenter.eduvpn.nl)
[12:16:31] <teut> you only told something jinsun the other day
[12:16:46] *** Joins: Optimus (~risto@87.227.227.147)
[12:16:53] <teut> which did the same but without itemgetter or loop
[12:17:23] <jinsun> I think I said the same thing as today, use .values()
[12:17:23] *** Quits: Optimus (~risto@87.227.227.147) (Client Quit)
[12:17:47] <teut> settings.values() and then?
[12:17:59] <teut> couldn't understand it well
[12:19:11] *** Joins: RiFo (~RiFo@user/rifo)
[12:19:14] <jinsun> but that relies on the order of keys, so the more robust way would be {d[k] for k in list_of_keys}
[12:19:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[12:19:35] *** Joins: stockh0lm (~Andreas@p200300d2c710830029314be21f255e61.dip0.t-ipconnect.de)
[12:20:04] *** Joins: Optimus (~risto@87.227.227.147)
[12:20:08] <jinsun> depends on how the settingns dict is constructed, if you do it yourself, then just make the keys in the same order as you unpack them, then .values() would work
[12:20:22] *** Joins: wyclif (~wyclif@user/wyclif)
[12:20:24] *** Quits: Optimus (~risto@87.227.227.147) (Client Quit)
[12:21:20] <jinsun> teut: I mean `id_, sheetname, dayColumn, api = settings.values()`
[12:21:21] *** Joins: Mechanismus (~LabMonkey@206.255.106.67)
[12:22:02] *** Joins: Optimus (~risto@87.227.227.147)
[12:22:41] *** Quits: RiFo (~RiFo@user/rifo) (Client Quit)
[12:23:06] <jinsun> teut: or if you are not making the dict yourself with the correrct order of the keys then `id_, sheetname, dayColumn, api = (settings[k] for k in ("id", "sheetname", "dayColumn", "api"))`
[12:24:32] *** Joins: jinsun__ (~jinsun@user/jinsun)
[12:24:33] *** jinsun is now known as Guest3467
[12:24:33] *** jinsun__ is now known as jinsun
[12:24:40] *** Quits: blackpawn (~blackpawn@c-73-73-53-23.hsd1.il.comcast.net) (Ping timeout: 272 seconds)
[12:24:48] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:6d6c:97be:3d9b:d69f)
[12:25:35] *** Joins: RiFo (~RiFo@user/rifo)
[12:26:03] *** Quits: goppo (~goppo@user/goppo) (Quit: My iMac has gone to sleep. ZZZzzz…)
[12:27:31] *** Joins: Gotoma (~textual@ip4d14fa13.dynamic.kabel-deutschland.de)
[12:28:29] *** Quits: Guest3467 (~jinsun@user/jinsun) (Ping timeout: 272 seconds)
[12:28:55] *** Joins: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be)
[12:30:10] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[12:30:33] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[12:31:41] *** Joins: wyclif (~wyclif@user/wyclif)
[12:31:51] <teut> yes that can be done but it should be made easier
[12:32:19] <teut> it's a very common operation
[12:32:32] *** Quits: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net) (Ping timeout: 246 seconds)
[12:33:16] <jinsun> I don't think it is that common
[12:33:23] *** Joins: grooverman_ (~grooverma@179.97.175.157)
[12:33:39] <jinsun> more common is to make a class out of a dict, for that dataclasses are good
[12:33:52] <jinsun> I mean make a class instance out of the dict
[12:33:59] *** Joins: rsx (~dummy@ppp-188-174-138-3.dynamic.mnet-online.de)
[12:35:26] *** Quits: grooverman (~grooverma@179.97.175.157) (Ping timeout: 272 seconds)
[12:36:08] *** Quits: MrWu (~wu@141.red-2-139-122.dynamicip.rima-tde.net) (Quit: leaving)
[12:36:12] <teut> https://dpaste.org/J6dx
[12:36:17] *** Joins: Wu (~wu@141.red-2-139-122.dynamicip.rima-tde.net)
[12:36:21] <teut> how to improve the code?
[12:36:35] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 240 seconds)
[12:36:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[12:37:14] *** Joins: wyclif (~wyclif@user/wyclif)
[12:37:14] <teut> json is something a business person can modify but not the classes
[12:37:59] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[12:38:20] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[12:38:43] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 260 seconds)
[12:38:43] <The-Compiler> teut: first thing I'd do is to run black over it to fix the inconsistent indentation and such
[12:38:59] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[12:39:06] <The-Compiler> teut: you don't need "global settings" if you just want to read them - and usually constants are all-caps, i.e. SETTINGS
[12:39:25] <The-Compiler> teut: if those are modified by different people, maybe consider moving them into a separate .json-file or so
[12:39:44] *** Quits: JohnDoe1 (~johndoe1@184-091-099-189.res.spectrum.com) (Read error: Connection reset by peer)
[12:39:57] <teut> ya you are correct , let me uppercase it
[12:40:05] <The-Compiler> teut: and the try:/except HttpError ...: seems to be rather big, maybe check if you can only have the code making HTTP requests in there rather than everything
[12:40:07] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[12:40:49] <jinsun> you can use json and still use classes, json doesn't mean dict, do json -> dict -> dataaclass, or use one if the libraries to directly load a json into a dataclass instance
[12:41:01] *** Joins: betuxy (~betuxy@p579adb74.dip0.t-ipconnect.de)
[12:41:05] *** Joins: jmd (~user@de.cellform.com)
[12:41:06] <teut> I initially had put a separate json file but manager said , make single colab file
[12:41:10] <teut> no extra files
[12:41:23] *** Joins: peteyboy1 (~peteyboy1@199.157.133.37.dynamic.jazztel.es)
[12:42:01] *** Quits: sokan (~sokan@2a02:587:9e1f:c900:227:eff:fe16:865d) (Quit: Reality.is.a.lie)
[12:42:10] *** Joins: Atque (~Atque@user/atque)
[12:42:34] <teut> The-Compiler actually I modified the snippet from google sheets api
[12:42:45] <teut> so thats why it's like that
[12:43:01] <teut> thanks for the help guys
[12:44:06] *** Quits: megaTherion (~therion@unix.io) (Ping timeout: 245 seconds)
[12:45:15] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 240 seconds)
[12:45:29] *** Quits: nucleargrave (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net) (Ping timeout: 246 seconds)
[12:45:30] *** Joins: blackpawn (~blackpawn@c-73-73-53-23.hsd1.il.comcast.net)
[12:45:34] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[12:45:43] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[12:45:49] *** Joins: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net)
[12:46:14] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[12:46:35] *** Quits: chenqisu1 (~chenqisu1@183.217.200.168) (Quit: Leaving)
[12:46:35] *** Quits: ano (~ano@user/ano) (Ping timeout: 240 seconds)
[12:46:40] *** Joins: tejr (~tejr@user/tejr)
[12:46:47] *** Quits: k2ro (~k2ro@p5b175c79.dip0.t-ipconnect.de) (Quit: k2ro)
[12:48:50] *** Joins: ano (~ano@user/ano)
[12:49:13] <gevreeen> does the FeedParser API in email.parser supports parsing http/1.1 chunked encoding?
[12:49:21] <gevreeen> or do I have to resort to http.client?
[12:51:14] *** Joins: f__ (~f@2607:f598:bbda:220:109:5bd7:ab3:ae6b)
[12:51:49] *** Joins: jpn (~jpn@user/jpn)
[12:51:54] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 272 seconds)
[12:52:15] *** Quits: reedrichards (~f@2607:f598:bbda:220:e3ab:31a:8026:4bda) (Remote host closed the connection)
[12:52:32] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 272 seconds)
[12:52:35] *** Joins: k2ro (~k2ro@p5b175c79.dip0.t-ipconnect.de)
[12:53:06] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[12:53:11] *** Quits: Optimus (~risto@87.227.227.147) (Ping timeout: 246 seconds)
[12:53:11] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:53:19] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[12:54:16] *** Quits: vimal (~vimal@2a02:a210:9641:8780:c1c8:67bc:35b:91da) (Quit: Leaving)
[12:55:48] *** Quits: maxzor (~maxzor@2a01cb04054faa008ccf64ee8021dfab.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[12:57:23] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 260 seconds)
[12:59:42] *** Joins: nucleargrave (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[12:59:43] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 260 seconds)
[13:00:21] *** Quits: RiFo (~RiFo@user/rifo) (Quit: ... and thanks for all the fish.)
[13:02:32] *** Joins: RiFo (~RiFo@user/rifo)
[13:02:42] *** Joins: Pickchea (~private@user/pickchea)
[13:04:46] *** Joins: bomb-on (~bomb-on@user/bomb-on)
[13:07:53] *** Joins: Trashlord (~trash@user/trashlord)
[13:08:48] *** Quits: belphegor666 (~satan@user/belphegor666) (Quit: WeeChat 3.4)
[13:09:08] *** Joins: belphegor666 (~satan@ip-046-223-003-068.um13.pools.vodafone-ip.de)
[13:09:26] *** Quits: bomb-on (~bomb-on@user/bomb-on) (Ping timeout: 260 seconds)
[13:09:38] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 272 seconds)
[13:10:54] *** Joins: me-sudoer-dentne (~me-sudoer@2409:4071:2292:ea90:2154:3fa0:f58a:8ee0)
[13:11:32] *** Quits: jinsun (~jinsun@user/jinsun) (Ping timeout: 272 seconds)
[13:11:57] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:12:13] *** Joins: jpn (~jpn@user/jpn)
[13:12:31] *** Quits: me-sudoer-dentne (~me-sudoer@2409:4071:2292:ea90:2154:3fa0:f58a:8ee0) (Client Quit)
[13:13:38] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[13:13:47] *** Quits: slav0nic (slav0nic@python.su) (Remote host closed the connection)
[13:14:03] *** Joins: me-sudoer-dentne (~me-sudoer@2409:4071:2292:ea90:2154:3fa0:f58a:8ee0)
[13:15:40] *** Quits: belphegor666 (~satan@ip-046-223-003-068.um13.pools.vodafone-ip.de) (Changing host)
[13:15:40] *** Joins: belphegor666 (~satan@user/belphegor666)
[13:15:48] *** Joins: goppo (~goppo@user/goppo)
[13:15:53] *** Quits: otiose (~otiose@156.146.48.156) (Ping timeout: 256 seconds)
[13:16:39] *** Joins: dante-as (~dante-as@188.26.94.194)
[13:16:52] *** Joins: distantsail (~distantsa@ip72-218-52-185.hr.hr.cox.net)
[13:16:56] *** Joins: nuclearg2 (~nucleargr@user/nuclearg1)
[13:17:14] <dante-as> Hi guys, how can I print `time.gmtime` without miliseconds?
[13:17:18] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[13:18:08] *** Quits: teut (~teut@103.144.92.200) (Ping timeout: 250 seconds)
[13:18:23] *** Quits: lbalhar (~lbalhar@93.185.13.26) (Ping timeout: 246 seconds)
[13:20:02] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[13:20:07] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:20:13] *** Joins: dhch7 (~dhch@185.213.154.171)
[13:20:37] *** Joins: moog_ (~moog@107.126.53.130)
[13:21:56] *** Quits: zaz\ (~zaz@poneybl.eu) (Quit: bye)
[13:22:14] *** Quits: dhch (~dhch@185.213.154.171) (Ping timeout: 246 seconds)
[13:22:18] *** Quits: nuclearg2 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[13:22:30] *** Joins: dhch (~dhch@185.213.154.171)
[13:22:56] *** Quits: moog (~moog@98.97.85.1) (Ping timeout: 246 seconds)
[13:23:59] *** Joins: paul424 (~tom@ip-5-172-232-59.multi.internet.cyfrowypolsat.pl)
[13:24:50] *** Quits: dhch7 (~dhch@185.213.154.171) (Ping timeout: 272 seconds)
[13:24:51] *** Quits: capn (~capn@user/capn) (Ping timeout: 272 seconds)
[13:25:11] <ndut> i am learning python now
[13:25:25] *** Joins: zaz\ (~zaz@poneybl.eu)
[13:25:28] <ndut> the way to read is really not by listening but by reading
[13:25:44] <ndut> if you read 2 sentences PHD level
[13:25:46] <ndut> think
[13:25:58] <ndut> what The Author Trying to say and guess it
[13:26:03] <ndut> and remember that 2 sentences
[13:26:12] <ndut> until you know what He mean
[13:26:14] <ndut> example
[13:26:25] <ndut> P
[13:26:25] <ndut> rocess, creativity, and quality. Burn these three words into your mind while you read this book.
[13:26:25] <ndut> Process. Creativity. Quality. This book may be full of exercises that teach important topics every
[13:26:25] <ndut> programmer should know, but the real knowledge you’ll gain from the book is these three words.
[13:26:35] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 260 seconds)
[13:26:49] <ndut> what do you think
[13:27:11] <ndut> The author is trying to say this 3 which is Process Creativity and Quality
[13:27:18] <ndut> but He didn't explain more
[13:27:29] <ndut> soo think again before you continue
[13:27:40] <KirkMcDonald> Seems like a platitude.
[13:27:54] <ndut> so we should remember which one is that
[13:27:55] <ndut> :)
[13:28:02] <ndut> done grandpa collect the money now
[13:29:48] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[13:30:04] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[13:30:39] <KirkMcDonald> My main advice for learning is to read code and ask why.
[13:30:54] <KirkMcDonald> "Do not follow in the footsteps of the wise; seek what they sought."
[13:31:17] *** Joins: capn (~capn@user/capn)
[13:31:26] *** Joins: Optimus (~risto@87.227.227.147)
[13:31:50] <parv> dante-as, Use time.strftime() method with your own time format; https://docs.python.org/3/library/time.html
[13:33:18] *** Joins: Ergo^ (~ergo@91.238.59.144)
[13:34:06] *** Quits: peterandre (~peterandr@2605:6400:c847:1524::4251) (Ping timeout: 245 seconds)
[13:34:14] *** Joins: shuck (~shuck@user/shuck)
[13:35:23] *** Quits: k2ro (~k2ro@p5b175c79.dip0.t-ipconnect.de) (Quit: k2ro)
[13:36:17] *** Quits: nicoz (nicoz@ubuntu/member/nicoz) (Ping timeout: 240 seconds)
[13:37:07] *** Joins: ivii (~ivan@user/ivii)
[13:39:05] *** Joins: k2ro (~k2ro@p5b175c79.dip0.t-ipconnect.de)
[13:41:20] <dante-as> parv: I've tried time.strptime("%Y-%m-%d %H:%M:%S", str(time.gmtime)) , but it doesn't work. Any idea how to make it work with this format?
[13:41:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[13:42:00] *** Quits: anshupatia_ (uid29854@id-29854.helmsley.irccloud.com) ()
[13:42:07] *** Joins: wyclif (~wyclif@user/wyclif)
[13:42:08] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 252 seconds)
[13:42:24] *** Quits: wingsorc (~wingsorc@user/wingsorc) (Quit: Leaving)
[13:42:27] *** Joins: anshupatia (uid29854@id-29854.helmsley.irccloud.com)
[13:43:00] <parv> dante-as, https://docs.python.org/3/library/time.html#time.strftime -- second argument is not a string. But you had forced that to be
[13:43:37] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Quit: WeeChat 2.8)
[13:43:54] <parv> dante-as, Wait! That is "strftime" not strptime. I thought you wanted to *print* the time not create one
[13:44:35] <parv> <dante-as> Hi guys, how can I print `time.gmtime` without miliseconds?
[13:44:45] <dante-as> I would need to assign this value for logging.Formatter.convert
[13:45:48] <dante-as> It doesn't matter how I achieve that:D
[13:47:07] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[13:47:51] *** Joins: wyclif (~wyclif@user/wyclif)
[13:47:57] <dante-as> To `logging.Formatter.convert` I can assign same types as the one for `time.gmtime`
[13:48:32] *** Joins: iomari891 (~iomari891@197.210.77.28)
[13:48:47] <dante-as> For example, `logging.Formatter.convert = time.gmtime` works, but I would need `time.gmtime` without miliseconds
[13:49:50] *** Quits: virmire (~Virmire@p200300cfc71981017ff3a2049d66781f.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[13:50:43] *** Quits: k2ro (~k2ro@p5b175c79.dip0.t-ipconnect.de) (Quit: k2ro)
[13:51:02] *** Joins: virmire (~Virmire@p200300cfc71981017ff3a2049d66781f.dip0.t-ipconnect.de)
[13:52:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[13:53:08] *** Joins: soju-test-user (~soju-test@2a01cb040760a5cb0000000000000318.ipv6.abo.wanadoo.fr)
[13:53:23] *** Joins: wyclif (~wyclif@user/wyclif)
[13:53:24] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[13:57:04] *** Joins: slav0nic (slav0nic@python.su)
[13:57:49] *** ndut is now known as dodocrypto
[13:57:49] *** Quits: dodocrypto (~ndut@2001:448a:1082:fe6f:28ea:e1f8:1adb:bb6a) (K-Lined)
[13:58:32] *** Quits: amaenli (~amaenli@aries.uberspace.de) (Changing host)
[13:58:32] *** Joins: amaenli (~amaenli@user/amaenli)
[13:58:41] *** Joins: megaTherion (~therion@unix.io)
[13:59:15] *** Joins: seifeslimene (~seifeslim@197.2.39.226)
[13:59:32] <parv> Last time when I tried to have millisecond printed in log via logging module, found that if "datefmt" parameter has been specified in logging.Formatter(), time is not printed with millisecond.
[14:00:37] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[14:00:41] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[14:00:49] <parv> That apparent side effect should not be relied upon of course.
[14:01:15] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[14:01:27] <dante-as> Yes, that's correct. But sometimes, some devs want to have local time or UTC so I have to change it according to their needs
[14:01:56] <gloomy> Hey, I'm using a library that doesn't include type annotations and wanted to make a .pyi file to annotate one function that returns a dict with specific keys
[14:01:58] <dante-as> my date_format is string but I would need to keep the same date_format, but sometimes UTC, sometimes local
[14:02:01] <dante-as> depending on their needs
[14:02:17] <dante-as> That's why I would need to use logging.Formatter.convert, to convert the time according to their needs
[14:02:52] <gloomy> So in  foo.pyi I created a TypedDict (class MyReturnDict(TypedDict) ...) and annotated the relevant function as returning a MyReturnDict
[14:03:14] <parv> .oO( That is turning out to be XY, YZ-problem )
[14:03:38] <gloomy> This works fine for typecheckers, but it fails at runtime because MyReturnDict is not a member of the actual module (it's only defined in the .pyi file)
[14:03:42] <gloomy> How's this normally done?
[14:04:10] *** Joins: driib2 (~driib@185.65.135.234)
[14:04:27] <gloomy> *it fails when in my own code, I declare a function as `bar() -> foo.MyReturnDict`
[14:06:38] *** Quits: betuxy (~betuxy@p579adb74.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[14:06:48] *** Quits: shuck (~shuck@user/shuck) (Ping timeout: 260 seconds)
[14:07:23] *** Joins: TheCat (~TheCat@user/z-cat)
[14:07:27] *** Quits: parv (~quass@user/parv) (Quit: parv)
[14:08:05] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 246 seconds)
[14:08:49] *** Joins: nuclearg2 (~nucleargr@user/nuclearg1)
[14:09:24] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:11:16] *** Joins: shuck (~shuck@user/shuck)
[14:12:44] *** Joins: reedrichards (~f@2607:f598:bbda:220:7ed5:5f3d:e91d:5aad)
[14:13:36] *** Quits: nuclearg2 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[14:13:45] *** Joins: jpn_ (~jpn@user/jpn)
[14:13:45] *** Quits: f__ (~f@2607:f598:bbda:220:109:5bd7:ab3:ae6b) (Remote host closed the connection)
[14:15:56] *** Joins: bomb-on (~bomb-on@user/bomb-on)
[14:16:31] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 260 seconds)
[14:17:35] <gloomy> Is there maybe a way to annotate the return type using comments? Seems like it can be done for variables (# type: int) but can't find how to do it for function return types
[14:20:36] *** Joins: E3xPloit (~E3xPloit@2001:448a:1082:fe6f:cd1a:6fe6:ef2c:bd86)
[14:21:11] *** Quits: Morfeus (~a@user/morfeus) (Ping timeout: 260 seconds)
[14:21:41] *** Joins: cdown (~cdown@user/cdown)
[14:21:55] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[14:22:23] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[14:24:20] *** Joins: gatto (~henry@88-109-69-64.dynamic.dsl.as9105.com)
[14:24:36] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 240 seconds)
[14:25:31] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[14:25:46] <wallbroken> https://dpaste.org/kRfv
[14:25:50] <wallbroken> what wrong with that?
[14:27:01] *** Joins: k2ro (~k2ro@p5b175c79.dip0.t-ipconnect.de)
[14:27:05] *** Quits: E3xPloit (~E3xPloit@2001:448a:1082:fe6f:cd1a:6fe6:ef2c:bd86) (Quit: Leaving)
[14:27:07] *** Joins: sandipan (~Sandipan@202.142.80.157)
[14:27:38] *** Joins: E3xPloit (~E3xPloit@2001:448a:1082:fe6f:cd1a:6fe6:ef2c:bd86)
[14:27:47] *** Joins: gproto23 (~gproto23@user/gproto23)
[14:28:04] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[14:28:32] *** Quits: sandb0y (~pirate@user/sandb0y) (Quit: Time for another great escape)
[14:29:33] *** Quits: saroy (~Sandipan@103.24.86.178) (Ping timeout: 260 seconds)
[14:31:17] <hans> does Python support private methods?
[14:31:26] *** Quits: epicout (~epicout@user/epicout) (Quit: ZNC - https://znc.in)
[14:31:34] <E3xPloit> just code in java guys
[14:31:39] *** Joins: epicout (~epicout@user/epicout)
[14:31:40] <E3xPloit> if you want portability
[14:31:44] <E3xPloit> pyhon3 nah
[14:31:51] <E3xPloit> even for game java run so fast hans
[14:32:10] <hans> sorry, i very specifically *want* an interpreted language for this
[14:32:40] *** Quits: favadi (~favadi@2001:ee0:4081:6914:e882:c38c:eda6:1708) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:32:44] <hans> ... i suppose one could make the argument that Java is bytecode-interpreted? buttttttt
[14:32:55] <hans> actually idk
[14:32:57] <hans> w/e
[14:33:02] *** Joins: favadi (~favadi@2001:ee0:4081:6914:e882:c38c:eda6:1708)
[14:35:27] *** Joins: radny (~radny@185.243.55.117)
[14:35:36] <Gotoma> @hans there is not such thing as private methods as far as I know, what do you need it for in python?
[14:35:46] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[14:36:18] *** Quits: k2ro (~k2ro@p5b175c79.dip0.t-ipconnect.de) (Quit: k2ro)
[14:37:10] *** Quits: Forsaken87 (~quassel@2a02:908:1866:e360:4d2a:597c:d813:f407) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:37:41] *** Quits: favadi (~favadi@2001:ee0:4081:6914:e882:c38c:eda6:1708) (Client Quit)
[14:37:58] *** Quits: epicout (~epicout@user/epicout) (Quit: ZNC - https://znc.in)
[14:38:11] *** Joins: epicout (~epicout@user/epicout)
[14:38:35] *** Joins: favadi (~favadi@2001:ee0:4081:6914:5dc2:82a5:a213:2ac7)
[14:38:54] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:4d2a:597c:d813:f407)
[14:39:21] <hans> Gotoma: when i want to write methods that are *not* supposed to be used from the outside, like  class C { private function setError(...){...} }
[14:39:30] <hans> not part of the public api
[14:40:20] <The-Compiler> E3xPloit: this is #python - telling people to "just use java" isn't constructive.
[14:40:48] *** Joins: k2ro (~k2ro@p5b175c79.dip0.t-ipconnect.de)
[14:41:23] <Gotoma> You can use underscore prefix convention to keep them out of code completion and declare them as "private"
[14:41:24] <E3xPloit> :)
[14:41:28] *** Joins: pulseaudio (~pulseaudi@103.42.174.55)
[14:41:29] <E3xPloit> well just my advise
[14:41:30] <The-Compiler> hans: yes and no - methods which start with an underscore are private by convention, and linters such as pylint will tell you when you access them outside of the object, but Python itself doesn't enforce it
[14:41:35] <E3xPloit> i love pyhon myself
[14:41:39] <E3xPloit> only for scripting
[14:41:46] *** Quits: dante-as (~dante-as@188.26.94.194) (Ping timeout: 250 seconds)
[14:42:09] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[14:42:28] <The-Compiler> E3xPloit: people do all kind of stuff with Python and are happy with it. Hell, I'm maintaining a web browser in Python.
[14:42:41] <hans> hahah, headless right?
[14:42:54] <The-Compiler> hans: no: https://qutebrowser.org
[14:43:14] *** Joins: cosimone (~user@93-47-230-184.ip115.fastwebnet.it)
[14:43:32] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[14:43:42] <The-Compiler> (the heavy lifting is done by C++ via Qt/Chromium behind the scenes, but still, qutebrowser's code itself is Python and a bit of JS)
[14:43:43] <hans> neat, i take it QtWebEngine does all the heavy lifting with html/css parsing?
[14:43:48] <The-Compiler> yup
[14:43:55] *** Joins: nuclearg2 (~nucleargr@user/nuclearg1)
[14:43:58] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[14:44:54] <hans> how's the javascript?
[14:45:03] <hans> functionaly?
[14:45:07] <hans> functional?*
[14:46:01] *** Quits: jpn_ (~jpn@user/jpn) (Quit: leaving)
[14:46:21] *** Joins: jpn (~jpn@user/jpn)
[14:47:11] <hans> is there a convention for "this is supposed to be constant, don't change it?" like say, Curl.CURLOPT_URL
[14:47:19] *** Quits: E3xPloit (~E3xPloit@2001:448a:1082:fe6f:cd1a:6fe6:ef2c:bd86) (Quit: Leaving)
[14:47:27] <hans> ... put that questionmark 1 byte too much left
[14:47:44] <hans> perhaps all uppercase members?
[14:48:42] <The-Compiler> hans: yes, all-uppercase for constants
[14:48:48] *** Quits: nuclearg2 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[14:48:49] <rendar> `def x(events:str=None): ...` is this annotation wrong?
[14:48:55] <hans> nice
[14:48:55] <The-Compiler> hans: see https://peps.python.org/pep-0008/
[14:49:45] *** Quits: k2ro (~k2ro@p5b175c79.dip0.t-ipconnect.de) (Quit: k2ro)
[14:50:09] <The-Compiler> hans: especially https://peps.python.org/pep-0008/#descriptive-naming-styles and https://peps.python.org/pep-0008/#constants
[14:50:24] *** Joins: k2ro (~k2ro@p5b175c79.dip0.t-ipconnect.de)
[14:50:28] <Gotoma> The annotation is ok, just add a space after colon
[14:50:32] <The-Compiler> rendar: depends on the tool and settings
[14:50:47] <Gotoma> And Strings should not be "None" usually but can be of course
[14:51:00] <The-Compiler> rendar: https://mypy.readthedocs.io/en/stable/command_line.html#none-and-optional-handling
[14:52:14] *** Quits: thekingofbandit (thekingofb@user/thekingofbandit) (Remote host closed the connection)
[14:52:14] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 272 seconds)
[14:53:11] *** Joins: thekingofbandit (thekingofb@user/thekingofbandit)
[14:53:52] *** Quits: k2ro (~k2ro@p5b175c79.dip0.t-ipconnect.de) (Client Quit)
[14:54:10] *** Joins: fling (~fling@user/fling)
[14:54:56] *** Joins: ELFrederich (~ELFrederi@siemens-industry-software-inc-216-196-155-202.static.fuse.net)
[14:56:10] *** Joins: DaNeenjah (~jake@adsl-74-230-4-23.hsv.bellsouth.net)
[14:56:46] *** Quits: data68 (~data@2a02:908:a67:2ce0:3432:985d:bdd4:43e0) (Ping timeout: 260 seconds)
[14:57:44] *** Quits: howdoi (uid224@id-224.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[14:58:37] *** Joins: han-solo (~han-solo@user/han-solo)
[14:58:42] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Quit: mihaiadrian)
[14:58:44] <malvin> would perpetual energy exist if we could invent a device to keep the matter and energy from spreading out by pushing infinitely outward on the rest of the matter
[14:59:44] <malvin> can anyone guess what library im after?
[14:59:55] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[15:00:42] *** Joins: wyclif (~wyclif@user/wyclif)
[15:01:26] *** Joins: sreve_ (~quassel@p54a70c2b.dip0.t-ipconnect.de)
[15:01:45] *** Quits: sreve (~quassel@p4ff44a40.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[15:02:22] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 272 seconds)
[15:02:27] *** Joins: Guts71 (~Guts71@197.205.39.148)
[15:03:17] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[15:03:52] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[15:03:52] *** Joins: amogorkon (~amogorkon@user/amogorkon)
[15:04:32] *** Joins: Enitin (~Enitin@82.180.145.227)
[15:04:41] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 256 seconds)
[15:05:08] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[15:05:38] *** Quits: seifeslimene (~seifeslim@197.2.39.226) (Quit: Ping timeout (120 seconds))
[15:05:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[15:06:15] *** Joins: wyclif (~wyclif@user/wyclif)
[15:06:17] *** Joins: han-solo (~han-solo@user/han-solo)
[15:06:19] *** Joins: seifeslimene (~seifeslim@197.2.39.226)
[15:06:33] <The-Compiler> malvin: easy, just "import perpetual_energy"
[15:06:56] <malvin> what is that?
[15:06:57] *** Quits: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net) (Ping timeout: 256 seconds)
[15:07:32] <malvin> how would i make a decentralised system to decide fairly what jobs people do for how long
[15:07:51] <malvin> or how would i make a decentralised api?
[15:08:21] <malvin> im making an api where anyone can sell anything from it on their site as a kit etc
[15:08:26] *** Quits: sharperguy (~sharpergu@88.130.222.229) (Ping timeout: 260 seconds)
[15:08:31] *** Joins: saroy|afk (~Sandipan@103.24.86.178)
[15:08:42] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:6d6c:97be:3d9b:d69f) (Quit: My iMac has gone to sleep. ZZZzzz…)
[15:09:29] <malvin> maybe sell anything at market rate/demand
[15:09:57] *** Joins: sharperguy (~sharpergu@fnord.cryptophone.de)
[15:09:59] <malvin> buysellapi
[15:10:11] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 250 seconds)
[15:11:00] <Gotoma> just decentralize the database
[15:11:14] *** Quits: sandipan (~Sandipan@202.142.80.157) (Ping timeout: 272 seconds)
[15:11:17] <malvin> thered be too much in it
[15:11:20] <parsnip> decentralize the device
[15:11:32] <malvin> i can run instances in every cloud
[15:11:35] <malvin> well
[15:11:47] <malvin> i might be able to if it made a profit
[15:11:56] *** Joins: Bandicoot (~bandicoot@45.154.88.240)
[15:12:03] <malvin> even running ethicalads
[15:12:06] <parsnip> decentralize the profit
[15:12:06] *** Joins: E3xPloit (~E3xPloit@2001:448a:1082:fe6f:cd1a:6fe6:ef2c:bd86)
[15:12:10] <Gotoma> "We can to it, for money" :)
[15:12:28] <malvin> i dont know that i would do it for money ;)
[15:12:49] <Gotoma> https://i.imgflip.com/1mw06n.jpg
[15:12:51] <malvin> i want to start it and move on
[15:12:53] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[15:13:04] *** Quits: E3xPloit (~E3xPloit@2001:448a:1082:fe6f:cd1a:6fe6:ef2c:bd86) (Client Quit)
[15:13:24] <malvin> hey you cant charge more than minimum wage ok
[15:14:05] *** Quits: pydev (~pydev3@2001:b07:5d28:551:ddc3:7abe:7cf0:ede6) (Ping timeout: 256 seconds)
[15:14:26] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Quit: WeeChat 3.4)
[15:16:06] <The-Compiler> that all doesn't seem terribly related to Python
[15:17:17] *** Quits: bomb-on (~bomb-on@user/bomb-on) (Ping timeout: 252 seconds)
[15:17:38] <Gotoma> You are right @The-Compiler sorry
[15:18:14] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[15:18:35] *** Quits: goppo (~goppo@user/goppo) (Ping timeout: 260 seconds)
[15:18:35] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Ping timeout: 260 seconds)
[15:20:08] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[15:21:27] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[15:21:45] *** Quits: epicout (~epicout@user/epicout) (Quit: ZNC - https://znc.in)
[15:21:54] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:22:04] *** Quits: RiFo (~RiFo@user/rifo) (Quit: ... and thanks for all the fish.)
[15:22:12] *** Joins: epicout (~epicout@user/epicout)
[15:22:18] *** Quits: me-sudoer-dentne (~me-sudoer@2409:4071:2292:ea90:2154:3fa0:f58a:8ee0) (Quit: Leaving)
[15:22:45] *** Joins: f__ (~f@2607:f598:bbda:220:6df0:1818:3a68:48a2)
[15:22:49] *** Quits: epicout (~epicout@user/epicout) (Client Quit)
[15:23:13] *** Joins: epicout (~epicout@user/epicout)
[15:23:27] *** Quits: reedrichards (~f@2607:f598:bbda:220:7ed5:5f3d:e91d:5aad) (Remote host closed the connection)
[15:23:43] *** Quits: HaMsTeRs (~Thunderbi@210.3.201.132) (Ping timeout: 260 seconds)
[15:26:25] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[15:26:30] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[15:26:35] *** Joins: HaMsTeRs (~Thunderbi@210.3.201.132)
[15:27:26] *** Quits: HaMsTeRs (~Thunderbi@210.3.201.132) (Client Quit)
[15:29:05] *** Joins: ano (~ano@user/ano)
[15:29:19] *** Quits: epicout (~epicout@user/epicout) (Quit: ZNC - https://znc.in)
[15:29:32] *** Joins: epicout (~epicout@user/epicout)
[15:30:56] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[15:31:03] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[15:31:23] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[15:32:06] *** Joins: comerijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[15:32:09] *** Quits: epicout (~epicout@user/epicout) (Client Quit)
[15:33:22] *** Joins: epicout (~epicout@user/epicout)
[15:33:31] *** Quits: merijn (~merijn@c-001-002-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 260 seconds)
[15:34:22] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[15:35:11] *** Joins: nuclearg2 (~nucleargr@user/nuclearg1)
[15:36:37] *** Quits: Deana (~Deana@185.46.198.220) (Quit: Konversation terminated!)
[15:36:38] *** Quits: comerijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 246 seconds)
[15:36:51] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[15:37:49] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[15:39:15] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[15:39:37] <patchie> has anyone here used pandarallel?
[15:40:43] *** Quits: nuclearg2 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[15:44:12] *** Joins: vanessa (~farawayas@103.160.128.7)
[15:45:13] <Tritium> patchie: i have not, but you are more likely to get answers to your questions about it if you ask them instead of polling for experts
[15:45:16] *** Quits: ckdCreations (~ckdCreati@147.55.133.138) (Read error: Connection reset by peer)
[15:45:33] *** Joins: varmonger (~nav@122.182.204.29)
[15:45:43] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[15:45:50] <patchie> Tritium: ofc, but if there is no experts, it might not make any sense anyways
[15:45:53] <patchie> i dont get it to work
[15:46:13] <patchie> i dont get any error messages
[15:46:22] <patchie> it just runs for hours without failing or doing anything
[15:47:10] <nedbat> patchie: share the details of what you are doing. Sometimes people with no experience at all with it will be interested to use your problem as a way to learn a new thing.
[15:49:11] <varmonger> Hi! I have a folder structure https://imgur.com/1ybN6QS and want to access app.models inside reset_db.py but I'm getting attempted relative import with no known parent package..
[15:49:26] <patchie> nedbat: https://pastebin.com/6jYTE2Ye <-- this is my code
[15:49:32] <varmonger> I'm trying `from .app.models import Model`
[15:50:05] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[15:50:07] <varmonger> what is going on?
[15:50:21] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 245 seconds)
[15:50:27] *** Joins: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com)
[15:50:51] <varmonger> I have __init__.py in both app and root/ directories
[15:50:54] *** Joins: ckdCreations (~ckdCreati@147.55.133.134)
[15:52:05] *** Quits: Bandicoot (~bandicoot@45.154.88.240) (Quit: Leaving)
[15:52:57] <mav`rik> Is there a decent "black hole" (/dev/null-alike) dict implementation? I'm currently looking into what's needed for collections.abc.MutableMapping to work out what I need to override, but I'm looking to implement a mock over some existing expensive code to test a theory on performance.
[15:54:15] *** Joins: veek (~veek@117.192.19.139)
[15:54:22] *** Quits: epicout (~epicout@user/epicout) (Quit: ZNC - https://znc.in)
[15:54:43] *** Joins: epicout (~epicout@user/epicout)
[15:54:58] <patchie> How do i get pandarallel to work? it just runs for hours without any error messages, the progress bars shows 0.00%. code: https://pastebin.com/WTHKDDSp
[15:55:09] <patchie> https://usercontent.irccloud-cdn.com/file/02tYZoCT/Screenshot.png
[15:55:31] *** Quits: veek (~veek@117.192.19.139) (Remote host closed the connection)
[15:55:48] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[15:56:21] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[15:58:00] *** Joins: Bandicoot (~bandicoot@45.154.88.240)
[15:58:06] <donofrio> how do I get thie command to work?  "python3 -m pip install -r requirements.txt" (lists lxml==4.6.3 and pycryptodome==3.10.4) but only returns "/usr/bin/python3: No module named pip" ?
[15:58:24] <mgedmin> donofrio: sudo apt install python3-pip or equivalent
[15:58:51] <mgedmin> or, even better, sudo apt install virtualenv, and then create a virtualenv for your work, then pip install things inside it
[15:59:00] <mgedmin> (replace 'apt install' with whatever's appropriate for your distro)
[15:59:47] <The-Compiler> donofrio: https://packaging.python.org/en/latest/guides/installing-using-linux-tools/ https://packaging.python.org/en/latest/tutorials/installing-packages/#ensure-you-can-run-pip-from-the-command-line
[16:00:21] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 245 seconds)
[16:01:41] *** Joins: lpapp (~lpapp@ec2-35-158-255-21.eu-central-1.compute.amazonaws.com)
[16:01:48] *** Quits: effgee (~effgee@91.220.171.155) (Read error: Connection reset by peer)
[16:02:44] <lpapp> hi, when using PyArg_ParseTupleAndKeywords, what is the point of "O!" with PyBool_Type rather than using something like p?
[16:02:47] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[16:03:29] *** Joins: caveman_ (~caveman@gateway/tor-sasl/caveman)
[16:03:37] *** Quits: vanessa (~farawayas@103.160.128.7) (Remote host closed the connection)
[16:04:03] *** Joins: vanessa (~farawayas@103.160.128.7)
[16:04:27] <jinsun_> mav`rik: since you said mock, maybe https://docs.python.org/3/library/unittest.mock.html#unittest.mock.MagicMock
[16:04:36] *** Joins: aknot (~aknot@2603-900a-1503-17bb-9197-7b40-5a87-ca45.inf6.spectrum.com)
[16:05:04] <jinsun_> ugh, mav`rik ^
[16:05:08] *** Joins: cdown_ (~cdown@user/cdown)
[16:05:29] <jinsun_> element can't handle ` properly
[16:05:40] <donofrio> it says "python3-pip is already at the newest version (9.0.1-2.3~ubuntu1.18.04.5)"
[16:06:14] <han-solo> `apt install python3-venv`
[16:06:15] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[16:06:17] *** Quits: paul424 (~tom@ip-5-172-232-59.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[16:07:12] <han-solo> and then `python3 -m venv .venv;` and that .venv will have a pip for you
[16:07:25] *** Quits: caveman_ (~caveman@gateway/tor-sasl/caveman) (Client Quit)
[16:07:53] *** Quits: cdown (~cdown@user/cdown) (Ping timeout: 252 seconds)
[16:07:57] *** cdown_ is now known as cdown
[16:08:03] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Remote host closed the connection)
[16:09:24] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[16:10:09] <donofrio> han-solo, you helpin me or?
[16:10:24] <han-solo> trying to
[16:10:33] <han-solo> is that a debian based distro ?
[16:10:39] <varmonger> exit
[16:10:41] *** Quits: varmonger (~nav@122.182.204.29) (Quit: leaving)
[16:10:41] <donofrio> yah it is ubuntu 18.04
[16:11:53] *** Quits: jianwu (~jianwu@softbank126088036030.bbtec.net) (Remote host closed the connection)
[16:12:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[16:12:20] <han-solo> install that `python3-venv` then `python3 -m venv .venv; .venv/bin/python -m pip install -r requirements.txt;` and use that `python`
[16:12:26] *** Joins: nuclearg2 (~nucleargr@user/nuclearg1)
[16:12:29] *** Quits: favadi (~favadi@2001:ee0:4081:6914:5dc2:82a5:a213:2ac7) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:13:06] *** Joins: wyclif (~wyclif@user/wyclif)
[16:13:34] *** Joins: jianwu (~jianwu@softbank126088036030.bbtec.net)
[16:14:20] <donofrio> venv was good enough it is found pip now
[16:14:34] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 272 seconds)
[16:14:40] <donofrio> didn't have to do the -m stuff
[16:15:06] <han-solo> yeah, force of habit
[16:16:11] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[16:16:34] *** Quits: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Remote host closed the connection)
[16:17:35] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 246 seconds)
[16:17:35] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 246 seconds)
[16:17:59] <donofrio> ;)
[16:18:03] <donofrio> thank you for your time
[16:18:35] *** Joins: wyclif (~wyclif@user/wyclif)
[16:19:33] <patchie> anyone?
[16:21:38] *** Quits: slav0nic (slav0nic@python.su) (Remote host closed the connection)
[16:21:42] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[16:21:50] <han-solo> patchie: https://nalepae.github.io/pandarallel/troubleshooting/
[16:21:58] *** Joins: slav0nic (slav0nic@2a01:7e01::f03c:93ff:fe79:3aa)
[16:22:03] <han-solo> seems like the first one ?
[16:22:03] *** Quits: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Remote host closed the connection)
[16:22:35] *** Quits: epicout (~epicout@user/epicout) (Quit: ZNC - https://znc.in)
[16:22:49] *** Joins: epicout (~epicout@user/epicout)
[16:22:59] *** Quits: kostkon (~kostkon@athedsl-254924.home.otenet.gr) (Ping timeout: 260 seconds)
[16:23:10] <han-solo> ...so move the `math` import inside and it should be fine ?
[16:24:08] *** Joins: kostkon (~kostkon@2a02:587:a116:3f98:3895:2f1e:72f3:356a)
[16:24:17] <patchie> han-solo: it would seem so, but still problem
[16:24:24] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[16:24:31] *** Joins: grooverman (~grooverma@179.97.175.157)
[16:24:37] <patchie> https://usercontent.irccloud-cdn.com/file/J3fOwfmX/new%20screenshot
[16:25:02] *** Joins: tomeaton17 (~tomeaton1@2a0c:5bc0:40:2e2f:cc16:4092:ec61:18f1)
[16:26:08] *** Joins: parv (~quass@user/parv)
[16:26:41] *** Quits: nuclearg2 (~nucleargr@user/nuclearg1) (Ping timeout: 246 seconds)
[16:27:14] *** Quits: grooverman_ (~grooverma@179.97.175.157) (Ping timeout: 272 seconds)
[16:29:38] *** Quits: frost (~frost@user/frost) (Quit: Client closed)
[16:29:40] *** Quits: parv (~quass@user/parv) (Client Quit)
[16:30:05] *** Joins: frost (~frost@user/frost)
[16:31:51] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[16:32:36] <han-solo> i see
[16:33:48] *** Parts: lpapp (~lpapp@ec2-35-158-255-21.eu-central-1.compute.amazonaws.com) ()
[16:34:12] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Read error: Connection reset by peer)
[16:34:48] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:35:35] *** Quits: Linux77 (~L30n4rd0@189-48-140-124.user3p.veloxzone.com.br) (Ping timeout: 260 seconds)
[16:36:10] *** Quits: Guest141 (~Guest141@88.103.7.38) (Ping timeout: 250 seconds)
[16:36:29] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 256 seconds)
[16:36:36] *** Joins: dez (uid92154@user/dez)
[16:36:46] <patchie> han-solo: any ideas?
[16:37:17] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:7408:15f4:46a:f010) (Ping timeout: 250 seconds)
[16:37:24] *** Joins: Linux77 (~L30n4rd0@189-48-140-124.user3p.veloxzone.com.br)
[16:37:33] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[16:37:49] *** Quits: seoul_man (~meh@user/seoul-man/x-5066766) (Remote host closed the connection)
[16:37:51] <han-solo> patchie: your example raises an error
[16:39:07] *** Joins: clarkk (~clarkk@2a00:23c7:d106:2600:2c72:133f:ca92:8dd2)
[16:39:48] *** Joins: pydev (~pydev3@2001:b07:5d28:551:12ce:789f:59bb:2417)
[16:40:10] <han-solo> patchie: please see https://github.com/nalepae/pandarallel/blob/master/docs/examples_windows.ipynb
[16:40:21] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[16:40:36] *** Joins: Ex0day (~Ex0day@user/Ex0day)
[16:40:37] <han-solo> i think, it's an issue with how you are using the "apply"
[16:40:38] *** Quits: Bando (~Bando@c-68-47-51-147.hsd1.mn.comcast.net) (Quit: Connection closed)
[16:40:47] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[16:40:55] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[16:41:43] *** Quits: AlanMD_ (~AlanMD@86.124.29.88) (Quit: ZZZzzz…)
[16:43:44] *** Quits: pulseaudio (~pulseaudi@103.42.174.55) (Remote host closed the connection)
[16:44:12] *** Joins: ap5 (~inf@user/ap5)
[16:44:53] *** Joins: baffodoro (~raffaem@45.134.22.241)
[16:45:18] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[16:45:34] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:a33:3557:c64a:713b)
[16:46:11] <han-solo> patchie: https://bpa.st/PHVQ
[16:46:24] *** Joins: mihael (~mihael@115.146.176.131)
[16:46:58] <mihael> Anyone using ldap3 to query an Active Directory? How do you retrieve the users?
[16:48:26] *** Quits: quhar (~quhar@192.162.148.48) (Remote host closed the connection)
[16:48:32] <patchie> han-solo: aha, thanks. will check it out
[16:50:43] *** Quits: Enitin (~Enitin@82.180.145.227) (Ping timeout: 260 seconds)
[16:50:57] *** Joins: quhar (~quhar@192.162.148.48)
[16:51:10] *** Quits: rvalue (~rvalue@user/rvalue) (Remote host closed the connection)
[16:51:25] *** Joins: rvalue (~rvalue@user/rvalue)
[16:51:28] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[16:54:04] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[16:55:40] *** Quits: Payam69 (~Payam@138.106.57.132) (Ping timeout: 250 seconds)
[16:57:03] *** Quits: aknot (~aknot@2603-900a-1503-17bb-9197-7b40-5a87-ca45.inf6.spectrum.com) (Ping timeout: 260 seconds)
[16:58:21] *** Quits: quhar (~quhar@192.162.148.48) (Remote host closed the connection)
[16:58:45] *** Joins: Trashlord__ (~trash@user/trashlord)
[16:59:03] *** Joins: favadi (~favadi@2001:ee0:4081:6914:cc90:2a33:f69f:10cb)
[16:59:34] *** Joins: k2ro (~k2ro@p5b175c79.dip0.t-ipconnect.de)
[17:00:03] *** Quits: Allegretto (~allegrett@84-236-65-153.pool.digikabel.hu) (Ping timeout: 260 seconds)
[17:00:12] *** Quits: Trashlord (~trash@user/trashlord) (Quit: "True ignorance is not the absence of knowledge, but the refusal to acquire it.")
[17:00:18] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[17:00:19] *** Quits: Trashlord__ (~trash@user/trashlord) (Client Quit)
[17:01:07] *** Joins: fef (~thedawn@user/thedawn)
[17:01:33] *** Joins: Trashlord (~trash@user/trashlord)
[17:02:55] *** Joins: Trashlord__ (~trash@user/trashlord)
[17:04:21] *** Quits: mihael (~mihael@115.146.176.131) (Quit: Ping timeout (120 seconds))
[17:04:47] *** Quits: Ex0day (~Ex0day@user/Ex0day) (Ping timeout: 250 seconds)
[17:05:23] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[17:05:57] *** Quits: earthbre- (earthbreak@2600:3c03::f03c:91ff:fece:9070) (Quit: I Break D Ert)
[17:06:29] *** Joins: mihael (~mihael@115.146.176.131)
[17:07:38] *** Joins: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070)
[17:08:38] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[17:08:53] *** Joins: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net)
[17:09:18] *** Quits: k2ro (~k2ro@p5b175c79.dip0.t-ipconnect.de) (Quit: k2ro)
[17:09:46] *** Quits: mihael (~mihael@115.146.176.131) (Client Quit)
[17:10:02] *** Joins: gproto23 (~gproto23@user/gproto23)
[17:10:13] *** Quits: stockh0lm (~Andreas@p200300d2c710830029314be21f255e61.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[17:11:32] *** Joins: bloody (~bloody@user/bloody)
[17:11:47] *** Quits: cuanim (~cuanim@user/cuanim) (Quit: Leaving)
[17:12:14] *** Joins: nuclearg2 (~nucleargr@user/nuclearg1)
[17:12:24] *** Joins: johnkeats7 (~johnkeats@2804:14c:32:a0cc:60b8:63a9:cdf1:540)
[17:12:24] *** Quits: distantsail (~distantsa@ip72-218-52-185.hr.hr.cox.net) (Quit: WeeChat 3.4)
[17:13:06] *** Quits: mncheck (~mncheck@193.224.205.254) (Remote host closed the connection)
[17:14:09] *** Parts: velix (~velix@user/velix) (Leaving)
[17:14:59] *** Joins: Allegretto (~allegrett@fibhost-66-164-239.fibernet.hu)
[17:15:07] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[17:15:54] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com)
[17:16:37] *** Quits: nuclearg2 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[17:16:46] *** Joins: Ex0day (~Ex0day@user/Ex0day)
[17:17:51] *** Quits: jmd (~user@de.cellform.com) (Ping timeout: 256 seconds)
[17:18:01] *** Quits: kostkon (~kostkon@2a02:587:a116:3f98:3895:2f1e:72f3:356a) (Ping timeout: 250 seconds)
[17:18:53] *** Quits: Trashlord (~trash@user/trashlord) (Quit: "True ignorance is not the absence of knowledge, but the refusal to acquire it.")
[17:19:05] *** Joins: kostkon (~kostkon@athedsl-394286.home.otenet.gr)
[17:19:08] *** Trashlord__ is now known as Trashlord
[17:20:03] *** Joins: tomeaton1787 (~tomeaton1@2a0c:5bc0:40:2e2f:65ed:cdd7:26bd:4946)
[17:20:16] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[17:21:01] *** Quits: favadi (~favadi@2001:ee0:4081:6914:cc90:2a33:f69f:10cb) (Ping timeout: 256 seconds)
[17:22:21] *** Quits: Ex0day (~Ex0day@user/Ex0day) (Ping timeout: 250 seconds)
[17:23:00] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[17:23:10] *** Joins: mncheck (~mncheck@193.224.205.254)
[17:23:24] *** Quits: tomeaton17 (~tomeaton1@2a0c:5bc0:40:2e2f:cc16:4092:ec61:18f1) (Ping timeout: 250 seconds)
[17:23:25] *** Quits: vanessa (~farawayas@103.160.128.7) (Quit: Leaving)
[17:23:37] *** Joins: Ex0day (~Ex0day@2001:448a:1082:fe6f:9d30:400:bedf:2e80)
[17:24:41] *** Quits: Ex0day (~Ex0day@2001:448a:1082:fe6f:9d30:400:bedf:2e80) (Client Quit)
[17:24:42] *** Quits: tomeaton1787 (~tomeaton1@2a0c:5bc0:40:2e2f:65ed:cdd7:26bd:4946) (Ping timeout: 250 seconds)
[17:24:47] *** Quits: soju-test-user (~soju-test@2a01cb040760a5cb0000000000000318.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[17:25:00] *** Joins: soju-test-user (~soju-test@2a01cb040760a5cb0000000000000318.ipv6.abo.wanadoo.fr)
[17:25:17] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Quit: Leaving)
[17:27:01] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[17:27:21] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[17:27:49] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:cde9:ec1e:3b73:a5d6) (Ping timeout: 256 seconds)
[17:28:18] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[17:28:20] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[17:28:40] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[17:30:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[17:30:36] *** Piraty is now known as ping
[17:30:41] *** ping is now known as Piraty
[17:31:05] *** Joins: jay-m126 (~jay-m@gateway/vpn/pia/jay-m126)
[17:32:03] *** Quits: Maxt3r (~Maxt3r@128-76-167-194-static.dk.customer.tdc.net) (Ping timeout: 260 seconds)
[17:33:11] *** Joins: lakrass (~lakrass@user/lakrass)
[17:33:20] *** Joins: Maxt3r (~Maxt3r@128-76-167-194-static.dk.customer.tdc.net)
[17:34:59] *** Quits: soju-test-user (~soju-test@2a01cb040760a5cb0000000000000318.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[17:35:11] *** Joins: soju-test-user (~soju-test@2a01cb040760a5cb0000000000000318.ipv6.abo.wanadoo.fr)
[17:35:54] *** Quits: Gotoma (~textual@ip4d14fa13.dynamic.kabel-deutschland.de) (Quit: My iMac has gone to sleep. ZZZzzz…)
[17:36:50] *** Quits: frost (~frost@user/frost) (Ping timeout: 250 seconds)
[17:38:08] *** Quits: Andrew (Andrew@user/AndrewYu) (Quit: Leaving)
[17:38:14] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[17:38:20] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:59d2:b182:c487:e1de)
[17:38:36] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[17:39:28] *** Joins: Andrew (~andrew@user/AndrewYu)
[17:41:02] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[17:41:48] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[17:42:38] *** Quits: baffodoro (~raffaem@45.134.22.241) (Ping timeout: 260 seconds)
[17:43:00] *** Quits: soju-test-user (~soju-test@2a01cb040760a5cb0000000000000318.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[17:43:12] *** Joins: soju-test-user (~soju-test@2a01cb040760a5cb0000000000000318.ipv6.abo.wanadoo.fr)
[17:43:21] *** Quits: soju-test-user (~soju-test@2a01cb040760a5cb0000000000000318.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[17:43:34] *** Joins: xkuru (~xkuru@user/xkuru)
[17:43:34] *** Joins: soju-test-user (~soju-test@2a01cb040760a5cb0000000000000318.ipv6.abo.wanadoo.fr)
[17:44:01] *** Joins: wyclif (~wyclif@user/wyclif)
[17:44:42] *** Joins: seoul_man (~meh@user/seoul-man/x-5066766)
[17:45:09] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[17:45:29] *** Joins: tomeaton17 (~tomeaton1@2a0c:5bc0:40:2e2f:e8c2:3a2c:83d9:6a9)
[17:45:49] *** Joins: fspax (~fspax@46.148.141.211)
[17:46:18] *** Joins: nuclearg2 (~nucleargr@user/nuclearg1)
[17:46:50] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[17:46:57] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[17:47:10] *** Joins: tejr (~tejr@user/tejr)
[17:49:05] *** Quits: dsrt^ (~dsrt@c-24-99-107-170.hsd1.ga.comcast.net) (Remote host closed the connection)
[17:49:15] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Read error: Connection reset by peer)
[17:49:18] *** Joins: luigibu (~luigi@93.176.153.88)
[17:49:36] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[17:49:53] *** Joins: fmgt (~fmgt@143.0.142.121)
[17:50:19] *** Joins: RiFo (~RiFo@user/rifo)
[17:50:50] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 272 seconds)
[17:51:03] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[17:51:11] *** Quits: nuclearg2 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[17:52:30] *** Quits: fmgt (~fmgt@143.0.142.121) (Client Quit)
[17:53:22] *** Joins: jflabonte (~jflabonte@bras-base-qubcpq0634w-grc-16-174-89-201-64.dsl.bell.ca)
[17:56:49] *** Joins: Guest7470 (~Guest74@eog189.neoplus.adsl.tpnet.pl)
[17:57:15] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[17:57:22] *** Quits: Guest7470 (~Guest74@eog189.neoplus.adsl.tpnet.pl) (Quit: Client closed)
[17:59:16] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[18:00:18] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[18:00:30] *** Quits: Guts71 (~Guts71@197.205.39.148) (Quit: Client closed)
[18:02:02] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:6d4c:38a4:18b7:4b48)
[18:03:03] *** Quits: RiFo (~RiFo@user/rifo) (Quit: ... and thanks for all the fish.)
[18:05:26] *** Joins: lbalhar (~lbalhar@93.185.13.26)
[18:05:53] *** Quits: TheCat (~TheCat@user/z-cat) (Ping timeout: 250 seconds)
[18:06:15] *** Quits: Bandicoot (~bandicoot@45.154.88.240) (Quit: Leaving)
[18:06:43] *** Joins: RiFo (~RiFo@user/rifo)
[18:07:56] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[18:08:15] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:08:17] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:08:40] *** Joins: Ex0day (~Ex0day@2001:448a:1082:fe6f:9c1b:cab:1a67:7bc7)
[18:08:55] *** Joins: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[18:09:39] *** Joins: TheCat (~TheCat@user/z-cat)
[18:09:39] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[18:09:55] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Remote host closed the connection)
[18:10:21] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[18:10:40] *** Joins: mihael (~mihael@115.146.176.131)
[18:11:18] *** Quits: grooverman (~grooverma@179.97.175.157) (Read error: Connection reset by peer)
[18:11:44] *** Quits: carl- (~carl-@185.103.188.130) (Ping timeout: 272 seconds)
[18:11:48] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[18:12:20] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[18:12:29] *** Joins: grooverman (~grooverma@179.97.175.157)
[18:15:53] *** Quits: fearnothing (~fearnothi@user/fearnothing) (Ping timeout: 260 seconds)
[18:16:00] *** Joins: fearnoth1ng (~fearnothi@user/fearnothing)
[18:17:04] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[18:17:09] *** Quits: r4ulrm (~raul@181.27.127.43) (Ping timeout: 252 seconds)
[18:17:18] *** Joins: r4ulrm (~raul@181.27.127.43)
[18:17:23] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:6d4c:38a4:18b7:4b48) (Ping timeout: 250 seconds)
[18:17:32] *** Joins: Guest89 (~Guest89@86.121.171.149)
[18:17:46] *** Quits: Ex0day (~Ex0day@2001:448a:1082:fe6f:9c1b:cab:1a67:7bc7) (Quit: Leaving)
[18:18:06] *** Quits: MRDPZK (~MRDPZK@d205-250-152-220.bchsia.telus.net) (Quit: Client closed)
[18:18:42] *** Quits: Guest89 (~Guest89@86.121.171.149) (Client Quit)
[18:18:52] *** Joins: harry (~harry@49.36.177.248)
[18:18:56] *** Quits: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:19:18] *** Quits: tomeaton17 (~tomeaton1@2a0c:5bc0:40:2e2f:e8c2:3a2c:83d9:6a9) (Ping timeout: 250 seconds)
[18:19:22] <harry> hi, i want to save multiple images to an word doc. how to do that, pls help !
[18:19:43] *** Joins: reedrichards (~f@2607:f598:bbda:220:5ecb:c90f:2b2e:5278)
[18:19:53] *** Quits: f__ (~f@2607:f598:bbda:220:6df0:1818:3a68:48a2) (Remote host closed the connection)
[18:20:04] *** Joins: baecedar (~baecedar@86.121.171.149)
[18:20:32] *** Joins: Pickchea (~private@user/pickchea)
[18:21:03] *** Quits: nbin (~nbin@user/nbin) (Quit: ZNC - https://znc.in)
[18:21:13] <Tritium> harry: python-docx is capable of that, but you would be building the entire document e-builder style
[18:21:22] *** Joins: AstaraWorld (~AstaraWor@2001:448a:1082:fe6f:9c1b:cab:1a67:7bc7)
[18:22:08] *** Joins: frmlof (~frmlof@70.243.238.191)
[18:23:35] *** Quits: storm_ (~storm@78.173.231.178) (Quit: Leaving)
[18:23:53] *** Quits: RiFo (~RiFo@user/rifo) (Read error: Connection reset by peer)
[18:24:14] *** Joins: teut (~teut@103.144.92.149)
[18:24:37] <harry> ```python-docx is capable of that, but you would be building the entire document e-builder style```  can it directly write the selenium snapshot using docx module ?
[18:24:58] *** Joins: nbin (~nbin@user/nbin)
[18:25:15] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[18:26:01] *** AstaraWorld is now known as hackerworld
[18:26:08] *** Joins: stockh0lm (~Andreas@p200300d2c710830029314be21f255e61.dip0.t-ipconnect.de)
[18:26:18] <Tritium> harry: python-docx can write documents you design your program to write.  You are going to have to do the work of actually wiring it up to your application.
[18:27:33] <baecedar> hi, can someone explain why in this: https://bpa.st/YKZA only the values are added to the list?
[18:27:34] *** Quits: hackerworld (~AstaraWor@2001:448a:1082:fe6f:9c1b:cab:1a67:7bc7) (Quit: Leaving)
[18:27:56] *** Joins: AstaraWorld (~AstaraWor@2001:448a:1082:fe6f:9c1b:cab:1a67:7bc7)
[18:28:00] <Tritium> baecedar: thats what you are telling it to do .. what did you want it to do?
[18:28:01] <grym> baecedar: because you're only adding the values
[18:28:03] <harry> thanks Tritium for the quick help
[18:28:28] *** AstaraWorld is now known as ndut2
[18:28:29] <Wooble> baecedar: dict[some_key] is how you get a value. what do you want in the lists instead?
[18:28:34] *** Joins: the_lanetly_052 (~the_lanet@194.135.168.23)
[18:28:42] <mihael> Anyone using ldap3 library? How do you retrieve entries by date?
[18:28:46] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:28:48] *** Joins: storm_ (~storm@78.173.231.178)
[18:29:01] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[18:29:14] <baecedar> oh, I see, thanks. I thought that would represent the whole key, value "entry"
[18:29:35] <rindolf> baecedar: dont call vars 'list' either
[18:29:51] <Tritium> baecedar: you will have to make that tuple yourself, its trivial though
[18:30:12] *** Quits: LucaTM (~LucaTM@user/lucatm) (Ping timeout: 240 seconds)
[18:30:27] <Tritium> lrDict[key] turns into (key, lrDict[key])
[18:30:30] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-25a8-272e-aff1-18f1.res6.spectrum.com)
[18:30:32] <Tritium> etc
[18:30:38] *** Quits: Tempesta (~Tempesta@user/tempesta) (Read error: Connection reset by peer)
[18:30:47] *** Joins: omegatron (~some@p54bd5280.dip0.t-ipconnect.de)
[18:32:26] <mickey> after loading a large dataframe, doesn't del df release the memory?
[18:33:18] <Tritium> mickey: objects are removed from memory only after *all* references to them die.
[18:33:24] <Tritium> including recursive ones
[18:33:58] <mickey> well i have zf = np.load(); df = pd.DataFrame(zf); df.head(); del df; isn't that supposed to release it?
[18:34:12] <baecedar> so the "for key.." there takes any key (first?) in the dict and dic[any_key] = value
[18:35:04] <Tritium> wait, is pandas an extension module?  if its written in C, all bets are off
[18:35:14] <mickey> i don't know.
[18:35:32] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[18:35:50] *** Joins: data68 (~data@2a02:908:a67:2ce0:3432:985d:bdd4:43e0)
[18:35:51] <mickey> manually calling gc.collect() did release a couple gbs from memory, but im not sure why i have to garbage collect manually
[18:35:56] <teut> you should  use a better name than dic
[18:36:12] <SnoopJ> large parts of it are written in not-Python (but I think there's no C under there except the stuff that pandas is calling out to, like numpy)
[18:36:17] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Client Quit)
[18:36:19] <Tritium> python frees memory when there is no reference anywhere for an object.  calling del only removes one reference
[18:36:27] <SnoopJ> Pandas definitely implements stuff in Cython, though
[18:36:32] <baecedar> teut yeah, this is just an example trying to understand
[18:36:46] <Tritium> i still think that can hold on to memory outside of the gc
[18:36:52] *** Joins: Elzington (~Elzington@87.249.134.10)
[18:36:59] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[18:37:00] *** Joins: nuclearg2 (~nucleargr@user/nuclearg1)
[18:37:01] <teut> why is it written in c but?
[18:37:06] <teut> why not in c++?
[18:37:22] <teut> c++ compiler supports c completely
[18:37:23] <Tritium> teut: its cython, not manually written c
[18:37:31] <Tritium> apparently
[18:37:42] *** Quits: hans (uid529825@id-529825.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[18:37:50] *** Joins: Tempesta (~Tempesta@user/tempesta)
[18:38:01] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[18:38:02] <SnoopJ> it does vendor a few things written in C but they're ancillary
[18:38:08] <SnoopJ> (e.g. there's a copy of ujson in there)
[18:38:30] <teut> cytgon is what just write a function in c and call in python
[18:38:32] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Client Quit)
[18:38:37] <SnoopJ> not really
[18:38:37] <teut> cython*
[18:38:41] <teut> then?
[18:39:04] <SnoopJ> teut, Cython is its own programming language. It is a superset of Python with features that resemble C. It is definitely not C, though.
[18:39:06] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[18:39:28] <Tritium> No, its write code that looks like python and it gets translated into machine code through... means.  its currently translated into something that can run through a c compiler, but that is an implementation detail
[18:39:35] <teut> python is written in c so obviously the compiler can directly compile a python function if c code is available instead of chunking it up and evaluating it in the interpreter
[18:39:41] *** Quits: fspax (~fspax@46.148.141.211) (Ping timeout: 246 seconds)
[18:39:44] <SnoopJ> teut, not all Python interpreters are written in C
[18:39:59] <teut> CPython is but written in C
[18:40:01] <SnoopJ> yes
[18:40:24] <Tritium> we have C, Python (recursively), Java (...shockingly not dead), .net (unshockingly dead)
[18:40:31] <teut> og sorry CPython is something else
[18:40:35] *** Joins: menace (~someone@ppp-93-104-190-25.dynamic.mnet-online.de)
[18:40:35] <SnoopJ> teut, the answer to your question about "why write it in C" is "because the authors wanted to use C." If you want to know more than that, you should probably ask the authors.
[18:40:44] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 246 seconds)
[18:40:48] <teut> what's that thing called which has  "cdef"
[18:40:50] <teut> ?
[18:40:52] *** Quits: menace (~someone@ppp-93-104-190-25.dynamic.mnet-online.de) (Changing host)
[18:40:52] *** Joins: menace (~someone@user/menace)
[18:40:58] <Tritium> cython
[18:40:58] *** menace is now known as Deknos
[18:41:06] <teut> oh , ok
[18:41:11] *** Joins: LucaTM (~LucaTM@user/lucatm)
[18:41:26] *** Quits: nuclearg2 (~nucleargr@user/nuclearg1) (Ping timeout: 246 seconds)
[18:41:30] *** Quits: Iolo (~iolo@user/Iolo) (Ping timeout: 272 seconds)
[18:41:32] *** Quits: luigibu (~luigi@93.176.153.88) (Quit: WeeChat 3.5)
[18:41:46] <teut> and we were discussing that?
[18:41:58] <teut> that is a different thing ok, I get it
[18:42:05] <SnoopJ> teut, do you have a question?
[18:42:32] <teut> what is that thing called where you call c code from python?
[18:42:36] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[18:42:39] <Tritium> I was asking if a module with apparent memory hoarding issues was pure python or an extension module.  theres different answers depending on which it is
[18:42:42] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:59d2:b182:c487:e1de) (Quit: My iMac has gone to sleep. ZZZzzz…)
[18:42:47] <Tritium> to help someone else
[18:42:50] *** Quits: seifeslimene (~seifeslim@197.2.39.226) (Quit: Client closed)
[18:43:06] *** Joins: seifeslimene (~seifeslim@197.2.39.226)
[18:43:07] *** Joins: cosimone` (~user@93-47-230-184.ip115.fastwebnet.it)
[18:43:20] <SnoopJ> teut, there is more than one way to do that. The concept of calling from one language to another is often referred to as making use of a "foreign function interface" (FFI)
[18:43:34] <teut> yes yes, this you told before
[18:43:47] <teut> like IronPython is one FFI
[18:44:23] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[18:44:29] <Tritium> No, ironpython is a different implementation
[18:44:51] *** Quits: cosimone (~user@93-47-230-184.ip115.fastwebnet.it) (Ping timeout: 260 seconds)
[18:44:58] <Tritium> calling from ironpython to c#, for example, is a native call.
[18:46:12] <teut> better to just learn the stuff then learn the definitions
[18:46:17] <teut> than*
[18:46:44] *** Joins: k2ro (~k2ro@p5b175c79.dip0.t-ipconnect.de)
[18:47:30] *** Quits: nbin (~nbin@user/nbin) (Quit: ZNC - https://znc.in)
[18:47:54] <teut> what is the newest implementation which is new and I can understand it's code?
[18:48:07] <bjs> teut: define "newest"
[18:48:18] *** Quits: storm_ (~storm@78.173.231.178) (Quit: Leaving)
[18:48:27] <bjs> CPython is the oldest, but it's also the most up-to-date and the most easy to read.
[18:48:36] <SnoopJ> There is also a very good book about CPython now
[18:48:45] <teut> I mean which has smaller codebase
[18:48:46] <Tritium> pypy is the "newest" but it is quite literally black magic
[18:48:52] <SnoopJ> a much longer form of this article: https://realpython.com/cpython-source-code-guide/
[18:48:52] <Tritium> cpython is smallest
[18:48:55] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[18:48:56] <bjs> teut: CPython will be smaller too
[18:49:21] <teut> how to start hacking it but
[18:49:24] <bjs> teut: it depends what you're trying to do
[18:49:31] <bjs> teut: "hacking it"? To do what?
[18:50:03] <Tritium> You can hack on cpython pretty easily, pypy is more complicated, jython is java and i dont wish that on anyone, and ironpython is dead
[18:50:10] <han-solo> implement object/dict destructing
[18:50:15] <han-solo> that would be a fun hack to do
[18:50:18] <teut> to understand how it's digesting my code and creating the bytecode
[18:50:52] <SnoopJ> teut, the way that works in CPython is described in the article I just linked: https://realpython.com/cpython-source-code-guide/#compiling
[18:51:02] <Tritium> your .py files don't turn into machine code.  they turn into a sequence of function calls run by the interpreter
[18:51:08] <teut> ya this too you shared before
[18:51:13] <SnoopJ> teut, have you *read* it?
[18:51:17] <teut> yes
[18:51:22] <bjs> teut: did I show you https://gist.github.com/bensimner/bae76d72c2c7f8fe3c346606855f97dd  it is a little hackable bit of Python code that emulates how CPython works
[18:51:26] * SnoopJ is skeptical
[18:51:41] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Remote host closed the connection)
[18:51:42] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:6d4c:38a4:18b7:4b48)
[18:51:58] <teut> that looks like a new resource bjs
[18:52:01] <teut> thanks for it
[18:52:12] <teut> looks quite apt to what I require
[18:52:30] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Quit: Leaving)
[18:52:37] <teut> 0x01  what do these hex value represent?
[18:52:38] *** Joins: qlixed (~qlixed@8.243.49.226)
[18:52:49] *** Quits: pydev (~pydev3@2001:b07:5d28:551:12ce:789f:59bb:2417) (Ping timeout: 256 seconds)
[18:52:51] <bjs> teut: but the general high-level view is that it takes .py files, turns them into a stream of tokens, parses the stream to make an AST, then compiles the AST to Python bytecode, then interprets the bytecode to run the code
[18:53:01] <bjs> teut: that's the number 1.
[18:53:20] *** Joins: nuclearg2 (~nucleargr@user/nuclearg1)
[18:53:59] <teut> ya, it has has to start with reading the python code from my file
[18:54:06] *** Joins: nbin (~nbin@user/nbin)
[18:54:12] <teut> first I need to see that file in the CPython code
[18:54:19] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:54:35] *** Joins: wakeup (~wakeup@user/wakeup)
[18:54:37] <SnoopJ> https://realpython.com/cpython-source-code-guide/#lexing-and-parsing
[18:54:42] *** Joins: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[18:54:58] <teut> https://gist.github.com/bensimner/bae76d72c2c7f8fe3c346606855f97dd#file-toy_bytecode-py-L49  the way of splitting is not the best I thing
[18:55:02] <teut> think*
[18:55:05] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[18:55:09] <bjs> teut: is SnoopJ's link to lexing-and-parsing what you were looking for?
[18:55:09] <baecedar> Tritium can you tell me if I got that right: "for key.." takes "any_key" (first?) in the dict and after that using "dict[any_key]" equals the dict "value"?
[18:55:19] <teut> no
[18:55:25] <bjs> teut: what are you looking for?
[18:55:34] *** Joins: icy_hot (~icy_hot@1.214.31.43)
[18:56:56] <Tritium> baecedar: "for key in somedict" iterates the keys in a dictionary in the order they are stored by python.  Its not any random key.  somedict[key] is just a normal lookup of the key in the dictionary, and it returns the value associated with that key
[18:57:03] <SnoopJ> (note: that article was written before CPython's parser changed, it's a little different now, but the concepts are the same)
[18:57:05] <teut> https://github.com/python/cpython/tree/main/Python     where is the file that reads out python code?
[18:57:11] <bjs> teut: what do you mean "reads out"
[18:57:20] <bjs> teut: the process of turning a .py file into bytecode is not a single file
[18:57:29] <teut> https://www.geeksforgeeks.org/c-program-to-read-contents-of-whole-file/
[18:57:34] <SnoopJ> teut, the parser is defined in the Parser/ folder of the CPython repository.
[18:57:41] *** Joins: baecedar60 (~baecedar@86.121.171.149)
[18:57:46] *** Quits: baecedar (~baecedar@86.121.171.149) (Quit: Client closed)
[18:57:48] <SnoopJ> But some of that code is automatically generated
[18:57:56] <teut> first step is lexer
[18:58:01] <teut> lexical analysis
[18:58:03] <SnoopJ> You aren't wrong
[18:58:14] <grym> baecedar: you can also `for key, value in the_dict.items()`, and you'll get each key and its value, in order of insertion, in a loop
[18:58:20] <teut> first step is to read the file
[18:58:24] <SnoopJ> If you want to know how the new parser works, there's a guide for that, too: https://devguide.python.org/parser/
[18:58:41] <SnoopJ> (gosh, Pablo has been adding so much good stuff to the devguide!)
[18:59:06] <bjs> teut: well the tokenizer does not read the whole file then work on the big string, it reads it a bit at a time as it needs
[18:59:07] <baecedar60> got it, many thanks for explaining Tritium Wooble grym
[18:59:20] <bjs> teut: you can look at the tokenizer code inside the Parser/ directory SnoopJ gave you
[18:59:34] *** Quits: teut (~teut@103.144.92.149) (Quit: Client closed)
[18:59:42] <bjs> but it just has a FILE* and does a read() when it needs
[18:59:48] *** Joins: teut (~teut@103.144.92.130)
[19:00:02] *** Joins: tWqaq (~tWqaq@240e:389:5d41:5900:ce2a:68f8:299f:6e2e)
[19:00:28] *** Quits: jflabonte (~jflabonte@bras-base-qubcpq0634w-grc-16-174-89-201-64.dsl.bell.ca) (Remote host closed the connection)
[19:00:33] *** Quits: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net) (Quit: Client closed)
[19:00:43] *** Joins: SaltHilStroller_ (~SaltHillS@206.223.160.26)
[19:00:53] *** Joins: saita (~saita@147.91.26.51)
[19:01:01] <teut> https://raw.githubusercontent.com/python/cpython/main/Parser/parser.c  this I have to read?
[19:01:04] <bjs> teut: so CPython is some C code, so yeah it open()s to get a FILE* and then it read()s
[19:01:06] *** Quits: nbin (~nbin@user/nbin) (Quit: ZNC - https://znc.in)
[19:01:13] <bjs> teut: that's the parser, like you say there's a tokenizer/lexer that comes before it
[19:01:19] *** Joins: Barones (~Barones@user/Barones)
[19:01:21] *** Parts: saita (~saita@147.91.26.51) ()
[19:01:41] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[19:01:44] <teut> ya but computer science books say , parsing is a 4 step procedure
[19:02:06] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[19:02:11] <bjs> teut: what are the steps
[19:02:35] *** Quits: ndut2 (~AstaraWor@2001:448a:1082:fe6f:9c1b:cab:1a67:7bc7) (Quit: Leaving)
[19:02:47] *** Quits: r0073rr0r (~MyH3e@user/r0073rr0r) (Quit: ZNC 1.8.2 - https://znc.in)
[19:02:59] <teut> tokenization, lexical analysis, syntax analysis, semantic analysis
[19:03:00] *** Joins: aclark (~aclark@156.40.252.1)
[19:03:13] <anddam> can I track what package provide a certain file in my venv?
[19:03:17] <bjs> teut: most people would say "syntax analysis" is what people call parsing.  But okay
[19:03:30] <SnoopJ> teut, you should read https://devguide.python.org/parser/ before you try to read parser.c
[19:03:42] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[19:04:00] <bjs> teut: but like I say, CPython is just a C program so it calls open() on your .py file, gets a FILE* then calls read() to read lines from it when it needs to.  CPython first tokenizes it to get a stream of tokens, and then the parser parses those into an AST, and then the code generation turns the AST into bytecode
[19:04:05] <bjs> then there's an evaluator that runs the bytecode
[19:04:06] *** Joins: Barones (~Barones@user/Barones)
[19:04:10] <teut> yes I have opened it but I am unable to understand what to take from it SnoopJ
[19:04:24] <bjs> teut: well parser.c is a big file and isn't handwritten and is the -real- parser
[19:04:29] <teut> yes , I am trying to find that open()
[19:04:30] <Yhg1s> teut: perhaps trying to understand the parser is not a good idea then.
[19:04:37] *** Joins: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs)
[19:04:38] *** Quits: r0073rr0r (~MyH3e@cable-24-135-125-115.dynamic.sbb.rs) (Changing host)
[19:04:38] *** Joins: r0073rr0r (~MyH3e@user/r0073rr0r)
[19:04:48] *** Quits: lakrass (~lakrass@user/lakrass) (Quit: WeeChat 3.5)
[19:04:53] *** Quits: envex (~envex@cpe-173-91-189-33.neo.res.rr.com) (Ping timeout: 246 seconds)
[19:05:06] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[19:05:22] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[19:05:27] <teut> see I had seen the dragon book and I couldnt understand much from what it tells
[19:05:34] <SnoopJ> reading parser.c is probably the single worst way to try and understand the parser.
[19:05:44] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[19:05:46] <han-solo> it seems, that is generated ?
[19:05:49] <SnoopJ> han-solo, yep
[19:05:56] <han-solo> okay
[19:05:59] <teut> I won't read it
[19:06:00] <bjs> teut: if you're trying to understand parsing because you didn't understand a parser book then diving into a real parser for a big language is probably not the way to do it
[19:06:12] <teut> I will run it , and feed garbage to it
[19:06:15] <teut> see the errors
[19:06:19] <teut> and progress
[19:06:27] <bjs> teut: but you should do your own little exercises and write your own parser for a toy language
[19:06:28] <bjs> like in my gist
[19:06:32] <teut> then feed real python code
[19:06:38] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[19:06:47] <han-solo> the one bjs shared seems nice enough to understand what's going on
[19:07:06] <teut> bjs, http://norvig.com/lispy.html is better
[19:07:21] <teut> or equivalent
[19:07:22] <SnoopJ> Anthony Shaw's book has a very good section on Python's parsing that goes step by step
[19:07:43] <SnoopJ> It's similar to what's in his RealPython.com article, but more thorough
[19:07:48] <bjs> teut: well it doesn't try emulate what CPython is doing, but yes
[19:08:02] <grym> anddam: sure, you can make that file tell you where it is; look at __file__.
[19:08:06] *** Joins: pulseaudio (~pulseaudi@103.42.174.55)
[19:08:09] <bjs> teut: there are lots of little exercises for 'toy' languages you can make, without diving into real parsers
[19:08:15] <grym> look at its __file__, that is
[19:08:21] *** Quits: k2ro (~k2ro@p5b175c79.dip0.t-ipconnect.de) (Quit: k2ro)
[19:08:42] <SnoopJ> It doesn't touch on the new PEG parser approach though, but the devguide is a great description of that process
[19:08:44] <teut> https://bhailang.js.org/  don't you thing this is garbage?
[19:08:59] <teut> it's trended too much on linkedin few days back
[19:09:01] *** Joins: Iolo (~iolo@user/Iolo)
[19:09:01] * SnoopJ isn't sure how that question is related to Python
[19:09:07] *** Quits: pulseaudio (~pulseaudi@103.42.174.55) (Remote host closed the connection)
[19:09:46] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[19:10:17] <anddam> grym: no that won't help
[19:10:26] <grym> anddam: tell me more about what you want, then
[19:10:29] <grym> or what you've got
[19:10:33] *** Joins: k2ro (~k2ro@p5b175c79.dip0.t-ipconnect.de)
[19:10:54] <anddam> grym: I mean I now know it's pycryptodome's file, I see lib/python3.9/site-packages/Crypto and I have to know where is that from
[19:11:16] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 272 seconds)
[19:11:19] <grym> anddam: oh, "what root dependency brought this in"?  https://pypi.org/project/pipdeptree/
[19:11:21] <anddam> I can loop over installed packages with pip show --files and grep, but I wonder if there's a direct access, i.e. a store of the installed files
[19:11:36] <anddam> duly noted thanks
[19:11:51] <grym> pip list won't tell you who is related to whom
[19:12:09] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[19:12:35] <anddam> I see, compliant to "no stich" policy
[19:12:40] <anddam> "snitch"
[19:12:58] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[19:13:02] *** Joins: Enitin (~Enitin@82.180.145.223)
[19:13:09] <grym> well, it's just easier to not do the work if you don't have to
[19:13:13] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[19:13:16] *** Joins: amoe (~amoe@visarend.solasistim.net)
[19:13:17] <anddam> next topic: can I tell pip to build a package from source?
[19:13:33] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[19:13:38] <anddam> I figure I can just pass git+ssh:// and the repo
[19:14:21] <Tritium> there is a --no-binary option for pip
[19:14:27] *** Joins: RP (~richard@2001:8b0:aba:5f3c:96de:80ff:fe6d:2d2b)
[19:14:36] <Tritium> or...was
[19:14:40] <Tritium> im not seeing it..
[19:14:49] <amoe> Hi, I have a piece of pandas code that I'm looking to vectorize.  It currently uses apply() -- https://bpa.st/UZRQ  How could I think about vectorizing this?
[19:14:53] <Tritium> ah there it is
[19:15:03] *** Joins: zebrag (~chris@user/zebrag)
[19:15:38] *** Quits: s1b1 (~s1b1@user/s1b1) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[19:15:41] <Tritium> amoe: IIUC, .apply is vectorized...
[19:15:43] *** Quits: Spitfire (spitfire@user/Spitfire) (Ping timeout: 256 seconds)
[19:16:06] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[19:16:13] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:f041:7b76:cc2b:8a8f) (Quit: pvergain)
[19:16:44] <amoe> huh, I thought that would run as a loop
[19:17:00] <RP> I wondered if anyone would be able to help me with traceback we hit occasionally deep in importlib with a KeyError: https://bpa.st/JVHA
[19:17:01] <anddam> Tritium: n0ice, thx
[19:17:10] *** Quits: saroy|afk (~Sandipan@103.24.86.178) (Quit: Leaving)
[19:17:11] <Tritium> I think we are running into an expectations difference here...
[19:17:12] *** Parts: SallyAhaj (~SallyAhaj@user/sallyahaj) (Leaving)
[19:17:27] *** Joins: audio (~audio@user/audio)
[19:17:39] <anddam> I'll stretch the question: can --no-binary be specified at setuptools install_requires?
[19:17:39] <teut> amoe, are you trying to remove duplicates ?
[19:17:50] *** Quits: cosimone` (~user@93-47-230-184.ip115.fastwebnet.it) (Ping timeout: 246 seconds)
[19:18:03] *** Quits: Fossil (~Fossil@95.85.23.165) (Quit: Bye)
[19:18:07] *** Joins: vsantana (~Thunderbi@189.40.65.92)
[19:18:16] *** Joins: Fossil (~Fossil@2a03:b0c0:0:1010::398:b001)
[19:18:22] <Tritium> anddam: Not the last time i looked, but that might have changed?  i doubt it though
[19:18:44] <RP> I've been looking at the code on _ModuleLock:acquire() and I've wondered what would happen if there are nested import calls when the lock is held by another thread. I can't reproduce this at will though. I did see https://bugs.python.org/issue43546 which looks similar
[19:19:50] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Remote host closed the connection)
[19:19:52] <anddam> Tritium: since I have a make script calling  "pip install . " I'll throw --no-binary there
[19:20:09] *** Joins: s1b1 (~s1b1@user/s1b1)
[19:20:28] <Tritium> anddam: --no-binary takes arguments of what you don't want binaries for
[19:20:52] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:21:30] *** Quits: cdman (~dcm@user/dmc/x-4369397) (Quit: Leaving)
[19:21:48] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[19:22:11] *** Quits: Enitin (~Enitin@82.180.145.223) (Ping timeout: 260 seconds)
[19:23:10] *** Joins: Barones (~Barones@user/Barones)
[19:23:48] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[19:24:31] *** Joins: pydev (~pydev3@2001:b07:5d28:551:f095:770a:3543:2741)
[19:24:40] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:cde9:ec1e:3b73:a5d6)
[19:24:59] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:6d4c:38a4:18b7:4b48) (Ping timeout: 260 seconds)
[19:25:40] <anddam> Tritium: yes, in fact I passed   --no-binary pycryptodome
[19:25:43] *** Quits: grooverman (~grooverma@179.97.175.157) (Read error: Connection reset by peer)
[19:25:59] *** Joins: Guest99 (~Guest99@102.118.147.149)
[19:26:01] *** Quits: flower_ (~archie@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[19:26:03] <anddam> since it has a x86_64 only wheel and I need it to run universal2
[19:26:17] <anddam> I am running a software on macOS, it is
[19:26:29] *** Parts: cmagina (~cmaginafe@user/cmagina) ()
[19:26:37] *** Quits: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[19:26:46] *** Quits: Andrew (~andrew@user/AndrewYu) (Quit: identd is broken)
[19:27:25] *** Joins: hans (uid529825@id-529825.helmsley.irccloud.com)
[19:27:38] *** Joins: Andrew (Andrew@user/AndrewYu)
[19:27:55] <Tritium> I haven't used a mac os since it ran on powerpc
[19:28:05] *** Joins: reset (~reset@user/reset)
[19:28:06] *** Joins: Enitin (~Enitin@82.102.22.86)
[19:28:08] *** Joins: grooverman (~grooverma@179.97.175.157)
[19:28:16] <Tritium> ...most recently, 68000 >.> im no expert <.<
[19:28:29] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[19:28:35] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[19:29:12] <anddam> I remember that transition as well
[19:29:21] <Guest99> I am looking for a maintainer for my IRC bot. It has a plugin system with lots of contributed plugins. It is Python-based. Just DM me or comment in the pinned issue: https://github.com/pyhoneybot/honeybot/. Thanks in advance!
[19:29:32] <anddam> both Motorola > PowerPC and PPC > Intel
[19:29:39] *** Quits: KeybInterrupt (~quassel@dslb-002-200-104-234.002.200.pools.vodafone-ip.de) (Remote host closed the connection)
[19:30:09] <Tritium> 68000 through m1 is quite the shift
[19:30:23] *** Joins: phone-aphysicall (~phone-aph@2607:fb90:46fb:1e0c:ae65:a205:848c:1517)
[19:30:28] <phone-aphysicall> Hi
[19:30:37] <phone-aphysicall> I'm at work
[19:30:42] <Wooble> ok?
[19:31:11] <phone-aphysicall> I've discovered our work systems set PIP_TARGET to make global pip work, but this makes virtualenvs not set to their own directory because it gets overridden by the environment variable
[19:31:34] <grym> phone-aphysicall: eeeew
[19:31:49] <phone-aphysicall> Does anyone have any suggestions for workflow that doesn't involve manually creating a correct pip.ini with the venv target in every venv I make?
[19:32:07] *** Joins: M4rt1n (~Username@dyn-pppoe-142-51-250-147.vianet.ca)
[19:32:11] *** Quits: wedwards (~wedwards@46.44.154.209) (Quit: Textual IRC Client: www.textualapp.com)
[19:32:24] <M4rt1n> good morning channel
[19:32:28] <Tritium> I would ask your administrator "WHY GOD WHY!" ....but i would advise you to ask your administrator what is intended by this setup, because its not...really...optimal for anything
[19:32:32] <phone-aphysicall> I was thinking *maybe* I can modify virtualenvwrapper or something to clear and set the pip target..?
[19:32:38] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[19:33:00] <phone-aphysicall> The env variable itself I mean
[19:33:05] <grym> phone-aphysicall: do changes in your shell rc undo the global defaults?
[19:33:10] *** Quits: mtk_ (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[19:33:14] <grym> they ought to...
[19:33:40] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[19:33:41] <phone-aphysicall> Umm, I'm in Windows and I don't know the equivalent (I'm new to windows)
[19:33:44] <M4rt1n> I am trying to create a while loop inside another application to read the last line of a csv file. But I do not want the loop to break. it has to run inside another python script. (showing real time battery percentage value)
[19:34:03] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 260 seconds)
[19:34:06] <grym> phone-aphysicall: oh.  uh.  now i don't know either, but there are user envvars in windows
[19:34:32] <M4rt1n> It will read the last line and present it, but never grabs new value. and when anything else happens the loop breaks
[19:34:41] *** Joins: lastshell (~lastshell@user/lastshell)
[19:34:53] <phone-aphysicall> Yeah maybe I can unset it myself globally and only set it if I need to work with global pip? Only needed for virtualenv since python native venv is (accidentally?) Blocked by our security policy
[19:35:01] *** Quits: oprypin (~irc@pryp.in) (Quit: Bye)
[19:35:08] *** Joins: cosimone` (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[19:35:10] *** Joins: oprypin (~irc@pryp.in)
[19:35:14] *** Joins: Bando (~Bando@173-8-121-1-Minnesota.hfc.comcastbusiness.net)
[19:35:36] <phone-aphysicall> My understanding is the env variable they set for packages is one that has the security policy whitelist set
[19:36:07] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 256 seconds)
[19:36:28] <Tritium> user envvars on windows are a thing, and its a key by key basis what they do in regards to the global envvar... but editing them is locked inside the same group policy as editing the global ones IIRC.  you can, however, just set one in powershell, and python will see it, if you run it from THAT powershell
[19:36:50] *** Joins: filename (~kilitary@188.242.105.134)
[19:37:14] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 272 seconds)
[19:38:04] *** Joins: maxzor (~maxzor@2a01cb04054faa00a81dc7c4ffa3ec97.ipv6.abo.wanadoo.fr)
[19:38:17] *** Joins: akk (~akk@75.161.150.5)
[19:38:30] *** Quits: palasso (~palasso@user/palasso) (Ping timeout: 272 seconds)
[19:38:41] *** Quits: humanBird (~humanBird@cpe-23-241-168-220.socal.res.rr.com) (Quit: Client closed)
[19:39:09] *** Quits: mihael (~mihael@115.146.176.131) (Quit: Client closed)
[19:39:39] *** Quits: phone-aphysicall (~phone-aph@2607:fb90:46fb:1e0c:ae65:a205:848c:1517) (Quit: Client closed)
[19:39:40] *** Joins: davidw (~davidw@h72-35-148-100.bendor.broadband.dynamic.tds.net)
[19:39:41] <M4rt1n> https://bpa.st/OODA    <--- test_data.csv is a live file
[19:40:17] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[19:40:34] *** Joins: FluffyMask (~masque@user/fluffymask)
[19:41:47] *** Quits: vsantana (~Thunderbi@189.40.65.92) (Ping timeout: 260 seconds)
[19:42:05] *** Quits: BillyZane (~BillyZane@192.145.80.68) (Remote host closed the connection)
[19:42:27] *** Joins: phone-aphysicall (~phone-aph@2607:fb90:46fb:1e0c:ae65:a205:848c:1517)
[19:42:29] *** Joins: han-solo (~han-solo@user/han-solo)
[19:42:48] *** Quits: cosimone` (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 260 seconds)
[19:43:06] *** Quits: k2ro (~k2ro@p5b175c79.dip0.t-ipconnect.de) (Quit: k2ro)
[19:43:16] *** Joins: BillyZane (~BillyZane@192.145.80.68)
[19:43:21] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[19:43:25] *** Joins: k2ro (~k2ro@p5b175c79.dip0.t-ipconnect.de)
[19:43:49] *** Quits: pydev (~pydev3@2001:b07:5d28:551:f095:770a:3543:2741) (Ping timeout: 250 seconds)
[19:45:08] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Ping timeout: 260 seconds)
[19:45:16] *** Joins: palasso (~palasso@user/palasso)
[19:45:32] *** Quits: k2ro (~k2ro@p5b175c79.dip0.t-ipconnect.de) (Client Quit)
[19:45:36] *** Quits: Guest99 (~Guest99@102.118.147.149) (Quit: Connection closed)
[19:45:48] *** Quits: phone-aphysicall (~phone-aph@2607:fb90:46fb:1e0c:ae65:a205:848c:1517) (Client Quit)
[19:46:12] <M4rt1n> can anyone give me a hand?
[19:47:08] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[19:47:56] *** Joins: k2ro (~k2ro@p5b175c79.dip0.t-ipconnect.de)
[19:48:03] *** Quits: BillyZane (~BillyZane@192.145.80.68) (Ping timeout: 260 seconds)
[19:48:03] *** Joins: thiras (~thiras@user/thiras)
[19:48:20] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:48:32] *** Quits: k2ro (~k2ro@p5b175c79.dip0.t-ipconnect.de) (Client Quit)
[19:49:03] *** Quits: tobybl (~tobybl@dhcp-199-233.inf.ed.ac.uk) (Remote host closed the connection)
[19:49:18] *** Joins: pulseaudio (~pulseaudi@103.42.174.55)
[19:49:32] *** Joins: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net)
[19:49:52] *** Quits: aclark (~aclark@156.40.252.1) (Ping timeout: 250 seconds)
[19:49:58] *** Quits: pulseaudio (~pulseaudi@103.42.174.55) (Remote host closed the connection)
[19:50:48] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[19:50:51] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[19:51:03] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Client Quit)
[19:51:27] *** Joins: pepper (~pepper@user/pepper)
[19:51:34] *** Joins: moog__ (~moog@98.97.85.156)
[19:52:13] <Wulf> M4rt1n: Hello. what does "live" mean?
[19:52:26] *** Quits: shuck (~shuck@user/shuck) (Ping timeout: 272 seconds)
[19:53:23] *** Joins: fraxamo (~fraxamo@bexl-11-b2-v4wan-163006-cust259.vm4.cable.virginm.net)
[19:53:26] <twainwek> the file is being appended to
[19:53:30] <Wulf> M4rt1n: oh, csv? That may be **not** a line based format.
[19:53:42] <M4rt1n> @Wulf live means the the csv is constantly changing. this is a battery monitoring script that takes the output of a INA219 chip to a csv. so the csv is always changing
[19:53:45] <Andrew> https://twistedmatrix.com/documents/current/_downloads/988b8627306df1c85fcb03c3a4923bf8/chatserver.py, when connecting with netcat the twisted logs don't even mention "received"
[19:54:13] <Andrew> I know I can use select() or poll () or asyncio or trio for this, but I need this quick and easy so I'm using twisted
[19:54:23] *** Quits: moog_ (~moog@107.126.53.130) (Ping timeout: 260 seconds)
[19:55:03] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 260 seconds)
[19:55:10] <Wulf> M4rt1n: may I suggest you don't use csv or files? Rewrite the program that creates the file.
[19:55:10] *** Joins: Bandicoot (~bandicoot@45.154.88.240)
[19:55:15] *** Joins: phone-aphysicall (~phone-aph@2607:fb90:46fb:1e0c:ae65:a205:848c:1517)
[19:55:20] <phone-aphysicall> Sorry I got pulled aside for meeting I'll reconnect on computer later so I stop disconnecting
[19:55:52] <M4rt1n> Wulf are you suggesting to just use stout?
[19:55:57] <Andrew> Also, I heard rumors that stack overflow is being april fools pranked, but I dont see that, at least with lynx --dump
[19:56:17] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 256 seconds)
[19:56:23] <Wulf> M4rt1n: might work. Make sure to flush stdout after writing.
[19:56:28] <fraxamo> Hi, I'm trying to create a virtual environment using the command 'python3 –m venv venv', but I get the error 'python3: can't open file '–m': [Errno 2] No such file or directory'. I'm running python3.8 on Linux Mint. I've searched for the answer but no luck. Any ideas what might be the issue? Thanks
[19:57:01] <grym> fraxamo: how are you running that command
[19:57:07] <grym> (because that looks fine)
[19:57:14] <fraxamo> From the command line
[19:57:17] <Wulf> fraxamo: 2013 Pd – EN DASH
[19:57:23] <Wulf> fraxamo: try using a proper -
[19:57:34] <fraxamo> Ah, good shout. Let me try that
[19:57:48] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[19:58:08] <M4rt1n> so here is my dilemma. I am using a lattepanda Alpha computer with has an onboard Arduino Leonardo. the INA219 is connected to the SDA port of the arduino and output to /dev/ttyACM0. when I tail or cat the /dev/ttyACM0 i get live output. I then sent that to a file so I could read it.
[19:58:09] *** Quits: phone-aphysicall (~phone-aph@2607:fb90:46fb:1e0c:ae65:a205:848c:1517) (Client Quit)
[19:58:12] <fraxamo> You're a star!
[19:58:36] <fraxamo> That worked. Thank you very much
[19:58:45] *** Joins: f__ (~f@2607:f598:bbda:220:97e8:2278:b249:1e41)
[19:58:52] <The-Compiler> M4rt1n: oh, it's a serial port? Sounds like you might want something like pyserial instead of treating it like a file
[19:58:58] <fraxamo> I've been pulling my hair out for the last 20 minutes :)
[19:58:59] * Wulf ☆
[19:59:15] <M4rt1n> pyserial??? i am new to that one
[19:59:26] <The-Compiler> M4rt1n: https://pyserial.readthedocs.io/en/latest/
[19:59:44] *** Quits: reedrichards (~f@2607:f598:bbda:220:5ecb:c90f:2b2e:5278) (Remote host closed the connection)
[20:00:05] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:01:03] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[20:01:08] <anddam> from https://docs.python.org/3/library/functions.html#open how do I get to the file-oriented API reference? specifically I want to find .read()
[20:01:30] <grym> anddam: it's hidden away in io
[20:01:52] <anddam> https://docs.python.org/3/library/io.html ?
[20:02:15] <anddam> this is always hard for me to browse, I got lost in hierarchy
[20:02:19] <anddam> x/got/ c/get/
[20:02:29] <grym> https://docs.python.org/3/library/io.html#io.TextIOBase
[20:02:41] <grym> yeah, "ok, what does open() do" is ...  not well laid out
[20:03:41] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[20:03:42] *** Joins: tomeaton17 (~tomeaton1@2a0c:5bc0:40:2e2f:8547:a6:9131:d7c0)
[20:04:02] <SnoopJ> eh? open() is pretty well documented, file-like objects are just a wink-wink nudge-nudge thing
[20:04:07] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:04:45] <M4rt1n> The-Compiler I just read the docs you sent me too. I am already reading the serial using a secondary script. that script is outputting to the current csv file. then my main application which has a battery icon needs to read that file on a 1 second interval basis in order to display accurate battery %. what is happening is one I run my main.py the battery value is read perfectly but then never updates
[20:04:53] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Quit: Leaving)
[20:05:29] <grym> /s/do/give me/
[20:05:32] *** Quits: maxzor (~maxzor@2a01cb04054faa00a81dc7c4ffa3ec97.ipv6.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[20:05:40] <M4rt1n> the while loop breaks instantly
[20:05:53] <The-Compiler> M4rt1n: I don't see a while loop in the code you pasted
[20:06:45] *** Quits: argoneus (~argoneus@argoneus.com) (Quit: Ping timeout (120 seconds))
[20:06:47] <anddam> grym: no it is now
[20:06:49] <anddam> thanks
[20:07:25] *** Joins: fspax (~fspax@46.148.141.211)
[20:07:34] *** Quits: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net) (Ping timeout: 260 seconds)
[20:07:36] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[20:07:47] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[20:07:55] <M4rt1n> The-Compiler I appologuise. but I would like the value to update in real time. and I for the life of me cannot figure out how to do that
[20:08:08] *** Joins: web-aphysically (~web-aphys@45.42.62.10)
[20:08:20] <web-aphysically> sorry about that! I'm in a web browser on my computer now so I shouldn't d/c
[20:08:30] *** Quits: tomeaton17 (~tomeaton1@2a0c:5bc0:40:2e2f:8547:a6:9131:d7c0) (Ping timeout: 250 seconds)
[20:08:39] *** Joins: tomeaton17 (~tomeaton1@2a0c:5bc0:40:2e2f:f8b5:4405:2ca9:328)
[20:09:02] <The-Compiler> M4rt1n: essentially do what you have now (there might be a nicer way to get the last line, but let's not worry about that now); but do it in a while loop with a time.sleep(1) or somesuch
[20:09:29] <anddam> with a python.org install package, how do I get pip on the PATH?
[20:09:53] <The-Compiler> anddam: which OS?
[20:09:56] *** Quits: seifeslimene (~seifeslim@197.2.39.226) (Quit: Client closed)
[20:10:00] <anddam> macOS, sorry
[20:10:01] <web-aphysically> so the underlying question was the best workflow when my computer policy is setting PIP_TARGET that will still let me using virtualenvs "smoothly"
[20:10:06] <web-aphysically> s/using/use/
[20:10:11] *** Joins: Barones (~Barones@user/Barones)
[20:10:13] <anddam> it injected  /Library/Frameworks/Python.framework/Versions/3.9/bin  into PATH but then I have no pip cmd
[20:10:13] <web-aphysically> (on Windows)
[20:10:16] <SnoopJ> anddam, the default installation --prefix is typically somewhere that's on PATH, but if not, you should either specify a place that is, or add the place you do install it into your PATH
[20:10:19] <anddam> I can ofc use python3 -m pip
[20:10:26] <SnoopJ> oh, you have python3 but not pip
[20:10:28] <SnoopJ> nvm me
[20:10:36] <anddam> well, that's what comes from the installer
[20:10:50] <grym> anddam: -m pip is probably better anyway, i don't usually fret about having a pip on my path
[20:11:06] *** Joins: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net)
[20:11:09] *** Quits: Barones (~Barones@user/Barones) (Client Quit)
[20:11:31] <anddam> SnoopJ: namely the folder has      2to3 2to3-3.9 idle3 idle3.9 pip3 pip3.9 pydoc3 pydoc3.9 python3 python3-config python3-intel64 python3.9 python3.9-config python3.9-intel64
[20:11:37] <anddam> jeez it's right there
[20:11:46] <M4rt1n> I have already tried something similar. this icon is inside a group of buttons. I am using pyqt5 for my gui. when using the while loop with a time.sleep the rest of my gui hangs and will not load because the while loop is still running. I need this one thing to update in realtime wiout causeing the rest of the gui to stop loading
[20:11:48] <SnoopJ> ah yea, pip3 vs pip
[20:11:49] * anddam oopses
[20:11:55] <anddam> sorry for the big noise
[20:11:59] <anddam> but I am having fun with py
[20:11:59] <SnoopJ> anddam, maybe you just want a to symlink pip3->pip then
[20:12:19] <SnoopJ> (but I cannot strongly-enough recommend `python3 -m pip`)
[20:12:54] *** Quits: v9fk1yn3nu (~v9fk1yn3n@user/v9fk1yn3nu) (Remote host closed the connection)
[20:13:08] <anddam> ok, my question still stand since I installed ipython and I cannot find it
[20:13:25] <anddam> let's check pip show
[20:13:34] <anddam> and nvm, -> /Users/ada/Library/Python/3.9/lib/python/site-packages
[20:13:48] <grym> you can -m IPython, too :)
[20:13:56] <grym> (but it is case sensitive)
[20:14:04] *** Joins: Enitin (~Enitin@82.102.22.86)
[20:14:14] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[20:14:54] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[20:15:02] *** Quits: mpmc (~mpmc@user/mpmc) (Quit: ZNC - https://znc.in)
[20:16:23] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:11d8:d536:9630:5602)
[20:17:17] *** Joins: srg (~srg@user/srg)
[20:17:30] *** Joins: Shou (~nyah@wikipedia/Davepeta)
[20:18:02] *** Quits: tomeaton17 (~tomeaton1@2a0c:5bc0:40:2e2f:f8b5:4405:2ca9:328) (Ping timeout: 250 seconds)
[20:18:21] *** Joins: v9fk1yn3nu (~v9fk1yn3n@user/v9fk1yn3nu)
[20:20:59] *** Joins: mpmc (~mpmc@user/mpmc)
[20:21:50] <anddam> I need to find all occurrencies of a patter in a bytes object, do I just    while (index := my_object.find(pattern, index + 1)) != -1:  print(index)    ?
[20:22:04] <SnoopJ> anddam, the `re` module can operate with bytes objects
[20:22:21] *** Joins: greedom (~greedom@p200300de6716400095741341808b8d79.dip0.t-ipconnect.de)
[20:22:31] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[20:22:32] *** Quits: web-aphysically (~web-aphys@45.42.62.10) (Quit: Client closed)
[20:22:36] <anddam> and it has find_all IIRC
[20:22:57] <anddam> _findall_
[20:23:26] <anddam> I need indexes though
[20:24:21] *** Joins: lork (~lork@2601:603:1301:3630::9bfd)
[20:24:52] <lork> I have some issues with linux permission using the keyboard modual is this common?
[20:24:58] <grym> lork: yes
[20:25:29] *** Joins: argoneus (~argoneus@argoneus.com)
[20:26:15] <lork> grym good I use pycharm. I have done lots of work trying to get past the error. I even did a sudo chmod +x main.py file .. no luck.
[20:26:36] *** Joins: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94)
[20:26:46] <lork> grym any pointers?
[20:26:59] *** Joins: MerrinX (~merrinx@ti0028a400-2319.bb.online.no)
[20:27:39] <The-Compiler> anddam: re.finditer gives you those
[20:28:10] *** Joins: squirrel (uid529456@user/squirrel)
[20:28:22] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[20:28:37] *** Joins: Pickchea (~private@user/pickchea)
[20:28:39] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Quit: Leaving)
[20:29:11] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[20:29:17] <grym> lork: https://github.com/boppreh/keyboard/issues/528
[20:29:23] *** Quits: peteyboy1 (~peteyboy1@199.157.133.37.dynamic.jazztel.es) (Ping timeout: 256 seconds)
[20:29:41] <grym> lork: you might need to reinstall from github not pypi
[20:30:09] <lork> grym I have been using linux since 1997 ..took a few year break so fully aware of it. I am in testing mode right now.
[20:30:31] <grym> lork: did you read the link i sent? your reply doesn't tell me one way or the other
[20:31:03] *** Quits: fspax (~fspax@46.148.141.211) (Ping timeout: 250 seconds)
[20:31:09] <gutts> is there a freelance channel where I can pay to get a code review?
[20:31:46] <lork> thanks
[20:31:47] <causasui> gutts: interesting idea, seems like it would be hard to vet the vendors though
[20:32:06] <The-Compiler> gutts: if it's Python-code, I suppose that would be considered on-topic here
[20:32:07] <grym> lork: https://github.com/boppreh/keyboard/commit/7f03a3d567b484ae6c2beebe2fe537be7643f7a9  here's the commit that changed it
[20:32:13] <ChrisWarrick> gutts: you can get a free code review here (as long as you’re okay sharing it here, of course)
[20:32:14] *** Joins: wakeup (~wakeup@user/wakeup)
[20:32:15] <grym> i don't know if that's on pypi yet
[20:32:42] <anddam> The-Compiler: but I am non familiar with re
[20:32:46] *** Quits: data68 (~data@2a02:908:a67:2ce0:3432:985d:bdd4:43e0) (Ping timeout: 260 seconds)
[20:32:54] <anddam> looping seems easier here
[20:33:01] *** Quits: flea (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 250 seconds)
[20:33:06] <The-Compiler> anddam: not much to be familiar with. If you just need to match a fixed string, use re.escape for it.
[20:33:20] <grym> lork: or rather, i know that's _not_ on pypi yet; you'll need to `python -m pip install git+https://github.com/boppreh/keyboard@master`
[20:34:50] *** Quits: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 246 seconds)
[20:34:56] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:6d4c:38a4:18b7:4b48)
[20:35:01] <The-Compiler> anddam: for m in re.finditer(re.escape(pattern), string): print(m.start())
[20:35:13] <anddam> The-Compiler: mmm I am almost persuaded
[20:35:26] <The-Compiler> ("string" probably isn't the best name for a bytes object)
[20:35:51] <gutts> ChrisWarrick: I wouldn't mind sharing it, yeah just didn't know if it was "off topic" because I'd just be waiting for a review
[20:35:57] <gutts> and yea it's python
[20:35:58] *** Joins: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl)
[20:36:00] <anddam> The-Compiler: I am rewriting a binary file patching, it assumed there was a single instance and used an index to do the patch. Now I want to loop over all occurrencies then patch each point
[20:36:07] <lork> what is that charciter at the end of that command?
[20:36:21] <anddam> The-Compiler: but now I figure I can just use re.sub() if that works with bytes too
[20:36:22] <gutts> causasui: 'vet the vendors' = ??!!
[20:36:31] <The-Compiler> anddam: sure does
[20:36:41] *** Quits: jpodivin (~jpodivin@cgnat44-pool1-236-123.poda.cz) (Quit: Leaving)
[20:36:48] <gutts> ChrisWarrick: actually, do you know if I could ask, then private message code to anyone interested?
[20:36:52] <grym> lork: at the end of which command
[20:36:58] <ChrisWarrick> gutts: people in IRC tend to dislike private messages
[20:36:58] <Wooble> gutts: probably a freelancing website is a better place than IRC to find people to actually pay.
[20:36:59] <gutts> or maybe i'll setup a dpaste with 1 day expiration
[20:37:02] <gutts> ah, o
[20:37:02] <grym> ni
[20:37:04] <lork> disregard ..
[20:37:49] <lork> python -m pip install git_https://github.com/boppreh/keyboard@master ?
[20:37:55] *** Joins: djapo (~archangel@user/djapo)
[20:37:56] <The-Compiler> gutts: FWIW I might be interested depending on the specifics, see https://bruhin.software/ - feel free to msg
[20:38:05] <lork> isays path does not exist
[20:38:07] <lork> says
[20:38:13] <The-Compiler> lork: git+https, not git_https
[20:38:17] <grym> ^
[20:39:04] <causasui> gutts: presumably you want to pay because you want to know that the person doing the review is competent? but honestly if it's not too big you can just post it here, people like grym and ChrisWarrick are in here all day because they live and breathe the language
[20:39:49] *** Joins: shuck (~shuck@user/shuck)
[20:39:54] *** Quits: greedom (~greedom@p200300de6716400095741341808b8d79.dip0.t-ipconnect.de) (Remote host closed the connection)
[20:40:05] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Ping timeout: 246 seconds)
[20:40:13] <M4rt1n> The-Compiler am I doing this correctly?
[20:40:36] *** Quits: merijn (~merijn@c-001-001-001.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[20:40:38] <The-Compiler> M4rt1n: ah, sorry, missed your earlier message
[20:40:42] *** Joins: greedom (~greedom@p200300de6716400095741341808b8d79.dip0.t-ipconnect.de)
[20:40:50] <gutts> causasui: got it
[20:40:53] <lork> I have a error https://pastebin.com/azcTUBuV
[20:41:05] *** Quits: argoneus (~argoneus@argoneus.com) (Quit: Ping timeout (120 seconds))
[20:41:17] <grym> lork: you should do what it suggests
[20:41:18] *** Joins: argoneus (~argoneus@argoneus.com)
[20:41:21] <M4rt1n> The-Compiler: I have already tried something similar. this icon is inside a group of buttons. I am using pyqt5 for my gui. when using the while loop with a time.sleep the rest of my gui hangs and will not load because the while loop is still running. I need this one thing to update in realtime wiout causeing the rest of the gui to stop loading
[20:41:24] *** Joins: pydev (~pydev3@2001:b07:5d28:551:8b60:7468:bc9b:c050)
[20:42:06] <The-Compiler> M4rt1n: you can use a QTimer there to call a function periodically - also consider switching to PyQt6, Qt 5 updates are commercial-only since a while now.
[20:42:12] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[20:42:33] <lork> grym sorry have not used Git before so a bit unfamilliar with its suggestions
[20:43:06] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[20:43:07] <grym> lork: the errors have nothing to do with git
[20:43:30] <grym> lork: the text of the value error includes a thing you can copy and paste and run that will do what needs doing (namely, adding $USER to the proper groups)
[20:43:35] <The-Compiler> grym: wow, doing a bunch of weird stuff at import time and then importing their package in setup.py, amazing
[20:43:43] <grym> The-Compiler: it's a fabulously wild package
[20:43:52] <grym> but i think it's one of the ones that ~has to be
[20:43:58] <M4rt1n> The-Compiler: I will give this a try and come back. hopefully this works
[20:44:07] <grym> "we reach into /dev and rummage around" being what it is
[20:44:22] *** Quits: dvx (~dvx@5.181.92.64) (Remote host closed the connection)
[20:44:23] <Wooble> grym: doing that at install time, though?
[20:44:40] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[20:44:44] <grym> Wooble: yeah i don't think i'd do that
[20:44:46] <M4rt1n> I am hoping to not have to switch toe pyQT6 as I really do not want to start everything over again. been working on this enite project for months now
[20:44:52] <lork> sorry dont understand
[20:44:59] <gutts> ChrisWarrick: the only reason I mention PM is, I do kind of not want to put the code out into the open entirely or I'd have to abstract it a little bit is the only reason; it's around 124 lines and 2-3 paragraphs of requirements
[20:45:12] <grym> lork: your $USER is not in the right group(s) to install this package.
[20:45:22] *** Quits: nuclearg2 (~nucleargr@user/nuclearg1) (Quit: WeeChat 3.4)
[20:45:24] <grym> lork: the error message tells you how to correct that; you should do so
[20:45:38] *** Quits: schumaml (~schumaml@dslb-188-104-178-039.188.104.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[20:45:43] <ChrisWarrick> gutts: the reason I personally require public communication in IRC is to allow others to learn from your code
[20:45:46] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[20:45:59] <gutts> got it
[20:46:01] <grym> lork: see lines 8, 9, 10, 11, 12, 13, 23, and 24, which all tell you to do the same thing; you only need to do that thing once
[20:46:11] *** Quits: gatto (~henry@88-109-69-64.dynamic.dsl.as9105.com) (Ping timeout: 252 seconds)
[20:46:13] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Remote host closed the connection)
[20:46:14] <lork> k
[20:46:25] <grym> (substitute your actual username for USERNAME, ofc)
[20:46:27] *** Joins: sobkas (~sobkas@95.175.17.217)
[20:46:27] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[20:46:48] *** Quits: baecedar60 (~baecedar@86.121.171.149) (Quit: Client closed)
[20:46:48] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[20:46:57] <Wooble> grym: to their credit, a worse module would have just told the user to sudo pip instead. :)
[20:47:05] <grym> Wooble: the version on pypi does
[20:47:09] <Wooble> oof
[20:47:10] <grym> so, they're getting better!
[20:47:34] *** Joins: schumaml (~schumaml@dslb-188-104-166-151.188.104.pools.vodafone-ip.de)
[20:47:36] <grym> Wooble:  i linked the improvement commit a bit upthread if you're interested
[20:48:06] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[20:48:39] <lork> seems it is asking to update the group same command several times for each event. I did the requiements.
[20:48:44] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[20:49:02] *** Joins: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net)
[20:49:20] <anddam> while identifying a platform should I use sys.platform.startswith() or can I go straight with == and !=?
[20:49:37] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[20:49:38] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[20:49:38] <anddam> I ask since I saw big usage of the former in <cannotrememberpackagename>
[20:50:06] *** Joins: zaquest (~notzaques@5.130.79.72)
[20:50:09] *** Joins: Jair (~TheJair@5070B26E.static.ziggozakelijk.nl)
[20:50:32] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[20:50:37] <lork> no option a in command line       File "keyboard/_nixkeyboard.py", line 76, in build_tables
[20:50:37] <lork>         raise ValueError('Failed to run dumpkeys to get key names. Check if your user is part of the "tty" group, and if not, add it with "sudo useradd -a -G tty USER".')
[20:50:37] *** Quits: vantage (~vantage@ip-193-121-152-141.dsl.scarlet.be) (Read error: Connection reset by peer)
[20:51:15] *** Quits: casastorta (~casastort@neo1.krivokuca.net) (Quit: ZNC 1.8.2 - https://znc.in)
[20:51:51] *** Joins: frmlof (~frmlof@70.243.238.191)
[20:51:52] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[20:51:59] *** Quits: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[20:52:31] *** Joins: Staunch (~Staunch@137.83.202.220)
[20:53:02] *** Quits: zmt00 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[20:53:07] *** Joins: casastorta (~casastort@neo2.krivokuca.net)
[20:53:08] *** Joins: paul424 (~tom@ip-5-172-233-226.multi.internet.cyfrowypolsat.pl)
[20:53:09] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[20:53:52] *** Joins: radik81[m] (~radik81ma@2001:470:69fc:105::1:eb81)
[20:54:23] *** Joins: melty_cheese (~melty_che@70.58.57.135)
[20:54:53] <lork> I saw the repeating errr and did the command..which it excepted. Repeated the download same errors have it in pastebin https://pastebin.com/iBYFTCUh
[20:54:55] *** Joins: zmt00 (~zmt00@user/zmt00)
[20:55:01] <grym> lork: i misspoke slightly.  you have to be both in tty and also input groups
[20:55:22] *** mpmc is now known as Windy_Bag
[20:55:28] *** Joins: darksun (~darksun@user/darksun)
[20:56:21] <lork> grym yes see the error output I did enter in sudo usermod -a -G input lork and it did except the error.
[20:56:26] <lork> I mean..command
[20:56:45] <lork> grym yes see the error output I did enter in "sudo usermod -a -G input lork" and it did except the error.
[20:56:51] <grym> lork: you _might_ need to restart your shell, but i would not have thought so
[20:56:52] <lork> sorry ..
[20:57:01] <lork> okay
[20:57:13] <Wooble> do it again, but with "tty" instead of "input"
[20:57:43] <lork> k
[20:58:11] *** Joins: han-solo (~han-solo@user/han-solo)
[20:58:19] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[20:58:38] *** Quits: rsx (~dummy@ppp-188-174-138-3.dynamic.mnet-online.de) (Quit: rsx)
[20:59:39] *** Joins: peteyboy1 (~peteyboy1@199.157.133.37.dynamic.jazztel.es)
[20:59:41] <Wooble> (err, also they wrote "useradd -a" which isn't even a thing.
[21:00:35] <lork> I used tty and tried to download again no go
[21:00:50] <lork> did except the tty in the command
[21:01:46] *** Quits: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94) (Quit: Konversation terminated!)
[21:02:32] *** Quits: whaley (~whaley@cpe-76-182-165-20.sc.res.rr.com) (Quit: It won't give up.  It wants me dead.  Goddamn this noise inside my head.)
[21:02:46] <Wooble> you seem to need to logout and back in for groups to get picked up.
[21:02:56] <grym> ah yeah, perhaps
[21:03:04] <lork> Log out from linxu then log back in?
[21:03:20] <Wooble> oddly, starting a new shell under screen doesn't even seem to work :?
[21:03:27] <lork> nope
[21:03:35] <grym> su <your username> does, though
[21:03:35] <lork> using default bash
[21:03:44] <lork> yes
[21:03:54] <grym> never su'd from myself to myself before, but that did do the trick for me
[21:03:55] <phy1729> You have to log out and back in to change groups
[21:04:08] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[21:04:16] <lork> k
[21:04:51] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 260 seconds)
[21:05:01] *** Quits: lork (~lork@2601:603:1301:3630::9bfd) (Quit: Leaving)
[21:05:28] <Wooble> sent PR to fix that "useradd" message.
[21:05:52] *** Quits: epony (epony@user/epony) (Read error: Connection reset by peer)
[21:05:59] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[21:06:03] *** Joins: whaley (~whaley@cpe-76-182-165-20.sc.res.rr.com)
[21:06:20] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:06:20] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[21:06:25] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[21:06:28] *** Joins: han-solo (~han-solo@user/han-solo)
[21:06:50] *** Joins: epony (epony@user/epony)
[21:07:16] <Wooble> ah, there was already a comment on an open issue suggesting that; not sure why that person didn't just make the PR.
[21:07:24] *** Joins: ano (~ano@user/ano)
[21:08:07] *** Quits: jay-m126 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 260 seconds)
[21:08:16] *** Joins: lork (~lork@2601:603:1301:3630::9bfd)
[21:08:34] *** Quits: ano (~ano@user/ano) (Client Quit)
[21:08:40] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:08:40] <lork> okay logged out logged in but did not save the path of the download can you paste it here?
[21:09:00] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 240 seconds)
[21:09:05] <anddam> I have a bytes pattern and I am replacing it with an input variable "name", I do  patch = re.subn(pattern, repl, data)    now since this is going to be read by C I add   patch = patch[:len(pattern)]; patch[-1] = b"\x00"
[21:09:19] <anddam> is there a "proper" way to do that?
[21:09:30] <anddam> did python2 have b"" strings?
[21:09:37] <anddam> or rather literals
[21:09:48] *** Joins: cosimone (~user@93-47-230-184.ip115.fastwebnet.it)
[21:09:57] <The-Compiler> anddam: Python 2 had str (which is bytes in Python 3) and unicode (which is str in Python 3)
[21:10:03] <grym> lork: python -m pip install git+https://github.com/boppreh/keyboard@master
[21:10:19] <lork> thanks
[21:10:36] *** Joins: AlanMD (~AlanMD@82.79.132.61)
[21:11:00] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 240 seconds)
[21:11:11] <lork> same error :(
[21:11:23] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[21:12:03] <Wooble> anddam: b"" works in 2.7 (maybe 2.6 too?) but doesn't really do anything.
[21:12:32] *** Joins: ano (~ano@user/ano)
[21:12:39] <lork> there is NO option -a why does the error keeps saying that to add that as a option?
[21:12:43] <AhmedAmerican> i do have an HTML file which include a table where i need to change the position of one column of that table. is that possible within bs4 or you recommend another method ?
[21:12:52] <Wooble> lork: should be usermod, not useradd
[21:12:55] *** Quits: Jair (~TheJair@5070B26E.static.ziggozakelijk.nl) (Quit: Leaving)
[21:13:09] <Wooble> (I just submitted a PR to fix the message)
[21:13:20] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:13:24] <lork> well the error says to use useradd I will try usermod
[21:13:55] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[21:13:57] <lork> okay it except that. The error message needs to be corrected
[21:13:57] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[21:14:25] <Wooble> not holding my breathe, considering the age of some other "fix typo" PRs on there. :)
[21:14:48] <phy1729> GNU usermod has -a; others may or may not. It isn't in POSIX, so who knows what you might get.
[21:15:12] <Wooble> phy1729: the error message said to user useradd -a
[21:15:25] <Wooble> (which doesn't exist anywhere as far as I know)
[21:15:40] <phy1729> well that's just silly
[21:15:42] <lork> relogging out then relogging in
[21:15:47] *** Quits: lork (~lork@2601:603:1301:3630::9bfd) (Quit: Leaving)
[21:16:04] *** Quits: urb4nm (~urb4nm@165.227.158.65) (Quit: The Lounge - https://thelounge.chat)
[21:17:03] *** Joins: urb4nm (~urb4nm@static.103.148.69.159.clients.your-server.de)
[21:17:44] *** Joins: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net)
[21:18:10] *** Quits: alex11 (~alex11@user/alex11) (Read error: Connection reset by peer)
[21:18:37] <anddam> ha, patch[-1] = b"\x00"    TypeError: 'bytes' object does not support item assignment
[21:18:53] <nedbat> anddam: patch += b"\x00"
[21:19:13] <The-Compiler> nedbat: that doesn't sound like the right thing to do when patching a binary
[21:19:27] <nedbat> The-Compiler: probably not, i spoke too soon
[21:19:32] *** Joins: pulseaudio (~pulseaudi@103.42.174.55)
[21:19:37] <anddam> The-Compiler: how so?
[21:19:46] *** Quits: pulseaudio (~pulseaudi@103.42.174.55) (Remote host closed the connection)
[21:20:01] <The-Compiler> anddam: appending b"\x00" would make the bytes object grow bigger, probably resulting in overwriting more bytes than intended
[21:20:49] <anddam> nedbat: no that works, I just need to remove last byte
[21:21:14] <anddam> patch = patch[:len(pattern)-1] +  b"\x00"
[21:22:15] <phy1729> Is there not some ffi layer that does the python str -> C char* conversion?
[21:22:32] <The-Compiler> anddam: you can do [:-1] instead
[21:22:42] <The-Compiler> phy1729: context?
[21:22:52] *** Joins: alex11 (~alex11@user/alex11)
[21:23:28] <phy1729> anddam: said it was going to be read by C, so I'd think there's some layer in between responsible for the paradigm shifts
[21:24:41] <anddam> not read by C, I meant strings have to be nul-terminated
[21:24:49] *** Joins: Poke (~poke@122.161.82.78)
[21:25:18] *** Quits: mug3n_ (~mugen@gateway/tor-sasl/mugen) (Remote host closed the connection)
[21:25:41] *** Joins: mug3n_ (~mugen@gateway/tor-sasl/mugen)
[21:25:47] *** Joins: chadea (~a@pool-71-178-44-88.washdc.fios.verizon.net)
[21:25:51] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[21:25:53] *** Quits: Poke (~poke@122.161.82.78) (Changing host)
[21:25:53] *** Joins: Poke (~poke@user/poke)
[21:26:26] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[21:26:31] <chadea> I need to add two imports to a python file in an installed package. What is the best way to patch it? I want to avoid editing pip installed files
[21:26:32] <anddam> there's a C source with a placeholder for this data but it obviously only have so much space allocated, I added this bit to prevent a huge enough input
[21:26:40] *** Joins: wyclif (~wyclif@user/wyclif)
[21:26:41] <anddam> would overflow*
[21:26:43] <chadea> https://github.com/python-openxml/python-docx/pull/392#issuecomment-728831746
[21:26:55] *** Parts: Poke (~poke@user/poke) ()
[21:26:57] <chadea> I need to add these two imports to docx: from pptx.parts.chart import ChartPart and from docx.oxml.shape import CT_Inline
[21:27:13] *** Joins: bahamas (~lucian@84.232.140.158)
[21:27:55] <anddam> The-Compiler: oh LOL
[21:27:55] <chadea> The example suggests hacking site-packages, which I would like to avoid
[21:27:59] <anddam> right, [:-1]
[21:28:20] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:28:29] <anddam> The-Compiler: well, no, that's actually not correct
[21:28:30] *** Quits: mat001 (~mat001@72.28.108.216) (Remote host closed the connection)
[21:28:33] *** Joins: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[21:28:44] *** Joins: jim (~jim@about/linux/staff/jim)
[21:28:56] <anddam> sub() will place a bytes possibly much longer than pattern, I need to be sure that the initial pattern length is the threshold
[21:28:57] <chadea> Disregard; I will have to use that repo's feature branch for some more custom methods
[21:29:10] *** Joins: mat001 (~mat001@72.28.108.216)
[21:29:22] <anddam> re.sub('FO', 'FUBAR', 'FO')  would result in a str of length 5
[21:29:26] *** Joins: maxzor (~maxzor@2a01cb04054faa00e3b5d15dd970d9fb.ipv6.abo.wanadoo.fr)
[21:31:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[21:31:56] *** Joins: kor1 (~kor1@201.17.127.170)
[21:32:10] *** Joins: wyclif (~wyclif@user/wyclif)
[21:32:52] *** Joins: gatto (~henry@88-109-69-64.dynamic.dsl.as9105.com)
[21:33:03] *** Quits: soju-test-user (~soju-test@2a01cb040760a5cb0000000000000318.ipv6.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[21:34:02] *** Quits: kor1 (~kor1@201.17.127.170) (Client Quit)
[21:34:12] *** Joins: nicoz (nicoz@nicoz.letz.dev)
[21:34:13] *** Joins: kor1 (~kor1@user/kor1)
[21:34:23] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[21:35:16] *** Joins: dsrt^ (~dsrt@c-24-99-107-170.hsd1.ga.comcast.net)
[21:36:52] *** Quits: kor1 (~kor1@user/kor1) (Client Quit)
[21:36:55] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[21:37:19] *** Joins: kor1 (~kor1@user/kor1)
[21:37:39] *** Joins: wyclif (~wyclif@user/wyclif)
[21:38:35] *** Joins: Poke2 (~poke@122.161.82.78)
[21:38:37] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[21:38:49] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[21:39:14] *** Quits: Poke2 (~poke@122.161.82.78) (Changing host)
[21:39:14] *** Joins: Poke2 (~poke@user/poke)
[21:39:56] *** Joins: aslicedbanjo (~aslicedba@host86-168-244-82.range86-168.btcentralplus.com)
[21:40:03] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 260 seconds)
[21:40:33] *** Quits: casastorta (~casastort@neo2.krivokuca.net) (Quit: ZNC 1.8.2 - https://znc.in)
[21:40:35] *** Joins: jpn (~jpn@user/jpn)
[21:40:43] *** Quits: tWqaq (~tWqaq@240e:389:5d41:5900:ce2a:68f8:299f:6e2e) (Quit: Leaving)
[21:40:46] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:41:39] *** Quits: nawcom_ (~nawcom@bulldadachat.com) (Quit: bye)
[21:41:49] *** Quits: kor1 (~kor1@user/kor1) (Ping timeout: 240 seconds)
[21:42:15] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[21:42:34] *** Joins: kor1 (~kor1@user/kor1)
[21:42:49] *** Joins: casastorta (~casastort@neo1.krivokuca.net)
[21:45:09] *** Quits: gatto (~henry@88-109-69-64.dynamic.dsl.as9105.com) (Read error: Connection reset by peer)
[21:45:35] *** Quits: Poke2 (~poke@user/poke) (Ping timeout: 250 seconds)
[21:46:52] *** Quits: kor1 (~kor1@user/kor1) (Client Quit)
[21:47:07] *** Joins: fab-io (~fabio@dynamic-138-204-193-31.vicontec.net.br)
[21:47:18] *** Joins: kor1 (~kor1@user/kor1)
[21:47:27] *** Quits: melty_cheese (~melty_che@70.58.57.135) ()
[21:48:06] *** Quits: AlanMD (~AlanMD@82.79.132.61) (Quit: ZZZzzz…)
[21:48:40] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:48:41] *** Quits: iomari891 (~iomari891@197.210.77.28) (Ping timeout: 246 seconds)
[21:49:15] *** Joins: funhouse (~funhouse@user/funhouse)
[21:49:51] *** Joins: Humn (~humfb@223.190.89.123)
[21:50:05] *** Quits: Humn (~humfb@223.190.89.123) (Changing host)
[21:50:05] *** Joins: Humn (~humfb@user/poke)
[21:50:37] *** Humn is now known as humn
[21:50:51] *** Quits: greedom (~greedom@p200300de6716400095741341808b8d79.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:51:01] *** Quits: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net) (Quit: The Lounge - https://thelounge.chat)
[21:51:30] *** Joins: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net)
[21:52:04] <SnoopJ> ooh, I didn't realize `tomllib` is going to be a thing in 3.11. How exciting!
[21:52:07] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[21:52:40] *** Quits: humn (~humfb@user/poke) (Client Quit)
[21:53:16] *** Quits: kor1 (~kor1@user/kor1) (Ping timeout: 245 seconds)
[21:53:20] *** Joins: humn (~humfb@223.190.89.123)
[21:53:20] *** Quits: humn (~humfb@223.190.89.123) (Changing host)
[21:53:20] *** Joins: humn (~humfb@user/poke)
[21:53:22] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:54:20] *** Joins: kor1 (~kor1@user/kor1)
[21:55:02] *** Joins: cuanim (~cuanim@31.215.207.104)
[21:55:02] *** Quits: cuanim (~cuanim@31.215.207.104) (Changing host)
[21:55:02] *** Joins: cuanim (~cuanim@user/cuanim)
[21:56:07] *** Joins: neverfindme (~hayden@158.123.160.43)
[21:56:29] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[21:57:05] *** Joins: vlm (~vlm@user/vlm)
[21:57:55] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 240 seconds)
[21:58:04] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[21:58:13] *** Quits: neverfindme (~hayden@158.123.160.43) (Remote host closed the connection)
[21:58:25] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:58:50] *** Quits: kor1 (~kor1@user/kor1) (Ping timeout: 246 seconds)
[22:00:07] *** Quits: stewpot (~stewpot@2a02:c7e:34de:4500:c0b2:5560:8807:6081) (Remote host closed the connection)
[22:00:19] *** Quits: Bandicoot (~bandicoot@45.154.88.240) (Quit: Leaving)
[22:00:55] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Quit: Leaving)
[22:01:14] *** Joins: reedrichards (~f@2607:f598:bbda:220:514f:5d5b:c74f:811d)
[22:01:23] *** Quits: Iolo (~iolo@user/Iolo) (Quit: Leaving)
[22:01:26] <Wooble> needing to bootstrap a toml library to install packages wasn't an ideal situation :)
[22:01:49] *** Joins: jpn (~jpn@user/jpn)
[22:01:51] <SnoopJ> yea, finally rectifying the huge missing stair
[22:02:17] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[22:02:57] *** Quits: f__ (~f@2607:f598:bbda:220:97e8:2278:b249:1e41) (Remote host closed the connection)
[22:03:04] <Wooble> although it would be nice if they'd put pip, requests, setuptools in the stdlib too.
[22:03:24] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:03:41] *** Joins: ianliu (~ianliu@2804:431:cfcf:e28b:2431:c9e7:ceaa:ccfc)
[22:03:53] <ianliu> Is there a more appropriate channel for python pandas?
[22:04:01] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 250 seconds)
[22:04:06] <Wooble> #pydata, maybe, but here is fine, and there is small.
[22:04:09] <SnoopJ> ianliu, there's #pydata, but questions about pandas are on-topic here
[22:04:12] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:6d4c:38a4:18b7:4b48) (Ping timeout: 240 seconds)
[22:04:29] <ianliu> Ok!
[22:05:07] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[22:06:16] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[22:07:33] *** Quits: KnowledgeShark (~Knowledge@50.34.198.222) (Quit: Leaving)
[22:07:52] *** Joins: GinFuyou (~GinFuyou@2a04:52c0:101:a4e::)
[22:08:07] *** Joins: matsaman (~matsaman@user/matsaman)
[22:09:27] *** Quits: schumaml (~schumaml@dslb-188-104-166-151.188.104.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[22:11:08] <GinFuyou> I have a silly question: how do I format a regex patter like this? pattern = fr"\/{name}\s{prefix}\d{5}\.[a-z0-9]+$"
[22:11:23] <GinFuyou> namely \d{5} is the problem
[22:11:34] *** Joins: schumaml (~schumaml@dslb-178-007-203-094.178.007.pools.vodafone-ip.de)
[22:11:35] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[22:11:45] *** Quits: cheater (~Username@user/cheater) (Quit: (BitchX) Eat, drink and be merry...for tomorrow we die)
[22:11:54] <phy1729> You also have regex injection. Where are name and prefix coming from and what can they contain?
[22:12:39] <ianliu> So, I'm trying to understand how Pandas splits data when saving a partitioned parquet file. I have a script that reads a CSV and saves as a partitioned parquet. If I execute the script with the same data, I can see that pandas will save two files in the partitioned directory. When saving the same data, I expected Pandas to save the exact same file
[22:12:45] <GinFuyou> those are simple strings. I guess I just need a way to make a littal "{"
[22:12:48] <phy1729> f'{{' = '{'
[22:12:51] <teut> https://gist.github.com/bensimner/bae76d72c2c7f8fe3c346606855f97dd#file-toy_bytecode-py-L39      {self.string!r}    what's this?
[22:12:52] <SnoopJ> GinFuyou, {{5}}
[22:13:01] *** Quits: spiderman (spiderman@spiderman.shelltalk.net) (Ping timeout: 240 seconds)
[22:13:06] *** Parts: humn (~humfb@user/poke) (Leaving)
[22:13:07] *** Quits: kwak (kwak@2605:6400:20:b4:6caa:ad8a:5455:f45f) (Ping timeout: 250 seconds)
[22:13:15] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[22:13:31] *** Joins: Barones (~Barones@user/Barones)
[22:13:41] *** Joins: vlado (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c)
[22:13:43] <SnoopJ> teut, {obj!r} is basically a shortcut for {repr(obj)}
[22:13:48] <GinFuyou> SnoopJ, brilliant, I should have guessed. Thank you
[22:13:53] <ianliu> by looking at the partitioned data, pandas creates something like "dataset/year=2022/af83fj8af38j.parquet". I was expecting this filename to be some kind of md5sum of the file, which should be the same for the same data
[22:14:03] <teut> oh, didn't know it.  Thanks SnoopJ
[22:14:39] *** Joins: gatto (~henry@188.241.156.41)
[22:14:43] <SnoopJ> GinFuyou, teut the official docs have a handy reference for all the different stuff format strings can do: https://docs.python.org/3/reference/lexical_analysis.html#f-strings
[22:14:57] *** Quits: Joel (~jjshoe@user/joel) (Ping timeout: 240 seconds)
[22:15:04] <SnoopJ> see also https://docs.python.org/3/library/string.html#formatspec linked from there
[22:15:24] <SnoopJ> s/format strings/f-strings/ heh
[22:15:27] <teut> oh so it only works with f strings
[22:15:58] <SnoopJ> teut, it works with str.format() too
[22:16:15] *** Quits: pydev (~pydev3@2001:b07:5d28:551:8b60:7468:bc9b:c050) (Ping timeout: 260 seconds)
[22:16:22] <SnoopJ> `"{x!r}".format(x='hello')`  →  "'hello'"
[22:16:59] <teut> understood, basically with string formatting technique that uses {}
[22:17:50] *** Joins: _filename (~kilitary@188.242.105.134)
[22:18:12] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 240 seconds)
[22:18:44] *** Joins: cheater (~Username@user/cheater)
[22:19:39] *** Joins: bomb-on (~bomb-on@user/bomb-on)
[22:19:50] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[22:20:07] *** Joins: Bandicoot (~bandicoot@45.154.88.240)
[22:20:58] *** Quits: bomb-on (~bomb-on@user/bomb-on) (Read error: Connection reset by peer)
[22:21:01] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 256 seconds)
[22:21:35] *** Joins: ljkimz (~ljkimz@67-3-136-109.omah.qwest.net)
[22:21:46] *** Joins: bomb-on (~bomb-on@user/bomb-on)
[22:22:34] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:22:35] <ljkimz> If I run a Python program that exits with sys.exit(<non-zero-int>) but that program is run by the interpreter (python prog.py) the OS sees exit code '0' (success)
[22:22:38] <ljkimz> Why?
[22:23:57] *** Joins: Joel (~jjshoe@user/joel)
[22:23:58] <bjs> ljkimz: are you sure the exit was a non-zero int? and if so, are you sure it was that sys.exit line that actually exited the program?
[22:24:16] *** bn_work is now known as b
[22:24:35] <ljkimz> I tested by making a prog with literally only 'import sys; sys.exit(5)'
[22:24:46] *** b is now known as Guest9323
[22:25:05] *** Quits: schumaml (~schumaml@dslb-178-007-203-094.178.007.pools.vodafone-ip.de) (Ping timeout: 246 seconds)
[22:25:14] *** Guest9323 is now known as bn_work
[22:25:46] <bjs> ljkimz: how are you seeing that the exit code was 0?
[22:25:53] *** Joins: Gotoma (~textual@ip4d14fa13.dynamic.kabel-deutschland.de)
[22:25:58] <ljkimz> 'echo $?'
[22:26:03] <arrcpp0> https://pastebin.com/Y1TS8cnL
[22:26:07] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Quit: WeeChat 3.4)
[22:26:15] *** Quits: shuck (~shuck@user/shuck) (Remote host closed the connection)
[22:26:24] <SnoopJ> ljkimz, do you have any site customizations?
[22:26:33] *** Joins: peterandre (peterandre@2605:6400:c847:1524::4251)
[22:26:36] *** Quits: mncheck (~mncheck@193.224.205.254) (Ping timeout: 240 seconds)
[22:26:37] <bjs> ljkimz: that doesn't seem right -- can you show us? i'm a bit puzzled
[22:26:42] <ljkimz> Nope. Fresh OS install as well
[22:26:42] <bjs> sys.exit(5) should certainly have exit code 5...
[22:26:50] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 246 seconds)
[22:27:10] *** Joins: schumaml (~schumaml@dslb-092-074-002-156.092.074.pools.vodafone-ip.de)
[22:27:18] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:cde9:ec1e:3b73:a5d6) (Ping timeout: 260 seconds)
[22:27:28] <arrcpp0> ljkimz: can you reproduce my paste? Do you get the exit code like that?
[22:27:59] <InPhase> ljkimz: python3 -c 'import sys; sys.exit(5)'; echo $?
[22:28:22] <arrcpp0> Yeah, shorter like that InPhase
[22:29:11] <ljkimz> Ah....figured something out. I was actually returning the code from os.system and, if this is higher that some number it just returns '0'
[22:30:00] <SnoopJ> ljkimz, can we see the real program?
[22:30:45] <SnoopJ> (there's no mention of os.system in the original question's program)
[22:31:55] <ljkimz> My apologies. I figured passing the return value of os.system in sys.exit was the same thing but it looks like the OS recycles from 0 on multiples of 256
[22:31:56] <SnoopJ> I believe if the exit code is larger than 255 you'll overflow and get a value modulo 256
[22:32:01] <SnoopJ> yea, it's a single byte
[22:32:08] <ljkimz> Yep. Makes sense now
[22:32:11] <ljkimz> geez
[22:32:13] <ljkimz> sorry
[22:32:34] <ljkimz> Guess I have to strip the higher order byte from os.system
[22:32:37] <SnoopJ> see e.g. `man 1 exit`
[22:32:48] <ljkimz> Which is the actual exit code
[22:33:16] <SnoopJ> we probably should have asked about that sooner :)
[22:35:14] <teut> https://bpa.st/V3RQ why is re.split and python's split made so different?
[22:35:24] <bjs> teut: because re.split is for regexes
[22:35:25] <SnoopJ> teut, because they do different things
[22:35:34] <bjs> teut: if re.split and str.split did the same thing,  why would we have both?
[22:36:19] <teut> we would have both because re.split would split on regexes
[22:36:22] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:36:37] <teut> i.e., you wouldn't get "apple" in the list
[22:36:57] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[22:36:59] <bjs> teut: i'm not sure what you're asking
[22:37:13] <bjs> teut: are you asking about some more subtle difference other than the obvious "one works with regex and one doesn't?"
[22:37:16] <teut> oops, I forgot to change the regex
[22:37:19] <teut> sorry mb
[22:37:49] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[22:38:57] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[22:39:16] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[22:39:16] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[22:39:27] *** Joins: minip (~minip@user/minip)
[22:39:54] *** Quits: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com) (Quit: beli6147)
[22:40:15] *** Joins: brabrax (~brabrax@user/brabrax)
[22:40:19] *** Joins: califax (~califax@user/califx)
[22:40:37] *** Quits: fab-io (~fabio@dynamic-138-204-193-31.vicontec.net.br) (Ping timeout: 250 seconds)
[22:42:02] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: quick everyone outta the universe)
[22:42:11] <bjs> teut: change it to what?  I'm not really sure what you're trying to ask
[22:42:29] <bjs> at least i think i'm not sure
[22:42:42] <teut> >>> re.split(r"apple", s) ['', ', grapes, ', ' , mango']
[22:42:56] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 246 seconds)
[22:43:23] <teut> https://gist.github.com/bensimner/bae76d72c2c7f8fe3c346606855f97dd#file-toy_bytecode-py-L49 I am string to understand this regex
[22:43:39] <teut> what's the objective to split at the numbers?
[22:44:11] <teut> and if you will split on numbers they should be removed as "apple" got removed above
[22:44:32] <bjs> teut: well a tokenizer wants to take something like "(12+3)*142" and turn it into ["(", "12", "+", "3", ")", "*", "142"]
[22:44:52] <teut> yes
[22:45:01] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:45:13] <teut> so you would add a space after and before each operand
[22:45:22] <bjs> teut: space?
[22:45:29] <teut> that's what peter norvig does in his blog
[22:45:31] *** Quits: _filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[22:45:44] <teut> " " this thing
[22:45:49] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[22:46:12] *** Quits: Gotoma (~textual@ip4d14fa13.dynamic.kabel-deutschland.de) (Quit: Textual IRC Client: www.textualapp.com)
[22:46:12] <bjs> teut: I mean his blog has lots of hacky things in it. The adding spaces thing was a hack he was doing
[22:46:35] <bjs> i dont add spaces anywhere, and nor does CPython
[22:47:19] *** Joins: wyclif (~wyclif@user/wyclif)
[22:47:30] <teut> hmm
[22:48:10] <bjs> teut: the goal is to take a random string and try work out some structure.  So instead of just "a bunch of characters" you know "it's a paren, followed by a number, followed by a plus ..." etc
[22:48:16] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:48:16] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 245 seconds)
[22:48:55] <bjs> I use regexes (for simplicitly), CPython has some fairly simple code that looks at each character in order and tries to figure out what kind of thing it's looking at  (which if  you know or even if you don't,  is just regex in disguise)
[22:49:05] <teut> re.split(r"(\d+)", s)  ['(', '1', '+', '2', ')*', '3', '']
[22:49:24] <teut> so you split at the digits and the digits are there in the list ?
[22:49:55] <teut> >>> re.split(r"apple", s) ['', ', grapes, ', ' , mango']      here apple disappeared
[22:51:17] <bjs> teut: yeah. that's true of both. if I go "1:2".split(":") then the : disappears
[22:51:51] <bjs> teut: the key is that for regex groups are retained
[22:52:04] <teut> I don't know if I should try to study regex or re.split splitting procedure
[22:52:18] <bjs> teut: compare re.split("(apple)", ...) vs re.split("apple", ...)
[22:52:31] <teut> oh the ( ) does the grouping
[22:52:32] *** Joins: jpn (~jpn@user/jpn)
[22:53:05] <bjs> teut: it's not important, what's important is that in tokenization you go from bunch of characters -> 'words'.  "a+b*c" => ["a", "+", "b", "*", "c"]
[22:53:13] *** Joins: AlanMD_ (~AlanMD@82.79.132.61)
[22:53:23] <bjs> (they're basically what you would call words in natural language, but we call them tokens or lexemes instead to be less confusing(
[22:53:25] <bjs> teut: yeah
[22:53:34] *** Joins: dreamon (~dreamon@p57a4c16a.dip0.t-ipconnect.de)
[22:53:44] *** Joins: cliluw (~cliluw@47.147.77.43)
[22:53:56] <teut> ya , for purpose of understanding compiler it's not important
[22:54:06] *** Quits: bomb-on (~bomb-on@user/bomb-on) (Read error: Connection reset by peer)
[22:54:27] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[22:54:43] *** Quits: niv (~niv@limbo.cypherpunks.io) (Quit: Powered by LunarBNC: https://LunarBNC.net)
[22:55:49] *** Joins: niv (~niv@limbo.cypherpunks.io)
[22:55:53] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[22:55:55] <bjs> teut: a lot of the Python implementation can be accessed from within Python
[22:56:06] <bjs> e.g. you can run the tokenizer, by `import tokenize`
[22:56:07] *** Joins: bomb-on (~bomb-on@user/bomb-on)
[22:56:12] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Ping timeout: 240 seconds)
[22:56:42] <teut> your code misses one major thing that is scoping.
[22:57:01] <teut> but yeah the objective doesn't require that
[22:57:22] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Quit: No Ping reply in 180 seconds.)
[22:57:25] <teut> peter norvig's blog shows a nice recursive function to do that
[22:57:38] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 260 seconds)
[22:57:38] <bjs> teut: well obviously my code is not *all* of the Python language and Python scoping is a little more complex
[22:57:43] *** Joins: cation21 (cation@user/cation)
[22:57:54] *** Quits: AlanMD_ (~AlanMD@82.79.132.61) (Ping timeout: 260 seconds)
[22:58:51] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[22:59:06] <teut> scoping uses a nested list
[22:59:16] *** Quits: cation (cation@user/cation) (Ping timeout: 272 seconds)
[22:59:32] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[22:59:35] <bjs> teut: i think you are still mistaking "the things peter norvig did" with "how it's always done"
[22:59:58] <bjs> scoping is a big and complex subject, and Python's variables have a lot of complexity.
[23:00:14] *** Joins: f__ (~f@2607:f598:bbda:220:51f9:c50f:2d86:718c)
[23:00:33] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[23:00:34] <teut> that part I also want to know the variables and binding and garbage collector
[23:00:55] *** Quits: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl) (Remote host closed the connection)
[23:00:59] *** Quits: reedrichards (~f@2607:f598:bbda:220:514f:5d5b:c74f:811d) (Remote host closed the connection)
[23:01:02] <teut> what does it even mean to free memory
[23:01:04] *** cation21 is now known as cation
[23:01:27] <teut> calling the free function is what I know at the most
[23:01:30] <kaleido> for hundreds of years memory has been a slave to western cultures
[23:01:37] <bjs> teut: well you don't start with infinite memory, you sometimes have to ask the OS (or whoever is handing you memory) to ask for more
[23:01:44] <bjs> teut: once you're done, you might want to give it back. That's what free() is.
[23:01:57] <teut> that's too abstract
[23:02:00] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Client Quit)
[23:02:16] <bjs> teut: well for example the C malloc()/free() functions that is all you know.
[23:02:19] <teut> you set the bits on the ram
[23:02:25] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:02:35] <bjs> teut: what do you mean?
[23:03:11] *** Quits: Forsaken87 (~quassel@2a02:908:1866:e360:4d2a:597c:d813:f407) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:03:16] *** Quits: the_lanetly_052 (~the_lanet@194.135.168.23) (Ping timeout: 245 seconds)
[23:03:26] *** Joins: kwak (kwak@2605:6400:20:b4:6caa:ad8a:5455:f45f)
[23:04:30] <teut> don't you magnetize domains on the ram
[23:04:44] <bjs> teut: the ram itself doesn't know anything about malloc and free
[23:04:47] *** Quits: harry (~harry@49.36.177.248) (Quit: Connection closed)
[23:04:49] *** Joins: jay-m126 (~jay-m@gateway/vpn/pia/jay-m126)
[23:06:06] <teut> with free do you switch off power to those registers?
[23:06:07] *** Joins: spiderman (spiderman@spiderman.shelltalk.net)
[23:06:13] <bjs> teut: no
[23:06:24] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:4d2a:597c:d813:f407)
[23:06:30] <bjs> teut: like i said, malloc() and free() are just requests to the OS to give you more memory and to say that you're done with it.
[23:06:36] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[23:06:40] <SnoopJ> teut, here's a video that talks about how computer memory works. This isn't really suitable for #python though, more appropriate for ##python-offtopic. https://www.youtube.com/watch?v=XETZoRYdtkw
[23:07:15] <SnoopJ> how computer memory usually* works. memory doesn't *have* to be magnetic, or even electrical
[23:07:29] <bjs> teut: the memory is always all there, you (the program) is just not allowed to access it all.
[23:07:33] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[23:07:38] <bjs> as far as the program is concerned (or even the OS for that matter) ram is just a big array of bytes.
[23:07:54] <cliluw> Does Python have something like C#'s catch...when syntax that allows further filtering the type of exceptions an exception handler catches? https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/try-catch#code-try-2
[23:08:30] <bjs> cliluw: no
[23:08:31] <cliluw> I find catching exceptions solely on the what the exception is a subclass is of to be a little limiting in my use case.
[23:08:36] <SnoopJ> cliluw, nope, you'll have to check it in the handler
[23:08:44] <whatsupdoc> Why does this not work? re.split('+-*/', s)
[23:08:46] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:08:58] <bjs> whatsupdoc: well, what do you want it to do?
[23:08:59] <nedbat> cliluw: can you tell us more about your case?
[23:09:07] <SnoopJ> whatsupdoc, because you didn't escape the +
[23:09:15] <SnoopJ> (you should escape the * too)
[23:09:16] <whatsupdoc> ok thanks
[23:09:21] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[23:09:22] <nedbat> whatsupdoc: or the *
[23:09:30] <whatsupdoc> parse mathematical operation
[23:09:46] <nedbat> whatsupdoc: you probably want: re.split(r"[-+*/]", s)
[23:10:24] *** Quits: Bandicoot (~bandicoot@45.154.88.240) (Quit: Leaving)
[23:10:31] <cliluw> nedbat: I want a certain exception handler to only catch the exception if the first exception argument is a certain error number.
[23:10:31] *** Quits: ljkimz (~ljkimz@67-3-136-109.omah.qwest.net) (Quit: Client closed)
[23:10:34] <whatsupdoc> you're right, thanks
[23:10:41] <SnoopJ> ooh yea, a character class is even better than escaping
[23:11:11] *** Quits: schumaml (~schumaml@dslb-092-074-002-156.092.074.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[23:11:55] <bjs> SnoopJ: well it's orthogonal because r"\+-" does not match "+"
[23:12:10] *** Windy_Bag is now known as mpmc
[23:12:18] <SnoopJ> bjs, ...yes, good point
[23:12:30] * SnoopJ could use a second coffee
[23:12:37] <bjs> whatsupdoc: note that this approach won't work if your mathematical operations contain parens
[23:12:48] <whatsupdoc> yes
[23:12:55] <bjs> whatsupdoc: just so you're aware :)
[23:12:58] *** Joins: tomeaton17 (~tomeaton1@2a0c:5bc0:40:2e2f:8988:5c8a:4221:6c88)
[23:13:03] <SnoopJ> yes at some point you'll be stuck parsing it the "right" way
[23:13:19] <whatsupdoc> lol
[23:13:58] <SnoopJ> whatsupdoc, what's funny?
[23:14:08] *** Parts: ap5 (~inf@user/ap5) (Leaving)
[23:14:26] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Quit: Leaving)
[23:14:39] <whatsupdoc> SnoopJ: because i had realized the approach doesn't work
[23:14:51] *** Joins: d00gy (~tonberry@user/d00gy)
[23:15:21] *** Joins: k2ro (~k2ro@p5b175c79.dip0.t-ipconnect.de)
[23:15:35] *** Joins: schumaml (~schumaml@dslb-188-104-163-001.188.104.pools.vodafone-ip.de)
[23:15:40] <teut> that's again abstract SnoopJ
[23:15:55] <SnoopJ> teut, abstract or not, it isn't really about Python
[23:16:08] <teut> correct
[23:16:33] *** Joins: browncode512 (~steven@108-228-9-197.lightspeed.sntcca.sbcglobal.net)
[23:16:48] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[23:16:55] *** Quits: mug3n_ (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[23:17:21] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-207-88.dynamic.dial.as9105.com) (Remote host closed the connection)
[23:17:21] <browncode512> What are you guys working on?
[23:17:23] *** Joins: mug3n_ (~mugen@gateway/tor-sasl/mugen)
[23:17:43] *** Joins: nemexis (~nemexis@193-62-201-31.ftth.glasoperator.nl)
[23:18:06] <nedbat> explaining open source in the hopes of changing corporate policies...
[23:18:12] <matsaman> got myself a yawn, so I guess the answer is: more bean juice
[23:18:17] <matsaman> nedbat: =)
[23:18:19] <dba> it is taking more than 30 minutes to load 22GB json to a list with `with open('file.json', 'r') as f: [json.loads(v) for v in f]`, is it normal?
[23:18:39] <nedbat> dba: it's a jsonl file?
[23:18:50] <dba> nedbat: yep
[23:18:54] <SnoopJ> nedbat, are those policies of the new overlords, or long-standing ones you're trying to change? (just curious)
[23:19:03] <nedbat> i've already said too much
[23:19:04] <nedbat> :)
[23:19:10] <SnoopJ> fair enough :)
[23:19:18] <matsaman> vigilance
[23:19:25] *** Joins: jazzy (~jaziz@user/jaziz)
[23:19:45] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:8be:80a5:9f91:16e)
[23:19:45] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:8be:80a5:9f91:16e) (Changing host)
[23:19:45] *** Joins: skapata (~Skapata@user/skapata)
[23:19:48] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:20:04] *** Quits: dude-x (~textual@72.76.74.165) (Read error: Connection reset by peer)
[23:20:40] *** Joins: dude-x (~textual@72.76.74.165)
[23:20:40] *** Joins: Auron (~Auron956@user/auron)
[23:21:19] *** Joins: ibs (ibs@xow.se)
[23:23:01] *** Quits: whaley (~whaley@cpe-76-182-165-20.sc.res.rr.com) (Quit: It won't give up.  It wants me dead.  Goddamn this noise inside my head.)
[23:23:22] <SnoopJ> dba, reading one line at a time there might not be the best way to do it
[23:24:02] *** Joins: tomeaton1755 (~tomeaton1@2a0c:5bc0:40:2e2f:d479:a134:f8:764c)
[23:24:21] *** Joins: whaley (~whaley@cpe-76-182-165-20.sc.res.rr.com)
[23:24:29] *** Joins: \mSg (mSg@user/msg/x-0285936)
[23:24:34] <dba> SnoopJ: is there of any other way to read the entire jsonl file all at once?
[23:25:14] *** Quits: tomeaton17 (~tomeaton1@2a0c:5bc0:40:2e2f:8988:5c8a:4221:6c88) (Ping timeout: 250 seconds)
[23:25:14] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[23:25:40] *** Quits: aclark (~aclark@pool-108-51-184-139.washdc.fios.verizon.net) (Ping timeout: 250 seconds)
[23:26:09] <SnoopJ> dba, if you have enough RAM you could perhaps try: `[json.loads(v) for v in f.readlines()]` which will read the entire file in one go and split it into a list of lines.
[23:26:19] *** Joins: cuhela (~cuhela@188.119.45.227)
[23:26:36] <SnoopJ> I don't have enough experience with jsonlines to know if that will be an appreciable speedup (or even faster at all) though
[23:27:08] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:27:20] <nedbat> dba: do you need to have the whole thing in one giant list?
[23:28:24] *** Quits: browncode512 (~steven@108-228-9-197.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 272 seconds)
[23:28:24] *** Quits: GinFuyou (~GinFuyou@2a04:52c0:101:a4e::) (Remote host closed the connection)
[23:28:45] <dba> SnoopJ: I will try it out and see how fast it is
[23:28:48] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:29:16] <SnoopJ> dba, you could try it with a subset of your data, perhaps, and see what kind of throughput it gets (22 GB in 30 minutes is ~12 MB/s of throughput, so that's the number to beat)
[23:29:25] <SnoopJ> dba, nedbat's question is a very good one, though.
[23:29:40] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 272 seconds)
[23:30:08] <dba> Nedbat: Yes, but I just realized after the reading completed that with a large list in my case 9M records getting an element with an index is taking a long time
[23:30:52] *** Quits: tomeaton1755 (~tomeaton1@2a0c:5bc0:40:2e2f:d479:a134:f8:764c) (Ping timeout: 250 seconds)
[23:32:33] <dba> nedbat: what is your suggestion, how to approach it?
[23:33:15] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[23:34:00] *** Joins: jpn (~jpn@user/jpn)
[23:35:04] *** Joins: Jacques89 (~Jacques@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[23:35:27] *** Joins: pulseaudio (~pulseaudi@103.42.174.55)
[23:37:04] *** Joins: lork (~lork@2601:603:1301:3630::9bfd)
[23:38:01] <lork> I was here easlier the permission isue still exist. I did install the module python -m pip install git+https://github.com/boppreh/keyboard@master
[23:38:28] *** Joins: vicfred (~vicfred@user/vicfred)
[23:38:51] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[23:39:28] <matsaman> lork: what's the problem? What's the error?
[23:39:48] <lork> in pycharm when running my code
[23:39:53] <lork> raise ImportError('You must be root to use this library on linux.')
[23:39:53] <lork> ImportError: You must be root to use this library on linux.
[23:42:04] <matsaman> sorry, what's the problem?
[23:43:03] *** Joins: brentaarnold (~brentaarn@24.112.47.164)
[23:43:11] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Remote host closed the connection)
[23:43:29] <notevil> lork: under Known limitations, it lists that it requires root to access the /dev/input/input*
[23:45:51] <lork> yes
[23:46:19] <lork> keyboard module needs access to keyboard input
[23:46:41] <nedbat> dba: i don''t know waht you need to do with all the records in this file, so it's hard to advise
[23:46:59] *** Quits: bahamas (~lucian@84.232.140.158) (Ping timeout: 246 seconds)
[23:47:14] *** Joins: reedrichards (~f@2607:f598:bbda:220:c689:2d0c:f743:404a)
[23:47:20] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:a33:3557:c64a:713b) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[23:47:26] *** Quits: f__ (~f@2607:f598:bbda:220:51f9:c50f:2d86:718c) (Remote host closed the connection)
[23:47:33] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[23:47:39] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[23:47:47] *** Quits: zer0bitz (~zer0bitz@2001:2003:f750:a200:c06:c5f:5435:411f) (Ping timeout: 250 seconds)
[23:48:31] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[23:48:32] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:49:10] <SnoopJ> needing root for that seems possibly a little heavy-handed?
[23:49:20] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[23:49:26] *** Quits: Daemoen (~Daemoen@2604:a880:2:d0::2164:d001) (Quit: WeeChat 3.2)
[23:49:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[23:49:45] <The-Compiler> SnoopJ, lork: looks like it was changed in https://github.com/boppreh/keyboard/commit/7f03a3d567b484ae6c2beebe2fe537be7643f7a9 which is part of the master branch
[23:49:54] <SnoopJ> ah, excellent
[23:49:59] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:50:01] <The-Compiler> lork: it sounds like you're not running that updated copy you installed for some reason
[23:50:20] <SnoopJ> the known limitations section still says root, but that's probably just an oversight
[23:50:31] *** Quits: cuhela (~cuhela@188.119.45.227) (Ping timeout: 260 seconds)
[23:50:59] *** Joins: zer0bitz (~zer0bitz@2001:2003:f750:a200:f81b:729b:7ef0:993)
[23:51:19] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[23:52:08] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[23:52:09] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[23:52:28] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[23:53:01] *** Joins: brabrax (~brabrax@user/brabrax)
[23:53:09] *** Joins: califax (~califax@user/califx)
[23:53:38] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[23:53:39] *** Joins: wyclif (~wyclif@user/wyclif)
[23:54:23] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[23:54:28] *** Quits: blddk (~blddk@user/blddk) (Quit: The Lounge - https://thelounge.chat)
[23:54:43] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[23:54:46] *** Joins: vlm (~vlm@user/vlm)
[23:55:15] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[23:55:27] <anddam> while identifying a platform should I use sys.platform.startswith() or can I go straight with  ==  and  !=  ?
[23:55:35] <SnoopJ> https://github.com/boppreh/keyboard/pull/538
[23:56:24] <The-Compiler> SnoopJ: btw, if you don't put commit IDs into backticks, they are even clickable :)
[23:56:32] <SnoopJ> The-Compiler, I know, it's just a habit :)
[23:56:33] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:57:01] *** Joins: blddk (~blddk@user/blddk)
[23:57:08] <SnoopJ> oh, right, they're *not* clickable if you use them. I forget that, despite the habit!
[23:57:14] <The-Compiler> anddam: see the docs: https://docs.python.org/3/library/sys.html#sys.platform
[23:57:30] <SnoopJ> anddam, you should use ==/!= with values enumerated by that^ doc
[23:57:48] *** Quits: Researcher (ceo@2a04:dd00:14:11::6667:6668) (Ping timeout: 240 seconds)
[23:58:04] <The-Compiler> SnoopJ: that's not what those docs say though (at least for Unix systems which are not Linux/AIX)
[23:58:06] *** Quits: vlm (~vlm@user/vlm) (Read error: Connection reset by peer)
[23:58:53] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 260 seconds)
[23:58:56] <SnoopJ> hm, point taken
[23:59:11] *** Joins: wyclif (~wyclif@user/wyclif)
[23:59:39] *** Joins: sokan (~sokan@2a02:587:9e1f:c900:227:eff:fe16:865d)
[23:59:47] <SnoopJ> I guess I am very used to not worrying about those
[23:59:57] <The-Compiler> fair, neither am I
