[00:01:03] *** Joins: cusco (~tralala@neptune.tretas.eu)
[00:01:05] <cusco> hello
[00:01:25] *** Joins: mimmy (~mimmy@146.70.75.190)
[00:01:38] <cusco> what is the propper way to remove an entrie from a one_to_many field?
[00:01:55] <cusco> like.. instance.field.all() gets me a list of 3
[00:03:30] <GinFuyou> field() being reverse relation? Does clear() work?
[00:03:41] <cusco> but clear removes all 3
[00:03:52] <cusco> .add() works
[00:04:11] <GinFuyou> oh, I thought you meant "entire"
[00:04:19] <cusco> entry, sorry
[00:04:58] <cusco> probably need to get that item and use .delete() on it, right?
[00:06:16] <GinFuyou> or issues .filter().delete()
[00:06:31] <GinFuyou> not sure if remove() works like on m2m
[00:12:44] <FunkyBob> either delete()  or set the fkey to null [if it's nullable]
[00:13:13] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[00:13:18] <FunkyBob> a record is a member of that set by virtue of having that records pk in its fk field
[00:13:40] <cusco> right
[00:13:50] <cusco> thank you
[00:23:30] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 268 seconds)
[00:24:41] *** Joins: dkliban_ (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net)
[00:27:14] *** Quits: dkliban__ (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net) (Ping timeout: 260 seconds)
[00:30:13] *** Joins: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net)
[00:40:52] *** Joins: tga (~tga@user/tga)
[00:51:30] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 260 seconds)
[01:03:43] *** Joins: Harlin (~DonQixote@75-163-138-123.clsp.qwest.net)
[01:14:11] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[01:15:54] *** Joins: fikran (~fikran@user/fikran)
[01:30:51] *** Joins: criswell (~quassel@136.62.184.132)
[01:38:20] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[01:38:39] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[01:42:33] *** Quits: ferz (~ferz@93-39-141-241.ip76.fastwebnet.it) (Ping timeout: 256 seconds)
[01:45:48] *** Joins: ednhmn (~ednhmn@200.173.186.161)
[01:46:28] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[01:49:55] *** Quits: mimmy (~mimmy@146.70.75.190) (Ping timeout: 256 seconds)
[01:50:18] *** Joins: djapo (~archangel@user/djapo)
[01:51:04] *** Quits: dor (~erg@78.11.12.207) (Remote host closed the connection)
[01:51:59] *** Quits: ednhmn (~ednhmn@200.173.186.161) (Ping timeout: 264 seconds)
[01:56:19] *** Joins: ferz (~ferz@93-39-141-241.ip76.fastwebnet.it)
[02:01:45] *** Joins: mimmy (~mimmy@146.70.75.189)
[02:13:45] *** Joins: truk_87 (~truk_87@193.56.117.160)
[02:18:04] *** Joins: ednhmn (~ednhmn@200.173.186.161)
[02:21:28] *** Quits: rje (~rje@65.141.156.170) (Quit: My computer has gone to sleep. ZZZzzz…)
[02:22:10] <truk_87> hi all, would someone be able to give me a bit of guidance on the best way to perform the following please:  I have 2 x DateField's in a model .. 1 is for test_date and one is for expiry_date.  the expiry_date is meant to be test_date + 365 .. what is the best way to go about adding this expiry_date to each db object in this model
[02:22:46] <truk_87> and when creating new records
[02:23:24] *** Quits: truk_87 (~truk_87@193.56.117.160) (Quit: Leaving)
[02:23:56] *** Joins: BinarySavior (~BinarySav@idlerpg/player/BinarySavior)
[02:24:21] *** Joins: truk_87 (~truk_87@193.56.117.160)
[02:24:33] <truk_87> oops, hit the wrong button
[02:27:09] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:29:06] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:29:06] *** ChanServ sets mode: +v EvilDMP
[02:32:14] *** Joins: nicode (~nic@2607:f2c0:94d3:a300:b6a2:b673:d91f:e7db)
[02:33:26] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 265 seconds)
[02:33:38] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 268 seconds)
[02:35:11] <truk_87> hi all, would someone be able to give me a bit of guidance on the best way to perform the following please:  I have 2 x DateField's in a model .. 1 is for test_date and one is for expiry_date.  the expiry_date is meant to be test_date + 365 .. what is the best way to go about adding this expiry_date to each db object in this model, when creating new records
[02:36:34] *** Quits: ednhmn (~ednhmn@200.173.186.161) (Ping timeout: 260 seconds)
[02:37:31] *** Quits: mimmy (~mimmy@146.70.75.189) (Ping timeout: 256 seconds)
[02:38:49] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[02:39:08] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[02:41:02] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:41:03] *** ChanServ sets mode: +v EvilDMP
[02:41:55] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[02:45:57] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 268 seconds)
[02:52:33] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[02:52:33] *** ChanServ sets mode: +v EvilDMP
[02:55:19] *** Joins: ednhmn (~ednhmn@200.173.186.161)
[03:18:41] <GinFuyou> truk_87, depends on how you create instances
[03:18:47] <brsc2909> @truk_87 you can use a pre_save reciever
[03:19:07] <GinFuyou> but I don't recommend using signal
[03:20:23] <truk_87> thanks guys.  i found a method using a save method on the model that seems to work
[03:20:37] *** Joins: rje (~rje@50.35.241.164)
[03:23:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[03:24:11] *** Quits: ednhmn (~ednhmn@200.173.186.161) (Ping timeout: 268 seconds)
[03:24:32] <brsc2909> GinFoyou, Whats the issue with using a signal ?
[03:25:14] *** Joins: fikran (~fikran@user/fikran)
[03:26:20] <GinFuyou> https://lincolnloop.com/blog/django-anti-patterns-signals/
[03:31:04] <brsc2909> GinFuyou: Thanks, that's given me something to think about
[03:32:09] <GinFuyou> Title might be radical, but summary at the end looks very reasonable to me
[03:45:23] *** Quits: Rikem (~mike@user/rikem) (Ping timeout: 264 seconds)
[03:45:51] *** Joins: dre (~dre@2001:8003:c932:c301:a745:514b:948f:a168)
[03:49:37] *** Joins: ednhmn (~ednhmn@200.173.186.161)
[03:50:36] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:51:11] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[03:59:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[04:04:00] *** Quits: truk_87 (~truk_87@193.56.117.160) (Quit: Leaving)
[04:13:35] *** Joins: fikran (~fikran@user/fikran)
[04:20:11] *** Quits: ednhmn (~ednhmn@200.173.186.161) (Ping timeout: 264 seconds)
[04:24:23] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 264 seconds)
[04:33:09] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:36:59] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 264 seconds)
[04:40:38] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:20:08] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 268 seconds)
[05:24:52] *** Joins: audiobirb (~audio@user/audio)
[05:28:45] *** Joins: cybernomad (~cybernoma@165.16.112.236)
[05:41:40] *** Quits: ferz (~ferz@93-39-141-241.ip76.fastwebnet.it) (Read error: Connection reset by peer)
[05:43:26] *** Joins: ferz (~ferz@93-39-141-241.ip76.fastwebnet.it)
[05:52:42] *** Joins: explore (uid233125@hampstead.irccloud.com)
[05:59:18] *** Quits: cybernomad (~cybernoma@165.16.112.236) (Quit: Leaving)
[06:11:49] *** Joins: ednhmn (~ednhmn@200.173.186.161)
[06:21:10] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[06:22:57] *** Joins: fikran (~fikran@user/fikran)
[06:32:21] *** Quits: brsc2909 (~Thunderbi@109.255.244.60) (Remote host closed the connection)
[06:43:59] *** Quits: ednhmn (~ednhmn@200.173.186.161) (Ping timeout: 268 seconds)
[07:09:24] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[07:12:14] *** Quits: kostkon (~kostkon@2a02:587:a108:5f73:9d4e:600e:327b:ee4a) (Remote host closed the connection)
[07:12:14] *** Joins: kostkon_ (~kostkon@2a02:587:a108:5f73:9d4e:600e:327b:ee4a)
[07:15:54] *** Joins: kostkon__ (~kostkon@2a02:587:a108:5f73:9d4e:600e:327b:ee4a)
[07:15:55] *** Joins: ednhmn (~ednhmn@200.173.186.161)
[07:16:32] *** Quits: kostkon_ (~kostkon@2a02:587:a108:5f73:9d4e:600e:327b:ee4a) (Remote host closed the connection)
[07:26:39] *** Joins: rje_ (~rje@50.35.241.164)
[07:27:52] *** Quits: ednhmn (~ednhmn@200.173.186.161) (Remote host closed the connection)
[07:28:07] *** Joins: ednhmn (~ednhmn@200.173.186.161)
[07:29:37] *** Quits: rje (~rje@50.35.241.164) (Ping timeout: 268 seconds)
[07:38:20] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[07:38:56] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[07:57:41] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 257 seconds)
[07:58:58] *** Quits: ednhmn (~ednhmn@200.173.186.161) (Remote host closed the connection)
[07:59:43] *** Joins: ednhmn (~ednhmn@200.173.186.161)
[08:07:53] *** Quits: kostkon__ (~kostkon@2a02:587:a108:5f73:9d4e:600e:327b:ee4a) (Remote host closed the connection)
[08:08:11] *** Joins: kostkon__ (~kostkon@2a02:587:a108:5f73:9d4e:600e:327b:ee4a)
[08:17:53] *** Quits: kostkon__ (~kostkon@2a02:587:a108:5f73:9d4e:600e:327b:ee4a) (Remote host closed the connection)
[08:18:12] *** Joins: kostkon__ (~kostkon@2a02:587:a108:5f73:9d4e:600e:327b:ee4a)
[08:27:18] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[08:29:45] *** Quits: kostkon__ (~kostkon@2a02:587:a108:5f73:9d4e:600e:327b:ee4a) (Remote host closed the connection)
[08:29:59] *** Joins: kostkon__ (~kostkon@2a02:587:a108:5f73:9d4e:600e:327b:ee4a)
[08:30:33] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[08:30:49] *** Quits: ednhmn (~ednhmn@200.173.186.161) (Remote host closed the connection)
[08:32:18] *** Joins: fikran (~fikran@user/fikran)
[08:37:35] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 264 seconds)
[09:35:33] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[09:43:48] *** Joins: dor (~erg@78.11.12.207)
[10:02:42] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[10:04:46] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[10:10:54] *** Joins: mimmy (~mimmy@146.70.75.149)
[10:21:36] *** Quits: kostkon__ (~kostkon@2a02:587:a108:5f73:9d4e:600e:327b:ee4a) (Remote host closed the connection)
[10:21:43] *** Joins: kostkon_ (~kostkon@2a02:587:a108:5f73:9d4e:600e:327b:ee4a)
[10:22:40] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:31:21] *** Joins: ednhmn (~ednhmn@200.173.186.161)
[10:35:47] *** Quits: ednhmn (~ednhmn@200.173.186.161) (Ping timeout: 256 seconds)
[10:40:10] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[10:41:39] *** Joins: fikran (~fikran@user/fikran)
[10:47:58] *** Quits: jug (~jug@user/jug) (Quit: WeeChat 3.3)
[10:51:28] *** Joins: jug (~jug@user/jug)
[10:51:53] *** Quits: mimmy (~mimmy@146.70.75.149) (Ping timeout: 268 seconds)
[11:05:27] *** Joins: Rikem (~mike@user/rikem)
[11:17:18] *** Joins: mimmy (~mimmy@146.70.75.149)
[11:23:35] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[11:28:16] *** Quits: mimmy (~mimmy@146.70.75.149) (Ping timeout: 268 seconds)
[11:30:57] *** Quits: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net) (Quit: Leaving)
[11:40:23] *** Joins: mimmy (~mimmy@146.70.75.149)
[11:45:22] *** Quits: mimmy (~mimmy@146.70.75.149) (Ping timeout: 260 seconds)
[12:18:20] *** Joins: mimmy (~mimmy@146.70.75.149)
[12:19:06] *** Joins: ciurca (~Thunderbi@86.125.186.232)
[12:23:46] *** Quits: mimmy (~mimmy@146.70.75.149) (Ping timeout: 268 seconds)
[12:48:59] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[12:51:00] *** Joins: fikran (~fikran@user/fikran)
[12:52:44] *** Joins: Thanatos (~Thanatos@105.112.150.204)
[12:58:33] *** Joins: bartzy (uid163429@hampstead.irccloud.com)
[13:01:02] *** Joins: mimmy (~mimmy@146.70.75.149)
[13:07:05] *** Quits: mimmy (~mimmy@146.70.75.149) (Ping timeout: 256 seconds)
[13:36:04] *** Joins: yanchai (~yanchai@115.147.17.121)
[13:37:03] <yanchai> hi everyone!
[13:37:11] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:37:11] *** ChanServ sets mode: +v EvilDMP
[13:37:40] <yanchai> FunkyBob: is there a way to aunthenticate users wherein 3 usertypes will be authenticate based on the foreinkey column?
[13:37:41] *** Quits: IceMichael (~IceMichae@h2878436.stratoserver.net) (Quit: bye)
[13:37:49] <yanchai> FunkyBob: something like this https://prnt.sc/206qpwi
[13:38:20] *** Joins: IceMichael (~IceMichae@h2878436.stratoserver.net)
[13:38:24] <yanchai> FunkyBob: where users will use to login using their SN and password while teachers will use EN and password to login?
[13:40:19] *** Joins: ThanatosJ (~Thanatos@102.89.0.58)
[13:40:24] <yanchai> FunkyBob: while email will only be used to retreive their forgotten password?
[13:41:48] *** Quits: Thanatos (~Thanatos@105.112.150.204) (Read error: Connection reset by peer)
[13:44:29] *** Quits: ferz (~ferz@93-39-141-241.ip76.fastwebnet.it) (Ping timeout: 256 seconds)
[13:46:11] *** Quits: ciurca (~Thunderbi@86.125.186.232) (Ping timeout: 256 seconds)
[13:48:44] *** Quits: IceMichael (~IceMichae@h2878436.stratoserver.net) (Quit: bye)
[13:49:36] *** Joins: IceMichael (~IceMichae@h2878436.stratoserver.net)
[14:01:02] *** Joins: ferz (~ferz@93-39-141-241.ip76.fastwebnet.it)
[14:08:51] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:17:31] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:17:31] *** ChanServ sets mode: +v EvilDMP
[14:34:22] *** Joins: ciurca (~Thunderbi@86.125.186.232)
[14:41:03] *** Joins: mimmy (~mimmy@146.70.75.148)
[14:45:58] *** Quits: mimmy (~mimmy@146.70.75.148) (Ping timeout: 260 seconds)
[14:51:04] <yanchai> GinFuyou: mate
[14:51:08] <yanchai> GinFuyou: any idea?
[14:53:30] *** Joins: slav0nic (slav0nic@python.su)
[14:57:45] <LordKalma> So, django-rest-framework says "By default, searches will use case-insensitive partial matches"
[14:58:03] <LordKalma> but when I try ...&info_holder__abrv=ARBA it shows up all where it's ARBA (full)
[14:58:09] <LordKalma> but &info_holder__abrv=AR returns nothing...
[14:58:19] <LordKalma> interesting
[14:58:23] <LordKalma> any pointers?
[14:58:43] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[14:59:31] *** Quits: ciurca (~Thunderbi@86.125.186.232) (Quit: ciurca)
[14:59:43] <LordKalma> nevermind, I'm using the django-filter stuff, not django's built-in
[15:00:21] *** Joins: fikran (~fikran@user/fikran)
[15:03:53] <LordKalma> and I was mistaking filtering with searching :D
[15:12:15] <yanchai> brb
[15:12:18] *** Parts: yanchai (~yanchai@115.147.17.121) ()
[15:21:53] <FunkyBob> LordKalma: django-rest-framework isn't built-in stuff either
[15:22:25] *** Quits: urth (~urth@geertswei.nl) (Ping timeout: 265 seconds)
[15:24:31] *** Joins: urth (~urth@geertswei.nl)
[15:41:16] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:48:12] *** Joins: mimmy (~mimmy@146.70.75.148)
[15:52:19] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[15:54:03] *** Quits: mimmy (~mimmy@146.70.75.148) (Ping timeout: 268 seconds)
[15:56:41] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:56:41] *** ChanServ sets mode: +v EvilDMP
[15:56:44] *** Joins: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net)
[16:05:32] *** Quits: bartzy (uid163429@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[16:17:08] *** Joins: Elodin (~weechat@user/elodin)
[16:17:57] <LordKalma> FunkyBob, I meant DRF's built-in :) which I also was wrong about
[16:17:58] <LordKalma> nevermidn all
[16:30:46] *** Joins: ednhmn (~ednhmn@200.173.186.161)
[16:30:50] *** Quits: ednhmn (~ednhmn@200.173.186.161) (Remote host closed the connection)
[16:34:40] *** Joins: linda (~linda@183.69.239.93)
[16:35:14] <LordKalma> okay, real question
[16:35:28] <LordKalma> django-filter says to look up expressions here: https://docs.djangoproject.com/en/3.2/ref/models/lookups/#lookup-reference
[16:35:39] <LordKalma> but... where exactly are the possible options?
[16:35:49] <LordKalma> django-filter has an example 'last_login': ['exact', 'year__gt'],
[16:35:56] <LordKalma> the elements of the list are said expressions
[16:35:59] <LordKalma> but where is the reference to them?
[16:36:42] *** Quits: linda (~linda@183.69.239.93) (Quit: Leaving)
[16:38:00] <LordKalma> ah this: https://docs.djangoproject.com/en/3.2/topics/db/queries/#field-lookups
[16:38:28] *** Joins: linda (~linda@183.69.239.93)
[16:47:27] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:48:18] <linda> @LordKalma Can you be more specific?
[16:48:34] <LordKalma> sure
[16:48:35] <LordKalma> https://django-filter.readthedocs.io/en/latest/ref/filterset.html#declaring-filterable-fields
[16:48:41] <LordKalma> I'm debating with this in particular
[16:48:55] <LordKalma> "The list syntax will create an exact lookup filter for each field included in fields. The dictionary syntax will create a filter for each lookup expression declared for its corresponding model field. These expressions may include both transforms and lookups, as detailed in the lookup reference."
[16:49:02] *** Joins: bitdex_ (~bitdex@gateway/tor-sasl/bitdex)
[16:49:21] <LordKalma> I would like to learn how to write said lookup filter
[16:49:36] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[16:50:44] <LordKalma> Then I went to
[16:50:45] <LordKalma> https://docs.djangoproject.com/en/3.2/ref/models/lookups/#lookup-reference
[16:50:54] <LordKalma>  To learn how to use lookups, see Making queries;
[16:50:57] <LordKalma> so we go there
[16:51:58] <LordKalma> https://docs.djangoproject.com/en/3.2/topics/db/queries/#field-lookups
[16:52:04] <LordKalma> ; a complete reference can be found in the field lookup reference.
[16:52:14] <LordKalma> https://docs.djangoproject.com/en/3.2/ref/models/querysets/#field-lookups
[16:52:16] <LordKalma> finally :D
[16:52:17] <LordKalma> thanks
[16:52:27] <LordKalma> this was too many clicks to reach the field lookups
[16:52:34] <LordKalma> you were my rubber duck, sorry
[17:02:51] *** Joins: bastiaan (bastiaan@sh.welmers.net)
[17:04:32] <bastiaan> hello! I've a question concerning foreign key relations created by Django ORM on SQLite.
[17:04:48] <bastiaan> It looks like they are created with 'NO ACTION' in sqlite, yet they are marked with models.RESTRICTED in the code.
[17:05:18] <bastiaan> is this known behaviour? or something strange that should not happen?
[17:07:46] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[17:09:42] *** Joins: fikran (~fikran@user/fikran)
[17:23:58] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[17:26:04] *** Joins: mimmy (~mimmy@146.70.75.149)
[17:30:59] *** Quits: mimmy (~mimmy@146.70.75.149) (Ping timeout: 264 seconds)
[17:32:47] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 264 seconds)
[17:55:23] *** Joins: yanchai (~yanchai@203.177.194.130)
[18:03:53] *** Joins: ednhmn (~ednhmn@200.173.186.161)
[18:04:54] <yanchai> hi anyone can help me pls?
[18:05:59] *** Joins: mimmy (~mimmy@146.70.75.150)
[18:12:23] <GinFuyou> yanchai, I thought you already come with that problems days ago and got a positive answer... what is the actual problem?
[18:14:22] *** Joins: Thanattt (~Thanatos@105.112.150.204)
[18:14:43] <yanchai> GinFuyou: i could'nt find any tutorial for this issue i am currently facing
[18:17:09] *** Joins: ciurca (~Thunderbi@86.125.186.232)
[18:17:57] *** Quits: ednhmn (~ednhmn@200.173.186.161) (Remote host closed the connection)
[18:18:11] *** Quits: mimmy (~mimmy@146.70.75.150) (Ping timeout: 256 seconds)
[18:18:11] *** Quits: ThanatosJ (~Thanatos@102.89.0.58) (Ping timeout: 256 seconds)
[18:18:15] *** Joins: ednhmn (~ednhmn@200.173.186.161)
[18:18:19] <yanchai> wait i need to reboot brb in a min
[18:18:24] *** Parts: yanchai (~yanchai@203.177.194.130) ()
[18:22:24] *** Joins: mimmy (~mimmy@146.70.75.148)
[18:22:27] *** Quits: Thanattt (~Thanatos@105.112.150.204) (Quit: Leaving)
[18:23:48] *** Joins: yanchai (~yanchai@203.177.194.130)
[18:24:03] <GinFuyou> well, have to explore auth system. I don't remember a good starting point out og my head
[18:24:36] <GinFuyou> Looking it docs you probably want custom auth backends, and probably just having a few of them on will already do the trick
[18:24:54] <LordKalma> using django-filters in django-rest-framework do you know if I can make a filter that's not bound to a particular field. Like, I would like to make a filter that would have a complex expression relating to multiple fields
[18:26:39] <yanchai> GinFuyou:https://prnt.sc/207u43g
[18:27:10] *** Quits: mimmy (~mimmy@146.70.75.148) (Ping timeout: 260 seconds)
[18:27:51] <yanchai> GinFuyou: it's something like this only that students uses SNcode & password to login. same with teachers ENCode & password to login.
[18:28:06] <yanchai> GinFuyou: while email are only used for password recovery.
[18:29:32] *** Joins: xkuru (~xkuru@user/xkuru)
[18:30:40] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[18:42:06] *** Joins: xkuru (~xkuru@user/xkuru)
[18:45:43] <GinFuyou> yanchai, ok, so?
[18:46:07] <yanchai> GinFuyou: don't know where to start mate :(
[18:46:23] *** Joins: mimmy (~mimmy@146.70.75.150)
[18:46:26] <yanchai> GinFuyou: do have a sample for this sir?
[18:46:35] <GinFuyou> <GinFuyou> Looking it docs you probably want custom auth backends, and probably just having a few of them on will already do the trick
[18:47:01] <GinFuyou> https://docs.djangoproject.com/en/3.2/topics/auth/customizing/#writing-an-authentication-backend
[18:52:36] <yanchai> GinFuyou: in the docs example says def authenticate(self, request, username="None, password=None): i want something like authenticate(self, request, sncode=None, password=None): but sncode is in a separate table not sure if this is correct?
[18:58:15] <GinFuyou> it doesn't matter, let it accept what arguments you need (or **kwargs) and check against anything
[19:01:42] <yanchai> GinFuyou: would you mind giving me ane example mate? i am newbie sorry
[19:02:06] <yanchai> GinFuyou: just an example on how to authenticate using 2 separate tables
[19:05:30] <GinFuyou> same as you'd normally get an object by a relation. e.g. user = User.objects.get(email=email, account__sn = sn)
[19:06:19] <yanchai> GinFuyou: oh thanks mate i forgot about that. thanks
[19:06:24] <GinFuyou> if values are encrypted, you are obviously have to encrypt filter value first too, but nothing fundamentally different
[19:06:49] <yanchai> GinFuyou: great! thanks a lot mate!
[19:07:13] <GinFuyou> could use filter().first() since it won
[19:07:25] <GinFuyou> won't break if no user exists iirc
[19:09:15] <yanchai> GinFuyou: noted mate! thanks a lot. i really appreciate it.
[19:15:56] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:16:31] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[19:17:34] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[19:17:39] *** Joins: righthand (~righthand@240e:3b9:30b3:dea0:15b0:985c:d7e9:5dc)
[19:18:11] *** Quits: righthand (~righthand@240e:3b9:30b3:dea0:15b0:985c:d7e9:5dc) (Client Quit)
[19:19:04] *** Joins: fikran (~fikran@user/fikran)
[19:21:08] *** Joins: righthand (~user@113.89.92.184)
[19:25:08] *** Quits: righthand (~user@113.89.92.184) (Read error: Connection reset by peer)
[19:25:23] *** Joins: righthand (~user@113.89.92.184)
[19:26:33] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[19:31:23] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[19:31:36] *** Parts: yanchai (~yanchai@203.177.194.130) ()
[19:32:32] *** Quits: mimmy (~mimmy@146.70.75.150) (Ping timeout: 240 seconds)
[19:32:47] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 264 seconds)
[19:33:16] *** vinleod is now known as vdamewood
[19:34:43] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:3961:f854:3883:a1b9)
[19:34:47] *** Quits: ciurca (~Thunderbi@86.125.186.232) (Quit: ciurca)
[19:41:55] *** Joins: luigibu (~luigibu@80.30.201.209)
[19:42:02] *** Quits: righthand (~user@113.89.92.184) (Ping timeout: 240 seconds)
[19:46:41] *** Quits: linda (~linda@183.69.239.93) (Remote host closed the connection)
[19:47:47] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:3961:f854:3883:a1b9) (Ping timeout: 268 seconds)
[19:49:13] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:80ec:4373:ceb7:3da9)
[19:50:46] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[19:50:46] *** ChanServ sets mode: +v EvilDMP
[19:59:58] *** Joins: jmd (~user@de.cellform.com)
[20:02:45] *** Quits: ednhmn (~ednhmn@200.173.186.161) (Ping timeout: 265 seconds)
[20:02:51] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:06:19] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[20:06:24] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[20:06:25] *** ChanServ sets mode: +v EvilDMP
[20:11:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[20:13:24] *** Joins: fikran (~fikran@user/fikran)
[20:14:28] *** Quits: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net) (Quit: Konversation terminated!)
[20:23:59] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[20:25:33] *** Joins: brsc2909 (~Thunderbi@109.255.244.60)
[20:25:45] <GinFuyou> wow, -330 queries in one line fix
[20:35:30] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[20:37:19] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[20:37:21] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[20:48:55] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:80ec:4373:ceb7:3da9) (Ping timeout: 250 seconds)
[20:56:27] *** Joins: jmd (~user@de.cellform.com)
[20:57:15] *** Joins: gitly (~gitly@148.252.128.134)
[20:59:11] *** Joins: mimmy (~mimmy@cpef81d0f857c83-cmf81d0f857c80.cpe.net.cable.rogers.com)
[21:26:43] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[21:33:55] <jmd> What is a good way to run a method on startup?
[21:34:11] <jmd> (version 2.2.24?)
[21:40:52] *** Quits: luigibu (~luigibu@80.30.201.209) (Ping timeout: 265 seconds)
[21:43:53] *** Quits: ferz (~ferz@93-39-141-241.ip76.fastwebnet.it) (Ping timeout: 256 seconds)
[21:45:02] *** Quits: tga (~tga@user/tga) (Ping timeout: 260 seconds)
[21:53:06] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[21:53:46] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[22:00:23] *** Joins: ferz (~ferz@93-39-141-241.ip76.fastwebnet.it)
[22:15:47] *** Quits: mimmy (~mimmy@cpef81d0f857c83-cmf81d0f857c80.cpe.net.cable.rogers.com) (Ping timeout: 268 seconds)
[22:16:09] <SpecialK> jmd: what're you trying to achieve?
[22:18:06] <jmd> SpecialK: I want to initialise varible on startup of the application.  Either a global, or maybe there is a way to pass it as an argument to other callbacks?
[22:18:58] <SpecialK> jmd: you may be looking for AppConfig.ready https://docs.djangoproject.com/en/3.2/ref/applications/#django.apps.AppConfig.ready
[22:19:07] <SpecialK> but it's hard to tell without more context
[22:19:35] <jmd> will appconfig also apply to my version?
[22:19:41] <SpecialK> jmd: maybe
[22:19:54] <SpecialK> Oh you did say 2.2 sorry
[22:19:55] <SpecialK> https://docs.djangoproject.com/en/2.2/ref/applications/#django.apps.AppConfig.ready
[22:20:14] <jmd> okay, thanks.
[22:21:20] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[22:21:25] *** Quits: explore (uid233125@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[22:22:45] *** Joins: fikran (~fikran@user/fikran)
[22:24:24] *** Joins: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net)
[22:26:17] *** Joins: pycode (~pycode@2001:b07:5d28:551:5f15:11ea:ec70:df1d)
[22:39:45] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:2048:33e6:3182:81c2)
[22:39:56] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[22:40:50] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[22:44:32] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:2048:33e6:3182:81c2) (Ping timeout: 240 seconds)
[22:45:05] *** Quits: defb (~defb@user/defb) (Read error: Connection reset by peer)
[22:56:10] *** Quits: dor (~erg@78.11.12.207) (Read error: Connection reset by peer)
[22:56:15] <jmd> I'm a bit confused why that AppConfig.ready method is getting called twice in my app !
[22:56:21] *** Joins: dor (~erg@78.11.12.207)
[22:58:59] <SpecialK> jmd: did you see the "Note" section?
[23:03:52] *** Quits: jmd (~user@de.cellform.com) (Ping timeout: 268 seconds)
[23:05:43] *** Quits: dor (~erg@78.11.12.207) (Read error: Connection reset by peer)
[23:06:06] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[23:09:41] *** Joins: righthand (~user@113.89.88.116)
[23:12:53] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:2048:33e6:3182:81c2)
[23:17:59] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:2048:33e6:3182:81c2) (Ping timeout: 250 seconds)
[23:19:27] *** Joins: jmd (~user@de.cellform.com)
[23:22:04] *** Joins: luigibu (~luigibu@80.30.201.209)
[23:22:39] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[23:22:52] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:24:36] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[23:27:32] *** Quits: luigibu (~luigibu@80.30.201.209) (Ping timeout: 240 seconds)
[23:38:53] *** Joins: jmd (~user@de.cellform.com)
[23:40:10] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[23:42:56] *** Quits: doc (~doc@user/doc) (Quit: Things to do)
[23:43:42] *** Joins: jmd (~user@de.cellform.com)
[23:44:57] *** Quits: syberspace (~syberspac@xiaoxiao.anvor.at) (Quit: Lost terminal)
[23:47:41] *** Joins: explore (uid233125@hampstead.irccloud.com)
[23:49:57] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:2048:33e6:3182:81c2)
[23:54:45] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:2048:33e6:3182:81c2) (Ping timeout: 265 seconds)
[23:55:32] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[23:59:06] *** Parts: righthand (~user@113.89.88.116) (ERC (IRC client for Emacs 27.2))
