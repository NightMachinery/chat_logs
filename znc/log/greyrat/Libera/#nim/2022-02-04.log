[00:07:12] *** Quits: jkl (~jkl@user/jkl) (Quit: Gone.)
[00:08:34] *** Joins: jkl (~jkl@user/jkl)
[00:11:35] *** Quits: jkl (~jkl@user/jkl) (Client Quit)
[00:13:01] *** Joins: jkl (~jkl@user/jkl)
[00:14:37] <FromDiscord> <ynfle> How do I get the number of elements in an enum?
[00:16:00] <FromDiscord> <Vindaar> for example: https://nim-lang.github.io/Nim/typetraits.html#enumLen.m%2Ctypedesc%5B%5D
[00:16:35] <FromDiscord> <ynfle> Ya just found that
[00:16:36] <FromDiscord> <ynfle> Thanks
[00:23:00] *** Joins: rockcavera (~rc@192.12.112.99)
[00:23:00] *** Quits: rockcavera (~rc@192.12.112.99) (Changing host)
[00:23:00] *** Joins: rockcavera (~rc@user/rockcavera)
[00:30:11] <FromDiscord> <Phil> We don't have a pragma or sth to suppress unused import warnings, do we?
[00:30:28] <FromDiscord> <Phil> (edit) "warnings," => "warnings from the compiler,"
[00:32:38] *** Joins: Guest86 (~Guest86@152.3.43.44)
[00:32:52] *** Quits: Guest86 (~Guest86@152.3.43.44) (Client Quit)
[00:36:53] <FromDiscord> <haxscramper> `--warning=UnusedImport:off`
[00:39:18] <FromDiscord> <ynfle> Or `{.used.}` I think
[00:42:52] <FromDiscord> <haxscramper> no, you can only add `{.all.}` to the imports
[00:43:12] <FromDiscord> <haxscramper> and this would defeat the whole purpose as you still need to edit the annoying imports
[00:54:44] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[00:55:51] *** Joins: xet7 (~xet7@user/xet7)
[01:05:57] <FromDiscord> <Phil> Thank! Slightly saddening there's no way to disable that warning for individual imports, but oh well
[01:07:03] <FromDiscord> <ynfle> In reply to @Isofruit "Thank! Slightly saddening there's": I wonder if you can use `push` & `pop` pragmas
[01:08:31] <FromDiscord> <Phil> In reply to @ynfle "I wonder if you": Haven't seen those yet, so no idea
[01:32:59] <FromDiscord> <Phil> sent a code paste, see https://play.nim-lang.org/#ix=3Ozw
[01:33:15] <FromDiscord> <Phil> (edit) "https://play.nim-lang.org/#ix=3Ozw" => "https://play.nim-lang.org/#ix=3Ozx"
[01:51:08] *** Joins: systemdsucks (~systemdsu@user/systemdsucks)
[01:59:55] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:12:21] <rockcavera> os.createDir not working even at compile time?
[02:13:18] <rockcavera> on windows I have used this hack: discard staticExec("cmd /C mkdir DIR"
[02:17:21] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17)
[02:17:39] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17) (Client Quit)
[02:38:12] <FromDiscord> <Elegantbeef> `mkDir`
[02:41:47] <FromDiscord> <ajusa> @Phil have you seen https://github.com/geekrelief/genit
[02:43:02] <FromDiscord> <Phil> In reply to @ajusa "<@!180601887916163073> have you seen": I have not! Let's see if that can help somehow
[02:43:48] <FromDiscord> <Phil> As a sidenote, I've externalized that entire signal crap so far into its own repository which, at its core if you code in how exactly `TableModelKind` and `TableModelVaraint` look like ahead of time, are shockingly little code
[02:44:25] <FromDiscord> <Phil> https://github.com/PhilippMDoerner/norm-signals/blob/master/src/tableModel.nim - For the table model↵https://github.com/PhilippMDoerner/norm-signals/blob/master/src/normSignals.nim - For the actual signal mechanism
[02:45:29] <FromDiscord> <Phil> Nowhere near finished in whatever form, it doesn't even compile atm due to a bug in parseEnum that xflywind fixed already, but it's a starting point from which to expand and finally has the core idea
[02:46:06] <FromDiscord> <Phil> Just need to figure out how to get all the stuff in tableModel generated for me at compile time ideally
[02:47:13] <FromDiscord> <ajusa> In reply to @Isofruit "Just need to figure": yup, I think genit would be able to help with that, though I haven't used it myself yet. It's a really cool macro/DSL for code manipulation that makes it so you don't need to learn Nim macros if you don't want to.
[02:48:19] <FromDiscord> <Phil> The only possible issue I see with this is, that similar to Django, I'd like my models to be in various files across the application
[02:48:37] <FromDiscord> <Phil> Though I guess an `include` could fix that one
[02:48:46] <FromDiscord> <Phil> (edit) "one" => "one, though that would still not be ideal"
[03:34:00] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:35:37] <NimEventer> New thread by Womble: Flutter and Nim, see https://forum.nim-lang.org/t/8865
[03:44:18] <nrds> <07gurul/freenode99> <rasengan> Consequences are real. Treat things you care about with respect.  Appreciate it.  Help it.  Cultivate it.  And don't try to destroy it - because if you wish for its destruction, you're going to get it.
[03:44:22] <nrds> <07gurul/freenode99> <rasengan> Classic Freenode had a special part in my heart and everyone else's.  It's the saddest and hardest thing I've done, in a long time - but I
[03:44:25] <nrds> <07gurul/freenode99> <rasengan> am giving the directive to shut it down.
[03:44:27] <nrds> <07gurul/freenode99> <rasengan> Goodbye freenode classic.
[03:44:30] <nrds> <07gurul/freenode99> <rasengan> This is your queue to go to libera and oftc if you dont like waht we're doing.
[03:44:33] <nrds> <07gurul/freenode99> <rasengan> Do it. If you don't like what we're doing - go do it better.
[03:44:35] <nrds> <07gurul/freenode99> <rasengan> They need help.
[04:03:02] <rockcavera> Elegantbeef, mkDir it's nimscript
[04:04:08] <FromDiscord> <Elegantbeef> Guess there is no wrapping for the interpreter for `mkDir`
[04:04:08] <FromDiscord> <Elegantbeef> Or `createDir`
[04:05:43] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[04:06:42] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[04:08:00] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[04:31:37] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[04:46:21] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[04:46:24] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:52:41] <FromDiscord> <Ayy Lmao> How do you get a function to be called when a ref is destroyed? `=destroy` seems to only be for objects.
[04:56:25] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[05:01:37] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[05:03:32] *** Joins: audiophile_ (~audiophil@user/audiophile)
[05:06:57] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:07:01] <FromDiscord> <geekrelief> In reply to @ajusa "yup, I *think* genit": @Phil genit will almost do what you want, but there's an issue with how types are ↵ transformed.
[05:09:46] <FromDiscord> <geekrelief> In reply to @Ayy Lmao "How do you get": try this? https://discord.com/channels/371759389889003530/371759389889003532/937079923691122749
[05:13:46] <FromDiscord> <Ayy Lmao> In reply to @geekrelief "try this? https://discord.com/channels/371759389889": Cool, thanks!
[05:20:36] <FromDiscord> <ajusa> In reply to @geekrelief "<@!394315290592411648> genit will almost": cool, thanks for clarifying. Is there any reason genit is devel only? can it be made to work on 1.6, or is that buggy?
[05:21:14] <FromDiscord> <geekrelief> In reply to @ajusa "cool, thanks for clarifying.": genit probably works on 1.6.  I'm just working off devel, so when I created the nimble package I didn't bother changing it. 🙂
[05:22:21] <FromDiscord> <geekrelief> You can try it with 1.6, and I'll change the requirement if it works.
[05:22:40] <FromDiscord> <geekrelief> I'm working on Phil's test case with iterating on types.
[05:24:07] <FromDiscord> <geekrelief> sent a code paste, see https://play.nim-lang.org/#ix=3OA9
[05:24:30] <FromDiscord> <geekrelief> (edit) "https://play.nim-lang.org/#ix=3OA9" => "https://play.nim-lang.org/#ix=3OAa"
[05:25:03] <FromDiscord> <geekrelief> I have two issues to fix before that works.
[05:43:02] *** Joins: TakinOver (~quassel@96.44.191.138)
[05:46:21] *** Quits: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de) (Remote host closed the connection)
[05:46:37] <FromDiscord> <ajusa> In reply to @geekrelief "You can try it": I can confirm that the tests work on 1.6.2!
[05:48:01] <FromDiscord> <geekrelief> cool thx!  Next time I push I'll have it updated.
[06:00:55] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[06:18:18] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:26:14] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[06:32:50] <FromDiscord> <creikey> what's the difference between a tuple and an object?
[06:33:48] <FromDiscord> <creikey> it seems like objects are only needed for inheritane
[06:33:51] <FromDiscord> <creikey> (edit) "inheritane" => "inheritance"
[06:34:59] <FromDiscord> <Rika> tuples dont have access control for fields
[06:35:13] <FromDiscord> <Rika> not sure about this but afaik they also dont have case fields
[06:35:15] <FromDiscord> <creikey> In reply to @Rika "tuples dont have access": so  on a tuple type will expose all its fields?
[06:35:18] <FromDiscord> <Rika> yes
[06:35:21] <FromDiscord> <creikey> interesting
[06:35:26] <FromDiscord> <Rika> and you cannot do anything about it
[06:35:27] <FromDiscord> <Rika> also
[06:35:37] <FromDiscord> <Rika> if the tuple definitions of two types are the same
[06:35:42] <FromDiscord> <Rika> they are treated as not distinct
[06:35:43] <FromDiscord> <Rika> afaik
[06:35:54] <FromDiscord> <Rika> and distinct tuples afaik dont work well
[06:36:05] <FromDiscord> <creikey> sent a code paste, see https://play.nim-lang.org/#ix=3OAp
[06:36:10] <FromDiscord> <creikey> how can you get something of MyObject and interact with it if the type ins't exposed
[06:36:13] <FromDiscord> <creikey> (edit) "ins't" => "isn't"
[06:36:21] <FromDiscord> <Rika> exported proc returning
[06:36:26] <FromDiscord> <Rika> exported global
[06:36:31] <FromDiscord> <creikey> makes sense makes sense
[06:36:33] <FromDiscord> <creikey> you just can't make new of it
[06:36:41] <FromDiscord> <Rika> technically you can as well
[06:37:04] <FromDiscord> <Rika> let a = exportedProc()↵let b = (typeof a)()
[06:37:07] <FromDiscord> <Rika> probably would work
[06:37:35] <FromDiscord> <creikey> I can't imagine how complicated this compiler is that looks so messy to parse
[06:37:38] <FromDiscord> <creikey> (edit) "I can't imagine how complicated this compiler is that looks so messy to parse ... " 03added "and reason about"
[06:37:43] <FromDiscord> <Rika> its not messy
[06:37:46] <FromDiscord> <Rika> its just confusing
[06:45:38] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[06:48:43] <FromDiscord> <Elegantbeef> To add tuple type definitions are just aliases
[06:50:54] <FromDiscord> <Elegantbeef> Which part looks messy to parse?↵(@creikey)
[06:58:10] <FromDiscord> <noow> In reply to @creikey "it seems like objects": afaik most people prefer objects in most cases
[06:58:29] <FromDiscord> <noow> don't really know why
[06:58:36] <FromDiscord> <Elegantbeef> Indeed most cases objects are better
[06:58:42] <FromDiscord> <Elegantbeef> Well cause they're distinct
[06:59:03] <FromDiscord> <Elegantbeef> Tuples are just type aliases so you do not get type safety
[06:59:56] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3OAu
[07:02:34] <FromDiscord> <Elegantbeef> When you have types that come from anywhere you dont have any assurances
[07:03:31] <FromDiscord> <huantian> So what you’re saying is we should have distinct tuples :P
[07:05:47] <FromDiscord> <huantian> I usually mostly just used tuples when returning multiple values from a func
[07:06:25] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 256 seconds)
[07:11:10] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[07:14:35] <FromDiscord> <Elegantbeef> If only there was a easy thing that replicates distinct tuples.... hmmm↵(@huantian)
[07:14:47] <FromDiscord> <Elegantbeef> Too bad no one made it, we could call it like a `record` or `struct`
[07:15:48] <FromDiscord> <huantian> That would be interesting
[07:16:56] <FromDiscord> <Elegantbeef> Maybe we call them `awbject`
[07:17:57] <FromDiscord> <Elegantbeef> If it's unclear to anyone reading, objects people objects!
[07:19:08] <FromDiscord> <Elegantbeef> Yea this is where it's fine, i often see people using tuples like objects↵(@huantian)
[07:19:37] <FromDiscord> <Elegantbeef> You can always mke unpack procedures that convert the object to tuple
[07:24:24] <FromDiscord> <Rika> i also mentioned that there are issues with distinct tuples
[07:24:33] <FromDiscord> <Rika> like... not being able to access fields by field name
[07:24:33] <FromDiscord> <Elegantbeef> I mean they dont make sense
[07:24:47] <FromDiscord> <Rika> so you have to borrow `.`
[07:25:01] <FromDiscord> <Rika> and at that fuckin point just use an object damn it
[07:25:03] <FromDiscord> <Elegantbeef> Not really an issue it's by design of how it works
[07:25:26] <FromDiscord> <Rika> i mean sure it is but its "not an issue" when you distinct an object
[07:25:32] <FromDiscord> <Rika> you can still access its fields
[07:25:38] <FromDiscord> <Elegantbeef> No you cannot
[07:26:18] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3OAx
[07:26:41] <FromDiscord> <Elegantbeef> Oh wait even borrowing dot fails 😀
[07:27:10] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3OAy
[07:31:13] <FromDiscord> <huantian> The distinct is too powerful for your puny period
[07:31:29] <FromDiscord> <Elegantbeef> I mean you just need to borrow the dot exprs
[07:49:30] *** Quits: audiophile_ (~audiophil@user/audiophile) (Quit: Default Quit Message)
[07:50:23] <FromDiscord> <Rika> maybe i forgot then
[08:10:39] <FromDiscord> <creikey> In reply to @Elegantbeef "Which part looks messy": getting typeof of an external compilation unit when you try to multithread the compilation seems nontrivial
[08:10:46] <FromDiscord> <creikey> but I don't have much practical experience writing compilers so that's probably wrong
[08:11:25] <FromDiscord> <Elegantbeef> Well it's not multithreaded
[08:12:01] <FromDiscord> <Elegantbeef> `typeof` is a relatively simple operation which reasons the body and returns the type it is
[08:12:38] <FromDiscord> <Elegantbeef> It's mostly a type operation that doesnt require anything overly fancy
[08:14:37] <FromDiscord> <Elegantbeef> You can easily analyse an expression for it's type when you have a type system, since that most of what it's doing anyway 😛
[08:14:42] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[08:20:46] <FromDiscord> <creikey> cool
[08:21:25] <FromDiscord> <creikey> In reply to @Elegantbeef "Well it's not multithreaded": I looked at the nimsuggest docs yesterday to see if this is true but they seem a little under filled out, is it possible to get some kind of parse tree of the nim program for some advanced editor manipulation stuff?
[08:21:50] <FromDiscord> <creikey> stuff like keyboard shortcuts to copy and paste the currently selected scope
[08:21:54] <FromDiscord> <Elegantbeef> I dont speak french
[08:22:05] <FromDiscord> <creikey> I think vim has that stuff but just looks for the {}
[08:23:04] <FromDiscord> <Elegantbeef> I dont know if it's possible
[08:25:10] <FromDiscord> <Elegantbeef> It might be possible to capture the scope of where your cursor is and get the AST but i dont know about the before the AST
[08:26:46] <FromDiscord> <Elegantbeef> Might be helpful to ask this in the internals chat, would probably get a more insightful answer↵(@creikey)
[09:16:46] <FromDiscord> <evoalg> I think you're telling me to use objects because they are safer than tuples, because objects are distinct and therefore they lead to less errors ... I'm just struggling to drive this home. For a tuple I can do `doThing (10, 20)` or even `doThing (a:10, b:20)` ... for an object I figured out I can do `doThing(MyObject(a: 1, b: 2))` ... but it's not clear to me where the safety is?
[09:17:50] <FromDiscord> <Elegantbeef> The safety is that you cannot have a `(int, int)` from module A be used in module B
[09:18:51] <FromDiscord> <Elegantbeef> Not all objects that have only two int fields are considered the same type, all tuples with only two ints are
[09:20:34] <FromDiscord> <evoalg> ok so I think you're saying it's all about the beauty of distinct
[09:22:11] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3OB4
[09:22:34] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3OB5
[09:23:48] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/f7u
[09:25:03] <FromDiscord> <Elegantbeef> With the latter example the way to send data to `doThing` you cannot provide bad values
[09:25:19] <FromDiscord> <Elegantbeef> This is a constructed example but eitherway, shows the point
[09:26:10] <FromDiscord> <evoalg> thank you ... lemme digest all this
[09:27:06] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3OB7
[09:28:45] <FromDiscord> <Elegantbeef> Unrelated but it's just in north america where "Consider the following" evokes memories of Bill Nye right? 😀
[09:34:28] <FromDiscord> <evoalg> hehe it didn't evoke that in me, but only a kiwi
[09:38:52] <FromDiscord> <evoalg> we didn't have Bill Nye, but we did have Cosmos (the original one with Sagan)
[09:39:21] <FromDiscord> <geekrelief> sent a code paste, see https://play.nim-lang.org/#ix=3OBa
[09:40:37] <FromDiscord> <geekrelief> (edit) "https://play.nim-lang.org/#ix=3OBa" => "https://play.nim-lang.org/#ix=3OBb"
[09:44:56] <FromDiscord> <Elegantbeef> [evoalg](https://matrix.to/#/@evoalg:matrix.org)\: i will say that it's atleast my view in a statically typed language to use types as much as possible to ensure program safety, some people vastly disagree
[09:45:55] <FromDiscord> <evoalg> gotcha ... I guess I'm still so used to python that anything else seems restrictive
[09:46:31] <FromDiscord> <evoalg> but I can see how I can (and do) get myself into trouble with python when it's over X number of lines
[09:46:53] <FromDiscord> <Elegantbeef> That's kinda the benefit of static though, you make the code as safe as possible 😀
[09:48:36] <FromDiscord> <Elegantbeef> Subrange types are one of my favourite things to talk about in this regard, in most languages if you want to say "X cannot be outside of this range" you document it and manually check it. In Nim you just do `var a: 0..10`
[09:49:18] <FromDiscord> <evoalg> and that doesn't even change the type right?
[09:49:27] <FromDiscord> <Elegantbeef> Well it's a checked range but it's an int
[09:49:46] <FromDiscord> <evoalg> yea that's what I meant \:) ... very nice and easy
[09:51:01] <FromDiscord> <Elegantbeef> I should shush before i start a rant about tuples 😀
[09:51:37] <FromDiscord> <evoalg> you already talked about tuples though?
[09:51:57] <FromDiscord> <Elegantbeef> Sure but i was starting to write a message ranting about them
[09:52:16] <FromDiscord> <evoalg> please rant away
[09:54:12] <FromDiscord> <Elegantbeef> I generally only see tuples useful as anonymous return groups, for quick grouped types for collections, and unpacking. As soon as you start adding field names i feel like you should just use an object. Then use a macro or user written procedures to unpack
[09:55:47] <FromDiscord> <evoalg> I've heard rantier rants ;-)
[09:57:05] <FromDiscord> <Elegantbeef> Oh yay it's succinct rant or a succy rant
[09:57:18] <FromDiscord> <evoalg> I can't find the right nim offtopic channel in matrix ... what do I do to find it?
[09:57:29] <FromDiscord> <Elegantbeef> #offtopic
[09:58:43] <FromDiscord> <evoalg> Sorry, when I go to Rooms \> Explore public rooms, it says nothing is found
[09:58:59] <FromDiscord> <Elegantbeef> Are you on matrix?
[09:59:03] <FromDiscord> <Elegantbeef> I mean element
[09:59:06] <FromDiscord> <Elegantbeef> Gosh i'm daft
[09:59:08] <FromDiscord> <evoalg> yes
[09:59:27] <FromDiscord> <Elegantbeef> Did you join the nim space?
[10:00:38] <FromDiscord> <evoalg> I didn't join the nim space ... found offtopic but just searching for #nim-offtopic\:envs.net and when it said nothing was found I clicked join and it worked
[10:12:14] <FromDiscord> <Rika> As soon as you use the tuple for more than, like, one proc then maybe change it for a type
[10:13:03] <FromDiscord> <Elegantbeef> Exactly
[10:13:27] <FromDiscord> <Elegantbeef> I feel a lot of people use tuples as objects and that's just not their point
[10:14:12] <FromDiscord> <Elegantbeef> Though could be the use of `object` making people think it's an OOP thing
[10:23:43] <FromDiscord> <speq> What's the point of tuples then? Not objecting, just trying to understand the perspective here
[10:24:19] <FromDiscord> <Elegantbeef> Easy pairs/unpacking
[10:24:55] <FromDiscord> <Elegantbeef> `proc doThing(args): (T1, T2)` is a common usage of them
[10:25:21] <FromDiscord> <Elegantbeef> I say pairs but i mean any grouping of types
[10:25:47] <FromDiscord> <speq> OK, but how is this different from an object with no `proc`s defined specifically for it?
[10:26:02] <FromDiscord> <Elegantbeef> What do you mean?
[10:26:32] <FromDiscord> <Elegantbeef> An object with no procs is still a unique type
[10:26:35] <FromDiscord> <Elegantbeef> A tuple with no procs is not
[10:26:42] <FromDiscord> <speq> I mean, why/when would I switch to an object that encapsulates T1 and T2
[10:26:57] <FromDiscord> <speq> If I don't need a specific name for it
[10:27:22] <FromDiscord> <Elegantbeef> Imo if you're doing named fields like `tuple[field1: int, field2: float]`, just use an object
[10:28:05] <FromDiscord> <Elegantbeef> If someone gets your returned tuple and then uses it later they have 0 type safety assurances it can go anywhere that matches the tuple signature
[10:28:27] <FromDiscord> <Elegantbeef> I dont mind using anonymous tuples is mostly what i'm saying
[10:28:34] <FromDiscord> <evoalg> so tuples are great if you want anonymous fields?
[10:28:48] <FromDiscord> <Elegantbeef> When you're attempting to give names to tuple fields i really feel like you're using the wrong thing
[10:29:06] <FromDiscord> <speq> OK, so you are arguing for objects for their type safety, gotcha
[10:29:28] <FromDiscord> <speq> That's clear
[11:07:14] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17)
[11:09:51] *** Joins: PMunch (~PMunch@user/pmunch)
[11:23:55] <FromDiscord> <axtens> if I declare a proc as `proc foo(bar: string | seq[string]) : int =` how do I tell in the body of the proc whether I've got a string or a sequence of string?
[11:24:06] *** Joins: Guest16 (~Guest16@176.213.251.75)
[11:24:24] <FromDiscord> <enthus1ast> when bar is string\:
[11:24:57] <FromDiscord> <enthus1ast> when bar is seq[string]\:
[11:25:27] *** Quits: Guest16 (~Guest16@176.213.251.75) (Client Quit)
[11:26:20] <FromDiscord> <Elegantbeef> depending what you're doing you could also just use `varargs[string]`
[11:28:27] <FromDiscord> <axtens> wow. ok
[11:29:27] <FromDiscord> <enthus1ast> https://play.nim-lang.org/#ix=3OBv
[11:30:22] <FromDiscord> <enthus1ast> also\: when / elif / else
[11:30:30] <FromDiscord> <enthus1ast> the second when could be elif
[11:34:33] <FromDiscord> <axtens> that is a thorough answer
[11:35:34] <Amun-Ra> and, depending on what's in the function body, the 3rd option would be foo(s: string)…  foo(s: seq[string])…
[11:38:38] <FromDiscord> <Elegantbeef> Us Nim users for some reason give very detailed explanations with examples 😛
[11:39:03] <FromDiscord> <enthus1ast> guess we procrastinate work
[11:39:07] <FromDiscord> <enthus1ast> i do \:/
[11:40:28] <FromDiscord> <Elegantbeef> Ha me work!
[11:40:35] <FromDiscord> <enthus1ast> must do php if i don't ;\_;
[11:40:46] <Amun-Ra> ouch
[11:46:02] <FromDiscord> <--HA--> In that `proc foo(bar: string | seq[string]) : int =` example and then writing code to handle different types with `when` is there a way to make sure all cases are covered?↵So that I can later add another type in the function signature and my "when block" does not compile, something like that.
[11:47:12] <FromDiscord> <Elegantbeef> There is not without macros
[11:47:13] <FromDiscord> <enthus1ast> then i would use the overloading option
[11:47:22] <FromDiscord> <Elegantbeef> Overloading makes more sense indeed
[11:49:49] <FromDiscord> <--HA--> Overloading means I'd have `proc foo(bar: string): int` and `proc foo(bar: float): int` and so on? And maybe they call a private proc to share some code?
[11:50:03] <FromDiscord> <Elegantbeef> Yea
[11:50:18] <FromDiscord> <enthus1ast> yes, see my link to the tutorial above
[11:50:20] <FromDiscord> <Elegantbeef> Generalizing what's generalizable
[11:50:24] <FromDiscord> <Phil> In reply to @geekrelief "<@!102899813149855744> genit v0.13.0 supports": Thanks! I'll keep it in mind for the future!↵For now, I managed to get rid of the need for both the enum and the variant so I'll keep an eye out for other scenarios where this might be useful for generating a lot of similar stuff on the fly
[11:52:50] <Amun-Ra> how about proc foo(bar: varargs[typed, `$`])
[11:53:28] <FromDiscord> <--HA--> In reply to @enthus1ast "yes, see my link": Sorry I'm not finding the link
[11:53:46] <FromDiscord> <enthus1ast> this
[11:53:50] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3OBv
[11:53:53] <FromDiscord> <Elegantbeef> Oh whoops
[11:53:54] <FromDiscord> <Elegantbeef> 😀
[11:54:11] <FromDiscord> <Phil> In reply to @enthus1ast "must do php if": My condolences, may you rest in piece
[11:54:23] <FromDiscord> <Rika> In reply to @enthus1ast "this": Reply with unknown content
[11:54:51] <FromDiscord> <enthus1ast> https://nim-lang.github.io/Nim/tut1.html#procedures-overloaded-procedures
[11:55:13] <FromDiscord> <Elegantbeef> Oh didnt get through from matrix
[11:55:30] <FromDiscord> <Phil> And yeah if you want a proc to accept multiple types as arguments, unless the proc can't do the exact same code on each type, use overloading
[11:55:52] <FromDiscord> <enthus1ast> mh yeah, maybe i should switch to discord for nim, but then i get this "whatsapp, meta" feeling
[11:56:16] <FromDiscord> <Elegantbeef> Lol i swapped to matrix for it cause i'd rather use matrix than discord
[11:56:18] <FromDiscord> <Phil> What I like to do, though I'm not sure if that's sensible, is have a core proc with the functionality but maybe not a proc signature that is as simple as it could be, and have a lot of helper procs around it and then only export the helper procs.
[11:56:43] <FromDiscord> <Phil> (edit) "What I like to do, though I'm not sure if that's sensible, is have a core proc with the functionality but maybe not a proc signature that is as simple as it could be, and have a lot of helper procs ... around" 03added "as ovreloads"
[11:57:44] <FromDiscord> <enthus1ast> yeah the matrix idea is much better (and its foss) but the ux of discord is much better (insert 3 pages long matrix rant here)
[11:58:14] <FromDiscord> <enthus1ast> especially when you connect via federation, like i doo
[11:58:25] <FromDiscord> <Phil> federation?
[11:58:44] <FromDiscord> <enthus1ast> i have my own matrix server and it connects to other matrix servers
[11:59:06] <FromDiscord> <Elegantbeef> Matrix is a decentralised federated protocol, which means matrix servers communicate between eachother
[11:59:27] <FromDiscord> <Elegantbeef> So you can have your own server like enthus does but connect to other servers that allow you to join
[12:01:43] <FromDiscord> <Elegantbeef> image.png https://media.discordapp.net/attachments/371759389889003532/939075738085232680/image.png
[12:01:46] <FromDiscord> <Elegantbeef> Diagram of the layout
[12:02:00] <FromDiscord> <Rika> Why do people say Enthus but not ast smh
[12:02:05] <FromDiscord> <Rika> I’m joking
[12:02:18] <FromDiscord> <Elegantbeef> Cause no one likes AST
[12:03:35] <FromDiscord> <enthus1ast> [Elegantbeef](https://matrix.to/#/@elegantbeef:matrix.org)\:  eeehm you mean this one right?\:
[12:03:47] <FromDiscord> <enthus1ast> xkcd1810-matrixified-v2-1024x842.png https://media.discordapp.net/attachments/371759389889003532/939076260116697098/xkcd1810-matrixified-v2-1024x842.png
[12:04:06] <FromDiscord> <Elegantbeef> Sure
[12:07:53] <FromDiscord> <Phil> No bridge to Wall(Unix)?! Heresy!
[12:08:16] <FromDiscord> <Elegantbeef> Literally unusable
[12:08:41] <Amun-Ra> apache request log users, unite!
[12:08:48] <FromDiscord> <Phil> I'm legit fascinated there's an ICQ bridge
[12:08:51] <FromDiscord> <Phil> There's two of us !
[12:08:56] <FromDiscord> <Phil> (edit) "There's two of us ! ... " 03added "Amun-Ra!"
[12:08:59] <Amun-Ra> :>
[12:09:20] <FromDiscord> <xx_ns> In reply to @Amun-Ra "apache request log users,": nginx access log is the superior communication method
[12:09:29] <Amun-Ra> Phil: sorry to tell you but I'm more of nginx request log user nowadays… :/
[12:09:40] <Amun-Ra> xx_ns: ^ ;)
[12:09:52] <FromDiscord> <eyecon> How tf do people communicate via web server logs 😄
[12:10:19] <FromDiscord> <Elegantbeef> Very carefully
[12:10:35] <FromDiscord> <enthus1ast> i've done a small tool a few years ago, that could print ascii art into the server logs \: )
[12:10:41] <FromDiscord> <eyecon> Do I make a request HOWDY with the header `X-Intended-Recipient: Sandy`
[12:10:46] <FromDiscord> <enthus1ast> never got an answer though \:(
[12:11:00] <FromDiscord> <Phil> In reply to @Amun-Ra "<@180601887916163073>: sorry to tell": darth vader nooooooooo
[12:12:11] <FromDiscord> <Phil> About the IRC gateway accounts, why does Prestige's one do the <> thing and Amun-Ra's doesn't?
[12:12:56] <FromDiscord> <Phil> I think Prestige used "nrds[IRC]"
[12:13:07] <FromDiscord> <Elegantbeef> One connects from freenode the other libera
[12:13:24] <FromDiscord> <Elegantbeef> Prestige likes being wrong
[12:13:28] <FromDiscord> <xx_ns> hmmmm https://media.discordapp.net/attachments/371759389889003532/939078693463130152/IMG_1189.png
[12:13:31] <FromDiscord> <enthus1ast> oh its bridged to both?
[12:13:53] <nrds> <06Prestige99> This bridge is from irc-nerds
[12:14:37] <FromDiscord> <Elegantbeef> The other is libera right?
[12:15:16] <nrds> <06Prestige99> Yeah
[12:25:29] <PMunch> @eyecon, you normally don't log the request content. So I guess you'd set the referrer to your message :P
[12:33:18] *** Quits: cyraxjoe (~joe@189.158.2.104) (Quit: No Ping reply in 180 seconds.)
[12:34:33] *** Joins: cyraxjoe (~joe@2806:109f:13:c804::1ee3)
[12:35:14] <FromDiscord> <eyecon> In reply to @PMunch "<@191304757195833344>, you normally don't": Right, makes sense
[12:56:27] <FromDiscord> <xx_ns> yep, either referer or user agent
[12:56:42] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:57:00] <FromDiscord> <xx_ns> or literally just the path
[13:27:56] <FromDiscord> <Rika> Prestige genuine question why do you still use Freenode
[13:29:49] <nrds> <06Prestige99> I don't
[13:30:38] <FromDiscord> <Rika> I'm confused then
[13:30:46] <FromDiscord> <Rika> Which is freenode which is libera
[13:31:00] <PMunch> I'm on Libera
[13:31:02] <nrds> <06Prestige99> I'm on the irc nerds network, and I have it bridged to libera
[13:31:05] <PMunch> He's onIRC-nERDS
[13:31:09] <FromDiscord> <Rika> I see
[13:31:15] <FromDiscord> <Rika> What's the difference
[13:32:53] <nrds> <06Prestige99> Just different networks, different goals and different management
[13:33:50] <FromDiscord> <Rika> Okay
[13:38:26] <FromDiscord> <xx_ns> i thought freenode died?
[13:38:45] <nrds> <06Prestige99> Nope it's still up and running
[13:41:25] <FromDiscord> <xx_ns> _a_ server on that address is up and running
[13:41:33] <FromDiscord> <xx_ns> but it's not freenode is it
[13:41:37] <FromDiscord> <Elegantbeef> They had a odd message today
[13:41:45] <nrds> <06Prestige99> Yes it's still freenode
[13:41:48] <FromDiscord> <Elegantbeef> Or atleast some message was sent here that was odd
[13:42:09] <nrds> <06Prestige99> Yeah there are people still mad that freenode is alive, so they go around spamming crap
[13:42:58] <FromDiscord> <xx_ns> In reply to @nrds "<Prestige> Yes it's still": it doesn't have any of the old chan/nickserv registration, any of the staff, uses an entirely different server software / implementation, and most importantly none of the users (who have pretty much all moved to libera)
[13:43:00] <FromDiscord> <xx_ns> i'd say it's pretty dead
[13:43:40] <FromDiscord> <Rika> What, are we gonna start talking abiut Theseus' ship now
[13:43:45] <nrds> <06Prestige99> That's not what dead means, and not all the staff left
[13:43:52] <nrds> <06Prestige99> 🤷
[13:44:10] <nrds> <06Prestige99> I don't really care, don't know why people still mad about freenode being around
[13:44:13] <FromDiscord> <Elegantbeef> Whose ship? It's mine now
[13:44:31] <FromDiscord> <Phil> Why does anyone care whether freenode is up or not? It's a mystery
[13:44:47] <FromDiscord> <Phil> Trolls be trolls I guess
[13:45:06] <FromDiscord> <xx_ns> i really don't think anyone's mad at freenode "still" being around, more the fact that it was a hostile takeover of an entire community
[13:45:10] <FromDiscord> <Phil> In reply to @Elegantbeef "Whose ship? It's mine": Write a macro to gain ownership of it
[13:45:13] <FromDiscord> <xx_ns> the community has spoken and has left
[13:45:27] <FromDiscord> <Rika> I don't care either
[13:45:35] <FromDiscord> <Elegantbeef> Nah in Nim to get ownership we just `sink` it↵(@Phil)
[13:45:42] <nrds> <06Prestige99> It wasn't and they haven't.. but I'm done talking about this lol you're the only one that cares xx
[13:45:56] <FromDiscord> <xx_ns> okay?
[13:46:01] <FromDiscord> <Rika> If no one I care about uses it why should I care if it's still up or not; if it's not doing anything to me directly or indirectly what's there to give a fuck about
[13:46:03] <FromDiscord> <Rika> Anyway
[13:46:04] <FromDiscord> <Phil> In reply to @Elegantbeef "Nah in Nim to": And that's how you make sure there's no ship for anyone to  have anymore
[13:46:09] <FromDiscord> <xx_ns> not sure why you're getting so defensive over this i was just trying to have a conversation about freenode
[13:46:24] <FromDiscord> <Rika> In reply to @Isofruit "And that's how you": LMFAO
[13:46:28] <FromDiscord> <Elegantbeef> I'm not getting defensive the wall is!
[13:46:36] <FromDiscord> <Rika> Fucker sunk the ship I can't believe it
[13:46:51] <FromDiscord> <Elegantbeef> But we do have the nameplate that says "thesus'"
[13:47:00] <FromDiscord> <Rika> The sus
[13:47:00] <FromDiscord> <Elegantbeef> So how about thesus' train?
[13:47:05] <FromDiscord> <Rika> :AMOGUS:
[13:47:18] <FromDiscord> <Elegantbeef> !ban @Rika
[13:47:30] <FromDiscord> <Phil> In reply to @Elegantbeef "So how about thesus'": Why would theseus want to put on even more muscles?
[13:49:43] *** Quits: Zevv (~Zevvvvv@185.238.131.12) (Ping timeout: 250 seconds)
[13:50:04] <FromDiscord> <Phil> In reply to @Rika "<:AMOGUS:811451017521790978>": Ya know, germany has a pretty proud tradition of finding humour in the nonsensical. But even I never managed to really find the entire Among Us meme stuff funny
[13:50:19] <FromDiscord> <Rika> In reply to @Isofruit "Ya know, germany has": Thats because it isn't
[13:50:24] <FromDiscord> <Elegantbeef> You know what they say german humour is no laughing matter
[13:50:46] <FromDiscord> <Phil> God damn I hate how I have heard that joke dozens of times yet it still makes me snort a bit
[13:50:51] <FromDiscord> <Rika> How
[13:51:13] <FromDiscord> <Elegantbeef> It's a well written joke it cannot die
[14:02:50] <FromDiscord> <Rika> It’s barely a joke
[14:03:04] <FromDiscord> <Elegantbeef> The german humour joke?
[14:06:57] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17)
[14:07:17] <FromDiscord> <Phil> In reply to @Rika "How": I don't have an incredibly high bar for finding even dumb jokes funny. That's why it is somewhat impressive that the amongus stuff fits below even that
[14:20:37] <FromDiscord> <exelotl> What are you talking about, amogus is hilarious
[14:46:28] <FromDiscord> <Goel> `proc map[T, S](s: openArray[T]; op: proc (x: T): S {.closure.}): seq[S]`↵> Instead of using map and filter, consider using the collect macro from the sugar module↵Why this, for performance or just because its more handy?
[14:49:37] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[14:53:28] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:57:02] <FromDiscord> <Phil> macro smells like offloading computation to compile time
[14:57:15] <FromDiscord> <Phil> Though I don't get what you would offload to compile time there
[15:01:58] <FromDiscord> <Rika> It’s “nicer and more explicit to look at”
[15:02:07] <FromDiscord> <Rika> For non functional programmers
[15:02:08] <FromDiscord> <konsumlamm> `collect` is more general (it allows more than just map and filter) and it's more efficient (because it doesn't allocate intermediate `seq`s) when you do multiple operations
[15:13:43] <FromDiscord> <Goel> sent a long message, see http://ix.io/3OCl
[15:16:51] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17)
[15:20:58] <FromDiscord> <Rika> Template it and call it “asSlice” or toSlice
[15:21:14] <FromDiscord> <exelotl> you could do `myArr[0..^1]`
[15:25:40] <FromDiscord> <Phil> Is there a way, in logging, to include somehow from which file the logging call is coming from?
[15:26:02] <FromDiscord> <Phil> I'm starting at the format string options and I'm sort of missing anything related to "log the origin of the log call"
[15:26:15] <FromDiscord> <Phil> (edit) "starting" => "staring"
[15:26:31] <FromDiscord> <Phil> I'm using std/logging
[15:26:50] <FromDiscord> <Flo> I'm currently building a parser, and I having difficulty deciding how to handle the original input / buffer.↵When "taking" characters, do I modify the input buffer by always taking away the currently parsed items, or would It be ok to move just the index like a cursor, and always doing substring on the original?
[15:27:57] <FromDiscord> <Flo> So the main question would be, what is more performant, cutting a large string into parts until there's nothing left anymore.↵Or always doing lookups in the original string
[15:28:02] <FromDiscord> <Rika> In reply to @Isofruit "Is there a way,": Yes but I don’t remember the template name
[15:28:18] <FromDiscord> <dom96> In reply to @Flo "So the main question": the latter
[15:28:43] <FromDiscord> <Phil> In reply to @Rika "Yes but I don’t": So it's not achieved by manipulating the formatstring but by calling aspecific template?
[15:28:50] <FromDiscord> <Phil> (edit) "In reply to @Rika "Yes but I don’t": So it's not achieved by manipulating the formatstring ... but" 03added "of a given logger"
[15:29:01] <FromDiscord> <Rika> https://nim-lang.org/docs/system.html#currentSourcePath.t
[15:29:03] <FromDiscord> <dom96> @Flo example of how to do parsing from my book https://github.com/dom96/nim-in-action-code/blob/master/Chapter6/WikipediaStats/naive.nim
[15:29:49] <FromDiscord> <Phil> In reply to @Rika "https://nim-lang.org/docs/system.html#currentSource": Ohhh I can include that in the formatstr? Actually.. why wouldn't it... thanks for the find !
[15:35:49] <FromDiscord> <Flo> In reply to @dom96 "<@!274627218368626699> example of how": Cool, that helps me, thanks!
[15:58:42] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:16:20] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17)
[16:28:43] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:35:21] <FromDiscord> <Zajt> sent a code paste, see https://paste.rs/uI1
[16:35:41] <PMunch> `choosenim update stable`
[16:35:56] <PMunch> @Zajt ^
[16:38:52] <FromDiscord> <Zajt> thanks
[16:42:19] <FromDiscord> <Phil> In reply to @Rika "https://nim-lang.org/docs/system.html#currentSource": Hmmm I might not be doing this correctly. I can get a source path, but I can't add it to the default format of the logger. I'd have to add this manually to every time I call log. Hmmm
[16:42:39] <FromDiscord> <Phil> (edit) "Hmmm" => "Hmmm↵`addHandler(newConsoleLogger(fmtstr = fmt "$levelname : currentSourcePath(): "))`"
[16:42:48] <FromDiscord> <Phil> (edit) "currentSourcePath():" => "{currentSourcePath()}:"
[16:51:57] <FromDiscord> <JohnDoe> sip nimrods
[16:52:04] <FromDiscord> <JohnDoe> (edit) "sip" => "sup"
[16:53:25] <FromDiscord> <Rika> In reply to @Isofruit "Hmmm I might not": well thats because the template call has to be in the source file you want the name of
[16:56:40] <FromDiscord> <Phil> Dang. the fmtstr has these nice placeholders with $ that it replaces, just wish it also had one for filename
[16:59:47] <FromDiscord> <Rika> well you cant really get filename since the .log .info etc are procs
[17:00:18] <FromDiscord> <Goel> > This module implements a simple logger.↵> It has been designed to be as simple as possible to avoid bloat. If this library does not fulfill your needs, write your own.↵Well thanks i suppose! Not need to be so grumpy...
[17:12:42] <PMunch> @Goel, haha is that the official logger module?
[17:13:22] <FromDiscord> <Goel> Yes
[17:13:23] <PMunch> https://nim-lang.org/blog/2022/02/04/nim-devroom-fosdem-2022.html
[17:14:56] <FromDiscord> <Phil> In reply to @Goel "> This module implements": I think that's alright. Logging can range from mildly difficult to insanely complicated and I can't imagine it's the most exciting thing to implement, no matter how much anyone asks for it. I guess the entire lib has been implemented against Araqs will or sth. in order to provide something at least
[17:15:58] <NimEventer> New thread by PMunch: Nim devroom at FOSDEM this weekend, see https://forum.nim-lang.org/t/8866
[17:17:05] <PMunch> @Phil, I don't think it's implemented against his will. But as you say logging can get quite complex so I guess the decision was made to not go down that rabbit hole in the official module
[17:17:40] <PMunch> If you need more than the official logger module though I can recommend Chronicles by Status, that is some black-magic level stuff
[17:18:06] <FromDiscord> <Phil> In reply to @PMunch "<@180601887916163073>, I don't think": Fair, I think the wording might've been bad. More like "implemented to have something, not because one is excited about it"
[17:18:54] <FromDiscord> <Phil> (edit) "the" => "my"
[17:28:36] *** Joins: rockcavera (~rc@192.12.112.99)
[17:28:36] *** Quits: rockcavera (~rc@192.12.112.99) (Changing host)
[17:28:36] *** Joins: rockcavera (~rc@user/rockcavera)
[17:41:17] *** Quits: TakinOver (~quassel@96.44.191.138) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[17:42:09] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17)
[17:52:28] *** Joins: audiophile_ (~audiophil@user/audiophile)
[17:57:48] *** Joins: arkurious (~arkurious@user/arkurious)
[18:02:50] *** Joins: xaltsc (~xaltsc@user/xaltsc)
[18:03:46] <xaltsc> Hey, is there a cookbook for Nim somewhere ? I'm a few hours old newb and kind of lost with nim's idiosyncrasies and package/module system
[18:04:57] <FromDiscord> <Phil> The stuff under documentation on the official webpage isn't helping you any?
[18:08:41] <xaltsc> Phil: I went through it enough to grasp the essential stuff, but I'm stuck with concrete problems. For instance, I want to filter a TypeRef, but filterIt raises a type error since the arguments are untyped.
[18:08:55] <xaltsc> TableRef*
[18:09:23] <FromDiscord> <enthus1ast> can you show code?
[18:10:59] <FromDiscord> <enthus1ast> you can put it here if you like\: https://play.nim-lang.org/
[18:11:48] <xaltsc> https://paste.debian.net/1229583/
[18:13:26] <xaltsc> Also, I couldn't find the complexity of access for the different list/map-like types
[18:15:58] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:23:09] <FromDiscord> <enthus1ast> like this? https://play.nim-lang.org/#ix=3ODm
[18:25:40] <xaltsc> enthus1ast: It's a bit... verbose :D I wanted to precisely use filterIt and learn how to solve this kind of type issue, especially since the procedure doesn't seem to be generic and is not actually a procedure
[18:32:00] <FromDiscord> <demotomohiro> https://nim-lang.org/docs/sequtils.html#filterIt.t,untyped,untyped
[18:32:32] <FromDiscord> <demotomohiro> Document says "Returns a new sequence" but your code expecting it returns TableRef type.
[18:33:29] <FromDiscord> <enthus1ast> ok then this?\: https://play.nim-lang.org/#ix=3ODJ
[18:33:45] <FromDiscord> <enthus1ast> to make this a little bit more ergonomic you could define some helpers
[18:35:23] <FromDiscord> <enthus1ast> i think i've never used a ref tuple before \:)
[18:36:12] <NimEventer> New thread by Nycto: Exclude from generated docs, see https://forum.nim-lang.org/t/8867
[18:38:42] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: Leaving)
[18:44:01] <xaltsc> enthus1ast: Yeah, I did the same thing in the end (except it's more convenient to get a seq in fact). I would have though filterIt would preserve the container type.
[18:45:22] <xaltsc> Regarding my use of ref tuple, I'm not quite sure I master the difference between tuples and objects, but tuple seem more well behaved mathematically, and since I expect them to be large, I'd rather use pointers than hard copies.
[18:47:40] <FromDiscord> <enthus1ast> ok maybe something like this\:  https://play.nim-lang.org/#ix=3ODN
[18:47:45] <FromDiscord> <enthus1ast> could be improved i guess
[18:48:02] <FromDiscord> <enthus1ast> this is filter it from sequtils, patched for tables
[18:50:58] <xaltsc> But this copies the elements of the table, doesn't it ? (But probably, so does the library's filterIt)
[18:51:47] <FromDiscord> <enthus1ast> yes it creates a new table
[18:52:31] <FromDiscord> <enthus1ast> https://github.com/nim-lang/Nim/blob/35c812fda1ae7f1d183d3021793438fb2099c329/lib/pure/collections/sequtils.nim#L615
[19:04:43] *** Quits: audiophile_ (~audiophil@user/audiophile) (Ping timeout: 256 seconds)
[19:11:00] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17)
[19:17:20] <xaltsc> In the end, this is what I ended up with: https://play.nim-lang.org/#ix=3ODW However, I can't find how to create a new reference
[19:20:29] <xaltsc> My problem lies likely with the combined use of a let and a ref, as I can manage to do it with a var + new
[19:22:58] <xaltsc> Managed to do it https://play.nim-lang.org/#ix=3ODY. However, in this particular case, does it matter that AdjacencyMatrix is a ref ? Given that the possibly heavy field matrix is already a ref ?
[20:17:19] *** Joins: noeontheend (~noeonthee@12.205.205.130)
[20:19:17] <FromDiscord> <Ayy Lmao> Does anyone know what to do when getting `error:1408F10B:SSL routines:ssl3_get_record:wrong version number [SslError]` while using `httpclient`? I'm on Windows and installed the latest version of openssl and added it to my path but still get the error message.
[20:21:47] *** Quits: noeontheend (~noeonthee@12.205.205.130) (Ping timeout: 256 seconds)
[20:42:57] <FromDiscord> <lantos> is there an easy way to do math ops (+, -, /, %, ) on big numbers stored in arrays of bytes? not bigint lib
[20:50:37] <FromDiscord> <Waldecir Santos> Is it possible to get all keys in a Table ?
[20:50:54] <FromDiscord> <Waldecir Santos> like a seq[string] of keys
[20:54:13] <FromDiscord> <Waldecir Santos> Hmm there is the keys proc it wasn't showing before /shrug.
[20:56:27] <FromDiscord> <Waldecir Santos> But I'm getting this error `Error: undeclared field: 'keys' for type tables.Table [type declared in /opt/homebrew/Cellar/nim/1.6.2/nim/lib/pure/collections/tables.nim(206, 3)]`
[20:56:50] <FromDiscord> <lantos> @Waldecir Santos ↵https://play.nim-lang.org/#ix=3OEG
[20:57:47] <FromDiscord> <Waldecir Santos> @lantos why it fails if I try `echo a.keys()`  ?
[20:57:47] <FromDiscord> <lantos> https://nim-lang.org/docs/tables.html
[20:57:57] <FromDiscord> <Waldecir Santos> https://play.nim-lang.org/#ix=3OEI
[20:59:06] <FromDiscord> <auxym> In reply to @lantos "is there an easy": Sounds like a bigint lib? Why not use a bigint lib?
[20:59:07] <FromDiscord> <lantos> because the keys() returns a iterator which needs to be enumerated over. Using the toSeq() from the sequtils library turns it into a sequence kind of like rusts .collect()
[20:59:17] <FromDiscord> <lantos> In reply to @Waldecir Santos "https://play.nim-lang.org/#ix=3OEI": because the keys() returns a iterator which needs to be enumerated over. Using the toSeq() from the sequtils library turns it into a sequence kind of like rusts .collect()
[20:59:49] <FromDiscord> <Waldecir Santos> But why undeclared erro ? because there isn't a proc that returns string ?
[21:01:27] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:7136:8a20:fe1b:e17) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:01:34] <FromDiscord> <Waldecir Santos> Dismiss this 👆
[21:01:41] <FromDiscord> <Waldecir Santos> You guys are right.
[21:02:52] <FromDiscord> <demotomohiro> You cannot use method call syntax if 1st parameter is untyped
[21:04:16] <FromDiscord> <lantos> In reply to @auxym "Sounds like a bigint": want to use arrays instead of seq's because I want to avoid the copys (unless its a non issue)
[21:04:23] <FromDiscord> <lantos> (edit) 04removed "because I want"
[21:05:36] <FromDiscord> <Waldecir Santos> Another think that I always miss is that I need to import `std/sequtils` if I want to use `.toSeq` but I get used to it 😄
[21:06:09] <FromDiscord> <Waldecir Santos> (edit) "I" => "I'll" | "😄" => "😄e"
[21:06:18] <FromDiscord> <konsumlamm> In reply to @lantos "want to use arrays": avoid the copies? if anything, arrays do more copies
[21:06:58] <FromDiscord> <Waldecir Santos> I mean if I set the variable in 1 file/module and want to use that in another module and check keys/seq I need to import tables/sequtils
[21:07:05] <FromDiscord> <auxym> In reply to @lantos "want to use arrays": https://github.com/status-im/nim-stint "No heap/dynamic allocation"
[21:08:38] <FromDiscord> <auxym> megalo and bigint are seq-based, you could benchmark either and see which is faster between stack-based or seq-based
[21:13:39] <FromDiscord> <lantos> sent a code paste, see https://play.nim-lang.org/#ix=3OEP
[21:13:52] <FromDiscord> <lantos> In reply to @auxym "https://github.com/status-im/nim-stint "No heap/dyn": yeah this looks more like it will try this
[21:16:03] <FromDiscord> <auxym> do you really have to use ptrs? Nim tries to be smart when passing non-var arguments by using either a copy of ref, depending on which is faster. (refs avoid a copy but add an indirection step)
[21:18:21] <FromDiscord> <auxym> and var arguments are always passed by reference, if you want to modify in place.
[21:32:48] <FromDiscord> <Rainbow Asteroids> Does this code compile for anyone else? I'm getting a weird compiler error on stable and devel. It seems like GCC is reporting type errors. https://pastebin.com/FmwrEbv3
[21:34:38] <FromDiscord> <lantos> In reply to @auxym "and var arguments are": hmm, having some difficulty could you please show a small example?
[21:37:39] <FromDiscord> <Phil> This is likely a really dumb nimble gotcha
[21:38:08] <FromDiscord> <auxym> In reply to @Rainbow Asteroids "Does this code compile": it's failing in playground too. I have a vague recall of a compiler bug involving options and ref types. Did you try the 1.6.4 RC maybe?
[21:39:14] <FromDiscord> <auxym> maybe this? https://github.com/nim-lang/Nim/issues/16754
[21:40:02] <FromDiscord> <Phil> I, out of sheer frustration, changed permission of all files in a project to 777. Recursively! So every file in that dir↵So everyone and their mother should have access to read anything↵Yet when I run `nimble test` in that project, I get:↵> /home/isofruit/dev/norm/src/norm/postgres.nim(3, 11) Error: cannot open file: ndb/postgres
[21:40:16] <FromDiscord> <Phil> (edit) "dir↵So" => "dir has read write execute permission for everyone↵So"
[21:41:25] <NimEventer> New post on r/nim by pietroppeter: Nim devroom at Fosdem tomorrow (Feb 24) 12:30-17:40, see https://reddit.com/r/nim/comments/skk2nc/nim_devroom_at_fosdem_tomorrow_feb_24_12301740/
[21:42:28] *** Joins: PMunch (~PMunch@user/pmunch)
[21:42:46] <FromDiscord> <Phil> sent a long message, see http://ix.io/3OF5
[21:50:36] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:4003:8970:d961:ff06)
[21:51:52] <FromDiscord> <tandy> my nimble looks like this
[21:51:57] <FromDiscord> <tandy> `requires "https://gitlab.com/tandy1000/listenbrainz-nim#head"`
[21:51:58] <FromDiscord> <tandy> sent a code paste, see https://paste.rs/yQ8
[21:52:26] <FromDiscord> <demotomohiro> Do you have the file your Nim says cannot open?
[21:58:23] <FromDiscord> <tandy> no
[21:58:32] <FromDiscord> <tandy> i just deleted nimble folder
[22:01:28] <FromDiscord> <tandy> i dont understnad why its requesting specific versions.. `Error: unhandled exception: cannot open: /home/tandy/.nimble/pkgs/prologue-0.5.0/prologue.nim [IOError]`
[22:01:49] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:4003:8970:d961:ff06) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:02:26] <FromDiscord> <lantos> ls -lah /home/tandy/.nimble/pkgs/prologue-0.5.0/
[22:02:57] <FromDiscord> <lantos> (edit) "ls -lah /home/tandy/.nimble/pkgs/prologue-0.5.0/" => "sent a code paste, see https://play.nim-lang.org/#ix=3OFe"
[22:05:11] <FromDiscord> <tandy> no file
[22:07:14] <FromDiscord> <tandy> ive got this in nimble anyway `requires "prologue"`↵(@lantos)
[22:11:27] <FromDiscord> <auxym> In reply to @lantos "hmm, having some difficulty": https://play.nim-lang.org/#ix=3OFi
[22:11:51] <FromDiscord> <auxym> you could check the generated C and see that it uses pointers under the hood
[22:12:09] <FromDiscord> <tandy> just needed to update nimble lol
[22:14:30] <FromDiscord> <Phil> Sidenote, does anyone know off the cuff to check if a type has a given field?
[22:14:42] <FromDiscord> <Phil> In a way that returns a boolean
[22:14:50] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:4003:8970:d961:ff06)
[22:17:22] <FromDiscord> <auxym> only possible at compile time with a macro
[22:18:17] <FromDiscord> <Phil> hmmm not a compile time proc?
[22:19:52] <FromDiscord> <auxym> possibly. not super familiar with that stuff but maybe have a look at the implementation for this: https://github.com/beef331/constructor
[22:21:29] <FromDiscord> <lantos> In reply to @auxym "https://play.nim-lang.org/#ix=3OFi": oh haha, I actually way trying to use openArray[byte] before but I was getting an error like var openArray can not be known at compile time (iirc)
[22:21:54] <FromDiscord> <lantos> (edit) "(iirc)" => "(iirc),↵don't know what I did it must of been something weird but thanks"
[22:21:58] <FromDiscord> <lantos> (edit) "weird but" => "weird,"
[22:26:57] *** Quits: szahid (~szahid@user/szahid) (Read error: Connection reset by peer)
[22:29:14] <FromDiscord> <Phil> ... did I just crash play nim lang?
[22:29:35] <PMunch> @Phil, no, I took it down for maintenance
[22:29:43] <FromDiscord> <Phil> Phewwwwww
[22:29:46] <PMunch> Sorry about that
[22:30:09] <FromDiscord> <Phil> No worries, I was just playing around with some compile time stuff and suddenly nothing
[22:30:19] <FromDiscord> <Phil> Thought I found something crashable
[22:30:32] <FromDiscord> <Phil> Instapanic that I ruined it for everybody else xD
[22:32:12] <FromDiscord> <Phil> sent a code paste, see https://play.nim-lang.org/#ix=3OFz
[22:32:19] <FromDiscord> <Phil> Outputs:↵> true↵> false
[22:32:58] <FromDiscord> <Phil> (edit) "https://play.nim-lang.org/#ix=3OFz" => "https://play.nim-lang.org/#ix=3OFA"
[22:33:18] <FromDiscord> <tandy> nvm, still happening
[22:35:21] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:4003:8970:d961:ff06) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:42:16] <FromDiscord> <ajusa> In reply to @tandy "nvm, still happening": you probably need to clear nim cache
[22:44:20] <FromDiscord> <tandy> nmm
[22:44:24] <FromDiscord> <tandy> how
[23:00:16] *** Joins: vicfred (~vicfred@user/vicfred)
[23:01:14] <FromDiscord> <lantos> sent a code paste, see https://play.nim-lang.org/#ix=
[23:11:16] <FromDiscord> <tandy> it keeps asking for this
[23:11:16] <FromDiscord> <tandy> \:(
[23:18:14] <FromDiscord> <ajusa> sent a code paste, see https://play.nim-lang.org/#ix=3OFM
[23:18:34] <FromDiscord> <ajusa> (edit) "https://play.nim-lang.org/#ix=3OFM" => "https://play.nim-lang.org/#ix=3OFN"
[23:18:39] <FromDiscord> <lantos> 😮 is that a bad thing though? all /pkgs should be dl'd?
[23:19:04] <FromDiscord> <ajusa> Yeah it should be fine but it won't fix the issue, and it may be annoying to reinstall all the nimble packages
[23:20:35] <FromDiscord> <ajusa> Like if you've installed pixie, chronicles, and fidget you've probably got 100 packages installed. Reinstalling all of those (and the correct versions for your code if you don't have a .nimble) could take hours
[23:26:46] <NimEventer> New question by nonimportant: Out of Memory Error When Calling DLL function, see https://stackoverflow.com/questions/70992147/out-of-memory-error-when-calling-dll-function
[23:29:15] <FromDiscord> <Zajt> I don't quite understand the `-d` param to the nim compiler after checking the manpage, anyone wanna try to explian how you should use this one?
[23:29:19] <FromDiscord> <Phil> sent a code paste, see https://play.nim-lang.org/#ix=3OFP
[23:29:24] <FromDiscord> <Waldecir Santos> I'd like to create an "portuguese" channel in the language-specific group, who owns it ?
[23:29:37] <FromDiscord> <Phil> (edit) "https://play.nim-lang.org/#ix=3OFP" => "https://play.nim-lang.org/#ix=3OFR"
[23:30:56] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[23:39:35] <FromDiscord> <tandy> well that helped↵(@ajusa)
[23:42:39] <FromDiscord> <ajusa> In reply to @tandy "well that helped (<@102899813149855744>)": Awesome! I've had to do that a couple times, not sure if there is a better way
[23:59:08] <FromDiscord> <Zajt> Is there a list of builtin compile-time symbols somewhere?
