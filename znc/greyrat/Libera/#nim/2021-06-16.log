[00:04:16] *** Quits: Saemsays[m] (~saemmatri@2001:470:69fc:105::2b1e) (Quit: Client limit exceeded: 10000)
[00:28:27] *** Joins: SebastianM (~seba@user/sebastianm)
[00:30:39] *** Quits: SebastianM (~seba@user/sebastianm) (Client Quit)
[00:37:16] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[00:44:07] <FromGitter> <BracketMaster> I've got the following for loop: ‚èé  ‚èé ```for a in 0..15: ‚èé   if a == 3: ‚èé     break``` ‚èé  ‚èé I want to capture the value of a outside the loop [https://gitter.im/nim-lang/Nim?at=60c90a0fbed13a2dba86871c]
[00:44:26] <FromGitter> <BracketMaster> so outside the loop, I would like to have ``a = 3``
[00:44:40] *** Joins: SaemasIeverwas[m (~saemmatri@2001:470:69fc:105::2b1e)
[00:45:21] <FromGitter> <bung87> So whats the problem
[00:45:55] <FromGitter> <BracketMaster> ```for a in 0..15: ‚èé   if a == 3: ‚èé     break ‚èé  ‚èé echo a``` ‚èé  ‚èé doesn't work [https://gitter.im/nim-lang/Nim?at=60c90a7a56df183c2318093f]
[00:46:07] <FromGitter> <BracketMaster> ``undeclared identifier a``
[00:46:16] <FromGitter> <BracketMaster> I need to access a after I break from the loop
[00:46:38] <FromGitter> <BracketMaster> this is a minimal viable example for essentially the same issue I hit in a much larger codebase
[00:48:54] <FromGitter> <BracketMaster> i think this works: https://nim-lang.org/docs/sugar.html#capture.m%2Cvarargs%5Btyped%5D%2Cuntyped
[00:49:01] <FromGitter> <bung87> Declare a variable outside asign it
[00:52:32] *** Quits: leorize (~leorize@user/leorize) (Ping timeout: 268 seconds)
[00:52:55] *** Joins: leorize (~leorize@user/leorize)
[00:53:53] *** Joins: SebastianM (~seba@user/sebastianm)
[00:53:59] *** Quits: SebastianM (~seba@user/sebastianm) (Client Quit)
[01:08:22] *** Joins: mikko (~mikko@2a02:7b40:d418:6a61::1)
[01:11:09] <mikko> are there any good tutorials for using nim with javascript? i would like to write parts of my code (functions) in nim and call those functions from existing javascript code
[01:15:16] <FromGitter> <bung87> https://github.com/bung87/datetime_parse a sample project for nodejs
[01:20:28] <mikko> thanks, i'll take a look
[01:23:07] <mikko> @bung87 can you explain the "when defined(nodejs):" part at the end?
[02:00:02] *** Joins: nixfreak (~Adium@50-77-54-222-static.hfc.comcastbusiness.net)
[02:05:03] *** Quits: nixfreak (~Adium@50-77-54-222-static.hfc.comcastbusiness.net) (Changing host)
[02:05:03] *** Joins: nixfreak (~Adium@user/nixfreak)
[02:10:53] *** Quits: iortega (~inigo@217.113.251.254) (Remote host closed the connection)
[02:13:56] <FromGitter> <bung87> If not nodejs theres no need export
[02:15:54] *** Quits: Schnouki (~schnouki@user/schnouki) (Ping timeout: 264 seconds)
[02:20:34] <mikko> i sort of got something working with "nim js -d:nodejs hello.nim" but if i don't do something like "discard func(2)" to call the functions the generated .js won't include the functions i defined
[02:21:01] <mikko> and the function names are suffixed with something like _1852002 which is a bit annoying
[02:26:19] *** Joins: nixfreaknim[m] (~reversem3@2001:470:69fc:105::33d1)
[02:26:19] <nixfreaknim[m]> Ahh there we go 
[02:29:42] *** nixfreaknim[m] is now known as nixfreak_nim[m]
[02:32:23] <FromGitter> <bung87> mikko your proc should has exportc pragma
[02:33:15] <mikko> oh i see, i noticed that in the docs but from the name assumed that only applies to the C invocation
[02:33:46] <FromGitter> <bung87> you can use exportjs as well I think
[02:34:15] *** Parts: nixfreak (~Adium@user/nixfreak) ()
[02:34:38] <FromGitter> <bung87> older version nim compiler has no exportjs, they do same thing just names
[02:59:42] *** Quits: leorize (~leorize@user/leorize) (Ping timeout: 264 seconds)
[03:01:15] *** Joins: leorize (~leorize@user/leorize)
[03:39:47] *** ChanServ sets mode: +o dom96_
[03:39:52] *** dom96_ changes topic to 'üëë Nim programming language - http://nim-lang.org/ | https://github.com/nim-lang/Nim/wiki/IRC-guidelines | Latest version: 1.4.8 - https://nim-lang.org/install.html | Forum: http://forum.nim-lang.org/ | IRC logs: http://irclogs.nim-lang.org/ | Bridged to Discord/Gitter: https://discord.com/invite/nim | See also #nim-offtopic #nim-nologs | git.io/gHZGCg'
[03:40:00] *** dom96_ changes topic to 'üëë Nim programming language - http://nim-lang.org/ | https://github.com/nim-lang/Nim/wiki/IRC-guidelines | Latest version: 1.4.8 - https://nim-lang.org/install.html | Forum: http://forum.nim-lang.org/ | IRC logs: http://irclogs.nim-lang.org/ | (Soon) Bridged to Discord/Gitter: https://discord.com/invite/nim | See also #nim-offtopic #nim-nologs | git.io/gHZGCg'
[03:40:11] *** dom96_ is now known as dom96
[03:40:19] *** ChanServ sets mode: -o dom96
[04:15:02] *** ChanServ sets mode: +o dom96
[04:15:18] *** dom96 sets mode: +b *!*@*2001:470:69fc:105::2b23
[04:15:23] *** disruptek[m] was kicked by dom96 (disruptek[m])
[04:15:29] *** ChanServ sets mode: -o dom96
[04:38:22] *** Joins: jkl (~jkl1337@2600:1700:2420:6d10::3f1)
[05:02:26] *** Joins: vicfred (~vicfred@user/vicfred)
[05:44:43] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[05:49:12] *** Quits: mjsir911 (~bnc@user/mjsir911) (Quit: Goodbye, World!)
[05:49:42] *** Joins: mjsir911 (~bnc@user/mjsir911)
[07:24:56] *** Joins: SebastianM (~seba@user/sebastianm)
[07:25:04] *** Quits: SebastianM (~seba@user/sebastianm) (Client Quit)
[07:42:29] *** Quits: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net) (Ping timeout: 272 seconds)
[07:44:04] *** Joins: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net)
[08:01:08] *** Quits: clemens3 (~clemens@225.40.150.83.ftth.as8758.net) (Ping timeout: 268 seconds)
[08:02:08] *** Joins: clemens3 (~clemens@225.40.150.83.ftth.as8758.net)
[08:37:55] *** Quits: vicfred (~vicfred@user/vicfred) (Read error: Connection reset by peer)
[08:38:07] *** Joins: vicfred (~vicfred@user/vicfred)
[09:20:49] <FromGitter> <BracketMaster> I'm trying to get chaining working with the small example here in nim: https://play.nim-lang.org/#ix=3q5K
[09:21:04] <FromGitter> <BracketMaster> But it complains the output of `foo()` is immutable
[09:21:16] <FromGitter> <BracketMaster> How can I make foo's output var?
[09:27:39] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[10:17:44] *** Joins: SebastianM (~Sebastian@user/sebastianm)
[10:53:48] *** Joins: Vladar (~Vladar@46.162.2.53)
[11:22:51] *** Joins: sebastianmpl[m] (~sebastian@2001:470:69fc:105::3174)
[11:23:57] *** Parts: sebastianmpl[m] (~sebastian@2001:470:69fc:105::3174) ()
[11:37:50] <aeverr> bracketmaster: you dont; usually you copy the input parameter then return that
[11:37:58] <aeverr> btw its discord rika here
[11:51:30] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (Ping timeout: 240 seconds)
[11:53:57] *** Joins: Schnouki (~schnouki@user/schnouki)
[11:55:58] *** Joins: greaser|q (greaser@antihype.space)
[12:11:31] *** Quits: SebastianM (~Sebastian@user/sebastianm) (Quit: SebastianM)
[12:37:01] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:a95a:ecd2:e57a:3130)
[13:03:06] *** Quits: jkl (~jkl1337@2600:1700:2420:6d10::3f1) (Ping timeout: 240 seconds)
[13:15:40] *** Quits: greaser|q (greaser@antihype.space) (Changing host)
[13:15:40] *** Joins: greaser|q (greaser@user/greasemonkey)
[13:16:14] *** greaser|q is now known as GreaseMonkey
[13:42:56] *** Joins: SebastianM (~seba@user/sebastianm)
[14:01:37] *** Quits: leorize[m] (~leorize@user/leorize) (Quit: Bridge terminating on SIGTERM)
[14:01:41] *** Quits: SaemasIeverwas[m (~saemmatri@2001:470:69fc:105::2b1e) (Quit: Bridge terminating on SIGTERM)
[14:01:42] *** Quits: nixfreak_nim[m] (~reversem3@2001:470:69fc:105::33d1) (Quit: Bridge terminating on SIGTERM)
[14:01:45] *** Quits: Zoom[m] (~zoommatri@2001:470:69fc:105::15c4) (Quit: Bridge terminating on SIGTERM)
[14:04:43] *** Joins: leorize[m] (~leorize@user/leorize)
[14:13:00] *** Joins: Zoom[m] (~zoommatri@2001:470:69fc:105::15c4)
[14:13:00] *** Joins: SaemasIeverwas[m (~saemmatri@2001:470:69fc:105::2b1e)
[14:13:00] *** Joins: nixfreak_nim[m] (~reversem3@2001:470:69fc:105::33d1)
[14:25:30] *** Quits: clemens3 (~clemens@225.40.150.83.ftth.as8758.net) (Ping timeout: 240 seconds)
[14:29:58] *** Joins: clemens3 (~clemens@225.40.150.83.ftth.as8758.net)
[14:37:18] *** Quits: SebastianM (~seba@user/sebastianm) (Quit: Bye)
[14:46:36] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[14:55:05] *** Joins: Vladar (~Vladar@46.162.2.53)
[15:10:43] *** Joins: SebastianM (~seba@user/sebastianm)
[15:26:30] *** Joins: Torro (Torro@gateway/vpn/protonvpn/torro)
[15:53:05] *** Quits: SebastianM (~seba@user/sebastianm) (Quit: Bye)
[15:57:25] <FromGitter> <BracketMaster> hello rika
[15:57:35] <FromGitter> <BracketMaster> then wouldn't my program do a lot of copying?
[16:10:03] *** Joins: arkurious (~arkurious@user/arkurious)
[16:12:04] *** Joins: vsantana (~vsantana@fttx-17713614824.usr.predialnet.com.br)
[16:25:14] <FromGitter> <BracketMaster> I would think it should be possible to do function chaining without copying...
[16:25:58] *** Quits: xet7 (~xet7@85-156-127-25.elisa-laajakaista.fi) (Remote host closed the connection)
[16:32:06] *** Joins: xet7 (~xet7@85-156-127-25.elisa-laajakaista.fi)
[16:33:32] <FromGitter> <BracketMaster> chaining seems to work here without copying.... https://github.com/skellock/crappyprint/blob/642ca9fabee7cd0e7c976bc42c82d217e49f208c/src/crappyprint.nim#L242
[16:44:58] <FromGitter> <BracketMaster> Interestingly enough, if you change ``bar(arg_compound : var compound)`` to ``bar(arg_compound : compound)``, it works
[16:45:09] <FromGitter> <BracketMaster> ```code paste, see link``` [https://gitter.im/nim-lang/Nim?at=60c9eb4cb346e9618bd4e315]
[16:46:16] <FromGitter> <BracketMaster> any ideas why that might be?
[16:47:50] *** Joins: SebastianM (~seba@user/sebastianm)
[17:04:38] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:a95a:ecd2:e57a:3130) (Ping timeout: 272 seconds)
[17:34:03] *** Joins: Clonkk[m] (~rfcmatrix@2001:470:69fc:105::34a8)
[17:43:20] *** Joins: rockcavera (~rc@192.12.114.196)
[17:43:20] *** Quits: rockcavera (~rc@192.12.114.196) (Changing host)
[17:43:20] *** Joins: rockcavera (~rc@user/rockcavera)
[17:52:30] *** Quits: SebastianM (~seba@user/sebastianm) (Quit: Bye)
[18:22:55] *** Joins: SebastianM (~seba@user/sebastianm)
[18:32:48] *** Quits: SebastianM (~seba@user/sebastianm) (Quit: Bye)
[18:44:19] *** Quits: leorize (~leorize@user/leorize) (Ping timeout: 268 seconds)
[18:46:26] *** Joins: leorize (~leorize@user/leorize)
[20:04:02] *** Joins: pro (~pro@user/pro)
[20:30:23] *** Quits: mikess (~sam@user/mikess) (Ping timeout: 268 seconds)
[20:35:48] *** Joins: iortega (~inigo@217.113.248.254)
[20:46:08] *** Parts: pro (~pro@user/pro) (WeeChat 3.1)
[20:46:41] *** Joins: mikess (~sam@user/mikess)
[21:00:11] *** Quits: vsantana (~vsantana@fttx-17713614824.usr.predialnet.com.br) (Quit: Leaving)
[21:12:30] *** Quits: Torro (Torro@gateway/vpn/protonvpn/torro) (Quit: leaving)
[21:34:21] *** Joins: nerthus (~nerthus@85.149.146.5)
[21:45:29] *** Joins: jkl (~jkl@12.216.111.80)
[21:47:55] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[21:49:06] *** Quits: Schnouki (~schnouki@user/schnouki) (Ping timeout: 240 seconds)
[21:51:28] *** Joins: blackbeard420 (~blackbear@2600:3c03:e000:297::)
[22:33:18] *** Quits: jkl (~jkl@12.216.111.80) (Ping timeout: 264 seconds)
[22:39:10] *** Joins: SebastianM (~seba@user/sebastianm)
[22:39:43] *** Quits: SebastianM (~seba@user/sebastianm) (Client Quit)
[23:48:13] *** Joins: SebastianM (~seba@user/sebastianm)
