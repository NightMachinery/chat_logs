[00:00:10] <morrigan> reset is what I did because that seemed the easiest to me. I was mostly curious if there was a clean way to accomplish the same but not change history
[00:00:22] <thiago> yes, there is
[00:00:35] <imMute> < thiago> or, alternatively, you can git checkout <hash> . (including the . at the end)
[00:00:52] *** Quits: koolazer (~koo@user/koolazer) (Ping timeout: 272 seconds)
[00:01:16] <morrigan> thiago: what is that, "the checkout solution"?
[00:01:50] <imMute> morrigan: what I literally *just* said (copying what thiago said a while ago)
[00:02:14] <morrigan> oh, I see that. Wasn't sure. Thanks
[00:09:47] *** Joins: Deneb_ (~Deneb@58.111.189.80.dyn.plus.net)
[00:10:51] *** Joins: LdK13 (~LdK13@212-127-230-18.cable.dynamic.v4.ziggo.nl)
[00:12:12] *** Joins: jimklimov (~jimklimov@ip-86-49-254-149.net.upcbroadband.cz)
[00:12:28] *** Quits: Deneb_ (~Deneb@58.111.189.80.dyn.plus.net) (Remote host closed the connection)
[00:13:01] <LdK13> Hi. I want to do a pull-request on github.  That only works when I have a whole branch that can be merged as a whole.  I made other changes too though, so - I'd like to create a new branch onto remotes/origin/main that contains the changes that I currently see with 'git diff' (the index is empty).
[00:13:05] <LdK13> How can I do that?
[00:15:07] *** Quits: jimklimov1 (~jimklimov@ip-86-49-254-149.net.upcbroadband.cz) (Ping timeout: 245 seconds)
[00:18:16] *** Joins: Guest9 (~Guest9@43.250.157.35)
[00:22:27] *** Quits: tsdh (~tsdh@j289989.servers.jiffybox.net) (Quit: Goodbye)
[00:28:37] *** Joins: tsdh (~tsdh@j289989.servers.jiffybox.net)
[00:30:26] *** Quits: fr0bn1c (~frobnic@87.122.214.223) (Ping timeout: 265 seconds)
[00:30:47] *** Quits: patchie (~sdf@136.228.211.47) (Remote host closed the connection)
[00:31:03] *** Joins: patchie (~sdf@136.228.220.199)
[00:35:06] *** Quits: bambams_ (~bambams@user/bambams) (Remote host closed the connection)
[00:35:31] *** Joins: bambams_ (~bambams@user/bambams)
[00:37:02] *** Joins: fr0bn1c (~frobnic@87.122.214.223)
[00:38:04] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:40:00] *** Quits: randomuser (~randomuse@user/randomuser) (Quit: Leaving)
[00:41:16] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 268 seconds)
[00:44:11] *** Joins: Wuzzy (~Wuzzy@p57a2f693.dip0.t-ipconnect.de)
[00:48:24] *** Quits: Guest9 (~Guest9@43.250.157.35) (Quit: Connection closed)
[00:49:43] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[00:50:05] *** R2robot_ is now known as R2robot
[00:54:05] *** Joins: skapata (~Skapata@user/skapata)
[00:54:59] *** Joins: structoha (~structoha@gateway/tor-sasl/structoha)
[00:58:31] *** Joins: offby1 (sid11391@id-11391.charlton.irccloud.com)
[00:59:31] <offby1> does anyone know of a brief document that describes how (if at all) Azure DevOps does pull requests, in particular, comparing them to other systems?  I just started a new job, and the first PR I saw has aspects that puzzle me
[01:04:28] *** Quits: chexum (~chexum@gateway/tor-sasl/chexum) (Quit: -)
[01:06:18] *** Joins: chexum (~chexum@gateway/tor-sasl/chexum)
[01:07:50] *** Quits: humanface (~humanface@20014C4E1C4C24003D1BEA20F1FAEF5B.dsl.pool.telekom.hu) (Quit: Client closed)
[01:09:06] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Ping timeout: 265 seconds)
[01:09:33] *** Quits: mokulus (~mokulus@user/mokulus) (Ping timeout: 258 seconds)
[01:12:07] *** Joins: Oblomov (~tex_vim@user/oblomov)
[01:12:19] <imMute> offby1: I've used ADO PRs a lot and gitlab/github a little bit.
[01:12:26] <imMute> offby1: which parts are you puzzled by?
[01:13:12] *** Quits: ano (~weechat@user/ano) (Ping timeout: 244 seconds)
[01:13:33] *** Joins: ano (~weechat@user/ano)
[01:13:49] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[01:18:21] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Read error: Connection reset by peer)
[01:18:51] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[01:21:31] *** Quits: patchie (~sdf@136.228.220.199) (Remote host closed the connection)
[01:21:47] *** Joins: patchie (~sdf@136.228.220.162)
[01:22:11] *** Quits: patchie (~sdf@136.228.220.162) (Remote host closed the connection)
[01:22:27] *** Joins: patchie (~sdf@136.228.208.146)
[01:28:23] *** Joins: gesker (~gesker@65.140.244.146)
[01:32:33] *** Joins: oriba (~oriba@dynamic-089-014-111-212.89.14.pool.telefonica.de)
[01:41:03] *** Joins: zebrag (~chris@user/zebrag)
[01:45:27] *** Quits: zebrag (~chris@user/zebrag) (Ping timeout: 255 seconds)
[01:47:34] *** Joins: zebrag (~chris@user/zebrag)
[01:47:38] *** Quits: zebrag (~chris@user/zebrag) (Client Quit)
[01:48:01] *** Joins: zebrag (~chris@user/zebrag)
[01:49:09] *** Joins: koolazer (~koo@user/koolazer)
[01:58:23] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[01:59:38] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Remote host closed the connection)
[02:00:15] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[02:01:40] *** Joins: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[02:04:45] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Ping timeout: 258 seconds)
[02:05:28] *** Joins: arcatech (~arcatech@user/arcatech)
[02:09:01] *** Quits: natrys (~natrys@user/natrys) (Quit: natrys)
[02:14:20] *** Quits: warthog9 (warthog9@proxy.monkeyblade.net) (Ping timeout: 252 seconds)
[02:15:26] <offby1> imMute: we had a PR that had some merge conflicts.  Some guys -- who aren't terribly familiar with git -- resolve the conflicts and got the PR onto our main branch.  It's all fine ... but what surprised me is that there's no record of their effort, besides the new squashed commit on main.  If I look at the PR on the web, there's an actual merge commit with a hash that doesn't appear on my desktop (despite me having done "git fetch
[02:15:26] <offby1> --all").  I should mention our branch policy is to always squash
[02:16:08] <offby1> so I'm wondering why that merge commit is kinda floating around in limbo.  I imagine this is Just How It All WorksÂ® but it's kinda surprising; I guess I expected to see a merge commit on the feature branch that corresponded to the PR.
[02:17:32] <BtbN> If you squash, you explicitly destroy all that history
[02:21:57] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:26:40] *** Quits: kenanmarasli (~kenanmara@31.223.9.136) (Quit: Leaving)
[02:29:46] *** Joins: warthog9 (warthog9@proxy.monkeyblade.net)
[02:32:27] *** Quits: orbyt (~textual@172.92.4.78) (Quit: Textual IRC Client: www.textualapp.com)
[02:33:44] *** Quits: jwillikers (~jwilliker@2604:2800:2:a403:fe91:ac3e:5153:1290) (Remote host closed the connection)
[02:39:14] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[02:45:18] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 255 seconds)
[02:45:18] *** Joins: Soliton (~Soliton@wesnoth/developer/soliton)
[02:46:45] *** Quits: Lunatrius (~Lunatrius@77.38.22.128) (Read error: Connection reset by peer)
[02:47:00] *** Joins: Lunatrius (~Lunatrius@77.38.22.128)
[02:58:06] *** Joins: skapata (~Skapata@user/skapata)
[02:58:14] *** Joins: NeilRG (~NeilRG@192.222.196.111)
[03:02:00] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 272 seconds)
[03:04:34] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:06:49] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:08:01] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:09:34] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[03:12:50] *** Quits: fr0bn1c (~frobnic@87.122.214.223) (Ping timeout: 265 seconds)
[03:14:08] *** Joins: fr0bn1c (~frobnic@87.122.214.223)
[03:14:11] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[03:14:30] *** Joins: zebrag (~chris@user/zebrag)
[03:15:27] *** Joins: Crassus (~Crassus@user/crassus)
[03:19:47] *** Quits: justache (~justache@user/justache) (Excess Flood)
[03:20:43] *** Joins: justache (~justache@user/justache)
[03:24:10] *** Quits: EvanCarroll (~ecarroll@c-73-32-86-244.hsd1.tx.comcast.net) (Ping timeout: 272 seconds)
[03:25:15] *** Joins: Xenguy (~Xenguy@devuan/developer/Xenguy)
[03:28:34] *** Joins: kikijiki (~Thunderbi@user/kikijiki)
[03:31:33] *** Quits: jsrnop (~mark@user/jsrnop) (Quit: The Lounge - https://thelounge.chat)
[03:32:02] *** Joins: jsrnop (~mark@user/jsrnop)
[03:34:43] *** Joins: orbyt (~textual@172.92.4.78)
[03:35:30] *** Quits: thunfisch (~thunfisch@user/thunfisch) (Ping timeout: 240 seconds)
[03:36:51] *** Quits: fflam (~mdt@pool-96-253-99-54.rcmdva.fios.verizon.net) (Quit: WeeChat 3.2)
[03:37:06] *** Quits: oriba (~oriba@dynamic-089-014-111-212.89.14.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:42:48] *** Quits: Dragoon (~Dragoon@user/dragoon) (Ping timeout: 265 seconds)
[03:46:57] *** Quits: zulutango (~zulutango@static-n58-105-160-58.mas4.nsw.optusnet.com.au) (Ping timeout: 255 seconds)
[03:53:44] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Ping timeout: 256 seconds)
[03:53:56] *** Joins: Dragoon (~Dragoon@user/dragoon)
[03:55:03] *** Quits: debsan (~debsan@2800:810:471:2ee::1000) (Ping timeout: 255 seconds)
[03:55:39] *** Joins: emanuele6 (~emanuele6@93-35-160-28.ip55.fastwebnet.it)
[03:55:56] *** Quits: Dragoon (~Dragoon@user/dragoon) (Read error: Connection reset by peer)
[03:56:24] *** Quits: emanuele6 (~emanuele6@93-35-160-28.ip55.fastwebnet.it) (Changing host)
[03:56:24] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[03:58:21] *** Joins: thunfisch (~thunfisch@user/thunfisch)
[04:00:02] *** Quits: chexum (~chexum@gateway/tor-sasl/chexum) (Remote host closed the connection)
[04:00:26] *** Joins: chexum (~chexum@gateway/tor-sasl/chexum)
[04:05:07] *** Joins: EvanCarroll (~ecarroll@198-0-91-126-static.hfc.comcastbusiness.net)
[04:05:07] *** Quits: Samian (~Sami@174.27.107.153) (Ping timeout: 258 seconds)
[04:12:12] *** Quits: bambams_ (~bambams@user/bambams) (Ping timeout: 252 seconds)
[04:19:43] *** Quits: chexum (~chexum@gateway/tor-sasl/chexum) (Ping timeout: 244 seconds)
[04:21:14] *** Quits: orbyt (~textual@172.92.4.78) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[04:22:41] *** Joins: chexum (~chexum@gateway/tor-sasl/chexum)
[04:23:02] *** Joins: Null_A (~null_a@2601:645:8700:2290:3dcd:98af:2801:58da)
[04:26:22] *** Quits: hposca (~hposca@node-1w7jr9phoke2sektanidvb94u.ipv6.telus.net) (Ping timeout: 245 seconds)
[04:27:21] *** Joins: Dragoon (~Dragoon@user/dragoon)
[04:27:48] *** Joins: bambams (~bambams@user/bambams)
[04:27:48] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[04:28:11] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[04:28:36] *** Quits: fructose (~fructose@user/fructose) (Quit: fructose)
[04:28:55] *** Joins: fructose (~fructose@user/fructose)
[04:31:22] *** Joins: planetcall (~planetcal@user/planetcallwork/x-8157852)
[04:34:47] *** Joins: apauli (~apauli@dynamic-077-001-176-164.77.1.pool.telefonica.de)
[04:35:04] *** Quits: planetcalls|work (~planetcal@user/planetcallwork/x-8157852) (Ping timeout: 246 seconds)
[04:38:09] *** Joins: jazzy (~jaziz@2600:380:8451:9914:745f:c6b0:8b18:af60)
[04:38:16] *** Quits: PaMeDa (~apauli@dynamic-077-003-195-187.77.3.pool.telefonica.de) (Ping timeout: 272 seconds)
[04:39:17] *** Quits: bambams (~bambams@user/bambams) (Ping timeout: 245 seconds)
[04:43:23] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 255 seconds)
[04:45:34] *** Quits: thunfisch (~thunfisch@user/thunfisch) (Ping timeout: 246 seconds)
[04:46:39] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[04:51:23] *** Joins: zulutango (~zulutango@pa49-181-161-54.pa.nsw.optusnet.com.au)
[04:51:35] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[04:52:47] *** Quits: Null_A (~null_a@2601:645:8700:2290:3dcd:98af:2801:58da) ()
[04:52:56] *** Joins: thunfisch (~thunfisch@user/thunfisch)
[05:00:08] *** Joins: Guest4214 (~Guest42@2001:cf8:0:6c::203)
[05:00:19] *** Quits: travisghansen (~travisgha@192.74.130.86) (Ping timeout: 258 seconds)
[05:05:10] *** Quits: nyah (~nyah@90.221.186.180) (Quit: Lost terminal)
[05:07:40] *** Joins: travisghansen (~travisgha@192.74.130.86)
[05:10:15] *** Joins: debsan (~debsan@2800:810:471:2ee::1000)
[05:10:29] *** Joins: hposca (~hposca@node-1w7jr9phoke2ugioo612q365y.ipv6.telus.net)
[05:18:48] *** Quits: hegstal (~hegstal@2a02:c7f:7604:8a00:cd80:9697:e922:dc30) (Remote host closed the connection)
[05:28:51] *** Joins: fr0bn1c_ (~frobnic@87.123.58.98)
[05:30:16] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[05:30:29] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[05:30:41] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[05:32:31] *** Quits: fr0bn1c (~frobnic@87.122.214.223) (Ping timeout: 265 seconds)
[05:39:05] *** Joins: ferdna (~ferdna@user/ferdna)
[05:39:14] *** Joins: pete443_ (~pete@user/pete443)
[05:40:21] *** Quits: pete443 (~pete@user/pete443) (Ping timeout: 255 seconds)
[05:46:14] *** Joins: Samian (~Sami@2620:10d:c091:480::1:6681)
[05:53:11] *** Joins: ishutin_ (~ishutin@85-238-93-30.pool.digikabel.hu)
[05:55:06] *** Quits: pcarphin (~pcarphin@modemcable058.54-202-24.mc.videotron.ca) (Quit: Ping timeout (120 seconds))
[05:55:10] *** Joins: PendulumSwinger (~PendulumS@user/pendulumswinger)
[05:55:24] *** Joins: pcarphin (~pcarphin@modemcable058.54-202-24.mc.videotron.ca)
[05:55:53] *** Quits: ishutin (~ishutin@87-97-88-250.pool.digikabel.hu) (Ping timeout: 252 seconds)
[06:01:52] *** Joins: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[06:07:19] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[06:08:02] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[06:11:34] *** Joins: hbautista_ (~hbautista@187.171.203.0)
[06:13:46] *** Quits: hbautista__ (~hbautista@187.171.203.0) (Ping timeout: 246 seconds)
[06:14:05] *** Quits: Guest4214 (~Guest42@2001:cf8:0:6c::203) (Quit: Client closed)
[06:15:39] *** Joins: Vonter (~Vonter@user/vonter)
[06:17:31] *** Quits: hbautista_ (~hbautista@187.171.203.0) (Quit: Leaving)
[06:17:59] *** Joins: hbautista (~hbautista@187.171.203.0)
[06:19:58] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[06:20:03] *** Quits: zulutango (~zulutango@pa49-181-161-54.pa.nsw.optusnet.com.au) (Ping timeout: 258 seconds)
[06:20:05] *** __jmcantrell__ is now known as jmcantrell
[06:29:08] *** Quits: hposca (~hposca@node-1w7jr9phoke2ugioo612q365y.ipv6.telus.net) (Ping timeout: 255 seconds)
[06:32:30] *** Quits: EvanCarroll (~ecarroll@198-0-91-126-static.hfc.comcastbusiness.net) (Ping timeout: 268 seconds)
[06:34:06] *** Joins: EvanCarroll (~ecarroll@68.90.133.105)
[06:35:35] *** Joins: adlternative (~adl@117.32.216.12)
[06:40:31] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[06:42:13] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[06:43:21] *** Joins: gast0n (~g4570n@user/gast0n)
[06:44:49] *** Joins: zulutango (~zulutango@pa49-181-161-54.pa.nsw.optusnet.com.au)
[06:47:08] *** Quits: EvanCarroll (~ecarroll@68.90.133.105) (Ping timeout: 255 seconds)
[06:48:36] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:48:36] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (cadmium.libera.chat (Nickname regained by services)))
[06:48:36] *** finn_elija is now known as FinnElija
[06:48:55] *** Joins: EvanCarroll (~ecarroll@198-0-91-126-static.hfc.comcastbusiness.net)
[06:51:18] *** Quits: Wuzzy (~Wuzzy@p57a2f693.dip0.t-ipconnect.de) (Remote host closed the connection)
[06:59:09] *** Quits: EvanCarroll (~ecarroll@198-0-91-126-static.hfc.comcastbusiness.net) (Ping timeout: 258 seconds)
[07:00:46] *** Joins: EvanCarroll (~ecarroll@68.90.133.105)
[07:05:50] *** Quits: adlternative (~adl@117.32.216.12) (Ping timeout: 272 seconds)
[07:12:17] *** Joins: fflam (~mdt@pool-96-253-99-54.rcmdva.fios.verizon.net)
[07:20:57] *** Joins: adlternative (~adl@117.32.216.12)
[07:23:47] *** Joins: MercilessDeth (~brad@136.49.61.2)
[07:31:57] *** Quits: austin987 (~null@100.42.98.196) (Ping timeout: 255 seconds)
[07:36:52] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 272 seconds)
[07:40:13] *** Quits: nate1 (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 246 seconds)
[07:42:42] *** Joins: gnoo (~gnoo@user/gnoo)
[07:45:34] *** Joins: austin987 (~null@cpe-173-174-99-192.austin.res.rr.com)
[07:48:46] *** Joins: calla (~calla@modemcable132.7-177-173.mc.videotron.ca)
[08:06:33] *** Quits: calla (~calla@modemcable132.7-177-173.mc.videotron.ca) (Remote host closed the connection)
[08:07:14] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[08:11:42] *** Joins: structoha1 (~structoha@gateway/tor-sasl/structoha)
[08:12:34] *** Joins: rndusr (~rndusr@user/rndusr)
[08:15:19] *** Quits: structoha (~structoha@gateway/tor-sasl/structoha) (Ping timeout: 244 seconds)
[08:15:29] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[08:21:12] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[08:22:08] *** Quits: tchan (~tchan@c-98-206-141-238.hsd1.il.comcast.net) (Read error: No route to host)
[08:26:16] *** Quits: apauli (~apauli@dynamic-077-001-176-164.77.1.pool.telefonica.de) (Ping timeout: 272 seconds)
[08:26:20] *** Joins: PaMeDa (~apauli@dynamic-077-000-119-086.77.0.pool.telefonica.de)
[08:26:46] *** Joins: planetcalls|work (~planetcal@user/planetcallwork/x-8157852)
[08:30:32] *** Quits: planetcall (~planetcal@user/planetcallwork/x-8157852) (Ping timeout: 245 seconds)
[08:34:51] *** Quits: foureyes (foureyes@brought.to.you.by.bnc4free.com) (Quit: Leaving)
[08:37:55] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[08:47:48] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[08:48:00] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[08:52:16] *** Joins: foureyes (foureyes@brought.to.you.by.bnc4free.com)
[08:54:37] *** Joins: tchan (~tchan@c-98-206-141-238.hsd1.il.comcast.net)
[08:58:33] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[08:59:24] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[09:03:18] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 255 seconds)
[09:07:54] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[09:08:32] *** Quits: keypusher (keypusher@user/keypusher) (Remote host closed the connection)
[09:12:40] *** Quits: andreas303 (andreas303@ip227.orange.bnc4free.com) (Quit: fBNC - https://bnc4free.com)
[09:15:51] *** Joins: madewokherd` (~urk@65-128-250-224.mpls.qwest.net)
[09:19:28] *** Quits: madewokherd (~urk@65-128-250-224.mpls.qwest.net) (Ping timeout: 272 seconds)
[09:23:50] *** Joins: andreas303 (andreas303@ip227.orange.bnc4free.com)
[09:25:20] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[09:26:40] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[09:28:57] *** Joins: vishal (~vishal@fedora/vishal)
[09:30:48] *** Quits: Crassus (~Crassus@user/crassus) (Ping timeout: 265 seconds)
[09:36:59] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[09:41:47] *** Quits: jazzy (~jaziz@2600:380:8451:9914:745f:c6b0:8b18:af60) (Ping timeout: 245 seconds)
[09:43:10] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[09:45:45] *** Joins: marw (4988ea31b1@knopi.disroot.org)
[09:47:26] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! ð)
[09:51:07] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 246 seconds)
[09:53:19] *** Joins: jinsun (~quassel@user/jinsun)
[09:55:03] *** Quits: thiago (~thiago@2601:1c0:4501:635c:7e90:ae00:4287:541b) (Ping timeout: 255 seconds)
[09:55:07] *** Joins: Vonter (~Vonter@user/vonter)
[09:57:45] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[10:00:21] *** Joins: randomuser (~randomuse@user/randomuser)
[10:02:36] *** Quits: randomuser (~randomuse@user/randomuser) (Client Quit)
[10:05:02] *** Joins: Crassus (~Crassus@user/crassus)
[10:08:14] *** Quits: EvanCarroll (~ecarroll@68.90.133.105) (Ping timeout: 252 seconds)
[10:08:29] *** Joins: wender (~Wender@189.37.66.110)
[10:10:08] *** Quits: zulutango (~zulutango@pa49-181-161-54.pa.nsw.optusnet.com.au) (Ping timeout: 272 seconds)
[10:10:21] *** Joins: zulutango (~zulutango@static-n58-105-160-58.mas4.nsw.optusnet.com.au)
[10:12:40] *** Quits: computeiro (~Wender@189.37.64.59) (Ping timeout: 272 seconds)
[10:13:48] *** Joins: randomuser (~randomuse@user/randomuser)
[10:26:55] *** Quits: hbautista (~hbautista@187.171.203.0) (Ping timeout: 258 seconds)
[10:27:04] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 244 seconds)
[10:29:54] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:37:18] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[10:39:52] *** Joins: EvanCarroll (~ecarroll@c-73-32-86-244.hsd1.tx.comcast.net)
[10:40:56] *** Joins: dshikoh (~dshikoh@user/dshikoh)
[10:43:16] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Max SendQ exceeded)
[10:44:30] *** Quits: seand (~seand@69.54.136.33) (Quit: Leaving)
[10:48:39] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[10:57:49] *** Joins: ferdna (~ferdna@user/ferdna)
[10:58:05] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[11:00:22] *** Quits: ferdna (~ferdna@user/ferdna) (Remote host closed the connection)
[11:04:56] *** Quits: marw (4988ea31b1@knopi.disroot.org) (Remote host closed the connection)
[11:05:10] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[11:05:42] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 255 seconds)
[11:08:07] *** Joins: jetchisel (jetchisel@user/jetchisel)
[11:11:55] *** Joins: rfuentess (~rfuentess@static-5-51-117-151.ftth.abo.bbox.fr)
[11:18:30] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[11:26:46] *** Quits: fr0bn1c_ (~frobnic@87.123.58.98) (Ping timeout: 272 seconds)
[11:27:29] *** Quits: debsan (~debsan@2800:810:471:2ee::1000) (Ping timeout: 255 seconds)
[11:29:22] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[11:31:25] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[11:31:54] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[11:33:19] *** Joins: fr0bn1c (~frobnic@87.123.58.98)
[11:34:34] *** Joins: jazzy (~jaziz@2600:380:8451:9914:40f9:c6b2:7e06:c8f5)
[11:34:48] *** Quits: unluckyshrubbery (~unluckysh@097-069-164-025.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[11:35:38] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[11:47:33] *** Quits: jazzy (~jaziz@2600:380:8451:9914:40f9:c6b2:7e06:c8f5) (Ping timeout: 255 seconds)
[11:51:17] *** Joins: jazzy (~jaziz@2600:380:8451:9914:a849:127b:48d6:243b)
[11:53:58] *** Joins: hbautista (~hbautista@187.171.203.0)
[11:54:04] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[11:57:57] *** Joins: AnapodoPsalidaki (~AnapodoPs@2a02:587:2910:6a35:5648:9513:2762:b5cd)
[12:02:16] *** Quits: adlternative (~adl@117.32.216.12) (Read error: Connection reset by peer)
[12:05:19] *** Joins: oxymoron93 (~oxymoron9@212.62.38.106)
[12:07:24] *** Quits: hbautista (~hbautista@187.171.203.0) (Ping timeout: 252 seconds)
[12:11:23] *** Quits: mandeep (uid394387@id-394387.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[12:16:56] *** Quits: theoceaniscool (~theoceani@93.177.120.255) (Ping timeout: 252 seconds)
[12:21:06] *** Joins: TomyWork (~TomyLobo@p200300e80f133c00c1f741f47462e969.dip0.t-ipconnect.de)
[12:21:30] *** Joins: Wuzzy (~Wuzzy@p57a2f693.dip0.t-ipconnect.de)
[12:22:31] *** Joins: rahl (~rahl@102.114.225.84)
[12:24:27] *** Quits: rahl- (~rahl@102.114.33.25) (Ping timeout: 255 seconds)
[12:25:25] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[12:26:39] *** Joins: dscho (~dscho@cgn-89-1-214-95.nc.de)
[12:26:53] *** Joins: aak (~aak@D4258924.rev.sefiber.dk)
[12:26:59] <aak> Hi guys :)
[12:27:13] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Read error: Connection reset by peer)
[12:27:25] <dscho> ... and non-guys ;-)
[12:27:42] <aak> Can anyone tell me the disadvantages of collaborating using a bare repository via network share vs. using a dedicated git server like azure devops or gitlab?
[12:27:47] <aak> and hi non-gus ;)
[12:27:49] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[12:29:16] <aak> non-guys :p
[12:30:53] *** Joins: theoceaniscool (~theoceani@93.177.120.255)
[12:31:16] <aak> What would the arguments for using a dedicated git-server be?
[12:32:40] <dscho> Speed.
[12:32:42] <ikke> CI
[12:33:12] <dscho> Yes, CI, too, and PRs and tickets, and permission management, and...
[12:33:53] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[12:34:20] <dscho> Regarding speed: Git assumes that bare repositories are local, and hence the read access patterns are sometimes _really_ awful when they are not.
[12:35:46] *** Quits: Crispy (~ScatMan@2001:8003:4859:fc00:a5a3:28c8:e5b3:6269) (Read error: Connection reset by peer)
[12:36:02] *** Joins: Crispy (~ScatMan@2001:8003:4859:fc00:97e:4ab8:cf28:cb2d)
[12:36:52] *** Quits: thebob (~thebob@user/thebob) (Quit: The Lounge - https://thelounge.chat)
[12:37:15] *** Joins: thebob (~thebob@user/thebob)
[12:37:27] *** Joins: pulse (~pulse@user/pulse)
[12:39:35] <aak> Alright.. but.. CI? Can you elaborate a bit on that?
[12:40:12] <aak> Ah.. Continous Integration.. Sorry.. Havent had my coffee yet :p
[12:40:46] <ikke> You can do a lot of automation with CI pipelines
[12:41:02] <ikke> from linting to unittests to automated deployments and more
[12:42:19] *** Joins: mokulus (~mokulus@user/mokulus)
[12:42:41] *** Quits: dshikoh (~dshikoh@user/dshikoh) (Ping timeout: 265 seconds)
[12:43:36] <aak> Alright... Thanks for your input :-)  Also.. any recommendations for OnPrem git-server solution? Requirement is that it has to be hosted on a Windows Server 2019... Linux is unfortunately not an option.
[12:44:05] *** Joins: hegstal (~hegstal@2a02:c7f:7604:8a00:1608:5ddb:ace2:2fb3)
[12:44:26] <aak> I have had a look at Azure Devops Server already which looks quiet ok..
[12:47:17] <dscho> Most solutions will target Linux. Meaning: the Windows Server 2019 requirement is a quite serious limitation.
[12:48:01] <dscho> You could of course run any Linux-based solution in a WSL instance, but it is far from ideal.
[12:48:06] <aak> I know... It's a requirement that I hate to have... however it is enforced on us and nothing I can change.
[12:48:30] <dscho> The _only_ option for that (that I know of) is Azure DevOps.
[12:49:23] *** Quits: planetcalls|work (~planetcal@user/planetcallwork/x-8157852) (Ping timeout: 255 seconds)
[12:50:36] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[12:50:51] *** Joins: planetcalls|work (~planetcal@user/planetcallwork/x-8157852)
[12:56:41] <aak> That's what I thought.. Thanks for your time, dscho :)
[12:58:32] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 268 seconds)
[12:59:59] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[13:04:08] *** Joins: adlternative (~adl@117.32.216.79)
[13:15:16] <dscho> You're welcome, aak
[13:15:50] *** Joins: Guest7 (~Guest7@2a02:a460:879d:1:25a3:8784:8e95:8935)
[13:16:42] <Guest7> Hello. I would like to always pass certain options to `git pull`, namely --ff and --rebase. Where can I find the documentation on ~/.gitconfig ? Are these options configurable?
[13:17:01] <ikke> man git config
[13:17:02] <gitinfo> the git-config manpage is available at https://gitirc.eu/git-config.html
[13:17:29] <ikke> pull.rebase
[13:17:40] <ikke> and pull.ff
[13:17:51] <dscho> https://git-scm.com/docs/git-config#Documentation/git-config.txt-pullrebase
[13:17:56] *** Joins: guy_frm_yogaland (~gourab@2409:4062:238a:b172:81b5:6687:ac43:e790)
[13:18:01] <dscho> https://git-scm.com/docs/git-config#Documentation/git-config.txt-pullff
[13:20:14] *** Joins: creme[m] (~creme@2001:470:69fc:105::31c8)
[13:20:24] <aak> Another, unrelated question, regarding submodules. Let's say I have Superproject A with submodule B. Superorject A is tracking branch "master and Submodule B is tracking branch "master"
[13:20:29] *** Parts: creme[m] (~creme@2001:470:69fc:105::31c8) ()
[13:20:46] <Guest7> Thanks!
[13:21:03] <aak> If I now switch to branch "feature\xxx" on A and then back to "master", the submodule is checked ou with the current commit, but in a detached state
[13:21:12] <aak> e.g. "no branch"
[13:21:37] <andi_> what's the differnce between a git merge -x ours origin/whatever compared to git merge -s ours origin/whatever
[13:22:09] <aak> Is there anyway to make sure that the submodule checks out the branch, and not the commit in a detached state?
[13:22:19] *** Quits: guy_frm_yogaland (~gourab@2409:4062:238a:b172:81b5:6687:ac43:e790) (Remote host closed the connection)
[13:23:35] <andi_> aak: not that i know of, the submodule needs to be switched/checkout to a branch by hand and will allways just reference a commit in a detached head
[13:24:01] *** Quits: jazzy (~jaziz@2600:380:8451:9914:a849:127b:48d6:243b) (Read error: Connection reset by peer)
[13:24:17] *** Quits: Guest7 (~Guest7@2a02:a460:879d:1:25a3:8784:8e95:8935) (Quit: Client closed)
[13:24:26] *** Quits: fr0bn1c (~frobnic@87.123.58.98) (Ping timeout: 268 seconds)
[13:25:06] *** Joins: Industrial[m] (~industria@2001:470:69fc:105::eb9)
[13:25:11] *** Quits: madewokherd` (~urk@65-128-250-224.mpls.qwest.net) (Read error: Connection reset by peer)
[13:26:14] <aak> Is there a particular reason why it is made in that way? Am I using submodules incorrectly maybe?
[13:26:54] <aak> I just submodules for libararies that are common in multiple projects and should be able to be updated from multiple project
[13:27:27] <aak> use*
[13:27:52] <andi_> aak: probably you want to use a dependency manager for this?
[13:32:11] <aak> maybe I do..
[13:33:35] <andi_> aak: what we use submodules for is slowly moving sdk's that won't change often. working with submodules in your day to day life is not that funny
[13:34:48] *** Quits: mokulus (~mokulus@user/mokulus) (Quit: WeeChat 3.2)
[13:35:05] *** Joins: jimklimov1 (~jimklimov@ip-86-49-254-149.net.upcbroadband.cz)
[13:35:06] *** Joins: mokulus (~mokulus@user/mokulus)
[13:36:08] *** Joins: unluckyshrubbery (~unluckysh@097-069-164-025.res.spectrum.com)
[13:36:26] <aak> Probably need to review the way we are using then... it's not for complete libararies as such, but files that are shared in multiple projects...
[13:36:43] <aak> But I can see that it is not convenient to use submodules for that
[13:37:42] <andi_> aak: we have the same problem, we have interface files used in different repositories and added them to the repos via a "shared" submodule
[13:38:02] *** Quits: jimklimov (~jimklimov@ip-86-49-254-149.net.upcbroadband.cz) (Ping timeout: 245 seconds)
[13:38:55] <andi_> and working with/on them is not very pleasant
[13:46:22] *** Quits: theoceaniscool (~theoceani@93.177.120.255) (Ping timeout: 245 seconds)
[13:47:33] *** Joins: theoceaniscool (~theoceani@93.177.120.255)
[13:47:42] *** Quits: dscho (~dscho@cgn-89-1-214-95.nc.de) (Quit: Ping timeout (120 seconds))
[13:49:16] *** Quits: ykrons (~guillaume@62.192.23.101) (Ping timeout: 272 seconds)
[13:52:19] *** Joins: dshikoh (~dshikoh@user/dshikoh)
[13:52:42] *** Quits: chexum (~chexum@gateway/tor-sasl/chexum) (Ping timeout: 244 seconds)
[13:55:03] *** Joins: chexum (~chexum@gateway/tor-sasl/chexum)
[13:59:56] *** Quits: chexum (~chexum@gateway/tor-sasl/chexum) (Ping timeout: 244 seconds)
[14:04:21] *** Joins: AnapodoPsalidi (~AnapodoPs@2a02:587:2910:6a35:89f7:63b4:63d0:77dc)
[14:06:53] *** Joins: chexum (~chexum@gateway/tor-sasl/chexum)
[14:07:51] *** Quits: mokulus (~mokulus@user/mokulus) (Quit: WeeChat 3.2)
[14:07:52] *** Quits: AnapodoPsalidaki (~AnapodoPs@2a02:587:2910:6a35:5648:9513:2762:b5cd) (Ping timeout: 268 seconds)
[14:17:22] *** Quits: curdlesnoot (~curdlesno@2a03:1b20:1:f410:40::a04d) (Quit: = "")
[14:22:03] <aak> Thanks, andi_ :)
[14:25:05] *** Joins: makara (~sol@196.61.111.63)
[14:25:44] *** Quits: wgrant (~wgrant@n49-176-2-225.meb2.vic.optusnet.com.au) (Ping timeout: 258 seconds)
[14:25:53] <makara> if I checkout a previous commit by hash, im now in a detached head state. How do i return to the tip of the branch if I hadn't pushed it upstream?
[14:26:43] <makara> git checkout -
[14:26:45] <makara> brilliant
[14:27:26] <ikke> Nice, self-service :)
[14:27:26] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[14:27:28] <ikke> !next
[14:27:28] <gitinfo> Another satisfied customer. NEXT!
[14:27:37] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[14:27:43] *** Joins: wgrant (~wgrant@ubuntu/member/wgrant)
[14:28:53] *** Quits: fflam (~mdt@pool-96-253-99-54.rcmdva.fios.verizon.net) (Quit: WeeChat 3.2)
[14:29:26] <aak> what does "git checkout -" actually do?
[14:30:35] *** Joins: jazzy (~jaziz@2600:380:8451:9914:fca6:875f:9a18:2a53)
[14:31:58] *** Quits: gnoo (~gnoo@user/gnoo) (Ping timeout: 244 seconds)
[14:32:36] *** Joins: bambams (~bambams@user/bambams)
[14:32:42] <ikke> checkout the previously checked out branch
[14:32:50] <ikke> it's short for HEAD@{-1}
[14:37:42] <Timvde> Similar to `cd -`
[14:38:01] *** Joins: gnoo (~gnoo@user/gnoo)
[14:38:06] <ikke> yes
[14:40:02] *** Joins: marw (4988ea31b1@knopi.disroot.org)
[14:57:42] *** Joins: mokulus (~mokulus@user/mokulus)
[15:01:49] *** Joins: tcp (~tcp@a109-49-176-4.cpe.netcabo.pt)
[15:01:55] *** Quits: tcp (~tcp@a109-49-176-4.cpe.netcabo.pt) (Client Quit)
[15:02:02] *** Joins: varaindemian (~varaindem@86.124.78.162)
[15:02:09] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[15:04:00] *** Quits: theoceaniscool (~theoceani@93.177.120.255) (Ping timeout: 272 seconds)
[15:05:53] *** Joins: tcp- (~tcp-@a109-49-176-4.cpe.netcabo.pt)
[15:16:40] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Ping timeout: 268 seconds)
[15:24:01] *** Joins: natrys (~natrys@user/natrys)
[15:25:15] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[15:34:44] *** Joins: rsx (~dummy@ppp-188-174-134-157.dynamic.mnet-online.de)
[15:36:02] *** Quits: gnoo (~gnoo@user/gnoo) (Ping timeout: 244 seconds)
[15:36:30] *** Joins: alfredb (fafaMaZd4W@80-219-164-155.dclient.hispeed.ch)
[15:37:14] *** Joins: gnoo (~gnoo@user/gnoo)
[15:42:44] *** Joins: humanface (~humanface@20014C4E1C4C240088E577D97C59FAD8.dsl.pool.telekom.hu)
[15:42:50] <humanface> hi all
[15:43:15] <humanface> I need to use git lfs because github doesn't support files more than 100mb
[15:43:27] *** Joins: jwillikers (~jwilliker@2604:2800:2:a403:fe91:ac3e:5153:1290)
[15:43:48] <ikke> s/support/allow
[15:44:07] <humanface> how will the installation of git lfs happen? and how will the usage look like?
[15:44:35] <humanface> I mean visually in a Sourcetree when I'm using git lfs and there's a big file, then it will be committed as an index instead of a file?
[15:44:56] <ikke> https://docs.github.com/en/github/managing-large-files/versioning-large-files/about-git-large-file-storage
[15:45:03] *** LdK13 is now known as Run
[15:45:12] <ikke> a file that acts as a reference
[15:45:28] *** Run is now known as CarloWood
[15:46:09] <humanface> can I accidently do something wrong with installing/using git lfs?
[15:46:22] *** Quits: varaindemian (~varaindem@86.124.78.162) (Ping timeout: 246 seconds)
[15:46:36] <humanface> like merging, merge committing in normal git usage, which is also very dangerous process
[15:47:59] *** Quits: chexum (~chexum@gateway/tor-sasl/chexum) (Quit: -)
[15:48:04] <humanface> ikke
[15:48:32] <ikke> I have not used LFS myself, so I'm not aware of any pitfalls
[15:51:49] *** Quits: planetcalls|work (~planetcal@user/planetcallwork/x-8157852) (Quit: Leaving)
[15:53:56] *** Joins: darkbit (~db@152.32.99.67)
[15:53:57] *** CarloWood is now known as server
[15:54:06] *** server is now known as Guest6474
[15:54:11] *** Guest6474 is now known as CarloWood
[15:55:24] *** Joins: beshr (~beshr@78-72-246-187-no2006.tbcn.telia.com)
[15:55:24] *** Quits: beshr (~beshr@78-72-246-187-no2006.tbcn.telia.com) (Changing host)
[15:55:24] *** Joins: beshr (~beshr@user/beshr)
[16:00:33] *** Quits: beshr (~beshr@user/beshr) (Read error: Connection reset by peer)
[16:08:38] *** Quits: lgc (~lgc@user/lgc) (Quit: WeeChat 3.2-dev)
[16:10:52] *** Joins: goldfish (~goldfish@user/goldfish)
[16:18:41] <humanface> ikke I have installed git lfs and now I can't push anything....
[16:18:54] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 255 seconds)
[16:25:27] *** Quits: aak (~aak@D4258924.rev.sefiber.dk) (Quit: Client closed)
[16:27:05] <pcarphin> humanface errors do you get when you try to push?
[16:27:29] <pcarphin> *what errors do you get ...
[16:27:29] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[16:27:41] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[16:29:02] <humanface> no errors
[16:29:09] <humanface> Sourcetree doesn't show anything
[16:29:15] <humanface> just Pushing to .... .git
[16:29:21] <humanface> and it runs forever
[16:29:36] <humanface> pcarphin
[16:31:14] <humanface> ok I'm fully stuck right now
[16:31:19] <humanface> and can't work further...
[16:33:17] *** Joins: beshr (~beshr@78-72-246-187-no2006.tbcn.telia.com)
[16:33:17] *** Quits: beshr (~beshr@78-72-246-187-no2006.tbcn.telia.com) (Changing host)
[16:33:17] *** Joins: beshr (~beshr@user/beshr)
[16:33:36] <humanface> ok now I can see that I successfully fucked over my entire file structure...
[16:33:55] <humanface> all of my videos got converted to 1 Kb mp4 files
[16:34:11] <humanface> I congratulate to myself, very good work indeed
[16:34:35] <humanface> so what the actual fuck should I do now pcarphin
[16:34:46] <humanface> should I commit and push suicide?
[16:35:23] <ikke> Did you read anything about how LFS works?
[16:35:42] <humanface> https://git-lfs.github.com/
[16:35:46] <humanface> I have read this...
[16:36:04] <humanface> but it has no informations about basically anything
[16:36:05] *** Joins: Vonter (~Vonter@user/vonter)
[16:37:17] <humanface> so the things I have done during my agony:
[16:37:34] <humanface> installed git lfs from this site: https://git-lfs.github.com/
[16:37:44] <humanface> used git lfs track "*.so"
[16:37:55] <humanface> used git add .gitattributes
[16:38:21] <humanface> then I tried push, and it didn't gave me errors, it just ran forever
[16:38:27] <humanface> then I cancelled
[16:38:32] <ikke> Did you run git lfs install?
[16:38:43] <ikke> https://git-lfs.github.com/
[16:38:44] <humanface> I used the exe installer
[16:38:54] <ikke> Yes, but you need to run that command as well
[16:39:16] <ikke> "Download and install the Git command line extension. Once downloaded and installed, set up Git LFS for your user account by running: "
[16:39:34] <humanface> well, it was not clear for me that I need also to run that thing...
[16:39:41] *** Joins: drogas (~drogas@jump2.jet.uk)
[16:39:54] <ikke> It seems pretty clear to me
[16:40:00] <humanface> ok, it was not clear for me
[16:40:22] <humanface> so lets jump this again, I used the exe installer
[16:40:33] <drogas> So I am on branch B and made some changes, but the changes aren't supposed to go into branch B, so I created another branch, A, how do I change to the new branch and push the changes?
[16:40:47] <humanface> [14:07:43] <humanface> used git lfs track "*.so"
[16:40:48] <humanface> [14:07:54] <humanface> used git add .gitattributes
[16:40:57] <humanface> tried push, didn't gave me errors, just ran forever
[16:41:01] <humanface> then I cancelled
[16:41:14] <humanface> ran git lfs migrate info
[16:41:29] <henk> drogas: git checkout A; git push
[16:41:40] <humanface> then I ran git lfs migrate import --include="*.mp3, *.so"  because I realised that .mp4 files are also large
[16:41:42] <drogas> well when I do git branch
[16:41:47] <henk> drogas: with sufficiently recent git: s/checkout/switch/
[16:41:51] <drogas> the branch I created on gitlab doesn't show up
[16:41:55] <humanface> then now I ran git lfs install
[16:42:02] <ikke> drogas: you need to run git fetch
[16:42:16] <ikke> most commands only operate on your local repository
[16:42:25] <humanface> ikke and pushing is still not working
[16:42:28] <humanface> so now what to do?
[16:44:25] <drogas> soI ran git fetch still nothing
[16:44:55] <henk> drogas: what exactly is your question right now?
[16:45:03] <humanface> ikke I don't really want to redo the past months work if it can be avoided
[16:45:23] <humanface> I'm pretty nervous right now if I did something really wrong
[16:45:27] <ikke> humanface: I assume you ran `git lfs install` this time?
[16:45:31] <humanface> yes
[16:45:35] *** Joins: Ody[m] (~odyinthes@2001:470:69fc:105::bfdf)
[16:45:40] <drogas> my question is why the new branch that I created doesn't show up when I do `git branch`
[16:46:00] <henk> drogas: where/how did you create it?
[16:46:09] <humanface> ikke but lfs already did something, because videos were converted to 1kb
[16:46:09] <drogas> I created it on gitlab
[16:46:17] <drogas> I guess I should've done it in command line
[16:46:18] <humanface> but anyway, what to do now?
[16:46:20] <ikke> humanface: please, run that command!
[16:46:29] <humanface> ikke I already run that command....
[16:46:30] <ikke> ok
[16:46:31] <henk> drogas: git branch -r
[16:46:53] <henk> drogas: if you created it in gitlab, itâs a remote branch. by default 'git branch' only shows local branches.
[16:46:59] <ikke> there is a git lfs checkout command
[16:47:25] <ikke> I have no idea why git push is hanging though
[16:47:37] <humanface> ikke I ran git lfs checkout too now
[16:48:49] <humanface> ikke if you don't know that, then I'm pretty fucked
[16:49:10] <drogas> that makes sense.... so I should yeah dmn it that was a mistake
[16:49:16] <drogas> I see all the remote branches now
[16:49:22] <drogas> I should've done it locally and
[16:49:25] <drogas> then pushed it
[16:49:29] <ikke> drogas: should not matter
[16:49:39] <ikke> you can create a local branch based on a remote branch
[16:49:50] <drogas> by git clone?
[16:49:56] <drogas> won't that overwrite everything?
[16:49:57] <ikke> humanface: there are people with more experience with git-lfs, but not me
[16:50:06] <ikke> drogas: who mentioned git clone?
[16:50:11] <humanface> that's why I'm fucked
[16:50:23] <humanface> is there anybody with git lfs experience?
[16:50:29] <henk> drogas: 'git checkout branchname' should checkout a remote branch called 'branchname' as a local branch called 'branchname'
[16:51:13] <humanface> ikke did I accidentally fucked my whole repository, or just the branch I was working on?
[16:52:06] <ikke> Only the commit that you just made
[16:52:35] <ikke> try git lfs checkout for each file that you need
[16:52:36] <humanface> can I somehow purge that? like sending that back to hell, from where it came from
[16:52:43] <ikke> git lfs checkout *.mp4
[16:55:10] <humanface> ikke I can see the files now
[16:55:13] *** Quits: tcp- (~tcp-@a109-49-176-4.cpe.netcabo.pt) (Quit: leaving)
[16:55:16] <humanface> but still can't push...
[16:55:34] <ikke> Do you push with sourcetree or CLI?
[16:55:50] <humanface> with sourcetree, I usually avoid CLI as fire
[16:56:02] <ikke> Well, try it with the CLI
[16:56:05] <ikke> and see what happens
[16:56:10] <ikke> GUIs tend to hide details
[16:56:15] <humanface> what is the command? git push?
[16:56:27] <ikke> yes, try that
[16:56:29] <humanface> is there any parameter?
[16:56:31] <humanface> ok
[16:56:57] <humanface> fatal: The current branch firebase_testing has no upstream branch.
[16:56:57] <humanface> To push the current branch and set the remote as upstream, use
[16:56:58] <humanface>     git push --set-upstream origin firebase_testing
[16:57:03] <humanface> so should I use that command?
[16:57:16] <ikke> yes
[16:57:58] <humanface> ok now it says uploading LFS objects
[16:57:58] *** Joins: debsan (~debsan@2800:810:471:2ee::1000)
[16:57:59] <humanface> great
[16:58:10] <humanface> so far seems something is happening
[16:58:26] <ikke> maybe things are happening in sourcetree as well, but you don't see the details
[16:58:38] *** Joins: tcp- (~tcp-@a109-49-176-4.cpe.netcabo.pt)
[17:00:42] <humanface> ikke ok it seems that pushing has been able to finish
[17:01:17] *** Quits: rkta (~kt@62.113.246.111) (Remote host closed the connection)
[17:01:18] <humanface> now other users of this git should also install git lfs?
[17:01:26] *** Joins: rkta_ (~kt@62.113.246.111)
[17:01:35] *** rkta_ is now known as rkta
[17:02:21] <ikke> yes
[17:03:26] *** Joins: chexum (~chexum@gateway/tor-sasl/chexum)
[17:04:06] *** Joins: nyah (~nyah@90.221.186.180)
[17:05:02] *** Parts: tcp- (~tcp-@a109-49-176-4.cpe.netcabo.pt) ()
[17:06:24] <humanface> ikke and others need to install only the exe from https://git-lfs.github.com/, right?
[17:06:29] *** Joins: theoceaniscool (~theoceani@93.177.120.255)
[17:06:36] <humanface> and they don't need to use anything else
[17:07:20] <ikke> they also need to run git lfs install
[17:08:15] <humanface> ok
[17:10:22] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:11:27] <drogas> okay so I get the error `error: Your local changes to the following files would be overwritten by checkout`
[17:11:31] *** Quits: dshikoh (~dshikoh@user/dshikoh) (Remote host closed the connection)
[17:11:36] <drogas> when I run git check out branchremote
[17:11:49] <ikke> that means that you have uncommitted changes locally
[17:11:53] <drogas> and it points me ot some files I haveed
[17:11:56] <ikke> and git is preventing you from overwriting those
[17:11:57] <drogas> changed*
[17:12:03] <drogas> yes so can I stash them
[17:12:07] <drogas> then change to the new branch
[17:12:12] <drogas> and then commit to the new branch
[17:12:23] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[17:12:25] <ikke> right, but note that popping the stashed changes can lead to conflicts
[17:12:44] *** Joins: ano (~weechat@user/ano)
[17:15:24] <drogas> what do you mean
[17:16:13] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[17:23:01] *** Quits: squirrel (~sq@user/squirrel) (Ping timeout: 265 seconds)
[17:26:50] <ikke> The fact that git alreayd mentioned that changes would be overwritten indicates there is a likelyhood of conflicts
[17:29:17] <drogas> yeah I don't want the new branch which is based on develop to overwrite the files I have made changes in
[17:29:20] <drogas> so what can I do
[17:30:07] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 245 seconds)
[17:31:17] <pcarphin> humanface sorry I couldn't help you more, I just wanted you to post some info so it would be there when ikke got back and I'm also interested in git lfs since I may end up using it at work soon.
[17:31:17] <pcarphin> It seems you have resolved your problem.  While catching up on messages I noticed you said you avoid the command line like fire.
[17:31:17] <pcarphin> I totally understand that but I claim that you would probably be happy to have developed some working knowledge of how to use git in the CLI.  It makes it easier to ask for help, you would be better equipped to deal with problems when something weird happens in source tree.
[17:31:57] <humanface> thank you pcarphin :)
[17:32:08] <humanface> my problem with CLI is that I usually forget the commands
[17:32:17] <humanface> and I don't like to memorize each one all the time
[17:32:24] *** Joins: jetchisel (jetchisel@user/jetchisel)
[17:32:29] <pcarphin> I get it.  Are you on Windows?
[17:32:42] <pcarphin> I think git-bash may have autocompletion.
[17:32:46] <humanface> also if there's a warning, in a GUI it's usually much more "alerting", then in CLI
[17:32:58] <humanface> yes, on Windows, because I'm a gamer and game dev
[17:36:00] <pcarphin> Maybe just try it for a while, do right-click->git-bash here which you should have in the context menu when you right click in empty space.
[17:37:21] <humanface> pcarphin still usually the parameters are not straightforward
[17:37:30] <humanface> some of them uses two -- before parameters
[17:37:41] <humanface> some of them uses one -
[17:38:02] <humanface> sometimes the parameters are one letter long, which can't be memorized so easily
[17:38:19] <humanface> and if you mistype one of them, it can occur a lot of problems
[17:38:48] <humanface> -occur + cause
[17:41:40] <pcarphin> I see how that can be confusing.
[17:42:55] <pcarphin> I can't say that these aren't tedious to memorize and since you don't seem to spend your life in the command line, it may be a bigger task than I thought.
[17:44:23] <drogas> so I stashed
[17:44:30] <drogas> and did git checkout remotebranch
[17:44:33] <drogas> `git status
[17:44:34] <drogas> HEAD detached at origin/p`
[17:44:38] <drogas> what does that mean
[17:46:54] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[17:48:18] *** Quits: gnoo (~gnoo@user/gnoo) (Ping timeout: 244 seconds)
[17:49:12] <pcarphin> But thinking about it, and of course you're free do what you want, I think you would still see a gain from developing some familiarity with git command line.  It would probably reduce your stress level in certain situations.
[17:49:26] *** Quits: cornduck (~cornduck@li1440-61.members.linode.com) (Quit: :V)
[17:49:57] <pcarphin> In all situations come to think of it.
[17:53:34] <pcarphin> drogas it means that there is no "currently checked out branch"
[17:54:04] <drogas> and what does that mean?
[17:54:14] <pcarphin> With git, you are on a commit.
[17:54:19] <drogas> I did git checkout remotebranch and got that
[17:54:29] <drogas> so do I need to commit the changes i had stashed?
[17:54:35] <pcarphin> I say "on this commit" to mean "you are looking at this snapshot of the code"
[17:54:47] <pcarphin> Hold on
[17:55:29] <pcarphin> More explanation:  So you are "on a commit" == "currently checked out version of the repository and its files"
[17:56:20] <pcarphin> Branches can be seen (and are implemented as) pointers to commits.
[17:56:34] <henk> drogas: did you do something like 'git checkout origin/remotebranch'? or just 'git checkout remotebranchname'?
[17:57:03] <drogas> henk you got me
[17:57:06] <drogas> I did the former
[17:57:09] <drogas> did I fuck up?
[17:57:49] *** Quits: PaMeDa (~apauli@dynamic-077-000-119-086.77.0.pool.telefonica.de) (Ping timeout: 265 seconds)
[17:57:49] *** Joins: apauli (~apauli@dynamic-077-008-002-017.77.8.pool.telefonica.de)
[17:58:15] <pcarphin> No
[17:58:21] <pcarphin> What do you want to do
[17:58:34] <henk> nah, itâs cool. you just told git 'show me what the branch called remotebranch on the remote called origin' looks like. git does that but that state has no local name so it tells you it is in 'detached'
[17:58:42] <pcarphin> Do you want to checkout that version of the code and start working from there and start making commits?
[17:59:05] *** Joins: strk (~strk@user/strk)
[17:59:38] <strk> git fetch origin refs/notes/*:refs/notes/* #  ! [rejected]            refs/notes/commits -> refs/notes/commits  (non-fast-forward)
[17:59:41] <henk> drogas: is your stash still there or did you 'pop' it?
[17:59:47] <strk> how do I "rebase" my notes to origin ?
[17:59:48] <henk> (or 'drop' it)
[18:00:33] <drogas> pcarphin yes! I want the new remotebranch to be in my local and then start to commit changes to it
[18:00:53] <drogas> henk I just did git stash, haven't touched it since
[18:00:57] <pcarphin> Is there a local branch with the same name as the remote branch?
[18:01:14] *** Joins: mikail (~mikail@2a02:c7f:bd83:fd00:55cf:122f:957a:f66f)
[18:01:44] <pcarphin> Do `git branch` and see if it's there.
[18:02:51] <drogas> `* (HEAD detached at origin/....) ` I am getting that when I run git branch
[18:03:04] <drogas> but I guess it should say `* remotebranchname`
[18:03:07] <pcarphin> No
[18:03:08] <ikke> git checkout <branchname> without origin/ prefixed
[18:03:19] <pcarphin> That's the info I wanted
[18:03:30] <pcarphin> That means you can do what ikke just suggested
[18:03:37] *** Quits: apauli (~apauli@dynamic-077-008-002-017.77.8.pool.telefonica.de) (Ping timeout: 265 seconds)
[18:04:12] <drogas> perfect
[18:04:29] *** Joins: apauli (~apauli@dynamic-077-000-126-185.77.0.pool.telefonica.de)
[18:04:48] <drogas> `Branch 'ports' set up to track remote branch 'ports' from 'origin'.`
[18:04:51] <pcarphin> Because there is no local branch named `mybranch`, but there is a remote branch named `origin/mybranch`, git will create a branch `mybranch` that points on the same commit as origin/mybranch, and checkout that commit and mark mybranch as the currently checked out branch
[18:05:07] <pcarphin> That's the expected result
[18:05:28] <drogas> so now all the commmits to ports will be on ports from origin?
[18:05:38] <drogas> how can I now push the stashed changes
[18:05:52] <pcarphin> We'll get to your stash in a second
[18:06:30] <pcarphin> So now you have a local branch that is the currently checked out branch and it will "move" as you make commits.
[18:06:47] <pcarphin> Use gitk to see what I mean by "move"
[18:07:13] <drogas> what is gitk
[18:07:14] <pcarphin> After you make commits you push.  Only committed changes get pushed.
[18:07:27] <drogas> yes the last point I am aware
[18:07:41] *** Joins: robzy (~robzy@148.252.132.62)
[18:07:41] <pcarphin> It's a GUI browser for your git repos.  I recommend it as a learning tool
[18:07:55] <drogas> as long as my commits are pushed to the right repo
[18:08:08] <pcarphin> Ok, so now that we are on the right commit, we can bring back the stashed changes.
[18:08:22] <pcarphin> You can do `git stash apply`
[18:08:50] <pcarphin> And your stashed changes will be brought back as uncommitted changes.  You need to make a commit before those changes can be pushed.
[18:10:04] *** Joins: gnoo (~gnoo@user/gnoo)
[18:10:46] <drogas> perfect
[18:10:49] <drogas> now I get it
[18:10:51] <pcarphin> Now after you make commits, ports and origin/ports won't point to the same commit.  When you push, the required commits will be transferred and a request for the server to update where it's ports branch points will be made.  If that succeeds, you'll see that origin/ports now points to the same commit.
[18:14:47] <drogas> is that done automatically
[18:14:53] <drogas> usually I do git commit and git push
[18:14:55] <drogas> and all is well
[18:14:59] <pcarphin> Yeah
[18:15:00] *** Quits: jazzy (~jaziz@2600:380:8451:9914:fca6:875f:9a18:2a53) (Ping timeout: 255 seconds)
[18:15:07] <drogas> or is this the behind the scenes explanation
[18:15:34] <pcarphin> More behind the scenes
[18:15:42] *** Joins: madewokherd (~urk@65-128-250-224.mpls.qwest.net)
[18:15:43] <drogas> which I appreciate cause I thought ports and origin/ports were the same
[18:16:10] <pcarphin> But you may find it interesting to open gitk before and after the push to really "see" it.
[18:16:39] <strk> when I add `push = +refs/notes/*:refs/notes/*` in my remote section in git config, branches are not pushed anymore
[18:16:47] *** Joins: haymawk (~haymawk@13.82.0.179)
[18:16:52] <strk> tried to fix it with `push = +refs/heads/*:refs/remotes/origin/*` but then *all* branches are always pushed
[18:17:05] <strk> how do I ensure only the currently checked-out branch is pushed ?
[18:17:51] <pcarphin> Just do `git push` with no config at all
[18:18:09] <strk> then notes are not pushed
[18:18:43] <pcarphin> do you have stuff in you gitconfig from the attempts that you described above?
[18:19:08] <strk> before I started (all happy) I only had fetch = +refs/heads/*:refs/remotes/origin/*
[18:19:18] <strk> then I added fetch = +refs/notes/*:refs/notes/* (still happy)
[18:19:32] <imMute> offby1: sorry I ghosted yesterday - as BtbN said, I think it's caused by the squash merge.  If there were conflicts, I'm guessing that the other guys merged the main branch into their feature branch (where they got and fixed conflicts) and then the result was merged into main via a squash commit, so that squash would have the conflict fixes as a part of it.
[18:19:32] <strk> when I added `push = +refs/notes/*:refs/notes/*` I started being unhappy :)
[18:20:02] <imMute> offby1: I'd expect their feature branch (if it still exists) to show that main->feature merge, but most people delete the feature branch after completing the MR, so that might be why you don't see it.
[18:20:17] <strk> pcarphin: I can remove the `push` line again, but then I'd have to be explicit when pushing notes
[18:20:22] <offby1> ah, but the feature branch still exists, and has no merge on it -- that's the mystery
[18:20:43] <imMute> offby1: if yout still have a origin/their-feature-branch branch around, it might not be pruned - try git fetch --prune and see if that removes the remote tracking branch.
[18:20:44] <offby1> the actual merge commit is floating around out there with no ref pointing to it, nor to any child of it
[18:20:47] <strk> I guess this is similar to pushing tags, with the only difference that for tags I have a --tags option to push
[18:21:00] <pcarphin> git push <remote> <branch> will fill in with the only remote if there is just one remote and for the branch, the currently checked out branch
[18:21:23] *** Quits: oxymoron93 (~oxymoron9@212.62.38.106) (Quit: Client closed)
[18:22:16] <pcarphin> I'm not the best person to help you for this strk, I don't know much about the kind of configurations you're doing.
[18:22:20] <strk> yes, being explicit with the push does work
[18:22:44] <pcarphin> What I meant is that if you omit those parameters they are deduced
[18:23:35] <imMute> offby1: hmm, if their feature branch still exists, I'd expect to see the main->feature merge in it.   I dunno how the feature branch would have merged into main without it
[18:23:51] <offby1> nor would I! Hence my question
[18:24:43] <imMute> maybe ask the other guys what steps/commands they did?
[18:24:43] <offby1> it's as if they merged from main to the feature branch, then squashed that merge commit into main, and then rewound the feature so that it's back to where it was before the merge
[18:24:48] <strk> I loose the deduction if I specify a `push` in the config
[18:24:58] *** Joins: thiago (~thiago@2601:1c0:4501:635c:7e90:ae00:4287:541b)
[18:25:03] <offby1> I did ask them, they don't know enough about git to articulate.  They did all this through the Azure Devops WebUI
[18:25:39] <offby1> I suspect this is simply what Azure DevOps does, when the main branch's policy is "always squash"
[18:25:51] <offby1> ... and then the feature branch gets merged via a pull request
[18:26:09] <imMute> offby1: they fixed the merge through the web UI too?   I didn't know you could do that, but it's possible tht the confict fixes were done *as* the squash was happening.  the ADO backend would be able to do that without necessarily touching the feature branch.  I definitely wouldn't do that though
[18:26:11] <pcarphin> strk isn't the goal of your specification in the config to get the same thing as the deduction?
[18:26:21] <offby1> yes, they resolved the conflicts through the web UI
[18:26:42] <imMute> offby1: that's probably it then.  I've never used that workflow, but I could see how it could happen
[18:26:56] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:27:22] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[18:27:24] <imMute> offby1: in my workflows, if the feature can't cleanly be merged to main, the MR would be blocked until you merge main->feature on your local checkout, fix the conflicts and push taht back to your branch.
[18:27:33] <offby1> me too
[18:27:50] <offby1> what's irksome is that there's effectively no record of the actions that they took to fix the conflicts
[18:28:06] <imMute> yeah. that's really annoying.  and like a third of the reason I *hate* squash merging
[18:28:34] <imMute> the *only* valid reason for wanting squash merges (to keep the history "cleaner") is easily done without squashing and using --first-parent when looking at the git log.
[18:28:50] <offby1> huh, I never do that; I should try it out
[18:29:00] <strk> pcarphin: goal is deduction + notes
[18:29:07] <offby1> 'course that presupposes that people always do their merges "the right way", doesn't it?
[18:29:41] <imMute> offby1: if you force MRs for merging into main in ADO, that literally can't be a problem.
[18:32:06] *** Quits: Xenguy (~Xenguy@devuan/developer/Xenguy) (Ping timeout: 255 seconds)
[18:33:19] <offby1> imMute: can you say that again, using different words? :-) It sounded important but I didn't understand it
[18:34:09] <imMute> so your concern is that if someone merges feature->main and then fast forwards main to that merge commit, then it'll be "backwards" and --first-parent will follow the wrong path, yes?
[18:35:24] <offby1> I guess
[18:35:46] <offby1> maybe I should just create a little repo and try stuff out
[18:36:10] <imMute> offby1: so in ADO you can set up branch policies for the main branch, so that the *only* way to commit to main is to use an MR (no one can push directly to it).  and the MR will always merge with main as the first parent.   so the situation I described can't happen
[18:37:09] *** Joins: kaisyu (uid37155@id-37155.charlton.irccloud.com)
[18:39:07] <offby1> aaah
[18:39:29] <offby1> I think they call 'em "Pull Requests" not "Merge Requests" but I'm brand-new to ADO
[18:41:08] <imMute> sure. PRs and MRs are the same thing, just different names.
[18:41:41] *** Joins: jinsun_ (~quassel@user/jinsun)
[18:41:59] *** Quits: jinsun_ (~quassel@user/jinsun) (Client Quit)
[18:42:42] *** Joins: varaindemian (~varaindem@86.124.78.162)
[18:48:27] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 268 seconds)
[18:50:04] *** Quits: mingdao (~mingdao@wireguard/tunneler/mingdao) (Quit: leaving)
[18:50:13] *** Joins: mingdao (~mingdao@wireguard/tunneler/mingdao)
[18:50:33] *** Quits: gco (~gco@2601:647:5a00:524:1423:752:a19e:3b8b) (Ping timeout: 255 seconds)
[18:53:00] *** Joins: dshikoh (~dshikoh@user/dshikoh)
[18:54:29] *** Joins: arcatech (~arcatech@user/arcatech)
[18:57:01] *** Quits: structoha1 (~structoha@gateway/tor-sasl/structoha) (Ping timeout: 244 seconds)
[18:58:03] *** Quits: gnoo (~gnoo@user/gnoo) (Ping timeout: 244 seconds)
[19:00:44] *** Quits: varaindemian (~varaindem@86.124.78.162) (Quit: Client closed)
[19:01:41] *** Joins: zumba_addict (~zumba_add@2601:240:4500:8320:80dc:d303:e33a:f57f)
[19:05:02] *** Quits: pulse (~pulse@user/pulse) (Remote host closed the connection)
[19:05:24] *** Joins: pulse (~pulse@user/pulse)
[19:06:50] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[19:08:01] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[19:08:35] *** Quits: mikail (~mikail@2a02:c7f:bd83:fd00:55cf:122f:957a:f66f) (Remote host closed the connection)
[19:13:14] *** Joins: mikail (~mikail@90.212.77.3)
[19:15:07] *** Quits: darkbit (~db@152.32.99.67) (Quit: WeeChat 3.1)
[19:18:10] *** Quits: madewokherd (~urk@65-128-250-224.mpls.qwest.net) (Quit: If your computer stops responding for a long time, turn it off and then back on.)
[19:27:30] *** Joins: varaindemian (~varaindem@86.124.78.162)
[19:27:55] *** Joins: gnoo (~gnoo@user/gnoo)
[19:28:28] <canton7> GitHub uses PR, GitLab uses MR, for instance. They're the same thing
[19:31:47] *** Joins: guy_frm_yogaland (~gourab@2409:4062:238a:b172:74a9:45e8:dabe:f617)
[19:32:19] <offby1> "Democritus called it atoms. Leibniz called it monads. Fortunately, the two men never met, or there would have been a very dull argument."
[19:32:35] *** Quits: ikke (~kevin@alpine/developer/ikke) (Ping timeout: 255 seconds)
[19:44:24] *** Quits: varaindemian (~varaindem@86.124.78.162) (Quit: Client closed)
[19:45:14] *** Quits: robzy (~robzy@148.252.132.62) (Quit: Client closed)
[19:45:30] *** Joins: jokoon (~eio@2a01:e34:ec40:50d0:c0bc:b71d:1017:449b)
[19:48:10] *** Joins: madewokherd (~urk@comcast.codeweavers.com)
[19:52:45] *** Joins: lucasb (uid333435@id-333435.stonehaven.irccloud.com)
[19:53:50] *** Quits: lucasb (uid333435@id-333435.stonehaven.irccloud.com) (Client Quit)
[19:55:41] *** Quits: gnoo (~gnoo@user/gnoo) (Quit: gnoo)
[19:55:47] *** Joins: gnooooo (~gnoo@user/gnoo)
[19:58:04] *** Quits: gnooooo (~gnoo@user/gnoo) (Remote host closed the connection)
[19:58:32] *** Joins: gnooooo (~gnoo@user/gnoo)
[19:59:04] *** Quits: adlternative (~adl@117.32.216.79) (Ping timeout: 246 seconds)
[19:59:51] *** Joins: ikke (~kevin@alpine/developer/ikke)
[20:00:30] *** Quits: gnooooo (~gnoo@user/gnoo) (Client Quit)
[20:00:59] *** Quits: jokoon (~eio@2a01:e34:ec40:50d0:c0bc:b71d:1017:449b) (Quit: Leaving)
[20:08:08] *** Quits: Masklin (~joel@93.182.183.85) (Quit: Konversation terminated!)
[20:16:16] *** Joins: Null_A (~null_a@2601:645:8700:2290:e9c6:7ad4:aa07:6319)
[20:25:43] *** Joins: azed (~azed@154.108.65.60)
[20:26:00] *** Joins: arcatech (~arcatech@user/arcatech)
[20:29:16] <TomyWork> they probably would have agreed, since both words essentially mean the same
[20:30:04] *** Joins: gnoo (~gnoo@user/gnoo)
[20:31:44] <TomyWork> anyway, a question about "replace" objects. I'm looking for a way to use them to graft on some history from a different repository that was just copied over and checked in without history about 8 years ago
[20:33:23] <TomyWork> before I go hunting for that old SVN repo, what's a good way to do that? can I just replace one commit A by a merge commit M whose parents are A and the old repo's entire history?
[20:33:42] <TomyWork> or will that create a cycle?
[20:37:00] *** Joins: skapata (~Skapata@user/skapata)
[20:39:05] *** Joins: keypusher (keypusher@user/keypusher)
[20:39:38] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:42:47] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[20:43:19] *** Joins: sgn (~sgn@user/sgn)
[20:43:27] <imMute> it will definitely rewrite history, but it might be doable
[20:43:55] <imMute> personally, I wouldn't bother with it unless you really really want that old history (and the tool to port the SVN repo preserves enough info, some don't I think)
[20:44:21] *** Joins: Betal (~Beta@user/betal)
[20:46:57] *** Quits: kaisyu (uid37155@id-37155.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[20:47:29] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:50:02] *** Quits: rsx (~dummy@ppp-188-174-134-157.dynamic.mnet-online.de) (Quit: rsx)
[20:51:17] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Remote host closed the connection)
[20:51:52] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[20:55:30] *** Quits: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e) (Ping timeout: 240 seconds)
[20:56:39] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Ping timeout: 265 seconds)
[20:57:06] *** Joins: lightstalker (~BT@user/lightstalker)
[20:58:16] *** Joins: troyt (~troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e)
[20:58:44] *** Joins: calla (~calla@modemcable132.7-177-173.mc.videotron.ca)
[21:02:28] *** Quits: ikke (~kevin@alpine/developer/ikke) (Ping timeout: 272 seconds)
[21:03:25] *** Quits: calla (~calla@modemcable132.7-177-173.mc.videotron.ca) (Ping timeout: 265 seconds)
[21:03:41] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[21:06:53] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[21:07:59] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Ping timeout: 255 seconds)
[21:10:01] *** Joins: orbyt (~textual@172.92.4.78)
[21:10:22] *** Joins: arcatech (~arcatech@user/arcatech)
[21:10:57] *** Joins: menace (~someone@user/menace)
[21:12:45] <menace> hey, is there a software, which is able to provide a  distributed git service (distributed as in HA)? without webinterface or ticketing system, but the HA-part should be good. :) does anyone know sth like this?
[21:16:57] <bremner> menace: gitolite supports some HA features via mirroring
[21:16:57] <imMute> git itself?  every clone of the repo is a full backup of it.
[21:17:56] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[21:18:35] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 258 seconds)
[21:18:40] *** Quits: rfuentess (~rfuentess@static-5-51-117-151.ftth.abo.bbox.fr) (Remote host closed the connection)
[21:18:43] *** Quits: guy_frm_yogaland (~gourab@2409:4062:238a:b172:74a9:45e8:dabe:f617) (Remote host closed the connection)
[21:19:01] <menace> yes, but there's no git software which automatically triggers pushes to other git repositories if the repo receives data
[21:19:30] <imMute> gitolite can run post-receive hooks, which could push to further mirrors
[21:19:41] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[21:20:31] *** Quits: dshikoh (~dshikoh@user/dshikoh) (Quit: Konversation terminated!)
[21:20:38] <menace> but you cannot make any guarantees, if there's midtransaction a break, or how they determine, IF they have different states, which states the correct one, do they?
[21:21:07] <imMute> that is true.  a periodic pull on the 2nd host could mitigate alot of that.
[21:21:15] <humanface> were you a phantom, menace, a long time ago, in a galaxy far, far away?
[21:21:22] <imMute> but if you're at that point, you might want to look into SaaS solutions like gitlab or azure devops
[21:21:25] <menace> then you would have a single master, i meant HA in the sense of multimaster
[21:21:53] <menace> humanface, no more like dennis the menace who badgered mr wilson back in the comic tv series
[21:22:19] <humanface> ohh
[21:22:34] *** Joins: guy_frm_yogaland (~gourab@2409:4062:238a:b172:74a9:45e8:dabe:f617)
[21:22:48] <menace> imMute, i am thinking about gitlab, but it also has a metric ton of other stuff which i get than as dependency, therefore i am looking for a git-multi-master-only-git-protocol software. if there's none, that's okay also
[21:22:50] <s17> hey, mr willlllllson...!
[21:22:54] <menace> haha :D
[21:22:58] <menace> yeah, that was great
[21:23:14] <menace> i wonder if there's a torrent of the series somewhere
[21:23:16] <s17> I used to run home after school so that I could DtM on time
[21:23:25] <s17> catch*
[21:23:32] <menace> wasn't there also a crossover with some cats on a junkyard or sth?
[21:24:09] <imMute> menace: yeah, that kind of HA and *not* having all the other stuff probably doesn't exist.  you can probably disable the parts you don't need. I know ADO has some flexibility like that, I dunno about gitlab.
[21:25:01] <menace> ADO?
[21:25:06] <s17> there was Heathcliff
[21:25:28] <humanface> I was bringing offtopic into this channel >:D nyihahahaha
[21:26:01] <bremner> menace: in fact triggering pushes to other repos is exactly how gitolite mirroring works
[21:26:23] <imMute> menace: Azure Dev Ops.
[21:26:37] *** Quits: guy_frm_yogaland (~gourab@2409:4062:238a:b172:74a9:45e8:dabe:f617) (Remote host closed the connection)
[21:26:38] *** Quits: theoceaniscool (~theoceani@93.177.120.255) (Ping timeout: 258 seconds)
[21:26:46] <imMute> menace: formerly Visual Studio Team Services (VSTS)
[21:26:47] <menace> yeah, heathcliff! i misremembered that
[21:26:54] <menace> ah
[21:27:08] *** Joins: guy_frm_yogaland (~gourab@2409:4062:238a:b172:74a9:45e8:dabe:f617)
[21:27:44] <menace> sadly in that context i am working currently, CloudServices like Azure/GCP/AWS are not an option. (though i am not naturally against them).
[21:27:59] <menace> thanks for all your input!
[21:28:18] <imMute> menace: fwiw, there's an on-prem version of ADO available.
[21:28:18] *** Joins: theoceaniscool (~theoceani@93.177.120.255)
[21:29:05] <leah2> is there an easy way to show remote repo and hash for each submodule as it is in a tree?
[21:29:13] <leah2> or do i need to assemble this myself...
[21:29:28] <thiago> git submodule foreach should help
[21:29:37] <leah2> thiago: that has dir and sha1, but not remote
[21:30:02] <menace> though i trust Azure and their Cloudoffers pretty much i am somewhat sceptic about any major-cloud stuff onprem... (also with aws, gcp or others). but thanks, at least it's an option
[21:30:22] <thiago> git submodule foreach -q 'echo $name: $sha1 \$(git config --get remote.origin.url)' or something
[21:30:57] *** Joins: ikke (~kevin@alpine/developer/ikke)
[21:31:10] *** Quits: guy_frm_yogaland (~gourab@2409:4062:238a:b172:74a9:45e8:dabe:f617) (Remote host closed the connection)
[21:31:47] *** Joins: guy_frm_yogaland (~gourab@2409:4062:238a:b172:74a9:45e8:dabe:f617)
[21:32:01] *** Joins: hposca (~hposca@node-1w7jr9phoke2u632r204jfqzz.ipv6.telus.net)
[21:33:20] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[21:34:46] *** Quits: mokulus (~mokulus@user/mokulus) (Ping timeout: 272 seconds)
[21:35:51] *** Quits: guy_frm_yogaland (~gourab@2409:4062:238a:b172:74a9:45e8:dabe:f617) (Remote host closed the connection)
[21:36:02] *** Joins: mokulus (~mokulus@user/mokulus)
[21:36:17] *** Joins: guy_frm_yogaland (~gourab@2409:4062:238a:b172:74a9:45e8:dabe:f617)
[21:39:29] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[21:40:08] *** Joins: wtftang (~tang@s01061056117e7f56.cg.shawcable.net)
[21:42:47] *** Joins: sadtaco (~z_@142-196-189-034.res.spectrum.com)
[21:43:48] *** wtftang is now known as tang^
[21:44:15] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Ping timeout: 255 seconds)
[21:46:44] *** Quits: ikke (~kevin@alpine/developer/ikke) (Ping timeout: 252 seconds)
[21:46:57] *** Quits: guy_frm_yogaland (~gourab@2409:4062:238a:b172:74a9:45e8:dabe:f617) (Ping timeout: 255 seconds)
[21:53:44] *** CommunistWolf is now known as CapitalistWolf
[21:54:39] *** Quits: TomyWork (~TomyLobo@p200300e80f133c00c1f741f47462e969.dip0.t-ipconnect.de) (Quit: Leaving)
[21:56:37] *** Joins: nobody_ (~nobody@host-82-54-32-140.retail.telecomitalia.it)
[21:57:13] *** Quits: lightstalker (~BT@user/lightstalker) (Read error: Connection reset by peer)
[22:00:16] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[22:00:23] *** Joins: lightstalker (~BT@user/lightstalker)
[22:00:54] *** Quits: kadobanana (~mud@user/kadoban) (Remote host closed the connection)
[22:01:19] *** Joins: kadobanana (~mud@user/kadoban)
[22:01:51] *** Joins: robzy (~robzy@148.252.132.62)
[22:04:28] *** Joins: Guest984 (~Guest9@43.241.144.126)
[22:04:41] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Ping timeout: 255 seconds)
[22:05:05] *** Quits: gnoo (~gnoo@user/gnoo) (Quit: gnoo)
[22:05:05] *** Quits: lightstalker (~BT@user/lightstalker) (Client Quit)
[22:08:17] *** Joins: gast0n (~g4570n@user/gast0n)
[22:09:17] *** Quits: sadtaco (~z_@142-196-189-034.res.spectrum.com) (Quit: Leaving)
[22:12:03] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[22:14:35] *** Joins: ikke (~kevin@alpine/developer/ikke)
[22:15:02] *** Quits: nobody_ (~nobody@host-82-54-32-140.retail.telecomitalia.it) (Ping timeout: 255 seconds)
[22:17:00] *** CapitalistWolf is now known as CommunistWolf
[22:19:00] *** Quits: ikke (~kevin@alpine/developer/ikke) (Client Quit)
[22:19:22] *** Quits: tang^ (~tang@s01061056117e7f56.cg.shawcable.net) (Ping timeout: 252 seconds)
[22:21:07] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[22:23:23] *** Quits: Null_A (~null_a@2601:645:8700:2290:e9c6:7ad4:aa07:6319) ()
[22:25:39] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Ping timeout: 255 seconds)
[22:26:19] *** Joins: arcatech (~arcatech@user/arcatech)
[22:28:42] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:80dc:d303:e33a:f57f) (Quit: Client closed)
[22:30:51] *** Parts: MercilessDeth (~brad@136.49.61.2) (Konversation terminated!)
[22:30:51] *** Joins: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3)
[22:35:36] *** Quits: azed (~azed@154.108.65.60) (Quit: WeeChat 3.2)
[22:36:03] *** Joins: tang^ (~tang@S01061056117e7f56.cg.shawcable.net)
[22:36:54] *** Joins: ikke (~kevin@alpine/developer/ikke)
[22:37:38] *** Quits: ikke (~kevin@alpine/developer/ikke) (Client Quit)
[22:38:04] *** Joins: ikke (~kevin@alpine/developer/ikke)
[22:38:48] *** Quits: tang^ (~tang@S01061056117e7f56.cg.shawcable.net) (Client Quit)
[22:39:02] *** Joins: tang^ (~tang@S01061056117e7f56.cg.shawcable.net)
[22:39:18] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[22:41:00] *** Quits: tang^ (~tang@S01061056117e7f56.cg.shawcable.net) (Client Quit)
[22:41:05] *** Joins: arcatech (~arcatech@user/arcatech)
[22:41:14] *** Joins: tang^ (~tang@s01061056117e7f56.cg.shawcable.net)
[22:43:03] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[22:55:21] *** Joins: zebrag (~chris@user/zebrag)
[22:59:42] *** Quits: alfredb (fafaMaZd4W@80-219-164-155.dclient.hispeed.ch) (Ping timeout: 252 seconds)
[23:00:04] *** Quits: tang^ (~tang@s01061056117e7f56.cg.shawcable.net) (Quit: Leaving)
[23:00:22] *** Parts: mehwork (~mehwork@98.185.199.35.bc.googleusercontent.com) ()
[23:00:27] *** Joins: alfredb (eSN2r4HKyR@80-219-164-155.dclient.hispeed.ch)
[23:02:35] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[23:03:48] *** Joins: keypusher (keypusher@user/keypusher)
[23:09:18] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 268 seconds)
[23:09:57] *** Joins: absc (~absc@dynamic-adsl-94-34-217-240.clienti.tiscali.it)
[23:11:10] *** Joins: keypusher (keypusher@user/keypusher)
[23:15:16] *** Joins: wwalker (~wwalker@platinum.solid-constructs.com)
[23:16:32] <wwalker> Is there a way that I can see what --push-options were sent with previous pushes (by myself or others)?
[23:16:49] *** Quits: humanface (~humanface@20014C4E1C4C240088E577D97C59FAD8.dsl.pool.telekom.hu) (Quit: Client closed)
[23:17:00] <ikke> I don't think git keeps track of that
[23:17:29] <wwalker> ikke: I kind of figured that.  Thank you.
[23:36:44] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 252 seconds)
[23:37:57] *** Joins: structoha1 (~structoha@gateway/tor-sasl/structoha)
[23:38:53] *** Quits: mokulus (~mokulus@user/mokulus) (Quit: WeeChat 3.2)
[23:40:29] *** Quits: bambams (~bambams@user/bambams) (Ping timeout: 268 seconds)
[23:41:30] *** Quits: theoceaniscool (~theoceani@93.177.120.255) (Ping timeout: 252 seconds)
[23:42:52] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[23:43:16] *** Joins: theoceaniscool (~theoceani@93.177.120.255)
[23:43:50] <sudomann> is it a good idea to have a precommit hook that pulls in changes from a remot ebranch?
[23:44:08] *** Quits: tchan (~tchan@c-98-206-141-238.hsd1.il.comcast.net) (Ping timeout: 255 seconds)
[23:44:16] <ikke> Doesn't sound a good idea to me
[23:44:17] <imMute> no
[23:44:25] <ikke> I don't even see what benefit it would have
[23:44:34] *** Joins: tchan (~tchan@c-98-206-141-238.hsd1.il.comcast.net)
[23:44:36] <ikke> It just makes committing slower
[23:44:38] <imMute> I don't like git automagically messing with my code.  if I want to pull in changes I'll do that myself kthnx.
[23:45:45] <sudomann> Hmm, I'm trying to write a git strategy -  regular commits throughout the day whether the code works or not. Everyone does stuff in their own local branch, regularly pulling in other's changes from a dev branch
[23:46:10] <sudomann> Once they get their local stuff compiling and working, they merge their branch back into the dev branch and push
[23:46:22] <sudomann> That only works if they always have the latest changes from the dev branch
[23:46:22] <imMute> commits because of time passing and not at strategic points sounds like a bad way to use git.
[23:47:16] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[23:47:21] <imMute> consider this: someone is working and goes to commit.  your pre-commit hook fetches and merges in the latest dev.  said merge introduces a conflict.  now the user is wondering why teh commit failed and their code is littered with <<<< ==== >>>> blocks.
[23:47:29] <imMute> it's better for the user to be explicit about doing those merges.
[23:49:38] <sudomann> Alright so i had someone complain about the dev environment wiping out the day's work overnight. Currently trying to devise a strategy that has their work always saved
[23:50:24] <ikke> sudomann: What people usually do is regularly commit, but then afterwards revise the history in something sensical
[23:50:36] <sudomann> So just make it a policy for people to manually merge changes from the shared dev branch, into their working branch
[23:50:51] <imMute> what ikke just said might be workable, but requires the users be familiar with interactive rebasing.  personally, I'd go figure out why the dev environment keeps losing stuff
[23:50:56] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[23:50:58] <sudomann> Not sure how these guys feel about regularly revising git history
[23:51:12] *** Joins: arcatech (~arcatech@user/arcatech)
[23:51:25] <sudomann> I waste a lot of time fiddling with that myself and end up resorting to a GUI
[23:51:40] <ikke> sudomann: depends on whether they think history is valuable, or they just use git as a complicated file sharing protocol
[23:52:14] <imMute> ^^^^
[23:52:39] <imMute> personally, I like rebasing to make the commit history tell a "story" to make it easier to review - you can look at each commit to see what it does, which should be small.
[23:52:56] *** Quits: Guest984 (~Guest9@43.241.144.126) (Quit: Connection closed)
[23:52:58] <imMute> BUT I don't have to commit that way as I'm going, I can rewrite the story after I get done figuring out what it is.
[23:53:06] *** Quits: Samian (~Sami@2620:10d:c091:480::1:6681) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[23:53:10] <ikke> Yeah, well considered and written commits make reviewing code a lot easier
[23:54:08] *** Joins: Null_A (~null_a@2601:645:8700:2290:f850:a5d3:841d:88de)
[23:55:32] <sudomann> oh god, i just asked the team how comfortable they are are with interactive rebasing the first response I got was 0%. Gonna take me longer to come up with a strategy that works for everyone :(
[23:58:19] *** Joins: jimklimov (~jimklimov@ip-86-49-254-149.net.upcbroadband.cz)
[23:58:22] <imMute> for now you could tell them to commit frequently and do the fetch/merge when they're ready.
[23:58:37] <imMute> they *have* to be able to handle merge conflicts, so might as well teach them now.
