[00:01:41] *** Quits: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[00:01:52] *** Joins: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de)
[00:02:19] *** Quits: Guest1778 (~Guest1778@user/Cera) (Ping timeout: 256 seconds)
[00:06:33] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[00:08:44] *** Joins: seninha (~seninha@user/seninha)
[00:09:01] *** Quits: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[00:09:30] *** Joins: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de)
[00:19:27] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[00:19:42] *** Joins: mickey8 (~user@user/mickey)
[00:21:22] *** Joins: plankster (~plankster@user/plankers)
[00:21:43] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[00:24:55] *** Quits: placeb0 (uid283215@id-283215.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[00:25:57] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[00:26:10] *** Joins: econo (uid147250@user/econo)
[00:26:46] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 260 seconds)
[00:30:09] *** Joins: Guest1778 (~Guest1778@cpe-173-174-25-173.stx.res.rr.com)
[00:31:55] *** Quits: Guest1778 (~Guest1778@cpe-173-174-25-173.stx.res.rr.com) (Changing host)
[00:31:55] *** Joins: Guest1778 (~Guest1778@user/Cera)
[00:32:04] *** Quits: caramel_ (~caramel@user/caramel) (Read error: Connection reset by peer)
[00:34:23] *** Joins: caramel (~caramel@user/caramel)
[00:34:53] *** Joins: kariosfox (~kariosfox@89.229.175.242)
[00:36:27] *** Joins: FragmentedCurve (~FC@pool-100-2-232-17.nycmny.fios.verizon.net)
[00:38:17] *** Quits: Guest1778 (~Guest1778@user/Cera) (Quit: Client closed)
[00:38:44] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[00:39:39] *** Quits: z4kpi (~z4kpi@user/zacts) (Quit: Client closed)
[00:46:40] *** Quits: \o\ (~i.am@187.112.46.243) (Quit: a pentium 100 "running" windows 11 trying to play Last of Us II at ps4emu... that's my brain trying understand 0->R->R->R/2R->0)
[00:49:31] *** Quits: am1985 (~AM@cpe-74-72-154-241.nyc.res.rr.com) (Quit: This computer has gone to sleep)
[00:50:14] *** Joins: am1985 (~AM@cpe-74-72-154-241.nyc.res.rr.com)
[00:51:52] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[00:55:20] *** Joins: z4kpi (~z4kpi@user/zacts)
[00:56:24] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[00:58:06] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[01:00:31] *** Joins: vicfred_ (~vicfred@user/vicfred)
[01:02:18] <bollu> What is a spinor? I know what vector and tensor fields are
[01:02:48] <bollu> Mathoverflow gives me things like 'spinor bundle is an associated bundle to a principal Spin(n) (or Spinc(n)) bundle via the spin representation'
[01:02:54] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[01:02:54] *** Joins: paravida (~myChateau@user/paravida)
[01:03:03] <bollu> I don't know what SPin(n) is, nor what an associated bundle, or a principal bundle is
[01:03:10] *** Joins: mickey8 (~user@user/mickey)
[01:03:10] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 260 seconds)
[01:03:43] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[01:03:55] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[01:04:26] *** Joins: Skyz (~Skyz@user/skyz)
[01:04:47] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[01:04:58] *** Joins: Guest1778 (~Guest1778@cpe-173-174-25-173.stx.res.rr.com)
[01:05:01] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[01:05:14] *** Quits: ppw (~ppw@user/ppw) (Ping timeout: 268 seconds)
[01:05:25] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[01:08:38] <bollu> So, what is a spinor? :)
[01:08:50] <confuzeus> textbook first.
[01:09:28] *** Joins: LinearA (~Adit@2405:201:5005:fee5:bd4e:2909:eda1:dcc3)
[01:09:29] <bollu> confuzeus sure. Do you have a recommendation?
[01:09:50] <bollu> confuzeus I've read diffgeo, and haven't seen it in the text I followed. I'm unsure what math text has this stuff
[01:10:06] *** Joins: LinearA1 (~Adit@2405:201:5005:fee5:4c0e:6bc5:b41e:a126)
[01:10:13] <bollu> (I studied diffgeo from do carmo, and then some lee)
[01:10:46] <confuzeus> https://en.wikipedia.org/wiki/Spinor
[01:11:09] <joel135> i have heard clifford algebra is relevant to spinors but i never fully understood it
[01:11:43] <joel135> e1e1 = -1, e1e2 = -e2e1, e2e2 = -1
[01:11:54] <joel135> you have rules like that
[01:12:25] <bollu> confuzeus seriously? wiki is horrendous to study math from. It's fine as a reference
[01:13:20] <confuzeus> i tend to go to references mentioned in the wiki articles and i find them decent enough for definitions
[01:13:37] *** Quits: LinearA (~Adit@2405:201:5005:fee5:bd4e:2909:eda1:dcc3) (Ping timeout: 240 seconds)
[01:14:09] <joel135> that page actually looks pretty good. could be worse
[01:14:17] <bollu> > From a representation theoretic point of view, one knows beforehand that there are some representations of the Lie algebra of the orthogonal group that cannot be formed by the usual tensor constructions. These missing representations are then labeled the spin representations, and their constituents spinors
[01:14:24] <bollu> Why do we know this fact?
[01:15:02] <joel135> what do you mean by "why"?
[01:15:12] <bollu> I mean, which theorem tells us this?
[01:15:38] <joel135> i guess it is proof by example
[01:15:55] <joel135> ... the example being any spin representation :p
[01:15:57] <bollu> so, a spinor is.. what, a representation of the group Spin(n)? Where Spin(n) is the double cover of SO(n)? And it's going to be a double cover because..? the fundamental group is always Z/2Z by bundle nonsense?
[01:15:59] <bollu> :p
[01:16:36] <joel135> i think i know sort of where that double cover comes from
[01:16:38] <bollu> that's an awfully sophisticated definition of what a spinor is, if I even got it right, and doesn't tell me anything of how to "write a spinor down" on paper :(
[01:16:49] <bollu> joel135 do tell!
[01:17:08] <bollu> (the fundamental group of SO(n)* is always Z/2Z by bundle nonsense...)
[01:17:18] <bollu> for n >= 3 or w/e
[01:17:22] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[01:17:46] *** Joins: jalumar (uid392211@id-392211.lymington.irccloud.com)
[01:18:29] <joel135> whereas in matrix algebra you represent a rotation as v |-> Av, in clifford algebra you represent it by v |-> rvr^-1 (see https://en.wikipedia.org/wiki/Rotor_(mathematics) i think)
[01:18:30] *** Quits: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[01:18:53] *** Joins: [-_-] (~fractal@user/---/x-1675478)
[01:19:08] *** moon-child is now known as bowl-of-petunias
[01:19:18] *** bowl-of-petunias is now known as moon-child
[01:19:29] *** Joins: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de)
[01:19:31] *** Quits: am1985 (~AM@cpe-74-72-154-241.nyc.res.rr.com) (Quit: This computer has gone to sleep)
[01:19:37] <joel135> note that (-r)v(-r)^-1 = rvr^-1. this means that r and -r, while being strictly different encodings, represent the same rotation!
[01:20:15] <joel135> so i think this sort of gives you the double cover
[01:20:31] *** Quits: Guest1778 (~Guest1778@cpe-173-174-25-173.stx.res.rr.com) (Ping timeout: 256 seconds)
[01:21:24] <bollu> wait, so is the group Spin(n) the group of rotation  given by v |-> r . v . r^{-1} ? Where the (.) operator comes from the clifford algebra?
[01:21:26] <joel135> (also it may be helpful to know that clifford algebra ≈ geometric algebra, if you're looking for computer tutorials)
[01:21:27] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[01:21:30] <bollu> the group of transformations*
[01:21:31] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8) (Ping timeout: 250 seconds)
[01:21:46] <bollu> joel135 yes, that's where I've encountered it :)
[01:21:52] <joel135> ok :)
[01:22:48] <bollu> Does that statement about Spin(n) being the group of transformations v |-> r . v . r^{-1} make sense?
[01:23:01] *** Joins: Pickchea (~private@user/pickchea)
[01:23:42] <joel135> i don't know any of this for sure, but the set {r | ...} does form a group, and the set {A | ...} does form a group, and the map {r | ...} -> {A | ...} does have kernel Z/2Z (i think)
[01:24:51] <joel135> so i would think that Spin(n) = {r | ...}
[01:25:38] <bollu> right
[01:26:28] <joel135> was the other claim that a spinor is the element of a vector space acted on by Spin(n) ?
[01:26:35] <joel135> (any such vector space)
[01:27:24] <joel135> that would be consistent with this quote from that page:
[01:27:34] *** Quits: Bluefoxicy (~Bluefoxic@c-73-132-244-30.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[01:27:38] *** Quits: [-_-] (~fractal@user/---/x-1675478) (Quit: :))
[01:27:48] <joel135> > Although spinors can be defined purely as elements of a representation space of the spin group (or its Lie algebra of infinitesimal rotations), they are typically defined as elements of a vector space that carries a linear representation of the Clifford algebra.
[01:28:22] *** Joins: Bluefoxicy (~Bluefoxic@c-73-132-244-30.hsd1.md.comcast.net)
[01:28:27] *** Quits: threeisprime (~twoisprim@user/twoisprime) (Ping timeout: 256 seconds)
[01:29:49] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8)
[01:32:38] <bollu> why is the geometric algebra structure a *linear* representation of the clifford algebra?  I thought GA *was* the clifford algebra...
[01:33:13] <joel135> you are right. GA is the clifford algebra.
[01:34:13] <joel135> (modulo physics vs mathematics sign conventions or similar, perhaps)
[01:34:41] *** Joins: threeisprime (~twoisprim@user/twoisprime)
[01:36:36] *** Quits: threeisprime (~twoisprim@user/twoisprime) (Client Quit)
[01:36:50] *** Parts: bourfronti (~main@user/bourfronti) (Using Circe, the loveliest of all IRC clients)
[01:37:42] *** Joins: llorllale (~llorllale@198.98.119.85)
[01:40:37] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[01:40:59] *** kish` is now known as kish`2
[01:41:32] *** kish`2 is now known as kish`
[01:44:34] *** Quits: magla (~gelignite@55d4e921.access.ecotel.net) (Quit: Stay safe!)
[01:45:43] *** Quits: paravida (~myChateau@user/paravida) (Remote host closed the connection)
[01:45:57] *** Quits: specing (~specing@user/specing) (Ping timeout: 240 seconds)
[01:46:33] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[01:47:07] *** Joins: specing (~specing@user/specing)
[01:49:06] *** Quits: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[01:49:18] *** Joins: am1985 (~AM@cpe-74-72-154-241.nyc.res.rr.com)
[01:53:55] *** Quits: bowlofeggs (~bowlofegg@fedora/bowlofeggs) (Quit: WeeChat 3.4)
[01:54:03] *** Joins: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de)
[01:55:37] *** Quits: LinearA1 (~Adit@2405:201:5005:fee5:4c0e:6bc5:b41e:a126) (Ping timeout: 240 seconds)
[01:56:22] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[02:01:53] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:09:00] *** Quits: vicfred_ (~vicfred@user/vicfred) (Quit: Leaving)
[02:10:22] *** Joins: Guest1778 (~Guest1778@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[02:18:33] *** Quits: Skyz (~Skyz@user/skyz) (Quit: Client closed)
[02:19:15] *** Quits: rtsn (~nstr@user/rtsn) (Quit: Lost terminal)
[02:23:35] *** Quits: moog (~moog@107.77.244.68) (Remote host closed the connection)
[02:24:41] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[02:26:18] *** Joins: seninha (~seninha@user/seninha)
[02:28:51] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8) (Ping timeout: 256 seconds)
[02:34:39] *** Quits: z4kpi (~z4kpi@user/zacts) (Quit: Client closed)
[02:36:36] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[02:37:23] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:38:31] *** Joins: vysn (~vysn@user/vysn)
[02:40:48] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:41:01] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[02:45:41] <ProfSimm> In math, if I type "f" for function named f, and it doesn't require arguments, am I referring to it, or running it
[02:45:50] <ProfSimm> As in calculating it
[02:48:45] <mornfall> functions don't run
[02:49:14] <mornfall> also, function without arguments is just a fancy name for a constant
[02:49:36] <mornfall> so if you type 7, do you run it or refer to it?
[02:51:11] *** Quits: trace987 (~trace@ip5f5ad14d.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[02:53:06] *** Joins: ferdna (~ferdna@user/ferdna)
[02:53:14] <somiaj> or maybe clarify what a function without arugments is. In mathematics a function has three things, write as f: A -> B, you need a domain set A, a codomain set B, and some rule/mapping that we usually call f.
[02:53:23] <somiaj> so is 'without arguments' mean that A is the emptyset?
[02:54:00] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: ZNC 1.8.2 - https://znc.in)
[02:54:08] <somiaj> but not when talking about a function, the domain/codomain are also apart of its definition
[02:54:19] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:58:12] *** Joins: Arcorann (~A@user/arcorann)
[02:58:42] *** Joins: soapsudsxx (~soapsudsx@209.221.40.136)
[03:02:44] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 250 seconds)
[03:04:28] <joel135> obviously the number of arguments refers to n, where f : A1 x ... x An -> B (this decomposition isn't unique, but who cares?)
[03:04:54] <joel135> in particular when n = 0 you have f : 1 -> B
[03:06:29] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[03:06:43] <joel135> in call-by-value languages 1 -> B can be used to represent a value of B with side-effeccts
[03:07:06] <Em> so it's like the constant function?
[03:08:21] <joel135> if working with classical set theory rather than effectful computation, then yes and B = (1 -> B)
[03:08:54] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:08:57] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[03:09:05] <joel135> (whatever "classical set theory" might mean precisely...)
[03:09:48] <joel135> f : 1 -> B would serve to delay the effect of evaluation, while f () : B would force evaluation
[03:09:52] <joel135> in CBV
[03:10:03] <joel135> so they're different in that context
[03:10:46] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Remote host closed the connection)
[03:12:45] <ProfSimm> mornfall: the lack of causality annoys me
[03:14:39] <mornfall> (math) functions are not the right framework for thinking about processes
[03:15:20] <mornfall> there are models of computation if that's what you want; lambda calculus is probably the most math-like of the bunch
[03:16:07] <joel135> you can try writing `fun () -> print_endline("hello world")` here https://try.ocamlpro.com/
[03:16:24] <mornfall> functions are all about values, often values that can't be even computed
[03:16:26] <joel135> then try `(fun () -> print_endline("hello world")) ()` or just `print_endline("hello world")`
[03:16:51] <mornfall> yes, you are talking about thunks; this has nothing to do with functions in math
[03:17:01] <joel135> math is broad if you let it be
[03:17:19] <PlanckWalk> Yes, you can apply math to programming.
[03:17:32] <PlanckWalk> But programming functions are not math functions.
[03:17:45] <PlanckWalk> They just happen to share a word.
[03:17:58] <PlanckWalk> (in English)
[03:18:04] <mornfall> i liked it better when they were called subroutines
[03:18:05] <Galois> here's what Coq thinks: https://djao.math.uwaterloo.ca/coq-function.txt
[03:18:20] <joel135> true, programming functions are not math functions, for the most common reading of the word "math functions"
[03:18:22] *** Joins: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[03:18:43] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[03:19:07] <mornfall> words are only useful if people (mostly) agree on their meaning
[03:19:17] <joel135> not absolutely true
[03:19:49] <joel135> but by and large true, yes
[03:19:50] <mornfall> and when you say true…
[03:20:27] <joel135> what then?
[03:21:45] <Galois> perhaps a more interesting question: are two functions equal whenever their values on all inputs are equal?
[03:21:47] <mornfall> nothing; i was just hinting that if we don't agree on words, i can decide that ‘true’ means something else than what is usually meant by ‘true’… but being nice, i better check what you mean by ‘true’? (or not)
[03:22:14] <mornfall> Galois: what else there is to a function, other than its values?
[03:22:39] <Galois> https://github.com/coq/coq/wiki/CoqAndAxioms
[03:22:48] <Galois> if your answer is "yes" then you don't need the Functional extensionality axiom
[03:22:58] <joel135> we can agree on most words by default without forcing others to comply with this use all the time
[03:23:01] <Galois> (or conversely, if you assume the Functional extensionality axiom, then your answer is yes)
[03:23:17] <PlanckWalk> If they have different codomains, they can be different functions.
[03:23:25] <mornfall> do you mean like f : B → A and g : C → A can be the same, despite the different domain?
[03:23:50] <Galois> to be clear, it's this:
[03:23:51] <Galois> Lemma func_ext : forall A B (f g : A -> B), (forall x, f x = g x) -> f = g.
[03:24:54] <mornfall> well, that's a choice you can make… but i'd reckon that it is the standard use
[03:25:15] *** Quits: _________ (~nobody@user/noodly) (Ping timeout: 250 seconds)
[03:25:18] <mornfall> doesn't really make much sense to talk about equality of functions in any other sense?
[03:25:37] <Galois> why you might not want functional extensionality: if you use the definition of a function to evaluate the function, which is fairly common in computer programming, then you might not want to equate different definitions that have equal input/outputs, especially if say their computational complexity or running times is different
[03:26:02] <Galois> now, we just got through saying a math function is not a computer programming function, but in proof checkers like Coq, these two categories tend to start to overlap ...
[03:26:14] <mornfall> sure, but we already agreed that these objects are not math functions
[03:26:28] *** Joins: _________ (~nobody@user/noodly)
[03:26:34] <mornfall> i don't think they do, actually
[03:26:46] <Galois> if you're trying to mathify programming, to do for example provable software correctness, then you need to deal with both things
[03:26:59] <mornfall> yes, but that doesn't make them the same thing
[03:27:06] <PlanckWalk> Yes, but it's not a good idea to say that they're the same thing
[03:27:09] <mornfall> it'd be actually useless to do that
[03:27:27] <Galois> actually it's much more cumbersome to separate function types than to separate equality types
[03:27:28] <PlanckWalk> At best you can say something like the (mathematical) function induced by the (programming) function.
[03:27:34] <mornfall> math functions are useful in programming precisely because they are different from programming functions
[03:27:40] <joel135> Galois> perhaps a more interesting question: are two functions equal whenever their values on all inputs are equal?
[03:27:44] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[03:27:45] <mornfall> if they weren't, what's the point
[03:27:45] <Galois> this is like how the mathematician views 0/0
[03:27:47] <joel135> Galois: i like that question, not in the sense that i would find the answers 'yes' or 'no' (as in 'the answer is 42') interesting or useful, but as in: i would like to know (1) in what contexts is it not appropriate to allow two such functions to be equal, and i would like to know (2) how to make a make a good formal system that approves of treating them as equal (i guess Voevodsky led to advances here)?
[03:27:48] <PlanckWalk> Or computed by or something
[03:28:03] <Galois> the mathematician says "oh just leave 0/0 undefined"
[03:28:14] <Galois> but if you start working with Coq it's much more cumbersome to leave it undefined than to define 0/0 = 0
[03:28:20] <joel135> i like 0/0 because of linear algebra
[03:28:28] <joel135> it is a special case of pesudoinverse
[03:28:42] <joel135> 0/0 = 0 i mean
[03:28:45] <Galois> distinguishing between different kinds of function equality is actually trivial, with setoid equality
[03:29:30] <joel135> is that for me?
[03:29:33] <Galois> no
[03:29:36] <joel135> ok
[03:29:55] <SrPx> Given two already factored numbers, `a` and `b`, is there any fast algorithm to compute their factored sum, `a + b`?
[03:30:25] <Galois> hell no?
[03:30:33] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[03:30:37] <SrPx> hm sorry for asking? lol
[03:31:07] <Galois> well, you could add together powers of 2, and inductively factor any number fast
[03:31:45] <SrPx> fair enough
[03:32:55] <mornfall> well, the technically correct answer is ‘we don't know’ i guess (since we don't actually know factoring is hard)
[03:33:24] <mornfall> (but clearly no such algorithm is known)
[03:34:33] <SrPx> any chance that is possible if `a` and `b` are specifically `p - 1` for a prime `p`? :p
[03:35:01] <Galois> if a = b = p-1 and you know the factorization of p-1 then you know the factorization of a+b = 2*(p-1)
[03:35:15] <Galois> just tack a 2 on to the (known) factorization of p-1
[03:37:09] <mornfall> (or do you perhaps mean factorization of 2p - 1 given one for p - 1?)
[03:37:09] <SrPx> not sure if that is a joke but `a` and `b` are different lol. I see, let me correct my question
[03:37:34] <SrPx> any chance that is possible if `a` and `b` are respectively `p - 1` and `q - 1` for primes `p` and `q`?
[03:37:39] <SrPx> probably no, just to be sure
[03:37:47] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:38:18] <mornfall> SrPx: are you trying to break RSA?
[03:38:25] <Galois> that one doesn't seem to have an obvious answer, but my guess is no
[03:38:33] <mornfall> oh, except you said sum
[03:39:14] <SrPx> I really just want to find the prime factorization of the addition of two numbers that are the predecessors of a prime, given that I already know the factorization of each number individually
[03:39:16] <mornfall> (the product of that form is pretty important)
[03:39:45] <SrPx> was just wondering if the information could be used to do it, but I guess no
[03:40:01] <SrPx> yep, just sum
[03:40:49] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[03:41:49] <PlanckWalk> it would be a pretty major weakness in RSA if we could.
[03:42:21] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 250 seconds)
[03:42:55] <SrPx> PlanckWalk: why?
[03:43:58] <PlanckWalk> Ah nevermind, typo :)
[03:45:22] <ProfSimm> So function with no arguments is a constant.
[03:45:31] <ProfSimm> What if it contains functions not defined yet
[03:45:45] <PlanckWalk> I expect it would be anyway, but not for the reason I mistyped in my scratchpad
[03:47:26] <PlanckWalk> If nothing else, just the fact that lots (possibly all even) numbers can be put into that form.
[03:47:38] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[03:47:55] <PlanckWalk> You could almost certainly recursively factor pretty much anything.
[03:48:56] <SrPx> PlanckWalk: hmm perhaps
[03:48:58] <PlanckWalk> Finding two primes that sum to a given number is fairly easy.
[03:49:18] <PlanckWalk> If you number is odd, then double it
[03:49:53] <SrPx> you need two numbers that are the predecessors of a prime, that sum to a given number, and you must know their factorization
[03:50:02] <PlanckWalk> Yes, that's comparatively easy
[03:50:57] <PlanckWalk> Find two such primes, use ECM or something to discard small factors of p-1, then use the same method to factor any hard remaining factor.
[03:51:17] <SrPx> why? if you're trying to factor a big number (say, 2^127-1), then you need to find two numbers such that `a + b = 2^127-1`. these numbers will be in about same order of magnitude, so you'd still need to factor them, which is still hard. no?
[03:51:19] <PlanckWalk> The remaining factor will generally be substantially smaller.
[03:51:44] <PlanckWalk> The hard part about RSA isn't that the modulus is large, it's that the modulus is large *and has no small factors*
[03:52:48] <PlanckWalk> If you can reduce the factoring of N to factoring two numbers that probably have lots of smaller factors, it's easy.
[03:54:00] <PlanckWalk> (comparatively)
[03:54:29] *** Joins: frost (~frost@user/frost)
[03:56:08] *** Joins: LiftLeft (~LiftLeft@38.123.199.93)
[03:56:28] *** Quits: jalumar (uid392211@id-392211.lymington.irccloud.com) (Excess Flood)
[03:56:35] *** Joins: jalumar (uid392211@id-392211.lymington.irccloud.com)
[03:56:48] <ProfSimm> What i don't understand is, if in math there's no difference between an expression, and computing the expression, why the heck does Coq need 'Compute' to compute.
[03:58:09] <PlanckWalk> Of course there's a difference between an expression and the value of an expression.
[03:58:11] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Quit: Leaving)
[03:58:49] <mornfall> well, there is and there isn't
[03:59:00] <ProfSimm> Heh.
[03:59:07] <PlanckWalk> Although "the" is not entirely right.
[03:59:09] <mornfall> syntactically, sure
[03:59:25] <PlanckWalk> An expression can be evaluated in different contexts
[03:59:53] <PlanckWalk> That can result in different values.
[04:00:04] <mornfall> yeah i think a closed expression was meant
[04:00:30] <mornfall> free variables are an entirely different problem of computing vs ‘being’
[04:00:38] <mornfall> s/of/from/
[04:02:53] <PlanckWalk> Expressions are fundamentally syntactic.  Values are objects of some domain of discourse, and mapping from expressions to domain objects is the job of semantics.
[04:03:02] <ProfSimm> How do we best model a procedure of imperative steps as a math function.    function(world) = {.... } -> returns world'
[04:03:18] <PlanckWalk> There is no one "best" way
[04:03:18] *** Quits: freep (~freepppp@188.4.23.166.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[04:03:28] <ProfSimm> That's a problem
[04:03:31] <PlanckWalk> Nope
[04:03:32] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[04:03:50] <ProfSimm> OK let's not use the word best. But "foundational". Most basic. Through which the others are expressed
[04:03:57] <PlanckWalk> It's just a reflection of the fact that different representations have different properties and different weaknesses and strengths.
[04:04:36] <ProfSimm> Actually I walk that back. world' is a bad idea, it means you need to rebuild the entire world
[04:04:51] <joel135> ProfSimm: if the steps are ordered in a sequence, then you can model it with monads
[04:04:52] <ProfSimm> function (world) = {....} --> set of commands
[04:05:06] <ProfSimm> A bit likq CQRS
[04:05:53] <joel135> (the most prominent (and somewhat pathological?) example of a monad being the `Cont r` monad)
[04:06:43] <ProfSimm> Let's not thnk about monads yet
[04:06:53] <joel135> it's your choice
[04:07:39] <ProfSimm> Well isn't this second idea a good candidate for foundational abstraction:    f(world) -> list of commands
[04:07:40] <joel135> you may also be interested in call-by-push-value
[04:07:56] <ProfSimm> I'm unsure how to express commands that failed here
[04:08:15] <ProfSimm> joel135:  thanks
[04:08:15] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:08:23] <joel135> np
[04:15:18] *** Quits: LiftLeft (~LiftLeft@38.123.199.93) (Ping timeout: 256 seconds)
[04:16:05] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[04:17:00] <arseniiv> joel135: is there a nice introduction into call-by-push-value? I seemes to have tried to read the article but don’t think it was clear enough on its own
[04:17:09] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[04:17:31] <arseniiv> seemed*
[04:18:04] <joel135> i think he (levy) wrote a book on it, largely based on an earlier thesis
[04:18:57] <joel135> iirc he doesn't like the idea of "complex values" anymore so you can skip all mentions of that. this may make it easier.
[04:21:26] <joel135> "Variants of call-by-push-value" (https://youtu.be/bNCgBu7_KrE)
[04:21:51] <arseniiv> ah, okay I’ll search for a book, thanks! I was lucky to encounter this thing here before going to sleep, it was an interesting framework, I think he or someone else used it for or in conjunction with algebraic effects or something, also there was an article that call-by-push-value is dual to something interesting… was it actually call-by-need
[04:21:56] <arseniiv> oh thanks too!
[04:22:21] <joel135> cool :)
[04:22:46] <arseniiv> I think I should read and watch about it later if I collided into it again
[04:23:05] <joel135> sure
[04:23:12] <ProfSimm> joel135: just watching this video :)
[04:23:23] <ProfSimm> You know it's annoying I keep reinventing Haskell when I think about these things
[04:24:10] <joel135> reinvention is good. we all have to rescue our dead haskell from the belly of the whale.
[04:24:38] <arseniiv> I reinvented Markov chains once :[
[04:25:09] *** Quits: arseniiv (~arseniiv@178.214.250.172) (Quit: gone too far)
[04:27:27] *** Joins: LiftLeft (~LiftLeft@mobile-166-172-56-26.mycingular.net)
[04:27:28] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[04:28:57] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[04:29:13] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[04:32:29] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[04:33:31] *** Quits: LiftLeft (~LiftLeft@mobile-166-172-56-26.mycingular.net) (Ping timeout: 256 seconds)
[04:33:53] *** Quits: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net) (Remote host closed the connection)
[04:34:09] *** Joins: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net)
[04:34:12] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[04:35:45] *** Quits: Guest1778 (~Guest1778@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Quit: Client closed)
[04:36:03] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[04:36:38] *** Joins: newpy (~newpy@206.168.231.90)
[04:37:11] <loganlee[gnu]> hello how to draw arms to represent a time in a clock?
[04:40:45] *** Quits: loadedanvils (uid128751@id-128751.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[04:42:37] <tusko> Is convolution fair game here?
[04:43:08] <tusko> I am wondering how I should interpret this problem https://imgur.com/a/3ODClhH
[04:43:35] <tusko> I don't understand why x[n] = \delta[n-1] other than perhaps it represents transmission delay
[04:45:12] <tusko> my deepest apologies https://imgur.com/a/j6l9V1F
[04:45:54] *** Quits: emf (~emf@2620:10d:c090:400::5:322c) (Quit: emf)
[04:45:57] *** Quits: xiaguan (~parsley@2604:180:f1::173) (Remote host closed the connection)
[04:46:31] *** Joins: xiaguan (~parsley@2604:180:f1::173)
[04:47:34] *** Joins: LiftLeft (~LiftLeft@38.123.199.93)
[04:48:16] *** Quits: LiftLeft (~LiftLeft@38.123.199.93) (Max SendQ exceeded)
[04:48:58] *** Joins: LiftLeft (~LiftLeft@38.123.199.93)
[04:49:42] *** Quits: LiftLeft (~LiftLeft@38.123.199.93) (Max SendQ exceeded)
[04:50:10] *** Joins: LiftLeft (~LiftLeft@38.123.199.93)
[04:52:04] <tusko> you just mention convolution and people flee
[05:02:52] <ProfSimm> joel135: I'm lost. Is there explanation of call by push value for idiots
[05:04:15] <isekaijin> How much is known about complex manifolds with boundary?
[05:06:11] <isekaijin> ProfSimm: I'm a certified idiot, and I understood the intuitive explanation of CBPV just fine from PBL's website.
[05:06:32] <ProfSimm> isekaijin: link?
[05:07:02] <isekaijin> https://www.cs.bham.ac.uk/~pbl/papers/index.html
[05:07:31] <isekaijin> Just avoid the denotational semantics nonsense.
[05:08:21] <isekaijin> Programming languages are for actually writing programs! Not for making “models” of them or whatever.
[05:08:22] <ProfSimm> isekaijin: so far that's all I've seen
[05:08:41] <ProfSimm> isekaijin: I wish math was like "we just describe the algorithm in steps"
[05:08:49] <isekaijin> lol
[05:09:19] *** Joins: Cera (~Cera@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[05:09:26] *** Quits: Cera (~Cera@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Changing host)
[05:09:26] *** Joins: Cera (~Cera@user/Cera)
[05:09:52] <Cera> Anyone here used pretextbook before?
[05:09:53] <isekaijin> ProfSimm: Many things in math have the form “We could solve this problem using approach A or approach B. We prove that either approach gives the same result.”
[05:10:01] <ProfSimm> Honestly if it turns out what it is is what I'm already doing it'd be hilarious
[05:10:28] <isekaijin> ProfSimm: So there must be something important about the result, studied for its own sake, regardless of the path you take to reach it.
[05:11:24] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[05:14:03] <isekaijin> Cera: Few things could make typesetting more painful than LaTeX. Writing XML by hand is one of these things.
[05:14:14] <Cera> yeah...
[05:14:36] <ProfSimm> isekaijin: if you had an elevator pitch for what tf cbpv is, what it is
[05:15:10] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[05:15:59] <isekaijin> ProfSimm: “Programming in a call-by-value language is pleasant most of the time, but sometimes you want to suspend a computation. Then you have to use workarounds like defining a local function of zero arguments, which is ugly. Call-by-push-value doesn't have this issue.”
[05:16:28] <ProfSimm> isekaijin: because...
[05:17:02] <isekaijin> Because call-by-push-value distinguishes between the type of a computation and the type of its result.
[05:17:16] <Cera> I was hoping someone knew of a nice guide for pretextbook, but if there isn't one then I'll just move on from trying to make such a book
[05:17:45] *** Joins: seninha (~seninha@user/seninha)
[05:18:09] <isekaijin> I'd just use normal LaTeX, to be honest. Not that I've ever written a whole book.
[05:18:20] <ProfSimm> isekaijin: OK we have a "what is a monad" situation here.
[05:19:49] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[05:19:49] <ProfSimm> isekaijin: I model a language with streams where referring to the stream returns the current (last) value, "x" = 3; if you call "next x" it returns the next value; if you call "next x (...options)" you reconfigure the stream and get next
[05:20:00] <ProfSimm> isekaijin: how is this different than CBPV
[05:20:33] <isekaijin> Just read the damn paper.
[05:20:42] <ProfSimm> isekaijin: you linked me to 50 papers
[05:21:12] <isekaijin> Not all of them are about CBPV. Find those that are about CBPV and read them.
[05:21:39] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[05:21:39] <isekaijin> Your web browser has a “find text in page” function, right?
[05:21:45] <ProfSimm> no
[05:21:50] <isekaijin> Aw, too bad.
[05:21:56] <isekaijin> Then use a web browser that doesn't suck.
[05:23:21] <ProfSimm> isekaijin: you don't know what it is
[05:24:08] <isekaijin> But anyway. How much do we know about complex manifolds with boundary? For ordinary differentiable manifolds with boundary, we have nice theorems like Poincaré-Hopf on the degrees of the singularities of a vector field with isolated singularities only.
[05:24:24] <isekaijin> Do we have anything like that for complex manifolds with boundary?
[05:28:58] <ProfSimm> joel135: interesting how you can decide you don't like complex values. And that's it
[05:34:48] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:38:57] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[05:39:17] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[05:39:37] *** Joins: mickey8 (~user@user/mickey)
[05:42:03] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[05:43:19] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[05:44:15] *** Joins: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67)
[05:45:09] *** Quits: kariosfox (~kariosfox@89.229.175.242) (Ping timeout: 256 seconds)
[05:52:10] *** Quits: crankslider (~slidercra@user/slidercrank) (Ping timeout: 250 seconds)
[05:53:27] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Read error: Connection reset by peer)
[05:54:09] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:54:53] <ProfSimm> isekaijin: I still don't know what it is
[05:55:29] <Z-module> What what is?
[05:55:36] <ProfSimm> Call By Push Value
[05:55:49] <Z-module> oh. Not a math issue.
[05:55:57] <ProfSimm> Kinda is.
[05:56:01] <ProfSimm> Lamdba calculus is math.
[05:57:10] <Z-module> only in an extremely narrow way
[05:57:40] <ProfSimm> Z-module: is most math part of math in extremely wide way?
[05:57:43] <Z-module> but that's okay, lots of math topics are quite narrow, I guess
[05:59:19] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[06:00:02] <Z-module> About 96% of practicing mathematicians you talk to won't have any idea what "lambda calculcus" is.
[06:07:23] <isekaijin> 100% of my math professors don't know what the lambda calculus is, and wouldn't give a damn even if told.
[06:07:36] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[06:07:50] *** Joins: mickey8 (~user@user/mickey)
[06:07:51] <isekaijin> Because it's useless for studying the questions that are actually interesting to them.
[06:08:09] <ProfSimm> "Lambda calculus (also written as λ-calculus) is a formal system in mathematical logic..."
[06:08:29] <ProfSimm> "In mathematics, Church encoding is a means of representing data and operators in the lambda calculus..."
[06:08:55] <isekaijin> Actually, you'd have a lot of trouble getting the to care about ordinary mathematical logic.
[06:09:00] <isekaijin> getting them*
[06:09:09] <ProfSimm> All I care about is Call By Push Value
[06:09:16] <ProfSimm> But I'll die not knowing what is it
[06:09:22] <isekaijin> You don't seem to care enough to read the papers.
[06:09:27] <isekaijin> But it's fine.
[06:09:37] <isekaijin> It's not interesting enough.
[06:09:43] <ProfSimm> After an hour of staring at notations I don't understand I'm indeed starting to care less.
[06:12:01] <ProfSimm> isekaijin: it's possible you care more about it uses, why I care how to literally implement it, which is different
[06:12:06] <ProfSimm> while*
[06:13:39] <isekaijin> There's a toy CBPV implementation here: https://plzoo.andrej.com/
[06:13:47] <isekaijin> It's the language called “levy”.
[06:15:05] <ProfSimm> isekaijin: thanks
[06:15:38] <tusko> Friends, how can Sum_[k=0 to n] (1/2)^k (1/4)^n-k = a0 * Sum_[k=0 to n] 2^(k-2n)?
[06:16:03] <tusko> = a0 * Sum_[k=1 to n] 2^(k-2n), that is?
[06:16:20] <tusko> Sure we changed the bounds by 1 and took out some constant term
[06:16:37] <tusko> but how does it get to 2^(k-2n) that's insane and nontrivial
[06:16:37] <isekaijin> tusko: I am guessing you mean (1/4)^(n-k) rather than (1/4)^n - k, right?
[06:16:46] <tusko> right
[06:17:46] <PlanckWalk> (1/2)^k = 2^-k
[06:17:58] <tusko> Sum_[k=0 to n] (1/2)^k (1/4)^(n-k) = a0 + Sum_[k=1 to n] s^k-2n
[06:18:04] <PlanckWalk> (1/4)^(n-k) = 2^(-2(n-k))
[06:18:05] <tusko> oh
[06:18:51] <tusko> man that's fresh
[06:18:57] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[06:19:01] *** Joins: LinearA (~Adit@2405:201:5005:fee5:e3:bb93:e845:561c)
[06:20:19] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[06:20:47] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[06:25:50] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[06:27:26] *** Quits: xff0x (~xff0x@2001:1a81:5217:8700:5c4c:6e43:a062:eba7) (Ping timeout: 252 seconds)
[06:28:17] *** Joins: xff0x (~xff0x@2001:1a81:524f:ad00:7c68:ef8b:b4b7:1f26)
[06:29:00] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[06:30:21] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[06:31:21] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Remote host closed the connection)
[06:32:56] *** Quits: AimHere (~David@vpn-fn-229.net.ed.ac.uk) (Ping timeout: 252 seconds)
[06:33:47] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:35:29] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:63be:4b7:5b8:1ce3) (Remote host closed the connection)
[06:35:34] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[06:36:29] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:7f9:7e5d:ee7f:d250)
[06:37:35] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:38:07] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:7f9:7e5d:ee7f:d250) (Remote host closed the connection)
[06:38:54] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:7f9:7e5d:ee7f:d250)
[06:41:28] <SrPx> given a O(1) function, `fact(n)`, that returns the nth prime number (fact(0) = 2, fact(1) = 3, fact(2) = 5, etc.), can we quickly factorize a number?
[06:41:38] <SrPx> again just a sanity check, sorry if obvious
[06:46:12] *** Joins: AimHere (~David@92.238.16.159)
[06:47:09] <PlanckWalk> No
[06:48:09] <SrPx> ty
[06:52:07] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:53:38] *** Quits: xff0x (~xff0x@2001:1a81:524f:ad00:7c68:ef8b:b4b7:1f26) (Ping timeout: 260 seconds)
[06:53:53] *** Joins: millido (~millido@84.210.150.128)
[06:54:30] *** Joins: xff0x (~xff0x@2001:1a81:524f:ad00:4eb7:4d9:8878:178f)
[06:59:16] *** Quits: jalumar (uid392211@id-392211.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[06:59:36] *** Quits: plankster (~plankster@user/plankers) (Read error: No route to host)
[07:03:16] *** Joins: plankster (~plankster@user/plankers)
[07:07:22] *** Joins: Emet-Selch (~haise01@user/haise01)
[07:08:47] *** Parts: LinearA (~Adit@2405:201:5005:fee5:e3:bb93:e845:561c) ()
[07:10:35] *** Quits: Azem (~haise01@user/haise01) (Ping timeout: 250 seconds)
[07:11:27] *** Joins: frelleck (~frelleck@user/frelleck)
[07:14:49] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:15:25] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:19:21] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[07:23:12] *** Joins: steve_clarney (~steveclar@134.209.47.155)
[07:25:17] *** Joins: audiobirb (~audio@user/audio)
[07:33:35] *** Joins: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net)
[07:35:20] *** Quits: libsys (~libsys@186.105.148.110) (Ping timeout: 256 seconds)
[07:35:31] *** Joins: libsys (~libsys@186.105.132.6)
[07:37:21] *** Quits: LiftLeft (~LiftLeft@38.123.199.93) (Ping timeout: 256 seconds)
[07:40:06] *** Quits: plankster (~plankster@user/plankers) (Read error: No route to host)
[07:40:51] *** Joins: rawgreaze (~rawgreaze@c-24-91-94-184.hsd1.nh.comcast.net)
[07:40:51] *** Quits: rawgreaze (~rawgreaze@c-24-91-94-184.hsd1.nh.comcast.net) (Changing host)
[07:40:51] *** Joins: rawgreaze (~rawgreaze@user/rawgreaze)
[07:44:10] *** Joins: plankster (~plankster@user/plankers)
[07:48:31] *** Quits: KevinX (~KevinX@user/KevinX) (Quit: Textual IRC Client: www.textualapp.com)
[07:49:41] *** Quits: NllPtr (~NllPtr@186-78-248-65.baf.movistar.cl) (Read error: Connection reset by peer)
[07:50:33] *** Joins: NllPtr (~NllPtr@186-78-248-65.baf.movistar.cl)
[07:51:03] *** Joins: LiftLeft (~LiftLeft@mobile-166-172-56-26.mycingular.net)
[07:51:15] *** Joins: blackk (~J@2a02:8389:2301:8980:c81e:da9a:3ad3:daf2)
[07:51:15] *** Joins: KevinX (~KevinX@user/KevinX)
[07:53:13] *** Quits: plankster (~plankster@user/plankers) (Ping timeout: 256 seconds)
[07:53:43] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[07:53:47] *** Joins: plankster (~plankster@user/plankers)
[07:58:47] *** Quits: newwebdev13 (~newwebdev@78.135.91.82) (Quit: Leaving)
[07:59:08] *** Quits: plankster (~plankster@user/plankers) (Ping timeout: 256 seconds)
[07:59:55] *** Joins: plankster (~plankster@user/plankers)
[08:04:20] *** Quits: marloi (~mark@216.154.45.101) (Ping timeout: 250 seconds)
[08:06:17] *** Quits: plankster (~plankster@user/plankers) (Ping timeout: 240 seconds)
[08:10:10] *** Joins: plankster (~plankster@user/plankers)
[08:10:27] <tusko> PlanckWalk, what is the benefit of changing the bounds from [k=0 to n] to [k=1 to n]?
[08:11:09] <tusko> Why not just directly observe that Sum_[k=0 to n] 2^(k-2n) converges?
[08:11:43] <tusko> should converge to [1-a^(n+1)]/1-a
[08:12:37] <tusko> oh, I guess maybe that isn't true
[08:17:16] *** Quits: plankster (~plankster@user/plankers) (Read error: Connection reset by peer)
[08:23:31] *** Quits: voiceofreason (~voiceofre@207.148.10.181) (Quit: ZNC 1.8.2 - https://znc.in)
[08:23:34] <tusko> I need to substitute somehow
[08:25:53] *** Joins: voiceofreason (~voiceofre@207.148.10.181)
[08:28:15] *** Joins: frost (~frost@user/frost)
[08:44:04] <ProfSimm> So basically Call By Push Value requires direct interaction with the stack. Well that sucks.
[08:45:34] *** Joins: X-Scale` (~ARM@66.26.54.77.rev.vodafone.pt)
[08:48:45] *** Quits: X-Scale (~ARM@83.223.227.198) (Ping timeout: 256 seconds)
[08:48:45] *** X-Scale` is now known as X-Scale
[08:49:18] *** Quits: blackk (~J@2a02:8389:2301:8980:c81e:da9a:3ad3:daf2) (Quit: Leaving)
[08:50:10] *** Joins: moog (~moog@107.77.244.68)
[08:54:19] *** Joins: average (uid473595@user/average)
[09:03:58] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[09:10:11] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[09:12:45] *** Quits: am1985 (~AM@cpe-74-72-154-241.nyc.res.rr.com) (Quit: This computer has gone to sleep)
[09:13:28] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[09:13:51] <isekaijin> ProfSimm: Any time you use exceptions (resumable or not) or other forms of nonlocal control flow, and you need to wait until runtime to see a stack trace to see what the hell happened, you're paying the price of not being able to directly manipulate the call stack.
[09:14:33] <isekaijin> ProfSimm: Compared to that, manipulating the call stack explicitly is a blessing.
[09:17:00] <cvmn> do you guys discuss cryptocurrency algorithms?
[09:17:06] <isekaijin> Not me.
[09:17:53] <isekaijin> Is there's something mathematically interesting about them, I'm all ears, though.
[09:19:11] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[09:19:51] *** Quits: AviKav (~AviKav@pool-71-191-176-243.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[09:20:02] *** Joins: AviKav (~AviKav@pool-71-191-176-243.washdc.fios.verizon.net)
[09:20:55] <cvmn> yes.
[09:23:56] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[09:25:01] <cvmn> lots of things.  1 is:  maximise consensus's manipulation cost.  cost can be computational or stake.  i see how bitcoin works, as the cost behind the chain increases as more blocks are added.  but i don't see how it works for proof-of-stake, as old stakers can remove their stake/cash-out, i guess the cost of a chain is only the stake given by latest/currently-active stakers?
[09:26:08] *** Quits: lilgopher (~textual@c-24-12-183-227.hsd1.il.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[09:28:03] <isekaijin> Oh, by “something mathematically interesting”, I meant “something you could prove about those algorithms”.
[09:28:34] <cvmn> cardano has a paper that contains a proof.  did you read it?
[09:29:05] <cvmn> cardano claims to be the 1st proof-of-stake cryptocurrency that's mathematically proven
[09:29:25] *** Quits: bosspotato (~bosspotat@user/bosspotato) (Ping timeout: 240 seconds)
[09:29:29] <isekaijin> What exactly is the property that's “mathematically proven”?
[09:29:37] <cvmn> https://eprint.iacr.org/2016/889.pdf
[09:29:54] <cvmn> i don't understand myself.  didn't read it.  67 pages.
[09:30:37] <cvmn> ``rigorous security guarantees''
[09:30:47] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[09:32:13] *** Quits: emerent (~quassel@p200300cd570443d4ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[09:32:41] *** Joins: emerent (~quassel@p200300cd570443d9ba27ebfffed28a59.dip0.t-ipconnect.de)
[09:33:57] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[09:37:10] <ProfSimm> isekaijin: I'll be honest, that didn't convince me at all
[09:37:25] <ProfSimm> isekaijin: 𝕬𝖙 𝖆𝖑𝖑.
[09:39:16] *** Quits: AviKav (~AviKav@pool-71-191-176-243.washdc.fios.verizon.net) (Remote host closed the connection)
[09:39:39] *** Joins: AviKav (~AviKav@pool-71-191-176-243.washdc.fios.verizon.net)
[09:40:35] *** lockywolf_ is now known as ayecee_
[09:41:43] *** ayecee_ is now known as lockywolf_
[09:42:52] <isekaijin> ProfSimm: I don't care if you're convinced, but I *know* that dealing with implicit data structures (call stack, event queue, you name it) is a pain when you want to verify algorithm implementations.
[09:42:52] *** Quits: AviKav (~AviKav@pool-71-191-176-243.washdc.fios.verizon.net) (Remote host closed the connection)
[09:44:03] *** Joins: lilgopher (~textual@2601:241:8000:38f0:f5ec:d402:5801:cb4e)
[09:46:24] <ProfSimm> isekaijin: I don't think modifying the stack directly makes it less implicit, that's all. In fact, seems like it makes it more unpredictable. I may be wrong
[09:46:31] *** Joins: AviKav (~AviKav@pool-71-191-176-243.washdc.fios.verizon.net)
[09:47:00] <isekaijin> ProfSimm: Um, how is it implicit if you're explicitly operating on it?
[09:47:24] <isekaijin> cvmn: The paper contains more than 10 occurrence of the word “honest” before a definition of honest is even given. What exactly makes a block “honestly generated”?
[09:47:31] <ProfSimm> isekaijin: you're explicitly operating on it how? By just screaming "pop" and "push" on it into the void?
[09:47:36] *** Joins: Nact (~l@host-149-154-225-118.dynamic.voo.be)
[09:47:44] <ProfSimm> isekaijin: if so, then calling a function is also explicit work on the stack
[09:47:49] <ProfSimm> isekaijin: and returning from one
[09:48:04] *** lockywolf_ is now known as lockywolf
[09:48:45] <cvmn> isekaijin: i guess a honestly generated transaction is one that's free of double-spending.  e.g. if i give you a coin, it's a new coin that i didn't spend already to someone else.
[09:49:47] *** Joins: z4kpi (~z4kpi@user/zacts)
[09:50:21] <isekaijin> That intuitive idea seems cool, but it has to be formalized before it can even be proven.
[09:50:34] *** Quits: z4kpi (~z4kpi@user/zacts) (Client Quit)
[09:50:40] <isekaijin> You can't prove what you haven't even formally defined.
[09:50:50] <cvmn> this is another well known cryptocurrency that claims to be proven.  https://arxiv.org/pdf/1607.01341.pdf
[09:52:01] <isekaijin> The very sentence “this cryptocurrency claims to be proven” is nonsense unless they say exactly what property of interest has been proven about it.
[09:52:30] *** Quits: AviKav (~AviKav@pool-71-191-176-243.washdc.fios.verizon.net) (Remote host closed the connection)
[09:52:46] *** Joins: AviKav (~AviKav@pool-71-191-176-243.washdc.fios.verizon.net)
[09:54:19] *** Quits: Nact (~l@host-149-154-225-118.dynamic.voo.be) (Quit: Konversation terminated!)
[10:00:28] *** Quits: AviKav (~AviKav@pool-71-191-176-243.washdc.fios.verizon.net) (Remote host closed the connection)
[10:01:06] *** Joins: AviKav (~AviKav@pool-71-191-176-243.washdc.fios.verizon.net)
[10:01:55] <isekaijin> Here, one should talk about the “legality” of an operation the user is trying to perform, rather than the “honesty” of the user. (Dishonesty is only one of many reasons why a user could attempt to perform an illegal operation.)
[10:02:53] *** Joins: src (~src@user/src)
[10:03:46] <isekaijin> Then what needs to be proven is that illegal operations cannot possibly happen / will always be reverted / whatever. And it also needs to be argued (although it cannot be proven) that the formal definition of illegal operation adequately captures what we are trying to prevent from happening in the real world.
[10:05:22] <isekaijin> cvmn: ^
[10:16:36] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[10:17:01] *** Joins: leochiu (~leochiu@user/leochiu)
[10:20:09] <cvmn> isekaijin: what makes you sure that the legal definition cannot be proven?
[10:21:01] *** Quits: AviKav (~AviKav@pool-71-191-176-243.washdc.fios.verizon.net) (Remote host closed the connection)
[10:26:47] *** Joins: [-_-] (~fractal@user/---/x-1675478)
[10:32:53] *** Joins: AviKav (~AviKav@pool-71-191-176-243.washdc.fios.verizon.net)
[10:33:01] *** Quits: wawr (~w@c-24-17-130-228.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[10:36:01] <isekaijin> cvmn: You can't prove anything about the real world, in general.
[10:36:20] <cvmn> do you have a prove for that claim?
[10:36:24] <isekaijin> cvmn: rofl
[10:37:08] <alphamule2> Irony, I Kan't understand it.
[10:37:41] <alphamule2> Maybe it turns out that there's some mathematical law that FORCES the universe to be this consistant.  Who knows.
[10:38:15] <alphamule2> How do you trust even the logic that does that math?  Maybe every time you notice the flaw, it gets removed from your memory.  :D
[10:38:22] <alphamule2> Yeah, this is useless
[10:38:51] <alphamule2> Might as well freeze up on the Interstate levels of worse than useless, actually.
[10:39:08] <alphamule2> Intellectual suicide
[10:39:21] *** Parts: average (uid473595@user/average) ()
[10:39:49] <alphamule2> Some other irony:  If you're smart enough to wonder if you're not, you probably are.
[10:39:57] <isekaijin> Even without getting down to philosophical arguments, a proof is a chain of deductive steps that can be ultimately be traced back to axioms. But axioms can be pretty arbitrary. Who's to say that your axioms correspond to what actually happens in the real world?
[10:41:00] <alphamule2> My example was kind of System Management-level rootkitting the universe levels of bad
[10:41:09] <isekaijin> what
[10:41:11] <isekaijin> Anyhow.
[10:41:18] <isekaijin> Let's cut the bad philosophy.
[10:41:22] <alphamule2> That thing that lets you hide malware even from the OS
[10:41:27] <Jong> Has anyone here read "The Art of Computer Programming" ? It's a 4 Volume set. I'm thinking to buy it
[10:42:17] *** Joins: twJizhan (~twJizhan@2001-b400-e250-6426-6499-2741-6c39-7ede.emome-ip6.hinet.net)
[10:42:17] <alphamule2> Meh, yeah, at least the Matrix popular philosophy was fun.
[10:42:29] <alphamule2> This stuff is depressing in comparison
[10:42:39] <alphamule2> Hmm, author name?
[10:42:48] <alphamule2> I believe there's more than one book of that name
[10:43:11] <alphamule2> Derp
[10:43:14] <alphamule2> TAOCP
[10:43:26] <alphamule2> Right, its worth at least checking it out.
[10:43:50] <twJizhan> hi what is being discussed now? :-)
[10:43:54] <alphamule2> Knuth
[10:44:11] <alphamule2> I liked them.  And it's been... wow
[10:44:20] <alphamule2> 1990's long ago
[10:45:10] <alphamule2> Nice - they sell a set in a hard case
[10:45:39] <twJizhan> did Knuth do work on theory of computability and/or complexity?
[10:46:14] <alphamule2> $218.69 per set :D
[10:46:24] <twJizhan> I just read that "the set of *describable* real numbers is countable"...
[10:47:04] <alphamule2> Well, anyways, those books are great for practical applications of algorithms
[10:47:11] *** Joins: wawr (~w@c-24-17-130-228.hsd1.wa.comcast.net)
[10:47:54] <alphamule2> More than one book, all by same author.
[10:48:26] <alphamule2> An interesting application of forward verification
[10:49:27] <alphamule2> You can have calculations done with low latency in a local game client, then memory can be compared to later calculations to verify it on other clients in a separate thread.  The idea to be avoiding round-trip delays.
[10:49:45] <alphamule2> Or not in gaming:  Distributed computing
[10:50:14] <twJizhan> is the set of all possible algorithms (or all possible Turing machines) countable or not?
[10:50:16] <alphamule2> Prime95 would be a great example of where verification would be nice.
[10:50:37] <alphamule2> Finite machine size?  ;)
[10:51:15] *** Quits: lilgopher (~textual@2601:241:8000:38f0:f5ec:d402:5801:cb4e) (Quit: Textual IRC Client: www.textualapp.com)
[10:51:41] <twJizhan> uh... *.* a curiosity out of magic...
[10:52:55] <alphamule2> And yes, I can see where something like a distributed anticheat would be handy for crypto^H^H^H^H^H^Hdigital currencies, isekaijin.
[10:53:47] <alphamule2> This is equivalent to data compression arguements, right?
[10:54:07] <alphamule2> Where every 'algorithm' assembles an output.
[10:54:40] <alphamule2> Technically, the compression engine is no different in this regard.  In fact, if it wasn't, it'd be useless.
[10:55:16] <twJizhan> google shows results saying the set of all Turing machines is countable...
[10:57:36] <alphamule2> An interesting observation is that in practice, almost all possible inputs and outputs are unfeasible to operate on.
[11:00:36] *** Parts: leochiu (~leochiu@user/leochiu) ()
[11:01:05] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[11:01:25] <alphamule2> We just optimized the algorithms for files < 10^40 in size or so?
[11:02:01] <alphamule2> Most compressors don't try to achieve block sizes over 4GB by default, if at all.
[11:02:30] <alphamule2> So not anywhere near 10^40
[11:03:17] *** Quits: frelleck (~frelleck@user/frelleck) ()
[11:09:16] <cvmn> isekaijin: if we accept axioms:  (1) random permutations, (2) natural selection for survival maximisation, then we can prove the optimal definition of legal/illegal, which will include a definition of illegal monetary acts.
[11:10:26] *** Joins: src_ (~src@user/src)
[11:10:46] <isekaijin> An axiom is, first and foremost, a proposition. Something that is susceptible of being “true” or “false”.
[11:10:55] <isekaijin> However, “random permutations” is not a proposition.
[11:11:13] <isekaijin> But anyway.
[11:12:01] *** Joins: freep (~freepppp@188.4.23.166.dsl.dyn.forthnet.gr)
[11:12:24] <cvmn> matter [re]arrange themselves over time in some ways, possibly random to us.
[11:12:29] <cvmn> ^ axiom (1) reworded.
[11:14:04] *** Quits: src (~src@user/src) (Ping timeout: 256 seconds)
[11:14:06] *** Joins: _Wowbagger_ (~Wowbagger@208.110.111.180)
[11:15:20] *** Joins: lilgopher (~ubuntu@2601:241:8000:38f0::342c)
[11:18:13] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:18:29] <cvmn> isekaijin: in other words, if we accept that we're defined by survival maximisation, then so is our legal system.  hence, optimal definition of legal/illegal is that which maximises survival.
[11:18:48] *** Quits: src_ (~src@user/src) (Quit: Leaving)
[11:18:58] *** Joins: src (~src@user/src)
[11:23:31] *** Quits: [-_-] (~fractal@user/---/x-1675478) (Quit: ZZZzzz?)
[11:25:43] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[11:27:38] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:28:50] *** Joins: magla (~gelignite@55d43a63.access.ecotel.net)
[11:34:56] *** Quits: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net) (Remote host closed the connection)
[11:35:12] *** Joins: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net)
[11:36:54] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[11:38:26] *** Joins: audiobirb (~audio@user/audio)
[11:42:46] *** Joins: z4kpi (~z4kpi@user/zacts)
[11:45:24] *** z4kpi is now known as zacts
[11:45:27] *** zacts is now known as z4kpi
[11:45:32] *** Joins: kariosfox (~kariosfox@89.229.175.242)
[11:46:06] *** Quits: zincy (~tom@host86-160-236-152.range86-160.btcentralplus.com) (Remote host closed the connection)
[11:46:23] *** Joins: zincy (~tom@2a00:23c8:970c:4801:5b6a:e81b:79dc:f684)
[11:49:24] *** Quits: _Wowbagger_ (~Wowbagger@208.110.111.180) (Quit: Bye)
[11:52:08] *** Quits: magla (~gelignite@55d43a63.access.ecotel.net) (Quit: Stay safe!)
[11:54:11] *** Joins: qbt (~edun@user/edun)
[11:56:54] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[12:00:16] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[12:04:20] *** Quits: sqrt2 (~ben@80-108-18-7.cable.dynamic.surfer.at) (Quit: ZNC - http://znc.in)
[12:05:04] *** Quits: jj5 (~jj5@211-26-131-173.dyn.dodo.net.au) (Quit: Konversation terminated!)
[12:06:17] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[12:08:20] *** Joins: jj5 (~jj5@211-26-131-173.dyn.dodo.net.au)
[12:09:28] *** Joins: vysn (~vysn@user/vysn)
[12:18:22] *** Joins: ppw (~ppw@user/ppw)
[12:20:09] *** Joins: blackk (~J@2a02:8389:2301:8980:c81e:da9a:3ad3:daf2)
[12:22:23] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[12:24:20] *** Quits: kariosfox (~kariosfox@89.229.175.242) (Ping timeout: 256 seconds)
[12:27:34] *** Joins: palasso (~palasso@user/palasso)
[12:32:02] *** Quits: twJizhan (~twJizhan@2001-b400-e250-6426-6499-2741-6c39-7ede.emome-ip6.hinet.net) (Quit: Leaving)
[12:32:49] <blackk> whats the fastest way to figure out the transverse axis of a hyperbola given the quadratic equation (not in normal form)
[12:33:10] <blackk> Im too lazy to figure out the vertices and foci
[12:33:24] <blackk> in fact Im only interested in the slope not even the exact line
[12:33:39] <blackk> I should be able to get it by some differentiation
[12:34:44] <blackk> probably I have to homogenize it because I loose some information from the constants if I just differentiate with one variable
[12:36:28] *** Joins: widp (~user@124.123.104.227)
[12:40:20] *** Joins: flodobeulin (~flodobeul@p2e5d5e67.dip0.t-ipconnect.de)
[12:42:14] *** Joins: TheCatBehemoth (~TheCatBeh@2001:8a0:f55d:b200:5478:ec52:9a46:ded2)
[12:42:28] *** Quits: the_lanetly_052 (~the_lanet@194.135.152.23) (Ping timeout: 256 seconds)
[12:45:52] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[12:46:56] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[12:47:00] *** Quits: flodobeulin (~flodobeul@p2e5d5e67.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[12:48:32] *** Quits: src (~src@user/src) (Quit: Leaving)
[12:55:46] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:55:53] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[13:00:08] *** Quits: RadSurfer (~RadSurfer@user/radsurfer) (Read error: Connection reset by peer)
[13:01:52] *** Joins: RadSurfer (~RadSurfer@user/radsurfer)
[13:02:30] *** Joins: savask (~savask@Powder/Developer/savask)
[13:02:45] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[13:03:31] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[13:04:42] *** Quits: widp (~user@124.123.104.227) (Read error: Connection reset by peer)
[13:04:44] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[13:04:55] *** Joins: widp (~user@124.123.104.227)
[13:04:57] *** Quits: Dotz0cat (~Dotz0cat@h227.228.187.173.dynamic.ip.windstream.net) (Ping timeout: 240 seconds)
[13:05:01] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[13:06:59] *** Quits: z4kpi (~z4kpi@user/zacts) (Quit: Client closed)
[13:07:47] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[13:08:55] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[13:09:20] *** Joins: mnl (~mnl@user/mnl)
[13:09:37] <blackfield> if you don't mind changing the basis, and the affine space is euclidean, quadric in a canonical form has axes in directions of eigenvectors
[13:09:57] *** Joins: X-Scale` (~ARM@31.22.166.28)
[13:11:56] *** Quits: X-Scale (~ARM@66.26.54.77.rev.vodafone.pt) (Ping timeout: 256 seconds)
[13:11:57] *** X-Scale` is now known as X-Scale
[13:17:01] *** Joins: plankster (~plankster@user/plankers)
[13:26:10] *** Joins: crankslider (~slidercra@user/slidercrank)
[13:28:51] *** Joins: [-_-] (~fractal@user/---/x-1675478)
[13:31:23] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:34:43] *** Quits: mnl (~mnl@user/mnl) (Ping timeout: 250 seconds)
[13:39:09] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[13:39:30] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[13:40:18] *** Joins: audiobirb (~audio@user/audio)
[13:43:37] <Jong> what's a good book for understanding complex numbers like e and pi and why their digits don't repeat?
[13:44:15] *** Joins: newwebdev13 (~newwebdev@78.135.91.82)
[13:46:35] *** Quits: specing (~specing@user/specing) (Ping timeout: 256 seconds)
[13:46:57] <savask> Jong: What do you mean by "don't repeat"? There are only 10 digits so they definitely do repeat
[13:47:07] *** Joins: specing (~specing@user/specing)
[13:49:38] <widp> How is a delay network a "more general" concept than filters?
[13:51:37] *** Joins: bourfronti (~main@user/bourfronti)
[13:52:39] *** Joins: Simplar (~Simplar@188.163.93.241)
[13:52:57] <Simplar> https://cdn.discordapp.com/attachments/292250566850248704/942002639762243614/unknown.png if anyone knows, what is wrong with these integrals? There is a mistake but I don't see it
[13:53:38] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 260 seconds)
[13:57:37] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[14:02:57] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[14:04:35] *** Joins: mnl (~mnl@user/mnl)
[14:11:55] <blackk> it doesnt help because you wouldnt knw which of the eigenvectors are the transverse axis
[14:12:33] <blackk> also you would then have to go back to get the exact slope
[14:12:40] <Simplar> black: is it about my question or do I misinterpret?
[14:12:42] <blackk> so its changing the basis twice
[14:12:48] <blackk> the question.. which was ages ago
[14:12:49] <blackk> sorry
[14:13:21] *** Quits: blackk (~J@2a02:8389:2301:8980:c81e:da9a:3ad3:daf2) (Quit: Leaving)
[14:21:18] *** Quits: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[14:27:18] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[14:28:11] *** Quits: Cera (~Cera@user/Cera) (Ping timeout: 256 seconds)
[14:29:52] *** Joins: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[14:32:43] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:32:54] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[14:34:04] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:34:13] *** Quits: Cale (~cale@cpef48e38ee8583-cm30b7d4b3fc20.cpe.net.cable.rogers.com) (Ping timeout: 240 seconds)
[14:34:52] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[14:37:07] *** Quits: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[14:39:17] *** Quits: Jong (~Jong@2620:10d:c090:400::5:905d) (Ping timeout: 240 seconds)
[14:41:11] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:42:01] *** Joins: Jong (~Jong@2620:10d:c090:400::5:905d)
[14:42:26] *** Joins: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de)
[14:45:26] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 256 seconds)
[14:46:10] *** Joins: \o\ (~i.am@187.112.46.243)
[14:47:23] *** Joins: Cale (~cale@cpef48e38ee8583-cm30b7d4b3fc20.cpe.net.cable.rogers.com)
[14:47:39] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[14:48:05] *** Quits: Simplar (~Simplar@188.163.93.241) (Quit: Going offline, see ya! (www.adiirc.com))
[14:56:35] *** Quits: crankslider (~slidercra@user/slidercrank) (Read error: Connection reset by peer)
[14:59:54] *** Joins: crankslider (~slidercra@user/slidercrank)
[14:59:55] *** Joins: slidercrank (~slidercra@user/slidercrank)
[15:00:29] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[15:00:58] *** Quits: crankslider (~slidercra@user/slidercrank) (Client Quit)
[15:01:30] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[15:01:51] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[15:03:41] *** Joins: Koen (~Koen@252.248.88.92.rev.sfr.net)
[15:04:52] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Client Quit)
[15:06:25] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:07:38] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[15:15:19] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:16:02] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[15:17:48] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:22:57] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[15:24:18] *** Joins: cadmio (~cadmio@151.35.9.32)
[15:24:20] <cadmio> Hello
[15:24:50] <riv> hi
[15:26:22] <cadmio> hey, that formula we were talking yesterday my text doesn't prove it
[15:26:28] <cadmio> I'd like to furnish a prove for it
[15:27:07] <cadmio> https://gioretikto.github.io/mat/algebra/wilson.html#fermat_numbers
[15:27:25] *** Quits: newwebdev13 (~newwebdev@78.135.91.82) (Ping timeout: 240 seconds)
[15:28:21] <riv> why doesn't it prove it?
[15:29:30] *** Joins: newwebdev13 (~newwebdev@31.210.55.200)
[15:29:48] <cadmio> well, it's the first time it uses in the text but it isn't proved
[15:30:11] *** Joins: Guts71 (~Guts71@41.104.17.104)
[15:30:42] <riv> "it" ?
[15:30:43] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:31:47] <cadmio> I've never used it in my life it's like a pseudo-telescopic identity I don't know if it has a name
[15:32:30] <riv> what is it you need proof of?
[15:33:52] <cadmio> (2r)^t + 1 = (2r + 1) ((2r)^{2h} − (2r)^{2h −1} + ... + (2r)^2 − 2^r + 1)
[15:34:24] <riv> Theorem (Difference of powers): a^m - b^m = (a - b) (Sum[i+j=m-1] a^i b^j)
[15:35:48] <riv> you can prove this, and then use it with a = 2r, b = -1
[15:36:11] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[15:36:44] <riv> for the proof
[15:36:56] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[15:38:04] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:38:21] <riv> find a (Sum[i+j=m-1] a^i b^j) = a^(m-1) + something
[15:38:38] <riv> and b (Sum[i+j=m-1] a^i b^j) = something + 1
[15:38:58] <riv> so (a - b) (Sum[i+j=m-1] a^i b^j) = a^(m-1) - 1
[15:39:10] <riv> ah that should be a^m instead of a^(m-1) and b instead of 1
[15:39:58] *** Quits: mbarbar (~mbarbar@oak.xen.prgmr.com) (*.net *.split)
[15:40:20] <cadmio> if t is even there's no factor (2^r + 1), right?
[15:40:36] <riv> you're talking about something completely different now
[15:41:11] <riv> did you see what I just wrote here for you? about Theorem (Difference of powers): a^m - b^m = (a - b) (Sum[i+j=m-1] a^i b^j)
[15:42:03] <cadmio> yes
[15:42:07] *** Quits: LuKaRo (~LuKaRo@p200300dfa72f4bb300000000000001f9.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[15:42:23] <riv> ok good
[15:42:31] <riv> so try to complete the proof of Theorem (Difference of powers): a^m - b^m = (a - b) (Sum[i+j=m-1] a^i b^j)
[15:44:08] *** Joins: dez (uid92154@user/dez)
[15:45:50] <lericson> what do you call it when you go f^-1(f(x))?
[15:46:23] <riv> canonicalization
[15:47:36] *** Joins: LuKaRo (~LuKaRo@p4fc3264a.dip0.t-ipconnect.de)
[15:48:26] *** Quits: bourfronti (~main@user/bourfronti) (Ping timeout: 250 seconds)
[15:50:13] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[15:53:56] <Em> oh yeah?
[16:00:33] <naquad> i'm trying to offset my series by the given degree: y1 = x * tan(angle) + y0 - i expect that this way angle between my first series point and nth point would be = specified degree, but i'm getting some odd results. what am i doing wrong?
[16:03:31] *** Quits: cadmio (~cadmio@151.35.9.32) (Quit: WeeChat 3.0)
[16:05:55] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:10:16] *** Joins: notzmv (~zmv@user/notzmv)
[16:12:08] *** Quits: Koen (~Koen@252.248.88.92.rev.sfr.net) (Ping timeout: 256 seconds)
[16:15:49] *** Joins: basedboy (~ninjaspid@175.142.111.245)
[16:16:06] *** Quits: Guts71 (~Guts71@41.104.17.104) (Quit: Client closed)
[16:18:22] *** Quits: mnl (~mnl@user/mnl) (Ping timeout: 256 seconds)
[16:18:37] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 240 seconds)
[16:19:28] *** Quits: newwebdev13 (~newwebdev@31.210.55.200) (Read error: Connection reset by peer)
[16:19:54] *** Joins: newwebdev13 (~newwebdev@31.210.55.200)
[16:19:59] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[16:21:00] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:1823:ee83:7026:65a9)
[16:24:34] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[16:26:15] *** Joins: kariosfox (~kariosfox@89.229.175.242)
[16:28:29] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[16:28:42] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[16:28:56] *** Joins: kish` (~aqua@user/aqua)
[16:29:44] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[16:32:10] *** Quits: kariosfox (~kariosfox@89.229.175.242) (Remote host closed the connection)
[16:32:10] *** Joins: xkuru (~xkuru@user/xkuru)
[16:32:24] *** Joins: kariosfox (~kariosfox@89.229.175.242)
[16:32:44] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:7825:f7f8:ec4a:fcba)
[16:33:24] *** Joins: ouzel8 (~ouzel8_@shams.boastblast.com)
[16:34:06] *** Quits: Jong (~Jong@2620:10d:c090:400::5:905d) (Ping timeout: 245 seconds)
[16:34:42] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:1823:ee83:7026:65a9)
[16:37:50] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:1823:ee83:7026:65a9) (Ping timeout: 250 seconds)
[16:39:48] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[16:43:30] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:44:04] *** Joins: marloi (~mark@216.154.45.101)
[16:44:28] *** zer0bitz_ is now known as zer0bitz
[16:44:35] *** Joins: kish` (~aqua@user/aqua)
[16:49:50] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[16:49:54] *** Joins: mnl (~mnl@user/mnl)
[16:55:45] *** Joins: gareppa (~gareppa@user/gareppa)
[16:57:24] *** Quits: basedboy (~ninjaspid@175.142.111.245) (Quit: Leaving)
[16:57:42] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[16:58:37] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[17:00:51] *** Joins: i0e (~is0ke3@user/is0ke3)
[17:01:18] *** Joins: mbarbar (~mbarbar@oak.xen.prgmr.com)
[17:01:40] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[17:04:34] *** Joins: esther (~esther@2607:fb90:20dd:2a30:f69d:919b:d1f8:cc74)
[17:05:22] *** Joins: Simplar (~Simplar@188.163.93.241)
[17:05:31] *** Joins: Koen (~Koen@252.248.88.92.rev.sfr.net)
[17:06:32] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[17:08:37] *** Quits: esther (~esther@2607:fb90:20dd:2a30:f69d:919b:d1f8:cc74) (Ping timeout: 240 seconds)
[17:08:50] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[17:10:28] *** Joins: baracurda (~baracurda@user/parserblabla)
[17:12:12] *** Quits: mnl (~mnl@user/mnl) (Ping timeout: 256 seconds)
[17:13:54] *** Quits: marloi (~mark@216.154.45.101) (Ping timeout: 256 seconds)
[17:20:59] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:78e9:2c9a:5431:d092)
[17:23:45] *** Joins: marloi (~mark@216.154.45.101)
[17:25:02] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:1823:ee83:7026:65a9) (Ping timeout: 260 seconds)
[17:25:57] *** Quits: TheCatBehemoth (~TheCatBeh@2001:8a0:f55d:b200:5478:ec52:9a46:ded2) (Ping timeout: 240 seconds)
[17:28:04] *** Quits: Arcorann (~A@user/arcorann) (Ping timeout: 256 seconds)
[17:31:53] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Remote host closed the connection)
[17:32:18] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:32:48] *** Joins: TheCatBehemoth (~TheCatBeh@89.180.255.227)
[17:35:26] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[17:39:28] *** Joins: i0e (~is0ke3@user/is0ke3)
[17:39:43] *** Quits: TheCatBehemoth (~TheCatBeh@89.180.255.227) (Ping timeout: 256 seconds)
[17:39:49] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:7f9:7e5d:ee7f:d250) (Remote host closed the connection)
[17:48:17] *** Quits: AimHere (~David@92.238.16.159) (Ping timeout: 240 seconds)
[17:49:42] *** Joins: am1985 (~AM@cpe-74-72-154-241.nyc.res.rr.com)
[17:50:58] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:dc5d:b40d:bcf:dcae)
[17:51:13] *** Quits: [-_-] (~fractal@user/---/x-1675478) (Quit: ZZZzzz?)
[17:52:47] *** Joins: TheCatBehemoth (~TheCatBeh@89.180.255.227)
[17:53:40] *** Quits: xff0x (~xff0x@2001:1a81:524f:ad00:4eb7:4d9:8878:178f) (Ping timeout: 250 seconds)
[17:54:42] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[17:54:45] *** Joins: xff0x (~xff0x@2001:1a81:524f:ad00:f091:6df4:fb78:756f)
[17:57:00] *** Quits: baracurda (~baracurda@user/parserblabla) (Ping timeout: 276 seconds)
[17:57:25] *** Quits: TheCatBehemoth (~TheCatBeh@89.180.255.227) (Ping timeout: 240 seconds)
[17:58:05] *** Joins: i0e (~is0ke3@user/is0ke3)
[17:58:43] *** Joins: seninha (~seninha@user/seninha)
[18:01:26] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 260 seconds)
[18:01:53] *** Joins: AimHere (~David@vpn-fn-224.net.ed.ac.uk)
[18:04:01] *** Joins: newwebdev132 (~newwebdev@31.210.55.200)
[18:04:03] *** Quits: newwebdev13 (~newwebdev@31.210.55.200) (Read error: Connection reset by peer)
[18:09:26] *** Quits: marloi (~mark@216.154.45.101) (Ping timeout: 256 seconds)
[18:10:45] *** Joins: TheCatBehemoth (~TheCatBeh@89.180.255.227)
[18:10:53] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[18:12:50] *** Quits: LiftLeft (~LiftLeft@mobile-166-172-56-26.mycingular.net) (Ping timeout: 256 seconds)
[18:14:11] *** Joins: xelxebar (~xelxebar@aj175037.dynamic.ppp.asahi-net.or.jp)
[18:19:04] *** Joins: bosspotato (~bosspotat@user/bosspotato)
[18:19:57] *** Quits: TheCatBehemoth (~TheCatBeh@89.180.255.227) (Ping timeout: 256 seconds)
[18:21:37] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:24:49] *** Parts: blackfield (~blackfiel@85.255.4.218) (Leaving)
[18:25:59] *** Joins: LiftLeft (~LiftLeft@38.123.199.93)
[18:26:28] *** Quits: LiftLeft (~LiftLeft@38.123.199.93) (Max SendQ exceeded)
[18:26:59] *** Joins: LiftLeft (~LiftLeft@38.123.199.93)
[18:28:51] *** Joins: Dotz0cat (~Dotz0cat@h77.175.40.162.dynamic.ip.windstream.net)
[18:36:00] *** Quits: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net) (Remote host closed the connection)
[18:36:15] *** Joins: dogbert2 (~Bill@ip68-227-25-62.lv.lv.cox.net)
[18:40:29] *** Joins: EdwardH (~Edward@76-206-203-209.lightspeed.sndgca.sbcglobal.net)
[18:44:05] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-280a-a911-ea24-fc52.res6.spectrum.com)
[18:44:06] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 245 seconds)
[18:45:17] *** Joins: TheCatBehemoth (~TheCatBeh@a89-155-25-194.cpe.netcabo.pt)
[18:46:00] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Remote host closed the connection)
[18:47:55] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[18:51:09] *** Joins: tempate (~alpha@user/tempate)
[18:51:44] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:54:16] <tempate> Hello. I'm reading about the Weierstrass P function and lattices for the first time. Could someone give me some intuition as to what it's going on? Right now I was reading a proof that p(z) = p(-z) = p(z + \zeta) for all z in \mathbb{C} and \zeta in the lattice. I understand the proof but I don't see what this implies or why it makes sense intuitively/visually
[18:54:31] *** Joins: newwebdev13 (~newwebdev@31.210.55.200)
[18:54:32] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[18:54:47] *** Joins: mickey8 (~user@user/mickey)
[18:54:54] *** Quits: newwebdev132 (~newwebdev@31.210.55.200) (Read error: Connection reset by peer)
[18:56:41] <riv> tempate: the idea of p is that it is a lattice periodic meromorphic function
[18:57:17] <riv> so p(z) = p(-z) = p(z + \zeta) are exactly the properties needed, as well as p(zeta) = inf
[18:58:26] <tempate> I'm imagining a lattice as some sort of coordinate system where u and v are two complex numbers
[18:58:45] <riv> paralellogram that tiles C
[18:58:52] <tempate> yeah, right
[18:59:07] <riv> https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ-wSqA3uxR3F2QJkvchU9fEgzVKB2sQZu_u3lN7GP6txEuUI9G0KYu3Vvdef7kiqcwFOA&usqp=CAU
[18:59:33] <riv> from theory we know that a holomorphic function that's double periodic will be constant
[18:59:50] <riv> but there can be nontrivial double periodic meromorphic functions
[18:59:57] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 250 seconds)
[19:00:40] <tempate> fair enough
[19:02:05] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:03:16] *** Quits: widp (~user@124.123.104.227) (Ping timeout: 256 seconds)
[19:05:18] *** Joins: enoq (~enoq@194-208-179-35.lampert.tv)
[19:06:37] *** Quits: LiftLeft (~LiftLeft@38.123.199.93) (Ping timeout: 240 seconds)
[19:06:39] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 250 seconds)
[19:08:28] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:10:10] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[19:10:16] <riv> and in fact there is some structure to this set of functions.....
[19:10:31] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[19:11:02] <tempate> I think I've got it
[19:11:43] <tempate> basically the lattice draws paralellogram tiles in C and this lemma states that the function is the same in every tile
[19:11:53] <riv> yes
[19:12:57] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:dc5d:b40d:bcf:dcae) (Remote host closed the connection)
[19:16:01] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:1ebd:6698:6e81:143f)
[19:18:37] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[19:20:50] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:24:33] *** Quits: libsys (~libsys@186.105.132.6) (Ping timeout: 256 seconds)
[19:24:53] *** Joins: paravida (~myChateau@user/paravida)
[19:30:19] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[19:31:39] *** Joins: LiftLeft (~LiftLeft@mobile-166-172-58-163.mycingular.net)
[19:35:21] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Remote host closed the connection)
[19:35:34] *** Quits: tempate (~alpha@user/tempate) (Ping timeout: 256 seconds)
[19:35:46] *** Quits: xff0x (~xff0x@2001:1a81:524f:ad00:f091:6df4:fb78:756f) (Ping timeout: 245 seconds)
[19:36:12] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[19:36:48] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 250 seconds)
[19:37:13] *** Joins: freepp (~freepppp@193.92.35.32.dsl.dyn.forthnet.gr)
[19:37:37] *** Joins: off^ (~off@50.235.176.163)
[19:40:15] *** Quits: freep (~freepppp@188.4.23.166.dsl.dyn.forthnet.gr) (Ping timeout: 250 seconds)
[19:41:38] *** Joins: blackfield (~blackfiel@85.255.4.218)
[19:46:28] *** Joins: xff0x (~xff0x@2001:1a81:524f:ad00:23cf:423a:2190:173f)
[19:47:26] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 245 seconds)
[19:49:40] *** Quits: enoq (~enoq@194-208-179-35.lampert.tv) (Quit: enoq)
[19:59:05] <Em> looks like a generalization of the cosine function
[19:59:30] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[19:59:33] *** Joins: blackk (~J@2a02:8389:2301:8980:28e6:f491:d445:b2a9)
[19:59:50] <riv> yeah
[20:00:01] <riv> cos is single periodic and holomorphic
[20:00:08] <riv> p is double periodic and meromorphic
[20:00:22] <biberao> whats a holomorphic
[20:00:25] <biberao> and meromorphic
[20:01:04] <blackk> p as in weierstrass p?
[20:01:25] *** Joins: jemius (~imperator@200116b82dc18400cf44e2fbedcfde7e.dip.versatel-1u1.de)
[20:01:30] <blackk> anyone uses hexchat? I cant get to get a beep when I am away and there is a message
[20:01:33] *** Joins: tempate (~alpha@user/tempate)
[20:01:37] <Z-module> a complex function defined everywhere on a nonempty plane-open set U is "holomorphic" on U, also called analytic, or complex-differentiable
[20:02:01] <biberao> wow
[20:04:06] *** Quits: LiftLeft (~LiftLeft@mobile-166-172-58-163.mycingular.net) (Ping timeout: 250 seconds)
[20:04:48] <biberao> Z-module: i wonder whats the word in my language
[20:04:53] <jemius> I have a problem with sequences... b[n] = [0, 1, 2, 3, 4, 5, 6...]. h[n] shall be [0, 2, 4, 6] (if M = 2)
[20:04:54] <jemius> http://mathb.in/70546
[20:05:15] <biberao> ok
[20:05:21] <biberao> it actually exists holomorfa
[20:05:32] <jemius> ah no, wrong. b[n] shall be the output, h[n] input = 0-6
[20:05:48] *** Quits: Koen (~Koen@252.248.88.92.rev.sfr.net) (Quit: WeeChat 3.4)
[20:06:06] *** Joins: gb73d (gb73d@host-92-7-42-10.as13285.net)
[20:06:28] <jemius> Can I write it that way? It does not make sense to me how I can express that index 'm' numerates the sequence b, without any gaps occuring
[20:07:23] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[20:08:04] <Z-module> biberao:  https://pt.wikipedia.org/wiki/Fun%C3%A7%C3%A3o_holomorfa
[20:08:49] <biberao> it just looked weird here
[20:08:50] <biberao> :
[20:09:14] *** Joins: i0e (~is0ke3@user/is0ke3)
[20:10:31] <blackk> seems that you can easily guess it if you just know he portuguese
[20:11:13] <biberao> blackk: even though the root of the word is shared between languages it could be something different
[20:11:47] <Franciman> Função state of mind
[20:11:56] <blackk> not function?
[20:12:42] <blackk> probably "manifold" is hard to guess if you just know the portuguese of it
[20:14:44] <blackk> some math terms have two equivalent "english" word for it... and for those who are familiar with one term they may not be able to necessarily guess the second one
[20:14:45] *** Joins: widp (~user@124.123.104.227)
[20:14:59] <biberao> blackk: we dont have that word
[20:15:18] <biberao> here
[20:15:23] <biberao> manifold means multiple
[20:15:38] <biberao> to copy
[20:15:43] <blackk> manifold is spanish is "Variedad" so I would suppose something similar in portuguese
[20:15:48] <bosspotato> blame riemann
[20:16:09] <Franciman> in italian it's «varietà»
[20:16:17] <Em> Z-module: that's all it takes for a complex function to be holomorphic? Just to be defined everywhere on a non-empty open set?  Surely it also has to be continuous at least? I thought a function is holomorphic at x if it's differentiable at every point in a neighborhood of x.
[20:16:27] <biberao> we have "variedade" but its not what manifold means
[20:16:31] <blackk> yeah so I think its similar in portuguese
[20:16:33] <Z-module> Em, and complex-differentiable at every point
[20:16:49] <Z-module> oh, sorry, I did leave that out! yikes
[20:16:51] <blackk> no but its what it means in math
[20:17:32] <blackk> sp whats variety in italian?
[20:17:48] <Z-module> and of course that makes it automatically infinitely differentiable everywhere, etc.
[20:17:57] <Franciman> Z-module: can we relax that and say «and complex-differentiable at every point except for a non dense subset» ?
[20:18:14] <Franciman> blackk: variety in what sense?
[20:18:26] <blackk> variety in algebraic geometry sense
[20:18:36] <blackk> the zero set of a system of polynomial equation
[20:18:40] <Franciman> varietà (quasi) affine/proiettiva
[20:18:44] <Z-module> not sure offhand, Franciman, but there are lots of version of the Looman-Menchov theorem with hypotheses like that
[20:18:49] <blackk> so its similar
[20:18:52] <blackk> makes sense though
[20:18:58] <blackk> a smooth variety is a manifold
[20:19:06] <blackk> so that makes more sense than manifold in english
[20:19:15] <Franciman> a smooth variety is called «varietà differenziale (or differenziabile)»
[20:19:41] *** Quits: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:20:12] <Franciman> blackk: what's the spanish for these words?
[20:20:16] <blackk> dunno
[20:20:20] <blackk> let me check
[20:20:39] *** Quits: tempate (~alpha@user/tempate) (Ping timeout: 256 seconds)
[20:20:41] <blackk> variedad too
[20:20:46] <blackk> variedad algebraica
[20:20:49] <blackk> algebraic variety
[20:21:19] *** Joins: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net)
[20:21:31] <biberao> blackk: https://www.math.tecnico.ulisboa.pt/~acannas/GD/Materiais/ficha3.pdf
[20:21:34] <blackk> cool.. I have some 19th century italian math text that I need to understand.. I will definitely come here to ask for some translation
[20:21:42] <blackk> whats that bib?
[20:21:57] <biberao> variadades algebricas
[20:22:00] <Franciman> blackk: lol, sure
[20:22:11] <Franciman> i hope i understand 19th century italian
[20:22:13] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[20:22:16] <blackk> that too
[20:22:18] <biberao> does that smell like manifolds?
[20:22:31] <blackk> I do know understanding old math text is hard even for native speakers
[20:22:31] <biberao> Franciman: you rock at 19th century italian
[20:22:47] <blackk> I once tried reading some of Klein work in German
[20:22:55] <Franciman> lol
[20:23:13] <int-e> . o O ( "... it made me feel very small" )
[20:23:20] <Franciman> well 19th century italian shouldn't be too hard. 16th is a bit harder, and funkier
[20:23:26] <blackk> are you sure
[20:23:32] <blackk> let me check if I can find ... some text
[20:23:40] <blackk> :D
[20:23:43] <Franciman> :D
[20:23:57] <Franciman> i have some experience, but not in mathematics, so sure, i should try and then speak ahah
[20:24:25] <blackk> how do you pronounce "craighero" in italian.. its a family name
[20:24:31] <blackk> is it pronounced as it is read?
[20:24:39] <biberao> Franciman: is a shakespeare expert too
[20:24:41] *** Joins: i0e (~is0ke3@user/is0ke3)
[20:24:42] <Z-module> "gh" is hard G
[20:24:47] <EdwardH> I've been trying to figure this problem out (one I came up with a few years ago) but am having trouble making progress; here's a quick description of the problem http://mathb.in/70547
[20:25:00] <blackk> oh..
[20:25:10] <Franciman> yes
[20:25:16] <blackk> I thought I pronounce "craig" and then "hero" separately
[20:25:19] <blackk> stupid me
[20:25:22] <Franciman> yes
[20:25:27] <Franciman> but without the h
[20:25:38] <Franciman> Craig ero
[20:25:48] <Z-module> should be close to   cry geh roe
[20:25:58] <blackk> thanks Z-
[20:26:15] <biberao> isnt ero like related
[20:26:17] <biberao> to senses?
[20:26:24] *** Joins: ferdna (~ferdna@user/ferdna)
[20:28:42] <blackk> afk
[20:30:33] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[20:32:45] *** Joins: seninha (~seninha@user/seninha)
[20:33:23] *** Quits: slycelote_ (~slycelote@user/slycelote) (Quit: Leaving)
[20:39:33] *** Joins: johnkeats7 (~johnkeats@2804:14c:32:a0cc:7825:f7f8:ec4a:fcba)
[20:43:05] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:7825:f7f8:ec4a:fcba) (Ping timeout: 256 seconds)
[20:44:35] *** Quits: widp (~user@124.123.104.227) (Ping timeout: 250 seconds)
[20:44:37] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:1ebd:6698:6e81:143f) (Remote host closed the connection)
[20:45:37] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:1ebd:6698:6e81:143f)
[20:46:26] *** Quits: qedo (uid245510@id-245510.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[20:47:11] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:1ebd:6698:6e81:143f) (Remote host closed the connection)
[20:47:13] *** Quits: kmh (~kmh@2a00:6020:5004:6800:ab68:bc42:8f46:b070) (Quit: Leaving)
[20:48:13] *** Quits: harwiltz (~harwiltz@modemcable206.243-202-24.mc.videotron.ca) (Quit: WeeChat 3.3)
[20:49:14] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:1ebd:6698:6e81:143f)
[20:53:49] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:1ebd:6698:6e81:143f) (Remote host closed the connection)
[20:54:55] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:7485:8b77:1db6:876e)
[20:58:41] *** Quits: blackk (~J@2a02:8389:2301:8980:28e6:f491:d445:b2a9) (Quit: Leaving)
[21:00:15] <Simplar> https://math.stackexchange.com/questions/4380202/how-to-get-roots-with-galley-division here is my good question about galley division
[21:00:30] <Simplar> Since that's not widely known topic, I thought some of you may have interest
[21:03:49] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[21:04:41] *** Quits: kusanagi (~kusanagi@user/kusanagi) (Read error: Connection reset by peer)
[21:06:01] *** Joins: kusanagi (~kusanagi@user/kusanagi)
[21:11:05] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[21:13:02] *** Joins: i0e (~is0ke3@user/is0ke3)
[21:13:38] *** Joins: kmh (~kmh@2a00:6020:5004:6800:ec95:7351:1f8b:5643)
[21:14:56] *** Quits: kmh (~kmh@2a00:6020:5004:6800:ec95:7351:1f8b:5643) (Read error: Connection reset by peer)
[21:15:09] *** Joins: kmh (~kmh@2a00:6020:5004:6800:ec95:7351:1f8b:5643)
[21:16:07] <Olfodr> hey, given an, bn convergent and positive series, if their sum is equal, does that mean that their partial sum sequence are equal too?
[21:16:12] *** Joins: cheater (~Username@user/cheater)
[21:17:32] <bosspotato> a_n = 0 and b_n = 1, -1, 1/2, -1/2, 1/4, -1/4, ... is a counterexample right
[21:17:45] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[21:18:16] <Olfodr> they're not positive unfortunately
[21:18:34] <bosspotato> oh you want positive
[21:18:49] <bosspotato> alright fine, a_n = 1, 0, 0, 0, ... and b_n = 1/2, 1/4, 1/8, ... then
[21:19:55] <Olfodr> ty ty
[21:21:58] <isekaijin> Given *any* sequence, you can find a series whose partial sums are the terms of the sequence.
[21:25:34] *** Joins: econo (uid147250@user/econo)
[21:27:46] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[21:27:53] *** Joins: cadmio (~cadmio@fi-19-215-153.service.infuturo.it)
[21:28:06] *** Joins: qedo (uid245510@id-245510.helmsley.irccloud.com)
[21:29:22] *** Joins: NEYi (~NEYi@109.251.216.38)
[21:29:32] *** Joins: i0e (~is0ke3@user/is0ke3)
[21:30:49] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:b9db:5655:ed7e:8e34)
[21:31:38] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:7825:f7f8:ec4a:fcba) (Ping timeout: 250 seconds)
[21:31:49] <cadmio> regarding the "Difference of Powers Fomula" a^n − b^n = (a − b)(a^(n − 1= + a^(n − 2)b + ... + ab^(n −2) + b^(n − 1))
[21:32:19] <isekaijin> Regarding that formula... what?
[21:32:41] <ppw> I think that = should be )
[21:33:09] <isekaijin> Also, it's much easier to write as a^(n+1) - b^(n+1) = (a - b) sum_{i+j=n} a^i b^j.
[21:33:17] <isekaijin> ppw: Evidently a typo.
[21:33:49] <ppw> hey, I'm just saying.
[21:33:56] <cadmio> I encountered it when trying to prove that fermat numbers have the form 2^2^n + 1 here https://gioretikto.github.io/mat/algebra/wilson.html#fermat_numbers
[21:34:19] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[21:35:13] <cadmio> if you write a^n - b^n as x^n - b^n then b is a root and I could write the factorization of x^n - b^n using (x-b) as factor as it appears in the formula above
[21:35:23] <isekaijin> Why does that need proof? The definition of “Fermat number” is “a number of the form 2^(2^n) + 1”.
[21:35:53] *** Joins: i0e (~is0ke3@user/is0ke3)
[21:35:54] <cadmio> I'm asking to a number of the form 2^k +1 to be prime
[21:36:07] <isekaijin> Oh, okay, but that's not what you originally said.
[21:36:43] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[21:37:33] <cadmio> so that formula seems to rely on Ruffini https://gioretikto.github.io/mat/algebra/ruffini.html
[21:37:36] <cadmio> but I'm not sure about it
[21:41:20] *** Joins: slidercrank (~slidercra@user/slidercrank)
[21:42:42] *** Joins: marloi (~mark@216.154.45.101)
[21:44:30] <isekaijin> Suppose k has an odd factor p. Then we may write 2^k = b^p for some integer p, right?
[21:44:35] <isekaijin> Errr, for some integer b.
[21:44:51] *** Joins: baracurda (~baracurda@user/parserblabla)
[21:45:31] <cadmio> p as well is an integer
[21:45:40] <isekaijin> p is an odd factor by hypothesis
[21:46:00] <cadmio> yes
[21:46:17] <isekaijin> So there's no need to say that p is an integer again, but whatever.
[21:46:19] <isekaijin> Then 1 + 2^k = 1 + b^p = 1 - (-b)^p = (1 + b) (1 - b + b^2 - ... + (-b)^(p-1))
[21:47:02] <isekaijin> So 1 + 2^k cannot be prime if k is a positive integer that has an odd factor.
[21:47:24] <isekaijin> Note that 1 + b^p = 1 - (-b)^p only works because p is odd.
[21:47:45] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[21:48:30] <isekaijin> In conclusion, if you want 1 + 2^k to be prime, for some k > 0, then k cannot have odd factors. In other words, k has to be a power of 2.
[21:48:43] <cadmio> it's applying this formula a^n − b^n = (a − b)(a^(n − 1) + a^(n − 2)b + ... + ab^(n −2) + b^(n − 1))
[21:48:46] <cadmio> with b = 1
[21:49:00] <isekaijin> I found it more convenient to use a = 1.
[21:49:10] <isekaijin> But it's not an important difference.
[21:49:57] <cadmio> so if you write it as x^n - b^n then this poly has a factor (x-b)
[21:50:14] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[21:50:20] *** Joins: remii (~remii@h5-44-206-46.cust.a3fiber.se)
[21:50:34] <remii> I don't see how the property (a) is true https://i.imgur.com/QNcC3gu.png
[21:50:39] <remii> Stuck on this for so long.
[21:51:08] <remii> https://i.imgur.com/UHuqc0t.png
[21:51:28] <remii> More specifically, I don't see how "the jth column of..." is true
[21:51:50] <remii> I'm getting frustrated when they don't define what e_j is in the theorem.
[21:53:27] *** Joins: smile (uid510004@user/smi)
[21:55:06] <cadmio> then I don't understand either why the odd factor implies the (2^3 + 1) factor there (and that number not prime)
[21:57:33] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[21:57:44] *** Joins: Xardas (~Xardas@149.233.51.127)
[22:00:43] *** Joins: vysn (~vysn@user/vysn)
[22:00:45] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 276 seconds)
[22:01:12] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[22:03:40] *** Joins: johnkeats7 (~johnkeats@2804:14c:32:a0cc:dd09:7d83:36a5:4a0e)
[22:06:50] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:b9db:5655:ed7e:8e34) (Ping timeout: 252 seconds)
[22:15:27] *** Joins: Liblx (~Alex@2a02:810c:280:59c:25a3:c73c:4d58:117f)
[22:17:44] *** Joins: Julian (~tos9@python/site-packages/Julian)
[22:19:07] *** Quits: cadmio (~cadmio@fi-19-215-153.service.infuturo.it) (Quit: WeeChat 3.0)
[22:20:34] *** Parts: riv (river@tilde.team/user/river) (WeeChat 3.4)
[22:21:22] *** Quits: Maturion (~Maturion@p200300ede71a8e003896c4630d493e6d.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[22:22:18] *** Quits: Liblx (~Alex@2a02:810c:280:59c:25a3:c73c:4d58:117f) (Ping timeout: 260 seconds)
[22:22:22] *** Joins: kish` (~aqua@user/aqua)
[22:22:39] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[22:23:02] *** Joins: kish` (~aqua@user/aqua)
[22:24:48] *** Quits: baracurda (~baracurda@user/parserblabla) (Ping timeout: 276 seconds)
[22:25:39] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[22:25:54] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[22:26:06] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Ping timeout: 276 seconds)
[22:26:27] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[22:30:08] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[22:31:05] *** Quits: TheCatBehemoth (~TheCatBeh@a89-155-25-194.cpe.netcabo.pt) (Quit: bbl)
[22:32:49] *** Joins: z4kpi (~z4kpi@user/zacts)
[22:33:30] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:78e9:2c9a:5431:d092) (Ping timeout: 260 seconds)
[22:34:35] *** Quits: am1985 (~AM@cpe-74-72-154-241.nyc.res.rr.com) (Quit: This computer has gone to sleep)
[22:34:50] *** Joins: paravida_ (~myChateau@23.31.187.1)
[22:35:20] *** Quits: paravida_ (~myChateau@23.31.187.1) (Client Quit)
[22:36:20] *** Quits: paravida (~myChateau@user/paravida) (Ping timeout: 256 seconds)
[22:38:42] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[22:39:26] <isekaijin> Damn, cadmio is gone.
[22:39:33] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:78e9:2c9a:5431:d092)
[22:39:36] <isekaijin> I had taken the trouble of writing this: http://mathb.in/70550
[22:40:38] *** Joins: Klinda (~superleag@user/klinda)
[22:44:29] *** Parts: savask (~savask@Powder/Developer/savask) ()
[23:00:03] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[23:01:23] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[23:01:44] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[23:02:02] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[23:02:52] *** Quits: z4kpi (~z4kpi@user/zacts) (Quit: Client closed)
[23:03:17] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 256 seconds)
[23:06:00] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[23:06:32] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[23:09:15] *** Joins: Cyp_ (~cyp@213.237.87.172)
[23:11:00] *** Joins: koolazer (~koo@user/koolazer)
[23:12:13] *** Quits: Cyp (~cyp@213.237.87.142) (Ping timeout: 240 seconds)
[23:12:21] *** Quits: BillyZane2 (~BillyZane@185.202.221.34) (Ping timeout: 250 seconds)
[23:13:57] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[23:14:50] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[23:23:25] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[23:32:21] *** Joins: anotheruser55 (~anotherus@62.216.61.67)
[23:33:49] *** Parts: anotheruser55 (~anotherus@62.216.61.67) ()
[23:35:01] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[23:36:46] *** Joins: Jordy (~jordy@user/jordy)
[23:36:49] *** Quits: \o\ (~i.am@187.112.46.243) (Quit: a pentium 100 "running" windows 11 trying to play Last of Us II at ps4emu... that's my brain trying understand 0->R->R->R/2R->0)
[23:37:10] <dude12312414> is that supposed to be an exact sequence
[23:37:25] *** gentooclimax is now known as climax
[23:38:35] *** climax is now known as gentooclimax
[23:38:50] *** Quits: newwebdev13 (~newwebdev@31.210.55.200) (Read error: Connection reset by peer)
[23:39:36] *** Joins: newwebdev13 (~newwebdev@31.210.55.200)
[23:48:10] *** Joins: libsys (~libsys@186.105.132.6)
[23:51:31] *** Joins: dingdreher (~dingdrehe@2a02:aa08:401e:fff2:f4eb:6b94:5a05:6081)
[23:53:54] *** Joins: DrMax__ (~DrMax@132.215.96.30)
[23:54:43] <Z-module> isekaijin: That was a nice write-up. I think I'd try to simplify this way:  1 + 2^k = (1 + b) (1 + [-b^1 + b^2] + [-b^3 + b^4] +...+ [-b^(p-2) + b^(p-1] )   But since b > 1, each paired thing in square brackets there is > 0  so the entire big right factor is > 1,  so we have compositeness.
[23:55:08] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:56:39] *** Quits: kariosfox (~kariosfox@89.229.175.242) (Read error: Connection reset by peer)
[23:56:56] *** Joins: kariosfox (~kariosfox@89.229.175.242)
[23:57:41] *** Quits: DrMax_ (~DrMax@132.215.96.30) (Ping timeout: 256 seconds)
