[00:00:10] <ngoldbaum> lol picard season 2 does a story where they go back to present day to save the future
[00:00:21] <imode> ngoldbaum: is picard any good.
[00:00:23] <imode> like, at all.
[00:00:25] <ngoldbaum> for like the fourth or fifth time in all of star trek
[00:00:33] <ngoldbaum> no season 1 was really bad
[00:00:55] <ngoldbaum> this looks terrible
[00:01:19] <imode> trek died with roddenberry.
[00:01:37] <ngoldbaum> no way ds9 was great
[00:02:23] <imode> roddenberry gave berman his blessing.
[00:08:33] <drakonis> rails...
[00:08:48] <drakonis> kinda hard to like it
[00:09:10] <drakonis> phoenix is also a good option though
[00:09:41] <imode> is that even close to production ready these days.
[00:09:54] <drakonis> has been for quite some time
[00:10:02] <manicennui> ngoldbaum: Do they go back and correct the script to the show?
[00:10:34] <manicennui> drakonis: I would not use Elixir on a random client project.
[00:10:39] <manicennui> drakonis: As much as I might like it.
[00:10:54] <manicennui> Unless you run a consultancy that is known for Elixir work.
[00:11:19] <manicennui> imode: Elixir is running some huge sites.
[00:11:26] <imode> such as?
[00:11:35] <manicennui> I don't know about web stuff specifically, but some backend systems.
[00:11:53] <imode> fair.
[00:11:53] <manicennui> Discord.
[00:12:07] <imode> discord is using elixir? I thought they were using rust and erlang.
[00:12:31] <imode> huh.
[00:12:33] <manicennui> https://elixir-lang.org/blog/2020/10/08/real-time-communication-at-scale-with-elixir-at-discord/
[00:12:33] <buttsbot> Real time communication at scale with Elixir at Discord - The Elixir programming language
[00:12:38] <imode> neat.
[00:12:47] <manicennui> I don't think we really need a second example. =P
[00:12:49] <imode> glad to see it's getting more adoption.
[00:12:52] <imode> meh.
[00:12:58] <imode> discord isn't that impressive tbh.
[00:13:00] <manicennui> But there are others.
[00:13:16] <manicennui> imode: Discord is several orders of magnitude larger than what most of us work on.
[00:13:20] <manicennui> We don't all work at AWS.
[00:13:24] <imode> fair.
[00:13:39] <imode> I sit atop the high tower of "how much data you wanna process".
[00:14:00] <imode> and have written a competitor's backend.
[00:19:54] <mouseghost> imode, erlang... elixir... similar enough
[00:20:01] <mouseghost> both run in the same vm
[00:20:15] <mouseghost> anyways
[00:20:20] <mouseghost> i dont need nothing revolutionary
[00:20:24] <mouseghost> i just need rapid development
[00:21:30] <imode> that's like saying clojure and java are similar enough because they run on the JVM.
[00:21:33] <imode> not even close.
[00:22:15] <mouseghost> but they offer interop
[00:22:27] <mouseghost> so imo its not the same as comparing some kind of rando language to a grown language
[00:24:30] *** Joins: mouseghost[e (~user@87-206-9-185.dynamic.chello.pl)
[00:24:33] <mouseghost[e> hello from emacs
[00:25:22] *** Quits: mouseghost (~draco@user/mouseghost) (Quit: mew wew)
[00:25:32] <imode> "rando language"
[00:33:11] <drakonis> mouseghost[e: to be fair, phoenix achieves the same thing as rails does
[00:33:15] <drakonis> but in a fair nicer manner
[00:33:41] <manicennui> I don't think the argument is about which is better.
[00:33:51] <mouseghost[e> im not phoenix hater
[00:33:55] <drakonis> it will serve you just as well as rails
[00:34:02] <manicennui> It is about the practicality of suggesting such a solution to a random one-time client.
[00:34:04] <drakonis> its just that you'll spend less time fighting rails to get it done
[00:34:08] <drakonis> i see
[00:34:16] <drakonis> that's a different problem.
[00:34:28] <mouseghost[e> yeah. + i need to make it as rapid as possible
[00:34:33] <mouseghost[e> because that way i get more monie
[00:35:02] <manicennui> Imagine their delight when they try to find another developer to work on the system they had you build and find that hiring Elixir developers is really damn hard.
[00:35:02] <buttsbot> üëè developers üëè developers üëè developers üëè
[00:35:22] <mouseghost[e> manicennui: a monopoly for me :3?
[00:35:24] <drakonis> i guess
[00:35:44] <drakonis> elixir isnt exactly the hardest thing to learn
[00:35:46] <drakonis> but sure
[00:36:01] <mouseghost[e> it isnt. in fact, if you can write ruby, you can write elixir
[00:36:03] <mouseghost[e> but still~
[00:36:04] <manicennui> Rails isn't either, but most Rails developers barely know it.
[00:36:04] <buttsbot> üëè developers üëè developers üëè developers üëè
[00:37:52] <drakonis> rails is too disgustingly difficult and different from standard ruby
[00:37:59] <manicennui> How so?
[00:38:09] <manicennui> It is standard Ruby.
[00:38:14] <mouseghost[e> ye
[00:38:35] <drakonis> rather
[00:38:43] <drakonis> it has a lot of weird gotchas and supersets of ruby
[00:38:53] <drakonis> i've tried already
[00:38:55] <manicennui> It's just Ruby.
[00:39:06] <manicennui> It is just large.
[00:39:33] <manicennui> And relies on a lot of metaprogramming.
[00:39:33] <mouseghost[e> its also very rapid
[00:39:41] <mouseghost[e> metaprogramming is ultra nice
[00:39:41] <manicennui> Which is a standard thing to do in Ruby.
[00:39:44] <mouseghost[e> yee
[00:39:51] <manicennui> It's like complaining about macros in a lisp.
[00:40:06] <manicennui> In a large web framework.
[00:40:09] <mouseghost[e> that being said, i was considering writing my own foundation for crm-ish system and then building on top of that
[00:40:19] <mouseghost[e> im not sure if that makes sense
[00:40:24] <manicennui> I do agree that I wouldn't recommend Rails for a large system.
[00:41:12] <manicennui> You want to be DHH.
[00:41:17] <imode> having had to do rails upgrades, I wouldn't even recommend it for a small system.
[00:41:17] <manicennui> We understand.
[00:41:53] <manicennui> imode: If I had to throw a really trivial CRUD interface on top of a small database, I wouldn't be opposed.
[00:42:08] <imode> meh, fair.
[00:42:12] <drakonis> macros in lisp are manageable tho
[00:42:17] <mouseghost[e> lobsters is in rails, btw
[00:42:53] <drakonis> yes
[00:45:10] <drakonis> rails engages in a lot of unpredictable behavior
[00:45:21] <drakonis> i really wish it had a spec or something
[00:45:39] <drakonis> so i could at least understand how to get around the codegen abuse
[00:48:29] <manicennui> I don't think it is unpredictable...
[00:48:37] <manicennui> I think I know what you mean, but that is not the right word.
[00:49:20] <drakonis> i mean that it has a lot of really weird behavior by default
[00:50:02] <manicennui> Now I don't know what you mean.
[00:50:06] <drakonis> okay look
[00:50:41] <drakonis> i do not enjoy how rails renames class names on runtime
[00:50:44] <drakonis> what is even the point of that
[00:50:53] <manicennui> Ah.
[00:50:56] <drakonis> it has caused me endless headaches
[00:50:58] <manicennui> I don't know.
[00:51:09] <manicennui> I didn't find it to be a big stumbling block.
[00:51:12] <drakonis> it also inserts controller functions by default
[00:51:18] <drakonis> because you're doing it in english, right?
[00:51:23] <manicennui> Yes.
[00:51:31] <drakonis> i had to do it in other languages and fucking hell it sucks
[00:51:35] <manicennui> And I don't use the scaffolding.
[00:51:41] <manicennui> Nor do most people who use it professionally.
[00:51:46] <manicennui> scaffolding is for beginners.
[00:51:57] <drakonis> it also renames function names when generating activerecord calls
[00:52:02] <manicennui> Okay, I was going to ask whether English is your first language.
[00:52:13] <drakonis> it isn't, why?
[00:52:25] <manicennui> Because of exactly what you wrote.
[00:52:39] <manicennui> It might be much easier in English, especially if English is your native tongue.
[00:52:43] <manicennui> Nothing it does in English surprises me.
[00:53:12] <manicennui> And the fact that it attempts to pluralize words is far down the list of problems I have with it.
[00:53:35] <manicennui> I agree it would be better if it used the same name everywhere.
[00:54:18] <drakonis> it also fucks up that in english
[00:55:23] <drakonis> which is worse
[00:56:30] <drakonis> what are the other horrible rails things
[00:56:30] <manicennui> I'm sure there are words that it doesn't handle well, but I haven't come across them.
[00:56:43] <manicennui> Its fundamental design.
[00:56:48] <drakonis> ah yes.
[00:56:50] <drakonis> monolith
[00:56:55] <drakonis> also omakase lol
[00:57:06] <manicennui> Most people are convinced that all logic should end up in the model, the view, or the controller.
[00:57:31] <manicennui> And aren't smart enough to put a little bit of thought into it and break their business logic out into a fourth type of class.
[00:57:48] <manicennui> Or read some of the most popular Rails blogs which recommend doing so.
[00:58:03] <drakonis> i also take issue with how much better rails's components are without rails
[00:58:17] <manicennui> The amount of metaprogramming sometimes makes things really difficult to debug, especially if you pull in a bunch of gems.
[00:58:32] <drakonis> i used activerecord with sinatra and it was much less difficult to use
[00:58:34] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[00:58:44] <drakonis> its so bizarre it almost feels deliberate
[00:58:54] <manicennui> Yeah, we've tried to use things like sinatra in the past, and you end up pulling in half of Rails anyways.
[00:59:25] <manicennui> There are tons of things that Rails just takes care of for you that you will want eventually.
[00:59:31] <drakonis> eventually.
[00:59:34] <drakonis> except for the stuff you dont
[00:59:41] <drakonis> also have you seen crystal's offerings yet?
[01:00:18] <drakonis> they finally have a repl
[01:00:20] <drakonis> fuckin god.
[01:00:37] <manicennui> I've looked at it briefly.
[01:00:37] <drakonis> which means i can finally play around with it and not deal with the weird shit
[01:00:54] <manicennui> Not really looking for Ruby with static typing.
[01:01:01] <drakonis> you can get around that
[01:01:24] <manicennui> My issues with Ruby are not its performance.
[01:02:14] <drakonis> what is it then?
[01:02:28] <drakonis> look, what i want from crystal is a better ruby
[01:02:36] <drakonis> because ruby's ecosystem has grown stagnant
[01:02:50] <drakonis> crystal's rails/phoenix equivalent is like a mix of both
[01:02:52] <drakonis> in a good way
[01:02:54] <manicennui> An even smaller ecosystem isn't going to fix that.
[01:04:09] <manicennui> Clojure is most of what I want, and generally performs better as a bonus.
[01:05:08] <drakonis> https://github.com/luckyframework/lucky i can get what i want with this
[01:05:09] <buttsbot> GitHub - luckyframework/lucky: A full-featured Crystal web framework that catches bugs for you, runs incredibly fast, and helps you write co...
[01:05:16] <manicennui> It's hard to be excited about CL and standard scheme after playing with Clojure.
[01:05:19] <manicennui> Racket is a bit better.
[01:05:31] <manicennui> But there is no comparison with the JVM ecosystem.
[01:06:08] <drakonis> you should see r7rs-large scheme though
[01:06:13] <drakonis> racket has its own set of problems
[01:06:31] <drakonis> so does CL
[01:08:37] <manicennui> I basically want Clojure syntax and semantics on BEAM with the JVM's ecosystem.
[01:09:09] <manicennui> You can basically pick 1 and 2 or 1 and 3.
[01:09:51] <drakonis> you can have clojure syntax with some schemes
[01:09:53] <drakonis> also
[01:09:55] <manicennui> I don't know what interop is like between different BEAM languages.
[01:10:06] <drakonis> there's lokke for a scheme based clojure
[01:10:12] <drakonis> beam interop works...
[01:10:19] <manicennui> Elixir seems to be gaining more good libraries.
[01:10:23] <manicennui> Like the recent Nx stuff.
[01:10:31] <manicennui> But I don't know whether that is callable outside of Elixir.
[01:10:51] <drakonis> https://elixirschool.com/en/lessons/intermediate/erlang
[01:10:54] <drakonis> it is, yes.
[01:11:07] <drakonis> i've already called erlang inside elixir
[01:11:14] <drakonis> you just use erlang's syntax iirc
[01:11:39] <manicennui> I knew that was possible.
[01:11:46] <manicennui> I'm talking about the other way.
[01:12:02] <manicennui> Nx is written in Elixir.
[01:12:06] <drakonis> ah
[01:12:12] <manicennui> Can you call it from Erlang or the lisps on BEAM?
[01:12:12] <drakonis> i see, i think there's a way to do so
[01:12:26] <manicennui> Does everything basically get compiled to BEAM bytecode?
[01:12:31] <drakonis> https://joearms.github.io/published/2017-12-18-Calling-Elixir-From-Erlang.html
[01:12:33] <drakonis> yes
[01:13:07] <drakonis> good ol' joe armstrong
[01:13:30] <drakonis> LFE and clojerl
[01:13:33] <drakonis> i hear
[01:13:47] <manicennui> Yeah.
[01:13:51] <manicennui> I think there is one more.
[01:13:57] <drakonis> now, to be fair, the biggest thing about clojure is jvm interop and you lose out on that with clojerl
[01:14:17] <manicennui> That is actually a great part of Clojure, but not the main thing I want.
[01:14:41] <drakonis> the third one is joxa
[01:15:01] <manicennui> I want things like its persistent data structures, immutability by default, sequences, etc.
[01:15:18] <drakonis> https://github.com/lokke-org/lokke
[01:15:19] <buttsbot> GitHub - lokke-org/lokke: Lokke: Clojure for Guile
[01:15:43] <drakonis> http://wiki.call-cc.org/eggref/5/clojurian
[01:15:43] <buttsbot> clojurian - The CHICKEN Scheme wiki
[01:15:45] <drakonis> also this
[01:15:47] <manicennui> What's desirable about the Guile ecosystem though?
[01:16:01] <manicennui> The JVM has everything, and BEAM has a great concurrency model.
[01:16:15] <drakonis> malleability
[01:16:33] <mouseghost[e> manicennui: im sorry. i didnt read it all. what is the name of the fourth class?
[01:16:58] <manicennui> mouseghost[e: Service or Manager are common.
[01:17:02] <manicennui> There isn't a standard.
[01:17:05] <manicennui> That is the problem.
[01:17:14] <mouseghost[e> what does the serivce or manager do?
[01:17:22] <manicennui> Your business logic.
[01:17:33] <mouseghost[e> hm
[01:17:34] <drakonis> the strongest aspect of the schemes is that it is highly pliable
[01:18:05] <manicennui> You want a separate class with your business logic that is well written and well tested that is separate from both persistence and from serving web clients.
[01:18:24] <manicennui> If I want to call that logic in a sidekiq job, or anything else, it should be straightforward.
[01:18:34] <drakonis> in ways well beyond any of the other lisps
[01:18:40] <mouseghost[e> ah
[01:19:08] <manicennui> If you put all the business logic in a controller, then you end up copying it if you need the same logic in another controller, or a job, or whatever else.
[01:19:32] <manicennui> If you put it in the model, then you are entangling it with concerns of persistence, and your model classes become bloated.
[01:19:52] <manicennui> If you are writing a truly small application, I think it would be fine to put it in the model.
[01:20:11] <manicennui> But everything thinks that, and then never fixes it later when their small application becomes large.
[01:20:18] <drakonis> its genuinely impressive
[01:20:38] <manicennui> mouseghost[e: Ideally the core of your application should be entirely independent of Rails.
[01:21:08] <mouseghost[e> i mean, here its just a crud... so theres not much to think about? and theres no ongoing jobs or anything...
[01:21:08] <manicennui> mouseghost[e: You can find some thoughts on this if you search for hexagonal architecture rails.
[01:21:08] <mouseghost[e> yet
[01:21:18] <drakonis> what even are persistent data structures btw?
[01:21:20] <manicennui> Everyone thinks it is "just crud".
[01:21:35] <manicennui> drakonis: A way to make immutable data structures fast.
[01:21:47] <drakonis> ah.
[01:22:08] <mouseghost[e> but its literally crud with some fancy pictures :<!
[01:22:11] <manicennui> drakonis: Generally what is done is something like take the last version of the data structure, and add a pointer to the new data, without modifying the previous version.
[01:22:27] <mouseghost[e> they've said that they would be happy to make it more advanced, but not yet~
[01:22:32] <mouseghost[e> though i might be doing some pdf generation, hmph
[01:22:34] <manicennui> drakonis: But smart people have come up with efficient and smart ways to do this.
[01:22:39] <mouseghost[e> anyways. i will probably just use rails
[01:22:42] <manicennui> drakonis: And Rich Hickey implemented it for Clojure.
[01:22:58] <manicennui> drakonis: So we can have maps and vectors that perform decently with immutability.
[01:23:00] <mouseghost[e> though, if you could recommend some quick read about architecture or something... i have huge problems with being consistent hahaha
[01:23:49] <drakonis> but sure
[01:23:59] <drakonis> i'm looking forward to lokke as a means to improve guile
[01:24:16] <drakonis> it is the most technically impressive scheme alongside chez
[01:24:28] <mouseghost[e> why is it impressive?
[01:24:48] <drakonis> its bytecode vm is very flexible
[01:24:52] <manicennui> drakonis: The diagrams here are decent: https://en.wikipedia.org/wiki/Persistent_data_structure#Examples_of_persistent_data_structures
[01:24:53] <buttsbot> Persistent data structure - Wikipedia
[01:25:15] <manicennui> mouseghost[e: I don't have any standard reading recommendations that are quick.
[01:25:30] <manicennui> I think architecture is hard to teach, and I don't know of a singular resources to recommend.
[01:25:51] <drakonis> remember how racket loves to present itself as a language oriented language
[01:26:11] <mouseghost[e> hm
[01:26:15] <mouseghost[e> just gotta be persistent, then
[01:26:17] <drakonis> guile can do the same but much cleaner
[01:26:23] <mouseghost[e> even if it means time. and remember to do it cleanly
[01:26:35] <mouseghost[e> probably nobody will read it other than me, but at least i will save myself some sanity
[01:26:51] <drakonis> chez on the other hand is a very performant scheme
[01:26:56] <manicennui> mouseghost[e: There are a ton of great Ruby/Rails books and blogs to read and think about.
[01:26:58] <drakonis> so much that racket now uses it as a backend
[01:27:04] <manicennui> I just don't know that any of them are "quick".
[01:27:29] <drakonis> it also has a mostly similar design to guile?
[01:27:33] <drakonis> nanopass is a very neat thing.
[01:27:45] <mouseghost[e> manicennui: i have some question tho: do i pass all my objects to the view before i exit the controller? or can i load some resources from the database in the view?
[01:28:01] <mouseghost[e> architecture book?
[01:28:20] <manicennui> mouseghost[e: Your view should not know that the database exists.
[01:28:29] <manicennui> Ideally it should work with nothing but a presenter.
[01:28:49] <mouseghost[e> so ideally NO queries should trace back to the view
[01:28:49] <drakonis> chez is the fastest scheme :V
[01:28:50] <manicennui> Which is yet another type of class that isn't standard in Rails, but common.
[01:28:56] <drakonis> regarding CL
[01:29:07] <manicennui> mouseghost[e: A view should do what its name says and nothing more.
[01:29:12] <mouseghost[e> hmm
[01:29:33] <manicennui> Any logic in a view should be as trivial as "if this data exists, display this section".
[01:29:57] <manicennui> Or "do this in a loop".
[01:29:58] <drakonis> i kinda wish it wasnt so stagnant
[01:30:07] <drakonis> there's robert strandh's work but its only one thing
[01:30:17] <manicennui> drakonis: But they have already created perfection!
[01:30:22] <mouseghost[e> the thing is that, sometimes there's like. user -> basket. so i should load that basket in the controller
[01:30:25] <drakonis> ha
[01:30:25] <mouseghost[e> as i understand?
[01:30:27] <drakonis> perfection
[01:30:35] <drakonis> there are ways they can improve it
[01:30:42] <mouseghost[e> easy to just do user.basket, with activerecord...
[01:30:46] *** Quits: dcz_ (~dcz@user/dcz) (Remote host closed the connection)
[01:31:19] <manicennui> drakonis: I get that CLers are mad because there is so much that was already solved in CL decades ago, and there is still stuff that we don't take advantage of, but they also seem to have stopped trying to make much of anything better other than maybe implementations.
[01:32:17] <mouseghost[e> i mean, what else would you need
[01:32:28] <mouseghost[e> theres also a pretty new emacs interop
[01:32:37] <drakonis> coalton and sicl are maybe the most interesting things to come out of CL recently
[01:32:40] <mouseghost[e> called swank or something. it has cats ascii art so it buys me
[01:33:21] <drakonis> sly/slynk
[01:33:30] <drakonis> its a slime/swank fork
[01:34:01] <mouseghost[e> a ye, sly
[01:34:04] <mouseghost[e> my bad
[01:34:32] <manicennui> why is sicl 44% tex?
[01:34:47] <drakonis> https://github.com/nanopass/nanopass-framework-scheme this is fuckin incredible
[01:34:48] <buttsbot> GitHub - nanopass/nanopass-framework-scheme: The new nanopass framework; an embedded DSL for writing compilers in Scheme
[01:34:58] <drakonis> because that's the documentation i guess?
[01:35:03] <drakonis> publications and docs
[01:35:07] <manicennui> drakonis: Looks like all kinds of stuff.
[01:35:15] <mouseghost[e> specsss?
[01:35:16] <mouseghost[e> hm
[01:35:26] <drakonis> it is a umbrella for a bunch of other pieces as well
[01:35:27] <manicennui> Just found it amusing.
[01:35:37] <drakonis> one of its components is used in clasp
[01:35:42] <drakonis> which is a cl in c++
[01:36:07] <drakonis> it shows how the implementations are stagnant
[01:36:08] <manicennui> Are threads still the default for concurrency in CL?
[01:36:21] <drakonis> it doesnt even have that lol
[01:36:29] <drakonis> its not part of the standard
[01:37:35] <manicennui> What little investigation I have done into CL leads me to believe that FFI with C libraries is far too common to get things done.
[01:37:51] <drakonis> sbcl has ffi built into it
[01:38:05] <drakonis> https://cffi.common-lisp.dev/
[01:38:05] <buttsbot> CFFI - The Common Foreign Function Interface
[01:38:05] <manicennui> I don't want to use FFI to do anything useful though.
[01:38:18] <drakonis> there are a lot of things that don't use ffi
[01:38:23] <manicennui> This is where the JVM has a huge advantage over almost everything.
[01:38:32] <manicennui> So many things have been implemented in pure Java.
[01:39:25] <manicennui> Not pulling in C libraries to do something as trivial as talking to a database.
[01:39:37] <manicennui> And the Java libraries are heavily used and maintained.
[01:39:55] <manicennui> Hard to think of another ecosystem like it.
[01:40:40] <manicennui> Maybe we'll see something similar with Rust eventually.
[01:40:42] <drakonis> https://github.com/sharplispers/ironclad/blob/master/ironclad.asd lmfao
[01:40:42] <buttsbot> ironclad/ironclad.asd at master ¬∑ sharplispers/ironclad ¬∑ GitHub
[01:40:45] <drakonis> look at the size of this
[01:41:29] <drakonis> look at all this compatibility shit
[01:42:05] <drakonis> https://github.com/sionescu/bordeaux-threads this is the threading library
[01:42:05] <buttsbot> GitHub - sionescu/bordeaux-threads: Portable shared-state concurrency for Common Lisp
[01:42:08] <drakonis> for compat
[01:44:08] <drakonis> https://github.com/CodyReichert/awesome-cl
[01:44:09] <buttsbot> GitHub - CodyReichert/awesome-cl: A curated list of awesome Common Lisp frameworks, libraries and other shiny stuff.
[01:48:11] <drakonis> https://github.com/marcoheisig/Petalisp manicennui this is not ffi based
[01:48:12] <buttsbot> GitHub - marcoheisig/Petalisp: Elegant High Performance Computing
[01:48:16] <drakonis> its entirely cl
[01:48:49] <manicennui> Nice.
[01:50:36] <manicennui> Nx in Elixir depends on things like torch unfortunately.
[01:51:16] <drakonis> not seeing any transistive dependencies on ffi
[01:51:36] <drakonis> i dont think BEAM is very conductive to this kind of workload
[01:53:21] <drakonis> v. unfortunate though
[01:54:21] <manicennui> I wonder whether we might see webassembly embeddable into all kinds of things in the future to deal with this.
[01:54:55] *** Quits: bontaq (~user@ool-45779fe5.dyn.optonline.net) (Ping timeout: 256 seconds)
[01:55:51] <drakonis> you know what's actually quite funny about cl?
[01:56:01] <drakonis> the various implementations arent fully compatible with each other
[01:56:19] <manicennui> That's pretty common with all standards.
[01:57:27] <manicennui> Pretty common for the various schemes to be partially standards compliant, but with some extensions.
[01:58:03] <manicennui> There are gcc extensions to C.
[01:58:04] <manicennui> Etc.
[01:58:28] <drakonis> its not small differences
[01:58:44] <drakonis> they diverge in the same way as scheme implementations do, but in cl's case, they strive to be compatible across everyone
[01:59:18] <drakonis> i'm currently checking the source code for atomics and wow
[02:02:56] <drakonis> its fascinating.
[02:03:15] <drakonis> the library calling convention is different
[02:05:26] <drakonis> lol woops nanopass can do langs (experimentally.)
[02:07:13] <manicennui> https://people.com/celebrity/david-copperfield-robbed-at-gunpoint/
[02:07:14] <buttsbot> David Copperfield Robbed at Gunpoint | PEOPLE.com
[02:07:24] <manicennui> This is old, but I found it interesting.
[02:07:31] <manicennui> But Copperfield, his statement says, turned his pockets inside out to show that they were empty ‚Äì a sleight of hand by the master illusionist, who later showed police that his pockets were filled with cell phones, a wallet and a passport.
[02:07:34] <drakonis> goddamn incredible.
[02:09:24] <drakonis> btw, i really cant get into racket.
[02:11:35] <manicennui> Damn, now I want to watch The Prestige and The Illusionist again.
[02:11:40] <bkero> https://www.youtube.com/watch?v=GwJesApzMzc
[02:11:41] <buttsbot> Nicknackatory - YouTube - https://www.youtube.com/watch?v=GwJesApzMzc
[02:17:18] <manicennui> https://www.youtube.com/watch?v=nwacMaqSfhM
[02:17:18] <buttsbot> David Copperfield Breaks Down Magic Scenes from Movies | GQ - YouTube - https://www.youtube.com/watch?v=nwacMaqSfhM
[02:43:39] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 256 seconds)
[02:51:06] *** Quits: mouseghost[e (~user@87-206-9-185.dynamic.chello.pl) (Read error: Connection reset by peer)
[03:01:25] <drakonis> ah, neat, gambit scheme has erlang-like concurrency
[03:04:28] <manicennui> Right as I turned off my TV it was about to play a video on YT where Seth Rogan breaks down his most iconic roles.
[03:04:33] <manicennui> What is there to break down?
[03:04:36] <manicennui> "I got really high."
[03:04:39] <manicennui> That's pretty much it.
[03:05:42] <imode> I got really high and said that vaccinated people were sheep.
[03:05:53] <imode> great roles there, seth.
[03:06:03] <manicennui> Why does he keep getting roles?
[03:06:05] <manicennui> He is never good.
[03:06:13] <manicennui> Not every movie needs a dumb stoner.
[03:06:28] <manicennui> I guess that is a big demographic these days though.
[03:06:29] <imode> wait I got him confused with joe rogan
[03:06:51] <imode> I await to see his performance as donkey kong.
[03:06:52] <manicennui> Ah.
[03:07:01] <manicennui> I didn't know whether he was an anti-vaxxer too.
[03:07:05] <manicennui> Only knew that he was a dumb stoner.
[03:07:17] <imode> he's apparently very adamant on precautions and vaccinations, good for him.
[03:07:17] <manicennui> Who plays a dumb stoner in everything.
[03:07:22] <manicennui> Even when that isn't the role.
[03:07:35] <manicennui> Because he can't actually act.
[03:07:38] <imode> fwiw he was decent in that steve jobs movie.
[03:08:03] <imode> what roles has he had that weren't just stoners..
[03:08:23] <manicennui> Green Hornet
[03:09:30] <imode> he voiced mantis in kung fu panda. can mantii get high?
[03:16:30] <manicennui> I didn't enjoy the first Kung Fu Panda because I couldn't get past Jack Black voicing the main character.
[03:16:47] <manicennui> Hate when they have big name actors try to do voice acting.
[03:40:16] <defect> imode: i remember 50/50 as pretty good, but it's been a while
[03:44:09] <imode> manicennui: you're gonna be excited for the mario movie then
[03:44:13] <imode> defect: never seen.
[03:47:58] <manicennui> imode: I wouldn't have watched it regardless.
[03:48:08] <manicennui> I've never seen the Sonic movie either.
[03:51:50] <imode> I'll probably never see it.
[04:08:36] <indigo> I spent most of today trying to make changes to code and failing
[04:08:56] <indigo> Sometimes it feels like you need ages to find the right design
[04:09:59] *** Quits: jj5 (~jj5@211-26-131-173.dyn.dodo.net.au) (Remote host closed the connection)
[04:10:21] *** Joins: jj5 (~jj5@211-26-131-173.dyn.dodo.net.au)
[04:10:45] <manicennui> That's your problem: trying to design it well
[04:10:49] <manicennui> Just slop that shit together
[04:10:52] <manicennui> One giant class
[04:10:57] <manicennui> With one method
[04:11:12] <manicennui> Lots of ifs
[04:13:11] <indigo> I don't think that will work here; it's a data pipeline so it has to be written a certain way
[04:14:08] <indigo> Basically https://beam.apache.org/documentation/pipelines/design-your-pipeline/#multiple-transforms-process-the-same-pcollection
[04:14:08] <buttsbot> Design Your Pipeline
[04:14:33] <indigo> And a whole bunch of these tiny functions everywhere with a bunch of different data representations
[04:18:02] <manicennui> You just aren't using your imagination.
[04:18:12] <manicennui> One function, one of the params is the "action".
[04:18:51] <manicennui> So Meatloaf died.
[04:21:20] <indigo> My wife thought he died in the 90s
[04:36:11] <gwozniak> Was Mr. Loaf's death covid related?
[04:41:02] <gwozniak> If it is, no one is saying so probably not
[04:41:15] <manicennui> They haven't released the cause
[04:41:33] <manicennui> Maybe it was and they don't want to say because he was an idiot about it
[04:42:14] <manicennui> "No official cause of death has been released, but many news outlets reported that he had been seriously ill with Covid-19."
[04:42:43] <manicennui> He was critical of restrictions brought about in reaction to the COVID-19 pandemic telling the Pittsburgh Post-Gazette, "I understood stopping life for a little while, but they cannot continue to stop life because of politics. And right now they‚Äôre stopping because of politics." He complained about mask requirements on airlines, saying, "If I die, I die, but I‚Äôm not going to be controlled."
[04:43:03] <manicennui> Well, now his life is stopped permanently.
[04:43:11] <manicennui> Won't have to worry about those pesky restrictions.
[04:43:28] <manicennui> No masks required in one's casket!
[04:58:19] <ngoldbaum> gwozniak: it was
[04:59:24] <ngoldbaum> at least according to tabloids
[04:59:36] <ngoldbaum> he was antivax
[05:00:36] <ngoldbaum> https://old.reddit.com/r/HermanCainAward/comments/s9elvm/his_name_was_meatloaf_prominent_antiva_antimask
[05:00:38] <buttsbot> His name was Meatloaf, prominent Antiva, Antimask, Anti Mandate singer of really well written songs : HermanCainAward
[05:00:49] <companion_cube> oh shit
[05:01:08] <companion_cube> if he's on hca he really fucked up
[05:17:18] <manicennui> I don't think they have fact checkers
[05:18:48] <imode> damn.
[05:20:35] <imode> meatloaf didn't have to go that way.
[05:20:47] <manicennui> He has been a cunt for years though.
[05:20:57] <imode> yeah.
[05:21:26] <manicennui> https://www.zillow.com/homedetails/101-Fawns-Rst-Black-Mountain-NC-28711/5590648_zpid/
[05:21:28] <buttsbot> 101 Fawns Rst, Black Mountain, NC 28711 | MLS #3807495 | Zillow
[05:21:53] <manicennui> "Fractional Ownership.  Buy 1/2 interest in this property and use two consecutive weeks per month."
[05:22:02] <manicennui> Is this a timeshare?
[05:22:07] <manicennui> Are they allowed to list like this?
[05:22:15] <imode> they are not, zillow does not care.
[05:22:40] <imode> they'll let you list square footage as 10k sqft even if you're renting out a portion of a lot.
[05:23:53] <imode> case in point, someone's listed an apartment for rent. 53k square foot. it's a 1bd 1bth studio.
[05:24:15] <imode> either I'm renting a hangar with a single bathroom or they're lying.
[05:28:00] <manicennui> Obviously it has a 50k square foot bathroom.
[05:28:04] <manicennui> Toilet right in the center
[05:29:19] <manicennui> Houses for sale are listed with MLS though. They might care
[05:32:35] * manicennui looks at the weather in Asheville.
[05:32:50] <manicennui> Highs in the 40s...
[05:33:21] <companion_cube> imode: it's an army barrack
[05:33:38] <companion_cube> one room, one bathroom with 20 toilets
[05:33:49] <defect> it was a lovely 20 degrees when i left work today
[05:36:53] <drakonis> manicennui: i checked lokke's source and well, this is a nice thing to have
[05:37:35] <drakonis> got hash maps on guile now :V
[05:39:02] * indigo hashes drakonis
[05:48:54] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[05:51:06] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:57:17] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 240 seconds)
[05:59:48] <ngoldbaum> https://twitter.com/tommywiseau/status/1484410134428143618
[05:59:48] <buttsbot> Twitter - tommywiseau - https://t.co/R1CoxTODre
[06:03:48] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[06:12:47] <imode> tommy wiseau is an alien and nobody can convince me otherwise.
[06:28:44] *** Quits: gwozniak (~user@dslb239.ody.ca) (Remote host closed the connection)
[06:28:57] *** Joins: gwozniak (~user@dslb239.ody.ca)
[06:48:57] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 240 seconds)
[06:50:25] <manicennui> New episodes of Ozark.
[06:56:09] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[06:59:16] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[08:37:30] <manicennui> I just realized that it is a good time to be a vampire. Lot of remote jobs where you never need to come into the office now.
[08:37:56] <manicennui> Not sure whether they actually need to sleep during the day though.
[08:38:08] <manicennui> Or they just do it to avoid light.
[09:12:27] *** Joins: gco (~gco@2601:647:4c80:2424:48f0:57ae:323:8448)
[09:43:01] <indigo>  Bad time to be an energy vampire
[09:43:09] <indigo> Although you can probably be an energy vampire over VC too
[09:44:45] <manicennui> https://i.redd.it/b3ejfh8015d81.jpg
[09:56:24] <defect> might be even more effective over VC
[10:05:09] <manicennui> https://www.theverge.com/2022/1/21/22895126/ozzy-osbourne-nft-scam-cryptobatz-hack-ethereum
[10:05:10] <buttsbot> Ozzy Osbourne‚Äôs NFT project shared a scam link, and followers lost thousands of dollars - The Verge
[10:13:32] <imode> they just went off the rails on the crazy train.
[10:36:17] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 240 seconds)
[10:57:49] *** Quits: gco (~gco@2601:647:4c80:2424:48f0:57ae:323:8448) (Quit: ZZZzzz‚Ä¶)
[13:10:49] <riv> lol
[13:41:26] <riv> guys
[13:41:27] <riv> second life but
[13:41:33] <riv> bitcoin instead of lindens
[13:41:40] <riv> can I be a billionare now
[15:50:49] * epilys sends riv 5000 Œ≤itcoins
[15:51:01] <riv> how is that pronounced
[15:51:04] <riv> shitcoins?
[15:51:19] <riv> ssitcoins
[16:23:58] <epilys> Œ≤ is v
[16:24:20] <epilys> secunda vita denarios
[16:33:54] <epilys> https://github.com/mcclure/NFTBlocker
[16:33:55] <buttsbot> GitHub - mcclure/NFTBlocker: Browser plugin to autoblock NFT users on Twitter.
[18:10:30] <manicennui> https://www.reddit.com/r/antiwork/comments/s9xreh/judge_allows_healthcare_system_to_prevent_its/
[18:10:32] <buttsbot> Judge allows healthcare system to prevent its AT-WILL employees from accepting better offers at a competing hospital by granting injunction ...
[18:10:47] <manicennui> This is nuts
[18:17:21] <manicennui> They should bring a ton of attention to this kind and get people fired up
[18:17:50] <manicennui> s/kind//
[18:18:35] <manicennui> Fuck corporations and fuck our healthcare system
[18:20:13] <manicennui> ‚ÄúAh this must be that famous American freedom that I keep hearing about.‚Äù
[19:36:15] <prussian> Unless you live in California, the legality of these non-competes is really.... uh bad?
[19:36:39] <prussian> Idaho I think has it the worst...
[19:38:11] <prussian> manicennui: freedom isn't free.
[19:38:18] <prussian> Costs a buck o' five
[20:58:36] <riv> https://twitter.com/fsf/status/1484903702125330437
[20:58:36] <buttsbot> Twitter - fsf - Without free (as in freedom) software, we cannot and will not have a free society. Take the next step to software freedom and help ...
[21:33:49] <prussian> why is the FSF using twitter now? lol
[21:36:58] <ngoldbaum> ‚Äújoined may 2008‚Äù
[21:38:46] <prussian> damn.
[21:38:52] <prussian> feels so impure of them
[21:39:56] <Brekkjern> I didn't know they were able to operate a GUI?
[21:42:36] <ngoldbaum> does suckless have a twitter?
[21:42:44] <Geekingfrog> can they use twitter without all the non free js ?
[21:45:09] <prussian> maybe they use the API
[21:52:48] <manicennui> prussian: They aren't even arguing non-compete.
[21:52:58] <manicennui> prussian: They are arguing that letting them leave will hurt the hospital.
[21:53:05] <manicennui> prussian: But they also did not counter offer at all.
[21:53:14] <manicennui> They just went straight to the legal system.
[21:54:30] <manicennui> So these people are basically at the mercy of the bad decisions of one hospital's CEO.
[21:55:42] <manicennui> They gave notice and everything.
[21:56:00] <manicennui> And I doubt that a non-compete for clinicians is enforceable anywhere.
[21:56:50] <manicennui> The idea that hospitals are competing is pretty disgusting as well.
[21:57:05] <manicennui> But that's America!
[22:14:53] <prussian> L
[22:15:03] <prussian> I guess.
[22:15:13] <prussian> Legal DoS
[22:15:55] <manicennui> They want the "free market" until something doesn't go their way.
[22:16:33] <prussian> Duh
[22:16:39] <prussian> Everyone is a hypocrit usually
[22:17:04] <manicennui> Except us.
[22:17:10] <manicennui> This channel is a bastion of integrity!
[22:17:16] <manicennui> Other than buttsbot
[22:22:58] <Brekkjern> Excuse me! The only fault of buttsbot is the segmentation fault that occasionaly happens.
[22:25:00] <manicennui> It does that on purpose
[22:36:28] <prussian> Doubt
[22:36:38] <prussian> I try very hard, to not be.
[22:36:44] <prussian> But it isn't easy
[22:37:49] <prussian> Man I'm pissed off for some reason.
[22:38:51] <imode> it's in the air.
[22:44:03] <manicennui> prussian: https://www.reddit.com/r/AbsoluteUnits/comments/s7vsbe/he_has_come_back_from_the_battle/
[22:44:05] <buttsbot> He has come back from the battle! : AbsoluteUnits
[22:45:20] <imode> someone threw that cat through the snow.
[22:47:31] <manicennui> How dare you question that cat's integrity!
[22:48:21] <gwozniak> This is really good: https://www.youtube.com/watch?v=YQ_xWvX1n9g
[22:48:22] <buttsbot> The Problem With NFTs - YouTube - https://www.youtube.com/watch?v=YQ_xWvX1n9g
[22:48:44] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[22:50:08] <Geekingfrog> 2:18h o√î
[22:50:34] <drakonis> its a documentary
[22:50:38] <imode> if you need a 2:18h video to tell you why these things are bad..
[22:50:40] <gwozniak> It really describes the problem very well
[22:51:09] <imode> thank god crypto is crashing.
[22:51:25] <Geekingfrog> don't rejoice too fast
[22:51:33] <Geekingfrog> Still has a way to go
[22:51:41] <imode> I'll take whatever small joy I can these days.
[22:51:47] <Geekingfrog> same
[22:52:02] <Geekingfrog> It's almost under 30k‚Ç¨ now \o/
[22:52:20] <imode> may it drop to $0 and we be done with this mess.
[22:59:04] <companion_cube> imode: buy the dip and hodl! /s
[23:04:39] <drakonis> did you know that ethereum exists because blizzard nerfed warlocks?
[23:07:28] <imode> pardon?
[23:07:58] <Geekingfrog> found the link ! https://twitter.com/zemnmez/status/1443821271045845005?s=20
[23:07:58] <buttsbot> Twitter - zemnmez - omfg‚Ä¶ etherium was created as a cope for a world of warcraft nerf?? im losing my fucking mind. imagine being so mad you‚Ä¶ what t...
[23:08:40] <drakonis> the guy that created ethereum played a warlock in wow
[23:08:50] <drakonis> blizzard nerfed life drain
[23:09:01] <imode> holy shit.
[23:09:27] <drakonis> fucking gamers, man.
[23:09:33] <imode> video games were a mistake.
[23:10:01] <Geekingfrog> agriculture was a mistake
[23:10:04] <bkero> Vitalik?
[23:10:13] <drakonis> yes
[23:11:28] <drakonis> it even comes up on the video lmao
[23:15:42] <drakonis> its insane
[23:16:28] <manicennui> Computers were a mistake
[23:28:01] <companion_cube> That's awesome
[23:28:14] <companion_cube> The classic villain origin story
[23:28:35] <companion_cube> "they killed everyone in my village... In WoW"
[23:55:36] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
