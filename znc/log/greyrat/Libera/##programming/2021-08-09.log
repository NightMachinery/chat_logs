[00:00:48] *** Joins: LiftLeft (~LiftLeft@154.21.28.208)
[00:02:18] *** Quits: xff0x (~xff0x@2001:1a81:533f:2500:c767:19bd:28d8:628d) (Ping timeout: 256 seconds)
[00:03:02] *** Quits: dan01 (~dan01@95.76.189.217) (Ping timeout: 245 seconds)
[00:04:17] *** Joins: dan_the_man (~dan01@95.76.189.217)
[00:05:07] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[00:07:12] *** Quits: dan1001 (~dan01@95.76.189.217) (Ping timeout: 245 seconds)
[00:09:17] *** Quits: xcombelle (~Xavier_Co@abayonne-651-1-41-161.w92-156.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[00:11:45] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[00:12:28] *** Quits: federico_it (~textual@151.95.116.125) (Quit: Textual IRC Client: www.textualapp.com)
[00:13:06] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[00:17:36] *** Quits: gitgoood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com) (Ping timeout: 256 seconds)
[00:23:08] *** Quits: dan_the_man (~dan01@95.76.189.217) (Read error: Connection reset by peer)
[00:27:00] *** Quits: NChief (~nchief@user/nchief) (Ping timeout: 272 seconds)
[00:28:34] *** Quits: kodah (~kodah@user/kodah) (Ping timeout: 240 seconds)
[00:30:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:33:09] *** Joins: zaher (~zaher@37.48.180.93)
[00:35:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[00:36:33] *** Joins: NChief (~nchief@irc.nortv.net)
[00:39:44] *** Joins: hexfive (~eric@50.35.83.177)
[00:39:56] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Quit: Leaving.)
[00:40:19] *** Quits: hexfive (~eric@50.35.83.177) (Client Quit)
[00:43:05] *** Joins: xff0x (~xff0x@2001:1a81:533f:2500:c767:19bd:28d8:628d)
[00:45:09] *** Quits: Haxxa (~Haxxa@122.199.45.186) (Quit: Haxxa flies away.)
[00:45:43] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[00:45:51] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[00:46:07] *** Joins: Haxxa (~Haxxa@122.199.45.186)
[00:46:07] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[00:46:13] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[00:47:13] *** Joins: xsperry (~as@user/xsperry)
[00:47:42] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[00:47:46] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[00:48:02] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[00:49:03] *** Quits: magla (~gelignite@55d4cb3d.access.ecotel.net) (Quit: Stay safe!)
[00:52:38] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Quit: Lost terminal)
[00:54:16] *** Quits: shailangsa (~shailangs@host86-186-142-59.range86-186.btcentralplus.com) (Ping timeout: 258 seconds)
[00:56:12] *** Quits: tw3ml0w (~tw3ml0w@185.17.27.105) (Ping timeout: 272 seconds)
[00:57:03] *** Joins: tw3ml0w (~tw3ml0w@37.19.196.215)
[00:57:46] *** Joins: eyynet4 (~0x100@32.211.211.39)
[00:58:52] *** Quits: mei (~mei@user/mei) (Ping timeout: 245 seconds)
[00:58:57] *** Quits: rtypo (~alex@user/rtypo) (Quit: WeeChat 3.2)
[01:00:35] *** Joins: SGautam (uid286066@id-286066.charlton.irccloud.com)
[01:01:00] *** Joins: inky (~inky@46.36.113.172)
[01:01:31] *** Joins: jmft2 (~JMFT@81.149.115.87.dyn.plus.net)
[01:02:18] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:02:27] *** Quits: fweht (uid404746@id-404746.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[01:03:20] *** Joins: blahboybaz (~blahboyba@c-73-221-100-152.hsd1.wa.comcast.net)
[01:03:27] *** Quits: inky_ (~inky@46.241.147.153) (Ping timeout: 245 seconds)
[01:04:57] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[01:09:10] *** Joins: vysn (~vysn@user/vysn)
[01:10:37] *** Joins: moose (~moose@user/moose)
[01:10:41] *** Joins: Thedarkb1 (~Thedarkb@85.255.232.66)
[01:11:54] *** Joins: mmlj4 (~mmlj4@ip68-230-228-233.no.no.cox.net)
[01:12:02] *** Quits: blahboybaz (~blahboyba@c-73-221-100-152.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[01:13:12] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[01:13:44] *** Quits: enoq (~enoq@194-208-179-35.lampert.tv) (Quit: enoq)
[01:18:02] *** Quits: Thedarkb1 (~Thedarkb@85.255.232.66) (Ping timeout: 245 seconds)
[01:19:11] *** Quits: user51 (~user51@176.228.90.248) (Quit: leaving)
[01:22:22] *** Joins: jamea (~jamea@177.239.85.103)
[01:23:07] *** Joins: jamea97 (~jamea@177.239.80.217)
[01:25:13] *** Joins: ash_m (~androirc@user/ash-m/x-3292451)
[01:25:28] <ash_m> Does anyone know how events
[01:25:28] <ash_m> store works?
[01:25:44] <ash_m> Eventstore*
[01:25:45] <eyynet4> like a sporting event?
[01:26:12] <eyynet4> do monster trucks count?
[01:26:24] <ash_m> I guess specifically eventstoreDB
[01:26:37] <ash_m> eyynet4 perhaps
[01:26:49] *** Quits: jamea (~jamea@177.239.85.103) (Ping timeout: 250 seconds)
[01:26:58] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 240 seconds)
[01:27:37] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 258 seconds)
[01:27:54] <eyynet4> how granular are we talking here, do you need combustion events for each cylinder?
[01:27:55] <ash_m> Anyway what I mean is like, I'm sure there are some abstract functions like 'getAllEventsInStream'  Or whatever implemented by various libraries
[01:28:02] *** Quits: dislabled (~dislabled@115.229.164.82.customer.cdi.no) (Ping timeout: 245 seconds)
[01:28:16] <ash_m> But they seem to be a bit difficult to navigate and I'm just trying to find what is actually queried
[01:29:00] <ash_m> I guess it sounds like HTTP or TCP message, but I don't know the construction
[01:33:03] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[01:36:22] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[01:36:27] *** Quits: tw3ml0w (~tw3ml0w@37.19.196.215) (Quit: Leaving)
[01:37:51] *** Joins: dislabled (~dislabled@115.229.164.82.customer.cdi.no)
[01:44:39] <d3x0r> more like a while( getevent() ) dispatchevent();
[01:45:14] <d3x0r> or - h = createeventhandler() ;  h.register( "event", callback)
[01:46:22] *** Quits: sdftyguijokpl (~sdftyguij@eth-west-pareq2-46-193-2-167.wb.wifirst.net) (Ping timeout: 245 seconds)
[01:49:56] *** Quits: dislabled (~dislabled@115.229.164.82.customer.cdi.no) (Quit: ZNC 1.8.2 - https://znc.in)
[01:50:21] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[01:50:40] *** Joins: mickey8 (~user@user/mickey)
[01:51:07] *** Joins: dislabled (~dislabled@115.229.164.82.customer.cdi.no)
[01:51:22] *** Joins: ethanv2 (~ethanv2@0543586f.skybroadband.com)
[01:52:44] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:53:11] *** Quits: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[01:53:34] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[01:54:30] *** Joins: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[01:54:48] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 276 seconds)
[01:55:29] *** Quits: x003fgqwe (uid479614@id-479614.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[01:56:04] *** Joins: tw3ml0w (~tw3ml0w@176.113.72.229)
[01:56:17] <beaky> hello besides type theory are there other theories of programming
[01:56:36] <beaky> like how physics has both quantum physics and newtonian physicsd
[01:58:39] <ethanv2> have you looked into finite state machines and automota?
[01:58:48] *** Joins: Thedarkb1 (~Thedarkb@85.255.232.66)
[01:58:59] <beaky> yes maybe i should check them out
[02:00:29] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[02:01:03] <ethanv2> you might find Chomskyan grammar interesting also
[02:02:02] <xeno> beaky: computation i the big one
[02:03:15] <xeno> beaky: just get a book about "Theory of Computation", and you'll have something to do for a long while
[02:03:36] <beaky> yes i am feeling brave enough 
[02:04:18] <ethanv2> beaky: that's how I felt studying math
[02:06:17] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[02:10:04] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[02:11:13] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[02:11:36] *** Quits: ethanv2 (~ethanv2@0543586f.skybroadband.com) (Quit: leaving)
[02:19:18] *** Quits: rany_ (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[02:19:29] *** Joins: shailangsa (~shailangs@host86-185-58-139.range86-185.btcentralplus.com)
[02:21:08] *** Joins: rany (~rany@user/rany)
[02:24:21] *** Quits: TechTest (uid283215@id-283215.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[02:25:30] *** Joins: maciej (~maciej@d85-145.icpnet.pl)
[02:26:44] <xeno> I felt too brave studying math, so I jumped way ahead. too far ahead 
[02:27:36] <xeno> turns out there's not that much point in studying topology without knowing analysis and being crap at calculus :)
[02:32:29] *** Joins: Quacc (~youbuntoe@user/quacc)
[02:32:33] *** LjL is now known as ElJayEl
[02:33:41] *** Quits: Akuli (~Akuli@87-94-110-245.bb.dnainternet.fi) (Quit: Leaving)
[02:35:08] <Quacc> do you like or hate the IBM bios?
[02:35:46] <xeno> you can remove "bios" from that sentence, and it's a definitive hate 
[02:37:40] <Izem> Quacc: there is not much else?
[02:38:55] <Quacc> i dunno i was just under the impression that not a lot of people did not like it and i wanted to know why
[02:40:25] <Izem> beaky: lambda calculus and register machines are really popular, also http://cs.brown.edu/people/jsavage/book/
[02:40:27] <bayaz> Title: Models of Computation: Exploring the Power of Computing 
[02:41:54] *** Joins: gitgoood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com)
[02:42:54] <xeno> well, lambda calculus is the other model for computation next to the turing machine 
[02:43:20] *** Quits: Quacc (~youbuntoe@user/quacc) (Quit: WeeChat 3.2)
[02:43:28] <Izem> turning machine is rarely used in practice though
[02:43:35] <beaky> nice book 
[02:43:53] <Izem> great model but I've yet to see a non academic use it
[02:44:21] *** Joins: digilink (~digilink@user/digilink)
[02:44:41] <Izem> or rather, I'd pick a few others before that one
[02:46:01] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Remote host closed the connection)
[02:48:18] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 240 seconds)
[02:48:47] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[02:48:57] *** Joins: soapsudsxx (~soapsudsx@209.221.40.143)
[02:50:47] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[02:52:05] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[02:52:18] *** Joins: flynn (~mcbloch@user/flynn)
[02:53:01] *** Quits: Izem (~Izem@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca) (Ping timeout: 268 seconds)
[02:55:45] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:57:53] *** Joins: rany_ (~rany@user/rany)
[02:58:13] *** Parts: maciej (~maciej@d85-145.icpnet.pl) (Leaving)
[02:58:15] *** Quits: rany (~rany@user/rany) (Ping timeout: 250 seconds)
[02:58:38] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:03:52] *** Quits: jaysicks (~jaysicks@84-236-11-22.pool.digikabel.hu) (Quit: Leaving)
[03:06:28] *** Quits: zwr (~zwr@2804:d45:b966:fb00:6d22:e98c:feed:45dd) (Remote host closed the connection)
[03:07:36] *** Joins: ______GOD______ (~GOD@user/god/x-9778998)
[03:08:49] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4) (Quit: WeeChat 2.8)
[03:10:17] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Remote host closed the connection)
[03:10:43] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[03:12:35] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) ()
[03:15:44] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[03:16:41] *** Quits: tw3ml0w (~tw3ml0w@176.113.72.229) (Quit: Leaving)
[03:17:01] *** Joins: tw3ml0w (~tw3ml0w@176.113.72.229)
[03:17:18] *** Quits: tw3ml0w (~tw3ml0w@176.113.72.229) (Remote host closed the connection)
[03:17:36] *** Joins: tw3ml0w (~tw3ml0w@176.113.72.229)
[03:20:02] *** Quits: SGautam (uid286066@id-286066.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[03:20:10] <beaky> so trees and heaps can be represented 'implicitly' using an array by indexing the children as left(i) := 2i+1, right(i) := 2i+2 for example, what are some other data structures that have an implicit representation like this 
[03:20:32] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 245 seconds)
[03:23:59] *** Joins: SGautam (uid286066@id-286066.charlton.irccloud.com)
[03:24:51] *** ElJayEl is now known as LjL
[03:25:44] <pavonia> As the physical memory only consists of a linear array of bytes, basically any data structure can be represented like that
[03:26:08] <pavonia> Also you can represent any data structure as a tree
[03:28:24] <beaky> but in general representing stuff as a tree will not be considered 'implicit' since those other structures will need to maintain extra information, and not all data structures are represented in trees for example graphs in general cant be represented as trees
[03:29:30] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[03:29:50] <edgar-rft> my computer is full of woods
[03:30:14] *** Quits: ixil (~ixil@82.197.178.137) (Remote host closed the connection)
[03:31:19] <beaky> so at least there's binary trees where every level is filled, heaps, and priority queues
[03:32:43] <beaky> with sick O(1) space overhead information theoretic minimal bound
[03:33:21] * edgar-rft sets beaky's trees on fire
[03:33:28] <pavonia> beaky: What do you consider implicit here?
[03:36:48] *** Joins: kodah (~kodah@user/kodah)
[03:36:51] <beaky> implicit is where there's no extra explicit information involved in representing the data structure, all the 'data' in the structure is 'implicit' in things like indices and position, with at most constant O(1) space overhead for maintaining the data structure (compared to for example the o(n) space overhead for maintaining the pointers in a linked list of size n)
[03:36:53] <beaky> https://en.wikipedia.org/wiki/Implicit_data_structure
[03:36:54] <bayaz> Title: Implicit data structure - Wikipedia 
[03:38:29] *** Quits: eyynet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[03:39:00] *** Joins: Izem (~Izem@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca)
[03:39:33] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[03:41:46] *** Quits: ChrisWarrick (kwpolska@user/kwpolska) (Ping timeout: 240 seconds)
[03:41:51] *** Joins: eyynet4 (~0x100@32.211.211.39)
[03:43:41] *** Joins: ChrisWarrick (kwpolska@user/kwpolska)
[03:44:55] <beaky> finally after all these years ive just noticed tux has gray eyelids and he's actually squinting a bit https://upload.wikimedia.org/wikipedia/commons/thumb/3/35/Tux.svg/1280px-Tux.svg.png
[03:44:56] <bayaz> Type: image/png Size: 338.1 kB 
[03:47:38] <eyynet4> i heard a rumor tux was just an RC submarine, not even a real bird
[03:52:46] *** Quits: Tazmainian (~Tazmainia@41.193.169.28) (Read error: Connection reset by peer)
[03:53:30] *** Quits: zaher (~zaher@37.48.180.93) (Ping timeout: 240 seconds)
[03:55:01] *** Quits: zoey (~zoey@2a02:8084:a080:9e00:7c8c:4b88:b1b8:70e1) (Ping timeout: 250 seconds)
[03:56:09] *** Quits: eyynet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[03:56:21] *** Joins: eyynet4 (~0x100@32.211.211.39)
[03:57:53] *** Quits: kodah (~kodah@user/kodah) (Ping timeout: 258 seconds)
[03:58:00] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 252 seconds)
[03:59:50] *** Joins: kodah (~kodah@user/kodah)
[04:01:30] <biberao> tux got fat beaky 
[04:05:26] <edgar-rft> peguins rather seldom get older than 20 years, tux is probably long dead
[04:05:53] <biberao> tux is a god
[04:06:04] <edgar-rft> go is dead, too
[04:06:27] <edgar-rft> *god (but maybe also go)
[04:07:10] *** Quits: tw3ml0w (~tw3ml0w@176.113.72.229) (Quit: Leaving)
[04:08:37] <Izem> Does an app manifest only work with c# solutions? I don't see any where to add it to a project in visual studio except manually
[04:08:54] <Izem> manually in a c++ solution*
[04:09:08] *** Joins: masber (~masber@178.197.196.20)
[04:09:56] *** Quits: eyynet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[04:10:12] *** Joins: eyynet4 (~0x100@32.211.211.39)
[04:12:11] <Izem> they sure like binary objects in windows :P
[04:12:18] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[04:12:42] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:14:31] *** Joins: src (~src@user/src)
[04:16:22] *** Quits: Burgundy (~yomon@5-12-93-72.residential.rdsnet.ro) (Ping timeout: 245 seconds)
[04:16:50] *** Joins: dankle (~dankle@2603-7080-1800-2600-b47f-25ba-593b-34f1.res6.spectrum.com)
[04:17:02] *** Joins: rany (~rany@user/rany)
[04:17:18] *** Quits: rany_ (~rany@user/rany) (Ping timeout: 256 seconds)
[04:18:36] *** Joins: Engineer (~Izem@8.21.10.18)
[04:20:57] *** Quits: Izem (~Izem@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca) (Ping timeout: 245 seconds)
[04:21:02] *** Engineer is now known as Izem
[04:23:10] *** Quits: NEYi (~NEYi@109.251.216.38) (Quit: Leaving)
[04:24:09] <Izem> anyone know if it's possible to add a parser to sublime text?
[04:28:15] <pavonia> Are you sure you need a full parser?
[04:29:22] <Izem> yeah
[04:31:30] *** Quits: dankle (~dankle@2603-7080-1800-2600-b47f-25ba-593b-34f1.res6.spectrum.com) (Quit: Iridium IRC Client)
[04:31:34] *** Joins: Danishman (~Allan@2-104-144-110-cable.dk.customer.tdc.net)
[04:32:59] <pavonia> What syntax are you trying to parse?
[04:33:09] <Izem> scheme
[04:33:34] <Izem> which means I also want to format it
[04:34:27] *** Quits: NChief (~nchief@irc.nortv.net) (Ping timeout: 250 seconds)
[04:35:58] <Izem> there is a buffer api but I'm not sure if that's the correct thing to use
[04:36:38] <pavonia> I don't know if you can add a full parser, but to me Scheme's syntax seems easy enough for a lexer with a context stack
[04:37:23] <Izem> it is pretty easy with a lexer
[04:37:53] *** Joins: NChief (~nchief@irc.nortv.net)
[04:38:11] <Izem> guess sublime is not the tool to make an ide of
[04:38:33] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[04:38:50] *** Quits: nekodesu (~nano@user/nekobit) (Ping timeout: 256 seconds)
[04:39:18] *** Joins: nekodesu (~nano@user/nekobit)
[04:39:42] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (Ping timeout: 272 seconds)
[04:39:50] *** Joins: snake (~snake@user/snake)
[04:40:04] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[04:40:22] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[04:41:27] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[04:41:28] <cis> vscode is a better bet these days
[04:41:37] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:41:43] <mawk> how do I merge two arrays in ruby
[04:42:50] *** Joins: Engineer (~Izem@8.21.10.18)
[04:46:22] *** Quits: Izem (~Izem@8.21.10.18) (Ping timeout: 245 seconds)
[04:46:27] *** Engineer is now known as Izem
[04:47:04] <pavonia> Izem: What feature do you want to implement that Sublime doesn't provide?
[04:49:24] <pavonia> Izem: At least it seems to be possible to advance functionality via plugins: https://github.com/DamnWidget/anaconda
[04:52:12] *** Quits: Izem (~Izem@8.21.10.18) (Ping timeout: 245 seconds)
[04:56:03] <mawk> using +
[04:56:06] <mawk> thanks mawk
[04:57:33] <eyynet4> but now the question is, how d o you concatonate arrays in ruby?
[04:58:24] *** Joins: Danilo82 (~Danilo82@190.89.245.46)
[04:58:40] <Danilo82> can someone teach me GDScript?
[04:59:06] <eyynet4> probably
[04:59:33] <Danilo82> i give up
[04:59:38] *** Parts: Danilo82 (~Danilo82@190.89.245.46) ()
[04:59:45] <eyynet4> that was quick
[04:59:56] *** Joins: Quacc (~youbuntoe@user/quacc)
[05:02:24] *** Quits: Quacc (~youbuntoe@user/quacc) (Client Quit)
[05:02:37] *** Quits: jmft2 (~JMFT@81.149.115.87.dyn.plus.net) (Ping timeout: 245 seconds)
[05:06:22] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[05:06:40] *** Joins: rany (~rany@user/rany)
[05:06:59] *** Quits: yitz (~yitz@exercism/yitz) (Quit:  )
[05:07:47] *** Joins: yitz (~yitz@exercism/yitz)
[05:07:59] <mawk> how do I sync the repo url of a git submodule?
[05:12:32] *** Quits: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca) (Quit: Leaving)
[05:19:30] <mawk> I edit .gitmodules
[05:19:33] <mawk> thanks again mawk
[05:20:21] <cis> he says you're welcome
[05:22:32] *** Joins: Izem (~Izem@8.21.10.18)
[05:23:01] <Izem> pavonia: indentation and smarter completion, brace/bracket matching
[05:24:16] *** MrMobius_ is now known as MrMobius
[05:25:50] *** Joins: Samian (~Sami@2620:10d:c091:480::1:1def)
[05:26:03] <Samian> hi. Can someone answer my question here? https://bpa.st/YCEA
[05:26:04] <bayaz> Title: View paste YCEA 
[05:26:06] *** Quits: Danishman (~Allan@2-104-144-110-cable.dk.customer.tdc.net) (Quit: Leaving)
[05:26:22] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:27:39] *** Quits: Izem (~Izem@8.21.10.18) (Remote host closed the connection)
[05:28:49] *** Joins: Izem (~Izem@8.21.10.18)
[05:28:57] <vin> When comparing parallel programs in practice how are it's efficiency calculated? What metrics are meassured? Is average CPU usage (sume of all core usage/num of cores) bad (assuming no busy loops or deadlocks)?
[05:29:32] <eyynet4> the bottom tensor initialization is just more dense/compact
[05:29:36] <Izem> wouldn't it still be the same complexity stuff?
[05:29:57] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[05:30:02] *** Quits: SGautam (uid286066@id-286066.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[05:30:10] *** Joins: flynn (~mcbloch@user/flynn)
[05:30:34] <vin> Izem: Big O? I am talking about determining program efficiency by measurement
[05:30:50] *** Quits: xsperry (~as@user/xsperry) (Remote host closed the connection)
[05:30:58] <Izem> ok
[05:31:34] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[05:32:19] <biberao> is mawk  in bot mode?
[05:32:34] *** Quits: eyynet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[05:32:49] *** Joins: eyynet4 (~0x100@32.211.211.39)
[05:32:51] <biberao> im going to change my wake up message to "bonjour mon ami"
[05:33:58] *** Joins: Yonle (~Yonle@user/yonle)
[05:34:30] *** Joins: jess (~jess@libera/staff/jess)
[05:34:39] <cis> vin: wouldn't the more important measure be completion speed rather than CPU usage?
[05:35:09] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 276 seconds)
[05:37:48] <vin> cis: How do you verify your parallel program is utilizing all the hardware to it's full extent? measuring Time alone can't answer that
[05:38:05] *** Joins: kmh (~kmh@p200300df5f031500dc3f22e5691fdfcd.dip0.t-ipconnect.de)
[05:38:32] *** Joins: jamea (~jamea@177.239.85.103)
[05:39:27] *** Quits: kmh_ (~kmh@p5dcc60d3.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[05:39:40] <cis> well, maybe you do want to measure CPU usage then
[05:40:08] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:41:22] *** Quits: jamea97 (~jamea@177.239.80.217) (Ping timeout: 245 seconds)
[05:41:23] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 258 seconds)
[05:41:24] *** brabrax_ is now known as brabrax
[05:42:12] *** Quits: xff0x (~xff0x@2001:1a81:533f:2500:c767:19bd:28d8:628d) (Ping timeout: 245 seconds)
[05:44:09] *** Joins: xff0x (~xff0x@2001:1a81:5378:e300:6a47:5d73:b3fa:4d3c)
[05:50:48] *** Quits: Mangy_Dog (~Mange@user/mangy-dog/x-7397214) (Ping timeout: 256 seconds)
[05:52:30] *** Quits: Izem (~Izem@8.21.10.18) (Ping timeout: 258 seconds)
[05:53:52] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 245 seconds)
[06:00:18] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[06:00:32] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[06:00:50] *** Joins: rany (~rany@user/rany)
[06:01:13] *** Joins: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net)
[06:17:52] *** Quits: masber (~masber@178.197.196.20) (Quit: Client closed)
[06:20:07] *** Joins: Guest3880 (~kamui-ren@2001:470:69fc:105::f74)
[06:22:31] <Guest3880> hello
[06:23:57] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2)
[06:24:06] <vdamewood> Olleh.
[06:24:14] *** Quits: eyynet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[06:24:27] *** Joins: eyynet4 (~0x100@32.211.211.39)
[06:25:45] *** Joins: rany_ (~rany@user/rany)
[06:26:10] *** Quits: rany (~rany@user/rany) (Ping timeout: 272 seconds)
[06:28:13] <Guest3880> are ya working on any projects atm?
[06:28:38] <vdamewood> Not really.
[06:28:45] <Guest3880> I see
[06:31:31] <pulse> yes, only 37
[06:31:43] <pulse> but i may get 2 more by tomorrow so potentially 39
[06:31:52] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 272 seconds)
[06:32:07] *** Quits: Yonle (~Yonle@user/yonle) (Remote host closed the connection)
[06:32:33] *** Joins: xsperry (~as@user/xsperry)
[06:32:34] *** Quits: xsperry (~as@user/xsperry) (Excess Flood)
[06:40:46] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[06:45:29] *** Joins: Izem (~Izem@8.21.10.18)
[06:46:50] *** Joins: Thedarkb2 (~Thedarkb@85.255.234.248)
[06:47:29] *** Quits: gitgoood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com) (Ping timeout: 250 seconds)
[06:49:36] *** Quits: Thedarkb1 (~Thedarkb@85.255.232.66) (Ping timeout: 272 seconds)
[06:49:53] *** Joins: PikaChokeMe (~PikaChoke@c-24-11-1-200.hsd1.ut.comcast.net)
[06:50:50] <PikaChokeMe> https://gist.github.com/PikaChokeMe/a9429327a2de21dac4e05dbafcbec293 is there like... a not dumb way to do this? 
[06:52:10] <PikaChokeMe> I'm trying to find a way to build a list of all the possible permutations of like 10 different items, all of which have about 3 possible choices. The time complexity of my for for for for loop is really bad though 
[06:54:12] <InPhase> PikaChokeMe: Wow.  :)
[06:54:22] <PikaChokeMe> Indeed 
[06:54:46] <InPhase> PikaChokeMe: Let's start by agreeing you won't do that again.  :)
[06:55:54] <InPhase> PikaChokeMe: Let's say you have 3 items, with a number of possible choices A, B, and C.
[06:56:10] <InPhase> The total number of permutations is A*B*C.
[06:56:25] *** Joins: wei2912 (~wei2912@112.199.250.21)
[06:57:13] <PikaChokeMe> xD Other examples I've looked at seem to kind of do this with multiple threads, and just build stuff out that way. I'm actually using typescript/javascript so I'm not sure what my options are here 
[06:57:32] <InPhase> So if p runs from 0 to A*B*C-1, your choice a is p%A, choice b is (p/A)%B, choice c is (p/(A*B))%C (the %C is redundant, but included for explanation parity.)
[06:58:14] <PikaChokeMe> also I don't need the total necessarily, but I'd like to build a list of all the possible combinations of items, so that I can look at them all and compare the different stats/attributes of each one 
[06:58:17] <InPhase> With this logic you don't need to generate the permutations, you can iterate them and simply make them as needed.
[06:59:00] <PikaChokeMe> That is... actually quite an interesting idea 
[06:59:08] <InPhase> This is important because if you had trillions of permutations, you could still randomly select from them with an integer iterator approach.
[06:59:24] *** Joins: Yonle (~Yonle@user/yonle)
[06:59:36] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[06:59:47] <PikaChokeMe> one thing I would like to be able to do though is filter through these permutations and stuff... find the gear sets with the highest haste, the highest mastery, and possible which sets are most well rounded on up to three categories 
[07:00:40] <InPhase> Yeah.  Well when you want max of one value, you can iterate through them all, have only one permutation element in memory at a time, and store only the max found so far.
[07:02:20] <InPhase> You can abstract it away with a GetPermutation(p) member function and a GetPermutationCount() function to give you that A*B*C.
[07:02:56] <InPhase> I'm not sure what language that is, but it looks OOP compatible.
[07:04:06] *** Quits: Yonle (~Yonle@user/yonle) (Client Quit)
[07:04:28] *** Joins: Yonle (~Yonle@user/yonle)
[07:04:40] *** Quits: Yonle (~Yonle@user/yonle) (Client Quit)
[07:05:18] <PikaChokeMe> I actually don't think that's a bad idea at all
[07:05:51] <PikaChokeMe> especially since I think it's a lot to render all at once anyway... which means I can probably somehow hook that up to a virtual scroll 
[07:06:15] <InPhase> Yeah.  And it remains more scalable.
[07:06:42] <InPhase> If you wanted to get really fancy, you could make a permutator that lets you fix certain items, and only permute what remains, but following the same logic.
[07:07:41] <InPhase> You can't do that when you lock it down in loops, but with an integer based iterator, you just pick which numbers you operate on dynamically to do that.
[07:08:22] <InPhase> That would be a slightly more complicated function, but way shorter than the one you wrote.  :)
[07:09:18] *** Joins: Yonle (~Yonle@user/yonle)
[07:09:29] <InPhase> Start with hairAccessories, tops, bracers, belts, etc all in a vector of some sort, so you can index them, and then it collapses down to simple.  You could add and remove item types, and the core function doesn't change.
[07:09:32] *** Quits: Yonle (~Yonle@user/yonle) (Client Quit)
[07:10:27] <PikaChokeMe> I will give that a shot 
[07:12:33] *** Joins: Yonle (~Yonle@user/yonle)
[07:12:35] *** Joins: xugo (~xcxugo89@190.2.108.70)
[07:13:08] *** Quits: Yonle (~Yonle@user/yonle) (Client Quit)
[07:13:33] *** Quits: rany_ (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[07:13:51] *** Joins: rany (~rany@user/rany)
[07:14:45] *** Quits: xugo (~xcxugo89@190.2.108.70) (Quit: Leaving)
[07:16:32] *** Joins: Yonle (~Yonle@user/yonle)
[07:23:58] *** Quits: quartz (~quartz@2603-8001-7700-61a4-0000-0000-0000-0acb.res6.spectrum.com) (Quit: WeeChat 3.2)
[07:26:53] *** Joins: Guest35 (~Guest35@103.5.134.18)
[07:27:48] <beaky> what is the best representation for a choose your adventure story http://www.pathsensitive.com/2018/07/when-your-data-model-means-something.html
[07:27:49] <bayaz> Title: When your data model means something else 
[07:31:51] <beaky> and why its tricky
[07:32:21] <Izem> a tree?
[07:32:41] <beaky> what are some other examples of unintended values from particular data models
[07:32:58] <AlexDelarge> lol
[07:33:00] <Izem> what's the tldr, I didn't read it
[07:34:40] <beaky> the tldr is that it is a tree, but because identity can be tricky with mutable state you have to be careful about the way the tree is specified
[07:35:28] *** Quits: esran (~esran@cb.conical-effort.net) (Quit: ZNC 1.8.x-nightly-20190530-13450c7f - https://znc.in)
[07:35:38] <Izem> should be in a collections class at this point :)
[07:35:45] *** Quits: Guest35 (~Guest35@103.5.134.18) (Quit: Client closed)
[07:36:55] *** Joins: esran (~esran@cb.conical-effort.net)
[07:37:40] <beaky> the problem is when you have any passage, how do you decide what story it belongs to. that is the idea behind option 2 but there are multiple problems with it (prompting options 3 and 4)
[07:37:57] *** Joins: pagnol (~user@014198154145.ctinets.com)
[07:38:14] <beaky> since a simple tree does not maintain the parent relationship
[07:39:04] <Izem> why is that needed? also when I think about this it should be a graph, but I suppose a tree does suffice
[07:39:21] <Izem> each node in the tree has the next passage?
[07:40:20] <Izem> it really is just a path, each node having a passage is what I imagine (i've read one choose your own adventure)
[07:41:16] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[07:41:21] <beaky> yes each passage has links to the next passage of the story (the choices)
[07:41:30] <Izem> when there are no more edges you have reached the end
[07:43:02] <oldlaptop> Izem: Stories probably aren't necessarily trees.
[07:43:19] <oldlaptop> (that is, it may make sense for them to have cycles)
[07:45:45] <vdamewood> What if the choose your own adventure story has a section that is unreachable from the start of the story?
[07:47:06] <vdamewood> There was one called "Inside UFO 54-40" where the 'good' ending wasn't reachable from the other pages. You would have to manually turn to the right page and read it to get there.
[07:52:07] <oldlaptop> That makes my idea untenable. (I don't like the idea of a separate "story object" at all - the tree of passages is the story, and the story is the tree of passages)
[07:52:29] <oldlaptop> or, you know, the connected cyclic graph of passages
[07:52:38] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 256 seconds)
[07:53:59] *** Joins: HaMsTeRs (~mx@49.130.89.196)
[07:54:01] <cis> vdamewood: in that case, it would be reachable from every node
[07:54:56] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[07:55:07] *** Quits: Izem (~Izem@8.21.10.18) (Ping timeout: 245 seconds)
[07:55:14] *** Joins: rany (~rany@user/rany)
[07:55:36] *** Joins: Izem (~Izem@8.21.10.18)
[07:55:58] <Izem> oldlaptop: yeah, that's why I switched to graphs
[07:56:58] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:56:59] <______GOD______> If any here can introduce a native iOS/iPadOS software engineering position at a US company and that position pays Me at least 100,000 US DOLLARS annually (plus insurance) or 70 US DOLLARS per hour on a C2C contract basis (for a year or longer), then I can pay a commission fee of 5000 US DOLLARS to whoever here introduces that position...as long as I am hired and stay hired long enough to be paid 15,000 US DOLLARS by the hiring company.
[07:56:59] <______GOD______>  Thanks in advance for sending introductions in a private message. (and yes, can sign a contract to guarantee that commission) 
[07:57:16] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[07:57:25] <______GOD______> (and yes, have a US passport) 
[07:57:45] <cis> You may have better luck with a recruiting agency.
[07:57:57] <______GOD______> Doing both
[07:58:16] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e8466-145.dhcp.inet.fi)
[07:58:27] <Izem> vdamewood: hmm, yeah that would break everything
[07:58:30] <______GOD______> Thankfully found a new not-from-or-in-india recruiter recently 
[08:02:47] <AlexDelarge> bahahahaha
[08:02:51] <cis> Izem: It's a "secret" node reachable from all other nodes. You could implement a hidden way of getting there. If it were truly unreachable, then it wouldn't have been printed in the book at all.
[08:03:29] *** Joins: vysn (~vysn@user/vysn)
[08:03:35] <Izem> beaky: is this what you are talking about?
[08:03:42] <Izem> unintended side effect
[08:03:55] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[08:05:56] <beaky> yes things like unreachable passages / passages without an associated story, passages that can belong to multiple different stories, etc
[08:07:29] *** Joins: Crescendo (~Crescendo@user/crescendo)
[08:10:29] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[08:10:42] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[08:14:10] *** Quits: pagnol (~user@014198154145.ctinets.com) (Ping timeout: 256 seconds)
[08:14:40] <Izem> beaky: I'm thinking you would store just the path then?
[08:22:17] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[08:23:06] *** Joins: qu4nt1n|2 (~qu4nt1n@78.198.214.34)
[08:23:40] *** Joins: qu4nt1n|3 (~qu4nt1n@78.198.214.34)
[08:23:43] <vdamewood> cis: Well, sounds like by that logic every node is reachable from every node, then.
[08:24:26] <vdamewood> I mean, if I'm on page n, there's nothing stopping me from turning to any other page, even though it says to turn to page y at the end.
[08:24:30] <beaky> yes paths might be too difficult to operate on (for example querying which path a passage belongs to) and still has similar problems such as deciding which story a path belongs to, a path belonging to multiple stories, etc.
[08:25:17] *** Quits: nekodesu (~nano@user/nekobit) (Quit: free(neko);)
[08:25:55] *** Joins: qu4nt1n|4 (~qu4nt1n@78.198.214.34)
[08:25:55] *** Quits: qu4nt1n|4 (~qu4nt1n@78.198.214.34) (Client Quit)
[08:26:41] <vdamewood> Anyway, I would say a CYOA book is a directed graph, but probably not a tree since multiple decision sequences can lead to the same page.
[08:26:59] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Ping timeout: 258 seconds)
[08:27:37] *** Quits: qu4nt1n|2 (~qu4nt1n@78.198.214.34) (Ping timeout: 245 seconds)
[08:28:13] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[08:28:52] *** Quits: qu4nt1n|3 (~qu4nt1n@78.198.214.34) (Ping timeout: 245 seconds)
[08:29:57] *** Joins: rany_ (~rany@user/rany)
[08:30:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[08:31:22] *** Quits: rany (~rany@user/rany) (Ping timeout: 245 seconds)
[08:31:37] <beaky> nice i like directed graphs
[08:33:28] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[08:33:56] <nitrix> How much, on a scale from linux to tea?
[08:35:41] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[08:37:53] <beaky> they are very graphical and i like having no cycles
[08:38:13] <AlexDelarge> lol
[08:38:35] *** Joins: mickey84 (~user@user/mickey)
[08:40:25] <Izem> in this senario you use an adjaceny matrix since the book is finished
[08:40:25] *** Quits: mickey8 (~user@user/mickey) (Ping timeout: 244 seconds)
[08:40:26] *** mickey84 is now known as mickey8
[08:41:10] <beaky> i like adjacency matrices too because you can use sick screaming-fast graphblas SIMD to solve all graph theory
[08:41:25] <beaky> matrices are the most optimized data structure
[08:41:49] <beaky> and the most important data structure in history being the building block of ai the most important activity of our times
[08:44:06] <Izem> cache friendly as well
[08:44:14] <AlexDelarge> an obsessive compulsive data tree
[08:45:05] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[08:46:10] *** Quits: kmh (~kmh@p200300df5f031500dc3f22e5691fdfcd.dip0.t-ipconnect.de) (Quit: Leaving)
[08:46:10] *** Quits: akevinhuang (~thekevinh@user/thekevinhuang) (Ping timeout: 240 seconds)
[08:51:30] *** Joins: Raguile (~Raguile@user/raguile)
[09:00:41] *** Joins: kmh (~kmh@p200300df5f031500dc05e9b97966e73c.dip0.t-ipconnect.de)
[09:06:52] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:12:13] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[09:22:37] *** Quits: jamea (~jamea@177.239.85.103) (Ping timeout: 250 seconds)
[09:27:44] *** Quits: Orimendix (~Orimendix@50-25-46-156.krmtcmta02.res.dyn.suddenlink.net) (Quit: Leaving)
[09:28:50] *** Quits: soapsudsxx (~soapsudsx@209.221.40.143) (*.net *.split)
[09:28:50] *** Quits: digilink (~digilink@user/digilink) (*.net *.split)
[09:28:50] *** Quits: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (*.net *.split)
[09:28:50] *** Quits: fspy (~fspy@user/fspy) (*.net *.split)
[09:28:50] *** Quits: BUSY (~BUSY@user/busy) (*.net *.split)
[09:28:50] *** Quits: bayaz (~bayaz@user/jeaye/bot/bayaz) (*.net *.split)
[09:28:50] *** Quits: DefiantN (~DefiantN@user/defiantn) (*.net *.split)
[09:28:50] *** Quits: kuku (~kuku@user/kuku) (*.net *.split)
[09:28:50] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (*.net *.split)
[09:28:50] *** Quits: pizdets (~pizdets@183.182.111.62) (*.net *.split)
[09:28:50] *** Quits: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca) (*.net *.split)
[09:28:50] *** Quits: caramel (~caramel@user/caramel) (*.net *.split)
[09:28:50] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (*.net *.split)
[09:28:50] *** Quits: Rayke (rayke@user/rayke) (*.net *.split)
[09:28:50] *** Quits: skreech (~skreech@user/skreech) (*.net *.split)
[09:28:50] *** Quits: password (~password@user/password2) (*.net *.split)
[09:28:50] *** Quits: p0g0__ (~p0g0@216.211.147.11) (*.net *.split)
[09:28:50] *** Quits: sa (sid1055@tinside.irccloud.com) (*.net *.split)
[09:28:50] *** Quits: Guest3880 (~kamui-ren@2001:470:69fc:105::f74) (*.net *.split)
[09:28:50] *** Quits: erica (~erica@user/erica) (*.net *.split)
[09:28:50] *** Quits: AlexDelarge (~alexboy@user/alexdelarge) (*.net *.split)
[09:28:50] *** Quits: MrLouis[m] (~lookneema@2001:470:69fc:105::c61a) (*.net *.split)
[09:28:50] *** Quits: freshgumbubbles[ (~freshgum_@2001:470:69fc:105::c1a5) (*.net *.split)
[09:28:51] *** Quits: nf (~n@monade.li) (*.net *.split)
[09:28:51] *** Quits: vin (~vin@user/crash) (*.net *.split)
[09:28:51] *** Quits: ornxka (~ornxka@user/ornxka) (*.net *.split)
[09:28:51] *** Quits: karstensrage (~karstensr@user/karstensrage) (*.net *.split)
[09:28:51] *** Quits: Teacup (~teacup@user/teacup) (*.net *.split)
[09:28:51] *** Quits: kaivai (~kaivai@user/kaivai) (*.net *.split)
[09:28:51] *** Quits: kilitary (~kilitary@kilitary.ru) (*.net *.split)
[09:28:51] *** Quits: nulleip (~luiz@189.34.167.234) (*.net *.split)
[09:28:51] *** Quits: sevengraff (~admin@li891-34.members.linode.com) (*.net *.split)
[09:28:51] *** Quits: ine (~ine@user/ine) (*.net *.split)
[09:29:08] *** Joins: Guest3880 (~kamui-ren@2001:470:69fc:105::f74)
[09:29:08] *** Joins: soapsudsxx (~soapsudsx@209.221.40.143)
[09:29:08] *** Joins: digilink (~digilink@user/digilink)
[09:29:08] *** Joins: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[09:29:08] *** Joins: fspy (~fspy@user/fspy)
[09:29:08] *** Joins: BUSY (~BUSY@user/busy)
[09:29:08] *** Joins: bayaz (~bayaz@user/jeaye/bot/bayaz)
[09:29:08] *** Joins: DefiantN (~DefiantN@user/defiantn)
[09:29:08] *** Joins: kuku (~kuku@user/kuku)
[09:29:08] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[09:29:08] *** Joins: pizdets (~pizdets@183.182.111.62)
[09:29:08] *** Joins: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca)
[09:29:08] *** Joins: caramel (~caramel@user/caramel)
[09:29:08] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[09:29:08] *** Joins: Rayke (rayke@user/rayke)
[09:29:08] *** Joins: skreech (~skreech@user/skreech)
[09:29:08] *** Joins: password (~password@user/password2)
[09:29:08] *** Joins: p0g0__ (~p0g0@216.211.147.11)
[09:29:08] *** Joins: sa (sid1055@tinside.irccloud.com)
[09:29:08] *** Joins: erica (~erica@user/erica)
[09:29:08] *** Joins: AlexDelarge (~alexboy@user/alexdelarge)
[09:29:08] *** Joins: vin (~vin@user/crash)
[09:29:08] *** Joins: MrLouis[m] (~lookneema@2001:470:69fc:105::c61a)
[09:29:08] *** Joins: freshgumbubbles[ (~freshgum_@2001:470:69fc:105::c1a5)
[09:29:08] *** Joins: nf (~n@monade.li)
[09:29:08] *** Joins: ornxka (~ornxka@user/ornxka)
[09:29:08] *** Joins: karstensrage (~karstensr@user/karstensrage)
[09:29:08] *** Joins: Teacup (~teacup@user/teacup)
[09:29:08] *** Joins: kaivai (~kaivai@user/kaivai)
[09:29:08] *** Joins: kilitary (~kilitary@kilitary.ru)
[09:29:08] *** Joins: nulleip (~luiz@189.34.167.234)
[09:29:08] *** Joins: sevengraff (~admin@li891-34.members.linode.com)
[09:29:08] *** Joins: ine (~ine@user/ine)
[09:29:08] *** sodium.libera.chat sets mode: +o bayaz
[09:29:15] *** Quits: sa (sid1055@tinside.irccloud.com) (Max SendQ exceeded)
[09:29:15] *** Quits: Teacup (~teacup@user/teacup) (Max SendQ exceeded)
[09:29:15] *** Quits: freshgumbubbles[ (~freshgum_@2001:470:69fc:105::c1a5) (Max SendQ exceeded)
[09:29:32] *** Joins: Teacup (~teacup@user/teacup)
[09:31:03] *** Quits: russjr08 (~russjr08@fw.internal.russ.network) (*.net *.split)
[09:31:03] *** Quits: Inhahe (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) (*.net *.split)
[09:31:03] *** Quits: haliucinas (~haliucina@5.20.153.21) (*.net *.split)
[09:31:03] *** Quits: zopsi (~zopsi@irc.dir.ac) (*.net *.split)
[09:31:03] *** Quits: bailsman (~Mm1@xls01.freecult.org) (*.net *.split)
[09:31:03] *** Quits: abirkill (snoopy@d172-218-198-90.bchsia.telus.net) (*.net *.split)
[09:31:03] *** Quits: davros (~davros@host86-184-180-96.range86-184.btcentralplus.com) (*.net *.split)
[09:31:03] *** Quits: shan (shan@user/shan) (*.net *.split)
[09:31:03] *** Quits: adrian17 (~adrian17@thehyper.space) (*.net *.split)
[09:31:03] *** Quits: davve (davve@bsd.douchedata.com) (*.net *.split)
[09:31:03] *** Quits: X-Scale (~ARM@238.72.108.93.rev.vodafone.pt) (*.net *.split)
[09:31:03] *** Quits: phenom (~primus@user/phenom) (*.net *.split)
[09:31:04] *** Quits: DarkTrick (~DarkTrick@pl-768-132.bunbun.ne.jp) (*.net *.split)
[09:31:04] *** Quits: nicolapcweek94 (wasp@tilde.institute) (*.net *.split)
[09:31:04] *** Quits: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC) (*.net *.split)
[09:31:04] *** Quits: ozarker (~ozarker@172-15-173-110.lightspeed.mssnks.sbcglobal.net) (*.net *.split)
[09:31:04] *** Quits: Fleck (~fleck@user/fleck) (*.net *.split)
[09:31:04] *** Quits: Bigcheese (~quassel@107.182.234.200) (*.net *.split)
[09:31:04] *** Quits: edk (edk@libera/staff/edk) (*.net *.split)
[09:31:04] *** Quits: s1b1 (~s1b1@user/s1b1) (*.net *.split)
[09:31:04] *** Quits: Dijky_ (~Dijky@user/dijky) (*.net *.split)
[09:31:04] *** Quits: Foritus (~buggery@cpc91316-watf11-2-0-cust68.15-2.cable.virginm.net) (*.net *.split)
[09:31:04] *** Quits: Spydar007 (~spydar007@user/spydar007) (*.net *.split)
[09:31:04] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (*.net *.split)
[09:31:04] *** Quits: Ranhir (~Ranhir@157.97.53.139) (*.net *.split)
[09:31:04] *** Quits: CoJaBo (~aztec@user/CoJaBo) (*.net *.split)
[09:31:04] *** Quits: bdeshi (~bdeshi@bdeshi.space) (*.net *.split)
[09:31:04] *** Quits: kzootech (~awalm@kzoo.tech) (*.net *.split)
[09:31:04] *** Quits: xbatora1 (xbatora1@lounge.fi.muni.cz) (*.net *.split)
[09:31:04] *** Quits: NeatNit (NeatNit@powered.by.jay2k1.com) (*.net *.split)
[09:31:04] *** Quits: dka (~code-is-a@ns3059207.ip-193-70-33.eu) (*.net *.split)
[09:31:04] *** Quits: ochronus (~ochronus@user/ochronus) (*.net *.split)
[09:31:04] *** Quits: Khoyo (~khoyo@user/khoyo) (*.net *.split)
[09:31:04] *** Joins: CoJaBo_ (~aztec@c-73-64-56-249.hsd1.pa.comcast.net)
[09:31:05] *** Joins: Bigcheese_ (~quassel@107.182.234.200)
[09:31:05] *** Joins: davve_ (davve@bsd.douchedata.com)
[09:31:05] *** Joins: ochronus- (~ochronus@static.5.181.55.162.clients.your-server.de)
[09:31:05] *** Joins: MeatNit (NeatNit@powered.by.jay2k1.com)
[09:31:07] *** Joins: dka_ (~code-is-a@ns3059207.ip-193-70-33.eu)
[09:31:12] *** Joins: Foritus_ (~buggery@cpc91316-watf11-2-0-cust68.15-2.cable.virginm.net)
[09:31:13] *** Joins: DarkTrick_ (~DarkTrick@pl-768-132.bunbun.ne.jp)
[09:31:17] *** Joins: davros (~davros@host86-184-180-96.range86-184.btcentralplus.com)
[09:31:17] *** Joins: kzootech (~awalm@kzoo.tech)
[09:31:17] *** Joins: Khoyo (~khoyo@ns328946.ip-37-187-115.eu)
[09:31:19] *** Joins: edk (edk@libera/staff/edk)
[09:31:20] *** Joins: russjr086 (~russjr08@fw.internal.russ.network)
[09:31:23] *** Joins: xbatora1 (xbatora1@lounge.fi.muni.cz)
[09:31:24] *** Joins: Ranhir (~Ranhir@157.97.53.139)
[09:31:24] *** Joins: adrian17 (~adrian17@thehyper.space)
[09:31:25] *** Joins: andrewSC (~andrewSC@95.179.141.168)
[09:31:27] *** Joins: nicolapcweek94 (wasp@tilde.institute)
[09:31:34] *** Joins: zopsi (~zopsi@irc.dir.ac)
[09:31:36] *** Quits: andrewSC (~andrewSC@95.179.141.168) (Signing in (andrewSC))
[09:31:36] *** Joins: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC)
[09:31:38] *** Quits: Khoyo (~khoyo@ns328946.ip-37-187-115.eu) (Changing host)
[09:31:38] *** Joins: Khoyo (~khoyo@user/khoyo)
[09:31:41] *** Joins: w1kl4s (~w1kl4s@user/w1kl4s)
[09:31:41] *** Foritus_ is now known as Foritus
[09:31:42] *** Joins: X-Scale (~ARM@238.72.108.93.rev.vodafone.pt)
[09:31:47] *** Joins: Dijky (~Dijky@user/dijky)
[09:31:53] *** Joins: ozarker (~ozarker@172-15-173-110.lightspeed.mssnks.sbcglobal.net)
[09:32:20] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:32:21] *** Joins: abirkill (snoopy@d172-218-198-90.bchsia.telus.net)
[09:32:22] *** Quits: lexano[m] (~lexanomat@2001:470:69fc:105::3110) (Ping timeout: 256 seconds)
[09:32:23] *** Joins: phenom (~primus@user/phenom)
[09:32:28] *** Joins: Spydar007 (~spydar007@user/spydar007)
[09:32:34] *** Quits: elemongw[m] (~elemongwk@2001:470:69fc:105::34ee) (Ping timeout: 240 seconds)
[09:32:34] *** Quits: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2) (Ping timeout: 240 seconds)
[09:32:38] *** Quits: orbatos[m] (~orbatos@user/orbatos) (Ping timeout: 245 seconds)
[09:32:38] *** Quits: smlck (~smlckmatr@user/smlckz) (Ping timeout: 245 seconds)
[09:32:40] *** Joins: bdeshi (~bdeshi@bdeshi.space)
[09:32:40] *** Joins: Inhahe (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[09:32:56] *** Quits: rvlobato[m] (~ronaldo@2001:470:69fc:105::219f) (Ping timeout: 256 seconds)
[09:32:56] *** Quits: kakos[m] (~kakos@2001:470:69fc:105::c965) (Ping timeout: 256 seconds)
[09:32:57] *** Quits: rgddev[m] (~rgddevmat@2001:470:69fc:105::69c8) (Ping timeout: 253 seconds)
[09:33:01] *** Quits: MrLouis[m] (~lookneema@2001:470:69fc:105::c61a) (Ping timeout: 272 seconds)
[09:33:14] *** Quits: lasr[m] (~lasrhalog@2001:470:69fc:105::c875) (Ping timeout: 268 seconds)
[09:33:14] *** Quits: AnisBarghouthi[m (~anis-barg@2001:470:69fc:105::6ebb) (Ping timeout: 268 seconds)
[09:33:22] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[09:33:30] *** Quits: psydroid (~psydroid@user/psydroid) (Ping timeout: 256 seconds)
[09:33:31] *** Joins: Flecks (~fleck@user/fleck)
[09:33:34] *** Quits: Alpha3031 (~alpha3031@wikipedia/alpha3031) (Ping timeout: 272 seconds)
[09:33:34] *** Quits: lwe[m] (~dendrumat@2001:470:69fc:105::2f9b) (Ping timeout: 272 seconds)
[09:33:35] *** Joins: shan (shan@user/shan)
[09:33:38] *** Quits: Guest3880 (~kamui-ren@2001:470:69fc:105::f74) (Ping timeout: 272 seconds)
[09:33:42] *** Quits: Helmholtz (~leibnizma@2001:470:69fc:105::3124) (Ping timeout: 276 seconds)
[09:34:10] *** Joins: s1b1 (~s1b1@user/s1b1)
[09:34:50] *** Quits: greyrat_ (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[09:36:39] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[09:36:40] *** Joins: CrypticSquared (~CrypticS_@user/crypticsquared)
[09:36:44] *** Joins: jeaye (~jeaye@user/jeaye)
[09:36:47] *** Joins: ra4king (~ra4king@roiatalla.com)
[09:36:50] *** Server sets mode: +CFnt 
[09:36:51] *** Joins: hirish (~hirish@ip85.ip-137-74-20.eu)
[09:36:54] *** Joins: picooz (~picooz@user/picooz)
[09:36:55] *** Quits: bmahe[m] (~bmahematr@2001:470:69fc:105::d140) (Ping timeout: 268 seconds)
[09:37:09] *** Joins: sicelo (~sicelo@vm8.ganeti.dyne.org)
[09:37:09] *** Quits: sicelo (~sicelo@vm8.ganeti.dyne.org) (Changing host)
[09:37:09] *** Joins: sicelo (~sicelo@user/sicelo)
[09:37:19] *** Joins: dkeohane1 (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com)
[09:37:41] *** Joins: Ara (~Ara@user/ara)
[09:37:55] *** Joins: HenryTheLongshot (~Henry@46.101.4.181)
[09:38:34] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[09:38:54] *** Quits: Izem (~Izem@8.21.10.18) (Quit: Going offline, see ya! (www.adiirc.com))
[09:39:08] *** Joins: Yamakaja (~yamakaja@vps.pub.yamakaja.me)
[09:39:08] *** Quits: Yamakaja (~yamakaja@vps.pub.yamakaja.me) (Changing host)
[09:39:08] *** Joins: Yamakaja (~yamakaja@user/yamakaja)
[09:39:12] *** Joins: TechTest (uid283215@id-283215.tooting.irccloud.com)
[09:39:31] *** Joins: shredder (~user@user/shredder)
[09:39:49] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Ping timeout: 258 seconds)
[09:40:13] *** Joins: webstrand (~webstrand@user/webstrand)
[09:42:09] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[09:44:48] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[09:47:00] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[09:47:45] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[09:48:20] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Ping timeout: 252 seconds)
[09:50:21] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[09:50:39] *** Joins: JanC (~janc@user/janc)
[09:51:17] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-118.prtc.net)
[09:58:42] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-118.prtc.net) (Quit: Client closed)
[10:02:00] *** Quits: freakazoid12345 (~matt@35.136.210.185) (Read error: Connection reset by peer)
[10:02:29] *** Joins: elemongw[m] (~elemongwk@2001:470:69fc:105::34ee)
[10:06:10] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[10:06:17] *** Joins: bcd (~bcd@83-84-164-51.cable.dynamic.v4.ziggo.nl)
[10:07:02] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 258 seconds)
[10:07:09] *** Joins: bmahe[m] (~bmahematr@2001:470:69fc:105::d140)
[10:09:25] *** Joins: node1 (~node1@user/node1)
[10:09:58] *** Joins: sdftyguijokpl (~sdftyguij@eth-west-pareq2-46-193-2-167.wb.wifirst.net)
[10:10:34] *** Quits: Yonle (~Yonle@user/yonle) (Remote host closed the connection)
[10:11:52] *** Quits: sdftyguijokpl (~sdftyguij@eth-west-pareq2-46-193-2-167.wb.wifirst.net) (Client Quit)
[10:14:01] *** Joins: rgddev[m] (~rgddevmat@2001:470:69fc:105::69c8)
[10:14:11] *** saribro is now known as swinnenb
[10:16:55] *** Joins: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler)
[10:18:44] *** Joins: Guest3880 (~kamui-ren@2001:470:69fc:105::f74)
[10:20:31] *** Joins: freshgumbubbles[ (~freshgum_@2001:470:69fc:105::c1a5)
[10:21:47] *** Joins: happy-dude (~happy-dud@2001:470:69fc:105::b4d7)
[10:23:00] *** Joins: kakos[m] (~kakos@2001:470:69fc:105::c965)
[10:23:22] *** Quits: soapsudsxx (~soapsudsx@209.221.40.143) (Remote host closed the connection)
[10:24:42] *** Quits: Deknos (~someone@user/menace) (Ping timeout: 245 seconds)
[10:29:54] *** Quits: eyynet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[10:30:06] *** Joins: eyynet4 (~0x100@32.211.211.39)
[10:30:56] *** Joins: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2)
[10:31:10] *** Joins: rvlobato[m] (~ronaldo@2001:470:69fc:105::219f)
[10:31:20] *** Joins: AnisBarghouthi[m (~anis-barg@2001:470:69fc:105::6ebb)
[10:31:56] *** Joins: jaysicks (~jaysicks@84-236-11-22.pool.digikabel.hu)
[10:33:19] *** Joins: Helmholtz (~leibnizma@2001:470:69fc:105::3124)
[10:33:40] *** Joins: lasr[m] (~lasrhalog@2001:470:69fc:105::c875)
[10:34:32] *** Joins: justin[m]12345 (~justinsch@2001:470:69fc:105::c74a)
[10:36:04] *** Joins: Yonle (~Yonle@user/yonle)
[10:37:47] *** Quits: Yonle (~Yonle@user/yonle) (Client Quit)
[10:38:02] *** Joins: Yonle (~Yonle@user/yonle)
[10:39:18] *** Quits: Yonle (~Yonle@user/yonle) (Client Quit)
[10:39:34] *** Joins: Yonle (~Yonle@user/yonle)
[10:39:44] *** Joins: node1_ (~node1@1.39.188.212)
[10:40:46] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[10:41:10] *** Quits: node1_ (~node1@1.39.188.212) (Client Quit)
[10:41:24] *** Joins: node1_ (~node1@1.39.188.212)
[10:41:31] *** Quits: node1 (~node1@user/node1) (Killed (NickServ (GHOST command used by node1_!~node1@1.39.188.212)))
[10:42:06] *** Joins: Alpha3031 (~alpha3031@2001:470:69fc:105::2f6b)
[10:42:13] *** Joins: blahboybaz (~blahboyba@c-73-221-100-152.hsd1.wa.comcast.net)
[10:42:14] *** Joins: mrig (~mrig@user/mrig)
[10:42:20] *** Joins: orbatos[m] (~orbatos@user/orbatos)
[10:44:41] *** Joins: lwe[m] (~dendrumat@2001:470:69fc:105::2f9b)
[10:45:40] *** Joins: sophie[m]1 (~sophiesop@2001:470:69fc:105::9b6d)
[10:45:41] *** Joins: mei (~mei@user/mei)
[10:46:01] *** Quits: node1_ (~node1@1.39.188.212) (Ping timeout: 248 seconds)
[10:46:08] *** Joins: node1 (~node1@user/node1)
[10:47:40] <node1> Any aws lambda expert here?
[10:50:08] *** Quits: NChief (~nchief@irc.nortv.net) (Ping timeout: 250 seconds)
[10:51:30] <paulo> node1: what's the question?
[10:53:43] <node1> I have written a code in  yaml to deploy lambda function. It  get deployed, but the thing is the file name is index.py instead i'm expecting it to be lambda_function.py
[10:54:11] <node1> let me share the code with you
[10:56:13] <node1> paulo, Please find the code here https://pastebin.com/raw/FcDqfhxd
[10:56:16] <bayaz> Type: text/plain; charset=utf-8 
[10:56:19] *** Joins: getz[m] (~getz@2001:470:69fc:105::c85e)
[10:56:55] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[10:57:05] <node1> Do you think am i missing some other configuration properites?
[10:59:08] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 272 seconds)
[10:59:08] *** Lord_of_Life_ is now known as Lord_of_Life
[10:59:49] *** Joins: NChief (~nchief@irc.nortv.net)
[11:00:01] *** Joins: lexano[m] (~lexanomat@2001:470:69fc:105::3110)
[11:00:56] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e8466-145.dhcp.inet.fi) (Quit: Leaving)
[11:03:09] *** Joins: smlck (~smlckmatr@2001:470:69fc:105::c885)
[11:03:29] <deniska> node1: try replacing the word 'index' in your config with 'lambda_handler'
[11:03:32] *** smlck is now known as Guest4267
[11:04:42] <node1> YaY it works
[11:04:55] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:05:41] <node1> sorry it does not
[11:07:27] *** Joins: MrLouis[m] (~lookneema@2001:470:69fc:105::c61a)
[11:07:28] *** Joins: psydroid (~psydroid@user/psydroid)
[11:07:44] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:10:16] <deniska> well, I'm out of ideas :)
[11:11:19] *** Joins: jazzy (~jaziz@2600:380:8562:6b2:8c7e:762:5a80:c3e1)
[11:11:36] <pikapika> deniska, fuck libraries (ie of books, not programming libraries)
[11:11:40] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[11:11:49] *** Joins: Izem (~Izem@8.21.10.18)
[11:13:37] *** Joins: LucaTM (~LucaTM@user/lucatm)
[11:14:35] <kodah> java is a really interesting language
[11:14:49] *** Quits: Yonle (~Yonle@user/yonle) (Quit: Logged Out)
[11:15:17] <mrig> Oh how curious, the way that the ambiguity of parse trees is mirrored by the branching of human logic.
[11:15:27] <mrig> this is fun :)
[11:15:28] <kodah> i've managed to avoid it most of my career, but am having to use it now. you can do some really interesting stuff.
[11:15:54] <mrig> kodah: Are you coming out as a closet java lover?
[11:16:02] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Ping timeout: 258 seconds)
[11:16:12] <mrig> kodah: it ok to love java :)
[11:16:18] <death916> use kotlin
[11:16:23] <mrig> now these parse trees ...
[11:16:25] <death916> isnt that the new java
[11:16:35] <kodah> well, i doubt i'll love Java. that said, i think my interviews will be done in java now.
[11:16:39] <deniska> kodah: java is… fine. As a language it's not exactly interesting, but it has a huge ecosystem of interesting stuff
[11:16:43] <mrig> This is a remarkable phenomenon.
[11:16:47] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Ping timeout: 245 seconds)
[11:17:34] <mrig> I'd go for calling it symmetry and asymmetry though, rather than ambiguity.
[11:18:20] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 256 seconds)
[11:19:06] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[11:21:15] *** Joins: amigojapan (uid86330@id-86330.brockwell.irccloud.com)
[11:21:50] <mrig> I mean, it has now been shown that even in math, using different proofs gets you different outcomes.
[11:22:14] *** Joins: Akronymus (~Akronymus@85.31.8.181)
[11:22:53] *** Joins: mnd999_ (~mark@2001:8b0:da3:76a2:4630:5b97:83a2:3e21)
[11:24:32] <amigojapan> I wonder why if the midnight commander style of file management is best, why do people not use it
[11:25:34] <amigojapan> Opening two windows to drag and drop files is much more tedious
[11:26:27] <amigojapan> There was one such file manager on Amiga that was fantastic
[11:26:29] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[11:26:43] *** Joins: Yonle (~Yonle@user/yonle)
[11:26:59] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[11:27:31] *** Quits: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net) (Remote host closed the connection)
[11:27:41] *** Quits: Inhahe (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) (Read error: Connection reset by peer)
[11:28:04] *** Quits: HaMsTeRs (~mx@49.130.89.196) (Quit: Konversation terminated!)
[11:28:06] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 276 seconds)
[11:28:15] <mrig> Pandering to the pleiades mostly I think.
[11:28:17] *** Joins: Inhahe (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[11:29:20] <mrig> Keeping things fungible by making them into business propositions.
[11:29:58] <mrig> ... That was an otherwise said, the same intent was included in the first statement, but the logic was of a higher order.
[11:30:23] <node1> paulo, ?
[11:30:42] <node1> Shall i wait for your response? or it's over?
[11:31:40] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[11:31:58] <amigojapan> Yeah. Midnight commander is not the best example of such a file manager but it is well known
[11:33:17] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-51.prtc.net)
[11:33:35] <mrig> node1: Server less technology is very vendor specific it would seem, perhaps someone will get back to their post and be able to answer you with a little time?
[11:33:36] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-51.prtc.net) (Write error: Broken pipe)
[11:34:11] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-118.prtc.net)
[11:34:17] <pikapika> It hilarious when books written 250 years ago are still locked behind paywalls
[11:34:21] <node1> mrig, I understand.
[11:34:43] <amigojapan> pikapika: which book?
[11:34:48] <mrig> pikapika: obscene. 
[11:34:48] *** Joins: aradesh (~aradesh@user/aradesh)
[11:35:03] <pikapika> There are some books. I just encountered one locked behind Cambridge university press
[11:35:08] *** Joins: epolanski (uid312403@id-312403.brockwell.irccloud.com)
[11:35:46] <pikapika> mrig, people like to say libraries do a lot of good to society. Absolute bullshit. They are just jealous, money gouging old farts.
[11:35:55] <amigojapan> pikapika: if the copyright is expired you can probably make a copy and distribute it legally
[11:36:34] <pikapika> It most probably is expired. How will an obscure physics text from 250 years ago still be in copyright? And if it is, we should act toward the destruction of the entities holding the copyright.
[11:36:58] <mrig> amigojapan: I think that the world is waiting for a better system, fingers crossed that a future that treats computers as the razor sharp devices that they are and not as a gizmo that lets all and sundry do every thing poorly, will eventually lead to better interfaces.
[11:37:43] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:37:46] *** Quits: Doffi (~doffi@91.132.197.188) (Ping timeout: 240 seconds)
[11:37:51] <mrig> leading to better interfaces for the normal user too.
[11:38:12] <amigojapan> mrig: I could develop such a file manager myself in tkinter. But I don't know how to make it used by many people
[11:40:02] <mrig> tkinter, not so sure that python would be the way to go for UI :)
[11:40:32] <amigojapan> It's multi platform
[11:41:16] <mrig> So was gary glitter.
[11:41:25] <mrig> :) sorry bad joke.
[11:41:33] <kodah> node1: when you set Handler to index.lambda_handler you're telling it to fetch from the index.py file
[11:41:40] <amigojapan> I don't know who he was
[11:41:53] <mrig> amigojapan: better not to know.
[11:41:54] <kodah> and it's finding the lambda_handler function and executing that
[11:42:06] <amigojapan> Ah ok mrig 
[11:42:16] <elf_fortrez> the queen is dead, long live the queen
[11:42:24] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 276 seconds)
[11:42:38] <amigojapan> mrig: how about Qt. Would that be better?
[11:43:13] *** Joins: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it)
[11:43:29] <elf_fortrez> can't  we just pay 20 bucks for masterpieces? is that asking too much. some pay 60 for heroine
[11:44:17] <elf_fortrez> not all women are Angela Merkel
[11:44:17] <mrig> dang some of you are money obsessed :|
[11:44:31] <mrig> amigojapan: no idea you tell me :)
[11:44:43] <elf_fortrez> reality check. how many countries are communist?
[11:45:13] <eyynet4> like hippies?
[11:45:26] <mrig> C++ has dominated GUI for a long time, does not mean that it will in the future though, the swing towards html of late has already pushed it to change.
[11:45:33] *** Quits: LiftLeft (~LiftLeft@154.21.28.208) (Ping timeout: 258 seconds)
[11:45:49] <deniska> Ancients had perfect GUI tech like VB6 and Delphi
[11:45:51] <amigojapan> mrig: hmm. I think deploying such a file manager for Android may be a good idea
[11:45:59] <mrig> elf_fortrez: I don't care much for economics that cant do math.
[11:46:15] <mrig> amigojapan: make it efficient from the start.
[11:46:18] *** Quits: glguy (x@libera/staff/glguy) (Ping timeout: 612 seconds)
[11:46:21] <xeno> mrig: it will likely dominate UI for linux for the foreseeable future, since everyone else are just not doing anything worthwhile about native UI's 
[11:46:38] <xeno> UI right now is almost abandonware for development stuff 
[11:46:49] <mrig> xeno: yes seems to be the case.
[11:47:02] <mrig> curious void that web cruft is generating.
[11:47:48] <Booster2ooo> sad that MAUI doesn't support linux :'( I was really hoping for it
[11:47:55] <mrig> elf_fortrez: politics that curtails to economics that cant do math, even less so.
[11:48:15] <xeno> mrig: yeah, it's pretty weird 
[11:48:16] <eyynet4> wow the whole island?
[11:48:23] <xeno> mrig: it's not like native GUI will die within 2 year 
[11:48:25] <xeno> *s
[11:48:40] <mrig> No, no way that desktops are going away.
[11:48:44] <elf_fortrez> how about a healthy dose of metaphysics for all the neoliberals
[11:48:56] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[11:49:04] <elf_fortrez> rorshack anyone?
[11:49:10] <elf_fortrez> break the mirrors
[11:49:19] <pikapika> Not everything is best managed by market systems
[11:49:23] <mrig> just seems to be returning to the market share that it had before the consumer PC boom
[11:49:32] <pikapika> Archival of texts for example
[11:49:46] <mrig> as that has mostly gone to telephones and small tablets.
[11:50:09] <pikapika> Some things are of course best suited to a market system
[11:50:19] <mrig> elf_fortrez: only if it is based in sound logic, nothing else can cut the mustard.
[11:50:29] <pikapika> Sometimes there is no better feeling than undercutting the existing price mafia
[11:50:43] <elf_fortrez> just revive borders bro
[11:50:56] <mrig> elf_fortrez: rahu loves a border.
[11:51:13] <kodah> how did this channel devolve into politics
[11:51:17] <amigojapan> mrig: why would we need PCs if we could develop software on tablets?
[11:51:31] <pikapika> International trade is good. It puts alarm into lazy motherfuckers and leads to items having more reasonable prices.
[11:51:37] * mrig chuckles and watches the cracks grow ever further.
[11:51:42] <amigojapan> mrig: and play advanced games
[11:52:04] <mrig> amigojapan: keyboards are so much more efficient.
[11:52:06] <elf_fortrez> hi mom
[11:52:30] <mrig> elf_fortrez: are you wearing your best trolls hat today or something :P
[11:52:31] <amigojapan> mrig: you can use a keyboard with a tablet too
[11:52:45] <mrig> amigojapan: sure yes, so your tablet is just a screen then.
[11:52:59] <kodah> amigojapan: chromebooks are basically tablets. you can make software on them, but not especially well.
[11:53:09] <amigojapan> Yup mrig I don't want to buy 3 computers
[11:53:13] <mrig> amigojapan: I hate it when people put their greasy fingers upon optical devices.
[11:53:39] <amigojapan> mrig: you can use a mouse with a tablet too
[11:53:46] <elf_fortrez> ratpoison
[11:54:04] <elf_fortrez> wm
[11:54:17] <mrig> I want my optical device to be able to display as wide a colour gamut as is possible.
[11:54:42] <elf_fortrez> gamma
[11:54:50] <amigojapan> mrig: I mean tablet should be the same as a PC
[11:54:50] <elf_fortrez> cosmic?
[11:54:52] <mrig> no gamut
[11:55:09] <amigojapan> mrig: it's mostly just a form factor
[11:55:10] <elf_fortrez> nero
[11:55:19] <elf_fortrez> the blackest
[11:55:25] <elf_fortrez> blackest black
[11:55:25] *** Quits: ash_m (~androirc@user/ash-m/x-3292451) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[11:55:45] <mrig> amigojapan: there are also sensual factors at play, such as colour gamut, sound capabilities, etc.
[11:55:51] *** Joins: jab416171 (~jab416171@c-174-52-176-66.hsd1.ut.comcast.net)
[11:56:02] <elf_fortrez> seems we are maturing
[11:56:14] *** Joins: mobidrop (~mobidrop@217-62-121-57.cable.dynamic.v4.ziggo.nl)
[11:56:14] <amigojapan> mrig: everything can be solved with external hardware
[11:56:14] <mrig> keeping things modular allow for the best possible options though.
[11:56:50] <amigojapan> mrig: even if I agree. I don't want to need to buy both a PC and a tablet
[11:56:55] <mrig> elf_fortrez: Like a fine cheese?
[11:56:55] <elf_fortrez> you are made of blood and bones
[11:57:19] <elf_fortrez> i eat cheap ones
[11:57:23] *** Quits: Yonle (~Yonle@user/yonle) (Quit: Logged Out)
[11:57:28] <mrig> amigojapan: I prefer books for reading, hard back books of a decent quality.
[11:57:36] <elf_fortrez> not a wine person myself
[11:57:38] <mrig> and live music over recorded.
[11:57:51] <elf_fortrez> more visceral
[11:58:05] <elf_fortrez> both actually
[11:58:09] <mrig> speaking to actual people rather than texting.
[11:58:12] <elf_fortrez> i appreciate differences
[11:58:18] <mrig> and computers for computation.
[11:58:18] <elf_fortrez> right
[11:58:31] <elf_fortrez> now we're talking
[11:58:38] <amigojapan> mrig: a tablet is a computer
[11:58:38] <mrig> because doing that by hand is error prone.
[11:58:47] <elf_fortrez> ha i forgot i'm in irc
[11:59:07] <elf_fortrez> wink?
[11:59:36] <elf_fortrez> some things don't translate as well
[11:59:51] <mrig> elf_fortrez: who are you communing with exactly?
[12:00:05] <elf_fortrez> just hack me mrig
[12:00:30] <mrig> elf_fortrez: I hack train sets.
[12:00:30] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 258 seconds)
[12:00:42] <elf_fortrez> nice
[12:00:43] * mrig is a full time nerd not a wannabe
[12:00:55] <elf_fortrez> third person?
[12:01:09] *** Quits: mobidrop (~mobidrop@217-62-121-57.cable.dynamic.v4.ziggo.nl) (Quit: Leaving)
[12:01:14] <mrig> elf_fortrez: Is that who you are communing with?
[12:01:21] <mrig> some other entity?
[12:01:24] *** Joins: mobidrop (~mobidrop@217-62-121-57.cable.dynamic.v4.ziggo.nl)
[12:01:38] *** Quits: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler) (Quit: Leaving)
[12:01:52] <elf_fortrez> want me to move in with youL
[12:01:54] <elf_fortrez> ?
[12:01:58] *** Joins: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler)
[12:01:59] <elf_fortrez> that sounds weird
[12:02:15] *** Quits: eyynet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[12:02:17] <elf_fortrez> you know more about me than i do about you
[12:02:21] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[12:02:27] *** Joins: eyynet4 (~0x100@32.211.211.39)
[12:02:42] <mrig> elf_fortrez: this conversation must be extremely tedious for others here to read, please drop it immediately.
[12:02:45] <elf_fortrez> how about alternating the chess game?
[12:02:46] *** Joins: Rounin (~david@84.212.130.215)
[12:02:53] <elf_fortrez> yeah
[12:03:23] *** Quits: mobidrop (~mobidrop@217-62-121-57.cable.dynamic.v4.ziggo.nl) (Changing host)
[12:03:23] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[12:03:23] <mrig> your lack of context in your projections will get you quieted if it continues.
[12:03:57] <elf_fortrez> achtung polizei
[12:04:22] *** Joins: Yonle (~Yonle@user/yonle)
[12:04:43] <mrig> amigojapan: sorry about that, yes I hear you, tablets are useful, but would rather have a tablet as an accompanying device, like anereader than as my machine.
[12:04:54] <mrig> !q elf_fortrez
[12:04:54] *** bayaz sets mode: +q *!*@adsl-72-50-4-118.prtc.net
[12:05:08] <node1> kodah, I have changed it to  `Handler: "lambda_function.lambda_handler"`  but still it creates index.py  https://pastebin.com/raw/RqEKbW8h
[12:05:10] <bayaz> Type: text/plain; charset=utf-8 
[12:05:31] <amigojapan> mrig: I am just asking that tablet app development becomes widely available on tablets
[12:05:35] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Read error: Connection reset by peer)
[12:05:51] <mrig> I'd rather have a better pdf format.
[12:06:37] <amigojapan> mrig: Apple actively keeps development tools off their devices
[12:06:38] <mrig> an output, one that consolidates into a quality artifact that does not require recompiling all the time.
[12:07:14] <mrig> pdf is out of date and riddled with issues.
[12:07:24] <mrig> the page numbering does not even line up.
[12:07:43] <mrig> This is not exactly rocket science.
[12:08:21] <mobidrop> it's hard to copy paste text from pdf as well
[12:08:28] <mrig> These are interesting times though, that is for sure.
[12:09:04] <Arahael> amigojapan: That's changing.
[12:09:40] <amigojapan> I hope so, soon Arahael 
[12:09:51] *** Quits: NChief (~nchief@irc.nortv.net) (Ping timeout: 268 seconds)
[12:10:40] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[12:10:42] <Arahael> It's unknown whether this will be Swift Playgrounds or an actual xcode, though for right now, I'd be looking at Swift Playgrounds.
[12:10:48] <mrig> mobidrop: the worst thing about the copy and paste is that it generates errors and inconsistencies in the information that it transfers; This is worse than 500 years ago when it was done by hand.
[12:11:24] <Arahael> mobidrop: Depends on the PDF in question. If it's having to be done via OCR, then yeah, that's going to have errors and inconsistencies.
[12:11:33] <Arahael> mobidrop: But it can also be actual text.
[12:13:25] <mobidrop> Arahael, yes it can work, but I only remember the times where it doesn't haha
[12:13:39] <mobidrop> mrig, but then again pdf is the industry standard
[12:13:52] <mrig> mobidrop: that is very telling ;)
[12:13:52] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[12:14:28] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Remote host closed the connection)
[12:14:36] <mobidrop> good enough = good enough, we're too lazy to find the optimum
[12:14:40] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[12:14:51] <mrig> I recall hearing something about, "!To many clever people together gum up the system."
[12:14:56] *** Joins: NChief (~nchief@irc.nortv.net)
[12:15:32] <mrig> to lazy, computer scientists are not lazy.
[12:16:18] <mrig> they painstakingly seek elegance in the void of infinite algorithms and possibilities.
[12:16:39] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[12:16:41] <mobidrop> well someone might find it, but the general public won't use it, won't switch the old for something slightly better
[12:16:42] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[12:16:55] <mobidrop> especially if they're invested somehow
[12:17:17] <mrig> As mentioned, pandering to the pleiades.
[12:17:21] *** Joins: DushyantBaweja_c (uid510682@id-510682.charlton.irccloud.com)
[12:18:28] *** Joins: ixil (~ixil@82.197.178.137)
[12:20:15] <mrig> The public are polarised readily, that which polarizes them changes like the weather.
[12:21:02] <mrig> The net is currently being used in this way, it was conceived for it.
[12:21:45] <mrig> Don't believe that, read a little on Von Neumann.
[12:22:37] <mrig> No statement to make upon whether or not this is good or bad, just and observation.
[12:22:59] <mobidrop> is politics allowed here?
[12:23:12] <mrig> that is not politics, and yes it is.
[12:23:34] <mobidrop> ok I noticed that politics is not specifically mentioned in the rules https://libera-programming.github.io/
[12:23:35] <bayaz> Title: irc.libera.chat ##programming -- Programming/Computer Science Discussion and Community Chat 
[12:23:50] <eyynet4> SCIENCE!
[12:24:04] <mobidrop> but yes we are more polarized than ever
[12:24:14] *** Quits: dre (~dre@2001:8003:c932:c301:201a:59c7:e77c:7ce) (Quit: Leaving)
[12:24:27] <mrig> that's nothing, quite normal for this time period.
[12:24:51] <mrig> I'd say that it could be a lot worse than it currently is.
[12:25:52] <mobidrop> it will be worse
[12:26:12] <mrig> mobidrop: there is more of a constitution in the channel than a rule book :)
[12:26:25] <mrig> mobidrop: na not much.
[12:26:37] <mrig> we are about over the hump of it now.
[12:27:07] <mrig> mobidrop: do you know anything about more complicated calendars than the solar calendar?
[12:27:11] <mrig> time keeping
[12:27:53] <mobidrop> mrig, are you talking about cyclical calendars and their relationship to human consciousness?
[12:28:10] <mrig> not human consciousness no.
[12:28:30] <mrig> just think of sectors on a disk.
[12:28:32] <mobidrop> I don't really read about other calendars
[12:29:46] *** Quits: molt (~molt@79.140.150.21) (Ping timeout: 240 seconds)
[12:30:34] *** Quits: Izem (~Izem@8.21.10.18) (Quit: Going offline, see ya! (www.adiirc.com))
[12:30:34] <mrig> There are some interesting facets, but it is extremely complicated stuff.
[12:31:20] <mrig> as is rocket science, quite similar actualy.
[12:32:12] <mobidrop> lately I've been looking at slowing down and simplifying
[12:32:45] <mrig> Good thing to do when possible I think :)
[12:32:54] <mobidrop> mrig, which specific calendars are you talking about?
[12:32:56] <mrig> less entropy down the line!
[12:33:00] <beaky> what is the most simplest alendar
[12:33:29] <mrig> mobidrop: I study the lunisolar calendar.
[12:33:45] *** Quits: NChief (~nchief@irc.nortv.net) (Ping timeout: 248 seconds)
[12:33:50] <mrig> it is basically time keeping taking barycentric time into account.
[12:33:56] <amigojapan> https://youtu.be/36NgkpctW6k building an apple 1
[12:35:21] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 248 seconds)
[12:35:41] <mrig> beaky: 360 divisions of one solar year is easiest for mental approximations; Does depend upon what your goal is.
[12:35:43] <amigojapan> Apparently the OS of the Apple 1 allowed you to type in programs in machine code
[12:35:53] <amigojapan> And run them
[12:36:35] <mrig> It must have been a lot of fun to have been an engineer back in those days :)
[12:36:44] *** Joins: molt (~molt@79.140.150.21)
[12:36:53] <amigojapan> :)
[12:36:56] *** Joins: NChief (~nchief@irc.nortv.net)
[12:38:38] <amigojapan> mrig: you actually had to load basic from some other loading method. Usually paper tape
[12:39:20] *** Quits: Yonle (~Yonle@user/yonle) (Quit: Logged Out)
[12:39:25] <amigojapan> But in this video he uses a tape deck
[12:39:38] <mrig> heh, I still chuckle when I think of programs being loaded like pianola roles, it is awesome!
[12:40:01] <amigojapan> Yeah. I love the sound
[12:40:13] <mrig> or whistling down a phone line.
[12:42:08] <amigojapan> mrig: it is before my time, the first computer I used was a vic-20 and I am 43 and a half years old
[12:43:38] <mrig> We had a pianola at home when I was a kid, so I'm rather fond of the notion.
[12:43:46] <amigojapan> mrig: the Apple 1 OS was only 256 bytes
[12:44:28] *** Quits: audiocat (~audio@2603-8081-1800-00ad-4244-d5da-54a7-0c8c.res6.spectrum.com) (Ping timeout: 256 seconds)
[12:45:08] <mrig> wow, when you think of it, how far computing has come.
[12:45:09] <amigojapan> mrig: my dad was a piano tuner and he knew the ins and outs of pianos but pianolas scared him. He could basically only tune them but not repair them
[12:45:29] <mrig> oh that's really cool!
[12:45:35] <amigojapan> Ty
[12:46:18] <amigojapan> mrig: I also saw him tune a harpsichord
[12:46:36] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[12:47:29] *** Quits: eyynet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[12:47:34] *** Joins: mikeliuk (~mikeliuk@109.249.187.96)
[12:48:29] *** Joins: hegstal (~hegstal@2a02:c7f:7604:8a00:54d9:a686:a64c:8cd9)
[12:50:02] *** Joins: damxsa (~damx@2001:16a2:cfd8:e500:40e7:6a69:a396:39e9)
[12:50:10] <mrig> Very similar instruments I suppose.
[12:50:16] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[12:50:41] <mrig> I recently made a discovery, aluminum bronze strings, amazing for holding a respectable tone; This on a guitar though, no idea if that can be used on larger instruments, would imagine so.
[12:51:33] <mrig> How would a parser tend to read its syntactic rules, from tables?
[12:52:16] <mrig> Or is this something that varies a lot, I can imagine them also being fed in, though I guess that this would mean that youve written something that is quite generic.
[12:52:24] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[12:53:28] <mrig> I need something for svg attributes, was pondering the idea of having a string of separate tokens that is read at the same time that the lexed tokens arrive.
[12:53:29] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[12:54:12] *** Joins: pyzozord (pyzozord@user/pyzozord)
[12:55:52] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-118.prtc.net) (Ping timeout: 246 seconds)
[12:56:29] <mrig> mobidrop: perhaps at the hump of it rather than over it; But nearly through it is the brighter way of taking that :)
[12:58:43] *** Joins: glguy (x@libera/staff/glguy)
[12:59:15] *** Quits: Inhahe (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) ()
[12:59:30] *** Joins: Inhahe (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[13:02:02] <mobidrop> mrig, on what timescale? it could be a painful next 10 years
[13:03:54] <mrig> I'd agree with you on that, but those being after effects; Time of great opportunity and growth in new directions.
[13:04:08] <mrig> some would call that pain, for others it is a field day.
[13:05:36] <CuriousErnestBro>  Great programmers tend to be people who really enjoy it, and therefore do it a lot for very many years.
[13:05:37] *** Joins: plastico (~plastico@neomutt/plastico)
[13:05:47] <CuriousErnestBro> I don't know about you, but I program out of pure spite
[13:05:53] <mrig> CuriousErnestBro: heh!
[13:05:59] <CuriousErnestBro> speaking about that
[13:06:03] <mrig> CuriousErnestBro: this will learn em!
[13:06:29] <CuriousErnestBro> technology is very immature since it doesn't have a straightforward way to do database deployment and syncing
[13:06:48] <CuriousErnestBro> the best we have is adding db.json to git and syncing it that way
[13:06:54] <mrig> motivation, and exactly what is - and that is + is never so very easy to define :)
[13:06:58] <CuriousErnestBro> so I can't even learn postgres 
[13:07:05] <mobidrop> databases were one of the first applications of IT, how is it not mature?
[13:07:32] <CuriousErnestBro> maybe mature isn't the correct word if you're defining it as age
[13:07:35] <CuriousErnestBro> feature-mature I meant
[13:07:38] <mobidrop> accessible?
[13:07:51] <mobidrop> I can't self assemble a car but the car industry is very mature
[13:08:11] <CuriousErnestBro> sure
[13:08:33] <CuriousErnestBro> here it's like me biking 200km is more efficient than going by car
[13:08:39] <mrig> The issue is fundamental though, just the same problem that gets passed about like a or the buck.
[13:08:42] <CuriousErnestBro> it's unacceptable if cars couldn't do that
[13:08:55] *** Joins: sunbae (~euk@82.85-87-220.dynamic.clientes.euskaltel.es)
[13:09:02] <CuriousErnestBro> here's the problem
[13:09:27] <CuriousErnestBro> yesterday I created CI for deployment, all works fine, I test my app and push it, and it's online
[13:09:33] <CuriousErnestBro> now I want to add a database, and I can't
[13:10:00] <CuriousErnestBro> how2fix?
[13:10:19] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[13:13:40] <mobidrop> what CI platform do you use?
[13:14:06] <mobidrop> we run mysql, postgreSQL and sqlite on our CI platforms
[13:14:25] *** Quits: caramel (~caramel@user/caramel) (Read error: Connection reset by peer)
[13:14:46] <mobidrop> some applications use an ORM and the functional tests will automatically switch to an in memory sqlite database, pretty neat
[13:15:32] <CuriousErnestBro> mobidrop github actions, I build my app on it and rsync it to the server. Now I want to add database
[13:15:57] <Akronymus> mobidrop ORM... 
[13:16:14] <Akronymus> Fine with me, but don't make naked sql impossible to do.
[13:16:18] <CuriousErnestBro> I'm concerned how to keep the local testing database and the production one equal
[13:16:27] <CuriousErnestBro> besides using db.json in git
[13:17:53] *** Joins: Yonle (~Yonle@user/yonle)
[13:18:06] <mobidrop> Akronymus, if the SQL is standard enough it should be compatible between different databases :)
[13:18:29] <Akronymus> IME ORM's get in the way more than they help.
[13:18:36] <Akronymus> Stored procedures FTW.
[13:18:45] <mobidrop> hahaha back to the 90ies
[13:19:33] <Akronymus> I don't wanna accuse anyone here, but I think most users of ORM's just don't want to/can't understand relational databases.
[13:20:34] <mobidrop> that's a good point
[13:20:55] <mobidrop> some members in my team only really want to use the ORM and have all the migrations and schema to be auto generated
[13:21:13] <Akronymus> Some things are HARD in ORM's.
[13:21:29] <Akronymus> Or at least very inconvenient.
[13:21:34] <mobidrop> but it ended up missing some important indexes
[13:21:58] <mobidrop> which they didn't find out because they only test with a couple of records
[13:22:35] <mobidrop> in my opinion ORMs are useful for simple software
[13:22:51] <Akronymus> Yeah, ORM's make the easy stuff EASY.
[13:23:00] <pikapika> sql is very complex
[13:23:01] <Akronymus> But OTOH, the hard stuff gets HARD.
[13:23:10] <Akronymus> SQL is pretty easy to grok IMO
[13:23:22] *** Joins: zoey (~zoey@2a02:8084:a080:9e00:7c8c:4b88:b1b8:70e1)
[13:23:23] *** Joins: caramel (~caramel@user/caramel)
[13:23:26] <pikapika> Akronymus, I would have preferred a function composition syntax
[13:23:27] <Akronymus> You "just" have to have a different mindset though
[13:23:30] <pikapika> or a filter snyta
[13:23:31] <mobidrop> yes you'll end up fighting the ORM for things that would be easy in pure SQL
[13:23:32] <pikapika> or a filter snytax
[13:23:54] <pikapika> select * from tbl where whatever; -> select(tbl,cond)
[13:24:10] <mobidrop> I remember having to write an ORM extension for a simple COUNT(DISTINCT x)
[13:24:11] <Akronymus> If you think of sql like a procedural/OOP/whatever language instead of a set based querying one, you are gonna have a hard time.
[13:24:13] <pikapika> but the bigger problem is
[13:24:22] <mercenary> pikapika: sql injection ahead
[13:24:35] <pikapika> mercenary, its not a string
[13:24:37] <pikapika> its an api
[13:24:40] <Akronymus> Haha, stored procedures/prepared statements go brrrrr mercenary
[13:24:42] <mercenary> ok
[13:24:48] <pikapika> but anyways
[13:25:01] <pikapika> there is no reason the function style can't be used as a string with parameterized queries either
[13:25:09] <pikapika> also anyways the bigger point is
[13:25:09] <Akronymus> pikapika looks a lot like LINQ.
[13:25:14] <pikapika> The database has to be very smart
[13:25:23] <pikapika> this fact is independent of the syntax chosen
[13:25:26] <Akronymus> The database can make a TON of assumptions.
[13:25:35] <Akronymus> That's why it is performant at all.
[13:25:35] <pikapika> The database engine just has to be very smart about making the query plans
[13:25:39] <pikapika> Thats where the problem is
[13:25:42] *** Quits: zoey (~zoey@2a02:8084:a080:9e00:7c8c:4b88:b1b8:70e1) (Client Quit)
[13:26:00] <Akronymus> (Assumptions as in free to do what it wants to do)
[13:26:25] <pikapika> Akronymus, query plans get really complex
[13:26:38] *** Joins: tw3ml0w (~tw3ml0w@91.132.137.125)
[13:26:45] <Akronymus> Don't EVER join on either x or y table.
[13:26:57] <Akronymus> That just wrecks any DB I have ever used.
[13:27:01] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[13:27:28] <pikapika> Databases are very subtle
[13:28:13] <mercenary> The more annoying part is that the same query has to be written differently for different DBs, because the planner of the one gets confused by one form, and the planner of the other by the other form
[13:28:21] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[13:29:11] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[13:29:55] *** sunbae is now known as a[b]
[13:30:22] *** a[b] is now known as sunbae
[13:32:01] <CuriousErnestBro> so no one knows how to deploy a database?
[13:32:08] *** Quits: EPic_ (apic@apic.name) (Quit: Reconnecting)
[13:32:14] *** Joins: APic (apic@apic.name)
[13:32:32] <CuriousErnestBro> local -> gh's servers -> production
[13:32:40] <CuriousErnestBro> testing is done in local and gh's servers
[13:32:47] <CuriousErnestBro> the database is running in local and production
[13:32:56] <CuriousErnestBro> apparently sqlx has "migrations"
[13:33:16] <CuriousErnestBro> but you can't do testing and migrations on gh's servers (stateless)
[13:33:28] <CuriousErnestBro> CI turns out to be useless....
[13:35:16] *** Joins: entuland (~entuland@user/entuland)
[13:36:28] <Akronymus> mercenary How often do you change DB?
[13:36:37] *** Quits: jazzy (~jaziz@2600:380:8562:6b2:8c7e:762:5a80:c3e1) (Remote host closed the connection)
[13:36:42] <Akronymus> I have never once found it to be necessary
[13:36:57] *** Joins: jazzy (~jaziz@2600:380:8562:6b2:8c7e:762:5a80:c3e1)
[13:37:20] <Akronymus> And even if a ORM makes it easy to change, you still have to somehow coerce the ORM to work well with the new DB anyways.
[13:37:39] <pikapika> mrig, do you have clocks?
[13:37:47] <mercenary> Akronymus: in this case, there are 'satellite' mysql databases, and a 'warehouse' postgres DB. Both have the same schema
[13:38:08] <Akronymus> Oh.
[13:38:22] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[13:38:31] <Akronymus> In that case it may make actually make sense.
[13:38:41] *** Quits: PikaChokeMe (~PikaChoke@c-24-11-1-200.hsd1.ut.comcast.net) (Quit: Leaving)
[13:39:28] <mercenary> Mostly queries 'just work'. But some heavy queries have to be optimized depending on if they run against a satellite or against main
[13:39:42] <CuriousErnestBro> no one knows?
[13:39:58] <Akronymus> Yeah, the "standard" subset of sql just works.
[13:40:36] *** jazzy is now known as jazzy2
[13:40:52] *** jazzy2 is now known as jazzy
[13:41:12] *** jazzy is now known as Jazzy
[13:41:19] *** Jazzy is now known as jazzy
[13:42:14] <mercenary> Akronymus: not entirely a fait comparison though, cardinalities differ: main is the sum of all data of the satellites, so when the planner uses estimates on number-of-rows they will differ.
[13:42:42] <smallville7123> https://wandbox.org/permlink/0tGZ04egTQUSxPcF why does this give "error: expression is not assignable `array[index++] = data;` "
[13:42:45] <bayaz> Title: [Wandbox]三へ( へ՞ਊ ՞)へ ﾊｯﾊｯ 
[13:42:47] <Akronymus> Altough, why use a different db for main and sattelite?
[13:43:37] *** Joins: nekodesu (~nano@user/nekobit)
[13:45:14] <mrig> pikapika: sure yes, why do you ask?
[13:45:27] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[13:45:27] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[13:45:27] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[13:45:30] <mrig> be stuck with out them to be honest. :)
[13:45:40] <pikapika> mrig, like an actual pendulum based clock
[13:46:00] <mrig> Pentium based clocks?
[13:46:00] <mercenary> Akronymus: reasons for that are lost in time. something to do with ease of upgrades between versions, ease of paritioning, etc.
[13:46:10] <CuriousErnestBro> mobidrop how do you do testing?
[13:46:20] <CuriousErnestBro> in the CI, with your databases
[13:46:30] <mrig> pikapika: no I've not got any that are not electronic and crystal, would love to have though.
[13:46:36] *** Joins: Burgundy (~yomon@5-12-93-72.residential.rdsnet.ro)
[13:46:39] <pikapika> Ok
[13:47:06] <mrig> mechanical clocks are really cool, they have to have a nice sound though :)
[13:47:17] <pikapika> mrig, longitude was hard to find
[13:47:30] <edgar-rft> let's do all our computations with cogwheels
[13:47:40] <mrig> pikapika: have your read the book longitude?
[13:47:49] <mrig> Really good read if you have not.
[13:47:50] <pikapika> I haven't
[13:47:53] <pikapika> What is it about?
[13:48:17] <Akronymus> mercenary ah yes, who doen't love legacy crust?
[13:48:22] <Akronymus> cruft?
[13:48:30] <Akronymus> Dunno the right word.
[13:48:34] <mrig> The chap that solved the problem of calculating longitude when at sea.
[13:48:44] <mercenary> Akronymus: 'technical debt'
[13:48:56] <mrig> Really funny, solved by an engineer, all the mathematicians and astronomers of the time were spewing.
[13:49:07] <mrig> Would not accept it.
[13:49:07] <pikapika> mrig, Dollond?
[13:49:10] <pikapika> Ramsden?
[13:49:18] <pikapika> I think it was something among them
[13:49:27] <pikapika> Its incorrect to say they weren't astronomers
[13:50:29] <pikapika> appaently its someone claled john harrison
[13:50:29] <mrig> John Harrison, invented the bimetallic strip and first chronometer that did not require a pendulum not running liquid.
[13:51:26] <mrig> The it was the bimetallic wound spring that did it, if memory serves, giving constant forces and varying temperatures.
[13:51:50] <mrig> I could be wrong about were the bimetallic part was used :|
[13:52:02] *** Quits: damxsa (~damx@2001:16a2:cfd8:e500:40e7:6a69:a396:39e9) (Ping timeout: 272 seconds)
[13:52:49] *** Joins: damxsa (~damx@2001:16a2:cfd8:e500:2ad7:2047:d9ca:b11b)
[14:01:59] *** Quits: damxsa (~damx@2001:16a2:cfd8:e500:2ad7:2047:d9ca:b11b) (Quit: Leaving)
[14:03:09] <CuriousErnestBro> what's the apple child porn thing?
[14:03:25] *** Joins: furrymcgee (~devuan@31.179.186.66)
[14:03:26] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Quit: WeeChat 3.2)
[14:03:27] <CuriousErnestBro> apple infringing on privacy again?
[14:03:33] <GeDaMo> Apple are intending to scan your images for child porn
[14:04:21] <mrig> GeDaMo: yes I read about that, seems a little bit intrusive.
[14:04:52] <mrig> well very intrusive, that was a gross understatement.
[14:05:21] <GeDaMo> https://www.theregister.com/2021/08/05/apple_csam_scanning/
[14:06:30] <mrig> The nanny of the nanny state, just turned into a queen termite.
[14:07:29] <pikapika> Australia is an obscure country
[14:07:36] <CuriousErnestBro> so you can just generate images with a similar hash to child porn and email them to someone
[14:07:44] <CuriousErnestBro> and they'll get sent SWAT to their house?
[14:08:13] <mrig> CuriousErnestBro: heh, you are very naughty!
[14:08:14] <GeDaMo> Apparently it's not hash based
[14:08:23] <pikapika> What is australia's fbi
[14:08:25] <CuriousErnestBro> mrig what do you mean?
[14:08:35] <mrig> CuriousErnestBro: careful or nanny will spot you and swat you!
[14:08:54] <mrig> CuriousErnestBro: oh just for entertaining the thought, it would not have occurred to me.
[14:08:56] <CuriousErnestBro> what I wouldn't do to have nanny's thick thighs squeeze my skull
[14:09:05] <pikapika> Who is nanny?
[14:09:15] <CuriousErnestBro> mrig thanks, I stole it from a hacker news comment
[14:09:20] <mrig> :)
[14:09:44] <CuriousErnestBro> pikapika please don't interfere with my and mrig's sexual fantasies 
[14:09:49] <CuriousErnestBro> (^:
[14:09:59] <mrig> :P
[14:10:13] <mrig> CuriousErnestBro: fantasies? I did it.
[14:10:33] <CuriousErnestBro> gotten your skull crushed by a pair of juicy thighs?
[14:11:05] <mrig> Na, that was was your fantasy if memory serves.
[14:11:35] <mrig> I was very polite and did not remark upon it :P
[14:11:49] <CuriousErnestBro> I see
[14:12:15] <CuriousErnestBro> I didn't get the swat joke
[14:12:23] <CuriousErnestBro> unless you were referecing bdsm or something
[14:12:25] <CuriousErnestBro> then I got it
[14:12:27] <CuriousErnestBro> :D
[14:12:27] <mrig> GeDaMo: As a linux user, what are your thoughts on mac?
[14:12:35] <GeDaMo> I've never used one
[14:12:57] <sunbae> Me neither.
[14:12:59] <pikapika> Mac is very obscure
[14:13:01] <mrig> Me either, am intrigued, though I must say that this sort of thing would turn me off trying.
[14:13:24] <GeDaMo> You're assuming that Microsoft aren't doing the same thing :P
[14:13:57] <pikapika> Why would a company not be surveilling on its stuff
[14:14:05] <pikapika> that should be the default assumption
[14:14:09] <mrig> sure, so long as the hardware can run linux though.
[14:14:13] <pikapika> that they are reading whatever you are sending
[14:14:36] <CuriousErnestBro> mac is very nice, I used ubuntu before it
[14:14:45] <mrig> GeDaMo: And the hardware manufacturers too.
[14:15:17] <mrig> I dont trust my current machine one bit :|
[14:15:53] <mrig> but what governments do and what private companies do should not really be in the same ball park, should it?
[14:16:09] <CuriousErnestBro> as far as software goes: if it can run a terminal well (so not windows) I'll use it and move on with my life
[14:16:10] <mrig> I suppose mac have always made this part of their selling points.
[14:16:43] *** Quits: Akronymus (~Akronymus@85.31.8.181) (Ping timeout: 246 seconds)
[14:17:13] *** Joins: user51 (~user51@176.228.90.248)
[14:17:49] <paulo> o/
[14:18:48] <CuriousErnestBro> .\o
[14:19:19] *** Joins: khanred (~khanred@45-17-211-63.lightspeed.okcbok.sbcglobal.net)
[14:19:26] *** Quits: khanred (~khanred@45-17-211-63.lightspeed.okcbok.sbcglobal.net) (Changing host)
[14:19:26] *** Joins: khanred (~khanred@user/khanred)
[14:19:30] *** Parts: khanred (~khanred@user/khanred) ()
[14:20:42] <mrig> A new fangled terminal, that is what my computer needs :)
[14:20:56] <pikapika> CuriousErnestBro, then you should be happy with android
[14:21:00] <mrig> unix is good, really good, but I'm sure that there is better out there.
[14:21:03] <pikapika> Because you can run a termux on android
[14:21:08] <pikapika> But wait...
[14:21:21] <pikapika> I am just saying being able to run a terminal is too vague
[14:21:27] <CuriousErnestBro> I was talking about computers
[14:21:34] <mrig> Waiting to be dug up from the heap of as yet unwritten programs.
[14:21:34] <pikapika> Just being able to run a terminal does not guarantee you anything
[14:21:40] <pikapika> CuriousErnestBro, I imagine chromebooks are similar
[14:21:45] <pikapika> so why can't apple be the same
[14:22:19] <CuriousErnestBro> same how?
[14:22:48] <pikapika> CuriousErnestBro, in that a terminal might be available but it is no indication that the system is not locked down to hell
[14:23:04] <CuriousErnestBro> I see
[14:23:28] <CuriousErnestBro> yeah I guess the main criteria is then: it allows me to do my work without getting in the way much]
[14:24:05] <mrig> dang the things that I put up with to have a powerful calculator :)
[14:24:20] *** Quits: mz` (~mz`@user/mz/x-8532539) (Quit: WeeChat 2.8)
[14:24:29] <mrig> Good job that coding if fun, else I would go full Luddite.
[14:24:54] *** Quits: molt (~molt@79.140.150.21) (Ping timeout: 276 seconds)
[14:24:58] <CuriousErnestBro> mrig see my comment about spite
[14:25:08] *** Joins: archie (~archie@host-87-20-208-51.retail.telecomitalia.it)
[14:25:19] <archie> hello
[14:25:27] <GeDaMo> How long before you start getting adverts on your terminal? :P
[14:25:40] <mrig> CuriousErnestBro: which one?
[14:25:49] <mrig> CuriousErnestBro: and why spite?
[14:25:49] <CuriousErnestBro> GeDaMo I already get those
[14:25:53] <CuriousErnestBro> fuck npm fund
[14:26:09] <mrig> GeDaMo: that would be a terminus for my terminal should it happen :D
[14:26:15] <CuriousErnestBro> [10:35:36]  <CuriousErnestBro>  Great programmers tend to be people who really enjoy it, and therefore do it a lot for very many years.
[14:26:15] <CuriousErnestBro> [10:35:47]  <CuriousErnestBro> I don't know about you, but I program out of pure spite
[14:26:15] <CuriousErnestBro> [10:35:53]  <mrig> CuriousErnestBro: heh!
[14:26:28] <archie> the sum of the content of an array of char has a specific name?
[14:26:40] <mrig> CuriousErnestBro: oh right yes, sorry had forgotten about that one :D
[14:27:02] <GeDaMo> archie: a checksum?
[14:27:10] <mrig> CuriousErnestBro: You've a love hate thing going on, I can dig that!
[14:27:26] <mrig> Yes me too I suppose.
[14:27:36] <CuriousErnestBro> right now it's hate, no one here could tell me that you should decouple database and deployment
[14:27:41] <archie> GeDaMo maybe
[14:27:48] <CuriousErnestBro> instead you all were too busy discussing ORM's for the 1200th time
[14:28:05] <mrig> Though I code because I find it fascinating, and need it for a project that is not programming related.
[14:28:33] <mrig> CuriousErnestBro: I often use files not databases.
[14:28:45] <CuriousErnestBro> yes I use db.json too
[14:28:50] <CuriousErnestBro> but I wanna do "best practice" 
[14:29:02] *** Joins: vysn (~vysn@user/vysn)
[14:29:14] <mrig> not json, I just write my own thing, what ever suits. CSV is pretty cool.
[14:29:29] <mrig> JSON is awful to read.
[14:29:54] <mrig> reminds me of that horror film character in a hockey mask.
[14:31:00] <mrig> Like ugly baby's though, it would seem that somebody loves it.
[14:31:39] <archie> GeDaMo do you believe c++ built in hash function is fater than a manual sum of string chars?
[14:31:53] *** Joins: Akronymus (~Akronymus@85.31.8.181)
[14:31:55] <GeDaMo> I have no idea
[14:32:52] <archie> anyone has any clue?
[14:33:16] <merijn> Depends on your stdlib
[14:33:40] <merijn> Sum of characters is a terrible freaking hash, though
[14:34:51] *** Quits: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler) (Ping timeout: 244 seconds)
[14:36:21] <archie> merijn it just has to be fast, collisions aren't important
[14:36:53] <GeDaMo> What are you actually going to use this sum for?
[14:38:12] *** Quits: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it) (Remote host closed the connection)
[14:38:19] *** Joins: Hax0r (~Hax0r@2001:16a2:c090:478a:9c13:a78b:11ce:bb41)
[14:38:38] *** Quits: Yonle (~Yonle@user/yonle) (Remote host closed the connection)
[14:39:19] <Rounin> I got a pretty good result once by just XORing in characters and then rotating the hash by 7, as most characters take up 7 bits
[14:39:38] <Rounin> Though someone else got an equally good result by doing some summing and multiplying
[14:39:50] <Rounin> Anyway, not secure, obviously, but good enough to avoid some collisions
[14:39:59] <Akronymus> Just use sha1024? /s
[14:40:40] *** Quits: anon16_ (~anon16@user/anon16) (Read error: Connection reset by peer)
[14:40:44] *** Quits: Samian (~Sami@2620:10d:c091:480::1:1def) (Ping timeout: 258 seconds)
[14:40:45] <archie> GeDaMo sharding
[14:41:03] *** Joins: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it)
[14:41:20] <archie> GeDaMo shard = checksum % shard_number
[14:41:24] <Rounin> Anyway, if it doesn't have to be secure, there are a ton of fast hashes... Some use the built-in AES instructions on many CPUs to be extremely fast
[14:41:38] <Rounin> Like meowhash
[14:41:39] <archie> that's why idc about collisions
[14:41:50] <archie> but has to be as fast as possible
[14:42:04] <pikapika> why don't you just send round robin
[14:42:06] <pikapika> or similar
[14:42:10] <pikapika> or just a random number
[14:42:16] <pikapika> if its just meant to send to a sub databvase
[14:42:35] *** Joins: zwr (~zwr@2804:d45:b966:fb00:7600:9566:8fda:2679)
[14:42:44] <Rounin> Round robin should make it more balanced
[14:42:45] <sunbae> Do you have a time budget, archie?
[14:44:22] <archie> sunbae what's a time budget
[14:44:47] <sunbae> When you know how fast something needs to be.
[14:45:08] <sunbae> For example, a frame must be rendered in X ms, so everything has to fit inside that time budget.
[14:45:15] <archie> pikapika because if it's random won't be possible to retrieve data
[14:45:36] <sunbae> Perhaps you don't need to ber "as fast as possible", perhaps something in your standard library is good enough.
[14:45:39] <pikapika> so you wanna know which database it is in purely from the records data?
[14:46:15] <Akronymus> Whats the max time it can take?
[14:46:22] <Akronymus> Without making problems.
[14:46:30] <archie> sunbae microseconds for single write or read
[14:46:49] *** Joins: anon16_ (~anon16@user/anon16)
[14:46:50] <sunbae> Then benchmark some different approaches.
[14:46:57] <pikapika> The disk could be slower
[14:46:58] <Akronymus> ^
[14:47:11] <Akronymus> Benchmark before optimizing.
[14:47:17] <Akronymus> Benchmark during optimizing
[14:47:23] <Akronymus> Basically: benchmark
[14:47:26] <archie> sunbae p95 is currently around 950 microseconds while avg is 550
[14:47:43] <archie> sunbae the checksum must have a minimal impact on those values
[14:48:04] <archie> close to zero, and sum is the simplest way I'm thinking of
[14:48:24] <Arahael> Akronymus: you forgot benchmarking after optimisation. ;)
[14:48:32] <sunbae> I don't know enough about hashing to tell if that's a tight budget or not.
[14:48:33] <Akronymus> "sum % shards"?
[14:48:58] <Akronymus> Could reasonable lead to unbalanced load.
[14:49:12] <archie> Akronymus shards are 4 but sum 10, what should I do? :P
[14:49:22] <Akronymus> Modulo
[14:49:27] <Akronymus> That's what I wrote
[14:49:28] <sunbae> SHA and SHA1 seem to give us the best spread of the data, but at 1 microsecond per hash, it seems rather expensive.SHA and SHA1 seem to give us the best spread of the data, but at 1 microsecond per hash, it seems rather expensive.SHA and SHA1 seem to give us the best spread of the data, but at 1 microsecond per hash, it seems rather expensive.SHA and SHA1 seem to give us the best spread of the data, 
[14:49:34] <sunbae> but at 1 microsecond per hash, it seems rather expensive.SHA and SHA1 seem to give us the best spread of the data, but at 1 microsecond per hash, it seems rather expensive.SHA and SHA1 seem to give us the best spread of the data, but at 1 microsecond per hash, it seems rather expensive.SHA and SHA1 seem to give us the best spread of the data, but at 1 microsecond per hash, it seems rather expensive. 
[14:49:40] <sunbae> http://kejser.org/exploring-hash-functions-in-sql-server/
[14:49:42] <archie> Akronymus done already
[14:49:42] <bayaz> Title: Exploring Hash Functions in SQL Server - Fighting Bad Data Modeling 
[14:49:43] <sunbae> Sorry!
[14:50:01] <archie> actually, part of the sum is a sha256 hash
[14:50:27] <Akronymus> Oh, you mean summing the values of the characters?
[14:50:33] <archie> yes
[14:50:33] <Akronymus> Not the amount of them?
[14:50:43] <archie> exactly, the amout is fixed
[14:50:57] <Akronymus> Yeah, then just the sum modulo shards should work.
[14:51:03] <archie> maybe just picking the last one, considering is the ending of a sha256 could be enough and faster, wdyt?
[14:51:07] <Akronymus> As long as the shard amount is reasonably low
[14:52:02] <Akronymus> archie should work. but may lead unbalanced shards if the amount of shards is too large.
[14:52:30] *** Joins: pncl1 (~Hax0r@2001:16a2:c011:5267:e69d:ba3d:abc:cbdd)
[14:52:41] <archie> so I can go ahead picking last char only?
[14:52:57] <archie> define large
[14:53:21] <archie> for me 10 shards is large (for instance)
[14:53:27] <archie> very large
[14:54:00] <Akronymus> Large being 10% of the amount of shards as the median charcode or whatever you use. 
[14:54:08] <Akronymus> Source: pulled out of my ass.
[14:54:15] <archie> math scares me
[14:54:20] <archie> pratical sample?
[14:54:36] <pikapika> Math is scary
[14:54:54] *** Joins: mot1 (~homer@2406:3400:216:80a0:dcc3:df94:7c5f:af8d)
[14:55:07] <Akronymus> If you have the possible values of 1-15 and have 10 buckets, the first 5 would get double the amount of stuff in it
[14:55:07] <archie> Akronymus billions of entries will be present
[14:55:22] *** Quits: Hax0r (~Hax0r@2001:16a2:c090:478a:9c13:a78b:11ce:bb41) (Ping timeout: 272 seconds)
[14:55:29] <Akronymus> This amount decreases the larger the possible values get
[14:55:45] <archie> ok
[14:56:08] <Akronymus> For 1-255 it'd be only 1/26th or so with what the first 5 buckets would get in addition
[14:56:11] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[14:56:22] *** Quits: kodah (~kodah@user/kodah) (Ping timeout: 245 seconds)
[14:56:36] <archie> believe with billions of entries I could even afforth hundreds of shards
[14:56:39] <archie> :D
[14:57:01] <Akronymus> Entry != value in this case.
[14:57:15] <Akronymus> Value being whatever you use to decide on which bucket it goes into
[14:57:23] <archie> right
[14:57:26] <archie> well uhmmmm
[14:57:44] <archie> value could be:
[14:57:52] <Akronymus> Sha uses  base 64, afaik.
[14:57:56] <archie> the sum of char of a sha256
[14:57:56] <Akronymus> Am I right in that?
[14:57:57] <archie> or
[14:58:02] <archie> the lsat char of a sha256
[14:58:10] <archie> s/lsat/last
[14:58:17] *** Quits: blahboybaz (~blahboyba@c-73-221-100-152.hsd1.wa.comcast.net) (Ping timeout: 248 seconds)
[14:58:52] <Akronymus> Oh, sha uses base 16.
[14:59:15] <Akronymus> I'd use the last 8 characters or so in that case.
[14:59:22] <Rounin> Well, I don't know if that's necessarily part of SHA... It might be... But that's one way the command-line utilities display the checksum
[14:59:31] <Rounin> You could just keep it as a binary number
[14:59:34] <Akronymus> Oh right.
[14:59:59] <Akronymus> Yeah, then I'd just use the last byte%number of shards
[14:59:59] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[15:00:09] <archie> Rounin I have raw bytes, chars are not printable
[15:00:37] <Akronymus> last byte = 255 possible values.
[15:00:43] <Akronymus> Which should be enough
[15:00:56] <archie> will verify that
[15:00:58] <archie> thanks :)
[15:01:39] <Akronymus> There still is gonna be some unbalanced load, unless you choose a value that 256 is a multiple of, for the shard amount.
[15:02:50] <archie> thanks!
[15:04:08] <Rounin> And if your number of buckets is a power of two, you can use & instead of %
[15:04:21] <Rounin> numeric_value % 256 = numeric_value & 255
[15:04:38] <Rounin> And save a few microseconds or whatever
[15:04:47] <Rounin> Though many compilers will probably do that anyway
[15:05:00] *** Quits: pncl1 (~Hax0r@2001:16a2:c011:5267:e69d:ba3d:abc:cbdd) (Ping timeout: 256 seconds)
[15:05:49] *** Quits: rubychellos (uid511313@stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[15:05:57] <Akronymus> I'd use "numeric_value & 0x7f"
[15:06:03] <Akronymus> To make it clearer.
[15:06:24] <Akronymus> At least IMO.
[15:06:39] <Akronymus> (I find hex for such things easier to reason about)
[15:07:03] *** Joins: pulse (~pulse@user/pulse)
[15:07:10] <mot1> I'm not a programmer. I had a bizzare experience. boot wasn't working so I used a live cd to back stuff up. There were a couple of folders that had permissions I didn't set which I had to change to copy them. Now here's the weird thing. I did sudo chmod -R u=rwx,g=rw,o=rw file , opened it and all the subdirectories were gone. Looking at the properties, the disk space used reflected only what I could see. Can anyone tell me what hap
[15:07:26] <archie> wtf
[15:07:32] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[15:07:40] <archie> how is possible that I've got this as last value of sha256
[15:07:41] <archie> 18446744073709551534
[15:07:42] <archie> lol
[15:07:47] <archie> love c++
[15:08:06] <Akronymus> Seems like the whole sha as a number.
[15:08:22] <Akronymus> Base 10 number*
[15:08:33] <archie> impossible
[15:09:30] <pikapika> how many bits is a sha1
[15:09:45] <archie> sha256 is 32 bytes
[15:09:49] <archie> in memory
[15:10:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[15:10:01] <pikapika> that number looks 64 bits
[15:10:32] <Akronymus> Reading out a value from a register?
[15:10:48] <pikapika> Did you somehow use a signed char for the sha
[15:10:58] <Akronymus>  ¯\_(ツ)_/¯ 
[15:11:00] <pikapika> and are reading into a uint64
[15:11:11] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:12:34] *** Joins: Hax0r (~Hax0r@93.168.163.193)
[15:13:10] <xeno> hi, anyone know if it's possible to add a string to an email address for exchange? like the old userid+uniqueid@domain.foo ? 
[15:13:18] <pikapika> Akronymus, it looks like -82 to me
[15:13:36] <pikapika> as a signed 8 bit value
[15:14:22] <archie> maybe I'm doing something wrong
[15:14:45] *** Joins: wolfshappen (~waff@irc.furworks.de)
[15:14:49] *** Quits: tw3ml0w (~tw3ml0w@91.132.137.125) (Ping timeout: 248 seconds)
[15:14:51] <archie> the values are stored in a string and I am trying to pick the last byte with string[i]
[15:14:58] *** Joins: inky_ (~inky@5.77.154.24)
[15:15:30] <pikapika> what type is the string
[15:15:36] <pikapika> and what type are you loading the value into
[15:15:46] *** Quits: inky (~inky@46.36.113.172) (Ping timeout: 256 seconds)
[15:15:53] <pikapika> and is the string the binary value or an ascii representation
[15:16:21] <archie> type is string
[15:16:23] <archie> std::string
[15:16:36] <archie> binary value
[15:16:40] <archie> not ascii
[15:16:50] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[15:17:06] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[15:17:09] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 258 seconds)
[15:17:16] <ash_worksi> does anyone know what's required to rename files in sqitch?
[15:17:25] <pikapika> archie, '0xabcd1235' whatever is an ascii representation
[15:17:28] <pikapika> not a binary value
[15:17:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:17:39] <pikapika> a binary value would appear as a bunch of garbage and control codes if printed
[15:17:51] <pikapika> std::string appears to use char
[15:17:56] <pikapika> which can be signed by default
[15:18:38] <archie> so the printed value is correct? :\
[15:19:01] *** Quits: wei2912 (~wei2912@112.199.250.21) (Quit: Lost terminal)
[15:19:02] <pikapika> you didn't answer the questions being asked
[15:19:13] <archie> which one
[15:19:16] <pikapika> all of them
[15:19:30] <pikapika> first of all what library and function are you using for the sha
[15:19:40] <pikapika> then does it emit ascii inside a string or the actual binary value?
[15:19:53] <pikapika> an ascii string for 32bytes with a hex representation would for example require 64 chars
[15:20:00] <pikapika> but a binary value would take exactly 32 bytes
[15:20:34] <archie> sha256 lib: https://github.com/HathorNetwork/cgminer/blob/master/sha2.h
[15:20:49] <archie> binary value, takes exactly 32 bytes
[15:21:29] <Akronymus> I just realized something weird: I REALLY like f#, haskell, lisp and erlang. Yet I hate languages like python.
[15:21:32] <Akronymus> And JS
[15:22:26] <pikapika> Akronymus, try C
[15:22:33] <archie> pikapika I did verify the correctness of the 32 bytes by printing them in hex format (which has a lentgh of 64 in this case)
[15:22:43] <Akronymus> C has no real advantages for me that I can see.
[15:22:52] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[15:22:55] <pikapika> Akronymus, your compiler isn't doing black box magic tricks
[15:22:59] <archie> lunch
[15:23:00] <archie> g2g
[15:23:02] <pikapika> You know where the mallocs and frees are etc
[15:23:05] <archie> thanks for the help anyway
[15:23:09] <archie> bye :)
[15:23:23] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:23:23] <pikapika> Nobody knows whats ahppening inside haskell
[15:23:24] <Akronymus> It has no strong type system, it lacks many lisp features and so on.
[15:23:36] <pikapika> It has a sufficient type system
[15:23:39] *** Quits: archie (~archie@host-87-20-208-51.retail.telecomitalia.it) (Quit: Client closed)
[15:23:47] <Akronymus> I wouldn't call it a type system at all.
[15:23:51] <pikapika> You can make it strong or weak enough per your needs, but it mostly encourages static typing
[15:23:53] *** Quits: NChief (~nchief@irc.nortv.net) (Ping timeout: 248 seconds)
[15:23:54] <pikapika> unlike js
[15:23:56] <pikapika> etc
[15:24:06] <Akronymus> JS is just urgh
[15:24:12] <GeDaMo> What you want is Forth, no type system at all! :P
[15:24:14] *** Quits: sunbae (~euk@82.85-87-220.dynamic.clientes.euskaltel.es) (Changing host)
[15:24:14] *** Joins: sunbae (~euk@user/sunbae)
[15:24:19] <pikapika> It is actually a type system. Its magical in that the type is just a label for a number of bytes.
[15:24:28] <pikapika> Thats the magic of static types.
[15:24:41] <Akronymus> With type system I mean something like HM
[15:24:54] <pikapika> GeDaMo, asm
[15:24:57] <Akronymus> Something where you can actually model rules within the types.
[15:25:54] <pikapika> #define SHA256_DIGEST_SIZE ( 256 / 8)
[15:25:59] *** Joins: NChief (~nchief@irc.nortv.net)
[15:26:15] <pikapika> Ok if assuming this si the size of the output buffer then it is indeed binary
[15:26:39] <Akronymus> Oh 8 and closing brace.
[15:26:59] <pikapika> I find it funny the lisp diehards quote that paul graham essay
[15:27:22] <pikapika> The funny thing is if you try to put a hierarchy of languages it would be C and asm at the top, and LISP would be one of the "blub" languages
[15:27:32] <Akronymus> Beating the averages?
[15:27:56] <Akronymus> C and asm allow you to do anything.
[15:28:07] <Akronymus> But at the cost of not encouraging anything.
[15:28:10] <pikapika> He wrote an essay arguing that the only people who can truly judge a language would be those who are using the top most powerful language
[15:28:16] <pikapika> C and asm are by most measures that language
[15:28:19] <Akronymus> Oh blub paradox
[15:28:25] <pikapika> And LISP is one of the "average blubs"
[15:29:21] <Arahael> pikapika: That was Paul Graham, and in his view, Lisp was far, far from average. :)
[15:29:36] <pikapika> And his view is completely incorrect
[15:29:54] <smorgasbord> pikapika: what makes you say C and asm are "the most powerful" languages by that measure?
[15:29:57] <pikapika> asm is the peak language
[15:30:09] <Arahael> Why?
[15:30:09] <pikapika> smorgasbord, they have the best idea what the hardware is doing
[15:30:12] <smorgasbord> as far as I understood it, graham was talking about expressive power of the languages
[15:30:21] <Arahael> Yeah, and asm is far from expressive.
[15:30:22] <Akronymus> I disagree with that, because I find that certain limitations lead to better code.
[15:30:29] <pikapika> Expressive power is bullshit if it does not make sense to the hardware
[15:30:40] <smorgasbord> so how well you can express an abstraction that you have in your head, into something tangible in the code
[15:30:45] <mrig> We've not peeked yet :)
[15:30:45] <Akronymus> Along with making some stuff much easier.
[15:30:51] <Akronymus> Like higher ordered functions.
[15:30:56] <mrig> peaked either!
[15:30:58] <Akronymus> Sure, you can do them in c.
[15:31:03] <pikapika> ASM people have the best view
[15:31:06] <Akronymus> But it is, quite frankly, painful to do so.
[15:31:08] <pikapika> They know what the hardware is doing
[15:31:15] <Akronymus> I don't write code for the hardware.
[15:31:15] <pikapika> Everyone else is lower and lower in the hierarchy
[15:31:17] <smorgasbord> pikapika: sure, I agree, but thinking of it that way is missing the point of the essay
[15:31:20] <Akronymus> I write code for people.
[15:31:27] <smorgasbord> Akronymus: +1
[15:31:27] <xeno> pikapika: no, they don't 
[15:31:32] <pikapika> But your code is useless if it does not work in the hardware
[15:31:37] <pikapika> xeno, what
[15:31:43] <Akronymus> Thats where the compiler does its "magic"
[15:31:43] <smorgasbord> lisp works with the hardware what
[15:31:45] <xeno> pikapika: very few if any people know what the hardware is doing 
[15:31:49] <pikapika> Yes but asm peopel are closest to understanding the hardware
[15:31:50] *** Quits: wolfshappen (~waff@irc.furworks.de) (Quit: later)
[15:31:51] <smorgasbord> that's why we have compilers and iunterpreters
[15:31:54] <pikapika> LISP people are clueless
[15:32:00] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[15:32:01] <smorgasbord> interpreters*
[15:32:10] <pikapika> And thats not for want of knowledge
[15:32:14] *** Joins: wolfshappen (~waff@irc.furworks.de)
[15:32:20] <pikapika> its because of opaque layers like garbage collection
[15:32:21] <Arahael> pikapika: Why do you say that the lisp people are clueless?
[15:32:26] <xeno> I don't know of any lisp people, only people who know lisp 
[15:32:27] <Akronymus> I wouldn't call those that write lisp compilers clueless about the HW
[15:32:32] <pikapika> Its completely impossible to predict what your code will be actually doing on the hardware
[15:32:36] <mrig> Seems that Intel didn't know what the hardware was doing when they designed my CPU :(
[15:32:44] <GeDaMo> "A Lisp programmer knows the value of everything and the cost of nothing" :P
[15:32:47] <Akronymus> pikapika no not really
[15:32:48] <pikapika> Because of opaque gc etc
[15:32:55] <Arahael> pikapika: Ah, just like it's impossible to predict what your C code is actually doing on the hardware, too? :)
[15:33:08] <pikapika> Its much more easy to guess what a C code is doing
[15:33:08] <bihtori> pikapika: That applies to JavaScript as well and you wouldn't call all JS programmers clueless?
[15:33:20] <pikapika> bihtori, I would, compared to asm programmers
[15:33:22] <Akronymus> Arahael I bet he pikapika does -O0
[15:33:24] <Arahael> pikapika: And you'd probably guess wrong, what a C program is doing.
[15:33:30] <smorgasbord> pikapika: obviously a good asm programmer should also know the implementation of their ISA then won't you say? /s
[15:33:38] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[15:33:43] <pikapika> smorgasbord, that would be good indeed
[15:33:53] <bihtori> This is outrageous.
[15:34:04] <Akronymus> I know quite a bit about how HW/CPU's/etc work.
[15:34:13] <Akronymus> I still like not having to think about it.
[15:34:19] <smorgasbord> I mean I feel like you're missing the entire point of having abstractions
[15:34:21] <GeDaMo> https://en.wikichip.org/w/images/7/7e/skylake_block_diagram.svg
[15:34:22] <bayaz> Type: image/svg+xml 
[15:34:24] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[15:34:28] <Akronymus> Because for most cases it jsut isn't important at all.
[15:34:33] <pikapika> Akronymus, you know a lot. But you aren't good at predicting what your haskell compiler and lazy eval and gc etc will end up emitting.
[15:34:36] <smorgasbord> the point is that you don't have to think about anything lower than the level of abstraction you're dealing with
[15:34:48] <Akronymus> pikapika and do I need to?
[15:34:50] <pikapika> Thats the point
[15:34:58] <smorgasbord> pikapika: you don't have to know *exactly* what it'll get compiled to
[15:35:00] <pikapika> It doesn't matter how much you personally know about hw
[15:35:05] <pikapika> if your language makes it hard to reason about it
[15:35:19] <smorgasbord> yes but that's only if you're programming for the hardware
[15:35:20] <Akronymus> I find haskell programs much easier to reason about than C.
[15:35:30] <smorgasbord> most people program for people
[15:35:32] <pikapika> Everything runs on hardware so hardware is always a consideration
[15:35:35] <pikapika> in any software you make
[15:35:38] <Akronymus> I don't CARE how the bits are moved around
[15:35:41] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:35:46] <smorgasbord> always a consideration, but not the most important consideration always, right?
[15:35:46] <Akronymus> As long as it is fast enough
[15:35:49] <pikapika> Akronymus, I wish abstractions were that pure
[15:36:04] <Arahael> pikapika: the C abstraction is not pure.
[15:36:07] <Akronymus> Well, in haskell it feels that pure
[15:36:12] <pikapika> smorgasbord, the main point was. Its the asm programmers who are at the top of the hierarchy.
[15:36:22] <pikapika> Arahael, its not, but its closer to purity than other layers.
[15:36:29] <smorgasbord> again, that depends on how you're looking at the hierarchy
[15:36:45] <pikapika> smorgasbord, being in tube with realit
[15:36:46] <pikapika> smorgasbord, being in tube with reality
[15:36:48] <smorgasbord> if the question is "who understand's what the machin is doing best", then yes it'd be assembly programmers
[15:36:50] <Akronymus> ASM makes it very hard to represent any concept except imperative code.
[15:36:51] <pikapika> smorgasbord, being in tune with reality
[15:36:52] <smorgasbord> machine*
[15:37:04] <pikapika> Akronymus, thats because only imperative is real
[15:37:09] *** Joins: molt (~molt@79.140.150.21)
[15:37:12] <pikapika> Everything else is an illusion
[15:37:23] <Akronymus> But it isn't the most useful concept to reason about your program in.
[15:37:26] <Akronymus> IMO
[15:37:36] <smorgasbord> if you're talking about whose code captures the essence of what the program is trying to do, then I don't think it'd be asm
[15:37:41] <pikapika> It is. No brain is able to really understand non-imperative.
[15:37:47] <smorgasbord> higher level languages would of course rank higher then'
[15:37:59] <xeno> pikapika: what you really say is that math sucks and no one should use it 
[15:38:04] <pikapika> The "essence of what the program is trying to do" is meaningless if it doesn't make sense ot the machine.
[15:38:06] <Akronymus> "I transform this collection of values to a different value"
[15:38:09] <pikapika> xeno, math is very useful
[15:38:13] <Akronymus> Doesn't seem imperative to me.
[15:38:16] <pikapika> I just disagree which parts are useful for programmers
[15:38:22] <xeno> pikapika: but it's non-imperative 
[15:38:26] <smorgasbord> pikapika: <The "essence" ... > if you take that stance, then it is irrefutable
[15:38:32] <pikapika> Akronymus, it is imperative if you want it to finish in finite time and memory
[15:38:33] *** Quits: inky_ (~inky@5.77.154.24) (Read error: Connection reset by peer)
[15:39:03] <xeno> pikapika: and philosophically, it might be that imperative is the illusion :)
[15:39:09] <sunbae> That way of thinking, that closeness to the machine is something valuable, is a setback in computer science.
[15:39:22] <Akronymus> pikapika "map (\x -> x+1) somecollection"
[15:39:33] <smorgasbord> write it in assembly now :)
[15:39:33] <Akronymus> I find it easy to reason about that it adds 1 to every element
[15:39:35] <sunbae> Programs should be valued by what they do, not how they were written.
[15:39:41] <Akronymus> ^
[15:39:46] <pikapika> sunbae, on the contrary it is why most modern software is ass and why haskell and so on people have failed to make anything practical and workable of sufficient complexity like an OS or browser
[15:39:52] *** Joins: Atque (~Atque@user/atque)
[15:40:01] <smorgasbord> pikapika: pandoc is written in haskell
[15:40:05] <smorgasbord> and I use it almost everyday
[15:40:08] <Akronymus> Of course, haskell isn't the most useful language for everything.
[15:40:09] <smorgasbord> seems pretty practical to me
[15:40:11] <pikapika> What part of pandoc?
[15:40:15] <Akronymus> I won't deny that performance can lack.
[15:40:18] <sunbae> There is a lot of useful software written in haskell. And in asm too.
[15:40:19] <Arahael> pikapika: Most software is "ass" because businesses and users don't value efficient software.
[15:40:30] <Akronymus> And because it is "fast enough"
[15:40:37] <pikapika> And "efficiency" is very black box and magical in languages like haskell or js
[15:40:48] <smorgasbord> https://github.com/jgm/pandoc
[15:40:51] <pikapika> Its very unpredictable and random what and why something is efficient there or not
[15:40:53] <smorgasbord> 91.7% of pandoc, apparently
[15:40:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[15:41:21] *** Joins: inky_ (~inky@195.250.71.138)
[15:41:23] <pikapika> and how much of pandoc is real code vs just piping the markup to existing pdf libraries, xml libraries etc
[15:41:28] <pikapika> which are written in C++ or java etc
[15:41:49] <smorgasbord> that's beyond the point
[15:41:50] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:41:56] <pikapika> That is precisely the point
[15:42:02] <smorgasbord> haskell has displayed its usefulness in acting as the glue code
[15:42:10] <pikapika> if its just a thin glue for a bunch of libraries then its not haskell thats the magic
[15:42:14] <smorgasbord> its still a role that needs to be fulfilled by some programming language
[15:42:16] <pikapika> it is the actual libraries that are
[15:42:23] <pikapika> It is an important job yes
[15:42:27] <smorgasbord> and I think haskell makes for a better language fdor that than asm
[15:42:36] <piou> pikapika: all of pandoc dependancies are in haskell too
[15:42:39] <pikapika> But it brings us no further in the proof of it being used for any meaty complex thing
[15:42:45] <pikapika> piou, such as?
[15:42:51] *** Joins: D-04 (~D-04@89.249.65.28)
[15:43:01] <piou> https://paste.devys.org/luikaomauji
[15:43:02] <Akronymus> QuickCheck is a fantastic testing suite.
[15:43:02] *** Joins: izak (~user@196.189.63.196)
[15:43:04] <bayaz> Title: Paste snippets 
[15:43:08] <Akronymus> Originally writen in haskell.
[15:43:13] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 268 seconds)
[15:43:17] <Akronymus> Then translated to other languages.
[15:43:17] <piou> pikapika: ^ see "Depends on"
[15:43:43] <Akronymus> Which, to me, indicates that haskell enabled reasoning about it in the first place.
[15:43:49] <pikapika> piou, and how am I to know most of these haskell-X libs aren't just the haskell code for making interfaces to the X C libraries
[15:44:10] <smorgasbord> why does it matter?
[15:44:13] <pikapika> ie haskell-zlib being just a set of haskell header files or whatever haskell uses for zlib C library
[15:44:17] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[15:44:45] <pikapika> smorgasbord, because the question was have haskellers produced anything meaty like an OS or browser
[15:44:53] <pikapika> and if it turns out the meat of the code was in C, C++, Java etc
[15:44:55] <piou> pikapika: I feel like I did enough of the work, if you want to dig deeper feel free, these are public informations
[15:45:01] <pikapika> then it does not bring us any further to the proof
[15:45:07] * smorgasbord agrees with piou
[15:45:12] <bihtori> pikapika: there are trading algorithm implementations and banking stuff written in Haskell
[15:45:25] <pikapika> piou, I will research further but I have a strong feeling these haskell-xyzlib are just haskell wrappers over original xyzlib written in C
[15:45:25] <Akronymus> But all those libraries are written in a way that interact well with haskell.
[15:45:35] <Akronymus> Which then allows you to write actually good glue code
[15:45:56] <piou> I'm sure you'll find one or two that link to a C library because that's hard to completely avoid when you're working in an environment that is C dominant
[15:46:26] <pikapika> C is dominant because it is more natural to talk to the hardware in C
[15:46:27] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Remote host closed the connection)
[15:46:30] <pikapika> vs in ohter languages
[15:46:30] <smorgasbord> C is an excellent language, there's no doubt
[15:46:35] <Akronymus> It is
[15:46:39] <smorgasbord> it's just not the right language for everything
[15:46:49] *** Joins: mrig (~mrig@user/mrig)
[15:46:49] <death916> ya rust is
[15:46:50] <Akronymus> Just not very expressive at all
[15:46:50] <piou> smorgasbord: my feeling exactly
[15:46:52] * death916 hides
[15:47:00] <pikapika> I was just saying if you buy into the "blub paradox" nonsense, then asm and to a lesser extent C are the top languages
[15:47:00] <GeDaMo> I like C but I don't know if I would call it 'excellent' :|
[15:47:03] <pikapika> ANd everyone else is blub
[15:47:05] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[15:47:19] <GeDaMo> You keep forgetting about Forth! :P
[15:47:27] <pikapika> I don't know enough about forth
[15:47:27] <smorgasbord> pikapika: that is if you order the blub paradox by "alignment with machine hardware"
[15:47:30] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:47:33] *** Quits: zwr (~zwr@2804:d45:b966:fb00:7600:9566:8fda:2679) (Ping timeout: 268 seconds)
[15:47:37] <pikapika> Machine hardware is Reality
[15:47:40] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:47:43] <pikapika> Things that are in tune with reality work well
[15:47:43] <GeDaMo> That is why you fail! :P
[15:47:47] <pikapika> Things that aren't, fail
[15:47:47] <smorgasbord> I view it as ordering the blub paradox by "alignment with programmer's mental abstractions"
[15:47:48] <bihtori> it's hard to write map/filter/reduce/zip kind of code in C but it's good for very low level stuff like manipulating bits and interacting with drivers and stuff
[15:47:59] <Akronymus> I order the blub ladder by expressiveness for the reader of the code.
[15:48:31] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:48:36] <Akronymus> A map function is much more expressive than a loop.
[15:48:44] <Akronymus> Same with folds
[15:48:48] <piou> and much less error friendly
[15:48:55] <piou> s/friendly/prone/
[15:49:12] <Akronymus> It is declarative.
[15:49:14] <piou> Map also allows optimizations that loops can't
[15:49:26] <Akronymus> I want to get the result of applying this function on all elements.
[15:49:48] <Akronymus> Map ensues that one element doesn't depend on the previous.
[15:49:53] <piou> (I don't think these optimizations are often used in practice, but they could)
[15:50:00] <pikapika> <piou> I'm sure you'll find one or two that link to a C library because that's hard to completely avoid when you're working in an environment that is C dominant
[15:50:01] <smorgasbord> higher order functions alone are enough of a reason to like a lot of these languages
[15:50:04] <pikapika> Also regarding this line
[15:50:08] <Akronymus> They are used by the compiler piou
[15:50:21] <pikapika> For example I would agree pdf.js is actually js
[15:50:34] <pikapika> Aside from the language runtime, the meat of the pdf reading and rendering code is actually js
[15:50:34] <piou> Akronymus: I think there's more that could be done, but still
[15:50:51] *** Joins: olle (~olle@p578524f9.dip0.t-ipconnect.de)
[15:50:52] <pikapika> But if your pandoc app is just a bunch of haskell wrappers on meat code that was C
[15:50:54] <Akronymus> Map can easily be vectorized/SIMD
[15:50:58] <pikapika> then its not an example of meaty haskell
[15:51:13] <olle> What is "separation" and "concern" in "separation of concerns"?
[15:51:18] <smorgasbord> it would take far less time to write a haskell program in many cases, as conmpared to C
[15:51:26] <smorgasbord> considering time to debug and test and all that
[15:51:43] <smorgasbord> and though the haskell program would be less performant, the tradeoff is worth it often
[15:51:49] <olle> Sorry, didn't mean to interupt any Haskell circlejerk...
[15:51:51] <Akronymus> https://github.com/haskell/parsec pikapika
[15:52:35] <pikapika> Its some kind of parser generator
[15:52:37] <pikapika> Cool
[15:52:44] <Akronymus> Pretty sure it would be neither as fast nor as readable in c.
[15:52:51] <Akronymus> And I mean that sincerly.
[15:52:54] <pikapika> Interesting stuff but not as complex or meaty as say writing a compileer or a browser or an os
[15:53:01] <pikapika> Parsers are some of the simplest parts of a compiler
[15:53:06] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[15:53:35] <izak> olle: it means modularization
[15:53:55] <Akronymus> https://github.com/ghc/ghc
[15:53:55] <olle> izak: only?
[15:54:00] <Akronymus> pikapika
[15:54:08] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:54:13] <piou> olle: "circlejerk"? Not 2min in and already degrading people? Way to make a first impression
[15:54:42] <Akronymus> I wouldn't really say circlejerk but rather a fundamental disagreement.
[15:54:48] <sunbae> It felt jerky to me too.
[15:54:51] *** Quits: sunbae (~euk@user/sunbae) (Quit: leaving)
[15:55:10] <izak> olle: yes 
[15:55:28] <Akronymus> No reason to leave though...
[15:55:46] <Akronymus> I would've loved to hear the why
[15:57:47] <pikapika> Implementing its own compiler is something I would agree is at least somthing a bit useful that they managed to do
[15:57:56] *** Parts: ash_worksi (~ash_m@user/ash-m/x-3292451) ()
[15:58:22] <Akronymus> It seems much more readable than any c compiler, to me.
[15:58:35] <Akronymus> (Any c compiler in mainstream use)
[15:58:43] *** Joins: Naepho (~Naepho@host-82-212-178-223.dynamic.voo.be)
[15:59:03] <merijn> Hot take: The irony is that C is actually *terrible* for low level stuff and manipulating bits, because half that stuff isn't well specified >.>
[15:59:03] <izak> depending on your design you can have a module that operates on primitive data types... and on top of that you can have a module that works on a domain of yor custom abstract data types. olle
[15:59:31] <merijn> If C actually specfied struct layout and the behaviour of bit fields, it's be much better already :p
[15:59:55] <Akronymus> merijn you mean stuff like having to check if it is small or big endian?
[15:59:58] <deniska> merijn: heck, it doesn't even specify what happens when you add two too large numbers :)
[16:00:07] <merijn> Akronymus: Oh, that is also annoying, but not really
[16:00:30] <merijn> Akronymus: I mean stuff that structs get padding inserted and its entirely implementation defined how much and where >.>
[16:00:33] <deniska> merijn: (unless numbers are unsigned, in which case it does specify what happens, which is slightly worse even)
[16:01:09] *** Joins: inky (~inky@195.250.71.138)
[16:03:29] *** Joins: NEYi (~NEYi@109.251.216.38)
[16:03:33] *** Quits: NEYi (~NEYi@109.251.216.38) (Remote host closed the connection)
[16:03:58] *** Joins: zwr (~zwr@2804:d45:b966:fb00:f028:19fc:92fe:e9f4)
[16:04:58] *** Joins: Twipply (~Twipply@user/twipply)
[16:07:58] *** Joins: fm (~fm@user/fm)
[16:08:28] <piou> It would be nice to have a standard way for inline assembly too as long as we're talking low-level
[16:08:41] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[16:09:00] *** Parts: olle (~olle@p578524f9.dip0.t-ipconnect.de) ()
[16:09:10] <DPA> No. Keep other languages in their own file. Just link stuff as needed.
[16:10:16] *** Joins: AskerX (~AskerX@103.125.235.22)
[16:10:30] <DPA> And regarding the padding, that can't be avoided, because some platforms require certain data to have certain alignments for some instructions. 
[16:10:46] <piou> That's reasonnable for some projects, but I often have very little snippets of asm to include and these are really easier to have and understand in the context of the file that uses them
[16:11:44] <piou> And the standard already recognizes that it's a common extension, it's present in practice in most compilers, there are little reasons not to make it official
[16:12:46] <DPA> asm may be needed for some init code, and for some low level hardware stuff (certain barriers, io stuff, and such). That can be abstracted away once, and everything else can be done in C.
[16:13:58] <DPA> Otherwise, it'll just be a pain to port later.
[16:14:01] <piou> It's a matter of convenience and time spent. I'd rather people don't assume what I need and give me the tools to do it, especially in an explicitely permissive language such as C.
[16:14:19] *** Quits: Akronymus (~Akronymus@85.31.8.181) (Ping timeout: 246 seconds)
[16:14:43] *** Parts: mot1 (~homer@2406:3400:216:80a0:dcc3:df94:7c5f:af8d) ()
[16:15:17] <beaky> hello my name is beaky
[16:15:27] <DPA> It's a matter of not letting a project become a platform specific mess.
[16:15:46] <piou> DPA: which is something that is definitely not important for many projects
[16:16:08] <DPA> It's important for me when I find them!
[16:16:22] <piou> DPA: again, I'm not saying everyone should start writting stuff in assembly, let alone in inlined assembly, but you're assuming a very specific kind of project
[16:17:03] <merijn> Some projects are *explicitly* paltform specific messes, though
[16:17:20] <merijn> To the point where pretending to be portable across platforms is meaningless nonsense
[16:17:24] *** Joins: Akronymus (~Akronymus@85.31.8.181)
[16:18:36] <piou> See, for example, I'm a security researcher. I reverse engineer a lot of stuff. Sometimes to exploit a bug it's just easier to go in assembly and write the stuff directly. Sometimes I need to control what assembly is generated. Sometimes I'm reverse engineering something and I don't want to take time and effort to understand some encoding function when I can just copy-paste the assembly and have
[16:18:39] *** Joins: speckz (~speckz@2600:1700:ce0:bf00:9d51:d09c:88d5:980e)
[16:18:42] <piou> it working. There are other ways to achieve what I want, that's sure, but none of your arguments are even remotely relevant to my situation.
[16:18:53] *** Quits: speckz (~speckz@2600:1700:ce0:bf00:9d51:d09c:88d5:980e) (Client Quit)
[16:19:19] *** Quits: haliucinas (~haliucina@5.20.153.21) (Remote host closed the connection)
[16:19:42] *** Joins: speckz (~speckz@2600:1700:ce0:bf00:9d51:d09c:88d5:980e)
[16:19:56] <DPA> I wouldn't regard any of that as a reasonable c project useful for anyone.
[16:20:19] <piou> It is very useful to me and my clients, although it's short lived and not meant to be ported
[16:20:38] *** Quits: speckz (~speckz@2600:1700:ce0:bf00:9d51:d09c:88d5:980e) (Client Quit)
[16:20:57] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 248 seconds)
[16:21:35] <piou> Sorry to be blunt but how you regard my work doesn't matter, it's not what defines its value.
[16:22:56] <pikapika> A proof of a security hack is a very specific application
[16:23:11] <piou> It is indeed.
[16:23:26] <piou> But that's just my case, I'm sure there are many others.
[16:23:34] <pikapika> So how good or bad a language is at it does not say much about its general applicability
[16:23:55] <piou> And I'm not trying to argue anything of the sort.
[16:23:56] <pikapika> And its also again usually pure asm that is used to demonstrate certain security flaws
[16:24:24] <pikapika> I am not saying its not useful, it is quite useful to have demonstrations of the security flaws
[16:24:34] <pikapika> Its an important function
[16:24:52] <merijn> DPA: I write C code that runs on a specific custom board, and tht doesn't qualify as "reasonable C project useful for anyone"? I mean, there's a bunch of projects that depend entirely on that sorta thing...
[16:24:53] *** Joins: haliucinas (~haliucina@5.20.153.21)
[16:25:15] <merijn> Seems easy to handwave things away as useless just because you've not had a use for it in the past
[16:26:03] <pikapika> Programs for custom boards are unique
[16:26:27] <pikapika> You are writing for a unique environment
[16:26:30] <pikapika> Each would be different
[16:26:38] <piou> pikapika: my point isn't to get hung up on my specific use, but rather that C is already a "feel free to shoot yourself in the foot" language. I understand not having bound checking in C. I would rather have it, but I understand why it's not there. However having inline asm sounds perfectly in line with the other design choices of C.
[16:27:14] <merijn> piou: Sounds more like a thing for posix, tbh
[16:27:21] * edgar-rft wants platform-independent mess
[16:27:24] <pikapika> Inline asm is an escape hatch
[16:27:30] <merijn> piou: You can't really standardize inline asm without an ABI
[16:27:30] <pikapika> void* is another escape hatch
[16:27:30] <pikapika> etc
[16:27:33] <beaky> java write once debug everywhere
[16:27:51] <merijn> piou: And there's already precedence of posix standardising extra things about C :p
[16:27:56] <pikapika> beaky, yet we have to write completely different code for android
[16:27:58] *** Joins: mrig (~mrig@user/mrig)
[16:28:08] <pikapika> but nobody says anything about java being not platform independent on that account
[16:28:14] <piou> merijn: Hmm... I don't want to standardize how inline asm is written though, just a way to write arbitrary asm inline, I don't think you need a specific ABI for that
[16:28:17] <pikapika> But the same criticism is levelled against C
[16:28:28] *** Joins: zaher (~zaher@37.48.178.133)
[16:28:30] <merijn> piou: How do you get data in and out of the asm bits?
[16:28:30] <pikapika> piou, how do you know which registers are what
[16:28:39] <merijn> piou: You'd have to know which register hold what
[16:28:44] <DPA> "specific custom board". That's a different use case. It may be useful for some as a project. But as you stress it's for a custom board, that doesn't mean it can't be portable, it justn means you didn't make it so, and I won't have an easy time porting it if I need it someday.
[16:28:47] <piou> Nah, you're right, I hadn't think that one through
[16:28:53] *** Quits: Naepho (~Naepho@host-82-212-178-223.dynamic.voo.be) (Quit: Leaving)
[16:28:56] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[16:29:17] <piou> Ok, it may be better at the posix level as far as implementation goes, but the asm keyword should be part of the C standard at least
[16:29:27] <edgar-rft> let's write programs that run nowhere to be truely platform-independent
[16:29:27] <merijn> piou: You don't have to standardise the asm itself, but you gotta have some standardisation of calling convention around the inline bits
[16:29:34] <beaky> i liek asm it helps write space efficient programs
[16:30:08] <beaky> whereas it is hard to get assurance with space consumption with haskell for example
[16:30:14] <merijn> piou: posix also already requires that function pointers can fit into void* and several tiny things like that. Having an addendum on platform ABI/calling convention conformance seems reasonable enough
[16:30:41] <pikapika> beaky, you don't even know when something will execute
[16:30:43] <pikapika> in haskell
[16:30:44] <piou> merijn: yes, it does indeed.
[16:30:47] <pikapika> ("lazy eval")
[16:30:54] <beaky> nice i like lazy evaluation
[16:31:29] <merijn> Pedantic correction: Haskell is non-strict, not lazy :p
[16:32:22] <edgar-rft> let's delay all evaluation until after doomsday
[16:33:19] <beaky> exactly why even evaluate and compute things when we can jsut be satisfied that it typechecks and is therefore verified correct
[16:33:46] <beaky> type level computation notwithstnaitng
[16:36:46] <edgar-rft> what will happen with evaluation time when the computer enters a black hole?
[16:37:08] <merijn> edgar-rft: Fun fact: black holes are actually an implementation term in the GHC haskell compiler :p
[16:37:26] <pikapika> edgar-rft, hi uwu
[16:37:26] <merijn> edgar-rft: So, the answer is: runtime error :p
[16:38:23] *** Quits: APic (apic@apic.name) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[16:39:00] <merijn> edgar-rft: (Specifically, when evaluation of an unevaluated expression starts, the expression gets "black holed", meaning it's replaced with a trap, so that trying to evaluate and expression that's already being evaluated (due to recursion) will crash you out of the infinite loop)
[16:39:38] <edgar-rft> merijn: that might explain why Haskell appears like a black hole to me :-)
[16:39:41] <piou> http://thecodelesscode.com/case/21
[16:40:20] <merijn> I guess that, technically, nowadays we have grey and white holes too :p
[16:41:17] <edgar-rft> piou: is that a http implementation of infinite loading time?
[16:41:50] <merijn> edgar-rft: Normally it's a "Tao of Programming" inspired page that seems to be having...technical difficulties atm :p
[16:42:03] *** Joins: dev4449 (~dev4449@172.98.71.133)
[16:42:19] <piou> wow, it loaded fine for me when I posted it
[16:42:33] <edgar-rft> merijn: I've heard there are brown holes, too, but they might smell stinky
[16:43:30] *** Joins: APic (apic@apic.name)
[16:44:56] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 272 seconds)
[16:45:36] *** Quits: tomgus1 (~tomgus1@2a02:c7f:d2b0:e600:ba27:ebff:fe5c:2dcd) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[16:46:24] *** Joins: TwiZted (~TwiZted@user/twizted)
[16:46:32] *** Joins: tomgus1 (~tomgus1@2a02:c7f:d2b0:e600:ba27:ebff:fe5c:2dcd)
[16:47:23] <edgar-rft> piou: second try, after several minutes it worked (maybe some server maintainance) - and I already suspect since quite a while that truth is no longer true :-)
[16:47:36] <Akronymus> Welp, I just completetely screwed up my local git branch.
[16:47:58] <edgar-rft> that's why it's named "git"
[16:48:06] <Akronymus> git gud
[16:53:29] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 248 seconds)
[16:53:43] <merijn> I already beat Dark Souls, so presumably I got gud already, but still hate git :p
[16:54:05] *** Quits: mikeliuk (~mikeliuk@109.249.187.96) (Quit: Connection closed)
[16:54:21] *** Joins: mikeliuk84 (~mikeliuk@109.249.187.96)
[16:54:51] <piou> Maybe git-soul should be a thing... Battle for your conflict-less commits!
[16:55:27] <merijn> piou: How do I dodge roll with git? :(
[16:55:34] <merijn> I seem to be stuck on fat rolls...
[16:55:46] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[16:55:52] *** Joins: xcombelle (~Xavier_Co@abayonne-651-1-41-161.w92-156.abo.wanadoo.fr)
[16:56:08] *** Joins: gareppa (~gareppa@user/gareppa)
[16:56:21] <piou> you can only roll back with git checkout
[16:56:43] *** Joins: xcombel11 (~Xavier_Co@abayonne-651-1-41-161.w92-156.abo.wanadoo.fr)
[16:56:46] <merijn> I recently restarted DS1 (years since I played DS and 1-2 years since I last played DS2) to see 1) how a strength build plays and 2) if it was indeed just my mindset that was wrong when I struggled the first time
[16:57:06] <merijn> It's surprising how much easier things are once you've gotten the proper perspective shift :p
[16:57:15] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[16:57:37] *** Joins: SmokenatorZ1 (~Smokenato@177.172.20.14)
[16:57:54] <merijn> Took me over 15 hours to get to Andre the first time. I made it there in, like, 30 minutes this time and even that was mostly because I got flattened by some mini-bosses I attempted on the way :p
[16:58:01] <merijn> Havel's a PITA
[16:58:09] <AskerX> hi there everyone, how can a hierarchical networked database be implmented? is such a thing at all possible? I tried looking it up using goodgurl (google) nothing comes up, I endup with links like https://www.c-sharpcorner.com/UploadFile/65fc13/types-of-database-management-systems/
[16:58:10] <AskerX> https://www.geeksforgeeks.org/difference-between-hierarchical-and-network-data-model/  imagine a hierarchical delivery system, like corporate X has a central office and then there are like 5 6 subordinate offices then each of those have subordinate offices, these are all networked, but the database should be a privileged one, like the offices
[16:58:10] <bayaz> Type: text/plain; charset=utf-8 Size: 452 B 
[16:58:10] <AskerX> should only be allowed to see their own and ones below them  I have been thinking about this for 2 weeks now and I don't know if this is even possible
[16:58:11] <bayaz> Title: Types of Database Management Systems 
[17:00:15] *** Quits: SmokenatorZ (~Smokenato@189-46-177-3.dsl.telesp.net.br) (Ping timeout: 276 seconds)
[17:00:15] *** SmokenatorZ1 is now known as SmokenatorZ
[17:00:25] *** Quits: xcombelle (~Xavier_Co@abayonne-651-1-41-161.w92-156.abo.wanadoo.fr) (Ping timeout: 248 seconds)
[17:00:33] <AskerX> would a central db with flags to designate who can read what records do the job?
[17:00:34] <merijn> piou: I don't just want roll back, I want 360 rolling ;)
[17:01:08] *** Quits: mnd999_ (~mark@2001:8b0:da3:76a2:4630:5b97:83a2:3e21) (Remote host closed the connection)
[17:01:22] *** Quits: dev4449 (~dev4449@172.98.71.133) (Quit: dev4449)
[17:01:30] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[17:02:00] *** Joins: dev4449 (~dev4449@86.57.82.176)
[17:02:06] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[17:02:09] <pikapika> gitesh, hi
[17:02:10] *** xcombel11 is now known as xcombelle
[17:02:42] <gitesh> pikapika: hello friend
[17:02:56] <AskerX> hey there pikapika 
[17:03:04] <gitesh> pikapika: Pikachu pikapika Pikachu
[17:03:07] <pikapika> AskerX, hello
[17:03:10] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi)
[17:03:47] <gitesh> So I think computer is used to store data and programming is what do process that data
[17:04:03] *** Joins: mnd999_ (~mark@2001:8b0:da3:76a2:4630:5b97:83a2:3e21)
[17:04:07] <DnzAtWrk> not quite
[17:04:09] <DnzAtWrk> a computer "computes"
[17:04:13] <gitesh> What I meant is values are data
[17:04:22] *** Joins: Tazmainian (~Tazmainia@41.193.169.28)
[17:04:30] <AskerX> DnzAtWrk does a computer really compute?
[17:04:39] *** Joins: archie (~archie@host-79-32-233-207.retail.telecomitalia.it)
[17:04:46] <DnzAtWrk> if not it's not a computer
[17:04:46] <AskerX> or it just emulates it really goodly
[17:04:50] <archie> hello
[17:05:37] <AskerX> DnzAtWrk all it does is just turn on and off switches according to some rules which for us feels like computation has occurred 
[17:05:44] <AskerX> hi archie
[17:06:55] <archie> if I do have a c++ class with a private variable of type char*, do I need a destructor which deallocates it?
[17:07:07] *** Joins: tw3ml0w (~tw3ml0w@185.226.144.109)
[17:07:11] <Arahael> archie: Are you aware of the rule of zero, three, and five?
[17:07:12] <merijn> That depends on how it's initialised...
[17:07:17] <archie> to avoid a memory leak
[17:07:22] <merijn> And on how you define "need" :p
[17:07:35] *** Quits: SmokenatorZ (~Smokenato@177.172.20.14) (Read error: Connection reset by peer)
[17:07:42] <Arahael> archie: Also, who owns that char*?
[17:08:09] <archie> merijn const char* SAMPLE = "this is an example";
[17:08:17] <merijn> You can't free string literals
[17:08:26] * Arahael was about to point that out. :)
[17:08:26] <merijn> It's UB
[17:08:32] <archie> wut?
[17:08:41] <merijn> String literals are statically allocated
[17:08:53] <Arahael> archie: Use free() *only* on things that you malloc or calloc.
[17:08:56] <merijn> free only applies to malloced data
[17:09:00] <archie> so, no memory leak here, right?
[17:09:04] *** Quits: ixil (~ixil@82.197.178.137) (Remote host closed the connection)
[17:09:06] * AskerX is now utterly confused about if a computer really computes?
[17:09:15] <Arahael> AskerX: Computations.
[17:09:17] <merijn> Define "computing"
[17:09:21] <Arahael> AskerX: Computers compute computations.
[17:09:22] <archie> I did always use delete, not free()
[17:09:37] *** Joins: SmokenatorZ (~Smokenato@189-69-11-121.dsl.telesp.net.br)
[17:09:41] <Arahael> archie: delete only what you new, and delete[] only what you new[].
[17:10:06] <DnzAtWrk> at least in managed languages you can afford to screw up
[17:10:12] <DnzAtWrk> and it only makes the performance worse
[17:10:22] *** Joins: ixil (~ixil@82.197.178.137)
[17:10:26] <Arahael> DnzAtWrk: Are you sure it makes the performance worse?
[17:10:29] <DnzAtWrk> yes
[17:10:36] * edgar-rft deletes everything he knew
[17:10:37] * AskerX silicon bastards :D
[17:11:03] <merijn> edgar-rft: I'd start with everything you know about C++ ;)
[17:11:20] <merijn> Arahael: Memory leaks in managed languages do, generally, make performance worse :p
[17:11:38] <Arahael> merijn: Oh, yeah. Missed that :)
[17:11:40] <DnzAtWrk> it wouldn't be a memory leak in that scenario
[17:11:46] <edgar-rft> merijn: there's nothing to delete
[17:11:48] <merijn> DnzAtWrk: It would, though
[17:11:51] <archie> anything that is not initialized with new is deleted automatically when the pointer gets deleted?
[17:11:52] <DnzAtWrk> it would not
[17:11:55] <DnzAtWrk> without a reference left
[17:12:02] <archie> for instance, by exiting from the function
[17:12:26] <merijn> DnzAtWrk: The term memory leak is *also* commonly used for (unintentionally) keeping large data alive in GCed languages
[17:12:39] <DnzAtWrk> that's not really a leak
[17:12:41] <pikapika> GC is hard to understand
[17:12:41] <DnzAtWrk> just inconvenient
[17:12:49] <Arahael> DnzAtWrk: It has the same end result.
[17:12:50] <merijn> DnzAtWrk: How is it not a leak?
[17:12:54] <DnzAtWrk> BUT you can have real memory leaks
[17:12:59] <DnzAtWrk> by circular references I believe
[17:13:06] <Arahael> DnzAtWrk: Not with a sensible GC.
[17:13:07] <archie> please flame later
[17:13:11] <archie> please help
[17:13:15] <merijn> DnzAtWrk: If you are slowly and continuously keeping more unused data alive, you still run out of memory
[17:13:15] <archie> XD
[17:13:29] <pikapika> Modern sweep gcs can understnd circular refs I think
[17:13:31] <DnzAtWrk> that is going to be difficult without a growing array of some kind merijn 
[17:13:55] <merijn> DnzAtWrk: It happens
[17:14:19] <edgar-rft> Let's call the garbage collector to fill up our trash tables :-)
[17:14:21] <DnzAtWrk> it happens when the GC is stupid
[17:14:21] <merijn> pikapika: There are other collectors besides mark&sweep that are immune to circular reference issues, tbh
[17:14:24] <DnzAtWrk> like in python
[17:14:30] <DnzAtWrk> I have manually used gc in loops in python
[17:14:36] <DnzAtWrk> to avoid running out of memory
[17:14:37] <Arahael> DnzAtWrk: Python has an *freaking awful* GC.
[17:14:50] <Arahael> DnzAtWrk: Possibly the worst, even.
[17:14:56] <DnzAtWrk> wouldn't surprise me
[17:15:04] <archie> anything that is not initialized with new is deleted automatically when the pointer gets deleted?
[17:15:05] <archie> for instance, by exiting from the function
[17:15:11] <pikapika> Ref counting is nice and simple. In scenarios where circular reference is impossible to happen due to the nature of the problem its fun to implement ref counting.
[17:15:18] <pikapika> I did it once with like 3-4 lines of C
[17:15:50] <Arahael> archie: That's a bit of a discussion as there's plenty of excemptions.
[17:15:59] <merijn> archie: Short answer: "no"
[17:16:12] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[17:16:43] <Arahael> pikapika: Except that Ref counting as done in C is inconsistent (but somewhat improved, I think, in python3), fails to keep track of all the roots, and relies on a heuristic cycle detector which sometimes barfs.
[17:17:03] <Arahael> pikapika: In the Python C ABI, rather.
[17:17:07] <edgar-rft> Python as the worst programming language producest the worst garbage so it needs the worst garbage collector and everything's fine.
[17:17:31] *** Joins: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net)
[17:17:50] <pikapika> Arahael, for my use it was perfect
[17:17:54] *** Joins: jamea (~jamea@187.185.190.209)
[17:17:57] <pikapika> It wasn't a languaeg implementation
[17:18:13] <pikapika> as I said, circular refs were impossible due to then ature of the problem
[17:19:44] <edgar-rft> Let's throw away our computers to significantly reduce the number of our problems.
[17:19:44] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[17:19:53] <Arahael> pikapika: Reference counting has it's use cases.
[17:20:13] *** Joins: SmokenatorZ9 (~Smokenato@189-69-11-13.dsl.telesp.net.br)
[17:20:21] <DnzAtWrk> how do ref counter deal with circular references?
[17:20:25] <DnzAtWrk> ref counters*
[17:20:28] <bjs> DnzAtWrk: they don't/can't
[17:20:36] <DnzAtWrk> that doesn't sound right
[17:20:41] <bjs> DnzAtWrk: why doesn't it sound right?
[17:20:52] <DnzAtWrk> because I'm sure there must be a simple fix
[17:20:56] <bjs> DnzAtWrk: there is not
[17:20:59] <merijn> DnzAtWrk: Why?
[17:21:38] *** Quits: digilink (~digilink@user/digilink) (Quit: WeeChat 3.2)
[17:21:53] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 268 seconds)
[17:22:16] <pikapika> circular refs are quite complex
[17:22:26] <DnzAtWrk> ref counter + some kind of more deep cleaner
[17:22:29] <pikapika> I think its like O(n^2) to find a circle
[17:22:39] <DnzAtWrk> + some kind of age map
[17:22:47] <DnzAtWrk> for last lookup
[17:22:47] <merijn> DnzAtWrk: At some point it starts working, but stops being reference counting :p
[17:22:47] <bjs> DnzAtWrk: I mean "ref count + a real gc" isn't a "simple fix" 
[17:22:55] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:22:56] *** Quits: SmokenatorZ (~Smokenato@189-69-11-121.dsl.telesp.net.br) (Ping timeout: 272 seconds)
[17:22:56] *** SmokenatorZ9 is now known as SmokenatorZ
[17:22:58] <bjs> that's just, adding something other than refcounting to fix the problem
[17:23:02] <bjs> (and is indeed what Python does)
[17:23:19] *** Joins: Yonle (~Yonle@user/yonle)
[17:24:58] <DnzAtWrk> ref counter + checking for circular ref on deletion
[17:25:08] *** Joins: digilink (~digilink@user/digilink)
[17:25:12] <bjs> DnzAtWrk: "checking for circular ref on deletion" is just a description of the problem not a fix
[17:25:15] <bjs> and the solution is a gc
[17:25:20] <DnzAtWrk> it's an optimization
[17:25:33] <bjs> no it's not an "optimization", a ref counter just -cant- do ti
[17:25:34] <DnzAtWrk> only ever bothering to see if there are circular references from anything inside the deleted object
[17:25:56] <bjs> you need something like a gc to detect those circular references
[17:25:59] <DnzAtWrk> actually
[17:26:02] <DnzAtWrk> it would be on ref decrement
[17:26:06] <DnzAtWrk> not on ref == 0
[17:26:14] <bjs> DnzAtWrk: with circular references the ref never reaches 0
[17:26:20] <DnzAtWrk> exactly
[17:26:46] *** Quits: Hax0r (~Hax0r@93.168.163.193) (Quit: Leaving)
[17:26:58] <Akronymus> You could technically detect circular references without a gc.
[17:27:00] <DnzAtWrk> incidentally, counters are a great way when checking overlapping things in spatial grids
[17:27:05] <Akronymus> By basically implementing your own
[17:27:20] <bjs> Akronymus: I mean the software that detects those things and then deletes the object is *called* a gc :P
[17:27:39] <Akronymus> Because, is there any noticeable difference between tracking the refs yourself or letting something else do?
[17:27:48] <DnzAtWrk> I'd imagine that in practice, it's more like keeping track of a tree of references
[17:27:50] *** Joins: Hax0r (~Hax0r@2001:16a2:c011:5267:540d:f930:6f33:4)
[17:27:51] <DnzAtWrk> with some fancy pruning
[17:27:54] *** Joins: pulse (~pulse@user/pulse)
[17:27:59] <bjs> it doesn't need to be a super fancy very complicated thing that does everything,  it can be relatively simple
[17:28:02] <merijn> DnzAtWrk: That's called "a mark & sweep GC"
[17:28:04] <Akronymus> More like a graph.
[17:28:05] <bjs> but the point is that refcounting *alone* isn't enough
[17:28:14] <bjs> DnzAtWrk: a circle isn't a tree.
[17:28:18] <Akronymus> You need reftracking too.
[17:28:45] <Akronymus> And reftraversing.
[17:28:45] <DnzAtWrk> why though. Isn't it enough to keep a tree of references with child references etc.
[17:28:50] <DnzAtWrk> how can something existing without a parent
[17:28:56] <DnzAtWrk> exist*
[17:29:00] <Akronymus> Because references are a directed graph
[17:29:03] *** Quits: archie (~archie@host-79-32-233-207.retail.telecomitalia.it) (Quit: Client closed)
[17:29:08] <DnzAtWrk> hmm
[17:29:10] <DnzAtWrk> sure
[17:29:11] <bjs> DnzAtWrk: the whole problem here is you have a circular path, where every object has a parent
[17:29:19] <Akronymus> The parent object couldve been freed without freeing the child.
[17:29:30] <Akronymus> Or the child points to something which points to the child.
[17:29:33] <bjs> (where the "parent" is the object that's keeping it alive)
[17:29:54] <DnzAtWrk> umm... pointers to other parts of the tree, re-arrange tree to keep a strict parent -> * child relationship?
[17:30:01] <DnzAtWrk> eh
[17:30:05] <DnzAtWrk> that gets a bit messty
[17:30:07] <DnzAtWrk> messy*
[17:30:08] <Akronymus> Not possible.
[17:30:23] <Akronymus> Literally: References are a directed graph.
[17:30:25] <Akronymus> Not a tree.
[17:30:30] <Akronymus> Not acyclic either.
[17:30:51] <DnzAtWrk> okay, directed graph with like 1 root node then
[17:30:54] <DnzAtWrk> I'd imagine
[17:30:56] <Akronymus> And directed because the parent knows of the child but the child not of the parent.
[17:31:18] *** Joins: NEYi (~NEYi@109.251.216.38)
[17:31:18] <Akronymus> You wouldn't necessarily even have a root node.
[17:31:35] <DnzAtWrk> how do you check if something should be collected thetn
[17:31:37] <DnzAtWrk> then*
[17:31:41] <Akronymus> If some child points to the root node then it ceases to be the root.
[17:31:42] <DnzAtWrk> must be some kind of link to something at some point
[17:31:45] <bjs> DnzAtWrk: you look for cycles with no "incoming" edges in the object graph
[17:31:50] <Akronymus> You track the references.
[17:31:52] <bjs> and then you can delete *all* of the objects in the cycle at once
[17:32:23] <smallville7123> does margins and padding make layout's easier to design?
[17:32:29] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[17:32:32] <pikapika> smallville7123, within reason
[17:32:37] <pikapika> Not huge swaths of whitespace
[17:32:43] <DnzAtWrk> incoming edges from where?
[17:32:46] <smallville7123> haha
[17:32:54] <Akronymus> Rest of the graph DnzAtWrk
[17:32:55] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[17:32:58] <DnzAtWrk> but what is the rest
[17:33:00] <bjs> DnzAtWrk: well, nowhere.  That's the problem with circular references
[17:33:02] <DnzAtWrk> what counts as the main graph
[17:33:05] <bjs> DnzAtWrk: the rest of the program, all the other objects
[17:33:23] <Akronymus> The main graph is the one where code actually runs.
[17:33:41] <DnzAtWrk> isn't that an entirely different concept, program pointers
[17:33:43] <Akronymus> Circular references are stuff that exist but aren't accessible nor do they run code.
[17:33:46] <DnzAtWrk> does the GC need to know anything about that
[17:33:52] <bjs> DnzAtWrk: if you think all the objects and their references make a kind of "graph" in memory, where each object can "point" to another object
[17:34:09] <Akronymus> And anything that is in the stack can be assumed to be alive.
[17:34:39] <Akronymus> Basically: The stack points to a few things which point to other things and so on. 
[17:34:48] <Akronymus> That is the object graph that is "alive".
[17:34:54] <bjs> DnzAtWrk: no but the way a programming language like e.g. Python works is that the pointers exist *inside* the objects.
[17:34:57] <Akronymus> Everything not connected to it is dead.
[17:35:14] <bjs> DnzAtWrk: if you have a list [a,b,c,d] there is a list object somewhere in memory with 4 pointers to the 4 objects inside it. 
[17:35:35] <Akronymus> And the stack points to that list.
[17:35:43] <smallville7123> eg a view at [ x 0, y 0, w 20, h 20 ] offset by margin of 5, eg [ x 5, y 5, w 15, h 15 ] with another view inside offset by padding of 10, eg [ x 15, y 15, w 5, h 5 ]
[17:36:14] <bjs> DnzAtWrk: When you free the list, those 4 objects have their refcounts decremented. But if a has a reference to b (e.g. an attribute), and b has a reference to c and c has a reference to a... then you have a circular reference problem. There are no other "incoming" edges (no other object in the program refers to a, b or c)
[17:36:24] <bjs> but they have non-0 refcounts
[17:36:41] <bjs> So are unreachable from the program ("dead")
[17:38:38] <bjs> but cannot be freed using only the refcounting.  
[17:40:10] <smallville7123> eg struct Position { enum { MATCH_PARENT = -1 }; int x = 0; int y = 0; int width = MATCH_PARENT; int height = MATCH_PARENT; }; Position position; Position padding; Position margin;
[17:42:13] <pikapika> I like using "stickyness" and proportions for layouts
[17:42:27] <pikapika> stickiness as in this rect is stuck to the top right and top left corners etc
[17:44:38] *** Quits: qbt (~edun@user/edun) (Ping timeout: 252 seconds)
[17:45:20] *** Joins: exvicesindaco_ (~exvicio@host-82-56-83-61.retail.telecomitalia.it)
[17:46:03] *** Quits: dev4449 (~dev4449@86.57.82.176) (Read error: Connection reset by peer)
[17:46:15] *** Joins: dev4449 (~dev4449@188.126.94.56)
[17:47:58] *** Joins: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler)
[17:48:02] *** Quits: liberius (~liberius@user/liberius) (Quit: leaving)
[17:49:00] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Ping timeout: 276 seconds)
[17:49:07] *** exvicesindaco_ is now known as exvicesindaco
[17:49:34] *** Quits: nekodesu (~nano@user/nekobit) (Remote host closed the connection)
[17:50:20] *** Joins: nekodesu (~nano@user/nekobit)
[17:50:27] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[17:50:33] <beaky> why do we need the heap when we have the stack isnt the stack enough for all allocation
[17:50:43] *** Joins: mei (~mei@user/mei)
[17:51:08] *** Joins: bluebird (~bluebird@user/bluebird)
[17:52:15] <merijn> The thing to realise is that, at the OS/machine levell, there are no stack and heap
[17:52:35] <merijn> Stack and heap are just programmer induced fever dreams
[17:53:46] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 244 seconds)
[17:53:50] *** Parts: nulleip (~luiz@189.34.167.234) ()
[17:54:07] *** Quits: exvicesindaco (~exvicio@host-82-56-83-61.retail.telecomitalia.it) (Quit: Going offline, see ya! (www.adiirc.com))
[17:54:55] <pikapika> Its just offsets to memory
[17:55:06] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 240 seconds)
[17:55:09] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[17:55:12] *** Quits: paruh (~paruh@92.60.39.18) (Ping timeout: 268 seconds)
[17:55:19] <pikapika> And even continuous addresses is actually an illusion caused by mmu
[17:55:27] <pikapika> those aer not the real physical addresses
[17:56:22] *** Joins: paruh (~paruh@92.60.39.18)
[17:56:31] *** Joins: nulleip (~luiz@189.34.167.234)
[17:57:12] *** Quits: xff0x (~xff0x@2001:1a81:5378:e300:6a47:5d73:b3fa:4d3c) (Ping timeout: 245 seconds)
[17:58:24] *** Joins: xff0x (~xff0x@2001:1a81:5378:e300:775f:2c72:eed7:a05a)
[17:58:59] *** Quits: Hax0r (~Hax0r@2001:16a2:c011:5267:540d:f930:6f33:4) (Remote host closed the connection)
[17:59:57] <Akronymus> There exists only 1 real value and that is the stack pointer.
[17:59:58] *** theglass is now known as glass
[18:00:02] *** glass is now known as theglass
[18:00:28] *** Joins: zaher_ (~zaher@37.48.178.133)
[18:01:01] *** Joins: akevinhuang (~thekevinh@user/thekevinhuang)
[18:01:20] <Akronymus> (real as in true as in everything depends on it)
[18:01:45] *** Quits: zaher (~zaher@37.48.178.133) (Ping timeout: 248 seconds)
[18:01:51] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[18:03:06] <merijn> Akronymus: Depends on the language
[18:03:57] <Akronymus> I meant for low level stuff.
[18:04:02] <Akronymus> Like really low level.
[18:04:05] <merijn> Even then
[18:04:31] <Akronymus> Like bare metal
[18:04:58] <Akronymus> Oh wait, there is a second value that matters: Instruction pointer.
[18:06:46] <pulse> i prefer bear metal
[18:07:54] <smallville7123> how do i apply a margin, if every view should define its own self region?
[18:08:07] *** Joins: zaher (~zaher@37.48.149.228)
[18:09:45] *** Quits: zaher_ (~zaher@37.48.178.133) (Ping timeout: 248 seconds)
[18:10:15] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[18:10:58] <smallville7123> for example, if view A defines its own region of 0,0, 100, 100, and places view A->B at loc 0,0,100,100, how should i interpret the margin values of A->B, for example, the view A->B requests a margin of 200
[18:11:22] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Client Quit)
[18:11:41] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[18:12:11] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[18:13:07] <smallville7123> or rather, A->B requests to be drawn with an offset of 200, 200, 200, 200
[18:13:34] <smallville7123> or rather, A->B requests to be drawn with an offset of 200, 200, and a width of 200, and a height of 200         *
[18:14:11] <deniska> Akronymus: instruction pointer is typically a thing, stack pointer is often more of an agreement
[18:15:03] <deniska> risc-v doesn't have a dedicated stack pointer register (even though the suggested ABI does)
[18:15:26] <bjs> well if you keep going down into the metal even the instruction pointer ("program counter") becomes more of a loose agreement among the different loosely connected bits of sand
[18:16:15] <deniska> they couldn't even fit proper conductors inside, had to settle with semiconductors
[18:16:34] <smallville7123> or rather
[18:16:37] <smallville7123> what happens if a view has a margin that is greater than its parent's width/height ?
[18:16:57] <sandman13> I don't concern myself with petty things like stack and heap. Free flowing electrons is where the fun is.
[18:17:44] <Akronymus> Free flowing electrons is a very priviledged view.
[18:17:45] <deniska> smallville7123: I'd suggest looking at what html/css is doing, but even there you have two modes of operations
[18:17:52] <Akronymus> I only deal in the quantum electron soup
[18:22:53] *** Joins: magla (~gelignite@55d4b6ce.access.ecotel.net)
[18:23:28] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:24:23] *** Joins: paul424 (~tom@apn-95-41-123-216.dynamic.gprs.plus.pl)
[18:24:28] *** Quits: dev4449 (~dev4449@188.126.94.56) (Ping timeout: 256 seconds)
[18:25:11] <smallville7123> if [ int x = (in.x/in.width)*newWidth; int y = (in.y/in.height)*newHeight; ] is used to transform x/y, can i use the same to transform width/height replacing in.x, in.y with in.width, in.height ?
[18:25:40] *** Joins: dev4449 (~dev4449@86.57.82.176)
[18:26:03] *** Joins: zaher_ (~zaher@37.48.159.50)
[18:26:49] *** Quits: zaher (~zaher@37.48.149.228) (Ping timeout: 248 seconds)
[18:28:35] <mrig> Does anyone know if the different colour of links in this doc have a specific meaning? https://www.w3.org/TR/SVG11/intro.html#Definitions
[18:28:37] <bayaz> Title: Introduction – SVG 1.1 (Second Edition) 
[18:29:26] <mrig> Some are red and others blue, I was wondering why that is?
[18:30:51] *** Joins: zaher__ (~zaher@37.48.184.149)
[18:31:54] *** Quits: zaher_ (~zaher@37.48.159.50) (Ping timeout: 272 seconds)
[18:32:36] *** Joins: Andalu30 (~andalu30@84.232.74.231)
[18:33:32] <GeDaMo> mrig: if you look at the source, the red ones have class="elementname"
[18:33:55] <GeDaMo> Sorry, class = "element-name" :P
[18:34:12] *** Joins: qbt (~edun@user/edun)
[18:35:39] <mrig> Oh thank you, so they are! I had the source open too, had not managed to find that :|
[18:35:44] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[18:36:11] <GeDaMo> I normally right click and use inspect element rather than view page source
[18:36:18] <mrig> forest for the trees :)
[18:36:52] <mrig> I must make myself use the browser tools, of course, a little nice to read like that.
[18:36:55] *** Joins: Crescendo (~Crescendo@user/crescendo)
[18:37:23] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:37:43] *** Joins: Pickchea (~private@user/pickchea)
[18:38:11] <pikapika> mrig, forest for the pees
[18:39:08] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[18:39:12] *** Quits: DushyantBaweja_c (uid510682@id-510682.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[18:39:41] <mrig> yum, pees fresh from the pods :)
[18:40:05] <mrig> would be munching not looking at the surroundings!
[18:41:05] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[18:41:13] *** Quits: zaher__ (~zaher@37.48.184.149) (Ping timeout: 248 seconds)
[18:41:20] *** Joins: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[18:41:21] <mrig> Seems that you can animate svg without JS :)
[18:41:26] <mrig> that's a bounus!
[18:41:35] <mrig> A bonus too!
[18:41:40] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[18:41:55] *** Joins: zaher (~zaher@37.48.159.90)
[18:42:08] *** Joins: exvicesindaco_ (~exvicio@host-82-56-83-61.retail.telecomitalia.it)
[18:42:53] <mrig> I was worried for a moment that the red links meant 'not yet implemented' :)
[18:43:27] <mrig> Having previously looked at an SVG 2 document.
[18:45:45] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Ping timeout: 268 seconds)
[18:45:55] *** exvicesindaco_ is now known as exvicesindaco
[18:46:00] *** Quits: jazzy (~jaziz@2600:380:8562:6b2:8c7e:762:5a80:c3e1) (Ping timeout: 256 seconds)
[18:49:50] <GeDaMo> Right click and inspect element is also useful for deleting annoyances on web pages :P
[18:52:15] <sandman13> Combine that with uBlock Origin and you have all annoyances gone :D
[18:54:11] <paul424> How about the "Head first" programming book series ,,, are they any worth buying it ? 
[18:54:30] *** Quits: inky (~inky@195.250.71.138) (Ping timeout: 258 seconds)
[18:54:31] <sandman13> Java one is good paul424 
[18:54:31] <paul424> Are they begginers or advanced books ? 
[18:54:43] <sandman13> Beginners to Intermediate
[18:55:03] *** Joins: inky (~inky@5.77.173.147)
[18:55:30] <sandman13> They introduce concepts nicely. Combine it with Java's documentation, you will learn many things
[18:55:47] <paul424> hmmm how about javascript ?
[18:56:01] <sandman13> Haven't read it.
[18:56:09] *** Quits: inky_ (~inky@195.250.71.138) (Ping timeout: 248 seconds)
[18:56:13] <paul424> anyway what type of language javascript it is ? It's for web browsers mainly, right ? 
[18:56:21] *** Quits: qbt (~edun@user/edun) (Quit: Leaving)
[18:56:25] *** southey is now known as foxtrot
[18:56:41] <sandman13> It was/is used primarily for web browsers
[18:57:02] <cis> it started as the language for scripting web pages
[18:57:08] <cis> now it's used in all sorts of places
[18:57:36] <sandman13> even in places where you would know that performance will suffer e.g. Terminal emulators
[18:58:22] <paul424> aha good to know
[18:58:29] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:59:47] <xcombelle> the big move was AJAX before that you would have hard time to communicate between html and server (and AJAX was created as an activeX totally unportable
[19:00:58] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[19:03:34] *** Joins: jamea97 (~jamea@187.185.190.209)
[19:04:12] *** Quits: jamea (~jamea@187.185.190.209) (Ping timeout: 272 seconds)
[19:04:19] *** Quits: mven (~mven@072-179-001-159.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[19:04:56] <mrig> GeDaMo: oh now there is an idea, quite an incentive to remember that the web tools are there.
[19:05:17] <mrig> lol That is superb!
[19:10:13] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:10:28] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[19:13:30] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 268 seconds)
[19:16:22] *** Quits: inky (~inky@5.77.173.147) (Ping timeout: 245 seconds)
[19:17:20] <user51> tenenbaum's hardware book starts with some nice history
[19:17:24] <user51> i like it for now
[19:18:33] * vdamewood eats a textbook.
[19:18:49] *** Quits: Yonle (~Yonle@user/yonle) (Quit: leaving)
[19:18:53] <pikapika> user51, Id like to read it
[19:19:07] *** Joins: Yonle (~Yonle@user/yonle)
[19:19:30] *** Joins: inky (~inky@5.77.173.147)
[19:22:14] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Quit: leaving)
[19:22:36] *** Quits: Yonle (~Yonle@user/yonle) (Client Quit)
[19:22:53] *** Joins: Yonle (~Yonle@user/yonle)
[19:23:04] *** Quits: dev4449 (~dev4449@86.57.82.176) (Read error: Connection reset by peer)
[19:24:37] *** Quits: Yonle (~Yonle@user/yonle) (Client Quit)
[19:25:02] *** Joins: Yonle (~Yonle@user/yonle)
[19:28:13] *** Quits: Yonle (~Yonle@user/yonle) (Client Quit)
[19:29:23] *** Quits: Akronymus (~Akronymus@85.31.8.181) (Quit: Client closed)
[19:29:42] *** Joins: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net)
[19:30:42] *** Quits: tw3ml0w (~tw3ml0w@185.226.144.109) (Quit: Leaving)
[19:30:48] *** Quits: paul424 (~tom@apn-95-41-123-216.dynamic.gprs.plus.pl) (Quit: Leaving)
[19:32:57] *** Quits: Andalu30 (~andalu30@84.232.74.231) (Remote host closed the connection)
[19:33:03] *** Quits: inky (~inky@5.77.173.147) (Read error: Connection reset by peer)
[19:33:37] *** Joins: Yonle (~Yonle@user/yonle)
[19:33:40] *** Quits: nekodesu (~nano@user/nekobit) (Quit: free(neko);)
[19:34:08] *** Joins: nekodesu (~nano@user/nekobit)
[19:35:18] *** Quits: Yonle (~Yonle@user/yonle) (Client Quit)
[19:35:39] *** Joins: inky (~inky@37.186.117.147)
[19:36:16] *** Joins: Andalu30 (~andalu30@84.232.74.231)
[19:36:19] *** Joins: Yonle (~Yonle@user/yonle)
[19:36:48] *** Quits: Yonle (~Yonle@user/yonle) (Remote host closed the connection)
[19:37:18] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[19:38:09] *** Joins: Yonle (~Yonle@user/yonle)
[19:38:12] *** Quits: Yonle (~Yonle@user/yonle) (Client Quit)
[19:38:49] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 248 seconds)
[19:40:29] *** carbolymer_ is now known as carbolymer
[19:41:50] *** Joins: dev4449 (~dev4449@86.57.82.176)
[19:42:31] *** Joins: ZenixOwler (~whatever@118.69.128.37)
[19:43:06] *** Joins: freakazoid333 (~matt@2603-9000-cf0f-80e3-14c2-094e-704a-6e4b.inf6.spectrum.com)
[19:43:32] *** Joins: Yonle (~Yonle@user/yonle)
[19:43:37] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[19:44:52] <CuriousErnestBro> helo
[19:44:58] <ZenixOwler> is there any algorithm i can use to check whether a word make sense ? assuming it's english i have seen lots of spell checker do that tho but not sure how did they do it, the only way i could think of is that they have a huge database of valid english words and just check in it
[19:45:29] <CuriousErnestBro> how do I set environment variables with vs code?
[19:46:00] <yitz> ZenixOwler: Yes, there's usually a dictionary file
[19:46:10] <ZenixOwler> oh god, it must be huge
[19:46:12] *** Quits: Yonle (~Yonle@user/yonle) (Client Quit)
[19:46:19] <GeDaMo> https://norvig.com/spell-correct.html
[19:46:20] <bayaz> Title: How to Write a Spelling Corrector 
[19:46:24] <yitz> CuriousErnestBro: for your editor? For a sys exec call?
[19:46:33] *** Joins: ^-^hi (~hi^-^@user/-hi/x-1729478)
[19:46:45] <CuriousErnestBro> yitz I think I found what I need: https://code.visualstudio.com/docs/editor/variables-reference
[19:46:46] <bayaz> Title: Visual Studio Code Variables Reference 
[19:46:57] <cis> ZenixOwler: there's only a couple hundred thousand words in the english language
[19:47:06] <^-^hi> what is wrong with ads that are just a jpeg with a link on the website's own server and don't track you? newspaper ads worked for centuries
[19:47:14] <CuriousErnestBro> yitz I have environment variables on server in systemd config, but locally I want the variable to be "dev" instead of "prod"
[19:48:00] <cis> ZenixOwler: and most people only use a small subset of some tens of thousands of them
[19:48:07] <^-^hi> they can be also aligned with user's interest by being in the same topic as the article, if they are interested in that article, they are probably interested in the ad as well
[19:48:12] <yitz> Depending on the language, they usually have some way to access env vars. Use that same method to update if they are mutable , CuriousErnestBro 
[19:49:30] *** Quits: ixil (~ixil@82.197.178.137) (Remote host closed the connection)
[19:49:31] <cis> ^-^hi: are you trying to convince yourself?
[19:49:49] *** Joins: ixil (~ixil@82.197.178.137)
[19:50:15] <user51> vdamewood: make sure to marinate it.. lots of textbooks have the flavor of plain chicken breast
[19:50:31] <^-^hi> cis: no I am confused why everyone pushes those creepy JS stuff so hard
[19:50:31] <ZenixOwler> cis: awh ok
[19:50:42] <ZenixOwler> cis: not quite sure if this is something too AI or not 
[19:50:54] <cis> ^-^hi: advertisers love tracking
[19:51:05] <ZenixOwler> GeDaMo: oh right, that could be useful
[19:51:05] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 248 seconds)
[19:51:10] *** Joins: Zeturic (~Orimendix@50-25-46-156.krmtcmta02.res.dyn.suddenlink.net)
[19:51:11] <^-^hi> cis: of course
[19:51:38] <cis> ZenixOwler: at its simplest it's just a database lookup
[19:52:01] *** Joins: nomind1969 (~nomind196@83-82-126-48.cable.dynamic.v4.ziggo.nl)
[19:52:05] <ZenixOwler> the artificial Gedmo sent me does said it could be very complex tho, maybe more than just a database lookup
[19:52:14] <^-^hi> but wouldn't just the ad being on the same topic as the page serve the purpose?
[19:52:32] *** Joins: Yonle (~Yonle@user/yonle)
[19:52:37] <^-^hi> newspapers never tracked you and they worked
[19:52:59] *** Quits: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC) (Quit: WeeChat 3.2)
[19:53:04] <cis> ZenixOwler: that's for correction - if you're just talking about determining whether or not a word is valid english, that's a lookup
[19:53:15] *** Joins: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC)
[19:53:42] <ZenixOwler> cis: this make me wonder, is there any program which check not just for english, but for every language in the world
[19:53:56] <ZenixOwler> that would make the database quite damn huge tho
[19:53:58] <cis> ZenixOwler: google translate?
[19:54:07] <^-^hi> ZenixOwler, wiktionary?
[19:54:10] <ZenixOwler> oh, didn't think of that 
[19:54:24] <ZenixOwler> yea, of course, google is full with free space
[19:54:25] <merijn> google translate is god awful
[19:54:59] <merijn> It fails miserably on fairly easy languages, I can't imagine how hard it fails on obscure and tricky ones...
[19:55:11] *** Quits: AskerX (~AskerX@103.125.235.22) (Quit: Client closed)
[19:55:37] <ZenixOwler> cis: yea, also google translate is not a really perfect detector tho 
[19:55:41] <^-^hi> merijin: it seems to translate from language A to english then english to language B in most cases
[19:55:42] <ZenixOwler> some of my native words go wrong with it 
[19:55:58] <^-^hi> it has come a great way though
[19:56:09] <merijn> ^-^hi: It seems to only get worse at Dutch, tbh
[19:56:09] *** Quits: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it) (Quit: Leaving.)
[19:56:10] <sandman13> merijn: deepl.com
[19:56:13] <ZenixOwler> when i provide nonsense, it provides me something meaningful in the other half 
[19:56:24] <^-^hi> but since since it is google i will join you in bashing it
[19:56:36] <merijn> ^-^hi: Like, 8 years ago it was okayish, but now its borderline unusable
[19:56:40] <^-^hi> ZenixOwler, yes exactly wanted to mention that
[19:56:49] <merijn> Sometimes translates stuff to mean the literal oppsoite of the actual meaning
[19:57:06] <ZenixOwler> well, i can't really blame it since it have to take care of literally all languages
[19:57:21] <ZenixOwler> and the other half which is the result can't be the same language as the provided 
[19:57:26] <^-^hi> ZenixOwler, try to make poetry with it
[19:57:34] <^-^hi> it is the funnest thing ever
[19:57:36] <ZenixOwler> believe me, i have tried even worse
[19:57:47] <^-^hi> it is the best game google made
[19:58:02] <ZenixOwler> some people are literally making japanese songs out of google translate out there
[19:58:10] <^-^hi> :(
[19:58:18] <^-^hi> I thought I was being original
[19:58:25] <cis> translate from one language to another, back and forth N times, and see how much sense it still makes
[19:58:40] <merijn> I mean, even just once from Dutch to English is enough :p
[19:58:55] <^-^hi> i once typed two words and translated it back and forth
[19:59:01] <^-^hi> it became a paragraph
[19:59:01] <cis> you might find entirely new meanings that weren't even present in the original text!
[19:59:05] <merijn> And it's not like Dutch is a wildly different language in terms of grammar and sentence structure >.>
[19:59:31] <ZenixOwler> probably it will reveal extincted language one day if we play with it hard enough
[19:59:59] <^-^hi> So it is not unique to my language
[20:00:10] <ZenixOwler> it is unique to all languages 
[20:00:22] <ZenixOwler> there is a reason why people meme it a lot 
[20:00:40] <^-^hi> I didn't share my google poems because I thought they would go viral and google would correct it
[20:00:52] <^-^hi> ZenixOwler, not the google speaker meme
[20:01:11] <^-^hi> I type BS in it and do trial and error
[20:01:25] <^-^hi> then come up with long sad poems
[20:01:36] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[20:01:49] *** Joins: mz` (~mz`@user/mz/x-8532539)
[20:01:55] <^-^hi> so fun
[20:02:08] <vdamewood> CuriousErnestBro: I don't think that link describes what you want.
[20:02:22] <ZenixOwler> https://scontent.fhan14-1.fna.fbcdn.net/v/t1.6435-9/71772048_512326862666153_1630843895979966464_n.png?_nc_cat=107&ccb=1-4&_nc_sid=cdbe9c&_nc_ohc=MgN5PvaCV30AX80XbrJ&tn=mH_eE5D_OkhLDXMn&_nc_ht=scontent.fhan14-1.fna&oh=e8a9f497f1f8175bd9ab0e20df7caadf&oe=61389A64
[20:02:23] <bayaz> Type: image/png Size: 72.2 kB 
[20:02:27] <ZenixOwler> ^-^hi: that was for you
[20:02:36] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[20:02:46] <CuriousErnestBro> vdamewood it doesn't? now hitting command+b it injects the environment variable 
[20:02:54] <CuriousErnestBro> b is for build
[20:03:06] *** Quits: Andalu30 (~andalu30@84.232.74.231) (Ping timeout: 272 seconds)
[20:03:11] <mrig> Does anyone know whether the element attributes are the same for the entire xml name space, or whether they are more finely scoped to the element itself; More specifically for SVG?
[20:03:16] <merijn> ^-^hi: The basis for Google Translate is "find lots of documents that exist in multiple languages and train machine learning based on mapping the documents in language A to documents in language B"
[20:03:39] <^-^hi> merijn, I hope wikipedia finds a way to sue them
[20:03:42] <merijn> ^-^hi: The problem, is of course, that such a statistical machine learning approach biases your model to the kinds of documents that exist in multiple languages
[20:03:50] <CuriousErnestBro> vdamewood here's how I use it: https://paste.ubuntu.com/p/WNG2RZwDTR/
[20:03:51] <bayaz> Title: Ubuntu Pastebin 
[20:03:53] <merijn> ^-^hi: Wikipedia isn't close to identical enough for that kinda thing
[20:04:19] <merijn> ^-^hi: Think more stuff like: EU treaties that are official translated into all 27(I think?) official languages and texts like that
[20:04:52] <merijn> ^-^hi: wikipedia articles generally aren't translations of each other. The Dutch wikipedia pages contain wildly different texts than English sometimes having more (or less) info/topics
[20:05:04] <sandman13> merijn: I recognized this flaw of Google translate when translating German to English
[20:05:11] <vdamewood> CuriousErnestBro: Are you sure you linked to the right file then? Because your previous link isn't even used in the most recent one.
[20:05:19] <merijn> The problem is that "texts with official 1-to-1 translations" generally don't accurately represent how real people write
[20:05:38] <merijn> sandman13: Yeah, given how bad Dutch-to-English is, I imagine German-to-English probably isn't much bette
[20:05:49] <vdamewood> CuriousErnestBro: Your previous link is a list of variables available in configuration files. Your most recent link doesn't use any of them.
[20:06:06] <merijn> And Dutch and German are fairly easy languages, coming from English. Imagine the garbage it must produce for Arabic or Japanese
[20:06:18] <sandman13> Deepl has a bit better translation for European language from my experience merijn 
[20:06:18] <^-^hi> mrig: element attributes are for the element itself afaik
[20:06:24] <CuriousErnestBro> vdamewood oh, yes, wrong link sorry: https://code.visualstudio.com/docs/editor/tasks
[20:06:25] <bayaz> Title: Tasks in Visual Studio Code 
[20:06:31] <sandman13> s/language/languages
[20:06:54] <vdamewood> merijn: I just passed some Arabic through Google translate a few days ago. It was nearly perfectly translated for some reason.
[20:07:38] <sandman13> It's not good with Hindi
[20:07:54] <vdamewood> merijn: Japanese however is still a total flustercuck because Japanese drops words that can't be mechanically filled in.
[20:07:55] <sandman13> I have found that sometimes it simply writes the word in Hindi sometimes.
[20:07:55] <merijn> vdamewood: Classic arabic or modern spoken arabic?
[20:08:07] <vdamewood> merijn: Well, modern written.
[20:08:29] <^-^hi> merijn, not really different
[20:08:37] <merijn> That's good, then. I was expecting it to better on classic arabic
[20:08:44] <mrig> ^-^hi: sure yes, but can attributes from differing elements have the same name but be different?
[20:08:49] <merijn> ^-^hi: What isn't?
[20:09:20] <^-^hi> merijin: Classic arabic with the internation modern spoken arabic
[20:09:27] <^-^hi> international
[20:10:47] <merijn> ^-^hi: I'm not an linguistic expert, but my hobby interest in languages seems to suggest Classical Arabic (or the similar Modern Standard Arabic) are mostly limited to literature and stuff like government texts, and the arabic in daily spoken uses in generally considerably different
[20:10:48] <^-^hi> mrig: since they are properties of the element, rather than something like tags that may have name collision, probably yes
[20:10:53] <vdamewood> I'm pretty sure this guy was jusing a subdialect of Levantine arabic.
[20:11:03] <vdamewood> s/jusing/using/
[20:11:37] <^-^hi> merijn, Modern Spoken Arabic is some fancy name for the Classic Arabic revival
[20:12:16] <vdamewood> ^-^hi: Modern 'spoken' Arabic or modern'Standard' Arabic?
[20:12:19] <merijn> ^-^hi: Wikipedia says it's different but very similar
[20:12:31] <merijn> ^-^hi: Also, I said Modern *Standard* Arabic
[20:13:02] <^-^hi> yeah spoken, got it confused with programming languages
[20:13:08] <merijn> ^-^hi: Which in my memory (and according to wikipedia I just checked) is generally *not* spoken as native language
[20:13:25] <vdamewood> merijn: You said spoken.
[20:13:33] <vdamewood> <merijn> vdamewood: Classic arabic or modern spoken arabic?
[20:13:41] <^-^hi> arabs when talking officially, or between people of different regions just speak quran
[20:13:47] <merijn> vdamewood: Yes, but that was a different statement
[20:13:59] <merijn> vdamewood: I meant "one of the common modern dialects" there
[20:14:00] <vdamewood> merĳn: Oh, okay.
[20:14:15] <^-^hi> with some very slight differences in pronunciation
[20:14:29] <vdamewood> mrijn: Anyway, probably Levantine.
[20:14:31] <mrig> It would be nice to have the formal specification without all the extra info, just the context free part.
[20:14:38] <vdamewood> dammit
[20:14:45] <vdamewood> mirijn: ^
[20:14:56] <vdamewood> dammit and a half
[20:15:02] <vdamewood> fsck it.
[20:15:17] <merijn> vdamewood: My initial curiosity whether your text was MSA or "native dialect", but the rest of the discussion was "is MSA significantly different from modern native dialects". And wikipedia seems to support my memory that it is :p
[20:15:34] <^-^hi> and it is basically like everything written is in that quran-style thing 
[20:15:44] <pikapika> Arabic is a very interesting language
[20:16:05] <pikapika> Its spoken in a lot of places
[20:16:07] <pikapika> Not just the middle east
[20:16:20] <vdamewood> merĳn: Oh yes, Standard arabic is most like the varieties spoken in the middle east. The further west you go the less like MSA it gets.
[20:16:20] <pikapika> There are some saharan countries that speak arabic
[20:16:28] <merijn> pikapika: If you like language/language history, Maltese is super fascinating
[20:16:38] <sandman13> Pretty sure that is because of Islam
[20:16:40] <pikapika> Isn't maltese like hebrew or something
[20:16:45] <merijn> pikapika: No
[20:17:03] <^-^hi> pikapika, arabic/phoenician/italian
[20:17:14] <pikapika> Oh
[20:17:18] <^-^hi> if you know english and arabic you can make sense of it
[20:17:20] <merijn> pikapika: I mean, Maltese is Semitic and Hebrew is Semitic, sure, but Arabic is Semitic too :p
[20:17:21] <vdamewood> merĳn: For varieties like Levantine, Iraqi, Gulf, and Saudi, it's 'a little off' some how.
[20:17:51] <merijn> pikapika: Due to Malta being alternatingly in Christian/Italian/Muslim/etc. hands they've got a super weird mix language with lots of Semitic/Arabic influences
[20:18:32] <sandman13> Semitic reminds me, how old is Yiddish?
[20:18:39] <^-^hi> So the written language is same everywhere and everyone understands it but the vulgar spoken thing is so different everywhere
[20:18:52] <bjs> merijn: akkadian 4 life
[20:19:00] <merijn> sandman13: How would you even put an age on that? :p
[20:19:05] <^-^hi> sandman13, that is not semitic btw
[20:19:25] <merijn> Yiddish is...odd
[20:19:25] *** Quits: Yonle (~Yonle@user/yonle) (Read error: Connection reset by peer)
[20:19:27] *** Joins: scabby (~scabby@user/scabootssca)
[20:19:28] <merijn> Like Bargoens
[20:19:30] <vdamewood> sandman13: The earliest record we have mentioning it is from the 12th century.
[20:19:52] <sandman13> merijn: I thought it was relatively new. German written in Hebrew is my first impression
[20:20:17] <sandman13> I don't know hence asking :P
[20:20:40] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[20:20:46] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Remote host closed the connection)
[20:21:17] <merijn> sandman13: I mean "German & Hebrew" is a pretty accurate approximation of Yiddish ;)
[20:21:29] <sandman13> I think we should create a new channel: #programming-and-languages
[20:21:51] <vdamewood> Naw, ##programming is fine. The languages part is implied.
[20:21:53] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[20:22:04] <^-^hi> C is indo-european
[20:22:13] *** Joins: vitorgonc (~vitorgonc@2804:d55:580c:5e00:3468:76e4:553c:a205)
[20:22:17] <vdamewood> C is for Coding, that's good enough fo rme.
[20:22:17] <sandman13> :D
[20:23:10] <gitesh> would you learn HTML5 and CSS3 in 2021?
[20:23:23] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[20:23:24] <^-^hi> gitesh, yes 
[20:23:26] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Remote host closed the connection)
[20:23:33] <vitorgonc> obviously
[20:23:34] <vdamewood> gitesh: Can you name a better alternative?
[20:23:35] <^-^hi> those are basically webpages
[20:23:52] <^-^hi> they suck but those are everywhere
[20:23:57] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[20:24:02] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[20:24:12] <gitesh> what do you think should back-end developers learn html5 and css3?
[20:24:17] <vitorgonc> html don't suck
[20:24:17] <^-^hi> vdamewood .txt
[20:24:36] <vitorgonc> there are just better alternatives
[20:24:36] <gitesh> because I'm going to learn Django
[20:24:40] <vdamewood> ^-^hi: Better? Nope. Alternative? Nope.
[20:24:42] <gitesh> flask and django
[20:24:42] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Client Quit)
[20:24:44] *** Quits: ZenixOwler (~whatever@118.69.128.37) (Quit: Leaving)
[20:24:47] <^-^hi> gitesh, that is almost wholly about it
[20:24:57] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[20:25:20] <sandman13> gitesh: Just pick one.
[20:25:32] <sandman13> Learning them at the same time is not beneficial IMO
[20:25:45] <vdamewood> sandman13: Learning what at the same time?
[20:25:46] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[20:25:49] <^-^hi> you mean learn css and no html?
[20:25:52] <gitesh> sandman13: I'm about to doing it
[20:25:54] <^-^hi> :|
[20:25:57] <^-^hi> :\
[20:26:00] <gitesh> sandman13: shall i skip html and css
[20:26:05] <bjs> gitesh: do you know HTML and CSS already, like other versions?
[20:26:12] <gitesh> bjs: no
[20:26:14] <bjs> gitesh: you cannot use django to make websites if you don't know html and css
[20:26:30] <^-^hi> gitesh:you want to make backends and skip html?
[20:26:31] <vdamewood> You can without CSS.
[20:26:31] <gitesh> i think it's best i should go for it
[20:26:36] <vdamewood> They'll just suck.
[20:26:49] <bjs> gitesh: if you want to be a web developer and make webpages you'll need to know html and css very well
[20:26:52] <vdamewood> But you absolutely need HTML to make web pages.
[20:26:52] <gitesh> i have got a series of nice courses https://www.coursera.org/specializations/web-design#courses
[20:27:07] <gitesh> sorry for the link if it wasn't allowed
[20:27:20] <^-^hi> gitesh: this is IRC
[20:27:26] <^-^hi> we send links all the time
[20:27:35] <^-^hi> we are such cool people
[20:28:00] <^-^hi> btw, html is not hard
[20:28:47] <gitesh> neither css i think
[20:28:48] <vdamewood> gitesh: Links are fine, excessive self promotion isn't. Linking to learning material you're using is fine.
[20:28:49] <^-^hi> I as a child just looked into it enough and the rules could be inferred from the thing itself. I wasn't smart either.
[20:29:33] <sandman13> vdamewood: Django and Flask
[20:30:05] <vdamewood> sandman13: Ah, okay. That combination makes sense. It was kind of ambiguous since there were four technologies being discussed.
[20:30:10] <bjs> gitesh: it doesn't matter,  if you want to learn to make webpages then you basically *have* to learn html and css because that's what webpages are made of
[20:30:16] *** Quits: vitorgonc (~vitorgonc@2804:d55:580c:5e00:3468:76e4:553c:a205) (Ping timeout: 256 seconds)
[20:31:14] <vdamewood> Just make sure to memorize the standard HTML5 boiler plate.
[20:31:29] <sandman13> <!doctype html><html></html>
[20:31:31] <sandman13> :D
[20:31:47] *** Quits: anton (anton@tloks.com) (Ping timeout: 245 seconds)
[20:32:15] <^-^hi> do you need the doctype?
[20:32:30] <sandman13> yes
[20:32:39] <bjs> probably in modern browsers you don't need any of it :P
[20:32:54] <vdamewood> Actually, I was thinking this, but sandman13 isn't off: https://gist.github.com/vdamewood/04ffddf08a3381bcaa0f0fafff7c6e6c
[20:33:19] <vdamewood> bjs: If you want HTML5 you need all of it.
[20:33:31] <vdamewood> (all of what sandman13 said, that is.)
[20:33:56] <bjs> vdamewood: I don't think gitesh really cares about HTML*5* since they don't HTML or CSS at all and want to learn to make webpages
[20:34:25] <vdamewood> without the <!DOCTYPE html> part, web browsers assume a non-compliant document and things don't behave the way you'd expect.
[20:34:27] <sandman13> I would have been a front end developer if I was successful with creating a dropdown in navbar using CSS
[20:34:36] <cis> HTML5 is just HTML these days
[20:34:59] <vdamewood> And HTML not-5 is irrelevent.
[20:35:09] <sandman13> Some HTML export tools don't default to HTML5
[20:35:20] <sandman13> e.g. org-mode HTML export
[20:35:35] <cis> like vdamewood said, irrelevant
[20:36:05] <sandman13> huh? I though org-mode + Emacs blog posting was relevant xD
[20:36:15] <cis> couldn't resist a dig at emacs
[20:36:27] <cis> that's an extremely specific use case
[20:36:45] <sandman13> I can. Referencing cause I had few problems with it. :D
[20:36:47] <vdamewood> emacs is a neat OS, the only thing it's missing is a good editor.
[20:36:52] <CuriousErnestBro> is it possible to connect to postgres remotely
[20:37:02] <sandman13> vdamewood: Emacs + Evil completes it :P
[20:37:05] <CuriousErnestBro> and should I configure IP tables to only allow access to that port from my home IP?
[20:37:29] *** Quits: jamea97 (~jamea@187.185.190.209) (Ping timeout: 248 seconds)
[20:38:01] <vdamewood> CuriousErnestBro: Well, all of the client/server databases can be access remotely. And you should probably give the firewalling a little more thought.
[20:38:27] *** Joins: sidy (~sidy@user/sidy)
[20:39:13] <gitesh> is it better to go in to be a web dev anytime?
[20:39:13] *** Quits: ^-^hi (~hi^-^@user/-hi/x-1729478) (Ping timeout: 268 seconds)
[20:39:15] <sandman13> Not a good idea to host DB on a public network CuriousErnestBro 
[20:39:33] <vdamewood> CuriousErnestBro: As for the firewalling, where is your server. How are you accessing it? Where are you accessing it from?
[20:39:41] <bjs> gitesh: better than what
[20:39:48] <gitesh> bjs: data science
[20:40:06] <bjs> gitesh: they're totally different things that different people with different skills would do
[20:40:07] <gitesh> bjs: because i don't know much maths
[20:40:09] <bjs> gitesh: which do you want to do?
[20:40:42] <gitesh> bjs: i don't want to get into maths
[20:41:06] <bjs> gitesh: then why do you care about data science?
[20:41:45] <CuriousErnestBro> vdamewood my server is a VPS instance in the cloud, I want access from my home to it to test my code, I access my server with an ssh key
[20:42:07] <CuriousErnestBro> is there such a thing as postgres-over-ssh?
[20:42:07] <gitesh> bjs: i really want to be able to make web design(not html css part)
[20:42:19] <gitesh> how are website designs are made?
[20:42:38] <pikapika> In a database
[20:42:39] <mawk> if it's not html/css what is it gitesh ?
[20:42:45] <vdamewood> CuriousErnestBro: If that's a production server, you have a bug security problem, if it's a testing server, it's a big performance problem.
[20:42:55] <vdamewood> s/bug/big/
[20:43:13] <gitesh> mawk: it's html/css but you mean design is designed in mind and coded in html/css?
[20:43:32] <mawk> yes that's one way gitesh 
[20:43:34] *** Joins: vysn (~vysn@user/vysn)
[20:43:44] <mawk> or draw it on whatever mockup program
[20:43:49] <mawk> then cssify it
[20:43:51] <CuriousErnestBro> vdamewood well, I do want to test my program, and then run a migrate, and the devops people told me to not run 2 databases remote and locally 
[20:44:03] <CuriousErnestBro> so... how is it done?
[20:44:11] <sandman13> CuriousErnestBro: You can spin up a separate domain: dev.curiousernestb.ro and create local connection
[20:44:23] <vdamewood> CuriousErnestBro: With separate databases, one remote and one locally.
[20:44:37] <CuriousErnestBro> I've been told to not do that
[20:44:43] <sandman13> wat
[20:44:44] <vdamewood> Why not?
[20:45:09] <vdamewood> You really don't want to do development work on your production system. One mistake and you've just wiped your entire database.
[20:45:14] <mawk> maybe you misunderstood
[20:45:23] <sandman13> If there's devops people, then ask them to fix that firewall for you.
[20:45:34] <gitesh> mawk: adobe xd?
[20:45:35] <CuriousErnestBro> I wanted to sync the schema using CI, and it was a bad idea
[20:45:58] <vdamewood> Yeah, I'm with mawk. I think there's a misunderstanding.
[20:45:59] <mawk> yes maybe gitesh but this is just an aid, the main way to do it is write html/css and that's it
[20:46:07] <CuriousErnestBro> they said to separate code and database, and to have one database, not. two
[20:46:14] <CuriousErnestBro> s/code/deployment
[20:46:29] <mawk> they could also be wrong
[20:46:59] <gitesh> so guys what's happens is when we write html/css actually we are creating a document i.e. a web document, so what is a document? where is it taught?
[20:47:17] <bjs> gitesh: on a computer somewhere
[20:47:23] <bjs> gitesh: you connect to the computer and ask for a copy
[20:47:24] <mawk> I'd call it a web page, not document
[20:47:31] <vdamewood> It's still a document.
[20:47:34] <deniska> not sure who'd suggest you not to have two databases
[20:47:46] <deniska> in some cases you're required, like, by law
[20:47:47] <CuriousErnestBro> vdamewood I will be running 2 databases on postgres on the production server. one has fake data and is meant for development, the other has real data and is meant for production. I will be running migrations if I want to update the schema 
[20:48:13] <deniska> CuriousErnestBro: development database would probably live on your development machine though
[20:48:14] <sandman13> Still a huge risk
[20:48:19] <vdamewood> CuriousErnestBro: Oh, no. You don't run two databases on the same server, you have separate servers too.
[20:48:24] <CuriousErnestBro> deniska I meant 2 postgresses
[20:48:38] *** Joins: Payam__ (~Payam@c-39bfe255.01-402-73746f25.bbcust.telenor.se)
[20:48:48] <CuriousErnestBro> that seems like an arbitrary separation 
[20:49:01] <CuriousErnestBro> and how do I do migrations between the two then?
[20:49:02] <sandman13> Nobody on their sane mind does that
[20:49:03] <vdamewood> CuriousErnestBro: What does?
[20:49:09] <deniska> CuriousErnestBro: in bigger setups a database server is a separate computer which doesn't run anything besides the database
[20:49:10] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[20:49:23] <CuriousErnestBro> vdamewood 2 db's on 1 server vs 2 db's on 2 servers 
[20:49:38] <vdamewood> CuriousErnestBro: Yeah, no. It's a big deal.
[20:49:43] <CuriousErnestBro> deniska mine runs the db server + webapp 
[20:49:50] <sandman13> Is it on private network? or is the database on public network?
[20:49:51] <deniska> CuriousErnestBro: that's common for smaller stuff
[20:50:03] <CuriousErnestBro> sandman13 public
[20:50:08] <sandman13> god damn it
[20:50:14] <CuriousErnestBro> it's not live yet
[20:50:20] <vdamewood> CuriousErnestBro: You don't want to do development on your production system. It will cause performance problemsand you still run the risk that you could screw up your production database somehow.
[20:50:26] <CuriousErnestBro> calm down lol
[20:50:41] <CuriousErnestBro> sure
[20:50:45] <CuriousErnestBro> how do I do the migration then?
[20:50:55] <CuriousErnestBro> can you migrate cross-system?
[20:51:00] <sandman13> Migration is simple CuriousErnestBro 
[20:51:03] <CuriousErnestBro> "copy schema from server A to server B"
[20:51:11] <CuriousErnestBro> sandman13 idk never done it
[20:51:14] <vdamewood> No, you don't copy from one server to the other.
[20:51:28] <sandman13> Download the development database on your system and run it there. If anyone says otherwise slap them with a trout
[20:51:29] <vdamewood> You run what ever migration script you have on the production server when it's time to update.
[20:51:32] <deniska> CuriousErnestBro: migrations are some code which alter the database schema between known states
[20:51:48] <deniska> CuriousErnestBro: so when you are need/want to migrate a production system you, well, run this code
[20:51:53] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[20:51:59] <CuriousErnestBro> I dont' wanna write that code
[20:52:17] <vdamewood> Why not?
[20:52:18] <deniska> CuriousErnestBro: a lot of frameworks and libraries will write this code for you automatically
[20:52:35] <CuriousErnestBro> yes
[20:52:42] <CuriousErnestBro> but how do I do that when I have 2 servers
[20:52:54] <sandman13> This whole scenario oddly sounds like an interview question or task.
[20:52:57] <CuriousErnestBro> copy paste all the migration codes from local server to prod and execute them there?
[20:53:08] <deniska> CuriousErnestBro: migration code is the part of your project code
[20:53:24] <CuriousErnestBro> sandman13 someone meme'd me into learning CI and now we're deep in this rabbit hole, this is what it is
[20:54:02] <cis> CI/CD is good
[20:54:09] <deniska> CuriousErnestBro: so you get this code onto your server using whatever method you use to get new application code onto your server
[20:54:29] <CuriousErnestBro> I use github actions with rsync
[20:54:29] <deniska> and then execute this code using whatever way you use to execute various maintnenance tasks
[20:54:40] *** Quits: dev4449 (~dev4449@86.57.82.176) (Read error: Connection reset by peer)
[20:54:42] <CuriousErnestBro> deniska I don't have a way of executing maintenance tasks
[20:54:47] <CuriousErnestBro> first time I hear the term 
[20:54:48] *** Joins: Camilo (~hugh@host-92-20-143-244.as13285.net)
[20:54:54] *** Joins: dev4449 (~dev4449@188.126.94.45)
[20:55:06] <vdamewood> CuriousErnestBro: Just because you don't know what the way is, doesn't mean it's nott here.
[20:55:18] <vdamewood> not there
[20:55:24] <CuriousErnestBro> i didn't claim that
[20:55:40] <vdamewood> You heavily implied it.
[20:55:44] <CuriousErnestBro> no i didn't 
[20:55:57] <sandman13> are you alone on this project?
[20:56:00] *** Joins: audiocat (~audio@2603-8081-1800-00ad-312c-8a7d-098f-4cc5.res6.spectrum.com)
[20:56:01] *** Joins: pulse (~pulse@user/pulse)
[20:56:02] <CuriousErnestBro> i implied the question: what way of executing maintenance tasks is there to deniska 
[20:56:06] <CuriousErnestBro> sandman13 yes
[20:56:21] <deniska> CuriousErnestBro: well, I ssh to servers and run them in a terminal :P
[20:56:21] <vdamewood> CuriousErnestBro: That would have been something better asked explicitly then.
[20:56:31] <Camilo> Does anyone have any recommended courses to learn C++ for someone who already has a basic understading of C? I tried a Udemy C++ course but it was aimed at people with no programming experience (and extremely dull)
[20:56:48] <CuriousErnestBro> deniska ok, I can do that with CI
[20:56:49] <CuriousErnestBro> sure
[20:56:58] <sandman13> Either you have got the problem statement wrong or the architecture is wrong or the people who designed this have no idea of security.
[20:57:09] <CuriousErnestBro> sandman13 I'm the one desnigning this
[20:57:10] <CuriousErnestBro> loll
[20:57:15] <vdamewood> CuriousErnestBro: Anyway, what are you using to code the project?
[20:57:15] <deniska> CuriousErnestBro: I'm not sure that migrations should be a part of CI/CD, as in executed automatically on deployment
[20:57:31] <CuriousErnestBro> vdamewood rust with the rocket.rs package
[20:57:53] <CuriousErnestBro> and sqlx, which does migrations I think, but idk what migrations are exactly 
[20:58:12] <deniska> CuriousErnestBro: as soon as you actually have an actual project running, you won't execute migrations often, so you don't need a way of automatically executing them
[20:58:23] <GeDaMo> Camilo: "C++ for C Programmers" https://web.corral.tacc.utexas.edu/CompEdu/pdf/isp/CppForCProgrammers.pdf
[20:58:24] <bayaz> Type: application/pdf Size: 894.3 kB 
[20:58:48] <CuriousErnestBro> deniska if migrations are part of the code base, they absolutely should be executed on deployment otherwise the database schema and code assumptions are not in line
[20:59:21] *** Quits: dev4449 (~dev4449@188.126.94.45) (Ping timeout: 268 seconds)
[20:59:32] *** Joins: dev4449 (~dev4449@154.21.22.135)
[20:59:48] <deniska> CuriousErnestBro: they will have to be executed on deployment, but not as a part of the pipeline
[21:00:06] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 276 seconds)
[21:00:25] <CuriousErnestBro> do you mean manually?
[21:00:47] <deniska> Yes. No need to automate something which may take hours of runtime and days of planning
[21:01:02] <CuriousErnestBro> ok
[21:01:43] <vdamewood> CuriousErnestBro: You ever see a website say "This site is down for maintanance."?
[21:01:46] <CuriousErnestBro> vdamewood one tiny problem, CI runs my tests and needs a database
[21:02:03] *** Joins: nvmd (~nvmd@user/nvmd)
[21:02:04] <deniska> CuriousErnestBro: I suggested creating a database in yocker
[21:02:18] <vdamewood> yocker?
[21:02:21] <deniska> docker
[21:02:25] <CuriousErnestBro> what's yocker
[21:02:32] <vdamewood> I like yocker better.
[21:02:56] <CuriousErnestBro> ok, create a database in yocker and add fake data, execute my tests
[21:03:20] <vdamewood> CuriousErnestBro: s/yocker/docker/
[21:04:01] <CuriousErnestBro> I suppose CI can't do something like create a docker thing from my local postgres state
[21:04:07] <CuriousErnestBro> or can it?
[21:04:54] <deniska> CuriousErnestBro: nothing technically prohibits you to just restore a database in docker from the dump of your local one
[21:05:08] <cis> the only limit is your imagination
[21:05:12] *** Joins: Izem (~Izem@8.21.10.18)
[21:05:30] <CuriousErnestBro> deniska restore from CI? is that even possible
[21:05:32] <deniska> CuriousErnestBro: but the state specific to your local copy may creep into tests and you probably want to avoid it
[21:05:40] <vdamewood> I'm pretty limited, then
[21:06:02] <CuriousErnestBro> my imagination is pretty wild
[21:06:02] <deniska> CuriousErnestBro: I'm assuming we
[21:06:08] <deniska> CuriousErnestBro: I'm assuming we're talking about 3 databases here
[21:06:11] <CuriousErnestBro> I came up with the 2 db thign
[21:06:28] <CuriousErnestBro> deniska yes, local, docker (copy of local), production
[21:06:47] <CuriousErnestBro> docker is in the could btw 
[21:07:00] <deniska> CuriousErnestBro: yes, you may introduce unwanted state in your copy
[21:07:26] <deniska> maybe a database keeps some settings specific to the environment or something like that
[21:07:54] <deniska> or maybe it has a queue of unprocessed items which will barf when ran in the different place
[21:08:05] *** Joins: Doffi (~doffi@91.132.197.188)
[21:08:08] <CuriousErnestBro> maybe I should have a pre-commit on my laptop that generates a .csv and it's reconstructed in the cloud
[21:08:13] <deniska> if you have a routine for generating fake data, easier to just use that in the tests
[21:08:41] <deniska> CuriousErnestBro: databases come with rich instruments of backup and restore you may use
[21:09:30] *** Joins: xsperry (~as@user/xsperry)
[21:09:36] <CuriousErnestBro> awsome!
[21:09:36] <CuriousErnestBro> https://github.com/tj-actions/pg-restore
[21:09:40] <CuriousErnestBro> deniska something like this? ^
[21:10:24] <deniska> CuriousErnestBro: I'd be wary doing this
[21:11:10] <CuriousErnestBro> and then generate the backup file with https://pre-commit.com/ just before pushing 
[21:11:11] <bayaz> Title: pre-commit 
[21:11:21] <CuriousErnestBro> deniska why?
[21:12:34] <deniska> As I said, your local database may have state which may influence code/tests to run in a specific way
[21:12:38] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[21:13:42] <deniska> on the other hand restoring some sort of canonical fake data dump might be faster than generating fake data
[21:14:23] <deniska> Anyway, on my job I'm dealing with a couple of applications which probably won't even start when presented with an empty database
[21:14:34] <deniska> so to work on them we're carrying 50gb dumps around
[21:14:41] <deniska> and it's painful :)
[21:14:59] <CuriousErnestBro> I mean, test-data would be small
[21:15:21] <deniska> so seeing an extreme of programs dependent on the specific database state, I'm wary of introducing something like that in greenfieldy projects :)
[21:15:22] <CuriousErnestBro> but the thing why I want a backup-approach is because my test db will be constantly changing
[21:16:33] <CuriousErnestBro> deniska only the tests are dependent on specific database state
[21:16:38] *** Joins: trace987 (~trace@95.90.106.112)
[21:16:40] <deniska> during initial development sure, once you're online, updating db schema becomes a bigger deal
[21:17:28] *** Joins: Iryon (~Iryon@2a02:a31a:a045:3500:5d6:f433:a2f8:8596)
[21:17:44] <CuriousErnestBro> I'm not following
[21:17:46] <deniska> still not a big deal when your database size is in megabytes and it can be trivially backed up and restored in hundreds of milliseconds
[21:18:31] *** Joins: Andalu30 (~andalu30@84.232.74.231)
[21:18:39] <CuriousErnestBro> yes
[21:19:40] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:19:43] *** Joins: SGautam (uid286066@id-286066.charlton.irccloud.com)
[21:19:47] <deniska> dunno, between fake data generator and shipping .sql file with fake data in it, I'd pick the former
[21:20:28] <CuriousErnestBro> deniska that means writing more code and keeping that code maintained (in sync) with my local db 
[21:20:34] <CuriousErnestBro> both have drawbacks
[21:20:44] <CuriousErnestBro> more code is less good
[21:21:15] *** Joins: LiftLeft (~LiftLeft@154.21.28.119)
[21:22:05] <CuriousErnestBro> also found this, not sure what it does http://eradman.com/ephemeralpg/
[21:22:05] <bayaz> Title: pg_tmp(1) 
[21:22:43] *** Joins: ^-^hi (~hi^-^@user/-hi/x-1729478)
[21:23:07] <CuriousErnestBro> deniska I think this is what I'm looking for https://github.com/allaboutapps/integresql
[21:24:12] *** Joins: Pickchea (~private@user/pickchea)
[21:24:48] <CuriousErnestBro> no not really....
[21:24:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[21:26:41] *** Quits: mattypants (~quassel@66-90-146-141.dyn.grandenetworks.net) (Ping timeout: 258 seconds)
[21:26:58] <CuriousErnestBro> wtf! https://dev.to/techschoolguru/how-to-setup-github-actions-for-go-postgres-to-run-automated-tests-81o
[21:26:58] <bayaz> Title: How to setup Github Actions for Go + Postgres to run automated tests 
[21:27:30] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 256 seconds)
[21:29:20] *** Joins: mattypants (~quassel@66-90-146-141.dyn.grandenetworks.net)
[21:30:39] <CuriousErnestBro> nah, I'm going with .sql 
[21:30:44] *** Joins: jamea (~jamea@189.231.71.80)
[21:30:49] <CuriousErnestBro> test db is gonna stay small forever 
[21:33:19] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[21:33:19] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[21:35:20] *** Joins: gitgoood (~gitgood@80-44-15-108.dynamic.dsl.as9105.com)
[21:35:20] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[21:35:20] *** Quits: nekodesu (~nano@user/nekobit) (Ping timeout: 268 seconds)
[21:35:42] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[21:38:34] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 258 seconds)
[21:39:02] *** Quits: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler) (Ping timeout: 244 seconds)
[21:40:34] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Ping timeout: 250 seconds)
[21:41:15] *** Joins: tradar (~tradar@user/tradar)
[21:41:30] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[21:42:33] *** Joins: Samian (~Sami@2620:10d:c091:480::1:ab1a)
[21:43:45] *** Joins: JimmyRustles (~Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net)
[21:44:10] <JimmyRustles> is "x = y" faster than "x = y + 5 * 0" or are they the same because of compilier optimisations?
[21:44:21] <JimmyRustles> in C, i mean
[21:44:24] <pikapika> Optimization
[21:44:30] <JimmyRustles> thanks
[21:44:33] <pikapika> On most modern compilers
[21:44:47] <pikapika> The compilers for obscure embedded platforms or whatever cannot be gauranteed
[21:45:21] <JimmyRustles> pikapika, did you used to hang out on the msn irc network? just wondering if you're someone i used to know
[21:45:30] <pikapika> No
[21:45:32] <JimmyRustles> oh ok
[21:46:26] *** Joins: Uhino (~Uhino@ti0095q160-1844.bb.online.no)
[21:49:18] *** Quits: Thedarkb2 (~Thedarkb@85.255.234.248) (Ping timeout: 258 seconds)
[21:49:43] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[21:50:50] *** Quits: Izem (~Izem@8.21.10.18) (Ping timeout: 272 seconds)
[21:52:54] *** Joins: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler)
[21:53:15] *** Quits: mikeliuk84 (~mikeliuk@109.249.187.96) (Quit: Connection closed)
[21:53:46] *** Joins: snake (~snake@user/snake)
[21:53:54] *** Quits: Andalu30 (~andalu30@84.232.74.231) (Ping timeout: 258 seconds)
[21:55:03] *** Joins: Izem (~Izem@8.21.10.18)
[21:55:45] <jeaye> JimmyRustles: This is how you check that: https://godbolt.org/z/9hYzvn1jK
[21:55:47] <bayaz> Title: Compiler Explorer - C++ (x86-64 gcc 11.2) 
[21:56:06] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 268 seconds)
[21:56:24] <jeaye> i.e. both functions have identical asm.
[21:56:55] <JimmyRustles> wow nice
[21:57:04] <JimmyRustles> that'd probably be really useful if i was any good with assembly
[21:57:24] <jeaye> Good enough to see that they're the same, I bet.
[21:57:38] *** Quits: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler) (Ping timeout: 244 seconds)
[21:57:39] *** Joins: zaher_ (~zaher@37.48.176.99)
[21:57:49] <jeaye> Even if you specify -O0, they're the same, since the compiler knows that 5*0 is 0.
[21:58:46] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 268 seconds)
[21:58:52] <jeaye> If you specify -Ofast, the functions become a single instruction: https://godbolt.org/z/T7s8fdqcq
[21:58:53] <bayaz> Title: Compiler Explorer - C++ (x86-64 gcc 11.2) 
[21:59:22] <jeaye> i.e. "move the input param into x"
[21:59:37] *** Quits: zaher (~zaher@37.48.159.90) (Ping timeout: 248 seconds)
[22:01:13] *** Quits: dev4449 (~dev4449@154.21.22.135) (Ping timeout: 248 seconds)
[22:02:01] *** Joins: nekodesu (~nano@user/nekobit)
[22:02:01] *** Joins: dev4449 (~dev4449@2.147.169.106)
[22:02:06] *** Joins: zaher (~zaher@37.48.182.53)
[22:02:32] <smallville7123> how do i unscale?
[22:03:21] *** Quits: zaher_ (~zaher@37.48.176.99) (Ping timeout: 248 seconds)
[22:06:14] *** Joins: node1 (~node1@user/node1)
[22:07:05] *** Quits: zaher (~zaher@37.48.182.53) (Ping timeout: 248 seconds)
[22:08:33] *** Joins: Engineer (~Izem@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca)
[22:09:38] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[22:09:43] *** Joins: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler)
[22:10:04] *** Quits: dka_ (~code-is-a@ns3059207.ip-193-70-33.eu) (Quit: My Ex-Girlfriend once told me: I'm not a slut, I'm just popular)
[22:11:21] *** Quits: Izem (~Izem@8.21.10.18) (Ping timeout: 248 seconds)
[22:11:29] *** Engineer is now known as Izem
[22:13:24] *** Quits: exvicesindaco (~exvicio@host-82-56-83-61.retail.telecomitalia.it) (Quit: Going offline, see ya! (www.adiirc.com))
[22:14:13] *** Quits: trace987 (~trace@95.90.106.112) (Ping timeout: 258 seconds)
[22:14:41] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:15:31] *** Quits: Uhino (~Uhino@ti0095q160-1844.bb.online.no) (Ping timeout: 246 seconds)
[22:19:35] *** Quits: beeza (sid53872@tinside.irccloud.com) (Ping timeout: 258 seconds)
[22:20:56] *** Joins: beeza (sid53872@id-53872.tinside.irccloud.com)
[22:22:01] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[22:22:33] <vdamewood> Yay food!
[22:23:28] <pikapika> vdamewood, hi uwu
[22:24:24] *** Quits: dev4449 (~dev4449@2.147.169.106) (Ping timeout: 272 seconds)
[22:24:35] *** Joins: dev4449 (~dev4449@86.57.82.176)
[22:24:58] <vdamewood> pikapika: narf
[22:26:01] <vdamewood> I guess I ned to get ready to go get my glasses.
[22:26:12] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[22:28:42] *** Joins: inky_ (~inky@46.162.236.174)
[22:29:05] <user51> good evening
[22:30:33] *** Quits: inky (~inky@37.186.117.147) (Ping timeout: 248 seconds)
[22:30:47] <Izem> editing xml configuration files in the dark is now the closest I've come to being a hacker
[22:31:22] *** Quits: nekodesu (~nano@user/nekobit) (Ping timeout: 272 seconds)
[22:31:47] *** Joins: nekodesu (~nano@user/nekobit)
[22:34:50] *** Quits: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler) (Ping timeout: 244 seconds)
[22:34:57] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 268 seconds)
[22:39:12] *** Joins: elnavigator (~elnavigat@105.196.134.207)
[22:40:09] *** Quits: Izem (~Izem@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca) (Ping timeout: 248 seconds)
[22:42:05] <smallville7123> izak: lmao
[22:42:14] *** Joins: rany (~rany@user/rany)
[22:43:02] *** Quits: rany_ (~rany@user/rany) (Ping timeout: 245 seconds)
[22:43:41] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[22:44:39] <smallville7123> how do i scale a value
[22:44:50] *** Joins: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler)
[22:44:57] *** Quits: digilink (~digilink@user/digilink) (Quit: WeeChat 3.2)
[22:45:06] *** Quits: node1 (~node1@user/node1) (Read error: No route to host)
[22:45:19] <pikapika> smallville7123, what is your input range and output range
[22:45:21] *** Joins: digilink (~digilink@user/digilink)
[22:46:01] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Remote host closed the connection)
[22:47:07] <smallville7123> my input range is 0 to 400, and my output range is 0 to 200
[22:47:10] <CuriousErnestBro> vdamewood deniska thank you for helping :D
[22:47:37] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[22:48:55] *** Joins: dka (~code-is-a@ns3059207.ip-193-70-33.eu)
[22:49:06] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[22:49:42] <pikapika> multiply by 0.5
[22:49:55] <smallville7123> or rather
[22:50:06] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[22:50:10] *** jess is now known as j
[22:50:19] <smallville7123> my input is a value from 0 to 200
[22:50:28] *** j is now known as jess
[22:50:42] <smallville7123> and my output is a value from 0 to window width
[22:50:55] <WarauSalesman> vb = va * maxb/maxa
[22:50:57] <pikapika> (v/200)*window_width
[22:51:46] *** Joins: inky (~inky@46.36.113.172)
[22:52:03] <cis> smallville7123: often called a "map" function https://stackoverflow.com/questions/5731863/mapping-a-numeric-range-onto-another
[22:52:04] <bayaz> Title: Mapping a numeric range onto another 
[22:52:31] <WarauSalesman> looks like math classes aren't popular here
[22:52:50] <cis> math classes have never been popular
[22:52:55] <pikapika> WarauSalesman, that formula is nice. Indeed its best to see the transformation to a range of [0,1] then out to the final range required
[22:54:33] *** Quits: inky_ (~inky@46.162.236.174) (Ping timeout: 248 seconds)
[22:54:44] <smallville7123> pikapika: :)
[22:55:25] <smallville7123> now i need to do this to the width
[22:55:49] <smallville7123> which i think i need to scale twice
[22:56:34] *** Joins: eyynet4 (~0x100@32.211.211.39)
[22:58:16] *** Joins: qbt (~edun@user/edun)
[22:58:26] <smallville7123> my input is from 0 to 200, and my output is from 0 to window width, but my current formula is width/2 - w
[22:58:38] <smallville7123> in unscaled values'
[22:59:32] *** Quits: sidy (~sidy@user/sidy) (Read error: Connection reset by peer)
[23:00:02] <CuriousErnestBro> is this correct? https://stackoverflow.com/a/18664239/8088560
[23:00:04] <bayaz> Title: Getting error: Peer authentication failed for user "postgres", when trying to get pgsql working with rails 
[23:00:11] <CuriousErnestBro> someone on irc scared me that stackoverflow sucks
[23:01:17] <oldlaptop> "StackOverflow sucks" is another thing like "goto considered harmful": people say that, because otherwise fools will blindly copy/paste from stackoverflow and create software that doesn't work and that they don't understand in the slightest
[23:01:24] <eyynet4> stack overflow doesn't suck, its kind of like wikipedia
[23:01:33] <WarauSalesman> SO is great for Java
[23:01:36] <eyynet4> some articles are hit or miss
[23:01:46] <pikapika> The problem with stackoverflow is that its too video gamey
[23:02:16] <oldlaptop> like goto, it is in fact useful, but you have to be aware of what you're doing, and it's not a good idea at all to simply slurp up code there which you don't understand
[23:03:09] *** Quits: dev4449 (~dev4449@86.57.82.176) (Read error: Connection reset by peer)
[23:03:17] <smallville7123> basically, in unscaled values assuming the screen w/h does not change, {10, 10, rt.getWidth()/2 - 10, rt.getHeight()/2 - 10}
[23:03:21] *** Joins: dev4449 (~dev4449@154.21.22.135)
[23:03:30] <smallville7123> i have scaled 10, 10
[23:03:34] *** Quits: dev4449 (~dev4449@154.21.22.135) (Client Quit)
[23:03:46] <smallville7123> but i dont know how to go about scaling the other two
[23:04:12] <pikapika> Its simple
[23:04:18] <oldlaptop> that particular answer is one of the nicer ones, especially in that it points to, and quotes, the actual source of truth on the matter - although it's for an old version of postgres!
[23:04:33] *** Quits: elnavigator (~elnavigat@105.196.134.207) (Ping timeout: 268 seconds)
[23:05:00] <pikapika> scaled=(inp-inp_min)/(inp_max-inp_min) + out_min
[23:05:26] <pikapika> scaled=((inp-inp_min)/(inp_max-inp_min))*(out_max-out_min) + out_min
[23:05:27] <pikapika> rather
[23:05:55] <smallville7123> this assumes a window of {0, 0, 480, 360} (unscaled) and scaled {18, 24, 230, 170} (last two values are not scaled)
[23:06:15] <WarauSalesman>  lol, you really can't understand it
[23:06:34] <smallville7123> my code assumes*
[23:08:48] *** Joins: Akuli (~Akuli@82-203-160-28.bb.dnainternet.fi)
[23:09:45] *** Parts: JimmyRustles (~Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net) ()
[23:10:12] *** Quits: amigojapan (uid86330@id-86330.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[23:11:05] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[23:11:54] <CuriousErnestBro> well someone on SO said chmod 777
[23:11:56] *** Quits: jamea (~jamea@189.231.71.80) (Ping timeout: 268 seconds)
[23:12:00] <CuriousErnestBro> then devops irc got mad at me
[23:12:09] *** Joins: mven (~mven@072-179-001-159.res.spectrum.com)
[23:12:09] <CuriousErnestBro> I ended up learning what groups are in linux
[23:12:25] *** Joins: sidy (~sidy@2600:1014:b1b5:a96:889a:6c1c:acd5:daef)
[23:12:48] *** sidy is now known as Guest9356
[23:13:06] <deniska> I relearn unix permissions each time I set up a samba server >_<
[23:13:32] <pikapika> 777 is a last resort
[23:13:41] <eyynet4> ah the eternal CVE source
[23:14:08] <eyynet4> (samba not 777)
[23:14:28] <oldlaptop> CuriousErnestBro: Using StackOverflow as a substitute for, say, learning what groups are, is precisely the problem
[23:14:29] <deniska> well, it's the most versatile shared filesystem for ya
[23:15:05] <deniska> poke at any computer which appeared in the previous 25 years, and it will support smb protocol in some form
[23:15:14] <oldlaptop> deniska: It works on windows and sort-of-kind-of-works on some unices; nfs works on unices and sort-of-kind-of-works on Windows
[23:15:27] <smallville7123> this is incorrect right? scaled_w = (100 / 200) * 480
[23:15:37] <smallville7123> as i get 240
[23:15:53] <pikapika> scaled=((inp-inp_min)/(inp_max-inp_min))*(out_max-out_min) + out_min
[23:16:15] <pikapika> inp_min and out_min would be zero in your case
[23:16:17] <oldlaptop> (Also, SMB sucks like unto a deep-sea vacuum pipe, and nfs sucks like unto a deep-sea vacuum pipe. They're really very similar.)
[23:16:51] <oldlaptop> (I wish the deep-sea vacuum pipe thing was my idea, but no: http://www.dansdata.com/f5.htm)
[23:17:04] <smallville7123> and im trying to get...
[23:17:19] <deniska> oldlaptop: well, nfs hangs in a scarier way
[23:17:32] <smallville7123> my input is 100, my input range is 0 to 200
[23:17:47] <oldlaptop> We could argue all day about the relative merits of the precise ways in which smb and nfs are works of the devil
[23:18:05] <smallville7123> my output range is 0 to 480, and my sub output range is my input range
[23:18:54] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[23:19:10] *** Joins: mickey8 (~user@user/mickey)
[23:22:10] *** Joins: Izem (~Izem@bras-base-london1483w-grc-43-65-95-173-5.dsl.bell.ca)
[23:25:11] <smallville7123> so far i have this (((100 / 200) * 300) / 300) * 200
[23:25:36] <smallville7123> which seems to keep my width at 100 regardless of my window size
[23:26:51] <smallville7123> in this case my window size is 300
[23:27:26] *** Quits: eyynet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[23:27:38] *** Joins: eyynet4 (~0x100@32.211.211.39)
[23:27:44] *** Quits: eyynet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[23:27:57] *** Joins: eyynet4 (~0x100@32.211.211.39)
[23:27:59] *** Quits: eyynet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[23:28:11] *** Joins: eyynet4 (~0x100@32.211.211.39)
[23:28:50] *** Joins: tw3ml0w (~tw3ml0w@138.199.52.63)
[23:28:57] *** Quits: eyynet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[23:29:03] *** Quits: tw3ml0w (~tw3ml0w@138.199.52.63) (Remote host closed the connection)
[23:29:05] *** Quits: bytecrawler (~bytecrawl@gateway/tor-sasl/bytecrawler) (Ping timeout: 244 seconds)
[23:29:10] *** Joins: eyynet4 (~0x100@32.211.211.39)
[23:29:25] *** Quits: xcombelle (~Xavier_Co@abayonne-651-1-41-161.w92-156.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[23:29:30] *** Quits: blackop (~ocloud@user/blackop) (Ping timeout: 240 seconds)
[23:29:43] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[23:29:59] *** Joins: blackop (~ocloud@user/blackop)
[23:30:28] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 256 seconds)
[23:30:44] <Izem> what's a good way to get up to speed on object oriented programming in c++?
[23:31:12] <c705> practice
[23:31:31] <pikapika> OOP is quite tough
[23:32:06] <eyynet4> java/c++ style is
[23:32:10] <smallville7123> if my input is 100, range is 0 to 200, and my virtual output is 0 to 400, and my window is 0 to 200 (which 200 virtual is 100 window).  how do i correctly scale my input is 100 such that it is 50 ([virtual 400 > 200] half > [window 200 > 100] half > 50)
[23:32:20] <pikapika> smallville7123, you have already been given a formula
[23:32:22] *** Joins: mrig (~mrig@user/mrig)
[23:32:34] <cis> smallville7123: did you read that SO link?
[23:32:55] <smallville7123> pikapika: i know, but i do not know that correct order to scale in
[23:33:36] <izak> speaking of oop in c++.. why do we need operator overloading ?
[23:34:01] <pikapika> smallville7123, forget orders
[23:34:05] <pikapika> just scale to [0,1] first
[23:34:10] <pikapika> then you can easily scale out to anything
[23:34:22] <smallville7123> do i need to convert to percentage first?
[23:34:29] <pikapika> it should be in floats
[23:34:30] <pikapika> or doubles
[23:34:30] *** Quits: eyynet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[23:34:38] <pikapika> during the conversion
[23:34:38] <Izem> c705: i'm just looking at older code
[23:34:43] *** Joins: eyynet4 (~0x100@32.211.211.39)
[23:34:47] <Izem> not sure what you mean by practice
[23:35:27] <smallville7123> how do i obtain a percentage
[23:36:06] <smallville7123> (100 / 200) * 100 ?
[23:36:09] <eyynet4> i'm a fan of 0->short_max
[23:36:37] <smallville7123> eg (val / max * 100)
[23:36:53] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[23:36:53] <smallville7123> or is it max / val * 100
[23:36:55] <pikapika> (val/inp_range) * out_range
[23:37:12] <Akuli> val / max, because you want to count how many maximums that value is
[23:37:33] <Akuli> for example, if it is about a third of the max, that part should be 0.3 or so
[23:37:38] <pikapika> Akuli, it is the most clear when we normalize it to [0,1] intermediate values
[23:37:56] <smallville7123> ok
[23:38:08] <Akuli> i find it's often best to think of "a / b" as "how many b's is a"
[23:38:23] <Akuli> in this case, you just have to understand "how many" so that it is not limited to integers, and actually between 0 and 1
[23:38:25] <pikapika> it is a confusing analogy for fractional values
[23:38:30] <pikapika> it is a confusing analogy for fractional results
[23:38:50] <Akuli> "0.27 a's" is not confusing :)
[23:38:55] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[23:39:04] <Akuli> but yeah i get your point
[23:39:09] <Akuli> maybe it's not for everyone
[23:39:35] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[23:40:44] <smallville7123> ok, now that i have my percentage 0.5
[23:41:28] *** Joins: oft_gegong (~mint@70.90.132.249)
[23:41:45] <oft_gegong> I got banned from linux mint's irc chat I'm gonna cwy
[23:41:48] <smallville7123> i calculate my scaled width via 200 * 0.5 right?
[23:41:54] <pikapika> smallville7123, multiply by out_max now
[23:41:55] <smallville7123> which should return 100
[23:42:05] <Guest3880> oft_gegong: why?
[23:42:15] <oft_gegong> Guest282: because I was trolling
[23:42:15] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Quit: WeeChat 3.2)
[23:42:21] <Guest3880> oh lol
[23:42:28] <Izem> https://spivey.oriel.ox.ac.uk/corner/Gang-of-four_design_patterns
[23:42:30] <bayaz> Title: Gang-of-four design patterns - Spivey's Corner 
[23:42:31] <smallville7123> or is it 0.5 * 200 ?
[23:42:43] *** Quits: eyynet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[23:42:54] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[23:42:55] *** Joins: eyynet4 (~0x100@32.211.211.39)
[23:43:02] <pikapika> what is out_max
[23:46:25] <oft_gegong> SMOKE THIS __-__
[23:46:41] *** Joins: lunarkitty (uid501895@user/pyra)
[23:47:43] *** Quits: SGautam (uid286066@id-286066.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[23:47:44] <WarauSalesman> what's to smoke there?
[23:48:06] <oft_gegong> the finest crack in the south seas
[23:51:23] <oft_gegong> SMOKE that DOPE
[23:51:29] <oft_gegong> get high and fly
[23:53:18] *** Quits: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se) (Remote host closed the connection)
[23:53:56] *** Joins: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se)
[23:54:55] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[23:55:47] <oft_gegong> I hate programming! It's so stupid. Just take a hello world and multiply it by infinity to get whatever you want.
[23:57:31] <oft_gegong> SMOKE that DOPE and get high
[23:57:36] *** Joins: vitorgonc (~vitorgonc@2804:d55:580c:5e00:509:fa16:ae70:8633)
[23:57:48] *** Joins: khanred (~khanred@45-17-211-63.lightspeed.okcbok.sbcglobal.net)
[23:57:48] *** Quits: khanred (~khanred@45-17-211-63.lightspeed.okcbok.sbcglobal.net) (Changing host)
[23:57:48] *** Joins: khanred (~khanred@user/khanred)
[23:57:53] *** Parts: khanred (~khanred@user/khanred) ()
[23:58:07] <mawk> you're out of your mind oft_gegong 
[23:58:16] <mawk> why don't you take a small break from the internet
[23:58:31] <oft_gegong> but I just got here
[23:58:40] <mawk> smallville7123: it's the same thing
[23:58:42] <mawk> a*b = b*a
[23:59:30] <oft_gegong> what if you learned all API's and all of their algorithms and all of their data structures..what then?
