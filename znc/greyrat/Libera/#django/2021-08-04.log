[00:01:09] <timdiels> Thanks; had a hunch I should run by the whole X problem, not just the Y problem
[00:01:39] <hylje> no problem
[00:03:15] <timdiels> Hmm, full_clean() is a no-op for unbound forms
[00:05:10] *** Quits: lorcab (~user@197.251.194.240) (Remote host closed the connection)
[00:05:59] *** Joins: lorcab (~user@197.251.194.240)
[00:12:56] *** Joins: ianthrive (~ianthrive@166.70.94.161)
[00:23:52] <blackleitus> anyone who wants to help me with open source license?
[00:23:58] *** Joins: serghei (~egrep@user/serghei)
[00:29:44] <timdiels> Think I figured it out: on __init__, if unbound form, limit choices based on initial data (get_initial_for_field), else don't limit choices such that the field doesn't fail validation when it's actually valid. On full_clean, MyForm.clean() limits choices based on cleaned_data. On POST, call full_clean twice. So the only meh bit that remains is calling full_clean twice, because side-effects.
[00:34:16] *** Quits: Anarchic (~Anarchic@getlegit.co.uk) (Quit: ZNC - http://znc.in)
[00:34:27] *** Joins: thiras (~thiras@user/thiras)
[00:35:52] *** Joins: Anarchic (~Anarchic@getlegit.co.uk)
[00:36:29] *** Quits: Anarchic (~Anarchic@getlegit.co.uk) (Remote host closed the connection)
[00:37:35] *** Joins: Anarchic (~Anarchic@getlegit.co.uk)
[00:44:33] *** Quits: mattil (~mattilinn@62-113-176-119.bb.dnainternet.fi) (Quit: Leaving)
[00:46:50] *** Quits: rje (~rje@65.141.156.170) (Ping timeout: 258 seconds)
[00:48:58] *** Joins: rje (~rje@50.54.137.153)
[00:52:01] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[00:59:51] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75)
[01:01:01] *** Quits: blackleitus (~blackleit@189.195.193.124) (Quit: Leaving)
[01:02:27] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[01:15:36] *** Quits: django-ticketbot (~django-ti@django/ops/ticketbot) (Remote host closed the connection)
[01:15:54] *** Joins: django-ticketbot (~django-ti@django/ops/ticketbot)
[01:18:19] *** Joins: Guddu (~Guddu@67.73.235.228)
[01:55:46] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Ping timeout: 240 seconds)
[01:57:42] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
[02:01:53] *** Joins: djapo (~archangel@user/djapo)
[02:08:25] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 268 seconds)
[02:10:05] <hyper_dave> what does schema_editor.connection.alias do i migrations?
[02:10:12] <hyper_dave> *in
[02:22:22] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:22:53] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[02:23:15] *** Joins: flynn (~mcbloch@user/flynn)
[02:31:19] <PaulWay[w]> hyper_dave: any particular reason you're asking?
[02:37:12] <hyper_dave> PaulWay[w]: I was trying to write migrations and I was getting this constant error "cannot CREATE INDEX because it has pending trigger events."
[02:39:19] <PaulWay[w]> OK.  What kind of operations do you have in your current migration?
[02:40:02] <PaulWay[w]> In my experience you may need to split that up into two operations - e.g. one that creates new fields and one that changes or deletes fields.
[02:40:20] <PaulWay[w]> Suboptimal, but necessary because the migration tries to run inside a single transaction.
[02:47:11] *** Joins: explore (uid233125@id-233125.stonehaven.irccloud.com)
[02:47:11] <wallbroken> FunkyBob: to do what i want to do with logging, is there some specific thing?
[02:47:28] <wallbroken> i just want to log on files, and i want to have a file for each user
[02:48:12] <PaulWay[w]> wallbroken: you are still trying to make the problem worse.
[02:48:21] <PaulWay[w]> All because you're trying to avoid fixing the fundamental probelm.
[02:48:27] <wallbroken> uh?
[02:48:31] <PaulWay[w]> You do not want logging.
[02:48:35] <PaulWay[w]> You want order tracking.
[02:48:46] <PaulWay[w]> And that means an Order model.
[02:48:52] <wallbroken> logging is just to keep track of operations
[02:49:11] <PaulWay[w]> Then you don't need to write a log file per user do you.
[02:49:17] <PaulWay[w]> If it's "just to keep track of operations".
[02:49:22] *** Quits: tm007 (uid287041@id-287041.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[02:51:45] <FunkyBob> wallbroken: you don't need logging if you fix your DB schema
[02:52:16] <wallbroken> FunkyBob: why you said this?
[02:52:23] <PaulWay[w]> FFS man.
[02:52:24] <FunkyBob> same reason I said it last time
[02:52:30] <FunkyBob> same reason PaulWay[w] said it
[02:52:32] <PaulWay[w]> Because your schema is wrong.
[02:52:35] <FunkyBob> if you fix your DB schema.
[02:52:39] <FunkyBob> your code becomes simpler
[02:52:43] <FunkyBob> your UI becomes nicer
[02:52:50] <PaulWay[w]> Here's your cup of concrete, drink it, harden up, and fix your schema.
[02:52:51] <FunkyBob> AND you get the logging you want...
[02:52:54] <wallbroken> but logging is always a nice to have thing to debug problems
[02:54:30] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Quit: mogad0n)
[02:54:33] <FunkyBob> yes, and it's worth looking into
[02:54:38] <FunkyBob> but not for this feature
[02:54:39] <hyper_dave> PaulWay[w]: Can it be separated using SeparateDatabaseAndState
[02:54:43] <FunkyBob> since you need it as a business requirement
[02:54:43] <PaulWay[w]> Then you don't really care about dividing it up by user do you.
[02:55:00] <PaulWay[w]> hyper_dave: no, because it's a database limitation, not a state limitation.
[02:55:23] <wallbroken> change my db schema means, as already said, building the entire project from the scratch
[02:55:31] <PaulWay[w]> You could do it in two transactions within a SeparateDatabaseAndState, but it's best not to abuse that mechanism.
[02:55:40] <PaulWay[w]> wallbroken: then you better get started on that eh?
[02:56:05] <PaulWay[w]> Instead of wasting more time trying to pretend that you can make your non-working system work.
[02:56:42] <FunkyBob> wallbroken: well, you can keep doing things the wrong way, and it will just keep getting harder and harder and harder
[02:56:46] <FunkyBob> this is what we call "technical debt"
[02:57:00] <FunkyBob> or you can "pay down' that debt now... and have an easier life and a better product
[02:57:10] <PaulWay[w]> This is what we call "hoping the problem will go away"
[02:57:19] <hyper_dave> PaulWay[w]: What about atomic=False? I am just exploring options to understand the migration system by this point.
[02:58:05] <wallbroken> FunkyBob: my project is very big. thousand of line of code
[02:58:08] <PaulWay[w]> hyper_dave: yes, atomic=False will work.  Because then it's not atomic.
[02:58:24] <PaulWay[w]> wallbroken: then you better get started, before it becomes tens of thousands of lines of code that is wrong.
[02:58:26] <FunkyBob> wallbroken: it's really not a very big project
[02:58:35] <FunkyBob> wallbroken: and... IT WOULD BE A LOT SIMPLER IF YOU MADE THESE CHANGES
[02:58:37] <PaulWay[w]> Only a thousand lines?  That's nothing to throw away.
[02:58:41] <FunkyBob> but you're notintersted in listening to us, are you
[02:58:51] <hyper_dave> PaulWay[w]: What are the down sides?
[02:58:56] <FunkyBob> you just want to stamp your foot like a petulant child,
[02:59:10] <FunkyBob> whining "but how dare you hold me accountable for my own choices!"
[02:59:11] <PaulWay[w]> Steady there FunkyBob.
[02:59:15] <wallbroken> FunkyBob: but do you think i have the technical skills to build it up again?
[02:59:22] <PaulWay[w]> Yes.
[02:59:25] <PaulWay[w]> hyper_dave: the same as any non-atomic transaction.
[02:59:28] <FunkyBob> wallbroken: because you now know a lot more than when you started
[02:59:44] <wallbroken> i still don't know how generic view class works
[02:59:50] <FunkyBob> wallbroken: one of those things is "how the program should actually work"
[02:59:50] <wallbroken> and nobody explained me
[02:59:57] <FunkyBob> wallbroken: so what?
[02:59:57] <PaulWay[w]> And we recommend not using generic view classes.
[03:00:01] <wallbroken> i don't know what a "context" is
[03:00:09] <wallbroken> i don't know many things
[03:00:10] <FunkyBob> the go back and DO THE TUTORIAL
[03:00:27] <FunkyBob> remember how I kept telling you "learn and understand the fundamentals"?
[03:00:32] <wallbroken> or maybe somebody here could explaint to me how those things works
[03:00:40] <FunkyBob> you keep shooting yourself in the foot by refusing to do this
[03:00:51] <FunkyBob> wallbroken: context... it's the data your template can 'see' to render with
[03:01:00] <wallbroken> FunkyBob: django tutorial is not very newbie friendly
[03:01:06] <FunkyBob> wallbroken: bullshit
[03:01:20] <FunkyBob> tens of thousands of newbies over the years have found it works well
[03:01:43] <FunkyBob> and if not that, there's the DjangoGirls tutorial.. which has helped tens of thousands of NON PROGRAMMERS get started
[03:01:46] <wallbroken> ok, and generic view class?
[03:01:48] <PaulWay[w]> hyper_dave: In a migration you want the entire state to be consistent at the end.  You don't want the schema change to fail half way through and leave the database in a transitional state.
[03:01:53] <wallbroken> can you explain me what they do?
[03:01:55] <FunkyBob> wallbroken: don't use them
[03:02:14] <PaulWay[w]> wallbroken: yes, don't bother with generic view classes this time.
[03:02:21] <PaulWay[w]> You already want to do more than they can give you.
[03:02:22] <FunkyBob> wallbroken: they implement common view patters in a way you can sub-class to customies
[03:02:31] <PaulWay[w]> hyper_dave: An atomic transaction gives you that guarantee.
[03:03:13] <wallbroken> well, can you desribe to me a workflow from a request to a response passing trough a generic view class?
[03:03:20] <FunkyBob> no
[03:03:27] *** Quits: timdiels (~user@78-22-205-207.access.telenet.be) (Quit: leaving)
[03:03:33] <PaulWay[w]> hyper_dave: you're still going to have to stop your HTTP services while the migration goes through - unless you're careful about how you write the code that uses the models you're migrating.
[03:03:43] <FunkyBob> you need to understand views, templates, and responses first
[03:03:59] <FunkyBob> get a feel for the common patterns, so the CBV abstractions make sense
[03:04:08] <hyper_dave> PaulWay[w]: Okay. So can I do data migration then schema migration in one transaction? or vice versa?
[03:04:27] <hyper_dave> Because I have both intertwined
[03:04:37] <PaulWay[w]> Depends on how you're changing the schema.
[03:04:46] <PaulWay[w]> If you're removing fields, then yes.
[03:04:51] <PaulWay[w]> If you're adding them, probably not.
[03:05:44] <hyper_dave> Okay. So I can not add a field and populate it in one schema.
[03:06:02] <PaulWay[w]> You can, if you're not also adding indexes.
[03:06:30] <wallbroken> FunkyBob: i know what a view is
[03:06:32] <PaulWay[w]> Because of that 'cannot CREATE INDEX because of pending trigger events'.
[03:06:40] <wallbroken> it takes a request and generates a response
[03:06:46] <PaulWay[w]> hyper_dave: so the real question is: what are those trigger events?
[03:07:15] <PaulWay[w]> wallbroken: good - that's the simple version.
[03:08:01] <hyper_dave> PaulWay[w]: I don't know. How can I find out? I am not familiar with underlying database working.
[03:08:11] <FunkyBob> wallbroken: right, but are you familiar with the common patterns you will regularly use in views?
[03:08:23] <wallbroken> FunkyBob: absolutely not
[03:08:34] <wallbroken> i just use it without knowing what they do
[03:08:37] <PaulWay[w]> hyper_dave: Have you created any triggers?  It sounds like you haven't?
[03:08:47] <hyper_dave> Yes.
[03:08:52] <FunkyBob> wallbroken: and there is the problem
[03:09:01] <FunkyBob> wallbroken: no matter how many times we tell you not to do that... you keep doing that
[03:09:02] <hyper_dave> PaulWay[w]: Not that I'm aware.
[03:09:03] <PaulWay[w]> Ah, you have?  Sorry, my question was badly phrased.
[03:09:13] <PaulWay[w]> OK, yes, you haven't.  And that's what I expected :-)
[03:09:36] <wallbroken> FunkyBob: and here there is not anybody who can explain to me this stuff avoiding me to read the django tutorial?
[03:09:53] <PaulWay[w]> wallbroken: why would we do that, when there's a perfectly good tutorial there?
[03:09:58] <FunkyBob> wallbroken: yes, but NOBODY WANTS TO ... because you frequently ignore us anyway
[03:10:20] <PaulWay[w]> wallbroken: I don't think you realise that if you say "I can't understand the tutorial" makes you sound more than usually stupid.
[03:10:35] <wallbroken> PaulWay[w]: the difference is that tutorial doesn't follow my thoughts. an human can do that
[03:11:05] <PaulWay[w]> wallbroken: tough.  Your thoughts need to follow the tutorial, not the other way around.
[03:11:36] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[03:11:37] *** ChanServ sets mode: +v EvilDMP
[03:11:38] <PaulWay[w]> hyper_dave: so can you dpaste the migration you're actually trying to do?
[03:12:05] <PaulWay[w]> wallbroken: for you to learn, you have to stop thinking "I want to do it my way" and start thinking "what is the Django way of doing it".
[03:13:50] <hyper_dave> PaulWay[w]: https://dpaste.com/C7JA2ZVJH
[03:13:57] *** Quits: NeuroWinter (~NeuroWint@107.172.219.233) (Quit: ZNC 1.8.2 - https://znc.in)
[03:14:30] <PaulWay[w]> hyper_dave: that's a hefty migration :-)
[03:14:42] *** Joins: NeuroWinter (~NeuroWint@107.172.219.233)
[03:15:02] <hyper_dave> PaulWay[w]: Basically what I'm trying to do is migrate a model with string primary key to a uuid. and then fix foreignkeys that refrence to it.
[03:15:26] <PaulWay[w]> UUIDs... /me sighs
[03:15:27] <PaulWay[w]> :-)
[03:16:26] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 272 seconds)
[03:16:41] <hyper_dave> PaulWay[w]: I guess primary keys are indexed by default right?
[03:16:54] <PaulWay[w]> OK.  What I'd recommend here is to put all the 'RemoveField' operations in a separate migration.
[03:16:55] <FunkyBob> use a secondary surrogate key for UUIDs
[03:17:00] <FunkyBob> add a second field marked unique
[03:17:06] <FunkyBob> you'll thank me in the long run
[03:17:09] <PaulWay[w]> Yep.
[03:17:27] <PaulWay[w]> UUIDs an unlovely option for a primary key :-)
[03:17:49] <PaulWay[w]> But if they're already in UUID format it does make sense to change them from CharField to UUIDField.
[03:18:24] <hyper_dave> Why are uuid pks bad?
[03:18:55] <PaulWay[w]> Long and annoying IMO.
[03:19:00] <hyper_dave> The CharField is not in uuid format it is just the name attribute.
[03:19:14] *** Quits: NeuroWinter (~NeuroWint@107.172.219.233) (Quit: ZNC 1.8.2 - https://znc.in)
[03:20:20] <PaulWay[w]> An AutoField is just as unique, is shorter, and is easier to print.
[03:20:33] <FunkyBob> it also doesn't fuck with your indeices
[03:20:34] <PaulWay[w]> Is there a particular reason you want a UUID?
[03:20:59] *** Joins: NeuroWinter (~NeuroWint@107.172.219.233)
[03:21:00] <FunkyBob> most people opt for uuid4... and since they're random, can cause rather pathologically shit index update performance
[03:21:17] <PaulWay[w]> Yep.
[03:21:26] <FunkyBob> [there was a special case with mysql where every insert caused a full table rewrite]
[03:21:33] <hyper_dave> I like the length concistency,
[03:21:52] * PaulWay[w] shrugs
[03:21:58] <PaulWay[w]> It's your database.
[03:22:03] <PaulWay[w]> Anyway.
[03:22:31] <PaulWay[w]> You can't use a SeparateDatabaseAndState transaction to combine those because you're using RunPython actions to update data.
[03:22:34] <hyper_dave> Plus it was designed this way from the begining so I can't do anything.
[03:23:04] <PaulWay[w]> The field deletes are probably what is causing the triggered events, because they'll trigger cascading deletes if they're the reference for a foreign key.
[03:25:45] <hyper_dave> Yeah they are foreignkeys.
[03:27:34] <PaulWay[w]> Yup.
[03:27:48] <PaulWay[w]> I like how we avoided the XY problem there :-)
[03:28:16] <hyper_dave> So it doesn't work even if i moved those down at the end?
[03:28:29] <hyper_dave> What XY problem?
[03:28:33] <PaulWay[w]> Yeah.  Have to be a separate transaction.
[03:29:02] <PaulWay[w]> You asked about schema_editor.connection.alias.  But that wasn't the real question :-)
[03:29:42] <hyper_dave> I was trying to understand what was the problem.
[03:30:19] <FunkyBob> hyper_dave: http://bash.org/?866112
[03:30:57] *** Quits: rje (~rje@50.54.137.153) (Quit: My computer has gone to sleep. ZZZzzzâ€¦)
[03:31:33] <hyper_dave> Haha.. Okay.
[03:31:45] *** Joins: rje (~rje@50.54.137.153)
[03:45:51] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 252 seconds)
[03:46:21] *** Quits: MarkusH (MarkusH@django/moderator/MarkusH) (Quit: ZNC - http://znc.sourceforge.net)
[03:46:55] *** Joins: MarkusH (MarkusH@django/moderator/MarkusH)
[03:46:56] *** ChanServ sets mode: +v MarkusH
[03:56:46] *** Joins: dre (~dre@2001:8003:c932:c301:60b3:aefe:6a08:9d70)
[04:04:47] <dre> å¤§å®¶å¥½
[04:04:55] <FunkyBob> gesundheit
[04:05:12] * dre wipes nose * thanks FunkyBob 
[04:10:04] <PaulWay[w]> Heh :-)
[04:11:50] <GinFuyou> when you know all characters but still can't read it...
[04:12:42] <dre> GinFuyou, big home good. = å¤§å®¶(everybody) + ä½ å¥½(hello)
[04:12:56] <dre> hi everybody :P
[04:13:07] <wallbroken> GinFuyou: why did you suggest to me to use m2m fields in my model?
[04:13:29] <wallbroken> there was a reason about it?
[04:13:53] <GinFuyou> dre, yeah, doesn't make any sense in Japanese XD
[04:14:04] <dre> lmao
[04:14:06] <dre> xD
[04:15:41] <wallbroken> FunkyBob: see? he also refuses answering to
[04:16:24] <dre> wallbroken, what is the m2m ?
[04:16:29] <FunkyBob> wallbroken: what?  he who?
[04:16:46] <FunkyBob> wallbroken: you seem to feel that everyone not answering you is a problem with them...
[04:16:52] <wallbroken> the guy i just asked my question
[04:16:55] <FunkyBob> as if you have no influence over this happening
[04:17:14] <FunkyBob> at some point you have to start asking "what am _I_ doing that keeps producing this result?"
[04:17:30] <FunkyBob> and... and this is the big thing.... change that.
[04:17:53] <wallbroken> to me people that is not answering just mean that is rude and not polite
[04:18:03] <FunkyBob> wallbroken: see?  you blame others
[04:18:03] <dre> wallbroken, you are refusing to answer me
[04:18:26] <wallbroken> dre: sorry, it's a many to many field
[04:18:42] <dre> between what and what
[04:18:47] <wallbroken> it's to rapresent many to many realationships between entity
[04:18:51] <FunkyBob> wallbroken: it is NOT rude of volunteers to choose to not help you
[04:19:02] <FunkyBob> wallbroken: it is rude of YOU to demand they help you, despite your past behavior
[04:19:30] <wallbroken> but i did not ask helping me now
[04:19:36] <FunkyBob> am quite sure dre understands the basics and function of a m2m field
[04:19:43] <wallbroken> i just asked the reason of something he made me to use
[04:20:13] <FunkyBob> wallbroken: also remember people have their own lives... so they can't necessarily respond at a time convenient to you
[04:20:28] <wallbroken> dre: john drinks beer and coke, bob drinks beer and wine
[04:20:31] <FunkyBob> you're not paying for this help... stop demanding it be like you are.
[04:20:36] <wallbroken> this is an example of m2m relationship
[04:20:44] <dre> lmao
[04:21:05] <dre> wallbroken, yes thank you, i know. I'm asking about your code. why you do not use m2m ?
[04:22:00] <wallbroken> dre: because in my specific business model, using that kind of datatype, generated a set of problems which to be solved needs to rewrite the entire project again
[04:22:33] <hyper_dave> PaulWay[w]: Thanks separate migration worked.
[04:22:33] <dre> wait is this the shoes?
[04:22:37] <wallbroken> FunkyBob: no, i know that GinFuyou stopped answering to me because long time ago he admitted it
[04:22:37] <FunkyBob> dre: the issue was wallbroken gave wrong answers about their business needs, so got advice that didn't fit
[04:22:50] <FunkyBob> wallbroken: yes, because you refuse to accept our advice
[04:23:01] <FunkyBob> you are difficult to help because (a) you don't want to do the basics, and (b) you lie
[04:23:03] <wallbroken> dre: yes, shoes
[04:23:06] <dre> wallbroken, the best thing you can do, is stop listening to others, and try to solve it yourself.
[04:23:06] <PaulWay[w]> hyper_dave: yay! :-)
[04:23:28] <PaulWay[w]> LOL.  wallbroken blaming other people for not talking to him, when he doesn't listen to other people :-)
[04:23:51] <FunkyBob> PaulWay[w]: or answer most of our questions
[04:23:56] <wallbroken> dre: the problem became from the fact that a requirement of the project was that the backoffice needs to track each shoe object, and not the shoe SKU model
[04:24:09] *** Quits: NeuroWinter (~NeuroWint@107.172.219.233) (Quit: ZNC 1.8.2 - https://znc.in)
[04:24:16] <wallbroken> but then FunkyBob told me that isn't useful. I just track it inside an order
[04:24:21] <wallbroken> not in the warehouse
[04:24:23] <PaulWay[w]> or change his mind.
[04:24:32] <dre> wallbroken, https://www.youtube.com/watch?v=YZvRrldjf1Y
[04:24:35] <FunkyBob> wallbroken: I told you there was a better solution
[04:24:38] <FunkyBob> not that it wasn't useful
[04:24:44] <FunkyBob> that you were modelling your data  / process wrong
[04:24:49] <FunkyBob> because what you told us originally was wrong
[04:24:50] *** Joins: NeuroWinter (~NeuroWint@107.172.219.233)
[04:24:55] <FunkyBob> stop lying about what we said
[04:25:12] <wallbroken> dre: i told 15323534534 times it's not an e-commerce application
[04:25:22] <wallbroken> but looks like here people refuses to get this fact
[04:25:24] <FunkyBob> wallbroken: and yet... it is
[04:25:41] <dre> wallbroken, ok. but shoe object, what does that mean? you track people wearing it?
[04:25:53] <FunkyBob> dre: it's stores ordering stock from the warehouse
[04:25:53] <bparker> still at this?
[04:25:57] <dre> would you not just have a shoe id that has relationship to SKU
[04:26:05] <PaulWay[w]> wallbroken: HAHAHAHHAA
[04:26:11] <PaulWay[w]> "I'm selling shoes, but it's not e-commerce"
[04:26:17] <PaulWay[w]> Jeez, man, you really don't listen to us do you?
[04:26:18] <bparker> b2b
[04:26:22] <FunkyBob> bparker: yes
[04:26:23] <PaulWay[w]> Why should we listen to you?
[04:26:25] <dre> I mean, wholesale is even easier
[04:26:35] <FunkyBob> dre: there's no _purchasing_ involved...
[04:26:36] <dre> because you don't even need to deal with frontend *that much*
[04:26:38] <FunkyBob> just stock orders
[04:26:41] <wallbroken> selling shoes?
[04:26:43] <wallbroken> what?
[04:26:44] <FunkyBob> and fulfillment
[04:26:47] <dre> ok
[04:26:54] <FunkyBob> so yes, there are Orders
[04:27:11] <dre> wallbroken, this is a simple thing that I still think you can do. you perhaps need to try and figure it out. use the ecommerce as inspiration.
[04:27:20] <wallbroken> it's an application in which retail people and warehouse people are the only ones involved
[04:27:24] <FunkyBob> but wallbroken didn't implement that... because their original description made this sound like stores getting demo samples or something
[04:27:26] <wallbroken> no customers involved
[04:27:29] <dre> yep
[04:27:29] <FunkyBob> something entirely unrelated to orders and stock
[04:27:37] <FunkyBob> wallbroken: the stores are the customer in this transaction
[04:27:38] <bparker> how many months has this been in discussion now
[04:27:44] <FunkyBob> bparker: 4 I think
[04:27:48] <dre> haha
[04:27:51] <FunkyBob> wallbroken: the stores order stock from the warehouse
[04:27:55] <FunkyBob> wallbroken: yes?
[04:28:03] <wallbroken> FunkyBob: and this means that it's an ecommerce?
[04:28:07] <wallbroken> no payments inside that
[04:28:16] <bparker> we could have written 4 different complete sites
[04:28:22] <FunkyBob> nobody is talking about payments
[04:28:35] <FunkyBob> wallbroken: nobody wants to give a shit about labelling this
[04:28:42] <FunkyBob> stop getting hung up on the wrong thing
[04:28:50] <PaulWay[w]> wallbroken: you think you can learn nothing from that video just because it's "e-commerce" and you think you're not "e-commerce"?
[04:28:50] <FunkyBob> and get back to accurately describing the needs
[04:29:11] <PaulWay[w]> Well, man, please, don't bother us, because you're not really likely to learn anything from us either.
[04:29:12] <wallbroken> PaulWay[w]: mostly
[04:29:22] <FunkyBob> wallbroken: it's _like_ e-commerce because you have consumers [stores] who want to Order products [shoes] from a Vendor [warehouse]
[04:29:40] <FunkyBob> just because ther are no payments involved, doesn't mean it's not at all like e-commerce
[04:30:00] <wallbroken> it's not like a "wharehouse management system" ?
[04:30:15] <FunkyBob> it's like that, in some ways, too
[04:30:16] <PaulWay[w]> And I'll bet six months down the track you'll have someone say "now can your website handle payments" and then you'll say "Oooooohhhhhh, it *is* an e-commerce site!"
[04:30:27] <FunkyBob> PaulWay[w]: heh
[04:30:33] <dre> PaulWay[w], *mind blown*
[04:30:52] <PaulWay[w]> "If only I'd listened to those guys six months ago that were telling me I could learn about how to write an e-commerce site!"
[04:31:09] <wallbroken> "E-commerce (electronic commerce) is the activity of electronically buying or selling of products on online services or over the Internet. E-commerce draws on technologies such as mobile commerce, electronic funds transfer, supply chain management, Internet marketing, online transaction processing, electronic data interchange (EDI), inventory management systems, and automated data collection systems."
[04:31:13] <wallbroken> this is from wikipedia
[04:31:14] <PaulWay[w]> "If only I hadn't foolishly assumed that just because I'm not doing payments *now* that I'd never have to do them *in the future*!"
[04:31:19] <PaulWay[w]> "Oh, woe is me!"
[04:31:21] <dre> oh boy
[04:31:31] <PaulWay[w]> "I wish I had the ability to learn!"
[04:31:42] <PaulWay[w]> LOL.
[04:31:50] <PaulWay[w]> Oh, wallbroken, you really are all broken aren't you?
[04:31:56] <bparker> no need to be a dick
[04:32:10] <dre> wallbroken, how is this difficult to make? you want stores and warehouse to have orders.
[04:32:13] <dre> why not do in excel?
[04:32:23] <dre> many warehouses were managed in excel.
[04:32:42] <wallbroken> do you mean a worksheet?
[04:33:07] <dre> wallbroken, herer you go: https://github.com/Nyamador/Django-React-Warehouse-Management-System
[04:33:12] <wallbroken> because excel doesn't let you to manage items by images
[04:34:36] <bparker> ?
[04:36:19] <FunkyBob> either way
[04:36:27] <FunkyBob> you described a system to us... we helped you make it
[04:36:35] <FunkyBob> then later, it  turned out what you needed was not what oyu described
[04:36:39] <FunkyBob> so .... you need to change your code
[04:36:55] <FunkyBob> but you've spent, what, a month now crying about having to change it
[04:37:01] <FunkyBob> instead of just changing it
[04:37:09] <bparker> our warehouses were also managed in excel initially, now it's django
[04:37:09] <wallbroken> FunkyBob: have you read the definition of e-commerce i posted?
[04:37:19] <bparker> semantics
[04:38:13] <bparker> but then we sold the business and now they just want to use shopify for everything ><
[04:38:43] <bparker> who already took away credit card processing privileges from them once, because PPE is/was banned for some reason
[04:39:55] <FunkyBob> wallbroken: I don't give a flying fuck if you want to tcall it e-commerce or not
[04:39:57] <FunkyBob> we don't
[04:40:00] <FunkyBob> we're not interested
[04:40:03] <FunkyBob> that's not hte point at issue here
[04:40:16] <FunkyBob> call it a wormdo... we don't care
[04:41:48] <FunkyBob> wallbroken: but yes, so far as most people here are concerned... if it looks like a duck, quacks like a duck, and shits like a duck
[04:41:51] <FunkyBob> we're going to call it a duck
[04:42:17] <FunkyBob> if you want this process to go more smoothly...
[04:42:28] <FunkyBob> you can start by regularly answering our questions
[04:42:37] <FunkyBob> because early on we kept asking them to understand your needs
[04:42:51] <FunkyBob> and you'd just keep saying "no, it's not e-commerce...  no I don't need orders... no, it just works like this"
[04:42:54] <FunkyBob> so we believed you
[04:43:03] <FunkyBob> and what happened?  well, it turns out you DO need orders
[04:43:13] <FunkyBob> it more or less IS e-commerce, just without the payments
[04:43:17] <FunkyBob> it's order fulfillment
[04:43:21] <bparker> classic example of an XY problem
[04:48:08] <FunkyBob> wallbroken: remember when you said you wanted to hire someone to build it for yhou?
[04:48:17] <FunkyBob> wht did I tell you you would need to do first?
[04:49:06] <wallbroken> a list of requirements of the application should work
[04:49:13] <FunkyBob> yes
[04:49:29] <FunkyBob> wallbroken: now... imaging you hired them... then two months later you changed the requriements
[04:49:32] <FunkyBob> what would theyt have to do?
[04:50:45] <FunkyBob> becasuse this is where you find yourself right now
[04:51:03] <FunkyBob> what you described to us initially... no mater how many questions we had...
[04:51:10] <FunkyBob> is not what we've discovered you actually need
[04:51:35] <FunkyBob> so of course... most of the work you've done is no longer relevant
[04:52:06] <FunkyBob> surely at your day job you never start a piece of work without understanding the requrements first?
[04:54:51] <wallbroken> FunkyBob: many aspects of needs were discovered during development
[04:55:08] <FunkyBob> wallbroken: yes... and that happens
[04:55:19] <FunkyBob> and when that happens, we have tyo change our code
[04:55:51] <FunkyBob> this is why, for instance, "migrations" exist in django
[04:56:41] <wallbroken> but your "order" model has something critic
[04:56:48] <wallbroken> imagine the store makes an order
[04:56:59] <wallbroken> now, an item of that order has a defect
[04:57:14] <wallbroken> the store ships back that defected item to the warehouse
[04:57:21] <wallbroken> te order terminates
[04:57:26] <FunkyBob> the order is not the shipment
[04:57:34] <FunkyBob> nor the stock item
[04:57:34] <wallbroken> how should the warehouse keep track of that defected item?
[04:57:37] <FunkyBob> it is an order
[04:57:59] <FunkyBob> if you want to track returns, you will need to model that
[04:58:09] <FunkyBob> if you want to track fulfillments, you will need to model that
[04:58:19] <FunkyBob> as we discussed many times
[04:58:29] <wallbroken> the fact that an item has a defect it's an information which must live also inside the warehouse
[04:58:30] <FunkyBob> you can't know a serial# on the order, but you can on the shipment.
[04:58:45] <wallbroken> so, to do that, you need to identify each single pair of shoes
[04:58:52] <wallbroken> also with the same SKU
[04:58:54] <FunkyBob> wallbroken: sure... so the warehouse will need a model  to record that shoe X was returned from store Y with defect as...
[04:59:08] <FunkyBob> well, not necessarily
[04:59:19] <FunkyBob> you can assign a defect ID when the shoes are returned
[04:59:27] <wallbroken> and it's not to set a progressive number to all the objects with the same sku?
[04:59:40] <FunkyBob> it could be... but doesn't have to be
[04:59:45] <FunkyBob> it depends on your business needs
[04:59:56] <FunkyBob> as I explained before
[05:00:10] <FunkyBob> your Warehouse could log the serial number of each item it ships to fulfill an order
[05:00:18] <wallbroken> it could be fun to know how usually the main distribution centers manage this problem
[05:00:19] <FunkyBob> and then you can track the history of that exact pair of shoe
[05:00:33] <FunkyBob> i'm describing to you a system I implemented two decades ago
[05:00:41] <wallbroken> afaik a warehouse just track a stock id
[05:00:44] <FunkyBob> but why would you listen  to me?
[05:00:45] *** Joins: Steve-Dusty (~Steve-Dus@user/steve-dusty)
[05:00:48] <Steve-Dusty> what's causing this erro
[05:00:49] <Steve-Dusty> https://dpaste.org/Nvm1
[05:01:15] <FunkyBob> Steve-Dusty: the template the view wants ... does not exist
[05:01:43] <wallbroken> Exception Type:	TemplateDoesNotExist
[05:01:47] <wallbroken> in fact
[05:01:49] <Steve-Dusty> https://dpaste.org/H3i1
[05:01:50] <FunkyBob> yeah
[05:02:14] <FunkyBob> tickets/student_form.html
[05:02:14] <wallbroken> you need to define the template path
[05:02:23] <FunkyBob> wallbroken: that's one option
[05:02:31] <FunkyBob> the other is create a template where the view is looking for it
[05:02:36] <Steve-Dusty> this is so inflexible. is this telling me that I need to create a new HTML for every template?
[05:02:40] <FunkyBob> based on {app_label}/{model_name}_{action}.html
[05:02:40] <Steve-Dusty> POST form*
[05:02:52] <FunkyBob> Steve-Dusty: what?
[05:03:08] <Steve-Dusty> because I want to just create 2 buttons so that users can add or delete tickets
[05:03:13] <Steve-Dusty> I dont want a brand new "edit" page
[05:03:28] <Steve-Dusty> it'll be at the same place as class_detail.html
[05:03:28] <FunkyBob> Steve-Dusty: most likely it wants to render a page because the POST did not pass validation
[05:03:56] <FunkyBob> Steve-Dusty: I think y ou're making assumptions about things that aren't so
[05:04:00] <wallbroken> Steve-Dusty: add this to your view class: template_name = 'tickets/student_form.html'
[05:04:53] <FunkyBob> Steve-Dusty: is this a CreateView ?
[05:04:55] <PaulWay[w]> Steve-Dusty: you can use template bases to make your HTML writing easier.
[05:04:59] <Steve-Dusty> UpdateView
[05:05:00] <FunkyBob> I'm guessing it is because it's called add_ticket
[05:05:03] <Steve-Dusty> ClassTicketAddView
[05:05:12] <FunkyBob> ...
[05:05:19] <FunkyBob> why is an AddView based on an Updateview?
[05:05:23] <PaulWay[w]> But you can also put clever things in your template to only display edit tools if you're allowed to edit, and stuff like that.
[05:05:27] <Steve-Dusty> cuz add tickets
[05:05:31] <FunkyBob> so?
[05:05:33] <FunkyBob> it's a create
[05:05:40] <wallbroken> FunkyBob: i asked to a customer of the company where i work. they told that they don't have a way to identify each single t-shirt. but they just have a shipment stock tracking number
[05:05:59] <Steve-Dusty> i renamed it to `StudentTicketUpdateView`
[05:06:03] <FunkyBob> wallbroken: so you can't track each item... you'll only be able to track returns.
[05:06:10] <FunkyBob> Steve-Dusty: but what is its purpose?
[05:06:15] <wallbroken> but all the items inside of that cannot be tracked
[05:06:23] <FunkyBob> wallbroken: not unusual
[05:06:27] <Steve-Dusty> it'll add a ticket to student
[05:06:30] <FunkyBob> wallbroken: Coke can't track each can
[05:06:32] <Steve-Dusty> if you press it
[05:06:37] <FunkyBob> Steve-Dusty: so it _creates_ a new Ticket?
[05:06:39] <FunkyBob> Steve-Dusty: not a Student
[05:06:46] <Steve-Dusty> no, ticket is already created
[05:06:49] <Steve-Dusty> it'll EDIT it
[05:06:51] <FunkyBob> ...
[05:06:55] <Steve-Dusty> update it to +=1
[05:07:00] <Steve-Dusty> ticket default = 0
[05:07:01] <FunkyBob> so it's not an Add
[05:07:04] <Steve-Dusty> if i press Add it becomes 1
[05:07:07] <FunkyBob> or it is an Add?
[05:07:07] <Steve-Dusty> ok
[05:07:12] <Steve-Dusty> add
[05:07:13] <FunkyBob> oh... it's an INCREMENT?
[05:07:16] <Steve-Dusty> yes
[05:07:21] <FunkyBob> words matter :)
[05:07:26] <Steve-Dusty> yk those ticket thingies teachers give to little children
[05:07:28] <Steve-Dusty> if they be good
[05:07:30] <Steve-Dusty> they give them a ticket
[05:07:31] <FunkyBob> no, I don't
[05:07:33] <FunkyBob> ok
[05:07:39] <Steve-Dusty> or like a toy
[05:07:42] <FunkyBob> my daughter's teacher just writes up points in the corner of the board
[05:07:46] <Steve-Dusty> yes like that
[05:07:46] <Steve-Dusty> points
[05:07:49] <FunkyBob> ok
[05:07:52] <Steve-Dusty> add a point
[05:08:06] <wallbroken> FunkyBob: do you think their business decision to not track items is right?
[05:08:15] <Steve-Dusty> yes
[05:08:20] <FunkyBob> wallbroken: i think it's practical
[05:08:21] <Steve-Dusty> nobody wants to track 9 billion cans
[05:08:31] <PaulWay[w]> Not individually anyway.
[05:08:36] <PaulWay[w]> And T-shirts are fungible.
[05:08:44] <FunkyBob> Steve-Dusty: so... is the ticket count stored on the student?
[05:08:53] <Steve-Dusty> yes
[05:08:56] <Steve-Dusty> Student model
[05:08:58] <FunkyBob> Steve-Dusty: and you always want to add 1?  or is it "set to what the teacher chooses"?
[05:09:04] <Steve-Dusty> always add one
[05:09:06] <Steve-Dusty> easiest
[05:09:11] <FunkyBob> so y ou don't even need a form
[05:09:21] <Steve-Dusty> but I need to make a POST request..
[05:09:26] <FunkyBob> yes
[05:09:36] <PaulWay[w]> Fortunately, the Italian word for 'fungible' is 'fungibile' :-)
[05:09:37] <FunkyBob> but that doesn't require a Form class, or an Update view
[05:09:42] <FunkyBob> PaulWay[w]: :P
[05:09:45] <PaulWay[w]> So I think the concept should get across.
[05:09:50] * FunkyBob considers making cacio e pepe tonight...
[05:09:52] <Steve-Dusty> what does that require?
[05:09:53] <Steve-Dusty> lOl
[05:10:16] <FunkyBob> Steve-Dusty: a view that gets the student PK in the URL... then does a query to increment their tickets value
[05:10:27] <Steve-Dusty> what's the view called?
[05:10:33] <FunkyBob> Student.objects.filter(pk=pk).update(ticket=F('tickets')+1)
[05:10:38] <FunkyBob> Steve-Dusty: whatever makes sense to you
[05:10:40] <Steve-Dusty> so i'll use FBVs
[05:10:45] <FunkyBob> that wil lbe easier, yes
[05:11:10] <Steve-Dusty> kj gtg
[05:11:11] <Steve-Dusty> violini
[05:11:12] <FunkyBob> wallbroken: see how this works? we discuss requirements, understand the process, then affect a solution.
[05:12:13] <wallbroken> it's called "model analysis"
[05:12:31] <FunkyBob> wallbroken: yes... but when we try it with you, you ignore most of our questions
[05:12:33] *** Quits: lorcab (~user@197.251.194.240) (Remote host closed the connection)
[05:12:47] <FunkyBob> then call us rude when we give up out of frustration
[05:12:49] <wallbroken> or somebody they call it "solution designing"
[05:13:21] <PaulWay[w]> No no, please continue.
[05:13:22] <FunkyBob> again, we're more interested in the results than fancy names
[05:13:41] <FunkyBob> we want the discussion to continue
[05:13:43] <wallbroken> FunkyBob: they asked me a strange thing
[05:13:47] <wallbroken> i told them: fuck of
[05:13:49] <FunkyBob> they who?
[05:13:58] <wallbroken> the committent of my project
[05:14:22] <wallbroken> they asked me aninterface to feed the database using "rabbitMQ" json based messages
[05:14:28] <FunkyBob> not sure that's the right word... committment?
[05:14:35] <FunkyBob> ok
[05:14:37] <PaulWay[w]> A feature?
[05:14:40] <FunkyBob> sounds like a good system
[05:14:46] <PaulWay[w]> Perfectly reasonable.
[05:14:52] <wallbroken> rabbitMQ is a message broker system
[05:14:59] <PaulWay[w]> We use another messaging system but we do that here.
[05:15:05] <FunkyBob> yes, i'm familiar with it
[05:15:25] <PaulWay[w]> Fairly easy to have a continually running process that waits for those messages and updates your database from them.
[05:15:39] <PaulWay[w]> But by all means tell them to 'fuck off' if you like.
[05:15:45] <FunkyBob> wallbroken: however, yeah, I don't think that's an integration I'd be doing free
[05:16:21] <wallbroken> it's an integration can be done with django?
[05:16:39] <PaulWay[w]> Yes.
[05:17:03] <FunkyBob> wallbroken: sure can
[05:17:54] <PaulWay[w]> Of course, you'll have to learn how that works as well....
[05:18:54] <wallbroken> well. you need two parts: a "connector" software, and a software which processes json files
[05:19:19] <bparker> sounds like overcomplication
[05:19:27] <wallbroken> the connector software should implement the protocol to talk with a rabbitMQ procuder
[05:20:10] <PaulWay[w]> Producer, yes.
[05:20:14] <FunkyBob> bparker: if t hey alreadyt have the message queue...
[05:20:39] <FunkyBob> wow, my typing is going to shit :/
[05:21:26] <wallbroken> json is ha hierarchical data scructure. does django know how to move on it?
[05:22:02] <FunkyBob> Python has a json lib built in
[05:22:20] <FunkyBob> JSON is a serialisation format... a way of turning data into strings so you can write it to files, send over a network, etc...
[05:22:24] <FunkyBob> it is not a data structure
[05:22:40] <FunkyBob> you would parse it into Python data structures
[05:22:45] <bparker> what does 'move on it' mean
[05:22:58] <wallbroken> it has a structure of levels with a specific syntax
[05:22:59] <PaulWay[w]> Yes, if you'd done a bit of googling you might have found that Python can read and write JSON.
[05:23:06] <FunkyBob> (pet peeve that people think of JSON like a data type)
[05:23:12] <wallbroken> you can do it as array of items, or just as a single item
[05:23:13] <bparker> python has multiple json libs, and django explicitly also has its own json serializer
[05:23:19] <FunkyBob> wallbroken: it is a syntax, yes... it is not a data structure
[05:23:26] <FunkyBob> wallbroken: it's a way of writing down data structures.
[05:23:47] <wallbroken> it's like xml, right?
[05:24:03] <FunkyBob> similar, yes, in they're both serialisation formats
[05:24:04] <PaulWay[w]> Yes, basically.
[05:24:32] <PaulWay[w]> wallbroken: So yes, you can have a process with a RabbitMQ consumer that acts on the messages it gets, where the message is sent in JSON.
[05:25:07] <FunkyBob> your consumer process would then parse the JSON, and act on what it finds in the message
[05:25:12] <PaulWay[w]> Yep.
[05:25:36] <wallbroken> another requirement:
[05:25:39] <FunkyBob> PaulWay[w]: did I ever describe the turnstile control system I wrote?
[05:25:47] <FunkyBob> it used d-bus internally
[05:25:53] <PaulWay[w]> You must have, but not to me :-)
[05:25:56] <wallbroken> if after a network outage, a message comes after
[05:25:59] <wallbroken> it should be ignored
[05:26:10] <wallbroken> if the header date is before another one
[05:26:13] <PaulWay[w]> wallbroken: so you want 'idempotence' there.
[05:26:39] <PaulWay[w]> You need to know what the message is and what it means.
[05:26:40] <wallbroken> each json has an header
[05:26:47] <wallbroken> in which is contained a timestamp
[05:27:09] <PaulWay[w]> Tracking a date and deciding to ignore all messages before a particular timestamp, and having to update that timestamp as you receive new messages, is going to cause you problems.
[05:27:15] <FunkyBob> wallbroken: each message
[05:27:16] <PaulWay[w]> Because messages are not guaranteed to arrive in order.
[05:27:18] <FunkyBob> not each json
[05:27:27] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[05:27:33] <wallbroken> FunkyBob: https://dpaste.org/ZkBc
[05:27:39] <PaulWay[w]> Well, the JSON payload may have a timestamp in there too.
[05:27:40] <FunkyBob> you don't care if it's written in blue or red pen... just what the words mean
[05:27:48] <wallbroken> yes, each message
[05:27:56] <wallbroken> has an header with that
[05:28:40] <FunkyBob> oh boy... SAP, eh?
[05:28:44] <PaulWay[w]> Yes.  And you probably want to think more about 'what does the message ask us to do' than 'when was it issued'.
[05:28:48] <PaulWay[w]> SAP, eh.
[05:29:19] <wallbroken> that is that "T" inside the datetime?
[05:29:26] <PaulWay[w]> Time.
[05:30:03] <FunkyBob> ISO 8601
[05:30:05] <bparker> ftw
[05:30:06] <PaulWay[w]> Because I guarantee that at some point in the future you'll find you either didn't update the 'last message processed' timestamp correctly, or any one of about six more things I can think of that can go wrong there, and you will process a message when you shouldn't have or ignore one that you should have processed.
[05:30:07] <FunkyBob> it's a standard date/time format
[05:30:42] <wallbroken> so, for each message, i should execute a database query of all the message ordering by ascending datetime, and importing that message only if the timeoccurred is the last
[05:30:45] <PaulWay[w]> So, wallbroken, I hope you're paying attention, because if you come back in six months and say "this timestamp updating thing isn't working, can you please help" I will laugh in your face.
[05:31:12] * PaulWay[w] smiles a smile.
[05:31:42] <wallbroken> is there a more efficient way to check if a message is the last?
[05:31:52] <wallbroken> in the way of it will not overwrite a newer one?
[05:32:11] <FunkyBob> wallbroken: if your DB has an index on the timetsamp field asking for the MAX() is quite cheap...
[05:32:18] <FunkyBob> wallbroken: but are you really going to keep every message in the DB?
[05:32:54] <PaulWay[w]> Don't keep every message.
[05:32:58] <wallbroken> unfortunately i cannot change the message format. if it was possible, i could have asked the produce to add a progressive number
[05:33:05] <wallbroken> that way it would be all easier
[05:33:05] <PaulWay[w]> You're really not listening to me are you wallbroken?
[05:33:40] <PaulWay[w]> More fool you then.
[05:34:12] <wallbroken> for example: last processed message is number 24, so, if the current message is the number 18 i can trash it
[05:34:18] <PaulWay[w]> Sei piÃ¹ uno sciocco per non avermi ascoltato.
[05:34:57] <FunkyBob> iirc, MQTT has ways to configure queues to handle keeping or discarding messages between connections, etc...
[05:35:45] <wallbroken> PaulWay[w]: i'm just thinking about the most powerful and reliable way in each scenario
[05:35:59] <wallbroken> because i don't want data loss
[05:36:04] <FunkyBob> wallbroken: thos two things rarely coincide
[05:36:07] <FunkyBob> powerful, and reliable
[05:36:17] <PaulWay[w]> And I'm telling you that you need to look at it in a different way.
[05:37:31] <PaulWay[w]> Not "which messages should I ignore?", but "has the operation inside the message already been done?"
[05:37:32] <wallbroken> so are you saying that this problem is already managed at rabbitmq protocol level?
[05:37:39] <PaulWay[w]> No.
[05:38:33] <FunkyBob> rabbitMQ is an AMQP client, isn't it?
[05:38:49] <wallbroken> PaulWay[w]: i assume that if a specific message already is in the database, that message has been processed
[05:39:04] <wallbroken> so, any older one than that, could be ignored
[05:39:04] <PaulWay[w]> No.
[05:39:17] <PaulWay[w]> The question is: what does the message tell you to do?
[05:39:27] <PaulWay[w]> For instance, it might be an "Add this new shoe SKU".
[05:39:43] <wallbroken> 		"actionType":"update",
[05:39:49] <PaulWay[w]> So in that case the code would look at the database and would only add the new shoe SKU if it didn't already exist.
[05:39:52] <wallbroken> it's written in the header
[05:40:02] <PaulWay[w]> That was _not_ in the example you gave.
[05:40:31] <PaulWay[w]> If you got a "delete this old shoe SKU, we don't sell it any more" message, then you'd only delete the SKU if it currently existed.
[05:40:34] <PaulWay[w]> And so on.
[05:40:35] <bparker> FunkyBob: ye
[05:41:01] <PaulWay[w]> That way, you can process the same "add this new shoe SKU" message as many times as you like, and it will only add it once.
[05:43:14] <FunkyBob> PaulWay[w]: that assumes wallbroken has any influence over the message design... or that the messages are designed sanely
[05:43:41] <wallbroken> in fact. i cannot change the message format
[05:43:42] <PaulWay[w]> I want to get to the basic principle before we start dealing with the complications :-)
[05:44:26] <FunkyBob> PaulWay[w]: sure
[05:44:32] <FunkyBob> wallbroken: yeah, I think you'd mentioned that.
[05:44:40] <FunkyBob> wallbroken: but it also depends on the messages be well designed
[05:44:44] <wallbroken> the messages are externally generated, they come from companies which feeds the items to the warehouse
[05:45:43] <wallbroken> there is also a bytecode of the jpeg image
[05:45:50] <PaulWay[w]> The problem with tracking which messages you've responded to - by ID and especially by timestamp - is the disparity between the message and the database.
[05:46:18] <wallbroken> it looks like more an integration problem
[05:46:21] <PaulWay[w]> I.e. has the message before this timestamp actually been processed?  Impossible to know.
[05:46:27] *** Joins: Steve-Dusty45 (~Steve-Dus@user/steve-dusty)
[05:46:30] <Steve-Dusty45> hey
[05:46:50] <PaulWay[w]> You'd have to look at the actual model to know if the message has been processed.
[05:46:56] <wallbroken> PaulWay[w]: if he messate is in the database, it means that has been processed
[05:46:58] <Steve-Dusty45> how good am I at django: beginner, novice, intermediate, advanced
[05:47:01] <wallbroken> *message
[05:47:05] <PaulWay[w]> Not even close.
[05:47:14] <PaulWay[w]> You can record a message but maybe you didn't process it.
[05:47:31] <FunkyBob> wallbroken: how many messages are you likely to receive?  how much are you willing to spend on your DB storage space?
[05:47:31] <PaulWay[w]> And you could have processed a message and changed your database but not stored the message.
[05:47:36] <PaulWay[w]> Or maybe the timestamps were out of order.
[05:47:41] <wallbroken> wait
[05:47:48] <PaulWay[w]> Or maybe the messages you got were out of order.
[05:47:50] <FunkyBob> storing messages in the DB may be a very bad idea
[05:47:53] <PaulWay[w]> Or maybe you got a duplicate message.
[05:48:05] <wallbroken> in my solution design i would have 2 db tables: a json messages cache
[05:48:11] <PaulWay[w]> LOL
[05:48:14] <PaulWay[w]> Dude.
[05:48:15] <wallbroken> and a final converted table
[05:48:27] <PaulWay[w]> No, please, go ahead and ignore my advice here.
[05:48:33] <PaulWay[w]> You're the master fucking designer.
[05:48:37] <PaulWay[w]> Go right ahead and do what you think.
[05:48:40] <wallbroken> json message cache table would be managed with the FIFO logic
[05:48:46] <PaulWay[w]> Ignore everyone that says you're doing it the wrong way.
[05:48:57] <Steve-Dusty45> what messages
[05:49:11] <wallbroken> when a message has been processed, each field of the jeson will be inserted in a db row
[05:49:15] <PaulWay[w]> What would you like us to do when you come to us later and ask us how to fix this broken system you've got?
[05:49:21] <Steve-Dusty45> isnt FIFO data structures
[05:49:25] <wallbroken> and the corresponding message would be removed from json cache table
[05:49:42] <PaulWay[w]> wallbroken: what's a database transaction?
[05:49:59] <FunkyBob> ooh, wallbroken should know this from $DAYJOB
[05:50:05] <PaulWay[w]> You'd think.
[05:50:21] <dre> Steve-Dusty45, from what I've gathered you're here: [Beginner]--------------|--[Novice]
[05:50:34] <FunkyBob> dre: :)
[05:50:39] <wallbroken> PaulWay[w]: it's something atomical. something that happens in a single time
[05:50:52] <PaulWay[w]> Uh-huh.
[05:51:05] <PaulWay[w]> Going to use them here?
[05:51:25] <Steve-Dusty45> dre how good do you need to be to get internship (i promise im just wondering i dont want anything)
[05:51:44] <wallbroken> sure. each json message is going to be processed in a single stage
[05:51:51] <FunkyBob> Steve-Dusty45: how long is a piece of string?
[05:51:57] <dre> Steve-Dusty45, entirely depends on who's doing it
[05:52:08] <Steve-Dusty45> any length..
[05:52:15] <Steve-Dusty45> it's just a data type
[05:52:23] <PaulWay[w]> Exactly 4.3 centimetres.
[05:52:30] <PaulWay[w]> Got one right here.
[05:52:31] <wallbroken> in my mind there will be something like MQIncoming table which will contain the message queue
[05:52:31] <dre> but as a general rule, if you can show that you've made something, it works wonders for getting internships or jobs.
[05:52:51] <PaulWay[w]> wallbroken: OK, but I'm not helping you with any of that.
[05:53:00] <PaulWay[w]> You've decided you know better than me, so you go right ahead.
[05:53:09] <Steve-Dusty45> no
[05:53:11] <wallbroken> some python code should process the records in it until the cache will be empty
[05:53:24] <Steve-Dusty45> my violin string is 20 inches
[05:53:48] <wallbroken> while some_message_in_cache:
[05:53:57] <wallbroken>     process_it
[05:53:59] <Steve-Dusty45> very good german made evah pirazzi gold
[05:54:10] <FunkyBob> * not real gold :P
[05:54:24] <PaulWay[w]> Gold plated?
[05:54:30] <Steve-Dusty45> real color
[05:54:33] <FunkyBob> gold alloy?
[05:54:44] <Steve-Dusty45> aluminium, it's just a version
[05:55:07] <PaulWay[w]> Aluminium strings?  I would have thought any alloy of aluminium didn't have the tensile strength.
[05:55:08] <dre> I think i ate an apple sticker
[05:55:33] <PaulWay[w]> dre: don't worry, they dissolve in the hydrochloric acid in your stomach.
[05:55:33] <Steve-Dusty45> 2000 years ago they used whiskers
[05:55:38] <FunkyBob> PaulWay[w]: yeah, but those german engineers, mate...
[05:55:43] <PaulWay[w]> FunkyBob: touche.
[05:55:47] <wallbroken> i'm going to sleep
[05:55:52] <wallbroken> 3:25 AM here
[05:55:55] <wallbroken> bye all
[05:55:59] <dre> ~
[05:56:07] <Steve-Dusty45> livers*
[05:56:09] <Steve-Dusty45> bye
[05:56:17] <PaulWay[w]> FunkyBob: or, for the engineers, Du berÃ¼hrst mich
[05:56:39] <PaulWay[w]> Gut strings were traditional.
[05:56:49] <PaulWay[w]> Very unusual to get hair strings.
[05:57:09] <PaulWay[w]> Multiple fibres would dampen the vibration.
[05:58:20] <Steve-Dusty45> why do so many ppl have bachelor's degree
[05:58:25] <Steve-Dusty45> stack overflow survey
[05:58:32] <dre> because we've all been duped
[05:58:46] <PaulWay[w]> It's useful.
[05:59:02] <PaulWay[w]> And they rarely give out spinster's degrees.
[05:59:23] <dre> it is useful. it helps to push you into higher level thinking and prioritising and things.
[05:59:48] <PaulWay[w]> And having the basic knowledge of the fundamentals of computing and programming is important.
[05:59:57] <Steve-Dusty45> is react harder or django harder
[06:00:00] <Steve-Dusty45> in your opinion
[06:00:17] <dre> alright surveybot
[06:00:39] <PaulWay[w]> Are oranges or tea-cosies harder, in your opinion?
[06:00:57] <PaulWay[w]> It's not a very meaningful question.
[06:01:03] <dre> definitely tea-cosies
[06:01:11] <dre> have you tried to ingest one of those?
[06:01:17] <FunkyBob> I misread that
[06:01:18] <dre> knocked me out for a week but i got there in the end
[06:01:23] <FunkyBob> as "have you tried to insert one of thise"
[06:01:31] <dre> also works
[06:01:33] <FunkyBob> and thought this was turning into a VERY different conversation
[06:01:36] <PaulWay[w]> LOL.
[06:02:59] <Steve-Dusty45> since im a novice in django that means ik python
[06:03:00] <Steve-Dusty45> right
[06:03:22] <dre> Steve-Dusty45, are you currently trying to apply for an internship?
[06:03:25] <Steve-Dusty45> some ppl asked me "do u even know python"
[06:03:27] <Steve-Dusty45> dre no
[06:03:38] <Steve-Dusty45> i just wanna compare me to pros
[06:03:49] <Steve-Dusty45> but why you ask?
[06:04:23] <dre> beause you keep getting in here with random questions that we wouldn't know the answer to.
[06:05:04] <Steve-Dusty45> i want to learn react.js so i want to estimate how long it'd take ne
[06:05:20] <FunkyBob> about 4
[06:05:24] <dre> ^
[06:05:31] <dre> I'm with FunkyBob on this one
[06:05:43] <Steve-Dusty45> -_-
[06:05:51] <dre> Steve-Dusty45, estimations would never work, just go out there and learn it. you either get it, or you practise until you do.
[06:05:51] <Steve-Dusty45> how fast do u type
[06:05:58] <dre> 75 wpm
[06:06:12] <FunkyBob> it's been a decade or emore since I did a typing speed t est
[06:06:19] <FunkyBob> am sure I got over 90wpm at some point
[06:06:27] <dre> I like that question because I have a nice answer for it and it makes me look good :P
[06:06:32] <FunkyBob> heh
[06:06:41] <dre> FunkyBob, ever played "typing of the dead" ?
[06:06:46] <FunkyBob> no?
[06:06:46] <dre> great game
[06:07:13] *** Quits: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net) (Quit: Konversation terminated!)
[06:07:15] <Steve-Dusty45> 120 wpm
[06:07:16] <dre> really good at practising typing. it's in the style of those old rail shooters; zombies coming to you, you gotta type out comical phrases to kill them.
[06:07:18] <dre> great stuff
[06:07:29] <Steve-Dusty45> i play nitrotype
[06:07:37] <Steve-Dusty45> im god nitrotyper
[06:08:05] <Steve-Dusty45> huuuWHAT over a decade of no typing test?
[06:08:57] <dre> https://www.youtube.com/watch?v=sNfQ_B6_xy8
[06:09:11] <dre> no bot in this channel, but typing of the dead ^
[06:09:20] <FunkyBob> Steve-Dusty45: it's been even longer since I did a driving test... so what?
[06:09:37] <FunkyBob> why would I do a regular typing test?
[06:10:18] <PaulWay[w]> I do a regular typing test, it's called doing my job.
[06:10:23] <Steve-Dusty45> bcuz fun
[06:10:45] <dre> PaulWay[w], lol
[06:11:01] <FunkyBob> it's like the diference between -do and -jutsu...
[06:11:22] <dre> I'm failling that typing test right now actually
[06:11:24] <Steve-Dusty45> shadow clone jutsu
[06:11:28] <FunkyBob> I can study the art, or practice the implementation
[06:11:38] <FunkyBob> application
[06:13:26] <dre> FunkyBob, i don't get what you mean by "-jutsu"
[06:14:22] <FunkyBob> dre: like the difference between aikido, and aikijujutsu
[06:14:28] <Steve-Dusty45> dojutsu
[06:14:34] <Steve-Dusty45> it's the eye technique
[06:14:37] <Steve-Dusty45> like the sharingan
[06:14:55] <dre> I thought it was "jitsu" but you've got me curious now.
[06:15:00] <FunkyBob> though as I research more now, it seems the differences I was told are bullshit :P
[06:15:13] <FunkyBob> dre: there are various anglicised versions
[06:15:24] <dre> ahh yes, information from the internet, how consistent
[06:15:42] <GinFuyou> "dou" is "way", "jutsu" is "skill" (roughly)
[06:15:48] <Steve-Dusty45> how did you learn JS?
[06:15:51] <dre> was it meant to be the doing and the application or something
[06:15:56] <FunkyBob> Steve-Dusty45: painfully
[06:16:04] <dre> Steve-Dusty45, keep googling and trying shit until you get it right
[06:16:11] <dre> jsjutsu
[06:16:28] <Steve-Dusty45> should i take a course
[06:16:31] <Steve-Dusty45> or just google
[06:16:34] <FunkyBob> GinFuyou: it was explained to me that you would recreationally study a do, but, say, a soldier would practice a jutsu...
[06:16:38] <FunkyBob> guess it was wrong
[06:16:54] <dre> Steve-Dusty45, depends on goals
[06:17:22] <Steve-Dusty45> become a pro level javascripter not a beginner
[06:17:32] <GinFuyou> Well, I just referred literal kanji meaning, it may be more specifically in practice
[06:17:32] * FunkyBob wanders off to watch a daito ryi aiki jujutso demo
[06:17:35] <dre> if you want to say "look I can do js" the course is an easy option, but I'd probably recommend that you make some things and try out new things.
[06:17:47] <GinFuyou> But they probably follow general idea
[06:17:51] <FunkyBob> ryu, not ryi
[06:18:06] <dre> Steve-Dusty45, to be pro-level you must literally stop talking on irc and start making things
[06:18:31] <dre> for instnace, I made a chrome extension that plots store availability items on a map of australia so I could see where stock was.
[06:18:37] <dre> the previous site didn't have that.
[06:19:04] <Steve-Dusty45> did you web scrape?
[06:19:24] <dre> what do you mean?
[06:19:43] <Steve-Dusty45> create a crawler
[06:19:55] <dre> I had to scrape the store addresses to an extent, yes. but that was a 5 min python script and i was done.
[06:20:45] <Steve-Dusty45> what about store availability items?
[06:20:48] <dre> then copied the results into my extension; when on a certain page it would load up the store stock for each of the stores, insert a map on the page, and plot all of the store addresses with the stock at that address
[06:21:07] <dre> they were made available ( but hidden! ) on the front-end of the store.
[06:21:41] <dre> on the frontend you had to manually click through to get to your store and find if they were out of stock or not. my script done it automatically
[06:22:15] <dre> Steve-Dusty45, always think about solving problems, not "how do I fit this random terminology I know into what I'm trying to do"
[06:31:27] *** Quits: hyper_dave (~hyper_dav@197.156.107.21) (Ping timeout: 258 seconds)
[06:31:46] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Ping timeout: 240 seconds)
[06:31:59] *** Joins: hyper_dave (~hyper_dav@197.156.107.21)
[06:32:37] <dre> god damn I love vim
[06:35:26] *** Quits: Steve-Dusty45 (~Steve-Dus@user/steve-dusty) (Quit: Client closed)
[06:39:42] <hyper_dave> Amen
[06:42:13] *** Quits: Guddu (~Guddu@67.73.235.228) (Quit: Leaving)
[06:52:48] *** Joins: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte)
[06:54:50] *** Joins: cbasah (~armycook2@202.185.71.229)
[06:57:16] *** Joins: monokrome (~monokrome@rrcs-173-198-74-166.west.biz.rr.com)
[06:57:36] *** Quits: moldy (~rene@user/moldy) (Ping timeout: 256 seconds)
[06:57:52] *** Quits: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte) (Quit: WeeChat 3.2)
[07:01:34] *** Quits: monokrome (~monokrome@rrcs-173-198-74-166.west.biz.rr.com) (Ping timeout: 256 seconds)
[07:03:33] <schinckel> I was just lamenting how vi(m) doesn't support workflows like `foo | vi | bar`. TextMate does, which is awesome.
[07:03:43] <schinckel> You need to use `vipe` to get that behaviour for vi(m).
[07:16:01] <dre> workflows?
[07:17:50] *** Joins: xkuru (~xkuru@user/xkuru)
[07:17:55] *** Quits: xkuru (~xkuru@user/xkuru) (Client Quit)
[07:18:56] <hyper_dave> I guess schinckel is referring to piping
[07:19:20] <schinckel> Yeah, pipes
[07:29:22] <hyper_dave> What could be possible use of it with vim though?
[07:31:31] *** Joins: monokrome (~monokrome@rrcs-173-198-74-166.west.biz.rr.com)
[07:35:57] *** Quits: monokrome (~monokrome@rrcs-173-198-74-166.west.biz.rr.com) (Ping timeout: 245 seconds)
[07:39:21] <Steve-Dusty> vim = nub
[07:39:23] <Steve-Dusty> use nano
[07:40:42] *** Joins: Steve-Dusty38 (~Steve-Dus@user/steve-dusty)
[07:41:01] <FunkyBob> use what makes you most productive
[07:43:15] <Steve-Dusty38> .net is more popular than django on SO survey 2021
[07:44:13] <Steve-Dusty38> impossibility
[07:44:33] <FunkyBob> that's a nonsense comparison
[07:44:46] <FunkyBob> also, it's SO... it's nonsense to begin with :P
[07:49:58] <cbasah> what is the difference between FormField.label vs FormField.label_tag when should we use label_tag? I couldn't find label_tag in the documentation https://docs.djangoproject.com/en/3.2/ref/forms/fields/#label
[07:59:08] <FunkyBob> cbasah: iirc label_tag renders the for HTML label tag... <label for=... >  ...the whole thing
[07:59:14] <FunkyBob> whereas .label is just the label text
[07:59:50] *** Quits: Steve-Dusty38 (~Steve-Dus@user/steve-dusty) (Quit: Client closed)
[08:00:12] <FunkyBob> label_tag is part of Boundfield
[08:00:13] <FunkyBob> https://docs.djangoproject.com/en/3.2/ref/forms/api/#django.forms.BoundField.label_tag
[08:04:27] *** Joins: Steve-Dusty71 (~Steve-Dus@user/steve-dusty)
[08:05:15] <schinckel> hyper_dave: In my case, I got a list of Jira issues that could be included in the release. I need a way to allow the user to filter those, and then pass that list to something that generates release notes.
[08:05:27] <schinckel> Basically, a user editing step in any workflow, really.
[08:05:49] <PaulWay[w]> Steve-Dusty: you seem strangely driven by other people's opinions.
[08:06:09] <cbasah> thanks FunkyBob
[08:06:16] <schinckel> Also, nano doesn't work as a step in a pipeline like that either.
[08:07:02] <schinckel> It's behaviour is even worse than vi(m). It writes the data to a file...
[08:14:57] *** Quits: audiocat (~audio@2603-8081-1800-00ad-45bc-ff66-5742-0276.res6.spectrum.com) (Ping timeout: 258 seconds)
[08:16:11] *** Joins: audiocat (~audio@2603-8081-1800-00ad-b3f9-ec1a-93ef-ff4f.res6.spectrum.com)
[08:19:30] <Steve-Dusty71> data is ez
[08:19:40] <Steve-Dusty71> no need to remember keywords
[08:19:43] <Steve-Dusty71> commands
[08:19:50] <Steve-Dusty71> nano*
[08:21:01] *** Quits: Steve-Dusty71 (~Steve-Dus@user/steve-dusty) (Quit: Client closed)
[08:24:41] <dre> implying I remember vim commands
[08:24:48] <dre> the magic is all in the fingers baby
[08:25:23] <schinckel> Heh. I was trying to type `import django` just before, and my fingers typed `django django`.
[08:25:28] <schinckel> Twice.
[08:37:33] <FunkyBob> what, not djanog? :P
[08:51:37] <PaulWay[w]> jangdo?
[08:56:34] <PaulWay[w]> 120 combinations, knock yourself out.
[08:58:09] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:09:02] <FunkyBob> PaulWay[w]: you mean permutations </pedant>
[09:09:13] <dre> reminds me of the first time I did pair programming and my partner asked me if I was dyslexic
[09:09:42] *** Quits: Elzington (~Elzington@68.235.43.76) (Ping timeout: 245 seconds)
[09:10:06] <PaulWay[w]> Does that mean you'll now stop being a pedant FunkyBob? ;-)
[09:14:08] <Steve-Dusty> dre that does not apply to me. I cannot code 30 lines of code before going to goolge
[09:29:09] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[09:37:27] *** Joins: sandeepk (~sandeepk@223.130.30.55)
[09:38:43] *** Quits: Steve-Dusty (~Steve-Dus@user/steve-dusty) (Quit: Client closed)
[09:46:55] *** Joins: mattil (~mattil@airio.portalify.com)
[09:47:06] *** Joins: Elzington (~Elzington@68.235.43.12)
[10:17:27] *** Quits: sandeepk (~sandeepk@223.130.30.55) (Ping timeout: 252 seconds)
[10:34:21] *** Joins: sandeepk (~sandeepk@223.130.30.53)
[10:56:20] *** Quits: audiocat (~audio@2603-8081-1800-00ad-b3f9-ec1a-93ef-ff4f.res6.spectrum.com) (Ping timeout: 258 seconds)
[10:56:58] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:4b79:e11c:c2f:5c75) (Ping timeout: 240 seconds)
[11:03:14] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:03:14] *** ChanServ sets mode: +v EvilDMP
[11:13:57] <schinckel> Does one really need to muck around with DRF's APIRequestFactory and force_authenticate when writing unit tests? What is wrong with using the regular django test client?
[11:14:05] <schinckel> That seems to work okay to me.
[11:20:52] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Ping timeout: 258 seconds)
[11:21:43] *** Joins: sreve (~quassel@p4ff44f8b.dip0.t-ipconnect.de)
[11:32:37] *** Quits: mattil (~mattil@airio.portalify.com) (Read error: Connection reset by peer)
[11:33:23] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:33:23] *** ChanServ sets mode: +v EvilDMP
[11:55:04] <FunkyBob> schinckel: maybe because so many pointlessly use token auth with their APIs?
[11:55:54] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:02:44] <schinckel> Yeah, maybe.
[12:22:08] <sreve> hi. Does someone know a supportchat for angular?
[12:36:17] <schinckel> Does DRF's token authentication not use the django auth backend API?
[12:36:28] <schinckel> I haz a sneaking suspicion it does not.
[12:39:25] <schinckel> That seems like a really bad decision.
[12:42:39] *** Joins: brylie (~Thunderbi@88-114-218-113.elisa-laajakaista.fi)
[12:58:17] *** Quits: ianthrive (~ianthrive@166.70.94.161) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[13:06:04] <schinckel> So apparently I can't decorate DRF views with things that look for request.user in my urls.py, because that stops something working .
[13:06:58] *** Joins: moldy (~rene@user/moldy)
[13:08:32] <schinckel> ...and I can't just write a regular view because our clients use JWT authentication, so I'd need to write an additional backend...
[13:08:34] <schinckel> Grr.
[13:08:40] <dre> DRF sounds more and more like a problem
[13:08:47] <schinckel> Yeah, I don't like it.
[13:08:53] <schinckel> Lots of things about it rub me the wrong way.
[13:08:53] <dre> <-- from someone who hasn't used it
[13:09:06] <dre> probably steals cc details too
[13:09:22] *** dre is now known as dre|dinner
[13:09:37] <schinckel> I've only used it when I really have to - someone else (who no longer works with me) implemented our mobile API using it - I would have just used generic views.
[13:20:57] *** Quits: blip2 (~blip2@blip2.net) (Quit: Bye)
[13:21:51] *** Joins: blip2 (~blip2@blip2.net)
[13:24:41] *** Quits: brylie (~Thunderbi@88-114-218-113.elisa-laajakaista.fi) (Quit: brylie)
[13:32:19] *** Quits: blip2 (~blip2@blip2.net) (Quit: Bye)
[13:33:11] *** Joins: blip2 (~blip2@blip2.net)
[13:34:05] *** Quits: blip2 (~blip2@blip2.net) (Client Quit)
[13:36:37] *** Joins: blip2 (~blip2@blip2.net)
[13:51:29] *** Joins: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl)
[14:06:39] *** Quits: fortuno51 (~fortuno51@37.120.156.254) (Ping timeout: 276 seconds)
[14:31:32] *** Quits: explore (uid233125@id-233125.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[14:35:36] *** Quits: sandeepk (~sandeepk@223.130.30.53) (Ping timeout: 258 seconds)
[14:39:25] *** Joins: gillzon (~gillzon@2-249-139-174-no288.tbcn.telia.com)
[14:47:50] <FunkyBob> schinckel: afaik their thing does, but it requires you pass token via Bearer field in Authentication header
[14:53:37] *** Quits: Elzington (~Elzington@68.235.43.12) (Ping timeout: 258 seconds)
[14:54:51] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi)
[14:56:56] <graingert> EvilDMP: come have a look at the cool bridge setup https://gitter.im/celery/celery and https://gitter.im/twisted/twisted have
[14:58:40] <EvilDMP> graingert: Is Gitter the source of chat truth?
[14:58:55] <graingert> EvilDMP: no they're matrix peers
[15:00:49] *** Joins: sandeepk (~sandeepk@223.130.30.53)
[15:03:37] <graingert> EvilDMP: they're real users on both sides
[15:03:54] <graingert> using the IRC libera federation on one side and matrix federation on the other
[15:04:19] *** Joins: Elzington (~Elzington@68.235.43.14)
[15:16:15] *** Joins: thiras (~thiras@user/thiras)
[15:19:39] <EvilDMP> Imagine, a world with a single chat interface.
[15:22:23] <hemebond> EvilDMP: Like Pidgin?
[15:32:03] *** Quits: lithammer (~lithammer@2a02:2770::21a:4aff:fe88:c18d) (Quit: ZNC - http://znc.in)
[15:33:02] *** Joins: lithammer (~lithammer@arch-vps.cloud.tilaa.com)
[15:36:27] *** Quits: serghei (~egrep@user/serghei) (Ping timeout: 252 seconds)
[15:40:34] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[15:42:00] *** Joins: pycode (~pycode@2001:b07:5d28:551:212e:1943:ad55:6aa5)
[15:42:02] <pycode> hello everybody
[15:42:12] <pycode> how can i implement json_object_agg in django? it seems not supported right now
[15:49:20] *** Joins: Stefan92 (~stefan92@217-120-91-25.cable.dynamic.v4.ziggo.nl)
[15:50:30] *** Joins: kezabelle (~kezabelle@cpc119866-nrwh12-2-0-cust31.4-4.cable.virginm.net)
[15:51:50] <Stefan92> Does anyone a alternative of xhrFields in jquery to a post request in python?
[15:57:37] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[15:57:42] *** Joins: ianthrive (~ianthrive@166.70.94.161)
[16:04:27] <pycode> is there a way to force group by clause ?
[16:09:07] <kezabelle> generally speaking, do something which requires a group by. What do you need to forcibly group by that isn't going to otherwise by grouped?
[16:09:15] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[16:09:15] *** ChanServ sets mode: +v EvilDMP
[16:11:21] <graingert> EvilDMP: hemebond that's the opposite of what's happening here
[16:12:41] <pycode> kezabelle, my problem is that i have two models Price and Line so inside the Line model i have models.ForeignKey to Price, but, when i use FilteredRelation i correctly se the LEFT join, BUT... there coul dbe more Line for each Price
[16:12:48] <pycode> so i must group by price.pk
[16:14:53] <kezabelle> j'assume you need the whole price model and the whole line, so subquery is out of the question?
[16:15:11] <pycode> or if i do a filter like .filter(line__somefield__gt=5) without using the filteredrelation
[16:15:16] <pycode> kezabelle, no i need to aggregate
[16:15:27] <pycode> i need to use json_object_agg of postgres
[16:15:37] <pycode> because the LIne model has a json inside so i need to aggregate them
[16:15:56] <kezabelle> buhh won't aggregate force a grouping in that case?
[16:15:58] <pycode> so if i gorup by price.pk i then can aggregate inside ONE json all the "line_some_json_field"
[16:16:10] <kezabelle> this is one of those cases where I dislike the ORM, it's inscrutable sometimes ;)
[16:16:16] <pycode> kezabelle, i suppose, yes but the problem is that django does not have json_object_agg :D
[16:17:26] <kezabelle> hmm. You could possibly make one by copying JSONBAgg?
[16:18:19] <pycode> yes i think that's the way to do...because an aggregation should force the GROUP BY...so i must create one custom agg copying that one
[16:18:27] <kezabelle> but I suppose I can mention the private "you're on your own here, here be dragons" API: a queryset's .query has a .group_by
[16:19:15] <kezabelle> You can force it to do grouping by setting it (its an iterable [list/tuple]), but I can't recall when I last had to _add_ to it (vs the constant desire to remove from it)
[16:19:30] <pycode> :)
[16:19:33] <pycode> ok
[16:19:37] <pycode> i did not know
[16:19:37] <kezabelle> so I can't recall whether it happily takes stringly bits ('price.pk', etc) or whether you have to construct a Col or Expression thing
[16:19:44] <kezabelle> you're not supposed to know :)
[16:19:54] <pycode> ehehe
[16:19:55] <pycode> :D
[16:20:14] <kezabelle> outside of the annotation/aggregation stuff, there's no public documented API for grouping (IIRC)
[16:28:18] <Xeago> Hiya! My template has a line using `{% static .. %}`; in the resulting url, it has (what I think is a cache-bursting) component. What is this called within django and how would I configure/control it during development?
[16:29:05] <Xeago>     <link rel="stylesheet" type="text/css" href="{% static "assets/app.css" %}"/>  # => `static/assets/app.c5b8c50609ad.css`
[16:29:32] *** Joins: mattil (~mattil@helsinki.portalify.com)
[16:30:32] <Xeago> I've tried looking at the storage backends for documentation on this behavior and the `static` built-in template tag/filter.
[16:31:02] <Xeago> Where would be a good place to look deeper?
[16:31:19] <hemebond> Xeago: You have an app or middleware installed or configured that is doing that.
[16:31:32] <hemebond> Check your project settings
[16:32:58] <knbk> Xeago: looks like it's using the manifest file storage: https://docs.djangoproject.com/en/3.0/ref/contrib/staticfiles/#manifeststaticfilesstorage
[16:33:33] <hemebond> Oof, my bad.
[16:34:52] <Xeago> Aha, let me dig into this.
[16:37:38] <pycode> kezabelle, yeah ufortunately the orm has some abscure behaviors :D
[16:37:39] <pycode> eheh
[16:38:47] <Xeago> Hmm, it does look like this indeed, however, I can't find a manifest storage class in my codebase, just a `CachedStaticFilesStorage` which doesn't inherit a ManifestStorage.
[16:41:28] <Xeago> Ah, which has a similar implementation that also hashes.. reading more.
[16:49:58] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[16:50:14] *** Joins: mattil (~mattil@helsinki.portalify.com)
[16:59:08] *** Quits: sandeepk (~sandeepk@223.130.30.53) (Ping timeout: 272 seconds)
[16:59:10] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[16:59:48] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:00:14] *** Quits: pycode (~pycode@2001:b07:5d28:551:212e:1943:ad55:6aa5) (Remote host closed the connection)
[17:00:26] *** Joins: pycode (~pycode@2001:b07:5d28:551:b26b:ae89:369e:921f)
[17:04:18] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 240 seconds)
[17:07:28] *** Joins: sandeepk (~sandeepk@223.130.30.53)
[17:08:10] *** Quits: dre|dinner (~dre@2001:8003:c932:c301:60b3:aefe:6a08:9d70) (Ping timeout: 258 seconds)
[17:14:38] *** Quits: Stefan92 (~stefan92@217-120-91-25.cable.dynamic.v4.ziggo.nl) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[17:15:55] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[17:16:05] *** Joins: Stefan92 (~stefan92@217-120-91-25.cable.dynamic.v4.ziggo.nl)
[17:38:05] <pycode> kezabelle, I am having trouble working with json_object_agg because it also has a filter, for example i can do json_object_agg(key, value) filter (where key is not null)(..) filter (where bl2.line_id is not null)
[17:38:15] <pycode> so i do not know how can i implement that filter part
[17:40:57] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[17:45:26] <kezabelle> er
[17:45:36] <kezabelle> truthfully, I dunno
[17:46:03] <kezabelle> but reading the source, I think you can pass pass filter=??? to your aggregate subclass
[17:46:20] <kezabelle> assuming you're on postgres, which allows for using the .filter_template
[17:46:30] <pycode> NEVERMIND
[17:46:39] <pycode> jsonbagg already supports "filter"
[17:46:42] <pycode> so it works!!
[17:46:43] <pycode> :D
[17:46:56] <kezabelle> there you go :)
[17:47:28] <kezabelle> tbh I had no idea that was even a thing that could be done, so TIL ;p
[17:47:41] <pycode> kezabelle,
[17:47:42] <pycode> class JSONObjectAgg(JSONBAgg):
[17:47:42] <pycode>     function = "JSON_OBJECT_AGG"
[17:47:46] <pycode> that's it! :D
[17:48:14] <kezabelle> yeah, figured/hoped it wouldn't actually end up being substantial if you didn't need to implement the other parts.
[17:48:50] <kezabelle> mostly because if it were substantial, I'd be super out of my depth helping you over IRC :D
[17:50:19] *** Quits: ianthrive (~ianthrive@166.70.94.161) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[17:51:12] <pycode> :)
[17:56:19] *** Quits: gillzon (~gillzon@2-249-139-174-no288.tbcn.telia.com) (Remote host closed the connection)
[18:02:32] *** Quits: Stefan92 (~stefan92@217-120-91-25.cable.dynamic.v4.ziggo.nl) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[18:08:56] *** Joins: Stefan92 (~stefan92@217-120-91-25.cable.dynamic.v4.ziggo.nl)
[18:09:01] *** Quits: Stefan92 (~stefan92@217-120-91-25.cable.dynamic.v4.ziggo.nl) (Client Quit)
[18:22:32] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 258 seconds)
[18:31:05] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:31:06] *** ChanServ sets mode: +v EvilDMP
[18:39:34] *** Joins: ianthrive (~ianthrive@23-30-51-129-static.hfc.comcastbusiness.net)
[18:48:55] <pycode> what is the best way to create a json starting from a queryset?
[18:49:06] <pycode> without touching the queryset with python
[18:49:24] <pycode> i mean, i need to create a json to render charts so i would like to pass the data from db to js directly
[18:49:30] <pycode> without looping via template
[18:51:29] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:53:49] <GinFuyou> .values()
[18:53:51] <GinFuyou> ?
[18:55:28] <pycode> GinFuyou, and then? json_script ?
[18:55:48] <GinFuyou> json.dumps() ?
[18:56:00] <GinFuyou> JsonResponse ?
[18:56:14] <GinFuyou> I don't remember if it serializes itself
[18:57:05] *** Quits: Harlin (~DonQixote@2603:300b:663:e800:5967:2fb0:cc2f:4c7c) (Quit: Leaving)
[18:57:31] <pycode> ok
[18:58:16] *** Quits: ianthrive (~ianthrive@23-30-51-129-static.hfc.comcastbusiness.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[18:59:22] *** Joins: ianthrive (~ianthrive@23-30-51-129-static.hfc.comcastbusiness.net)
[19:02:56] *** Joins: Harlin (~DonQixote@2603:300b:663:e800:9706:5e2f:b431:19bd)
[19:07:22] <pycode> GinFuyou, one more question i have a filter with __in= there i need to do strategy.lines where "lines" field is a manytomany to basically if i do strategy.lines.all() i can see all the Line objects
[19:07:27] <pycode> but how can i pass that list to __in ?
[19:07:54] <pycode> because if i pass strategy.lines i see doing .query that django creates a IN (SELECT.....)
[19:08:01] <pycode> i do not want to do another select there
[19:08:40] <pycode> how can i extract all the IDs i need for the IN clause ?
[19:09:01] <GinFuyou> values_list('id', flat=True) perhaps?
[19:09:36] <GinFuyou> not sure if it is better, I'm not sql specialist
[19:10:23] <pycode> GinFuyou, i think that passing the 1,2,3 ids instead of doing another subquery is surelly better
[19:10:26] <pycode> ok i try with flat
[19:11:19] <GinFuyou> flat will just make it into like simple list-like object
[19:11:58] <GinFuyou> otherwise it's list of tuples iirc
[19:12:19] *** Quits: Harlin (~DonQixote@2603:300b:663:e800:9706:5e2f:b431:19bd) (Quit: Leaving)
[19:12:30] *** Joins: Harlin (~DonQixote@2603:300b:663:e800:9706:5e2f:b431:19bd)
[19:13:13] <kezabelle> values() and values_list() and just passing in models will all do the same thing if the queryset is unevaluated IIRC
[19:13:51] <kezabelle> if you evaluate it to a set of pks and pass that along it'll do WHERE x IN (1, 2, ..)
[19:15:04] <kezabelle> that is, set(..values_list('pk', flat=True)) the raw PKs, but a values_list() alone will still do the subquery ... YMMV, it's been a while since I did it with enough regularity to know for sure :)
[19:15:39] *** Quits: ianthrive (~ianthrive@23-30-51-129-static.hfc.comcastbusiness.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[19:16:22] *** Joins: JoeH_ (uid113241@id-113241.highgate.irccloud.com)
[19:17:10] <pycode> kezabelle, yes exactly
[19:17:16] <pycode> i tested it right now,
[19:17:21] <pycode> it is unevaluated
[19:17:54] <pycode> so it is just the same i mean...i can do a query outside it to get the list of ids or just passing the queryset and django will convert it to SELECT...
[19:17:55] <pycode> ok
[19:18:17] <GinFuyou> Well, it's clear it's unevaluated, but I didn't know if it affects generated (sub)query or not
[19:18:30] *** Joins: ianthrive (~ianthrive@23-30-51-129-static.hfc.comcastbusiness.net)
[19:18:40] <kezabelle> FWIW, in my experience there's often a tipping point where the DB is better at one or the other.
[19:18:56] <pycode> condition=Q(price__linedata__line__in=strategy.lines.all())
[19:18:59] <pycode> i do that ^^
[19:19:02] <GinFuyou> you can cast it as was shown above to make it evaluate
[19:19:20] <kezabelle> at least the last time I used postgres, for big ranges it was better to let it do the subquery. Meanwhile for a long time MySQL was godawful at subqueries so a giant list was preferable. computers :o)
[19:19:46] <pycode> i will analyze it but for now 150ms are good enough
[19:22:31] *** Quits: ianthrive (~ianthrive@23-30-51-129-static.hfc.comcastbusiness.net) (Client Quit)
[19:23:21] *** Joins: ianthrive (~ianthrive@23-30-51-129-static.hfc.comcastbusiness.net)
[19:24:11] <kezabelle> IIRC postgres also has a bizarre performance optimisation where you can use IN(VALUES(...)) which is faster than IN (x, y, z) for ... reasons. But I don't actually know how to get the ORM to do that. Probably a custom lookup or something.
[19:24:49] <kezabelle> though like so much ancient RDBMS performance optimisation, an upgrade could easily make it pointless :/
[19:26:21] <pycode> kezabelle, yeah i heard the same things
[19:26:25] <pycode> VALUES() is much better
[19:26:52] <pycode> in my case i am passing a short list of ids (max 10) so maybe there is not a big difference
[19:27:08] <kezabelle> shouldn't make a difference at that 'scale', no
[19:27:20] <kezabelle> but then neither does the subquery probably :)
[19:31:37] *** Quits: hyper_dave (~hyper_dav@197.156.107.21) (Ping timeout: 250 seconds)
[19:35:39] *** Quits: ianthrive (~ianthrive@23-30-51-129-static.hfc.comcastbusiness.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[19:41:30] *** Quits: sandeepk (~sandeepk@223.130.30.53) (Ping timeout: 258 seconds)
[19:42:34] <pycode> but if i evaluate the list it will do the query too so it is just the sam ein this case
[19:46:18] <kezabelle> indeed
[20:00:11] *** Quits: kezabelle (~kezabelle@cpc119866-nrwh12-2-0-cust31.4-4.cable.virginm.net) (Quit: Leaving...)
[20:02:01] *** Joins: sandeepk (~sandeepk@223.130.30.53)
[20:06:43] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:10:40] <pycode> GinFuyou, still there?
[20:11:08] <pycode> i get a strange error
[20:11:09] <pycode> https://bpa.st/LCSQ
[20:11:19] <pycode> the JSON object must be str, bytes or bytearray, not dict
[20:11:22] <pycode> how is that possible?
[20:15:18] *** Parts: JoeH_ (uid113241@id-113241.highgate.irccloud.com) ()
[20:22:40] *** Quits: sandeepk (~sandeepk@223.130.30.53) (Remote host closed the connection)
[20:24:10] *** Joins: dez (uid92154@user/dez)
[20:25:24] <pycode> it seems like that i must return a string
[20:25:26] <pycode> why??
[20:37:23] *** Joins: ianthrive (~ianthrive@166.70.94.161)
[20:38:28] <pycode> so basically the problem is
[20:38:34] <pycode> .annotate(aa=ExpressionWrapper(JSONObjectAgg('lines__line', 'lines__data', filter=Q(lines__line__isnull=False), default=None), output_field=TextField())) <---- this works
[20:38:46] <pycode> .annotate(aa=JSONObjectAgg('lines__line', 'lines__data', filter=Q(lines__line__isnull=False), default=None)) <---- this not!!
[20:39:06] <pycode> the aggregation class return JSONField
[20:39:14] <pycode> why do i have to force it to TextField
[20:39:36] <pycode> my aggregator is very basic i do:
[20:39:38] <pycode> class JSONObjectAgg(JSONBAgg):
[20:39:38] <pycode>     function = "JSON_OBJECT_AGG"
[20:39:54] <pycode> and i have seen that JSONBAgg is using JSONField as output_field
[20:40:01] <pycode> so why do i need to for textfield?
[20:44:56] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 256 seconds)
[20:47:53] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:49:24] *** Joins: Stefan92 (~stefan92@217-120-91-25.cable.dynamic.v4.ziggo.nl)
[20:49:24] *** Quits: Stefan92 (~stefan92@217-120-91-25.cable.dynamic.v4.ziggo.nl) (Client Quit)
[20:49:27] <knbk> pycode: does it work if you use jsonb_object_agg instead of json_object_agg?
[20:49:43] <pycode> ifi loop over the queryset i see that that field is a dictionary
[20:49:45] <pycode> knbk, i try
[20:51:08] <pycode> knbk, hmmmm yes it woks!!
[20:51:11] <pycode> works
[20:51:13] <pycode> WHY??
[20:51:35] <pycode> i do not do anything special just: https://bpa.st/BKYA
[20:51:50] <pycode> and now .annotate(aa=JSONObjectAgg('lines__line', 'lines__data', filter=Q(lines__line__isnull=False), default=None)) is working...
[20:51:53] <pycode> but...why?
[20:54:22] *** Joins: Tas-sos (~Tas-sos@78-154-35.adsl.cyta.gr)
[20:55:10] <pycode> knbk, it is returning an empty list if there is something it returns a dict
[20:55:14] <pycode> is this the correct behavior?
[20:55:24] <pycode> i tried with default=Value('{}')
[20:55:36] <pycode> but it alwyas return a list if it does not aggregate anything
[20:56:54] <pycode> i also tried with default=None
[20:57:07] <pycode> but if i do type(field) i get class list
[20:57:16] <pycode> <class 'list'>
[20:59:22] <pycode> knbk, https://bpa.st/KMQA
[21:02:03] <pycode> i am happy that works of course :D i just wonder why, i mean... if it aggregates values i correctly see <class 'dict'>  if not i see <class 'list'>
[21:02:15] <pycode> the list is strange becaues as you can see from code i used default=None
[21:02:22] <pycode> or default=Value('{}')
[21:02:26] <pycode> but i always get a list
[21:02:34] <pycode> i repeat it is not a big problem just wonder why
[21:03:59] <knbk> it doesn't seem like default is in any released version? It's new in the current development version
[21:04:15] <knbk> not sure why it would end up as a list
[21:11:08] <pycode> knbk, ?
[21:11:27] <pycode> https://github.com/django/django/blob/fee87345967b3d917b618533585076cbfa43451b/django/contrib/postgres/aggregates/general.py#L71
[21:11:29] <pycode> knbk, ^^
[21:12:20] <pycode> oh wait wait
[21:12:24] <pycode> django 5 ??!?!?
[21:12:25] <pycode> :D
[21:14:58] <pycode> knbk, however ok it will work in django 5 oook, but why i must use JSONB Instead of JSON ?
[21:17:13] *** Joins: brylie (~Thunderbi@88-114-218-113.elisa-laajakaista.fi)
[21:21:41] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[21:22:23] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[21:30:47] *** Quits: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl) (Ping timeout: 250 seconds)
[21:31:02] *** Quits: brylie (~Thunderbi@88-114-218-113.elisa-laajakaista.fi) (Quit: brylie)
[21:31:13] *** Joins: summersault (~summersau@177.19.240.91)
[21:34:35] *** Quits: rje (~rje@50.54.137.153) (Quit: My computer has gone to sleep. ZZZzzzâ€¦)
[21:34:56] *** Joins: rje (~rje@65.141.156.170)
[21:36:44] *** Joins: brylie (~Thunderbi@88-114-218-113.elisa-laajakaista.fi)
[21:50:04] *** Joins: audiocat (~audio@2603-8081-1800-00ad-b311-75bb-b89d-d6f1.res6.spectrum.com)
[21:53:47] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Read error: Connection reset by peer)
[21:54:32] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[21:55:44] *** Joins: DanDare (~DanDare@user/dandare)
[22:00:39] *** Joins: Kalov (~Thunderbi@179.56.117.154)
[22:04:18] <DanDare> Hi. I just created a new django 3.2 project following the tutorial. In the page https://docs.djangoproject.com/en/3.2/ref/django-admin/ for the makemigrations topic it says 'django-admin makemigrations [app_label [app_label ...]]'
[22:04:42] <DanDare> But https://docs.djangoproject.com/en/3.2/topics/migrations/ does not mention 'django-admin makemigrations' but 'python manage.py makemigrations'
[22:04:49] <DanDare> For instance in my fresh project 'python manage.py makemigrations' works and 'python manage.py migrate' works too. But 'django-admin makemigrations' does not work (Requested setting ROOT_URLCONF, but settings are not confi
[22:05:01] <DanDare> So there are two types of makemigrations in 3.2? It's not explained in the
[22:05:59] *** Quits: pycode (~pycode@2001:b07:5d28:551:b26b:ae89:369e:921f) (Remote host closed the connection)
[22:06:19] <GinFuyou> those are different ways to call management commands
[22:06:52] <DanDare> sorry *not explained in the detailed page
[22:07:26] <DanDare> GinFuyou, besides being different ways of calling it they do different things really?
[22:07:52] <GinFuyou> no, they should run exactly same code
[22:08:52] <GinFuyou> well, doesn't link you've posted explains it just from the top?
[22:08:52] <DanDare> Ok thanks! Will check again. Probably doing something weird here
[22:12:26] <DanDare> Actually they aren't doing the same thing. 'django-admin makemigrations' doesnt work but 'python manage.py makemigrations' does not
[22:12:48] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:12:51] <DanDare> I mean 'python manage.py makemigrations' works :)
[22:12:55] <GinFuyou> did you set settings module?
[22:13:26] <DanDare> GinFuyou, No I just created a fresh new project and running the commands
[22:13:39] <GinFuyou> Please read the links you post then ^_^"
[22:13:52] <GinFuyou> Generally, when working on a single Django project, itâ€™s easier to use manage.py than django-admin. If you need to switch between multiple Django settings files, use django-admin with DJANGO_SETTINGS_MODULE or the --settings command line option.
[22:14:15] <GinFuyou> > In addition, manage.py is automatically created in each Django project. It does the same thing as django-admin but also sets the DJANGO_SETTINGS_MODULE environment variable so that it points to your projectâ€™s settings.py file.
[22:14:27] <GinFuyou> That's the difference
[22:15:05] <GinFuyou> One sets setting automatically another one expects you to set it one way or other
[22:17:20] <DanDare> Ok thanks
[22:22:39] <DanDare> With 'manage.py makemigrations' it does work (no errors) but dont create the migrations directory. In the django-admin page 'To add migrations to an app that doesnâ€™t have a migrations directory, run makemigrations with the appâ€™s app_label.'
[22:23:41] <DanDare> So for a new project would be a good idea doing it first with django-admin, to be able to create the directory? that's an optional directory  and files anyway?
[22:26:43] *** Quits: audiocat (~audio@2603-8081-1800-00ad-b311-75bb-b89d-d6f1.res6.spectrum.com) (Ping timeout: 258 seconds)
[22:28:38] <GinFuyou> I don't think so, I don't use django-admin for anything except creating new project
[22:29:23] <DanDare> GinFuyou, alright! Thank you. I definitely need more docs reading and play around
[22:32:15] *** Joins: Guddu (~Guddu@67.73.235.228)
[22:35:01] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:35:02] *** ChanServ sets mode: +v EvilDMP
[22:54:01] *** Joins: Gudddu (~Guddu@67.73.235.228)
[22:55:38] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:56:21] *** Joins: blackleitus (~blackleit@189.195.193.124)
[22:57:03] <blackleitus> how do I bypass agpl , gpl licenses?
[22:57:32] *** Quits: Guddu (~Guddu@67.73.235.228) (Ping timeout: 256 seconds)
[22:59:20] <dodo> bypass? simply don't use the tool that is licensed like this..
[22:59:38] <daniel-k> blackleitus: by releasing your software's source coud
[22:59:43] <daniel-k> code*
[22:59:54] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:59:55] *** ChanServ sets mode: +v EvilDMP
[23:02:20] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[23:04:35] <blackleitus> another way? to use the same features, but no code?
[23:12:17] <moldy> blackleitus: what do you mean by "bypass"?
[23:14:59] <blackleitus> i mean using the same features without their code
[23:15:37] <blackleitus> or bypass the way of integrate code gpl in apache or any other internal compliance (closed software)
[23:24:22] <dodo> blackleitus: contact the author, buy a commercial license
[23:25:02] <blackleitus> gpl doesnt help to buy full ownership
[23:25:18] *** Quits: brylie (~Thunderbi@88-114-218-113.elisa-laajakaista.fi) (Quit: brylie)
[23:25:20] <dodo> the author can license their stuff however they like
[23:25:26] <dodo> gpl or not is irrelevant
[23:25:37] <blackleitus> what about contributors ?
[23:25:56] <dodo> have you even asked your project if it has a commercial license?
[23:26:28] <blackleitus> i dont think so , but if not possible how do I extract the same features?
[23:26:36] <dodo> write it yourself
[23:27:03] <blackleitus> by using the software?
[23:27:13] <dodo> no. if you don't want to honor somebody's license don't use their software.
[23:27:22] <dodo> write your own that has the same features
[23:27:49] <blackleitus> ah yeah , but to do you need to use their software to see workflow no?
[23:27:58] <blackleitus> no looking their source , but their workflow
[23:28:03] <dodo> have you ever written software?
[23:28:22] <blackleitus> yea , but I also do a lot of reverse engineering too
[23:45:32] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 245 seconds)
[23:51:03] *** Joins: explore (uid233125@id-233125.stonehaven.irccloud.com)
[23:59:06] *** Joins: fortuno51 (~fortuno51@37.120.156.254)
