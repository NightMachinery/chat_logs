[00:02:38] <curious-user> why does https://hexdocs.pm/broadway/Broadway.html#c:handle_message/3 says "any CPU bounded" specifically, does it mean that processors shouldn't be used for IO bounded tasks?
[00:18:35] <benwilson512> curious-user: probably because with the IO bound tasks a batch is more likely to be the place to do it
[00:23:49] *** Joins: kuonNicolas[m] (~kuongoyma@2001:470:69fc:105::329e)
[00:34:30] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[00:37:47] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[00:42:30] *** Quits: Ilyu (~quassel@gateway/vpn/pia/ilyu) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:44:13] <kuonNicolas[m]> Hello
[00:48:21] <curious-user> benwilson512: i see, thank you!
[00:48:34] <Guest7> benwilson512: hey ben, do you use mapbox at your company?
[00:48:43] <benwilson512> Guest7: we do not
[00:49:17] <Guest7> ah ok, any mapping providers in general?
[00:49:24] <benwilson512> we use google maps
[00:49:33] <curious-user> "Set the minimum demand of all processors stages" broadways docs are really confusing, it mentions everywhere that it's multi stage, processor stages and etc but actually it can't have multiple processors, sigh
[00:50:05] <kuonNicolas[m]> I have a large ecto schema, which can be updated with `MySchema.changeset(data, attrs)` where attrs is a large map. I'd like to have the reverse, like `MySchema.to_map(data)`  and get `attrs` back. I was wondering what you would recommend for that.
[00:50:23] <Guest7> oh ok nice, i'm looking to use a mapping provider but mapbox seems pretty crazy ($5 per 1000 users basically)
[00:51:07] <kuonNicolas[m]> Also where to put that code (in the context, in the schema itself like changeset?). 
[00:51:18] <Guest7> man even google maps is $2-$7 per 1000
[00:51:20] <kuonNicolas[m]> Usually I do this in views, but here I need it in my non web app
[00:51:58] <Guest7> how do people afford this if your website isn't something like uber/airbnb where the value per customer is relatively high?
[00:52:04] *** Quits: curious-user (~user@user/curious-user) (Quit: WeeChat 3.3)
[00:52:10] <benwilson512> Guest7: which pricing are you loooking at?
[00:52:22] <Guest7> https://cloud.google.com/maps-platform/pricing
[00:52:27] <kuonNicolas[m]> Guest7: Last time I had to work on a mapping project, we ended up spawing our own open street map instance. It is a lot of work though. But it was needed for us because we did a lot of queries for geological use.
[00:52:56] <Guest7> kuonNicolas[m]: is that expensive?
[00:53:44] <kuonNicolas[m]> Guest7: No it's free (well you need a server). But there is no usage fee.
[00:54:10] <benwilson512> Guest7: I think a lot of times folks just embed a google map https://developers.google.com/maps/documentation/embed/get-started
[00:54:12] <benwilson512> which is free
[00:54:14] <josevalim> hauleth: you can save livebook with outputs
[00:54:25] <kuonNicolas[m]> It also depends on the data you need. We needed elevation and terrain/road data, for which open street map is very good. If you need addresses, that's another story.
[00:54:26] <Guest7> kuonNicolas[m]: i mean for the hardware
[00:54:59] <Guest7> benwilson512: but you can't render for example markers on those embedded maps right?
[00:55:13] <kuonNicolas[m]> It requires a lot of space for the data, but then it is not that expansive.
[00:55:20] <benwilson512> Guest7: I believe that's right yes. I do think that kuonNicolas[m] is correct, lots of folks end up running their own OSM instances
[00:56:04] <josevalim> rawtaz: it takes two commands to run livebook if you have elixir on your machine :P
[00:56:46] *** Joins: brauliobz (~manjaro-u@user/brauliobz)
[00:57:07] <kuonNicolas[m]> But it's a big beast to tame. There are a lot of scattered components (database plugins, tile server, tile renderer, js client....).
[00:57:09] <Guest7> kuonNicolas[m], benwilson512: ah ok, might give that a shot then. Maybe i'll use a free tier initially and then if i grow enough switch over to a self-hosted version
[00:57:31] <Guest7> kuonNicolas[m]: if i did go the self-hosted route would go with this -> https://pelias.io/
[00:57:44] <kuonNicolas[m]> It took me like a week of work to understand and have everything running.
[00:57:52] <Guest7> basically all mapping services in a single package
[00:58:04] <Guest7> just requires 16GB ram and 600GB disk space, but then you're good
[00:58:08] <kuonNicolas[m]> I do not know that sorry.
[00:58:24] <Guest7> definitely check it out, might find it helpful
[00:58:35] *** Quits: ur5us (~ur5us@2406:e002:6c33:6d01:90c2:1bd2:83db:98) (Ping timeout: 264 seconds)
[00:58:37] <kuonNicolas[m]> Yeah, those metrics seems realist.
[00:59:39] <kuonNicolas[m]> We didn't need geocoding, but it is nice to know there is an open source solution now
[00:59:45] <rawtaz> josevalim: yeah if you have the resources to pull it down and run it without having to take 30 minutes of your life ;)
[00:59:58] <rawtaz> but i hear you. i shan't complain!
[01:00:04] <josevalim> wait what?
[01:00:07] <josevalim> it is literally
[01:00:15] <josevalim> `mix escript.install hex livebook`
[01:00:22] <kuonNicolas[m]> Do you think it is good to use phoenix.view in my to_map code in my ecto schema, or is it better to just is a few Enum.map?
[01:00:51] <josevalim> it takes as long as running mix deps.get + compile on any other phoenix project
[01:01:11] <benwilson512> josevalim: btw is that supposed to work if you happen to be inside another mix project already
[01:01:12] <benwilson512> ?
[01:01:13] <rawtaz> josevalim: yeah but in docker for me, which is dead slow on this shitty machine as well as the internet connection is crap.
[01:01:23] <rawtaz> sorry, im just complicating it
[01:01:25] *** Quits: nox (sid3872@uxbridge.irccloud.com) (*.net *.split)
[01:01:25] *** Quits: hwrd (sid64402@lymington.irccloud.com) (*.net *.split)
[01:01:25] *** Quits: msch (sid28472@tinside.irccloud.com) (*.net *.split)
[01:01:25] *** Quits: gmc (sid58314@ilkley.irccloud.com) (*.net *.split)
[01:01:25] *** Quits: JSharp (sid4580@lymington.irccloud.com) (*.net *.split)
[01:01:26] *** Quits: wojtekmach (sid183574@lymington.irccloud.com) (*.net *.split)
[01:01:26] *** Quits: chenghiz_ (uid349735@ilkley.irccloud.com) (*.net *.split)
[01:01:26] *** Quits: OliverMT (sid16701@hampstead.irccloud.com) (*.net *.split)
[01:01:26] *** Quits: mjones (sid6844@helmsley.irccloud.com) (*.net *.split)
[01:01:26] *** Quits: mveytsman_ (sid478822@tinside.irccloud.com) (*.net *.split)
[01:01:26] *** Quits: FMJz________ (sid279245@lymington.irccloud.com) (*.net *.split)
[01:01:26] *** Quits: jaydoane (sid66455@hampstead.irccloud.com) (*.net *.split)
[01:01:26] *** Quits: joedevivo (sid16225@tinside.irccloud.com) (*.net *.split)
[01:01:26] *** Quits: nickjj (~nickjj@user/nickjj) (*.net *.split)
[01:01:26] *** Quits: henry40408 (~henry4040@112-105-246-84.adsl.dynamic.seed.net.tw) (*.net *.split)
[01:01:26] *** Quits: hauleth (~hauleth@2.ip-145-239-81.eu) (*.net *.split)
[01:01:26] *** Quits: drewolson (~drewolson@user/drewolson) (*.net *.split)
[01:01:26] *** Quits: Tanger (~Donger@signiq.cust.bdr01.per02.wa.vocus.net.au) (*.net *.split)
[01:01:26] *** Quits: fhunleth___ (sid79501@lymington.irccloud.com) (*.net *.split)
[01:01:26] *** Quits: sm2n (~sm2n@user/sm2n) (*.net *.split)
[01:01:26] *** Quits: ley (sid320610@hampstead.irccloud.com) (*.net *.split)
[01:01:26] *** Quits: stiang (sid245441@helmsley.irccloud.com) (*.net *.split)
[01:01:26] *** Quits: bcardarella (sid1539@uxbridge.irccloud.com) (*.net *.split)
[01:01:26] *** Quits: nisstyre (~wes@user/nisstyre) (*.net *.split)
[01:01:26] *** Quits: kvn (~weechat@cpc115982-dals23-2-0-cust605.20-2.cable.virginm.net) (*.net *.split)
[01:01:34] *** Joins: mveytsman_ (sid478822@id-478822.tinside.irccloud.com)
[01:01:35] *** Joins: fhunleth___ (sid79501@id-79501.lymington.irccloud.com)
[01:01:41] *** Joins: gmc (sid58314@id-58314.ilkley.irccloud.com)
[01:01:48] *** Joins: stiang (sid245441@id-245441.helmsley.irccloud.com)
[01:01:48] *** Joins: Tanger (~Donger@signiq.cust.bdr01.per02.wa.VOCUS.net.au)
[01:01:51] *** Joins: jaydoane (sid66455@id-66455.hampstead.irccloud.com)
[01:01:51] *** Joins: drewolson (~drewolson@user/drewolson)
[01:01:51] *** Joins: chenghiz_ (uid349735@id-349735.ilkley.irccloud.com)
[01:01:52] *** Joins: FMJz________ (sid279245@id-279245.lymington.irccloud.com)
[01:01:52] <josevalim> oh, you are inside docker all the time?
[01:01:52] *** Joins: ley (sid320610@id-320610.hampstead.irccloud.com)
[01:01:53] *** Joins: wojtekmach (sid183574@id-183574.lymington.irccloud.com)
[01:01:56] *** Joins: OliverMT (sid16701@id-16701.hampstead.irccloud.com)
[01:01:57] *** Joins: nisstyre (~wes@li798-187.members.linode.com)
[01:01:58] *** Joins: kvn (~weechat@cpc115982-dals23-2-0-cust605.20-2.cable.virginm.net)
[01:02:00] <kuonNicolas[m]> As I said I want the "reverse" of `MySchema.changeset(data, attrs)` -> `MySchema.to_map(data) == attrs` . I have no problem actually "writing it", but I do not know where is the best place to put it.
[01:02:24] <josevalim> rawtaz: i mean, that's not livebook fault, but i hear your pain :D
[01:02:26] *** Joins: mjones (sid6844@id-6844.helmsley.irccloud.com)
[01:02:26] *** Joins: msch (sid28472@id-28472.tinside.irccloud.com)
[01:02:28] <rawtaz> josevalim: yep :) honestly i do have elixir installed locally as well but i try to use docker for all dev stuff. but heck then i'd just pull the docker image instead
[01:02:28] *** Joins: joedevivo (sid16225@id-16225.tinside.irccloud.com)
[01:02:33] *** Joins: hwrd (sid64402@id-64402.lymington.irccloud.com)
[01:02:34] *** Quits: nisstyre (~wes@li798-187.members.linode.com) (Signing in (nisstyre))
[01:02:34] *** Joins: nisstyre (~wes@user/nisstyre)
[01:02:42] *** Joins: nox (sid3872@id-3872.uxbridge.irccloud.com)
[01:02:50] *** Joins: bcardarella (sid1539@id-1539.uxbridge.irccloud.com)
[01:02:50] *** Joins: JSharp (sid4580@id-4580.lymington.irccloud.com)
[01:02:57] <rawtaz> i've heard that you core devs usually dont use docker for elixir dev but run it all locally
[01:03:01] <josevalim> rawtaz: also just run `mix escript.install hex faster_internet` and you are good
[01:03:30] *** Joins: nickjj (~nickjj@user/nickjj)
[01:03:34] *** Joins: sm2n (~sm2n@user/sm2n)
[01:03:36] <benwilson512> ^^
[01:03:40] <josevalim> rawtaz: i don't want to be the "old guy" in the room but people literally developed stuff without docker for decades
[01:04:24] <kuonNicolas[m]> I hate myself, I often spend one hour wondering where to put my 10 lines of code :P
[01:04:36] *** Joins: hauleth (~hauleth@2.ip-145-239-81.eu)
[01:04:44] <rawtaz> josevalim: haha, will do!
[01:04:46] <benwilson512> josevalim: I am on 1.12.3, and I'm consistently getting `-bash: livebook: command not found`, is there some obvious thing I'm missing?
[01:04:57] <benwilson512> the escript install seems to work, I get `* creating /Users/ben/.asdf/installs/elixir/1.12.3-otp-24/.mix/escripts/livebook`
[01:04:59] <benwilson512> at the end
[01:05:10] <benwilson512> do I need to add that to the path?
[01:05:13] <josevalim> hes
[01:05:16] <josevalim> yes
[01:05:17] <benwilson512> :+1:cool
[01:05:19] <josevalim> the installation should tell you that
[01:05:28] <kuonNicolas[m]> I really hate docker, everytime I used it was just "additional steps and pain", even if I understand why it is nice for production
[01:05:41] <benwilson512> josevalim: hm, when? at the start or the end?
[01:05:46] <josevalim> at the end
[01:05:51] <Nicd> I've still yet to touch Docker
[01:06:02] <rawtaz> josevalim: yeah and thats fine. its just that i like having stuff contained, and while with elixir+hex i could live with using a local installation theres a ton of other dev envs and stuff that would junkify my system entirely if i didnt contain it. so i just do it for everything.
[01:06:12] <Nicd> I did install it once but I didn't do anything with it :P
[01:06:19] <josevalim> * creating /Users/jose/.mix/escripts/ex_doc
[01:06:19] <josevalim> warning: you must append "/Users/jose/.mix/escripts" to your PATH if you want to invoke escripts by name
[01:06:23] <benwilson512> josevalim: re-running it, I'll jist the whole output
[01:06:27] <benwilson512> *gist
[01:06:36] <josevalim> benwilson512: ^
[01:06:36] <rawtaz> having to deal with different versions of various languages and software isnt very fun on one single system, without using something like docker or whatever else similar
[01:06:39] <kuonNicolas[m]> speaking of esthing, I just noticed that my build.js that I use to watch my js files with esbuild inside my phoenix app was leaving zombie processes around
[01:06:49] <benwilson512> https://www.irccloud.com/pastebin/5IR570xz/
[01:06:52] <benwilson512> josevalim: ^
[01:07:02] <josevalim> interesting
[01:07:08] <kuonNicolas[m]> I had to wrap my ./build.js call into a zombie.sh script 
[01:07:16] <kuonNicolas[m]> I wonder if it is a common issue
[01:07:17] <josevalim> benwilson512: so it thinks it is accessible somehow
[01:07:40] <josevalim> rawtaz: a lot of people enjoy asdf for that
[01:07:42] <benwilson512> weird, `which livebook` returns nothing. maybe it said it the first time?
[01:08:25] <josevalim> benwilson512: 
[01:08:43] <josevalim> try `System.find_executable("livebook")` inside IEx
[01:08:55] <josevalim> i am wondering if asdf is adding to the path whenever you run elixir
[01:09:01] <benwilson512> weird, that works
[01:09:13] <benwilson512> let me run reshim
[01:09:23] <benwilson512> which is apparently a thing I'm just seeing
[01:09:27] <benwilson512> AH
[01:09:32] <kuonNicolas[m]> do you think adding a `to_map(%MySchema{})/1` to my ecto schema is a sane way to handle this? I was scared of polluting my schema module, but as it is the "reverse" of changeset, I think it is the way to go
[01:09:36] <benwilson512> sorry, apparently I'm just bad at asdf
[01:10:01] <kuonNicolas[m]> I'm better at hjkl :D
[01:19:35] *** Quits: natrys (~natrys@user/natrys) (Ping timeout: 264 seconds)
[01:27:58] <josevalim> kuonNicolas[m]: it is fine to have it there
[01:28:10] *** Quits: Guest7 (~Guest7@ufr-132-230-194-32.eduroam-nat.uni-freiburg.de) (Quit: Client closed)
[01:28:14] <josevalim> if another places shows up later, you can just move it around :)
[01:28:48] <kuonNicolas[m]> yeah I guess, but in fact is is very similar to cast_assoc as it will traverse the whole association tree
[01:28:55] <kuonNicolas[m]> and call to_map on every node
[01:29:29] <benwilson512> kuonNicolas[m]: we have this function
[01:29:46] <benwilson512> https://www.irccloud.com/pastebin/SrduSKq2/
[01:30:18] <benwilson512> in a utility module to recursively turn an arbitrary ecto schema into a map while cleaning up non loaded associations and so forth
[01:31:12] <kuonNicolas[m]> yeah, that's basically what I am doing, but not that automated because there is some custom/per schema conversion
[01:31:17] <benwilson512> ah
[01:31:17] <kuonNicolas[m]> thanks for the snippet
[01:36:04] <kuonNicolas[m]> What is the best way to build a map without nil values? I'd love to keep the map syntax but if I do I have to filter the map afterward.
[01:42:56] <kuonNicolas[m]> https://dl.goyman.com/snip.html
[01:42:57] <kuonNicolas[m]> what I mean
[01:47:09] *** Quits: notzmv (~zmv@user/notzmv) (Remote host closed the connection)
[01:51:56] *** Joins: notzmv (~zmv@user/notzmv)
[01:52:33] *** Joins: ur5us (~ur5us@2406:e002:6c33:6d01:90c2:1bd2:83db:98)
[01:53:48] <kuonNicolas[m]> s/snip/bin/
[01:57:23] *** Quits: ur5us (~ur5us@2406:e002:6c33:6d01:90c2:1bd2:83db:98) (Ping timeout: 264 seconds)
[02:00:03] *** Quits: fub (uid190747@id-190747.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:18:03] *** Quits: wonko (~wjc@62.115.229.50) (Ping timeout: 258 seconds)
[02:43:49] *** Quits: [deleted] (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[02:44:47] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 264 seconds)
[02:46:55] *** Quits: gitgood (~gitgood@80-44-12-204.dynamic.dsl.as9105.com) (Ping timeout: 260 seconds)
[03:05:10] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[03:06:24] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[03:07:35] *** Joins: Guest20 (~Guest20@ufr-132-230-194-32.eduroam-nat.uni-freiburg.de)
[03:22:46] *** Quits: mahmutov (~mahmutov@37.155.0.45) (Ping timeout: 260 seconds)
[03:29:02] *** Joins: ur5us (~ur5us@2406:e002:6c33:6d01:90c2:1bd2:83db:98)
[03:30:59] *** Quits: ur5us (~ur5us@2406:e002:6c33:6d01:90c2:1bd2:83db:98) (Remote host closed the connection)
[03:33:30] *** Quits: brauliobz (~manjaro-u@user/brauliobz) (Ping timeout: 260 seconds)
[03:33:39] *** Joins: emm0 (~emm@116.red-83-37-156.dynamicip.rima-tde.net)
[03:33:48] *** Quits: emm0 (~emm@116.red-83-37-156.dynamicip.rima-tde.net) (Remote host closed the connection)
[03:53:00] *** Joins: brauliobz (~manjaro-u@user/brauliobz)
[04:10:29] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: what if I am turning narcissist? pretentious, asocial, inpromptu squabbles, easily become childishness from the slightest emotional distress.. i feel like I've only truly grown up on the outside, and it's painful to remain this way, but it's far from the)
[04:27:57] *** Quits: Guest20 (~Guest20@ufr-132-230-194-32.eduroam-nat.uni-freiburg.de) (Ping timeout: 256 seconds)
[05:18:30] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[05:19:22] *** Quits: brauliobz (~manjaro-u@user/brauliobz) (Ping timeout: 258 seconds)
[05:49:11] *** Quits: joedevivo (sid16225@id-16225.tinside.irccloud.com) (Read error: Connection reset by peer)
[05:49:39] *** Quits: stiang (sid245441@id-245441.helmsley.irccloud.com) (Ping timeout: 258 seconds)
[05:49:41] *** Quits: JSharp (sid4580@id-4580.lymington.irccloud.com) (Ping timeout: 245 seconds)
[05:49:41] *** Quits: mjones (sid6844@id-6844.helmsley.irccloud.com) (Ping timeout: 245 seconds)
[05:49:41] *** Quits: gmc (sid58314@id-58314.ilkley.irccloud.com) (Ping timeout: 245 seconds)
[05:49:41] *** Quits: mveytsman_ (sid478822@id-478822.tinside.irccloud.com) (Ping timeout: 245 seconds)
[05:50:02] *** Joins: mjones (sid6844@helmsley.irccloud.com)
[05:50:03] *** Joins: mveytsman_ (sid478822@tinside.irccloud.com)
[05:50:04] *** Quits: dzfranklin (sid448589@ilkley.irccloud.com) (Read error: Connection reset by peer)
[05:50:05] *** Quits: msch (sid28472@id-28472.tinside.irccloud.com) (Ping timeout: 260 seconds)
[05:50:13] *** Quits: genericjam_ (sid474908@ilkley.irccloud.com) (Read error: Connection reset by peer)
[05:50:17] *** Joins: msch (sid28472@tinside.irccloud.com)
[05:50:21] *** Joins: stiang (sid245441@helmsley.irccloud.com)
[05:50:25] *** Quits: bcardarella (sid1539@id-1539.uxbridge.irccloud.com) (Ping timeout: 258 seconds)
[05:50:25] *** Quits: chenghiz_ (uid349735@id-349735.ilkley.irccloud.com) (Ping timeout: 258 seconds)
[05:50:31] *** Quits: scrogson (sid346312@ilkley.irccloud.com) (Ping timeout: 245 seconds)
[05:50:31] *** Quits: sasajuric (sid29842@ilkley.irccloud.com) (Ping timeout: 245 seconds)
[05:50:37] *** Quits: eproxus__ (sid39465@ilkley.irccloud.com) (Read error: Connection reset by peer)
[05:50:37] *** Quits: aaronrenner (sid475276@ilkley.irccloud.com) (Write error: Connection reset by peer)
[05:50:40] *** Quits: benwilson512 (sid71699@ilkley.irccloud.com) (Ping timeout: 260 seconds)
[05:50:41] *** Joins: joedevivo (sid16225@tinside.irccloud.com)
[05:50:43] *** Quits: bw (sid2730@user/betawaffle) (Ping timeout: 252 seconds)
[05:50:49] *** Quits: alisdair (sid7471@ilkley.irccloud.com) (Ping timeout: 265 seconds)
[05:50:52] *** Quits: rnewson (sid29161@couchdb/committer/rnewson) (Read error: Connection reset by peer)
[05:51:00] *** Quits: mcrumm (sid467326@ilkley.irccloud.com) (Read error: Connection reset by peer)
[05:51:02] *** Quits: brycek (sid153199@ilkley.irccloud.com) (Read error: Connection reset by peer)
[05:51:02] *** Quits: guan (sid222713@ilkley.irccloud.com) (Read error: Connection reset by peer)
[05:51:21] *** Quits: nox (sid3872@id-3872.uxbridge.irccloud.com) (Ping timeout: 245 seconds)
[05:51:34] *** Joins: nox (sid3872@uxbridge.irccloud.com)
[05:52:19] *** Joins: genericjam_ (sid474908@id-474908.ilkley.irccloud.com)
[05:52:20] *** Joins: chenghiz_ (uid349735@id-349735.ilkley.irccloud.com)
[05:52:21] *** Joins: bcardarella (sid1539@id-1539.uxbridge.irccloud.com)
[05:52:27] *** Joins: dzfranklin (sid448589@id-448589.ilkley.irccloud.com)
[05:52:33] *** Joins: gmc (sid58314@id-58314.ilkley.irccloud.com)
[05:52:53] *** Joins: aaronrenner (sid475276@id-475276.ilkley.irccloud.com)
[05:52:56] *** Joins: brycek (sid153199@ilkley.irccloud.com)
[05:52:58] *** Joins: guan (sid222713@ilkley.irccloud.com)
[05:52:59] *** Joins: eproxus__ (sid39465@id-39465.ilkley.irccloud.com)
[05:53:01] *** Joins: bw (sid2730@user/betawaffle)
[05:53:08] *** Joins: alisdair (sid7471@id-7471.ilkley.irccloud.com)
[05:53:08] *** Joins: sasajuric (sid29842@id-29842.ilkley.irccloud.com)
[05:53:09] *** Joins: rnewson (sid29161@couchdb/committer/rnewson)
[05:53:26] *** Quits: jaydoane (sid66455@id-66455.hampstead.irccloud.com) (Ping timeout: 245 seconds)
[05:53:42] *** Joins: scrogson (sid346312@ilkley.irccloud.com)
[05:53:44] *** Joins: benwilson512 (sid71699@ilkley.irccloud.com)
[05:53:51] *** Joins: jaydoane (sid66455@id-66455.hampstead.irccloud.com)
[05:53:52] *** Joins: mcrumm (sid467326@ilkley.irccloud.com)
[05:55:06] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[06:00:56] *** Quits: OliverMT (sid16701@id-16701.hampstead.irccloud.com) (Ping timeout: 245 seconds)
[06:00:59] *** Quits: rnewson (sid29161@couchdb/committer/rnewson) (Ping timeout: 264 seconds)
[06:01:10] *** Quits: jaydoane (sid66455@id-66455.hampstead.irccloud.com) (Ping timeout: 252 seconds)
[06:01:10] *** Quits: ley (sid320610@id-320610.hampstead.irccloud.com) (Ping timeout: 260 seconds)
[06:01:21] *** Quits: FMJz________ (sid279245@id-279245.lymington.irccloud.com) (Ping timeout: 245 seconds)
[06:01:42] *** Joins: FMJz________ (sid279245@lymington.irccloud.com)
[06:01:43] *** Quits: gmc (sid58314@id-58314.ilkley.irccloud.com) (Ping timeout: 252 seconds)
[06:01:43] *** Quits: genericjam_ (sid474908@id-474908.ilkley.irccloud.com) (Ping timeout: 252 seconds)
[06:01:48] *** Joins: genericjam__ (sid474908@ilkley.irccloud.com)
[06:01:50] *** Joins: rnewson (sid29161@couchdb/committer/rnewson)
[06:02:04] *** Joins: ley (sid320610@hampstead.irccloud.com)
[06:02:11] *** Quits: dzfranklin (sid448589@id-448589.ilkley.irccloud.com) (Ping timeout: 264 seconds)
[06:02:11] *** Quits: bcardarella (sid1539@id-1539.uxbridge.irccloud.com) (Ping timeout: 264 seconds)
[06:02:12] *** Joins: fhunleth____ (sid79501@lymington.irccloud.com)
[06:02:16] *** Quits: alisdair (sid7471@id-7471.ilkley.irccloud.com) (Ping timeout: 252 seconds)
[06:02:16] *** Quits: aaronrenner (sid475276@id-475276.ilkley.irccloud.com) (Ping timeout: 252 seconds)
[06:02:18] *** Quits: eproxus__ (sid39465@id-39465.ilkley.irccloud.com) (Ping timeout: 258 seconds)
[06:02:18] *** Quits: hwrd (sid64402@id-64402.lymington.irccloud.com) (Ping timeout: 258 seconds)
[06:02:18] *** Quits: fhunleth___ (sid79501@id-79501.lymington.irccloud.com) (Ping timeout: 258 seconds)
[06:02:18] *** fhunleth____ is now known as fhunleth___
[06:02:22] *** Joins: jaydoane (sid66455@hampstead.irccloud.com)
[06:02:24] *** Joins: eproxus___ (sid39465@ilkley.irccloud.com)
[06:02:25] *** Joins: OliverMT (sid16701@hampstead.irccloud.com)
[06:02:37] *** Joins: wojtekmach_ (sid183574@lymington.irccloud.com)
[06:02:39] *** Joins: hwrd (sid64402@lymington.irccloud.com)
[06:02:41] *** Quits: wojtekmach (sid183574@id-183574.lymington.irccloud.com) (Ping timeout: 258 seconds)
[06:02:41] *** wojtekmach_ is now known as wojtekmach
[06:02:47] *** Quits: sasajuric (sid29842@id-29842.ilkley.irccloud.com) (Ping timeout: 264 seconds)
[06:02:47] *** Quits: chenghiz_ (uid349735@id-349735.ilkley.irccloud.com) (Ping timeout: 264 seconds)
[06:02:52] *** Joins: gmc (sid58314@ilkley.irccloud.com)
[06:03:15] *** Joins: bcardarella (sid1539@uxbridge.irccloud.com)
[06:03:34] *** Joins: alisdair (sid7471@ilkley.irccloud.com)
[06:03:38] *** Joins: aaronrenner (sid475276@ilkley.irccloud.com)
[06:03:41] *** Joins: sasajuric (sid29842@ilkley.irccloud.com)
[06:04:09] *** Joins: chenghiz_ (uid349735@ilkley.irccloud.com)
[06:04:42] *** Joins: dzfranklin (sid448589@ilkley.irccloud.com)
[06:05:32] *** Joins: JSharp (sid4580@lymington.irccloud.com)
[06:16:12] *** Joins: mahmutov (~mahmutov@37.155.0.45)
[07:19:17] *** Joins: mexen_ (uid495612@user/mexen)
[07:23:34] *** mexen_ is now known as mexen-kun
[07:28:19] *** Joins: henry40408 (~henry4040@112-105-246-84.adsl.dynamic.seed.net.tw)
[07:33:07] *** Quits: henry40408 (~henry4040@112-105-246-84.adsl.dynamic.seed.net.tw) (Client Quit)
[08:05:51] *** Joins: dcz_ (~dcz@user/dcz)
[08:31:25] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 258 seconds)
[09:27:56] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[09:31:56] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 244 seconds)
[10:13:42] *** Joins: gitgood (~gitgood@80-44-12-204.dynamic.dsl.as9105.com)
[10:23:00] *** Quits: srfsh (~srfsh@user/srfsh) (Remote host closed the connection)
[10:23:30] *** Joins: srfsh (~srfsh@user/srfsh)
[10:39:00] *** Joins: ur5us (~ur5us@2406:e002:6c33:6d01:90c2:1bd2:83db:98)
[10:45:38] *** Quits: srfsh (~srfsh@user/srfsh) (Remote host closed the connection)
[11:17:11] *** Quits: ur5us (~ur5us@2406:e002:6c33:6d01:90c2:1bd2:83db:98) (Ping timeout: 264 seconds)
[11:22:46] *** Quits: gitgood (~gitgood@80-44-12-204.dynamic.dsl.as9105.com) (Ping timeout: 258 seconds)
[11:28:59] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[11:32:22] *** Joins: ur5us (~ur5us@203.86.198.200)
[11:33:20] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 244 seconds)
[11:34:00] *** Joins: srfsh (~srfsh@user/srfsh)
[11:35:38] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:38:45] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:39:54] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[11:40:22] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:40:43] *** Quits: ur5us (~ur5us@203.86.198.200) (Remote host closed the connection)
[11:42:07] *** Joins: ur5us (~ur5us@2406:e002:6c33:6d01:90c2:1bd2:83db:98)
[11:47:11] *** Quits: ur5us (~ur5us@2406:e002:6c33:6d01:90c2:1bd2:83db:98) (Ping timeout: 264 seconds)
[12:15:12] *** Quits: mahmutov (~mahmutov@37.155.0.45) (Ping timeout: 244 seconds)
[12:25:48] *** Joins: emm0 (~emm@116.red-83-37-156.dynamicip.rima-tde.net)
[12:25:51] <emm0> Hi
[12:25:57] <emm0> I have a question
[12:26:14] <emm0> How I install locally the livebook?
[12:26:21] <emm0> I tried with the guide
[12:26:40] <emm0> And I obtain an error with the mix cammand
[12:30:06] *** Quits: lemondeer[m] (~lemondeer@2001:470:69fc:105::e2cc) (Quit: You have been kicked for being idle)
[12:31:42] <emm0> Hi?
[12:32:29] *** Quits: srfsh (~srfsh@user/srfsh) (Remote host closed the connection)
[12:32:44] *** Joins: srfsh (~srfsh@user/srfsh)
[12:35:52] *** Quits: emm0 (~emm@116.red-83-37-156.dynamicip.rima-tde.net) (Ping timeout: 244 seconds)
[12:36:31] <Mayel[m]> emm0: you may want to share the error message on a pastebin
[12:38:38] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[12:39:06] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:39:16] <Mayel[m]> oh they're gone
[12:53:11] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 264 seconds)
[13:16:15] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[13:30:35] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[13:35:16] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 244 seconds)
[13:36:51] *** Joins: brauliobz (~manjaro-u@user/brauliobz)
[14:00:14] *** Quits: srfsh (~srfsh@user/srfsh) (Remote host closed the connection)
[14:00:38] *** Joins: srfsh (~srfsh@user/srfsh)
[14:02:11] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[14:06:46] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 260 seconds)
[14:23:26] *** Joins: henry40408 (~henry4040@112-105-246-84.adsl.dynamic.seed.net.tw)
[14:33:48] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[14:38:18] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 244 seconds)
[14:46:31] *** Joins: henry404087 (~henry4040@112-104-128-34.adsl.dynamic.seed.net.tw)
[14:47:17] *** Joins: mgibowski (~mgibowski@159.red-88-11-2.dynamicip.rima-tde.net)
[14:48:46] *** Quits: henry40408 (~henry4040@112-105-246-84.adsl.dynamic.seed.net.tw) (Ping timeout: 265 seconds)
[14:48:47] *** henry404087 is now known as henry40408
[15:01:27] *** Joins: Guest4911 (~Guest49@106.116.100.123)
[15:01:37] *** Quits: Guest4911 (~Guest49@106.116.100.123) (Client Quit)
[15:02:44] *** Joins: notzmv (~zmv@user/notzmv)
[15:43:04] *** Joins: Tongir (~tangmang@signiq.cust.bdr01.per02.wa.VOCUS.net.au)
[15:54:17] *** Joins: gitgood (~gitgood@80-44-12-204.dynamic.dsl.as9105.com)
[16:13:48] *** Quits: lanodan (~lanodan@2a01:e0a:d6:9930::35) (Quit: WeeChat 3.1)
[16:19:32] *** Joins: lanodan (~lanodan@2a01:e0a:d6:9930::35)
[16:29:20] *** Joins: thojanssens (~thojansse@ptr-178-51-77-74.dyn.mobistar.be)
[16:47:07] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[16:51:45] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[16:56:30] *** Joins: stzsch (~stzsch@187.44.81.18)
[17:00:23] *** Quits: stzsch|2 (~stzsch@45.238.66.15) (Ping timeout: 264 seconds)
[17:35:46] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[17:37:17] *** Joins: thojanssens_ (~thojansse@ptr-178-51-77-74.dyn.mobistar.be)
[17:38:50] *** Quits: thojanssens (~thojansse@ptr-178-51-77-74.dyn.mobistar.be) (Ping timeout: 260 seconds)
[18:04:52] *** Joins: andrhua (~andrhua@31.134.187.8)
[18:13:17] *** Joins: fub (uid190747@id-190747.ilkley.irccloud.com)
[18:25:51] *** Quits: andrhua (~andrhua@31.134.187.8) (Quit: leaving)
[18:33:35] *** Joins: mahmutov (~mahmutov@37.155.0.45)
[18:40:38] *** Joins: terminalpusher (~terminalp@2a01:586:1df7:1:ca29:66be:5f4:3efd)
[18:47:48] <terminalpusher> What areas outside of web development do you think Elixir is good for?
[18:53:09] <rawtaz> check out the nerves project
[18:53:28] <rawtaz> but in general whatever backend you need. doesnt have to involve web
[19:04:16] *** Quits: brauliobz (~manjaro-u@user/brauliobz) (Ping timeout: 245 seconds)
[20:09:29] *** Joins: andrhua (~andrhua@31.134.187.8)
[20:14:47] *** Joins: natrys (~natrys@user/natrys)
[20:25:50] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[20:30:31] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[20:30:33] <fub> Here is some code from a blog post about making a Go game. The state module here (called `Hayago.State`) has an alias to `Hayago.State`. Why is that/what does it do?
[20:30:41] <fub> Here is the code: https://github.com/jeffkreeftmeijer/hayago/blob/starter/lib/hayago/state.ex#L28
[20:30:50] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[20:32:14] *** Quits: mahmutov (~mahmutov@37.155.0.45) (Ping timeout: 260 seconds)
[20:33:46] *** Joins: mahmutov (~mahmutov@37.155.35.85)
[20:40:00] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[20:54:50] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 260 seconds)
[21:40:59] <Nicd> fub: allows them to write just State instead of Hayago.State
[21:41:06] <Nicd> but personally I would use __MODULE__
[21:49:37] *** Joins: notzmv (~zmv@user/notzmv)
[21:58:43] *** Quits: terminalpusher (~terminalp@2a01:586:1df7:1:ca29:66be:5f4:3efd) (Remote host closed the connection)
[22:04:54] *** Joins: Guest4926 (~Guest49@2a02:a03f:661c:ba00:766a:93cf:1f24:2e8f)
[22:12:21] *** Quits: Guest4926 (~Guest49@2a02:a03f:661c:ba00:766a:93cf:1f24:2e8f) (Quit: Client closed)
[22:16:41] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[22:17:22] *** Joins: hendursaga (~weechat@user/hendursaga)
[22:25:23] *** Joins: thojanssens__ (~thojansse@185.194.187.18)
[22:26:55] *** Quits: thojanssens__ (~thojansse@185.194.187.18) (Read error: Connection reset by peer)
[22:28:13] *** Joins: Sgeo (~Sgeo@user/sgeo)
[22:29:11] *** Quits: thojanssens_ (~thojansse@ptr-178-51-77-74.dyn.mobistar.be) (Ping timeout: 264 seconds)
[23:06:15] *** Quits: andrhua (~andrhua@31.134.187.8) (Remote host closed the connection)
[23:06:58] <fub> Nicd: but if you are already in the "State" module, you do not have to write Hayago.State, or do you?
[23:07:07] * fub is totally new to Elixir
[23:09:34] <fub> Nicd: without the alias, would this line here have to be Hayago.State.place(...)? https://github.com/jeffkreeftmeijer/hayago/blob/starter/lib/hayago/state.ex#L189
[23:18:25] <Nicd> Try it
[23:19:28] <Nicd> As I said I would use __MODULE__
[23:21:36] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[23:22:19] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[23:24:41] *** Gustavo6046_ is now known as Gustavo6046
[23:40:11] *** Joins: luishgh (~user@2804:7f2:2787:7b46:d1ba:f3a6:be40:39fe)
[23:48:34] *** Joins: voltone (~voltone@2a02:14c:8a60:2a:446f:cb4b:7f14:2c75)
[23:55:13] <luishgh> Hi everyone! I was wondering, is this a proper place to ask technical questions about elixir's inner workings, more specifically IEx's completion mechanism?
