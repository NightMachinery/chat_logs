[00:04:34] <NimEventer> New thread by Stefan_Salewski: String expression parsing, see https://forum.nim-lang.org/t/8368
[00:13:11] *** Joins: PMunch (~PMunch@c01F28BC3.dhcp.as2116.net)
[00:13:30] <FromDiscord> <ondrejoda> i have another question to the people that know how to use the sdl2 wrapper
[00:13:48] <FromDiscord> <ondrejoda> how do you use sdl scancodes in nim?
[00:14:27] <FromDiscord> <ondrejoda> because i can't seem to use the result from `getKeyboardState()` and a scancode in an if statement like i could in c++
[00:14:36] <FromDiscord> <ondrejoda> so how do i compare these in nim?
[00:17:44] <PMunch> Why aren't you able to use it?
[00:17:55] <FromDiscord> <ondrejoda> `/home/ondrejoda/Nim/Zimmer/main.nim(17, 24) Error: type mismatch: got <int, Scancode>`
[00:18:02] <FromDiscord> <ondrejoda> (edit) "`/home/ondrejoda/Nim/Zimmer/main.nim(17," => "`/main.nim(17,"
[00:18:20] <FromDiscord> <ondrejoda> sent a code paste, see https://play.nim-lang.org/#ix=3wXc
[00:18:57] <PMunch> Have you read the documentation for getKeyboardState?
[00:19:17] <FromDiscord> <ondrejoda> yes, i have actually used it like this in c++
[00:19:18] <PMunch> It returns a pointer to an array indexed by scancodes
[00:19:29] <FromDiscord> <ondrejoda> oh wait
[00:19:33] <FromDiscord> <ondrejoda> i know what's wrong
[00:19:36] <FromDiscord> <ondrejoda> ü§¶‚Äç‚ôÇÔ∏è
[00:20:06] <FromDiscord> <ondrejoda> no wait that still gives me an error
[00:20:56] <PMunch> Something like this: https://play.nim-lang.org/#ix=3wXd
[00:22:42] <FromDiscord> <ondrejoda> that gives me a `/main.nim(17, 24) Error: type mismatch: got <int, typeof(nil)>`
[00:22:55] <PMunch> It's pretty well explained in the docs: https://github.com/Vladar4/sdl2_nim/blob/master/sdl2/private/keyboard.nim#L46-L58
[00:23:23] <PMunch> Please share a code snippet, that makes it way easier to see what you're doing wrong
[00:23:54] <FromDiscord> <ondrejoda> ok gimme a sec
[00:26:59] <FromDiscord> <ondrejoda> sent a code paste, see https://play.nim-lang.org/#ix=3wXf
[00:27:09] <FromDiscord> <ondrejoda> here
[00:28:49] <FromDiscord> <ondrejoda> i can't really share all of the code because it's all part of a game engine
[00:29:06] <FromDiscord> <ondrejoda> so if i shared all of it i would fill up this whole chat room :D
[00:30:25] <FromDiscord> <ondrejoda> the error is `/home/ondrejoda/Nim/Zimmer/main.nim(17, 23) Error: type mismatch: got <array[0..512, uint8], Scancode>`
[00:30:35] <FromDiscord> <ondrejoda> (edit) "`/home/ondrejoda/Nim/Zimmer/main.nim(17," => "`/main.nim(17,"
[00:31:26] <FromDiscord> <Rika> need to change scancode to int i assume
[00:31:41] <FromDiscord> <ondrejoda> `.toInt` doesn't work
[00:31:45] <FromDiscord> <Rika> `.int`
[00:32:00] <PMunch> Hmm, let me guess, you don't use the wrapper that I linked to?
[00:32:08] <FromDiscord> <ondrejoda> In reply to @PMunch "Hmm, let me guess,": i don
[00:32:11] <FromDiscord> <ondrejoda> t
[00:32:13] <FromDiscord> <ondrejoda> yeah
[00:32:18] <FromDiscord> <ondrejoda> In reply to @Rika "`.int`": that did work!
[00:32:27] <PMunch> But yeah, .int should work for you then
[00:42:28] *** Quits: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 252 seconds)
[00:54:19] <FromDiscord> <‚Éü‚Éü> can be used for msdos?
[01:08:54] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:64af:236c:94c0:6372)
[01:24:55] *** Joins: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca)
[01:29:15] *** Quits: krux02 (~krux02@p200300e81719330059822492d9593bdc.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[01:45:29] <FromDiscord> <treeform> In reply to @tandy "i want to make": Let me know if you run into any issues with that. I have tests for this in jsony, but more tests always help.
[01:46:51] <FromDiscord> <exelotl> is it normal that you can't do `proc main() {.tags: [].} = ...`
[01:47:05] <FromDiscord> <exelotl> I have to do `proc main() {.tags: [RootEffect].} = ...` instead
[01:49:35] <FromDiscord> <dom96> certainly doesn't seem normal
[01:54:24] <FromDiscord> <exelotl> is there a way to tell where the effect came from?
[01:54:40] *** Quits: flynn (~mcbloch@user/flynn) (Ping timeout: 240 seconds)
[01:55:08] *** Quits: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 250 seconds)
[01:57:04] *** Joins: flynn (~mcbloch@user/flynn)
[01:59:48] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[01:59:54] <Gustavo6046> is a concept akin to a trait in rust?
[02:01:07] <FromDiscord> <Elegantbeef> Concepts are type classes defined by what they fulfill instead of their name
[02:02:21] <FromDiscord> <dain> like duck typing?
[02:02:40] <FromDiscord> <Elegantbeef> User defined duck typing yes
[02:02:51] <FromDiscord> <Elegantbeef> It's the easiest way to explain it infact
[02:03:43] <FromDiscord> <Elegantbeef> To show a practical example https://forum.nim-lang.org/t/8328#53675
[02:22:19] <FromDiscord> <‚Éü‚Éü> has anyone made a nim application for msdos
[02:29:37] *** Quits: def- (~def-@static.238.114.9.176.clients.your-server.de) (Quit: -)
[02:29:50] *** Joins: def- (~def-@static.238.114.9.176.clients.your-server.de)
[02:30:49] <FromDiscord> <Ayy Lmao> Are concepts basically just meant to give more helpful error messages than generics, or are there more benefits?
[02:34:49] <FromDiscord> <Recruit_main707> any funtion to reverse a sequence in the stdlb?
[02:37:42] *** Quits: PMunch (~PMunch@c01F28BC3.dhcp.as2116.net) (Quit: leaving)
[02:44:18] <FromDiscord> <Recruit_main707> found the algorithm module
[02:50:01] <FromDiscord> <retkid> > /usr/lib/gcc/x86_64-w64-mingw32/11.2.0/../../../../x86_64-w64-mingw32/bin/ld: unrecognized option '-z'‚Üµ> /usr/lib/gcc/x86_64-w64-mingw32/11.2.0/../../../../x86_64-w64-mingw32/bin/ld: use the --help option for usage information‚Üµ> collect2: error: ld returned 1 exit status
[02:50:13] <FromDiscord> <retkid> i have no clue how to fix this
[02:50:20] <FromDiscord> <retkid> i've updated my system
[02:50:24] <FromDiscord> <retkid> (edit) "i've updated my system ... " 03added "and uh"
[02:50:25] <FromDiscord> <retkid> dunno
[02:50:55] <FromDiscord> <retkid> google not very usefulk
[02:50:56] <FromDiscord> <retkid> (edit) "usefulk" => "useful"
[02:51:22] <FromDiscord> <Gustavo6046> In reply to @Gustavo6046 "I'll take a deeper": Back! Did anyone figure it out?
[02:52:05] <FromDiscord> <retkid> alright maybe compiling through wine will be easier
[02:52:08] <FromDiscord> <Gustavo6046> In reply to @Elegantbeef "Concepts are type classes": Ahh, I see, like Python's typing.Protocol
[02:52:14] <FromDiscord> <Gustavo6046> or kiinda sorta like a Rust trait
[02:52:28] <FromDiscord> <retkid> Nim is kinda a mix of a lot of language
[02:52:29] <FromDiscord> <retkid> (edit) "language" => "languages"
[02:52:33] <FromDiscord> <Gustavo6046> In reply to @‚Éü‚Éü "has anyone made a": That would be fun
[02:52:38] <FromDiscord> <retkid> i see some rust, then i see some kotlin, and then i see some jva
[02:52:40] <FromDiscord> <retkid> (edit) "jva" => "java"
[02:52:53] <FromDiscord> <retkid> python, even bash stuff
[02:53:17] <FromDiscord> <retkid> obviously strong C and C++\
[02:53:21] <FromDiscord> <retkid> (edit) "C++\" => "C++"
[02:53:26] <FromDiscord> <retkid> we even got inline asm
[02:53:38] <FromDiscord> <tandy> can you index a seq like \`exampleSeq[1\:]\` to get items after index 1?
[02:53:57] <FromDiscord> <treeform> In reply to @tandy "can you index a": `exampleSeq[1..^1]`
[02:54:26] <FromDiscord> <retkid> hey treeform do you have a guide to install nim underwine
[02:54:29] <FromDiscord> <retkid> (edit) "underwine" => "unde rwine"
[02:54:37] <FromDiscord> <retkid> (edit) "unde rwine" => "under wine"
[02:57:37] <FromDiscord> <Gustavo6046> the issue happens in both stable and devel
[02:58:06] *** Quits: def- (~def-@static.238.114.9.176.clients.your-server.de) (Quit: -)
[02:58:16] *** Joins: def- (~def-@static.238.114.9.176.clients.your-server.de)
[02:58:25] <FromDiscord> <Gustavo6046> can i use choosenim/nimble to build nim from source (without manually git cloning and such) and apply optimizations like `-O2 -march=native -Xclang -load -Xclang LLVMPolly.so -mllvm -polly7`?
[03:00:53] <FromDiscord> <Gustavo6046> In reply to @Gustavo6046 "the issue happens in": http://ix.io/3wXV
[03:08:32] <FromDiscord> <dom96> no, you can't
[03:09:42] <FromDiscord> <Gustavo6046> oh
[03:09:54] <FromDiscord> <Gustavo6046> also i typoed the last arg
[03:11:19] *** Quits: mjsir911 (~bnc@user/mjsir911) (Remote host closed the connection)
[03:11:37] *** Joins: mjsir911 (~bnc@user/mjsir911)
[03:17:47] <FromDiscord> <RattleyCooper> Anybody have experience using the `triggerTypingIndicator` proc from `dimscord`?
[03:19:42] <FromDiscord> <RattleyCooper> I'm running into an issue with an `OSError` that is hard to reproduce, but it seems to always happen after a call to `triggerTypingIndicator`.  What is the difference between a `Future` and an `owned(Future)`?
[03:19:45] *** Quits: Vladar (~Vladar@46.162.2.53) (Remote host closed the connection)
[03:23:37] <FromDiscord> <RattleyCooper> The `OSError` is `the network connection was aborted by the local system`
[03:23:54] <FromDiscord> <5271> can i run a terminal command in nim?
[03:24:12] <FromDiscord> <5271> like system("mkdir test") or smth like that
[03:24:26] <FromDiscord> <RattleyCooper> In reply to @5271 "can i run a": Check `osproc`
[03:24:38] <FromDiscord> <5271> okay
[03:24:57] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:64af:236c:94c0:6372) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[03:25:25] <FromDiscord> <RattleyCooper> If you need to read the output check out `execCmdEx`.  If running on windows, you may need to prepend `cmd /c` to run the command in it's own `cmd.exe`
[03:26:05] <FromDiscord> <RattleyCooper> Depending on the command.  Certain commands are not binaries(or something like that) and it seems like nothing in `osproc` can run these commands
[03:26:41] <FromDiscord> <RattleyCooper> (edit) "Depending on the command.  Certain commands are not binaries(or something like that) and it seems like nothing in `osproc` can ... run(and" 03added "actually" | "actuallyrun these commands ... " 03added "(and if they can it's not obvioius in the docs)"
[03:57:31] <FromDiscord> <Gustavo6046> if the AUR has -git packages for nim and nimble
[03:57:38] <FromDiscord> <Gustavo6046> and also one for choosenim, but those are incompatible
[03:57:39] <FromDiscord> <Gustavo6046> which should I pick?
[03:57:55] <FromDiscord> <Gustavo6046> I already built nim{,ble}-git (optimized) but it might be a worse idea
[03:58:03] <FromDiscord> <Gustavo6046> I dunno I didn't think it through and I want you to do it for me because I'm big dumb
[04:01:11] *** Joins: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca)
[04:01:59] <FromDiscord> <Gustavo6046> "function definition not found"? zsh, wut?
[04:05:19] <FromDiscord> <Gustavo6046> As for Nim itself, is there no uint / uint? Only int / uint?
[04:08:40] *** Joins: krux02 (~krux02@p200300e81719330059822492d9593bdc.dip0.t-ipconnect.de)
[04:22:34] <FromDiscord> <Gustavo6046> Aaaa
[04:22:43] <FromDiscord> <Gustavo6046> I have an object definition with arrays whose size is static at runtime but not at compile time
[04:22:54] <FromDiscord> <Gustavo6046> I don't want to use generics because that screws up with the compiler
[04:23:03] <FromDiscord> <Gustavo6046> I don't want to use a predefined constant because that's lame and potentially inflexible
[04:24:10] <FromDiscord> <Gustavo6046> (I don't want to use an array of structs either, SoA > AoS)
[04:24:44] <FromDiscord> <Gustavo6046> but I can't assign an array to an openarray variable type when constructing this object
[04:28:27] <FromDiscord> <InventorMatt> you could possibly generate it in a macro then
[04:30:42] <FromDiscord> <Gustavo6046> oops
[04:30:50] <FromDiscord> <Gustavo6046> i redid the generic way and somehow it worked this time lol
[04:31:34] <FromDiscord> <Gustavo6046> so
[04:31:46] <FromDiscord> <Gustavo6046> i have an iterator that iterates on possibly multiple chunks of struct-of-arrays values
[04:32:12] <FromDiscord> <Gustavo6046> what if i don't want arrays that aren't used in the for loop's body to be fetched by the iterator?
[04:32:43] <FromDiscord> <Gustavo6046> like, `for ray in ray_iterator(my_ray_list): ray.position[0] += ray.direction[0]  ray.stepSize; # ...`
[04:33:08] <FromDiscord> <Gustavo6046> i would want this iterator to fetch position, direction, and stepSize, but not attenuate, numBounces, or sourcePos
[04:33:13] <FromDiscord> <Gustavo6046> I could implement a naive iterator like this
[04:37:09] <FromDiscord> <Gustavo6046> sent a code paste, see https://play.nim-lang.org/#ix=3wYa
[04:37:50] <FromDiscord> <Gustavo6046> but `getValue` involves constructing a `RayValue` by fetching values from all of the respective arrays in each ray chunk's `RaysValuesArray`
[04:38:07] <FromDiscord> <Gustavo6046> So I guess the crux of the question is, is there some way to lazy construct an object?
[04:39:53] <FromDiscord> <Gustavo6046> Oo
[04:39:55] <FromDiscord> <Gustavo6046> maybe using a closure!
[04:39:59] <FromDiscord> <Gustavo6046> But can a closure argument be like a block?
[04:43:55] *** Quits: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 252 seconds)
[04:57:21] <FromDiscord> <Gustavo6046> Ah it can
[04:57:22] <FromDiscord> <Gustavo6046> I'm dumb
[04:59:12] <FromDiscord> <impbox [ftsf]> `for i in 0..size - 1:`‚Üµbtw you can use `for i in 0..<size:`
[05:06:08] <FromDiscord> <Gustavo6046> \:o
[05:06:09] <FromDiscord> <Gustavo6046> thanks
[05:12:15] <madprops> so this is not permitted it seems: https://dpaste.org/rcQv
[05:19:00] <FromDiscord> <impbox [ftsf]> why do you say it's not permitted?
[05:20:59] <FromDiscord> <impbox [ftsf]> what kind of value do you want to return?
[05:22:04] <FromDiscord> <impbox [ftsf]> the return type needs to be determinable at compile time
[05:22:11] <madprops> either float or int
[05:22:27] <madprops> i guess i have to pick one
[05:22:54] <FromDiscord> <impbox [ftsf]> or return a variant object
[05:23:11] <FromDiscord> <impbox [ftsf]> what's your use-case?
[05:24:08] <madprops> well I have a proc that changes words to numbers, like "three hundred twelve" == 312  . But there can also be decimals "two point two" == 2.2
[05:24:31] <FromDiscord> <impbox [ftsf]> but what are you using it for?
[05:24:36] <FromDiscord> <impbox [ftsf]> what do you use the numbers for?
[05:25:00] <madprops> it's for a library, so it's for the users to decide
[05:25:33] <madprops> maybe returning float all the time is not that bad
[05:25:37] <FromDiscord> <impbox [ftsf]> well it's probably better to return a float
[05:25:53] <FromDiscord> <impbox [ftsf]> or have two procs
[05:28:37] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://play.nim-lang.org/#ix=3wYh
[05:30:41] <madprops> generics
[05:31:01] <FromDiscord> <Gustavo6046> aa finally I did it and the tests passed
[05:31:27] <FromDiscord> <Gustavo6046> In reply to @impbox "what's your use-case?": updating certain arrays of the RaysValueArray object type selectively, which should be more CPU-cache-friendly
[05:31:41] <FromDiscord> <Gustavo6046> sent a code paste, see https://play.nim-lang.org/#ix=3wYk
[05:31:46] <FromDiscord> <Gustavo6046> (edit) "https://play.nim-lang.org/#ix=3wYk" => "https://paste.rs/u09"
[05:32:02] <FromDiscord> <Gustavo6046> for example, updating position using direction shouldn't require loading attenuation or the # of bounces
[05:33:16] <FromDiscord> <impbox [ftsf]> awesome (sorry my q was for madprops)
[05:38:16] *** Quits: krux02 (~krux02@p200300e81719330059822492d9593bdc.dip0.t-ipconnect.de) (Remote host closed the connection)
[05:40:06] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[05:41:14] *** Joins: xet7 (~xet7@user/xet7)
[05:44:56] *** Joins: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca)
[05:47:01] <madprops> so I made this thing https://play.nim-lang.org/#ix=3wYm
[05:55:54] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=3wYo
[05:55:54] <FromDiscord> <retkid> you ever find a solution for thijs
[05:55:56] <FromDiscord> <retkid> (edit) "thijs" => "this"
[05:58:01] <FromDiscord> <impbox [ftsf]> madprops, cool, can you make it do fractions too? eg "one hundredth"
[05:58:21] <madprops> hmm that's an interesting idea
[05:58:50] <madprops> could make another proc for that
[05:59:05] <FromDiscord> <impbox [ftsf]> "one and three quarters"
[05:59:28] <FromDiscord> <impbox [ftsf]> also localisation support? =p
[05:59:38] <FromDiscord> <retkid> is there anyway to just install the nim compiler
[05:59:48] <FromDiscord> <retkid> for windows
[05:59:53] <FromDiscord> <retkid> so i dont have to crosscompile
[06:00:07] *** Quits: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 240 seconds)
[06:00:11] <FromDiscord> <retkid> (edit) "crosscompile" => "crosscompile, thats just giving too many issues"
[06:02:52] <FromDiscord> <retkid> oh look at that its working
[06:02:53] <FromDiscord> <retkid> cool nevermind
[06:03:02] <FromDiscord> <impbox [ftsf]> you can install nim on windows... not sure if you can install it without the other stuff
[06:03:25] <FromDiscord> <retkid> is cross compiling from linux to bsd and macos easier?
[06:06:59] <FromDiscord> <impbox [ftsf]> easier cross-compiling from linux to windows than, anything to macos
[06:07:06] <FromDiscord> <impbox [ftsf]> i've done it in the past but it was a massive pain
[06:16:44] <FromDiscord> <Gustavo6046> Is there a fast inverse square root?
[06:16:52] <FromDiscord> <Gustavo6046> Oh wait
[06:17:09] <FromDiscord> <Gustavo6046> It's in the x86 extensions ever since Carmack did it in Quake 3, isn't it
[06:17:14] <FromDiscord> <Gustavo6046> (edit) "It's in the x86 extensions ever since ... Carmack" 03added "John"
[06:17:25] <FromDiscord> <Gustavo6046> But there should be a proc in math that does FISR if it's not hardware available
[06:17:37] <FromDiscord> <Gustavo6046> Rather than calling sqrt, which probably is just opaque enough that it can't be optimized by a compiler into a FISR
[06:17:40] <FromDiscord> <Gustavo6046> I dunno
[06:24:38] <FromDiscord> <Gustavo6046> Okay that's just curiosity
[06:25:04] <FromDiscord> <Gustavo6046> In reply to @impbox "awesome (sorry my q": oh ok, sorry
[06:46:41] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:48:41] <FromDiscord> <retkid> In reply to @impbox "easier cross-compiling from linux": really
[06:48:52] <FromDiscord> <retkid> ugh
[06:49:21] <FromDiscord> <impbox [ftsf]> https://github.com/tpoechtrager/osxcross i think i used this
[06:49:23] <nrds> <12R2D299> 4GitHub: 7"Mac OS X cross toolchain for Linux, FreeBSD, OpenBSD and Android (Termux)"
[06:49:23] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/880275197364686858/unknown.png
[06:49:34] <FromDiscord> <retkid> what i got so far
[06:49:43] <FromDiscord> <retkid> windows32 doesn't work so im figuring that out
[06:50:18] <FromDiscord> <impbox [ftsf]> are you using mingw32?
[06:50:21] <FromDiscord> <Elegantbeef> If you're on linux and want to make a windows binary you may be able to just install mingw
[06:50:27] <FromDiscord> <impbox [ftsf]> (edit) "mingw32?" => "mingw32/64?"
[06:50:38] <FromDiscord> <retkid> it was being weird so i just installed nim in wine
[06:50:41] <FromDiscord> <impbox [ftsf]> yeah, cross compiling using mingw was pretty easy
[06:51:12] <FromDiscord> <Elegantbeef> "being weird?
[06:51:39] <FromDiscord> <retkid> lemme get the command i was using
[06:54:09] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=3wYz
[06:54:32] <FromDiscord> <retkid> easier just to use wine
[06:54:44] <FromDiscord> <Elegantbeef> Ehhh
[06:55:16] <FromDiscord> <Elegantbeef> What's the program you were making, simple exported hello world still?
[06:57:00] <FromDiscord> <retkid> theres some more complex stuff but just hello world testing stuff
[06:57:07] <FromDiscord> <retkid> by complex i mean just tests
[06:57:14] <FromDiscord> <retkid> nothing actually useful
[06:57:25] <FromDiscord> <retkid> iterators and there was hashmaps i think
[06:58:24] <FromDiscord> <retkid> but now im testing this library for packaging native libraries to give the illusion of things being platform independant
[06:58:24] <FromDiscord> <Elegantbeef> You did install mingw?
[06:58:29] <FromDiscord> <retkid> (edit) "independant" => "independent"
[06:58:35] <FromDiscord> <retkid> yea i have mingw
[06:59:45] <FromDiscord> <Elegantbeef> I can only say for some reason you dont have the header files
[06:59:58] <FromDiscord> <Elegantbeef> Which fixing makes more sense than to use wine
[07:01:27] <FromDiscord> <retkid> Not having headerfiles for c itself sounds like an arch related rabbithole
[07:01:32] <FromDiscord> <retkid> that i dont wanna deal with
[07:02:25] <FromDiscord> <impbox [ftsf]> `external compiler program 'gcc` looks like it's not using mingw's gcc
[07:02:55] <FromDiscord> <retkid> which makes sense
[07:03:02] <FromDiscord> <retkid> but how else do i engage it beside d:mingw
[07:03:03] <FromDiscord> <impbox [ftsf]> you can tell nim which gcc to use in config.nims
[07:03:10] <FromDiscord> <Elegantbeef> Oh i see the issue
[07:03:14] <FromDiscord> <Elegantbeef> you're doing `--os:windows`
[07:03:16] <FromDiscord> <Elegantbeef> That's not needed
[07:03:22] <FromDiscord> <Elegantbeef> just do `-d:mingw`
[07:03:25] <FromDiscord> <Gustavo6046> (edit) "https://play.nim-lang.org/#ix=3wYA" => "https://paste.rs/q3q"
[07:03:26] <FromDiscord> <Gustavo6046> sent a code paste, see https://paste.rs/Ehw
[07:03:31] <FromDiscord> <Gustavo6046> sadly this is pre-1.5 and thus pre-`random.randState()`
[07:03:35] <FromDiscord> <retkid> In reply to @Gustavo6046 "can I set an": probably predefine them
[07:03:47] <FromDiscord> <Gustavo6046> ?
[07:04:15] <FromDiscord> <retkid> declaring a proc and assigning something to a variable is very different and i think the way to do that is to define the function then assign it
[07:04:24] <FromDiscord> <impbox [ftsf]> `let randfunc  = if rng == nil: ... else: ...`
[07:04:24] <FromDiscord> <retkid> but maybe im wrong thats just general coding stuff
[07:04:35] <FromDiscord> <Elegantbeef> Yea imp has the proper solution
[07:05:07] <FromDiscord> <retkid> new compiler
[07:05:11] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=3wYB
[07:05:11] <FromDiscord> <retkid> (edit) "new compiler ... " 03added "problems"
[07:05:19] <FromDiscord> <retkid> should probably rename helloworld\
[07:05:21] <FromDiscord> <retkid> (edit) "helloworld\" => "helloworld"
[07:05:22] <FromDiscord> <Gustavo6046> ahh
[07:05:34] <FromDiscord> <impbox [ftsf]> compiler is working! now it's just your linker
[07:05:45] <FromDiscord> <impbox [ftsf]> progress
[07:05:49] <FromDiscord> <Gustavo6046> thing is
[07:05:55] <FromDiscord> <retkid> oh haha
[07:05:58] <FromDiscord> <retkid> sorry wrong biot
[07:06:07] <FromDiscord> <retkid> (edit) "biot" => "bit"
[07:06:10] <FromDiscord> <Gustavo6046> it's just so rng.rand is used if rng is passed, otherwise the random module-level rand
[07:06:25] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=3wYC
[07:06:33] <FromDiscord> <Gustavo6046> sent a code paste, see https://play.nim-lang.org/#ix=3wYD
[07:06:37] <FromDiscord> <retkid> thats what i would do
[07:06:37] <FromDiscord> <Gustavo6046> but sadly that is not the case
[07:06:40] <FromDiscord> <Elegantbeef> Can we see the entire proc?
[07:06:44] <FromDiscord> <retkid> why not just define them
[07:06:55] <FromDiscord> <impbox [ftsf]> retkid, where's the error?
[07:06:56] <FromDiscord> <Gustavo6046> sure
[07:07:01] <FromDiscord> <Gustavo6046> sent a code paste, see https://play.nim-lang.org/#ix=3wYE
[07:07:06] <FromDiscord> <retkid> In reply to @impbox "retkid, where's the error?": that is the entire output
[07:07:10] <FromDiscord> <Gustavo6046> ignore that `ref`
[07:07:31] <FromDiscord> <Gustavo6046> actually no don't ignore that `ref`
[07:07:36] <FromDiscord> <impbox [ftsf]> @retkid if you run that command does it output anything? `/usr/bin/x86_64-w64-mingw32-gcc   -shared -o /home/retkid/Desktop/downloads/jnim/nimcompile/src/helloworld.dll  /home/retkid/.cache/nim/helloworld_d/stdlib_io.nim.c.o /home/retkid/.cache/nim/helloworld_d/stdlib_system.nim.c.o /home/retkid/.cache/nim/helloworld_d/@mhelloworld.nim.c.o     -Wl,-O1,--sort-common,--as-needed,-z,relro,-z,now`
[07:08:08] <FromDiscord> <retkid> same error
[07:08:12] <FromDiscord> <impbox [ftsf]> what error?
[07:08:32] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=3wYF
[07:08:45] <FromDiscord> <impbox [ftsf]> ok, you didn't show that error above
[07:09:01] <FromDiscord> <retkid> it... is
[07:09:20] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=3wYG
[07:09:23] <FromDiscord> <retkid> sorry i have a bit of a birthday headache
[07:09:24] <FromDiscord> <retkid> haha
[07:09:46] <FromDiscord> <retkid> can you see why i just like used wine
[07:09:55] <FromDiscord> <impbox [ftsf]> because you wanted more of a headache?
[07:09:59] <FromDiscord> <Elegantbeef> What's the issue with the code you provided hustavo?
[07:10:01] <FromDiscord> <retkid> well, the wine worked fine
[07:10:06] <FromDiscord> <impbox [ftsf]> wine -> hangover
[07:10:43] <FromDiscord> <impbox [ftsf]> https://stackoverflow.com/questions/55418931/ld-exe-unrecognized-option-z
[07:10:45] <FromDiscord> <retkid> the only thing i cant work with wine is the x32 but thats probably because i need to figure out how to install ming32
[07:10:50] <FromDiscord> <impbox [ftsf]> apparently -z doesn't exist on windows
[07:10:55] <FromDiscord> <impbox [ftsf]> where is that command coming from?
[07:11:18] <FromDiscord> <retkid> somewhere within nim
[07:11:28] <FromDiscord> <retkid> because im not supplying anything with a z in it
[07:11:31] <FromDiscord> <impbox [ftsf]> what is your build command?
[07:11:33] <FromDiscord> <Elegantbeef> Gustavo here you go https://play.nim-lang.org/#ix=3wYI
[07:11:41] <FromDiscord> <impbox [ftsf]> are you passing --os:windows ?
[07:11:42] <FromDiscord> <retkid> nim c -d:mingw --app:lib --gc:arc src/(
[07:11:44] <FromDiscord> <retkid> (edit) "src/(" => "src/"
[07:11:54] <FromDiscord> <Elegantbeef> need to dereference the rng to make it work
[07:11:55] <FromDiscord> <retkid> lets try with arc
[07:12:21] <FromDiscord> <Elegantbeef> Now the real question gustavo is can this be resolved at compile time?
[07:12:38] <FromDiscord> <impbox [ftsf]> retkid, you're already using arc? try adding --os:windows
[07:13:45] <FromDiscord> <retkid> well, if i ad --os:windows with mingw it creates a different problem
[07:13:50] <FromDiscord> <retkid> (edit) "ad" => "add"
[07:13:55] <FromDiscord> <impbox [ftsf]> which is?
[07:14:12] <FromDiscord> <Elegantbeef> Like does this work for your use case gustavo? https://play.nim-lang.org/#ix=3wYK
[07:14:16] <FromDiscord> <retkid> In reply to @Elegantbeef "you're doing `--os:windows`": a
[07:14:41] <FromDiscord> <impbox [ftsf]> that was when you were using the wrong compiler
[07:14:53] <FromDiscord> <Elegantbeef> when passing `--os:windows` to the nim compiler you get a nice cannot find header error it seems to me
[07:15:04] <FromDiscord> <retkid> yea
[07:15:05] <FromDiscord> <retkid> i do
[07:15:11] <FromDiscord> <retkid> if i use mingw with windows
[07:15:21] <FromDiscord> <retkid> if i used use mingw i get a more complicated error
[07:15:28] <FromDiscord> <retkid> (edit) "used" => "just"
[07:15:54] <FromDiscord> <retkid> with no clear or definite solution besides "use wine lol"
[07:15:57] <FromDiscord> <retkid> which works
[07:16:28] <FromDiscord> <Elegantbeef> Can i get the exact code you're using?
[07:17:19] <FromDiscord> <retkid> im gonna delete all the code and just do a echo "Hello World" to try and isolate the issue
[07:17:53] <FromDiscord> <Elegantbeef> Well i have an exported proc + hello world echo'd and mine runs fine
[07:18:00] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=3wYL
[07:18:01] <FromDiscord> <retkid> > echo "hello world"
[07:20:36] <FromDiscord> <Elegantbeef> Hmm your mingw is newer than mine so perhaps it's a version issue?
[07:20:53] <FromDiscord> <Elegantbeef> Does it compile fine without `--app:lib`?
[07:20:54] <FromDiscord> <impbox [ftsf]> nim version?
[07:21:36] <FromDiscord> <retkid> In reply to @Elegantbeef "Does it compile fine": same issue
[07:21:54] <FromDiscord> <retkid> 1.4.8
[07:22:19] <FromDiscord> <retkid> should i submit an issue to nim github?
[07:23:18] <FromDiscord> <impbox [ftsf]> There's one already, but maybe add some detail
[07:24:16] <FromDiscord> <retkid> but yea
[07:24:22] <FromDiscord> <impbox [ftsf]> https://github.com/nim-lang/Nim/issues/17441
[07:24:23] <FromDiscord> <retkid> wine is really the only way to gabout this right now
[07:24:41] <FromDiscord> <retkid> > Arch-specific
[07:24:44] <FromDiscord> <retkid> always cool\
[07:24:45] <FromDiscord> <retkid> (edit) "cool\" => "cool"
[07:24:55] <FromDiscord> <impbox [ftsf]> Or figure out what's causing the -z to be added and remove it
[07:24:59] <FromDiscord> <retkid> its a matter of tracking down whatever the fuck arch is mixing
[07:25:01] <FromDiscord> <retkid> (edit) "mixing" => "missing"
[07:25:40] <FromDiscord> <retkid> i'll add a stack trace to the issue
[07:30:22] <FromDiscord> <retkid> alright time to see how im gonna cross compile to macos
[07:30:28] <FromDiscord> <impbox [ftsf]> Good luck
[07:30:49] <FromDiscord> <retkid> im scrolling for the tool you linked
[07:31:11] <FromDiscord> <retkid> but i might just do the wine thing but with darling
[07:31:58] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[07:32:06] <FromDiscord> <retkid> why does apple wanna make compiling to their platform hard
[07:32:14] <FromDiscord> <retkid> wouldn't a logical company make and maintain a gcc fork
[07:33:56] <FromDiscord> <Elegantbeef> Apple likes walled gardens
[07:34:05] <FromDiscord> <Gustavo6046> oops
[07:34:31] <FromDiscord> <Gustavo6046> sent a code paste, see https://play.nim-lang.org/#ix=3wYS
[07:34:33] <FromDiscord> <Gustavo6046> currently complains with
[07:34:43] <FromDiscord> <Gustavo6046> sent a code paste, see https://play.nim-lang.org/#ix=3wYT
[07:34:52] <FromDiscord> <Gustavo6046> and realy I min min, not max, but beside that
[07:35:02] <FromDiscord> <retkid> In reply to @Elegantbeef "Apple likes walled gardens": to quote wendell
[07:35:17] <FromDiscord> <retkid> "while apple perverts the unix ethos"
[07:36:31] <FromDiscord> <j-james> Could I get some structural feedback on my wlroots wrapper?
[07:36:33] <FromDiscord> <j-james> https://github.com/j-james/wlroots
[07:36:35] <nrds> <12R2D299> 4GitHub: 7"Nim bindings for wlroots."
[07:36:54] <FromDiscord> <Elegantbeef> The issue gustavo is your concept gives a typedesc in the second slot
[07:37:00] <FromDiscord> <Elegantbeef> It should be like `default Vector3` or similar
[07:37:15] <FromDiscord> <Gustavo6046> oh
[07:37:16] <FromDiscord> <Gustavo6046> (edit) "oh" => "oh?"
[07:37:39] <FromDiscord> <Elegantbeef> `Vector3` is a type description so that procedure will never match
[07:37:43] <FromDiscord> <Gustavo6046> ahh
[07:37:55] <FromDiscord> <Gustavo6046> ah I se
[07:37:57] <FromDiscord> <Gustavo6046> (edit) "se" => "see"
[07:38:01] <FromDiscord> <Gustavo6046> huh
[07:38:08] <FromDiscord> <Gustavo6046> it still complains, but now for an unrelated line
[07:38:10] <FromDiscord> <j-james> I'd mostly like to know if I'm wrapping things right
[07:38:21] <FromDiscord> <Gustavo6046> sent a code paste, see https://play.nim-lang.org/#ix=3wYU
[07:38:23] <FromDiscord> <Gustavo6046> this time here:
[07:38:29] <FromDiscord> <j-james> Since that can't really be tested until it's finished and working
[07:38:50] <FromDiscord> <Gustavo6046> sent a code paste, see https://play.nim-lang.org/#ix=3wYV
[07:39:30] <FromDiscord> <Gustavo6046> (line 37 char 24, though I indented the original line with one single extra space to fit the comment's # because I wanted the "arrow" to be as wide as the offset of 24)
[07:40:40] <FromDiscord> <Elegantbeef> james depending on the level of these bindings i do have to ask if you want to use C bitsets or Nim? \:D
[07:40:55] <FromDiscord> <Gustavo6046> sent a code paste, see https://play.nim-lang.org/#ix=3wYW
[07:47:45] <FromDiscord> <Elegantbeef> You dont have a `collidable(Vector3, Vector3)`?
[07:47:55] <FromDiscord> <Elegantbeef> Rather `checkCollidable`
[07:55:22] <FromDiscord> <j-james> In reply to @Elegantbeef "james depending on the": Fair, haha! My goal was to get working bindings and then try to remove pointer use as much as possible with `var` and so forth
[07:56:02] <FromDiscord> <j-james> It's just an annoyingly large library to get working
[07:56:10] <FromDiscord> <Elegantbeef> Yea i can see
[07:56:47] <FromDiscord> <Elegantbeef> I dont know the api much so aside from telling you to remove `wlr` from everything and also making the flags nim bitsets not much i can say \:D
[08:00:48] <FromDiscord> <treeform> sent a code paste, see https://play.nim-lang.org/#ix=3wYZ
[08:04:41] <FromDiscord> <retkid> i pinged you because i found you posted the error
[08:05:04] <FromDiscord> <retkid> it was the nim installer someone made that has no need because nim already comes with a good one
[08:05:19] <FromDiscord> <retkid> i was setting up nim on wine
[08:09:24] <FromDiscord> <impbox [ftsf]> retkid the -z is coming from /etc/nim/nim.cfg most likely
[08:12:34] <FromDiscord> <impbox [ftsf]> chuck a nim.cfg in your project dir with `gcc.options.linker = ""` and test
[08:13:21] <FromDiscord> <impbox [ftsf]> on arch i was able to compile with `nimc c -o:main.exe -d:mingw main.nim`
[08:13:38] <FromDiscord> <impbox [ftsf]> after i added that nim.cfg
[08:21:59] <FromDiscord> <Gustavo6046> In reply to @Elegantbeef "Rather `checkCollidable`": no, `check_collision` is meant to be a signed distance function
[08:22:11] <FromDiscord> <Gustavo6046> positive numbers mean outside, negative means inside, 0 is right on the surface
[08:22:14] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[08:22:20] <FromDiscord> <Gustavo6046> the larger the number, the larger the distance (in or uot)
[08:22:24] <FromDiscord> <Gustavo6046> (edit) "uot)" => "out)"
[08:22:58] <FromDiscord> <Gustavo6046> so it's not meant to compare two points
[08:23:03] <FromDiscord> <Gustavo6046> that would be their distances
[08:23:26] <FromDiscord> <Gustavo6046> but heh
[08:23:28] <FromDiscord> <Gustavo6046> that makes it work
[08:23:28] <FromDiscord> <Gustavo6046> funny
[08:24:06] <FromDiscord> <Gustavo6046> I guess having an overload of something that is `Collidable` but not `CollidableWorld` in the same module hints at the compiler that there can be _other_ overloads with `Collidable`
[08:24:07] <FromDiscord> <Gustavo6046> neat!
[08:25:19] <FromDiscord> <Gustavo6046> Btw I made a test case for the normal finder, for a plane whose positive side faces -Y, and it seems to get something near <0, -1, 0> pretty consistently \:D
[08:25:29] <FromDiscord> <Gustavo6046> sent a code paste, see https://play.nim-lang.org/#ix=3wZ0
[08:25:34] <FromDiscord> <Gustavo6046> sent a code paste, see https://play.nim-lang.org/#ix=3wZ1
[08:25:37] <FromDiscord> <Gustavo6046> Yay!
[08:31:40] <FromDiscord> <Elegantbeef> Well @Gustavo6046  concepts are so you can abstract procedures to operator on a type that fulfils a prerequisite so there are always overloads when calling a procedure with a concept that then calls procedures on it
[08:31:51] <FromDiscord> <Gustavo6046> Ah
[08:32:17] <FromDiscord> <Gustavo6046> hmm
[08:32:25] <FromDiscord> <Gustavo6046> wait that's confusing
[08:32:40] <FromDiscord> <Gustavo6046> procedures _to_ operator?
[08:32:50] <FromDiscord> <Elegantbeef> to operate on a type\
[08:32:52] <FromDiscord> <Gustavo6046> ah
[08:33:10] <FromDiscord> <Gustavo6046> I see
[08:33:16] <FromDiscord> <Gustavo6046> how does a concept call procedures on itself?
[08:33:26] <FromDiscord> <Gustavo6046> it doesn't run anything, it's just a structural definition
[08:33:30] <FromDiscord> <Elegantbeef> It doesnt of course
[08:33:36] <FromDiscord> <Gustavo6046> ah
[08:33:39] <FromDiscord> <Gustavo6046> you said at the end
[08:34:26] <FromDiscord> <Elegantbeef> In your example you've made it so there is a `checkCollision` procedure that you want for this procedure, which means any call to that procedure has an type overloaded version of that procedure
[08:35:20] <FromDiscord> <Elegantbeef> Well i say "has" but i just mean there is overload which matches the concept so it pretty much has one
[08:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:36:39] <FromDiscord> <impbox [ftsf]> @retkid updated the issue with a fix, error might be coming from arch's/etc/nim/nim.cfg
[08:37:54] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/880302511272116344/nim.cfg
[08:37:56] <FromDiscord> <retkid> theres mine
[08:38:04] <FromDiscord> <retkid> if you need it
[08:38:12] <FromDiscord> <retkid> lemme upload it as .txt
[08:38:51] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/880302752037752835/nim.txt
[08:40:31] <FromDiscord> <impbox [ftsf]> I don't, but try the suggested fix and see if it solves it for you
[08:48:10] <FromDiscord> <retkid> In reply to @impbox "I don't, but try": return 0
[08:48:13] <FromDiscord> <retkid> üëç
[08:48:34] <FromDiscord> <impbox [ftsf]> \o/
[08:49:00] <FromDiscord> <retkid> however, you failed to get it to me before midnight, it does not count as a birthday gift
[08:49:24] <FromDiscord> <retkid> i kid
[08:49:27] <FromDiscord> <retkid> i appreciate you <3
[08:54:59] <FromDiscord> <Gustavo6046> Imo, if any concept in the same module has that proc's name, the compiler should assume that proc _will_ be overloaded by other types that satisfy this trait at some point, and if there is only one concrete implementation of this proc in this moduile, it should not attempt to assume that this proc is the implementation and that its type signature overrides the one implied by this concept.
[08:55:17] <FromDiscord> <Elegantbeef> I dont follow what you mean
[08:55:22] <FromDiscord> <Gustavo6046> As in
[08:57:05] <FromDiscord> <Gustavo6046> sent a code paste, see https://play.nim-lang.org/#ix=3wZ6
[08:58:03] <FromDiscord> <Gustavo6046> Compiling this should probably error because‚Üµ1. it assumes that `getName` only accepts `NameTag` because that's the only implementation the compiler sees;‚Üµ2. `NameTag::content` is a `Named`, not a `NameTag`, which does not satisfy this preliminary type signature `getName(NameTag)`.
[08:58:41] <FromDiscord> <Elegantbeef> Well `Named` is not a concrete type
[08:58:50] <FromDiscord> <Gustavo6046> True, but this has no reason to error.
[08:59:06] <FromDiscord> <Gustavo6046> I assume that the compiler parses concepts before it deals with procs' type signatures, right?
[08:59:35] <FromDiscord> <Elegantbeef> I believe concepts checked at instantiation
[09:00:26] <FromDiscord> <Yardanico> In reply to @impbox "<@217459674700578816> updated the issue": Yeah, seems like it's yet another bug of Nim installed from a package manager
[09:00:39] <FromDiscord> <Yardanico> @retkid are you on arch or on an arch based distro?
[09:01:27] <FromDiscord> <Gustavo6046> In that case, when the compiler sees `Named`, it sees the condition `getName(n) is string`. Since `n` is a _concept variable_, as soon as it sees `getName(n)` and no further, it should automatically consider `getName(typeof n)`, in this case `getName(Named)`, as a valid signature for future passes, and only bark if in the specific future instance that `getName` _is_ called, that specific implementation doesn't exist.
[09:02:14] <FromDiscord> <Gustavo6046> Of course, a proc that takes a `Named` and then calls `getName` on that value, is guaranteed that such a `getName` implementation exists by the mere virtue of taking a `Named` because `Named` by definition requires that a `getName ` is defined for it.
[09:02:22] <FromDiscord> <Elegantbeef> but `getName(n)` != `getName(typeof(n))`
[09:02:35] <FromDiscord> <Elegantbeef> You might very well have a procedure which takes a type description
[09:02:37] <FromDiscord> <Gustavo6046> In reply to @Elegantbeef "but `getName(n)` != `getName(typeof(n))`": the latter was a type signature thing
[09:02:44] <FromDiscord> <Gustavo6046> not an actual expression
[09:02:50] <FromDiscord> <Gustavo6046> it should consider that as a valid signature
[09:03:11] <FromDiscord> <Gustavo6046> That is a very simple example that has no reason to cause a compiler error and yet it does
[09:03:18] <FromDiscord> <Gustavo6046> So let's look at where else the issue could be
[09:03:35] <FromDiscord> <Elegantbeef> Can you provide an example that isnt invalid code?
[09:03:37] <FromDiscord> <Gustavo6046> `getName(tag: NameTag)` tries to call `getName(tag.content: Named)`
[09:04:04] <FromDiscord> <Elegantbeef> IE remove the vector and also write the NameTag properly
[09:04:14] <FromDiscord> <Gustavo6046> `tag.content` is a Named, therefore the compiler should assume that there is an implementation for it, and only check in instantiations of `tag.content`.
[09:04:34] <FromDiscord> <Elegantbeef> And you can do that
[09:04:37] <FromDiscord> <Gustavo6046> Oh wait
[09:04:53] <FromDiscord> <Gustavo6046> `NameTag` isn't a concrete type, is it?
[09:05:06] <FromDiscord> <Gustavo6046> Since `Named` isn't a concrete type and we're basically trying to define a member variable `content` that is
[09:05:10] <FromDiscord> <Gustavo6046> Yep!
[09:05:12] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/I06
[09:05:21] <FromDiscord> <Gustavo6046> I think that would work
[09:05:42] <FromDiscord> <Elegantbeef> Well it's what i think you were trying to describe with that odd `NameTag = type` and `content: Named` \:D
[09:06:02] <FromDiscord> <Gustavo6046> That works
[09:06:16] <FromDiscord> <Gustavo6046> Ehehe
[09:06:29] <FromDiscord> <Gustavo6046> Well
[09:06:35] <FromDiscord> <Gustavo6046> turns out the other code barked a different thing
[09:06:45] <FromDiscord> <Gustavo6046> Which would be the right error message
[09:06:49] <FromDiscord> <Gustavo6046> sent a code paste, see https://play.nim-lang.org/#ix=3wZ8
[09:06:50] <FromDiscord> <Gustavo6046> But in the real world example it was actually a seq
[09:07:20] <FromDiscord> <Elegantbeef> well if you ever feel equipped to improve the state of concepts it's one PR away to contribute üòÄ
[09:08:03] <FromDiscord> <Elegantbeef> I do know they're rather cryptic error wise, and often result in some weird issues
[09:08:23] <FromDiscord> <Elegantbeef> And there's also the new concept syntax
[09:08:51] <FromDiscord> <Elegantbeef> where you do `getName(n: Self): string` instead of the `getName(n) is string`
[09:09:11] <FromDiscord> <Gustavo6046> Odd
[09:09:12] <FromDiscord> <Gustavo6046> this worked too
[09:09:24] <FromDiscord> <Gustavo6046> it was very similar to the example that didn't work
[09:09:27] <FromDiscord> <Gustavo6046> sent a code paste, see https://paste.rs/F4j
[09:10:29] <FromDiscord> <Gustavo6046> which implemented a concept for a seq where each item also satisfied this concept, and involved calling a 'concept method' on each element of this seq
[09:11:25] <FromDiscord> <Gustavo6046> (edit) "seq" => "seq," | "concept," => "concept (`seq[X] satisfies X`)," | "where each item also satisfied thisconcept (`seq[X] satisfies X`),and involved calling a 'concept method' on each element of this seq ... " 03added "(`f(s) where s: seq[X] involves f(s[0]), f(s[1]), ...`)"
[09:11:35] <FromDiscord> <Elegantbeef> Well i know it's a multi file project so you could throw what you have on https://doongjohn.github.io/nim-playground/ and i could see if i can reason the issue
[09:11:38] <FromDiscord> <Gustavo6046> (edit) "f(s[0]), f(s[1]), ...`)" => "f(s[i]) for every i in s`)"
[09:12:21] <FromDiscord> <Gustavo6046> My case was fixed simply by implementing `f` for its own return type (`f(T): T`), or I guess could be any other overload (`f(X): T`)
[09:12:29] *** Quits: FromDiscord (~FromDisco@mail.nim-lang.org) (Remote host closed the connection)
[09:12:42] *** Joins: FromDiscord (~FromDisco@mail.nim-lang.org)
[09:13:53] <FromDiscord> <Gustavo6046> I'm just astonished that, when there was only implementation for `checkCollision`, the compiler assumed that it was only for `CollidableWorld = seq[Collidable]` when it should have considered that `Collidable` by definition implied a `checkCollision` implementation for itself and that we were only calling `checkCollision` on the items of this seq (which were `Collidable`s)
[09:14:21] <FromDiscord> <Gustavo6046> Like how did it even once ever think that.
[09:14:24] <FromDiscord> <Gustavo6046> That's what gets me.
[09:14:50] <FromDiscord> <Gustavo6046> My nametag example doesn't seem to reproduce this strange issue even if I make it closer to what the real example was.
[09:15:09] <FromDiscord> <Elegantbeef> I dont follow, it got a type mismatch and printed the procedure(s) which was closest to what you wanted
[09:15:20] <FromDiscord> <Gustavo6046> In reply to @Elegantbeef "Well i know it's": It's simple, though, and in this case I think one module suffices it show it.
[09:15:23] <FromDiscord> <Gustavo6046> A) works, B) doesn't.
[09:15:24] <FromDiscord> <Gustavo6046> A):
[09:15:31] <FromDiscord> <Gustavo6046> B):
[09:15:37] <FromDiscord> <Gustavo6046> sent a code paste, see https://paste.rs/ebh
[09:15:51] <FromDiscord> <Gustavo6046> sent a code paste, see https://play.nim-lang.org/#ix=3wZc
[09:15:55] <FromDiscord> <Elegantbeef> "one module suffices"... `import vector` üòÄ
[09:16:11] <FromDiscord> <Gustavo6046> `Vector3` is just a `array[3, float64]` with some operator overloads
[09:16:23] <FromDiscord> <Gustavo6046> I don't see why that would cause issues
[09:16:33] <FromDiscord> <Gustavo6046> Nonetheless, I did your suggestion of implementing `check_collision` for two `Vector3` . That somehow fixed the error.
[09:16:38] <FromDiscord> <Elegantbeef> Well i meant for me to test the code and see the error
[09:16:41] <FromDiscord> <Gustavo6046> Ah
[09:18:20] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3wZd
[09:19:49] <FromDiscord> <Gustavo6046> Yep
[09:20:38] <FromDiscord> <Gustavo6046> But for some reason, without implementing the `check_collision(Vector3, Vector3)`, calling it in the implementation of `check_collision(CollidableWorld)` raises errors.
[09:21:40] <FromDiscord> <Elegantbeef> I'm trying to understand why you think it shouldnt cause an error
[09:22:37] <FromDiscord> <Elegantbeef> You're attempting to call a procedure `checkCollision` that takes `Vector3, Vector3` which doesnt exist
[09:23:41] <FromDiscord> <Gustavo6046> In reply to @Elegantbeef "You're attempting to call": `CollidableWorld` items are `Collidable`, not `Vector3`.
[09:25:29] <FromDiscord> <Elegantbeef> Ok so what's your present input data then
[09:25:45] <FromDiscord> <Elegantbeef> Like https://play.nim-lang.org/#ix=3wZe
[09:28:24] <FromDiscord> <Gustavo6046> Ah well
[09:28:30] <FromDiscord> <Gustavo6046> it works in play.nim-lang.org if I merge it into one module
[09:28:32] <FromDiscord> <Gustavo6046> but not for me
[09:29:02] <FromDiscord> <Gustavo6046> sent a code paste, see https://play.nim-lang.org/#ix=3wZg
[09:29:11] <FromDiscord> <Gustavo6046> Where do you think I'm calling it for Vector3? I'm not
[09:30:04] <FromDiscord> <Elegantbeef> I thought the one error said that mismatch, but looking back seems i was wrong
[09:32:42] <FromDiscord> <Gustavo6046> It was this
[09:32:58] <FromDiscord> <Gustavo6046> sent a code paste, see https://play.nim-lang.org/#ix=3wZj
[09:33:09] <FromDiscord> <Gustavo6046> (edit) "https://play.nim-lang.org/#ix=3wZj" => "https://play.nim-lang.org/#ix=3wZk"
[09:33:17] <FromDiscord> <Gustavo6046> (the other lines are because test case)
[09:33:18] <FromDiscord> <Gustavo6046> (edit) "https://play.nim-lang.org/#ix=3wZk" => "https://play.nim-lang.org/#ix=3wZl"
[09:34:09] <FromDiscord> <Elegantbeef> Whatever the `Collidable`  is in this case is missing a `checkCollision` procedure
[09:34:51] <FromDiscord> <Elegantbeef> Collidable isnt a concrete type remember, it's just a type that quacks like that concept
[09:39:52] <FromDiscord> <Gustavo6046> Well, nothing is calling `check_collision` for `CollidableWorld` yet
[09:40:03] <FromDiscord> <Gustavo6046> It was just for a `YPlane` in this test case:
[09:40:23] <FromDiscord> <Gustavo6046> sent a code paste, see https://play.nim-lang.org/#ix=3wZo
[09:40:53] <FromDiscord> <Gustavo6046> Ignore that last part where I printed 30 of them and posted them here earlier lol
[09:41:36] <FromDiscord> <Gustavo6046> (edit) "https://play.nim-lang.org/#ix=3wZo" => "https://play.nim-lang.org/#ix=3wZp"
[09:42:25] <FromDiscord> <Elegantbeef> Which line is the error?
[09:44:13] <FromDiscord> <Gustavo6046> It was earlier in `ray_interface` in the line that called `check_collision` for `obj` (which was also `world[ind]`)
[09:46:51] <FromDiscord> <Elegantbeef> Ah so this just might be the odd binding of concepts, and the procedure not being accessible
[09:53:26] <FromDiscord> <Gustavo6046> Ah
[09:54:47] <FromDiscord> <ondrejoda> sent a code paste, see https://play.nim-lang.org/#ix=3wZt
[09:55:15] <FromDiscord> <Elegantbeef> Cause color is a reference object in this case so you need to do `new result`
[09:55:23] <FromDiscord> <ondrejoda> oh
[09:55:28] <FromDiscord> <ondrejoda> and it returns itself?
[09:56:03] <FromDiscord> <ondrejoda> by that i mean that i don't have to write `return result` at the end of the proc
[09:56:36] <FromDiscord> <Elegantbeef> result is an implicit return value
[09:57:27] <FromDiscord> <Elegantbeef> Also is there a reason you're using a `ref object` for colour?
[09:58:12] <FromDiscord> <codic> yeah you often don't need to
[09:58:34] <FromDiscord> <codic> you can also write `(r, g, b, a: uint8)`
[09:58:42] <FromDiscord> <ondrejoda> well i wanted to make my own object
[09:58:51] <FromDiscord> <codic> you can use plain object
[09:58:56] <FromDiscord> <ondrejoda> but i didn't know that it doesn't have to be a ref
[09:58:57] <FromDiscord> <codic> no real need for ref object in this case
[09:59:11] <FromDiscord> <codic> ref object = passed around by reference
[09:59:25] <FromDiscord> <codic> it's just a shorthand for in every plcae you use it making the type ref T instead of T iirc
[09:59:46] <FromDiscord> <ondrejoda> i get that‚Üµok, so i will replace that
[10:00:09] <FromDiscord> <Elegantbeef> With that change you dont need `new result`
[10:00:18] <FromDiscord> <Elegantbeef> since `new` initializes a reference
[10:00:40] <FromDiscord> <ondrejoda> figured
[10:02:03] <FromDiscord> <Elegantbeef> also you'll want to rename it `initColor` since it's a non reference
[10:02:19] <FromDiscord> <Elegantbeef> That's the convention atleast
[10:06:07] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://paste.rs/6BN
[10:06:32] <FromDiscord> <Elegantbeef> Indeed, with ref or non ref aswell
[10:06:38] <FromDiscord> <impbox [ftsf]> yep
[10:06:50] <FromDiscord> <Elegantbeef> Or you can drop the `result =` and be cool
[10:06:57] <FromDiscord> <impbox [ftsf]> that's too confusing for me
[10:07:26] <FromDiscord> <impbox [ftsf]> `proc newColor(r:uint8, g:uint8, b:uint8, a:uint8): Color = Color(r: r, g: g, b: b, a: a)`
[10:07:44] <FromDiscord> <impbox [ftsf]> (edit) "newColor(r:uint8, g:uint8, b:uint8, a:uint8):" => "newColor(r,g,b,a: uint8):"
[10:35:59] *** Joins: PMunch (~PMunch@vpn.dualog.com)
[10:37:29] <FromDiscord> <retkid> In reply to @Yardanico "<@217459674700578816> are you on": arch\
[10:58:52] <FromDiscord> <enthus1ast> @Gustavo6046\: btw you can annotate the concept with the {.explain.} pragma then it should give more hints why a concept does not match
[10:59:03] <FromDiscord> <Gustavo6046> ahh
[11:00:08] <FromDiscord> <Gustavo6046> In reply to @codic "ref object = passed": Isn't it better for large values to pass by reference rather than copying the raw values everytime? Or is that only when "copying"?
[11:00:18] <FromDiscord> <Gustavo6046> I remember Rust makes a big deal of things like this
[11:00:28] <FromDiscord> <Gustavo6046> Anyway I'm of to bed now
[11:00:29] <FromDiscord> <Gustavo6046> Cya!
[11:00:38] <FromDiscord> <Elegantbeef> Depends what you're doing Nim passes by reference for large objects
[11:00:52] <FromDiscord> <Elegantbeef> Nim doesnt do copy on write for variable assignment though
[11:01:20] <FromDiscord> <Gustavo6046> ah
[11:01:47] <FromDiscord> <Elegantbeef> you can also annotate the typedef with `{.byCopy.}` or `{.byRef.}` to force it to always be one
[11:27:14] <madprops> how can I raise with a simple message?
[11:27:20] <madprops> do I have to specify an exception type?
[11:28:20] <madprops> oh I think not
[11:28:33] <FromDiscord> <Rika> you can use a generic `CatchableError` for your exception type
[11:28:41] <FromDiscord> <Rika> i think its called catchable error, i forget
[11:30:21] <madprops> thanks that works
[11:42:21] <madprops> is doAssertRaises a way to check if a call "succesfully" raises and exception on integration tests?
[11:44:30] <madprops> I just want to check some cases where the proc is supposed to raise an exception, or is that silly?
[11:45:03] <FromDiscord> <Elegantbeef> That's what `doAssertRaises` is for
[11:45:34] <madprops> don't think I understand it though..
[11:46:03] <madprops> tried something like https://dpaste.org/tooa
[11:46:39] <FromDiscord> <Elegantbeef> Yea that block doesnt raise `CatchableError`
[11:48:23] <FromDiscord> <Elegantbeef> Something like this is proper https://play.nim-lang.org/#ix=3wZJ
[11:48:44] <FromDiscord> <Elegantbeef> Imagine the raise is done by giving incorrect data instead of the bool
[11:50:04] <madprops> ah I see, thanks
[11:54:56] <madprops> what's the purpose of: Warning: No nimblemeta.json file found in ...[path]   on every compilation ?
[11:55:06] <madprops> it's from a program unrelated to the current project
[11:55:11] <madprops> which I installed with nimble
[11:56:50] <madprops> actually only happens on `nimble test`
[11:58:17] <madprops> can't remove the package 
[11:58:44] <madprops> Error: unhandled exception: cannot read from file: thepackage/nimblemeta.json [IOError]
[11:59:34] <madprops> when I removed it manually
[11:59:47] <madprops> well*
[12:02:33] *** Joins: Vladar (~Vladar@46.162.2.53)
[12:24:01] *** Joins: max22- (~maxime@2a01cb0883359800c534c53a91df6761.ipv6.abo.wanadoo.fr)
[12:26:42] <PMunch> I've seen some errors recently with regards to the playground. Turns out it OOMed when the log file from a container got too large (whoops). I've tweaked the server to truncate logs now, and also done some changes to the OOM policy on the server, so the playground should be much more stable and resilient to malicious code now :)
[12:29:21] <FromDiscord> <Elegantbeef> Nice, i'll try not to crash it so much
[12:29:34] <FromDiscord> <Yardanico> there are also some alternatives (not saying that playground is bad :P)
[12:29:36] <FromDiscord> <Yardanico> e.g. wandbox.org
[12:29:46] <FromDiscord> <Yardanico> replit.com (they finally updated to 1.4.8)
[12:29:55] <FromDiscord> <Yardanico> wandbox.org even has a devel version
[12:30:42] <FromDiscord> <Elegantbeef> Pmunch following behind üòõ
[12:30:49] <FromDiscord> <Elegantbeef> "falling" is the proper verb, my brain is dumb
[12:31:03] <PMunch> Yeah I know, still nice to have the official playground a bit more stable :P
[12:31:06] <FromDiscord> <Yardanico> apparently in replit you even get access to a shell https://media.discordapp.net/attachments/371759389889003532/880361197390680064/unknown.png
[12:31:29] <FromDiscord> <Yardanico> (the dir name is the default random name of the repl session)
[12:32:22] <PMunch> I'd like to build devel images on the playground as well, but it's not the most powerful of things so I fear it might make it pretty slow or fill up the disk..
[12:32:49] <FromDiscord> <Elegantbeef> Could get nightlies
[12:33:08] <FromDiscord> <Elegantbeef> Not the best but hey some devel
[12:33:47] <PMunch> Yeah that is what I was thinking
[12:34:18] <PMunch> Hmm, I guess it wouldn't have to build them from scratch. Could just grab the latest nightly in a container
[12:35:00] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[12:36:37] <FromDiscord> <Elegantbeef> I may take a look at adding some stuff tomorrow, mostly the local storing of files and ability to give the parameters to the compiler directly
[12:37:12] <FromDiscord> <Elegantbeef> The local storing is front end only so easier t odo
[12:38:25] <PMunch> The frontend should really get a touch-up as well
[12:39:59] <FromDiscord> <Yardanico> also a really small nitpick which can probably be fixed with a really small fix - reverse ordering in the version selection dropdown
[12:40:05] <FromDiscord> <Yardanico> so it sorts from v1 to v0 and not the other way
[12:42:06] <PMunch> I just sorted it lazily that way so latest would be on top and the default :P
[12:42:24] <PMunch> But yeah, that'd be an easy fix as well
[12:48:43] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:64af:236c:94c0:6372)
[13:15:03] <PMunch> Hmm, not sure if Nim in general has just gotten better or if my standards have dropped. But I feel like lately that stuff increasingly "just works" when I program in Nim
[13:15:30] <PMunch> Just downloaded 16 month old bindings for libclang and they work perfectly
[13:16:53] <FromDiscord> <Rika> You‚Äôre probably doing less sketchy stuff
[13:21:27] <PMunch> Hmm, maybe.. But somehow I doubt it :P
[13:28:08] <FromDiscord> <Varriount> Anyone want to guess how long writing this comment took? https://github.com/nim-lang/RFCs/issues/411#issuecomment-906221395
[13:30:00] <FromDiscord> <hugogranstrom> 3 days? :P
[13:30:13] <FromDiscord> <Elegantbeef> Rumour has it he's still writing
[13:30:29] <FromDiscord> <hugogranstrom> xD
[13:32:27] <FromDiscord> <xflywind> In reply to @Varriount "Anyone want to guess": links are broken
[13:33:02] <FromDiscord> <xflywind> > nim-lang/Nim#17898 had a perfectly viable solution without modifying how initRand works.‚Üµ> nim-lang/Nim#18729 has a miniscule amount of overhead - amortized over time, it's a single boolean check. Overhead must always be considered in the context it occurs in.
[13:33:31] <FromDiscord> <Varriount> Gosh darn it
[13:33:46] <FromDiscord> <Elegantbeef> Now for the joke of "clearly not enough time spent writing"
[13:34:01] <FromDiscord> <Varriount> 4 hours
[13:38:38] <FromDiscord> <enthus1ast> I also have this impression, thanks to stable releases and back porting effort I guess‚Üµ(<@709044657232936960_=50=4dunch=5b=49=52=43=5d>)
[13:42:28] <FromDiscord> <Varriount> In reply to @Elegantbeef "Now for the joke": You try digging through Intel's instruction set documentation and Linux's source code for 4 hours, and see if your head doesn't spin.
[13:43:50] <FromDiscord> <Varriount> Though, actually, Intel's documentation was rather well organized.
[13:44:03] <PMunch> Given a table from something to a sequence, is there an easy way to add something to that sequence given a key, creating a new sequence to add to if the key doesn't exist in the table?
[13:44:47] <FromDiscord> <Varriount> getOrDefault?
[13:44:52] <FromDiscord> <Elegantbeef> It's not lazily evaluated but `hasKeyOrPut`
[13:45:19] <FromDiscord> <Neko~Neko~ni> sent a long message, see http://ix.io/3x08
[13:45:55] <PMunch> mgetOrPut seems like what I need
[13:45:57] <FromDiscord> <Elegantbeef> well you have an unscoped global variable
[13:46:01] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:64af:236c:94c0:6372) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[13:46:03] <FromDiscord> <Elegantbeef> Nim's variables have sensible scope
[13:46:22] <FromDiscord> <Elegantbeef> you can do `var someVar {.global.} = 100` inside a procedure to make it global but scoped to the function
[13:47:12] <FromDiscord> <Elegantbeef> Uncertain what the code looks like so cannot say much to what's best
[13:48:13] <FromDiscord> <Neko~Neko~ni> In reply to @Elegantbeef "you can do `var": Sorry but what do you exactly mean by that?
[13:49:30] <FromDiscord> <Elegantbeef> For instance
[13:49:34] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3x0a
[13:50:45] <FromDiscord> <Neko~Neko~ni> i see,thanks
[13:51:17] <FromDiscord> <Elegantbeef> If that doesnt help feel free to write a minimal example and i'll suggest something else
[14:15:38] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:64af:236c:94c0:6372)
[14:22:22] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:64af:236c:94c0:6372) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[14:39:05] *** Joins: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net)
[14:41:01] *** Quits: Pyautogui (~Pyautogui@108-216-110-132.lightspeed.sndgca.sbcglobal.net) (Client Quit)
[15:08:58] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[15:11:31] *** Joins: xet7 (~xet7@user/xet7)
[15:12:58] *** Joins: Vladar (~Vladar@46.162.2.53)
[15:23:03] *** Joins: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca)
[15:29:09] <FromDiscord> <gogolxdong (liuxiaodong)> How to get the home dir of current user, like windows is C\:/Users/admin
[15:30:54] <FromDiscord> <Yardanico> https://nim-lang.org/docs/os.html#getHomeDir
[15:31:10] <FromDiscord> <Yardanico> you can just search "home" in the search bar in docs
[15:34:32] <FromDiscord> <gogolxdong (liuxiaodong)> ok, thanks
[15:35:50] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:64af:236c:94c0:6372)
[15:43:41] *** Quits: max22- (~maxime@2a01cb0883359800c534c53a91df6761.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[15:45:45] *** Quits: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 248 seconds)
[16:11:36] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:40:11] *** Joins: arkurious (~arkurious@user/arkurious)
[16:47:07] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:64af:236c:94c0:6372) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[17:01:59] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[17:03:07] *** Joins: flynn (~mcbloch@user/flynn)
[17:26:56] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:64af:236c:94c0:6372)
[17:44:30] <FromDiscord> <gerwy> umm i know its maybe a stupid thing to ask
[17:45:06] <FromDiscord> <gerwy> but how would i remove certain characters from string? i don't see any remove function that would remove one character from string in manual
[17:45:37] <FromDiscord> <enthus1ast> replace?
[17:45:49] <FromDiscord> <enthus1ast> https://nim-lang.org/docs/strutils.html#replace%2Cstring%2Cstring%2Cstring
[17:46:06] <PMunch> Yeah, just replace with an empty string works
[17:46:10] <FromDiscord> <Recruit_main707> replace("someting", "")
[17:46:25] <FromDiscord> <gerwy> aah so that way
[17:46:39] <FromDiscord> <gerwy> Thanks!
[17:47:19] <FromDiscord> <gerwy> and i see there is multiReplace which is good because i need to get rid of quiet a few characters
[17:49:51] <FromDiscord> <enthus1ast> sent a code paste, see https://play.nim-lang.org/#ix=3x12
[17:52:15] <FromDiscord> <gerwy> too much work i think, replace should do the work
[17:57:39] *** Joins: jfinkhaeuser (~jfinkhaeu@user/jfinkhaeuser)
[18:00:03] *** Joins: rockcavera (~rc@192.12.112.204)
[18:00:03] *** Quits: rockcavera (~rc@192.12.112.204) (Changing host)
[18:00:03] *** Joins: rockcavera (~rc@user/rockcavera)
[18:03:04] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:64af:236c:94c0:6372) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[18:29:27] <PMunch> Hmm, trying to use libclang to parse C header files and generate the corresponding Nim bindings. Seems promising so far
[18:30:44] *** Quits: PMunch (~PMunch@vpn.dualog.com) (Quit: Leaving)
[18:31:42] <FromDiscord> <macaroni> hey there, I was wondering, how can I pass command line arguments to a nim executable? For example running from the terminal ./main arg1 arg2
[18:32:14] <FromDiscord> <gerwy> paramStr([index of the argument])‚Üµi think
[18:32:22] <FromDiscord> <gerwy> in os module
[18:33:02] <FromDiscord> <Rika> https://nim-lang.org/docs/os.html#paramStr%2Cint
[18:33:14] <FromDiscord> <Rika> or commandLineParams
[18:33:50] <FromDiscord> <macaroni> @gerwy  @Rika thank you both!
[18:52:27] *** Joins: vsantana (~vsantana@fttx-17713614839.usr.predialnet.com.br)
[18:52:57] *** Joins: pch_ (~pch@66.49.131.33)
[18:53:00] *** Quits: pch (~pch@66.49.131.33) (Read error: Connection reset by peer)
[19:02:07] *** Quits: def- (~def-@static.238.114.9.176.clients.your-server.de) (Quit: -)
[19:02:18] *** Joins: def- (~def-@static.238.114.9.176.clients.your-server.de)
[19:05:45] *** Quits: vsantana (~vsantana@fttx-17713614839.usr.predialnet.com.br) (Quit: Client closed)
[19:06:14] *** Joins: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca)
[19:19:38] <FromDiscord> <enthus1ast> @macaroni\:  for more sophisticated command line handling also have a look at\: https://github.com/c-blake/cligen
[19:19:40] <nrds> <12R2D299> 4GitHub: 7"Nim library to infer/generate command-line-interfaces / option / argument parsing; Docs At"
[19:55:04] <FromDiscord> <Yardanico> or docopt
[20:13:23] <arkanoid> PMunch, is it better than tree-sitter?
[20:13:27] <arkanoid> oh, he left
[20:27:06] <FromDiscord> <haxscramper> liblcang vs tree sitter?‚Üµ(<@709044657232936960_arkanoid=5b=49=52=43=5d>)
[20:30:33] <FromDiscord> <Recruit_main707> sent a code paste, see https://play.nim-lang.org/#ix=3x1Y
[20:32:23] <FromDiscord> <Rika> whats the issue?
[20:32:42] <FromDiscord> <Rika> oh
[20:32:48] <FromDiscord> <Rika> eh? no other changes?
[20:32:49] <FromDiscord> <Rika> are you sure
[20:32:55] <FromDiscord> <Recruit_main707> yes
[20:33:05] <FromDiscord> <Rika> so offset just suddenly changes?
[20:33:10] <FromDiscord> <Recruit_main707> apparently
[20:33:24] <FromDiscord> <Rika> can you reproduce with another example
[20:33:29] <FromDiscord> <Recruit_main707> ill try
[20:34:40] *** Quits: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 240 seconds)
[20:40:06] <FromDiscord> <Recruit_main707> after that i call  `GetVal[T](addr seq)` which casts a seq of bytes to something (float32 in this case),‚Üµremoving it makes the error disappear
[20:40:18] <FromDiscord> <Recruit_main707> ü•¥
[20:41:12] <FromDiscord> <Yardanico> you can't do a cast like that
[20:41:21] <FromDiscord> <Yardanico> you need `addr seq[0]` not `addr seq`
[20:41:29] <FromDiscord> <Yardanico> because seq has a header with capacity and other internal stuff at the start
[20:41:33] <FromDiscord> <Recruit_main707> i handle it inside the function
[20:41:38] <FromDiscord> <Yardanico> how
[20:41:44] <FromDiscord> <Yardanico> `addr seq` doesn't look very safe :P
[20:43:01] <FromDiscord> <Recruit_main707> basically dereference it and then get the address of the 0th element, but thats besides the point isnt it
[20:43:34] <FromDiscord> <Yardanico> well a lot of funny things can happen, like this seq being destroyed by the GC
[20:44:18] <FromDiscord> <Recruit_main707> still that cannot cause my issue
[21:16:32] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[21:17:39] *** Joins: flynn (~mcbloch@user/flynn)
[21:29:34] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[21:33:20] *** Joins: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca)
[21:37:18] *** Joins: xet7 (~xet7@user/xet7)
[21:38:49] *** Quits: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 248 seconds)
[21:52:17] *** Joins: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca)
[22:03:50] *** Quits: perro (~user@072-191-245-069.res.spectrum.com) (Read error: Connection reset by peer)
[22:08:00] *** Joins: perro (~user@072-191-245-069.res.spectrum.com)
[22:13:28] *** Joins: tiorock (~rc@192.12.112.204)
[22:13:28] *** Quits: tiorock (~rc@192.12.112.204) (Changing host)
[22:13:28] *** Joins: tiorock (~rc@user/rockcavera)
[22:13:28] *** Quits: rockcavera (~rc@user/rockcavera) (Killed (tungsten.libera.chat (Nickname regained by services)))
[22:13:28] *** tiorock is now known as rockcavera
[22:15:02] *** rockcavera is now known as Guest9186
[22:15:02] *** Joins: tiorock (~rc@user/rockcavera)
[22:15:02] *** Quits: Guest9186 (~rc@user/rockcavera) (Killed (cadmium.libera.chat (Nickname regained by services)))
[22:15:02] *** tiorock is now known as rockcavera
[22:20:13] *** Joins: andinus (andinus@tilde.institute)
[22:24:21] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:64af:236c:94c0:6372)
[22:29:47] <auxym_> Anyone have an idea what is going here? https://play.nim-lang.org/#ix=3x2D It won't run on playground, possibly because of unsafeAddr, so run it locally if possible...
[22:30:52] <FromDiscord> <Recruit_main707> unsafeAddr does work on playground so that cant be the reason afaik
[22:31:08] *** Quits: nrds (~NimBot@ns501209.ip-142-4-210.net) (Remote host closed the connection)
[22:31:20] <FromDiscord> <Recruit_main707> what are you trying to do?
[22:31:29] <auxym_> I'm trying to use the raw pointer of a `ref object` as a hash value for tables, but getting weird behavior. Seems to work OK when adding using []=, but doing the same in a proc call results in the same key apparently getting added to the table twice
[22:31:37] *** Joins: nrds (~NimBot@ns501209.ip-142-4-210.net)
[22:31:48] <FromDiscord> <haxscramper> https://wandbox.org/permlink/oCPMOzRpmJuwMiqe
[22:32:05] <FromDiscord> <haxscramper> same code, but at least not "killed"
[22:32:44] <auxym_> thanks. Same behavior I get locally. As you can see from the last 3 lines, my table has 2 keys with the same hash ??
[22:35:05] <auxym_> Is using `unsafeAddr.hash` as a hash value a bad idea for object refs? Any other suggestions? I want a table/hashset that can hold instances of ref objects that are identical in fields but are actually different instances 
[22:35:21] <FromDiscord> <Recruit_main707> > I'm trying to use the raw pointer of a ref object as a hash value‚Üµyou are not doing it correctly though, thats getting the address of the argument isnt it?
[22:35:48] <FromDiscord> <Recruit_main707> it should be something like cast[pointer](x).hash i guess
[22:36:07] <auxym_> My understanding is that unsafeAddr returns a `pointer` and then `hash[pointer
[22:36:32] <auxym_>  and then `hash[pointer]` for the hashes module uses the address to create a `Hash`
[22:36:43] <FromDiscord> <dom96> auxym_: what is your goal?
[22:36:49] <FromDiscord> <Recruit_main707> returns the pointer of what you pass, but you are already passing the pointer (reference), so thats the pointer to a pointer
[22:36:50] <FromDiscord> <dom96> hashing refs like this seems like a really bad idea
[22:37:35] <auxym_> dom96: I want a table/hashset that can hold instances of ref objects that are identical in fields but are actually different instances. Similar to default behavior to python object instances IIRC
[22:38:07] <auxym_> Recruit_main707: ah... makes sense. Using the cast sounds like a bad idea though.
[22:38:38] <FromDiscord> <dom96> what's the even higher-level goal here? üôÇ
[22:40:21] <auxym_> creating a simple graph structure that's basically a `type Graph[T] = Table[T, HashSet[T]]`. And can hold identical but separate instances of ref objects
[22:42:46] *** Quits: byanka (~byanka@78.137.43.40) (Ping timeout: 268 seconds)
[22:43:51] <FromDiscord> <dom96> why do you need it to hold identical but separate instances of ref objects?
[22:44:01] <FromDiscord> <s_tmux> var chicken = good‚Üµecho chicken‚Üµ‚Üµwhat am i doing wrong here?
[22:46:22] <auxym_> dom96: Good point. I could live without it. At worst add a uuid field to my objects to differentiate them. I guess my python background is showing.
[22:47:26] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[22:47:50] *** Joins: supakeen (~user@python/site-packages/supakeen)
[22:48:55] <auxym_> s_tmux: `var chicken = "good"` ? (the quotes?)
[22:49:13] <FromDiscord> <dom96> yes, that would be much better than having to rely on `unsafeAddr` and other unsafe mechanisms
[22:49:41] <auxym_> yeah. Thanks. I'll get something like that going.
[22:50:16] <FromDiscord> <s_tmux> oh right thanks
[22:52:06] <FromDiscord> <haxscramper> if you really want you can do `cas[int](Rf)`
[22:54:57] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 250 seconds)
[22:55:06] <auxym_> Yeah. I guess. I don't like the idea, sounds sort of unsafe and dependant on Nim's implementation of refs
[22:55:37] <auxym_> Which is probably not guaranteed to be stable across GCs, etc.
[22:58:45] <FromDiscord> <Zachary Carter> `unpackVarargs` is nice
[22:59:07] <FromDiscord> <Zachary Carter> sent a code paste, see https://paste.rs/LE0
[23:01:48] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:02:08] <FromDiscord> <s_tmux> sent a code paste, see https://play.nim-lang.org/#ix=3x2V
[23:02:16] <FromDiscord> <Zachary Carter> `echo repr response`
[23:02:20] <FromDiscord> <Zachary Carter> if `response` is a `ref object`
[23:02:32] <FromDiscord> <Zachary Carter> otherwise if it's a plain `object` or `tuple` you can just `echo response`
[23:02:54] <FromDiscord> <talaing> Hello, how can I send `application/x-www-form-urlencoded` data using `httpclient` module?
[23:03:01] <FromDiscord> <Zachary Carter> google
[23:03:04] <FromDiscord> <Zachary Carter> is how
[23:03:14] <FromDiscord> <Zachary Carter> and stdlib docs
[23:03:22] <FromDiscord> <dom96> In reply to @Zachary Carter "if `response` is a": you can also just `echo response[]` if it's a ref
[23:03:32] <FromDiscord> <Zachary Carter> or yeah - dereference the ref
[23:03:34] <FromDiscord> <Zachary Carter> that works too
[23:06:59] <FromDiscord> <Zachary Carter> In reply to @talaing "Hello, how can I": honestly the best thing to do is just learn to use github search
[23:07:04] <FromDiscord> <Zachary Carter> it's basically how I learned Nim
[23:07:21] <FromDiscord> <Zachary Carter> reading other people's source code, regardless of what language you're trying to learn, is an invaluable resource
[23:07:27] *** Joins: max22- (~maxime@2a01cb088335980015a0e8b6aa4a8809.ipv6.abo.wanadoo.fr)
[23:07:48] <FromDiscord> <Zachary Carter> I bet if you do a search on github for `application/x-www-form-urlencoded` and `httpclient` and set the language filter to `Nim` you'll find what you're looking for üòâ
[23:08:05] <FromDiscord> <dom96> Elite Tip right there
[23:08:34] <FromDiscord> <talaing> I don't use GitHub search very often, usually I just google the issue
[23:08:40] <FromDiscord> <talaing> thank you for your tip üôÇ
[23:08:44] <FromDiscord> <Zachary Carter> Yeah, no problem!
[23:09:55] <FromDiscord> <talaing> Found it in less than 1 minute
[23:10:07] <FromDiscord> <talaing> I'm gonna use GH search more often
[23:10:10] <FromDiscord> <talaing> Thank you üòÑ
[23:10:15] <FromDiscord> <Zachary Carter> üòÑ
[23:10:21] <FromDiscord> <Zachary Carter> You're very welcome üôÇ
[23:10:25] <FromDiscord> <Zachary Carter> (edit) "welcome üôÇ" => "welcome!"
[23:11:30] <FromDiscord> <dom96> This makes me wonder, are there any services for companies that crawl their code bases and index them into a nice search engine? I feel like that'd be a pretty nice SaaS opportunity
[23:14:52] *** Joins: SebastianM (~seba@user/sebastianm)
[23:14:56] <FromDiscord> <s_tmux> what is a proc? https://nim-lang.org/docs/httpclient.html#12
[23:16:13] <FromDiscord> <dom96> a different name for a function
[23:16:14] <FromDiscord> <dom96> https://en.wikipedia.org/wiki/Subroutine
[23:17:19] <FromDiscord> <s_tmux> thanks dom
[23:17:56] <FromDiscord> <s_tmux> sent a code paste, see https://play.nim-lang.org/#ix=3x2X
[23:20:12] <FromDiscord> <dom96> In reply to @dom96 "This makes me wonder,": of course, all good ideas have already been implemented by somebody else: https://about.sourcegraph.com/ üôÇ
[23:20:40] *** Joins: byanka (~byanka@78.137.43.40)
[23:21:57] <FromDiscord> <s_tmux> i was gonna start inventorying wirless networks in my local area, had a plan for it and everything.. then yesterday i found wigle.net
[23:28:41] <FromDiscord> <Cark> I'm trying to do multithreading, but it's quite the rabbit hole ...  This heap per thread business is frightening. For instance i'm trying to access a global (for now) seq from a withLock call... what happens if the seq allocates memory when adding to it from the thread ? will this memory possibly be allocated on the wrong heap ?
[23:30:25] <FromDiscord> <Cark> Maybe I'm supposed to only use Channels forgoing any sharing ? but doesn't orc fix some of this ?
[23:31:20] <FromDiscord> <Cark> i've been scouring the web and reading for hours, but i feel like some of the things i find are outdated, i'm not quite sure what is safe and what isn't
[23:32:52] <FromDiscord> <Cark> I think i could go full C in nim, but i like those seqs and strings
[23:33:17] <FromDiscord> <Cark> and the standard library at large
[23:35:17] <FromDiscord> <dom96> Step back a bit, why are you going after multithreading?
[23:35:22] <FromDiscord> <Recruit_main707> yeah, i dont like how you work with threads in nim
[23:35:35] <FromDiscord> <Recruit_main707> i hope it improves i the future
[23:35:44] <FromDiscord> <Cark> @dom96 I have to, i'm doing a windows service
[23:36:03] <FromDiscord> <Cark> also any software needs those these days
[23:36:16] <FromDiscord> <s_tmux> is there a argv client or something i can use to write command line app?
[23:36:59] <FromDiscord> <dom96> In reply to @Cark "<@!132595483838251008> I have to,": why does a windows service require it?
[23:37:42] <FromDiscord> <Cark> you need to do a blocking call and do the work in a thread
[23:39:04] <FromDiscord> <dom96> interesting
[23:39:38] <FromDiscord> <Cark> well i shouldn't have mentioned it, because virtually all the program is in this thread and there is no real communication
[23:40:11] <FromDiscord> <Cark> but i'm afraid diving very deep in nim if i can't get multithreading right
[23:40:32] <FromDiscord> <Cark> when i can do it in C in a straightforward manner
[23:40:55] <FromDiscord> <dom96> Maybe the simplest approach would be to write a quick wrapper in C/C++ that spawns a new thread and calls the Nim program in it
[23:41:17] <FromDiscord> <dom96> That way you can pretend that there is just a single thread in Nim
[23:41:53] <FromDiscord> <Cark> that makes sense
[23:42:27] <FromDiscord> <dom96> alternatively you can also do your best to avoid global vars
[23:42:41] <FromDiscord> <Cark> right, but how do you do sharing ?
[23:42:43] <FromDiscord> <dom96> which is a good practice anyway
[23:42:56] <FromDiscord> <dom96> just pass data around via function args
[23:43:09] <FromDiscord> <Cark> i'm using global just for testing, because it seems enclosing the shared stuff is even more hairy
[23:43:29] <FromDiscord> <dom96> what stuff do you need to share?
[23:43:49] <FromDiscord> <dom96> what I typically have is a `State` object that contains the common things everything in the app needs
[23:44:10] <FromDiscord> <Cark> ok right now as an exercise i'm doing some logging
[23:44:27] <FromDiscord> <Cark> so you have the consol logger and maybe a rotating file logger
[23:44:34] <FromDiscord> <Cark> which you could add to that seq
[23:44:43] <FromDiscord> <Cark> i'll never touch those really
[23:44:53] <FromDiscord> <Cark> but i want to be able to as an exercise
[23:45:01] <FromDiscord> <Cark> add them from the main thread
[23:45:14] <FromDiscord> <Cark> and have the logging thread use them
[23:45:45] <FromDiscord> <dom96> do the logging from the main thread, why have a separate thread for it?
[23:46:03] <FromDiscord> <Cark> in order to exercise multithreading with nim =)
[23:46:59] <FromDiscord> <Cark> also
[23:47:12] <FromDiscord> <Cark> in my service i'll want logging from the main thread and from the work thread
[23:47:30] <FromDiscord> <Cark> it makes sense to have a logging thread
[23:47:37] <FromDiscord> <dom96> meh, you're just making the code more complex than it needs to be üôÇ
[23:48:30] <FromDiscord> <Cark> well that the point ! i really don't even need to make a service =)
[23:48:42] <FromDiscord> <dom96> lol
[23:48:50] <FromDiscord> <Cark> i could wrap a command line program in that automatic service thingie i forgot the name of
[23:49:02] <FromDiscord> <Cark> but then i would learn nothing =)
[23:49:47] <FromDiscord> <dom96> if you want to learn multithreading then consider picking a use case that requires it, for example utilising all your CPU's cores
[23:50:00] <FromDiscord> <dom96> one example is parsing which I used in my book's chapter on parallelism üòâ
[23:50:27] <FromDiscord> <Cark> i think it's a common use case, delegating IO to a dedicated thread
[23:51:19] <FromDiscord> <Cark> there are timing constraints on windows srvices (which i probably could meet in a single thread but hum yeah)
[23:56:55] *** Quits: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca) (Ping timeout: 250 seconds)
[23:58:03] *** Joins: auxym_ (~francis@modemcable027.118-81-70.mc.videotron.ca)
