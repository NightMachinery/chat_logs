[00:00:54] <sept> ljharb: Should I rewrite my code without using .the(), and instead use async await inside the function, and the last return will also be an await? This way I can return what I intended to return (a string)?
[00:01:15] <ljharb> sept: no, you can't avoid the .then
[00:01:31] <ljharb> sept: you can never ever ever synchronously return the result of an async operation
[00:01:46] <ljharb> sept: `await` isn't blocking, it's just sugar for `.then`. outside an async function, you're supposed to use `.then`.
[00:01:55] <ljharb> (and sometimes, inside an async function too - `await` isn't always best)
[00:02:07] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[00:03:48] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 268 seconds)
[00:04:13] *** Joins: ferdna (~ferdna@user/ferdna)
[00:05:02] <sept> Then, should I rewrite this code without using .then(). Most of the code I've seen online and on youtube uses asynchronous code for some reason... Not sure exactly why.
[00:05:21] <sept> For Web Crypto API I mean.
[00:05:23] *** Quits: nomic (~nomic@185.217.117.73) (Quit: Leaving)
[00:05:41] *** Joins: nomic (~nomic@185.217.117.73)
[00:05:50] *** Quits: salad (~cucumber@86.121.64.41) (Read error: Connection reset by peer)
[00:06:34] *** Joins: Gamara (~Gamara@66-203-186-206.ded.execulink.com)
[00:06:35] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[00:07:46] <ljharb> sept: NO, you should not
[00:07:54] <ljharb> sept: using .then is GOOD and you should prefer it most of the time over `await`.
[00:08:12] <sept> Yeah, I read that all Web Crypto API is async... so I can't.
[00:08:16] <ljharb> yes, you can
[00:08:22] <ljharb> `.then` is how you handle async code. it's a method on promises.
[00:08:35] <ljharb> `await` is just sugar for `.then`. which means, it's just a fancy way to write `.then`
[00:08:42] <ljharb> but they're *the same* otherwise, basically
[00:11:41] <Gamara> Hey so I am making a pretty simple tic tac toe game, I am going to use websockets, basically the way it works is I create a Game object, that needs to persist, then I have a mouse click event handler that when clicked should send a signal to the websocket with a number, the websocket returns a number whenever the other player makes a move updating
[00:11:41] <Gamara> the state of the game https://imgur.com/gRB2log
[00:12:16] <sept> ljharb: So, conceptually: Once you start an async chain, you have to continue that chain until your program ends? Is this basically correct?
[00:12:16] <Gamara> Do I need to use a sub/pub pattern, or game loop?
[00:12:45] <Gamara> Since it seems my Game object is garbage collected after init finishes
[00:12:47] <sept> ljharb: I mean, if you want to use the return value
[00:12:54] <sept> of the chain.
[00:13:29] <sept> If you do, you have to continue with .then() until you don't need those values anymore. Correct?
[00:13:47] *** Joins: momus (~m@8.44.59.36)
[00:14:18] <ljharb> sept: yes, that is correct
[00:14:27] <ljharb> sept: once you go async, the entirety of the rest of your program must be async
[00:15:05] <sept> ljharb: Wow. JS is something else... Thanks for the help ljharb.
[00:16:00] <ldlework> ljharb: if I have a program that does async inside of a promisary action that uses .then(), how is the rest of my program forced into being async
[00:16:07] <ldlework> or is this a simplification for explanation purposes
[00:16:07] <ljharb> sept: i doubt this is a unique characteristic to JS
[00:16:16] *** Joins: N4buc0 (~N4buc0@2001:1284:f016:1f43:a436:c1e3:6f6:f581)
[00:16:23] <ljharb> ldlework: share some code and i'll explain
[00:16:31] <ljharb> ldlework: it is in no way a simplicifation
[00:16:57] <ldlework> ljharb: clearly you can section off the async bits of your program via promise. It sounds like you're talking about "what color is your function"?
[00:17:07] <ldlework> But function color can be contained. Via promise.
[00:17:10] <ljharb> ldlework: you can't actually do that tho
[00:17:24] <ljharb> ldlework: because if your program continues sync, then it can't ever fully react to the promise
[00:17:37] <ljharb> ldlework: and if you have state that's updated async, then that is indeed your entire program becoming async.
[00:17:39] <ldlework> ljharb: you can have some then handler which mutates some state
[00:17:50] <ldlework> i mean that's a pretty loose definition
[00:18:06] <ljharb> ldlework: it seems pretty strict to me
[00:18:12] <ldlework> if you say so
[00:18:13] <ljharb> ldlework: a sync program ends after the first tick.
[00:18:19] <ljharb> ldlework: if any code is running after that, the program is async.
[00:19:04] <ldlework> If I have a while loop that runs forever, but kick off an async operation before that, the sense in which the while loop is async is pretty vapid to most colloquial pedagogy
[00:19:51] *** voltage is now known as voltage_
[00:20:19] <ljharb> ldlework: in that case the first tick never ends
[00:20:23] <ljharb> ldlework: and your async op will never run
[00:20:29] <ljharb> ldlework: while loops are sync and block all other JS from running
[00:20:48] <ljharb> ldlework: but also that's not a program that ever ends. so pedagogically, you can't ever know if the program is sync or async.
[00:21:00] <ljharb> ldlework: but bringing up that very edge case is pretty pedantic :-p
[00:21:39] <ldlework> ljharb: most people when they are talking about async and how it affects program design, mean to point to function color, not some grander sense in how the underlying event loop works
[00:22:07] <ljharb> ldlework: right. but a program containing the async color is itself async
[00:22:10] <ldlework> telling someone "your whole program becomes async" wont align with anything else they will encounter when trying to figure out what you meant by looking elsewhere
[00:22:12] <ljharb> ldlework: just like a function containing it is itself.
[00:22:24] *** Quits: EgonX (~EgonX@2601:2c6:47f:9c18:96e:fc0e:e7fc:19d1) (Quit: Textual IRC Client: www.textualapp.com)
[00:22:42] <ljharb> ldlework: if a sync function makes a promise inside itself, only one of two things is possible: it's async (via callbacks/events, or it returns a promise) or it has a bug.
[00:23:00] <ljharb> because any async operation that isn't handled somehow is probably a bug.
[00:23:12] <ldlework> I just don't think Promise changes function color
[00:23:31] <ldlework> (i mean it doesn't, the function isn't async)
[00:23:46] <ljharb> ldlework: it doesn't inherently, sure
[00:24:10] <ljharb> ldlework: but if the function doesn't return a promise that reflects the completion of the async task, it's almost certainly a bug
[00:25:13] <ldlework> Yes but colloquially "turns your whole program async" implies "colors your whole program blue"
[00:26:42] <sept> ljharb: One more clarification: an 'async' program = one *single* promise chain. Correct? I just want to solidify this concept in my mind.
[00:28:36] <ldlework> (I guess in the original writing async functions were red* hehe)
[00:29:23] <ljharb> ldlework: assuming red is the async color, then yes, it does eventually turn your overarching program red (not every single function, but the program itself)
[00:29:29] <ljharb> sept: no, the program is "all the code"
[00:29:42] <ljharb> sept: because the thing containing the promise chain also needs to be async to be non-broken
[00:30:08] <ldlework> if you only do async logging, this principle breaks
[00:30:19] <ldlework> or use async just for effects, in the general
[00:30:29] *** Joins: fanis30 (~fanis30@adsl-213.37.6.3.tellas.gr)
[00:30:36] <ldlework> maybe you will call that pedantry that hurts the pedagogical point
[00:31:56] <ldlework> (or argue that one ought to receive some status of the outcome even if it is just success/fail)
[00:32:22] *** Quits: ircuser-1 (~Johnny@71.63.241.168) (Quit: because)
[00:33:55] <ljharb> ldlework: logging, fair, because if logging fails you don't care
[00:34:03] <ljharb> ldlework: but effects, you definitely should be caring about that
[00:34:10] <KDev> what is it called when you use a variable as an if statement? Usually to shorten code
[00:34:11] <ldlework> it depends on what kind of effect of course
[00:34:15] <ldlework> logging is an effect where you don't care
[00:34:19] <ldlework> surely it's a member of a class
[00:34:21] <ljharb> KDev: example?
[00:34:24] <KDev> const test = (something) ? this : that;
[00:34:29] <KDev> I forgot the name
[00:34:31] <ljharb> KDev: that's just a ternary
[00:34:34] <KDev> thank you
[00:34:38] <ljharb> KDev: also the parens around `something` there are redundant
[00:34:51] *** Quits: pluri (~pluri@user/pluri) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:37:24] *** Parts: sept (~user1@24-52-239-66.cable.teksavvy.com) ()
[00:40:21] <ThePendulum> ternaryyyy, all my life I've used a ternary, started some time after 1973, that has been wait a minute let me see... it might be a mystery
[00:41:02] *** Joins: thiras (~thiras@user/thiras)
[00:41:12] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 268 seconds)
[00:42:31] <sheetjs> parens are good when dealing with nested ternaries and PHP developers
[00:42:56] <naeluh> wroathe: like fake it kinda ?
[00:42:59] <naeluh> thanks!
[00:43:05] <naeluh> theskillwithin: thanks!
[00:43:21] <sheetjs> https://wiki.php.net/rfc/ternary_associativity
[00:45:05] *** Quits: Haxxa (~Haxxa@116-255-6-75.ip4.superloop.com) (Quit: Haxxa flies away.)
[00:45:28] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:e0bd:d0d1:5345:9a23)
[00:48:00] *** Joins: Haxxa (~Haxxa@116-255-6-75.ip4.superloop.com)
[00:48:14] *** Quits: sizeof_void34 (~Thunderbi@109.252.124.86) (Quit: sizeof_void34)
[00:53:32] <wroathe> naeluh: No, that's not faking it... It's the way to do it.
[00:54:22] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:5112:952c:48ec:cbc3) (Ping timeout: 268 seconds)
[00:54:23] <naeluh> wroathe: thanks ! But I can't access the page.X or client.X from scroll event right ?
[00:56:04] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:5112:952c:48ec:cbc3)
[00:56:04] *** Quits: fanis30 (~fanis30@adsl-213.37.6.3.tellas.gr) (Quit: WeeChat 3.2.1)
[01:01:14] *** Joins: teut (~teut@122.162.88.202)
[01:02:25] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi) (Read error: Connection reset by peer)
[01:07:28] *** Quits: haycon (~haycon@84.215.37.126) (Ping timeout: 252 seconds)
[01:08:24] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[01:08:57] <wroathe> naeluh: No. The scroll event is just a plain Event, and not a MouseEvent
[01:10:26] <naeluh> wroathe: right so I would need to understand that on scroll the mouse Y would either go up or down right ?
[01:11:03] *** Joins: pavonia (~user@user/siracusa)
[01:11:11] <naeluh> So I would need the last Y position and increment or decrement would that work ?
[01:12:58] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 252 seconds)
[01:13:34] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 252 seconds)
[01:14:07] *** Parts: seabass_ (~seabassfo@2001:470:69fc:105::187) ()
[01:17:50] *** Joins: snedd (~snedd@86.14.114.137)
[01:19:46] *** Joins: electr0n (~electr0n@about/security/founder/electr0n)
[01:22:11] *** Quits: nomic (~nomic@185.217.117.73) (Quit: Leaving)
[01:30:11] *** Joins: wroathe (~wroathe@96-88-30-181-static.hfc.comcastbusiness.net)
[01:30:11] *** Quits: wroathe (~wroathe@96-88-30-181-static.hfc.comcastbusiness.net) (Changing host)
[01:30:11] *** Joins: wroathe (~wroathe@user/wroathe)
[01:36:57] *** Joins: jazzy (~jaziz@2600:380:8478:544b:74e4:ee0e:c5d7:8598)
[01:40:54] *** Joins: nomic (~nomic@185.217.117.73)
[01:42:57] *** Quits: nomic (~nomic@185.217.117.73) (Client Quit)
[01:44:26] *** Quits: eblip (~eb0t@90.199.241.57) (Ping timeout: 260 seconds)
[01:45:22] *** Joins: nomic (~nomic@185.217.117.73)
[01:46:35] <theskillwithin> sudo netstat -tulpn
[01:46:41] <theskillwithin> oops
[01:49:21] *** Joins: federico (~federico@151.51.87.254)
[01:49:44] *** Quits: federico (~federico@151.51.87.254) (Client Quit)
[01:51:42] *** Quits: alguien (~alguien@user/alguien) (Remote host closed the connection)
[01:52:06] *** Joins: alguien (~alguien@user/alguien)
[01:52:56] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[01:53:14] *** Quits: nomic (~nomic@185.217.117.73) (Quit: Leaving)
[01:53:24] <ThePendulum> tcp 0 0 0.0.0.0:80 0.0.0.0:* LISTEN 1200/nginx
[01:54:44] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:07:02] <ldlework> ljharb: you favor hack-style pipeline operator right?
[02:07:27] <ljharb> ldlework: yes
[02:07:31] *** Joins: nomic (~nomic@185.217.117.73)
[02:08:01] <ljharb> ldlework: i wouldn't mind the F# one too bad, but currying is garbage
[02:08:39] *** Quits: bomb (~bomb@user/bomb) (Quit: ‏‏‎ ‎)
[02:08:47] *** Joins: hax (~hax@69.165.175.67)
[02:08:47] *** Quits: hax (~hax@69.165.175.67) (Changing host)
[02:08:47] *** Joins: hax (~hax@user/hax)
[02:09:20] <ldlework> why do you think so?
[02:11:32] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[02:12:15] *** Quits: hax (~hax@user/hax) (Client Quit)
[02:12:34] <ljharb> ldlework: because the language doesn't do it automatically, and it's super verbose and surprising when functions do it manually
[02:12:40] <ljharb> ldlework: i love HOFs but i hate currying, to be clear
[02:13:06] <ldlework> ljharb: so in an ML, you feel differently?
[02:13:10] <ashnur> and it doesn't play well with n-ary functions
[02:13:36] <ljharb> ldlework: sure. but what one does in a different language should never have any bearing on what one does in one
[02:13:52] <ashnur> ML as markup language or meta language
[02:13:53] <ldlework> ljharb: i was just exploring whether your attitude about currying was localized
[02:14:16] <ljharb> ldlework: i think in a language where it's automatic and assumed, it's probably great
[02:14:47] *** Quits: nomic (~nomic@185.217.117.73) (Quit: Leaving)
[02:16:49] *** Quits: teut (~teut@122.162.88.202) (Quit: Client closed)
[02:17:14] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[02:18:19] <theskillwithin> https://youtu.be/74RdET79q40
[02:18:19] <skillbot> YouTube Title: Premature optimization is the root of all evil | Donald Knuth and Lex Fridman
[02:19:23] *** Joins: pluri (~pluri@user/pluri)
[02:22:24] <wroathe> Those proposals keep mentioning a first-blush impression from a JS engine implementor about the performance implications of partial application and composition. These aren't exactly new concepts. To help the JS community make it's decision TC39 should reach out to the maintainers of the F# compiler toolchain and other FP language compiler maintainers like Haskell's, and see if they can get them to
[02:22:30] <wroathe> weigh in with a brief document explaining the implementation patterns they use.
[02:22:47] <wroathe> And the optimizations they've implemented.
[02:23:27] <wroathe> It won't be apples to apples, but just getting an idea of where the pain points come in just seems like basic due diligence that should be performed in the name of extending a language as large and popular as JS.
[02:24:21] <sheetjs> "not expanding the language" is also an option
[02:24:49] *** Joins: qswz (~caub@lfbn-nic-1-290-157.w90-116.abo.wanadoo.fr)
[02:25:34] <wroathe> sheetjs: I think both camps feel that way if the proposal they're not backing looks to be the one that's going to be accepted :P
[02:26:33] <sheetjs> the default option, in fact, should be "not expanding the language".  and in this specific case it's unclear why this isn't just relegated to transpileres
[02:28:39] <wroathe> sheetjs: You're then largely reliniquishing any opportunities for optimization. It's possible a transpiler could do the kinds of analysis to optimize this on the front end, but you'd then be putting the onus on the transpiler to be more advanced then the optimizing compiler it's generating code for.
[02:29:02] *** Joins: bambanxx (~bambanx@181-163-35-84.baf.movistar.cl)
[02:29:29] <ashnur> lol, niggler, every language should be extended until they all meet in feature heaven
[02:29:31] <wroathe> *front end of the compiler chain, that is, not front end as in front end web development
[02:29:34] <ashnur> sorry, expanded
[02:29:38] <systemfault> ashnur: Worked well for Perl
[02:29:45] <ashnur> and c++
[02:30:01] *** Quits: Sven_vB_ (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:26] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:30:34] *** Quits: momus (~m@8.44.59.36) (Ping timeout: 268 seconds)
[02:30:45] <ashnur> although, arguably, the most expanded? language is wolfram language
[02:33:13] *** Quits: bambanxx (~bambanx@181-163-35-84.baf.movistar.cl) (Client Quit)
[02:34:54] <wroathe> I'm not saying I know how to implement this, but in general I would think that if the return functions from partial function application are only part of intermediate values of an expression such as a function composition expression, I can't think of why you'd need an entire new function object anyway. You basically just need a pointer to the original function, and a stack of the values that have
[02:35:00] <wroathe> already been applied.
[02:37:27] <wroathe> One benefit of JS being a strictly evaluated language is that all of the arguments being held in escrow have already been fully evaluated, and so you're not worried about double evaluation or side effects
[02:37:34] <qswz> Do you think I could use a 80GB/ month mobile plan (and tether it)? should be enough for work and a bit of youtube
[02:40:11] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[02:40:27] <qswz> hmm, every deploy is 100M+
[02:41:01] *** Quits: pluri (~pluri@user/pluri) (Ping timeout: 252 seconds)
[02:41:06] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Lost terminal)
[02:41:15] <qswz> so I guess I'd easily exceed 1G per day, I'd have to tell my boss "hey no deploy today I'm off data"
[02:41:41] <qswz> which he would accept, he's chill, I'd just git push
[02:41:58] <qswz> and limit myself with youtube
[02:42:23] <qswz> I'm already using the 140p resolution
[02:42:41] *** Quits: Gurkenglas (~Gurkengla@dslb-002-207-014-195.002.207.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[02:42:57] *** Joins: sam_1 (~sam_1@87.51.251.118)
[02:43:09] <qswz> I'd use a 4pixel youtube resolution if there were one, I don't care about videos
[02:47:50] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 265 seconds)
[02:48:56] *** Joins: momus (~m@8.44.59.36)
[02:50:09] *** Quits: jonifen (~jonifen@user/jonifen) (Quit: Leaving)
[02:50:32] *** Joins: jonifen (~jonifen@user/jonifen)
[02:52:24] *** Quits: jonifen (~jonifen@user/jonifen) (Client Quit)
[02:54:00] *** Joins: jonifen (~jonifen@user/jonifen)
[02:55:50] *** Quits: jazzy (~jaziz@2600:380:8478:544b:74e4:ee0e:c5d7:8598) (Ping timeout: 260 seconds)
[03:00:46] *** Quits: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de) (Ping timeout: 252 seconds)
[03:01:21] *** Joins: defjam (~eb0t@90.196.142.47)
[03:02:45] *** Quits: mannequin (uid453465@id-453465.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[03:06:02] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:06:15] *** Joins: Betal (~Betal@user/betal)
[03:08:44] *** Quits: EgonX (~EgonX@2601:2c6:47f:9c18:e0bd:d0d1:5345:9a23) (Quit: Textual IRC Client: www.textualapp.com)
[03:09:36] *** Joins: mikrosis (~mikrosis@dynamic-046-114-173-141.46.114.pool.telefonica.de)
[03:10:04] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[03:13:05] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:c404:5115:cbc7:522e)
[03:14:31] *** Quits: ArchNoob (~maotora@user/archnoob) (Ping timeout: 252 seconds)
[03:14:58] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 260 seconds)
[03:19:44] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 265 seconds)
[03:19:55] <ljharb> wroathe: every implementer has been very clear for 4 years that F# is largely not optimizeable, it’s not a new or “first blush” opinion.
[03:21:24] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[03:26:13] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[03:26:48] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection reset by peer)
[03:27:09] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[03:27:28] *** Joins: nomic (~nomic@185.217.117.73)
[03:27:30] *** Joins: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de)
[03:27:48] *** Quits: Gamara (~Gamara@66-203-186-206.ded.execulink.com) (Quit: Client closed)
[03:29:17] <f0xb4t> could you tell me why last console.log still shows 'false'? https://ideone.com/vrXwD4
[03:29:18] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[03:29:39] *** Quits: snedd (~snedd@86.14.114.137) (Quit: Leaving)
[03:29:47] <silly_> qswz, i do that, 70gb/month and i can life with that. there's even wifi concurrent mode, so you can turn a laptop into a router without usb wifi
[03:30:12] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[03:30:12] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[03:30:12] *** Joins: wroathe (~wroathe@user/wroathe)
[03:31:25] <silly_> f0xb4t, https://stackoverflow.com/a/40408976/3108881
[03:32:18] *** Quits: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de) (Ping timeout: 265 seconds)
[03:32:44] <silly_> there's an explainer in the 2nd answer below
[03:32:52] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[03:33:36] *** Joins: pizdets_ (~pizdets@183.182.111.213)
[03:34:14] *** Quits: pizdets (~pizdets@183.182.111.71) (Ping timeout: 250 seconds)
[03:34:51] <ljharb> wroathe: also bear in mind, not every delegate likes the idea of the F# approach at all, unrelated to perf issues
[03:34:54] <f0xb4t> wait a sec, then it means that I have to call any function to force setState to finish execution?
[03:35:39] <qswz> silly_: ok nice, I will so
[03:36:10] <qswz> setState is async
[03:36:43] <f0xb4t> can't I just use this.state.name = true
[03:36:46] <f0xb4t> to make it sync ?
[03:36:48] <silly_> f0xb4t, you can't "force" setState
[03:37:00] <silly_> oh, that
[03:37:03] <qswz> because react is so webscale it aggregates/batches multiple state changes together
[03:37:37] <silly_> lol, dunno what would happen if you did that, but i wouldn't expect to cause a rerender
[03:37:37] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 265 seconds)
[03:38:51] <silly_> get used to async in js. working around is pointless
[03:43:16] <f0xb4t> sure
[03:43:21] <f0xb4t> really trying
[03:45:11] *** Joins: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de)
[03:45:20] <ljharb> f0xb4t: you cant, because only setState notifies react of a change
[03:47:26] *** Quits: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[03:47:33] *** Joins: mindraj (~mindraj@user/mindraj)
[03:49:24] *** Quits: nromsas (~nromsas@101.175.64.73) (Quit: Client closed)
[03:50:26] *** Quits: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de) (Ping timeout: 260 seconds)
[03:53:58] *** Quits: EgonX (~EgonX@2601:2c6:47f:9c18:c404:5115:cbc7:522e) (Quit: Textual IRC Client: www.textualapp.com)
[03:56:42] <qswz> maybe we'll be able to await setState
[03:56:52] *** Joins: EgonX (~EgonX@c-98-194-169-75.hsd1.tx.comcast.net)
[03:57:15] <qswz> well await makes no much sense inside a component direct scope
[03:57:51] <qswz> would be cool to have async functional componnets tho
[03:57:55] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 260 seconds)
[03:58:54] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[04:00:39] <qswz> gotta sleep tho
[04:00:44] *** Quits: qswz (~caub@lfbn-nic-1-290-157.w90-116.abo.wanadoo.fr) (Quit: leaving)
[04:01:18] <f0xb4t> thanks guys
[04:02:40] *** Quits: zamanf (~moo@2a02:587:de16:8a00:80ec:5116:65bd:28de) (Ping timeout: 240 seconds)
[04:02:51] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 268 seconds)
[04:04:11] <ThePendulum> yw
[04:04:23] *** Joins: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com)
[04:09:09] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:09:31] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.2.1)
[04:10:41] *** Quits: k162 (~k162@user/k162) (Remote host closed the connection)
[04:11:05] *** Joins: k162 (~k162@user/k162)
[04:13:48] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[04:17:47] *** Joins: fuxaches (~terry@S01060cb6d29d89df.ed.shawcable.net)
[04:21:51] *** Joins: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de)
[04:27:01] *** Joins: mannequin (uid453465@id-453465.helmsley.irccloud.com)
[04:27:24] *** Quits: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de) (Ping timeout: 265 seconds)
[04:30:50] *** Joins: tatiana (~OhTheCode@14-202-238-43.static.tpgi.com.au)
[04:33:12] *** Quits: momus (~m@8.44.59.36) (Ping timeout: 265 seconds)
[04:33:19] *** Quits: OhTheCode (~OhTheCode@14-202-238-43.static.tpgi.com.au) (Ping timeout: 252 seconds)
[04:34:10] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 240 seconds)
[04:39:08] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[04:43:15] *** Quits: N4buc0 (~N4buc0@2001:1284:f016:1f43:a436:c1e3:6f6:f581) (Quit: Leaving)
[04:46:08] *** Joins: momus (~m@2a09:bac0:20::82c:3b24)
[04:46:13] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[04:47:44] <wroathe> Heh. I tried weighing in on that pipeline thing, and the first response I got back has already made me reconsider my participation.
[04:48:19] <wroathe> My fault. I was worried I wouldn't be able to communicate my point clearly enough when I set out to make it.
[04:57:51] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[04:58:54] *** Joins: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de)
[05:00:26] *** Quits: mikrosis (~mikrosis@dynamic-046-114-173-141.46.114.pool.telefonica.de) (Ping timeout: 260 seconds)
[05:02:18] <sheetjs> wroathe: your energy is better spent advocating for something less polarizing
[05:03:04] <wroathe> sheetjs: Well, it's polarizing for good reason, and it has implications for how much I'll like JS in the future :P
[05:04:15] *** Quits: onizu (uid373383@id-373383.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[05:04:37] *** Quits: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de) (Ping timeout: 265 seconds)
[05:04:51] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[05:05:42] *** mindraj is now known as drpgd
[05:05:58] *** Quits: calcmandan (~quassel@user/calcmandan) (Quit: No Ping reply in 180 seconds.)
[05:07:07] *** Joins: calcmandan (~quassel@user/calcmandan)
[05:07:09] <ljharb> it’s pretty silly IMO to assume that knowledge implementing something in “not js” is going to trump experience implementing JS itself.
[05:07:34] *** Joins: scoobydoo_ (~scooby@user/scoobydoo)
[05:07:35] *** Quits: scoobydoo_ (~scooby@user/scoobydoo) (Excess Flood)
[05:08:21] <sheetjs> might need to add this as another forbidden discussion topic
[05:09:13] <wroathe> sheetjs: That seems premature. I haven't been logged in 100% of the time, but I don't see people being uncivil about this in here.
[05:09:22] *** Joins: scoobydoo_ (~scooby@user/scoobydoo)
[05:09:30] *** drpgd is now known as mindraj
[05:09:35] <sheetjs> people weren't uncivil in discussions about freenode either
[05:09:41] <wroathe> And it's certainly more worth discussing than plenty of the other things that are discussed
[05:10:07] <sheetjs> but at some point the discussions are unproductive.  in this case, the two camps are entrenched
[05:10:08] *** Joins: drew (~drew@user/drew)
[05:10:25] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 265 seconds)
[05:10:29] *** scoobydoo_ is now known as scoobydoo
[05:10:58] <sheetjs> its highly doubtful an argument is going to sway anyone's opinion as to "whether the feature should be added" and "which approach should be taken"
[05:11:32] <wroathe> It could.
[05:11:45] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[05:14:38] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:5112:952c:48ec:cbc3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:16:27] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 268 seconds)
[05:17:23] <sheetjs> pipeline drama should be stylized as |>rama
[05:18:46] <ljharb> it’s a JS proposal, it’s always on topic
[05:19:01] <ljharb> we don’t ban topics just because they’re annoying, only when they’re off topic and annoying
[05:19:16] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[05:19:40] <wroathe> In my case it turns out I misunderstood the scope of what was being discussed. That original dramatic post made reference to function composition and partial application, and so I thought both were on the table. The person that responded to me correctly pointed out that within the narrow scope of just the so-called "pipe" operator it does introduce the requirement that you'd have to wrap the pipeline
[05:19:46] <wroathe> in an arrow function to make it act similarly to function composition.
[05:20:16] <wroathe> Composition and partial application wouldn't have that problem though. Too bad that's not what's on the table.
[05:22:42] *** Joins: ArchNoob (~maotora@user/archnoob)
[05:23:05] *** Quits: vqueiroz (uid340368@id-340368.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[05:24:40] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[05:25:10] *** Joins: Intelo (~Intelo@88.244.90.255)
[05:28:13] <ljharb> composing f and g is already `(x) => f(g(x))` tho, not much value to be had beyond that.
[05:29:33] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[05:30:29] *** Joins: gggp (~textual@114.245.104.159)
[05:31:00] *** Joins: xant (~metadaemo@user/metadaemon)
[05:31:15] *** Joins: Snyp (~Snyp@49.207.207.107)
[05:32:28] <pavonia> Too much parentheses
[05:32:33] <pavonia> *many
[05:34:22] *** Joins: kmh (~kmh@p200300df5f03530075ceafc9a632845f.dip0.t-ipconnect.de)
[05:35:04] *** Quits: x4nt (~metadaemo@user/metadaemon) (Ping timeout: 265 seconds)
[05:36:11] *** Quits: kmh_ (~kmh@p200300df5f40570075ceafc9a632845f.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[05:36:18] *** Joins: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de)
[05:41:23] *** Joins: Semental40 (~Semental4@host-82-50-140-104.retail.telecomitalia.it)
[05:41:31] *** Quits: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de) (Ping timeout: 252 seconds)
[05:41:53] *** Parts: Semental40 (~Semental4@host-82-50-140-104.retail.telecomitalia.it) ()
[05:42:08] *** Quits: momus (~m@2a09:bac0:20::82c:3b24) (Ping timeout: 268 seconds)
[05:42:48] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 265 seconds)
[05:43:40] *** Joins: momus (~m@197.210.52.155)
[05:48:59] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[05:53:38] *** Joins: pluri (~pluri@user/pluri)
[05:58:01] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[06:00:50] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[06:00:50] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[06:00:50] *** Joins: wroathe (~wroathe@user/wroathe)
[06:05:59] *** Quits: Snyp (~Snyp@49.207.207.107) (Quit: Textual IRC Client: www.textualapp.com)
[06:06:24] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[06:06:24] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 268 seconds)
[06:06:59] *** Joins: keypusher (keypusher@user/keypusher)
[06:09:05] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[06:11:14] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 252 seconds)
[06:11:15] *** Joins: keypushe- (keypusher@user/keypusher)
[06:14:27] *** keypushe- is now known as keypusher
[06:15:16] *** Joins: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de)
[06:17:15] <ljharb> pavonia: right but new syntax is far more costly than 4 extra parens (the arg ones can be omitted)
[06:17:34] <ljharb> and, new syntax would enshrine 1-arg functions, which is very much not how JS works
[06:20:25] *** Quits: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de) (Ping timeout: 252 seconds)
[06:24:15] <KDev> What is the correct way to do an arrow function on multiple lines?
[06:24:22] <KDev> for air BnB esLint
[06:24:41] <KDev> Because it gives me a warning for an unnamed function when I have it attached to a variable
[06:27:50] <pavonia> Could you show your code?
[06:31:09] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[06:31:09] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[06:31:09] *** Joins: wroathe (~wroathe@user/wroathe)
[06:35:02] *** Quits: EgonX (~EgonX@c-98-194-169-75.hsd1.tx.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[06:35:17] *** Joins: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de)
[06:36:45] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[06:37:44] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:38:40] *** Quits: momus (~m@197.210.52.155) (Ping timeout: 240 seconds)
[06:40:19] *** Quits: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de) (Ping timeout: 268 seconds)
[06:44:42] *** Joins: sam_1 (~sam_1@87.51.251.118)
[06:45:11] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[06:46:36] *** Joins: momus (~m@197.210.77.78)
[06:49:21] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 268 seconds)
[06:50:37] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:e51d:8dc7:9bd6:a324)
[06:53:29] *** Joins: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de)
[06:59:10] *** Quits: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de) (Ping timeout: 265 seconds)
[06:59:35] *** Joins: jazzy (~jaziz@2600:380:8478:544b:74e4:ee0e:c5d7:8598)
[07:00:59] <ljharb> KDev: share the code
[07:01:04] *** Quits: ArchNoob (~maotora@user/archnoob) (Ping timeout: 268 seconds)
[07:02:16] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[07:11:57] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Read error: Connection reset by peer)
[07:13:07] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[07:15:11] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.2)
[07:17:53] *** Joins: WishBoy (~WishBoy@user/wishboy)
[07:18:29] *** Joins: Rockwood (~Rocky@user/rocky)
[07:19:09] *** Joins: Rockwood_ (~Rocky@user/rocky)
[07:19:42] *** Joins: ___Rockwood__ (~Rocky@user/rocky)
[07:22:40] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[07:22:45] *** Quits: mannequin (uid453465@id-453465.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[07:23:36] *** Joins: Rockwood (~Rocky@user/rocky)
[07:23:40] *** Quits: ___Rockwood__ (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[07:23:40] *** Quits: Rockwood_ (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[07:26:28] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[07:30:11] *** Parts: fuxaches (~terry@S01060cb6d29d89df.ed.shawcable.net) ()
[07:30:43] *** Joins: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de)
[07:34:26] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[07:34:36] *** Quits: Covrus (~Covrus@user/covrus) (Remote host closed the connection)
[07:34:54] *** Joins: Covrus (~Covrus@user/covrus)
[07:35:40] *** Quits: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de) (Ping timeout: 240 seconds)
[07:36:18] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[07:36:35] *** Quits: mindraj (~mindraj@user/mindraj) (Quit: Goodbye, have a great day/evening!)
[07:39:06] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 260 seconds)
[07:42:36] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[07:49:10] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 268 seconds)
[07:49:24] *** Joins: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de)
[07:52:41] *** Quits: gggp (~textual@114.245.104.159) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:54:45] *** Quits: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de) (Ping timeout: 265 seconds)
[08:02:18] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:04:09] *** Joins: sillyslux__ (~silly@user/silly)
[08:06:44] <Rockwood> o/
[08:07:40] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 252 seconds)
[08:07:48] *** Joins: gggpkm (~gggpkm@111-251-158-17.dynamic-ip.hinet.net)
[08:09:04] *** Joins: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de)
[08:10:53] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[08:10:58] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 268 seconds)
[08:11:35] *** Quits: incognito (~relativit@user/incognito) (Ping timeout: 268 seconds)
[08:14:03] *** Quits: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de) (Ping timeout: 268 seconds)
[08:15:28] *** Joins: alystair (~alystair@user/alystair)
[08:15:58] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[08:16:35] *** Joins: aexijh (~aexijh@bras-vprn-unvlon5573w-lp130-07-174-93-47-157.dsl.bell.ca)
[08:26:59] *** Joins: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de)
[08:28:05] *** Joins: sam_1 (~sam_1@87.51.251.118)
[08:32:18] *** Quits: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de) (Ping timeout: 260 seconds)
[08:32:20] *** Quits: winning-luser (~wl@2601:8c1:181:1340::6836) (Quit: Leaving)
[08:32:28] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 252 seconds)
[08:32:40] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 260 seconds)
[08:44:15] *** Joins: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de)
[08:45:13] *** Quits: gggpkm (~gggpkm@111-251-158-17.dynamic-ip.hinet.net) (Remote host closed the connection)
[08:45:32] *** Joins: gggpkm (~gggpkm@111-251-158-17.dynamic-ip.hinet.net)
[08:49:28] *** Quits: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de) (Ping timeout: 252 seconds)
[08:55:36] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[08:57:00] *** Quits: pluri (~pluri@user/pluri) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:58:07] *** Joins: momus_ (~m@8.44.59.36)
[08:58:14] *** Quits: momus (~m@197.210.77.78) (Ping timeout: 268 seconds)
[08:59:58] *** Quits: Dev0n (~Dev0n@user/dev0n) (*.net *.split)
[08:59:58] *** Quits: sunyour (~sunyour@129.226.182.99) (*.net *.split)
[08:59:58] *** Quits: hughrawlinson_ (sid11243@id-11243.ilkley.irccloud.com) (*.net *.split)
[08:59:58] *** Quits: slaughter (~slaughter@europa.whatbox.ca) (*.net *.split)
[08:59:58] *** Quits: mkbloke (~mkbloke@vps.cammo.me.uk) (*.net *.split)
[08:59:58] *** Quits: NiKaN (sid385034@id-385034.helmsley.irccloud.com) (*.net *.split)
[08:59:58] *** Quits: nicoty[m] (~nicoty@user/nicoty) (*.net *.split)
[08:59:58] *** Quits: phryk (~totallyno@user/phryk) (*.net *.split)
[09:00:09] *** Joins: slaughter (~slaughter@europa.whatbox.ca)
[09:00:12] *** Joins: mkbloke (~mkbloke@vps.cammo.me.uk)
[09:00:35] *** Joins: sunyour (~sunyour@129.226.182.99)
[09:00:40] *** Joins: NiKaN (sid385034@id-385034.helmsley.irccloud.com)
[09:00:48] *** Joins: phryk (~totallyno@user/phryk)
[09:00:55] *** Joins: hughrawlinson_ (sid11243@id-11243.ilkley.irccloud.com)
[09:01:08] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[09:04:07] *** Joins: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de)
[09:04:13] *** Joins: Dev0n (~Dev0n@user/dev0n)
[09:08:43] *** Quits: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de) (Ping timeout: 252 seconds)
[09:10:00] *** Joins: nicoty[m] (~nicoty@user/nicoty)
[09:10:01] *** Joins: zamanf (~moo@2a02:587:de16:8a00:e595:2383:724a:5de)
[09:11:38] *** Quits: celphi (sid97751@user/celphi) (*.net *.split)
[09:11:38] *** Quits: beeza (sid53872@id-53872.tinside.irccloud.com) (*.net *.split)
[09:11:38] *** Quits: graingert (sid128301@id-128301.tinside.irccloud.com) (*.net *.split)
[09:11:38] *** Quits: itok (sid418430@id-418430.ilkley.irccloud.com) (*.net *.split)
[09:11:38] *** Quits: abirkill (snoopy@d172-218-198-90.bchsia.telus.net) (*.net *.split)
[09:11:39] *** Quits: hsiktas (sid224847@id-224847.lymington.irccloud.com) (*.net *.split)
[09:11:39] *** Quits: WillPittenger (~willpitte@2001:470:69fc:105::1bf) (*.net *.split)
[09:11:39] *** Quits: xisop (~xisop@bnull.net) (*.net *.split)
[09:11:39] *** Quits: ashnur (~rak@user/ashnur) (*.net *.split)
[09:11:39] *** Quits: tubbo (~tscott@2607:5300:61:c67::196) (*.net *.split)
[09:11:39] *** Quits: Emil (emil@emil.fi) (*.net *.split)
[09:11:39] *** Quits: cis (cis@user/cis) (*.net *.split)
[09:11:39] *** Quits: purphoros (purphoros@devforge.org) (*.net *.split)
[09:11:39] *** Quits: kstolen (~kStolen@2a00:fa40:2aaa:1::539:82de) (*.net *.split)
[09:11:39] *** Quits: ringo_ (~ringo@157.230.117.128) (*.net *.split)
[09:11:53] *** Joins: Emil (emil@emil.fi)
[09:11:53] *** Joins: xisop (~xisop@bnull.net)
[09:11:55] *** Joins: ashnur (~rak@user/ashnur)
[09:12:00] *** Joins: cis_ (~cis@user/cis)
[09:12:15] *** Joins: tubbo (~tscott@ipv6two.tilde.club)
[09:12:18] *** Joins: itok (sid418430@id-418430.ilkley.irccloud.com)
[09:12:18] *** Joins: abirkill (snoopy@d172-218-198-90.bchsia.telus.net)
[09:12:27] *** Joins: graingert (sid128301@2a03:5180:f::1:f52d)
[09:12:30] *** Joins: celphi (sid97751@user/celphi)
[09:12:32] *** Joins: kstolen (~kStolen@2a00:fa40:2aaa:1::539:82de)
[09:12:36] *** Joins: beeza (sid53872@id-53872.tinside.irccloud.com)
[09:12:46] *** Joins: hsiktas (sid224847@2a03:5180:f:2::3:6e4f)
[09:13:05] *** Joins: ringo_ (~ringo@157.230.117.128)
[09:13:52] *** Joins: Guest4889 (~Guest48@66-203-186-206.ded.execulink.com)
[09:13:53] *** Joins: purphoros (purphoros@devforge.org)
[09:18:17] *** Joins: WillPittenger (~willpitte@2001:470:69fc:105::1bf)
[09:20:26] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 252 seconds)
[09:22:37] *** Joins: keypusher (keypusher@user/keypusher)
[09:22:58] *** Joins: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de)
[09:23:31] *** Quits: Guest4889 (~Guest48@66-203-186-206.ded.execulink.com) (Quit: Client closed)
[09:24:11] *** Quits: ChanServ (ChanServ@services.libera.chat) (shutting down)
[09:24:39] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 265 seconds)
[09:26:34] *** Joins: ferdna (~ferdna@cpe-69-23-148-218.elp.res.rr.com)
[09:27:20] *** Quits: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de) (Ping timeout: 246 seconds)
[09:28:33] *** Joins: ChanServ (ChanServ@services.libera.chat)
[09:28:33] *** molybdenum.libera.chat sets mode: +o ChanServ
[09:28:40] *** Quits: xant (~metadaemo@user/metadaemon) (Ping timeout: 240 seconds)
[09:28:42] *** Joins: metadaemon (~metadaemo@user/metadaemon)
[09:33:33] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[09:39:24] *** Joins: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de)
[09:39:42] *** Quits: nomic (~nomic@185.217.117.73) (Quit: Leaving)
[09:40:55] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[09:40:55] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[09:40:55] *** Joins: wroathe (~wroathe@user/wroathe)
[09:44:29] *** Quits: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de) (Ping timeout: 246 seconds)
[09:45:10] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[09:46:03] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[09:51:05] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 264 seconds)
[10:00:53] *** Joins: mindraj (~mindraj@user/mindraj)
[10:11:00] *** Quits: momus_ (~m@8.44.59.36) (Ping timeout: 268 seconds)
[10:11:18] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[10:12:28] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Quit: WeeChat 3.1)
[10:13:02] *** Quits: mindraj (~mindraj@user/mindraj) (Read error: Connection reset by peer)
[10:14:52] *** Joins: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de)
[10:20:13] *** Quits: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de) (Ping timeout: 252 seconds)
[10:26:01] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 268 seconds)
[10:28:05] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[10:28:15] *** Joins: sam_1 (~sam_1@87.51.251.118)
[10:32:03] *** Joins: silly_ (~silly@user/silly)
[10:33:13] *** Quits: sillyslux__ (~silly@user/silly) (Read error: Connection reset by peer)
[10:33:35] *** Joins: Naan (~Naan@user/naan)
[10:35:39] *** Joins: sillyslux__ (~silly@user/silly)
[10:38:05] *** Joins: silly (~silly@user/silly)
[10:38:52] *** Quits: ferdna (~ferdna@cpe-69-23-148-218.elp.res.rr.com) (Quit: Leaving)
[10:39:05] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 264 seconds)
[10:39:10] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[10:39:10] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[10:39:10] *** Joins: wroathe (~wroathe@user/wroathe)
[10:39:26] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[10:40:00] *** Quits: sillyslux__ (~silly@user/silly) (Read error: Connection reset by peer)
[10:43:59] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 246 seconds)
[10:44:36] *** Joins: mindraj (~mindraj@user/mindraj)
[10:48:07] *** Joins: mannequin (uid453465@id-453465.helmsley.irccloud.com)
[10:50:38] *** Joins: Gurkenglas (~Gurkengla@dslb-002-207-014-195.002.207.pools.vodafone-ip.de)
[10:53:04] *** Joins: Naan` (~Naan@user/naan)
[10:56:00] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:56:14] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 246 seconds)
[11:00:21] *** Quits: alystair (~alystair@user/alystair) (Ping timeout: 265 seconds)
[11:09:35] *** Joins: n00b101 (uid448161@id-448161.lymington.irccloud.com)
[11:15:17] *** Joins: pluri (~pluri@user/pluri)
[11:15:52] *** Joins: ihristov (~ihristov@217.145.94.71)
[11:19:58] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2.1)
[11:20:02] *** Joins: Brumaire (~quassel@37.171.164.139)
[11:23:14] *** Joins: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[11:23:14] *** Quits: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Changing host)
[11:23:14] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[11:23:27] *** Quits: mindraj (~mindraj@user/mindraj) (Quit: Goodbye, have a great day/evening!)
[11:24:01] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[11:24:31] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[11:26:51] *** Quits: Anonamy (~Anonamy@node-1w7jr9qgfucx13fyrpxrlwog9.ipv6.telus.net) (Ping timeout: 268 seconds)
[11:28:17] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 264 seconds)
[11:32:16] *** Quits: Axy (~Axy@user/axy) (Ping timeout: 252 seconds)
[11:32:23] *** Quits: n00b101 (uid448161@id-448161.lymington.irccloud.com) (Quit: Updating details, brb)
[11:32:32] *** Joins: n00b101 (uid448161@id-448161.lymington.irccloud.com)
[11:33:29] *** Joins: Axy (~Axy@user/axy)
[11:38:45] *** Joins: sizeof_void34 (~Thunderbi@109-252-124-86.nat.spd-mgts.ru)
[11:40:56] *** Joins: Anonamy (~Anonamy@d23-16-69-165.bchsia.telus.net)
[11:41:32] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:45:20] *** Joins: mexen (uid495612@user/mexen)
[11:46:35] *** Joins: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de)
[11:47:43] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[11:51:40] *** Joins: bomb (~bomb@user/bomb)
[11:52:04] *** Quits: Brumaire (~quassel@37.171.164.139) (Ping timeout: 252 seconds)
[11:52:53] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 264 seconds)
[11:54:50] *** Joins: vysn (~vysn@user/vysn)
[11:59:19] *** Joins: Brumaire (~quassel@37.171.164.139)
[12:01:25] *** Quits: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[12:03:42] *** Joins: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net)
[12:05:10] <gggpkm> what is the diff between devDependencies and dependencies
[12:05:30] *** Joins: onizu (uid373383@id-373383.uxbridge.irccloud.com)
[12:06:19] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Remote host closed the connection)
[12:11:19] *** Quits: pluri (~pluri@user/pluri) (Ping timeout: 252 seconds)
[12:12:07] <sheetjs> when installing a package by name, it will only download and install dependencies
[12:13:11] <sheetjs> when installing dependencies listed in a package.json (npm install) it will pull devDependencies as well
[12:13:21] <sheetjs> to suppress that behavior, run `npm install --production`
[12:17:42] *** Quits: Tempesta (Tempesta@user/tempesta) (Remote host closed the connection)
[12:20:11] *** Joins: Tempesta (~Tempesta@user/tempesta)
[12:21:40] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:21d5:2530:1baa:41a5)
[12:22:39] *** Quits: Axy (~Axy@user/axy) (Read error: Connection reset by peer)
[12:25:03] *** Joins: silly_ (~silly@user/silly)
[12:25:41] *** Quits: silly_ (~silly@user/silly) (Client Quit)
[12:25:48] *** Joins: Guest88 (~textual@85.249.161.186)
[12:25:53] *** Quits: silly (~silly@user/silly) (Read error: Connection reset by peer)
[12:26:03] *** Joins: Axy (~Axy@user/axy)
[12:27:18] *** Quits: Axy (~Axy@user/axy) (Read error: Connection reset by peer)
[12:27:41] <electrostatic> There's no real way to prevent an ES6 class method from being overridable by a subclass, is there?
[12:32:52] <sheetjs> kinda
[12:34:02] <sheetjs> n> class Foo { constructor() { Object.defineProperty(this, "baz", { value: () => 3, writable: false }); } } class Bar extends Foo { constructor() { super(); } baz() { return 4; } }; var bar = new Bar(); bar.baz()
[12:34:03] <jellobot> (okay) 3
[12:34:28] *** Joins: Naan (~Naan@user/naan)
[12:34:31] <sheetjs> electrostatic: ^^ subclass constructors have to call the base class constructor
[12:35:29] *** Quits: Naan` (~Naan@user/naan) (Ping timeout: 264 seconds)
[12:35:51] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:36:10] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[12:37:57] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:38:33] <electrostatic>  n> class Foo { constructor() { Object.defineProperty(this, "baz", { value: () => 3, writable: false }); } } class Bar extends Foo { baz = () => return 4; constructor() { super(); } }; var bar = new Bar(); bar.baz()
[12:38:46] <electrostatic> n> class Foo { constructor() { Object.defineProperty(this, "baz", { value: () => 3, writable: false }); } } class Bar extends Foo { baz = () => return 4; constructor() { super(); } }; var bar = new Bar(); bar.baz()
[12:38:47] <jellobot> (fail) SyntaxError: Unexpected token 'return'
[12:39:12] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:39:20] <electrostatic> n> class Foo { constructor() { Object.defineProperty(this, "baz", { value: () => 3, writable: false }); } } class Bar extends Foo { baz = () => 4; constructor() { super(); } }; var bar = new Bar(); bar.baz()
[12:39:21] <jellobot> (fail) TypeError: Cannot redefine property: baz
[12:39:28] <electrostatic> interesting
[12:40:19] *** Quits: Guest88 (~textual@85.249.161.186) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:40:40] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[12:41:31] <electrostatic> chrome doe not throw that error
[12:41:37] <electrostatic> *does not
[12:42:28] <electrostatic> I saw the Object.defineProperty used as an example bu others, but I was still able to override it as a property in chrome
[12:43:04] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Quit: Leaving...)
[12:48:49] *** Joins: ArchNoob (~maotora@user/archnoob)
[12:51:02] *** Quits: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de) (Ping timeout: 246 seconds)
[12:55:23] <bomb> excuse my French, but how is serverless lambda crap different than CGI?
[12:56:43] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[12:57:26] *** Quits: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[13:04:25] *** Joins: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de)
[13:05:44] *** Quits: Anonamy (~Anonamy@d23-16-69-165.bchsia.telus.net) (Ping timeout: 246 seconds)
[13:06:24] *** Quits: YoungFrog (~youngfrog@2a02:a03f:c21b:f900:d81c:46c2:41d2:67bb) (Remote host closed the connection)
[13:06:43] *** Joins: YoungFrog (~youngfrog@39.129-180-91.adsl-dyn.isp.belgacom.be)
[13:07:25] *** Quits: ArchNoob (~maotora@user/archnoob) (Ping timeout: 252 seconds)
[13:07:56] <electrostatic> bomb, marketing?
[13:08:59] *** Joins: ArchNoob (~maotora@user/archnoob)
[13:08:59] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[13:09:02] <bomb> electrostatic: that's exactly how I feel. IT is a fashion-driven industry, like Alan Kay says
[13:10:17] *** Quits: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de) (Ping timeout: 264 seconds)
[13:10:53] <electrostatic> I mean, I guess incgi you are in charge of scaling the server that the scripts are running on
[13:11:12] <electrostatic> So that's something, at least
[13:12:01] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[13:15:24] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[13:16:42] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Remote host closed the connection)
[13:16:58] *** Joins: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation)
[13:18:07] *** Joins: Anonamy (~Anonamy@node-1w7jr9qgs4t5i75qk7jqdi5w6.ipv6.telus.net)
[13:20:04] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[13:22:56] *** Quits: jaawerth (~jaawerth@104.131.115.202) (Ping timeout: 265 seconds)
[13:23:38] *** Joins: Axy (~Axy@user/axy)
[13:24:54] *** Quits: Axy (~Axy@user/axy) (Read error: Connection reset by peer)
[13:31:38] *** Quits: Brumaire (~quassel@37.171.164.139) (Ping timeout: 265 seconds)
[13:32:03] *** Joins: crazyhorse (~crazyhors@193-115-111-183.tpgi.com.au)
[13:33:10] *** Quits: jazzy (~jaziz@2600:380:8478:544b:74e4:ee0e:c5d7:8598) (Ping timeout: 240 seconds)
[13:33:17] <crazyhorse> What people using these days for bug tracking / project management?
[13:33:36] <crazyhorse> We're still on redmine.. would like to check out something newer
[13:34:44] *** Joins: pulse (~pulse@user/pulse)
[13:35:26] <Cork> using redmine here too, but you could have a look at gitlab, not sure if it will work as a replacement though
[13:36:00] <crazyhorse> redmine has served us so well... but I think we are up to 15 years of using it now
[13:36:05] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 264 seconds)
[13:36:10] <crazyhorse> nothing -> trac -> redmine -> ?
[13:39:06] *** Joins: silly_ (~silly@user/silly)
[13:39:17] *** Joins: jmft2 (~jmft2@213.31.248.255)
[13:40:53] *** Joins: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de)
[13:43:11] *** Quits: Anonamy (~Anonamy@node-1w7jr9qgs4t5i75qk7jqdi5w6.ipv6.telus.net) (Ping timeout: 246 seconds)
[13:46:17] *** Quits: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de) (Ping timeout: 264 seconds)
[13:49:07] *** Joins: Anonamy (~Anonamy@d205-250-185-141.bchsia.telus.net)
[13:49:34] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[13:58:27] <chovy> i hate react
[14:02:01] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[14:03:54] *** Quits: ArchNoob (~maotora@user/archnoob) (Quit: WeeChat 3.2)
[14:04:09] *** Joins: ArchNoob (~maotora@user/archnoob)
[14:05:12] *** Joins: Axy (~Axy@user/axy)
[14:07:05] <electrostatic> react hates you
[14:07:43] <chovy> good.
[14:07:51] <chovy> seriously who likes that garbage?
[14:08:10] <chovy> every react job i've had has had an absolutely atrocious spaghetti codebase
[14:10:10] <electrostatic> Interesting anecdote in general. When you go to stack overflow most javascript questions are about how to code this or that. Most typescript questions are about what hoops to jump through so that typescript doesn't sh%& the bed.
[14:13:48] <electrostatic> Now, I realize jsx isn't typescript, but it tends to the same f'ery imo
[14:14:19] <ArchNoob> Just curious why using encodeURI("some>string>with>these") displays the string as is on firefox and chrome address bar and not replacing ">" with "%3E". Is it a new thing on modern browsers?
[14:17:32] *** Joins: pluri (~pluri@user/pluri)
[14:19:23] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[14:23:47] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 246 seconds)
[14:24:58] *** Joins: Guest88 (~textual@85.249.161.186)
[14:25:22] *** Quits: avu (~jan@user/avu) (Remote host closed the connection)
[14:25:39] *** Joins: avu (~jan@user/avu)
[14:34:17] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[14:35:32] *** Joins: thiras (~thiras@user/thiras)
[14:37:05] *** Quits: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net) (Ping timeout: 246 seconds)
[14:37:35] *** Joins: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net)
[14:38:02] *** Joins: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de)
[14:39:26] *** Joins: stenno (~stenno@user/stenno)
[14:42:53] *** Quits: Guest88 (~textual@85.249.161.186) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:42:58] *** Joins: momus_ (~m@8.44.59.36)
[14:44:29] *** Quits: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de) (Ping timeout: 264 seconds)
[14:49:19] *** Quits: n00b101 (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[14:49:24] *** Quits: crazyhorse (~crazyhors@193-115-111-183.tpgi.com.au) (Remote host closed the connection)
[14:52:04] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[14:55:56] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[14:56:59] *** Joins: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de)
[14:57:14] *** Joins: mikrosis (~mikrosis@dynamic-046-114-168-151.46.114.pool.telefonica.de)
[15:00:10] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[15:00:41] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:21d5:2530:1baa:41a5) (Ping timeout: 264 seconds)
[15:01:53] *** Quits: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de) (Ping timeout: 264 seconds)
[15:02:31] *** Joins: otisolsen70_ (~otisolsen@sas08106.nat.sas.com)
[15:02:38] *** Quits: momus_ (~m@8.44.59.36) (Ping timeout: 246 seconds)
[15:02:40] *** Joins: momus (~m@197.210.77.161)
[15:05:04] *** Joins: Heraes (~Heraes@119.12.203.77.rev.sfr.net)
[15:05:04] *** Quits: Heraes (~Heraes@119.12.203.77.rev.sfr.net) (Changing host)
[15:05:04] *** Joins: Heraes (~Heraes@user/romarain)
[15:05:32] *** Joins: mindraj (~mindraj@user/mindraj)
[15:06:05] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 264 seconds)
[15:08:58] *** Quits: jmft2 (~jmft2@213.31.248.255) (Quit: This computer has gone to sleep)
[15:09:57] <chovy> electr0n: heh
[15:11:00] <Alexendoo> ArchNoob: Perhaps you meant to use encodeURIComponent()?
[15:11:13] *** Quits: gggpkm (~gggpkm@111-251-158-17.dynamic-ip.hinet.net) (Remote host closed the connection)
[15:11:32] *** Joins: gggpkm (~gggpkm@111-251-158-17.dynamic-ip.hinet.net)
[15:11:38] *** Joins: duch_kazatel (~robert0@c-76-114-62-229.hsd1.ca.comcast.net)
[15:13:08] *** Quits: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net) (Ping timeout: 265 seconds)
[15:15:49] *** Joins: vysn (~vysn@user/vysn)
[15:17:50] *** Joins: Guest88 (~textual@85.249.161.186)
[15:18:18] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[15:20:18] *** Quits: otisolsen70_ (~otisolsen@sas08106.nat.sas.com) (Quit: Leaving)
[15:21:41] <gggpkm> how to use async dispatch
[15:22:14] *** Joins: teut (~teut@122.162.88.202)
[15:22:22] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[15:22:56] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 246 seconds)
[15:22:58] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 260 seconds)
[15:23:02] *** Joins: momus_ (~m@8.44.59.36)
[15:24:41] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 246 seconds)
[15:25:17] *** Quits: momus (~m@197.210.77.161) (Ping timeout: 264 seconds)
[15:26:25] *** Joins: shimbles (~shimbles@209.201.38.106)
[15:26:26] *** Quits: mindraj (~mindraj@user/mindraj) (Quit: Goodbye, have a great day/evening!)
[15:30:51] <ThePendulum> in redux?
[15:33:05] *** cis_ is now known as cis
[15:40:39] <shimbles> is there a way to tell npms dependency resolver to install package versions for all packages such that packageicareabout==4.44.1 ?
[15:57:57] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[15:58:10] *** Joins: stenno (~stenno@user/stenno)
[16:00:29] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[16:04:40] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[16:06:12] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[16:07:14] *** Quits: shimbles (~shimbles@209.201.38.106) (Quit: Client closed)
[16:07:44] *** Quits: kstolen (~kStolen@2a00:fa40:2aaa:1::539:82de) (Ping timeout: 246 seconds)
[16:08:21] *** Joins: paule32 (~paule32@user/paule32)
[16:08:47] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 246 seconds)
[16:09:38] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[16:09:48] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[16:10:18] <OnkelTem> Hi folks. I have a packaging question. When making a typical React app one adds used libraries to the 'dependencies' and I wonder why really? We could have added all those deps to the devDependencies, right? After all, if this package is gonna be installed via `npm i` (for example for end-to-end tests), then we wouldn't want all those deps in the dependencies, since we in this case have the
[16:10:19] <OnkelTem> `build` directory.
[16:11:16] <OnkelTem> In other words React apps are not intended for installation via `npm i` in most cases
[16:12:28] <OnkelTem> and hence we don't need 'dependencies', we can use 'devDependencies' instead, right?
[16:12:30] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:c420:6d94:fde4:9ca)
[16:13:08] *** Joins: bomb_ (~bomb@user/bomb)
[16:14:43] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[16:16:21] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[16:16:57] *** Quits: bomb (~bomb@user/bomb) (Ping timeout: 276 seconds)
[16:19:02] <OnkelTem> 461 people, my gosh
[16:19:18] <OnkelTem> where are the others? left on the old server which is dead by now?
[16:19:20] *** Parts: paule32 (~paule32@user/paule32) (Leaving)
[16:19:27] <OnkelTem> So we've lost good have of the people
[16:19:34] <stenno> on FN there were a lot zombie accounts
[16:19:45] <OnkelTem> ah, heh. Hope so. Thanks
[16:19:56] <stenno> this probably reflects the _active_ users on FN
[16:19:58] *** Joins: kstolen (~kStolen@2a00:fa40:2aaa:1::539:82de)
[16:20:02] <OnkelTem> yep
[16:20:37] <OnkelTem> So these idling folks are better then the old ones! :)
[16:21:00] <OnkelTem> than* dman
[16:21:05] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 264 seconds)
[16:21:09] <OnkelTem> damn* darn
[16:21:11] *** bomb_ is now known as bomb
[16:21:46] <stenno> dunno about 'better', thats quite subjective
[16:22:53] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 264 seconds)
[16:35:40] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 240 seconds)
[16:36:26] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[16:41:05] *** Joins: keypusher (keypusher@user/keypusher)
[16:41:51] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[16:43:30] <silly_> if you use a bouncer, you always appear to be online, even if you are not
[16:46:10] *** Quits: Guest88 (~textual@85.249.161.186) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:46:18] *** Quits: keypusher (keypusher@user/keypusher) (Remote host closed the connection)
[16:48:49] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[16:49:59] *** Joins: keypusher (keypusher@user/keypusher)
[16:50:41] *** Joins: snedd (~snedd@86.14.114.137)
[16:51:09] *** Joins: pulse (~pulse@user/pulse)
[16:53:28] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 252 seconds)
[16:57:16] *** Quits: dskull (~dskull@user/dskull) (Quit: quit)
[16:58:39] *** Joins: dskull (~dskull@user/dskull)
[17:01:39] *** Quits: dskull (~dskull@user/dskull) (Client Quit)
[17:02:34] *** Joins: sillyslux__ (~silly@user/silly)
[17:03:09] *** Quits: silly_ (~silly@user/silly) (Read error: Connection reset by peer)
[17:06:36] *** Quits: keypusher (keypusher@user/keypusher) (Quit: bye)
[17:09:03] *** Joins: keypusher (keypusher@user/keypusher)
[17:10:57] *** Quits: Nitrousoxide (~msdos@user/nitrousoxide) (Remote host closed the connection)
[17:12:13] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[17:21:07] *** Joins: mindraj (~mindraj@user/mindraj)
[17:35:02] *** Quits: momus_ (~m@8.44.59.36) (Ping timeout: 260 seconds)
[17:35:46] *** Joins: teut69 (~teut@122.162.88.202)
[17:38:51] *** Quits: teut (~teut@122.162.88.202) (Ping timeout: 256 seconds)
[17:38:58] *** Quits: snedd (~snedd@86.14.114.137) (Quit: Leaving)
[17:43:03] *** Joins: qswz (~caub@lfbn-nic-1-290-157.w90-116.abo.wanadoo.fr)
[17:44:05] <qswz> what is origin of the term 'dry-run'? as opposed to wet run?
[17:44:37] <qswz> why not test-run, no-side-effect-run
[17:45:23] *** mindraj is now known as d_zol
[17:46:41] <qswz> https://en.wikipedia.org/wiki/Dry_run_(testing)
[17:48:32] *** Quits: gggpkm (~gggpkm@111-251-158-17.dynamic-ip.hinet.net) (Ping timeout: 246 seconds)
[17:48:52] *** night_wulfe_ is now known as night_wulfe
[17:49:21] *** Quits: d_zol (~mindraj@user/mindraj) (Quit: Goodbye, have a great day/evening!)
[17:49:44] *** Joins: gggp (~textual@60.10.194.42)
[17:55:12] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[17:55:12] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[17:55:12] *** Joins: wroathe (~wroathe@user/wroathe)
[17:57:18] <stenno> in german we use the expression 'trockenuebung'
[18:01:40] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[18:02:52] <qswz> run-without-bug?
[18:04:21] <qswz> there's no French term for it
[18:04:40] <qswz> fonctionnement à sec, nah sounds ridiculous
[18:04:48] *** Joins: momus_ (~m@8.44.59.36)
[18:04:51] <qswz> execution à sec
[18:04:58] <stenno> Definition of Trockenübung in the German dictionary
[18:05:00] <stenno> the actual learning and practicing of a certain activity preparatory exercise, where no real conditions prevail.
[18:05:30] <stenno> seems to come from swim training oslt?
[18:05:36] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[18:05:47] <qswz> oh French's is https://fr.wikipedia.org/wiki/Test_%C3%A0_blanc never heard of it
[18:05:54] <qswz> sounds racist
[18:06:02] <qswz> :p
[18:06:29] *** Joins: merecat (~tonygreen@pool-71-185-46-23.phlapa.fios.verizon.net)
[18:06:39] <qswz> you'd test on blacks rather, not on white duh
[18:06:45] <qswz> ok, sorry
[18:06:48] <Covrus> ESLint keeps giving me an error of "TypeError: Cannot read property 'name' of undefined" when I use parseInt - is this something I'm doing wrong?
[18:07:05] <Covrus> this is in IDEA BTW
[18:07:07] <qswz> doesn't sound like an eslint error
[18:07:18] <Covrus> IDEA says it's from ESLint
[18:07:20] <qswz> more like a runtime error
[18:07:35] <qswz> eslint error should tell the rule name
[18:07:46] <Covrus> occurs while linting, according to the details, but I don't know why
[18:07:50] <sillyslux__> Covrus, parseInt()?
[18:07:52] <qswz> https://eslint.org/docs/rules/
[18:07:58] <Covrus> sillyslux__: yes
[18:08:01] <sillyslux__> what's parseInt(inside)?
[18:08:07] <prussian> are you sure your install of eslint isn't broken?
[18:08:09] <qswz> n> parseInt()
[18:08:10] <jellobot> (okay) NaN
[18:08:21] <stenno> n> parseInt('f00', 16)
[18:08:22] <Covrus> parseInt(oldDevice.roomId,10)  is the call
[18:08:22] <jellobot> (okay) 3840
[18:08:29] <sillyslux__> parseInt(something.name)?
[18:08:34] <Covrus> and this is during linting
[18:08:37] <qswz> n> parseInt(({}).foo.name)
[18:08:38] <jellobot> (fail) TypeError: Cannot read property 'name' of undefined
[18:08:50] <Covrus> no, it's literally parseInt(oldDevice.roomId)
[18:09:01] <Covrus> well, no, parseInt(oldDevice.roomId,10)
[18:09:03] <stenno> but it must be unrelated to linting
[18:09:10] <Covrus> it's a runtime error in the linter
[18:09:14] <qswz> must be a npm test
[18:09:15] <stenno> this must not be the correct line
[18:09:23] <qswz> unit-test or something
[18:09:23] <stenno> where the error gets thrown
[18:09:30] <Covrus> if I change that method call, the error goes away
[18:09:47] <stenno> change how?
[18:09:54] <stenno> i mean there must be an assignment there
[18:09:56] <qswz> post the full error stacktrace
[18:10:01] <stenno> its only half of the line
[18:10:14] <Covrus> the broken version: if(parseInt(oldDevice.roomId,10)!==parseInt(dev.roomId,10)) {
[18:10:34] <Covrus> the able-to-be-linted version: if(oldDevice.roomId!==dev.roomId) {
[18:11:12] <sillyslux__> you can also command line lint with `npx eslint .`
[18:11:24] <Covrus> the error is in eslint-plugin-more, in prefer-includes, in BinaryExpression
[18:11:30] <qswz> paste whatever Idea outputs in the console in dpaste
[18:12:17] <qswz> yea try also `npx eslint`
[18:12:25] <qswz> from command line
[18:12:30] <Covrus> sure, sec
[18:12:44] <sillyslux__> https://github.com/WebbyLab/eslint-plugin-more/issues/44
[18:12:46] <sillyslux__> hah...
[18:14:39] <qswz> lol a bug in eslint, how vicious
[18:14:47] *** Quits: gggp (~textual@60.10.194.42) (Ping timeout: 246 seconds)
[18:14:48] <Covrus> oh wait
[18:14:49] <qswz> well a plugin
[18:14:50] <stenno> open since 30 march
[18:15:00] <Covrus> I'll bitch at them to fix it
[18:15:01] <stenno> oh its just for 'more'
[18:15:05] <stenno> no wait
[18:15:11] <stenno> oh wait
[18:15:12] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[18:15:14] <stenno> ok
[18:15:33] <qswz> just drop that plugin
[18:15:50] <Covrus> or get them to fix it, since I talk to webbylabs every week
[18:16:16] <stenno> do you also talk to the dotenv-flow
[18:16:18] <stenno> people
[18:16:22] <qswz> guys, question, is there a nice way to make an api request without side-effects (so like a GET) with a body
[18:16:24] <Covrus> not that I know of
[18:16:34] <qswz> going with POST for now
[18:16:46] <stenno> because for some reason my .env.development.local
[18:16:48] *** Quits: X-Scale (~ARM@46.50.5.115) (Ping timeout: 265 seconds)
[18:16:48] *** X-Scale` is now known as X-Scale
[18:16:56] <stenno> qswz: query params?
[18:16:58] <sillyslux__> PUT maybe?
[18:17:19] <qswz> stenno: not good for more complex fields (objects)
[18:17:38] <stenno> PUT has side effects speaking from a RESTful perspective
[18:17:59] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[18:18:11] <stenno> qswz: but you wanna have it RESTful altogether?
[18:18:21] <qswz> I think GET allows a body in express, or possible SEARCH, but prefer staying standard
[18:18:34] <qswz> stenno: not caring so much
[18:19:20] <stenno> yes, GET with body is undefined behavior
[18:19:49] <Alexendoo> fetch throws if you try that
[18:19:59] <stenno> qswz: well, then, just post?
[18:19:59] <prussian> how nice.
[18:20:08] <stenno> idk how to answer your question then :D
[18:20:13] *** Quits: teut69 (~teut@122.162.88.202) (Ping timeout: 256 seconds)
[18:20:22] *** Joins: gggp (~textual@123.115.162.53)
[18:21:05] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:c420:6d94:fde4:9ca) (Ping timeout: 264 seconds)
[18:21:34] <qswz> let it be post
[18:22:02] <stenno> the question is not relevant if you have non-semantic HTTP methods anyway
[18:22:29] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 246 seconds)
[18:25:32] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[18:25:58] <stenno> no-then: Forces the use of async / await instead of then
[18:29:23] *** Joins: schemanic (~schemanic@204.13.45.2)
[18:29:36] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[18:30:30] <schemanic> Hello, I'm looking for libraries that can help me simulate a fictional solar system's orbital rotation and generate imagery of it. Can anyone give me suggestions for tools I could use in JS?
[18:31:22] <stenno> can d3.js do stuff like that?
[18:32:08] <stenno> https://github.com/d3/d3/blob/main/API.md#forces-d3-force
[18:32:19] <stenno> hayiiiya forces
[18:33:23] <schemanic> I'm certain that d3 can make imagery, but I'm looking for something thats as developed as possible. I don't have a high degree of math or physics under my belt, so I'm looking for tools that are as close to 'create objects with properties such as mass and distance from largest source of gravity'
[18:34:27] <ldlework> https://universesandbox.com/
[18:34:37] <ldlework> Oh in JS
[18:38:14] *** Joins: Brumaire (~quassel@37.164.120.216)
[18:39:52] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[18:40:17] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[18:42:31] *** Joins: voltage_ (voltage@user/voltage)
[18:45:14] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 246 seconds)
[18:45:58] *** Joins: onosendi (~onosendi@user/onosendi)
[18:46:17] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Ping timeout: 265 seconds)
[18:46:30] *** Joins: KevinX_ (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[18:46:57] *** Quits: KevinX_ (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Read error: Connection reset by peer)
[18:47:24] *** Joins: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com)
[18:47:28] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:47:43] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[18:51:40] *** Joins: teut (~teut@122.162.88.202)
[18:52:01] *** Joins: zebrag (~chris@user/zebrag)
[18:53:58] *** Joins: kakashiAL (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de)
[18:59:31] <stenno> schemanic: tell me if you find a framework like that, i'd be interested too
[19:06:31] *** Quits: ihristov (~ihristov@217.145.94.71) (Quit: Connection closed)
[19:08:05] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[19:08:50] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 260 seconds)
[19:09:15] <samsch> schemanic, I'd guess that threejs might be capable of that
[19:11:29] <schemanic> I'm trying to create accurate maps of my fictional solar system over time so I don't have to resort to faking it in photoshop
[19:14:14] *** Quits: beeza (sid53872@id-53872.tinside.irccloud.com) ()
[19:22:34] *** Quits: Intelo (~Intelo@88.244.90.255) (Ping timeout: 256 seconds)
[19:23:18] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 260 seconds)
[19:26:52] *** Joins: cheater (~Username@user/cheater)
[19:35:11] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[19:36:22] *** Quits: gggp (~textual@123.115.162.53) (Ping timeout: 260 seconds)
[19:36:46] *** Joins: gggp (~textual@60.10.194.42)
[19:38:29] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 264 seconds)
[19:39:08] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 246 seconds)
[19:45:42] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 260 seconds)
[19:48:50] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[19:49:16] *** Joins: hendursaga (~weechat@user/hendursaga)
[19:54:50] *** Joins: daoudr (~daoudr@178.197.212.191)
[19:59:33] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[20:10:22] *** Quits: momus_ (~m@8.44.59.36) (Ping timeout: 252 seconds)
[20:12:04] <ljharb> schemanic: “accurate” requires more computing power than you’re likely to have access to on a personal computer inside a web browser
[20:15:45] <schemanic> Yes, I understand that there is a level of realism that I'm sacrificing, but I know that these things can be calculated in a simple set of points following elliptical diagrams
[20:18:57] *** Joins: alystair (~alystair@user/alystair)
[20:19:38] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[20:21:05] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:21:55] *** Quits: Brumaire (~quassel@37.164.120.216) (Ping timeout: 252 seconds)
[20:22:53] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 264 seconds)
[20:24:17] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 246 seconds)
[20:25:41] *** Quits: teut (~teut@122.162.88.202) (Quit: Client closed)
[20:30:05] *** Quits: ArchNoob (~maotora@user/archnoob) (Ping timeout: 264 seconds)
[20:31:11] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[20:32:46] *** Quits: pluri (~pluri@user/pluri) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:33:29] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Remote host closed the connection)
[20:33:44] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[20:34:12] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[20:34:53] *** Quits: qswz (~caub@lfbn-nic-1-290-157.w90-116.abo.wanadoo.fr) (Quit: leaving)
[20:35:08] *** Joins: sam_1 (~sam_1@87.51.251.118)
[20:36:17] *** Joins: pluri (~pluri@user/pluri)
[20:37:56] *** Joins: teut (~teut@122.162.88.202)
[20:38:27] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Client Quit)
[20:38:40] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
[20:39:44] *** Joins: momus_ (~m@8.44.59.36)
[20:39:47] *** Quits: mikrosis (~mikrosis@dynamic-046-114-168-151.46.114.pool.telefonica.de) (Quit: Connection closed)
[20:42:29] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 246 seconds)
[20:43:03] *** Joins: Guest88 (~textual@85.249.161.186)
[20:43:16] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[20:43:43] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Quit: Leaving)
[20:45:43] *** Quits: Guest88 (~textual@85.249.161.186) (Client Quit)
[20:48:18] *** Quits: sizeof_void34 (~Thunderbi@109-252-124-86.nat.spd-mgts.ru) (Quit: sizeof_void34)
[20:48:42] *** Joins: sizeof_void34 (~Thunderbi@109-252-124-86.nat.spd-mgts.ru)
[20:53:44] *** Joins: ArchNoob (~maotora@user/archnoob)
[20:55:42] *** Joins: sam_1 (~sam_1@87.51.251.118)
[20:57:09] *** Joins: Rockwood (~Rocky@user/rocky)
[20:57:49] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[20:59:55] *** Quits: gggp (~textual@60.10.194.42) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:00:41] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 264 seconds)
[21:02:55] *** Joins: codebam (~codebam@user/codebam)
[21:03:20] <codebam> how can I run a seed file directly with knex?
[21:06:50] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[21:09:00] *** Quits: alystair (~alystair@user/alystair) (Remote host closed the connection)
[21:14:33] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[21:14:33] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[21:14:33] *** Joins: wroathe (~wroathe@user/wroathe)
[21:15:09] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 265 seconds)
[21:16:01] <Sven_vB> hi :)
[21:16:17] <Sven_vB> does anyone know an equivalent of p-map--
[21:16:33] <Sven_vB> does anyone know an equivalent of p-map-series that maps by object key rather than array index?
[21:17:32] *** Joins: voltage (voltage@user/voltage)
[21:18:01] *** Joins: kill (~killown@user/killown)
[21:18:16] *** Quits: voltage_ (voltage@user/voltage) (Killed (NickServ (GHOST command used by voltage)))
[21:18:20] *** voltage is now known as voltage_
[21:18:24] <onosendi> codebam: `npx knex seed:run --specific filename`, see also `npx knex seed:run --help`
[21:19:11] <codebam> onosendi: okay, thank you
[21:20:17] *** Quits: hsiktas (sid224847@2a03:5180:f:2::3:6e4f) (Quit: Connection closed for inactivity)
[21:23:38] <Sven_vB> found it, p-props
[21:32:25] *** Quits: xsperry (~as@user/xsperry) (Ping timeout: 268 seconds)
[21:38:25] *** Quits: kill (~killown@user/killown) (Quit: Leaving)
[21:38:42] *** Joins: incognito (~relativit@user/incognito)
[21:42:24] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[21:46:32] *** Quits: momus_ (~m@8.44.59.36) (Ping timeout: 246 seconds)
[21:47:03] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 265 seconds)
[21:48:52] *** Joins: momus_ (~m@8.44.59.36)
[21:50:56] *** Joins: jazzy (~jaziz@2600:380:457b:dc40:6db7:481b:9945:77d8)
[21:52:59] *** Joins: whoever (~trevor@cpe-70-112-235-224.austin.res.rr.com)
[21:53:02] <whoever> hi all
[21:53:33] <whoever> how do you use wild cards to search for output containing a substr
[21:56:48] <austincheney> whoever, what kind of search?  A string match, regex, something else?
[21:57:29] <onosendi> n> const s = 'this is mystring :)'; /mystring/.test(s);
[21:57:30] <jellobot> (okay) true
[21:59:14] <austincheney> whoever, I have a personal project that displays the file system in the browser so that a user can navigate it, execute files from it, and share the file system across the network.  My browser app performs file system search faster than Windows Explorer application precisely becasue I don't support wild cards or switches, because there is parse time
[21:59:43] <austincheney> its also why querySelectors are so incredibly slower than the long boring dom methods
[22:06:17] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[22:09:17] *** Quits: momus_ (~m@8.44.59.36) (Ping timeout: 246 seconds)
[22:09:49] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[22:12:09] *** Joins: Brumaire (~quassel@81-64-14-121.rev.numericable.fr)
[22:14:56] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[22:17:28] <Joel> Anyone have a document that covers dealing with money in js? I want to avoid rounding issues, etc. From a quick search, it seems like I should handle money in cents, then just convert to dollars on display, wasn't sure if there was something more comprehensive out there.
[22:18:20] <bomb> yeah, serious problem space. there are libs for that
[22:20:15] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[22:21:17] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[22:21:34] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[22:22:02] *** Quits: audio (~audio@2603-8081-1800-6a6f-60cd-6954-be1d-d6dd.res6.spectrum.com) (Ping timeout: 260 seconds)
[22:22:17] *** Joins: ckdCreations (~ckdCreati@147.55.133.133)
[22:22:53] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 264 seconds)
[22:25:46] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 260 seconds)
[22:29:45] *** Joins: momus_ (~m@8.44.59.36)
[22:30:37] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.2)
[22:31:14] *** Joins: thiras (~thiras@user/thiras)
[22:33:48] <daoudr> why the matrix array parameter length stayed the same after deleting one row? https://imgur.com/ennTtXV.png  https://pastebin.com/HfhaMG0d
[22:34:55] <ljharb> daoudr: because JS doesn't have matrixes and you can't go around `delete`ing things and expecting it to just work
[22:35:07] <ljharb> daoudr: and you NEVER want to delete from an array, that makes it sparse and slow
[22:36:25] <daoudr> ok thanks
[22:38:17] <austincheney> Joel, JS has problems with money due to decimal arthimetic failures in its number type
[22:38:25] <austincheney> > 0.1 + 0.2
[22:38:26] <pulse> words can't express how much i hate events in JS
[22:38:41] <austincheney> n> 0.1 + 0.2
[22:38:42] <jellobot> (okay) 0.30000000000000004
[22:38:48] * pulse trips over 10 stopPropagation statements
[22:39:30] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[22:39:30] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[22:39:30] *** Joins: wroathe (~wroathe@user/wroathe)
[22:39:37] <austincheney> Joel, one solution is to multiply numbers by ie9 before arithmetic operations and then divide them back by 1e9 there by pushing precision failures far out of view
[22:39:40] <Joel> austincheney yeah, that I knew, I didn't know if I could just do all math in "cents", then convert to dollars after the fact?
[22:40:05] <austincheney> Joel, you could also not use the number data type and instead use BigInt data type until you are ready to present a final value
[22:40:23] <Joel> so to add 1.09 and 1, do ((1.09 * 100) + 1) / 100
[22:40:41] <sheetjs> pulse: you can always add `Event.prototype.hammerTime = Event.prototype.stopImmediatePropagation || Event.prototype.stopPropagation`
[22:40:59] <pulse> thanks but i think i'll go crazy on my own
[22:41:23] <pulse> i want something to have both drag events
[22:41:26] <pulse> but also be able to click through
[22:41:36] <austincheney> n> ((1.09 * 1e9) + 1e9) / 1e9
[22:41:37] <jellobot> (okay) 2.09
[22:41:41] <Joel> austincheney ah, looks like Bigint enables just that, the storing as cents, and converting.
[22:41:54] *** Quits: tnsi (~tnsi@075-128-103-056.res.spectrum.com) (Quit: ZNC - https://znc.in)
[22:42:06] <Joel> Will do some more reading on bigint, thanks so much!
[22:42:30] <sheetjs> it sounds like events might be too hype
[22:43:09] *** Joins: tnsi (~tnsi@075-128-103-056.res.spectrum.com)
[22:43:16] <Rockwood> sheetjs, o/
[22:43:52] <austincheney> sheetjs, eh?  Events are one of those super basic things all the big frameworks attempt to "make easier"
[22:43:56] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 246 seconds)
[22:44:47] *** Joins: dskull (~dskull@user/dskull)
[22:44:49] <sheetjs> "too hype" is a lyric from "can't touch this"
[22:46:24] *** Joins: gehn (~gehn@user/gehn)
[22:46:32] <cthulchu_> string validation script logic: if this regexp, return "You have to have at least one special character", if this other regexp, return "You have to have at least one number", etc, etc, etc and then just let the function die off with no explicit return. And so if the function === Undefined, then the validation passed. Otherwise, the error is what it returned
[22:46:52] <cthulchu_> a little bit counter intuitive...
[22:47:03] <cthulchu_> but elegant
[22:47:31] <ljharb> pulse: easier with react
[22:47:40] <ljharb> Joel: store as microdollars, not cents
[22:47:46] <ljharb> Joel: like *1e9
[22:47:49] <pulse> can't use frameworks
[22:47:52] <austincheney> cthulchu_, or instead of undefined you can have the function return an empty string so that it is more type safe
[22:48:01] <pulse> i've almost figured it out anyway
[22:48:04] <pulse> but it's hacky and i hate it
[22:48:12] <ljharb> lolwut, why not
[22:48:42] <Joel> ljharb recommend any link where I can read more?
[22:48:51] <pulse> why i can't use frameworks?
[22:49:08] <pulse> because it's a client project that requires vanilla js
[22:49:20] <pulse> the whole thing is 3kb
[22:49:23] <systemfault> The client probably REALLY cares about that...
[22:49:37] <pulse> they absolutely do
[22:49:46] <systemfault> When I first meet a client, we usually discuss about a business problem to solve...
[22:49:50] <austincheney> the client may not care about choice of frameworks but probably actually does care about portability
[22:49:53] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 264 seconds)
[22:49:59] <pulse> oh jesus christ
[22:50:02] <pulse> trust me, no
[22:50:05] <systemfault> And they contact YOU, the EXPERT, to make the technical decisions
[22:50:14] <Joel> ljharb I feel like austincheney was recommending this as an option too, but having a heck of a time coming up with terms to learn more when searching
[22:50:15] <pulse> yes, and i as the technical expert say that i don't want react
[22:50:19] <pulse> because the whole project is 3kb
[22:50:23] <ljharb> Joel: no link. it's just that microdollars is enough precision to handle all fiat currencies (except for ecuador)
[22:50:24] <teut> https://ibb.co/4ZYHQsk
[22:50:30] <ljharb> Joel: it's what twitter ads does.
[22:50:31] <systemfault> 3kb is NOT a BUSINESS GOAL
[22:50:32] <teut> whats the reder queue here?
[22:50:39] <pulse> you people are nuts
[22:50:40] <Joel> "1e9" just doesn't compute in my brain, I don't get it :\
[22:50:50] <systemfault> n> 1e9
[22:50:51] <jellobot> (okay) 1000000000
[22:51:09] <ljharb> Joel: 1 times 10 to the 9th? it's just exponential notation. did you not use a calculator in school?
[22:51:14] <pulse> systemfault, in this case it absolutely is. one of the requirements is "as lightweight as humanly possible"
[22:51:17] <pulse> and that's a direct quote
[22:51:24] <pulse> you still want me to lose my job by adding react?
[22:51:32] <Joel> ljharb that comes across far ruder than you might intend, or maybe you do.
[22:51:38] <ljharb> Joel: sorry, that wasn't intended
[22:51:42] <ljharb> Joel: i'm more surprised
[22:51:53] <ljharb> Joel: like maybe you're younger than i am and calculators don't have that notation anymore?
[22:51:58] <systemfault> pulse: They shouldn't even know about that, not sure what kind of client you're dealing with...
[22:52:07] <systemfault> pulse: In any case, I wish you well
[22:52:10] <pulse> systemfault, you're clearly either inexperienced, or full of ego
[22:52:22] <systemfault> pulse: And you, obviously, full of shit.
[22:52:24] <ljharb> pulse: why is that one of the requirements?
[22:52:27] <systemfault> There goes the diplomacy
[22:52:30] <ljharb> pulse: "weight" isn't a product requirement, it's a technical one.
[22:52:34] <pulse> systemfault, ...
[22:52:48] <ljharb> pulse: the product requirement might be "loads fast" or something
[22:52:52] <pulse> ljharb, because it's promotional content that's supposed to load lightning fast
[22:53:00] <pulse> their requirement is vanilla JS and lightweight
[22:53:18] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:53:18] *** Quits: dskull (~dskull@user/dskull) (Ping timeout: 260 seconds)
[22:53:21] <ljharb> pulse: so it's like a contracting gig?
[22:53:26] <pulse> ljharb, yep
[22:53:37] <ljharb> pulse: so they're not competent or skilled enough to do the job, but they think it's a good idea to include technical requirements?
[22:53:48] <pulse> why do i bother chatting on this channel
[22:53:55] <ljharb> "load lightning fast" is a good product requirement. how you do that should be your choice.
[22:54:00] <seed0> ?
[22:54:19] *** Joins: dskull (~dskull@user/dskull)
[22:54:41] <sheetjs> this is not a productive discussion.  there are good reasons to use react and good reasons to avoid react
[22:54:48] <ljharb> pulse: presumably for the free expert advice
[22:55:16] <Alexendoo> Good lord backdrop-filter can really tank a page
[22:55:16] <ljharb> well, few good reasons to avoid react specifically. but this is about having a product requirement also be a technical requirement, which is silly
[22:55:19] <pulse> ljharb, clearly none of you are experts if you recommend react for something that i specifically said cannot use react
[22:55:51] <ljharb> pulse: experts is why we're interrogating that absurd requirement
[22:55:53] <pulse> anyway i solved it so nvm
[22:55:54] <xb0o2> It's getting a bit StackOverflowy in here.
[22:56:05] <ljharb> pulse: amateur would be to take requirements as gospel without questioning them
[22:56:42] <pulse> ljharb, it's ridiculous to treat react as a solve-it-all, and even insist that i should use it after i tell you my client specifically said no frameworks
[22:56:47] <pulse> so either you want me to lose your job
[22:56:57] <ljharb> lol i'm not saying to ignore your client's requirement
[22:57:01] <pulse> or you're so attached to your framework that you're wiling to spend 3 hours bullshiting me
[22:57:08] <ljharb> i'm trying to understand why you'd take a job where the client is requiring things they know nothing about
[22:57:11] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:a035:dd1f:4611:6180)
[22:57:12] <pulse> then stop making stupid claims
[22:57:19] <pulse> they know all about it, they're the client
[22:57:26] <ljharb> … is this your first client?
[22:57:29] <pulse> no
[22:57:50] <ljharb> https://theoatmeal.com/comics/design_hell is a delightful comment about clients' wants
[22:59:03] <seed0> lol
[22:59:08] <pulse> also i didn't realize i was on #react
[22:59:12] <pulse> anyway never mind
[22:59:12] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[22:59:18] <pulse> a man can't even vent anymore lmao
[22:59:45] <ljharb> this isn't about react. pretend i said "a framework" instead of "react".
[22:59:58] <pulse> for the last time, i can't use one, and even if i could, i wouldn't because it's a stupid idea
[23:00:03] <sheetjs> react has unique considerations
[23:00:07] <pulse> for something that has literally 200 lines of code
[23:00:13] <sheetjs> seeing as how they relicensed twice, a third relicensing is not out of the question
[23:00:15] <pulse> and when my client specifically asked me to make it lightweight
[23:00:36] <seed0> that comic ending.. so so true :(
[23:00:58] <ljharb> sheetjs: it's not out of the question for literally any library, and the likelihood of a relicensing is not increased by previous ones, just like the likelihood of "heads" isn't increased no matter how many tails you got
[23:01:40] <ljharb> it's in fact highly unlikely they'll relicense, since MIT is what everyone uses, it was very expensive for them to do it before, and the only reason they did it before was a ton of bad PR and community pressure
[23:02:02] <ljharb> like i said, this wasn't about react, it was about "vanilla"
[23:02:29] <sheetjs> react's relicensing opened a pandora's box
[23:02:39] <pulse> just because you have some ideological and unsubstantiated hatred for vanilla JS, doesn't mean we all do
[23:02:57] <pulse> and i don't even believe this problem would be easier to solve with react or whatever framework
[23:03:07] <pulse> the problem is JS events are implemented in an asinine way
[23:03:22] <pulse> the best the framework can do is cover it up with some sugary syntax
[23:03:28] <pulse> but the problem probably remains
[23:04:36] <ljharb> sheetjs: lol in what way
[23:04:40] <ljharb> sheetjs: especially since it was the second one
[23:05:01] <ljharb> pulse: it's not hatred for vanilla, it's an appreciation for the value of abstractions and the toxicity of NIH
[23:05:13] <pulse> that's ideological
[23:05:14] <ljharb> i'm not sure what JS event problem you're having tho, are you using delegation?
[23:05:18] <pulse> NIH has merit in certain cases
[23:05:21] <ljharb> no it does not.
[23:05:26] <pulse> yeah you're wrong
[23:05:27] <ljharb> and saying "ideological" doesn't mean it's bad.
[23:05:29] *** Quits: momus_ (~m@8.44.59.36) (Ping timeout: 264 seconds)
[23:05:33] <pulse> no, it means it's ideological
[23:05:34] <ljharb> very few things are objective.
[23:05:39] <pulse> it means it's in your head, and has very little to do with real world
[23:05:45] <ljharb> wrong on the latter part.
[23:05:50] <pulse> i personally know companies that do NIH because it's easier for them
[23:05:55] <ljharb> most ideologies have a lot to do with the real world, that's where they come from.
[23:05:57] <pulse> less hassle and cheaper
[23:05:58] <ljharb> they THINK it's easier for them
[23:06:01] <pulse> no, it actually is
[23:06:03] <sheetjs> ljharb: in a world where you don't expect anyone to pull the rug from under you, NIH makes sense
[23:06:04] <ljharb> they're just not properly evaluating the long term cost
[23:06:07] <pulse> and they have people working on risk management
[23:06:12] <ljharb> sheetjs: don't?
[23:06:12] <pulse> people who specialize in risk management
[23:06:25] <ljharb> pulse: that still doesn't mean they're optimizing for the right things
[23:06:34] <ljharb> risk is very different depending on what variables and time period you're optimizing for.
[23:06:49] <pulse> ljharb, again, i agree that NIH is usually a waste of time, but your absolutist statements bore me to death
[23:06:54] <sheetjs> if you aren't expecting the ecosystem to relicense or make massive changes, sure it makes sense to use something else
[23:06:58] <pulse> gonna go back to drinking coffee, have a nice day all
[23:07:07] <ljharb> pulse: perfectly sensible to be absolutely against absolutism :-p
[23:07:15] <pulse> touche ;)
[23:07:23] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 246 seconds)
[23:07:32] <ljharb> sheetjs: right. so if you DO expect the rug to be pulled out from under you, you're saying NIH makes sense
[23:07:37] <ljharb> sheetjs: as opposed to if you DONT expect it?
[23:07:52] *** Quits: daoudr (~daoudr@178.197.212.191) (Remote host closed the connection)
[23:08:00] <sheetjs> err right, it makes sense to build it yourself
[23:09:26] <ljharb> sheetjs: ok but a) react's relicensing *lessened* everyone's anxiety, not increased it, so that's a positive change
[23:09:33] <Joel> I'm clearly terrible at math, how do I get 1.07 into a big int? I'm using it to get 7% of another BigInt
[23:09:42] <sheetjs> there were 2 relicensings
[23:09:44] <ljharb> sheetjs: and b) "if you have an overly paranoid view of the world, X makes sense" is not actually a merit for X
[23:09:56] <ljharb> sheetjs: p sure the first one was before most people cared about react
[23:10:19] <sheetjs> it was a relicensing while facebook owned and operated the project
[23:10:26] <ljharb> Joel: multiply it by BigInt(1e9) first
[23:10:27] <ljharb> sheetjs: so?
[23:10:39] <ljharb> sheetjs: what year was this first relicensing?
[23:10:40] <sheetjs> facebook deserves the benefit of the doubt if they acquired the project that pulled a licensing change, then turned around and fixed it
[23:10:55] <ljharb> sheetjs: they deserve the same benefit of the doubt if they made a mistake and acted to correct it
[23:11:00] <ljharb> sheetjs: making mistakes is not an unpardonable sin
[23:11:29] <sheetjs> BSD+patents was 2014, MIT was 2017
[23:11:33] *** Joins: silly_ (~silly@user/silly)
[23:11:37] <ljharb> right
[23:11:50] <ljharb> and the 2017 one everyone was happy with, even tho it reduced the rights everyone had
[23:11:53] <samsch> The mistake was people using React from FB at all, instead of forking an using a community library 😛
[23:11:55] <ljharb> the 2014 one was before react mattered
[23:12:02] <sheetjs> the difference between "relicensing twice" and "not touching the license" is that "another relicensing" is suddenly a real risk
[23:12:08] <ljharb> it's really not
[23:12:08] <sheetjs> not just with react but with all facebook software
[23:12:12] <ljharb> because it doesn't affect existing versions
[23:12:17] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 246 seconds)
[23:12:25] <sheetjs> right, which is sorta what samsch is suggesting
[23:12:29] <ljharb> and if it was actually a risk wrt future changes, then *the community would fork the MIT one*
[23:12:35] <ljharb> so the risk remains virtually zero
[23:12:38] <ljharb> in any eventuality
[23:12:40] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[23:12:58] <pulse> yeah i'm sure the military uses React
[23:12:59] <Sven_vB> do I understand package.json correctly that if I want to let users choose between MIT and ISC license, the correct "license": field value would be "MIT OR ISC"?
[23:13:01] * pulse rolls eyes
[23:13:05] <samsch> I don't actually think the community would fork React. We'd build either from scratch or off of Inferno or Preact.
[23:13:13] <ljharb> unless you somehow think that everyone in the world using react will either just accept the new license (in which case, you're wrong for not doing so), or, will move to something different (in which case, you could as well)
[23:13:25] <ljharb> pulse: they do, in fact
[23:13:38] <pulse> maybe for front-end for accountants
[23:13:40] <ljharb> pulse: for like, internal websites and stuff. not for military equipment, which i dearly hope isn't running JS
[23:13:45] <pulse> definitely not in mission critical systems
[23:13:50] <pulse> yeah same
[23:13:52] <ljharb> sure, but they're not using vanilla JS there either
[23:13:57] <Joel> ljharb console.log(1 * BigInt(1e9)) complains you can't mix types
[23:13:57] <ljharb> so that's irrelevant to the entire convo
[23:14:00] <pulse> for good reason
[23:14:07] <ljharb> Joel: `1n * BigInt(1e9)`
[23:14:14] <pulse> it's not irrelevant, if you want to see where NIH shines, look at any mission critical software
[23:14:17] <pulse> they're all NIH
[23:14:18] <ljharb> Joel: if you have a number integer than `BigInt(x) * BigInt(1e9)`
[23:14:30] <ljharb> pulse: definitely false
[23:14:32] *** Joins: sam_1 (~sam_1@87.51.251.118)
[23:14:47] <ljharb> pulse: in all the tech companies i've worked at, tons of mission critical software is not built in house
[23:15:00] <ljharb> pulse: arguably life and death things like military or medical may be different. but you're doing promotional content.
[23:15:05] *** Quits: sillyslux__ (~silly@user/silly) (Ping timeout: 246 seconds)
[23:15:18] <pulse> ljharb, i'm giving you a counterexample from real life where NIH is good
[23:15:20] <ljharb> no part of the entire mission of advertising is truly "critical" if you want to get all holistic
[23:15:22] <pulse> in my case it's 200 lines of code
[23:15:30] <pulse> the only problem i had was in like 5 lines of code
[23:15:30] <ljharb> it's not actually ofod
[23:15:31] <ljharb> *good
[23:15:32] <pulse> and i figured it out
[23:15:33] <ljharb> it's just what's done
[23:15:40] <pulse> so why on earth would i tag some framework
[23:15:40] <ljharb> the military's software is largely shit, as is most government's
[23:15:43] <ljharb> as is most hospitals
[23:16:03] <systemfault> lol
[23:16:04] <ljharb> they've chosen whatever they've chosen but the result is that all of them are decades behind where they could be
[23:16:05] <pulse> as is most software, ever ;)
[23:16:18] <pulse> but mission critical stuff tends to have several stages of very rigorous QA
[23:16:25] <pulse> and good luck passing that with goddamn React
[23:16:27] <ljharb> i'm saying in relative terms, military, govt, hospitals, banks have software that is MUCH worse than all other kinds
[23:16:45] <pulse> source: *crickets*
[23:16:45] <ljharb> you can rationalize their choices just fine but that doesn't mean they're good choices.
[23:16:55] <ljharb> pulse: the source is literally anyone who's worked in those industries
[23:17:09] <pulse> so, me?
[23:17:10] <systemfault> The software of the F-35, so far, is a YYYUUUUUGGGEEE success.
[23:17:15] <ljharb> pulse: a friend of mine's company worked with the US govt in 2014. their biggest challenge? getting DC off of floppy disks
[23:17:22] <pulse> lol. yeah well
[23:17:23] <seed0> lol
[23:17:32] <ljharb> pretty confident they never achieved that
[23:17:50] <ljharb> (my friend is now CTO of ontario or something, since trump fired all the "make govt better" efforts)
[23:18:35] <systemfault> In Canada, we spent a billion on a "new pay system" for gov employees.... a relative of mine is still waiting for paychecks from 3 years ago.
[23:18:44] *** Joins: keypusher (keypusher@user/keypusher)
[23:18:48] <pulse> i work(ed) on medical software, not really mission critical but i have some insight
[23:18:48] <systemfault> The system ended up getting killed... love that taxmoney
[23:19:03] <pulse> almost all systems i touched were inhouse software
[23:19:17] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 264 seconds)
[23:19:31] <pulse> super proprietary and they made me sign like 3 NDAs
[23:19:45] <systemfault> lol, because one is not enough :p
[23:19:56] <pulse> for some reason it's not
[23:20:06] <pulse> idk, i'm not a legal expert
[23:20:10] <pulse> but i definitely signed a bunch of them
[23:20:54] <Joel> ljharb console.log((1+7 * .01) * 1n); - Sorry, I must be stupid dense, even this complains about converting to big int.
[23:22:01] <sheetjs> you can't multiply a bigint and a number
[23:22:51] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[23:23:10] <sheetjs> you can't convert 1+7*0.01 to a BigInt because 1 + 7*0.01 is not an integer
[23:26:14] <Joel> console.log(1.07 * 1e9); works, but console.log((1+document.getElementById('interest').value*.01) * 1e9); does not, complaing about type mismatch, makes no sense to me
[23:26:23] <Joel> where by 7 is the value for interest
[23:27:06] <Joel> ah, wrapping interest in parseInt took care of it
[23:27:22] *** Joins: Guest88 (~textual@85.249.161.186)
[23:27:41] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 264 seconds)
[23:29:06] <ljharb> lol NDAs aren't even enforceable
[23:29:18] <ljharb> but everyone still makes people sign one
[23:29:44] <ljharb> Joel: oh right, yeah you need to do the multiplication first
[23:30:01] <ljharb> Joel: `BigInt(x * 1e9)`, then do your bigint math, then `Number(result)/1e9`
[23:33:19] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[23:33:26] *** Joins: i0e (~is0ke3@user/is0ke3)
[23:34:22] *** Quits: keypusher (keypusher@user/keypusher) (Remote host closed the connection)
[23:36:40] *** Joins: keypusher (keypusher@user/keypusher)
[23:36:46] *** Joins: AMPed (~user@ip72-217-90-246.ph.ph.cox.net)
[23:37:09] <Joel> ljharb I think it's clear I just need to find a safe library to do this with, hahaha
[23:37:17] *** Quits: pluri (~pluri@user/pluri) (Quit: Textual IRC Client: www.textualapp.com)
[23:37:26] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[23:38:56] *** Joins: snedd (~snedd@86.14.114.137)
[23:39:02] <ljharb> Joel: definitely always better to use a library :-)
[23:39:09] <Joel> going to give decimal.js a try
[23:43:45] *** Quits: Heraes (~Heraes@user/romarain) (Quit: Leaving)
[23:44:43] <samsch> NDA aren't enforceable? That's not one I've heard.
[23:45:41] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[23:45:41] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[23:45:41] *** Joins: wroathe (~wroathe@user/wroathe)
[23:47:15] *** Quits: schemanic (~schemanic@204.13.45.2) (Quit: Client closed)
[23:52:40] *** Joins: xsperry (~as@user/xsperry)
[23:54:46] <Joel> samsch seems highly off topic for here, but in some states in north america they are not enforceable.
[23:55:03] <Joel> Though, likely, whoever said that, was thinking non compete
[23:55:17] <samsch> I was wonder if maybe he meant non-compete
[23:59:22] <banana_> true
