[00:00:39] <altendky> https://replit.com/@altendky/ZanyFruitfulSystem-3 fwiw
[00:01:28] *** Joins: solo (~solo@c-73-219-147-223.hsd1.ct.comcast.net)
[00:02:31] *** de-facto_ is now known as de-facto
[00:02:47] <mathsboy> altendky: note sure it helps you, but I worked with revoke in celery which might have some insights: https://docs.celeryproject.org/en/latest/userguide/workers.html#commands. There is also a comment here that might be relevant: https://stackoverflow.com/a/29627549
[00:03:05] <mathsboy> *not sure
[00:03:31] *** Quits: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Ping timeout: 256 seconds)
[00:03:44] <altendky> mathsboy: thanks.  taking a look.  not-concurrent.futures/multiprocessing is a thing i'd like.  just not sure i want it at the top of my task list at the moment.  :]
[00:08:06] *** Joins: StyXman (~mdione@82-64-204-19.subs.proxad.net)
[00:09:06] <StyXman> does anyone knows any forum or chat where to discuss parsers? I want to write one for carto-css and I have more questions than answers
[00:09:51] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[00:10:25] *** Joins: Betal (~Betal@user/betal)
[00:11:49] *** Quits: ali1234 (~al@user/ali1234) (Remote host closed the connection)
[00:11:53] <nedbat> StyXman: isn't it the same syntax as CSS, but with a different set of properties, functions, etc?
[00:12:02] *** Joins: ali1234 (~al@user/ali1234)
[00:12:23] <StyXman> yes and no, it has many map/mapnik related stuff
[00:12:48] <StyXman> it's a DSL-CSS :)
[00:13:07] <nedbat> StyXman: can you show one of the "no" parts?
[00:13:56] *** Quits: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[00:14:14] <opashley> Hello
[00:14:43] *** opashley is now known as OliverUK
[00:15:05] <StyXman> nedbat: https://github.com/gravitystorm/openstreetmap-carto/blob/master/style/addressing.mss#L6
[00:15:08] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:15:19] <StyXman> OliverUK: o/
[00:15:44] <OliverUK> I need to create a 'list' of items and have a number against it.  So something like item1:123,item2:234,item3=345
[00:15:44] <StyXman> nedbat: and the next line and L15 too
[00:16:01] <OliverUK> What is the pythony way of doing this please?
[00:16:01] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[00:16:16] <StyXman> OliverUK: sounds like a dict
[00:16:20] <nedbat> StyXman: i see what you mean
[00:16:21] <Togra> yeah that sounds dicty
[00:16:21] <OliverUK> I was gonna go with a variable for each item but I thought there might be a better way
[00:16:31] <StyXman> dicts preserve build order since... 36.?
[00:16:34] <Togra> in theory you could use the index in a list to create the itemX name
[00:16:38] <Togra> but dict would do it too
[00:16:39] <OliverUK> I will look into dicts then
[00:16:49] <Togra> like "item"+str(index)
[00:16:58] <Togra> or even index+1 depending on what you need
[00:17:05] <StyXman> nedbat: why would css be so relevant? do you know a parser for it?
[00:17:42] <OliverUK> Sorry Togra, items I used as an example don't explain it all, the actual items don't have nice unique numbers at the end
[00:18:14] <StyXman> OliverUK: hmm, I think you will have to explain a little better what you need
[00:18:54] <StyXman> doing "variable_1 = 4376; variable_2 = 4932" gets tiring if your list of numbers changes
[00:18:56] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[00:19:03] *** Quits: PublicWifi (~PublicWiF@user/publicwifi) (Quit: WeeChat 3.0)
[00:19:22] *** Joins: Macuser (~Macuser@216.30.159.201)
[00:19:25] *** Joins: PublicWifi (~PublicWiF@user/publicwifi)
[00:19:59] <mat001_> I found myself in a catch 22. I have this import in the original file: from optimizely import logger as _logging. Now I'm referencing this logger or its alias in a file in the same dir level. But for TWO Py versions: 2.7 and 3.8. Two versions treat this original import differently. Py 3 only sees "logger" and Py 2 only picks up the alias "_logging". Any tips how I could fraze imports so it works for both Py versions?   https://bpa.st/VQ7Q
[00:20:27] <StyXman> nedbat: but in general, I want to discuss some things like, should I try to tokenize generic functions and then try to apply typing and argument types while parsing, or could I just tokenize by function?
[00:21:00] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[00:21:10] *** Quits: demophoon (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Quit: water tribe)
[00:21:58] <nedbat> StyXman: i figured there would be a css parser available
[00:22:02] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[00:22:26] <SnoopJ> StyXman, dicts preserving insertion order is a language feature from 3.7 onward. It's a coincidence in 3.6 and should not be relied on in that version
[00:22:32] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:22:36] <StyXman> mat001_: doing "from foo import bar as baz" only renames 'bar' as 'baz' for that file, not rename it for the whole program
[00:22:37] <SnoopJ> CPython* 3.6, even.
[00:22:50] *** Quits: gitesh (uid423739@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:22:55] <StyXman> SnoopJ: right, I was not sure which one is it
[00:23:06] <StyXman> I mostly remember 3.6 for the f-strings :)
[00:23:21] *** Joins: qlixed_again (~qlixed@152.170.36.244)
[00:23:37] <SnoopJ> StyXman, best advice: if you need to rely on the property, restrict your app to 3.7+ and/or use collections.OrderedDict to make the dependence more explicit
[00:24:00] <StyXman> mat001_: so doing 'from optimizely import _logging' shoud not work on a second module for any of 2.7 or 3.x
[00:24:14] *** Quits: qlixed (~qlixed@152.170.36.244) (Ping timeout: 260 seconds)
[00:24:20] <StyXman> SnoopJ: right, but I'm not the one asking for that :)
[00:24:35] * SnoopJ may have read scrollback too quickly
[00:25:54] <StyXman> nedbat: yeah, no, I think css is too much a different beast
[00:26:05] <StyXman> SnoopJ: np
[00:26:19] <nedbat> StyXman: i'm not sure what you meant by "tokenize by function"?
[00:26:28] <StyXman> for instance
[00:26:46] <StyXman> there are all these ways to declare a color
[00:26:47] <StyXman> https://github.com/mapbox/carto/blob/master/docs/language_elements.rst#color
[00:26:48] <Togra> OliverUK: ooh, yeah, this is really sounding like a good case for dictionaries then
[00:27:32] <Togra> if you really need to do something weird, you could make your own class with two properties, and make a list of it
[00:27:40] <Togra> whichever works best for your situation
[00:27:41] <StyXman> one way to do it is to have "rgb ::= 'rgb(' int ',' int ',' int ')'
[00:28:08] *** Joins: CountryNerd_ (~textual@50.105.113.219)
[00:28:23] *** Joins: DeaDSouL_ (uid134377@id-134377.ilkley.irccloud.com)
[00:28:40] *** Quits: Hunterkll (~hunterkll@remote.kisaracorporation.com) (Quit: Leaving)
[00:29:12] *** Quits: mathsboy (~user@2001:1c02:2b38:1400:a899:864a:8dd6:e454) (Ping timeout: 258 seconds)
[00:29:29] <StyXman> or I could parse a generic call function (by stealing the "call" rule from python's grammar :) and then check whether 'rgb' is called with 3 ints between 0 and 255
[00:29:37] <mat001_> StyXman: thx, I'm looking a little deeper, I'll be back...
[00:30:14] <StyXman> mat001_: if I were you, I would import it alwys the same way
[00:30:30] <StyXman> or, in your 2nd module, you could do
[00:30:41] <StyXman> from first_module import _logging
[00:31:49] <StyXman> nedbat: thing is, since you can't declare functions in this language (itś not a programming language; not sure if css is TC or not :), all functions and arguments are fixed
[00:32:06] <mat001_> StyXman: yeah, that's what I do. See my paste link. But "from first_module import _logging" is only visible to Py2, not Py3. That's what bothers me
[00:32:08] <StyXman> so it's tempting to try to build gramar rules for them
[00:32:29] <StyXman> mat001_: ah, maybe because it begins with a '_'
[00:32:42] <mat001_> StyXman: why would _ be a problem?
[00:33:08] <nedbat> StyXman: i think the grammar would be simpler with a generic function call rule
[00:33:39] <StyXman> nedbat: well, I don't care that much if its not simpler, I just wonder if f.i. it would be faster
[00:33:54] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: If dreams are like movies, then memories are films about ghosts.)
[00:34:09] <StyXman> I'm no speed junkie, but in this case I'm playing with this thing only for speed
[00:34:40] <StyXman> the current parser is no longer maintained and it takes 15s+ to compile a bit project into the final XML
[00:34:48] <nedbat> StyXman: idk which way would be faster.
[00:35:08] <StyXman> nedbat: hence my search for a parsing focused forum :)
[00:35:36] <StyXman> this language is used to design maps, and waiting 30s+ for each style change is soul eating
[00:35:43] *** Quits: mortn (~mortn@81-234-122-230-no158.tbcn.telia.com) (Ping timeout: 258 seconds)
[00:36:16] <StyXman> mat001_: hang on there
[00:36:44] *** Joins: daoudr_ (~daoudr@2a02:1205:c681:1650:c864:c5b7:f792:2648)
[00:36:45] *** Joins: resmo_ (~resmo@2a00:d420:9:8a00:626c:f756:d8e4:6c90)
[00:37:01] *** Quits: resmo (~resmo@135-58-239-77.dyn.cable.fcom.ch) (Remote host closed the connection)
[00:37:14] *** Quits: daoudr (~daoudr@2a02:1205:c681:1650:2213:cc7f:a040:3a92) (Read error: Connection reset by peer)
[00:40:25] <StyXman> mat001_: can't find the reference, but __names are private and _names had a (at least usage) meaning too
[00:41:53] <StyXman> mat001_: https://docs.python.org/3/reference/expressions.html#atom-identifiers about __names
[00:41:55] <mat001_> StyXman: maybe Py2 and 3 deal with _xxx differently
[00:42:23] <StyXman> I have the impression _names were usage only, like a protocol between devs, not enforced by the language
[00:42:49] <StyXman> anyways, bed time
[00:42:58] *** Parts: StyXman (~mdione@82-64-204-19.subs.proxad.net) (cheers!)
[00:43:18] *** Quits: grooverman (~grooverma@177.95.12.14) (Read error: Connection reset by peer)
[00:43:49] *** Joins: ChicagoNathan (~ChicagoNa@ec2-54-183-182-4.us-west-1.compute.amazonaws.com)
[00:44:58] <mat001_> thx
[00:47:58] *** Joins: pyeverything (~pyeveryth@goku.bu.edu)
[00:49:07] <pyeverything> could someone please guide me how to fix this PyTorch error? https://bpa.st/JSBA RuntimeError: Expected 4-dimensional input for 4-dimensional weight [384, 512, 1, 1], but got 3-dimensional input of size [1, 2784, 512] instead
[00:49:13] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[00:49:42] *** Quits: jonaskabrink (~jonaskabr@i5E8666AB.versanet.de) (Quit: jonaskabrink)
[00:49:45] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[00:50:13] *** Joins: jonaskabrink (~jonaskabr@i5E8666AB.versanet.de)
[00:50:17] <grym> pyeverything: that often means your batching is wron
[00:50:18] <grym> g
[00:50:29] *** Quits: nomic (~nomic@185.198.243.184) (Quit: Leaving)
[00:51:12] *** Joins: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is)
[00:51:31] <hrob> I've scanning the docs for pydantic and fast-api.  I'm not seeing why this code will not produce doc examples on the FastAPI  Swagger page,
[00:51:32] <hrob> https://bpa.st/J2XQ
[00:52:17] <grym> hrob: why are you inheriting from Dict[str,str]? that looks wrong
[00:52:20] <hrob> I.e.   docs get autogenerated if I use simple Dict[string, string]   in the model,   but will not produce docs if I derive / extend Dict
[00:53:04] *** Quits: Narrat (~omnius@p200300df5f0ec4d206ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[00:53:06] <hrob> grym  yeah it feels wrong, but I'm working from this example at FastAPI that works for strings basic type,   https://pydantic-docs.helpmanual.io/usage/types/#custom-data-types
[00:53:23] <hrob> and I have seen threads that suggest doing that to add validators
[00:53:46] <pyeverything> grym currently I am using a batch size of 1. Also, what do you exactly mean by "your batching is wrong"?
[00:54:10] *** Quits: Akuli (~Akuli@87-94-111-26.bb.dnainternet.fi) (Quit: Leaving)
[00:54:25] <grym> pyeverything: the 4th dimension of the tensor  is usually batch size, especially at the inpur
[00:54:30] *** Joins: computeiro (~Wender@189.37.65.130)
[00:54:32] <grym> input/output layers
[00:55:05] <grym> hrob: wild.  this is not something i've done, i just make basemodel-inheriting classes with attributes as normal
[00:55:40] <pyeverything> grym this is what I am passing to the vision transformer: x.shape:  torch.Size([1, 2784, 512]) and this error is expecting a [384, 512, 1, 1] -- I don't understand why [384, 512, 1, 1] is expected
[00:55:41] <hrob> grym  yes those are very reliable adding attributes... but extending basic type is pretty flawed it seems
[00:55:56] *** Quits: wender (~Wender@189.41.172.8) (Ping timeout: 245 seconds)
[00:56:03] <pyeverything> grym 1 in [1, 2784, 512] refers to my batch size
[00:56:17] <grym> hrob: the idea is usually wrong in python: https://treyhunner.com/2019/04/why-you-shouldnt-inherit-from-list-and-dict-in-python/
[00:56:57] <grym> pyeverything: or channels
[00:57:00] <hrob> yup,  hm... so it would be better that I imitate dict it seems
[00:57:09] <hrob> rather than extend it
[00:57:18] <hrob> I guess that would work, but more overhead
[00:57:26] <grym> pyeverything: i'm used to seeing [batch, channel, width, height], and your isn't that
[00:57:52] <grym> hrob: i suggest imitating dict by `class Thing(BaseModel):` :)
[00:57:53] <hrob> althouth im not extending dict but Dict
[00:57:59] *** Joins: moose (~moose@user/moose)
[00:58:07] <hrob> grym yup will try that now
[00:58:07] <pyeverything> yeah I don't have channel in my code, I am not using RGB or grey images I am using an intermediate representation which is a 2D tensor as a data to feed to vision transformers
[00:58:10] <pyeverything> grym
[00:58:35] <sartan> wow, that's a great writeup grym, i've been down mayn of these rabbit holes myself
[00:58:42] <sartan> 'two way dict' and 'multiple keys to same value'
[00:58:45] <grym> pyeverything: then you'll need to reshape it or redefine the layer
[00:58:57] <grym> sartan: he usually knows what's up :)
[00:59:03] <pyeverything> grym so basically the data I am feeding to vision transformer in each batch is a 2D tensor in this example a 2D tensor of size (2784, 512)
[00:59:04] <sartan> abusing dicts as a linked hash lookup table
[00:59:21] <hrob> grym ,  do you happen to know HOW pydantic / fastapi  manage to produce doc examples
[00:59:36] <hrob> grym  Ive been looking at the classes trying to see what method I can override
[00:59:51] <grym> hrob: educated guess, from __doc__ and field description= and default=
[01:00:04] <pyeverything> grym do you know how to reshape it based on the error I shared with you?
[01:00:57] <grym> pyeverything: no, the number of elements don't match
[01:01:21] *** CountryNerd_ is now known as CountryNerd
[01:01:30] <grym> 2784*512 != 1*1*384*512, so you'll need to address that
[01:02:15] *** Quits: ckdCreations (~ckdCreati@147.55.130.35) (Read error: Connection reset by peer)
[01:03:06] *** Quits: StormDancer (~stormdanc@185.245.86.121) (Remote host closed the connection)
[01:05:30] *** Quits: ubert (~Thunderbi@91.141.37.135.wireless.dyn.drei.com) (Ping timeout: 260 seconds)
[01:07:14] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[01:08:03] *** Joins: ckdCreations (~ckdCreati@147.55.133.140)
[01:10:00] *** Joins: Gerula (~Gerula@user/gerula)
[01:10:38] *** Joins: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[01:13:16] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.3)
[01:13:36] *** CountryNerd is now known as CountryNerd_
[01:13:51] *** Quits: daoudr_ (~daoudr@2a02:1205:c681:1650:c864:c5b7:f792:2648) (Read error: Connection reset by peer)
[01:14:11] *** Joins: daoudr_ (~daoudr@2a02:1205:c681:1650:c864:c5b7:f792:2648)
[01:14:53] *** Quits: daoudr_ (~daoudr@2a02:1205:c681:1650:c864:c5b7:f792:2648) (Client Quit)
[01:16:21] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 258 seconds)
[01:17:11] *** Quits: anonymeowo (~anonymeow@5.34.180.230) (Ping timeout: 245 seconds)
[01:19:56] *** Quits: alkino (~quassel@user/alkino) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:24:10] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 260 seconds)
[01:24:53] *** Quits: parv (~quass@user/parv) (Quit: parv)
[01:27:09] *** Quits: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[01:28:14] *** Quits: Barones (~Barones@2804:48dc:8500:0:5635:5e6d:7349:856) (Quit: Leaving)
[01:28:31] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Quit: This computer has gone to sleep)
[01:29:25] *** Joins: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[01:29:41] *** Joins: zebrag (~chris@user/zebrag)
[01:29:46] *** Quits: stdout (~stdout@216.163.21.11) (Quit: Leaving)
[01:30:41] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[01:31:42] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[01:31:56] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Quit: FinnElija)
[01:32:39] *** Joins: Fiji (~Fiji@user/fiji)
[01:33:04] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[01:33:19] *** Joins: redgloboli (~redglobol@user/redgloboli)
[01:33:30] *** Quits: src (~src@user/src) (Ping timeout: 260 seconds)
[01:33:34] *** Quits: CountryNerd_ (~textual@50.105.113.219) (Quit: Textual IRC Client: www.textualapp.com)
[01:33:56] *** Joins: CountryNerd (~CountryNe@184.53.0.103)
[01:34:11] *** Joins: StormDancer (~stormdanc@185.245.86.121)
[01:34:49] *** Joins: Naan (~naan@user/naan)
[01:35:10] *** Quits: mawk (~mawk@wireguard/contributor/mawk) (Ping timeout: 260 seconds)
[01:35:35] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[01:36:34] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[01:36:42] <pyeverything> grym yeah I agree <grym> 2784*512 != 1*1*384*512, so you'll need to address that
[01:37:05] *** Joins: nomic (~nomic@185.198.243.184)
[01:37:23] <grym> pyeverything: ViT likes to eat images, not your 2-d representation, so you'll have to do some engineering and figure out how to glue things together
[01:38:31] *** Joins: fikran (~fikran@user/fikran)
[01:38:54] *** Quits: StormDancer (~stormdanc@185.245.86.121) (Ping timeout: 260 seconds)
[01:39:46] *** Joins: mawk (~mawk@wireguard/contributor/mawk)
[01:40:25] *** Quits: LenarHoyt (~LenarHoyt@p4ff75e33.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[01:41:37] *** Joins: sedeki (~textual@user/sedeki)
[01:42:15] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 260 seconds)
[01:42:31] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::2612) (Quit: Konversation terminated!)
[01:43:11] *** Quits: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-06-174-93-254-50.dsl.bell.ca) (Remote host closed the connection)
[01:43:28] *** Quits: marcello42 (~mp@p200300dfaf066e01e1016cd4a9290a16.dip0.t-ipconnect.de) (Quit: Konversation terminated!)
[01:43:35] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-06-174-93-254-50.dsl.bell.ca)
[01:43:48] <mawk> test
[01:44:02] *** Quits: CountryNerd (~CountryNe@184.53.0.103) (Quit: Textual IRC Client: www.textualapp.com)
[01:44:41] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[01:45:14] <SnoopJ> ✅
[01:45:52] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[01:46:11] *** Quits: whatsupdoc (~whatsupdo@148.64.18.114) (Quit: Client closed)
[01:46:39] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[01:46:44] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:47:15] *** Joins: y1n (~y1n@77.119.170.22.wireless.dyn.drei.com)
[01:47:31] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[01:48:29] <sgt_chuckles> im using pathlib to recursively find all files that don't match a specific file suffix, but there's a case where a file doesn't have an extension, nor is it a folder, yet it doesn't show up.
[01:48:51] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[01:48:53] <sgt_chuckles> here's my code: https://bpa.st/HGYQ
[01:49:31] <SnoopJ> sgt_chuckles, try globbing for '**/*'` instead
[01:49:49] <SnoopJ> your glob requires a dot somewhere in the name
[01:50:53] *** Quits: koltrast_ (~koltrast@h77-53-57-114.cust.a3fiber.se) (Quit: ZNC - http://znc.in)
[01:50:56] *** Quits: redgloboli (~redglobol@user/redgloboli) (Quit: ...enter the matrix...)
[01:51:06] <sgt_chuckles> aaah, i see. that works
[01:51:09] <sgt_chuckles> omg thanks
[01:51:12] *** Joins: redgloboli (~redglobol@user/redgloboli)
[01:51:15] *** Joins: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se)
[01:52:11] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[01:52:51] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com)
[01:52:51] <SnoopJ> does it make sense?
[01:53:03] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[01:53:57] <evidlo> anyone have recommendations for how to schedule some task to run e.g. once per day in django?
[01:54:09] <meejah> cron
[01:54:13] <grym> evidlo: knowing nothing about django, cron
[01:54:18] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Ping timeout: 260 seconds)
[01:54:54] <evidlo> I'd like it to live inside the django application
[01:54:59] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 264 seconds)
[01:55:41] <Ninpo> you can add command line modules to the project's manage.py
[01:55:48] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[01:56:11] <Ninpo> some people use celery and periodic tasks
[01:56:32] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[01:57:12] *** Quits: Hash (~weechat@protect.yourself.with.hashsecurity.org) (Quit: WeeChat 3.3)
[01:57:30] <Rikem> evidlo: yes, use celery. You can manage the tasks from the django admin once setup correctly
[01:57:52] <evidlo> djcelery, or just celery?
[01:58:15] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[01:58:39] <evidlo> looks like djcelery isn't necessary anymore.  Will this method still work with the development server?
[01:59:10] <Rikem> evidlo: have a look at django-celery-beat
[01:59:18] *** Parts: mcon (~Thunderbi@host-79-55-229-90.retail.telecomitalia.it) ()
[01:59:26] <Rikem> https://django-celery-beat.readthedocs.io/en/latest/
[02:00:09] *** Quits: grys (~quassel@botters/gry) (Quit: .)
[02:01:18] *** Joins: grys (~quassel@botters/gry)
[02:01:29] <evidlo> will I have to invoke celery separately, or can I just run the development server?
[02:01:53] <sgt_chuckles> SnoopJ yeah, it makes sense, the `*.*` makes pathlib look exclusively for files with dot something at the end.
[02:02:38] <sgt_chuckles> instead of the suffix-less, non-folder file i was looking for
[02:02:50] *** Joins: ymas (~quassel@user/ymas)
[02:03:40] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[02:04:44] <Swayze> i would consider that a bug
[02:05:23] *** Quits: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-06-174-93-254-50.dsl.bell.ca) (Read error: Connection reset by peer)
[02:05:42] <Swayze> well in windows dir *.* shows folders and extensionless file
[02:05:48] <Swayze> in debian it doesnt seem to  :)
[02:06:09] *** Quits: nomic (~nomic@185.198.243.184) (Quit: Leaving)
[02:06:22] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 265 seconds)
[02:06:58] <grym> "does . mean 'any character' or 'period' in this not-quite-a-regex" :/
[02:07:13] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Quit: Client closed)
[02:07:41] <Swayze> generally its meant to express a seperator in the file name
[02:07:48] <Swayze> file name.ext
[02:07:53] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[02:08:16] *** Joins: travaldo (~travaldo@159.203.88.148)
[02:08:20] <Swayze> historically? i guess :)
[02:08:26] <grym> well sure, but what i meant is that glob expressions aren't regexes, so it's a literal .
[02:08:33] <Swayze> right
[02:08:36] <grym> but they have wildcards, so i always get confused
[02:08:41] <pyeverything> here's my question with more details if anyone might know PyTorch and could help me https://stackoverflow.com/questions/69653756/challenge-in-replacing-selfattention-with-imagelinearattention-in-vision-transfo
[02:10:15] *** Quits: solo (~solo@c-73-219-147-223.hsd1.ct.comcast.net) (Ping timeout: 260 seconds)
[02:10:24] *** Quits: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 258 seconds)
[02:10:52] *** Joins: Hash (~weechat@protect.yourself.with.hashsecurity.org)
[02:11:51] *** Joins: solo (~solo@c-73-219-147-223.hsd1.ct.comcast.net)
[02:12:55] *** Quits: computeiro (~Wender@189.37.65.130) (Remote host closed the connection)
[02:13:19] *** Quits: sgen (~sgen@2607:fea8:7ce1:c8e0:d8a9:28d8:19ca:f9b9) (Remote host closed the connection)
[02:14:12] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[02:14:22] *** Quits: y1n (~y1n@77.119.170.22.wireless.dyn.drei.com) (Ping timeout: 260 seconds)
[02:14:50] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[02:15:00] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 258 seconds)
[02:15:39] *** Joins: Skyfire (~pyon@user/pyon)
[02:16:14] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[02:16:26] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[02:17:13] <hrob> is there a way to force multiple inheritance to let one class override another?  I.e.  when getting this error "multiple bases have instance lay-out conflict"   in a  class Foo(parent1, parent2)
[02:17:49] <hrob> I know, its a horrible thing to try to circumvent, but I think I may have a good case for it with pydantic
[02:18:36] <hrob> at least its a fun experiment -- probably not stable... but may give me the functionality that I need for now
[02:19:13] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:19:36] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 258 seconds)
[02:21:28] *** Joins: Klinda (~superleag@user/klinda)
[02:23:03] *** Quits: BlessJah (~BlessJah@user/blessjah) (Ping timeout: 258 seconds)
[02:23:38] *** Quits: N3X15 (~nexis@mail.nexisonline.net) (Quit: ZNC - http://znc.in)
[02:24:50] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 260 seconds)
[02:25:29] <grym> hrob: i don't think you can play hob with the mro
[02:25:39] *** Joins: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963)
[02:26:18] *** Joins: N3X15 (~nexis@mail.nexisonline.net)
[02:26:37] *** Quits: twb (~twb@159-196-230-25.9fc4e6.mel.nbn.aussiebb.net) (Remote host closed the connection)
[02:26:50] <hrob> grym yeah its not a good idea - wont go through code review I think lol
[02:27:03] <hrob> grym but still made me curious
[02:27:11] <hrob> sometimes you find solutions by breaking the rules
[02:27:25] *** Quits: emerent (~quassel@p200300cd57485500ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[02:27:32] *** Joins: emerent_ (~quassel@p200300cd5748559aba27ebfffed28a59.dip0.t-ipconnect.de)
[02:27:32] *** emerent_ is now known as emerent
[02:28:41] <grym> hrob: i mean i'm not sure if you _can_
[02:29:10] <hrob> grym  its way too "automagical"  pydantic I feel,  it does not seem to accept overriding Config like "properties"
[02:29:48] *** Joins: BlessJah (~BlessJah@user/blessjah)
[02:29:50] <hrob> I found out that custom "properties" is the thing that I need to be able to have generated with the .schema()
[02:30:29] <hrob> openapi probably the most automagical thing Ive seen so far lol
[02:31:06] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[02:31:24] <grym> hrob: i like watching jaws drop, preferably clients jaws, when i point them to /redoc
[02:31:24] <hrob> * sorry openapi not automagical... pydantic is
[02:31:35] *** Joins: djhankb (~djhankb@208.113.164.68)
[02:31:50] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 260 seconds)
[02:32:26] <hrob> jaws drop as in ... wow this is cool ?
[02:32:36] <hrob> or wow this is crazy
[02:33:18] *** Joins: white_magic (~white_mag@2600:1700:6ae2:a20:3443:d702:41c5:b134)
[02:33:36] <white_magic> Anybody here use poetry? I'm having some difficulties installing a pre-release version of a package. It was a bit more straightforward to install it using pip..
[02:33:51] *** Quits: pizdets (~pizdets@183.182.111.121) (Ping timeout: 245 seconds)
[02:33:52] <hrob> grym in any case... yeah openapi is a good idea.... but autogenerating the openapi without careful intervention Im not sure about
[02:34:32] <hrob> pydantic + fastapi tries to do that...   good place to start... but heck I need to edit this stuff
[02:34:39] *** Joins: tgamblin (~tgamblin@199-167-119-224.ppp.storm.ca)
[02:34:56] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 258 seconds)
[02:35:53] <hrob> white_magic  ive run into strange problems with poetry -- sometimes I need dump out the requirements from poetry and us pip install -r <reqfile.txt>
[02:35:53] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:36:11] <SnoopJ> hrob, you get a pretty good amount of control over the production, but it can be hard to find out how from the docs sometimes.
[02:36:14] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[02:36:25] <hrob> thing is poetry does some dependency checks I think that go beyond pip
[02:36:26] <superboot> Is there a argv type thing in Python? Something like $* is in bash that has an array of all the arguments supplied to the function? Kind of like *args and **kwargs, but for all of them, even the explicitly required ones?
[02:37:08] <SnoopJ> superboot, theres sys.argv, but you shouldn't really be touching it usually. Use argparse or click and build out a 'proper' commandline for general usage
[02:37:09] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[02:37:15] <hrob> those deps checks that fail, are maybe only rarely a problem in my experience
[02:37:15] <white_magic> hrob: I just tried out poetry for the first time today. Kind of disappointing to run into this issue. However, I was wondering if you could clarify something - if I install a dependency, e.g. 'poetry add requests' and then enter a python prompt in that same directory.. i should be able to do 'import requests', right? or am I misunderstanding
[02:37:16] <white_magic> something?
[02:37:18] <SnoopJ> or getopt if you like something bash-flavored
[02:37:37] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:7740:fe8d:fb8b:b914) (Ping timeout: 258 seconds)
[02:37:47] *** Quits: DeaDSouL_ (uid134377@id-134377.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:37:48] <hrob> white_magic  Id rather see the deps problem in person during say unit testing or other.
[02:38:02] <hrob> but some people I work with insist on poetry despite its analness
[02:38:23] <nedbat> superboot: do you mean the arguments to a function being called, or to the command-line program?
[02:38:37] <white_magic> hrob: I think I might prefer to use virtualenv instead.. but I honestly have almost no experience with it. What would you recommend?
[02:38:54] <white_magic> hrob: actually, I've had the best experience with anaconda, personally. Maybe I should just go back to that?
[02:39:02] <SnoopJ> oh jeez, I totally read past the part about "function," oops.
[02:39:28] <hrob> white_magic yes you should be able to ... but try it in a virtual env ideally  not global package
[02:39:38] <superboot> SnoopJ: Not the commandline arguments. I'm looking for the arguments suppled to my function: aka: def func(a, b, c, *args): all-args = getAllArgsMagicFunction(); func(1, 2, 3, 4, 5);
[02:39:44] <SnoopJ> superboot, my mistake, sorry
[02:39:45] <hrob> python3 -m venv  ~/myvenv
[02:39:49] *** Quits: brelod (~me@90.244.150.142) (Quit: leaving)
[02:39:53] <superboot> nedbat: Yes, to a function.
[02:39:54] <hrob> ~/myvent/bin/activate
[02:39:56] <hrob> poetry
[02:40:06] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 245 seconds)
[02:40:06] <superboot> SnoopJ: No problem. :)
[02:40:07] <SnoopJ> superboot, you can certainly build it if you know the names: `allargs = [a, b, c, *args]`
[02:40:21] <SnoopJ> not sure if there's a more reflective way to do it
[02:40:30] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[02:40:31] <nedbat> superboot: the inspect module has tools for this, but i'm not sure it's simple
[02:40:39] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:40:46] <white_magic> hrob: Are you saying I should still use poetry. That's what I'm inferring from your example. I'm ready to ditch it.
[02:40:52] *** Joins: sgn (~sgn@user/sgn)
[02:41:09] <hrob> white_magic ditch it... but depends on your project and your team perhaps
[02:41:14] <superboot> nedbat: Ah, ok. I'll take a look there. Thank you.
[02:41:16] <white_magic> hrob: this is for personal projects
[02:41:22] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[02:41:29] <nedbat> superboot: is this something you need often?
[02:41:36] <hrob> white_magic then it will waste your time.... just write good tests
[02:41:37] <SnoopJ> superboot, sometimes (but not always!) wanting this is a sign that passing an object that represents the "context" of something that's being done.
[02:41:44] <hrob> white_magic and use pip
[02:41:48] <superboot> SnoopJ: That's a good idea too. I'd like to find a solution that doesn't require me to have to updated the function signature in two places, effectively.
[02:42:12] <white_magic> hrob: that's what I used to do.. but everyone says it's bad to use pip plainly.. but it has always worked for me..
[02:42:19] <superboot> nedbat: No, mostly for debuging. And really just a curiosity at this point.
[02:42:24] <white_magic> hrob: what about pyenv? I just got it set up for my current machine (fresh OS install )
[02:42:34] <hrob> white_magic  I havent heard everybody say dont use pip
[02:42:43] <hrob> some people are very anal on deps checking
[02:42:52] <hrob> but I feel its about ducktyping ...
[02:42:55] <nedbat> white_magic: plain pip is not bad
[02:42:58] <hrob> does it actually work and behave
[02:43:01] <SnoopJ> superboot, do you want to see the calls as they happen and e.g. output all of them? when debugging?
[02:43:05] <white_magic> hrob: it's just what I've inferred by googling this subject over the last couple years. People are very strongly opinionated.
[02:43:22] <white_magic> nedbat: PIP IT IS for me.. gonna keep it old school. Nice and simple.
[02:43:42] * hrob agrees with netbad ... check if it works
[02:43:43] <SnoopJ> the author of the inspect module made a great debugging library that uses it heavily and does things like "show me calls of this function and its arguments, along with their names": https://github.com/zestyping/q
[02:43:48] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:44:12] <SnoopJ> you `import q` and then do `@q` above functions you wanna know about and you get nice call tracing in /tmp/q :)
[02:44:18] <hrob> Im going to quote netbad at work tomorrow... dont like poetry so much...
[02:44:18] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[02:44:30] <hrob> netbad being famous and all
[02:44:56] <white_magic> Pardon my ignorance, but what is netbat famous for? (You are all heroes to me in this chan :D)
[02:45:19] <hrob> *netbat-childer I meant
[02:45:28] <superboot> SnoopJ: I came across the idea when reading some code that has a wrapper function around another function with identical arguments, and wondered if there was a way of not having to write: func(x=x, y=y, z=z).
[02:45:46] <hrob> white_magic  pycoverage for example
[02:46:01] <white_magic> I see
[02:46:03] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:46:12] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[02:46:24] <superboot> SnoopJ: Wow. I don't think I need that right now, but that is a good thing to know about. Thanks!
[02:46:32] *** Joins: de-facto (~de-facto@user/de-facto)
[02:46:42] <SnoopJ> it's a great little "just show me the output of this please" tool that Just Works™
[02:49:02] <hrob> white_magic: ned-batchelder https://nedbatchelder.com/blog/202104/coveragepy_and_thirdparty_code.html   famous... :)  but difficult name
[02:49:20] <nedbat> hrob: difficult?
[02:49:35] *** Joins: nomic (~nomic@185.198.243.184)
[02:49:39] <hrob> batchelder is difficult to remember how to spell lol
[02:49:39] <nedbat> hrob: oh: netbat-childer...
[02:49:44] <hrob> yeah lol
[02:49:51] <nedbat> hrob: it's two short words:  batch elder
[02:49:57] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[02:50:02] <hrob> thats a good way to remember it...
[02:50:04] <white_magic> hrob: that looks like a great package to use in an enterprise environment
[02:50:05] <grym> bat childer (en)
[02:50:14] <grym> it's even i18n hinted
[02:51:09] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[02:51:50] *** Joins: mickey8 (~user@user/mickey)
[02:52:10] *** Quits: qlixed_again (~qlixed@152.170.36.244) (Ping timeout: 260 seconds)
[02:52:58] <SnoopJ> net bat children sounds like a Batman/System Shock crossover
[02:53:14] <white_magic> SnoopJ: agreed
[02:53:31] <SnoopJ> Or perhaps Stoker/Gibson
[02:53:37] *** Joins: Jak_o_Shadows (~quassel@user/jak-o-shadows/x-5091859)
[02:54:32] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[02:54:47] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:55:45] <hrob> Im dyslexic , I just see a netbat there
[02:55:45] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[02:55:56] <hrob> despite it being a nedbat
[02:56:36] <nedbat> white_magic: why only in an enterprise environment?
[02:56:37] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[02:56:43] *** Joins: elkclone (~elkclone@user/elkclone)
[02:56:53] <white_magic> nedbat: well, for personal projects (which is how I use Python), it seems like an overkill
[02:57:07] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[02:57:09] <nedbat> white_magic: do you write tests for those projects?
[02:57:13] <sartan> what, coverage/
[02:57:49] <white_magic> nedbat: truthfully..  yes.. I write tests for some of it but.. I don't use any testing framework for it. That might be a form of heresy, I know.
[02:57:55] *** Joins: sarab (~sarab@103.210.200.98)
[02:58:01] <sartan> 95% of my job is writing tests
[02:58:12] <sartan> couldn't imagine it being any other way. firm believer of TDD
[02:58:40] *** Joins: Wulf (~Wulf@user/wulf)
[02:58:40] <hrob> white_magic  dead easy nowadays to support python test frameworks ... just create a function called  test_...something()
[02:58:44] <hrob> and you are good to go
[02:58:57] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[02:58:58] <white_magic> hrob: can you elaborate a bit?
[02:59:14] <SnoopJ> pytest is very nice
[02:59:17] <sartan> one thing i wish i could edge coverage for is telling me whether or not multi-conditionals are also checked. like 'if (foo or bar)', it'd be nice to know if 'bar' was ever seen
[02:59:29] <sartan> not just the code underneath it
[02:59:38] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[02:59:40] <SnoopJ> sartan, write a test that uses each path :)
[02:59:50] *** Quits: grys (~quassel@botters/gry) (Ping timeout: 260 seconds)
[02:59:50] <sartan> ideally coverage would be able to tell me =)
[02:59:58] <nedbat> white_magic: you don't need to use a test framework in order to use coverage
[03:00:10] <white_magic> Got it
[03:00:13] *** Quits: ph88 (~ph88@2a02:8109:9e00:7e5c::3d56) (Quit: Leaving)
[03:00:21] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:00:23] *** Quits: dark279_ (~totallych@2601:18b:8200:c1e:a1e0:77e4:7943:e9a1) (Ping timeout: 264 seconds)
[03:00:26] <white_magic> nedbat: I'll definitely put coverage on my radar
[03:00:51] <nedbat> sartan: Python now can trace individual bytecode operations instead of whole lines, but coverage.py doesn't make any use of it.
[03:00:55] *** Quits: sarab (~sarab@103.210.200.98) (Client Quit)
[03:00:58] <hrob> white_magic   write any function anywhere in your code called "def test_<something>()"   then try running  nose myPackage/  or  py.test myPackage/
[03:01:18] <sartan> I'm not saying I would expect it to work on such a case, but it would help me find more bugs. call it a magic wish list
[03:01:21] <SnoopJ> nedbat, I imagine the penalty is not small?
[03:01:39] <nedbat> SnoopJ: probably. I've literally never tried it.
[03:02:11] <hrob> nedbat  but does coverage not use something internally like pytest?
[03:02:12] <white_magic> hrob: I'll give it a try, thanks
[03:02:13] <sartan> also coverage for template languages, like mako, jinja, string templates, django
[03:02:14] <SnoopJ> I would think even if it's more efficient than line tracing, it's gotta be a few times moreso just to keep pace heh
[03:02:37] <nedbat> sartan: there is a django-coverage-plugin for coverage.py
[03:02:44] <nedbat> sartan: for measuring lines in templates
[03:02:55] <sartan> oh yeah? neat.  It was just one of my examples but what I really need is jinja
[03:03:15] <sartan> i think we had a brief conversation about it in the past
[03:03:16] <nedbat> hrob: coverage doesn't run tests. it has very little to do with test frameworks. you can run any program under coverage.py
[03:03:40] <nedbat> sartan: hmm, we should write a jinja plugin
[03:03:43] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[03:03:52] <hrob> nedbat doh... so I can just run my cli on it :)  lol
[03:03:53] <sartan> it would be immensely valuable for me
[03:04:02] * SnoopJ has used it to explore code paths in research frankenmonsters that fan out widely from a CLI
[03:04:04] <hrob> nedbat makes sense
[03:04:23] <SnoopJ> without fanning out across files/packages, I mean >_>
[03:04:46] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[03:07:50] <hrob> do you guys prefer "Redoc" over "Swagger"?  Looks more serious the interface for redoc
[03:08:17] <SnoopJ> nedbat, I guess that would take advantage of the co_positions information that changed recent-ish-ly?
[03:08:51] <sartan> does redoc also read openapi specs?
[03:08:54] <SnoopJ> hrob, I like /redoc/ better than /doc/ in FastAPI if that's what you're asking about, especially if the end user will be preparing queries with it
[03:09:10] <SnoopJ> sartan, I think they mean the rendering, not the specification-formerly-known-as-Swagger
[03:09:10] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 260 seconds)
[03:09:27] <SnoopJ> i.e. the "Swagger UI"
[03:09:27] <sartan> the source of truth for both, is it still openapi?
[03:09:34] *** Joins: grys (~quassel@botters/gry)
[03:09:37] <sartan> er, the jsonschema openapi stuff
[03:09:40] <SnoopJ> sartan, OpenAPI is the new name for what used to be called Swagger
[03:09:43] <hrob> yeah both take openapi.json def
[03:09:58] <SnoopJ> which is distinct from the 'Swagger UI' which renders specs nicely
[03:10:25] <SnoopJ> and I believe a component of it is the "Swagger Editor" so they've well and truly made a mess of their naming.
[03:10:28] <hrob> Im going to edit the bloody openapi.json I think... before it goes to swagger or whatever
[03:10:35] <hrob> I need control over these docs
[03:10:38] <bloody> hello
[03:10:42] <bloody> is it me you're looking for
[03:10:52] <hrob> oops
[03:10:58] <SnoopJ> hrob, what part of them? What field are you not getting that you want?
[03:11:03] <sartan> SnoopJ: yeah, i'm familiar with openapi/swagger, but not so much redoc. i would have though tthe same payload ideally could be renderable in both
[03:11:05] <SnoopJ> Or what field(s) do you want to populate manually?
[03:11:15] *** Joins: Macuser (~Macuser@216.30.159.201)
[03:12:31] *** Quits: travaldo (~travaldo@159.203.88.148) (Quit: travaldo)
[03:12:42] <SnoopJ> sartan, I would say they're fairly close, but Redoc feels more complete. We're willing to put redoc directly in front of a customer in deployed applications
[03:12:51] <hrob> SnoopJ  I have a pydantic type/model that does what I need in terms of verification and all.. so happy with that ... but I cant add anything that helps generate sensible/useful docs...
[03:13:01] <hrob> we discussed before though
[03:13:04] <SnoopJ> hrob, I can't help you with only the silhouette of the problem
[03:13:05] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[03:13:16] <hrob> just a sec
[03:14:29] <hrob> SnoopJ  this type def does magic for me with rejecting incorrect keys on a dict type:  https://bpa.st/J2XQ
[03:14:46] <hrob> but all automagical docs are dropped in pydantic / fastapi
[03:15:00] <hrob> I just get "{}"  from the docs with this
[03:15:06] <SnoopJ> hrob, right, because Names still isn't a Model, so it still doesn't get all that niceness
[03:15:12] *** Quits: ham5urg (~ham5urg@p200300d1671129009c939152b8edc509.dip0.t-ipconnect.de) (Quit: Leaving)
[03:15:15] <SnoopJ> if you want automagic, you write BaseModel subclasses
[03:15:45] <SnoopJ> if you want to Do It All Yourself, you Do It All Yourself, and that's the bin you've stepped into with your base type for Names
[03:15:47] <hrob> SnoopJ yeah... but get this... pydantic produces "somehow... somewhere"  pretty sensible docs if I just use  Dict[str, str]  without extending it
[03:16:13] <SnoopJ> indeed, because then it's not...a different type
[03:17:00] <hrob> SnoopJ  what bugs me... is that i cant for the love of god find any way to override or enforce docs
[03:17:13] <hrob> except I can override openapi.json output
[03:17:15] <SnoopJ> Pydantic sees Names, checks if it has an interface that lets it query for rich information, finds none, and it shrugs, is I'm guessing what's happening
[03:18:14] *** Joins: djapo (~archangel@user/djapo)
[03:18:26] <SnoopJ> hrob, if you're willing to give up your class structure being directly tied to the output, I suppose editing the stream is okay. It would make me pretty nervous
[03:18:53] *** Quits: daniel2 (daniel@user/daniel2) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[03:19:17] *** Joins: daniel2 (daniel@user/daniel2)
[03:19:44] <hrob> SnoopJ yup... its also making me nervous to imitate a dict - but I better just try
[03:20:08] <SnoopJ> yea, subclassing dict (or something like it) is another pile of foot-gun that is also lurking in this approach
[03:20:12] *** Joins: rajkosto (~rajkosto@93-86-134-26.dynamic.isp.telekom.rs)
[03:20:15] <altendky> was there a time when the gil thread sharing wasn't based on time slices?  i thought i remembered someone commenting it was an op code count at some point or somesuch.  looking at ceval_gil.h it looks like if that were the case it must have been at least 12 years back.  https://github.com/python/cpython/blame/6c32585f677b71eb1206852d24f077f602780c85/Python/ceval_gil.h#L54
[03:20:33] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[03:21:41] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[03:22:07] *** Joins: travaldo (~travaldo@159.203.88.148)
[03:22:25] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[03:22:45] *** Joins: CombatVet (~c4@user/combatvet)
[03:23:25] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[03:25:06] *** Quits: mat001_ (~mat001@213.143.69.121) (Ping timeout: 245 seconds)
[03:26:41] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[03:26:57] *** Quits: white_magic (~white_mag@2600:1700:6ae2:a20:3443:d702:41c5:b134) (Ping timeout: 256 seconds)
[03:29:03] *** Joins: redrum88 (~redrum88@user/redrum88)
[03:30:29] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:30:32] *** Joins: mat001 (~mat001@213.143.69.121)
[03:30:40] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[03:31:06] *** Quits: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Quit: Client closed)
[03:31:11] *** Joins: djhankb (~djhankb@208.113.164.68)
[03:31:31] *** Quits: comrumino (~comrumino@li87-103.members.linode.com) (Quit: byeee)
[03:31:38] <SnoopJ> dangit, I *just* got done with something for hrob to look at :)
[03:31:46] *** Joins: comrumino (~comrumino@li87-103.members.linode.com)
[03:32:32] <SnoopJ> https://bpa.st/VAIQ
[03:33:03] *** Joins: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net)
[03:33:54] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[03:34:13] *** Joins: mickey8 (~user@user/mickey)
[03:34:52] * altendky looks on hrob's behalf
[03:35:06] *** Quits: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 260 seconds)
[03:35:39] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[03:36:53] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[03:37:04] *** Joins: Atque (~Atque@user/atque)
[03:37:04] <altendky> is example a specific thing?  or just arbitrary metadata you can add?
[03:37:45] <SnoopJ> altendky, Field takes **extra, but `example` is one that the docs generators respect IIRC (it might be `examples`)
[03:38:02] <SnoopJ> but yea, it lets you output pretty arbitrary schema data associated with a Field
[03:39:08] *** Quits: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[03:39:30] *** Joins: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net)
[03:40:07] * SnoopJ checks own fastapi $project
[03:40:15] <SnoopJ> phew, I got it right, example=
[03:40:41] <SnoopJ> I could have also put in a description="Internationalization names for this occupation" or something
[03:41:48] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[03:43:21] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[03:44:39] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[03:45:24] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[03:45:55] *** Quits: mcglk (~mcglk@131.191.49.120) (Read error: Connection reset by peer)
[03:45:55] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[03:45:58] *** Joins: mcglk_ (~mcglk@131.191.49.120)
[03:47:29] *** Joins: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963)
[03:47:40] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 260 seconds)
[03:47:52] *** Joins: fikran (~fikran@user/fikran)
[03:48:23] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 264 seconds)
[03:49:42] *** Joins: ircuser-1 (~Johnny@71.63.241.168)
[03:50:09] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:50:26] *** Quits: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[03:51:30] *** Joins: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is)
[03:53:00] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[03:53:22] *** Joins: mickey8 (~user@user/mickey)
[03:53:24] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[03:54:14] *** Quits: p-i-_ (~Ohmu@223.206.147.206) (Remote host closed the connection)
[03:54:49] *** Joins: p-i- (~Ohmu@223.206.147.206)
[03:55:05] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[03:55:26] *** Joins: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net)
[03:57:16] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:9815:b867:1c3c:f13d) (Quit: Leaving)
[03:57:53] *** Quits: djapo (~archangel@user/djapo) (Read error: Connection reset by peer)
[03:58:08] *** Joins: semeion (~semeion@user/semeion)
[03:59:15] <aphysically> I learned about class decorators when fixing the rich typing of them (this was definitely the wrong way to learn about class decorators)
[04:03:34] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[04:05:31] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 245 seconds)
[04:06:01] *** Joins: BillyZane2 (~BillyZane@91.196.220.174)
[04:06:03] *** Joins: Praise (~Fat@user/praise)
[04:07:13] *** Quits: BillyZane (~BillyZane@91.196.220.174) (Remote host closed the connection)
[04:08:57] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-ad4d-399b-cc09-0575.res6.spectrum.com) (Quit: Leaving.)
[04:12:40] <jmiehe>  Hi, click CLI experts here? https://stackoverflow.com/questions/69653239
[04:14:22] *** Joins: chenqisu12 (~xirndc@183.217.203.91)
[04:16:38] <SnoopJ> jmiehe, if the args are exactly the same, sometimes I do `ARG = click.argument(...); @click.command() @ARG def cmd1(arg): ...`
[04:17:14] *** Quits: tgamblin (~tgamblin@199-167-119-224.ppp.storm.ca) (Quit: Leaving)
[04:17:23] <SnoopJ> but it seems like you might want cmd1 cmd2 to be subcommands?
[04:17:52] <jmiehe> SnoopJ: yes, I already load them with a custom multicommand in the actual code
[04:18:06] * SnoopJ didn't realize that the code in the question was not "actual"
[04:18:23] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[04:18:55] *** Quits: kstolen (~kStolen@2a00:fa40:2aaa:1::539:82de) (Quit: WeeChat 1.6)
[04:19:14] <jmiehe> mmh. I mocked up a MWE for the question, it's still actual code. smartass :D
[04:19:32] <SnoopJ> jmiehe, I can only answer questions about code I can see.
[04:19:34] <jmiehe> SnoopJ: `ARG = ...` looks not too convoluted though
[04:19:56] <SnoopJ> yea, it's useful when you're just reusing the Argument object
[04:20:29] <altendky> i often end up with `def create_this_option()` and `@create_this_option(x=3, y='oops')` when i need to have variable defaults or such.
[04:20:36] <SnoopJ> If you like APIs driven by type annotations, there's Typer, which lets you express the same as `def cmd1(arg: MyArgument): ...; def cmd2(arg: MyArgument): ...;`
[04:21:13] <SnoopJ> err, with the boilerplate decorators that you get with either framework, of course. The args themselves are injected by annotation, though
[04:21:26] <jmiehe> SnoopJ: I mostly like the idea because it still uses standard click syntax unlike my stuff that relies on the internal params list
[04:21:29] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[04:21:56] <SnoopJ> yea, a big part of click's appeal is not having to care about the guts
[04:22:33] <SnoopJ> there are definitely cases where you do want to care about the guts, altendky's solution of a custom option factory is kind of a middle-ground between the two
[04:23:00] <p-i-> For A = np.zeros((2,2), dtype=np.uint8) is there a way to do `A = 255-A` in-place?
[04:23:32] <jmiehe> simply assigning an option to a variable or from a factory is just too easy to come up with sometimes
[04:23:42] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[04:23:53] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[04:24:00] <SnoopJ> p-i-, `A = np.full(fill_value=255, shape=(2, 2), dtype=np.uint8)` ?
[04:24:14] <jmiehe> altendky: SnoopJ: hold up, can I get multiple args/opts into a single decorator variable/factory?
[04:24:25] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 260 seconds)
[04:24:25] <altendky> you can even make lists to group them if needed and have a `@add_group(mylist)` decorator
[04:25:04] <altendky> i wonder where it was i coded that...
[04:25:15] <altendky> but, pretty straightforward.  just apply in reverse if you care about order
[04:26:29] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:26:42] *** Quits: Throgkt (~Throgkt@user/throgkt) (Quit:  )
[04:27:21] *** Joins: djapo (~archangel@user/djapo)
[04:27:47] <jmiehe> altendky: I like using decorators, but I haven't yet wrapped my head around creating them. Can you help or recommend a good resource?
[04:28:10] <hrob> SnoopJ  to follow up, I just realized that with pydantic it likes better that I defind a class Lang(str)  then compose it into Dict[Lang, str]
[04:28:12] <altendky> jmiehe: i'm out of touch with resources, but i'll write up an example for this
[04:28:26] *** Quits: The_Jag_ (~The_Jag@host-87-21-77-193.retail.telecomitalia.it) (Read error: Connection reset by peer)
[04:28:36] <hrob> silly me
[04:29:02] <SnoopJ> hrob, https://bpa.st/VAIQ
[04:29:10] *** Quits: flokuehn (~flokuehn@i577BC677.versanet.de) (Ping timeout: 258 seconds)
[04:29:12] <SnoopJ> I think that's what I ended up with
[04:29:24] <SnoopJ> naturally, I was done about 15 seconds before your client quit :)
[04:29:43] *** Joins: The_Jag (~The_Jag@host-87-21-77-193.retail.telecomitalia.it)
[04:29:44] *** Quits: deltab (~deltab@user/deltab) (Ping timeout: 246 seconds)
[04:29:45] <p-i-> SnoopJ: Sorry, bad example. A's contents are not known. I just used zeros as placeholder.
[04:29:54] <hrob> SnoopJ lol fantastic... thanks for this!
[04:30:00] *** Quits: DragoonAethis (~quassel@2a01:4f8:c2c:3359::1) (Quit: hej-hej!)
[04:30:18] <hrob> SnoopJ  Im using the web client ... it times out it seems when Im coding
[04:30:30] <hrob> SnoopJ what are you using?
[04:30:32] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[04:30:33] *** Joins: DragoonAethis (~quassel@2a01:4f8:c2c:3359::1)
[04:30:41] <SnoopJ> hrob, for what, IRC?
[04:31:00] *** Joins: flokuehn (~flokuehn@muedsl-82-207-236-243.citykom.de)
[04:31:05] <hrob> yeah this new libera chat is a web client... I used to use Hexchat
[04:31:08] *** Quits: The_Jag (~The_Jag@host-87-21-77-193.retail.telecomitalia.it) (Read error: Connection reset by peer)
[04:31:08] <hrob> for freenode
[04:31:11] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[04:31:15] <grym> hrob: hexchat will work fine
[04:31:17] <SnoopJ> I use weechat, used to use HexChat a lot
[04:31:25] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[04:31:43] *** Joins: djhankb (~djhankb@208.113.164.68)
[04:31:56] <hrob> SnoopJ yeah the webclient times out... got to use an irc client again config hexchat, been to lazy lately
[04:31:58] *** Joins: The_Jag (~The_Jag@host-87-21-77-193.retail.telecomitalia.it)
[04:32:43] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[04:32:45] <altendky> jmiehe: here's one option https://replit.com/@altendky/BurdensomeUnitedAstronomy-1#main.py
[04:32:52] <hrob> webclients are not allowed to work in the background probably the reason
[04:33:22] <altendky> jmiehe: i feel like the nesting decorators are kind of "tricky", though they are the norm.
[04:33:32] <altendky> for taking options
[04:33:38] <altendky> i'll make another form for that
[04:33:56] <SnoopJ> I would probably prefer to spell it `@apply_options(a, b)` where those are click.option() results, but I was thinking very much the same sort
[04:34:31] <altendky> the point was to apply a group so you want to define the group elsewhere
[04:34:42] <altendky> but it could be `@apply_options(*options)`
[04:34:42] *** Joins: vlm (~vlm@user/vlm)
[04:35:00] <altendky> if you are going to list them out, may as well just `@` each one i'd think
[04:35:08] *** Joins: deltab (~deltab@user/deltab)
[04:35:10] <jmiehe> altendky: that looks surprisingly much like what I expected.
[04:35:42] <SnoopJ> altendky, yea, I think that's why I've never really written this. Yours is more useful when a group is truly what one wants
[04:35:44] <hrob> SnoopJ your solution is excellent with the Field applied, thank you !!! .... this has been a dangerous obsession for me for the last 24h.
[04:35:53] <SnoopJ> hrob, does it make sense?
[04:36:05] *** Quits: LyndsySimon (sid34452@id-34452.lymington.irccloud.com) (Ping timeout: 260 seconds)
[04:36:15] <altendky> jmiehe: here's the way that isn't based on closures and nesting functions.  https://replit.com/@altendky/BurdensomeUnitedAstronomy-2
[04:36:27] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Ping timeout: 258 seconds)
[04:36:40] *** Quits: cyberpear (uid364019@fedora/cyberpear) (Ping timeout: 260 seconds)
[04:37:09] <hrob> Snoop the json output makes sense, gonna plug it into this swagger shi** now
[04:37:21] <hrob> *SnoopJ
[04:37:35] *** Quits: fannagoganna (uid110488@id-110488.tinside.irccloud.com) (Ping timeout: 264 seconds)
[04:37:48] <SnoopJ> yea I didn't bother to stand it up and look at it in redoc, so double-check, but this is how I've done it in previous projects so I'm *pretty* sure I got it right :)
[04:37:50] *** Quits: Memory (sid459764@user/memory) (Ping timeout: 260 seconds)
[04:38:07] <SnoopJ> (but the things I'm *pretty* sure about often turn out to be my undoing...)
[04:38:45] *** Quits: jonaskabrink (~jonaskabr@i5E8666AB.versanet.de) (Ping timeout: 258 seconds)
[04:38:54] *** Joins: adiKt (uid472628@tinside.irccloud.com)
[04:38:58] <hrob> SnoopJ  I was just getting {} before... now I get some bloody text about the arguments, checking your solution with Field now
[04:39:10] <bloody> hello
[04:39:12] <hrob> aw man... the bloody robot will come again
[04:39:13] <bloody> is it me you're looking for
[04:39:16] *** Quits: liam (sid7517@helmsley.irccloud.com) (Ping timeout: 245 seconds)
[04:39:19] *** Joins: fannagoganna (uid110488@tinside.irccloud.com)
[04:39:25] *** Quits: fury (uid193779@helmsley.irccloud.com) (Ping timeout: 252 seconds)
[04:39:35] *** Joins: StormDancer (~stormdanc@185.245.86.121)
[04:39:39] <hrob> is there a robot for every curse word?
[04:40:03] <hrob> I think programmers should be allowed to curse
[04:40:04] *** Quits: kmikita (uid461814@helmsley.irccloud.com) (Ping timeout: 265 seconds)
[04:40:21] <bloody> im not a robot you just keep pinging me
[04:40:40] <SnoopJ> I think your client is the one pinging you, but the point is made
[04:41:00] <bloody> unless we are all robots
[04:41:01] <SnoopJ> hrob, `description=""` is also useful to include in Field definitions, i.e. `description="Translation table for this occupation."`
[04:41:12] <bloody> and this is a simulation
[04:41:12] <jmiehe> altendky: L26 `options` supposed to be `self.options` right?
[04:41:14] <SnoopJ> erm, but probably without the punctuation
[04:41:18] <bloody> what is consciousness
[04:41:22] <bloody> is it real
[04:41:29] <bloody> i suppose we shall never know
[04:41:31] <bloody> what is real
[04:41:37] <SnoopJ> is it #python-offtopic?
[04:41:38] <bloody> and what isnt
[04:42:02] *** Joins: kmikita (uid461814@id-461814.helmsley.irccloud.com)
[04:42:10] *** Parts: bloody (~bloody@user/bloody) (WeeChat 2.8)
[04:42:10] *** Joins: Memory (sid459764@user/memory)
[04:42:13] *** Joins: liam (sid7517@helmsley.irccloud.com)
[04:42:15] *** Joins: fury (uid193779@helmsley.irccloud.com)
[04:42:29] <hrob> Im confused... why is "bloo***y"  texting on the chat... do you see him?  But this is prob. why my colleagues call me granpa
[04:42:35] *** Joins: LyndsySimon (sid34452@id-34452.lymington.irccloud.com)
[04:42:47] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Quit: WeeChat 3.3)
[04:42:52] *** Joins: cyberpear (uid364019@fedora/cyberpear)
[04:43:13] <hrob> never mind... figure out that later, going to check this solution
[04:44:05] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[04:44:15] <SnoopJ> hrob, when you say a user's nickname, most clients alert ("highlight" the message) the user. Some people choose words that will likely appear when someone is not summoning them, and some among those respond when this happens
[04:44:34] <altendky> jmiehe: uh, yeah.
[04:44:45] <altendky> good ol' shadowing
[04:45:36] <jmiehe> altendky: what would be a suitable type hint for the `options` member? And, what type is `f`?
[04:45:39] <altendky> jmiehe: there's also the decorator library for writing decorators.  https://github.com/micheles/decorator .  can't say i see it as "decorators for humans"...  it's not the easiest to warp your head around.  but...
[04:46:04] *** Quits: redrum88 (~redrum88@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[04:46:30] <altendky> jmiehe: i guess `click.Option` and i guess `f` could start as `Callable`.  not sure how much more detailed to get there
[04:46:43] <hrob> SnoopJ  ah, this guys autoresponse is pretty chatty lol
[04:47:22] <hrob> talking to me about philosophy and more
[04:47:23] <SnoopJ> hrob, I don't think it is automatic.
[04:47:39] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com)
[04:48:07] <SnoopJ> Some people do respond to it every time, though
[04:49:45] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[04:50:17] *** Quits: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053) (Quit: WeeChat 3.3)
[04:51:53] *** Quits: Jong (~Jong@2620:10d:c090:400::5:fbf2) (Ping timeout: 268 seconds)
[04:52:18] *** Joins: byzandula (~byzandula@beerbq.net)
[04:52:30] *** Joins: y1n (~y1n@77.119.161.1.wireless.dyn.drei.com)
[04:52:38] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-9587-7f48-310e-0534.res6.spectrum.com) (Read error: Connection reset by peer)
[04:53:02] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 260 seconds)
[04:53:27] *** Joins: emf_ (~emf@2620:10d:c090:400::5:70ff)
[04:55:20] *** Quits: StormDancer (~stormdanc@185.245.86.121) (Remote host closed the connection)
[04:55:38] <jmiehe> altendky: Found it. https://replit.com/@ldericher/multidecorator
[04:56:46] *** Quits: emf (~emf@2620:10d:c090:400::5:7558) (Ping timeout: 245 seconds)
[04:57:09] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 258 seconds)
[04:57:16] *** Joins: brabrax_ (~brabrax@user/brabrax)
[04:57:22] <altendky> jmiehe: hey, attrs.  i left it off to avoid distracting you :]
[04:57:40] *** brabrax_ is now known as brabrax
[04:58:05] <jmiehe> altendky: whenever I see an __init__ I now think attrs :D
[04:58:41] * altendky gives a thums up
[04:58:50] * altendky scrounges around for a `b`
[04:59:30] <jmiehe> altendky: btw, the "FC" type is either a callable, or a click.Command
[04:59:43] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[05:00:02] *** Quits: deltab (~deltab@user/deltab) (Ping timeout: 260 seconds)
[05:00:24] <jmiehe> not sure what's the difference between a TypeVar and a typing.Union though
[05:01:25] <altendky> jmiehe: they are kind of entirely different i think https://docs.python.org/3/library/typing.html#typing.TypeVar
[05:01:30] <altendky> union is just 'this or that'
[05:02:01] <altendky> typevar is 'here is an abstract thing that relates a type in this place with a type in that place'  (parameter relates to return value for example)
[05:03:01] <altendky> or a generic class and a method return value or attribute contents
[05:03:07] <jmiehe> ok fair enough, so a typevar is just cleaner in some cases
[05:03:16] <altendky> mm...  different
[05:03:18] <jmiehe> aka stricter
[05:03:30] <altendky> i mean you could just throw unions in lots of places but it expresses an entirely different thing in my mind
[05:04:38] <altendky> like `def f(x: Union[int, str]) -> List[Union[int, str]]:` seems pretty different from `def f(x: T) -> List[T]:`
[05:04:44] <SnoopJ> jmiehe, a TypeVar represents a type, perhaps with constraints on its place in a hierarchy and other sorts of things. A Union[T, U, ...] is "T or U or ..."
[05:05:09] <jmiehe> got it
[05:05:13] <SnoopJ> hence the new abbreviated spelling of Union[T, U] for builtin types: `T | U`
[05:05:19] <jmiehe> thx :)
[05:05:37] <SnoopJ> TypeVar is often useful because you know you will have some kind of type, but you don't know more than a little about it :)
[05:06:34] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 260 seconds)
[05:07:07] *** Joins: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053)
[05:07:15] <SnoopJ> `def f(x: T) -> List[T]` is a good example. Whatever type you get in, you get out list-of-that
[05:07:17] *** Joins: Jong (~Jong@2620:10d:c090:400::5:fbf2)
[05:07:27] <jmiehe> That's why I like python. Start off with a simple `print("hello world")`, feel like you're no more than shellscripting, but there's all these awesome features to it.
[05:08:50] <jmiehe> … and python lets your mind gradually unlock them, instead of "oh, you didn't know about that one specific language quirk? well then nothing works here"
[05:10:28] <jmiehe> like inheriting the Command class to add something surely *works*, but applying multiple decorators is just so much more elegant
[05:11:05] <SnoopJ> it's definitely a fun playground of a language, and it doesn't hurt that the community has program legibility as a sort of de-facto motivation
[05:11:50] *** Joins: yossarian (~yossarian@user/yossarian)
[05:11:59] <SnoopJ> to be clear: those annotations don't change the meaning of the function, but a static analyzer can check them
[05:12:57] <SnoopJ> but even if you don't use one they can be nice to indicate what you meant/assumed about a function
[05:13:34] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 260 seconds)
[05:13:52] *** Joins: StormDancer (~stormdanc@185.245.86.122)
[05:14:01] *** Joins: phao (~phao@2804:d45:8e7a:de00:2105:76d8:24c8:cd48)
[05:14:12] <phao> Hi. Can I overload stuff like log,exp,sin, ... for my datatype?
[05:15:07] <SnoopJ> phao, you can't "overload" anything in Python, but you could write your own versions of those functions that know how to do what you mean for your custom type
[05:15:09] *** Joins: jonthesnow (~xizhendu@240e:404:8610:62b2:dadc::30c0)
[05:15:24] <SnoopJ> (and maybe fall back on the versions in `math` for other types)
[05:16:26] *** Joins: frost (~frost@59.71.244.189)
[05:16:30] <phao> Ok. Thank you.
[05:16:40] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:18:22] <hrob> SnoopJ  you are a genius   https://pasteall.org/pic/3005560a62524a94a1e32f26163822bd
[05:18:40] *** Quits: StormDancer (~stormdanc@185.245.86.122) (Ping timeout: 260 seconds)
[05:18:53] <hrob> https://pasteall.org/pic/cdec35a948f846dd9e41dca1cc3a2ed0
[05:19:27] *** Quits: phao (~phao@2804:d45:8e7a:de00:2105:76d8:24c8:cd48) (Quit: Leaving)
[05:19:35] <SnoopJ> hrob, I assure you I'm not, but I'm glad it worked :)
[05:20:29] *** Quits: zaquest (~notzaques@5.128.210.178) (Remote host closed the connection)
[05:20:36] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[05:21:51] *** Joins: mickey8 (~user@user/mickey)
[05:22:12] <hrob> SnoopJ then you are average, and I am a confused old granpa ... lol... but this was not so clear from the docs in my experience
[05:22:22] *** Quits: MercilessDeth (~brad@136.49.61.2) (Quit: Konversation terminated!)
[05:22:38] <aphysically> I should really try enabling optimizations in my python build
[05:22:52] <hrob> python build?
[05:23:21] <aphysically> as in build of cpython
[05:23:52] *** Joins: zaquest (~notzaques@5.128.210.178)
[05:24:23] <nedbat> aphysically: why should you?
[05:24:55] <aphysically> to match upstream, and because portage is slow as hell so the extra 15% or whatever would be nice for something I'm running all the time
[05:24:59] *** Joins: sedeki (~textual@user/sedeki)
[05:25:24] <hrob> aphysically  I was looking into c-side compilations , found this thing called nuitka https://nuitka.net/
[05:25:34] <nedbat> aphysically: you might try pypy
[05:26:11] <aphysically> that's probably a disaster, I'd be happy just getting my system interpreter up to speed with most linux distributions
[05:26:19] <aphysically> that'd*
[05:26:55] *** Joins: The_Jag_ (~The_Jag@host-82-55-23-104.retail.telecomitalia.it)
[05:27:09] <hrob> nuitka actually worked for me... allowed me to blend packages / modules with PYTHONPATH pure python modules
[05:27:31] *** Lando-SpacePimp is now known as hoglahoo
[05:27:44] <hrob> however I didnt get much speedup in my experiments... probably because I use numpy a lot for loops
[05:28:01] *** hoglahoo is now known as Guest2320
[05:28:11] *** Guest2320 is now known as Lando-SpacePimp
[05:28:18] <hrob> I want to take time to try it on python loops... then I think it will shine
[05:28:24] *** Joins: deltab (~deltab@user/deltab)
[05:29:25] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[05:29:45] *** Quits: The_Jag (~The_Jag@host-87-21-77-193.retail.telecomitalia.it) (Ping timeout: 260 seconds)
[05:30:32] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[05:31:04] *** Joins: djhankb (~djhankb@208.113.164.68)
[05:31:53] <hrob> aphysically  Im wondering how much there is to be gained with c-side compilation if most data loops can be handled by numpy -- which is btw already more optimized with BLAS binding than I could write easily on the C side myself.
[05:32:23] <aphysically> hrob: to be clear I'm talking about the compilation of the CPython interpreter and not code
[05:33:38] <hrob> aphysically lol sorry no you were clear, I just read cython not cpython
[05:33:50] *** Quits: deltab (~deltab@user/deltab) (Ping timeout: 260 seconds)
[05:34:12] <hrob> me being dyslexic and thinking about compiling python code
[05:35:28] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[05:36:25] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[05:37:21] <jmiehe> altendky: behold, the actual code: https://github.com/ldericher/kiwi-scp/blob/feature/next/kiwi_scp/commands/cmd_show.py … is currently a stub :D
[05:37:49] <aphysically> actually I'm going to see if I can push to get PGO across the finish line for being enabled in Gentoo as a USE flag or something
[05:38:21] *** Quits: rany_ (~rany@user/rany) (Ping timeout: 268 seconds)
[05:40:04] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[05:41:43] <hrob> aphysically  now I wonder, do you know?, is there a significant speed difference of CPython between builds on say debian package system and say the python download site or other?
[05:42:26] <aphysically> does the python download site even provide debian packaged builds? anyway your dist build will almost certainly be ~the fastest you can get
[05:42:43] <aphysically> Gentoo is just a really weird outlier because we disable all the optimizations all the other dists do (or uh, don't enable them)
[05:43:15] <hrob> aphysically nah it seems to provide a static build in gzip or other for linux and more.
[05:43:25] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[05:43:43] <hrob> but I noticed some strange slowdowns when delivering code to windows users, especially with numpy stuff
[05:44:09] <hrob> probably more about lack of Blas support or other in numpy on windows
[05:44:17] <hrob> but still I wonder
[05:44:23] <aphysically> numpy has a lot of linear algebra backends it supports
[05:44:55] <Roey> python.write_my_report_for_me(that_one) # kthanx
[05:45:05] *** Joins: MercilessDeth (~brad@136.49.61.2)
[05:45:37] *** Quits: adiKt (uid472628@tinside.irccloud.com) (Quit: Connection closed for inactivity)
[05:49:16] *** Quits: subopt (~subopt@2603-8081-2302-459a-556b-93a8-c732-d8f8.res6.spectrum.com) (Ping timeout: 245 seconds)
[05:49:17] <hrob> aphysically  is gentoo linux avoiding compiler optimizations for a reason?   long time since I used gcc but I remember how --fast-math was a fun flag
[05:49:35] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:50:05] <aphysically> it's just PGO stuff being avoided here, which just happens to be a bigger speedup than normal for python
[05:50:09] *** Quits: jrjsmrtn (~jrjsmrtn@ip-83-134-174-201.dsl.scarlet.be) (Ping timeout: 265 seconds)
[05:50:18] <aphysically> well and LTO I guess, but that's not normally very significant except in edge cases
[05:50:55] *** Joins: jrjsmrtn (~jrjsmrtn@ip-193-121-2-145.dsl.scarlet.be)
[05:50:55] <aphysically> I think just nobody has stepped up to maintain the PGO stuff, and maybe there's some politics about the "correct" way to PGO or something
[05:51:03] <aphysically> there was some huge internal thread about it and I gave up reading it
[05:51:20] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[05:52:55] <hrob> hm yeah PGO is a nother level over the standard one-run compilation options.
[05:53:40] <hrob> does anyone use PGO in the distros?
[05:53:55] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:54:09] <aphysically> I would pretty highly surprised if there was anybody not using it
[05:54:16] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 258 seconds)
[05:54:36] <aphysically> most distributions are even doing LTO for all their packages these days (even when upstream doesn't)
[05:54:44] <aphysically> well, maybe not *most*, but a few big ones are
[05:55:01] <hrob> wow... Im glad to hear
[05:55:14] <hrob> but does it fit my profile :p
[05:55:22] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[05:55:25] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[05:56:26] <altendky> there was some third party timeit alternative that was well liked...  simple name.  no clue what it was.  maybe you recall?
[05:56:59] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:57:12] *** Joins: fikran (~fikran@user/fikran)
[05:57:48] <hrob> im far from a compilation expert... call me zero... but I used to use -O3 and --fast-math lol
[05:58:15] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.3)
[05:58:16] <hrob> Im just wondering if I can run my code faster on different builds from what you are suggesting
[05:58:22] *** Quits: rundown (~eb0t@90.199.166.206) (Ping timeout: 265 seconds)
[05:59:20] <hrob> I recall --fast-math was dangerous  or approximate math ops...  and never used in delivered builds
[05:59:29] <hrob> but worked good if I tested it.
[06:00:11] *** Joins: rundown (~eb0t@90.199.165.149)
[06:00:19] *** Joins: deltab (~deltab@user/deltab)
[06:02:30] <hrob> fast math was some feature to diable  intel x86  math and IEEE float compliance checking... saving a lot of CPU ticks
[06:02:50] <hrob> you added that flag on compilation and your code ran 2-3x faster
[06:03:01] <hrob> if it was churning numbers
[06:03:04] *** Quits: shawwwn (uid6132@helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[06:03:12] <SnoopJ> aphysically, is there not a portage recipe (whatever the term is) that does a build with PGO turned on?
[06:03:17] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[06:03:44] *** Joins: horseface (~horseface@user/horseface)
[06:03:47] <aphysically> nope! that's why I mentioned making I can push that through
[06:03:51] <aphysically> maybe*
[06:04:23] <aphysically> yeah if it was an option it would normally be a "USE flag" in gentoo lingo
[06:04:34] <SnoopJ> it's been a long time :)
[06:05:01] *** Joins: spiderman (~spiderman@user/iphone)
[06:05:17] *** Quits: spiderman (~spiderman@user/iphone) (Changing host)
[06:05:17] *** Joins: spiderman (~spiderman@user/spiderman)
[06:05:22] *** Quits: deltab (~deltab@user/deltab) (Ping timeout: 260 seconds)
[06:05:33] <SnoopJ> but if it's invoking autotools, you'd just have to pass --enable-optimizations I believe, so might be a simple thing to make happen
[06:05:37] *** Quits: spiderman (~spiderman@user/spiderman) (Client Quit)
[06:05:55] *** Joins: spiderman (~spiderman@user/spiderman)
[06:05:56] <aphysically> yeah I'm testing a build of it right now and benchmarking portage with it when it's done
[06:06:11] <aphysically> I'm doing a little fighting with the test suite and portage's sandboxing mechanism but we'll figure it out
[06:06:50] <SnoopJ> I'm surprised you can notice the speed of portage itself, I guess it's churning in dependency resolution or something?
[06:07:38] <aphysically> oh yeah, dependency resolution is pure python and it takes 10 seconds even on fast machines
[06:07:43] <SnoopJ> yeesh
[06:08:56] <SnoopJ> Surprised it doesn't have a binding to a SAT solver or somesuch
[06:09:53] <SnoopJ> One written in not-Python, I mean.
[06:10:00] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[06:10:15] <aphysically> it's well acknowledged portage dependency resolution could be improved a lot and nobody has really stepped up to tackle it is the short answer
[06:10:34] <SnoopJ> yea, not a small bit of surgery no matter how you approach it
[06:10:58] <aphysically> and it's also the most sensitive component
[06:11:22] <aphysically> portage tends to need to be significantly more capable than normal by its nature
[06:11:40] <SnoopJ> than normal for a distribution package manager?
[06:12:10] <aphysically> yeah
[06:12:23] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[06:13:06] <SnoopJ> I guess that's why I'm surprised the SAT solver is pure Python, there are a lot of edge types to track
[06:14:32] <SnoopJ> or well, it's probably not *actually* a SAT solver :)
[06:15:06] <aphysically> it's actually intentionally approximate :)
[06:15:15] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 260 seconds)
[06:16:48] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:16:54] *** Joins: hrob3 (~hrob@31-209-221-88.dsl.dynamic.simnet.is)
[06:20:55] *** Quits: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Ping timeout: 256 seconds)
[06:21:18] <aphysically> SnoopJ: there probably would be a lot of pushback from bringing in any outside dependencies to help do it too, because there's still some idea that it should be bootstrappable or something
[06:21:47] *** Joins: rany (~rany@user/rany)
[06:21:58] <SnoopJ> aphysically, I assume there would be fuss no matter what the technical details were
[06:22:09] *** Joins: KombuchaKip (~kip@192.252.230.5)
[06:23:03] <SnoopJ> minisat is small and permissive, but...definitely not a small modification
[06:24:12] <aphysically> it's also that the exact build order and such is so sensitive where it seems like if you make even the slightest change to portage you get people filing bugs that they can no longer build chromium on the ARM coprocessor of their FPGA
[06:24:22] <aphysically> real head scratchers on bugs.gentoo.org
[06:30:36] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[06:31:00] *** Quits: JanC (~janc@user/janc) (Read error: Connection reset by peer)
[06:31:08] *** Joins: djhankb (~djhankb@208.113.164.68)
[06:31:25] *** Joins: JanC (~janc@user/janc)
[06:33:57] *** Quits: horseface (~horseface@user/horseface) (Quit: STOP, DROP, AND ROLL. IT IS HAMMER TIME!!!)
[06:34:07] *** Quits: travaldo (~travaldo@159.203.88.148) (Quit: travaldo)
[06:35:53] *** Joins: horseface (~horseface@user/horseface)
[06:37:36] *** Joins: demophoon44 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[06:39:19] *** Quits: hrob3 (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Quit: Client closed)
[06:39:39] <aphysically> it's looking like we might be able to push through PGO getting added as a USE flag \o/ we'll see in a week or so
[06:39:54] *** Quits: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[06:39:54] *** Quits: greknod28 (~grek@120.88.171.98) (Ping timeout: 260 seconds)
[06:39:56] *** Joins: demophoon41 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[06:42:05] *** Quits: demophoon44 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[06:43:03] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[06:44:24] *** Joins: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[06:44:40] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[06:44:43] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[06:45:40] *** Joins: deltab (~deltab@user/deltab)
[06:46:01] *** Quits: demophoon41 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Ping timeout: 258 seconds)
[06:46:49] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[06:47:08] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[06:47:23] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[06:47:24] <kakashiAL> why can I do dataFrame['column'] == "foo"  ?
[06:49:07] <kakashiAL> I mean you cant do [1, 2, 3] == 1
[06:49:37] <SnoopJ> kakashiAL, `a = b` first asks a if it knows how to compare itself for equality with b, and if it fails, it tries the "reflection" of this operation, asking b to compare itself to a.
[06:49:53] <BrenBarn> sure you can
[06:49:58] <BrenBarn> it doesn't work the same way but you can do it
[06:50:08] <BrenBarn> You mean `a == b` asks that
[06:50:09] <SnoopJ> Many other binary operators work this way, and in this case, the result of indexing the DataFrame is a Series object, and the comparison is "broadcast"
[06:50:37] *** Quits: SuperLag (~akulbe@user/superlag) (Ping timeout: 258 seconds)
[06:50:59] *** Joins: SuperLag (~akulbe@user/superlag)
[06:51:23] <kakashiAL> hmm... is there an example with some build in python datastructures where you can do: datastructure == "foo" ?
[06:51:48] <aphysically> SnoopJ: oh my laptop, doing the full dependency resolution possible to check for an update:
[06:51:50] <aphysically> sudo emerge --update --newuse --deep --with-bdeps=y --ask --changed-deps   29.91s user 0.34s system 92% cpu 32.830 total
[06:51:59] <aphysically> this is *after* I enabled PGO for testing
[06:52:15] <aphysically> 30 seconds, and my laptop is 6 core :D
[06:52:21] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-c056-e5fd-77df-3f22.res6.spectrum.com)
[06:52:25] <aphysically> I'm not sure if the dependency resolution uses multiprocessing though
[06:53:04] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[06:53:11] <BrenBarn> kakashi: you *can* do `[1, 2, 3] == 1`
[06:53:14] <SnoopJ> kakashiAL, pretty much all of them, as BrenBarn points out
[06:53:24] <BrenBarn> it just happens to return False
[06:53:25] <SnoopJ> but none of them "broadcast" this way
[06:53:38] <aphysically> nope looks to me like it's entirely singlethreaded
[06:53:40] <SnoopJ> if they aren't directly comparable, == falls back on "is the same object as"
[06:53:49] <aphysically> so there's probably a lot of room to improve
[06:54:04] <SnoopJ> aphysically, what's the improvement vs. without PGO?
[06:54:04] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:54:13] <aphysically> it was about 15%
[06:54:20] <SnoopJ> nice :)
[06:54:26] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[06:54:58] <aphysically> unusually large all things considered
[06:55:34] <kakashiAL> what I do not understand is how python know that if I do: dataframe["column"] == "foo"   python know to test every row and returns all rows with the result
[06:55:35] *** Quits: chenqisu12 (~xirndc@183.217.203.91) (Quit: Leaving)
[06:56:29] <SnoopJ> kakashiAL, because the object tells it how to do that
[06:56:49] <KirkMcDonald> A type can define what happens when you use the == opeator on it.
[06:57:02] <kakashiAL> SnoopJ: hmm... that is interesting, a very new concept for me :)
[06:57:28] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[06:57:40] <kakashiAL> is there a term for that? then I can google and study it more :)
[06:57:54] <KirkMcDonald> Operator overloading.
[06:58:08] <kakashiAL> overloading! I knew it :)
[06:58:24] <kakashiAL> thanks SnoopJ, BrenBarn and KirkMcDonald!
[06:58:33] <KirkMcDonald> Not to be confused with method overloading. Which is something Python doesn't do.
[06:59:05] <kakashiAL> yep, no polymorphism
[06:59:07] <KirkMcDonald> (Except when mypy defines the @overload decorator.)
[06:59:22] <KirkMcDonald> That isn't exactly what polymorphism means.
[06:59:40] <KirkMcDonald> You might be thinking of method overriding, which Python does have.
[07:00:12] <SnoopJ> kakashiAL, here's a very simple implementation of a similar (but not exactly analogous) behavior: https://bpa.st/7PBA
[07:00:14] <kakashiAL> overloading a method that has the same name but with different signatures
[07:00:43] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[07:00:43] *** Quits: rajkosto (~rajkosto@93-86-134-26.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[07:00:49] <kakashiAL> SnoopJ: thanks, makes a lot of sense :)
[07:00:51] <KirkMcDonald> Yes. Whereas polymorphism refers to when an operation might result in one of multiple possible behaviors.
[07:01:13] <SnoopJ> kakashiAL, I probably should have also printed `1 == lstN` to show off __req__() too
[07:01:15] <KirkMcDonald> (Which in OOP is typically achieved through overriding a method and making virtual calls.)
[07:01:42] <kakashiAL> KirkMcDonald: yep
[07:01:42] <SnoopJ> literally "many (poly-) forms (morph)"
[07:02:14] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[07:02:33] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[07:04:11] <BrenBarn> there's no `__req__`
[07:04:24] <SnoopJ> d'oh
[07:04:33] <SnoopJ> right, it just reverses the args because it should commute
[07:04:44] <KirkMcDonald> Yes, __eq__ is its own reversal.
[07:05:05] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[07:07:14] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:07:34] <SnoopJ> many of the other operators do have this 'reflected' method, but not equality 🙈
[07:09:43] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:09:59] *** Quits: davor (~davor@user/davor) (Ping timeout: 264 seconds)
[07:10:34] *** Joins: davor (~davor@user/davor)
[07:10:40] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[07:13:14] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 258 seconds)
[07:14:55] *** Joins: Everything (~Everythin@37.115.210.35)
[07:16:34] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[07:16:44] *** Joins: zerosum (~zerosum@user/zerosum)
[07:17:21] <zerosum> hello, any easy to read python documentation sites with examples
[07:24:36] <Wulf> zerosum: Hello. For documentation I suggest you use https://docs.python.org/3/ . If you need examples for any, search the web.
[07:24:42] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 260 seconds)
[07:24:58] <Wulf> zerosum: I doubt that there is a site with examples for all the functions.
[07:26:02] <zerosum> Wulf thank you, I'm looking for a good way to prepare for a coding interview I have on Friday
[07:26:14] <zerosum> I'm a complete beginner, know very little so far
[07:26:49] <zerosum> basic knowledge
[07:27:00] <zerosum> not sure how to best prepare
[07:27:55] <Wulf> zerosum: channel topic got some links. And I suggest you have a good nights sleep before the interview.
[07:28:18] *** Joins: nomic2 (~nomic@2a00:23c6:9902:2401:c44a:b5cb:7a3c:6b1c)
[07:28:38] <zerosum> will check them out, thanks
[07:29:20] *** Quits: nomic (~nomic@185.198.243.184) (Ping timeout: 258 seconds)
[07:30:44] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[07:31:18] *** Joins: djhankb (~djhankb@208.113.164.68)
[07:31:47] *** nomic2 is now known as nomic
[07:32:15] *** Quits: y1n (~y1n@77.119.161.1.wireless.dyn.drei.com) (Ping timeout: 260 seconds)
[07:32:48] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:25] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:40:16] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Quit: Leaving)
[07:40:34] *** Quits: Linux77 (~Linux7_7@186.233.183.48) (Ping timeout: 260 seconds)
[07:42:10] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[07:45:03] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 258 seconds)
[07:45:48] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Remote host closed the connection)
[07:46:43] *** Joins: analoq (~yashi@user/dies)
[07:47:18] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:48:19] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com)
[07:49:42] *** Joins: LiaoTao_ (~LiaoTao@gateway/tor-sasl/liaotao)
[07:49:46] *** Parts: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (WeeChat 3.1)
[07:51:06] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 276 seconds)
[07:53:56] *** Quits: alxndr_ (~alexander@ybti.net) (Remote host closed the connection)
[07:55:31] <ouemt> anyone know what "array dtype <U89" is?
[07:55:36] *** Joins: srhm (~srhm@user/srhm)
[07:55:36] *** Joins: anonymeowo (~anonymeow@5.34.180.230)
[07:56:20] <BrenBarn> well, it's a numpy datatype if that's what you're asking
[07:57:30] <ouemt> BrenBarn: yeah, but I can't find any documentation as to which one
[07:59:11] *** Joins: balavinayak (~balavinay@116.68.79.213)
[07:59:26] *** Quits: balavinayak (~balavinay@116.68.79.213) (Client Quit)
[08:00:50] *** Joins: alxndr (~alexander@ybti.net)
[08:02:01] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:02:30] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[08:04:32] <ouemt> I mean, it's a little endian unsigned 89 bit integer, but how did I end up there with a string and 2 floats? lol
[08:04:55] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[08:06:33] *** Joins: fikran (~fikran@user/fikran)
[08:07:01] *** Joins: dvx (~dvx@185.63.97.64)
[08:07:24] *** Joins: jazzy (~jaziz@user/jaziz)
[08:08:39] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[08:10:49] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[08:11:25] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:12:45] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: Leaving)
[08:15:56] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 245 seconds)
[08:16:04] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:18:45] *** Joins: curiosity (uid511277@user/cypris)
[08:20:31] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[08:20:31] *** Joins: p-i-_ (~Ohmu@mx-ll-223.206.147-206.dynamic.3bb.co.th)
[08:21:51] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[08:21:57] *** Joins: parv (~quass@user/parv)
[08:22:12] *** Joins: twb (~twb@159-196-230-25.9fc4e6.mel.nbn.aussiebb.net)
[08:22:21] *** Joins: manti7 (~manti7@176.10.104.94)
[08:22:46] <twb> My brain's drawing a total blank.  How do I say pathlib.Path('/home/a/b/c') in pathlib.Path('/home') ?
[08:23:09] <twb> Like, I want to check if a user-supplied path is "under" or "in" /home
[08:24:08] <twb> is_relative_to ?
[08:24:26] *** Quits: p-i- (~Ohmu@223.206.147.206) (Ping timeout: 260 seconds)
[08:24:37] <twb> Cool that's it
[08:27:57] *** Joins: stranac (~stranac@195.29.239.126)
[08:29:08] *** Joins: jdmark (~jdmark@097-102-095-007.res.spectrum.com)
[08:30:02] *** Joins: sedeki (~textual@user/sedeki)
[08:30:51] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[08:31:22] *** Joins: djhankb (~djhankb@208.113.164.68)
[08:31:25] *** Quits: tkazi (~tkazi@user/tkazi) (Quit: Disconnected)
[08:31:45] *** Joins: tkazi (~tkazi@user/tkazi)
[08:32:53] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:36:45] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[08:37:30] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[08:38:46] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[08:45:37] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 258 seconds)
[08:46:47] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[08:46:54] *** Quits: hifi (hifi@m.vi.fi) (Remote host closed the connection)
[08:47:11] *** Joins: hifi (hifi@m.vi.fi)
[08:48:57] *** Joins: jamer05 (~u0_a369@user/jamer05)
[08:49:03] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[08:49:15] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 260 seconds)
[08:52:00] *** Quits: Gudddu (~Guddu@200-90-226-22.baf.movistar.cl) (Quit: Leaving)
[08:52:35] *** Quits: hifi (hifi@m.vi.fi) (Remote host closed the connection)
[08:52:43] *** Joins: hifi (hifi@m.vi.fi)
[08:56:59] *** Joins: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[08:57:25] *** Joins: mortn (~mortn@81-234-122-230-no158.tbcn.telia.com)
[08:58:04] *** Quits: stranac (~stranac@195.29.239.126) (Quit: Leaving)
[08:58:31] *** Joins: carl--- (~carl-@185.103.188.130)
[09:00:50] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[09:01:30] *** Quits: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 260 seconds)
[09:02:36] *** Quits: Nact (~l@2a02:2788:11c4:6e6:cebc:f487:efd8:173) (Quit: Konversation terminated!)
[09:05:47] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:09:24] *** Joins: alzgh (~alzgh@user/alzgh)
[09:09:44] *** Quits: zuQe8 (~zuQe8@cpc105068-sgyl40-2-0-cust196.18-2.cable.virginm.net) (Quit: Bye)
[09:10:32] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 258 seconds)
[09:10:42] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[09:10:50] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[09:11:47] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 264 seconds)
[09:12:21] *** Joins: zuQe8 (~zuQe8@cpc105068-sgyl40-2-0-cust196.18-2.cable.virginm.net)
[09:13:22] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[09:13:41] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[09:15:28] <kakashiAL> in python you can override logical operators, is that the same for the content of brackets?
[09:15:52] <llua> yeah
[09:16:26] <kakashiAL> numpy and pandas makes more and more sense :)
[09:17:24] <kakashiAL> llua: how do you call that overrideing? ---> foo[some boolean stuff, another argument] ?
[09:17:57] <KirkMcDonald> With a comma in there, that's just passing a tuple to the thing.
[09:19:13] <kakashiAL> KirkMcDonald: I would like to google that, but I do not know how you call foo[x == 'bar']
[09:21:20] <twb> kakashiAL: I'm not sure which specific operator you're referring to, but typically you'll have something like MyCoolClass.__eq__ which is used when you do MyCoolClass(2) == 3
[09:21:40] <llua> thought they wanted a fancy __getitem__
[09:21:48] *** Quits: ckdCreations (~ckdCreati@147.55.133.140) (Read error: Connection reset by peer)
[09:21:58] <twb> llua: ohhhh
[09:22:09] * llua is unsure atm tho
[09:22:16] <twb> your reading makes sense
[09:22:26] <twb> I thought they meant ()
[09:22:30] *** Joins: carl-- (~carl-@185.103.188.130)
[09:22:47] <kakashiAL> twb: look at this example, maybe it will make more sense:
[09:22:49] <kakashiAL> myDataFrame.loc[anotherDataFrame['CustomerType'] == 1]
[09:23:36] <twb> kakashiAL: that's fetching the customerType from anotherDataFrame, and comparing it to 1.  If it's equal, it does myDataFrame.loc[True], otherwise myDataFrame.loc[False]
[09:23:44] <twb> kakashiAL: ...probabl
[09:23:53] <twb> I don't pandas, so I could be completely wrong
[09:24:10] *** Quits: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[09:24:18] <kakashiAL> this will return a new dataframe where all rows have CustomerType == 1
[09:24:36] <kakashiAL> my question is if there is a way to override the content of []
[09:24:52] <twb> yeah that makes no sense to me at all
[09:24:52] <kakashiAL> to controll the behavior
[09:25:06] *** Quits: carl--- (~carl-@185.103.188.130) (Ping timeout: 260 seconds)
[09:25:23] <kakashiAL> twb: as you mentioned, you can override the behavior of logical operators
[09:25:41] <twb> kakashiAL: does "logical operator" mean && and || and not ?
[09:25:59] <twb> er, "and", and "or" and "not" in python I guess
[09:26:19] <twb> and the bitwise equivalents ^ and |
[09:27:32] <llua> obj[] is like obj.__getitem__
[09:27:42] <KirkMcDonald> You cannot override `and`, `or`, or `not`, though you can define __bool__ to say how something gets evaluated in a boolean context.
[09:28:14] <KirkMcDonald> But yes, the behavior of the subscript operator can be defined with __getitem__
[09:28:26] *** Joins: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net)
[09:29:03] *** Joins: ExpiredKebab_ (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz)
[09:29:11] *** Joins: kosh (~kosh@user/kosh)
[09:29:54] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 276 seconds)
[09:30:51] *** Quits: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz) (Ping timeout: 258 seconds)
[09:31:35] *** Quits: audiobirb (~audio@2603-8081-1800-1546-9262-1b64-15ea-2d11.res6.spectrum.com) (Ping timeout: 264 seconds)
[09:33:26] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567377-189.dhcp.inet.fi)
[09:34:29] *** Joins: ubert (~Thunderbi@77.119.208.184.wireless.dyn.drei.com)
[09:34:53] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[09:35:37] *** Joins: daniel3 (daniel@user/daniel2)
[09:35:57] *** Joins: ExeciN (~ExeciN@user/nicexe)
[09:36:21] *** Quits: remexre (~remexre@user/remexre) (Ping timeout: 245 seconds)
[09:36:21] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Ping timeout: 245 seconds)
[09:37:00] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[09:37:08] *** Joins: Telvana2 (~capo@user/telvana)
[09:37:11] *** Quits: Telvana (~capo@user/telvana) (Ping timeout: 245 seconds)
[09:37:11] *** Quits: matdev (~matdev@2a01:6e60:10:793:666:feed:dead:beef) (Ping timeout: 245 seconds)
[09:37:12] *** Quits: thekingofbandit (thekingofb@user/thekingofbandit) (Remote host closed the connection)
[09:37:18] *** Joins: Abrax- (~Abrax@user/abrax)
[09:37:36] *** Quits: mekhami (~ldv@2605:a601:aaf2:ef00:383f:a991:12f0:4f28) (Ping timeout: 245 seconds)
[09:37:36] *** Quits: HenryG (~quassel@2607:5300:201:3000::f63) (Ping timeout: 245 seconds)
[09:37:36] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 245 seconds)
[09:37:36] *** Quits: ripdog (~quassel@user/ripdog) (Ping timeout: 245 seconds)
[09:37:54] *** Joins: mekhami (~ldv@2605:a601:aaf2:ef00:383f:a991:12f0:4f28)
[09:38:01] *** Quits: daniel2 (daniel@user/daniel2) (Ping timeout: 245 seconds)
[09:38:01] *** Quits: baakeydow (~baake@2001:bc8:65c:2601::1) (Ping timeout: 245 seconds)
[09:38:01] *** Quits: solrize (~solrize@user/solrize) (Ping timeout: 245 seconds)
[09:38:05] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[09:38:08] *** Joins: thekingofbandit (thekingofb@user/thekingofbandit)
[09:38:22] *** Joins: ripdog (~quassel@user/ripdog)
[09:38:24] *** Joins: remexre (~remexre@user/remexre)
[09:38:27] *** Joins: HenryG (~quassel@2607:5300:201:3000::f63)
[09:38:38] *** Joins: matdev (~matdev@2a01:6e60:10:793:666:feed:dead:beef)
[09:38:44] <kakashiAL> KirkMcDonald: so the content inside [] is what they call subscript and you can override its behavior with __getitem__
[09:38:48] <kakashiAL> thanks for that!
[09:39:40] *** Joins: baakeydow (~baake@2001:bc8:65c:2601::1)
[09:40:31] *** Quits: Abrax (~Abrax@user/abrax) (Ping timeout: 245 seconds)
[09:40:36] *** Abrax- is now known as Abrax
[09:40:56] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 245 seconds)
[09:41:51] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[09:43:48] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[09:44:36] *** Quits: _xor (~xor@72.49.199.147) (Read error: Connection reset by peer)
[09:44:47] *** Quits: ExpiredKebab_ (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz) (Quit: Textual IRC Client: www.textualapp.com)
[09:46:24] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[09:47:07] *** Quits: seednode4 (~seednode@user/seednode) (Quit: Nihil supernum.)
[09:47:52] *** Joins: seednode4 (~seednode@user/seednode)
[09:47:59] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[09:48:55] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-9587-7f48-310e-0534.res6.spectrum.com)
[09:49:00] *** Joins: _xor (~xor@72.49.199.147)
[09:49:04] *** Joins: pyfisch3 (~pyfisch@user/pyfisch)
[09:49:42] *** Quits: _xor (~xor@72.49.199.147) (Read error: Connection reset by peer)
[09:49:58] *** Joins: rendar (~rendar@user/rendar)
[09:49:59] <aphysically> SnoopJ: yeah we're going to try to look at getting it added and maybe adding the portage (package manager) unit tests to the PGO
[09:50:01] *** Joins: _xor (~xor@72.49.199.147)
[09:50:47] <aphysically> I was actually about to start looking at the portage dependency resolution code when I wanted to check other loose ends in our speed first...
[09:50:56] *** Joins: death916 (~death916@user/death916)
[09:51:00] *** Quits: pyfisch (~pyfisch@user/pyfisch) (Ping timeout: 265 seconds)
[09:51:00] *** pyfisch3 is now known as pyfisch
[09:51:11] <aphysically> (at which point I realized we were missing out on an easy big speed increase)
[09:54:15] *** Joins: mrwick (~mrwick@user/mrwick)
[09:54:20] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:55:13] <lucidreamachine> I have an API call in a script file and wondering the proper way to handle the response. Would it be a try and except or an if/else statement checking if the response is equal to 200? They should both work I'm wondering the cleanest way to do it.
[09:55:45] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[09:56:30] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[09:56:50] *** Quits: sharperguy (~sharpergu@fnord.cryptophone.de) (Ping timeout: 260 seconds)
[09:56:54] *** Quits: p-i-_ (~Ohmu@mx-ll-223.206.147-206.dynamic.3bb.co.th) (Read error: Connection reset by peer)
[09:57:30] *** Joins: p-i- (~Ohmu@mx-ll-223.206.147-206.dynamic.3bb.co.th)
[09:57:47] *** Quits: jamer05 (~u0_a369@user/jamer05) (Remote host closed the connection)
[09:57:58] <twb> lucidreamachine: http?
[09:58:21] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:2c93:2cb0:bcd:aa8e)
[09:58:27] *** Joins: sharperguy (~sharpergu@89.244.124.36)
[09:58:39] <twb> response = requests.get('https://example.com'); response.raise_for_status(); return response.text
[09:59:11] *** Quits: ubert (~Thunderbi@77.119.208.184.wireless.dyn.drei.com) (Ping timeout: 264 seconds)
[10:03:28] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:05:45] <aphysically> I think one of the problems with the portage dependency graph is I don't think it's actually solvable
[10:05:58] <lucidreamachine> twb: yes
[10:06:17] <aphysically> i.e. there's unsolvable cyclic dependencies and bootstrapping problems everywhere
[10:06:18] <lucidreamachine> twb: we
[10:06:27] *** Joins: swensson (~swensson@213.88.131.10)
[10:06:29] <lucidreamachine> twb: we're not using the request packing. urllib
[10:07:17] *** Quits: sharperguy (~sharpergu@89.244.124.36) (Ping timeout: 265 seconds)
[10:07:50] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[10:07:50] *** Joins: greknod28 (~grek@120.88.171.98)
[10:08:37] <twb> lucidreamachine: urllib3 raises an exception by default, doesn't it?
[10:08:55] *** Joins: sharperguy (~sharpergu@fnord.cryptophone.de)
[10:09:25] *** Quits: Spawns_Carpeting (~Spawns_Ca@user/spawns-carpeting/x-6969421) (Ping timeout: 252 seconds)
[10:09:40] *** Joins: brelod (~me@90.244.150.142)
[10:09:47] <twb> >>> with urllib.request.urlopen('https://example.com/CANTHAPPEN') as u: pass
[10:09:50] <twb> urllib.error.HTTPError: HTTP Error 404: Not Found
[10:10:20] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[10:11:22] <lucidreamachine> twb: It raises an exception if the json is not valid
[10:11:57] <twb> lucidreamachine: so what's the problem?
[10:12:36] *** Quits: somlis (~somlis@user/somlis) (Ping timeout: 245 seconds)
[10:13:16] <lucidreamachine> twb: would you use a try and except or would you check the request with an if else statement for anything other than a 200?
[10:13:23] *** Joins: ericlee (~ericlee@2601:647:4681:3420::8)
[10:13:49] <twb> lucidreamachine: I would rely on urllib to raise an exception
[10:13:50] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[10:14:01] <twb> lucidreamachine: there is no need to check it yourself
[10:14:20] <lucidreamachine> twb: great, thanks
[10:14:36] <twb> (except in the very rare case where you want to change how 3xx responses are handled)
[10:14:56] *** Quits: reset (~reset@user/reset) (Quit: reset)
[10:15:19] *** Quits: zaquest (~notzaques@5.128.210.178) (Ping timeout: 258 seconds)
[10:15:54] *** Joins: fikran (~fikran@user/fikran)
[10:16:04] *** Joins: vd19 (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[10:17:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:18:11] *** Joins: zaquest (~notzaques@5.128.210.178)
[10:19:08] *** Joins: pr100 (~pr100@cpc92728-cmbg20-2-0-cust160.5-4.cable.virginm.net)
[10:19:22] *** Quits: zepolen (~zepolen@2a02:587:8600:1ad4:bf3b:2e33:52f2:979d) (Quit: Konversation terminated!)
[10:20:00] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1)
[10:20:03] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[10:20:24] *** Joins: sipeluru (~sipeluru@222.124.217.58)
[10:21:55] *** Joins: zepolen (~zepolen@2a02:587:8600:1ad4:ad:98b4:3948:4ca2)
[10:22:09] *** Joins: mei (~mei@user/mei)
[10:23:25] *** Joins: palasso (~palasso@user/palasso)
[10:25:05] *** Quits: n1000 (~n1000@user/n1000) (Quit: WeeChat 3.1)
[10:27:35] *** Joins: jonaskabrink (~jonaskabr@i5E866619.versanet.de)
[10:29:56] *** Joins: Deep6 (~jhenkel@S01061056117e632c.pk.shawcable.net)
[10:30:00] *** Quits: resmo_ (~resmo@2a00:d420:9:8a00:626c:f756:d8e4:6c90) (Remote host closed the connection)
[10:30:14] *** Joins: resmo_ (~resmo@2a00:d420:9:8a00:eabc:61f1:885a:511e)
[10:30:16] *** Quits: noarb- (~noarb@user/noarb) (Ping timeout: 258 seconds)
[10:30:53] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[10:31:28] *** Joins: djhankb (~djhankb@208.113.164.68)
[10:31:37] *** BillyZane2 is now known as BillyZane
[10:33:38] *** Joins: ravan (~ravan@user/ravan)
[10:33:58] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:f927:f04f:f46f:9b21)
[10:35:27] <kakashiAL> pandas has loc where I can do dataFrame.loc[[True, False, True]] which means "pick first and third row"
[10:35:37] <kakashiAL> my question is why dont they use a method for that?
[10:36:01] <kakashiAL> why is it not implemented as dataFrame.loc(foo)
[10:37:24] <hexnewbie> Intersection of two things: 1. Developers like to do things in a weird/magic way, 2. It is, after all, getting items from a data structure, which is what [] is for
[10:40:13] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[10:40:16] <kakashiAL> hexnewbie: do you mean to make it more semantical clear? with other words if a user sees [] he should think that this is for "data picking" ?
[10:40:26] *** Joins: shawwwn (uid6132@id-6132.helmsley.irccloud.com)
[10:40:34] <kakashiAL> like a convention
[10:40:44] *** Quits: jonaskabrink (~jonaskabr@i5E866619.versanet.de) (Quit: jonaskabrink)
[10:41:03] *** Quits: Hash (~weechat@protect.yourself.with.hashsecurity.org) (Quit: WeeChat 3.3)
[10:42:12] *** Joins: Hash (~weechat@protect.yourself.with.hashsecurity.org)
[10:42:40] <hexnewbie> kakashiAL: Not as much as a convention, it is what it is for. [] is the operator for picking a specific item, or a collection of items, out of a collection. numpy, for example, has taken the liberty to extend that beyond the meaning it has for built-in collection. So has pandas. Now, whether this specific extension makes sense is another matter
[10:43:01] *** Joins: oldguy (~oldguy@user/oldguy)
[10:44:19] <kakashiAL> hexnewbie: sure thing, but its not consitent in my opinion, because then you would say: dataFrame[condition] but what you have is dataFrame.loc[condition]
[10:44:26] <hexnewbie> Like, for example, I find it weird to introduce an attribute to provide special operators (though I have done so myself)
[10:45:00] <BrenBarn> one thing is that you can only use slices in indices
[10:45:15] <BrenBarn> it's nice to be able to select stuff with `df.loc['a':'b']`
[10:45:32] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[10:45:34] <BrenBarn> and if you're going to allow multiple types of selection (like with slices and also booleans) then it make sense to do them both in the same place
[10:45:42] *** Joins: n1000 (~n1000@user/n1000)
[10:46:07] <kakashiAL> BrenBarn: good point, because foo(a:bar) is syntax that is not allowed in python
[10:46:15] *** Joins: mei (~mei@user/mei)
[10:46:26] <hexnewbie> x['a':'b'] does turn into slice('a', 'b', None), so Python certainly has the ability
[10:47:06] *** Joins: acresearch (~acresearc@user/acresearch)
[10:47:36] <kakashiAL> hexnewbie: what do you call loc? I mean something that uses [] in this case
[10:47:45] <kakashiAL> I would not call it method, but it behaves like a method
[10:47:47] *** Quits: hifi (hifi@m.vi.fi) (Remote host closed the connection)
[10:48:02] *** Joins: hifi (hifi@m.vi.fi)
[10:48:13] <deniska> kakashiAL: what goes after a dot is typically called an attribute
[10:48:41] *** Joins: alkino (~quassel@user/alkino)
[10:49:02] <deniska> kakashiAL: now what exactly `loc` is you can only know if you look at the source of pandas, or poke with inspection tool
[10:49:42] *** Joins: Ilyu (~quassel@gateway/vpn/pia/ilyu)
[10:50:00] *** Joins: noarb (~noarb@user/noarb)
[10:50:06] <deniska> kakashiAL: (fun fact, attribute access is also overrideable, so python objects can act as they have whatever attributes on the fly, but it's relatively rare to see that in normal code)
[10:50:07] <kakashiAL> deniska: sure, you can see a method also an attribute of an object, but is there another term for something that uses [] to get arguments and behaves/looks like a method
[10:50:26] <deniska> kakashiAL: I don't think there's any specific term
[10:51:00] <deniska> kakashiAL: if an object does self.foo = [1, 2, 3], then obj.foo is something you can do obj.foo[0], and there's no any specific name for a list as an attribute of an object
[10:51:04] *** Quits: carl-- (~carl-@185.103.188.130) (Quit: Leaving)
[10:51:06] <kakashiAL> deniska: okay, because when you would tell me "use the loc method" I would think loc(foo)
[10:51:39] *** Joins: carl- (~carl-@185.103.188.130)
[10:51:46] <deniska> kakashiAL: "indexing operation on the .loc attribute" is a phrasing I'd probably understand
[10:52:23] <hexnewbie> I mean, there are descriptors, but I don't know pandas to tell if this is a descriptor. But you can have Qt signal descriptors, which have obj.signal.emit(1,2,3), or I've implemented Mapping descriptors which do obj.methodmap['abc'](1,2,3)
[10:52:24] <deniska> kakashiAL: or just show an example line of code, it's shorter than explaining it in terms :)
[10:52:46] <deniska> (a lot of which are sorta wishy-washy anyway)
[10:53:26] <deniska> numpy and pandas are popular enough among certain python user groups, that there's probably a short jargon name for doing foo.loc[]
[10:54:03] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[10:54:21] <kakashiAL> I have to check some examples how __getitem__ is used and how I can implement my own foo.bar[argument]
[10:54:24] <acresearch> people, i have an issue, i am trying to convert a .xlsx (excel) file into .csv so i have parse it using python, i usually open it in libre office and re-save it as .csv      but the file i currently have is too large 700MB with too many columns that libre office cannot open it    is there a different way to convert .xlsx into .csv?
[10:54:51] <deniska> acresearch: I used openpyxl for dealing with .xlsx
[10:55:01] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 252 seconds)
[10:55:07] <deniska> acresearch: I think it loads the whole thing in ram though, so make sure you have enough
[10:55:09] <acresearch> deniska: that is a python library?
[10:55:12] <hexnewbie> Built-in dict() for example calls d.keys() - which is a set - a ‘view’
[10:55:14] <deniska> acresearch: yes
[10:55:24] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::2612)
[10:55:30] <hexnewbie> Er, ‘Set’ rather than ‘set’
[10:55:32] <acresearch> deniska: ok, and can it re-export the data into .csv?
[10:55:45] <deniska> acresearch: well, python also has a built-in csv module :)
[10:56:03] <acresearch> deniska: yes that is why i want to convert the .xslx into csv
[10:56:04] <deniska> acresearch: it's up to you to write a for-loop
[10:56:18] <hexnewbie> Viewing dataframe.loc as a ‘view’ on the dataframe would eliminate my confusion, but it's probably not the correct term, it is *not* used in the documentation: https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.loc.html
[10:57:44] <hexnewbie> acresearch: xlsx2csv does exist
[10:57:52] <BrenBarn> those things like `.loc` are called "accessors" in pandas terminology
[10:58:02] <BrenBarn> I'm not sure how widely that term is used for that outside of pandas but it's a reasonable term
[10:58:14] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:58:51] <twb> BrenBarn: is that the same as what class-based OO people call "getters" ?
[10:58:58] <acresearch> hexnewbie: is this a bash command or a python library?
[10:59:11] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[10:59:26] <hexnewbie> acresearch: It's a tool, that can be used from at least bash, which is written in Python
[10:59:45] <acresearch> hexnewbie: ok let me check it out
[10:59:57] *** Joins: chele (~chele@user/chele)
[11:00:13] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[11:00:48] *** Quits: Ilyu (~quassel@gateway/vpn/pia/ilyu) (Read error: Connection reset by peer)
[11:01:36] <twb> acresearch: https://github.com/dilshod/xlsx2csv
[11:02:19] <twb> i have a sqlite2xlsx somewhere, too...
[11:02:32] <jinsun> if you have pandas you can combine pd.read_excel and DataFrame.to_csv to do that
[11:03:21] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[11:03:45] <twb> Really everyone should just use sqlite as the interchange format, since that's approved for long-term archival (unlike XLSX or CSV)
[11:04:04] <jinsun> approved?
[11:04:19] <madprops> i approve sqlite
[11:04:21] <twb> by dudes like the US Library of Congress
[11:05:03] <twb> https://www.loc.gov/preservation/digital/formats/fdd/fdd000461.shtml
[11:05:18] <hexnewbie> I don't approve of SQLite, it uses the term ‘duck typing’ wrong!
[11:05:31] <twb> hexnewbie: where does sqlite refer to "duck typing"?
[11:05:48] <supakeen> that's a bit disingenious
[11:06:05] <supakeen> https://www.loc.gov/preservation/resources/rfs/data.html#datasets
[11:06:26] <supakeen> clearly lists csv and xlsx as 'preferred' for example and not sqlite for datasets
[11:06:29] <twb> hexnewbie: only occurrence of "duck" I can see is in the fts test page
[11:06:57] <twb> supakeen: hrm, OK, I retract my statement
[11:07:23] <deniska> I have har2sqlite and maybe some other tools for converting things to sqlite :)
[11:07:45] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[11:07:49] <supakeen> twb: I wonder why it changed :)
[11:07:50] <deniska> But csv has one important quality, it's sorta openable with everything
[11:07:56] <supakeen> (the recommendations of the LoC)
[11:07:57] <twb> deniska: using the json extension?
[11:08:04] <deniska> twb: no
[11:08:12] *** Quits: swensson (~swensson@213.88.131.10) (Quit: Client closed)
[11:08:30] <deniska> You can print csv out, someone else may retype it back, and it will be pretty much as good as the original
[11:08:46] <deniska> try that with sqlite
[11:08:47] <twb> I like CSV a lot better now there's an RFC
[11:09:03] <deniska> nice, does excel follow it?
[11:09:07] <twb> no idea
[11:09:13] <twb> I don't have an excel license
[11:09:18] <deniska> if it doesn't, csv may as well not have any RFC :)
[11:09:56] <acresearch> hexnewbie twb that worked perfectly, thank you :-)
[11:10:09] *** Joins: swensson (~swensson@213.88.131.10)
[11:11:16] *** Joins: LenarHoyt (~LenarHoyt@p4ff75e33.dip0.t-ipconnect.de)
[11:11:23] <twb> It is quite annoying how hard it is to get zip, CSV, and AES support into sqlite3 though
[11:13:18] <BrenBarn> twb: no, I think by getters people usually mean methods like getThis or getThat
[11:14:48] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[11:16:03] *** Quits: Aminda (~sid12355@Feneas/Mikaela) (Remote host closed the connection)
[11:17:03] *** Joins: Aminda (~sid12355@Feneas/Mikaela)
[11:17:03] *** Joins: vladoski (~vladoski@2001:b07:add:d406:2028:afe9:4375:ff99)
[11:18:14] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[11:19:00] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:19:47] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[11:21:39] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[11:24:05] *** daniel3 is now known as daniel2
[11:24:57] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[11:25:01] *** Joins: Klinda (~superleag@user/klinda)
[11:29:47] *** Quits: The-Compiler (~compiler@the-compiler.org) (Ping timeout: 240 seconds)
[11:30:07] *** Joins: ubert (~Thunderbi@77.119.198.223.wireless.dyn.drei.com)
[11:30:31] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[11:31:01] *** Joins: djhankb (~djhankb@208.113.164.68)
[11:31:05] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[11:31:35] *** Quits: Aminda (~sid12355@Feneas/Mikaela) (Remote host closed the connection)
[11:31:57] *** Joins: Aminda (~sid12355@Feneas/Mikaela)
[11:32:45] *** Quits: hifi (hifi@m.vi.fi) (Remote host closed the connection)
[11:32:59] *** Joins: hifi (hifi@m.vi.fi)
[11:33:08] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 258 seconds)
[11:33:24] *** Joins: Ilyu (~quassel@gateway/vpn/pia/ilyu)
[11:34:45] *** Quits: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[11:34:59] *** Joins: StyXman (~mdione@2a01:e0a:5e5:4790:20d:b9ff:fe52:1a0)
[11:35:00] *** Joins: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[11:35:49] <StyXman> last night I was asking about any place (chat, forum, ML) where to discuss about parsers. does anyone know any?
[11:35:59] <StyXman> (hint: I didn't get any response :)
[11:36:12] <alkino> ##parsers
[11:36:23] <alkino> but sincerely I asked a question 4 days ago, without any answer
[11:37:17] <StyXman> right
[11:37:48] <StyXman> 7 people including you and me, not good :)
[11:38:12] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[11:38:27] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[11:38:45] *** Joins: ExeciN (~ExeciN@user/nicexe)
[11:39:56] *** Joins: fanis30 (~fanis30@adsl-234.37.6.0.tellas.gr)
[11:40:15] <twb> StyXman: #haskell ?
[11:40:16] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:40:21] <StyXman> hmmm
[11:40:33] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[11:40:42] *** Joins: slav0nic (slav0nic@python.su)
[11:40:43] <supakeen> Parsers are a general part of programming so probably any programming language channel works.
[11:41:03] <StyXman> yeah, I wrote a parser in haskell like 25y ago, I think it's mostly focused on descent parsers, and I really want to see my potions
[11:41:16] <twb> StyXman: do you want recdescent, or ll(k)?
[11:41:23] <StyXman> supakeen: yes and no, most people dónt even go close to one
[11:41:30] <StyXman> twb: I have no idea :)
[11:41:43] <StyXman> I don't even know how regular the language is
[11:41:51] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:43:10] *** Quits: frost (~frost@59.71.244.189) (Changing host)
[11:43:10] *** Joins: frost (~frost@user/frost)
[11:43:19] <StyXman> I used to know a bit about this, but again, like 25y ago
[11:43:32] <StyXman> hmm, make it 20 only :-P
[11:43:37] <twb> if it's regular you don't need a parser, just a lexer
[11:43:42] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[11:44:05] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[11:44:36] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[11:44:37] *** Quits: janemba (~janemba@185.107.80.152) (Read error: Connection reset by peer)
[11:44:52] *** Joins: frost (~frost@user/frost)
[11:44:52] <StyXman> well, I can't really separate parsing from lexing in my head
[11:45:02] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:c44a:b5cb:7a3c:6b1c) (Quit: Leaving)
[11:45:10] *** Quits: LenarHoyt (~LenarHoyt@p4ff75e33.dip0.t-ipconnect.de) (Quit: Client closed)
[11:46:23] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[11:46:31] *** Quits: LiaoTao_ (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[11:46:45] <twb> if you're used to rec descent, there's no clear delineation
[11:47:01] <twb> if you're used to flex/bison, lexing is what flex does
[11:47:08] *** Joins: Ilyu_ (~quassel@gateway/vpn/pia/ilyu)
[11:47:10] *** Quits: Ilyu (~quassel@gateway/vpn/pia/ilyu) (Ping timeout: 260 seconds)
[11:47:12] <StyXman> for instance, this language has expressions, right? and some of the expressions are function calls. but. you can't define new functions, and the list of available functions is quite limited (this is no a programming language). so, so I tokenize a generic function call and then test argument count and types in the parser? or does it make any sense to tokenize the functions individually? like "rgb ::= 'rgb(' int ',' int, ',' int ')'
[11:47:13] <twb> byte stream -> token stream
[11:47:26] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[11:47:29] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[11:47:41] <StyXman> twb: I'm not used to anything, it's like I'm coming to this subject virgin :-P
[11:47:52] <twb> then I guess you want to read Dragon Book?
[11:48:00] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[11:48:04] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[11:48:08] <StyXman> I don't think I have the BW for that
[11:48:11] <StyXman> :(
[11:48:13] <twb> Aho Sethi Ullmann
[11:48:15] <twb> BW?
[11:48:18] *** Joins: PJBoy (~PJBoy@user/pjboy)
[11:48:27] <StyXman> bandwidth
[11:48:37] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Client Quit)
[11:48:41] <twb> it's probably only like 2MB PDF
[11:48:48] <StyXman> brain BW :)
[11:48:51] *** Quits: Fossil (~Fossil@95.85.23.165) (Ping timeout: 258 seconds)
[11:49:20] *** Quits: dodo (~dodo@user/dodo) (Remote host closed the connection)
[11:49:38] *** Joins: ub (~Thunderbi@77.119.198.223.wireless.dyn.drei.com)
[11:50:14] <StyXman> at some point I was even wondering if a state machine wouldn't be faster, then I remembered I would probably a stack automaton, and things derailed :-P
[11:51:09] <StyXman> boh, I'll try with the dragon book
[11:51:14] <twb> StyXman: a lexer generates a DFA for you
[11:51:22] <twb> You don't roll it by hand
[11:51:35] *** Joins: LucaTM (~LucaTM@user/lucatm)
[11:51:47] <twb> (The same way "import re; re.compile(r'ab*a')" emits a DFA... probably)
[11:52:31] *** Quits: beaky (~beaky@2a03:b0c0:0:1010::1e:a001) (Read error: Connection reset by peer)
[11:53:00] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Ping timeout: 260 seconds)
[11:53:32] <StyXman> you forgot Lam :)
[11:54:07] *** Joins: arinov (~arinov@213.194.126.155)
[11:54:25] <twb> StyXman: in 2nd edition?
[11:54:31] <acresearch> i have 2 lists of strings, how can i find what is NOT commond between them?
[11:54:36] <acresearch> *common
[11:54:42] <StyXman> twb: ah, yes, maybe
[11:55:18] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[11:55:30] <twb> Hrm no.  It went straight from Aho+Ullman to Aho+Lam+Sethi+Ullman, and I'm just an idiot
[11:55:35] *** Quits: jonthesnow (~xizhendu@240e:404:8610:62b2:dadc::30c0) (Ping timeout: 264 seconds)
[11:55:42] <StyXman> acresearch: [ s1 for s1 in sl1 if s1 not in sl2 ]
[11:56:09] <twb> acresearch: set(xs) ^ set(ys)
[11:56:18] <StyXman> and then probably ... oh
[11:56:23] <StyXman> twb: awesome
[11:56:28] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[11:56:30] <twb> I might have the operator wrong
[11:56:39] <twb> I have a feeling difference is / or \
[11:56:54] <acresearch> StyXman: twb thanks
[11:56:56] <StyXman> twb: but he dopesn't want difference
[11:57:06] <StyXman> he wants...
[11:57:21] <StyXman> (or she, damn pronouns)
[11:57:27] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[11:58:08] <StyXman> symmetric_difference(), which is ^ allright
[11:58:36] <mav`rik> acresearch: if your list has repeats, what outcome do you want for the repeats?
[11:59:15] <acresearch> mav`rik: no repeats, it ok i found out the outlier
[12:00:32] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[12:00:44] <twb> http://ix.io/3Cnq  <-- I'm too tired to think it through
[12:00:52] *** Joins: alzgh (~alzgh@user/alzgh)
[12:01:22] *** Joins: janemba (~janemba@94.204.254.193)
[12:02:04] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[12:02:21] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[12:02:57] *** Joins: Mattiaslndstrm (~Mattiasln@h-98-128-223-118.NA.cust.bahnhof.se)
[12:03:23] *** Quits: supakeen (~user@python/site-packages/supakeen) (Ping timeout: 264 seconds)
[12:03:38] <StyXman> WTH are you doing :)
[12:04:14] *** Quits: kgz (~kragniz@nyaa.kragniz.eu) (Ping timeout: 260 seconds)
[12:04:47] <mage> is there a better way than using a regex to split on a string?
[12:04:48] <StyXman> twb: there are no / or \, what compositions you wanted?
[12:05:00] <StyXman> mage: define better
[12:05:14] <StyXman> a string could be better 'cause it could be faster
[12:05:47] *** Joins: plastico (~plastico@neomutt/plastico)
[12:05:59] <StyXman> what you have could be better if better means you solved the problem vs still having the problem :)
[12:06:06] <twb> mage: 'foo bar baz'.split(); k, _, v = 'underpants: not bad; or: maybe good?'.partition(':')
[12:06:06] *** Quits: fannagoganna (uid110488@tinside.irccloud.com) (Ping timeout: 258 seconds)
[12:06:06] *** Quits: KnownSyntax (sid233169@user/knownsyntax) (Ping timeout: 258 seconds)
[12:06:23] *** Quits: Lvl4Sword (sid483043@user/lvl4sword) (Ping timeout: 264 seconds)
[12:06:23] *** Quits: rburton (rburton@user/rburton) (Ping timeout: 264 seconds)
[12:06:34] *** Quits: debnet (sid330295@python/afpy/debnet) (Ping timeout: 252 seconds)
[12:07:04] *** Joins: KnownSyntax (sid233169@user/knownsyntax)
[12:07:17] *** Quits: bidouille (~user_name@trois.potager.org) (Ping timeout: 264 seconds)
[12:07:24] *** Joins: e2m4n (~ezman@user/e2m4n)
[12:07:26] *** Joins: Lvl4Sword (sid483043@user/lvl4sword)
[12:07:29] <mage> ah, .partition might be good too
[12:07:52] *** Joins: fannagoganna (uid110488@id-110488.tinside.irccloud.com)
[12:08:01] *** Joins: debnet (sid330295@python/afpy/debnet)
[12:08:20] <StyXman> partition?
[12:08:25] * StyXman goes read the docs
[12:08:48] <StyXman> haah
[12:09:04] <acresearch> people, if i have a pandas dataframe, how can i remove lines that contain a spesific value of a spesific cell?
[12:09:07] <StyXman> weird, since you already know the separator, feels redundant
[12:09:16] *** Quits: dermato (~dermatobr@cpe-70-114-219-76.austin.res.rr.com) (Ping timeout: 252 seconds)
[12:09:23] <acresearch> for example if cell [2] == 'FALSE'  remove that whole line
[12:09:41] *** Joins: rburton (rburton@user/rburton)
[12:09:55] *** Quits: alkino (~quassel@user/alkino) (Ping timeout: 260 seconds)
[12:10:17] *** Joins: alkino (~quassel@user/alkino)
[12:10:35] *** Joins: dermato (~dermatobr@cpe-70-114-219-76.austin.res.rr.com)
[12:11:09] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[12:11:15] *** Quits: cuppajoeman (uid521943@hampstead.irccloud.com) (Read error: Connection reset by peer)
[12:11:24] *** Joins: cuppajoeman (sid521943@id-521943.hampstead.irccloud.com)
[12:11:51] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[12:11:59] *** Quits: salimfadhley (sid31217@wikipedia/salimfadhley) (Ping timeout: 265 seconds)
[12:12:15] *** Quits: liam (sid7517@helmsley.irccloud.com) (Ping timeout: 260 seconds)
[12:12:26] *** Joins: clarkk (~clarkk@host31-53-69-254.range31-53.btcentralplus.com)
[12:12:28] *** Quits: mawk (~mawk@wireguard/contributor/mawk) (Ping timeout: 265 seconds)
[12:12:54] *** Joins: salimfadhley (sid31217@wikipedia/salimfadhley)
[12:13:14] <rindolf> acresearch: hi! i don't know off hand
[12:13:33] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[12:13:35] *** Quits: raydeeam (uid325131@dgplug/raydeeam) (Ping timeout: 264 seconds)
[12:13:49] <acresearch> rindolf: i am trying this:   DATA = DATA[DATA.Labels != 2]     but it is not working, AttributeError: 'DataFrame' object has no attribute 'Labels'   even though i do have a column called Labels
[12:13:50] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[12:13:54] *** Joins: drogas (~drogas@jump2.jet.uk)
[12:14:02] *** Quits: KevinX (~KevinX@94.140.11.217) (Ping timeout: 260 seconds)
[12:14:21] *** Joins: liam (sid7517@id-7517.helmsley.irccloud.com)
[12:14:25] *** Joins: KevinX_ (~KevinX@94.140.11.212)
[12:15:06] *** Quits: sa (sid1055@tinside.irccloud.com) (Ping timeout: 245 seconds)
[12:15:06] *** Joins: clarkk1 (~clarkk@37.120.203.181)
[12:15:40] *** Quits: clarkk (~clarkk@host31-53-69-254.range31-53.btcentralplus.com) (Read error: Connection reset by peer)
[12:15:46] *** Quits: swensson (~swensson@213.88.131.10) (Quit: Client closed)
[12:15:49] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[12:16:20] *** Quits: hogarius (hogarius@uxbridge.irccloud.com) (Ping timeout: 265 seconds)
[12:16:32] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[12:16:47] *** Quits: zweimer (~zweimer@2a02:908:d20:26e0:79eb:ea87:6f38:cccf) (Quit: Client closed)
[12:16:54] *** Joins: shad (~shad@user/shad)
[12:16:59] *** Joins: raydeeam (uid325131@dgplug/raydeeam)
[12:17:08] *** Joins: clarkk11 (~clarkk@host31-53-69-254.range31-53.btcentralplus.com)
[12:17:32] *** Joins: raxor2k (~raxor2k@78.158.254.247)
[12:17:43] <rindolf> acresearch: see https://datagy.io/filter-pandas/
[12:18:02] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[12:19:03] <rindolf> acresearch: «greater_than = df[df['Sales'] > 300]»
[12:19:16] <raxor2k> i have 2 APIs,  API1 sends tousends of data to API2 (list), which API2 then will take care of. How can i just send data from API1 without having to wait for an answer(taking too long time). And if thats not possible, probably i need to multithread something inside api2 ?
[12:19:28] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[12:19:41] <acresearch> rindolf: i am trying DATA = DATA[DATA['Labels'] != 2]   but it is still not working, i am trying to remove the line with value 2 in column Labels
[12:19:50] *** Quits: clarkk1 (~clarkk@37.120.203.181) (Ping timeout: 260 seconds)
[12:20:02] *** Joins: clarkk (~clarkk@185.206.225.246)
[12:20:03] *** Quits: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Read error: Connection reset by peer)
[12:20:10] *** Joins: supakeen (~user@python/site-packages/supakeen)
[12:20:15] *** Joins: kgz (~kragniz@nyaa.kragniz.eu)
[12:20:19] <acresearch> rindolf: i get KeyError: 'Labels'
[12:20:35] *** Joins: hogarius (hogarius@id-222644.uxbridge.irccloud.com)
[12:20:46] <jinsun> acresearch: looks like you don't have a column called Labels
[12:21:05] *** Joins: dodo (~dodo@user/dodo)
[12:21:29] <rindolf> acresearch: see https://github.com/shlomif/how-to-share-code-online - give sample code
[12:21:49] *** Quits: clarkk11 (~clarkk@host31-53-69-254.range31-53.btcentralplus.com) (Ping timeout: 258 seconds)
[12:21:53] *** Joins: Fossil (~Fossil@95.85.23.165)
[12:22:26] <acresearch> rindolf: jinsun   this is sample of print(DATA)   https://paste.debian.net/1216222/
[12:22:31] <jinsun> acresearch: that keyerror alreay tells you that, but you can confirm another way by doing "Labels" in DATA.columns
[12:22:54] *** Joins: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[12:22:58] <jinsun> acresearch: looks like tyour column name is 1, Lables is the value in the 1st row
[12:23:05] <acresearch> ah
[12:23:05] <jmiehe> altendky, SnoopJ: I polished what became of us discussing multiple decorators recently and posted an answer at https://stackoverflow.com/questions/69653239/click-command-default-arguments-and-or-options/69658781#69658781 ~ also the repl at https://replit.com/@ldericher/multidecorator
[12:23:12] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[12:23:20] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[12:23:21] <acresearch> ok let me adjust the code
[12:23:45] *** Joins: Linux77 (~Linux7_7@186.233.183.123)
[12:23:46] *** Joins: srhm (~srhm@user/srhm)
[12:24:30] <acresearch> jinsun: DATA = DATA[DATA[1] != 2]   this adjusted new code does not remove the lines    the dataframe remains the same
[12:25:01] *** Joins: Matheo_bis (~matheo@user/matheo-bis/x-4309430)
[12:25:08] <rindolf> raxor2k: you can use an async/events framework
[12:25:14] *** Joins: The-Compiler (~compiler@2001:41d0:2:3b6f:fcb3:9651:355f:f3ad)
[12:25:15] *** Joins: fikran (~fikran@user/fikran)
[12:26:09] <jinsun> acresearch: are you sure you have 2 in that column, it will do nothing if there is no 2 obviously, also how are you checking that the dataframe remains the same
[12:26:15] *** Quits: DeaDSouL (~DeaDSouL@45.130.136.155) (Ping timeout: 260 seconds)
[12:26:33] <mage> mmh it doesn't work with rpartition too >>> 'http://dev.lan:10613/enicenca/en'.rpartition('/en')
[12:26:36] <mage> ('http://dev.lan:10613/enicenca', '/en', '')
[12:26:38] <mage> >>> oops
[12:26:40] <mage> >>> 'http://dev.lan:10613/enicenca/'.rpartition('/en')
[12:26:41] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[12:26:43] <mage> ('http://dev.lan:10613', '/en', 'icenca/')
[12:26:50] *** Quits: clarkk (~clarkk@185.206.225.246) (Ping timeout: 260 seconds)
[12:27:27] <mage> I want to strip the local name (if present) from the root URL
[12:27:32] <acresearch> jinsun: so this is the print out of the data: https://paste.debian.net/1216222/     i print the data before and after the deletion code
[12:27:40] <acresearch> jinsun: that is how i check
[12:28:03] *** Joins: DeaDSouL (~DeaDSouL@45.91.20.148)
[12:28:25] *** Joins: y1n (~y1n@77.119.167.58.wireless.dyn.drei.com)
[12:28:29] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[12:29:13] *** Quits: Linux77 (~Linux7_7@186.233.183.123) (Quit: Leaving)
[12:29:47] <raxor2k> rindolf: asyncio library?
[12:30:13] <rindolf> raxor2k: maybe
[12:30:49] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[12:31:22] *** Joins: djhankb (~djhankb@208.113.164.68)
[12:31:30] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[12:33:27] *** Quits: blue_rog (~blue_rog@2400:6180:0:d0::89:1) (Ping timeout: 240 seconds)
[12:33:39] *** Quits: Deep6 (~jhenkel@S01061056117e632c.pk.shawcable.net) (Remote host closed the connection)
[12:33:55] *** Joins: lxwulf (~lxwulf@user/lxwulf)
[12:33:59] *** Joins: bidouille (~user_name@trois.potager.org)
[12:34:31] <rindolf> acresearch: your paste is not selfcontained: https://github.com/shlomif/how-to-share-code-online
[12:35:18] <raxor2k> rindolf: still it would be a issue as the user(api1) expects an return message, and after return the code is unreacable
[12:35:21] <twb> mage: it looks like you're operating on a URL as if it was a string.  This is bad.  Don't do this
[12:35:26] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[12:35:59] <acresearch> rindolf: i fixed it,   DATA = DATA[DATA[1] != '2']
[12:36:05] *** Joins: beaky (~beaky@2a03:b0c0:0:1010::1e:a001)
[12:36:19] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[12:36:24] <rindolf> acresearch: ah
[12:36:54] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Client Quit)
[12:36:58] <rindolf> acresearch: now try changing [1] to ['Labels']
[12:37:35] <twb> mage: x = hyperlink.parse('http://dev.lan:10613/enicenca/en'); x.replace(path=x.path[:-1]) ==> DecodedURL(url=URL.from_text('http://dev.lan:10613/enicenca'))
[12:38:21] <acresearch> rindolf: 'Labels' does not work,   its ok   i am fine with [1]  it works fine with me
[12:38:40] <rindolf> acresearch: ok
[12:38:40] <twb> mage: also https:// unless you have a good reason to avoid modern HTTP versions
[12:39:14] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[12:39:35] <jinsun> acresearch: it might be the string "2" instead of the integer 2, becasue your first row is a string, pandas displays both same
[12:41:14] <acresearch> jinsun: no they are integers, its ok it works now :-)
[12:41:44] <vladoski> does dict() call __dict__ when it's present in a class?
[12:42:51] *** Joins: Linux77 (~Linux7_7@186.233.183.123)
[12:43:05] <rapha> morning all
[12:43:50] <rapha> i'm reading https://docs.telethon.dev/en/latest/modules/client.html#telethon.client.messages.MessageMethods.get_messages and it uses "from telethon.tl.types import InputMessagesFilterPhotos" but i can't find a list of what all is available in "telethon.tl.types" ... is there a way for Python to tell me?
[12:43:59] <mav`rik> vladoski: the only time a python-based class _doesn't_ have a __dict__ is when it has __slots__. `dict()` uses iteration protocols and a few other mechanisms. Using `__dict__` wouldn't work as you might want/hope
[12:44:42] *** Joins: Throgkt (~Throgkt@user/throgkt)
[12:45:52] <rapha> i tried "import telethon.tl.types as tl_types" and then "print(tl_types)" but that's not much useful
[12:45:53] <jinsun> rapha: your IDE should be able to help if it is good, if you want to do from python code then you can use the dir builtin function on the module after importing it
[12:46:15] *** Quits: Throgkt (~Throgkt@user/throgkt) (Client Quit)
[12:47:18] <rapha> my IDE is vscode and it suggests a lot of things but not in this case
[12:47:28] <rapha> hmm ... "dir" ... okay, so i'm operating on the file system?
[12:47:51] <jinsun> but the module can dynamically generate attributes too using `__getattr__`, both will not be useful in that case I think
[12:47:51] *** Joins: Deneb (~johnch@86.111.189.80.dyn.plus.net)
[12:48:15] <jinsun> not on the file system, on the module object
[12:48:26] <rapha> oh ok
[12:48:32] <acresearch> ok last issue: trying to rename the labels   DATA[1] = DATA[1].map({0:'X', 1:'Y'})      i get the labels renamed to NaN
[12:48:57] <rapha> oh wait, i opened the file that was in the print(), jinsun ... and it seems there _is_ an auto-generated list in there which wasn't in the libraries sources on github. thank you!
[12:49:00] *** Quits: The-Compiler (~compiler@2001:41d0:2:3b6f:fcb3:9651:355f:f3ad) (Ping timeout: 260 seconds)
[12:49:04] *** Joins: darksun (~darksun@user/darksun)
[12:49:55] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[12:50:13] *** Quits: ChicagoNathan (~ChicagoNa@ec2-54-183-182-4.us-west-1.compute.amazonaws.com) (Ping timeout: 256 seconds)
[12:51:24] *** Parts: StyXman (~mdione@2a01:e0a:5e5:4790:20d:b9ff:fe52:1a0) (http://quassel-irc.org - Chat comfortably. Anywhere.)
[12:51:47] *** Quits: fanis30 (~fanis30@adsl-234.37.6.0.tellas.gr) (Quit: WeeChat 3.3)
[12:52:26] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Client Quit)
[12:55:41] *** Joins: Throgkt (~Throgkt@user/throgkt)
[12:55:52] *** Joins: mawk (~mawk@wireguard/contributor/mawk)
[12:57:10] *** Quits: BillyZane (~BillyZane@91.196.220.174) (Ping timeout: 260 seconds)
[12:57:39] *** Joins: Tas-sos (~Tas-sos@ppp005054070054.access.hol.gr)
[13:03:37] *** Joins: cerill (~cerill@h-155-4-198-153.A785.priv.bahnhof.se)
[13:05:23] *** Joins: The-Compiler (~compiler@the-compiler.org)
[13:06:31] <cerill> Hi, beginner here that is trying to get a list comprehension to work like this: https://bpa.st/YUJA but its throwing syntax error. I have tried putting paranthesis and brackets around it but it throws errors. Anyone able to advice me on how to fix it?
[13:07:50] <supakeen> `list(itertools.chain.from_iterable([({"key1": i}, {"key2": i}) for i in range(10)]))`
[13:08:44] <supakeen> A single iteration of a list comprehension gives you a single element in the list. In this case it is changed so that that element is a tuple. `itertools.chain.from_iterable` takes that list and then puts all the elements in each thing in the list in a 'row'.
[13:09:20] <supakeen> However, it is a bit weird to want this, are you sure you don't want to have a single dict that says `{"key1": i, "key2": i}`? :)
[13:09:41] <cerill> supakeen that wors like a charm, thank you!
[13:09:49] *** Joins: hemstock (~hemstock@68.71.244.6)
[13:10:06] *** Joins: computeiro (~Wender@189.37.65.80)
[13:10:15] <cerill> the keys arent exactly key1 and key2 in the real code, I simplified it here, so yes this is exactly what I need :)
[13:10:47] <hemstock> Did webchat migrate here?
[13:13:32] <rapha> d = Document(..., attributes=[DocumentAttributeFilename(file_name='61893.rar')], thumbs=[], video_thumbs=[])) ... how do i get the file_name from this?
[13:13:43] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[13:14:36] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[13:14:43] <rapha> oh, wait ... just .file_name at the end ... i was confused by the parentheses
[13:15:48] *** Quits: hemstock (~hemstock@68.71.244.6) ()
[13:16:07] *** Joins: hemstock (~hemstock@68.71.244.6)
[13:16:25] *** Quits: mawk (~mawk@wireguard/contributor/mawk) (Ping timeout: 260 seconds)
[13:19:48] *** Joins: wender (~Wender@189.15.175.188)
[13:20:16] *** Joins: p-i-_ (~Ohmu@223.206.147.206)
[13:20:17] *** Quits: coraxx (~coraxx@mail.8-pm.com) (Quit: Leaving)
[13:20:30] *** Quits: ubert (~Thunderbi@77.119.198.223.wireless.dyn.drei.com) (Ping timeout: 260 seconds)
[13:20:30] *** ub is now known as ubert
[13:20:39] *** Joins: LenarHoyt (~LenarHoyt@p4ff75e33.dip0.t-ipconnect.de)
[13:21:00] *** Quits: Matheo_bis (~matheo@user/matheo-bis/x-4309430) (Quit: Konversation terminated!)
[13:22:08] *** Quits: cerill (~cerill@h-155-4-198-153.A785.priv.bahnhof.se) (Quit: Client closed)
[13:22:28] *** Quits: computeiro (~Wender@189.37.65.80) (Ping timeout: 252 seconds)
[13:22:53] *** Joins: Tailoric (~Tailoric@2a02:8109:98c0:1465:2997:699c:630f:6632)
[13:23:16] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[13:23:40] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[13:24:02] *** Quits: p-i- (~Ohmu@mx-ll-223.206.147-206.dynamic.3bb.co.th) (Ping timeout: 260 seconds)
[13:25:35] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[13:26:55] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 260 seconds)
[13:27:21] *** Quits: Mattiaslndstrm (~Mattiasln@h-98-128-223-118.NA.cust.bahnhof.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:28:09] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567377-189.dhcp.inet.fi) (Quit: Leaving)
[13:28:58] *** Joins: somlis (~somlis@user/somlis)
[13:29:09] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[13:29:09] *** Joins: hesse (~TheHerman@gateway/tor-sasl/thehermann)
[13:30:30] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[13:31:04] *** Joins: djhankb (~djhankb@208.113.164.68)
[13:31:07] *** Joins: mawk (~mawk@wireguard/contributor/mawk)
[13:33:18] *** Joins: Mattiaslndstrm (~Mattiasln@h-98-128-223-118.NA.cust.bahnhof.se)
[13:35:04] *** Quits: raxor2k (~raxor2k@78.158.254.247) ()
[13:36:25] <mage> twb: I made the following https://gist.github.com/silenius/03d2b4cdd4af35e83f2c2dabcc7c6559 .. what do you think?
[13:36:53] *** Quits: CombatVet (~c4@user/combatvet) (Quit: suck it)
[13:36:54] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[13:36:57] *** Quits: sipeluru (~sipeluru@222.124.217.58) (Remote host closed the connection)
[13:37:26] *** Quits: Mattiaslndstrm (~Mattiasln@h-98-128-223-118.NA.cust.bahnhof.se) (Client Quit)
[13:37:28] <mage> it works, but looks kinda ugly
[13:37:29] *** Joins: CombatVet (~c4@user/combatvet)
[13:38:22] <mage> but this works with: / /en /enmyprefix /myprefix/en /enmyprefix/en etc
[13:39:20] <mage> which returns  /, /, /enmyprefix, /myprefix, /enmyprefix
[13:40:30] *** Joins: clarkk (~clarkk@84.247.50.57)
[13:42:43] <twb> mage: I think you are invoking jwz's second law
[13:43:00] <mage> which is .. ? :)
[13:43:15] *** Joins: Mattiaslndstrm (~Mattiasln@h-98-128-223-118.NA.cust.bahnhof.se)
[13:43:22] *** Joins: swensson (~swensson@213.88.131.10)
[13:43:39] <twb> https://en.wikipedia.org/wiki/Jamie_Zawinski#Notable_quotes
[13:43:46] *** Quits: Mattiaslndstrm (~Mattiasln@h-98-128-223-118.NA.cust.bahnhof.se) (Client Quit)
[13:44:46] *** Joins: Mattiaslndstrm (~Mattiasln@h-98-128-223-118.NA.cust.bahnhof.se)
[13:45:23] <mage> haha
[13:45:26] <mage> true
[13:46:28] *** Joins: StormDancer (~stormdanc@185.245.86.122)
[13:46:50] *** Quits: Mattiaslndstrm (~Mattiasln@h-98-128-223-118.NA.cust.bahnhof.se) (Client Quit)
[13:47:37] *** Joins: Ergo^ (~ergo@91.238.59.144)
[13:47:39] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[13:49:42] *** Joins: arinov (~arinov@31.142.50.8)
[13:50:21] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[13:50:39] *** Joins: CombatVet (~c4@user/combatvet)
[13:50:47] *** Quits: rigid (~rigid@user/rigid) (Ping timeout: 250 seconds)
[13:51:32] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[13:52:12] <parv> *shudder* That 1998 warning of JZW became true some years ago
[13:52:23] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[13:52:40] <parv> s/JZW/JWZ/ # curses
[13:52:40] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[13:56:28] *** Joins: rigid (~rigid@user/rigid)
[13:57:36] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Ping timeout: 245 seconds)
[13:58:06] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[13:59:01] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[13:59:59] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567377-189.dhcp.inet.fi)
[14:02:07] *** Joins: kurashiX48 (~kurashiX4@2601:410:0:c03:c4c:f44c:f296:7f37)
[14:02:55] *** Quits: Tailoric (~Tailoric@2a02:8109:98c0:1465:2997:699c:630f:6632) (Quit: Leaving)
[14:04:50] *** Quits: dvx (~dvx@185.63.97.64) (Ping timeout: 260 seconds)
[14:06:08] *** Joins: Naan (~Naan@user/naan)
[14:06:35] *** Quits: solo (~solo@c-73-219-147-223.hsd1.ct.comcast.net) (Ping timeout: 260 seconds)
[14:06:57] <OliverUK> Hello,. I have a for loop that I am using to set a bunch of variables dynamically using globals()[f"option_{i}"] and this is working, I can print the variable in the loop but when I try and print the variable just outside of the loop it is empty?
[14:07:14] *** Joins: solo (~solo@c-73-219-147-223.hsd1.ct.comcast.net)
[14:07:26] *** Quits: StormDancer (~stormdanc@185.245.86.122) (Ping timeout: 260 seconds)
[14:11:24] *** Joins: ubert1 (~Thunderbi@77.119.198.223.wireless.dyn.drei.com)
[14:14:13] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[14:15:17] <hexnewbie> OliverUK: Posting an excerpt to https://bpa.st/+python may reveal what is wrong, but unexpected behaviour, corner cases and need for clear understanding what happens is the third or fourth main reason to avoid touching globals() like that. Though they are slightly less fragile than locals().
[14:15:18] *** Quits: SeeM (~SeeM@153.ip-54-38-53.eu) (Quit: leaving)
[14:15:21] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[14:18:15] <ubert1> hello, i'm getting this storm of errors frpom the python-mode vim plugin when opening a py file: https://pastebin.com/cDdnYY6y
[14:18:16] <infobob> https://bpaste.net/DVOQ (repasted for ubert1)
[14:19:35] <ubert1> pymode is the latest from develop, python version is Python 3.10.0a5
[14:21:23] *** Joins: driib1 (~driib@185.195.233.165)
[14:22:27] *** Joins: codificat (~pep@187.red-83-46-128.dynamicip.rima-tde.net)
[14:22:29] *** Quits: pr100 (~pr100@cpc92728-cmbg20-2-0-cust160.5-4.cable.virginm.net) (Quit: Client closed)
[14:22:38] <parv> ubert1, Does 'iter_entry_points' exist in 'pkg_resources' module (re import error at the end)? Also is "pkg_resources" in `sys.path`?
[14:23:16] <parv> I have not used pymode.
[14:23:43] *** Quits: driib (~driib@185.195.233.168) (Ping timeout: 258 seconds)
[14:23:43] *** driib1 is now known as driib
[14:24:26] *** Quits: parv (~quass@user/parv) (Quit: parv)
[14:25:50] <nedbat> ubert1: you might update your python version: 3.10 is now released. idk if that will fix the problem though
[14:26:13] *** Quits: jug (~jug@user/jug) (Ping timeout: 252 seconds)
[14:26:47] *** Quits: rigid (~rigid@user/rigid) (Ping timeout: 264 seconds)
[14:27:59] *** vinleod is now known as vdamewood
[14:28:27] <ubert1> nedbat: python is provided by the system, nixos 21.05, will see what happens if i upgrade
[14:28:42] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[14:28:49] <nedbat> ubert1: the system python for nixos is an alpha build of Python?
[14:29:40] <f8e4_> i use python -m venv venv; source venv/bin/activate; but no such file ...
[14:29:53] *** Quits: p-i-_ (~Ohmu@223.206.147.206) (Remote host closed the connection)
[14:29:53] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:30:19] <f8e4_> 3.8.1 just fine; did it change?
[14:30:28] *** Joins: p-i- (~Ohmu@mx-ll-223.206.147-206.dynamic.3bb.co.th)
[14:30:32] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[14:30:40] <nedbat> f8e4_: what version of python doesn't work?
[14:30:41] <ubert1> nedbat: it's not! i might have that from my nix-env, thank you!
[14:31:05] *** Joins: djhankb (~djhankb@208.113.164.68)
[14:31:20] <f8e4_> 3.9.2 default deb 11.1
[14:32:15] *** Quits: death916 (~death916@user/death916) (Ping timeout: 260 seconds)
[14:32:26] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567377-189.dhcp.inet.fi) (Quit: Leaving)
[14:32:50] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[14:34:34] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 265 seconds)
[14:34:36] *** Joins: fikran (~fikran@user/fikran)
[14:34:48] <p-i-> I'm bumping into a painpoint in image processing with numpy/openCV. I'm using masks: np.bool8 True/1 or False/0 but openCV seems to always want np.uint8 (0 or 255).
[14:34:55] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[14:35:02] <nedbat> f8e4_: i just tried -m venv with 3.8 and 3.9: they both have bin/activate
[14:35:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[14:35:13] <p-i-> I guess maybe I should use np.uint8 0/255 everywhere...
[14:35:37] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:35:55] *** Joins: Mattiaslndstrm (~Mattiasln@h-98-128-223-118.NA.cust.bahnhof.se)
[14:36:10] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[14:36:20] <f8e4_> got it: ensure-venv needed
[14:36:23] *** Quits: kurashiX48 (~kurashiX4@2601:410:0:c03:c4c:f44c:f296:7f37) (Ping timeout: 264 seconds)
[14:36:28] *** Quits: Mattiaslndstrm (~Mattiasln@h-98-128-223-118.NA.cust.bahnhof.se) (Client Quit)
[14:36:58] *** Joins: ano (~ano@user/ano)
[14:37:17] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[14:37:24] <nedbat> f8e4_: can you say more about that? What is that?
[14:37:30] *** Quits: solo (~solo@c-73-219-147-223.hsd1.ct.comcast.net) (Ping timeout: 260 seconds)
[14:37:48] *** Joins: jonthesnow (~xizhendu@240e:305:7380:4300:d47:48bf:97c5:2de9)
[14:38:21] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Quit: FinnElija)
[14:38:23] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[14:38:29] *** Joins: Vonter (~Vonter@user/vonter)
[14:39:24] <p-i-> The annoying thing is that A = np.array([1,2,3]); A > 1  # produces a np.bool8. I wonder if this is a OpenCV fail... it would be smoother if they used bool8 for all mask-type operations.
[14:40:07] *** Joins: Mattiaslndstrm (~Mattiasln@h-98-128-223-118.NA.cust.bahnhof.se)
[14:40:34] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 260 seconds)
[14:40:40] *** Joins: StormDancer (~stormdanc@185.245.86.122)
[14:41:21] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[14:41:24] *** Joins: solo (~solo@c-73-219-147-223.hsd1.ct.comcast.net)
[14:41:36] *** Joins: rigid (~rigid@user/rigid)
[14:41:59] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[14:42:00] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[14:42:54] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 260 seconds)
[14:44:11] *** Quits: arinov (~arinov@31.142.50.8) (Ping timeout: 264 seconds)
[14:45:24] *** Quits: NeoCore_ (~neocore@37.120.204.252) (Quit: Leaving)
[14:45:42] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[14:46:05] *** Quits: JerryXiao (~JerryXiao@user/jerryxiao) (Quit: Bye)
[14:46:33] *** Joins: legola (~legola@46.235.101.181)
[14:49:48] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[14:51:39] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[14:52:05] *** Quits: StormDancer (~stormdanc@185.245.86.122) (Ping timeout: 260 seconds)
[14:53:06] <f8e4_> nedbat: a pristine install on deb11 needs python3-venv package to create venvs. apt install. and voila
[14:53:10] *** Quits: shad (~shad@user/shad) (Ping timeout: 260 seconds)
[14:53:29] <f8e4_> 'python' itself is not even a binary anymore. only python3 avail
[14:53:37] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[14:54:32] <nedbat> f8e4_: aah yes, debian likes to remove Python's packaging tools
[14:54:41] <nedbat> (and installation tools)
[14:54:43] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[14:55:05] *** Quits: iflema (~ian@user/iflema) (Remote host closed the connection)
[14:55:11] <gitesh> is this code right ---> https://bpa.st/OCGQ
[14:55:14] *** Joins: shad (~shad@user/shad)
[14:55:17] <gitesh> https://www.hackerrank.com/challenges/the-minion-game/problem
[14:56:20] *** Joins: JerryXiao (~JerryXiao@user/jerryxiao)
[14:58:24] <gitesh> I am not understanding `len(s) - i`
[14:58:52] <gitesh> how `len(s)-i` is able to count all substrings?
[15:01:09] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[15:01:14] *** Joins: ham5urg (~ham5urg@p200300d1671129005c59fed3240d00af.dip0.t-ipconnect.de)
[15:02:25] *** Quits: ubert (~Thunderbi@77.119.198.223.wireless.dyn.drei.com) (Remote host closed the connection)
[15:02:25] *** ubert1 is now known as ubert
[15:02:59] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[15:04:37] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[15:05:10] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-c056-e5fd-77df-3f22.res6.spectrum.com) (Quit: Leaving.)
[15:05:29] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:05:54] *** Joins: Luistro_ (~Luistro_@user/luistro/x-0623251)
[15:07:06] <fakenullie> gitesh: it's count of all substrings starting at letter i, (i:i + 1), (i:i + 2), (i:i + 3) ... (i:len(i))
[15:10:02] <braxas> hi, I want to mock http responses in my unit tests, something like this: https://github.com/RDFLib/rdflib/blob/master/test/test_sparqlupdatestore_mock.py - but for this I wrote some custom mocker
[15:10:22] <braxas> Is there something which already does this for me that I don't have to write
[15:10:24] <OliverUK> hexnewbie: I think I've sorted it anyhu, because I was using itertools to generate combinations, when I viewed it as a list it was scrapping the itertools output.  I will have used totally the wrong terminology here but hopefully you understand
[15:10:59] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:2c07:1e18:2b55:3c1b)
[15:11:08] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:2c07:1e18:2b55:3c1b) (Client Quit)
[15:11:10] *** Joins: nomic2 (~nomic@2a00:23c6:9902:2401:c44a:b5cb:7a3c:6b1c)
[15:11:14] *** Quits: nomic2 (~nomic@2a00:23c6:9902:2401:c44a:b5cb:7a3c:6b1c) (Read error: Connection reset by peer)
[15:11:30] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:c44a:b5cb:7a3c:6b1c)
[15:13:54] <altendky> jmiehe: hey, glad it worked out well for you
[15:14:23] *** Joins: jetchisel (jetchisel@user/jetchisel)
[15:14:56] <gitesh> fakenullie: i don't understand
[15:15:05] *** Quits: mawk (~mawk@wireguard/contributor/mawk) (Ping timeout: 258 seconds)
[15:15:30] <fakenullie> gitesh: foobar, i = 3 - > b, ba, bar
[15:16:20] <gitesh> i see
[15:16:35] *** Joins: mawk (~mawk@wireguard/contributor/mawk)
[15:18:13] <ham5urg> Is it possible to change the background color of a wx.TextCtrl while the user is typing into it?
[15:20:01] <p-i-> `return (glyph := canvas & crop)`  Seems counterintuitive that I need to bracket my walruses.
[15:23:05] *** Joins: StormDancer (~stormdanc@185.245.86.122)
[15:23:46] *** Joins: upsala (~zcb@185.213.155.160)
[15:25:10] *** Joins: ravan (~ravan@user/ravan)
[15:25:26] *** Quits: upsala (~zcb@185.213.155.160) (Client Quit)
[15:26:45] *** Joins: SeeM (~SeeM@153.ip-54-38-53.eu)
[15:27:01] *** Joins: theprophet (~theprophe@85.114.228.184)
[15:27:19] *** Quits: StormDancer (~stormdanc@185.245.86.122) (Ping timeout: 252 seconds)
[15:27:28] *** Joins: computeiro (~Wender@189.37.65.80)
[15:27:29] <PJBoy> uh
[15:27:36] <PJBoy> trying to interpret this documentation
[15:27:46] <PJBoy> https://docs.python.org/2/library/io.html#io.BufferedIOBase.raw
[15:27:59] <PJBoy> > This is not part of the BufferedIOBase API
[15:28:15] <PJBoy> it's literally the first thing in the BufferedIOBase docs
[15:28:17] *** Joins: tgamblin (~tgamblin@199-167-119-224.ppp.storm.ca)
[15:28:44] <Yhg1s> PJBoy: because it's there but you can't _expect_ it to be there.
[15:29:08] <PJBoy> is it one of those CPython implementation details?
[15:29:16] <PJBoy> normally it would say that explicitly
[15:29:25] *** Quits: wender (~Wender@189.15.175.188) (Ping timeout: 260 seconds)
[15:29:33] <Yhg1s> PJBoy: let's say it's situationally there.
[15:29:50] <Yhg1s> as in "it depends on how the BufferedIOBase is being used".
[15:30:20] <PJBoy> hm, ok then
[15:30:45] <Yhg1s> PJBoy: it can also change in any release, or when Python is built differently.
[15:30:49] <PJBoy> so if I wanted to use .raw, should I check that it exists first?
[15:30:52] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[15:31:13] <PJBoy> assuming I can figure out some way of handling its absense
[15:31:22] *** Joins: djhankb (~djhankb@208.113.164.68)
[15:31:53] <PJBoy> of course the lack of any guarantee of it existing at all is putting me off using it
[15:32:03] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[15:32:46] <gitesh> fakenullie: I now understood after doing this ------->    https://bpa.st/A5SQ
[15:34:26] *** Joins: CountryNerd (~CountryNe@184.53.1.83)
[15:34:54] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[15:34:58] *** Joins: mickey8 (~user@user/mickey)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:37] <PJBoy> ok nvm, my implementation does in fact not have raw
[15:38:10] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 260 seconds)
[15:38:31] <Yhg1s> PJBoy: yes, you should probably not use it.
[15:42:09] *** Quits: horseface (~horseface@user/horseface) (Quit: STOP, DROP, AND ROLL. IT IS HAMMER TIME!!!)
[15:42:22] *** Joins: horseface (~horseface@user/horseface)
[15:45:40] <foo>  drills_attended = (         str(len(drills)) + (" drill" if len(drills) == 1 else " drills") + " attended"     )   ... any issue with this for writing singular and plural of totals?
[15:45:51] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[15:46:18] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[15:47:02] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[15:47:30] <The-Compiler> foo: perhaps an fstring would make it a bit more readable:   f"{len(drills)} drill{'' if len(drills) == 1 else 's'} attended"
[15:47:47] <gitesh> fakenullie: `x = [s[i:j] for i in range(len(s)) for j in range(i+1, len(s)+1)]`
[15:48:32] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Remote host closed the connection)
[15:49:17] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[15:49:18] *** Joins: src (~src@user/src)
[15:49:29] *** Quits: horseface (~horseface@user/horseface) (Quit: STOP, DROP, AND ROLL. IT IS HAMMER TIME!!!)
[15:50:56] *** Quits: src (~src@user/src) (Client Quit)
[15:51:00] *** Joins: horseface (~horseface@user/horseface)
[15:51:06] *** Joins: src (~src@user/src)
[15:51:46] <ham5urg> How to add an empty instance of an object to another instance? E.g. self.input.color = # empty   self.input.color.red = "red"   self.input.color.green = "green" ?
[15:51:57] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[15:52:56] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Quit: Leaving)
[15:52:57] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[15:53:31] <foo> The-Compiler: thank you.
[15:53:48] <LenarHoyt> ham5urg: self.input.color = None?
[15:54:25] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[15:56:11] *** Quits: jonthesnow (~xizhendu@240e:305:7380:4300:d47:48bf:97c5:2de9) (Ping timeout: 264 seconds)
[15:56:16] *** Quits: Mattiaslndstrm (~Mattiasln@h-98-128-223-118.NA.cust.bahnhof.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:56:33] *** Joins: StormDancer (~stormdanc@185.245.86.123)
[15:56:41] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[15:56:45] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[15:57:12] <The-Compiler> ham5urg: depends on what kind of object that would be. Perhaps you're looking for something like a dataclass or types.SimpleNamespace/
[15:59:08] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[15:59:23] *** Joins: llh (~llh@user/llh)
[16:00:01] <ham5urg> LenarHoyt, I get an AttributeError: 'NoneType' object has no attribute 'red'
[16:00:26] <ham5urg> The-Compiler, yes, seems so. I need an extra class for that :/
[16:01:18] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[16:01:18] *** Quits: StormDancer (~stormdanc@185.245.86.123) (Ping timeout: 260 seconds)
[16:01:33] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[16:01:53] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:02:33] *** Joins: Mattiaslndstrm (~Mattiasln@h-98-128-223-118.NA.cust.bahnhof.se)
[16:03:27] <The-Compiler> ham5urg: what's your goal?
[16:03:36] *** Joins: qlixed (~qlixed@181.44.129.13)
[16:04:01] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[16:04:05] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:04:08] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:05:31] <ham5urg> The-Compiler, just to attach some colors to an wx.widget inside __init__. For later usage.
[16:05:37] *** Joins: relight (~relight@user/relight)
[16:06:24] *** Joins: bommolotov (~bommoloto@140.213.35.230)
[16:07:06] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[16:08:33] *** Quits: LenarHoyt (~LenarHoyt@p4ff75e33.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[16:09:57] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[16:10:04] *** Quits: src (~src@user/src) (Quit: Leaving)
[16:10:13] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[16:11:11] *** Quits: FireFish5000 (~FireFish5@user/firefish5000) (Ping timeout: 264 seconds)
[16:11:35] *** Joins: FireFish5000 (~FireFish5@user/firefish5000)
[16:11:50] *** Joins: src_ (~src@user/src)
[16:12:30] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 260 seconds)
[16:13:02] *** Quits: bommolotov (~bommoloto@140.213.35.230) (Quit: Quit)
[16:13:19] *** Quits: CountryNerd (~CountryNe@184.53.1.83) (Remote host closed the connection)
[16:13:41] *** Joins: CountryNerd (~CountryNe@184.53.1.83)
[16:14:00] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567377-189.dhcp.inet.fi)
[16:15:20] <The-Compiler> ham5urg: I would probably indeed write a class for this, so you get things like proper linting and completion and such
[16:15:35] <The-Compiler> ham5urg: and since you need to assign the values anyways, it's not like writing a class is any additional work
[16:16:30] <The-Compiler> ham5urg: https://paste.the-compiler.org/view/0c16dd99
[16:16:50] <The-Compiler> ham5urg: because if you write this in a way that a static type checker can't understand it, there's really no benefit to it, you might as well just use the strings directly
[16:16:56] *** Joins: execi (~execi@dgs10myjzfmbmmtc2bcct-3.rev.dnainternet.fi)
[16:17:29] *** Joins: timkofu (~timkofu@user/timkofu)
[16:17:32] <timkofu> Hi
[16:17:34] *** Quits: rundown (~eb0t@90.199.165.149) (Ping timeout: 258 seconds)
[16:17:40] *** Quits: execi (~execi@dgs10myjzfmbmmtc2bcct-3.rev.dnainternet.fi) (Client Quit)
[16:17:54] *** Joins: bommolotov (~bommoloto@140.213.0.190)
[16:18:57] <The-Compiler> hey
[16:19:12] <bommolotov> Hey
[16:19:31] *** Joins: rundown (~eb0t@90.198.61.154)
[16:19:48] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[16:20:25] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Quit: WeeChat 3.3)
[16:20:56] *** Joins: zeden (~zeden@user/zeden)
[16:23:35] *** Joins: RasnCain (~rasncain@ip174-73-119-77.br.br.cox.net)
[16:23:37] *** Joins: zebrag (~chris@user/zebrag)
[16:24:02] *** Quits: clarkk (~clarkk@84.247.50.57) (Quit: Leaving)
[16:24:19] <mage> what tool do you recommend for a private Pypi-like server? I've found devpi but are there any others?
[16:24:33] *** Joins: clarkk (~clarkk@84.247.50.45)
[16:24:52] *** Quits: Mattiaslndstrm (~Mattiasln@h-98-128-223-118.NA.cust.bahnhof.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:25:05] <SnoopJ> mage, devpi is the only one I've heard of. Is there something missing from or that you dislike about devpi?
[16:25:38] <mage> SnoopJ: it seems to take a lot of memory
[16:26:09] *** Joins: marcello42 (~mp@p200300dfaf0f5a01bb353528c1bb1373.dip0.t-ipconnect.de)
[16:26:37] <mage> ~2GB of RAM here
[16:27:14] *** Quits: elkclone (~elkclone@user/elkclone) (Quit: Leaving)
[16:28:18] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 258 seconds)
[16:28:55] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 252 seconds)
[16:29:02] <SnoopJ> mage, are you running devpi-web? Seems like the default indexer it uses for search has a large memory footprint
[16:30:06] *** Joins: dez (uid92154@user/dez)
[16:30:11] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[16:30:32] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:c44a:b5cb:7a3c:6b1c) (Quit: Leaving)
[16:30:33] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[16:30:46] <mage> ah, should be that yes
[16:30:46] *** Joins: bloody (~bloody@user/bloody)
[16:30:48] <mage> thanks
[16:31:03] *** Joins: djhankb (~djhankb@208.113.164.68)
[16:31:04] <SnoopJ> try with --indexer-backend=null to disable it
[16:31:30] *** Quits: legola (~legola@46.235.101.181) (Remote host closed the connection)
[16:32:28] *** Joins: iomari891 (~iomari891@105.112.138.38)
[16:39:30] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[16:39:42] *** Quits: bommolotov (~bommoloto@140.213.0.190) (Read error: Connection reset by peer)
[16:40:27] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[16:40:52] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[16:41:34] *** Quits: Tas-sos (~Tas-sos@ppp005054070054.access.hol.gr) (Ping timeout: 252 seconds)
[16:42:20] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[16:43:37] *** Joins: Tas-sos (~Tas-sos@46-219-149.adsl.cyta.gr)
[16:43:56] *** Joins: fikran (~fikran@user/fikran)
[16:44:41] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 245 seconds)
[16:44:54] *** Quits: Strom (strom@fedora/strom) ()
[16:45:15] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 260 seconds)
[16:45:56] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[16:46:17] *** Quits: Derailed_ (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com) (Quit: ZNC - https://znc.in)
[16:46:21] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[16:46:25] *** Joins: StormDancer (~stormdanc@185.245.86.123)
[16:46:35] *** Joins: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com)
[16:46:40] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[16:46:47] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[16:46:51] *** Quits: y1n (~y1n@77.119.167.58.wireless.dyn.drei.com) (Remote host closed the connection)
[16:47:00] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[16:47:29] *** Joins: Strom (strom@fedora/strom)
[16:47:30] *** Joins: brabrax (~brabrax@user/brabrax)
[16:47:30] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[16:48:38] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[16:49:06] *** Joins: aselman4 (~aselman4@136.2.32.181)
[16:49:20] *** Quits: aselman4 (~aselman4@136.2.32.181) (Client Quit)
[16:50:55] *** Quits: StormDancer (~stormdanc@185.245.86.123) (Ping timeout: 252 seconds)
[16:51:56] *** Joins: sagax (~sagax_nb@user/sagax)
[16:52:12] *** Joins: Macuser (~Macuser@216.30.159.201)
[16:55:55] *** Joins: Julian (~tos9@python/site-packages/Julian)
[16:58:49] *** Quits: ham5urg (~ham5urg@p200300d1671129005c59fed3240d00af.dip0.t-ipconnect.de) (Quit: Leaving)
[16:58:52] *** Quits: RasnCain (~rasncain@ip174-73-119-77.br.br.cox.net) (Remote host closed the connection)
[17:00:43] *** Joins: ham5urg (~ham5urg@p200300d1671129005c59fed3240d00af.dip0.t-ipconnect.de)
[17:01:09] <p-i-> Can I do `A = ~A` in place?
[17:01:14] <p-i-> (for a numpy array)
[17:01:37] <SnoopJ> p-i-, yes, np.logical_not(A, out=A)
[17:01:48] <p-i-> Thanks!
[17:03:43] <ham5urg> Is there a way to check a "path of a file" in that way that the file is not existent and that it "could be" created?
[17:04:44] <SnoopJ> ham5urg, `pth = Path("/path/to/file"); if not pth.exists(): pth.touch()`
[17:05:05] *** Joins: xiongxin (~quassel@113.116.32.4)
[17:05:40] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[17:05:44] <Julian> ham5urg: What will you do in each case?
[17:05:54] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[17:06:08] <Julian> ham5urg: A file can exist (or not exist) when you check, and then by the time you do whatever you want to do, it can then not exist (or exist)
[17:06:17] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[17:06:39] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[17:06:39] <ham5urg> Julian, SnoopJ, I hoped to find a dry-run creation of a file to check if the path is valid.
[17:07:12] <ham5urg> to check e.g. user rights to that directory and/or wrong path-names
[17:07:30] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[17:07:36] <SnoopJ> ham5urg, you can just touch() it if you don't really care if it does or does not exist.
[17:07:40] <The-Compiler> ham5urg: you can check for things like that (existance of the parent directory and permissions), but you can never be sure until you try
[17:07:48] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[17:07:50] <SnoopJ> but if you care about existence, normally you check existence.
[17:08:27] <ham5urg> ok
[17:08:50] <phy1729> ham5urg: https://docs.python.org/3/library/os.html#os.access
[17:09:20] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[17:09:37] *** Quits: vladoski (~vladoski@2001:b07:add:d406:2028:afe9:4375:ff99) (Ping timeout: 252 seconds)
[17:09:40] *** Joins: de-facto_ (~de-facto@user/de-facto)
[17:09:42] *** Quits: marcello42 (~mp@p200300dfaf0f5a01bb353528c1bb1373.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[17:09:49] *** Joins: semeion (~semeion@user/semeion)
[17:10:06] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 276 seconds)
[17:12:33] *** de-facto_ is now known as de-facto
[17:13:01] *** Quits: timkofu (~timkofu@user/timkofu) (Quit: leaving)
[17:14:30] *** Joins: jmiehe (~jmm@user/jmiehe)
[17:15:16] *** Parts: jmiehe (~jmm@user/jmiehe) ()
[17:15:28] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:4def:4e95:4385:6486)
[17:16:01] *** Quits: CountryNerd (~CountryNe@184.53.1.83) (Read error: Connection reset by peer)
[17:17:00] *** Joins: CountryNerd (~CountryNe@184.53.1.83)
[17:17:15] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Quit: Leaving)
[17:18:22] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[17:18:41] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[17:19:08] *** Joins: brabrax (~brabrax@user/brabrax)
[17:19:26] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Remote host closed the connection)
[17:19:53] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[17:23:06] *** Joins: upsala (~zcb@185.213.155.160)
[17:23:12] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Remote host closed the connection)
[17:23:35] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[17:23:45] *** Joins: faceface (~faceface@user/faceface)
[17:24:17] <ham5urg> phy1729, thanks, it works
[17:24:31] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[17:25:02] *** Quits: kosh (~kosh@user/kosh) (Quit: Leaving)
[17:27:21] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[17:28:08] *** Joins: brabrax (~brabrax@user/brabrax)
[17:29:57] *** Joins: grooverman (~grooverma@177.95.12.14)
[17:30:10] <rendar> is Motor the only option for MongoDB+asyncio?
[17:30:34] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[17:31:07] *** Joins: djhankb (~djhankb@208.113.164.68)
[17:31:36] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[17:31:52] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:32:05] *** Joins: akk (~akk@75.161.146.115)
[17:32:19] *** Joins: magla (~gelignite@55d47f25.access.ecotel.net)
[17:34:04] *** Quits: swensson (~swensson@213.88.131.10) (Quit: Client closed)
[17:34:23] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[17:34:24] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[17:34:35] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.3)
[17:34:38] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[17:35:11] *** Joins: brabrax (~brabrax@user/brabrax)
[17:37:19] *** Joins: jmiehe1 (~Thunderbi@user/jmiehe)
[17:37:41] *** Quits: DPA (~DPA@2a05:41c0:4:604::a3c:10d) (Ping timeout: 258 seconds)
[17:38:48] *** Joins: StormDancer (~stormdanc@185.245.86.121)
[17:38:55] *** Quits: jmiehe1 (~Thunderbi@user/jmiehe) (Client Quit)
[17:40:48] *** Quits: xiongxin (~quassel@113.116.32.4) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[17:41:20] *** Joins: raxor2k (~raxor2k@78.158.254.247)
[17:41:38] <raxor2k> "'Depends' object has no attribute 'add'" ??
[17:41:46] <raxor2k> suddenly of all the code is not working..erh...
[17:42:51] *** Quits: DeaDSouL (~DeaDSouL@45.91.20.148) (Quit: leaving)
[17:43:09] *** Joins: vladoski (~vladoski@2001:b07:add:d406:2028:afe9:4375:ff99)
[17:43:19] <vladoski> what's the point of generator.send(val)
[17:43:28] *** Joins: DeaDSouL (~DeaDSouL@194.195.91.4)
[17:43:35] *** Quits: StormDancer (~stormdanc@185.245.86.121) (Ping timeout: 260 seconds)
[17:44:10] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[17:44:25] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[17:46:02] <ham5urg> When I try to open a file via pathlib.Path(user_generated_input) and the user enter something like my_path_with_spaces, how do I handle these special chars?
[17:46:45] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: CodePoint)
[17:46:48] <grym> ham5urg: spaces are legal in file names
[17:46:57] <grym> it should just work
[17:47:30] <SnoopJ> vladoski, sometimes we want to write generators whose state can be manipulated from outside, and send() is the typical way that's implemented.
[17:47:39] <Luistro_> it's just that in linux generally it's better if you don't use spaces because it messes up the syntax of commands
[17:47:40] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[17:48:19] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:48:48] *** Joins: ravan (~ravan@user/ravan)
[17:49:55] *** Joins: DPA (~DPA@2a05:41c0:4:604::a3c:10d)
[17:50:06] *** vd19 is now known as vd
[17:50:11] *** Quits: FireFish5000 (~FireFish5@user/firefish5000) (Ping timeout: 264 seconds)
[17:50:35] *** Joins: FireFish5000 (~FireFish5@user/firefish5000)
[17:51:03] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[17:51:32] *** Quits: DeaDSouL (~DeaDSouL@194.195.91.4) (Quit: leaving)
[17:51:40] *** Joins: Mattiaslndstrm (~Mattiasln@h-98-128-223-118.NA.cust.bahnhof.se)
[17:51:46] *** Quits: EGH_z (~EGH@185.25.195.104) (Ping timeout: 265 seconds)
[17:51:51] <bjs> raxor2k: well if that's the error, then probably you were trying to access .add on a 'Depends' type object, and that type doesn't have an add
[17:52:04] <SnoopJ> vladoski, https://bpa.st/D5TQ
[17:53:02] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:53:08] <ham5urg> grym, yes, thanks
[17:53:14] *** Joins: burakcank_ (~burakcank@159.146.40.45)
[17:53:21] <theprophet> what is django.contrib.contenttypes in settings.py - installed apps? can somebody tell me a description of this? because google wont show a thing.
[17:53:32] *** Joins: DeaDSouL (~DeaDSouL@194.195.91.4)
[17:53:59] <theprophet> sorry for asking django question python, but django channel is dead.
[17:54:07] <theprophet> in python*
[17:55:58] *** Quits: Mattiaslndstrm (~Mattiasln@h-98-128-223-118.NA.cust.bahnhof.se) (Client Quit)
[17:57:17] *** Joins: Macuser (~Macuser@216.30.159.201)
[17:57:28] *** Quits: DPA (~DPA@2a05:41c0:4:604::a3c:10d) (Ping timeout: 252 seconds)
[17:57:30] *** Joins: EGH (~EGH@185.25.195.104)
[17:57:36] <SnoopJ> django questions are on-topic here
[17:57:59] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 264 seconds)
[17:58:11] *** Joins: han-solo (~hanish@user/han-solo)
[17:58:17] <theprophet> nice
[17:59:17] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[17:59:27] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567377-189.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:59:55] *** Joins: Croves (~Croves@2804:58:c196:3800:b584:e62e:44c6:fcff)
[18:00:00] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: AA TOO NEE ZUBARALHADEEEEEEEEEEEED)
[18:00:08] *** Quits: burakcank_ (~burakcank@159.146.40.45) (Quit: Leaving)
[18:00:50] *** Joins: burakcank_ (~burakcank@159.146.40.45)
[18:01:28] <d3x> theprophet, https://docs.djangoproject.com/en/3.2/ref/contrib/contenttypes/
[18:02:07] <d3x> It's an application that provides a ContentType model that's used for things like generic foreign keys
[18:02:10] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[18:02:50] *** Quits: EGH (~EGH@185.25.195.104) (Ping timeout: 260 seconds)
[18:02:52] *** Quits: burakcank_ (~burakcank@159.146.40.45) (Client Quit)
[18:03:10] *** Joins: burakcank_ (~burakcank@159.146.40.45)
[18:03:26] <theprophet> d3x what is generic foreign keys?
[18:04:09] <Croves> Anyone familiar with Pandas can help me group this data by product and brand? I have sales data by product and brand, and need to group by product and get only the most popular brands https://bpa.st/LLJQ
[18:04:40] <d3x> It's sort of like a regular ForeignKey in that it is a relation to another model, except the generic one can reference any other model
[18:04:41] *** Joins: DPA (~DPA@2a05:41c0:4:604::a3c:10d)
[18:04:44] *** Quits: clarkk (~clarkk@84.247.50.45) (Quit: Leaving)
[18:05:18] <d3x> It's actually represented by a pair of fields - a foreign key to the ContentType and a field that keeps an ID of the related model instance
[18:05:51] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[18:06:29] *** Joins: SteveR (~SteveR@103.215.168.1)
[18:06:35] <d3x> You can read more on that documentation page I linked, I think it explains the use case quite nicely
[18:06:36] <theprophet> d3x ok , thank you
[18:08:51] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-567377-189.dhcp.inet.fi)
[18:09:19] *** Joins: EGH (~EGH@185.25.195.104)
[18:09:21] *** Quits: JerryXiao (~JerryXiao@user/jerryxiao) (Quit: Bye)
[18:09:34] *** Quits: DPA (~DPA@2a05:41c0:4:604::a3c:10d) (Ping timeout: 252 seconds)
[18:09:35] *** Quits: Luistro_ (~Luistro_@user/luistro/x-0623251) (Quit: Leaving)
[18:11:27] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[18:12:18] *** Quits: relight (~relight@user/relight) (Quit: Konversation terminated!)
[18:13:32] *** Joins: JerryXiao (~JerryXiao@user/jerryxiao)
[18:14:12] *** Quits: burakcank_ (~burakcank@159.146.40.45) (Remote host closed the connection)
[18:15:02] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:15:08] *** Joins: burakcank_ (~burakcank@159.146.40.45)
[18:15:34] *** Joins: R035N3R (~phobos@user/r035n3r)
[18:16:49] *** Quits: Croves (~Croves@2804:58:c196:3800:b584:e62e:44c6:fcff) (Quit: Client closed)
[18:17:23] *** Quits: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Ping timeout: 265 seconds)
[18:19:48] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 265 seconds)
[18:20:01] *** Quits: lxwulf (~lxwulf@user/lxwulf) (Quit: Leaving)
[18:21:46] *** Quits: wovixo (~wovixo@128.104.205.49) (Read error: Connection reset by peer)
[18:25:05] *** Quits: ircuser-1 (~Johnny@71.63.241.168) (Read error: Connection reset by peer)
[18:27:12] *** Joins: paulmcquad (~gamer@78.17.229.141)
[18:27:42] *** Joins: weedmic (~weedmic@109-186-1-92.bb.netvision.net.il)
[18:28:39] *** Joins: Payam (~Payam@138.106.57.131)
[18:30:31] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[18:30:33] *** Joins: daoudr (~daoudr@2a02:1205:c681:1650:8901:9592:757a:a93f)
[18:31:02] *** Joins: djhankb (~djhankb@208.113.164.68)
[18:31:56] *** Joins: zmt00 (~zmt00@user/zmt00)
[18:32:39] *** Quits: Fossil (~Fossil@95.85.23.165) (Quit: Bye)
[18:32:53] *** Joins: Fossil (~Fossil@95.85.23.165)
[18:35:32] *** Joins: ldericher (~LDer@pantalaimon.yavook.de)
[18:36:10] *** Joins: noyb (~noyb@user/noyb)
[18:36:47] *** Joins: legola (~legola@46.235.101.181)
[18:37:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[18:39:54] *** Joins: waynew (~wayne@user/waynew)
[18:40:18] *** Quits: weedmic (~weedmic@109-186-1-92.bb.netvision.net.il) (Quit: Konversation terminated!)
[18:42:09] *** Quits: burakcank_ (~burakcank@159.146.40.45) (Remote host closed the connection)
[18:42:53] *** Joins: burakcank_ (~burakcank@159.146.40.45)
[18:45:06] *** Joins: Guddu (~Guddu@200-90-225-124.baf.movistar.cl)
[18:47:09] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Quit: Leaving)
[18:47:44] *** Joins: StormDancer (~stormdanc@185.245.86.121)
[18:48:10] <sleepingforest> using pydantic, say I have a field x: List[Tuple[int, str]], but i want to be able to do x.append(int) where i transform the input automatically to Tuple[int, str]. is this possible?
[18:48:55] *** Quits: PublicWifi (~PublicWiF@user/publicwifi) (Ping timeout: 260 seconds)
[18:49:15] <rindolf> sleepingforest: write a helper function?
[18:49:42] *** Quits: irrgit (~irrgit@192.241.175.183) (Remote host closed the connection)
[18:50:27] <sleepingforest> rindolf: as in x.append(helper(int)) or a helper function on __new__/__init__ for a custom type?
[18:50:30] <bjs> sleepingforest: no, pydantic cannot intercept calls to the underlying list object itself.
[18:50:42] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:50:55] <bjs> sleepingforest: so you'll either have to use something that isn't a list,  or create a method that does the conversion and appends for you
[18:51:01] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[18:51:15] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[18:51:54] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[18:52:26] *** Quits: StormDancer (~stormdanc@185.245.86.121) (Ping timeout: 258 seconds)
[18:53:10] *** Joins: rolandog[m] (~rolandogm@2001:470:69fc:105::972f)
[18:53:11] <sleepingforest> bjs: makes sense. am i correct in thinking that if i extend List, once a pydantic model is instantiated it wont see the custom List class because internally converts it into a list?
[18:53:17] *** Joins: fikran (~fikran@user/fikran)
[18:53:19] <fweht> could it be that numpy arrays returned from matplotlib.pyplot.imread are readonly when fed with a jpg image but not when fed with a png?  it seems so weird, could that be really the case?
[18:53:20] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[18:53:53] <bjs> sleepingforest: pydantic does some conversions automatically https://pydantic-docs.helpmanual.io/usage/models/#data-conversion .  `List` is not a type you can extend so I'm not sure what you mean
[18:54:08] <SnoopJ> fweht, have you checked .flags on the resulting ndarrays?
[18:54:09] *** Quits: legola (~legola@46.235.101.181) (Remote host closed the connection)
[18:54:15] <SnoopJ> specifically the WRITEABLE flag
[18:54:17] <DnzAtWrk> can you index a list to get the first element twice?
[18:54:18] <fweht> SnoopJ: will do!
[18:54:26] <DnzAtWrk> [0, 1, 2, 3] to [0, 1, 2, 3, 0]
[18:54:44] <AhmedAmerican> am trying to automate the signup process for a website. through a normal browser, i can see the request receive 302 redirect. but using my code , i keep getting 200 with no redirect to the next page. i tried to copy the cookies from the browser and i can see the request went well. how can i automate that within my code ? https://bpa.st/SBWQ
[18:54:53] <bjs> sleepingforest: I don't quite know how you wanted to turn an int into an (int, str) pair exactly. But you could write a `class Pairs: def append(x: int) -> None:` then use Pairs rather than List[Tuple[...]]
[18:54:57] <fweht> SnoopJ: i just did np.array(imread(...)) which seems to work as well, but still surprising behaviour
[18:55:21] *** Joins: elkalamar__ (elkalamar@gateway/vpn/airvpn/elkalamar)
[18:55:25] <ldericher> DnzAtWrk, `[*myList, myList[0]]`?
[18:55:34] <DnzAtWrk> bit ugly, but I guess
[18:55:37] *** Joins: tg (~tg@rockylinux/infra/tg)
[18:55:42] <sleepingforest> bjs: so i've tried this with a custom Tuple, typed with Custom[int, str], created @property on the class, which works when the object is instantiated and accessed on its own, but once assigned to the pydantic field, it was converted to a tuple internally
[18:55:45] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[18:56:02] *** Joins: kosh (~kosh@user/kosh)
[18:56:02] <bjs> sleepingforest: I don't know what "a custom Tuple" is
[18:56:11] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 264 seconds)
[18:56:13] <sleepingforest> bjs: class Custom(tuple):
[18:56:22] <bjs> sleepingforest: why inherit tuple at all?
[18:56:23] <bjs> just use Custom
[18:56:36] *** Joins: brabrax (~brabrax@user/brabrax)
[18:56:51] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:57:03] <bjs> classes don't always have to inherit from some other data structure,  you can just make your own class with its own methods and use that
[18:57:31] <SnoopJ> fweht, it could be that you're getting a copy sometimes, and a view other times. I usually load images with the Pillow library, though.
[18:57:57] <sleepingforest> bjs: i understand, i was following examples because I wanted to set specific types per item index
[18:58:15] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 260 seconds)
[18:59:29] *** Parts: paulmcquad (~gamer@78.17.229.141) (Konversation terminated!)
[18:59:39] <sleepingforest> bjs: ill try to sort it out with just a custom model, thanks
[19:00:49] *** Quits: Payam (~Payam@138.106.57.131) (Ping timeout: 256 seconds)
[19:01:22] <ldericher> DnzAtWrk, depending on how you use it, `(a*2)[:len(a)+1]` or whatever you make of it might be less ugly
[19:02:19] <SnoopJ> DnzAtWrk, `newlst = [*lst, lst[0]]` is one spelling
[19:02:40] <SnoopJ> oh, sorry, that's already been suggested
[19:02:44] <SnoopJ> what do you find ugly about it?
[19:02:50] *** Joins: PublicWifi (~PublicWiF@user/publicwifi)
[19:03:26] *** Joins: white5moke (~white5mok@ip72-219-109-30.oc.oc.cox.net)
[19:03:33] <DnzAtWrk> having to repeat the list twice
[19:04:10] <jmiehe> SnoopJ: I mean something like `lst[:;0]` might be more compact, but afaik that syntax doesn't exist
[19:04:24] <SnoopJ> jmiehe, there's not syntax for this, no
[19:04:52] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:05:02] <jmiehe> btw, I am ldericher ~ playing with an IRC bouncer. Might switch entirely.
[19:05:03] <SnoopJ> some objects (numpy's ndarray in particular comes to mind) do have indexing semantics that allow for it, but not the builtins
[19:05:29] *** Quits: brettgilio (~brettgili@x-node.gq) (Quit: Leaving...)
[19:07:24] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1) (Quit: Leaving)
[19:07:50] <vladoski> SnoopJ, understood thanks
[19:08:09] <raxor2k> can someone please help me, this code always used to work.. I am getting a meltdown right now!!!! https://bpa.st/WYVQ
[19:08:20] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[19:08:44] *** Joins: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[19:09:01] <lesshaste> how can I get the square root of numbers as big as 2**2048 in python?
[19:09:20] <gitesh> can I use `inspect.getmro(type(image))` without using type in that?
[19:09:22] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[19:09:31] <gitesh> It gives error
[19:10:48] *** Telvana2 is now known as Telvana
[19:11:03] *** Joins: brettgilio (~brettgili@x-node.gq)
[19:11:27] <grym> lesshaste: bigfloat, possibly? https://github.com/mdickinson/bigfloat
[19:11:42] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[19:12:17] <SnoopJ> lesshaste, numpy can do that if you declare the dtype as float128: `np.sqrt(np.float128(2**2048))` but you probably want something a little more purpose-specific.
[19:12:31] <wib_jonas> the square root is 2**1024
[19:12:38] <SnoopJ> wib_jonas, they said "numbers as big as"
[19:12:55] * SnoopJ assumed they want sqrt() over the entire float range [0, 2**2048]
[19:13:52] <wib_jonas> yeah...
[19:14:06] <sleepingforest> ok, i think my confusion is I want to create a class / type that i can do x: Custom[int, str], y: Custom[str, str], and i do not know how to do this
[19:14:20] <SnoopJ> but yes if you already know the exponent, just divide by two
[19:14:58] <lesshaste> SnoopJ,  float128 doesn't seem big enough
[19:15:09] <lesshaste> grym, thanks I will take a look at that
[19:15:18] *** Joins: whoopla (~user@072-031-026-137.res.spectrum.com)
[19:15:54] *** Joins: StormDancer (~stormdanc@185.245.86.121)
[19:16:15] <SnoopJ> lesshaste, why do you say that?
[19:16:19] *** Joins: tWqaq (~tWqaq@240e:389:5da6:cc00:af4:a725:ace2:1ed9)
[19:16:20] <lesshaste> grym, I can't seem to pip install that
[19:16:41] <lesshaste> SnoopJ, the number has 2048 bits and I assume float128 has 128
[19:17:23] <SnoopJ> lesshaste, yes, 15 of which are for the exponent, and 2048 is only 2**11
[19:17:51] <SnoopJ> So I'm not really sure why you think it's "not big enough", this value is represented pretty well by a float128
[19:17:52] <grym> lesshaste: it has non-python dependencies you need to pre-install
[19:19:00] <whoopla> Hey yall, I'm writing a PoC program to query an API and I'm having trouble with some of the logic in this for loop. I have the loop iterating through an array, and then I want to assign each result of the iteration to a unique variable for each loop. I'd like the variable to be available for post-processing outside of the loop. Here is my code, https://bpa.st/E5VQ. I'm a noob so any and all tips
[19:19:03] *** Quits: horseface (~horseface@user/horseface) (Quit: STOP, DROP, AND ROLL. IT IS HAMMER TIME!!!)
[19:19:06] <whoopla> appreciated, but this is just PoC so it doesn't need to be perfect. Thanks in advanced :)
[19:19:41] <whoopla> FWIW the first loop works, it just overwrites the variable on each loop :P
[19:20:26] <grym> lesshaste: https://bigfloat.readthedocs.io/en/latest/#prerequisites
[19:22:01] *** Joins: jay-m1262 (~jay-m@129.0.77.217)
[19:22:10] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[19:23:09] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[19:23:20] *** Quits: StormDancer (~stormdanc@185.245.86.121) (Ping timeout: 260 seconds)
[19:23:40] *** Joins: hendursaga (~weechat@user/hendursaga)
[19:23:52] *** Quits: magla (~gelignite@55d47f25.access.ecotel.net) (Quit: Stay safe!)
[19:24:47] *** Joins: horseface (~horseface@user/horseface)
[19:24:57] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[19:25:47] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 258 seconds)
[19:25:52] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[19:28:00] *** Quits: anonymeowo (~anonymeow@5.34.180.230) (Read error: Connection reset by peer)
[19:28:32] *** Joins: anonymeowo (~anonymeow@5.34.180.230)
[19:28:40] <bjs> sleepingforest: typing.Generic -- although I am unsure what pydantic will think of them
[19:29:27] <rendar> is Motor the only option for MongoDB+asyncio?
[19:29:44] <han-solo> raxor2k: are you sure it used to work like that ?
[19:29:45] *** Quits: Gerula (~Gerula@user/gerula) (Quit: Leaving)
[19:30:00] *** Joins: rany (~rany@user/rany)
[19:30:50] *** Joins: Barones (~Barones@2804:48dc:8500:0:5635:5e6d:7349:856)
[19:31:17] *** Quits: wolfgang (~wolfgang@101.174.167.116) (Remote host closed the connection)
[19:31:51] *** Joins: SallyAhaj_ (~SallyAhaj@user/sallyahaj)
[19:33:13] *** Joins: ayusta (Thunderbir@gateway/vpn/protonvpn/ayustae)
[19:33:14] *** Quits: SteveR (~SteveR@103.215.168.1) (Quit: Client closed)
[19:33:36] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[19:34:25] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Ping timeout: 260 seconds)
[19:35:02] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 260 seconds)
[19:35:03] *** ayusta is now known as ayustae
[19:36:04] *** Joins: cek (uid23454@id-23454.tinside.irccloud.com)
[19:36:25] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[19:36:28] <cek> will this reset the iterator? -- `next(x for x in nses if x.get_attr('device', 'path') == dev)`
[19:36:52] <cek> it looks like nses gets "rewound" or the condition happens only once.
[19:36:57] *** Joins: white_magic (~white_mag@23.19.10.49)
[19:37:05] *** Quits: justHaunt (~justache@user/justache) (Read error: Connection reset by peer)
[19:37:09] <SnoopJ> cek, is `nses` actually an iterator, or is it an iterable object?
[19:38:21] <cek> how do I know? it's a for x in y: yield(blah)
[19:38:21] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[19:38:23] *** Joins: justHaunt (~justache@user/justache)
[19:38:47] <han-solo> raxor2k: https://bpa.st/SGXQ # could you try that ?
[19:39:14] <white_magic> Anybody here use postgresql in an async manner? I found this nifty guide: https://testdriven.io/blog/fastapi-sqlmodel/.. but I'm a bit confused why they first say to use 'psycopg' ("psycopg2-binary==2.9.1"), but later say "replace Psycopg with asyncpg". What's the purpose of this?
[19:39:21] *** Quits: casastorta (~casastort@dc4.krivokuca.net) (Quit: ZNC 1.8.2 - https://znc.in)
[19:39:26] <cek> it's a<generator object
[19:40:31] <han-solo> white_magic: i think, because psycopg2 is not support async ?
[19:41:01] *** Joins: casastorta (~casastort@dc4.krivokuca.net)
[19:41:05] <SnoopJ> cek, iterators are not typically 'reset', but it really depends on the semantics of the object you have in front of you. A generator is an iterator proper, and nothing in what you shared suggests a reset
[19:41:26] <white_magic> han-solo: I think that may be the case, but I wonder if there was something that 'psycopg2' actually accomplished (for a brief while) in that guide. Maybe it performs some preliminary step that asyncpg is not capable of doing?
[19:41:34] <han-solo> white_magic: you can see, they turned all those sync methods to async
[19:42:04] <cek> SnoopJ: will the condition evaluate each time it iterates?
[19:42:30] *** Joins: superboot (~agentgasm@user/superboot)
[19:42:38] <han-solo> psycopg can only be run in async, but fastapi supports both, i think. If your method is using `def` instead of `async def` fastapi run that in a thread or something
[19:42:38] <cek> will `x` and `dev` evaluate each time?
[19:42:59] *** Quits: thiras (~thiras@user/thiras) (Quit: Leaving)
[19:43:32] <han-solo> er, *psycopg can only be run in *sync**
[19:44:21] <white_magic> han-solo: OK, I think I get it. This is because the guide on that page is continuing from a previous guide, which used psycopg2 (in a non async way)
[19:45:05] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[19:45:15] *** Joins: alzgh (~alzgh@user/alzgh)
[19:45:22] *** Joins: SallyAhaj__ (~SallyAhaj@user/sallyahaj)
[19:45:25] <SnoopJ> cek, yes
[19:45:29] <han-solo> yeah, but be aware, if your method is async, and you do something non-asyncy, it will block the event loop, i think
[19:46:03] <SnoopJ> cek, the name `dev` isn't modified by the generator though, so it will probably be the same throughout that, unless the generator is doing evil to modify global state
[19:46:06] <vladoski> what's the most efficient way to serialize an orm sqlalchemy object into a dict
[19:46:15] <vladoski> is there something automatic?
[19:46:27] <SnoopJ> cek, isn't modified by the expression fed to next(), that is. I have no idea what `nses` does
[19:46:28] <han-solo> oooh, pydantic is build for those no ?
[19:46:35] <han-solo> s/d/t/
[19:46:43] <vladoski> i need to output a simple json that represents that object
[19:46:48] <cek> ok, tnx
[19:47:11] *** Joins: jonaskabrink (~jonaskabr@i5E866619.versanet.de)
[19:47:13] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[19:48:06] *** Quits: SallyAhaj_ (~SallyAhaj@user/sallyahaj) (Ping timeout: 260 seconds)
[19:48:12] *** Quits: tWqaq (~tWqaq@240e:389:5da6:cc00:af4:a725:ace2:1ed9) (Quit: Leaving)
[19:48:44] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[19:49:13] <white_magic> han-solo: noted. I'm creating this system where a process will look at data that needs to get retrieved and will asynchronously download it from API(s), then write to db asynchronously, as well. So this will be a somewhat isolated and automated process.. the rest of my application can be synchronous, I think. E.g. the parts that will note what
[19:49:13] <white_magic> needs to get downloaded. I just need to come up with a jobs/queue system that makes sense. I was thinking of maybe just using a db for this purpose a well. E.g. have a 'jobs' table that has a field like 'is_processing'.  Or should I be looking at some comprehensive jobs/orchestration framework for this?
[19:49:23] <whoopla> vladoski: Can you pastebin an example sqlalchemy object?
[19:49:35] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Ping timeout: 260 seconds)
[19:49:38] <whoopla> I've been messing around with json and dicts lately, might have an idea.
[19:49:42] *** Quits: mrwick (~mrwick@user/mrwick) (Quit: leaving)
[19:50:54] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:50:54] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[19:52:34] <grym> vladoski: possibly https://sqlmodel.tiangolo.com/ might help
[19:53:03] <grym> vladoski: (because if your orm object is also a pydandic class, then you can just call .dict() on it)
[19:54:21] <whoopla> Also, does anybody have an ideas on my above issue?
[19:55:03] <lesshaste> grym, thanks
[19:56:06] *** Quits: burakcank_ (~burakcank@159.146.40.45) (Remote host closed the connection)
[19:56:45] *** Joins: Gerula (~Gerula@user/gerula)
[19:56:47] <gitesh> How does function is saved in python?
[19:56:55] *** Quits: mekhami (~ldv@2605:a601:aaf2:ef00:383f:a991:12f0:4f28) (Quit: WeeChat 2.8)
[19:57:09] *** Joins: burakcank_ (~burakcank@159.146.40.45)
[19:57:17] <grym> gitesh: could you rephrase that
[19:57:26] *** Joins: ballingt (sid190590@id-190590.helmsley.irccloud.com)
[19:57:27] *** Joins: EgonX_ (~EgonX@12.191.251.242)
[19:58:00] *** Quits: Gerula (~Gerula@user/gerula) (Remote host closed the connection)
[19:58:14] <DnzAtWrk> why does my new python3 created with virtualenv not have requests?
[19:58:15] <gitesh> grym: I want to know that because function is an object in python , when I call a function
[19:58:25] *** Joins: Gerula (~Gerula@user/gerula)
[19:59:00] <gitesh> grym: somewhere I read it's stored in a string in js
[19:59:09] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com)
[19:59:10] <mav`rik> DnzAtWrk: why would it have requests when requests is a third-party package?
[19:59:12] *** Joins: mat001 (~mat001@213.143.69.121)
[19:59:22] *** Quits: burakcank_ (~burakcank@159.146.40.45) (Remote host closed the connection)
[19:59:22] <SnoopJ> DnzAtWrk, because the site of the host interpreter isn't copied into the venv. You usually install the packages you want into a venv after creation.
[19:59:25] <DnzAtWrk> because it's in the default python in debian
[19:59:28] <DnzAtWrk> when you install python3
[19:59:48] <SnoopJ> In the system site, which venvs don't have access to by default (and it's not a great idea to use Debian's site)
[20:00:10] <DnzAtWrk> so pip install requests then
[20:00:13] <grym> gitesh: i still don't understand your question
[20:00:17] <DnzAtWrk> I'm still paranoid ever since the urllib fiasco
[20:00:22] <grym> DnzAtWrk: yourvenv/bin/python -m pip install requests
[20:00:26] <SnoopJ> DnzAtWrk, I would spell it `path/to/venv/bin/python3 -m pip install ...` but yes
[20:00:30] *** Joins: burakcank_ (~burakcank@159.146.40.45)
[20:00:43] <gitesh> grym: what will make me a function call an object?
[20:00:49] <SnoopJ> it's too easy to get into situations where `python3` and `pip` point to different places, especially on Debian systems
[20:01:11] <DnzAtWrk> but I didn't use it the last time I created a virtualenv like this
[20:01:16] <DnzAtWrk> and the script with requests worked fine
[20:01:33] <SnoopJ> we've given you our advice, taking or ignoring it is up to you either way
[20:01:53] <SnoopJ> it's possibly your other venv had access to the system site
[20:02:00] <grym> gitesh: i still don't understand your question, sorry
[20:02:03] <DnzAtWrk> so what changed since then and now
[20:02:05] <DnzAtWrk> in debian
[20:02:08] <grym> perhaps someone else can help
[20:02:36] <SnoopJ> DnzAtWrk, it's possible you weren't even using the venv when you ran your script. We can't really answer that question without more information about exactly what you did
[20:02:56] <DnzAtWrk> No, I specifically always use virtualenv and the created env
[20:03:00] <DnzAtWrk> I never refer to python directly
[20:03:06] <DnzAtWrk> or pip
[20:03:16] <SnoopJ> did you pass --system-site-packages when you made the other venv? Did you modify PYTHONPATH? Did you modify sys.path?
[20:03:20] <DnzAtWrk> no
[20:03:32] <DnzAtWrk> virtualenv -p python3 "${VENV_DIR}"
[20:03:36] <DnzAtWrk> "${VENV_DIR}/bin/pip" install
[20:03:37] <DnzAtWrk> always
[20:03:47] <SnoopJ> oh, you're using virtualenv
[20:04:05] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[20:04:16] <SnoopJ> I'm not sure what extra wrinkles that might introduce, especially if you're using the one Debian provides
[20:04:33] <SnoopJ> in the python3-virtualenv package
[20:05:18] <DnzAtWrk> well, they must have done something
[20:05:23] <DnzAtWrk> didn't realize that it would ever matter
[20:05:27] <SnoopJ> they often do
[20:05:29] <DnzAtWrk> I thought everything was just taken from the same place
[20:05:29] <gitesh> grym: I guess function object has a __code__ attribute and it stores a string?
[20:05:40] <grym> gitesh: i don't think so
[20:05:43] <SnoopJ> gitesh, no, __code__ stores a code object
[20:05:46] *** Joins: magla (~gelignite@55d47f25.access.ecotel.net)
[20:05:55] <SnoopJ> (the output result of the compiler)
[20:06:12] <gitesh> SnoopJ: what is code object?
[20:06:19] <SnoopJ> gitesh, the output result of the compiler
[20:06:42] <gitesh> That's in depth
[20:07:15] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[20:07:57] <SnoopJ> gitesh, look at the section "Internal types > Code Objects" in the data model if you want gory details: https://docs.python.org/3/reference/datamodel.html
[20:08:21] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[20:08:23] * SnoopJ wonders about opening a docs workgroup PR to make things like that easier to link to
[20:08:32] <SnoopJ> err, s/PR/issue/
[20:08:34] *** Quits: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053) (Quit: WeeChat 3.3)
[20:08:38] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 260 seconds)
[20:09:25] *** Quits: jay-m1262 (~jay-m@129.0.77.217) (Ping timeout: 260 seconds)
[20:09:30] <SnoopJ> oh huh, I see the "create an account" nag modal on RealPython.com now. That's annoying.
[20:10:20] *** Quits: Deneb (~johnch@86.111.189.80.dyn.plus.net) (Quit: Leaving)
[20:11:06] *** Joins: jay-m1262 (jay-m@gateway/vpn/protonvpn/jay-m126)
[20:12:58] *** Joins: Sario (sid356235@miraheze/Sario528)
[20:13:18] *** Joins: Inline (~Inline@2a02:908:1252:7a80:89dc:6a58:9f2a:ff3d)
[20:14:47] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Quit: This computer has gone to sleep)
[20:15:00] *** Joins: LenarHoyt (~LenarHoyt@p200300eec7010600fd6e3d0f2bfbac26.dip0.t-ipconnect.de)
[20:18:15] <bjs> gitesh: functions are objects because everything in Python is an object.  They have some attributes and methods. It has a __code__ attribute which stores the actual code (like, the source) of the function (in a condensed format) and a __call__ method (to run the code in the function).  Python did not need to make functions objects at all, other languages choose not to.
[20:19:06] <SnoopJ> it also stores the result of compiling it (i.e. bytecode)
[20:19:23] <SnoopJ> and constants inside the function etc.
[20:19:26] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[20:19:36] <bjs> those are all just "the source" but in a different format
[20:19:49] <bjs> it could just save the literal string source if it wanted, but it'd be inefficient
[20:20:00] <SnoopJ> bjs, I wouldn't call it that, but it's related to the source surely
[20:20:38] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4) (Quit: WeeChat 2.8)
[20:20:57] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[20:21:02] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[20:21:48] *** Joins: whatsupdoc (~whatsupdo@148.64.18.24)
[20:23:11] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[20:23:17] *** Joins: mmercer (daemoen@2605:d100:0:2d:5054:ff:fef0:3953)
[20:23:19] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[20:24:03] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:24:41] *** Quits: jonaskabrink (~jonaskabr@i5E866619.versanet.de) (Quit: jonaskabrink)
[20:25:21] *** Quits: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[20:25:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[20:26:05] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-567377-189.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:27:02] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[20:29:02] *** Joins: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[20:29:38] *** Quits: KevinX_ (~KevinX@94.140.11.212) (Ping timeout: 260 seconds)
[20:30:00] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:30:05] *** Quits: burakcank_ (~burakcank@159.146.40.45) (Remote host closed the connection)
[20:30:09] <whoopla> Re: my earlier question. I've omitted my for loop from my code and set a static variable and will get limited results for now. If anyone has any ideas feel free to chime in. :)
[20:30:58] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[20:31:11] *** Joins: burakcank_ (~burakcank@159.146.40.45)
[20:31:31] *** Quits: burakcank_ (~burakcank@159.146.40.45) (Remote host closed the connection)
[20:31:33] <InPhase> whoopla: See list append.  results = []   for x in range(10):  results.append(x*x)
[20:32:00] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:950f:23bc:c240:5fe1)
[20:32:04] *** Quits: EgonX_ (~EgonX@12.191.251.242) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:32:19] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[20:32:22] <Ninpo> whoopla: you need a list or list of dicts or something if you want to store several different results from iterations
[20:32:36] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[20:32:49] <Ninpo> otherwise as you say each iteration will just overwrite the name
[20:32:49] *** Joins: burakcank_ (~burakcank@159.146.40.45)
[20:32:58] *** Quits: jamiejackson (~jamiejack@207.172.87.34) (Quit: Connection closed)
[20:33:17] *** Joins: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053)
[20:34:41] *** Quits: cyberpear (uid364019@fedora/cyberpear) (Quit: Connection closed for inactivity)
[20:35:33] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[20:36:06] *** Joins: ano (~ano@user/ano)
[20:36:20] <aphysically> SnoopJ: I started looking into the portage dependency resolution to see if there were other easy routes to improvement and I found something interesting
[20:36:35] *** Quits: white_magic (~white_mag@23.19.10.49) (Ping timeout: 256 seconds)
[20:36:45] <aphysically> as chromeOS/chromebooks are gentoo-based, google is actually working on this problem: https://chromium-review.googlesource.com/c/chromiumos/chromite/+/2030050
[20:37:02] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[20:37:16] <aphysically> looks like it hasn't been touched for a little while though
[20:37:55] <whoopla> InPhase, Ninpo: Thanks for the tips :)
[20:39:19] *** Quits: waynew (~wayne@user/waynew) (Quit: WeeChat 2.9)
[20:40:50] *** Joins: han-solo (~hanish@user/han-solo)
[20:43:03] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[20:43:14] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[20:45:00] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 260 seconds)
[20:46:35] *** Quits: jay-m1262 (jay-m@gateway/vpn/protonvpn/jay-m126) (Ping timeout: 264 seconds)
[20:48:04] *** Joins: jay-m1262 (~jay-m@129.0.77.217)
[20:48:07] <f8e4_> how to install a package on a computer into its own venv + dependencies?
[20:48:30] <mav`rik> aphysically: Hi. Any further luck with rich since yesterday?
[20:49:46] <aphysically> I didn't look at that particular problem any more as I turned in programming for the day and just woke up :)
[20:49:49] <mefistofeles> f8e4_: so, do you already have a venv and stuff? Or know your way around it?
[20:49:59] <aphysically> but addressing rich's typing is an ongoing project of mine so I'll get back to it for sure
[20:50:20] <aphysically> I want to give the maintainer a break cause I think I have 4 or 5 open PRs
[20:50:29] <f8e4_> mefistofeles i know, but have built whl. fresh debian install, now where to place venv?
[20:50:43] <aphysically> I already had 3? I think merged though which fixed the biggest problems
[20:50:53] *** Joins: jazzy (~jaziz@user/jaziz)
[20:51:25] <mav`rik> Fair enough. Here's hoping it works out longer term.
[20:51:39] *** Quits: vladoski (~vladoski@2001:b07:add:d406:2028:afe9:4375:ff99) (Ping timeout: 258 seconds)
[20:51:59] *** jazzy is now known as jazz-o-lantern
[20:52:07] <f8e4_> mefistofeles please help, which dir to place venv!?
[20:52:27] <han-solo> whichever dir you like(and or have permission)
[20:52:59] *** Quits: src_ (~src@user/src) (Quit: Leaving)
[20:53:10] *** Joins: src (~src@user/src)
[20:53:28] <han-solo> but since it is a fresh debian install, `apt install python3-venv` is in order
[20:53:40] *** Joins: mat001 (~mat001@213.143.69.121)
[20:53:40] *** Joins: ckdCreations (~ckdCreati@147.55.133.129)
[20:54:14] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[20:54:17] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[20:54:20] *** Quits: burakcank_ (~burakcank@159.146.40.45) (Ping timeout: 260 seconds)
[20:54:56] *** Quits: ckdCreations (~ckdCreati@147.55.133.129) (Client Quit)
[20:55:21] *** Joins: ckdCreations (~ckdCreati@147.55.133.129)
[20:56:00] <leonardo> is there any kind of library similar to supervisor embeddable in an application?
[20:56:36] <spiderman> like supervisord but for python threads?
[20:56:41] *** Joins: burakcank_ (~burakcank@159.146.40.45)
[20:57:09] *** Quits: raxor2k (~raxor2k@78.158.254.247) ()
[20:57:43] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[20:58:17] <leonardo> nope, i mean like supervisord, for subprocesses
[20:58:20] <SnoopJ> aphysically, busy time for you now :)
[20:59:19] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Ping timeout: 258 seconds)
[21:00:15] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[21:00:54] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[21:01:13] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[21:01:14] <leonardo> or, an alternative question could be: is it possibile to embed supervisord in another project and using a dinamically generated configuration for the processes that it should control?
[21:01:28] *** Joins: rndm (~rndm@2600:1700:5f81:1f50:45a5:1316:5521:252c)
[21:01:36] *** Joins: Hackerpcs (~user@user/hackerpcs)
[21:02:02] *** Joins: wolfgang (~wolfgang@101.174.167.116)
[21:02:29] *** Joins: AlanMD (~AlanMD@86.121.179.183)
[21:02:32] *** SallyAhaj__ is now known as SallyAhaj
[21:02:38] *** Joins: fikran (~fikran@user/fikran)
[21:02:42] <spiderman> leonardo: you'll be happy to know that supervisor is actually written in python, so I'm sure you can find a way to modify the source to your specs
[21:04:01] *** Joins: jonaskabrink (~jonaskabr@et1-vpn-143-40.ieet.tu-harburg.de)
[21:04:02] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[21:04:58] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:05:06] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 260 seconds)
[21:05:11] <leonardo> well i know is written in python, i was asking because i'd like to know if there are already other viable solutions before trying to customize the project
[21:05:15] <rndm> i'm trying to build_ext a cffi module which requires some other files generted by make (via build_ext). The actual cffi module build is done via "cffi_module" setup kwarg and happening in some temp folder (build/temp.macosx...) away from the libs I need from make (Which are in build/lib.macosx...). How do I get everything together?
[21:06:11] <spiderman> be the change you want to see in the world.
[21:07:34] *** Quits: CountryNerd (~CountryNe@184.53.1.83) (Quit: Textual IRC Client: www.textualapp.com)
[21:07:35] *** Quits: jazz-o-lantern (~jaziz@user/jaziz) (Ping timeout: 264 seconds)
[21:08:35] *** Quits: white5moke (~white5mok@ip72-219-109-30.oc.oc.cox.net) (Quit: Leaving...)
[21:08:53] *** Joins: white5moke (~white5mok@ip72-219-109-30.oc.oc.cox.net)
[21:09:15] *** Quits: white5moke (~white5mok@ip72-219-109-30.oc.oc.cox.net) (Remote host closed the connection)
[21:09:34] *** Joins: weedmic (~weedmic@109-186-1-92.bb.netvision.net.il)
[21:10:00] <leonardo> quite a deep advice
[21:10:03] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[21:10:52] <leonardo> i'd preferred a solution requiring a lower effort, but oh well
[21:11:45] *** Joins: Bluefoxicy (~Bluefoxic@c-73-132-244-30.hsd1.md.comcast.net)
[21:11:59] *** Quits: hesse (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[21:12:46] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Remote host closed the connection)
[21:12:57] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Quit: Client closed)
[21:13:08] *** Joins: adder (~adder@user/adder)
[21:14:01] *** Joins: audiobirb (~audio@2603-8081-1800-1546-0532-8ce8-9262-b426.res6.spectrum.com)
[21:14:44] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Remote host closed the connection)
[21:14:53] *** Joins: burakcank__ (~burakcank@88.243.140.242)
[21:15:01] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[21:15:29] <cek> `for x in nses:` gets "stuck" at last element or whatever
[21:15:47] <cek> if `for` is invoked for it again, it won't iterate
[21:16:25] <cek> this is the source for `nses`: `    for d in os.listdir("%s/namespaces/" % self._path): 446              yield Namespace(self, int(d), 'lookup') `
[21:16:29] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[21:16:59] *** Joins: rany (~rany@user/rany)
[21:17:11] *** Quits: burakcank_ (~burakcank@159.146.40.45) (Ping timeout: 264 seconds)
[21:17:32] *** Joins: p-i-_ (~Ohmu@223.206.147.206)
[21:17:44] *** Joins: orbatos__ (~orbatos@user/orbatos)
[21:19:50] *** Joins: orangeextract (~orangeext@user/orangeextract)
[21:20:02] *** Quits: jay-m1262 (~jay-m@129.0.77.217) (Ping timeout: 260 seconds)
[21:20:22] *** Joins: Spawns_Carpeting (~Spawns_Ca@user/spawns-carpeting/x-6969421)
[21:20:30] *** Quits: orbatos (~orbatos@user/orbatos) (Ping timeout: 260 seconds)
[21:20:34] *** Quits: orbatos_ (~orbatos@user/orbatos) (Ping timeout: 265 seconds)
[21:20:42] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[21:20:52] <cek> http://git.infradead.org/users/hch/nvmetcli.git/blob_plain/HEAD:/nvmet/nvme.py  , `nses = xx.namespaces ` . Why won't `nses` iterate again?
[21:20:54] *** Joins: jay-m1262 (~jay-m@129.0.77.217)
[21:21:22] *** Joins: orbatos (~orbatos@user/orbatos)
[21:21:23] *** Quits: p-i- (~Ohmu@mx-ll-223.206.147-206.dynamic.3bb.co.th) (Ping timeout: 264 seconds)
[21:21:37] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[21:22:38] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:1879:cbeb:476f:d1d6) (Quit: Textual IRC Client: www.textualapp.com)
[21:23:37] *** Quits: LucaTM (~LucaTM@user/lucatm) (Ping timeout: 265 seconds)
[21:24:02] *** Quits: ckdCreations (~ckdCreati@147.55.133.129) (Read error: Connection reset by peer)
[21:24:52] *** Joins: Auron (~Auron956@user/auron)
[21:24:57] *** Quits: codificat (~pep@187.red-83-46-128.dynamicip.rima-tde.net) (Quit: leaving)
[21:25:10] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[21:25:36] <cek> seems like `property()` is returning a reference that's evaluated only once.
[21:25:57] <cek> this is in constrast to any other sane language which would invoke the underlying method again and again
[21:26:44] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[21:26:53] <grym> cek: it's also a class attribute
[21:26:56] <grym> odd code.
[21:27:06] *** Quits: LenarHoyt (~LenarHoyt@p200300eec7010600fd6e3d0f2bfbac26.dip0.t-ipconnect.de) (Quit: Client closed)
[21:27:16] *** Quits: Barones (~Barones@2804:48dc:8500:0:5635:5e6d:7349:856) (Remote host closed the connection)
[21:27:30] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[21:28:05] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[21:28:07] *** Joins: jazzy (~jaziz@user/jaziz)
[21:29:17] *** Joins: ckdCreations (~ckdCreati@147.55.133.137)
[21:29:34] *** Quits: portalrat (~portalrat@user/portalrat) (Remote host closed the connection)
[21:29:54] *** Joins: portalrat (~portalrat@user/portalrat)
[21:32:20] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Remote host closed the connection)
[21:32:34] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[21:34:32] <bjs> a class attribute that is a property() is very normal because that's what all properties are
[21:34:58] *** Quits: sharperguy (~sharpergu@fnord.cryptophone.de) (Ping timeout: 260 seconds)
[21:35:22] <bjs> cek: going .namespaces will give you a new generator of Namespace objects.  But generators are one-shot iterators,  once you loop over them they are spent. So you'd need to get another generator by going .namespaces again
[21:35:55] <bjs> cek: I'm not sure what you mean by "stuck" on the last element though.
[21:36:21] *** Joins: sharperguy (~sharpergu@89.244.124.36)
[21:36:38] <cek> I was told here generators reset/rewind by themselves
[21:37:06] <cek> I also thought that method would get invoked again if called.
[21:37:14] <Omega037> What is the best tool for doing automatic doc gen?  Sphinx?
[21:37:18] *** Joins: nicode (~nic@2607:f2c0:93cb:8f00:e552:f66b:bd97:27e3)
[21:37:23] <cek> it seems nses gets reference to generator, not to intermediate property
[21:37:27] <bjs> cek: Who told you generators rewind themselves?
[21:37:30] *** Joins: jazzy2 (~jaziz@user/jaziz)
[21:38:03] <bjs> cek: the method will get called again each time you access the attribute
[21:38:20] <bjs> cek: I'm not sure what you mean by "to intermediate property"?
[21:38:29] <cek> nses = xx.namespaces
[21:38:34] <aphysically> Omega037: sphinx has an autodoc plugin that generates based on docstrings
[21:38:40] <cek> `for x in nses` . it won't call the property again.
[21:39:05] <bjs> cek: yes, that's how properties work.  They run the method on attribute access. So `xx.namespaces` calls that method and returns the generator
[21:39:25] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-848c-99f6-3ab2-978a.res6.spectrum.com)
[21:39:46] <nicode> Does anyone here work with python and GUI toolkits that work pretty seemlessly for both windows and linux?
[21:40:34] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[21:40:39] <bjs> cek: e.g. https://bpa.st/IJQA
[21:40:50] *** Joins: LucaTM (~LucaTM@user/lucatm)
[21:40:52] <nicode> I'm looking to build a GUI application to run in linux (gnome) but I'd like it to be relatively easy to port to windows.
[21:41:31] *** Joins: jazzy (~jaziz@user/jaziz)
[21:44:18] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[21:44:46] <BrenBarn> I've used PyQt to build apps that work on linux and windows
[21:45:11] <BrenBarn> Tkinter would presumably also work although it's not as full-featured
[21:45:12] <BrenBarn> I dunno what the state of wxpython is these days
[21:45:24] <mav`rik> nicode: if you want most-gnome-like GUI by default then pygtk used to be the way. If you want possibly nicest to integrate in Linux and Windows both then pyQt or pySide11 might be good options
[21:45:36] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[21:45:38] *** jazzy is now known as jazz-o-lantern
[21:46:18] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[21:46:22] <ChrisWarrick> pyside would give you the nicest GUI
[21:46:28] <vdamewood> I prefer PySide
[21:46:35] *** Quits: ericlee (~ericlee@2601:647:4681:3420::8) (Ping timeout: 264 seconds)
[21:46:52] <nicode> mav`rik, ChrisWarrick, vdamewood thanks for the input, I'll give pySide a try :)
[21:46:54] <Togra> I used tkinter, it's rough but it worked. I'm personally probly going to look into pyside and pyqt though
[21:47:00] <whoopla> Alright yall, new issue, and this one's wierd. I've get this code here, https://bpa.st/7RTQ. That last line, the os.system call is causing the  content_dataframe.drop to stop working. If I comment that line out, those fields are properly dropped and manually opening the csv reflects that. What gives?
[21:47:11] <Togra> it might've been rough due to my inexperience with UI's, though, and not anything tkinter did
[21:47:25] <vdamewood> nicode: Oh, do you have any licensing concerns?
[21:47:33] <sartan> tinkter looks like hot garbage no matter how hard you try
[21:47:40] <grym> whoopla: probably two different files in different locations with the same name
[21:47:41] <Togra> yeah, I was ok with the look :<
[21:47:46] <sartan> I've never been successful in building a good 'ui' app that couldn't have just been webified
[21:47:49] <vdamewood> What if I try really hard to make it look like hot garbage?
[21:47:52] <grym> content_dataframe.to_csv('donate.csv')
[21:47:52] <nicode> vdamewood: it's just a personal app right now, and if ever I realease it it'd be open source
[21:47:53] <grym> content_dataframe.to_csv('donate.csv')
[21:47:54] <Togra> I found the process for putting scrollbars on stuff to be a bit obtuse
[21:48:00] <grym> won't necessarily go to your home directory
[21:48:17] <sartan> i also find the tkinter binary/system library stuff is hugely difficult to execute properly within a virtual environment.
[21:48:21] <whoopla> grym: Ok, I'll change those to absolute directories and see if that fixes it.
[21:48:22] <vdamewood> nicode: Okay. No problems then. PyQt is GPL, PySide and GTK are LGPL.
[21:48:27] *** Joins: EgonX_ (~EgonX@12.191.251.242)
[21:48:39] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[21:48:47] <vdamewood> TkInter is... Well, I guess Python License.
[21:49:21] <Togra> I think there's a tkinter thing.. TK? something? that's supposed to be newer and prettier but I didn't use it
[21:50:15] <whoopla> grym: Hmm, using full paths didn't resolve it, and I also just noticed that in the CSV preview where you choose delimeters and such it shows the proper columns. When you continue to open the actual file though, the columns aren't dropped...
[21:50:24] *** Joins: node1 (~node1@user/node1)
[21:50:45] <node1> Hi
[21:50:47] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[21:51:13] <grym> whoopla: the next thing i'd check is which methods are inplace and which return new things.  that's another usual error in pandas code
[21:51:16] <node1> Does anyone know how to  save  flask.wrappers.Response into a file?
[21:51:59] *** Quits: jay-m1262 (~jay-m@129.0.77.217) (Ping timeout: 264 seconds)
[21:52:26] <node1> It looks like JSON but it's type is <class 'flask.wrappers.Response
[21:52:38] <whoopla> grym: I don't entirely understand what you mean, can you clarify?
[21:53:36] *** Joins: jay-m1262 (~jay-m@154.72.160.249)
[21:53:51] <Ninpo> node1: if it looks like json try serialising it with json.dumps
[21:53:55] <node1> I have used this jsonify to make a list into json.
[21:54:34] <grym> whoopla: i think you need to do `content_dataframe = content_dataframe.drop(...`
[21:54:38] <node1> But now i'm looking for the rightway to convert this flask.wrappers.Response into file.
[21:54:44] <grym> whoopla: or pass inplace=True
[21:54:50] <BrenBarn> are you closing libreoffice after the os.system opens it?
[21:55:00] <whoopla> BrenBarn: Yep
[21:55:19] <grym> whoopla: also, consider please subprocess.run() over os.system
[21:55:30] <whoopla> Any particular reason?
[21:55:57] <grym> it's cleaner
[21:56:01] <BrenBarn> libreoffice can sometimes lock files in weird ways
[21:56:38] <whoopla> Yay! grym passing the inplace option fixed it :) I'll look into using subprocess instead. Noted BrenBarn, I'll keep an eye out for that.
[21:56:41] <grym> whoopla: os.system spawns a new subshell; often that's not what you really need, and its docs suggest using subprocess instead
[21:56:56] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[21:57:37] <whoopla> Thanks gang, I'll be around.
[21:58:03] *** Joins: white_magic (~white_mag@152.89.204.200)
[21:58:21] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[21:59:17] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[21:59:17] <white_magic> Can someone here advise if I should bother with making alembic migrations async? I'm making a data retrieval/storage service that uses SqlModel + asyncpg to store data asynchronously (as well as to retrieve it asynchronously). Should I also bother making alembic async?
[21:59:18] <spiderman> are there any cool personal pip indexes out there besides the official one?
[21:59:30] <white_magic> I'm following this guide here: https://testdriven.io/blog/fastapi-sqlmodel/
[22:00:44] <white_magic> spiderman: I found this on Google for you.. https://pythonawesome.com/ https://github.com/vinta/awesome-python.
[22:01:33] *** Joins: LenarHoyt (~LenarHoyt@p200300eec7010600fd6e3d0f2bfbac26.dip0.t-ipconnect.de)
[22:01:40] <spiderman> thanks, but not what I was looking for. I mean like non-canonical pypi repositories
[22:01:48] <white_magic> ahh
[22:01:56] <spiderman> you can self-host your own
[22:02:48] *** Joins: rfm (~rfm@user/rfm)
[22:03:27] *** Quits: nbin (~nbin@user/nbin) (Ping timeout: 240 seconds)
[22:04:39] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-641e-f3a3-251f-31e8.res6.spectrum.com)
[22:06:05] *** Joins: nomic (~nomic@185.217.117.204)
[22:06:41] <sco1> pypiserver or devpi are probably good starting points
[22:06:46] <ChrisWarrick> white_magic: do you really need migrations to be async? those would typically be run outside of the main app
[22:06:59] <rfm> I have a bunch of objects (about 10K of them), all identified by a integer in 0..10000) I want to insert them all in a data structure accessible by the integer id.  Not all ids may be used, in fact the main thing I want to do is detect missing ones....
[22:07:11] <sco1> Or pypicloud if you want to host in the ether
[22:07:23] <mav`rik> whoopla: we, many years ago, did OpenOffice automation, and we found that it would spawn subprocesses of its own. Killing the process we'd started meant we ended up with leftovers. We found the best option was to use process group ids so the entire process group got killed (including those subprocesses)
[22:07:49] <white_magic> ChrisWarrick: I really don't need it to be async. I'm just following this tutorial here and it seems that they went out of their way to make it async: https://testdriven.io/blog/fastapi-sqlmodel/. I'm thinking there's little reason to make migrations async.
[22:08:09] <rfm> In C this would be easy, just an array of pointers that could be null.  In python, I'm afraid a list would be O(n^2) to do the inserts.  Is a dict keyed by an integer the right thing?
[22:09:02] <grym> rfm: i'd use a dict here
[22:09:16] <ChrisWarrick> white_magic: the migrations don’t look async to me?
[22:09:23] <grym> rfm: and then the .keys() are setlike and you can compute the set difference with set(range(10000)) to get the missing ones
[22:09:48] <mav`rik> rfm: sure, you could also use a list and just have None for the missing entries too I guess, but dict is at least more readable
[22:09:53] <spiderman> rfm you can use a dict
[22:10:08] <white_magic> ChrisWarrick: this is from that guide: "Take a quick look at Using Asyncio with Alembic while the new images are building.
[22:10:08] <white_magic> Once the containers are back up, initialize Alembic with the async template:
[22:10:09] <white_magic> $ docker-compose exec web alembic init -t async migrations"
[22:10:10] *** Quits: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[22:10:43] <white_magic> ChrisWarrick: I'm inclined to not bother figuring out how to make them async but I was curious as to why someone might be interested in doing that. Seems pointless.
[22:11:19] <grym> rfm: https://bpa.st/XWLQ
[22:11:23] <ChrisWarrick> white_magic: “async” and “migrations” are separate options here
[22:11:43] <spiderman> rfm just do like my_dict[my_object.id] = my_object
[22:11:44] *** Joins: jug (~jug@user/jug)
[22:11:57] <white_magic> ChrisWarrick: might be! I'm ignoring the docker parts of that guide. I'm not that knowledgeable on Docker.
[22:13:08] *** Quits: weedmic (~weedmic@109-186-1-92.bb.netvision.net.il) (Quit: Konversation terminated!)
[22:13:19] <ChrisWarrick> white_magic: that’s not a docker part
[22:13:33] <ChrisWarrick> white_magic: remove `docker-compose exec web` to un-dockerize this command
[22:13:38] <mav`rik> grym: isn't ^ symmetric? I appreciate it won't matter if the range is intentionally fixed, but it could be a problem in terms of maintenance
[22:14:35] <rfm> Thanks all, it will be easy enough to do with a dict.
[22:16:27] <mav`rik> grym: https://bpa.st/R4LA is what I'd have considered instead
[22:18:10] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[22:18:36] *** Joins: reset (~reset@user/reset)
[22:19:24] *** Joins: nbin (~nbin@user/nbin)
[22:19:26] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Read error: Connection reset by peer)
[22:19:26] *** Joins: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[22:19:48] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[22:19:59] *** Parts: cek (uid23454@id-23454.tinside.irccloud.com) ()
[22:20:43] *** Joins: parv (~quass@user/parv)
[22:22:03] *** Joins: redoc (~redoc@user/redoc)
[22:22:16] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:24:10] *** Quits: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Ping timeout: 260 seconds)
[22:27:39] *** Quits: white_magic (~white_mag@152.89.204.200) (Ping timeout: 256 seconds)
[22:28:26] *** Quits: ymas (~quassel@user/ymas) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:28:58] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[22:29:07] *** Quits: adder (~adder@user/adder) (Remote host closed the connection)
[22:29:34] *** Quits: jay-m1262 (~jay-m@154.72.160.249) (Ping timeout: 260 seconds)
[22:29:46] <Ninpo> {"name": x.split(" - ")[0].rstrip(), "options": [opt for opt in x.split(" - ")[1:]] for x in product_sample}
[22:30:00] <Ninpo> what am I screwing up here, I get a syntax error on the last for
[22:30:10] *** Quits: kr0nk (~kr0nk@user/kr0nk) (Ping timeout: 265 seconds)
[22:30:35] *** Quits: AlanMD (~AlanMD@86.121.179.183) (Ping timeout: 260 seconds)
[22:30:43] *** Joins: white_magic (~white_mag@152.89.204.200)
[22:31:16] *** Joins: jay-m1262 (~jay-m@129.0.77.217)
[22:31:30] <han-solo> um, do you want a list of dicts ?
[22:31:38] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:3590:2793:65fc:c076)
[22:31:57] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[22:31:58] <SnoopJ> yea that looks like maybe it should be `[{"name": ..., "options": [...]} for x in product_sample]`, it's very confusing as written
[22:32:18] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[22:33:44] *** Joins: kr0nk (~kr0nk@user/kr0nk)
[22:34:02] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-848c-99f6-3ab2-978a.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[22:34:03] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[22:35:13] <mav`rik> Ninpo: also, why [opt for opt in x.split(" - ")[1:]] when x.split(" - ")[1:] by itself should do the same thing?
[22:35:15] *** Quits: burakcank__ (~burakcank@88.243.140.242) (Ping timeout: 260 seconds)
[22:35:25] *** Quits: EgonX_ (~EgonX@12.191.251.242) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:35:52] <Ninpo> I have a list of products as strings that are like BRAND - COLOUR for the "main" product then BRAND - OPTION - COLOUR for the options. I'm working on a "single" product/option set as a test so I can get this data into some form of sane database
[22:36:11] *** Joins: burakcank__ (~burakcank@88.243.140.242)
[22:36:34] <Ninpo> So the resulting dict should be a single name and options pair of keys, with the BRAND (name.split()[0] part) and options added to the options list
[22:36:46] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[22:36:50] <Ninpo> brand being in name
[22:37:48] *** Joins: CoolerX (~CoolerX@user/coolerx)
[22:37:58] *** Joins: pro_z_ (~pro_z@37.214.46.4)
[22:37:58] <Ninpo> https://bpa.st/P77A the list I am handling with as a sample atm, and I want {name: GIN GLIDERS BOLERO 6, options: [MUSTARD, TIGER, S, XL, M] etc
[22:38:13] *** Quits: ham5urg (~ham5urg@p200300d1671129005c59fed3240d00af.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[22:38:18] <Ninpo> without the duplicated sizes
[22:38:31] <han-solo> defaultdict(list)
[22:38:32] *** Joins: EgonX_ (~EgonX@12.191.251.242)
[22:38:34] *** Quits: EgonX_ (~EgonX@12.191.251.242) (Client Quit)
[22:38:36] *** Joins: Akuli (~Akuli@87-94-108-97.bb.dnainternet.fi)
[22:39:16] *** Joins: EgonX_ (~EgonX@12.191.251.242)
[22:39:19] *** Quits: EgonX_ (~EgonX@12.191.251.242) (Client Quit)
[22:39:28] <han-solo> er, maybe s/list/set/
[22:39:30] <Ninpo> han-solo: is that at me
[22:39:41] <han-solo> yeah
[22:39:52] <Ninpo> Can you please elaborate?
[22:39:58] *** Joins: execi (~execi@dgs10myjzfmbmmtc2bcct-3.rev.dnainternet.fi)
[22:40:04] *** Parts: execi (~execi@dgs10myjzfmbmmtc2bcct-3.rev.dnainternet.fi) ()
[22:40:11] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[22:40:33] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[22:41:41] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[22:41:54] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[22:42:12] *** Joins: Klinda (~superleag@user/klinda)
[22:42:48] <mav`rik> Ninpo: [{"name": name, "options": options} for name, *options in (tuple(y.strip() for y in x.split(" - ")) for x in product_sample)]
[22:42:55] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-9c38-3f2f-b680-9b24.res6.spectrum.com)
[22:43:16] <mav`rik> I guess you don't really need the "tuple" either, really
[22:43:36] *** Joins: Quaking (~Quaking@2601:245:c500:7fa0:1457:57ba:c147:ba0)
[22:43:40] <han-solo> Ninpo: https://termbin.com/kg9p # something like that
[22:44:11] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Ping timeout: 264 seconds)
[22:44:11] <Ninpo> Thanks mav`rik and han-solo
[22:44:34] *** Quits: darksun (~darksun@user/darksun) (Quit: Lost terminal)
[22:45:39] *** Joins: strywgr (~none@101.53.224.196)
[22:45:46] <mav`rik> Ninpo: with your example input https://bpa.st/AXUA
[22:45:56] <Quaking> exit
[22:45:58] <Quaking> quit
[22:46:03] <grym> so close
[22:46:06] *** Quits: Quaking (~Quaking@2601:245:c500:7fa0:1457:57ba:c147:ba0) (Client Quit)
[22:46:08] <mav`rik> and yet...
[22:46:37] *** Joins: Quaking (~Quaking@2601:245:c500:7fa0:153b:bb90:6160:a001)
[22:46:38] <InPhase> /sys.exit()
[22:46:43] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-848c-99f6-3ab2-978a.res6.spectrum.com)
[22:46:53] <Ninpo> mav`rik: that's not what I am after. han-solo that's exactly what I wanted, thank you
[22:46:57] <Togra> speaking of which, is raise SystemExit the preferred way?
[22:47:31] <ChrisWarrick> Togra: not really
[22:47:47] <Togra> what is?
[22:48:06] *** Joins: damonlynch (~ngaio@2601:245:c700:2c06:4c9e:a104:707e:d017)
[22:48:38] *** Joins: ham5urg (~ham5urg@p200300d167112900174709b88faf3c4b.dip0.t-ipconnect.de)
[22:48:44] <ChrisWarrick> Togra: what is the goal?
[22:48:50] *** Quits: damonlynch (~ngaio@2601:245:c700:2c06:4c9e:a104:707e:d017) (Client Quit)
[22:48:52] <ChrisWarrick> Togra: if you need to exit, use sys.exit()
[22:48:55] <Togra> to stop the script and exit
[22:48:57] <Togra> ah, ok
[22:49:03] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[22:49:15] *** Quits: jay-m1262 (~jay-m@129.0.77.217) (Ping timeout: 260 seconds)
[22:49:16] *** Joins: damonlynch (~ngaio@2601:245:c700:2c06:4c9e:a104:707e:d017)
[22:49:24] *** Quits: strywgr (~none@101.53.224.196) (Remote host closed the connection)
[22:49:38] <InPhase> Hmm.  Well today I learned this prints 'Still running!'.  https://bpa.st/DROA
[22:49:40] <Ninpo> han-solo: thanks for that, I think I understand it too haha
[22:49:42] <InPhase> Strange design choice.
[22:49:46] <SnoopJ> note: raise an appropriate exception instead if there is a possibility that someone would call the code you're writing and *not* want to exit
[22:49:54] <Ninpo> For my next trick I need to identify what's a "size" and what's a "style" heh
[22:50:07] *** Quits: Quaking (~Quaking@2601:245:c500:7fa0:153b:bb90:6160:a001) (Client Quit)
[22:50:25] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (Ping timeout: 260 seconds)
[22:50:30] <InPhase> I didn't realize you could cancel a sys.exit() call.
[22:50:41] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[22:50:51] <bjs> InPhase: it raises a SystemExit exception (which is not a subtype of Exception)
[22:50:51] *** Quits: white_magic (~white_mag@152.89.204.200) (Quit: Client closed)
[22:51:01] <InPhase> Yeah, I see that.
[22:51:08] <bjs> InPhase: so `except Exception as e:` and `except:` don't catch the same things, and pretty much always you want to prefer the former
[22:51:15] <bjs> see also: KeyboardInterrupt :)
[22:51:16] <InPhase> I assumed it did what most language exit functions do, and exit.
[22:51:23] <InPhase> But apparently not.
[22:51:31] <InPhase> This is so standard I never looked up what it did.
[22:52:13] <han-solo> Ninpo: /tu
[22:52:16] <han-solo>  👍
[22:52:56] *** Joins: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz)
[22:54:01] <InPhase> I suppose I could exploit this for my python program that runs JupyterLab notebooks in terminal, and use that to catch and handle sys.exit attempts.
[22:54:23] *** Joins: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d)
[22:54:52] <Togra> the "hotel california" special?
[22:55:04] *** Quits: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Read error: Connection reset by peer)
[22:55:13] <InPhase> Well correct behavior would be to stop executing, but to correctly close out the html file being generated first.
[22:55:43] <InPhase> Nobody ever does sys.exit() in a notebook so it didn't arise as something to consider.  But, it could be done.
[22:55:51] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[22:58:36] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:59:11] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[23:00:20] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Ping timeout: 260 seconds)
[23:00:33] *** Quits: R035N3R (~phobos@user/r035n3r) (Quit: WeeChat 3.3)
[23:01:42] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[23:01:51] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[23:03:22] <Ninpo> How does one create a defaultdict so I can work with {"name": {"sizes": set(), "options": set()}} ?
[23:03:51] <grym> defaultdict(lambda: defaultdict(set)) i think
[23:03:57] <grym> you need a lambda in there somewhere
[23:03:59] <Ninpo> lambda that's what I was missing
[23:04:03] <Ninpo> thanks
[23:04:38] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[23:05:18] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:06:23] <whatsupdoc> Can someone explain to me what return super(A, cls).__new__(cls) does?
[23:06:28] <whatsupdoc> I'm trying to understand __new__
[23:06:33] *** Joins: DPA (~DPA@2a05:41c0:1:f604::a3c:10d)
[23:07:28] <han-solo> it returns an instance of the `A`, me thinks
[23:08:00] <whatsupdoc> What does super(A, cls) do?
[23:10:10] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-2cdd-ee6c-360d-1986.res6.spectrum.com)
[23:10:10] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[23:10:13] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:3590:2793:65fc:c076) (Quit: Textual IRC Client: www.textualapp.com)
[23:10:51] <Ninpo> last stupid question I think, how do I now make this serialisable with json? https://bpa.st/76CQ
[23:11:02] <Ninpo> Or rather I am asking what's the best way to convert those sets to lists now
[23:11:05] <han-solo> whatsupdoc: that get the super instance of class A, i think
[23:11:47] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-9c38-3f2f-b680-9b24.res6.spectrum.com) (Ping timeout: 264 seconds)
[23:11:59] <whatsupdoc> I've only seen super being used with no arguments
[23:11:59] *** Joins: fikran (~fikran@user/fikran)
[23:12:12] <han-solo> yeah, that's python2 syntax you have there
[23:13:10] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 260 seconds)
[23:13:29] *** Quits: DPA (~DPA@2a05:41c0:1:f604::a3c:10d) (Ping timeout: 258 seconds)
[23:14:25] *** Quits: CoolerX (~CoolerX@user/coolerx) (Quit: Leaving)
[23:14:26] <mav`rik> Ninpo: https://stackoverflow.com/a/8230505 is one way, depends on whether sets are acceptable for other parts of your code and not just the serialisation?
[23:15:13] <han-solo> Ninpo: maybe `json.dumps(d, default=list)` # ?
[23:15:17] <Ninpo> mav`rik: ah thanks for the link. My end goal once I've restructured the data is to drop it out to json so I can parse into a db
[23:15:42] <Ninpo> han-solo: I had no idea about that trick
[23:15:45] <Ninpo> that nailed it thanks
[23:15:49] <han-solo> or that, if you *have* more than one easily serializable things
[23:15:55] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[23:16:12] *** Joins: kosh (~kosh@user/kosh)
[23:16:16] <Ninpo> han-solo: only difference between the sample I am working on and the end game is end game will be a list of these defaultdicts
[23:16:28] <Ninpo> so if the default trick will work on a list of these, I'm golden
[23:16:49] <Ninpo> well out to json or csv actually
[23:17:01] <Ninpo> need to punt a csv of my intent over to someone to look over
[23:17:11] *** Joins: esro (~esro@2a02:120b:2c3a:4620:8d51:c663:a2f9:f7f8)
[23:17:40] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[23:17:48] *** Quits: sartan (~sartan@user/sartan) (Quit: WeeChat 1.9.1)
[23:19:45] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[23:20:35] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[23:21:07] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[23:21:32] *** Quits: sharperguy (~sharpergu@89.244.124.36) (Ping timeout: 258 seconds)
[23:22:58] *** Quits: esro (~esro@2a02:120b:2c3a:4620:8d51:c663:a2f9:f7f8) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:23:11] *** Joins: sharperguy (~sharpergu@89.244.124.36)
[23:23:20] *** Joins: jmiehe1 (~Thunderbi@user/jmiehe)
[23:24:23] *** Joins: esro (~esro@2a02:120b:2c3a:4620:8d51:c663:a2f9:f7f8)
[23:25:29] *** Quits: horseface (~horseface@user/horseface) (Quit: STOP, DROP, AND ROLL. IT IS HAMMER TIME!!!)
[23:25:39] *** jmiehe1 is now known as jmiehe
[23:26:00] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (Ping timeout: 260 seconds)
[23:26:37] <madduck> I am very confused by this: re.sub(r'^(?:(?:Mr|Mrs)\.?\s*)*', '', 'Mrs Jane Doe') → "s Jane Doe". Why wouldn't the pattern match maximally?
[23:26:44] *** Joins: semeion (~semeion@user/semeion)
[23:26:46] *** Joins: Nact (~l@2a02:2788:11c4:6e6:cebc:f487:efd8:173)
[23:27:48] *** Joins: horseface (~horseface@user/horseface)
[23:28:09] <parv> madduck, What happens if you switch Mr & Mrs?
[23:28:21] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[23:29:44] <madduck> parv: then it does consume the 's', but I am still unsure this is what should happen.
[23:30:39] *** Joins: wovixo (~wovixo@128.104.205.49)
[23:30:41] <madduck> sed and perl don't do it.
[23:30:57] <madduck> I mean, they consume the 's' independent of the order of the match.
[23:31:07] <whatsupdoc> Might be a dumb question, but what is the point of the singleton pattern if you can just use @classmethod and class variables everywhere?
[23:31:46] *** Joins: jay-m1262 (~jay-m@129.0.77.217)
[23:32:19] <grym> whatsupdoc: it's not a commonly used pattern
[23:32:22] <grym> (in python)
[23:32:38] <grym> whatsupdoc: it exists for some builtins, though: None, True, and False are all singletons
[23:32:45] <parv> madduck, Another regex for the example: '^(?:Mrs?[.]\s*)?'
[23:33:11] <madduck> yeah, I also tried that. The problem is that the salutations are coming from a list, so the pattern is being built programmatically.
[23:33:39] <parv> madduck, Sure. Sort in decreasing length before '|'.
[23:34:14] <madduck> Yeah, I could do that
[23:34:34] *** Quits: doosboox (~doosboox@194.132.186.60) (Ping timeout: 252 seconds)
[23:34:48] *** Joins: sandb0y (~pirate@user/sandb0y)
[23:35:03] <madduck> that works.
[23:35:21] <madduck> thanks. It'll do, but I am somewhat still left unhappy by this.
[23:36:30] *** Quits: pro_z_ (~pro_z@37.214.46.4) (Ping timeout: 260 seconds)
[23:36:44] *** Joins: doosboox (~doosboox@194.132.186.60)
[23:37:02] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[23:37:03] *** Joins: paul424 (~tom@ip-37-248-158-221.multi.internet.cyfrowypolsat.pl)
[23:37:22] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[23:37:48] <paul424> How would you spin a roulette wheel -- using random, consider those are  Single number (1 to 36, 0, or 00)
[23:37:55] *** Joins: BillyZane (~BillyZane@91.196.220.174)
[23:38:11] <Ninpo> if I have a list of strings is there a way to find common characters in all of them? I'm looking to pull brands separate from the product here: GIN GLIDERS SPRINT 3 and GIN GLIDERS BOLERO 6. So "brand" is GIN GLIDERS and the rest is the product
[23:38:45] <whatsupdoc> This stuff blows my mind. Passing in a class definition into a function smh
[23:39:27] <SnoopJ> whatsupdoc, why does that make you shake your head?
[23:39:30] <grym> whatsupdoc: just wait until you pass functions in functions
[23:39:52] <whatsupdoc> Lol, I saw that first (functions into functions)
[23:40:08] <parv> .oO( Why are the names & titles being mangled to begin with? -- rhetorical question; https://www.kalzumeus.com/2010/06/17/falsehoods-programmers-believe-about-names/)
[23:40:41] <phy1729> Ninpo: common = the_list[0] then iterate over the_list[1:] and for each see where the first difference between that item and common is, chop common off there and proceede to the next item
[23:40:58] <phy1729> But it'd be nicer if you had a tuple to begin with and didn't have to guess
[23:41:26] <phy1729> and maybe you should compare by word not by char
[23:42:04] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[23:42:44] <parv> paul424, (psuedo)random.randint
[23:44:23] *** Joins: ub (~Thunderbi@77.119.198.223.wireless.dyn.drei.com)
[23:45:17] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: Leaving)
[23:47:01] *** Quits: Nact (~l@2a02:2788:11c4:6e6:cebc:f487:efd8:173) (Quit: Konversation terminated!)
[23:47:30] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[23:50:21] *** Joins: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[23:50:25] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[23:51:28] *** Parts: gytis (~gytis@static.51.157.90.157.clients.your-server.de) (The Lounge - https://thelounge.chat)
[23:52:35] *** Quits: carl- (~carl-@185.103.188.130) (Ping timeout: 264 seconds)
[23:53:07] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
