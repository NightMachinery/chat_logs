[00:32:52] *** Joins: v_m_v (~vm_v@adsl-84-226-66-30.adslplus.ch)
[00:57:09] <v_m_v>  I would like to remove some words from by string. What is the easiest way to do it in Chicken?
[00:57:21] <v_m_v> There are repetition
[01:05:08] <v_m_v> oh ...I have figured it out :D there is string-substitute* :D
[01:12:05] <klovett> v_m_v: also irregex-replace/all in (chicken irregex), unless using the regex egg
[01:14:40] <v_m_v> klovett: thank you!
[01:23:16] *** Quits: v_m_v (~vm_v@adsl-84-226-66-30.adslplus.ch) (Remote host closed the connection)
[01:47:38] <jcroisant> Bunny351: What is the search engine you have? If it is a C library, it might be a good test case for Jiffi and I'd be happy to work on it
[01:57:54] <jcroisant> Oh I read back more, nevermind. ^_^;
[02:52:09] *** Quits: Zipheir (~wcm@98.4.178.27) (Quit: BRB)
[03:34:32] *** Quits: Soni (~quassel@autistic.space) (Ping timeout: 240 seconds)
[03:40:47] <Bunny351> jcroisant: what's jiffi?
[03:44:22] <jcroisant> Bunny351: It's the FFI library I've been working on
[03:46:44] <Bunny351> ah
[03:51:17] *** Quits: fantazo (~fantazo@192-164-154-92.hdsl.highway.telekom.at) (Ping timeout: 240 seconds)
[03:51:18] <Bunny351> what sort of approach does it use?
[04:10:51] *** Joins: Soni (~quassel@autistic.space)
[04:21:08] *** Quits: shawn (~shawn_w@152.44.212.188) (Quit: Leaving)
[04:33:43] *** Joins: Zipheir (~wcm@98.4.178.27)
[04:45:02] *** Joins: brocolis (~chatzilla@user/brocc)
[04:50:01] *** Quits: johnjaye (~pi@173.209.65.233) (Ping timeout: 256 seconds)
[04:51:44] *** Joins: johnjaye (~pi@173.209.65.233)
[05:19:14] *** Joins: ZombieChicken (~weechat@user/zombiechicken)
[05:37:10] *** Quits: brocolis (~chatzilla@user/brocc) (Quit: Quit)
[05:50:14] <jcroisant> It provides many helpers for common FFI use cases, to make it easier to write good quality bindings to C libraries. I want to try it with many different libraries to make sure there aren't common use cases I am missing
[06:04:03] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 268 seconds)
[06:06:50] *** Joins: skapata (~Skapata@user/skapata)
[07:11:37] <vandusen> [eggs] Error fetching CHICKEN 4 .release-info file for the following eggs: nanovg
[07:57:02] *** Quits: m455 (~m455@user/m455) (Quit: WeeChat 3.0)
[08:01:03] *** Joins: s-liao (~s-liao@101.86.96.21)
[08:07:21] *** Quits: ublx (~ublx@user/ublx) (Quit: ublx)
[08:17:24] *** Quits: ZombieChicken (~weechat@user/zombiechicken) (Ping timeout: 276 seconds)
[08:30:15] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[09:04:20] *** Quits: johnjaye (~pi@173.209.65.233) (Ping timeout: 250 seconds)
[09:06:16] *** Joins: johnjaye (~pi@173.209.65.233)
[10:07:16] *** Joins: elderK (uid205007@id-205007.helmsley.irccloud.com)
[10:25:23] *** Joins: fantazo (~fantazo@192-164-154-92.hdsl.highway.telekom.at)
[10:30:30] <sjamaan> Bunny351: Why can't it be done transparently?
[10:33:32] *** Quits: klovett (~klovett@166.205.90.179) (Quit: ZZZzzz…)
[11:10:32] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[11:30:27] *** Quits: ecloud (~quassel@192.89.120.58) (Ping timeout: 256 seconds)
[11:38:15] *** Joins: ecloud (~quassel@192.89.120.58)
[11:43:05] *** Joins: s-liao (~s-liao@101.86.96.21)
[11:52:01] <klm> Bunny351: I'm curious how gdbm differs from leveldb and rocksdb (for which there are already eggs). LevelDB is probably also a good candidate for storing an index
[11:56:01] <klm> And then there's the lmdb egg too of course.
[12:17:05] *** Quits: elderK (uid205007@id-205007.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[12:22:59] *** Joins: v_m_v (~vm_v@adsl-84-226-66-30.adslplus.ch)
[12:28:02] <wasamasa> I haven't used leveldb or rocksdb
[12:28:11] <wasamasa> gdbm is a very, very stupid key-value store
[12:28:21] <wasamasa> no transactions, ordering or whatever
[12:29:13] *** Quits: v_m_v (~vm_v@adsl-84-226-66-30.adslplus.ch) (Remote host closed the connection)
[12:29:25] <wasamasa> the GNU version of dbm/ndbm
[12:32:15] *** Quits: xaltsc (~xaltsc@user/xaltsc) (Remote host closed the connection)
[12:32:21] <klm> yes, I just read its wikipedia article. I wonder how what disadvantages/advantages turn up when the keys aren't sorted. I've only worked with sorted kv stores
[12:33:24] <klm> Bunny351: I'm curious as to how you built your search engine. Is any code available online? Also, what's rc (1)?
[12:33:38] <wasamasa> a very simple shell
[12:34:14] <wasamasa> the plan9 kind
[12:34:34] <wasamasa> http://doc.cat-v.org/plan_9/4th_edition/papers/rc
[12:47:19] <klm> wasamasa: it really is true, you are a master of lookup up stuff :-) thanks
[12:48:04] <wasamasa> I wrote some code using gdbm, but it's not public
[12:51:39] <wasamasa> one script turns the results of scanning the internet for gopher services into a gdbm database
[12:51:51] <wasamasa> the other script queries that database with a very simple query language
[12:53:00] <wasamasa> for stuff like, all servers having a specific software mentioned in their banner
[12:53:11] <wasamasa> or using a non-default port
[12:53:18] <wasamasa> or funny link types
[12:54:24] <klm> it feels like doing something with svnwiki-sxml should give us something usable very quickly. but then again, these feelings are very often wrong. the scope of building a good search engine is probably _a lot_ of work.
[12:55:43] <wasamasa> the reason I picked gdbm is because it was shipped with ruby (sqlite wasn't for some reason) and it seemed a lot more reasonable than inventing my own thing or messing with some yanky nosql thing
[12:56:08] <klm> Since our dataset is very small, we could probably keep it all in RAM and just grep through all of it.
[12:56:56] <klm> I mean, maybe we don't need to build an index
[12:57:37] <s-liao> Which dataset  are you referring to?
[12:58:07] <mario-goulart> Maybe a single web interface to a subset of grep with a timeout could do the trick.
[12:58:08] <klm> the wiki, manual, svnwiki eggrefs I guess - whatever is included in the search box on call-cc.org
[12:58:18] <mario-goulart> s/single/simple/
[12:59:19] <klm> My limited experience of search engines is that they explode in scope quickly
[13:00:04] <klm> mario-goulart: That might just be simple enough to work out quite actually :-)
[13:00:31] <klm> But we should probably be able to distinguish between identifiers and free-text hits
[13:00:54] <klm> ... and there, the scope just exploded a bit
[13:01:11] <mario-goulart> :-D
[13:01:50] <mario-goulart> For identifiers we have chickadee already, actually.  We could use chicken-doc for identifiers.
[13:02:14] <mario-goulart> And grep (or ripgrep, ag, whatever) for the rest.
[13:02:21] <klm> How does chicken-doc (or that package you download separately) build up its list of identifiers?
[13:02:30] <mario-goulart> Out of wiki markup.
[13:02:51] <klm> yeah, I use chickadee a bit and it's nice
[13:02:56] <mario-goulart> <procedure>...</procedure>, <syntax>...</syntax> etc.
[13:03:14] <klm> But that isn't parsed (at least not by scnwiki-sxml) as far as I can tell
[13:03:37] <klm> It yields (procedure "(num/roman <n>)"), for example. So that string has to be parsed again
[13:04:47] <mario-goulart> Hmmm.  I don't know details on the internals, unfortunately.
[13:04:55] <wasamasa> there is a lot of massaging involved
[13:05:00] <wasamasa> like fixing up ivanisms :D
[13:05:15] <wasamasa> because he uses ML-style signatures for some reason
[13:05:55] <wasamasa> last time I looked at it, it used read whenever possible
[13:06:19] <wasamasa> then if the result is a symbol, just the symbol, if it's a list, then its car and if it's a keyword, then it's an ivanism
[13:06:38] <wasamasa> I pointed out that using read is slightly overkill, but I don't remember what became of this
[13:07:04] <wasamasa> ah, I submitted a patch to do better
[13:07:28] <s-liao> Like the signatures information already are indexed as part of meta info. I suppose it will be distributed into the different source.
[13:08:23] <klm> the correct solution to this, of course, is to formalize this. But that would require everyone on board which is always the hardest part
[13:08:46] <s-liao> I mean the signatures index  naturally has.
[13:09:35] <klm> wasamasa: ddot, for example, is indexed (without the :: which is in the wiki) so your patch seems to have worked 
[13:09:56] <s-liao> Integrate into the tools to process. People will follow it.
[13:10:29] <wasamasa> I found some weird cases where the indexing failed, hence why I submitted the patch
[13:11:47] <wasamasa> yeah, it was with the openssl egg
[13:11:52] <klm> s-liao: We'd need a good place for that tool. People don't use tools to read the documentation of their own code
[13:12:00] <wasamasa> some identifiers weren't indexed because read couldn't handle unbalanced pipes
[13:12:24] <wasamasa> so I wrote a patch that only uses read on the identifier, not the whole form containing the identifier
[13:14:52] <wasamasa> for the record, the patch hasn't been accepted
[13:17:06] <klm> does chickadee use chicken-doc for its data-source?
[13:17:11] <wasamasa> yes
[13:18:48] <s-liao> But they said chicken-doc is from wiki.
[13:19:55] <wasamasa> it's weird though, chickadee seems to know all the identifiers it didn't before
[13:22:33] <s-liao> One moment, I will that issue, I used to work.
[13:22:51] <Bunny351> klm: I try to avoid google stuff, it's usually overengineered, and nobody needs that level of scalability anyway
[13:24:08] <Bunny351> the search engine is very simple: store an index of words, where each word points to a number of files (hashes in my case), searching for a set of words just returns the intersection of all files that appear in the stored value for each word
[13:25:39] <klm> mario-goulart: another crazy search-engine idea: produce an index and serve it as a static file. then use JavaScript to find matches using that file. nothing running server-side, simple and secure :-) Mozilla did that for a project, I will try to find a link
[13:26:36] <klm> Bunny351: I see, cool. how does it work in practice?
[13:27:46] <s-liao> wasamasa that is the issue.
[13:28:05] <s-liao> https://github.com/ursetto/chicken-doc/issues/8
[13:28:24] <wasamasa> no, it's not
[13:28:49] <Bunny351> klm: well enough, not sure about the scalability, of course
[13:28:59] <s-liao> What do you mean?
[13:29:30] <wasamasa> it's an unrelated non-issue
[13:29:58] <Bunny351> with an 800MB index (17200 words) searching takes about a quarter second
[13:30:01] <s-liao> Okay
[13:32:29] <wasamasa> here's one of the previously failing cases: https://api.call-cc.org/5/doc/directory-utils#sec:find-file-pathnames
[13:32:38] <wasamasa> the issue is that the signature contains a single, unbalanced pipe
[13:32:45] <wasamasa> if you use read to parse it, that fails
[13:33:19] <wasamasa> but it's listed on the index, so I guess Jim applied the patch?
[13:33:26] <wasamasa> and forgot to push the change?
[13:34:02] <wasamasa> I'd have to install 5.3.0 and chicken-doc to see whether this is indeed the case
[13:35:30] <wasamasa> nevermind
[13:35:36] <wasamasa> it's only listed there, but not in the index
[13:36:37] <s-liao> Yes
[13:37:32] <s-liao> It was not indexed. it is just in ,sxml file.
[13:41:30] <s-liao> But it is indexed in wiki? http://wiki.call-cc.org/
[13:44:49] <s-liao> is the index built in the different project?
[13:46:32] <klm> Bunny351: whoa, that is substantially larger than what I expect would be needed for a wiki/chicken-doc index
[13:48:08] <wasamasa> index has a very specific meaning here
[13:48:11] <wasamasa> mapping from identifier to definition
[13:48:14] <wasamasa> like a phone book
[13:51:22] <s-liao> Yes. Not sure why they have in the different project.
[13:52:16] <wasamasa> how the projects are organized is again, completely irrelevant
[13:52:21] <wasamasa> I explained the actual issue above
[13:52:55] <wasamasa> the code that creates the index fails on a handful of identifiers
[13:53:02] <wasamasa> these identifiers don't end up in the index
[13:53:16] <s-liao> Yeah. understood.
[13:54:34] <s-liao> Which tool  generate the ,defs file?
[13:55:26] <s-liao> for each wiki page, like https://wiki.call-cc.org/eggref/5/directory-utils
[13:55:37] <wasamasa> https://wiki.call-cc.org/eggref/5/chicken-doc-admin
[13:56:54] <s-liao> Thanks. we should raise the issue as you mentioned in the above.
[13:57:06] <s-liao> https://github.com/ursetto/chicken-doc-admin
[14:06:13] <wasamasa> lol
[14:06:18] <wasamasa> start with reading what I wrote
[14:06:39] <wasamasa> the issue is known, there is a patch and chicken-doc-admin isn't even the affected package
[14:07:43] <s-liao> You mean that the patch does not work for chicken-doc-admin package?
[14:11:15] <wasamasa> it's a patch for svnwiki-sxml
[14:17:05] <s-liao> Yes. but I would like say that for simplifing  the task, we have a tool for the end user to edit the svnwiki in Emacs. Not patch the different case, it take times to do that.
[14:20:41] <wasamasa> that would be a workaround at best
[14:24:15] <s-liao> Like insert the different style signatures from the list of the style. If there is not in the list. then it needs a new one , it should request one to the admin, who has the authority to do the new value into the list.
[14:41:07] <mario-goulart> klm: that would require javascript support in browsers.  Our sites don't require javascript.
[14:41:46] <mario-goulart> Well, api.call-cc.org does, I guess (never tried to use it without js).
[14:49:50] <wasamasa> melpa does this and it's annoying as fuck
[14:50:14] <wasamasa> especially when on a less than perfect internet connection
[14:55:20] *** Quits: clacke (88d96f2df3@knopi.disroot.org) (Remote host closed the connection)
[15:03:49] <s-liao> Maybe https://api.melpa.org/#/ much better.
[15:07:52] <s-liao> Honestly,  melpa.org just works in my side occasionally, it always is holding.
[15:34:07] *** Quits: johnjaye (~pi@173.209.65.233) (Ping timeout: 256 seconds)
[15:35:44] *** Joins: crumpo (~crumpo@user/crumpo)
[15:37:34] *** Joins: rnlf (~rnlf@mail.base13.de)
[15:39:07] <rnlf> heya all. new scheme user here, hoping to finally properly learn the language with chicken :)
[15:39:25] <crumpo> Same here :)
[15:41:33] <sjamaan> Hi and welcome, rnlf and crumpo
[15:44:20] <rnlf> Thanks!
[15:45:34] <crumpo> Thanks ^^
[16:01:51] *** Joins: ublx (~ublx@user/ublx)
[16:24:28] <Bunny351> api.call-cc.org works fine without JS
[16:27:00] <s-liao> Is it possible to combine the search function (api.call-cc.org ,https://wiki.call-cc.org/)to one package.
[16:29:56] <s-liao> it is needed? The issue as wasamasa said in the above, what I found out, search function are different in wiki.call-cc.org and api.call-cc.org
[16:31:33] <s-liao> I mean for identifier
[16:35:30] <s-liao> Where is the wiki page from? I mean that data source.
[16:37:02] <s-liao> Like man and eggref folders
[16:37:15] <s-liao> Bunny351
[16:38:15] <sjamaan> s-liao: It's from our svn repository. You can browse it here: https://bugs.call-cc.org/browser/project/wiki
[16:38:29] <rnlf> I have a small bugfix for chicken-bind, but I can't figure out where to send a patch
[16:39:54] <rnlf> Any help?
[16:40:18] <sjamaan> rnlf: The wiki says it's by Bunny351 and klm 
[16:40:55] <sjamaan> But in general, when there's no clear place to send it to, chicken-users is probably best - most egg authors are on there
[16:42:57] <rnlf> Allright, will send it there. Thanks!
[16:43:25] <Bunny351> or send it to me
[16:43:39] <Bunny351> but chicken-users is probably a good start
[16:44:33] <rnlf> It's really a small fix, is it okay if I send it to you in a query, Bunny351?
[16:45:24] <s-liao> sjamaan yes. I mean the original source. In the log of the repo , all of them were added by someone
[16:46:36] <s-liao> It wrote by the developer?
[16:46:58] <sjamaan> Usually an egg author writes docs for their eggs, yes
[16:47:31] <sjamaan> The manual was originally a set of HTML pages I think, we ported it to wiki later and other bits are a copy of RnRS into the wiki
[16:47:49] <Bunny351> mlf: sure
[16:51:51] <s-liao> Thanks. I see.
[16:56:36] <s-liao> Can I ask there is a tool for user to prepare the document. Or the an egg author just generate the document.
[16:58:23] <sjamaan> It's a wiki, you can just make the document
[17:00:12] <wasamasa> https://github.com/chicken-contrib/svnwiki-mode
[17:01:33] <s-liao> Okay.
[17:04:46] <s-liao> But I used to publish the knowledge of develop process on wiki page. The manual and spec is not there.
[17:06:25] <vandusen> SPAM! SPAM! SPAM! by freee
[17:09:17] <s-liao> Anyway, it just is a way to prepare the document.
[17:32:52] <vandusen> [eggs repo (r41041, by felix)] bind 1.2.5: added missing cmdline option (contributed by rnlf)
[17:40:27] <rnlf> \o/
[17:40:42] <rnlf> That was quick
[17:40:46] <s-liao> Cool
[17:44:58] <s-liao> One stupid question, why import  identifiers and the identifiers in module declare no parameters? Not like the way of the signature of the function
[17:47:30] <s-liao> sjamaan
[17:48:08] <sjamaan> I don't understand
[17:50:36] <s-liao> Like (module (srfi 178)
[17:50:36] <s-liao>   (bit->integer bit->boolean  ; Bit conversion
[17:50:37] <s-liao> )
[17:51:12] <sjamaan> It just declares what identifiers are exported
[17:51:27] <sjamaan> It makes no sense to repeat the argument list here *and* in the actual definition
[17:51:42] <sjamaan> Also, you could set! the identifier to a different procedure (or even a non-procedure value)
[17:53:44] <s-liao> Okay. you mean that is it easy to override.
[17:55:03] <s-liao> I thought that extract the signature of the function from source code.
[17:58:38] *** Joins: klovett (~klovett@166.205.90.179)
[18:11:15] <s-liao> As we talked before, the author of egg prepare the wiki page for the release document of his/her eggs in wiki.call-cc.org, then it transform the html page to the sxml file for https://api.call-cc.org. Then user in REPL (import chicken-doc), then ,doc PATHSPEC, user can see the document of the function.
[18:11:33] <vandusen> [eggs] bind version 1.2.5 (for CHICKEN 5) has been released
[18:13:09] <wasamasa> how is that any different from how it's done already?
[18:14:31] <s-liao> Rather than such a process, Rather the author has signature of the function in the source code.
[18:15:25] <sjamaan> s-liao: Where would you stick the corresponding description then?
[18:16:03] <s-liao> Yes. I also am thinking about this.
[18:17:09] <sjamaan> What perceived problem does this solve?
[18:18:12] <s-liao> Is it possible like c-style before the signature of the function has the description /* desc*/
[18:18:28] <sjamaan> s-liao: Look into the "hahn" egg if you want documentation in your code
[18:18:42] <sjamaan> It can extract the docs and put it on the wiki
[18:18:53] <s-liao> Okay.
[18:19:03] <sjamaan> But beware that this also means that any improvements users make on the wiki will be discarded when you replace the docs with updated version
[18:21:42] <wasamasa> mind you, hahn is still broken
[18:22:55] <s-liao> It does not solve any problem. it just the signature of the function is more close to the coding place of the developer  And like put the meta data where it first was there.
[18:24:20] <vandusen> SPAM! SPAM! SPAM! by freee
[18:25:14] <s-liao> Yes. hahn is not chicken 5 yet.
[18:26:22] <wasamasa> I don't see it getting a port unless its author gets back to scheme coding
[18:26:51] <wasamasa> https://code.dieggsy.com/chicken-chalk/
[18:27:15] <wasamasa> you could use this, but the benefit is debatable
[18:28:23] <dieggsy> i like it, but I'm biased lol
[18:28:31] <dieggsy> i also haven't been coding scheme for the past half year or so so there's that
[18:29:24] <dieggsy> i do plan to get back to it, just had some major lifestyle changes the past couple years
[18:30:38] <s-liao> Thanks.
[18:34:32] <s-liao> (: subbytestring-ci=?
[18:34:32] <s-liao>    (bytestring bytestring #!optional integer integer integer --> boolean)) like the signature  can be put before its definition
[18:41:17] <s-liao> Basically my idea is for like the signature of the function,  it has one better one place, then publish to the different documents. not transform anywhere. Wiki page is not a bad idea, but be careful to prepare it.
[18:42:19] <s-liao> Have to get a sleep. Thanks all of you.
[19:03:09] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[20:23:35] *** Quits: crumpo (~crumpo@user/crumpo) (Quit: Buh bye)
[20:28:32] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:7565:d4ee:7344:b4a0)
[20:28:32] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:7565:d4ee:7344:b4a0) (Changing host)
[20:28:32] *** Joins: skapata (~Skapata@user/skapata)
[21:25:37] <Zipheir> Wow, I just wrote that function for srfi-207, but it's not released yet.
[21:25:45] <Zipheir> s-liao is magic.
[21:39:37] <klm> s-liao has a point. I've never been excited about putting all my documentation efforts into a wiki, I feel it belongs with my code. So it's versioned along with the API etc etc. I use svnwiki-markdown to turn my Readme.md into wiki eggref and manually update the wiki whenever I change the readme. I think that works out ok.
[21:40:57] <klm> But it would be a fun experiment to go in the direction of what s-liao is saying: have that all those readme.md's for eggs scraped and put into the wiki.
[21:41:46] <Zipheir> Optimally, the source could be scraped, too (mainly for type signatures or even magic comments [gasp]).
[21:46:11] <Bunny351> doxygen!
[21:46:24] <Bunny351> vandusen: NO!
[21:46:26] <vandusen> Bunny351: MOVE SOMEWHERE NEW AND START A NEW LIFE
[21:47:53] <mario-goulart> Yeah, our documentation really needs some improvements.  I don't think being in a wiki is useful at this point.
[21:48:36] <Zipheir> vandusen: Great response :)
[21:48:38] <vandusen> Zipheir: COMPUTER SCIENCE WITH T-REX
[21:49:21] <mario-goulart> I agree that the documentation should be in the same repository as the code.
[21:49:33] <Zipheir> I for one find the wiki very useful.
[21:50:10] <mario-goulart> I find the wiki useful, but not exactly for the documentation of CHICKEN and eggs.
[21:54:41] <Zipheir> Unsurprisingly, the well-written and regularly-updated wiki pages are useful; the stubs, less so.
[21:55:22] <Zipheir> But the documentation is still usually better than the semi-autogenerated stuff on Hackage or other "advanced" doc systems out there.
[21:57:49] <mario-goulart> Definitely.
[22:31:16] <Bunny351> I think the docs are actually pretty good. some things are just out of date
[22:33:16] *** Quits: ublx (~ublx@user/ublx) (Quit: ublx)
[22:49:56] <klm> mario-goulart: oh ok, I didn't know js-less was a goal.
[22:50:15] <mario-goulart> Bunny351: That's pretty much a matter of taste and expectations, actually.
[22:50:23] <mario-goulart> For example, it's not easy to get documentation for a specific version of an egg other than the latest (or some random version, in case the documentation is outdated), some egg pages barely have a changelog, some don't have license information, only recently they started mentioning the code repository, most don't have contact information in case users want to report bugs etc.
[22:51:23] <mario-goulart> And that's assuming they actually document what eggs provide.
[22:57:40] <Bunny351> that's what you get with a low-overhead distributed software library
[22:58:22] <Bunny351> it's impossible to have something truly satisfying for eggs, all we can do is try our best with the core manual
[22:58:43] <Bunny351> and manually written documentation is in my experience always superior
[22:59:26] <Zipheir> vandusen: There's a reason they call it the 'manual'.
[22:59:28] <vandusen> Zipheir: COMICS WITH A NICE CAKE IN THE LAST PANEL
[23:00:25] <Bunny351> also, software ecosystems change, it's an uphill battle, it will never be good enough
[23:00:39] <Bunny351> all we can do is try and try
[23:00:43] <mario-goulart> Ok, so we agree it's not good enough. :-)
[23:00:59] <Bunny351> as it's a wiki, we invite people to help
[23:01:15] <Bunny351> mario-goulart: you can try to improve it in your copious spare time! :-)
[23:01:22] <mario-goulart> :-D
[23:01:55] <Bunny351> instead of complaining here about it, you could have used 15 minutes to work on the docs!
[23:03:00] <mario-goulart> I'm documenting the problems over IRC!
[23:03:05] <Bunny351> excellent!
[23:03:09] <mario-goulart> My point is that over the years having a wiki for egg documentation hasn't contributed to their quality.
[23:03:18] <Bunny351> no, that's true.
[23:03:26] <mario-goulart> Or CHICKEN documentation.
[23:03:33] <Bunny351> What bugs me is that things are not up to date anymore
[23:03:45] <Bunny351> the manual isn't too bad, though
[23:08:40] <Bunny351> but we had this discussion at the CHICKEN Jam
[23:09:10] <Bunny351> beginners info + intermediate tutorial (recpipes?) + reference
[23:09:40] <Bunny351> We should overhaul the getting-started chapter
[23:10:18] <Bunny351> also, perhaps really generate some stub docs for undocumented eggs, as a reminder something to get started at all
[23:10:33] <Bunny351> (...and something...)
[23:10:57] <mario-goulart> plus examples
[23:10:58] <Bunny351> and somehow start an effort to come up with recipes for common problems
[23:11:20] <Bunny351> right
[23:23:35] <mario-goulart> I think I've stubled upon an utf8 issue right after the utf8 efforts were announced.
[23:24:39] <mario-goulart> Apparently there's no straightforward way to interactively and safely read-line with utf8 input.
[23:27:50] <mario-goulart> I think backspace might corrupt the input, as it might delete fractions of a multi-byte utf8 char (at least that's my understanding of the situation).
[23:28:35] <Zipheir> That's what happens currently, at least.
[23:31:52] <mario-goulart> I happen to have a hacked version of parley with utf8 support, but it's bigger than the code that would have to add it as a dependency (and parley itself drags some dependencies).
[23:38:54] <mario-goulart> vandusen: utf8 is the new numbers
[23:38:56] <vandusen> mario-goulart: And perhaps...a FIREMAN'S POLE and WATERSLIDE??
[23:40:51] <Zipheir> (import waterslide)
[23:44:11] <mario-goulart> ; loading /usr/lib/chicken/11/firemans-pole.so ...
[23:50:24] <mario-goulart> Bunny351, sjamaan: I suppose we'll need a utf8 `feature' in the runtime, right?  I think this may be necessary if we try to add utf8 support to C5.  The utf8 egg will probably have to cond-expand against that feature and noop in case it's present.
