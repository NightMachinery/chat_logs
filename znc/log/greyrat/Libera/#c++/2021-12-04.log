[00:01:16] <PJBoy> I think C++ does what C does better than C
[00:01:56] <RandomReader> ...oh no I was wrong, must have been confused about compiler extensions myself: 0b is new to C23
[00:02:39] <RandomReader> so proposed but not final yet, only a C++ thing for now
[00:03:43] *** Quits: rgrinberg (~textual@187.223.144.204) (Ping timeout: 256 seconds)
[00:05:54] <PJBoy> I think the only features C has that C++ doesn't is VLAs and flexible array members
[00:06:16] <PJBoy> compound literals if you can count that
[00:08:23] <PJBoy> and in C23, decimal floating points
[00:08:34] <RandomReader> designated initializers (that are useful), static array annotations
[00:08:45] <PJBoy> oh yeah, indeed
[00:09:49] * PJBoy looks up the static thing
[00:09:49] <RandomReader> I don't miss any of those in C++ because I just express it differently, but I think many of the other significant features have more direct equivalents
[00:10:07] <RandomReader> except designated initializers, because there is nothing for that
[00:10:19] <RandomReader> I don't miss them because I don't write my interfaces that way :P
[00:10:33] <PJBoy> it's declares an array must have a minimum number of elements
[00:10:52] <PJBoy> that's cool I guess
[00:11:21] <RandomReader> C needs that because it doesn't have any of the custom type expression C++ does, so no library solutions
[00:11:35] <RandomReader> but it's nice to see better support for bare arrays
[00:11:38] <PJBoy> flexible member arrays have been proposed for C++ a few times
[00:12:00] <SuperNintendoSUX> what about this as an alternative https://github.com/Echorial/Carbon ?
[00:12:02] <PJBoy> they're not easy to do in C++ at all
[00:12:35] <RandomReader> C++ has a stronger type system, so again I just treat a flexible array member as what it is: data
[00:12:48] <RandomReader> it's not more difficult to abstract than any other data
[00:13:04] <RandomReader> you just don't represent it as "the object"
[00:14:56] <PJBoy> I mean you can't grow a struct in C++
[00:15:09] <RandomReader> but I don't *need* to grow a struct in C++
[00:15:25] <PJBoy> yeah but maybe you want to
[00:15:31] <Raziel> well when two structs love eachother very much... you get an ECS and compose them together
[00:15:33] <PJBoy> memory locality kinda thing
[00:15:40] <RandomReader> yes but that's just data
[00:15:45] <RandomReader> I've got full ability to create custom types, supporting particular operators, on any data I want
[00:16:00] <RandomReader> there's zero requirement to represent the *storage* as a member of a bag of data
[00:16:19] <RandomReader> that's only a thing in C because there's nothing better, that's the extent of your ability to customize
[00:16:46] <RandomReader> put another way, think of it more like a serialization problem
[00:17:22] <joomla5> oh I forgot to add "operators" to my list, god knows what C++20 has added to the mess
[00:19:19] *** Joins: rgrinberg (~textual@187.223.248.37)
[00:19:42] <PJBoy> it added the ability to not need to define operator== and all the other comparison operators
[00:19:51] <Raziel> it also added <=>
[00:19:56] <Raziel> mmmm, <=>
[00:20:05] <PJBoy> which also doesn't need to be defined
[00:20:10] <Raziel> indeed
[00:20:33] <Raziel> but knowing it's been added and knowing what it does is still a decently good idea
[00:21:07] <RandomReader> C++20 basically helps the logical-relational folks by making some comparisons more formal
[00:21:25] <RandomReader> (which just goes to consistency and stability of result, several other languages do the same thing)
[00:22:44] *** Quits: Ameisen (~ameisen@digitalcarbide.com) (Quit: Quitting)
[00:22:49] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[00:23:13] <joomla5> my point is there is too much of all these additions, it's ok to write some extra code in replace of these additions. I would say the only feature I like about C++ is function overloading, wish C had that.
[00:23:24] <RandomReader> these aren't additions though
[00:23:49] <RandomReader> which I think is part of the problem with the perspective you seem to be expressing: as if C++ is a set of things added to C
[00:24:07] <RandomReader> it's not, it's a different language, including a very different core object model
[00:24:16] *** Joins: Ameisen (~ameisen@digitalcarbide.com)
[00:24:18] <RandomReader> it just happens to overlap on a bunch of syntax and some semantics
[00:24:38] <RandomReader> trying to learn C++ as if it were just changes relative to C is a world of pain .. I know, I tried it
[00:25:17] <whupdup> C/C++, or as I've started calling it, C+C++
[00:27:44] <joomla5> but the base of it was C, the core was probably redesigned to support OOP which is fine. But it didn't have to have operator overloading added as a feature. It didn't need to have 3 different types of initializers, () vs {} vs =.
[00:28:20] <RandomReader> that would be a misunderstanding
[00:28:43] <RandomReader> the "object model" I'm talking about is the same kind of "object" C has
[00:29:03] <RandomReader> what C++ did was strengthen the type system and allow the programmer to create true custom types
[00:29:19] *** Quits: Ameisen (~ameisen@digitalcarbide.com) (Quit: Quitting)
[00:29:49] *** Joins: Ameisen (~ameisen@digitalcarbide.com)
[00:29:51] <Raziel> the "need to have" things can be weird taken out of context. most things that are like that weren't actually added at the same time. and most old things don't get removed when newer ones are added, because... backwards-compat I guess
[00:30:08] <RandomReader> in both languages an object is a conceptual wrapper around data, which has storage .. an object has a type associated with it, which then defines the nature of the data and the operations supported on it
[00:30:28] <RandomReader> int stores integers, supports +addition, -negation, assignment of new integers, etc
[00:30:42] <RandomReader> all abstract language theory stuff, expressed in a built-in way
[00:31:19] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Quit: ZNC - https://znc.in)
[00:32:15] <RandomReader> what C keeps a bit fuzzier is object lifetime and transformation .. the loose (but not fully accurate) way to describe it might be to say that an object does not exist until the first time storage is initialized, which can happen a long time after it has been created
[00:32:19] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[00:32:39] <RandomReader> but that makes for poor reasoning, particularly if a type system is your way of expressing contracts about the data and program flow
[00:32:49] *** Quits: Fozzworth_ (~Fozzworth@68-123-12-205.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 268 seconds)
[00:32:50] <Raziel> also, the fact that there's many different ways of achieving something can be overwhelming and can seem like a lot of things to learn, but you can also just... not use a lot of em. with some older things, it's recommended to not use them even, because there's newer ways that are considered better
[00:33:02] <RandomReader> C++ tightened that up: an object begins life when it is first created, initialization occurs at the same time
[00:33:29] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[00:33:50] <RandomReader> and then added the ability to create custom types, with "hooks" for all of these points .. so you have one mechanism to define a type (struct), the ability to determine how initialization happens (constructor), the ability to define what operations are supported (operator overloads), etc
[00:34:39] <RandomReader> this is a different object model, a more defined one, and a more customizable one
[00:34:41] <ville> you mean c++ fucked it up
[00:34:46] <Raziel> if you don't wanna use operator overloads, you're perfectly free to use normal methods :p
[00:34:48] <RandomReader> it *also* added the ability to express OOP forms with type hierarchies and inheritance, but that's orthogonal to all of this
[00:34:50] <joomla5> The issue is not learning tho, issue is forgetting what you have learned because you never use it and only went over it because of some one else code, give it 3 weeks and you have to do it again. But that rarely happens with C or python or javascript, their syntax is universal because they don't have to support a mountain of features.
[00:34:52] <Raziel> .add instead of +
[00:35:15] *** Quits: SuperNintendoSUX (~sjw@69.206.48.64) (Remote host closed the connection)
[00:35:35] <RandomReader> but the custom type support means you can create your own types that behave as similar or different to built-in types as you need them to
[00:35:43] <RandomReader> which leads to more directly expressive and easier to read code
[00:35:50] <Raziel> the fact that there's a lot of things and some are rarely if ever used can lead to that problem, yes
[00:36:20] <jdavfsxd> it's like a tour of c++ in irc.
[00:36:27] *** Joins: SuperNintendoSUX (~sjw@69.206.48.64)
[00:36:29] <Raziel> lol
[00:36:43] <RandomReader> initialization on the other hand .. I can't argue with there being too many forms of that
[00:36:57] <RandomReader> some variety is useful because it influences syntax, which can have benefits to readability
[00:37:00] <Raziel> over to your right you can see the latest fresh new bullshit, known as "modules". no one's sure if it's ever gonna actually be adopted in real use, but people agree that it's a nice idea.
[00:37:07] <RandomReader> but I'd be hard-pressed to defend every option that exists today
[00:37:29] <ville> RandomReader: c++'s rules also lead to more crap than necessary and not clearer code at the same time
[00:37:45] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[00:37:57] <jdavfsxd> it just piles upon c
[00:38:13] <joomla5> and not all of them are supported the same way. i.e calling a class constructor which sets a constant member value has to use a initializer list, can't be done other wise, like common lol
[00:38:35] <jdavfsxd> come on*
[00:38:53] <joomla5> ^ thanks for the correction.
[00:38:53] *** Joins: vicfred (~vicfred@user/vicfred)
[00:39:25] <RandomReader> the initializer list is the only way to initialize members, there is no other way
[00:39:37] <joomla5> I imagine  a group of language maintainers sitting in a room going "hey I have another idea...". please stop.
[00:39:41] <RandomReader> you might be thinking of assignment, like java, but that's never been the suggested approach by C++
[00:39:51] *** Joins: noarb (~noarb@user/noarb)
[00:39:56] <RandomReader> C++ doesn't make its constructors that much more special than ordinary functions .. it's actually more consistent
[00:40:02] <jdavfsxd> even nsdmi does it behind the scenes :)
[00:40:41] <ville> jdavfsxd: it's just dmi. nsdmi never made it as a term
[00:40:45] <RandomReader> I see this be an issue for folks trying to frame C++ in terms of another language, but not when part of structured learning for just C++
[00:40:52] <jdavfsxd> !nsdmi
[00:40:53] <nolyc> An example for NSDMI (Non Static Data Member Initializer) is: struct A { int x = 42; };
[00:41:02] <jdavfsxd> :-*
[00:41:13] <ville> !rmfactoid nsdmi
[00:41:15] <nolyc> ville: Error: "rmfactoid" is not a valid command.
[00:41:20] <jdavfsxd> :D
[00:41:20] *** Quits: triad (~triad@user/triad) (Ping timeout: 252 seconds)
[00:41:32] <jdavfsxd> don't do that boy
[00:41:58] <jdavfsxd> let it there for the history embedded in it
[00:43:13] <Raziel> I also find it hard to imagine anyone's gonna get that confused about an initialization or constructor use when they see it. all the forms are pretty obvious v:
[00:43:28] <jdavfsxd> << S{}.x ; struct S { const int x = 42; };
[00:43:28] <geordi> 42
[00:45:51] <PJBoy> C++ and python are pretty similar in terms of number of features
[00:45:58] <PJBoy> and syntax complexity and all that
[00:46:59] <PJBoy> probably wouldn't agree that python uses commonly used syntax though
[00:47:20] *** Quits: rgrinberg (~textual@187.223.248.37) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:47:29] <ville> Raziel: struct aa { union { int x = 0; }; }; with some variations to that pretty sure you can trip quite few people
[00:47:33] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[00:48:09] *** Quits: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net) (Read error: Connection reset by peer)
[00:48:18] <RandomReader> "common syntax" varies over time too .. I remember when Perl was a common point of comparison for new languages, particularly involving string operations
[00:48:34] <RandomReader> these days it never gets mentioned
[00:49:14] <PJBoy> does C++ even have unnamed unions?
[00:49:42] <PJBoy> it does(!)
[00:50:02] <ville> PJBoy: umm, do you mean anonymous?
[00:50:11] <PJBoy> well it doesn't have a name does it?
[00:50:37] <ville> c++ calls it anonymous. unnamed and anonymous are different things in c++ in some contexts
[00:50:39] <PJBoy> but yes, that's what cppreference calls it
[00:50:44] <joomla5> ```struct {
[00:50:44] <joomla5>  int a;
[00:50:44] <joomla5>  struct {
[00:50:44] <joomla5>   int b;
[00:50:44] <joomla5>   int c;
[00:50:44] <joomla5>  } d;
[00:50:44] <joomla5> } e,f;```
[00:50:53] <Raziel> this isn't discord
[00:51:09] <PJBoy> hm
[00:51:16] <PJBoy> you're right the difference matters here
[00:51:25] <ville> yeah, it's sign of great naming when synonyms mean different things
[00:51:25] <PJBoy> what you wrote is an unnamed but not anonymous union
[00:51:27] *** Joins: Brainium (~brainium@user/brainium)
[00:51:33] <Raziel> also, that seems perfectly readable to me, except if you're naming all your shit like that you're gonna have a bad time in any language and any syntax
[00:51:35] <Raziel> >_>
[00:52:13] <ville> it's anonymous
[00:52:13] <PJBoy> think we can all agree C++ has poor naming
[00:52:36] <PJBoy> cppreference says "An anonymous union is an unnamed union definition that does not simultaneously define any variables"
[00:52:43] <PJBoy> your one does define variables
[00:52:49] <ville> well they don't know what they are talking about
[00:53:07] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Quit: And I'm out.)
[00:53:10] <RandomReader> it's right, I think it's just being read wrong
[00:53:36] <RandomReader> unnamed class:   struct { ... } foo;     anonymous union:  union { ... };    // no variable
[00:53:46] *** Quits: paulf (~paulf@lfbn-lyo-1-397-34.w2-7.abo.wanadoo.fr) (Quit: Connection closed)
[00:53:55] <RandomReader> formal definitions: https://eel.is/c++draft/class.pre#1.sentence-6  and  https://eel.is/c++draft/class.union.anon
[00:54:20] *** Joins: RoKenn (~RoKenn@2001:a61:34f1:ae01:3212:7c7e:4f66:bf77)
[00:54:20] *** Quits: RoKenn (~RoKenn@2001:a61:34f1:ae01:3212:7c7e:4f66:bf77) (Changing host)
[00:54:20] *** Joins: RoKenn (~RoKenn@user/rokenn)
[00:54:36] <RandomReader> for an unnamed class the type simply has no name, but there is a named object of that type in existence
[00:54:53] <RandomReader> for an anonymous union, the object is also unnamed, and the contents of the union are injected into the outer scope
[00:55:02] <ville> http://www.eelis.net/c++draft/class.union.anon#4.sentence-1
[00:56:28] <PJBoy> uh
[00:56:41] <PJBoy> I can accept I misread what I read
[00:57:17] <RandomReader> I've always found that to be a roundabout definition
[00:57:22] <PJBoy> but there's some metaphysical force stopping me from learning anything more about unions
[00:57:35] <RandomReader> in the abstract it's ok as a syntactic wrapper, but the actual definition logic is .. indirect
[00:57:39] <ville> PJBoy: they're great
[00:58:01] <ville> PJBoy: only takes you about 100 lines of boilerplate to do a tagged union with them
[00:58:22] <PJBoy> man
[00:58:38] * PJBoy rubs eyes
[00:58:49] <RandomReader> also, this came from C :D
[00:58:58] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[00:59:01] <PJBoy> a distinct lack of respect to unions
[01:00:00] <ville> there are projects where they were used quite lot, to a point where i've editor macro to spit out the boilerplate and fill in some placeholder names
[01:00:06] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[01:00:46] <RandomReader> huh, I've never had a lot of need for unions
[01:01:03] <RandomReader> occasionally yes, but not what I'd call common
[01:01:03] <PJBoy> idk I wouldn't mind the most basic usage of unions so much
[01:01:41] <RandomReader> although I do use std::variant more than I would if it didn't exist, out of convenience
[01:01:47] <ville> RandomReader: stuffing messages in and out of queues between threads
[01:02:14] <joomla5> unions are mainly used on embedded systems, where memory is low.
[01:03:32] <PJBoy> I think I'd be inclined to go for char buffers instead of unions for the union use-cases
[01:03:32] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[01:03:42] <RandomReader> even in the embedded context I can't say I used them all that much
[01:04:16] <RandomReader> mostly because a decent chunk of the "shared storage" concept optimizes for the largest object and therefore wastes space, unless I have other constraints on the buffering that makes it worthwhile
[01:04:57] <RandomReader> that's not to say there aren't contexts where it was the solution, of course there were .. just not super common, at least from my fuzzy memory now
[01:05:04] <RandomReader> it was a while ago that I last dealt with that stuff
[01:05:36] <joomla5> remember bitfields? :D
[01:05:57] <RandomReader> yes, I had to clean some up due to portability issues :(
[01:06:25] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[01:06:32] *** Joins: zunino (~zunino@2804:7f5:f380:b886:47c1:24ff:2ca2:9828)
[01:06:37] <RandomReader> had some really nice use cases when I got a single platform target though
[01:07:16] <RandomReader> it is a bit amusing that my first exposure to them involved portability issues though
[01:07:38] <PJBoy> bitfields are underspecified
[01:10:20] <PJBoy> I'd probably actually use them a lot if they guaranteed contiguousness
[01:10:55] <RandomReader> I'm sad the arithmetic isn't slightly more defined
[01:11:08] <RandomReader> would make a nice way to get a bounded unsigned type
[01:11:30] <RandomReader> alas, there's a catch or two that drives you back to mod math anyway
[01:11:59] <PJBoy> woah int bitfields in C aren't guaranteed to be signed int
[01:13:11] <PJBoy> I swear, there's always something to learn about C
[01:13:22] <PJBoy> no matter how much time you spend using it or studying it
[01:13:47] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Ping timeout: 252 seconds)
[01:13:57] <RandomReader> same, I thought I knew it pretty well back when I was using it regularly, but it turns out not so much
[01:14:58] *** Joins: CaCode (~CaCode@user/cacode)
[01:15:29] <RandomReader> granted some of that was a result of the same risk I harp on about in here from time to time: implementation behavior vs standard behavior ... a lot of what I did in C was targeted, not portable, and probably seeped into my mental model
[01:16:06] *** Quits: gdd (~gdd@129.199.146.230) (Read error: Connection reset by peer)
[01:17:38] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[01:18:24] *** Quits: robod34 (Username@79.113.195.239) (Quit: Goe offline! ( http://marius.sucan.ro/ ))
[01:18:50] *** Joins: ckdCreations (~ckdCreati@147.55.133.136)
[01:20:09] <PJBoy> understandable
[01:24:03] *** Quits: Burgundy (~yomon@79.115.213.171) (Ping timeout: 252 seconds)
[01:24:03] *** Quits: ville (~ville@82-181-178-111.bb.dnainternet.fi) (Read error: Connection reset by peer)
[01:26:14] <Alipha> joomla5: if RAII and basic template functionality aren't your two top things you wish C had, then you don't know C++ at all.
[01:26:58] <rpav> are variadic templates basic functionality?
[01:28:12] <RandomReader> ah, RAII .. I definitely do not miss C failure handling techniques
[01:28:31] *** Quits: c4017w_ (~c4017@209.52.68.8) (Quit: Leaving)
[01:28:41] <rpav> it's so _manual_
[01:29:05] <RandomReader> not sure I'd call variadic templates basic, at least in the sense of most forms of repetition-removal I'd do
[01:29:13] <Alipha> rpav: no. I was thinking just basically generics from java/c#
[01:29:14] <rpav> like you don't need a lot of C++ to really benefit from it, and it can be a lot like "C, but much more automatic"
[01:29:43] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[01:30:02] <rpav> Alipha: ah .. i think variadic templates were a huge game changer and wouldn't want to live without
[01:30:06] <Alipha> ie, being able to create a type safe generic container
[01:30:18] <rpav> like i feel like basing a lot more stuff around tuple would be pretty neat
[01:30:20] <joomla5> I know them, I just never use them.
[01:30:53] *** Joins: ville (~ville@82-181-178-111.bb.dnainternet.fi)
[01:31:00] <Alipha> joomla5: what do you do in c if you want an "associative array"? (ie, a std::map)
[01:31:06] *** Joins: chozorho (~chozorho@2601:146:300:c30::1df0)
[01:31:30] <rpav> map_t* map = map_create(); ... ;)
[01:31:51] <rpav> like, map/vector/etc aren't really the interesting things in C++, other than being nice syntax sugar
[01:32:09] <RandomReader> it's not just the sugar, it's the storage
[01:32:18] <rpav> they were once, but it's not 1993 anymore
[01:32:19] <RandomReader> customizing one for every unique storage entity in C is not particularly fun
[01:32:39] <rpav> you don't really need to, map_t* map = map_create(sizeof(key), sizeof(value));
[01:32:46] <RandomReader> neither is giving up on the customization and indirecting everything instead
[01:32:54] <rpav> i mean sure you might store the sizes, but few are likely to care
[01:33:08] <joomla5> it's a dictionary, how did you do it before C++? implement your own with linked list or some other way
[01:33:10] <RandomReader> that falls under "customizing everything", since the access boundaries have to cover it
[01:33:11] <Alipha> rpav: and a function pointer argument for the comparator?
[01:33:16] <rpav> you don't need to indirect a lot, since you can pass raw pointers and copy them
[01:33:25] <rpav> Alipha: sure i mean you work with what you've got
[01:33:51] <RandomReader> I'm not arguing that it's *bad* in C, that's essentially the arrangement for everything .. but it's not particularly nice either
[01:33:57] *** Quits: tesuji (~quassel@2a02:908:180:9500:3852:8ba:a318:ea61) (Ping timeout: 252 seconds)
[01:34:19] <rpav> well it's of course very manual to specify everything, though that kind of thing isn't really the case i'd point to as a major pain point
[01:34:38] <RandomReader> maintenance and debugging are the pain points
[01:34:49] <rpav> like, you can have a bunch of functions with defaults, that's not going to be something anyone cares about
[01:34:53] <rpav> eh
[01:34:55] <joomla5> you can do everything C++ does in C, or pretty much any other turning complete language. you don't needs templates or std lib or anything like that
[01:35:32] <rpav> don't make the same mistake everyone else makes about C++; crashes and memory leaks do not abound simple because there's no GC for instance
[01:35:33] <RandomReader> what do you mean "defaults"?
[01:36:24] <rpav> useful defaults that have precanned initializers such that you don't have to specify .. string keys or whatever
[01:36:48] *** Quits: pulse (~pulse@user/pulse) (Quit: Join a community of tea smugglers at https://indiedevs.net/)
[01:36:55] <RandomReader> but you'd have to create those every time, unless I'm misunderstanding what you mean
[01:36:59] <rpav> or constants for common/easy things, map_new(STR, INT) .. it doesn't matter, again this _isn't_ the thing you should be focusing on to make the point
[01:37:08] <RandomReader> as part of the access-wrapper-customization points
[01:37:23] *** Joins: gdd (~gdd@129.199.146.230)
[01:37:28] <RandomReader> it's all part of the same points though: code maintenance vs efficiency
[01:37:31] <rpav> there are obvious ways to make a good API and deal with init/fini stuff
[01:38:20] <rpav> sure but anyone maintaining a large C project with like, gtk/gobject/cairo/etc or whatever .. or like _the linux kernel_ is just going to shrug at that and be like "yeah we do fine"
[01:38:43] <RandomReader> well yes, I've been there .. but that doesn't make it any less "not nice" :)
[01:38:59] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:38:59] *** Quits: zunino (~zunino@2804:7f5:f380:b886:47c1:24ff:2ca2:9828) (Quit: WeeChat 3.0.1)
[01:39:07] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:39:07] *** ChanServ sets mode: +v npaperbot
[01:39:20] <RandomReader> it's one of those things that's an obviously better tool, and tends to hold regardless of what language you're looking at
[01:39:40] <RandomReader> e.g. I appreciated it in C# (coming from C) the same way I do in C++
[01:40:28] <RandomReader> it's incredibly difficult to get the same efficiency in C, let alone with a maintainable single API
[01:42:08] <RandomReader> RAII seems to be fairly unique though, that's more about code organization forms I think
[01:42:27] <RandomReader> other languages don't have anything quite like it, so the code patterns just look different regardless
[01:45:18] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[01:50:45] *** Quits: uzer1 (~uzer@dsl-trebng11-54f912-114.dhcp.inet.fi) (Ping timeout: 256 seconds)
[01:56:05] *** Quits: Albright (~Albright@149.28.13.173) (Quit: ZNC 1.8.2 - https://znc.in)
[01:58:09] *** Joins: sknbl (~sknbl@2a01:d0:9976::)
[01:59:42] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[02:00:57] *** Quits: sknbl (~sknbl@2a01:d0:9976::) (Quit: Leaving)
[02:06:41] *** Quits: PlasmaHH (~PlasamaHH@user/plasmahh) (Ping timeout: 256 seconds)
[02:08:10] *** Quits: ckdCreations (~ckdCreati@147.55.133.136) (Read error: Connection reset by peer)
[02:08:57] *** Quits: jplejacq (~jplejacq@24.224.90.176) (Ping timeout: 256 seconds)
[02:11:08] <izabera> how do i specialise std::find for my container which has a way to find things faster than O(n) ?
[02:12:24] <izabera> i tried and clang just says    error: out-of-line definition of 'find' does not match any declaration in namespace 'std'
[02:12:51] <izabera> i also found this    https://stackoverflow.com/questions/9105237/overload-of-stdfind-function   which says that i can't do it, without really explaining why
[02:16:10] <cbreak> izabera: std::find is an algorithm for linear search
[02:16:12] *** Joins: cation (cation@user/cation)
[02:16:15] <cbreak> you're not meant to overload it
[02:16:19] <cbreak> nor to specialize it
[02:16:30] <cbreak> add a find member function to your container
[02:16:40] <cbreak> or add a free function in your container's namespace, found via ADL
[02:17:45] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[02:17:58] *** Quits: x_kuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[02:19:39] <izabera> okies thanks
[02:20:47] *** Joins: proller (~p@80.240.216.69)
[02:22:39] <furrymcgee> does std::find call member function of container?
[02:22:58] <imMute> std::find operates with iterators, not containers.
[02:24:11] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[02:28:21] *** Quits: RoKenn (~RoKenn@user/rokenn) (Remote host closed the connection)
[02:28:42] *** Joins: RoKenn (~RoKenn@2001:a61:34f1:ae01:3212:7c7e:4f66:bf77)
[02:28:43] *** Quits: RoKenn (~RoKenn@2001:a61:34f1:ae01:3212:7c7e:4f66:bf77) (Changing host)
[02:28:43] *** Joins: RoKenn (~RoKenn@user/rokenn)
[02:29:17] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 256 seconds)
[02:30:08] <furrymcgee> I guess you can write an specialized iterator for your container like this# template<> InputIt std::find< InputIt, T >( InputIt first, InputIt last, const T& value );
[02:32:59] *** Quits: pizdets (~pizdets@183.182.111.226) (Ping timeout: 252 seconds)
[02:34:09] *** Joins: pizdets (~pizdets@183.182.114.193)
[02:34:23] <PJBoy> that doesn't look like an iterator
[02:35:24] *** Joins: ckdCreations (~ckdCreati@147.55.133.134)
[02:37:25] *** Joins: mzal (7dc76dea13@2604:bf00:561:2000::69)
[02:37:59] <furrymcgee> hopefully it matches the the declaration in namespace 'std'
[02:38:35] <PJBoy> what's T in your attempted specialisation?
[02:38:49] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[02:39:56] <furrymcgee> template parameter
[02:40:23] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[02:40:28] <PJBoy> but your template parameter list is empty
[02:40:32] <PJBoy> you've written `template<>`
[02:41:52] *** Quits: ckdCreations (~ckdCreati@147.55.133.134) (Read error: Connection reset by peer)
[02:42:01] *** Joins: proller (~p@2a02:6b8:b081:1210::1:1f)
[02:42:49] <Alipha> You can't partially specialize functions. You can overload them. But as said, you should just write a find member function, like, eg, std::set::find
[02:43:54] <furrymcgee> free function vs member function?
[02:44:08] <PJBoy> that said, the algorithms like std::find et al aren't guaranteed to be functions
[02:44:10] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[02:44:26] *** Joins: bindu (~bindu@user/bindu)
[02:46:07] *** Joins: ckdCreations (~ckdCreati@147.55.133.135)
[02:50:27] *** Quits: ckdCreations (~ckdCreati@147.55.133.135) (Read error: Connection reset by peer)
[02:53:13] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[02:54:48] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:55:43] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[02:56:01] *** Joins: rgrinberg (~textual@187.223.248.37)
[02:58:20] <Alipha> furrymcgee: I think the general rule of thumb in the c++ community is to make free functions if you can do so without making the function a friend and without inappropriately exposing a class's privates, which I'm doubtful you would be able to write find as a free function, given those constraints
[03:01:35] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 256 seconds)
[03:03:23] *** Joins: jplejacq (~jplejacq@cpe-173-92-3-64.carolina.res.rr.com)
[03:04:31] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[03:05:30] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[03:07:21] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[03:07:38] *** Joins: rgrinberg (~textual@187.223.248.37)
[03:08:10] *** Parts: joomla5 (uid527699@id-527699.uxbridge.irccloud.com) ()
[03:08:35] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[03:09:45] *** Joins: Albright (~Albright@2001:19f0:8001:ca4:4970:ef4b:1e0f:c4a8)
[03:11:29] *** Quits: jplejacq (~jplejacq@cpe-173-92-3-64.carolina.res.rr.com) (Ping timeout: 252 seconds)
[03:20:11] *** Joins: bpalmer (~user@user/bpalmer)
[03:20:39] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[03:21:25] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 256 seconds)
[03:25:24] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[03:26:27] *** Joins: rgrinberg (~textual@187.223.144.204)
[03:26:35] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[03:26:59] *** Joins: ferdna (~ferdna@user/ferdna)
[03:28:01] <bpalmer> https://godbolt.org/z/xfcjevjxY -- it warns about an uninitialized base class with a template constructor , but if there's no template (e.g., it's B(int i) : value_(Foo()) { } ), it doesn't warn.
[03:28:23] <bpalmer> It's easy enough to do template<typename Iter> B(Iter i) : A(), value_(Foo()) { }, but I'm not sure why it's necessary
[03:28:27] <bpalmer> 11.9.3.13  in the draft standard seems to suggest base classes are initialized before member initializers are processed
[03:28:39] *** Joins: Colt (~Colt@user/colt)
[03:28:44] *** Joins: CormacAttack (~mac@144.62.50.200)
[03:29:48] <bpalmer> so (a) does the template actually make a difference, or is it undefined behavior always and only caught with the template? (b) if so, why?
[03:31:50] *** Quits: highrate (~presonic@111-22-237-24.gci.net) (Ping timeout: 252 seconds)
[03:32:23] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 252 seconds)
[03:32:49] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[03:33:50] <Oxyd> I think the warning is just incorrect.
[03:35:21] *** Quits: KAHR-Alpha (~Alpha@2a01cb0d024a6600f9bc9a6600d1bb7b.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[03:35:52] *** Joins: tesuji (~quassel@2a02:908:180:9500:dd45:c2b0:8a98:8612)
[03:36:51] <PJBoy> indeed
[03:37:11] <PJBoy> added some logging https://godbolt.org/z/e5ePG15a7
[03:39:31] <bpalmer> Interesting. And gcc  doesn't warn, so it's just clang.
[03:40:11] <bpalmer> thanks
[03:40:13] *** Quits: engest (~engest@50.53.126.29) (Quit: Leaving)
[03:40:21] *** Joins: engest (~engest@50.53.126.29)
[03:40:22] *** Quits: engest (~engest@50.53.126.29) (Read error: Connection reset by peer)
[03:40:47] <jdavfsxd> it's some very trivial code, weird how all versions of clang emit that
[03:40:49] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 252 seconds)
[03:42:09] *** Quits: rgrinberg (~textual@187.223.144.204) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:42:44] <Oxyd> I guess calling a member of a base in the derived member initialiser list of a constructor template isn't very common.
[03:42:45] *** Quits: tesuji (~quassel@2a02:908:180:9500:dd45:c2b0:8a98:8612) (Ping timeout: 268 seconds)
[03:43:41] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[03:44:47] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[03:46:12] <Oxyd> I can't find any bug report describing that, so it's probably worth reporting.
[03:47:20] <bpalmer> hmm. I've never reported a bug in clang before; where does it track these things?
[03:50:33] <zz> in a bugzilla, requires registration, registration requires moderator approval. That's when I stopped bothering reporting things.
[03:51:18] <Oxyd> Bugzilla is read-only because it's being migrated to Github. Github seems to be read-only as well. So, uh…
[03:51:27] *** Joins: tesuji (~quassel@2a02:908:180:9500:dd45:c2b0:8a98:8612)
[03:51:48] <BtbN> They literally started that migration today. So nothing might work right now.
[03:56:29] *** Quits: furrymcgee (~devuan@cgn-89-1-209-182.nc.de) (Quit: leaving)
[03:57:50] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[04:02:52] <jdavfsxd> well, I have reported before on bugzilla, and it was kinda dead even in its golden age
[04:03:40] <jdavfsxd> maybe they get more activity with the migration
[04:06:40] *** Quits: CormacAttack (~mac@144.62.50.200) (Quit: WeeChat 3.3)
[04:07:54] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[04:08:30] *** Joins: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[04:12:25] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[04:13:30] *** Joins: chenqisu1 (~chenqisu1@183.217.200.156)
[04:15:56] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[04:16:50] *** Quits: chenqisu1 (~chenqisu1@183.217.200.156) (Client Quit)
[04:17:16] *** Joins: chenqisu1 (~chenqisu1@183.217.200.156)
[04:17:28] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Remote host closed the connection)
[04:18:10] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[04:18:58] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[04:21:40] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[04:23:43] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[04:25:03] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[04:27:42] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[04:31:03] *** Quits: causative (~halberd@user/causative) (Ping timeout: 250 seconds)
[04:31:54] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[04:33:29] *** Quits: Ivii (~Ivyy@2001:a62:4c3:8e01:7c39:aad5:22e:d595) (Remote host closed the connection)
[04:37:13] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[04:40:27] *** Joins: tolog (~tolog@89.36.78.91)
[04:43:03] *** Quits: Jantz (~IceChat95@2407:7000:8d04:100:20ab:df6:4a36:a7ba) (Read error: Connection reset by peer)
[04:44:15] *** Joins: causative (~halberd@user/causative)
[04:47:21] *** Quits: tolog (~tolog@89.36.78.91) (Remote host closed the connection)
[04:49:00] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[04:53:16] *** Quits: Brainium (~brainium@user/brainium) (Quit: Konversation terminated!)
[04:53:47] *** Joins: nostart (~nostar@107.175.102.93)
[04:55:01] *** Joins: Mac (~mac@144.62.50.200)
[04:55:06] *** Mac is now known as Guest4184
[04:55:37] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 252 seconds)
[04:56:21] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Ping timeout: 252 seconds)
[05:03:18] *** Joins: nostar__ (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[05:04:03] *** Quits: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Remote host closed the connection)
[05:05:45] *** Quits: nostart (~nostar@107.175.102.93) (Ping timeout: 256 seconds)
[05:06:59] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[05:06:59] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 252 seconds)
[05:14:19] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:2d70:be4:aaac:8b09) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:14:28] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[05:14:43] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[05:15:53] *** Joins: QuaternionsRock (~Quaternio@2601:197:a7f:79d6:2576:d244:71b:1dc7)
[05:16:37] <QuaternionsRock> Why on earth aren't initializer_lists constant expressions >:(
[05:17:04] *** Joins: TomyLobo (~TomyLobo@p200300e80f0f2700a80a43313a047144.dip0.t-ipconnect.de)
[05:17:11] <TomyLobo> hi
[05:17:13] <QuaternionsRock> So dumb how you can't give initializer_list's special meaning for braced-init-list to other types
[05:17:30] <TomyLobo> is there a scope guard implementation in the standard library?
[05:17:48] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[05:19:37] *** Joins: sav (~savio@177.12.48.155)
[05:20:01] *** sav is now known as Guest1975
[05:20:03] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[05:20:25] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 256 seconds)
[05:22:15] *** Joins: rvalue (~rvalue@user/rvalue)
[05:25:01] *** Joins: jplejacq (~jplejacq@cpe-173-92-3-64.carolina.res.rr.com)
[05:28:50] *** Joins: ferdna (~ferdna@user/ferdna)
[05:31:43] *** Joins: CaCode_ (~CaCode@user/cacode)
[05:33:21] *** Joins: CaCode- (~CaCode@user/cacode)
[05:34:15] *** Quits: Guest1975 (~savio@177.12.48.155) (Quit: Leaving)
[05:34:35] *** Quits: CaCode (~CaCode@user/cacode) (Ping timeout: 256 seconds)
[05:36:21] *** Quits: CaCode_ (~CaCode@user/cacode) (Ping timeout: 256 seconds)
[05:36:51] *** Quits: evangeline (~Eleanor@178.79.105.181) (Ping timeout: 256 seconds)
[05:37:55] *** Parts: jplejacq (~jplejacq@cpe-173-92-3-64.carolina.res.rr.com) (Leaving.)
[05:38:59] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:39:08] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:39:08] *** ChanServ sets mode: +v npaperbot
[05:53:03] *** Joins: jory (~jfolker@208.95.17.106)
[05:58:31] *** Quits: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469) (Remote host closed the connection)
[06:00:14] <RandomReader> TomyLobo - no .. IIRC there was a proposal or two, but nothing that's gone through as far as I know
[06:00:19] <RandomReader> QuaternionsRock - what do you mean?
[06:04:40] <TomyLobo> ah, too bad
[06:04:44] <TomyLobo> thanks
[06:07:09] <RandomReader> ...ah, [p0052] landed in the library fundamentals TS: https://en.cppreference.com/w/cpp/experimental/scope_exit
[06:07:09] <npaperbot> P0052R10: [Library] Generic Scope Guard and RAII Wrapper for the Standard Library <https://wg21.link/p0052r10> (by Peter Sommerlad, Andrew L. Sandoval) (2019-02-19) (Related: https://wg21.link/lewg6, https://wg21.link/p0052r10/github)
[06:07:42] *** Quits: chenqisu1 (~chenqisu1@183.217.200.156) (Remote host closed the connection)
[06:08:06] <bpalmer> you can fake it using a shared or unique ptr's deleter parameter, if you really wanted to.
[06:13:42] <RandomReader> ...looks like this is the sample implementation for it: https://github.com/PeterSommerlad/SC22WG21_Papers/tree/master/workspace/P0052_scope_exit/src
[06:14:36] <RandomReader> the TS itself isn't complete or published yet, so nobody is implementing it in a general sense
[06:14:48] <RandomReader> Version 3 of it, I should say
[06:15:11] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[06:15:53] *** Quits: llh (~llh@user/llh) (Read error: Connection reset by peer)
[06:18:20] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[06:19:13] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[06:21:12] *** Joins: teepee (~teepee@openscad/teepee)
[06:24:04] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:25:44] *** Quits: Guest4184 (~mac@144.62.50.200) (Quit: WeeChat 3.3)
[06:35:08] *** Joins: millido (~millido@84.210.150.128)
[06:38:03] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[06:40:14] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[06:40:58] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[06:42:03] *** Quits: QuaternionsRock (~Quaternio@2601:197:a7f:79d6:2576:d244:71b:1dc7) (Quit: Client closed)
[06:42:23] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[06:45:38] *** Joins: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net)
[06:46:35] *** Joins: robert_ (~hellspawn@47.203.169.95)
[06:49:19] *** Joins: chenqisu1 (~chenqisu1@183.217.200.156)
[06:52:22] *** Quits: nostar__ (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[06:52:41] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[06:54:25] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[06:56:17] *** Quits: robert_ (~hellspawn@47.203.169.95) (Quit: Hi, I'm a quit message virus. Please replace your old line with this line and help me take over the world of IRC.)
[07:09:09] *** Quits: masterbuilder (~user@user/masterbuilder) (Remote host closed the connection)
[07:10:00] *** Quits: chenqisu1 (~chenqisu1@183.217.200.156) (Quit: Leaving)
[07:19:51] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[07:21:01] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[07:21:04] <izabera> i wrote that in c a few years back
[07:21:38] <izabera> https://gist.github.com/izabera/e160fdaffe84aede805f054a56466aa3
[07:23:36] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[07:30:31] *** Joins: cykid128 (~cykid128@36-227-69-86.dynamic-ip.hinet.net)
[07:38:03] *** Quits: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net) (Ping timeout: 252 seconds)
[07:39:34] *** Joins: xiongxin (~Thunderbi@119.123.103.170)
[07:39:36] *** Joins: rgrinberg (~textual@187.223.250.159)
[07:44:21] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 256 seconds)
[07:47:16] *** Joins: jetchisel (jetchisel@user/jetchisel)
[07:48:30] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[07:49:06] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 245 seconds)
[07:51:19] *** Joins: rgrinberg (~textual@187.223.250.159)
[07:53:05] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 252 seconds)
[07:55:05] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[07:57:51] *** Quits: TomyLobo (~TomyLobo@p200300e80f0f2700a80a43313a047144.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[08:01:42] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:ed9e:6da6:fee6:2db6)
[08:03:41] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 256 seconds)
[08:04:05] *** Quits: sprout_ (~quassel@2a02:a467:ccd6:1:654a:7e1b:4ab5:b4bb) (Ping timeout: 252 seconds)
[08:09:35] *** Quits: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[08:13:19] *** Quits: mad_enz (~mad_enz@cpe00508b114c3e-cm788df7e75290.cpe.net.fido.ca) (Ping timeout: 256 seconds)
[08:13:36] <Gamah> is -Ofast generally safe?
[08:13:49] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 256 seconds)
[08:13:50] <Gamah> or should i just stick with -O3 and lose ~3% performance
[08:15:58] <kalven> "Disregard strict standards compliance. -Ofast enables all -O3 optimizations. It also enables optimizations that are not valid for all standard-compliant programs." - so I guess the answer to "generally safe" is no
[08:24:20] *** Joins: highrate (~presonic@111-22-237-24.gci.net)
[08:25:34] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Remote host closed the connection)
[08:25:37] *** Joins: chenqisu1 (~chenqisu1@183.217.200.156)
[08:25:43] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 256 seconds)
[08:26:50] *** Joins: seninha (~seninha@user/seninha)
[08:30:33] *** Joins: aleios (~aleios@user/aleios)
[08:30:44] *** Quits: tesuji (~quassel@2a02:908:180:9500:dd45:c2b0:8a98:8612) (Ping timeout: 268 seconds)
[08:31:17] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[08:33:45] *** Joins: rgrinberg (~textual@187.223.144.204)
[08:39:49] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[08:40:10] *** Joins: tesuji (~quassel@2a02:908:180:9500:dd45:c2b0:8a98:8612)
[08:40:11] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[08:40:23] *** Quits: BucetaPeluda (~istupy@2620:0:1003:206:5397:2605:6f82:ba23) (Ping timeout: 252 seconds)
[08:40:45] *** Quits: hackinghorn (~hackingho@user/hackinghorn) (Ping timeout: 252 seconds)
[08:40:55] *** Joins: BucetaPeluda (~istupy@2620:0:1003:206:db0:a087:349c:f4b6)
[08:49:11] *** Quits: rgrinberg (~textual@187.223.144.204) (Ping timeout: 252 seconds)
[08:52:39] <cykid128> depend on your program
[08:52:55] <cykid128> if it satisfied standard
[08:53:20] <cykid128> then just go ahead
[08:53:29] <cykid128> test your program
[08:53:29] *** Quits: chenqisu1 (~chenqisu1@183.217.200.156) (Ping timeout: 256 seconds)
[08:53:56] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[08:54:51] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[09:02:20] *** Quits: highrate (~presonic@111-22-237-24.gci.net) (Remote host closed the connection)
[09:02:41] *** Joins: highrate (~presonic@111-22-237-24.gci.net)
[09:03:38] *** Quits: jory (~jfolker@208.95.17.106) (Quit: off to free up memory)
[09:06:34] *** Quits: cykid128 (~cykid128@36-227-69-86.dynamic-ip.hinet.net) (Quit: Lost terminal)
[09:07:43] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 256 seconds)
[09:19:27] *** Joins: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca)
[09:31:27] *** Joins: rgrinberg (~textual@187.223.144.204)
[09:34:18] <Gamah> the output doesn't look bad
[09:34:24] <Gamah> it's pretty simple stuff
[09:34:55] <Gamah> i just wish i had a concept of the sorts of problems that O3 and OFast can exhibit
[09:34:57] <Gamah> is it like breaking bounds and such?
[09:37:30] <RandomReader> gcc's O3 does not violate standards, so problems there are more likely to be code bugs (or compiler bugs, although that's fairly rare)
[09:38:09] <RandomReader> for Ofast, you can run through the docs for everything it turns on yourself: https://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html#index-Ofast
[09:39:00] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:39:08] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:39:08] *** ChanServ sets mode: +v npaperbot
[09:53:07] <Gamah> i'm sure I probably do some dumb UB stuff in my own code... are there not some like typical gotchya's people see with O3?
[09:53:50] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:55:36] *** ad__ is now known as kernelspace
[09:59:51] *** Quits: rgrinberg (~textual@187.223.144.204) (Ping timeout: 256 seconds)
[10:01:24] <RandomReader> there are quite a few analysis tools today to help with correct code, if that's the question
[10:02:00] <RandomReader> both static analyzers (often from the clang toolchain) and runtime sanitizers
[10:04:45] <RandomReader> e.g. https://gcc.gnu.org/onlinedocs/gcc/Instrumentation-Options.html#index-fsanitize_003daddress
[10:05:17] <RandomReader> there isn't really a list of things optimization "catches", it's more a case of "if the behavior changes, something was probably already wrong, and things just coincidentally worked out such that it wasn't noticed earlier"
[10:07:59] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[10:08:00] <RandomReader> same concept as crossing an intersection while ignoring the traffic signals .. what happens depends on the surrounding situation and time of day, it's not something you can meaningfully reason about in the abstract
[10:08:09] <RandomReader> (other than "not advisable")
[10:09:15] *** Joins: seninha (~seninha@user/seninha)
[10:09:38] *** Joins: madder_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca)
[10:10:01] *** Quits: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca) (Read error: Connection reset by peer)
[10:10:18] *** Quits: madder_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca) (Remote host closed the connection)
[10:19:17] *** Joins: rgrinberg (~textual@187.223.250.159)
[10:22:21] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 268 seconds)
[10:26:58] *** Joins: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca)
[10:37:32] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 252 seconds)
[10:44:27] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[10:44:46] *** Joins: rvalue (~rvalue@user/rvalue)
[10:46:15] *** Quits: ville (~ville@82-181-178-111.bb.dnainternet.fi) (Ping timeout: 256 seconds)
[10:48:08] *** Joins: ville (~ville@82-181-178-111.bb.dnainternet.fi)
[10:51:09] *** Joins: triad (~triad@user/triad)
[10:53:32] *** Joins: rgrinberg (~textual@187.223.248.37)
[10:54:02] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[10:55:01] *** Quits: BucetaPeluda (~istupy@2620:0:1003:206:db0:a087:349c:f4b6) (Remote host closed the connection)
[10:57:20] *** Joins: rvalue (~rvalue@user/rvalue)
[10:59:59] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[11:03:01] *** Quits: ville (~ville@82-181-178-111.bb.dnainternet.fi) (Quit: leaving)
[11:03:15] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 256 seconds)
[11:03:19] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[11:04:27] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[11:04:27] *** Quits: triad (~triad@user/triad) (Ping timeout: 256 seconds)
[11:04:47] *** Joins: ville (~ville@82-181-178-111.bb.dnainternet.fi)
[11:05:59] *** Quits: rgrinberg (~textual@187.223.248.37) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:06:40] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Remote host closed the connection)
[11:06:56] *** Joins: chenqisu1 (~chenqisu1@183.217.200.156)
[11:10:23] *** Quits: Telvana (~capo@user/telvana) (Remote host closed the connection)
[11:11:13] *** Joins: Telvana (~capo@user/telvana)
[11:13:10] *** Joins: rgrinberg (~textual@187.223.248.37)
[11:15:43] *** Joins: andreasbuhr (~quassel@p549db208.dip0.t-ipconnect.de)
[11:15:43] *** Quits: andreasbuhr (~quassel@p549db208.dip0.t-ipconnect.de) (Client Quit)
[11:19:08] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[11:28:49] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 256 seconds)
[11:30:27] *** Joins: rgrinberg (~textual@187.223.250.159)
[11:34:09] *** Quits: Telvana (~capo@user/telvana) (Quit: ZNC 1.9.x-git-156-ac57c0e5 - https://znc.in)
[11:35:00] *** Joins: Telvana (~capo@user/telvana)
[11:42:55] *** Joins: Burgundy (~yomon@79.115.213.171)
[11:43:21] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[11:45:37] *** Joins: jetchisel (jetchisel@user/jetchisel)
[11:51:35] *** Quits: mgot (~mgot@vps-35cddd71.vps.ovh.net) (Read error: Connection reset by peer)
[11:54:03] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[11:54:15] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 256 seconds)
[11:55:02] *** Joins: hackinghorn (~hackingho@user/hackinghorn)
[11:57:33] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[11:58:22] *** Joins: rgrinberg (~textual@187.223.250.159)
[12:01:05] *** Quits: chozorho (~chozorho@2601:146:300:c30::1df0) (Quit: WeeChat 3.0)
[12:01:43] *** Joins: evangeline (~Eleanor@178.79.105.181)
[12:04:53] *** Joins: paulf (~paulf@lfbn-lyo-1-397-34.w2-7.abo.wanadoo.fr)
[12:08:37] *** Quits: Spirit532 (~Spirit532@mm-254-35-84-93.mgts.dynamic.pppoe.byfly.by) (Killed (NickServ (GHOST command used by Spirit5328!~Spirit532@mm-32-1-84-93.mgts.dynamic.pppoe.byfly.by)))
[12:08:38] *** Joins: Spirit532 (~Spirit532@mm-32-1-84-93.mgts.dynamic.pppoe.byfly.by)
[12:08:55] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[12:13:59] *** Joins: robod34 (Username@79.113.195.239)
[12:15:20] *** Joins: the_lanetly_052 (~the_lanet@185.30.88.193)
[12:20:23] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[12:20:38] *** Joins: lesihctej (jetchisel@user/jetchisel)
[12:22:51] *** Quits: pa (~pah@user/pah) (Ping timeout: 245 seconds)
[12:24:12] *** Joins: pah (~pah@user/pah)
[12:24:33] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[12:25:47] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Remote host closed the connection)
[12:26:49] *** Joins: pulse (~pulse@user/pulse)
[12:28:20] *** Quits: rgrinberg (~textual@187.223.250.159) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:28:42] *** Joins: QuaternionsRock (~Quaternio@2601:197:a7f:79d6:9888:ce90:62f6:831a)
[12:29:37] <QuaternionsRock> RandomReader `std::initializer_list.size` is not a constant expression
[12:30:09] <QuaternionsRock> which, amonst many other things, means that arrays cannot be initalized with them
[12:30:34] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[12:31:36] <QuaternionsRock> (parameter packs are constexpr, but their overload resolution is a massive pain
[12:31:39] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:34:41] *** Joins: xkuru (~xkuru@user/xkuru)
[12:34:46] *** Quits: SuperNintendoSUX (~sjw@69.206.48.64) (Remote host closed the connection)
[12:35:58] *** Joins: SuperNintendoSUX (~sjw@69.206.48.64)
[12:36:15] *** Quits: lesihctej (jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[12:36:59] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[12:43:05] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[12:45:44] *** Quits: the_lanetly_052 (~the_lanet@185.30.88.193) (Remote host closed the connection)
[12:46:18] <RandomReader> function parameters in general aren't constant expressions, and std::initializer_list is a dynamic wrapper on purpose .. I'm a bit confused as to what scenario came up that caused you to lament this
[12:46:54] <RandomReader> std::array might be a more appropriate substitute for whatever it is you're doing
[12:48:45] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[12:49:49] <RandomReader> (also initializer_list.size() is constexpr in a constant expression context, but those are going to be fairly narrow)
[12:52:57] *** Joins: slidercrank (~slidercra@user/slidercrank)
[12:54:17] *** Joins: the_lanetly_052 (~the_lanet@185.30.88.193)
[12:56:19] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[12:57:58] *** Joins: rendar (~rendar@user/rendar)
[12:58:02] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:01:57] *** Quits: causative (~halberd@user/causative) (Ping timeout: 250 seconds)
[13:07:12] *** Joins: milia[m] (~mlliarmma@2001:470:69fc:105::1:4631)
[13:08:37] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[13:10:56] *** Quits: QuaternionsRock (~Quaternio@2601:197:a7f:79d6:9888:ce90:62f6:831a) (Quit: Client closed)
[13:11:37] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[13:13:39] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[13:23:43] *** Joins: causative (~halberd@user/causative)
[13:23:59] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[13:24:13] *** Joins: CaCode_ (~CaCode@user/cacode)
[13:25:29] <Gamah> so "step over" means.... "come back out of lower scopes back to this scope" and not.."don't execute the next call" right?
[13:25:38] <Gamah> in a debugger...
[13:26:41] *** Quits: CaCode- (~CaCode@user/cacode) (Ping timeout: 256 seconds)
[13:29:00] <ville> !give Gamah general
[13:29:01] <nolyc> Gamah: #C++-general for algorithms, libraries, practices, projects, tools etc.
[13:30:04] * Gamah yawns
[13:30:45] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[13:31:54] *** Joins: scalablecory (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[13:34:54] *** Joins: uzer1 (~uzer@dsl-trebng11-54f912-114.dhcp.inet.fi)
[13:35:11] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[13:36:36] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 268 seconds)
[13:37:09] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:39:00] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:39:03] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[13:39:10] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:39:10] *** ChanServ sets mode: +v npaperbot
[13:40:27] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:42:52] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[13:53:02] *** Joins: furrymcgee (~devuan@cgn-89-1-209-182.nc.de)
[13:55:30] *** Quits: rahl (~rahl@102.114.118.74) (Quit: Reconnecting)
[13:55:43] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 252 seconds)
[13:55:44] *** Joins: rahl (~rahl@102.114.118.74)
[13:56:04] *** Joins: triad (~triad@user/triad)
[13:59:14] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[14:08:40] *** Quits: tesuji (~quassel@2a02:908:180:9500:dd45:c2b0:8a98:8612) (Ping timeout: 268 seconds)
[14:08:46] *** Joins: andi_ (~andi@user/andi/x-3467420)
[14:09:56] <andi_> hello, i'm reading a large file (2.9 GB) of records (csv) and create a struct from each row. is there a way to speed up the process by using more then one thread?
[14:10:52] *** Joins: tmm88 (~tmm88@2001:8a0:ff48:1500:8435:35a8:2175:6231)
[14:10:58] *** Quits: tmm88 (~tmm88@2001:8a0:ff48:1500:8435:35a8:2175:6231) (Changing host)
[14:10:58] *** Joins: tmm88 (~tmm88@user/tmm88)
[14:14:30] <RandomReader> would probably be a better topic for #c++-general, since it's not really about the language, but most likely no -- usually such tasks are I/O bound, can't go faster than the storage
[14:14:58] <RandomReader> however it's something you should profile/measure to know what the bottleneck is, and the other channel can help with that
[14:16:06] *** Joins: tesuji (~quassel@2a02:908:180:9500:dd45:c2b0:8a98:8612)
[14:16:29] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 256 seconds)
[14:20:59] *** Joins: the_lanetly_052_ (~the_lanet@185.30.89.11)
[14:23:35] *** Quits: the_lanetly_052 (~the_lanet@185.30.88.193) (Ping timeout: 252 seconds)
[14:24:10] *** Joins: CaCode- (~CaCode@user/cacode)
[14:25:40] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:25:53] *** Joins: jokoon (~eio@2a01:e0a:542:e160:8186:5c9:9f63:7298)
[14:26:41] *** Quits: CaCode_ (~CaCode@user/cacode) (Ping timeout: 256 seconds)
[14:30:38] *** Quits: tmm88 (~tmm88@user/tmm88) (Quit: Client closed)
[14:32:25] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 256 seconds)
[14:34:18] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[14:36:49] *** Joins: rvalue (~rvalue@user/rvalue)
[14:40:03] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[14:41:28] <zz> that of course assumes your parser doesn't suck (i.e. that it is indeed IO bound and not CPU bound)
[14:42:18] <Eelis> which, given the simplicity of CSV and the typical cost of I/O, is likely
[14:42:54] *** Quits: jokoon (~eio@2a01:e0a:542:e160:8186:5c9:9f63:7298) (Quit: Leaving)
[14:43:18] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[14:44:36] <zz> I'm sure someone's calling fgetc() or so repeatedly instead of grabbing a line at a time and breaking that down
[14:45:25] <Eelis> FILE is buffered, so grabbing a character at a time with fgetc is fine
[14:45:43] <zz> but you still have the fgetc function call overhead
[14:45:53] <Eelis> which is negligible compared to actual I/O
[14:45:55] <TinoDidriksen> May be buffered.
[14:46:40] <TinoDidriksen> That would actually be an interesting benchmark...
[14:47:18] <TinoDidriksen> Aha, http://www.nextpoint.se/?p=540 already did that.
[14:49:05] *** kfv_ is now known as kfv
[14:50:23] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:55:32] <Eelis> would be more interesting to try it with fgetc_unlocked, since locking the FILE mutex is probably a big part of the overhead
[14:56:21] <Eelis> (which you only need if you use the FILE concurrently from multiple threads, which is atypical)
[14:57:36] *** Quits: CaCode- (~CaCode@user/cacode) (Quit: Leaving)
[15:02:17] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[15:02:24] <Eelis> (if you actually do need to access the FILE concurrently from multiple threads, then fread is definitely a better idea, because then fread reduces the amount of synchronization needed)
[15:05:48] *** pah is now known as pa
[15:06:01] <zz> https://inai.de/csv  I get 2.79s (getc) vs 2.16s (gets)
[15:06:46] <zz> Even if we assume that libc is well-implemented, 508M getc function calls still is a lot more than 9.3M gets calls
[15:07:37] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[15:12:30] <Eelis> those programs don't look equivalent. one has special handling of \0, the other does not
[15:14:33] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[15:14:53] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Remote host closed the connection)
[15:16:02] <Eelis> how much those function calls matter really depends on whether the file is fresh in cache. if it is, then accessing it will be fast and the overhead of the function calls will be relatively more than if the file is not in cache
[15:16:14] <Eelis> s/more/less/
[15:16:52] <Eelis> s/less/more/
[15:18:15] *** Quits: AmR (~AmREiSa@156.199.223.24) (Ping timeout: 256 seconds)
[15:18:28] *** Joins: ibenn (~benn@2a02:8071:45af:1700:6ab3:ab1:5b69:4d2f)
[15:19:53] *** Joins: RoKenn (~RoKenn@2001:a61:3432:ab01:30ff:5b2c:fa32:5fd3)
[15:19:53] *** Quits: RoKenn (~RoKenn@2001:a61:3432:ab01:30ff:5b2c:fa32:5fd3) (Changing host)
[15:19:53] *** Joins: RoKenn (~RoKenn@user/rokenn)
[15:24:58] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[15:27:23] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Ping timeout: 252 seconds)
[15:31:21] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[15:31:42] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:33:41] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[15:36:27] *** Quits: triad (~triad@user/triad) (Ping timeout: 256 seconds)
[15:38:33] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:b98b:e7d6:2f0c:dc80)
[15:39:18] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[15:39:38] <zz> well, try and see.
[15:40:55] <zz> They should be equivalent in the grand sense, even if one has to handle \0 internally and the other doesn't.
[15:41:11] *** Quits: Lazenca (~lazenca@user/lazenca) (Remote host closed the connection)
[15:41:39] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:50:42] *** immibis_ is now known as immibis
[15:51:49] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[15:52:41] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 252 seconds)
[15:54:24] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[15:58:43] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[15:58:57] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[16:01:36] *** Joins: terminalpusher (~terminalp@2a01:586:a4a5:1:6cb7:accb:2fb0:2679)
[16:07:41] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:b98b:e7d6:2f0c:dc80) (Ping timeout: 268 seconds)
[16:16:05] *** Quits: letto (~letto@188.25.118.240) (Quit: Konversation terminated!)
[16:17:26] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 252 seconds)
[16:18:01] *** Joins: letto (~letto@188.25.118.240)
[16:23:13] *** Joins: KAHR-Alpha (~Alpha@2a01cb0d024a66006080ddc604bfd0de.ipv6.abo.wanadoo.fr)
[16:24:06] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[16:26:02] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:b874:cd1a:cf5c:6fc4)
[16:30:13] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 256 seconds)
[16:30:29] *** Joins: PJBoy (~PJBoy@host81-158-196-74.range81-158.btcentralplus.com)
[16:30:30] *** Quits: PJBoy (~PJBoy@host81-158-196-74.range81-158.btcentralplus.com) (Changing host)
[16:30:30] *** Joins: PJBoy (~PJBoy@user/pjboy)
[16:33:24] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[16:38:11] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[16:38:40] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[16:40:58] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:f08c:4877:a491:d984)
[16:41:00] *** Quits: terminalpusher (~terminalp@2a01:586:a4a5:1:6cb7:accb:2fb0:2679) (Ping timeout: 256 seconds)
[16:43:27] *** Joins: Techcable (~Techcable@168.235.93.147)
[16:43:48] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[16:53:18] *** Joins: plastico (~plastico@neomutt/plastico)
[16:56:32] *** Joins: TomyLobo (~TomyLobo@p200300e80f0f2700b81766b4aa8461b1.dip0.t-ipconnect.de)
[17:00:55] *** Joins: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net)
[17:06:02] *** Joins: terminalpusher (~terminalp@2a01:586:a4a5:1:841d:f597:62fd:8362)
[17:12:31] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[17:12:59] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Quit: ZNC - https://znc.in)
[17:15:10] *** Quits: Cahaan (~Cahaan@user/cahaan) (Read error: Connection reset by peer)
[17:19:52] *** Quits: xiongxin (~Thunderbi@119.123.103.170) (Remote host closed the connection)
[17:23:58] *** Joins: Cahaan (~Cahaan@user/cahaan)
[17:30:45] *** Joins: seninha (~seninha@user/seninha)
[17:30:52] *** Joins: Inline (~Inline@aftr-37-201-241-16.unity-media.net)
[17:32:25] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 252 seconds)
[17:35:22] *** Quits: uzer1 (~uzer@dsl-trebng11-54f912-114.dhcp.inet.fi) (Quit: WeeChat 3.3)
[17:39:01] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:39:09] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:39:09] *** ChanServ sets mode: +v npaperbot
[17:39:16] *** Joins: moose` (~moose@user/moose)
[17:40:08] *** Quits: moose (~moose@user/moose) (Read error: Connection reset by peer)
[17:40:22] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Remote host closed the connection)
[17:44:18] *** Joins: RoKenn (~RoKenn@2001:a61:3432:ab01:b940:2c5d:9a87:d849)
[17:44:18] *** Quits: RoKenn (~RoKenn@2001:a61:3432:ab01:b940:2c5d:9a87:d849) (Changing host)
[17:44:18] *** Joins: RoKenn (~RoKenn@user/rokenn)
[17:48:00] *** Quits: bionade24 (~bionade24@server2.oscloud.info) (Remote host closed the connection)
[17:54:37] *** Quits: aleios (~aleios@user/aleios) (Quit: WeeChat 3.3)
[17:58:21] *** Joins: bionade24 (~bionade24@server2.oscloud.info)
[17:58:28] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Read error: Connection reset by peer)
[17:58:45] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[18:07:03] *** Joins: tradar (~tradar@user/tradar)
[18:10:52] *** Joins: Brainium (~brainium@user/brainium)
[18:12:37] *** Quits: chenqisu1 (~chenqisu1@183.217.200.156) (Quit: Leaving)
[18:16:19] *** Joins: philip (~philip@210.16.81.112)
[18:17:18] *** Joins: Oleg (~Oleg@ool-44c55d31.dyn.optonline.net)
[18:18:00] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Remote host closed the connection)
[18:18:23] <Oleg> geordi: --clang int main(){}
[18:18:23] <geordi> exception: execv
[18:18:35] <Oleg> oh, so the clang bot still doesn't work
[18:19:10] <Oleg> I guess it hasn't worked for 3 years already
[18:20:06] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[18:20:11] <Oleg> geordi: --version
[18:20:12] <geordi> GCC 12.0.0 20211202 (experimental)
[18:21:31] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[18:21:52] <Oleg> geordi: { int x{10}; std::cout << new char[x]{"hi"}; }
[18:21:53] <geordi>  
[18:22:15] <Oleg> geordi: { const int x{10}; std::cout << new char[x]{"hi"}; }
[18:22:16] <geordi> hi
[18:27:15] *** Joins: ferdna (~ferdna@user/ferdna)
[18:28:00] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:33:41] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 245 seconds)
[18:33:42] *** Joins: nrl^ (~nrl@68.101.58.90)
[18:34:19] *** Quits: Brainium (~brainium@user/brainium) (Ping timeout: 256 seconds)
[18:37:05] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[18:41:14] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:b874:cd1a:cf5c:6fc4) (Ping timeout: 268 seconds)
[18:41:18] *** Quits: letto (~letto@188.25.118.240) (Quit: Konversation terminated!)
[18:41:57] *** Joins: letto (~letto@188.25.118.240)
[18:43:13] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[18:48:19] *** Quits: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net) (Ping timeout: 252 seconds)
[18:48:43] *** Joins: NEYi (~NEYi@109.251.216.38)
[18:54:47] *** Joins: boreas (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[18:55:04] *** boreas is now known as heiner
[19:01:10] *** Quits: Inline (~Inline@aftr-37-201-241-16.unity-media.net) (Read error: Connection reset by peer)
[19:01:17] *** Joins: Inline (~Inline@aftr-37-201-241-16.unity-media.net)
[19:01:18] *** Joins: SChiba (~SChiba@ip5f5bc64f.dynamic.kabel-deutschland.de)
[19:03:27] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[19:06:37] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[19:07:44] *** Quits: Inline (~Inline@aftr-37-201-241-16.unity-media.net) (Read error: Connection reset by peer)
[19:08:03] *** Joins: Inline (~Inline@aftr-37-201-241-16.unity-media.net)
[19:08:55] *** Joins: xkuru (~xkuru@user/xkuru)
[19:12:55] *** Quits: hackinghorn (~hackingho@user/hackinghorn) (Ping timeout: 256 seconds)
[19:13:47] *** Joins: triad (~triad@user/triad)
[19:14:07] <andi_> can somebody tell me why i get a permission denied on my nmap? https://paste.xinu.at/Vrf5Ad/
[19:17:12] <ville> !give andi_ general
[19:17:13] <nolyc> andi_: #C++-general for algorithms, libraries, practices, projects, tools etc.
[19:17:17] *** Quits: KAHR-Alpha (~Alpha@2a01cb0d024a66006080ddc604bfd0de.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[19:20:11] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[19:20:40] *** Joins: bindu (~bindu@user/bindu)
[19:27:54] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[19:28:18] *** zz is now known as anyone
[19:29:50] *** Quits: SChiba (~SChiba@ip5f5bc64f.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[19:31:03] *** Quits: triad (~triad@user/triad) (Ping timeout: 256 seconds)
[19:35:28] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[19:37:39] *** Joins: tolog (~tolog@89.36.78.90)
[19:38:08] *** Quits: Inline (~Inline@aftr-37-201-241-16.unity-media.net) (Remote host closed the connection)
[19:40:53] *** Quits: tolog (~tolog@89.36.78.90) (Remote host closed the connection)
[19:51:36] *** Quits: Alipha (~AliphaX@user/alipha) (Read error: Connection reset by peer)
[19:55:12] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[19:57:54] *** Joins: slidercrank (~slidercra@user/slidercrank)
[19:59:16] *** Joins: fassl (~fassl@2a02:8388:1987:9380:7d37:f3ce:8f29:dfc3)
[19:59:58] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[20:02:07] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[20:04:11] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[20:04:19] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[20:04:31] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[20:05:13] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Client Quit)
[20:05:49] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Quit: Konversation terminated!)
[20:13:36] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Remote host closed the connection)
[20:17:30] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[20:22:11] *** Quits: bolovanos (~bolovanos@user/bolovanos) (Ping timeout: 252 seconds)
[20:29:44] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[20:29:56] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[20:36:15] *** Joins: rgrinberg (~textual@187.223.248.37)
[20:38:49] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[20:42:24] *** Joins: ss4 (~wootehfoo@user/wootehfoot)
[20:44:30] *** Joins: aleios (~aleios@user/aleios)
[20:50:40] *** Joins: justsec (~debian@mobile-access-567365-131.dhcp.inet.fi)
[20:50:59] *** Parts: justsec (~debian@mobile-access-567365-131.dhcp.inet.fi) ()
[20:54:21] *** Quits: the_lanetly_052_ (~the_lanet@185.30.89.11) (Ping timeout: 256 seconds)
[20:54:47] *** Joins: Alipha (~AliphaX@75-168-47-62.mpls.qwest.net)
[20:54:47] *** Quits: Alipha (~AliphaX@75-168-47-62.mpls.qwest.net) (Changing host)
[20:54:47] *** Joins: Alipha (~AliphaX@user/alipha)
[20:58:09] *** Joins: zenstoic (uid461840@id-461840.hampstead.irccloud.com)
[20:59:23] *** Joins: triad (~triad@user/triad)
[20:59:32] *** Joins: Yruama (~Yruama@2a01:cb15:8139:9400:8634:97ff:fe6e:86ac)
[21:01:38] *** Joins: Brainium (~brainium@user/brainium)
[21:11:51] *** Joins: bolovanos (~bolovanos@user/bolovanos)
[21:15:42] *** Joins: AmR (~AmREiSa@156.199.223.24)
[21:15:52] *** Quits: joilerv (~joilerv@host86-191-93-41.range86-191.btcentralplus.com) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[21:16:49] *** Quits: fassl (~fassl@2a02:8388:1987:9380:7d37:f3ce:8f29:dfc3) (Ping timeout: 252 seconds)
[21:18:16] *** Joins: tolog (~tolog@89.36.78.90)
[21:19:02] *** Joins: Betal (~Betal@user/betal)
[21:21:11] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[21:26:43] *** Quits: triad (~triad@user/triad) (Ping timeout: 252 seconds)
[21:27:28] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[21:35:29] *** Quits: ibenn (~benn@2a02:8071:45af:1700:6ab3:ab1:5b69:4d2f) (Quit: Leaving)
[21:39:01] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:39:10] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:39:10] *** ChanServ sets mode: +v npaperbot
[21:39:11] *** Quits: rgrinberg (~textual@187.223.248.37) (Ping timeout: 252 seconds)
[21:42:36] *** Joins: rgrinberg (~textual@187.223.250.159)
[21:47:22] *** Quits: rgrinberg (~textual@187.223.250.159) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:47:30] *** Joins: triad (~triad@user/triad)
[21:47:33] *** Quits: T`aZ (~TaZ@user/taz/x-9470768) (Ping timeout: 256 seconds)
[21:49:03] *** Joins: T`aZ (~TaZ@user/taz/x-9470768)
[21:49:50] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[21:53:54] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[21:54:07] *** Joins: rgrinberg (~textual@187.223.250.159)
[21:58:59] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 252 seconds)
[22:01:29] *** Quits: preisi (~preisi@irc.prei.si) (Quit: WeeChat 3.0)
[22:01:36] *** Joins: twofingersneat (~twofinger@174-080-036-228.res.spectrum.com)
[22:02:25] *** Joins: preisi (~preisi@boron.tpreisner.de)
[22:07:15] *** Quits: preisi (~preisi@boron.tpreisner.de) (Client Quit)
[22:07:30] *** Joins: preisi (~preisi@irc.prei.si)
[22:08:25] *** Quits: preisi (~preisi@irc.prei.si) (Client Quit)
[22:08:41] *** Joins: preisi (~preisi@irc.prei.si)
[22:11:26] *** Parts: terminalpusher (~terminalp@2a01:586:a4a5:1:841d:f597:62fd:8362) ()
[22:11:58] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:c5dd:3e79:954e:8ffa)
[22:11:58] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:c5dd:3e79:954e:8ffa) (Changing host)
[22:11:58] *** Joins: skapata (~Skapata@user/skapata)
[22:12:20] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[22:12:20] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[22:12:33] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[22:12:56] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[22:17:01] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 256 seconds)
[22:21:01] *** Joins: rgrinberg (~textual@187.223.250.159)
[22:21:31] *** Joins: Jeanne-Kamikaze (~Jeanne-Ka@static-198-54-131-169.cust.tzulo.com)
[22:21:33] *** Quits: preisi (~preisi@irc.prei.si) (Quit: WeeChat 3.0)
[22:22:36] *** Joins: preisi (~preisi@irc.prei.si)
[22:26:03] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 276 seconds)
[22:28:27] *** Quits: proller (~p@2a02:6b8:b081:1210::1:1f) (Remote host closed the connection)
[22:30:37] *** Joins: CormacAttack (~mac@144.62.50.200)
[22:31:08] *** Joins: proller (~p@80.240.216.69)
[22:33:06] *** Joins: hackinghorn (~hackingho@user/hackinghorn)
[22:33:30] *** Quits: Jeanne-Kamikaze (~Jeanne-Ka@static-198-54-131-169.cust.tzulo.com) (Quit: Leaving)
[22:48:16] *** Joins: vicfred (~vicfred@user/vicfred)
[22:48:54] *** Quits: skipper (~whatsupbo@user/scobydoo) (Quit: WeeChat 2.8)
[22:49:19] *** Quits: rgrinberg (~textual@187.223.250.159) (Ping timeout: 256 seconds)
[22:52:47] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[22:55:45] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[23:03:13] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[23:04:25] *** Joins: chozorho (~chozorho@2601:146:300:c30::71e1)
[23:05:31] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[23:06:10] *** Joins: rgrinberg (~textual@187.223.250.159)
[23:07:37] *** Joins: Zogatribe (Zogatribe@user/zogatribe)
[23:08:12] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:10:33] *** Quits: rgrinberg (~textual@187.223.250.159) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:11:57] *** Quits: rahl (~rahl@102.114.118.74) (Ping timeout: 252 seconds)
[23:12:20] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:12:36] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:13:22] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:13:59] *** Joins: rahl (~rahl@102.114.63.0)
[23:14:20] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:15:24] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:16:21] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:17:24] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:18:20] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:19:20] *** Joins: Nel (~Nel@172-222-135-071.res.spectrum.com)
[23:19:21] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:20:23] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:21:25] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:21:48] *** Quits: Nel (~Nel@172-222-135-071.res.spectrum.com) (Quit: Igloo IRC: https://iglooirc.com)
[23:22:34] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:23:37] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:24:43] *** Quits: zenstoic (uid461840@id-461840.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[23:24:44] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:25:31] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Ping timeout: 252 seconds)
[23:25:47] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:26:24] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Quit: quit)
[23:26:53] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:27:58] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:29:06] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:30:09] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:31:15] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:32:18] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:33:07] *** Joins: Nel (~Nel@172-222-135-071.res.spectrum.com)
[23:33:27] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:34:31] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:35:21] *** Quits: Nel (~Nel@172-222-135-071.res.spectrum.com) (Remote host closed the connection)
[23:35:40] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:35:49] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:c0df:1ba6:10f2:5481)
[23:36:43] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:37:45] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:38:47] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:39:19] *** Quits: RoKenn (~RoKenn@user/rokenn) (Remote host closed the connection)
[23:39:41] *** Joins: RoKenn (~RoKenn@2001:a61:3432:ab01:b940:2c5d:9a87:d849)
[23:39:42] *** Quits: RoKenn (~RoKenn@2001:a61:3432:ab01:b940:2c5d:9a87:d849) (Changing host)
[23:39:42] *** Joins: RoKenn (~RoKenn@user/rokenn)
[23:39:49] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:40:50] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:41:54] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:42:57] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:44:05] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:45:08] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:45:10] *** Joins: rgrinberg (~textual@187.223.250.159)
[23:46:13] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:47:16] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:47:26] *** Quits: furrymcgee (~devuan@cgn-89-1-209-182.nc.de) (Quit: leaving)
[23:48:22] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:49:11] *** Quits: Brainium (~brainium@user/brainium) (Quit: Konversation terminated!)
[23:49:12] *** Joins: Brainium_ (~brainium@user/brainium)
[23:49:23] *** Quits: philip (~philip@210.16.81.112) (Ping timeout: 256 seconds)
[23:49:24] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:50:23] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:51:26] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:51:45] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (K-Lined)
[23:52:23] *** Quits: paulf (~paulf@lfbn-lyo-1-397-34.w2-7.abo.wanadoo.fr) (Quit: Connection closed)
[23:55:49] *** Joins: DeepComa (~PhoenixCo@user/alien-fx-fiend/x-2328408)
