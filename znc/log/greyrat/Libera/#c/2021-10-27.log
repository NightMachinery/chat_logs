[00:01:17] *** Quits: mikoto-chan (~mikoto-ch@185.237.102.117) (Quit: mikoto-chan)
[00:01:18] *** Quits: kuber (~kuber@97-126-3-32.tukw.qwest.net) (Quit: leaving)
[00:01:23] *** Quits: SamuelMa1ks (~samuel@user/samuelmarks) (Ping timeout: 260 seconds)
[00:01:23] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 260 seconds)
[00:01:51] *** Joins: xa0s (xa0s@sdf.org)
[00:03:59] *** Joins: kuku (~kuku@user/kuku)
[00:04:54] *** Quits: tech_exorcist_ (txrcst@user/tech-exorcist/x-0447479) (Quit: see you tomorrow)
[00:05:54] *** Quits: kuku01 (~kuku@user/kuku) (Ping timeout: 260 seconds)
[00:08:12] <tk> nomagno: what do you mean? do you understand how the C pre-processor works?
[00:08:12] *** Quits: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt) (Read error: Connection reset by peer)
[00:08:20] <tk> nomagno: it operates on the basis of simple substitutions
[00:08:43] *** Joins: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[00:08:59] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-08a2-bff1-0197-0a0b.res6.spectrum.com)
[00:09:27] *** Quits: xa0s (xa0s@sdf.org) (Quit: leaving)
[00:09:41] *** Quits: constxo (~brad@192.75.101.164) (Ping timeout: 245 seconds)
[00:11:12] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[00:11:59] <rcf> nomagno: look at the original bourne shell source code for the most infamous example. 
[00:13:01] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[00:13:52] <rcf> nomagno: https://www.tuhs.org/cgi-bin/utree.pl?file=V7/usr/src/cmd/sh yes that is actually C
[00:14:23] *** Quits: magla (~gelignite@55d4747b.access.ecotel.net) (Quit: Stay safe!)
[00:14:54] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[00:14:59] *** Joins: extern (~archer@80.246.133.172)
[00:16:14] <rcf> All you need is https://www.tuhs.org/cgi-bin/utree.pl?file=V7/usr/src/cmd/sh/mac.h and now your code is I Can't Believe It's Not Algol™
[00:17:41] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 265 seconds)
[00:18:39] <extern> what is the easiest way to determine the cost of every instruction ?
[00:19:03] <extern> im trying to compare two similar algorithms with two different implementations on different outputs 
[00:19:13] <extern> trying to determine from which N on i should use one or the other
[00:19:46] *** Quits: Karyon (~Karyon@user/karyon) (Quit: Good bye)
[00:19:59] *** Joins: Karyon (~Karyon@user/karyon)
[00:21:45] *** Joins: cart_man (~rynot@cpc100914-uddi26-2-0-cust18.20-3.cable.virginm.net)
[00:22:35] <cart_man> Hey everyone. How do I compile for C when I have a gcc compiler on? I know i usually compile my C++ using G++ . But is it still CC to compile for C?
[00:22:53] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:23:41] <rcf> extern: The easiest way is to just try both algorithms and see which performs better on your target platform. If you aren't already measuring this performance, you probably don't actually care about performance enough to justify the effort. 
[00:24:05] <rcf> cart_man: cc
[00:24:18] <cart_man> rcf: Thanks
[00:24:47] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[00:25:12] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[00:26:05] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[00:27:01] *** Quits: ekathva (~ekathva@88-114-118-220.elisa-laajakaista.fi) (Remote host closed the connection)
[00:27:03] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 260 seconds)
[00:27:11] *** Quits: Karyon (~Karyon@user/karyon) (Quit: Good bye)
[00:27:24] *** Joins: Karyon (~Karyon@user/karyon)
[00:27:39] *** lukedashjr is now known as luke-jr
[00:30:26] *** Joins: NEYi_ (~NEYi@109.251.216.38)
[00:30:47] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[00:31:57] <coroutines> extern: an ammeter
[00:32:09] <coroutines> i'm not even slightly joking
[00:32:20] *** Quits: extern (~archer@80.246.133.172) (Quit: WeeChat 3.3)
[00:33:09] *** Quits: NEYi (~NEYi@109.251.216.38) (Ping timeout: 265 seconds)
[00:33:33] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[00:34:06] *** Joins: thing (~thing@user/thing)
[00:37:19] *** Quits: Karyon (~Karyon@user/karyon) (Quit: Good bye)
[00:37:32] *** Joins: Karyon (~Karyon@user/karyon)
[00:39:56] <ski> nomagno : ray-tracing ? Monte-Carlo methods ?
[00:42:23] *** Joins: h4zel (~hazel@user/h4zel)
[00:45:04] <nomagno> ski: Yes! A Monte-Carlo-ish approach to ray casting a 2D plane.
[00:45:15] *** Quits: kadavul (~vazha@103.165.20.238) (Ping timeout: 260 seconds)
[00:50:28] *** Joins: kadavul (~vazha@103.165.20.238)
[00:52:10] *** Quits: Lorra (~lorenzo@2001:a61:b2d:bb01:94ca:a8ff:cada:1f3) (Quit: Konversation terminated!)
[00:53:16] *** Quits: blindguard (~blindguar@aftr-37-201-193-251.unity-media.net) (Quit: Konversation terminated!)
[00:55:39] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:56:30] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[00:57:39] *** Quits: AmR (~AmREiSa@156.199.244.83) (Quit: Konversation terminated!)
[00:59:24] *** Joins: kuber (~kuber@97-126-3-32.tukw.qwest.net)
[01:00:03] <cart_man> is Templates a thing in C?
[01:01:03] *** Quits: kuber (~kuber@97-126-3-32.tukw.qwest.net) (Client Quit)
[01:03:06] <coroutines> no
[01:05:08] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[01:05:55] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[01:06:43] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 260 seconds)
[01:07:14] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[01:08:35] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:08:38] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[01:08:49] *** lukedashjr is now known as luke-jr
[01:09:20] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[01:10:51] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 265 seconds)
[01:16:05] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[01:19:28] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[01:20:49] <cart_man> I never knew there is shorthand notation in the form of "return 5 == 1" in C?
[01:21:02] <cart_man> if 5 return 1 else 0 ? WTF
[01:22:37] <coroutines> wtf code are you reading
[01:25:23] *** Quits: mahmutov (~mahmutov@37.155.35.85) (Ping timeout: 260 seconds)
[01:27:46] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 265 seconds)
[01:29:09] <pragma-> cart_man: `return 5 == 1` always translates to `return 0`
[01:32:01] <pragma-> on the other hand, if you had `x = 5; return x == 5` then this would return 1 when x == 5 and 0 otherwise.
[01:32:28] <cart_man> pragma-: coroutines I swear there is a tutorial on DataStructs where the guy has this -> return sp->top == -1  and it worls
[01:32:43] <cart_man> pragma-: Ohhh ok that makes sense
[01:32:59] <cart_man> where 0 is false and 1 is true
[01:33:16] *** Quits: Karyon (~Karyon@user/karyon) (Quit: Good bye)
[01:33:22] <cart_man> not liek windows... ok but that  is for procc exit only
[01:34:48] *** Parts: hentai (~hentai@user/hentai) ()
[01:35:06] *** Quits: Cyp (~cyp@213.237.87.7) (Ping timeout: 245 seconds)
[01:35:11] *** Quits: chomwitt (~chomwitt@ppp-94-68-249-8.home.otenet.gr) (Ping timeout: 260 seconds)
[01:35:30] *** Joins: Karyon (~Karyon@user/karyon)
[01:37:20] *** Joins: SPAI2 (~SPAI2@2405:201:e00e:90ec:54d3:7e58:c427:c4b9)
[01:39:48] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[01:39:48] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[01:39:48] *** Joins: wroathe (~wroathe@user/wroathe)
[01:40:24] *** Joins: Cyp (~cyp@192038135092.mbb.telenor.dk)
[01:40:34] *** Quits: h4zel (~hazel@user/h4zel) (Quit: WeeChat 3.0.1)
[01:41:25] *** Quits: flyingground (~flyinggro@2a01:117f:409:d600:c9b7:d4e2:7812:4802) (Quit: Leaving)
[01:42:24] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Remote host closed the connection)
[01:43:46] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[01:44:45] *** Quits: SPAI2 (~SPAI2@2405:201:e00e:90ec:54d3:7e58:c427:c4b9) (Quit: Logged off)
[01:45:55] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Ping timeout: 260 seconds)
[01:48:43] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 260 seconds)
[01:49:12] *** Quits: cart_man (~rynot@cpc100914-uddi26-2-0-cust18.20-3.cable.virginm.net) (Quit: Konversation terminated!)
[01:49:57] *** Joins: Nspace (~Nspace@user/nspace)
[01:49:59] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[01:50:17] *** Joins: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67)
[01:51:06] *** justHaunt is now known as justache
[01:52:25] <TheDcoder[m]> Are there any channels dedicated to parsing or bison? I can't seem to find any :-/
[01:52:35] *** Joins: MrMobius_ (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[01:53:05] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[01:54:50] <TheDcoder[m]> sorry for off-topic, but if there are any bison/yacc experts here, could you please help me solve the shift/reduce conflicts? https://bpa.st/FYXQ
[01:55:19] <TheDcoder[m]> I hope it isn't due to the limitations of the LALR parser
[01:56:11] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Ping timeout: 260 seconds)
[01:56:24] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-08a2-bff1-0197-0a0b.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:58:03] *** Quits: Cyp (~cyp@192038135092.mbb.telenor.dk) (Ping timeout: 260 seconds)
[02:02:12] *** Quits: Akuli (~Akuli@213.216.210.136) (Quit: Leaving)
[02:02:58] *** Quits: mort (~mort@188.166.114.29) (Quit: Ping timeout (120 seconds))
[02:03:04] *** Joins: Cyp (~cyp@192038135092.mbb.telenor.dk)
[02:03:23] *** Quits: jayi (~jayi@2603-8001-a301-2f00-0000-0000-0000-000e.res6.spectrum.com) (Quit: Leaving)
[02:03:25] *** Joins: mort (~mort@188.166.114.29)
[02:03:37] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Quit: Leaving)
[02:03:51] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 245 seconds)
[02:04:35] *** Quits: Arimja (~Arimja@user/arimja) (Ping timeout: 260 seconds)
[02:05:03] *** Quits: zwr (~zwr@2804:d45:b966:fb00:298f:8978:b1b0:174e) (Ping timeout: 260 seconds)
[02:06:46] *** Joins: zwr (~zwr@2804:d45:b966:fb00:d12a:3b0c:2197:11ad)
[02:07:07] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[02:14:04] *** Quits: brad_mssw|mbp (~bhouse@2601:344:4100:b490:8942:df17:f8b4:1627) (Quit: Leaving)
[02:16:22] *** Quits: brelod (~me@90.244.150.142) (Quit: leaving)
[02:19:23] *** Joins: rvncerr (~rvncerr@user/rvncerr)
[02:19:27] *** Quits: Sujmikro (~Sujmikro@cpe-188-252-128-28.zg5.cable.xnet.hr) (Quit: Leaving)
[02:28:48] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[02:30:00] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-08a2-bff1-0197-0a0b.res6.spectrum.com)
[02:32:34] *** Quits: pizdets (~pizdets@183.182.110.228) (Ping timeout: 250 seconds)
[02:33:49] *** Joins: pizdets (~pizdets@183.182.111.42)
[02:34:08] *** Joins: MrFantastik (~f@c-71-202-124-69.hsd1.ca.comcast.net)
[02:35:23] *** Joins: katnis (uid15849@id-15849.helmsley.irccloud.com)
[02:36:41] *** Joins: lkor (~lionkor@94.134.95.115)
[02:37:11] *** Quits: lionkor (~lionkor@200116b80fb518006bb1b386965aceb8.dip.versatel-1u1.de) (Ping timeout: 258 seconds)
[02:40:49] <nomagno> What is yacc used for?
[02:41:16] <nomagno> As in, I know what it does. But what practical applications does it have?
[02:43:09] <fizzie> What's the difference between what it does and a practical application? 
[02:43:36] <fizzie> GNU AWK's parser is written in yacc, for example.
[02:43:57] <fizzie> And probably any number of other programming languages and programming-language-like tools.
[02:45:20] <fizzie> Like the `bc` calculator.
[02:46:00] <nomagno> Well I guess I don't know what it does
[02:46:22] <nomagno> What does YACC do specifically, convert from an arbitrary language to C?
[02:46:34] <nomagno> Using grammar rules
[02:46:36] *** Quits: Guest82 (~Guest82@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Quit: Client closed)
[02:47:02] <fizzie> It generates a parser from a grammar specification and actions (usually expressed in C) associated with each of the grammar rules.
[02:47:12] *** Joins: phao (~phao@2804:d45:8e7a:de00:747d:158d:3c76:9f7c)
[02:48:43] <fizzie> So that you don't need to figure out how to turn a "flat" stream of tokens into an AST or something; you just write an action that evaluates the "value" of each rule, and let the generated code take care of running those actions that correspond to the (hopefully unambiguous) parse of the input token sequence.
[02:49:46] <fizzie> (Often the actions do in fact generate AST nodes, if you want to do something more abstract with the result of the parse. For particularly simple cases like the calculator example, they might directly evaluate the value of an expression though.)
[02:50:02] <nomagno> So, basically meant for turning a simple programming language into another arbitrary programming languahe
[02:50:19] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 260 seconds)
[02:51:25] *** Joins: pulse (~pulse@user/pulse)
[02:51:44] *** Joins: Wulf (~Wulf@user/wulf)
[02:52:10] *** Quits: phao (~phao@2804:d45:8e7a:de00:747d:158d:3c76:9f7c) (Quit: Leaving)
[02:52:57] <fizzie> It doesn't have to be a simple one, and it doesn't have to be a programming language either, they're just probably the biggest class of things specified with a grammar. I'm sure I've seen people use yacc/bison to parse configuration file formats too.
[02:53:56] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[02:54:19] <nomagno> Well YACC/bison can ONLY generate C files though, right?
[02:54:44] <fizzie> For example, the Linux nftables textual configuration language has a parser written using bison. https://git.netfilter.org/nftables/tree/src/parser_bison.y
[02:55:33] <fizzie> It might be limited to generating C as the output, yes.
[02:56:47] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 264 seconds)
[02:57:45] <fizzie> But the C code it generates is the parser for the specified grammar, it's really up to what you put in the actions to say what that parser will actually do.
[02:58:16] *** Quits: puke (~puke@user/puke) (Quit: puke)
[02:58:44] <fizzie> Re the original question, it's curious. Looking at the counterexamples, I would have expected the precedence declarations to already disambiguate them. It's only complaining about the function calls, claiming that for example `a+b()` is ambiguous between `a+[b()]` (shift derivation) and `[a+b]()` (reduce derivation).
[02:59:11] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 260 seconds)
[03:00:39] <fizzie> And indeed doing this three-line change, which I *think* should be strictly a no-op, stops it from complaining: https://0x0.st/-dFq.txt
[03:02:04] <TheDcoder[m]> oh, interesting
[03:02:23] <fizzie> What I changed there is, instead of the hypothetical terminal token CALL, I'm just giving the precedence of CALL to the '(' token, and then removing the %prec specifiers from the two rules that used them, so that they'd get their precedence from the operator precedence of '(', since that's the last operator with a specified precedence used in those rules. I don't see why that makes any difference.
[03:03:05] <TheDcoder[m]> I think it's due to the one-token lookahead
[03:03:25] <TheDcoder[m]> with your precedence it only needs to lookahead for the ( token
[03:03:32] <TheDcoder[m]> but with mine it needs to look at the whole rule
[03:04:07] <TheDcoder[m]> I will try the GLR parser, which should be able to handle an arbitrary number of lookahead tokens
[03:05:20] <fizzie> I just got the impression from the documentation that operator precedence only matters in terms of what precedence to assign to each of the rules concerned, and specifying a rule's precedence explicitly should be pretty much the same thing. I mean, for any conflict case it's still a choice between two specific rules. But *shrug*.
[03:06:11] <TheDcoder[m]> I am confused about that as well, it is clearly able to identify the two possible cases
[03:06:23] <TheDcoder[m]> perhaps I have uncovered a bug in the implementation?
[03:06:54] *** Joins: Rounin (~david@84.212.130.215)
[03:07:26] *** Quits: Yaknoti5 (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 260 seconds)
[03:07:35] <fizzie> Well, I guess it *does* have something to do with the precedence assigned to the token, because setting the precedence for ')' (which should also propagate to the rule) does not help. ("-- each rule gets its precedence from the last terminal symbol mentioned in the components.")
[03:08:14] <fizzie> Right, I guess the key point is this: "-- the resolution of conflicts works by comparing the precedence of the rule being considered with that of the lookahead token."
[03:08:19] <TheDcoder[m]> right
[03:09:36] <fizzie> (And of course your original grammar didn't assign any for '(' there, which is the token the conflict was on.)
[03:09:41] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:10:18] <TheDcoder[m]> Hmmm...
[03:10:42] *** Quits: kayprish (~kayprish@46.240.130.158) (Remote host closed the connection)
[03:11:16] <fizzie> (Disclaimer: I've never really intuitively grokked how it all works, I've just muddled through.)
[03:11:58] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:11:59] <fizzie> The sure-to-work option is to just make the *grammar* unambiguous, by using different nonterminals to imply the precedence, the same way (to bring it closer to the channel topic) the C standard's grammar specification does.
[03:12:06] <TheDcoder[m]> Me too, reading through the docs right now
[03:12:08] *** Joins: Macuser (~Macuser@216.30.159.201)
[03:12:37] <TheDcoder[m]> That's such a pain though, lol
[03:13:21] <pragma-> handwriting your own recursive descent parser is much more fun 
[03:13:29] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[03:13:29] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[03:13:29] *** Joins: wroathe (~wroathe@user/wroathe)
[03:13:50] <TheDcoder[m]> pragma-: I did that and promptly gave up due the amount of work I had to do
[03:14:16] <fizzie> FWIW, I think giving '(' the precedence that you want function calls to have does cause it to make the right choices; of the 18 conflicts it mentioned, the shift was always the one you wanted it to do.
[03:14:26] <TheDcoder[m]> In fact, I was convinced to do that after many people in this channel persuaded me to use a parser generator
[03:15:04] *** Quits: alch (~alch@151.34.135.104) (Ping timeout: 265 seconds)
[03:15:17] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[03:15:34] <TheDcoder[m]> fizzie: right, thanks for investigating, I will resort to that method if I can't find a way to fix this using a pseudo-token's precedence
[03:16:48] *** Joins: alch (~alch@151.34.161.232)
[03:17:58] *** Quits: lkor (~lionkor@94.134.95.115) (Ping timeout: 265 seconds)
[03:18:23] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 264 seconds)
[03:18:45] *** Quits: rvncerr (~rvncerr@user/rvncerr) (Remote host closed the connection)
[03:24:50] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[03:27:30] *** Quits: NEYi_ (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[03:28:02] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:29:33] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 244 seconds)
[03:29:59] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[03:30:22] *** Joins: iomari891 (~iomari891@105.112.138.38)
[03:30:55] *** Quits: random-nick (~random-ni@87.116.165.220) (Ping timeout: 260 seconds)
[03:32:21] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[03:34:02] *** Joins: sss123 (~sss123@61.108.38.194)
[03:38:03] *** Joins: rgrinberg (~textual@190.113.111.74)
[03:39:50] *** Quits: Nspace (~Nspace@user/nspace) (Ping timeout: 260 seconds)
[03:41:47] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:4def:4e95:4385:6486) (Ping timeout: 264 seconds)
[03:41:53] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[03:45:19] *** Joins: FlipFlop (~FlipFlop@user/fl1pfl0p)
[03:47:52] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[03:48:11] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[03:48:14] *** Joins: KillerWasp (KillerWasp@user/killerwasp)
[03:48:41] *** Parts: KillerWasp (KillerWasp@user/killerwasp) ("YOU KIDDING ME?? YOU KIDDING MEEE????" (PC fried with venom slayer) *kernel panic!*)
[03:49:08] *** Lord_of_Life_ is now known as Lord_of_Life
[03:51:13] *** Quits: rgrinberg (~textual@190.113.111.74) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:52:06] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:52:50] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:53:33] *** Joins: quartz (~quartz@user/quartz)
[03:56:48] *** Joins: Arimja (~Arimja@45-30-22-133.lightspeed.nsvltn.sbcglobal.net)
[03:56:48] *** Quits: Arimja (~Arimja@45-30-22-133.lightspeed.nsvltn.sbcglobal.net) (Changing host)
[03:56:48] *** Joins: Arimja (~Arimja@user/arimja)
[03:57:12] *** Quits: Arimja (~Arimja@user/arimja) (Client Quit)
[03:57:49] *** Quits: dutch (~DutchIngr@user/dutch) (Quit: WeeChat 3.3)
[03:59:39] *** Quits: sebbu (~sebbu@user/sebbu) (Read error: Connection reset by peer)
[04:02:44] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Remote host closed the connection)
[04:07:59] *** Joins: juliopcrj (~juliopcrj@177.44.227.40)
[04:08:34] *** Quits: YellowSuB (~YellowSuB@user/yellowsub) (Ping timeout: 260 seconds)
[04:09:05] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[04:10:15] *** Joins: YellowSuB (~YellowSuB@user/yellowsub)
[04:12:17] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:4def:4e95:4385:6486)
[04:12:18] *** coroutines is now known as floatcomplex
[04:13:24] *** Joins: ferdna (~ferdna@user/ferdna)
[04:16:16] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 252 seconds)
[04:17:07] *** Joins: ircuser (~ircuser@S01069050ca4e3573.cg.shawcable.net)
[04:18:08] *** Parts: ircuser (~ircuser@S01069050ca4e3573.cg.shawcable.net) ()
[04:18:35] *** Joins: dutch (~DutchIngr@user/dutch)
[04:18:55] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[04:19:31] *** Joins: sebbu (~sebbu@user/sebbu)
[04:23:49] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[04:24:35] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Ping timeout: 260 seconds)
[04:25:03] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 260 seconds)
[04:27:49] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[04:31:08] *** Joins: BGL (fifty@75-149-171-58-Washington.hfc.comcastbusiness.net)
[04:31:08] *** Quits: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67) (Quit: Leaving)
[04:32:00] *** Joins: CaCode_ (~Cas@dynamic-077-006-007-238.77.6.pool.telefonica.de)
[04:33:01] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:4def:4e95:4385:6486) (Ping timeout: 245 seconds)
[04:34:01] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[04:34:42] *** Quits: CaCode (~Cas@user/cacode) (Ping timeout: 260 seconds)
[04:34:58] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[04:36:33] *** Quits: juliopcrj (~juliopcrj@177.44.227.40) (Quit: Leaving)
[04:39:22] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 260 seconds)
[04:39:23] *** Quits: Egeon (~kaliyuga@2601:601:200:5b30:ab21:ed09:ae59:d58d) (Ping timeout: 264 seconds)
[04:40:42] *** Joins: Egeon (~kaliyuga@2601:601:200:5b30::5abd)
[04:45:23] *** Quits: csjp (~csjp@user/csjp) (Quit: leaving)
[04:48:43] *** Joins: KevinX_ (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[04:48:50] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Ping timeout: 265 seconds)
[04:48:52] *** Quits: KevinX_ (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Read error: Connection reset by peer)
[04:49:30] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[04:51:30] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 260 seconds)
[04:52:12] *** Joins: soapsudsxx (~soapsudsx@209.221.40.137)
[04:56:11] *** Joins: smlavine (~smlavine@sourcehut/user/smlavine)
[04:58:48] *** Joins: The_Jag_ (~The_Jag@host-87-11-42-170.retail.telecomitalia.it)
[05:00:55] *** Quits: The_Jag (~The_Jag@host-87-19-40-26.retail.telecomitalia.it) (Ping timeout: 265 seconds)
[05:01:55] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 260 seconds)
[05:05:46] *** Joins: p0g0__ (~p0g0@216.211.157.175)
[05:05:58] *** Quits: p0g0_ (~p0g0@216.211.157.175) (Remote host closed the connection)
[05:07:42] <katnis> hello world
[05:07:55] <omegatron> hm?
[05:08:24] <vdamewood> Error 404: World not found
[05:09:10] <omegatron> are we playing .hack now here?
[05:09:15] <katnis> typedef earth word
[05:09:16] *** Joins: test456 (~test890@23.105.206.15.16clouds.com)
[05:09:39] <katnis> worldtype;
[05:09:51] *** Quits: YellowSuB (~YellowSuB@user/yellowsub) (Ping timeout: 260 seconds)
[05:11:34] *** Joins: YellowSuB (~YellowSuB@user/yellowsub)
[05:13:01] *** Joins: rgrinberg (~textual@190.113.111.74)
[05:17:01] *** Joins: stzsch (~stzsch@187.44.81.18)
[05:18:01] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[05:19:39] *** Quits: stzsch|2 (~stzsch@187.44.81.18) (Ping timeout: 260 seconds)
[05:22:22] *** Joins: nehsou^ (~nehsou@wsip-68-227-92-38.mc.at.cox.net)
[05:23:04] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[05:28:16] *** Joins: csrf (~csrf@user/csrf)
[05:30:17] *** Joins: csrf1 (~csrf@ip72-199-118-215.sd.sd.cox.net)
[05:30:20] *** Quits: csrf (~csrf@user/csrf) (Read error: Connection reset by peer)
[05:38:05] *** Quits: test456 (~test890@23.105.206.15.16clouds.com) (Quit: Leaving)
[05:38:53] *** Quits: kadavul (~vazha@103.165.20.238) (Read error: Connection reset by peer)
[05:40:29] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[05:42:03] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 260 seconds)
[05:42:56] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[05:43:15] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b015:4631:ae99:77fc:b7fb)
[05:43:50] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[05:43:52] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 244 seconds)
[05:45:59] *** Quits: wuldor (~supermumm@90.247.230.150) (Remote host closed the connection)
[05:48:08] *** MrMobius_ is now known as MrMobius
[05:48:52] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:54:01] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[05:54:01] *** Quits: acerbic (~acerbic@cs-xdata-50-86-50-181.cspire.com) (Read error: Connection reset by peer)
[06:00:32] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[06:03:05] *** Quits: humky (~humky@user/humky) (Quit: Leaving)
[06:05:00] *** Joins: HaMsTeRs (~Thunderbi@14-0-169-150.static.pccw-hkt.com)
[06:07:31] *** Joins: dmaroo (~dhruv@2409:4070:2b98:1861:a501:f732:2cc8:100)
[06:07:56] *** Joins: bongobrown (~bongobrow@cpe-76-185-215-2.satx.res.rr.com)
[06:09:16] *** Quits: FlipFlop (~FlipFlop@user/fl1pfl0p) (Ping timeout: 245 seconds)
[06:11:15] *** Joins: acerbic (~acerbic@cs-xdata-50-86-50-181.cspire.com)
[06:22:13] *** Joins: loganlee (~Thunderbi@user/loganlee)
[06:26:41] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[06:27:13] *** Joins: LuckyRawApe (~sergiy@203.129.63.205)
[06:27:14] *** Joins: SPAI2 (~SPAI2@27.62.57.24)
[06:27:55] *** Joins: presonic (~presonic@111-22-237-24.gci.net)
[06:28:43] *** Quits: highrate (~presonic@111-22-237-24.gci.net) (Ping timeout: 260 seconds)
[06:29:04] *** Quits: bongobrown (~bongobrow@cpe-76-185-215-2.satx.res.rr.com) (Quit: Leaving)
[06:29:22] *** Joins: bongobrown (~bongobrow@cpe-76-185-215-2.satx.res.rr.com)
[06:39:55] *** Joins: zyweo (~Svew@user/zyweo)
[06:40:10] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[06:41:34] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[06:41:34] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[06:41:34] *** Joins: wroathe (~wroathe@user/wroathe)
[06:46:31] *** Quits: SPAI2 (~SPAI2@27.62.57.24) (Quit: Logged off)
[06:47:16] *** Quits: bongobrown (~bongobrow@cpe-76-185-215-2.satx.res.rr.com) (Quit: Leaving)
[06:47:35] *** Joins: bongobrown (~bongobrow@cpe-76-185-215-2.satx.res.rr.com)
[06:50:35] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 260 seconds)
[06:52:02] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[06:54:58] *** Quits: kurahaupo_ (~kurahaupo@220-245-23-126.static.tpgi.com.au) (Read error: Connection reset by peer)
[06:55:15] *** Joins: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au)
[06:58:56] *** Joins: alsomay (~zz@2001:8003:1612:d500:8b3:c0f2:eed8:ff3)
[07:00:21] *** Quits: Sos (~Sos@d42-155.icpnet.pl) (Quit: Leaving)
[07:11:14] *** Quits: alsomay (~zz@2001:8003:1612:d500:8b3:c0f2:eed8:ff3) (Quit: WeeChat 1.1.1)
[07:11:25] *** Quits: alch (~alch@151.34.161.232) (Read error: Connection reset by peer)
[07:11:30] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[07:13:31] *** Quits: bongobrown (~bongobrow@cpe-76-185-215-2.satx.res.rr.com) (Ping timeout: 260 seconds)
[07:13:35] *** Joins: jinsun (~quassel@user/jinsun)
[07:13:52] *** Joins: zz1 (~zz@2001:8003:1612:d500:8b3:c0f2:eed8:ff3)
[07:16:11] *** Joins: alch (~alch@151.34.168.195)
[07:18:16] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[07:21:44] *** Joins: mahmutov (~mahmutov@37.155.35.85)
[07:22:39] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[07:25:52] *** Quits: Tom^ (~Tom^@user/tom/x-0773808) (Quit: WeeChat 3.4-dev)
[07:27:08] *** Quits: lichform (~lichform@2601:85:8200:5a80:d962:72c0:6fa:956e) (Quit: Leaving)
[07:28:09] *** Joins: topside_ (~topside@ip68-226-238-34.lf.br.cox.net)
[07:28:10] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[07:28:10] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[07:28:10] *** Joins: wroathe (~wroathe@user/wroathe)
[07:29:05] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 260 seconds)
[07:32:11] *** Quits: topside (~topside@ip68-226-238-34.lf.br.cox.net) (Ping timeout: 260 seconds)
[07:32:58] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[07:33:07] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[07:34:01] *** Quits: zz1 (~zz@2001:8003:1612:d500:8b3:c0f2:eed8:ff3) (Quit: WeeChat 1.1.1)
[07:34:14] *** Joins: zz1 (~zz@2001:8003:1612:d500:8b3:c0f2:eed8:ff3)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:26] *** Quits: zmt00 (~zmt00@user/zmt00) (Quit: Gone.)
[07:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:48] *** Joins: zmt00 (~zmt00@user/zmt00)
[07:38:23] *** Joins: Tom^ (~Tom^@user/tom/x-0773808)
[07:38:35] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[07:39:18] *** Quits: katnis (uid15849@id-15849.helmsley.irccloud.com) (Quit: Updating details, brb)
[07:39:26] *** Joins: katnis (uid15849@id-15849.helmsley.irccloud.com)
[07:40:56] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 245 seconds)
[07:40:56] *** Quits: HaMsTeRs (~Thunderbi@14-0-169-150.static.pccw-hkt.com) (Read error: Connection reset by peer)
[07:41:14] *** Joins: highrate (~presonic@111-22-237-24.gci.net)
[07:42:35] *** Joins: jinsun (~quassel@user/jinsun)
[07:43:45] *** Joins: HaMsTeRs (~Thunderbi@14-0-169-150.static.pccw-hkt.com)
[07:43:49] *** Quits: HaMsTeRs (~Thunderbi@14-0-169-150.static.pccw-hkt.com) (Client Quit)
[07:44:38] *** Quits: presonic (~presonic@111-22-237-24.gci.net) (Ping timeout: 260 seconds)
[07:45:02] *** Joins: pucara (~i@181.92.71.111)
[07:46:42] *** Quits: Tom^ (~Tom^@user/tom/x-0773808) (Quit: WeeChat 3.4-dev)
[07:47:34] *** Joins: Tom^ (~Tom^@user/tom/x-0773808)
[07:50:24] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[07:51:28] *** Joins: V-T60 (~v@91.203.24.166)
[07:55:13] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:56:22] *** Joins: thing (~thing@user/thing)
[08:03:59] *** Quits: mahmutov (~mahmutov@37.155.35.85) (Ping timeout: 264 seconds)
[08:07:10] *** Quits: dmaroo (~dhruv@2409:4070:2b98:1861:a501:f732:2cc8:100) (Quit: Konversation terminated!)
[08:12:02] *** Quits: V-T60 (~v@91.203.24.166) (Quit: Leaving.)
[08:22:11] *** Quits: FrankD (~frankd@69.206.2.53) (Read error: Connection reset by peer)
[08:22:36] *** Quits: smlavine (~smlavine@sourcehut/user/smlavine) (Ping timeout: 245 seconds)
[08:31:53] *** Quits: soapsudsxx (~soapsudsx@209.221.40.137) (Remote host closed the connection)
[08:33:34] *** Quits: zmt00 (~zmt00@user/zmt00) (Quit: Gone.)
[08:33:41] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[08:35:02] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 260 seconds)
[08:35:06] *** Joins: zmt00 (~zmt00@user/zmt00)
[08:36:56] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[08:37:23] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[08:37:52] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[08:39:06] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[08:42:49] *** Quits: nehsou^ (~nehsou@wsip-68-227-92-38.mc.at.cox.net) (Remote host closed the connection)
[08:44:16] *** Joins: QMaury (~loouom@S0106f0f249623d23.vf.shawcable.net)
[08:46:36] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[08:47:00] *** Joins: b1101 (~b1101@pool-100-37-115-53.nycmny.fios.verizon.net)
[08:51:31] *** Quits: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au) (Ping timeout: 260 seconds)
[08:56:30] *** Joins: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au)
[08:58:38] *** Joins: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net)
[08:59:14] *** Quits: QMaury (~loouom@S0106f0f249623d23.vf.shawcable.net) (Quit: Leaving)
[09:00:36] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[09:00:59] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[09:01:16] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[09:11:53] *** Quits: sss123 (~sss123@61.108.38.194) (Quit: Connection closed)
[09:11:59] *** Joins: dmaroo (~dhruv@2409:4070:2b98:1861:a501:f732:2cc8:100)
[09:14:41] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 245 seconds)
[09:19:55] *** Joins: jinsun (~quassel@user/jinsun)
[09:25:56] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 245 seconds)
[09:34:57] *** Joins: CaCode- (~Cas@91.132.197.186)
[09:36:10] *** Quits: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net) (Ping timeout: 260 seconds)
[09:36:15] *** Joins: HaMsTeRs (~Thunderbi@14-0-169-150.static.pccw-hkt.com)
[09:37:33] *** Quits: CaCode- (~Cas@91.132.197.186) (Remote host closed the connection)
[09:37:43] *** Quits: CaCode_ (~Cas@dynamic-077-006-007-238.77.6.pool.telefonica.de) (Ping timeout: 260 seconds)
[09:41:47] *** Joins: CaCode (~Cassius@91.132.197.186)
[09:41:48] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:42:07] *** Quits: CaCode (~Cassius@91.132.197.186) (Changing host)
[09:42:07] *** Joins: CaCode (~Cassius@user/cacode)
[09:44:15] *** Joins: puke (~puke@user/puke)
[09:46:34] *** Joins: Iago[m] (~mercvrivs@2001:470:69fc:105::2ee6)
[09:52:58] *** Quits: BGL (fifty@75-149-171-58-Washington.hfc.comcastbusiness.net) (Ping timeout: 260 seconds)
[09:55:55] *** Quits: MrFantastik (~f@c-71-202-124-69.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[09:56:21] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 276 seconds)
[09:57:35] *** Joins: tejr (~tejr@user/tejr)
[10:06:32] *** Joins: freon (~freon@c-73-210-167-38.hsd1.il.comcast.net)
[10:09:31] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[10:09:38] *** Joins: chomwitt (~chomwitt@2a02:587:dc12:b600:12c3:7bff:fe6d:d374)
[10:10:04] *** Joins: lkor (~lionkor@200116b80fa57c007285c2fffea63d72.dip.versatel-1u1.de)
[10:15:07] *** Quits: freon (~freon@c-73-210-167-38.hsd1.il.comcast.net) (Quit: Client closed)
[10:19:06] *** Quits: luizfrds (~Luiz@152.250.243.147) (Ping timeout: 260 seconds)
[10:19:50] *** Iago[m] is now known as psyxopompos[m]
[10:20:15] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[10:20:31] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[10:23:31] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[10:24:38] *** Joins: whatsupdoc_ (uid509081@id-509081.hampstead.irccloud.com)
[10:27:02] *** Quits: highrate (~presonic@111-22-237-24.gci.net) ()
[10:27:13] *** Quits: vaio (~gary@user/ghost) (Remote host closed the connection)
[10:27:43] *** Joins: vaio (~gary@user/ghost)
[10:27:52] *** whatsupdoc_ is now known as whatsupdoc
[10:28:39] *** Quits: HaMsTeRs (~Thunderbi@14-0-169-150.static.pccw-hkt.com) (Quit: HaMsTeRs)
[10:33:41] *** Joins: ethoxy (~caretaker@cx21.havox.ru)
[10:34:29] *** psyxopompos[m] is now known as Iago[m]
[10:35:42] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[10:37:40] *** Joins: aradesh (~aradesh@user/aradesh)
[10:40:26] *** Quits: rgrinberg (~textual@190.113.111.74) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:42:16] *** Quits: pucara (~i@181.92.71.111) (Quit: Lost terminal)
[10:43:53] *** Iago[m] is now known as psyxo[m]
[10:44:19] *** Joins: V-T60 (~v@91.203.24.166)
[10:45:35] *** Quits: V-T60 (~v@91.203.24.166) (Remote host closed the connection)
[10:49:09] *** Joins: earnestly (~earnest@user/earnestly)
[10:50:17] *** Quits: trisk (~trisk@2601:196:4700:1f14:8:20ff:fe3e:890e) (Quit: WeeChat 3.0.1)
[10:52:57] *** Quits: psyxo[m] (~mercvrivs@2001:470:69fc:105::2ee6) (Changing host)
[10:52:57] *** Joins: psyxo[m] (~mercvrivs@user/psyxopompos)
[10:54:32] *** Quits: zz1 (~zz@2001:8003:1612:d500:8b3:c0f2:eed8:ff3) (Quit: WeeChat 1.1.1)
[10:55:12] *** Quits: fossforus (~stan@99-173-128-32.lightspeed.rlghnc.sbcglobal.net) (Ping timeout: 265 seconds)
[10:57:28] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[11:05:27] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[11:06:24] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[11:08:28] *** Joins: lesihctej (jetchisel@user/jetchisel)
[11:11:22] *** Joins: larry87 (~quassel@98.40.245.193)
[11:11:28] *** Quits: alch (~alch@151.34.168.195) (Read error: Connection reset by peer)
[11:12:11] *** Quits: dmaroo (~dhruv@2409:4070:2b98:1861:a501:f732:2cc8:100) (Ping timeout: 245 seconds)
[11:12:30] *** Quits: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl) (Ping timeout: 260 seconds)
[11:13:37] *** Quits: LuckyRawApe (~sergiy@203.129.63.205) (Quit: WeeChat 3.3)
[11:15:58] *** Joins: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl)
[11:16:33] *** Joins: alch (~alch@151.34.129.85)
[11:20:56] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[11:22:44] *** Quits: lesihctej (jetchisel@user/jetchisel) (Ping timeout: 258 seconds)
[11:26:06] *** Joins: lesihctej (jetchisel@user/jetchisel)
[11:27:28] *** Quits: nitro_ (~nitro@c-73-165-183-88.hsd1.pa.comcast.net) (Ping timeout: 244 seconds)
[11:28:26] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b015:4631:ae99:77fc:b7fb) (Ping timeout: 245 seconds)
[11:31:26] *** Joins: slidercrank (~slidercra@user/slidercrank)
[11:31:37] *** Quits: earnestly (~earnest@user/earnestly) (Quit: WeeChat 3.3)
[11:32:17] *** Joins: mrig (~AdiIRC@user/mrig)
[11:35:42] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[11:36:01] *** Joins: node1 (~node1@user/node1)
[11:39:59] *** Quits: dansan (~daniel@75.81.148.51) (Ping timeout: 264 seconds)
[11:40:53] *** Joins: Lazenca (~lazenca@user/lazenca)
[11:50:43] *** Quits: chomwitt (~chomwitt@2a02:587:dc12:b600:12c3:7bff:fe6d:d374) (Ping timeout: 260 seconds)
[11:52:34] *** Joins: dansan (~daniel@75.81.148.51)
[12:00:56] *** Joins: Yaknoti5 (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[12:04:51] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:04:56] *** Joins: plastico (~plastico@neomutt/plastico)
[12:05:08] *** Joins: saribro (~swinnenb@user/swinnenb)
[12:05:15] <node1> is it possible to store integer type address at void *data ?
[12:05:33] <dave0> node1: yes with a cast
[12:06:08] <dave0> node1: but rather than use void*, you should use the pointer to the actual type of integer
[12:06:23] <node1> to cast  integer type into  void *  then to store?
[12:06:27] <dave0> node1: short *n = malloc(sizeof(short));
[12:06:47] <dave0> node1: cast from void* to integer type*
[12:07:01] <dave0> node1: void *ptr = something; *(int *)ptr = 69;
[12:07:09] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b015:f9e4:4e45:6db0:697d)
[12:07:25] <dave0> don't use void*, use the real integer type
[12:08:19] *** Joins: dmaroo (~dhruv@2409:4070:2b98:1861:a501:f732:2cc8:100)
[12:08:37] <dave0> the only time you should use void* is when the API absolutely requires it... and even then, once you have the void* you should convert it to the actual type as soon as possible
[12:09:05] *** Quits: swinnenb (~swinnenb@user/swinnenb) (Ping timeout: 260 seconds)
[12:09:14] <dave0> there's a couple of places in the standard library that requires void* ... qsort and bsearch are examples off the top of my head
[12:09:31] <node1> The problem is i have array let say A[] = {2, 4, 6};  And i'm trying to send the first address of A i.e A or &A to functions who's argument take  `const  void *data` I'm not sure which one to cast
[12:09:34] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::2612)
[12:10:27] <citrons> you can just pass A to the function
[12:10:32] <dave0> as long as your function is expecting ... yeah
[12:11:02] <dave0> node1: did you write the function?
[12:11:21] <node1> Which function?
[12:11:51] <dave0> node1: the function who's argument take `const void *data`
[12:12:38] <node1> No i did not.
[12:12:54] <dave0> ok
[12:13:11] <LiaoTao> node1, Directly passing A decays it to the pointer to the first element and casts it to const void* for you. Any pointer can be casted to and from void* as long as the types before and after match.
[12:13:58] <LiaoTao> In general, that is, and then you might want to do other stuff.
[12:14:53] <node1> One thing more here i would like to state that the function whos argument take `const  void *data`   it stores that data into user define data type whos variable is also  void *data
[12:15:49] <dave0> node1: that sounds like you are using some kind of data structure like a list or a tree
[12:16:27] <node1> typedef struct element
[12:16:28] <node1> {  void *data; struct element *next; }  listelement;
[12:16:35] <dave0> looks like a list
[12:16:40] <node1> Yes, a linkedlist
[12:17:47] <markand> utlist or sys/queue.h from libbsd can help
[12:18:18] <dave0> node1: with your linked list, it's using void* as a "generic" pointer to data, which is fine.
[12:18:24] <node1> So i would  likes to know the best way to give the data to function and reterive it to print out.
[12:19:15] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[12:20:06] <dave0> node1: when you create the data, you know it is for example an int. and you know that when you retrieve your data, it will be an int
[12:20:42] <node1> yes so?
[12:21:58] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Quit: the #end of the abyss)
[12:21:58] <dave0> node1: you might code something like     int *foo = malloc(sizeof(int)); *foo = 69; add_to_list(foo); ... something ... int *bar; bar = remove_from_list(); printf("the number is %d ", bar); free(bar);
[12:22:46] <node1> just hold let me share the code.
[12:22:55] <dave0> node1: add_to_list takes a void* as an argument, and remove_from_list returns a void* ... you don't need to do any casts or tricks
[12:23:08] *** Joins: brelod (~me@90.244.150.142)
[12:23:43] <dave0> oh i made a mistake it should be    printf("the number is %d ", *bar);
[12:25:00] *** Joins: nitro_ (~nitro@c-73-165-183-88.hsd1.pa.comcast.net)
[12:25:49] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[12:26:30] *** Quits: Tordek_ (tordek@triton.blinkenshell.org) (Ping timeout: 260 seconds)
[12:26:48] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[12:30:06] *** Quits: exilio1729[m] (~exilio172@2001:470:69fc:105::f573) (Quit: You have been kicked for being idle)
[12:31:19] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 260 seconds)
[12:32:41] *** Joins: Nspace (~Nspace@user/nspace)
[12:38:01] <dave0> node1: http://codepad.org/5vbEakrX
[12:38:35] <node1> thanks
[12:38:49] <node1> but here the problem is something different
[12:38:53] <node1> let me share you the code
[12:42:30] <node1> but here the problem is something different https://pastebin.com/raw/gQmAHQW8
[12:42:46] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[12:43:26] <nitro_> second like missing a space
[12:43:39] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Remote host closed the connection)
[12:44:38] <node1> nitro_ http://sprunge.us/w41MGO
[12:45:11] <nitro_> s/like/line/
[12:45:19] *** Quits: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au) (Ping timeout: 260 seconds)
[12:48:03] <dave0> node1: so list_destroy is crashing?
[12:49:37] *** Joins: chomwitt (~chomwitt@ppp-94-68-249-8.home.otenet.gr)
[12:51:19] *** Joins: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au)
[12:58:48] <node1> yes
[12:59:21] <node1> dave0 neither i can derefernce the head to get 2 value
[13:00:05] <dave0> node1: the problem is when you called   list_init()   you passed "free" as the destroy function (ie. that will deallocate any data you put in the list)
[13:00:37] <dave0> node1: but A was not created by malloc or calloc (which would be required for free)
[13:01:15] <node1> so what's the correct way to fix this code, in terms of link list
[13:01:37] <node1> kindly give us an idea 
[13:01:45] <node1> i would be thankful to you
[13:02:34] <dave0> node1: you could malloc the array and pass that to list_ins_next()
[13:03:28] <dave0> node1: you could change the destroy function (passed to list_init) so that it does nothing (as you have written, int A[] does not need to be freed)
[13:03:46] <node1> from the main program i should create a another block on heap for A[] data?
[13:04:01] <citrons> if you use an array initializer in a function, it is allocated automatically to the stack. it is freed automatically when the function returns. using free() on it is an error
[13:04:01] <dave0> node1: yes that would work
[13:04:32] <node1> but new_element needs to get free?
[13:05:22] <citrons> everything returned by malloc must eventually be freed. so yes
[13:05:27] <node1> `new_element = (ListElmt *)malloc(sizeof(ListElmt))) == NULL`  and `new_element->data = (void *)data;`
[13:07:15] <dave0> node1: http://codepad.org/3W3poEhT
[13:07:45] <pragma-> ugh
[13:08:02] <dave0> node1: i cut&pasted your linked list code, and replaced the main function, which seems to work
[13:08:53] <dave0> at least it printed what i expected it to print
[13:11:04] *** Joins: cart_man (~rynot@cpc100914-uddi26-2-0-cust18.20-3.cable.virginm.net)
[13:13:10] <dave0> destroy is bad
[13:13:35] *** Quits: geeknix (~pi@2001:e68:5432:1a6b:1b32:1143:c7cd:1d98) (Ping timeout: 264 seconds)
[13:13:56] <dave0> hang on i'll try to fix it
[13:14:10] <dave0> node1: don't use destroy, it's buggy
[13:16:01] <markand> the problem with that kind of generic list is that you usually need to allocate data twice: once for the node, once for the void *
[13:17:24] <nomagno> ... Can you actually cast data to a `void` type?
[13:17:47] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[13:18:04] <dave0> node1: http://codepad.org/UDMb9x8l    i think this is correct, and i added some error checking
[13:18:31] <node1> ok
[13:18:48] *** Joins: ham5urg (~ham5urg@p200300d167112900593f38d514f65026.dip0.t-ipconnect.de)
[13:18:58] <node1> dave0 thank you
[13:19:04] <dave0> no worries
[13:20:11] *** Joins: Nspace (~Nspace@user/nspace)
[13:20:33] <node1> :)
[13:21:21] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[13:24:54] <cart_man> Is there a way one can initialize an array of ints to all be 0 in one line?
[13:25:05] <cart_man> something like int x[10] = {0};
[13:25:13] <cart_man> soo all the ints in x will be 0 ?
[13:25:23] <dave0> cart_man: yep like that :-)
[13:26:41] <cart_man> dave0: Thanks but my ide tells me    int size_x = 10;  int tmp[size_x] = { 0 };   <- variable tmp might not be initialized
[13:27:45] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[13:28:06] *** Joins: geeknix (~pi@180.74.191.0)
[13:28:28] <dave0> cart_man: ah that is a variable length array.. hang on
[13:28:35] <LiaoTao> cart_man, By making the array size a variable you are creating a VLA
[13:28:43] <dave0> i'm not sure if you can have an initializer for a varirable length array
[13:29:18] <dave0> ,cc int n = 5; int a[n]; int b[n] = { 0 };
[13:29:19] <candide> dave0: error: variable-sized object may not be initialized
[13:29:25] <dave0> looks like no
[13:29:37] <dave0> cart_man: use a loop or memset
[13:29:48] <LiaoTao> Or don't use VLAs
[13:30:04] <dave0> ,cc int n = 5; int a[n]; memset(a, 0, sizeof(a)); printf("%d %d %d ", a[0], a[1], a[2]);
[13:30:07] <candide> dave0: 0 0 0
[13:31:19] <cart_man> ok thanks
[13:32:45] *** Joins: uskerine (32d3@91.191.78.188.dynamic.jazztel.es)
[13:32:46] *** Quits: Nspace (~Nspace@user/nspace) (Ping timeout: 260 seconds)
[13:32:57] <cart_man> dave0: Will the function sizeof() always give an accurate number of the size in memory? So I can always use it without fail or whats the putfalls
[13:33:00] <cart_man> pitfalls`
[13:33:03] <cart_man> I havent done C in a while
[13:33:04] *** Quits: csrf1 (~csrf@ip72-199-118-215.sd.sd.cox.net) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[13:33:08] <cart_man> sigh ... forgot most thing
[13:33:12] <cart_man> s
[13:33:28] <trenka> sizeof is not a function
[13:33:34] <uskerine> hi, if I do typedef struct { int a; double b; } mystruct;      shall I later declare a variable as   mystruct foo;     or as:      struct mystruct foo;
[13:33:34] <uskerine> ?
[13:33:49] *** Joins: csrf (~csrf@user/csrf)
[13:34:07] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[13:34:21] <dave0> cart_man: yup, sizeof is special cased for VLA's
[13:34:49] <pragma-> tHe fUnCtIoN sizeof()
[13:35:06] <LiaoTao> uskerine, mystruct foo
[13:35:06] <dave0> uskerine: both work... if you went to all the trouble of using a typedef, you may as well leave out "struct"
[13:35:33] <cart_man> pragma-:  :*(
[13:36:04] *** Joins: azed (~azed@197.20.158.122)
[13:37:14] *** Quits: puke (~puke@user/puke) (Read error: Connection reset by peer)
[13:38:22] <citrons> I love when people are needlessly hostile on the internet
[13:38:39] *** Joins: voltron (~voltrin_@ip5f599415.dynamic.kabel-deutschland.de)
[13:39:00] *** Quits: reset (~reset@user/reset) (Quit: reset)
[13:40:34] <citrons> if people have their questions answered, I have one of my own. this pertains to ncurses 
[13:40:52] <citrons> I want to make a format for ascii art
[13:41:25] *** Joins: reset (~reset@user/reset)
[13:42:09] <citrons> my internet is seemingly intermittently slow, so if I take some time to send a message, that's why
[13:42:47] <citrons> I have a 2D array of characters, each with a 1-byte foreground and background color
[13:44:11] *** Quits: Lazenca (~lazenca@user/lazenca) (Remote host closed the connection)
[13:44:34] *** Quits: HisShadow (~HisShadow@user/hisshadow) (Ping timeout: 258 seconds)
[13:45:35] <citrons> I want to show each character with ncurses, with the colors corresponding to one of the 256 ANSI terminal colors
[13:46:05] *** Quits: pony (~ed@smol/hors) (Quit: WeeChat 3.3)
[13:46:33] *** Joins: Klinda (~superleag@user/klinda)
[13:49:03] *** Quits: azed (~azed@197.20.158.122) (Quit: WeeChat 3.3)
[13:49:09] <citrons> but I can't actually figure out how to do this this well, or even at all. ncurses requires that one assigns each pair of colors to "color number", so what I've tried doing is having the color number be (bg << 8) | fg and then doing init_pair when drawing the colors every time. but it isn't changing the colors at all, and this seems kind of asinine 
[13:50:19] <dave0> citrons: https://github.com/cacalabs/libcaca
[13:50:20] <candide> Title of dave0's link: GitHub - cacalabs/libcaca: 💩 Colour ASCII Art Library
[13:50:45] *** Joins: shivesh (~shivesh@user/shivesh)
[13:52:20] <citrons> I would like to do it with ncurses 
[13:52:36] <dave0> it targets ncurses
[13:52:39] <dave0> cut&paste
[13:53:09] <citrons> well, if it can do it in ncurses, I can
[13:53:28] <pragma-> Why does a ASCII art library need ipv6 support?
[13:53:32] <citrons> and I think that it would be significantly overkill
[13:53:41] <citrons> ahahah exactly
[13:53:41] *** Joins: pony (~ed@smol/hors)
[13:55:40] *** Joins: no-n (~ed@smol/hors)
[13:56:07] *** Joins: strajder (~strajder@user/strajder)
[13:56:23] *** Joins: HisShadow (~HisShadow@user/hisshadow)
[13:56:29] <uskerine> dave0 actually seems that there is a warning if I try struct mystruct instead of mystruct
[13:56:53] *** Quits: pony (~ed@smol/hors) (Client Quit)
[13:56:56] <Maxdamantus> You're probably using C++.
[13:57:37] *** Quits: tomboy64 (~tomboy64@user/tomboy64) (Ping timeout: 252 seconds)
[13:57:59] <uskerine> no I am not
[13:58:07] <uskerine> or not intentionaly at least
[13:58:20] <dave0> just disable warnings
[13:58:55] <citrons> what is the warning
[13:59:07] *** Joins: tomboy64 (~tomboy64@user/tomboy64)
[13:59:38] <dave0> i remember when it just printed a big red ? when there was an error
[14:02:00] *** Joins: cartman (~i.am@191.32.92.1)
[14:02:48] *** Joins: Arthuria (~Arthuria@user/arthuria)
[14:03:01] <citrons> it appears that libcaca just uses 16 colors in ncurses? but that doesn't make any sense
[14:03:26] *** Joins: puke (~puke@user/puke)
[14:04:26] <citrons> I just want to make ncurses emit \x1b[38;5;%dm at the right times
[14:04:38] *** Joins: ham5urg_ (~ham5urg@p2e54d296.dip0.t-ipconnect.de)
[14:04:52] *** Quits: MrC (Ben@mrbenc.net) (Quit: Reboot, Updating ZNC, or Switching servers.)
[14:05:05] *** Joins: MrC (Ben@mrbenc.net)
[14:05:57] <citrons> I originally was going to do all of the terminal handling myself, but I realized I did not have the motivation to undertake that
[14:07:27] *** Quits: ham5urg (~ham5urg@p200300d167112900593f38d514f65026.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[14:07:41] *** Joins: random-nick (~random-ni@87.116.183.63)
[14:08:01] *** Quits: s1b1 (~s1b1@user/s1b1) (Ping timeout: 245 seconds)
[14:11:11] <fizzie> If you do `typedef struct { ... } mystruct`, the struct will not have a tag, so you can't use `struct mystruct` to refer to it.
[14:11:13] *** Joins: karakedi (~eAC53C340@user/karakedi)
[14:11:35] <fizzie> If you had done `typedef struct mystruct { ... } mystruct` (which people also do, sometimes), then you could have used either `struct mystruct` or plain `mystruct`.
[14:11:48] <dave0> fizzie: nice!
[14:11:52] <dave0> missed that
[14:12:36] <nomagno> citrons: I actually find handling the terminal in a POSIX-compliant way is very simple and elegant! Very little code
[14:12:58] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[14:13:17] <citrons> hmm
[14:13:30] <citrons> oh, it was mostly just
[14:13:39] *** Joins: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net)
[14:13:41] *** Joins: humky (~humky@user/humky)
[14:13:44] <citrons> interpreting stdin
[14:14:02] <citrons> that made me think "ugh, I want a library to do this"
[14:15:08] <citrons> outputting things, making colors happen, moving the cursor around, etc, is not too bad, but I don't really feel like making a parser for esoteric key sequences
[14:15:14] *** Quits: rundown (~eb0t@90.198.61.154) (Ping timeout: 258 seconds)
[14:15:18] <nomagno> citrons: fairly simple to do, as long as (one or two simple) non-POSIX interfaces are available to read one character from stdin, and hide the cursor
[14:15:59] *** Quits: Egeon (~kaliyuga@2601:601:200:5b30::5abd) (Ping timeout: 264 seconds)
[14:16:05] *** Joins: PSEP1 (~kaliyuga@c-76-22-110-235.hsd1.wa.comcast.net)
[14:16:49] <citrons> well, the thing is that ncurses automatically handles converting the sequences corresponding to things like arrow keys into keycodes and such
[14:16:58] <citrons> among other niceties 
[14:17:02] *** Joins: rundown (~eb0t@90.210.90.151)
[14:18:23] <citrons> hmmm
[14:19:39] <Maxdamantus> Note that the correct way to do that manually would be to actually read the right terminfo file based on the $TERM variable and figure out the sequences from that.
[14:19:51] *** Quits: uskerine (32d3@91.191.78.188.dynamic.jazztel.es) ()
[14:19:52] <Maxdamantus> (that's what ncurses does)
[14:20:26] <Maxdamantus> Since different terminals have different command sequences.
[14:22:03] *** Joins: fakenullie (~nullie@london.nullie.name)
[14:22:04] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Ping timeout: 265 seconds)
[14:22:54] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[14:23:02] *** Quits: soul-d (~uknown@user/soul-d) (Read error: Connection reset by peer)
[14:23:30] <fakenullie> I have a strange problem, I have a variable of pointer type and function which returns a pointer. In the function variable has correct value 0x5555555ec180, but when I return it from function, it gets truncated to 0x555ec180
[14:23:45] <citrons> if I was doing it myself, I wouldn't be doing it the correct way, haha
[14:24:21] <citrons> I'm already ignoring how the telnet protocol is supposed to work
[14:24:23] *** no-n is now known as pony
[14:24:43] <nomagno> Well fortunately my game just doesn't work work digital input, so I politely ask the used to hook their own driver to a file/FIFO first of all
[14:25:57] *** Joins: rlvdv (~rlv@193.191.187.4)
[14:27:10] *** rlvdv is now known as nanor
[14:27:24] <Maxdamantus> fakenullie: is the function declared before it's used?
[14:28:19] <citrons> hm wait, maybe my code actually does work
[14:28:29] <Maxdamantus> fakenullie: I'm guessing you're using the function without a forward declaration, thet defining it later, so in the use the return type wilr implicitly be `int`
[14:28:39] <citrons> well, not really
[14:29:16] *** Joins: soul-d (~uknown@user/soul-d)
[14:30:31] <fakenullie> Maxdamantus: ah, you're right, thank you very much
[14:31:35] *** Joins: s1b1 (~s1b1@user/s1b1)
[14:36:26] *** Quits: pony (~ed@smol/hors) (Quit: WeeChat 3.3)
[14:42:18] *** Quits: nanor (~rlv@193.191.187.4) (*.net *.split)
[14:42:18] *** Quits: humky (~humky@user/humky) (*.net *.split)
[14:42:18] *** Quits: random-nick (~random-ni@87.116.183.63) (*.net *.split)
[14:42:18] *** Quits: puke (~puke@user/puke) (*.net *.split)
[14:42:18] *** Quits: karakedi (~eAC53C340@user/karakedi) (*.net *.split)
[14:42:18] *** Quits: geeknix (~pi@180.74.191.0) (*.net *.split)
[14:42:18] *** Quits: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au) (*.net *.split)
[14:42:18] *** Quits: slidercrank (~slidercra@user/slidercrank) (*.net *.split)
[14:42:18] *** Quits: ethoxy (~caretaker@cx21.havox.ru) (*.net *.split)
[14:42:18] *** Quits: CaCode (~Cassius@user/cacode) (*.net *.split)
[14:42:18] *** Quits: b1101 (~b1101@pool-100-37-115-53.nycmny.fios.verizon.net) (*.net *.split)
[14:42:18] *** Quits: Tom^ (~Tom^@user/tom/x-0773808) (*.net *.split)
[14:42:18] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (*.net *.split)
[14:42:18] *** Quits: Cyp (~cyp@192038135092.mbb.telenor.dk) (*.net *.split)
[14:42:18] *** Quits: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt) (*.net *.split)
[14:42:18] *** Quits: kuku (~kuku@user/kuku) (*.net *.split)
[14:42:18] *** Quits: Viewday (~Viewday@user/viewday) (*.net *.split)
[14:42:18] *** Quits: Matt|home (~matt@adsl-74-233-58-219.mia.bellsouth.net) (*.net *.split)
[14:42:18] *** Quits: WanderingGlitch (~Wandering@li555-207.members.linode.com) (*.net *.split)
[14:42:18] *** Quits: Echoz (~chris@user/echoz) (*.net *.split)
[14:42:18] *** Quits: gcd (~gcd@104-9-69-236.lightspeed.nsvltn.sbcglobal.net) (*.net *.split)
[14:42:18] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (*.net *.split)
[14:42:18] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (*.net *.split)
[14:42:18] *** Quits: sm2n (~sm2n@user/sm2n) (*.net *.split)
[14:42:18] *** Quits: DarthGandalf (user@znc/developer/DarthGandalf) (*.net *.split)
[14:42:18] *** Quits: nitrix (~nitrix@user/nitrix) (*.net *.split)
[14:42:18] *** Quits: mdw (~root@159.65.86.163) (*.net *.split)
[14:42:18] *** Quits: mcinglis (~mcinglis@user/mcinglis) (*.net *.split)
[14:42:18] *** Quits: Xgc (~Xgc@user/xgc) (*.net *.split)
[14:42:18] *** Quits: steve__ (~steve@ool-182c2aa4.dyn.optonline.net) (*.net *.split)
[14:42:18] *** Quits: davidfetter (~davidfett@xvm-110-146.dc2.ghst.net) (*.net *.split)
[14:42:18] *** Quits: savy (~z@io.tl) (*.net *.split)
[14:42:18] *** Quits: avar (avar@vm.nix.is) (*.net *.split)
[14:42:19] *** Quits: segnior (segnior@user/segnior) (*.net *.split)
[14:42:19] *** Quits: Red (~Red@97.109-247-81.customer.lyse.net) (*.net *.split)
[14:42:19] *** Quits: sebag (~guest@91.245.82.2) (*.net *.split)
[14:42:19] *** Quits: jkl (~jkl@user/jkl) (*.net *.split)
[14:42:19] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (*.net *.split)
[14:42:19] *** Quits: LeoNerd (~leo@genoa.dictatorshipcake.co.uk) (*.net *.split)
[14:42:19] *** Quits: janemba (~janemba@94.204.254.193) (*.net *.split)
[14:42:19] *** Quits: ski (~ski@remote12.chalmers.se) (*.net *.split)
[14:42:19] *** Quits: munkis (~mendel_mu@ool-ae2cb218.dyn.optonline.net) (*.net *.split)
[14:42:19] *** Quits: moose (~moose@user/moose) (*.net *.split)
[14:42:19] *** Quits: eeerik8 (~eeerik8@95.179.149.48) (*.net *.split)
[14:42:19] *** Quits: Oddity (Oddity@user/oddity) (*.net *.split)
[14:42:19] *** Quits: nate (NBishop@o.apocaleaps.com) (*.net *.split)
[14:42:19] *** Quits: Thymo (~Thymo@NASSP/developer/Thymo) (*.net *.split)
[14:42:19] *** Quits: km2m- (~km2m@1.116.81.184) (*.net *.split)
[14:42:19] *** Quits: zacts (~zacts@user/zacts) (*.net *.split)
[14:42:19] *** Quits: PendulumSwinger (~PendulumS@user/pendulumswinger) (*.net *.split)
[14:42:19] *** Quits: kilobyte_ch (~kbch@77.109.171.167) (*.net *.split)
[14:42:19] *** Quits: orthoplex64 (~crm@70.120.0.94) (*.net *.split)
[14:42:19] *** Quits: sdk_ (~x@shell.codevoid.de) (*.net *.split)
[14:42:19] *** Quits: mtg (~mtg@209.250.241.226) (*.net *.split)
[14:42:19] *** Quits: foxtrot (~foxtrot@user/foxtrot) (*.net *.split)
[14:42:19] *** Quits: richardwhiuk (richardwhi@scarlet.richardwhiuk.com) (*.net *.split)
[14:43:20] *** Quits: nitro_ (~nitro@c-73-165-183-88.hsd1.pa.comcast.net) (Quit: Leaving)
[14:43:34] *** Joins: nitro_ (~nitro@c-73-165-183-88.hsd1.pa.comcast.net)
[14:43:48] *** Quits: nitro_ (~nitro@c-73-165-183-88.hsd1.pa.comcast.net) (Client Quit)
[14:44:04] *** Joins: nitro_ (~nitro@c-73-165-183-88.hsd1.pa.comcast.net)
[14:44:19] *** Quits: PSEP1 (~kaliyuga@c-76-22-110-235.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[14:44:20] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:44:33] *** Joins: Egeon (~kaliyuga@c-76-22-110-235.hsd1.wa.comcast.net)
[14:45:14] *** Quits: soul-d (~uknown@user/soul-d) (Read error: Connection reset by peer)
[14:45:27] *** Joins: nanor (~rlv@193.191.187.4)
[14:45:27] *** Joins: humky (~humky@user/humky)
[14:45:27] *** Joins: karakedi (~eAC53C340@user/karakedi)
[14:45:27] *** Joins: random-nick (~random-ni@87.116.183.63)
[14:45:27] *** Joins: puke (~puke@user/puke)
[14:45:27] *** Joins: geeknix (~pi@180.74.191.0)
[14:45:27] *** Joins: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au)
[14:45:27] *** Joins: slidercrank (~slidercra@user/slidercrank)
[14:45:27] *** Joins: ethoxy (~caretaker@cx21.havox.ru)
[14:45:27] *** Joins: CaCode (~Cassius@user/cacode)
[14:45:27] *** Joins: b1101 (~b1101@pool-100-37-115-53.nycmny.fios.verizon.net)
[14:45:27] *** Joins: Tom^ (~Tom^@user/tom/x-0773808)
[14:45:27] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:45:27] *** Joins: Cyp (~cyp@192038135092.mbb.telenor.dk)
[14:45:27] *** Joins: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[14:45:27] *** Joins: kuku (~kuku@user/kuku)
[14:45:27] *** Joins: Viewday (~Viewday@user/viewday)
[14:45:27] *** Joins: Matt|home (~matt@adsl-74-233-58-219.mia.bellsouth.net)
[14:45:27] *** Joins: WanderingGlitch (~Wandering@li555-207.members.linode.com)
[14:45:27] *** Joins: Echoz (~chris@user/echoz)
[14:45:27] *** Joins: gcd (~gcd@104-9-69-236.lightspeed.nsvltn.sbcglobal.net)
[14:45:27] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[14:45:27] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[14:45:27] *** Joins: segnior (segnior@user/segnior)
[14:45:27] *** Joins: sm2n (~sm2n@user/sm2n)
[14:45:27] *** Joins: DarthGandalf (user@znc/developer/DarthGandalf)
[14:45:27] *** Joins: mdw (~root@159.65.86.163)
[14:45:27] *** Joins: nitrix (~nitrix@user/nitrix)
[14:45:27] *** Joins: mcinglis (~mcinglis@user/mcinglis)
[14:45:27] *** Joins: Xgc (~Xgc@user/xgc)
[14:45:27] *** Joins: steve__ (~steve@ool-182c2aa4.dyn.optonline.net)
[14:45:27] *** Joins: avar (avar@vm.nix.is)
[14:45:27] *** Joins: savy (~z@io.tl)
[14:45:27] *** Joins: davidfetter (~davidfett@xvm-110-146.dc2.ghst.net)
[14:45:27] *** Joins: Red (~Red@97.109-247-81.customer.lyse.net)
[14:45:27] *** Joins: sebag (~guest@91.245.82.2)
[14:45:27] *** Joins: jkl (~jkl@user/jkl)
[14:45:27] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:45:27] *** Joins: LeoNerd (~leo@genoa.dictatorshipcake.co.uk)
[14:45:27] *** Joins: janemba (~janemba@94.204.254.193)
[14:45:27] *** Joins: ski (~ski@remote12.chalmers.se)
[14:45:27] *** Joins: munkis (~mendel_mu@ool-ae2cb218.dyn.optonline.net)
[14:45:27] *** Joins: moose (~moose@user/moose)
[14:45:27] *** Joins: eeerik8 (~eeerik8@95.179.149.48)
[14:45:27] *** Joins: Oddity (Oddity@user/oddity)
[14:45:27] *** Joins: nate (NBishop@o.apocaleaps.com)
[14:45:27] *** Joins: Thymo (~Thymo@NASSP/developer/Thymo)
[14:45:27] *** Joins: km2m- (~km2m@1.116.81.184)
[14:45:27] *** Joins: zacts (~zacts@user/zacts)
[14:45:27] *** Joins: PendulumSwinger (~PendulumS@user/pendulumswinger)
[14:45:27] *** Joins: kilobyte_ch (~kbch@77.109.171.167)
[14:45:27] *** Joins: orthoplex64 (~crm@70.120.0.94)
[14:45:27] *** Joins: sdk_ (~x@shell.codevoid.de)
[14:45:27] *** Joins: mtg (~mtg@209.250.241.226)
[14:45:27] *** Joins: foxtrot (~foxtrot@user/foxtrot)
[14:45:27] *** Joins: richardwhiuk (richardwhi@scarlet.richardwhiuk.com)
[14:46:12] *** Quits: malloy (~jimery@116.30.221.89) (Ping timeout: 250 seconds)
[14:47:04] *** Joins: soul-d (~uknown@user/soul-d)
[14:47:24] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Ping timeout: 244 seconds)
[14:48:25] *** Joins: malloy (~jimery@116.30.221.89)
[14:53:46] *** Joins: meator (~meator@user/meator)
[14:54:45] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 260 seconds)
[14:56:10] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b015:f9e4:4e45:6db0:697d) (Quit: Leaving)
[14:57:05] *** Joins: iomari891 (~iomari891@197.210.53.184)
[14:57:17] *** Quits: tejr (~tejr@user/tejr) (Quit: leaving)
[14:57:36] *** Joins: NEYi (~NEYi@109.251.216.38)
[15:01:11] *** lkor is now known as lionkor
[15:05:15] *** Quits: rahl (~rahl@102.114.92.54) (Ping timeout: 260 seconds)
[15:05:33] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[15:05:55] *** Quits: DrNick42 (~DrNick42@bastion.spikeyfishtech.uk) (Quit: ZNC 1.8.2 - https://znc.in)
[15:06:37] *** Joins: krux02 (~krux02@p200300e817076e001575326a031bb152.dip0.t-ipconnect.de)
[15:07:12] *** Joins: rahl (~rahl@102.114.108.176)
[15:08:01] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[15:08:01] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[15:08:01] *** Joins: wroathe (~wroathe@user/wroathe)
[15:08:27] *** Joins: thing (~thing@user/thing)
[15:12:00] *** Quits: alch (~alch@151.34.129.85) (Read error: Connection reset by peer)
[15:12:21] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 258 seconds)
[15:12:51] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[15:13:02] *** Joins: xcm_ (~xcm@user/xcm)
[15:13:46] *** Joins: p0g0_ (~p0g0@216.211.157.175)
[15:13:55] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[15:13:55] *** Joins: lllh (~llh@198.48.244.21)
[15:14:03] *** Joins: PSEP1 (~kaliyuga@2601:601:200:5b30::de00)
[15:14:17] *** Joins: TVH767 (~TVH7@containerhost01.de01-nbg01.dev.ti-more.net)
[15:14:17] *** Joins: shadowchaser2 (~Shadowcha@liox.eu)
[15:14:21] *** Joins: Svitkona2 (~Svitkona@157.245.38.135)
[15:14:28] *** Joins: Jck_true8 (~jcktrue@188.228.89.240)
[15:14:44] *** Joins: brettgilio7 (~brettgili@x-node.gq)
[15:14:58] *** Joins: phryk_ (~totallyno@user/phryk)
[15:15:11] *** Joins: Dreg- (~Dreg@fr33project.org)
[15:15:12] *** Joins: glenfe_ (sid231748@user/glenfe)
[15:15:19] *** Joins: Moonspell_ (moon@194.87.139.59)
[15:15:22] *** Joins: celphi_ (sid97751@user/celphi)
[15:15:22] *** Joins: phroa` (~phroa@user/phroa)
[15:15:23] *** Joins: TallonRain_ (sid214799@user/tallonrain)
[15:15:24] *** Joins: Artea- (~Lufia@artea.com.pt)
[15:15:26] *** Joins: DarkPlutonium (~DarkUrani@stdrand.com)
[15:15:27] *** Joins: Bodger1234__ (sid503511@id-503511.uxbridge.irccloud.com)
[15:15:29] *** Joins: sham1_ (~sham1@212-146-44-107.aboa.net)
[15:15:30] *** Joins: kman_ (~kman@45.77.144.136)
[15:15:31] *** Joins: Dijky_ (~Dijky@user/dijky)
[15:15:32] *** Joins: cebor_ (~cebor@user/cebor)
[15:15:33] *** Joins: Andrew_ (~andrew@user/andrewyu)
[15:15:33] *** Joins: coruja_ (~coruja@user/coruja)
[15:15:34] *** Joins: cursey_ (~cursey@user/cursey)
[15:15:37] *** Joins: Dotz0cat_ (~Dotz0cat@h194.118.90.75.dynamic.ip.windstream.net)
[15:15:37] *** Joins: pieguy128_ (~pieguy128@bras-base-mtrlpq5031w-grc-48-67-70-102-17.dsl.bell.ca)
[15:15:47] *** Joins: neightchan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[15:15:58] *** Joins: alch (~alch@151.68.132.31)
[15:16:20] *** Joins: BtbN_ (btbn@ffmpeg/developer/btbn)
[15:16:33] *** Joins: pinheadmz_ (~pinheadmz@hns-contributor.dev)
[15:16:55] *** Joins: kplant_ (~kplant@user/kplant)
[15:16:59] *** Joins: jsmolic_ (~quassel@gentoo/developer/jsmolic)
[15:17:01] *** Joins: slavfox_ (~slavfox@ipv4-93-158-232-111.net.internetunion.pl)
[15:17:11] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b015:2f9:7e85:752f:91e1)
[15:17:14] *** Joins: zaratustra_ (~zaratustr@user/zaratustra)
[15:17:25] *** Joins: majors (~majors@user/majors)
[15:17:27] *** Quits: iomari891 (~iomari891@197.210.53.184) (Ping timeout: 260 seconds)
[15:17:34] *** Joins: bparker_ (~nobody@user/bparker)
[15:17:37] *** Joins: pookie (~pookie@snf-137798.vm.okeanos.grnet.gr)
[15:18:03] *** Joins: cnsunyour (~sunyour@129.226.182.99)
[15:18:04] *** Joins: klys_ (~mdasoh@show.op8.us)
[15:18:05] *** Joins: dave69 (~davezero@069.d.003.ncl.iprimus.net.au)
[15:18:08] *** Joins: Alhazred_ (~Alhazred@s91904425.blix.com)
[15:18:09] *** Joins: averetzi_ (~mike@li913-121.members.linode.com)
[15:18:11] *** Joins: KevinX_ (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[15:18:13] *** Joins: HisShadow_ (~HisShadow@user/hisshadow)
[15:18:16] *** Joins: kernelc_ (~kornel@46.101.204.33)
[15:18:18] *** Joins: finstern1s (~X@23.226.237.192)
[15:18:19] *** Joins: eblip (~eb0t@90.210.90.151)
[15:18:34] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Killed (NickServ (GHOST command used by dave69)))
[15:18:38] *** dave69 is now known as dave0
[15:20:07] *** Joins: pi1 (~pi@192.142.100.50)
[15:20:55] *** Joins: YellowSu1 (~YellowSuB@user/yellowsub)
[15:20:55] *** Quits: YellowSuB (~YellowSuB@user/yellowsub) (Killed (zirconium.libera.chat (Nickname regained by services)))
[15:20:55] *** YellowSu1 is now known as YellowSuB
[15:21:08] *** Joins: juliopcrj (~juliopcrj@177.44.227.40)
[15:22:06] *** Joins: iomari891 (~iomari891@105.112.138.38)
[15:22:25] *** Joins: triv_ (ytgodenr46@morgulis.trivcraft.com)
[15:22:27] *** Quits: Egeon (~kaliyuga@c-76-22-110-235.hsd1.wa.comcast.net) (*.net *.split)
[15:22:27] *** Quits: rundown (~eb0t@90.210.90.151) (*.net *.split)
[15:22:27] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (*.net *.split)
[15:22:27] *** Quits: HisShadow (~HisShadow@user/hisshadow) (*.net *.split)
[15:22:27] *** Quits: strajder (~strajder@user/strajder) (*.net *.split)
[15:22:27] *** Quits: Klinda (~superleag@user/klinda) (*.net *.split)
[15:22:27] *** Quits: Yaknoti5 (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (*.net *.split)
[15:22:27] *** Quits: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl) (*.net *.split)
[15:22:27] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (*.net *.split)
[15:22:27] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (*.net *.split)
[15:22:27] *** Quits: p0g0__ (~p0g0@216.211.157.175) (*.net *.split)
[15:22:27] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (*.net *.split)
[15:22:27] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (*.net *.split)
[15:22:27] *** Quits: uso (~matthias@ows-148-253-67-208.eu-west-2.compute.outscale.com) (*.net *.split)
[15:22:27] *** Quits: cursey (~cursey@user/cursey) (*.net *.split)
[15:22:27] *** Quits: PublicWiFi (~PublicWiF@user/publicwifi) (*.net *.split)
[15:22:27] *** Quits: llh (~llh@user/llh) (*.net *.split)
[15:22:27] *** Quits: night_wulfe__ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (*.net *.split)
[15:22:27] *** Quits: frost (~frost@user/frost) (*.net *.split)
[15:22:27] *** Quits: davros (~davros@host86-185-61-183.range86-185.btcentralplus.com) (*.net *.split)
[15:22:27] *** Quits: johnjay (~pi@192.142.100.50) (*.net *.split)
[15:22:27] *** Quits: Ranhir (~Ranhir@157.97.53.139) (*.net *.split)
[15:22:27] *** Quits: Munnu (~timo@81-197-107-130.elisa-laajakaista.fi) (*.net *.split)
[15:22:27] *** Quits: Dotz0cat (~Dotz0cat@h194.118.90.75.dynamic.ip.windstream.net) (*.net *.split)
[15:22:27] *** Quits: alien_lappy (~alien@user/alien) (*.net *.split)
[15:22:27] *** Quits: Xeha (~Xeha@dynamic-82-220-88-142.ftth.solnet.ch) (*.net *.split)
[15:22:27] *** Quits: lm- (~lm-@vps-a26d080c.vps.ovh.net) (*.net *.split)
[15:22:27] *** Quits: Brewster (~Brewster@185.145.156.241) (*.net *.split)
[15:22:27] *** Quits: sham1 (~sham1@212-146-44-107.aboa.net) (*.net *.split)
[15:22:27] *** Quits: coruja (~coruja@user/coruja) (*.net *.split)
[15:22:27] *** Quits: Lyude (~lyudess@pool-96-230-249-157.bstnma.fios.verizon.net) (*.net *.split)
[15:22:27] *** Quits: natechan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (*.net *.split)
[15:22:27] *** Quits: ghenry (~ghenry@ghenry.plus.com) (*.net *.split)
[15:22:27] *** Quits: brettgilio (~brettgili@x-node.gq) (*.net *.split)
[15:22:27] *** Quits: somlis (~somlis@user/somlis) (*.net *.split)
[15:22:27] *** Quits: synthmeat (~synthmeat@user/synthmeat) (*.net *.split)
[15:22:27] *** Quits: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr) (*.net *.split)
[15:22:27] *** Quits: jsmolic (~quassel@gentoo/developer/jsmolic) (*.net *.split)
[15:22:27] *** Quits: kman (~kman@45.77.144.136) (*.net *.split)
[15:22:27] *** Quits: emias (~holger@home.zedat.fu-berlin.de) (*.net *.split)
[15:22:27] *** Quits: phryk (~totallyno@user/phryk) (*.net *.split)
[15:22:27] *** Quits: bparker (~nobody@user/bparker) (*.net *.split)
[15:22:27] *** Quits: kernelc (~kornel@46.101.204.33) (*.net *.split)
[15:22:27] *** Quits: Svitkona (~Svitkona@157.245.38.135) (*.net *.split)
[15:22:27] *** Quits: shadowchaser (~Shadowcha@liox.eu) (*.net *.split)
[15:22:27] *** Quits: APic (apic@apic.name) (*.net *.split)
[15:22:27] *** Quits: fluter (~fluter@user/fluter) (*.net *.split)
[15:22:27] *** Quits: AndrewYu (~andrew@user/andrewyu) (*.net *.split)
[15:22:27] *** Quits: TVH76 (~TVH7@containerhost01.de01-nbg01.dev.ti-more.net) (*.net *.split)
[15:22:27] *** Quits: DarkUranium (~DarkUrani@stdrand.com) (*.net *.split)
[15:22:27] *** Quits: klys (~mdasoh@show.op8.us) (*.net *.split)
[15:22:27] *** Quits: Moonspell (moon@194.87.139.59) (*.net *.split)
[15:22:27] *** Quits: majors_ (~majors@user/majors) (*.net *.split)
[15:22:27] *** Quits: Dijky (~Dijky@user/dijky) (*.net *.split)
[15:22:27] *** Quits: BtbN (btbn@ffmpeg/developer/btbn) (*.net *.split)
[15:22:27] *** Quits: alip (~alip@exherbo/developer/alip) (*.net *.split)
[15:22:27] *** Quits: phroa (~phroa@user/phroa) (*.net *.split)
[15:22:27] *** Quits: Artea (~Lufia@artea.com.pt) (*.net *.split)
[15:22:27] *** Quits: zaratustra (~zaratustr@user/zaratustra) (*.net *.split)
[15:22:27] *** Quits: Dreg (~Dreg@fr33project.org) (*.net *.split)
[15:22:27] *** Quits: xcm (~xcm@user/xcm) (*.net *.split)
[15:22:27] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-48-67-70-102-17.dsl.bell.ca) (*.net *.split)
[15:22:27] *** Quits: pinheadmz (~pinheadmz@hns-contributor.dev) (*.net *.split)
[15:22:27] *** Quits: Jck_true (~jcktrue@188.228.89.240) (*.net *.split)
[15:22:27] *** Quits: finsternis (~X@23.226.237.192) (*.net *.split)
[15:22:27] *** Quits: amorel (~amorel@mx.mompl.net) (*.net *.split)
[15:22:27] *** Quits: sunyour (~sunyour@129.226.182.99) (*.net *.split)
[15:22:27] *** Quits: glenfe (sid231748@user/glenfe) (*.net *.split)
[15:22:27] *** Quits: celphi (sid97751@user/celphi) (*.net *.split)
[15:22:27] *** Quits: Bodger1234_ (sid503511@uxbridge.irccloud.com) (*.net *.split)
[15:22:27] *** Quits: TallonRain (sid214799@user/tallonrain) (*.net *.split)
[15:22:27] *** Quits: kplant (~kplant@user/kplant) (*.net *.split)
[15:22:27] *** Quits: snappy (~snappy@user/snappy) (*.net *.split)
[15:22:27] *** Quits: triv (vynfgvdjv8@morgulis.trivcraft.com) (*.net *.split)
[15:22:27] *** Quits: cebor (~cebor@user/cebor) (*.net *.split)
[15:22:27] *** Quits: averetzi (~mike@user/averetzi) (*.net *.split)
[15:22:28] *** Dotz0cat_ is now known as Dotz0cat
[15:22:28] *** brettgilio7 is now known as brettgilio
[15:22:28] *** Moonspell_ is now known as Moonspell
[15:22:28] *** Bodger1234__ is now known as Bodger1234_
[15:22:28] *** TVH767 is now known as TVH76
[15:22:29] *** BtbN_ is now known as BtbN
[15:22:29] *** coruja_ is now known as coruja
[15:22:29] *** slavfox_ is now known as slavfox
[15:22:29] *** Svitkona2 is now known as Svitkona
[15:22:29] *** Jck_true8 is now known as Jck_true
[15:22:30] *** glenfe_ is now known as glenfe
[15:22:31] *** Joins: TheCoffeMaker_ (~TheCoffeM@125-121-245-190.fibertel.com.ar)
[15:22:32] *** TallonRain_ is now known as TallonRain
[15:22:33] *** celphi_ is now known as celphi
[15:22:43] *** Joins: Xeha (~Xeha@dynamic-82-220-88-142.ftth.solnet.ch)
[15:22:49] *** Joins: Crescendo (~Crescendo@user/crescendo)
[15:23:01] *** Joins: strajder (~strajder@user/strajder)
[15:23:18] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[15:23:25] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[15:23:26] *** Joins: Klinda (~superleag@user/klinda)
[15:28:20] *** Joins: snappy (~snappy@user/snappy)
[15:28:27] *** Joins: amorel (~amorel@mx.mompl.net)
[15:28:41] *** Joins: DrNick42 (~DrNick42@bastion.spikeyfishtech.uk)
[15:28:52] *** Joins: APic (apic@apic.name)
[15:29:04] *** Joins: davros (~davros@host86-185-61-183.range86-185.btcentralplus.com)
[15:29:04] *** Joins: synthmeat (~synthmeat@user/synthmeat)
[15:29:13] *** jsmolic_ is now known as jsmolic
[15:29:25] *** Joins: Ranhir (~Ranhir@157.97.53.139)
[15:29:32] *** Joins: uso (~matthias@ows-148-253-67-208.eu-west-2.compute.outscale.com)
[15:29:35] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[15:29:48] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 276 seconds)
[15:29:57] *** Joins: Munnu (~timo@81-197-107-130.elisa-laajakaista.fi)
[15:29:57] *** Joins: emias (~holger@home.zedat.fu-berlin.de)
[15:30:05] *** Joins: lm- (~lm-@vps-a26d080c.vps.ovh.net)
[15:30:30] *** Joins: Lyude (~lyudess@pool-96-230-249-157.bstnma.fios.verizon.net)
[15:30:46] *** Joins: PublicWiFi (~PublicWiF@user/publicwifi)
[15:30:57] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[15:32:03] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[15:32:08] *** DarkPlutonium is now known as DarkUranium
[15:32:42] *** Joins: de-facto (~de-facto@user/de-facto)
[15:33:41] *** Joins: constxo (~brad@192.75.101.164)
[15:34:53] *** Quits: katnis (uid15849@id-15849.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:35:14] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[15:35:32] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[15:35:52] *** Joins: de-facto (~de-facto@user/de-facto)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:04] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:37] <krux02> There is a bug on my system wher gcc --version says something about Apple clang, do you happen to know a workaround/fix for that?
[15:37:00] *** saribro is now known as swinnenb
[15:38:25] *** Quits: cursey_ (~cursey@user/cursey) (Quit: bye)
[15:38:49] *** Joins: cursey (~cursey@user/cursey)
[15:39:12] *** Joins: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[15:43:26] *** Quits: nanor (~rlv@193.191.187.4) (Ping timeout: 260 seconds)
[15:47:10] *** Quits: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au) (Ping timeout: 260 seconds)
[15:51:01] *** Joins: fluter (~fluter@user/fluter)
[15:52:55] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 260 seconds)
[15:57:26] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[15:57:27] *** Joins: nanor (~rlv@193.191.187.4)
[15:59:34] *** phryk_ is now known as phryk
[15:59:46] *** Joins: thysermip (~thysermip@201-68-88-41.dsl.telesp.net.br)
[16:00:04] *** Quits: nanor (~rlv@193.191.187.4) (Client Quit)
[16:00:53] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:01:32] *** Joins: wovixo (~wovixo@128.104.205.49)
[16:03:01] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 245 seconds)
[16:03:41] *** Quits: constxo (~brad@192.75.101.164) (Quit: WeeChat 2.8)
[16:06:17] *** Joins: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au)
[16:07:44] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[16:09:09] <shadowchaser2> krux02 https://brew.sh/
[16:09:10] <candide> Title of shadowchaser2's link: The Missing Package Manager for macOS (or Linux) — Homebrew
[16:09:40] <shadowchaser2> krux02 https://stackoverflow.com/a/42406090/7342859
[16:09:56] <omegatron> krux02 : traditionally, gcc is a link to clang on mac os x
[16:10:19] *** shadowchaser2 is now known as shadowchaser
[16:11:03] <omegatron> and an alternative to homebrew is macports ...
[16:11:27] <strajder> ... or simply use PC and GNU/Linux :)
[16:11:34] *** Quits: thysermip (~thysermip@201-68-88-41.dsl.telesp.net.br) (Quit: thysermip)
[16:12:00] <omegatron> I run 7 hackintosh systems .. mac hardware is not necessarily required  =)
[16:12:29] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[16:12:50] *** Joins: brad_mssw|mac (~bhouse@2601:344:4100:b490:c464:295e:d721:72b1)
[16:13:27] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:14:40] *** Quits: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Ping timeout: 260 seconds)
[16:14:44] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[16:16:18] *** Joins: bongobrown (~bongobrow@cpe-76-185-215-2.satx.res.rr.com)
[16:18:49] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[16:20:34] <markand> s|GNU/||
[16:20:57] <markand> krux02, there is no gcc on mac for a decade 
[16:21:28] <markand> clang has permissive licence and is by itself a cross compiler, better option for apple (and for everyone)
[16:22:26] <nomagno> Why is it a better option for everyone?
[16:23:36] <strajder> it is Apache License 2.0, which is compatible with GPL 3.0, but GPL 3.0+ is better
[16:24:10] <markand> cross compiler, framework to build new langages, permissive licenses, good diagnosis and sanitizers (yes GCC borrowed them, ten years later)
[16:24:36] <markand> basically compiling for another arch is matter of clang -target ... -sysroot /path/to/aarch64/
[16:27:07] *** Quits: bongobrown (~bongobrow@cpe-76-185-215-2.satx.res.rr.com) (Quit: Leaving)
[16:27:21] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[16:27:25] *** Joins: Brewster (~Brewster@185.145.156.241)
[16:28:05] <nomagno> markand, stradjer: GPL/Apache is not better than Apache/GPL. GNU vs BSD licensing is a debate as old as time itself. The answer is: which to use depends on everything and nothing, from whether you cut your nails yesterday to your political opinions
[16:29:27] *** Artea- is now known as Artea
[16:30:08] *** Joins: alip (~alip@exherbo/developer/alip)
[16:30:24] <strajder> nomagno: who said anything about BSD?
[16:30:49] <nomagno> strajder: Read, 'GNU-style vs BSD-style'
[16:31:23] <strajder> clang is licensed under Apache 2.0
[16:32:11] *** Joins: seninha (~seninha@user/seninha)
[16:35:50] <nomagno> https://en.wikipedia.org/wiki/BSD_licenses
[16:36:01] <nomagno> `BSD is both a license and a class of license (generally referred to as BSD-like)`
[16:37:21] <nomagno> The term 'BSD-style license' UNAMBIGUOUSLY maps to the modern two-clause BSD License, MIT License, Apache License, and even the Do What The Fuck You Want Public License. The term 'GNU-style license' is a bit more ambiguous but can be generally understood to refer to copyleft.
[16:39:00] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[16:39:23] <nomagno> BSD: Do whatever you want, but remember to preserve this notice. GNU: Hey, listen! Hey, listen! This license is a specter that will hunt you to your death to protect your users. Less newspeak terms: Permissive and Copyleft
[16:40:11] <strajder> https://www.gnu.org/licenses/bsd.html
[16:40:12] <candide> Title of strajder's link: BSD License Problem - GNU Project - Free Software Foundation
[16:40:28] <strajder> and also: https://www.gnu.org/philosophy/words-to-avoid.html#BSD-style
[16:40:29] <candide> Title of strajder's link: Words to Avoid (or Use with Care) Because They Are Loaded or Confusing - GNU Project - Free Software Foundation
[16:41:30] *** Joins: pucara (~i@181.92.71.111)
[16:42:03] *** Quits: pizdets (~pizdets@183.182.111.42) (Read error: Connection reset by peer)
[16:42:14] *** Joins: pizdets (~pizdets@183.182.111.42)
[16:42:35] *** Joins: Klinda (~superleag@user/klinda)
[16:42:56] *** Quits: fluter (~fluter@user/fluter) (Read error: Connection reset by peer)
[16:45:52] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[16:45:55] <nomagno> strajder: I definitely still thing 'BSD-style' is pretty darn unambiguous. Disagree with the GNU project anti-glossary there
[16:46:06] <omegatron> "wods to avoid" ...   *sigh*   if the recipient of some words is too uneducated, lazy or simply an idiot (at least in this matter), who needs to bend, if there is (still) interest on both sides to understand each other? the sender or the receiver? or both?
[16:46:46] *** Quits: Senicar (~Senicar@gateway/tor-sasl/senicar) (Remote host closed the connection)
[16:46:59] <strajder> it is calculated to seduce the uneducated
[16:47:18] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[16:47:32] *** Joins: Senicar (~Senicar@gateway/tor-sasl/senicar)
[16:47:40] *** Quits: Senicar (~Senicar@gateway/tor-sasl/senicar) (Client Quit)
[16:47:42] <omegatron> words exist and can have more than one meaning .. hence 'context' .. but if the side which has some knowledge needs to dumb down for some people, we have a serious problem .. the solution would be, to educate people .. but I admit, this approach has been given up in certain countries
[16:47:51] <strajder> btw, GPL 2.0 and GPL 3.0 are different enough, added + gives another layer
[16:47:55] <nomagno> No, I definitely think 'BSD-style license' is a very good way of talking about licenses with similarities to the BSD three/two-clause
[16:48:08] *** Joins: Senicar (~Senicar@gateway/tor-sasl/senicar)
[16:48:46] <strajder> it is also interesting that GPL 2.0 and Apache 2.0 are incompatible, while GPL 3.0 and Apache 2.0 are
[16:49:28] <nomagno> How is the Apache 2.0 license incompatible with the GPL 2.0? Is there a GNU page explaining this? Sounds interesting
[16:49:57] <nomagno> Also just to reiterate, there is no possible world where 'BSD-style licensing' is a term used to seduce the uneducated.
[16:50:07] <strajder> https://www.gnu.org/licenses/license-list.html#apache2
[16:50:08] <candide> Title of strajder's link: Various Licenses and Comments about Them - GNU Project - Free Software Foundation
[16:50:32] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[16:51:25] <Thedarkb-Desktop> The BSD-style thing is just Stallman pretending that GNU==FOSS and everything else is a poor imitation.
[16:53:00] <strajder> https://www.gnu.org/philosophy/floss-and-foss.html
[16:53:54] <nomagno> Are you a GNU glossary bot?
[16:54:17] <nomagno> No, "Free and Open Source Software" does not emphasize the 'Open Source' part more.
[16:54:23] <strajder> it does
[16:54:34] <deadk> i think this is getting pretty silly
[16:54:43] <nomagno> It is.
[16:58:13] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b015:2f9:7e85:752f:91e1) (Quit: Leaving)
[16:58:50] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[16:59:01] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Remote host closed the connection)
[17:00:42] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[17:01:20] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[17:02:05] <markand> well the permissive licence is not the only thing that makes clang a better choice as I've mentioned all points above
[17:02:08] <markand> it's one of them.
[17:03:09] <markand> zig and rust are based on llvm, thanks to its nature of being a framework/cross compiler by itself
[17:05:52] *** Joins: luizfrds (~Luiz@152.250.243.147)
[17:06:09] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[17:06:26] *** Joins: AmR (~AmREiSa@156.199.244.83)
[17:08:57] <varaindemian> how can I store the result so that  `return result == 0` will be true at some point?  Right now I have `result |=` on line 5 but I guess this is not what I really want... https://www.irccloud.com/pastebin/N7zrdJmE/
[17:09:54] *** Joins: mrig (~AdiIRC@user/mrig)
[17:10:30] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[17:11:03] *** Joins: j00n (~mario@user/j00n)
[17:11:08] *** sham1_ is now known as sham1
[17:16:27] *** Joins: pizdets_ (~pizdets@183.182.114.179)
[17:17:23] *** Quits: pizdets (~pizdets@183.182.111.42) (Ping timeout: 260 seconds)
[17:19:38] *** Joins: Inline (~Inline@2a02:908:1252:7a80:2de6:953c:45b8:6cf0)
[17:21:17] *** Joins: V-T60 (~v@91.203.24.166)
[17:26:30] <varaindemian> any idea?
[17:30:03] *** Andrew_ is now known as AndrewYu
[17:30:41] <Bou> is this the same problem you had earlier?
[17:31:34] <Bou> huh, no, it's strlen(enc_flag) now. What are you trying to do?
[17:37:43] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:84fb:5024:2605:bd40)
[17:37:54] *** Quits: V-T60 (~v@91.203.24.166) (Ping timeout: 268 seconds)
[17:38:42] <Bou> the only way for result to stay 0 is if each character of your password is equal to the `len ^ strlen(enc_flag)`.
[17:39:19] *** Joins: supajerm (~supajerm@gateway/vpn/pia/supajerm)
[17:41:07] <Bou> say strlen(enc_flag) is 34, and your password has length 6, then each character needs to have value 34^6 = 36. Which is the ASCII code for the symbol $, so $$$$$$ would work as a password
[17:41:39] *** Quits: meator (~meator@user/meator) (Ping timeout: 260 seconds)
[17:41:58] <omegatron> that's the intention with a malware/backdoor ..
[17:45:09] *** Joins: quartz (~quartz@user/quartz)
[17:45:23] <Bou> well we're in #c so we're all l33t h4x0rs here
[17:45:47] * omegatron keeps forgetting
[17:48:18] <varaindemian> omegatron: hmm now the result when I print it with the key you mentioned is like `result = 3636` instead of simply 0 or something like that
[17:48:50] <omegatron> wrong recipient ..
[17:49:04] <varaindemian> Bou: ^
[17:49:08] <varaindemian> omegatron: sorry
[17:49:11] <Bou> because strlen(enc_flag) probably isn't 34 but something else... but, with the result you supplied us we can now calculate strlen(enc_flag)
[17:50:05] <varaindemian> Bou: it is
[17:51:30] <Bou> ,cc printf("%c", 34^6);
[17:51:32] <candide> Bou: $
[17:51:53] <varaindemian> ah nvm, you were right!
[17:52:10] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[17:54:08] *** Quits: acerbic (~acerbic@cs-xdata-50-86-50-181.cspire.com) (Read error: Connection reset by peer)
[17:54:12] *** Joins: earnestly (~earnest@user/earnestly)
[17:55:58] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[17:56:25] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[17:58:53] *** Joins: tolot (~tolot@dynamic-002-244-107-235.2.244.pool.telefonica.de)
[17:59:11] *** Quits: dmaroo (~dhruv@2409:4070:2b98:1861:a501:f732:2cc8:100) (Ping timeout: 264 seconds)
[18:00:36] <varaindemian> Bou: why each character?
[18:00:41] *** Joins: fluter (~fluter@user/fluter)
[18:00:41] <varaindemian> can you tell me?
[18:01:05] <Bou> it walks through each character of passwd and XORs it with the same numbers
[18:01:36] <Bou> ,cc for (int len=0; len<15; ++len) { for (int i=len; i; i--) putchar(34^len); putchar(' '); } // all valid passwords
[18:01:39] <candide> Bou:  #    !!! &&&& ''''' $$$$$$ %%%%%%% ******** +++++++++ (((((((((( ))))))))))) ............ ///////////// ,,,,,,,,,,,,,,
[18:02:03] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[18:02:20] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[18:06:27] *** Joins: emanuele6 (~emanuele6@net-2-36-98-113.cust.vodafonedsl.it)
[18:06:28] *** Quits: emanuele6 (~emanuele6@net-2-36-98-113.cust.vodafonedsl.it) (Changing host)
[18:06:28] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[18:06:28] <Bou> `a |= b` means `a = a | b` and `a | b` will have a 1 at each bit that's 1 in either a or b
[18:06:36] *** Joins: wwilly (~wwilly@217.140.99.251)
[18:07:17] <Bou> so result starts out as 00000000 etc, but as soon as the right hand side has a 1 somewhere it will set that bit in result
[18:07:49] <fizzie> Hey, where did the double quotes go from candide's output?
[18:07:52] <fizzie> They should've been there between the #s and the !s.
[18:08:25] <Bou> oh I assumed those were whitespaces (ascii 32)
[18:08:48] <fizzie> Oh, xor 2, right.
[18:08:49] <Bou> 34^2 = 32
[18:08:55] *** Joins: clamiax (~clamiax@net-93-149-158-199.cust.vodafonedsl.it)
[18:08:58] <clamiax> hi
[18:10:09] <ioxzev1z> Bou, note that enc with XOR is a one-time pad assuming pad >= length of plaintext
[18:10:24] <varaindemian> Bou: `(passwd[i] ^ (int)len)` parentheses here are optional/redundant? 
[18:10:53] <Bou> (a^b)^c is the same as a^(b^c) so yes
[18:11:53] *** Joins: acerbic (~acerbic@cs-xdata-50-86-50-181.cspire.com)
[18:13:30] <fizzie> Well, also, the C ^ operator is left-associative, so even if the *operation* wasn't that well-behaving, a^b^c would still be the same as (a^b)^c.
[18:15:30] <varaindemian> good to know!
[18:15:37] <varaindemian> thank you!
[18:16:03] *** Joins: pulse (~pulse@user/pulse)
[18:17:16] <quartz> Hello. I'm trying to implement this interface here: https://bpa.st/HEIQ  (implementing a linked list). I wrote a function to pop the top node from a linked list ( line 58), but when I test it, it does not work. I can't figure out why: https://bpa.st/5BAQ
[18:19:23] <ioxzev1z> quartz, 67/69 are wrong order
[18:19:38] <ioxzev1z> If you free list->head on 67, how can you use on 69?
[18:19:49] <ioxzev1z> actually nvm
[18:19:52] <ioxzev1z> I read that wrong
[18:19:58] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:84fb:5024:2605:bd40) (Quit: Leaving)
[18:20:09] <ioxzev1z> 65 and 67 are wrong
[18:20:16] <ioxzev1z> you assign on 65, then free on 67
[18:20:48] <Bou> ioxzev1z: you can still assign a new value to that pointer?
[18:21:04] <ioxzev1z> Yeah I re-read, ignore me
[18:21:09] <Bou> free(a) frees the memory pointed to by a, doesn't change a itself
[18:21:47] *** Quits: oldlaptop (~quassel@45.63.78.126) (Remote host closed the connection)
[18:21:50] *** Quits: rndusr (~rndusr@user/rndusr) (Ping timeout: 244 seconds)
[18:22:27] <quartz> ioxzev1z: But if I flip 67 and 65, than how can I assign the data stored in list->head->data after I free it?
[18:22:28] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[18:22:50] <Bou> you take current->next  after freeing list->next, which is the same node
[18:22:50] <ioxzev1z> ^ said above to ignore me, not reading well as it seems
[18:23:00] *** Joins: oldlaptop (~quassel@45.63.78.126)
[18:23:01] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:387a:547d:b879:f1fe)
[18:23:01] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:387a:547d:b879:f1fe) (Changing host)
[18:23:01] *** Joins: skapata (~Skapata@user/skapata)
[18:24:52] <ioxzev1z> Also isEmptyList() should literally just be if(list->head == NULL)
[18:25:15] <quartz> True
[18:25:25] <quartz> But I didn't write the function, it was given to me.
[18:25:28] <ioxzev1z> Ok
[18:26:01] <Bou> I think you need something like https://bpa.st/UNJA
[18:26:09] *** Quits: averetzi_ (~mike@li913-121.members.linode.com) (Remote host closed the connection)
[18:28:00] <quartz> Bou: Ok thanks I'll try it.
[18:28:17] *** Quits: tolot (~tolot@dynamic-002-244-107-235.2.244.pool.telefonica.de) (Ping timeout: 264 seconds)
[18:28:38] *** Joins: dmaroo (~dhruv@2409:4070:2d02:f1a6:c52d:c594:e135:41e1)
[18:29:14] *** Joins: jio_ (~juliopcrj@177.44.227.40)
[18:30:06] <quartz> Damn it still won't work ;(
[18:30:10] <quartz> This makes no sense.
[18:30:31] *** Quits: juliopcrj (~juliopcrj@177.44.227.40) (Ping timeout: 245 seconds)
[18:31:20] <quartz> Maybe I need to malloc the data from oldNode?
[18:31:34] *** Parts: makersmasher (~makersmas@2600:6c40:5b00:158d::f8b) (Leaving)
[18:32:40] <Bou> to your List implementation "data" is just a pointer, it shouldn't care what is in it
[18:33:06] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[18:33:27] *** jio_ is now known as juliopcrj
[18:34:50] <quartz> Bou: What is the purpose of oldNode?
[18:35:53] <Bou> Well you replace your `list->head` with the next node. After that you still need to free the node, but it's no longer in your list. it's just a temporary
[18:37:13] *** Joins: plainoldcheese (~plainoldc@user/plainoldcheese)
[18:37:57] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[18:39:24] *** Joins: Akuli (~Akuli@82-203-163-146.bb.dnainternet.fi)
[18:39:59] *** Quits: plainoldcheese (~plainoldc@user/plainoldcheese) (Client Quit)
[18:40:18] *** Joins: plainoldcheese (~plainoldc@user/plainoldcheese)
[18:40:18] <quartz> Bou: It still does not work :( This SHOULd work.
[18:40:23] <quartz> It's so frustrating.
[18:40:43] *** Joins: tolot (~tolot@dynamic-093-135-227-117.93.135.pool.telefonica.de)
[18:42:18] <Bou> what exactly "doesn't work"?
[18:44:08] <quartz> Bou: This tester.c file should print the results of the function 'popFront' at line 65 https://bpa.st/5O2Q
[18:44:28] <quartz> But it prints nothing, everything before line 65 works fine
[18:44:51] <quartz> I've been staring at this for like 2 hours and change things, look up code online, change it again, and I can't get this damn function to work
[18:46:02] *** Quits: ham5urg_ (~ham5urg@p2e54d296.dip0.t-ipconnect.de) (Quit: Leaving)
[18:46:09] <Bou> eh, you did remove the "return 0" right?
[18:46:32] <Bou> the `printf("OK\n"); return 0;` stops your program from even reaching that while loop
[18:47:47] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 264 seconds)
[18:48:13] <quartz> LOL
[18:48:44] <ioxzev1z> ( ._.)
[18:49:32] <quartz> Wow that was embarrassing.
[18:50:57] *** Joins: derjanni (~textual@p4ff80cd9.dip0.t-ipconnect.de)
[18:51:17] <Bou> take a break, get some fresh air
[18:51:33] <quartz> Bou: Yeah no kidding. Thanks for your help.
[18:52:26] *** pi1 is now known as johnjay
[18:53:13] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[18:53:55] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Remote host closed the connection)
[18:54:04] <Bou> yesterday I had an `if (bla) { code } { more code }` without the else, broke my code in a very subtle way, not a word from GCC
[18:54:31] *** Quits: pucara (~i@181.92.71.111) (Quit: Lost terminal)
[18:56:59] <floatcomplex> -Wmisleading-indentation maybe?
[18:57:14] <floatcomplex> bit of a stretch
[18:57:53] *** Joins: fossforus (~stan@99-173-128-32.lightspeed.rlghnc.sbcglobal.net)
[18:58:35] *** Quits: Inline (~Inline@2a02:908:1252:7a80:2de6:953c:45b8:6cf0) (Ping timeout: 264 seconds)
[18:59:22] <ioxzev1z> Bou, the latter is valid, as you can have unnamed blocks
[19:00:08] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[19:00:25] <Bou> sure, even `if (a); {}` is valid (GCC does warn for that one btw)
[19:03:47] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 260 seconds)
[19:04:10] *** Quits: lionkor (~lionkor@200116b80fa57c007285c2fffea63d72.dip.versatel-1u1.de) (Remote host closed the connection)
[19:04:33] *** Joins: lionkor (~lionkor@200116b80fa57c00dc443c0104f029d0.dip.versatel-1u1.de)
[19:05:01] <Bou> I feel like `if (cond) {} {}` should be treated like implicit fallthrough in a switch
[19:05:13] <Bou> ,cc switch(0) { case 0: puts("ha"); case 1: puts("ho"); } // with a warning like this
[19:05:15] <candide> Bou: [warning: this statement may fall through [-Wimplicit-fallthrough=]  note: here] ha ho
[19:07:03] *** Quits: juliopcrj (~juliopcrj@177.44.227.40) (Ping timeout: 260 seconds)
[19:08:26] *** Joins: Guest91 (~Guest91@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[19:08:38] *** Joins: magla (~gelignite@55d4dc2e.access.ecotel.net)
[19:09:48] <Bou> you can get rid of that warning with a /*fall through*/ comment, likewise there should be a `if () {} /*no else*/ {}` if that's really what you want
[19:10:51] <omegatron> Bou: in the matter of  "realistic goals" see  https://www.oglaf.com/realisticgoals/
[19:11:53] *** Joins: kuber (~kuber@97-126-3-32.tukw.qwest.net)
[19:11:57] *** Quits: alch (~alch@151.68.132.31) (Read error: Connection reset by peer)
[19:12:12] <floatcomplex> i can't say that if (condition) { code } { more code } is an error i've made terribly often or maybe ever?
[19:12:22] <floatcomplex> we all do different dumb shit i guess
[19:13:19] <floatcomplex> yesterday i wrote void func(int16_t input[stack 2048][4])
[19:13:26] <floatcomplex> fingers just decided that should be the word stack
[19:15:17] <nomagno> Does the C standard define a way to represent newlines in macro names?
[19:15:36] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 265 seconds)
[19:15:37] <floatcomplex> indeed it does
[19:15:50] <floatcomplex> wait in names?
[19:16:19] *** Joins: alch (~alch@151.68.217.152)
[19:16:35] <omegatron> doesn't sound like a good idea
[19:16:39] <nomagno> Yeah, as in, say "replace every END keyword followed by a newline by ';' "
[19:16:53] <Bou> omegatron: a lot of things in C don't sound like a good idea :)
[19:17:02] <floatcomplex> you would do that with a regex not a macro
[19:17:07] <omegatron> depends on which version of C
[19:17:36] <nomagno> Which version of C am I looking at to do something like this, then?
[19:18:05] <floatcomplex> nomagno: why are you trying to do this at preprocessor time
[19:18:14] <omegatron> nomagno: sorry, I answered to Bou
[19:18:55] <nomagno> floatcomplex: Because it sounds badass to have a C-standard defined way to turn C into pseudo-python.
[19:19:07] <floatcomplex> nomagno: just do it with a regex in your makefile or something idk
[19:19:10] <floatcomplex> that sounds weird
[19:19:20] <omegatron> I ignore anything after (ANSI) C90 (because it didn't get better, but more convoluted) 
[19:19:31] <floatcomplex> omegatron: sorry but you're full of shit
[19:19:40] <omegatron> yeah right
[19:19:49] <floatcomplex> it's too early in the morning for me to be polite about this
[19:19:50] <nomagno> But C99 (and every version after) is actually nice (:
[19:19:56] <omegatron> my programs seem to be work by some miracle, huh?
[19:20:09] *** Joins: [SyntaxError] (~user@user/syntaxerror/x-9308191)
[19:20:11] <omegatron> s/be//
[19:20:19] <floatcomplex> which is orthogonal to the claim you made
[19:20:38] <omegatron> you said so, therefore it must be right, huh?
[19:20:43] <nomagno> omegatron: Your programs work because you do the right things, just at the wrong level of rigidness
[19:20:47] <nomagno> :P
[19:20:59] <omegatron> much closer to the truth
[19:22:01] <floatcomplex> there is no profound truth enforced by -Wdeclaration-after-statement. it does not help you write code that is closer to what the compiler produces for the machine to run
[19:22:57] <floatcomplex> it's just a flex. it doesn't have any impact on whether your code is right or wrong, it just makes it more frustrating to debug when it is wrong
[19:23:20] <omegatron> interesting .. is that to related to something I said? because if, then you are talking about a different matter than I do
[19:23:59] <floatcomplex> -Wdeclaration-after-statement is how you enforce mostly c89-style code flow in c99 in later so yes
[19:24:09] <floatcomplex> s/in later/and later/
[19:25:04] <omegatron> where did I talk about code flow?  my statement  "doesn't sound like a good idea"  related to NEWLINE characters in macro designations
[19:25:17] *** Joins: mahmutov (~mahmutov@37.155.35.85)
[19:25:19] *** Joins: bongobrown (~bongobrow@cpe-76-185-215-2.satx.res.rr.com)
[19:25:27] <floatcomplex> <omegatron> I ignore anything after (ANSI) C90 (because it didn't get better, but more convoluted) 
[19:25:54] <nomagno> There is no such thing as "ANSI C90"
[19:26:11] <floatcomplex> enforcing pre-c99 compilation in 2021 is just wanking
[19:26:21] <floatcomplex> wanking is fine just don't do it all over production code
[19:27:23] *** Joins: pehaef (~pehaef@user/pehaef)
[19:27:23] <omegatron> yeah, that was just my funny 2 cents-continuation of my "depends on which version of C", which was an anwer of Bou's "a lot of things in C don't sound like a good idea :)"
[19:27:53] <omegatron> but if you are bound to be in a foul mood because someone stated his own personal opinion about something, well ..
[19:28:22] * floatcomplex angrily sips coffee in hopes of a better morning
[19:28:50] <omegatron> and I know, that there is no "ANSI C90", that's why I wrote ANSI in parenthesis to put those two acronyms in equivalence
[19:28:59] <omegatron> really, that's a wrong place to be picky
[19:29:52] *** Quits: bongobrown (~bongobrow@cpe-76-185-215-2.satx.res.rr.com) (Remote host closed the connection)
[19:30:12] *** Quits: voltron (~voltrin_@ip5f599415.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[19:30:58] *** Quits: cartman (~i.am@191.32.92.1) (Quit: I come down here for a fat woman and that's what I'm havin.)
[19:32:44] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[19:33:46] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[19:34:30] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[19:35:28] *** Joins: tannhauser (~textual@2620:10d:c091:480::1:2ebf)
[19:40:34] <nomagno> You know, you really CAN get some funky syntax going with the preprocessor: https://termbin.com/0wcp8
[19:40:36] *** Joins: Crescendo (~Crescendo@user/crescendo)
[19:41:43] *** Quits: pehaef (~pehaef@user/pehaef) (Quit: leaving)
[19:41:57] *** Joins: pehaef (~pehaef@user/pehaef)
[19:42:13] *** Quits: pehaef (~pehaef@user/pehaef) (Client Quit)
[19:43:25] *** Joins: pehaef (~pehaef@user/pehaef)
[19:43:55] *** Joins: meator (~meator@user/meator)
[19:46:34] *** Joins: machinehum (~machinehu@2604:3d08:937e:d600::ffd)
[19:46:48] <machinehum> What's going on here: https://pastebin.com/raw/WBCVdUEg
[19:47:13] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[19:48:32] *** Quits: Guest91 (~Guest91@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Quit: Client closed)
[19:50:30] <omegatron> machinehum: what exactly irritates you?
[19:50:46] <Bou> you're passing 12*12 to printf as an integer, it doesn't get converted to float
[19:51:45] <nomagno> Then, if it doesn't get converted to a float, what happens to reach the result of 0?
[19:53:03] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[19:53:30] <Bou> short answer is "undefined behavior"
[19:53:43] *** Quits: derjanni (~textual@p4ff80cd9.dip0.t-ipconnect.de) (Quit: Textual IRC Client: www.textualapp.com)
[19:53:44] *** Joins: Macuser (~Macuser@216.30.159.201)
[19:53:45] <machinehum> But it works the second time
[19:54:09] <machinehum> I'm using the word "works" very loosely here
[19:54:10] <Bou> because of the 3rd call which probably had the right value in the right place, idk
[19:54:20] <machinehum> printf("Square of 12 is %f\n", Square(12));   // Square of 12 is 144.000000
[19:54:26] <Bou> try square(15) in the third call, I'm guessing you get 225 again
[19:55:24] *** Joins: semeion (~semeion@user/semeion)
[19:55:38] <machinehum> Smart
[19:56:15] <machinehum> That macro isn't doing anything so it's printing the leftover junk in the buffer?
[19:56:45] <omegatron> do you know what a macro is and how it's "processed" ?
[19:56:51] <Bou> hm I actually get 0 when I do 15.0 in the third printf... point is, pass the right type or anything could happen
[19:57:33] <Bou> this isn't about the macro, it's the variadic function being passed the wrong type
[19:57:37] <machinehum> omegatron: preprocessor, basically copy/paste?
[19:58:32] <omegatron> more find/replace
[19:59:10] <machinehum> I think I'm more confused about what printf is doing I guess
[19:59:15] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[19:59:25] <omegatron> if you want to see how your source code looks like, after the preprocessor is done, compile your file like    gcc -E -o source.txt source.c
[20:00:03] <omegatron> you can read its documentation with   man 3 printf   
[20:00:25] *** Quits: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net) (Ping timeout: 260 seconds)
[20:00:35] <Bou> preprocessor won't help you, google "C variadic functions"
[20:01:05] <omegatron> taking a variable number of parameters, with a format text as first, it uses any following parameters according to the format specifiers in the format text
[20:01:21] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 245 seconds)
[20:01:37] <omegatron> therefore, if you have a "%f", but supply a value of type 'int', you won't get, what you might expect
[20:02:39] <omegatron> there is no auto-conversion of types involved
[20:02:52] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[20:05:29] *** Joins: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net)
[20:05:44] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 246 seconds)
[20:06:44] *** Joins: ckdCreations (~ckdCreati@147.55.130.35)
[20:07:35] <fizzie> You will get a warning from a helpful compiler, though. ;)
[20:07:44] <fizzie> (As long as the format string is a string literal, anyway.)
[20:09:00] <sham1> It's nice and helpful which is nice. Of course it can be gotten to the user's own printf-like function with the format-attribute at least in GCC
[20:09:19] <sham1> Other similar attributes also help with variadic functions, like the sentinel, which is nice
[20:10:41] <fizzie> On an entirely unrelated note, "stdio.h" instead of <stdio.h> is a weird thing to see.
[20:10:44] *** Joins: vicfred (~vicfred@user/vicfred)
[20:10:48] <nomagno> Behold, MY MASTERPIECE
[20:10:50] <nomagno> Assembly-C
[20:10:51] <nomagno> https://termbin.com/4uxa
[20:11:27] <floatcomplex> not enough goto
[20:11:35] <omegatron> not similar enough to BASIC
[20:12:01] <sham1> That's not FORTRAN, not impressed
[20:12:22] <floatcomplex> malloc is six letters, that's one too many
[20:12:33] <floatcomplex> yourstr is right out
[20:12:34] <nomagno> Woah woah, we got the entire IGN review board on this IRC channel!
[20:13:10] <floatcomplex> sprintf DO lol
[20:13:25] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:84fb:5024:2605:bd40)
[20:14:48] <nomagno> I'm pretty sure if you sneak these defs and a few more into your project's header, quite a few bosses will just leave their positions open!
[20:15:51] <floatcomplex> pretty sure there's an anecdote here involving faust and/or tentacles
[20:16:50] <sham1> Tentacles spark curiosity clearly
[20:17:36] <quartz> I'm trying to write this function but I keep getting "segmentation fault core dumped" and I"m not sure why. https://bpa.st/LYGQ
[20:17:58] <floatcomplex> quartz: recompile with -g -fsanitize=address,undefined and rerun
[20:18:06] <quartz> The function searches a linked list for prevNode, and if it's found it inserts a new node into the linked list AFTER prevNOde
[20:18:10] <quartz> floatcomplex: Ok
[20:18:27] <fizzie> quartz: Are you quite sure you want to run the rest of the function after `addFront` in the prevNode == NULL case? 
[20:18:50] <Thedarkb-Desktop> I wish there was a way to ignore stuff with Asan, mainly because there's a double free in libtcl.
[20:18:52] <fizzie> As it stands, it'll call addFront(...), and then do everything else the function does as well.
[20:19:17] <fizzie> "To suppress errors in external libraries, set the ASAN_OPTIONS environment variable to point to a suppression file."
[20:19:34] <quartz> Oh
[20:19:48] <floatcomplex> Thedarkb-Desktop: if there's a double free your entire program is undefined holy shit
[20:20:16] <Thedarkb-Desktop> It's in a third party system library though, which is beyond my control.
[20:20:51] <floatcomplex> it is not beyond your control, and it's not worth wasting a lot of effort trying to debug your own code without at least having bodged a fix for your local copy of libtcl
[20:20:58] <quartz> fizzie: Yeah that makes sense, I should have return addFront
[20:21:10] <fizzie> quartz: Also, there's an even more obviously wrong thing in that code: `struct Node *newNode = NULL; newNode->data = data;`.
[20:21:29] <Thedarkb-Desktop> Eh, it never causes any issues, I wouldn't have known it was there were it not for Asan.
[20:21:38] <floatcomplex> can we let quartz see these things for themselves with asan
[20:21:53] <floatcomplex> because lack of debugging with asan is one of the major sources of difficulty here
[20:22:42] <quartz> fizzie: But I can't leave newNode uninitilized.
[20:22:47] <fizzie> For that specific issue, I'd just end the sentence at "lack of debugging", because you don't need a *memory* debugger to find what's the issue there.
[20:23:03] <floatcomplex> fizzie: to debug a segfault? it's the takes-five-seconds way to do it
[20:23:13] <fizzie> quartz: Saying `struct Node *newNode = NULL; newNode->data = data;` is like saying `int *p = NULL; *p = 123;`.
[20:23:18] <floatcomplex> if you make it as far as seeing the segfault, that is
[20:23:21] *** Joins: rgrinberg (~textual@190.113.111.74)
[20:24:45] *** Joins: effexzi (uid474242@id-474242.ilkley.irccloud.com)
[20:24:55] <fizzie> Writing a comment that says "Create new node" doesn't actually allocate anything.
[20:25:00] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.3)
[20:25:12] <floatcomplex> it allocates green text
[20:25:37] <floatcomplex> gotta have the right ratio of green text to other colours or the code is not likely to work
[20:26:17] <Bou> if only students would start with C and learn their PHP / Javascript later
[20:27:06] <quartz> But I can't leave struct Node *newNode uninitilized.
[20:27:06] <Bou> it's not normal for memory to appear / disappear magically when you (no longer) need it
[20:27:14] *** Joins: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com)
[20:27:41] <floatcomplex> yes, but also if quart'z professor would teach or select for debugging skills instead of spending weeks on the operator precedence of dereference-and-increment patterns from the 1980s that would be great
[20:27:42] <Bou> quartz: use malloc to ask for memory for your new node
[20:28:37] <quartz> Ohhh yeah
[20:28:38] <floatcomplex> if quartz learns how to use git before learning how to use asan or gdb i'm throwing my computer in the sea
[20:28:41] <quartz> How could I forget malloc
[20:28:56] <quartz> floatcomplex: Unfortunately that's exactly what happened 
[20:29:03] <quartz> I use git all the time, it's amazing
[20:29:03] <floatcomplex> ffs be right back
[20:29:10] <quartz> floatcomplex: Spare your computer please!
[20:29:33] *** Quits: [SyntaxError] (~user@user/syntaxerror/x-9308191) (Quit: ERC (IRC client for Emacs 26.3))
[20:30:28] <nomagno> Is there anything else I can add to my "Safe GCC" args "-pedantic -Werror -std=c99 -fsanitize=address,leak,undefined" ?
[20:30:47] <floatcomplex> nomagno: leak sanitizer is a subset of address sanitizer, you don't need to specify it independently
[20:31:10] <floatcomplex> nomagno: you want -Wall -Wextra -Wshadow -fsanitize=address,undefined
[20:31:11] <nomagno> aaah
[20:31:23] <floatcomplex> nomagno: never ever ever send anyone else a Makefile that you have left -Werror in
[20:31:38] <nomagno> -Wall is definitely excessive
[20:31:46] <floatcomplex> -Wall -Wextra is reasonable
[20:31:59] <nomagno> Is it?
[20:32:19] <floatcomplex> also, you should recognize that -pedantic -std=c99 merely enforces adherence to a particular version of the standard, not any measure of correctness of the code
[20:33:10] <floatcomplex> code that passes -pedantic is not more correct than code that does not, and that option can in some cases force the resulting compiled code to be suboptimal even when it doesn't motivate a code change
[20:33:21] <floatcomplex> because it can change the meaning of underlying stuff in libc
[20:33:23] *** Quits: mahmutov (~mahmutov@37.155.35.85) (Ping timeout: 264 seconds)
[20:33:45] *** Joins: V-T60 (~v@host-86-111-90-227.566f.la.net.ua)
[20:34:09] <floatcomplex> if you want to check your code for compliance with -pedantic then fine but don't leave it in there for release builds
[20:34:49] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[20:35:04] <Klinda>  strncpy(buffer, foo, 10 * sizeof(char)); or strncpy(buffer, foo, 10); ?  
[20:35:50] <nomagno> I have always been very vocal about how I think GNU extensions in... well any tool, are causing a vendor lock-in for many projects including the Linux kernel.
[20:35:51] *** Joins: Famine- (~Famine@user/famine)
[20:36:31] *** Joins: mahmutov (~mahmutov@37.155.31.39)
[20:36:39] <floatcomplex> nomagno: ok so write your code using portable C. but don't compile it with -pedantic for release builds
[20:36:55] <floatcomplex> your libc cares that it is running on linux even if your application code does not
[20:37:04] <floatcomplex> don't tie its shoelaces together
[20:37:56] <nomagno> floatcomplex: I phrased my question very poorly, with many assumptions. I did not mean to say I compile release builds like that. Thanks for the 'Wall' and 'Wextra' recommendation tho!
[20:38:08] <floatcomplex> -Wshadow too don't forget
[20:38:44] <nomagno> What does -Wshadow do?
[20:38:45] <fizzie> -Wisdom, the flag that enables warnings when it detects you're using a Document Object Model paradigm to manipulate an XML document.
[20:39:30] *** Quits: Famine_ (~Famine@user/famine) (Ping timeout: 260 seconds)
[20:39:53] <floatcomplex> nomagno: -Wshadow warns you if you have multiple variables with the same name in scope, which the C standard permits for some truly strange reason but which is a logic error almost every time
[20:40:01] <nomagno> fizzie: GCC definitely lacks Wisdom then
[20:40:32] <floatcomplex> nomagno: like if you have an outer loop over i, and you try to do an inner loop over i, that's valid C, but it's a mistake
[20:40:36] <floatcomplex> and -Wshadow will catch it
[20:40:57] <Thedarkb-Desktop> I would've assumed the inner loop will use the i declared in the inner loop?
[20:41:03] <nomagno> That specific situation has actually caused me SO MUCH frustration!
[20:41:03] <Thedarkb-Desktop> Or am I wrong, I've never tried this.
[20:41:08] <floatcomplex> Thedarkb-Desktop: ha ha yeah maybe!
[20:41:23] <Thedarkb-Desktop> I knew it was possible, but jesus christ why would you.
[20:41:54] <Bou> Klinda: sizeof(char) is 1 so jsut 10 will do
[20:42:15] <nomagno> Sometimes, your fingers start typing that thing they have typed so many times, without your consent, without asking you if you need that exact thing
[20:42:58] *** Quits: mcinglis (~mcinglis@user/mcinglis) (Quit: ZNC 1.7.4 - https://znc.in)
[20:43:45] <floatcomplex> nevertheless i'm glad to see that candide is chill about sizeof(char) these days because there are much more harmful things people do that they should be shamed for
[20:43:47] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:44:31] *** Joins: mcinglis (~mcinglis@user/mcinglis)
[20:44:40] <mcf> floatcomplex: do you have an example of -Wpedantic causing suboptimal code generation? seems weird that a warning flag would do that
[20:44:47] <floatcomplex> not -Wpedantic
[20:45:13] *** Quits: mcinglis (~mcinglis@user/mcinglis) (Remote host closed the connection)
[20:45:21] <mcf> -pedantic is the same thing as -Wpedantic (or at least, they are documented the same way in the gcc manual)
[20:45:26] <nomagno> Does the C spec define a minimum size for any of the types, that isn't expressed in chars?
[20:46:17] <floatcomplex> mcf: i was thinking more of -std=c* rather than -std=gnu* or leaving it unspecified
[20:46:48] <floatcomplex> which, if -pedantic is used without one of those, should itself be an error but isn't
[20:47:31] <mcf> ah. still curious about when -std=c99 would result in suboptimal code compared to -std=gnu99
[20:47:52] <floatcomplex> mcf: i'm thinking of things in libc headers that care
[20:48:10] <mcf> do you have an example?
[20:48:35] *** Joins: mcinglis (~mcinglis@user/mcinglis)
[20:49:35] <pragma-> nomagno: -Wall is a bit of a misnomer. It doesn't enable /all/ warnings available in gcc. Rather, it enables all warnings that are considered worth warning about.
[20:49:44] *** Joins: MrFantastik (~f@c-71-202-124-69.hsd1.ca.comcast.net)
[20:49:58] <pragma-> nomagno: clang does have -Weverything which DOES enable every warning in existence.
[20:50:09] <pragma-> which indeed is excessive
[20:52:35] *** Joins: Rounin (~david@84.212.130.215)
[20:54:51] *** Quits: V-T60 (~v@host-86-111-90-227.566f.la.net.ua) (Ping timeout: 260 seconds)
[20:55:47] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[20:56:07] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[20:56:41] <floatcomplex> mcf: i'm not finding any in musl after a cursory glance, but pretty sure i remember apple libc and glibc having such departures from the standard by default for pragmatic reasons while falling back to the strict requirement if required to do so. gnu is characteristically unapologetic about that sort of thing (see POSIX_ME_HARDER)
[20:58:00] <sham1> They don't care about the standard because in their mind, when everyone goes to Free Software, it will be them that will be the standard
[20:58:16] <floatcomplex> and i will throw my computer into the sea
[20:58:21] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:58:35] *** Quits: X-Scale (~ARM@31.22.167.71) (Ping timeout: 264 seconds)
[20:59:15] <mcf> maybe something like basename()? i know that glibc has a posix and gnu version. anyway, i wouldn't discourage use of -std=c99 -Wpedantic for something like that. it results in trivial conformance issues that are easy to fix, just because the compiler didn't tell the programmer about them
[20:59:39] *** X-Scale` is now known as X-Scale
[21:00:39] <floatcomplex> yeah both versions of basename are rubbish
[21:01:50] <Klinda> Bou: but it would take the bytes or the number of char only (the function)
[21:01:50] *** Quits: gce108 (~gce@user/gce108) (Remote host closed the connection)
[21:01:54] <Klinda> ?
[21:02:07] <floatcomplex> i take that back. the gnu version of basename is not rubbish, but i never get to use it
[21:02:34] <quartz> I'm still getting "segmentation fault core dumped" when I run this code: https://bpa.st/QSIA   I compile it with -g -fsanitize=address, and it seems the error is at line 38, but I can't figure out why.
[21:02:52] *** Joins: gce108 (~gce@user/gce108)
[21:03:04] <quartz> All I want it to do is insert the newly created node AFTER the node current is pointing to.
[21:03:17] <floatcomplex> quartz: what's the full set of arguments you're passing to cc
[21:03:19] <quartz> Than current.next will point to newNode
[21:03:20] <Bou> Klinda: 10 chars are 10 bytes
[21:03:52] *** Quits: brad_mssw|mac (~bhouse@2601:344:4100:b490:c464:295e:d721:72b1) (Ping timeout: 268 seconds)
[21:04:02] <floatcomplex> quartz: my guess is that current->next->next is a null pointer dereference because current->next is null
[21:04:06] <quartz> floatcomplex: -g -fsanitize=address,undefined
[21:04:08] <floatcomplex> but asan should be telling you that
[21:04:15] <fizzie> quartz: FWIW, you shouldn't need any loops in that function, and the way the description is written is highly suggestive of there not being expected to be any.
[21:04:21] <floatcomplex> quartz: and you don't have -O[anything] in there?
[21:04:38] <fizzie> Specifically, this part: "Note that prevNode, if not NULL, is assumed to be one of the nodes in the given list. The behavior of this function is undefined if prevNode does not belong in the given list."
[21:04:59] <quartz> floatcomplex: I don't have -O flag
[21:05:04] <fizzie> You're adding new new node *after* `prevNode`, so there's no need to "loop through linked list to find prevNode": you already have a pointer to it, one was given to the function.
[21:05:05] <quartz> fizzie: Ohhh jeez I'm dumb
[21:05:07] *** Quits: loganlee (~Thunderbi@user/loganlee) (Ping timeout: 260 seconds)
[21:05:16] <quartz> OK I'll try to fix it now
[21:05:25] *** Joins: loganlee (~Thunderbi@user/loganlee)
[21:07:39] <fizzie> In any case, floatcomplex's assertion that current->next might be null (and therefore current->next->next an invalid pointer access) sounds possible enough. `current` (i.e., `prevNode`) might be the last node of the list.
[21:08:52] <floatcomplex> quartz: what specifically does asan say is the problem
[21:09:15] *** Joins: somlis (~somlis@user/somlis)
[21:09:35] <floatcomplex> quartz: you could also literally add assert(current->next); before that line of code and see if it fails there
[21:10:52] *** Joins: msavoritias (~msavoriti@mobile-access-6df0d3-96.dhcp.inet.fi)
[21:11:38] *** Quits: pehaef (~pehaef@user/pehaef) (Quit: leaving)
[21:11:49] <quartz> floatcomplex: It just says "undefined reference to '__asan_handle_type_mismatch_'
[21:12:01] <floatcomplex> hmm ok you need to recompile it properly
[21:12:06] <quartz> as well as report load 8
[21:12:11] <quartz> store8
[21:12:16] <quartz> I'm assuming that's 8 byes
[21:12:20] <floatcomplex> quartz: i think we need to see your makefile actually
[21:12:37] <quartz> floatcomplex: Let me try to fix the code given fizzie suggestion
[21:12:42] <quartz> Because I"m stupid
[21:13:08] <floatcomplex> ok but if you are going to continue to try to blindly do this stuff without a functional asan because of a makefile error then we're gonna be here tomorrow
[21:13:21] <sham1> We were gonna do that anyway
[21:13:41] <floatcomplex> i'm going to run out of dry computers
[21:13:48] <quartz> Haha!
[21:13:50] <quartz> Just a moment
[21:14:00] *** Joins: brad_mssw|mac (~bhouse@2601:344:4100:b490:9dbd:c384:b2c:a0f6)
[21:14:40] *** Joins: RicardasSim (~RicardasS@78-63-172-44.static.zebra.lt)
[21:14:47] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[21:14:50] <SamuelMarks> hi
[21:14:51] *** Joins: reedrichards (~f@c-71-202-124-69.hsd1.ca.comcast.net)
[21:15:18] *** Joins: wootz (~wootz@45.83.89.21)
[21:15:46] <SamuelMarks> On `#include <string.h>` I get "fatal error: 'string.h' file not found". So I find the dir, and did: `clang -cc1 -std='c90' -I='/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include' -ast-dump -fcolor-diagnostics 'main.c'`
[21:15:51] <SamuelMarks> (same error still occurs)
[21:16:16] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:16:35] *** Joins: stzsch|2 (~stzsch@187.44.81.18)
[21:16:58] <floatcomplex> SamuelMarks: why are you specifying -cc1 there
[21:17:02] <floatcomplex> i can reproduce that error when i do so
[21:17:19] <SamuelMarks> floatcomplex: for -ast-drump
[21:17:29] <SamuelMarks> *-ast-dump and -fcolor-diagnostics
[21:17:39] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:17:49] <SamuelMarks> It is the non-gcc compatible interface
[21:18:02] *** Joins: aqua (~aqua@user/aqua)
[21:18:10] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:18:12] <floatcomplex> maybe run it in preprocessor-only mode first and then pipe the output into that command, so it doesn't have to go find any includes? 
[21:19:04] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[21:19:35] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:19:35] *** Quits: stzsch (~stzsch@187.44.81.18) (Ping timeout: 264 seconds)
[21:19:41] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[21:19:59] *** Joins: Crescendo (~Crescendo@user/crescendo)
[21:20:27] *** Quits: reedrichards (~f@c-71-202-124-69.hsd1.ca.comcast.net) (Quit: Leaving)
[21:20:38] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[21:21:03] <SamuelMarks> floatcomplex: how?
[21:21:26] <SamuelMarks> Also I'mm sure I'm just calling it wrong, this should be trivial
[21:22:25] <floatcomplex> clang -E -o - source.c | clang -cc1 -o binary
[21:22:26] <floatcomplex> for example
[21:23:52] *** Joins: Macuser (~Macuser@216.30.159.201)
[21:24:00] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[21:27:31] <fizzie> Here's a guess: `clang -cc1`, being the "low-level" compiler, not the "high-level" compiler driver, won't have anything in the include file search path by default, except those directories given to it explicitly.
[21:28:18] <fizzie> You could, for example, use `clang -v` to discover how exactly it calls `clang -cc1` "normally", and then copy whatever -I directives or whatnot there are for your own invocation.
[21:28:18] <floatcomplex> yep. breaking it into two steps, one that is aware of such paths, appears to work
[21:28:39] <SamuelMarks> weird
[21:30:28] <SamuelMarks> Too much output though - clang -E -o - s.c | clang -cc1 -ast-dump -fcolor-diagnostics
[21:30:36] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[21:30:48] <SamuelMarks> I'm messing around with integer promotion implicit casting
[21:31:40] <fizzie> On this system for example, the call shown by clang -v is `.../clang -cc1 ... -internal-isystem /usr/local/include -internal-isystem /usr/lib/llvm-11/lib/clang/11.1.0/include -internal-externc-isystem /usr/include/x86_64-linux-gnu -internal-externc-isystem /include -internal-externc-isystem /usr/include ...`, which sure sounds like explicitly providing it the header search path.
[21:31:41] <SamuelMarks> Rewriting the type when the function return type isn't the same as the variable being assigned to. Which technically is permitted, e.g., assigning a short to an int
[21:32:29] <SamuelMarks> But is, IMHO, rarely what the developer intended. The developer probably wants there var to be a short and didn't pay attention to the function return type
[21:32:39] <Klinda> Bou: but in input in strncat, strncpy etc the second third input that says char * strncpy ( char * destination, const char * source, size_t num ); so num is referred as byte or num of characters?
[21:32:54] *** Quits: humky (~humky@user/humky) (Quit: Leaving)
[21:33:12] <fizzie> Also, maybe there's a flag to pass extra flags directly to the compiler without invoking it yourself? Such as "-Xclang <arg>: Pass <arg> to the clang compiler".
[21:34:43] <quartz> fizzie: Thanks for your help
[21:34:52] <quartz> floatcomplex: you too
[21:35:47] <fizzie> `clang -Xclang -ast-dump -Xclang -fcolor-diagnostics source.c |& less -R` works fine for me. Though the dump will still include all the included source too, so it's probably no different from the preprocess-and-cc1 version.
[21:36:19] <floatcomplex> clang clang clang
[21:36:29] <quartz> https://bpa.st/ESLA This code works, but I'm worried it's not the most elegent and efficent. Was I correct in doing the check to see if prevNode->next != NULL than the else statement?
[21:36:30] <SamuelMarks> ohh ld: file too small (length=0) file '/var/folders/4l/k_7bksrn5dv6lr_sn6f7d8200000gn/T/s-72a09e.o' for architecture x86_64
[21:36:41] <SamuelMarks> fizzie ^
[21:37:08] <SamuelMarks> I feel like this a reportable bug to the clang folk
[21:37:11] *** Quits: justache (~justache@user/justache) (Quit: The Lounge - https://thelounge.chat)
[21:37:33] <floatcomplex> file too small for x86_64 lol
[21:37:43] *** Joins: justache (~justache@user/justache)
[21:37:58] <floatcomplex> "your computer is simply too much computer for the task at hand, have you tried using a 555"
[21:38:30] <SamuelMarks> xD
[21:38:46] *** aqua is now known as kish`
[21:39:02] <fizzie> I don't think that's a "bug", that's just a consequence of passing an argument to the compiler that stops it from actually compiling.
[21:39:05] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 264 seconds)
[21:39:25] <fizzie> `clang -Xclang -ast-dump -Xclang -fcolor-diagnostics -fsyntax-only source.c |& less -R` gets rid of the extra errors too, since it doesn't try to do anything more.
[21:39:38] <fizzie> (I assumed you were just interested in the dump, not in actually getting a binary?)
[21:40:03] *** Joins: Crescendo (~Crescendo@user/crescendo)
[21:40:10] <fizzie> floatcomplex: For whom the bell clangs, eh? 
[21:40:14] <SamuelMarks> fizzie - Yeah I'm trying to get my head around the AST, comparing the AST of this file to the one I desire
[21:40:32] <SamuelMarks> Then I'll write an AST translator to go from one to the other
[21:40:41] <floatcomplex> ask not for whom the segmentation faults; it faults for thee
[21:40:50] <SamuelMarks> :O
[21:43:15] *** Joins: extern (~archer@185.32.179.207)
[21:44:16] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 245 seconds)
[21:45:06] *** Joins: Nselm (~Nselm@p200300d56f1cd50426692048b39dca00.dip0.t-ipconnect.de)
[21:45:30] <fizzie> Ask not what your compiler can do for you -- ask what you can do for your compiler.
[21:45:39] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[21:45:48] *** Quits: msavoritias (~msavoriti@mobile-access-6df0d3-96.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:47:20] <sham1> > floatcomplex | clang clang clang
[21:47:30] <sham1> Now I'm imagining floatcomplex saying that like Steve Balmer said "Developers"
[21:47:43] <sham1> Ballmer*
[21:49:09] <extern> whats' wrong with this program ?
[21:49:11] <extern> https://ideone.com/BHDz9B
[21:49:17] <extern> other than the <=
[21:49:45] <floatcomplex> i was more imagining the sound of a crowbar hitting a vending machine
[21:50:15] *** Joins: rlvdv (~rlv@2a02:a03f:8bd6:bc00:5ae4:c060:7d3d:bd93)
[21:50:26] *** Quits: rlvdv (~rlv@2a02:a03f:8bd6:bc00:5ae4:c060:7d3d:bd93) (Client Quit)
[21:50:42] *** Joins: rlvdv (~rlv@2a02:a03f:8bd6:bc00:5ae4:c060:7d3d:bd93)
[21:50:47] *** Joins: rlv_ (~rlv@2a02:a03f:8bd6:bc00:5ae4:c060:7d3d:bd93)
[21:50:52] *** Quits: rlv_ (~rlv@2a02:a03f:8bd6:bc00:5ae4:c060:7d3d:bd93) (Client Quit)
[21:51:06] <floatcomplex> extern: the other <=
[21:51:21] *** Quits: Nselm (~Nselm@p200300d56f1cd50426692048b39dca00.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[21:51:36] *** Joins: vicfred (~vicfred@user/vicfred)
[21:51:54] *** Quits: rlvdv (~rlv@2a02:a03f:8bd6:bc00:5ae4:c060:7d3d:bd93) (Client Quit)
[21:53:45] *** Joins: subdelusional (~user@188.249.169.186)
[21:54:40] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[21:54:56] <subdelusional> hello again, excuse my lack of knowledge but how do you generally deal with 2 dimensional arrays? for now I just want to make a 2 dimensional array with rows and columns, all filled with 0 and I want to print them in a grid style
[21:55:18] <caze> subdelusional: C only has one dimensional arrays.
[21:55:37] <caze> subdelusional: But you can have another array as the element type of a parent array.
[21:55:49] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:56:16] <floatcomplex> subdelusional: just do the indexing explicitly
[21:56:33] <floatcomplex> a[ix + X * iy] = ...
[21:56:38] <subdelusional> caze: elaborate ?
[21:56:49] <caze> subdelusional: On what?
[21:56:53] <floatcomplex> where X and Y are the sizes of the dimensions and ix and iy iterate over them
[21:57:12] *** Joins: kadavul (~vazha@103.165.20.154)
[22:00:35] *** Quits: Arthuria (~Arthuria@user/arthuria) (Ping timeout: 260 seconds)
[22:04:53] *** Joins: Nspace (~Nspace@user/nspace)
[22:06:57] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[22:07:15] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[22:08:31] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[22:10:35] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[22:11:08] *** Joins: msavoritias (~msavoriti@91-155-14-24.elisa-laajakaista.fi)
[22:11:50] <extern> does uninitialized int vars = 0 is stated in the standard ?
[22:12:29] <BtbN> uninitialized variables are uninitialized and not any value until assigned one
[22:12:32] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[22:12:34] <BtbN> as far as the standard is concerned
[22:12:46] <caze> Depends on the storage duration.
[22:12:53] <extern> caze: within main
[22:13:07] <caze> extern: What is the storage duration?
[22:13:13] <extern> automatic
[22:13:31] <caze> Then it has an indeterminate value.
[22:13:44] *** Quits: CaCode (~Cassius@user/cacode) (Quit: Leaving)
[22:13:48] <extern> so gcc is the one who set it to 0 ?
[22:13:57] <BtbN> If it's 0, that's by pure chance
[22:14:02] <BtbN> nothing you can rely on in any way
[22:14:24] <extern> ok 
[22:14:26] <extern> thanks
[22:15:15] <useretail> is there a way to declare optional argument in a function?
[22:15:36] <caze> Variable arguments, but it's cumbersome.
[22:16:04] <caze> See printf, for example.
[22:16:24] *** Quits: extern (~archer@185.32.179.207) (Quit: WeeChat 3.3)
[22:16:39] <BtbN> It'll also make for "fun" bugs if someone gets it wrong
[22:16:39] <caze> You need to somehow communicate to the function how many arguments there actually are, and what their types are, hence, the format string.
[22:17:24] *** Quits: msavoritias (~msavoriti@91-155-14-24.elisa-laajakaista.fi) ()
[22:17:43] *** Joins: mrig (~mrig@user/mrig)
[22:17:43] <useretail> ok, but how can i determine if variable was passed or not?
[22:18:03] <BtbN> You generally can't.
[22:18:09] <caze> The caller has to inform the function.
[22:18:14] <BtbN> You need some extra info, like the format string in printf for example
[22:18:26] <useretail> ok, i see
[22:18:37] *** Joins: msavoritias (~msavoriti@91-155-14-24.elisa-laajakaista.fi)
[22:19:04] <floatcomplex> what are you trying to do
[22:20:11] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 264 seconds)
[22:20:37] <useretail> i'm trying to set a default value for an option here (if no value was passed): func(int arga, int argb, int option)
[22:21:01] <floatcomplex> c doesn't work that way
[22:21:03] <sham1> You could have the user pass some neutral value like 0 or -1 depending on what your options look like
[22:21:07] <sham1> But yeah, that's not how G is
[22:21:09] <sham1> C*
[22:21:30] <useretail> sure it doesn't
[22:21:43] <useretail> but how would you implement it?
[22:21:47] *** Joins: imm_ (~imm_@user/imm/x-3405860)
[22:22:22] <caze> Need more detail as to what you're actually trying to accomplish, because as of now, it's an xy problem.
[22:22:29] *** Quits: cart_man (~rynot@cpc100914-uddi26-2-0-cust18.20-3.cable.virginm.net) (Quit: Konversation terminated!)
[22:22:35] <floatcomplex> have a two-argument function that calls the three-argument function with a default value
[22:22:38] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[22:22:55] *** Quits: msavoritias (~msavoriti@91-155-14-24.elisa-laajakaista.fi) (Client Quit)
[22:23:04] *** Joins: kish` (~aqua@user/aqua)
[22:23:08] *** Joins: msavoritias (~msavoriti@91-155-14-24.elisa-laajakaista.fi)
[22:24:31] *** Joins: Nselm (~Nselm@p200300d56f1cd50426692048b39dca00.dip0.t-ipconnect.de)
[22:25:01] *** Quits: msavoritias (~msavoriti@91-155-14-24.elisa-laajakaista.fi) (Client Quit)
[22:25:14] *** Joins: msavoritias (~msavoriti@91-155-14-24.elisa-laajakaista.fi)
[22:25:39] <useretail> ok, i figured it out
[22:25:39] *** Quits: RicardasSim (~RicardasS@78-63-172-44.static.zebra.lt) (Quit: Leaving)
[22:26:50] <caze> Tends to be pretty clunky in C. Probably why no one uses it anymore.
[22:26:52] <SamuelMarks> fizzie , floatcomplex : Here's what worked `clang -fsyntax-only -Xclang -ast-dump`
[22:27:19] *** Quits: msavoritias (~msavoriti@91-155-14-24.elisa-laajakaista.fi) (Client Quit)
[22:27:29] <SamuelMarks> useretail - use the comma macro
[22:27:32] *** Joins: msavoritias (~msavoriti@91-155-14-24.elisa-laajakaista.fi)
[22:27:39] *** Joins: Guest30 (~Guest30@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[22:27:43] *** Quits: Guest30 (~Guest30@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Client Quit)
[22:27:50] <useretail> SamuelMarks, no macros today
[22:28:09] <caze> func(int arga, int argb, bool use_option, int option)
[22:28:11] *** Joins: Guest21 (~Guest21@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[22:28:14] <caze> Another clunky way to do it.
[22:28:49] <caze> use_option tells the function whether or not to ignore option. Then it doesn't matter what the caller passes.
[22:28:50] <SamuelMarks> useretail - macros is how to do it
[22:29:30] <useretail> caze, i realized that i can use int array
[22:29:46] <useretail> ,,, and bingo
[22:29:50] <SamuelMarks> like https://stackoverflow.com/a/26408195
[22:30:02] <SamuelMarks> other good answers there also
[22:30:18] <caze> You could also try to marshall the bool and the int together into a larger data type, and then have a macro that checks the use bit.
[22:31:07] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Quit: mcleuder)
[22:31:26] <caze> You'd probably make the call with a complementary macro that sets the bits accordingly.
[22:31:54] <caze> useretail: Use int array how?
[22:32:50] *** Quits: Nselm (~Nselm@p200300d56f1cd50426692048b39dca00.dip0.t-ipconnect.de) (Quit: Client closed)
[22:33:47] *** Quits: dmaroo (~dhruv@2409:4070:2d02:f1a6:c52d:c594:e135:41e1) (Quit: Konversation terminated!)
[22:37:49] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[22:39:17] *** Joins: Nspace (~Nspace@user/nspace)
[22:39:51] *** Joins: ss4 (~wootehfoo@user/wootehfoot)
[22:40:48] <floatcomplex> just don't do this
[22:41:04] <floatcomplex> write a function that takes three arguments and does all the work
[22:41:36] <floatcomplex> then write a function that takes the first two arguments, and calls the first function with them and a default value for the third argument
[22:41:54] <floatcomplex> the functions must have different names, in c
[22:41:58] <floatcomplex> and this is a good thing
[22:42:26] <floatcomplex> what you are trying to do instead, IF it worked, would merely make your code harder to debug
[22:42:49] <deadk> i think arity overloading is the least bad kind of overloading
[22:43:10] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 260 seconds)
[22:43:22] <floatcomplex> it's pretty bad
[22:43:47] <floatcomplex> given that the function bodies aren't required to have anything to do with each other
[22:44:19] *** Joins: quartz (~quartz@user/quartz)
[22:44:27] *** Quits: effexzi (uid474242@id-474242.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:45:06] *** Quits: Haxxa (~Haxxa@122.199.46.64) (Quit: Haxxa flies away.)
[22:45:27] *** Joins: X-Scale` (~ARM@31.22.203.65)
[22:45:44] <deadk> language features should not need to be designed to thwart deranged psychopaths imo
[22:46:08] <deadk> the latter should just be encouraged to stick to perl
[22:46:19] *** Quits: larry87 (~quassel@98.40.245.193) (Remote host closed the connection)
[22:46:46] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 245 seconds)
[22:47:17] <floatcomplex> language features should be designed with ease of debugging in mind because that is a harder task than writing new code
[22:47:29] *** Joins: Haxxa (~Haxxa@122.199.46.64)
[22:47:33] <machinehum> Are macros even relevant anymore can't the cc just inline stuff
[22:47:42] <machinehum> They seems like a mess waiting to happen
[22:47:42] <sham1> Yes. You can't #include without macros
[22:47:47] <floatcomplex> yes, macros are relevant
[22:47:48] <sham1> Well, the preprocessor
[22:47:55] <deadk> macros are used for lots of things that aren't like inline functions
[22:48:13] <machinehum> fine
[22:48:13] *** Quits: krux02 (~krux02@p200300e817076e001575326a031bb152.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[22:48:38] *** X-Scale` is now known as X-Scale
[22:48:48] *** Joins: krux02 (~krux02@p200300e817076e00697d7433d4e5d517.dip0.t-ipconnect.de)
[22:48:49] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[22:48:56] <sham1> I use macros to get out of state machines assuming some condition isn't true. Like if there is not enough data then I have a macro that checks that and if there is not enough data, it returns and the user of the library is told to fetch more data and try again
[22:49:01] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[22:49:09] <sham1> Can't really do that with a function
[22:49:31] <machinehum> hmm
[22:50:39] *** Quits: Guest21 (~Guest21@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Quit: Client closed)
[22:51:02] <floatcomplex> inlining, on the other hand, is something you should let the compiler decide about
[22:51:42] <floatcomplex> writing non-macro code that either must or must not be inlined probably means you're doing something that will be harder to debug than it needs to be
[22:52:51] <useretail> caze, i guess it's valid: void func(int (*arr)[10]){}; void main(){int arr[10]; func(&arr);}
[22:53:06] <SamuelMarks> always_inline function might not be inlinable [-Wattributes]
[22:53:22] <caze> useretail: How does that accomplish what you're trying to do?
[22:53:36] <floatcomplex> SamuelMarks: yeah i'm specifically never use that attribute and don't write code that motivates you to
[22:53:40] *** Quits: magla (~gelignite@55d4dc2e.access.ecotel.net) (Quit: Stay safe!)
[22:54:47] <SamuelMarks> floatcomplex - it's littered throughout llvm-project's /include/c++/v1/atomic
[22:55:08] <SamuelMarks> See my build log https://github.com/SamuelMarks/type-correct/runs/4014325851?check_suite_focus=true
[22:55:09] <candide> Title of SamuelMarks's link: [type_correct/tests] Rewrote in preparation for my logic; [type_correct/TypeCorrect{.h,.cpp}] Use LACommenter example to get something working (TODO: replace) · SamuelMarks/type-correct@20b805d · GitHub
[22:56:46] <useretail> caze, if some array element is not defined, i'll set default in func
[22:56:55] <floatcomplex> SamuelMarks: unsurprising
[22:56:58] <caze> useretail: "not defined"
[22:57:04] *** Joins: CaCode (~Cassius@43.251.180.10)
[22:57:09] *** Joins: Betal (~Betal@user/betal)
[22:57:21] <floatcomplex> useretail: i told you twice how to do it in idiomatic C. what you are trying to do is not idiomatic C
[22:57:53] <floatcomplex> or have we moved on frmo that
[22:58:20] *** Quits: plainoldcheese (~plainoldc@user/plainoldcheese) (Quit: WeeChat 3.3)
[22:58:23] *** Quits: kadavul (~vazha@103.165.20.154) (Quit: Leaving)
[23:00:18] <caze> useretail: You mean "indeterminate". How do you tell if an element of the array has an indeterminate value?
[23:00:36] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-08a2-bff1-0197-0a0b.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[23:01:10] *** Quits: munkis (~mendel_mu@ool-ae2cb218.dyn.optonline.net) (Ping timeout: 260 seconds)
[23:01:36] *** Quits: CaCode (~Cassius@43.251.180.10) (Changing host)
[23:01:36] *** Joins: CaCode (~Cassius@user/cacode)
[23:02:13] *** Quits: CaCode (~Cassius@user/cacode) (Quit: Leaving)
[23:02:25] *** Quits: subdelusional (~user@188.249.169.186) (Quit: ERC (IRC client for Emacs 27.2))
[23:02:29] *** Joins: CaCode (~Cassius@43.251.180.10)
[23:03:25] *** Joins: munkis (~mendel_mu@ool-ae2cb218.dyn.optonline.net)
[23:03:29] *** Quits: CaCode (~Cassius@43.251.180.10) (Remote host closed the connection)
[23:03:43] *** Joins: CaCode (~Cassius@43.251.180.10)
[23:03:44] <useretail> caze, array will be initialized with some default values
[23:03:50] *** Quits: CaCode (~Cassius@43.251.180.10) (Remote host closed the connection)
[23:04:09] <caze> useretail: What is the defautl value?
[23:04:14] <useretail> -1
[23:04:43] <caze> useretail: func(arga, argb, -1);
[23:04:43] *** Joins: Nselm (~Nselm@p200300d56f1cd50426692048b39dca00.dip0.t-ipconnect.de)
[23:04:58] <caze> useretail: Just do that.
[23:05:53] *** Joins: CaCode (~Cassius@43.251.180.10)
[23:05:53] *** Quits: CaCode (~Cassius@43.251.180.10) (Changing host)
[23:05:53] *** Joins: CaCode (~Cassius@user/cacode)
[23:06:01] *** Quits: CaCode (~Cassius@user/cacode) (Remote host closed the connection)
[23:08:11] *** Joins: CaCode (~CaCode@user/cacode)
[23:11:33] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[23:11:47] *** Quits: alch (~alch@151.68.217.152) (Read error: Connection reset by peer)
[23:12:31] *** Joins: makersmasher (~makersmas@2600:6c40:5b00:158d::f8b)
[23:12:35] <citrons> if it can be a function it should be a function, but macros are handy for a lot of things
[23:12:42] <citrons> for instance, genericy things
[23:13:05] <citrons> I'm glad that typeof is being incorporated into standard C, because it is very handy for that purpose
[23:16:43] *** Joins: alch (~alch@mi-18-42-158.service.infuturo.it)
[23:18:36] *** Joins: V-T60 (~v@91.203.24.166)
[23:20:28] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[23:20:28] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[23:21:12] *** Joins: Nspace (~Nspace@user/nspace)
[23:22:13] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[23:22:35] *** Joins: pony (~ed@smol/hors)
[23:22:41] <sham1> Either we'll get statement expressions or lambdas. Either way, exciting times
[23:22:49] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[23:23:31] <sham1> Either way, the preprocessor suddenly becomes even more powerful. Of course not for C23 but maybe for the next standard
[23:26:56] *** Joins: bongobrown (~bongobrow@cpe-76-185-215-2.satx.res.rr.com)
[23:29:54] *** Joins: oriba (~oriba@dynamic-089-012-082-205.89.12.pool.telefonica.de)
[23:31:15] *** Quits: V-T60 (~v@91.203.24.166) (Ping timeout: 268 seconds)
[23:33:24] *** Quits: rgrinberg (~textual@190.113.111.74) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:34:20] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 268 seconds)
[23:36:25] *** Joins: webmariner (~james@cpc95914-rdng25-2-0-cust148.15-3.cable.virginm.net)
[23:36:46] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[23:41:03] *** Joins: effexzi (uid474242@id-474242.ilkley.irccloud.com)
[23:50:19] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[23:50:45] *** Quits: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au) (Quit: Quit)
[23:50:47] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 260 seconds)
[23:51:02] *** Joins: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au)
[23:53:14] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[23:53:15] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[23:53:45] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 260 seconds)
[23:54:33] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[23:54:53] <quartz> I'm trying to reverse a linked list. I wrote this code, but the output is wrong. I can't figure out what is wrong. https://bpa.st/NXBQ
[23:55:31] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[23:55:46] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:56:26] <quartz> I don't understand why it skips over some nodes in the linked list but works for others
[23:56:48] *** Quits: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:9b0:5b09:e84d:e089) (Remote host closed the connection)
[23:56:57] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[23:58:42] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
