[00:05:11] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[00:09:33] *** Quits: jkotra (~jkotra@106.212.230.185) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[00:13:47] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Quit: cvmn --> caveman)
[00:15:19] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[00:15:51] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 260 seconds)
[00:18:19] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[00:20:08] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 260 seconds)
[00:20:15] *** Joins: f__ (~f@2607:f598:bbda:2e0:6525:8291:720f:174)
[00:21:00] *** Joins: meator (~meator@user/meator)
[00:21:45] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:22:00] *** Quits: reedrichards (~f@2607:f598:bbda:2e0:15b2:b887:ecdc:bac5) (Remote host closed the connection)
[00:22:05] *** Joins: magla (~gelignite@55d4c6cf.access.ecotel.net)
[00:23:01] *** Quits: meator (~meator@user/meator) (Client Quit)
[00:23:16] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[00:23:26] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[00:25:03] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[00:26:36] *** Joins: kaph (~kaph@net-93-67-57-97.cust.vodafonedsl.it)
[00:28:33] *** Joins: Pacman_I_I (~Pacman_I_@24-231-12-92.mc.derytele.com)
[00:31:23] *** Quits: Waynes (~Waynes@user/waynes) (Quit: Leaving.)
[00:32:06] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-e4f8-bd3f-9136-d580.res6.spectrum.com)
[00:32:41] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[00:32:51] *** Parts: Pacman_I_I (~Pacman_I_@24-231-12-92.mc.derytele.com) ()
[00:33:50] *** Quits: jess (~jess@libera/staff/cat/jess) ()
[00:34:43] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 260 seconds)
[00:38:53] *** Joins: vicfred (~vicfred@user/vicfred)
[00:41:41] *** Joins: sokan_ (~sokan@2a02:587:9e11:bc00:227:eff:fe16:865d)
[00:42:01] *** Quits: sokan (~sokan@2a02:587:9e1f:c900:227:eff:fe16:865d) (Ping timeout: 245 seconds)
[00:42:03] *** sokan_ is now known as sokan
[00:43:29] *** Quits: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt) (Quit: Leaving)
[00:43:51] *** Quits: koo5_ (~quassel@51.140.155.227) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[00:44:24] *** Joins: ssh073 (~serg073@79.164.47.232)
[00:44:47] *** Joins: koo5_ (~quassel@51.140.155.227)
[00:45:53] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:46:34] *** Quits: ssh073 (~serg073@79.164.47.232) (Client Quit)
[00:47:07] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[00:48:39] *** Lord_of_Life_ is now known as Lord_of_Life
[00:52:28] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[00:54:14] *** Quits: rgrinberg (~textual@177.248.156.216) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:54:27] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[00:54:38] *** Quits: Xgc (~Xgc@user/xgc) (Read error: Connection reset by peer)
[00:55:15] *** Joins: reedrichards (~f@2607:f598:bbda:2e0:d72a:8b52:6480:4ae2)
[00:55:17] *** Joins: Xgc (~Xgc@user/xgc)
[00:55:38] *** Joins: aerysh (~aerysh@2a0a:b640:1:5a::a07d)
[00:56:49] *** Quits: f__ (~f@2607:f598:bbda:2e0:6525:8291:720f:174) (Remote host closed the connection)
[00:59:34] *** Quits: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[01:02:35] <lucie22> https://youtu.be/_A4e72MDlsA
[01:03:45] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[01:04:22] *** ChanServ sets mode: +b lucie22!*@*
[01:04:22] *** lucie22 was kicked by ChanServ (Banned: spammer)
[01:07:02] *** Quits: savolla (~quassel@95.10.200.51) (Ping timeout: 246 seconds)
[01:07:44] <Inline> https://onlinegdb.com/OSycJ4FdZn
[01:08:18] <twkm> link no words smells of spam.  consider providing words.
[01:08:33] <Inline> ok
[01:10:50] <Inline> my question is when i try q->buff = calloc(1, sizeof(char **)) i get still leaks via valgrind, however having that set at calloc(2, sizeof(char *)) i get no leaks
[01:11:06] <Inline> which is the correct way ?
[01:12:06] <twkm> leaks are because you lost the pointer to an allocation.
[01:12:20] <Bou> what's the try it and see factoid again?
[01:13:26] <Inline> hmm
[01:14:33] <pragma-> Bou: tias
[01:15:02] <twkm> e.g., p = malloc(n); p = malloc(m); /* first allocation is now lost */
[01:15:26] <Bou> ,tias
[01:15:26] <candide> "Try It And See" may work in other languages, but not in C due to the nature of undefined behavior/unportable code. Such coding-by-experimentation often leads to situations such as "But it worked fine earlier!" and/or "But it worked on my machine!". https://ramblings.implicit.net/c/2014/04/20/c-is-not-a-try-it-and-see-language.html
[01:20:14] *** Joins: rgrinberg (~textual@2806:102e:18:79a2:8cad:c2b5:666b:e6e7)
[01:20:15] <nitrix> mallocidiom is a nice follow up to that, seeing how you're using sizeof on a parenthesized type.
[01:23:20] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:25:08] *** Joins: geli (~gelignite@55d49bbc.access.ecotel.net)
[01:27:00] <Bou> Inline: you don't have a memleak, you have a buffer overflow.   `q->buff = calloc(1, sizeof(char *));` makes space for 1 pointer (usually 4 or 8 bytes) and stores it in q->buff. and then `memmove (adest->buff, ssource, strlen((const char*)ssource));` tries to copy a string into that
[01:27:03] *** Quits: reedrichards (~f@2607:f598:bbda:2e0:d72a:8b52:6480:4ae2) (Remote host closed the connection)
[01:27:13] *** Joins: reedrichards (~f@2607:f598:bbda:2e0:742d:2165:7c02:a025)
[01:27:41] *** Quits: magla (~gelignite@55d4c6cf.access.ecotel.net) (Ping timeout: 246 seconds)
[01:30:08] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:31:12] <Bou> "www.libera.chat" being 16 bytes, that won't fit. and with `calloc(2, ...)` you accidentally allocate enough memory
[01:33:30] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00)
[01:35:32] *** Joins: ssh073 (~serg073@79.164.47.232)
[01:37:01] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[01:37:38] <Inline> 8 bytes yes
[01:37:51] <Inline> char* is 8 here as well as char**
[01:38:14] <Inline> when i try malloc(16) i get no leaks but errors
[01:38:55] <Inline> Conditional jump or move depends on uninitialised value(s
[01:39:11] <Inline> and Uninitialised value was created by a heap allocation
[01:39:54] <Bou> malloc doesn't set the memory to zero for you, and calloc does
[01:40:55] <twkm> which means you aren't handling the string properly, if it is even a string.
[01:42:31] *** Quits: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net) (Quit: b1101)
[01:43:04] <Inline> aah
[01:43:07] <Inline> ok
[01:43:18] <Bou> I'd suggest you start with a simpler program, say 10 lines of code. allocate/free some memory, make an array of things, copy strings around etc, keep it simple so you don't have to guess
[01:44:56] *** Quits: ssh073 (~serg073@79.164.47.232) (Remote host closed the connection)
[01:46:57] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Quit: WeeChat 3.4)
[01:47:37] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:48:56] *** Joins: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de)
[01:49:10] *** Quits: coaxing (~coaxing@user/coaxing) (Quit: WeeChat 3.4.1)
[01:50:24] *** Joins: Zeturic (~Orimendix@50.26.218.162)
[01:50:42] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[01:50:59] *** Joins: boreas (~heiner@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[01:51:07] *** Joins: heiner (~Thunderbi@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[01:51:31] *** Quits: aerysh (~aerysh@2a0a:b640:1:5a::a07d) (Ping timeout: 260 seconds)
[01:54:14] *** Joins: coaxing (~coaxing@user/coaxing)
[01:55:05] *** Quits: llh (~UPP@user/llh) (Quit: :::: ( UPP ) ::::)
[01:56:33] *** Quits: mixfix41 (~homefame@user/mixfix41) (Quit: cya bbiab!)
[01:57:45] *** Joins: f__ (~f@2607:f598:bbda:2e0:3924:e29d:57f4:ab5b)
[01:58:00] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[01:59:24] <Inline> hmm, it's late and i seem to be confused now
[01:59:33] *** Quits: reedrichards (~f@2607:f598:bbda:2e0:742d:2165:7c02:a025) (Remote host closed the connection)
[01:59:38] <Inline> well, i already did that Bou
[02:00:29] <Inline> however i'm confused about how to set the contents of q->buff to 0 after using malloc and not calloc
[02:00:52] <Inline> seems like *q->buff=0 won't work
[02:01:01] <Inline> so i suppose i'd have to use a loop
[02:02:11] <Bou> can you tell me what this program is supposed to do?
[02:04:02] <Inline> no
[02:04:13] <Inline> that's asking for too much
[02:04:47] <twkm> if it's expected to e a string then that assignment should suffice.
[02:04:52] <Bou> https://en.wikipedia.org/wiki/Circular_buffer <-- probably this
[02:05:04] <Inline> yea it was from there, however i changed it
[02:05:06] <Bou> given the "head" and "tail" variables
[02:05:36] <Inline> yes but those are now tracking q->buff directly
[02:07:39] <twkm> if it isn't a string you are going to have to get much better at handling your pointers/offsets.
[02:07:39] *** Quits: fossforus (~stan@69-218-221-16.lightspeed.rlghnc.sbcglobal.net) (Quit: Leaving.)
[02:08:03] *** Joins: fossforus (~stan@69-218-221-16.lightspeed.rlghnc.sbcglobal.net)
[02:08:27] <Inline> probably
[02:09:20] <Inline> the buffer is just a pointer to a string, and the string is a pointer to an array of char
[02:10:08] <Inline> right, since it's an array i'd need to use a loop for setting all to 0
[02:10:17] <Inline> oh man
[02:10:40] <Bou> the buffer is (or should be) an array of whatever you're going to put into it
[02:11:02] <twkm> so not handling the pointers/offsets better.  oh well.
[02:15:47] *** Quits: Inline (~Inline@p4fedb8e0.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[02:16:48] *** Joins: Inline (~Inline@p200300cd472e5f00d26d0f98cd874067.dip0.t-ipconnect.de)
[02:17:39] *** Quits: adip (~adip@aedz200.neoplus.adsl.tpnet.pl) (Ping timeout: 260 seconds)
[02:18:13] *** Joins: freakazoid333 (~matt@2603-9000-cf03-86c3-a49d-ba0a-a00c-69aa.inf6.spectrum.com)
[02:19:34] *** Joins: adip (~adip@deu228.neoplus.adsl.tpnet.pl)
[02:19:36] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 272 seconds)
[02:20:10] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[02:20:23] *** Quits: freakazoid12345 (~matt@2603-9000-cf03-86c3-ccf2-00ea-bb1b-0d09.inf6.spectrum.com) (Ping timeout: 256 seconds)
[02:20:33] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[02:24:34] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:8ccd:8ba0:340:4246)
[02:25:29] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:26:23] <Inline> i'll just stick with calloc and set my minimum size as 16 yes
[02:26:49] *** Joins: seninha (~seninha@user/seninha)
[02:27:18] *** Quits: msk (~Thunderbi@89.205.124.39) (Ping timeout: 260 seconds)
[02:29:06] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 272 seconds)
[02:31:05] *** Quits: cosimone (~user@93-47-228-79.ip115.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[02:32:28] *** Quits: rgrinberg (~textual@2806:102e:18:79a2:8cad:c2b5:666b:e6e7) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:32:51] *** Quits: tech_exorcist (~tech_exor@user/tech-exorcist/x-0447479) (Quit: Disconnecting)
[02:34:20] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[02:34:46] *** Joins: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com)
[02:35:13] *** Joins: semeion (~semeion@user/semeion)
[02:35:49] *** Joins: Viewday1152 (~Viewday@user/viewday)
[02:36:13] *** Joins: reedrichards (~f@2607:f598:bbda:2e0:f129:751:7edd:9489)
[02:36:47] *** Quits: f__ (~f@2607:f598:bbda:2e0:3924:e29d:57f4:ab5b) (Remote host closed the connection)
[02:37:41] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 246 seconds)
[02:37:41] *** Viewday1152 is now known as Viewday115
[02:37:46] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00)
[02:39:53] *** Quits: alch (~alch@ca-18-211-196.service.infuturo.it) (Ping timeout: 256 seconds)
[02:41:50] *** Joins: alch (~alch@ca-18-215-227.service.infuturo.it)
[02:42:39] *** Joins: Thedarkb (~Thedarkb@host86-181-101-192.range86-181.btcentralplus.com)
[02:42:57] <Bou> sorry but nothing about your program is even slightly correct, randomly changing things isn't going to fix it
[02:43:25] <pragma-> well, you never know.
[02:43:45] <Inline> it compiles here without errors and witch valgrind i get no errors and no leaks
[02:44:07] <pragma-> ship it!
[02:44:30] <Inline> https://onlinegdb.com/Tb_0sY65s
[02:45:17] *** Quits: koo5_ (~quassel@51.140.155.227) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[02:45:28] <Bou> your q->buff can now hold 16 bytes. not 16 pointers to strings, just 16 bytes
[02:46:03] <Bou> and array_put copies "www.libera.chat" to the start of that array each time, not using head or tail at all
[02:46:13] *** Joins: koo5_ (~quassel@51.140.155.227)
[02:46:29] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[02:46:54] <ioxzev1z> Just curious but how does #63 work wrt size if you're just calling sizeof on a pointer?
[02:47:00] <Inline> gcc -Wall -Wextra -Werror -pedantic -g -O0 -o array array.c -lpthread
[02:47:17] <Inline> valgrind -s --track-origins=yes --leak-check=full --show-leak-kinds=all --log-file=array.log ./array
[02:47:35] *** Quits: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de) (Quit: Connection closed)
[02:48:22] <ioxzev1z> printf("\nSizeof container: %ld\n", sizeof ((char *)adest->buff)); why do you cast to char * on that? jw
[02:49:06] <Inline> https://onlinegdb.com/fPvnDSR9s
[02:49:21] <ioxzev1z> Shouldn't 52 just check if NULL? Also isEmpty checks if head == tail, where it would be true with a single element in the container, hence not empty?
[02:50:45] <Inline> actually i also have --keep-stacktraces=alloc-and-free in the valgrind options line too
[02:52:53] *** Joins: ssh073 (~serg073@79.164.47.232)
[02:53:00] <Inline> Bou: who said you I was into 16 pointers ?
[02:53:20] <Bou> `char **buff;` says that
[02:53:36] *** Quits: ssh073 (~serg073@79.164.47.232) (Client Quit)
[02:53:38] <Inline> what saiz it ?
[02:54:19] *** Joins: ssh073 (~serg073@gateway/tor-sasl/serg073)
[02:54:24] *** Joins: henistein (~henistein@2001:8a0:fd33:b801:30e4:5b70:be1b:320b)
[02:55:45] *** Quits: MerrinX (~merrinx@ti0028a400-2319.bb.online.no) (Quit: WeeChat 3.4.1)
[02:56:45] *** Joins: f__ (~f@2607:f598:bbda:2e0:969c:7ce8:2310:c0ea)
[02:57:32] *** Quits: Tangent-Man (~Tang3nt-M@mutantalien.plus.com) (Remote host closed the connection)
[02:57:41] *** Quits: reedrichards (~f@2607:f598:bbda:2e0:f129:751:7edd:9489) (Remote host closed the connection)
[02:59:53] <Inline> * sticks to the right
[03:00:08] <Inline> char*(*buff)
[03:00:17] <Inline> so you got (char *) (*buff)
[03:00:30] <Inline> i.e. buff is pointing to a char array
[03:00:43] *** Joins: inlight (~n0ise@user/inlight)
[03:01:06] <twkm> ,english char **buff;
[03:01:07] <candide> twkm: Declare `buff` as a pointer to pointer to char.
[03:01:31] *** Quits: adip (~adip@deu228.neoplus.adsl.tpnet.pl) (Ping timeout: 260 seconds)
[03:02:21] <Bou> if `buff` is a `char**` then the type of `*buff` will be `char *`, so you have a char POINTER array
[03:03:55] <Inline> the char array consists of chars not pointers
[03:05:41] <Bou> okay, back to the start: you want an array that can store a number of strings, no?
[03:05:53] <Inline> i already got it
[03:06:16] <Inline> thank you very much for tryin confusin me further....
[03:07:56] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[03:09:32] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Read error: Connection reset by peer)
[03:09:44] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[03:12:08] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:12:19] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[03:14:27] *** Joins: orthoplex64 (~crm@70.120.0.94)
[03:15:43] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 260 seconds)
[03:16:52] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.5)
[03:17:02] <henistein> in this simple code: https://bpa.st/E4MQ , R pointer value is the lower and V is the highest. It has to do with my compiler? There is some way to specify to the compiler to declare the variables exactly by the order I type them?
[03:18:17] <nitrix> henistein, No, C's memory model doesn't require memory to be linear. Arrays elements have sequential addresses, that's about it.
[03:18:19] <Bou> generally, no you can't, why do you need that?
[03:18:46] <henistein> alright, just curiosity
[03:18:51] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:20:09] <nitrix> henistein, enum {V, Q, R}; int a[] = { [V] = 1, [Q] = 2, [R] = 3 }; printf("%p %p %p", &a[V], &a[Q], &a[R]);
[03:21:22] <nitrix> For educative purposes only; it's not a way to solve your problem considering the problem is artificial in the first place.
[03:23:36] *** Joins: steve_ (~steve@ool-182c2b80.dyn.optonline.net)
[03:23:54] <henistein> nice trick/hack, makes sense
[03:24:17] *** Joins: himcesjf (uid409730@id-409730.tinside.irccloud.com)
[03:24:44] <fizzie> While struct members aren't necessarily contiguous, they _are_ guaranteed to be in order, so `struct { int V; int Q; int R; } vars;` is also a "solution", if the only criteria is the relative ordering.
[03:27:10] <fizzie> (C11 6.5.8p5: "If the objects pointed to are members of the same aggregate object, pointers to structure members declared later compare greater than pointers to members declared earlier in the structure, --")
[03:27:48] <Inline> thank you fizzie
[03:28:26] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:6d4c:38a4:18b7:4b48)
[03:29:32] <Inline> ok one more
[03:29:47] <Inline> why am i forced to cast the return values of malloc or calloc in some contexts ?
[03:30:07] <Inline> there's a rule saying "don't cast return values of malloc/calloc"
[03:34:08] *** Joins: pizdets (~pizdets@183.182.115.164)
[03:34:27] *** Quits: pizdets_ (~pizdets@183.182.111.52) (Ping timeout: 265 seconds)
[03:34:38] <Bou> ,cc int i = malloc(3); /* contexts such as this? */
[03:34:40] <candide> Bou: [warning: initialization of 'int' from 'void *' makes integer from pointer without a cast [-Wint-conversion]] no output: i = 4321696
[03:35:38] <Inline> for example
[03:35:45] <nitrix> You are never forced to cast. Solve the type error instead of creating more problems.
[03:35:58] <Inline> ah ok so another indirection
[03:36:15] <Inline> declare a pointer to the int and then use that for malloc
[03:37:03] *** Quits: koo5_ (~quassel@51.140.155.227) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[03:37:17] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[03:37:35] <Inline> allright
[03:38:01] *** Joins: koo5_ (~quassel@51.140.155.227)
[03:38:02] <Bou> int *i = malloc(sizeof *i); /* allocate "sizeof *i" bytes, which is the same as "sizeof int", or one integer, and make i point to it
[03:39:20] <Bou> *i = 5; // now you can store 5 at the memory address "i" is pointing to
[03:39:24] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 272 seconds)
[03:40:31] <nitrix> The casts should be reserved for making code dynamic/generic or the very old system APIs punning structs that we're stuck with.
[03:41:21] <Inline> what do yo mean with dynamic/generic ?
[03:41:35] <Inline> there is Generics in C11
[03:41:39] <nitrix> Every other scenario can be achieved with an intermediate temporary variable. For beginners, telling them to stay away from casts is also keeping them away from trouble.
[03:41:40] <Inline> is that it ?
[03:41:50] <Inline> ah ok
[03:42:14] <nitrix> _Generic works more like a switch case based on the type of its operand. You still cannot build generic data structures with it.
[03:42:26] <Inline> oh
[03:42:38] <Inline> hmm, have to read on more on that
[03:44:02] <nitrix> e.g. #define min(x, y) _Generic(x, int: imin, float: fmin, double: dmin)(x, y)
[03:46:36] <nitrix> That's pretty much all there is to it. It's not the monster people make it out to be.
[03:47:13] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:6d4c:38a4:18b7:4b48) (Ping timeout: 260 seconds)
[03:55:02] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Ping timeout: 246 seconds)
[03:55:30] *** MrAureliusR is now known as MrAureliusR_
[03:55:49] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[03:57:17] *** MrAureliusR_ is now known as MrAureliusR
[04:01:36] *** Quits: henistein (~henistein@2001:8a0:fd33:b801:30e4:5b70:be1b:320b) (Quit: Client closed)
[04:02:37] *** Joins: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de)
[04:02:43] *** Joins: reedrichards (~f@2607:f598:bbda:2e0:a3be:96cd:a124:27d3)
[04:02:44] *** Quits: f__ (~f@2607:f598:bbda:2e0:969c:7ce8:2310:c0ea) (Remote host closed the connection)
[04:04:08] *** Quits: steve_ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 260 seconds)
[04:04:08] *** Quits: freakazoid333 (~matt@2603-9000-cf03-86c3-a49d-ba0a-a00c-69aa.inf6.spectrum.com) (Remote host closed the connection)
[04:04:44] *** Joins: freakazoid333 (~matt@2603-9000-cf03-86c3-a49d-ba0a-a00c-69aa.inf6.spectrum.com)
[04:08:00] *** Joins: Dotz0cat_ (~Dotz0cat@75.90.45.146)
[04:08:12] *** Quits: Dotz0cat (~Dotz0cat@h244.35.188.173.dynamic.ip.windstream.net) (Ping timeout: 240 seconds)
[04:08:38] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:08:54] *** Dotz0cat_ is now known as Dotz0cat
[04:10:22] *** Quits: tejr (~tejr@user/tejr) (Quit: leaving)
[04:13:36] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[04:16:06] *** Quits: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94) (Quit: Konversation terminated!)
[04:17:56] *** Joins: vicfred (~vicfred@user/vicfred)
[04:21:42] *** Joins: chenqisu1 (~chenqisu1@183.217.200.168)
[04:25:02] *** Quits: AmR (~AmREiSa@156.207.152.245) (Quit: Konversation terminated!)
[04:26:29] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[04:28:37] *** Quits: freakazoid333 (~matt@2603-9000-cf03-86c3-a49d-ba0a-a00c-69aa.inf6.spectrum.com) (Read error: Connection reset by peer)
[04:28:59] *** Quits: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro) (Ping timeout: 246 seconds)
[04:29:12] *** Joins: freakazoid333 (~matt@2603-9000-cf03-86c3-a49d-ba0a-a00c-69aa.inf6.spectrum.com)
[04:29:26] *** Quits: random-nick (~random-ni@87.116.176.196) (Ping timeout: 272 seconds)
[04:31:07] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 260 seconds)
[04:31:27] *** Joins: parrott (~parrott@2607:fb90:1777:7bf2:0:5c:7e63:5801)
[04:32:46] *** Joins: Wulf (~Wulf@user/wulf)
[04:35:35] *** Joins: tejr (~tejr@user/tejr)
[04:40:49] *** Joins: vysn (~vysn@user/vysn)
[04:44:41] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[04:48:53] *** Joins: MrMobius_ (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[04:48:58] *** Joins: dogbert_2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[04:51:20] *** Joins: hashfunc1729 (~user@2601:5c0:c280:7090:4533:6252:8e32:243)
[04:52:07] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Ping timeout: 260 seconds)
[04:52:14] *** Quits: mahmutov (~mahmutov@37.155.74.49) (Ping timeout: 272 seconds)
[04:52:35] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Ping timeout: 260 seconds)
[04:53:13] *** Joins: llh (~UPP@user/llh)
[04:55:00] *** Quits: geli (~gelignite@55d49bbc.access.ecotel.net) (Quit: Stay safe!)
[04:56:46] *** Joins: v4mp (~v4mp@user/v4mp)
[04:59:07] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[04:59:57] *** Joins: xa0s (~xa0s@mab.sdf.org)
[05:00:59] <tusko> Which language is more relevant to integrated circuit design C or C++?
[05:03:10] <rcf> Neither, you want VHDL or Verilog
[05:06:11] <tusko> I'm guessing you never made an IC, huh?
[05:06:28] <tusko> We do use more than just VHDL, Verilog, and SystemVerilog
[05:07:12] <tusko> Early in the design flow languages like SystemC or C++ are used to build functional blocks, for example. But I don't know much more than that
[05:07:55] <tusko> But as I understand it these are mostly for simulation.
[05:10:03] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 260 seconds)
[05:10:48] *** Joins: pnbeast (~pnbeast@2601:140:4280:3800::1)
[05:11:45] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[05:17:20] <rcf> As an elitist prick I am required to reject HLS in circuit design
[05:18:11] *** Quits: mad_enz (~mad_enz@lnsm4-toronto12-50-101-118-206.internet.virginmobile.ca) (Ping timeout: 250 seconds)
[05:19:30] *** Joins: mad_enz (~mad_enz@lnsm4-toronto12-50-101-118-206.internet.virginmobile.ca)
[05:20:06] <rcf> And save the C for the horrible firmware and drivers
[05:20:39] *** Quits: inlight (~n0ise@user/inlight) (Quit: WeeChat 3.3)
[05:22:53] <zwr> https://github.com/MightyM17/linux_openpvrsgx/blob/espresso-wip/drivers/power/supply/smb136-charger.c#L227-L234=
[05:24:17] *** dogbert_2 is now known as dogbert2
[05:25:44] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[05:27:28] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[05:27:44] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[05:28:26] <rcf> zwr: I can accept that as the product of weird refactoring
[05:35:43] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 260 seconds)
[05:37:43] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[05:43:10] *** Quits: coaxing (~coaxing@user/coaxing) (Quit: WeeChat 3.4.1)
[05:46:50] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::beb) (Quit: Konversation terminated!)
[05:48:00] *** Joins: rgrinberg (~textual@177.248.158.166)
[05:48:50] *** Quits: bertvvvs (~bertvvvs@user/bertvvvs) (Quit: Y'all have a nice day.)
[05:49:07] <tusko> I just have come to like C so much better than C++
[05:49:14] <tusko> C++ looks gross when I look at it now
[05:49:59] *** Joins: Inline__ (~Inline@p4fedb8e0.dip0.t-ipconnect.de)
[05:50:22] <parrott> ++
[05:50:59] *** Quits: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de) (Quit: Connection closed)
[05:52:14] *** Quits: Inline (~Inline@p200300cd472e5f00d26d0f98cd874067.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[05:53:23] *** Quits: harveypwca (~harveypwc@2601:246:c180:a570:3828:d8:e523:3f67) (Quit: Leaving)
[06:00:13] *** Quits: orestarod (~orestarod@2a02:2149:8a3f:4a00:ac3e:fdb9:cec1:9bb9) (Ping timeout: 260 seconds)
[06:04:14] *** Quits: rgrinberg (~textual@177.248.158.166) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:12:55] *** Joins: ymwm (~yingmanwu@240e:37a:40ee:f500:d006:b58d:f3a1:2ef2)
[06:14:59] *** Quits: m4ho (~m4ho@81.20.119.6) (Ping timeout: 256 seconds)
[06:15:19] *** Joins: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net)
[06:15:52] *** Joins: m4ho (~m4ho@81.20.119.6)
[06:18:57] *** Joins: Inline (~Inline@p2e5790e6.dip0.t-ipconnect.de)
[06:21:27] *** Quits: Inline__ (~Inline@p4fedb8e0.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[06:29:23] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Ping timeout: 260 seconds)
[06:29:48] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[06:30:49] *** Quits: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com) ()
[06:34:38] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 260 seconds)
[06:40:03] *** Joins: agrosant (~agrosant@79.103.182.92.dsl.dyn.forthnet.gr)
[06:40:27] *** Quits: alch (~alch@ca-18-215-227.service.infuturo.it) (Ping timeout: 260 seconds)
[06:40:40] *** Quits: reedrichards (~f@2607:f598:bbda:2e0:a3be:96cd:a124:27d3) (Remote host closed the connection)
[06:40:44] *** Joins: f__ (~f@2607:f598:bbda:2e0:4f6a:46ce:c1de:e003)
[06:42:19] *** Joins: alch (~alch@151.82.217.255)
[06:45:43] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 260 seconds)
[06:46:44] *** Joins: reedrichards (~f@2607:f598:bbda:2e0:54be:7bc1:8b7:43eb)
[06:47:40] *** Quits: f__ (~f@2607:f598:bbda:2e0:4f6a:46ce:c1de:e003) (Remote host closed the connection)
[06:53:42] *** Joins: mahmutov (~mahmutov@37.155.74.49)
[06:54:47] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:57:39] *** Quits: soapsudsxx (~soapsudsx@209.221.40.156) (Ping timeout: 260 seconds)
[06:59:07] *** Joins: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net)
[07:04:23] *** Quits: mahmutov (~mahmutov@37.155.74.49) (Ping timeout: 260 seconds)
[07:04:32] *** Quits: pulse (~pulse@user/pulse) (Quit: { indiedevs.net })
[07:05:07] *** Quits: Alhazred (~Alhazred@45.129.56.151) (Ping timeout: 260 seconds)
[07:08:23] *** Quits: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net) (Ping timeout: 260 seconds)
[07:08:59] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.5)
[07:09:47] *** Quits: Haxxa (~Haxxa@202-65-73-230.ip4.superloop.com) (Ping timeout: 260 seconds)
[07:12:10] *** Quits: Tempesta (Tempesta@user/tempesta) (Read error: Connection reset by peer)
[07:12:10] *** Joins: Tempesta (Tempesta@183.98.39.112)
[07:12:14] *** Quits: Tempesta (Tempesta@183.98.39.112) (Changing host)
[07:12:14] *** Joins: Tempesta (Tempesta@user/tempesta)
[07:12:16] *** Joins: Haxxa (~Haxxa@202-65-73-230.ip4.superloop.com)
[07:13:23] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[07:13:24] *** Quits: hashfunc1729 (~user@2601:5c0:c280:7090:4533:6252:8e32:243) (Ping timeout: 240 seconds)
[07:15:41] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:15:42] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:15:42] *** Joins: wroathe (~wroathe@user/wroathe)
[07:16:19] *** Quits: wroathe (~wroathe@user/wroathe) (Client Quit)
[07:16:40] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:16:40] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:16:40] *** Joins: wroathe (~wroathe@user/wroathe)
[07:21:33] *** Joins: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net)
[07:21:45] *** Joins: f__ (~f@2607:f598:bbda:2e0:e323:276e:16e5:cbc4)
[07:22:23] *** Joins: soapsudsxx (~soapsudsx@209.221.40.156)
[07:22:31] *** Quits: reedrichards (~f@2607:f598:bbda:2e0:54be:7bc1:8b7:43eb) (Remote host closed the connection)
[07:27:49] *** Quits: aghast (~aghast@2607:fb91:bd0b:1329:a0d6:4979:f73c:e2ec) (Ping timeout: 240 seconds)
[07:30:53] *** Quits: freakazoid333 (~matt@2603-9000-cf03-86c3-a49d-ba0a-a00c-69aa.inf6.spectrum.com) (Read error: Connection reset by peer)
[07:31:33] *** Joins: freakazoid333 (~matt@2603-9000-cf03-86c3-a49d-ba0a-a00c-69aa.inf6.spectrum.com)
[07:32:38] *** Joins: fe23 (~fe23@2409:8a34:463:e5d0:80f2:d289:1619:b6a)
[07:36:01] *** Joins: rgrinberg (~textual@177.248.158.166)
[07:36:47] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-1-225.hsd1.wa.comcast.net) ()
[07:37:51] *** Quits: ymwm (~yingmanwu@240e:37a:40ee:f500:d006:b58d:f3a1:2ef2) (Remote host closed the connection)
[07:38:04] *** Joins: ymwm (~yingmanwu@240e:37a:40e5:1400:b1c4:b55c:61e4:2b2d)
[07:40:05] *** Quits: chenqisu1 (~chenqisu1@183.217.200.168) (Ping timeout: 246 seconds)
[07:50:49] *** Joins: zer0x (~zer0x@58.186.50.203)
[07:51:22] *** Quits: freakazoid333 (~matt@2603-9000-cf03-86c3-a49d-ba0a-a00c-69aa.inf6.spectrum.com) (Read error: Connection reset by peer)
[07:51:43] *** Joins: freakazoid333 (~matt@2603-9000-cf03-86c3-a49d-ba0a-a00c-69aa.inf6.spectrum.com)
[07:55:31] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 260 seconds)
[07:58:43] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[08:02:52] *** Quits: rgrinberg (~textual@177.248.158.166) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:09:20] *** Joins: Viewday1155 (~Viewday@user/viewday)
[08:10:54] *** Quits: Viewday115 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[08:10:54] *** Viewday1155 is now known as Viewday115
[08:12:01] *** Joins: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de)
[08:13:21] *** Joins: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com)
[08:16:47] *** Joins: skapate (~Skapata@2804:14c:87b0:9d2e:5158:9cdb:4fad:bf8)
[08:16:47] *** Quits: skapate (~Skapata@2804:14c:87b0:9d2e:5158:9cdb:4fad:bf8) (Changing host)
[08:16:47] *** Joins: skapate (~Skapata@user/skapata)
[08:16:59] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 260 seconds)
[08:17:31] *** Quits: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com) (Client Quit)
[08:17:50] *** Quits: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de) (Quit: Connection closed)
[08:18:56] *** Joins: dave0 (~dave0@069.d.003.ncl.iprimus.net.au)
[08:23:48] *** rcf is now known as nh
[08:25:03] *** Joins: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de)
[08:31:41] *** nh is now known as rcf
[08:34:16] *** Joins: hashfunc1729 (~user@2601:5c0:c280:7090:4533:6252:8e32:243)
[08:36:33] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[08:40:02] *** Quits: mrblarg64 (~mrblarg64@142-165-167-195.sktn.static.sasknet.sk.ca) (Quit: Leaving)
[08:41:03] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-1-225.hsd1.wa.comcast.net)
[08:41:30] *** Quits: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de) (Quit: Connection closed)
[08:42:18] *** Joins: Cleverness (~Clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[08:46:48] *** Joins: adip (~adip@deu228.neoplus.adsl.tpnet.pl)
[08:48:17] *** Joins: cdman (~dcm@27.2.218.12)
[08:48:17] *** Quits: cdman (~dcm@27.2.218.12) (Changing host)
[08:48:17] *** Joins: cdman (~dcm@user/dmc/x-4369397)
[08:53:52] *** Joins: zacts (~zacts@user/zacts)
[08:54:34] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:d407:f433:c42a:27bd)
[08:54:34] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:d407:f433:c42a:27bd) (Changing host)
[08:54:34] *** Joins: skapata (~Skapata@user/skapata)
[08:54:36] *** Joins: bertvvvs (~bertvvvs@user/bertvvvs)
[08:55:24] *** Quits: skapate (~Skapata@user/skapata) (Ping timeout: 240 seconds)
[08:56:45] *** Joins: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com)
[08:57:05] *** Quits: adip (~adip@deu228.neoplus.adsl.tpnet.pl) (Ping timeout: 246 seconds)
[09:00:33] *** Quits: zer0x (~zer0x@58.186.50.203) (Read error: Connection reset by peer)
[09:00:43] *** Joins: rgrinberg (~textual@177.248.158.166)
[09:01:28] *** Quits: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com) (Client Quit)
[09:08:58] *** Joins: cleverrness (~Clevernes@45.144.113.158)
[09:10:14] *** Joins: reedrichards (~f@2607:f598:bbda:2e0:7f9d:a68a:8c9f:ad4b)
[09:11:35] *** Quits: Cleverness (~Clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Ping timeout: 260 seconds)
[09:11:36] *** Quits: f__ (~f@2607:f598:bbda:2e0:e323:276e:16e5:cbc4) (Remote host closed the connection)
[09:12:05] *** Quits: cleverrness (~Clevernes@45.144.113.158) (Client Quit)
[09:12:59] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Ping timeout: 260 seconds)
[09:14:01] *** Joins: Satin (uid193953@user/Seten)
[09:18:13] *** Joins: adip (~adip@deu228.neoplus.adsl.tpnet.pl)
[09:19:05] *** Joins: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru)
[09:26:18] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[09:26:45] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[09:27:03] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[09:28:30] *** Quits: Zeturic (~Orimendix@50.26.218.162) (Quit: Leaving)
[09:30:59] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[09:33:15] *** Joins: f__ (~f@2607:f598:bbda:2e0:956d:4013:7c2c:9399)
[09:34:53] *** Quits: reedrichards (~f@2607:f598:bbda:2e0:7f9d:a68a:8c9f:ad4b) (Remote host closed the connection)
[09:37:28] *** Quits: zmt00 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[09:42:53] *** Joins: zmt00 (~zmt00@user/zmt00)
[09:42:56] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 272 seconds)
[09:43:48] *** Quits: ElPresidente (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 252 seconds)
[09:45:54] *** Joins: chenqisu1 (~chenqisu1@183.217.200.168)
[09:47:01] *** Joins: frost (~frost@user/frost)
[09:47:33] *** Joins: mrblarg64 (~mrblarg64@142-165-167-195.sktn.static.sasknet.sk.ca)
[09:47:43] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Ping timeout: 260 seconds)
[09:48:08] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[09:52:23] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:8ccd:8ba0:340:4246) (Ping timeout: 260 seconds)
[09:54:50] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 246 seconds)
[10:01:39] *** Joins: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com)
[10:05:59] <ent58> Has anyone used Metalang99/datatype99 in their code? It's similar to boost::preprocessor...allows some static reflection, template-like constructions
[10:06:37] <ent58> Was wondering if there were any pitfalls encountered
[10:07:18] *** Quits: bertvvvs (~bertvvvs@user/bertvvvs) (Quit: Y'all have a nice day.)
[10:10:56] *** Quits: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net) (Ping timeout: 246 seconds)
[10:11:19] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 260 seconds)
[10:12:30] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[10:12:44] <nitrix> If it's anything similar to boost, then I'd say that's probably where its problems lie.
[10:14:44] <ent58> reading about it, it seems pretty straightforward, and they explicitly mentioned they didn't want some of the limitations of boost. I just haven't dived deep enough to know the difference...I guess we will see
[10:16:55] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[10:18:54] *** Quits: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net) (Quit: b1101)
[10:24:47] *** Joins: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net)
[10:24:56] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 246 seconds)
[10:25:43] *** Quits: parrott (~parrott@2607:fb90:1777:7bf2:0:5c:7e63:5801) (Read error: Connection reset by peer)
[10:28:10] *** Joins: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com)
[10:28:31] *** Quits: soapsudsxx (~soapsudsx@209.221.40.156) (Ping timeout: 256 seconds)
[10:30:35] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:8ccd:8ba0:340:4246)
[10:31:10] *** Quits: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com) (Client Quit)
[10:33:24] *** Joins: SR-71 (~user@user/SR-71)
[10:37:05] *** Quits: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com) (Quit: Client closed)
[10:37:48] *** Quits: ymwm (~yingmanwu@240e:37a:40e5:1400:b1c4:b55c:61e4:2b2d) (Ping timeout: 240 seconds)
[10:37:59] *** Quits: alch (~alch@151.82.217.255) (Read error: Connection reset by peer)
[10:38:45] *** Quits: rgrinberg (~textual@177.248.158.166) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:41:44] *** Joins: alch (~alch@151.36.124.27)
[10:42:05] *** Quits: reset (~reset@user/reset) (Quit: reset)
[10:44:35] *** Quits: f__ (~f@2607:f598:bbda:2e0:956d:4013:7c2c:9399) (Remote host closed the connection)
[10:44:44] *** Joins: f__ (~f@2607:f598:bbda:2e0:9071:23e7:7993:1b36)
[10:48:54] *** Joins: the_lanetly_052 (~the_lanet@194.135.169.14)
[10:49:37] *** Quits: hashfunc1729 (~user@2601:5c0:c280:7090:4533:6252:8e32:243) (Remote host closed the connection)
[10:53:18] *** Joins: rddrrdrd (~mark@27.156.201.135)
[10:54:07] *** Parts: rddrrdrd (~mark@27.156.201.135) ()
[11:01:53] *** Joins: jdurand (~jdurand@user/jdurand)
[11:03:52] *** Joins: slimbo (~slim@user/slimbo)
[11:09:29] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:ec62:46e4:cbb2:6c14)
[11:10:37] *** Joins: mahmutov (~mahmutov@5.176.62.169)
[11:11:03] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:8ccd:8ba0:340:4246) (Ping timeout: 260 seconds)
[11:15:15] *** Joins: zer0x (~zer0x@58.186.50.203)
[11:15:49] *** Joins: meator (~meator@user/meator)
[11:16:44] *** Quits: zachel (~zachel@user/zachel) (Quit: DIsconnected: v7+nano)
[11:18:20] *** Quits: f__ (~f@2607:f598:bbda:2e0:9071:23e7:7993:1b36) (Remote host closed the connection)
[11:18:46] *** Joins: f__ (~f@2607:f598:bbda:2e0:2865:28f6:18eb:8d3b)
[11:18:49] *** Joins: zachel (~zachel@user/zachel)
[11:19:55] *** Quits: f__ (~f@2607:f598:bbda:2e0:2865:28f6:18eb:8d3b) (Remote host closed the connection)
[11:20:13] *** Joins: f__ (~f@2607:f598:bbda:2e0:ca62:18:e4d:4f6c)
[11:22:44] *** Joins: reedrichards (~f@2607:f598:bbda:2e0:2920:843d:4636:dc45)
[11:24:25] *** Quits: f__ (~f@2607:f598:bbda:2e0:ca62:18:e4d:4f6c) (Remote host closed the connection)
[11:27:24] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:8ccd:8ba0:340:4246)
[11:30:50] <greeter> i just spent the last 30 minutes tracking down what i thought was a bug, only to remember that the program is behaving the way i originally intended :|
[11:31:56] *** Quits: slimbo (~slim@user/slimbo) (Quit: slimbo)
[11:32:46] *** Joins: aradesh (~aradesh@user/aradesh)
[11:34:44] *** Joins: auditor (~auditor@2001:448a:1082:fe6f:9533:2181:916c:70e7)
[11:36:22] *** Joins: slimbo (~slim@user/slimbo)
[11:37:01] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[11:37:15] <auditor> https://cryptobug.wordpress.com/2022/04/03/irc-of-the-world-host-at-internic/ . They Said is Channel ISO Audit  #0day for Job , let's check what's going on there .
[11:37:26] <nitrix> ,mute auditor
[11:37:52] <auditor> ?
[11:38:01] <auditor> nah is for ISO
[11:38:10] <auditor> you don't know what is iso nitrix  ?
[11:42:52] <nitrix> You're ndut/auwooo and evading a ban.
[11:42:59] *** Quits: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net) (Ping timeout: 246 seconds)
[11:43:50] *** Quits: v4mp (~v4mp@user/v4mp) ()
[11:44:05] <nitrix> Skraito has also been a long lasting problem on the Freenode network.
[11:44:12] <nitrix> I suggest that you move on.
[11:44:12] *** Quits: auditor (~auditor@2001:448a:1082:fe6f:9533:2181:916c:70e7) (K-Lined)
[11:44:26] <pnbeast> The power of suggestion?
[11:53:33] *** Joins: badsektor (~badsektor@user/badsektor)
[11:53:47] <greeter> i was pretty sure that IP had been k-lined yesterday, though i wasn't going to say anything
[11:54:02] *** Quits: mountaingoat (~mountaing@user/mountaingoat) (Ping timeout: 272 seconds)
[11:54:22] *** Joins: mountaingoat (~mountaing@user/mountaingoat)
[11:55:37] *** Joins: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net)
[11:56:45] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[11:58:50] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[11:59:30] *** Joins: badsektor (~badsektor@user/badsektor)
[12:00:22] *** Quits: mountaingoat (~mountaing@user/mountaingoat) (Ping timeout: 272 seconds)
[12:03:17] *** Quits: meator (~meator@user/meator) (Ping timeout: 246 seconds)
[12:06:41] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[12:08:04] *** Joins: brushu (~brushu@user/brushu)
[12:08:13] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:8ccd:8ba0:340:4246) (Ping timeout: 240 seconds)
[12:09:35] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[12:10:03] *** Quits: wingsorc (~wingsorc@user/wingsorc) (Ping timeout: 250 seconds)
[12:10:21] *** Joins: gproto23 (~gproto23@user/gproto23)
[12:10:38] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:8ccd:8ba0:340:4246)
[12:14:22] *** Joins: mountaingoat (~mountaing@user/mountaingoat)
[12:16:06] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[12:17:22] *** Parts: yosef[m] (~yosefmatr@2001:470:69fc:105::1:e592) ()
[12:23:38] *** Joins: cuhela (~cuhela@188.119.45.227)
[12:25:22] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Quit: ZNC - https://znc.in)
[12:27:04] *** Quits: chenqisu1 (~chenqisu1@183.217.200.168) (Quit: Leaving)
[12:28:31] *** Quits: brushu (~brushu@user/brushu) (Ping timeout: 260 seconds)
[12:31:00] *** Joins: GiverOfDomains (sid538075@id-538075.tinside.irccloud.com)
[12:31:37] *** Quits: freakazoid333 (~matt@2603-9000-cf03-86c3-a49d-ba0a-a00c-69aa.inf6.spectrum.com) (Remote host closed the connection)
[12:32:13] *** Joins: freakazoid333 (~matt@2603-9000-cf03-86c3-a49d-ba0a-a00c-69aa.inf6.spectrum.com)
[12:48:05] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Ping timeout: 246 seconds)
[12:52:21] *** Joins: brushu (~brushu@user/brushu)
[12:52:37] *** Quits: freakazoid333 (~matt@2603-9000-cf03-86c3-a49d-ba0a-a00c-69aa.inf6.spectrum.com) (Remote host closed the connection)
[12:53:01] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:6d4c:38a4:18b7:4b48)
[12:53:13] *** Joins: freakazoid333 (~matt@2603-9000-cf03-86c3-a49d-ba0a-a00c-69aa.inf6.spectrum.com)
[12:53:32] *** Joins: rosek86 (~krzysiek@88.96.133.22)
[12:57:31] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:59:37] *** Joins: Tangent-Man (~Tang3nt-M@mutantalien.plus.com)
[13:00:32] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.238)
[13:01:17] *** Quits: Tangent-Man (~Tang3nt-M@mutantalien.plus.com) (Remote host closed the connection)
[13:01:44] *** Joins: Tangent-Man (~Tang3nt-M@mutantalien.plus.com)
[13:02:57] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[13:03:19] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[13:08:54] *** Joins: inlight (~n0ise@user/inlight)
[13:09:03] *** Joins: joji (~jojo@86.4.72.180)
[13:10:34] *** Joins: ymwm (~yingmanwu@240e:37a:40e5:1400:b1c4:b55c:61e4:2b2d)
[13:11:29] *** Quits: Sadale (~Sadale@user/sadale) (Quit: tawa pona!)
[13:12:56] *** Joins: MerrinX (~merrinx@ti0028a400-2319.bb.online.no)
[13:16:03] *** Joins: antizeus (~Euler@177.79.107.205)
[13:18:51] *** Joins: cosimone (~user@93-47-228-79.ip115.fastwebnet.it)
[13:20:18] *** Quits: pnbeast (~pnbeast@2601:140:4280:3800::1) (Quit: WeeChat 2.7.1)
[13:20:38] *** Quits: cuhela (~cuhela@188.119.45.227) (Ping timeout: 246 seconds)
[13:20:52] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[13:21:26] *** Quits: inlight (~n0ise@user/inlight) (Quit: WeeChat 3.3)
[13:22:29] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[13:22:42] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 272 seconds)
[13:24:25] *** Joins: kaph_ (~kaph@net-93-67-57-97.cust.vodafonedsl.it)
[13:25:02] *** Joins: cuhela (~cuhela@188.119.45.227)
[13:27:03] *** Quits: kaph (~kaph@net-93-67-57-97.cust.vodafonedsl.it) (Ping timeout: 260 seconds)
[13:28:10] *** Joins: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com)
[13:28:18] *** Joins: kaph__ (~kaph@151.47.143.243)
[13:28:20] *** Quits: joji (~jojo@86.4.72.180) (Ping timeout: 246 seconds)
[13:30:31] *** Quits: Tempesta (Tempesta@user/tempesta) (Read error: Connection reset by peer)
[13:30:45] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[13:31:07] *** Joins: joji (~jojo@86.4.72.180)
[13:31:08] *** Quits: kaph_ (~kaph@net-93-67-57-97.cust.vodafonedsl.it) (Ping timeout: 246 seconds)
[13:32:50] *** Quits: KimK (~KimK@ip98-186-40-208.ks.ks.cox.net) (Ping timeout: 272 seconds)
[13:36:39] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:6d4c:38a4:18b7:4b48) (Ping timeout: 260 seconds)
[13:37:00] *** Quits: fe23 (~fe23@2409:8a34:463:e5d0:80f2:d289:1619:b6a) (Ping timeout: 240 seconds)
[13:43:02] *** Quits: brushu (~brushu@user/brushu) (Ping timeout: 246 seconds)
[13:44:46] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[13:55:25] *** Joins: mzxtuelkl_ (~mzxtuelkl@user/mzxtuelkl)
[13:55:49] *** Quits: kaph__ (~kaph@151.47.143.243) (Read error: Connection reset by peer)
[13:56:13] *** Joins: bebyx (~Thunderbi@user/bebyx)
[13:57:17] *** Joins: kaph__ (~kaph@net-93-67-57-97.cust.vodafonedsl.it)
[13:59:00] *** Quits: antizeus (~Euler@177.79.107.205) (Remote host closed the connection)
[13:59:03] *** Quits: mzxtuelkl (~mzxtuelkl@user/mzxtuelkl) (Ping timeout: 260 seconds)
[13:59:14] *** Joins: strajder (~strajder@user/strajder)
[14:06:19] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[14:07:42] *** Joins: plastico (~plastico@neomutt/plastico)
[14:07:46] *** Joins: ss4 (~wootehfoo@user/wootehfoot)
[14:08:50] *** Joins: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94)
[14:09:03] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Read error: Connection reset by peer)
[14:10:49] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[14:11:01] *** Joins: meator (~meator@user/meator)
[14:11:11] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 260 seconds)
[14:15:37] *** Quits: freakazoid333 (~matt@2603-9000-cf03-86c3-a49d-ba0a-a00c-69aa.inf6.spectrum.com) (Remote host closed the connection)
[14:16:13] *** Joins: freakazoid333 (~matt@2603-9000-cf03-86c3-a49d-ba0a-a00c-69aa.inf6.spectrum.com)
[14:18:25] *** Joins: Tempesta (~Tempesta@user/tempesta)
[14:18:39] *** Quits: kaph__ (~kaph@net-93-67-57-97.cust.vodafonedsl.it) (Ping timeout: 260 seconds)
[14:22:16] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[14:23:47] *** Quits: ss4 (~wootehfoo@user/wootehfoot) (Ping timeout: 260 seconds)
[14:23:58] *** Joins: kaph (~kaph@net-93-67-57-97.cust.vodafonedsl.it)
[14:24:26] *** Quits: freakazoid333 (~matt@2603-9000-cf03-86c3-a49d-ba0a-a00c-69aa.inf6.spectrum.com) (Read error: Connection reset by peer)
[14:24:43] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[14:25:06] *** Joins: freakazoid333 (~matt@2603-9000-cf03-86c3-a49d-ba0a-a00c-69aa.inf6.spectrum.com)
[14:25:53] *** Joins: Rounin (~david@84.212.130.215)
[14:27:54] *** Quits: kaph (~kaph@net-93-67-57-97.cust.vodafonedsl.it) (Remote host closed the connection)
[14:28:32] *** Joins: kaph (~kaph@net-93-67-57-97.cust.vodafonedsl.it)
[14:28:57] *** Joins: _LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru)
[14:29:05] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:8ccd:8ba0:340:4246) (Quit: Quit)
[14:32:11] *** Quits: LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru) (Ping timeout: 260 seconds)
[14:33:13] *** Quits: Natch (~natch@c-67bae255.014-297-73746f25.bbcust.telenor.se) (Remote host closed the connection)
[14:33:39] *** Joins: Sadale (~Sadale@user/sadale)
[14:37:03] *** Quits: cuhela (~cuhela@188.119.45.227) (Ping timeout: 260 seconds)
[14:37:23] *** Joins: soul-bw (~uknown@2a02-a456-85ad-1-9d9b-5209-8ee2-fd1b.fixed6.kpn.net)
[14:38:05] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[14:38:28] *** Joins: bindu (~bindu@user/bindu)
[14:38:35] *** Joins: Natch (~natch@c-67bae255.014-297-73746f25.bbcust.telenor.se)
[14:39:23] *** Quits: soul-d (~uknown@user/soul-d) (Ping timeout: 260 seconds)
[14:40:35] *** Quits: alch (~alch@151.36.124.27) (Ping timeout: 260 seconds)
[14:42:07] *** Joins: alch (~alch@151.34.123.196)
[14:46:29] *** Quits: freakazoid333 (~matt@2603-9000-cf03-86c3-a49d-ba0a-a00c-69aa.inf6.spectrum.com) (Read error: Connection reset by peer)
[14:46:37] *** Joins: kaph_ (~kaph@net-93-67-57-97.cust.vodafonedsl.it)
[14:47:11] *** Joins: freakazoid333 (~matt@2603-9000-cf03-86c3-a49d-ba0a-a00c-69aa.inf6.spectrum.com)
[14:47:14] *** Joins: zacts (~zacts@user/zacts)
[14:47:47] *** Quits: kaph (~kaph@net-93-67-57-97.cust.vodafonedsl.it) (Ping timeout: 246 seconds)
[14:48:31] *** Quits: motherfsck (~motherfsc@user/motherfsck) (Ping timeout: 260 seconds)
[14:48:56] *** Joins: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro)
[14:49:23] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[14:53:17] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::beb)
[14:53:48] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::beb) (Client Quit)
[14:54:05] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 246 seconds)
[14:54:09] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:6d4c:38a4:18b7:4b48)
[14:55:08] *** Quits: kaph_ (~kaph@net-93-67-57-97.cust.vodafonedsl.it) (Ping timeout: 246 seconds)
[15:00:00] *** Joins: fe23 (~fe23@2409:8a34:463:e5d0:b430:e770:606:cfcf)
[15:00:23] *** Quits: mahmutov (~mahmutov@5.176.62.169) (Ping timeout: 260 seconds)
[15:05:17] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[15:05:37] *** Joins: gproto23 (~gproto23@user/gproto23)
[15:05:38] *** Joins: coaxing (~coaxing@user/coaxing)
[15:07:11] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[15:07:34] *** Quits: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com) (Quit: Client closed)
[15:08:47] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:6d4c:38a4:18b7:4b48) (Ping timeout: 256 seconds)
[15:13:15] *** Quits: toulene (~toulene@user/toulene) (Ping timeout: 260 seconds)
[15:15:26] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[15:15:40] *** Joins: kaph (~kaph@net-93-67-57-97.cust.vodafonedsl.it)
[15:18:25] *** Joins: kenantu (~kenanmara@user/kenanmarasli)
[15:21:26] *** Joins: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com)
[15:23:07] *** Joins: random-nick (~random-ni@87.116.167.125)
[15:23:43] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-a49d-ba0a-a00c-69aa.inf6.spectrum.com)
[15:24:25] *** Quits: frost (~frost@user/frost) (Quit: Client closed)
[15:25:44] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[15:25:48] *** Quits: freakazoid333 (~matt@2603-9000-cf03-86c3-a49d-ba0a-a00c-69aa.inf6.spectrum.com) (Ping timeout: 240 seconds)
[15:26:09] *** Quits: FragByte (~christian@user/fragbyte) (Quit: Quit)
[15:26:45] *** Joins: Klinda (~superleag@user/klinda)
[15:26:51] *** Joins: ekathva (~ekathva@2001:999:250:8f1f:1c8b:1b42:a058:2b8b)
[15:28:07] *** Joins: FragByte (~christian@user/fragbyte)
[15:28:57] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[15:28:59] *** Quits: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net) (Remote host closed the connection)
[15:29:15] *** Joins: dogbert2 (~Bill@ip70-170-79-7.lv.lv.cox.net)
[15:30:03] *** Quits: slimbo (~slim@user/slimbo) (Quit: slimbo)
[15:30:17] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:30:58] *** Joins: csrf (~csrf@user/csrf)
[15:32:41] *** Joins: toulene (~toulene@user/toulene)
[15:33:53] *** Quits: toulene (~toulene@user/toulene) (Read error: Connection reset by peer)
[15:34:13] *** Quits: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net) (Ping timeout: 260 seconds)
[15:34:40] *** Joins: joedoe47 (~weechat@c-98-254-188-143.hsd1.fl.comcast.net)
[15:36:22] *** Joins: toulene (~toulene@user/toulene)
[15:40:21] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[15:41:13] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 260 seconds)
[15:42:46] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[15:46:35] *** Quits: livestradamus (~quassel@user/livestradamus) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[15:47:15] *** Joins: livestradamus (~quassel@user/livestradamus)
[15:51:18] *** Quits: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94) (Quit: Konversation terminated!)
[15:53:50] *** Joins: cuhela (~cuhela@188.119.45.227)
[16:03:04] *** Quits: Inline (~Inline@p2e5790e6.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:03:57] *** Quits: yggdrasil (~yggdrasil@67-0-44-105.albq.qwest.net) (Ping timeout: 260 seconds)
[16:04:41] *** Joins: slimbo (~slim@user/slimbo)
[16:05:32] *** Joins: yggdrasil (~yggdrasil@67-0-66-167.albq.qwest.net)
[16:11:40] *** Quits: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof) (Quit: WeeChat 3.5)
[16:12:41] *** Joins: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof)
[16:12:43] *** Quits: Thedarkb (~Thedarkb@host86-181-101-192.range86-181.btcentralplus.com) (Ping timeout: 260 seconds)
[16:17:30] <HisShadow> Is there any way to replace a VLA inside a struct with something else?
[16:18:53] <fizzie> There isn't even any way to have a VLA inside a struct in the first place.
[16:21:11] <fizzie> (But if the question is what you could use instead of the thing you can't have, I think that'd depend on the context a little, but might be pretty likely to just involve allocated storage.)
[16:21:30] <dave0> maybe he means FAM
[16:21:42] <dave0> HisShadow: do you mean flexible array member?
[16:22:01] <fizzie> ,cc int main(void) { int n = 5; struct { int arr[n]; } x; } // just checking if there's a GNU extension for an actual VLA
[16:22:03] <candide> fizzie: [warning: a member of a structure or union cannot have a variably modified type [-Wpedantic]] no output: n = 5; x = <error reading variable x (Cannot access memory at address 0x0)>
[16:22:11] <fizzie> Eh, of _course_ there is.
[16:22:19] <dave0> nice
[16:22:21] <fizzie> If you can think of something, there's a GNU extension for it.
[16:22:27] <fizzie> It's like rule 34.
[16:22:47] *** Quits: joji (~jojo@86.4.72.180) (Ping timeout: 260 seconds)
[16:22:48] <HisShadow> here's a piece of code https://bpa.st/QSIQ in question
[16:22:50] <dave0> except bounds checking
[16:24:12] <fizzie> Well, that'd be a real VLA. And inside a union, meaning there probably isn't any entirely direct replacement.
[16:24:15] <dave0> that's nearly a FAM
[16:24:26] <fizzie> Yeah, I guess there's that.
[16:24:40] <fizzie> You'd just need something to allocate the storage.
[16:24:55] *** Joins: tech_exorcist (13203@user/tech-exorcist/x-0447479)
[16:26:02] <HisShadow> so I could for example do u.response = *(struct response *)malloc(sizeof(struct response) + cam->max_response_quads * sizeof(__u32)) ?
[16:26:59] <fizzie> You'd have to declare it as a FAM first, and make `u` a pointer, and not dereference the result of `malloc` for that.
[16:27:37] *** Quits: freakazoid343 (~matt@2603-9000-cf03-86c3-a49d-ba0a-a00c-69aa.inf6.spectrum.com) (Remote host closed the connection)
[16:27:38] <fizzie> Also not 100% sure the standard allows you to have a struct with a FAM inside a union. It'd make sense, but I vaguely recall someone griping about it not being allowed for some reason.
[16:28:12] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-a49d-ba0a-a00c-69aa.inf6.spectrum.com)
[16:28:19] <fizzie> ,cc union { struct { int x; int fam[]; } response; int reset; double resource; } just_testing; // well, it doesn't complain, maybe I misremembered
[16:28:21] <candide> fizzie: no output: just_testing = {response = {x = 4096, fam = 0x7fffffffe30c}, reset = 4096, resource = 2.0236928853657458e-320}
[16:29:50] <HisShadow> so fam is basically fam[1] here?
[16:30:19] <fizzie> Well, it's the standard form of the "struct hack", which involved an array of size one.
[16:31:59] *** Quits: bittersweetsymph (uid509475@id-509475.lymington.irccloud.com) ()
[16:32:21] <fizzie> If you wanted it to have automatically allocated, and weren't so bothered about having a VLA, just about having a VLA inside a struct, another alternative might be `char data[sizeof (X) + N * sizeof(Y)]; union foo { ... } *u = (union foo *) data;`. (Ignoring the "declared type is always the effective type" discussion.)
[16:33:45] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[16:34:19] *** Joins: mahmutov (~mahmutov@5.176.62.169)
[16:34:43] <HisShadow> sizeof (X) + N * sizeof(Y) - this is basically sizeof(response) + cam->max_response_quads * sizeof(__u32) in my case?
[16:34:44] *** Joins: f__ (~f@2607:f598:bbda:2e0:adfc:4d8d:ec3e:40d6)
[16:35:27] *** Quits: reedrichards (~f@2607:f598:bbda:2e0:2920:843d:4636:dc45) (Remote host closed the connection)
[16:35:34] *** Joins: pyook (~pyook@user/puke)
[16:37:33] <fizzie> Yeah, I just didn't want to write all that.
[16:39:56] *** Joins: Inline (~Inline@p200300cd473cee00b1553510cacfa527.dip0.t-ipconnect.de)
[16:40:03] *** Joins: oriba (~oriba@dynamic-077-013-246-244.77.13.pool.telefonica.de)
[16:42:55] *** Quits: unlink2 (~unlink@p200300ebcf19f600f31648a859b660c5.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:45:27] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[16:47:34] <HisShadow> okay, thanks, I'll try that
[16:48:51] *** Quits: kaph (~kaph@net-93-67-57-97.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[16:48:59] *** Joins: ss4 (~wootehfoo@user/wootehfoot)
[16:50:15] *** Joins: metabulation (~wootehfoo@user/wootehfoot)
[16:50:26] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 272 seconds)
[16:50:28] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[16:50:44] *** Joins: kaph (~kaph@net-93-67-57-97.cust.vodafonedsl.it)
[16:51:28] *** Quits: kleiner (uid540109@id-540109.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[16:53:34] *** Joins: seifeslimene (~seifeslim@102.156.121.226)
[16:54:03] *** Quits: ss4 (~wootehfoo@user/wootehfoot) (Ping timeout: 260 seconds)
[17:03:26] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[17:03:49] *** Joins: frost (~frost@user/frost)
[17:06:10] *** Joins: HaMsTeRs (~Thunderbi@210.3.201.132)
[17:07:33] *** Quits: the_lanetly_052 (~the_lanet@194.135.169.14) (Ping timeout: 260 seconds)
[17:24:48] *** Joins: badsektor (~badsektor@user/badsektor)
[17:27:23] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.238) (Ping timeout: 246 seconds)
[17:31:14] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.236)
[17:32:56] *** Joins: shivesh (~shivesh@user/shivesh)
[17:33:23] *** Quits: slimbo (~slim@user/slimbo) (Quit: slimbo)
[17:37:32] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.236) (Ping timeout: 246 seconds)
[17:42:24] *** Joins: Ox000 (~jy@74.215.12.46)
[17:43:49] *** Quits: seifeslimene (~seifeslim@102.156.121.226) (Quit: Client closed)
[17:44:01] *** Joins: joji (~jojo@86.4.72.180)
[17:45:21] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[17:45:33] *** Joins: seifeslimene (~seifeslim@102.156.121.226)
[17:45:38] *** Quits: HaMsTeRs (~Thunderbi@210.3.201.132) (Quit: HaMsTeRs)
[17:46:13] *** Quits: seifeslimene (~seifeslim@102.156.121.226) (Write error: Broken pipe)
[17:47:35] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.238)
[17:50:05] *** Joins: vitimiti (~Celtor@2a02:c7e:b41:3500:6e96:16d7:589e:e993)
[17:51:34] *** Joins: slimbo (~slim@user/slimbo)
[17:51:49] *** Joins: n8chan (~nate@98.45.152.91)
[17:52:50] *** Quits: badsektor (~badsektor@user/badsektor) (Quit: Leaving...)
[17:53:38] *** Quits: neightchan (~nate@98.45.152.91) (Ping timeout: 246 seconds)
[17:53:59] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.238) (Ping timeout: 246 seconds)
[17:56:15] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:ec62:46e4:cbb2:6c14) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:57:00] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.238)
[17:57:04] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.238) (Client Quit)
[17:57:47] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[17:59:48] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[18:03:00] *** Joins: AhmetDurmaz (~ahmet@95.2.12.243)
[18:03:12] *** Joins: kts (~kts@103.73.237.166)
[18:05:08] *** Parts: AhmetDurmaz (~ahmet@95.2.12.243) (WeeChat 2.8)
[18:05:39] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00)
[18:05:45] *** Joins: seifeslimene (~seifeslim@102.156.121.226)
[18:07:56] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:6d4c:38a4:18b7:4b48)
[18:10:57] *** Joins: nate1 (~nate@98.45.152.91)
[18:13:03] *** Joins: rgrinberg (~textual@177.248.158.166)
[18:15:20] *** Quits: nate1 (~nate@98.45.152.91) (Ping timeout: 246 seconds)
[18:15:43] *** Joins: machaddr (~machaddr@a79-168-74-18.cpe.netcabo.pt)
[18:16:42] *** Joins: malina (~malina@user/malina)
[18:17:52] *** Joins: pert (~pert@fsf/member/pert)
[18:20:36] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:81cd:91a0:b28e:654e)
[18:21:44] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[18:26:16] *** Joins: wingsorc (~wingsorc@user/wingsorc)
[18:30:04] *** Joins: stefanos82 (~stefanos8@31-14-125.netrun.cytanet.com.cy)
[18:30:09] *** Joins: slidercrank (~slidercra@user/slidercrank)
[18:30:54] *** Quits: ski (~ski@remote12.chalmers.se) (Quit: Lost terminal)
[18:33:30] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[18:35:38] <stefanos82> does anyone know a book or an article that demonstrates how to implement JIT or AOT from scratch, preferably in C? It's a topic I'm interested in and would like to know more.
[18:38:36] *** Quits: alch (~alch@151.34.123.196) (Read error: Connection reset by peer)
[18:39:55] *** Quits: ssh073 (~serg073@gateway/tor-sasl/serg073) (Ping timeout: 240 seconds)
[18:41:12] *** Joins: monkey_ (~user@190.104.116.153)
[18:41:43] *** Quits: mzxtuelkl_ (~mzxtuelkl@user/mzxtuelkl) (Quit: mzxtuelkl_)
[18:42:01] *** Joins: mzxtuelkl (~mzxtuelkl@user/mzxtuelkl)
[18:42:33] *** Joins: alch (~alch@151.36.125.37)
[18:44:50] *** Quits: malina (~malina@user/malina) (Quit: malina)
[18:45:26] *** Joins: malina (~malina@user/malina)
[18:46:01] *** Quits: vitimiti (~Celtor@2a02:c7e:b41:3500:6e96:16d7:589e:e993) (Remote host closed the connection)
[18:47:18] *** Joins: vitimiti (~Celtor@2a02:c7e:b41:3500:6e96:16d7:589e:e993)
[18:51:35] *** Joins: iomari891 (~iomari891@102.91.4.186)
[18:52:37] *** Joins: cuanim (~cuanim@user/cuanim)
[18:53:02] *** Joins: smallville7123_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[18:53:08] *** Quits: ymwm (~yingmanwu@240e:37a:40e5:1400:b1c4:b55c:61e4:2b2d) (Ping timeout: 260 seconds)
[18:53:16] <smallville7123_> what does this mean? "no matter how many members a union has, it always uses only enough memory to store the largest member."
[18:53:48] *** Joins: ymwm (~yingmanwu@240e:37a:40e5:1400:b1c4:b55c:61e4:2b2d)
[18:54:09] <smallville7123_> like, would it mean that all members would be implicitly cast to a type of the largest size?
[18:54:29] <smallville7123_> for example, a uint8_t and a uint64_t would have the same size inside of a union ?
[18:55:08] <smallville7123_> and for example, obtaining sizeof(int8_member) would be equal to sizeof(int64_member) ?
[18:57:59] *** Joins: Guest38 (~Guest38@188.147.98.147.nat.umts.dynamic.t-mobile.pl)
[18:58:02] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 246 seconds)
[18:58:14] <sham1> smallville7123_: no
[18:58:32] <sham1> It means that the union takes the size of the largest member
[18:58:54] <sham1> In this case, it'll be the size of uint64_t
[18:59:59] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:81cd:91a0:b28e:654e) (Ping timeout: 256 seconds)
[19:00:49] <smallville7123_> ok
[19:01:21] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[19:01:33] *** Quits: dave0 (~dave0@069.d.003.ncl.iprimus.net.au) (Read error: Connection reset by peer)
[19:01:34] <twkm> no casting.
[19:01:35] <sham1> The uint8_t will still be the size of a uint8_t
[19:02:16] <twkm> every member uses the same storage, so it is large enough to accomodat the largest member type.
[19:02:23] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 260 seconds)
[19:02:48] *** Quits: Ox000 (~jy@74.215.12.46) (Ping timeout: 272 seconds)
[19:05:19] *** Quits: smallville7123_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[19:05:58] *** Quits: joji (~jojo@86.4.72.180) (Ping timeout: 272 seconds)
[19:06:47] *** Joins: dave0 (~dave0@069.d.003.ncl.iprimus.net.au)
[19:08:43] *** Quits: knusbaum (knusbaum@gateway/vpn/protonvpn/knusbaum) (Ping timeout: 256 seconds)
[19:10:22] *** Joins: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net)
[19:10:44] *** Joins: reedrichards (~f@2607:f598:bbda:2e0:90ad:992c:4856:9caa)
[19:10:57] *** Quits: f__ (~f@2607:f598:bbda:2e0:adfc:4d8d:ec3e:40d6) (Remote host closed the connection)
[19:13:19] *** Quits: stefanos82 (~stefanos8@31-14-125.netrun.cytanet.com.cy) (Quit: Leaving)
[19:14:08] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[19:14:08] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[19:14:08] *** Joins: wroathe (~wroathe@user/wroathe)
[19:19:09] *** Quits: Guest38 (~Guest38@188.147.98.147.nat.umts.dynamic.t-mobile.pl) (Quit: Client closed)
[19:26:07] *** Quits: jtmusky (~jtmusky@104-1-122-97.lightspeed.okcbok.sbcglobal.net) (Quit: Bye)
[19:30:35] *** Joins: vitali64 (~vitali64@user/vitali64)
[19:30:51] <vitali64> hi
[19:31:19] <vitali64> how do i create variable containing strings?
[19:34:38] *** Quits: frost (~frost@user/frost) (Ping timeout: 250 seconds)
[19:34:39] *** Joins: inlight (~n0ise@user/inlight)
[19:37:23] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.236)
[19:39:13] <twkm> string is a data format.  generally you provide an array large enough to hold the string, then initialize or copy the string into it.  sometimes allocated storage is preferred in which case you cannot initialize the storage but you can copy a string into it.
[19:39:52] *** Joins: FluffyMask (~masque@user/fluffymask)
[19:39:52] <clarity> char a[]="strings"; // a is a variable containing strings
[19:42:47] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[19:43:27] *** Quits: reedrichards (~f@2607:f598:bbda:2e0:90ad:992c:4856:9caa) (Remote host closed the connection)
[19:43:44] *** Joins: reedrichards (~f@2607:f598:bbda:2e0:c56b:cad5:e2d5:ff91)
[19:44:00] *** Quits: Viewday115 (~Viewday@user/viewday) (Quit: Ping timeout (120 seconds))
[19:44:02] <pragma-> one string.
[19:44:05] <pragma-> well.
[19:44:18] <pragma-> you could say its 8 strings
[19:44:20] *** Joins: Viewday115 (~Viewday@user/viewday)
[19:44:31] *** Joins: magla (~gelignite@55d411d7.access.ecotel.net)
[19:44:33] <clarity> Ye, I would say it's 8.
[19:45:14] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.236) (Ping timeout: 272 seconds)
[19:45:27] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.237)
[19:46:17] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[19:52:06] *** Quits: magla (~gelignite@55d411d7.access.ecotel.net) (Quit: Stay safe!)
[19:53:30] <ioxzev1z> Can someone clarify why "strings" contains 8 strings?
[19:53:48] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.237) (Ping timeout: 260 seconds)
[19:54:51] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[19:55:26] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.238)
[19:55:34] <fizzie> It contains the strings "strings", "trings", "rings", "ings", "ngs", "gs", "s" and "".
[19:55:51] <fizzie> (Depending on where you start looking.)
[19:56:02] <clarity> (It contains them all even if you don't look)
[19:56:13] *** Joins: xy0_ (~xy0@user/xy0)
[19:56:23] <pragma-> we are all one.
[19:56:32] <clarity> meow.
[19:56:32] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[19:56:48] <pragma-> settle down schrodinger.
[19:57:01] <vitali64> thanks
[19:57:26] *** Joins: reset (~reset@user/reset)
[19:57:27] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 260 seconds)
[19:57:35] *** Quits: Jong (~Jong@2620:10d:c090:400::5:565e) (Ping timeout: 252 seconds)
[19:58:04] *** Quits: vitimiti (~Celtor@2a02:c7e:b41:3500:6e96:16d7:589e:e993) (Remote host closed the connection)
[19:58:15] *** Joins: orestarod (~orestarod@2a02:2149:8a3f:4a00:ac3e:fdb9:cec1:9bb9)
[19:59:11] <fizzie> ,cc -O2 char *a = "strings", *b = "trings", *c = "rings", *d = "ings", *e = "ngs", *f = "gs", *g = "s", *h = ""; printf("%td %td %td %td %td %td %td", b-a, c-b, d-c, e-d, f-e, g-f, h-g); // just checking
[19:59:13] <candide> fizzie: 1 1 1 1 1 1 -7
[19:59:14] *** Joins: vitimiti (~Celtor@2a02:c7e:b41:3500:6e96:16d7:589e:e993)
[19:59:36] *** Joins: freakazoid12345 (~matt@2603-9000-cf03-86c3-a49d-ba0a-a00c-69aa.inf6.spectrum.com)
[20:01:22] <vitali64> char a[] = { "s", "t", "r", "i", "n", "g", "s" }; /* right? */
[20:02:07] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.238) (Ping timeout: 260 seconds)
[20:02:11] <twkm> no.
[20:02:15] <vitali64> ok
[20:02:19] *** Quits: freakazoid343 (~matt@2603-9000-cf03-86c3-a49d-ba0a-a00c-69aa.inf6.spectrum.com) (Ping timeout: 256 seconds)
[20:02:40] <twkm> you are missing the terminator, a null character aka 0 or '\0'.
[20:03:13] *** Quits: _LordJohn (~lordjohn@l37-194-102-53.novotelecom.ru) (Read error: Connection reset by peer)
[20:03:26] <pragma-> and those should be 's', 't', ...
[20:03:30] <pragma-> or just "strings"
[20:04:21] <pragma-> and please don't right hexadecimal just to look cool.
[20:04:25] <pragma-> GOD! WRITE!
[20:04:45] <pragma-> I thought "write" clearly in my mind! My fingers betrayed me!
[20:04:45] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.236)
[20:04:59] <fizzie> Just to look 0xc001.
[20:05:06] *** Joins: meator (~meator@user/meator)
[20:06:27] *** Quits: dave0 (~dave0@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[20:07:38] *** Parts: meator (~meator@user/meator) ()
[20:10:51] <pragma-> I've seen char a[] = { 0x73, 0x74, ... } too many times
[20:12:06] *** Joins: joji (~jojo@86.4.72.180)
[20:12:59] <vitali64> twkm: ok
[20:13:08] <vitali64> char a[] = { "s", "t", "r", "i", "n", "g", "s", "" }; /* right? */
[20:13:15] * pragma- mutters.
[20:14:16] <omegatron> still wrong - you need to use single quotes ; and '' is NOT 0x00
[20:14:22] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.236) (Ping timeout: 272 seconds)
[20:14:24] *** Joins: h4k1m0u (~h4k1m0u@2001:861:3146:5890:785d:bafe:892c:ea59)
[20:14:25] * pragma- mutters.
[20:14:29] <omegatron> =D
[20:14:46] <omegatron> I have waited for that reaction ..
[20:15:23] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.237)
[20:16:42] <h4k1m0u> Hi, just to be sure, does `getprotobynumber()` get as an argument a `addrinfo.ai_socktype`? (I tend to confuse socktype with addrinfo.protocol
[20:16:49] *** Quits: rgrinberg (~textual@177.248.158.166) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:19:28] *** Quits: virmire (~Virmire@p200300cfc71981017ff3a2049d66781f.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[20:20:07] *** Joins: virmire (~Virmire@p200300cfc71981017ff3a2049d66781f.dip0.t-ipconnect.de)
[20:20:44] *** Quits: metabulation (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[20:21:34] <omegatron> h4k1m0u: man 3 getprotobynumber   should tell you
[20:22:23] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.237) (Ping timeout: 256 seconds)
[20:23:07] *** Quits: zer0x (~zer0x@58.186.50.203) (Ping timeout: 260 seconds)
[20:23:48] <h4k1m0u> omegatron, it didn't say that exactly (already checked on https://linux.die.net/man/3/getprotobynumber)
[20:24:56] <omegatron> ???  just to be clear, my man page tells me:   struct protoent *getprotobynumber(int proto) ;
[20:25:11] <omegatron> so, in my case the answer would be: neither, it expects an 'int'
[20:26:40] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.238)
[20:26:42] <omegatron> otherwise, I don't understand your question at all and you might want to rephrase it
[20:26:52] <h4k1m0u> Both ai_protocol and ai_socktype are ints too, plus I've seen 'tcp' and 'udp' mentioned in /etc/protocols
[20:30:49] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[20:30:51] <h4k1m0u> ok I'll rephrase it. I've used `getaddrinfo()` to connect to a host, then I got a chained list of addrinfo structures. These structures have both ai_protocol and ai_socktype as members (I know they can be used afterwards to create a socket with `socket()`). So my question is:  if I wanted to know the name (string) of the protocol returned, which
[20:30:52] <h4k1m0u> one of `ai_socktype` and `ai_protocol` I have to pass to `getprotobynumber()`?
[20:33:13] <omegatron> my guess would be ai_protocol  ,  since the function is called  get PROTO bynumber
[20:33:14] *** Quits: cuhela (~cuhela@188.119.45.227) (Ping timeout: 246 seconds)
[20:33:36] <omegatron> and looking at the definition of addrinfo in /usr/include/netdb.h ..
[20:33:54] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00)
[20:34:00] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[20:34:21] <omegatron> explained here : https://man7.org/linux/man-pages/man3/getaddrinfo.3.html
[20:34:55] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Client Quit)
[20:34:59] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.238) (Ping timeout: 246 seconds)
[20:37:12] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.238)
[20:37:21] <h4k1m0u> yeah thanks, I had that page opened... I actually was wondering because in my case the name of the protocol returned was icmp
[20:38:08] <seifeslimene> someone explain to me this example http://tpcg.io/QO7XKU
[20:38:09] <candide> Title of seifeslimene's link: Online C Compiler
[20:38:59] <seifeslimene> why Address of p is same as value at address p + 1
[20:39:02] <seifeslimene> ?
[20:40:10] <Bou> it... isn't?
[20:40:25] <vdamewood> seifeslimene: That code is using the wrong format specifiers.
[20:41:01] <pragma-> it could be the same. undefined behavior is kinda funny like that.
[20:41:05] <seifeslimene> I still want explanation.
[20:43:55] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.238) (Ping timeout: 256 seconds)
[20:44:32] <seifeslimene> even when I chaneg format specifier to %pAddress of p is 0x7ffd0a427a04
[20:44:39] <seifeslimene> Value at address *(p + 1) is 0xa427a04
[20:44:59] <seifeslimene> it's the same
[20:45:09] <vdamewood> You're still dealing with undefined behavior.
[20:45:25] *** Quits: h4k1m0u (~h4k1m0u@2001:861:3146:5890:785d:bafe:892c:ea59) (Quit: Client closed)
[20:45:28] <vdamewood> *(p + 1) invokes undefined behavior.
[20:46:11] <seifeslimene> https://www.youtube.com/watch?v=zuegQmMdy8M&ab_channel=freeCodeCamp.org please take a look here!
[20:46:12] <candide> Title of seifeslimene's link: Pointers in C / C++ [Full Course] - YouTube
[20:46:22] <seifeslimene> It should print a random value!
[20:46:35] <seifeslimene> why for my case it prints the same value
[20:46:44] <seifeslimene> any explanation to this!
[20:46:47] <seifeslimene> ?
[20:47:03] <vdamewood> It doesn't print a random value. It prints an undefined value.
[20:47:18] <pragma-> https://pics.onsizzle.com/tour-of-accounting-5-are-nine-nine-nine-nine-nine-24898414.png
[20:48:02] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.238)
[20:48:05] <seifeslimene> I still don't understand
[20:48:13] <seifeslimene> !
[20:49:17] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:6d4c:38a4:18b7:4b48) (Ping timeout: 252 seconds)
[20:51:00] <vdamewood> You asked for a random value. You got a random value.
[20:51:21] <seifeslimene> it's the same as p!!!
[20:51:27] <vdamewood> So?
[20:51:51] <seifeslimene> it should be random? but everytime I got the same value as p!
[20:51:56] <Bou> in reality, your compiler is probably adding a frame pointer so it knows how much to remove from the stack after the function ends
[20:52:17] <Bou> and since a is (might be) the first thing on your stack those values might be the same
[20:52:52] <Bou> as far a C is concerned this is all "random" / undefined though
[20:53:09] *** Joins: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net)
[20:53:28] <vdamewood> Those details have to do with how C function calls translate to assembly language.
[20:54:57] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[20:55:05] <pragma-> if it even does
[20:55:32] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.238) (Ping timeout: 272 seconds)
[20:55:52] <Bou> maybe it keeps the stack in an SQL database :^)
[20:56:33] <vdamewood> Maybe there is no 'stack'.
[20:57:16] <seifeslimene> Please help me..
[20:58:06] <seifeslimene> https://www.youtube.com/watch?v=zuegQmMdy8M&ab_channel=freeCodeCamp.org I want to have the same behavior like the one here
[20:58:39] <vdamewood> That video is more than 3 hours long.
[20:58:47] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.238)
[20:58:59] <seifeslimene> no just minute 21
[20:59:04] <seifeslimene> to minute 22
[20:59:07] <seifeslimene> that's it
[20:59:13] <twkm> yeah, we guessed that ...
[21:00:56] *** Quits: Matt|home (~matt@adsl-74-233-58-122.mia.bellsouth.net) (Ping timeout: 260 seconds)
[21:01:38] <vdamewood> There isn't anything in minutes 21 or 22 to replicate.
[21:01:51] *** Quits: malina (~malina@user/malina) (Ping timeout: 260 seconds)
[21:03:12] <Bou> the first thing I heard was "for this particular compiler", so at least he's clear about the UB
[21:03:15] <seifeslimene> oh my god, ok value at adress p+1 is some random value in the video but with me it's the same value of p means that guys should have 2750832
[21:03:22] <seifeslimene> !
[21:04:06] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[21:05:24] *** Joins: malina (~malina@user/malina)
[21:05:35] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.238) (Ping timeout: 260 seconds)
[21:06:12] *** Joins: aghast (~aghast@2607:fb91:bd0b:1329:a0d6:4979:f73c:e2ec)
[21:06:27] <vdamewood> Oh, I know the reason why.
[21:07:22] <seifeslimene> @bou there is no mention of "for this particular compiler" between minute 21 and 22!
[21:08:21] *** Quits: pert (~pert@fsf/member/pert) (Quit: pert)
[21:08:43] *** Joins: magla (~gelignite@55d411d7.access.ecotel.net)
[21:09:34] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.238)
[21:10:04] <vdamewood> Or maybe not.
[21:14:29] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:15:35] <vdamewood> I was thinking it might have something to do with accessing only sizeof(int) bytes when sizeof(int*) is twice as large, but nope. That doesn't work out.
[21:16:13] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.238) (Ping timeout: 256 seconds)
[21:17:02] <vdamewood> Anyway, if this video has you printing ints as %d, I doubt the quality of the video.
[21:17:08] <vdamewood> err printing *ints
[21:17:15] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 260 seconds)
[21:18:05] *** Joins: pert (~pert@2603-900a-ff00-001c-5de7-3403-ec7b-d597.inf6.spectrum.com)
[21:18:10] *** Quits: pert (~pert@2603-900a-ff00-001c-5de7-3403-ec7b-d597.inf6.spectrum.com) (Remote host closed the connection)
[21:18:28] <seifeslimene> but even when I printed it with %p it's the same!
[21:18:39] *** Quits: reedrichards (~f@2607:f598:bbda:2e0:c56b:cad5:e2d5:ff91) (Remote host closed the connection)
[21:18:44] *** Joins: f__ (~f@2607:f598:bbda:2e0:5789:aaa9:3ea8:4aed)
[21:19:12] <vdamewood> well, on my systme it prints 0.
[21:19:17] <vdamewood> system
[21:20:00] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.238)
[21:20:38] <vdamewood> Anyway, C doesn't require that any particular value show up when you access an invalid memory location like that. It could be anything. It just happens to be what you see.
[21:22:55] *** Joins: trev (~trev@user/trev)
[21:23:48] *** Quits: ymwm (~yingmanwu@240e:37a:40e5:1400:b1c4:b55c:61e4:2b2d) (Ping timeout: 240 seconds)
[21:24:10] <vdamewood> This might be useful, but it's going into details outside of C: https://godbolt.org/z/Kq9dMPd1r
[21:25:38] *** Joins: thundersmuggler (~thundersm@mlsrj200152103p148.static.mls.com.br)
[21:26:39] <thundersmuggler> hello?
[21:26:56] *** Joins: auk (auk@gateway/vpn/protonvpn/auk)
[21:27:03] *** Quits: ntdll_ (~ntdll@user/ntdll) (Quit: WeeChat 3.2)
[21:27:08] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.238) (Ping timeout: 260 seconds)
[21:27:22] <vdamewood> Olleh.
[21:27:50] *** Quits: knusbaum (~knusbaum@hpnd-dhcp-173-46-246-97.bloombb.net) (Ping timeout: 272 seconds)
[21:28:19] *** Joins: knusbaum (knusbaum@gateway/vpn/protonvpn/knusbaum)
[21:30:26] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.237)
[21:36:14] *** Quits: inlight (~n0ise@user/inlight) (Ping timeout: 246 seconds)
[21:36:56] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.237) (Ping timeout: 246 seconds)
[21:36:56] *** Joins: ymwm (~yingmanwu@240e:37a:40e5:1400:b1c4:b55c:61e4:2b2d)
[21:38:19] *** Quits: cosimone (~user@93-47-228-79.ip115.fastwebnet.it) (Remote host closed the connection)
[21:38:35] *** Joins: kurahaupo (~kurahaupo@pa49-182-76-6.pa.qld.optusnet.com.au)
[21:39:13] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.236)
[21:39:41] *** Joins: inlight (~n0ise@user/inlight)
[21:39:52] *** Quits: joji (~jojo@86.4.72.180) (Ping timeout: 272 seconds)
[21:40:43] *** Joins: soapsudsxx (~soapsudsx@209.221.40.154)
[21:41:13] *** Joins: faLUKE (~paolo@host-79-49-110-144.retail.telecomitalia.it)
[21:42:19] <faLUKE> hello. Is there a way to know, with valgrind where exactly in the program a "definetly lost" memory has been allocated?
[21:43:42] *** Joins: zsoltiv_ (~zsoltiv@85-235-95-111.naracom.hu)
[21:44:16] <kurahaupo> faLUKE: It should report that automatically when the program finishes
[21:44:18] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.236) (Ping timeout: 272 seconds)
[21:44:18] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 272 seconds)
[21:44:29] <twkm> are the docs on fire?
[21:45:09] * kurahaupo adds methanol and a match
[21:45:46] <faLUKE> kurahaupo: it only says "==81452==    definitely lost: 208 bytes in 2 blocks"  . But I can't know where in the program were those bytes were allocated
[21:46:44] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.237)
[21:46:44] *** Quits: inlight (~n0ise@user/inlight) (Ping timeout: 246 seconds)
[21:47:00] *** Joins: xy0__ (~xy0@user/xy0)
[21:48:21] <seifeslimene> I use clang
[21:48:35] <Bou> and it doesn't say "Rerun with --leak-check=full to see details of leaked memory"?
[21:48:46] <seifeslimene> it gives me the same result as the other guy
[21:48:59] <seifeslimene> clang llvm compiler
[21:49:02] *** Joins: inlight (~n0ise@user/inlight)
[21:49:06] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[21:49:07] *** Joins: Akuli (~Akuli@87-94-109-69.bb.dnainternet.fi)
[21:49:09] <seifeslimene> instead of gnu compiler
[21:49:13] *** Joins: cosimone (~user@93-47-228-79.ip115.fastwebnet.it)
[21:49:39] *** Quits: xy0_ (~xy0@user/xy0) (Ping timeout: 256 seconds)
[21:49:45] *** Quits: inlight (~n0ise@user/inlight) (Max SendQ exceeded)
[21:50:13] *** Joins: Ox000 (~jy@74.215.12.46)
[21:50:16] *** Joins: inlight (~n0ise@user/inlight)
[21:51:00] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[21:51:10] <seifeslimene> @vdamewood it gives me 0 as well in codeblocks using clang llvm compiler
[21:51:38] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.237) (Ping timeout: 260 seconds)
[21:52:34] *** Joins: oxfuxxx (~oxfuxxx@193.9.112.237)
[21:55:39] *** Quits: novns (~novns@user/novns) (Quit: ZNC - https://znc.in)
[21:55:48] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 240 seconds)
[21:57:33] *** Joins: novns (~novns@user/novns)
[21:59:00] *** Quits: oxfuxxx (~oxfuxxx@193.9.112.237) (Ping timeout: 240 seconds)
[22:01:11] *** Joins: ntdll (ntdll@user/ntdll)
[22:01:24] <kurahaupo> faLUKE: (1) have you read the man page for valgrind? (2) what command line options are you using? (3) Are you using shell redirections?
[22:02:59] *** Quits: kaph (~kaph@net-93-67-57-97.cust.vodafonedsl.it) (Ping timeout: 260 seconds)
[22:03:11] *** Joins: jesopo (~jess@libera/staff/cat/jess)
[22:03:18] *** jesopo is now known as jess
[22:04:14] *** Joins: zeenk (~zeenk@2a02:2f04:a313:d600:8d26:ec9f:3ff6:fc94)
[22:06:11] <faLUKE> kurahaupo: (1) yes (2) valgrind myprogran (3) no
[22:07:12] *** Quits: wroathe (~wroathe@user/wroathe) (Quit: Lost terminal)
[22:07:39] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[22:07:58] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[22:08:16] <kurahaupo> It's been a long time since I used valgrind so I'm a bit fuzzy on details, but I seem to recall that you need to tell it you want the detailed memory report, rather than, say, filedescriptors
[22:08:57] <kurahaupo> valgrind --leak-check=full …
[22:09:17] <faLUKE> kurahaupo: from what I see it's not possible to know where the leaked mem has been allocated
[22:09:17] <Bou> and compile with -g to get line numbers
[22:09:33] <faLUKE> Bou: mmmh
[22:10:36] <kurahaupo> Bou: good point.
[22:10:36] <kurahaupo> faluke: Valgrind can capture full stack traces for "interesting" events, so that seems a dubious assertion
[22:11:41] <kurahaupo> It's not rocket science to convert numerical addresses back into code line numbers
[22:12:00] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[22:12:06] <faLUKE> <kurahaupo> It's not rocket science to convert numerical addresses back into code line numbers <--- that's what I suspected
[22:12:25] *** Joins: fria (~siesta@112.207.33.219)
[22:12:31] <fria> hello
[22:12:51] *** Quits: fe23 (~fe23@2409:8a34:463:e5d0:b430:e770:606:cfcf) (Quit: fe23)
[22:12:58] <kurahaupo> fria: Welcome to #C, please state the nature of the coding emergency
[22:13:27] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[22:13:28] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[22:13:28] *** Joins: wroathe (~wroathe@user/wroathe)
[22:14:28] <fria> what do you a function(angle) returns wrap 0 to 360
[22:14:56] <fria> what is the name of the function?
[22:14:57] <kurahaupo> fria: Sounds like you want modulus
[22:15:10] <kurahaupo> fmod?
[22:15:16] <Wulf> fria: fria % 360?
[22:16:04] <fria> what if you input negative values?
[22:16:12] <kurahaupo> Wulf: Only works for integers
[22:16:27] <fria> i want it to output 0 .. 360
[22:16:29] *** Quits: MajorBiscuit (~MajorBisc@86-88-79-148.fixed.kpn.net) (Ping timeout: 246 seconds)
[22:16:47] <fria> it is angle wrap
[22:17:03] <Wulf> fria: you mean [0.0, 360.0)?
[22:17:07] <fria> yes
[22:17:25] <kurahaupo> fria: (x%360+360)%360 will take care of negatives
[22:17:30] <Wulf> fria: fmod(fria, 360.0)
[22:17:57] <Wulf> oh, that doesn't handle negatives nicely.
[22:18:39] <kurahaupo> Stupid floating point designed by a bunch of engineers instead of by mathematicians
[22:19:10] <fria> cause i want to make a turn(robot,angle) funtion it adds the angle to robot->heading then constrain it to [0,360)
[22:19:12] <kurahaupo> IEEE "remainder" ← broken by design
[22:19:23] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[22:19:54] <Wulf> fria: restrict your robot to integer degress. Or even better right angles.
[22:20:15] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[22:20:36] <kurahaupo> Then C 99 mandated that C has to follow the broken "division truncates towards zero", when before that it was optional. GRRRR
[22:20:48] *** Quits: vitali64 (~vitali64@user/vitali64) (Ping timeout: 260 seconds)
[22:22:33] *** Joins: vitali64 (~vitali64@user/vitali64)
[22:22:35] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[22:23:20] <kurahaupo> float heading, turn; heading+=turn; if (heading<0) heading+=360.0; else if (heading>=360.0) heading-=360.0;
[22:23:51] <sham1> kurahaupo: where would you truncate towards
[22:24:14] <kurahaupo> sham1: -∞
[22:25:09] <Wulf> sham1: -18 / 4 should be -5, and -18 % 4 should be +2
[22:25:23] <kurahaupo> sham1: That way the corresponding remainder would actually be useful as mathematical modulus
[22:25:28] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:d99d:3b0b:7662:bc00)
[22:25:29] *** Quits: nostar (~nostar@68.51.221.108) (Quit: Leaving)
[22:25:35] <sham1> But it's not a modulus
[22:26:19] <Wulf> ,cc printf("%d %d", -18 / 4, -18 % 4);
[22:26:21] <candide> Wulf: -4 -2
[22:26:27] <fria> ,cc double ConstrainAngle(double a) { double t=fmod(a,360.0); if(t<0) t+=360.0; return t; } printf("%lf",ConstrainAngle(-180));
[22:26:29] <candide> fria: 180.000000
[22:26:52] <fria> hmm is that correct?
[22:27:12] <kurahaupo> fria: looks right
[22:27:27] <sham1> Yeah. Although I'd probably use fixed-point arithmetic instead
[22:27:31] <fria> ,cc double ConstrainAngle(double a) { double t=fmod(a,360.0); if(t<0) t+=360.0; return t; } printf("%lf",ConstrainAngle(-90));
[22:27:32] <candide> fria: 270.000000
[22:27:43] <sham1> So maybe having like 10ths or 100ths of degrees as your maximum precision
[22:28:00] <kurahaupo> I'd use radians
[22:28:08] *** Joins: oxfuxxx (~oxfuxxx@2a01:cb18:5c0:cb00:6530:dd29:f015:cdc7)
[22:28:17] <sham1> Also that
[22:28:57] *** Joins: kaph (~kaph@151.47.165.211)
[22:28:59] <fria> is there a shorter more standard way?
[22:29:34] <kurahaupo> ,cc fmod(-100.0, 3.6E2);
[22:29:37] <candide> kurahaupo: Success (no output).
[22:29:53] *** Quits: malina (~malina@user/malina) (Ping timeout: 256 seconds)
[22:29:54] <kurahaupo> ,cc double x = fmod(-100.0, 3.6E2);
[22:29:56] <candide> kurahaupo: no output: x = -100
[22:30:04] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[22:30:12] <kurahaupo> fria: ^^^ that's why not
[22:30:48] <APic> Success!
[22:30:51] <fria> yes kurahaupo i need [0..360)
[22:31:20] <kurahaupo> fria: I've been complaining about the lack of a mathematically useful modulus operation for over 30 years. I'm guessing it's not going to get fixed any time soon
[22:31:51] <fria> oh ok
[22:32:34] <APic> kurahaupo: Have You tried getting in some Kind of Standard Committee?
[22:33:22] <kurahaupo> APic: I couldn't find a sponsor list time I tried
[22:33:26] <APic> Good.
[22:33:30] <kurahaupo> *last time
[22:33:44] <fria> maybe that's the goodness of c... so newbie will make their own implementation...
[22:34:04] *** jess is now known as j
[22:34:10] <APic> Indeed.
[22:34:29] *** Quits: anshupatia (uid29854@id-29854.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[22:34:37] * APic likes https://bellard.org/tcc/
[22:34:39] <candide> Title of APic's link: TCC : Tiny C Compiler
[22:34:48] *** Quits: oxfuxxx (~oxfuxxx@2a01:cb18:5c0:cb00:6530:dd29:f015:cdc7) (Ping timeout: 260 seconds)
[22:34:54] <fria> yes bellard is a genius hahaha
[22:35:16] <fria> i like his qemu
[22:35:24] <APic> That, too.
[22:35:27] <APic> Aaaaaand his ffmpeg.
[22:36:35] <fria> but lisp is great not counting the parenthesis
[22:37:05] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[22:37:19] * APic smiles magically.
[22:37:29] <fria> thanks for the help
[22:37:32] <kurahaupo> When one actually tried to write a compiler, one soon discovers several horrors that are baked so deeply into the language that they're never likely to change. First off, a random identifier might start an assignment statement  OR  a declaration, depending on which symbol table you find it in.
[22:37:33] *** Quits: kaph (~kaph@151.47.165.211) (Read error: Connection reset by peer)
[22:38:28] *** Quits: alch (~alch@151.36.125.37) (Read error: Connection reset by peer)
[22:38:56] *** Joins: kaph (~kaph@151.47.165.211)
[22:39:02] <APic> Pascal-Compilers can be built quite easy.
[22:39:10] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: CodePoint struts into the sunset on the beach.)
[22:39:10] <APic> But the Language pains in the Arses.
[22:39:14] <fria> i want to learn lisp but got dizzy of ( ) so i stick with c
[22:39:27] <APic> s/easy/easily/
[22:39:28] <APic> Sorry.
[22:39:41] <APic> ,o0(Need. To. Recreate. #Language-Comparisons)
[22:39:53] <APic> Thanks a Bunch, candide!
[22:39:54] <APic> srsly
[22:40:03] <candide> Think nothing of it, A﻿Pic
[22:40:08] <APic> Will not.
[22:40:14] *** Joins: msk (~Thunderbi@89.205.124.62)
[22:40:36] *** Joins: entbsagtc^ (~entbsagtc@c-24-99-107-170.hsd1.ga.comcast.net)
[22:40:38] <fria> pascal's language design is one pass what you call that
[22:40:59] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[22:40:59] <fria> one pass compiling?
[22:41:09] <APic> No Idea. Ask the Wirths.
[22:41:25] *** j is now known as jess
[22:41:43] <fria> hahaha
[22:41:48] <APic> Someone told me that actually Wilhelm Mermi actually created Pascal for him.
[22:41:49] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[22:41:58] *** Joins: alch (~alch@151.82.123.99)
[22:42:04] <APic> Very long Times ago.
[22:43:08] <fria> i got a problem in wrapping numbers in cartersian coordinates
[22:43:42] <fria> i want graphics to smoothly wrap on the other side of the screen
[22:44:28] <fria> i can display it but other formulas cant wrap like distance formula
[22:45:05] *** Quits: cdman (~dcm@user/dmc/x-4369397) (Quit: Leaving)
[22:45:17] <fria> how to wrap distance formula just like it is on a sphere
[22:45:19] *** kurahaupo is now known as \r\n
[22:45:27] *** \r\n is now known as kurahaupo
[22:45:40] <fria> but displayed on screen 2d
[22:47:52] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[22:48:15] *** Quits: ekathva (~ekathva@2001:999:250:8f1f:1c8b:1b42:a058:2b8b) (Ping timeout: 260 seconds)
[22:48:52] *** Joins: korg815 (~korg815@user/korg815)
[22:49:08] *** Quits: ymwm (~yingmanwu@240e:37a:40e5:1400:b1c4:b55c:61e4:2b2d) (Remote host closed the connection)
[22:49:24] *** Joins: ymwm (~yingmanwu@240e:37a:40e5:1400:b1c4:b55c:61e4:2b2d)
[22:49:47] *** Joins: nuno (~user@83.223.240.121)
[22:49:51] <fria> for ex screen x id 0..319 and you got 318..320 so 320 will wrap to 0 then what is the new distance formula must return 3
[22:50:07] <fria> for ex screen x is 0..319 and you got 318..320 so 320 will wrap to 0 then what is the new distance formula must return 3
[22:52:01] <fria> not the other way cause it will return 319
[22:52:45] <fria> will i use vectors ?
[22:52:58] <fria> not just a line?
[22:53:16] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-a49d-ba0a-a00c-69aa.inf6.spectrum.com)
[22:54:35] <fria> or i'll just compute distance before wrapping values?
[22:54:52] <fria> hmmm
[22:54:52] <Xgc> APic: Have you found any historical documentation on that (Pascal / Mermi)?  That's the first I've heard the name.  I don't remember Wirth mentioning the name in any development notes, during the Pascal / Modula / Oberon days.  I suspect your source was mistaken.
[22:55:20] *** Joins: ekathva (~ekathva@2001:999:250:8f1f:d889:d0af:4f1e:f976)
[22:55:47] <APic> Xgc: No, my Ex-Colleagues once told me that the Drunkard Mermi told someone or something.
[22:55:48] *** Quits: freakazoid12345 (~matt@2603-9000-cf03-86c3-a49d-ba0a-a00c-69aa.inf6.spectrum.com) (Ping timeout: 260 seconds)
[22:55:54] <Bou> fria: if your coordinates wrap around, you'll always have 2 distances, and it sounds like you want the lowest one?
[22:55:56] <APic> He still drove Car, and bribed the Cops.
[22:56:09] <Xgc> APic: People say lots of things when drunk.
[22:56:12] <APic> Indeed.
[22:56:30] <APic> But he made Lots of Money with his Cobol for Ticket Online.
[22:56:51] <APic> The Java-TO30 epically failed then. 😎
[22:58:33] *** Quits: trev (~trev@user/trev) (Quit: trev)
[22:59:59] <fria> here is the source if you can help me https://github.com/rald/CPlayBotDev
[23:00:27] <fria> it is a simple bot simulation
[23:00:37] <fria> a bot with a radar
[23:00:53] *** Quits: cosimone (~user@93-47-228-79.ip115.fastwebnet.it) (Read error: Connection reset by peer)
[23:01:47] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 260 seconds)
[23:01:52] <fria> my problem is i want to make a blue line from scanner bot to a scanned bot but wrapping makes it hard
[23:01:54] * APic cannot help You.
[23:02:47] <fria> any one?
[23:03:02] <fria> oww sorry to hear that APic
[23:03:12] <APic> *shrug*
[23:03:16] <APic> Not my De{b,p}t.
[23:03:47] <fria> games are hard to code
[23:04:49] <fria> bou: can you help me?
[23:06:18] *** Quits: pyook (~pyook@user/puke) ()
[23:07:23] *** Quits: nuno (~user@83.223.240.121) (Ping timeout: 260 seconds)
[23:09:16] <fria> too quiet here i can hear my blood flowing
[23:09:43] <kaichiuchi> that's probably bad.
[23:09:56] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[23:10:31] <Bou> fria: I can have a look
[23:10:39] <fria> https://github.com/rald/CPlayBotDev/tree/main/CPlayBot
[23:10:40] <candide> Title of fria's link: CPlayBotDev/CPlayBot at main · rald/CPlayBotDev · GitHub
[23:10:41] <fria> here
[23:11:04] <Bou> I see 100 robots sort of "wiggling" and bouncing against the borders, is that supposed to happen?
[23:11:22] <fria> yes
[23:11:40] <fria> they must wrap in screen
[23:12:08] *** Quits: ekathva (~ekathva@2001:999:250:8f1f:d889:d0af:4f1e:f976) (Quit: Leaving)
[23:12:10] *** Quits: foul_owl (~kerry@23.82.193.88) (Ping timeout: 260 seconds)
[23:12:25] <fria> but the scanning has a problem
[23:12:57] <APic> ,o0(Daleks)
[23:13:07] <APic> candide: Thanks!
[23:13:09] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Remote host closed the connection)
[23:13:13] <fria> i want to make a line from bot1 to bot2 if bot2 is in sight of bot1
[23:13:14] <candide> Not a problem, A﻿Pic
[23:13:53] *** Quits: ymwm (~yingmanwu@240e:37a:40e5:1400:b1c4:b55c:61e4:2b2d) (Ping timeout: 260 seconds)
[23:13:55] <APic> candide: ♥
[23:13:56] <candide> No such factoid '♥'; /msg A﻿Pic \♥ -channel #c: invalid escape sequence: \â¥ at /home/compiler/pbot/bin/../lib/PBot/Core/Commands/Factoids.pm line 1165.
[23:14:01] <APic> Darn.
[23:14:08] *** Quits: freakazoid343 (~matt@2603-9000-cf03-86c3-a49d-ba0a-a00c-69aa.inf6.spectrum.com) (Read error: Connection reset by peer)
[23:14:09] <fria> the sight is in the red sector
[23:14:34] <fria> candide: what is the time?
[23:14:41] <candide> f﻿ria, That is a slightly perceptive question.
[23:14:43] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-a49d-ba0a-a00c-69aa.inf6.spectrum.com)
[23:14:53] <APic> candide: Highly.
[23:14:54] <candide> No such factoid 'Highly'; Found one factoid in #c containing 'Highly': yru is y, r, and u are very convenient shorthands for why, are, and you. their use in this channel is highly encouraged.
[23:14:56] <fria> candide: what is the time there?
[23:14:56] *** Quits: inlight (~n0ise@user/inlight) (Quit: WeeChat 3.3)
[23:15:03] <candide> f﻿ria, That is an absolutely interesting question.
[23:15:10] * APic misses the twkms.
[23:16:22] <fria> but the problem is with wrapping
[23:16:51] *** Joins: foul_owl (~kerry@23.82.193.88)
[23:17:23] *** Joins: ymwm (~yingmanwu@240e:37a:40e5:1400:b1c4:b55c:61e4:2b2d)
[23:17:41] *** Joins: savolla (~quassel@95.10.206.246)
[23:17:54] <fria> did you get my problem bou?
[23:17:56] *** Quits: kaph (~kaph@151.47.165.211) (Read error: Connection reset by peer)
[23:18:38] <fria> what if it is partially wrap the half is at the other side
[23:19:00] <fria> i cant detect it
[23:19:15] <Bou> it looks like ComputeDistance doesn't handle borders well either
[23:19:15] <fria> i cant make a line
[23:19:48] <fria> yes bou compute distance is just a distance formula
[23:20:39] <Bou> but what's the distance from (1,1) to (799,599), surely not sqrt(798*798 + 598 * 598)
[23:22:26] <fria> dx = x2 - x1
[23:22:36] <fria> dy = y2 - y1
[23:22:51] *** Quits: ymwm (~yingmanwu@240e:37a:40e5:1400:b1c4:b55c:61e4:2b2d) (Remote host closed the connection)
[23:22:54] <fria> dist=sqrt(dx*dx+dy*dy)
[23:23:13] <fria> is that correct?
[23:23:35] *** Quits: savolla (~quassel@95.10.206.246) (Remote host closed the connection)
[23:23:36] *** Quits: auk (auk@gateway/vpn/protonvpn/auk) (Quit: Leaving)
[23:24:13] *** Joins: kaph (~kaph@151.35.76.11)
[23:24:17] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[23:24:32] <kurahaupo> Bou: Gaussian or Manhattan?
[23:24:39] *** Quits: LuKaRo_ (~LuKaRo@p57b15bd8.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[23:24:40] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[23:24:45] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[23:24:47] <Bou> fria: or x2 -x1, or `x2 - (x1 - 800)` if it wraps around?
[23:25:23] <seifeslimene> >c int a = 5;
[23:25:41] <seifeslimene> c> int a = &p
[23:26:25] <kurahaupo> seifeslimene: A pointer value cannot be assigned to an int object (without involving UB)
[23:26:35] *** Quits: jdurand (~jdurand@user/jdurand) (Quit: Leaving)
[23:27:01] <Inline> other way around
[23:27:07] *** Quits: e36freak (~e36freak@user/e36freak) (Ping timeout: 256 seconds)
[23:27:07] <fria> is there a general solution for this wrapping thing?
[23:27:14] <Inline> int *p = &a
[23:28:22] <fria> just like they are moving on a sphere
[23:28:24] <kurahaupo> fria: Do you want the shortest distance even if it wraps over the border?
[23:28:38] <kurahaupo> fria: A torus, not a sphere
[23:28:49] <fria> ohh ok
[23:29:04] <seifeslimene> c> #ifndef craziness
[23:29:15] <seifeslimene> c> #def craziness
[23:29:17] <fria> torus it is sorry
[23:29:47] <kurahaupo> In which case, take the absolute value of difference, and if it's more than half r distance between borders, recompute as a wrap-around
[23:29:57] *** Quits: kaph (~kaph@151.35.76.11) (Read error: Connection reset by peer)
[23:31:18] *** Quits: wlemuel (~wlemuel@210.22.124.110) (Read error: Connection reset by peer)
[23:31:19] <fria> oww must be on all points i draw?
[23:31:30] *** Joins: wlemuel (~wlemuel@210.22.124.110)
[23:31:32] <fria> hmmm
[23:31:34] *** Joins: LuKaRo_ (~LuKaRo@p57b15bd8.dip0.t-ipconnect.de)
[23:31:42] <fria> it is kind a slow
[23:31:48] <kurahaupo> distance(double x1, double x2)  { double d=fabs(x1-x2); if (d*2>width) d=width-d; return d;}
[23:31:49] *** Joins: kaph (~kaph@151.35.76.11)
[23:32:05] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Ping timeout: 246 seconds)
[23:32:18] *** Quits: wlemuel (~wlemuel@210.22.124.110) (Read error: Connection reset by peer)
[23:32:36] *** Quits: mad_enz (~mad_enz@lnsm4-toronto12-50-101-118-206.internet.virginmobile.ca) (Ping timeout: 272 seconds)
[23:33:13] *** Joins: trev (~trev@user/trev)
[23:33:51] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[23:35:30] <fria> cause im plotting all points one by one to achieve wrapping i pass each one to Constrain Function before plotting
[23:36:31] *** Joins: wlemuel (~wlemuel@210.22.124.110)
[23:36:38] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[23:36:46] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[23:38:50] <fria> is there a better way for this wrapping thingy
[23:39:31] <fria> may be i'll study torus geometry 1st
[23:40:02] <fria> thanks for the key word kurahaupo
[23:40:32] <fria> it is 3:10am here
[23:40:38] <fria> im sleepy
[23:40:41] <Bou> when it wraps you need two lines, one from the original robot r1 to the wrapped robot r2, and one from the original r2 to the wrapped r1
[23:41:00] <kurahaupo> fria: It's an R² manifold, if you're looking for a mathematical name
[23:41:18] <fria> oh ok kurahaupo
[23:41:24] <kurahaupo> no wait, an S² manifold
[23:41:31] <fria> ok
[23:42:00] <fria> i dont know about manifolds
[23:42:05] <kurahaupo> as opposed to an S₂ manifold, which is a sphere
[23:42:31] <fria> my math is just basic
[23:42:46] <kurahaupo> "S" denotes a loop, R denotes an infinite  line
[23:43:03] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[23:43:21] <kurahaupo> hmm, just stick with "torus"
[23:43:25] <fria> loops makes me crazy
[23:43:48] *** Joins: badsektor (~badsektor@user/badsektor)
[23:43:49] *** Quits: vitali64 (~vitali64@user/vitali64) (Quit: Lost terminal)
[23:44:52] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[23:44:55] *** Quits: f__ (~f@2607:f598:bbda:2e0:5789:aaa9:3ea8:4aed) (Remote host closed the connection)
[23:45:13] *** Joins: f__ (~f@2607:f598:bbda:2e0:a648:17db:4595:6064)
[23:47:31] *** Quits: iomari891 (~iomari891@102.91.4.186) (Ping timeout: 256 seconds)
[23:48:39] *** Quits: LuKaRo_ (~LuKaRo@p57b15bd8.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[23:49:24] *** Quits: bebyx (~Thunderbi@user/bebyx) (Read error: Connection reset by peer)
[23:49:35] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 246 seconds)
[23:51:30] *** Quits: kaph (~kaph@151.35.76.11) (Read error: Connection reset by peer)
[23:52:16] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[23:53:38] *** Joins: LuKaRo (~LuKaRo@p4fc32a2c.dip0.t-ipconnect.de)
[23:54:54] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[23:55:35] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[23:57:27] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[23:59:23] *** Quits: thundersmuggler (~thundersm@mlsrj200152103p148.static.mls.com.br) (Ping timeout: 260 seconds)
[23:59:54] *** Joins: Oddity (~Oddity@user/oddity)
