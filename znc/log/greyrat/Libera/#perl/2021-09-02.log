[00:00:24] *** Quits: keir (~keir@user/keir) (Quit: keir)
[00:00:32] *** Quits: proller (~p@2a02:6b8:0:40c:1655:6729:d6d1:64c2) (Ping timeout: 245 seconds)
[00:01:40] *** Joins: elf_fortrez (~elf_fortr@adsl-64-237-239-250.prtc.net)
[00:03:35] *** Quits: elf_fortrez (~elf_fortr@adsl-64-237-239-250.prtc.net) (Client Quit)
[00:07:01] *** Joins: kanliot (~anliot@2600:6c5c:7000:500:a4f6:ad95:6edb:bd8d)
[00:07:28] *** Quits: kanliot (~anliot@2600:6c5c:7000:500:a4f6:ad95:6edb:bd8d) (Client Quit)
[00:08:05] *** Joins: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr)
[00:08:33] *** Joins: kanliot (~anliot@2600:6c5c:7000:500:a4f6:ad95:6edb:bd8d)
[00:12:41] *** Quits: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr) (Ping timeout: 244 seconds)
[00:14:02] <kanliot> I'm trying to use CPAN to install MPV::Simple.  however I'm getting an error, it looks like it thinks my home directory is in another user's folder. please help
[00:14:02] <kanliot> https://l.perl.bot/raw/kzl2nm
[00:14:47] <kanliot> I'm not familiar with CPAN so i'm running `cpan` after installing libpath-tiny-perl from debian buster
[00:15:12] *** Quits: GumbyPAN (cpanbot@jingo.bingosnet.org) (Ping timeout: 276 seconds)
[00:15:31] *** Joins: GumbyPAN (cpanbot@jingo.bingosnet.org)
[00:15:51] *** Quits: tag (sid271787@id-271787.tooting.irccloud.com) (Ping timeout: 276 seconds)
[00:15:51] *** Quits: Altreus (~altreus@2a03:b0c0:1:e0::439:5001) (Ping timeout: 276 seconds)
[00:16:24] *** Joins: tag (sid271787@id-271787.tooting.irccloud.com)
[00:22:27] <zgu> you seem to be running it from another user's home directory
[00:23:24] <kanliot> I changed directories. doesn't help
[00:23:28] <zgu> and cpan downloads the module in a temporary directory itself, you don't have to download it first
[00:23:48] <kanliot> is it possible libpath-tiny-perl is installed to my other user's directory?
[00:23:53] *** Joins: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr)
[00:24:00] <zgu> anything else in your environment pointing to that directory?
[00:24:33] *** Joins: XV8 (~XV8@2601:5cb:c001:50:7c79:4e14:5357:7ce1)
[00:25:29] <kanliot> yes, a few things, like XDG_DATA_HOME
[00:26:20] <zgu> is that /home/anliot/.local/share?
[00:26:41] <kanliot> yeah
[00:27:14] <zgu> probably what it's trying to use to store the cpan.pm config
[00:28:02] <kanliot> huh i should have seen that
[00:28:11] *** Quits: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr) (Ping timeout: 244 seconds)
[00:28:17] *** Joins: Altreus (~altreus@2a03:b0c0:1:e0::439:5001)
[00:28:51] <kanliot> do you know offhand what part of debian sets the XDG_* environment variables?
[00:29:28] <zgu> no idea
[00:30:04] <kanliot> ugh. looks like it's systemd-pam
[00:30:52] *** Joins: keir (~keir@user/keir)
[00:33:50] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[00:35:46] <kanliot> ok works now
[00:36:01] <kanliot> had to install the systemd virtualization tooling
[00:36:15] <kanliot> and run `sudo machinectl shell --uid=vulvodynia`
[00:36:48] <kanliot> thank you very much
[00:37:44] <zgu> oh was this in some kind of container?
[00:38:42] <kanliot> no i was doing su - vulvodynia
[00:38:54] <kanliot> and the problems were as described
[00:39:00] <kanliot> the fix is just the second answer on https://unix.stackexchange.com/questions/346841/why-does-sudo-i-not-set-xdg-runtime-dir-for-the-target-user
[00:39:01] <Paperbot_> Link title(s): [ ssh - Why does sudo -i not set XDG_RUNTIME_DIR for the target user? - Unix & Linux Stack Exchange ]
[00:39:23] <kanliot> i understand systemd even less than i understand cpan
[00:39:58] <kanliot> https://manpages.debian.org/buster/systemd-container/machinectl.1.en.html
[00:39:59] <Paperbot_> Link title(s): [ machinectl(1) — systemd-container — Debian buster — Debian Manpages ]
[00:40:10] <kanliot> is the package that contains `machinectl`
[00:40:34] *** Joins: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr)
[00:40:48] *** Joins: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e)
[00:41:17] <vague> I hate systemd more and more as time goes by
[00:42:11] * GumbyPAN CPAN Upload: String-Interpolate-RE-0.11 by DJERIUS https://metacpan.org/release/DJERIUS/String-Interpolate-RE-0.11
[00:42:55] *** Quits: jdltouraine (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e) (Ping timeout: 252 seconds)
[00:45:07] *** Quits: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[00:47:19] *** Quits: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e) (Ping timeout: 252 seconds)
[00:48:23] <zgu> the only distro i use seriously is gentoo so i don't get the draw of systemd at all
[00:48:41] <zgu> we've had proper dependency-based init scripts since the dawn of time
[00:49:29] *** Joins: krismatrix (~krismatri@38.80.149.51)
[00:53:17] <kanliot> google is more invasive than systemd 
[00:53:31] <zgu> although i'm wondering if that one machine i installed with devuan/openrc was really worth it or if i should have just put up with systemd
[00:54:01] *** Quits: krismatrix (~krismatri@38.80.149.51) (Ping timeout: 244 seconds)
[00:55:16] *** Quits: gizmomathboy (~gizmomath@206.127.53.107) (Quit: Leaving)
[01:07:58] <kanliot> well, filed my first bug
[01:08:00] <kanliot> https://rt.cpan.org/Dist/Display.html?Name=MPV-Simple
[01:08:01] <Paperbot_> Link title(s): [ Active bugs for MPV-Simple <https://rt.cpan.org/Public/Dist/Display.html?Name=MPV-Simple> ]
[01:08:36] <kanliot> apparently the module needs a file called `client.h` 
[01:08:41] <kanliot> that doesn't exist here
[01:09:14] *** Joins: proller (~p@2002:50f0:d845:10:41a5:ca2e:e623:f4b4)
[01:09:16] <kanliot> no idea why it's doing the xs stuff if it's just opening a pipe
[01:09:18] <zgu> is there a development package for mpv you need to install?
[01:09:24] <kanliot> anyhow that's not important
[01:09:53] <kanliot> no i'm dropping this whole thing about 10 mins ago. https://gist.github.com/dwgill/a66769e0edef69c04d3b
[01:09:54] <Paperbot_> Link title(s): [ A small script for controlling mpv via the JSON IPC. Intended to resemble playerctl. · GitHub ]
[01:10:02] <kanliot> i think that method will work equally well
[01:10:09] <kanliot> and no XS 
[01:10:12] <kanliot> grrr
[01:11:21] <zgu> i think you just need libmpv headers/libs
[01:11:29] <zgu> as suggested by "MPV::Simple is simple binding to libmpv/MPV"
[01:11:53] *** Joins: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr)
[01:13:35] *** Joins: krismatrix (~krismatri@38.80.149.51)
[01:13:36] *** Quits: krismatrix (~krismatri@38.80.149.51) (Client Quit)
[01:15:10] *** Joins: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net)
[01:15:34] <kanliot> ok, my error here is reading the MPV::Simple web page without understanding what libmpv is.  
[01:15:49] <kanliot> i wonder if the module even works without a gui wrapper
[01:16:17] *** Quits: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[01:17:15] * GumbyPAN CPAN Upload: Test2-Harness-1.000070 by EXODIST https://metacpan.org/release/EXODIST/Test2-Harness-1.000070
[01:20:19] *** Quits: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net) (Ping timeout: 252 seconds)
[01:28:59] *** Quits: magla (~gelignite@55d4b5be.access.ecotel.net) (Quit: Stay safe!)
[01:29:27] *** Quits: keir (~keir@user/keir) (Quit: keir)
[01:33:22] *** Quits: travaldo (~travaldo@159.203.88.148) (Ping timeout: 245 seconds)
[01:34:13] *** Joins: khoa (~khoa@user/khoa)
[01:36:17] * GumbyPAN CPAN Upload: Cucumber-Messages-17.1.0 by CUKEBOT https://metacpan.org/release/CUKEBOT/Cucumber-Messages-17.1.0
[01:38:26] *** Joins: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr)
[01:38:50] *** Quits: Maaaanu (~manuel@ip5b41c17b.dynamic.kabel-deutschland.de) (Quit: leaving)
[01:42:57] *** Quits: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[01:55:30] *** Quits: Su-Shee (~Susanne@p4ffc72be.dip0.t-ipconnect.de) (Ping timeout: 244 seconds)
[01:57:03] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 244 seconds)
[01:57:19] *** Joins: Su-Shee (~Susanne@p4ff49bd6.dip0.t-ipconnect.de)
[01:58:08] *** Parts: khoa (~khoa@user/khoa) ()
[02:01:54] <djerius> is there a straightforward way of debugging exceptions thrown during cleanup?  I'm getting a number of  '(in cleanup)    (in cleanup)  at (eval 1630) line 32, <DATA> line 90 during global destruction.' errors
[02:02:25] *** Joins: whynot (~whynot@37.73.96.194)
[02:03:47] *** Quits: proller (~p@2002:50f0:d845:10:41a5:ca2e:e623:f4b4) (Ping timeout: 245 seconds)
[02:06:11] <Grinnz> not really, you could try applying Devel::Confess to get stack traces
[02:06:21] *** Joins: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr)
[02:10:57] *** Quits: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[02:11:20] * GumbyPAN CPAN Upload: Apache-Session-MongoDB-0.22 by GUIMARD https://metacpan.org/release/GUIMARD/Apache-Session-MongoDB-0.22
[02:17:30] *** Quits: GEttR_ (~GEttR@user/gettr) (Remote host closed the connection)
[02:17:42] <djerius> Will try that.
[02:17:50] *** Joins: GEttR_ (~GEttR@user/gettr)
[02:18:55] *** GEttR_ is now known as GEttR
[02:19:38] *** Joins: proller (~p@2002:50f0:d845:10:4a51:b7ff:fe43:6e30)
[02:23:11] *** Joins: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr)
[02:23:21] <djerius> Grinnz: that helped quite a bit. thanks.
[02:27:10] *** Quits: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[02:34:52] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[02:40:51] *** Joins: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr)
[02:43:10] *** Quits: hudo (~hudo@62.68.27.70) (Ping timeout: 240 seconds)
[02:45:06] *** Quits: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr) (Ping timeout: 244 seconds)
[02:59:26] *** Joins: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr)
[03:04:40] *** Quits: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[03:10:05] *** Quits: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) (Quit: Leaving.)
[03:17:47] *** Joins: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr)
[03:22:18] *** Quits: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr) (Ping timeout: 244 seconds)
[03:33:49] *** Joins: pizdets_ (~pizdets@183.182.114.199)
[03:33:50] *** Quits: pizdets (~pizdets@183.182.114.170) (Ping timeout: 245 seconds)
[03:34:59] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[03:35:37] *** Quits: woei (~woei@cust-245-64-110-94.dyn.as47377.net) (Ping timeout: 248 seconds)
[03:37:11] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[03:42:54] *** Quits: gloin (~gloin@user/gloin) (Read error: Connection reset by peer)
[03:43:07] *** Joins: gloin (~gloin@user/gloin)
[03:49:19] *** Joins: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr)
[03:53:27] *** Quits: Pali (~pali@user/pali) (Ping timeout: 245 seconds)
[03:53:46] *** Quits: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[03:53:59] *** Joins: remilsan (~remilsan@5.186.124.154.cgn.fibianet.dk)
[03:54:27] *** Joins: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net)
[03:56:31] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 252 seconds)
[03:58:45] <remilsan> how can I match multiple paths for one route using Mojolicious::Lite ?
[03:58:59] *** Quits: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net) (Ping timeout: 244 seconds)
[04:01:08] <Grinnz> you can't, but you can have multiple routes with the same controller/action
[04:01:23] <Grinnz> oh with lite; you can pass the same callback
[04:02:21] <Grinnz> my $action = sub { my $c = shift; ... }; get '/foo' => $sub; get '/bar' => $sub;
[04:02:28] <Grinnz> $action, whatever
[04:03:51] <remilsan> oh awesome
[04:06:47] *** Joins: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr)
[04:07:26] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[04:11:30] *** Quits: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[04:12:15] *** Quits: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net) (Quit: Konversation terminated!)
[04:16:33] * GumbyPAN CPAN Upload: Data-Record-Serialize-0.29 by DJERIUS https://metacpan.org/release/DJERIUS/Data-Record-Serialize-0.29
[04:17:59] <mst> djerius: note also that happening at all is an indication your scoping is wrong
[04:22:35] *** Joins: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr)
[04:25:39] *** Joins: travaldo (~travaldo@159.203.88.148)
[04:26:53] *** Quits: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr) (Ping timeout: 244 seconds)
[04:44:55] *** Quits: humky (~humky@user/humky) (Ping timeout: 252 seconds)
[04:46:08] *** Joins: humky (~humky@user/humky)
[04:50:38] <kanliot> i finished the mpv thing a couple hours ago, then went back and cleaned it up.  had some weirdness with mixing signal handlers with 'kill' 
[04:50:40] <kanliot> take a look https://github.com/kanliot/mpvreadtime
[04:50:41] <Paperbot_> Link title(s): [ GitHub - kanliot/mpvreadtime: seek to times in mpv by typing them into the terminal window ]
[04:53:38] *** Quits: humky (~humky@user/humky) (Remote host closed the connection)
[04:53:46] *** Joins: humky (~humky@user/humky)
[04:54:27] *** Quits: whynot (~whynot@37.73.96.194) (Quit: Lost terminal)
[04:54:34] *** Joins: VoidNoir0 (~VoidNoir0@72.80.203.52)
[04:54:50] *** Quits: VoidNoir0 (~VoidNoir0@72.80.203.52) (Client Quit)
[04:56:17] *** Joins: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr)
[04:56:26] *** Joins: VoidNoir0 (~VoidNoir0@72.80.203.52)
[04:57:28] *** Quits: VoidNoir0 (~VoidNoir0@72.80.203.52) (Client Quit)
[04:57:52] <djerius> mst: the object destructors were trying to close a filehandle which was destroyed before the objects were destroyed; can't fix the ordering, but now the object destructors check that the filehandles are defined.
[04:58:58] <Grinnz> yeah, to fix the ordering you need to scope your variables
[04:59:06] *** Joins: VoidNoir0 (~VoidNoir0@72.80.203.52)
[04:59:29] <Grinnz> so they get cleaned up in a bog-standard destruction, rather than global destruction
[05:00:03] *** Quits: madduck (~madduck@user/madduck) (Ping timeout: 250 seconds)
[05:00:32] *** Quits: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[05:00:52] *** Quits: proller (~p@2002:50f0:d845:10:4a51:b7ff:fe43:6e30) (Ping timeout: 252 seconds)
[05:08:34] *** Quits: bit4bit (~bit4bit@190.128.123.78) (Quit: Leaving)
[05:12:09] *** Quits: cation (cation@user/cation) (Ping timeout: 248 seconds)
[05:15:06] *** Quits: XV8 (~XV8@2601:5cb:c001:50:7c79:4e14:5357:7ce1) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:16:11] *** Joins: cation (cation@user/cation)
[05:21:11] <mst> djerius: oh, so the objects were completely broken
[05:21:18] <mst> djerius: do you need help filing a bug/
[05:23:20] <mst> djerius: in a Moo/Moose class
[05:23:33] <mst> sub DEMOLISH ($self, $in_gd) { return if $in_gd; ... 
[05:23:37] <mst> fixes that
[05:23:40] <mst> if not
[05:24:07] <mst> sub DESTROY ($self) { return if ${^GLOBAL_PHASE} eq q[DESTRUCT]; ...
[05:24:36] <mst> djerius: though realistically if it holds onto a filehandle it shouldn't be a global variable so should've been destroyed before global destruction anyway
[05:31:17] *** Joins: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr)
[05:35:36] *** Quits: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr) (Ping timeout: 244 seconds)
[05:38:20] *** Joins: Su-Shee_ (~Susanne@p4ffc7e52.dip0.t-ipconnect.de)
[05:40:28] *** Quits: Su-Shee (~Susanne@p4ff49bd6.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[05:40:57] *** Quits: G_Sabino1ullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 245 seconds)
[05:40:57] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 245 seconds)
[05:42:26] *** Joins: zacts (~zacts@user/zacts)
[05:49:04] *** Joins: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr)
[05:53:40] *** Quits: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[05:56:37] <djerius> mst: Grinnz: I'll need to winnow this down to something reasonable. right now it's parked in a whole mess of code.
[05:58:26] *** Quits: zacts (~zacts@user/zacts) (Quit: zacts)
[06:00:37] *** Quits: travaldo (~travaldo@159.203.88.148) (Quit: travaldo)
[06:02:04] *** Joins: madduck (~madduck@matilda.madduck.net)
[06:02:04] *** Quits: madduck (~madduck@matilda.madduck.net) (Changing host)
[06:02:04] *** Joins: madduck (~madduck@user/madduck)
[06:06:41] *** Joins: G_Sabino1ullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[06:06:41] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[06:19:40] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 240 seconds)
[06:20:10] *** Quits: remilsan (~remilsan@5.186.124.154.cgn.fibianet.dk) (Ping timeout: 240 seconds)
[06:21:11] *** Joins: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr)
[06:25:27] *** Quits: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[06:27:01] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:27:03] *** Joins: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net)
[06:31:40] *** Quits: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net) (Ping timeout: 240 seconds)
[06:35:51] <djerius> mst: Grinnz: I believe that i've found the issue.  the objects were cached in a package lexical.  that gets destroyed during global destruction, which prevents a properly ordered destruction.  as you  were both saying, scope issues.  adding an END block which explicitly forced the objects to clean up their resources did the trick.  There was a bug in there anyway, as the clean up routines didn't check that they'd cleaned up, so 
[06:35:51] <djerius> tried to do it every time they were called. 
[06:36:57] <mst> djerius: I always have my destructors check for global destruction and shrug and no-op if so
[06:37:02] <djerius> to clarify, the "clean up" routines are explicit close() methods, not just the destructor.
[06:37:20] *** Joins: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr)
[06:37:41] <djerius> mst: wouldn't that hide issues like this though?  
[06:38:22] <djerius> better to see the dirty laundry as it were.
[06:38:26] <mst> djerius: checking got global desutrction and warn()ing would help surface them
[06:38:31] <mst> you need the check either way
[06:38:47] <djerius> good point.  thanks.
[06:40:13] *** Joins: gast0n (~g4570n@user/gast0n)
[06:40:42] *** Quits: Peppard (~quassel@dynamic-095-118-076-018.95.118.pool.telefonica.de) (Ping timeout: 244 seconds)
[06:41:09] *** Joins: Peppard (~quassel@2001:470:1f0b:751:2138:a51:b543:a7bd)
[06:41:40] *** Quits: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[06:42:15] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 244 seconds)
[06:42:46] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 244 seconds)
[06:44:18] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:47:29] <simcop2387> turning off the host for perlbot while i put in a new UPS battery.  shouldn't take long.
[06:49:35] <zgu> not really 'uninterruptible' eh
[06:50:02] *** Quits: perldoc (~perldoc@71.76.76.1) (Ping timeout: 245 seconds)
[06:51:10] *** Quits: meatbot (~meatbot@perlbot/bot/meatbot) (Ping timeout: 240 seconds)
[06:51:10] *** Quits: metabot (~metabot@perlbot/bot/metabot) (Ping timeout: 240 seconds)
[06:51:42] *** Quits: simcop2387 (~simcop238@perlbot/patrician/simcop2387) (Ping timeout: 245 seconds)
[06:51:42] *** Quits: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot) (Ping timeout: 245 seconds)
[06:59:31] *** Joins: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net)
[07:04:37] *** Quits: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net) (Ping timeout: 252 seconds)
[07:05:45] *** Joins: meatbot (~meatbot@perlbot/bot/meatbot)
[07:06:15] *** Joins: kaitlyn (~kaitlyn@user/kaitlyn)
[07:06:16] *** Joins: metabot (~metabot@perlbot/bot/metabot)
[07:06:48] *** Joins: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot)
[07:06:48] *** ChanServ sets mode: +v perlbot
[07:07:47] *** Joins: perldoc (~perldoc@2603-6080-3108-088d-18fc-1230-0f1a-2f6b.res6.spectrum.com)
[07:08:31] *** Joins: zacts (~zacts@user/zacts)
[07:08:47] *** Joins: simcop2387 (~simcop238@perlbot/patrician/simcop2387)
[07:09:41] *** Joins: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr)
[07:10:34] *** Quits: VoidNoir0 (~VoidNoir0@72.80.203.52) (Quit: Connection closed)
[07:12:44] *** Quits: G_Sabino1ullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 244 seconds)
[07:13:15] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 244 seconds)
[07:13:37] *** Joins: VoidNoir0 (~VoidNoir0@72.80.203.52)
[07:14:17] *** Quits: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[07:18:56] *** Quits: kanliot (~anliot@2600:6c5c:7000:500:a4f6:ad95:6edb:bd8d) (Quit: Leaving)
[07:21:52] * GumbyPAN CPAN Upload: Data-Record-Serialize-0.30 by DJERIUS https://metacpan.org/release/DJERIUS/Data-Record-Serialize-0.30
[07:26:26] *** Joins: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr)
[07:30:58] *** Quits: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[07:37:04] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[07:44:20] *** Joins: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr)
[07:45:43] <vanfanel64> Hi. I am learning how to use (?<DEFINE>(?<foo_pat>...)...) but I am not sure why I am getting undefs in the return list. Maybe I am misunderstanding how to use it, though I am work from the description and examples in perlre.
[07:45:48] <vanfanel64> wseval $_ = q{beg 6:30p 7:30p 18:30 1830 PM 06:30PM 2:00a 14:00 end};[ m{(?<t>(?&t24)|(?&t12)) (?(DEFINE) (?<ampm>\h*[AP]M?) (?<min>[0-5][0-9]) (?<t24>(?:[01][0-9]|2[0-3])\:?(?&min)(?&ampm)?) (?<t12>(?:[1-9]|1[012])\:(?&min)(?&ampm)) )}igx ];
[07:45:58] <vanfanel64> wseval: $_ = q{beg 6:30p 7:30p 18:30 1830 PM 06:30PM 2:00a 14:00 end};[ m{(?<t>(?&t24)|(?&t12)) (?(DEFINE) (?<ampm>\h*[AP]M?) (?<min>[0-5][0-9]) (?<t24>(?:[01][0-9]|2[0-3])\:?(?&min)(?&ampm)?) (?<t12>(?:[1-9]|1[012])\:(?&min)(?&ampm)) )}igx ];
[07:45:59] <perlbot> vanfanel64: ["6:30p",undef,undef,undef,undef,"7:30p",undef,undef,undef,undef,"18:30",undef,undef,undef,undef,"1830 PM",undef,undef,undef,undef,"06:30PM",undef,undef,undef,undef,"2:00a",undef,undef,undef,undef,"14:00",undef,undef,undef,undef]
[07:46:47] <vanfanel64> So many undef values with each desired match
[07:48:40] *** Quits: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[07:49:22] <vanfanel64> This looks great for reusability within a regular expression. I define everything in a (?(DEFINE)...) block and then put it to use at the beginning with (?<t>(?&t24)|(?&t12)), which is the desired match. I simply do not understand where those undefs are coming from or why/what they are matching.
[07:50:18] <Grinnz> djerius: most of the time, the thing you're trying to do actually doesn't matter if it happens to be during global destruction, so in those cases you would just bail out
[07:50:34] <Grinnz> if it does still matter, and happening during global destruction is a bug, then yeah you can make it coplain
[07:50:39] <Grinnz> complain
[07:50:40] *** Joins: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr)
[07:53:09] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Ping timeout: 276 seconds)
[07:53:21] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[08:04:34] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 252 seconds)
[08:05:02] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[08:05:30] *** Joins: zacts (~zacts@user/zacts)
[08:06:28] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[08:10:45] *** Joins: hudo (~hudo@62.68.27.70)
[08:15:29] *** Joins: shlomif (~shlomif@87.68.240.100.adsl.012.net.il)
[08:15:43] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[08:18:18] *** Quits: shlomif (~shlomif@87.68.240.100.adsl.012.net.il) (Remote host closed the connection)
[08:24:51] *** Joins: Martchus (~martchus@dynamic-077-009-156-048.77.9.pool.telefonica.de)
[08:26:01] *** Quits: Martchus_ (~martchus@2a01:c23:b81f:3e00:d250:99ff:fe49:3cce) (Ping timeout: 252 seconds)
[08:28:41] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:32:51] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[08:33:47] *** Quits: gast0n (~g4570n@user/gast0n) (Ping timeout: 245 seconds)
[08:34:05] *** Joins: gast0n (~g4570n@user/gast0n)
[09:06:32] *** Joins: homura (root@2605:6400:c847:1486::6841)
[09:06:50] *** Quits: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr) (Quit: leaving)
[09:07:01] *** Joins: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr)
[09:15:57] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 245 seconds)
[09:17:10] *** Quits: johnjay (~pi@38.120.10.99) (Ping timeout: 252 seconds)
[09:17:15] *** Quits: hudo (~hudo@62.68.27.70) (Ping timeout: 244 seconds)
[09:21:10] *** Quits: zakame (~zakame@user/zakame) (Ping timeout: 240 seconds)
[09:23:39] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[09:25:56] *** Joins: zakame (~zakame@user/zakame)
[09:27:04] *** Joins: zakame_ (~zakame@user/zakame)
[09:29:00] *** Joins: mattil (~mattil@helsinki.portalify.com)
[09:30:55] *** Quits: zakame (~zakame@user/zakame) (Ping timeout: 252 seconds)
[09:35:23] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[09:38:01] *** Joins: johnjay (~pi@38.120.10.99)
[09:43:33] *** Joins: shlomif (~shlomif@87.68.240.100.adsl.012.net.il)
[09:47:38] *** Quits: homura (root@2605:6400:c847:1486::6841) (Changing host)
[09:47:38] *** Joins: homura (root@user/homura)
[09:47:50] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[09:49:17] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[09:50:30] *** Joins: mattil (~mattil@helsinki.portalify.com)
[09:54:25] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Quit: WeeChat 3.2)
[10:18:27] *** zakame_ is now known as zakame
[10:24:12] *** Joins: vague_ (~vague@irssi/staff/vague)
[10:24:32] *** Quits: vague_ (~vague@irssi/staff/vague) (Read error: Connection reset by peer)
[10:25:41] *** Joins: Ovid (~Ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[10:27:04] *** Quits: Ovid (~Ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Client Quit)
[10:27:11] *** Joins: vague_ (~vague@irssi/staff/vague)
[10:27:21] *** Quits: vague_ (~vague@irssi/staff/vague) (Remote host closed the connection)
[10:29:13] *** Joins: Ovid (~Ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[10:30:57] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:31:29] *** Joins: mattil (~mattil@airio.portalify.com)
[10:37:08] *** Joins: vague_ (~vague@irssi/staff/vague)
[10:37:23] *** Quits: vague_ (~vague@irssi/staff/vague) (Remote host closed the connection)
[10:39:49] *** Joins: jplesnik (jplesnik@nat-pool-brq-t.redhat.com)
[10:50:40] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:70b4:1948:70a0:1ca9) (Ping timeout: 252 seconds)
[10:52:44] *** Joins: horsepatat (~horsepata@80.89.78.58)
[10:55:56] *** Joins: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
[11:01:17] *** Joins: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net)
[11:02:52] *** Joins: tobybl (~tobybl@189.192.115.87.dyn.plus.net)
[11:05:57] *** Quits: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net) (Ping timeout: 245 seconds)
[11:15:05] *** Quits: gloin (~gloin@user/gloin) (Read error: Connection reset by peer)
[11:15:18] *** Joins: gloin (~gloin@user/gloin)
[11:20:14] *** Joins: lesihctej (jetchisel@user/jetchisel)
[11:20:23] *** Quits: jetchisel (jetchisel@user/jetchisel) (Read error: Connection reset by peer)
[11:31:24] *** Joins: furrymcgee (~devuan@31.179.186.66)
[11:43:34] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: Reconnecting)
[11:43:42] *** Joins: furrymcgee (~devuan@31.179.186.66)
[11:48:16] *** Quits: diskin (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[11:49:28] *** Joins: diskin (~diskin@87.117.53.54)
[11:56:13] *** Quits: diskin (~diskin@87.117.53.54) (Remote host closed the connection)
[11:57:07] *** Joins: tobybl_ (~tobybl@189.192.115.87.dyn.plus.net)
[11:58:08] *** Joins: choroba (~E.Choroba@88.146.255.106)
[11:58:19] *** Quits: tobybl (~tobybl@189.192.115.87.dyn.plus.net) (Ping timeout: 252 seconds)
[11:59:57] *** Joins: art1 (~romeyke@p200300ccdf04f300f54a17ca4803ac83.dip0.t-ipconnect.de)
[12:01:07] *** Quits: edef (~edef@user/edef) (Ping timeout: 240 seconds)
[12:04:29] *** Quits: Pixi_ (~Pixi@user/pixi) (Quit: Leaving)
[12:07:10] *** Joins: Pixi (~Pixi@user/pixi)
[12:09:22] *** Joins: kensanata (~user@user/kensanata)
[12:11:21] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[12:11:39] <kensanata> I'm writing a Makefile.PL and trying to figure out my dependencies and I'm trying to think of a way I could test it. I'm thinking: use perlbrew to install a "fresh" perl (ideally just the one I already use, but with a new name?) and then install my code from scratch? Or is there a better way to test these things?
[12:12:03] *** Joins: diskin (~diskin@ec2-18-158-88-195.eu-central-1.compute.amazonaws.com)
[12:13:47] <shlomif> kensanata: docker/etc.?
[12:15:16] <shlomif> kensanata: i'm using dzil for most of my cpan distributions
[12:15:20] <kensanata> shlomif: hm, I guess. Sadly my docker know-how is approaching zero… 
[12:16:29] <kensanata> shlomif: I'm reading the "Detecting Your Prereqs" section on dzil.org, interesting.
[12:17:20] <Botje> kensanata: docker run -it --rm -v /app:$(pwd) perl:latest /bin/bash
[12:17:41] <Botje> that ought to drop you in a shell with a clean perl installation
[12:17:52] <Botje> you can then run perl Makefile.PL etc.
[12:18:21] <Botje> `cpanm .` should work too, I think.
[12:18:40] <Botje> assuming you cd /app first :o)
[12:20:39] <shlomif> kensanata: bye - i'm going to rest
[12:20:44] *** Quits: shlomif (~shlomif@87.68.240.100.adsl.012.net.il) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[12:30:26] *** Joins: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net)
[12:38:10] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[12:38:32] <kensanata> Botje: Thanks. For the moment, figuring out how to get the docker group for my user has proven to be the trickiest part. :)
[12:40:46] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[12:41:42] *** Quits: mattil (~mattil@airio.portalify.com) (Ping timeout: 245 seconds)
[12:43:09] *** Joins: fwg (~fwg@user/fwg)
[12:49:59] *** Joins: edef (~edef@user/edef)
[12:50:58] *** Joins: rwp0 (~rwp0@user/rwp0)
[13:00:40] <kensanata> I use File::ShareDir::Install in my Makefile.PL and when I use this docker image and run "cpanm ." it tells me that it can't find File::ShareDir::Install, which makes sense, but also: I use this in another package on cpan and yet no CPAN tester ever failed with that error. They all have it installed by default, or am I missing something?
[13:02:27] <choroba> dependencies should be solved before Makefile.PL is started
[13:03:24] <kensanata> I see that I have a CONFIGURE_REQUIRES => { 'ExtUtils::MakeMaker' => '6.52', 'File::ShareDir::Install' => 0, } in there, so I guess I assumed this would make sure that these two are available.
[13:05:51] <choroba> what exactly do you run in the docker?
[13:10:00] <kensanata> I cd /app where I have my workind dir mounted and I run perl Makefile.PL; cpanm .
[13:12:19] *** Joins: holyghost (~holyghost@109.136.39.83)
[13:13:14] <Botje> it is likely that cpanm installed modules to /root/perl5 or somesuh.
[13:13:31] <kensanata> OK, retrying this…
[13:13:36] <Botje> perlbot set inc
[13:13:37] <perlbot> Botje: To change @INC (perldoc perlvar), 'use lib' (perldoc lib), or use the -I option to perl (perldoc perlrun), or set the PERLLIB or PERL5LIB environment variables (perldoc perlrun), or recompile perl. See also local::lib for making installing modules to a custom @INC easier
[13:13:47] *** Quits: rwp0 (~rwp0@user/rwp0) (Remote host closed the connection)
[13:20:38] <mjh4386> Is there any way I can set up my perl script to allow only <= N instances to be running at the same time? (cron)
[13:21:16] <mjh4386> process runs every minute and processes messages from a queue but I'd like to limit the number of concurrent executions to say 5
[13:28:21] <kensanata> choroba, Botje: this is how I do it right now: https://github.com/kensanata/text-mapper#docker with this Makefile.PL: https://github.com/kensanata/text-mapper/blob/main/Makefile.PL -- when I skip the cpanm File::DistDir::Install step, I see in the output for cpanm . the following line: "Configuring /app ... N/A" so perhaps there's something strange going on.
[13:28:23] <Paperbot_> Link title(s): [ GitHub - kensanata/text-mapper: A web app to generate maps based on text files ] [ text-mapper/Makefile.PL at main · kensanata/text-mapper · GitHub ]
[13:29:12] <kensanata> At the very end I get an error in "Installing . failed ..." and the log file ends with "No rule to make target '... Config.pm', needed by 'Makefile'
[13:30:26] <kensanata> If I cpanm File::DistDir::Install before running cpanm . it works: installation finishes successfully and I can start my app (no further testing)
[13:31:22] *** Quits: edef (~edef@user/edef) (Ping timeout: 245 seconds)
[13:31:31] * GumbyPAN CPAN Upload: Evo-QUIP-0.1.1 by KOBOLDWIZ https://metacpan.org/release/KOBOLDWIZ/Evo-QUIP-0.1.1
[13:41:37] *** Joins: tobybl (~tobybl@189.192.115.87.dyn.plus.net)
[13:42:03] *** Joins: bugweiser (~tc@user/denofre)
[13:44:00] *** Joins: rwp0 (~rwp0@user/rwp0)
[13:44:08] <Botje> mjh4386: something something lockfiles?
[13:44:28] *** Quits: tobybl_ (~tobybl@189.192.115.87.dyn.plus.net) (Ping timeout: 252 seconds)
[13:45:06] <mjh4386> Botje: everything I've searched on lockfiles has been centered around a single process. I'm sure this is on the right track though
[13:47:32] *** Joins: KnoP (~KnoP@218-131-088-212.ip-addr.vsenet.de)
[13:48:52] <bugweiser> hi all, can anyone please point me to a decent tutorial/explenation to strings in perl? The docs are severely messing with my head. For example, some doc-pages state Strings in perl are a superset of unicode, but I can't for the life of me figure out what that superset is. Then https://perldoc.perl.org/Encode comes along and says: ""TERMINOLOGY - character - A character in the range 0 .. 2**32-1 (or more); what Perl's strings are made of."  NOTE: 
[13:48:52] <bugweiser> "or more".  NOOO says https://perldoc.perl.org/perlunifaq#I-lost-track;-what-encoding-is-the-internal-format-really?  "It's good that you lost track, because you shouldn't depend on the internal format being any specific encoding. But since you asked: by default, the internal format is either ISO-8859-1 (latin-1), or utf8, depending on the history of the string. On EBCDIC platforms, this may be different even."
[13:48:52] <Paperbot_> Link title(s): [ Encode - character encodings in Perl - Perldoc Browser ]
[13:48:53] <Paperbot_> Link title(s): [ perlunifaq - Perl Unicode FAQ - Perldoc Browser ]
[13:49:19] *** Joins: shlomif (~shlomif@87.68.240.100.adsl.012.net.il)
[13:51:15] <bugweiser> But then ISO-8859-1 surely isn't a superset of unicode and at 2^8-1 it surely can't hold 2^32-1 and neither can it be utf-8 (unless it's Wtf-8 and even then.. 'more than 2^32-1' doesn't seem that viable in that case.
[13:52:06] <Botje> bugweiser: in a properly written perl program, all scalar variables hold unicode characters. Except at the borders where they might contain bytes in the process of decoding or encoding.
[13:55:17] <Botje> mjh4386: best I can think of is a directory where every program creates a lockfile named after its PID. Count the number of entries in the directory and wait until it is <N
[13:55:26] <Botje> that's still racy though.
[13:56:24] <mjh4386> I've just hacked together this for now
[13:56:28] <mjh4386> my $output = int(`/bin/ps -e | grep 'myscript.pl' | grep -v grep | wc -l`);
[13:56:38] <holyghost> mjh4386 : maybe search for a representation of utf strings as in HTML
[13:56:52] <Botje> mjh4386: surely pgrep instead?
[13:57:21] <Botje> pgrep -f myscript.pl | wc -l
[13:57:54] <Botje> bugweiser: what prompted this investigation? "you should not have to care besides unicode or bytes" is a good answer
[13:58:24] <mjh4386> Botje: even better, I didn't know about pgrep
[13:59:52] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 252 seconds)
[13:59:57] <bugweiser> Botje, generally I find it helps if one knows what one is dealing with. If perl says 'characters' are a superset of unicode internally, then what the heck is this superset? The obvious place I'd imagine to look for an answer to 'what is the superset' is to look at what strings are to perl internally.
[14:02:12] <Botje> bugweiser: there are only ~2^20 characters foreseen in the unicode standard
[14:02:26] <bugweiser> what prompted this investigation? << I'm absolutely new to *writing* perl (but i'm not new to programming or applying my understanding of character sets and encodings).
[14:03:21] <bugweiser> Yeah, unicode has 17 16-bit 'planes'
[14:03:42] <Botje> and UTF-8 can theoretically encode 32-bit characters
[14:03:52] <Botje> although in practice it doesn't because that's not needed.
[14:04:29] <Botje> if you try to stuff a unicode character into ISO-8859-1 Perl will rightfully complain.
[14:04:44] <Botje> but ISO-8859-1 happens to overlap with "bytes"
[14:04:59] <bugweiser> yeah, though most specs lock down utf-8 to a single encoding form (there are more options) and locks down the range. Yet the spec says a perl character can apparently be a codepoint larger than 32 bit..
[14:05:16] <Botje> where do you get "larger than 32bit" from?
[14:05:47] <bugweiser>  https://perldoc.perl.org/Encode comes along and says: "TERMINOLOGY - character - A character in the range 0 .. 2**32-1 (or more); what Perl's strings are made of."  NOTE: "or more"
[14:05:48] <Paperbot_> Link title(s): [ Encode - character encodings in Perl - Perldoc Browser ]
[14:06:10] <Botje> oh
[14:06:15] <Botje> shrug. never happens in practice :P
[14:06:31] <Botje> I think someone is trying to be needlessly forward-compatible.
[14:07:00] <bugweiser> i'd imagine this relates to some regex character classes... 
[14:07:48] <bugweiser> I mean, if a perl character can have codepoint 2^64-1 ... then the regex engines that work on perl strings ought to account for that (and I as a writer should account for that).
[14:08:31] <Botje> eval: chr 2**63
[14:08:33] <perlbot> Botje: ERROR: Use of code point 0x8000000000000000 is not allowed; the permissible max is 0x7FFFFFFFFFFFFFFF at (IRC) line 1. 
[14:08:45] <Botje> eval: chr 2**63-1
[14:08:47] <perlbot> Botje: ERROR: Use of code point 0x8000000000000000 is not allowed; the permissible max is 0x7FFFFFFFFFFFFFFF at (IRC) line 1. 
[14:08:50] <Botje> grr parens.
[14:08:53] <Botje> eval: chr(2**63-1)
[14:08:55] <perlbot> Botje: ERROR: Use of code point 0x8000000000000000 is not allowed; the permissible max is 0x7FFFFFFFFFFFFFFF at (IRC) line 1. 
[14:09:18] <Botje> ah, 2**53 does 'work'.
[14:09:26] <Botje> interesting.
[14:09:35] <ilmari> eval: chr(int(2**63)-1)
[14:09:37] <perlbot> ilmari: \x{7FFFFFFFFFFFFFFF}
[14:09:37] <Botje> But i've never encountered a situation where that would occur.
[14:09:53] <bugweiser> lol, that's my point/question :)
[14:10:00] <ilmari> Botje: because floating point
[14:10:04] <ilmari> eval: 2**63
[14:10:06] <perlbot> ilmari: 9.22337203685478e+18
[14:10:10] <ilmari> eval: (2**63)-1
[14:10:11] <perlbot> ilmari: 9.22337203685478e+18
[14:10:26] <choroba> 1 is too small
[14:10:33] <Botje> bugweiser: I would just assume it's 32 bit and leave the possibility of >32 as a footnote.
[14:10:36] <ilmari> eval: 2**63 == (2**63)-1
[14:10:37] <perlbot> ilmari: 1
[14:11:14] <choroba> eval: 2**63 == (2**63)-512
[14:11:16] <perlbot> choroba: 1
[14:11:18] <choroba> eval: 2**63 == (2**63)-513
[14:11:20] <perlbot> choroba: No output.
[14:11:26] <Botje> computers are hard.
[14:11:30] <Botje> let's go shopping.
[14:11:42] <choroba> 20 minutes to lunchtime here
[14:12:23] <bugweiser> Botje, so I should assume perl strings are an array of double (float) values?
[14:12:31] <bugweiser> Or UCS-4 ?
[14:13:02] <Botje> perl strings are either bytes or unicode characters.
[14:13:12] <Botje> that's all you have to care about as a programmer
[14:13:43] <bugweiser> that leads back to 'what is an unicode character in perl' ?
[14:14:17] <Botje> A 32-bit number that maps to an entry in the 20-bit unicode table
[14:15:24] <choroba> a scalar value that can be encoded as 1 to 4 bytes in UTF-8
[14:17:02] <Botje> (we should also say codepoint instead of character)
[14:17:28] <bugweiser> how does regex account for a scalar value holding the unicode superset codepoint 2**53-1 ?
[14:18:06] <Botje> eval: "abc\x{7FFFFFFFFFFFFFFF}def" =~ /\x{7FFFFFFFFFFFFFFF}/ ? "match" : "no match"
[14:18:07] <perlbot> Botje: match
[14:18:34] <Botje> and just to prove there are no tricks up my sleeve:
[14:18:50] <Botje> eval: substr("abc\x{7FFFFFFFFFFFFFFF}def", 3, 1)
[14:18:52] <perlbot> Botje: \x{7FFFFFFFFFFFFFFF}
[14:23:03] <bugweiser> that smells like an array of signed 64 bit values. 
[14:25:19] <Botje> where is that module to inspect perl guts again..
[14:25:43] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 252 seconds)
[14:26:47] <Botje> eval: $str = "abc\x{7FFFFFFFFFFFFFFF}def"; use Devel::Peek; Dump($str)
[14:26:49] <perlbot> Botje: SV = PV(0x564a919a8238) at 0x564a91c56e08   REFCNT = 1   FLAGS = (POK,IsCOW,pPOK,UTF8)   PV = 0x564a91bfd428 "abc\377\200\207\277\277\277\277\277\277\277\277\277\277def"\0 [UTF8 "abc\x{7fffffffffffffff}def"]   CUR = 19   LEN = 21   COW_REFCNT = 1 
[14:27:19] <Botje> bugweiser: it's stored as UTF-8 internally, perl is just really good at pretending it's not.
[14:27:37] <Botje> but again, that's an implementation detail a programmer should not care about.
[14:29:41] <bugweiser> so, what we're dealing with is Wtf-8 internally?
[14:30:16] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:30:30] <Botje> why do you call it "WTF-8"?
[14:30:50] <Botje> Because that one weird character is encoded as more than 4 bytes?
[14:31:01] *** Joins: csrf (~csrf@user/csrf)
[14:31:35] <Botje> (and again, I really don't see the point in you caring about all this.)
[14:31:37] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[14:32:33] <bugweiser> yeah, there is some divergence between what wtf-8 means, indeed. I usually take it to mean: using the utf-8 encoding mechanisms without the unicode rules.  Making it into a variable width integer encoding only.
[14:33:06] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[14:33:12] <huf> I mean... it's pronounced double-UTF-8
[14:33:18] <huf> it means stuff encoded in utf8 twice
[14:33:46] *** Joins: mattil (~mattil@airio.portalify.com)
[14:35:11] *** Joins: Masklin_Gurder (~joel@89-233-200-127.cust.bredband2.com)
[14:36:43] *** Joins: edef (~edef@user/edef)
[14:37:45] <bugweiser> Botje, thanks, that was *excelent* help (especially with this Devel::peek thing). That made it clear what's happening for me!
[14:40:01] *** Quits: lesihctej (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[14:48:40] *** Lysergsaeure is now known as acidsys
[14:48:44] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[14:48:56] *** Quits: rwp0 (~rwp0@user/rwp0) (Remote host closed the connection)
[14:52:10] *** Quits: mattil (~mattil@airio.portalify.com) (Ping timeout: 240 seconds)
[14:53:58] *** Joins: jetchisel (jetchisel@user/jetchisel)
[14:54:35] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[14:55:16] *** Joins: mattil (~mattil@airio.portalify.com)
[14:56:38] * GumbyPAN CPAN Upload: JavaScript-Duktape-XS-0.000079 by GONZUS https://metacpan.org/release/GONZUS/JavaScript-Duktape-XS-0.000079
[15:07:13] *** Joins: xa_ (~NesLs@176.54.248.155)
[15:07:28] *** Joins: proller (~p@2a02:6b8:0:40c:d93f:81b7:31e8:bf88)
[15:07:54] *** Quits: shorne_ (~shorne@g163.222-224-165.ppp.wakwak.ne.jp) (Ping timeout: 250 seconds)
[15:12:58] <bugweiser> So, now that i grasp what this superset of unicode actually means (which also allows me to reason about memory requirements of strings), I'm very interested in some good tutorials about general workflow when dealing with strings in perl.  I assume I start with a 'use utf8' pragma to define the script's encoding, convert input to perl unicode string, process as unicode, and convert processed data to target-charset(and encoding) ?
[15:14:54] <vague> perlbot, encoding mantra
[15:14:54] <perlbot> vague: decode goes from BYTES to UNICODE CHARACTERS. encode goes from UNICODE CHARACTERS to BYTES. decode bytes to unicode characters as soon as possible, work with unicode characters, and encode to bytes as late as possible.
[15:15:10] *** Joins: Lemniscate (~sauvin@about/linux/staff/sauvin)
[15:15:13] <vague> bugweiser, ^^ basically that
[15:17:53] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 244 seconds)
[15:19:47] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 240 seconds)
[15:19:47] <bugweiser> ok, so I'm on the right track :)
[15:21:41] * GumbyPAN CPAN Upload: Net-SIP-0.831 by SULLR https://metacpan.org/release/SULLR/Net-SIP-0.831
[15:22:28] <bugweiser> so, any tutorials perhaps, aimed at programmers new to perl (but with existing programming knowledge in other languages and understanding of character sets and their encodings) ?
[15:23:50] <vague> use utf8 is only needed if you will use utf8 in your code
[15:23:52] *** Quits: KnoP (~KnoP@218-131-088-212.ip-addr.vsenet.de) (Ping timeout: 245 seconds)
[15:24:47] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[15:24:48] *** Joins: G_Sabino1ullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[15:26:12] <vague> For example: say "♪" would require 'use utf8;' but say "foo" would not
[15:30:31] <bugweiser> use utf8 pragma never impacts the mode that regexes run as ?
[15:32:52] <Botje> no, it only tells perl that your script source is encoded as utf-8
[15:33:20] <Botje> so it knows what to do if you write my $str = "café 🦁";
[15:33:57] <Botje> bugweiser: have you read through perlunitut?
[15:34:14] <Botje> there's also perluniintro and perlunicode
[15:34:21] <Botje> for audiences of varying experience
[15:34:31] <bugweiser> yes, and a faq
[15:34:46] <bugweiser> though I must read them again (a bunch of times).
[15:35:49] <bugweiser> it appears *on first sight* there is a lot to take account for. 
[15:36:36] <Botje> that's why I wrote the mantra. working with unicode strings is far easier than working with bytestrings containing utf-8
[15:38:01] <Botje> if you follow that, you only need to think about encoding when you're doing IO
[15:38:05] <bugweiser> I was under the impression perl might also interpret the script-source as local charset (worst case that would include ebcdic). I got the impression that 'use utf8' was default starting at perl 5.something, but it was still reccomended to use this pragma anyway to help slightly older versions of perl AND to make darn sure that 7 bit ascii (if you wrote your script using just that) would be interpreted as 7-bit ascii (since that's a subset if iso l
[15:38:05] <bugweiser> atin, which in turn is a subset of unicode).
[15:38:29] <bugweiser> botje, agree, regarding i/o !!
[15:38:59] <Botje> and luckily, most modules do the right thing when given unicode strings
[15:39:21] <Botje> .. and have configuration options to decode incoming strings as well
[15:49:06] *** Joins: KnoP (~KnoP@218-131-088-212.ip-addr.vsenet.de)
[15:49:36] *** Quits: xa_ (~NesLs@176.54.248.155) (Read error: Connection reset by peer)
[15:52:29] *** Quits: jaguart (~jaguart@178.171.187.81.in-addr.arpa) (Remote host closed the connection)
[15:56:51] *** Joins: rwp0 (~rwp0@user/rwp0)
[15:57:13] *** Joins: keir (~keir@user/keir)
[16:10:31] <leont> use utf8 never became a default
[16:10:44] <Botje> I'm sure it's a default in perl 7
[16:11:21] *** Joins: vague_ (~vague@irssi/staff/vague)
[16:12:14] <ilmari> I believe the current idea is to make non-ascii source an error (or warning?) under `use v5.36;` unless `use utf8;` is also in effect?
[16:15:47] *** Quits: gamo (~Thunderbi@cm-93-156-61-102.telecable.es) (Quit: gamo)
[16:16:07] *** Joins: gamo (~Thunderbi@cm-93-156-61-102.telecable.es)
[16:18:44] <Botje> And in 5.38 we rename core modules to have emoji so people are forced to use utf8! bwahahahahaaaa! *twirls moustache*
[16:21:09] <xenu> emojis aren't allowed in identifiers even with utf8
[16:21:14] <xenu> that's a serious problem that needs to be fixed
[16:21:37] *** Quits: vague_ (~vague@irssi/staff/vague) (Quit: Something happened, I never quit voluntarily)
[16:21:47] * GumbyPAN CPAN Upload: Sidef-3.99 by TRIZEN https://metacpan.org/release/TRIZEN/Sidef-3.99
[16:25:28] *** Joins: kensanata (~user@user/kensanata)
[16:27:14] <huf> so if you paste 10 6-digit ticket numbers into slack, it lets you switch your theme to those colors with a button below the message.
[16:27:45] <Botje> how thoughtful
[16:27:58] <huf> this is why irc lost
[16:28:33] <Botje> +:+1:
[16:29:33] *** Joins: icedjava37 (~icedjava3@194.219.138.169.dsl.dyn.forthnet.gr)
[16:36:25] *** Quits: nrr (sid20938@tooting.irccloud.com) ()
[16:36:43] *** Joins: nrr (sid20938@id-20938.lymington.irccloud.com)
[16:42:29] *** Joins: aspic (~shifty~~~@ppp121-44-109-179.syd-gls-har-bras38.tpg.internode.on.net)
[16:45:18] <aspic> my colleague just ran my program on a freshly installed Strawberry Perl (Windows) - and didn't have to install a non-standard package from CPAN.  Woohoo!  I thought that was going to be more difficult.
[16:46:14] *** Quits: G_Sabino1ullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 244 seconds)
[16:46:14] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 244 seconds)
[16:46:21] <aspic> I assume there must be a load of packages installed with Strawberry - can anybody point me to the list of "standard Strawberry modules"?
[16:46:51] *** Joins: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e)
[16:49:37] <Botje> aspic: https://github.com/StrawberryPerl/Perl-Dist-Strawberry/blob/master/share/64bit-5.32.1.1.pp#L109 ?
[16:49:38] <Paperbot_> Link title(s): [ Perl-Dist-Strawberry/64bit-5.32.1.1.pp at master · StrawberryPerl/Perl-Dist-Strawberry · GitHub ]
[16:50:02] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[16:54:52] <genio> No coffee. "OK, I'll make tea". No tea. the world is ending
[16:58:56] <aspic> Botje: possibly.  my program used XML::LibXML and XML::LibXML::XPathContext which "just worked".  That file you linked to includes liblibxml2 as zip files, so perhaps my modules are in that.
[16:59:08] <haj> Also, the Strawberry release notes (from https://strawberryperl.com/releases.html) list the modules bundled with each release
[16:59:09] <Paperbot_> Link title(s): [ Strawberry Perl for Windows - Releases ]
[16:59:39] <Botje> aspic: https://github.com/StrawberryPerl/Perl-Dist-Strawberry/blob/master/share/64bit-5.32.1.1.pp#L192 , so yes
[16:59:39] <Paperbot_> Link title(s): [ Perl-Dist-Strawberry/64bit-5.32.1.1.pp at master · StrawberryPerl/Perl-Dist-Strawberry · GitHub ]
[16:59:56] <aspic> Botje: good reply, but not quite the list of modules (like https://perldoc.perl.org/modules) for which I was looking.
[16:59:57] <Paperbot_> Link title(s): [ Perl core modules - Perldoc Browser ]
[17:00:16] *** Quits: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e) (Ping timeout: 252 seconds)
[17:00:59] <Botje> aspic: see haj's link. it's better.
[17:01:51] * GumbyPAN CPAN Upload: Apache-Session-MongoDB-0.23 by GUIMARD https://metacpan.org/release/GUIMARD/Apache-Session-MongoDB-0.23
[17:03:32] <aspic> haj: yes, that's good.
[17:03:40] <aspic> thank you all.
[17:06:54] *** Quits: Su-Shee_ (~Susanne@p4ffc7e52.dip0.t-ipconnect.de) (Ping timeout: 244 seconds)
[17:08:48] *** Joins: Su-Shee (~Susanne@p4ff4961e.dip0.t-ipconnect.de)
[17:14:39] *** Quits: mattil (~mattil@airio.portalify.com) (Remote host closed the connection)
[17:15:12] *** Joins: mattil (~mattil@helsinki.portalify.com)
[17:18:28] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:19:31] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 252 seconds)
[17:32:46] *** Joins: vague_ (~vague@irssi/staff/vague)
[17:32:59] *** Quits: vague_ (~vague@irssi/staff/vague) (Read error: Connection reset by peer)
[17:34:10] *** Joins: vague_ (~vague@irssi/staff/vague)
[17:35:46] *** Quits: vague_ (~vague@irssi/staff/vague) (Client Quit)
[17:37:28] *** Joins: vague_ (~vague@irssi/staff/vague)
[17:40:25] *** Joins: icedjava37_ (~icedjava3@62.1.215.170.dsl.dyn.forthnet.gr)
[17:43:10] *** Quits: icedjava37 (~icedjava3@194.219.138.169.dsl.dyn.forthnet.gr) (Ping timeout: 252 seconds)
[17:43:56] *** Quits: vague_ (~vague@irssi/staff/vague) (Quit: Something happened, I never quit voluntarily)
[17:44:35] *** Quits: PotatoGim (sid99505@id-99505.tooting.irccloud.com) ()
[17:44:37] *** Quits: keir (~keir@user/keir) (Ping timeout: 244 seconds)
[17:44:51] *** Joins: PotatoGim (sid99505@id-99505.lymington.irccloud.com)
[17:46:16] *** Joins: vague_ (~vague@irssi/staff/vague)
[17:46:26] *** Quits: vague_ (~vague@irssi/staff/vague) (Read error: Connection reset by peer)
[17:47:38] *** Quits: davebaker_ (sid143727@tooting.irccloud.com) ()
[17:47:40] *** Quits: KnoP (~KnoP@218-131-088-212.ip-addr.vsenet.de) (Ping timeout: 240 seconds)
[17:47:52] *** Joins: davebaker_ (sid143727@id-143727.lymington.irccloud.com)
[17:48:15] *** Joins: keir (~keir@user/keir)
[17:48:47] *** Joins: Guest2 (~Guest2@141.228.250.142)
[17:50:18] *** Quits: icedjava37_ (~icedjava3@62.1.215.170.dsl.dyn.forthnet.gr) (Quit: Leaving)
[17:50:32] *** Joins: icedjava37_ (~icedjava3@62.1.215.170.dsl.dyn.forthnet.gr)
[17:55:10] *** Quits: horsepatat (~horsepata@80.89.78.58) (Read error: Connection reset by peer)
[17:56:11] *** Quits: icedjava37_ (~icedjava3@62.1.215.170.dsl.dyn.forthnet.gr) (Quit: Leaving)
[17:56:45] *** Quits: karjala (sid176588@id-176588.tooting.irccloud.com) ()
[17:57:00] *** Joins: karjala (sid176588@id-176588.lymington.irccloud.com)
[17:58:47] *** Quits: aspic (~shifty~~~@ppp121-44-109-179.syd-gls-har-bras38.tpg.internode.on.net) (Ping timeout: 260 seconds)
[17:59:04] *** Joins: aspic (~shifty~~~@ppp121-44-125-254.syd-gls-har-bras39.tpg.internode.on.net)
[18:00:23] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[18:00:24] *** Joins: G_Sabino1ullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[18:01:09] *** Joins: vague_ (~vague@irssi/staff/vague)
[18:01:28] *** Quits: vague_ (~vague@irssi/staff/vague) (Client Quit)
[18:01:53] *** Quits: keir (~keir@user/keir) (Quit: keir)
[18:01:57] * GumbyPAN CPAN Upload: Locale-Codes-3.68 by SBECK https://metacpan.org/release/SBECK/Locale-Codes-3.68
[18:02:54] *** Joins: keir (~keir@user/keir)
[18:07:55] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[18:08:03] *** Quits: perigrin (sid218253@id-218253.tooting.irccloud.com) ()
[18:08:18] *** Joins: perigrin (sid218253@id-218253.lymington.irccloud.com)
[18:16:25] *** Joins: zacts (~zacts@user/zacts)
[18:21:18] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 244 seconds)
[18:22:36] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[18:22:53] *** Quits: keir (~keir@user/keir) (Quit: keir)
[18:23:05] *** Joins: keir (~keir@user/keir)
[18:26:05] *** Quits: art1 (~romeyke@p200300ccdf04f300f54a17ca4803ac83.dip0.t-ipconnect.de) (Quit: Leaving.)
[18:29:48] *** Joins: bit4bit (~bit4bit@190.128.123.78)
[18:30:07] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[18:30:19] *** Quits: bit4bit (~bit4bit@190.128.123.78) (Read error: Connection reset by peer)
[18:32:04] *** Joins: bit4bit (~bit4bit@190.128.123.78)
[18:39:53] *** Quits: keir (~keir@user/keir) (Quit: keir)
[18:40:25] *** Joins: keir (~keir@user/keir)
[18:40:52] *** Quits: keir (~keir@user/keir) (Client Quit)
[18:41:17] *** Joins: keir (~keir@user/keir)
[18:47:32] *** Quits: keir (~keir@user/keir) (Quit: keir)
[18:47:51] *** Joins: keir (~keir@user/keir)
[18:49:48] *** Quits: aspic (~shifty~~~@ppp121-44-125-254.syd-gls-har-bras39.tpg.internode.on.net) (Ping timeout: 260 seconds)
[18:50:11] *** Quits: veesh (~veesh@89.237.99.135) (Remote host closed the connection)
[18:50:34] *** Joins: veesh (~veesh@89.237.99.135)
[18:52:59] *** Joins: icedjava37 (~icedjava3@62.1.215.170.dsl.dyn.forthnet.gr)
[18:54:30] *** Quits: mteo (francis@user/francis) (Remote host closed the connection)
[18:56:57] *** Joins: fb61 (~Frank@ip-109-43-115-183.web.vodafone.de)
[19:00:55] *** Quits: tag (sid271787@id-271787.tooting.irccloud.com) ()
[19:01:10] *** Joins: tag (sid271787@id-271787.lymington.irccloud.com)
[19:02:04] * GumbyPAN CPAN Upload: Game-Life-Faster-0.005_01 by WYANT https://metacpan.org/release/WYANT/Game-Life-Faster-0.005_01
[19:05:21] * shlomif washes he could game life faster ;)
[19:05:54] <homura> wishes*
[19:06:16] * shlomif wishes he could game life faster ;)
[19:06:25] *** Quits: zakame (~zakame@user/zakame) (Remote host closed the connection)
[19:07:38] *** Joins: zakame (~zakame@user/zakame)
[19:07:40] *** Quits: bit4bit (~bit4bit@190.128.123.78) (Quit: Leaving)
[19:10:59] *** Quits: integral (sid296274@user/integral) ()
[19:11:21] *** Joins: integral (sid296274@user/integral)
[19:11:35] <shlomif> homura: thanks
[19:19:23] <vanfanel64> wseval: $_ = q{beg 6:30p 7:30p 18:30 1830 PM 06:30PM 2:00a 14:00 end};[ m{(?<t>(?&t24)|(?&t12)) (?(DEFINE) (?<ampm>\h*[AP]M?) (?<min>[0-5][0-9]) (?<t24>(?:[01][0-9]|2[0-3])\:?(?&min)(?&ampm)?) (?<t12>(?:[1-9]|1[012])\:(?&min)(?&ampm)) )}igx ];
[19:19:25] <perlbot> vanfanel64: ["6:30p",undef,undef,undef,undef,"7:30p",undef,undef,undef,undef,"18:30",undef,undef,undef,undef,"1830 PM",undef,undef,undef,undef,"06:30PM",undef,undef,undef,undef,"2:00a",undef,undef,undef,undef,"14:00",undef,undef,undef,undef]
[19:20:59] <vanfanel64> I am learning how to use (?(DEFINE)...) but I do not understand why those undefs are included. (?<t>(?&t24)|(?&t12)) should be what is matched, why the DEFINE block are just definitions to be used in the main body, if I understand correctly. Am I not understanding correctly?
[19:21:31] *** Joins: mteo (francis@user/francis)
[19:22:47] *** Joins: willthechill (~willthech@2600:1700:8c61:3ed0:61e9:b352:c0b7:8092)
[19:22:47] *** Quits: dotandimet (~dotandime@evomr2.evogene.com) (Read error: Connection reset by peer)
[19:25:54] <vanfanel64> Where are these sets of four undef that follow each match coming from?
[19:29:31] *** Quits: keir (~keir@user/keir) (Quit: keir)
[19:30:41] <Botje> beats me, I don't even understand the regex.
[19:30:57] *** Quits: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr) (Ping timeout: 245 seconds)
[19:32:39] *** Quits: jplesnik (jplesnik@nat-pool-brq-t.redhat.com) (Quit: Leaving)
[19:32:39] <vanfanel64> Botje: I am defining reusable regex patterns, like (?<ampm>\h*[AP]M?) to match a 'AM' or 'PM' portion that follows optional whitespace \h* and where the M is optional.
[19:33:33] <vanfanel64> I also define a patterns for the minute portion, (?<min>[0-5][0-9]), to be reused in the 24 and 12 hour time patterns along with the ampm pattern.
[19:34:08] <vanfanel64> Then (?<t>(?&t24)|(?&t12)) puts those patterns to work to match against the input string, or so was my understanding.
[19:34:40] <xenu> all named capture groups are also numbered capture groups, those in (?(DEFINE)) are no exception
[19:34:41] <revhippie> it looks like the definitions count.
[19:34:45] <vanfanel64> It matches the text that I wanted, but also 4 undef values
[19:34:49] <xenu> it is unfortunate, but documented
[19:35:10] <vanfanel64> revhippie, wait, why would those count? Those are just definitions, not part of the main pattern?
[19:35:21] *** Joins: magla (~gelignite@55d4a93f.access.ecotel.net)
[19:35:25] <xenu> https://perldoc.perl.org/perlre#(DEFINE)
[19:35:25] <vanfanel64> xenu, same question
[19:35:25] <Paperbot_> Link title(s): [ perlre - Perl regular expressions - Perldoc Browser ]
[19:35:26] <revhippie> Finally, keep in mind that subpatterns created inside a DEFINE block count towards the absolute and relative number of captures, so this:
[19:35:26] <xenu> >Finally, keep in mind that subpatterns created inside a DEFINE block count towards the absolute and relative number of captures, so this:
[19:35:32] <xenu> heh
[19:35:47] <vanfanel64> Oh, well that feels very strange to me
[19:36:56] <gordonfish> vanfanel64: You can use a while loop and grep $+{t}, or if you want assign to an array like in your perlbot example:
[19:36:57] <xenu> i can't answer why, but that's how it works. because of that it's a good idea to never use $1 etc if you have named captures in your pattern
[19:37:01] <gordonfish> sweval: $_ = q{beg 6:30p 7:30p 18:30 1830 PM 06:30PM 2:00a 14:00 end}; [ grep defined, m{(?<t>(?&t24)|(?&t12)) (?(DEFINE) (?<ampm>\h*[AP]M?) (?<min>[0-5][0-9]) (?<t24>(?:[01][0-9]|2[0-3])\:?(?&min)(?&ampm)?) (?<t12>(?:[1-9]|1[012])\:(?&min)(?&ampm)) )}igx ];
[19:37:02] <perlbot> gordonfish: ["6:30p","7:30p","18:30","1830 PM","06:30PM","2:00a","14:00"]
[19:38:05] *** Joins: thrig (~thrig@65.113.153.50)
[19:38:20] <gordonfish> sweval: my @m; $_ = q{6:30p 7:30p 18:30 1830 PM 06:30PM 2:00a 14:00}; push @m, $+{t} while m{(?<t>(?&t24)|(?&t12)) (?(DEFINE) (?<ampm>\h*[AP]M?) (?<min>[0-5][0-9]) (?<t24>(?:[01][0-9]|2[0-3])\:?(?&min)(?&ampm)?) (?<t12>(?:[1-9]|1[012])\:(?&min)(?&ampm)) )}igx; \@m; # Or use something like List::Gather
[19:38:21] <perlbot> gordonfish: ["6:30p","7:30p","18:30","1830 PM","06:30PM","2:00a","14:00"]
[19:39:13] <gordonfish> vanfanel64: ^ the while version is probably the safer bet in general, as you're ensuring that you're getting the matches you want, <t> in this case.
[19:40:46] <vanfanel64> Thank you. I still do not understand the logic behind definitions in DEFINE blocks counting / creating capture groups when they should be reusable definitions and not part of the main body.
[19:40:52] *** Quits: zakame (~zakame@user/zakame) (Remote host closed the connection)
[19:41:11] <vanfanel64> It is documented, so at least there is that
[19:41:59] *** Joins: zakame (~zakame@user/zakame)
[19:42:06] <vanfanel64> I really really like the idea of reusable bits of regex
[19:42:12] *** Parts: fb61 (~Frank@ip-109-43-115-183.web.vodafone.de) ()
[19:44:33] <gordonfish> It is nice. Keep in mind one could always just define pieces of regex my $re_foo = qr//; style and just use that in a pattern, and it'll work in any version of Perl that hasn't been declared an archeological site.
[19:45:16] <thrig> require 'trilobytes.pl';
[19:45:18] <gordonfish> And to be honest, that can look a bit cleaner too.
[19:45:43] <gordonfish> thrig: That's a lot of bytes.
[19:45:46] <vanfanel64> That sure is a lot of bytes
[19:46:30] *** Quits: kiwiroy (sid374179@tooting.irccloud.com) ()
[19:46:43] <gordonfish> s/trilo/giga/ ?
[19:46:46] *** Joins: kiwiroy (sid374179@id-374179.lymington.irccloud.com)
[19:47:35] <vanfanel64> Giga bytes are a billion bytes, peta are a trillion
[19:47:48] <gordonfish> Oh, indeed. Oops.
[19:47:58] <gordonfish> s/trilo/peta/
[19:50:08] <thrig> rumor has it Cambrian Analytics was involved in the extinction event
[19:51:20] <xq> vanfanel64: reuse of subpatters can be done without writing unreadable regexes
[19:51:46] *** Joins: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e)
[19:51:57] <zgu> seems like an easier way around this is to just not use ambiguous confusing time formats
[19:52:01] <xq> I don't think the above thing will pass any code review
[19:53:38] <xq> https://paste.debian.net/hidden/0f52a2d6/
[19:53:39] <Paperbot_> Link title(s): [ Debian Pastezone ]
[19:53:42] <thrig> but you need to do something with invalid dates such as September 3rd 1752
[19:54:23] *** Quits: rwp0 (~rwp0@user/rwp0) (Ping timeout: 256 seconds)
[19:55:36] * shaldannon recalls working on a newspaper photo gallery data migration from plain 'ol html to a database and having to parse the photo caption dates ... with all sorts of funkiness like 3 digit 20th century years, "XX"'s for days, incorrect month abbreviations (like "Spet." for September), ad nauseum.
[19:56:09] <shaldannon> the regex for matching that was quite lengthy
[19:56:11] <zgu> isn't that only invalid in england?
[19:56:22] <xq> the more complex the case is the simpiler your regex should be
[19:56:39] <thrig> it depends! the Great Gregorian Migration took centuries
[19:56:43] <xq> because if you have a complex case and use a complex regex, now you are in a whole lot of trouble
[19:57:15] <shaldannon> sometimes cases like that have me rethinking the life decisions that led me to that point :-}
[19:58:26] *** Quits: choroba (~E.Choroba@88.146.255.106) (Quit: Leaving)
[19:59:26] <zgu> there was someone in ##electronics i think who always wrote years with 5 digits, like 02021
[19:59:36] <shaldannon> WTF!?
[19:59:50] <shaldannon> future proofing?
[20:00:01] <thrig> fails the y100k problem
[20:00:05] <shaldannon> LMAO
[20:00:23] <zgu> we have more than 97000 years to worry about that
[20:00:31] <xenu> eval: 02021
[20:00:33] <perlbot> xenu: 1041
[20:00:46] <shaldannon> yeah, just kick the can down the road and let some other poor sucker deal with it
[20:00:48] <zgu> yeah i would always parse them as octal
[20:01:31] <thrig> nine-digit octals are not unknown in computing
[20:03:38] *** Joins: mattil (~mattil@87-92-211-212.rev.dnainternet.fi)
[20:04:24] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 276 seconds)
[20:04:54] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[20:07:53] *** Quits: mattil (~mattil@87-92-211-212.rev.dnainternet.fi) (Ping timeout: 252 seconds)
[20:08:32] *** Joins: xenial-user5 (~androirc@20014C4C17E1D200D55AD54CEF01672A.catv.pool.telekom.hu)
[20:08:38] <vanfanel64> xq, thank you. Yes qr// seems to be much cleaner, as someone else mentioned too. As for ambiguous confusing time formats, I am matching from text from various sources written by varying people, so it might not be written correctly. It could 18:30, 1830, maybe with 'am/pm', with or with or without the 'm' or space inbetween. It could be 12 hour frormat as well (which I consider only with single digit hours with no leading zero)
[20:09:36] <vanfanel64> and with mandatory am/pm
[20:10:06] <zgu> the question is does "18:30 pm" mean 18:30 or 06:30 the next day?
[20:10:27] <vanfanel64> shaldannon, who on earth uses 3 digit century years???
[20:10:56] <vanfanel64> Also, Spet for semtember is complete ass
[20:11:13] <thrig> have you not met humans?
[20:11:18] *** Quits: zakame (~zakame@user/zakame) (Remote host closed the connection)
[20:11:21] <vanfanel64> september
[20:11:41] <vanfanel64> thrig, from that little blue t-shirt producing planet?
[20:11:41] <vague> September if we are pedantic :)
[20:12:23] *** Joins: zakame (~zakame@user/zakame)
[20:13:19] <vanfanel64> And I know humans do crazy things, but I do not believe I have seen 3 digit century years and to be honest I am not sure what that would even look like? 997 for 1997 ? Or 197 ??
[20:14:01] <thrig> 097 would be my guess
[20:14:14] <vanfanel64> How does that work?
[20:14:31] <thrig> something like printf "%03d" does
[20:14:35] <vanfanel64> 97 years from 1990?
[20:14:40] <vanfanel64> But why 3 digits
[20:14:44] *** Quits: holyghost (~holyghost@109.136.39.83) (Quit:  bbl)
[20:14:48] <vanfanel64> from 1900
[20:14:51] <Botje> we are in the year of our lord 121, mktime be praised.
[20:15:05] <thrig> are you aware of how localtime on unix counts years?
[20:15:07] <vanfanel64> So it is from the bible?
[20:15:32] <shaldannon> vanfanel64: someone who forgot a digit
[20:15:33] <vanfanel64> thrig, vaguely
[20:15:33] <Botje> the calculation was already 1900 + x
[20:15:50] <shaldannon> they were hand typing dates into html and were sloppy
[20:16:03] <zgu> oh yeah the 1900 epoch
[20:16:06] <vanfanel64> Ok but why would there be three digits for 20th century if it is 1900 + x
[20:16:09] <shaldannon> like 199 instead of 1998
[20:16:34] <vanfanel64> eval: 1900 + 199
[20:16:35] <perlbot> vanfanel64: 2099
[20:16:41] <shaldannon> because there's no way that someone took a photo in 199 AD, and the date caption said it was taken in 199
[20:16:50] <shaldannon> for some modern sporting event
[20:16:58] <vanfanel64> shaldannon, could have been carved in stone ;p
[20:17:27] <shaldannon> *eyeroll*
[20:17:34] <vanfanel64> shaldannon, was this a website about ancient artifacts?
[20:17:47] <vanfanel64> Or something of the subject
[20:18:00] <vanfanel64> Oh, modern sporting event..
[20:18:11] <shaldannon> it was a modern US news paper online site photo gallery
[20:18:28] <shaldannon> and lazy staff and lazier proofreading
[20:18:43] <shaldannon> the editors clearly weren't doing their jobs
[20:18:48] <vanfanel64> I really really wonder how they ended up using years like that in a public facing place
[20:18:53] <thrig> editors cost money, which cuts into profits
[20:19:06] <shaldannon> so do lazy employees
[20:19:40] <vanfanel64> I can understand 2 digit years, but 3, that just feels intentional, out of spite perhaps, by someone 
[20:19:47] <shaldannon> not to publicly shame anyone, but it was Nando Media, online sister company to the News and Observer of Raleigh, now McClatchy Interactive
[20:20:10] <vanfanel64> Wait, so cthulhu is a subscriber?
[20:21:05] <vanfanel64> Observer of Raleigh sounds like it would be local for him
[20:22:02] <gordonfish> Probably run by Hastur
[20:22:47] *** Quits: zakame (~zakame@user/zakame) (Remote host closed the connection)
[20:22:53] <xq> Test2 is such an unfortunate name for something so interesting
[20:22:53] *** Joins: zakame_ (~zakame@user/zakame)
[20:23:05] <xq> they should have called it the new testament
[20:23:10] <xq> or something like that
[20:23:14] <thrig> GNU/testament
[20:23:19] <Exodist> "they" being me :-)
[20:23:25] <xq> yeah you :)
[20:23:31] <shaldannon> that "GNU/" thing always rubs me the wrong way
[20:23:48] <Exodist> I actually considered some pun names, but my experience with 'fennec' told me that random or fun names result in low discoverability and ridicule.
[20:23:56] <zgu> Quantum Observer of Raleigh
[20:24:01] <zgu> all the wave functions fit to collapse
[20:24:05] <Exodist> Test2 ont he other hand was very discoverable, and made it obvious what the intent was. Even if it is boring
[20:24:09] <thrig> why is a gnu rubbing you the wrong way? wait, don't answer that
[20:24:15] <shaldannon> eek
[20:24:58] <zgu> i hear RMS rubbed some people the wrong way
[20:25:06] <shaldannon> he probably enjoyed that
[20:26:20] <Grinnz> Exodist: depends on the situation really. Starman was a much better name than Plack::HTTP::Server::Prefork or whatever. but I agree Test2 was the right name in this case
[20:27:14] <xenu> it's hard to have a descriptive name when there are many modules implementing the same thing
[20:28:01] <shaldannon> yeah ... module names are like women.  the good ones are taken and the rest are awful (joke)
[20:28:38] <shaldannon> you could just as easily say that about men if that's your preference
[20:28:47] *** Quits: xenial-user5 (~androirc@20014C4C17E1D200D55AD54CEF01672A.catv.pool.telekom.hu) (Ping timeout: 245 seconds)
[20:29:10] <Grinnz> i was gonna say, it's not a gender exclusive problem to my understanding :P
[20:29:23] <shaldannon> indeed.
[20:29:33] <shaldannon> lunch time
[20:30:45] <xenu> dendrophiles otoh don't have this problem
[20:33:39] <buu> The good ones are lichen?
[20:35:05] *** Quits: Guest2 (~Guest2@141.228.250.142) (Quit: Client closed)
[20:37:13] * GumbyPAN CPAN Upload: MIDI-RtMidi-FFI-0.03-TRIAL by JBARRETT https://metacpan.org/release/JBARRETT/MIDI-RtMidi-FFI-0.03-TRIAL
[20:37:13] * GumbyPAN CPAN Upload: AnyEvent-SOCKS-Client-0.05 by ZLOBUS https://metacpan.org/release/ZLOBUS/AnyEvent-SOCKS-Client-0.05
[20:39:42] <gordonfish> Fungi lichen good
[20:39:43] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 252 seconds)
[20:41:25] <ether> I despise cute codewords for projects, precisely because of the lack of discoverability
[20:41:42] <ether> they're fine for internal use, but don't make the poor users have to deal with them
[20:42:32] <gordonfish> Not always true. Debian, for example, uses names from the Toy Story movies exclusively (gotta love Sid for the unstable branch) and that makes it very discoverable.
[20:43:28] <gordonfish> e.g., Wheezey, Jessie, Stretch, Buster, and lately, Bullseye
[20:43:36] <tm604> yes, the nice clear alphabetical ordering of Debian release names definitely helps
[20:43:44] <gordonfish> What seems to matter is if the names stands out among the crowds
[20:44:45] <xq> debian use of those names is absolutely terrible
[20:45:10] <xq> was stretch a version before jessie or after?
[20:45:11] <gordonfish> Why? I find it makes things easy to search in many sites
[20:45:31] <tm604> they don't even encode well for speech - stretch vs. etch, for example
[20:45:41] <gordonfish> xq: jessie was before stretch and after wheezey
[20:45:47] <xq> or, if someone is talking about buster, are they talking about stable or testing?
[20:45:52] *** Quits: magla (~gelignite@55d4a93f.access.ecotel.net) (Quit: Stay safe!)
[20:45:55] <xq> etc
[20:45:56] <mason> xq: That's a temporal question.
[20:46:04] <mason> The answer is arguably "yes".
[20:46:15] <mason> And you can throw in oldstable for kicks.
[20:46:43] <xq> if anything using numbers here makes more sense
[20:46:47] <gordonfish> buster was the current stable until a couple weeks ago, now bullseye is current stable
[20:47:00] <xq> 11 is current stable, 12 is testing
[20:47:14] * GumbyPAN CPAN Upload: Pod-Perldoc-ToToc-1.122 by BDFOY https://metacpan.org/release/BDFOY/Pod-Perldoc-ToToc-1.122
[20:48:12] <tm604> I assume people who use the Debian release names instead of numbers also use m/d/y for their filenames
[20:48:27] <xenu> m\d\y
[20:48:31] *** Quits: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e) (Ping timeout: 252 seconds)
[20:49:08] <fuzzix> My distro naming scheme is based on Red Dwarf bit parts. Releases are named in order of how strong I felt the performance was. Unstable is "Legion", stable is "Hudzen-10"
[20:49:32] <gordonfish> And a simple search, you can find https://www.debian.org/releases/ (or the wikipedia article) that will give you the list.
[20:49:32] <Paperbot_> Link title(s): [ Debian -- Debian Releases ]
[20:50:32] <xq> codenames for debian releases may have worked when there was a tiny amount of them
[20:51:11] <xq> but now it is just 12 arbitrary strings, that mean nothing to people unfamiliar with american culture
[20:52:04] <thrig> hopefully Google will make a Kenny product one of these years
[20:52:13] <huf> no, they were terrible even then
[20:52:16] <huf> they're from toy story
[20:52:21] <huf> I've never seen that ugly ass shit
[20:52:22] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 252 seconds)
[20:52:32] <huf> they should've just stuck with numbers
[20:52:46] *** Joins: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e)
[20:52:52] <gordonfish> xq: You don't have to be familiar with the films or culture, it just matters in the end that they stand out, and they do. I wouldn't confuse "buster", "bullseye", ets, with any other linux distro, or much of anything else. They are easily searchable, with 'debian' or 'linux' added. So they get the job done, imho.
[20:52:58] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[20:53:08] <gordonfish> s/\bets\b/etc/
[20:53:57] <gordonfish> huf: They still uses numbers as well
[20:54:11] <huf> not really
[20:54:16] <huf> they just pretend
[20:54:23] <gordonfish> thrig: And when they kill it?
[20:54:42] <thrig> my god! they killed kenny!
[20:54:56] <gordonfish> x 1_000_000_000_000_000_000_000
[20:55:40] <xq> it's way easier to keep track of the current stable with a number
[20:55:49] <gordonfish> 11.0
[20:55:51] <xq> a number that will increment with next release
[20:56:00] <xq> as opposed to an arbitrary string
[20:56:07] <xq> that will mutate into another arbitrary string
[20:56:08] <gordonfish> Again, see the link I linked too. Both numbers and a name to go with them.
[20:56:56] <xq> gordonfish: being a long term debian user, I am extremely well aware of what is used
[20:57:37] <huf> honestly they should just have gone with the year the stable was released
[20:57:58] <gordonfish> xq: I like version numbers too, thoiugh I'd argue having a name to go with the number helps with recognizability and searchability, especially with bigger public facing things instead of lower level, more hidden things like kernels, libs, etc.
[20:58:01] <huf> experimental, unstable, testing, <year>
[20:58:29] <gordonfish> xq: Cool
[20:58:40] <huf> but also stable, if you dont care and just want to roll forward
[20:58:45] <huf> none of this cutesy shit
[20:58:45] <zgu> so Hamm would have been Debian '98
[20:58:58] <thrig> 198
[20:59:04] <huf> YES
[20:59:13] <zgu> would potato be Debian 2000 or millenium edition?
[20:59:22] <huf> potato, potato
[20:59:25] <huf> either one :)
[21:00:29] <huf> thrig: wait no, 198 is debian 2098...
[21:00:34] *** Joins: fwg_ (~fwg@user/fwg)
[21:00:37] <huf> you're off by an entire century!
[21:00:41] *** Quits: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e) (Ping timeout: 252 seconds)
[21:00:49] <gordonfish> tardis time
[21:00:57] <thrig> this is not without tradition in computing
[21:01:18] *** Quits: fwg (~fwg@user/fwg) (Ping timeout: 256 seconds)
[21:01:31] <huf> or maybe the one in 2000 should've been versioned 19100 
[21:01:39] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[21:01:51] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[21:02:28] *** Quits: tobybl (~tobybl@189.192.115.87.dyn.plus.net) (Remote host closed the connection)
[21:03:44] <simcop2387> perlbot: hi
[21:03:45] <perlbot> simcop2387: END OF LINE
[21:04:04] <simcop2387> good it came up properly last night.  didn't check it after i restarted the server to put in the UPS battery
[21:04:25] <simcop2387> perlbot, farnsworth 18 A hr * 24 V -> W hr
[21:04:27] <perlbot> simcop2387:  432 
[21:04:41] <simcop2387> so i've got 432 Watt hours of UPS now.
[21:05:41] <simcop2387> and an estimated 3588 seconds of on time from it.  nice.
[21:08:13] *** Joins: XV8 (~XV8@2601:5cb:c001:50:ed26:7d3a:d565:cdd4)
[21:08:19] *** Quits: dimbag (~Couture@dynamic-193-228-166-152.ppp.kmv.ru) (Ping timeout: 252 seconds)
[21:08:51] *** Joins: Couture_ (~Couture@dynamic-193-228-166-152.ppp.kmv.ru)
[21:10:05] *** Quits: Couture_ (~Couture@dynamic-193-228-166-152.ppp.kmv.ru) (Remote host closed the connection)
[21:10:41] *** Joins: Couture_ (~Couture@dynamic-193-228-166-152.ppp.kmv.ru)
[21:12:06] *** Quits: Couture_ (~Couture@dynamic-193-228-166-152.ppp.kmv.ru) (Remote host closed the connection)
[21:12:33] *** Joins: Couture_ (~Couture@dynamic-193-228-166-152.ppp.kmv.ru)
[21:18:13] *** Quits: shlomif (~shlomif@87.68.240.100.adsl.012.net.il) (Ping timeout: 252 seconds)
[21:27:28] <buu> simcop2387: NEED MORE
[21:27:31] <buu> POWERRRRRRRRRRRRRRRRR
[21:28:09] <zgu> that's energy, not power
[21:28:10] <simcop2387> buu: it's already a 1500VA system (though only 850W).
[21:28:32] <buu> =[
[21:28:35] <zgu> so in practical terms 850W
[21:28:50] <zgu> since you're probably not using any loads with that bad a power factor
[21:29:10] <buu> Measuring batteries sucks
[21:30:50] <zgu> 40000mAh
[21:31:48] <zgu> perlbot: farnsworth 18 A hr -> nA day
[21:31:49] <perlbot> zgu:  750000000.0 
[21:32:23] <thrig> no true scottsman would fail to measure up to the battery caber toss
[21:36:18] * GumbyPAN CPAN Upload: Sys-Virt-v7.7.0 by DANBERR https://metacpan.org/release/DANBERR/Sys-Virt-v7.7.0
[21:55:56] *** Joins: Kharec (~Kharec@lfbn-lyo-1-1955-56.w90-66.abo.wanadoo.fr)
[21:57:32] *** Quits: XV8 (~XV8@2601:5cb:c001:50:ed26:7d3a:d565:cdd4) (Quit: Leaving)
[22:00:51] *** Joins: Pali (~pali@user/pali)
[22:03:04] <simcop2387> zgu: it's all switching supplies so 50-70% PF is normal
[22:03:30] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-7-12.prtc.net)
[22:03:33] <simcop2387> decent efficiency on both systems but their power factor is probably not that great.
[22:08:49] <zgu> what's funny is the pure sine wave UPS i have that's marketed for use with active PFC loads is still advertised by the 40% reactive power margin
[22:09:00] <zgu> even though presumably you'd never need that much
[22:09:35] <simcop2387> i think mine is similar if i remember right, been a while since i looked at the specs
[22:10:01] *** Joins: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e)
[22:10:12] <simcop2387> https://www.apc.com/shop/us/en/products/APC-Power-Saving-Back-UPS-Pro-1500/P-BR1500G # this is mine
[22:10:12] <Paperbot_> Link title(s): [ APC Power Saving Back-UPS Pro 1500 - APC USA ]
[22:10:23] <mason> APC is sending me a replacement for the UPS that blew a couple weeks ago.
[22:11:29] <mason> Had a BR1500MS and they're sending a BR1500MS2
[22:13:00] <simcop2387> yea mine's not pure sinewave apparently, just the next step down instead of square wave.  good enough for me since it's all computers on it.
[22:15:16] <thrig> gotta run that space heater and vacuum cleaner
[22:15:19] <mason> I can't see any difference between the MS and the MS2, but none of my older units have died, whereas this MS was replaced last year and is being replaced again now. Hopefully since the specs are identical the MS2's revision is mostly "it dies less"
[22:17:37] *** Quits: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:b5f8:2ce2:b911:512e) (Ping timeout: 252 seconds)
[22:18:30] <simcop2387> mason: looks like the main difference is that the communication cable goes from their rj45 to a normal usb type
[22:19:00] <zgu> does APC use native USB HID now?
[22:19:02] <simcop2387> and slightly smaller battery 228 VAh vs 250VAh
[22:19:25] <simcop2387> zgu: they have for about a decade, but they've used that stupid fucking 8P8C connector for it the whole time
[22:19:27] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-7-12.prtc.net) (Ping timeout: 256 seconds)
[22:19:45] <zgu> oh it does USB over 8p8c
[22:20:01] <simcop2387> yea
[22:20:51] <simcop2387> at least this is all based on what i saw on bhphoto for the two models.  didn't see that detail on apc's site
[22:21:18] <thrig> olden ups were hell on "you need a special (expensive!) cable that might just be serial with some of the cables mixed around"
[22:22:21] <mason> The new one says it ships with a cable, so I'm going to blissfully ignore everything, plug it in, and tell apcupsd to look at USB.
[22:22:49] <thrig> the less good usb ones identify the same on usb, so you can't have two on the same system
[22:22:52] <simcop2387> thrig: i'm still annoyed that i can't find an rs232 chip that'll work for talking to the cyclades alterpath smart power strips i have.  fucking 48V "rs232".
[22:22:58] * zgu just tried to run eix on a debian machine :x
[22:23:02] <mason> But yeah, the "communications" section on the APC site didn't list USB in the same place.
[22:23:24] <buu> I quite enjoyed the power flicker that caused the computers to turn off then the ups refused to turn back on because it didn't like its batteries
[22:23:56] <buu> So I drove 3 hours to press the power button on the ups
[22:24:07] <simcop2387> mason: i've actually started playing with NUTS instead of apcupsd, it actually looks kinda nice comparatively and is natively supported in home assistant too.
[22:24:48] <simcop2387> so i get all kinds of nice logging and can setup smart home automations to trigger based on UPS status.  like change the desk lamp color to red when there's an issue.
[22:24:52] <zgu> i went on a 2-week vacation last month (err... month before last. apparently it's september now). UPS running the modem/router mysteriously died on like day 4
[22:25:03] <thrig> so you have to plug one into one system, another into a second, then write software to figure out if both are down
[22:25:07] <simcop2387> zgu: that's how it always is
[22:25:07] <buu> those are the best
[22:25:07] <zgu> everything behind them kept running but i couldn't access anything remotely
[22:25:19] <thrig> (their software provided needed 32-bit Fedora 12 or so, in 2018 or so)
[22:25:26] <mason> simcop2387: Hah, the desk lamp... That'd get me. I'd be puzzled at why it turned red.
[22:25:38] <buu> zgu: right? Like, everything will more or less reboot if it loses power, or at least enough to bootstrap it with ssh
[22:25:45] <buu> but the ups just stays off and you're very sad
[22:25:53] <zgu> yeah
[22:25:56] <fizzie> Add a siren (in addition to the red lamps), and it'll be just like in the movies.
[22:26:28] <fizzie> Except make it trip on some sort of network IDS, and play back some technobabble messages too.
[22:26:33] *** Quits: fwg_ (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[22:27:03] <simcop2387> mason: i just rebuilt my cheapo desk lamp with these, https://www.amazon.com/dp/B01N2PC9KK and an ESP32, so i can do colors, and more importantly color temperature stuff.  did that for the overhead lights too (though normal bulbs there)
[22:27:06] <Paperbot_> Link title(s): [ Amazon.com: BTF-LIGHTING RGBW RGBNW Natural White SK6812 (Similar WS2812B) 16.4ft 5m 60leds/Pixel... ]
[22:27:40] *** Joins: koolazer (~koo@user/koolazer)
[22:29:08] <zgu> had a neighbor coming over to feed the cat but i didn't feel like asking them to go probing around the server rack
[22:30:00] *** Quits: thrig (~thrig@65.113.153.50) (Remote host closed the connection)
[22:34:42] <buu> heh, I definitely would have
[22:36:34] <simcop2387> zgu: i keep wanting to setup something with an lte backup to let me in and give it control to reset the router and modem.  with Home Assistant i think i finally have the situation that I like for it.  give it some kind of zwave or other non-network control of the relay.
[22:37:39] *** Joins: hudo (~hudo@62.68.27.70)
[22:39:36] <buu> Yeah, I'd love to do some lte backup stuff but it seemed really expensive
[22:39:36] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[22:45:06] <simcop2387> LeoNerd: AHA!  https://www.maximintegrated.com/en/products/interface/transceivers/MAX3250.html
[22:45:07] <Paperbot_> Link title(s): [ MAX3250 ±50V Isolated, 3.0V to 5.5V, 250kbps, 2 Tx/2 Rx, RS-232 Transceiver | Maxim Integrated ]
[22:46:49] *** Joins: wally53 (~wally53@2601:192:100:1175:a96b:ec3c:1f3f:f023)
[22:46:56] <simcop2387> i think that one won't blow up with the 48V serial
[22:47:54] *** Quits: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net) (Ping timeout: 244 seconds)
[22:48:57] <simcop2387> and it's about as expensive as i guessed it'd be.  $7-10 per chip.
[22:49:48] <simcop2387> the fun part is it needs 100V rated caps.  that'll make it a bit bulky
[22:53:31] *** Joins: txtsd (~txtsd@user/txtsd)
[22:53:50] *** Joins: magla (~gelignite@55d4a93f.access.ecotel.net)
[22:54:24] *** Quits: icedjava37 (~icedjava3@62.1.215.170.dsl.dyn.forthnet.gr) (Quit: Leaving)
[22:57:13] *** Quits: proller (~p@2a02:6b8:0:40c:d93f:81b7:31e8:bf88) (Ping timeout: 252 seconds)
[22:59:24] *** Joins: rorx_ (~rorx@cpe-65-24-160-111.columbus.res.rr.com)
[22:59:55] *** Quits: rorx (~rorx@cpe-65-24-160-111.columbus.res.rr.com) (Ping timeout: 252 seconds)
[23:05:36] <gordonfish> { Re: <simcop2387> so i've got 432 Watt hours of UPS now. } Nice
[23:08:25] *** Quits: zakame_ (~zakame@user/zakame) (Remote host closed the connection)
[23:09:14] *** Joins: zakame_ (~zakame@user/zakame)
[23:11:27] <gordonfish> { Re: <xq> https://paste.debian.net/hidden/0f52a2d6/ } That's how I'd do it too. Also, are you using t?csh or similar? Feels kind of rare to see a % prompt these days.
[23:11:28] <Paperbot_> Link title(s): [ Debian Pastezone ]
[23:12:21] <homura> asking for a favor
[23:12:42] <homura> want to kick off my journey with perl
[23:12:54] <gordonfish> Ask the Don
[23:12:56] <homura> i see Learning Perl 8th edition is out
[23:13:03] <homura> anybody has the PDF?
[23:13:28] <gordonfish> I believe there are more modern book that are preferable to that one
[23:13:48] <simcop2387> perlbot: learning perl
[23:13:49] <perlbot> simcop2387: Stored  as 
[23:13:54] <simcop2387> bah fak you bot
[23:13:57] <homura> you believe wrong
[23:14:00] <gordonfish> what the
[23:14:03] <simcop2387> perlbot: books
[23:14:03] <perlbot> simcop2387: For Perl books see http://books.perl.org/ and http://perl-begin.org/books/ . Especially see the Modern Perl factoid and perl-tutorial.org
[23:14:29] <homura> the one i just mentioned is the most recently published perl book in the world
[23:14:30] <gordonfish> Am I thinking of a different book then? I thought Learning Perl had a lot of out of date info
[23:14:38] <Grinnz> learning perl is not recommended
[23:14:47] <Grinnz> especially not for beginners
[23:15:11] <Grinnz> anyway, even if it was, we aren't going to pirate it for you
[23:15:13] <gordonfish> homura: Please see simcop2387's (via perlbot) links
[23:15:16] <homura> i'm not a total beginner tho
[23:15:33] <Grinnz> perlbot: mp
[23:15:34] <perlbot> Grinnz: 1. The book by chromatic - http://modernperlbooks.com/books/modern_perl_2016/index.html 2. The blog - http://modernperlbooks.com 3. http://metacpan.org/release/Modern-Perl
[23:15:38] <Grinnz> perlbot: bp
[23:15:39] <perlbot> Grinnz: Please use Curtis "Ovid" Poe's "Beginning Perl" published by Wrox if you need a beginner's book. Alternatives for people who already know programming: "Modern Perl" (see mp) and "Programming Perl" (O'Reilly). The original "Beginning Perl" and O'Reilly's "Learning Perl" are outdated. | http://perl-tutorial.org/rejected/learning_perl_6th/
[23:15:59] <Grinnz> "recently published" doesn't make it modern, sadly
[23:16:17] <Grinnz> they still haven't fixed any of the stuff listed in that link
[23:16:30] <gordonfish> Grinnz: To be fair a lot of people get used to finding PDF/etc of books for college from what I understand (wish that was a thing when I studied)
[23:16:43] <gordonfish> (Given how insane text book prices are)
[23:17:36] <Grinnz> sure, but perl has plenty of actually-free resources there's no need to pirate the already cheap books
[23:17:42] *** Quits: zakame_ (~zakame@user/zakame) (Quit: WeeChat 2.9)
[23:17:47] <gordonfish> (Then they update one paragraph and push out another edition and it becomes mandatory - I know plenty of people with kids in college, and this is what I keep hearing.)
[23:18:12] <Grinnz> perlbot: tutorials
[23:18:12] <perlbot> Grinnz: For Perl books and tutorials, see http://perl-tutorial.org/ , http://learn.perl.org/ , https://www.perl.org/books/library.html , http://perl-begin.org/tutorials/ , http://perlmonks.org/index.pl?node=Tutorials , or see quickstart
[23:18:24] *** Joins: shlomif (~shlomif@87.68.240.100.adsl.012.net.il)
[23:18:46] <gordonfish> Grinnz: Exactly, though I'm talking about commercial books, and I feel most of them (the well maintained more modern ones especially) are well worth the money.
[23:19:08] <Grinnz> the general textbook industry is certainly a scam
[23:19:10] *** Quits: APic (apic@apic.name) (Ping timeout: 240 seconds)
[23:19:15] <gordonfish> Yes
[23:19:29] <gordonfish> It was already effed like a $2 hooker when I went TBH
[23:19:44] <Grinnz> programming specific books usually don't suffer that problem fortunately
[23:20:05] <gordonfish> Yes, I've never really had a problem finding one for a sane price
[23:21:13] <homura> good day sirs
[23:22:05] <homura> https://www.amazon.com/Learning-Perl-Making-Things-Possible/dp/1492094951/
[23:22:07] <Paperbot_> Link title(s): [ Learning Perl: Making Easy Things Easy and Hard Things Possible: Schwartz, Randal L., foy, brian ... ]
[23:22:26] <xq> gordonfish: zsh on that computer
[23:23:03] <gordonfish> xq: Oh, so custom prompt then? I'm used to seeing $ (or # for root) on anything bourne related.
[23:23:28] <gordonfish> But one can of course set their PS1 how ever they wish
[23:23:56] <gordonfish> I remember using C shells quite a while back, so seeing a % always makes be think back to that.
[23:24:25] <Grinnz> PS/2 on the other hand is quite unforgiving
[23:24:37] <Grinnz> but it had great games
[23:26:04] <genio> Does that updated version of LP fix the issues we have with it?
[23:26:06] <gordonfish> Yeah but MCGA was quirky and good hardware for MCA interfaces were hard to find.
[23:26:26] <Grinnz> no
[23:27:05] <homura> ok i just got lucky
[23:27:09] <genio> sigh
[23:27:11] <homura> successfully acquired desired commodity
[23:27:13] <gordonfish> genio: Maybe in the same sense of updating windows vista
[23:27:27] <homura> Learning Perl 8th edition TruePDF: http://library.lol/main/0DA24CC66FF7A20C0908C10A575D5E92
[23:27:34] <Paperbot_> Link title(s): [  ]
[23:27:39] <Grinnz> please don't share pirated material
[23:27:40] <homura> let's gooooooooooo
[23:27:43] <homura> sry
[23:27:45] <genio> Please don't post ways to pirate material
[23:28:02] <gordonfish> err, .lol is a TLD now? I know I shouldn't be surprised with TLDs opened up...
[23:28:16] <genio> Use Beginning Perl like the bot showed. LP is not a great source
[23:28:58] <zgu> is there .wtf yet?
[23:30:40] <homura> genio: >This eighth edition covers recent changes to the language up to version 5.34
[23:30:40] <Grinnz> the problems with it weren't that it doesn't cover recent chagnes
[23:30:40] <homura> it's bleeding edge bro
[23:30:52] <Grinnz> it's that its examples are perl 4 style
[23:30:54] <zgu> it appears there is
[23:30:55] <zgu> wtf.	86400	IN	NS	demand.gamma.aridns.net.au.
[23:31:15] <Grinnz> http://perl-tutorial.org/rejected/learning_perl_bdfoy/ lists the issues
[23:31:15] <Paperbot_> Link title(s): [ learning perl bdfoy ]
[23:31:23] <genio> homura: Just because it's the latest book doesn't mean it's the best. It has _many_ issues in that it teaches bad practices everywhere
[23:31:34] <zgu> australian nameservers. should be .wtfmate
[23:32:10] <genio> So, please, listen to us when we tell you that BP is the better option to learn Perl.
[23:33:24] <MikeGeorge[m]> Yeah, I learned from Learning Perl years ago, and it's great if you want to use Perl in a vacuum.  The writing is excellent.
[23:34:03] <homura> Grinnz: saddened by this. i'll go with Mr. Ovid's book now
[23:34:35] <MikeGeorge[m]> But it teaches you a bunch of things that are contrary to the way people who actually use Perl in modern day (last 20 years) do things.
[23:35:08] <Grinnz> note that for the most part recent changes are just new features you can use, nothing that important to learning the language to start with
[23:35:24] <Grinnz> postderef and signatures are the big ones
[23:36:17] <Grinnz> modern perl has sections on both (and is free online)
[23:36:17] *** Quits: johnjay (~pi@38.120.10.99) (Ping timeout: 245 seconds)
[23:36:18] <xq> perlbot: quickstart
[23:36:19] <perlbot> xq: https://learnxinyminutes.com/docs/perl/ -> http://mvp.kablamo.org/ -> https://qntm.org/files/perl/perl.html -> http://www.modernperlbooks.com/
[23:36:44] <xq> homura: these links were reviewed by community member and they are not completely terrible ^
[23:36:48] <xq> members*
[23:41:17] *** Joins: Adura (~Adura@user/adura)
[23:50:21] *** Joins: proller (~p@2a02:6b8:b081:a404::1:2c)
[23:50:38] *** Joins: gizmomathboy (~gizmomath@206.127.53.107)
[23:56:29] *** Quits: ranguard__ (sid496095@tooting.irccloud.com) ()
[23:56:43] *** Joins: ranguard__ (sid496095@id-496095.lymington.irccloud.com)
