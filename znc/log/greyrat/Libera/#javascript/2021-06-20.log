[00:02:51] *** ormaaj is now known as iteratee
[00:07:49] *** Joins: Naan (~naan@user/naan)
[00:08:03] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[00:09:02] *** Joins: onosendi1 (~onosendi@user/onosendi)
[00:09:03] *** iteratee is now known as ormaaj
[00:11:59] *** Quits: ormaaj (~ormaaj@2001:470:69fc:105::35ca) (Quit: Reconnecting)
[00:12:22] *** Joins: ormaaj (~ormaaj@2001:470:69fc:105::35ca)
[00:12:42] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[00:18:13] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[00:22:33] *** Joins: Gueso (~Gueso@152.0.156.178)
[00:23:13] *** Joins: Haren4E (~textual@152.0.156.178)
[00:23:24] *** Quits: Gueso (~Gueso@152.0.156.178) (Client Quit)
[00:26:49] *** Joins: tex (~super@user/dix)
[00:26:52] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[00:28:58] *** Parts: Haren4E (~textual@152.0.156.178) (Textual IRC Client: www.textualapp.com)
[00:29:49] *** Joins: Haren4E (~textual@152.0.156.178)
[00:34:09] *** Quits: Haren4E (~textual@152.0.156.178) (Quit: Textual IRC Client: www.textualapp.com)
[00:36:36] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Ping timeout: 258 seconds)
[00:37:32] *** Joins: howdoi (uid224@id-224.tooting.irccloud.com)
[00:38:20] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[00:40:54] *** Quits: dimi1947 (~dimi1947@2a02:1388:8d:5dce:29c6:23b5:d9a:bb3d) (Ping timeout: 244 seconds)
[00:43:42] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[00:45:37] *** Quits: EdFletcher (~EdFletche@user/edfletcher) (Remote host closed the connection)
[00:47:09] *** Joins: EdFletcher (~EdFletche@user/edfletcher)
[00:47:51] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[00:48:13] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[00:50:53] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[00:52:44] *** Quits: federico_it (~textual@151.51.89.77) (Quit: Textual IRC Client: www.textualapp.com)
[00:54:26] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[00:55:58] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[01:08:44] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[01:09:53] *** Joins: Guest9 (~Guest9@103.250.137.22)
[01:11:09] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Quit: Leaving)
[01:11:49] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[01:12:05] *** Joins: theglass (~glass@user/theglass)
[01:12:30] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[01:13:04] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[01:15:28] *** Joins: ostrich (~ostrich@user/ostrich)
[01:15:40] *** Quits: LeoTal1 (~LeoTal@74.170.86.79.rev.sfr.net) (Ping timeout: 268 seconds)
[01:16:30] *** Joins: summersault (~summersau@2804:7f0:3886:c810:5507:ed9c:d5b4:3d10)
[01:17:40] *** Quits: Heraes (~Heraes@user/romarain) (Quit: Leaving)
[01:20:15] *** Quits: summersault (~summersau@2804:7f0:3886:c810:5507:ed9c:d5b4:3d10) (Remote host closed the connection)
[01:20:44] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:21:16] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[01:25:07] <ashnur> i don't see js taking over fortran in supercomputing soon
[01:26:35] <wroathe> Well, that's just like... your opinion, man.
[01:27:27] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[01:29:11] *** Joins: holmes (~holmes@cpe-75-82-82-73.socal.res.rr.com)
[01:32:11] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 265 seconds)
[01:34:16] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:7d7d:74d2:7a88:5069) (Quit: WeeChat 3.2)
[01:36:51] *** Joins: dustfinger (~user@node-1w7jra22ildhv50npcwi0ivhr.ipv6.telus.net)
[01:37:25] *** Joins: summersault (~summersau@2804:7f0:3886:c810:5507:ed9c:d5b4:3d10)
[01:38:14] *** Quits: onizu (uid373383@id-373383.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[01:40:41] *** Quits: summersault (~summersau@2804:7f0:3886:c810:5507:ed9c:d5b4:3d10) (Remote host closed the connection)
[01:42:41] *** Joins: summersault (~summersau@2804:7f0:3886:c810:5507:ed9c:d5b4:3d10)
[01:45:22] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[01:47:16] *** Joins: koziad (~koz@c-76-104-144-218.hsd1.wa.comcast.net)
[01:47:18] *** Quits: summersault (~summersau@2804:7f0:3886:c810:5507:ed9c:d5b4:3d10) (Remote host closed the connection)
[01:48:06] <dustfinger> I am reading a PDF file out of a PostgreSQL bytea column. When the result is returned to the client side, it is a file object with type = Buffer and the data property appears to be a byte array. I would like to load this data into an <embed> HTML tag. When the page loads, I am calling loadBase64DataUrl (see https://termbin.com/c3po) to convert the data to base64 dataurl which I store in the state.src for rendering by the 
[01:48:06] <dustfinger> tag. Unfortunately, the embed tag is rendering a large number, rather than a human readable PDF. What am I doing wrong?
[01:50:11] <Slade> dustfinger, try iframe instead of embed
[01:50:17] <Maxdamantus> dustfinger: a large number like "400 Bad Request"?
[01:50:44] <Maxdamantus> Oh, nvm, it should be getting an actual data URL.
[01:51:28] <Maxdamantus> dustfinger: maybe try specifying the type in the `Blob` constructor. I'm guessing `file.type` won't be meaningful.
[01:53:46] <dustfinger> file.type equals Buffer
[01:53:47] *** Quits: Guest9 (~Guest9@103.250.137.22) (Quit: Connection closed)
[01:58:18] *** Quits: ostrich (~ostrich@user/ostrich) (Quit: WeeChat 3.2)
[01:58:36] *** Joins: ostrich (~ostrich@user/ostrich)
[01:59:06] *** Quits: Dorward (~dorward@daviddorward.plus.com) (Ping timeout: 240 seconds)
[01:59:51] <dustfinger> Okay, I tried calling the blog contstructor with a mime type as opposed to the type property from the file object. That definately helped. It now begins to render the content as a PDF, but the file still fails to render. The browser has a warning that says the PDF might not be displaying correctly and prompts me with an option to try opening the PDF in another program. When I try MuPDF, it I see the error "no objects foun
[01:59:52] <dustfinger> something is still not correct.
[02:00:08] <dustfinger> s/blog/Blob/
[02:00:08] *** Quits: ostrich (~ostrich@user/ostrich) (Client Quit)
[02:00:32] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[02:00:55] <entuland> your data stream may be getting cut for some reason
[02:01:09] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 265 seconds)
[02:01:24] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:dd58:87f6:22f5:3ecd) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:01:27] <quesker> I don't want these radio buttons to stay gray when you click.  they don't on desktop but they do on android chrome.  https://jsfiddle.net/y4aq7305/4/
[02:01:55] *** Joins: Dorward (~dorward@daviddorward.plus.com)
[02:02:21] <quesker> hmm after I removed all the unrelated stuff simplifying the demo I just realized it isn't a js question anymore
[02:02:44] <entuland> it may sort of be
[02:02:50] *** Gustavo6046_ is now known as Gustavo6046
[02:03:06] <entuland> I remember someone else messing with those things, something like a focus state persisting
[02:03:11] <entuland> which applied some style to it
[02:03:12] <wroathe> dustfinger: Why not just have the backend generate a unique URL for the PDF, and feed that to the embed's src?
[02:03:15] <dustfinger> The problem might have something to do with the way postgresql stores bytea. This field stores data in "hex" format which means it encodes binary data as 2 hexadecimal digits per byte, most significant nibble first. When I am trying to create a Blob directly from hex format, I wonder if that is causing a memory alignment problem.
[02:03:21] <wroathe> dustfinger: Rather than dealing with a buffer on the client side?
[02:03:41] <dustfinger> wroathe: I might go that route. I thought that this would be faster for now.
[02:03:51] <entuland> dustfinger, are you able to extract that data from the server side somehow to verify the actual file is not corrupted or the alike?
[02:03:57] <wroathe> dustfinger: Faster?
[02:04:02] <wroathe> dustfinger: As in, faster to implement?
[02:04:31] <dustfinger> wroathe: yes, faster to implement. I was probably wrong though, since I am having problems :-P
[02:04:54] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:dd58:87f6:22f5:3ecd)
[02:04:58] <dustfinger> entuland: Yah, I will compare with a direct sql query.
[02:06:42] *** Quits: holmes (~holmes@cpe-75-82-82-73.socal.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:07:14] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:dd58:87f6:22f5:3ecd) (Remote host closed the connection)
[02:08:45] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:dd58:87f6:22f5:3ecd)
[02:15:01] *** Joins: pulse (~pulse@user/pulse)
[02:21:56] *** Quits: peteyboy1 (~peteyboy1@95.169.229.12) (Ping timeout: 252 seconds)
[02:27:10] *** Quits: irthewinner (~null@bzq-79-180-153-70.red.bezeqint.net) (Quit: Leaving)
[02:30:02] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:32] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:31:37] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 258 seconds)
[02:35:38] <onosendi1> https://dpaste.org/cyAq - what's best practice for errors like this, logging or throwing?
[02:36:24] <onosendi1> Logging like that, I get the error twice.
[02:37:49] <GreenJello> you probably at least want to log an Error instance, so you get a stack trace
[02:38:23] <GreenJello> but it's unclear from this example if you should throw
[02:38:49] <GreenJello> the component doesn't actually use the children prop, so it doesn't actually care if it follows any rules
[02:40:21] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 272 seconds)
[02:40:23] <onosendi1> GreenJello: https://dpaste.org/Gc2T
[02:41:18] <onosendi1> There it's in useEffect, or should it not be? heh
[02:41:42] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[02:42:16] <hacks> https://reactjs.org/docs/error-boundaries.html  This seems relevant (I don't know how to do that either)
[02:42:17] <GreenJello> probably better to just throw while rendering
[02:42:41] <GreenJello> but it seems like your code doesn't actually break if the rule isn't followed
[02:42:55] <GreenJello> it's not exactly clear why the rule exists at all
[02:45:03] *** Joins: rannnn8888 (~rannnn888@bzq-79-177-151-167.red.bezeqint.net)
[02:45:16] <onosendi1> GreenJello: ah, sorry, it breaks in the CSS.
[02:45:31] <GreenJello> validating children tends to be pretty arbitrary. Even if you need the DOM to be a button with a span inside, this would exclude a component child that renders a span
[02:45:36] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[02:46:24] <GreenJello> I don't see why you'd ever need it to specifically be a span either
[02:47:13] <GreenJello> use a direct descendent selector or export a class name that it needs to have
[02:48:01] <GreenJello> .button > * {
[02:48:48] <onosendi1> GreenJello: https://dpaste.org/p3mD
[02:49:03] <GreenJello> & > * {
[02:49:58] <rannnn8888> someone know What is less heavy to server deal ? htmx or ajax get ?
[02:50:19] <GreenJello> onosendi1, and if the child isn't an object, then you could have Button auto-wrap it in a span
[02:50:40] <GreenJello> with React.Children.map, probably
[02:50:42] <onosendi1> GreenJello: ah, I like that better.
[02:50:46] <GreenJello> to handle fragments
[02:51:32] <onosendi1> I find it quite fascinating you have the answer to everything.
[02:54:11] *** Quits: jellobot (~jellobot@104.248.16.142) (Remote host closed the connection)
[02:54:20] *** Joins: jellobot (~jellobot@104.248.16.142)
[02:54:20] *** ChanServ sets mode: +v jellobot
[02:54:32] <GreenJello> I don't; just selective with which questions I respond to :-p
[02:55:04] <onosendi1> GreenJello: haha :P
[02:57:40] *** Quits: tex (~super@user/dix) (Ping timeout: 258 seconds)
[02:58:36] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[03:00:13] <wroathe> GreenJello: What is the meaning of the meaning of life?
[03:00:53] <onosendi1> GreenJello: https://dpaste.org/4mC2
[03:01:50] <GreenJello> not good to create components inside other components (causes that subtree to be discarded on each render)
[03:02:08] <GreenJello> using it as a normal function would be fine, though
[03:02:46] <onosendi1> GreenJello: ah, good to know.
[03:03:09] <GreenJello> wroathe, there's a thread in my brain trying to resolve that, but it's maxing out a core, so I'm going to kill it
[03:04:35] <wroathe> GreenJello: Probably for the best.
[03:12:43] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:dd58:87f6:22f5:3ecd) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:16:55] <onosendi1> rannnn8888: The channel isn't ignoring you, we just don't understand you. Maybe google translate?
[03:17:16] *** Quits: howdoi (uid224@id-224.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[03:24:16] *** Quits: onosendi1 (~onosendi@user/onosendi) (Quit: WeeChat 3.1)
[03:27:35] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 244 seconds)
[03:28:14] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[03:32:56] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 258 seconds)
[03:34:33] *** Joins: dthusian (~dthusian@cpe30b7d4bd18c3-cm30b7d4bd18c0.sdns.net.rogers.com)
[03:35:09] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[03:44:08] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (Ping timeout: 265 seconds)
[03:46:04] *** Quits: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de) (Ping timeout: 265 seconds)
[03:47:07] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[04:03:49] *** Joins: Northwoods (~Northwood@223.130.30.189)
[04:05:46] *** Joins: kakashiAL (~kakashi@ip-37-201-199-1.hsi13.unitymediagroup.de)
[04:06:27] *** Joins: howdoi (uid224@id-224.tooting.irccloud.com)
[04:17:16] *** Quits: alystair (~alystair@user/alystair) (Ping timeout: 252 seconds)
[04:18:38] *** Quits: deviantfero (~deviantfe@190.150.27.58) (Quit: WeeChat 3.2)
[04:20:37] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:acf9:f56f:2048:6af1)
[04:22:06] *** Joins: jazzy (~jaziz@2600:380:854e:22c1:c558:7a2d:a4b2:cfa6)
[04:27:47] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[04:28:03] *** Joins: mickey (~user@user/mickey)
[04:36:57] *** Joins: alystair (~alystair@user/alystair)
[04:39:54] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[04:42:56] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[04:43:28] *** Joins: ktwo_ (~ktwo@i59f7c858.versanet.de)
[04:43:34] *** Joins: gry (~quassel@botters/gry)
[04:46:58] *** Quits: ktwo (~ktwo@i59f770cb.versanet.de) (Ping timeout: 252 seconds)
[04:47:25] *** Quits: MonkeyBeats (~monkey@a213-22-50-56.cpe.netcabo.pt) (Quit: MonkeyBeats)
[04:51:46] *** Quits: Northwoods (~Northwood@223.130.30.189) (Ping timeout: 265 seconds)
[04:52:01] <onosendi> I love when I go back to old code and I'm more confused by the comment I left than the actual code.
[05:08:24] *** Quits: dthusian (~dthusian@cpe30b7d4bd18c3-cm30b7d4bd18c0.sdns.net.rogers.com) (Ping timeout: 258 seconds)
[05:09:55] *** Joins: kmh_ (~kmh@p200300df5f4b7c00f11bed53a9dedc2c.dip0.t-ipconnect.de)
[05:11:37] *** Joins: dthusian (~dthusian@cpe30b7d4bd18c3-cm30b7d4bd18c0.sdns.net.rogers.com)
[05:11:58] *** Quits: kmh (~kmh@p200300df5f1f6100ec162bd270d20611.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[05:15:38] *** Quits: Deide (~Deide@user/deide) (Quit: Seeee yaaaa)
[05:15:53] <hacks> rannnn8888, ajax would be used to hit REST endpoints for fetching data without reloading current page. having a server serve html is similar, but there are a lot of factors, like what the server has to do to format the responses for each.
[05:16:24] <hacks> rannnn8888, neither is better. they have different uses.
[05:24:48] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[05:29:01] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[05:30:01] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[05:31:55] *** Joins: kmh (~kmh@p200300df5f4ce700f11bed53a9dedc2c.dip0.t-ipconnect.de)
[05:33:49] *** Quits: kmh_ (~kmh@p200300df5f4b7c00f11bed53a9dedc2c.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[05:37:28] *** Quits: kmh (~kmh@p200300df5f4ce700f11bed53a9dedc2c.dip0.t-ipconnect.de) (Ping timeout: 244 seconds)
[05:37:47] *** Joins: kmh (~kmh@p5ded1544.dip0.t-ipconnect.de)
[05:38:18] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[05:40:44] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:47:09] *** Quits: rannnn8888 (~rannnn888@bzq-79-177-151-167.red.bezeqint.net) (Quit: Client closed)
[05:47:33] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[05:52:39] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[05:57:43] *** Joins: sed (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net)
[06:00:12] *** Quits: johtso (~johtso@92.40.176.0.threembb.co.uk) (Quit: Client closed)
[06:17:52] *** Quits: YoungFrog (~youngfrog@2a02:a03f:c21b:f900:64a1:530f:7e40:4403) (Quit: ZNC 1.7.x-git-3-96481995 - https://znc.in)
[06:18:11] *** Joins: YoungFrog (~youngfrog@39.129-180-91.adsl-dyn.isp.belgacom.be)
[06:27:01] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 265 seconds)
[06:54:06] *** Joins: Rockwood (~Rocky@user/rocky)
[07:01:06] *** Joins: onosendi1 (~onosendi@user/onosendi)
[07:06:01] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[07:06:21] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[07:06:36] *** Joins: gggp (~textual@60.10.194.47)
[07:18:32] *** Quits: blez (~blez@213.91.182.96) (Ping timeout: 244 seconds)
[07:25:24] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[07:30:01] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[07:32:28] *** Quits: skillbot (~skillbot@user/skillbot) (Remote host closed the connection)
[07:32:44] *** Joins: skillbot (~skillbot@user/skillbot)
[07:32:44] *** ChanServ sets mode: +v skillbot
[07:34:10] *** Quits: dthusian (~dthusian@cpe30b7d4bd18c3-cm30b7d4bd18c0.sdns.net.rogers.com) (Ping timeout: 252 seconds)
[07:34:45] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[07:36:27] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:36:28] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[07:36:28] *** jmcantrell is now known as Guest5404
[07:36:28] *** Quits: Guest5404 (~weechat@user/jmcantrell) (Killed (cadmium.libera.chat (Nickname regained by services)))
[07:36:28] *** __jmcantrell__ is now known as jmcantrell
[07:39:18] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[07:39:56] *** Joins: hexeme (~hexeme@user/hexeme)
[07:40:22] <hexeme> It doesn't seem to matter what I do. I can't install the "connect" library -g globally and then run `node` and `require("connect")`.
[07:40:57] <hexeme> It's like it can only be installed locally, but I don't understand why.
[07:41:11] <GreenJello> that's always the case
[07:41:16] <GreenJello> -g is just for CLI tools
[07:41:55] <hexeme> OK well that makes sense then :)
[07:43:48] <onosendi1> Is there a fancier way of doing this? Basically, if either one, two, or three is set, all three have to be set: https://dpaste.org/Aunu
[07:45:54] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 252 seconds)
[07:45:55] <GreenJello> const defined = x => x !== undefined; const validateArgs = (...args) =>  !args.some(defined) || args.every(defined)
[07:48:52] <onosendi1> GreenJello: you never disappoint, thanks.
[07:49:47] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[07:50:16] <theskillwithin> I just realized my microwave spins the opposite way every time its started
[07:50:47] <onosendi1> theskillwithin: haha
[07:51:07] <ThePendulum> hmm so you gotta time it so the door is at the front when it's done?
[07:53:13] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[07:54:01] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[07:54:54] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[08:01:12] *** Joins: bynx (~bynx@fw.rry.vaskywire.net)
[08:03:42] *** Joins: P1RATEZ (piratez@user/p1ratez)
[08:08:38] <onosendi1> Is this pattern weird? Basically I want a default action for all api errors, and also specific error actions for some: https://dpaste.org/yy6M
[08:09:18] <onosendi1> https://dpaste.org/jFe3 this rather, forgot to return `data`.
[08:13:56] <GreenJello> I don't really get it
[08:15:02] <onosendi1> So no, lol.
[08:15:07] <onosendi1> Err, yes.
[08:16:15] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 265 seconds)
[08:18:51] <GreenJello> the concept written in english sounds fine, it's just that I don't see how this code gets you there
[08:18:57] *** Joins: Lope (~lope@user/lope)
[08:21:57] <onosendi1> GreenJello: maybe this is more descriptive: https://dpaste.org/p4AX
[08:22:56] *** Joins: Celeo (~Celeo@user/celeo)
[08:31:01] <GreenJello> oh, so line 23 is doing the same thing for any error?
[08:31:06] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[08:31:28] <onosendi1> GreenJello: correct
[08:31:50] <onosendi1> GreenJello: also while you have the whole thing, is it weird passing `dispatch` to `api` like that?
[08:33:42] <GreenJello> it's fine, with the alternative being to turn this into a middleware
[08:34:28] <onosendi1> Ah, okay.
[08:34:47] <GreenJello> I'm not sure you want to handle all errors in any consistent way, though
[08:34:58] <GreenJello> it should probably at least be possible for the action to say "I got this"
[08:35:23] <onosendi1> GreenJello: I was planning to toast "Something went wrong" for 500's.
[08:37:23] <GreenJello> that might be universal enough to be fine
[08:38:03] <GreenJello> but you then need other code to ignore it so you don't display the same error twice
[08:38:59] <onosendi1> As in, if they keep clicking whatever to cause the error, they only get the one error?
[08:39:27] <GreenJello> no, like if you submit a form, and get an error back, the normal thing is to display the error in the form
[08:39:47] <GreenJello> so you would need everything to be on the same page about whether an error has been handled already or not
[08:39:56] <wroathe> Whoooo. I finished my little demo React app: https://justinchristensen.github.io/react-sample-app/
[08:39:59] <onosendi1> Ahhh I see what you're saying.
[08:40:17] <wroathe> With militant Reduxing, and what I think are some interesting ideas
[08:41:33] <wroathe> I tried the hooks approach out and came up with this: https://github.com/JustinChristensen/react-sample-app/blob/master/src/components/EmployeeFields.jsx#L32-L53
[08:41:57] <wroathe> Basically mapStateToProps/mapDispatchToProps, but in hook form, and then composing together hooks that operate on props.
[08:42:05] <wroathe> To give the props preference
[08:42:16] *** Parts: onosendi1 (~onosendi@user/onosendi) (WeeChat 3.1)
[08:42:25] *** Joins: onosendi1 (~onosendi@user/onosendi)
[08:42:35] <wroathe> So it's a pure component, but with stateful defaults
[08:42:56] *** Quits: bynx (~bynx@fw.rry.vaskywire.net) (Quit: bed time!)
[08:42:58] *** Joins: gggp (~textual@60.10.194.47)
[08:43:11] <GreenJello> > main.js:2 Error: Failed to load profiles.
[08:43:11] <GreenJello> > Uncaught (in promise) TypeError: Cannot read property '0' of undefined
[08:43:18] <GreenJello> and a blank white page in chrome
[08:43:27] <wroathe> Hmm? Talking to me?
[08:43:45] <GreenJello> yep
[08:43:58] <onosendi1> I got the blank white page in FireFox too. It came up after a few refreshes
[08:44:03] <wroathe> Odd. Works on my machine :P
[08:44:59] <GreenJello> yeah, refreshed and I can see it now. Maybe CDN caching
[08:45:04] <wroathe> Oh, I see it in Firefox now. Chrome has been working perfectly for me.
[08:45:11] <wroathe> Github Pages has been acting weird
[08:45:54] <wroathe> I'm 99% sure its' the service worker I'm using as a faux API
[08:45:57] <wroathe> it's*
[08:46:09] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[08:46:14] <GreenJello> oh, that'll do it
[08:46:54] <wroathe> Well, I did skip reading the documentation. There might be something I missed, but it seems to consistently work.
[08:47:16] *** Quits: howdoi (uid224@id-224.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[08:48:23] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[08:48:42] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[08:50:08] <wroathe> Heh. It choked on the first load in firefox, but even if I clean the cache and all storage it now works perfectly
[08:50:12] <GreenJello> code looks pretty good
[08:50:43] <wroathe> (and unregister the SW)
[08:50:52] *** Joins: dimi1947 (~dimi1947@2a02:1388:8d:5dce:f480:81ab:4995:fa53)
[08:51:31] *** Quits: dimi1947 (~dimi1947@2a02:1388:8d:5dce:f480:81ab:4995:fa53) (Client Quit)
[08:52:33] <wroathe> Yup. It's the service worker. For some reason it registers and loads, but is in the "Stopped" state when that occurs.
[08:53:57] *** Quits: sed (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net) (Ping timeout: 265 seconds)
[08:54:31] *** Joins: Allypost_ (~Allypost@93.140.54.120)
[08:54:41] <wroathe> GreenJello: Also, I was tinkering with an alternate API to the createSlice stuff I see Redux has now been recommending. Back when I used Redux I wasn't crazy about how createReducers made part of the state shape static, and coupled it to the structure of the reducers
[08:55:03] <wroathe> GreenJello: So this is what I came up with: https://github.com/JustinChristensen/react-sample-app/blob/master/src/reducers/employees.js#L3
[08:55:23] <wroathe> Err, ignore the line I selected. That was a mistake.
[08:56:22] <wroathe> Basically reducers explicitly handle a case, and they can be combined together with caseReducers to make a multi-case reducer. The final root reducer is essentially just a simple reducers[action.type](state, action.data);
[08:56:30] <wroathe> With immer wrapped around it
[08:56:39] <wroathe> https://github.com/JustinChristensen/react-sample-app/blob/master/src/utils/redux.js
[08:57:40] <wroathe> and usePropsOrState injects getState and dispatch from the Redux store into all event objects. so the event handlers and initialization routines are the only place where side effects occur, and they're easily testable
[08:58:49] *** Allypost_ is now known as Allypost
[09:00:17] <wroathe> Also, combineReducers has the unfortunate side effect that redux needs to try all of the reducers provided to it in sequence on every dispatch
[09:01:36] *** Joins: stenno (~stenno@user/stenno)
[09:02:14] <wroathe> Hrm, this seems to indicate that service workers can't be relied upon consistently, but I intend to find out of this is true or not: https://stackoverflow.com/questions/29741922/prevent-service-worker-from-automatically-stopping
[09:05:59] *** Quits: Allypost (~Allypost@93.140.54.120) (Quit: Time to skidaddle)
[09:09:23] <wroathe> Eh, I'm just going to drop the service worker for now. I'll play with them more when I have something that actually requires them.
[09:09:43] <wroathe> Now it should consistently load.
[09:11:57] *** Joins: Allypost (~Allypost@93.140.54.120)
[09:12:30] *** Quits: Allypost (~Allypost@93.140.54.120) (Client Quit)
[09:13:02] *** Joins: Allypost (~Allypost@93.140.54.120)
[09:16:57] <wroathe> Also, another interesting thing generally is that on every store update react-redux has to loop through ALL of the places where useSelector is used and perform an equality check on the new return value and the previous return value to determine if it should trigger a re-render. So every "reactive" part of the UI needs to be completely re-evaluated on every state update
[09:17:54] <wroathe> Which isn't the end of the world, but it's something to think about. I think setting that up to log performance statistics about just how many comparisons were done and how long they took after every dispatch could fairly simply be done
[09:18:08] <wroathe> So the developer can keep an eye on the running time cost of updates
[09:20:29] <wroathe> Also, another takeaway is that immer is fucking rad
[09:21:54] *** Quits: Allypost (~Allypost@93.140.54.120) (Changing host)
[09:21:54] *** Joins: Allypost (~Allypost@user/allypost)
[09:25:13] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 258 seconds)
[09:25:25] *** Joins: Allypost_ (~Allypost@user/allypost)
[09:25:38] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[09:25:53] <no_gravity> Good Morning
[09:26:00] <no_gravity> n> ['10','10','10'].map(parseInt)
[09:26:01] <jellobot> (okay) [ 10, NaN, 2 ]
[09:26:12] <no_gravity> ^ Why is that?
[09:26:33] *** Quits: Allypost_ (~Allypost@user/allypost) (Client Quit)
[09:26:45] <ljharb> no_gravity: because map calls its callback with 3 argumets
[09:26:54] <ljharb> n> ['10','10','10'].map(x => parseInt(x)) @ no_gravity
[09:26:55] <jellobot> no_gravity, [ 10, 10, 10 ]
[09:27:00] *** Joins: Allypost_ (~Allypost@user/allypost)
[09:27:03] <ljharb> no_gravity: and parseInt takes 2.
[09:27:07] *** Joins: Rockwood (~Rocky@user/rocky)
[09:27:09] <ljharb> so it gets a radix of 0, then 1, then 2
[09:27:18] <ljharb> (the index)
[09:27:47] *** Quits: Allypost (~Allypost@user/allypost) (Ping timeout: 265 seconds)
[09:28:19] <no_gravity> radix?
[09:28:36] <ljharb> the base of the number
[09:28:55] <ljharb> n> [parseInt(10, 2), parseInt(10, 10)] @ no_gravity
[09:28:56] <jellobot> no_gravity, [ 2, 10 ]
[09:28:58] <Allypost_> no_gravity: The prototype for parseInt is parseInt(string, radix). The radix is the base to which to parse the number
[09:29:08] <ljharb> no_gravity: in binary, 10 is 2. in decimal, 10 is 10.
[09:29:19] <Allypost_> And the map function calls the callback with (element, indexOfElement, array)
[09:29:20] <no_gravity> Allypost_: Ah! I see.
[09:29:26] <no_gravity> Thanks for solving this mistery!
[09:29:26] <ljharb> iow you should never call parseInt without passing a radix of 10 explicitly
[09:29:42] <Allypost_> ...or just use Number whenever you can
[09:29:54] <no_gravity> Allypost_: Number?
[09:29:55] <ljharb> parseInt is often the right choice
[09:30:07] <ljharb> Number is for casting, parseInt is for parsing.
[09:30:19] <no_gravity> n> Number('12.3')
[09:30:19] <jellobot> (okay) 12.3
[09:30:27] <no_gravity> I see
[09:30:40] <Allypost_> n> ['10','10','10'].map(Number)
[09:30:40] <jellobot> (okay) [ 10, 10, 10 ]
[09:31:25] <ljharb> but you shouldn't be blindly passing functions around if you don't know exactly which arguments they take
[09:31:37] <ljharb> use an arrow function around it.
[09:31:44] <Allypost_> ^
[09:32:15] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 252 seconds)
[09:32:17] *** Quits: onosendi1 (~onosendi@user/onosendi) (Quit: WeeChat 3.1)
[09:33:10] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.1)
[09:35:32] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[09:39:05] *** Joins: Northwoods (~Northwood@223.130.30.189)
[09:39:56] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[09:50:13] *** Joins: technopagan (~technopag@p200300c5370b7d00ac2d87e2ab54367d.dip0.t-ipconnect.de)
[09:57:49] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 258 seconds)
[09:58:11] *** Joins: Rockwood (~Rocky@user/rocky)
[09:59:54] *** Joins: drapery (crazyed@OverKill.epicsol.org)
[10:01:14] *** Quits: technopagan (~technopag@p200300c5370b7d00ac2d87e2ab54367d.dip0.t-ipconnect.de) (Quit: Textual IRC Client: www.textualapp.com)
[10:05:12] *** Joins: gggp (~textual@60.10.194.47)
[10:05:22] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[10:10:19] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[10:15:02] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[10:18:16] *** Joins: Guest9 (~Guest9@103.250.145.119)
[10:19:17] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 258 seconds)
[10:21:29] *** Joins: _banana_ (~banana_@cpe-24-208-69-88.new.res.rr.com)
[10:24:38] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 258 seconds)
[10:24:47] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:edde:9370:9c1c:9a34) (Ping timeout: 265 seconds)
[10:27:58] *** Quits: _banana_ (~banana_@cpe-24-208-69-88.new.res.rr.com) (Ping timeout: 252 seconds)
[10:34:33] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[10:35:33] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[10:40:11] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[10:42:48] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[10:48:01] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 265 seconds)
[10:49:31] *** Joins: gggp (~textual@60.10.194.47)
[10:49:36] *** Quits: Northwoods (~Northwood@223.130.30.189) (Ping timeout: 252 seconds)
[10:49:55] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 265 seconds)
[10:50:34] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[10:50:40] *** Joins: Deide (~Deide@wire.desu.ga)
[10:50:40] *** Quits: Deide (~Deide@wire.desu.ga) (Changing host)
[10:50:40] *** Joins: Deide (~Deide@user/deide)
[10:50:41] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[10:54:17] *** Joins: Akimb (~Akimb@86.100.13.100)
[10:57:47] *** Quits: drapery (crazyed@OverKill.epicsol.org) (Remote host closed the connection)
[11:06:00] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[11:09:39] *** Joins: tex (~super@user/dix)
[11:11:03] *** Quits: Akimb (~Akimb@86.100.13.100) (Quit: Leaving)
[11:11:21] *** Joins: Akimb (~Akimb@86.100.13.100)
[11:12:41] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[11:17:19] <ashnur> only a barbarian wouldn't use parseInt's second argument
[11:18:30] *** Quits: Lope (~lope@user/lope) (Quit: Leaving)
[11:18:34] *** Quits: Dorward (~dorward@daviddorward.plus.com) (Ping timeout: 252 seconds)
[11:18:38] *** Joins: Dorward_ (~dorward@daviddorward.plus.com)
[11:19:35] *** Joins: Northwoods (~Northwood@223.130.30.189)
[11:22:14] <theskillwithin> n> parseInt(42)
[11:22:15] <jellobot> (okay) 42
[11:24:23] <ashnur> well, australians are all barbarians
[11:31:02] *** Quits: Guest9 (~Guest9@103.250.145.119) (Ping timeout: 265 seconds)
[11:31:51] <Rockwood> theskillwithin, cheers
[11:32:52] <theskillwithin> o/
[11:33:04] *** Joins: Heraes (~Heraes@user/romarain)
[11:35:15] *** Joins: Guest9 (~Guest9@103.250.145.119)
[11:36:06] *** Joins: fef (~thedawn@user/thedawn)
[11:37:55] <Rockwood> howdy bro?
[11:41:46] *** Joins: Northwoods_ (~Northwood@223.130.30.189)
[11:42:33] <theskillwithin> good
[11:44:05] *** Quits: Northwoods (~Northwood@223.130.30.189) (Ping timeout: 265 seconds)
[11:44:34] *** Quits: Guest9 (~Guest9@103.250.145.119) (Ping timeout: 265 seconds)
[11:44:50] *** Joins: tatiana (~OhTheCode@60-241-137-234.tpgi.com.au)
[11:48:28] *** Quits: OhTheCode (~OhTheCode@220-235-188-220.dyn.iinet.net.au) (Ping timeout: 268 seconds)
[11:50:02] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[11:50:58] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[11:51:55] *** Joins: dimi1947 (~dimi1947@2a02:1388:83:4d34:f911:bea6:ba2e:cdaa)
[11:52:09] *** Joins: howdoi (uid224@id-224.tooting.irccloud.com)
[11:52:28] *** Quits: tkazi (~tkazi@user/tkazi) (Quit: Disconnected)
[11:53:32] *** Joins: tkazi (~tkazi@user/tkazi)
[11:59:17] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[12:03:36] *** Joins: rothandr_ (~rothandre@c-73-213-69-254.hsd1.va.comcast.net)
[12:04:24] *** Quits: rothandrew (~rothandre@c-73-213-69-254.hsd1.va.comcast.net) (Ping timeout: 268 seconds)
[12:06:05] *** Joins: LeoTal (~LeoTal@139.170.86.79.rev.sfr.net)
[12:07:49] *** Joins: LeoTal1 (~LeoTal@141.170.86.79.rev.sfr.net)
[12:08:35] *** Quits: rothandr_ (~rothandre@c-73-213-69-254.hsd1.va.comcast.net) (Read error: Connection reset by peer)
[12:09:20] *** Joins: raindrop (~raindrop@46.140.25.34)
[12:09:36] *** Joins: rothandrew (~rothandre@c-73-213-69-254.hsd1.va.comcast.net)
[12:10:40] *** Quits: LeoTal (~LeoTal@139.170.86.79.rev.sfr.net) (Ping timeout: 265 seconds)
[12:13:30] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 258 seconds)
[12:15:45] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[12:16:42] <Rockwood> cya
[12:16:46] <Rockwood> thanks
[12:16:50] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[12:17:57] *** Joins: sillyslux__ (~silly@user/silly)
[12:19:40] *** Joins: gggp (~textual@60.10.194.47)
[12:21:24] *** Joins: silly_ (~silly@user/silly)
[12:25:23] *** Quits: sillyslux__ (~silly@user/silly) (Ping timeout: 258 seconds)
[12:28:37] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:544:95fa:694a:d5b5)
[12:28:55] *** Quits: P1RATEZ (piratez@user/p1ratez) ()
[12:32:14] *** Quits: Northwoods_ (~Northwood@223.130.30.189) (Quit: Leaving)
[12:34:08] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[12:34:20] *** Joins: Guest9 (~Guest9@103.240.170.121)
[12:37:19] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:39:52] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 252 seconds)
[12:59:52] *** Joins: abraham (~abraham@191.96.120.28)
[13:10:07] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 252 seconds)
[13:11:10] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[13:16:22] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 258 seconds)
[13:17:53] *** Quits: Guest9 (~Guest9@103.240.170.121) (Quit: Ping timeout (120 seconds))
[13:27:29] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 265 seconds)
[13:37:39] *** Quits: dimi1947 (~dimi1947@2a02:1388:83:4d34:f911:bea6:ba2e:cdaa) (Quit: Leaving)
[13:43:34] *** Jaran|zZZzZZZzz is now known as Jaran
[13:54:36] *** Joins: pulse (~pulse@user/pulse)
[14:04:06] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[14:11:25] *** Joins: MJCD (uid193337@user/mjcd)
[14:15:36] *** Quits: alystair (~alystair@user/alystair) (Remote host closed the connection)
[14:17:01] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:3411:2d35:179f:ef20)
[14:17:32] *** Joins: qswz (~caub@91-175-196-225.subs.proxad.net)
[14:17:51] <qswz> DEPRECATION WARNING: Using / for division is deprecated and will be removed in Dart Sass 2.0.0.
[14:17:56] <qswz> that's silly
[14:18:12] <qswz> Recommendation: math.div($spacer, 4) instead of $spacer / 4
[14:18:40] <qswz> imagine in JS: please use Math.add(x, y) instead of x + y
[14:18:43] <theskillwithin> ya I hate the dart sass warnings,  esp since there prob will never bee a dart sass 2.0
[14:19:16] <qswz> anyway, the deprecation is raised by bootstrap sources, not mine, sass is silly
[14:20:23] <qswz> Math.addExact(.1, .2) === .3
[14:22:06] <qswz> Math.equals(Math.addExact(.1, .2), .3)
[14:22:12] <qswz> how to make a language ugly
[14:22:21] *** Quits: hendursa1 (~weechat@user/hendursaga) (*.net *.split)
[14:22:21] *** Quits: mickey (~user@user/mickey) (*.net *.split)
[14:22:22] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (*.net *.split)
[14:22:36] <hassoon> sass my ass
[14:22:38] <hassoon> css is the way
[14:22:48] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[14:22:51] *** Joins: hendursa1 (~weechat@user/hendursaga)
[14:23:21] <theskillwithin> postcss with css modules,  or something that does css in js
[14:23:36] <hassoon> meh you do css in css, and js in js
[14:23:39] <qswz> css in js
[14:23:48] <qswz> is fine too
[14:24:01] *** Joins: mickey (~user@user/mickey)
[14:24:05] <qswz> jsx is html is js
[14:24:07] <hassoon> only when needed
[14:24:12] <qswz> jsx is html in js*
[14:24:17] <hassoon> only when you use reat
[14:24:19] <hassoon> * react
[14:24:24] <qswz> yep
[14:24:37] <qswz> only with moderation
[14:25:07] <qswz> I couldn't eat the whole watermelon, that shit is nutritive
[14:25:24] <hassoon> i should buy a portable good laptop for coding
[14:25:28] <qswz> I recommend tho
[14:25:34] <hassoon> this 15.6 machine is big
[14:25:41] <qswz> use laptop for coding
[14:25:44] <qswz> best setup
[14:25:50] <qswz> and usb keyboard if needed
[14:25:56] <hassoon> no
[14:26:00] <qswz> yes
[14:26:01] <hassoon> i use the laptop's keybord
[14:26:11] <hassoon> and you should too
[14:26:12] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[14:26:12] <qswz> I
[14:26:19] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[14:26:31] <qswz> I've a broken clavicle, and it's practical to move the keyword where I want
[14:26:39] <qswz> keyword*
[14:26:43] <qswz> keyboard*
[14:26:52] <qswz> my brain autocomplete is bugging
[14:27:21] <qswz> that way you can have more distance between lapop screen and eyes
[14:28:45] <qswz> also don't cut watermelon along its length, it's silly, cut it with 2-3 cm slices along it's latitudes
[14:29:47] <qswz> that shit is good, it's like a natural and healthy icecream/sorbet
[14:30:41] <qswz> I can sustain one week with 3 or 4 watermelonw I think
[14:30:44] <theskillwithin> wow you just blew my mind
[14:30:58] <qswz> (only that, not even water drinking)
[14:31:14] <theskillwithin> i mean about how to cut it part, the other part is weird
[14:31:20] <qswz> anywzy back to JS
[14:31:51] <qswz> damn, I'm asked to install storybook
[14:32:22] <theskillwithin> isn't it in package.json?
[14:34:37] <qswz> guys, how does a pure English speaker sound to an American? is it like a Quebecois/French Canadians to a French (have to restrain from laughing)
[14:36:27] <qswz> 4-level ternary: https://dpaste.org/6bGW yummy
[14:39:08] <qswz> !pick goOutWithBrokeClavicleAndBikeToVote or stay
[14:39:08] <jellobot> qswz, Hmm... how about "goOutWithBrokeClavicleAndBikeToVote"
[14:39:45] <qswz> i want to just vote online
[14:40:16] <theskillwithin> aka collar bone
[14:40:34] <qswz> using a secure web voting API
[14:41:38] <theskillwithin> i don't recommend riding a bike with a sling on
[14:41:56] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[14:42:05] <ashnur> i will avoid sass like the plague for sure
[14:42:10] <theskillwithin> also I recommend you keep your day job, cuz that joke made no sense
[14:42:30] *** Joins: mickey2 (~user@user/mickey)
[14:42:57] <theskillwithin> prob cuz im american, and I don't know french lol
[14:43:01] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[14:43:05] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[14:43:05] *** mickey2 is now known as mickey
[14:43:32] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[14:43:35] <qswz> I just use it a bit for customizing boostrap defaults, the rest of my styles is emotion
[14:43:55] <theskillwithin> nice I like emotion,  I don't like bootstrap tho
[14:44:04] <qswz> sass is just suffer in the ass
[14:46:22] <incognito> easy
[14:47:20] *** Allypost_ is now known as Allypost
[14:49:30] <qswz> it's really stupid that fetch response .json() doesn't allow re-consuming the body
[14:49:51] <qswz> e.g.: if (r.ok) return r.json().catch(() => r.text())
[14:52:00] <qswz> f (r.ok) return /^text/.test(r.headers.get('content-type')) ? r.text() : r.json().catch(() => null);
[14:52:02] <theskillwithin> do the .json() in the .then
[14:53:13] <hassoon> meh i still use xmlHttpRequest alot
[14:54:27] <qswz> that's fine if you like vintage features
[14:56:43] <qswz> TIL <q>
[14:59:31] *** Joins: dimi1947 (~dimi1947@2a02:1388:83:4d34:f911:bea6:ba2e:cdaa)
[15:00:02] *** Joins: electr0n (~electr0n@hunt.revrse.sh)
[15:00:16] <qswz> just don't use axios
[15:00:30] <qswz> unless you want additional 50kb for no reason
[15:01:21] <qswz> I like saying this, because there's almost always someone reacting furiously
[15:04:43] <theskillwithin> qswz your an interesting person lol
[15:05:19] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[15:05:19] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[15:05:44] *** Joins: mickey (~user@user/mickey)
[15:05:48] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[15:08:12] <hassoon> qswz: xmlHttpRequest is not vintage yet, far from that
[15:08:24] <theskillwithin> !fetch
[15:08:25] <jellobot> theskillwithin, window.fetch - a standard way to make HTTP requests, say bye to XHR and get a Promise http://mdn.io/Using_Fetch. For older browsers (IE*) see !polyfill
[15:08:31] <qswz> !mdn xmlHttpRequest
[15:08:32] <jellobot> qswz, XMLHttpRequest - XMLHttpRequest (XHR) objects are used to interact with servers. You can retrieve data from a URL without having to do a full page refresh. This enables a Web page to update just part of a page without disrupting what the user is doing. https://mdn.io/xmlhttprequest
[15:09:08] <qswz> Deprecated. Not for use in new websites.
[15:09:16] <qswz> at the bottom of the mdn page
[15:09:26] <hassoon> beg your pardon ?
[15:09:33] * hassoon checks that
[15:10:02] <qswz> with a thumb down icon
[15:10:41] <hassoon> qswz: no, that's about responseType.moz-blob and responseType.moz-chunked-arraybuffer
[15:11:10] <hassoon> qswz: stop spreading misinformation, how dare you claim XMLHttpRequest is a deprecated tecnology
[15:11:13] <hassoon> * technology
[15:11:14] <qswz> oh right, that's the legent of table
[15:11:22] <theskillwithin> honest mistake
[15:11:22] <qswz> correct
[15:11:42] <qswz> didn't notice
[15:11:52] <qswz> eh, go easy
[15:11:56] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[15:12:23] *** Joins: mickey (~user@user/mickey)
[15:12:33] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[15:12:58] <theskillwithin> using the old way tho does seem like your putting yourself through unnecessary pain.  fetch is the way
[15:13:15] <hassoon> theskillwithin: meh it's not even old yet
[15:13:44] <theskillwithin> i get that time is relative.   but its the old way because fetch is the new way.
[15:13:45] <hassoon> it's even pretty used by a full blown framework like e.g angular
[15:14:03] <hassoon> theskillwithin: okey whatever, fetch is newer, i get that
[15:16:21] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[15:16:31] *** Quits: mickey (~user@user/mickey) (Client Quit)
[15:16:39] *** Joins: mickey (~user@user/mickey)
[15:16:45] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[15:16:48] *** Joins: zacts (~zak@user/zacts)
[15:17:07] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 258 seconds)
[15:17:18] *** Quits: zacts (~zak@user/zacts) (Client Quit)
[15:18:22] <qswz> dam, second time I've to delete package-lock and npm i again, npm cmon
[15:18:59] <theskillwithin> delete node_modules
[15:19:10] <theskillwithin> or do npm ci
[15:19:43] <theskillwithin> qswz what version of npm you using?
[15:19:55] <theskillwithin> package-lock prob changed in how it works from npm 6 to 7
[15:22:52] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[15:23:50] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:3411:2d35:179f:ef20) (Quit: Leaving)
[15:23:54] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[15:24:05] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[15:24:19] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[15:24:31] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[15:24:39] *** Joins: mickey (~user@user/mickey)
[15:29:16] *** Joins: Guest2583 (~Guest25@79-66-195-214.dynamic.dsl.as9105.com)
[15:30:15] <MJCD> lol
[15:30:40] *** Quits: Guest2583 (~Guest25@79-66-195-214.dynamic.dsl.as9105.com) (Client Quit)
[15:37:07] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[15:37:28] *** Joins: federico_it (~textual@151.51.89.77)
[15:39:16] *** Quits: raindrop (~raindrop@46.140.25.34) (Ping timeout: 252 seconds)
[15:40:28] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[15:48:33] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 258 seconds)
[16:05:01] <qswz> would you guys put your component.stories.js among other files? or a separate .storied/ folder?
[16:05:09] <qswz> .stories/*
[16:05:53] <theskillwithin> seperate folder
[16:06:04] <theskillwithin> all the storybook stuff in its own folder
[16:08:07] <theskillwithin> or I should word it.  al the storybook stories in its own folder
[16:08:12] <theskillwithin> all
[16:09:12] *** Joins: thiras (~thiras@user/thiras)
[16:10:27] <theskillwithin> right a stories folder.   without the . in front
[16:10:32] *** Quits: dimi1947 (~dimi1947@2a02:1388:83:4d34:f911:bea6:ba2e:cdaa) (Quit: Leaving)
[16:10:46] <theskillwithin> mixing that up with .storybook prob cuz that has a . in front
[16:13:28] <theskillwithin> also seems like i put it in src/stories
[16:16:39] *** Quits: jazzy (~jaziz@2600:380:854e:22c1:c558:7a2d:a4b2:cfa6) (Ping timeout: 265 seconds)
[16:16:44] <theskillwithin> qswz https://github.com/theskillwithin/theskillwithin-boilerplate/tree/master/src/stories
[16:17:21] *** Joins: dimi1947 (~dimi1947@2a02:1388:83:4d34:f911:bea6:ba2e:cdaa)
[16:17:22] <theskillwithin> i prob should update that after 5 months
[16:18:45] *** Joins: raindrop (~raindrop@46.140.25.34)
[16:21:52] *** Quits: howdoi (uid224@id-224.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[16:27:42] *** Joins: entuland (~entuland@user/entuland)
[16:31:09] <theskillwithin> qswz but ull like my boilerplate cuz it uses emotion,  no bootcrap tho
[16:31:59] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[16:32:15] *** Joins: zebrag (~chris@user/zebrag)
[16:32:52] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[16:33:48] *** Joins: blez (~blez@213.91.182.96)
[16:37:27] *** Quits: fedorafan (~fedorafan@user/fedorafan) (Read error: Connection reset by peer)
[16:41:22] *** Joins: gggp (~textual@60.10.194.47)
[16:44:06] *** Quits: dimi1947 (~dimi1947@2a02:1388:83:4d34:f911:bea6:ba2e:cdaa) (Ping timeout: 264 seconds)
[16:45:10] *** Joins: CrazyEddy (~CrazyEddy@overkill.epicsol.org)
[16:45:46] *** Joins: jazzy (~jaziz@2600:380:854e:22c1:2051:28b0:fcd:d60)
[16:46:16] *** Joins: xse (~xse@user/xse)
[16:48:34] *** Quits: Allypost (~Allypost@user/allypost) (Ping timeout: 252 seconds)
[16:49:39] <theskillwithin> btw I have no problem with people using bootstrap, just ill never work on a project that uses it
[16:51:27] <theskillwithin> https://youtu.be/VAqiJ3Ogd18
[16:51:27] <skillbot> YouTube Title: Hitler Uses Bootstrap
[16:52:25] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 265 seconds)
[17:03:47] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[17:04:45] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[17:11:28] *** Joins: dimi1947 (~dimi1947@2a02:1388:83:4d34:2d8e:d2ae:ca57:67ae)
[17:19:59] <theskillwithin> btw most people afraid of elevators falling down.  they never do that.  you should be more worried about them falling up cu the counter weights
[17:22:09] *** Quits: Ducki (~ducki@user/ducki) (Ping timeout: 272 seconds)
[17:28:06] *** Joins: vbgunz_ (~vbgunz@35.141.71.47)
[17:28:09] *** Quits: vbgunz (~vbgunz@35.141.71.47) (Ping timeout: 268 seconds)
[17:29:11] *** Joins: Ducki (~ducki@user/ducki)
[17:29:52] *** Quits: dimi1947 (~dimi1947@2a02:1388:83:4d34:2d8e:d2ae:ca57:67ae) (Quit: Leaving)
[17:31:19] *** Parts: tatiana (~OhTheCode@60-241-137-234.tpgi.com.au) (Leaving)
[17:32:00] *** Joins: OhTheCode (~OhTheCode@60-241-137-234.tpgi.com.au)
[17:32:00] <hassoon> theskillwithin: nah they should worry about the elevator ceasing to function
[17:33:09] <theskillwithin> oof THAT is scary
[17:33:12] <theskillwithin> yes
[17:33:22] <hassoon> :D
[17:33:56] <theskillwithin> i think if you have an elevator you need a backup generator.  but god damn you are correct, that is scary af
[17:34:30] *** Quits: Ducki (~ducki@user/ducki) (Ping timeout: 265 seconds)
[17:34:31] *** Joins: Ducki_ (~ducki@user/ducki)
[17:35:02] <hassoon> ya hate it
[17:35:13] <hassoon> that's why i always use the stairs in the office
[17:35:31] <OhTheCode> go the stairs
[17:35:34] <hassoon> and.. i already don't like being trapped with strangers or females
[17:35:38] <OhTheCode> us coders need some exercise
[17:36:13] <theskillwithin> btw do not if u manage to get the doors open in that scenario try to get out esp if its halfway between floors.  don't risk get cut in half
[17:37:31] *** Joins: Guest9 (~Guest9@103.240.170.121)
[17:37:49] <hassoon> theskillwithin: picturing what you're saying is like a horror movie
[17:38:11] <hassoon> anyway i'm glad i always use stairs whether elevators are safe or nt
[17:38:12] <hassoon> * not
[17:38:40] <theskillwithin> strangers or females....
[17:38:51] <theskillwithin> interesting way to word that
[17:39:39] <hassoon> theskillwithin: what ?
[17:40:15] <theskillwithin> i assumed you mean in elevator
[17:40:30] <hassoon> ya, screw elevtors
[17:40:38] <hassoon> * elevators
[17:40:42] <OhTheCode> i can't find the #svg channel, i think there is one on this new Libera irc but it has 4 people in it
[17:40:52] <theskillwithin> but why specifically females?
[17:40:56] <hassoon> OhTheCode: try #photogeeks
[17:40:59] <OhTheCode> freenode has 4 people in it
[17:41:17] <theskillwithin> do you have a rapey vibe so u don't like to be stuck with females?
[17:41:20] <OhTheCode> eh
[17:42:20] <entuland> OhTheCode, #design, #web, #webdev, ##programming and to an extent also #css and #html could fit depending on the question you have about SVG
[17:42:24] <hassoon> theskillwithin: ya avoiding them at all is always a better idea, unless i'm inside a group of friends
[17:42:46] <OhTheCode> entuland: thanks
[17:42:49] <entuland> yw
[17:43:14] <hassoon> theskillwithin: and yes..the vide thing, it might sound better when not trapped with them
[17:44:00] <theskillwithin> that could be a netflix show.  js developers stuck inf elevators with attractive women
[17:44:09] <hassoon> theskillwithin: lmao!
[17:44:30] <OhTheCode> i'll ask something here anyway.... what's the best svg animation library to use? some say the principle of greensock is wrong, I'm thinking SVG.js or greeensock or three.js. It needs to be not too bloated and a library i'm gonna not use once and then not use again
[17:44:30] <hassoon> theskillwithin: really thow, screw them, i have healthy feet that can serve me well on stairs
[17:44:36] <hassoon> * though *
[17:44:42] *** Joins: dthusian (~dthusian@cpe30b7d4bd18c3-cm30b7d4bd18c0.sdns.net.rogers.com)
[17:46:00] <theskillwithin> i guarantee more views than comedians in cars getting coffee
[17:46:28] <hassoon> the coffee through the wall service ?
[17:46:50] <theskillwithin> thats a name of a show
[17:48:11] *** Quits: Heraes (~Heraes@user/romarain) (Quit: Leaving)
[17:48:11] <Solak> sigh... Qupzilla -> Falkon and the debug-tools are gone :(
[17:49:29] <entuland> OhTheCode, depending on the kind of animations you need to run you may not need any library at all
[17:49:46] *** Joins: Trieste_ (T@user/pilgrim)
[17:49:47] <entuland> there are animations and transitions even in pure CSS depending on the end goal
[17:50:02] <entuland> and you can do a lot of things manipulating the SVG directly with vanilla JS
[17:50:27] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 272 seconds)
[17:50:28] <OhTheCode> its more than 10 things moving and timing in css animation/transition is hard even with scss formulas so I need a library
[17:51:03] <entuland> oh definitely better to use JS then, or a library, can't elaborate on how much bloated the libraries around are though
[17:51:08] <theskillwithin> iv never used but theres gsap
[17:51:34] <theskillwithin> https://greensock.com/gsap/
[17:51:45] <OhTheCode> 16kb for one and 11kb i saw another one , i want lightweight but one i'm gonna use again
[17:52:06] <entuland> I would probably give it a go with vanilla JS if the animations aren't too complex (say, just moving stuff around along different paths or scaling / rotating them)
[17:52:08] <OhTheCode> is greensock good? I heard the principle behind it isn't the best but greensock has the best performance
[17:52:11] <OhTheCode> this is a website i want to do animations like - https://www.4mation.com.au/
[17:52:31] <entuland> that tilting bulb is trivial
[17:52:57] <entuland> can be done with keyframe animations in CSS just fine
[17:53:07] <OhTheCode> check the Development section with a computer monitor, i want more complex than that
[17:53:27] <OhTheCode> i want the animation to continuously move
[17:53:39] *** Joins: k4rt0ff3lch33t4h (~k4rt0ff3l@254c23a9.nat.pool.telekom.hu)
[17:53:41] <OhTheCode> continously cycle with a pause at the end
[17:54:28] <OhTheCode> entuland: I've tried to do it before with just vanilla javascript, it can get complicated with 20 different animations. I don't know if this one would need requestAnimationFrame, i guess so
[17:55:22] <entuland> yes, that could be complex as a whole
[17:56:03] *** Trieste_ is now known as Trieste
[17:56:30] <theskillwithin> well I hope you get a lightbulb moment and realize what u should do
[17:57:13] <entuland> there are some animations that can be baked into SVG to an extent, and you could probably do them in, say, Inkscape
[17:57:46] <entuland> but if you want full control and you need to do complex stuff, it's probably better to just use a JS library and code in the sync of the various bits and pieces
[17:59:40] <OhTheCode> entuland: ok thanks, u might be right ,its not that hard but timing is tricky, do i use requestanimationFrame and have a cycle number to know which frame it's up to? i have about 4 frames and animations within each frame
[17:59:42] *** Quits: abraham (~abraham@191.96.120.28) (Ping timeout: 252 seconds)
[17:59:52] <entuland> OhTheCode, you may be able to find some nice pointers here: https://bashooka.com/coding/30-mindblowing-examples-of-svg-animation/
[18:00:18] <entuland> what you need to do as actual nitty gritty details depend on the animations you need and what library you use
[18:00:30] <entuland> it's hard to say without knowing the exact requirements about the end result
[18:01:44] <OhTheCode> i know, but i think i've gotten a better idea now, i'll work it out, i'll try vanilla js first thanks for the link and the ideas
[18:01:54] <entuland> yw, gl!
[18:03:04] <OhTheCode> but continuous animation in javascript, would i use requestAnimationFrame ?
[18:03:34] <OhTheCode> i wonder if requestanimationFrame would be slightly demanding on the gpu
[18:03:39] <entuland> depends on how the animation is implemented, it could be as simple as adding a class and removing it when enough time has passed
[18:03:44] *** Quits: raindrop (~raindrop@46.140.25.34) (Ping timeout: 252 seconds)
[18:04:05] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[18:04:12] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[18:05:09] *** Quits: Guest9 (~Guest9@103.240.170.121) (Quit: Connection closed)
[18:05:25] *** Quits: KevinX_ (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[18:06:53] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 265 seconds)
[18:07:06] *** Joins: Guest9 (~Guest9@103.240.170.121)
[18:10:13] *** Joins: fef (~thedawn@user/thedawn)
[18:11:04] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 252 seconds)
[18:11:33] *** Quits: MJCD (uid193337@user/mjcd) (Quit: Connection closed for inactivity)
[18:12:07] *** Joins: gggp (~textual@60.10.194.47)
[18:12:48] *** Joins: raindrop (~raindrop@46.140.123.194)
[18:12:48] *** Joins: KevinX (~KevinX@23.82.137.226)
[18:14:23] *** Quits: qswz (~caub@91-175-196-225.subs.proxad.net) (Quit: leaving)
[18:16:11] *** Joins: KevinX_ (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[18:17:17] *** Quits: KevinX (~KevinX@23.82.137.226) (Ping timeout: 258 seconds)
[18:20:34] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:3411:2d35:179f:ef20)
[18:21:20] <entuland> OhTheCode, you may not need it, but just because I was bored I hacked this example together that uses very basic functionality and takes care of not abruptly stopping an animation midway: https://jsfiddle.net/entuland/wq3y9c04/
[18:24:00] *** Joins: Allypost (~Allypost@user/allypost)
[18:26:10] <OhTheCode> mateeee, thanks. I just think with 20 or 40 svg items to animate, css animation ie adding a class isn't the best way to do it. I might be wrong, and i've noticed SVG has some things in attribute not in css properties which makes svg harder to animate eg <line x y> x and y are attributes so it's a big disadvantage over css in that way. Fill is an attribute and also can be used in style="fill:#ffffff" but x, y, transform etc are
[18:26:10] <OhTheCode> attributes so it makes it harder to work with svg to do css animation
[18:26:12] <theskillwithin> is that the site they gave biden instead of the nuclear football?
[18:27:45] <entuland> OhTheCode I'm not up to date with the recent changes but some of the things that used to be inaccessible via CSS are now available, such as the height and width properties, IIRC - some other stuff, yes, you may need to alter via JS
[18:29:19] <entuland> the MDN docs should help getting up to speed with the most recent changes
[18:30:21] <OhTheCode> u see what i mean though, svg transform, x, y, are attributes, so not something that can be changed by classList.toggle(), so that's a disadvantage i've found with svg. css variables can be used on css properties but not on attributes, css varaibles can make things so easy but that option is out for some svg elements
[18:31:41] <entuland> indeed
[18:31:59] <entuland> that's were you have to decide whether you want to roll your own or you want to use a library
[18:32:38] <entuland> the compromise is between investing time in studying the library or investing time in studying specific techniques via vanilla JS
[18:33:04] <OhTheCode> yep. I'm gonna take it on with vanilla javascript. Earlier people were talking about bootstrap. I try not to use libraries unless i need it. Too much bloating and slower page load and bad for SEO and bad for google
[18:33:10] <entuland> s/were/where
[18:33:18] <OhTheCode> yeah u are so right
[18:33:24] <entuland> you definitely don't need bootstrap
[18:33:36] <OhTheCode> no no, i mean about libraries in general
[18:33:37] <entuland> but you may take advantage of some specific JS animation libraries
[18:33:54] <entuland> oh okay
[18:34:04] <theskillwithin> wowa, i was saying i don't use bootcrap.  but that doesn't mean i don't use react
[18:34:23] <entuland> recrapt :P
[18:34:36] <theskillwithin> ðŸ–•
[18:34:37] <OhTheCode> react is awesome
[18:34:41] <entuland> eheheh
[18:34:48] <OhTheCode> there is a tradeoff
[18:35:16] <OhTheCode> making it easier for developers is something good but at a cost, and its that judgement we must make
[18:35:34] <entuland> I don't care if people uses library X or Y if that's what gets the thing done in the time they need it and it doesn't become a problem for the end user (or for the developer)
[18:36:19] <OhTheCode> yeah, we have jobs to do and we need to make money and libraries make that easier, react can make soemthing that takes 10 hours, take 1 hour
[18:38:24] <OhTheCode> but bootstrap slows down the page load, when u want to rank on the first page on google, that can be a problem with bloated things, not always though. Using jquery for just 1 little feature is such a waste but that's what some of these wordpress web houses do. Like building cheap houses that look good on the outside but after some time u realize they aren't build greatly
[18:38:43] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[18:38:50] <theskillwithin> bootcrap
[18:38:57] <theskillwithin> just. learn. css.
[18:39:10] <theskillwithin> that said I don't judge
[18:39:22] <OhTheCode> hehehe it's good for prototypes and building things fast and many other things, i like it
[18:40:21] <OhTheCode> but if u just need "ma3" "dn" for 150kb it's not worth it is it? page load is waiting for 150kb of bootstrap
[18:40:29] <k4rt0ff3lch33t4h> bootstrap is pretty customizable
[18:40:53] <k4rt0ff3lch33t4h> you can select  the parts you need
[18:41:23] <OhTheCode> thats good. Tailwind and bulma i think are like that too
[18:42:37] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:544:95fa:694a:d5b5) (Ping timeout: 265 seconds)
[18:43:26] <k4rt0ff3lch33t4h> we even did some lazy loading for pagespeedinsights. initiallz we only loaded around half of bootstrap at pageload
[18:43:35] <k4rt0ff3lch33t4h> the other half came later
[18:44:10] <theskillwithin> you know whats customizable.  css
[18:44:33] *** Quits: Guest9 (~Guest9@103.240.170.121) (Ping timeout: 265 seconds)
[18:44:41] <OhTheCode> k4rt0ff3lch33t4h: that's good to know
[18:46:28] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Read error: Connection reset by peer)
[18:46:40] <OhTheCode> i used to use vba , and it takes longer to load a form and data from a server 10 metres away that it takes css to load a form and data from a server 50000 miles away. Coming from vba, css and the box model are impressive
[18:47:19] <OhTheCode> it just takes so much longer to design a form in css than in microsoft forms, but much more customizable and much faster performance
[18:48:50] *** Quits: k4rt0ff3lch33t4h (~k4rt0ff3l@254c23a9.nat.pool.telekom.hu) (Quit: leaving)
[18:49:31] *** Quits: jazzy (~jaziz@2600:380:854e:22c1:2051:28b0:fcd:d60) (Ping timeout: 264 seconds)
[18:51:07] <theskillwithin> i suck at design
[18:59:58] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: leaving)
[19:00:01] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 265 seconds)
[19:00:39] <theskillwithin> usually im provided the design. and much easier to do without a css framework
[19:02:20] *** Joins: gggp (~textual@60.10.194.47)
[19:02:35] <entuland> laying out forms or other arrangements of contents used to be a pain in the past but nowadays it's relatively straightforward (knowing the newer CSS features)
[19:03:24] <entuland> and it may definitely be faster from scratch just adding what it needs on top of the default styling than having to "bend" any framework to your will
[19:05:18] <OhTheCode> with vb, you choose a field , drag it to where you want it, link it to the backend and link the field on the form to the database table and field and that's it, thats so quick but javascript, html and css is much much slower to do that. But its much much more flexible. But i think React might make it faster, I haven't used React yet though
[19:08:46] <entuland> indeed - it's the price to pay for such a flexibility / decoupling - there may not be any database at all on the server side processing a form and your form on the client side may be rendered in an arbitrary viewport size and aspect ratio - all of this adds complexity
[19:14:50] <entuland> there are also middle grounds where you can take advantage of form editors combined with the CSS flexibility (such as QT widgets)
[19:15:22] <entuland> there are also such JS based layout builders for web pages
[19:16:23] <OhTheCode> ah great, i was thinking of making one myself
[19:17:05] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 258 seconds)
[19:18:38] <entuland> beware of what builder you pick, if you pick an existing ones - as a silly example, there are some badly screwed approaches such as some wordpress plugins that on the surface look tempting for their ease of use, but they may store such layouts with their own format that may become a serious problem if such a plugin / builder breaks / stops being supported and whatnot
[19:19:21] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[19:19:30] *** Joins: fef (~thedawn@user/thedawn)
[19:23:49] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[19:26:36] *** Joins: gggp (~textual@60.10.194.47)
[19:28:45] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[19:33:00] *** Joins: onosendi (~onosendi@user/onosendi)
[19:34:35] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:3411:2d35:179f:ef20) (Quit: Leaving)
[19:34:47] *** Quits: silly_ (~silly@user/silly) (Quit: Leaving)
[19:35:08] *** Joins: silly (~silly@user/silly)
[19:39:52] *** Joins: MJCD (uid193337@user/mjcd)
[19:41:40] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:7cf7:a944:9aed:63c1)
[19:43:03] *** Joins: willthechill (~willthech@2600:1700:8c61:3ed0:5d3f:8911:36d:da15)
[19:43:37] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:3411:2d35:179f:ef20)
[19:50:26] *** Quits: gggp (~textual@60.10.194.47) (Ping timeout: 258 seconds)
[19:52:42] *** Joins: gggp (~textual@60.10.194.47)
[19:59:27] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:3411:2d35:179f:ef20) (Quit: Leaving)
[20:00:57] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:3411:2d35:179f:ef20)
[20:05:55] *** Joins: frogdoubler (~zorian@wnpgmb0412w-ds01-238-180.dynamic.bellmts.net)
[20:07:26] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[20:10:54] *** Quits: phlixi (~phlixi@ppp-46-244-186-107.dynamic.mnet-online.de) (Remote host closed the connection)
[20:11:12] *** Joins: phlixi (~phlixi@ppp-46-244-186-107.dynamic.mnet-online.de)
[20:12:04] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 265 seconds)
[20:14:05] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:3411:2d35:179f:ef20) (Quit: Leaving)
[20:14:39] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[20:24:12] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:3411:2d35:179f:ef20)
[20:24:48] *** Joins: Selicre (~x@hello.i.am.selic.re)
[20:28:56] *** Joins: ferdna (~ferdna@user/ferdna)
[20:38:04] <Selicre> Hello! I'm working on a wasm game that is fixed at 60fps. What's the best way to achieve both vsync and a fixed framerate?
[20:38:47] <Selicre> It seems like chrome will randomly drop down to 25mspf if I take the naÃ¯ve approach of waiting until a timer threshold has been reached.
[20:39:52] <systemfault> AFAIK, just using requestAnimationFrame will limit everything to 60fps
[20:40:16] <systemfault> But I'm no game dev... so maybe someone else could help :/
[20:40:53] <Selicre> systemfault: no, it will do it at the system refresh rate
[20:41:08] <Selicre> so if you have a 120Hz display it becomes unplayable
[20:41:11] <OhTheCode> i heard requestAnimationFrame operates at 60 fps and if it can't do that, it drops to 30 fps, so either 60 fps or 30 fps, your browers may be reporting 25 fps but its requestanimationframes 30fps
[20:41:26] <Selicre> no, I said 25mspf, which is uhh.. 40fps I think
[20:41:33] <ljharb> OhTheCode: it offers no FPS guarantees at all
[20:41:39] <Selicre> exactly
[20:41:53] <ljharb> the whole point is that the browser gets to run it whenever it wonâ€™t slow down other things, and only when needed
[20:41:53] <Selicre> so the approach I took is to wait if it triggers too early
[20:42:09] <ljharb> so itâ€™s perfect for unnecessary animations, and anything whose state is entirely time-based
[20:42:29] <Selicre> however, ever since the timing attack shit struck, it seems like the timer precision has been reduced significantly
[20:42:36] <Selicre> which affects the speed at which the game is running
[20:42:38] <ljharb> yep
[20:43:31] <Selicre> https://i.selic.re/elastic/ < game in question
[20:43:43] <Selicre> works perfectly in ff, but chrome seems to suffer in various ways
[20:44:04] <Selicre> (I also managed to sigsegv it but I'm not making that public since that's likely a security issue)
[20:54:19] *** Joins: Celeo (~Celeo@user/celeo)
[20:55:35] <entuland> that game is brutal ahahaha
[21:05:19] <MJCD> Selicre: seems to work fine here on chrome
[21:05:23] <MJCD> played a few lvls
[21:05:59] <Selicre> entuland: can't really do much in 4 kilobytes, the difficulty curve ended up being quite steep lmao
[21:06:12] <Selicre> yeah, idk. It seems to work well for some people but not for others
[21:06:20] <MJCD> it maybe feels a bit fast
[21:06:26] <MJCD> but that's by design i'd imagine
[21:06:41] <entuland> I meant brutal as gameplay, not the looks of it or anything else
[21:06:59] <entuland> what's with the 4KB limitation?
[21:07:02] <Selicre> maybe, I kinda just put a bunch of random physics constants and went with it
[21:07:08] <entuland> brutal as tough / difficult
[21:07:08] <Selicre> entuland: I just wanted to make something in 4kB
[21:07:14] <Selicre> and see how far I can push it
[21:07:27] <Selicre> taught me a bunch of cool optimization tricks
[21:07:34] <entuland> okay, so it's not some kind of limitation of the technology, it's an arbitrary limit you set for yourself
[21:07:41] <Selicre> mhm
[21:07:44] <Selicre> My other game is 40kB
[21:07:44] <entuland> ok
[21:08:04] <Selicre> mostly for the clickbait thumbnails when I decide to make videos on these honestly
[21:08:04] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[21:08:16] <Selicre> went well for micro mages
[21:10:52] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[21:11:48] *** Joins: fef (~thedawn@user/thedawn)
[21:17:05] *** Joins: Rockwood (~Rocky@user/rocky)
[21:19:03] <Rockwood> o/
[21:19:25] <wroathe> You can limit the framerate yourself by only redrawing every other requestAnimationFrame (if 120 hz is too much, for example)
[21:21:19] <Selicre> wroathe: yes but how do I figure it out if the timer is scuffed
[21:21:35] <wroathe> Selicre: "scuffed"?
[21:22:06] <silly> there's a term in rugby like that
[21:22:16] <Selicre> basically just reporting wrong values
[21:22:42] <Selicre> e.g. advanced tracking protection in firefox makes it coarse to 100ms
[21:23:06] <Rockwood> lol
[21:23:13] <silly> requestanimationframe is hopefully unaffected
[21:23:15] <Rockwood> theskillwithin, still there bro
[21:23:16] <Rockwood> ?
[21:23:17] <Selicre> silly: ha
[21:23:26] <Selicre> it is in fact affected
[21:23:34] <Selicre> which is why that option is hopelessly useless
[21:23:45] <Selicre> the best way to avoid tracking is to be chrome 84 on windows 10
[21:23:46] <wroathe> I'm not following. As soon as you've determined that RAF operates at 120 fps, you just increment a counter and only re-render if it's % 2?
[21:23:58] <Selicre> wroathe: how do I determine that
[21:24:05] <Selicre> also framerates can change at any time
[21:24:16] <Selicre> I can drag the window to the 60Hz monitor and it'll run at 60fps
[21:24:17] <Rockwood> who is the owner of state concept?
[21:24:30] <Rockwood> JS or any other?
[21:24:40] <wroathe> Selicre: I'm not sure right off hand. I'm guessing there's a DOM API for reporting what the frequency of RAF is
[21:24:47] <wroathe> Selicre: But I"m eating breakfast right now and don't want to look it up
[21:24:48] <Selicre> there is, and it's scuffed
[21:25:08] <Selicre> you get a timer value that should be accurate down to a millisecond or so
[21:25:19] <silly> some mediaquery?
[21:25:31] <Selicre> silly: these things can change at runtime
[21:25:36] <Selicre> it's not just a static value
[21:25:38] <wroathe> I mean, if your timers are scuffed all bets are off anyway
[21:25:40] <Rockwood> lol
[21:25:43] <Selicre> honestly yeah
[21:25:47] <wroathe> I'm still not sure how or why it would be scuffed
[21:25:50] <Rockwood> no answers :D
[21:26:02] <Selicre> I should probably just stop fighting against this and just make a desktop app if your browser is doing weird shit
[21:26:05] <Rockwood> gn
[21:26:57] <wroathe> Pancakes are yummy
[21:27:02] <Selicre> or just have a big "this website works best in firefox" banner
[21:28:03] <wroathe> Selicre: Can you further define scuffed? I still don't get it?
[21:28:19] <Selicre> wroathe: generic word for "doesn't work as expected"
[21:28:25] <wroathe> Selicre: Like, does that mean that "They've said that this API does this, but I don't trust it."
[21:28:41] <wroathe> Or "I've seen this thing screw up my games, and here's the numbers"
[21:28:48] <Selicre> the latter, yes
[21:29:05] <Selicre> it _technically_ works properly but it's too coarse and ends up giving me issues
[21:29:24] <Selicre> and I think something as simple as a 60fps lock should be an easy thing
[21:32:14] <foureyes> do people routinely put complex objects in react component state, unlike redux, or should you keep it basic in all state?
[21:32:58] <foureyes> not sure why I'd want to keep some component state serialisable
[21:33:09] <wroathe> foureyes: You can, but you'll need to be mindful of the equality check you use to determine if it should be updated or not
[21:33:14] <wroathe> err, rendered or not, I mean
[21:33:50] <foureyes> ok, yeah all my useEffect hooks have explicit properties to watch
[21:34:23] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[21:36:52] *** Joins: fedorafan (~fedorafan@user/fedorafan)
[21:38:06] *** Quits: raindrop (~raindrop@46.140.123.194) (Ping timeout: 265 seconds)
[21:40:35] *** Quits: fedorafan (~fedorafan@user/fedorafan) (Remote host closed the connection)
[21:42:16] *** Joins: fedorafan (~fedorafan@user/fedorafan)
[21:43:37] *** Joins: dustfing` (~user@d75-159-231-192.abhsia.telus.net)
[21:45:24] *** Quits: dustfinger (~user@node-1w7jra22ildhv50npcwi0ivhr.ipv6.telus.net) (Ping timeout: 268 seconds)
[21:49:01] *** Joins: pwnd_sfw6 (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[21:49:42] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Ping timeout: 265 seconds)
[21:49:42] *** pwnd_sfw6 is now known as pwnd_sfw
[21:52:50] *** Quits: fedorafan (~fedorafan@user/fedorafan) (Remote host closed the connection)
[21:54:32] *** Quits: federico_it (~textual@151.51.89.77) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[21:56:40] *** Joins: fedorafan (~fedorafan@user/fedorafan)
[21:57:11] *** Quits: gggp (~textual@60.10.194.47) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:57:24] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:7cf7:a944:9aed:63c1) (Ping timeout: 265 seconds)
[22:03:59] *** Joins: Dorward (~dorward@daviddorward.plus.com)
[22:05:22] *** Quits: Dorward_ (~dorward@daviddorward.plus.com) (Ping timeout: 258 seconds)
[22:06:23] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[22:08:13] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[22:11:31] *** jimbzy is now known as gembzy
[22:12:54] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 265 seconds)
[22:12:56] *** gembzy is now known as jimbzy
[22:16:17] *** Quits: fedorafan (~fedorafan@user/fedorafan) (Remote host closed the connection)
[22:22:28] *** night_wulfe_ is now known as night_wulfe
[22:23:47] *** Joins: federico_it (~textual@151.51.89.77)
[22:34:17] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Read error: Connection reset by peer)
[22:35:06] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:acf9:f56f:2048:6af1) (Ping timeout: 265 seconds)
[22:35:20] *** Quits: OhTheCode (~OhTheCode@60-241-137-234.tpgi.com.au) (Read error: Connection reset by peer)
[22:36:51] *** Joins: fedorafan (~fedorafan@user/fedorafan)
[22:37:24] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[22:45:17] *** Joins: Betal (~Beta@user/betal)
[22:45:54] *** Joins: jamea (~jamea77@177.239.82.167)
[22:45:59] <jamea> hi all,  https://jsfiddle.net/jamiguel77/ep7nxkvt/5/  how to validate data entry when user click on "Editar" green button, before confirm the changes?
[22:48:04] *** Joins: eck0 (~Android@mobile-166-173-62-252.mycingular.net)
[22:48:17] <entuland> what kind of validation do you need to perform? some checks can be "hardcoded" into the elements, such as the min/max values of a number field
[22:48:48] <entuland> and you'll need to do proper validation server side anyways
[22:50:10] <jamea> in this case: Price, range: 0,20 and no letters.... or other symbols
[22:51:29] <entuland> there are various approaches at that simple check, one is just using an number field instead of a text one, setting the limits there
[22:51:46] <entuland> no need to do any validation for other characters that wouldn't be allowed there anyways in a number field
[22:52:40] <wroathe> jamea: You can let the browser do that for you by using a "number" type input
[22:52:45] <jamea> note: i use a thid party plugin, see? table-edit
[22:52:48] <entuland> for more complex validation you can use something like this, since you're using jQuery: https://jqueryvalidation.org/validate/ or other facilities, I'm not really a jquery user
[22:52:50] <wroathe> jamea: <input type="number" ...
[22:53:15] <entuland> check the documentation of that library to see if you have control over what controls get added there
[22:53:38] <jamea> entuland, wroathe, this a plugin not mine the code... if possible i dont touche the original code... because the plugin is updated ... underastand,,,
[22:53:59] <entuland> yes, I understand
[22:54:24] <entuland> first check the documentation of table-edit to see if you can annotate your table or set the plugin properly so that you get a number field instead of a text field
[22:54:31] <entuland> don't fight against the libraries
[22:54:47] <wroathe> Idk, I've sworn off reading jQuery documentation long ago
[22:54:54] <wroathe> It's bad for my health. Good luck :P
[22:54:58] <entuland> eheheh
[22:55:22] <entuland> yes, [23:26:36] *** Parts: coronerrapport (~coronerra@172.58.203.92) ()
[23:26:37] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[23:26:59] *** Joins: WishBoy (~WishBoy@user/wishboy)
[23:29:47] *** Joins: pavonia (~user@user/siracusa)
[23:30:09] *** Joins: dthusian (~dthusian@cpe30b7d4bd18c3-cm30b7d4bd18c0.sdns.net.rogers.com)
[23:33:08] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[23:33:36] *** Joins: hendursaga (~weechat@user/hendursaga)
[23:40:42] *** Joins: raindrop (~raindrop@46.140.25.34)
[23:41:08] *** Quits: fedorafan (~fedorafan@user/fedorafan) (Remote host closed the connection)
[23:45:05] *** Joins: johtso (~johtso@51.89.139.130)
[23:50:46] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[23:51:46] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[23:53:28] *** Quits: Guest9 (~Guest9@43.250.157.119) (Quit: Connection closed)
[23:59:59] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 258 seconds)
