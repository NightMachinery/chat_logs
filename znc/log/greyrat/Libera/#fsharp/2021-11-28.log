[01:47:39] *** Quits: Santzes (~Santzes@2400:8901::f03c:92ff:fe49:47a6) (Quit: WeeChat 3.2)
[12:42:50] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 260 seconds)
[13:16:37] *** Joins: stenno (~stenno@user/stenno)
[20:13:30] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca)
[20:32:48] *** Quits: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca) (Ping timeout: 256 seconds)
[20:53:50] *** Joins: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca)
[21:39:51] <sonny> How do I test the result of two boolean functions? `(digit ch) && tail` seems to try to apply &&
[21:41:54] <sonny> https://bpa.st/G4ZQ
[22:33:51] <biberu> sonny: that tail function would just read one additional character before the process stops, and you don't need it, instead you could make integer recursive and keep going while you're reading numeric data
[22:35:36] <biberu> sonny: you don't need to call Dispose manually either, instead of "let R = ..." write "use R = ...", that'll dispose it automatically when it goes out of scope
[22:53:04] <sonny> biberu: thanks
[22:53:39] <sonny> yeah I could, but I want to experiement
[22:53:52] <sonny> the result should be true if a number is in the string]
[22:55:45] <biberu> sonny: i guess you're expecting tail to be a function btw?
[22:56:29] <biberu> in that example it'd just be a boolean, based on the *first* char in the stream since it's created before the integer value
[22:56:34] <biberu> (that is also not a function)
[23:00:54] <sonny> biberu yeah, I thought it was
[23:01:27] <biberu> both of them are just boolean values
[23:01:39] <biberu> digit otoh is a function
[23:01:47] <sonny> what makes a function a function?
[23:02:28] <biberu> if you want to write a function that doesn't take any arguments you can do it like let foo () = 123 // unit -> int
[23:02:54] <biberu> https://docs.microsoft.com/en-us/dotnet/fsharp/language-reference/unit-type
[23:04:55] <sonny> oh ok
[23:07:14] <biberu> also, your digit test is off at the edges, it's not accepting 0 (0x30) or 9 (0x39)
[23:09:00] <sonny> " 'use' bindings are not permitted in modules and are treated as 'let' bindings"
[23:09:09] <sonny> seems like I have to use dispose at the top level
[23:09:22] <sonny> yeah, thanks for pointing that out
[23:09:55] <biberu> yeah, or put it in a function, it doesn't matter when you're just playing around ofc, just figured it should mention that "use" exists
[23:10:04] <biberu> s/it/i/
[23:10:56] <sonny> thanks
[23:11:11] <sonny> what isÂ  Program+clo@36 ? an address?
[23:11:20] <sonny> I noticed I got that from trying to print the value of integer
[23:11:32] <sonny> oh right I need ()
[23:11:50] <sonny> great, it worked!
[23:13:40] <biberu> that's the result of calling ToString on the function you assigned to "integer", don't know if there are any promises for how that's created
[23:15:27] <biberu> if you want to play around with making integer recursive declare it as "let rec integer () = ..." (but you might need an extra step to handle the case of an empty stream like that)
[23:20:19] <biberu> sonny: are you using visual studio?
[23:21:10] *** Joins: sonny89 (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca)
[23:21:40] *** Quits: sonny (~sonny@bras-base-london1483w-grc-39-65-95-42-44.dsl.bell.ca) (Ping timeout: 256 seconds)
