[00:00:10] *** Quits: favonia (~favonia@user/favonia) (Quit: Leaving)
[00:01:18] *** Quits: mei3 (~mei@user/mei) (Ping timeout: 260 seconds)
[00:02:42] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 260 seconds)
[00:04:34] <ski> (`app_ordered_selections' at <https://bpa.st/4IUQ> is an example of backtracking, in C, using a loop, as well as `goto' out of, and into, it)
[00:05:06] <ski> geekosaur : what kind of information ?
[00:05:29] *** Joins: aqua0210 (~user@101.85.11.168)
[00:06:43] <ski> dolio : basic Prolog behaviour is depth-first. you can use the cut to (non-declaratively) prune parts of the search tree/space, and systems also often implement indexing, which can be seen as a limited (local) breadth-first exploring of alternatives
[00:07:47] <dolio> Oh, I meant that I thought it was typical for some 'better' strategy than depth first to be used.
[00:08:09] <dolio> But I'm not that well read on implementing Prolog.
[00:08:26] <ski> (some systems also allow you to put a bound on depth of search, so that you can do iterative deepening, but that's not on by default. oh, and some systems have "coroutining", meaning that goals can be delayed, later being triggered, typically when some logic variable becomes instantiated. this can e.g. be used to implement breadth-first, queue-like, possibly streaming, behaviour)
[00:08:52] <ski> no, i think normally plain depth-first is what is used
[00:09:06] <dolio> Oh, huh.
[00:09:16] <ski> one reason is that people sometimes depend on the specific ordering that they get with the naïve depth-first
[00:09:50] <ski> and so implementations don't want to mess with that, unasked, in ways that's not obvious
[00:10:35] *** Quits: aqua0210 (~user@101.85.11.168) (Ping timeout: 264 seconds)
[00:13:12] <ski> e.g. interconverting between `( foo ; bar ),baz' and `( foo,baz ; bar,baz )' would be ok in the sense of preserving ordering (and multiplicity) of solutions, while interconverting between `foo,( bar ; baz )' and `( foo,bar ; foo,baz )' wouldn't (since `foo' could have multiple solutions) (.. and obviously also commutativity and idempotency of disjunction isn't used)
[00:14:03] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:15:51] <dolio> I guess it could just be less naive implementatiaon of DFS. Like, it's conceivable that you could detect that the thing that makes a branch fail is independent of a certain choice, and so not re-evaluate the branch for each choice.
[00:16:13] <ski> > [[x,y] | x <- "ab" ++ "cd",y <- "ef"]
[00:16:14] <lambdabot>  ["ae","af","be","bf","ce","cf","de","df"]
[00:16:15] <ski> [[x,y] | x <- "ab",y <- "ef"] ++ [[x,y] | x <- "cd",y <- "ef"]
[00:16:18] <ski> > [[x,y] | x <- "ab",y <- "ef"] ++ [[x,y] | x <- "cd",y <- "ef"]
[00:16:19] <lambdabot>  ["ae","af","be","bf","ce","cf","de","df"]
[00:16:40] <ski> > [[x,y] | x <- "ab",y <- "cd" ++ "ef"]
[00:16:41] <lambdabot>  ["ac","ad","ae","af","bc","bd","be","bf"]
[00:16:42] <ski> > [[x,y] | x <- "ab",y <- "cd"] ++ [[x,y] | x <- "ab",y <- "ef"]
[00:16:43] <lambdabot>  ["ac","ad","bc","bd","ae","af","be","bf"]
[00:17:10] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[00:17:44] <ski> dolio : yea, but that'd require analysis of that, and that there's no side-effects happening
[00:18:01] <geekosaur> ski, like in your discussion last night where success of a consequent is treated as a failure by the Antecedent
[00:18:10] <ski> Mercury is more free to reorder and refactor stuff, because it doesn't allow side-effects
[00:18:56] <ski> (although, it's possible to run Mercury in a "strict" mode where it doesn't reorder solutions)
[00:19:06] <ski> (or deduplicate)
[00:19:26] <geekosaur> whereas with laziness the "antecedent" just keeps going without considering what happened with the "consequent"
[00:20:23] <ski> well, what i talked about last night was not the behaviour of `(>>=)', but of another combinator
[00:23:44] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[00:24:16] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[00:24:56] <geekosaur> in any case, the naïve view of backtracking would expect that the preceding level needs to be told to restart somehow, when in the laziness implementation it would do so regardless when a(nother) value is demanded
[00:25:14] *** Joins: michalz (~michalz@185.246.204.58)
[00:25:54] <geekosaur> and neither knows nor cares whether any value(s) have already been produced
[00:28:22] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 260 seconds)
[00:31:56] <ski> @let infixl 1 ==>; (==>) :: [a] -> (a -> [b]) -> [[b]]; (==>) = for
[00:31:57] <lambdabot>  Defined.
[00:32:00] <ski> > [1,4,2,9] ==> \x -> guard (x < 10)
[00:32:02] <lambdabot>  error:
[00:32:02] <lambdabot>      Ambiguous occurrence ‘==>’
[00:32:02] <lambdabot>      It could refer to
[00:32:08] <ski> oh
[00:32:16] <ski> @let infixl 1 ===>; (===>) :: [a] -> (a -> [b]) -> [[b]]; (===>) = for
[00:32:17] <lambdabot>  Defined.
[00:32:21] <ski> > [1,4,2,9] ===> \x -> guard (x < 10)
[00:32:22] <lambdabot>  [[(),(),(),()]]
[00:32:25] <ski> > [1,4,2,9] ===> \x -> guard (x < 5)
[00:32:27] <lambdabot>  []
[00:32:51] <ski> > [1,4,2,9] ===> \x -> return (x*x)
[00:32:52] <lambdabot>  [[1,16,4,81]]
[00:33:12] <ski> > [1,4,2,9] ==> \x -> do guard (x >= 0); let {y = floor (sqrt (fromIntegral x))}; guard (x == y * y); return y <|> return (-y)
[00:33:14] <lambdabot>  error:
[00:33:14] <lambdabot>      Ambiguous occurrence ‘==>’
[00:33:14] <lambdabot>      It could refer to
[00:33:25] <ski> > [1,4,2,9] ===> \x -> do guard (x >= 0); let {y = floor (sqrt (fromIntegral x))}; guard (x == y * y); return y <|> return (-y)
[00:33:27] <lambdabot>  []
[00:33:29] <ski> > [1,4,9] ===> \x -> do guard (x >= 0); let {y = floor (sqrt (fromIntegral x))}; guard (x == y * y); return y <|> return (-y)
[00:33:30] <lambdabot>  [[1,2,3],[1,2,-3],[1,-2,3],[1,-2,-3],[-1,2,3],[-1,2,-3],[-1,-2,3],[-1,-2,-3]]
[00:34:07] <ski> that's basically what i implemented, except using continuations, and also supporting logic variables (implemented using mutation)
[00:35:10] *** Joins: acidjnk (~acidjnk@p200300d0c72635825cb0fefbc648f0e4.dip0.t-ipconnect.de)
[00:35:39] <ski> (in my version, i had basically `(==>) :: Logic a -> (a -> Logic b) -> Logic b', though, so the first input is not simply a list that you could `for'/`traverse' over .. it's an action generating solutions, by calling success and failure continuations)
[00:37:16] <ski> geekosaur : well, fwiw, what you just said i'd argue is more or less what Prolog systems do, as well ..
[00:38:10] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 260 seconds)
[00:38:20] <geekosaur> yes, but see hololeap's confusion about it
[00:38:30] <ski> .. as soon as you've entered the Redo port of a predicate call, things proceed as if it was an initial Call. and the Fail port means that no (more) solutions were produced
[00:39:13] <geekosaur> not seeing how this corresponded to "backtracking"
[00:39:37] <ski> (when a Prolog system answers "no"/"No" (or sometimes "false"), it should be interpreted not as "the query was false", but that no more solutions were found. it could answer `X = 2', and then say `no'/`false' when you use `;' (meaning "or") to ask for more)
[00:40:21] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[00:41:22] <ski> backtracking, in the simplest view, causes execution to flow "backwards", back inside the last Exit-ed call, and inside that, proceed from the end backwards, in and out of calls, (undoing variable instantiations that've been done) until it finds a location where there was an alternative choice to attempt
[00:41:43] *** Quits: retro_ (~retro@2e41e9c8.skybroadband.com) (Read error: Connection reset by peer)
[00:41:59] <geekosaur> (also last time I got to seriously use Prolog was 1992ish, sigh)
[00:42:04] <ski> acrual implementations record where the last choice-point was, and just jumps back to it
[00:42:25] *** Joins: retroid_ (~retro@2e41e9c8.skybroadband.com)
[00:42:56] <ski> so, when backtracking starts, because some call Fail-s, you jump back to the last choice-point, Redo-ing that call, trying the next clause of the predicate in question
[00:43:12] <geekosaur> confused the heck out of my boss when I used it to model a complex pricing system :)
[00:43:40] <ski> from the point of Redo-ing, it is as if it's the initial Call, assuming the predicate in question started at the clause in question (as if previous clauses didn't exist)
[00:43:49] *** Quits: darkstardevx (~darkstard@50.39.114.152) (Read error: Connection reset by peer)
[00:46:41] *** Joins: aqua0210 (~user@101.85.11.168)
[00:47:33] *** Quits: mrkrktsn1ctcrpt (~mrkrktsnd@c-24-6-12-87.hsd1.ca.comcast.net) (Quit: Lost terminal)
[00:48:22] *** Quits: mrkrktsndctcrpt (~mrkrktsnd@c-24-6-12-87.hsd1.ca.comcast.net) (Quit: Lost terminal)
[00:48:23] <ski> (well, actual signature is `(==>) :: Logic m o a -> (a -> Logic m p o) -> Logic m p o' .. so, there's some "interesting" dependency (the `o') between the antecedent and the consequent)
[00:48:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[00:49:23] <ski> geekosaur : i guess they'd never seen it before ?
[00:49:34] <geekosaur> nope
[00:50:14] <geekosaur> my boss was a database dev turned salesman, had not much clue about languages beyond C
[00:51:20] <geekosaur> so I got thrown at the stuff with more "exotic" languages including a business cobol and a custom embedded-programming basic dialect
[00:51:36] *** Quits: _ht (~quassel@82-169-194-8.biz.kpn.net) (Remote host closed the connection)
[00:51:42] *** Quits: aqua0210 (~user@101.85.11.168) (Ping timeout: 260 seconds)
[00:52:12] <geekosaur> and the prolog thing, which was to escape writing the same logic in C while we still weren't quite certain what it fully was, so prolog made it easier for me to tinker with it
[00:52:23] <geekosaur> then I rewrote it for speed when we had it firmed down
[00:52:25] <ski> well, a general cursory knowledge of different paradigms and approaches to programming (both general, and sometimes more specific), is unfortunately commonly lacking ..
[00:52:29] * ski nods
[00:52:32] *** Joins: darkstardevx (~darkstard@50.39.114.152)
[00:53:07] <ski> (Basic for embedded programming ?)
[00:53:28] *** Quits: darkstardevx (~darkstard@50.39.114.152) (Remote host closed the connection)
[00:53:52] *** Joins: darkstardevx (~darkstard@50.39.114.152)
[00:54:13] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[00:54:14] <geekosaur> it was a highly customized basic. I don't recall all the details now but it got compiled down to code for a hard realtime controller
[00:54:28] <geekosaur> all this stuff was around 20 years ago
[00:54:53] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[00:55:14] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[00:55:24] <geekosaur> mm, actually the hrt thing would have been 1987
[00:55:41] <ski> hm, sounds curious
[00:56:26] * ski was recently toying around with a Prolog implementation for the Commodore 64
[00:56:56] <geekosaur> I only worked with it for a few weeks, then they took it away and assigned it to their engineering dept. because they didn't think someone from the front office should be working on it… think the assigned engineer still used the code I'd written though
[00:58:06] <ski> (now i'm tinkering a little bit with seeing how far i'd get with reverse-engineering it .. i'd like to add LCO/TCO to it (and that it'll fail directly when the last clause fails, rather than fruitlessly first attempting to look for the next clause))
[00:59:06] *** Joins: aeke (~a@p200300ef973db1af4086f0a6a24fc4dd.dip0.t-ipconnect.de)
[01:00:00] <aeke> Hi, is beta reduction the same as function application in lambda calculus?
[01:00:08] <ski> no
[01:00:59] <ski> beta reduction amounts to removing a function application whose operand is a lambda abstraction, by substituting the actual parameter for the formal parameter, in the body of the lambda abstraction
[01:01:43] <ski>   (\x. x * x) (2 + 3)  -->  (2 + 3) * (2 + 3)
[01:01:51] <ski> is an example of beta-reduction
[01:02:38] <aeke> So is function application just the juxtaposition of two lambda terms?
[01:03:16] <aeke> And the left term does not need to be a lambda abstraction?
[01:03:21] <ski> a function application is a kind of construct, a way of forming a term/expression, a node in the abstract syntax tree. beta-reduction is about how one can rewrite a term, a tree, into another one
[01:04:15] <ski> function application is usually written as just juxtaposition (left-associative), in lambda calculus, yes. occasionally you'll see an explicit infix operator, like `@'
[01:04:46] <ski> aeke : yes, the left term could be a variable, or another application, e.g.
[01:05:06] <ski> e.g. `f x y' is normally parsed as `(f x) y'
[01:06:04] <aeke> So function application is part of building up an AST while beta reduction is part of evaluation/reducing that tree (if the left term of the fun app happens to be a lambda abstraction)?
[01:06:32] <ski> so .. beta-reduction removes both an application, and an abstaction, from the AST. they "react", so to speak
[01:06:46] <ski> aeke : yes
[01:07:22] *** Joins: zmt01 (~zmt00@user/zmt00)
[01:08:01] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 245 seconds)
[01:08:50] *** Joins: wonko (~wjc@user/wonko)
[01:13:35] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 264 seconds)
[01:14:39] *** Joins: aqua0210 (~user@101.85.11.168)
[01:14:40] *** Quits: emf (~emf@c-73-97-137-43.hsd1.wa.comcast.net) (Remote host closed the connection)
[01:15:46] *** Joins: emf (~emf@163.114.132.5)
[01:16:52] *** Parts: ulvarrefr (~user@185.24.53.152) (ERC (IRC client for Emacs 27.2))
[01:19:42] *** Quits: aqua0210 (~user@101.85.11.168) (Ping timeout: 260 seconds)
[01:24:29] *** Quits: chexum (~quassel@gateway/tor-sasl/chexum) (Remote host closed the connection)
[01:25:46] *** Joins: chexum (~quassel@gateway/tor-sasl/chexum)
[01:27:30] *** Quits: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 268 seconds)
[01:28:50] *** Quits: jpds1 (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[01:29:32] *** Joins: jpds1 (~jpds@gateway/tor-sasl/jpds)
[01:30:28] *** Quits: basti_ (~basti@ip-84-119-8-195.unity-media.net) (Quit: leaving)
[01:32:02] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[01:35:54] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Remote host closed the connection)
[01:36:58] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Ping timeout: 260 seconds)
[01:38:23] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[01:40:05] *** Quits: fendor (~fendor@178.165.196.101.wireless.dyn.drei.com) (Read error: Connection reset by peer)
[01:41:16] *** Joins: zmt00 (~zmt00@user/zmt00)
[01:41:26] <EvanR> often times (beta) reducing something greatly increases its size xD
[01:42:43] *** Joins: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net)
[01:44:45] *** Quits: ubert (~Thunderbi@p200300ecdf4fca30e019fddc82d0353e.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[01:54:36] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Quit: Leaving)
[01:59:05] *** Quits: wonko (~wjc@user/wonko) (Ping timeout: 256 seconds)
[02:00:08] *** Joins: fluffyballoon (~user@131.93.208.196)
[02:00:41] *** Joins: unit73e (~emanuel@2001:818:e8dd:7c00:32b5:c2ff:fe6b:5291)
[02:02:23] *** Quits: pavonia (~user@user/siracusa) (Read error: Connection reset by peer)
[02:03:03] *** Joins: Sgeo_ (~Sgeo@user/sgeo)
[02:03:06] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 260 seconds)
[02:03:26] *** Quits: Sgeo (~Sgeo@user/sgeo) (Ping timeout: 245 seconds)
[02:03:27] *** Joins: cheater (~Username@user/cheater)
[02:07:06] *** Joins: lavaman (~lavaman@98.38.249.169)
[02:07:34] *** Joins: pavonia (~user@user/siracusa)
[02:15:27] *** Joins: aqua0210 (~user@101.85.11.168)
[02:16:54] *** Joins: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net)
[02:19:56] *** Joins: slack1256 (~slack1256@191.125.227.73)
[02:20:01] *** Quits: cosimone (~user@93-47-229-157.ip115.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[02:21:45] *** Quits: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[02:27:18] *** Quits: unit73e (~emanuel@2001:818:e8dd:7c00:32b5:c2ff:fe6b:5291) (Ping timeout: 268 seconds)
[02:27:26] *** Quits: mastarija (~mastarija@2a05:4f46:e06:ff00:18c4:3126:ef80:d743) (Quit: Leaving)
[02:29:01] *** Joins: ubert (~Thunderbi@p200300ecdf4fca30e019fddc82d0353e.dip0.t-ipconnect.de)
[02:29:09] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 268 seconds)
[02:30:08] <gentauro> does anybody in here have a `macOS` with a M1-CPU?
[02:30:16] <gentauro> and uses `stack`?
[02:32:46] <gentauro> it's like `stack install` doesn't care about the `arch: aarch64` value in the `.stack/global-project/stack.yaml` file
[02:34:10] <gentauro> `ld: warning: ignoring file /Users/.../.stack/programs/x86_64-osx-nix/ghc-8.10.7/lib/ghc-8.10.7/Cabal-3.2.1.0/libHSCabal-3.2.1.0.a, building for macOS-arm64 but attempting to link with file built for macOS-x86_64`
[02:34:14] <gentauro> :-\
[02:34:30] *** Quits: ubert (~Thunderbi@p200300ecdf4fca30e019fddc82d0353e.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[02:34:34] <sclv> thats a shame
[02:36:27] <maerwald> gentauro: afaik there's no M1 stack binary
[02:36:37] <gentauro> maerwald: I know
[02:36:40] <maerwald> so you're probably running via rosetta, which means it picks x86 toolchain
[02:37:28] <gentauro> but if you specify in your projects `stack.yaml` -> `arch: aarch64`, then it builts a binary for ARM (which is nice)
[02:38:07] <maerwald> there's some magic going on with rosetta afaik, so if your invoking binary is x86, then you it picks x86 toolchain
[02:38:08] <gentauro> but it seems that it only works for local `stack.yaml` files, but not for the global (I'm trying to install the haskell-language-server)
[02:38:32] <Franciman> good luck to SPJ
[02:38:49] <Franciman> can't wait for his new language
[02:38:49] <maerwald> and I wasn't able to build a native stack binary
[02:39:04] <maerwald> haskell-tls is broken on M1 afair
[02:39:11] <gentauro> maerwald: :o
[02:39:22] <maerwald> the `security` binary is missing I think
[02:39:56] *** Quits: alzgh (~alzgh@user/alzgh) (Ping timeout: 256 seconds)
[02:40:19] <gentauro> maerwald: hmmm, what does that mean?
[02:40:43] <gentauro> Franciman: link?
[02:40:55] <Franciman> https://discourse.haskell.org/t/an-epic-future-for-spj/3573
[02:41:23] <maerwald> gentauro: https://gitlab.haskell.org/maerwald/stack/-/jobs/756968#L3070
[02:41:27] <gentauro> thx
[02:42:02] <gentauro> :o
[02:42:10] <gentauro> is he going to work on Fortnite? :o
[02:42:22] <Rembane_> Dang! That's odd.
[02:42:43] <maerwald> https://github.com/vincenthz/hs-certificate/blob/a899bda3d7666d25143be7be8f3105fc076703d9/x509-system/System/X509/MacOS.hs#L22
[02:42:49] *** Quits: slack1256 (~slack1256@191.125.227.73) (Remote host closed the connection)
[02:42:58] <maerwald> also, terrible code
[02:43:23] <maerwald> one of the reasons I stay away from all of cryptonite and friends :p
[02:43:47] <maerwald> `pems <- either error id . pemParseLBS <$> LBS.hGetContents hout`
[02:44:43] <gentauro> maerwald: :o
[02:44:51] <gentauro> indeed, that is some pretty bad code ..
[02:44:59] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:45:18] <maerwald> do you have `security` binary on your M1?
[02:45:20] <gentauro> btw, is `vincenthz` the only person in the world that can write TLS libs? He also worked on the ones for OCaml
[02:46:05] <gentauro> maerwald: si -> `/usr/bin/security`
[02:46:09] <maerwald> odd
[02:46:19] <maerwald> they are not on the darwin builders
[02:46:52] <gentauro> `darwin` = Intel CPU?
[02:46:57] <maerwald> no, aarch64
[02:47:14] <maerwald> maybe it's this nix nonsense
[02:47:23] <gentauro> maerwald: in order to install `stack` I had to enable roseta
[02:47:26] <gentauro> could it be that?
[02:47:45] <gentauro> with regard of `nix`. I'm just relying on `home-manager` to deal with stuff
[02:48:20] <maerwald> I don't know, maybe I'll try again
[02:48:32] <gentauro> but the creator of `home-manager` told me that I should be looking into `niv` -> https://github.com/nmattia/niv
[02:48:47] <maerwald> also nix
[02:48:52] <gentauro> to hanlde dependencies in a `declarative` way
[02:48:55] <maerwald> lol
[02:49:21] <maerwald> if nix is declarative, then C is functional
[02:49:32] <gentauro> maerwald: xD
[02:49:46] *** Quits: johnny_sitar (~artur@078088015209.bialystok.vectranet.pl) (Ping timeout: 260 seconds)
[02:49:52] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:50:24] *** Quits: aqua0210 (~user@101.85.11.168) (Read error: Connection reset by peer)
[02:50:43] *** Joins: aqua0210 (~user@101.85.11.168)
[02:53:09] <maerwald> since there's no public CI that supports aarch64, the only way for stack to build the binaries would be gitlab.haskell.org
[02:53:26] *** Joins: ees (~user@pool-108-18-30-46.washdc.fios.verizon.net)
[02:53:51] *** Joins: alzgh (alzgh@user/alzgh)
[02:53:55] *** Parts: ees (~user@pool-108-18-30-46.washdc.fios.verizon.net) ()
[02:54:02] <maerwald> I've had a lot of trouble getting the test suite to work there
[02:54:24] *** Joins: ees (~user@pool-108-18-30-46.washdc.fios.verizon.net)
[02:55:03] *** Quits: acidjnk (~acidjnk@p200300d0c72635825cb0fefbc648f0e4.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[02:55:17] <gentauro> maerwald: have you tried this? https://ghc.dev/
[02:55:33] <gentauro> I will give it a try :)
[02:55:57] <maerwald> gentauro: huh?
[02:56:02] <maerwald> I can't follow
[02:56:18] *** Quits: fluffyballoon (~user@131.93.208.196) (Ping timeout: 260 seconds)
[02:56:20] <gentauro> just build GHC from scratch
[02:56:25] <gentauro> as described there
[02:56:28] <maerwald> I'm talking about stack
[02:56:35] <gentauro> ahhhh
[02:56:42] <maerwald> the integration tests
[02:56:46] *** Joins: zmt01 (~zmt00@user/zmt00)
[02:57:27] *** Quits: Kaiepi (~Kaiepi@156.34.44.192) (Ping timeout: 256 seconds)
[02:58:05] <gentauro> it's getting to late (been going on with the `mac` since 04:00 AM and it's almost 00:30 AM ...)
[02:58:12] <gentauro> I guess I need some rest + food :)
[02:58:54] *** Quits: zmt01 (~zmt00@user/zmt00) (Client Quit)
[02:59:13] *** Joins: zmt01 (~zmt00@user/zmt00)
[02:59:41] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 245 seconds)
[03:00:26] <maerwald> I'm trying with brew: https://gitlab.haskell.org/maerwald/stack/-/jobs/848842
[03:01:09] *** Quits: michalz (~michalz@185.246.204.58) (Remote host closed the connection)
[03:01:32] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[03:02:27] *** Joins: Kaiepi (~Kaiepi@156.34.44.192)
[03:03:13] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[03:04:02] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[03:05:00] *** Parts: ees (~user@pool-108-18-30-46.washdc.fios.verizon.net) (ERC 5.4 (IRC client for GNU Emacs 28.0.60))
[03:05:06] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 260 seconds)
[03:05:24] *** Joins: darkstarx (~darkstard@185.226.144.76)
[03:07:58] *** Quits: darkstardevx (~darkstard@50.39.114.152) (Ping timeout: 260 seconds)
[03:09:24] *** Quits: alzgh (alzgh@user/alzgh) (Ping timeout: 256 seconds)
[03:10:25] *** Joins: darkstardev13 (~darkstard@176.113.72.221)
[03:12:03] *** Quits: max22- (~maxime@2a01cb0883359800ab19ff1ba7c64c00.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[03:13:02] *** Quits: darkstarx (~darkstard@185.226.144.76) (Ping timeout: 260 seconds)
[03:13:43] *** Joins: alzgh (~alzgh@user/alzgh)
[03:15:38] *** Quits: Tuplanolla (~Tuplanoll@91-159-69-50.elisa-laajakaista.fi) (Quit: Leaving.)
[03:18:23] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[03:18:24] *** Joins: darkstarx (~darkstard@50.39.114.152)
[03:20:56] *** Quits: darkstardev13 (~darkstard@176.113.72.221) (Ping timeout: 245 seconds)
[03:25:54] *** Joins: jess (~jess@libera/staff/jess)
[03:36:16] <sm> gentauro: 20.5 hours ?
[03:36:46] *** Joins: syntactic_sugar (~amoljha@2601:644:8601:2e30::822c)
[03:37:06] <geekosaur> there was a time when I was young and could pull that kind of shit off
[03:37:21] *** Quits: jpds1 (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[03:37:42] <maerwald> I'm glad when I can code for 4 hours straight lol
[03:38:10] <sm> that's too long
[03:38:40] <maerwald> yeah... I mean, I used to do it for 12 hours straight
[03:39:51] *** Joins: jpds1 (~jpds@gateway/tor-sasl/jpds)
[03:39:58] *** Joins: darkstardev13 (~darkstard@89.47.234.174)
[03:41:09] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 276 seconds)
[03:41:11] *** Quits: aqua0210 (~user@101.85.11.168) (Ping timeout: 264 seconds)
[03:42:26] *** Quits: darkstarx (~darkstard@50.39.114.152) (Ping timeout: 260 seconds)
[03:43:02] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[03:43:47] *** Joins: zebrag (~chris@user/zebrag)
[03:44:47] * sm imagines the impact of 20 straight productive, on-target hours
[03:45:54] *** Quits: jpds1 (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[03:46:19] *** Joins: jpds1 (~jpds@gateway/tor-sasl/jpds)
[03:47:13] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[03:47:29] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[03:50:15] *** Quits: ByronJohnson (~bairyn@50-250-232-19-static.hfc.comcastbusiness.net) (Read error: Connection reset by peer)
[03:50:16] <maerwald> 1 ibuprophen per 4 hours... so 5 in total
[03:52:41] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Read error: Connection reset by peer)
[03:54:35] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[03:54:55] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[03:54:58] *** Joins: ByronJohnson (~bairyn@50-250-232-19-static.hfc.comcastbusiness.net)
[03:55:06] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[03:55:53] *** Lord_of_Life_ is now known as Lord_of_Life
[03:58:26] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 245 seconds)
[03:58:54] <sm> I mean, on the backlog
[03:59:33] <sm> fantasising a little. There are some people who can maintain perspective and stay on target and productive for long periods..
[04:00:41] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[04:04:03] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[04:04:26] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Ping timeout: 260 seconds)
[04:05:17] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[04:05:58] *** Quits: aeke (~a@p200300ef973db1af4086f0a6a24fc4dd.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[04:06:25] *** Quits: gg (~gg@88.160.100.84) (Remote host closed the connection)
[04:12:52] *** Quits: fuzzypixelz (~fuzzypixe@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Ping timeout: 256 seconds)
[04:16:57] <justsomeguy> The problem that I run into is that I never know what tasks I have to do until I start trying to solve a problem, then they just arise as I break things down, ususally in a fractal kind of way. I guess that's where experience and organization come into play.
[04:18:45] *** Joins: aqua0210 (~user@101.85.11.168)
[04:23:58] *** Quits: aqua0210 (~user@101.85.11.168) (Ping timeout: 260 seconds)
[04:27:14] *** Joins: SeungheonOh (~Thunderbi@2600:1700:5168:1400:d4ca:d37:8a2:b653)
[04:29:43] *** Quits: SeungheonOh (~Thunderbi@2600:1700:5168:1400:d4ca:d37:8a2:b653) (Client Quit)
[04:30:36] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[04:31:11] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[04:33:23] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 264 seconds)
[04:39:02] *** Joins: gdown (~gavin@h69-11-248-109.kndrid.broadband.dynamic.tds.net)
[04:42:41] <koala_man> what's the preferred practice for choosing a Stack resolver? I'm about to push a new version of ShellCheck and it's currently using lts-13.26
[04:43:25] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 256 seconds)
[04:44:32] *** Quits: burnsidesLlama (~burnsides@dhcp168-023.wadham.ox.ac.uk) (Remote host closed the connection)
[04:45:47] *** Joins: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net)
[04:46:49] *** Quits: hiruji (~hiruji@user/hiruji) (Ping timeout: 256 seconds)
[04:49:18] <dsal> I guess it got complicated.  I used to just take whatever latest LTS was, but it seems like the haskell.nix stuff may have drifted form something sensible.  I don't know the details, though.
[04:49:32] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[04:54:50] *** Joins: khanred (~khanred@user/khanred)
[05:04:27] *** Joins: hiruji (~hiruji@user/hiruji)
[05:04:29] *** Quits: hiruji (~hiruji@user/hiruji) (Remote host closed the connection)
[05:04:47] *** Joins: hiruji (~hiruji@user/hiruji)
[05:04:52] *** Quits: hiruji (~hiruji@user/hiruji) (Remote host closed the connection)
[05:05:17] *** Joins: hiruji (~hiruji@user/hiruji)
[05:05:24] *** Quits: hiruji (~hiruji@user/hiruji) (Remote host closed the connection)
[05:05:30] *** Quits: xff0x (~xff0x@2001:1a81:52b1:3000:7ef:3640:6d4d:8cb8) (Ping timeout: 260 seconds)
[05:06:19] *** Joins: xff0x (~xff0x@2001:1a81:52b1:3000:4e58:263b:7745:5105)
[05:07:59] *** Quits: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8) (Remote host closed the connection)
[05:10:50] <sm> koala_man: do you mean in the stack.yaml in the source tree ? that matters only to contributors, right ?
[05:11:33] <koala_man> anyone who builds from source using stack presumably
[05:12:49] <sm> yes, some version of the latest lts is a good choice
[05:14:04] *** Joins: machinedgod (~machinedg@24.105.81.50)
[05:14:06] *** Joins: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8)
[05:14:08] *** Joins: hiruji (~hiruji@user/hiruji)
[05:14:40] <sm> if you're actively developing and updating, a recent nightly is also a decent choice, that way you're always ready to be in stackage
[05:15:18] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:19:32] *** Joins: aqua0210 (~user@101.85.11.168)
[05:21:13] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 268 seconds)
[05:23:21] *** Joins: darkstarx (~darkstard@gateway/vpn/pia/darkstardevx)
[05:23:49] *** Joins: Lycurgus (~juan@98.4.112.204)
[05:24:42] <Inst> does anyone use capi here?
[05:24:47] *** Quits: aqua0210 (~user@101.85.11.168) (Ping timeout: 256 seconds)
[05:25:55] *** Quits: darkstardev13 (~darkstard@89.47.234.174) (Ping timeout: 256 seconds)
[05:26:05] <Inst> capi ffi? or is anyone in general familiar with capi ffi?
[05:42:48] *** Quits: xff0x (~xff0x@2001:1a81:52b1:3000:4e58:263b:7745:5105) (Ping timeout: 268 seconds)
[05:43:30] *** Joins: xff0x (~xff0x@2001:1a81:52b1:3000:5297:4b75:9c14:f5c1)
[05:46:10] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Ping timeout: 260 seconds)
[05:46:25] *** Joins: aqua0210 (~user@101.85.11.168)
[05:48:58] *** Quits: darkstarx (~darkstard@gateway/vpn/pia/darkstardevx) (Remote host closed the connection)
[05:49:21] *** Joins: darkstarx (~darkstard@gateway/vpn/pia/darkstardevx)
[05:49:22] *** Quits: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[05:49:43] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[05:54:43] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[05:58:48] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[06:00:02] *** Quits: aqua0210 (~user@101.85.11.168) (Remote host closed the connection)
[06:11:03] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[06:11:04] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[06:11:04] *** Joins: wroathe (~wroathe@user/wroathe)
[06:14:06] *** Quits: xff0x (~xff0x@2001:1a81:52b1:3000:5297:4b75:9c14:f5c1) (Ping timeout: 260 seconds)
[06:15:42] *** Joins: xff0x (~xff0x@2001:1a81:52ec:e600:32d8:d60b:eef6:92ba)
[06:15:56] *** Quits: mmhat (~mmh@55d4b9d8.access.ecotel.net) (Ping timeout: 245 seconds)
[06:27:11] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 245 seconds)
[06:30:17] *** Joins: mmhat (~mmh@55d4aeaa.access.ecotel.net)
[06:34:35] *** Quits: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net) (Ping timeout: 264 seconds)
[06:40:07] *** Quits: mmhat (~mmh@55d4aeaa.access.ecotel.net) (Quit: WeeChat 3.3)
[07:00:19] <arahael> Is it possible to have a Text type contain haskell code, which I then interpret and produce a result?
[07:00:31] <arahael> Basically I want to do: print foo; eval foo.
[07:02:57] <koala_man> what does lambdabot do?
[07:04:31] *** Quits: khanred (~khanred@user/khanred) (Ping timeout: 256 seconds)
[07:06:47] <arahael> koala_man: Ok, ok, I'm aware it's /possible/.  But is there an easy, convenient way to do this?
[07:07:15] <koala_man> looks like it uses 'mueval', and is meant for sandboxing and not arbitrary use
[07:08:18] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:08:18] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:08:19] *** finn_elija is now known as FinnElija
[07:08:38] *** Quits: shailangsa (~shailangs@host86-185-98-19.range86-185.btcentralplus.com) ()
[07:09:43] <koala_man> arahael: what kind of context and interop are you hoping for?
[07:10:36] <arahael> koala_man: Literally the two functions I was suggesting.  Ideally, 'eval foo' would modify the current program, registering any new functions, so probably would require template haskell.
[07:12:34] <koala_man> I don't know what I'm talking about, but I imagine that's only an option in an interpreted mode like with ghci
[07:16:12] *** Joins: ees (~user@pool-108-18-30-46.washdc.fios.verizon.net)
[07:20:04] <arahael> I suppose I could always give this a play: https://hackage.haskell.org/package/plugins-1.6.0/docs/System-Eval-Haskell.html
[07:20:35] *** Quits: syntactic_sugar (~amoljha@2601:644:8601:2e30::822c) (Quit: WeeChat 3.3)
[07:23:20] *** Joins: dsrt^ (~dsrt@h50.174.139.63.static.ip.windstream.net)
[07:24:21] *** Quits: Lycurgus (~juan@98.4.112.204) (Ping timeout: 256 seconds)
[07:24:41] <koala_man> doesn't look like it'll let you modify a running program, but I'd be interested to know how it goes
[07:25:36] <arahael> It seems it does - at least, it'll register the new code.
[07:26:22] <arahael> Ah, probably not, but even so, hopefully it returns a function I can call.
[07:26:56] <koala_man> that seems more likely, yes
[07:27:45] *** Quits: ees (~user@pool-108-18-30-46.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[07:28:40] <arahael> Alternatively, I could just load the module source, strip out the imports, and use that as the string.
[07:29:04] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Read error: Connection reset by peer)
[07:29:24] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[07:30:40] *** Joins: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net)
[07:31:27] <arahael> What I want to do is literate programming with haskell, but not with the usual html output.
[07:35:22] *** Quits: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[07:35:48] *** Quits: x6C697370 (~michael@2600:1700:7c02:3180::44) (Read error: Connection reset by peer)
[07:36:01] <arahael> Well, sorta - I also want to have the program output interpsersed with that literate code.
[07:39:09] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[07:41:17] <arahael> Nice - found this: https://hackage.haskell.org/package/markdown-unlit (which is almost what I want), now I mostly just need to figure out how to evaluate the code so that the output is shown in the markdown output.
[07:42:35] <arahael> Perhaps I should have a mulitple-stage build?  1. Compile program, 2. Generate literate documents, with placeholders 3. Post-process those as a template and update them filling in the placeholders...
[07:44:26] *** Joins: lavaman (~lavaman@98.38.249.169)
[07:45:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:46:37] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[07:53:02] <koala_man> that's definitely sounds more straight forward than full eval support
[07:55:15] <arahael> Hmm, ok!
[08:01:41] *** Joins: ubikium (~ubikium@i223-218-66-82.s41.a013.ap.plala.or.jp)
[08:04:16] *** Joins: beka (~beka@104-244-24-117.PUBLIC.monkeybrains.net)
[08:04:56] <sm> waay easier
[08:06:59] <sm> I believe there's a tool that'll insert program output and maybe test it for you, but that's all I remember
[08:08:51] <sm> maybe https://hackage.haskell.org/package/readme-lhs is one
[08:09:53] *** Joins: smunix (~smunix@lnsm1-montreal02-142-122-74-243.internet.virginmobile.ca)
[08:13:24] <sm> quite hard to get your head around this, but I suspect it's good
[08:13:30] *** Quits: ChaiTRex (~ChaiTRex@user/chaitrex) (Ping timeout: 276 seconds)
[08:14:10] *** Joins: ChaiTRex (~ChaiTRex@user/chaitrex)
[08:14:13] *** Quits: ByronJohnson (~bairyn@50-250-232-19-static.hfc.comcastbusiness.net) (Ping timeout: 256 seconds)
[08:15:27] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:16:06] <sm> https://hackage.haskell.org/package/numhask, interesting
[08:16:54] *** Joins: ByronJohnson (~bairyn@50-250-232-19-static.hfc.comcastbusiness.net)
[08:17:29] <c_wraith> that has the typical problem mathematically accurate class hierarchies usually do
[08:17:41] *** Joins: shailangsa (~shailangs@host86-185-98-19.range86-185.btcentralplus.com)
[08:18:16] <c_wraith> It has classes which have laws but no members
[08:18:52] <EvanR> as god intended
[08:19:00] <c_wraith> while that's not a huge conceptual problem, it does result in inference reporting the wrong thing
[08:20:06] <EvanR> i thought you were going to say it was the unicode operators
[08:20:11] <EvanR> (⊕) :: a -> a -> a
[08:20:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[08:20:42] <arahael> sm: That looks like what I want, might be worth playing with that.
[08:23:51] <sm> c_wraith: https://hackage.haskell.org/package/numhask-0.8.1.0/docs/NumHask.html#g:4 seems to be touching on that (inference)
[08:24:28] <c_wraith> sm: that's not what I'm talking about.
[08:24:36] <sm> ah
[08:25:23] <c_wraith> I mean: what's the type of (1 + 2) * 3?
[08:25:47] <c_wraith> You really want it to be Ring a => a
[08:25:53] <c_wraith> But that isn't what it will infer
[08:28:28] <c_wraith> And because the Ring class adds laws, there's a difference in expectation between something that says it is a ring and something that says it's a multiplicative group and an additive group
[08:42:08] *** Joins: Everything (~Everythin@37.115.210.35)
[08:45:19] *** Quits: gdown (~gavin@h69-11-248-109.kndrid.broadband.dynamic.tds.net) (Remote host closed the connection)
[08:53:18] *** Quits: acowley (~acowley@c-68-83-22-43.hsd1.nj.comcast.net) (Ping timeout: 260 seconds)
[08:56:24] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:56:45] *** Quits: smunix (~smunix@lnsm1-montreal02-142-122-74-243.internet.virginmobile.ca) (Remote host closed the connection)
[09:00:17] *** Joins: smunix (~smunix@static.26.70.12.49.clients.your-server.de)
[09:04:48] *** Joins: Guest55 (~Guest55@lnsm1-montreal02-142-122-74-243.internet.virginmobile.ca)
[09:11:26] *** Quits: EvanR (~evan@2600:1700:ba69:10:75fc:f740:4c21:d03d) (Ping timeout: 260 seconds)
[09:13:00] *** Joins: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net)
[09:17:23] *** Joins: mbuf (~Shakthi@122.178.124.224)
[09:21:34] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[09:21:35] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[09:21:56] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[09:22:35] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[09:23:38] *** Quits: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[09:26:38] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[09:26:48] *** Quits: Guest55 (~Guest55@lnsm1-montreal02-142-122-74-243.internet.virginmobile.ca) (Ping timeout: 256 seconds)
[09:30:53] <mjrosenb> @dj Maybe a -> [a]
[09:30:53] <lambdabot> Maybe you meant: djinn djinn-add djinn-clr djinn-del djinn-env djinn-names djinn-ver do
[09:31:03] <mjrosenb> @djinn Maybe a -> [a]
[09:31:03] <lambdabot> Error: Undefined type []
[09:31:26] <mjrosenb> this is probably just a library function that I should use hoogle for.
[09:32:28] <mjrosenb> maybeToList... what a name.
[09:35:17] *** Quits: hiruji (~hiruji@user/hiruji) (Ping timeout: 268 seconds)
[09:41:31] <arahael> mjrosenb: Heh, indeed. Makes sense though!
[09:43:27] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[09:43:27] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[09:43:27] *** Joins: wroathe (~wroathe@user/wroathe)
[09:48:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[09:49:39] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Quit: WeeChat 3.3)
[09:52:53] <ubikium> From typeclassopedia https://wiki.haskell.org/Typeclassopedia#Definition_5 , I read this line: sconcat reduces a nonempty list using (<>). For most instances, this is the same as foldr1 (<>), but it can be constant-time for idempotent semigroups.
[09:53:23] <ubikium> Is it wrong? The constant time optimization should be for `stimes` right?
[09:56:14] *** Quits: johnjay (~pi@192.142.100.50) (Ping timeout: 260 seconds)
[09:59:09] *** Joins: johnjay (~pi@192.142.100.50)
[10:05:38] *** Quits: johnjay (~pi@192.142.100.50) (Ping timeout: 260 seconds)
[10:08:45] *** Joins: johnjay (~pi@192.142.100.50)
[10:09:17] <mjrosenb> I could imagine there being degenerate semigroups that sconcat is constant time for
[10:09:29] <mjrosenb> but I'm not too sure why you would use them for anything.
[10:09:57] <mjrosenb> and the definition of idempotent semigroup definitely fits with stimes being constant time
[10:11:04] <mjrosenb> since x*x == x implies stimes n x = x
[10:11:19] <mjrosenb> although what is stimes 0?
[10:11:46] *** Quits: beka (~beka@104-244-24-117.PUBLIC.monkeybrains.net) (Ping timeout: 245 seconds)
[10:12:17] <mjrosenb> and it looks like the docs linked agree.
[10:16:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:19:33] <c_wraith> degerate like First?
[10:19:45] <c_wraith> err.  *degenerate
[10:20:07] <c_wraith> But the thing is...  foldr1 (<>)  over a list of First is also constant-time
[10:20:43] <ubikium> For n <= 0, it errors out: https://hackage.haskell.org/package/base-4.9.0.0/docs/src/Data.Semigroup.html#stimesIdempotent
[10:21:31] <mjrosenb> what is First?
[10:21:35] <ubikium> I'll go ahead and edit it. Btw, there are so many dead links in the typeclassopedia
[10:22:20] <c_wraith> mjrosenb: defined in the same module as Semigroup: https://hackage.haskell.org/package/base-4.16.0.0/docs/Data-Semigroup.html#t:First
[10:22:56] <ubikium> ok, I have to go through the mailing list for wiki account creation. Maybe someone with an account can help with this.
[10:27:19] *** Joins: vysn (~vysn@user/vysn)
[10:27:45] <mjrosenb> is it just sconcat [First 1, First 2, First 3,...] == 1
[10:28:27] <c_wraith> yes, more or less.  (There's a First on the output)
[10:29:12] <ubikium> but foldr1 (<>) on First (Maybe a) is not constant time?
[10:29:27] <c_wraith> On the First from Semigroup, it is
[10:29:34] <c_wraith> (Not on the First from Monoid)
[10:31:32] <ubikium> oh, I see
[10:33:17] <mjrosenb> why is the First from Monoid different?
[10:33:30] <mjrosenb> the only difference is that it has mempty, right?
[10:33:36] <c_wraith> it's a different type
[10:34:01] <c_wraith> Data.Semigroup.First a is a wrapper for a.  Data.Monoid.First a is a wrapper for Maybe a
[10:34:11] <mjrosenb> ahh. that would do it.
[10:38:28] <mjrosenb> it can be constant if the first element is Just, but it can also take linear time if it has N Nothings at the head of the list, right?
[10:39:04] <ubikium> But the wiki line is still wrong? Not all idempotent semigroups have constant `sconcat`?
[10:39:41] <ubikium> They all have constant time `stimes`, so maybe it's a mistake.
[10:42:39] *** Joins: beka (~beka@104.193.170.240)
[10:45:28] *** Quits: orhan89_ (~orhan89@151.91.188.35.bc.googleusercontent.com) (Ping timeout: 260 seconds)
[10:45:56] *** Quits: xff0x (~xff0x@2001:1a81:52ec:e600:32d8:d60b:eef6:92ba) (Ping timeout: 245 seconds)
[10:46:55] *** Joins: xff0x (~xff0x@port-92-193-130-240.dynamic.as20676.net)
[10:47:24] *** Joins: Sgeo (~Sgeo@user/sgeo)
[10:47:47] *** Quits: Sgeo_ (~Sgeo@user/sgeo) (Ping timeout: 264 seconds)
[10:51:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[10:51:25] *** Joins: mei3 (~mei@user/mei)
[10:52:12] *** Joins: x6C697370 (~michael@2600:1700:7c02:3180::44)
[10:53:53] *** Joins: Lycurgus (~juan@98.4.112.204)
[10:54:11] *** Joins: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net)
[10:58:14] *** Quits: Lycurgus (~juan@98.4.112.204) (Client Quit)
[11:20:43] *** Joins: burnsidesLlama (~burnsides@dhcp168-023.wadham.ox.ac.uk)
[11:21:29] *** Quits: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net) (Remote host closed the connection)
[11:22:05] *** Joins: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net)
[11:22:16] *** Quits: burnsidesLlama (~burnsides@dhcp168-023.wadham.ox.ac.uk) (Remote host closed the connection)
[11:26:01] *** Quits: ubikium (~ubikium@i223-218-66-82.s41.a013.ap.plala.or.jp) (Quit: Leaving)
[11:30:20] *** Joins: burnsidesLlama (~burnsides@dhcp168-023.wadham.ox.ac.uk)
[11:33:53] *** Joins: Sgeo_ (~Sgeo@user/sgeo)
[11:35:46] *** Joins: alzgh (~alzgh@user/alzgh)
[11:36:45] *** Quits: Sgeo (~Sgeo@user/sgeo) (Ping timeout: 268 seconds)
[11:43:02] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[11:45:03] *** Quits: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net) (Remote host closed the connection)
[11:45:40] *** Joins: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net)
[11:50:41] *** Quits: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[11:54:46] *** Joins: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net)
[11:55:05] *** Joins: Lycurgus (~juan@98.4.112.204)
[11:59:16] *** Quits: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net) (Ping timeout: 245 seconds)
[12:00:57] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[12:02:35] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[12:09:58] *** Joins: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr)
[12:15:25] *** Quits: x6C697370 (~michael@2600:1700:7c02:3180::44) (Quit: WeeChat 3.3)
[12:23:57] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[12:26:07] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[12:26:21] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 245 seconds)
[12:27:24] *** Lord_of_Life_ is now known as Lord_of_Life
[12:35:29] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:38:42] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:40:16] *** Joins: v01d4lph4 (~v01d4lph4@122.177.85.95)
[12:40:16] *** Quits: v01d4lph4 (~v01d4lph4@122.177.85.95) (Changing host)
[12:40:17] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[12:40:19] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[12:40:58] <mc47> Hey, just to be sure, is STM supposed to work with forkProcess? (probably not, right?)
[12:41:15] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:41:29] *** Joins: kuribas (~user@ptr-25vy0i9stc21zae4wv3.18120a2.ip6.access.telenet.be)
[12:41:52] *** Quits: burnsidesLlama (~burnsides@dhcp168-023.wadham.ox.ac.uk) (Remote host closed the connection)
[12:43:40] *** Joins: hiruji (~hiruji@user/hiruji)
[12:44:34] *** Joins: johnny_sitar (~artur@078088015209.bialystok.vectranet.pl)
[12:45:25] *** Joins: acidjnk (~acidjnk@p200300d0c72635825cb0fefbc648f0e4.dip0.t-ipconnect.de)
[12:45:35] *** Quits: Sgeo_ (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[12:55:17] *** Quits: beka (~beka@104.193.170.240) (Ping timeout: 256 seconds)
[12:57:42] *** Joins: Tuplanolla (~Tuplanoll@91-159-69-50.elisa-laajakaista.fi)
[12:59:38] *** Quits: vysn (~vysn@user/vysn) (Read error: Connection reset by peer)
[13:00:38] *** Joins: MoC (~moc@user/moc)
[13:08:49] *** Joins: burnsidesLlama (~burnsides@dhcp168-023.wadham.ox.ac.uk)
[13:13:14] *** Quits: burnsidesLlama (~burnsides@dhcp168-023.wadham.ox.ac.uk) (Ping timeout: 260 seconds)
[13:15:41] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[13:17:04] *** Joins: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net)
[13:22:06] *** Quits: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[13:23:45] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.wa.comcast.net) (Quit: zzz)
[13:24:12] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[13:24:30] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[13:24:51] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[13:25:03] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[13:25:47] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[13:27:51] *** Quits: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr) (Remote host closed the connection)
[13:28:47] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:29:11] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 264 seconds)
[13:30:04] *** Joins: trainlag1602 (~saroa@user/trainlag1602)
[13:30:08] *** Quits: justUnited (~justache@user/justache) (Remote host closed the connection)
[13:30:34] *** Quits: Lycurgus (~juan@98.4.112.204) (Quit: Exeunt)
[13:31:03] *** Joins: justUnited (~justache@user/justache)
[13:31:28] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Remote host closed the connection)
[13:33:04] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[13:34:48] *** Joins: cosimone (~user@93-47-231-203.ip115.fastwebnet.it)
[13:36:06] *** Joins: aeke (~a@p200300ef973db1af4086f0a6a24fc4dd.dip0.t-ipconnect.de)
[13:37:59] *** Joins: fendor (~fendor@178.165.196.101.wireless.dyn.drei.com)
[13:47:58] *** Joins: burnsidesLlama (~burnsides@dhcp168-023.wadham.ox.ac.uk)
[13:52:31] *** Quits: burnsidesLlama (~burnsides@dhcp168-023.wadham.ox.ac.uk) (Ping timeout: 256 seconds)
[13:57:37] *** Quits: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 256 seconds)
[13:57:52] *** Joins: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net)
[13:58:24] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Remote host closed the connection)
[13:59:28] *** Joins: burnsidesLlama (~burnsides@dhcp168-023.wadham.ox.ac.uk)
[14:01:20] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[14:01:26] *** Quits: fr33domlover1 (~fr33domlo@angeley.es) (Remote host closed the connection)
[14:02:54] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Remote host closed the connection)
[14:04:37] *** Joins: mmhat (~mmh@55d4aeaa.access.ecotel.net)
[14:05:00] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[14:05:30] *** Quits: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 260 seconds)
[14:07:01] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Remote host closed the connection)
[14:07:12] *** Joins: __monty__ (~toonn@user/toonn)
[14:13:22] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:15:56] *** Joins: bliminse (~bliminse@host86-185-253-43.range86-185.btcentralplus.com)
[14:16:59] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:17:36] *** Joins: Vajb (~Vajb@85-76-35-211-nat.elisa-mobile.fi)
[14:17:38] *** Joins: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net)
[14:19:16] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[14:19:17] *** Quits: Vajb (~Vajb@85-76-35-211-nat.elisa-mobile.fi) (Read error: Connection reset by peer)
[14:20:10] *** Quits: bliminse (~bliminse@host86-185-253-43.range86-185.btcentralplus.com) (Client Quit)
[14:20:15] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[14:22:41] *** Joins: bliminse (~bliminse@host86-185-253-43.range86-185.btcentralplus.com)
[14:23:07] *** Quits: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 256 seconds)
[14:23:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:23:50] *** Joins: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr)
[14:28:19] *** Joins: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net)
[14:29:47] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[14:30:51] *** Joins: alx741 (~alx741@181.196.69.19)
[14:32:38] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:36:37] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:39:16] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 245 seconds)
[14:42:56] *** Joins: AlexNoo_ (~AlexNoo@94.233.240.96)
[14:45:56] *** Quits: AlexZenon (~alzenon@94.233.241.187) (Ping timeout: 245 seconds)
[14:46:06] *** Quits: Alex_test (~al_test@94.233.241.187) (Ping timeout: 260 seconds)
[14:46:34] *** Quits: AlexNoo (~AlexNoo@94.233.241.187) (Ping timeout: 260 seconds)
[14:49:02] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[14:50:01] *** Joins: Alex_test (~al_test@94.233.240.96)
[14:50:10] *** Joins: AlexZenon (~alzenon@94.233.240.96)
[14:55:50] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 260 seconds)
[14:56:42] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:00:31] *** Quits: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 256 seconds)
[15:00:39] *** Quits: haskl (~haskl@user/haskl) (Read error: Connection reset by peer)
[15:01:39] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:03:00] *** Joins: haskl (~haskl@user/haskl)
[15:06:23] *** Joins: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net)
[15:06:41] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[15:06:43] *** Joins: Neuromancer (~Neuromanc@user/neuromancer)
[15:07:31] *** Joins: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net)
[15:08:09] *** Joins: hololeap (~hololeap@user/hololeap)
[15:09:27] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[15:11:21] *** Quits: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net) (Ping timeout: 268 seconds)
[15:17:49] *** Quits: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr) (Remote host closed the connection)
[15:18:35] *** Quits: burnsidesLlama (~burnsides@dhcp168-023.wadham.ox.ac.uk) (Remote host closed the connection)
[15:20:01] *** Quits: trainlag1602 (~saroa@user/trainlag1602) (Quit: Leaving.)
[15:24:07] *** Joins: fef (~thedawn@user/thedawn)
[15:26:33] *** Joins: _ht (~quassel@82-169-194-8.biz.kpn.net)
[15:26:35] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[15:30:16] *** Joins: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr)
[15:30:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:30:56] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 245 seconds)
[15:31:55] *** Joins: deadmarshal (~deadmarsh@95.38.117.144)
[15:33:33] *** Quits: unmanbearpig (~unmanbear@user/unmanbearpig) (Ping timeout: 268 seconds)
[15:34:29] *** Joins: unmanbearpig (~unmanbear@user/unmanbearpig)
[15:34:34] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[15:36:53] *** Quits: MoC (~moc@user/moc) (Quit: Konversation terminated!)
[15:37:30] <deadmarshal> How can i use read :: Int here? https://paste.tomsmeding.com/am0cThuf
[15:39:08] <Rembane_> > map read $ map fst $ map (span (isDigit)) $ words "72olle 103doo 100ya"
[15:39:09] <lambdabot>  [*Exception: Prelude.read: no parse
[15:39:28] <Rembane_> > map fst $ map (span (isDigit)) $ words "72olle 103doo 100ya"
[15:39:29] <lambdabot>  ["72","103","100"]
[15:39:41] <Rembane_> > map (read :: String -> Int) $ map fst $ map (span (isDigit)) $ words "72olle 103doo 100ya"
[15:39:42] <lambdabot>  [72,103,100]
[15:40:38] <Rembane_> deadmarshal: Like that. :D
[15:40:40] <gentauro> maerwald: do you also get this warning message when you build for the M1? -> `'apple-a7' is not a recognized processor for this target (ignoring processor)`
[15:40:54] *** Joins: fuzzypixelz (~fuzzypixe@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[15:40:54] <Rembane_> deadmarshal: Sometimes read needs some help to figure out which type is needed.
[15:41:08] <maerwald> gentauro: not sure... I only build on CI
[15:41:26] <gentauro> maerwald: roger that
[15:43:35] *** Quits: deadmarshal (~deadmarsh@95.38.117.144) (Ping timeout: 256 seconds)
[15:50:39] *** AlexNoo_ is now known as AlexNoo
[15:52:29] *** Joins: deadmarshal (~deadmarsh@95.38.117.144)
[15:54:36] *** Joins: burnsidesLlama (~burnsides@dhcp168-023.wadham.ox.ac.uk)
[15:59:22] *** Quits: burnsidesLlama (~burnsides@dhcp168-023.wadham.ox.ac.uk) (Ping timeout: 260 seconds)
[16:02:38] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[16:06:49] *** Quits: deadmarshal (~deadmarsh@95.38.117.144) (Ping timeout: 256 seconds)
[16:08:41] *** Joins: wonko (~wjc@user/wonko)
[16:08:57] *** Joins: Nolrai2 (~Nolrai2@c-76-27-202-218.hsd1.or.comcast.net)
[16:13:57] *** Joins: deadmarshal (~deadmarsh@95.38.117.144)
[16:18:24] *** Joins: EvanR (~evan@2600:1700:ba69:10:f8b2:4afa:5a7f:3188)
[16:18:31] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:22:59] *** Joins: machinedgod (~machinedg@24.105.81.50)
[16:23:06] *** Quits: EvanR (~evan@2600:1700:ba69:10:f8b2:4afa:5a7f:3188) (Ping timeout: 260 seconds)
[16:24:07] *** Quits: bjobjo (~bjobjo@user/bjobjo) (Ping timeout: 268 seconds)
[16:28:15] <hpc> deadmarshal: you can also just use acme-php, which has instance Num String :D
[16:40:40] *** Joins: bjobjo (~bjobjo@user/bjobjo)
[16:41:18] *** Quits: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[16:45:42] *** Quits: bjobjo (~bjobjo@user/bjobjo) (Ping timeout: 268 seconds)
[16:47:05] *** Joins: bjobjo (~bjobjo@user/bjobjo)
[16:48:54] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[16:53:56] <gentauro> hpc: `…-php`? That sounds horrible xD
[16:58:53] *** Joins: deadmarshal_ (~deadmarsh@95.38.113.241)
[16:58:57] *** Quits: deadmarshal (~deadmarsh@95.38.117.144) (Ping timeout: 256 seconds)
[17:02:53] <hpc> give it a look, but don't read the hackage docs because they contain spoilers :D
[17:04:28] <geekosaur> it says something about haskell that you can stretch it that far :)
[17:06:58] <hpc> i think it says more about haskell that it can only be stretched that far
[17:07:03] <gentauro> hpc: this? https://hackage.haskell.org/package/acme-php-0.0.5/src/docs.html
[17:07:06] <gentauro> is it a joke?
[17:07:49] <geekosaur> the whole acme- hierarchy is jokes
[17:08:19] <gentauro> geekosaur: that's a lot of jokes -> https://hackage.haskell.org/packages/#cat:Acme
[17:08:22] <gentauro> :o
[17:08:38] <geekosaur> yep
[17:09:02] <hpc> acme-schoenfinkel is my favorite, unless there have been any new ones lately
[17:10:01] <gentauro> https://hackage.haskell.org/package/acme-io-0.1.0.1/docs/src/System-IO-Unsafe-Really-IMeanIt.html#reallyReallyAbsurdlyUnsafePerformIOShameOnYou
[17:10:04] <gentauro> WTF
[17:10:29] <hpc> okay, acme-mutable is my new favorite
[17:10:50] <hpc> er, acme-mutable-package
[17:13:28] <gentauro> hpc: now that is bad
[17:13:46] <gentauro> no wonder SPJ moved to Epic Games to play Fortnite all day
[17:14:10] <hpc> gentauro: acme-io is a reference to https://hoogle.haskell.org/?hoogle=reallyUnsafe
[17:14:34] <hpc> which manage to be even worse than unsafeCoerce
[17:14:48] *** Quits: dsrt^ (~dsrt@h50.174.139.63.static.ip.windstream.net) (Remote host closed the connection)
[17:15:32] <gentauro> hpc: I <3 that it is `SAFE` inferred xD https://hackage.haskell.org/package/acme-io-0.1.0.1/docs/System-IO-Unsafe-Really-IMeanIt.html
[17:15:49] <gentauro> Haskell, more like HaskLEL, packages are a shit show right?
[17:15:57] *** Joins: lbseale (~lbseale@user/ep1ctetus)
[17:16:49] <gentauro> would love to see some `semantic / syntactic` versioning on the `AST` of the libraries. 
[17:17:23] <gentauro> a bit like `elm`, but not being superficial (baed signatures)
[17:17:39] *** Quits: wonko (~wjc@user/wonko) (Ping timeout: 256 seconds)
[17:18:40] *** Joins: wonko (~wjc@user/wonko)
[17:22:45] *** Quits: _ht (~quassel@82-169-194-8.biz.kpn.net) (Ping timeout: 256 seconds)
[17:22:53] *** Joins: _ht_ (~quassel@193.9.114.4)
[17:28:14] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[17:30:18] *** Quits: lbseale (~lbseale@user/ep1ctetus) (Quit: Leaving)
[17:30:42] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:31:58] *** Quits: bjobjo (~bjobjo@user/bjobjo) (Ping timeout: 268 seconds)
[17:32:57] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 256 seconds)
[17:32:58] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[17:38:10] *** Joins: bjobjo (~bjobjo@user/bjobjo)
[17:41:19] *** Joins: shapr (~user@pool-100-36-247-68.washdc.fios.verizon.net)
[17:41:19] *** Quits: bjobjo (~bjobjo@user/bjobjo) (Read error: Connection reset by peer)
[17:42:29] <maerwald> cabal says 'rejecting: network-3.1.2.5, network-3.1.2.2 (constraint from user target requires ==3.1.2.1)', although 1. there's no upper bound in .cabal and 2. there's a 'network ==3.1.2.5' constraint in cabal.project.freeze
[17:43:10] *** Joins: bjobjo (~bjobjo@user/bjobjo)
[17:44:25] <geekosaur> usually means some dependency of your target needs 3.1.2.1. cabal's kinda bad at reporting those things, mostly because it's too busy trying to solve goals to try to track where all the constraints come from
[17:45:23] <geekosaur> cabal's trying to be a general constraint solver without having a real constraint solver at its disposal
[17:45:43] <maerwald> well, cabal.project contains 'allow-newer: *'
[17:46:07] <maerwald> so this makes no sense
[17:47:27] <gentauro> maerwald: I added that to my `stack.yaml`
[17:48:23] <maerwald> what even is "user target"
[17:49:08] <maerwald> so the solver is broken and allow-newer is broken too?
[17:50:58] *** Joins: aleator (~aleator@178-55-209-25.bb.dnainternet.fi)
[17:52:17] *** Parts: jakalx (~jakalx@base.jakalx.net) (Error from remote client)
[17:56:09] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[17:56:54] *** Joins: hendursa1 (~weechat@user/hendursaga)
[18:00:08] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[18:00:24] *** Quits: aleator (~aleator@178-55-209-25.bb.dnainternet.fi) (Ping timeout: 260 seconds)
[18:02:11] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Quit: Leaving)
[18:02:59] *** jpds1 is now known as jpds
[18:03:44] *** Joins: burnsidesLlama (~burnsides@dhcp168-023.wadham.ox.ac.uk)
[18:03:59] *** Quits: kuribas (~user@ptr-25vy0i9stc21zae4wv3.18120a2.ip6.access.telenet.be) (Quit: ERC (IRC client for Emacs 26.3))
[18:08:39] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Ping timeout: 256 seconds)
[18:10:31] *** Joins: f-a (f2a@f2a.jujube.ircnow.org)
[18:11:01] <f-a> t:cabal  where are translations files (.po, .msg, etc.) going? in extra-source-files?
[18:11:25] *** Quits: bjobjo (~bjobjo@user/bjobjo) (Ping timeout: 268 seconds)
[18:15:35] *** Joins: jakalx (~jakalx@base.jakalx.net)
[18:17:06] *** Joins: unit73e (~emanuel@2001:818:e8dd:7c00:32b5:c2ff:fe6b:5291)
[18:20:18] *** Quits: deadmarshal_ (~deadmarsh@95.38.113.241) (Ping timeout: 260 seconds)
[18:22:32] *** Quits: euandreh (~euandreh@2804:14c:65c9:5161:4d0f:6b02:d329:b5d2) (Ping timeout: 268 seconds)
[18:24:36] *** Joins: neurocyte0132889 (~neurocyte@45.14.190.246)
[18:24:36] *** Quits: neurocyte0132889 (~neurocyte@45.14.190.246) (Changing host)
[18:24:36] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[18:24:56] *** Joins: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr)
[18:25:11] <[exa]> f-a: you might check reverse dependencies of i18n package, they should have the files managed somehow
[18:25:50] <f-a> sensible idea
[18:26:09] <[exa]> not that I'd know how to find the revdeps.. :D
[18:26:19] <maerwald> I have ~/.cabal/store/ghc-8.10.7/pandoc-2.10.1-48ded60d178790735dbd0b77b1694f289c1776562a1f42674a2e135256d36a1d/share/data/translations
[18:27:04] <maerwald> pandoc.cabal specifies 'data/translations/*.yaml' in data-files
[18:27:11] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Client Quit)
[18:27:20] <maerwald> so data-files go to share
[18:27:25] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:907f:6d38:50a3:cb6a)
[18:27:27] <geekosaur> https://packdeps.haskellers.com/reverse
[18:27:32] <f-a> he put in in data files yeah
[18:27:50] <[exa]> geekosaur: oo nice
[18:28:00] *** Joins: bjobjo (~bjobjo@user/bjobjo)
[18:28:21] <maerwald> extra-source files don't get installed I think, that's just for sdist to include them
[18:29:50] <unit73e> I remember reading that recently
[18:31:01] *** Joins: neurocyte0132889 (~neurocyte@45.14.190.246)
[18:31:02] *** Quits: neurocyte0132889 (~neurocyte@45.14.190.246) (Changing host)
[18:31:02] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[18:31:10] *** Quits: sprout_ (~quassel@2a02:a467:ccd6:1:49b2:5c3a:dea0:5ca1) (Ping timeout: 268 seconds)
[18:31:40] <unit73e> I read all that here: https://cabal.readthedocs.io/en/3.6/cabal-project.html
[18:31:46] <unit73e> because other-modules wasn't collaborating
[18:32:11] *** Quits: bjobjo (~bjobjo@user/bjobjo) (Ping timeout: 245 seconds)
[18:33:11] *** Joins: bjobjo (~bjobjo@user/bjobjo)
[18:34:05] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Client Quit)
[18:34:52] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[18:34:54] *** Joins: EvanR (~evan@2600:1700:ba69:10:8ec:144d:564b:ca12)
[18:35:02] *** Quits: EvanR (~evan@2600:1700:ba69:10:8ec:144d:564b:ca12) (Changing host)
[18:35:02] *** Joins: EvanR (~evan@user/evanr)
[18:35:04] *** Joins: be1m0nt (~be1m0nt@pool-100-37-244-180.nycmny.fios.verizon.net)
[18:35:27] *** Parts: be1m0nt (~be1m0nt@pool-100-37-244-180.nycmny.fios.verizon.net) ()
[18:35:39] *** Joins: neurocyte0132889 (~neurocyte@45.14.190.246)
[18:35:39] *** Quits: neurocyte0132889 (~neurocyte@45.14.190.246) (Changing host)
[18:35:39] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[18:40:18] *** Quits: aeke (~a@p200300ef973db1af4086f0a6a24fc4dd.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[18:40:41] *** Joins: aeke (~a@p200300ef973db1424086f0a6a24fc4dd.dip0.t-ipconnect.de)
[18:43:54] <fryguybob> mc47: In case no one else answered you question, STM does not work across processes.
[18:45:06] *** Quits: _ht_ (~quassel@193.9.114.4) (Ping timeout: 245 seconds)
[18:45:38] *** Joins: _ht (~quassel@82-169-194-8.biz.kpn.net)
[18:45:53] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[18:52:40] <maerwald> gentauro: https://gitlab.haskell.org/maerwald/stack/-/jobs/849239/artifacts/browse/.local/bin/
[18:52:49] <maerwald> there's a stack M1 binary
[18:59:41] *** Joins: CiaoSen (~Jura@p200300c95730dd002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[19:04:25] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[19:04:26] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[19:04:26] *** Joins: wroathe (~wroathe@user/wroathe)
[19:05:00] *** carbolymer_ is now known as carbolymer
[19:05:05] <gentauro> maerwald: nice !!!
[19:05:51] <gentauro> maerwald: any chance that `fpco` will merge this in version `2.5.x`?
[19:06:01] <gentauro> :)
[19:06:27] <maerwald> merge what?
[19:07:07] <gentauro> maerwald: your changes into their branch -> https://gitlab.haskell.org/maerwald/stack/-/commit/948db274fce49c3fa9607dcfea7d446e9ffdf223
[19:07:23] <maerwald> oh lol, probably not
[19:07:29] <gentauro> maerwald: xD
[19:08:15] *** Joins: timCF (~timCF@m91-129-97-132.cust.tele2.ee)
[19:08:57] <gentauro> could you try to do a `stack install haskell-language-server` to see if it builds :)
[19:09:23] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[19:10:43] <timCF> Hello! Let's say I do have `newtype A = A B`, and module does not export A constructor. Can I still implement somehow Coercible inside the module, to be able to use `coerce :: A -> B` outside of the module?
[19:12:09] <hpc> yes
[19:13:18] <dmj`> instances in Haskell are always exported and imported between modules
[19:18:00] *** justUnited is now known as justCity
[19:18:20] *** Joins: dsrt^ (~dsrt@h50.174.139.63.static.ip.windstream.net)
[19:19:27] *** Quits: cosimone (~user@93-47-231-203.ip115.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[19:20:08] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[19:21:38] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[19:21:39] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[19:21:39] *** Joins: wroathe (~wroathe@user/wroathe)
[19:22:50] *** Quits: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 260 seconds)
[19:24:10] *** Joins: fendor_ (~fendor@77.119.198.57.wireless.dyn.drei.com)
[19:26:39] *** Quits: fendor (~fendor@178.165.196.101.wireless.dyn.drei.com) (Ping timeout: 268 seconds)
[19:28:43] *** Joins: kadir (~kadir@78.178.105.36)
[19:28:50] *** Quits: acidjnk (~acidjnk@p200300d0c72635825cb0fefbc648f0e4.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[19:30:08] *** Quits: mbuf (~Shakthi@122.178.124.224) (Quit: Leaving)
[19:30:35] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:33:04] *** Joins: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net)
[19:33:07] <mc47> fryguybob: thank you, I should've read the docs more closely
[19:33:40] <mc47> one of the few times where a haskell program complies but doesn't do what you think it does
[19:37:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[19:40:02] <geekosaur> uh, wait. Coercible is not implementable, it's generated by the typechecker. and one of the rules for generation is the ocnstructor must be in scope
[19:40:50] <geekosaur> I believe yoou will get an error if you write instance Coercible A where
[19:42:34] *** peutri_ is now known as peutri
[19:45:04] <lyxia> Yeah, Coercible is not a regular class, it's its own construct with special semantics.
[19:47:10] *** Joins: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net)
[19:48:15] <timCF> I guess than I just have to use exported function-accessor instead of coerce
[19:49:35] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 264 seconds)
[19:50:01] *** Quits: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8) (Remote host closed the connection)
[19:54:23] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Ping timeout: 264 seconds)
[19:54:28] *** Quits: Nolrai2 (~Nolrai2@c-76-27-202-218.hsd1.or.comcast.net) (Quit: Client closed)
[19:56:07] *** Joins: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8)
[19:56:46] *** Joins: zmt00 (~zmt00@user/zmt00)
[20:01:35] *** Joins: srk_ (~sorki@user/srk)
[20:02:26] *** Quits: srk (~sorki@user/srk) (Ping timeout: 260 seconds)
[20:02:30] *** Quits: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net) (Remote host closed the connection)
[20:03:08] *** Joins: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net)
[20:04:13] *** srk_ is now known as srk
[20:04:52] *** Parts: kadir (~kadir@78.178.105.36) (WeeChat 3.3)
[20:06:22] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[20:06:22] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[20:06:22] *** Joins: wroathe (~wroathe@user/wroathe)
[20:07:05] *** Joins: fluffyballoon (~user@131.93.208.196)
[20:07:46] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[20:10:12] *** Joins: sprout_ (~quassel@2a02:a467:ccd6:1:e9:abf1:b887:13fa)
[20:10:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:10:50] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[20:10:53] *** Joins: neurocyte0132889 (~neurocyte@45.14.190.246)
[20:10:53] *** Quits: neurocyte0132889 (~neurocyte@45.14.190.246) (Changing host)
[20:10:53] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[20:11:13] *** Joins: mei32 (~mei@user/mei)
[20:12:25] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[20:12:55] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:907f:6d38:50a3:cb6a) (Ping timeout: 268 seconds)
[20:13:53] *** Joins: hololeap (~hololeap@user/hololeap)
[20:14:47] *** Quits: mei3 (~mei@user/mei) (Ping timeout: 264 seconds)
[20:14:47] *** mei32 is now known as mei3
[20:15:09] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[20:15:10] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[20:21:32] *** Quits: CiaoSen (~Jura@p200300c95730dd002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[20:27:50] *** Quits: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net) (Remote host closed the connection)
[20:28:26] *** Joins: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net)
[20:28:30] *** Joins: zincy (~zincy@2a00:23c8:970c:4801:350f:7ee:191a:6f65)
[20:35:07] *** Quits: Ram-Z (~Ram-Z@li1814-254.members.linode.com) (Ping timeout: 268 seconds)
[20:35:19] *** Quits: zincy (~zincy@2a00:23c8:970c:4801:350f:7ee:191a:6f65) (Remote host closed the connection)
[20:36:28] *** Joins: zincy (~zincy@2a00:23c8:970c:4801:350f:7ee:191a:6f65)
[20:38:38] *** Joins: Ram-Z (~Ram-Z@li1814-254.members.linode.com)
[20:40:05] *** Quits: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net) (Remote host closed the connection)
[20:40:35] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 264 seconds)
[20:40:56] *** Joins: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net)
[20:45:54] *** Quits: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[20:51:59] *** Quits: zincy (~zincy@2a00:23c8:970c:4801:350f:7ee:191a:6f65) (Remote host closed the connection)
[20:52:21] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[20:52:22] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[20:52:22] *** Joins: wroathe (~wroathe@user/wroathe)
[20:52:36] *** Quits: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net) (Remote host closed the connection)
[20:53:02] *** Joins: eggplantade (~Eggplanta@108-201-191-115.lightspeed.sntcca.sbcglobal.net)
[20:53:10] *** Joins: vysn (~vysn@user/vysn)
[20:54:21] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:56:10] *** Joins: Vajb (~Vajb@2001:999:66:281c:27a0:1549:39e5:8b1a)
[20:56:42] *** Quits: aeke (~a@p200300ef973db1424086f0a6a24fc4dd.dip0.t-ipconnect.de) (Quit: WeeChat 3.0.1)
[20:58:07] *** Joins: zincy (~zincy@2a00:23c8:970c:4801:350f:7ee:191a:6f65)
[21:00:01] *** Joins: kuribas (~user@ptr-25vy0i98iduiysh23zp.18120a2.ip6.access.telenet.be)
[21:00:01] *** Quits: Vajb (~Vajb@2001:999:66:281c:27a0:1549:39e5:8b1a) (Read error: Connection reset by peer)
[21:00:10] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[21:01:13] *** Quits: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr) (Remote host closed the connection)
[21:03:05] *** Joins: pfurla (~pfurla@189.122.164.244)
[21:03:16] *** Quits: zincy (~zincy@2a00:23c8:970c:4801:350f:7ee:191a:6f65) (Remote host closed the connection)
[21:06:22] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:06:28] <awpr> timCF: do you want _only_ `A -> B` and not the other direction, e.g. because `A` has extra invariants?
[21:07:36] *** Quits: burnsidesLlama (~burnsides@dhcp168-023.wadham.ox.ac.uk) (Remote host closed the connection)
[21:09:20] *** Joins: bitmapper (uid464869@id-464869.lymington.irccloud.com)
[21:12:26] *** Quits: pfurla (~pfurla@189.122.164.244) (Quit: gone to sleep. ZZZzzz…)
[21:14:42] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[21:15:39] *** Joins: mark___ (~a@p200300ef973db1424086f0a6a24fc4dd.dip0.t-ipconnect.de)
[21:15:54] *** Joins: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr)
[21:17:01] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.wa.comcast.net)
[21:18:36] *** Joins: deadmarshal (~deadmarsh@95.38.113.241)
[21:18:38] <mark___> Is ghc-vis maintained? When I try simple stuff like view ("hello" :: String) "hello" the repl dies and it says "double free or corruption (fasttop)"
[21:20:16] <Inst> i'm just
[21:20:23] <Inst> going to admit i'm embarrassed
[21:20:32] *** Parts: f-a (f2a@f2a.jujube.ircnow.org) ()
[21:20:47] *** Joins: Guest2727 (~Guest27@2601:281:d480:2ce0::93bd)
[21:20:49] <Inst> i can't get foreign import capi "toyfunction" to work
[21:21:59] *** Joins: aleator (~aleator@37-136-225-173.rev.dnainternet.fi)
[21:22:39] *** Joins: thblt (~thblt@user/thblt)
[21:24:02] <Guest2727> When using the Continuation monad is there ever a reason to replace the 'r' in 'Cont r a' with a specific type?
[21:24:34] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[21:24:43] <int-e> :t runCont
[21:24:44] <lambdabot> Cont r a -> (a -> r) -> r
[21:26:48] <int-e> Not usually, no. Though it is worth noting that newtype ContT r m a = ContT {runContT :: (a -> m r) -> m r}  is based on replacing `r` by the more specific `m r`.
[21:27:14] <int-e> and that allows you access to effects from m
[21:28:07] <hpc> sometimes if you're doing something domain-specific you might want a specific r
[21:28:40] <hpc> but i don't think i could come up with an example
[21:29:19] *** Joins: econo (uid147250@user/econo)
[21:29:26] *** Joins: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net)
[21:29:27] <Guest2727> OK, thanks for the answers
[21:30:23] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[21:30:23] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[21:30:24] *** Joins: wroathe (~wroathe@user/wroathe)
[21:30:32] <thblt> Google is failing me: is there an easy way, with cabal or stack, to generate complete documentation for a project's dependencies?  To have them in one place, browsable offline?
[21:33:34] <sm> stack haddock --open
[21:33:35] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[21:33:41] *** Quits: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net) (Ping timeout: 244 seconds)
[21:34:36] *** Quits: aleator (~aleator@37-136-225-173.rev.dnainternet.fi) (Ping timeout: 260 seconds)
[21:35:29] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[21:39:59] <Inst> i've been at it for like 24 hours, and i give up
[21:40:27] <monochrom> I use Cont for shift/reset http://www.vex.net/~trebla/haskell/cont.xhtml so r gets monomorphized all the time.
[21:40:35] <Inst> if someone would like to help me get a native file dialog written in C FFI-ed into Haskell
[21:40:35] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[21:40:44] <monochrom> I no longer use callCC in fact.
[21:40:45] <Inst> please query me, if you want money, I can pay for it
[21:40:54] <thblt> sm: indeed, thanks.  cabal was unhappy with my executable-only package, stack is less picky.
[21:41:14] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[21:41:14] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[21:41:14] *** Joins: wroathe (~wroathe@user/wroathe)
[21:41:58] <kronicmage> hey folks, I've implemented a pretty naive implementation of extended euclidean algorithm using hylo from recursion-schemes here: https://paste.tomsmeding.com/fc3bcFyu
[21:42:01] <Guest2727> monochrom: interesting, I'll check out that page
[21:42:09] <kronicmage> my question is: is there a better way to do this, without needing the extra data type?
[21:45:20] *** Joins: burnsidesLlama (~burnsides@dhcp168-023.wadham.ox.ac.uk)
[21:45:34] *** Joins: Sgeo (~Sgeo@user/sgeo)
[21:46:05] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 244 seconds)
[21:46:05] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[21:48:48] *** Joins: khanred (~khanred@user/khanred)
[21:48:53] *** Parts: khanred (~khanred@user/khanred) ()
[21:48:59] *** Quits: kuribas (~user@ptr-25vy0i98iduiysh23zp.18120a2.ip6.access.telenet.be) (Quit: ERC (IRC client for Emacs 26.3))
[21:49:30] *** Joins: She (~she@user/thedaemoness)
[21:49:39] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[21:49:56] *** Joins: pfurla (~pfurla@189.122.164.244)
[21:50:05] *** Quits: pfurla (~pfurla@189.122.164.244) (Client Quit)
[21:50:33] *** Joins: CiaoSen (~Jura@p200300c95730dd002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[21:50:44] *** Quits: burnsidesLlama (~burnsides@dhcp168-023.wadham.ox.ac.uk) (Ping timeout: 244 seconds)
[21:51:16] *** Joins: pfurla (~pfurla@189.122.164.244)
[21:51:57] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[21:54:00] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[21:55:52] *** Joins: beka (~beka@104.193.170.240)
[22:00:34] *** Quits: mark___ (~a@p200300ef973db1424086f0a6a24fc4dd.dip0.t-ipconnect.de) (Quit: WeeChat 3.0.1)
[22:00:54] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[22:01:55] *** Quits: pfurla (~pfurla@189.122.164.244) (Quit: Textual IRC Client: www.textualapp.com)
[22:02:09] *** Joins: hololeap (~hololeap@user/hololeap)
[22:03:36] *** Joins: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net)
[22:05:01] <dolio> kronicmage: You could just define EuclideanStructureF, since that's all you use, right? And then that can technically be assembled out of other functors, although it might not be a lot nicer.
[22:06:11] <dolio> The value case is `Const Natural` and the sum case is `(,,) Natural Natural`
[22:06:38] <dolio> So you just need a + on functors.
[22:06:43] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:07:26] <awpr> GHC.Generics.:+:
[22:07:45] <awpr> or Data.Functor.Sum.Sum
[22:08:23] *** Joins: slack1256 (~slack1256@191.125.227.73)
[22:09:19] *** Parts: thblt (~thblt@user/thblt) (i)
[22:11:11] *** Quits: yauhsien (~yauhsien@118-167-41-229.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[22:11:33] *** Joins: Guest41 (~Guest41@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[22:11:46] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[22:21:33] *** Quits: _xor (~xor@72.49.199.147) (Read error: Connection reset by peer)
[22:24:52] *** Quits: EvanR (~evan@user/evanr) (Ping timeout: 268 seconds)
[22:25:59] *** Joins: _xor (~xor@72.49.199.147)
[22:27:32] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[22:31:04] *** Quits: Guest2727 (~Guest27@2601:281:d480:2ce0::93bd) (Ping timeout: 256 seconds)
[22:33:12] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[22:34:41] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 245 seconds)
[22:34:44] *** Quits: deadmarshal (~deadmarsh@95.38.113.241) (Ping timeout: 268 seconds)
[22:37:36] *** Quits: CiaoSen (~Jura@p200300c95730dd002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[22:42:46] *** Quits: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[22:45:34] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[22:49:42] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[22:55:42] *** Quits: xff0x (~xff0x@port-92-193-130-240.dynamic.as20676.net) (Ping timeout: 268 seconds)
[22:56:37] *** Joins: Guest99 (~Guest99@pool-100-8-45-127.nwrknj.fios.verizon.net)
[22:58:58] *** Joins: Fusion_ (~Fusion@2a02-a44c-e6e5-1-5cf9-2256-6303-4118.fixed6.kpn.net)
[23:00:15] <Inst> hmmm
[23:00:24] <Inst> I finally got CApiFFI to work
[23:00:30] <Inst> in a limited, bugged form with a toy program
[23:00:35] *** Quits: slack1256 (~slack1256@191.125.227.73) (Remote host closed the connection)
[23:01:02] <Inst> basically, if I run it in GHCi, it works, in GHC, it just hangs, in prat because the toy program has no main
[23:01:10] <Inst> I can break out, it executes the prompts (but doesn't accept input)
[23:02:11] <geekosaur> can you show us the bugged program? also if it has no main then ghc should refuse to link it
[23:02:11] *** Joins: xff0x (~xff0x@2001:1a81:52ec:e600:16f0:b06d:ec81:fca7)
[23:02:44] <geekosaur> and may refuse to compile it if it finds a module Main (or a module with no header) that doesn't have `main` defined in it
[23:03:45] <Inst> check haskell beginner geekosaur
[23:06:49] *** Quits: _xor (~xor@72.49.199.147) (Read error: Connection reset by peer)
[23:07:12] *** Joins: _xor (~xor@72.49.199.147)
[23:09:57] *** Quits: fluffyballoon (~user@131.93.208.196) (Remote host closed the connection)
[23:12:35] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[23:13:07] *** Joins: hendursaga (~weechat@user/hendursaga)
[23:13:35] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 268 seconds)
[23:15:16] *** Quits: hololeap (~hololeap@user/hololeap) (Remote host closed the connection)
[23:15:42] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[23:16:16] *** Joins: max22- (~maxime@2a01cb08833598005dc77d164ebe8446.ipv6.abo.wanadoo.fr)
[23:16:38] *** Joins: hololeap (~hololeap@user/hololeap)
[23:17:53] *** Joins: [Kalisto] (~nico@user/kalisto/x-8968079)
[23:23:01] *** Quits: wonko (~wjc@user/wonko) (Ping timeout: 245 seconds)
[23:23:21] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[23:23:33] *** Joins: mjacob (~mjacob@adrastea.uberspace.de)
[23:24:15] *** Quits: [Kalisto] (~nico@user/kalisto/x-8968079) (Ping timeout: 244 seconds)
[23:27:46] *** Quits: xff0x (~xff0x@2001:1a81:52ec:e600:16f0:b06d:ec81:fca7) (Ping timeout: 260 seconds)
[23:30:11] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Remote host closed the connection)
[23:30:35] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[23:35:18] *** Quits: juhp (~juhp@128.106.188.220) (Ping timeout: 260 seconds)
[23:35:26] <maerwald> I'm playing with hsseccomp and I wish there was a high-level library
[23:36:47] *** Joins: zebrag (~chris@user/zebrag)
[23:37:33] *** Joins: juhp (~juhp@128.106.188.220)
[23:39:48] *** Joins: xff0x (~xff0x@2001:1a81:52ec:e600:16f0:b06d:ec81:fca7)
[23:41:35] *** Quits: Fusion_ (~Fusion@2a02-a44c-e6e5-1-5cf9-2256-6303-4118.fixed6.kpn.net) (Quit: Leaving)
[23:42:00] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[23:42:00] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[23:42:00] *** Joins: wroathe (~wroathe@user/wroathe)
[23:43:39] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[23:44:54] <maerwald> also https://lwn.net/Articles/799557/ meh
[23:46:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[23:49:16] *** Quits: Guest99 (~Guest99@pool-100-8-45-127.nwrknj.fios.verizon.net) (Ping timeout: 256 seconds)
[23:49:24] *** Joins: deadmarshal (~deadmarsh@95.38.113.241)
[23:51:03] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[23:53:45] *** Quits: deadmarshal (~deadmarsh@95.38.113.241) (Ping timeout: 256 seconds)
[23:56:17] *** Quits: beka (~beka@104.193.170.240) (Ping timeout: 244 seconds)
