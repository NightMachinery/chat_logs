[00:01:31] *** Joins: v88m (~Xiro@109-252-61-156.nat.spd-mgts.ru)
[00:03:02] *** Joins: derelict (~derelict@user/derelict)
[00:09:40] *** Quits: andreyorst[erc] (~andreyors@2.92.124.61) (Ping timeout: 240 seconds)
[00:09:48] <pjb> akater[m]: no, it expands to ,getter!
[00:09:50] <pjb> That's the point.
[00:13:16] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:14:14] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[00:14:33] *** Lord_of_Life_ is now known as Lord_of_Life
[00:14:53] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[00:14:54] <pjb> akater[m]: there are several cases: if the place is a macro, then it's expanded, and we process it again. If it's a function call with a (setf foo) function, then it expands to (funcall (fdefinition '(setf foo)) new-value elementary-place).  If it's a form that as a setf-expander (defsetf or define-setf-expander), then the setf-expander macro is called to get the setter and this is used the elementary-place being one of the store-var,
[00:14:54] <pjb> etc.  And finally if it's a special case, or implementation defined, then the special case is handled (eg. (setf (car k) a) --> (progn (rplaca k a) a) etc).
[00:15:43] <pjb> So (setf foo) is just one case amongst several, (and the generic function even more special a case).
[00:21:16] *** Quits: Josh_2 (~user@37.25.47.130) (Remote host closed the connection)
[00:22:18] <akater[m]> pjb: I mean, I don't see how you can define an `(setf accessor1)` method that ensures the `(accessor2 c)` place in `(setf (accessor1 a b (accessor2 c)) new)` gets setf'd whenever `(setf accessor1)` gets called.
[00:32:20] <Bike> you would have to use setf expanders instead of functions, i guess
[00:32:46] *** Quits: tyson2 (~user@toroon12-3096782677.sdsl.bell.ca) (Ping timeout: 252 seconds)
[00:37:24] <pjb> akater[m]: indeed.  Since it's not mutated> (accessor2 c) is only read and is only auxiliary to find the place defined by accessor1 and the passed values.
[00:38:22] <pjb> Bike: well, not even, because the setf-expander for accessor1 doesn't receive (accessor2 c). It receives a temporary variables where its value is stored.
[00:54:14] *** Quits: attila_lendvai (~alendvai@1F2EFC6D.nat.pool.telekom.hu) (Quit: Leaving)
[00:54:39] *** Joins: attila_lendvai (~alendvai@1F2EFC6D.nat.pool.telekom.hu)
[01:07:17] *** Joins: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f)
