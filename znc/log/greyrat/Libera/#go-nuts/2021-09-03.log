[00:00:52] *** Quits: dreistadt (sid501648@id-501648.tooting.irccloud.com) ()
[00:01:07] *** Joins: dreistadt (sid501648@id-501648.lymington.irccloud.com)
[00:08:45] <nullp0inter> Tried adding "replace bitbucket.org/myworkspace/myproject/controllers => ./controllers" to my go.mod file, again works fine locally, but not within the build on golang:1.15-alpine
[00:09:33] <nullp0inter> go.mod exists in the top level dir along with main.go
[00:15:29] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::100c)
[00:16:51] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[00:24:13] <nullp0inter> if i change my replace to point to "../controllers" i get this error "replacement directory ../controllers does not exist"
[00:24:19] <nullp0inter> just can't win
[00:32:31] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[00:34:49] *** Quits: jcajka (~jcajka@ip-86-49-242-38.net.upcbroadband.cz) (Quit: Leaving)
[00:36:38] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[00:37:36] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[00:37:58] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[00:38:44] *** Joins: fikran (~fikran@user/fikran)
[00:39:31] *** Quits: mei (~mei@user/mei) (Ping timeout: 252 seconds)
[00:50:51] *** Quits: independent__ (~independe@95.144.68.39) (Remote host closed the connection)
[00:51:10] *** Joins: independent__ (~independe@95.144.68.39)
[00:51:35] <someuser> hello
[00:51:38] <someuser> https://play.golang.org/p/1-VA5ITM0bZ
[00:52:16] <someuser> i am trying to understand why ok would print true in this case, why does ok return true ?
[00:52:51] *** Quits: independent__ (~independe@95.144.68.39) (Remote host closed the connection)
[00:52:53] <someuser> i know val implements the interface but shouldn't that type assertion statement test if the value holds a specific type
[00:52:57] *** Quits: svedrin (~quassel@tiamat.funzt-halt.net) (Quit: https://quassel-irc.org - Komfortabler Chat. Ãœberall.)
[00:53:00] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Ping timeout: 276 seconds)
[00:53:09] *** Joins: independent__ (~independe@95.144.68.39)
[00:53:18] *** Joins: svedrin (~quassel@tiamat.funzt-halt.net)
[00:53:39] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::100c) (Quit: ZNC 1.8.2 - https://znc.in)
[00:54:35] <bookworm> you are asking go to do a type assertion, that succeeds so you get the thing you asked for
[00:54:43] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[00:54:51] <bookworm> your underlying type does implement that interface and hence can be used as such
[00:55:24] *** Joins: k0ta (~k0ta@103.108.94.37)
[00:56:58] <bookworm> >If T is an interface type, x.(T) asserts that the dynamic type of x implements the interface T.
[00:57:43] <bookworm> https://golang.org/ref/spec#Type_assertions gives some more examples too
[00:59:18] <nullp0inter> Is there any reason the replace directive wouldn't be honored in a go install command? It keeps trying to fetch the remote non existant repository even though I do a replace to the local dir where the package is
[01:00:00] <nullp0inter> go: finding module for package bitbucket.org/myworkspace/myproj/controllers; main.go:8:2: no matching versions for query "latest"
[01:00:00] <nullp0inter> The command '/bin/sh -c go install -v' returned a non-zero code: 1
[01:00:30] <lauraaah> ðŸ¤¨
[01:00:39] <nullp0inter> this is in go.mod "replace bitbucket.org/myworkspace/myproj/controllers => ../myproj/controllers/"
[01:01:39] <bookworm> go install $module@latest? That ignores the local go.mod file
[01:02:04] <nullp0inter> bookworm, im only calling "go install -v" when building the docker image
[01:02:58] <nullp0inter> I import the controllers package as "bitbucket.org/myworkspace/myproj/controllers" in my main.go
[01:03:06] <nullp0inter> and it works a treat locally, no issues at all
[01:03:22] <nullp0inter> I did notice that it is not in the required section of the go.mod at all
[01:04:28] <nullp0inter> been fighting with this for a little over 3 hours now lol
[01:04:59] <ikke> does `go list all` list it?
[01:05:41] <nullp0inter> ikke, yep that does show it
[01:06:28] <b0nn> in you container, that replace is pointing to a directory that exists and contains the packages?
[01:07:18] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[01:07:32] <nullp0inter> b0nn, yes, the workdir is called "myproj"  and the replace looks for 'controllers' in "../myproj/controllers"
[01:08:23] <nullp0inter> ill verify it now though just in case
[01:08:26] *** Joins: flynn (~mcbloch@user/flynn)
[01:08:44] <ikke> what does ../myproj/go.mod contain?
[01:10:21] *** Quits: independent__ (~independe@95.144.68.39) (Remote host closed the connection)
[01:10:25] *** Joins: quippy (~quippy@47-220-146-143.gtwncmkt04.res.dyn.suddenlink.net)
[01:10:44] *** Joins: independent__ (~independe@95.144.68.39)
[01:11:02] <nullp0inter> b0nn, looks good on the output from the docker build, still getting main.go:8:2: no matching versions for query "latest" (line 8 contains the import for bitbucket.org/myworkspace/myproj/controllers)
[01:11:49] <nullp0inter> ikke, checking it now
[01:12:21] *** Quits: independent__ (~independe@95.144.68.39) (Remote host closed the connection)
[01:12:38] <someuser> ty bookworm
[01:12:40] *** Joins: independent__ (~independe@95.144.68.39)
[01:13:02] <nullp0inter> ikke, when i cat that location right before the go install happens, it shows my my exact go.mod file
[01:13:37] <ikke> what is the module name?
[01:13:52] <nullp0inter> of the main?
[01:14:06] <nullp0inter> the main mod is bitbucket.org/myworkspace/myproj
[01:14:17] <bookworm> only main's go.mod matters, all other replace directives of other modules are ignored, you do know that yes?
[01:14:31] <nullp0inter> i only have the one go.mod file
[01:14:41] <nullp0inter> in the same dir as the main.go
[01:14:54] <nullp0inter> bookworm, I never made the controllers its own module so I'm with ya
[01:16:14] <nullp0inter> running go 1.15 locally and in the base image if that helps
[01:17:24] <nullp0inter> the log just makes it seem like its trying to connect to the repo, i dont know if I can confirm that really
[01:18:01] *** Quits: userj (~userjjjj@user/userj) (Ping timeout: 252 seconds)
[01:18:02] <nullp0inter> go: finding module for package bitbucket.org/myworkspace/myproj/controllers
[01:18:16] <nullp0inter> it doesnt do that for any other imports
[01:18:41] *** Joins: Everything (~Everythin@128-124-169-247.mobile.vf-ua.net)
[01:19:46] *** Joins: Guest71 (~Guest71@adsl-72-50-5-53.prtc.net)
[01:22:05] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[01:22:35] <nullp0inter> From https://github.com/golang/go/wiki/Modules#when-should-i-use-the-replace-directive -> Note: if the right-hand side of a replace directive is a filesystem path, then the target must have a go.mod file at that location. If the go.mod file is not present, you can create one with go mod init.
[01:22:49] <nullp0inter> So do I need a go.mod inside the controllers dir? I can try it
[01:25:35] <nullp0inter> no change, same error
[01:30:28] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 256 seconds)
[01:32:55] <quippy> you only need one go.mod per project
[01:33:32] <quippy> I joined the channel late though so I'm not sure what your original problem was
[01:34:19] <quippy> is  bitbucket.org/myworkspace/myproj/controllers stored on bitbucket.org at that location or is it still local to your machine?
[01:34:59] <quippy> if it's stored there, `go mod tidy` will fetch it, but if it's on your local machine & it's not the project you're actively developing, you need a `replace` directive in the go.mod to point to the local copy
[01:36:08] <bookworm> rather than re stating everything, do you want the scrollback?
[01:42:58] <quippy> sure
[01:44:11] <nullp0inter> quippy, controllers is a local folder containing files all marked with package "controllers"
[01:44:55] <nullp0inter> quippy, I tried the replace, but I'm still getting the same error. I am tracking a potential issue with the Docker COPY command atm, but open to anything I could have missed
[01:45:13] <quippy> wait now there's a Docker container in play
[01:45:20] <quippy> are these directories both in the container?
[01:45:35] <quippy> also, what does your replace look like?
[01:46:20] <quippy> I'm assuming since you didn't COPY them in at first, that they weren't both in the container, which would cause the error above. If you've copied the directory into the container now, then the replace line is the next point of suspicion
[01:46:28] <nullp0inter> quippy, so everything works perfectly locally, but not in the image building process
[01:46:39] <quippy> oh, interesting
[01:47:02] <quippy> are you able to push the code to the bitbucket repo now that you're building a Docker image, and remove the replace line?
[01:47:24] <quippy> I only use the replace lines for local development, but during build, if it's possible to reference published code I generally think that's better
[01:47:27] <nullp0inter> quippy, the error I get in bitbucket from the job is main.go:8:2: no matching versions for query "latest" which points to the line of the import on "bitbucket.org/myworkspace/myproj/controllers" in my main.go
[01:47:53] <quippy> the error you get.. in bitbucket?
[01:48:01] <nullp0inter> quippy, So I wanted to just keep it as a local package to this repo, it's not really worthy of being its own module
[01:48:11] <nullp0inter> quippy, yes when the docker image build command runs
[01:48:27] <quippy> I'm confused, what do you mean "a local package for this repo"?
[01:48:31] <bookworm> quippy: http://ix.io/3xMI
[01:48:39] <quippy> if it's just a package inside the same project you're working on, you don't need anything in the go.mod
[01:48:40] <nullp0inter> I think I found something significant
[01:49:01] <nullp0inter> So on the COPY command, the controllers/ dir ends up containing none of my .go files
[01:49:19] <nullp0inter> o_O
[01:49:21] <quippy> probably some subtle behavior about the trailing slash in your COPY
[01:49:32] <quippy> COPY in Docker follows rsync syntax, which is subtle and confusion
[01:49:41] <quippy> **confusing
[01:49:57] <quippy> it's so confusing in fact that I won't repeat what it is because I'll surely get it wrong, and I encourage you to look at the actual docs xD
[01:50:12] <nullp0inter> im just doing a basic COPY . .
[01:50:20] <quippy> yeah but you're copying a whole directory
[01:50:27] <quippy> I'm not sure if COPY . . will do what you think
[01:50:30] <quippy> apparently it doesn't, actually!
[01:50:33] <quippy> or you'd have your files
[01:50:44] <quippy> and it could be that you actually want ADD; I can never remember the difference between COPY and ADD
[01:50:51] <nullp0inter> damn
[01:51:16] <quippy> I know I've been bit by this before with Docker, if it helps at all xD
[01:51:21] <nullp0inter> ok ill read more, appreciate the chat so far, first time im trying to use a dir structure in my project and i got wrecked
[01:51:29] <quippy> I remember reading the line about the rsync syntax and swearing at my computer xD
[01:52:59] *** Quits: quippy (~quippy@47-220-146-143.gtwncmkt04.res.dyn.suddenlink.net) (Quit: Leaving)
[01:58:50] *** Joins: djo (~djo@public-nat.it.pasteur.fr)
[01:59:22] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[02:00:23] *** Joins: flynn (~mcbloch@user/flynn)
[02:00:49] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:3861:b031:6b93:c510)
[02:02:05] *** Quits: cp- (~cp-@b157153.ppp.asahi-net.or.jp) (Read error: Connection reset by peer)
[02:02:50] *** Joins: ajfriesen (~ajfriesen@cable-89-1-117-98.nc.de)
[02:03:27] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:3861:b031:6b93:c510) (Ping timeout: 245 seconds)
[02:04:17] *** Quits: komish (~quassel@47-184-200-125.dlls.tx.frontiernet.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:06:49] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 244 seconds)
[02:08:13] *** Joins: mrig (~mrig@user/mrig)
[02:09:30] *** Quits: djo (~djo@public-nat.it.pasteur.fr) (Read error: Connection reset by peer)
[02:11:00] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:12:56] *** Joins: djo (~djo@public-nat.it.pasteur.fr)
[02:16:52] *** Quits: aead (~aead@user/aead) (Ping timeout: 252 seconds)
[02:17:05] <dostoyevsky2> hmmm... what kind of package is embed?
[02:18:38] *** Quits: theoceaniscool (~theoceani@119.12.232.133) (Ping timeout: 256 seconds)
[02:20:30] *** Quits: andlabs (~andlabs@70.107.171.168) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:21:13] *** Quits: chasmo77 (~chas77@71.63.241.168) (Quit: It's just that easy)
[02:21:26] *** Joins: chasmo77 (~chas77@71.63.241.168)
[02:21:29] <oliv3> hi, how good is the quality of the "rand" module ?
[02:21:46] <b0nn> dostoyevsky2: a good one?
[02:22:05] <b0nn> oliv3: you want the crypto/rand for secure random number generation
[02:22:09] <foobaz> oliv3: there are two of them, crypto/rand and math/rand
[02:22:17] <oliv3> math/rand
[02:22:20] <oliv3> https://i.imgur.com/aWcr3AM.jpg
[02:22:29] <oliv3> those bands tell nothing good
[02:22:44] <dostoyevsky2> b0nn: can one write a new package that reads // comments?  or is this something that only go can do internally?
[02:22:55] <dostoyevsky2> also: import _ "embed" ???
[02:23:07] *** Quits: Guest71 (~Guest71@adsl-72-50-5-53.prtc.net) (Ping timeout: 256 seconds)
[02:23:12] <foobaz> oliv3: i find it hard to believe math/rand is bad enough to cause such banding
[02:23:26] <oliv3> i'd think so also
[02:23:35] <oliv3> s/think/thought
[02:23:46] *** Joins: andlabs (~andlabs@70.107.171.168)
[02:23:49] <foobaz> so try crypto/rand, and when you still see banding, you'll know it's not the rng's fault
[02:23:59] <b0nn> dostoyevsky2: I honestly don't know
[02:24:16] <b0nn> There are packages in the standard library that read comments
[02:24:17] <foobaz> btw one gotcha with math/rand is you need to seed it if you want non-reproducible results
[02:24:26] <foobaz> but even without seeding, it shouldn't cause that banding
[02:24:33] <oliv3> it's seeded
[02:24:51] <eric_hill> without seeding it starts from 0 and is predictable.
[02:25:08] <dostoyevsky2> b0nn: hmmmm... and could one write a package that would be imported like `import _ "mypackage"' ?
[02:25:13] <foobaz> what kind of image processing are you working on? i have pored over my share of lena images too
[02:25:14] <eric_hill> crypto/rand doesn't suffer from the same limitation, but it's also a subtly different api
[02:25:21] <zsnes> oliv3: are ou developing something for/with image magick?
[02:25:29] <oliv3> nope
[02:25:40] <foobaz> for example https://github.com/foobaz/pngloss
[02:25:41] <zsnes> that image is used in imagemagick examples, so just curious
[02:25:45] <oliv3> that's a genetic algorithm which aims to reconstruct Lenna
[02:26:05] <oliv3> https://gitlab.com/oliv3/gapic
[02:26:46] <oliv3> zsnes: Lenna picture is a reference test image in image processing
[02:26:48] <foobaz> the lena image has been used in all kinds of image processing research for decades, it is a standard
[02:27:03] <oliv3> https://en.wikipedia.org/wiki/Lenna
[02:27:07] <zsnes> ah ok didn't know that, intersting
[02:27:10] <zsnes> interesting*
[02:29:42] <foobaz> oliv3: so is this like extreme image compression, you save the 100x100 image and reconstruct a high resolution image from that?
[02:30:31] <oliv3> no, 100x100 random => 100x100 target
[02:31:08] <dostoyevsky2> https://content.api.news/v3/images/bin/ebdada2e17c57017ac563d64b1677535
[02:32:36] <foobaz> what is the randomness for? is it so you can reproduce any image by only using low-pass filters?
[02:33:37] <foobaz> actually i suppose you would need band-pass/band-reject
[02:34:54] <oliv3> i have to leave for now, sorry
[02:35:05] <foobaz> ok good luck with your research
[02:35:49] <oliv3> check the project out, those bands appeared after commit 86254c64
[02:36:09] <oliv3> i can't see no reason why those changes broke stuff
[02:36:15] <nullp0inter> im so dumb, .dockerignore was causing my issues from earlier
[02:36:40] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 252 seconds)
[02:37:46] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[02:38:05] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[02:38:07] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[02:38:09] <oliv3> foobaz: http://51.255.206.33:58165/
[02:41:17] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 245 seconds)
[02:41:37] *** Quits: independent__ (~independe@95.144.68.39) (Ping timeout: 252 seconds)
[02:44:11] <dostoyevsky2> nullp0inter: I am much dumber than you are
[02:45:01] <nullp0inter> haha i spent 4 hours on this problem and it was because i had an old line in my dockerignore breaking the build
[02:45:12] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[02:45:40] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[02:46:05] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 244 seconds)
[02:47:46] *** Joins: mooff (~mooff@awful.cooking)
[02:48:06] *** Joins: fikran (~fikran@user/fikran)
[03:01:25] <b0nn> lol, you've fixed it now, so it's time to move on to the next bug that will screw with you for some time :)
[03:02:07] <nullp0inter> for sure there will be more
[03:02:13] <nullp0inter> xD
[03:02:50] *** Joins: independent__ (~independe@95.144.68.39)
[03:04:03] *** Joins: prologic (~prologic@mail.mills.io)
[03:04:48] *** Quits: andlabs (~andlabs@70.107.171.168) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:05:46] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[03:05:47] <prologic> So... That cray ass thing I've been trying to do; shoe-horn a SSH server <-> HTTP server <-> ReverseProxy <-> Docker Remote API via UNIX Socket; I know crazy right? Turns out I've hit a particularly interesting bug (or feature?) of Go's net/http package that relies on the behaviour of SetReadDeadline()
[03:05:57] <prologic> See https://git.mills.io/prologic/docker-proxy/issues/2
[03:06:01] *** Quits: independent__ (~independe@95.144.68.39) (Remote host closed the connection)
[03:06:06] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[03:06:20] <prologic> In particular I get stuck in a net/http.(*connReader).abortPendingRead(0xc00053ac60)
[03:06:25] *** Joins: independent__ (~independe@95.144.68.39)
[03:06:31] <prologic> from a net/http.(*conn).hijackLocked(0xc0003463c0, 0x0, 0xc0007e73b0, 0x1086c05, 0xa361bf0, 0xc0007e73c8)
[03:07:06] <prologic> I'm really not sure how to solve this ðŸ˜‚ I _feels_ like it should be possible to do what I'm doing, but ðŸ¤”
[03:08:06] *** Quits: lechner (~lechner@debian/lechner) (Ping timeout: 250 seconds)
[03:08:28] *** Joins: andlabs (~andlabs@70.107.171.168)
[03:10:09] *** Joins: lechner (~lechner@debian/lechner)
[03:10:45] <b0nn> prologic: I would recommend raising that on one of the mailing lists - even if it's for a clarification that your understanding is matching the Go devs thinking
[03:12:02] <prologic> Yeah that's the thing, I'm not even sure if what I'm doing is just completely insane
[03:12:21] *** Quits: bobwal (~rob@user/bobwal) (Quit: WeeChat 3.2)
[03:12:40] <prologic> I'm expecting to be able to effectively Hijack what I'm treating as io.ReadCloser/io.WriteCloser (s) from effectively en open ssh session handler
[03:13:28] <prologic> I even hacked github.com/gliderlabs/ssh a bit so I could get at the underlying net.Conn (really net.TCPConn) and actually make SetReadDeadline work but that leads to an premature close somewhere and a proxy: flush: EOF error
[03:14:13] <prologic> OTOH I don't think it's unreasonable to be able to connect these transports together and expect to be able to let the http+reverseproxy hijack the ssh connection?
[03:16:56] <foobaz> i agree, it looks like a bug in go
[03:17:23] <prologic> hmm interesting
[03:17:35] *** Joins: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net)
[03:17:35] <foobaz> fyi talking on irc will not make the go team aware of the bug and will not get it fixed
[03:17:42] <prologic> Shall I just try to get that referenced bug reopened then and re-looked at?
[03:17:54] <prologic> it's a bit of a special use-case, but one I think _should_ work
[03:18:00] <foobaz> why did they close it?
[03:18:12] <prologic> Good question lemme dig through it again
[03:18:18] <prologic> it wasn't a a very long discussion
[03:19:18] <foobaz> if i were you i'd create a new bug but include a link to the old one and mention it's similar
[03:19:18] <prologic> I _think_ they closed it on seeing this comment https://github.com/golang/go/issues/20963#issuecomment-318467349
[03:19:30] <prologic> which sounds basically identical to my problem
[03:19:40] <foobaz> because necrobumping is rude
[03:19:40] <prologic> *nods*
[03:19:49] <prologic> oh?
[03:20:53] <foobaz> i don't know about go in particular, just on the internet in general, it's considered poor etiquette to comment on years old threads
[03:22:19] *** Quits: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net) (Ping timeout: 252 seconds)
[03:22:47] *** Quits: Thinkofname (~thinkthin@37.205.12.211) (Ping timeout: 240 seconds)
[03:24:24] <dostoyevsky2> prologic: interesting proxy...
[03:25:47] <dostoyevsky2> Would it be easy to write web server in golang that has a ssh connection internally and will forward each request into the ssh connection via curl?  Sometimes ssh servers do not allow port forwarding...  I guess go would have ssh as a package
[03:26:36] <foobaz> yes
[03:27:14] *** Joins: hexfive (~eric@50.35.83.177)
[03:29:01] *** Quits: djo (~djo@public-nat.it.pasteur.fr) (Read error: Connection reset by peer)
[03:30:45] *** Quits: hexfive (~eric@50.35.83.177) (Client Quit)
[03:31:40] *** Quits: someuser (~user@41.239.243.83) (Ping timeout: 240 seconds)
[03:32:47] *** Quits: jsrnop (~mark@user/jsrnop) (Quit: The Lounge - https://thelounge.chat)
[03:33:15] *** Joins: jsrnop (~mark@user/jsrnop)
[03:33:31] *** Quits: independent__ (~independe@95.144.68.39) (Remote host closed the connection)
[03:33:49] *** Joins: independent__ (~independe@95.144.68.39)
[03:34:44] <dostoyevsky2> also I wanted to write a mitm-https-proxy that could remove unwanted content from websites before you see them... but I guess https makes this kind of proxy impossible
[03:34:50] *** Joins: gggp (~textual@60.10.194.45)
[03:36:11] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[03:36:37] <bpalmer> A typical way that is done is creating your own certificate for the proxy that is added to the browser's trusted certificates, so browser trusts the certificate the proxy presents.
[03:37:12] *** Joins: flynn (~mcbloch@user/flynn)
[03:37:23] <bpalmer> It puts a lot of responsibility on the proxy to faithfully validate the other end, though, and it's relatively easy to screw up and has significant security consequences, so...
[03:38:35] *** Quits: mnx|aw (~mnxaw@94.11.23.235) (Remote host closed the connection)
[03:38:53] <dostoyevsky2> bpalmer: yeah... I guess that kind of proxy would unpack the tls and then create a new tls payload which will then be shown in the browser... probably quite complex to do well... just thinking of e.g.: websockets
[03:42:25] *** Joins: Thinkofname (~thinkthin@2a01:430:17:1::ffff:1980)
[03:43:36] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[03:44:33] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[03:47:33] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[03:53:15] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 244 seconds)
[03:57:36] *** Joins: dozn_ (uid249292@id-249292.helmsley.irccloud.com)
[04:04:56] *** Quits: andlabs (~andlabs@70.107.171.168) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:05:07] *** Parts: dozn_ (uid249292@id-249292.helmsley.irccloud.com) ()
[04:06:01] *** Joins: dozn (uid249292@user/dozn)
[04:06:18] *** Quits: independent__ (~independe@95.144.68.39) (Ping timeout: 256 seconds)
[04:06:46] *** Joins: audstanley (~audstanle@ip68-5-49-177.oc.oc.cox.net)
[04:06:54] *** Joins: independent__ (~independe@95.144.68.39)
[04:07:18] *** Quits: audstanley (~audstanle@ip68-5-49-177.oc.oc.cox.net) (Read error: Connection reset by peer)
[04:08:04] *** Joins: andlabs (~andlabs@70.107.171.168)
[04:08:16] <dostoyevsky2> prologic: if one were to configure docker/dockerd to use/listen to a host:port then you could just use normal ssh port forwarding, no?
[04:10:01] <dostoyevsky2> > Warning: Changing the default docker daemon binding to a TCP port or Unix docker user group will increase your security risks by allowing non-root users to gain root access on the host.
[04:10:49] *** Quits: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de) (Ping timeout: 244 seconds)
[04:17:23] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[04:19:40] *** Quits: hikhvar796073809 (~thelounge@x4db5a501.dyn.telefonica.de) (Ping timeout: 240 seconds)
[04:19:59] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[04:21:01] *** Joins: flynn (~mcbloch@user/flynn)
[04:21:11] *** Quits: lauraaah (uid156848@id-156848.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[04:32:06] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3-dev)
[04:33:06] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:35:06] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[04:38:46] *** Quits: independent__ (~independe@95.144.68.39) (Ping timeout: 252 seconds)
[04:39:38] *** Joins: _Asgaroth_ (~Asgaroth@93.107.191.92)
[04:42:00] *** Quits: Asgaroth (~Asgaroth@93.107.191.92) (Ping timeout: 256 seconds)
[04:46:01] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:47:35] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:55:16] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[04:56:48] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[04:57:27] *** Joins: fikran (~fikran@user/fikran)
[05:02:30] <prologic> dostoyevsky2 no, becuase the Docker Remote API is a REST API
[05:02:43] <prologic> You have to speak to it via HTTP -- even to the UNIX socket
[05:04:11] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Remote host closed the connection)
[05:04:14] <rewt> port forwarding would forward the traffic directly, regardless of the protocol
[05:04:30] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[05:07:04] <prologic> port forwarding is not the point
[05:07:07] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[05:07:18] <prologic> I'm deliberately wanting to intercept the HTTP
[05:15:27] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Ping timeout: 240 seconds)
[05:19:32] *** Quits: k0ta (~k0ta@103.108.94.37) (Ping timeout: 244 seconds)
[05:28:12] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[05:29:03] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[05:38:01] *** Joins: k0ta (~k0ta@103.108.94.37)
[05:38:32] *** Quits: gggp (~textual@60.10.194.45) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[05:38:54] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[05:40:31] *** Joins: gggp (~textual@111.63.14.116)
[05:43:44] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[05:44:44] *** Joins: flynn (~mcbloch@user/flynn)
[05:45:32] *** Joins: neurocyte2 (~neurocyte@94.46.75.10)
[05:45:32] *** Quits: neurocyte2 (~neurocyte@94.46.75.10) (Changing host)
[05:45:32] *** Joins: neurocyte2 (~neurocyte@user/neurocyte)
[05:46:40] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Ping timeout: 240 seconds)
[05:47:31] *** Quits: neurocyte (~neurocyte@user/neurocyte) (Ping timeout: 252 seconds)
[05:47:31] *** neurocyte2 is now known as neurocyte
[05:48:52] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Remote host closed the connection)
[05:49:27] <prologic> foobaz b0nn any ideas as how to best title this bug report?
[05:49:29] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[05:49:50] <prologic> I've managed to also put together a small ~200 line reproducer too
[05:49:57] <prologic> can one of you verify the reproducer?
[05:50:37] *** Joins: frost (~frost@59.71.240.119)
[05:50:44] <foobaz> sure i can run it
[05:51:12] <prologic> https://gist.github.com/prologic/62dfb545e86aa1d066f8e7e1f3bf8de7
[05:52:15] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Remote host closed the connection)
[05:52:57] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::100c)
[05:56:12] <foobaz> what do i do after i run it? it's just sitting there
[05:56:22] *** Quits: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net) (Remote host closed the connection)
[05:56:44] *** Joins: purpleidea (~james@user/purpleidea)
[05:57:37] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Quit: 404)
[05:58:59] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[05:59:40] <foobaz> i can ssh to it and get "This is not a normal SSH server"
[06:00:52] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[06:04:50] <prologic> Oh sorry
[06:04:52] <prologic> Here
[06:04:53] <prologic> https://github.com/golang/go/issues/48167
[06:04:56] <prologic> instructions therein :)
[06:05:00] <prologic> I hope my bug report is clear
[06:05:18] <prologic> e.g:
[06:05:19] <prologic> $ DOCKER_HOST=ssh://localhost:2222 docker run -i --rm alpine echo Hello World
[06:05:25] <prologic> it will hang
[06:07:08] <foobaz> sorry but i don't have docker installed
[06:07:19] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 252 seconds)
[06:07:33] <foobaz> can you make a reproducer that works with just curl, or even better, one that crashes with no user input?
[06:08:25] <prologic> Umm that's a bit harder
[06:08:29] <prologic> But doable
[06:08:52] <prologic> I'd have to write a fake "docker client" sample that expects an upgraded tcp stream, etc
[06:09:12] <prologic> If this becomes necessary for the bug report I'll write one, but I'm a bit tired now :)
[06:09:21] <prologic> have spent many sleepless nights over this
[06:09:28] *** Joins: TUSF (~TUSF@71-147-0-117.lightspeed.hstntx.sbcglobal.net)
[06:10:57] *** Joins: kiril (~kiril@85.91.153.163)
[06:12:16] <prologic> in fact I'd have to writ eboth sides of this fo ryou :
[06:12:57] <prologic> But if you can find a web socket server that can bind to a unix socket and a web socket client that can proxy over an ssh stream then you can probably reproduce this :)
[06:13:17] *** Quits: andlabs (~andlabs@70.107.171.168) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:13:18] <prologic> no so insane an idea when you replace "docker" with "websockets"
[06:13:45] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::100c) (Quit: ZNC 1.8.2 - https://znc.in)
[06:14:55] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[06:16:43] *** Joins: andlabs (~andlabs@70.107.171.168)
[06:18:54] *** Quits: flynn (~mcbloch@user/flynn) (Ping timeout: 256 seconds)
[06:21:31] *** Joins: oxum (~oxum@106.203.195.217)
[06:23:30] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[06:24:01] *** Quits: c10l (~c10l@89.34.167.207) (Quit: The Lounge - https://thelounge.chat)
[06:24:42] *** Joins: oxum (~oxum@106.203.195.217)
[06:26:08] *** Joins: cation21 (cation@user/cation)
[06:27:07] *** Quits: cation (cation@user/cation) (Ping timeout: 252 seconds)
[06:27:08] *** Joins: flynn (~mcbloch@user/flynn)
[06:29:36] *** cation21 is now known as cation
[06:29:40] *** Quits: nullp0inter (~nullp0int@64.67.40.244.res-cmts.sell.ptd.net) (Ping timeout: 240 seconds)
[06:31:21] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[06:31:36] *** Joins: oxum (~oxum@106.203.195.217)
[06:33:10] *** Quits: Everything (~Everythin@128-124-169-247.mobile.vf-ua.net) (Ping timeout: 240 seconds)
[06:33:35] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[06:35:13] *** Joins: c10l (~c10l@89.34.167.207)
[06:37:51] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[06:38:13] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[06:38:44] *** Quits: gggp (~textual@111.63.14.116) (Ping timeout: 256 seconds)
[06:40:10] *** Joins: oxum (~oxum@106.203.195.217)
[06:41:04] *** Joins: gggp (~textual@60.10.194.45)
[06:44:16] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[07:01:04] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[07:01:46] *** Joins: thing (~thing@user/thing)
[07:03:54] <prologic> my bug report was closed ðŸ˜¢
[07:05:02] <prologic> As per my comment/retort, I'm not really sure what to do now, because hacking my way around github.com/gliderlabs/ssh just to get at the underlying net.Conn/net/TCPConn and implement SetReadDeadline actually results in errors further on in the net/http parts that don't work - but really should.
[07:05:04] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[07:05:09] *** Quits: cation (cation@user/cation) (Remote host closed the connection)
[07:06:49] *** Joins: fikran (~fikran@user/fikran)
[07:08:02] *** Quits: gggp (~textual@60.10.194.45) (Ping timeout: 244 seconds)
[07:08:15] *** Joins: cation (cation@user/cation)
[07:14:02] *** Joins: gggp (~textual@111.63.14.116)
[07:15:19] *** Joins: arcatech (~arcatech@user/arcatech)
[07:17:38] *** Joins: yellowflash (~I512663@49.36.46.238)
[07:19:08] *** Joins: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net)
[07:24:19] *** Quits: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net) (Ping timeout: 252 seconds)
[07:24:34] <yellowflash> There's a statement in https://talks.golang.org/2012/splash.article#TOC_14. -
[07:24:35] <yellowflash> > type X struct {
[07:24:37] <yellowflash> >     a, b, c int
[07:24:39] <yellowflash> >     buf [256]byte
[07:24:41] <yellowflash> > }
[07:24:43] <yellowflash> > In Java, the buf field would require a second allocation and accesses to it a
[07:24:45] <yellowflash> > second level of indirection. In Go, however, the buffer is allocated in a
[07:24:47] <yellowflash> > single block of memory along with the containing struct and no indirection is
[07:24:49] <yellowflash> > required.
[07:24:51] <yellowflash> How is the term "indirection" interpreted here ? I believe the way to access
[07:24:53] <yellowflash> the first element of buf would be x.buf[0], but how is this indirection
[07:24:55] <yellowflash> compared in the two languages ?
[07:25:59] <prologic> mate Java has these siller things called getts and setters
[07:26:02] <prologic> that's your "indirection"
[07:26:07] <fizzie> It's not about that.
[07:26:10] <KirkMcDonald> yellowflash: This is talking about implementation, not language syntax.
[07:26:11] <prologic> Also Java is terrible with memory management
[07:26:18] <fizzie> Presumably it's talking about how in Java, a `byte[]` field of an object is essentially a pointer to a different object, and you need to follow that pointer (do "indirection") to get at the bytes.
[07:26:50] <KirkMcDonald> yellowflash: So the way you access the field is the same, but the *meaning* of the field is different.
[07:26:56] <prologic> isn't everything an object in java?
[07:27:18] <fizzie> Primitive types aren't.
[07:27:24] *** Joins: audstanley (~audstanle@ip68-5-49-177.oc.oc.cox.net)
[07:28:19] *** Quits: audstanley (~audstanle@ip68-5-49-177.oc.oc.cox.net) (Read error: Connection reset by peer)
[07:28:29] *** Parts: prologic (~prologic@mail.mills.io) (Textual IRC Client: www.textualapp.com)
[07:29:31] <fizzie> I think Java's supposed to be getting "value types" any time now though? (Cf. "Project Valhalla".) That might make the comment obsolete.
[07:31:56] *** Quits: neurocyte (~neurocyte@user/neurocyte) (Quit: Ping timeout (120 seconds))
[07:32:08] *** Joins: neurocyte (~neurocyte@94.46.75.10)
[07:32:08] *** Quits: neurocyte (~neurocyte@94.46.75.10) (Changing host)
[07:32:08] *** Joins: neurocyte (~neurocyte@user/neurocyte)
[07:32:18] *** Joins: aerona (~aerona@2600:6c54:4600:f300:5098:ea7e:8fa8:e9c)
[07:32:27] <yellowflash> thanks fizzie for the clarification
[07:34:36] *** Quits: gggp (~textual@111.63.14.116) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[07:35:19] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[07:35:23] *** Joins: aead (~aead@user/aead)
[07:36:27] *** Joins: flynn (~mcbloch@user/flynn)
[07:38:48] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[07:39:26] *** Joins: oxum (~oxum@106.203.195.217)
[07:47:36] *** Quits: TUSF (~TUSF@71-147-0-117.lightspeed.hstntx.sbcglobal.net) (Quit: Leaving)
[07:51:37] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[07:52:41] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[07:59:27] *** Quits: yellowflash (~I512663@49.36.46.238) (Quit: WeeChat 3.2)
[08:08:27] *** Joins: BUSY (~BUSY@user/busy)
[08:56:10] *** Quits: k0ta (~k0ta@103.108.94.37) (Ping timeout: 252 seconds)
[08:56:43] *** Quits: LiftLeft (~LiftLeft@172.83.47.138) (Ping timeout: 252 seconds)
[08:57:25] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[08:58:25] *** Joins: flynn (~mcbloch@user/flynn)
[09:09:01] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[09:12:15] *** Joins: k0ta (~k0ta@103.108.94.37)
[09:12:50] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[09:14:06] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 244 seconds)
[09:14:36] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Quit: 404)
[09:16:11] *** Joins: fikran (~fikran@user/fikran)
[09:16:15] *** Joins: sevenever (~seven@101.224.148.180)
[09:17:37] *** Quits: sevenever (~seven@101.224.148.180) (Client Quit)
[09:17:49] *** Joins: LiftLeft (~LiftLeft@172.83.47.37)
[09:19:32] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[09:21:26] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Read error: Connection reset by peer)
[09:22:35] *** Joins: jpw (~jpw@user/jpw)
[09:24:10] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Client Quit)
[09:30:49] *** Quits: LiftLeft (~LiftLeft@172.83.47.37) (Ping timeout: 252 seconds)
[09:33:25] *** Quits: nostalgia (~nostalgia@c-24-13-122-176.hsd1.in.comcast.net) (Remote host closed the connection)
[09:35:41] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[09:35:53] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[09:50:44] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Quit: 404)
[09:52:15] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[09:58:56] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[10:02:08] *** Joins: oxum (~oxum@106.203.195.217)
[10:06:09] *** Joins: mei (~mei@user/mei)
[10:07:07] *** Quits: oxum (~oxum@106.203.195.217) (Ping timeout: 252 seconds)
[10:07:26] *** Joins: oxum (~oxum@106.203.195.217)
[10:07:36] <alrs> n
[10:08:07] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:09:19] *** Quits: normen (~normen@p200300d7173dc900b8929ae8bdda1e2d.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[10:24:27] *** Joins: monoxane (~monoxane@119-18-17-227.771211.mel.static.aussiebb.net)
[10:30:46] *** Quits: jespada (~jespada@90.254.245.194) (Ping timeout: 252 seconds)
[10:35:36] *** Joins: jespada (~jespada@90.254.245.194)
[10:37:36] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[10:37:54] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[10:38:22] *** Joins: theoceaniscool (~theoceani@119.12.232.133)
[10:38:43] *** Joins: jcajka (~jcajka@ip-86-49-242-38.net.upcbroadband.cz)
[10:47:41] *** Joins: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de)
[10:51:42] *** Joins: normen (~normen@p54b3452e.dip0.t-ipconnect.de)
[10:58:10] *** Quits: jcajka (~jcajka@ip-86-49-242-38.net.upcbroadband.cz) (Ping timeout: 240 seconds)
[10:58:14] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[10:58:15] *** Joins: userj (~userjjjj@user/userj)
[10:58:54] *** Joins: absc (~absc@dynamic-adsl-94-34-168-146.clienti.tiscali.it)
[10:58:59] *** Quits: normen (~normen@p54b3452e.dip0.t-ipconnect.de) (Ping timeout: 244 seconds)
[10:59:41] *** Joins: jcajka (~jcajka@ip-86-49-242-38.net.upcbroadband.cz)
[11:03:56] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[11:09:24] *** Joins: cskr (~cskr@49.207.194.98)
[11:10:22] *** Quits: cskr (~cskr@49.207.194.98) (Client Quit)
[11:10:42] *** Joins: cskr (~cskr@49.207.194.98)
[11:16:39] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Quit: A lol made me boom.)
[11:17:59] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[11:19:58] *** Joins: saschagrunert (~saschagru@46.128.124.46)
[11:20:14] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[11:20:55] *** Joins: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net)
[11:23:05] *** Quits: aerona (~aerona@2600:6c54:4600:f300:5098:ea7e:8fa8:e9c) (Quit: Leaving)
[11:23:46] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[11:25:32] *** Joins: fikran (~fikran@user/fikran)
[11:25:46] *** Quits: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net) (Ping timeout: 252 seconds)
[11:35:27] *** Joins: normen (~normen@p200300d7173dc900b8929ae8bdda1e2d.dip0.t-ipconnect.de)
[11:44:03] *** Joins: Ergo^ (~ergo@91.238.59.144)
[11:44:42] *** Joins: prologic (~prologic@mail.mills.io)
[11:45:14] <prologic> Any ideas on how to get a bit more of a serious look into https://github.com/golang/go/issues/48167#issuecomment-912206250 ? ðŸ¤”
[11:50:40] *** Joins: shka (~herr@109.231.62.239)
[11:54:28] *** Joins: mrig (~mrig@user/mrig)
[11:58:02] <b0nn> He should not have closed the issue (IMO)
[11:59:08] <b0nn> His complaint was that you had stubs (which is fair) but he should have given you a chance to respond
[11:59:15] <b0nn> I would open another issue
[12:02:29] *** Joins: ppang (~ppang@user/ppang)
[12:07:10] *** Quits: cskr (~cskr@49.207.194.98) (Ping timeout: 240 seconds)
[12:07:12] *** Joins: Thedarkb1-Work (~Thedarkb@62.232.253.82)
[12:07:29] *** Joins: djo (~djo@91-173-41-2.subs.proxad.net)
[12:09:01] *** Quits: andlabs (~andlabs@70.107.171.168) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[12:11:08] *** Quits: frost (~frost@59.71.240.119) (Quit: Connection closed)
[12:11:50] *** Quits: Thedarkb-Work (~Thedarkb@62.232.253.82) (Ping timeout: 244 seconds)
[12:11:58] *** Joins: cskr (~cskr@49.207.194.98)
[12:14:44] *** Quits: haliucinas (~haliucina@5.20.153.21) (Remote host closed the connection)
[12:20:34] *** Joins: haliucinas (~haliucina@5.20.153.21)
[12:30:26] *** Joins: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net)
[12:33:50] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[12:35:04] *** Quits: normen (~normen@p200300d7173dc900b8929ae8bdda1e2d.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[12:35:25] *** Joins: elgraz (~elgraz@151.65.9.160)
[12:37:39] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[12:38:03] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[12:41:41] *** Quits: bertiger_ (~bertiger@user/bertiger) (Quit: -)
[12:41:51] <prologic> hmm
[12:42:01] *** Joins: bertiger (~bertiger@user/bertiger)
[12:42:55] <prologic> I guess I'll go the extra mile now and build a standalone reproducer (without docker involved)
[12:42:59] *** Quits: jjakob (~quassel@2a01:260:8028:10f0::62) (Remote host closed the connection)
[12:43:17] <prologic> maybe a simple websocket server/client that just spits out "Hello World" would be enough actually
[12:43:34] *** Quits: Snorlax (~Snorlax@2a03:b0c0:2:f0::363:a001) (Ping timeout: 272 seconds)
[12:43:58] *** Joins: Snorlax (~Snorlax@2a03:b0c0:2:f0::363:a001)
[12:44:15] *** Joins: jjakob (~quassel@2a01:260:8028:10f0::62)
[12:44:32] <prologic> tbh I'm not even sure how to implement SetReadLine and friends on what is effectively an io.ReadCloser and io.WriteCloser? Do I should wrap some read/write loops in some goroutines and do some channel dances with some deadline mutexes?
[12:46:02] *** Joins: oxum (~oxum@106.203.195.217)
[12:49:54] *** Quits: mkbloke (~mkbloke@vps.cammo.me.uk) (Ping timeout: 256 seconds)
[12:49:59] *** Quits: psydroid (~psydroid@user/psydroid) (Ping timeout: 252 seconds)
[12:50:04] *** Quits: hamoko (~hamoko@2001:470:69fc:105::e218) (Ping timeout: 250 seconds)
[12:51:40] *** Joins: mkbloke (~mkbloke@vps.cammo.me.uk)
[12:52:12] *** Quits: getz[m] (~getz@2001:470:69fc:105::c85e) (Ping timeout: 245 seconds)
[12:52:44] *** Quits: securethemews (~securethe@2001:470:69fc:105::9b6d) (Ping timeout: 252 seconds)
[12:52:44] *** Quits: AshLeece[m] (~ashleecei@2001:470:69fc:105::c987) (Ping timeout: 256 seconds)
[12:55:08] *** Joins: hamoko (~hamoko@2001:470:69fc:105::e218)
[12:58:20] *** Joins: getz[m] (~getz@2001:470:69fc:105::c85e)
[12:59:56] *** Joins: psydroid (~psydroid@user/psydroid)
[13:00:40] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[13:01:16] *** Joins: oxum (~oxum@106.203.195.217)
[13:04:17] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[13:05:15] *** Joins: securethemews (~securethe@2001:470:69fc:105::9b6d)
[13:05:29] *** Joins: AshLeece[m] (~ashleecei@2001:470:69fc:105::c987)
[13:06:26] *** Quits: bkircher (~bkircher@2001:a61:245a:8201:c518:484f:1750:7247) (Quit: WeeChat 3.2)
[13:12:02] *** Joins: Walter_S (~WalterS@85.186.96.126)
[13:12:36] *** Quits: cskr (~cskr@49.207.194.98) (Quit: Leaving)
[13:13:41] *** Quits: bw (sid2730@user/betawaffle) ()
[13:13:56] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[13:14:00] *** Joins: bw (sid2730@user/betawaffle)
[13:14:11] *** Joins: lalitmee (~lalitmee@2402:3a80:8e8:f12f:4e99:6ae8:5afb:e8c6)
[13:14:19] *** Joins: oxum (~oxum@106.203.195.217)
[13:21:04] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 244 seconds)
[13:23:14] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[13:24:30] *** Joins: oxum (~oxum@106.203.195.217)
[13:28:08] *** Joins: fanis30 (~anon@adsl-67.37.6.2.tellas.gr)
[13:29:53] *** Joins: bkircher (~bkircher@2001:a61:245a:8201:c518:484f:1750:7247)
[13:30:45] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[13:31:47] *** Joins: flynn (~mcbloch@user/flynn)
[13:32:49] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[13:34:53] *** Joins: fikran (~fikran@user/fikran)
[13:34:57] *** Quits: userj (~userjjjj@user/userj) (Remote host closed the connection)
[13:35:23] *** Joins: gggp (~textual@111.63.14.116)
[13:36:40] *** Quits: zwr (~zwr@2804:d45:b966:fb00:9d50:5f1e:87a4:6ad6) (Ping timeout: 252 seconds)
[13:37:13] *** Joins: zwr (~zwr@2804:d45:b966:fb00:9e3f:83ef:ad29:6370)
[13:40:58] *** Joins: frost (~frost@59.71.240.119)
[13:45:59] *** Quits: lalitmee (~lalitmee@2402:3a80:8e8:f12f:4e99:6ae8:5afb:e8c6) (Remote host closed the connection)
[13:46:18] *** Joins: lalitmee (~lalitmee@2402:3a80:8e8:f12f:4e99:6ae8:5afb:e8c6)
[13:48:04] *** Quits: lalitmee (~lalitmee@2402:3a80:8e8:f12f:4e99:6ae8:5afb:e8c6) (Max SendQ exceeded)
[13:48:37] *** Joins: lalitmee (~lalitmee@2402:3a80:8e8:f12f:4e99:6ae8:5afb:e8c6)
[13:48:57] *** Quits: bkircher (~bkircher@2001:a61:245a:8201:c518:484f:1750:7247) (Quit: WeeChat 3.2)
[13:49:07] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[13:50:21] *** Quits: lalitmee (~lalitmee@2402:3a80:8e8:f12f:4e99:6ae8:5afb:e8c6) (Max SendQ exceeded)
[13:50:43] *** Parts: livingsilver94 (~livingsil@user/livingsilver94) (Konversation terminated!)
[13:50:56] *** Joins: bkircher (~bkircher@2001:a61:245a:8201:c518:484f:1750:7247)
[14:00:44] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[14:05:25] *** Joins: iateadonut (~dan@121.177.17.154)
[14:05:27] *** Quits: dngray[m] (~dngray@user/dngray) (Ping timeout: 245 seconds)
[14:05:27] *** Quits: zaibon[m] (~zaibonsyn@2001:470:69fc:105::1019) (Ping timeout: 245 seconds)
[14:05:28] *** Joins: oxum (~oxum@106.203.195.217)
[14:05:29] *** Parts: iateadonut (~dan@121.177.17.154) ()
[14:05:41] *** Joins: iateadonut (~dan@121.177.17.154)
[14:06:24] *** Quits: gggp (~textual@111.63.14.116) (Ping timeout: 256 seconds)
[14:08:48] *** Joins: zaibon[m] (~zaibonsyn@2001:470:69fc:105::1019)
[14:09:45] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[14:10:32] *** Joins: dngray[m] (~dngray@user/dngray)
[14:10:38] *** Joins: independent__ (~independe@95.144.68.39)
[14:18:56] *** Joins: oxum (~oxum@106.203.195.217)
[14:20:11] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[14:21:13] *** Joins: flynn (~mcbloch@user/flynn)
[14:21:42] *** Quits: spudly[m] (~spudly@2001:470:69fc:105::18) (Ping timeout: 245 seconds)
[14:21:58] *** Joins: spudly[m] (~spudly@2001:470:69fc:105::18)
[14:23:06] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[14:23:21] *** Joins: oxum (~oxum@106.203.195.217)
[14:24:31] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[14:25:52] <nevivurn> If the underlying Read([]byte) is blocking, there is no way to implement things SetDeadline correctly without leaking goroutines, I think.
[14:26:19] *** Quits: independent__ (~independe@95.144.68.39) (Remote host closed the connection)
[14:26:38] *** Joins: independent__ (~independe@95.144.68.39)
[14:28:43] *** Quits: fanis30 (~anon@adsl-67.37.6.2.tellas.gr) (Quit: WeeChat 3.2)
[14:30:18] *** Quits: k0ta (~k0ta@103.108.94.37) (Ping timeout: 244 seconds)
[14:31:27] <A_Dragon> IIRC yeah, because you can't stop the goroutine from outside. eventually the read will likely timeout on its own for whatever internal thing
[14:32:41] *** Joins: normen (~normen@p54b3452e.dip0.t-ipconnect.de)
[14:33:10] <sztanpet> you can hack around it by a coordinating with a separate goroutine handling a timer and if the timer runs out, closing the connection/file, that will unblock the read
[14:33:37] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[14:33:47] <nevivurn> If the underlying reader is a network connection, you could just use its SetDeadline()
[14:34:26] <sztanpet> the proper solution is ReadContext probably if cancelation is the point
[14:34:46] *** Joins: flynn (~mcbloch@user/flynn)
[14:37:40] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[14:38:08] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[14:41:54] *** Joins: toretto_ (~ryan@45.15.18.18)
[14:42:34] <nevivurn> I read the issue a bit more slowly this time, if your goal is to demonstrate a bug in net/http, for the purpose of testing, yeah you could hack something up with cancellation and Read()s that poll in a loop to satisfy the interface required for net.Conn.
[14:43:32] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[14:44:04] <nevivurn> Unless you actually satisfy the interfaces as required by the library, it's going to be difficult to get people to take your bug report seriously.
[14:44:07] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[14:44:25] *** Quits: toretto (~ryan@user/toretto) (Ping timeout: 248 seconds)
[14:44:40] *** Joins: oxum (~oxum@106.203.195.217)
[14:45:07] *** Joins: flynn (~mcbloch@user/flynn)
[14:49:55] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[14:52:32] *** Joins: oxum (~oxum@106.203.195.217)
[14:54:40] *** Quits: flynn (~mcbloch@user/flynn) (Ping timeout: 240 seconds)
[14:59:14] *** Joins: flynn (~mcbloch@user/flynn)
[15:01:10] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[15:01:33] *** Quits: theckman (sid295081@user/theckman) ()
[15:01:48] *** Joins: theckman (sid295081@user/theckman)
[15:04:40] *** Quits: normen (~normen@p54b3452e.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[15:06:49] *** Quits: independent__ (~independe@95.144.68.39) (Remote host closed the connection)
[15:07:07] *** Joins: independent__ (~independe@95.144.68.39)
[15:08:00] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[15:09:01] *** Joins: flynn (~mcbloch@user/flynn)
[15:13:45] *** Joins: oxum (~oxum@106.203.195.217)
[15:14:55] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[15:15:17] *** Joins: Atque (~Atque@user/atque)
[15:18:02] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[15:19:02] *** Joins: flynn (~mcbloch@user/flynn)
[15:21:43] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Ping timeout: 252 seconds)
[15:22:41] *** Joins: oxum (~oxum@106.203.195.217)
[15:23:00] *** Quits: djo (~djo@91-173-41-2.subs.proxad.net) (Ping timeout: 244 seconds)
[15:23:38] *** Quits: monchi (sid347418@id-347418.charlton.irccloud.com) ()
[15:23:48] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[15:23:53] *** Joins: monchi (sid347418@id-347418.ilkley.irccloud.com)
[15:24:09] *** Joins: mickey (~user@user/mickey)
[15:24:28] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[15:25:38] *** Joins: andlabs (~andlabs@70.107.171.168)
[15:26:55] *** Joins: eduardas (~eduardas@93.93.57.5)
[15:27:04] *** Joins: gggp (~textual@60.10.194.45)
[15:30:11] *** Quits: itok (sid418430@2001:67c:2f08:3::6:627e) ()
[15:30:27] *** Joins: itok (sid418430@id-418430.ilkley.irccloud.com)
[15:31:58] *** Joins: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net)
[15:32:15] *** Quits: hhes (sid420846@charlton.irccloud.com) ()
[15:32:30] *** Joins: hhes (sid420846@id-420846.ilkley.irccloud.com)
[15:33:20] *** Quits: gggp (~textual@60.10.194.45) (Ping timeout: 244 seconds)
[15:35:24] *** Quits: realies (~realies@user/realies) (Ping timeout: 244 seconds)
[15:35:49] *** Joins: lauraaah (uid156848@id-156848.charlton.irccloud.com)
[15:36:30] *** Joins: oxum (~oxum@106.203.195.217)
[15:37:15] *** Quits: independent__ (~independe@95.144.68.39) (Remote host closed the connection)
[15:37:44] *** Joins: independent__ (~independe@95.144.68.39)
[15:41:10] *** Quits: oxum (~oxum@106.203.195.217) (Ping timeout: 240 seconds)
[15:42:12] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[15:42:45] *** Quits: redlegion (sid429547@id-429547.charlton.irccloud.com) ()
[15:43:00] *** Joins: redlegion (sid429547@id-429547.ilkley.irccloud.com)
[15:43:34] *** Joins: normen (~normen@p54b3452e.dip0.t-ipconnect.de)
[15:44:13] *** Joins: realies (~realies@user/realies)
[15:44:14] *** Joins: fikran (~fikran@user/fikran)
[15:44:51] *** Quits: independent__ (~independe@95.144.68.39) (Remote host closed the connection)
[15:45:09] *** Joins: independent__ (~independe@95.144.68.39)
[15:47:48] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 244 seconds)
[15:52:41] *** A_Dragon is now known as DergServ
[15:52:51] *** DergServ is now known as A_Dragon
[15:53:11] *** Joins: oxum (~oxum@106.203.195.217)
[15:54:44] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[15:55:19] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[15:55:45] *** Joins: flynn (~mcbloch@user/flynn)
[15:56:27] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[15:58:01] *** Quits: elgraz (~elgraz@151.65.9.160) (Ping timeout: 252 seconds)
[15:58:06] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[15:59:02] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[16:00:38] *** Joins: oxum (~oxum@106.203.195.217)
[16:01:16] *** Joins: mickey (~user@user/mickey)
[16:07:25] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[16:08:53] *** Joins: oxum (~oxum@106.203.195.217)
[16:11:18] *** Joins: elgraz (~elgraz@151.65.9.160)
[16:15:09] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[16:18:30] *** Joins: vptr (~vptr@user/vptr)
[16:18:53] *** Quits: psb (sid500598@user/psb) ()
[16:19:09] *** Joins: psb (sid500598@user/psb)
[16:23:17] *** Quits: avakand (~root@static.164.226.201.195.clients.your-server.de) (Quit: WeeChat 3.2)
[16:23:20] *** Quits: recursion (sid504862@user/recursion) ()
[16:23:33] *** Joins: recursion (sid504862@id-504862.ilkley.irccloud.com)
[16:24:27] *** Quits: ppang (~ppang@user/ppang) (Quit: Leaving)
[16:26:17] *** Quits: recursion (sid504862@id-504862.ilkley.irccloud.com) (Changing host)
[16:26:17] *** Joins: recursion (sid504862@user/recursion)
[16:27:50] *** Joins: yoonkn (~user@175.197.208.79)
[16:30:49] *** Joins: oxum (~oxum@106.203.195.217)
[16:31:12] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[16:31:32] *** Joins: mickey (~user@user/mickey)
[16:33:01] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[16:33:14] *** Joins: oxum (~oxum@106.203.195.217)
[16:35:40] *** Joins: CoolerX (~CoolerX@user/coolerx)
[16:36:21] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[16:36:55] *** Joins: oxum (~oxum@106.203.195.217)
[16:38:02] *** Quits: realies (~realies@user/realies) (Ping timeout: 245 seconds)
[16:40:05] *** Joins: gggp (~textual@60.10.194.45)
[16:40:40] *** Quits: gggp (~textual@60.10.194.45) (Client Quit)
[16:40:57] *** Joins: realies (~realies@user/realies)
[16:41:31] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[16:43:15] *** Quits: saschagrunert (~saschagru@46.128.124.46) (Remote host closed the connection)
[16:45:26] *** Joins: djo (~djo@91-173-41-2.subs.proxad.net)
[16:45:43] *** Quits: witchuer (uid515958@id-515958.charlton.irccloud.com) ()
[16:45:57] *** Joins: witchuer (uid515958@id-515958.ilkley.irccloud.com)
[16:48:49] *** Joins: LiftLeft (~LiftLeft@172.98.92.15)
[16:57:14] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[16:57:52] *** Quits: lauraaah (uid156848@id-156848.charlton.irccloud.com) ()
[16:58:07] *** Joins: lauraaah (uid156848@id-156848.ilkley.irccloud.com)
[17:00:38] *** Joins: Torr (~Torr@user/torr)
[17:01:17] *** Quits: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[17:05:13] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[17:05:32] *** Joins: oxum (~oxum@106.203.195.217)
[17:05:47] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[17:06:47] *** Joins: flynn (~mcbloch@user/flynn)
[17:07:55] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[17:08:40] *** Joins: oxum (~oxum@106.203.195.217)
[17:12:33] *** Joins: djo_ (~djo@public-nat.it.pasteur.fr)
[17:13:55] *** Joins: juvenalmuniz (~Juvenal@189-74-58-125.user3p.brasiltelecom.net.br)
[17:15:40] *** Quits: djo (~djo@91-173-41-2.subs.proxad.net) (Ping timeout: 256 seconds)
[17:20:51] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[17:21:44] *** Joins: Eisenaxt (~Eisenaxt@2001:8d8:1ff:c000:ac3b:277e:b475:9b6)
[17:23:57] *** Joins: oxum (~oxum@106.203.195.217)
[17:29:55] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[17:30:25] *** Joins: oxum (~oxum@106.203.195.217)
[17:35:47] *** Quits: CoolerX (~CoolerX@user/coolerx) (Remote host closed the connection)
[17:36:11] *** Joins: CoolerX (~CoolerX@user/coolerx)
[17:39:50] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[17:40:05] *** Joins: oxum (~oxum@106.203.195.217)
[17:41:20] *** Quits: vptr (~vptr@user/vptr) (Remote host closed the connection)
[17:45:14] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[17:46:04] *** Joins: oxum (~oxum@106.203.195.217)
[17:49:30] *** Joins: gggp (~textual@60.10.194.45)
[17:51:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 244 seconds)
[17:53:36] *** Joins: fikran (~fikran@user/fikran)
[17:54:13] *** Quits: gggp (~textual@60.10.194.45) (Client Quit)
[17:55:10] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[17:55:16] *** Quits: faceonkeyboard (~faceonkey@2a01:4f8:251:1c2f::2) (Remote host closed the connection)
[17:55:26] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[17:55:43] *** Quits: djo_ (~djo@public-nat.it.pasteur.fr) (Read error: Connection reset by peer)
[17:57:20] *** Joins: faceonkeyboard (~faceonkey@anquietas.harting.hosting)
[18:10:17] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:11:24] *** Quits: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net) (Remote host closed the connection)
[18:17:29] *** Joins: gggp (~gggp@111-251-157-238.dynamic-ip.hinet.net)
[18:18:03] *** Joins: saschagrunert (~saschagru@46.128.124.46)
[18:23:37] *** Quits: andlabs (~andlabs@70.107.171.168) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[18:24:01] *** Joins: yangby (~secret@115.199.101.158)
[18:26:26] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[18:26:58] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Remote host closed the connection)
[18:28:37] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[18:29:06] *** Quits: Eisenaxt (~Eisenaxt@2001:8d8:1ff:c000:ac3b:277e:b475:9b6) (Quit: Client closed)
[18:30:47] *** Quits: saschagrunert (~saschagru@46.128.124.46) (Remote host closed the connection)
[18:31:09] *** Joins: Eisenaxt (~Eisenaxt@2001:8d8:1ff:c000:ac3b:277e:b475:9b6)
[18:31:35] *** Quits: independent__ (~independe@95.144.68.39) (Ping timeout: 244 seconds)
[18:32:05] *** Joins: burningserenity (~burningse@2603-9001-0f01-ad99-0000-0000-0000-100c.inf6.spectrum.com)
[18:37:05] *** Joins: andlabs (~andlabs@2607:fb90:f80f:fc5f:d964:1a80:a2c3:c19e)
[18:38:56] <Eisenaxt> Hello,
[18:40:14] *** Joins: andlabs_ (~andlabs@172.58.227.142)
[18:40:16] <Eisenaxt> I am playing around with strconv.Atoi() and can't convert a unicode.IsNumber() to an int. Is strconv.Atoi() only defined for european numbers?
[18:40:39] <Eisenaxt> I have written a small example:
[18:40:40] <Eisenaxt> https://play.golang.org/p/zxevTSZsrvz
[18:41:26] *** Quits: andlabs (~andlabs@2607:fb90:f80f:fc5f:d964:1a80:a2c3:c19e) (Ping timeout: 252 seconds)
[18:41:38] <Eisenaxt> The question for me is: If I have a rune for which unicode.IsNumber() returns true, how I convert this rune to an int?
[18:41:40] *** Quits: andlabs_ (~andlabs@172.58.227.142) (Remote host closed the connection)
[18:42:28] *** Joins: andlabs (~andlabs@172.58.227.142)
[18:45:24] *** Joins: andlabs_ (~andlabs@2607:fb90:f800:f4b6:1dc5:62c1:35d8:9015)
[18:46:34] *** Quits: andlabs (~andlabs@172.58.227.142) (Ping timeout: 244 seconds)
[18:46:41] *** Quits: yangby (~secret@115.199.101.158) (Quit: Go out for a walk and buy a drink.)
[18:46:54] *** Joins: andlabs (~andlabs@172.58.227.247)
[18:49:40] *** Quits: andlabs_ (~andlabs@2607:fb90:f800:f4b6:1dc5:62c1:35d8:9015) (Ping timeout: 240 seconds)
[18:50:52] <siXy> Eisenaxt: Atoi only works with the arabic digits 0..9. You'd need to write your own parser to handle those runes.
[18:51:46] *** Joins: vs^ (~vs@wsip-98-188-244-188.mc.at.cox.net)
[18:53:10] *** Quits: andlabs (~andlabs@172.58.227.247) (Ping timeout: 240 seconds)
[18:53:44] <iateadonut> 2406 is à¥¦ , 2407 is à¥§ , 2412 is à¥¬ - i'm getting this when i cast like int(r)
[18:54:13] *** Quits: rbn (~rbn@sferic.eu) (Read error: Connection reset by peer)
[18:54:24] <iateadonut> when i stick this line in there:  fmt.Printf("%d is %c\n", int(r), r)  - Eisenaxt... so not sure what that's all about.  what are those numbers supposed to be when converted to an integer?
[18:54:44] *** Quits: nevivurn (~nevivurn@user/nevivurn) (Quit: Goodbye~)
[18:54:55] *** Joins: andlabs (~andlabs@2607:fb90:f806:b0a:b5a9:4439:bb8:5ede)
[18:55:24] <fizzie> The Unicode character database has a Numeric_Value property that I expect would do the right thing for all *decimal* numbers, but a lot of the things for which unicode.IsNumber returns true are a lot more complicated than that.
[18:56:31] <GinjaNinja32> iateadonut, those are the Unicode code points of those characters - U+966 DEVANAGARI DIGIT ZERO (0x966 = 2406), U+967 DEVANAGARI DIGIT ONE (= 2407), U+96C DEVANAGARI DIGIT SIX (= 2412)
[18:56:52] <fizzie> (Not sure if Go has the full UCD data packaged up in the standard library, but if not then I'm sure there's a third-party package for it.)
[18:57:02] <siXy> Atoi just checks if the rune is 0..9 anyway. I doubt a change to make it understand unicode would be accepted because of the inevtiable performance tradeoff for a function that needs to be fast.
[18:57:48] <siXy> You could probably write something that expressed these unicode numbers as arabic digits and then passed that to Atoi but I'm not aware of anything in the stdlib to do so
[18:57:53] *** Quits: frost (~frost@59.71.240.119) (Quit: Connection closed)
[18:58:07] <siXy> You might maybe get a PR for the unicode package to do that accepted if you ask though
[18:59:14] <fizzie> There are many things classified as numbers in Unicode for which "convert to an int" doesn't make sense at all, like fractions. But if you're just interested in the various flavours of decimal digits, there's a subcategory for those.
[19:04:12] <Eisenaxt> Thank you all for your answers.
[19:05:05] *** Quits: iateadonut (~dan@121.177.17.154) (Ping timeout: 252 seconds)
[19:05:13] <Eisenaxt> Perhaps there could be an additional function in the unicode-package Atoi() or something like this.
[19:05:49] *** Joins: iateadonut (~dan@99.136.252.138)
[19:06:44] *** Joins: djo (~djo@public-nat.it.pasteur.fr)
[19:07:55] <Eisenaxt> iateadonut - I suppose to get the number which is represented by the rune. "9" should give 9. "à¥§à¥¨à¥©à¥ªà¥«à¥¬à¥­à¥®à¥¯" should give 123456789.
[19:08:37] <Eisenaxt> Or better: "à¥§" should give 1.
[19:08:46] <siXy> Eisenaxt: Out of interest, which language uses those numerals? I'm not sure I recall seeing them before
[19:10:21] <Eisenaxt> This is used in India.
[19:10:28] <Eisenaxt> https://de.wikipedia.org/wiki/Unicodeblock_Devanagari
[19:12:18] <Eisenaxt> I have only used them as a test. I wrote a small routine today which calculates a checksum of an ID. And there I stumbled over the question, if I have to pay attention to unicode if I convert the id, given as a string, to integers.
[19:18:40] *** Quits: andlabs (~andlabs@2607:fb90:f806:b0a:b5a9:4439:bb8:5ede) (Ping timeout: 240 seconds)
[19:20:09] *** Quits: oxum (~oxum@106.203.195.217) (Ping timeout: 244 seconds)
[19:20:38] *** Joins: andlabs (~andlabs@172.58.227.178)
[19:21:22] *** Quits: iateadonut (~dan@99.136.252.138) (Ping timeout: 245 seconds)
[19:23:19] *** Joins: andlabs_ (~andlabs@2607:fb90:f806:e838:9106:6735:1d0:e60f)
[19:24:40] *** Quits: andlabs (~andlabs@172.58.227.178) (Ping timeout: 240 seconds)
[19:25:08] *** Joins: andlabs (~andlabs@172.58.227.64)
[19:26:50] <seebs> okay, but like, what about MCMà¥¨3
[19:27:31] <seebs> à¥¨34V
[19:27:40] *** Quits: andlabs_ (~andlabs@2607:fb90:f806:e838:9106:6735:1d0:e60f) (Ping timeout: 240 seconds)
[19:28:07] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 252 seconds)
[19:28:43] <gggp> what is this syntax :Done() <-chan struct{}
[19:29:01] <seebs> incomplete
[19:29:21] *** Joins: lalitmee (~lalitmee@180.94.33.98)
[19:29:49] <seebs> you'd need some context around it, but my guess is that you're looking at docs, probably for a context.Context, which has a method Done() which returns `<-chan struct{}` which is to say, a read-only channel that yields struct{}.
[19:30:10] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[19:31:11] *** Joins: flynn (~mcbloch@user/flynn)
[19:36:07] <gggp> yeah
[19:36:53] *** Joins: iateadonut (~dan@121.177.17.154)
[19:38:32] <gggp> seebs, what if it is read/write channel
[19:39:21] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Quit: Ping timeout (120 seconds))
[19:39:34] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[19:41:40] *** Quits: andlabs (~andlabs@172.58.227.64) (Ping timeout: 240 seconds)
[19:42:37] *** Joins: andlabs (~andlabs@2607:fb90:f805:c478:f1e7:7856:c06d:8438)
[19:43:32] *** Quits: andlabs (~andlabs@2607:fb90:f805:c478:f1e7:7856:c06d:8438) (Client Quit)
[19:44:37] *** Joins: be3uykpy_ (~be3uykpy@2a00:a040:19a:b060:7471:ec74:8d2f:dc1)
[19:44:54] *** Quits: jcajka (~jcajka@ip-86-49-242-38.net.upcbroadband.cz) (Quit: Leaving)
[19:48:29] *** Quits: yoonkn (~user@175.197.208.79) (Read error: Connection reset by peer)
[19:48:40] *** Quits: be3uykpy (~be3uykpy@2a00:a040:19a:b060:f8b5:d21e:3772:d04a) (Ping timeout: 256 seconds)
[19:49:01] *** Quits: burningserenity (~burningse@2603-9001-0f01-ad99-0000-0000-0000-100c.inf6.spectrum.com) (Ping timeout: 252 seconds)
[19:49:22] *** Joins: andlabs (~andlabs@ool-ad034a4d.dyn.optonline.net)
[19:49:46] *** Joins: khyr0n_ (~khyr0n@2806:2f0:9140:56ec:93f7:805d:a273:a1c5)
[19:52:19] *** Quits: khyr0n (~khyr0n@2806:2f0:9260:e17b:8c10:d579:6fb:d3b4) (Ping timeout: 252 seconds)
[19:52:36] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-7-205.prtc.net)
[19:52:42] *** Quits: gggp (~gggp@111-251-157-238.dynamic-ip.hinet.net) (Ping timeout: 244 seconds)
[19:55:33] *** Joins: adlternative (~adl@117.32.216.12)
[19:55:42] <seebs> it isn't a read/write channel, it's a read-only channel, that's what it's telling you
[19:56:06] <seebs> which is to say, Done() returns a channel that you can check or read from, but can't write to, which is intentional.
[19:56:26] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[19:56:37] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[19:57:31] *** Quits: Eisenaxt (~Eisenaxt@2001:8d8:1ff:c000:ac3b:277e:b475:9b6) (Quit: Client closed)
[19:58:23] *** Quits: kai (~kai@x50d24799.cust.hiper.dk) (Ping timeout: 244 seconds)
[19:59:27] *** Quits: _Asgaroth_ (~Asgaroth@93.107.191.92) (Quit: Leaving)
[19:59:35] *** Joins: deepozon (~f@ppp141237016119.access.hol.gr)
[19:59:37] *** Joins: gggp (~textual@60.10.194.45)
[19:59:51] *** Parts: deepozon (~f@ppp141237016119.access.hol.gr) ()
[19:59:56] *** Joins: deepozon (~f@ppp141237016119.access.hol.gr)
[20:00:02] *** Parts: deepozon (~f@ppp141237016119.access.hol.gr) ()
[20:00:58] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 244 seconds)
[20:02:11] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[20:02:57] *** Joins: fikran (~fikran@user/fikran)
[20:03:02] *** Quits: adlternative (~adl@117.32.216.12) (Ping timeout: 244 seconds)
[20:04:20] *** Joins: freakazoid12345 (~matt@2603-9000-cf0f-80e3-3861-b031-6b93-c510.inf6.spectrum.com)
[20:04:21] *** Joins: gggp_ (~gggp@111-251-157-238.dynamic-ip.hinet.net)
[20:07:12] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:3861:b031:6b93:c510) (Ping timeout: 245 seconds)
[20:09:37] *** Joins: internut_ (~internut@98.38.226.136)
[20:09:39] *** Quits: gggp (~textual@60.10.194.45) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:11:43] *** Joins: kai (~kai@x50d24799.cust.hiper.dk)
[20:12:40] *** Quits: internut (~internut@2601:280:4e00:7b70:f0f1:f0b:115b:3a39) (Ping timeout: 252 seconds)
[20:14:27] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:14:33] <gggp_> is golang functinal programming
[20:14:44] <ikke> no
[20:14:45] <sztanpet> yes, it functions
[20:14:52] <ikke> it's quite imperative
[20:15:03] <sztanpet> imperatively functional!
[20:15:19] *** Joins: kai3 (~kai@x50d24799.cust.hiper.dk)
[20:15:30] <gggp_> what is imperatively functional!
[20:16:02] <ikke> a joke
[20:16:10] *** Quits: kai (~kai@x50d24799.cust.hiper.dk) (Ping timeout: 240 seconds)
[20:16:26] <gggp_> :(
[20:18:11] <sztanpet> i thought it was a joke question :(
[20:18:49] *** Joins: lalitmee_ (~lalitmee@180.94.33.76)
[20:18:59] <gggp_> where can i find idioms of golang
[20:21:07] *** Quits: lalitmee (~lalitmee@180.94.33.98) (Ping timeout: 244 seconds)
[20:25:24] <iateadonut> idioms?
[20:25:27] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::100c)
[20:26:25] *** Quits: iateadonut (~dan@121.177.17.154) (Quit: Leaving.)
[20:26:35] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-7-205.prtc.net) (Ping timeout: 256 seconds)
[20:29:45] *** Quits: eduardas (~eduardas@93.93.57.5) (Quit: Konversation terminated!)
[20:32:44] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3-dev)
[20:33:22] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[20:42:17] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[20:46:04] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[20:47:04] *** Joins: flynn (~mcbloch@user/flynn)
[20:49:23] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[20:49:43] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[20:50:15] <rewt> gggp_: https://tour.golang.org/
[20:50:54] *** Quits: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[20:53:44] *** Joins: vptr (~vptr@user/vptr)
[21:00:25] *** Quits: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:00:32] <gggp_> imperative and declare ,which is preferred?
[21:01:12] *** Quits: lalitmee_ (~lalitmee@180.94.33.76) (Ping timeout: 256 seconds)
[21:03:12] *** Joins: lalitmee_ (~lalitmee@180.94.33.76)
[21:03:13] <eric_hill> preferred is such a subjective term
[21:05:10] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[21:05:38] *** Joins: gilesc (~textual@cpe-172-112-18-165.socal.res.rr.com)
[21:06:10] *** Joins: flynn (~mcbloch@user/flynn)
[21:06:56] *** Quits: toretto_ (~ryan@45.15.18.18) (Quit: leaving)
[21:07:50] *** Joins: toretto (~ryan@user/toretto)
[21:09:27] *** Joins: internut (~internut@2601:280:4e00:7b70:b9a8:8617:2637:7708)
[21:12:47] *** Quits: internut_ (~internut@98.38.226.136) (Ping timeout: 244 seconds)
[21:22:08] *** Joins: fdan (~fdan@192.146.154.3)
[21:22:38] <fdan> hi there, how can i find how to use certain method in golang
[21:24:19] *** Joins: lalitmee__ (~lalitmee@180.94.33.198)
[21:25:07] <KirkMcDonald> Is it documented?
[21:25:15] <fdan> for example, if i want to get input there is something like bufio and scanln
[21:25:24] <fdan> 1) how do i know which one to use?
[21:25:51] <fdan> 2) why there is multiple ways to do things in go? we have %v, then reflectof to find the type
[21:25:57] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Ping timeout: 245 seconds)
[21:26:47] *** Quits: lalitmee_ (~lalitmee@180.94.33.76) (Ping timeout: 245 seconds)
[21:26:50] <KirkMcDonald> "reflectof"? Are you talking about reflect.TypeOf?
[21:28:46] <KirkMcDonald> As for fmt.Scanln() vs. bufio, they do somewhat different things. You'd use the one that best matches what you require.
[21:29:31] <KirkMcDonald> And I'm not clear on what comparison you're making between %v and the reflect package.
[21:29:47] <KirkMcDonald> Because those are wildly different things.
[21:29:50] *** Quits: gggp_ (~gggp@111-251-157-238.dynamic-ip.hinet.net) (Ping timeout: 244 seconds)
[21:30:46] *** Quits: lalitmee__ (~lalitmee@180.94.33.198) (Ping timeout: 252 seconds)
[21:34:42] <fdan> yes thats right
[21:35:34] <fdan> i have a decent knowledge in python and the syntax in go , im not able to recollect
[21:35:41] <fdan> or remember? any easy way
[21:36:20] <siXy> fdan: Look on godoc.org for documentation of specific methods. Also consider running through tour.golang.org if you haven't recently
[21:36:46] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[21:36:58] <nostalgia> fdan, go through the tour.golang.org tutorial to get basics/syntax down. use effective go (also on website) to learn idomatic patterns and techniques
[21:39:47] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Client Quit)
[21:40:14] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[21:40:19] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[21:40:37] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[21:41:56] <fdan> nostalgia is it a book?
[21:42:12] <fdan> any other best books for beginners. Im going through examples in go tour
[21:45:45] *** Quits: khyr0n_ (~khyr0n@2806:2f0:9140:56ec:93f7:805d:a273:a1c5) (Quit: Leaving)
[21:45:56] *** Joins: khyr0n (~khyr0n@2806:2f0:9140:56ec:93f7:805d:a273:a1c5)
[21:50:54] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[21:51:25] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[21:51:39] *** Joins: jpw (~jpw@user/jpw)
[21:52:26] *** Joins: flynn (~mcbloch@user/flynn)
[21:54:25] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 256 seconds)
[21:56:02] *** Joins: oxum (~oxum@106.203.195.217)
[21:56:04] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 252 seconds)
[22:01:17] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[22:01:55] *** Joins: oxum (~oxum@106.203.195.217)
[22:04:32] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[22:10:01] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[22:10:08] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 244 seconds)
[22:12:18] *** Joins: fikran (~fikran@user/fikran)
[22:12:34] *** Quits: flynn (~mcbloch@user/flynn) (Ping timeout: 252 seconds)
[22:15:18] *** Joins: jpw_ (~jpw@user/jpw)
[22:17:03] *** Joins: flynn (~mcbloch@user/flynn)
[22:18:04] *** Quits: jpw (~jpw@user/jpw) (Ping timeout: 252 seconds)
[22:21:30] *** Quits: jpw_ (~jpw@user/jpw) (Ping timeout: 244 seconds)
[22:22:32] *** Joins: oxum (~oxum@106.203.195.217)
[22:27:12] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[22:28:12] *** Joins: flynn (~mcbloch@user/flynn)
[22:28:50] *** Joins: mertyildiran (~mertyildi@88.248.149.182)
[22:29:38] *** Quits: vptr (~vptr@user/vptr) (Quit: leaving)
[22:31:57] <mertyildiran> What can cause this https://github.com/google/gopacket/blob/master/examples/reassemblydump/main.go#L546 `Packet` to be closed?
[22:32:16] *** Quits: c10l (~c10l@89.34.167.207) (Quit: The Lounge - https://thelounge.chat)
[22:32:21] <mertyildiran> I mean the channel named `Packet`.
[22:33:20] *** Joins: c10l (~c10l@89.34.167.207)
[22:34:19] <fizzie> There's no "channel named `Packet`" that I can see, though there's a method named Packets() that returns a value of `chan Packet` type, from the `c` member of PacketSource, which is likely closed by the `defer close(p.c)` statement on line 816.
[22:36:10] <nostalgia> <fdan> nostalgia is it a book? : fdan perhaps there is a print version but it is updated and freely available at https://golang.org/doc/effective_go
[22:40:57] <mertyildiran> fizzie: hmm OK. So should it be looped for continues capturing?
[22:41:27] <mertyildiran> the call to `gopacket.NewPacketSource(handle, dec)` I mean.
[22:41:43] *** Joins: jpw (~jpw@user/jpw)
[22:44:09] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[22:44:32] <fizzie> Sounds like answering that would require actually understanding what it's all about, rather than just a superficial glance at the structure of the code, so... no comment.
[22:45:21] <mertyildiran> fizzie: hmm OK thanks a lot!
[22:45:30] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[22:46:42] *** Quits: mertyildiran (~mertyildi@88.248.149.182) (Quit: WeeChat 2.8)
[22:48:49] *** Joins: oxum (~oxum@106.203.195.217)
[22:51:12] *** Quits: ninjin- (~ninjin@user/ninjin) (Ping timeout: 276 seconds)
[22:51:40] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Ping timeout: 240 seconds)
[22:51:51] *** Quits: thing (~thing@user/thing) (Ping timeout: 276 seconds)
[22:52:08] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Remote host closed the connection)
[22:52:18] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[22:52:30] *** Quits: mickey (~user@user/mickey) (Ping timeout: 276 seconds)
[22:52:30] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Ping timeout: 276 seconds)
[22:55:11] *** Joins: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de)
[22:55:22] *** Quits: sjas (~sjas@irc.sjas.de) (Ping timeout: 240 seconds)
[22:55:28] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[22:57:40] *** Quits: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[22:58:48] *** Joins: mickey (~user@user/mickey)
[22:58:50] *** Joins: thing (~thing@user/thing)
[22:58:51] *** Joins: ninjin (~ninjin@user/ninjin)
[22:59:10] *** Joins: sjas (~sjas@irc.sjas.de)
[23:06:48] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[23:07:07] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[23:09:24] *** Joins: Everything (~Everythin@37.115.210.35)
[23:10:26] *** Joins: arcatech (~arcatech@user/arcatech)
[23:10:38] *** Joins: oxum (~oxum@106.203.195.217)
[23:10:46] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[23:11:47] *** Joins: flynn (~mcbloch@user/flynn)
[23:12:20] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[23:16:31] *** Joins: jpw_ (~jpw@user/jpw)
[23:19:22] *** Quits: jpw (~jpw@user/jpw) (Ping timeout: 244 seconds)
[23:20:13] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[23:24:10] *** Quits: vs^ (~vs@wsip-98-188-244-188.mc.at.cox.net) (Ping timeout: 240 seconds)
[23:35:33] *** Quits: djo (~djo@public-nat.it.pasteur.fr) (Read error: Connection reset by peer)
[23:38:26] *** Joins: darkapex (~darkapex@user/darkapex)
[23:38:35] *** Quits: darkapex_ (~darkapex@user/darkapex) (Read error: Connection reset by peer)
[23:39:28] *** Joins: darkapex_ (~darkapex@user/darkapex)
[23:42:37] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 244 seconds)
[23:43:44] *** Joins: vs^ (~vs@wsip-98-188-244-188.mc.at.cox.net)
[23:45:50] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[23:45:56] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Client Quit)
[23:46:11] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[23:49:44] *** Joins: mertyildiran (~mertyildi@88.248.149.182)
[23:50:40] <mertyildiran> Tv_: Hi, how can I detect and decode TLS packets with `gopacket`?
[23:54:01] *** Quits: dozn (uid249292@user/dozn) (Quit: Connection closed for inactivity)
[23:54:52] *** Quits: khyr0n (~khyr0n@2806:2f0:9140:56ec:93f7:805d:a273:a1c5) (Ping timeout: 252 seconds)
