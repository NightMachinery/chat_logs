[00:01:43] *** Quits: kostkon (~kostkon@athedsl-394251.home.otenet.gr) (Remote host closed the connection)
[00:01:56] *** Joins: saltrocklamp[m] (~elementio@user/hexology)
[00:01:56] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-281d-023e-06d1-52a1.res6.spectrum.com)
[00:02:33] *** Quits: redoc (~redoc@user/redoc) (Remote host closed the connection)
[00:03:43] *** Joins: redoc (~redoc@user/redoc)
[00:06:11] *** Quits: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net) (Quit: Leaving)
[00:09:47] <mike18> h why i dont see any output here? https://replit.com/join/lycduijupl-surfman19
[00:09:54] *** d0ku is now known as dezeroku
[00:09:55] <mike18> can you use unit test in replit.com ?
[00:10:27] *** Quits: redoc (~redoc@user/redoc) (Remote host closed the connection)
[00:10:48] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[00:11:19] *** Quits: cerill (~cerill@h-155-4-198-153.A785.priv.bahnhof.se) (Quit: Client closed)
[00:12:00] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:12:58] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:698d:dceb:89d9:beb7)
[00:13:02] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[00:13:26] *** Joins: hendursaga (~weechat@user/hendursaga)
[00:14:00] *** Quits: dude-x (~textual@pool-108-50-217-42.nwrknj.fios.verizon.net) (Quit: Textual IRC Client: www.textualapp.com)
[00:14:51] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[00:14:55] *** Joins: redoc (~redoc@user/redoc)
[00:15:19] *** Joins: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net)
[00:15:25] *** Quits: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 260 seconds)
[00:15:37] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[00:16:38] *** Quits: Inline (~Inline@2a02:908:1252:7a80:89dc:6a58:9f2a:ff3d) (Remote host closed the connection)
[00:16:38] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[00:17:37] *** Joins: Inline (~Inline@2a02:908:1252:7a80:aa94:ac75:d11d:97b0)
[00:19:17] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 265 seconds)
[00:20:06] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[00:20:17] <aphysically> kinda hard to gauge where the PEP 505 discussion is going on the ML
[00:20:39] *** Quits: white_magic (~white_mag@2600:1700:6ae2:a20:8db6:71c:be4f:cf6e) (Quit: Client closed)
[00:20:46] *** Quits: redoc (~redoc@user/redoc) (Read error: Connection reset by peer)
[00:21:06] *** Quits: plainoldcheese (~plainoldc@user/plainoldcheese) (Quit: WeeChat 3.3)
[00:21:48] <nedbat> mike18: your replit links ask me to log in
[00:22:32] *** Joins: redoc (~redoc@user/redoc)
[00:23:05] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 244 seconds)
[00:23:42] *** Quits: redoc (~redoc@user/redoc) (Remote host closed the connection)
[00:23:54] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[00:26:23] <mike18> oh
[00:27:37] *** Joins: theprophet (~theprophe@85.114.228.184)
[00:28:06] *** Joins: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963)
[00:28:26] <mike18> nedbat: can post it here: https://ideone.com/0BsNcp
[00:28:37] <mike18> i get this error TypeError: argument of type 'RetryError' is not iterable
[00:28:52] <nedbat> mike18: is there more to the error report?
[00:28:59] <mike18> no
[00:29:19] <mike18> thats why i try to put it into replit
[00:29:37] <nedbat> mike18: i can see it's on line 44, but are you sure there aren't more lines?  How are you running your program?
[00:29:47] <mike18> unit test
[00:29:56] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[00:29:59] <theprophet> i already asked this question today, and i had answer for this, but i wanna make sure that i got it right, 100% ...  please give me a simplies example what is going on in this text i copied from django docs.
[00:30:01] <theprophet> The include() function allows referencing other URLconfs. Whenever Django encounters include(), it chops off whatever part of the URL matched up to that point and sends the remaining string to the included URLconf for further processing.
[00:30:11] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[00:30:18] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[00:30:25] <nedbat> mike18: can you pastebin the full output you see when you run your program? Are you running it in a terminal/command-prompt?
[00:30:39] <aphysically> new ML PEP https://docs.google.com/document/d/1ujuSMXDmSIOJpiZyV7mvBEC8P-y55AgSzXcvhrZciuI/edit
[00:30:49] <aphysically> 'Self" for typing
[00:32:01] *** Joins: fikran (~fikran@user/fikran)
[00:32:24] <theprophet> deniska, showed me example, i understood but , while studying jango i got a bit confused , can please somebody give an easy example for this?
[00:32:26] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[00:33:41] <whatsupdoc> Hi, I had a question about this code: https://dpaste.org/fadC#L18
[00:34:10] <whatsupdoc> Can someone explain to me the else statement in the __setattr__ function?
[00:34:20] *** Joins: aztec (~Felipe@2804:2238:7b9:c300:49a0:a834:ba60:b8fa)
[00:34:31] <KirkMcDonald> whatsupdoc: If the key is 'file' it does one thing, and if it's something else it does another.
[00:34:50] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[00:34:57] <mike18> @nedbat yes: https://ideone.com/hCkGNC
[00:35:01] <nedbat> whatsupdoc: this class proxies to its "file" attribute.  line 3 would try to proxy to self.file before self.file existed if that if wasn't there.
[00:35:04] <KirkMcDonald> Specifically it defers to the object referred to by self.file
[00:35:05] <mike18> terminal
[00:35:21] *** Joins: dude-x (~textual@pool-108-50-217-42.nwrknj.fios.verizon.net)
[00:35:39] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[00:36:01] <nedbat> mike18: this output doesn't have "RetryError is not iterable"...?
[00:36:14] <mike18> yeah idk - cant fully reproduce it
[00:36:16] <mike18> but still an error
[00:36:22] <mike18> but why?
[00:36:27] <mike18> it should raise an exception - no?
[00:36:31] <whatsupdoc> ok i see
[00:36:33] <whatsupdoc> thanks
[00:36:56] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[00:37:21] <nedbat> mike18: line 44 is trying to check if an exception message contains "login error", right?
[00:37:27] <mike18> yeah
[00:37:30] <whatsupdoc> wait, doesn't setattr() take 3 parameters?
[00:37:47] <nedbat> mike18: an exception is not a string, it's an object with a string message.
[00:38:03] <nedbat> mike18: you could try  "login error" in str(context.exception)
[00:38:12] <KirkMcDonald> whatsupdoc: Ah, it does, so that seems like an error.
[00:38:26] <whatsupdoc> Ok lol, that threw me off
[00:38:33] <mike18> nedbat: yeah - but it says: E       AssertionError: Exception not raised
[00:38:37] *** Quits: AM (~techman@82-203-162-208.bb.dnainternet.fi) (Ping timeout: 265 seconds)
[00:38:43] <mike18> on 40
[00:38:46] <mike18> line 40
[00:39:12] <nedbat> mike18: i guess it's not raising that exception this time
[00:39:19] <mike18> correct
[00:39:25] <jinsun> mike18: it doesn't raise exception because the function where you raise the exception is never called
[00:39:45] <mike18> jinsun: i see it calling in line 28
[00:39:59] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[00:40:07] *** Quits: dezeroku (~d0ku@178.43.15.137.ipv4.supernova.orange.pl) (Ping timeout: 244 seconds)
[00:40:13] *** Joins: bancroft (~bancroft@bras-base-mtrlpq02hsy-grc-06-174-93-254-50.dsl.bell.ca)
[00:40:14] <mike18> which is called by line 17
[00:40:28] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[00:40:30] <jinsun> ugh yeah it is called, but you catch the exception
[00:40:32] <mike18> and you also see the call my_test_login... print
[00:41:11] <mike18> yeah jinsun to display error to the log - shouldnt reraise forward it?
[00:41:11] <bancroft> is there a pythonic way to test if anyone running the script can ssh into a machine? I thought to just do subprocess.check_call and do echo $HOME or something. Is there anything better?
[00:41:38] <jinsun> mike18: where do you reraise?
[00:41:46] <mike18>   @tenacity.retry(reraise=True, wait=tenacity.wait_exponential(multiplier=2), stop=tenacity.stop_after_attempt(5))
[00:42:43] *** Quits: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz) (Ping timeout: 244 seconds)
[00:43:26] <theprophet> jinsun your answers always helped me, can you help me once more? do you know django?
[00:43:55] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[00:44:37] <jinsun> theprophet: no unfortunately I have very little idea about django
[00:44:52] <theprophet> ok
[00:44:57] *** Quits: grooverman (~grooverma@177.95.12.14) (Read error: Connection reset by peer)
[00:45:28] *** Joins: white5moke (~white5mok@ip72-219-109-30.oc.oc.cox.net)
[00:45:33] <nedbat> theprophet: it looks like you're getting help in #django.
[00:46:07] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[00:46:10] *** Quits: haise01 (~haise01@user/haise01) (Quit: ZNC 1.8.2 - https://znc.in)
[00:46:19] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 244 seconds)
[00:46:33] <theprophet> yes i asked there, but i get a unfinished answer
[00:46:44] *** Joins: nomic (~nomic@185.198.243.184)
[00:47:35] *** Quits: brelod (~me@90.244.150.142) (Quit: leaving)
[00:48:01] <mike18> jinsun: looks like i need to add a raise Exception myself
[00:48:04] <jinsun> mike18: that reraise is not for raising the exceptions you catch, it is for reraising the exception thrown inside the function instead of RetryError https://tenacity.readthedocs.io/en/latest/#error-handling
[00:48:16] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Quit: Client closed)
[00:48:31] <jinsun> mike18: yeah, put a `raise` in the except block
[00:48:38] <mike18> yeah that works
[00:50:14] <mike18> but when i check for self.assertTrue("login error" in str(context.exception)) ...  str(context.exception) is empty
[00:51:25] <aphysically> jinsun: I spent a while trying to figure out rich's thread race problem
[00:51:28] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::2612) (Quit: Konversation terminated!)
[00:53:03] <mike18> jinsun: ignore that last msg :)
[00:53:10] <aphysically> I kinda hate multiple inheritance cause it always takes me longer to figure out what's going on
[00:53:39] <aphysically> maybe I prefer mixins and protocols, I guess
[00:55:23] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:55:32] <jinsun> I think most people don't like multiple inheritance, I definitely avoid those
[00:56:00] <nedbat> aphysically: how do you define "mixin"?
[00:56:19] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 260 seconds)
[00:56:34] <aphysically> well a mixin is multiple inheritance I guess, if that's what you're getting at
[00:59:12] *** Joins: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il)
[00:59:35] <aphysically> nedbat: but to answer directly, a class to inherit from implementing a few select methods?
[00:59:51] * meejah really dislikes "MixIn" pattern
[00:59:54] <aphysically> and by protocol I mean typing.Protocol
[01:00:10] <nedbat> aphysically: right, it's multiple-inheritance, so i wonder what makes "mixin" different than "class"
[01:00:57] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[01:01:25] *** Joins: PixelRobot (~PixelRobo@139.47.80.69)
[01:01:40] <saltrocklamp[m]> meejah: mixins would be nice if you could statically annotate (e.g. with protocol) requirements for classes that inherit from it. e.g. "this mixin expects such-and-such interface to be implemented"
[01:02:05] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Ping timeout: 260 seconds)
[01:02:52] <meejah> i think it would nearly always be more-clear to have a helper (with an explicit interface, if you do typing)
[01:03:17] <meejah> (do you have an example of where a mixin is "better" / more-clear than a helper-object or function of some kind?)
[01:03:23] *** Quits: Narrat (~omnius@p200300df5f49111d06ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[01:04:07] <saltrocklamp[m]> the scikit-learn api is an interesting example of mixins in the wild
[01:04:19] <saltrocklamp[m]> and i'm not sure what other way you could implement such a system
[01:05:39] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[01:05:43] <meejah> i'm not familiar with scikit-learn
[01:06:00] <phantomotap> me neither. sounds interesting.
[01:07:13] <supakeen> Clearly we should use `<MyClass with SomeMixin>.mixin_method`
[01:07:18] <supakeen> s/should/could
[01:07:55] <meejah> could e.g. ClassifierMixin just be a straight helper?
[01:07:59] <meejah> couldn't
[01:08:58] <meejah> the thing the "Mixin" doesn't tell you (w/o delving into the code) is that all that cares about is "<thing>.predict()" ... so a helper that took a "predict_function=" instead would make that a lot more claer
[01:09:49] *** Quits: stdout (~stdout@216.163.21.11) (Quit: Leaving)
[01:10:35] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[01:10:36] *** Quits: TFKyle (~kyle@64.201.205.70) (Remote host closed the connection)
[01:10:51] <whatsupdoc> damn python seems to allow you to overload anything
[01:13:51] *** Quits: cparker (~cparker@c-76-127-239-113.hsd1.ma.comcast.net) (Ping timeout: 256 seconds)
[01:16:20] <saltrocklamp[m]> meejah: that seems a lot more difficult to use, forcing users to pass `predict_function=` everywhere
[01:17:18] <saltrocklamp[m]> you can quibble with the overall design of the heavily object-oriented API, but for the most part i think it does a great job at what it does. the only issue that there's no way to statically assert (using the current python typing systems) which methods must be implemented for the mixin to work
[01:19:02] <mike18> how can you check that no exception gets raised for the func to test in python unit test?
[01:19:05] <meejah> it could take "a thing that has a .predict_function" instead (which would more-closely match the currently API). That could already declare an interface (i.e. just needs one callable)
[01:19:33] <meejah> mike18: if a test raises an exception, it will fail .. so just call the func
[01:19:44] *** Joins: redoc (~redoc@user/redoc)
[01:20:56] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[01:20:58] <saltrocklamp[m]> meejah: like how `__str__` and `__fspath__` work? sure, that's one option, but it's a totally different api design
[01:21:39] <saltrocklamp[m]> i would also argue that it's worse than the fully-OO design, because that doesn't allow you to freely overload methods as needed
[01:22:00] <saltrocklamp[m]> another valid use case is `collections.abc`
[01:23:28] <meejah> saltrocklamp[m]: i'm arging that "freely overload methods" is the bad thing (along with your original ask of "you can't say what the mixin needs/wants etc" easily)
[01:23:58] <saltrocklamp[m]> and i am arguing that the former is an opinion not shared by all or even many, and the latter is a valid use case in python
[01:24:03] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 265 seconds)
[01:24:04] <saltrocklamp[m]> and that the latter*
[01:24:40] <saltrocklamp[m]> i agree that if you're designing a new api, you should probably consider mixins as a last resort
[01:24:43] <meejah> this channel is usually fairly against multiple-inheritance (and often also "inheritance")
[01:25:30] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 265 seconds)
[01:25:42] *** Quits: Akuli (~Akuli@213.216.209.22) (Quit: Leaving)
[01:26:07] <saltrocklamp[m]> indeed, i've learned a lot from this group over the years
[01:26:45] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[01:26:48] <saltrocklamp[m]> multiple non-overlapping inheritance however i think is fine
[01:27:09] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[01:27:10] <saltrocklamp[m]> and indeed scikit-learn base classes and mixins are mostly (from what i remember) non-overlapping
[01:27:59] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:8290:1de9:acaa:3a39) (Ping timeout: 264 seconds)
[01:28:26] <meejah> it's certainly possible to limit the pain of OOP
[01:28:50] *** Joins: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz)
[01:28:59] *** Joins: Macuser (~Macuser@216.30.159.201)
[01:30:04] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[01:30:27] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[01:30:38] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[01:30:43] *** Quits: alkino (~quassel@user/alkino) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:30:56] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[01:31:04] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[01:31:15] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[01:32:01] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:698d:dceb:89d9:beb7) (Quit: Client closed)
[01:32:16] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:698d:dceb:89d9:beb7)
[01:33:13] *** Quits: rud01f (rud0lf@user/rud0lf) (Quit: Ping timeout (120 seconds))
[01:33:23] *** Joins: rud01f (rud0lf@user/rud0lf)
[01:34:07] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[01:34:10] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[01:34:30] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) ()
[01:34:43] *** Quits: lionslicer (~lionslice@2804:d41:a71d:ff00:ade9:83f1:bcfc:fd6a) (Remote host closed the connection)
[01:35:03] *** Quits: ubert (~Thunderbi@178.115.41.93.wireless.dyn.drei.com) (Ping timeout: 260 seconds)
[01:36:15] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[01:36:53] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-281d-023e-06d1-52a1.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:36:55] *** Quits: SuperLag (~akulbe@user/superlag) (Ping timeout: 260 seconds)
[01:38:26] *** Joins: SuperLag (~akulbe@user/superlag)
[01:38:40] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:c147:ffa9:831e:1edb) (Read error: Connection reset by peer)
[01:39:06] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[01:39:20] *** Joins: Julian (~tos9@python/site-packages/Julian)
[01:39:35] <mike18> hi how do you annotate a function to a function in python?
[01:40:02] <mike18> the function is an argument of a function e.g. def foo(func, param1: str, param2: str)
[01:40:16] <mike18> how to annotate func?
[01:40:51] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[01:41:24] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[01:41:37] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (Ping timeout: 244 seconds)
[01:42:00] <jinsun> mike18: https://docs.python.org/3/library/typing.html#typing.Callable
[01:42:20] <mike18> Callable also needs those params?
[01:42:58] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[01:43:08] <jinsun> it needs that parameter types and return types of func
[01:43:10] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 244 seconds)
[01:43:37] <mike18> what happens if the return parameter is differeent when i call python unit test?
[01:43:39] <jinsun> well the return type
[01:43:41] *** Quits: Vision (~Vision@024-178-231-173.res.spectrum.com) (Ping timeout: 244 seconds)
[01:43:41] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 244 seconds)
[01:44:04] *** Joins: cheater (~Username@user/cheater)
[01:44:20] *** Joins: Mindscape (~Lindis@user/lindis)
[01:44:36] <jinsun> seems like a weird function, but you can use Unions and overloads to annotate that probably
[01:44:55] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[01:45:03] <mike18> jinsun: yeah - idk
[01:45:13] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[01:45:51] *** Quits: Bakunin (~Lindis@user/lindis) (Ping timeout: 276 seconds)
[01:46:06] *** Quits: flokuehn (~flokuehn@i577BC67B.versanet.de) (Ping timeout: 260 seconds)
[01:46:46] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[01:47:50] *** Joins: flokuehn (~flokuehn@87.123.247.57)
[01:48:08] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:48:10] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 260 seconds)
[01:49:47] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Remote host closed the connection)
[01:49:52] *** Quits: csm3105 (~csm3105@static-26-27-230-77.ipcom.comunitel.net) (Ping timeout: 244 seconds)
[01:52:35] *** amo is now known as amogorkon
[01:52:50] *** Quits: flokuehn (~flokuehn@87.123.247.57) (Ping timeout: 260 seconds)
[01:53:22] *** Joins: flokuehn (~flokuehn@87.123.247.77)
[01:54:11] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 260 seconds)
[01:55:26] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[01:57:22] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[01:57:27] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-25-65-93-17-96.dsl.bell.ca) (Ping timeout: 260 seconds)
[01:57:41] *** Quits: aztec (~Felipe@2804:2238:7b9:c300:49a0:a834:ba60:b8fa) (Quit: Leaving)
[01:59:40] *** Quits: white5moke (~white5mok@ip72-219-109-30.oc.oc.cox.net) (Quit: Leaving...)
[02:01:32] *** Quits: jess (~jess@libera/staff/jess) ()
[02:01:32] *** Joins: ubert (~Thunderbi@178.115.41.93.wireless.dyn.drei.com)
[02:01:55] *** Quits: frostschutz (~frostschu@2a01:c23:851b:d500:9e68:74cf:8ee1:8134) (Remote host closed the connection)
[02:01:59] *** Quits: ChrisWarrick (kwpolska@user/kwpolska) (Quit: Rebooting!)
[02:04:19] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[02:04:23] *** Joins: ChrisWarrick (kwpolska@user/kwpolska)
[02:05:23] *** Quits: mike18 (~geri@216.200.232.252) (Ping timeout: 244 seconds)
[02:06:56] *** Joins: upsala (~zcb@185.213.155.160)
[02:07:57] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:08:54] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:204f:2d77:869f:b8f2) (Quit: Konversation terminated!)
[02:18:35] *** Joins: emerent_ (~quassel@p200300cd57485562ba27ebfffed28a59.dip0.t-ipconnect.de)
[02:18:35] *** Quits: emerent (~quassel@p200300cd574855b8ba27ebfffed28a59.dip0.t-ipconnect.de) (Killed (zirconium.libera.chat (Nickname regained by services)))
[02:18:35] *** emerent_ is now known as emerent
[02:19:05] *** Quits: DeaDSouL (~DeaDSouL@194.195.91.4) (Ping timeout: 260 seconds)
[02:19:38] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[02:19:49] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[02:19:58] *** Joins: akk (~akk@75.161.146.115)
[02:20:44] *** Joins: DeaDSouL (~DeaDSouL@45.86.203.25)
[02:21:12] *** Quits: thnee (~thnee@h-85-24-144-199.a328.priv.bahnhof.se) (Quit: WeeChat 3.2)
[02:22:17] *** Joins: amrx (~amrx@access-63-249-98-253.static.cruzio.net)
[02:22:25] <amrx> I have a problem I cannot figure out.
[02:22:40] <amrx> This website example.org does not open and show 404
[02:22:48] <amrx> but, it does open with https://example.org
[02:22:56] *** Joins: arinov (~arinov@213.194.126.155)
[02:22:58] *** Joins: mraag (~martinraa@89.34.164.27)
[02:23:06] <amrx> 404 Web Site not found.
[02:23:07] <amrx> You may be seeing this error due to one of the reasons listed below :
[02:23:07] <amrx> Custom domain has not been configured inside Azure. See how to map an existing domain to resolve this.
[02:23:08] <amrx> Client cache is still pointing the domain to old IP address. Clear the cache by running the command ipconfig/flushdns.
[02:23:10] <amrx> Checkout App Service Domain FAQ for more questions.
[02:23:35] <Repiphany> Where's the relation to python
[02:23:50] *** Quits: amrx (~amrx@access-63-249-98-253.static.cruzio.net) (Remote host closed the connection)
[02:24:55] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 260 seconds)
[02:29:03] *** Joins: Macuser (~Macuser@216.30.159.201)
[02:29:45] *** Quits: computeiro (~Wender@189.37.66.146) (Remote host closed the connection)
[02:30:02] *** Joins: computeiro (~Wender@189.37.66.146)
[02:30:46] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[02:30:47] *** Quits: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net) (Quit: Leaving)
[02:31:32] <sartan> open ended question, intended very vaguely.  Is there any automatic html wrapper against a pydantic/openapi that creates an automatic traversable* UI?  something a little nicer than swagger that will enumerate item IDs, and allow to drill down on json-compatible nested elements?
[02:32:15] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 244 seconds)
[02:32:49] *** Joins: Nspace (~Nspace@user/nspace)
[02:33:57] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e8ee-f9fa-2a3e-92d6.res6.spectrum.com)
[02:34:13] <sartan> the traditional swagger/openapi will let you view a 'User' class, but they must type in the user ID, ideally it would also recognize a 'list' method for drill down and view of __str__ or whatever of each class instance nested underneath a model.
[02:35:58] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[02:36:32] <sartan> i guess what i'm looking for is the convienence of something like django-admin interface, but against something that is not a django model but just in-memory stuff.
[02:37:55] *** Quits: treefrob (~treefrob@p2e54293e.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[02:38:00] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.3)
[02:39:13] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[02:39:27] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[02:41:23] *** Joins: fikran (~fikran@user/fikran)
[02:41:46] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Remote host closed the connection)
[02:42:05] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[02:42:31] *** Joins: Elodin (~weechat@user/elodin)
[02:42:44] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:43:00] *** Joins: m1n10n (~r41d1n@cpe-76-184-204-251.tx.res.rr.com)
[02:43:02] *** Quits: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il) (Ping timeout: 260 seconds)
[02:43:06] *** Quits: m1n10n (~r41d1n@cpe-76-184-204-251.tx.res.rr.com) (Client Quit)
[02:43:47] *** Joins: m1n10n (~r41d1n@cpe-76-184-204-251.tx.res.rr.com)
[02:45:50] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e8ee-f9fa-2a3e-92d6.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[02:45:57] *** Quits: m1n10n (~r41d1n@cpe-76-184-204-251.tx.res.rr.com) (Client Quit)
[02:46:09] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[02:46:23] *** Quits: The_Jag (~The_Jag@host-79-13-46-237.retail.telecomitalia.it) (Quit: The_Jag)
[02:46:46] *** Quits: zebrag (~chris@user/zebrag) (Ping timeout: 245 seconds)
[02:46:47] *** Joins: m1n10n (~r41d1n@cpe-76-184-204-251.tx.res.rr.com)
[02:50:35] *** Quits: hel0 (~hel0@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[02:51:07] *** Joins: treefrob (~treefrob@p2e5421a1.dip0.t-ipconnect.de)
[02:51:21] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 244 seconds)
[02:51:33] *** Joins: hel0 (~hel0@user/redrum88)
[02:52:35] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 264 seconds)
[02:53:07] *** Joins: Wulf (~Wulf@user/wulf)
[02:54:16] *** Quits: summonner (~summonner@79.119.114.87) (Ping timeout: 245 seconds)
[02:54:34] *** Quits: Telvana (~capo@user/telvana) (Quit: ZNC 1.9.x-git-156-ac57c0e5 - https://znc.in)
[02:56:21] *** Joins: Telvana (~capo@user/telvana)
[02:56:55] *** Quits: lethu (~lethu@user/lethu) (Remote host closed the connection)
[02:59:07] <grym> sartan: redoc?
[02:59:55] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[03:00:38] <sartan> I just found this example project based on fastapi, https://github.com/tiangolo/full-stack-fastapi-postgresql where vue.js is loaded on top
[03:00:54] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:00:56] *** Quits: e2m4n (~ezman@user/e2m4n) (Ping timeout: 245 seconds)
[03:03:28] *** Joins: Bakunin (~Lindis@user/lindis)
[03:03:36] *** Quits: Mindscape (~Lindis@user/lindis) (Remote host closed the connection)
[03:03:37] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 265 seconds)
[03:04:50] <sartan> redoc isn't quite what i need, too much typing required. like a get /users returns list of user ids, click on user id, transforms to get/users/{user_id}
[03:05:26] <sartan> workflow for redoc/openapi/swagger would require copy-pasting that user ID from that list as freeform text, and browsing the interface to the 'get' section and typing the ID themselves
[03:07:15] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[03:08:52] *** Joins: DerpGusta_ (~quassel@user/derpgusta)
[03:09:16] *** Quits: DerpGusta (~quassel@user/derpgusta) (Ping timeout: 252 seconds)
[03:09:33] *** Joins: zeden (~zeden@user/zeden)
[03:14:59] *** Joins: The_Jag (~The_Jag@host-79-13-46-237.retail.telecomitalia.it)
[03:15:31] *** Quits: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de) (Ping timeout: 245 seconds)
[03:16:15] <AhmedAmerican> what the most speedy way to generate random 9 digits ?
[03:16:49] <nedbat> AhmedAmerican: random.randint(0, 999999999)
[03:17:06] <sartan> 100000000, 999999999
[03:17:09] <hrob> secure random digits?
[03:17:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[03:17:21] <grym> hrob: secrets
[03:17:22] <nedbat> sartan: you don't want the first digit to be zero?
[03:17:26] <KirkMcDonald> random.randrange(1_000_000_000)
[03:17:41] <sartan> well, if randint returns '15', that's fewer than 9 digits
[03:17:43] <hrob> I recall there was some concern about random stdlib.
[03:17:53] <hrob> may not be in v.3 python
[03:18:10] <KirkMcDonald> sartan: Sure it's nine digits, it's just that a number of them are zero.
[03:18:54] <sartan> random.sample(list(range(1,1000000000)) :P
[03:18:58] <hrob> sartan you want random 9 digits where every digit is > 0 ?
[03:19:09] <sartan> hrob: not my question.
[03:19:18] <SnoopJ> KirkMcDonald, why nine and not ninety trillion?
[03:20:12] <SnoopJ> hrob, the random module is good, but not for cryptographic use
[03:20:13] <InPhase> AhmedAmerican: If you need to generate many at once, np.random.randint scales to much faster.  The turnaround is at around 10 random values at once.
[03:20:20] <jwhisnant> sartan: fastapi is nice because it generates the openapi docs for you, based on the code you write.
[03:20:40] <sartan> jwhisnant: the part that is gently missing is listing items, then clicking on the result to get to the 'get' view for that item ID.
[03:20:47] <sartan> it requires copy-paste by the user
[03:20:57] <KirkMcDonald> SnoopJ: It's the logicians nine digits. It's nine digits in the same sense that if you have a barrel of apples, and someone asks, "Do you have three apples?" you can say "Yes."
[03:21:24] <SnoopJ> KirkMcDonald, good answer :)
[03:21:29] <sartan> it can get more annoying with /api/{foo}/bar/{baz}/bat/{id} with lots of copy-pasting. i'm hoping there's a 'magical' solution to reduce the clicky-copy-pastey stuff and understand nested relationships properly.
[03:22:03] <SnoopJ> sartan, I would probably ask #javascript too
[03:22:50] <sartan> Hmm i think a more appropriate term is i would like a 'drilldown' feature.
[03:23:04] <hrob> sartan sorry lol... yeah fastapi openapi ... its a bit of a trick in my experience to get it to do what I want.  Need use pydantic and mypy types and assign examples using Field( example="")
[03:23:18] <jwhisnant> sartan: I don't use the redoc view. I don't understand based on your description of the problem ...
[03:23:36] <hrob> sartan  its nice once it starts working
[03:23:38] <SnoopJ> sartan, is your routing tree really broad/deep
[03:23:40] <SnoopJ> ?
[03:23:40] *** Joins: jonthesnow (~xizhendu@240e:404:8510:f62f:dadc::30c0)
[03:23:45] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Read error: Connection reset by peer)
[03:23:51] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 245 seconds)
[03:24:22] <sartan> so in swagger/openapi/redoc, you can expose a GET /api/users which returns a list of strings which contain user IDS. Ideally, the user could click on one of these user IDs in the response, and whatever js frontend this is can navigate to the /api/users/{user_id} field automatically
[03:24:30] <sartan> instead of copy-paste
[03:24:32] *** Joins: george-smiley (~george_sm@user/george-smiley/x-3139219)
[03:24:59] <sartan> pre-populating that item ID
[03:25:00] <hrob> sartan   I think its a waste of time to use openapi... unless your services are huuuge,  and/or your collaborators dont bother to even write docs.
[03:25:27] <SnoopJ> hrob, neither is true at $employer and our customers like it (it's actually the reason we started using it!)
[03:25:41] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[03:25:55] <sartan> I'm trying to avoid writing custom code for this use case which is just going to be a crutch until i have the UI team beautify it, but i'd like a really crude yet usable api without lots of backreferencing item IDs in each api view
[03:25:55] <jwhisnant> hrob: my experience, same as SnoopJ's
[03:26:15] <SnoopJ> sartan, I'm guessing this would require some extra metadata that explains how the data coming out of a route can populate another, but it's certainly something that *can* be built
[03:26:27] <sartan> I also disagree that it's a waste sof time, it's super valuable.  I do swagger in many of my other projects, fastapi doing it automatically is just really sweet so i don't have to write my own spec files.
[03:26:37] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:26:54] <sartan> developers love swagger api docs =)
[03:27:13] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:27:17] <sartan> being able to temporarily use it in lieu of something else is just a stretch goal so i can exercise the business logic without spending hundreds of hours in javascript/html hell
[03:27:20] <hrob> sartan SnoopJ   its not that I dislike it... its just not worth the time for a few endpoints I feel.   And it requires cluttering data models with all kinds of assignments
[03:27:51] <jwhisnant> hrob: are you using "data models" that are not "pydantic models"?
[03:28:02] <sartan> there's a lot of value in strong typing of all the objects, and that typing translates middleware, validation is automatic, and api docs are free. typing is great, and when you can use types to gen docs == awesome!
[03:28:14] <hrob> jwhisnant  using pydantic ... but pydantic off course supports types too
[03:28:21] <hrob> a mix
[03:28:56] <SnoopJ> hrob, if you like writing your own request/response validation, by all means, use something else
[03:28:58] <jwhisnant> hrob: by other models I meant things like sqlalchemy, jsonschema, avro models, etc
[03:29:23] <sartan> it seems fastapi operates really nice with sqlalchemy, so you're not doing object type transformation between a db class and some api view class.
[03:29:27] <sartan> much less boilerplate
[03:29:34] *** Joins: aknot (~aknot@2603-900a-1503-17bb-4760-7646-13b1-ec8d.inf6.spectrum.com)
[03:29:47] <hrob> sartan, jwhisnant, SnoopJ   the great value I found so far for pydantic is validation -- for that reason Im now a fan of pydantic
[03:29:49] <SnoopJ> I believe you can technically opt out of the ORM parts
[03:30:07] <jwhisnant> there is a pydantic-sqlalchemy binding (idk how well it works)
[03:30:11] <sartan> i'm not sure if i really need a db as the state can be recreated by just restarting the app
[03:30:15] <sartan> i'm thinking about it
[03:30:57] <SnoopJ> hrob, I guess I don't understand what kind of clutter you're talking about, unless you're doing workarounds that looked like the last one I saw
[03:31:04] *** Quits: computeiro (~Wender@189.37.66.146) (Remote host closed the connection)
[03:31:21] <sartan> leaning more toward something like redis for object storage and distributed reactors on clients, still tooling out this part. one server, about a dozen clients, but clients need to react in realtime to db/keystore changes.  there's some websocket support but only as a server, not as a client in starlette
[03:32:00] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[03:32:06] <sartan> anyway, not even sure what i'm talking about anymore.
[03:32:13] *** Joins: Celeo (~Celeo@user/celeo)
[03:32:20] <hrob> SnoopJ yeah exactly  that one Dict[ myType, myOtherType] = Field( example = {} )   all over the place... Im not sure yet if its worth it lol
[03:32:40] <hrob> love the Dict[myType, myOtherType]   for validation
[03:33:51] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[03:33:51] <hrob> the typing stuff is getting a little beyond what I hoped from python originally -- hard to read, or understand I feel
[03:35:31] *** Quits: Celeo (~Celeo@user/celeo) (Client Quit)
[03:36:28] <hrob> im still wondering if good old duck-typing is not in most cases the most readable approach
[03:37:10] <hrob> autodocs with openapi is also wasting quite a bit of time.... so I was thinking... hmmm maybe its best with very big and dynamic projects
[03:37:49] <hrob> but then every developer has to be educated on how to correctly set type hints and examples
[03:37:57] <SnoopJ> hrob, you don't seem not-sure, you seem very decided!
[03:38:03] <hrob> lol
[03:38:13] <hrob> I love it and hate it so far
[03:38:24] <hrob> miss writing docs myself
[03:38:59] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[03:39:23] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 264 seconds)
[03:40:19] <hrob> but the magical typehint validation is cool... but not so transparent too...   its crazy stuff to go from being told ducktyping is the way in python.... then this... its cool yeah, but a funny mix now
[03:40:43] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[03:41:01] <SnoopJ> it's definitely not intuitive
[03:41:04] *** Quits: nomic (~nomic@185.198.243.184) (Quit: Leaving)
[03:41:14] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[03:41:21] *** Quits: BSaboia (~bsaboia@177.37.198.218) (Quit: This computer has gone to sleep)
[03:41:31] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[03:41:38] <hrob> JS has the same trend with TypeScript.... just a funny unexpected direction for me
[03:42:35] <hrob> Im resisting adopting trends and the flow I guess
[03:42:46] *** Joins: amo (~amogorkon@port-92-196-126-224.dynamic.as20676.net)
[03:45:46] *** Joins: dba (uid502594@id-502594.hampstead.irccloud.com)
[03:46:00] *** Quits: amogorkon (~amogorkon@port-92-196-19-82.dynamic.as20676.net) (Ping timeout: 260 seconds)
[03:46:11] *** Quits: george-smiley (~george_sm@user/george-smiley/x-3139219) (Quit: Leaving)
[03:47:02] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[03:47:41] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 244 seconds)
[03:48:22] *** Lord_of_Life_ is now known as Lord_of_Life
[03:48:43] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e8ee-f9fa-2a3e-92d6.res6.spectrum.com)
[03:49:30] *** Quits: flokuehn (~flokuehn@87.123.247.77) (Ping timeout: 260 seconds)
[03:51:01] *** Joins: Disposeable-Nick (~Ident@user/disposeable-nick)
[03:51:20] *** Joins: chenqisu12 (~xirndc@183.217.203.91)
[03:51:22] *** Joins: flokuehn (~flokuehn@87.123.247.92)
[03:51:47] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 260 seconds)
[03:51:57] <Disposeable-Nick> grawity, are you online perchance?
[03:54:38] <mat001> I'm dealing with custom objects (classes) in a dict. I have two classes: https://bpa.st/H3NQ. They go though some code steps where they are stored into a dict like so mydict[custom_obj1] = custom_obj2. Then I have another function that I pass custom_obj1 as the argument and the funct tries to get the value from the dict mydict[custom_obj1]. But I keep getting objet with memory addresses that msimatch and therefore value re
[03:54:39] <mat001> trieval from the dict fails.
[03:54:40] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[03:54:45] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[03:54:56] <mat001> I should not be comparing object's memory addresses, but teh cintent. Any tips...it's about dicts and custome objects
[03:55:38] <Yhg1s> mat001: you will need to implement __hash__ and __eq__ on the class of custom_obj1
[03:56:01] <Yhg1s> (you may want to consider using attrs instead, which can generate __hash__ and __eq__ and __init__ for you.)
[03:56:05] <mat001> Yhg1s: ok, and what goes into the two dunder methods? Are they empty?
[03:56:17] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[03:56:32] <Yhg1s> mat001: no, they need to do the correct thing to hash instances of your class, and to compare instances of your class to other things.
[03:56:38] <mat001> SnoopJ: my issue is becasue I'm not using attrs like yuo sugested earlier today when I asked about py structs :-p
[03:57:42] <mat001> Yhg1s: hmm, ok, I don;t know hat the dynders need to do, any example links perhaps?
[03:57:50] <mat001> (dunders)
[03:58:26] <Yhg1s> mat001: https://docs.python.org/3/reference/datamodel.html#object.__hash__ and https://docs.python.org/3/reference/datamodel.html#object.__eq__
[03:58:38] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:58:49] <Yhg1s> mat001: but really, use attrs.
[03:58:52] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:58:53] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:59:05] <sartan> def __hash__(self): return '%s:%s' % (self.flag_key, self.rule_key) can do it
[03:59:09] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:59:14] <Yhg1s> sartan: good god no.
[03:59:24] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:59:29] <Yhg1s> just 'return hash((self.flag_key, self.rule_key))', if you want to hash on those two items.
[03:59:37] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[03:59:43] <sartan> good god, no
[03:59:50] <mat001> lol
[03:59:59] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:00:04] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[04:00:10] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Ping timeout: 265 seconds)
[04:00:16] <mat001> are you guys gonna fight lol
[04:00:19] <nedbat> sartan: your method returns a string?
[04:00:28] <Yhg1s> mat001: no, it's fine for people to be wrong.
[04:00:31] <sartan> imo hash() is not deterministic enough
[04:00:41] <Yhg1s> sartan: this is _literally_ what hash() is for.
[04:00:43] <sartan> ther'es no cache of previous hashes
[04:00:48] <sartan> and collision is possible
[04:00:52] <sartan> been down this road, hoard
[04:00:58] <sartan> hard* even
[04:01:02] <mat001> Yhg1s: I know i was joking becasue you were giving each other the same response :-)
[04:01:16] <Yhg1s> sartan: sounds like you're completely misunderstanding __hash__ then.
[04:01:24] <sartan> i think you're misunderstanding hash()
[04:01:36] <elkclone> mmm
[04:01:38] <sartan> and __cmp__ equality when the hash does and will collide
[04:01:41] <Yhg1s> sartan: unfortunately for you, I know I'm not :)
[04:01:47] <Yhg1s> sartan: __cmp__ isn't a thing.
[04:01:51] <sartan> k
[04:01:53] <Yhg1s> sartan: I'm going to politely suggest you stop trying to give advice.
[04:02:01] <sartan> I'm polititely telling you to not be an asshole
[04:02:06] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[04:02:06] <sartan> You're just wrong =/
[04:02:07] *** ChanServ sets mode: +o Yhg1s
[04:02:20] *** Yhg1s sets mode: +b *!*sartan@user/sartan
[04:02:20] *** sartan was kicked by Yhg1s (Oh please.)
[04:02:24] *** Yhg1s sets mode: -o Yhg1s
[04:02:27] <nedbat> can we get to some actual information?
[04:02:38] <nedbat> oops
[04:02:59] <Yhg1s> mat001: If you're interested in finding out who's correct here, I recommend reading the docs I linked you to :)
[04:03:50] <nedbat> mat001: __hash__ needs to return an int, typically computed with hash() of the contents of your object
[04:03:51] <mat001> Yhg1s: yeah, or I'll just try your both approaches
[04:04:07] <nedbat> mat001: sartan's method was incorrect
[04:04:35] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 264 seconds)
[04:04:45] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[04:04:46] <nedbat> mat001: it will quickly produce an error: TypeError: __hash__ method should return an integer
[04:04:49] <Yhg1s> mat001: sure, you'll see sartan's code not actually working.
[04:05:00] <Disposeable-Nick> Wow, honestly, stuff like that makes me scared of asking simple basic questions.  Always seems to be some toxic gate keeping going on in large programming channels like this.
[04:05:19] <Yhg1s> Disposeable-Nick: unfortuantely the problem here isn't gatekeeping, it's people giving incorrect advice.
[04:05:28] <Yhg1s> (and refusing to learn why it's incorrect.)
[04:05:37] <nedbat> Disposeable-Nick: that was an unfortunate interaction for sure.
[04:05:49] <nedbat> Disposeable-Nick: we are friendly though, and we are still here
[04:06:51] <Disposeable-Nick> Honestly, when I find a nice, friendly and knowledgable person - I kind of always want to request them, lol.
[04:07:04] <Disposeable-Nick> But things don't work like that sadly
[04:07:58] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[04:08:35] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[04:09:30] *** Joins: jfcaron (~jfcaron@scp-8480-gw1.phys.sfu.ca)
[04:09:48] <Jong> Is abs_path = os.getcwd() + os.path.dirname(__file__). better than using pathlib.Path(__file__) ?
[04:10:17] *** Joins: Vision (~Vision@024-178-231-173.res.spectrum.com)
[04:10:22] <mat001> Yhg1s: So something ike this? https://bpa.st/IWKQ . Do I need __eq__ method too?
[04:10:37] <Yhg1s> Jong: no. if you have a need to avoid pathlib.Path (why would you?) the better alternative is os.path.abspath(os.path.dirname(__file__))
[04:10:44] *** Joins: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net)
[04:10:57] <Yhg1s> mat001: yes, you also have to define an __eq__ method.
[04:11:33] <nedbat> mat001: def __eq__(self, other): return (self.flag_key, self.rule_key) == (other.flag_key, other.rule_key)
[04:11:35] <jfcaron> I am trying to use an interface to a piece of hardware with Windows .dll, .lib, and .pyd files provided by the vendor.  Their instructions just say to copy these file "into the
[04:11:35] <jfcaron> DLLs directory under your computer’s Python installation directory", but their example is just C:\Python.  I installed Python with the MSI installer and I can't figure out where to copy the files so that importing works.  Is anyone familiar with python C-extensions on Windows to help me?
[04:11:46] <nedbat> mat001: are you trying to run on Python 2?
[04:11:55] <Jong> Yhg1s pathlib.Path(__file__) doesn't return the absolute path as I thought. Instead it returns path relative to cwd.  Issue is that if the file is in the cwd, then pathlib.Path(__file__).parents[1 crashes
[04:12:29] *** Quits: SallyAhaj_ (~SallyAhaj@user/sallyahaj) (Ping timeout: 244 seconds)
[04:13:15] <mat001> nedbat: well, on both Py 2.7 and 3.4-3.9
[04:13:17] <Yhg1s> Jong: pathlib.Path(__file__).absolute() then.
[04:13:26] <nedbat> mat001: if you don't mind me asking, why support python 2?
[04:13:35] <nedbat> (or 3.4 and 3.5)
[04:13:43] <Jong> Yhg1s  thanks!
[04:13:51] <Jong> os and path seem to have significant overlap
[04:13:58] <Jong> os and pathlib
[04:14:05] <Yhg1s> jfcaron: it'll be in %LocalAppData%\Programs\Python\Python$version
[04:14:31] <nedbat> Jong: os.path was the way to do it, now pathlib is the way to do it
[04:14:58] <mat001> nedbat: oh man. At my company we're just debating removing Py 2 and Py 3.4, 3.5. There might be dependencies to the core codebase that is still running mostly on Py2, supported by google. Slowly concerting to v3.
[04:15:17] <mat001> nedbat: but for this SDK I'm working on we'll remove 2.7 shortly...but still need it to work on 2 for now
[04:15:21] <jfcaron> Yhg1s: I don't have a Python directory in that space, so I should create it?
[04:15:49] <mat001> nedbat: does that complicate things?
[04:15:59] <Yhg1s> jfcaron: no.
[04:16:08] <Yhg1s> jfcaron: it's where the store Python should have installed it, as far as I know.
[04:16:10] <nedbat> mat001: no, i just wondered about inheriting from object
[04:16:29] <mat001> nedbat: yeah, taht for Py2
[04:16:50] <jfcaron> Yhg1s: I have C:\Users\MyUserName\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0
[04:16:54] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[04:17:05] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:17:22] <mat001> What does usually go into __eq__ method? What logic do you use, is it based on how __hash__ is done? Not sure I have a good hook what to put into _-eq__
[04:17:26] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[04:17:54] <Yhg1s> mat001: whatever you need to do to compare objects of that type to other objects.
[04:18:39] <Yhg1s> mat001: for using objects as dict keys, it's important that __hash__ and __eq__ use the same things. It's important that __hash__ returns the same thing for objects that compare equal (and helpful, but not required, that they return something different for objects that *don't* compare equal)
[04:18:48] <Yhg1s> mat001: the docs I linked you to try to explain this.
[04:18:59] <mat001> Yhg1s: yeah, reading...thx
[04:19:02] <Yhg1s> jfcaron: are you sure you installed it from the windows store then?
[04:19:21] <Yhg1s> jfcaron: what does 'py -c "import sys; print(sys.prefix)"' print?
[04:19:49] <Yhg1s> jfcaron: oh, you said MSI installer, not Windows store, my bad.
[04:20:08] <Yhg1s> jfcaron: It'll be somewhere in C:\Program Files or C:Program Files (x86) (depending on which one you installed) then.
[04:20:29] <Yhg1s> jfcaron: however, if this third-party package is giving you .pyd files and talking about C:\Python, I would be *very* skeptical about it being usable with Python 3.
[04:21:00] <jfcaron> Yeah the "py" executable is not found, but when I switch to python3.9 it says C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.9_3.9.2032.0_x64__qbz5n2kfra8p0
[04:21:15] <jfcaron> Their readme says it worked with python 3.8, and I'm using 3.9.
[04:21:41] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-25-65-93-17-96.dsl.bell.ca)
[04:21:46] <Yhg1s> jfcaron: hm, 'py' should come with the MSI installer. (It's a really good thing to install.)
[04:22:40] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:22:40] <jfcaron> Ugh, it's not letting me look or modify the WindowsApps folder
[04:23:01] <jfcaron> Next time I get a job offer from a lab that uses Windows for everything, remind me to ask for more perks.
[04:23:40] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:24:18] <Yhg1s> jfcaron: I don't know how you got it to install in that location, sorry.
[04:25:19] *** Quits: akk (~akk@75.161.146.115) (Quit: +++)
[04:28:30] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[04:29:14] *** Joins: summonner (~summonner@188.26.74.156)
[04:30:41] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[04:31:12] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[04:31:19] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[04:34:15] *** Quits: jfcaron (~jfcaron@scp-8480-gw1.phys.sfu.ca) (Quit: Client closed)
[04:34:43] *** Joins: qlixed (~qlixed@181.44.129.13)
[04:34:50] *** Joins: vlm (~vlm@user/vlm)
[04:36:23] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:def0:6996:2bb9:77) (Ping timeout: 264 seconds)
[04:36:33] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:37:19] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[04:37:50] *** Joins: Intelo (~Intelo@88.246.77.74)
[04:38:07] <enrh> nedbat, if someone were to crowd source funds for you to develop a Coverage.j2 (LOL, for Jinja) what would that number need to look like? :)
[04:38:21] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[04:39:24] <enrh> Also thanks for being my hero
[04:41:28] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[04:42:56] *** Parts: Intelo (~Intelo@88.246.77.74) ()
[04:45:10] *** Quits: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz) (Quit: Textual IRC Client: www.textualapp.com)
[04:45:43] <nedbat> enrh: funds probably aren't what would do it.  help would be a bigger help :)
[04:46:02] <nedbat> enrh: i'm no hero, i put my bug fixes on one leg at a time.
[04:46:24] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:4def:4e95:4385:6486)
[04:47:18] <enrh> Heros almost never realize they're heros... checks out
[04:47:29] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e8ee-f9fa-2a3e-92d6.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[04:47:56] *** Quits: Ninja3047 (~Ninja3047@3047.ninja) (Quit: bye)
[04:47:57] <nedbat> :)
[04:48:43] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[04:48:45] *** Joins: Ninja3047 (~Ninja3047@3047.ninja)
[04:49:20] *** Joins: BSaboia (~bsaboia@177.37.198.218)
[04:49:24] <nedbat> enrh: https://github.com/MrSenko/coverage-jinja-plugin ?
[04:49:33] <nedbat> looks like jinja needs to change some?
[04:49:57] <enrh> Uh I did not know about this!
[04:50:20] <enrh> I'm going to see if this can do the things :)
[04:50:22] <enrh> Thank you sir
[04:50:42] <nedbat> enrh: atodorov knows what he is doing, so the signs are that it won't do what you need
[04:50:44] *** Joins: fikran (~fikran@user/fikran)
[04:50:47] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 264 seconds)
[04:50:47] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 264 seconds)
[04:51:16] <enrh> You mean will do what I need?
[04:51:45] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 244 seconds)
[04:51:57] *** Joins: brabrax_ (~brabrax@user/brabrax)
[04:52:14] *** Quits: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net) (Read error: Connection reset by peer)
[04:52:21] *** brabrax_ is now known as brabrax
[04:52:32] <nedbat> enrh: from the readme: "This plugin appears to be collecting and reporting coverage information correctly. However Jinja2 does not provide enough information to map the collected data to the appropriate lines in the HTML template. For more information see Jinja #674."
[04:52:53] <nedbat> enrh: atodorov basically said he was stuck until jinja changed
[04:53:18] <nedbat> and then there's this: https://github.com/pallets/jinja/pull/674#issuecomment-549373909
[04:53:21] <enrh> Oh yeah I clicked on that bug seems it may have bee nresolved
[04:53:37] <enrh> Oh no not merged
[04:54:07] <nedbat> yeah, the signs aren't good
[04:54:23] <enrh> Dang
[04:57:36] *** Joins: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net)
[04:58:30] *** Joins: The_Jag_ (~The_Jag@host-87-19-40-26.retail.telecomitalia.it)
[04:59:16] *** Quits: audiobirb (~audio@2603-8081-1800-1546-2a4e-13bb-e70f-f3f7.res6.spectrum.com) (Ping timeout: 245 seconds)
[05:01:33] *** Quits: The_Jag (~The_Jag@host-79-13-46-237.retail.telecomitalia.it) (Ping timeout: 265 seconds)
[05:03:39] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[05:05:41] *** Quits: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 244 seconds)
[05:07:38] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e8ee-f9fa-2a3e-92d6.res6.spectrum.com)
[05:08:02] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[05:11:15] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[05:13:00] *** Joins: frost (~frost@user/frost)
[05:13:15] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:16:31] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Read error: Connection reset by peer)
[05:16:42] *** Joins: jwhisnant_ (~jwhisnant@user/jwhisnant)
[05:16:54] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[05:18:07] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:18:43] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:20:45] *** Joins: Bode_Cleu (~Code_Bleu@user/code-bleu/x-6939963)
[05:20:46] *** Joins: Alex123 (~Adium@47.176.169.186)
[05:22:45] *** Quits: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net) (Quit: Leaving)
[05:23:34] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[05:24:08] *** Joins: vak0160 (~vak0160@118.99.104.63)
[05:24:34] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[05:26:19] *** Joins: hexenbane (~hexenbane@2806:2f0:91a1:73a8:5ee0:1165:c6a1:6a03)
[05:27:54] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Quit: ZNC - https://znc.in)
[05:28:32] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[05:30:46] *** Joins: RiFo (~RiFo@user/rifo)
[05:31:42] *** Joins: djangoaddict (~djangoadd@2601:8c:c100:6820:493e:c6f2:75b9:764d)
[05:32:03] *** Joins: tWqaq (~tWqaq@180.169.35.114)
[05:32:26] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Quit: leaving)
[05:33:06] *** Joins: tanami (~q@irc.expert)
[05:33:22] <tanami> why do i need to invoke python's interpreter twice for it to run the updated version of a file?
[05:33:39] <hodapp> invoke it twice?
[05:34:03] <tanami> it seems to cache the old version of the file somehow
[05:34:20] <tanami> so I'll edit it and then I need to run the script twice for it to use the newer version
[05:34:33] <tanami> is there some internal cache i can disable?
[05:34:45] <KirkMcDonald> That is not normally what it does.
[05:35:08] *** Quits: Jefren1 (~Jefren@70.35.67.22) (Ping timeout: 244 seconds)
[05:35:40] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 260 seconds)
[05:36:05] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[05:36:06] <KirkMcDonald> There's a bytecode cache that is updated based on the timestamp on the file. If the source file's timestamp changes, then the cache is discarded.
[05:36:20] <tanami> ah I think it's vscode actually
[05:36:23] *** Quits: jonthesnow (~xizhendu@240e:404:8510:f62f:dadc::30c0) (Ping timeout: 264 seconds)
[05:36:26] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:36:29] <tanami> disabling the python extension fixed it
[05:36:31] <foo> I had someone put user auth stuff in a webhook rather than the users module. It would seem to me, from a code organization perspective, it makes sense to put auth() within the users module... because zen of python says "Namespaces are one honking great idea -- let's do more of those!" -> am I understanding that from zen of python accurately/
[05:36:35] <KirkMcDonald> Yeah, this sounds like some sort of IDE nonsense.
[05:36:37] <tanami> I guess it's running a linter or something
[05:37:04] *** Joins: Jefren1 (~Jefren@70.35.67.74)
[05:38:13] *** Quits: hrob (~hrob@31-209-232-158.dsl.dynamic.simnet.is) (Quit: Client closed)
[05:38:36] *** Joins: djapo (~archangel@user/djapo)
[05:38:53] *** Quits: djangoaddict (~djangoadd@2601:8c:c100:6820:493e:c6f2:75b9:764d) (Quit: Client closed)
[05:40:00] <foo> Actually, that may mean something else - after reading https://inventwithpython.com/blog/2018/08/17/the-zen-of-python-explained/
[05:41:18] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[05:41:30] *** Joins: djangoaddict (~djangoadd@2601:8c:c100:6820:b0cd:4fc3:1429:ea33)
[05:42:24] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:43:47] *** Quits: Jefren1 (~Jefren@70.35.67.74) (Ping timeout: 260 seconds)
[05:44:21] <enrh> Say I have  x: list[str] = ['1']  I know MyPy can tell me if I have code trying to x.append(1) for example. How can I check for it though? Curious how this is done. I think pydantic is doing it within their BaseModel, but I haven't found it yet.
[05:45:29] *** Joins: Jefren1 (~Jefren@70.35.67.179)
[05:46:14] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:698d:dceb:89d9:beb7) (Quit: Client closed)
[05:47:28] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 265 seconds)
[05:47:33] <SnoopJ> enrh, you'd look at `ThatClass.__annotations__["x"]` and check the assignment being performed against the annotation
[05:47:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[05:48:20] <SnoopJ> or __annotations__ in whatever namespace is appropriate (i.e. the module)
[05:48:36] *** Quits: k_sze (~k_sze@mail2.kalunite.net) (Quit: ZNC 1.8.2 - https://znc.in)
[05:49:11] *** Quits: R035N3R (~phobos@user/r035n3r) (Remote host closed the connection)
[05:49:23] *** Joins: k_sze (~k_sze@mail2.kalunite.net)
[05:49:36] <enrh> Hmmmm.. but a list wouldn't have that
[05:50:04] <SnoopJ> the annotation applies to the name
[05:50:22] *** Quits: Alex123 (~Adium@47.176.169.186) (Quit: Leaving.)
[05:50:22] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 265 seconds)
[05:50:46] <SnoopJ> at least as far as the runtime is concerned
[05:51:25] *** Quits: k_sze (~k_sze@mail2.kalunite.net) (Client Quit)
[05:52:35] *** Quits: aknot (~aknot@2603-900a-1503-17bb-4760-7646-13b1-ec8d.inf6.spectrum.com) (Ping timeout: 264 seconds)
[05:52:58] *** Quits: Jefren1 (~Jefren@70.35.67.179) (Ping timeout: 260 seconds)
[05:53:06] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:53:30] *** Joins: k_sze (~k_sze@mail2.kalunite.net)
[05:53:32] *** Joins: banal (~banal@202.51.76.50)
[05:56:13] *** Joins: Jefren1 (~Jefren@70.35.66.239)
[05:57:40] *** Quits: banal (~banal@202.51.76.50) (Quit: WeeChat 2.8)
[05:58:07] *** Joins: chris1 (~banal@202.51.76.50)
[05:58:42] *** Joins: Pandadub (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[05:59:51] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Remote host closed the connection)
[06:00:05] <enrh> Something like istype(x, 'list[str]') would be useful for <things>
[06:01:00] *** Quits: Jefren1 (~Jefren@70.35.66.239) (Ping timeout: 265 seconds)
[06:01:22] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:01:25] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:01:31] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[06:01:42] *** Quits: hel0 (~hel0@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[06:02:11] *** Joins: audio (~audio@2603-8081-1800-1546-4c20-8f2a-933f-a559.res6.spectrum.com)
[06:02:34] *** Joins: Jefren1 (~Jefren@70.35.67.18)
[06:02:54] <SnoopJ> enrh, what would it do for list["forward reference"] ?
[06:03:32] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[06:04:52] <enrh> I think I need to Google something before I even know what you're asking me..
[06:05:19] <enrh> Oh okay
[06:06:08] <SnoopJ> the point is that the subscript may not even refer to a type (yet)
[06:06:28] <SnoopJ> (or ever!)
[06:06:39] *** Quits: chenqisu12 (~xirndc@183.217.203.91) (Ping timeout: 260 seconds)
[06:07:17] <SnoopJ> enrh, you could check `all(isinstance(item, str) for item in x)` though
[06:08:09] <enrh> Right
[06:08:27] <enrh> MyPy just doesn't help me with Jinja2 templates
[06:08:40] * SnoopJ nods
[06:08:44] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[06:08:45] <phy1729> and what do you do about a = []; a.append(a)   I guess you could keep a set of id's seen, but type checking potentially recursive data structures sucks
[06:08:54] *** Quits: Player001 (~Player001@user/player001) (Quit: Quitting)
[06:09:10] <enrh> Good point
[06:09:22] <SnoopJ> phy1729, a list is easy enough to identify as not-a-str, but if the annotation allowed recursion it'd be an issue
[06:10:03] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[06:10:12] <phy1729> They don't at present (at least mypy doesn't support recursive types), but a proper JSON type ought to be recursive
[06:10:56] *** Quits: chris1 (~banal@202.51.76.50) (Quit: WeeChat 2.8)
[06:11:28] *** Joins: chris1 (~banal@202.51.76.50)
[06:11:33] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: Hay te huacho!)
[06:11:47] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 264 seconds)
[06:13:10] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:13:23] *** Quits: chris1 (~banal@202.51.76.50) (Client Quit)
[06:13:42] *** audio is now known as audiocat
[06:14:59] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[06:20:17] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[06:24:37] *** Quits: MrC (Ben@mrbenc.net) (Quit: Reboot, Updating ZNC, or Switching servers.)
[06:25:10] *** Parts: tanami (~q@irc.expert) ()
[06:26:59] *** Joins: MrC (Ben@mrbenc.net)
[06:27:55] *** Joins: thurs8060 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[06:28:04] *** Quits: erhandsome (~erhandsom@user/erhandsome) (Ping timeout: 265 seconds)
[06:28:09] *** Quits: dfch (~dfch@user/dfch) (Ping timeout: 258 seconds)
[06:28:54] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 260 seconds)
[06:29:33] *** Joins: Ditiris (~Ditiris@147.160.223.186)
[06:30:54] <Ditiris> I plan on sending camera-like frames at ~30FPS to a Python program. The data is 16-bit grayscale. What's the best/easiest way to display this in Python?
[06:31:28] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[06:31:56] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[06:32:20] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:35:30] *** Quits: NeoCore (~neocore@37.120.204.180) (Quit: Leaving)
[06:35:46] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e8ee-f9fa-2a3e-92d6.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[06:36:59] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[06:38:23] *** Quits: Jefren1 (~Jefren@70.35.67.18) (Ping timeout: 260 seconds)
[06:39:44] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[06:40:15] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[06:41:02] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[06:43:30] <SnoopJ> Ditiris, you may be interested in the Python bindings for GStreamer
[06:45:34] <Ditiris> SnoopJ, Thanks, I'll take a look
[06:46:36] <SnoopJ> Ditiris, oh, my mistake, I read "deploy" where you'd written "display." Are you looking to display the images for diagnostic purposes, or is this part of the application itself?
[06:46:48] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[06:47:12] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:f511:4a27:3395:8d89)
[06:48:28] <Ditiris> SnoopJ, Maybe both, but mostly diagnostic I suspect. The sole purpose of the application is to display the images.
[06:48:40] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[06:48:51] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 265 seconds)
[06:49:33] <electrostatic> Hwy would a thread report is_alive == True after joining without timing out?
[06:49:38] <electrostatic> *why
[06:49:52] <Ditiris> SnoopJ, This is a thermal-like sensor, so we want to demonstrate display of the 16-bit grayscale images. We've got a custom piece of hardware that will send the image frames as 16-bit grayscale to a PC.
[06:50:04] <Ditiris> SnoopJ, Over UDP
[06:52:22] *** Joins: Jefren1 (~Jefren@70.35.66.106)
[06:52:43] *** Joins: erhandsome (~erhandsom@user/erhandsome)
[06:52:53] *** Joins: zyweo (~Svew@user/zyweo)
[06:53:28] *** Joins: dfch (~dfch@user/dfch)
[06:55:31] *** Quits: emerent (~quassel@p200300cd57485562ba27ebfffed28a59.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[06:56:45] *** Joins: emerent (~quassel@p200300cd57485562ba27ebfffed28a59.dip0.t-ipconnect.de)
[06:57:19] <electrostatic> Seriously, how can a successful join() lead to a thread with is_alive() == True?  And no, it's not a daemon thread
[06:57:59] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 264 seconds)
[06:58:18] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[06:58:30] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[06:58:55] *** Quits: Jefren1 (~Jefren@70.35.66.106) (Ping timeout: 260 seconds)
[06:59:16] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[07:00:05] *** Joins: fikran (~fikran@user/fikran)
[07:03:52] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[07:04:57] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-059d-66fa-1d81-0fa5.res6.spectrum.com)
[07:05:21] <foo> I wonder, if a dict is read from JSON if that'll affect the ordering
[07:05:26] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[07:05:39] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[07:06:46] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[07:07:59] *** Quits: hexenbane (~hexenbane@2806:2f0:91a1:73a8:5ee0:1165:c6a1:6a03) (Quit: Leaving)
[07:09:56] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-059d-66fa-1d81-0fa5.res6.spectrum.com) (Quit: Leaving.)
[07:10:17] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Read error: Connection reset by peer)
[07:11:09] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[07:11:11] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 264 seconds)
[07:11:22] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[07:11:36] <KirkMcDonald> foo: I would expect the order to be maintained.
[07:12:02] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[07:12:39] <foo> KirkMcDonald: ah, thank you.
[07:17:26] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[07:18:29] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[07:18:45] <SnoopJ> Ditiris, hmm, well, GStreamer might still apply, but is more complex than building a demonstration using e.g. OpenCV
[07:19:37] <foo> I am trying to sort a dict by date, where key is the date: https://bpa.st/GCOA -> from most recent to oldest. I'm doing some code review and my hunch is this is not accurate.
[07:19:45] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[07:20:13] <foo> probably need to pass a key to sorted. Suck in that date via arrow
[07:21:14] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 265 seconds)
[07:21:42] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[07:23:08] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[07:23:26] *** Quits: audiocat (~audio@2603-8081-1800-1546-4c20-8f2a-933f-a559.res6.spectrum.com) (Ping timeout: 245 seconds)
[07:23:28] *** Quits: zaquest (~notzaques@5.128.210.178) (Quit: Leaving)
[07:23:45] <foo> Then again pprint.pprint(dict(sorted(friendly_timeline.items(), key=lambda scan_date: arrow.get(scan_date[0], ["M/DD/YY", "M/D/YY"])))) doesn't really work. /me investigates
[07:24:29] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[07:24:48] *** Joins: zaquest (~notzaques@5.128.210.178)
[07:25:06] *** Joins: Jefren1 (~Jefren@206.253.157.224)
[07:26:14] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[07:26:18] *** Quits: dermato (~dermatobr@cpe-70-114-219-76.austin.res.rr.com) (Ping timeout: 260 seconds)
[07:27:01] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[07:28:05] *** Joins: dermato (~dermatobr@cpe-70-114-219-76.austin.res.rr.com)
[07:30:34] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[07:31:05] *** Joins: akaWolf (~akaWolf@akawolf.org)
[07:31:09] *** Joins: djhankb (~djhankb@208.113.164.68)
[07:32:55] <electrostatic> I figured out my problem, I was being stupid
[07:33:21] <foo> electrostatic: Probably doing something stupid, not being stupid. But I digress.
[07:33:27] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Ping timeout: 260 seconds)
[07:33:36] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e8ee-f9fa-2a3e-92d6.res6.spectrum.com)
[07:33:47] *** Joins: eyepeetee (~aa@user/eyepeetee)
[07:34:00] <eyepeetee> hi, is checking for existence within a dict just as fast as checking for existence within a set?
[07:34:19] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e8ee-f9fa-2a3e-92d6.res6.spectrum.com) (Client Quit)
[07:35:01] *** Quits: Pandadub (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Remote host closed the connection)
[07:35:05] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:25] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:53] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[07:37:02] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 260 seconds)
[07:38:07] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 244 seconds)
[07:38:45] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[07:39:31] *** Quits: Jefren1 (~Jefren@206.253.157.224) (Ping timeout: 260 seconds)
[07:40:08] *** Joins: analoq (~yashi@user/dies)
[07:40:55] <foo> Ok, it really seems like this should work: https://bpa.st/KUGA - any two cents on what I'm missing/
[07:40:58] <foo> Thank you
[07:41:38] *** Joins: Jefren1 (~Jefren@70.35.66.113)
[07:42:07] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:43:08] *** Quits: nawcom (~nawcom@bulldadachat.com) (Quit: bye)
[07:44:35] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Ping timeout: 260 seconds)
[07:45:20] <SnoopJ> eyepeetee, it should be comparable yes
[07:45:28] *** Joins: nawcom (~nawcom@bulldadachat.com)
[07:47:11] <KirkMcDonald> foo: Is this a relatively recent version of Python?
[07:47:45] <foo> KirkMcDonald: yes, 3.7+
[07:48:43] <bparker> eyepeetee: https://wiki.python.org/moin/TimeComplexity
[07:48:44] <KirkMcDonald> foo: Oh, it's pprint()\
[07:48:54] <KirkMcDonald> foo: pprint() sorts the dict that's passed to it.
[07:49:07] <KirkMcDonald> foo: You can pass sort_dicts=False to make it stop.
[07:49:23] <foo> KirkMcDonald: AHHH.
[07:49:59] *** Quits: djangoaddict (~djangoadd@2601:8c:c100:6820:b0cd:4fc3:1429:ea33) (Quit: Client closed)
[07:50:05] <KirkMcDonald> (Because pprint() dates from the era before Python dicts maintained insertion order.)
[07:50:11] *** Quits: Jefren1 (~Jefren@70.35.66.113) (Ping timeout: 264 seconds)
[07:50:24] <foo> KirkMcDonald: I see. Well that explains that.
[07:50:53] <foo> KirkMcDonald: In this case, I believe (Pdb) dict(sorted(friendly_timeline.items(), key=lambda scan_date: arrow.get(scan_date[0], ["M/D/YY"]), reverse=True)).keys() is what I want.
[07:51:58] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[07:54:41] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[07:55:03] *** Quits: Bakunin (~Lindis@user/lindis) (Ping timeout: 276 seconds)
[07:55:42] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 260 seconds)
[07:56:47] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-25-65-93-17-96.dsl.bell.ca) (Ping timeout: 260 seconds)
[08:00:00] *** Joins: SallyAhaj_ (~SallyAhaj@user/sallyahaj)
[08:00:58] *** Quits: SallyAhaj_ (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[08:02:23] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Ping timeout: 260 seconds)
[08:02:47] *** Joins: avikalp (~avikalp@49.36.99.188)
[08:03:13] *** Joins: Jefren1 (~Jefren@70.35.67.225)
[08:04:10] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[08:08:01] *** Quits: electrostatic (~electrost@2601:600:8600:5a1:f511:4a27:3395:8d89) (Ping timeout: 245 seconds)
[08:10:47] *** Quits: Jefren1 (~Jefren@70.35.67.225) (Ping timeout: 260 seconds)
[08:12:11] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 260 seconds)
[08:12:28] *** Joins: bambams (~bambams@user/bambams)
[08:12:38] *** Joins: Jefren1 (~Jefren@70.35.66.124)
[08:13:04] <Saxtheowl> I have to add "va" to a string each time the character "e" happen, but not if there is 2 time "e", how to check the last character while iterating a string ?
[08:13:24] <Saxtheowl> here is my string dat_str = "hello, secret meeting tonight"
[08:13:35] <Saxtheowl> and I iterate like this for i in dat_str:
[08:13:36] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[08:14:09] *** Joins: nomic (~nomic@185.192.69.98)
[08:14:20] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[08:16:11] *** Joins: zebrag (~chris@user/zebrag)
[08:16:42] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[08:18:23] *** Quits: Jefren1 (~Jefren@70.35.66.124) (Ping timeout: 264 seconds)
[08:19:21] <nisstyre> Saxtheowl: you have to look at the next character if it's an 'e'
[08:19:38] <nisstyre> and then skip ahead if there is another e
[08:20:09] <nisstyre> it will depend on how you're iterating over the characters (for loop, while loop, recursion, etc)
[08:20:32] <Saxtheowl> I am using a for loop, but I dont know if its the best way
[08:20:44] <nisstyre> a while loop might be simpler
[08:20:50] <nisstyre> it depends
[08:21:10] *** Joins: Jefren1 (~Jefren@70.35.66.67)
[08:21:12] <nisstyre> just to be clear, "hello" -> "hvallo" ?
[08:21:26] <nisstyre> and "hello ee blah" -> hvallo ee blah" ?
[08:21:32] <nisstyre> is that right?
[08:21:39] <Saxtheowl> yes
[08:21:52] <Saxtheowl> I am gonna try with something like that
[08:21:53] <Saxtheowl> i = 0
[08:21:53] <Saxtheowl> while i	< len(dat_str):
[08:21:53] <Saxtheowl>     i += 1
[08:22:01] <nisstyre> yeah you could use a while loop, and have a string where you build up the result
[08:22:15] <nisstyre> or a for loop
[08:22:18] <nisstyre> it doesn't really matter
[08:22:29] <nisstyre> actually you can do this in a fancy way
[08:23:20] <nisstyre> list(zip("hello ee blah", "hello ee blah"[1:]))
[08:23:28] <nisstyre> gives you [('h', 'e'), ('e', 'l'), ('l', 'l'), ('l', 'o'), ('o', ' '), (' ', 'e'), ('e', 'e'), ('e', ' '), (' ', 'b'), ('b', 'l'), ('l', 'a'), ('a', 'h')]
[08:23:38] <nisstyre> now you see where the tuples have two 'e' characters
[08:23:41] <nisstyre> you just skip those :)
[08:23:44] <KirkMcDonald> You can also just use re.sub()
[08:23:57] <nisstyre> yes, I'm assuming you want to avoid regexes for this for whatever learning purposes
[08:25:09] *** Joins: djapo (~archangel@user/djapo)
[08:25:31] *** Quits: Jefren1 (~Jefren@70.35.66.67) (Ping timeout: 245 seconds)
[08:26:32] <Saxtheowl> yes, I try to keep it simple, so I can understand all of it
[08:26:38] <Saxtheowl> I ended up doing this https://paste.ofcode.org/KvWSDK5qynWJMwTP6ZHFwA
[08:27:01] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[08:27:31] *** Joins: Jefren1 (~Jefren@70.35.66.236)
[08:29:21] <KirkMcDonald> Saxtheowl: You will get an exception if the last letter of the string is a vowel.
[08:30:08] *** Quits: c10l (~c10l@user/c10l) (Quit: The Lounge - https://thelounge.chat)
[08:30:33] *** Joins: c10l (~c10l@user/c10l)
[08:31:01] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[08:31:16] *** Joins: jinsun (~quassel@user/jinsun)
[08:32:13] *** Joins: stranac (~stranac@195.29.239.126)
[08:32:15] *** Quits: Jefren1 (~Jefren@70.35.66.236) (Ping timeout: 260 seconds)
[08:33:53] *** Joins: Jefren1 (~Jefren@70.35.67.102)
[08:34:00] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:38:55] <nisstyre> Saxtheowl: https://gist.github.com/weskerfoot/cc385d4c5159b052eeebef5931edcbdb
[08:39:03] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 265 seconds)
[08:39:27] <nisstyre> (you could probably make that nicer by returning an actual string, but that's just an example)
[08:39:35] *** Joins: whatsupdoc (~whatsupdo@c-73-151-189-117.hsd1.ca.comcast.net)
[08:39:50] <nisstyre> "yield c" means it's a generator
[08:40:50] <whatsupdoc> why does for row in twodarray: row = [1,2,3] modify the 2D array?
[08:40:58] <Saxtheowl> my version seem to deal with all the case https://paste.ofcode.org/druZQFRLJ5hwLC4siXT7Ct
[08:41:15] <nisstyre> whatsupdoc: because python uses references to objects
[08:41:28] <nisstyre> so you're modifying them I guess
[08:41:37] <whatsupdoc> But if I pass it into a function, it doesn't?
[08:41:38] <nisstyre> I think there's a FAQ somewhere
[08:42:04] <nisstyre> whatsupdoc: https://nedbatchelder.com/text/names1/names1.html#1
[08:42:08] <Repiphany> `row = [1,2,3]` shouldn't modify the original array
[08:42:27] <Repiphany> `row[:] = [1,2,3]` might
[08:42:36] <nisstyre> I think they mean that "row" in the for loop does something unexpected
[08:42:43] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:43:04] <deltab> whatsupdoc: can you post the code somewhere and give us the url?
[08:43:35] <whatsupdoc> maybe it's because of list comprehensions lol
[08:43:40] <whatsupdoc> yea sure
[08:44:11] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[08:44:56] *** Joins: mickey8 (~user@user/mickey)
[08:45:24] <nisstyre> I think the link I shared answers most questions about unintuitive stuff
[08:45:29] <nisstyre> but there are probably still edge cases
[08:46:25] *** Quits: eyepeetee (~aa@user/eyepeetee) (Ping timeout: 260 seconds)
[08:47:13] <whatsupdoc> oh i see
[08:47:19] <nisstyre> what trips most people up is that some things are immutable, and some aren't
[08:47:29] <whatsupdoc> damn that's kinda tricky
[08:47:32] <nisstyre> and if you have say [[1],[2],[3]]
[08:47:36] <nisstyre> and you assign it to xs
[08:47:44] <nisstyre> then you can do x = xs[0]; x.append(3)
[08:47:47] <nisstyre> and modify the original xs
[08:47:55] <nisstyre> but if it's an integer and you do x += 2, it won't
[08:47:59] <nisstyre> since integers are immutable
[08:48:01] *** Joins: jazzy2 (~jaziz@user/jaziz)
[08:48:01] <nisstyre> but lists aren't
[08:48:09] <nisstyre> that's not your problem though
[08:49:16] <whatsupdoc> https://dpaste.org/jC69
[08:49:40] <nisstyre> whatsupdoc: you never initialize tot
[08:49:40] <whatsupdoc> So, I guess m is not really changing, it's just that I'm assigning it to row and then appending row
[08:49:41] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 265 seconds)
[08:49:58] <whatsupdoc> line 6?
[08:50:07] <nisstyre> what is tot supposed to do?
[08:50:14] <whatsupdoc> anyway i have no questions
[08:50:15] <whatsupdoc> lol
[08:50:22] *** Joins: upsala (~zcb@185.213.155.160)
[08:50:23] <whatsupdoc> it's the sum of the row
[08:50:27] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[08:50:30] <nisstyre> oh you're just using it for convenience
[08:50:55] <whatsupdoc> isn't sum(row) O(N) in python? I don't wanna call it twice I guess
[08:51:05] <Repiphany> You're not keeping a reference to the original list `m`, how do you know it's being modified
[08:51:08] <nisstyre> sure, I just expected tot to refer to something else
[08:51:14] *** Joins: _Ev (~ev@user/ev/x-8999918)
[08:51:17] <whatsupdoc> it's not being modified
[08:51:51] <domhnall> nisstyre: I'd guess it's short for 'total'
[08:51:54] <nisstyre> whatsupdoc: so what is the expected output and actual output?
[08:51:57] <nisstyre> domhnall: yeah
[08:52:26] *** Joins: csm3105 (~csm3105@31.4.136.62)
[08:52:27] <whatsupdoc> it works like I want it to
[08:52:38] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:53:17] *** Joins: Dunce (~Dunce@gateway/tor-sasl/dunce)
[08:53:38] <nisstyre> whatsupdoc: you should call "row" something else to avoid confusion I guess
[08:53:50] *** Quits: csm3105 (~csm3105@31.4.136.62) (Read error: Connection reset by peer)
[08:53:52] <whatsupdoc> row is confusing? why?
[08:54:16] <nisstyre> whatsupdoc: you're shadowing the other "row"
[08:54:30] <whatsupdoc> oh, yes, i know, i changed it
[08:54:49] <deltab> is it intentional that you drop the row when its total is zero?
[08:55:24] <whatsupdoc> yes
[08:55:40] <nisstyre> deltab: it would divide by zero
[08:55:56] <_Ev> I am practicing working with API's with the napster API. I can make get requests so I know my authentication/headers is working. I have tried quite a few variables for the data json dict:   https://bpa.st/JP3A
[08:56:09] <_Ev> Requesting assistance*
[08:56:22] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 260 seconds)
[08:56:27] <deltab> nisstyre: yeah, but the current alternative is ignoring the row completely
[08:56:33] <nisstyre> which is fine
[08:57:18] <deltab> I asked because it's not obvious to me what the appropriate result would be
[08:57:33] <nisstyre> technically n/0 is supposed to be NaN in the floating point spec
[08:57:39] <nisstyre> but python raises an exception instead
[08:57:53] <johncs> I can't remember what this is called, but some languages have an operator like `?.` that will only access a member if the object isn't null.  Does Python have this? Ex: `None?.a` would be `None` but `some_object?.a` would be equivalent to `some_object.a`
[08:57:58] <domhnall> whatsupdoc: Thank you for sharing the code. In time though, use 'obvious' variable names, esspecially early on in habit.
[08:58:06] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[08:58:40] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:a1cc:f344:a47d:7d01)
[08:59:02] <whatsupdoc> what's so bad about my variable names lol?
[08:59:09] <domhnall> though that snippet could've just been typed on the fly so...we rather focus on what it does.
[08:59:14] <nisstyre> whatsupdoc: just the shadowing, that can lead to bugs
[08:59:34] <nisstyre> like if you have a really long body in your loop or something
[08:59:43] <nisstyre> you could forget that you have a different reference
[08:59:49] <nisstyre> or something along those lines
[08:59:53] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[09:00:11] <nisstyre> I think most linters will warn you about it
[09:01:01] *** Quits: Dunce (~Dunce@gateway/tor-sasl/dunce) (Remote host closed the connection)
[09:01:11] *** Quits: Ditiris (~Ditiris@147.160.223.186) (Ping timeout: 260 seconds)
[09:01:57] *** Quits: PixelRobot (~PixelRobo@139.47.80.69) (Remote host closed the connection)
[09:02:09] <johncs> Ah there we go, finally stumbled on the right words to search for. The answer is no. https://pypi.org/project/pep505/
[09:02:31] <foo> meh, my dictionary is getting out of order. Somehow.
[09:02:42] <domhnall> lol
[09:02:46] <foo> I wonder if the sqlalchemy orm is rewriting the JSON and causing it to lose its order.
[09:02:55] <foo> Can't seem to figure out where/why this is happening.
[09:03:03] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[09:04:31] <_Ev> I might have misformatted with too many {}
[09:06:47] *** Quits: infernix (nix@2a02:22a0:bbb1:d500::2) (Ping timeout: 246 seconds)
[09:07:43] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[09:08:11] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 260 seconds)
[09:09:15] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:6403:b890:94ac:4253)
[09:09:37] *** Joins: fikran (~fikran@user/fikran)
[09:11:06] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[09:12:16] *** Joins: kia (~kia@user/kia)
[09:14:11] *** Quits: zyweo (~Svew@user/zyweo) (Ping timeout: 264 seconds)
[09:17:39] *** Quits: avikalp (~avikalp@49.36.99.188) (Read error: Connection reset by peer)
[09:17:39] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Remote host closed the connection)
[09:19:38] *** Quits: kia (~kia@user/kia) (Remote host closed the connection)
[09:21:28] *** Joins: avikalp (~avikalp@49.36.99.188)
[09:21:57] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[09:24:56] *** Quits: whatsupdoc (~whatsupdo@c-73-151-189-117.hsd1.ca.comcast.net) (Quit: Client closed)
[09:25:21] <deltab> foo: are the pairs in the right order is you don't call dict?
[09:25:26] <deltab> *if
[09:26:48] <deltab> foo: oh, looks like pprint rearranges them itself
[09:27:29] *** Joins: manti7 (~manti7@176.10.104.94)
[09:28:24] <deltab> compare  print(dict(b=1, a=2))  and  pprint.pprint(dict(b=1, a=2))
[09:31:42] <_Ev> Where am I going wrong on this post request?:  https://bpa.st/JAZA
[09:32:11] <_Ev> Formatting or submission issue on line 20 or 22?
[09:33:23] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 260 seconds)
[09:33:24] *** Quits: manti7 (~manti7@176.10.104.94) (Read error: Connection reset by peer)
[09:33:32] <stranac> _Ev: i'm pretty sure data should be a dict and not a json string
[09:34:59] *** Joins: infernix (nix@spirit.infernix.net)
[09:35:19] <stranac> _Ev: oh, and if you're supposed to submit jsn, you should be using the json parameter, not data
[09:36:08] *** Joins: mei (~mei@user/mei)
[09:36:35] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 260 seconds)
[09:36:47] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[09:37:26] *** Quits: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com) (Ping timeout: 260 seconds)
[09:37:41] *** Joins: manti7 (~manti7@176.10.104.94)
[09:37:52] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[09:39:34] *** Quits: anonymeowo (~anonymeow@185.213.154.243) (Quit: Konversation terminated!)
[09:39:42] *** Joins: Nact (~l@host-85-27-120-251.dynamic.voo.be)
[09:40:01] <_Ev> Appreciate the info stranac. Think' I've tried every variation now. Assuming it's a lack of permissions issue and inaccurate reporting at this point.
[09:40:26] <_Ev> it does work with curl though so that cannot be true. Oh boy.
[09:41:08] <foo> deltab: yeah, pretty sure that's not in the picture here. Will double check though, thanks
[09:42:15] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 260 seconds)
[09:42:34] *** Joins: Enitin (~Enitin@82.102.22.84)
[09:43:30] <hexology> _Ev: what is the equivalent (working) curl invocation?
[09:43:32] <hexology> _Ev: what is the equivalent (working) curl invocation?
[09:43:35] *** Joins: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com)
[09:43:36] <hexology> oops, sorry if that double-sent
[09:44:05] <hexology> ah, it's right at the top :)
[09:44:36] <hexology> fwiw the request looks fine. it seems like it just didn't like the content of the request
[09:45:43] <deltab> lacking tracks?
[09:46:02] *** Joins: carl--- (~carl-@185.103.188.130)
[09:46:17] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[09:46:35] <deltab> _Ev: tried setting the content-type?
[09:46:40] <_Ev> hexology:   https://bpa.st/2AUQ
[09:46:43] *** Joins: whatsupdoc (~whatsupdo@c-73-151-189-117.hsd1.ca.comcast.net)
[09:46:50] <deltab> maybe it's assuming url-encoded form data
[09:46:55] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 260 seconds)
[09:47:07] <whatsupdoc> Hi, are numpy questions allowed?
[09:47:10] <hexology> that's a good catch deltab
[09:47:12] <_Ev> deltab:  Yea, no dice
[09:47:21] *** Quits: seednode4 (~seednode@user/seednode) (Quit: Nihil supernum.)
[09:47:29] <_Ev> Will try again in case disorganized.
[09:47:51] <hexology> did you try it as a literal python dict? `request.post(..., json={"playlists": {"name" : "Foobar", "privacy" : "public"}})`
[09:47:57] <supakeen> _Ev: Using data= in requests will automatically turn it into a x-www-form-urlencoded.
[09:47:58] <hexology> that should set content type, content length, etc.
[09:48:05] *** Joins: seednode4 (~seednode@user/seednode)
[09:48:18] <supakeen> What hexology says will send it as application/json (and handle the serialization for you).
[09:48:33] <hexology> there's probably a way to send raw bytes and not have it assume form data, though. right?
[09:48:39] <_Ev> Okay that worked
[09:49:14] <_Ev> I tuned headers into a one liner and now it's taking it. Maybe muliline didn't send properly
[09:50:02] <supakeen> No, it's about the content-type.
[09:50:05] <deltab> I suspect if you cahnge it back it'll stay working :-)
[09:50:07] <supakeen> (and the relevant encoding in the request body)
[09:51:01] <_Ev> Will thank you in a second, trying to break it
[09:51:06] <supakeen> hexology: Perhaps, I don't enjoy the API requests has chosen in this case, AFAIK if you pass a string and/or file-like object to the data argument it won't set the header for you but I am unsure if it percent-encodes.
[09:51:30] <Saxtheowl> I am trying to count each occurence of a character in a string then print the number and the character such as "aabbaa" would give "2a2b2a" my code is working but it does not count the last batch of character https://paste.ofcode.org/38i45FkvQALvwRn3fwj8tEw
[09:51:37] <hexology> whatsupdoc: yes
[09:51:57] <hexology> supakeen: same. i use httpx, but i work with json 99% of the time so for all i know httpx has the same confusing design
[09:52:31] <deltab> if you pass a string as data, there are many types that could be
[09:53:09] <supakeen> Yes, that's the confusing part in this way of doing the API :)
[09:53:28] <KirkMcDonald> Saxtheowl: The condition `i == len(dat_str)` will never be true. The loop condition is `i < len(dat_str)`, so the loop will always exit before i can equal the length.
[09:53:32] *** Joins: kosh (~kosh@user/kosh)
[09:53:39] <themill> I'm poking at some old tests that use «raise nose.SkipTest(reason)» quite a lot. Is there an idiomatic pytest replacement for that?
[09:53:43] <KirkMcDonald> Saxtheowl: You need to handle that final part after the loop has completed.
[09:53:55] *** Quits: avikalp (~avikalp@49.36.99.188) (Ping timeout: 260 seconds)
[09:54:03] <KirkMcDonald> Saxtheowl: Or, perhaps, check `i == len(dat_str) - 1`
[09:55:12] <_Ev> Ah, thank you deltab and hexnewbie. I forgot to add the word "Bearer" to my auth string and yea... The little things. Need to slow down.
[09:55:18] <_Ev> Appreciate you. Thank you.
[09:55:58] <whatsupdoc> What is the best way to swap columns in a 2d matrix in python?
[09:56:33] <deltab> whatsupdoc: how was the matrix made?
[09:58:16] *** Quits: ubert (~Thunderbi@178.115.41.93.wireless.dyn.drei.com) (Remote host closed the connection)
[09:58:19] <whatsupdoc> a list of lists
[09:58:25] *** Joins: avikalp (~avikalp@49.36.99.188)
[09:58:32] <whatsupdoc> I use numpy
[09:58:35] <Saxtheowl> https://paste.ofcode.org/35bYLcYdefTvPEsBDwKthXP it work but it is ugly
[09:59:16] <whatsupdoc> I guess I can transpose the array and then swap, but is there a way to do it without transposing?
[09:59:43] <whatsupdoc> Is it possible to move an entire row and an entire column
[10:00:54] <Repiphany> Multiply by the appropriate transformation matrix
[10:01:18] *** Joins: dvx (~dvx@185.63.97.64)
[10:02:11] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:03:52] *** Joins: d0ku (~d0ku@178.43.15.137.ipv4.supernova.orange.pl)
[10:05:07] *** Joins: SlaveGeek334269 (~SlaveGeek@gateway/vpn/pia/slavegeek334269)
[10:05:33] *** Joins: rendar (~rendar@user/rendar)
[10:06:50] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[10:08:32] <deltab> whatsupdoc: a[:, ::-1] ?
[10:09:44] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[10:09:55] *** Quits: whatsupdoc (~whatsupdo@c-73-151-189-117.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[10:09:58] *** Joins: tobybl (~tobybl@213.31.135.91)
[10:10:24] *** Joins: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul)
[10:11:29] *** Quits: Disposeable-Nick (~Ident@user/disposeable-nick) (Quit: Leaving)
[10:11:37] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[10:12:22] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[10:12:47] *** Joins: mickey8 (~user@user/mickey)
[10:13:01] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:13:13] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1)
[10:13:29] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:a1cc:f344:a47d:7d01) (Quit: Client closed)
[10:17:43] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 260 seconds)
[10:18:26] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Ping timeout: 245 seconds)
[10:18:36] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:5bb3:c8db:2d88:d225)
[10:18:53] *** Joins: whatsupdoc (~whatsupdo@c-73-151-189-117.hsd1.ca.comcast.net)
[10:19:01] <whatsupdoc> What is a[:, ::-1]?
[10:20:31] <deltab> indexing the first axis in forward order and the second in reverse
[10:20:41] *** Joins: AlanMD (~AlanMD@86.121.179.183)
[10:21:02] <zamba> hi! i'm using anyio and connect_tcp to connect to a tls-enabled listener.. the problem is that the certificate is not verified correctly.. it seems like you need to explicitly add it to a local store before communication is allowed to proceed.. does anyone know if there's an option to "accept all certificates"?
[10:22:08] <whatsupdoc> is this python basic? or is it numpy addon?
[10:22:27] <deltab> whatsupdoc: a combination
[10:22:43] <whatsupdoc> never seen a ,
[10:22:55] <deltab> that's added by numpy
[10:22:56] <kosh> whatsupdoc, python has those structures but I think only numpy, pandas and things with multdimensional arrays use it
[10:23:26] <deltab> right: no built-in multidimensional arrays
[10:23:43] <kosh> you can do a[::-1] in normal python but not a multdimensional version
[10:24:15] *** Joins: chele (~chele@user/chele)
[10:24:21] <kosh> all numpy really does for that is extends the normal slicing in 1d to nd
[10:25:34] *** Quits: nomic (~nomic@185.192.69.98) (Quit: Leaving)
[10:26:26] <KirkMcDonald> The comma just means it is a tuple.
[10:26:42] <KirkMcDonald> You can for example use tuples as keys in a dict in this way: d = {}; d[1, 2] = 'foo'
[10:27:11] *** Joins: OnceMe (~stefan@user/onceme)
[10:27:19] <KirkMcDonald> But slice objects aren't hashable (probably for exactly this reason), so you can't literally use that multidimensional slice syntax with a dict.
[10:27:38] <OnceMe> what is best practice to reuse db connection in python? should I declare global db variable in settings.py and import it between different python files?
[10:28:06] <whatsupdoc> why does this fail on a 2d array? x[1], x[0] = x[0], x[1]
[10:28:12] <meejah> OnceMe: no, pass the db reference to whatever needs it
[10:28:14] <whatsupdoc> i'm just trying to swap rows
[10:29:09] <whatsupdoc> it makes both rows equal to x[1]
[10:29:20] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[10:30:31] <Repiphany> x[[0, 1]] = x[[1, 0]]
[10:30:35] *** Joins: palasso (~palasso@user/palasso)
[10:31:17] <Repiphany> The first assignment to x[1] happens before x[1] on the right is evaluated
[10:31:47] <OnceMe> so each method needs to have def method(connection, cursor, ....) ?
[10:32:47] <IceMichael> hi
[10:33:25] <meejah> OnceMe: yeah, or encapsulate database stuff in a class and have methods on that class
[10:33:25] <IceMichael> why is it "fine" / idiomatic to have tons of classes and functions in one file in Python while it is considered bad practice in almost any other programming language? I can live with both versions, but struggle a bit to find the root cause of this policy
[10:33:45] <OnceMe> any example of db encapsulation ?
[10:33:50] <OnceMe> to create singleton or what?
[10:34:11] *** Joins: ubert (~Thunderbi@178.115.41.93.wireless.dyn.drei.com)
[10:34:14] <meejah> OnceMe: just self.connection is the db connection, so def method(self, ...) can do self.connect.<db stuff>
[10:34:18] <KirkMcDonald> IceMichael: I don't know about "almost any other." But I'd point to something like Java, were the language requires each class to be in its own file, and classes are essentially the language's only unit of modularity.
[10:34:38] <IceMichael> KirkMcDonald: that's exactly my point
[10:34:47] <kosh> java is kind of weird on that one
[10:34:48] <meejah> IceMichael: often having related classes "together" is nice / easier to read /
[10:35:05] <IceMichael> yeah, but in Python it's put to an extreme usually
[10:35:16] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[10:35:17] <kosh> if classes are highly related I would tend to put them in the same file so long as they are not very long
[10:35:21] <kosh> especially dataclasses
[10:35:25] <KirkMcDonald> IceMichael: I'd submit that Java is the weird one, here.
[10:35:35] *** Joins: Ilyu (~quassel@78.202.228.230)
[10:35:37] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:35:40] <IceMichael> KirkMcDonald: Java is no exception. It's generally considered good style to also live this approach in C# or C++
[10:35:50] <IceMichael> there ARE some exceptions
[10:36:04] <meejah> IceMichael: i've seen plenty of c++ with "related" classes together
[10:36:09] <KirkMcDonald> IceMichael: Part of it is that Python conflates source files with modules, which is to say with namespaces.
[10:36:42] <IceMichael> meejah: there is a ton of shitty C++ code :) but if they are related, it can make sense. However, usually, putting all classes in one header creates quite some compile time burden. If you do not always need all classes, some separation is highly recommended
[10:36:59] <KirkMcDonald> IceMichael: Whereas, to pick another example, C++ can spread the defintion of a namespace all over the place, which gives a bit of flexibility in code organization that Python lacks.
[10:37:12] <IceMichael> KirkMcDonald: yeah, but you could also use packages and have modules for particular classes
[10:37:25] <IceMichael> KirkMcDonald: again, packages?
[10:37:28] <KirkMcDonald> IceMichael: Or you have something like Go, where the unit of modularity is a package, which corresponds with a *directory* of source files.
[10:37:33] <meejah> "from module.class_name import ClassName" gets boring though
[10:37:52] <IceMichael> meejah: that would never be the approach
[10:38:05] <IceMichael> or would it hm
[10:38:11] <IceMichael> also a good argument, yeah
[10:38:16] <IceMichael> you could use * but meh
[10:38:18] <meejah> well, that's what you get now .. and KirkMcDonald's point too
[10:38:31] <IceMichael> still don't get Kirks point
[10:38:35] <IceMichael> as said, Python has packages
[10:38:36] <KirkMcDonald> IceMichael: Yes, but this still means that each Python module is its own namespace. And combining multiple Python modules into a single namespace isn't merely unidiomatic, but highly surprising and prone to causing confusion.
[10:38:54] <IceMichael> ah
[10:38:55] <meejah> IceMichael: "foo.py" defines a module "foo"
[10:38:56] <IceMichael> indeed
[10:39:03] <IceMichael> good points, guys
[10:39:30] <IceMichael> what I like about the single-class approach in C#/Java/... is usually: if I am looking for a class, it's very clear that I need to include/import ThatClass.h
[10:39:43] <IceMichael> that said, C# anyways auto-includes all that stuff, well
[10:40:10] <IceMichael> this practice, by the way, is also pursued a lot in Obj-C/SWIFT or most UI applications (JS/TS)
[10:40:15] <IceMichael> there are many more examples
[10:40:23] <IceMichael> but yeah, the module argument in the Python case makes a lot of sense
[10:40:30] <BrenBarn> I find the one-class-per-file approach really weird
[10:40:35] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[10:40:36] <KirkMcDonald> JavaScript is a whole *other* collection of issues.
[10:40:38] <BrenBarn> my impression is that in those languages classes tend to be larger and sort of heavier-duty
[10:40:41] <KirkMcDonald> When it comes to importing things.
[10:40:45] <BrenBarn> but I'm not sure which direction that causality goes there
[10:40:47] <IceMichael> BrenBarn: then it would be bad style
[10:40:55] <KirkMcDonald> Like, how many ways does JavaScript have to import things at this point? Four?
[10:40:56] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[10:41:04] <IceMichael> SRP and no-god-classes still counts, clearly
[10:41:13] *** Quits: AlanMD (~AlanMD@86.121.179.183) (Quit: IRC Client)
[10:41:15] <IceMichael> KirkMcDonald: different topic, I did not say, JS is beautiful :)
[10:41:45] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:42:31] <kosh> if the classes are highly related I would prefer they be in one file, especially really short ones
[10:42:54] <kosh> some of my  data classes are only a few loc long
[10:43:05] <kosh> and it makes sense to keep them with the class that uses them
[10:43:12] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0dd-69.dhcp.inet.fi)
[10:45:15] *** Quits: _Ev (~ev@user/ev/x-8999918) (Ping timeout: 260 seconds)
[10:46:20] <IceMichael> kosh: yeah, I can agree on that
[10:46:25] <kosh> javascript is a truly horrible language, one of the circles of hell involves maintaining javascript code
[10:46:39] <IceMichael> what puzzles me a bit is tons of functions, classes in files like serializer.py or models.py in frameworks like django
[10:46:39] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[10:46:46] <IceMichael> kosh: agreed. TS is a bit better
[10:46:57] <whatsupdoc> How do you grab a submatrix in numpy?
[10:47:01] <kosh> thankfully I don't do web stuff and probably never will again
[10:47:34] <whatsupdoc> supppose i want to grab the first 3 columns of a matrix
[10:47:45] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[10:48:06] <kosh> a[:,:3]
[10:48:10] *** Joins: vladoski (~vladoski@2001:b07:add:d406:5d32:b63c:acef:817e)
[10:48:15] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[10:49:25] *** Joins: Leonarbro__ (~Leonet@user/leonarbro)
[10:49:33] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 265 seconds)
[10:49:42] *** Joins: cheater (~Username@user/cheater)
[10:50:17] *** Quits: ubert (~Thunderbi@178.115.41.93.wireless.dyn.drei.com) (Quit: ubert)
[10:52:35] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 264 seconds)
[10:53:11] *** Quits: Leonarbro_ (~Leonet@user/leonarbro) (Ping timeout: 264 seconds)
[10:54:11] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[10:54:43] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[10:55:38] *** Joins: Payam (~Payam@138.106.57.131)
[10:58:22] *** Joins: ExeciN (~ExeciN@user/nicexe)
[10:59:13] *** Joins: txtsd (~txtsd@user/txtsd)
[11:00:27] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[11:00:37] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:00:46] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:00:55] *** Joins: srhm (~srhm@user/srhm)
[11:01:46] *** Quits: sharperguy (~sharpergu@fnord.cryptophone.de) (Ping timeout: 245 seconds)
[11:02:27] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[11:02:36] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 265 seconds)
[11:03:34] *** Joins: sharperguy (~sharpergu@89.244.125.157)
[11:04:13] *** Joins: ubert (~Thunderbi@178.115.41.93.wireless.dyn.drei.com)
[11:05:18] *** Quits: seednode4 (~seednode@user/seednode) (Quit: Nihil supernum.)
[11:05:43] *** Joins: seednode4 (~seednode@user/seednode)
[11:08:17] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:08:25] *** Quits: Gerula (~Gerula@user/gerula) (Read error: Connection reset by peer)
[11:08:49] *** Joins: Gerula (~Gerula@user/gerula)
[11:09:59] <BrenBarn> JavaScript is an abomination
[11:10:06] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:10:20] *** Joins: whatsupdoc46 (~whatsupdo@c-73-151-189-117.hsd1.ca.comcast.net)
[11:10:33] *** Quits: whatsupdoc (~whatsupdo@c-73-151-189-117.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[11:11:51] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:11:54] *** Quits: avikalp (~avikalp@49.36.99.188) (Read error: Connection reset by peer)
[11:12:06] *** Joins: parv (~quass@user/parv)
[11:15:07] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:15:51] *** Joins: mcglk_ (~mcglk@131.191.49.120)
[11:16:07] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:16:18] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[11:16:22] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[11:16:46] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[11:17:48] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:17:54] *** Joins: e2m4n (~ezman@user/e2m4n)
[11:18:00] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[11:18:08] *** Quits: djapo (~archangel@user/djapo) (Remote host closed the connection)
[11:18:14] *** Quits: mcglk (~mcglk@131.191.49.120) (Ping timeout: 260 seconds)
[11:18:58] *** Joins: fikran (~fikran@user/fikran)
[11:19:09] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[11:19:22] *** Joins: djapo (~archangel@user/djapo)
[11:21:29] *** Joins: mrwick (~mrwick@user/mrwick)
[11:21:56] *** Quits: sharperguy (~sharpergu@89.244.125.157) (Ping timeout: 265 seconds)
[11:22:07] *** Quits: vladoski (~vladoski@2001:b07:add:d406:5d32:b63c:acef:817e) (Ping timeout: 260 seconds)
[11:23:59] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0dd-69.dhcp.inet.fi) (Read error: Connection reset by peer)
[11:26:13] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[11:26:13] *** Joins: vladoski (~vladoski@93-47-225-6.ip114.fastwebnet.it)
[11:27:24] <tsujp> give an int `i` can I have a lamba run `i` times?
[11:27:47] <tsujp> like, as part of the lambda itself and not a lambda wrapped in a for loop
[11:30:50] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[11:31:28] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0dd-69.dhcp.inet.fi)
[11:33:35] <deltab> tsujp: yes, with a list comprehension etc.
[11:34:25] *** Quits: zepolen (~zepolen@2a02:587:8625:db90:7403:55bd:fb54:a40f) (Ping timeout: 260 seconds)
[11:35:38] <rindolf> tsujp: do you mean f(f(f(... ?
[11:35:49] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:36:04] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.3)
[11:37:19] *** Joins: zepolen (~zepolen@2a02:587:863d:d8c0:6f81:2331:b342:9e3b)
[11:38:18] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 260 seconds)
[11:38:39] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:38:43] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[11:39:50] <rindolf> similar to https://duckduckgo.com/?q=church+numerals&atb=v140-1&ia=web
[11:40:24] *** Joins: brelod (~me@90.244.150.142)
[11:40:26] *** Quits: death916 (~death916@user/death916) (Ping timeout: 244 seconds)
[11:41:40] <lambda> tsujp: do you want to loop or recurse?
[11:41:56] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:42:22] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[11:42:30] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[11:43:12] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[11:43:21] <deltab> IceMichael: Java has been one-class-per-file from the start, so the parser can be told to read exactly one class from a file. Python didn't have classes originally, and they're still optional; and a class definition is a runtime statement that creates a class object and assigns it to a name. It'd take extra work in Python to prevent multiple classes being defined, and Python tends not to do that
[11:44:30] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[11:45:28] <lericson> java has classes inside of classes these days
[11:46:14] <deltab> yeah; still one top-level class per file though?
[11:46:43] *** Joins: TMan459 (~TMan459@068-187-099-141.res.spectrum.com)
[11:48:08] <lericson> i believe so
[11:48:35] *** Joins: plastico (~plastico@neomutt/plastico)
[11:48:49] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:49:35] <deltab> my understanding of inner classes is that they're mainly used as containers for callbacks
[11:50:24] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[11:50:42] <lericson> i believe there are record types and such also
[11:51:00] *** Quits: mickey8 (~user@user/mickey) (Ping timeout: 276 seconds)
[11:51:01] <lericson> anywaoy
[11:51:03] <lericson> -o
[11:51:29] <deltab> thanks
[11:52:39] *** Quits: dba (uid502594@id-502594.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[11:54:46] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:55:25] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[11:57:05] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[11:57:38] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[11:59:01] *** Joins: Naan (~Naan@user/naan)
[11:59:01] *** Quits: gitly (~gitly@85.255.232.230) (Ping timeout: 244 seconds)
[12:00:10] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[12:00:38] <mawk> is there an easy way to do "regex quoting"
[12:00:49] <mawk> quote a string so that it's innocuous for use in a regex
[12:01:05] *** Joins: gitly (~gitly@148.252.128.114)
[12:01:06] <mawk> replace . to \. and [ to \[ and so on
[12:01:11] <hexnewbie> mawk: re.escape('|')
[12:01:32] <mawk> ah nice
[12:01:51] <mawk> it's special for python regex I guess, but that will probably mostly work in an awk regex
[12:01:54] <mawk> thanks
[12:02:55] <whatsupdoc46> hi, i have a matrix and i'm trying to insert a new row (make it the 3rd row of the matrix). what's the easiest way to do this?
[12:03:24] <lericson> whatsupdoc46: a numpy matrix?
[12:03:40] <whatsupdoc46> yes
[12:03:49] <mawk> concatenate maybe
[12:04:03] <mawk> along the axis 0
[12:04:04] <lericson> numpy.insert probably?
[12:04:49] <mawk> if it's just a new row concatenate or insert work as well, if you want to have a row in between other then use insert
[12:04:50] <lericson> np.insert(arr, index, row, axis=0)
[12:05:01] *** Joins: slav0nic (slav0nic@python.su)
[12:05:05] <whatsupdoc46> ok
[12:05:05] <lericson> for appending there is np.append() btw
[12:05:17] <lericson> you should know though that appending is expensive, as is inserting
[12:06:32] <mawk> probably inserting is more expensive than appending
[12:06:45] *** Joins: avikalp (~avikalp@49.36.99.188)
[12:07:03] <lericson> how do you figure?
[12:07:16] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Remote host closed the connection)
[12:07:25] *** Joins: mike18 (~geri@216.200.232.252)
[12:07:32] <mawk> inserting needs to shift elements, appending does not
[12:07:37] <mike18> hi why is there an else case in this example here? https://docs.python.org/3/library/concurrent.futures.html#threadpoolexecutor-example
[12:07:46] <lericson> i believe they both reallocate the entire array and copy the contents
[12:07:50] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[12:08:00] <lericson> mike18: as opposed to what?
[12:08:07] <mawk> ah you're right
[12:08:12] <mike18> it looks a bit weired exception else
[12:08:23] <lericson> mike18: else of a try clause runs if no exception occurs
[12:08:26] <mike18> i would add a continue after the exception
[12:08:33] *** Joins: fassl (~fassl@2a02:8388:1987:9380:c4ee:81c5:625a:a215)
[12:08:42] <mike18> and remove the else
[12:08:52] *** Joins: Metalsutton (~Metalsutt@101.100.152.253)
[12:09:07] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[12:09:36] <lericson> there are many things wrong with that trivial piece of code :p
[12:09:43] <lericson> like the anti-pattern except Exception as e
[12:13:14] <tsujp> ive copied one of the example plots for matplotlib here https://matplotlib.org/stable/gallery/lines_bars_and_markers/barh.html#sphx-glr-gallery-lines-bars-and-markers-barh-py and added 'plt.savefig('test.png')' and then 'plt.close()' but I don't see a file called 'test.png' anywhere
[12:13:19] <tsujp> anyone know why? shouldn't this work?
[12:13:24] *** Quits: vak0160 (~vak0160@118.99.104.63) (Quit: Leaving)
[12:13:48] *** Joins: Enitin (~Enitin@82.102.22.86)
[12:14:37] <parv> I understand the purpose of "finally" to do something regradless of any (non)exception. When is "else" appropriate?
[12:14:52] <lericson> when no exception occurred, parv
[12:15:14] <lericson> tsujp: you have to savefig() before the show()
[12:15:28] <tsujp> i don't want to show the figure though, or is show still required..?
[12:15:31] <lericson> but you should still see a file i guess
[12:15:36] <tsujp> like I dont wanta  gui window to popup and show the figure
[12:15:40] <lericson> oh
[12:15:47] <lericson> savefig is fine
[12:16:19] <parv> lericson, So "try" something; if that succeeds, do something "else" TOO if no exception?
[12:16:22] <tsujp> oh it was putting it in /home
[12:16:27] <tsujp> hmm time to give it an absolute path hoho
[12:17:06] <lericson> yes parv
[12:17:12] <lericson> it's an unfortunate name if you ask me
[12:17:26] <lericson> you can think of it as an "else" to the except clauses
[12:17:39] <parv> lericson, Thanks.
[12:17:49] <lericson> since try: else: doesn't make any sense :p
[12:17:56] *** Joins: arinov (~arinov@213.194.126.155)
[12:17:59] <lericson> ditto for: else: but that is a different matter
[12:18:31] *** Quits: OMGOMG (~bobrobert@poppy.ifi.uio.no) (Ping timeout: 258 seconds)
[12:19:01] <lericson> in fact the way else is used in try/except/else, for/else, while/else, is really the opposite of else
[12:19:09] <lericson> it would make more sense to call it try/except/also, for/also, while/also
[12:19:18] <parv> lericson, Yeah.
[12:19:34] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[12:19:38] <lericson> i guess you can creatively pronounce else into also :p
[12:19:47] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[12:20:00] *** Quits: Ilyu (~quassel@78.202.228.230) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[12:20:54] *** Joins: mickey8 (~user@user/mickey)
[12:20:58] <tsujp> I can get the current path to the executing file with `Path(__file__)` is there an OS independent way of appending a folder to that? Like if I only cared about linux I could just add `/some-folder` but on Windows that'd break
[12:21:02] <parv> lericson, Would you say committing a database transaction would be better suited in "else" block, instead of near-last statement of "try" block?
[12:21:27] <lericson> definitely in an else or after the try block
[12:21:34] <lericson> in fact i would use a context manager
[12:21:38] <hexnewbie> As confusing the else: on for/while is, since you're only ever going to be using it with ‘if ...: break’, you can read it as an else to that if
[12:21:38] <lericson> with transaction(): change()
[12:21:41] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:22:01] <lericson> tsujp: mypath / 'subfolder'
[12:22:25] <hexnewbie> That is, from English point if view ‘for every apple in the bunch, if we find a red apple eat it, else throw the bunch’
[12:22:31] <lericson> hexnewbie: the argument is that if/else blocks are never both executed
[12:22:51] *** Joins: Ilyu (~quassel@78.202.228.230)
[12:23:06] <lericson> whereas every other (ab)use of else really means "also if not stopped"
[12:23:20] <tsujp> lericson `Path(__file__ / 'charts')` doesn't work
[12:23:30] <lericson> tsujp: Path(__file__) / 'charts'
[12:24:32] <lericson> hexnewbie: and that else clause in your english example is, i would argue, connected to the if, not the for
[12:24:37] <tsujp> hmm that breaks being able to call stuff like `.with_name` now though lericson
[12:25:02] <lericson> what do you ean
[12:25:11] <lericson> (mypath / 'sub').with_name('sub2')
[12:25:12] <lericson> no problem
[12:25:32] *** Joins: yotsuba (~yotsuba@176.12.237.66)
[12:25:42] *** Quits: Gerula (~Gerula@user/gerula) (Quit: Leaving)
[12:25:53] *** Joins: drogas (~drogas@jump2.jet.uk)
[12:26:11] <hexnewbie> lericson: Which is kind of what I'm saying. When you *are* using else in a loop, you're probably always going to have an if with a break inside of it, and you'd mentally connect the else with the if, not the for, even though it's technically the opposite.
[12:26:50] <lericson> hexnewbie: for x in L: try: op(x) except E: continue else: no_errors()
[12:26:50] <hexnewbie> Does not make it non-confusing, especially when you're trying to understand how that works, or when you see the else in any other context, but it's somewhat clearer
[12:26:51] <lericson> this is very common
[12:27:15] <tsujp> oh with_name is for folders.. how the heck do I then append a filename to this path so that it knows the last bit is a file name and not a folder name?
[12:28:12] <arkanoid> is there anything like typescript for python? I want compiled python, I mean statically checked type correctness before running the program
[12:28:17] <lericson> i appreciate the argument though hexnewbie, but i really think they should have picked a new name :p
[12:28:22] <hexnewbie> lericson: That else is connected to the try completely. Unless you meant it to be unindented, where ‘continue’ should be ‘break’
[12:28:45] <lericson> hexnewbie: i think both variants demonstrate the use of else that is not if-connected
[12:28:58] *** Joins: Ivii (~Ivyy@2001:a61:1304:3a01:ff77:5d07:db8e:c40c)
[12:29:32] <hexnewbie> Right, but the else to a try has the same semantics as an else to an if, so you *could* do the same mental trick with try.
[12:29:48] <hexnewbie> Except the else is to the except 😜
[12:30:19] <lericson> the else to a try runs /also/
[12:30:26] <lericson> the else to an if runs /otherwise/
[12:30:56] <tsujp> if I do `(Path(__file__) / 'charts' / 'testing123.png')` lericson it thinks testing123.png is a directory, I am reading Pathlib docs but I don't see how to tell it that testing123.png is a file name not a directory name?
[12:31:00] <jinsun> I read it as else to except, then it makes sense
[12:31:03] <hexnewbie> Yeah, because the else logically follows the except clauses
[12:31:21] <jinsun> else to fot for and while not so much
[12:31:23] <deltab> arkanoid: https://github.com/microsoft/pyright
[12:31:43] <lericson> tsujp: it thinks nothing like that
[12:31:46] <lericson> tsujp: it is just a path
[12:31:54] <lericson> a path can point to a file, a directory, a device, a symlink, anything
[12:32:08] <lericson> jinsun: 10:47 < lericson> you can think of it as an "else" to the except clauses
[12:32:15] <lericson> ;)
[12:32:26] <tsujp> oh okay so it's matplotlib that's being dumb here? lericson? I'm using that Path in `plt.savefig()`
[12:32:57] *** Joins: matkor (~matkor@ns0.ant.gliwice.pl)
[12:33:04] <lericson> you haven't really said what you expect to happen and what happens instead
[12:33:06] <lericson> so it's hard to help you
[12:33:46] <jinsun> if you really have a directory named testing123.png then matplotib should complain
[12:34:01] <jinsun> instead of rying to silently overwrite that
[12:35:29] *** Joins: zerothule (~eric@2601:602:8d80:4e50:1978:1e1a:34c8:1b9b)
[12:35:33] <parv> Does Path cache stat result whenever first file system function is called, say "exists"? Or, Is stat fetched every time for a file system operation?
[12:36:07] <lericson> every time, parv
[12:36:17] *** Quits: rendar (~rendar@user/rendar) (Remote host closed the connection)
[12:36:32] <lericson> i haven't checked but i would be VERY surprised if it kept some cache of its own
[12:36:44] *** Joins: sharperguy (~sharpergu@dancefloor-nat.fuckup.club.berlin.ccc.de)
[12:37:04] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:37:05] *** Joins: anonymeowo (~anonymeow@185.213.154.243)
[12:37:08] <parv> lericson, Thank you. Having some note on that would have helped in https://docs.python.org/3/library/pathlib.html
[12:37:38] <lericson> parv: why do you expect it to?
[12:37:44] *** Joins: rendar (~rendar@user/rendar)
[12:38:16] <arkanoid> deltab: cool! But what's the difference between pyright and mypy?
[12:38:34] <kosh> I really hope this gil removal works out https://lukasz.langa.pl/5d044f91-49c1-4170-aed1-62b6763e6ad0/
[12:38:37] <parv> lericson, That is what happens in Perl 5 for some set of operations. I wanted to know if similar happens in Python or not
[12:38:49] <deltab> arkanoid: I don't know the details
[12:39:37] <tsujp> lericson here's a paste (ignore the copy paste comments that's verbatim copied from matplotlib so should work) https://bpa.st/DTPQ -- the issue here is that (1) pathlib is not creating the `charts` folder, and (2) if I manually create the folder and re-run it `plt.savefig` fails with NotADirectoryError: [Errno 20] Not a directory:
[12:39:37] <tsujp> '/path/to/project/src/validation.py/charts' even though if I just do `ls $that_path` it works and is a directory
[12:39:46] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:a1cc:f344:a47d:7d01)
[12:40:30] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[12:40:40] <jinsun> arkanoid: they are different type checkers, mypy is kinda the "standard" because everyone uses that and it is under psf org, pyright is from microsoft
[12:40:42] <OnceMe> why is bad to declare sqlite connection as global var and use it across methods?
[12:41:10] <grawity> whoever said it's bad should've said why >_>
[12:41:41] <jinsun> arkanoid: pyright is faster and better usually though, they support new typing features and fix bugs much faster
[12:41:43] <grawity> but if those are class methods, then it should be a class attribute, no?
[12:41:51] <arkanoid> jinsun: thanks. But which one should I use? My project is getting large and I need to turn a very large script into a program. Without types I'm getting lost
[12:42:01] <OnceMe> grawity: it;s not class methods, they are simple methods
[12:42:12] <grawity> just functions then?
[12:42:14] *** Joins: Jonopoly (~Jonopoly@user/jonopoly)
[12:42:16] <OnceMe> yes
[12:42:18] <OnceMe> how django and flask handle this?
[12:42:22] <OnceMe> do they create some sort of singleton?
[12:42:47] <grawity> personaly imo, I just don't like globals in general – if you have functions that need a global, it's usually time to turn the whole thing into a class
[12:42:54] <jinsun> arkanoid: I use both, you can start with any one of those, both are good choices, and once you are done satisfying one of them, you can add the other one also
[12:42:59] <tsujp> lericson OH `validation.py` is in the name ARRGGGHHH wow im dumb today
[12:43:17] <grawity> hmm I don't know about flask though, it's one situation where I sometimes end up with global "connections'
[12:43:18] <deniska> OnceMe: typically frameworks create a connection per request
[12:43:20] <lericson> good stuff
[12:43:27] <lericson> parv: you're perl damaged eh
[12:43:30] <deniska> OnceMe: (or take it from a pool, which is more or less a perf optimization)
[12:43:40] <OnceMe> what about sqlite connection?
[12:43:45] <parv> lericson, Bite me
[12:43:48] *** Quits: phylaz (~phylaz@219.92-221-176.customer.lyse.net) (Quit: The Lounge - https://thelounge.chat)
[12:43:56] <tsujp> lericson thank you for the help too mate!
[12:43:57] <lericson> parv: one could opine that it is not the job of a scripting language to cache inode data, but rather the OS, .. :p
[12:43:58] <deniska> OnceMe: I don't think there's any reason to pool sqlite connections, they're cheap to create
[12:44:06] <lericson> tsujp: np
[12:44:08] <deniska> OnceMe: so, one connection per request
[12:44:11] <OnceMe> ok
[12:44:21] <OnceMe> so to recreate connection for each insert/select?
[12:44:29] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[12:44:35] *** Joins: phylaz (~phylaz@219.92-221-176.customer.lyse.net)
[12:44:47] <deniska> OnceMe: no, create a connection once a request handler starts, and close it once it ends, typically something like that is done via a middleware
[12:44:47] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 264 seconds)
[12:44:48] <jinsun> arkanoid: if you use vscode then the python extension from microsoft uses pyright internally, and you can enable the type checker in vscode settings, then vscode will yell at you as you type
[12:45:02] <OnceMe> deniska: how to achieve that?
[12:45:17] <deniska> OnceMe: depends on the frameworks you use
[12:45:20] <arkanoid> jinsun: how can two different external type systems be used at the same time?
[12:45:34] <arkanoid> are their syntax 100% overlapping?
[12:45:49] <deniska> OnceMe: if I'm lazy and it's just an endpoint or two I just write `con = get_me_sqlite_connection()` at the top and `con.close()` at the bottom of a route handler
[12:45:58] *** Quits: phylaz (~phylaz@219.92-221-176.customer.lyse.net) (Client Quit)
[12:46:06] <jinsun> arkanoid: yes the type checkers don't define the syntax, there are PEPs for that
[12:46:08] <OnceMe> deniska: its pure python, no framework
[12:46:35] <grawity> hmm though, class methods can be flask views, can't they
[12:46:50] *** Joins: shad (~shad@user/shad)
[12:46:50] <arkanoid> ok, got it. Which one would you suggest to start with?
[12:46:54] <jinsun> arkanoid: start from here to know the syntax https://docs.python.org/3/library/typing.html, it links to the peps too
[12:47:13] <deniska> OnceMe: then consider supporting middleware pattern, it's a useful thing for doing something http-related
[12:47:33] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-44c8-9d91-ebf0-9dd5.res6.spectrum.com)
[12:47:55] <braxas> is there some way to see everything in pypi that uses a specific package?
[12:48:03] *** Joins: phylaz (~phylaz@219.92-221-176.customer.lyse.net)
[12:48:31] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[12:48:56] *** Quits: mike18 (~geri@216.200.232.252) (Read error: Connection reset by peer)
[12:49:33] <gitesh> Do you know while doing flask or django, values sent to the template are converted to string?
[12:49:34] <deniska> OnceMe: and to answer the question "why is it bad to have a global sqlite connection object?" is because threads might be involved, and .commit() or .rollback() is something you call on the connection object
[12:50:00] <deniska> OnceMe: so you can accidentally .commit() half done changes made by another thread
[12:50:11] <braxas> https://www.wheelodex.org/projects/rdflib/rdepends/
[12:50:21] <jeho> got to use locking
[12:50:30] <jeho> transactions
[12:50:30] <OnceMe> deniska: what if I create one connection and pass conn to other methods which use it?
[12:50:37] <OnceMe> and there I get cursor, commit etc..?
[12:50:46] <OnceMe> and on the end of main() I just call conn.close() ?
[12:50:56] <parv> *ugh* Path.resolve() : ...  If strict is False, the path is resolved as far as possible and any remainder is appended without checking whether it exists ...💩
[12:51:12] *** Joins: ubert1 (~Thunderbi@178.115.41.93.wireless.dyn.drei.com)
[12:51:13] <deniska> OnceMe: are we still talking about http servers? :)
[12:51:28] <OnceMe> no
[12:51:31] <OnceMe> this is pure python script
[12:51:38] <deniska> OnceMe: but yeah, it's fine to pass a connection to functions which need it
[12:51:40] <OnceMe> which have main() and bunch of other methods
[12:51:55] <jeho> https://www.sqlite.org/threadsafe.html#:~:text=In%20this%20mode%2C%20SQLite%20can,multiple%20threads%20with%20no%20restriction.
[12:52:02] <deniska> OnceMe: in a quick top-to-bottom script you may as well have a global connection to be honest
[12:52:31] *** Joins: _Ev (~ev@user/ev/x-8999918)
[12:52:54] <OnceMe> deniska: what about this https://stackoverflow.com/a/6830296 ?
[12:52:54] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[12:52:56] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:52:59] <deniska> OnceMe: not having it as a global makes the thing easier to test, but we're probably not talking about something tests will be written for :)
[12:53:14] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[12:53:31] <jeho> if you use a serialized threading mode for sqlite .. if you have multiple threads.. it's probably the safest route
[12:53:42] <deniska> OnceMe: having something like get_connection() is a common pattern, although at this point it may as well just return a new connection instead of keeping a single one
[12:53:50] <_Ev> What is the proper way to split a string from a loop in a django template? Do I need to create a new list in the view :/ ?   https://bpa.st/UPYQ
[12:54:46] *** Joins: pr100 (~pr100@cpc92728-cmbg20-2-0-cust160.5-4.cable.virginm.net)
[12:56:12] *** Quits: ubert (~Thunderbi@178.115.41.93.wireless.dyn.drei.com) (Quit: ubert)
[12:56:13] *** ubert1 is now known as ubert
[12:58:59] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::2612)
[13:00:32] *** Quits: _Ev (~ev@user/ev/x-8999918) (Ping timeout: 265 seconds)
[13:00:45] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[13:01:32] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[13:01:50] *** Quits: yotsuba (~yotsuba@176.12.237.66) (Ping timeout: 260 seconds)
[13:02:38] *** Joins: yotsuba (~yotsuba@176.12.237.66)
[13:03:16] *** Joins: atom_ (~neutrino@2409:4072:890:6361:56b8:965b:785:7d1)
[13:03:21] <atom_> hello
[13:03:22] *** Quits: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se) (Ping timeout: 258 seconds)
[13:05:28] *** Joins: mickey8 (~user@user/mickey)
[13:08:51] *** Joins: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se)
[13:10:39] <OnceMe> deniska: what if I have two python files which use the same connection?
[13:10:56] <OnceMe> and get_connection() is singleton, and _connection is in global var like defined in example?
[13:10:59] <OnceMe> no issues with that approach?
[13:12:00] *** Joins: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de)
[13:12:38] *** Quits: whatsupdoc46 (~whatsupdo@c-73-151-189-117.hsd1.ca.comcast.net) (Quit: Client closed)
[13:13:26] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:18:10] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[13:18:50] *** Quits: yotsuba (~yotsuba@176.12.237.66) (Ping timeout: 260 seconds)
[13:23:14] *** Joins: orangeextract (~orangeext@user/orangeextract)
[13:24:21] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-44c8-9d91-ebf0-9dd5.res6.spectrum.com) (Quit: Leaving.)
[13:24:50] <rendar> https://bpa.st/HXQA -- i have this csv file, which with `csv.reader(string)` becomes that mess of lists you see below ..what's going wrong?
[13:24:56] <tsujp> what's the easiest way to calculate the cumulative mean over a list of ints? i.e. [0, 1, 0, 1, 1, 1] at pos 0 mean is 0, at pos 1 mean is 0.5, at pos 2 mean is 0.33 and so on
[13:25:02] <tsujp> does numpy have a one-liner for this?
[13:25:19] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[13:25:26] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-5464-73ae-0b70-823c.res6.spectrum.com)
[13:26:34] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[13:26:54] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[13:27:24] <The-Compiler> rendar: csv.reader expects an iterable of lines (like a file), i.e. you'd need to add a .splitlines() when passing a string
[13:27:56] <The-Compiler> rendar: also, csv.DictReader is a much nicer interface, IMHO
[13:28:24] <rendar> oh, ok
[13:28:27] *** Joins: fikran (~fikran@user/fikran)
[13:29:04] <arkanoid> jinsun: thanks for the hints
[13:29:20] *** Quits: LuKaRo_ (~LuKaRo@p4fc32190.dip0.t-ipconnect.de) (Quit: ZNC 1.8.2 - https://znc.in)
[13:30:04] <InPhase> rendar: pd.read_csv works out of the box on that.
[13:30:17] <rendar> i have a csv which contains `(GILT EDGED MARKET MAKERS\92ASSOCIATION)` ..as you can see there is that \92 strange character, whats that? and how can i clean the string?
[13:30:32] <InPhase> rendar: In most cases, pandas is the ideal go-to tool for working with tabular data.  It's worth trying.
[13:31:02] *** Joins: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder)
[13:31:10] <rendar> InPhase, yes, i'm absolutely planing to use pandas
[13:31:19] <rendar> but this is a quick-to-go test
[13:31:35] <InPhase> rendar: My quick tests are all with pandas.  ;)
[13:31:36] *** Joins: madprops (~hj8oijo@user/madprops)
[13:31:41] <pr100> yeah, although if all the fields are the same type you might be better off just with numpy - depends a bit on the use case
[13:31:52] <madprops> wondering if there's a more concise way to do this https://dpaste.org/J5OH
[13:31:54] <grawity> rendar: that looks like a fancy ’ encoded using one of the windows-125x charsets (aka "ANSI")
[13:32:04] *** Joins: LuKaRo (~LuKaRo@p4fc32190.dip0.t-ipconnect.de)
[13:32:09] *** Joins: evocatus (~evocatus@84.51.113.13)
[13:32:46] <grawity> rendar: that is, byte 0x92 is ’ in windows-125x; however, I'm less sure about whether the \92 escape is a standard CSV thing or not
[13:32:47] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 260 seconds)
[13:33:18] <rendar> i have also \99
[13:33:38] <rendar> and \94, \93, \96 ...how can i clean those characters?
[13:34:23] <lericson> "clean the string" is often a bad idea
[13:34:50] <lericson> people actually like pandas?
[13:35:14] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[13:35:56] *** Quits: Nact (~l@host-85-27-120-251.dynamic.voo.be) (Quit: Konversation terminated!)
[13:36:05] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[13:36:46] *** Quits: zerothule (~eric@2601:602:8d80:4e50:1978:1e1a:34c8:1b9b) (Ping timeout: 245 seconds)
[13:36:51] <atom_> madprops: defs.append(def) for def in sense for entry in lex_entry for .... in a try except block i guess
[13:37:44] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[13:38:39] *** Joins: Gaming4LifeDE (~Gaming4Li@a89-182-120-213.net-htp.de)
[13:38:59] <grawity> rendar: maybe something like https://paste.rs/dAo
[13:39:12] <grawity> hrm that's s/unquote/unescape/ would be a better name
[13:40:21] <rendar> there wasn't a built-in str function that does that?
[13:40:47] <grawity> are you asking about the string \99 or are you asking about byte 0x99
[13:41:30] *** Quits: Ilyu (~quassel@78.202.228.230) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[13:41:53] <Gaming4LifeDE> Hi. I want to program a REST API using flask with flask_restful or using FastAPI. Problem is that i need to run a long process and push the result to a sqlite db (which the main process needs to access too). How would i go about that? The API still needs to be responsive while the long process is running (it's calling an external process via
[13:41:53] <Gaming4LifeDE> subprocess.run)
[13:42:31] *** Joins: _Ev (~ev@user/ev/x-8999918)
[13:42:49] *** Joins: CaCode (~Cas@user/cacode)
[13:43:09] <parv> rendar, Given that you know the encoding of input, you could try converting to UTF-8 (or downgraded to ASCII)
[13:43:36] <_Ev> Apologies for disconnect after asking a question. Think I have finally resolved my networking issues. If I may impose once again, how should I properly iterate through a list while splitting each string like so?:  https://bpa.st/UPYQ
[13:44:03] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-5464-73ae-0b70-823c.res6.spectrum.com) (Quit: Leaving.)
[13:44:59] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:f0d7:b1d7:13ad:c435)
[13:45:57] *** Parts: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) ()
[13:46:23] <ldericher> hi there, can I 'clean' a poetry environment? i.e. uninstall any packages not needed by the current pyproject.toml?
[13:46:49] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:f0d7:b1d7:13ad:c435) (Client Quit)
[13:47:28] *** Quits: ubert (~Thunderbi@178.115.41.93.wireless.dyn.drei.com) (Remote host closed the connection)
[13:47:52] <_Ev> Research indicates it cannot be done inside the template. really have to make a new list :/ ?
[13:48:58] *** amo is now known as amogorkon
[13:49:19] *** Joins: Ilyu (~quassel@78.202.228.230)
[13:49:26] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:49:50] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[13:50:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[13:50:33] <Gaming4LifeDE> _Ev what parts of the split string do you need and where do you need them?
[13:51:08] <_Ev> Gaming4LifeDE:   account = accounts.split(':')[0]
[13:51:20] <_Ev> can just make another list "cleaned_accounts", but still, feels wrong.
[13:51:23] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Quit: this is not importent)
[13:51:42] <Gaming4LifeDE> _Ev that would mean you only want the part of the accounts string before the :
[13:51:43] <_Ev> for account in accounts... split at :
[13:51:47] <_Ev> Yep
[13:52:04] <Gaming4LifeDE> or are the accounts like "account1:account2:account3"
[13:52:20] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[13:52:21] <atom_> Gaming4lifeDE: im not a expert but thinking asyncio will help
[13:52:29] <_Ev> Nope, I want to return the accounts list with only the info before each :
[13:52:54] *** Joins: mickey8 (~user@user/mickey)
[13:52:54] <_Ev> for a in accounts:    print(a.split(':'))
[13:52:56] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[13:52:59] <Gaming4LifeDE> atom_ no iea honestly, especially with those libraries. fastapi was recommended here a few days ago
[13:53:00] *** Joins: legola (~legola@46.235.101.181)
[13:53:02] <_Ev> [0]
[13:53:14] <_Ev> for a in accounts:    print(a.split(':')[0]) *
[13:54:00] *** Joins: chris_99 (uid26561@id-26561.lymington.irccloud.com)
[13:54:17] <rendar> "ASX - NEW ZEALAND FUTURES & OPTIONS".capitalize() returns "Asx - new zealand futures & options" which is clearly not what i want, since New Zealand must have capital N and Z, what is the best solution for this?
[13:54:28] *** Joins: shla (~root@user/shla)
[13:54:32] *** Parts: shla (~root@user/shla) (The Lounge - https://thelounge.chat)
[13:54:35] <atom_> _Ev: a sample data for clarification pls
[13:54:47] <atom_> rendar: use str.title()
[13:55:22] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[13:55:31] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[13:56:07] <rendar> great, thanks
[13:56:33] <rendar> it works well, but in some strings, e.g. "Pundion Llc" i want "Pundion LLC" how could i customize title() ?
[13:56:46] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[13:56:46] <chris_99> Hi, i think i'm right in thinking the two main ways to create an interface to C code are python.h and cffi ? but for c++ code, boost.python would be something i should look at?  (it looks like cffi only works with c but not c++?)
[13:57:35] <atom_> rendar: title is built-in, u have to do it manully
[13:57:58] <_Ev> No the best example:  https://bpa.st/2ARA
[13:58:01] *** Quits: Jonopoly (~Jonopoly@user/jonopoly) (Quit: WeeChat 3.3)
[13:58:23] <grawity> feels like `account` should be turned into an object with fields
[13:59:27] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:10c3:5f4b:a3fe:148c)
[14:00:04] <atom_> _Ev: u want to update entries in the accounts list itself???
[14:00:36] *** Joins: lethu (~lethu@user/lethu)
[14:00:50] <parv> What are the opinions on using [] vs list() & {} vs dict()?
[14:01:06] *** Quits: sharperguy (~sharpergu@dancefloor-nat.fuckup.club.berlin.ccc.de) (Ping timeout: 260 seconds)
[14:01:21] *** Joins: sharperguy (~sharpergu@fnord.cryptophone.de)
[14:01:47] <parv> ... to initialize a variable with empty structure type
[14:02:00] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[14:02:19] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Quit: Leaving)
[14:02:20] *** dcaro is now known as dcaro_lunch
[14:02:24] *** Quits: shad (~shad@user/shad) (Ping timeout: 258 seconds)
[14:02:28] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:10c3:5f4b:a3fe:148c) (Client Quit)
[14:02:37] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:02:46] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:10c3:5f4b:a3fe:148c)
[14:02:58] <jinsun_> use the short syntax
[14:03:02] <zamba> how do i add CA certs to the CA store used by python?
[14:03:09] <zamba> python doesn't use /etc/ssl/certs?
[14:03:15] <Gaming4LifeDE> _Ev try if django can do {{ account | slice[account.index(":")] }}
[14:03:20] <atom_> parv: {} is a set not a dict, with bracket notations we can use one-liners
[14:03:28] <grawity> empty {} is indeed a dict
[14:03:33] <Gaming4LifeDE> _Ev absolutely not sure but worth a try
[14:03:34] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:10c3:5f4b:a3fe:148c) (Client Quit)
[14:03:46] <atom_> grawity: yeah sry
[14:03:50] <grawity> since it predates set literals
[14:03:51] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:10c3:5f4b:a3fe:148c)
[14:03:52] <_Ev> Gaming4LifeDE:  I had tried something similar but this is different, testing now.
[14:03:56] <Gaming4LifeDE> atom_ is a set not () ?
[14:04:13] <grawity> that's a tuple (which is ordered, like lists -- sets are unordered)
[14:04:19] <Gaming4LifeDE> ohh ok
[14:04:39] *** Quits: The_Jag_ (~The_Jag@host-87-19-40-26.retail.telecomitalia.it) (Read error: Connection reset by peer)
[14:04:44] *** Quits: mossman93 (~quassel@user/mossman93) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:04:44] <jinsun_> there is no syntax for empty set
[14:04:45] <deltab> rendar: do you have another source for the data? no algorithm is going to get that right for everything
[14:04:51] <jinsun_> you have to user set()
[14:05:18] <jinsun_> for not empty sets you can use {a,b,c}
[14:05:21] <rendar> deltab, nope :(
[14:05:25] *** Joins: The_Jag (~The_Jag@host-87-19-40-26.retail.telecomitalia.it)
[14:05:29] *** Quits: kenoba (~kenoba@user/kenoba) (Quit: The Lounge - https://thelounge.chat)
[14:05:29] <Gaming4LifeDE> i'm still not sure how to go about doing my api btw...  i can't be the first one trying to write a rest api which starts a long process in the background and pushes data to a db at the end
[14:05:31] <parv> And set() uses a list :-|
[14:05:55] <_Ev> Gaming4LifeDE:  No dice, but thanks. Will work with a new list and move on. Very curious though.
[14:06:05] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[14:06:22] *** Joins: mossman93 (~quassel@user/mossman93)
[14:06:24] *** Joins: kenoba (~kenoba@user/kenoba)
[14:06:30] <atom_> _Ev: https://www.online-python.com/Y4Fh8PaqEQ
[14:06:39] <parv> jinsun_, Thanks. That set initialization is new to me! had been using set([ ...] ).
[14:06:39] *** Quits: kenoba (~kenoba@user/kenoba) (Client Quit)
[14:06:43] *** Joins: Pickchea (~private@user/pickchea)
[14:06:45] <Gaming4LifeDE> _Ev eh, could have worked
[14:07:21] <Gaming4LifeDE> atom_ doesn't work in a django template apparently
[14:07:42] <_Ev> :/
[14:07:46] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[14:08:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:08:26] <atom_> then make accounts a genarator object of u need it only once
[14:08:30] *** Quits: tWqaq (~tWqaq@180.169.35.114) (Quit: Leaving)
[14:08:32] <atom_> if*
[14:08:32] <jinsun> parv: yeah you can create sets always without an intermediate list, set() for blank case, and that syntax for not blank case
[14:09:11] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:10c3:5f4b:a3fe:148c) (Ping timeout: 260 seconds)
[14:09:12] <parv> Wait ... {} is an empty freaking dict, but { a,b } is a damn set  *ugh*
[14:09:30] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 260 seconds)
[14:09:51] *** Joins: kenoba (~kenoba@user/kenoba)
[14:09:52] *** Parts: atom_ (~neutrino@2409:4072:890:6361:56b8:965b:785:7d1) (bye)
[14:09:56] <zamba> where is the python certificate store?
[14:10:06] <Gaming4LifeDE> parv a dict would be {"key": "value"}so it technically is different
[14:10:11] <deltab> yep, an ambiguity in the syntax
[14:10:24] <pr100> @parv  - yeah, it's really a historical hangover from when there were no set literals
[14:10:27] <parv> Gaming4LifeDE, Oh I know :-|
[14:10:28] <ldericher> can I have a `return` inside a Context Manager or does that break?
[14:10:38] <deltab> set() for an empty set btw
[14:10:54] *** Joins: analoq (~yashi@user/dies)
[14:11:12] <ksynwa> This is a stupid question so sorry about that. But I am writing a server with sanic that allows me to log in to it using github's oauth. Then I use the token I get to make some github API calls to get info about myself and store it in a database to do stuff with it later. Currently the setup works fine. But after logging in when I do API and db operations, I just sit there and watch a blank page as
[14:11:12] <deltab> oh, as mentioned a few times above
[14:11:13] <ksynwa> it's being done.
[14:11:36] <ksynwa> I would like to serve a page when it's being done but don't know to. Anyone has any clues? Feel free to ask more questions because I have been very vague.
[14:11:51] <ksynwa> But I don't know which details to include otherwise the messages would be too long.
[14:11:55] <grawity> parv: hey, at least it's not (foo,) for a 1-item tuple :(
[14:11:55] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[14:12:54] *** Quits: BSaboia (~bsaboia@177.37.198.218) (Quit: This computer has gone to sleep)
[14:13:10] <Gaming4LifeDE> ksynwa what would you want the page to be? I'd just show a loading animation and then start the process on the main thread
[14:13:21] <pr100> although you don't actually need the parenthesis for the tuple...
[14:13:31] *** Joins: rannnn8888 (~rannnn888@bzq-109-67-143-75.red.bezeqint.net)
[14:13:31] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[14:13:32] <ksynwa> Gaming4LifeDE: Yes something like that would be nice
[14:13:47] <deltab> ksynwa: I have similar things. You have basically two options: display a page containing a script or iframe and have that send a request that actually does the work, if it doesn't take more than 30 seconds, say
[14:13:52] <Gaming4LifeDE> just update the page with a loading spinner and then start the process
[14:13:53] <parv> grawity lol (not really)
[14:14:02] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:14:36] <pr100> ```>>> 1,
[14:14:36] *** Joins: shad (~shad@user/shad)
[14:14:37] <pr100> (1,)
[14:14:43] <jinsun> zamba: depends on the os, and the library you are using, if you are using stdlib then look at https://docs.python.org/3/library/ssl.html#ssl.create_default_context
[14:14:44] <deltab> ksynwa: or you can kick off a task on the server that sends status updates to the browser every so often
[14:14:49] <pr100> erk, formatting fail
[14:14:58] <grawity> now do that with a tuple as a function parameter
[14:15:22] <ksynwa> deltab: I would like to do something like that but I don't have experience on how to get it to work.
[14:15:25] * grawity still uses "foo %s" % (bar,) like a caveman
[14:15:30] <ksynwa> I will share the code that I use.
[14:15:46] *** Joins: computeiro (~Wender@189.37.68.20)
[14:15:55] *** Quits: computeiro (~Wender@189.37.68.20) (Read error: Connection reset by peer)
[14:16:01] *** Quits: fannagoganna (uid110488@id-110488.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[14:16:17] *** Quits: c10l (~c10l@user/c10l) (Quit: The Lounge - https://thelounge.chat)
[14:16:44] *** Joins: nomic (~nomic@185.198.243.251)
[14:17:22] *** Quits: rannnn8888 (~rannnn888@bzq-109-67-143-75.red.bezeqint.net) (Client Quit)
[14:17:23] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 265 seconds)
[14:17:32] <parv> Apparently "%" string formatting is rather forgiving if that would be just `"x %s" % y` (at least in 3.6)
[14:18:00] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[14:18:01] *** Joins: analoq (~yashi@user/dies)
[14:18:50] <grawity> unless y itself holds a tuple, in which case weird stuff happens instead of getting a str() or repr() of the value
[14:19:24] <ksynwa> This is what it looks like: https://termbin.com/ka4n
[14:19:25] <grawity> though I do use % y if I know for sure it's not going to be one
[14:19:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[14:19:28] * parv just likes lists more
[14:19:47] <ksynwa> I don't know how I can redirect first and then do the `await` operations, then refresh the page.
[14:20:08] <ksynwa> By redirect first, I mean redirect to a page with a loading animation.
[14:20:10] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:20:19] <ksynwa> WIth refresh, I mean show an updated page when the operations are done.
[14:21:26] *** Joins: c10l (~c10l@user/c10l)
[14:21:37] <parv> grawity, Ha! A TypeError # when y holds a tuple.
[14:21:38] *** Quits: c10l (~c10l@user/c10l) (Client Quit)
[14:21:40] *** Quits: Ilyu (~quassel@78.202.228.230) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:22:02] *** Joins: c10l (~c10l@user/c10l)
[14:22:35] <deltab> ksynwa: do it the other way round: first display the loading animation, then start the work
[14:22:46] <OnceMe> I have for user in users: where users = cursor.fetchall(), I get tuple indices must be integers not str, when I try user['id'] how to fix?
[14:23:01] <Yhg1s> parv: unless it's a one-element tuple, in which case it just does the wrong thing instead. (There's a reason we have str.format now.)
[14:23:03] <parv> I have not been comfortable enough yet to call a function inside a f-string
[14:23:04] <deltab> ksynwa: oh I see
[14:23:15] *** Joins: rannnn8888 (~rannnn888@bzq-109-67-143-75.red.bezeqint.net)
[14:23:20] <Yhg1s> OnceMe: your cursor is giving you rows as tuples, not as dictionaries.
[14:23:28] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[14:23:29] <OnceMe> how to get dictionaries then
[14:23:30] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[14:23:32] <OnceMe> row.names() ?
[14:23:38] <Yhg1s> OnceMe: how did you create the cursor?
[14:23:41] <OnceMe> cursor.fetchall().names() ?
[14:23:44] <grawity> parv: yeah, it can't distinguish "%s %s" % (a,b) from "%s" % y when y is a tuple
[14:23:45] <OnceMe> cursor = conn.cursor()
[14:23:51] <Yhg1s> OnceMe: and what is 'conn'?
[14:24:03] <OnceMe> connection = sqlite3.connection('db')
[14:24:13] <deltab> ksynwa: which part of that is slow? or is that elsewhere?
[14:24:20] <grawity> parv: (I know f-strings are more popular now, but often they don't look nearly as readable or pretty as %-formatting)
[14:24:35] *** Quits: nomic (~nomic@185.198.243.251) (Quit: Leaving)
[14:25:04] *** Joins: hemstock (~hemstock@68.71.244.6)
[14:25:10] <ksynwa> deltab: The four lines just before `return`. They take a lot of time if I do it for an account with a lot of repositories.
[14:25:11] *** Quits: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de) (Quit: jonaskabrink)
[14:25:13] <Yhg1s> OnceMe: https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.row_factory is the documented way of doing it.
[14:25:21] *** Quits: hemstock (~hemstock@68.71.244.6) (Client Quit)
[14:25:24] <ksynwa> or orgs with a lot of members.
[14:25:31] <parv> grawity, Perhaps. OTOH f-string really shorten whole length of the string formation
[14:25:34] <Yhg1s> OnceMe: do read the note after the code example.
[14:25:55] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[14:26:21] * mrwick finds '%' not at all pretty. but '{variable_name}' looks good
[14:26:22] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:27:57] *** Joins: nomic (~nomic@185.198.243.251)
[14:28:00] <deltab> ksynwa: okay, so move those to another request handler
[14:28:02] <parv> grawity, also won't have to worry about special tuple handling.
[14:28:28] *** Quits: nomic (~nomic@185.198.243.251) (Client Quit)
[14:28:32] <grawity> parv: it varies, I find that the length is usually the same, but it actually becomes harder to quickly glance over a string and see what it's about
[14:28:40] <grawity> parv: e.g. https://paste.rs/fGs
[14:28:44] <Gaming4LifeDE> TIL fastapi is asynchronous by default
[14:28:47] *** Joins: nomic (~nomic@185.198.243.251)
[14:28:47] <ksynwa> Okay deltab
[14:28:52] *** Joins: nomic2 (~nomic@185.198.243.251)
[14:28:52] *** Quits: nomic2 (~nomic@185.198.243.251) (Client Quit)
[14:29:20] <grawity> parv: maybe it's partly to do with vim's suboptimal syntax highlighting
[14:29:35] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[14:29:41] *** Joins: nomic2 (~nomic@185.198.243.251)
[14:29:42] *** Quits: nomic (~nomic@185.198.243.251) (Client Quit)
[14:29:49] <grawity> (it doesn't do anything to highlight the contents of { } inside a f"" literal)
[14:29:51] <parv> grawity, My problem with both str.format() & % formatting is that variables are far apart from their use
[14:29:51] *** Quits: nomic2 (~nomic@185.198.243.251) (Client Quit)
[14:30:14] *** Joins: nomic (~nomic@185.198.243.251)
[14:30:24] <grawity> yeah that's a problem when you have 3+ of them
[14:30:29] <patchie> using sqlalchemy and .execute("SELECT ..."), how can i store a huge table to one file for each row? should i use .fetchmany? and how?
[14:30:31] <parv> grawity, ... works ok for "short enough" strings
[14:30:39] *** Quits: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 260 seconds)
[14:31:33] <Gaming4LifeDE> patchie why do you need to store a huge table at once instead of processing the table row by row?
[14:31:54] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[14:32:01] <patchie> Gaming4LifeDE: well, i can do it one by one, how do i do that?
[14:32:22] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:32:52] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[14:33:07] <grawity> parv: likewise, f"" is great for simple substitutions like {name} -- no different from PHP's "foo {$bar}" or Ruby's "foo #{bar}" -- it's when someone tries to put a while {x[y].z()+t} into it "because they can" when it fails :(
[14:33:12] *** Joins: Enitin (~Enitin@82.102.22.85)
[14:33:32] <parv> grawity, Agree.
[14:33:40] *** Joins: frost (~frost@user/frost)
[14:33:59] <Gaming4LifeDE> patche see the first code snippet here https://docs.sqlalchemy.org/en/14/orm/tutorial.html#querying
[14:34:07] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[14:34:08] <Gaming4LifeDE> instance refers to the current row
[14:34:24] *** Joins: Klinda (~superleag@user/klinda)
[14:34:41] <DnzAtWrk> any good progress bar lib for CLI?
[14:35:13] <nedbat> DnzAtWrk: "rich" is amazing for lots of cli things
[14:35:16] <grawity> I think tqdm is common? wouldn't be surprised if rich.progress existed
[14:35:22] <nedbat> DnzAtWrk: tqdm is the classic
[14:35:24] <deltab> DnzAtWrk: https://rich.readthedocs.io/en/stable/progress.html
[14:35:25] <Gaming4LifeDE> patchie so no need to actually run execute(), just use query instead
[14:35:35] <DnzAtWrk> is rich very heavy?
[14:35:37] <grawity> (I wrote my own because they're all too fancy)
[14:35:39] <DnzAtWrk> like, does it depend on a lot
[14:36:15] <deltab> "Rich requires Python 3.6.1 and above. Note that Python 3.6.0 is not supported due to lack of support for methods on NamedTuples."
[14:36:18] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Quit: Leaving)
[14:36:19] <DnzAtWrk> ah
[14:36:21] <DnzAtWrk> nice
[14:36:31] <DnzAtWrk> maybe it's time to add that to my toolset
[14:36:33] <grawity> rich *does* a lot (it's a whole CLI UI toolkit), I think it depends on a markdown parser, etc
[14:36:42] <grawity> so far I've only used it to make tables, and it's decent at tables
[14:36:57] <grawity> better than my own attempt at making tables, in any case
[14:37:14] <DnzAtWrk> https://github.com/willmcgugan/rich/tree/master/rich
[14:37:20] <DnzAtWrk> it does seem quite nicely made
[14:37:23] <DnzAtWrk> plain python files
[14:37:30] <DnzAtWrk> not a gigantic set of precompiled libs
[14:37:38] <patchie> Gaming4LifeDE: aha, but is it possible to do that using .execute()?
[14:37:56] <grawity> not sure why you'd expect precompiled libraries tbh
[14:37:58] <deltab> it does have a few dependencies it seems
[14:37:58] <patchie> Gaming4LifeDE: I like to use SQL
[14:38:18] <DnzAtWrk> I'd expect that from a library which "insists" that you use conda to install it
[14:38:21] <DnzAtWrk> rich doesn't tho
[14:38:22] <Gaming4LifeDE> idk, i'm not that familiar with sqlalchemy yet, i'm currently only trying to get into it for my current project and haven't done much yet
[14:38:28] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[14:39:15] <Gaming4LifeDE> remember the strength of orm tools like sqlalchemy is that you don't have to do much sql at all because the library handles the heavy lifting for you. and my recommandation for that is: embrace it
[14:39:33] <DnzAtWrk> bottle + sqlalchemy
[14:39:58] <DnzAtWrk> or was it flask that had nice model integration with sqlalchemy
[14:40:11] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[14:40:45] <DnzAtWrk> ie, translation between python objects and rows in a database
[14:40:55] *** Quits: shad (~shad@user/shad) (Ping timeout: 260 seconds)
[14:41:24] <DnzAtWrk> https://flask-sqlalchemy.palletsprojects.com/en/2.x/quickstart/#a-minimal-application
[14:41:44] <DnzAtWrk> not a recommendation, just something I remember using
[14:42:27] <Gaming4LifeDE> DnzAtWrk fastapi can do it too
[14:42:44] <patchie> Gaming4LifeDE: yeah, i know :P but i also use SSMS, so for me its good to just copy SQL statements between the systems. but thanks anyways!
[14:43:18] <Gaming4LifeDE> patchie ohh ok. didn't know that obv
[14:43:35] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 264 seconds)
[14:44:23] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:45:07] *** Joins: m_tadeu (~quassel@bl5-182-86.dsl.telepac.pt)
[14:47:55] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:47:56] <m_tadeu> hi....since PyParser_SimpleParseStringFlags has been deprecated, what can I use instead? PyRun_SimpleStringFlags will just run the code and I won't be able to store the code object (also seems like I won't be able to get errors). any thoughts?
[14:47:59] *** Joins: hemstock (~hemstock@68.71.244.6)
[14:49:38] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[14:50:19] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:50:47] <OnceMe> Yhg1s: that works, but can I get list of users [], when I do select object_data from users; return cursor.fetchall() is fine, but I need to access it with user['object_data']
[14:51:08] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[14:51:54] *** Joins: shad (~shad@user/shad)
[14:53:03] *** Quits: anonymeowo (~anonymeow@185.213.154.243) (Ping timeout: 260 seconds)
[14:53:03] <Yhg1s> OnceMe: I'm not sure I understand the question, sorry.
[14:53:15] <OnceMe> let me rephrase
[14:53:21] <Yhg1s> OnceMe: isn't that what you asked for in the first place?
[14:53:22] <OnceMe> object_data contains json data
[14:53:34] <OnceMe> so I want to get something like fetchall()['object_data']
[14:53:40] <OnceMe> so I can access user['id'] directly
[14:53:47] <OnceMe> and not user['object_data']['id']
[14:53:52] <Yhg1s> OnceMe: okay, then you want to parse the JSON data into a dict.
[14:54:20] <Yhg1s> OnceMe: user['object_data']['id'] wouldn't work anyway.
[14:54:30] <OnceMe> probably
[14:54:35] <Yhg1s> OnceMe: but perhaps you're looking for 'user = user['object_data']'? It's a little hard to tell.
[14:54:41] <OnceMe> how to do this efficnelty? what if I retrive 10k users?
[14:55:22] <Yhg1s> OnceMe: that really depends on the schema and actual data and what you actually need to do. If you really have JSON data that you need to parse, you can't really avoid parsing each cell of JSON data individually.
[14:55:32] <Yhg1s> Whether that's efficient enough or not is hard to say.
[14:55:51] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[14:56:16] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:56:54] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[14:58:13] *** Quits: evocatus (~evocatus@84.51.113.13) (Read error: Connection reset by peer)
[14:59:00] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:01:17] *** Joins: aztec (~Felipe@2804:2238:7c4:5300:78df:22bd:1a71:34af)
[15:01:21] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[15:02:12] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:03:27] <deltab> ksynwa: you could split them up for more granular feedback; or if the rate limiting allows it, run them in parallel
[15:03:33] *** Joins: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de)
[15:03:49] <ksynwa> Good idea deltab
[15:04:25] *** Joins: pycurious (~Adium@user/pycurious)
[15:05:27] *** Joins: jonaskabrink (~jonaskabr@eduroam-165-125.wlan.tu-harburg.de)
[15:06:35] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[15:07:02] *** Quits: godlike (~godlike@user/godlike) (Quit: So say we all!)
[15:07:31] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[15:07:57] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:08:29] *** Joins: godlike (~godlike@user/godlike)
[15:09:51] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[15:09:54] *** Joins: masta_ (~oyster@user/masta/x-2645138)
[15:10:46] <Midjak> is there a document describing pypy implementation detail ? like details we can find in the official documentation for Cpython here by instance: https://docs.python.org/3/reference/datamodel.html
[15:11:25] *** Quits: jonaskabrink (~jonaskabr@eduroam-165-125.wlan.tu-harburg.de) (Ping timeout: 260 seconds)
[15:11:26] *** fury is now known as mascot-lol
[15:11:26] <Midjak> I looked on the web I found an overview but I was wondering if a more detailled document exists .
[15:11:49] *** mascot-lol is now known as fury
[15:12:57] <Yhg1s> Midjak: the reference manual isn't about CPython, it's about Python. There are a few notes on implementation details in it, but not much about the CPython implementation itself. (The CPython source is the best documentation of the implementation, really.) The same is true for PyPy, although there are quite a few docs around on various subjects, like the JITs and the cpyext emulation layer.
[15:13:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[15:14:01] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:14:58] <Midjak> Yhg1s, the link I gave above provide implementation detail for Cpython. In section "CPython implementation detail"
[15:15:41] <Yhg1s> Midjak: Yes, as I said, there are a few notes on implementail details. Visible effects of the CPython implementation. Not notes on the internals of CPython, or how it was designed, or why.
[15:15:50] <Yhg1s> Midjak: it's not about the internal design.
[15:16:40] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:16:46] <Midjak> Yes this is the kind of details I would like to find about pypy
[15:17:16] <Midjak> how id and gc works on pypy by instance
[15:17:31] <Yhg1s> Midjak: okay, so you don't want to know about the implementation, just the visible differences between CPython and PyPy? https://doc.pypy.org/en/latest/cpython_differences.html
[15:17:54] <Midjak> I am interested by the design too but I asked about the details I found for cpython in offcial doc
[15:18:19] <Midjak> thanks Yhg1s
[15:18:43] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 260 seconds)
[15:18:56] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[15:19:11] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[15:19:20] *** Quits: masta_ (~oyster@user/masta/x-2645138) (Quit: Going offline, see ya! (www.adiirc.com))
[15:20:00] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[15:20:21] <DnzAtWrk> I do enjoy rich
[15:20:33] <DnzAtWrk> it's very helpful having colorful text in print
[15:21:08] <The-Compiler> yeah, rich is great
[15:21:22] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[15:21:32] <The-Compiler> I have high hopes for textual too: https://github.com/willmcgugan/textual
[15:21:56] *** Joins: upsala (~zcb@185.213.155.160)
[15:22:31] <DnzAtWrk> I'd imagine that's useful for servers
[15:22:35] <nomic> will mgugan = pygame
[15:22:36] <DnzAtWrk> over ssh
[15:22:55] *** Joins: analoq (~yashi@user/dies)
[15:23:15] *** Quits: arinov (~arinov@213.194.126.155) (Quit: WeeChat 3.1)
[15:23:22] <nomic> he wrote pygaeme book
[15:23:31] *** Joins: gusto (~Augustus@109.255.100.54)
[15:23:49] *** Joins: BSaboia (~bsaboia@177.37.198.218)
[15:26:11] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:28:12] *** Joins: rtsn (~nstr@user/rtsn)
[15:28:23] *** Quits: rannnn8888 (~rannnn888@bzq-109-67-143-75.red.bezeqint.net) (Ping timeout: 256 seconds)
[15:28:31] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 260 seconds)
[15:29:13] *** Joins: rannnn8888 (~rannnn888@bzq-79-178-144-104.red.bezeqint.net)
[15:31:33] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[15:31:53] *** Joins: Deneb (~johnch@86.111.189.80.dyn.plus.net)
[15:34:26] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 260 seconds)
[15:35:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:48] *** Joins: fikran (~fikran@user/fikran)
[15:38:01] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[15:40:05] *** Joins: analoq (~yashi@user/dies)
[15:43:36] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[15:44:55] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[15:45:45] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[15:46:31] *** Joins: zhukovgreen (~ab017i2@2a0f:8742:88c:0:ecd1:f700:f2af:5d44)
[15:47:34] *** Parts: zhukovgreen (~ab017i2@2a0f:8742:88c:0:ecd1:f700:f2af:5d44) ()
[15:47:39] *** Joins: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul)
[15:49:22] *** Joins: yotsuba (~yotsuba@213.137.71.133)
[15:50:27] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[15:51:14] *** Quits: chele (~chele@user/chele) (Ping timeout: 260 seconds)
[15:51:57] *** Joins: arinov (~arinov@213.194.126.155)
[15:52:34] *** Quits: redoc (~redoc@user/redoc) (Ping timeout: 244 seconds)
[15:55:08] <gitesh> Flask(__name__) is a central object means what? Is there any image related to explain this concept?
[15:55:59] *** Joins: redoc (~redoc@user/redoc)
[15:56:03] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 260 seconds)
[15:56:11] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[15:56:11] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[15:56:27] *** Joins: curious_user (~curious_u@89-83-27-172.abo.bbox.fr)
[15:56:32] <curious_user> Hey !
[15:56:40] <curious_user> i need to ask you something;
[15:56:55] <curious_user> i want a dic with plus than 2 keys
[15:56:56] <curious_user> liek so
[15:57:21] <curious_user> dic = {''a":1:letter}
[15:57:37] *** Quits: dalan62367 (~dalan@59-102-54-91.tpgi.com.au) (Quit: dalan62367)
[15:57:50] <curious_user> so when i ask about a values, i can also get the letter element
[15:57:56] <curious_user> can someone help ?
[15:58:05] *** Joins: dalan62367 (~dalan@59-102-54-91.tpgi.com.au)
[15:58:08] <niluje> not sure to understand what you need curious_user
[15:58:22] <niluje> you need a dict where values are dictionaries?
[15:58:27] *** Quits: nomic (~nomic@185.198.243.251) (Quit: Leaving)
[15:58:35] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 264 seconds)
[15:58:38] <supakeen> Sounds like `D = {"a": (1, letter)}`.
[15:58:40] <niluje> dic = {'a': {1: 'a'}}
[15:59:14] <curious_user> tahnks !
[15:59:18] <curious_user> niluje
[15:59:21] <curious_user> thanks*
[15:59:25] <curious_user> :)
[16:00:06] *** Joins: anonymeowo (~anonymeow@185.213.154.243)
[16:00:33] <curious_user> niluje how to i call them separetly ?
[16:00:49] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 265 seconds)
[16:00:50] <niluje> what do you mean?
[16:01:08] *** Joins: Naan (~Naan@user/naan)
[16:01:18] <curious_user> like i can do  for elem in dic: elem....etc
[16:01:49] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[16:02:19] <niluje> for key, value in dic.items(): for subkey, subvalue in value.items(): print(f'{key} -> {subkey} -> {subvalue}')
[16:02:20] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[16:02:34] <niluje> but you should probably explain what you are trying to achieve, it is difficult to understand your questions.
[16:02:39] <curious_user> so it's subkey
[16:02:58] <curious_user> like :
[16:02:59] <curious_user> dic = {'a': {1: 'a'}}
[16:03:12] <curious_user> in this dic, i want to call the Second 'a'
[16:03:18] <curious_user> how do i ?
[16:03:29] <niluje> open a Python shell
[16:03:29] *** Joins: chele (~chele@user/chele)
[16:03:37] <niluje> type dic = {'a': {1: 'xxxx'}}
[16:03:42] *** Joins: zeden (~zeden@user/zeden)
[16:03:42] <niluje> then print(dic)
[16:03:45] <niluje> print(dic['a'])
[16:03:46] *** Quits: matkor (~matkor@ns0.ant.gliwice.pl) (Quit: Konversation terminated!)
[16:03:50] <niluje> print(dic['a'][1])
[16:04:11] <niluje> the word "call" is misleading in your question. You do not "call" anything here.
[16:04:29] <amogorkon> print
[16:04:37] <niluje> right :p
[16:04:41] <amogorkon> ^^
[16:04:45] <niluje> nice one :D
[16:04:57] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:05:47] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[16:06:41] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[16:06:46] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Ping timeout: 245 seconds)
[16:06:56] <amogorkon> it sounds like maybe they want to flatten nested dictionaries?
[16:07:34] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[16:07:39] <oneforall2> https://bpa.st/2IQA what more do I need to change for this to work so far Too few arguments which I'm sure is the verion gails so less than 2
[16:08:46] <The-Compiler> Is there a way to get some kind of human-readable data (say, nested dicts or so) from a pickle object, without having the libraries involved in the pickled data available?
[16:08:55] *** Joins: zhukovgreen (~ab017i2@2a0f:8742:88c:0:ecd1:f700:f2af:5d44)
[16:09:23] <The-Compiler> Someone was asking on the PyQt mailinglist how to unpickle pickle data containing PyQt4 objects after upgrading to PyQt5 - they should've probably used JSON or Qt's QDataStream, but it made me wonder
[16:09:42] <Yhg1s> The-Compiler: it's inherently not human-readable, and the interpretation of the data really requires the classes that created them.
[16:10:13] <oneforall2> packaging.version tried searching for info on this and no luck ..
[16:10:21] <Yhg1s> The-Compiler: disassembling usually produces a class name and arguments to __init__ or __setstate__
[16:10:23] *** dcaro_lunch is now known as dcaro
[16:10:41] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[16:11:19] *** Quits: zhukovgreen (~ab017i2@2a0f:8742:88c:0:ecd1:f700:f2af:5d44) (Quit: WeeChat 3.3)
[16:11:29] <Yhg1s> The-Compiler: if that's the kind of information you want, https://docs.python.org/3/library/pickletools.html
[16:11:36] *** Joins: zhukovgreen (~ab017i2@2a0f:8742:88c:0:ecd1:f700:f2af:5d44)
[16:11:43] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:11:50] <patchie> how can i convert the following code(from a html document) to unicode characters in a pandas dataframe? &quot; &lt; &gt; &#39;
[16:12:25] *** Joins: analoq (~yashi@user/dies)
[16:12:37] <The-Compiler> Yhg1s: ah, great to know something like that exists, that's what I meant
[16:13:11] <Yhg1s> The-Compiler: I wouldn't realy call it human-readable though :)
[16:13:24] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[16:13:42] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:13:52] *** Quits: RiFo (~RiFo@user/rifo) (Read error: Connection reset by peer)
[16:14:54] *** Joins: chele (~chele@user/chele)
[16:15:04] <drogas> there lots of content and resources out there for getting into machine learning, data science etc. What are some good ones for beginners?
[16:15:29] <parv> Statistics would be one
[16:16:11] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[16:16:19] *** Quits: nicode (~nic@2607:f2c0:93cf:4700:226:2dff:fe39:28ac) (Ping timeout: 252 seconds)
[16:16:21] *** Joins: alzgh (~alzgh@user/alzgh)
[16:16:42] <jinsun> patchie: you can use html.unescape if you want to convert those to " < > '
[16:17:01] <patchie> jinsun, aha, thanks, will check it out :)
[16:17:08] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[16:17:11] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[16:17:15] *** Joins: RiFo (~RiFo@user/rifo)
[16:17:47] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[16:18:19] *** Joins: Elodin (~weechat@user/elodin)
[16:18:33] *** Quits: elkclone (~elkclone@user/elkclone) (Quit: Leaving)
[16:18:51] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 245 seconds)
[16:19:47] *** Quits: Metalsutton (~Metalsutt@101.100.152.253) (Ping timeout: 260 seconds)
[16:20:19] *** Quits: shad (~shad@user/shad) (Ping timeout: 260 seconds)
[16:21:30] *** Quits: legola (~legola@46.235.101.181) (Remote host closed the connection)
[16:23:30] *** Quits: parv (~quass@user/parv) (Quit: parv)
[16:24:09] *** Joins: NeoCore (~neocore@37.120.204.181)
[16:24:29] *** Quits: curious_user (~curious_u@89-83-27-172.abo.bbox.fr) (Ping timeout: 256 seconds)
[16:24:57] <The-Compiler> Yhg1s: well, more than the binary data at least
[16:25:15] *** Quits: chris_99 (uid26561@id-26561.lymington.irccloud.com) ()
[16:25:18] <The-Compiler> Yhg1s: seems like a suitable starting point if they want to recover the data without having the library available
[16:25:33] <The-Compiler> Yhg1s: if that's worth the trouble vs. trying to get the old library to run, that's for them to decide
[16:29:40] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[16:30:09] *** Quits: rannnn8888 (~rannnn888@bzq-79-178-144-104.red.bezeqint.net) (Ping timeout: 256 seconds)
[16:30:21] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[16:30:54] *** Joins: shad (~shad@user/shad)
[16:31:18] *** Joins: Jong2 (~Jong@163.114.130.7)
[16:31:22] *** Quits: Jong (~Jong@2620:10d:c091:480::1:a732) (Killed (NickServ (GHOST command used by Jong2!~Jong@163.114.130.7)))
[16:31:25] *** Jong2 is now known as Jong
[16:31:31] *** Joins: llh (~llh@user/llh)
[16:32:19] *** Quits: OnceMe (~stefan@user/onceme) (Quit: Konversation terminated!)
[16:34:28] *** Joins: jonaskabrink (~jonaskabr@eduroam-165-125.wlan.tu-harburg.de)
[16:35:04] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[16:35:38] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:35:49] *** Joins: analoq (~yashi@user/dies)
[16:36:34] *** Quits: jonaskabrink (~jonaskabr@eduroam-165-125.wlan.tu-harburg.de) (Client Quit)
[16:38:01] *** Joins: bloody (~bloody@user/bloody)
[16:40:26] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[16:41:20] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[16:42:06] *** Quits: Jong (~Jong@163.114.130.7) (Ping timeout: 260 seconds)
[16:42:17] *** Joins: jonaskabrink (~jonaskabr@eduroam-165-125.wlan.tu-harburg.de)
[16:43:05] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[16:43:08] *** Joins: computeiro (~Wender@189.37.68.20)
[16:43:30] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[16:44:05] <flower_> on linux I can get which window has focus with: xdotool getwindowfocus. I'm able to run this via subprocess.
[16:44:48] *** Quits: jonaskabrink (~jonaskabr@eduroam-165-125.wlan.tu-harburg.de) (Client Quit)
[16:44:57] <flower_> But how do I get the window id of my python application? (python curses application)
[16:45:17] <BtbN> A curses application is a CLI application, isn't it?
[16:45:18] <grawity> it doesn't have one, only its parent terminal emulator does
[16:45:19] <BtbN> So, you have no Windows
[16:45:22] <grawity> not easy to get the relationship between the two
[16:45:29] *** Leonarbro__ is now known as Leonarbro
[16:45:37] <grawity> though in some terminal emulators you get os.environ["WINDOWID"], but it's not always accurate
[16:45:40] <BtbN> Like, you could very well be running on a headless server.
[16:45:48] <BtbN> Or in a VT
[16:45:52] <grawity> (assuming you're even running on an X11-based terminal emulator in the first place)
[16:46:07] <flower_> hm
[16:46:27] <grawity> reminds me of w3m & ranger, which both are ncurses programs that find their terminal via X11 and draw images over it (e.g. ranger's image preview) ... it's incredibly wonky
[16:46:27] <BtbN> Why do you even need your X window handle when writing a cli application?
[16:46:30] *** Joins: magla (~gelignite@55d4747b.access.ecotel.net)
[16:47:23] *** Joins: theprophet (~theprophe@85.114.228.184)
[16:48:00] <flower_> I've several curses applications, that have a highlighted bar (or cursor) which shows the selected item in the list (like in a file browser). When running 2 of those applications together, I want to disable that highlighted bar when there is no focus
[16:48:44] <flower_> So you get the feel that those applications are one (in a tiling window manager)
[16:49:18] <Dev0n> hey, how do you find packages like this on pypi.org? sentry-sdk[flask]
[16:49:51] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[16:49:58] <flower_> let's say you have 2 terminals with the app ranger running. Ranger gives you a highlighted scrolling bar. I want to dim or hide it, when that particular instance has no focus
[16:50:05] <supakeen> Dev0n: The package is called 'sentry-sdk'.
[16:50:07] <Yhg1s> Dev0n: the package is sentry-sdk.
[16:50:26] <supakeen> The `[flask]` is the extra dependencies it could define by name.
[16:50:31] <Yhg1s> Dev0n: the [flask] bit is an 'extra', which is a way to say 'also install whatever the package says is necessary for the 'flask' extra'
[16:50:41] * supakeen runs away
[16:50:42] <Dev0n> supakeen Yhg1s, ahh gotcha
[16:50:45] <Dev0n> thanks both!
[16:50:56] <Yhg1s> supakeen: at least we're not saying contradictory things.
[16:52:31] <flower_> I was thinking about gettin the windowfocus via: xdotool getwindowfocus and compare it with the id of my python curses application.
[16:52:57] <flower_> if they match, my application has focus
[16:53:45] *** Joins: _ganapathi_ (~ganapathi@27.4.1.30)
[16:54:00] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[16:54:02] <_ganapathi_> Through django my developers written some script using django app scheduler. I need to generate package name list only relevant for that script/command . possible to generate by using any command.
[16:54:29] <_ganapathi_> pip package list and relevant import files
[16:54:46] *** Quits: arinov (~arinov@213.194.126.155) (Quit: WeeChat 3.3)
[16:55:04] <grawity> flower_: if you were actually using a graphical toolkit (i.e. created windows that *had* IDs), then you could just directly ask the toolkit whether a given window has focus
[16:55:27] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-25-65-93-17-96.dsl.bell.ca)
[16:55:36] <grawity> flower_: but for ncurses, it might be better to not rely on x11 specifics, instead see if your terminal supports the *terminal* focus protocol
[16:55:37] *** Joins: Macuser (~Macuser@216.30.159.201)
[16:56:15] <grawity> not sure if it has a specific name, I think it was introduced by xterm a long time ago – you can opt in to having the terminal send you a specific fake keypress on focus, and another on unfocus
[16:56:27] <flower_> grawity, https://unix.stackexchange.com/questions/480052/how-do-i-detect-whether-my-terminal-has-focus-in-the-gui-from-a-shell-script
[16:56:41] <grawity> yes, that one
[16:56:53] <grawity> egmont knows terminal stuff
[16:57:45] <flower_> grawity, hm ok, will look into it, all though it seems pretty advanced to get that interaction.
[16:57:51] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[16:58:22] <grawity> simpler than dealing with x11, especially when you get into terminals that have multiple tabs or split panes
[16:58:38] <grawity> tmux for example will report focus when you flip through panes
[16:58:56] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:59:08] <grawity> hmm I think vim actually uses this to hide the highlighted line (cursorline) similar to what you were talking about
[16:59:45] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[17:00:56] <flower_> grawity, very informative comments at least, thx for these insights.
[17:01:37] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[17:02:04] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0dd-69.dhcp.inet.fi) (Quit: Leaving)
[17:02:08] *** Joins: jonaskabrink (~jonaskabr@eduroam-165-125.wlan.tu-harburg.de)
[17:03:42] <gitesh> If I did import flask and then dir(flask) , I see the contents of package which are names, the for any name out of that I can do from flask import name right?
[17:05:11] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 264 seconds)
[17:08:24] <grym> gitesh: yes.  (also, there's an easy way to find out!)'
[17:08:36] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:a1cc:f344:a47d:7d01) (Quit: Ping timeout (120 seconds))
[17:09:02] *** Quits: jonaskabrink (~jonaskabr@eduroam-165-125.wlan.tu-harburg.de) (Quit: jonaskabrink)
[17:09:23] <gitesh> grym: but I saw some code that doesn't follow what I said
[17:09:38] <gitesh> grym: what easy way?
[17:09:56] <jinsun> just try it in the repl I guess
[17:10:12] *** Joins: Jong (~Jong@2620:10d:c091:480::1:7e8d)
[17:10:35] <jinsun> gitesh: show the code that doesn't follow the rule?
[17:11:00] *** Joins: jonaskabrink (~jonaskabr@eduroam-165-125.wlan.tu-harburg.de)
[17:11:14] <grym> gitesh: open a repl
[17:11:16] <grym> and explore
[17:11:19] <grym> that's what they're very good at
[17:11:20] *** Joins: analoq (~yashi@user/dies)
[17:11:27] <gitesh> jinsun: while I can do from flask import markup, the code said from weizurk_somehting import markup
[17:11:43] *** Joins: stwange (~j@82.21.202.140)
[17:11:52] *** Joins: wender (~Wender@189.41.235.114)
[17:12:14] <gitesh> So that means there are couple of ways
[17:12:53] <jinsun> "the code" here means the flask code?
[17:13:01] <gitesh> Yes
[17:13:11] <stwange> Hey I know this is a stupid question but why is my parameter to sqlite being interpreted as an array of chars instead of a string? c.execute(f"SELECT result FROM {schema} WHERE host = ?", (host))    - Incorrect number of bindings supplied. The current statement uses 1, and there are 10 supplied.  (host = 'google.com')
[17:13:21] *** Joins: node1 (~node1@user/node1)
[17:13:23] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-04de-ef7d-4fbd-a956.res6.spectrum.com)
[17:13:27] <grym> stwange: WHERE host = ?", (host,))
[17:13:34] <grym> the comma makes the tuple, i'm sad to say
[17:13:54] <stwange> Ah thank you grym :)
[17:14:27] *** Quits: computeiro (~Wender@189.37.68.20) (Ping timeout: 258 seconds)
[17:15:13] *** Joins: akk (~akk@75.161.146.115)
[17:15:34] <jinsun> gitesh: so that doesn't contradict the rule, that is a different observation, if dir(flask) shows markup and you are able to `from flask import markup` then it follwes what you said
[17:16:06] <gitesh> Yes
[17:16:14] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:16:19] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 260 seconds)
[17:18:13] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-8d1c-693e-6b25-9780.res6.spectrum.com)
[17:18:18] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[17:18:28] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Client Quit)
[17:19:20] *** Joins: gggp (~gggp@li870-78.members.linode.com)
[17:19:59] <gitesh> I use jupyter notebook
[17:20:19] *** Joins: DX099 (~dx099@2001:470:69fc:105::21ce)
[17:20:37] <DX099> hi all, is there a way to repush a pip package to a private pypi repo with Twine?
[17:21:06] <grym> gitesh: well, that's a repl anyway
[17:22:11] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[17:22:28] *** Joins: analoq (~yashi@user/dies)
[17:22:29] <The-Compiler> DX099: looks like there's --repository/--repository-url, http://manpages.ubuntu.com/manpages/cosmic/man1/twine.1.html
[17:22:53] <The-Compiler> DX099: at least if that's what you mean, not sure what you mean with 'repush'
[17:23:32] <niluje> repush == override a package already pushed
[17:23:47] <niluje> iirc. on nexus I get an error message when the package already exists, and I have to manually remove a package before pushing it again
[17:23:48] <DX099> The-Compiler:  it means I have "pip install my_package" and now I want the equivalent of "pip push --url private_repo my_package"
[17:23:50] *** Joins: chele_ (~chele@user/chele)
[17:24:06] *** Quits: chele (~chele@user/chele) (Ping timeout: 260 seconds)
[17:24:17] <niluje> ah
[17:24:23] <DX099> sorry don't know why it resent my original message...
[17:25:39] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:25:39] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.3)
[17:26:27] *** Joins: nomic (~nomic@185.198.243.251)
[17:27:39] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:27:58] *** Quits: gggp (~gggp@li870-78.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:30:25] *** Quits: BSaboia (~bsaboia@177.37.198.218) (Remote host closed the connection)
[17:32:57] *** Quits: yotsuba (~yotsuba@213.137.71.133) (Read error: Connection reset by peer)
[17:33:19] *** Quits: ATAD (~ATAD@user/atad) (Ping timeout: 252 seconds)
[17:34:42] *** Joins: ATAD (~ATAD@user/atad)
[17:34:46] *** Joins: zepolen_ (~zepolen@2a02:1388:2086:31e1:f5bd:b429:6f2:df06)
[17:34:59] *** Quits: zepolen (~zepolen@2a02:587:863d:d8c0:6f81:2331:b342:9e3b) (Ping timeout: 260 seconds)
[17:35:43] *** Joins: lionslicer (~lionslice@2804:d41:a71d:ff00:8014:3a89:54c5:f8c8)
[17:36:33] <flower_> grawity, do you know how to set a terminal title for a curses application?
[17:36:33] *** Joins: grooverman (~grooverma@177.95.12.14)
[17:36:39] <flower_> grawity, https://github.com/ranger/ranger/issues/2471
[17:36:46] <lionslicer> Guys, how do you use books when learning to program? Do you go through the book and then start using the concepts?
[17:37:06] <flower_> grawity, I found this, but doesn't seems to work https://bbs.archlinux.org/viewtopic.php?id=85567
[17:37:19] <lionslicer> Should I go chapter by chapter training along the way?
[17:37:42] <drogas> yes but are there specific courses on coursera/YouTube or edX that are a nice introduction to ML/Data science?
[17:37:59] <grym> lionslicer: much like reading a math text: book on one side, scratch paper on the other.  Or in python's case, something like ipython or an editor and a shell
[17:38:08] <grym> lionslicer: read a little; write a little.  lather, rinse, repeat
[17:38:30] <lericson> who repeats though
[17:38:34] <lericson> i just lather and rinse
[17:38:53] <lionslicer> yeah, that's what I thought. I'm about to start Python Crash Course
[17:39:25] <flower_> lionslicer, being a beginner myself more or less. It helps to do actual project. So gather info until you're able to code a small project. Evaluate it by reading the info from the book again and improve your code. The move on.
[17:39:41] <flower_> *Then
[17:39:45] <lionslicer> yeah
[17:40:20] <lionslicer> I read the table of contents and a few chapters. this book walks you through some projects, it seems
[17:40:50] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[17:41:00] <lionslicer> I'll do just what you said, flower
[17:41:20] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb1+focal2 - https://znc.in)
[17:41:29] *** Quits: justHaunt (~justache@user/justache) (Read error: Connection reset by peer)
[17:41:55] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[17:42:49] *** Joins: justHaunt (~justache@user/justache)
[17:42:52] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[17:43:37] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-31e2-5508-09ab-38ae.res6.spectrum.com)
[17:44:14] <theprophet> The include() function allows referencing other URLconfs. Whenever Django encounters include(), it chops off whatever part of the URL matched up to that point and sends the remaining string to the included URLconf for further processing.
[17:44:55] <theprophet> this is the text copied from django documentation, what i am confused about is this part ...  "whatever part of the URL matched up to that"
[17:45:15] <theprophet> "whatever part of the URL matched up to that point"
[17:45:16] <nedbat> anyone have a trick for suppressing the stdout from a command in a tox.ini file?  ">/dev/null" doesn't work, it's passed as an argument to the program
[17:45:20] *** Joins: pycurious (~Adium@user/pycurious)
[17:45:22] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[17:45:23] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[17:45:29] <lericson> if you have ('^foo/', include(…)) then the included stuff will run against /bar of /foo/bar
[17:45:39] <theprophet> what is meant by "whatever part of the URL matched up to that point?"
[17:45:45] <lericson> what i just said, theprophet
[17:46:11] <theprophet> lericson against ?
[17:46:18] <theprophet> run against?
[17:46:35] *** Quits: schumaml (~schumaml@dslb-092-074-000-199.092.074.pools.vodafone-ip.de) (Ping timeout: 260 seconds)
[17:46:35] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:46:48] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-31e2-5508-09ab-38ae.res6.spectrum.com) (Client Quit)
[17:47:06] <theprophet> lericson can you say the same in layman's term ?
[17:47:10] *** Joins: fikran (~fikran@user/fikran)
[17:47:45] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[17:47:51] <theprophet> lericson this is what i have in my project url     path('polls/', include('polls.urls')),
[17:47:51] <theprophet>     path('admin/', admin.site.urls),
[17:48:07] <vladoski> does finally run even if i don't catch all the raised exceptions?
[17:48:13] <nedbat> vladoski: finally always runs
[17:49:06] <flower_> grawity, this does work, but only when quitting my curses app, hm. https://bbs.archlinux.org/viewtopic.php?id=85567
[17:49:08] <theprophet> lericson please tell me what did you meant by run against?
[17:49:28] <Togra> is there a distinct difference between using finally as opposed to just leaving code after the try block?
[17:49:37] <Togra> like without using the finally
[17:50:01] <lericson> yes
[17:50:05] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[17:50:08] <lericson> code after a try block may not execute
[17:50:09] <nedbat> Togra: the finally code will run if there's a return/break/continue/raise in the try block.  code after the try won't
[17:50:14] <lericson> code in a finally block will execute regardless
[17:50:21] <Togra> ooooh
[17:50:25] <Togra> ok neat
[17:50:38] <lericson> this has funny implications if you think about it for too long
[17:50:39] <lericson> so don't
[17:50:53] <Togra> yeah I've always had a solid rule of "return leaves the method"
[17:51:00] <Togra> this changes things
[17:51:26] <lericson> yeah guess what happens if you return in a finally
[17:51:56] <Togra> a black hole opens? :<
[17:52:04] <Togra> or does it really, definitely return?
[17:52:26] <lericson> https://bpa.st/MVBA
[17:52:56] <Togra> oh weeeeiiiird
[17:53:05] <lericson> imo it should be illegal to return from a finally
[17:53:14] <lericson> under penalty of prison
[17:53:18] <Togra> that must be a favorite for tests in CS classes teaching python
[17:53:33] <theprophet> lericson thanks
[17:53:38] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[17:56:32] *** Joins: djhankb (~djhankb@208.113.164.68)
[17:56:46] *** Joins: rany (~rany@user/rany)
[17:57:08] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[17:58:40] *** Quits: _ganapathi_ (~ganapathi@27.4.1.30) (Quit: Leaving.)
[18:00:40] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[18:01:40] *** Quits: Payam (~Payam@138.106.57.131) (Quit: Client closed)
[18:02:39] *** Joins: h4ppy (~happy@user/h4ppy)
[18:05:02] *** Quits: orangeextract (~orangeext@user/orangeextract) (Quit: Leaving)
[18:07:17] *** Quits: magla (~gelignite@55d4747b.access.ecotel.net) (Quit: Stay safe!)
[18:08:36] *** Quits: Ivii (~Ivyy@2001:a61:1304:3a01:ff77:5d07:db8e:c40c) (Remote host closed the connection)
[18:09:45] *** Quits: sleepingforest (~sleepingf@user/sleepingforest) (Quit: WeeChat 3.0)
[18:10:22] *** Joins: Ivii (~Ivyy@2001:a61:1304:3a01:8462:5527:4b8e:6633)
[18:10:27] *** Quits: Ivii (~Ivyy@2001:a61:1304:3a01:8462:5527:4b8e:6633) (Remote host closed the connection)
[18:12:14] *** Joins: raxor2k (~raxor2k@78.158.233.120)
[18:12:20] *** Parts: raxor2k (~raxor2k@78.158.233.120) ()
[18:12:40] *** Joins: pro_z (~pro_z@37.214.49.15)
[18:12:44] *** Joins: PCatinean (~pcatinean@188.27.163.95)
[18:13:34] *** Joins: white5moke (~white5mok@ip72-219-109-30.oc.oc.cox.net)
[18:17:53] *** Joins: imakestuff (~imakestuf@197.156.77.142)
[18:20:36] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[18:21:00] *** Quits: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 260 seconds)
[18:21:01] *** Joins: AM (~techman@87-94-109-203.bb.dnainternet.fi)
[18:23:56] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[18:24:57] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[18:25:28] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:27:47] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[18:28:14] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 265 seconds)
[18:28:39] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 260 seconds)
[18:29:55] <drogas> I need some exercise material for FFT if you got any cooolio pages shot
[18:30:17] *** Joins: analoq (~yashi@user/dies)
[18:30:21] *** Quits: avikalp (~avikalp@49.36.99.188) (Read error: Connection reset by peer)
[18:30:23] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:31:39] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[18:31:47] *** Joins: _ganapathi_ (~ganapathi@27.4.1.30)
[18:32:02] *** Joins: [RiFo] (~RiFo@user/rifo)
[18:33:24] <grym> drogas: speech or music are the classics
[18:33:38] *** Quits: RiFo (~RiFo@user/rifo) (Ping timeout: 260 seconds)
[18:33:50] <grym> drogas: The Bible for signals is https://ocw.mit.edu/resources/res-6-007-signals-and-systems-spring-2011/
[18:34:03] <grym> i don't think the text is online, but the lecture materials will have exercises
[18:34:21] *** Joins: arseru (uid515527@user/arseru)
[18:34:44] <flower_> grawity, this command doesn't work in xterm or stterm, but works in lxterminal or xfce4-terminal: echo -ne '\e[?1004h\e[?1004l'; read -N 3 -t 0.5; echo $REPLY
[18:35:35] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::2612) (Ping timeout: 260 seconds)
[18:35:39] <drogas> thanks grym I'll have a look
[18:35:41] <flower_> grawity, but what would be a reasonable implementation in a python curses application? Run this command every x (m)seconds via subprocess?
[18:35:44] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Quit: So long King Bowser!)
[18:36:22] <JayDoubleu> Should pylint still report `W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)` if using python 3.5 and above ?
[18:36:24] <grym> drogas: personally i think the wide salmon-pink tie and pocket protectors increases the joy of the video content of those lectures
[18:36:36] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[18:36:54] <Wooble> Togra: I don't think many CS classes teaching python go into the minutia of weird edge cases. (mostly they just teach you Java... but in python, from what I've seen. :) )
[18:36:56] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[18:37:01] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[18:37:02] *** Quits: imakestuff (~imakestuf@197.156.77.142) (Remote host closed the connection)
[18:37:12] <drogas> grym thought I was watching someone from work :)
[18:37:17] <Togra> oh word. mine went just with straight java, but in such a way we could move to other languages easily, worked well
[18:37:24] <grym> Wooble: often because the language changed but the syllabus didn't :)
[18:37:29] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[18:37:32] *** Joins: Tempesta (~Tempesta@user/tempesta)
[18:37:33] <drogas> dat synth intro tho
[18:37:37] <grym> drogas: oppenheim is a very, very, very good guy by the wya
[18:37:38] <Wooble> also, the professor didn't.
[18:38:11] <grym> Wooble: my brother made rent for a month as a result of such a thing once! professor just dumped all the old java textbooks in the hall outside his office, and they were selling for $75 a pop on amazon...
[18:38:12] <Wooble> you can force them to learn the syntax and teahc it but you can't force them to learn the idoms.
[18:38:16] <Wooble> idioms*
[18:38:20] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[18:38:23] <drogas> gosh why's there no 2x speed! imma try yt
[18:39:51] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 260 seconds)
[18:40:27] *** Quits: zepolen_ (~zepolen@2a02:1388:2086:31e1:f5bd:b429:6f2:df06) (Read error: Connection reset by peer)
[18:41:25] *** Quits: shad (~shad@user/shad) (Ping timeout: 260 seconds)
[18:41:31] *** Joins: analoq (~yashi@user/dies)
[18:41:35] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[18:41:42] <grawity> flower_: hmm no, I wouldn't say that
[18:42:20] *** Joins: mall_krampus (~mallkramp@23.108.92.137)
[18:42:31] *** Joins: Viewday (~Viewday@user/viewday)
[18:42:47] <grawity> flower_: first of all, there's nothing in it that warrants a subprocess -- it's literally just a write to stdout and a (timed) read from stdin
[18:42:56] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[18:43:28] <grawity> flower_: second, polling isn't great, it would be more reasonable to enable it once, and from that point handle the notifications as part of the program's regular input -- basically like special keypresses
[18:43:42] <JayDoubleu> Or I should ask.. which style guide checker is recommended for python 3.5 and above
[18:43:58] <grawity> flower_: since they're similar in shape to actual special keys (Home/End, arrows, Fx keys)
[18:44:10] *** Joins: shad (~shad@user/shad)
[18:44:14] *** Joins: zepolen_ (~zepolen@2a02:587:863d:d8c0:6f81:2331:b342:9e3b)
[18:44:18] <grawity> flower_: e.g. if the program allows binding <Esc>[I or \e[I or something similar to an action, there's your "focus in" handling
[18:45:03] *** Quits: zhukovgreen (~ab017i2@2a0f:8742:88c:0:ecd1:f700:f2af:5d44) (Quit: WeeChat 3.3)
[18:45:14] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[18:45:20] *** Quits: Jong (~Jong@2620:10d:c091:480::1:7e8d) (Read error: Connection reset by peer)
[18:45:23] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 264 seconds)
[18:45:29] *** Joins: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul)
[18:46:09] *** Quits: wedwards (~wedwards@rtr0.17.31.bogert.cyberfusion.cloud) (Quit: Textual IRC Client: www.textualapp.com)
[18:46:16] <flower_> grawity, ok, I thought that running shell commands should be done via subprocess in python, but you're hinting towards the use of sys.standout?
[18:46:32] <grawity> my point is that you don't need *the shell commands themselves*
[18:47:10] <grawity> like you don't usually run `echo` via subprocess if you can just print() or sys.stdout.write() the same thing
[18:47:41] <grawity> the same goes here, it's a regular echo that would do the same as sys.stdout.write(...)
[18:47:46] <grawity> and maybe a sys.stdout.flush()
[18:48:47] <flower_> ok, yes, I'm pretty new to programming/python actually. Thx.
[18:49:30] *** Quits: mall_krampus (~mallkramp@23.108.92.137) (Ping timeout: 265 seconds)
[18:49:49] *** Joins: upsala (~zcb@185.213.155.160)
[18:50:31] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Ping timeout: 245 seconds)
[18:50:32] <flower_> I think I see what you mean. I just need to think how that can be done and then how to implement it. Like my application is acting upon a resize, it should act upon a change of focus. Hm.
[18:50:49] *** Joins: davidlowryduda (~davidlowr@73.61.9.42)
[18:51:03] <Wooble> flower_: in general, unless there's absolutely no reasonable way to implement the functionality of some external program in python, you probably don't want a subprocess.
[18:51:47] <Wooble> (running, say, ffmpeg in python is probably fine. echo or cat or grep... pointless.)
[18:51:55] <flower_> Wooble, hm... doesn't sound really the unix-way. I'm struggling with these advises sometimes.
[18:52:07] *** Quits: _ganapathi_ (~ganapathi@27.4.1.30) (Quit: Leaving.)
[18:52:41] <flower_> Wooble, but I noticed that subprocess is slow I think. What if that was fast?
[18:52:43] *** Quits: fassl (~fassl@2a02:8388:1987:9380:c4ee:81c5:625a:a215) (Quit: Leaving)
[18:53:05] <Wooble> flower_: wouldn't really change things; you're using a general purpose programming language, not shell scripting.
[18:53:10] <deniska> The problem is not slowness, the main problem is compatibility and ease of distribution
[18:53:29] *** Joins: qpdb (~qpdb@user/qpdb)
[18:53:37] *** davidlowryduda is now known as dld
[18:53:51] <deniska> if you use standard modules and otherwise cross-platform libs, chances are your program will just work on, say, windows
[18:54:42] <deniska> if you subprocess to `find`, it won't work on windows unless you find a windows version of `find` somewhere
[18:54:55] <flower_> if you use standard linux tools, I don't see a problem. Yes, cross-platform is a problem. But it's not the problem of a linux user. I mean, why would you restrict yourself because a other platform sucks on that topic?
[18:55:25] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[18:55:26] <deniska> or maybe it won't work correctly on macos, or *bsd, or alpine linux for that matter, where `find` is not of gnu variety
[18:55:36] <amogorkon> because you might want to use your program on platforms that are windows-only
[18:55:36] <flower_> Anyway, the tool I'm working on is for Linux only
[18:55:39] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 258 seconds)
[18:55:50] <amogorkon> *environments
[18:56:03] <deniska> flower_: it's just less awkward to use python native tools than to subprocess in many cases
[18:56:21] *** Quits: pr100 (~pr100@cpc92728-cmbg20-2-0-cust160.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[18:56:29] <deniska> flower_: like you can just iterate over glob.glob, you don't have to concern yourself with questions like "what if the file name has a newline in it?"
[18:57:02] <flower_> deniska, my problem with subprocess seems to be that it's slow. Running a full script with grep in bash, is faster then just running that grep command from python with subprocess.
[18:57:11] <amogorkon> @deniska except if you want to call a python package that only provides a CLI like pip from a script..
[18:57:35] *** Quits: chele_ (~chele@user/chele) (Ping timeout: 260 seconds)
[18:57:40] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[18:57:45] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-25-65-93-17-96.dsl.bell.ca) (Ping timeout: 260 seconds)
[18:57:52] <deniska> amogorkon: pip just happens to be written in python, could be npm instead
[18:58:06] <flower_> deniska, anyway, what is a alternative for grep in python?
[18:58:18] <Wooble> amogorkon: I mean probably don't do that anyway but that would fall under my "unreasonable to implement in python code" example, probably.
[18:58:33] <deniska> flower_: depends on what exactly you need to grep in what
[18:58:43] <deniska> and how, is regex involved or not
[18:58:48] <amogorkon> Wooble, i'm doing it with justuse, no problem
[18:59:01] *** Quits: yac (~user@user/yac) (Remote host closed the connection)
[18:59:14] <Wooble> amogorkon: (which is *somewhat* ironic considering it's *already* implemented in python but far be it from me to question pypa's insistence on not having a public API :) )
[18:59:34] *** Joins: ExeciN (~ExeciN@user/nicexe)
[18:59:40] <amogorkon> no argument there
[18:59:58] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[19:00:18] <rendar> i get a string in Windows-1252 format, so it has those characters in that charset, like \x96 which is `-` ...how can i simply convert this string into UTF8 or simply ASCII? So those strange characters will be converted into their counterparts like -, `, ~ and so on ?
[19:00:44] <flower_> deniska, grep -q "/nsm/server/announce" "$client_binary";
[19:01:03] <flower_> Where client binary is a binary file in /usr/bin for instance
[19:01:36] <grawity> rendar: going to ask once more, do you mean the string literally has backslash "x" "9" "6", or do you mean it has a *byte* 0x96
[19:01:38] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 260 seconds)
[19:01:48] <rendar> \x96
[19:01:55] *** Joins: analoq (~yashi@user/dies)
[19:01:56] <rendar> sorry, the byte
[19:02:00] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:484a:3bc5:dcb7:17e7)
[19:02:05] <rendar> the string has the byte 0x96 inside
[19:02:06] <grawity> so it's not \96 like a few hours ago
[19:02:11] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 264 seconds)
[19:02:21] <grawity> if it has the byte that's a lot easier
[19:02:26] <rendar> apparently not, it seems i was wrong, it's 0x96
[19:02:47] <grawity> if python shows "foo\x96bar" that's byte 0x96, that's fine
[19:02:49] <Wooble> rendar: maybe check out the unidecode module for the "to ascii" part, but simply decode('cp1252).encode('utf-8') will give you utf-8 with the same codepoints.
[19:03:07] <grawity> how do you obtain the string -- do you read it from a file? if so, would be best if you just opened the file with the correct encoding specified
[19:03:07] *** Joins: mall_krampus (~mallkramp@89.187.182.122)
[19:03:11] <rendar> Wooble, thanks
[19:03:19] <amogorkon> Wooble, i think calling ffmpg and pythoninstaller were the only other times i needed subprocess thus far
[19:03:48] <amogorkon> pyinstall*
[19:03:56] <grawity> if you receive it from somewhere else, first .encode it to bytes, then .decode those bytes back to string: foo = foo.encode("windows-1252").decode("utf-8")
[19:04:03] <grawity> assuming it's not a bytestring already
[19:04:07] <rendar> ok
[19:04:27] <deniska> flower_: what does -q do in grep?
[19:04:32] <grawity> would be better to skip the reencoding and just do open("foo.csv", "r", encoding="windows-1252")
[19:04:41] <flower_> deniska, quit?
[19:04:43] <grawity> as the file of course already has it in byte form
[19:04:47] <Wooble> trying to decode windows-1252 with the utf-8 codec is unlikely to go well :P
[19:04:48] <vladoski> is it possible to add more stuff to where statement in an sqlalchemy core query?
[19:04:54] <vladoski> after I've created the query
[19:04:58] <deniska> flower_: ok, what does the command as a whole do?
[19:05:07] <grawity> Wooble: yeah I feel like I got these the wrong way around this time
[19:05:17] *** Quits: KevinX (~KevinX@185.153.176.133) (Ping timeout: 244 seconds)
[19:05:17] *** Joins: kostkon (~androirc@2.142.66.94.static.otenet.gr)
[19:05:25] <rendar> AttributeError: 'str' object has no attribute 'decode'
[19:05:26] <flower_> deniska, q is used when you don't care about which lines matched, only that some lines matched.
[19:05:47] <grawity> rendar: again how did you get the \x96 into the str to begin with?
[19:05:59] <rendar> grawity, i download a CSV file from the web
[19:06:02] <flower_> deniska, so just checking if that line of code is in the particular file
[19:06:06] <grawity> rendar: ok but how do you get it from the csv file into python
[19:06:09] <Wooble> rendar: if it's a str you already decoded it.
[19:06:19] <rendar> grawity, with csv package
[19:06:34] <rendar> Wooble, it's a string, but it has 0x96 into it
[19:06:58] <grawity> I wonder how it ended up with \x96 *after* being decoded into a string
[19:07:16] <grawity> regular utf8 would treat a literal 0x96 byte as an error
[19:07:35] <Wooble> rendar: are you seeing \x96 in the repr() of it? if you print the string that shouldn't even be visible.
[19:07:38] <rendar> entries = csv.reader(req.text.splitlines())
[19:07:42] <rendar> this is how i get strings
[19:07:49] <grawity> hmm okay, where does req.text come from?
[19:07:55] <rendar> website
[19:08:11] <grawity> do you mean it comes from requests.get()
[19:08:12] <rendar> https://www.iso20022.org/sites/default/files/ISO10383_MIC/ISO10383_MIC.csv
[19:08:14] <rendar> yes
[19:08:50] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[19:09:08] <grawity> ok, in that case req.content.decode("windows-1252") is a better idea
[19:09:29] <grawity> you don't want to have requests mis-decode the text, then have to re-encode it yourself, then finally decode it right
[19:09:40] <grawity> if you can just decode the original bytes correctly in the first place
[19:09:57] <rendar> grawity, point is that i will use asyncio+httpx or aiohttp to get this
[19:10:17] <grawity> point is irrelevant, every http api deals with bytes primarily
[19:10:24] <rendar> fine
[19:10:31] <grawity> they all can give you bytes as the response
[19:10:54] <Wooble> .text will decode those bytes with whatever encoding the website claims to be using, though. if it's lying... use .content and decode yourself?
[19:11:03] *** Joins: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[19:11:06] *** Quits: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul) (Remote host closed the connection)
[19:11:17] *** Quits: nosoul (nosoul@gateway/vpn/protonvpn/nosoul) (Remote host closed the connection)
[19:11:22] <grawity> the site doesn't claim any encoding in its Content-Type, which is probably why requests misdecodes it
[19:11:29] *** Joins: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul)
[19:11:42] *** Joins: nosoul (nosoul@gateway/vpn/protonvpn/nosoul)
[19:11:49] <rendar> grawity, with that, i get the string to be 'First North Sweden \x96 Auction On Demand'
[19:12:04] <rendar> this time with actual '\' 'x' ... characters
[19:12:19] <Wooble> (\x96 is the unicode "Start of Protected Area" control code, which is somewhat unlikely to be what they meant. :) )
[19:12:31] *** Quits: shad (~shad@user/shad) (Ping timeout: 258 seconds)
[19:12:38] <rendar> lol
[19:12:48] <Wooble> presumably requests is guessing iso-8859-1 instead of cp1252.
[19:13:35] *** Quits: carl--- (~carl-@185.103.188.130) (Ping timeout: 264 seconds)
[19:13:37] <rendar> so what is the actual solution?
[19:13:58] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1) (Quit: Leaving)
[19:14:01] <grawity> where's that one with (tm) or the fancy '
[19:14:18] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:14:22] <grawity> I'm trying to find one that's easier to distinguish on this terminal, so I can figure out the right combination
[19:14:26] <Wooble> rendar: req.content.decode("cp1252").splitlines() will likely give you what this particular thing meant.
[19:14:59] <rendar> uhm, let's see
[19:15:09] <rendar> there is also a string: "EURONEXT - MERCADO DE FUTUROS E OP\C7\D5ES"
[19:15:10] <rendar> damn
[19:15:17] *** Quits: nosoul (nosoul@gateway/vpn/protonvpn/nosoul) (Remote host closed the connection)
[19:15:27] *** Quits: _Ev (~ev@user/ev/x-8999918) (Quit: Leaving.)
[19:15:42] *** Joins: nosoul (nosoul@gateway/vpn/protonvpn/nosoul)
[19:16:06] <rendar> ok, i get it correctly now 'First North Sweden – Auction On Demand'
[19:16:16] *** Quits: Strom (strom@fedora/strom) ()
[19:16:30] <grawity> found both now
[19:16:32] <Wooble> I don't know portuguese but if OPÇÕES is a good word that probably fixes that too
[19:16:40] <grawity> yep it's definitely just req.content.decode("cp1252")
[19:16:51] *** Joins: _ganapathi_ (~ganapathi@27.4.1.30)
[19:17:13] <Wooble> the problem is that fails horribly in the general case where there *is* a content-type and it's correct. *shrug*
[19:17:40] <grawity> fortunately you can check whether req.charset_encoding is empty
[19:17:50] <rendar> Wooble, for instance?
[19:18:07] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[19:18:22] *** Joins: Strom (strom@fedora/strom)
[19:18:31] <grawity> (that property exists in httpx, not in requests)
[19:18:52] <rendar> AttributeError: 'Response' object has no attribute 'charset_encoding'
[19:18:53] *** Joins: kosh (~kosh@user/kosh)
[19:19:04] <rendar> yes
[19:19:04] <grawity> yeah that's one place where httpx and requests differ, I guess
[19:19:13] <Wooble> hooray for almost-compatible APIs? :/
[19:19:17] <grawity> (I don't mean r.encoding or r.apparent_encoding, by the way)
[19:19:25] <rendar> now, a little subtle problem
[19:19:30] <grawity> realistically, though, that file is very unlikely to change
[19:19:37] <grawity> it seems to deal with financial systems
[19:19:42] <grawity> and it is in UPPERCASE
[19:19:47] <grawity> it won't change for eons
[19:20:08] <rendar> i have 'First North Sweden – Auction On Demand', but i want 'First North Sweden - Auction On Demand' just because all other strings do use '-' and i want to uniform that, so, how can i correctly replacing – with - ?
[19:20:17] <Wooble> I wonder if chardet is being used to incorrectly guess latin-1, and if not, whether chardet would help here.
[19:20:33] <grawity> yeah I wouldn't be surprised if apparent_encoding used chardet
[19:20:40] <Wooble> rendar: unidecode module will help with that.
[19:20:46] <grawity> but no, I think latin-1 is simply used as the default if Content-Type doesn't declare any charset
[19:20:54] <grawity> that's been the usual default everywhere in HTTP
[19:21:11] <rendar> Wooble, do i have to install it?
[19:21:19] <Wooble> rendar: yeah. of course it will also break that portuguese.
[19:21:19] *** Joins: nbao (~nbao@187.20.156.163)
[19:21:27] *** Joins: FluffyMask (~masque@user/fluffymask)
[19:21:30] <rendar> Wooble, huh?
[19:21:34] *** Joins: darksun (~darksun@user/darksun)
[19:21:42] <rendar> i just want to substitute a character
[19:21:48] <rendar> don't want to break portuguese
[19:22:17] <Wooble> rendar: .replace() if it's just one character and not all funky unicode punctuation.
[19:22:43] <rendar> Wooble, fine, but how to specify correctly  –  to replace?
[19:22:57] <rendar> i wish to specify it with hex numbers
[19:23:33] <grawity> \u2013
[19:23:44] <grawity> I'd say .replace() is fine here, as the input is Windows-1252, so the repertoire of weird characters you'll encounter is going to be very small
[19:23:54] <Wooble> rendar: .replace("\u2013", "-")
[19:23:55] <grawity> I will have to remember unidecode exists in python though
[19:24:07] *** Joins: qlixed (~qlixed@181.44.129.13)
[19:24:26] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:a1cc:f344:a47d:7d01)
[19:24:43] <Wooble> grawity: it's *mostly* good for normalizing things for search, for example, so "opcoes" will find that.
[19:24:57] *** Quits: vladoski (~vladoski@93-47-225-6.ip114.fastwebnet.it) (Remote host closed the connection)
[19:25:05] <grawity> Wooble: I use text::unidecode in perl for something I'm currently porting to python
[19:25:11] <Wooble> (or maybe "opcones"? no idea how it decomposes a Õ)
[19:25:17] <rendar> Wooble, thanks
[19:25:30] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[19:25:43] *** Joins: imakestuff (~imakestuf@197.156.77.142)
[19:26:28] <rendar> Wooble, how can i get "\u2013" from '\x96' ? i have tried `b'\x96'.decode("utf8")` but i get UnicodeDecodeError: 'utf-8' codec can't decode byte 0x96 in position 0: invalid start byte
[19:26:56] *** Joins: Vonter (~Vonter@user/vonter)
[19:27:28] *** Quits: sharperguy (~sharpergu@fnord.cryptophone.de) (Ping timeout: 258 seconds)
[19:27:37] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[19:27:41] *** Quits: PublicWiFi (~PublicWiF@user/publicwifi) (Ping timeout: 265 seconds)
[19:27:50] *** Joins: shad (~shad@user/shad)
[19:28:09] *** Joins: mickey8 (~user@user/mickey)
[19:31:15] *** Quits: wolfgang (~wolfgang@101.174.167.116) (Remote host closed the connection)
[19:31:40] *** Quits: imakestuff (~imakestuf@197.156.77.142) (Remote host closed the connection)
[19:33:21] *** dob1_ is now known as dob1
[19:33:52] <jinsun> rendar: .decode("cp1252") ?
[19:34:25] <gitesh> is there is photoshop, why would you use pillow or PIL library?
[19:35:05] *** dcaro is now known as dcaro_away
[19:35:42] <grym> gitesh: hey we have word, who needs gedit?
[19:36:14] <gitesh> Yeah my question was like that in the way you answered
[19:36:18] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[19:36:26] <dude-x> gitesh suppose you have a website you can upload your own pic or avatar, you would use pillow to automate the scaling of the photos uploaded. that's an example
[19:37:58] *** Joins: rsx (~dummy@ppp-188-174-152-6.dynamic.mnet-online.de)
[19:39:06] *** Quits: kostkon (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[19:40:55] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[19:41:59] *** Joins: Roey (~Roey@user/Roey)
[19:42:50] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[19:43:05] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-25-65-93-17-96.dsl.bell.ca)
[19:43:15] *** Joins: mickey8 (~user@user/mickey)
[19:43:29] *** Joins: _Ev (~ev@user/ev/x-8999918)
[19:44:50] *** Parts: _Ev (~ev@user/ev/x-8999918) ()
[19:46:21] *** Joins: PublicWiFi (~PublicWiF@user/publicwifi)
[19:46:27] *** Joins: blindguard (~blindguar@aftr-37-201-193-251.unity-media.net)
[19:48:36] *** Quits: mrwick (~mrwick@user/mrwick) (Quit: leaving)
[19:50:14] *** Joins: lastshell (~lastshell@user/lastshell)
[19:50:50] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[19:51:37] *** Quits: PCatinean (~pcatinean@188.27.163.95) (Quit: Leaving)
[19:52:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:54:31] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[19:55:27] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[19:56:31] *** Joins: fikran (~fikran@user/fikran)
[19:57:38] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[19:57:45] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[19:58:31] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[19:58:37] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:59:11] *** Quits: shad (~shad@user/shad) (Ping timeout: 260 seconds)
[20:02:02] *** Quits: rsx (~dummy@ppp-188-174-152-6.dynamic.mnet-online.de) (Quit: rsx)
[20:04:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[20:04:51] *** Joins: hyskaru1 (~hyskaru@user/hyskaru)
[20:05:02] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:05:43] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 260 seconds)
[20:06:29] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--26b.oracle-ocna.com)
[20:07:31] *** Joins: Vonter (~Vonter@user/vonter)
[20:10:14] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[20:10:42] *** Quits: dld (~davidlowr@73.61.9.42) (Ping timeout: 265 seconds)
[20:10:53] *** Joins: vicfred (~vicfred@user/vicfred)
[20:11:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:12:28] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[20:12:35] *** Joins: dld (~dld@2601:197:600:1210:d10e:482c:eb89:99b9)
[20:13:18] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[20:13:59] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:a1cc:f344:a47d:7d01) (Ping timeout: 256 seconds)
[20:14:31] *** Quits: cursey (~cursey@user/cursey) (Ping timeout: 244 seconds)
[20:14:36] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[20:16:01] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[20:16:46] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[20:16:55] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:18:02] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[20:18:25] *** Joins: matsaman (~matsaman@user/matsaman)
[20:18:52] *** Joins: cursey (~cursey@user/cursey)
[20:19:19] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[20:19:43] *** Quits: mraag (~martinraa@89.34.164.27) (Ping timeout: 260 seconds)
[20:19:53] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[20:23:58] *** Quits: noarb (~noarb@user/noarb) (Read error: Connection reset by peer)
[20:24:07] *** Joins: noarb- (~noarb@user/noarb)
[20:24:59] *** Joins: fannagoganna (uid110488@id-110488.tinside.irccloud.com)
[20:25:41] *** Joins: rama_ (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[20:27:59] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 264 seconds)
[20:29:45] *** Quits: hyskaru1 (~hyskaru@user/hyskaru) (Quit: hyskaru1)
[20:31:58] *** Joins: khrbt (~znc@user/khrbt)
[20:32:38] *** Quits: dvx (~dvx@185.63.97.64) (Remote host closed the connection)
[20:33:12] *** Parts: _ganapathi_ (~ganapathi@27.4.1.30) ()
[20:33:43] *** Joins: Ben_1 (~ben@2001:1438:4010:704:c47b:e060:81f5:ae03)
[20:33:46] <Ben_1> hi
[20:33:58] *** Quits: jonaskabrink (~jonaskabr@eduroam-165-125.wlan.tu-harburg.de) (Quit: jonaskabrink)
[20:34:51] <rama_> hey
[20:35:24] <Ben_1> I'm using argparse with two subparsers. I've added a argument to each subparser. When I call check the args later, the arguments of the subparser that is not called, are not available in arguments list. Is there a way to set them None per default, if they are not used?
[20:35:34] *** Joins: aknot (~aknot@2603-900a-1503-17bb-f5fd-d0e2-b631-61f6.inf6.spectrum.com)
[20:35:49] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[20:37:24] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:98a0:181d:c4ff:b2ac) (Quit: Textual IRC Client: www.textualapp.com)
[20:40:26] *** Joins: Pickchea (~private@user/pickchea)
[20:40:36] <flower_> grawity, when I move on or off the terminal window with the mouse, I get char number 27 (ascii characters ^[) in curses.
[20:42:47] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[20:42:55] <flower_> grawity, only when this is set in terminal: echo -ne '\e[?1004h'
[20:43:38] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[20:46:43] <rama_> Ben_1: does default=foo not work within the add_argument method?
[20:47:15] *** Joins: c4017w (~c4017@209.52.68.8)
[20:47:28] <Ben_1> rama_: No
[20:47:36] <Ben_1> Error is still "AttributeError: 'Namespace' object has no attribute"
[20:48:07] <Ben_1> when I create the subparser I already use formatter_class=ArgumentDefaultsHelpFormatter, but this also does not change anything
[20:48:42] *** Joins: avikalp (~avikalp@49.36.99.188)
[20:49:07] *** Quits: FurCoatStarlette (~FurCoatSt@45.133.7.84) (Ping timeout: 244 seconds)
[20:52:03] *** Joins: jay-m1262 (~jay-m@154.72.161.234)
[20:52:07] *** Joins: dez (uid92154@user/dez)
[20:52:34] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:54:15] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 260 seconds)
[20:54:30] *** Joins: cheater (~Username@user/cheater)
[20:54:43] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 260 seconds)
[20:55:39] *** Quits: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 265 seconds)
[20:55:44] *** Joins: jazzy (~jaziz@user/jaziz)
[20:55:52] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-9d27-c755-80ea-123e.res6.spectrum.com)
[20:56:10] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--26b.oracle-ocna.com) (Ping timeout: 260 seconds)
[20:56:33] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[20:56:52] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[20:57:21] *** Joins: akinode (~akinode@2a02:908:1394:cce0:9554:3ae9:34d3:bbd0)
[20:57:30] *** Joins: mickey8 (~user@user/mickey)
[20:57:56] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[20:58:55] <akinode> hello, does anyone here know if it's possible to trace function calls made by a python process launched from another python process using subprocessing? e.g. if a function is called, adjust pythonpath and continue execution etc.
[20:59:26] *** Joins: magla (~gelignite@55d4747b.access.ecotel.net)
[21:00:23] *** Quits: nbao (~nbao@187.20.156.163) (Quit: Lost terminal)
[21:00:47] *** Joins: schumaml (~schumaml@p200300e2ef0b030053c1821a43d17d29.dip0.t-ipconnect.de)
[21:01:34] *** Quits: avikalp (~avikalp@49.36.99.188) (Ping timeout: 260 seconds)
[21:01:57] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[21:02:32] *** Joins: nbao (~nbao@187.20.156.163)
[21:02:44] <rama_> Ben_1: https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser.set_defaults
[21:02:48] <rama_> might be helpful
[21:03:24] <Ben_1> I will give it a try, thanks!
[21:03:50] <mefistofeles> hey, never played with overriding __deepcopy__, I wonder if what's here https://stackoverflow.com/a/68746763 is a good way to try to deepcopy everything except one member that will be in that memo variable
[21:03:59] <mefistofeles> or what's the recommended approach here
[21:04:32] <Ben_1> rama_: unfortunately no change
[21:04:35] *** Joins: wolfgang (~wolfgang@101.174.167.116)
[21:06:42] <mefistofeles> so, basically I'm trying this https://bpa.st/64RA
[21:06:48] *** Quits: zepolen_ (~zepolen@2a02:587:863d:d8c0:6f81:2331:b342:9e3b) (Remote host closed the connection)
[21:07:13] *** Joins: zepolen_ (~zepolen@2a02:587:863d:d8c0:cab8:dda7:a83c:cfec)
[21:07:36] <mefistofeles> to avoid deepcopying context_cache attribute, I just want a shallow copy for that one
[21:08:37] *** Joins: ubert (~Thunderbi@178.115.36.180.wireless.dyn.drei.com)
[21:09:29] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[21:09:49] *** Joins: mickey8 (~user@user/mickey)
[21:12:15] <Ben_1> rama_: https://gist.github.com/bes1002t/00e85055a67badce53e04efcb89254f6
[21:12:31] *** Joins: avikalp (~avikalp@49.36.99.188)
[21:12:38] <Ben_1> namespace is empty, no matter what I try
[21:13:52] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[21:15:50] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[21:16:45] *** Joins: imakestuff (~imakestuf@197.156.77.142)
[21:16:49] *** Joins: lorogue (~lorogue@5.103.210.179.dhcp.fibianet.dk)
[21:17:00] *** Quits: lorogue (~lorogue@5.103.210.179.dhcp.fibianet.dk) (Client Quit)
[21:17:09] <jinsun> Ben_1: how are you running it? the namespace will be empty if you don't pass command line arguments obviously
[21:17:22] *** Joins: lorogue (~lorogue@5.103.210.179.dhcp.fibianet.dk)
[21:17:57] <Ben_1> jinsun: this is not obvious, because if you won't pass arguments on the parent parser, they are None instead of not there
[21:20:20] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[21:20:44] <jinsun> Ben_1: if you pass testa or testb then you will get a not empty namespace with the defaults for that subparser set
[21:20:51] *** Quits: emerent (~quassel@p200300cd57485562ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[21:21:06] *** Joins: emerent (~quassel@p200300cd5748557eba27ebfffed28a59.dip0.t-ipconnect.de)
[21:22:24] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[21:22:54] <Ben_1> jinsun, my intention is e.g. using testa and get testb variables set to None per default
[21:23:14] *** Joins: zeden (~zeden@user/zeden)
[21:23:22] <Ben_1> otherwise I have to write a lot of if conditions to double check whether command a or b is used
[21:23:37] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[21:23:45] <Ben_1> if the var is simply None I can check for None
[21:23:45] *** Quits: arseru (uid515527@user/arseru) (Quit: Connection closed for inactivity)
[21:24:28] *** Joins: tobybl (~tobybl@213.31.135.91)
[21:26:54] <jinsun> hmm so why have subparser instead of just making testa/testb a positional argument?
[21:30:24] *** Joins: beuys (~beuys@user/beuys)
[21:30:41] *** Quits: Deneb (~johnch@86.111.189.80.dyn.plus.net) (Quit: Leaving)
[21:31:11] <jinsun> Ben_1: you can have a dest= in add_subparsers to give a attribute name where the subparser name will be stored
[21:31:40] <jinsun> to solve your problem of finding which subparser was called
[21:32:17] *** Parts: beuys (~beuys@user/beuys) ()
[21:32:21] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[21:32:42] *** Joins: tobybl (~tobybl@213.31.135.91)
[21:32:46] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[21:33:01] <Ben_1> jinsun, still not what I wanted to do, but an applicable workaround :P thanks
[21:36:14] *** Quits: zepolen_ (~zepolen@2a02:587:863d:d8c0:cab8:dda7:a83c:cfec) (Remote host closed the connection)
[21:36:32] <jinsun> Ben_1: for what you wanted to do, I would not use subparsers at all, just have the command as a positional argument, something like this https://bpa.st/YMUQ
[21:36:40] *** Joins: zepolen_ (~zepolen@2a02:587:863d:d8c0:6f81:2331:b342:9e3b)
[21:37:37] <Ben_1> jinsun, for that configuration my intention is too complex. There would be some conflicts with other commands or at least a lot of if conditions to prevent conflicts.
[21:38:17] *** Quits: nomic (~nomic@185.198.243.251) (Quit: Leaving)
[21:38:34] *** Quits: Midjak (~Midjak@82-65-111-221.subs.proxad.net) (Quit: This computer has gone to sleep)
[21:38:41] *** Quits: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de) (Quit: Konversation terminated!)
[21:40:21] *** Joins: Atque (~Atque@user/atque)
[21:42:20] *** Joins: haise01 (~haise01@user/haise01)
[21:42:27] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Quit: Leaving)
[21:43:15] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:43:38] *** Parts: Ben_1 (~ben@2001:1438:4010:704:c47b:e060:81f5:ae03) ()
[21:44:57] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (Remote host closed the connection)
[21:46:03] <flower_> grawity, ok, I think I got it working more or less, with detecting: key = stdsrc.getch(); if key == 27: focus = not focus
[21:46:17] <flower_> needs still some testing though
[21:47:13] *** Joins: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net)
[21:48:08] *** Joins: Akuli (~Akuli@213.216.210.136)
[21:48:57] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[21:49:13] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:c437:e03:5857:7143)
[21:49:45] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:50:15] *** Quits: DeaDSouL (~DeaDSouL@45.86.203.25) (Ping timeout: 260 seconds)
[21:51:00] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 260 seconds)
[21:51:41] *** Joins: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[21:51:44] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[21:51:48] <lesshaste> is it easy to make a max heap with heapq?
[21:51:55] *** Joins: DeaDSouL (~DeaDSouL@194.99.104.149)
[21:52:11] *** Joins: stdout (~stdout@216.163.21.11)
[21:53:50] *** Quits: imakestuff (~imakestuf@197.156.77.142) (Ping timeout: 260 seconds)
[21:53:59] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Quit: pees oot)
[21:54:46] *** Quits: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 260 seconds)
[21:55:25] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-25-65-93-17-96.dsl.bell.ca) (Remote host closed the connection)
[21:55:43] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-25-65-93-17-96.dsl.bell.ca)
[21:55:50] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Read error: Connection reset by peer)
[21:56:52] *** Joins: ledtc (~ledtc@c-f8aa70d5.014-57-6c756e3.bbcust.telenor.se)
[21:57:21] <ledtc> hey guys. Why does´nt .append() work in this case ? https://bpa.st/EI2Q
[21:57:39] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[21:58:05] <ledtc> ive tried print(submodule[0:-3]) and that prints out strings so it should just be appending strings
[21:58:08] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Remote host closed the connection)
[21:58:20] <KirkMcDonald> ledtc: You didn't return anything from the function.
[21:58:26] <stdout> this is using PIL, pdf2image and numpy. https://paste.centos.org/view/9b14565c numpy is used for lines 9 through 19. i'm hoping someone can help me accomplish the same without numpy since it doesn't play well in python venv's and this is running in django under mod_wsgi. any help or pointers is appreciated.
[21:58:28] <ledtc> FFS
[21:58:30] <ledtc> thanks
[21:58:36] *** Joins: millido (~millido@84.210.150.128)
[21:58:49] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[21:59:21] *** Joins: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net)
[21:59:39] <hexnewbie> ledtc: Also there's a chance you meant ‘continue’ instead of ‘break’, as os.listdir() returns things in arbitrary order
[22:00:30] <ledtc> hexnewbie you sure... it works right now
[22:00:45] <ledtc> would´nt continue just leave the if statment and append
[22:00:50] *** Quits: orangeboxcutter (~orange@user/orangeboxcutter) (Remote host closed the connection)
[22:01:07] <hexnewbie> ledtc: continue would skip the current item, and go onto the next, break will exit the loop entirely
[22:01:15] *** Joins: orangeboxcutter (~orange@user/orangeboxcutter)
[22:02:05] <ledtc> hexnewbie i dont know why but break and continue return the same list
[22:02:29] <ledtc> ohhh its because the __ files are the last ones
[22:02:46] <Wooble> ...coincidentally.
[22:02:48] <ledtc> that would make it continue as if the order was changed it would break
[22:03:04] <ledtc> thats what you mean with arbitrary order
[22:03:18] <Wooble> (depending on your filesystem you might actually get them always sorted, but don't rely on that.)
[22:03:20] <ledtc> Thanks dude i would´ve never have found that bug
[22:03:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[22:03:58] <ledtc> Then im doing __all__ = submodulesloader()  inside an __init__ and that should work or am i missing something ?
[22:04:01] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-04de-ef7d-4fbd-a956.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[22:05:52] *** Joins: fikran (~fikran@user/fikran)
[22:07:17] <ledtc> Well im tring to do this: https://docs.python.org/3/tutorial/modules.html#importing-from-a-package
[22:07:50] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[22:08:03] *** Joins: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com)
[22:09:05] *** Joins: Atque (~Atque@user/atque)
[22:09:44] *** Joins: ofou (~ofou@181.160.189.119)
[22:12:15] *** Joins: ravan (~ravan@user/ravan)
[22:13:25] <ledtc> Yea no its not working.  how do i make an import that do find the __all__ list and imports all the classes from all the .py files defined in the __all__ list.   I tried from package1.package2 import *  To no prevail.
[22:14:45] <grym> stdout: i use numpy in venvs every day with zero issues
[22:16:55] *** Quits: avikalp (~avikalp@49.36.99.188) (Read error: Connection reset by peer)
[22:16:55] *** Quits: lorogue (~lorogue@5.103.210.179.dhcp.fibianet.dk) (Read error: Connection reset by peer)
[22:20:43] *** Joins: avikalp (~avikalp@49.36.99.188)
[22:20:59] *** Joins: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz)
[22:23:47] *** Quits: ravan (~ravan@user/ravan) (Quit: Leaving)
[22:24:40] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[22:25:35] <stdout> grym, the folks in #django have corrected my misunderstanding.
[22:25:45] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[22:25:53] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[22:26:08] *** Quits: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[22:26:25] <zln> what is it called when two objects share same attributes or data and is there good info on that to avoid traps?
[22:26:38] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[22:26:40] <grym> stdout: sounds good
[22:27:05] <Wooble> if you're curious, mod_wsgi by default doesn't like things messing with the GIL in C code
[22:27:32] <ledtc> I found that i do from package.package import submodule.class it works any smoth way to change that to from package.package import class  ?
[22:27:34] <grym> ah, i see.  i don't really use apache, but i'll file that one away
[22:28:03] <Wooble> apparently having a C extension to apache embedding python embedding more C extensions gets ugly if subinterpreters start popping up :)
[22:28:03] <grym> ledtc: from package.package import class in package.package.__init__
[22:28:31] *** Quits: avikalp (~avikalp@49.36.99.188) (Ping timeout: 260 seconds)
[22:29:40] *** Joins: waynew (~wayne@user/waynew)
[22:30:22] <ledtc> grym i dont think i specify a specik class
[22:30:53] *** Joins: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com)
[22:30:56] *** Joins: ravan (~ravan@user/ravan)
[22:31:02] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[22:31:12] <ledtc> grym I don't think I can specify a specif class as it need to be dynamic. The __all__ is create with an for loop by os.listdir()
[22:31:42] <mav`rik> Is there a way to set spec post-instantiation on a unittest.mock.Mock?
[22:32:07] *** Quits: ravan (~ravan@user/ravan) (Read error: Connection reset by peer)
[22:33:29] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[22:33:32] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Read error: Connection reset by peer)
[22:35:04] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[22:35:21] *** Joins: ravan (~ravan@user/ravan)
[22:36:43] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[22:38:13] *** Joins: Nspace (~Nspace@user/nspace)
[22:39:19] *** Quits: ravan (~ravan@user/ravan) (Quit: Leaving)
[22:40:23] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[22:41:46] *** Quits: Inline (~Inline@2a02:908:1252:7a80:aa94:ac75:d11d:97b0) (Ping timeout: 245 seconds)
[22:41:51] <ledtc> Nope stackoverflow has not solved this yet.   submodules in __all__ = [a,b,c] imported like from package.package import *    resulting in a.foo()  and i just want it to be foo() Do i modify my __all__ ?
[22:42:13] *** Joins: BelZarath (~BelZarath@h-109-228-190-15.A400.priv.bahnhof.se)
[22:43:26] <ledtc> or maybe its just for the best to call it a.foo so i dont have to classes confliting with the same name
[22:43:49] <BelZarath> Hi if anyone has some time over and are comfortable with sockets and selectors could you please take a look at this? https://bpa.st/MZH2DBQ6JE7ZNEJ3GBNK55NOXQ
[22:44:03] <BelZarath> I've added the error message to the paste for convinience.
[22:44:15] <BelZarath> I have no idea what i am doing wrong but i'm quite new to this.
[22:44:43] *** Quits: h4ppy (~happy@user/h4ppy) (Quit: WeeChat 2.8)
[22:44:47] <BelZarath> PS: This is a school assignment and i've coded "all" this myself, i'm not looking for the entire solution but just a nudge on the way.
[22:45:07] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[22:46:06] <Wooble> BelZarath: you misspelled "init"
[22:46:17] <Wooble> (line 9)
[22:46:34] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 260 seconds)
[22:47:05] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[22:47:08] *** Joins: ravan (~ravan@user/ravan)
[22:47:13] <BelZarath> lol, do you have a shame corner? :P
[22:47:18] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-8d1c-693e-6b25-9780.res6.spectrum.com) (Read error: Connection reset by peer)
[22:47:22] <Wooble> we've all been there. :)
[22:47:32] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:47:32] *** Joins: Haxxa (~Haxxa@122.199.46.64)
[22:47:37] *** Joins: jazzy2 (~jaziz@user/jaziz)
[22:47:42] <Wooble> misspelling a method you're not explicitly calling by name is a hard one to spot :)
[22:47:43] <summonner> BelZarath, what editor are you using?
[22:48:12] <BelZarath> I've been looking at it for 10 min and been like "What do you mean there is no attribute". But as im very new to selectors and haven't been able to find a lot of documentation i assumed i missed something else than a misspell :P
[22:48:26] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[22:48:40] *** Quits: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com) (Quit: leaving)
[22:49:08] <Wooble> well yeah of *course* your brain is going to assume you messed up the hard part instead of the easy part :)
[22:50:14] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:52:33] <zamba> i have a small script that uses multiprocessing to start new processes to handle each incoming connection to a listening tcp server.. but inside each of these processes i want to do async operations with trio.. but as far as i know i need a trio.run() somewhere to start this?
[22:52:41] *** jazzy2 is now known as jazz-o-lantern
[22:53:43] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 260 seconds)
[22:53:44] *** Joins: white_magic (~white_mag@2600:1700:6ae2:a20:8e0:8456:5c5a:453e)
[22:54:50] <ledtc> zamba Try await async_fn(*args)
[22:55:02] *** Quits: stdout (~stdout@216.163.21.11) (Quit: Leaving)
[22:55:12] <ledtc> "run() can (and must) be called from a synchronous context."
[22:56:53] <ledtc> Theres an socket example @ https://trio.readthedocs.io/en/stable/reference-core.html
[22:57:01] *** Joins: rexbinary_ (~rexbinary@user/rexbinary)
[22:57:15] *** Joins: irrgit (~irrgit@192.241.175.183)
[22:57:23] *** Joins: Auron (~Auron956@user/auron)
[22:57:23] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Ping timeout: 264 seconds)
[22:57:27] *** rexbinary_ is now known as rexbinary
[22:57:27] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 260 seconds)
[22:57:29] <zamba> ledtc: i want to use anyio.. anyio uses trio or asyncio underneath, right?
[22:58:03] *** Joins: Klinda (~superleag@user/klinda)
[22:58:04] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[22:58:09] *** Quits: Klinda (~superleag@user/klinda) (Read error: Connection reset by peer)
[22:58:30] *** Joins: Klinda (~superleag@user/klinda)
[22:58:42] *** Quits: jay-m1262 (~jay-m@154.72.161.234) (Ping timeout: 260 seconds)
[22:59:34] <bjs> zamba: starting a whole new process to do the management it's a question what trio's purpose is?
[22:59:36] <ledtc> zamba Yes, acording to the Docs @ https://anyio.readthedocs.io/en/stable/basics.html#running-async-programs
[22:59:38] *** Joins: vlm (~vlm@user/vlm)
[22:59:47] <zamba> ledtc: https://dpaste.org/T0xt#L27
[23:00:03] <bjs> zamba: I mean each process is just independent and you can just call trio.run() inside the code
[23:00:25] <zamba> bjs: see my current code.. at L27 is where i want to start the DEFAULT_THREADS number of parallel outgoing tcp sessions
[23:01:08] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[23:01:08] <zamba> bjs: yeah, but i'm not sure *where* to call trio.run()
[23:01:26] <bjs> zamba: I assumed you wanted to do it in handle()
[23:01:36] <zamba> bjs: yeah, but again.. where? :)
[23:01:40] <ledtc> inside handle() as thats the function your threading
[23:01:53] <bjs> zamba: i mean, somewhere between the start of handle and the end of handle
[23:02:17] <bjs> at the moment you want tell trio to run the async tasks and wait for them to finish
[23:02:36] <ledtc> like Bjs says, you want to async the the operations inside of the threaded handle() No ?
[23:03:04] <zamba> bjs: but shouldn't that be the *only* thing inside handle()?
[23:03:17] <bjs> zamba: if it's the only thing you want handle to do then yes
[23:03:33] <bjs> if you want handle to do something else either before or after running the async tasks, then those should be there too
[23:03:37] *** Joins: jazzy2 (~jaziz@user/jaziz)
[23:03:58] <ledtc> Everything you want to do async
[23:04:13] <zamba> yeah, which is basically everything
[23:04:19] <zamba> receiving data and also outputting data
[23:04:27] *** jazz-o-lantern is now known as Guest3278
[23:04:28] <ledtc> so everytask get called in trio.run()
[23:04:35] *** jazzy2 is now known as jazz-o-lantern
[23:04:44] *** Quits: white_magic (~white_mag@2600:1700:6ae2:a20:8e0:8456:5c5a:453e) (Quit: Client closed)
[23:04:53] <zamba> shouldn't trio.run() be called at L73 instead, then?
[23:04:58] *** Quits: white5moke (~white5mok@ip72-219-109-30.oc.oc.cox.net) (Quit: Leaving...)
[23:05:00] <zamba> and then make handle an async function?
[23:05:00] <bjs> zamba: if it's basically everything then you want handle to basically be only trio.run, if it's actually everything then you actually want handle to actually be only trio.run and if it's not everything then you don't want it to be only trio.run :)
[23:05:23] <zamba> bjs: hehe
[23:05:29] <bjs> zamba: you mean, instead of using processes?  Yes that is another idea
[23:05:35] <bjs> to use trio for the whole program
[23:05:50] <zamba> bjs: no, i need to use processes.. since i need memory to be recollected upon termination
[23:06:04] <jinsun> you can just give trio.run as target too yes
[23:06:09] <ledtc> python self cleans no ?
[23:06:09] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[23:06:36] <zamba> ledtc: no, in my experience it doesn't
[23:06:41] *** Joins: djapo (~archangel@user/djapo)
[23:06:48] <grym> gc does what it wants
[23:06:50] *** Quits: Guest3278 (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[23:06:51] <bjs> it does, once the memory is no longer needed
[23:06:56] *** cthulchu is now known as cth
[23:06:57] <bjs> but Python decides when "no longer needed" is
[23:07:12] <Wooble> (it might not be able to give the memory back to the OS in any case)
[23:07:12] <zamba> bjs: yeah, and the system can run out of memory before that
[23:07:18] <zamba> Wooble: exactly
[23:07:38] <zamba> Wooble: but if i uses processes, then i know that the memory is claimed back by the OS whenever the process terminates, right?
[23:08:09] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[23:08:18] <Wooble> sounds like a reasonable guess, although your peak memory might be higher from running many python processes?
[23:08:35] <zamba> jinsun: how do i rewrite the L73 to just call trio.run as the handle? also with the arguments?
[23:08:47] <zamba> Wooble: there will usually be only one process running at any given time
[23:09:55] <ledtc> Going to go out on a limb here and say wouldn't _thread be easier you use than multiprocess ?
[23:10:06] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 245 seconds)
[23:10:34] <zamba> ledtc: but threads will be inside the execution context of the parent process.. so memory won't be cleaned up
[23:11:32] *** Joins: foobaz212 (~foobaz212@88.98.219.238)
[23:11:38] *** Joins: shad (~shad@user/shad)
[23:13:24] <ledtc> zamba Dont know if understod that but t1.kill() would give back the memory no ?
[23:13:50] *** Joins: sfields (~sfields@2603-8090-1605-d7f3-6001-f576-91fc-2e1b.res6.spectrum.com)
[23:13:59] <jinsun> zamba: just give target=trio.run and your async " main" in args, but you say only one process will run at a time so I don't know why you have to bother with processes at all
[23:14:01] <bjs> ledtc: threads don't have a kill()
[23:14:07] <bjs> and it's very rare that threading makes things simpler :P
[23:14:55] <zamba> jinsun: process = multiprocessing.Process(target=trio.run, args=(handle, conn)) ?
[23:15:42] <jinsun> yeah
[23:15:44] <ledtc> bjs well the exemple im reading for python3 of package "threading" has a operator called .kill()
[23:15:49] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[23:16:09] <ledtc> Thou "threading" and "_thread" might be diffrent things
[23:16:22] <bjs> ledtc: what example is that?
[23:16:52] <Wooble> neither https://docs.python.org/3/library/_thread.html nor https://docs.python.org/3/library/threading.html show a .kill() method anywhere
[23:17:59] <jinsun> multiprocessing has one
[23:18:12] <bjs> Yes you can kill processes
[23:18:35] <Wooble> (not that being able to kill a thread would make it more likely for the main thread to free memory.)
[23:18:41] <ledtc> bjs  I see now that t1 is a class and .kill() is selfmade function. My bad.  @ https://dpaste.org/V7JH
[23:19:03] <zamba> jinsun: ah.. perfect.. but another problem now.. i need to wrap some kind of async function around the server object
[23:19:13] <zamba> which is currently just a socket
[23:20:23] *** Joins: dba (uid502594@id-502594.hampstead.irccloud.com)
[23:20:38] *** Quits: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net) (Ping timeout: 260 seconds)
[23:21:06] *** Quits: Aminda (~sid12355@Feneas/Mikaela) (Remote host closed the connection)
[23:21:45] *** Joins: Aminda (~sid12355@Feneas/Mikaela)
[23:21:59] *** Joins: Julian (~tos9@python/site-packages/Julian)
[23:22:14] *** Quits: Julian (~tos9@python/site-packages/Julian) (Client Quit)
[23:22:58] *** Quits: pro_z (~pro_z@37.214.49.15) (Ping timeout: 260 seconds)
[23:24:02] *** Joins: newpy (~newpy@2601:280:4381:1390:1c6c:6b94:6560:f6f2)
[23:25:09] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[23:25:36] *** Joins: drincruz (drincruz@2607:5300:203:3f52::19)
[23:25:38] *** Joins: srhm (~srhm@user/srhm)
[23:28:04] <zamba> ah, i see there's an trio.socket.from_stdlib_socket()
[23:30:20] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[23:30:35] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 260 seconds)
[23:31:08] *** Joins: mcon (~Thunderbi@host-79-55-229-50.retail.telecomitalia.it)
[23:31:29] *** Quits: tokerboker (~tokerboke@c-73-71-182-125.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[23:31:49] *** Joins: tokerboker (~tokerboke@c-73-71-182-125.hsd1.ca.comcast.net)
[23:35:16] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[23:35:24] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:36:15] *** Quits: sharktamer (~sharktame@cpc91312-watf11-2-0-cust697.15-2.cable.virginm.net) (Remote host closed the connection)
[23:36:51] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:484a:3bc5:dcb7:17e7) (Ping timeout: 256 seconds)
[23:37:54] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 260 seconds)
[23:38:09] *** lukedashjr is now known as luke-jr
[23:38:37] <ledtc> zamba I did async socket handling for ouer introduction course in python. But your socket handling looks nothing like mine, haha.
[23:38:45] *** Quits: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[23:39:30] <ledtc> zamba It's like "I don't remember it being this hard."
[23:39:55] *** Quits: mei (~mei@user/mei) (Ping timeout: 260 seconds)
[23:43:56] <nedbat> strangest use of string escapes: click's \b and \f to control the format of help text: https://click.palletsprojects.com/en/8.0.x/documentation/#preventing-rewrapping
[23:44:13] *** Joins: redoc_ (~redoc@user/redoc)
[23:44:41] *** Quits: aknot (~aknot@2603-900a-1503-17bb-f5fd-d0e2-b631-61f6.inf6.spectrum.com) (Ping timeout: 245 seconds)
[23:47:24] *** Quits: redoc (~redoc@user/redoc) (Read error: No route to host)
[23:47:32] <grym> nedbat: that is a very odd in-band signalling game to be sure
[23:47:35] <grym> or at least it's news to me!
[23:47:35] *** Joins: sharktamer (9bafe1e1bb@2604:bf00:710:0:5054:ff:feea:5006)
[23:48:13] *** Joins: redoc__ (~redoc@user/redoc)
[23:48:13] *** redoc__ is now known as redoc
[23:50:06] *** Quits: redoc_ (~redoc@user/redoc) (Ping timeout: 245 seconds)
[23:50:16] *** Quits: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net) (Quit: Leaving)
[23:50:52] <jinsun> oh I didn't even know \f was a defined escape sequence
[23:52:23] <nedbat> jinsun: formfeed :)
[23:52:38] <nedbat> jinsun: you know, to advance the line printer to the top of the next page of fan-fold paper.
[23:53:53] *** Joins: siebenmeilen (~siebenmei@dynamic-2l5a6xiw9ta1wvdc9s-pd01.res.v6.highway.a1.net)
[23:55:10] *** Quits: tokerboker (~tokerboke@c-73-71-182-125.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[23:55:10] <jinsun> I have no idea what those are :D
[23:55:12] *** Joins: jim87 (~gfurlan@2001:b07:5d37:f91e:c08b:dbe4:b466:4b28)
[23:55:46] <jinsun> I learnt the origin of CR and LF also relatively recently, when I saw some blog with pictures of typewriters
[23:55:53] <jim87> hello! Is there a way to let a python application have some 'build' variables, i.e. where to find a certain system file etc?
[23:56:06] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 260 seconds)
[23:56:10] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[23:56:34] <nedbat> jinsun: what do you mean by "certain system file"?
[23:56:44] *** Quits: foobaz212 (~foobaz212@88.98.219.238) (Quit: Client closed)
[23:56:57] *** Joins: foobaz212 (~foobaz212@88.98.219.238)
[23:56:59] *** Joins: Macuser (~Macuser@216.30.159.201)
[23:57:13] <jinsun> jim87: ^
[23:57:21] *** lukedashjr is now known as luke-jr
[23:57:56] <jim87> nedbat: for example some linux distros mount drives in /mnt, some others in /run/media. I'd like to let the packager (the one who packages the app) to decide where to point the app to
