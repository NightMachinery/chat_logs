[00:00:04] *** Quits: marcello42 (~mp@p200300dfaf10fe015baf6eed7f4ef68f.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[00:00:12] *** Joins: goldfish (~goldfish@user/goldfish)
[00:07:09] *** Joins: d1cor (~diego@179.63.242.122)
[00:07:11] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[00:08:03] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[00:08:18] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[00:08:27] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[00:08:28] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[00:08:36] *** Joins: SaltHilStroller_ (~SaltHillS@searspoint.nvidia.com)
[00:08:52] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[00:09:30] *** Quits: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net) (Quit: Client closed)
[00:10:11] *** Joins: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[00:10:17] *** Joins: jazzy (~jaziz@user/jaziz)
[00:10:17] *** Joins: Masterphi (~Masterphi@user/masterphi)
[00:10:54] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[00:10:57] *** Joins: humanBird (~humanBird@2603-8001-7000-3642-0861-9bd2-90c4-00bf.res6.spectrum.com)
[00:11:23] *** Quits: Staunch (~Staunch@150.93.99.34.bc.googleusercontent.com) (Remote host closed the connection)
[00:11:31] *** Stench is now known as Staunch
[00:11:32] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[00:11:58] <jinsun> pyhalo3: are you running it in python repl? the instructions are for running from your shell, bash or cmd or whatever
[00:12:56] *** Joins: Barones (~Barones@user/Barones)
[00:12:57] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:b59a:8933:faf5:60c9) (Ping timeout: 240 seconds)
[00:13:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[00:13:42] *** Quits: Masterphi (~Masterphi@user/masterphi) (Client Quit)
[00:13:47] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[00:13:48] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[00:15:31] *** Joins: lbalhar (~lbalhar@185-186-161-56.mx-net.cz)
[00:15:47] *** Quits: Cera (~Cera@user/Cera) (Ping timeout: 256 seconds)
[00:16:05] *** Joins: cozmo (~user@65.78.142.57)
[00:16:36] <nedbat> i just saw this as a way to deep-get nested values in a dict:  functools.reduce(operator.getitem, ['node', 'checkSuites', 'edges'], latest_commit)    is there a better way?
[00:16:55] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[00:16:57] <nedbat> there's also glom to do it.
[00:19:02] *** Quits: tnez (~el@user/tnez) (Ping timeout: 240 seconds)
[00:19:36] <nedbat> i wish i had a compact way to use "node.checkSuites.edges" to a nested dict to deep-get the value.
[00:20:54] <exarkun> in clojure there's instar
[00:21:09] <exarkun> no one had tried to make something similar for python last time I checked, but that was a while ago
[00:22:00] <exarkun> pyrsistent has some stuff but it's all very heavily oriented towards update, not retrieval
[00:22:11] *** Joins: Masterphi (~Masterphi@user/masterphi)
[00:22:15] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 272 seconds)
[00:23:25] *** Joins: schumaml (~schumaml@p200300e2ef02330053c1821a43d17d29.dip0.t-ipconnect.de)
[00:23:31] *** Parts: andrea (3f138254b4@2604:bf00:561:2000::38) ()
[00:23:32] *** Joins: tnez (~el@user/tnez)
[00:24:34] <nedbat> exarkun: I could do it myself, but it would have to be something like a j() function to wrap a dict, so I'd have to do:  j(d)["node.checkSuites.edges"]
[00:24:35] *** Quits: chadea (~a@pool-96-241-113-90.washdc.fios.verizon.net) ()
[00:24:45] *** Joins: junebug (~junebug@2600:1700:3db0:2540:d1de:84be:a62f:9fa5)
[00:25:11] *** Quits: junebug (~junebug@2600:1700:3db0:2540:d1de:84be:a62f:9fa5) (Client Quit)
[00:25:12] <Llynix> I've got a for loop that dies every time at 6001 iterations.  any ideas how I might could debug?
[00:25:12] *** Joins: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net)
[00:25:38] <nedbat> Llynix: "dies" meaning what? an exception?
[00:26:03] <Llynix> seems to be a memory problem.  2.5 gb of memory used.  The process gets killed.
[00:27:00] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Ping timeout: 240 seconds)
[00:27:23] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Ping timeout: 256 seconds)
[00:27:38] *** Joins: esther (~esther@2607:fb90:20d2:5ac1:8504:7b23:1fa6:3235)
[00:27:48] *** Quits: rje (~textual@65.141.156.170) (Ping timeout: 240 seconds)
[00:27:55] <Llynix> worker process was killed by signal 9 (most likely hit a memory limit)
[00:28:07] *** Joins: arinov_ (~arinov@213.194.126.155)
[00:28:34] *** Quits: tnez (~el@user/tnez) (Ping timeout: 272 seconds)
[00:29:07] <exarkun> nedbat: I assume it comes from json or something similar.  I'd probably turn it into proper objects immediately after decoding.
[00:29:46] <exarkun> admittedly, I'd probably do it in haskell with aeson which has great support for treating values from json as real values, instead of as bags of who knows what, take your chances
[00:29:48] <nedbat> exarkun: they are graphql responses, and more than I want to keep as proper objects
[00:30:12] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[00:30:16] *** Quits: magla (~gelignite@55d44f7e.access.ecotel.net) (Quit: Stay safe!)
[00:30:26] <nedbat> exarkun: though i guess wrapping in an class with a custom __setitem__ is a "proper object" :)
[00:30:40] <exarkun> fsvo "proper" :)
[00:31:37] *** Quits: esther (~esther@2607:fb90:20d2:5ac1:8504:7b23:1fa6:3235) (Ping timeout: 240 seconds)
[00:31:53] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[00:31:57] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[00:32:23] <jinsun> `eval("d['{}']".format("node.checkSuites.edges".replace(".", "']['")))` :D
[00:33:24] *** Joins: tnez (~el@user/tnez)
[00:33:27] *** Joins: rje (~textual@65.141.156.170)
[00:34:11] *** Quits: trench (~trench@user/trench) (Ping timeout: 256 seconds)
[00:34:58] *** Joins: davit (~davit@50.35.184.227)
[00:35:18] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 252 seconds)
[00:36:04] <exarkun> strangely unsatisfying
[00:36:28] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[00:36:45] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[00:37:00] *** Quits: duuude (~user@user/duuude) (Ping timeout: 240 seconds)
[00:41:31] *** Joins: jokoon (~eio@2a01:e0a:542:e160:a181:b2e9:7b96:4a6e)
[00:41:40] <jokoon> isnt it possible to make 1 bit PNG with PIL ?
[00:42:36] *** Quits: tnez (~el@user/tnez) (Ping timeout: 240 seconds)
[00:43:03] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[00:43:50] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[00:45:17] <grym> jokoon: the header of a png file is way more than 1 bit
[00:45:19] <grym> so, no
[00:45:24] *** Joins: navigator (~Navigator@047-229-046-254.res.spectrum.com)
[00:45:34] <jokoon> I mean, black and white, 1 bit channel
[00:45:39] <SnoopJ> jokoon, yes, it's mode "1"
[00:45:40] *** Joins: iryd (~jamesm@c-73-133-85-138.hsd1.va.comcast.net)
[00:45:42] <Repiphany> https://pillow.readthedocs.io/en/stable/handbook/concepts.html#modes
[00:45:43] <grym> (did you mean one pixel mono)
[00:45:47] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[00:45:55] *** Joins: VoidSync (~sync@user/voidsync)
[00:46:01] *** Parts: iryd (~jamesm@c-73-133-85-138.hsd1.va.comcast.net) ()
[00:46:05] *** Joins: tnez (~el@user/tnez)
[00:46:10] <jokoon> I tried, it doesn't seem to work, I use putdata though
[00:46:12] <SnoopJ> I read it as "a PNG with 1-bit color depth"
[00:47:24] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[00:47:31] *** Joins: oriba (~oriba@dynamic-077-183-242-005.77.183.pool.telefonica.de)
[00:47:33] <jokoon> xnviews says 41 colours used, so not 1 bit
[00:47:34] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[00:47:40] *** Joins: audio (~audio@user/audio)
[00:48:20] <SnoopJ> jokoon, e.g. https://bpa.st/WCLQ
[00:48:23] *** Joins: Cera (~Cera@user/Cera)
[00:48:42] <SnoopJ> If you're seeing something else, it's likely a problem with the specific program you've written. You should share that with us if you want help with it.
[00:48:44] <jokoon> oh, np array
[00:48:48] *** Quits: oriba (~oriba@dynamic-077-183-242-005.77.183.pool.telefonica.de) (Client Quit)
[00:48:51] <Cera> Can anyone help me with this: https://i.imgur.com/qQ48gkv.png Where is my python executable ?
[00:49:00] <SnoopJ> jokoon, you can add data from not-a-numpy-array, it's just a convenient way to do it
[00:49:08] *** Joins: oriba (~oriba@dynamic-077-183-242-005.77.183.pool.telefonica.de)
[00:49:10] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[00:49:18] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[00:49:46] <jokoon> I used Image.new('1', size)
[00:49:51] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[00:49:52] <jokoon> maybe from array will work
[00:50:02] *** Joins: ASUS (~ASUS@user/ASUS)
[00:51:10] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[00:51:13] <SnoopJ> numpyless way to do the same thing: https://bpa.st/Y3CA
[00:51:22] *** Quits: tnez (~el@user/tnez) (Ping timeout: 272 seconds)
[00:51:45] *** Joins: noarb- (~noarb@user/noarb)
[00:51:53] *** Joins: djhankb (~djhankb@208.113.164.68)
[00:52:07] <jokoon> https://bpa.st/SUYQ
[00:52:19] *** Quits: lbalhar (~lbalhar@185-186-161-56.mx-net.cz) (Ping timeout: 256 seconds)
[00:52:19] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 256 seconds)
[00:53:04] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[00:53:39] *** Quits: greedom (~greedom@p200300de670c870087f2e4885ed78457.dip0.t-ipconnect.de) (Remote host closed the connection)
[00:53:47] *** Quits: whaley (~whaley@097-082-197-228.res.spectrum.com) (Quit: It won't give up.  It wants me dead.  Goddamn this noise inside my head.)
[00:53:52] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[00:54:18] <oriba> what was the question with that image stuff?
[00:54:40] <jokoon> the resulting image is not 1 bit png
[00:54:58] <oriba> it should be converted?
[00:55:15] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Remote host closed the connection)
[00:55:18] <Pi-sistance> assert  (-1> (error*100) <1), should only trigger if error is less than -1 or greater than 1, right?
[00:55:38] *** Joins: storm_ (~storm@176.33.65.117)
[00:55:51] <jokoon> ok, so I had ext set to "jpeg"
[00:55:55] <jokoon> thatr was the problem
[00:55:55] <oriba> is it avout reading an image and convert it to black/white?
[00:56:01] <oriba> about
[00:56:25] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[00:56:29] <ChrisWarrick> Pi-sistance: try it and see?
[00:56:40] <Pi-sistance> it doesnt, it fails
[00:56:54] <Pi-sistance> but, everything I know says it shouldnt
[00:57:22] <Pi-sistance> I saw on stack exchange that I couold use equalities in that manner, and I read how assert works, so am stumped
[00:57:37] <ChrisWarrick> Pi-sistance: those expressions are rewritten as (-1 > (error * 100)) and ((error * 100) < 1)
[00:57:46] <jinsun> Pi-sistance: it is asserting less than -1 and less than 1, which is just long way of saying less than -1
[00:57:47] <SnoopJ> oriba, no, they're making an image directly out of some data in the Python program
[00:58:03] <oriba> SnoopJ: ah ok, thx for answering
[00:58:05] <SnoopJ> well, I guess that data *might* be coming from an input image, but we don't know anything about that, at least.
[00:58:28] <ChrisWarrick> Pi-sistance: you might want `assert not (-1 < (error * 100) < 1)`
[00:59:20] <Wooble> jinsun: less than 1 :P
[00:59:29] *** Joins: noarb (~noarb@user/noarb)
[00:59:41] <Wooble> err... nevermind, and.
[00:59:42] <jinsun> oh yeah oops
[01:00:01] <Wooble> clearly time for me to go home. :)
[01:00:18] <jinsun> oh no that was fine :D
[01:00:29] *** Quits: storm_ (~storm@176.33.65.117) (Client Quit)
[01:00:52] *** Quits: noarb- (~noarb@user/noarb) (Ping timeout: 272 seconds)
[01:01:24] <Pi-sistance> its rewritten as and, damnit. thanks it always fails becasue noth cant be true..
[01:01:33] <Pi-sistance> both*
[01:01:54] <Wooble> sure they can, lots of numbers are less than both -1 and 1
[01:02:19] <Pi-sistance> wait, ah ffs
[01:02:48] *** Joins: sandal (~sandal@pool-108-21-229-216.nycmny.fios.verizon.net)
[01:02:59] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: leaving)
[01:03:31] <sandal> hi folks - I've been working on a new python notebook tool. similar to jupyter. it's a native cross platform desktop app. is it ok if I share a screenshot here for feedback?
[01:03:53] *** Joins: djapo (~archangel@user/djapo)
[01:04:02] *** Joins: Xano_ (~Xano@2a00:23c4:4204:700:e9b7:c40d:3af0:3b04)
[01:05:24] *** Quits: SaltHilStroller_ (~SaltHillS@searspoint.nvidia.com) (Ping timeout: 240 seconds)
[01:05:27] *** Joins: SaltHillStroller (~SaltHillS@searspoint.nvidia.com)
[01:05:27] *** Quits: XV8 (~XV8@2601:5cb:c001:50::5524) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:05:32] <Pi-sistance> i just had the sign the wrong way round >.>
[01:05:39] <Pi-sistance> >.>   <.<
[01:06:08] <SnoopJ> sandal, sure, as /topic says, anything about Python is on-topic
[01:06:29] *** Quits: moog (~moog@107.126.48.23) (Ping timeout: 256 seconds)
[01:07:28] *** Joins: wakeup (~wakeup@user/wakeup)
[01:07:49] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[01:07:55] *** Quits: Cera (~Cera@user/Cera) (Ping timeout: 256 seconds)
[01:08:15] *** Joins: summersault (~summersau@179.221.251.36)
[01:08:39] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[01:08:40] <sandal> ok sweet - yeah I'd like to get feedback on this tool: https://ibb.co/ZBjhK9M
[01:09:02] <wakeup> properties in python behave like functions, right?
[01:09:36] <wakeup> in the sense that, if in the property you compute x as a function of self.y, then, if you change self.y, then the new return value of the property also changes, right?
[01:09:43] *** Quits: twofingersneat (~twofinger@174-080-036-228.res.spectrum.com) (Quit: Leaving)
[01:09:49] *** Joins: SaltHilStroller_ (~SaltHillS@searspoint.nvidia.com)
[01:09:50] <ChrisWarrick> sandal: looks a bit ugly to me with all those sub-windows (those weren’t cool 20 years ago) and this side-by-side viewing and uneven boxes
[01:09:52] <grym> wakeup: they're methods on the class instance; they get called every time you use one
[01:09:52] <sandal> UI needs some work but it's written entirely in C++. it's supposed to be faster that jupyter and integrate your your IDE / text editor (you edit a file, and this app will rerun on the filesystem event)
[01:10:03] <grym> wakeup: (unless you cache it, which you can do if you want)
[01:10:17] <wakeup> grym, ok so what I said is correct, right?
[01:10:23] <grym> wakeup: yes
[01:10:32] <sandal> ack, thanks Chris. I need to spend more time on the UI for sure.
[01:11:12] <cvmn> what's a coroutine?  is it just any function with async behind its definition?
[01:11:19] <ChrisWarrick> sandal: myself, I’m not really a fan of the notebook interaction style (then again, I’m not doing scientific stuff)
[01:11:27] <bjs> cvmn: sorta,  `async def` is what makes coroutines yeah
[01:11:48] <cvmn> and a coroutine is nothing but a function that runs in a different thread/process?
[01:11:50] <bjs> cvmn: technically the coroutine is the thing you get when you call the function.
[01:12:21] <bjs> cvmn: no.  if you're using something like 'asyncio' then there are no other actual threads/processes involved
[01:12:31] <sandal> yeah the notebook model is a little sus for sure
[01:12:41] <bjs> cvmn: but it's the same idea, that you can have many `async def` 'coroutines' running "at the same time"
[01:12:43] *** Quits: SaltHillStroller (~SaltHillS@searspoint.nvidia.com) (Ping timeout: 256 seconds)
[01:13:19] <cvmn> how does python make the magic of feeling like concurrent?
[01:13:33] <bjs> cvmn: there is no magic.  An `async def` is just a function you can pause (with `await`).
[01:13:41] <wakeup> do you know if there's a room for matplotlib?
[01:13:44] *** Quits: aslicedbanjo (~aslicedba@host31-48-148-75.range31-48.btcentralplus.com) (Quit: Leaving.)
[01:13:45] <wakeup> and more importantly, is it active?
[01:13:50] <grym> wakeup: it's here
[01:14:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[01:14:05] <bjs> cvmn: Once you can pause a function, you can write a library to switch between them when they reach a pause (await). That's what asyncio does.
[01:14:10] *** Quits: snortie (~snortie@2a02:970:1186:1800:f881:7773:c6f5:7fb8) (Ping timeout: 250 seconds)
[01:14:36] <wakeup> ha, ok
[01:14:37] <cvmn> bjs: so python has its own preemptive scheduler in a single process/thread?
[01:14:49] <wakeup> well, I have a question about matplotlib
[01:15:05] <bjs> cvmn: no, it's not pre-emptive (because there's explicit yields on `await`) and it's not really "python has it" but rather it's in asyncio
[01:15:08] <bjs> which is just some Python code
[01:16:08] <bjs> cvmn: really underneath a coroutine is just a "paused" function and you can run it until it pauses again
[01:16:15] <wakeup> basically, I was wondering if we can plot a 2d matrix e.g. with imshow or pcolormesh, and set certain lines of the grid to specific colors
[01:16:29] <wakeup> so, usually, the color is black
[01:16:32] <bjs> cvmn: and that's all asyncio is doing, it runs it until it pauses then it runs a different one until it pauses and so on,  that's where the scheduling happens.
[01:17:04] *** Quits: jokoon (~eio@2a01:e0a:542:e160:a181:b2e9:7b96:4a6e) (Read error: Connection reset by peer)
[01:17:28] *** Quits: willcl_ark (~willcl-ar@2001:470:69fc:105::1:620a) (Changing host)
[01:17:28] *** Joins: willcl_ark (~willcl-ar@user/willcl-ark/x-8282106)
[01:17:28] <cvmn> will it still pause as expected if i sleep with `import sleep`'s sleep?
[01:17:37] *** Joins: tnez (~el@user/tnez)
[01:17:49] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[01:18:02] <jinsun> if you mean import time, then no
[01:18:09] <cvmn> or will sleep.sleep() cause a global sleeping?
[01:18:09] <jinsun> you need asyncio.sleep
[01:18:52] <cvmn> import time still works, but different meaning?
[01:18:53] <bjs> cvmn: `await` is what makes an async def pause
[01:19:02] *** Joins: moog (~moog@107.126.48.23)
[01:19:03] <bjs> cvmn: if you time.sleep() then the whole thread sleeps, like normal
[01:19:07] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[01:19:20] <bjs> which probably isn't what you wanted as it means no asyncio things will run
[01:19:34] <sandal> wakeup: you should be able to do that with axvline and axhline, you set the start coords and end coords, and the color, and it will draw a line between the two
[01:19:39] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[01:19:43] <cvmn> yeah.  i guess i finally understood it.
[01:19:49] * enyc ROARs
[01:20:06] <enyc> sifnificant number of people still turn up in freenode #python
[01:20:10] <wakeup> sandal ha, ok, thanks for the suggestion, I will see what I can do
[01:20:17] <wakeup> by the way, I also have another problem
[01:20:19] <ChrisWarrick> enyc: are you sure those aren’t bots?
[01:20:27] <wakeup> I have seen many posts on this problem, but. I don't know what to do
[01:20:34] <wakeup> I am currently using pcolormesh to plot a matrix
[01:20:45] <wakeup> but I want to assign specific colors to specific values of my matrix
[01:20:53] <wakeup> my matrix is a matrix of integers
[01:21:02] <enyc> ChrisWarrick: yes, sme talking and respond and so on
[01:21:06] <wakeup> and I know which possible integers will be in my matrix
[01:21:25] <enyc> ChrisWarrick: there are a lot of forgotten-bouncers forgotten client-configs etc in channels too
[01:21:33] <wakeup> e.g., if my matrix contains 1 in coordinate (1, 1), I want the cell (1, 1) to be, say, red
[01:21:46] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 272 seconds)
[01:22:04] <wakeup> right now I am defining cmap=colors.ListedColormap(...) and then pass that to pcolormesh
[01:22:16] <wakeup> but that doesn't always assign the same colors to the same integers
[01:22:38] <nedbat> enyc: if there are real people talking there, please do let them know about Libera
[01:22:52] *** Quits: djapo (~archangel@user/djapo) (Remote host closed the connection)
[01:23:28] *** Quits: sandal (~sandal@pool-108-21-229-216.nycmny.fios.verizon.net) ()
[01:23:47] <oriba> wakeup: you may look for heatmap
[01:24:04] <bjs> nedbat: do you want them to get K-lined too :P
[01:24:09] *** Joins: djapo (~archangel@user/djapo)
[01:24:14] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[01:24:18] <ChrisWarrick> I’d expect libera to be an auto-kline on that other network
[01:24:27] <nedbat> bjs: i thought about that, and I hope perhaps people have relaxed in the last 9 months
[01:24:31] <bjs> ChrisWarrick: like a regex
[01:24:52] <ChrisWarrick> it’s strange that freenode managed to come back online
[01:25:09] <bjs> nedbat: you are optimistic.
[01:25:28] <ChrisWarrick> it’s also strange that https://freenode.net/ is some reddit clone with almost no mention of irc
[01:25:29] <wakeup> oriba, thanks, not sure why that didn't come to my mind, though not sure how easier it might be to do that with a heatmap, as opposed to imshow or pcolormesh
[01:25:43] <bjs> nedbat: if anything they seem to have got more unhinged, ever since they basically became a weird reddit
[01:26:53] *** Quits: tnez (~el@user/tnez) (Ping timeout: 256 seconds)
[01:30:11] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[01:31:16] <cluelessperson> I'm looking for a jumping off point to make a package that can easily be installed, preferably containing the dependencies I might need for it.
[01:31:22] <enyc> ChrisWarrick: not so much more
[01:31:25] <cluelessperson> Should I be looking into wheels?
[01:31:27] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[01:31:37] <enyc> ChrisWarrick: yes its been aked about today, what happened to the irc -links  info there
[01:31:54] <enyc> ChrisWarrick: complete mess ;o
[01:32:09] <enyc> nedbat: some do but some more help  wit hothers to notify would be good
[01:32:22] <enyc> ChrisWarrick: they don't seem organized enough to do so much auto- ness
[01:32:35] <ChrisWarrick> enyc: there’s no point in being on freenode, really
[01:32:51] <enyc> ChrisWarrick: quite but surprising number of interesting people come along
[01:32:51] *** Joins: tnez (~el@user/tnez)
[01:32:58] <enyc> ChrisWarrick: not been on irc in a while etc etc
[01:33:13] <grym> cluelessperson: setup.cfg/pyproject.toml
[01:33:21] <ChrisWarrick> enyc: you’ll find many more real people on libera
[01:33:32] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[01:33:57] *** Joins: blackleitus (~blackleit@189.195.195.100)
[01:34:15] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[01:34:49] <cluelessperson> grym, weird, that page doesn't load for me
[01:35:41] *** Quits: Llynix (~Llynix@2603-8081-8202-3c81-dca6-f75c-adcd-48b6.res6.spectrum.com) (Ping timeout: 256 seconds)
[01:35:46] *** Quits: VoidSync (~sync@user/voidsync) (Remote host closed the connection)
[01:36:28] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:37:02] *** thurs80601421053 is now known as thurs
[01:37:03] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[01:37:13] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[01:37:34] *** Quits: blackleitus (~blackleit@189.195.195.100) (Read error: Connection reset by peer)
[01:37:51] <ChrisWarrick> cluelessperson: that’s not a URL
[01:37:58] *** Joins: blackleitus (~blackleit@189.195.195.100)
[01:37:59] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[01:38:35] <cluelessperson> grym, oh, sweet, thanks for the lead. xd
[01:38:52] <enyc> ChrisWarrick: yes, and OFTC, and spotchat and snooned and irc-nerds and rizon and and and ... depending  what looking for
[01:39:09] <enyc> ChrisWarrick: a little gem is  https://netsplit.de/channels/  -- finds channels across networks very usefully
[01:39:24] <ChrisWarrick> enyc: I’m happy with libera, thanks
[01:39:57] <enyc> ChrisWarrick: oh yes quite, it finds lots of channles across libera very commonly as the largest irc network, just found it a useeful channel search enngine, seraches the topics too
[01:40:16] *** Joins: Enitin (~Enitin@82.102.22.85)
[01:40:23] <SnoopJ> what's a "significant number?" I thought the network as a whole tanked
[01:40:47] *** Quits: audio (~audio@user/audio) (Ping timeout: 256 seconds)
[01:41:04] <enyc> SnoopJ: steady trickle of people who appear in all sorts of channels
[01:41:12] <SnoopJ> enyc, I didn't ask if it was steady
[01:41:25] <enyc> SnoopJ: not sure i've kept count =)
[01:41:27] <SnoopJ> It looks like #python is O(100 users) at the moment?
[01:41:43] <enyc> SnoopJ: seen many each day
[01:41:50] <enyc> nor kept count exactly in which channel
[01:42:26] <ChrisWarrick> https://netsplit.de/channels/details.php?room=%23python&net=freenode
[01:42:27] <ChrisWarrick> seems tiny
[01:42:40] *** Quits: nomic (~nomic@185.217.117.193) (Quit: Leaving)
[01:43:11] <SnoopJ> I suppose "significant" means "enough that I thought to mention it" then
[01:43:48] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[01:43:58] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[01:44:32] *** Joins: Staunch (~Staunch@150.73.100.34.bc.googleusercontent.com)
[01:44:41] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[01:46:12] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[01:46:35] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 240 seconds)
[01:47:01] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[01:47:03] *** Joins: panella32 (~panella32@154.6.22.37)
[01:47:13] *** Joins: squeck (~textual@2.235.200.161)
[01:47:47] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:48:05] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[01:49:16] *** Quits: squeck (~textual@2.235.200.161) (Client Quit)
[01:49:33] *** Quits: tnez (~el@user/tnez) (Ping timeout: 256 seconds)
[01:49:45] *** Joins: nabaiste^ (~nabaiste@50.233.120.162)
[01:49:50] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:252f:1c34:e1bf:7de2) (Ping timeout: 260 seconds)
[01:51:04] <nedbat> bonkers proposal:  dicts should implement __matmul__ so that   d @ "a.b.c"  is the same as d["a"]["b"]["c"]
[01:51:28] <nedbat> i finally have a use for monkeypatching builtins!
[01:51:30] *** Joins: audio (~audio@user/audio)
[01:52:15] *** Joins: summersault (~summersau@179.221.251.36)
[01:52:29] *** Joins: whaley (~whaley@097-082-197-228.res.spectrum.com)
[01:52:48] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 272 seconds)
[01:52:59] *** Joins: mharig (~mharig@190.104.21.209)
[01:53:06] <grym> oh no it's winter break and nedbat's cutting loose!
[01:53:11] *** Quits: upsala (~zcb@185.209.196.166) (Quit: WeeChat 3.4)
[01:55:00] <jinsun> I had another idea like that before
[01:55:01] *** Joins: tnez (~el@user/tnez)
[01:55:13] <caveman> why is it that `asyncio.create_task(f(...))` does not cause `f(...)` to be executed before calling `syncio.create_task` like usual?
[01:55:17] <jinsun> ints should implement __matmul__
[01:55:19] <deniska> only after we put .keys() and .items() on lists :D
[01:55:43] <deniska> and .values()
[01:56:05] <parv> That's only fair
[01:56:22] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[01:56:58] *** Joins: jmcb (~jmcb@nas47-67.york.ac.uk)
[01:57:11] <nedbat> jinsun: and what would that do?
[01:57:23] <jinsun> and 1@10 would be range(1, 10) :D
[01:57:57] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[01:58:06] <jinsun> caveman: f() is executed, and gives you a coroutine, and asyncio.create_task gets that coroutine object
[01:58:12] *** Quits: cyphase_eviltwin (~cyphase@user/cyphase) (Ping timeout: 240 seconds)
[01:58:12] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 240 seconds)
[01:59:25] <jinsun> nedbat: it was just after Soni's complaints yesterday about range() being ugly, @ doesn't look too good though, we need more operators :D
[01:59:31] *** Quits: jmcb (~jmcb@nas47-67.york.ac.uk) (Client Quit)
[01:59:48] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[02:00:03] <parv> Call '-' or '..' (or '...') for service
[02:00:22] <Soni> jinsun: "complaints" is not the word we think you should use
[02:00:47] <jinsun> ... is already taken, .. could work but might be confusing
[02:01:45] *** Quits: tnez (~el@user/tnez) (Ping timeout: 256 seconds)
[02:02:18] *** Quits: zebrag (~chris@user/zebrag) (Ping timeout: 272 seconds)
[02:02:30] <parv> And for the love of sanity, have the range to be inclusive on both ends
[02:03:13] *** Joins: tnez (~el@user/tnez)
[02:03:21] *** Joins: zebrag (~chris@user/zebrag)
[02:03:43] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[02:04:04] *** Joins: Cera (~Cera@user/Cera)
[02:04:11] <jinsun> Soni: yeah I'm just exagerrating a bit, not complaining but milder version of that... I don't know enough words :D
[02:04:44] <Soni> jinsun: we just pointed it out that range() is an acquired taste of the language :p
[02:04:59] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[02:05:08] *** Joins: cyphase (~cyphase@172-10-166-228.lightspeed.sntcca.sbcglobal.net)
[02:05:08] *** Quits: cyphase (~cyphase@172-10-166-228.lightspeed.sntcca.sbcglobal.net) (Changing host)
[02:05:08] *** Joins: cyphase (~cyphase@user/cyphase)
[02:05:22] *** Joins: cyphase_eviltwin (~cyphase@user/cyphase)
[02:06:18] *** Quits: harpia (~harpia@187.49.85.200) (Quit: harpia)
[02:06:39] *** Joins: trench (trench@user/trench)
[02:06:59] *** Joins: JanC_ (~janc@user/janc)
[02:07:09] *** JanC is now known as Guest5415
[02:07:09] *** Quits: Guest5415 (~janc@user/janc) (Killed (calcium.libera.chat (Nickname regained by services)))
[02:07:09] *** JanC_ is now known as JanC
[02:09:06] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[02:09:27] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[02:09:44] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:b59a:8933:faf5:60c9)
[02:09:47] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[02:09:54] *** Quits: millido (~millido@84.210.150.128) (Ping timeout: 272 seconds)
[02:09:57] *** Quits: tnez (~el@user/tnez) (Ping timeout: 256 seconds)
[02:10:39] *** Joins: Thanatos (~Thanatos@105.112.181.101)
[02:11:26] *** Quits: panella32 (~panella32@154.6.22.37) (Quit: Textual IRC Client: www.textualapp.com)
[02:12:46] *** Joins: millido (~millido@84.210.150.128)
[02:13:17] <bjs> nedbat: how about go all the way crazy and let people define their own operators, and attach them to existing types!
[02:14:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[02:14:47] *** Quits: audio (~audio@user/audio) (Ping timeout: 256 seconds)
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:16:07] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:36] *** Quits: parv (~quass@user/parv) (Ping timeout: 240 seconds)
[02:16:36] *** Quits: rya (~ry@user/rya) (Ping timeout: 240 seconds)
[02:17:48] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[02:18:11] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[02:18:11] *** Quits: Cera (~Cera@user/Cera) (Ping timeout: 256 seconds)
[02:18:13] *** Joins: parv (~quass@user/parv)
[02:18:16] *** Joins: audio (~audio@user/audio)
[02:20:00] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[02:21:14] *** Joins: ejjfunky (~ejjfunky@125.164.19.4)
[02:21:15] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[02:21:20] *** Joins: sgen (~sgen@2607:fea8:7ce1:c8e0:b43b:ba1d:a4b3:8c7b)
[02:21:48] <Pi-sistance> if im finding the error with respect to an analytical method surely it should be (analytical-numerical)/analytical *100
[02:22:00] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 252 seconds)
[02:22:38] <Pi-sistance> im a bit drunk though, i thought 4 beers would speed me up and stop stressing. overall a neutral effect.
[02:23:48] *** Joins: tnez (~el@user/tnez)
[02:23:55] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 240 seconds)
[02:24:36] *** Quits: Kohe (~Kohe@77.49.10.102.dsl.dyn.forthnet.gr) (Ping timeout: 240 seconds)
[02:25:44] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 272 seconds)
[02:27:38] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 272 seconds)
[02:28:05] *** Joins: nomic (~nomic@185.217.117.193)
[02:28:05] *** Quits: shabius (~shabius@2a0e:1c80:2:1021::1002) (Quit: Leaving)
[02:29:16] <mickey8> i have this code https://dpaste.org/sTj2, the code in the loop averages at about 0.048 seconds per sentence it processes, which is not absolutely terrible but i have to run it through some hundreds of thousand of sentences now, so i really need to find out what has the most negative impact to reconsider it
[02:29:18] *** Quits: jcarl43 (~jcarl@node-1w7jr9qurds5wu7axpw4oc32k.ipv6.telus.net) (Quit: WeeChat 3.4)
[02:29:41] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:30:05] <mickey8> if anyone has an idea how i could optimize this thing, or some python magic tricks to boost it
[02:30:10] <teut> mickey8  , use numba to optimize it
[02:30:40] <teut> thats the easiest way
[02:31:16] <teut> ask the people at TARDIS how they do it, it has a channel on gitter
[02:32:23] <nedbat> mickey8: what do you do with the result from each sentence?
[02:32:24] <teut> you can also use set difference
[02:32:51] <mickey8> nedbat eventually tfidf
[02:33:01] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[02:33:15] <nedbat> mickey8: i don't know what that is
[02:33:15] *** Joins: rya (~ry@47.23.188.138)
[02:33:15] *** Quits: rya (~ry@47.23.188.138) (Changing host)
[02:33:15] *** Joins: rya (~ry@user/rya)
[02:33:19] <teut> I think there are fast libraries which do that
[02:33:25] <teut> it's a metric nedbat
[02:33:58] <mickey8> word embedding stuff
[02:34:13] <mickey8> https://en.wikipedia.org/wiki/Tf%E2%80%93idf
[02:34:39] <nedbat> mickey8: sorry: the code you've shown us converts a sentence into a different sentence. tfidf seems to be a measure of the value of words.
[02:34:48] <teut> https://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.TfidfVectorizer.html  did you use this?
[02:34:53] *** Quits: NealRame (~a@202-63-68-29.ip4.superloop.com) (Remote host closed the connection)
[02:34:56] *** Joins: cheater (~Username@user/cheater)
[02:34:57] <mickey8> there are libraries for tf-idf. this code is just the preprocessing part
[02:35:02] <mickey8> teut i'm using gensim's implementation
[02:35:11] <teut> I think these guys have written code in c
[02:35:18] <teut> but not gensim
[02:35:23] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-1d0c-49f9-d027-bee6.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[02:35:26] <nedbat> mickey8: i'm trying to understand the big picture here.  Do you have 100k's of sentences, and need to process each one separately to get 100k's of results?
[02:35:32] <SnoopJ> Any optimization to that loop is going to be optimizing something inside of NLTK, since NLTK is doing most of the work.
[02:35:33] *** Quits: ASUS (~ASUS@user/ASUS) (Read error: Connection reset by peer)
[02:36:07] <mickey8> nedbat yes. the results will be used for various purposes later, tf-idf is just one of them
[02:36:28] <mickey8> this code is just the nlp preprocessing part which is needed for mostly everything later
[02:36:45] <SnoopJ> You could possibly run multiple copies of the lemmatizer in parallel to cut down on the execution time, if you have the CPU/RAM available to do that
[02:36:48] <nedbat> mickey8: you can split this across processors using https://docs.python.org/3/library/concurrent.futures.html#processpoolexecutor
[02:37:08] *** Quits: moog (~moog@107.126.48.23) (Ping timeout: 272 seconds)
[02:37:12] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[02:37:38] <mickey8> and there i was thinking python will be fun :p
[02:37:50] *** Joins: millido (~millido@84.210.150.128)
[02:37:53] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[02:37:54] *** Quits: whaley (~whaley@097-082-197-228.res.spectrum.com) (Quit: It won't give up.  It wants me dead.  Goddamn this noise inside my head.)
[02:38:51] *** Quits: rya (~ry@user/rya) (Ping timeout: 256 seconds)
[02:39:08] *** Joins: NealRame (~a@202-63-68-29.ip4.superloop.com)
[02:39:25] <nedbat> mickey8: we can help
[02:40:45] <teut> mickey8 , btw numba is a JIT compiler
[02:40:52] <teut> not a library as such
[02:41:09] <teut> it optimizes python, has nothing to do with ML
[02:41:41] <ham5urg> Is there a regex in Python for 'printable charachter'?
[02:41:52] <mickey8> teut numba was throwing compliation errors about being unable to determine the type of the spellchecker, etc. i can't see myself possibly fixing these things with python, i lack the experience
[02:42:10] <nedbat> mickey8: try using processes first.
[02:42:26] *** Quits: nkiz- (~nki@adsl-89-217-141-227.adslplus.ch) (Quit: ZNC 1.8.2 - https://znc.in)
[02:42:34] <teut> I used it 2 years back, forgot everything about numba except that there was a decorator
[02:43:03] <teut> numba too has threads and processes
[02:43:04] <nedbat> mickey8: what type is "stopwords" and how large is it?
[02:43:13] <teut> and with easier interface
[02:43:19] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[02:43:32] *** Joins: moog (~moog@107.126.48.23)
[02:43:32] <teut> its a list of strings I believe
[02:43:36] <teut> nedbat
[02:43:36] *** Joins: nkiz (~nki@adsl-89-217-141-227.adslplus.ch)
[02:43:42] <SnoopJ> teut, it's usually best to work out why something is slow first before trying to guess the solution. If the slow parts here aren't written in Python, Numba won't help.
[02:43:43] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[02:43:49] <mickey8> nedbat it's a list of strings. 179
[02:43:49] <nedbat> teut: i can also make guesses, but it's better to find out for real.
[02:43:54] <nedbat> mickey8: turn it into a set.
[02:44:00] *** Joins: SaltHillStroller (~SaltHillS@searspoint.nvidia.com)
[02:44:13] <teut> '=D  ok
[02:44:17] <nedbat> mickey8: line 11:  stopwords = set(nltk.corpus.stopwords.words('english'))
[02:44:19] <SnoopJ> The suggestion to use parallel processes is a very good one, and failing that, you need to start measuring what's actually dominating the execution time (cProfile and scalene are good tools for this)
[02:44:24] <mickey8> nedbat yeah, done.
[02:44:59] <teut> stopwords are just a, an, the  , the meaningless words
[02:45:15] <nedbat> mickey8: i'm curious about line 21 making a string from words, and then line 25 making words from a string.  Do you need to do those steps?
[02:45:34] *** Quits: Masterphi (~Masterphi@user/masterphi) (Quit: Masterphi)
[02:45:54] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec93-a79e-a5f0-138c.res6.spectrum.com)
[02:46:25] <mickey8> nedbat line 21 is supposed to be removing multiple spaces, like "        " become " "
[02:46:36] *** Quits: zmotaj (~zmotaj@user/zmotaj) (Ping timeout: 240 seconds)
[02:47:04] <nedbat> mickey8: ok, but you're about to tokenize the sentence again.  Why not just keep it as a list of words?  And what is "preprocessor"?
[02:47:09] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-b0ed-1a92-719b-f6c2.res6.spectrum.com)
[02:47:22] <mickey8> nedbat https://github.com/s/preprocessor
[02:49:13] <nedbat> mickey8: it feels like there are a bunch of different tools being used here when fewer tools would get the job done. i don't know if that is adding overhead you can avoid.
[02:49:34] <jazzy> I've got an array representation of a binary tree here: [2,null,3,null,4,null,5,null,6]
[02:49:37] <nedbat> mickey8: the advantage of spreading this out over processes is that you don't have to decide the answer to that question.
[02:49:54] <mickey8> im down for that processes advice.
[02:49:55] <jazzy> I thought the rule was that i's left and right children are 2i + 1 and 2i + 2 respectively
[02:49:57] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[02:50:17] <jazzy> but if that's the case than for i = 1 (null), there is a left child with value 4
[02:50:30] <jazzy> er, right
[02:50:50] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[02:51:03] *** Quits: moog (~moog@107.126.48.23) (Ping timeout: 256 seconds)
[02:51:03] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 256 seconds)
[02:51:26] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[02:51:49] <jazzy> I guess clearly they're following a different pattern here
[02:52:08] *** Joins: rya (~ry@user/rya)
[02:52:22] <jazzy> they say the final tree is basically a linked list 2 -> 3 -> 4 -> 5 -> 6
[02:53:23] *** Joins: snortie (~snortie@2a02:8308:386:b900:f881:7773:c6f5:7fb8)
[02:53:41] <nedbat> jazzy: who is they?
[02:53:47] <mickey8> can i do the initializations and everything, and then just fork the calls?
[02:53:54] <jazzy> nedbat, leetcode folks
[02:54:08] <jazzy> there's another example that follows the rule I assumed, though, it's weird
[02:54:14] *** Joins: zmotaj (~zmotaj@86.61.80.191)
[02:54:14] *** Quits: zmotaj (~zmotaj@86.61.80.191) (Changing host)
[02:54:14] *** Joins: zmotaj (~zmotaj@user/zmotaj)
[02:54:14] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[02:54:22] *** Joins: moog (~moog@107.126.48.23)
[02:54:35] <jazzy> whatever, I should just solve it and move on
[02:55:04] <teut> yes what about leetcode?
[02:55:14] <teut> I m leetcode folk
[02:55:25] <mickey8> nedbat does this make sense to you? https://dpaste.org/EKn2
[02:55:30] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:55:32] <jazzy> teut, you work for leetcode?
[02:55:37] <teut> no
[02:55:42] <jazzy> I see
[02:55:45] <teut> I practice on leetcode
[02:55:47] <nedbat> mickey8: yes, something like that.
[02:55:56] <jazzy> teut, well the question is right there in scrollback
[02:55:59] <teut> they practice on advent of code
[02:56:12] *** Joins: Cera (~Cera@user/Cera)
[02:56:20] <mickey8> i dont think i ever saw a traceback that long lol
[02:56:36] *** Quits: rje (~textual@65.141.156.170) (Ping timeout: 240 seconds)
[02:58:17] <teut> yes you are correct jazzy , it happens because some people use 1 as index
[02:58:20] <Cera> can I ask questions about github and git here?
[02:58:23] <teut> starting*
[02:59:11] *** Joins: ham5urg_ (~ham5urg@p5ddfdb6e.dip0.t-ipconnect.de)
[03:00:00] <masoudd> Cera, ask in #git or #github
[03:00:04] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:00:59] <jazzy> teut, that wouldn't work either, if 1 is root then 2 would point to 4, but it points to 3 in reality
[03:01:12] *** Quits: ham5urg (~ham5urg@p2e54dc2b.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[03:01:43] <teut> https://www.geeksforgeeks.org/binary-tree-array-implementation/  well, 0- n-1 has the formula 2p+1 and 2p+2 , hmm
[03:01:44] *** Joins: ham5urg (~ham5urg@p5ddfdb74.dip0.t-ipconnect.de)
[03:01:54] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[03:02:07] <jazzy> yes, that's what I said to begin with
[03:02:08] *** Quits: drbeco (~beco@2804:351c:dd03:4500:a332:d74e:8d17:e625) (Quit: Leaving)
[03:03:22] *** Quits: ivii (~ivan@user/ivii) (Read error: Connection reset by peer)
[03:03:28] *** Joins: rje (~textual@65.141.156.170)
[03:03:47] *** Quits: ham5urg_ (~ham5urg@p5ddfdb6e.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[03:03:57] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[03:04:14] <teut> where did you get this array from?
[03:04:29] *** Joins: ivii (~ivan@user/ivii)
[03:04:29] <jazzy> teut, https://leetcode.com/problems/minimum-depth-of-binary-tree/
[03:04:52] *** Quits: ChrisWarrick (kwpolska@user/kwpolska) (Quit: Rebooting!)
[03:05:44] *** Joins: ChrisWarrick (kwpolska@user/kwpolska)
[03:05:48] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:6dad:6e76:9df1:6fb7) (Ping timeout: 240 seconds)
[03:06:15] <teut> looks like a bad test case to me
[03:06:21] *** Quits: d1cor (~diego@179.63.242.122) (Ping timeout: 256 seconds)
[03:06:26] <jazzy> mm
[03:06:39] <teut> try #algorithms , there are people who can confirm
[03:06:41] <jazzy> it works with their implementation though
[03:06:55] <jazzy> I'm sure it's some special case under the hood
[03:06:55] <teut> I also have solved it
[03:07:11] *** Quits: SuperLag (~akulbe@user/superlag) (Ping timeout: 256 seconds)
[03:07:18] *** Quits: mharig (~mharig@190.104.21.209) (Quit: WeeChat 3.4)
[03:07:19] <teut> let me see if my solution actually checks if its node is null
[03:07:46] <teut> in that tree btw it will travel on right tree
[03:08:01] <teut> that part has major depth
[03:08:14] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[03:08:28] *** Joins: drbeco (~beco@2804:351c:dd03:4500:a332:d74e:8d17:e625)
[03:09:31] <jinsun> jazzy: isn't it just reading the tree from left to right, top to bottom
[03:10:19] <teut> https://www.geeksforgeeks.org/binary-tree-array-implementation/  ya jinsun , its that only
[03:10:23] <jazzy> jinsun, yeah I guess that'd work, but they've got another tree there that follows the original rule
[03:10:27] <teut> its a way to serialize the tree
[03:10:53] *** Quits: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net) (Ping timeout: 256 seconds)
[03:11:14] <jinsun> jazzy: okay so they are changing the way they create the array randomly and don't mention in the problems, bad
[03:11:27] <jazzy> mm
[03:11:58] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[03:12:48] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[03:13:07] *** Quits: Thanatos (~Thanatos@105.112.181.101) (Remote host closed the connection)
[03:13:49] *** Joins: Thanatos (~Thanatos@105.112.181.101)
[03:14:34] *** Joins: harpia (~harpia@187.49.85.200)
[03:15:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[03:15:05] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[03:16:39] *** Joins: kinro (kinro@gateway/vpn/protonvpn/kinro)
[03:16:49] *** Quits: NOTevil (~notevil@user/notevil) (Ping timeout: 256 seconds)
[03:17:11] *** Quits: teut (~teut@122.161.83.81) (Quit: Client closed)
[03:17:15] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[03:17:30] *** Parts: hsv (~unknown@user/hsv) ()
[03:17:35] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[03:18:49] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[03:18:52] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:d14a:5629:db89:3ed5) (Quit: Client closed)
[03:18:54] *** Quits: ivii (~ivan@user/ivii) (Read error: Connection reset by peer)
[03:18:54] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:19:03] *** Joins: SuperLag (~akulbe@user/superlag)
[03:19:06] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Client Quit)
[03:19:19] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[03:20:21] *** Quits: xa0s (~xa0s@mab.sdf.org) (Remote host closed the connection)
[03:20:46] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[03:22:06] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[03:22:19] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:22:29] <kinro> Why is it recommended to add a MANIFEST.in file to add package data even though include_package_data=True works without the need of such a file?
[03:22:39] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:24:15] *** Joins: xa0s (~xa0s@mab.sdf.org)
[03:27:06] *** Quits: harpia (~harpia@187.49.85.200) (Quit: harpia)
[03:27:23] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Read error: Connection reset by peer)
[03:27:30] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[03:27:53] *** Quits: millido (~millido@84.210.150.128) (Ping timeout: 256 seconds)
[03:28:05] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Read error: Connection reset by peer)
[03:28:16] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[03:28:25] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[03:28:41] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:29:42] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 272 seconds)
[03:32:25] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 256 seconds)
[03:32:34] *** Quits: beanzilla (~beanzilla@user/beanzilla) (Quit: ZNC 1.8.2 - https://znc.in)
[03:32:46] *** Joins: notevil (~notevil@user/notevil)
[03:32:47] *** Joins: millido (~millido@84.210.150.128)
[03:32:52] *** Joins: beanzilla (beanzilla@user/beanzilla)
[03:33:05] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[03:33:45] <exarkun> kinro: Are you sure it works in all of the different places you need it?
[03:33:58] <exarkun> kinro: For example, sdist and bdist_wheel probably use different rules to decide what files to collect...
[03:34:09] *** Joins: dme86 (~dan@user/dan86)
[03:34:15] *** Joins: Matt343 (~Matt343@c-69-181-108-8.hsd1.ca.comcast.net)
[03:37:39] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:37:54] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[03:38:06] <SnoopJ> Grr, it seems if you pass a .spec to PyInstaller, it ignores any --add-binary you passed on the command line :/
[03:38:12] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[03:38:13] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Read error: Connection reset by peer)
[03:38:33] <kinro> exarkun: I'm not sure at all. I just checked that the source archive "foo-0.0.1.tar.gz" includes all package data even when omitting the MANIFEST.in. That would be sdist right? So you are saying that the binary might be missing those package data files?
[03:39:07] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[03:39:15] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[03:39:49] <exarkun> kinro: it's another thing to check, anyway.  historically different distribution artifact types have used different rules to decide what to include.
[03:40:04] *** Joins: xa0s (~xa0s@mab.sdf.org)
[03:40:16] *** Joins: janb (~janb@78.156.33.193)
[03:40:27] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[03:40:38] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 250 seconds)
[03:40:44] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[03:40:47] <kinro> exarkun: Ok, the recommendation makes sense then. Thank you
[03:41:23] <kinro> exarkun: It should be enough to add "graft src" to add all package data?
[03:42:14] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[03:42:32] <exarkun> I remember being a fan of graft for a while but I have let most of those specific details about packaging fall out of my head
[03:42:36] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[03:43:10] <exarkun> I think if it produces the results you desire, anything you hack together is okay.  This is not an area that lends itself well to elegant solutions.
[03:44:09] <kinro> Cool, I really don't know anything about packaging yet so this is good to know to stop worrying and just keep going
[03:44:31] *** Joins: ArtfulDodger (~ArtfulDod@81.126.81.79.rev.sfr.net)
[03:45:13] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[03:45:23] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:45:31] *** Quits: sgen (~sgen@2607:fea8:7ce1:c8e0:b43b:ba1d:a4b3:8c7b) (Quit: Leaving)
[03:48:43] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[03:48:51] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 256 seconds)
[03:48:57] <ArtfulDodger> Hey! In general, when do you use __new__ instead of __init__ ? I know that the first builds the object and the second initializes it, but I have the feeling that in all situations, putting your code only in __init__ would do the job
[03:49:17] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[03:49:42] <SnoopJ> ArtfulDodger, an answer that is only half-cheeky: you use __new__ when you are sure that it is absolutely necessary to do so.
[03:49:46] <deniska> ArtfulDodger: pretty mich never
[03:49:49] <deniska> much*
[03:49:58] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 272 seconds)
[03:49:59] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[03:51:02] <deniska> So never, I untaught my coworker to use __new__
[03:51:03] *** Joins: Wulf (~Wulf@user/wulf)
[03:51:14] *** Quits: jpic (~jpic@82.142.6.174) (Ping timeout: 272 seconds)
[03:51:46] <ArtfulDodger> OK :) What are your arguments against __new__?
[03:52:03] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (Quit: Connection closed for inactivity)
[03:52:14] <SnoopJ> "It's useful when you're doing extremely clever things, and most code does not need to be *that* clever"
[03:52:38] *** Joins: jpic (~jpic@82.142.6.174)
[03:53:06] <nedbat> ArtfulDodger: __new__ is needed when you are subclassing an immutable class, but you shouldprobably never do that anyway
[03:53:47] <SnoopJ> ArtfulDodger, the distinction between __new__ and __init__ is that the first on *builds* an instance, and the second *initializes* one. Only rarely do Python programs need to care about that distinction, so __init__ is generally all we need to think about.
[03:54:10] *** Quits: kmh (~kmh@2a00:6020:5004:6800:9a00:b50c:ab5e:77c1) (Quit: Leaving)
[03:54:17] *** Joins: skapata (~Skapata@user/skapata)
[03:54:43] *** Joins: ice9 (~ice9@user/ice9)
[03:56:07] <SnoopJ> It comes up sometimes in metaprogramming, but like I said, if you aren't absolutely certain that you *need* to use it, you probably shouldn't be using it :)
[03:56:17] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec93-a79e-a5f0-138c.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[03:56:26] <ArtfulDodger> Yes yes but I try to understand
[03:56:28] <ArtfulDodger> SnoopJ, any example of clever thing? Would it modify the cls?
[03:56:43] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[03:57:02] *** Joins: ice9 (~ice9@user/ice9)
[03:57:37] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[03:57:37] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[03:58:01] <nedbat> ArtfulDodger: in our code at work, we have ~1M lines of code, and 23 "def __new__".
[03:58:17] <SnoopJ> ArtfulDodger, it probably wouldn't modify the class, but it can be useful in metaprogramming code that is being used to e.g. build classes dynamically.
[03:58:26] <deniska> most of use of __new__ I encountered could be replaced by an ordinary function
[03:58:30] <SnoopJ> the library `pydantic` uses it in a few places, for instance.
[03:58:33] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[03:58:45] *** Quits: millido (~millido@84.210.150.128) (Ping timeout: 256 seconds)
[03:58:47] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[03:59:01] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[03:59:23] *** Quits: snortie (~snortie@2a02:8308:386:b900:f881:7773:c6f5:7fb8) (Ping timeout: 256 seconds)
[03:59:42] *** Joins: kmh (~kmh@2a00:6020:5004:6800:e5f3:f326:a7fc:4075)
[04:01:15] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[04:01:29] *** Quits: frat3rius (~frat3rius@host-85.14.84.172.static.3s.pl) (Quit: The Lounge - https://thelounge.chat)
[04:02:03] <SnoopJ> here's an interesting/simple example from pathlib: when making an instance of Path or PurePath, the library decides which of the platform-specific subclasses it should make. https://github.com/python/cpython/blob/main/Lib/pathlib.py#L465-L473
[04:02:04] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec93-a79e-a5f0-138c.res6.spectrum.com)
[04:02:21] <deniska> one interesting thing I was surprised by but kinda shouldn't be, is that `async def __new__` works
[04:02:36] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[04:02:44] <oriba> is there a tool that creates graphics from module import statements of python code, to show the module dependencies expressed by import statements?
[04:03:00] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 240 seconds)
[04:04:11] *** Quits: koo5_ (~quassel@51.140.155.227) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[04:04:23] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:04:38] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[04:04:59] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[04:05:08] *** Joins: koo5_ (~quassel@51.140.155.227)
[04:05:46] <SnoopJ> oriba, pipdeptree can show you dependencies between installed libraries. Not sure about if you want to look at imports, but you could probably build something on top of it that filters out the parts you don't care about
[04:06:14] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[04:06:25] *** Quits: Matt343 (~Matt343@c-69-181-108-8.hsd1.ca.comcast.net) (Quit: Client closed)
[04:06:47] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[04:07:33] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[04:07:39] *** Joins: matsaman (~matsaman@user/matsaman)
[04:10:22] *** Quits: NealRame (~a@202-63-68-29.ip4.superloop.com) (Quit: Konversation terminated!)
[04:10:29] <oriba> SnoopJ: ok, thx; not sure if I have seen that tool before or if it's another similar thing. imports would be completely ok for me to get a quick overview. I hope it does not need pip-related data. I just want to analyze some python code - independent of pip or setup files for pip
[04:11:04] <SnoopJ> oriba, you can't tell how packages depend on each other from only the syntax
[04:11:48] *** Joins: OPK (~OPK@user/opk)
[04:12:03] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[04:12:05] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[04:12:40] <oriba> SnoopJ: what do you mean? If I import a module I know the potential calls. That would be ok for me. Or what are you referring too? Some special under-the-hood things, dynamically pitched together?
[04:12:51] <ArtfulDodger> Thank you for you opinions about __new__ :)
[04:13:07] <parv> One crude way is to run get profile data via a code profiler; then generate [after pruning] SVG file via dot command
[04:13:19] <SnoopJ> oriba, suppose I have the program `import A; import B`. Can you tell me from only this string if there is a dependency between A and B?
[04:13:23] <parv> s/run get/get/
[04:13:35] <phy1729> The only used of __new__ I've seen is to make a singleton
[04:14:08] *** Joins: envex (~rf@cpe-173-91-189-33.neo.res.rr.com)
[04:14:14] *** Joins: medium_cool (~medium_co@136.36.128.48)
[04:14:22] *** Quits: dude-x (~textual@72.76.74.165) (Read error: Connection reset by peer)
[04:14:37] *** Joins: dude-x_ (~textual@72.76.74.165)
[04:15:11] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[04:15:17] *** Joins: Kohe (~Kohe@77.49.10.102.dsl.dyn.forthnet.gr)
[04:15:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[04:15:53] *** Quits: Thanatos (~Thanatos@105.112.181.101) (Read error: Connection reset by peer)
[04:16:20] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[04:16:43] <oriba> SnoopJ: I could look in A and B if there are also imports. I just want to have an overview on code I have written by myself. So I (or that tool) can look at that code and see what's in there. If B imports A for example, I will see it then.
[04:16:46] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[04:17:01] <SnoopJ> oriba, right, you cannot tell only from the syntax I gave you if there is a dependency. There isn't enough information available.
[04:17:17] *** Joins: Thanatos (~Thanatos@105.112.181.101)
[04:17:24] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[04:18:26] *** Joins: ThanatosJ (~Thanatos@102.89.33.187)
[04:19:04] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[04:19:12] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[04:19:20] *** Quits: Thanatos (~Thanatos@105.112.181.101) (Read error: Connection reset by peer)
[04:20:49] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[04:21:29] *** Quits: mitchxv2 (~mitch@24.31.27.81) (Quit: WeeChat 2.8)
[04:22:16] *** Quits: Kohe (~Kohe@77.49.10.102.dsl.dyn.forthnet.gr) (Ping timeout: 272 seconds)
[04:22:36] *** Joins: summersault (~summersau@179.221.251.36)
[04:23:59] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[04:24:28] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[04:24:43] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[04:25:09] *** Joins: ham5urg_ (~ham5urg@p5ddfd035.dip0.t-ipconnect.de)
[04:25:15] *** Joins: sobkas (~sobkas@95.175.17.217)
[04:25:37] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Quit: ZNC - http://znc.in)
[04:26:16] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[04:26:37] *** Quits: ham5urg (~ham5urg@p5ddfdb74.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[04:27:42] *** Joins: NealRame (~a@202-63-68-29.ip4.superloop.com)
[04:28:49] *** Quits: ThanatosJ (~Thanatos@102.89.33.187) (Read error: Connection reset by peer)
[04:28:57] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[04:29:25] *** Joins: Thanatos (~Thanatos@102.89.33.158)
[04:30:47] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:30:50] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[04:31:37] *** Quits: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca) (Ping timeout: 256 seconds)
[04:32:27] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[04:32:32] *** Quits: tachoknight (~tachoknig@2600:1700:3060:3ee0:6dd8:7cde:f63:8efb) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:32:42] *** Quits: medium_cool (~medium_co@136.36.128.48) (Quit: I have gone to sleep. ZZZzzz…)
[04:33:09] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[04:33:14] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[04:34:07] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[04:34:49] *** Joins: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca)
[04:35:34] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[04:36:48] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[04:37:03] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:94ef:b0d4:6f01:91db)
[04:37:17] *** Joins: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net)
[04:40:41] *** Quits: Betal (~Betal@user/betal) (Ping timeout: 256 seconds)
[04:40:42] *** Joins: summersault (~summersau@179.221.251.36)
[04:41:03] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[04:41:43] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[04:42:39] *** Quits: rje (~textual@65.141.156.170) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:43:12] *** Quits: navigator (~Navigator@047-229-046-254.res.spectrum.com) (Quit: Leaving)
[04:43:41] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: quick everyone outta the universe)
[04:44:25] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[04:45:29] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[04:45:31] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 256 seconds)
[04:45:48] *** Joins: millido (~millido@84.210.150.128)
[04:46:29] *** Joins: navigator (~Navigator@2605:6440:3008:a001::8251)
[04:47:05] <navigator> Hey everyone, I've got a random error dealing with pyMongo all of a sudden: "[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate"
[04:47:29] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 256 seconds)
[04:47:32] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[04:47:45] <navigator> I'm just doing a basic mongodb collection read like the code here: https://www.w3schools.com/python/python_mongodb_find.asp
[04:47:58] *** Joins: frat3rius (~frat3rius@host-85.14.84.172.static.3s.pl)
[04:48:03] <navigator> It works on Windows, but on my RaspberryPi it gives me that error
[04:48:27] <navigator> There is nothing different, just the OS I'm using to run the MongoDB call
[04:49:17] *** Quits: Z-cat (~Z-cat@user/z-cat) (Ping timeout: 250 seconds)
[04:49:27] <parv> So old, expired certificates?
[04:49:52] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[04:50:18] *** Quits: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[04:51:26] <tr4ck3ur> same idea, CA are perhaps different between the two platform ... https://askubuntu.com/questions/1323857/how-to-noninteractively-add-certificate-authority-ca-ssl-certificates-from-scr
[04:51:29] <navigator> I guess? But I've never needed to update them before
[04:51:34] *** Quits: Ninpo (~Ninpo@user/ninpo) (Quit: WeeChat 2.8)
[04:51:56] <navigator> Taking a look at the link now
[04:52:25] <tr4ck3ur> yes, the idea is to add the CA to your rasp config, not really linked to the link
[04:52:52] *** Joins: thurs (~thurs@ip68-225-209-147.ph.ph.cox.net)
[04:53:55] <tr4ck3ur> let's say check your secure layer on mongo side to find which is the missing SSL chain
[04:54:11] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[04:54:25] <SnoopJ> possibly inspecting the output of `python3 -m pip freeze` in both environments will show a package version difference that corresponds to the old certs?
[04:54:52] <navigator> Ok cool. Also, I'm using MongoDB official data hosting so it's not self-hosted.
[04:55:00] <SnoopJ> Either that or the relevant certs are managed by the system and the system is old
[04:55:02] <navigator> Let me check the pymongo versions
[04:55:08] <navigator> Ok
[04:56:19] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:56:33] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec93-a79e-a5f0-138c.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[04:57:15] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:94ef:b0d4:6f01:91db) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[04:57:16] *** Joins: ninpo (~ninpo@user/ninpo)
[04:57:30] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[04:57:54] <navigator> Windows pymongo version: 3.11 and Rpi: 4.0.1
[04:58:08] <navigator> I guess I'll downgrade and try that on Rpi?
[04:58:36] <tr4ck3ur> do you use a secure layer on mongodb side ?
[04:59:11] <navigator> Not that I'm aware of? How could I check that?
[04:59:59] <tr4ck3ur> https://pymongo.readthedocs.io/en/stable/examples/tls.html
[05:00:02] *** Quits: Thanatos (~Thanatos@102.89.33.158) (Read error: Connection reset by peer)
[05:00:36] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[05:00:54] *** Quits: Fauve (~Fauve@user/fauve) (Ping timeout: 272 seconds)
[05:00:56] *** Joins: Thanatos (~Thanatos@102.89.33.158)
[05:00:59] <SnoopJ> downgrading doesn't seem like it would fix an out-of-date cert
[05:01:30] <tr4ck3ur> you have the same symptom as https://pymongo.readthedocs.io/en/stable/examples/tls.html#troubleshooting-tls-errors
[05:01:40] <SnoopJ> but very possibly this one isn't being managed by the library anyway, the pymongo docs (above) don't seem to say anything about that, just the usual "update your certs"
[05:01:54] <tr4ck3ur> +1
[05:01:55] <Cera> is there a vim thing people can recommend for using it to edit python?
[05:02:01] <Cera> you can add plugins to it right?
[05:02:11] *** Quits: Thanatos (~Thanatos@102.89.33.158) (Read error: Connection reset by peer)
[05:02:13] <SnoopJ> Cera, there are a variety of vim plugins. What functionality are you looking for?
[05:02:22] <Cera> uhm
[05:02:39] *** Joins: zuplex (~zuplex@202.51.76.90)
[05:02:39] <Cera> What do you mean?
[05:03:06] <SnoopJ> well, vim can "edit python" right out of the box, including syntax highlighting and some basic understanding of the syntax. So I assume you're asking about more advanced features like code completion/etc.?
[05:03:35] * SnoopJ uses vim but doesn't use any Python-specific plugins
[05:03:51] <Cera> you just use vim as it is?
[05:04:06] <SnoopJ> I do have some customization and a handful of plugins but none of them are related to Python
[05:04:25] <Cera> Should I just copy what you have?
[05:04:46] <SnoopJ> I couldn't say because I don't know what functionality you have in mind
[05:04:58] <parv> Setting up ctags could go some way, in addition to "word" completion from open files
[05:05:09] <SnoopJ> my .vimrc is here, though: https://github.com/SnoopJeDi/dotfiles/blob/master/.vimrc
[05:05:21] <SnoopJ> (okay, I lied: I do have the Jedi plugin installed, but I don't use it)
[05:05:33] <Cera> I that like a configuration file for vim?
[05:05:54] <SnoopJ> yes, vimrc is a configuration for vim
[05:07:51] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[05:08:03] <Cera> How do I find where my vimrc file is?
[05:08:05] <SnoopJ> navigator, one thing you can try is running update-ca-certificates, which I believe is present on raspbian for updating certs
[05:08:16] *** Quits: navigator (~Navigator@2605:6440:3008:a001::8251) (Remote host closed the connection)
[05:08:33] *** Joins: rje (~textual@50.35.241.164)
[05:08:53] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[05:08:54] <Cera> oh I have to create it
[05:09:11] <SnoopJ> Cera, user configuration is usually done in $HOME/.vimrc. There are a few different places for this kind of configuration, the vim manual lists them
[05:09:27] <SnoopJ> (but most users will be customizing it with the one in their home dir)
[05:10:27] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[05:10:54] *** Joins: monkeyPlus (~monkeyPlu@2001:8a0:6cc5:7e01:24b8:9989:eb16:212a)
[05:11:24] *** Quits: SaltHillStroller (~SaltHillS@searspoint.nvidia.com) (Ping timeout: 240 seconds)
[05:11:24] *** Quits: SaltHilStroller_ (~SaltHillS@searspoint.nvidia.com) (Ping timeout: 240 seconds)
[05:11:28] <monkeyPlus> hey. noob question. dicitonary values is returning a double list, instead of a list. The dictionary is in the form {key: [list]}
[05:11:38] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:b59a:8933:faf5:60c9) (Ping timeout: 250 seconds)
[05:12:13] *** Quits: akk (~akk@75-161-95-245.albq.qwest.net) (Quit: +++)
[05:12:26] <parv> monkeyPlus, Look into the source that is producing list of list
[05:12:40] <monkeyPlus> oh
[05:12:40] *** Quits: janb (~janb@78.156.33.193) (Quit: Leaving)
[05:12:41] <monkeyPlus> :/
[05:12:41] <Cera> oh I found this https://github.com/amix/vimrc
[05:13:13] <monkeyPlus> ok thks
[05:14:21] *** Joins: Fauve (~Fauve@user/fauve)
[05:14:21] *** Joins: death916 (~death916@c-73-220-87-102.hsd1.ca.comcast.net)
[05:14:22] *** Quits: death916 (~death916@c-73-220-87-102.hsd1.ca.comcast.net) (Changing host)
[05:14:22] *** Joins: death916 (~death916@user/death916)
[05:14:59] <SnoopJ> Cera, if you're new to vim (and it sounds like you are), I would recommend learning the base features first before exploring plugins. Basic themes and stuff are useful, but I don't find the other stuff very necessary.
[05:15:09] <SnoopJ> #vim can also offer tons of advice
[05:15:19] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) ()
[05:16:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[05:17:38] <tr4ck3ur> thanks for sharing it, a lot of automation stuff !
[05:18:23] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[05:19:54] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[05:20:20] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:20:49] <Cera> SnoopJ I was stuck in vim about an hour ago and didn't know how to get out :(
[05:20:58] <Cera> that was fun
[05:21:48] <SnoopJ> All the more reason not to add the complications of plugins to the learning curve ;)
[05:23:30] *** Quits: naranja (~orange@user/orangeboxcutter) (Remote host closed the connection)
[05:23:40] *** Joins: orangeboxcutter (~orange@user/orangeboxcutter)
[05:24:07] <monkeyPlus> thks for help..later
[05:24:11] *** Quits: monkeyPlus (~monkeyPlu@2001:8a0:6cc5:7e01:24b8:9989:eb16:212a) (Quit: monkeyPlus)
[05:25:13] *** Joins: SaltHilStroller_ (~SaltHillS@searspoint.nvidia.com)
[05:25:13] *** Joins: SaltHillStroller (~SaltHillS@searspoint.nvidia.com)
[05:29:16] *** Joins: communistmuslim (~communist@bras-base-tnhlon4048w-grc-67-67-71-22-200.dsl.bell.ca)
[05:30:20] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:33] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:30:36] *** Quits: SaltHilStroller_ (~SaltHillS@searspoint.nvidia.com) (Ping timeout: 240 seconds)
[05:30:45] <oriba> Cera: I use vim without any plugins. And I like it that way.
[05:31:18] *** Quits: SaltHillStroller (~SaltHillS@searspoint.nvidia.com) (Ping timeout: 272 seconds)
[05:31:26] <oriba> Cera: "I was stuck in vim about an hour ago and didn't know how to get out" - hahah, thats the classic thing with vim :-)
[05:32:12] <oriba> $ killall vim # ;-)
[05:32:53] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[05:33:08] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[05:33:22] *** Joins: vlm (~vlm@user/vlm)
[05:33:57] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[05:34:37] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 240 seconds)
[05:35:28] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[05:35:34] *** Parts: bancroft (~bancroft@user/bancroft) (WeeChat 3.2)
[05:35:44] *** Joins: brabrax (~brabrax@user/brabrax)
[05:36:18] *** Quits: revilaika (~revilaika@151.144.8.109.rev.sfr.net) (Quit: WeeChat 3.4)
[05:36:20] <emerent> surely it doesn't take an hour to reboot
[05:36:21] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[05:36:22] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[05:36:45] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[05:37:08] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[05:37:38] <SnoopJ> reboot?
[05:38:19] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[05:40:00] *** Joins: tachoknight (~tachoknig@2600:1700:3060:3ee0:9dee:76d0:4ba1:3c6)
[05:40:03] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[05:40:59] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[05:42:03] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[05:43:48] *** Quits: ttpp (~tttppp@37.115.45.192) (Ping timeout: 240 seconds)
[05:44:31] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[05:49:00] *** Quits: beli6147 (~Thunderbi@cpe-76-175-52-6.socal.res.rr.com) (Quit: beli6147)
[05:50:26] *** Quits: kinro (kinro@gateway/vpn/protonvpn/kinro) ()
[05:50:36] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[05:50:38] *** Joins: noarb- (~noarb@user/noarb)
[05:50:41] *** Quits: oriba (~oriba@dynamic-077-183-242-005.77.183.pool.telefonica.de) (Ping timeout: 256 seconds)
[05:50:57] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 272 seconds)
[05:51:03] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[05:51:56] *** Joins: control (~v1@user/control)
[05:52:38] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[05:52:52] <control> hello, im trying to generate a large number (64bit + ) https://bpa.st/UAQQ . but python says 'int too large to convert to C ssize_t'. there are any work arounds?
[05:54:24] <BtbN> You're asking it to allocate an array with 26213023705161793534 elements right there
[05:54:30] *** Joins: SaltHilStroller_ (~SaltHillS@searspoint.nvidia.com)
[05:54:31] *** Joins: SaltHillStroller (~SaltHillS@searspoint.nvidia.com)
[05:55:10] <BtbN> even if every single element is just a single byte, that's over 20 Exabytes of RAM. I doubt you have that.
[05:55:17] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:55:37] <nedbat> BtbN: in python 3, range doesn't make a full list, but it does limit itself to 64-bit ints
[05:55:56] <BtbN> Passing it to random.sample() will, since it calls C functions in the background
[05:56:07] <nedbat> control: I'm not sure you can do it that way, but you could use randint instead
[05:56:09] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[05:56:15] <nedbat> BtbN: does it?
[05:56:37] <BtbN> it's not at all made to sample out of... trillions and trillions of elements, no :D
[05:57:16] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[05:57:43] *** Quits: Jimmy2027 (~hendrik@142.47.3.213.static.wline.lns.sme.cust.swisscom.ch) (Read error: Connection reset by peer)
[05:58:04] <nedbat> BtbN: i think it is more sophisticated than that, but i don't know the details
[05:58:10] *** Joins: Jimmy2027 (~hendrik@142.47.3.213.static.wline.lns.sme.cust.swisscom.ch)
[05:58:17] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[05:59:24] <nedbat> BtbN: the docstring even says: "To choose a sample from a range of integers, use range() for the population argument.  This is especially fast and space efficient for sampling from a large population:    sample(range(10000000), 60)"
[05:59:42] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[06:00:01] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[06:00:35] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[06:00:45] <control> nedbat: right. but any chances to make a biger number?
[06:00:57] <SnoopJ> and range() is already a sequence so there wouldn't be any need to convert it
[06:01:08] *** Joins: QuaternionsRock (~Quaternio@2601:197:a7f:79d6:9950:d86c:6814:9ae8)
[06:01:09] <BtbN> you'll have more luck to go the mathematical route with such HUGE numbers
[06:01:33] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[06:01:35] <BtbN> might have to resort to BCD or something though. Not sure how far you can push python ints and floating point randomness
[06:01:36] <Repiphany> [random.randrange(92233720368547758081,118446744073709551615) for i in range(10)]
[06:01:37] <SnoopJ> although I guess it's not-quite-a-sequence if you make it long enough to overflow the length
[06:02:00] <Repiphany> Yeah, not sure how much I'd trust the randomness there, maybe just generate strings to turn into ints
[06:02:08] <BtbN> like, that's so many possible numbers... does the standard rng even have enough precision to have a chance to select all of them?
[06:02:29] <nedbat> control: there are a few ways to do it.  can you tell us more about the thing you are making?
[06:02:52] <QuaternionsRock> Is it unsafe to take an array `foo` of `'U5'` and do `foo.dtype = 'U1'` *without* taking a view?
[06:03:01] <QuaternionsRock> (ndarray, my apologies)
[06:03:49] <QuaternionsRock> I want to transform the array into a 2D array where each column is one character of the string
[06:04:13] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:04:22] <SnoopJ> QuaternionsRock, it's a supported operation, although it's a little weird to do this instead of using .astype("U1")
[06:04:29] *** Quits: KnowledgeShark (~Knowledge@50.34.198.222) (Ping timeout: 250 seconds)
[06:04:32] *** Quits: justGhost (~justache@user/justache) (Read error: Connection reset by peer)
[06:04:35] <SnoopJ> Is there some reason you're avoiding making a view?
[06:05:52] *** Joins: justGhost (~justache@user/justache)
[06:05:54] <QuaternionsRock> SnoopJ .astype("U1") only takes the first character in each word, setting the dtype gives you a 1D array containing each character of each string in the source array
[06:06:19] <nedbat> control: I tried defining my own Range class with Python ints, but __len__ has to return a native int, so it doesn't work
[06:06:41] <Repiphany> .view("U1')
[06:07:07] *** Quits: unyu (~pyon@user/pyon) (Quit: brb)
[06:07:08] <SnoopJ> ah, and so it does. I guess what Repiphany said
[06:08:38] <SnoopJ> I guess the reasoning there is that astype() is "please cast these data to the new dtype"
[06:08:48] <QuaternionsRock> Well I'm more just curious: I've read that `foo.view('U1')` is a solution, but I'm not sure I like it because I'm just writing an array generator function, and _forcing_ the caller to copy-on-write in situations that don't actually require it
[06:08:49] <SnoopJ> which truncates when going to a shorter 'U' dtype
[06:12:21] *** evanextreme is now known as evanextreme[away
[06:12:59] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:13:26] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Client Quit)
[06:14:59] *** Quits: nomic (~nomic@185.217.117.193) (Quit: Leaving)
[06:15:57] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:16:15] *** Joins: djapo (~archangel@user/djapo)
[06:16:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[06:16:33] *** Joins: duuude (~user@user/duuude)
[06:17:06] <QuaternionsRock> But I'm curious if that could cause problems when e.g. replacing a character element with a string that is the same number of characters but a different number of bytes
[06:17:09] *** Quits: moonmoon (awoo@libera/staff/moonmoon) (Quit: *poof*)
[06:17:49] <QuaternionsRock> It should be fine if numpy uses a fixed-width format (UTF-16 I think?) but bad if it uses a variable-width format (although idk how that would work with arrays)
[06:18:44] *** Joins: moonmoon (~awoo@libera/staff/moonmoon)
[06:19:47] *** Quits: moonmoon (~awoo@libera/staff/moonmoon) (Client Quit)
[06:19:54] *** Joins: moonmoon (awoo@libera/staff/moonmoon)
[06:19:57] *** Joins: oriba (~oriba@dynamic-077-191-095-152.77.191.pool.telefonica.de)
[06:19:57] <QuaternionsRock> I have no idea why I thought views were copy-on-write -_-
[06:20:25] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[06:20:25] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[06:21:49] <SnoopJ> yea, they aren't
[06:22:35] <SnoopJ> I'm not sure how the U* datatypes are represented, interesting question
[06:23:06] <SnoopJ> I would think if it's going to possibly cause safety issues, they would disallow it, but that doesn't provide much certainty
[06:23:17] *** Quits: moog (~moog@107.126.48.23) (Remote host closed the connection)
[06:24:35] *** Joins: JordiGH (~jordi@user/jordigh)
[06:25:03] <Repiphany> Filled with null bytes
[06:25:12] *** Joins: moog (~moog@107.126.48.23)
[06:26:22] <SnoopJ> UTF-16 would be intuitive, at least
[06:29:29] *** Joins: ano (~ano@user/ano)
[06:29:46] *** Quits: communistmuslim (~communist@bras-base-tnhlon4048w-grc-67-67-71-22-200.dsl.bell.ca) (Quit: Leaving)
[06:31:04] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[06:31:28] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 272 seconds)
[06:31:43] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[06:32:03] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (Quit: Connection closed for inactivity)
[06:35:11] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Remote host closed the connection)
[06:36:17] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[06:37:01] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:38:00] *** Joins: ATAD (~ATAD@user/atad)
[06:38:44] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[06:41:41] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[06:42:21] *** Joins: Vonter (~Vonter@user/vonter)
[06:45:24] *** Quits: SaltHillStroller (~SaltHillS@searspoint.nvidia.com) (Ping timeout: 272 seconds)
[06:45:24] *** Quits: SaltHilStroller_ (~SaltHillS@searspoint.nvidia.com) (Ping timeout: 272 seconds)
[06:45:42] *** Joins: SaltHilStroller_ (~SaltHillS@searspoint.nvidia.com)
[06:45:42] *** Joins: SaltHillStroller (~SaltHillS@searspoint.nvidia.com)
[06:45:59] *** Quits: Mathisen (mathisen@about/windows/staff/mathisen) (Ping timeout: 256 seconds)
[06:46:17] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[06:47:40] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[06:47:56] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:48:12] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[06:48:20] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:48:57] *** Joins: Mathisen (mathisen@about/windows/staff/mathisen)
[06:49:34] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[06:49:53] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:50:24] *** Quits: oriba (~oriba@dynamic-077-191-095-152.77.191.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[06:50:37] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[06:52:07] <jazzy> if I've got a base case for a recursive function wherein I do nothing, would it be better to have `pass`, `return`, or `return None`?
[06:52:10] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[06:52:22] <jazzy> It feels to me that `pass` is the most descriptive
[06:52:35] <SnoopJ> the last two are synonyms
[06:52:36] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 240 seconds)
[06:52:41] <jazzy> yeah I know
[06:52:43] *** Quits: evanextreme[away (~evan@2604:4080:1000:8150:913b:c4e3:4b44:3850) (Quit: My laptop has gone to sleep. Bye!)
[06:52:55] * SnoopJ would probably use a bare `return`
[06:53:05] <jazzy> got it
[06:53:09] <jazzy> any justification?
[06:53:39] <SnoopJ> because "go back up the call stack" is more explicit than "don't do anything and go hit the implicit return to go back up the call stack"
[06:54:00] <jazzy> mmm I like it
[06:56:05] <SnoopJ> I don't often write recursive functions but sometimes I have branches that set a name like `result` and the function always does `return result` where the branches join back up
[06:56:51] <SnoopJ> I guess that's not really specific to recursion heh
[06:57:12] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[06:57:30] <jazzy> yeah only reason I'm doing this stuff is for interviews' sake
[06:57:35] <jazzy> algo questions are the way of the world now :(
[06:57:56] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[06:58:01] <jazzy> the one plus side to that, though, is that the process is fairly deterministic now
[06:58:08] <jazzy> study algo -> get job
[06:58:39] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[06:58:43] <jazzy> though I'd prefer 'beg for job on hands and knees' -> get job
[06:59:05] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:00:19] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[07:01:28] *** Joins: akaWolf (~akaWolf@akawolf.org)
[07:01:51] *** Joins: Roey (~Roey@user/Roey)
[07:02:06] *** Roey is now known as CanadianFascism
[07:02:07] *** Joins: millido (~millido@84.210.150.128)
[07:03:47] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:03:52] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[07:04:26] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:06:00] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[07:06:29] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:224:1dff:fec8:64f6) (Quit: Client closed)
[07:06:31] *** Joins: adeliktas5 (~adeliktas@i59F52980.versanet.de)
[07:07:16] *** Joins: Azem (~haise01@user/haise01)
[07:07:48] *** Quits: adeliktas (~adeliktas@i59F52D25.versanet.de) (Ping timeout: 240 seconds)
[07:07:48] *** adeliktas5 is now known as adeliktas
[07:08:19] *** Quits: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Quit: Ping timeout (120 seconds))
[07:08:33] *** Quits: parv (~quass@user/parv) (Quit: parv)
[07:08:34] *** Joins: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[07:08:37] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[07:09:02] *** Joins: pycurious (~Adium@user/pycurious)
[07:09:25] <pycurious> from multiprocessing import Process —> When you do proc = Process(…). start() - how does this process end, and when?
[07:09:46] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:b59a:8933:faf5:60c9)
[07:10:16] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[07:10:35] *** Quits: Emet-Selch (~haise01@user/haise01) (Ping timeout: 256 seconds)
[07:10:51] *** Joins: ejjfunky0 (~ejjfunky2@125.164.17.4)
[07:12:46] *** Joins: hams (~hams@user/hams)
[07:13:28] *** Quits: hams (~hams@user/hams) (Client Quit)
[07:13:44] *** Joins: hams (~hams@73.232.205.0)
[07:13:44] *** Quits: hams (~hams@73.232.205.0) (Changing host)
[07:13:44] *** Joins: hams (~hams@user/hams)
[07:14:22] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[07:15:50] *** Joins: shscjuhji (~shscjuhji@112.32.49.229)
[07:16:27] *** Quits: shscjuhji (~shscjuhji@112.32.49.229) (Read error: Connection reset by peer)
[07:17:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[07:18:12] <pycurious> https://dpaste.org/DeM8 - what does line 18 do for this code? Is that required?
[07:18:57] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[07:20:02] <matsaman> https://docs.python.org/3/library/multiprocessing.html#multiprocessing.Process.join
[07:20:07] <matsaman> remove it and you'll see if it's required
[07:20:31] <pycurious> matsaman: the behavior does not change - neither does the output - if i remove it
[07:20:47] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[07:20:47] <audio> i have a request.POST querydict: https://bpa.st/W3TQ and i try to get a key's value by doing `request.POST.get('every_day_of_month_array[]')`. it's supposed to be [3,14] but i keep getting just '14'. What is going on?
[07:21:17] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[07:21:19] <pycurious> matsaman: I'm trying to figure out when does proc.start() itself terminates?
[07:21:21] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[07:21:42] *** Joins: mitchxv2 (~mitch@24.31.27.81)
[07:22:08] <matsaman> audio: https://stackoverflow.com/questions/39565023/django-querydict-only-returns-the-last-value-of-a-list
[07:22:41] <audio> matsaman, thanks
[07:22:53] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:24:03] <matsaman> pycurious: https://stackoverflow.com/questions/32053618/how-to-to-terminate-process-using-pythons-multiprocessing#answer-32154110
[07:24:21] *** Quits: CanadianFascism (~Roey@user/Roey) (Quit: Client exiting)
[07:24:57] *** Quits: SaltHilStroller_ (~SaltHillS@searspoint.nvidia.com) (Ping timeout: 240 seconds)
[07:24:57] *** Quits: SaltHillStroller (~SaltHillS@searspoint.nvidia.com) (Ping timeout: 240 seconds)
[07:26:02] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[07:26:31] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:e0e6:a54e:1f45:dc64)
[07:26:57] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[07:27:41] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 250 seconds)
[07:27:51] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[07:28:20] *** Joins: KnowledgeShark (~Knowledge@50.34.198.222)
[07:29:03] *** Quits: stikx (~stikx@2604:3d08:7a7e:a900::67d6) (Remote host closed the connection)
[07:29:33] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:29:41] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[07:29:51] *** Joins: stdout (~stdout@2605:ab80:b000:7202:983b:dcb7:16d6:b705)
[07:30:01] *** Quits: haasn (~nand@haasn.dev) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[07:30:11] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:31:23] *** Joins: haasn (~nand@haasn.dev)
[07:32:00] *** Quits: QuaternionsRock (~Quaternio@2601:197:a7f:79d6:9950:d86c:6814:9ae8) (Quit: Client closed)
[07:32:16] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Ping timeout: 272 seconds)
[07:32:34] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:34:22] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:35:39] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:38:21] <pycurious> matsaman: I'm trying to run a function in a process - when the function ends, I was hoping the process would terminate/cleanup. I am guessing, with just start() it becomes a zombie?
[07:38:32] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[07:38:52] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[07:39:55] *** Quits: ano (~ano@user/ano) (Ping timeout: 240 seconds)
[07:40:34] <matsaman> dunno, but you could try it and see
[07:42:03] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[07:42:07] *** Joins: ano (~ano@user/ano)
[07:42:47] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[07:42:57] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[07:45:13] *** Joins: Sadale (~Sadale@user/sadale)
[07:45:57] *** Quits: sreve (~quassel@p4ff44eec.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[07:46:13] <pycurious> when i do that it closes cleanly…not sure
[07:46:14] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[07:46:16] <pycurious> without join
[07:46:19] *** Joins: sreve (~quassel@p54a717a7.dip0.t-ipconnect.de)
[07:49:20] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[07:50:40] <humanBird> what gives?   Successfully installed Django-3.2.6 Pillow-9.0.1         Some time later:   ERRORS:
[07:50:40] <humanBird> web_1    | accounts.UserImage.image: (fields.E210) Cannot use ImageField because Pillow is not installed.
[07:50:41] <humanBird> web_1    |      HINT: Get Pillow at https://pypi.org/project/Pillow/ or run command "python -m pip install Pillow".
[07:51:13] <humanBird> it's installed and not installed at the same time.  this is the only requirement in the requirements.txt that is giving me trouble now...
[07:51:37] <SnoopJ> Probably the environment that got it installed and the environment running whatever web_1 is aren't the same environment?
[07:52:36] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[07:53:31] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Read error: Connection reset by peer)
[07:53:50] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[07:54:10] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[07:54:50] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[07:54:59] <humanBird> i'm looking at the docker file.  is it possible that using some "builder' pattern where you "from python:3.9.6-alpine" multiple times, the package gets sent somewhere else?
[07:55:10] *** Joins: Betal (~Betal@user/betal)
[07:55:43] <humanBird> it looks like it's trying to compile some binaries with pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt
[07:55:46] <SnoopJ> when you enter a Docker `FROM` clause, you won't have any of the artifacts from previous stages unless you copy them yourself.
[07:59:04] <humanBird> wouldn't that cause a whole bunch more errors, like on the very first pip package installed?
[07:59:29] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[08:01:14] <humanBird> there shouldn't be any extra enviornments in this running docker container.  there's no venv or anythibng else.  since the docker container is the environment
[08:01:27] *** Quits: Staunch (~Staunch@150.73.100.34.bc.googleusercontent.com) (Quit: Leaving...)
[08:01:33] <humanBird> i don't see any virutalenv or conda or anything else like that in the docker file or yaml
[08:02:22] <FH_thecat> how can I check that file is not a hidden file (name does not start with ".") ?
[08:02:28] <humanBird> i guess i could comment out the 2nd FROM clause and see what happens
[08:02:45] <FH_thecat> if os.path.isfile(file_name) and (not hidden ...)
[08:02:46] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-6450-72b9-8041-2134.res6.spectrum.com) (Read error: Connection reset by peer)
[08:03:20] *** Quits: peterandre (peterandre@2605:6400:c847:1524::4251) (Quit: Oooh mysterious girl!)
[08:05:31] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec93-a79e-a5f0-138c.res6.spectrum.com)
[08:06:14] *** Joins: unyu (~pyon@user/pyon)
[08:07:25] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:08:27] <humanBird> i see an explicit  COPY --from=builder /usr/src/app/wheels /wheels
[08:09:00] <humanBird> my only conclusion is that this isn't enough to get Pillow to work in the new image and some enviornmental variable needs to be set
[08:12:21] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:16:09] <humanBird> just checked the /wheels folder and there's a Pillow-9.0.1-cp39-cp39-linux_x86_64.whl  there.  There's also a system pillow as well  i wonder if this image is getting confused over what pillow to use
[08:17:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[08:21:11] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[08:23:04] *** Joins: funhouse (~funhouse@user/funhouse)
[08:26:33] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:26:58] *** Joins: portalrat (~portalrat@user/portalrat)
[08:27:37] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[08:28:28] <push-f> now that python has match blocks, is there some assert_matches function for unit tests that produces nice error mesages?
[08:33:04] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[08:35:39] *** Joins: peterandre (peterandre@2605:6400:c847:1524::4251)
[08:37:19] *** Joins: dre (~dre@2001:8003:c932:c301:147f:456a:d163:a87f)
[08:39:47] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[08:40:12] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 240 seconds)
[08:41:45] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[08:42:11] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[08:42:39] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[08:43:10] *** Joins: JordiGH (~jordi@user/jordigh)
[08:44:55] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 256 seconds)
[08:45:06] *** Quits: r4ulrm (~raul@181.27.127.43) (Ping timeout: 272 seconds)
[08:45:15] *** Joins: r4ulrm (~raul@181.27.127.43)
[08:45:50] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:46:48] *** Joins: analoq (~yashi@user/dies)
[08:51:10] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[08:51:42] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[08:51:50] *** Quits: subopt (~subopt@2603-8081-2302-459a-f144-c9b5-62c8-1c19.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:52:45] *** Joins: subopt (~subopt@2603-8081-2302-459a-054b-dc1a-bca1-20aa.res6.spectrum.com)
[08:52:51] *** subopt is now known as _subopt
[08:52:55] *** Joins: Bartle_94 (~Bartle_94@2601:280:cb01:1fea:2c98:a9d5:695c:1d31)
[08:53:00] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[08:54:55] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:56:11] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[08:56:32] *** Joins: mickey8 (~user@user/mickey)
[08:57:11] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[08:59:34] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 250 seconds)
[09:00:08] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[09:00:12] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[09:00:53] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:03:00] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[09:03:37] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 256 seconds)
[09:03:58] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[09:04:32] *** Joins: wyclif (~wyclif@user/wyclif)
[09:04:39] *** Joins: widp (~user@124.123.105.202)
[09:05:38] <widp> " var and grad do not have the same shape[82680] [1,82680] [Op:ResourceApplyAdagradV2]" I get this error using the tensorflow constrained optmization library.
[09:05:47] <widp> How do I fix this?
[09:06:00] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[09:07:57] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:07:57] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[09:09:05] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:12:11] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:b59a:8933:faf5:60c9) (Ping timeout: 256 seconds)
[09:12:21] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[09:12:25] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:13:44] *** Quits: bloody (~bloody@user/bloody) (Quit: okluvyabubye)
[09:14:00] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[09:14:13] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[09:15:17] <foo> I'm moving off python 3.6.8 ... finally... probably makes sense to go straight to 3.9 - right?
[09:15:22] <foo> Any reason *not* to do that?
[09:16:27] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[09:17:08] <foo> Oh geez, maybe even 3.10.2... that might be too big of a jump?
[09:17:31] <matsaman> I mean are you going to just make sure things work or try and rewrite them?
[09:17:46] <foo> matsaman: just make sure things work initially... then rewrite later to take advantage of new features
[09:17:55] <foo> matsaman: I think that's ok?
[09:18:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[09:18:03] <matsaman> seems okay to me
[09:18:15] <matsaman> not sure why you'd jump to 3.9 but not 3.10, could just be me, though
[09:18:16] <foo> matsaman: thank you for your blessing. *bows* You can now legally use me in your code.
[09:18:24] <matsaman> =P
[09:18:25] <foo> matsaman: oh, I didn't realize 3.10 was even out, he.
[09:18:26] <foo> heh
[09:18:31] <foo> I just googled right now and saw it was
[09:19:58] *** Joins: pycurious (~Adium@user/pycurious)
[09:20:01] *** Joins: smoke (~smoke@user/smoke)
[09:20:37] *** Quits: smoke (~smoke@user/smoke) (Client Quit)
[09:20:39] *** Quits: Bartle_94 (~Bartle_94@2601:280:cb01:1fea:2c98:a9d5:695c:1d31) (Quit: Client closed)
[09:20:40] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[09:21:24] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[09:21:52] *** Joins: paprika (~pepper@user/pepper)
[09:21:57] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:23:44] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 272 seconds)
[09:24:25] *** Quits: stdout (~stdout@2605:ab80:b000:7202:983b:dcb7:16d6:b705) (Quit: Leaving)
[09:24:53] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 256 seconds)
[09:26:54] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[09:28:03] *** Joins: stdout (~stdout@2605:ab80:b000:7202:983b:dcb7:16d6:b705)
[09:28:10] * foo researches how to get python 3.10 on ubuntu bionic
[09:29:02] <wyclif> Be thankful you don't have to install it on macOS
[09:29:07] <matsaman> pyenv?
[09:29:09] <foo> wyclif: ha
[09:29:11] <wyclif> Yeah
[09:29:14] <wyclif> That's what I use
[09:29:27] <foo> matsaman: I have pyenv, but I wonder if I need python3.10-dev ? /me tests in docker
[09:29:29] <matsaman> no reason your system has to use 3.10
[09:29:35] * foo tries to remove that from his docker file
[09:29:37] <wyclif> But still. The dev environment stuff you have to do is a pain
[09:29:46] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:31:07] *** Quits: Cera (~Cera@user/Cera) (Ping timeout: 256 seconds)
[09:32:29] *** Joins: wholesomedonut (~wholesome@2601:680:c003:cbf0:7996:d2fe:8fa4:1569)
[09:33:22] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[09:38:58] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:40:23] *** Joins: amogorkon (~amogorkon@port-92-196-27-200.dynamic.as20676.net)
[09:41:03] *** Quits: f1se4 (~f1se4@213.195.113.45) (Quit: WeeChat 3.4)
[09:42:04] *** Quits: onichomp (~onichomp@2806:264:4408:12a:1834:a2dd:95eb:3f92) (Read error: Connection reset by peer)
[09:42:08] <queue-> /list
[09:42:42] *** Joins: onichomp (~onichomp@2806:264:4408:12a:1834:a2dd:95eb:3f92)
[09:43:35] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:44:02] *** Joins: upsala (~zcb@185.209.196.166)
[09:44:07] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:45:33] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[09:45:46] *** Joins: pycurious (~Adium@user/pycurious)
[09:46:06] *** Quits: queue- (~nerd@user/queue/x-7267619) (K-Lined)
[09:46:46] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[09:48:57] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:49:17] *** Quits: deviantfero (~deviantfe@179.51.61.253) (Quit: WeeChat 3.4)
[09:49:23] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:49:31] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[09:53:24] *** Quits: AlanMD (~AlanMD@86.124.30.89) (Remote host closed the connection)
[09:53:57] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[09:54:21] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:54:23] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[09:54:46] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[09:55:26] *** Joins: AlanMD (~AlanMD@86.124.30.89)
[09:55:36] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:57:08] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[09:57:29] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[09:58:05] *** Quits: Midjak (~Midjak@82.66.147.146) (Quit: This computer has gone to sleep)
[10:00:28] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[10:00:36] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[10:00:42] <AhmedAmerican> \vest
[10:01:33] <wholesomedonut> question for yall: GUI libraries in 2022.
[10:01:34] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:01:44] *** Quits: ham5urg_ (~ham5urg@p5ddfd035.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[10:02:22] <wholesomedonut> I need something that shuts up and gets out of my way; PyQT and Kivy seem to be really chunky and full of features I don't frankly want. TKinter seems to be an old standby, but feels somewhat archaic. Is something like PySimpleGUI the best I'll get, or am I missing something here?
[10:02:37] <wholesomedonut> just a wrapper of a true "library"?
[10:03:48] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[10:05:48] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[10:05:48] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 240 seconds)
[10:05:57] *** Quits: Elodin (~elodin@user/elodin) (Ping timeout: 256 seconds)
[10:06:18] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[10:06:48] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 272 seconds)
[10:08:07] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[10:08:19] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[10:08:30] *** Joins: eroux (~eroux@102-65-81-186.ftth.web.africa)
[10:08:32] <jinsun_> <foo> "matsaman: I have pyenv, but I..." <- get some proper release like 3.10.2, 3.10-dev is for testing with the latest commit in 3.10 branch
[10:10:55] *** Quits: stdout (~stdout@2605:ab80:b000:7202:983b:dcb7:16d6:b705) (Quit: Leaving)
[10:11:05] <foo> jinsun_: ahh, thanks
[10:12:30] *** Quits: damonlynch (~ngaio@68.235.43.84) (Ping timeout: 272 seconds)
[10:14:38] *** Quits: hams (~hams@user/hams) (Read error: Connection reset by peer)
[10:15:52] *** Joins: sirn- (~sirn@user/sirn)
[10:16:09] *** Quits: sirn (~sirn@user/sirn) (Ping timeout: 256 seconds)
[10:16:10] *** sirn- is now known as sirn
[10:17:30] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[10:18:19] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:18:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[10:19:44] *** Quits: Vision (~Vision@097-087-115-181.res.spectrum.com) (Read error: Connection reset by peer)
[10:20:51] *** Joins: pycurious (~Adium@user/pycurious)
[10:21:54] *** Joins: sirn- (~sirn@user/sirn)
[10:22:05] *** Joins: Vision (~Vision@097-087-115-181.res.spectrum.com)
[10:22:07] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[10:22:57] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:22:57] *** Quits: sirn (~sirn@user/sirn) (Ping timeout: 256 seconds)
[10:22:58] *** sirn- is now known as sirn
[10:23:41] * foo looks into "Error: pg_config executable not found."
[10:23:42] <foo> on pip install psycopg2-binary
[10:23:51] *** Quits: kmh (~kmh@2a00:6020:5004:6800:e5f3:f326:a7fc:4075) (Quit: Leaving)
[10:24:18] *** Joins: Kohe (~Kohe@77.49.10.102.dsl.dyn.forthnet.gr)
[10:29:36] *** Quits: demon__ (~user@217.54.82.162) (Ping timeout: 272 seconds)
[10:29:48] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[10:30:03] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[10:32:20] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:99f4:f22:5396:624a)
[10:33:03] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:33:47] *** Joins: Atque (~Atque@user/atque)
[10:35:25] *** Quits: fxhp (~fxhp@d-206-53-88-50.ct.cpe.atlanticbb.net) (Ping timeout: 256 seconds)
[10:35:35] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:37:23] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[10:37:24] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[10:41:30] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[10:42:18] *** Joins: pycurious (~Adium@user/pycurious)
[10:42:22] *** Joins: magga (magga@ti0036a400-3577.bb.online.no)
[10:43:05] *** Quits: ckdCreations (~ckdCreati@147.55.133.142) (Read error: Connection reset by peer)
[10:44:35] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:45:06] *** Joins: ckdCreations (~ckdCreati@147.55.133.138)
[10:45:15] *** Quits: wholesomedonut (~wholesome@2601:680:c003:cbf0:7996:d2fe:8fa4:1569) (Quit: Leaving)
[10:46:37] *** Quits: Kebianizao (~Kebianiza@188.127.160.11) (Read error: Connection reset by peer)
[10:47:38] *** Joins: hams (~hams@73.232.205.0)
[10:47:39] *** Quits: hams (~hams@73.232.205.0) (Changing host)
[10:47:39] *** Joins: hams (~hams@user/hams)
[10:49:47] *** Joins: paul424 (~tom@ip-5-172-235-34.multi.internet.cyfrowypolsat.pl)
[10:50:17] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[10:52:07] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[10:52:34] *** Quits: baloona (~baloona@mail.baloona.de) (Ping timeout: 260 seconds)
[10:52:34] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[10:54:59] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:55:02] *** Joins: Kebianizao (~Kebianiza@188.127.160.11)
[10:55:36] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:56:07] *** Joins: l4yer (~l4yer@2001:ac8:20:3a00:1012:3f2e:f182:ae72)
[10:58:43] *** Quits: txtsd (~txtsd@user/txtsd) (Quit: WeeChat 3.4)
[10:59:48] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[11:00:57] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[11:01:10] *** Joins: fxhp (~fxhp@d-206-53-88-50.ct.cpe.atlanticbb.net)
[11:01:52] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:03:22] *** Joins: kts (~kts@103.73.237.162)
[11:03:24] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Ping timeout: 240 seconds)
[11:05:33] <foo> I have a package in requirements.txt - aside from doing "grep" on my entire codebase, and looking for imports, is there any other way to see if a package is used?
[11:06:12] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[11:06:22] *** Quits: portalrat (~portalrat@user/portalrat) (Quit: Leaving)
[11:06:24] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[11:06:58] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[11:06:58] *** Quits: eroux (~eroux@102-65-81-186.ftth.web.africa) (Ping timeout: 272 seconds)
[11:07:42] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[11:08:11] *** Joins: baloona (~baloona@mail.baloona.de)
[11:08:33] *** Quits: SuperLag (~akulbe@user/superlag) (Quit: leaving)
[11:08:49] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:b59a:8933:faf5:60c9)
[11:09:47] *** Joins: SuperLag (~akulbe@user/superlag)
[11:11:39] *** Quits: mitchxv2 (~mitch@24.31.27.81) (Quit: WeeChat 2.8)
[11:14:07] *** Joins: Vonter (~Vonter@user/vonter)
[11:14:12] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[11:15:21] *** Joins: kmh (~kmh@2a00:6020:5004:6800:c9e7:fea2:fb32:da8f)
[11:15:27] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:4f95:d7f1:1795:31c8)
[11:15:28] *** Joins: portalrat (~portalrat@user/portalrat)
[11:17:14] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[11:19:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[11:19:38] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 272 seconds)
[11:19:42] *** Quits: mh3f_ (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Remote host closed the connection)
[11:20:18] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[11:20:35] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[11:21:09] *** Quits: kickingvegas (~cchoi@c-73-170-198-141.hsd1.ca.comcast.net) (Quit: leaving)
[11:21:49] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[11:22:12] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[11:23:16] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[11:24:35] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[11:24:41] *** Quits: p-i-_ (~Ohmu@2403:6200:8978:3172:f058:960c:b5ef:b751) (Remote host closed the connection)
[11:24:57] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 240 seconds)
[11:25:16] *** Joins: p-i- (~Ohmu@mx-ll-183.89.29-122.dynamic.3bb.co.th)
[11:26:28] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[11:28:23] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:29:10] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[11:29:44] *** Joins: manti7 (~manti7@176.10.104.94)
[11:29:50] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[11:30:15] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 240 seconds)
[11:31:07] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:31:08] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[11:31:29] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:31:52] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[11:33:13] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:33:40] *** Joins: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de)
[11:34:38] *** Quits: reset (~reset@user/reset) (Quit: reset)
[11:34:44] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[11:35:01] *** Joins: pepper (~pepper@user/pepper)
[11:35:18] <foo> If I see something like this: https://bpa.st/ZCMQ -> can I assume that tenacity is not used in my immediate codebase, only by instalooter. Thus, I can remove tenacity from my requirements.txt so "pip can be smarter" eg. I don't need dependencies from another package inside my requirements.txt ... spending hours reconciling conflicts...
[11:35:33] <deniska> foo: you can put `sys.exit('Yes')` in the package source code
[11:35:51] <deniska> (re: to see if a package is used?)
[11:36:03] *** Quits: paprika (~pepper@user/pepper) (Ping timeout: 256 seconds)
[11:36:12] <foo> deniska: huh, nice, thanks
[11:36:20] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:36:31] *** Quits: zuplex (~zuplex@202.51.76.90) (Remote host closed the connection)
[11:36:40] <deniska> or inspect sys.modules of your running program
[11:37:22] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[11:37:38] * foo looks at pipreqs
[11:40:18] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[11:40:35] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:40:53] <foo> meh, pipreqs through an error.
[11:41:13] <foo> another conflict, yay. I edit requirements.txt, make my docker image, see an error, rinse and repeat. I have to assume this is normal.
[11:41:48] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Read error: Connection reset by peer)
[11:42:05] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[11:43:07] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[11:43:15] *** Joins: avaxar (~avaxar@36.72.213.197)
[11:43:22] *** Quits: cowsay-moo (~cowsay-mo@2001:1b60:1010:3:1015:ee1c:7647:701b) (Ping timeout: 250 seconds)
[11:43:28] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[11:43:59] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[11:45:50] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:46:57] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:50:12] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[11:50:22] <foo> woohooo! got it in docker to build my requirements.txt... now to run my code.
[11:51:21] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:52:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[11:53:23] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[11:53:24] *** Quits: kenwoodfox (~quassel@user/kenwoodfox) (Ping timeout: 240 seconds)
[11:53:26] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Read error: Connection reset by peer)
[11:53:37] *** Joins: wyclif (~wyclif@user/wyclif)
[11:53:47] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[11:55:11] *** Joins: kenwoodfox (~quassel@user/kenwoodfox)
[11:55:19] *** Joins: Vonter (~Vonter@user/vonter)
[11:56:02] *** Quits: jug (~jug@user/jug) (Quit: WeeChat 3.4)
[11:56:07] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:56:11] <mickey8> nedbat regarding the processes thing from earlier, it didn't work out because of the overall structure of the app. i did however end up finding that the spell checker was using levenstein distance of 2 by default, which was horribly slow. using a distance of 1 improved the average run from 49ms to 0.9ms, and removing the spell check completely
[11:56:11] <mickey8> brought it to 0.3ms
[11:57:17] *** Quits: ATAD (~ATAD@user/atad) (Ping timeout: 240 seconds)
[11:57:52] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[11:58:09] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 256 seconds)
[11:58:36] *** Quits: sandb0y (~pirate@user/sandb0y) (Ping timeout: 240 seconds)
[11:59:56] *** Joins: zuplex (~zuplex@202.51.76.90)
[12:00:25] *** Joins: jug (~jug@user/jug)
[12:01:26] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[12:01:37] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[12:01:38] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 260 seconds)
[12:01:38] *** Quits: portalrat (~portalrat@user/portalrat) (Quit: Leaving)
[12:01:46] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[12:01:51] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:02:02] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[12:03:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[12:04:31] *** Joins: wyclif (~wyclif@user/wyclif)
[12:05:15] *** Quits: upsala (~zcb@185.209.196.166) (Ping timeout: 256 seconds)
[12:06:19] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:6722:f208:7126:fba9)
[12:07:15] *** Joins: upsala (~zcb@185.209.196.167)
[12:07:38] *** Joins: VoidSync (~sync@user/voidsync)
[12:07:48] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 240 seconds)
[12:08:14] *** Joins: han-solo (~han-solo@user/han-solo)
[12:08:14] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:09:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[12:10:15] *** Joins: portalrat (~portalrat@user/portalrat)
[12:10:27] *** Joins: wyclif (~wyclif@user/wyclif)
[12:10:28] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[12:11:33] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[12:12:06] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Read error: Connection reset by peer)
[12:12:50] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[12:13:04] *** Joins: parv (~quass@user/parv)
[12:13:19] *** Joins: Klinda (~superleag@user/klinda)
[12:14:17] *** Quits: parv (~quass@user/parv) (Client Quit)
[12:14:41] *** Joins: greedom (~greedom@p200300de673a16000d7908bf02accb99.dip0.t-ipconnect.de)
[12:15:00] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[12:15:12] *** Quits: kmh (~kmh@2a00:6020:5004:6800:c9e7:fea2:fb32:da8f) (Read error: Connection reset by peer)
[12:15:24] *** Joins: kmh (~kmh@2a00:6020:5004:6800:c9e7:fea2:fb32:da8f)
[12:15:33] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[12:15:52] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[12:16:53] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[12:17:01] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[12:17:33] *** Joins: rdz_ (~roman@netpd.org)
[12:18:34] *** Quits: blackleitus (~blackleit@189.195.195.100) (Ping timeout: 256 seconds)
[12:18:58] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[12:19:04] *** Joins: slav0nic (slav0nic@python.su)
[12:19:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[12:21:15] *** Quits: rdz_ (~roman@netpd.org) (Client Quit)
[12:21:18] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[12:21:56] *** Joins: wyclif (~wyclif@user/wyclif)
[12:23:23] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[12:24:10] *** Joins: Neeknaim (~Neeknaim@77.139.140.101)
[12:24:13] <Neeknaim> Hello
[12:25:21] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:25:43] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec93-a79e-a5f0-138c.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[12:26:39] *** Joins: icy_hot (~icy_hot@cpe-108-184-151-88.socal.res.rr.com)
[12:27:39] <Neeknaim> I'm trying to work on notebooks from 2017-2018 for a course I'm doing. My machine has python 3.10. I tried creating a virtual environment using venv and installing the requirement using pip, but I keep getting an error such as: "error: legacy-install-failure" for some packages like numpy ==1.13.3 or even for numpy==1.16.0. How can I solve this?
[12:29:37] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[12:30:14] *** Quits: pedregalux[m] (~pedregalu@2001:470:69fc:105::92cb) (Quit: You have been kicked for being idle)
[12:30:43] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[12:31:03] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:31:36] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[12:32:42] <Repiphany> Neeknaim: Use an older version of python
[12:33:03] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[12:33:26] <Repiphany> Or just try newer versions of numpy and hope for backwards compatibility
[12:33:29] *** Joins: Hammett (~Absolut@213.195.119.45)
[12:33:47] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[12:34:10] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[12:34:12] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[12:34:33] <Neeknaim> I tried some versions between 1.13 to 1.16 and that didn't work. Also it's not just numpy that is creating this problem. Can you give me a pointer on how to use an older version of python on linux?
[12:35:03] <Repiphany> I use pyenv to install different versions of python https://github.com/pyenv/pyenv
[12:35:16] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:36:17] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[12:36:18] <Neeknaim> Repiphany: Can pyenv only change python version in my venv and not globally?
[12:36:39] *** Joins: tmart (~tmart@47-220-163-218.gtwncmkt04.res.dyn.suddenlink.net)
[12:36:40] <Neeknaim> Oh, should I install pyenv in my venv?
[12:37:03] <Neeknaim> oh, I guess not
[12:37:05] <Neeknaim> hmm
[12:37:29] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:38:06] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[12:38:15] <Repiphany> venvs are fixed to the version of python interpreter that was used to create them
[12:38:18] *** Quits: portalrat (~portalrat@user/portalrat) (Quit: Leaving)
[12:39:00] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[12:39:21] <Repiphany> pyenv builds and handles different python versions separately to system python/package manager pythons/whatever
[12:40:24] *** Quits: hams (~hams@user/hams) (Read error: Connection reset by peer)
[12:41:00] *** Joins: pycurious (~Adium@user/pycurious)
[12:43:48] *** Joins: neromm[m] (~nerommmon@2001:470:69fc:105::1:75a5)
[12:44:21] *** Joins: rdz_ (~roman@2001:620:120:1::12)
[12:44:26] *** Quits: paul424 (~tom@ip-5-172-235-34.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[12:44:55] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:45:09] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:48:26] *** Joins: palasso (~palasso@user/palasso)
[12:50:32] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) ()
[12:50:37] <Neeknaim> Repiphany: It seems that I should use the pyenv-virtualenv plugin. But how do I install it?
[12:50:56] *** Joins: hams (~hams@user/hams)
[12:51:17] <Repiphany> The install instructions for plugins are on the respective github pagers
[12:51:19] <Repiphany> pages
[12:51:46] <Repiphany> https://github.com/pyenv/pyenv-virtualenv#installation
[12:52:00] *** Joins: mitchxv2 (~mitch@24.31.27.81)
[12:52:18] *** Joins: aslicedbanjo (~aslicedba@host86-168-244-34.range86-168.btcentralplus.com)
[12:53:08] <Neeknaim> Yes, it says "This will install the latest development version of pyenv-virtualenv into the $(pyenv root)/plugins/pyenv-virtualenv directory." Where is pyenv root?
[12:53:47] <Repiphany> That's defined when you install pyenv
[12:54:45] *** Joins: kosh (~kosh@user/kosh)
[12:56:11] *** Quits: bluedust (~bluedust@103.161.144.138) (Remote host closed the connection)
[12:56:18] *** Joins: portalrat (~portalrat@user/portalrat)
[12:56:47] *** Joins: Auron (Auron956@user/auron)
[12:58:28] <Neeknaim> Could you please help me understand how I find this directory? I installed pyenv using octopi (on manjaro linux)
[12:58:51] <Neeknaim> I didn't get a prompt saying where the root of pyenv is
[12:59:20] <Repiphany> I have no idea what octopi is
[12:59:39] <Repiphany> echo $(pyenv root)
[13:01:16] <Neeknaim> Thanks!!
[13:01:26] <Neeknaim> I tried echo "$PYENV_ROOT" and didn't get anything
[13:03:12] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[13:04:31] *** Quits: avaxar (~avaxar@36.72.213.197) (Quit: Leaving)
[13:04:37] *** Joins: rendar (~rendar@user/rendar)
[13:07:31] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[13:07:52] *** Quits: dwt_ (~dwt_@c-98-198-103-176.hsd1.tx.comcast.net) (Ping timeout: 256 seconds)
[13:08:03] <Neeknaim> pyenv virtualenv 3.6.15 python3.6.15
[13:08:05] <Neeknaim> pyenv-virtualenv: `3.6.15' is not installed in pyenv.
[13:08:18] <Repiphany> pyenv install 3.6.15
[13:08:24] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Remote host closed the connection)
[13:08:24] <Neeknaim> ohh
[13:09:39] *** Quits: portalrat (~portalrat@user/portalrat) (Quit: Leaving)
[13:11:19] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:b59a:8933:faf5:60c9) (Ping timeout: 256 seconds)
[13:11:19] *** Joins: parv (~quass@user/parv)
[13:12:13] *** Joins: saksol (~saksol@157-157-103-250.dsl.dynamic.simnet.is)
[13:14:28] *** Joins: iomari891 (~iomari891@105.112.138.38)
[13:14:46] <Neeknaim> When I try "pyenv install 3.6.15 python3.6.15" I'm faced with a help prompt but no option seems reasonable. keep? patch?  there's no install option
[13:15:46] *** Quits: aslicedbanjo (~aslicedba@host86-168-244-34.range86-168.btcentralplus.com) (Quit: Leaving.)
[13:16:04] *** Joins: dwt_ (~dwt_@c-98-198-103-176.hsd1.tx.comcast.net)
[13:18:03] <Repiphany> The command to install is just `pyenv install 3.6.15`
[13:19:35] *** Joins: AnimalFarmPig (~quassel@user/animalfarmpig)
[13:19:58] <Neeknaim> but this will install it to a virtual environment or will override my python 3.10
[13:20:02] *** Joins: c4017w__ (~c4017@209.52.68.8)
[13:20:04] <Neeknaim> ?
[13:20:17] <Repiphany> pyenv doesn't affect system python
[13:20:20] *** Quits: envex (~rf@cpe-173-91-189-33.neo.res.rr.com) (Ping timeout: 256 seconds)
[13:20:23] *** Quits: saksol (~saksol@157-157-103-250.dsl.dynamic.simnet.is) (Quit: WeeChat 2.8)
[13:20:49] *** Joins: saksol (~saksol@157-157-103-250.dsl.dynamic.simnet.is)
[13:21:00] <Repiphany> pyenv installs different versions of python into the pyenv root folder
[13:21:08] <Repiphany> Go read the github page to see what it actually does
[13:21:17] <Neeknaim> the github page says:
[13:21:23] *** Quits: saksol (~saksol@157-157-103-250.dsl.dynamic.simnet.is) (Client Quit)
[13:21:37] <Neeknaim> "pyenv does not Manage virtualenv. Of course, you can create virtualenv yourself, or pyenv-virtualenv to automate the process."
[13:22:18] <Repiphany> Yes, pyenv itself has nothing to do with virtual environments
[13:22:45] *** Quits: icy_hot (~icy_hot@cpe-108-184-151-88.socal.res.rr.com) (Quit: WeeChat 3.4)
[13:22:53] <Repiphany> You can't create a virtualenv of python 3.6 if you don't even have python 3.6 built/installed in the first place
[13:23:07] *** Joins: saksol (~saksol@157-157-103-250.dsl.dynamic.simnet.is)
[13:23:27] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[13:25:31] <Repiphany> pyenv is just a convenient way to build different python versions from source + convenience commands to modify $PATH to use those different versions as you need
[13:26:03] *** Quits: chronon (~chronon@user/chronon) (Quit: leaving)
[13:26:13] *** Joins: chronon (~chronon@user/chronon)
[13:26:25] <Neeknaim> So what is pyenv-virtualenv for?
[13:26:34] *** Quits: saksol (~saksol@157-157-103-250.dsl.dynamic.simnet.is) (Client Quit)
[13:26:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[13:26:37] <jinsun> Neeknaim: remember to not run any step as root, pyenv installs python in a subfolder of your $HOME by default, which doesn't require root, and without root it will have no chance of overriding your system python
[13:26:55] <Repiphany> An additional set of convenience commands to also manage virtualenvs created using those different python versions
[13:26:57] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Ping timeout: 252 seconds)
[13:27:03] *** Joins: saksol (~saksol@157-157-103-250.dsl.dynamic.simnet.is)
[13:27:27] *** Quits: saksol (~saksol@157-157-103-250.dsl.dynamic.simnet.is) (Client Quit)
[13:27:50] *** Joins: saksol (~saksol@157-157-103-250.dsl.dynamic.simnet.is)
[13:27:55] *** Joins: wyclif (~wyclif@user/wyclif)
[13:28:22] <Neeknaim> ohh, so I can install python 3.6 to a home folder with pyenv and then create a virtual environment using this installed version of 3.6 and pyenv-virtualenv? and then activate the new virtual environment?
[13:28:59] <Repiphany> Yes
[13:31:32] <Neeknaim> ok, now I got it
[13:32:14] *** Joins: esther (~esther@2607:fb90:20d1:310f:83fb:eb18:4b0f:5405)
[13:32:22] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[13:32:30] <Neeknaim> hmmm now I get this error: BUILD FAILED (ManjaroLinux 21.2.3 using python-build 20180424)
[13:32:30] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[13:32:31] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[13:32:36] *** Quits: hams (~hams@user/hams) (Ping timeout: 240 seconds)
[13:32:59] <Repiphany> https://github.com/pyenv/pyenv/wiki#suggested-build-environment
[13:34:13] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[13:35:23] *** Joins: onichomp666 (~onichomp@177.231.44.9)
[13:36:15] *** Joins: Sabry (~Sabry@197.37.252.2)
[13:36:17] *** Quits: esther (~esther@2607:fb90:20d1:310f:83fb:eb18:4b0f:5405) (Ping timeout: 240 seconds)
[13:36:28] *** Quits: onichomp (~onichomp@2806:264:4408:12a:1834:a2dd:95eb:3f92) (Ping timeout: 250 seconds)
[13:36:33] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[13:37:02] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[13:38:11] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[13:38:17] *** Quits: rdz (~rdz@2001:620:120:1::12) (Quit: Verlassend)
[13:38:53] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[13:39:46] *** Joins: bluedust (~bluedust@103.161.144.138)
[13:40:17] *** rdz_ is now known as rdz
[13:41:02] *** Joins: tm007 (uid287041@id-287041.uxbridge.irccloud.com)
[13:41:44] *** Quits: ChrisWarrick (kwpolska@user/kwpolska) (Quit: System upgrade!)
[13:42:20] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[13:43:03] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[13:43:14] <Neeknaim> It seems that none of the packages are missing:
[13:43:23] <Neeknaim> sudo pacman -S --needed base-devel openssl zlib xz
[13:43:25] <Neeknaim> there is nothing to do
[13:43:56] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[13:45:41] *** Quits: Sabry (~Sabry@197.37.252.2) (Quit: Client closed)
[13:45:50] *** Joins: frost (~frost@user/frost)
[13:47:00] *** Quits: parv (~quass@user/parv) (Ping timeout: 240 seconds)
[13:47:30] <jinsun> 3.6 is too old already, Manjaro is Arch based so your build environment may be too new to build it, might want to try 3.7
[13:49:05] <jinsun> but you should check your logs too
[13:49:49] <jinsun> those will give the exact reason for the build failure, the error message would have given the location of the log file too
[13:51:33] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:6722:f208:7126:fba9) (Ping timeout: 256 seconds)
[13:52:32] *** Joins: rakoon (~rakoon@80-100-166-138.ip.xs4all.nl)
[13:53:16] <jinsun> I just remember I couldn't build 3.6 on Arch few months back, and it was with weird make errors, and my searches led to downgrade gcc as the solution, then I gave up
[13:53:32] *** Quits: ShotokanZH (~ShotokanZ@aitch.me) (Ping timeout: 272 seconds)
[13:56:15] *** Quits: grawity (grawity@star.nullroute.lt) (Remote host closed the connection)
[13:56:26] *** Joins: PrinceMachiavel2 (~PrinceMac@c-174-63-6-58.hsd1.ma.comcast.net)
[13:57:47] <Neeknaim> thanks jinsun. I think downgrading gcc would also make me give up this path
[13:58:08] *** Joins: grawity (grawity@star.nullroute.lt)
[13:59:50] *** PrinceMachiavel2 is now known as PrinceMyshkin
[14:01:03] <jinsun> Neeknaim: I'd say try 3.7, or actually from your initial problem it is not clear why you need older numpy anyway, did you try your code with recent numpy version?
[14:02:37] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[14:02:40] *** Quits: PrinceMyshkin (~PrinceMac@c-174-63-6-58.hsd1.ma.comcast.net) (Changing host)
[14:02:40] *** Joins: PrinceMyshkin (~PrinceMac@user/PrinceMachiavell)
[14:02:50] *** Joins: pycurious (~Adium@user/pycurious)
[14:04:08] *** Joins: ShotokanZH (~ShotokanZ@aitch.me)
[14:04:08] *** Joins: ice9 (~ice9@user/ice9)
[14:04:43] *** Quits: acresearch (~acresearc@user/acresearch) (Quit: WeeChat 2.8)
[14:04:43] <Neeknaim> my code failed few time because of numpy but I managed to change the syntax to newer numpy so it'll work. But I sometimes get other failures because of other packages, so I wanted to solve all of those dependency problems at once. python 3.7.1 also fails. I'm gonna try 3.7.12
[14:04:49] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[14:05:42] * enyc meows
[14:06:31] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:07:29] *** Quits: Hammett (~Absolut@213.195.119.45) (Quit: I feel like I could... like I could... like I could... TAKE ON THE WORLD!!)
[14:08:17] <Neeknaim> well, 3.7.12 also fails. I'm probably going to give up now
[14:08:30] *** Quits: cozmo (~user@65.78.142.57) (Ping timeout: 256 seconds)
[14:10:01] <jinsun> Neeknaim: if you paste the build logs somewhere people might be able to help, it might be simpler solution for your case
[14:10:55] <Neeknaim> ok, let me check
[14:11:03] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[14:11:03] *** Joins: cosimone (~user@93-47-228-207.ip115.fastwebnet.it)
[14:11:37] *** Quits: bluedust (~bluedust@103.161.144.138) (Remote host closed the connection)
[14:12:06] *** Joins: ChrisWarrick (kwpolska@user/kwpolska)
[14:12:44] *** Quits: jpic (~jpic@82.142.6.174) (Remote host closed the connection)
[14:13:04] *** Joins: portalrat (~portalrat@user/portalrat)
[14:15:21] *** Joins: Vonter (~Vonter@user/vonter)
[14:18:24] *** Joins: snortie (~snortie@2a02:8308:386:b900:f881:7773:c6f5:7fb8)
[14:18:58] <cloudcell> Hello everyone, here's a piece of code that I put together. It works; however I cannot understand which 'generate' function python is using:
[14:18:58] <cloudcell> https://www.irccloud.com/pastebin/OPBvq9tp/ (I am using pycharm and it lists only irrelevant definitions of the function 'generate')
[14:20:31] *** Joins: c4017w_ (~c4017@209.52.68.8)
[14:20:48] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[14:22:27] <Neeknaim> Here are logs of the failure of pyenv on manjaro when trying to build python 3.6.15 | 3.7.1 | 3.7.12. If anyone can help solve this issue in a simple way this would be great: 3.6.15: https://privatebin.net/?547508322af29392#8g8jm9QjHw1xJojiFFsuUXJJj5RNm4smsCLdoVVCxhTg | 3.7.1: https://privatebin.net/?ec039249c2dda502#5otvmxR8owMrdAfpbV6mL38PwSj1D7Kzk1EKsAABXbn3 | 3.7.12: https://privatebin.net/?04ce4a59d00ac5a2#
[14:22:29] <Neeknaim> H2jW8gtGFP3i8mhvLxs2u7cUmZwiNo8sFLuwjpBj4MCu
[14:22:52] <Neeknaim> I'll just paste that last link properly: 3.7.12: https://privatebin.net/?04ce4a59d00ac5a2#H2jW8gtGFP3i8mhvLxs2u7cUmZwiNo8sFLuwjpBj4MCu
[14:23:48] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[14:24:24] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.4)
[14:25:15] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:25:50] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 272 seconds)
[14:26:04] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[14:27:00] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[14:28:57] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[14:29:03] *** Quits: portalrat (~portalrat@user/portalrat) (Quit: Leaving)
[14:29:27] *** Joins: Enitin (~Enitin@82.102.22.85)
[14:29:33] <Repiphany> https://github.com/pyenv/pyenv/issues/2236 https://github.com/pyenv/pyenv/pull/2237
[14:31:09] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:32:11] *** Joins: han-solo (~han-solo@178.248.114.110)
[14:32:11] *** Quits: han-solo (~han-solo@178.248.114.110) (Changing host)
[14:32:11] *** Joins: han-solo (~han-solo@user/han-solo)
[14:32:49] *** Joins: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52)
[14:34:32] *** Quits: onichomp666 (~onichomp@177.231.44.9) (Read error: Connection reset by peer)
[14:35:20] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[14:37:00] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[14:37:44] *** Quits: Vonter (~Vonter@user/vonter) (Read error: Connection reset by peer)
[14:37:48] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[14:38:30] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[14:39:23] *** Joins: Vonter (~Vonter@user/vonter)
[14:40:24] *** Joins: iomari891 (~iomari891@105.112.138.38)
[14:40:45] *** Quits: chronon (~chronon@user/chronon) (Quit: leaving)
[14:40:53] *** Joins: chronon (~chronon@user/chronon)
[14:42:10] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[14:42:48] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[14:43:03] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[14:43:48] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[14:43:53] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[14:45:48] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:45:50] *** Joins: stuxamber (~stuxamber@223.25.69.151)
[14:46:06] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 272 seconds)
[14:46:23] *** Joins: hqdruxn08__ (~hqdruxn08@user/hqdruxn08)
[14:46:46] <stuxamber> hi, i am trying to understand the * operator, some say its unpacking, some say its for merging. so how can i understand it simply?
[14:47:07] <Repiphany> Merging what
[14:48:06] <stuxamber> variables?
[14:48:33] <stuxamber> merging Iterables With the * Operator
[14:49:01] *** Quits: rakoon (~rakoon@80-100-166-138.ip.xs4all.nl) (Ping timeout: 256 seconds)
[14:49:19] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:fac3:85b:39f5:8c3d)
[14:49:27] <Repiphany> I have no idea what that means
[14:50:40] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:2d62:2925:5b99:4618)
[14:50:40] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:2d62:2925:5b99:4618) (Changing host)
[14:50:40] *** Joins: skapata (~Skapata@user/skapata)
[14:50:43] *** Quits: hqdruxn08_ (~hqdruxn08@user/hqdruxn08) (Ping timeout: 256 seconds)
[14:52:28] <stuxamber> Repiphany: its okay, we are all learning
[14:54:04] *** Quits: humanBird (~humanBird@2603-8001-7000-3642-0861-9bd2-90c4-00bf.res6.spectrum.com) (Quit: Client closed)
[14:54:30] *** Joins: lbalhar (~lbalhar@185-186-161-56.mx-net.cz)
[14:54:44] <han-solo> `[*list, some, other, item]` # ?
[14:55:07] *** Quits: vin (~vin@user/crash) (Remote host closed the connection)
[14:55:11] <han-solo> s/list/someiterable/
[14:56:20] <han-solo> not sure about the exact term, i usually just assumed it is "iterable unpacking". have heard other terms for it here
[14:58:32] *** Quits: uuair (~quassel@user/uuair) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:58:49] *** Joins: uuair (~quassel@user/uuair)
[15:00:01] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[15:00:40] *** Joins: nomic (~nomic@185.217.117.193)
[15:01:35] *** Quits: upsala (~zcb@185.209.196.167) (Quit: WeeChat 3.4)
[15:03:46] <stuxamber> han-solo: thank you.
[15:04:42] *** Joins: Guest143332 (~Guest1433@ppp141255053226.access.hol.gr)
[15:04:42] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[15:04:43] *** Quits: Guest143332 (~Guest1433@ppp141255053226.access.hol.gr) (Read error: Connection reset by peer)
[15:06:35] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[15:06:52] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[15:06:55] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[15:08:16] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[15:09:10] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:b59a:8933:faf5:60c9)
[15:09:25] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 256 seconds)
[15:10:39] *** Joins: mattfoxxx (~mattfoxxx@200116b822bce800e99fd6ce5d2e87dc.dip.versatel-1u1.de)
[15:11:29] *** Joins: Z-cat (~Z-cat@user/z-cat)
[15:11:52] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:15:01] <amogorkon> stuxamber, https://www.python.org/dev/peps/pep-3132/
[15:15:05] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 256 seconds)
[15:16:26] *** Joins: bluedust (~bluedust@103.161.144.138)
[15:17:15] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:18:33] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Quit: !be back soon)
[15:18:37] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[15:19:23] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[15:20:24] *** Joins: ttpp (~tttppp@37.115.45.192)
[15:20:33] *** Joins: dme86 (~dan@user/dan86)
[15:21:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[15:22:31] *** Quits: greedom (~greedom@p200300de673a16000d7908bf02accb99.dip0.t-ipconnect.de) (Remote host closed the connection)
[15:23:02] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[15:24:44] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[15:24:44] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[15:24:52] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[15:25:09] *** Joins: tobybl (~tobybl@214.242.200.146.dyn.plus.net)
[15:25:12] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:25:50] *** Quits: hyper_dave (~hyper_dav@2a01:4f9:4a:246c::2) (Read error: Connection reset by peer)
[15:26:01] *** Joins: hyper_dave (~hyper_dav@2a01:4f9:4a:246c::2)
[15:26:10] <duuude> https://termbin.com/gxd8
[15:26:24] <duuude> It doesn't save anything to my file :(
[15:26:35] *** Quits: mattfoxxx (~mattfoxxx@200116b822bce800e99fd6ce5d2e87dc.dip.versatel-1u1.de) (Quit: WeeChat 3.4)
[15:26:45] *** Joins: mattfoxxx (~mattfoxxx@200116b822bce800e99fd6ce5d2e87dc.dip.versatel-1u1.de)
[15:27:15] *** Joins: Vonter (~Vonter@user/vonter)
[15:28:12] *** Quits: lbalhar (~lbalhar@185-186-161-56.mx-net.cz) (Ping timeout: 240 seconds)
[15:28:12] *** Quits: dreamon (~dreamon@ppp-88-217-74-38.dynamic.mnet-online.de) (Ping timeout: 240 seconds)
[15:29:17] <nedbat> duuude: does it create any files?
[15:29:17] *** Joins: adhawkins (~adhawkins@user/adhawkins)
[15:29:33] <ChrisWarrick> duuude: is the text printed to the terminal? are you checking after the process has finished?
[15:29:49] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[15:30:20] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:30:40] <adhawkins> Hi all. Bit of a strange request this. I'm automatically generating a list of tests for pytest. Each test is checking password validation on an endpoint. Some of the tests are expected to fail password validation. Is there any way to sort the list of tests such that no more than 2 tests that are expected to fail occur in a row, as if that happens
[15:30:41] <adhawkins> all logins are then locked out, so the remainder of the tests will all fail.
[15:30:50] <duuude> nedbat: yes, they seem to be empty
[15:31:04] <duuude> ChrisWarrick: yes it is printed to terminal
[15:31:55] <adhawkins> Each login attempt returns a status code indicating whether it succeeded or not, which the test checks to make sure it gets the expected value back, so an expected failed login is a successful test.
[15:33:59] <nedbat> duuude: i don't see why it would be empty.  at the top of the loop can you add ` print(repr(word))`, and then show us the output from the terminal?
[15:34:06] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[15:34:17] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[15:34:35] <nedbat> adhawkins: pytest is really good at keeping tests isolated from each other, so coordinating among them to control the order isn't easy.
[15:34:41] <duuude> nedbat: it seems it worked, but vim didn't show it somehow
[15:34:55] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[15:34:59] <duuude> and now it does
[15:34:59] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[15:35:11] <nedbat> adhawkins: you could use pytest.mark.parametrize and put all the test data in that list, which might keep the order?
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:10] <adhawkins> nedbat: I'm already using parametrize_from_file to order the tests. However, the thing that generates that file is a python script. I want that script to automatically order the tests such that we don't get consecutive failures
[15:36:28] <nedbat> adhawkins: do you know which will fail and which won't?
[15:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:46] <adhawkins> nedbat: Yes.
[15:37:19] <adhawkins> I'm generating a python list for each test, with each test's parameters and expected login result code. THis list is then written out to the file at the end.
[15:37:21] *** Joins: georgios (~georgios@user/georgios)
[15:37:30] <adhawkins> I'd like to sort that list such that I don't get consecutive failures.
[15:37:34] <nedbat> adhawkins: ok, so we can forget about pytest.  we just need to order the list.
[15:38:23] <adhawkins> yes
[15:38:34] *** Joins: pycurious (~Adium@user/pycurious)
[15:40:05] *** duuude is now known as xeyes
[15:41:29] <nedbat> adhawkins: could this work? Make a list of fails and passes.  to build the full list, take a failure, take a pass, alternating, and when you run out of fails, throw in all the passes.
[15:41:37] *** Joins: txtsd (~txtsd@user/txtsd)
[15:41:49] <nedbat> it won't work if there are too many failures, but if that's the case, there's no solution.
[15:42:02] <adhawkins> nedbat: I was considering something like that. And yes, you're absolutely right if there are more failures than passes.
[15:42:19] <adhawkins> However, I think I can actually have two consecutive failures, it's the third that will cause the lockout.
[15:42:30] <adhawkins> Any successful login resets the lockout count
[15:42:37] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[15:42:42] <adhawkins> So I could do fail, fail, pass, fail, fail, pass...  etc.
[15:42:51] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[15:42:55] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 240 seconds)
[15:46:10] <nedbat> adhawkins: here's a way to do it: https://gist.github.com/4c22b925c2135471a4eeb8b0351304ab
[15:46:16] <adhawkins> Ok, so I have 'Total tests: 432, passes: 324, failures; 108', so just alternating them would do
[15:47:06] *** Joins: Atque (~Atque@user/atque)
[15:47:16] <adhawkins> Wow, that's quite cool. I'm consistently amazed by how poor my Python is!
[15:48:16] *** Joins: frost (~frost@user/frost)
[15:51:20] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[15:52:00] *** Quits: ArtfulDodger (~ArtfulDod@81.126.81.79.rev.sfr.net) (Quit: Leaving)
[15:52:02] *** Joins: sobkas_ (~sobkas@95.175.17.217)
[15:52:26] *** Quits: stuxamber (~stuxamber@223.25.69.151) (Remote host closed the connection)
[15:53:23] *** Quits: VoidSync (~sync@user/voidsync) (Remote host closed the connection)
[15:53:23] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 256 seconds)
[15:54:43] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:55:19] *** Quits: sobkas (~sobkas@95.175.17.217) (Ping timeout: 256 seconds)
[15:55:20] *** sobkas_ is now known as sobkas
[15:55:41] <Neeknaim> Repiphany: If that pull was merged why am I still getting this error?
[15:56:09] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[15:56:42] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[15:56:48] <Repiphany> Are you using the latest version
[15:56:57] *** Joins: dme86 (~dan@user/dan86)
[15:57:46] *** Joins: pycurious (~Adium@user/pycurious)
[15:57:50] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[15:58:08] *** Joins: MikZyth (~MikZyth@host-102-154-66-217.spbmts.ru)
[15:58:43] *** Joins: bluedust_ (~bluedust@103.165.167.221)
[15:58:57] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[15:59:41] <Neeknaim> of pyenv? Yes, I'm using pyenv 2.2.4
[15:59:51] *** Quits: bluedust (~bluedust@103.161.144.138) (Ping timeout: 256 seconds)
[16:00:44] *** Quits: tm007 (uid287041@id-287041.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[16:00:45] <nedbat> adhawkins: tbh, that function feels over-complicated to me, but idk if there's an easier way to get the same effect
[16:00:49] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:02:05] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[16:02:11] *** Quits: mattfoxxx (~mattfoxxx@200116b822bce800e99fd6ce5d2e87dc.dip.versatel-1u1.de) (Quit: WeeChat 3.4)
[16:02:27] *** Joins: mattfoxxx (~mattfoxxx@200116b822bce800e99fd6ce5d2e87dc.dip.versatel-1u1.de)
[16:03:04] <Repiphany> No idea then
[16:05:01] *** Quits: mattfoxxx (~mattfoxxx@200116b822bce800e99fd6ce5d2e87dc.dip.versatel-1u1.de) (Client Quit)
[16:05:15] *** Joins: mattfoxxx (~mattfoxxx@200116b822bce800e99fd6ce5d2e87dc.dip.versatel-1u1.de)
[16:05:16] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 272 seconds)
[16:05:17] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[16:05:32] *** Quits: nomic (~nomic@185.217.117.193) (Quit: Leaving)
[16:07:42] *** Joins: Pi-sistance (~Pi-sistan@cpc94040-newt37-2-0-cust284.19-3.cable.virginm.net)
[16:08:37] *** Joins: nomic (~nomic@185.217.117.193)
[16:08:58] <Pi-sistance> if i import a py file shouldnt I ahve access to all the functions in it? The function I wanted only worked if I typed from foo import bar, naming the specific function?
[16:09:13] <Pi-sistance> is first time ive done this with custom functions, scripts.
[16:09:18] <Repiphany> `import foo; foo.bar`
[16:10:01] <Neeknaim> thanks Repiphany
[16:10:32] <Pi-sistance> so I cant just name the whole .py file the functions are in and have access to them all? I thought if I imprted numpy Id have acess to all numpy functions for example?
[16:10:46] <Pi-sistance> it works differently for custom functions?
[16:11:15] <Repiphany> You have access to everything by specifying the numpy (or np) namespace
[16:11:22] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:11:26] *** Quits: bluedust_ (~bluedust@103.165.167.221) (Remote host closed the connection)
[16:11:29] <Repiphany> Unless you do something bad like `from numpy import *` which you shouldn't do
[16:12:08] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[16:12:53] <Repiphany> If every time you imported a script you polluted your namespace with random functions, that would be a mess to debug
[16:13:02] <Repiphany> global namespace
[16:13:36] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Quit: Leaving)
[16:13:51] *** Quits: nomic (~nomic@185.217.117.193) (Quit: Leaving)
[16:13:58] <Pi-sistance> okay thanks! ill make a note of why it differes between offical and custom ones.
[16:14:18] <Repiphany> Nothing changes between "official" and "custom"
[16:14:59] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:15:33] <Repiphany> `from foo import bar` is essentially the same as `import foo; bar = foo.bar` except you don't have access to the rest of the foo namespace after
[16:16:36] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[16:17:21] <han-solo> nedbat: ` list(itertools.chain(itertools.chain.from_iterable(zip(*[*[iter(range(10))]]*2 + [(iy:=iter(range(100,120)))])), iy)` # seems very straight forward ':)
[16:17:32] <Pi-sistance> er ok thanks. I just need to know for know with my own custoim .py files I have to specify the function to import
[16:17:35] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 240 seconds)
[16:17:42] <Pi-sistance> for now*
[16:17:47] <jinsun> Neeknaim: the pull request was merged after the latest release, install pyenv directly frim git instead of your os package manger, then you'd have that fix
[16:17:52] <nedbat> han-solo: i figured there was an itertools way....
[16:18:06] <Repiphany> ???
[16:18:08] <Neeknaim> Thanks jinsun!!
[16:18:23] <han-solo> nedbat: yeah, that's not very pretty
[16:18:25] *** Quits: ttpp (~tttppp@37.115.45.192) (Quit: Leaving)
[16:18:41] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[16:21:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[16:21:48] *** Joins: maharg101 (~maharg101@savoy.force9.co.uk)
[16:22:02] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 250 seconds)
[16:22:17] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[16:22:19] *** Joins: frost31 (~frost@user/frost)
[16:22:52] *** Joins: greedom (~greedom@p200300de673a16000d7908bf02accb99.dip0.t-ipconnect.de)
[16:23:22] *** Quits: JohnDoe1 (~johndoe1@184-091-099-189.res.spectrum.com) (Quit: JohnDoe1)
[16:24:50] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:25:21] *** Joins: Vonter (~Vonter@user/vonter)
[16:25:32] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[16:28:43] *** Quits: Sadale (~Sadale@user/sadale) (Quit: tawa pona!)
[16:29:00] *** Joins: Sadale (~Sadale@user/sadale)
[16:29:36] *** Quits: mattfoxxx (~mattfoxxx@200116b822bce800e99fd6ce5d2e87dc.dip.versatel-1u1.de) (Quit: WeeChat 3.4)
[16:29:58] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[16:30:00] *** Joins: mattfoxxx (~mattfoxxx@200116b822bce800e99fd6ce5d2e87dc.dip.versatel-1u1.de)
[16:30:38] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:34e0:8b74:dd2c:1d62)
[16:30:40] <xeyes> i want to match stuff by a regex and do a thing for every instance found but not replace it.
[16:30:40] *** Joins: kosh (~kosh@user/kosh)
[16:30:40] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:31:08] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:33:04] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:33:26] <Neeknaim> jinsun: I installed pyenv from git and I still get an error when installing 3.6.15
[16:33:36] <Neeknaim> What do you think is the problem now?
[16:33:38] <nedbat> xeyes: for match in re.finditer(....):
[16:35:02] <Neeknaim> here's the log: https://privatebin.net/?8f1896e66b12bae3#DZNMh38d6E41ojbEtVRtzUJfpukmnk57KiZ94YgL7XRY
[16:35:16] *** Quits: Allegretto (~allegrett@217-197-187-137.pool.digikabel.hu) (Ping timeout: 256 seconds)
[16:35:17] <nedbat> xeyes: what do you want to do for each match?
[16:36:15] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:36:29] <xeyes> nedbat: add it to a list
[16:36:38] *** Joins: portalrat (~portalrat@user/portalrat)
[16:36:56] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[16:38:04] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:40:46] <nedbat> xeyes: cool, do you have what you need?
[16:41:19] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[16:41:21] *** Joins: driib22 (~driib@185.65.135.252)
[16:42:08] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[16:43:02] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 260 seconds)
[16:43:05] *** Quits: maharg101 (~maharg101@savoy.force9.co.uk) (Quit: Textual IRC Client: www.textualapp.com)
[16:43:12] <Neeknaim> is there a different way of installing old python version instead of pyenv?
[16:43:16] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[16:43:24] *** Quits: driib2 (~driib@185.65.135.236) (Ping timeout: 240 seconds)
[16:43:24] *** driib22 is now known as driib2
[16:43:29] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[16:44:29] <xeyes> nedbat: yes, thanks. how does one get the equivalent string for a Match?
[16:44:29] <exarkun> Neeknaim: nix-shell -p pythonXY
[16:44:36] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Ping timeout: 240 seconds)
[16:45:36] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:46:01] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:46:08] <nedbat> xeyes: if you only want the matched string, then re.findall will be more convenient, it just gives you the strings
[16:47:36] *** Quits: nicoz (nicoz@ubuntu/member/nicoz) (Quit: Pang timeout)
[16:47:57] *** Quits: peterandre (peterandre@2605:6400:c847:1524::4251) (Quit: Oooh mysterious girl!)
[16:48:06] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[16:48:26] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[16:48:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[16:48:56] *** Joins: Allegretto (~allegrett@fibhost-67-39-93.fibernet.hu)
[16:49:24] <jinsun> Neeknaim: okay that make error 139 is the one that I got too I think, and the cause might be very new gcc, so maybe time to give up on 3.6.15
[16:49:33] <jinsun> Neeknaim: what about 3.7?
[16:50:24] *** Joins: someuser (~user@197.54.84.129)
[16:50:34] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[16:50:37] <Neeknaim> jinsun: I didn't succeed with 3.7.1, but did succeed with 3.7.12. I'm now checking what's the oldest numpy that can run with it, starting with numpy 1.13.3
[16:51:03] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:51:06] <Neeknaim> Is there a smarter way to know what numpy version will work instead of trying each version?
[16:51:47] *** Quits: mattfoxxx (~mattfoxxx@200116b822bce800e99fd6ce5d2e87dc.dip.versatel-1u1.de) (Quit: WeeChat 3.4)
[16:51:48] *** Quits: widp (~user@124.123.105.202) (Ping timeout: 240 seconds)
[16:52:26] <Neeknaim> numpy 1.14.5 worked! I now need to match pandas to it
[16:52:34] *** Joins: mattfoxxx (~mattfoxxx@200116b822bce800e99fd6ce5d2e87dc.dip.versatel-1u1.de)
[16:53:34] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[16:53:44] *** Joins: _wovixo_ (~wovixo@128.104.205.49)
[16:54:17] *** Joins: dbristow_ (~dbristow@user/dbristow)
[16:55:35] *** Joins: whaley (~whaley@097-082-197-228.res.spectrum.com)
[16:55:42] *** Joins: wyclif (~wyclif@user/wyclif)
[16:56:49] *** Joins: widp (~user@124.123.105.155)
[16:57:07] *** Joins: Barones (~Barones@user/Barones)
[16:57:12] *** Quits: wovixo (~wovixo@128.104.205.49) (Ping timeout: 272 seconds)
[16:57:12] *** Quits: dbristow (~dbristow@user/dbristow) (Ping timeout: 272 seconds)
[16:57:25] *** Joins: rvalue (~rvalue@user/rvalue)
[16:58:30] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[16:59:21] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[16:59:28] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:59:55] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[17:00:22] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 272 seconds)
[17:00:22] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 272 seconds)
[17:00:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[17:01:01] *** Joins: wyclif (~wyclif@user/wyclif)
[17:01:15] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:03:09] *** Joins: nicoz (nicoz@nicoz.letz.dev)
[17:04:06] *** Joins: peterandre (peterandre@2605:6400:c847:1524::4251)
[17:05:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[17:05:57] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[17:06:08] *** Quits: tobybl (~tobybl@214.242.200.146.dyn.plus.net) (Remote host closed the connection)
[17:06:09] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[17:06:32] *** Joins: wyclif (~wyclif@user/wyclif)
[17:07:35] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 240 seconds)
[17:07:42] *** Quits: kts (~kts@103.73.237.162) (Quit: Konversation terminated!)
[17:09:27] *** Joins: de-facto (~de-facto@user/de-facto)
[17:09:29] *** Quits: whaley (~whaley@097-082-197-228.res.spectrum.com) (Quit: It won't give up.  It wants me dead.  Goddamn this noise inside my head.)
[17:09:30] *** Joins: purple_cthulhu (~rax@2.186.4.24)
[17:09:58] *** Joins: pro_z (~pro_z@37.214.74.198)
[17:10:10] *** Joins: Origin (~Origin@d-69-161-70-214.nh.cpe.atlanticbb.net)
[17:11:15] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[17:11:49] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[17:11:54] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[17:12:03] *** Joins: wyclif (~wyclif@user/wyclif)
[17:12:23] *** Quits: zuplex (~zuplex@202.51.76.90) (Ping timeout: 256 seconds)
[17:12:23] *** Joins: d1cor (~diego@179.63.242.122)
[17:13:12] *** Joins: Midjak (~Midjak@82.66.147.146)
[17:14:09] *** Joins: Narrat (~omnius@p200300df5f123b4a06ea56fffe2e7cdc.dip0.t-ipconnect.de)
[17:15:00] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[17:15:19] *** Joins: aslicedbanjo (~aslicedba@host86-148-108-184.range86-148.btcentralplus.com)
[17:16:50] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[17:16:58] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[17:17:15] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:69b2:1da5:3a92:e9c6)
[17:17:15] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:69b2:1da5:3a92:e9c6) (Changing host)
[17:17:15] *** Joins: skapata (~Skapata@user/skapata)
[17:17:24] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[17:17:33] *** Joins: wyclif (~wyclif@user/wyclif)
[17:17:43] *** Joins: filename (~kilitary@185.193.143.131)
[17:22:04] *** Joins: c4017w__ (~c4017@209.52.68.8)
[17:23:02] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:25:24] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[17:25:29] *** Joins: nyah (~nyah@05453449.skybroadband.com)
[17:25:43] *** Quits: tachoknight (~tachoknig@2600:1700:3060:3ee0:9dee:76d0:4ba1:3c6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:27:54] *** Joins: p-i-_ (~Ohmu@mx-ll-183.89.29-122.dynamic.3bb.co.th)
[17:28:47] *** Joins: bluedust (~bluedust@103.165.167.221)
[17:28:55] *** Quits: MikZyth (~MikZyth@host-102-154-66-217.spbmts.ru) (Quit: WeeChat 3.4)
[17:29:48] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[17:30:12] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[17:30:48] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 256 seconds)
[17:31:17] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[17:31:39] *** Quits: p-i- (~Ohmu@mx-ll-183.89.29-122.dynamic.3bb.co.th) (Ping timeout: 256 seconds)
[17:31:58] *** Quits: Harlin (~DonQixote@75-163-174-136.clsp.qwest.net) (Quit: Leaving)
[17:32:09] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[17:32:15] *** Joins: Harlin (~DonQixote@75-163-174-136.clsp.qwest.net)
[17:32:17] *** Joins: plastico (~plastico@neomutt/plastico)
[17:32:25] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[17:33:14] *** Quits: Harlin (~DonQixote@75-163-174-136.clsp.qwest.net) (Read error: Connection reset by peer)
[17:33:43] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[17:34:57] *** fling is now known as swing
[17:39:06] *** Joins: korg815 (~korg815@user/korg815)
[17:39:24] *** Quits: mattfoxxx (~mattfoxxx@200116b822bce800e99fd6ce5d2e87dc.dip.versatel-1u1.de) (Quit: WeeChat 3.4)
[17:39:42] *** Joins: mattfoxxx (~mattfoxxx@200116b822bce800e99fd6ce5d2e87dc.dip.versatel-1u1.de)
[17:40:00] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 250 seconds)
[17:41:21] *** Joins: JohnDoe1 (~johndoe1@184-091-099-189.res.spectrum.com)
[17:42:03] *** Quits: korg815 (~korg815@user/korg815) (Client Quit)
[17:42:20] *** Joins: korg815 (~korg815@user/korg815)
[17:43:22] *** Joins: cheater (~Username@user/cheater)
[17:45:46] *** Quits: ice9 (~ice9@user/ice9) (Read error: Connection reset by peer)
[17:46:36] *** Quits: frost31 (~frost@user/frost) (Ping timeout: 240 seconds)
[17:47:14] *** Quits: someuser (~user@197.54.84.129) (Ping timeout: 256 seconds)
[17:47:52] *** Joins: FluffyMask (~masque@user/fluffymask)
[17:48:56] *** Joins: ice9 (~ice9@user/ice9)
[17:49:18] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:50:26] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:51:13] *** Joins: pepper (~pepper@user/pepper)
[17:55:06] *** Quits: tr4ck3ur (~tr4ck3ur@user/tr4ck3ur) (Remote host closed the connection)
[17:55:44] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[17:56:12] *** Quits: Kohe (~Kohe@77.49.10.102.dsl.dyn.forthnet.gr) (Ping timeout: 240 seconds)
[17:56:19] *** Joins: frost (~frost@user/frost)
[17:56:33] *** Quits: frost (~frost@user/frost) (Client Quit)
[17:56:52] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[17:57:05] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:57:16] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[17:58:17] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[18:01:41] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[18:01:49] *** Quits: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:03:22] *** Joins: XV8 (~XV8@2601:5cb:c001:50::5524)
[18:03:23] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[18:04:07] *** Joins: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com)
[18:05:00] * foo gets back to upgrading from Python 3.6.8 to 3.10.2
[18:05:25] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[18:06:19] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:06:32] <foo> Any suggestions on this error? https://bpa.st/O4SA First upgrading in docker and this is an odd one. I don't have
[18:06:35] <foo> python-crfsuite in my requirements.txt
[18:06:36] *** Joins: jmd (~user@de.cellform.com)
[18:08:29] *** Joins: teut (~teut@122.161.83.81)
[18:09:07] * foo rads https://github.com/scrapinghub/python-crfsuite/issues/132
[18:09:10] <foo> s/rads/reads
[18:09:33] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[18:11:17] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[18:11:19] *** Quits: esv (~esv@74.124.178.154) (Ping timeout: 256 seconds)
[18:11:57] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Ping timeout: 272 seconds)
[18:12:19] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[18:16:29] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[18:17:05] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[18:17:56] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:18:18] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:19:39] *** Joins: akk (~akk@75-161-95-245.albq.qwest.net)
[18:21:31] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[18:22:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[18:22:36] *** Joins: wyclif (~wyclif@user/wyclif)
[18:22:39] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[18:24:21] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-bc9a-9d0f-1878-88ac.res6.spectrum.com)
[18:26:30] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[18:26:39] *** Quits: pyfisch (~pyfisch@user/pyfisch) (Read error: Connection reset by peer)
[18:26:58] *** Joins: pyfisch (~pyfisch@user/pyfisch)
[18:27:14] *** Joins: whaley (~whaley@097-082-197-228.res.spectrum.com)
[18:28:21] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:4f95:d7f1:1795:31c8) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[18:28:36] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:45cf:b8e9:9339:3957)
[18:28:39] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 256 seconds)
[18:30:46] *** Joins: Barones (~Barones@user/Barones)
[18:32:15] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:45cf:b8e9:9339:3957) (Client Quit)
[18:32:29] *** Joins: dreamon (~dreamon@pd95035d1.dip0.t-ipconnect.de)
[18:32:30] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:45cf:b8e9:9339:3957)
[18:32:43] *** Joins: maxzor_ (~maxzor@2a01cb04054faa003bb34ce3f734fa22.ipv6.abo.wanadoo.fr)
[18:33:42] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 256 seconds)
[18:36:36] *** Quits: maxzor (~maxzor@2a01cb04054faa0029307b4f13034fa3.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[18:37:03] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:37:21] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[18:39:08] *** Joins: andreasbuhr (~quassel@p549db736.dip0.t-ipconnect.de)
[18:41:01] *** Joins: HaMsTeRs (~Thunderbi@210.3.213.4)
[18:43:25] *** Joins: ATAD (~ATAD@user/atad)
[18:43:25] *** Quits: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[18:43:42] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:b59a:8933:faf5:60c9) (Ping timeout: 250 seconds)
[18:44:19] *** Quits: schumaml (~schumaml@p200300e2ef02330053c1821a43d17d29.dip0.t-ipconnect.de) (Quit: WeeChat 3.4)
[18:45:10] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[18:45:24] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[18:46:14] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[18:46:18] *** Quits: sobkas (~sobkas@95.175.17.217) (Ping timeout: 250 seconds)
[18:46:58] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:48:06] *** Joins: masoudd (~masoudd@user/masoudd)
[18:48:09] *** Joins: dme86 (~dan@user/dan86)
[18:48:25] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[18:51:33] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[18:53:25] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec93-a79e-a5f0-138c.res6.spectrum.com)
[18:54:11] *** Quits: Sadale (~Sadale@user/sadale) (Quit: tawa pona!)
[18:54:25] *** Joins: Sadale (~Sadale@user/sadale)
[18:54:26] *** Quits: ckdCreations (~ckdCreati@147.55.133.138) (Read error: Connection reset by peer)
[18:54:41] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[18:54:41] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:55:35] *** Quits: Sadale (~Sadale@user/sadale) (Client Quit)
[18:57:29] *** Joins: xkuru (~xkuru@user/xkuru)
[18:58:10] *** Quits: d1cor (~diego@179.63.242.122) (Ping timeout: 272 seconds)
[18:58:36] *** Joins: Sadale (~Sadale@user/sadale)
[18:59:00] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[18:59:23] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[18:59:27] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[19:00:34] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:00:45] *** Joins: ovelny (~ovelny@user/ovelny)
[19:01:12] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:e880:d589:e5c1:669c)
[19:02:21] *** Joins: Vonter (~Vonter@user/vonter)
[19:04:28] *** Joins: cowsay-moo (~cowsay-mo@2001:ac8:9a:60:1015:e4fd:d6d:b039)
[19:04:54] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:e880:d589:e5c1:669c) (Client Quit)
[19:05:00] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[19:06:35] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[19:06:36] *** Joins: medium_cool (~medium_co@136.36.128.48)
[19:06:38] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[19:08:45] *** Quits: p-i-_ (~Ohmu@mx-ll-183.89.29-122.dynamic.3bb.co.th) (Remote host closed the connection)
[19:09:21] *** Joins: p-i- (~Ohmu@183.89.29.122)
[19:10:50] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:13:41] *** Joins: lilcoder (~eson123@user/eson123)
[19:14:21] *** _subopt is now known as subopt
[19:14:58] <lilcoder> question please, so i am trying to find outlier in a dataset of mine and delete it if detected, so here is my codes https://pastebin.com/3mTfSqd4, i first fill NaN with 0 then go to detect outlier but not sure if there is anything wrong with the outlier part ?
[19:15:09] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[19:15:54] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[19:16:12] *** Quits: Jong (~Jong@2620:10d:c090:400::5:b24b) (Ping timeout: 240 seconds)
[19:17:10] *** Quits: widp (~user@124.123.105.155) (Ping timeout: 272 seconds)
[19:19:23] *** Joins: JordiGH (~jordi@fencepost.gnu.org)
[19:19:23] *** Quits: JordiGH (~jordi@fencepost.gnu.org) (Changing host)
[19:19:23] *** Joins: JordiGH (~jordi@user/jordigh)
[19:20:45] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[19:22:18] *** Quits: giesen (~ggiesen@ego.giesen.me) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[19:23:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[19:23:08] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[19:23:50] *** Joins: djhankb (~djhankb@208.113.164.68)
[19:24:28] <lilcoder> here is the dataset also https://www.kaggle.com/surya635/house-price-prediction/data?select=train.csv
[19:25:28] *** Joins: giesen (~ggiesen@ego.giesen.me)
[19:26:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[19:26:58] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[19:28:38] *** Joins: wyclif (~wyclif@user/wyclif)
[19:31:00] *** Quits: bluedust (~bluedust@103.165.167.221) (Remote host closed the connection)
[19:32:27] *** Quits: runelind_ (~runelind@user/runelind) (Quit: ZNC 1.8.2 - https://znc.in)
[19:32:53] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[19:33:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[19:33:19] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[19:34:08] *** Joins: wyclif (~wyclif@user/wyclif)
[19:34:18] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[19:36:12] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 240 seconds)
[19:36:36] *** Joins: runelind (~runelind@user/runelind)
[19:38:25] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[19:38:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[19:39:32] *** Joins: schumaml (~schumaml@p200300e2ef02330053c1821a43d17d29.dip0.t-ipconnect.de)
[19:39:38] *** Joins: wyclif (~wyclif@user/wyclif)
[19:39:57] *** justGhost is now known as justAstache
[19:40:09] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:40:56] *** Z-cat is now known as JustMustache
[19:41:06] *** JustMustache is now known as Z-cat
[19:41:21] *** Parts: lilcoder (~eson123@user/eson123) (Leaving)
[19:44:12] *** Quits: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca) (Ping timeout: 240 seconds)
[19:44:49] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[19:45:53] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[19:46:05] *** Parts: srstevenson (b46bf53c49@2604:bf00:561:2000::f3) ()
[19:51:03] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[19:51:06] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[19:51:53] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[19:52:38] *** Joins: powftw (uid448161@id-448161.lymington.irccloud.com)
[19:54:27] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[19:56:30] *** Joins: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net)
[19:56:39] *** Joins: BlueFrog (~BlueFrog@user/BlueFrog)
[19:57:26] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[19:57:33] *** Quits: Origin (~Origin@d-69-161-70-214.nh.cpe.atlanticbb.net) (Quit: Leaving)
[19:57:38] *** Quits: xeyes (~user@user/duuude) (Ping timeout: 260 seconds)
[19:57:58] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[19:59:00] *** Joins: bloody (~bloody@user/bloody)
[20:00:00] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:00:17] *** Joins: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca)
[20:02:36] *** Quits: filename (~kilitary@185.193.143.131) (Ping timeout: 240 seconds)
[20:04:10] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[20:04:26] *** Joins: tm007 (uid287041@id-287041.uxbridge.irccloud.com)
[20:04:39] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[20:06:28] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[20:07:04] *** Joins: xeyes (~user@user/duuude)
[20:07:05] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[20:07:23] *** Joins: remolej2 (~kenoba@user/kenoba)
[20:09:06] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[20:09:11] *** Quits: remolej (~kenoba@user/kenoba) (Ping timeout: 256 seconds)
[20:09:11] *** remolej2 is now known as remolej
[20:09:47] *** Quits: greedom (~greedom@p200300de673a16000d7908bf02accb99.dip0.t-ipconnect.de) (Remote host closed the connection)
[20:11:08] *** Parts: adhawkins (~adhawkins@user/adhawkins) (The Lounge - https://thelounge.chat)
[20:13:05] *** Joins: Jong (~Jong@2620:10d:c090:400::5:b24b)
[20:14:34] *** Joins: greedom (~greedom@p200300de673a16000d7908bf02accb99.dip0.t-ipconnect.de)
[20:14:37] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[20:16:19] *** swing is now known as fling
[20:16:50] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[20:17:44] *** Joins: korg815 (~korg815@user/korg815)
[20:20:01] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:20:13] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[20:21:45] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[20:23:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[20:24:51] *** Quits: kmh (~kmh@2a00:6020:5004:6800:c9e7:fea2:fb32:da8f) (Quit: Leaving)
[20:26:23] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Read error: Connection reset by peer)
[20:26:40] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[20:27:00] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[20:27:27] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[20:28:01] *** Joins: white_magic (~white_mag@87.247.121.213)
[20:29:37] *** Parts: white_magic (~white_mag@87.247.121.213) ()
[20:31:11] *** Quits: snortie (~snortie@2a02:8308:386:b900:f881:7773:c6f5:7fb8) (Ping timeout: 245 seconds)
[20:31:28] *** Joins: p-i-_ (~Ohmu@2403:6200:8978:3172:f107:35d2:9019:655d)
[20:31:33] *** Joins: chmykh (~chmykh@mm-135-47-121-178.gomel.dynamic.pppoe.byfly.by)
[20:33:48] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[20:34:48] *** Joins: dme86 (~dan@user/dan86)
[20:35:04] *** Quits: p-i- (~Ohmu@183.89.29.122) (Ping timeout: 272 seconds)
[20:35:45] *** Joins: Adoi (~Adoi@user/adoi)
[20:35:59] *** Quits: Adoi (~Adoi@user/adoi) (Read error: Connection reset by peer)
[20:36:16] *** Quits: chmykh (~chmykh@mm-135-47-121-178.gomel.dynamic.pppoe.byfly.by) (Quit: chmykh)
[20:36:37] *** Joins: Adoi (~Adoi@user/adoi)
[20:38:00] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Quit: Leaving)
[20:38:32] *** Quits: Adoi (~Adoi@user/adoi) (Client Quit)
[20:38:51] *** Joins: reset (~reset@user/reset)
[20:39:09] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[20:39:37] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[20:39:42] *** Parts: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) ()
[20:40:57] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:8989:4d0:aaef:ac40)
[20:42:22] *** Joins: rsx (~dummy@ppp-188-174-142-192.dynamic.mnet-online.de)
[20:45:29] *** Joins: rsrx (~rsrx@79-101-167-192.dynamic.isp.telekom.rs)
[20:46:10] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[20:48:08] *** Quits: XV8 (~XV8@2601:5cb:c001:50::5524) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:48:47] <purple_cthulhu> Hi, Is it OK to implement an ABC class having it's __init__() defined and call super().__init__(*args, **kwargs) from its subclasses? Many attributes are common between subclasses so I would like them to be initialized at the base class level to avoid code repetition. Nothing prevents me from doing so and it works. However, I want to know what would be the proper way to implement such a thing. The subclasses could be forced to implement
[20:48:48] <purple_cthulhu> their own __init__ by decorating the __init__ method of the base class by @abstractmethod, but it's highly possible to forget to call the super().__init__(args, **kwargs) in the __init__() of a subclass. Here is an example of what I have implemented: https://bpa.st/MNNQ
[20:48:49] *** Quits: ejjfunky0 (~ejjfunky2@125.164.17.4) (Remote host closed the connection)
[20:49:00] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[20:49:40] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[20:50:34] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Client Quit)
[20:50:51] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[20:51:10] <nedbat> purple_cthulhu: it's great to define an __init__ in the base class and have subclasses use it.
[20:52:00] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[20:52:01] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[20:52:57] *** Quits: ejjfunky (~ejjfunky@125.164.19.4) (Ping timeout: 240 seconds)
[20:53:35] *** Quits: mug3n_ (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[20:58:26] *** Quits: BlueFrog (~BlueFrog@user/BlueFrog) (Quit: Quit)
[20:58:26] *** Joins: XV8 (~XV8@2601:5cb:c001:50::5524)
[21:02:28] *** Quits: Jong (~Jong@2620:10d:c090:400::5:b24b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:03:41] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[21:03:52] *** Joins: Jong (~Jong@2620:10d:c090:400::5:b24b)
[21:04:01] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[21:07:03] <purple_cthulhu> nedbat, Thank you very much for answering. Yes, it works. What if a subclass does not call __init__ of its base class? I think the problem is that an instance of a subclass would be created and initialized without calling the __init__ of its base class to initialize the common attributes. Is there a way to enforce subclasses to call the __init__ of the base class?
[21:07:17] *** Joins: dme86 (~dan@user/dan86)
[21:07:26] *** Quits: xeyes (~user@user/duuude) (Ping timeout: 245 seconds)
[21:07:28] <nedbat> purple_cthulhu: i don't know of a way to enforce that.  people writing subclasses need to know how to do it right.
[21:08:22] *** Quits: HaMsTeRs (~Thunderbi@210.3.213.4) (Quit: HaMsTeRs)
[21:08:44] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[21:09:16] *** Quits: ovelny (~ovelny@user/ovelny) (Ping timeout: 272 seconds)
[21:09:29] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:09:31] *** Quits: Neeknaim (~Neeknaim@77.139.140.101) (Quit: Konversation terminated!)
[21:12:12] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 240 seconds)
[21:13:23] <foo> Is there any proposed solutions for package updates that include breaking changes? I'm upgrading from python 3.6 to 3.10.2 now and I previously did pur requirements.txt to upgrade all pakages in requirements.txt... and I'm noticing a handful of small changes. I wonder if there's another way to deal with this. Or the assumptions might be, "tests will catch that stuff" ... hence the value of tests.
[21:13:29] *** Joins: nomic (~nomic@185.217.117.193)
[21:14:44] <nedbat> foo: what would you trust other than tests?
[21:14:53] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[21:15:45] *** Joins: zebrag (~chris@user/zebrag)
[21:16:12] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:e0e6:a54e:1f45:dc64) (Quit: Leaving)
[21:16:40] <foo> nedbat: heh, fair question - wasn't sure if pip could throw some sort of message going from version A to B where a flag was set that something is breaking.
[21:16:52] *** Joins: filename (~kilitary@185.193.143.131)
[21:16:57] *** Quits: nabaiste^ (~nabaiste@50.233.120.162) (Ping timeout: 240 seconds)
[21:17:25] <nedbat> foo: if you trust the semantic versioning of your packages, you can restrict yourself to not taking breaking changes with `pkg~=1.2` or something
[21:18:19] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) ()
[21:18:53] <foo> nedbat: yeah, but what's the process to know about "breaking changes"? Do folks check changelogs on every package they update and look for "breaking changes"? Or does it make sense to TIAS?
[21:19:38] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[21:20:18] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[21:20:26] *** Joins: Betal (~Betal@user/betal)
[21:20:30] <nedbat> foo: that's a good question. reading the changelog is a way, but labor-intensive
[21:20:57] *** Joins: Payam (~Payam@c83-250-236-236.bredband.tele2.se)
[21:21:38] *** Joins: cozmo (~user@65.78.142.57)
[21:21:49] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[21:21:53] <foo> nedbat: is there any other way? I assume it's simply TIAS
[21:21:54] *** Joins: dme86 (~dan@user/dan86)
[21:22:16] <nedbat> foo: you've come up with the two ways: read the docs, just try it.
[21:22:30] <amogorkon> is there a generic for iterables?
[21:22:39] <jinsun> what is TIAS?
[21:22:39] <amogorkon> iter[str] would be nice..
[21:22:56] <nedbat> jinsun: Try It And See
[21:23:02] <foo> nedbat: thank you, wanted to make sure I wasn't missing something.
[21:23:19] <nedbat> amogorkon: isn't it Iterable[str] ?
[21:23:19] <jinsun> ah okay
[21:23:20] <foo> Separate question: I'm trying to upgrade python 3.6 to 3.10.2. There's 1 package that has conflicts that is in our codebase but not actively used. I can go to the 1 file that's imported and "do something to hide it" -> is there a way to make a dummy class that can accept any method?
[21:23:34] *** Joins: cheater (~Username@user/cheater)
[21:23:35] *** Joins: xeyes (~user@user/duuude)
[21:23:43] <han-solo> amogorkon: `typing.Iterable` # ?
[21:23:44] <amogorkon> nedbat, but.. importing from typing :|
[21:23:48] <jinsun> amogorkon: https://docs.python.org/3/library/typing.html#typing.Iterable or https://docs.python.org/3/library/collections.abc.html#collections.abc.Iterable for 3.9+
[21:23:59] *** Joins: snortie (~snortie@2a02:970:1186:1800:f881:7773:c6f5:7fb8)
[21:24:00] <nedbat> amogorkon: is that a problem?
[21:24:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[21:24:05] <amogorkon> i don't like it :p
[21:24:09] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:99f4:f22:5396:624a) (Read error: Connection reset by peer)
[21:24:20] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:99f4:f22:5396:624a)
[21:24:22] <nedbat> amogorkon: i don't know how to help with that
[21:24:42] <amogorkon> write a pep to make iter[] into a generic for Iterable :D
[21:24:54] *** Quits: zaquest (~notzaques@5.130.79.72) (Ping timeout: 252 seconds)
[21:25:05] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:25:09] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[21:25:13] <jinsun> you lose out on TypeVars Callables Protocols, lots of good stuff
[21:25:18] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:25:26] <jinsun> if you avoid typing for some reason
[21:27:43] *** Joins: zaquest (~notzaques@5.130.79.72)
[21:27:45] <purple_cthulhu> nedbat, It's no wonder. "We are all consenting adults here" :)
[21:27:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[21:28:20] <jinsun> would be convenient if you could just use builtin iter and callable, but those are functions, treating them like types would be weird
[21:28:29] <Payam> Anyone uses Vim for editing?
[21:28:46] <nedbat> Payam: did you try the gitter channel? he will help you there
[21:28:48] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[21:28:48] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[21:29:12] <Payam> nedbat, I am not familiar with Matrix or gitter
[21:29:24] <amogorkon> jinsun, not really any weirder than other builtins that look like functions but aren't ^^
[21:29:33] <nedbat> Payam: if you have the author of YCM ready to help, it would be worth your while to figure it out
[21:29:40] <foo> The reason I can't fix this package is because there's a conflict with another package. And the problem-causing package isn't used right now, but I don't want to comment out a ton of code. If I could "mask" the bad package somehow to accept anything that would begerat.
[21:29:44] <foo> be great
[21:29:49] *** Joins: nabaiste^ (~nabaiste@50.233.120.162)
[21:30:14] <Payam> nedbat,  you are right.
[21:30:45] *** Joins: wlsn (~wlsn@host-92-6-36-172.as13285.net)
[21:31:12] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[21:31:38] *** Joins: bluedust (~bluedust@103.165.167.221)
[21:31:58] *** Quits: cozmo (~user@65.78.142.57) (Read error: Connection reset by peer)
[21:31:58] *** Joins: Bartle_94 (~Bartle_94@134.6.121.242)
[21:32:08] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[21:32:45] <jinsun> amogorkon: yeah but iter has less chance of getting accepted than even callable I think, since collections.abc.Iterable is generic since 3.9
[21:33:20] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[21:34:05] * foo tries to comment out the broken package, if those functions don't get ran maybe it'll be fine
[21:34:28] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[21:34:48] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[21:34:53] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Read error: Connection reset by peer)
[21:35:05] *** Parts: wlsn (~wlsn@host-92-6-36-172.as13285.net) ()
[21:35:31] *** Joins: arinov (~arinov@78.162.46.214)
[21:35:55] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[21:36:27] *** Quits: bluedust (~bluedust@103.165.167.221) (Ping timeout: 256 seconds)
[21:37:02] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:37:41] <foo> Meh, that's not working. I'll try again: I have a broken package that I don't want to resolve right now. I want to temporary mask it so anything that calls my_mod.something will return nothing. This code doesn't get ran so I think it's ok. Any quick way to do that?
[21:37:46] <foo> Thanks
[21:38:22] <amogorkon> you can try to use mock
[21:39:13] <foo> amogorkon: ohh, thanks, I tried that already but just got it
[21:40:47] *** Quits: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:d591:28fb:7093:57e8) (Remote host closed the connection)
[21:40:56] *** Quits: Babar (~Babar@116.102.89.252) (Ping timeout: 272 seconds)
[21:40:59] * foo does a TIAS on 200+ packages all upgraded at once from python 3.6 to 3.10... it'll be nice to be done with this
[21:41:04] *** Joins: cozmo (~user@65.78.142.57)
[21:41:35] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 240 seconds)
[21:41:46] * foo has known this was on the plate for years
[21:41:48] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Ping timeout: 240 seconds)
[21:45:00] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[21:45:23] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[21:45:31] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[21:46:38] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 272 seconds)
[21:46:50] *** Joins: wyclif (~wyclif@user/wyclif)
[21:47:09] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:47:24] *** Quits: filename (~kilitary@185.193.143.131) (Ping timeout: 240 seconds)
[21:48:15] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[21:48:36] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[21:49:05] *** Quits: greedom (~greedom@p200300de673a16000d7908bf02accb99.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:51:45] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[21:51:46] *** Joins: Babar (~Babar@171.233.210.64)
[21:51:48] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[21:52:20] *** Joins: wyclif (~wyclif@user/wyclif)
[21:52:27] *** Joins: magic_ninja (~sparkie1@2600:1700:3ab0:e9f0:a375:4df:5846:3a7f)
[21:53:21] *** Joins: bm (~bm@user/bm)
[21:53:45] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) ()
[21:56:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[21:56:53] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[21:57:50] *** Joins: wyclif (~wyclif@user/wyclif)
[21:58:19] <bm> How long into Python have you realized that set() isn't actually sorted?
[21:59:25] *** Quits: rsrx (~rsrx@79-101-167-192.dynamic.isp.telekom.rs) (Quit: Leaving)
[21:59:42] *** Joins: Roey (~Roey@user/Roey)
[21:59:55] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 240 seconds)
[22:02:01] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[22:02:02] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Remote host closed the connection)
[22:02:23] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[22:03:05] <phy1729> It's a set. sets are just bags of objects just like in math
[22:03:15] *** Joins: Atque (~Atque@user/atque)
[22:03:57] *** Joins: Kohe (~Kohe@77.49.10.102.dsl.dyn.forthnet.gr)
[22:04:08] *** Joins: fef (~thedawn@user/thedawn)
[22:04:20] <catern> is there a version of isinstance which returns the object if it matches, but returns None if it does not?
[22:04:28] *** Quits: medium_cool (~medium_co@136.36.128.48) (Quit: I have gone to sleep. ZZZzzz…)
[22:05:40] *** Parts: nickodd (~nickodd@user/nickodd) ()
[22:06:39] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec93-a79e-a5f0-138c.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[22:07:09] <han-solo> `obj if isinstance(obj, type) else None` # ?
[22:07:55] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[22:10:09] *** Joins: Vonter (~Vonter@user/vonter)
[22:11:58] *** Quits: tm007 (uid287041@id-287041.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[22:11:58] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[22:13:00] *** Quits: Fauve (~Fauve@user/fauve) (Quit: WeeChat 2.3)
[22:15:26] *** Joins: kmh (~kmh@2a00:6020:5004:6800:6969:9a4a:935a:d8b6)
[22:15:27] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Read error: Connection reset by peer)
[22:18:51] *** Joins: jmd` (~user@de.cellform.com)
[22:19:46] *** Joins: auk (auk@gateway/vpn/protonvpn/auk)
[22:20:19] *** Quits: auk (auk@gateway/vpn/protonvpn/auk) (Max SendQ exceeded)
[22:20:48] *** Joins: auk (auk@gateway/vpn/protonvpn/auk)
[22:21:14] *** Joins: kickingvegas (~cchoi@c-73-170-198-141.hsd1.ca.comcast.net)
[22:21:29] *** Quits: Dotz0cat (~Dotz0cat@98.19.251.149) (Read error: Connection reset by peer)
[22:22:22] *** Joins: dme86 (~dan@user/dan86)
[22:22:55] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec93-a79e-a5f0-138c.res6.spectrum.com)
[22:22:55] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Ping timeout: 240 seconds)
[22:23:00] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:23:46] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[22:23:57] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[22:24:32] *** Joins: c4017w_ (~c4017@209.52.68.8)
[22:25:16] *** Joins: Dotz0cat (~Dotz0cat@h87.94.187.173.dynamic.ip.windstream.net)
[22:25:29] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:25:37] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-b0ed-1a92-719b-f6c2.res6.spectrum.com) (Ping timeout: 240 seconds)
[22:25:46] *** s5smong is now known as s4msung
[22:27:00] *** Quits: jmd` (~user@de.cellform.com) (Ping timeout: 240 seconds)
[22:27:12] *** Joins: jmd` (~user@de.cellform.com)
[22:27:48] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[22:28:36] *** Joins: greedom (~greedom@p200300de673a16000d7908bf02accb99.dip0.t-ipconnect.de)
[22:28:45] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[22:28:56] *** Joins: HaMsTeRs (~Thunderbi@210.3.213.4)
[22:29:05] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[22:29:07] *** Joins: Guest77 (~Guest77@2603-7000-4400-7d00-0598-6efc-b8a5-e437.res6.spectrum.com)
[22:29:19] <Guest77> hello, when is it appropriate to use assert instead of try/except ?
[22:29:25] *** Quits: rsx (~dummy@ppp-188-174-142-192.dynamic.mnet-online.de) (Quit: rsx)
[22:29:25] <bjs> Guest77: in testing
[22:29:31] *** Quits: greedom (~greedom@p200300de673a16000d7908bf02accb99.dip0.t-ipconnect.de) (Remote host closed the connection)
[22:29:41] <nedbat> Guest77: assert is for when you believe something is true based on the structure of your code. It cannot be false.
[22:29:48] <bjs> Guest77: I'm not sure `assert` is a replacement for try/except anyway
[22:29:52] <nedbat> Guest77: try/except is when something could go wrong.
[22:30:00] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[22:30:04] <Guest77> okay
[22:30:05] *** Joins: envex (~envex@cpe-173-91-189-33.neo.res.rr.com)
[22:30:20] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 272 seconds)
[22:30:24] *** Joins: greedom (~greedom@p200300de673a16000d7908bf02accb99.dip0.t-ipconnect.de)
[22:31:31] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[22:31:35] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[22:31:39] *** Joins: ice9 (~ice9@user/ice9)
[22:31:56] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[22:32:20] <bm> Guest77: if assert is critical to the operation, be aware that it can be disabled by using "-O" flag.
[22:33:01] <Guest77> I am going through some nvidia lab deeplearning code and they just seem to use a lot of assert. For example:  assert np.min(images) == 0 and np.max(images) == 255 . Instead of right after having a try/except the data manipulation
[22:33:09] <Guest77> bm okay
[22:33:22] <tct> Hey guys, I have a bytes object returned from  struct.pack().  I need to modify the last 4 bytes. how can I modify the last n bytes of a bytes object?
[22:33:48] <KirkMcDonald> tct: Slice 'em off, then concatenate the new bytes.
[22:34:05] <KirkMcDonald> tct: If you need a mutable array of bytes, use a bytearray.
[22:34:48] *** Quits: noarb- (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[22:34:50] <tct> KirkMcDonald, alright, so if I understand you correctly I take my bytes object returned from struct.pack(), slice off the bytes I want to modify, create a new bytes object with the modified bytes and then concat to the first slice?
[22:36:00] <Guest77> Here is an example: https://bpa.st/PEZQ  in the first function they are using try/except, but on the lower they are just using assert before
[22:36:02] *** Quits: jmd` (~user@de.cellform.com) (Ping timeout: 272 seconds)
[22:36:11] *** Quits: mcglk (~mcglk@131.191.49.120) (Read error: Connection reset by peer)
[22:36:20] *** Joins: jmd``` (~user@de.cellform.com)
[22:36:22] *** Joins: nickodd (~nickodd@user/nickodd)
[22:37:00] *** Quits: pro_z (~pro_z@37.214.74.198) (Ping timeout: 240 seconds)
[22:37:13] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[22:37:37] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[22:37:57] <Guest77> i sit because there is so many things to check, its better to just assert? instead of try/except... im just trying to understand the use-difference
[22:37:58] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[22:37:59] <Guest77> is it
[22:38:23] <Guest77> and easier to see what is wrong ?
[22:38:47] <bjs> Guest77: well assert and try/except do different things,  assert raises an exception whereas try/except catch exceptions. So i'm not really sure it's that you have a choice of which to use generally
[22:38:48] <KirkMcDonald> tct: Sure.
[22:38:57] <tct> KirkMcDonald, thanks, I´ll give that a try!
[22:39:08] *** Joins: mcglk (~mcglk@131.191.49.120)
[22:39:25] <bjs> Guest77: `assert` checks if something is true, and if not it raises an error.  But assert is really there to check something that should be true actually is,  e.g. in testing.  They can be turned off.
[22:39:41] <Guest77> are they usually turned off when running the program?
[22:39:48] <bjs> Guest77: yeah
[22:39:50] <bm> Guest77: use assert when you do not expect an error, use try catch when there is a possibility of an error.
[22:40:00] <Guest77> okay thanks
[22:40:29] *** Quits: kenwoodfox (~quassel@user/kenwoodfox) (Ping timeout: 256 seconds)
[22:40:50] *** Joins: kenwoodfox (~quassel@user/kenwoodfox)
[22:41:18] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[22:43:24] *** Joins: asbel (Shaka@user/shaka)
[22:44:35] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[22:44:47] *** Joins: matsaman (~matsaman@user/matsaman)
[22:45:01] *** Quits: jmd``` (~user@de.cellform.com) (Ping timeout: 256 seconds)
[22:45:11] *** Joins: jmd````` (~user@de.cellform.com)
[22:45:17] *** Joins: crashrep (~crashrep@user/crashrep)
[22:45:29] <bm> I think Python should have been designed to just terminate the program without the option of catching AssertionError. It would convey the message better.
[22:46:28] <bm> A lot of people just use assert/try-catch interchangeably without understanding the difference
[22:47:44] <bm> Or as a shorthand for `if not condition: raise` without realizing their logic becomes dependent on an interpreter switch
[22:48:01] *** Joins: noarb (~noarb@user/noarb)
[22:48:04] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[22:48:12] <supakeen> We must be in different circles, I've yet to see someone do so :)
[22:49:51] <nedbat> bm: if we couldn't catch AssertionError, we couldn't use them for tests.
[22:50:18] *** Joins: ablegreen (~ablegreen@tsunami.ocf.berkeley.edu)
[22:50:19] <Guest77> bm: when would you use raise instead of try/except?
[22:50:35] <jinsun> I rarely see people assert, it has got more use with type checking nowadays
[22:50:58] <jinsun> (outside of tests I mean)
[22:51:27] <supakeen> i used to assert invariants until everyone just looked at me funny so i unlearned it
[22:51:34] <supakeen> this was a long long time ago though :)
[22:52:28] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:8bd6:62f1:1b52:da20) (Quit: Leaving)
[22:52:47] *** Joins: noarb- (~noarb@user/noarb)
[22:52:57] <jinsun> Guest77: well raise is for raising exceptions and try: except: is for catching them, so you would use the thing you wanted to do
[22:53:00] <foo> Relatively insignificant, but tiny questions: https://bpa.st/5HOQ -> any preference on which way to do this? We can reasonably assume that requests will always have a status_code attribute... is either of these "more pythonic" ?
[22:53:00] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 240 seconds)
[22:53:00] *** Quits: jmd````` (~user@de.cellform.com) (Ping timeout: 240 seconds)
[22:53:08] <bm> In C#, they just strip all Debug.Assert(...) statements once you switch to Release mode. It also doesn't throw anything but stops the execution and prompts the user.
[22:53:13] <foo> Trying to have some reasoning for going one way versus the other
[22:53:17] <foo> But this may be insigificant
[22:54:01] *** Quits: magga (magga@ti0036a400-3577.bb.online.no) (Remote host closed the connection)
[22:54:16] *** Joins: magga (magga@ti0036a400-3577.bb.online.no)
[22:54:28] <bm> Guest77: https://stackoverflow.com/questions/1467568/debug-assert-vs-exception-throwing
[22:54:41] *** Joins: Origin (~Origin@d-69-161-70-214.nh.cpe.atlanticbb.net)
[22:54:58] <deniska> bm: python has a flag to disable asserts
[22:55:14] <bm> deniska: yes, I said that several lines up.
[22:55:15] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[22:55:35] <deniska> you rarely see actual `assert` statement in python code unless it's a test code run via pytest
[22:56:00] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Remote host closed the connection)
[22:56:27] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-ec93-a79e-a5f0-138c.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[22:56:47] *** Joins: mat001_ (~mat001@c-71-202-208-88.hsd1.ca.comcast.net)
[22:57:32] <bm> deniska: I use it all the time because it's much cleaner than `if` statements. I'm aware that it's incorrect but whatever.
[22:57:51] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[22:58:17] *** Joins: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com)
[22:58:53] <jinsun> foo: 1st way is better, it can be auto-completed and type checked by your ide, and it is easy to typo in a getattr and do something completely wrong (And also getattr is just ugly)
[22:58:54] *** Quits: mat001 (~mat001@c-71-202-208-88.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[22:59:02] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:914:d3a6:c56f:5cc8)
[22:59:33] <foo> jinsun: that's what I thought. The dev who wrote this said "it was more readable" IIRC. I am trying to breathe slowly because I'm a "hard no" on that.
[22:59:37] <foo> jinsun: thank you.
[22:59:51] *** Joins: jazzy (~jaziz@user/jaziz)
[23:00:06] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 272 seconds)
[23:01:27] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[23:01:43] <deniska> foo: the previous people who worked on the code I inherited did use B pattern often. It had to go.
[23:02:09] <foo> deniska: aside from what jinsun added, any other reason to do it that way? it seems more reasonable to me
[23:02:42] *** Joins: wyclif (~wyclif@user/wyclif)
[23:02:59] <bjs> bm: if-and-raise also lets you generate specific exceptions with extra information,  which is useful if you want people to be able to catch them
[23:03:00] <deniska> foo: there's no good reason to use `getattr` if the second argument to it is a literal
[23:03:00] *** Joins: upsala (~zcb@185.209.196.167)
[23:03:25] <bjs> bm: whereas an `AssertionError` is usually just as useful as a "Something went wrong." message, and often not easy to handle within the program itself
[23:03:29] <deniska> foo: `getattr` signals "there's some funky metaprogramming is going on here". There might be a good reason for `getattr`, but this is not it
[23:03:39] <foo> deniska: thank you.
[23:03:47] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[23:04:11] *** Joins: Enitin (~Enitin@82.102.22.85)
[23:04:25] <deniska> foo: and it just hides a chunk of potential mistakes
[23:04:26] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[23:04:43] <deniska> like passing a wrong thing altogether to this function and having it silently chug along
[23:05:00] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:99f4:f22:5396:624a) (Ping timeout: 240 seconds)
[23:05:08] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 256 seconds)
[23:05:15] *** Joins: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it)
[23:05:21] <bm> foo: I'd use `try: if customer_response.status_code == 200` and `catch NameError`, it's inline with "easier to forgive than ask" paradigm.
[23:05:40] <jiggawatt> U.S. is preempting Russia
[23:05:50] <jiggawatt> oops wrong chan
[23:05:50] <deniska> I wouldn't use try-except here, also it'd be AttributeError, not NameError
[23:06:57] *** Joins: analoq (~yashi@user/dies)
[23:06:58] <deniska> And it hides the mistakes in a same way getattr does
[23:06:59] <foo> deniska / jinsun: Again, thank you, after re-reading a thread with him it looks like he said it was "more concise/straightforward" - I asked about readability, he deferred to option 1. I'll share these other reasons with him too
[23:07:28] <Guest77> Which one is better practis, the try except on first or second? https://bpa.st/DEOQ  and should I use assert like on my third code block? if i understood it correctly
[23:08:01] <bm> deniska: actually A) and B) code is not equivalent
[23:08:02] *** Quits: ChrisWarrick (kwpolska@user/kwpolska) (Ping timeout: 250 seconds)
[23:08:10] <The-Compiler> Guest77: the first, never use a bare "except:"
[23:08:28] <deniska> bm: sure
[23:08:29] <Guest77> okay
[23:08:36] *** Quits: Dotz0cat (~Dotz0cat@h87.94.187.173.dynamic.ip.windstream.net) (Ping timeout: 240 seconds)
[23:08:48] <deniska> bm: and between non-equivalent things they do, I prefer what A does
[23:08:52] <The-Compiler> Guest77: the second would also catch any other error in your code, say, if you accedentally used b instead of a in your string. That can be quite confusing and lead to weird behaviour.
[23:09:04] <Guest77> yeah
[23:09:18] *** Joins: paul424 (~tom@ip-5-172-234-213.multi.internet.cyfrowypolsat.pl)
[23:09:20] <bm> deniska: A) can throw NameError if customer_response is not defined, B) just swallows it.
[23:09:25] <The-Compiler> Guest77: as for the third, that assert doesn't make much sense (it would always be false). Usually you would use a typechecker like mypy instead of doing checks like that at runtime
[23:09:26] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[23:10:31] <Guest77> third was just for doing some manipulation with numbers, the c = 'a' was just thrown there to print the assert
[23:11:24] <bjs> Guest77: the point was you wrote the assert wrong
[23:11:29] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:11:32] *** Quits: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be) (Ping timeout: 240 seconds)
[23:11:45] *** Quits: purple_cthulhu (~rax@2.186.4.24) (Quit: Leaving.)
[23:12:24] *** Quits: powftw (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[23:12:26] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Quit: Leaving)
[23:12:30] <Guest77> assert type(num) == int
[23:12:38] <Guest77> yeah my bad, i didnt compile it was just writing it to paste
[23:12:45] <Guest77> im a still newbie trying to learn this stuff
[23:12:50] <bjs> Guest77: maybe you really mean isinstance(num, int)  but this still isn't right, because input() always returns a string
[23:12:57] <bm> foo: for that particular example, just use request's .raise_for_status()
[23:12:58] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:13:16] <bjs> Guest77: so the assert still doesn't work for the above cases, and int() already raises an exception
[23:13:16] *** Quits: trace987 (~trace@user/trace) (Remote host closed the connection)
[23:13:33] <Guest77> assert type(num) == int, f'{num} is not an integer'    doesnt raise for me?
[23:13:40] <Guest77> if c=3
[23:13:40] <foo> bm: appreciate your willingness to help, thank you!
[23:14:02] <bjs> Guest77: your previous examples had input() and int() in them, why was #3 different?
[23:14:12] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[23:14:13] *** Lord_of_Life_ is now known as Lord_of_Life
[23:14:28] <Guest77> third example was for loading data from file, not getting user input... that why i thought I shouldnt use try/except there
[23:14:42] *** Quits: greedom (~greedom@p200300de673a16000d7908bf02accb99.dip0.t-ipconnect.de) (Remote host closed the connection)
[23:14:57] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[23:14:59] <bjs> Guest77: i mean from a file is just another kind of user input
[23:15:35] <Guest77> so I should use try/except there? Im just confused when to use assert then
[23:15:42] <bjs> Guest77: when you're writing tests
[23:15:53] <Guest77> okay
[23:16:03] <bjs> Guest77: `raise` is what generates exceptions that the user sees
[23:16:50] *** Quits: bm (~bm@user/bm) (Quit: bm)
[23:17:45] <bjs> Guest77: so you'd write something like `if not isinstance(num, int): raise ValueError(f"Expected num to be an integer, not {type(num)}")`
[23:18:06] *** Joins: filename (~kilitary@185.193.143.131)
[23:18:08] <Guest77> yeah
[23:19:10] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[23:19:44] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[23:20:37] *** Joins: marcello42 (~mp@p200300dfaf10fe015baf6eed7f4ef68f.dip0.t-ipconnect.de)
[23:21:02] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[23:22:04] *** Joins: switchnode (~switchnod@2601:240:d200:fef:82fa:5bff:fe19:f8e4)
[23:22:08] *** Parts: MatthewG (~foo@user/foo/x-8763512) ()
[23:22:52] *** Quits: aslicedbanjo (~aslicedba@host86-148-108-184.range86-148.btcentralplus.com) (Quit: Leaving.)
[23:24:59] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[23:25:03] *** Joins: c4017w__ (~c4017@209.52.68.8)
[23:26:06] <Guest77> I noticed that if I import numpy as np  and make a numpy array and write type() it will give <class 'numpy.ndarray'> but using if not isinstance(a, numpy.ndarray) will give error while if not isinstance(a, np.ndarray) will not
[23:26:38] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:27:24] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 240 seconds)
[23:27:45] *** Quits: HaMsTeRs (~Thunderbi@210.3.213.4) (Quit: HaMsTeRs)
[23:27:46] <switchnode> i'm contributing to a python module which makes its cli available via setuptools' entry_points['console_scripts'].
[23:27:55] <switchnode> what's the intended way of testing my changes locally? am i supposed to set up a venv and reinstall the package every time?
[23:28:12] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[23:29:16] *** Joins: satta_satta (~AdminUser@55d41988.access.ecotel.net)
[23:29:23] *** Joins: crashrep (~crashrep@user/crashrep)
[23:29:27] <jinsun> the venv setup would be needed only once, and pip install --editable to avoid reinstalling after evey change
[23:29:29] <nedbat> switchnode: make a venv, and then:  pip install -e .
[23:29:35] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[23:29:48] <nedbat> switchnode: you'd only need to reinstall if you changed the setup.py/.cfg/.toml whatever
[23:30:43] <Guest77> thanks for help guys, I appreciate it, I will go work more now and become better
[23:31:15] *** Quits: Guest77 (~Guest77@2603-7000-4400-7d00-0598-6efc-b8a5-e437.res6.spectrum.com) (Quit: Client closed)
[23:32:04] <switchnode> jinsun, nedbat: perfect, thank you!
[23:32:29] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[23:33:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[23:34:32] <dba> I am trying to create multithread inside one of the multithreads, is it possible? what is it called, thread tree or thread branching?
[23:34:58] *** Quits: Bartle_94 (~Bartle_94@134.6.121.242) (Quit: Client closed)
[23:35:29] *** Quits: SuperLag (~akulbe@user/superlag) (Read error: Connection reset by peer)
[23:35:35] *** Joins: Guest68 (~Guest68@185-61-84-33.amigonet.cz)
[23:36:11] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Remote host closed the connection)
[23:37:38] *** Joins: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52)
[23:39:07] *** Quits: Guest68 (~Guest68@185-61-84-33.amigonet.cz) (Client Quit)
[23:39:39] *** Joins: dme86 (~dan@user/dan86)
[23:40:06] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[23:40:22] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[23:40:33] *** Quits: beanzilla (beanzilla@user/beanzilla) (Quit: ZNC 1.8.2 - https://znc.in)
[23:40:33] *** Quits: notevil (~notevil@user/notevil) (Quit: ZNC 1.8.2 - https://znc.in)
[23:40:53] *** Joins: SuperLag (~akulbe@user/superlag)
[23:41:43] *** Joins: fanis30 (~anon@adsl-164.37.6.0.tellas.gr)
[23:41:55] *** Joins: beanzilla (~beanzilla@user/beanzilla)
[23:41:58] *** Joins: notevil (~notevil@user/notevil)
[23:42:32] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[23:43:09] *** Joins: jmd (~user@de.cellform.com)
[23:43:32] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[23:44:12] *** Joins: jmd (~user@de.cellform.com)
[23:44:35] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[23:44:51] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[23:44:51] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:8989:4d0:aaef:ac40) (Ping timeout: 256 seconds)
[23:45:46] *** Joins: jmd (~user@de.cellform.com)
[23:45:55] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[23:46:42] *** Joins: jmd (~user@de.cellform.com)
[23:46:55] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[23:46:56] *** Joins: dme86_ (~dan@user/dan86)
[23:47:12] *** Joins: jmd (~user@de.cellform.com)
[23:47:41] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[23:48:56] <bjs> dba: yes it's possible, there's no special name for it
[23:49:37] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 256 seconds)
[23:51:05] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[23:51:14] *** Joins: jmd_ (~jmdaemon@user/jmdaemon)
[23:51:29] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Read error: Connection reset by peer)
[23:51:47] *** Joins: ChrisWarrick (kwpolska@user/kwpolska)
[23:52:30] *** Joins: purple_cthulhu (~rax@2.186.4.24)
[23:52:35] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 240 seconds)
[23:52:50] *** Joins: jmd (~user@de.cellform.com)
[23:52:50] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[23:53:41] *** Joins: tachoknight (~tachoknig@2600:1700:3060:3ee0:1d79:7c54:c545:7cd5)
[23:53:45] *** Quits: nabaiste^ (~nabaiste@50.233.120.162) (Remote host closed the connection)
[23:54:24] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[23:55:17] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:58:31] *** Quits: cosimone (~user@93-47-228-207.ip115.fastwebnet.it) (Remote host closed the connection)
[23:59:30] *** Joins: Luke_LM (~Luke_LM_4@cpc72411-sotn15-2-0-cust758.15-1.cable.virginm.net)
[23:59:48] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
