[00:00:00] *** Quits: lisp123 (~lisp123@45.130.83.208) (Ping timeout: 276 seconds)
[00:11:02] *** Quits: attila_lendvai (~alendvai@C226779F.nat.pool.telekom.hu) (Ping timeout: 272 seconds)
[00:14:11] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[00:14:12] *** Quits: amb007 (~a_bakic@109.245.227.78) (Read error: Connection reset by peer)
[00:15:57] *** Quits: jimka (~user@2a01:e0a:26a:f400:c79:f12c:3584:a67d) (Ping timeout: 245 seconds)
[00:17:15] *** Joins: duber (~user@65.79.128.64)
[00:17:17] *** Joins: amb007 (~a_bakic@109.245.227.78)
[00:25:50] *** Joins: attila_lendvai (~alendvai@C226779F.nat.pool.telekom.hu)
[00:28:21] *** Joins: jimka (~user@2a01:e0a:26a:f400:c79:f12c:3584:a67d)
[00:33:20] <pjb> mfiano: https://github.com/quicklisp/quicklisp-client/issues/210
[00:33:31] <pjb> I doubt that's a goal, the issue has been closed without discussion.
[00:34:36] *** Quits: amb007 (~a_bakic@109.245.227.78) (Read error: Connection reset by peer)
[00:35:01] *** Quits: attila_lendvai (~alendvai@C226779F.nat.pool.telekom.hu) (Read error: Connection reset by peer)
[00:35:49] *** Joins: attila_lendvai (~alendvai@C226779F.nat.pool.telekom.hu)
[00:36:01] *** Joins: amb007 (~a_bakic@109.245.227.78)
[00:36:52] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[00:36:52] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[00:39:08] *** Quits: silasfox (~sbv@2001-4dd1-7b1c-0-5b98-b56f-27b-b4a7.ipv6dyn.netcologne.de) (Ping timeout: 258 seconds)
[00:39:09] *** Quits: attila_lendvai (~alendvai@C226779F.nat.pool.telekom.hu) (Read error: Connection reset by peer)
[00:39:25] *** Joins: silasfox (~sbv@xdsl-87-78-42-86.nc.de)
[00:39:50] *** Joins: attila_lendvai (~alendvai@C226779F.nat.pool.telekom.hu)
[00:46:07] *** Quits: amb007 (~a_bakic@109.245.227.78) (Read error: Connection reset by peer)
[00:46:40] *** Joins: amb007 (~a_bakic@cable-94-189-183-212.dynamic.sbb.rs)
[00:48:15] <jeosol>  pjb: looked at the link briefly. Does your code solve the issue and is it something that can be integrated in to the main ql branch. It will be nice to have hash codes for precision
[00:51:30] *** Quits: duber (~user@65.79.128.64) (Ping timeout: 240 seconds)
[00:54:59] *** Quits: santiagopim (~user@90.166.59.133) (Remote host closed the connection)
[00:59:44] <pjb> jeosol: it solves it only partially: it retrieves the information that is used by quicklisp, ie quicklisp-projects. But in this database, there is only the place where to find new release.  Quicklisp performs the git cloning but doesn't record the actual commit it gets (nor the branch or tag).
[01:00:15] <pjb> jeosol: with my code you can at least easily find if a system comes from github, gitlab or some other place, and you can make your own clone.
[01:00:29] <pjb> But you have some strange things.
[01:01:07] <jeosol> pjb: I see. thanks for explaining that ...
[01:01:48] <pjb> For example, currently cl-base64, which comes from kmr, contains a defpackage that uses the old API, but the code to intern the symbol uses format like in the newest commits, which actually use the new API. I can't find a consistent commit in kmr repository for the current cl-base64 distribution state.
[01:02:08] *** Quits: jimka (~user@2a01:e0a:26a:f400:c79:f12c:3584:a67d) (Ping timeout: 258 seconds)
[01:02:22] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi)
[01:09:04] *** Quits: cage (~cage@dynamic-adsl-78-15-36-212.clienti.tiscali.it) (Quit: rcirc on GNU Emacs 27.1)
[01:12:09] *** Joins: hafat (~hafat@95.70.167.173)
[01:14:11] <mfiano> huh. first time i saw an issue closed without even a comment
[01:15:28] *** Quits: cosimone (~user@93-34-133-3.ip49.fastwebnet.it) (Quit: ERC (IRC client for Emacs 26.1))
[01:15:53] *** Joins: cosimone (~user@2001:b07:ae5:db26:7b03:296d:ee99:86b3)
[01:22:42] *** Joins: dsk (~dsk@user/dsk)
[01:26:54] *** Quits: yitzi (~yitzi@173-27-106-188.client.mchsi.com) (Quit: Leaving)
[01:33:30] *** Quits: silasfox (~sbv@xdsl-87-78-42-86.nc.de) (Ping timeout: 240 seconds)
[01:35:15] *** Joins: silasfox (~sbv@2001-4dd1-7b1c-0-5b98-b56f-27b-b4a7.ipv6dyn.netcologne.de)
[01:38:04] *** Joins: selwyn (~selwyn@user/selwyn)
[01:50:15] *** Quits: attila_lendvai (~alendvai@C226779F.nat.pool.telekom.hu) (Ping timeout: 250 seconds)
[01:58:01] *** Joins: nij- (~jin@2001-48F8-9021-806-0-0-0-1AD1-dynamic.midco.net)
[02:03:53] *** Joins: rgherdt_ (~rgherdt@ip5f5af1d1.dynamic.kabel-deutschland.de)
[02:13:42] <etimmons> mfiano pjb : I don't know why that one was closed, but there's also this open issue that touches on some of the same things https://github.com/quicklisp/quicklisp-controller/issues/18
[02:14:12] *** Quits: pve (~pve@87-93-146-138.bb.dnainternet.fi) (Quit: leaving)
[02:15:35] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[02:33:38] *** Quits: lisp123_ (~lisp123@5.30.23.247) (Remote host closed the connection)
[02:34:31] *** Joins: lisp123 (~lisp123@5.30.23.247)
[02:39:15] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 276 seconds)
[02:44:04] *** Quits: cosimone (~user@2001:b07:ae5:db26:7b03:296d:ee99:86b3) (Remote host closed the connection)
[02:46:01] <pjb> well, there's at least that.
[02:58:24] *** Joins: jimka (~user@2a01:e0a:26a:f400:c79:f12c:3584:a67d)
[02:58:27] *** Quits: rgherdt_ (~rgherdt@ip5f5af1d1.dynamic.kabel-deutschland.de) (Ping timeout: 245 seconds)
[03:00:55] *** Joins: rgherdt_ (~rgherdt@ip5f5af1d1.dynamic.kabel-deutschland.de)
[03:07:10] *** Joins: lisp123 (~lisp123@5.30.23.247)
[03:09:58] *** Quits: rgherdt_ (~rgherdt@ip5f5af1d1.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[03:10:04] <Xach> I didn't realize I didn't already have pjb blocked on github.
[03:10:07] *** Quits: nirnam (~nirnam@1.47.28.235) (Ping timeout: 245 seconds)
[03:10:21] <Xach> I don't want anything to do with pjb for any reason.
[03:10:28] *** Joins: rgherdt_ (~rgherdt@ip5f5af1d1.dynamic.kabel-deutschland.de)
[03:15:04] *** Quits: rgherdt_ (~rgherdt@ip5f5af1d1.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[03:15:08] *** Quits: frgo (~frgo@p200300deef181d00f162dfaf18093baa.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:15:35] *** Joins: frgo (~frgo@p200300deef181d000d96fec9d6d743ee.dip0.t-ipconnect.de)
[03:19:01] *** Joins: notzmv (~zmv@user/notzmv)
[03:22:38] *** Quits: copec (~copec@home.unaen.org) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:24:44] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 258 seconds)
[03:32:05] *** Quits: jimka (~user@2a01:e0a:26a:f400:c79:f12c:3584:a67d) (Ping timeout: 250 seconds)
[03:32:46] *** Quits: jmhimara (~jmhimara@132.194.13.222) (Quit: Client closed)
[03:42:55] *** Quits: sander (~sander@user/sander) (Ping timeout: 250 seconds)
[03:45:40] *** Quits: random-nick (~random-ni@87.116.181.197) (Ping timeout: 256 seconds)
[03:49:39] *** Quits: amb007 (~a_bakic@cable-94-189-183-212.dynamic.sbb.rs) (Ping timeout: 258 seconds)
[03:59:16] *** Quits: dsk (~dsk@user/dsk) (Ping timeout: 256 seconds)
[04:10:28] *** Joins: duber (~user@65.79.128.64)
[04:12:52] *** Quits: duber (~user@65.79.128.64) (Client Quit)
[04:16:06] *** Quits: gaqwas (~john@dynamic-095-118-100-133.95.118.pool.telefonica.de) (Ping timeout: 276 seconds)
[04:26:37] <lotuseater> oh
[04:43:54] *** Joins: Fare (~fare@2601:184:4a7f:995c:e9b1:12c9:c9dc:aab2)
[04:44:51] *** Quits: hubvu (sid495858@tinside.irccloud.com) (Ping timeout: 258 seconds)
[04:47:08] *** Joins: akoana (~ah@user/akoana)
[04:47:12] *** Joins: hubvu (sid495858@id-495858.tinside.irccloud.com)
[04:58:31] <mfiano> Wow
[05:06:16] <lotuseater> what do you mean mfiano? :)
[05:11:47] *** Quits: taiju (~taiju@M014013236064.v4.enabler.ne.jp) (Ping timeout: 245 seconds)
[05:14:33] *** Joins: dsk (~dsk@user/dsk)
[05:23:16] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 272 seconds)
[05:28:27] *** Joins: jimka (~user@2a01:e0a:26a:f400:c79:f12c:3584:a67d)
[05:29:09] *** Quits: dlowe (~dlowe@user/dlowe) (Remote host closed the connection)
[05:34:18] *** Quits: lotuseater (~user@p200300e7871b3f008a69ffac690ca7c7.dip0.t-ipconnect.de) (Quit: ERC (IRC client for Emacs 27.2))
[05:53:13] *** Joins: lisp123 (~lisp123@5.30.23.247)
[05:56:08] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[05:58:07] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 250 seconds)
[05:59:09] *** Quits: moon-child (~moon-chil@cardinal.elronnd.net) (Quit: !)
[06:02:17] *** Quits: jimka (~user@2a01:e0a:26a:f400:c79:f12c:3584:a67d) (Ping timeout: 258 seconds)
[06:03:14] *** Joins: lisp-newbie (~lisp-newb@186.75.20.114)
[06:03:47] *** Joins: moon-child (~moon-chil@cardinal.elronnd.net)
[06:04:58] *** Quits: nij- (~jin@2001-48F8-9021-806-0-0-0-1AD1-dynamic.midco.net) (Ping timeout: 258 seconds)
[06:14:38] *** Joins: jimka (~user@2a01:e0a:26a:f400:c79:f12c:3584:a67d)
[06:30:10] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[06:36:04] <lisp-newbie> hello everyone
[06:36:28] <lisp-newbie> every time I search google, this shows up (not an ad...): https://common-lisp.net/~frideau/lil-ilc2012/lil-ilc2012.html
[06:36:32] <lisp-newbie> has anyone read this?
[06:36:36] <lisp-newbie> any thoughts
[06:46:31] *** Joins: nij- (~jin@2001-48F8-9021-806-0-0-0-F0C2-dynamic.midco.net)
[06:48:27] *** Quits: jimka (~user@2a01:e0a:26a:f400:c79:f12c:3584:a67d) (Ping timeout: 245 seconds)
[06:56:10] *** Quits: Melantha (~pyon@user/pyon) (Quit: WeeChat 3.2)
[06:56:35] *** Joins: prxq_ (~quassel@x4db3a812.dyn.telefonica.de)
[06:58:27] *** Joins: lisp123 (~lisp123@5.30.23.247)
[06:59:29] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[07:00:33] *** Quits: prxq (~quassel@x4db65406.dyn.telefonica.de) (Ping timeout: 258 seconds)
[07:03:03] *** Joins: lisp123 (~lisp123@5.30.23.247)
[07:07:46] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 272 seconds)
[07:18:02] <char> Could I get some help+review on my project? I know there are issues with it but I'm not sure where they are are what the best solutions are: https://github.com/charJe/cl-yxorp. Is it cool to ask for review here?
[07:18:10] *** Quits: hafat (~hafat@95.70.167.173) (Ping timeout: 256 seconds)
[07:18:31] <Bike> asking for a review here seems fine. is there anything in particular you are concerned about?
[07:24:55] *** Quits: Fare (~fare@2601:184:4a7f:995c:e9b1:12c9:c9dc:aab2) (Remote host closed the connection)
[07:33:27] <beach> Good morning everyone!
[07:35:08] <beach> char: Your code contains multiple violations of the rule on page 13 of the LUV slides.  And your functions are too long.
[07:36:07] *** Joins: lisp123 (~lisp123@5.30.23.247)
[07:37:10] *** Joins: pillton (~user@2405:b000:600:b0::36a)
[07:38:50] <char> The main thing I'm concerned about is I have an ignore-errors so if the client sends garbage data, it doesn't crash the whole server.
[07:39:31] <beach> char: Well, you can't really ask people to read your code selectively.  All those violations are distractions to the person reading your code.
[07:40:22] <char> beach: could you send a link to that?
[07:40:40] <beach> It has been posted here many times.
[07:41:09] <beach> https://www.iiia.csic.es/~puyol/TAPIA/transpas/Norvig-luv-slides.pdf
[07:41:15] <beach> [for instance]
[07:41:23] *** Joins: Fare (~fare@2601:184:4a7f:995c:f987:ffc2:9fb0:76c5)
[07:42:54] <beach> `(when destination', `(when body' `(and utf8 length', `(if ssl'
[07:43:01] <beach> Just to take a few.
[07:44:20] <beach> And you really need to split up that function into multiple smaller ones, each one with a significant name.
[07:47:06] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 240 seconds)
[07:50:31] *** Quits: PinealGlandOptic (~PinealGla@37.115.210.35) (Quit: leaving)
[07:54:22] <char> are you saying that those are violations because the conditions are not boolean-only?
[07:55:07] <beach> Yes.
[07:56:11] <beach> Those are variables that have a non-trivial value, or perhaps a default value that happens to be NIL.
[07:58:13] *** Quits: lisp-newbie (~lisp-newb@186.75.20.114) (Quit: This computer has gone to sleep)
[08:01:48] <char> beach: What would suggest instead of say "if sssl"?
[08:03:28] <beach> I haven't studied the code in detail (because of the distractions), but I would very likely do (if (null ssl) and then reverse the `then' and `else' branches.  That is usually the right thing to do anyway, because another rule of programming says that one should handle special cases first to get them out of the way.
[08:03:38] *** Quits: White_Flame (~quassel@user/white-flame/x-6930243) (Remote host closed the connection)
[08:04:50] *** Joins: White_Flame (~quassel@user/white-flame/x-6930243)
[08:07:45] *** Joins: Skyfire (~pyon@user/pyon)
[08:11:06] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi) (Ping timeout: 272 seconds)
[08:12:14] *** Quits: Fare (~fare@2601:184:4a7f:995c:f987:ffc2:9fb0:76c5) (Remote host closed the connection)
[08:13:28] <char> I would not want to do (unless (null destination) though
[08:14:15] <beach> I am sorry to hear that.
[08:14:19] <kakuhen> char: how about (when destination ...)
[08:14:40] <kakuhen> i haven't read the entire project yet, just the build.lisp, but i'm not really in a position to judge other people's code
[08:14:41] <moon-child> that's what he is doing currently, and what beach objects to
[08:14:44] <beach> kakuhen: I just said that that is a violation of the rules on page 13 of the LUV slides.
[08:15:17] <beach> char: You asked for remarks.  And I gave you some.
[08:15:44] <kakuhen> beach: I personally think (when destination ...) is more readable? I fail to see how this form violates p13 of the slides you sent.
[08:15:56] <beach> char: Even better would be to define a function (say) DESTINATION-IS-VALID-P and use it instead.
[08:17:02] <beach> kakuhen: I don't really care what you think personally.  And these are not my opinions.  They are the opinions of two people who have WAY more industrial experience than I do, in WAY bigger projects than mine.  But perhaps your experiences matches theirs?
[08:17:30] <kakuhen> beach: My opinion is irrelevant, sure. But this does not answer my real question.
[08:17:40] <kakuhen> How does the form in question violate p13 of the slides you sent?
[08:17:58] <beach> I just said that.
[08:18:20] <beach> Those are variables that have a non-trivial value, or perhaps a default value that happens to be NIL.  They are not Boolean variables.
[08:21:04] <char> beach: I appreciate you input; I just wanted some clarification so I fully understood what was being suggested. I have not heard of the LUV slides before: thanks for sharing.
[08:21:19] <beach> Pleasure.
[08:25:41] *** Joins: lisp-newbie (~lisp-newb@186.75.20.114)
[08:36:43] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 250 seconds)
[08:38:43] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[08:39:15] *** Joins: Fare (~fare@2601:184:4a7f:995c:c091:e662:8ef1:90d0)
[08:43:52] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi)
[08:44:41] *** Joins: jimka (~user@2a01:e0a:26a:f400:c79:f12c:3584:a67d)
[08:47:23] *** Joins: lisp123 (~lisp123@5.30.23.247)
[08:47:36] *** sm2n_ is now known as sm2n
[08:49:41] <kakuhen> char: you probably won't care, but I managed to modify the build.lisp to produce binaries on ccl and ecl
[08:50:21] <kakuhen> I'm not sure if the ecl binary works as intended since it prints "Computing Hangul syllabus names" and stays like that in the terminal, but the executable IS listening on port 8080
[08:51:17] <char> kakuhen: I actually care a lot. could you make a pull request?
[08:51:24] *** Joins: karlosz (~karlosz@router.cloyne.org)
[08:51:43] <kakuhen> I'm not posting the diff yet because there is one caveat: the executable produced by ecl isn't named "cl-yxorp," and I'm trying to see what I can do to 'fix' this
[08:52:06] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 258 seconds)
[08:54:08] <char> kakuhen: uiop:rename-file-overwriting-target ?
[09:01:29] <kakuhen> char: http://0x0.st/-4FE.patch
[09:01:44] <kakuhen> no need to give me credit; these are pretty well-documented functions and I did this just for fun
[09:06:43] <char> kakuhen: thanks. Have tru trued using :monolithic instead of :prologue ?
[09:08:22] <kakuhen> Decided against it since I attempted to mimick the behavior of sb-ext:save-lisp-and-die and ccl:save-application
[09:08:32] <kakuhen> mimic*
[09:09:07] <sm2n> note that ecl needs you to manually require the sockets library
[09:09:18] <kakuhen> If I recall correct, SBCL will produce a single binary with the lisp image (a compressed core image in your case), and CCL will do the same thing mod compression.
[09:09:19] <sm2n> bit me recently
[09:10:11] <kakuhen> regarding ccl:save-application, you can use :purify t to shave off a few kilobytes but in my experience the differences are pretty negligible
[09:18:33] *** Quits: jimka (~user@2a01:e0a:26a:f400:c79:f12c:3584:a67d) (Ping timeout: 258 seconds)
[09:22:18] *** Quits: lisp-newbie (~lisp-newb@186.75.20.114) (Quit: Leaving)
[09:24:41] *** Quits: Fare (~fare@2601:184:4a7f:995c:c091:e662:8ef1:90d0) (Ping timeout: 258 seconds)
[09:30:08] *** Quits: Bike (~Glossina@71.69.170.70) (Quit: sleep)
[09:31:00] <char> kakuhen: kakuhen: Also It is important that the command line arguments and Ctrl+C work properly
[09:31:02] *** Joins: lisp123 (~lisp123@5.30.23.247)
[09:31:51] <kakuhen> consider using UIOP for processing cmdline arguments; from a quick glance I notice you do different things on SBCL and non-SBCL impls
[09:32:05] <kakuhen> UIOP should definitely have a wrapper for this, and translate to whatever extension the user's implementation has, assuming it is supported.
[09:33:02] *** Joins: nirnam (~nirnam@1.47.28.235)
[09:33:23] <kakuhen> https://quickref.common-lisp.net/uiop.html#go-to-the-UIOP_002fIMAGE_2236_2236COMMAND_002dLINE_002dARGUMENTS-function
[09:38:58] *** Joins: amb007 (~a_bakic@109.245.227.78)
[09:38:58] *** Quits: amb007 (~a_bakic@109.245.227.78) (Read error: Connection reset by peer)
[09:39:10] *** Joins: amb007 (~a_bakic@cable-94-189-183-212.dynamic.sbb.rs)
[09:40:20] <char> kakuhen: I'll try that again
[09:41:41] <char> beach: do you agree with LUV p12: "If you know type information, declare it" ?
[09:45:22] *** Quits: karlosz (~karlosz@router.cloyne.org) (Quit: karlosz)
[09:53:36] <char> Bike: another thing I know is just wrong is how to rename a bt:thread
[10:02:16] *** Joins: retropikzel (~retropikz@83-245-241-195-nat-p.elisa-mobile.fi)
[10:06:01] *** Joins: rain3 (~rain3___@2a02:2f09:d30b:1300:514:bcc7:8202:1798)
[10:06:36] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[10:09:32] <beach> char: Yes, but let me moderate that a bit...
[10:09:54] <beach> First of all, I don't think it means literally putting a DECLARE expression in there.
[10:10:45] <beach> For example I often write methods specialized to a particular type like (defmethod m ((p person)) ...), and such method do not require a DECLARE expression.  The type of P is already "declared".
[10:11:08] <beach> Second, we need to distinguish between abstract types and concrete types.
[10:12:16] <beach> I agree that abstract types should be declared when needed, but it is a mistake to declare concrete type, because those may very well change later on.  This is a standard argument against static (manifest) typing, which is that it forces the programmer to make decisions about concrete types too early.
[10:13:55] <beach> So then, often an explicit declaration is not necessary.  If you have a function like (defun f (person organization)...) it is kind of superfluous to include (declare (type person person) (type organization organization))
[10:15:03] <beach> I think the meaning of the rule is to clearly communicate to the person reading the code what kind of objects are manipulated, and that fact can be communicated in several different ways.
[10:15:12] <moon-child> beach: in which respect, the surety of 'know' should perhaps be emphasized; if you have an idea about what type something has, but you think it is liable to change, you should not declare it as such
[10:16:20] <beach> Sure, but such doubt is common mostly for concrete types.
[10:17:33] <beach> And it is perfectly valid to use DEFTYPE to define an abstract type as a concrete one, and then use the name of the abstract type everywhere, because it is less likely to change.
[10:18:18] <beach> Like if I represent a person as a vector, I would not put type declarations like (defun f (person) (declare (type vector person)) ...)
[10:21:45] <mfiano> I completely agree with beach
[10:21:58] <beach> Thank you!
[10:22:07] <mfiano> One of Lisp's greatest strengths is quickly prototyping complex behavior
[10:22:25] <mfiano> Adding types too early will force you to write more code and slower than needs to be
[10:22:36] <mfiano> Add types (optimize and document) later
[10:23:48] <mfiano> I used to code Lisp like C in that I type annotated everything and used structs over classes and regular functions over generic ones, and overly complex architectural layout choices all because of this.
[10:23:51] <mfiano> It is not worth it
[10:25:37] *** Quits: char (~Srain@cpe-76-186-124-165.tx.res.rr.com) (Remote host closed the connection)
[10:26:18] *** Joins: char (~charles@cpe-76-186-124-165.tx.res.rr.com)
[10:33:26] *** Quits: froggey (~froggey@cpc96342-rdng26-2-0-cust314.15-3.cable.virginm.net) (Ping timeout: 252 seconds)
[10:33:50] <mfiano> Types are only needed for micro-optimizing beyond your macro-optimized data structure and algorithm choices (on compilers that honor type annotations), and as a supplement to the readability of your code where the code itself is not already clear (the class specializers in method-lambda-lists is one example of already clear). Even still I tend not to add contracts and the like until much later
[10:33:52] <mfiano> in development of complex systems, as it just gets in the way and makes the code less malleable in the initial design.
[10:34:52] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 272 seconds)
[10:35:30] *** Joins: froggey (~froggey@cpc96342-rdng26-2-0-cust314.15-3.cable.virginm.net)
[10:37:06] *** Quits: retropikzel (~retropikz@83-245-241-195-nat-p.elisa-mobile.fi) (Quit: Leaving)
[10:49:09] *** Joins: selwyn (~selwyn@user/selwyn)
[10:53:18] *** Joins: retropikzel (~retropikz@83-245-241-195-nat-p.elisa-mobile.fi)
[10:54:59] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[10:55:35] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[10:57:12] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[10:57:50] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 258 seconds)
[10:57:51] *** Lord_of_Life_ is now known as Lord_of_Life
[10:58:54] *** Joins: sander (~sander@user/sander)
[10:59:36] *** Quits: retropikzel (~retropikz@83-245-241-195-nat-p.elisa-mobile.fi) (Quit: Leaving)
[11:14:44] *** Joins: jimka (~user@2a01:e0a:26a:f400:c79:f12c:3584:a67d)
[11:18:45] *** Joins: retropikzel (~retropikz@83-245-241-195-nat-p.elisa-mobile.fi)
[11:20:11] *** Quits: amb007 (~a_bakic@cable-94-189-183-212.dynamic.sbb.rs) (Read error: Connection reset by peer)
[11:21:16] *** Joins: amb007 (~a_bakic@109.245.227.78)
[11:31:04] *** Joins: pve (~pve@176-93-85-226.bb.dnainternet.fi)
[11:35:31] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[11:37:19] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 258 seconds)
[11:39:38] *** Quits: amb007 (~a_bakic@109.245.227.78) (Read error: Connection reset by peer)
[11:39:39] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[11:39:57] *** Joins: amb007 (~a_bakic@93.87.81.77)
[11:40:46] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 258 seconds)
[11:41:23] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[11:42:19] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[11:44:13] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 258 seconds)
[11:46:08] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 258 seconds)
[11:47:08] *** Joins: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net)
[11:48:03] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[11:49:58] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 258 seconds)
[11:51:55] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[11:52:24] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 276 seconds)
[11:54:34] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 258 seconds)
[11:55:40] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[11:58:45] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[11:58:47] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 258 seconds)
[12:01:08] *** Joins: rgherdt_ (~rgherdt@ip5f5af449.dynamic.kabel-deutschland.de)
[12:07:37] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[12:15:37] *** Quits: retropikzel (~retropikz@83-245-241-195-nat-p.elisa-mobile.fi) (Quit: Leaving)
[12:34:03] *** Quits: amb007 (~a_bakic@93.87.81.77) (Ping timeout: 258 seconds)
[12:34:22] *** Quits: jimka (~user@2a01:e0a:26a:f400:c79:f12c:3584:a67d) (Ping timeout: 256 seconds)
[12:34:59] *** Joins: amb007 (~a_bakic@109.245.227.78)
[12:36:21] *** Quits: taiju (~taiju@M014013236064.v4.enabler.ne.jp) (Ping timeout: 258 seconds)
[12:36:22] *** Quits: amb007 (~a_bakic@109.245.227.78) (Read error: Connection reset by peer)
[12:36:47] *** Joins: amb007 (~a_bakic@93.87.81.77)
[12:38:08] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:40:43] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:43:15] *** Joins: jimka (~user@2a01:e0a:26a:f400:c79:f12c:3584:a67d)
[12:46:41] *** Joins: makomo (~makomo@user/makomo)
[12:47:54] *** Quits: jimka (~user@2a01:e0a:26a:f400:c79:f12c:3584:a67d) (Ping timeout: 240 seconds)
[12:51:20] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[12:57:36] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[13:10:35] *** Quits: amb007 (~a_bakic@93.87.81.77) (Ping timeout: 250 seconds)
[13:17:18] *** Joins: gaqwas (~john@dynamic-077-004-084-010.77.4.pool.telefonica.de)
[13:18:44] *** Joins: amb007 (~a_bakic@109.245.227.78)
[13:24:48] *** Quits: amb007 (~a_bakic@109.245.227.78) (Read error: Connection reset by peer)
[13:25:33] *** Joins: amb007 (~a_bakic@93.87.81.77)
[13:45:38] *** Joins: taiju (~taiju@240b:253:ec40:2400:3cf8:2df8:a9c6:9f5a)
[13:53:03] *** Joins: tfeb (~tfb@88.98.95.237)
[14:01:01] *** Quits: tfeb (~tfb@88.98.95.237) (Quit: died)
[14:07:33] *** Joins: lisp123 (~lisp123@5.30.23.247)
[14:08:09] *** Quits: amb007 (~a_bakic@93.87.81.77) (Read error: Connection reset by peer)
[14:08:20] *** Joins: amb007 (~a_bakic@93.87.81.77)
[14:12:12] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 245 seconds)
[14:12:37] *** Quits: amb007 (~a_bakic@93.87.81.77) (Ping timeout: 245 seconds)
[14:13:40] *** Joins: jimka (~user@2a01:e0a:26a:f400:c79:f12c:3584:a67d)
[14:13:45] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:14:14] *** Joins: amb007 (~a_bakic@109.245.227.78)
[14:14:17] *** Quits: xlei (znc@pool-68-129-84-118.nycmny.fios.verizon.net) (Ping timeout: 245 seconds)
[14:14:21] *** Quits: amb007 (~a_bakic@109.245.227.78) (Read error: Connection reset by peer)
[14:14:36] *** Joins: z3t07 (~z3t0@107-159-10-134.on.dsl.ebox.net)
[14:15:03] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi)
[14:15:57] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 245 seconds)
[14:16:59] *** Joins: copec (~copec@home.unaen.org)
[14:17:12] *** Quits: z3t0 (~z3t0@107-159-10-134.on.dsl.ebox.net) (Ping timeout: 245 seconds)
[14:17:13] *** z3t07 is now known as z3t0
[14:17:14] *** Quits: hugo (znc@verdigris.lysator.liu.se) (Quit: ZNC 1.7.5 - https://znc.in)
[14:17:17] *** Quits: ullbeking (sid5364@id-5364.charlton.irccloud.com) (Ping timeout: 252 seconds)
[14:17:17] *** Quits: markasoftware (~quassel@107.161.26.124) (Ping timeout: 252 seconds)
[14:17:19] *** Joins: derelict (~derelict@user/derelict)
[14:17:27] *** Parts: akoana (~ah@user/akoana) (Leaving)
[14:17:27] *** Joins: amb007 (~a_bakic@109.245.227.78)
[14:17:30] *** Quits: splittist (sid17737@tinside.irccloud.com) (Ping timeout: 256 seconds)
[14:17:30] *** Quits: ski (~ski@remote12.chalmers.se) (Ping timeout: 256 seconds)
[14:17:37] *** Quits: luis (~luis@lisp/luis) (Ping timeout: 245 seconds)
[14:17:44] *** Quits: drmeister (sid45147@id-45147.charlton.irccloud.com) (Ping timeout: 272 seconds)
[14:17:57] *** Joins: luis (~luis@lisp/luis)
[14:17:58] *** ChanServ sets mode: +o luis
[14:18:22] *** Quits: dbotton (sid492350@id-492350.tooting.irccloud.com) (Ping timeout: 272 seconds)
[14:18:23] *** Quits: etiago (~etiago@user/etiago) (Ping timeout: 252 seconds)
[14:18:38] *** Quits: tux0r (~tux0r@rosaelefanten.org) (Ping timeout: 256 seconds)
[14:19:07] *** Joins: ullbeking (sid5364@id-5364.charlton.irccloud.com)
[14:19:08] *** Joins: etiago (~etiago@user/etiago)
[14:19:12] *** Quits: ggoes (~gregf@fsf/staff/ggoes) (Ping timeout: 256 seconds)
[14:19:18] *** Joins: markasoftware (~quassel@107.161.26.124)
[14:19:29] *** Quits: energizer (~energizer@user/energizer) (Ping timeout: 252 seconds)
[14:19:39] *** Joins: hugo (znc@verdigris.lysator.liu.se)
[14:19:55] *** Quits: conjunctive (sid433686@id-433686.brockwell.irccloud.com) (Ping timeout: 250 seconds)
[14:20:03] <_death> strange that log4cl doesn't let you supply a pprint dispatch table to be used :/
[14:20:03] *** Joins: conjunctive (sid433686@id-433686.brockwell.irccloud.com)
[14:20:04] *** Joins: splittist (sid17737@id-17737.tinside.irccloud.com)
[14:20:35] *** Joins: drmeister (sid45147@id-45147.charlton.irccloud.com)
[14:20:46] *** Joins: dbotton (sid492350@id-492350.tooting.irccloud.com)
[14:20:47] *** Quits: palter (sid27521@id-27521.brockwell.irccloud.com) (Ping timeout: 250 seconds)
[14:22:02] *** Quits: vats (~vats@103.70.83.249) (Ping timeout: 256 seconds)
[14:22:02] *** Quits: Krystof (~user@81.174.155.115) (Ping timeout: 256 seconds)
[14:22:10] *** Quits: jmercouris (sid438340@id-438340.stonehaven.irccloud.com) (Ping timeout: 272 seconds)
[14:22:48] *** Quits: jsatk (sid304796@id-304796.brockwell.irccloud.com) (Ping timeout: 272 seconds)
[14:23:31] *** Joins: xlei (znc@pool-68-129-84-118.nycmny.fios.verizon.net)
[14:24:17] *** Quits: moon-child (~moon-chil@cardinal.elronnd.net) (Ping timeout: 245 seconds)
[14:25:29] *** Joins: tux0r (~tux0r@2a03:4000:34:5e:281e:e1ff:fe28:c3b5)
[14:25:57] *** Quits: hhdave (~hhdave@ip212.ip-193-70-71.eu) (Ping timeout: 245 seconds)
[14:29:37] *** Quits: minion (~minion@common-lisp.net) (Read error: Connection reset by peer)
[14:29:37] *** Quits: specbot (~specbot@common-lisp.net) (Remote host closed the connection)
[14:29:39] *** Quits: amb007 (~a_bakic@109.245.227.78) (Read error: Connection reset by peer)
[14:30:08] <phoe> does it have any logging hook that you can supply?
[14:30:57] *** Quits: jimka (~user@2a01:e0a:26a:f400:c79:f12c:3584:a67d) (Ping timeout: 245 seconds)
[14:30:59] *** Joins: minion (~minion@common-lisp.net)
[14:31:26] *** Joins: palter (sid27521@id-27521.brockwell.irccloud.com)
[14:31:35] *** Quits: luna-is-here (~quassel@ip-95-223-58-220.hsi16.unitymediagroup.de) (Ping timeout: 252 seconds)
[14:31:39] *** Joins: specbot (~specbot@common-lisp.net)
[14:31:52] *** Joins: Fare (~fare@2601:184:4a7f:995c:82ce:5b13:12a:a98a)
[14:31:54] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[14:32:52] *** Joins: ski (~ski@remote12.chalmers.se)
[14:33:02] *** Quits: jgkamat (~jay@user/jay) (Ping timeout: 245 seconds)
[14:33:13] *** Joins: jmercouris (sid438340@id-438340.stonehaven.irccloud.com)
[14:34:00] <_death> maybe by defining a new layout
[14:34:32] <scymtym> i was going to ask where you like to specify and apply the pprint dispatch table
[14:34:47] *** Joins: amb007 (~a_bakic@cable-94-189-183-212.dynamic.sbb.rs)
[14:34:58] *** Joins: jgkamat (~jay@user/jay)
[14:35:07] <scymtym> a superclass of PATTERN-LAYOUT and SIMPLE-LAYOUT seems like one candidate
[14:35:07] *** Quits: dilated_dinosaur (~dino@cpc1-bexl9-2-0-cust231.2-3.cable.virginm.net) (Ping timeout: 245 seconds)
[14:35:11] *** Joins: moon-child (~moon-chil@cardinal.elronnd.net)
[14:35:30] *** Joins: dilated_dinosaur (~dino@cpc1-bexl9-2-0-cust231.2-3.cable.virginm.net)
[14:35:50] *** Joins: hhdave (~hhdave@ip212.ip-193-70-71.eu)
[14:35:51] <_death> I take it you mean a subclass
[14:36:42] <scymtym> no, since you expressed surprise that the feature is not already supported, i was thinking about where builtin support would go
[14:37:04] *** Joins: random-nick (~random-ni@87.116.181.197)
[14:37:24] <scymtym> log4cl is a sharplispers project but that doesn't mean it has to remain unchanged
[14:37:27] *** Joins: jsatk (sid304796@id-304796.brockwell.irccloud.com)
[14:37:58] <_death> ah, I see.. in the config language you can have :pretty take an optional pprint-dispatch, I guess
[14:41:15] *** Joins: ggoes (~gregf@fsf/staff/ggoes)
[14:42:26] <scymtym> sounds reasonable. do you think passing that argument to the pattern and applying it in a layout-to-stream :around method would make sense? i know the original author was very concerned about performance, but mainly of inactive log statements, if i recall correctly. so executing additional methods in case of active log statements doesn't seem too bad
[14:45:07] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 245 seconds)
[14:45:36] *** Joins: makomo (~makomo@user/makomo)
[14:47:32] *** Quits: Fare (~fare@2601:184:4a7f:995c:82ce:5b13:12a:a98a) (Ping timeout: 256 seconds)
[14:48:54] <_death> I'm actually not sure where it binds print-pretty to T
[14:49:09] *** Joins: energizer (~energizer@user/energizer)
[14:51:00] <_death> it seems to do that in pattern layout's %< .. and then the config language uses that
[14:51:22] *** Quits: tux0r (~tux0r@2a03:4000:34:5e:281e:e1ff:fe28:c3b5) (Ping timeout: 245 seconds)
[14:51:46] *** Joins: tux0r (~tux0r@2a03:4000:34:5e:281e:e1ff:fe28:c3b5)
[14:53:08] <scymtym> yes, configurator changes %< to %<{pretty} if that option has been supplied in the configuration
[14:53:14] <_death> so my first instinct is to bind *print-pprint-dispatch* at the same time it binds *print-pretty*
[14:53:55] <_death> seems the %< pretty has an optional parameter to specify right-margin
[14:55:34] *** Quits: nij- (~jin@2001-48F8-9021-806-0-0-0-F0C2-dynamic.midco.net) (Quit: Using Circe, the loveliest of all IRC clients)
[14:56:09] <scymtym> that seems most in line with the current implementation
[14:57:12] *** Joins: jimka (~user@2a01:e0a:26a:f400:c79:f12c:3584:a67d)
[14:57:50] <scymtym> if think it would better if the configurator parametrized the pattern parser instead of modifying the pattern
[14:58:06] <scymtym> that would also make the proposed change easier
[14:58:14] *** Joins: retropikel (~retropike@2001:999:200:1f35:c999:987a:90bc:eea)
[14:58:41] *** Joins: Fare (~fare@2601:184:4a7f:995c:5643:e46a:9446:ac80)
[14:59:59] <_death> yeah.. I didn't expect the config implementation to rely heavily pattern-layout before taking a look
[15:00:11] <_death> *on
[15:03:01] <_death> it may be that in practice only pattern-layout and possibly subclasses are used, and simple-layout is just a token "it's possible"
[15:04:19] *** Quits: sander (~sander@user/sander) (Ping timeout: 258 seconds)
[15:04:28] *** Joins: dlowe (~dlowe@user/dlowe)
[15:04:37] *** Joins: lisp123 (~lisp123@5.30.23.247)
[15:05:49] <scymtym> possible. i guess another use case is replacing the entire appender and not needing a layout at all
[15:05:51] * scymtym vanishes for a bit
[15:06:00] *** Quits: scymtym (~user@ip-88-153-154-183.hsi04.unitymediagroup.de) (Remote host closed the connection)
[15:06:56] *** Joins: sander (~sander@user/sander)
[15:07:14] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Remote host closed the connection)
[15:07:23] *** Joins: selwyn (~selwyn@user/selwyn)
[15:13:54] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Quit: Leaving...)
[15:14:05] *** Quits: frgo (~frgo@p200300deef181d000d96fec9d6d743ee.dip0.t-ipconnect.de) (Remote host closed the connection)
[15:14:32] *** Joins: frgo (~frgo@p200300deef181d000d96fec9d6d743ee.dip0.t-ipconnect.de)
[15:21:27] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 250 seconds)
[15:28:26] *** Joins: rgherdt (~rgherdt@2a02:8109:86c0:d8d:8186:40cc:d89:9651)
[15:28:54] *** Quits: rgherdt_ (~rgherdt@ip5f5af449.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[15:30:59] *** Quits: jimka (~user@2a01:e0a:26a:f400:c79:f12c:3584:a67d) (Ping timeout: 250 seconds)
[15:31:49] *** Quits: pillton (~user@2405:b000:600:b0::36a) (Ping timeout: 260 seconds)
[15:39:32] *** Joins: hafat (~hafat@95.70.167.173)
[15:43:22] *** Joins: jimka (~user@2a01:e0a:26a:f400:c79:f12c:3584:a67d)
[15:46:29] *** Quits: SAL9000 (~SAL9000@shirakumo/sal9000) (Quit: WeeChat 2.9)
[15:49:42] *** Quits: jimka (~user@2a01:e0a:26a:f400:c79:f12c:3584:a67d) (Ping timeout: 245 seconds)
[15:52:02] *** Joins: lisp123 (~lisp123@5.30.23.247)
[15:54:24] *** Quits: hafat (~hafat@95.70.167.173) (Quit: Leaving)
[15:56:52] *** Joins: attila_lendvai (~alendvai@C226779F.nat.pool.telekom.hu)
[16:01:46] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 256 seconds)
[16:01:51] *** Quits: attila_lendvai (~alendvai@C226779F.nat.pool.telekom.hu) (Read error: Connection reset by peer)
[16:02:25] *** Joins: attila_lendvai (~alendvai@C226779F.nat.pool.telekom.hu)
[16:15:56] *** Joins: jimka (~user@2a01:e0a:26a:f400:c79:f12c:3584:a67d)
[16:23:04] *** Joins: vats (~vats@103.70.83.249)
[16:23:29] *** Joins: cage (~cage@dynamic-adsl-78-15-36-212.clienti.tiscali.it)
[16:24:20] *** Joins: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3)
[16:26:17] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[16:37:12] *** Quits: attila_lendvai (~alendvai@C226779F.nat.pool.telekom.hu) (Ping timeout: 245 seconds)
[16:37:12] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 245 seconds)
[16:39:28] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[16:46:25] *** Joins: SAL9000 (~SAL9000@shirakumo/sal9000)
[16:50:14] *** Joins: hafat (~hafat@95.70.167.173)
[16:54:22] *** Joins: scymtym (~user@2001:638:504:20e6:6ac3:87e0:e782:f3fc)
[17:01:05] *** Joins: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com)
[17:01:16] *** Quits: dsk (~dsk@user/dsk) (Ping timeout: 256 seconds)
[17:03:45] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi) (Ping timeout: 276 seconds)
[17:18:04] *** Joins: attila_lendvai (~alendvai@C226779F.nat.pool.telekom.hu)
[17:18:25] *** Quits: hafat (~hafat@95.70.167.173) (Quit: Leaving)
[17:20:47] *** Quits: silasfox (~sbv@2001-4dd1-7b1c-0-5b98-b56f-27b-b4a7.ipv6dyn.netcologne.de) (Ping timeout: 258 seconds)
[17:23:13] *** Quits: rgherdt (~rgherdt@2a02:8109:86c0:d8d:8186:40cc:d89:9651) (Ping timeout: 250 seconds)
[17:31:52] *** Quits: amb007 (~a_bakic@cable-94-189-183-212.dynamic.sbb.rs) (Ping timeout: 256 seconds)
[17:32:30] *** Joins: rgherdt (~rgherdt@2a02:8109:86c0:d8d:8186:40cc:d89:9651)
[17:34:54] *** Joins: amb007 (~a_bakic@109.245.227.78)
[17:37:48] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[17:40:56] *** Quits: gaqwas (~john@dynamic-077-004-084-010.77.4.pool.telefonica.de) (Ping timeout: 256 seconds)
[17:41:06] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 258 seconds)
[17:42:17] *** Quits: jimka (~user@2a01:e0a:26a:f400:c79:f12c:3584:a67d) (Ping timeout: 250 seconds)
[17:46:12] *** Quits: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com) (Quit: Exeunt)
[17:47:50] *** Joins: lotuseater (~user@p200300e7871b3f008a69ffac690ca7c7.dip0.t-ipconnect.de)
[17:56:45] *** Joins: pve_ (~pve@87-93-146-129.bb.dnainternet.fi)
[17:58:36] *** Joins: lisp123 (~lisp123@5.30.23.247)
[17:58:36] *** Quits: amb007 (~a_bakic@109.245.227.78) (Read error: Connection reset by peer)
[17:59:16] *** Joins: amb007 (~a_bakic@87.116.160.191)
[18:00:06] *** Quits: pve (~pve@176-93-85-226.bb.dnainternet.fi) (Ping timeout: 272 seconds)
[18:03:05] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 250 seconds)
[18:05:57] *** Joins: yitzi (~yitzi@173-27-106-188.client.mchsi.com)
[18:08:45] *** Joins: jimka (~user@2a01:e0a:26a:f400:c79:f12c:3584:a67d)
[18:18:46] *** Quits: mrcom (~mrcom@99-73-215-70.lightspeed.irvnca.sbcglobal.net) (Quit: Leaving)
[18:20:03] *** Joins: mrcom (~msouth@99-73-215-70.lightspeed.irvnca.sbcglobal.net)
[18:31:04] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-6-23.prtc.net)
[18:33:33] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[18:40:57] *** Quits: attila_lendvai (~alendvai@C226779F.nat.pool.telekom.hu) (Ping timeout: 245 seconds)
[18:42:12] *** Quits: jimka (~user@2a01:e0a:26a:f400:c79:f12c:3584:a67d) (Ping timeout: 245 seconds)
[18:46:56] *** Joins: lisp123 (~lisp123@5.30.23.247)
[18:55:44] *** Quits: hugo (znc@verdigris.lysator.liu.se) (Ping timeout: 256 seconds)
[18:56:34] <lisp123> lisp-newbie: thanks for sharing the link, I haven't read it, but it looks interesting so I will
[18:58:07] *** Joins: hugo (znc@verdigris.lysator.liu.se)
[19:05:34] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-6-23.prtc.net) (Ping timeout: 246 seconds)
[19:06:19] *** Joins: gaqwas (~john@dynamic-077-004-084-010.77.4.pool.telefonica.de)
[19:11:47] *** Quits: amb007 (~a_bakic@87.116.160.191) (Ping timeout: 245 seconds)
[19:14:26] *** Joins: jimka (~user@2a01:e0a:26a:f400:c79:f12c:3584:a67d)
[19:16:08] *** Joins: amb007 (~a_bakic@cable-94-189-183-212.dynamic.sbb.rs)
[19:24:03] *** Joins: santiagopim (~user@90.166.59.133)
[19:24:10] *** Joins: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca)
[19:29:56] *** Joins: lisp123_ (~lisp123@45.130.83.181)
[19:32:42] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 240 seconds)
[19:38:35] *** Joins: pegaso (~reis-r@131.72.121.14)
[19:47:23] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[19:48:12] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi)
[19:48:26] *** Quits: jimka (~user@2a01:e0a:26a:f400:c79:f12c:3584:a67d) (Ping timeout: 256 seconds)
[19:49:56] *** Joins: Josh_2 (~user@37.25.47.130)
[19:56:41] *** Quits: lisp123_ (~lisp123@45.130.83.181) (Remote host closed the connection)
[19:57:19] *** Joins: lisp123 (~lisp123@45.130.83.181)
[19:57:51] *** Joins: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com)
[20:00:39] *** Joins: jimka (~user@2a01:e0a:26a:f400:c79:f12c:3584:a67d)
[20:01:00] *** Joins: lisp123_ (~lisp123@45.130.83.181)
[20:01:42] *** Quits: lisp123 (~lisp123@45.130.83.181) (Ping timeout: 252 seconds)
[20:05:33] *** Quits: lisp123_ (~lisp123@45.130.83.181) (Ping timeout: 252 seconds)
[20:06:36] *** Quits: azimut (~azimut@gateway/tor-sasl/azimut) (Ping timeout: 244 seconds)
[20:09:51] *** Joins: lisp123 (~lisp123@45.130.83.181)
[20:12:54] *** Joins: lisp123_ (~lisp123@45.130.83.181)
[20:14:21] *** Quits: lisp123 (~lisp123@45.130.83.181) (Ping timeout: 252 seconds)
[20:15:51] *** Quits: lisp123_ (~lisp123@45.130.83.181) (Read error: Connection reset by peer)
[20:19:36] *** Quits: Fare (~fare@2601:184:4a7f:995c:5643:e46a:9446:ac80) (Remote host closed the connection)
[20:21:49] *** Joins: lisp123 (~lisp123@45.130.83.181)
[20:26:27] *** Quits: lisp123 (~lisp123@45.130.83.181) (Ping timeout: 252 seconds)
[20:28:20] *** Quits: tyson2 (~user@bras-base-toroon0628w-grc-46-142-112-141-177.dsl.bell.ca) (Quit: ERC (IRC client for Emacs 27.2))
[20:28:34] *** Quits: Lycurgus (~juan@cpe-45-46-140-49.buffalo.res.rr.com) (Quit: Exeunt)
[20:34:17] *** Quits: jimka (~user@2a01:e0a:26a:f400:c79:f12c:3584:a67d) (Ping timeout: 245 seconds)
[20:45:56] *** Joins: jimka (~user@2a01:e0a:26a:f400:c79:f12c:3584:a67d)
[20:51:46] *** Quits: jimka (~user@2a01:e0a:26a:f400:c79:f12c:3584:a67d) (Ping timeout: 240 seconds)
[20:53:12] *** Joins: lisp123 (~lisp123@45.130.83.181)
[21:03:51] *** Quits: lisp123 (~lisp123@45.130.83.181) (Ping timeout: 252 seconds)
[21:09:37] *** Joins: selwyn (~selwyn@user/selwyn)
[21:16:31] *** Joins: blihp (~blihp@c-68-43-233-92.hsd1.mi.comcast.net)
[21:18:12] *** Joins: jimka (~user@2a01:e0a:26a:f400:c79:f12c:3584:a67d)
[21:30:04] *** Joins: cosimone` (~user@93-47-230-199.ip115.fastwebnet.it)
[21:31:34] *** Quits: cosimone (~user@2001:b07:ae5:db26:a7aa:8027:6b4e:2fb3) (Ping timeout: 256 seconds)
[21:34:17] *** Quits: cosimone` (~user@93-47-230-199.ip115.fastwebnet.it) (Ping timeout: 245 seconds)
[21:34:34] *** Joins: lisp123 (~lisp123@45.130.83.181)
[21:38:49] *** Quits: lisp123 (~lisp123@45.130.83.181) (Client Quit)
[21:43:08] *** Quits: char (~charles@cpe-76-186-124-165.tx.res.rr.com) (Remote host closed the connection)
[21:53:10] *** Quits: jimka (~user@2a01:e0a:26a:f400:c79:f12c:3584:a67d) (Ping timeout: 272 seconds)
[21:57:21] *** Joins: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net)
[21:57:34] *** Quits: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net) (Remote host closed the connection)
[22:04:35] *** Quits: Patternmaster (~georg@li1192-118.members.linode.com) (Quit: leaving)
[22:04:53] *** Joins: Patternmaster (~georg@li1192-118.members.linode.com)
[22:05:46] *** Quits: Patternmaster (~georg@li1192-118.members.linode.com) (Client Quit)
[22:07:28] *** Joins: Patternmaster (~georg@li1192-118.members.linode.com)
[22:09:22] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[22:11:55] *** Joins: jimka (~user@2a01:e0a:26a:f400:c79:f12c:3584:a67d)
[22:16:09] *** Quits: jimka (~user@2a01:e0a:26a:f400:c79:f12c:3584:a67d) (Ping timeout: 250 seconds)
[22:23:52] *** Quits: amb007 (~a_bakic@cable-94-189-183-212.dynamic.sbb.rs) (Ping timeout: 245 seconds)
[22:24:50] *** Joins: amb007 (~a_bakic@109.245.227.78)
[22:27:12] *** Quits: amb007 (~a_bakic@109.245.227.78) (Read error: Connection reset by peer)
[22:27:32] *** Quits: pegaso (~reis-r@131.72.121.14) (Quit: Leaving)
[22:27:41] *** Joins: amb007 (~a_bakic@109.245.227.78)
[22:28:18] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[22:31:44] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[22:37:58] *** Quits: vats (~vats@103.70.83.249) (Remote host closed the connection)
[22:48:02] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 245 seconds)
[22:49:02] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[22:49:26] *** Joins: hendursaga (~weechat@user/hendursaga)
[22:56:12] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 258 seconds)
[23:01:33] *** Quits: Josh_2 (~user@37.25.47.130) (Remote host closed the connection)
[23:02:15] *** Joins: tyson2 (~user@toroon12-3096782677.sdsl.bell.ca)
[23:07:05] *** Joins: attila_lendvai (~alendvai@C226779F.nat.pool.telekom.hu)
[23:08:04] *** Joins: lisp123 (~lisp123@45.130.83.181)
[23:10:57] *** Quits: tux0r (~tux0r@2a03:4000:34:5e:281e:e1ff:fe28:c3b5) (Ping timeout: 245 seconds)
[23:11:48] *** Quits: attila_lendvai (~alendvai@C226779F.nat.pool.telekom.hu) (Read error: Connection reset by peer)
[23:12:34] *** Joins: attila_lendvai (~alendvai@C226779F.nat.pool.telekom.hu)
[23:14:18] *** Joins: tux0r (~tux0r@2a03:4000:34:5e:281e:e1ff:fe28:c3b5)
[23:17:12] *** Quits: jmercouris (sid438340@id-438340.stonehaven.irccloud.com) (Ping timeout: 245 seconds)
[23:18:09] *** Quits: d_run (sid83858@id-83858.stonehaven.irccloud.com) (Ping timeout: 276 seconds)
[23:18:18] *** Quits: iisi (sid19824@stonehaven.irccloud.com) (Ping timeout: 240 seconds)
[23:18:42] *** Quits: IUSR (sid348938@id-348938.stonehaven.irccloud.com) (Ping timeout: 240 seconds)
[23:19:00] *** Parts: tyson2 (~user@toroon12-3096782677.sdsl.bell.ca) (ERC (IRC client for Emacs 27.2))
[23:19:59] *** Quits: gendl (sid100083@id-100083.stonehaven.irccloud.com) (Read error: Connection reset by peer)
[23:21:02] *** Joins: jmercouris (sid438340@stonehaven.irccloud.com)
[23:21:03] *** Joins: gendl (sid100083@stonehaven.irccloud.com)
[23:21:28] *** Joins: d_run (sid83858@id-83858.stonehaven.irccloud.com)
[23:21:35] *** Joins: IUSR (sid348938@stonehaven.irccloud.com)
[23:21:43] *** Joins: iisi (sid19824@stonehaven.irccloud.com)
[23:23:57] *** Joins: tyson2 (~user@toroon12-3096782677.sdsl.bell.ca)
[23:23:58] *** Quits: amb007 (~a_bakic@109.245.227.78) (Read error: Connection reset by peer)
[23:24:53] *** Joins: amb007 (~a_bakic@87.116.175.62)
[23:26:07] *** Joins: Josh_2 (~user@37.25.47.130)
[23:30:31] *** Quits: cage (~cage@dynamic-adsl-78-15-36-212.clienti.tiscali.it) (Remote host closed the connection)
[23:31:05] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 258 seconds)
[23:44:53] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 258 seconds)
[23:46:29] *** Joins: aeth (~aeth@user/aeth)
[23:49:11] *** Joins: aeth_ (~aeth@user/aeth)
[23:49:17] *** Quits: aeth (~aeth@user/aeth) (Killed (NickServ (GHOST command used by aeth_)))
[23:49:22] *** aeth_ is now known as aeth
[23:50:04] *** Quits: jeosol (~jeosol@76-238-186-228.lightspeed.hstntx.sbcglobal.net) (Quit: Connection closed)
[23:58:46] *** Joins: jeosol (~jeosol@76-238-186-228.lightspeed.hstntx.sbcglobal.net)
