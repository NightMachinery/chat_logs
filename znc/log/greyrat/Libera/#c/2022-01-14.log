[00:00:02] *** Joins: Macuser (~Macuser@2600:1003:b465:566a:80cf:bd25:ca3b:1788)
[00:00:04] *** Joins: puke (~puke@user/puke)
[00:00:51] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[00:06:31] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:06:45] *** Quits: cart_man (~rynot@host-78-144-125-214.as13285.net) (Quit: Konversation terminated!)
[00:08:35] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[00:08:35] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[00:08:35] *** Joins: wroathe (~wroathe@user/wroathe)
[00:08:47] *** Quits: constxd_ (~brad@142.134.38.68) (Ping timeout: 256 seconds)
[00:13:09] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[00:16:16] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: Leaving)
[00:17:33] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[00:19:57] *** flooded is now known as _flood
[00:22:02] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[00:24:34] *** Joins: Betal (~Betal@user/betal)
[00:26:17] *** Joins: strajder (~strajder@user/strajder)
[00:26:51] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[00:28:11] *** Quits: lais (~lais@110.red-88-21-181.staticip.rima-tde.net) (Quit: Leaving)
[00:28:57] *** Joins: xqt (~xqt@user/xqt)
[00:29:37] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 240 seconds)
[00:29:39] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[00:30:29] *** Quits: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:33:43] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 256 seconds)
[00:35:35] *** Quits: Fairy (~Fairy@2001:464a:4992:0:e4d3:da3f:1ac5:d2c6) (Ping timeout: 252 seconds)
[00:38:07] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[00:39:54] *** Quits: teut (~teut@2401:4900:1c68:6b85:827:8b5f:2dc7:4cd1) (Quit: Client closed)
[00:40:31] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 256 seconds)
[00:41:07] *** lukedashjr is now known as luke-jr
[00:44:50] *** Joins: gproto23_ (~gproto23@user/gproto23)
[00:45:03] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 256 seconds)
[00:49:40] *** Joins: etolier_ (~somewhere@122-199-44-127.ip4.superloop.com)
[00:51:41] *** Quits: etolier (~somewhere@202-65-84-142.ip4.superloop.com) (Ping timeout: 256 seconds)
[00:53:00] *** Joins: Joss (~joss@user/Joss)
[00:53:00] *** Joins: JarbonFeh (~JarbonFeh@41.225.198.131)
[00:53:18] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[00:54:19] <zalt> in line 6, shouldn't it be: if (a == 0 || b < ULLONG_MAX / a)
[00:54:24] *** Quits: JarbonFeh (~JarbonFeh@41.225.198.131) (Client Quit)
[00:54:32] <zalt> https://bpa.st/GE4A
[00:56:13] *** Quits: kurahaupo_ (~kurahaupo@pa49-182-35-223.pa.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[00:58:48] <zalt> the current one works, but i believe it doesn't cover as many cases as it should be, leading to it executing the slower path
[00:59:45] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[01:02:12] *** Quits: Joss (~joss@user/Joss) (Quit: Leaving.)
[01:04:43] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[01:05:27] *** Quits: Iarfen (~quassel@181.43.58.247) (Ping timeout: 256 seconds)
[01:07:17] <caze> Yes.
[01:08:48] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) ()
[01:09:45] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[01:10:00] <Hexmind> if a == 0 then it should just return 0
[01:10:32] <caze> It does.
[01:10:40] *** Joins: xqt (~xqt@user/xqt)
[01:10:46] <Hexmind> so why the check and calculation?
[01:11:11] <caze> To see if a == 0.
[01:11:43] <Hexmind> but if a == 0 then it is pointless to do all the calculation. the answer will always be 0
[01:11:56] <oldlaptop> Hexmind: If a == 0 it won't evaluate the rest.
[01:12:24] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:12:46] <caze> zalt: Can you just do (a % mod) * b % mod
[01:12:56] <Hexmind> well it evaluates (a * b) % mod;
[01:13:33] <caze> Hexmind: Not necessarily.
[01:13:51] <oldlaptop> (1 || foo()) /* foo() is never evaluated */
[01:14:01] <caze> But even if it does, so what?
[01:14:33] <Hexmind> ok. I must be missing something then.
[01:15:10] <caze> You're missing that C is an abstraction, and the translated code doesn't have to do what the literal C code says.
[01:15:17] <oldlaptop> Are you arguing for a different early return, if a == 0?
[01:15:22] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 250 seconds)
[01:15:23] <zalt> caze: that is being done and it's not enough to prevent the overflow
[01:16:12] <zalt> the context is modular exponentiation (the code is from stackoverflow)
[01:16:17] <zalt> https://stackoverflow.com/a/17921804/10438632
[01:16:47] <caze> You mean like if mod is ULLONG_MAX?
[01:16:53] <Hexmind> oldlaptop, yes. It would make the code clearer even though I understand the intent.
[01:17:18] <caze> Hexmind: I think it would make the code less clear.
[01:17:42] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[01:18:00] <oldlaptop> It seems clear enough to me: the function returns (a * b) % mod, and only takes the convoluted path to that result if an overflow could result.
[01:18:12] *** Joins: beco (~beco@2804:351c:dd02:b000:fe8b:5fac:6d35:c76)
[01:18:55] <caze> Premature optimization
[01:19:26] <Hexmind> really. the code doesn't even check if mod is 0..
[01:19:36] <zalt> IT DOES
[01:19:40] <zalt> for correctness, not performance
[01:19:46] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[01:19:56] <zalt> oh
[01:19:58] <zalt> mod
[01:20:04] <zalt> i thought you meant a
[01:20:20] <oldlaptop> What should it do if mod == 0?
[01:20:34] <zalt> well, it why would a caller try to divide by zero
[01:20:45] <zalt> it's their problem
[01:21:32] <zalt> it's like checking for NULL, waste of lines of code
[01:21:41] *** Quits: alch (~alch@151.68.211.90) (Read error: Connection reset by peer)
[01:22:02] <oldlaptop> It's worse than that: this function can do nothing non-harmful with a check for div-by-zero
[01:22:16] <caze> exit
[01:22:23] <oldlaptop> What should it do? abort()? return a nonsense result?
[01:22:36] <oldlaptop> caze: I suppose exit()/abort()/whatever is arguably non-harmful.
[01:23:42] <caze> You'd have to alter the function API so that it sets a flag.
[01:23:43] <Hexmind> Well, it should notify instead of just crashing
[01:24:01] <caze> inb4
[01:24:30] <caze> Or just shift the burden of checking on the caller.
[01:25:16] <zalt> i'd check if there was a risk of an infinite loop
[01:25:25] <Hexmind> I agree the caller should be smart, but crashing is never a good thing.
[01:25:31] <zalt> i think this could happen with division algorithms
[01:25:35] <oldlaptop> caze: Also, all math in this program should be done by calls to functions like `MATH_ERROR_CODE div(int divisor, int dividend, int *quotient, int *remainder)`, for safety.
[01:25:58] <caze> I don't like how it first does b % 2, and then it does b >>= 1
[01:26:17] *** Joins: hanzo (uid532183@user/hanzo)
[01:26:30] <caze> b % 2 and b /= 2
[01:26:43] <zalt> yeah, good point for consistency
[01:26:44] <oldlaptop> Never mind that this is functionally equivalent to expecting the caller to behave correctly, whether by checking the parameters or by checking the magic error code.
[01:26:54] *** Joins: alch (~alch@151.34.135.131)
[01:27:33] *** Quits: Macuser (~Macuser@2600:1003:b465:566a:80cf:bd25:ca3b:1788) (Quit: Textual IRC Client: www.textualapp.com)
[01:27:56] <oldlaptop> caze: "but bitshifts are faster, aren't they?"
[01:28:25] <oldlaptop> It also does (2 * a), not (a << 1)! super slow!
[01:28:30] *** Quits: Akuli (~Akuli@82-203-163-9.bb.dnainternet.fi) (Quit: Akuli)
[01:28:49] <zalt> they are much faster, tried and tested on Borland Turbo C
[01:29:06] * zalt joke, i was like 2yo when that was released
[01:29:07] <Hexmind> b & 1 is probably faster
[01:29:51] <caze> Hexmind: They're the same.
[01:29:52] * oldlaptop idly wonders whether Hexmind has spotted the joke
[01:32:42] *** Joins: rgrinberg (~textual@2806:101e:7:4889:3c8d:4176:aa67:59be)
[01:32:50] * zalt introduces Hexmind to godbolt
[01:32:51] *** Quits: beco (~beco@2804:351c:dd02:b000:fe8b:5fac:6d35:c76) (Quit: Leaving)
[01:33:57] *** Quits: rgrinberg (~textual@2806:101e:7:4889:3c8d:4176:aa67:59be) (Remote host closed the connection)
[01:34:21] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[01:34:34] *** Joins: rgrinberg (~textual@2806:101e:7:4889:3c8d:4176:aa67:59be)
[01:34:52] *** Joins: beco (~DrBeco@2804:351c:dd02:b000:fe8b:5fac:6d35:c76)
[01:35:22] <sham1> Bitshifts for bit stuff, division for numbers. Please
[01:35:42] *** Joins: spidermonkey54 (uid527699@id-527699.uxbridge.irccloud.com)
[01:35:56] <zalt> but numbers and bits, and bits are numbers!
[01:36:20] <fizzie> Beauty is truth, truth beauty.
[01:36:33] <Hexmind> I guess I just prioritize clarity over cleverness.
[01:36:57] <caze> Hexmind: https://ideone.com/8cnGw6 https://ideone.com/OyDTlh
[01:37:14] <caze> Hexmind: A compiler can produce identical translations for those two programs.
[01:37:26] *** Quits: bebyx (~Thunderbi@user/bebyx) (Remote host closed the connection)
[01:37:50] <Hexmind> caze, Yes, but what about the people that maintain the code. It's much easier to maintain code that is clear about its intent.
[01:38:10] <sham1> C is a language of high abstraction level. You don't need to program the abstract machine in a particular way to do stuff so I'd say, go for clarity. Use bit operations when it makes sense to operate on bits, and standard arithmetic for, well, numbers
[01:38:29] <caze> Hexmind: What intent are you trying to convey?
[01:39:00] *** Joins: bebyx (~Thunderbi@user/bebyx)
[01:39:21] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[01:39:26] <Hexmind> caze, I'm not trying to convey anything. Just that to me cleaer intention is more important.
[01:39:56] <caze> Hexmind: But adding a bunch of edge cases makes things less clear.
[01:40:33] <Hexmind> caze, It's subjective I guess
[01:40:48] <caze> Hexmind: Well not really, there is more to read, and more to understand.
[01:41:04] <Hexmind> It makes the code longer yes, but also clearer, in my case anyway.
[01:41:12] <caze> Hexmind: What case is that?
[01:41:14] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Client closed)
[01:41:20] *** Quits: B0H (~B0H@c-fb0d235c.010-306-6c6b701.bbcust.telenor.se) (Quit: Leaving)
[01:41:53] <Hexmind> generally
[01:42:13] <caze> If you add an edge case as an optimization, e.g., a == 0, when the normal case would have produced the correct result, you've made the reader's job more difficult.
[01:42:56] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:43:10] <caze> Maybe only for marginal gains, if any.
[01:43:48] *** Joins: tforever (~Terabyte@78.174.124.153)
[01:43:52] <Hexmind> caze, I'm not here to argue. We have different point of views. That's fine by me.
[01:44:02] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[01:44:02] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[01:44:02] *** Joins: wroathe (~wroathe@user/wroathe)
[01:45:42] *** Quits: tforever (~Terabyte@78.174.124.153) (Client Quit)
[01:45:51] *** Quits: Narrat (~omnius@p200300df5f129c2006ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[01:46:41] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:47:46] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[01:49:05] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[01:52:19] <zalt> caze: https://ideone.com/cv4xCV
[01:52:26] *** Joins: xqt (~xqt@user/xqt)
[01:54:04] *** Quits: kts (~kts@103.73.237.175) (Quit: Konversation terminated!)
[01:56:46] <zwr> I like to think that whatever I do in C is 10 times faster than every other language minimum, so might as well write clear and obvious programs and leave non-algorithmic optimizations aside
[01:57:01] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 256 seconds)
[01:57:35] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[02:01:31] <zalt> what if you're competing with C++/go/rust, it becomes neccessary to write fast C code then
[02:02:52] *** Joins: wre^ (~wre@wsip-98-188-242-61.mc.at.cox.net)
[02:02:57] *** Quits: beco (~DrBeco@2804:351c:dd02:b000:fe8b:5fac:6d35:c76) (Quit: Leaving)
[02:03:00] <NRK[m]> i don't think Go is that fast
[02:05:21] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[02:05:29] <zalt> when you compare someone who knows what he's doing in go to someone who doesn't in C, with parallelism, and with good vs bad memory access patterns, you'd be surprised
[02:07:50] <tyzoid> Theoretically, couldn't the modulo function be written entirely without needing loops / recursion?
[02:08:07] <zalt> C is not some panacea, other languages' features can hide complexity that you cannot afford to have in C, in rare cases the complex way of doing things is faster
[02:08:40] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 250 seconds)
[02:08:43] <Hexmind> caze, btw the entire function that zalt posted can be replace with: return (a % mod) * (b % mod) % mod;
[02:08:44] <tyzoid> AFAIK, if you split the numbers into half-bit blocks, you could do all the multiplications / divisions natively in a fixed number of steps
[02:09:04] <Hexmind> no overflow and much clearer
[02:09:08] <zwr> when you put it like that I don't know zalt
[02:09:14] <Hexmind> and most likely faster
[02:09:37] *** Joins: Guest64 (~Guest64@net-93-151-198-142.cust.vodafonedsl.it)
[02:10:01] *** Quits: Guest64 (~Guest64@net-93-151-198-142.cust.vodafonedsl.it) (Client Quit)
[02:10:16] <zalt> Hexmind: the whole point of the function is avoiding the overflow, what you posted doesn't, so no
[02:10:24] *** Quits: mahmutov (~mahmutov@37.155.38.179) (Ping timeout: 250 seconds)
[02:10:26] <Hexmind> yes it does
[02:10:27] *** Quits: bdt (~bdt@155.51-174-24.customer.lyse.net) (Ping timeout: 256 seconds)
[02:11:25] *** Joins: bdt (~bdt@2a01:799:39c:7600:e65f:1ff:fe08:8a88)
[02:11:41] <Hexmind> zalt, test iut and see
[02:11:59] *** Quits: freep (~freepppp@62.1.174.38.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[02:12:00] <Hexmind> s/iut/it/
[02:12:25] <fizzie> Hexmind: Of course it doesn't, if `mod` is sufficiently large.
[02:12:46] <fizzie> Specifically, larger than about sqrt(ULLONG_MAX) or thereabouts.
[02:13:07] <Hexmind> fizzie, right, my bad.
[02:13:11] *** Joins: pulse (~pulse@user/pulse)
[02:14:01] <Hexmind> I feel bad now.
[02:15:26] <tyzoid> Hexmind: No, it can't. Counterexample, A = UINT64_MAX - 2, B = UINT64_MAX - 2, mod = UINT64_MAX - 1
[02:15:47] <tyzoid> lol looks like I've been beat
[02:16:14] <Hexmind> I just didn't think of a high mod value.
[02:16:32] <zalt> Hexmind: https://ideone.com/cv4xCV
[02:16:45] <tyzoid> Yeah. I agree if mod is half the size of a or b, that would work
[02:16:57] <tyzoid> and by half the size, I mean half the bit-width
[02:17:28] <zalt> Hexmind: trial and error isn't a good strategy to prove things in mathematics
[02:17:58] <Hexmind> zalt, I know. I just didn't think the whole thing through
[02:18:12] <Hexmind> I should have though
[02:18:37] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[02:18:57] *** hexeme is now known as ldlework
[02:21:34] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[02:21:46] <tyzoid> idk if anyone else is trying it, but it's a fun challenge
[02:22:00] <tyzoid> make a non-looping version of the modulo
[02:22:06] <zalt> just unroll the loop
[02:22:21] <zalt> this requires assuming a number of bits
[02:22:32] <tyzoid> I think you can get better performance than that
[02:22:48] <zalt> yes, i doubt unrolling it improves performance
[02:24:02] <dave0> you can test that
[02:24:33] <zalt> or just let the compiler do its thing
[02:25:37] <nomagno> Speaking about unrolling... I asked earlier, what is the exact purpose of Duff's device in protothreads?
[02:25:45] <nomagno> It is not clear to me at alk
[02:29:38] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[02:31:08] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[02:31:54] *** Joins: Fairy (~Fairy@2001:464a:4992:0:e4d3:da3f:1ac5:d2c6)
[02:32:49] *** Joins: liba (~liba@user/liba)
[02:33:41] *** Quits: pizdets (~pizdets@183.182.114.39) (Ping timeout: 256 seconds)
[02:34:10] *** Joins: xqt (~xqt@user/xqt)
[02:34:14] *** Joins: pizdets_ (~pizdets@183.182.110.146)
[02:34:34] *** Quits: cebor (~cebor@user/cebor) (Quit: bye!)
[02:35:04] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[02:35:15] *** Joins: cebor (~cebor@user/cebor)
[02:36:03] *** Joins: pulse (~pulse@user/pulse)
[02:38:57] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 256 seconds)
[02:41:47] *** Quits: adip (~adip@aedr186.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[02:41:53] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 2.8)
[02:43:01] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[02:43:20] *** Joins: evocatus (~evocatus@62.182.77.224)
[02:43:29] <sham1> Probably not mucu
[02:43:48] *** Joins: Thedarkb1 (~Thedarkb@cpc84095-pool16-2-0-cust190.15-1.cable.virginm.net)
[02:44:58] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[02:45:03] *** Joins: yangby (~secret@115.199.105.217)
[02:48:01] *** Quits: Thedarkb (~Thedarkb@cpc84095-pool16-2-0-cust190.15-1.cable.virginm.net) (Ping timeout: 256 seconds)
[02:49:12] *** Quits: moberg1 (~moberg@luke.millenniumfalcon.org) (Quit: quit)
[02:49:45] *** Joins: moberg (~moberg@luke.millenniumfalcon.org)
[02:50:08] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[02:52:13] *** Joins: System_Error (~SystemErr@user/systemerror)
[02:53:34] *** Joins: adip (~adip@aedr186.neoplus.adsl.tpnet.pl)
[02:57:06] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[02:57:26] *** Quits: chomwitt (~chomwitt@2a02:587:dc11:fb00:12c3:7bff:fe6d:d374) (Ping timeout: 245 seconds)
[02:58:17] <dave0> why is copyright criminal? i get it's civil cos you lose money, but why put people in jail too?
[02:58:41] <sham1> Because that's just how the law is
[02:59:10] <fizzie> You wouldn't download a car, would you?
[02:59:11] <dave0> that sucks
[02:59:32] <dave0> no but the record industry might sue you
[02:59:59] <sham1> Of course I wouldn't download a car. I might however just download a road bike or two
[03:01:33] <omegatron> consider the car BMW has demonstrated on CES .. soon you can watch videos on your car's side - and this means you have buy a radio/tv license if you want to do it in public!
[03:02:17] <sham1> Then you just protest and only show porn
[03:02:24] *** Quits: gproto23_ (~gproto23@user/gproto23) (Ping timeout: 250 seconds)
[03:02:29] *** Joins: ozoned (odoood@gateway/vpn/protonvpn/odoood)
[03:02:30] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:02:34] <omegatron> of course - I would do that
[03:02:35] *** Quits: ozoned (odoood@gateway/vpn/protonvpn/odoood) (Remote host closed the connection)
[03:03:03] <dave0> my old friend
[03:04:08] *** Quits: cosimone (~user@93-47-228-11.ip115.fastwebnet.it) (Ping timeout: 250 seconds)
[03:04:37] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Ping timeout: 240 seconds)
[03:10:53] *** Quits: AmR (~AmREiSa@41.36.185.103) (Quit: Konversation terminated!)
[03:12:46] <spidermonkey54> ```void foo(){ foo(); }``` is `foo` considered incomplete before the final `}` tag? if so how can it call itself if it doesn't exist yet. I guess the the compiler just emits a relative jump in this case?
[03:14:30] <fizzie> "Incomplete" isn't really a thing that applies to functions.
[03:14:31] <dave0> spidermonkey54: by the time it gets to the recursive call, it knows the arguments and their types, so it can emit a call
[03:15:00] <oldlaptop> Consider that the compiler can emit a call to a function even if it's *never defined at all*
[03:15:01] <fizzie> Only object types may be /incomplete/ ("lacking sufficient information to determine the size of objects of that type"). Functions don't have a size anyway.
[03:15:02] <dave0> it's like   int a, *b = &a;   by the time it gets to b, it knows the type of a
[03:15:54] *** Joins: xqt (~xqt@user/xqt)
[03:16:19] <fizzie> And the scope of the identifier `foo` "begins just after the completion of its declarator", meaning it's in scope for the function body.
[03:16:53] *** Joins: kit_ten (~u0_a391@2600:380:a452:c043:6563:21d7:2ac:40fb)
[03:16:57] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:17:12] <spidermonkey54> thanks for the info
[03:20:43] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 256 seconds)
[03:20:44] *** Quits: yangby (~secret@115.199.105.217) (Quit: Go out for a walk and buy a drink.)
[03:21:02] *** Quits: kit-ten (~u0_a391@2603-6010-a141-6fa3-950d-0150-5311-7e6b.res6.spectrum.com) (Ping timeout: 250 seconds)
[03:21:41] <nomagno> dave0: Copyright is part of the penal code, not civil law
[03:22:02] <nomagno> It is more closely related to theft than to breaking a contract
[03:22:08] <nomagno> Which is stupid, but whatever
[03:25:37] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 240 seconds)
[03:27:08] <nomagno> Despite several attempts to rephrase better, I still have to quote Thomas Jefferson on this topic: https://termbin.com/mjvs
[03:27:16] *** hasuTMK is now known as hasu
[03:27:37] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:27:59] *** Quits: evocatus (~evocatus@62.182.77.224) (Quit: Leaving)
[03:28:12] *** Joins: ferdna (~ferdna@user/ferdna)
[03:34:29] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Ping timeout: 256 seconds)
[03:36:47] *** Joins: AmR (~AmREiSa@41.36.185.103)
[03:39:41] *** Joins: donutfarian (~kris@111.60.138.34.bc.googleusercontent.com)
[03:40:51] *** Parts: donutfarian (~kris@111.60.138.34.bc.googleusercontent.com) ()
[03:41:04] *** Joins: pucara (~i@host230.186-125-94.telecom.net.ar)
[03:43:39] *** Quits: rgrinberg (~textual@2806:101e:7:4889:3c8d:4176:aa67:59be) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:46:21] *** Quits: hasu (~hasu@58x13x224x139.ap58.ftth.ucom.ne.jp) (Quit: ZNC 1.8.2 - https://znc.in)
[03:47:52] *** Quits: magla (~gelignite@55d4b5f5.access.ecotel.net) (Quit: Stay safe!)
[03:48:54] *** Joins: rockzx (~rockzx@45.232.34.248)
[03:50:14] <rockzx> exit
[03:50:18] *** Quits: rockzx (~rockzx@45.232.34.248) (Client Quit)
[03:50:58] *** Joins: rockzx (~rockzx@45.232.34.248)
[03:51:29] *** Quits: pucara (~i@host230.186-125-94.telecom.net.ar) (Ping timeout: 256 seconds)
[03:52:57] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[03:55:07] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[03:56:01] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Ping timeout: 256 seconds)
[03:56:59] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[03:57:38] *** Joins: xqt (~xqt@user/xqt)
[03:57:39] *** Joins: pucara (~i@host230.186-125-94.telecom.net.ar)
[03:58:24] *** Joins: hasu (~hasu@58x13x224x139.ap58.ftth.ucom.ne.jp)
[03:58:34] *** Joins: Wulf (~Wulf@user/wulf)
[03:58:51] *** Quits: inomoz (~inomoz@176.59.106.192) (Ping timeout: 256 seconds)
[03:59:40] *** Parts: rockzx (~rockzx@45.232.34.248) ()
[04:00:12] *** Joins: rockzx (~rockzx@45.232.34.248)
[04:00:52] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[04:01:18] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[04:01:57] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 240 seconds)
[04:02:28] *** Joins: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[04:06:02] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[04:07:57] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 240 seconds)
[04:08:00] *** Quits: omegatron (~some@p5484973e.dip0.t-ipconnect.de) (Quit: What happened? You quit!)
[04:09:23] *** Quits: rockzx (~rockzx@45.232.34.248) (Quit: leaving)
[04:11:46] *** Joins: Macuser (~Macuser@2600:1003:b45f:c2f0:1586:c9f5:2f0f:70dd)
[04:12:03] *** Joins: rockzx (~rockzx@45.232.34.248)
[04:12:26] *** Quits: rockzx (~rockzx@45.232.34.248) (Client Quit)
[04:14:33] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 256 seconds)
[04:17:01] *** Quits: System_Error (~SystemErr@user/systemerror) (Remote host closed the connection)
[04:17:38] *** Joins: System_Error (~SystemErr@user/systemerror)
[04:19:11] *** Quits: sathylias (~sysadmin@modemcable136.173-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[04:19:25] *** Joins: kaph_ (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[04:20:21] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:20:21] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:20:21] *** Joins: wroathe (~wroathe@user/wroathe)
[04:21:37] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Ping timeout: 240 seconds)
[04:26:39] <Techcable> nomagno: Jefferson said that?
[04:26:41] <Techcable> What a chad
[04:29:23] *** Quits: hasu (~hasu@58x13x224x139.ap58.ftth.ucom.ne.jp) (Quit: ZNC 1.8.2 - https://znc.in)
[04:34:16] *** Quits: Fairy (~Fairy@2001:464a:4992:0:e4d3:da3f:1ac5:d2c6) (Ping timeout: 250 seconds)
[04:34:55] *** Joins: hasu (~hasu@58x13x224x139.ap58.ftth.ucom.ne.jp)
[04:34:57] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Remote host closed the connection)
[04:36:38] *** Quits: pucara (~i@host230.186-125-94.telecom.net.ar) (Quit: Lost terminal)
[04:36:43] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[04:37:14] *** Quits: AmR (~AmREiSa@41.36.185.103) (Quit: Konversation terminated!)
[04:39:23] *** Joins: xqt (~xqt@user/xqt)
[04:40:18] *** Joins: rockzx (~rockzx@45.232.34.248)
[04:42:45] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[04:44:01] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 256 seconds)
[04:46:06] *** Joins: osp (~osp@84.19.72.107)
[04:47:25] *** Quits: LangerJan (~jan@user/langerjan) (Ping timeout: 256 seconds)
[04:48:52] *** Joins: LangerJan (~jan@user/langerjan)
[04:51:57] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 256 seconds)
[04:52:37] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 240 seconds)
[04:52:48] *** Quits: rockzx (~rockzx@45.232.34.248) (Quit: WeeChat 3.3)
[04:56:11] *** Joins: malina (~malina@user/malina)
[04:56:13] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[05:00:33] *** Joins: xqt (~xqt@user/xqt)
[05:01:01] *** Quits: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca) (Ping timeout: 256 seconds)
[05:01:23] *** Joins: pnbeast (~pnbeast@2601:140:4280:6ce0::1)
[05:04:35] *** Quits: manjaroi3 (~manjaro-i@125.131.131.26) (Ping timeout: 256 seconds)
[05:05:01] *** Quits: pgib (~textual@173.38.117.86) (Ping timeout: 240 seconds)
[05:05:02] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 250 seconds)
[05:05:02] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 250 seconds)
[05:06:17] *** Quits: ColdKeyboard (~ColdKeybo@user/coldkeyboard) (Ping timeout: 256 seconds)
[05:15:52] *** Joins: frost (~frost@user/frost)
[05:16:24] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[05:16:53] *** Quits: Burgundy (~yomon@82.76.72.88) (Ping timeout: 256 seconds)
[05:19:05] *** Joins: rgrinberg (~textual@2806:101e:7:4889:3c8d:4176:aa67:59be)
[05:19:34] *** Quits: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Quit: This computer has gone to sleep)
[05:20:47] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[05:21:41] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[05:21:54] *** Quits: johnjaye (~pi@154.6.152.74) (Quit: WeeChat 3.3)
[05:23:11] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[05:23:54] *** Joins: kit-ten (~u0_a391@2603-6010-a141-6fa3-950d-0150-5311-7e6b.res6.spectrum.com)
[05:24:25] *** Quits: alch (~alch@151.34.135.131) (Ping timeout: 256 seconds)
[05:24:50] *** Quits: spidermonkey54 (uid527699@id-527699.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[05:26:13] *** Joins: alch (~alch@151.68.203.224)
[05:27:08] *** Quits: kit_ten (~u0_a391@2600:380:a452:c043:6563:21d7:2ac:40fb) (Ping timeout: 250 seconds)
[05:27:34] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 250 seconds)
[05:27:45] *** Joins: ericonr (~ericonr@voidlinux/docs/ericonr)
[05:30:25] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[05:30:40] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[05:35:15] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[05:36:12] *** Quits: kaichiuc1u (~kaichiuch@144.202.8.127) (Remote host closed the connection)
[05:36:24] *** Quits: rgrinberg (~textual@2806:101e:7:4889:3c8d:4176:aa67:59be) (Remote host closed the connection)
[05:36:55] *** Joins: rgrinberg (~textual@2806:101e:7:4889:3c8d:4176:aa67:59be)
[05:38:13] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:41:58] *** Joins: xqt (~xqt@user/xqt)
[05:43:19] *** Joins: jgart (16dd2205e4@irc.cheogram.com)
[05:45:53] *** Joins: constxd_ (~brad@142.134.38.68)
[05:46:17] *** Quits: Macuser (~Macuser@2600:1003:b45f:c2f0:1586:c9f5:2f0f:70dd) (Ping timeout: 240 seconds)
[05:46:55] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 256 seconds)
[05:47:32] *** Joins: Macuser (~Macuser@2600:1003:b447:33b1:78b2:669b:15be:ba42)
[05:49:38] *** Joins: kaichiuchu (~kaichiuch@user/kaichiuchu)
[05:56:09] *** Quits: highrate (~presonic@user/highrate) (Ping timeout: 256 seconds)
[05:56:19] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[05:57:38] *** Quits: soapsudsxx (~soapsudsx@141.193.188.140) (Remote host closed the connection)
[05:57:43] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[05:57:48] *** Joins: highrate (~presonic@111-22-237-24.gci.net)
[05:57:48] *** Quits: highrate (~presonic@111-22-237-24.gci.net) (Changing host)
[05:57:48] *** Joins: highrate (~presonic@user/highrate)
[05:58:33] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[05:59:14] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[05:59:31] *** Quits: fstd_ (~fstd@xdsl-87-78-21-185.nc.de) (Read error: Connection reset by peer)
[05:59:38] *** Joins: fstd (~fstd@xdsl-87-78-21-185.nc.de)
[05:59:40] *** Quits: Retr0id (~Retr0id@user/retr0id) (Read error: Connection reset by peer)
[05:59:48] *** Joins: Retr0id7 (~Retr0id@user/retr0id)
[05:59:49] *** Joins: soapsudsxx (~soapsudsx@141.193.188.140)
[06:00:12] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[06:03:39] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a98c:b4fd:85b3:2536)
[06:06:24] *** Quits: rgrinberg (~textual@2806:101e:7:4889:3c8d:4176:aa67:59be) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:06:45] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[06:06:45] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[06:07:28] *** Joins: pulse_ (~pulse@user/pulse)
[06:09:02] *** Joins: rgrinberg (~textual@2806:101e:7:4889:3c8d:4176:aa67:59be)
[06:10:19] *** Quits: LangerJan (~jan@user/langerjan) (Ping timeout: 256 seconds)
[06:10:19] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[06:10:28] *** Joins: LangerJan (~jan@user/langerjan)
[06:10:38] *** Joins: oxfuxxx (~oxfuxxx@pop.92-184-110-109.mobile.abo.orange.fr)
[06:11:05] *** Quits: oxfuxxx (~oxfuxxx@pop.92-184-110-109.mobile.abo.orange.fr) (Client Quit)
[06:13:07] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[06:17:17] *** Quits: Macuser (~Macuser@2600:1003:b447:33b1:78b2:669b:15be:ba42) (Ping timeout: 240 seconds)
[06:19:15] *** Joins: smoke (~smoke@user/smoke)
[06:19:34] *** Quits: nuxil (~nuxil@141.195.51.213) (Read error: Connection reset by peer)
[06:19:38] *** Joins: frost (~frost@user/frost)
[06:22:30] *** Joins: apestoso (~apestoso@host-pool2-13-dynamic.airteknet.com)
[06:22:33] *** Joins: Macuser (~Macuser@2600:1003:b451:5581:916b:66a1:5b75:14dc)
[06:22:39] *** Parts: apestoso (~apestoso@host-pool2-13-dynamic.airteknet.com) ()
[06:23:43] *** Joins: xqt (~xqt@user/xqt)
[06:24:20] *** Quits: steve__ (~steve@ool-182c2b80.dyn.optonline.net) (Ping timeout: 250 seconds)
[06:24:34] *** Joins: nostar (~nostar@68.51.221.108)
[06:27:17] *** Quits: Macuser (~Macuser@2600:1003:b451:5581:916b:66a1:5b75:14dc) (Ping timeout: 240 seconds)
[06:27:51] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[06:27:57] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 240 seconds)
[06:28:07] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[06:29:02] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (Remote host closed the connection)
[06:29:36] *** Quits: reductum (~reductum@2603-8000-b400-8764-dea6-32ff-fe16-a622.res6.spectrum.com) (Quit: WeeChat 2.8)
[06:32:26] *** Joins: Fairy (~Fairy@2001:464a:4992:0:d4db:bb59:ac7:e011)
[06:33:37] *** Quits: smoke (~smoke@user/smoke) (Quit: Leaving)
[06:33:48] *** Joins: nuxil (~nuxil@141.195.51.213)
[06:34:41] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 256 seconds)
[06:34:57] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 240 seconds)
[06:35:44] *** Quits: System_Error (~SystemErr@user/systemerror) (Remote host closed the connection)
[06:36:07] *** Joins: reductum (~reductum@2603-8000-b400-8764-dea6-32ff-fe16-a622.res6.spectrum.com)
[06:36:30] *** Joins: System_Error (~SystemErr@user/systemerror)
[06:38:14] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[06:47:48] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293)
[06:52:13] *** Joins: Atque (~Atque@user/atque)
[06:53:58] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[06:54:24] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:56:23] *** Joins: ColdKeyboard (~ColdKeybo@user/coldkeyboard)
[06:58:30] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[06:58:35] *** Joins: Satin (uid193953@user/Seten)
[07:00:45] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[07:05:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[07:05:27] *** Joins: xqt (~xqt@user/xqt)
[07:05:45] *** Quits: puke (~puke@user/puke) ()
[07:06:15] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Ping timeout: 256 seconds)
[07:09:57] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 240 seconds)
[07:10:37] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[07:10:39] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[07:11:37] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[07:13:13] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:13:13] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:13:13] *** Joins: wroathe (~wroathe@user/wroathe)
[07:22:14] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:26:15] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[07:28:45] *** Joins: pucara (~i@host230.186-125-94.telecom.net.ar)
[07:31:46] *** Quits: kurfen (~kurfen@176.119.195.10) (Ping timeout: 260 seconds)
[07:31:55] *** Joins: kurfen_ (~kurfen@176.119.195.10)
[07:32:33] *** Quits: moog (~moog@107.126.53.167) (Remote host closed the connection)
[07:34:06] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[07:35:44] *** Quits: rsjw (~quassel@user/rsjw) (Quit: rsjw)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:59] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:37:59] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:37:59] *** Joins: wroathe (~wroathe@user/wroathe)
[07:38:09] *** Quits: constxd_ (~brad@142.134.38.68) (Ping timeout: 256 seconds)
[07:39:42] *** Joins: frost (~frost@user/frost)
[07:44:17] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 240 seconds)
[07:44:49] *** Joins: Guest21 (~Guest21@181.199.144.246)
[07:45:22] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[07:46:43] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:46:43] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:46:43] *** Joins: wroathe (~wroathe@user/wroathe)
[07:47:12] *** Joins: xqt (~xqt@user/xqt)
[07:48:24] *** Quits: frost (~frost@user/frost) (Ping timeout: 250 seconds)
[07:48:37] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[07:48:42] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[07:49:20] *** Quits: fluter (~fluter@user/fluter) (Read error: Connection reset by peer)
[07:51:27] *** Joins: fluter (~fluter@user/fluter)
[07:51:45] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[07:52:09] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 256 seconds)
[07:54:05] *** Joins: puke (~puke@user/puke)
[07:54:05] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[07:57:35] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:58:57] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 240 seconds)
[07:59:55] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[08:00:59] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Client Quit)
[08:01:23] *** Quits: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca) (Ping timeout: 256 seconds)
[08:02:41] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:06:29] *** Quits: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu) (Ping timeout: 256 seconds)
[08:08:15] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[08:08:22] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Client Quit)
[08:09:27] *** Quits: the_lanetly_052 (~the_lanet@194.135.168.241) (Remote host closed the connection)
[08:09:59] *** Joins: garp (~chaos@user/pragmatic-chaos)
[08:12:11] *** Quits: pragma- (~chaos@user/pragmatic-chaos) (Read error: Connection reset by peer)
[08:12:39] *** garp is now known as pragma-
[08:15:07] *** Joins: vysn (~vysn@user/vysn)
[08:15:56] *** Joins: missogra (~missogra@dynamic-077-000-036-065.77.0.pool.telefonica.de)
[08:19:57] *** Quits: rgrinberg (~textual@2806:101e:7:4889:3c8d:4176:aa67:59be) (Read error: Connection reset by peer)
[08:21:08] *** Joins: rgrinberg (~textual@2806:101e:7:4889:3c8d:4176:aa67:59be)
[08:21:20] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 250 seconds)
[08:21:40] *** Joins: slidercrank (~slidercra@user/slidercrank)
[08:22:07] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a98c:b4fd:85b3:2536) (Quit: Quit)
[08:26:32] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:b997:c1f9:27c:1247) (Ping timeout: 250 seconds)
[08:28:56] *** Joins: xqt (~xqt@user/xqt)
[08:32:14] *** Joins: duuuuuuuuuuuuuuu (~dude@2600:1700:7780:fc80:9d57:3271:2b50:258)
[08:33:31] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 256 seconds)
[08:36:59] *** Joins: duds-_ (~duds-@gateway/tor-sasl/duds)
[08:36:59] *** Joins: freep (~freepppp@62.1.174.38.dsl.dyn.forthnet.gr)
[08:37:27] *** Quits: duds- (~duds-@gateway/tor-sasl/duds) (Ping timeout: 276 seconds)
[08:38:16] *** Joins: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by)
[08:39:45] <duuuuuuuuuuuuuuu> anyone doing anything cool atm
[08:39:49] *** duds-_ is now known as duds-
[08:41:12] *** Quits: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com) (Quit: leaving)
[08:42:50] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[08:42:50] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[08:43:12] *** Joins: bindu (~bindu@user/bindu)
[08:44:37] *** Joins: teepee (~teepee@openscad/teepee)
[08:54:48] *** Joins: domini_ (~domini@22.112.235.77.dyn.idknet.com)
[08:55:19] *** Quits: domini_ (~domini@22.112.235.77.dyn.idknet.com) (Remote host closed the connection)
[08:55:37] *** Joins: Burgundy (~yomon@82.76.72.88)
[08:55:37] *** Quits: duuuuuuuuuuuuuuu (~dude@2600:1700:7780:fc80:9d57:3271:2b50:258) (Ping timeout: 256 seconds)
[08:55:46] *** Joins: jusski (~user@78-63-85-123.static.zebra.lt)
[08:59:15] *** Quits: osp (~osp@84.19.72.107) (Quit: Leaving)
[09:00:13] *** Quits: r6ix (~r6ix@2607:fea8:5e0:82a0:42:1918:7b45:f3f3) (Read error: Connection reset by peer)
[09:01:23] *** Joins: hiovoltage (~hiovoltag@78.186.68.182)
[09:04:42] *** Quits: malloy (~jimery@113.116.52.211) (Ping timeout: 250 seconds)
[09:06:49] *** Joins: malloy (~jimery@113.116.52.211)
[09:10:40] *** Joins: xqt (~xqt@user/xqt)
[09:10:40] *** Quits: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof) (Quit: WeeChat 3.4)
[09:11:38] *** Joins: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof)
[09:15:04] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 250 seconds)
[09:16:11] *** Quits: dudebbn_ (~dudebbn@cpe-174-97-16-77.cinci.res.rr.com) (Ping timeout: 256 seconds)
[09:16:31] *** Joins: dudebbn (~dudebbn@cpe-174-97-16-77.cinci.res.rr.com)
[09:19:56] <jgart> duuuuuuuuuuuuuuu, https://github.com/pflanze/utf-8-lineseparator
[09:20:01] <jgart> reading that code
[09:22:00] *** Quits: malina (~malina@user/malina) (Ping timeout: 250 seconds)
[09:22:01] *** Quits: alch (~alch@151.68.203.224) (Read error: Connection reset by peer)
[09:22:20] *** Joins: malina (~malina@user/malina)
[09:25:06] *** Quits: hiovoltage (~hiovoltag@78.186.68.182) (Ping timeout: 256 seconds)
[09:26:35] *** Joins: alch (~alch@151.34.148.209)
[09:26:36] *** Parts: Guest21 (~Guest21@181.199.144.246) (Best wishes to you all)
[09:27:05] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[09:29:23] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[09:31:24] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[09:31:54] *** Quits: LIERO (~no@vmi473477.contaboserver.net) (Quit: ZNC 1.8.2 - https://znc.in)
[09:35:26] *** Quits: Fairy (~Fairy@2001:464a:4992:0:d4db:bb59:ac7:e011) (Ping timeout: 250 seconds)
[09:36:09] *** Joins: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca)
[09:39:07] *** Joins: chomwitt (~chomwitt@ppp-94-67-201-202.home.otenet.gr)
[09:39:20] *** Quits: malina (~malina@user/malina) (Ping timeout: 250 seconds)
[09:40:06] *** Quits: chomwitt (~chomwitt@ppp-94-67-201-202.home.otenet.gr) (Remote host closed the connection)
[09:41:27] *** Quits: soapsudsxx (~soapsudsx@141.193.188.140) (Remote host closed the connection)
[09:42:39] *** Quits: missogra (~missogra@dynamic-077-000-036-065.77.0.pool.telefonica.de) (Ping timeout: 256 seconds)
[09:43:20] <hanzo> jgart: cool
[09:43:26] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[09:45:26] *** Joins: chomwitt (~chomwitt@2a02:587:dc11:fb00:12c3:7bff:fe6d:d374)
[09:47:39] *** Joins: winning-luser (~wl@2601:8c1:80:70d0::414b)
[09:47:44] *** Quits: winning-luser (~wl@2601:8c1:80:70d0::414b) (Remote host closed the connection)
[09:48:34] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[09:49:39] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[09:49:40] *** Joins: BobTheTomato (~paul@107-190-110-80.cpe.teksavvy.com)
[09:51:02] *** Quits: freakazoid333 (~matt@2603-9000-cf03-86c3-ec0b-4fdb-5f56-87da.inf6.spectrum.com) (Read error: Connection reset by peer)
[09:51:24] *** Joins: LIERO (~no@vmi473477.contaboserver.net)
[09:51:54] *** Quits: jusski (~user@78-63-85-123.static.zebra.lt) (Ping timeout: 250 seconds)
[09:52:11] *** Joins: lleo (~leo@31-161-205-115.mobile.kpn.net)
[09:53:13] *** Joins: malina (~malina@user/malina)
[09:54:04] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[09:59:05] *** Quits: nitrix (~nitrix@user/nitrix) (Read error: Connection reset by peer)
[09:59:53] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[09:59:53] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[09:59:53] *** Joins: wroathe (~wroathe@user/wroathe)
[10:02:30] *** Joins: nitrix (~nitrix@user/nitrix)
[10:03:31] *** Joins: hiovoltage (~hiovoltag@78.186.68.182)
[10:04:45] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[10:04:52] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[10:05:20] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 250 seconds)
[10:07:45] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[10:07:53] *** Joins: xqt (~xqt@user/xqt)
[10:09:30] <dave0> doh
[10:09:38] <dave0> made a typo, the whole thing crashed
[10:09:54] <dave0> (forth interpreter)
[10:12:01] <pnbeast> Thank goodness it's not a Logo interpreter or you'd have killed the turtle.
[10:12:16] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 250 seconds)
[10:12:49] <dave0> aw cute turtle
[10:13:07] <hanzo> lol
[10:13:49] *** Quits: Whatshisface (~jon@user/Whatshisface) (Quit: BitchX: the ONLY IRC client on Viagra!)
[10:13:57] <g0z> hi dave0
[10:14:35] *** Joins: indiana-bones (~indignant@94.140.8.115)
[10:14:57] <dave0> maw g0z
[10:15:17] <dave0> hey gauze
[10:15:21] <jgart> what are some good resources for learning modern c?
[10:15:23] <g0z> that's me
[10:15:32] <pnbeast> ,books jgart
[10:15:32] <candide> jgart: See http://www.iso-9899.info/wiki/Books for some useful book recommendations, including free online resources.
[10:16:03] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[10:16:24] <jgart> candide, thnx!
[10:16:30] <candide> np, j​gart
[10:17:09] <jgart> I'm trying to understand this codebase: https://git.sr.ht/~martanne/vis
[10:17:26] <jgart> following the structs how they are used
[10:17:47] <jgart> many things are beyond me though
[10:19:12] *** Quits: pulse_ (~pulse@user/pulse) (Ping timeout: 250 seconds)
[10:23:45] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Quit: Leaving)
[10:24:01] *** Quits: ajf_ (~ajf_@user/ajf/x-9593112) (Ping timeout: 256 seconds)
[10:24:45] *** Quits: lleo (~leo@31-161-205-115.mobile.kpn.net) (Ping timeout: 256 seconds)
[10:26:00] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Ping timeout: 276 seconds)
[10:26:37] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293) (Ping timeout: 240 seconds)
[10:27:28] <Maxdamantus> candide: thnx!
[10:27:35] <candide> Not a problem, M​axdamantus
[10:29:01] <supakeen> jgart: Any concrete questons :)
[10:29:17] <Maxdamantus> candide: why must your reality be so ambiguous?
[10:29:30] <candide> Because the engorged brown squid made it that way.
[10:30:41] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[10:30:41] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[10:30:41] *** Joins: wroathe (~wroathe@user/wroathe)
[10:31:52] <Maxdamantus> candide: why did the rooster cross the road?
[10:32:02] <candide> I don't know.
[10:32:13] <Maxdamantus> Because he didn't want anyone to think he was chicken.
[10:32:21] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[10:35:26] *** Joins: xqt (~xqt@user/xqt)
[10:35:31] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[10:36:24] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[10:40:26] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 250 seconds)
[10:41:34] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:50a3:2009:e1f1:2849)
[10:41:34] *** Joins: fe23 (~fe23@2409:8a34:464:4990:444c:67b3:e50f:224)
[10:43:28] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 250 seconds)
[10:44:30] *** Quits: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se) (Ping timeout: 260 seconds)
[10:44:57] *** Quits: mikoto-chan (~mikoto-ch@194.157.16.89) (Ping timeout: 240 seconds)
[10:46:20] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[10:46:51] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[10:47:42] *** Joins: malina (~malina@user/malina)
[10:49:58] *** Quits: pnbeast (~pnbeast@2601:140:4280:6ce0::1) (Quit: WeeChat 2.7.1)
[10:51:56] *** Joins: kurahaupo_ (~kurahaupo@pa49-182-35-223.pa.qld.optusnet.com.au)
[10:54:43] *** Joins: JTechno (~JTechno@5.59.114.36)
[10:55:45] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[10:56:44] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:58:15] *** Joins: mrig (~mrig@user/mrig)
[11:00:05] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[11:01:40] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[11:02:43] *** Quits: boB_K7IQ (~boB_K7IQ@108.60.52.242) (Ping timeout: 256 seconds)
[11:03:13] *** Joins: boB_K7IQ (~boB_K7IQ@108.60.52.242)
[11:07:44] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 250 seconds)
[11:09:00] *** Quits: JTechno (~JTechno@5.59.114.36) (Quit: leaving)
[11:09:46] *** Joins: imm_ (~imm_@user/imm/x-3405860)
[11:10:25] *** Quits: wyre (~wyre@user/wyre) (Quit: ZNC 1.8.2 - https://znc.in)
[11:10:46] *** Quits: liba (~liba@user/liba) (Ping timeout: 250 seconds)
[11:11:27] *** Joins: wyre (~wyre@user/wyre)
[11:17:38] *** Joins: elPuma (~elPuma@2600:1700:40b0:7830:ea25:4d34:fc75:3caa)
[11:19:07] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[11:19:46] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[11:24:38] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 250 seconds)
[11:29:32] <elPuma> Does the concept of a "string", i.e. a finite sequence of characters terminated by the null character, make sense within the context of a text file? Or, is this just C's definition of a string? I tried running the following code with a small text file as input thinking it would exit after reading the first word, but it runs forever. Do text files
[11:29:33] <elPuma> not actually use null characters to delimit individual words?
[11:29:39] <elPuma> http://sprunge.us/GcppAs?c
[11:32:01] *** Quits: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net) (Ping timeout: 245 seconds)
[11:32:43] *** Joins: Fairy (~Fairy@2001:464a:4992:0:d4db:bb59:ac7:e011)
[11:32:46] *** Joins: inomoz (~inomoz@176.59.121.150)
[11:32:47] *** Joins: Jenna16bit (~j16bit@c-73-228-39-16.hsd1.nm.comcast.net)
[11:33:18] *** Joins: dansan_ (~daniel@75.81.148.51)
[11:33:30] *** Quits: dansan (~daniel@75.81.148.51) (Ping timeout: 260 seconds)
[11:33:37] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[11:34:44] <dave0> oh okay
[11:34:59] <dave0> instead of    != '\0'   use    != EOF
[11:35:26] <dave0> end of file is a condition, and getc returns the value EOF when you are the end of file
[11:35:36] <dave0> it is not an actual character appearing in the file
[11:35:39] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:50a3:2009:e1f1:2849) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[11:36:59] <dave0> if files have any structure at all, it's probably line-oriented ... you get '\n' at the ends of lines (and if your operating system doesn't use ascii 10, like dos, it'll convert to '\n' for you)
[11:37:02] *** Joins: steve__ (~steve@ool-182c2b80.dyn.optonline.net)
[11:37:40] <sham1> Text files ought not store NULL bytes
[11:38:25] <dave0> not because text files can't have null in them.. because c is lacking
[11:38:39] <sham1> No, that's an ASCII thing
[11:38:54] <dave0> oh didn't know that
[11:39:22] <dave0> iso646 or something?
[11:40:10] <supakeen> The concepts of 'text file' and 'binary file' (I hate that latter term) are blurry at best, aren't they?
[11:40:26] <dave0> on unix they're equivalent
[11:40:36] <pflanze> The "file" tool treats any file that contains a \0 as non-text
[11:41:13] <sham1> They're only different because some systems do things like charset conversions and such for "text" files
[11:41:41] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:50a3:2009:e1f1:2849)
[11:41:48] *** Joins: Rounin (~david@84.212.130.215)
[11:42:20] <sham1> A typical example nowadays is how Windows will convert LF <=> CRLF
[11:42:52] <dave0> haha google found this: https://news.ycombinator.com/item?id=16312317
[11:42:53] <candide> Title of dave0's link: A C89 compiler that produces executables that are also valid ASCII text files [pdf] | Hacker News
[11:44:19] *** Joins: frost (~frost@user/frost)
[11:44:23] <pflanze> elPuma, individual words are separated just by space, either tab, line separators ('\n' / '\r' or both), the normal space (' '), or in unicode the non-breakable space, or a number of other characters. Use a binary viewer like "bvi" to see the bytes that make up files.
[11:45:53] <sham1> The reason why ASCII discouraged '\0' in text files is because it's a control character. And not like how \n or \r or \t are control characters
[11:46:07] <sham1> It made sense for C to use it as a sentinel for strings
[11:46:44] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[11:46:55] *** Quits: NEYi (~NEYi@109.251.216.38) (Ping timeout: 256 seconds)
[11:47:00] *** Joins: teepee (~teepee@openscad/teepee)
[11:47:33] <sham1> Indeed, it was originally a no-op when sent to printers and such
[11:47:35] *** Joins: aradesh (~aradesh@user/aradesh)
[11:47:44] <elPuma> What does '\0' typically control in text files if not the the End Of Text or End Of Transmission?
[11:48:17] <elPuma> or End of Line for that matter
[11:48:44] <pflanze> elPuma, again, it is not contained in text files at all. EOF is not a character contained in the file, it's a pseudo character returned by getc to signalize that there's nothing more to be read.
[11:49:06] <sham1> > The original meaning of this character was like NOP—when sent to a printer or a terminal, it has no effect (some terminals, however, incorrectly display it as space). When electromechanical teleprinters were used as computer output devices, one or more null characters were sent at the end of each printed line to allow time for the mechanism to return to the first printing position on the next line.
[11:49:07] <pflanze> \0 can be contained in files, but they are not "text" files anymore.
[11:49:11] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[11:49:13] <sham1> Although that has a "citation needed" on wikipedia
[11:49:16] <pflanze> EOF cannot be contained in files, it's not a character.
[11:49:44] *** Quits: Karyon (~Karyon@user/karyon) (Quit: Good bye)
[11:49:55] <sham1> So yeah, a NOP
[11:49:58] *** Joins: Karyon_ (~Karyon@user/karyon)
[11:50:13] <pflanze> elPuma, and "end of line" is a bit of a misnomer, "line separator" or "newline" is better.
[11:50:23] <sham1> Lines are a human thing
[11:50:26] *** Quits: taru9 (~realTaru9@user/taru9) (Ping timeout: 252 seconds)
[11:50:41] <pflanze> Indeed, like horizontal spacing.
[11:50:45] *** Joins: taru9 (~realTaru9@user/taru9)
[11:50:49] <supakeen> :D
[11:50:58] <elPuma> Right, I think I get that. In the context of data transmissions, things like EOF are "seen" but they are meant to signal things that aren't the actual content of the message
[11:51:20] <supakeen> They'd be 'out-of-band' as related to the content of the file.
[11:51:35] <supakeen> You almost always need something like that anyways :)
[11:52:21] <pflanze> elPuma, EOF is also not "sent". You can only end the transmission. That is noticed by the other end, yes. But that's not a signal that's inside the transmission.
[11:52:55] <pflanze> elPuma, a transmission is ended by closing the connection.
[11:53:23] <sham1> I mean to be fair, files are also a human thing
[11:53:53] <elPuma> So are control characters not "in" files, because they are only used when sending files? Like they are what surrounds a file?
[11:54:39] <sham1> I mean some control characters are. Newlines and such
[11:54:47] *** Quits: rgrinberg (~textual@2806:101e:7:4889:3c8d:4176:aa67:59be) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:54:52] <elPuma> Then when I receive a transmission, before I can read the contained file, something on my end strips out all of the control characters and header info?
[11:55:13] <sham1> The filesystem headers are usually stored separately from the actual data
[11:55:18] *** Joins: frost (~frost@user/frost)
[11:58:30] *** Quits: pr-asadi_ (~pr-asadi@2602:fccf:1:1150::) (Quit: ZNC 1.8.2 - https://znc.in)
[11:59:14] *** Joins: hehehe9 (~hehehe9@149.6.151.74)
[11:59:29] *** Joins: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca)
[12:00:03] *** Joins: pr-asadi (~pr-asadi@2602:fccf:1:1150::)
[12:00:52] <elPuma> So, a zeroed out byte was just a convenient choice for the designers of C to denote the end of a character string, since it does not specify any actual character?
[12:01:15] <sham1> Basically
[12:01:21] <sham1> It's also convenient because it's zero
[12:01:46] <sham1> So you can do something like `if (*str) { /* not end of string */ } else { /* end of string */ }
[12:01:47] <sham1> `
[12:04:17] *** Joins: System_Error (~SystemErr@user/systemerror)
[12:05:05] <elPuma> EOF is a macro, right? Shouldn't I be able to see how it is defined if I run the preprocessor cpp on a file containing a reference to EOF?
[12:06:03] <dave0> elPuma: certainly.. you can even print it with the robot
[12:06:09] <dave0> , cc printf("%d ", EOF);
[12:06:12] <candide> dave0: -1
[12:07:39] <elPuma> whoops, forgot to include the stdio.h header
[12:08:14] <sham1> ,expand EOF
[12:08:14] <candide> sham1:  (-1)
[12:08:16] <sham1> Yeah
[12:08:23] <sham1> But it could really be anything
[12:08:56] <elPuma> Okay I see that EOF is -1 on my system. For some reason I thought EOF and '\0' represented the same value internally. So that explains why my program http://sprunge.us/GcppAs?c did not terminate.
[12:09:03] <hehehe9> implementation defined?
[12:09:36] *** Joins: freepp (~freepppp@62.1.174.38.dsl.dyn.forthnet.gr)
[12:10:00] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[12:10:01] <elPuma> Should have done this instead http://sprunge.us/GcppAs?c
[12:11:52] *** Quits: malina (~malina@user/malina) (Ping timeout: 250 seconds)
[12:12:03] *** Joins: malina (~malina@user/malina)
[12:12:18] *** Quits: freep (~freepppp@62.1.174.38.dsl.dyn.forthnet.gr) (Ping timeout: 250 seconds)
[12:14:35] <sham1> It is some implementation defined value. Although I think it has to be negative
[12:14:37] <sham1> ,c11 EOF
[12:14:40] <candide> eof: Displaying 1 of 45 matches: http://www.iso-9899.info/n1570.html#7.4p1 [Character handling <ctype.h>] The header <ctype.h> declares several functions useful for classifying and mapping characters.198) In all cases the argument is an int, the value of which shall be representable as an unsigned char or shall equal the value of the macro EOF. If the argument has any other value, the behavior is undefine... <truncated; https://0x0.st/o-O4.txt>
[12:15:30] *** Quits: sonny (~sonny@bras-base-london1483w-grc-32-70-52-175-166.dsl.bell.ca) (Quit: Going offline, see ya! (www.adiirc.com))
[12:15:36] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:15:46] *** Joins: cytokine_storm (~user@user/cytokine-storm/x-1083107)
[12:15:57] *** Joins: System_Error (~SystemErr@user/systemerror)
[12:15:59] <sham1> Ah yes
[12:16:16] <sham1> "EOF which expands to an integer constant expression, with type int and a negative value"
[12:16:29] <cytokine_storm> how good is C for competitive programming ?
[12:16:31] <sham1> From 7.21.1p3 in the C11 draft
[12:17:08] <sham1> It's decent. You can't *really* code golf as efficiently as with other languages but you can still do competitive programming
[12:17:23] <cytokine_storm> yea
[12:18:39] <jgart> supakeen, I will have soon :)
[12:18:48] <hehehe9> Thank you sham and candide
[12:18:59] <candide> np, h​ehehe9
[12:19:51] <cytokine_storm> i am practicing codeforces these days. i want to become an expert within 3 month period. i want some advice from you guys.
[12:20:21] <cytokine_storm> i am coding in mostly C
[12:21:51] *** Quits: pr-asadi (~pr-asadi@2602:fccf:1:1150::) (Quit: ZNC 1.8.2 - https://znc.in)
[12:22:24] *** Joins: pr-asadi (~pr-asadi@2602:fccf:1:1150::)
[12:22:27] *** Quits: kurahaupo_ (~kurahaupo@pa49-182-35-223.pa.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[12:26:36] *** Quits: bdt (~bdt@2a01:799:39c:7600:e65f:1ff:fe08:8a88) (Ping timeout: 250 seconds)
[12:27:18] *** Joins: kurahaupo (~kurahaupo@pa49-182-35-223.pa.qld.optusnet.com.au)
[12:29:19] <hehehe9> an expert within 3 month period? isn't that a bit too ambitious? (I'm also learning C so I can't tell, just asking)
[12:30:17] *** Joins: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu)
[12:31:56] <cytokine_storm> hehehe9: yeah i have done C previously. now most of my time i learn algorithms and practice at leat 20 different problems everyday
[12:32:44] *** Quits: puke (~puke@user/puke) ()
[12:33:00] <cytokine_storm> the problems im currently doing are not very hard. i am trying to get to another level.
[12:34:57] *** Cyp_ is now known as Cyp
[12:36:35] *** Quits: pr-asadi (~pr-asadi@2602:fccf:1:1150::) (Quit: ZNC 1.8.2 - https://znc.in)
[12:38:20] <hehehe9> cytokine_storm what is your motivation behind wanting to become an expert in C? for example do you want to join a big company or something?
[12:39:35] *** Joins: pr-asadi (~pr-asadi@2602:fccf:1:1150::)
[12:41:19] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[12:42:01] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[12:42:10] <cytokine_storm> hehehe9: yes
[12:42:41] *** Quits: pr-asadi (~pr-asadi@2602:fccf:1:1150::) (Client Quit)
[12:43:58] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[12:46:57] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[12:47:39] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[12:51:04] *** Joins: leo__ (~leo@31-161-205-115.mobile.kpn.net)
[12:51:38] *** Quits: leo__ (~leo@31-161-205-115.mobile.kpn.net) (Client Quit)
[12:51:45] *** Joins: leo__ (~leo@31-161-205-115.mobile.kpn.net)
[12:52:17] *** Quits: nuxil (~nuxil@141.195.51.213) (Remote host closed the connection)
[12:52:28] *** Joins: nuxil (~nuxil@141.195.51.213)
[12:53:22] *** Joins: pr-asadi (~pr-asadi@2602:fccf:1:1150::)
[12:56:28] *** Quits: pr-asadi (~pr-asadi@2602:fccf:1:1150::) (Client Quit)
[12:56:50] *** Joins: stonkey (~stonkey@user/stonkey)
[12:57:18] *** Quits: wre^ (~wre@wsip-98-188-242-61.mc.at.cox.net) (Remote host closed the connection)
[12:57:23] *** Joins: pr-asadi (~pr-asadi@2602:fccf:1:1150::)
[12:58:36] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[12:58:54] *** Quits: Tom^ (~Tom^@user/tom/x-0773808) (Quit: WeeChat 3.5-dev)
[13:03:26] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 250 seconds)
[13:03:48] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[13:05:21] *** Joins: puke (~puke@user/puke)
[13:05:31] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[13:05:32] *** Joins: Tom^ (~Tom^@user/tom/x-0773808)
[13:06:05] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[13:06:15] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[13:06:37] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[13:06:55] *** Joins: kish` (~aqua@user/aqua)
[13:07:42] *** Joins: mikoto-chan (~mikoto-ch@213-139-178-171.co.dnainternet.fi)
[13:09:00] *** Quits: indiana-bones (~indignant@94.140.8.115) (Quit: Leaving)
[13:09:27] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[13:09:31] *** Quits: elPuma (~elPuma@2600:1700:40b0:7830:ea25:4d34:fc75:3caa) (Quit: Client closed)
[13:09:45] *** Joins: gproto23_ (~gproto23@user/gproto23)
[13:11:49] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:8153:e826:3459:f646)
[13:13:02] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[13:13:21] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:50a3:2009:e1f1:2849) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:15:05] *** Joins: plastico (~plastico@neomutt/plastico)
[13:15:12] <high_ground> cytokine_storm: I wouldnt recommend C for use in competitive programming.
[13:15:34] <high_ground> C's minimal standard library means that you are at an disadvantage
[13:15:57] *** Quits: pucara (~i@host230.186-125-94.telecom.net.ar) (Quit: Lost terminal)
[13:20:15] <cytokine_storm> high_ground: yes my peers are using C++ most of the time
[13:20:18] <sham1> Then again, you can have your own little library of convenient tools
[13:20:41] <high_ground> yea, thats why most people who do CP uses cpp
[13:21:06] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-216-150.wlan.tudelft.nl)
[13:21:37] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-216-150.wlan.tudelft.nl) (Client Quit)
[13:21:47] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-216-150.wlan.tudelft.nl)
[13:22:32] *** Joins: shanto05 (~shanto05@103.118.76.134)
[13:25:06] *** Quits: alch (~alch@151.34.148.209) (Ping timeout: 250 seconds)
[13:27:02] *** Joins: alch (~alch@151.68.143.169)
[13:28:00] *** Quits: System_Error (~SystemErr@user/systemerror) (Ping timeout: 276 seconds)
[13:28:30] *** Quits: shanto05 (~shanto05@103.118.76.134) (Quit: Leaving)
[13:28:54] *** Joins: dsrt^ (~dsrt@wsip-98-188-242-61.mc.at.cox.net)
[13:28:55] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[13:29:10] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[13:30:53] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[13:31:01] *** Quits: mikoto-chan (~mikoto-ch@213-139-178-171.co.dnainternet.fi) (Ping timeout: 256 seconds)
[13:36:59] *** Quits: Fairy (~Fairy@2001:464a:4992:0:d4db:bb59:ac7:e011) (Ping timeout: 250 seconds)
[13:37:50] *** Joins: bebyx (~Thunderbi@user/bebyx)
[13:38:57] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[13:40:50] *** Quits: kurahaupo (~kurahaupo@pa49-182-35-223.pa.qld.optusnet.com.au) (Read error: Connection reset by peer)
[13:41:06] *** Joins: kurahaupo (~kurahaupo@pa49-182-35-223.pa.qld.optusnet.com.au)
[13:42:52] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[13:43:09] *** Joins: strajder (~strajder@user/strajder)
[13:43:33] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[13:44:57] *** Joins: nuxil_ (~nuxil@141.195.51.213)
[13:47:20] *** Joins: bdt (~bdt@155.51-174-24.customer.lyse.net)
[13:48:04] *** Quits: nuxil (~nuxil@141.195.51.213) (Ping timeout: 250 seconds)
[13:49:09] *** Quits: davros (~davros@host86-185-61-39.range86-185.btcentralplus.com) (Ping timeout: 256 seconds)
[13:49:42] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[13:50:05] *** Joins: kish` (~aqua@user/aqua)
[13:51:35] *** Joins: ludwhe (~ludwhe@90.85.217.210)
[13:53:12] *** Joins: mikoto-chan (~mikoto-ch@194.157.16.89)
[13:53:43] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a98c:b4fd:85b3:2536)
[13:54:49] *** Quits: root____ (~root@157.245.144.252) (Ping timeout: 256 seconds)
[13:55:39] *** Joins: root__ (~root@157.245.144.252)
[13:57:05] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[13:57:20] *** Quits: ludwhe (~ludwhe@90.85.217.210) (Remote host closed the connection)
[13:58:16] *** Joins: magla (~gelignite@55d475f4.access.ecotel.net)
[14:00:31] <clarity> Do the rules of CP prevent you from bringing your own library?
[14:00:48] <high_ground> im not that sure but i would assume so
[14:01:15] <high_ground> Or else people are going to bring Cp specific libraries
[14:01:28] *** Joins: davros (~davros@host86-185-99-167.range86-185.btcentralplus.com)
[14:02:53] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[14:03:03] *** Quits: bzyx_ (~quassel@89-69-20-238.dynamic.chello.pl) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:05:51] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[14:06:53] *** Quits: romik (~romik@mm-135-105-125-178.mfilial.dynamic.pppoe.byfly.by) (Ping timeout: 256 seconds)
[14:08:52] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 250 seconds)
[14:09:29] *** Joins: costanza (~i.am@user/heineken)
[14:12:06] *** Joins: ludwhe (~ludwhe@90.85.217.210)
[14:14:17] *** Quits: Techcable (~Techcable@168.235.93.147) (Ping timeout: 240 seconds)
[14:15:43] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (Quit: Leaving)
[14:16:51] <sham1> Well those do exist, so
[14:16:57] <sham1> They're probably used to it
[14:19:09] *** Joins: xqt (~xqt@user/xqt)
[14:22:01] <james[m]123456> Hello, I am setting up a separate build target for the CLI module of my program.... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/0932971615cdaab95e7827b16b961d76790e7e86)
[14:23:22] <sham1> Your build system shouldn't affect it
[14:23:37] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[14:24:08] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[14:24:48] <james[m]123456> It says undefined reference to 'main'.
[14:25:05] *** Joins: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by)
[14:25:17] *** Quits: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by) (Max SendQ exceeded)
[14:25:17] *** Joins: cerl (~cerl@c-24-30-27-91.hsd1.ga.comcast.net)
[14:25:18] <sham1> Well, you don't have a main there now do you
[14:25:53] <cerl> What is the point of pointers? I get that they hold the address of another variable, but I can't see the advantage of using raw pointers explicitly.
[14:25:59] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 256 seconds)
[14:26:12] *** Joins: romik (~romik@mm-47-72-125-178.mfilial.dynamic.pppoe.byfly.by)
[14:26:19] <james[m]123456> I am parsing the arguments from main into the cli_init function.
[14:26:27] <james[m]123456> But I get that error.
[14:26:29] <sham1> james[m]123456: and where's the main function
[14:26:51] <james[m]123456> src/main.c
[14:27:41] <sham1> Well, you're not linking src/main.c
[14:28:13] <james[m]123456> Are you saying I need a main in the cli folder?
[14:28:29] <sham1> No. I'm saying that you need to fix the way you organize the project
[14:28:42] <sham1> First of all, what is this: https://git.james-clarke.ynh.fr/james/Habits/src/branch/master/src/meson.build#L31
[14:30:58] *** Quits: malloy (~jimery@113.116.52.211) (Quit: WeeChat 3.0)
[14:31:03] <james[m]123456> I parse the arguments in main to the cli_init function. So it basically initialises the program.
[14:31:54] <sham1> Indeed
[14:32:06] <fizzie> But `main` isn't in your program.
[14:32:18] <sham1> But why are you creating an executable called "habits-main" and then creating another executable in the meson.build of cli
[14:32:21] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:32:22] <sham1> It just makes no sense
[14:32:34] <fizzie> src/cli/meson.build says your program consists of cli_sources and habits_lib, neither of which includes main.c.
[14:33:06] *** Joins: csrf (~csrf@user/csrf)
[14:33:23] <james[m]123456> Okay so, can I get the argc and argv without getting it from the main function?
[14:33:49] <sham1> The problem is that your project struture is terrible
[14:34:13] <fizzie> What are you trying to *do* with this separate build target? Should `habits-cli` be a different executable than `habits-main`?
[14:34:27] *** Joins: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se)
[14:34:30] *** Quits: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[14:34:39] <sham1> You'd be better off with a libhabits and then an executable that links with that
[14:34:46] *** Quits: ludwhe (~ludwhe@90.85.217.210) (Remote host closed the connection)
[14:34:49] <james[m]123456> Yea, because the CLI is different.
[14:34:49] <james[m]123456> I also later want to make a build target for GUI. Later on.
[14:35:44] <james[m]123456> But I also need to get the argc and argv. Can I get that without linking the main function in the build target for habits-cli?
[14:35:45] <fizzie> Because if you want two programs that do different things, yes, you'll also need two different `main` functions. (Or the same one compiled with different macros or whatnot. Or some sort of dependency injection mechanism. But those get more complicated.)
[14:36:12] <fizzie> No, because a C program can't not have a `main`, that's where the execution starts.
[14:36:24] <sham1> At least on hosted, but yes
[14:36:50] <sham1> You indeed need main
[14:37:18] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:38:21] <sham1> james[m]123456: Here's what you do. In src/meson.build you already have a habits_core as a static library. Now what you do is that you move main.c into cli and do that. You remove https://git.james-clarke.ynh.fr/james/Habits/src/branch/master/src/meson.build#L31-L34 completely and then do subdir('cli')
[14:38:49] <sham1> Also you can make habits_lib into a dependency by doing declare_dependency
[14:39:11] <sham1> So you don't need to do weird "links_with" stuff for habits-cli
[14:39:46] *** Joins: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[14:41:38] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:8153:e826:3459:f646) (Read error: Connection reset by peer)
[14:42:29] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[14:43:02] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:8153:e826:3459:f646)
[14:45:49] *** Quits: leo__ (~leo@31-161-205-115.mobile.kpn.net) (Ping timeout: 256 seconds)
[14:45:52] *** Joins: bebyx1 (~Thunderbi@user/bebyx)
[14:47:14] <james[m]123456> I get error Unknown variable: habits_lib.
[14:47:14] <james[m]123456> Likely because I removes the src/meson.build file
[14:47:14] <james[m]123456> How do I make habits_lib a dependency?
[14:47:31] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 256 seconds)
[14:47:31] *** bebyx1 is now known as bebyx
[14:48:24] <james[m]123456> Also the other modules tests,examples need access to habits_lib I believe
[14:50:04] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[14:51:51] <sham1> james[m]123456: https://bpa.st/SQ7A
[14:52:16] <sham1> And then just use habits_dep for when you want to link with libhabits
[14:53:13] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:50a3:2009:e1f1:2849)
[14:55:43] *** Joins: Posterdati (~posterdat@host-87-19-166-231.retail.telecomitalia.it)
[14:57:11] <james[m]123456> I applied your fix and there are no errors, but the habits-cli binary does is not built.
[14:57:52] <sham1> What do you mean is not built. It should be built
[14:58:18] <james[m]123456> Now also, the tests and examples binaries are also not built
[15:02:05] <james[m]123456> Oh sorry, forgot to run ninja LOL.
[15:02:44] *** Quits: Byteflux (~byte@byteflux.net) (Read error: Connection reset by peer)
[15:03:01] *** Joins: Byteflux (~byte@byteflux.net)
[15:03:58] *** Joins: constxd_ (~brad@142.134.38.68)
[15:04:50] <james[m]123456> Thanks for your help!
[15:07:23] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[15:10:34] *** Joins: Senicar5 (~Senicar@gateway/tor-sasl/senicar)
[15:11:12] *** Quits: Senicar (~Senicar@gateway/tor-sasl/senicar) (Quit: Ping timeout (120 seconds))
[15:11:12] *** Senicar5 is now known as Senicar
[15:14:34] *** Joins: nyah (~nyah@94.6.71.219)
[15:17:14] *** Quits: xqt (~xqt@user/xqt) (Ping timeout: 252 seconds)
[15:19:16] *** Quits: zwr (~zwr@2804:d45:b966:fb00:ed56:14ca:4cf:c0ab) (Ping timeout: 268 seconds)
[15:19:44] *** Joins: zwr (~zwr@2804:d45:b966:fb00:1d:7713:457:353)
[15:23:00] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[15:24:11] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[15:25:00] *** Joins: kish` (~aqua@user/aqua)
[15:29:46] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-216-150.wlan.tudelft.nl) (Quit: WeeChat 3.3)
[15:29:56] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-216-150.wlan.tudelft.nl)
[15:30:10] *** Parts: cerl (~cerl@c-24-30-27-91.hsd1.ga.comcast.net) (Leaving)
[15:33:11] *** Joins: Fairy (~Fairy@2001:464a:4992:0:d4db:bb59:ac7:e011)
[15:33:36] *** Quits: kaph_ (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:41:12] *** Joins: Klinda (~superleag@user/klinda)
[15:41:18] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a98c:b4fd:85b3:2536) (Remote host closed the connection)
[15:41:35] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a98c:b4fd:85b3:2536)
[15:43:49] *** Quits: tuu (~a@2a00:20:d041:5f2a:4200:8c4d:eaaa:ce79) (Ping timeout: 240 seconds)
[15:44:21] <useretail> how can i write data to free disk space in linux?
[15:44:32] <sham1> You can't
[15:44:39] <sham1> Well, you can, but you shouldn't
[15:44:49] <sham1> Just create a file. And if you want to reserve space for it, ftruncate
[15:45:36] * useretail still wants to write to free disk space
[15:45:42] <dave0> do you mean an unused partition?
[15:46:13] <useretail> just free space without any partitions on it
[15:46:15] <dave0> you can write raw blocks if you open /dev/hda or whatever it's called and seek around
[15:46:27] <dave0> the entire disk?
[15:46:33] <sham1> Yeah, if you just have a disk with no partitioning or anything, just open the device file and go ham
[15:47:33] *** Joins: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[15:48:08] <dave0> just put a big fat warning so some poor guy doesn't wipe his root partition
[15:48:18] <useretail> no, not the entire disk, just write few megs to free, unallocated space where no partition is defined, and then read the data knowing its adress
[15:48:43] <sham1> What is the purpose here, if I may ask
[15:49:02] <useretail> just to use that space
[15:49:16] <dave0> if you know it's address and you know it's unallocated, open /dev/hda
[15:49:29] <dave0> but i have no idea how to determine what's unallocated
[15:49:33] <sham1> Well /dev/sda or something similar
[15:51:11] <rcf> useretail: open the device file
[15:52:39] *** Joins: kit_ten (~u0_a391@2600:380:a47b:9bdd:4fd0:b892:8ed8:c8f5)
[15:53:17] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[15:53:58] *** Joins: ludwhe (~ludwhe@90.85.217.210)
[15:54:39] *** Joins: random-nick (~random-ni@87.116.167.125)
[15:56:16] *** Joins: Techcable (~Techcable@168.235.93.147)
[15:56:46] *** Quits: kit-ten (~u0_a391@2603-6010-a141-6fa3-950d-0150-5311-7e6b.res6.spectrum.com) (Ping timeout: 250 seconds)
[15:58:31] *** Quits: mikoto-chan (~mikoto-ch@194.157.16.89) (Ping timeout: 256 seconds)
[16:00:38] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[16:00:51] *** Joins: Atque (~Atque@user/atque)
[16:01:26] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[16:01:29] *** Joins: stanrifkin_ (~stanrifki@p200300dbcf1ba9003836de92d13fae35.dip0.t-ipconnect.de)
[16:03:24] <sham1> I'm still somewhat questioning whether this has any rationale
[16:03:36] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[16:06:39] *** Quits: noarb (~noarb@user/noarb) (Read error: Connection reset by peer)
[16:07:07] <markand> hda no longer exists since more than a decade
[16:07:55] *** Quits: ludwhe (~ludwhe@90.85.217.210) (Quit: Client closed)
[16:09:50] *** Joins: noarb (~noarb@user/noarb)
[16:11:02] *** Joins: iomari891 (~iomari891@197.210.71.84)
[16:13:17] *** Quits: In0perable (~PLAYER_1@fancydata.science) (Quit: All your buffer are belong to us!)
[16:16:54] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[16:19:07] *** Joins: Inoperable (~PLAYER_1@fancydata.science)
[16:27:29] <ioxzev1z> useretail, dd
[16:28:48] <dave0> markand: sounds about right..
[16:28:57] <dave0> i think the last version i used was in 2010
[16:29:46] <markand> :-)
[16:29:59] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[16:36:02] *** Quits: nuxil_ (~nuxil@141.195.51.213) (Read error: Connection reset by peer)
[16:36:18] *** Joins: nuxil_ (~nuxil@141.195.51.213)
[16:39:39] <sham1> I think you can still get the /dev/hda experience by using an IDE disk on a virtual machine
[16:41:21] <markand> no
[16:41:30] <markand> IDE disks are also handled by libata
[16:41:40] *** Joins: sathylias (~sysadmin@modemcable136.173-130-66.mc.videotron.ca)
[16:42:32] <sham1> I thought that sda and such meant SATA
[16:42:59] <sham1> I've also heard conflicting information that it might also mean SCSI for some reason
[16:43:00] <koollman> it meant scsi, a long time ago
[16:43:18] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[16:44:06] <koollman> then sata was added, and it was easier to push that code into the scsi module than the ide module, so sata disks were managed by scsi module and appeared at /dev/sdX while 'regular' ata ide disks were still /dev/hdX
[16:44:39] <sham1> Hm
[16:44:39] <koollman> then it was rewritten, because IDE was a rather old module, and now almost everything appears as /dev/sdX. Except nvme :)
[16:44:55] <sham1> Yeah, I know of nvme because yeah
[16:45:04] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[16:45:32] <koollman> (exceptions: old virtio disks are /dev/vdX, but they aren't as efficient as scsi-based virtio disks)
[16:45:55] *** Joins: cart_man (~rynot@host-78-144-125-214.as13285.net)
[16:48:16] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[16:52:52] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[16:52:55] *** Quits: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca) (Ping timeout: 256 seconds)
[16:55:40] *** Joins: omegatron (~some@p5484973e.dip0.t-ipconnect.de)
[16:56:16] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[16:59:20] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-216-150.wlan.tudelft.nl) (Quit: WeeChat 3.3)
[16:59:29] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-216-150.wlan.tudelft.nl)
[17:00:53] *** Joins: manjaroi3 (~manjaro-i@125.131.131.26)
[17:04:37] *** Quits: Red (~Red@97.109-247-81.customer.lyse.net) (Ping timeout: 240 seconds)
[17:08:18] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[17:09:23] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[17:10:33] *** Joins: strajder (~strajder@user/strajder)
[17:13:48] *** Quits: strajder (~strajder@user/strajder) (Client Quit)
[17:16:00] *** Joins: gaude (~gaude@29-39-142-46.pool.kielnet.net)
[17:16:19] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:18:25] *** Quits: constxd_ (~brad@142.134.38.68) (Ping timeout: 256 seconds)
[17:18:58] *** Quits: stanrifkin_ (~stanrifki@p200300dbcf1ba9003836de92d13fae35.dip0.t-ipconnect.de) (Quit: Leaving)
[17:19:37] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[17:20:27] *** Joins: kts (~kts@103.73.237.143)
[17:22:25] *** Joins: Red (~Red@97.109-247-81.customer.lyse.net)
[17:24:17] *** Quits: alch (~alch@151.68.143.169) (Ping timeout: 240 seconds)
[17:25:02] *** Joins: alioui (~medeva293@102.159.14.133)
[17:25:03] *** ornx is now known as ornxka
[17:26:18] *** Joins: alch (~alch@151.68.187.246)
[17:26:29] *** Joins: ludwhe (~ludwhe@2a02-8440-5413-8e9f-0000-0006-451e-8d01.rev.sfr.net)
[17:27:06] *** Joins: overrider (~overrider@user/overrider)
[17:27:38] *** Joins: nuxil (~nuxil@141.195.51.213)
[17:27:45] *** Joins: NEYi (~NEYi@109.251.216.38)
[17:27:53] *** Quits: hehehe9 (~hehehe9@149.6.151.74) (Quit: Client closed)
[17:29:03] *** Karyon_ is now known as Karyon
[17:30:22] *** Quits: nuxil_ (~nuxil@141.195.51.213) (Ping timeout: 250 seconds)
[17:31:09] *** Quits: ludwhe (~ludwhe@2a02-8440-5413-8e9f-0000-0006-451e-8d01.rev.sfr.net) (Client Quit)
[17:31:40] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[17:32:17] *** Quits: alioui (~medeva293@102.159.14.133) (Ping timeout: 250 seconds)
[17:33:24] *** Quits: cytokine_storm (~user@user/cytokine-storm/x-1083107) (Ping timeout: 250 seconds)
[17:38:23] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[17:40:58] *** Quits: acerbic (~acerbic@cs-xdata-50-86-54-30.cspire.com) (Read error: Connection reset by peer)
[17:41:33] *** Quits: kts (~kts@103.73.237.143) (Quit: Konversation terminated!)
[17:41:33] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[17:43:15] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:46:02] *** Quits: hiovoltage (~hiovoltag@78.186.68.182) (Quit: Client closed)
[17:47:31] *** Joins: pucara (~i@host230.186-125-94.telecom.net.ar)
[17:47:54] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Ping timeout: 250 seconds)
[17:51:36] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-216-150.wlan.tudelft.nl) (Ping timeout: 250 seconds)
[17:55:54] <fizzie> There was a /dev/xvdX too. Xen, maybe?
[17:56:35] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[17:57:36] *** Quits: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Quit: This computer has gone to sleep)
[17:58:10] *** Joins: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca)
[17:58:16] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[17:58:16] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[17:58:16] *** Joins: wroathe (~wroathe@user/wroathe)
[17:59:20] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[17:59:39] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[17:59:58] *** Joins: acerbic (~acerbic@cs-xdata-50-86-54-30.cspire.com)
[18:00:23] *** Joins: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[18:00:55] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[18:02:48] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-216-150.wlan.tudelft.nl)
[18:04:44] *** Quits: kaichiuchu (~kaichiuch@user/kaichiuchu) (Quit: leaving)
[18:06:20] *** Joins: liba (~liba@user/liba)
[18:07:30] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[18:07:40] *** Joins: Macuser (~Macuser@2600:1003:b441:6dd9:81c5:2141:cafb:3c57)
[18:07:45] *** Joins: rsjw (~quassel@user/rsjw)
[18:08:05] *** Quits: acerbic (~acerbic@cs-xdata-50-86-54-30.cspire.com) (Read error: Connection reset by peer)
[18:08:40] *** Joins: acerbic (~acerbic@cs-xdata-50-86-54-30.cspire.com)
[18:10:14] *** Quits: iomari891 (~iomari891@197.210.71.84) (Ping timeout: 250 seconds)
[18:11:18] *** Joins: tuu (~a@2a00:20:d041:5f2a:4200:30d8:c865:52a)
[18:11:37] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[18:12:17] *** Quits: Macuser (~Macuser@2600:1003:b441:6dd9:81c5:2141:cafb:3c57) (Ping timeout: 240 seconds)
[18:16:54] *** Joins: Macuser (~Macuser@2600:1003:b457:6a2:1561:17da:dbe4:91eb)
[18:19:35] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[18:19:37] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[18:22:17] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[18:22:24] *** Joins: pulse_ (~pulse@user/pulse)
[18:22:43] *** Joins: cerl (~cerl@c-24-30-27-91.hsd1.ga.comcast.net)
[18:23:30] <cerl> I know that #if #define and #elif in a header file is preprocessor directives, but is it a rule that if used in a regular .c file that it must come before the type if being used with a function or variable?
[18:24:27] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Client closed)
[18:25:31] *** Joins: kaichiuchu (~mike@144.202.8.127)
[18:25:42] <cehteh> in c you shouldnt use anything before its declared
[18:26:05] <cehteh> old C had some fallback to defaults, but thats rather broken in some ways
[18:26:31] <cerl> Let me pull up an example real quick to show you what I mean.
[18:27:22] <cerl> This is an example from the gdnative for godot that allows you to use C with godot. GDCALLINGCONV is a macro defined in a header file. https://github.com/Banderi/GDNativeExample/blob/master/src/simple.c but sometimes macros come before the type and sometimes after.
[18:27:52] <cerl> That makes it a bit confusing about preprocessor directives and macros.
[18:28:30] <sham1> Well GDCALLINGCONV probably just expands to some compiler specific thing that can just be placed wherever
[18:29:25] <cerl> In a nutshell, there isn't really a rule about the order of placing for macros? Because void GDN_EXPORT has the macro come after the type.
[18:29:25] <cehteh> see macro expansion as simple dump text replacement
[18:29:43] *** Joins: moog (~moog@107.126.53.231)
[18:29:51] <cehteh> there are rules, the C rules . .whatever macros produce has to be valid c
[18:30:10] <cerl> Lets say we have valid macros that compile without error. I'm asking about placing it in the C file.
[18:30:45] <sham1> Well the preprocessor is more than just text replacement. It replaces tokens and can do it in many ways, like replacing things that look like function calls but which are macro invocations and such
[18:30:51] <cehteh> macros themself hardly produce errors (unless yome parentesis mismatch etc), their usage will
[18:31:09] <cehteh> #define FOO  §"%$§"&%/%%$&%"%$§"%&§"&%
[18:31:26] <cerl> I guess it then depends on what the macro is will dictate the order it should be placed in a function?
[18:31:34] <cehteh> is valid (eh dunno if § is in the basic charset, just as example)
[18:31:51] <cehteh> but placing  FOO into your code will almost always raise a compiler error
[18:31:53] <sham1> cerl: yes
[18:32:15] <sham1> The placement of the macro depends on what it expands to
[18:32:26] <cehteh> so it depends only on the result of the macro expansion being valid C
[18:32:27] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Quit: Leaving)
[18:33:13] <cerl> Thanks. I think I get the basic gist of what I should do with macros.
[18:33:31] <cehteh> haha i doubt .. there are insane macro tricks :D
[18:33:42] <sham1> https://searchcode.com/file/333406306/godot_headers/gdnative/gdnative.h/
[18:33:46] <cehteh> but for the basics you may have got it
[18:33:49] <sham1> Lines 56 to 60
[18:34:00] <cerl> At least there is a style rule that macros and consts must be all caps.
[18:34:22] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[18:34:55] *** Joins: serbest (~ike@user/serbest)
[18:35:57] <cehteh> cerl: when you want to make your head spin: http://jhnet.co.uk/articles/cpp_magic
[18:35:58] <candide> Title of cehteh's link: C Pre-Processor Magic - Articles - Jhnet
[18:36:44] *** Quits: cerl (~cerl@c-24-30-27-91.hsd1.ga.comcast.net) (Quit: Leaving)
[18:36:57] *** Joins: karakedi (~eAC53C340@user/karakedi)
[18:40:01] *** Quits: dsrt^ (~dsrt@wsip-98-188-242-61.mc.at.cox.net) (Remote host closed the connection)
[18:41:24] *** Joins: kts (~kts@103.73.237.198)
[18:43:32] *** Quits: mrig (~mrig@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[18:44:28] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[18:44:49] * markand wonders is there is any reasoning behind the split of stdint and inttypes
[18:44:50] *** Joins: nun (~nun@178.115.236.156.static.drei.at)
[18:44:55] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:749d:daa8:d51c:47ce)
[18:44:55] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:749d:daa8:d51c:47ce) (Changing host)
[18:44:55] *** Joins: skapata (~Skapata@user/skapata)
[18:44:58] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[18:46:17] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 240 seconds)
[18:49:05] *** Quits: kts (~kts@103.73.237.198) (Quit: Konversation terminated!)
[18:51:17] *** Joins: nuxil_ (~nuxil@141.195.51.213)
[18:52:04] <cehteh> stdint is std c .. inttypes is posix extending it
[18:52:04] <nomagno> markdand: inttypes defines macros only useful for a hosted libc
[18:52:46] <nomagno> cehteh: inttypes is C99.
[18:52:54] <cehteh> oh ok
[18:53:06] <cehteh> well still that hosted thing applies
[18:53:20] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[18:54:12] <nomagno> <float.h>, <iso646.h>, <limits.h>, <stdarg.h>, <stdbool.h>, <stddef.h>, <stdint.h>
[18:54:26] *** Quits: nuxil (~nuxil@141.195.51.213) (Ping timeout: 250 seconds)
[18:54:36] <nomagno> These 7 headers define headers that work without a "proper" or hosted libc
[18:54:48] <nomagno> Macros*
[18:55:50] *** Quits: pucara (~i@host230.186-125-94.telecom.net.ar) (Quit: Lost terminal)
[18:56:12] <nomagno> They work without any functions whatsoever, they are hence the only 7 that can be realistically used for code related to an operating system's boot process
[18:57:36] *** Quits: liba (~liba@user/liba) (Remote host closed the connection)
[18:58:36] <nomagno> limits, float, stddef, and stdint are probably the only truly essential headers for any kind of portable backend code
[18:59:27] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293)
[19:00:23] *** Quits: gaude (~gaude@29-39-142-46.pool.kielnet.net) (Quit: Client closed)
[19:00:32] *** Quits: trenka (~ykaliuta@user/trenka) (Ping timeout: 240 seconds)
[19:00:57] *** Quits: Techcable (~Techcable@168.235.93.147) (Remote host closed the connection)
[19:01:06] *** Joins: Techcable (~Techcable@168.235.93.147)
[19:01:37] *** Quits: beastie (~lcu@user/thebeastie) (Ping timeout: 240 seconds)
[19:03:39] *** Joins: pucara (~i@host230.186-125-94.telecom.net.ar)
[19:04:04] *** Joins: sabry (~sabry@197.37.4.159)
[19:04:52] *** Quits: feral_hedgehog (~feral_hed@user/feral-hedgehog/x-2217356) (Quit: WeeChat 3.4)
[19:08:49] *** Joins: kts (~kts@103.73.237.198)
[19:10:50] <sham1> I don't really understand making inttypes.h hosted, since the compiler knows which types {u,}int{_least,_fast,}{8,16,32,64}_t corresponds to, and thus could generate the proper printf and scanf things
[19:11:45] <sham1> Unless inttypes.h has something else that truly is hosted-only, in which case I question putting the printf and scanf specifiers there
[19:13:31] <sham1> Well okay, it has imaxabs and strtoimax etc
[19:16:00] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:6113:2671:c33c:ef4a)
[19:16:15] <sham1> ,expand PRIi32 // no reason for this to be a hosted thing
[19:16:15] <candide> sham1:  PRIi32
[19:16:34] <sham1> ,expand PRId32
[19:16:34] <candide> sham1:  PRId32
[19:16:55] <pragma-> `expand` doesn't include all headers. You ahve to explicitly include some.
[19:17:55] <sham1> I just wonder if it will spew the entire inttypes.h recursive header dependencies
[19:17:59] <sham1> Oh well
[19:18:22] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[19:18:51] <sham1> ,expand #include<inttypes.h> \n PRId32 // not sure why this needs to be hosted, since if the target has int32_t, it can also have this
[19:18:51] <candide> sham1:  "d"
[19:18:53] <pragma-> No, just a string literal to use as a format specifier
[19:19:12] <sham1> I see, it's smart it is
[19:19:31] <pragma-> By the way, candide doesn't need \n after #includes because it can tell by the <> delimiters where the #include directive terminates.
[19:19:51] <sham1> Ah
[19:20:08] <sham1> Of course an even better example of what I'm on about
[19:20:18] *** Quits: serbest (~ike@user/serbest) (Quit: Konversation terminated!)
[19:21:04] <sham1> ,expand #include<inttypes.h> PRIdLEAST32 // This certainly can be expected to exist because int_least32_t is supposed to always exist
[19:21:05] <candide> sham1:  "d"
[19:21:05] <pragma-> Yeah, C is very ancient and hasn't really been modernized all that much. There are a lot of things that are real head-scratchers.
[19:21:45] *** Joins: kdc (~kdc@196.211.197.178)
[19:22:09] <sham1> The compiler *knows* that that's supposed to be "d" because it decides what type to use for that
[19:23:05] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Ping timeout: 256 seconds)
[19:23:23] <sham1> And in this case it decides int, ultimately
[19:23:34] <pragma-> You should have seen the incomprehensible mess that 70's C was before it went through the ANSI standardization process in the late 80's.
[19:24:25] <sham1> I'm admittedly not familiar with pre-ANSI C
[19:24:49] <sham1> Except I know that for as nice a book as K&R is, the C just feels very alien
[19:25:07] *** Joins: Alhazred (~Alhazred@ool-18b829c5.dyn.optonline.net)
[19:26:50] *** Quits: noonien (~noonien@user/noonien) (Quit: The Lounge - https://thelounge.chat)
[19:27:12] *** Joins: constxd_ (~brad@142.134.38.68)
[19:27:14] *** Joins: noonien (~noonien@user/noonien)
[19:28:29] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[19:29:09] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[19:33:15] <esselfe> what's the latest C standard? C19?
[19:33:17] *** Quits: Macuser (~Macuser@2600:1003:b457:6a2:1561:17da:dbe4:91eb) (Ping timeout: 240 seconds)
[19:34:05] <sham1> C2017 (more commonly called C17)
[19:34:48] *** Joins: graywolf (~wolf@user/graywolf)
[19:35:12] <esselfe> oh there's also C2x: https://en.wikipedia.org/wiki/C_standard
[19:35:44] <esselfe> coming in 2023...
[19:35:49] <sham1> Well technically the C2017 is actually C2018
[19:36:11] <koollman> (I hope some cyborg is used to illustrate that standard)
[19:39:16] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[19:39:43] *** Joins: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[19:39:53] * esselfe illustrates koollman 
[19:43:50] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 250 seconds)
[19:44:00] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[19:44:22] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[19:46:17] *** Joins: trenka (~ykaliuta@82-181-192-55.bb.dnainternet.fi)
[19:46:17] *** Quits: trenka (~ykaliuta@82-181-192-55.bb.dnainternet.fi) (Changing host)
[19:46:17] *** Joins: trenka (~ykaliuta@user/trenka)
[19:47:18] *** Quits: constxd_ (~brad@142.134.38.68) (Ping timeout: 250 seconds)
[19:48:03] *** Joins: WAR10CK (~WAR10CK@14.223.182.89)
[19:49:57] *** Joins: mrig (~mrig@user/mrig)
[19:50:44] *** nuxil_ is now known as nuxil
[19:50:58] *** Joins: freakazoid333 (~matt@2603:9000:cf03:86c3:2993:43b6:f8e:fb18)
[19:51:11] *** Joins: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net)
[19:51:37] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 240 seconds)
[19:52:23] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 256 seconds)
[19:52:59] *** Joins: cul8r (~cul8r@76.113.95.199)
[19:55:47] *** Quits: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net) (Ping timeout: 256 seconds)
[19:56:06] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[19:56:06] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[19:56:06] *** Joins: wroathe (~wroathe@user/wroathe)
[19:59:00] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[19:59:08] *** Joins: Akiva (~Akiva@user/Akiva)
[20:00:31] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[20:00:53] <theseb> in the declaration "int* a, b;"...is b an int* or an int?
[20:00:58] <theseb> i.e. pointer or int var?
[20:01:00] *** Joins: mahmutov (~mahmutov@37.155.74.26)
[20:02:47] <gnoo> i think it should be an int
[20:02:53] <gnoo> ,english int* a,b;
[20:02:55] <candide> gnoo: Declare `a` as a pointer to int. Declare `b` as an int.
[20:03:30] <theseb> why does "int *a;" feel right inside the main func but when specifying func params "int* a" seems right to me?
[20:03:51] <theseb> as in "int my_function(int* a) {;}"
[20:04:20] <theseb> obviously it is "safe" to do "int*" in func params because you'll only have one name
[20:04:20] <gnoo> because you can do int my_func(int*); as a declaration ?
[20:04:52] <theseb> gnoo: wait..when you define the function you have to give params names to use them!?
[20:05:56] <gnoo> yes, but you can omit them during declaration. so you can have int my_func(int*); int main(void){ ...; } int my_func(int *a){ ...; }
[20:07:13] <sham1> Also in C2023 not giving it a name will be legal: `void foo(int *) { /* ... */ }
[20:07:13] *** Joins: ludwhe (~ludwhe@2a02-8440-5413-8e9f-0000-0006-451e-8d01.rev.sfr.net)
[20:07:14] <sham1> `
[20:07:38] <sham1> So you can ignore arguments you get passed
[20:07:54] *** Quits: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net) (Quit: This computer has gone to sleep)
[20:08:09] <sham1> Which is just great. Before you had to do something like `void foo(int *unused) { (void)unused; /* ... */ }`
[20:08:37] <apotheon> 09:33 < theseb> why does "int *a;" feel right inside the main func but when specifying func params "int* a" seems right to me?
[20:08:40] <apotheon> I don't know.
[20:08:45] <apotheon> It doesn't seem right to me.
[20:09:23] <theseb> apotheon: so *always* avoid int*?
[20:09:35] <apotheon> I do.
[20:09:37] <theseb> apotheon: instead do int *myvar
[20:09:40] <theseb> apotheon: fair enough...thanks
[20:09:49] <sham1> Doing `int *a` everywhere is the more natural thing, because in C, declaration follows usage. `*a` is an expression of type `int`
[20:10:03] <nomagno> int* is a fine way to talk about the type
[20:10:04] <nomagno> But I recommend against int *var
[20:10:07] <apotheon> prototype: int funcname(int *);
[20:10:10] <nomagno> Anywhere too
[20:10:22] <sham1> nomagno: why do you recommend against `int *var`
[20:10:35] <nomagno> int* vae
[20:10:40] <nomagno> int* var
[20:10:41] <nomagno> Sorry
[20:10:43] <sham1> That's better
[20:11:26] <nomagno> Though I find the meaning of asterisk to be contradictory
[20:11:45] <apotheon> I guess nomagno is so used to typing "int *var" that when trying to say "don't do int* var" nomagno just automatically typed "don't do int *var" by accident.
[20:11:53] <nomagno> In declarations it means address of value, in expressions it means value of address
[20:12:08] <nomagno> apotheon: Indeed
[20:12:17] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 240 seconds)
[20:13:46] *** Joins: Betal (~Betal@user/betal)
[20:13:58] *** Joins: ZenixOwler (~whatever@118.69.128.37)
[20:14:03] <sham1> It's actually interesting that in C++ people tend to do `int* a, b` even though that's the exact same meaning as in C. Although they also don't like declaring multiple variables on the same line, which is understandable
[20:14:16] <sham1> Because constructors are *weird*
[20:14:28] <apotheon> C++ is weird.
[20:14:28] <ZenixOwler> is there anyhow i can pass a value through command line so my compiled program can detect that value at the preprocessing time and include it into a variable ?
[20:14:44] <sham1> ZenixOwler: -D
[20:14:48] <sham1> -DVAR=value
[20:14:51] <sham1> Or just -DVAR
[20:15:35] <apotheon> I'm confused about what that question means.  Maybe sham1's answer addressed the intended meaning.
[20:15:48] <sham1> apotheon: true, but one would think that this would be one thing C and C++ people could agree upon, since it's just borrowed syntax from C
[20:15:59] <apotheon> sham1: one would think
[20:16:08] *** Joins: cosimone` (~user@93-44-186-159.ip98.fastwebnet.it)
[20:17:26] <apotheon> Then again, one would think iostream syntax is bizarre in the larger context of C-like syntax in C++, but many C++ people just think it's normal.
[20:17:29] <ZenixOwler> sham1: for example if i want "char *var2 = "hello world"" from command line, i could go with "gcc -Dvar2="hello world"" ?
[20:17:59] <sham1> Yeah
[20:18:03] <sham1> Err no
[20:18:11] <sham1> Because var2 would be a preprocessor token
[20:18:22] *** Joins: jw4 (~Thunderbi@user/jw4)
[20:18:43] <sham1> So you could do `const char *var2 = VAR_2;` and then you'd do -DVAR_2="hello, world"
[20:18:53] <ZenixOwler> awh, ok
[20:18:56] *** Joins: meator (~meator@user/meator)
[20:18:56] <fizzie> Well, it'd likely need to be -DVAR2='"hello, world"'
[20:19:16] <fizzie> Or some other form of escaping the ""s from the shell so that they end up in the macro.
[20:19:19] <sham1> Because the C preprocessor would see `char *var2 = "hello world"` and replace that by `char *"hello, world" = "hello world"` which is nonsense
[20:19:22] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 250 seconds)
[20:19:45] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[20:21:02] <ZenixOwler> ok it works now thk
[20:22:05] *** Joins: strajder (~strajder@user/strajder)
[20:22:24] *** Joins: beastie (~lcu@user/thebeastie)
[20:22:28] *** Joins: BCMM (~BCMM@user/bcmm)
[20:23:38] <sham1> apotheon: it's especially weird that C++ folks use a different convention for `int * a, b`, because that also applies with like `int &a = /*something*/, b`. a is an lvalue reference to int while b is just an int, so it's basically the exact same thing as with C
[20:23:44] *** Joins: kit-ten (~u0_a391@64.85.173.130)
[20:23:53] <sham1> So yeah, odd
[20:27:37] *** Quits: kit_ten (~u0_a391@2600:380:a47b:9bdd:4fd0:b892:8ed8:c8f5) (Ping timeout: 240 seconds)
[20:27:49] <sham1> So you'd think they'd agree that things like `int *a` and `int &a` are better, but no. Apparently they use `int* a` and `int& a` because IDK, C++ is weird
[20:27:50] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[20:27:50] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[20:27:50] *** Joins: wroathe (~wroathe@user/wroathe)
[20:28:31] *** Joins: ozoned (~odoood@2601:c8:c000:c4e0::3)
[20:28:42] *** Joins: vicfred (~vicfred@user/vicfred)
[20:29:58] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[20:30:14] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[20:30:24] *** Joins: Akuli (~Akuli@82-203-165-25.bb.dnainternet.fi)
[20:31:25] *** Joins: AmR (~AmREiSa@41.36.185.103)
[20:31:33] <meator> Hello. Is there a tool that can detect superfluous header files with gcc?
[20:32:06] <sham1> What do you mean by "superfluous"
[20:32:25] *** Joins: mikoto-chan (~mikoto-ch@194.157.16.89)
[20:32:46] <ludwhe> I guess included but not used ?
[20:32:47] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[20:33:12] <meator> ludwhe: Yes.
[20:33:31] <fizzie> There's include-what-you-use.org -- not really "with GCC" though.
[20:33:57] <sham1> That would be neat, although I don't see the point in that
[20:34:11] *** Joins: jo| (jo@we.will.rock.you.bnc4you.xyz)
[20:34:25] *** Joins: freakazoid343 (~matt@2603-9000-cf03-86c3-f93f-6632-9923-52ce.inf6.spectrum.com)
[20:34:37] <fizzie> IIRC, iwyu might have had a mode where it auto-manages those comments next to #include directives re why a particular header is included.
[20:35:03] *** Joins: Zambyte (~Zambyte@cpe-104-228-60-14.nycap.res.rr.com)
[20:35:22] *** ozoned is now known as odoood
[20:35:35] *** Quits: freakazoid333 (~matt@2603:9000:cf03:86c3:2993:43b6:f8e:fb18) (Ping timeout: 250 seconds)
[20:35:48] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-216-150.wlan.tudelft.nl) (Quit: WeeChat 3.3)
[20:35:50] *** Quits: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it) (Ping timeout: 250 seconds)
[20:36:09] <meator> fizzie: That's the reason why I'm asking. I don't want to install a different compiler just to use this feature.
[20:36:50] *** Quits: freakazoid343 (~matt@2603-9000-cf03-86c3-f93f-6632-9923-52ce.inf6.spectrum.com) (Remote host closed the connection)
[20:36:59] *** Joins: brad_mssw (~bhouse@172.110.173.17)
[20:37:14] *** Joins: freakazoid343 (~matt@2603:9000:cf03:86c3:f93f:6632:9923:52ce)
[20:38:24] *** Quits: freakazoid343 (~matt@2603:9000:cf03:86c3:f93f:6632:9923:52ce) (Read error: Connection reset by peer)
[20:38:37] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[20:38:37] <ludwhe> meator: I'm not sure that exists, maybe somewhere here ? https://gcc.gnu.org/wiki/plugins
[20:39:15] *** Joins: freakazoid343 (~matt@2603:9000:cf03:86c3:f93f:6632:9923:52ce)
[20:39:26] * pragma- remembers once giving up and just writing `import *` in a Java app.
[20:40:52] <fizzie> I imagine in the large scale there might be some how-slow-builds-are implications, since there's less to recompile if you don't have unnecessary dependencies. Though worrying about build times is more of a C++ project thing.
[20:41:02] *** Joins: lleo (~leo@188-206-105-233.mobile.kpn.net)
[20:41:24] *** Quits: freakazoid343 (~matt@2603:9000:cf03:86c3:f93f:6632:9923:52ce) (Read error: Connection reset by peer)
[20:41:35] *** Quits: fe23 (~fe23@2409:8a34:464:4990:444c:67b3:e50f:224) (Quit: fe23)
[20:43:23] *** Quits: mrig (~mrig@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[20:44:02] *** Joins: Guest9615 (~Guest96@206.223.160.26)
[20:44:06] *** Joins: Narrat (~omnius@p200300df5f129c6c06ea56fffe2e7cdc.dip0.t-ipconnect.de)
[20:44:43] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[20:44:51] *** Joins: freakazoid333 (~matt@2603:9000:cf03:86c3:f93f:6632:9923:52ce)
[20:44:58] *** Joins: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net)
[20:45:02] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[20:45:22] <Guest9615> Hi, potentially dumb question. If I declare an array as: `int arr[] = { [512] = 0, [1024] = 1 };`, is that going to allocate an array of size 2 or 1024?
[20:45:37] *** Joins: mrig (~mrig@user/mrig)
[20:45:54] *** Quits: freakazoid333 (~matt@2603:9000:cf03:86c3:f93f:6632:9923:52ce) (Read error: Connection reset by peer)
[20:47:14] <sham1> Neither
[20:47:16] <sham1> 1025
[20:47:49] <Guest9615> Oh, true
[20:48:22] <pragma-> ,cc int a[] = { [10] = 42 }; print(a);
[20:48:23] *** Quits: oxfuxxx (~oxfuxxx@10.177.181.107.wiredns.net) (Client Quit)
[20:48:24] <candide> pragma-:  a = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 42}
[20:48:27] *** Joins: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[20:48:42] *** Joins: strajder (~strajder@user/strajder)
[20:48:43] *** Quits: ZenixOwler (~whatever@118.69.128.37) (Quit: Leaving)
[20:48:47] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[20:48:48] *** Quits: magla (~gelignite@55d475f4.access.ecotel.net) (Quit: Stay safe!)
[20:49:41] <Guest9615> Okay. In that case, when using one-hot encoding for enums, i.e. struct enum = { A = 1 << 0, B = 1 << 1, etc }, is there a sane way of allocated an indexable array by those enums? So defining enums by bit position (to allow concatenation), and then use those enums to refer to indices in an array without allocating massive arrays?
[20:49:42] *** Joins: oxfuxxx (~oxfuxxx@139.28.218.189)
[20:49:42] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 250 seconds)
[20:51:20] <Guest9615> Other than defining two sets of enums, i.e. enum options = {A, B, C} and enum flag = { A_flag = 1 << A, B_flag = 1 << B, C_flag = 1 << C ...}
[20:51:35] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[20:52:55] *** Joins: kit_ten (~u0_a391@64.85.173.130)
[20:53:00] *** Quits: kit-ten (~u0_a391@64.85.173.130) (Read error: Connection reset by peer)
[20:53:05] *** Quits: ludwhe (~ludwhe@2a02-8440-5413-8e9f-0000-0006-451e-8d01.rev.sfr.net) (Read error: Connection reset by peer)
[20:53:17] *** Joins: luckyxxl (~luckyxxl@185.209.196.179)
[20:53:22] *** Joins: ludwhe (~ludwhe@98.39.132.77.rev.sfr.net)
[20:53:47] *** Quits: sabry (~sabry@197.37.4.159) (Quit: Client closed)
[20:56:25] *** Quits: oxfuxxx (~oxfuxxx@139.28.218.189) (Ping timeout: 256 seconds)
[20:56:51] *** Joins: dude (~dude@2600:1700:7780:fc80:88b4:10b3:fbea:f086)
[20:57:01] *** dude is now known as duuuuuuuuuuuuuuu
[20:57:59] *** Joins: rgrinberg (~textual@2806:101e:7:4889:3c8d:4176:aa67:59be)
[20:58:41] *** Quits: ludwhe (~ludwhe@98.39.132.77.rev.sfr.net) (Ping timeout: 256 seconds)
[20:58:58] *** Joins: ludwhe (~ludwhe@2a02-8440-5413-8e9f-0000-0006-451e-8d01.rev.sfr.net)
[20:59:23] *** Quits: ludwhe (~ludwhe@2a02-8440-5413-8e9f-0000-0006-451e-8d01.rev.sfr.net) (Client Quit)
[20:59:36] *** Joins: ludwhe (~ludwhe@2a02-8440-5413-8e9f-0000-0006-451e-8d01.rev.sfr.net)
[21:00:13] *** Quits: ludwhe (~ludwhe@2a02-8440-5413-8e9f-0000-0006-451e-8d01.rev.sfr.net) (Client Quit)
[21:00:26] *** Joins: ludwhe (~ludwhe@2a02-8440-5413-8e9f-0000-0006-451e-8d01.rev.sfr.net)
[21:01:05] *** pulse_ is now known as pulse
[21:01:06] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[21:02:12] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[21:02:45] *** Joins: plastico (~plastico@neomutt/plastico)
[21:03:19] <fizzie> I don't think there's a great way. On a POSIXy system, you can use `ffs` to turn a flag into an index, and it's kind of likely to turn into a hardware instruction, but it's not quite the same. And for a fixed set of powers of 2, it's possible to pick a smallish prime m such that 2^i % m is a unique value, and use that as an array index. But it's overly clever.
[21:05:28] <fizzie> (For example, 2^0 through 2^15 modulo 19 are 1, 2, 4, 8, 16, 13, 7, 14, 9, 18, 17, 15, 11, 3, 6, 12, respectively.)
[21:07:23] <Guest9615> fizzie: Ideally this would somehow be handled by the preprocessor
[21:07:38] <Guest9615> I miss C++ constexpr:D
[21:11:18] <fizzie> You can definitely use the preprocessor to generate both enums of the two-enums solution, though it isn't terribly pretty. https://ideone.com/KqYJdz
[21:11:37] <fizzie> Can be extended to also define arrays containing the names and so on.
[21:12:47] <fizzie> Or https://ideone.com/8tLjBg with implicit values, but anyway.
[21:12:52] *** Parts: jo| (jo@we.will.rock.you.bnc4you.xyz) (Leaving)
[21:12:57] *** Joins: eson123 (~whatever@user/eson123)
[21:13:04] *** Parts: eson123 (~whatever@user/eson123) (Leaving)
[21:20:20] *** Quits: ludwhe (~ludwhe@2a02-8440-5413-8e9f-0000-0006-451e-8d01.rev.sfr.net) (Remote host closed the connection)
[21:21:04] <theseb> help! why "0x80000000 >> 31" returns 1 but "(*p) >> 31" returns -1 when p is an int* the points to 0x80000000 ??
[21:21:20] <theseb> putting SAME value in a var shouldn't change the result?!?1
[21:23:13] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Ping timeout: 256 seconds)
[21:23:22] *** Quits: Guest9615 (~Guest96@206.223.160.26) (Quit: Ping timeout (120 seconds))
[21:23:25] *** Quits: rgrinberg (~textual@2806:101e:7:4889:3c8d:4176:aa67:59be) (Remote host closed the connection)
[21:23:36] *** Joins: Guest9650 (~Guest96@206.223.160.26)
[21:23:47] *** Quits: Alhazred (~Alhazred@ool-18b829c5.dyn.optonline.net) (Ping timeout: 256 seconds)
[21:24:03] <theseb> see sample code and results here..https://pastebin.com/VEeN46Bg
[21:24:45] *** Quits: alch (~alch@151.68.187.246) (Ping timeout: 256 seconds)
[21:24:53] <theseb> i.e. https://pastebin.com/VEeN46Bg <--- why last 2 outputs are not BOTH +1?
[21:25:10] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[21:25:41] <theseb> maybe using unsigned ints?
[21:25:51] <sham1> 0x80000000 >> 31 != (int *)(0x80000000) >> 31
[21:25:55] *** Joins: alch (~alch@151.82.72.54)
[21:26:27] <sham1> And yeah, 0x80000000 is a negative integer when assigned to an int
[21:26:46] *** Joins: ZenixOwler (~whatever@user/eson123)
[21:26:56] <sham1> While IIRC 0x80000000 >> 31 is evaluated unsigned. I don't remember these rules, fizzie might
[21:26:58] <theseb> yup that was it..nm ;)
[21:27:16] <ZenixOwler> also -DVAR='"String"' is actually kinda annoying, is there anyhow i can just pass in -DVAR="String" and it works ?
[21:27:41] <Guest9650> fizzie: Thanks for the prototype. Might end up implementing something similar
[21:27:43] <ZenixOwler> assuming everything i am passing in is string
[21:27:56] <ZenixOwler> not string but characters arrays or similar
[21:28:34] *** Quits: rany (~rany@user/rany) (Quit: The Lounge - https://thelounge.chat)
[21:29:19] *** Joins: rany (~rany@user/rany)
[21:31:38] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[21:33:47] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Quit: Leaving)
[21:33:52] *** Joins: hanzo (uid532183@user/hanzo)
[21:33:59] *** Quits: lleo (~leo@188-206-105-233.mobile.kpn.net) (Ping timeout: 256 seconds)
[21:35:31] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:50a3:2009:e1f1:2849) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:39:26] *** Joins: Cyp_ (~cyp@213.237.88.120)
[21:39:50] *** Parts: ZenixOwler (~whatever@user/eson123) (Leaving)
[21:42:30] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[21:42:58] *** Quits: acerbic (~acerbic@cs-xdata-50-86-54-30.cspire.com) (Read error: Connection reset by peer)
[21:43:11] *** Joins: Akiva (~Akiva@user/Akiva)
[21:43:23] *** Joins: missogra (~missogra@dynamic-077-000-036-065.77.0.pool.telefonica.de)
[21:43:37] *** Quits: Cyp (~cyp@213.237.85.9) (Ping timeout: 256 seconds)
[21:46:22] *** Quits: duuuuuuuuuuuuuuu (~dude@2600:1700:7780:fc80:88b4:10b3:fbea:f086) (Quit: Ping timeout (120 seconds))
[21:47:24] *** Joins: dude (~dude@2600:1700:7780:fc80:88b4:10b3:fbea:f086)
[21:47:30] *** dude is now known as duuuuuuuuuuuuuuu
[21:47:33] *** Joins: Richard_Cavell (uid165693@id-165693.ilkley.irccloud.com)
[21:49:54] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[21:50:07] *** Joins: JeffH (~JeffH@174-16-131-174.hlrn.qwest.net)
[21:51:33] <fizzie> theseb: sham1: Yeah, with the usual type sizes 0x80000000 can't be represented in a signed `int`, so the constant is `unsigned int`. A good compiler would have given you some warnings about at least the assignment.
[21:51:46] *** Joins: freakazoid333 (~matt@2603-9000-cf03-86c3-0510-08fd-952d-c8ca.inf6.spectrum.com)
[21:52:25] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[21:52:33] <fizzie> And from passing the constant as the operand corresponding to %d, since it's larger than INT_MAX.
[21:53:25] <fizzie> ,clang int *a = malloc(sizeof *a); *a = 0x80000000; printf("%d %d", *a, 0x80000000);
[21:53:28] <candide> fizzie:  runtime error: implicit conversion from type 'unsigned int' of value 2147483648 (32-bit, unsigned) to type 'int' changed the value to -2147483648 (32-bit, signed) SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior  in  -2147483648 -2147483648
[21:54:19] <fizzie> ,cc -Wsign-conversion int *a = malloc(sizeof *a); *a = 0x80000000; printf("%d %d", *a, 0x80000000);
[21:54:21] <candide> fizzie: [warning: signed conversion from 'unsigned int' to 'int' changes value from '2147483648' to '-2147483648' [-Wsign-conversion]] -2147483648 -2147483648
[21:54:21] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 276 seconds)
[21:54:53] *** Joins: wre^ (~wre@wsip-98-188-242-61.mc.at.cox.net)
[21:55:11] <fizzie> Hmm, can't get anything to complain about passing an `unsigned int` as the operand to %d, even when it's a constant expression that's known as too large. I guess that's just too common for compilers to warn about. Sad. :/
[21:56:08] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[21:59:17] <theseb> fizzie: thanks for your help
[22:01:51] *** Quits: cosimone` (~user@93-44-186-159.ip98.fastwebnet.it) (Remote host closed the connection)
[22:02:18] *** Joins: cosimone (~user@93-44-186-159.ip98.fastwebnet.it)
[22:03:12] *** Parts: WAR10CK (~WAR10CK@14.223.182.89) (Leaving)
[22:07:27] *** Quits: moog (~moog@107.126.53.231) (Remote host closed the connection)
[22:08:11] *** justIrresolute is now known as justJustache
[22:09:26] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 250 seconds)
[22:11:01] *** Joins: stanrifkin (~stanrifki@p200300dbcf1ba9003836de92d13fae35.dip0.t-ipconnect.de)
[22:13:05] *** Quits: missogra (~missogra@dynamic-077-000-036-065.77.0.pool.telefonica.de) (Ping timeout: 256 seconds)
[22:15:13] *** Joins: SachieW (~SachieW@112.21.34.171)
[22:15:25] *** Quits: SachieW (~SachieW@112.21.34.171) (Remote host closed the connection)
[22:17:58] *** Joins: magla (~gelignite@55d475f4.access.ecotel.net)
[22:24:46] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[22:24:55] *** Parts: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Leaving)
[22:24:58] *** Quits: jw4 (~Thunderbi@user/jw4) (Quit: jw4)
[22:25:17] *** Joins: jw4 (~Thunderbi@user/jw4)
[22:27:54] *** Joins: carlavilla (~carlavill@2a0c:5a84:3105:5e00:221:6bff:fe3b:cee4)
[22:28:27] *** Quits: brad_mssw (~bhouse@172.110.173.17) (Quit: Leaving)
[22:30:05] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 252 seconds)
[22:31:46] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[22:31:59] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[22:33:03] *** Quits: luckyxxl (~luckyxxl@185.209.196.179) (Quit: bye)
[22:34:20] *** Joins: TheBeastie (~lcu@user/thebeastie)
[22:34:45] *** Quits: beastie (~lcu@user/thebeastie) (Ping timeout: 250 seconds)
[22:38:15] *** Joins: plantman (~plantman@2601:405:4680:1b0::4)
[22:38:32] *** Quits: pucara (~i@host230.186-125-94.telecom.net.ar) (Quit: Lost terminal)
[22:39:08] *** Quits: graywolf (~wolf@user/graywolf) (Quit: WeeChat 3.4)
[22:41:15] *** Quits: TheBeastie (~lcu@user/thebeastie) (Ping timeout: 256 seconds)
[22:42:26] *** Joins: TheBeastie (~lcu@user/thebeastie)
[22:42:41] *** luca0N_ is now known as luca0N
[22:51:08] *** Joins: ludwhe (~ludwhe@2a02-8440-5413-8e9f-0000-0006-451e-8d01.rev.sfr.net)
[22:52:28] *** Quits: ludwhe (~ludwhe@2a02-8440-5413-8e9f-0000-0006-451e-8d01.rev.sfr.net) (Client Quit)
[22:52:42] *** Joins: ludwhe (~ludwhe@2a02-8440-5413-8e9f-0000-0006-451e-8d01.rev.sfr.net)
[22:52:52] *** Joins: kuber (~kuber@97-126-51-76.tukw.qwest.net)
[22:53:41] *** Joins: ouestbillie (~gallup@142.169.82.16)
[22:55:51] *** Joins: Inline (~Inline@aftr-37-201-240-204.unity-media.net)
[22:57:07] *** Quits: TheBeastie (~lcu@user/thebeastie) (Ping timeout: 256 seconds)
[22:57:11] <duuuuuuuuuuuuuuu> anyone doing anything cool atm
[22:57:43] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Remote host closed the connection)
[22:57:46] *** Joins: aliosablack (~chomwitt@athedsl-15695.home.otenet.gr)
[22:57:53] *** Joins: TheBeastie (~lcu@user/thebeastie)
[22:58:17] *** Quits: chomwitt (~chomwitt@2a02:587:dc11:fb00:12c3:7bff:fe6d:d374) (Ping timeout: 240 seconds)
[22:58:17] <zwr> trying to figure out what random number API emscripten has to port my bsd compat library to it
[22:58:38] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (Client Quit)
[22:58:40] <duuuuuuuuuuuuuuu> oh god emscripten, that looked pretty rough when I took a look at it before
[23:00:05] *** Joins: Inline (~Inline@aftr-37-201-240-204.unity-media.net)
[23:00:13] *** Quits: ludwhe (~ludwhe@2a02-8440-5413-8e9f-0000-0006-451e-8d01.rev.sfr.net) (Ping timeout: 240 seconds)
[23:00:19] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[23:00:46] *** Joins: ludwhe (~ludwhe@2a02-8440-5401-43c8-0000-0006-45a1-a701.rev.sfr.net)
[23:01:18] *** Joins: Guest143332 (~Guest1433@ppp005055169051.access.hol.gr)
[23:01:22] <ludwhe> Writing a hobby OS (still a very incapable UEFI app for now)
[23:03:45] <omegatron> compiling stuff for a new machine (experimental hardware)
[23:04:32] *** Parts: Guest143332 (~Guest1433@ppp005055169051.access.hol.gr) ()
[23:04:50] <clarity> ludwhe: That is cool.
[23:05:12] <omegatron> (which requires adaptations of our simple bash-based c compiler)
[23:05:41] <clarity> bash based c compiler sounds crazy, url?
[23:05:51] <omegatron> url?
[23:06:02] <omegatron> it's our in-house software
[23:06:05] <clarity> :(
[23:06:09] <sham1> In bash‽
[23:06:09] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[23:06:21] <clarity> you could turn it into out-house software
[23:06:23] <omegatron> well, any capable shell
[23:06:32] <sham1> In any kind of shell‽‽
[23:06:35] <sham1> No!
[23:06:57] <omegatron> it's slow of course
[23:07:16] <omegatron> but it let's us skip the requirement of having a cross-compiler
[23:07:16] <zwr> compile bash to js with emscripten then run your compiler on that
[23:07:17] *** Quits: TheBeastie (~lcu@user/thebeastie) (Ping timeout: 240 seconds)
[23:07:54] <zwr> do it so you can say you've done something so horrible nobody else has done it
[23:08:50] <omegatron> already doing something like that : a linux / mach kernel hybrid (or rather bastard) for my own pleasure
[23:09:11] *** Quits: ouestbillie (~gallup@142.169.82.16) (Ping timeout: 256 seconds)
[23:10:13] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:a98c:b4fd:85b3:2536) (Ping timeout: 240 seconds)
[23:10:14] *** Joins: TheBeastie (~lcu@user/thebeastie)
[23:10:17] *** Joins: brad_mssw (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[23:10:55] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:a98c:b4fd:85b3:2536)
[23:13:06] *** Quits: freakazoid333 (~matt@2603-9000-cf03-86c3-0510-08fd-952d-c8ca.inf6.spectrum.com) (Read error: Connection reset by peer)
[23:13:47] *** Joins: freakazoid333 (~matt@2603:9000:cf03:86c3:510:8fd:952d:c8ca)
[23:16:31] *** Quits: kit_ten (~u0_a391@64.85.173.130) (Read error: Connection reset by peer)
[23:16:36] *** Quits: TheBeastie (~lcu@user/thebeastie) (Ping timeout: 250 seconds)
[23:16:41] *** Joins: kit_ten (~u0_a391@64.85.173.130)
[23:17:11] *** Quits: cul8r (~cul8r@76.113.95.199) (Quit: Leaving)
[23:17:13] *** Joins: Macuser (~Macuser@2600:1003:b44b:8b77:119a:bf86:f49e:93cf)
[23:19:29] *** Joins: FluffyMask (~masque@user/fluffymask)
[23:19:47] *** Quits: Guest9650 (~Guest96@206.223.160.26) (Ping timeout: 256 seconds)
[23:20:41] *** Quits: BobTheTomato (~paul@107-190-110-80.cpe.teksavvy.com) (Quit: leaving)
[23:20:42] *** Joins: ouestbillie (~gallup@142.169.82.16)
[23:22:17] *** Quits: baltazar (~baltazar@193-226-249-203.pool.digikabel.hu) (Ping timeout: 240 seconds)
[23:24:29] *** Joins: baltazar (~baltazar@84-236-20-10.pool.digikabel.hu)
[23:28:31] *** Joins: terminalpusher (~terminalp@2a01:586:875c:1:a12f:44fe:672:2437)
[23:28:57] *** Quits: kdc (~kdc@196.211.197.178) (Quit: Leaving)
[23:29:11] *** Quits: kuber (~kuber@97-126-51-76.tukw.qwest.net) (Quit: leaving)
[23:32:38] *** Quits: JeffH (~JeffH@174-16-131-174.hlrn.qwest.net) (Remote host closed the connection)
[23:34:55] *** Joins: MrFantastik (~f@2607:f598:bbda:4f0:ab71:50b:1d77:f144)
[23:35:02] <MrFantastik>  /join #ssh
[23:36:11] *** Joins: arinov (~arinov@213.194.126.155)
[23:37:28] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[23:40:00] *** Joins: gaude (~gaude@29-39-142-46.pool.kielnet.net)
[23:42:17] *** Quits: MrFantastik (~f@2607:f598:bbda:4f0:ab71:50b:1d77:f144) (Ping timeout: 240 seconds)
[23:43:01] *** Joins: MrFantastik (~f@2607:f598:bbda:4f0:ab71:50b:1d77:f144)
[23:43:43] *** Quits: duuuuuuuuuuuuuuu (~dude@2600:1700:7780:fc80:88b4:10b3:fbea:f086) (Quit: Client closed)
[23:44:35] *** Joins: TheBeastie (~lcu@user/thebeastie)
[23:45:12] <gaude> programs often use lazy loading to not load of the linked libraries at runtime, only when they are required, do they also do the opposite (or can they) i.e. unload a dynamic library when it is not required
[23:45:42] <gaude> also i guess always whole libraries will be loaded and this cant be reduced to functions from the library?
[23:46:56] *** Quits: ludwhe (~ludwhe@2a02-8440-5401-43c8-0000-0006-45a1-a701.rev.sfr.net) (Ping timeout: 250 seconds)
[23:48:10] *** Joins: ludwhe (~ludwhe@2a02-8440-541a-6e7f-0000-0006-45ab-d601.rev.sfr.net)
[23:48:43] <twkm> mostly programs don't decide that, the o/s does.  whether functions vs whole too.
[23:49:45] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[23:50:21] <gaude> and can you ninfluence this somehow (on linux)
[23:55:22] *** Quits: davros (~davros@host86-185-99-167.range86-185.btcentralplus.com) (Remote host closed the connection)
[23:56:12] *** Quits: sebbu (~sebbu@user/sebbu) (Read error: Connection reset by peer)
[23:57:23] *** Joins: sebbu (~sebbu@user/sebbu)
[23:58:02] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
