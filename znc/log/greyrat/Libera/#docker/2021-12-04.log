[00:00:04] <Sayona> how do you use docker with websites? on server you install lb (nginx) then redirect traffic to a port on docker?
[00:06:25] <vlt> Sayona: That's one possible way, yes.
[00:06:40] <Sayona> and other? :D
[00:06:56] <rawtaz> Sayona: just a reverse proxy, be it nginx/caddy/traefik (traefik is very common since it integrates super easily with your docker containers)
[00:07:13] <Sayona> rawtaz, yap
[00:07:28] <rawtaz> basicaally if you set that up, you can just fire up a container and have a couple of labels in its config, which traefik picks up and starts routing traffic to that contianer
[00:08:34] <Sayona> let me check the doc about traefik
[00:11:33] <Sayona> nice nice
[00:26:41] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[00:30:27] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:31:10] *** Joins: bencc1 (~bencc1@2a00:a040:197:3af:e8f4:e98f:2cc8:f786)
[00:31:33] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[00:31:48] <bencc1> when adding a limit to a container with "--cpus=<value>" does it limit number of hyper-threads or physical cpu cores?
[00:32:22] <bencc1> if I have 4 cores with 8 hyper-threads and I set --cpus=2, will it limit to two hyper-threads?
[00:33:29] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[00:38:28] *** Joins: noarb (~noarb@user/noarb)
[00:41:03] <rawtaz> no idea :O
[00:41:05] <rawtaz> good question
[00:41:15] <rawtaz> i couldnt find an answer in the run documentation :(
[00:41:34] <rawtaz> perhaps gotta check the code to see what it actually configures behind the scenes, and then check the docs for that
[00:43:03] *** Quits: minimal (~minimal@user/minimal) (Quit: Leaving)
[00:43:36] <bencc1> https://docs.docker.com/config/containers/resource_constraints/#configure-the-default-cfs-scheduler
[00:43:54] <bencc1> "Specify how much of the available CPU resources a container can use. For instance, if the host machine has two CPUs and you set --cpus="1.5", the container is guaranteed at most one and a half of the CPUs."
[00:44:03] <bencc1> probably logical cores
[00:45:16] <rawtaz> yeah probably
[00:45:32] <rawtaz> but yet another example of lacking docs :-)
[00:46:16] <rawtaz> the ones writing the docker docs truly lack the ability to read their text from a user's perspective (that doesnt know all the technical details the author knows)
[00:47:03] <bencc1> in my version of ansible "cpus" isn't supported anyway so I'll use --cpu-period="100000" and --cpu-quota="150000"
[00:47:53] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:808e:8d9b:579e:330f) (Quit: smeeagle)
[00:48:18] <rawtaz> nice
[00:49:43] *** Joins: smeeagle (~smeeagle@host31-48-139-30.range31-48.btcentralplus.com)
[00:50:16] <bencc1> thanks
[00:51:27] *** Joins: Brainium (~brainium@user/brainium)
[00:52:30] <rawtaz> well you solved it, i was just the rubber duck :
[00:52:31] <rawtaz> #
[00:53:07] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Quit: And I'm out.)
[00:57:05] *** Quits: tetrapod (~tetrapod@user/tetrapod) (Quit: The Lounge - https://thelounge.chat)
[00:58:08] *** Joins: tetrapod (~tetrapod@user/tetrapod)
[01:03:33] *** Joins: sudomann_ (~sudomann@172.58.190.213)
[01:03:38] <sudomann_> COPY --from=python:3.6 / /
[01:03:55] <sudomann_> whats the difference between doing this and just using FROM python:3.6
[01:04:55] *** Quits: hackers (~remote@user/hackers) (Ping timeout: 256 seconds)
[01:05:15] <larsks> sudomann_: that may end up creating a larger image, because it's not simply re-using the layers from the source image.
[01:05:45] <sudomann_> In the dockerfile im looking at, these two statements appear in the order: FROM java:8-jdk; COPY --from=python:3.6 / /;
[01:05:46] <larsks> If I already have python:3.6 in my local docker storage, and you're using FROM python:3.6, I don't need to re-download those files when I pull your image.
[01:06:08] <larsks> Hmm. That looks like a recipe for disaster to me.
[01:06:10] <sudomann_> All the java image items get overwritten right?
[01:06:25] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[01:06:27] <larsks> Files in the python image will overwrite things in the java image.
[01:06:29] <sudomann_> Okay, just trying to make sure there isnt some hidden magic before I rip it out
[01:07:56] <sudomann_> larsks: about the larger image you describe, is it because a new layer is made on which to write the files?
[01:08:26] <sudomann_> But I dont unerstand how that would result in different sizes if the files are the same
[01:09:27] <larsks> If I already have python:3.6 on my system, and I pull your image with that COPY command, I'll now have two copies of everything, because your image includes it's own copy of all the Python stuff rather than building on top of the Python image.
[01:09:41] <larsks> It effects the space efficiency of the image.
[01:10:25] <sudomann_> oooh got it, thanks!
[01:13:47] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Ping timeout: 252 seconds)
[01:15:37] *** Quits: sudomann_ (~sudomann@172.58.190.213) (Ping timeout: 256 seconds)
[01:16:42] *** Joins: pycurious (~Adium@user/pycurious)
[01:31:30] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[01:32:46] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Remote host closed the connection)
[01:50:15] *** Joins: pycurious (~Adium@user/pycurious)
[02:02:17] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[02:04:00] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[02:04:43] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[02:05:02] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Client Quit)
[02:09:47] *** Joins: tex (~super@user/dix)
[02:14:17] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Ping timeout: 252 seconds)
[02:15:50] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[02:25:39] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[02:30:02] *** Quits: Sven_vB_ (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:14] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 252 seconds)
[02:30:28] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:30:36] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[02:31:01] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[02:35:24] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:36:04] *** Quits: lilgopher (~textual@2601:241:8000:38f0:cdf7:d65d:b907:6f36) (Quit: Textual IRC Client: www.textualapp.com)
[02:38:42] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[02:40:37] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 256 seconds)
[02:44:10] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[02:44:32] *** Joins: mickey8 (~user@user/mickey)
[02:48:01] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[02:58:16] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[02:58:30] <ash_worksi> does "Unable to query docker version: Get https://192.168.99.110:2376/v1.15/version: x509: certificate has expired or is not yet valid" mean that I need to update a cert on that node?
[02:59:08] <devslash> yes
[02:59:19] <devslash> thats an invalid cert error
[02:59:38] <devslash> oh wait why are you accessing a local ip over https
[03:01:45] <ash_worksi> it's wrong to do so?
[03:02:48] <devslash> yea
[03:03:05] <devslash> you dont use https with a local ip address
[03:03:23] <devslash> because you cannot issue an ssl cert for a local ip aaddress only an FQDN
[03:06:02] <ash_worksi> well, you can so long as you add it to your local trust store
[03:06:16] <ash_worksi> but that aside, it's an old docker-machine
[03:06:24] <ash_worksi> like 8 or so months old
[03:06:48] <ash_worksi> forgot what I was doing but I imagine I didn't do anything that wasn't following swarm instructions
[03:11:20] <ash_worksi> in any event, I deleted it; how do you create a context to a docker-machine again?
[03:11:29] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:22:58] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[03:24:16] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Remote host closed the connection)
[03:24:35] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[03:24:55] *** Quits: swp (~swp@143.176.249.0) (Quit: WeeChat 3.3)
[03:25:46] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Remote host closed the connection)
[03:26:05] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[03:27:16] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Remote host closed the connection)
[03:27:35] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[03:28:46] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Read error: Connection reset by peer)
[03:29:11] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[03:30:16] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Read error: Connection reset by peer)
[03:30:38] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[03:31:46] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Remote host closed the connection)
[03:32:05] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[03:33:16] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Remote host closed the connection)
[03:33:43] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[03:43:52] *** Quits: DoofusCanadensis (~DoofusCan@2604:3d09:47c:f970:fdc9:8909:930b:2b9c) (Quit: So as you can see from this flowchSQUIRREL!!)
[03:43:55] <devslash> does anyone here use Heimdall ?
[03:44:47] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[03:48:13] <devslash> I wrote an android companion app that gets all items from Heimdall and displays a simple list of all items from your own Heimdall items.
[03:49:24] <ash_worksi> if anyone wishes to create a docker context from a docker-machine: https://gist.github.com/ash-m/60e008d5baf226e6b20a04cb22a5b544
[03:50:04] <ash_worksi> notes appreciated :)
[03:54:21] *** Quits: irrgit (~irrgit@192.241.175.183) (Ping timeout: 256 seconds)
[03:54:56] *** Quits: BigShip (~BigShip@user/bigship) (Quit: BigShip)
[04:00:16] <ash_worksi> does anyone know what the package manager (if any) is on tinycorelinux?
[04:09:46] <ash_worksi> its `tce` apparently
[04:20:21] *** Quits: tex (~super@user/dix) (Ping timeout: 256 seconds)
[04:24:41] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[04:24:47] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[04:25:03] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[04:27:42] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[04:33:29] *** Quits: Ivii (~Ivyy@2001:a62:4c3:8e01:7c39:aad5:22e:d595) (Remote host closed the connection)
[04:44:59] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 252 seconds)
[04:45:57] *** Joins: cliluw (~cliluw@47.147.80.149)
[04:49:16] <Celelibi> What happens with docker-compose build between the moment it prints "Building <whatever name>" and the moment it prints the first command?
[04:49:29] <Celelibi> This is taking quite some time.
[04:50:23] <Celelibi> Never mind, I found the --verbose option, it's the remote auth.
[04:53:16] *** Quits: Brainium (~brainium@user/brainium) (Quit: Konversation terminated!)
[04:55:37] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 252 seconds)
[05:06:15] *** Quits: TheSilentLink (~TheSilent@user/thesilentlink) (Ping timeout: 252 seconds)
[05:06:20] *** Quits: thanas (~thanas@user/thanas) (Quit: ZNC - https://znc.in)
[05:07:56] *** Joins: thanas (~thanas@user/thanas)
[05:08:16] *** Joins: TheSilentLink (~TheSilent@user/thesilentlink)
[05:10:34] *** Joins: lehinsun (~ttytwiste@188.113.176.117)
[05:22:15] *** Joins: rvalue (~rvalue@user/rvalue)
[05:28:29] <ash_worksi> anyone have any input on https://gist.github.com/ash-m/60e008d5baf226e6b20a04cb22a5b544 ?
[05:29:29] *** Quits: luva (~luva@37.120.197.46) (Ping timeout: 256 seconds)
[05:30:26] *** Joins: luva (~luva@146.70.62.236)
[05:33:45] *** Joins: dmalteseknight (~dmaltesek@user/dmalteseknight)
[05:44:06] <tabakhase> Celelibi auth shouldnt take long, likely packign/packupload - checkout ".dockerignore" (works like a git ignore) if you have lotta files in the context
[05:51:48] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:53:11] *** Quits: lehinsun (~ttytwiste@188.113.176.117) (Ping timeout: 252 seconds)
[05:58:14] <Celelibi> tabakhase, I think the aws server just takes some time to reply to the auth request.
[05:58:31] *** Quits: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469) (Remote host closed the connection)
[06:02:02] <tabakhase> Celelibi dailed via ssh? there own PAM prob. at fault then when dailing via aim or so (those are the words those aws dudes use right? :D )
[06:02:24] <tabakhase> guess just make sure normal ssh is "about same as slow" then
[06:04:03] <Celelibi> ssh to what?
[06:04:52] <Celelibi> I'm a total aws noob.
[06:05:18] <tabakhase> your aws-server? or how you connect? :d (im not working in aws either so mostly heresay :D)
[06:05:59] <tabakhase> I´m 100% bare metal =)
[06:06:24] <Celelibi> Ah. Well, the docker client auth itself against the aws container registry. The container can then be used in a batch job.
[06:08:33] <tabakhase> im not sure were talking the same thing...  you said with aws server build takes long on auth --- what i interfer from that is you you build from your notebook on a ec2 using `DOCKER_HOST=ssh://server.ip/ docker-compose build` or there like
[06:10:12] <tabakhase> based on: if you were local, there shouldnt be auth in your story - if it were ECS/EKS you wouldnt be building there/talk about a "aws server"
[06:11:02] <Celelibi> I don't build on aws. I build on another unrelated computer. But since I need then to upload the docker image to the Elastic Container Registry (that's the actual name you can look up), docker authenticate itself.
[06:14:22] *** Quits: z_lehinsun (~lehinsun@188.113.178.220) (Remote host closed the connection)
[06:14:41] *** Joins: z_lehinsun (~lehinsun@188.113.178.220)
[06:17:09] *** Quits: dmalteseknight (~dmaltesek@user/dmalteseknight) (Ping timeout: 256 seconds)
[06:18:58] *** Joins: dmalteseknight (~dmaltesek@user/dmalteseknight)
[06:21:52] <Celelibi> When I run docker-compose --verbose build, this like is the last one printed before it takes several seconds:
[06:22:19] <Celelibi> docker.api.build._set_auth_headers: Sending auth config ('[...].dkr.ecr.eu-west-3.amazonaws.com')
[06:24:21] *** Quits: dinowilliam (~dinowilli@168.194.162.242) (Remote host closed the connection)
[06:34:39] *** Quits: luva (~luva@146.70.62.236) (Ping timeout: 256 seconds)
[06:35:33] *** Joins: luva (~luva@37.120.197.37)
[06:36:50] *** Quits: smeeagle (~smeeagle@host31-48-139-30.range31-48.btcentralplus.com) (Quit: smeeagle)
[06:42:41] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[07:00:23] *** Quits: netx (~netx@23-24-2-197-static.hfc.comcastbusiness.net) (Quit: Bye)
[07:01:56] *** Quits: gooble_gobble (~gooble_go@ool-457a99e2.dyn.optonline.net) (Ping timeout: 252 seconds)
[07:03:35] *** Quits: luva (~luva@37.120.197.37) (Ping timeout: 252 seconds)
[07:04:13] *** Joins: luva (~luva@37.120.197.45)
[07:10:55] *** Quits: luva (~luva@37.120.197.45) (Ping timeout: 252 seconds)
[07:11:09] *** Joins: luva (~luva@45.141.152.44)
[07:17:10] *** Parts: ash_worksi (~ash_m@user/ash-m/x-3292451) ()
[07:20:27] *** Quits: luva (~luva@45.141.152.44) (Ping timeout: 252 seconds)
[07:21:42] *** Joins: DoofusCanadensis (~DoofusCan@2604:3d09:47c:f970:fdc9:8909:930b:2b9c)
[07:34:08] *** Joins: pycurious (~Adium@user/pycurious)
[08:25:43] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 256 seconds)
[08:26:17] *** Joins: imp (~imp@192-141-191-227.alternativaip.net.br)
[08:55:57] *** Quits: factor (~factor@c-66-30-67-217.hsd1.ma.comcast.net) (Read error: Connection reset by peer)
[09:02:19] *** Quits: DoofusCanadensis (~DoofusCan@2604:3d09:47c:f970:fdc9:8909:930b:2b9c) (Quit: So as you can see from this flowchSQUIRREL!!)
[09:15:39] *** Quits: dabbill (~dabbill@174.31.73.91) (Ping timeout: 256 seconds)
[09:16:34] *** Joins: dabbill (~dabbill@174.31.65.254)
[09:32:13] *** Quits: kyshoc (~kyshoc@user/kyshoc) (Quit: ZNC 1.8.2 - https://znc.in)
[09:32:46] *** Joins: kyshoc (~kyshoc@user/kyshoc)
[09:36:29] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[09:37:43] *** Joins: pycurious (~Adium@user/pycurious)
[09:40:10] *** Quits: AtomicElephants (~AtomicEle@user/atomicelephants) (Quit: Leaving)
[09:42:13] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[09:43:09] *** Quits: chodonne (~chodonne@ec2-3-18-56-136.us-east-2.compute.amazonaws.com) (Quit: ZNC - https://znc.in)
[09:44:54] *** Joins: chodonne (~chodonne@ec2-3-18-56-136.us-east-2.compute.amazonaws.com)
[10:05:30] *** Joins: pycurious (~Adium@user/pycurious)
[10:08:07] *** Joins: jazzy (~jaziz@user/jaziz)
[10:09:51] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 252 seconds)
[10:11:11] *** Joins: pycurious (~Adium@user/pycurious)
[10:15:32] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 252 seconds)
[10:21:56] *** Quits: doc (~doc@user/doc) (Ping timeout: 265 seconds)
[10:22:09] *** Joins: doc (~doc@user/doc)
[10:24:11] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:24:44] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[10:29:16] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Remote host closed the connection)
[10:29:35] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[10:30:46] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Remote host closed the connection)
[10:31:05] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[10:32:16] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Read error: Connection reset by peer)
[10:32:35] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[10:33:46] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Remote host closed the connection)
[10:34:05] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[10:35:16] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Remote host closed the connection)
[10:35:35] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[10:36:46] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Remote host closed the connection)
[10:37:14] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[10:38:16] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Remote host closed the connection)
[10:38:35] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[10:39:08] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:39:46] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Read error: Connection reset by peer)
[10:40:05] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[10:41:16] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Remote host closed the connection)
[10:41:35] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[10:42:46] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Read error: Connection reset by peer)
[10:43:05] *** Joins: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be)
[10:44:13] *** Joins: pycurious (~Adium@user/pycurious)
[10:44:46] *** Joins: rvalue (~rvalue@user/rvalue)
[10:46:52] *** Joins: jmd (~user@de.cellform.com)
[10:48:59] *** Quits: andycooper (uid246432@id-246432.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[10:51:25] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[10:51:50] <jmd> When I run "docker image ls" is there any way of getting a precise timestamp for the "CREATED" field?  I want the actual system time, not just something vague like "2 days ago".
[10:53:03] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 256 seconds)
[10:54:02] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[10:54:17] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[10:55:00] <ikke> docker image ls --format '{{.Repository}}:{{.Tag}} {{.CreatedAt}}' 
[10:55:48] <jmd> Thanks
[10:57:20] *** Joins: rvalue (~rvalue@user/rvalue)
[11:12:00] *** Joins: pycurious (~Adium@user/pycurious)
[11:16:13] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 252 seconds)
[11:18:07] *** Quits: imp (~imp@192-141-191-227.alternativaip.net.br) (Quit: imp)
[11:19:53] *** Joins: vidbina_ (~vid@ppp-49-237-4-222.revip6.asianet.co.th)
[11:35:15] *** Joins: rsx (~dummy@ppp-188-174-137-75.dynamic.mnet-online.de)
[11:40:29] *** Quits: monoxane (~monoxane@user/monoxane) (Quit: estoy fuera)
[11:43:20] *** Joins: pycurious (~Adium@user/pycurious)
[11:48:05] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[11:54:03] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[11:55:03] *** Quits: vidbina_ (~vid@ppp-49-237-4-222.revip6.asianet.co.th) (Quit: vidbina_)
[12:06:43] *** Quits: TheSilentLink (~TheSilent@user/thesilentlink) (Ping timeout: 256 seconds)
[12:09:42] *** Joins: TheSilentLink (~TheSilent@user/thesilentlink)
[12:16:27] *** Joins: pycurious (~Adium@user/pycurious)
[12:20:53] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[12:28:05] *** Quits: kostkon (~kostkon@2a02:587:a10f:ccbf:7bf8:4823:9d1e:88be) (Ping timeout: 252 seconds)
[12:29:42] *** Joins: kostkon (~kostkon@2a02:587:a111:3fa2:b03b:2bab:693:6a58)
[12:48:00] *** Joins: pycurious (~Adium@user/pycurious)
[12:56:05] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[12:56:24] <Sayona> Hi, is a way to define variables in mount volumes? - Volumes: "./storage:/home/${USER}"  ... where I need to define USER?
[13:03:31] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[13:18:58] *** Joins: pycurious (~Adium@user/pycurious)
[13:19:15] *** Joins: smeeagle (~smeeagle@2a00:23c8:9611:e600:655c:269a:c0b2:3abd)
[13:23:27] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 252 seconds)
[13:23:59] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[13:24:50] *** Quits: LiENUS (~quake@108-242-135-2.lightspeed.btrgla.sbcglobal.net) (Quit: ZNC 1.8.2 - https://znc.in)
[13:25:02] *** Joins: LiENUS (~quake@108-242-135-2.lightspeed.btrgla.sbcglobal.net)
[13:25:29] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[13:29:59] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[13:37:36] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[13:45:39] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[13:49:56] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Client Quit)
[13:51:37] *** Joins: monoxane (~monoxane@user/monoxane)
[13:55:43] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 252 seconds)
[13:55:53] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[13:58:25] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:16:14] *** Joins: pabed2 (~Thunderbi@89.37.15.34)
[14:26:02] <jmd> How can I see the full command that a container is running?  (--format='{{.Command}}' just gives the first 20 or so chars and an ellipsis)
[14:28:57] <ikke> jmd: probably with inspect rather than ls?
[14:36:49] *** Joins: rvalue (~rvalue@user/rvalue)
[14:48:41] *** Joins: zitter (~danilo@host-79-22-181-75.retail.telecomitalia.it)
[15:10:58] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[15:12:30] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Read error: Connection reset by peer)
[15:13:41] *** Joins: MaximB (~MaximB@87.68.165.151)
[15:16:57] <geirha> jmd: add --no-trunc
[15:18:33] *** Parts: MaximB (~MaximB@87.68.165.151) ()
[15:24:58] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[15:26:04] <jmd> geirha: Thanks
[15:27:23] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Ping timeout: 252 seconds)
[15:30:04] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[15:30:44] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Read error: Connection reset by peer)
[15:31:18] *** Joins: maret (~maret@195.12.158.102)
[15:31:42] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:33:41] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[15:46:50] *** Joins: luva (~luva@37.120.197.36)
[16:02:38] *** Quits: smeeagle (~smeeagle@2a00:23c8:9611:e600:655c:269a:c0b2:3abd) (Quit: smeeagle)
[16:07:21] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[16:17:26] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 252 seconds)
[16:21:55] *** Joins: hazmi35 (~Hazmi35@36.78.24.148)
[16:24:06] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[16:27:16] *** Joins: minimal (~minimal@user/minimal)
[16:30:13] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 256 seconds)
[16:32:41] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[16:33:24] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[16:34:46] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[16:37:43] *** Joins: node1 (~node1@user/node1)
[16:49:00] *** Quits: kostkon (~kostkon@2a02:587:a111:3fa2:b03b:2bab:693:6a58) (Ping timeout: 268 seconds)
[16:51:28] *** Joins: kostkon (~kostkon@2a02:587:a10c:b4c7:fd34:1163:4629:119a)
[16:56:35] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[17:01:48] <dob1> from security point of view adding an user to the docker group is like giving it access to any file owned by root,  can I prevent or blacklist some directories to be mounted as volume ?
[17:02:20] <ikke> no
[17:03:24] <ikke> I don't see any options in dockerd to do that
[17:03:25] <dob1> running a docker (compose) container with an user with no shell can help this ?
[17:03:39] <ikke> no
[17:04:07] <ikke> You can explicitly execute a shell as a user, you are not logging in as a user
[17:05:44] <dob1> I don't understand if it's a false problem and I am overthinking it
[17:06:20] <ikke> Maybe explain what you are trying to do / achieve
[17:07:08] <dob1> my concern is that if I run a service via docker and someone compromise it, what can they do?  nothing if I don't mount any directory with sensitive data, and they can't access the real user or real system
[17:08:02] <ikke> If they know some epxloit they could try to abuse that to get access to the OS
[17:09:04] <dob1> yes this is true too
[17:10:48] <ikke> So your sucurity should not soly rely on containers being secure, but it does add another layer they need to traverse
[17:10:50] *** Quits: archpc (~archpc@user/archpc) (Quit: vibe check)
[17:12:23] *** Joins: archpc (~archpc@user/archpc)
[17:12:27] <dob1> ikke, for example?
[17:13:35] <ikke> Don't run applications as root in containers for example, and look into user namespaces 
[17:15:23] <dob1> I take a look
[17:29:42] *** Quits: remolej (~kenoba@user/kenoba) (Ping timeout: 268 seconds)
[17:30:03] *** Joins: remolej (~kenoba@user/kenoba)
[17:44:30] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[17:58:04] *** Quits: node1 (~node1@user/node1) (Ping timeout: 256 seconds)
[18:00:23] *** Joins: imakestuff (~imakestuf@104.236.49.91)
[18:01:08] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:02:48] *** Quits: dmalteseknight (~dmaltesek@user/dmalteseknight) (Quit: WeeChat 3.3)
[18:02:52] <rawtaz> dob1: regarding your first question, if you truly need individual users to run docker commands, instead of adding them to the docker group configure sudo to allow them to run *specific* docker commands
[18:04:22] <rawtaz> dob1: regarding "inside the container" theres a lot to be said about security and you should take the basic precautions, theres a lot of info about that on the net
[18:05:02] <rawtaz> you should consider everything running in the container to be a process running on your system regardless of docker or not (effectively the same as dont rely on the containerization for security)
[18:06:03] <bencc1> I run several containers that brings the cpu close to 100%
[18:06:17] <bencc1> will the cpu automatically boost the clock to handle it?
[18:06:32] <bencc1> how can I tell when I really maxed out the cpu?
[18:08:27] <rawtaz> i guess its the same as regardless of docker. docker doesnt do anything in particular with the cpu's ability to upclock itself afaik
[18:08:41] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:08:50] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Killed (NickServ (GHOST command used by Sven_vB_)))
[18:08:52] *** Joins: Sven_vB_ (~sven@user/sven-vb/x-2094958)
[18:08:58] <rawtaz> so the question i guess becomes, when you see that the cpu is running at 100% is it really doing that or can it still somehow raise its internal clock more?
[18:09:09] <bencc1> yes
[18:09:47] <bencc1> this is the server load:
[18:09:52] <bencc1> %Cpu(s): 69.2 us, 11.4 sy, 17.7 ni,  1.6 id,  0.0 wa,  0.0 hi,  0.1 si,  0.0 st
[18:09:54] <rawtaz> i have no idea, i would personally expect that if it runs at 100% it runs at its max capacity (that it would go to by itself)
[18:10:10] <bencc1> but everything seems to be fine
[18:10:18] <rawtaz> why wouldnt it seem fine? :)
[18:10:37] <bencc1> I had a machine with 8 hyper-threads and 6 containers
[18:10:52] *** Joins: Brainium (~brainium@user/brainium)
[18:10:56] <bencc1> created a machine with 32-hyperthreads so I expect to be able to run 24 containers
[18:11:05] <bencc1> but at 16 containers I still get to 100% cpu
[18:11:33] <bencc1> so either I'm not looking at the correct stats or I have a bottlenck somewhere
[18:11:58] <bencc1> I have plenty of RAM and fast nvme with enough space
[18:12:00] *** Quits: zitter (~danilo@host-79-22-181-75.retail.telecomitalia.it) (Read error: Connection reset by peer)
[18:13:55] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[18:14:12] *** Joins: calm-steam (~calm-stea@2a02:810a:980:1400::6ffc)
[18:14:18] <rawtaz> not sure im following. if you see 100% cpu usage then inspect which processes are using the cpu?
[18:22:02] *** Joins: pycurious (~Adium@user/pycurious)
[18:22:04] <bencc1> what I'm saying is that I have a machine with N cpus that can run M containers
[18:22:27] <bencc1> when testing a machine with 4*N cpus I expect to run 4*M containers
[18:22:41] <bencc1> but I can only run ~2*M containers
[18:24:57] <rawtaz> yeah. that doesnt take away the fact that you have to investigate the cpu usage anyway, does it?
[18:25:13] <rawtaz> or are you going to sit there and conclude that you are seeing something unexpected, and not investigate it?
[18:25:35] <rawtaz> i wouldnt expect the load to be that linear, but of course it depends on your workloads in those containers.
[18:26:19] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 252 seconds)
[18:28:50] <bencc1> on one machine I 80% IO unitlization
[18:28:53] *** Quits: imakestuff (~imakestuf@104.236.49.91) (Ping timeout: 252 seconds)
[18:29:00] <bencc1> I don't expect it to be higher then few percents
[18:29:38] <rawtaz> then investigate what process is using that much resources
[18:30:03] <bencc1> ok. I'll search how to do that
[18:31:25] <rawtaz> is it IO or CPU thats the problem?
[18:31:37] <rawtaz> and what OS are you on?
[18:34:19] *** Quits: Brainium (~brainium@user/brainium) (Ping timeout: 256 seconds)
[18:34:37] *** Joins: pycurious (~Adium@user/pycurious)
[18:36:30] <bencc1> I'm using ubuntu
[18:36:52] <bencc1> CPU is the problem. IO looks too high with no reason
[18:37:11] <rawtaz> ok
[18:37:16] <rawtaz> better start with the cpu then :)
[18:38:19] <bencc1> high IO might cause high cpu
[18:39:59] <rawtaz> yeah if it's doing work
[18:42:49] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[18:43:46] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[18:50:09] *** Quits: luva (~luva@37.120.197.36) (Ping timeout: 252 seconds)
[18:59:31] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[19:07:01] *** Joins: gooble_gobble (~gooble_go@ool-457a99e2.dyn.optonline.net)
[19:13:18] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[19:15:27] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:15:38] *** Joins: Hackerpcs (~user@user/hackerpcs)
[19:15:42] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[19:15:46] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[19:16:11] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:18:03] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[19:20:32] *** Quits: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net) (Remote host closed the connection)
[19:20:50] *** Joins: donofrio (~donofrio@c-68-40-123-74.hsd1.mi.comcast.net)
[19:21:54] *** Joins: ani^ (~ani@h109-124-144-165.cust.a3fiber.se)
[19:22:27] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[19:24:30] <ani^> when I go through the "getting-started" tutorial, when I click next to get into the "bind mounts" chapter, there's a connection reset by peer. I checked the logs with "docker logs" and there are no error messages. the container web server is listening on 0.0.0.0. I get a connection reset by peer if I reload the page on any of the chapters.
[19:25:11] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: Textual IRC Client: www.textualapp.com)
[19:31:46] *** Joins: pycurious (~Adium@user/pycurious)
[19:37:48] *** Quits: JimL (~quassel@89-162-2-132.fiber.signal.no) (Ping timeout: 260 seconds)
[19:38:26] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Quit: This computer has gone to sleep)
[19:40:01] *** Quits: rowbots (~dirgeable@h96-60-60-73.arvdco.broadband.dynamic.tds.net) (Ping timeout: 252 seconds)
[19:42:47] <dob1> rawtaz, in my case the user is running docker-compose to run a specific service
[19:45:42] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[19:48:35] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[19:49:10] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Client Quit)
[19:49:27] *** Joins: BSaboia (~bsaboia@187.18.140.125)
[19:50:33] *** Quits: BSaboia (~bsaboia@187.18.140.125) (Read error: Connection reset by peer)
[19:57:07] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Ping timeout: 256 seconds)
[20:03:54] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[20:05:01] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[20:11:22] *** Quits: rsx (~dummy@ppp-188-174-137-75.dynamic.mnet-online.de) (Quit: rsx)
[20:11:30] <rawtaz> dob1: then all they need is docker-compose up and down ;)
[20:12:38] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:12:48] *** Quits: hazmi35 (~Hazmi35@36.78.24.148) (Quit: Konversation terminated!)
[20:13:48] *** Joins: Xeroine (~Xeroine@user/xeroine)
[20:15:54] *** Joins: Mattiasl_ (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[20:16:41] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Ping timeout: 252 seconds)
[20:19:15] *** Quits: fercell (~ferr@185.65.50.222) (Ping timeout: 252 seconds)
[20:19:22] *** Joins: ferr_ (~ferr@78-63-4-13.static.zebra.lt)
[20:26:32] <Xeroine> why is there a limitation to have only one CMD in a Dockerfile?
[20:27:09] *** Quits: TheSilentLink (~TheSilent@user/thesilentlink) (Ping timeout: 256 seconds)
[20:28:24] <ikke> Because it starts only one process
[20:28:49] *** Joins: TheSilentLink (~TheSilent@user/thesilentlink)
[20:28:54] <rawtaz> Xeroine: what makes you feel there can be two CMDs? how would docker use those two CMDs?
[20:29:16] <ikke> that process _can_ be a shell that itself runs other commands
[20:29:57] <Xeroine> oh okay
[20:29:57] *** Quits: Mattiasl_ (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:31:20] <Xeroine> I just thought it would be convenient to edit the Dockerfile to run like 2 scripts or something instead of having to edit the script that runs the scripts on the image
[20:31:29] <rawtaz> Xeroine: look for examples of entryscripts - theyre very common and usually consists of a shell script that is set as the ENTRYPOINT, and that shell script then runs whaever you need running. just dont overdo it, one container for one thing is still the way to go
[20:31:38] <rawtaz> right yeah
[20:32:03] <Xeroine> thanks I'll check it out
[20:32:16] <rawtaz> if that was possible it would be a matter of other thigns as well, e.g. what should constitute the container failing/stopping etc - now it just tracks one process and if it needs to track multiple it becomes much more complex :)
[20:32:23] <rawtaz> anyway yeah it is like ikke said
[20:36:24] *** Joins: pycurious (~Adium@user/pycurious)
[20:37:39] <dob1> rawtaz, docker-compose will use docker, so I don't need to give access to docker commands too?
[20:38:09] <rawtaz> dob1: yes but if you sudo docker-compose up then that will run as the elevated user and whatever it runs will too
[20:38:26] <ikke> and users can do about anything with a docker-compose file
[20:38:27] <rawtaz> the point is that with sudo you can be much more specific about which command (and arguments) you allow them to run as root
[20:38:38] <rawtaz> yes, you have to protect the compose files too
[20:38:48] <rawtaz> and any related files/folders of course
[20:39:43] <rawtaz> but you can narrow it down to e.g. just the up and down commands if you want. and if you want to go even further you could make a script that is like up and down but with some argument that speciifes e.g. which compose app to up and down, if you dont want them to be ablet o do it on any compose file
[20:39:49] <rawtaz> lots you can do :)
[20:40:25] <rawtaz> of course another option is to run docker rootless or run something else like podman which does that by default, or some other engine thing
[20:41:18] * rawtaz &
[20:42:04] <dob1> at least limiting the up and down seems a good point,  so something like user ALL=(ALL) NOPASSWD: /usr/local/bin/docker-compose up, usr/local/bin/docker-compose down  
[20:42:13] <dob1> I suppose can work
[20:42:24] *** Joins: ss4 (~wootehfoo@user/wootehfoot)
[20:42:36] <ikke> dob1: what prevents them from overwriting /etc/sudoers and allowing them to do everything?
[20:43:04] <dob1> they will no be in the sudo group
[20:43:15] *** Quits: Portugol9 (~Portugol9@user/portugol9) (Remote host closed the connection)
[20:43:25] <ikke> they can make a docker-compose.yml file that mounts /etc/sudoers and overwrite it
[20:43:30] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[20:43:39] <ikke> or /etc/groups and add them to the sudo / wheel group
[20:43:45] <dob1> ok, got it
[20:58:38] *** Quits: maret (~maret@195.12.158.102) (Quit: maret)
[21:01:38] *** Joins: Brainium (~brainium@user/brainium)
[21:06:23] *** Quits: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[21:06:29] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[21:07:56] *** Joins: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net)
[21:10:11] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[21:12:15] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:12:16] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[21:13:49] *** Joins: node1 (~node1@user/node1)
[21:18:44] <tabakhase> dob1 that looks horrific..
[21:19:02] <tabakhase> docker access == root. there is nothing to shuffle on this
[21:23:45] *** Joins: DoofusCanadensis (~DoofusCan@2604:3d09:47c:f970:e806:2000:4277:d3f3)
[21:28:24] *** Quits: linsux (~metbsd@user/linsux) (Quit: byeircer)
[21:33:37] *** Joins: linsux (~metbsd@user/linsux)
[21:35:09] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[21:39:59] <ghostboarder> guys, trying to use docker-compose. Is it as simple as running the docker-compose command in the dir where your .yml is? Cause it isnt working for me in this case
[21:40:26] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:40:38] <larsks> ghostboarder: what's the exact command you're running, and what is happening?
[21:40:39] <ikke> yes, that should suffice
[21:40:49] <ikke> and yes, providing more details would help
[21:40:50] <Xeroine> https://bpa.st/N3TQ here's my initial Dockerfile and the commands I ran. when the 2nd build command is run the 1st test image is renamed to repo <none> and tag <none> right? is there any way to remove the previous image automatically when building or should I just run "docker image prune" after every "docker build" command?
[21:40:56] <ghostboarder> pi@raspberrypi:/ $ docker-compose up -d
[21:40:56] <ghostboarder> -bash: docker-compose: command not found
[21:40:56] <larsks> (and probably, what does your docker-compose.yml look like? pastebin it, please)
[21:41:07] <larsks> ghostboarder: it looks like you haven't installed docker-compose.
[21:41:20] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[21:41:26] <ghostboarder> hm. i thought it would be installed with docker
[21:42:03] <ikke> ghostboarder: it used to be a separate project, and on many distros that means you still need to install it seperately
[21:42:14] <ghostboarder> gotcha. doing now
[21:48:03] <tabakhase> Xeroine yes&no - likely should be a scheduled thing, but kinda shouldnt be needed "after every build" (and one would optimize images in that regard to too only rebuild the parts that are needed (it hitting cache) and then its "generally" not rly an issue
[21:48:56] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Ping timeout: 260 seconds)
[21:49:31] <Xeroine> oh
[21:50:58] <Xeroine> so if I had a massive Dockerfile and I've built a similar image before with the same repo and tag name it would now build faster if I didn't delete the <none> images?
[21:51:38] *** Quits: DoofusCanadensis (~DoofusCan@2604:3d09:47c:f970:e806:2000:4277:d3f3) (Quit: So as you can see from this flowchSQUIRREL!!)
[21:51:59] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[21:56:01] <njka> hrm
[21:56:17] <njka> 1 container... one process... old-school docker best practices :)
[21:56:29] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[21:56:29] <njka> ( which is really what you want anyway )
[21:56:30] <njka> :)
[21:57:16] * njka poke the rawtaz homie
[21:58:36] <tabakhase> Xeroine blazing fast even - imagine some php-app, your first layers be "huge" (php from the upstream, but you need to add say the php-mysqli module and a few others - those layers can be reused for "weeks" - few lines down, composer.json gets copied and installed, that is a nother "biggish" layer, but also will get reused until composer.json/lock change, so you maybe get a few days of use from 
[21:58:36] <tabakhase> it - now you actually copy the code THIS layer will blow up every single time --- but its just 5mb or so now, so who cares ;-) -- first build 15 minutes, second build 4 seconds
[21:59:17] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[21:59:18] <tabakhase> (thats obvs just an example, for PHP-dev you likely wouldnt "build" with code at all, and just use a bind-mount to have hot-reloading :P)
[21:59:58] <Xeroine> lol that's cool. thanks.
[22:00:01] <njka> unless you specifiy --no-cache to docker build
[22:00:03] <tabakhase> ((there the logic kinda shift from "build a docker image for my app" to "use docker as runtime for apache/php/whatever for those files from my disk"))
[22:01:32] <ikke> Often I have a separate docker-compose service that mounts the local files into the image for live coding
[22:01:51] <ikke> while the image still copies the files in so that I can ship it with the iamge
[22:01:53] <ikke> image*
[22:02:18] <ikke> (so the volume shadows the files in the image)
[22:02:27] <ikke> (bind mount)
[22:02:35] <tabakhase> guess one extra note with this, docker only considers "images it build itself" as valid cache records -- so in CI pipelines or such youll see people first pull down there current image, and then build with "--cache-from current:image" to "allow docker to consider this as cache" --- often then coupled with a "--no--cache" build on a schedule to still get the upper layers updated "from time to 
[22:02:35] <tabakhase> time"
[22:04:41] <ikke> tabakhase: how does --cache-from current:image help?
[22:04:46] <tabakhase> ye nothing wrong with just "abusing your prod image with bindmounting the devcode in it" either - super common
[22:04:51] <badeball> is it the client or the daemon that reads ~/.docker/config.json and needs to be authenticated?
[22:05:07] <njka> tabakhase: hehehehehe
[22:05:16] <tabakhase> ikke as said, it "allows a otherwise 'untrusted' image to be used as cache layers"
[22:06:17] <ikke> Yeah, but I mean, how would it be used as a cache? How does it know what layers it can skip and what layers would need to be rebuilt?
[22:07:00] <tabakhase> its a merkle tree
[22:07:04] <tabakhase> like bitcoin :D
[22:07:16] <tabakhase> but for the "step" and the "image before it"
[22:07:47] <njka> yeah, it's just a bunch of hashes
[22:08:07] <ikke> Is the step command hashed and compared?
[22:09:17] <tabakhase> thats kinda how you can think of it yes (together with for example the checksums of files used in ADD/COPY)
[22:09:25] <ikke> right
[22:12:05] <tabakhase> but afaik those are calculated "once" - on the build and after that always just read from the json files with full trust -- so one could "mess with this" ((like, i could "shove a faked debian:latest layer into your local store if you blindly believe my download"))
[22:13:08] <tabakhase> how practical that actually is is prob its own discussion, no clue :D
[22:14:35] <njka> i think the hashes include the mtime's of files tho... which can change
[22:16:31] *** Quits: ani^ (~ani@h109-124-144-165.cust.a3fiber.se) (Quit: Leaving)
[22:17:08] *** Quits: Tach (~Tach@user/tach) (Ping timeout: 252 seconds)
[22:17:51] <tabakhase> in that spirit - time for the weekly "have a .dockerignore if you build from the root of your repo and kick the '.git' folder outa there!"-reminder :D
[22:20:13] <njka> i was thinking more along the lines of if one's dockerfile manipulates files during the build... that will trigger new hashes
[22:20:28] <njka> from the new mtime's
[22:39:17] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:43:39] *** Quits: l4yer (~l4yer@195.181.170.210) (Ping timeout: 256 seconds)
[22:44:13] *** Quits: bolt (~r00t@user/bolt) (Ping timeout: 256 seconds)
[22:48:47] *** Joins: lilgopher (~textual@2601:241:8000:38f0:18f7:9b3b:b7b0:df5e)
[22:57:29] *** Joins: bolt (~r00t@user/bolt)
[22:58:11] *** Joins: nakilon (~nakilon@user/nakilon)
[22:58:48] <nakilon> I do: docker build --build-arg FROM=ruby:2.3-alpine ...
[22:59:00] <nakilon> and I have FROM ${FROM:-alpine}
[22:59:18] <nakilon> but it uses "alpine" instead of "ruby:2.3-alpine", why?
[22:59:35] <ikke> Do you have ARG FROM in front of that line?
[22:59:59] <ikke> https://docs.docker.com/engine/reference/builder/#arg
[23:00:16] <ikke> https://docs.docker.com/engine/reference/builder/#understand-how-arg-and-from-interact
[23:00:57] <nakilon> thanks! it's now working
[23:01:02] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:02:00] *** Joins: node1 (~node1@user/node1)
[23:07:25] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[23:08:21] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:12:17] *** Joins: l4yer (~l4yer@217-64-151-10.pool.ovpn.com)
[23:12:20] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:13:31] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:14:20] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:15:32] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:16:21] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:17:33] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:18:20] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:19:31] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:20:23] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:21:34] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:22:34] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:23:45] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:24:44] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:25:31] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Ping timeout: 252 seconds)
[23:25:55] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:26:53] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:28:07] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:29:06] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:30:18] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:31:15] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:32:27] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:33:27] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:34:40] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:35:40] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:36:52] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:37:45] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:38:56] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:39:49] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:40:59] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:41:54] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:43:05] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:44:05] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:45:17] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:45:36] *** Joins: Tach (~Tach@user/tach)
[23:46:05] <Tach> Hello is it possible to use something like LDAP for REGISTRY_AUTH when you run your own registry ?
[23:46:13] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:47:25] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:47:38] *** Parts: nakilon (~nakilon@user/nakilon) (rasengan did nothing wrong)
[23:48:22] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:48:53] *** Quits: brw (~bas@haring.bas.sh) (Quit: The Lounge - https://thelounge.chat)
[23:49:11] *** Quits: Brainium (~brainium@user/brainium) (Quit: Konversation terminated!)
[23:49:12] *** Joins: Brainium_ (~brainium@user/brainium)
[23:49:33] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:49:34] *** Joins: DoofusCanadensis (~DoofusCan@2604:3d09:47c:f970:e806:2000:4277:d3f3)
[23:50:11] *** Joins: brw (~bas@haring.bas.sh)
[23:50:23] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[23:51:34] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[23:51:45] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (K-Lined)
