[00:02:26] <FromDiscord> <SoicBR> It worked
[00:03:03] <FromDiscord> <SoicBR> thanks
[00:12:39] <FromDiscord> <Schelz> Any idea how to i could create a browser app in nim
[00:13:20] <FromDiscord> <Schelz> like an exe that open a new tab in browser with an web page hosted with nim on 127.0.0.1 ( for example)
[00:20:23] <FromDiscord> <Yardanico> In reply to @Schelz "like an exe that": https://github.com/marcomq/nimview
[00:21:06] <FromDiscord> <Yardanico> and if you just want a _web app_, use any http server
[00:21:33] <FromDiscord> <Yardanico> from stdlib's https://nim-lang.org/docs/asynchttpserver.html to jester and prologue
[00:21:38] <FromDiscord> <Yardanico> since a "browser app" is just a web page
[00:23:24] <FromDiscord> <Schelz> <3
[00:25:43] <FromDiscord> <planetis> also https://nim-lang.github.io/Nim/browsers.html
[00:26:10] <FromDiscord> <Yardanico> this is quite different though
[00:26:16] <FromDiscord> <Yardanico> its just for opening a browser :)
[00:30:12] <FromDiscord> <planetis> i dont really know what he meant 😅
[00:59:01] *** Quits: neurocyte0 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[01:00:42] *** Joins: neurocyte09 (~neurocyte@user/neurocyte)
[01:17:19] <FromDiscord> <Zonifer> @Yardanico A day or two ago you were helping me with getting the contents of a post form into a variable. `var foo = req.body` do you have any links for `req.`? So I can see what else I can do with it?
[01:18:57] <NimEventer> New thread by Niminem: Am I allowed to add this feature to stdlib module?, see https://forum.nim-lang.org/t/8778
[01:18:59] <FromDiscord> <Yardanico> https://nim-lang.org/docs/asynchttpserver.html#Request
[01:20:18] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[01:20:26] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[01:21:19] *** Gustavo6046_ is now known as Gustavo6046
[01:32:13] <FromDiscord> <SirOlaf> sent a code paste, see https://play.nim-lang.org/#ix=3L9T
[01:33:41] <FromDiscord> <Elegantbeef> Why wouldnt it be allowed
[01:35:01] <FromDiscord> <SirOlaf> Just looks weird. It also behaves differently when you only give it one parameter vs more
[01:36:30] <FromDiscord> <Elegantbeef> Indeed, i suppose there is some argument that varargs of the same type shouldnt be next to eachother, but i you write code like this it's your own fault
[01:36:31] <FromDiscord> <SirOlaf> sent a code paste, see https://play.nim-lang.org/#ix=3L9U
[01:38:17] <FromDiscord> <SirOlaf> sent a code paste, see https://play.nim-lang.org/#ix=3L9V
[01:38:37] <FromDiscord> <SirOlaf> It tries to coerce them into each other
[01:38:45] <FromDiscord> <SirOlaf> And it succeeds in a strange way
[01:39:27] <FromDiscord> <Elegantbeef> really you're better doing `b: openArray[int] = []`
[01:39:59] <FromDiscord> <SirOlaf> Not using this for anything, am trying to wrap my head around the compiler code and stumbled upon weird varargs features
[01:40:22] <FromDiscord> <SirOlaf> https://play.nim-lang.org/#ix=3L9X
[01:40:58] <FromDiscord> <Elegantbeef> Ah nice they're broken
[01:41:16] <FromDiscord> <SirOlaf> Very unexpected output, isn't it
[01:42:13] <FromDiscord> <kevin> Is it possible to get a file's owner with Nim?
[01:42:42] <FromDiscord> <kevin> I thought there would be an entry in `os`'s FileInfo type : https://nim-lang.org/docs/os.html#FileInfo
[01:42:47] <FromDiscord> <Elegantbeef> It is but i dont think there is a cross platform api
[01:42:56] <FromDiscord> <kevin> booooo 😦
[01:44:48] <FromDiscord> <SirOlaf> You can even cause sigsegv with those varargs
[01:45:29] <FromDiscord> <SirOlaf> If the 0 is changed to a 1 it tries to interpret it as a string pointer
[01:45:46] <FromDiscord> <Elegantbeef> Yea seems the fight over parameters
[01:46:55] <FromDiscord> <SirOlaf> Actually, it crashes with a single vararg too
[01:47:28] <FromDiscord> <SirOlaf> I think varargs just break type safety in addition to competing over params
[01:48:03] <FromDiscord> <SirOlaf> Nevermind, ignore that
[01:48:07] <FromDiscord> <SirOlaf> Only breaks with more than one
[01:48:09] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3L9Z yea it's clearly getting an int on the heap i think https://play.nim-lang.org/#ix=3L9Z
[01:48:14] <FromDiscord> <Elegantbeef> Shit doublt paste
[01:49:02] <FromDiscord> <SirOlaf> It seems to just perform a cast[T]
[01:49:10] <FromDiscord> <SirOlaf> Somehow
[01:49:45] <FromDiscord> <Elegantbeef> They fight over parameters, without proper logic over which gets which
[01:50:06] <FromDiscord> <SirOlaf> Does this deserve another issue?
[01:50:13] <FromDiscord> <Elegantbeef> Probably
[01:51:43] <FromDiscord> <Elegantbeef> It'd never be accepted but i'd probably say any usage of varargs without a convert should be removed 😀
[01:51:53] <FromDiscord> <Elegantbeef> `openarray[T] = []` is just more sane
[01:52:00] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: leaving)
[01:56:05] *** Quits: noeontheend (~noeonthee@12.205.205.130) (Ping timeout: 256 seconds)
[01:56:26] <FromDiscord> <SirOlaf> Opened an issue. Wonder if there's more strange stuff like that in the cracks of the compiler
[01:57:54] <FromDiscord> <Elegantbeef> Probably
[01:58:53] <FromDiscord> <Elegantbeef> Many issues in the nim compiler are due to someone forgetting X ability exists
[01:59:28] <FromDiscord> <SirOlaf> Fair, the thing is massive
[02:04:46] <FromDiscord> <Elegantbeef> Time to get those PRs out to fix varargs you have 3 hours 😛
[02:09:08] <FromDiscord> <SirOlaf> I wish, but can barely comprehend half of this. Almost every variable is like a single letter 👺
[02:10:02] <FromDiscord> <Elegantbeef> You arent supposed to comprehend it you just throw echo statements until you get what's happening
[02:11:17] <FromDiscord> <SirOlaf> Yep, time to randomly place echoes into one of the big semcheck functions
[02:11:55] <FromDiscord> <SirOlaf> Hope you like echoes, because you'll be placing a lot of them
[02:12:11] <FromDiscord> <Elegantbeef> Eh it's not that bad
[02:12:20] <FromDiscord> <Elegantbeef> Go to vararg processing and see what it does
[02:14:03] <FromDiscord> <SirOlaf> I'm sure you know which file to look in?
[02:14:23] <FromDiscord> <Elegantbeef> Perhaps semtypes 191
[02:14:40] <FromDiscord> <Elegantbeef> Though probably more likely is semoverloadedcall
[02:15:11] <FromDiscord> <Elegantbeef> which is semcall line585
[02:15:22] <FromDiscord> <Elegantbeef> There is also the chance this is just a generation issue
[02:16:25] <FromDiscord> <SirOlaf> Probably? Issue is that they share a memory location or something
[02:16:40] <FromDiscord> <Elegantbeef> Indeed
[02:17:09] <FromDiscord> <Elegantbeef> I'd say try it in JS to see if it behaves teh same
[02:17:49] <FromDiscord> <SirOlaf> In fact, they are the same address
[02:18:15] <FromDiscord> <SirOlaf> sent a code paste, see https://play.nim-lang.org/#ix=3La3
[02:18:19] <FromDiscord> <SirOlaf> Gives same thing twice
[02:18:48] <FromDiscord> <SirOlaf> https://play.nim-lang.org/#ix=3La4
[02:19:19] <FromDiscord> <SirOlaf> So my guess is that it's a assignment issue
[02:19:30] <FromDiscord> <SirOlaf> Where the compiler assumes there is only one vararg param
[02:21:19] <FromDiscord> <Elegantbeef> Yep behaves the same on JS
[02:21:28] <FromDiscord> <Elegantbeef> well "same"
[02:22:22] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3La6
[02:22:44] <FromDiscord> <SirOlaf> Why are both int
[02:22:45] <FromDiscord> <Elegantbeef> The generation of the varargs is wrong
[02:22:59] <FromDiscord> <Elegantbeef> JS isnt C
[02:29:01] <FromDiscord> <SirOlaf> Do you also know where it is generated? I am very lost
[02:29:59] <FromDiscord> <Elegantbeef> I'm trying to find it
[02:30:36] <FromDiscord> <SirOlaf> Thought you had all of nim memorized with how quickly you got those two functions before 😛
[02:30:38] <FromDiscord> <Elegantbeef> transf gets `["a", 0]` for both parameters
[02:31:11] <FromDiscord> <SirOlaf> Nice, a file I haven't even considered looking at for anything until now
[02:31:27] <FromDiscord> <Elegantbeef> Well transf is the last file before generation
[02:31:31] <FromDiscord> <Elegantbeef> So i was seeing what it got
[02:31:58] <FromDiscord> <SirOlaf> Well yeah, but I don't know that. Am a little compiler baby
[02:32:08] <FromDiscord> <Elegantbeef> Join the club
[02:34:12] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[02:35:20] <FromDiscord> <Elegantbeef> Presently checking if `semOverloadedCall` has the same
[02:37:14] <FromDiscord> <Elegantbeef> Ahah line 596 in semcalls is the path to getting two bad arrays
[02:37:15] <FromDiscord> <Elegantbeef> So `semResolvedCall` is creating two arrays
[02:37:17] <FromDiscord> <Elegantbeef> but not doing an offset
[02:39:39] <FromDiscord> <Elegantbeef> Ok so `x.call` in `semResolvedCall` is what's causing the array to get created incorrectly
[02:40:09] <FromDiscord> <Elegantbeef> Now we get to find where
[02:40:09] <FromDiscord> <SirOlaf> Does that leave a dangling array?
[02:40:33] *** Joins: tiorock (~rc@192.12.114.203)
[02:40:33] *** Quits: tiorock (~rc@192.12.114.203) (Changing host)
[02:40:33] *** Joins: tiorock (~rc@user/rockcavera)
[02:40:33] *** rockcavera is now known as Guest1783
[02:40:33] *** tiorock is now known as rockcavera
[02:41:08] <FromDiscord> <SirOlaf> Or is this stage too early for that
[02:41:15] <FromDiscord> <SirOlaf> (edit) "Or is this ... stage" 03added "compiler"
[02:41:17] <FromDiscord> <Elegantbeef> Ah that's the candidate from `resolveOverloads`
[02:41:17] <FromDiscord> <Elegantbeef> 😀
[02:41:22] <FromDiscord> <Elegantbeef> Compiler is fun!
[02:41:45] <FromDiscord> <Elegantbeef> It creates 2 arrays with the parameters
[02:42:19] <FromDiscord> <Elegantbeef> So for some reason the candidate created inside `semOverloadedCall` is creating 1 array and assigning it twice
[02:42:36] <FromDiscord> <SirOlaf> Nice
[02:42:42] <FromDiscord> <Elegantbeef> Finding where the array is created is key to resolving this issue
[02:43:25] *** Quits: Guest1783 (~rc@user/rockcavera) (Ping timeout: 240 seconds)
[02:46:58] <FromDiscord> <SirOlaf> This does happen to be the exact path I was looking at
[02:47:29] <FromDiscord> <SirOlaf> When I was exploring before
[02:50:15] <FromDiscord> <SirOlaf> matchesAux is probably the evil one
[02:50:40] <FromDiscord> <SirOlaf> But I'm biased because that's the only function I kinda understand
[02:51:37] <FromDiscord> <Elegantbeef> the issue branch starts line 2489 in sigmatch
[02:51:38] <FromDiscord> <Elegantbeef> That atleast points you to where it needs fixed, how to fix it is another question
[02:51:54] <FromDiscord> <SirOlaf> Yeah, that's matchesAux
[02:51:56] <FromDiscord> <Elegantbeef> That loop iterates over every passed in argument and assigns it to parameter
[02:52:48] <FromDiscord> <Elegantbeef> Oh is the issue just they iterate over `n` instead of `nOrig`
[02:56:41] *** Joins: acheam (feb1145348@kisslinux/acheam)
[02:57:57] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[03:02:45] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cdd1:fb1a:1d51:220e) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:07:17] <FromDiscord> <Elegantbeef> Well for single parameters i fixed it but adding more it failed, i could be wrong but his may need an iteration over the arguments adding them until a type that doesnt match is hit, unless there is a converter
[03:11:28] <FromDiscord> <SirOlaf> That sounds a lot more complicated than it initially seemed
[03:12:28] <FromDiscord> <Elegantbeef> Well right now what it does is iterate over all parameters and doesnt create a new container when it hits a new variable
[03:12:50] <FromDiscord> <Elegantbeef> So you just need to make the if statement at line 2492 create the container, so i guess i doesnt need iteration
[03:13:31] <FromDiscord> <Elegantbeef> Just a check of "Hey is this the same type, no? Do we have a converter proc, no? Ok drop this and move to next parameter"
[03:20:50] *** Parts: acheam (feb1145348@kisslinux/acheam) (Konversation terminated!)
[03:22:23] *** Quits: krux02 (~krux02@p200300e81723dd00b48b627b8314596f.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:30:40] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3Laq
[03:31:52] <FromDiscord> <Patitotective> (edit) "https://play.nim-lang.org/#ix=3Laq" => "https://play.nim-lang.org/#ix=3Las"
[03:32:04] <FromDiscord> <Patitotective> (edit) "https://play.nim-lang.org/#ix=3Las" => "https://paste.rs/wE4"
[03:36:09] <FromDiscord> <Elegantbeef> The pointer is typeless
[03:36:13] <FromDiscord> <Elegantbeef> What type is it supposed to be
[03:37:44] <NimEventer> New Nimble package! base45 - Base45 encoder and decoder, see https://git.sr.ht/~ehmry/base45
[03:38:32] <FromDiscord> <Elegantbeef> You should do `cast[ptr YourType](data)[]`
[03:38:33] <FromDiscord> <Patitotective> In reply to @Elegantbeef "What type is it": I'm passing to it an object
[03:38:58] <FromDiscord> <Patitotective> In reply to @Elegantbeef "You should do `cast[ptr": where
[03:39:03] <FromDiscord> <Elegantbeef> Then you need to cast it to a ptr of that object
[03:39:33] <FromDiscord> <Elegantbeef> when you go to use the data you were given
[03:42:23] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3Lax
[03:43:09] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3Lay
[03:43:13] <FromDiscord> <Patitotective> (edit) "https://play.nim-lang.org/#ix=3Lax" => "https://play.nim-lang.org/#ix=3Laz"
[03:45:58] <FromDiscord> <impbox [ftsf]> argh, i can never figure out how to generate a lookup table at compile time
[03:46:30] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://play.nim-lang.org/#ix=3LaA
[03:47:18] <FromDiscord> <Elegantbeef> const
[03:48:15] <FromDiscord> <impbox [ftsf]> doesn't const have to be initialised?
[03:48:26] <FromDiscord> <impbox [ftsf]> i can't fill in a const
[03:52:03] <FromDiscord> <Elegantbeef> I mean why does it matter
[03:52:15] <FromDiscord> <impbox [ftsf]> uh... i'm just trying to figure out how to do this
[03:52:23] <FromDiscord> <impbox [ftsf]> how would you do it with const?
[03:53:27] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3LaB
[03:53:30] <FromDiscord> <impbox [ftsf]> "compileTime variables are available at runtime too. This simplifies certain idioms where variables are filled at compile-time (for example, lookup tables) but accessed at runtime" trying to figure out the simple idiom for filling a lookup table at compile time
[03:54:47] <FromDiscord> <impbox [ftsf]> thanks beef <3
[03:55:06] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3LaC
[03:55:19] <FromDiscord> <Elegantbeef> But it's best just make the procedure like i did since there isnt any reason to annotate it a compiletime proc/variable imo
[03:56:23] <FromDiscord> <impbox [ftsf]> yeah makes sense, was just going by what the manual said with regards to filling in variables at compile time, which after your example seems like the manual is misleading
[03:57:46] <FromDiscord> <Elegantbeef> I think it's not misleading just doesnt work always
[03:58:38] <FromDiscord> <Elegantbeef> That works for instance
[03:58:40] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3LaD
[03:59:18] <FromDiscord> <impbox [ftsf]> misleading in that, you shouldn't do this because that's not the simple idiomatic way
[04:01:46] <NimEventer> New Nimble package! nimdenter - A tool for people who don't like Nim's indentation-based syntax, see https://github.com/xigoi/nimdenter
[04:02:11] <FromDiscord> <impbox [ftsf]> downloads another language?
[04:02:33] <FromDiscord> <Elegantbeef> No it's just commented out `{}`s
[04:02:40] <FromDiscord> <Elegantbeef> Uses them to reason indention
[04:03:01] <FromDiscord> <impbox [ftsf]> so i see...
[04:07:18] <FromDiscord> <congusbongus> looks like BCPL in a way
[04:10:07] <FromDiscord> <huantian> Can I run a bunch of async functions concurrently, with a max number running at once?↵I was thinking of trying to do it by chaining callbacks, but not sure if that's the proper way
[04:10:49] <FromDiscord> <Elegantbeef> I swear i heard this question before
[04:11:06] <FromDiscord> <huantian> I asked it somewhere in the past I think
[04:11:23] <FromDiscord> <Elegantbeef> I dont use async so can only nod
[04:11:50] <FromDiscord> <huantian> I'd assume async is the right thing to use for this and not threading too right
[04:11:57] <FromDiscord> <congusbongus> async is single-threaded isn't it? So it's not actually running at once
[04:12:01] <FromDiscord> <Elegantbeef> Depends on what you're limited by
[04:12:08] <FromDiscord> <Elegantbeef> If you're limited by IO then async is right
[04:12:16] <FromDiscord> <Elegantbeef> If you're limited by cpu then threading is right
[04:12:27] <FromDiscord> <huantian> ok that makes sense
[04:13:11] <FromDiscord> <congusbongus> Raymond Hettinger did a good talk on async vs threading vs multiprocessing
[04:26:19] <FromDiscord> <huantian> hm it seems as if httpclient is not having a good time with multiple downloadFiles at the same time
[04:26:48] <FromDiscord> <Elegantbeef> async or sync?
[04:26:52] <FromDiscord> <huantian> async
[04:27:06] <FromDiscord> <impbox [ftsf]> are you using a different client for each download?
[04:27:09] <FromDiscord> <Elegantbeef> Different clients?
[04:27:15] <FromDiscord> <huantian> should I be?
[04:27:17] <FromDiscord> <Elegantbeef> God dammit imp
[04:27:26] <FromDiscord> <huantian> sniped
[04:27:29] <FromDiscord> <Elegantbeef> Yes you should two concurrent connections waiting for data sounds horrid
[04:27:55] <FromDiscord> <Elegantbeef> Atleast i think you should
[04:31:48] <NimEventer> New Nimble package! jalali_nim - Jalili <=> Gregorian date converter, originally a copy of http://jdf.scr.ir/, see https://github.com/hamidb80/jalili-nim
[04:41:24] <NimEventer> New thread by Oyster: Real type of openArray?, see https://forum.nim-lang.org/t/8779
[04:56:08] *** Joins: tiorock (~rc@192.12.114.203)
[04:57:44] *** Quits: NimBot (~NimBot@mail.nim-lang.org) (Remote host closed the connection)
[04:57:45] *** Quits: tiorock (~rc@192.12.114.203) (Changing host)
[04:57:45] *** Joins: tiorock (~rc@user/rockcavera)
[04:57:45] *** rockcavera is now known as Guest6782
[04:57:45] *** tiorock is now known as rockcavera
[04:58:29] *** Joins: NimBot (~NimBot@mail.nim-lang.org)
[04:59:01] *** Quits: Guest6782 (~rc@user/rockcavera) (Ping timeout: 240 seconds)
[05:14:46] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[06:02:23] *** Joins: neurocyte091 (~neurocyte@user/neurocyte)
[06:04:51] *** Quits: neurocyte09 (~neurocyte@user/neurocyte) (Ping timeout: 256 seconds)
[06:04:52] *** neurocyte091 is now known as neurocyte09
[06:11:16] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:27:57] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[07:40:08] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[08:34:57] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[08:39:56] *** Joins: yitr (~yitr@d206-116-166-213.bchsia.telus.net)
[08:47:59] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[08:56:28] *** mahlon_ is now known as mahlon
[09:16:56] *** Quits: yitr (~yitr@d206-116-166-213.bchsia.telus.net) (Quit: Client closed)
[10:31:37] *** Quits: nac (~nac@user/nac) (Quit: The Lounge - https://thelounge.chat)
[10:32:03] *** Joins: nac (~nac@user/nac)
[10:57:51] *** Joins: dithpri (~dithpri@gateway/tor-sasl/dithpri)
[11:19:09] *** Joins: PMunch (~PMunch@user/pmunch)
[11:23:15] *** Quits: dithpri (~dithpri@gateway/tor-sasl/dithpri) (Ping timeout: 276 seconds)
[12:29:55] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[13:21:38] *** Joins: pro (~pro@user/pro)
[13:21:41] *** Parts: pro (~pro@user/pro) ()
[13:22:26] *** Joins: pro (~pro@user/pro)
[14:18:08] <FromDiscord> <SirOlaf> Varargs really are quite scuffed https://play.nim-lang.org/#ix=3Ld0
[14:18:56] <FromDiscord> <Elegantbeef> Eh that's kinda tobe expected
[14:19:28] <FromDiscord> <SirOlaf> Would be one confusing error to encounter
[14:19:45] <FromDiscord> <Elegantbeef> Sure but `varargs[typedesc]` is a nonsensical collection of ints
[14:19:52] <FromDiscord> <Elegantbeef> In this case
[14:20:09] <FromDiscord> <Elegantbeef> typedesc is a typeclass so it binds to the first one
[14:20:35] <FromDiscord> <SirOlaf> What does that mean?
[14:20:55] <FromDiscord> <Elegantbeef> `varargs[typedesc]` is just a stupid complicated version of `typedesc`
[14:21:19] <FromDiscord> <Elegantbeef> You cannot have a varargs of anything but the first typedesc passed
[14:21:22] <FromDiscord> <Elegantbeef> since it
[14:21:33] <FromDiscord> <Elegantbeef> it's a homogeneous collection\
[14:21:45] <FromDiscord> <SirOlaf> Huh, that's interesting
[14:21:53] <FromDiscord> <SirOlaf> Would have expected typedesc to be more concrete for some reason
[14:23:07] <FromDiscord> <SirOlaf> So why does it fail with a single int type passed?
[14:23:13] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/NCe
[14:23:31] <FromDiscord> <Elegantbeef> It fails on Cgen afaict
[14:24:47] <FromDiscord> <Elegantbeef> The failure is probably just the type not being assigned but eitherway an error should be emitted for `varargs[typedesc]`
[14:25:22] <FromDiscord> <Elegantbeef> It's a pointless collection that can only ever be used at CT
[14:26:13] <FromDiscord> <SirOlaf> Doesn't typeof make it "usable" at runtime
[14:29:11] <FromDiscord> <Elegantbeef> No cause that's a compile time statement
[14:29:17] <FromDiscord> <Elegantbeef> It's a pointless construct
[14:29:40] <FromDiscord> <Elegantbeef> What's the benefit of `[int, int, int]` verses `static int`
[14:29:53] <FromDiscord> <Elegantbeef> If you want `varargs[typedesc]` just do `typedesc[tuple]`
[14:30:50] <FromDiscord> <Elegantbeef> sent a code paste, see https://paste.rs/oP4
[14:31:07] <FromDiscord> <Elegantbeef> `typeof` evaluates the expression and returns the type at compile time
[14:31:57] <FromDiscord> <SirOlaf> sent a code paste, see https://play.nim-lang.org/#ix=3Ld9
[14:32:20] <FromDiscord> <Elegantbeef> Come again?
[14:32:29] <FromDiscord> <SirOlaf> Using tuple does not compile for me
[14:32:38] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3Ldb
[14:32:40] <FromDiscord> <Elegantbeef> Runs fine
[14:32:47] <FromDiscord> <SirOlaf> That's weird
[14:33:24] <FromDiscord> <SirOlaf> Oh, it's because I didn't have a trailing comma
[14:33:34] <FromDiscord> <Elegantbeef> Anyway i'm going to sleep, so this has been "4am rants with beef"
[14:33:59] <FromDiscord> <SirOlaf> gn. I'll keep having fun with weird features
[15:06:38] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cdd1:fb1a:1d51:220e)
[15:11:15] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cdd1:fb1a:1d51:220e) (Client Quit)
[15:23:07] *** Joins: fvs (freevryhei@2600:3c00::f03c:92ff:fe55:ff21)
[16:15:18] <FromDiscord> <Smarc> https://github.com/Smarcy/connect_the_dotfiles/blob/master/src/connect_the_dotfiles.nim↵After adding and then removing a file, listing all saved files (reading StorageFile at the whole) does return nothing although there should be something there. I think I am missing some File-handling stuff I don't know about, could anyone give me a hint?
[16:17:26] *** Joins: rockcavera (~rc@192.12.112.236)
[16:17:27] *** Quits: rockcavera (~rc@192.12.112.236) (Changing host)
[16:17:27] *** Joins: rockcavera (~rc@user/rockcavera)
[16:19:52] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cdd1:fb1a:1d51:220e)
[16:28:58] <FromDiscord> <Rika> what do you mean?
[16:29:36] <FromDiscord> <Rika> your code probably is wrong
[16:30:19] <FromDiscord> <Rika> im gonna check it again wait
[16:32:44] <FromDiscord> <Rika> https://github.com/Smarcy/connect_the_dotfiles/blob/master/src/connect_the_dotfiles.nim#L90 probably that you do not close this file before you move it
[16:32:59] <FromDiscord> <Rika> @Smarc
[16:37:44] <FromDiscord> <Smarc> Ah, because the `defer: f.close()` happens only after the proc?
[16:40:55] <FromDiscord> <Smarc> nevermind, i forgot `defer tmpF.close()` .. you were right, thank you!
[16:47:28] <FromDiscord> <SecureThisShit> sent a long message, see http://ix.io/3Lee
[17:01:03] <FromDiscord> <kaddkaka> In reply to @SecureThisShit "One question: I'm using": If you only have the address of the string and it contains sentinel values, you need to hace some other information on where the the string ends. for example a length?
[17:02:01] <FromDiscord> <Michal Maršálek> I'm want to create a template that would take a type and return a value of that type and I'm struggling a bit. Can someone help, please? https://play.nim-lang.org/#ix=3Lej
[17:02:52] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cdd1:fb1a:1d51:220e) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:03:59] <FromDiscord> <eyecon> What would it return when it would be called by, I dunno, a tuple?
[17:04:08] <FromDiscord> <eyecon> (edit) "by," => "with,"
[17:04:12] <FromDiscord> <Michal Maršálek> Basically something similar to static constants in OOP languages
[17:04:39] <FromDiscord> <Michal Maršálek> In reply to @eyecon "What would it return": I only want it for some types.
[17:08:08] <FromDiscord> <kaddkaka> I took a guess: https://play.nim-lang.org/#ix=3Lej
[17:08:20] <FromDiscord> <kaddkaka> `@[one(typeof S)]`
[17:08:42] <FromDiscord> <kaddkaka> Seems to work, I'm not sure if it's correct.
[17:09:22] <FromDiscord> <kaddkaka> @Michal Maršálek (Thats in response to your code)
[17:09:54] <FromDiscord> <kaddkaka> (edit) "https://play.nim-lang.org/#ix=3Lej" => "https://play.nim-lang.org/#ix=3Leo"
[17:26:14] <FromDiscord> <eyecon> Related question: Is there a way to get `int` from `seq[int]` in generics? I.e. to have a generic function of type S, which is a container of T, and return T?
[17:29:23] <FromDiscord> <eyecon> `proc contained_type[S: openarray](): typedesc = # to return the type of S's elements, e.g. int for seq[int]`
[17:30:50] *** Joins: katsuragi (katsuragi@tilde.institute)
[17:30:55] *** Parts: katsuragi (katsuragi@tilde.institute) (WeeChat 2.9)
[17:33:26] <FromDiscord> <SecureThisShit> In reply to @kaddkaka "If you only have": I also have the length. I could do for example memory allocation and copyMem() but I think there should be a simpler solution or not?
[17:40:29] <FromDiscord> <Solitude> In reply to @eyecon "Related question: Is there": https://nim-lang.org/docs/typetraits.html#genericParams.t%2Ctypedesc
[17:43:08] *** Joins: arkurious (~arkurious@user/arkurious)
[17:55:58] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[17:57:01] <FromDiscord> <Michal Maršálek> In reply to @kaddkaka "Seems to work, I'm": Seems to work, but feels like a workaround.... is there a way to fix the signature of that template so that `S:typedesc`?
[17:59:53] <FromDiscord> <Solitude> In reply to @Michal58 "I'm want to create": i think someone reported that issue...
[18:00:21] *** Quits: pro (~pro@user/pro) (Quit: WeeChat 3.4)
[18:00:34] <FromDiscord> <Michal Maršálek> In reply to @Solitude "i think someone reported": what is the issue? I don't really understand what is happening there
[18:01:21] <FromDiscord> <Solitude> In reply to @Michal58 "what is the issue?": https://github.com/nim-lang/Nim/issues/13527
[18:01:36] <FromDiscord> <Solitude> generics parameters in templates get treated as values
[18:02:26] <FromDiscord> <Solitude> you can change definitions to proc and it works correctly
[18:03:27] <FromDiscord> <Solitude> In reply to @Michal58 "what is the issue?": oh, i reported it https://github.com/nim-lang/Nim/issues/17240
[18:04:09] <FromDiscord> <Michal Maršálek> hmm
[18:08:06] <FromDiscord> <Solitude> In reply to @Michal58 "hmm": you can also use typetraits module to operate directly on typedesc parameter instead of generic parameter https://play.nim-lang.org/#ix=3LeQ
[18:08:57] <FromDiscord> <Michal Maršálek> Thank you will look into that
[18:09:13] <FromDiscord> <Michal Maršálek> Is there a more canonical way to define these "static" constants?
[18:11:03] <FromDiscord> <Solitude> look aight to me. but you are stepping into a minefield combining templates and generics.
[18:12:27] <FromDiscord> <Michal Maršálek> I was using converters initially but they were executed where t was nonsensical so I abondonded them
[18:13:41] <FromDiscord> <Michal Maršálek> Also why debugging my macros, I noticed a minor bug in  `toStrLit` output: https://play.nim-lang.org/#ix=3LeT
[18:14:01] <FromDiscord> <Michal Maršálek> the `` needs backticks around it
[18:14:17] <FromDiscord> <Michal Maršálek> but `toStrLit` doesn't produce them
[18:21:16] <FromDiscord> <eyecon> In reply to @Solitude "https://nim-lang.org/docs/typetraits.html#genericPa": Thanks!
[18:26:56] <FromDiscord> <exelotl> https://play.nim-lang.org/#ix=3Lf4 lol
[18:27:08] <FromDiscord> <exelotl> linked lists are buggy
[18:27:20] <FromDiscord> <Michal Maršálek> In reply to @Solitude "look aight to me.": Thanks
[18:29:37] <FromDiscord> <eyecon> In reply to @Solitude "https://nim-lang.org/docs/typetraits.html#genericPa": I got an internal error while testing this: https://play.nim-lang.org/#ix=t%20wr
[18:30:01] <FromDiscord> <Solitude> In reply to @eyecon "I got an internal": wrong link
[18:30:09] <FromDiscord> <eyecon> Sorry, wrong one
[18:30:10] <FromDiscord> <Solitude> you got played by playground
[18:33:06] <FromDiscord> <eyecon> I meant: https://play.nim-lang.org/#ix=3Lfl
[18:36:22] <FromDiscord> <Solitude> In reply to @eyecon "I meant: https://play.nim-lang.org/#ix=3Lfl": nim moment
[18:36:31] <FromDiscord> <Solitude> feel free to create the issue
[18:41:07] <FromDiscord> <Solitude> In reply to @eyecon "I meant: https://play.nim-lang.org/#ix=3Lfl": if you only need to extract generic parameter from sequences, you can use this https://play.nim-lang.org/#ix=3Lfu
[18:42:51] <FromDiscord> <Michal Maršálek> What does "Error: Invalid node kind nnkCall for macros.`$`" mean?
[18:43:35] <FromDiscord> <eyecon> In reply to @Solitude "feel free to create": https://github.com/nim-lang/Nim/issues/19334
[18:43:55] <FromDiscord> <Solitude> you cant $/echo NimNodes directly, you need repr/treeRerp them
[18:43:56] *** Joins: dithpri (~dithpri@gateway/tor-sasl/dithpri)
[18:44:03] <FromDiscord> <Solitude> In reply to @Michal58 "What does "Error: Invalid": ^
[18:44:08] <FromDiscord> <kaddkaka> sent a code paste, see https://play.nim-lang.org/#ix=3Lfv
[18:44:19] <FromDiscord> <Michal Maršálek> I see
[18:44:26] <FromDiscord> <eyecon> In reply to @Solitude "if you only need": Interesting approach, thanks, but mine is still supposed to work, right?
[18:44:27] <FromDiscord> <Michal Maršálek> I need to use toStrLit or something
[18:44:54] <FromDiscord> <Solitude> In reply to @eyecon "Interesting approach, thanks, but": whatever you're doing compiler shouldn;t crash
[18:45:31] <FromDiscord> <kaddkaka> `Error: unhandled exception: index 127 not in 0 .. 6 [IndexDefect]` is related to my `characters` string only having indices `0..6`, but if I make that string long enough, everything outputs "correctly".
[18:45:45] <FromDiscord> <kaddkaka> @Solitude oh, is that a compiler crash
[18:46:02] <FromDiscord> <eyecon> In reply to @Solitude "whatever you're doing compiler": Yes, but more than not crashing, it should give the same output as a direct call, right? At least I don't see why not
[18:46:29] <FromDiscord> <Solitude> yas
[18:47:01] <FromDiscord> <kaddkaka> (sorry got confused)
[18:49:11] <FromDiscord> <kaddkaka> sent a code paste, see https://play.nim-lang.org/#ix=3Lfy
[18:51:11] <FromDiscord> <Solitude> you're trolling
[18:51:12] <FromDiscord> <Solitude> second
[18:51:13] <FromDiscord> <Solitude> sent a code paste, see https://play.nim-lang.org/#ix=3Lfz
[18:51:14] <FromDiscord> <Solitude> what the hell
[18:52:14] <FromDiscord> <kaddkaka> @Solitude  I'm playing in the playground: https://play.nim-lang.org/#ix=3LfA
[18:53:06] <FromDiscord> <kaddkaka> The crash looks strange. I encountered it because I was stupid and created a function called `char`.
[18:55:10] <FromDiscord> <Michal Maršálek> In reply to @demotomohiro "It seems you cannot": Ha! Sometimes you can?!!: https://play.nim-lang.org/#ix=3LfB
[18:55:42] <FromDiscord> <Solitude> In reply to @kaddkaka "The crash looks strange.": its because function calls have high priority than type conversions i guess↵`      if c <= 127.char:` this is the line in system that invokes your `char`
[18:55:48] <FromDiscord> <Solitude> (higher
[18:59:43] <FromDiscord> <kaddkaka> @Solitude In what file is that? I'm looking at `/home/david/.choosenim/toolchains/nim-1.6.0/lib/system.nim` right now
[19:00:28] <FromDiscord> <kaddkaka> found it line 2913, thanks
[19:00:28] <FromDiscord> <Solitude> right there, addQuoted
[19:01:12] <FromDiscord> <kaddkaka> sent a code paste, see https://play.nim-lang.org/#ix=3LfG
[19:01:39] <FromDiscord> <Solitude> because only strings in collections/objects need addQuoted
[19:01:44] <FromDiscord> <Solitude> and the second one is empty
[19:04:59] <FromDiscord> <kaddkaka> Right
[19:08:47] <NimEventer> New Nimble package! xlsxio - This is a xlsxio wrapper done Nim in mind., see https://github.com/jiiihpeeh/xlsxio-nim
[19:08:53] <FromDiscord> <kaddkaka> sent a code paste, see https://play.nim-lang.org/#ix=3LfJ
[19:09:04] <FromDiscord> <Solitude> they dont need to be escaped?
[19:09:10] <FromDiscord> <Solitude> why would you want your string to be quoted
[19:17:31] <FromDiscord> <SirOlaf> In reply to @exelotl "linked lists are buggy": Someone forgot to fix the tail
[19:19:57] <FromDiscord> <Michal Maršálek> How can I define what happens on explicit type conversion like `MyType 1`? I can somewhat  control that by defining a converter from `int` to `MyType`, however that leads to implicit conversions happening which I don't want. Is there a way to allow only explicit conversions?
[19:25:34] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cdd1:fb1a:1d51:220e)
[19:26:35] <FromDiscord> <Rika> You can’t explicitly convert object types  afaik
[19:29:46] <FromDiscord> <Michal Maršálek> I'm sad
[19:30:19] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:cdd1:fb1a:1d51:220e) (Client Quit)
[19:30:59] <FromDiscord> <kaddkaka> In reply to @Solitude "its because function calls": Is it possible to explicit call the type conversion and not the function?
[19:31:06] <FromDiscord> <Rika> Use a procedure, toX or a to(your type, typedesc)
[19:31:16] <FromDiscord> <Rika> In reply to @kaddkaka "Is it possible to": Rename the function please
[19:31:36] <FromDiscord> <kaddkaka> i@Rika that's not what I'm asking, but ofc I will not have a function named lke that
[19:31:43] <FromDiscord> <Rika> No
[19:31:51] <FromDiscord> <Rika> There is no way from what I know
[19:31:54] <FromDiscord> <kaddkaka> ok
[19:38:48] <FromDiscord> <SirOlaf> sent a code paste, see https://play.nim-lang.org/#ix=3LfY
[19:39:02] <FromDiscord> <SirOlaf> The type itself gets allowed
[19:40:26] <FromDiscord> <Rika> Have you tried? what error?
[19:40:45] <FromDiscord> <Patitotective> sent a code paste, see https://paste.rs/WBC
[19:40:53] <FromDiscord> <Rika> .isNil
[19:41:14] <FromDiscord> <SirOlaf> https://play.nim-lang.org/#ix=3Lg2 "cannot create null element for: tyVoid"
[19:41:14] <FromDiscord> <Patitotective> Oh ok :upś
[19:41:20] <FromDiscord> <Patitotective> (edit) ":upś" => "🙃"
[19:42:03] <FromDiscord> <SirOlaf> In reply to @SirOlaf "https://play.nim-lang.org/#ix=3Lg2 "cannot create n": Casting 0 to the type works though
[19:42:08] <FromDiscord> <Rika> Huh
[19:42:13] <FromDiscord> <Rika> Funky
[19:43:21] <FromDiscord> <SirOlaf> Nice, I got the compiler to crash with it
[19:43:38] <FromDiscord> <SirOlaf> https://play.nim-lang.org/#ix=3Lg6
[19:44:06] <FromDiscord> <SirOlaf> So void should probably not be allowed in that context
[19:45:38] <FromDiscord> <eyecon> Two compiler crashes in a day, lucky us
[19:45:56] <FromDiscord> <SirOlaf> To be fair, I'm actively looking for issues
[19:46:07] <FromDiscord> <eyecon> Well, I'm not 😄
[20:00:03] <FromDiscord> <SirOlaf> Also found a weird varargs bug yesterday where the parameters share a memory location
[20:15:29] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3Lgg
[20:15:55] <FromDiscord> <Solitude> what the hell is stopwatch
[20:15:59] <FromDiscord> <Solitude> does it have state field
[20:16:01] <FromDiscord> <Solitude> is it exported
[20:16:11] <FromDiscord> <Patitotective> sorry i forgot that part lol
[20:16:14] <FromDiscord> <Patitotective> one sec
[20:16:40] <FromDiscord> <Patitotective> (edit) "https://play.nim-lang.org/#ix=3Lgg" => "https://play.nim-lang.org/#ix=3Lgh"
[20:16:44] <FromDiscord> <Solitude> export the field
[20:17:03] <FromDiscord> <Patitotective> Do you mean ``?
[20:17:06] <FromDiscord> <Solitude> yes
[20:17:16] <FromDiscord> <Patitotective> Do I need to do that for all the fields?
[20:17:31] <FromDiscord> <Rika> All the fields you care about
[20:17:32] <FromDiscord> <Rika> Yes
[20:17:48] <FromDiscord> <Solitude> In reply to @Patitotective "Do I need to": https://nim-lang.org/docs/tut1.html#advanced-types-objects
[20:18:55] <FromDiscord> <Patitotective> Is there a way to export all fields?
[20:20:39] *** Parts: dithpri (~dithpri@gateway/tor-sasl/dithpri) ('); DROP TABLE Users;--)
[20:21:01] <FromDiscord> <Rika> Automatically no
[20:21:02] <FromDiscord> <Solitude> you could write a macro for that, otherwise no
[20:21:15] <FromDiscord> <Rika> Well yeah but that’s probably not what he wants…
[20:21:44] <FromDiscord> <Rika> Well if you want someone to do it for you wait for beef to wake up or something I don’t know
[20:22:11] <FromDiscord> <Solitude> or use an editor where placing bunch of stars isnt a problem
[20:22:14] <FromDiscord> <Patitotective> It's okay 🙃
[20:23:26] <FromDiscord> <Patitotective> Also Nim seems to be super awesome, oop and pointers specifically (im a python programmer)
[20:26:58] <FromDiscord> <Patitotective> btw is it possible to have an emtpy procedure? so if I call it it happens nothing?
[20:26:59] <FromDiscord> <Patitotective> (edit) "nothing?" => "nothing"
[20:27:06] *** Quits: Figworm (~inoor@user/figworm) (Quit: Figworm)
[20:27:50] <FromDiscord> <Solitude> `discard`
[20:30:51] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3Lgr
[20:31:14] <FromDiscord> <Patitotective> (edit) "https://play.nim-lang.org/#ix=3Lgr" => "https://play.nim-lang.org/#ix=3Lgs"
[20:34:32] <FromDiscord> <Patitotective> Or should I use m a c r o s ?
[20:34:56] <FromDiscord> <Solitude> you should, but what do you want this code to do?
[20:35:50] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3Lgt
[20:36:42] <FromDiscord> <Solitude> why does it have to be `let myProc` instead of normal procedure definition?
[20:37:16] *** Joins: rockcavera (~rc@192.12.112.236)
[20:37:16] *** Quits: rockcavera (~rc@192.12.112.236) (Changing host)
[20:37:16] *** Joins: rockcavera (~rc@user/rockcavera)
[20:37:16] <FromDiscord> <Solitude> and yes, you can do that.
[20:37:50] <FromDiscord> <Patitotective> In reply to @Solitude "why does it have": cause `myProc` is really a field of an object
[20:39:09] <FromDiscord> <Patitotective> In reply to @Solitude "and yes, you can": I'm getting `Error: expression expected, but found 'keyword discard'`
[20:39:41] <FromDiscord> <Solitude> can you slap some parens around it?
[20:40:37] <FromDiscord> <Patitotective> In reply to @Solitude "can you slap some": huh? where?
[20:40:43] <FromDiscord> <Solitude> around proc definition
[20:40:51] *** Joins: Figworm (FiggyWitIt@user/figworm)
[20:41:44] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3Lgx
[20:43:11] <FromDiscord> <Solitude> sent a code paste, see https://play.nim-lang.org/#ix=3Lgy
[20:44:42] *** Joins: pro (~pro@user/pro)
[20:47:28] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3LgA
[20:48:09] *** Quits: rockcavera (~rc@user/rockcavera) (Ping timeout: 256 seconds)
[20:48:26] <FromDiscord> <Solitude> remove `: StopwatchProc`
[20:50:06] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3LgD
[20:50:25] <FromDiscord> <Patitotective> (edit) "https://play.nim-lang.org/#ix=3LgD" => "https://play.nim-lang.org/#ix=3LgE"
[20:52:13] <FromDiscord> <eyecon> @Patitotective check this out too, maybe it works for you: https://github.com/mratsim/Synthesis
[20:52:15] <FromDiscord> <Solitude> you didnt change my snippet to fit your code...
[20:52:35] <FromDiscord> <Solitude> your procs should have the signature of StopwatchProc
[20:54:16] <FromDiscord> <Patitotective> sent a code paste, see https://paste.rs/sGp
[20:54:38] <FromDiscord> <Solitude> thats literally what i told you to do...
[20:54:50] <FromDiscord> <Patitotective> hmmmm lol
[20:58:17] <FromDiscord> <Rosen> bruh moment
[21:15:51] *** Joins: rockcavera (~rc@192.12.112.107)
[21:15:51] *** Quits: rockcavera (~rc@192.12.112.107) (Changing host)
[21:15:51] *** Joins: rockcavera (~rc@user/rockcavera)
[21:18:37] <FromDiscord> <SirOlaf> sent a code paste, see https://play.nim-lang.org/#ix=3LgO
[21:19:29] <FromDiscord> <Rosen> why would you like that
[21:19:30] <FromDiscord> <Rosen> that's awful
[21:51:28] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[21:53:44] *** Quits: neurocyte09 (~neurocyte@user/neurocyte) (Read error: Connection reset by peer)
[21:54:33] *** Joins: neurocyte091 (~neurocyte@user/neurocyte)
[22:11:58] *** Joins: krux02 (~krux02@p200300e81723dd00b48b627b8314596f.dip0.t-ipconnect.de)
[22:42:05] <FromDiscord> <Hamid_Bluri> sent a code paste, see https://play.nim-lang.org/#ix=3Lhg
[22:42:43] <FromDiscord> <enthus1ast> also with --gc\:arc ?
[22:42:51] <FromDiscord> <Hamid_Bluri> with every gc
[22:43:37] <FromDiscord> <Hamid_Bluri> i think i dont know something about GC
[22:43:57] <FromDiscord> <Hamid_Bluri> nim's GC actually
[22:48:40] <FromDiscord> <Solitude> seq doesnt release its capacity
[22:49:55] <FromDiscord> <Solitude> nvm
[22:50:08] <FromDiscord> <Hamid_Bluri> seq just stores `ref` of string
[22:50:44] <FromDiscord> <Solitude> nim doesnt release the memory allocated
[22:50:48] <FromDiscord> <Hamid_Bluri> http://zevv.nl/nim-memory/
[22:50:55] <FromDiscord> <Solitude> you have to use -d:useMalloc for that
[22:52:05] <FromDiscord> <Solitude> yep, releases fine with malloc
[22:52:17] <FromDiscord> <Hamid_Bluri> no difference
[22:52:25] <FromDiscord> <Solitude> useMalloc only works with arc/orc
[22:52:36] <FromDiscord> <Solitude> its expected behaviour
[22:53:16] <FromDiscord> <Hamid_Bluri> why's refc doesn't release allocated memory?
[22:53:31] <FromDiscord> <Hamid_Bluri> (edit) "why's" => "why"
[22:53:32] <FromDiscord> <Solitude> its not refc, its nims allocator
[22:54:19] <FromDiscord> <Solitude> it doesnt release memory back to os, so it can be reused faster, probably
[22:54:45] <FromDiscord> <Hamid_Bluri> thanks
[22:55:02] <FromDiscord> <Solitude> status have pr to nim that ports useMalloc to refc
[23:04:22] *** Joins: jjido (~Denis@94.9.124.97)
[23:09:36] *** Quits: jjido (~Denis@94.9.124.97) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:26:54] <FromDiscord> <michaelb> when adding pragma/s to a proc is it possible to have some conditions, e.g. if there's variation re: the version of Nim?
[23:27:31] <FromDiscord> <michaelb> or is it a matter of using `when/else` in combination with push/pop above below the definition of the proc?
[23:29:22] <FromDiscord> <Solitude> In reply to @brainproxy "when adding pragma/s to": huh? maybe this can help https://nim-lang.org/docs/manual.html#userminusdefined-pragmas-pragma-pragma
[23:30:17] <FromDiscord> <michaelb> ah very nice, will try that
[23:30:20] <FromDiscord> <michaelb> thank you
[23:31:19] <FromDiscord> <enthus1ast> can i forward declare a proc in another file?
[23:31:31] <FromDiscord> <enthus1ast> like c in c headers?
[23:33:18] <FromDiscord> <Solitude> if you mean module, then no. why do you need that
[23:33:43] <FromDiscord> <enthus1ast> i have a recursive dependecy that i do not know to break up yet
[23:33:51] <FromDiscord> <enthus1ast> how to
[23:34:04] <FromDiscord> <Solitude> actually, there is a hack with using importc and exportc
[23:34:18] <FromDiscord> <Solitude> but its a hack and you should feel bad for using it
[23:34:28] <FromDiscord> <enthus1ast> ah before i go this route i will try to refactor
[23:36:50] <FromDiscord> <enthus1ast> ok i think i have a solution, i must strictly break up types and procs and put the types in their own module
[23:39:02] <Zevv> what's with nim releasing memory
[23:41:40] <FromDiscord> <michaelb> In reply to @enthus1ast "ok i think i": happens that way quite frequently
[23:41:42] <FromDiscord> <michaelb> ime
[23:45:16] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:cdd1:fb1a:1d51:220e)
[23:46:09] <FromDiscord> <Patitotective> Is it possible to create a _windows_ executable from linux?
[23:46:28] <FromDiscord> <Solitude> yes, install mingw
[23:54:14] <pro> what you want is wine
[23:54:56] <nrds> <06Prestige99> nah pro
[23:55:06] <pro> yeah I missread nrds 
[23:55:49] <FromDiscord> <Patitotective> In reply to @Solitude "yes, install mingw": what do i do now?
[23:57:01] <FromDiscord> <michaelb> sent a long message, see http://ix.io/3LhD
[23:57:12] <FromDiscord> <Sabena Sema> sigh working in C and Rust lately and wow, it drives home home much “thrust to weight” nim has
[23:57:16] <FromDiscord> <Solitude> In reply to @Patitotective "what do i do": compile with -d:mingw
[23:57:39] <FromDiscord> <Sabena Sema> you can also run msvc under wine
[23:57:48] <FromDiscord> <michaelb> (edit) "http://ix.io/3LhD" => "http://ix.io/3LhE"
[23:58:20] <FromDiscord> <Sabena Sema> theres a set of scripts to download and extract msvc and the sdks independent from the vs installer
[23:58:51] <FromDiscord> <Sabena Sema> this can be handy if you need to do SEH or c++ things
[23:59:47] <FromDiscord> <Sabena Sema> In reply to @brainproxy "if you have windows": msys2 is almost the same as cygwin tbh, they regularly take patches from eachother/sync their code
