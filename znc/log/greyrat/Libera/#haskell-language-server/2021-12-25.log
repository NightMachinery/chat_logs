[01:04:02] *** Joins: Guest97 (~Guest97@2606:54c0:50c0:98::9f:26)
[01:07:09] <Guest97> hello, is it normal for HLS to use a lot of memory? currently I'm on a M1 Macbook Air and Activity Monitor shows this: haskell-language-server-8.10.7	576.5 MB. If this is not the correct place to ask, please tell me, thanks.
[01:08:22] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[01:08:57] <sm> Guest97: yes, it's normal for it use that or more
[01:09:30] <sm> you can restart it once in a while if it looks too heavy
[01:10:26] <sm> Memory or Real Mem may be more important, I don't know which is which exactly
[01:10:56] *** Quits: Guest97 (~Guest97@2606:54c0:50c0:98::9f:26) (Quit: Client closed)
[01:23:23] *** Joins: Guest97 (~Guest97@2606:54c0:50e0:98::9f:23)
[01:23:44] <Guest97> ok, thanks
[01:23:53] *** Quits: Guest97 (~Guest97@2606:54c0:50e0:98::9f:23) (Client Quit)
[01:43:33] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[04:32:50] *** Joins: sooch (~drsooch@cpe-72-224-73-160.maine.res.rr.com)
[04:44:26] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[04:53:52] <anton-latukha[m]> For me - a lot of memory is when something eats all available memory. ~16-32G.
[04:54:06] <anton-latukha[m]> 512m for such functionality is quite good.
[04:55:02] <anton-latukha[m]> Also amount that HLS consumes depends on the size & complexity of the project & on the amount of opened files.
[04:55:43] <anton-latukha[m]> * (mentioned before: Oh, somehow, * those files.)
[05:01:41] <sooch> does anyone know off-hand how/when hie files are generated when the -fwrite-ide-info flag is on? I'm getting inconsistent results with it
[05:16:45] *** Joins: drsooch (~drsooch@cpe-72-224-73-160.maine.res.rr.com)
[05:17:20] *** Quits: sooch (~drsooch@cpe-72-224-73-160.maine.res.rr.com) (Read error: Connection reset by peer)
[05:24:32] *** Quits: drsooch (~drsooch@cpe-72-224-73-160.maine.res.rr.com) (Quit: Leaving)
[05:25:04] *** Joins: sooch (~drsooch@cpe-72-224-73-160.maine.res.rr.com)
[05:37:17] *** Quits: sooch (~drsooch@cpe-72-224-73-160.maine.res.rr.com) (Quit: Leaving)
[05:38:06] *** Joins: sooch (uid533113@id-533113.hampstead.irccloud.com)
[06:19:11] *** Quits: Morrow (~quassel@bzq-110-168-31-106.red.bezeqint.net) (Remote host closed the connection)
[06:27:29] <eddiemundo> sooch: last time i tried them they seemed to be generated when the files are compiled
[06:32:14] <sooch> yeah, I was following wz1000's write up on go-to documentation for external deps. When I used -fwrite-ide-info I got a full directory of all external deps. Since then, I get only a subset of the project I'm compiling. Wondering if I'm doing something wrong
[06:41:14] <eddiemundo> hmm let me see what happens when i try that
[06:41:30] <eddiemundo> are the goto docs in a github issue?
[06:41:38] <sooch> yes let me find the link
[06:42:19] <sooch> https://github.com/haskell/haskell-language-server/issues/850
[07:08:38] <eddiemundo> i can't even get a the external dependency .hie files when i do that. I only get the projects .hie files
[07:09:07] <eddiemundo> does external dependency mean stuff in the build-depends of the .cabal file?
[07:25:16] <sooch> Yes, that's what my first run produced I ended up with nearly  2500 files
[07:28:27] <eddiemundo> ok now i'm getting some external dependencies. i recall somewhere in that thread that he said it doesn't work for boot libraries
[07:28:40] <eddiemundo> but i don't know exactly what that refers to
[07:28:54] <eddiemundo> for instance i get no .hie files for attoparsec, but I do for deque
[07:34:02] <sooch> from my limited knowledge I think boot libraries are GHC related, so you should get attoparsec. Thanks for checking it out. How'd you get the files to show up?
[07:36:16] <eddiemundo> yeah i saw something interesting. when i added deque to my cabal build-depends and cabal build, it actually compiled and built deque hence I got the files, but afterwards it just didn't compile it
[07:36:28] <eddiemundo> so it seems that there is some kind of cache or something for built dependencies
[07:36:58] <eddiemundo> if it's not in there i guess it will give you the .hie files cause it builds every dependency, but after if you delete the files they don't get built again
[07:37:24] <eddiemundo> cabal clean doesn't seem to do the trick either
[07:43:49] <sooch> I was able to recompile everything when I swapped the directory to point -hiedir to but it didn't seem to work properly. I'll keep trying though thanks
[07:46:16] <eddiemundo> okay i see there is a global store that stores packages
[07:46:20] <eddiemundo> its in ~/.cabal/store
[07:46:50] <eddiemundo> if i delete the `deque` folders then when i build it will recompile the package and generate .hie files for it again
[07:47:28] <sooch> ahh yes that would make sense thanks
[07:48:09] <eddiemundo> i dunno if that helps, but it means that for a cabal project where you've built all the packages already then you dont get the external .hie files unless you update the dependency version of the package or delete it in that global store
[07:49:20] <sooch> yeah, won't be particularly user-friendly if that's a requirement
[07:49:33] <eddiemundo> yup that kinda sucks
[07:49:50] <eddiemundo> i gotta go now
[07:50:18] <sooch> appreciate you looking into it  thanks
[10:06:55] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[10:10:37] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Ping timeout: 240 seconds)
[10:13:21] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[11:15:19] *** Joins: Morrow (~quassel@bzq-110-168-31-106.red.bezeqint.net)
[11:32:19] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[11:32:48] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[11:37:22] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Ping timeout: 260 seconds)
[13:39:38] <wz1000> sooch: hey
[13:41:38] <wz1000> indeed, getting cabal to support hie files properly would be a big improvement
[13:43:13] *** Joins: Lierdakil_ (~lierdakil@213.251.238.128)
[13:43:48] *** Quits: Lierdakil (~lierdakil@94.158.171.19) (Ping timeout: 240 seconds)
[13:43:49] *** Lierdakil_ is now known as Lierdakil
[14:00:57] *** Quits: Lierdakil (~lierdakil@213.251.238.128) (Ping timeout: 240 seconds)
[14:01:41] *** Joins: Lierdakil (~lierdakil@94.158.171.19)
[14:30:58] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[15:22:38] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[18:45:32] <sooch> @wz1000:  yeah I spent way too long last night and got nowhere. Do you know off hand what the issue is?
[18:46:19] <wz1000> sooch: cabal simply doesn't know about .hie files and doesn't consider them as a compilation artifact, so it doesn't copy them into its store
[18:46:32] <wz1000> and doesn't recompile when they are missing
[19:54:16] <sooch> Yeah so Iâ€™ll just stop looking at the go to issue... itâ€™s way above my pay grade anyway
[20:51:32] *** Joins: coot (~coot@89-64-85-93.dynamic.chello.pl)
[22:14:02] <jneira[m]> ugh, so the issue is somewhat blocked on cabal support for hie files?
[22:16:47] <jneira[m]> well, cabal already stores the hie files in the syore dir if the ghc flag is enabled, but you have to wipe ou the entire store to force compile the packages again
[22:17:19] <jneira[m]> our issue should be updated and linked to a cabal one then
[22:22:18] *** Quits: shapr (~user@pool-108-28-144-11.washdc.fios.verizon.net) (Ping timeout: 260 seconds)
[22:35:44] <eddiemundo> ok so if the .hie files are in the global store then if we can somehow know what paths to packages in the store we use then we can use those paths to index the .hie files for external dependencies, and then use the local hie directory to index the .hie files for local source files and for the most part we'd have all the .hie files we'd need
[22:36:31] <eddiemundo> for usabilities sake it would be cool if somehow cabal could add .hie files if -fwrite-hie-info was set if the .hie files are not already in the global store packages
[22:39:15] <eddiemundo> i guess we need dependency graph info too unless every package in the store stores all .hie files for all transitive dependencies which it probably doesn't
[22:41:01] *** Quits: coot (~coot@89-64-85-93.dynamic.chello.pl) (Quit: coot)
[22:52:33] <jneira[m]> sooch has added to wz1000 comment the things which should be adressed, many thanks!
[22:52:54] <jneira[m]> https://github.com/haskell/haskell-language-server/issues/708#issuecomment-899021168
[22:53:45] <jneira[m]> eddiemundo: have you take a look? i think they make sense, not sure if we could have read only buffers in some way ðŸ¤”
[22:54:58] <jneira[m]> i wonder how other langs have resolved this, rust for example
[23:05:10] <eddiemundo> hmm I don't think that issue describe the issue of not generating .hie files for external dependencies if cabal already has the external dependencies in the global store where they were previously built without `-fwrite-ide-info`
[23:05:40] <sooch> To be fair, most of the comment has been untouched I only added a small correction to the ghcide command and a minor note on the cabal issue :)
[23:06:54] <eddiemundo> wait maybe i'm wrong i gotta experiment a bit first and see what cabal builds and doesn't when changing the cabal.project the first time
[23:08:40] <sooch> When I first added -fwrite-ide-info I got the .hie files for everything. Since then I've never been able to recreate it. Even wiping out the store doesn't work
[23:10:17] *** Joins: shapr (~user@pool-108-28-144-11.washdc.fios.verizon.net)
[23:13:46] <wz1000> sooch: are you passing an absolute path? 
[23:13:51] <wz1000> try changing the the path
[23:15:43] <sooch> ironically on first try it was the when I started it was with absolute path (just used /tmp) but i swapped to relative path on the later tries
[23:16:23] <eddiemundo> okay so yeah the path needs to be absolute, and if you don't pass a path at all it also wont put the external dependencies in the default locations
[23:17:22] <eddiemundo> the other thing is I also don't see .hie files in the global store at all so i don't think it stores the .hie in there at all
[23:18:43] <eddiemundo> so yeah it's not just a matter of finding paths to the global store and having a dependency graph. i guess it would be cool if cabal also put the .hie files in there as well
[23:22:53] <eddiemundo> jneira: oh i forgot to say that when you invited me a while back to the project i didn't actually have 2FA cause my phone was smashed, and i didn't want to do weird workarounds. i just got a phone but the invite expired...
[23:23:05] <sooch> yep so I'm dumb, absolute path is definitely the correct way to do it
[23:34:57] *** Quits: juhp (~juhp@128.106.188.82) (Ping timeout: 240 seconds)
[23:38:05] *** Joins: juhp (~juhp@128.106.188.82)
[23:38:20] <sooch> @wz1000 the logic for indexing should result in indexing into the same hiedb that HLS uses correct?
[23:38:40] <wz1000> yes
[23:39:51] <sooch> weird, I'm getting two separate dbs
[23:54:36] *** Quits: shapr (~user@pool-108-28-144-11.washdc.fios.verizon.net) (Ping timeout: 268 seconds)
[23:57:04] <jneira[m]> eddiemundo: i just resent it :-) 
[23:57:55] <jneira[m]> btw, afair cabal recompiles and add new entries to the store if ghc options change
[23:58:48] <jneira[m]> so after added the -f-write-hie-files should not start to store the libs with a new hash?
[23:59:46] <jneira[m]> you have to set it in cabal.project for all dependencies (or in the global cabal config)
