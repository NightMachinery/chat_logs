[00:00:44] <hayley> https://github.com/woodrush/lisp-in-life
[00:00:45] -ixelp- GitHub - woodrush/lisp-in-life: A Lisp interpreter implemented in Conway's Game of Life
[00:02:44] <hayley> Eh, they "just" compile a Lisp interpreter in C to another 2d celluar automata, then interpret that in GoL.
[00:20:08] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (Remote host closed the connection)
[00:20:36] <selwyn> i wonder what 1d cellular automata can do
[00:24:22] *** Joins: Inline (~Inline@aftr-37-201-240-204.unity-media.net)
[00:24:54] <hayley> Ask Mr Wolfram.
[00:26:46] <selwyn> suspect the answer is not much
[00:27:11] <White_Flame> they do a lot; wolfram's automata are 2d "smears" of a 1d automata
[00:27:48] <White_Flame> these sorts of things: https://en.wikipedia.org/wiki/Rule_30
[00:28:09] <selwyn> oh, those things are 1d
[00:28:11] <selwyn> right
[00:28:45] <hayley> https://en.wikipedia.org/wiki/A_New_Kind_of_Science "This article may have been created or edited in return for undisclosed payments, a violation of Wikipedia's terms of use."
[00:28:52] <White_Flame> lol
[00:29:09] <White_Flame> wouldn't surprise me, wolfram's a nutter in my book
[00:30:12] <selwyn> > In 2004, Matthew Cook published a proof that Rule 110 with a particular repeating background pattern is Turing complete, i.e., capable of universal computation, which Stephen Wolfram had conjectured in 1985.[1] Cook presented his proof at the Santa Fe Institute conference CA98 before publication of Wolfram's book A New Kind of Science. This resulted in a legal affair based on a non-disclosure
[00:30:14] <selwyn> agreement with Wolfram Research. Wolfram Research blocked publication of Cook's proof for several years.[2]
[00:30:24] <hayley> https://en.wikipedia.org/wiki/Talk:A_New_Kind_of_Science
[00:30:45] <selwyn> is wolfram in the chat
[00:33:17] <hayley> https://en.wikipedia.org/w/index.php?oldid=1011909863#Wolfram_refspam_cleanup Maybe.
[00:36:37] *** Joins: kevingal (~quassel@37.228.202.92)
[00:43:18] * hayley gets in trouble for saying "What is an interpreted language? Show me one."
[00:43:19] <hayley> ....on r/lisp. Sense this makes does not
[00:43:21] <selwyn> cringe
[00:44:17] <hayley> Based on the number of people passing through #commonlisp that need to be schooled on what you can compile, you'd think it'd be a fair question to ask.
[00:48:15] *** Quits: shka (~herr@109.231.0.226) (Ping timeout: 256 seconds)
[00:49:53] <hayley> Wish I remembered how to make SWCL^WSBCL bootstrap using multiple threads. Some environment variables.
[00:51:04] <hayley> https://www.youtube.com/watch?v=6dBt3mJtgJc
[00:51:05] -ixelp- Joy Division - Transmission [OFFICIAL MUSIC VIDEO] - YouTube
[00:52:29] <hayley> SBCL_MAKE_PARALLEL=4 SBCL_MAKE_JOBS=-j4
[01:07:49] <hayley> gilberth: In which Melbourne has 700% memory fragmentation https://www.youtube.com/watch?v=8K9EOeoHo_Y
[01:07:49] -ixelp- Why Melbourne’s Bins are Solar Powered #shorts - YouTube
[01:08:18] <selwyn> 0/10 no tom scott
[01:09:27] <hayley> https://howmanydayssincemontaguestreetbridgehasbeenhit.com/
[01:09:28] -ixelp- How many days since the Montague Street Bridge has been hit
[01:12:54] *** Quits: kevingal (~quassel@37.228.202.92) (Remote host closed the connection)
[01:22:03] *** Joins: kagevf (~jfh@ip68-108-33-76.lv.lv.cox.net)
[02:15:18] <hayley> Maybe I should cdr-code cons cells written to disk.
[02:24:13] *** Joins: dra (~dra@2a04:4540:6409:ed00:28b8:fa9b:c517:3cd1)
[02:24:15] <dra> Hello!
[02:24:23] <hayley> Hello dra!
[02:33:19] <hayley> Nice how the government study loan website tells me my "balance" and my "limit". "Look, you could have _this much_ more debt!"
[02:33:43] <moon-child> gilberth: cliff click says that stack allocation gives better cache usage
[02:33:57] <hayley> ...but I have to subtract the two to figure out how much I owe.
[02:34:12] <selwyn> reminded that i have student debt
[02:34:12] <moon-child> though he also uses complex hw barriers to make that work
[02:34:14] <selwyn> sigh
[02:35:14] <hayley> You can have a fast path on p > q before *p = q.
[02:35:32] <hayley> Else, stick a "frame number" slot before each object, then check frame numbers.
[02:36:14] <moon-child> hayley: well, also nice to allocate in your caller's stack frame
[02:36:31] <moon-child> so you need to arrange that somehow.  And inline-cache how many callers up to go
[02:37:01] <hayley> What I'd do is to have a separate data stack, and decide when to open and close a data frame based on static analysis and runtime feedback.
[02:37:34] <moon-child> alas, gilberth seems convinced that stack frames should be linked
[02:37:58] <gilberth> moon-child: Yes, perhaps because a stack always is compacted.
[02:37:59] <moon-child> so that becomes annoying vs allocating directly in a given frame
[02:38:11] <hayley> e.g. if some function doesn't cons a lot, and it all escapes, then don't make a new frame. You could also have something like arenas if you close and re-open regions in a loop.
[02:38:42] <gilberth> moon-child: I have to link them with an uncooperative compiler. It don't believe they should be in general.
[02:39:07] <hayley> Hence why I'd rather "share" data frames in another stack between call frames.
[02:39:13] <gilberth> * I don't ;me is not an it. A she or a he, idk. But no it.
[02:39:35] <moon-child> hayley: third part of SBA (the one I didn't get around to reading) talks about that.  But I think that since some allocations escape and some don't, you want to be able to allocate them in different places
[02:39:49] * gilberth isn't really here and will catch up later.
[02:40:45] <hayley> Then, part two of my bullshittery: also decide what is an "allocation point" independently of actually calling CONS or MAKE-ARRAY or etc. Then collect statistics per allocation point.
[02:41:12] <hayley> It's effectively one bit in a special variable. But where do you bind the bit?
[02:41:32] <moon-child> also nice would be to consider the actual call stack.  h makes an allocation that f frees.  But sometimes you call f -> h, and sometimes you call f -> g -> h.  So this is kind of a 'leak' because in the former case you allocate in the frame of f's caller.  Well, that would be alleviated if we happened not to allocate a stack frame for g (as you suggest); but there's no reason to assume g would
[02:41:34] <moon-child> not need a stack frame
[02:41:56] <moon-child> hayley: so how do you define allocaiton point?
[02:42:09] <hayley> Good question.
[02:42:20] <hayley> I don't have a good answer.
[02:44:16] <hayley> MAKE-INSTANCE and MAKE-HASH-TABLE are "allocation points" in that they produce some data which references objects with similar lifetimes. So I guess any call to a constructor should have its own feedback bit.
[02:44:52] <hayley> The word would be "constructor" but I was describing the feedback mechanism to beach in terms of "allocation points".
[02:44:54] <moon-child> hmm.  How about: start with a function as an allocation point.  Then observe, for every CONS, how many GC cycles it survives, and partition?
[02:45:23] <moon-child> hayley: so you assume that most objects are unique?
[02:47:40] <hayley> So you'd find functions which produce objects of more variable lifetimes, and are called by functions which produce objects of less variable lifetimes?
[02:47:57] <hayley> moon-child: I don't believe so.
[02:50:19] <hayley> "When the Java Virtual Machine was being designed in the early 1990s, the cost of a memory fetch was comparable in magnitude to computational operations such as addition." What? Caches were a thing then, and misses didn't sound very fast then.
[02:51:57] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 240 seconds)
[02:53:50] <hayley> I think V8 has a spiffy feedback scheme for whether to allocate in the new generation or the old generation, but it is a bit more complicated than "so you won't be stack allocated, then to hell^Wthe heap with you and every object from whence you came!" 
[02:57:48] <hayley> https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/43823.pdf
[03:00:57] <hayley> That said, V8 doesn't bother with constructor analysis or anything, and just creates a site per JS object literal.
[03:04:23] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[03:04:42] <dave0> maw
[03:05:30] <hayley> Also, in which C is found to follow the generational hypothesis: http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.56.6712&rep=rep1&type=pdf
[03:05:30] <dra> Hello dave0!
[03:05:59] <dave0> hi dra!
[03:06:19] <dave0> hayley: did you end up trying my code? the parallel gzip thing?
[03:06:26] <dave0> threaded gzip
[03:06:28] <hayley> I hadn't, sorry.
[03:06:32] <dave0> bummer
[03:06:37] <dave0> it's fast :-)
[03:08:59] <hayley> Would be nice to figure out how to drive SBCL core compression in parallel, but it doesn't seem very easy.
[03:10:19] <dave0> my method was somewhat brute force ... it just compressed 1 meg pieces individually and cat'ed them together
[03:10:21] <mfiano> there's already pigz, pbzip2, pixz, etc
[03:10:35] <mfiano> all very configurable, too
[03:10:50] <hayley> The latter also suggests that you can XOR each function pointer to get an identifier for a call chain, which is interesting.
[03:39:29] <moon-child> probably don't want the whole call chain, though, just some tail of it
[03:40:16] <moon-child> challenge is figuring out how long your tail is, in a given location.  Then yeah xor is a fine cheap hash
[03:40:31] <moon-child> NB. if you use separate call/data stacks you can do that calculation with simd :)
[03:48:57] *** Quits: dra (~dra@2a04:4540:6409:ed00:28b8:fa9b:c517:3cd1) (Ping timeout: 240 seconds)
[03:52:19] <hayley> Per https://www.cs.purdue.edu/homes/hosking/ismm2000/papers/harris.pdf looking at just the caller isn't so bad though.
[03:52:24] *** Joins: Inline__ (~Inline@aftr-37-201-240-204.unity-media.net)
[03:52:51] <hayley> i.e. a tail of length 1
[03:53:01] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (Remote host closed the connection)
[03:54:07] <hayley> "In contrast, if decisions are based on a single frame of allocation context, then a pre-tenured allocation may be implemented simply by changing the way in which a particular occurrence of the new bytecode is compiled." but s/bytecode/call site/
[03:55:56] <hayley> Hm, where do I get a mouse that isn't crap and doesn't scream "pretentious gamer"?
[03:56:25] <moon-child> ergo mouse?
[03:57:31] <hayley> Could do. So far I only found a bloody expensive and weird looking one, and a "Microsoft Surface Ergonomic Mouse" which uses Bluetooth and has no transceiver.  
[03:58:19] <moon-child> logitech has some weird sideways stuff
[03:58:24] <moon-child> or could go for trackball
[03:58:48] <hayley> And I feel a bit sick and don't feel like travelling across the city to get to my usual not-crap computer store.
[03:59:03] * moon-child uses a pretentious gamer mouse, mostly because it was free
[03:59:31] <hayley> I still play FPSes, but I don't need the mouse glowing at me. I have the RGB on my keyboard turned off, and am still thinking to desolder the blue lights in the case fans.
[03:59:56] <moon-child> I played FPSes with a trackball
[04:00:08] <moon-child> was never any good at them, but I don't think that was because of the mouse :P
[04:01:36] <hayley> I sucked at CS:GO before this mouse broke, but it's just worse that mouse1 doesn't work half the time, and I'll probably get some TLA muscle problem if I keep using it.  
[04:04:54] <moon-child> 'The Lisp family of languages is defined by their conservative garbage collectors. C was the second member of the Lisp family, after, of course, Java and Smalltalk. C preceded the creation of Simula, the most well-known Lisp, by roughly 5 years. It wasn't until 2015 that the so-called post-Lisp languages (such as Erlang, Rust, and Modula-2) began to appear'
[04:05:44] <hayley> What drugs do you need to make that up?
[04:06:04] <selwyn> wtf lol
[04:06:15] <moon-child> idk, but they sound pretty goood
[04:06:29] <selwyn> it must be a troll
[04:06:55] <moon-child> selwyn: unalloyed joke, I expect
[04:07:46] <hayley> Hm, none of my steam games want to boot now. Must be a reminder to update (and maybe restart steam, idk)
[04:10:57] <hayley> Yes, restarting steam fixed it. And there's now a M-x mas themed start screen for Sven Co-op.
[04:13:28] <gilberth> For a very basic mouse the Logitech M185 is fine. But it's wireless with it's own receiver. Best part: It doesn't glow in the dark.
[04:13:53] <gilberth> Oh, I should watch my single quotes.
[04:14:40] * moon-child does not like wireless things
[04:15:02] <moon-child> would be fine, if they worked.  But my experience is that they don't.  Or they break in unpredictable ways
[04:15:54] <gilberth> Well, usually I prefer wired things. But this mouse is fine to my surprise.
[04:16:59] <gilberth> Which perhaps is because it is not a Bluetooth device. I mean, have you ever seen some Bluetooth device that works?
[04:17:51] <moon-child> yeah, bluetooth is ... ...
[04:18:57] <moon-child> but even devices with their own receivers have problems.  I bought a steam controller when they discontinued it and lowered the price dramatically.  When I put my hands under my desk, it would lose its connection (or lag horribly)
[04:19:52] <hayley> My wireless mouse broke for reasons unrelated to it being wireless.
[04:21:24] * hayley spots that pacman does the largest packages first. Why?
[04:23:50] <hayley> And amusingly it won't update the keyring before failing to verify some packages, even though there is an update to the keyring package.
[04:26:18] <gilberth> Anyhow, why must all things glow? And often the description doesn't say so.
[04:27:13] <gilberth> I hate that because I sleep in the same room as my desk is. And I prefer it to be dark at night.
[04:27:33] <hayley> You're asking me.
[04:28:12] <gilberth> And even when I am awake I have no use for blue light. Bad for melatonin.
[04:29:52] <gilberth> I could now rant about new street lights that make driving less safe because of that.
[04:30:32] <gilberth> So apparently traffic accidents are good for the climate. Makes sense.
[04:36:22] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[04:36:34] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[04:38:17] <moon-child> gilberth: well.  Ideally if you are not fully awake and alert, you should not be driving anyway
[04:42:06] <epony> wless mice are terrible with their batteries and low durability
[04:42:25] <epony> my laser mice buttons fail too (fucking logitech shit)
[04:43:17] * epony has 3 mice per machine
[04:43:51] <gilberth> moon-child: LED street lights let you see less, even if fully alert.
[04:44:31] <moon-child> gilberth: oh--I see.  Thought you meant their colour had changed or something
[04:44:31] *** Quits: rogersm (~rogersm@90.166.177.48) (Read error: Connection reset by peer)
[04:44:36] <epony> hayley, I sorted that packages problem with "lists of packages" I want to update first, and then the rest
[04:44:59] *** Joins: rogersm (~rogersm@90.166.177.48)
[04:45:39] <epony> so all packages here are "categoric" lists, and I have a "quick" and "slow" lists
[04:46:21] <epony> a bit of work picking these, but the small overhead repays over the years
[04:47:54] <gilberth> moon-child: Rod cells are very light sensitive and needed for vision at night. They however stop working when hit by blue light and need quite some time to recover an function again. So while you see fine directly beneath an LED light with lots of blue light, you are blind once you move away from the lighted area.
[04:48:54] <epony> can confirm, blue leds are dangerous
[04:49:01] <gilberth> moon-child: The reaction of rod cells, that is they stop working, is way less with red light. This is why lights in an air plane cockpit at night is redish and not blue. Likewise in a submarine.
[04:49:32] <epony> orange & red
[04:49:49] <epony> for recurring displays green due to low sensitivity
[04:49:50] <moon-child> gilberth: right.  I see
[04:50:06] <gilberth> This also applies to LED and Xenon head lights with cars. While the driver of such a car might see fine, the traffic ahead is robed of its ability to see in the dark.
[04:50:30] <epony> and the other direction people are blinded
[04:50:38] <moon-child> can the effect be mitigated with a coloured filter?
[04:50:59] <epony> that should be legally sanctioned / banned (blue car lights)
[04:51:25] <gilberth> moon-child: Blue light also aggravates the problem if insects finding their death at a street light.
[04:51:54] <gilberth> moon-child: Yes, it can. You would need pink glasses :-)
[04:53:11] <epony> yellow / metallic tint polarised ones might help too, but you can't see with them at night (metallic / brown)
[04:55:18] <gilberth> The trouble is: Blue LEDs are more energy efficient than red or green ones. So all this energy conservation efforts lead to way more blue light. I don't like blueish light at all. So it's candle light for me at night, not electrical lights, as incandescent bulbs are forbidden.
[04:56:49] <epony> yellowish-white leds are what I use here, the equivalent of many low intensity candle lights
[04:56:50] <gilberth> An incandescent light bulb will change its spectrum when dimmed. An LED does not do that.
[04:57:35] <epony> CCFL lams are nice too ;-)
[04:57:49] <epony> I have shielded halogens too (sun-yellow)
[04:58:03] <gilberth> The other problem is that traditional light bulbs have a continuous, LEDs have not. It remains just a mix of red, green, and blue.
[04:58:16] <gilberth> * spectrum
[04:59:30] <moon-child> why is that a problem?
[04:59:35] <epony> I have so many green, red and orange leds here on various machines that.. it's an eternal Xmas
[04:59:48] <gilberth> For street light this is very silly, as good old mercury-vapor or sodium-vapor lamps are as efficient as LEDs.
[05:00:10] <epony> we're on sodium lamps here still on the streets
[05:00:32] <epony> the mercury ones have a slightly greenish tinted white light and are cool
[05:00:35] <gilberth> moon-child: It's a problem for me, because I not only want dim lights, but also a lower colour temperature for a warmer subjective feeling.
[05:01:17] <epony> that is "normal" for all people ;-)
[05:03:22] <gilberth> moon-child: The spiked spectrum is a problem because it may make colours of things appear unnatural. I just can't stand that. But almost being a woman, I have very sensitive colour vision.
[05:04:58] <hayley> https://www.youtube.com/watch?v=z_oVRJ088BE
[05:04:59] -ixelp- The Messerschmitt Twins (Remastered 2003) - YouTube
[05:06:44] <epony> so you also know names of colours  https://en.wikipedia.org/wiki/Tetrachromacy#Humans
[05:24:13] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 256 seconds)
[07:28:36] <hayley> I can't figure out how to get cmake to compile with afl-g++, but even the uninstrumenting fuzzer found bugs in someone's Lisp-in-C++ that I can't even figure out.
[07:29:22] <hayley> PFFFFFFfff, the parser fucking segfaults if you have an unmatched (
[07:29:55] <moon-child> lisp-in-c++?
[07:29:57] <moon-child> clasp?
[07:30:11] <hayley> Nah, a crap one.
[07:32:11] *** Joins: rogersm_ (~rogersm@89.130.187.152)
[07:34:33] *** Quits: rogersm (~rogersm@90.166.177.48) (Ping timeout: 256 seconds)
[07:35:26] <hayley> Truly shooting fish in a barrel though. At least I get to practise C++ not exactly against my will.
[07:35:57] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[07:37:19] <hayley> The other problem is that this parser is shit. If it wasn't shit, they wouldn't have called .front() on an empty list for some reason.
[07:44:05] <hayley> Can I rig <some std::list>.front() to crash and not go into UB land?
[07:44:18] <hayley> I'm already bored of these stupid bugs.
[07:45:44] <moon-child> sure.  Write your own implementation of the c++ standard library
[07:45:52] <moon-child> emerge from a cave a few decades from now
[07:45:57] <hayley> Very funny.
[07:48:02] <hayley> ...or could I use inheritance and replace std::list with my_less_ub_list?
[07:50:34] <moon-child> possibly.  But I expect the original code uses value std::lists, which I think would cause problems
[07:50:58] <hayley> I have the code here, I can just M-x replace-string and it'll probably survive.
[07:54:10] *** Quits: semz (~none@user/semz) (Ping timeout: 260 seconds)
[08:01:08] <hayley> Nice, now I only get "Unknown lexer-parser-or-compiler error" and not a segfault. Wonder how much that fixes.
[08:02:21] <hayley> Looks like it helped substantially, only 2 crashes in 30 seconds, rather than like 60.
[08:02:23] <moon-child> 'Unknown lexer-parser-or-compiler error'  why doesn't it know though? ;-;
[08:03:18] <hayley> Cause I just wrote if (empty()) throw "Foo!";
[08:06:18] <hayley> Good to know that the equivalent of (aref #() 1) also segfaults too.
[08:07:02] *** Joins: semz (~none@user/semz)
[08:16:06] <hayley> Bytecode generator must be broken, as I blew the data stack.
[08:32:12] <hayley> (while true 1) overflows the stack, because there's no DROP instruction to kill the 1. But e.g. (while true (set foo 1)) doesn't put anything on the stack, and the compiler doesn't know how it's handling return values.
[08:32:24] <hayley> So it must be pure magic that I can e.g. (+ 1 (set foo 1)) even though it throws.
[08:35:11] <moon-child> so does the latter just read garbage?
[08:35:25] <moon-child> actually wouldn't that cause an underflow?
[08:36:02] <hayley> It reads nils somehow.
[08:36:11] <moon-child> huh
[08:36:24] * hayley bored, goes to fuzz another "language".
[08:36:44] <hayley> Maybe the pop function that I haven't examined tried to cover its ass and return nil. Hm..
[08:37:19] <moon-child> have you tried fuzzing the 'lisp' language?  I hear it is interpreted
[08:37:42] <hayley> No crashes for this one.
[08:38:36] <hayley> Yep, called it, it covers its ass and returns a nil. Good design! Not.
[08:39:03] <hayley> I can make all the buildyourownlisp implementations crash by sending EOF, so we're not doing those again.
[08:39:11] <moon-child> let me guess: it also uses machine integers and allows them to silently overflow?
[08:39:27] <hayley> Floats. I'll check overflow...
[08:39:46] <hayley> (/ 1 0) gives a mucho texto error about dividing by zero.
[08:39:50] <moon-child> hm, does it have AREF?  If so, is it tolerant?
[08:40:26] <hayley> (exp 900) gives infinity, and (aref #() 1) would segfault before I fixed it.
[08:40:53] <moon-child> I mean, what is (aref #(0) 0.0000000001)
[08:41:04] <hayley> Oh!
[08:41:42] <hayley> AREF floors its index.
[08:42:00] <moon-child> so (aref #(0) 0.999999999) is 0?
[08:42:05] <moon-child> wow!
[08:42:23] <hayley> Er...
[08:42:46] <hayley> Any more than six nines gives the out-of-bounds error I hacked in.
[08:43:01] * hayley hasn't memorised how many digits of precision there are, and doesn't know what float size is used anyway.
[09:10:40] <hayley> Okay, one crashes way too much, another didn't crash at all, now to pick yet another.
[09:11:00] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[09:11:03] <hayley> .oO(Do newLISP, that'll be hilarious.)
[09:11:30] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[09:13:21] <hayley> Already off to a great start, as I have to change all the hard-coded CC = gcc to CC = afl-gcc.
[09:19:14] <moon-child> 'make CC=afl-gcc'?
[09:19:26] <moon-child> can override make vars that way even if they don't use ?=
[09:19:53] <hayley> That only worked when I picked the right makefile file. idk
[09:20:14] <moon-child> oh, it uses recursive make and does not know to use $(MAKE)?
[09:20:15] <moon-child> fun
[09:20:28] <hayley> Indeed.
[09:22:42] <hayley> Also, before someone asks, Picolisp is also cheating, since they just don't ever check type tags, cause real hackers don't write type bugs.
[09:22:51] <moon-child> haha
[09:23:28] * moon-child realises he was being stupid.  I blame gilberth for not telling me
[09:24:12] <hayley> newLISP doesn't crash, but its existence is undesirable behaviour to begin with.
[09:24:58] <moon-child> do s7 next
[09:32:06] <hayley> You think they could have written s7 in some way that wasn't one 96kLOC file?
[09:33:14] <moon-child> haha
[09:33:21] <moon-child> it takes over a minute to compile with optimizations in gcc/clang
[09:33:28] <moon-child> couple hundred ms in tcc
[09:33:29] <moon-child> just sayin
[09:34:49] * hayley forgot -lm
[09:35:10] <hayley> I think I'm short on an afl-tcc.
[09:35:23] <moon-child> :/
[09:35:57] <hayley> And FWIW I am starting to think that, if your parser isn't horse shit, then something that generates correct program fragments is going to work better than AFL.
[09:36:05] <hayley> e.g. the CL generator for SICL/Cleavir.
[09:36:21] <moon-child> yeah
[09:36:27] <moon-child> probably easier to automatically reduce too
[09:36:53] * hayley also forgot a -ldl
[09:37:53] <hayley> Currently I reduce CL forms by hand, since I'm not exactly sure how to program my guesswork in reduction.
[09:40:41] <hayley> Seems it's puked trying to load libc_s7.so already.
[09:41:11] <moon-child> you can tell it not to do that
[09:41:15] <moon-child> don't remember how
[09:46:24] <hayley> https://www.youtube.com/watch?v=swRF_XyheUg
[09:46:25] -ixelp- King Crimson - Neal and Jack and Me (Live In Frejus 1982) - YouTube
[10:04:00] *** Joins: notzmv (~zmv@user/notzmv)
[10:08:57] *** Quits: ozzymcduff (~mathieu@81-234-151-21-no94.tbcn.telia.com) (Ping timeout: 240 seconds)
[10:43:45] *** Joins: lisp123 (~lisp123@5.30.23.247)
[10:53:25] *** Joins: treflip (~user@user/treflip)
[11:37:27] *** Joins: shka (~herr@109.231.0.226)
[12:02:57] <hayley> Really? OpenCL max only works on integers, and fmax for floats?
[12:07:01] <hayley> At the very least I can see oclcl-petalisp very slowly training a neural network. Hooray.
[12:14:03] *** Quits: lisp123 (~lisp123@5.30.23.247) (Quit: Leaving...)
[12:26:43] <moon-child> hayley: have you thought about being a security researcher?
[12:26:55] <moon-child> professionally, I mean
[12:27:28] <moon-child> seems like it could be more fun than doing whatever bullshit is popular, and practical to get into
[12:29:50] <hayley> moon-child: I have not.
[12:30:48] <hayley> But I think I do need task chunking for kernels, as I should be churning out neural networks quickly. Could also be too many copies, though I'm pretty sure this code behaves.
[12:32:28] *** Quits: Alfr (~Alfr@user/alfr) (Killed (zirconium.libera.chat (Nickname regained by services)))
[12:32:32] *** Joins: Alfr (~Alfr@user/alfr)
[12:37:52] <hayley> No, it ends up copying every so often. Wonder if I can convince Petalisp to return GPU arrays and avoid copies.
[12:38:24] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[12:38:45] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[13:10:26] <selwyn> hayley did discover the famous zero byte gemini vulnerability
[13:18:15] <ck_> I heard the gemini variant is far less harmful than the other ones -- but more infectious because of a mutation in the byte proteine
[13:28:15] *** Quits: treflip (~user@user/treflip) (Remote host closed the connection)
[13:29:09] *** Joins: treflip (~user@user/treflip)
[13:30:32] <shka> the mutant algorithm
[13:31:03] *** Quits: treflip (~user@user/treflip) (Remote host closed the connection)
[13:32:07] <shka> good guy amazon https://old.reddit.com/r/worldnews/comments/rn6nh7/amazon_warned_workers_that_its_busy_season_could/
[13:32:08] -ixelp- Amazon warned workers that its busy season could make them feel suicidal : worldnews
[13:32:08] <shka> :D
[13:34:54] *** Joins: treflip (~user@user/treflip)
[13:34:58] <moon-child> jfc
[13:41:35] <selwyn> christ
[13:41:57] <selwyn> someone is trying to sign into an amazon account i no longer use, and can't get into
[13:42:14] <selwyn> i assume i can't petition them to simply delete it
[13:45:31] <shka> i found triple shot keycaps on the aliexpress
[13:45:47] <shka> it's bad, i am considering buying it
[13:45:55] <shka> i should stop wasting money on bullshit
[13:45:58] <treflip> Triple shot? What?
[13:46:03] <selwyn> shka: yes
[13:46:08] <selwyn> though it is christmas
[13:46:18] <shka> treflip: yeah, https://www.aliexpress.com/item/1005003325217129.html?spm=a2g0o.store_pc_groupList.8148356.1.1cac6a03OpoCpa
[13:46:19] -ixelp- Domikey WOB Keycaps for Mechanical Keyboard Cherry Profile White On Black ABS Double Shot Triple Shot Japanese GK61 GK64 [...]
[13:46:44] <treflip> Ah, interesting
[13:47:03] <shka> thought it could be double shot actually since it is all white
[13:47:41] <shka> this one looks like legit triple shot https://www.aliexpress.com/item/1005003705340694.html?spm=a2g0o.store_pc_groupList.8148356.15.4c3e6a03tNJ3zw
[13:47:42] -ixelp- Domikey Hush Keycaps for Mechanical Keyboard ABS Double Shot Triple Shot Japanese Cherry Profile Ocean Blue Purple Color [...]
[13:48:31] <selwyn> fuck amazon
[13:50:00] <treflip> I'm planning to spend some money on bullshit this week too :)
[13:50:08] <treflip> Going to by a trackball at the local computer store.
[13:50:25] <shka> trackball, huh?
[13:50:36] <shka> never understood appeal of those 
[13:57:26] <treflip> I decided to try it. I have a pair of red baoding balls, and slowly spinning them with 2 fingers while while they lie in a case feels strangely pleasant. I guess, a pointing device that feels similarly would be nice :)
[14:00:11] <treflip> I hope it's not related to some kind of sexual deviation according to any paradigm of modern psychology (-_-;)
[14:01:19] <shka> so, you like to play with BALLS
[14:01:21] <shka> ok then
[14:01:22] <shka> :P
[14:02:00] <contrapunctus> Fondling of balls as HCI...
[14:06:40] <selwyn> i wonder if its worth getting a bluetooth extender from aliexpress to extend the range of my headphones around the house
[14:07:09] <treflip> shka: Everyone who types a lot must like it, because Xah Lee said so. http://www.xahlee.info/kbd/rsi_hand_exercise.html
[14:07:24] <shka> you type with your mouse?
[14:08:01] <shka> oh, i see
[14:08:14] <shka> honestly, that never really worked for me 
[14:08:38] <selwyn> there are some shitty hand grips out there
[14:10:12] <selwyn> 'captains of crush' is the best brand
[14:19:27] <treflip> selwyn: I've heard about 'captains of crush', but I couldn't find their products in my country. 
[14:19:37] <selwyn> that's a shame
[14:21:26] <treflip> Anyway, I'm not a fan of hand grips, I train my grip with a 32kg kettlebell and a hangboard 
[14:21:38] <selwyn> i don't do it for rsi, but i do pullups every 20 minutes throughout the day
[14:21:45] <selwyn> which is not bad for grip strength
[14:22:06] <treflip> nice
[14:24:04] <shka> treflip: Russia?
[14:24:48] <treflip> shka: yes :)
[14:24:55] <selwyn> those hangboards are hardcore
[14:24:58] <shka> 32 kg kettlebell sounds Russian 
[14:24:58] <selwyn> are you a climber?
[14:25:18] <selwyn> i can't remember if 32kg is a traditional weight
[14:26:10] <shka> selwyn: it is the "professional" weight
[14:26:58] <shka> iirc based on the oldie weights used at ports on big scales
[14:27:07] <shka> in Russia
[14:27:30] <shka> probably rounds up nicely with Russian imperial units
[14:28:23] <shka> https://en.wikipedia.org/wiki/Pood
[14:28:27] <treflip> selwyn: Not really. I visit the local climbing centre to hang out with my friends, they are climbers. It has a decent gym, so I usually climb a little bit, and exercise with barbells.
[14:29:13] <shka> so yeah, here you go
[14:29:21] <treflip> shka: yes, right, 32kg is 2 poods
[14:29:45] <shka> i actually have 28 kg kettlebell, i have no desire for heavier one 
[14:30:44] <selwyn> return to imperial units
[14:30:54] <shka> selwyn: NO
[14:31:02] <shka> metric master race
[14:31:09] <treflip> selwyn: let's measure weights in standard russian kettlebells
[14:32:02] <selwyn> nassim nicholas taleb makes some good arguments in favour of old measurement systems actually
[14:32:33] <selwyn> but the biggest argument against them imo is that even people who use them often don't know wtf anything is
[14:34:03] <shka> listen... embrace the magnitude of ten, standardized prefixes,  and have precise experiments as a reference values and we will talk
[14:34:24] <moon-child> pwoers of 12 > powers of 10
[14:34:25] <shka> right now only gram is a problem 
[14:34:38] <selwyn> using 12 and 16 is better for commerce since they are more divisible
[14:34:49] <moon-child> 16 is just 2 with extra steps
[14:34:56] <Alfr> moon-child, for all? How about 12^0 and 10^1?
[14:35:31] <shka> selwyn: yes, but it is harder to convert to larger/smaller units
[14:35:38] <moon-child> Alfr: that is like saying that ±(x+y) is the same as ±x + ±y
[14:35:57] <Alfr> moon-child, :)
[14:36:20] <moon-child> (I actually made that mistake recently, or a similar one)
[14:37:40] <shka> selwyn: also, since we hade some british WW2 fighters 
[14:38:03] <shka> there were some merlin engines produced in the USA as you may know
[14:38:09] <Alfr> selwyn, what about base 60?
[14:38:33] <selwyn> base 60 also good but afaik not used anywhere in imperial units
[14:38:42] <shka> and they had to convert those to metric system
[14:39:10] <selwyn> fun
[14:39:13] <shka> converting piston engine from one system of measurement to other is rather annoying
[14:39:28] <shka> so let's not do that again
[14:39:51] <shka> as greg explains in https://www.youtube.com/watch?v=XRY4T7tocf0
[14:39:52] -ixelp- WW2 engines, BMW 801 vs. Soviet ASh-82 - YouTube
[14:40:56] <selwyn> the anti metric movement, big in the 2000s, was arguably a driver of brexit
[14:41:07] <moon-child> really?
[14:41:12] <shka> ... what?
[14:41:26] <selwyn> i thought i posted about this before
[14:42:03] <shka> britain... stop smoking crack or whatever the fuck you are doing right now
[14:42:21] <selwyn> the eu is held responsible (mostly unfairly) for imposing the metric system on the uk
[14:44:05] <shka> well, you can just say "thank you"
[14:44:12] <selwyn> a shopkeeper was prosecuted for using imperial units and became a 'metric martyr'
[14:44:25] <selwyn> but the idiot should have sold in metric units as well
[14:44:29] <selwyn> like every other shop in the country
[14:44:32] <selwyn> and it would have been fine
[14:44:35] <shka> that's rather dramatic 
[14:44:53] <selwyn> well, he did die young a bit after that apparently
[14:47:24] <selwyn> personally, i think in both systems at once and sometimes have to convert either way on the fly
[14:47:32] <selwyn> which is time consuming i guess
[14:48:59] <shka> https://old.reddit.com/r/europe/comments/rn5f2v/a_blow_to_the_polish_mayonnaise_industry_belarus/
[14:49:01] -ixelp- A blow to the Polish mayonnaise industry. Belarus has banned the sale and import of Polish mayonnaise. Napoleonic Mayonn [...]
[14:49:27] <shka> and the flamewar about the best brand of mayo
[14:50:25] <selwyn> i did buy polish mayonnaise once it was ok but not worth the price increase
[14:50:50] <selwyn> hm
[14:51:07] <selwyn> considering how much of it is oil, there is surely an important quality difference
[14:51:48] <shka> well, i don't buy mayo, way to many calories in this shit :D
[14:51:51] <selwyn> what is going on with this polish soldier who defected to belarus
[14:52:03] <shka> i don't know
[14:53:00] <Alfr> selwyn, be glad you didn't end up with: I'd like to have 2.5 G/c^2 tomatoes.
[14:53:22] <selwyn> lol
[14:55:49] <selwyn> my grandma would get angry after asking for our height as children: '130cm | say it in english!'
[14:56:20] <hayley> https://www.youtube.com/watch?v=LPfFEGbjE4M
[14:56:20] -ixelp- Gary Numan Bombers Live Australia 1980 - YouTube
[14:58:16] <ck_> which kind of english? ells?
[14:58:34] <ck_> also what is this "stone" that you're using for weight. Where is the Ur-Stone
[15:01:50] <selwyn> just as paris has its reference kilogram
[15:02:04] <selwyn> i assume the great british stone is in some country house somewhere
[15:02:13] <shka> i wanted to ADD that OMP algorithm to the gradient boosting in SL
[15:02:21] <shka> but surprise, it already works
[15:02:24] <selwyn> a stone is 14 pounds. wtf
[15:02:25] <shka> OO
[15:02:29] <selwyn> not very divisible
[15:02:36] <ck_> https://en.wikipedia.org/wiki/Stone_(unit)
[15:02:49] <selwyn> perhaps this imperial system is not that great
[15:02:54] <ck_> perhaps :-D
[15:03:05] <selwyn> i don't understand why stones aren't used in the us, though
[15:03:18] <ck_> maybe something to do with tea shipments
[15:03:18] <hayley> shka: Yeah, well I got Petalisp-on-OpenCL to train a neural network on MNIST handwriting from 5% accuracy to a whole 6%.
[15:03:52] <hayley> I need task chunking, because OpenCL is a bag of overhead w.r.t tasks, and then I might see if device->host->device copies are a problem.
[15:03:53] <selwyn> stones are useful to judge people's weights approximately
[15:04:09] <shka> hayley: you usually train neural networks in batches anyway
[15:04:11] <ck_> do you have a scale with stone scale on it, selwyn ? do you know how much stone you are off the top of your head?
[15:04:24] <selwyn> just under 12
[15:04:27] <shka> and are you using conv network?
[15:04:33] <hayley> shka: Indeed. So hopefully I don't copy toooo much.
[15:04:42] <selwyn> yeah, my scale has both systems on it
[15:04:49] <hayley> https://github.com/marcoheisig/Petalisp/blob/master/examples/mnist.lisp Does not look like it.
[15:04:50] -ixelp- Petalisp/mnist.lisp at master · marcoheisig/Petalisp · GitHub
[15:05:03] <selwyn> so i track my weight in kg but report it in stones
[15:05:15] <ck_> report to whom
[15:05:18] <hayley> (FWIW I had to modify the definitions of RELU and RELU-PRIME to include equivalent oclcl code for both.)
[15:05:23] <selwyn> well, to the english
[15:05:26] <selwyn> and more recently to you
[15:05:30] <shka> selwyn: check this up https://en.wikipedia.org/wiki/Obsolete_German_units_of_measurement
[15:05:57] <shka> :D
[15:06:04] <ck_> yeah we got diversity in measurements
[15:06:43] <shka> hayley: yup, it does not look like convolution
[15:07:50] <shka> and learning rate is rather low
[15:08:42] <shka> ck_: "listen guys, that Napoleon freak was sure an evil tyrant, but we are adopting metric system"
[15:09:02] <shka> "ja, sounds like a good idea"
[15:12:10] <pl> a lot of countries continued to use Napoleonic legal system till 20th century
[15:12:27] <selwyn> gnuxie: https://youtu.be/f2d7kJPimyE?t=222
[15:12:28] -ixelp- The BAM: Russia's Unknown Trans-Siberian Train🇷🇺 - YouTube
[15:12:36] <selwyn> bald channels geoff marshall
[15:12:45] <selwyn> next up: least used station on the trans siberian
[15:12:55] <pl> I think the last bit of legal code that got rewritten, thus ending presence of Napoleonic Code in Poland, was done in 1950s
[15:14:23] <selwyn> in turkey, they formed a committee to choose between european legal codes in the 1920s, and decided that swiss was best for some reason
[15:14:28] <selwyn> have always been curious why
[15:16:54] <Gnuxie> seen the BAM series, it was fun 
[15:18:38] <ck_> shka: are you saying it wasn't a good idea?
[15:18:57] <shka> ck_: no, it was a very good idea
[15:19:12] <shka> but it is funny that it took that to clean up that mess
[15:19:57] <ck_> I don't think the french are up to conquering the uk and usa to do it again though
[15:25:05] <pl> UK is pretty much metric outside of few bits and nationalist idiots
[15:25:24] <selwyn> it is important to keep dual use for the benefit of old people ime
[15:25:26] <selwyn> road signs etc.
[15:26:27] <selwyn> i was taught that a billion is 10^12 in maths class and took some time to unlearn
[15:26:44] *** Joins: random-nick (~random-ni@87.116.180.98)
[15:26:49] <selwyn> that's an imperial billion :)
[15:26:50] <ck_> oh man yeah I never looked up where that came from
[15:26:59] <pjb> selwyn: this is still the case in Europe!
[15:27:02] <shka> selwyn: now you ought to learn US imperial system :P
[15:27:03] <selwyn> oh
[15:27:12] <selwyn> isn't milliard 10^9
[15:27:14] <pl> selwyn: billion is a bit of problematic case ;D
[15:27:20] <pjb> and a trillion is 1e18
[15:27:43] <pl> yes, in polish we still have milliard (10^9) and billion/billiard (10^12)
[15:27:51] <pl> and of course later number are shifted as well
[15:28:56] <selwyn> traditional uk usage is billion for 10^12 but no word for 10^9
[15:29:13] <selwyn> which i would guess is why it could not resist americanisation
[15:34:27] <selwyn> how is napoleon viewed in poland
[15:35:40] <shka> selwyn: he is a hero, even mentioned in the anthem
[15:36:07] <gilberth> Good morning #lispcafe! And a "merry Christmas" for those that celebrate the eve and care.
[15:38:15] <selwyn> merry christmas gilberth
[15:38:26] * hayley has to wait another hour to tell the joke.
[15:39:14] <gilberth> Which one? The one about Newton and the Christmas tree being an apple tree?
[15:40:19] <hayley> Not yet.
[15:40:26] <selwyn> shka: interesting
[15:41:04] <shka> selwyn: fought russians, prussians, and austrians
[15:41:10] <gilberth> hayley: I am puzzled as you are the one who is early, aren't you?
[15:41:10] <selwyn> yes
[15:41:26] <shka> which were two imperial forces participating in the downfall of Poland
[15:41:28] <hayley> Perhaps.
[15:41:44] <shka> AND we never were at war with France, so it's nice
[15:45:01] <hayley> https://gbracha.blogspot.com/2009/12/chased-by-ones-own-tail.html?m=1
[15:45:02] -ixelp- Room 101: Chased by One’s Own Tail
[15:53:11] <hayley> https://www.youtube.com/watch?v=mEBRzrYKifU
[15:53:12] -ixelp- Thank God It's Not Christmas - YouTube
[15:59:51] <selwyn> sigh
[16:00:22] <selwyn> wish i could request 2fa with a card reader from my bank for every transaction
[16:00:37] <selwyn> online transaction i mean (lol)
[16:04:31] <gilberth> Hamburg once was occupied by Napoleon. There is a term "Fisimatenten", which means doing silly or unwanted things. Especially used by parents like "Don't do fisimatenten!" in particular to daughters. It's said it comes from "Visitez ma tente" and the advice to not follow French soldiers into their tent, when they offer just that.
[16:04:52] <selwyn> lol
[16:07:07] * hayley uploaded an image: (90KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/TRpXkhtLpilhoHccIYyJlHDc/file_3116.jpg >
[16:07:09] <shka> well, anyway, Napoleon fucked up enemy empires so Napoleon good
[16:07:14] <hayley> Idiot's guide to foxes
[16:07:28] <shka> that's the mindset here
[16:08:09] <shka> and I know that Napoleon was a sadistic, evil bastard but that's the sentiment here 
[16:08:14] <selwyn> idk
[16:08:18] <selwyn> i am sympathetic to napoleon
[16:08:19] <hayley> gilberth: So, today I fuzzed someone's Lisp implementation in C++ (the one with O(n²) MAPCAR) and struggled to not find crashes.
[16:08:35] <shka> metric system is dope tough 
[16:08:46] <selwyn> 'what did napoleon ever do for us'
[16:08:49] <moon-child> O(n²) mapcar?
[16:08:59] <hayley> Leave a dangling left paren? Parser segfaults. AREF out of bounds? Segfault. Run a while loop for too long? Segfault.
[16:09:06] <moon-child> let me guess: (loop for i below (length x) collect (f (elt x i))?
[16:09:17] <gilberth> hayley: How can you implement MAPCAR in O(n**2)? And, should I be bothered?
[16:09:25] <moon-child> gilberth: like that ^
[16:09:25] <hayley> Yes, they use arrays but a functional-ish style of implementing map.
[16:09:59] <hayley> Well, think of a recursive MAP on lists, but with vectors and CONCATENATE.
[16:10:03] <shka> selwyn: well, stuff he did in the Egypt was horrendous 
[16:10:07] <selwyn> yes
[16:10:11] <selwyn> outside of europe not great
[16:10:20] <hayley> Maybe you should be worried, as I imagine someone deployed it with like 500 github stars.
[16:10:24] <moon-child> hayley: hm, but that concatenate should be in-place in c++, and so amortized?  Or did they get that wrong?
[16:10:53] <hayley> Well, damn everything copies, nothing is in place.
[16:10:58] <moon-child> :<
[16:11:20] <moon-child> by the way, how do they gc?
[16:11:24] <gilberth> hayley: What do you use to fuzz it? I might try that with one of my toy implementations.
[16:11:26] <moon-child> on second thought, don't tell me
[16:12:03] <hayley> gilberth: American Fuzzy Lop
[16:12:21] <hayley> moon-child: Pick one already!
[16:12:33] <shka> selwyn: to be fair... https://www.youtube.com/watch?v=CQZ1Ybq6akI
[16:12:34] -ixelp- Forgotten weapons turk meme ( "Based Gun Jesus") - YouTube
[16:12:46] <selwyn> is this about the big cannon
[16:12:46] <gilberth> moon-child: Well, how about: Walk the heap and for each object recursively walk the root set and see if you find a reference? That should be O(n**2) too.
[16:13:05] <shka> selwyn: it is about killing turks 
[16:13:27] <gilberth> Worse, if you don't mark, but keep a list of already seen objects.
[16:13:28] <selwyn> lol
[16:13:51] <shka> so yeah, Napoleon had by no means monopoly on unusual cruelty against non-Christians 
[16:14:16] <selwyn> i assume they would be even less accurate than round bullets
[16:14:24] <selwyn> but wtf
[16:14:28] <hayley> I'll just say it's what C hackers do when faced with a hard memory management problem (and they realise they can't segfault btw).
[16:14:29] <selwyn> its like a tommy gun
[16:15:11] <shka> selwyn: yeah, not the most practical idea, but what a spiteful bastard :P
[16:15:21] <gilberth> hayley: And how does that fuzzing work? Throw random things at the REPL? How does it narrow down to actual s-expressions?
[16:15:38] <selwyn> a friend of mine is teaching english in egypt
[16:15:42] <hayley> Nah, can't be that easy, as they have mutability and thus object identity. /me scratches head
[16:15:44] <selwyn> and he got cast as an extra in a film
[16:16:02] <selwyn> as an evil british officer forcing a child to salute the british flag
[16:16:13] <hayley> gilberth: I threw the example programs in a folder, removed the very slow ones, and let it load random corruptions of those programs.
[16:16:32] <gilberth> hayley: I see.
[16:16:34] <hayley> AFL flips bits, repeats substrings, it's kinda stupid but it finds equally stupid bugs.
[16:17:01] <moon-child> there is profile-guided fuzzing
[16:17:15] <moon-child> tries test all combinations of branches or sth
[16:17:19] <gilberth> hayley: Yes, milady, but it should catch things like missing bound checks quick.
[16:17:25] <hayley> That said, it also uses meters compiled into the program to decide what is interesting, but the techniques to generate random crap still aren't too exciting.
[16:17:29] <shka> selwyn: because empires are evil, m'kay?
[16:17:32] <hayley> Yes, I found too many of those.
[16:17:52] <shka> selwyn: and even in Britain, press gangs were a thing, right?
[16:17:58] <gilberth> moon-child: Interesting.
[16:18:13] <selwyn> especially in britain
[16:19:07] <hayley> Found one in the parser (tries to pop a token stream without checking if there's anything there), then some in the VM (AREF doesn't check bounds, and you can blow the stack by compiling seemingly harmless forms).
[16:19:37] <moon-child> hmm, looks like it's 'coverage-guided fuzzing', not 'profile-guided fuzzing'
[16:19:46] <pl> anyone here doing consulting/side projects kind of work?
[16:19:54] <hayley> e.g. (while true 2) blows the data stack, because the 2 is never popped, but you can't just add a POP because e.g. (while true (set bla 2)) doesn't push anything at the end.
[16:20:04] <shka> pl: i am trying to that next yaer
[16:20:15] <moon-child> hayley: bah!  That is not even fun.  Given an info leak, you can write whatever you want wherever you want
[16:20:20] <shka> but i don't have any experience just yet
[16:20:26] <pl> Cause I have an idea for a side business, and I need some validation :/
[16:21:07] <shka> well, spit it up, i won't steal idea, i promise
[16:21:09] <moon-child> what is your idea?
[16:21:20] <shka> unless it is a really good idea ofc
[16:21:22] <hayley> moon-child: I can find stupid bugs, but I don't know how to turn them into anything fun. Sorry.
[16:22:23] <hayley> I don't think any of those can lead to interesting hacks, nonetheless.
[16:23:15] <moon-child> blowing data stack could be fun.  Have to figure out what is after it, and how to make use of that
[16:24:36] <hayley> I guess.
[16:25:20] <pl> I want to prepare a kind of packaged deal of tooling for running distributed project
[16:25:56] <shka> pl: what kind of distributed project?
[16:26:01] <moon-child> distributed as in distributed computer system or as in collaboration between distributed humans?
[16:26:06] <pl> so you'd sign up, and you'd get back SSO-enabled gitlab/gerrit, chat solution, nextcloud, etc.
[16:26:11] <pl> moon-child: collaboration
[16:26:14] <shka> something like: need more hardware, gimme now, shut it down when not needed?
[16:26:21] * hayley sells TLA+ and SWCL bundle for $69
[16:26:30] <pl> with the SSO being either hosted or possible to integrate with whatever one you want
[16:26:48] <shka> pl: ok, so the benefit of that that is self-hosted?
[16:27:09] <shka> you are getting ms office-like tools, but without being slave to the MS?
[16:27:20] <shka> and perhaps even actually working good?
[16:27:22] <pl> shka: hosted (but self-hosting is an option), but the idea is that instead of having to handle all kinds of setup yourself, you have one point of contact
[16:27:35] <shka> i see
[16:27:47] <pl> with options to host in jurisdiction fitting you (for example you want to avoid USA)
[16:28:07] <moon-child> I feel like microsoft offers something very similar
[16:28:15] <moon-child> and can probably outcompete you
[16:28:32] <moon-child> regardless of whether your product is technically superior
[16:28:47] <pl> moon-child: not everyone wants to be on Azure, not everyone wants to have any point of possible contact with US law
[16:28:53] <selwyn> pl: important to be very unsentimental about the idea itself and realistic over whether it will sell/ make money
[16:29:00] <shka> pl: yeah, i can see value of this, but mostly for companies that want to be self-hosted
[16:29:05] <pl> selwyn: I'm very unsentimental
[16:29:20] <selwyn> if you ask us, then of course we will naturally be sympathetic to your cause, but importantly we are (not necessarily) your potential customers
[16:29:21] <shka> and MS suite is honestly pretty shit
[16:29:25] <pl> shka: for self-hosters, I could build up a VM setup, or even ship them preconfigured systems
[16:29:25] <shka> especially teams
[16:29:33] <selwyn> read 'the mom test' for how to talk to people about your new idea
[16:29:34] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[16:29:47] <pl> selwyn: The kind of customer MS grabs on this is bigger than the ones I want to target
[16:29:54] <pl> also, it gets easily pricer
[16:29:57] <shka> pl: yeah, i would try to go that route, i think that this niche is not well covered just now
[16:29:59] <moon-child> so customization sounds like a major selling point
[16:30:14] <hayley> You just tell ya mum? I do that with all the compiler bullshit. Not sure if she pretends to understand or not.
[16:30:25] <pl> Major selling point IMO would be "we will connect whatever SSO you need"
[16:30:36] <pl> because SSO is a problematic topic in this space
[16:30:40] <shka> if i would start my own company, i would want to be self-hosted and i would probably buy your offer 
[16:30:51] <pl> so, sure, you can self-host all the components I'd be hosting
[16:30:59] <hayley> "Look mum I'm selling your own Facebook for $50"
[16:31:03] <selwyn> ok, but you need to figure out if your audience even exists i.e. do people actually regard us law as a dealbreaker? or in practice would they just resign themselves to using azure
[16:31:07] <pl> being pissed off about the amount of work it took me is why I'm thinking of offering it as a service
[16:31:07] <selwyn> this is important to find out
[16:31:14] <shka> and nextcloud is kinda a bitch to setup
[16:31:23] <shka> pl: yes, exactly!
[16:31:39] <pl> selwyn: US jurisdiction is a big pain point with customers small and big
[16:31:46] <selwyn> ok, well if you are doing it to solve a problem you had personally, this is a good point
[16:31:49] * hayley clears throat
[16:32:03] <hayley> Have you realised it's been a whole year since Christmas?
[16:32:04] <pl> selwyn: I worked with companies that might use AWS, but we were forbidden from using any region in USA
[16:32:43] <selwyn> ok
[16:32:53] <pl> selwyn: Google has a weird special relationship with I think SAP AG in order to place a moat between US law and Google Cloud in EU
[16:33:05] <shka> pl: furthermore, there are legitimate reasons to keep company development infrastructure on the company servers 
[16:33:07] <treflip> Our company self-hosts all the components used in our development pipeline, but I feel, that goes against modern trends
[16:34:04] <shka> treflip: yes, but after using azure for over a year now... i don't want to host company stuff on azure
[16:34:14] <shka> for client application? sure
[16:34:46] <shka> but stuff like disappearing databases, fees for exporting data from the cloud and so one... no thanks 
[16:34:57] *** Inline__ is now known as Inline
[16:35:24] <shka> it is just difficult to predict what will be your exact costs at the end of the month 
[16:35:41] <selwyn> pl: when i co founded a startup, we did not communicate with possible customers in the right way at all, and if we had, i think we would have been much more realistic about our potential, which is why i recommended that book
[16:35:46] <selwyn> but it sounds like you are on a good path
[16:35:58] <selwyn> also, you have actual experience in the workplace, which we did not have at all
[16:36:01] <shka> i would rather host my own server, and if it is easy to backup everything (as in: everything in one VM) i would have picked that
[16:36:31] <selwyn> i cannot really comment on the idea itself apart from i used azure once and didn't enjoy it
[16:37:12] <selwyn> as a matter of principle i prefer to avoid big tech whenever possible
[16:38:45] <shka> also
[16:38:48] <shka> use VPN
[16:38:58] <shka> and enclose everything you run internally 
[16:42:06] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (Quit: Leaving)
[16:42:07] <shka> pl: so in summary, i think that your target are companies that want to self-host their internal stuff because of either security policy, laws and regulations, or even private data 
[16:42:28] <shka> i used to work in the medical sector, and the private data was a major concern for us
[16:54:23] *** Joins: Inline (~Inline@aftr-37-201-240-204.unity-media.net)
[17:00:08] <pl> I'm considering handling hosting, but having an option to provide self hosted setup 
[17:00:18] <pl> As I mentioned, even shipping hw 
[17:00:43] <selwyn> i am sympathetic to napoleon because he represented the best chance for a semi-sane, progressive continental system at peace, as opposed to cruel anglo naval domination of the world
[17:00:52] <selwyn> britain offered to give up nearly every colony in 1802 out of fear
[17:04:27] <selwyn> https://eox.at/2021/08/average-colors-of-the-world/
[17:04:27] -ixelp- Average colors of the world | EOX
[17:08:24] <pl> Si could offer different tiers of isolation for different prices (as isolation raises costs) 
[17:09:39] <pl> Also, ancillary services like management of DNS for you 
[17:10:03] <pl> A kinda "one stop shop" for a bunch of services you might need for a small company or single project 
[17:20:40] <gilberth> Any UNIX experts around? I want to map the same page with two virtual addresses, once with read-write access, and another time with read-only access. I could do that fine with a temporary file and mmap(2). Yet, this poses a problem as another process may get hold of that file. Is there another way?
[17:23:52] <gilberth> I would need a file which doesn't exist in the file system proper and thus nobody else could steal.
[17:32:34] <MichaelRaskin> What kind of communication you have between the processes?
[17:33:17] <MichaelRaskin> Also, what actual OS are you working on?
[17:33:42] <MichaelRaskin> Linux seems to have just memfd_create
[17:33:44] <gilberth> I have only one process. What I want is to have the read-only objects in my toy lisp. However I would need a shadow map of the memory with r/w to create them.
[17:34:22] <gilberth> MichaelRaskin: It ought to work with both Linux and BSD/macos.
[17:36:53] <gilberth> And my Linux has no memfd_create(2). :-(
[17:37:11] <MichaelRaskin> Also no open(O_TMPFILE) ?
[17:38:14] <gilberth> There should be O_TMPFILE, yes. /me reads the man page.
[17:38:51] <MichaelRaskin> You probably have some chances with shm_open
[17:41:09] <gilberth> Oh dear, shm* used to be pretty limited in last century. But doesn't shm_open create a name, too. I mean a name could in theory be attached to by another process?
[17:42:42] <gilberth> Well, I guess there is no universal solution. :-(
[17:43:08] <MichaelRaskin> We-ell. yes but it would need using system-specific tricks for discovering the name
[17:43:40] <gilberth> Or just guess the name.
[17:44:23] <MichaelRaskin> If you use a suffix derived by using /dev/urandom, if someone guesses that, you have larger issues with security on your machine
[17:44:48] <gilberth> Hmm. You belief so?
[17:45:50] <MichaelRaskin> I am pretty sure some things use 256 bits from /dev/urandom as AES-256 keys
[17:46:09] <dave0> gilberth: maybe mmap /dev/zero ?
[17:46:12] <gilberth> Still, there is a non-zero chance.
[17:46:55] <gilberth> dave0: Doesn't work for some reasons. mmap(2) says "No permission". But perhaps I am missing sth.
[17:48:14] <MichaelRaskin> gilberth: there is also a nonzero chance that your computer will spontaneously bitflip a part of SSH key making the host extremely attackable…
[17:48:29] <gilberth> No, it says "Operation not supported by device". Which puzzles me, because I remember mmap(2)ing /dev/zero. /me scratches head.
[17:49:49] <gilberth> MichaelRaskin: Yes. There could also be an alpha particle that spontaneously sets my uid to 0.
[17:52:45] <pl> gilberth: have you tried creating the file then unlinking it, passing the fd if necessary to another process? 
[17:54:16] <gilberth> pl: That works, but there is a brief time window at which the file exists. And: I have only one process, I am not concerned about sharing between processes; in fact I want to be sure that sharing between processes cannot happen unless, I ask for it.
[17:54:52] <gilberth> s/file exists/file has a name/
[17:55:50] <gilberth> With unlink(2) I could go the random name route to make the chance to clobber me very small.
[17:55:56] <pl> If you have kernel 5.7 you could maybe use mremap for this 
[17:57:13] <gilberth> I have 3.16 and 4.19 on the other machine.
[17:57:38] <gilberth> And macos on those machines with a display attached.
[17:59:24] <gilberth> I wonder how CLISP does that, but I don't feel like reading that overly verbose sources with an #if on every other line.
[18:06:15] <selwyn> they keep lessening the covid restrictions
[18:06:32] <selwyn> it means i could be entitled to get out of isolation quicker if i follow the dumb rules
[18:06:45] <selwyn> but i consider that harmful
[18:08:21] <gilberth> Are you under quarantine?
[18:08:28] <selwyn> i am self isolating
[18:08:49] <gilberth> I see.
[18:15:15] <selwyn> what would i do with 3 extra days between christmas and new year anyway
[18:23:54] <pl> gilberth: CLISP memory management code is a horrifying mess that shouldn't be replicated anywhere
[18:25:40] <gilberth> pl: I am aware, I once was a CLISP hacker.
[18:26:21] <pl> I'd say burn it in fire, but it might summon nyarly
[18:27:42] <gilberth> Curious, Linux unlike macos allows me to mmap(2) /dev/zero, but two mmap(2) with the same offset don't share a page.
[18:28:32] <gilberth> Perhaps I will go the open(2)/unlink(2) route with macos.
[18:29:55] <gilberth> Which, of course, also works with Linux.
[18:32:56] <gilberth> selwyn: For what it is worth, I was in practically complete isolation in '19 and '20, anyway. The pandemic makes no difference.
[18:37:24] <pjb> exactly. Not much differences since 2000, really.
[18:37:46] <pjb> We may have just increased the use of internet shopping, that's all.
[18:38:09] <pjb> The positive is that now it's easier to get remote jobs.
[18:38:46] <pjb> gilberth: /dev/zero is read only.,
[18:39:15] <pjb> gilberth: if you wrote a 1-page-long file, and mmaped it twice, you'd get a shared page (with the right options to mmap).
[18:40:04] <gilberth> pjb: A mmap(2) with PROT_WRITE lit works and I get a writable page. It's only that another mmap(2) doesn't give me the same underlying "physical" page.
[18:40:51] <pjb> The file too needs to be RW to be able to share the page.
[18:41:04] <gilberth> pjb: Yes, mapping a regular file twice with different PROT_... settings to different virtual addresses works fine with both Linux and macos.
[18:41:45] <gilberth> I get one virtual address for r/w access and one for r/o access, which is what I want.
[18:47:17] <selwyn> how many subscribers do you need before you can be considered a great youtuber
[18:48:06] <gilberth> I'd say that would also depend on how large your potential audience is.
[18:49:18] <selwyn> z/os mainframe community?
[18:49:50] *** Joins: Achylles (~Achylles_@2804:431:d725:86fc:abf6:fa73:2a9e:707b)
[18:49:57] <gilberth> Puh! I have no idea how large that community is.
[18:50:31] <gilberth> Heck, I don't even know how large the Lisp community is.
[18:57:03] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 250 seconds)
[19:01:20] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[19:04:02] <selwyn> it's nearly 6 months and i can say that i've learned over 2000 words with another 2000 soon to follow
[19:04:09] <selwyn> would recommend spaced repetition systems to all
[19:04:32] <gilberth> Are you using flash cards?
[19:04:37] <selwyn> yes
[19:04:55] <gilberth> Yes, those are quite effective.
[19:06:27] *** Quits: random-nick (~random-ni@87.116.180.98) (Ping timeout: 256 seconds)
[19:07:28] <gilberth> I ought to use those to extent my English vocabulary. In the 90s I could mark a word, press a hotkey and see it looked up in a dictionary and automatically added to a vocabulary file, which a little flash program I could use for memorizing. I should recreate that.
[19:08:12] <gilberth> * flash card training program ; and s/extent/extend/ I guess.
[19:09:15] <edgar-rft> spaced repetition works great for flute playing, too, not only for pure brain things :-)
[19:09:34] <gilberth> You play the flute?
[19:09:54] <edgar-rft> yes, among other noises :-)
[19:11:07] <shka> gosh, i hate writing numeric code
[19:11:27] <gilberth> Then don't do it. :-p
[19:11:31] <edgar-rft> write alphabetic code instead
[19:12:13] <shka> gilberth: this algorithm won't write it itself
[19:12:35] <edgar-rft> use genetic programming
[19:12:42] <shka> but regardless, i have no idea what i am doing wrong now
[19:13:55] <gilberth> shka: Yes, this is the nature of numeric code: All magic.
[19:14:08] <shka> that's reassuring 
[19:14:17] <gilberth> Sorry.
[19:14:44] <shka> well, the problem is that i want to write a fairly simple algorithm and I fail at it miserably 
[19:14:52] <selwyn> numeric code is the most stressful to write imo
[19:14:56] <selwyn> if its wrong, its wrong
[19:15:19] <selwyn> a webshit api can be 80% functional and its still better than half the rubbish out there
[19:16:31] <shka> yeah, and i am still stuck at OMP
[19:16:34] <shka> fucking shit
[19:19:10] <edgar-rft> let's agree that 1+1=5 and say that it's better than most of the math code found out there in the interwebz
[19:42:18] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (Quit: Leaving)
[19:51:03] <gilberth> GC issues are hard to debug, too. If it's wrong, it's wrong, too. All bursts in flames.
[19:54:43] <White_Flame> edgar-rft: "code found on the internet" has basically become one big terrible telephone game of copy/paste
[19:55:05] <selwyn> the numeric code not on the internet can also be bad
[19:55:49] * |3b| wonders if "code found on the internet" is better or worse than "poorly implemented from some random paper"
[19:58:04] <shka> residuals were all wrong
[19:58:41] <shka> so i wrote those in a loop because matrix algebra is hard -_-'
[20:00:24] <|3b|> particularly when "just use the paper's authors' fortran code" is the industry standard since they didn't put everything in the paper :p
[20:00:57] <selwyn> i get questions from implementers fairly regularly
[20:01:05] <selwyn> i should have bundled fortran code with my paper
[20:01:18] <|3b|> that or "that paper is too hard, so industry standard is just implement some other paper"
[20:01:43] * |3b| apparently isn't very good at picking which papers to implement :(
[20:03:24] <|3b|> selwyn: as long as it is a usable license, i think the fortran code in question was some random ACM license that didn't sound particularly obviously usable for anything but writing more acm papers when i looked at it
[20:04:09] <dave0> nite all
[20:04:17] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[20:08:19] <amazigh> hey
[20:08:29] <amazigh> music please :)
[20:08:56] <amazigh> I have a good dad programmer joke in exchange ;)
[20:12:57] <treflip> amazigh: good music https://modarchive.org/index.php?request=view_by_moduleid&query=168513
[20:12:58] -ixelp- The Mod Archive v4.0b - A distinctive collection of modules - "Introspection" - Necros/PM - necros_-_introspection.s3m ( [...]
[20:19:38] <edgar-rft> When floating-point FPUs were developed in the 1970s the hardware folks used to test their chips against the most established university math table books of that time, until they realized that the bugs in that table books were worse than the math results of their chips (no joke).
[20:20:33] <gilberth> Were these math tables made by human computers?
[20:22:53] <amazigh> treflip: what do you use to play it?
[20:23:13] <|3b|> there is a JS player on that site
[20:24:03] <edgar-rft> gilberth: yes, the old way, computed by hand from humans
[20:25:12] <gilberth> I wonder, if some sort of checking was implemented.
[20:26:18] <amazigh> the js player does not work
[20:26:43] <MichaelRaskin> gilberth: pretty sure that yes, but also this reduces the errors, not zeros the error rate
[20:27:57] *** Alfr is now known as Guest2790
[20:27:57] *** Quits: Guest2790 (~Alfr@user/alfr) (Killed (strontium.libera.chat (Nickname regained by services)))
[20:28:01] *** Joins: Alfr (~Alfr@user/alfr)
[20:29:56] <treflip> amazigh: mpv can play it
[20:30:06] <|3b|> ah, any mod/s3m player should play it. generic media players probably have plugins for it too
[20:30:12] <treflip> or you can listen to it in browser
[20:31:22] <treflip> ah, I see, js player doesn't work
[20:49:35] <shka> i give up, maybe i will use clustering algorithm instead
[20:49:41] <shka> see ya later
[20:59:29] *** Quits: Achylles (~Achylles_@2804:431:d725:86fc:abf6:fa73:2a9e:707b) (Remote host closed the connection)
[21:14:16] *** Joins: Catie (~user@user/catie)
[21:31:27] *** Joins: Inline (~Inline@aftr-37-201-240-204.unity-media.net)
[21:40:17] <selwyn> its cider time
[21:41:41] <|3b|> it is watch sbcl load babel a few hundred times time here :p
[21:42:40] <selwyn> but why
[21:43:11] <|3b|> because bugs, yay
[21:43:27] <|3b|> https://bugs.launchpad.net/sbcl/+bug/1955723
[21:43:27] -ixelp- Bug #1955723 “misuse of mprotect() on dynamic space” : Bugs : SBCL
[21:44:00] <|3b|> the fun kind where the test case isn't reliable so you just have to run it a bunch of times until you get bored and hope that was good enough
[21:44:04] <selwyn> tfw
[21:44:45] <|3b|> and the extra fun kind, where the test case is "load pngload.test from a fresh fasl cache" (or pngload or cffi or mmap or babel)
[21:49:55] <shka> some christmas music for you all https://www.youtube.com/watch?v=Gx-H8GGI3fY&list=PLfimnwaZdumj7L08gjvh3NY2bhSZrXBDu
[21:49:56] -ixelp- Candyman - YouTube
[21:50:14] <shka> and time to watch "Die Hard"
[21:52:05] <selwyn> have been brewing this since halloween
[21:54:24] <selwyn> `lets see how it affects my route kanal performance
[22:04:01] *** Quits: MichaelRaskin (~MichaelRa@ipb21a9944.dynamic.kabel-deutschland.de) (Read error: No route to host)
[22:04:12] <selwyn> i seem to have found a bug
[22:12:53] <shka> hopefully not in cider
[22:13:53] <selwyn> lol
[22:14:01] *** Joins: MichaelRaskin (~MichaelRa@ipb21a9944.dynamic.kabel-deutschland.de)
[22:14:01] *** ChanServ sets mode: +o MichaelRaskin
[22:15:23] <selwyn> it has a slight yeast aftertaste which i suspect would disappear if i had bothered to filter it properly
[22:15:29] <selwyn> overall a great success
[22:17:48] <selwyn> in hl: alyx, headcrabs are a major obstacle while they are merely annoying in most of hl 2 and the original
[22:18:01] <selwyn> wondering about other examples of enemies that get overpowered in sequels
[22:19:20] <shka> https://i.imgur.com/6K5Y6ff.png
[22:19:47] <shka> do you also love when people use random arrows in the pseudo code? :D
[22:20:18] <shka> i assume that this means that it is a vector 
[22:20:27] <shka> but how annoying anyway
[22:21:51] <shka> kinda useful, still 
[22:22:05] <shka> would be more useful back when i was looking for a covid cure
[22:22:37] <shka> i had a very, very, very large number of trees and prunning by clustering would be rather useful 
[22:23:03] <shka> would reduce time required for the prediction a lot
[22:25:22] <selwyn> if only you had carried on
[22:25:31] <selwyn> then we would have a cure instead of shitty 5g vaccines
[22:25:57] <shka> well, from what i heard japs got to clinical trials and have a good results
[22:26:40] <shka> also, i only got a classifier working
[22:27:12] <selwyn> covid must have been a grant writers blessing
[22:27:20] <shka> i planned to use genetic algorithm to generate new drug candidates, but it never really worked perfectly right
[22:27:27] <selwyn> surprised no one claimed that you can get a covid vaccine with a quantum computer
[22:27:48] <shka> and eventually i went to where money are
[22:27:53] <shka> THE VIDEO GAMES!
[22:27:55] <shka> yay
[22:28:17] <selwyn> you are a gamedev now?
[22:28:19] <shka> capitalism is the best system
[22:28:20] <shka> no
[22:28:38] <shka> thank god for that
[22:29:47] <shka> but I am working with counter strike data, current goal is to establish more advanced metrics for the player performance
[22:29:56] *** Quits: treflip (~user@user/treflip) (Quit: bye!)
[22:30:21] <selwyn> oh yeah right
[22:30:25] <shka> and we can do esport team scouting, better matchmaking, bet odds, and so one with that
[22:31:04] <selwyn> people don't like water hazard right but the part of the chase with the rockets firing on you is one of the most nail biting parts of the game imo
[22:31:05] <shka> we have few clients for that
[22:32:06] <shka> there is also League of Legends stuff in the works, but i am personally skeptical about that...
[22:32:15] <shka> and i tell ya, riot is annoying company
[22:32:29] <selwyn> they have stats phds working at irl football clubs working on signings
[22:32:30] <shka> and their API kinda sukcs
[22:32:46] <shka> selwyn: yeah, it makes sense 
[22:32:52] <selwyn> why not league of legends
[22:33:13] <shka> riot does not offer legal access to the content of the replays
[22:33:26] <shka> so we do that in, uh, roundabout way
[22:33:37] <shka> computer vision xD
[22:34:07] <shka> it works, it probably could work a lot better, but there are inherent problems with this approach 
[22:34:18] <shka> which i wont go into 
[22:35:20] <selwyn> that sounds awful
[22:35:47] <shka> well, as a technical challenge it is kinda fun, but i don't feel it as a business 
[22:36:14] <selwyn> ok
[22:39:57] <shka> but at least CS should be making money 
[22:53:38] <selwyn> stats is the only area of maths i never like
[22:53:39] <selwyn> d
[22:53:43] <selwyn> so i can't really do stuff in ir
[22:54:31] <selwyn> actually, i might try to visualise all of the months of spaced repetition training i have been doing
[22:55:02] <selwyn> issue is that i often struggle to find data interesting
[23:29:23] *** Quits: lagash (lagash@lagash.shelltalk.net) (Ping timeout: 252 seconds)
[23:31:16] <phoe> I have an english question
[23:31:45] <phoe> "X is optimized but complex, whereas Y attempts to achieve a _____ goal - being simple to understand even if it means not being as efficient"
[23:32:01] <phoe> what is a good adjective to fill in the blank? reverse? converse? contrary?
[23:33:24] <selwyn> converse is best
[23:33:26] <|3b|>  "the opposite" is the best i can think of with "goal"
[23:33:39] *** Joins: random-nick (~random-ni@87.116.180.98)
[23:33:49] <|3b|> "the converse' without goal also sounds OK to me
[23:33:51] <selwyn> but you should say 'the converse goal' or better yet just 'the converse'
[23:33:55] <selwyn> since there can only be one converse
[23:34:01] <selwyn> hm
[23:34:12] <selwyn> actually i want to retract this lol
[23:34:35] * |3b| isn't completely happy with any of them though, and would probably end up restructuring the sentence more
[23:35:01] <selwyn> it can't be converse because arguments have converses, not combinations of adjectives
[23:35:08] <selwyn> 'the reverse' is best
[23:35:54] * |3b| would pick inverse over reverse. reverse sounds more like a verb not a noun
[23:36:19] <selwyn> reverse is both a verb and a noun
[23:36:47] <|3b|> most things are :p
[23:37:12] <|3b|> just doesn't sound like one that fits in that context to me
[23:37:32] <selwyn> well
[23:37:39] <selwyn> phoe: you picked a good question
[23:38:00] <|3b|> (to be taken as "one data point from a native speaker" rather than "this is how english is and should be")
[23:38:32] <phoe> selwyn: woop
[23:38:36] <selwyn> 'the opposite' is also fine
[23:38:40] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[23:41:29] <selwyn> as is 'the opposite goal'
[23:53:56] <phoe> fuck
[23:54:03] <selwyn> many options
[23:54:08] <phoe> I wrote the word "ambiguous" and I realized it's dangerously close to "amogus"
[23:54:15] <phoe> why did I pick up lisp again
[23:57:18] *** Joins: lagash (lagash@lagash.shelltalk.net)
