[00:00:56] *** Joins: RoKenn (~RoKenn@2001:a61:3432:ab01:80b:6672:601e:3ef)
[00:00:56] *** Quits: RoKenn (~RoKenn@2001:a61:3432:ab01:80b:6672:601e:3ef) (Changing host)
[00:00:56] *** Joins: RoKenn (~RoKenn@user/rokenn)
[00:04:32] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:21ba:a382:6b6:54c4) (Ping timeout: 268 seconds)
[00:07:23] *** Joins: proller (~p@2a02:6b8:0:51e:5756:4fff:e4d8:65d4)
[00:09:50] *** Joins: adeliktas (~adeliktas@i59F52741.versanet.de)
[00:11:57] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:2162:ed14:6f38:5e01) (Ping timeout: 240 seconds)
[00:16:02] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:d8fa:ae3d:1df6:c16)
[00:18:11] <MaddHatter> what converts "void(int) const" to "void(int)"? std::remove_cv is apparently not the answer
[00:18:32] *** Quits: adeliktas (~adeliktas@i59F52741.versanet.de) (Quit: Client closed)
[00:19:01] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:21ba:a382:6b6:54c4)
[00:23:14] <CarloWood> Is a directed graph that has two different paths (following the vertices in the direction of their arrow) from node A to node B still a-cyclic (assuming there are no real loops of arrows all in the same direction)?
[00:23:15] *** Joins: evocatus (~evocatus@62.182.78.42)
[00:23:34] *** Joins: chozorho (~chozorho@2601:146:300:c30:da12:929f:19b6:dd15)
[00:23:56] <RandomReader> MaddHatter - in what context? I'm not sure there's a reasonable path there since those are different functions, not just type qualifiers
[00:24:24] <PJBoy> need to invent your own thing
[00:25:44] <PJBoy> << TYPE<remove_abominable_const<T>::type>; using T = void(int) const; template<typename T> struct remove_abominable_const { using type = T; }; template<typename R, typename... Args> struct remove_abominable_const<R(Args...) const> { using type = R(Args...); };
[00:25:45] <geordi> void(int)
[00:26:33] <RandomReader> ah
[00:27:09] <RandomReader> that's technically remove_everything though .. volatile, refs, ...
[00:27:35] <PJBoy> << TYPE<remove_abominable_const<T>::type>; using T = void(int) volatile &&; template<typename T> struct remove_abominable_const { using type = T; }; template<typename R, typename... Args> struct remove_abominable_const<R(Args...) const> { using type = R(Args...); };
[00:27:36] <geordi> void(int) volatile &&
[00:27:41] <PJBoy> you'd be surprised
[00:27:53] <RandomReader> hm
[00:28:10] <RandomReader> interesting, I don't understand how that works
[00:28:13] <PJBoy> the specialisation doesn't match volatile or ref or const + other stuff
[00:28:32] <RandomReader> oh I missed the general case
[00:28:48] <PJBoy> << TYPE<remove_abominable_const<T>::type>; using T = void(int) const volatile &&; template<typename T> struct remove_abominable_const { using type = T; }; template<typename R, typename... Args> struct remove_abominable_const<R(Args...) const> { using type = R(Args...); };
[00:28:49] <geordi> void(int) const volatile &&
[00:29:03] <PJBoy> so you'd need additional specialisations for each combination of those things
[00:29:09] <Alipha> presumably MaddHatter meant for a member function
[00:29:31] <Alipha> which, am i blind here? why is this not compiling? https://godbolt.org/z/WvTnqKW8E
[00:29:56] <Alipha> oh, heh. NEVER MIND
[00:30:05] <PJBoy> hahaha
[00:30:29] <Alipha> https://godbolt.org/z/8Whrev84E
[00:31:04] <PJBoy> I suspect he actually did mean void(int) const
[00:31:34] <PJBoy> as that's what I was using in the sfinae I based on rpav's earlier godbolt
[00:33:26] <RandomReader> CarloWood - that sounds like no cycles while directed, so yes, if it otherwise meets the definition of a DAG
[00:34:02] *** Joins: adeliktas (~adeliktas@2001:16b8:22a8:8d00:98a5:dadf:3482:ec11)
[00:34:40] <Alipha> and `using type = Func;` is probably better than the static_assert
[00:34:49] <RandomReader> if you mean two edges in the same direction between the same vertices, I don't think that meets the definition of a graph
[00:35:10] *** Quits: BurumaSerafuku (~sjw@69.206.48.64) (Remote host closed the connection)
[00:35:34] <MaddHatter> yeah, it is a member function but I'm just trying to cut down two (const or not) cases into one and thought remove-cv would have done it.
[00:36:22] *** Joins: BurumaSerafuku (~sjw@69.206.48.64)
[00:36:33] <PJBoy> stdlib doesn't give us anything to fiddle around with member function qualifiers
[00:37:05] <PJBoy> can't say I blame them though
[00:38:22] <Alipha> and "member function" actually isn't a type you can express in code, only "pointer to member function". in which case, std::remove_cv would be if you had a const pointer to a member function, e.g., `void (Foo::* const)(int)`
[00:39:23] <PJBoy> you almost kinda can though
[00:39:44] <PJBoy> { using T = void() const&; } // insofar as you can write that
[00:39:45] <geordi>  
[00:40:07] <Alipha> that's not a member function though
[00:40:09] <PJBoy> like it doesn't have any class bit in it
[00:40:19] <PJBoy> but it does have those qualifiers that only member functions can have
[00:40:31] <PJBoy> it's like a partial member function
[00:40:43] <RandomReader> I think Alipha means in practice, as in the entity you'd use this trait on
[00:40:54] *** Quits: proller (~p@2a02:6b8:0:51e:5756:4fff:e4d8:65d4) (Ping timeout: 268 seconds)
[00:41:19] <MaddHatter> alright, so now I feel dumb because I can't figure out how to fully specialize the doFoo template function. https://godbolt.org/z/orsn4hcbz
[00:41:22] <PJBoy> splitting up the class and the partial member function is what I did earlier though >_>
[00:41:24] <Alipha> { using T = void(int) const; T *p; }
[00:41:25] <geordi> error: cannot declare pointer to qualified function type 'T' {aka 'void(int) const'}
[00:41:39] <PJBoy> ah, see the above paste
[00:42:09] <CarloWood> RandomReader: I have a DAG where each nodes "knows" about one or more "attachments" (things). Say, if node X knows about b and c then I write X(b, c).  The whole graph then looks something like: X(b, c) --> Y(a) --> Z(a, c) --> Q(b).  Hardly a complex graph this, but that's cause I only have 1D in text to "draw" this :p. What I need to do now is to create a subgraph for each of a, b, c:
[00:42:15] <PJBoy> you generally just write a function overload MaddHatter
[00:42:57] <MaddHatter> oh, I suppose
[00:43:07] <CarloWood> Y(a) --> Z(a),  X(b) --> Q(b), X(c) --> Z(c).  I wonder how to do that :/. And if I'd benefit from using an existing graph library.
[00:43:08] *** Quits: Hello72 (~Hello71@wireguard/contributor/hello71) (Quit: Hello72)
[00:46:30] <CarloWood> I can run over all nodes (X, Y, Z and Q) in some order - and then for each node I can find the attachments they know about - but I can only build the subgraphs if I then also know how those are connected.  For example, if I am at Z and see it knows 'a' then how do I know that there is an edge from Y to Z without going all brute force :/
[00:48:30] *** Joins: magla (~gelignite@55d47454.access.ecotel.net)
[00:48:52] <PJBoy> MaddHatter, https://godbolt.org/z/qsqWG8W3h for const compatible version
[00:49:18] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[00:50:01] <lmat> It looks like cppreference.org styling isn't so great... https://en.cppreference.com/w/cpp/string/basic_string/stol looks like this https://imgur.com/PF2mARM.png. It looks like inside the code blocks, there is a border-radius? It actually chops off the closing curly brace toward the top of that screen shot.
[00:51:30] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[00:52:00] <PJBoy> looks like https://puu.sh/IwX6k/25edc87891.png for me
[00:52:51] *** Quits: chozorho (~chozorho@2601:146:300:c30:da12:929f:19b6:dd15) (Ping timeout: 245 seconds)
[00:53:43] *** Joins: proller (~p@2a02:6b8:0:51e:2149:39ce:e94e:18d4)
[00:53:44] *** Joins: chozorho (~chozorho@2601:146:300:c30:da12:929f:19b6:dd15)
[00:55:10] *** Joins: EdFletcher (~PKD@user/edfletcher)
[00:56:17] *** Joins: rond_ (~rond_@100.42.200.146.dyn.plus.net)
[00:56:18] <RandomReader> CarloWood - that sounds like you just need quick lookups for the edges and the attachments, in aggregate
[00:58:08] <RandomReader> like look up "a" to find that it's associated with Y and Z by attachment, and look up Z to find it's associated with Y and Q by edge
[01:00:50] *** Quits: proller (~p@2a02:6b8:0:51e:2149:39ce:e94e:18d4) (Ping timeout: 252 seconds)
[01:01:39] <CarloWood> hmm
[01:03:37] *** Quits: thad_the_man (~tlophd_be@2600:1700:3051:4370:21d:9ff:fe33:51f4) (Ping timeout: 240 seconds)
[01:05:02] *** Quits: sysctl (~sysctl@88.215.77.255) (Quit: leaving)
[01:05:37] <RandomReader> for graphs in general, "topological sort" is a thing, and some algorithms to work along that .. e.g. cycle detection can work that way, by just memoizing vertices seen so far
[01:06:02] <RandomReader> it's been too long since I looked at that stuff, but there might be some traversal options there that would fit, without having to build larger lookups
[01:07:17] <RandomReader> no clue what graph libraries are out there
[01:08:38] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:10:14] <RandomReader> looks like #algorithms made it here, they may have thoughts
[01:11:11] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:21ba:a382:6b6:54c4) (Ping timeout: 245 seconds)
[01:19:36] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[01:29:53] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:21ba:a382:6b6:54c4)
[01:34:43] *** Quits: magla (~gelignite@55d47454.access.ecotel.net) (Quit: Stay safe!)
[01:35:36] *** Quits: robod34 (Username@79.113.195.239) (Quit: Goe offline! ( http://marius.sucan.ro/ ))
[01:37:37] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:21ba:a382:6b6:54c4) (Ping timeout: 240 seconds)
[01:39:39] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:39:47] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:39:47] *** ChanServ sets mode: +v npaperbot
[01:41:46] *** Joins: thad_the_man (~tlophd_be@99-104-67-23.lightspeed.cicril.sbcglobal.net)
[01:44:56] *** Joins: Tokamak (~Tokamak@172.58.191.87)
[01:45:33] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[01:46:04] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:49:20] *** Joins: zenstoic (uid461840@id-461840.hampstead.irccloud.com)
[01:51:56] *** Quits: Tokamak (~Tokamak@172.58.191.87) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:52:17] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Ping timeout: 256 seconds)
[01:53:05] *** Joins: CaCode (~CaCode@user/cacode)
[01:54:26] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[01:59:04] *** Joins: Tokamak (~Tokamak@172.58.191.87)
[02:06:05] *** Joins: markong (~kvirc@213.146.188.203)
[02:08:50] *** Quits: rond_ (~rond_@100.42.200.146.dyn.plus.net) (Quit: Client closed)
[02:21:53] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[02:24:02] *** Quits: zenstoic (uid461840@id-461840.hampstead.irccloud.com) ()
[02:26:26] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[02:29:01] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:3946:1e3:b608:aa87)
[02:33:08] *** Quits: Tokamak (~Tokamak@172.58.191.87) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:33:29] *** Joins: proller (~p@80.240.216.69)
[02:39:02] *** Joins: rond_ (~rond_@100.42.200.146.dyn.plus.net)
[02:41:11] *** Joins: ferdna (~ferdna@user/ferdna)
[03:01:57] *** Quits: rond_ (~rond_@100.42.200.146.dyn.plus.net) (Quit: Client closed)
[03:02:51] *** tiktoknull is now known as eck
[03:06:17] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 240 seconds)
[03:06:40] *** Joins: proller (~p@2a02:6b8:b081:8806::1:31)
[03:14:55] *** Joins: Inline (~Inline@aftr-37-201-240-204.unity-media.net)
[03:39:39] *** Joins: undephin3d (~undephin3@158.181.81.83)
[03:40:17] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Ping timeout: 240 seconds)
[03:43:04] *** Quits: adeliktas (~adeliktas@2001:16b8:22a8:8d00:98a5:dadf:3482:ec11) (Quit: Client closed)
[03:43:49] *** Joins: adeliktas (~adeliktas@i59F52741.versanet.de)
[03:46:18] <KombuchaKip> Alipha: In your scope guard implementation, and I suppose any of them in general, is the exit function called just before the return value is returned to the caller or right after?
[03:49:17] *** Quits: jkaye (~jkaye@2601:281:8300:7530:e699:4743:67a2:216e) (Ping timeout: 240 seconds)
[03:51:46] <RandomReader> the return object is constructed first, if that's the question
[03:52:28] *** Joins: Tokamak (~Tokamak@172.58.191.87)
[03:53:07] <RandomReader> { func(); cout << " [func has returned]"; }    struct G { ~G() { cout << "[scope exit fired]"; } };  tracked::B func() { auto guard = G{}; cout << "[function body] "; return {}; }
[03:53:08] <geordi> [function body] B0* [scope exit fired] B0~  [func has returned]
[03:53:27] <RandomReader> otherwise you wouldn't be able to return local values, since they wouldn't exist to be copied from
[03:53:43] <RandomReader> or: destruction of local variables (and so the scope exit) occurs after the return statement
[03:53:53] * KombuchaKip nods
[03:54:37] *** Quits: imi (~imi@catv-89-132-115-236.catv.broadband.hu) (Quit: Leaving)
[03:55:31] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:55:36] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Ping timeout: 276 seconds)
[03:58:00] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[03:58:23] <oj> If I have a custom type as a std::map calue, does that type need a move constructor for performance or can I construct the object at the location in the map?
[03:59:26] <RandomReader> you can use map.try_emplace() to construct it
[04:00:02] <RandomReader> other than creation, I don't think there's any other place that would involve an implict move if it was available
[04:00:19] <RandomReader> (for a map anyway)
[04:00:21] <oj> thanks, that worked
[04:00:31] <oj> yeah, I was specifically thinking about creation
[04:06:39] <leonardus> I'm a beginner, I noticed `std::cout << str1 << str2 << std::endl;` gives the same behavior as `std::cout << str1 + str2 << std::endl`, is either of these "more correct"?
[04:07:34] <oj> I would prefer the first one, but _really_ I would prefer printf or fmt
[04:07:48] <leonardus> Why?
[04:07:49] <oj> you are concatenating two strings in the second one
[04:08:05] <oj> the result of which is a new string
[04:08:08] <RandomReader> semantically they do different things:  send str1 to output, send str2 to output, send endl/flush to output
[04:08:34] <RandomReader> (for the first one)
[04:08:41] <RandomReader> the second one does what oj says, calculates an entirely new string first
[04:09:11] <RandomReader> since that string isn't kept for future use, it's a bit of a waste here
[04:09:45] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[04:09:46] <leonardus> got it, so creating a new string is more expensive?
[04:09:55] <oj> and the reason to prefer printf or fmt/std::format is that they are both more efficient and easier to maintain
[04:09:56] <RandomReader> it's more that cout isn't helped by it
[04:10:16] <RandomReader> not really about being expensive or not in this case
[04:10:29] <oj> (in my opinion, printf being easier to maintain is debatable)
[04:10:56] <RandomReader> in a super broad sense, it's doing work that cout didn't need to be done, so it's wasteful in that sense .. which could translate to being more expensive, but not necessarily
[04:10:59] <RandomReader> subtle difference
[04:11:42] <RandomReader> "expensive" tends to be something you have to measure
[04:11:45] <oj> it also means cout needs to wait for the concatenation to happen
[04:13:21] <oj> it's a small thing here, but if you had str1 + str2 + str3 + str4 + str5 + str6 + str7 + str8 ... etc, and they weren't string constants that the compiler could concatenate for you, that would be bad
[04:13:55] <RandomReader> I find "unnecessary work" to be the easiest thing to reason about in code terms, because it tends to translate directly to whether the code is "simple" or not
[04:13:57] <oj> it's bad because every + creates a new string
[04:15:05] <oj> now why does reading from my map tell me no matching constructor for initialization of 'MyCustomType'
[04:15:25] <oj> does it need to construct it?
[04:15:45] <RandomReader> oj - you'll want to use .find() or similar, using [index] requires default construction
[04:15:47] <oj> T &o = map[key] does a construction?
[04:15:59] <oj> wtf!
[04:16:10] <RandomReader> yes, the expression "map[key]" has to return a reference to the value object
[04:16:16] <RandomReader> which means if there isn't one already, it has to create one
[04:16:23] <RandomReader> oh, there's also .at() if you just want an exception
[04:16:40] <oj> what if I know it exists?
[04:16:40] <RandomReader> .at() does not require construction
[04:16:46] <oj> ok, cool
[04:17:24] <oj> actually I think I remember looking at some video about this very thing at one point
[04:17:38] <oj> it might be the one about the most common c++ bugs at facebook
[04:18:11] <RandomReader> yeah .. I personally don't find it terrible in C++ terms because of the way the containers are designed, and the exceptions-optional interface, but it's certainly surprising the first time around or to anyone used to maps in other languages
[04:19:13] <RandomReader> I think part of it is the expressions setup, languages that do maps natively tend not to decompose the expressions the same way
[04:19:38] <RandomReader> as in, they treat "map[key]" and "map[key] = value
[04:19:58] <RandomReader> as in, they treat "map[key]" and "map[key] = value" as entirely separate things, where in C++ the first is just a subexpression in the second
[04:20:31] <oj> so map[key] is like an l-value
[04:20:36] <RandomReader> so even if C++ went the "exception if it doesn't exist" route, that would just break assignment as a way of inserting
[04:20:41] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:3946:1e3:b608:aa87) (Quit: Konversation terminated!)
[04:20:42] <leonardus> I have another question, I used std::string, and I noticed I forgot to #include <string>, but it compiled anyway, why is that? I only included iostream
[04:20:43] <RandomReader> right
[04:20:44] <oj> and therefore if it doesn't exist it needs a constructor
[04:21:17] <oj> leonardus: some headers include other headers
[04:21:21] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (Quit: Leaving)
[04:21:22] <RandomReader> leonardus - it's by accident, technically speaking including any stdlib header may also include other headers
[04:21:39] <RandomReader> there are only a few cases where that's *guaranteed*, so if you miss this your code may not compile on different systems, or if you upgrade, etc
[04:21:40] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[04:21:53] <leonardus> Understood, thanks
[04:22:23] <RandomReader> string is a common one for this because so many parts of the stdlib interact with them
[04:22:48] <oj> found it! https://youtu.be/lkgszkPnV8g?t=457
[04:22:50] <RandomReader> msvc's stdlib is more likely to catch a missing <string> than others, due to the way they've tried to optimize build times
[04:22:51] *** Quits: Tokamak (~Tokamak@172.58.191.87) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:23:00] <BurumaSerafuku> https://developers.slashdot.org/story/21/04/17/009241/linus-torvalds-says-rust-closer-for-linux-kernel-development-calls-c-a-crap-language hue
[04:23:15] <RandomReader> well, "catch" in the sense of "often bizarre error messages if you miss", but...
[04:23:19] <oj> I've watched that video twice and I was still confused
[04:23:42] <RandomReader> ah yeah I remember that
[04:25:26] <oj> I've been doing c++ for work for almost two years now and this is the first time I've reached for std::map lol
[04:25:27] *** Quits: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de) (Remote host closed the connection)
[04:25:41] <oj> well, good thing I crashed into the quirks right away
[04:26:30] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[04:27:15] <RandomReader> yep!
[04:31:37] *** Joins: Inline (~Inline@aftr-37-201-240-204.unity-media.net)
[04:44:28] <very_sneaky> BurumaSerafuku: the key to that article is "..also speaking about part of what made C so powerful, 'and allows you to implement all those low level things efficiently'" - its a double edged sword
[04:44:59] <very_sneaky> i haven't played around with rust, i wonder if it solves that problem without sacrificing the ability to implement those low level things efficiently
[04:51:41] *** Quits: pulse (~pulse@user/pulse) (Quit: Join a gamedev community https://indiedevs.net/)
[04:54:49] *** Joins: Tokamak (~Tokamak@172.58.191.87)
[04:58:46] *** Quits: paule32 (~paule32@user/paule32) (Read error: Connection reset by peer)
[04:59:37] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[05:02:05] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:05:35] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[05:07:18] *** Quits: CaCode (~CaCode@user/cacode) (Ping timeout: 268 seconds)
[05:10:37] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 256 seconds)
[05:15:38] *** Quits: Burgundy (~yomon@79.115.213.171) (Ping timeout: 260 seconds)
[05:31:05] *** Quits: Tokamak (~Tokamak@172.58.191.87) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:32:50] *** Joins: pulse (~pulse@user/pulse)
[05:36:49] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[05:39:40] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:39:49] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:39:49] *** ChanServ sets mode: +v npaperbot
[05:41:21] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[05:50:38] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[05:56:45] *** Joins: Tokamak (~Tokamak@172.58.191.87)
[05:57:57] *** Joins: g0zart (~g0zart@gateway/vpn/pia/g0zart)
[06:03:32] *** Quits: nshire_ (~nshire@47.146.41.156) (Quit: Leaving)
[06:03:47] *** Joins: nshire (~nshire@user/nshire)
[06:05:56] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[06:07:17] *** Quits: evocatus (~evocatus@62.182.78.42) (Ping timeout: 256 seconds)
[06:08:13] *** Quits: g0zart (~g0zart@gateway/vpn/pia/g0zart) (Quit: Leaving)
[06:20:39] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[06:21:43] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:d8fa:ae3d:1df6:c16) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:23:09] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[06:28:15] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[06:29:48] *** Joins: artok_ (~azo@mobile-access-bcee09-192.dhcp.inet.fi)
[06:31:57] *** Quits: artok (~azo@mobile-access-b0481d-183.dhcp.inet.fi) (Ping timeout: 240 seconds)
[06:37:59] *** Joins: x_kuru (xkuru@user/xkuru)
[06:41:17] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 256 seconds)
[06:42:19] *** Quits: adeliktas (~adeliktas@i59F52741.versanet.de) (Ping timeout: 256 seconds)
[06:43:02] *** Joins: adeliktas (~adeliktas@2001:16b8:22df:8100:ea0c:12d7:58ca:e4e2)
[06:45:13] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[06:49:23] <Alipha> oj: that surprises me. You've had no need for key-value pairs?
[06:54:43] *** Joins: x_kuru_ (~xkuru@user/xkuru)
[06:58:55] *** Quits: x_kuru (xkuru@user/xkuru) (Ping timeout: 268 seconds)
[07:01:26] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[07:04:02] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[07:06:13] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 240 seconds)
[07:07:25] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[07:07:55] *** Quits: msk (~msk@103.213.213.70) (Ping timeout: 256 seconds)
[07:07:57] *** Quits: chozorho (~chozorho@2601:146:300:c30:da12:929f:19b6:dd15) (Ping timeout: 240 seconds)
[07:08:39] <johnny> very_sneaky, well enough anyways. folks are doing embedded work with it and twiddling registers and doing all the regular low level stuff
[07:08:50] <johnny> and there's also unsafe and of course asm
[07:09:11] <johnny> the unsafe part is what you'd use for the low level efficiency part
[07:12:57] <johnny> very_sneaky, if you're ever really interested, you can look into projects like redox where they've done a general purposeish os in rust from scratch
[07:18:52] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:9180:b80f:58c7:8de8) (Quit: Quit)
[07:19:25] <very_sneaky> johnny: cool, i'll add it to the list of things to check out
[07:21:07] *** Quits: hackinghorn (~hackingho@user/hackinghorn) (Ping timeout: 268 seconds)
[07:23:56] *** Joins: rajkosto (~rajkosto@109-93-107-160.dynamic.isp.telekom.rs)
[07:31:59] <johnny> and of course one can use C libs if necessary, and also expose your own libs in rust to those that can deal with C calling conventions in a similar way as one would do in C++
[07:32:05] <johnny> demangling the symbols and such
[07:32:45] <johnny> i doubt anybody has this here.. but just in case
[07:33:34] <johnny> anybody got a simple program that uses the windows api to create a transparent window?
[07:34:01] <johnny> i've seen example code for it, but since i dont' have a windows machine, i wanted someone who actually has a 100% known working one
[07:34:09] <RandomReader> not offhand, but IIRC it's just a call or two
[07:34:17] *** Joins: aniketgm (~Aniket@49.36.105.213)
[07:34:33] <RandomReader> assuming you mean visually translucent .. if you mean click-through, I don't remember
[07:34:49] <johnny> well i would in fact like it to be clickthrogh, but i figured i'd deal with that later
[07:34:59] <RandomReader> those are two different things :P
[07:35:12] <johnny> hmm? don't you want it to be both transparent AND click through?
[07:35:22] <johnny> indeed they are two separate things?
[07:35:33] <johnny> i think you meant something else though
[07:35:34] <RandomReader> translucency is a graphical trait, click-through is an input trait
[07:35:40] <johnny> indeed
[07:35:55] *** Joins: hackinghorn (~hackingho@user/hackinghorn)
[07:36:04] <RandomReader> I didn't know which you were referring to, and it's been quite a while since I was looking at what those API forms were actually called
[07:36:14] <RandomReader> so I guess my answer to your original question is "nothing useful" :P
[07:36:32] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[07:36:33] <johnny> well can't you you have a window that is opaque and clickthrough?
[07:36:55] <RandomReader> yes
[07:37:51] *** Joins: seninha (~seninha@user/seninha)
[07:37:55] <johnny> i do want to deal with clickthrough, but i don't want to do it right now.. i'm tryin to figure out the transparency problem first
[07:38:12] <johnny> if there's a problem with clickthrough, i'll deal with that later
[07:39:02] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[07:39:07] <RandomReader> so what do you mean by "transparent" here?
[07:39:16] <johnny> also, i know a fair amount of the example out there use stuff that's been around since windows 2000, but there might also be newer methods via perhaps DWM or the specific compositor api
[07:39:47] <johnny> i can see through it by some value
[07:39:51] <RandomReader> ah, I never looked at the DWM or theme-related bits
[07:40:12] <johnny> what i've seen uses UpdateLayeredWindow or something like that
[07:40:13] <RandomReader> ok, pretty sure that's just this: https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-setlayeredwindowattributes
[07:40:36] *** Joins: john99 (~john99@213.246.103.34.bc.googleusercontent.com)
[07:40:54] <johnny> i can believe that, but i'd like to see somebody actually test it on a windows computer first :)
[07:41:13] <johnny> then i will cross compile it here
[07:41:31] <RandomReader> oh, I wouldn't even attempt this blind
[07:41:45] <RandomReader> if you don't have a machine or VM to directly observe behavior on, get one
[07:41:48] <johnny> that's why i was looking to see if somebody already did it
[07:41:53] <RandomReader> been there, done that, would not repeat
[07:42:05] <johnny> well if one of you already did it, then i wouldn't have to go through that :)
[07:42:10] <RandomReader> yes you would
[07:42:22] <johnny> why? if you sid it worked, and it didn't work on my side, i'd be able to find the bug
[07:42:27] <RandomReader> these traits are influenced by the surrounding code, windows version, parent dispatch traits, etc
[07:42:42] <RandomReader> you can't figure that out without the ability to debug
[07:43:12] <johnny> oh, i didn't say this, but the goal is to make sure it works in wine.. so i can debug a bigger problem
[07:43:33] <RandomReader> (or, well, I suppose you could with sufficient time .. I just wouldn't consider it a good use of my time)
[07:43:47] <johnny> if it works in windows 7 or 10 and doesn't work in wine, then it's a bug in wine
[07:44:20] <johnny> i've got a much bigger application that uses that api, but it also has a bunch of other moving parts.. like directx11 and multple surfaces
[07:44:26] <johnny> definitely too much there
[07:44:54] <RandomReader> oh, you mean just a stand-alone demo app? my mistake, I thought you were modifying something
[07:45:17] <hnOsmium0001[m]> AFIAK for a transparent window you have 2 (general direction) options: WS_EX_LAYERED and all the layered window things, or WS_EX_NOREDIRECTIONBITMAP and using DirectComposition to draw stuff in the window area
[07:45:18] <johnny> yes.. standalone demo app is all i want
[07:45:36] <johnny> j ust a known working app
[07:46:49] <johnny> hnOsmium0001[m], so is either recommended over the other?
[07:47:17] <johnny> the DC method sounds like you're basically on yourown.. but then again, if you're already drawing on top of it via other methods like directx, maybe it doesn't even matter
[07:47:34] <johnny> although i could have a misunderstanding on how it works
[07:48:13] <johnny> maybe the directcomposition method is more amenable to this sort of thing, and all the folks out there are just spreading the old ways
[07:48:26] <hnOsmium0001[m]> johnny: if you can enforce a high enough windows version, WS_EX_NOREDIRECTIONBITMAP is recommended
[07:48:26] <hnOsmium0001[m]> I don't remember the exact version number, maybe it's win7?
[07:48:49] <hnOsmium0001[m]> and yeah layered window is much easier to work with, if you are using GDI (in fact I'm pretty sure DirectComposition can't work with GDI)
[07:49:04] <johnny> well.. on the acutal windows side i can.. wehther i can rely on WS_EXNOREDIRECTIONBITMAP in wine though, i'm not yet sure.. i'll have to look
[07:49:15] *** Quits: john99 (~john99@213.246.103.34.bc.googleusercontent.com) (Quit: Client closed)
[07:49:34] <johnny> it does currently use the gdi methods.. but the end goal here is integration with something tha ti don't think actually relies on GDI.. since the target is a unity app
[07:49:41] <johnny> i don't think unity needs gdi at all
[07:49:54] <johnny> but folks are doing transparency via gdi  anyways??
[07:50:26] <johnny> oh.. but hnOsmium0001[m] can you can also enable clickthrough via those apis? i know the gdi way (i think it is)
[07:50:43] <hnOsmium0001[m]> in a nutshell, WS_EX_NOREDIRECTIONBITMAP basically tells dwm.exe to not draw anything for your window (hence "no redirection bitmap", that's the default canvas you get when you normally create a window), and you'll have to render chunks into your window area using DirectComposition
[07:51:00] <hnOsmium0001[m]> also DirectComposition is directx only, no opengl or vulkan
[07:51:24] <johnny> hmm.. i'm not sure that matters since , but i cant' say just yet
[07:51:36] <johnny> but thats good to know. the current built relies on dx11 anyways
[07:51:41] <johnny> whether it really has to or not.. i'm not sure
[07:51:52] <hnOsmium0001[m]> johnny: isn't clickthrough windows dont using hittest? I don't think it matters which way you are rendering
[07:52:03] <johnny> not that i can see
[07:52:48] <hnOsmium0001[m]> although I've never done this so I can't give an definitive answer
[07:53:31] <johnny> mabye that's hidden by unity methods.. i'm not 100% sure
[07:54:23] *** Quits: rajkosto (~rajkosto@109-93-107-160.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[07:54:31] *** Joins: rajkosto (~rajkosto@109-93-107-160.dynamic.isp.telekom.rs)
[07:54:50] <johnny> this part for example https://github.com/pheonise/Unity3D-Desktop-Overlay/blob/master/Assets/Scripts/TransparentWindow.cs#L136
[07:55:05] <johnny> i know it's written in C# here, but the api calls are still the windows api calls like SetWindowLong
[07:55:31] <johnny> i tested this whole thing on windows, so i know that works at least
[07:55:41] <johnny> it's both transparent and clickthrough
[07:56:11] <johnny> but i definitely wanted a much more minimal introduction that avoids C# and directx (at least until you told me about directcomposition anyways)
[07:57:22] <hnOsmium0001[m]> so after a bit of searching, I found HTTRANSPARENT in https://docs.microsoft.com/en-us/windows/win32/inputdev/wm-nchittest, although for some reason it's not documented in https://docs.microsoft.com/en-us/windows/win32/controls/theme-hit-test-retval
[07:57:46] <hnOsmium0001[m]> and layered windows let mouse events through based on pixel's opacity
[07:58:00] <hnOsmium0001[m]> also much more common (in stackoverflow posts for example) than the hit test method apprently
[07:58:08] <johnny> indeed
[07:58:10] <johnny> "For example, in the GDI world, using UpdateLayeredWindow to set a bitmap with per-pixel alpha actually results in places with an alpha value of zero being treated as not part of the window. In other words, clicks pass through to the window underneath. "
[07:58:27] *** Joins: chozorho (~chozorho@2601:146:300:c30:23ad:1b46:b2f9:18)
[07:58:32] <johnny> tha's the thing i was trying to remember
[07:59:04] <johnny> RandomReader, it's that part right there that made me ask about opaque clickthrough
[08:00:34] <johnny> I've used linux for so long that i've basically gone through 10 years of not knowing anybody who's made anything for windows specifically.. and now i'm completely ignorant about the windows apis !
[08:03:12] <johnny> hnOsmium0001[m], the hardest part for me is just not knowing what's the way people do becaxuse it's the way they've always done it vs the the way it it needs to be done if you care about older versions (say 7+) vs the way you shoul do it now. that kinda thing is really hard to tell
[08:03:38] <johnny> i mean that in general sense though. not just related to this transparency issue
[08:04:18] <RandomReader> that sounds like it needs more context, but I've never directly tested that because I never cared about setting bitmaps
[08:04:41] <RandomReader> I only ever used it to make the entire window semi-translucent, which definitely does not send clicks through for WS_EX_LAYERED
[08:04:48] <RandomReader> it might for some other combination of things, but not that alone
[08:06:51] <hnOsmium0001[m]> regarding HTTRANSFPARENT not documented in  https://docs.microsoft.com/en-us/windows/win32/controls/theme-hit-test-retval: actually that article is about control theming instead of the window hittest message, it does make sense
[08:06:59] <RandomReader> as far as demo code, I can tell you this works: https://docs.microsoft.com/en-us/cpp/windows/walkthrough-creating-windows-desktop-applications-cpp#to-build-this-example
[08:07:53] <RandomReader> modify CreateWindowEx to use WS_EX_OVERLAPPEDWINDOW|WS_EX_LAYERED  and then stick a  "SetLayeredWindowAttributes(hWnd, 0, 128, LWA_ALPHA);" underneath it, and you get a window suitable for Halloween, complete with horrific font
[08:09:45] <johnny> ok.. here goes!
[08:11:36] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[08:12:27] *** Quits: aniketgm (~Aniket@49.36.105.213) (Quit: leaving)
[08:13:54] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 260 seconds)
[08:18:37] *** Joins: aniketgm (~Aniket@49.36.105.213)
[08:20:44] *** Joins: CaCode (~CaCode@user/cacode)
[08:28:47] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[08:28:57] *** Quits: rajkosto (~rajkosto@109-93-107-160.dynamic.isp.telekom.rs) (Ping timeout: 256 seconds)
[08:29:33] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[08:31:11] <johnny> thanks RandomReader , that was a big help. it totally works
[08:32:26] <johnny> RandomReader, question though.. is the titlebar normal for you? or also see throughish?
[08:34:38] *** Joins: rajkosto (~rajkosto@109-93-107-160.dynamic.isp.telekom.rs)
[08:35:59] <johnny> i686-w64-mingw32-g++ -g -mwindows -static-libgcc -static-libstdc++ -o test.exe HelloWindowsDesktop.cpp is all it took to compile it btw
[08:36:43] <RandomReader> titlebar is also translucent
[08:37:31] *** Joins: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de)
[08:37:53] <johnny> i really appreciate it.. now i can try to track down the real problem
[08:37:59] <RandomReader> https://i.imgur.com/aelN0xW.png
[08:38:45] <johnny> my toolbar looks like windows 95 , but same effect
[08:38:57] <johnny> err titlebar
[08:39:21] <RandomReader> yeah this machine is win10
[08:39:50] <RandomReader> I think I was on 2000 or XP last time I tried this .. trying to understand how WinAmp worked
[08:40:58] <johnny> it definitely did defy many of the normal application conventions, that's for sure
[08:41:11] <johnny> still feel for the poor llama
[08:41:30] <RandomReader> my very first experience with overclocking was due to Winamp
[08:41:53] <johnny> hmm? how is that related?
[08:42:27] <RandomReader> nothing could play mp3s while still being usable on my 486DX2/66 with win95, until I overclocked it to 80Mhz, and then Winamp could play it in a "realtime" thread while I did other things
[08:42:27] <johnny> i remembering playing like 4 mp3s at a time on beos's media player and it didn't skip
[08:43:35] <RandomReader> yeah I really wished BeOS became a Real Thing, instead of dying the way it did
[08:44:07] <johnny> haiku is still ongoing, they haven't given up on it
[08:44:35] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[08:45:24] <johnny> i think i heard webkit builds and runs on haiku now
[08:45:35] <RandomReader> ah neat
[08:46:49] <johnny> seems like if you can get hardware support, and a browser rendering engine, you don't have to do a lot else have a useful computer
[08:47:05] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[08:47:11] <johnny> for a lot of regular folks i mean
[08:57:13] *** Quits: x_kuru_ (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[08:59:28] *** Quits: aniketgm (~Aniket@49.36.105.213) (Quit: leaving)
[09:01:26] *** Joins: aniketgm (~Aniket@49.36.105.213)
[09:02:30] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[09:02:33] *** Quits: aniketgm (~Aniket@49.36.105.213) (Read error: No route to host)
[09:02:51] *** Quits: adeliktas (~adeliktas@2001:16b8:22df:8100:ea0c:12d7:58ca:e4e2) (Ping timeout: 256 seconds)
[09:04:07] *** Joins: aniketgm (~Aniket@49.36.105.213)
[09:05:08] *** Quits: aniketgm (~Aniket@49.36.105.213) (Client Quit)
[09:05:13] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[09:24:30] *** Joins: rajkohaxor (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs)
[09:25:37] *** Quits: rajkosto (~rajkosto@109-93-107-160.dynamic.isp.telekom.rs) (Ping timeout: 256 seconds)
[09:29:10] *** Quits: rajkohaxor (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs) (Client Quit)
[09:29:21] *** Joins: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs)
[09:30:26] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 260 seconds)
[09:30:29] *** Quits: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs) (Client Quit)
[09:31:02] *** Joins: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs)
[09:39:19] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[09:39:40] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:39:48] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:39:48] *** ChanServ sets mode: +v npaperbot
[10:35:26] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[10:38:09] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[10:44:44] *** Quits: pulse (~pulse@user/pulse) (Quit: Join a gamedev community https://indiedevs.net/)
[10:45:22] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[10:46:13] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[10:46:37] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[11:01:54] *** Joins: meator (~meator@user/meator)
[11:02:18] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[11:04:47] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[11:18:11] *** Joins: supernova (~AdminUser@2405:9800:ba11:6207:7ced:f45b:10cc:db82)
[11:18:31] <supernova> folks! how can i ammend this line to have output +0001
[11:18:33] <supernova> big thanks!
[11:19:04] <supernova> int array[1000] = {1};
[11:19:04] <supernova> cout << showpos  << setfill( '0' ) << setw(4) << array[0] << endl;
[11:20:29] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[11:28:27] *** Quits: letto (~letto@188.26.158.104) (Quit: Konversation terminated!)
[11:29:15] <leduyquang753> Print the `'+'` yourself.
[11:29:44] *** Joins: letto (~letto@188.26.158.104)
[11:34:53] <very_sneaky> supernova: https://godbolt.org/z/We3PEd1GG
[11:40:57] *** Quits: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs) (Ping timeout: 240 seconds)
[11:42:22] <ville> very_sneaky: demand people to provide the test case if you please
[11:44:06] *** Joins: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs)
[11:46:26] <supernova> very_sneak thanks
[11:46:31] <supernova> is there a shorter way?
[11:46:37] <supernova> i did that before, but forgot :D
[11:48:09] *** Quits: c4017w (~c4017@209.52.68.8) (Read error: Connection reset by peer)
[11:54:17] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:21ba:a382:6b6:54c4)
[11:54:52] <RandomReader> ville - 1) we're in -general, 2) there is a test case...
[11:55:14] *** Quits: CaCode (~CaCode@user/cacode) (Ping timeout: 256 seconds)
[11:55:17] <johnny> sure do like fmtlib
[11:59:20] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[12:13:41] *** Joins: paule32 (~paule32@user/paule32)
[12:27:21] *** Joins: paul424 (~tom@ip-31-0-122-117.multi.internet.cyfrowypolsat.pl)
[12:28:44] *** Joins: robod34 (Username@79.113.195.239)
[12:30:37] *** Quits: supernova (~AdminUser@2405:9800:ba11:6207:7ced:f45b:10cc:db82) (Ping timeout: 240 seconds)
[12:32:57] *** Quits: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs) (Ping timeout: 240 seconds)
[12:33:26] *** Joins: pulse (~pulse@user/pulse)
[12:39:38] *** Joins: MarcoFe (~marcofe@net-5-88-237-237.cust.vodafonedsl.it)
[12:39:39] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[12:48:33] *** Joins: nojhan (uid443807@id-443807.lymington.irccloud.com)
[12:54:41] *** Joins: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse)
[12:55:10] <AmR> I try build boost form .7z file But I can't make funded by cmake find pkg I try both FetchContent ExternalProject , My code https://pastebin.com/kUytrdzx
[12:57:37] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 240 seconds)
[13:00:32] *** Quits: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de) (Ping timeout: 240 seconds)
[13:00:47] *** Joins: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs)
[13:05:26] *** Joins: CaCode (~CaCode@user/cacode)
[13:08:45] <ville> RandomReader: ok, hah tell that to the other guy
[13:08:48] *** Quits: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs) (Quit: Leaving)
[13:10:37] *** Quits: andi_ (~andi@user/andi/x-3467420) (Quit: WeeChat 3.2)
[13:14:18] *** Joins: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs)
[13:17:45] *** Quits: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs) (Client Quit)
[13:17:56] *** Joins: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs)
[13:18:57] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[13:19:14] *** Joins: Colt (~Colt@user/colt)
[13:19:16] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[13:19:33] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Client Quit)
[13:20:26] *** Quits: ville (~ville@82-181-178-111.bb.dnainternet.fi) (Quit: leaving)
[13:24:11] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[13:31:21] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[13:34:12] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[13:35:48] <LordKalma> !give whoever testcase
[13:35:49] <nolyc> whoever: A testcase is the _least_ amount of code that replicates your problem, paste it to https://wandbox.org/ then: 1) click run 2) click share 3) click url and 4) paste the url for us. You _must_ use that website. Do _not_ use a different website. Do _not_ paste code to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
[13:35:54] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:11f2:595b:8fe2:b0d4)
[13:35:54] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:11f2:595b:8fe2:b0d4) (Changing host)
[13:35:54] *** Joins: skapata (~Skapata@user/skapata)
[13:37:13] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[13:39:41] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:39:48] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:39:48] *** ChanServ sets mode: +v npaperbot
[13:42:06] *** Quits: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[13:42:28] *** Joins: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs)
[13:42:46] *** Quits: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs) (Client Quit)
[13:42:56] *** Joins: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs)
[13:43:15] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Remote host closed the connection)
[13:44:19] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[13:45:43] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[14:04:53] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@46.109.136.184)
[14:10:17] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[14:11:55] *** Quits: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[14:12:03] *** Joins: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs)
[14:14:03] *** Quits: hackinghorn (~hackingho@user/hackinghorn) (Ping timeout: 256 seconds)
[14:33:13] *** Quits: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs) (Quit: Leaving)
[14:33:45] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[14:35:56] *** Joins: Burgundy (~yomon@79.115.213.171)
[14:38:02] *** Joins: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs)
[14:38:59] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[14:51:44] *** Joins: andreasbuhr (~quassel@p548dd660.dip0.t-ipconnect.de)
[14:51:45] *** Quits: andreasbuhr (~quassel@p548dd660.dip0.t-ipconnect.de) (Client Quit)
[14:54:37] *** Quits: sonic (~sonic@user/sonic) (Read error: Connection reset by peer)
[15:08:48] *** Joins: Simplar (~quassel@188.163.93.76)
[15:10:31] <AmR> I try build boost form .7z file But I can't make funded by cmake find pkg I try both FetchContent ExternalProject , My code https://pastebin.com/kUytrdzxI try build boost form .7z file But I can't make funded by cmake find pkg I try both FetchContent ExternalProject , My code https://pastebin.com/kUytrdzx , But the cmake Can look at it with find_package, How I can fix that ?
[15:14:15] *** Joins: hackinghorn (~hackingho@user/hackinghorn)
[15:17:33] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:23:16] *** Joins: markong (~kvirc@213.146.188.203)
[15:31:01] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[15:32:45] *** Joins: msk (~msk@103.213.213.70)
[15:33:57] *** Quits: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs) (Ping timeout: 240 seconds)
[15:37:15] *** Joins: plastico (~plastico@neomutt/plastico)
[15:42:35] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@46.109.136.184) (Quit: Connection closed)
[15:42:55] *** Quits: artok_ (~azo@mobile-access-bcee09-192.dhcp.inet.fi) (Quit: faaa)
[15:45:58] *** Joins: rito_ (~rito_gh@45.112.243.172)
[15:51:22] *** Joins: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs)
[15:52:47] <johnny> hmm i wonder why i can't link dwmapi via mingw
[15:55:24] <AmR> Any help, I try fix that for 3 days :(
[15:55:59] <johnny> godbolt doesn't have mingw i guess
[15:56:10] <johnny> AmR, that's one of the reasons i dont' use cmake
[15:56:23] <johnny> i looked at FetchContent and said.. naw..
[15:58:00] *** Quits: Simplar (~quassel@188.163.93.76) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[15:58:57] <johnny> x86_64-w64-mingw32-g++ -g -mwindows -static-libgcc -static-libstdc++ -ldwmapi -o dwmtest.exe dwmtest.cpp this seems like it should work i see the libdwmapi.a in the mingw sys-root
[15:59:34] <johnny> and i verified that the compiler itself is using that sysroot as well
[16:00:44] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[16:02:57] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[16:07:31] *** Joins: Roughy (~mdaw45ns@user/roughy)
[16:07:42] *** Joins: artok (~azo@mobile-access-bcee09-192.dhcp.inet.fi)
[16:14:46] *** Quits: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs) (Ping timeout: 256 seconds)
[16:15:29] *** Joins: xardas (~xardas@149.233.51.127)
[16:18:26] *** Quits: letto (~letto@188.26.158.104) (Quit: Konversation terminated!)
[16:18:44] *** Joins: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs)
[16:21:07] *** Joins: letto (~letto@188.26.158.104)
[16:21:49] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[16:24:06] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 245 seconds)
[16:27:32] *** Joins: rajkohaxor (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs)
[16:28:08] *** Quits: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[16:28:25] *** Quits: rajkohaxor (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs) (Client Quit)
[16:28:35] *** Joins: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs)
[16:34:40] *** Quits: xardas (~xardas@149.233.51.127) (Quit: Client closed)
[16:35:13] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[16:37:17] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[16:37:24] *** Quits: paul424 (~tom@ip-31-0-122-117.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[16:45:59] *** Quits: proller (~p@2a02:6b8:b081:8806::1:31) (Ping timeout: 268 seconds)
[16:47:27] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[16:52:53] *** Joins: adeliktas (~adeliktas@2001:16b8:22df:8100:ea0c:12d7:58ca:e4e2)
[16:52:57] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[16:59:03] *** Joins: proller (~p@80.240.216.69)
[16:59:40] *** Joins: undeclared (nullx@user/undeclared)
[17:01:02] <oj> Alipha: I've had no need for key-value pairs no, nothing I haven't been able to solve with a vector or pointers
[17:01:25] <oj> (until now that is)
[17:02:39] <oj> I work in HPC, the programs I write mostly do a very heavy calculation in one go
[17:03:05] <oj> You can e.g. get away with doing a lot of stuff at compile time
[17:04:04] <very_sneaky> oj: what package manager do you use?
[17:04:15] <oj> depends on what platform I'm on
[17:04:51] <oj> do you mean Linux package managers?
[17:05:11] <oj> or do you mean C++ package managers?
[17:05:28] <oj> I wasn't aware C++ had gotten to a point where there's a decent package manager
[17:13:56] *** Quits: rajkosto (~rajkosto@178-221-250-90.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[17:33:17] *** Quits: undephin3d (~undephin3@158.181.81.83) (Ping timeout: 240 seconds)
[17:33:19] *** Quits: CaCode (~CaCode@user/cacode) (Quit: Leaving)
[17:39:41] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:39:50] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:39:50] *** ChanServ sets mode: +v npaperbot
[17:47:38] *** Joins: pulse (~pulse@user/pulse)
[18:12:32] *** Joins: ferdna (~ferdna@user/ferdna)
[18:18:11] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:20:42] *** Joins: jkaye (~jkaye@2601:281:8300:7530:c697:c75:764c:d1a0)
[18:21:26] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[18:39:27] *** Quits: kapil (~kapil@o-k.website) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[18:41:46] <manuels> std::min({x, y, z}) vs min(min(x,y),z)
[18:41:50] <manuels> which is faster?
[18:41:58] *** Joins: evocatus (~evocatus@62.182.78.42)
[18:45:15] *** Quits: evocatus (~evocatus@62.182.78.42) (Client Quit)
[18:45:35] *** Quits: lh_cat (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[18:48:12] <PJBoy> depends on the datatype of x,y,z
[18:48:15] <oj> benchmark it!
[18:49:17] <PJBoy> one would hope they optimise to the same code if they're just scalar types
[18:57:17] <LordKalma> https://godbolt.org/z/j6jjav89c
[18:57:18] <LordKalma> guess what?
[18:57:21] <LordKalma> exactly the same code
[18:58:16] <PJBoy> excellent
[18:59:51] <AmR> Any one familiar with cmake ?
[18:59:55] <LordKalma> https://godbolt.org/z/1GE5cah4h
[19:00:02] <LordKalma> even better with floats
[19:00:28] <PJBoy> which is the same as the int one
[19:00:33] <PJBoy> just without int -> float conversion
[19:00:38] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[19:01:05] <PJBoy> I'm a little surprised that's the fastest way of doing min for ints actually
[19:01:05] <LordKalma> manuels, hope you're happy
[19:01:59] <PJBoy> would you dare check MSVC though
[19:02:15] <PJBoy> because that's a whole other story
[19:04:54] <LordKalma> https://godbolt.org/z/nsEjffnff
[19:04:56] <LordKalma> wtf is going on
[19:05:53] <PJBoy> doesn't seem to be able to optimise the initializer_list away
[19:06:25] <LordKalma> wtf is https://godbolt.org/z/nsEjffnff
[19:06:33] <LordKalma> I  mean, wtf is mov     rax, QWORD PTR __security_cookie
[19:06:51] <PJBoy> that
[19:06:51] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:9180:b80f:58c7:8de8)
[19:06:54] <PJBoy> that's a canary
[19:07:01] <PJBoy> https://en.wikipedia.org/wiki/Buffer_overflow_protection
[19:07:27] <PJBoy> /GS- to disable
[19:07:46] <LordKalma> does godbolt use the exploit-fixed stdlib?
[19:08:07] <PJBoy> MSVC has these kinds of safety defaults
[19:09:06] <PJBoy> i.e. it's not a godbolt specific thing
[19:12:23] <xkoncek> has anyone used Eclipse for C++ recently?
[19:12:42] <PJBoy> I did
[19:12:48] *** Quits: pulse (~pulse@user/pulse) (Remote host closed the connection)
[19:12:52] <PJBoy> it was pretty painful
[19:12:59] <PJBoy> but tbf I was trying to hook up clangd
[19:13:05] *** Joins: pulse (~pulse@user/pulse)
[19:13:15] <LordKalma> CSS is too hard
[19:13:27] <PJBoy> also TIL about the MSVC /volatile option https://docs.microsoft.com/en-us/cpp/build/reference/volatile-volatile-keyword-interpretation
[19:18:12] <rpav> ah no wonder so many people assume volatile = more threadsafe
[19:18:59] <LordKalma> fuck, if you want to build anythign on windows you have to read all the flags
[19:19:04] <LordKalma> and assemble a decent set
[19:29:12] *** Joins: meator (~meator@user/meator)
[19:31:23] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:4141:d06b:1f61:233b)
[19:39:51] *** Joins: xkuru (~xkuru@user/xkuru)
[19:47:22] <manuels> does anybody use catch2 here? I have difficulties gettting started
[19:47:41] <LordKalma> doctest is easier to get started, compiles faster and does tha same :p
[19:47:54] <manuels> LordKalma thank you for your time. so they are exactly the same in the end right?
[19:48:05] <LordKalma> pretty much the same
[19:49:03] <manuels>  do all the test frameworks clutter the source code? cant i just include the sources?
[19:49:25] <manuels> I dont want to touch the entire project when I want to switch test frameworks
[19:50:58] <LordKalma> they only suggest you do to inline tests
[19:51:04] <LordKalma> you can have separate test dirs
[19:52:04] <manuels> doctest looks like an attack to catch
[19:52:24] <manuels> or vice versa style an tutorials are quasi the saem
[19:52:51] <LordKalma> manuels, https://i.gyazo.com/758d46204b907ad74dc591406ec9e3b7.png
[19:52:53] <manuels> the same so to say
[19:52:58] <LordKalma> out-of-source tests
[19:53:46] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[19:58:50] <rpav> apparently Iosevka Fixed Curly _Extended_ renders far better than non-extended
[19:59:15] <oj> manuels: Catch2 is pretty neat, it integrates well with cmake
[19:59:27] <oj> the idea is that the tests are separate binaries
[19:59:47] <oj> at least, that's how I do it, keeps it clean
[19:59:47] <LordKalma> so does doctest
[19:59:54] <oj> oh, I don't doubt it
[20:08:17] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[20:21:25] *** Joins: aniketgm (~Aniket@49.36.109.169)
[20:23:26] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[20:28:42] *** Joins: seninha (~seninha@user/seninha)
[20:35:52] *** Quits: shailangsa (~shailangs@host86-186-127-224.range86-186.btcentralplus.com) (Remote host closed the connection)
[20:45:07] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[20:48:51] *** Quits: letto (~letto@188.26.158.104) (Quit: Konversation terminated!)
[20:49:08] *** Joins: letto (~letto@188.26.158.104)
[20:59:53] <oj> is it considered bad style to have member variables that are references
[21:00:48] <LordKalma> I personally prefer pointer memebers, but that's just a taste
[21:02:50] *** Joins: shailangsa (~shailangs@host86-186-127-224.range86-186.btcentralplus.com)
[21:03:27] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[21:06:05] <oj> yeah, that's how I feel too
[21:06:18] <oj> what is an uninitialized reference actually?
[21:06:28] <oj> what value does that have
[21:07:07] <rpav> so much to do
[21:12:09] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Ping timeout: 256 seconds)
[21:15:33] <kalven> oj: you cant have one
[21:16:07] <oj> right, so an object will be constructed if I don't give one
[21:17:25] <kalven> i mean that the language doesnt let you create a reference without initializing it
[21:18:47] <Alipha> oj: you get a compile error
[21:19:16] <Alipha> { Foo f; } struct Foo { int &x; };
[21:19:16] <geordi> error: use of deleted function 'Foo::Foo()'
[21:19:32] <Alipha> { Foo f; } struct Foo { Foo() {} int &x; };
[21:19:33] <geordi> error: uninitialized reference member in 'int&'
[21:19:49] <oj> { Foo f{}; } struct Foo { int &x; };
[21:19:49] <geordi> error: member 'Foo::x' is uninitialized reference
[21:19:53] <oj> huh
[21:20:32] <oj> { Foo f; } struct Foo { Bar &x; }; struct Bar {int x};
[21:20:32] <geordi> error: 'Bar' does not name a type
[21:20:42] <oj> { Foo f; } struct Bar {int x}; struct Foo { Bar &x; };
[21:20:42] <geordi> error: expected ';' at end of member declaration (fix known)
[21:20:50] <oj> { Foo f; } struct Bar {int x;}; struct Foo { Bar &x; };
[21:20:50] <geordi> error: use of deleted function 'Foo::Foo()'
[21:21:02] <oj> ugh, I'll just do it in godbolt
[21:23:22] <oj> ok, I believe you lol
[21:24:06] <oj> I suppose that's a design constraint that might be good
[21:24:08] <oj> or not
[21:29:36] <rpav> oj: think T& means "guaranteed reference" and T* means "optional reference"
[21:32:57] *** Quits: hackinghorn (~hackingho@user/hackinghorn) (Ping timeout: 240 seconds)
[21:33:18] <Alipha> oj: and no, the compiler won't create an object for the reference to refer to for you. Well, if you have a const reference, then yes, it creates a temporary. But the temporary will immediately die, so then you'll have Undefined Behavior
[21:34:08] *** Joins: hackinghorn (~hackingho@user/hackinghorn)
[21:34:18] <Alipha> { Foo f; } struct Foo { Foo() : x{} {} const int &x; };
[21:34:18] <geordi> warning: a temporary bound to 'Foo::x' only persists until the constructor exits
[21:39:42] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:39:51] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:39:51] *** ChanServ sets mode: +v npaperbot
[21:40:54] <oj> but this is good
[21:41:22] <oj> this also explains why I rarely see references as members
[21:58:33] *** HvszrStykp is now known as PetabyteTrillion
[22:00:40] <Alipha> oj: reference members are generally a bad idea because you can't change where the reference refers to, which means you probably can't write an appropriate operator=
[22:02:58] *** Quits: adeliktas (~adeliktas@2001:16b8:22df:8100:ea0c:12d7:58ca:e4e2) (Quit: Client closed)
[22:04:38] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:9180:b80f:58c7:8de8) (Quit: Quit)
[22:05:18] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[22:06:00] *** Joins: magla (~gelignite@55d4d5f7.access.ecotel.net)
[22:09:37] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[22:12:44] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[22:12:56] *** Joins: adeliktas (~adeliktas@2001:16b8:22df:8100:ea0c:12d7:58ca:e4e2)
[22:15:44] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 256 seconds)
[22:20:11] *** Quits: Tokamak (~Tokamak@172.58.191.87) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:20:42] *** Joins: seninha (~seninha@user/seninha)
[22:23:30] *** Quits: aniketgm (~Aniket@49.36.109.169) (Read error: Connection reset by peer)
[22:23:47] *** Joins: aniketgm (~Aniket@49.36.109.169)
[22:34:37] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[22:39:09] *** Quits: meator (~meator@user/meator) (Remote host closed the connection)
[22:39:28] *** Joins: meator (~meator@user/meator)
[22:42:52] *** Joins: Tokamak (~Tokamak@172.58.191.87)
[22:43:16] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[22:43:54] <manuels> ty lord calma the pic helped
[22:44:00] <manuels> LordKalma
[22:45:43] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[22:47:46] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:9180:b80f:58c7:8de8)
[22:53:17] *** Quits: Tokamak (~Tokamak@172.58.191.87) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:06:48] *** Quits: rito_ (~rito_gh@45.112.243.172) (Quit: Leaving)
[23:09:56] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:9180:b80f:58c7:8de8) (Quit: Quit)
[23:11:55] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:9180:b80f:58c7:8de8)
[23:17:56] *** Quits: aniketgm (~Aniket@49.36.109.169) (Quit: leaving)
[23:33:15] *** Quits: adeliktas (~adeliktas@2001:16b8:22df:8100:ea0c:12d7:58ca:e4e2) (Ping timeout: 256 seconds)
[23:34:32] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[23:37:28] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:4141:d06b:1f61:233b) (Quit: Textual IRC Client: www.textualapp.com)
[23:41:36] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:5f3:e636:9fcd:bf6)
[23:45:43] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[23:50:37] *** Quits: jkaye (~jkaye@2601:281:8300:7530:c697:c75:764c:d1a0) (Ping timeout: 240 seconds)
[23:54:28] *** Joins: Deneb (~johnch@30.125.7.51.dyn.plus.net)
[23:58:18] *** Quits: Leone (~Leo@69-165-148-197.dsl.teksavvy.com) (Read error: Connection reset by peer)
