[00:01:10] *** Joins: mdhughes_ (mdhughes@user/mdhughes)
[00:04:25] *** Quits: mdhughes (mdhughes@user/mdhughes) (Ping timeout: 268 seconds)
[00:13:26] *** Joins: badkins (~badkins@136.56.92.199)
[00:17:40] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 250 seconds)
[00:22:40] *** Joins: badkins (~badkins@136.56.92.199)
[00:27:38] *** Quits: zwr (~zwr@2804:d45:b966:fb00:7ec2:63d4:2a51:9219) (Ping timeout: 250 seconds)
[00:38:37] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[00:42:38] *** Joins: badkins (~badkins@136.56.92.199)
[00:58:42] *** Quits: Avichi (~Avichi@94.25.169.235) (Quit: Client closed)
[01:15:06] *** Quits: m455 (~m455@user/m455) (Quit: WeeChat 3.0)
[01:35:34] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[01:59:00] *** Joins: greaser|q (greaser@antihype.space)
[01:59:31] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 245 seconds)
[02:00:06] *** Quits: greaser|q (greaser@antihype.space) (Changing host)
[02:00:06] *** Joins: greaser|q (greaser@user/greasemonkey)
[02:00:10] *** greaser|q is now known as GreaseMonkey
[02:01:34] *** Quits: blake2b (~user@1.55.170.96) (Remote host closed the connection)
[02:02:41] *** Quits: tzar_bomba (~tzar_bomb@user/tzar-bomba/x-5218718) (Quit: Client closed)
[02:05:57] *** Quits: gty_ (~gty@43.252.112.35) ()
[02:06:46] *** Joins: tzar_bomba (~tzar_bomb@user/tzar-bomba/x-5218718)
[02:07:33] *** Quits: xgqt (~xgqt@gentoo/developer/xgqt) (Read error: Connection reset by peer)
[02:08:49] *** Quits: theruran (uid11305@id-11305.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[02:10:13] *** Quits: taylan (~taylan@user/taylan) (Quit: Leaving)
[02:11:33] *** Joins: seninha (~chatzilla@user/seninha)
[02:13:17] *** Joins: xgqt (~xgqt@gentoo/developer/xgqt)
[02:14:18] *** Joins: zwr (~zwr@200-97-242-107.user3p.veloxzone.com.br)
[02:36:12] *** Quits: X-Scale (~ARM@31.22.144.44) (Quit:  HydraIRC -> http://www.hydrairc.com <- It'll be on slashdot one day...)
[02:41:59] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220219201334])
[03:00:42] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[03:19:28] *** Quits: tzar_bomba (~tzar_bomb@user/tzar-bomba/x-5218718) (Quit: Client closed)
[03:21:29] *** Joins: s-liao (~s-liao@101.86.96.21)
[03:22:02] <mdhughes_> So… it looks like Oleg reinvented singleton classes?
[03:24:19] <mdhughes_> Found actual paper: https://ftp.deas.harvard.edu/techreports/tr-15-04.pdf
[03:24:24] *** mdhughes_ is now known as mdhughes
[03:24:40] <mdhughes> Also name is fixed now, SIGH my VPN is not nice with IRC.
[03:26:06] <mdhughes> "To achieve this, we use FFI to convert the value to a StablePtr (“stable pointer”), which we then reify as a type."
[03:26:35] <mdhughes> HA ha ha oh that's a shitpost, I think. You wouldn't actually do this.
[03:27:58] <Zipheir> I'm sure there's more to it than that.
[03:28:41] <mdhughes> I don't like reading a lot of Haskell, and there's a *lot* of Haskell in it, but it seems to be an encoding system for Haskell types, in Haskell types, and then serializes that in and out.
[03:29:01] <Zipheir> Oleg's (ab?)use of type classes is pretty wild...
[03:29:13] <mdhughes> Which is, to be fair, all I'm doing with my getenv-read/putenv-write, but those are 1-liner builtins.
[03:30:47] <dTal> weee I figured out how to do let-bindings in Python
[03:30:48] *** Joins: skapata (~Skapata@user/skapata)
[03:30:50] <dTal> [expression_with_x for x in [value]][0]
[03:31:35] <Zipheir> :-p
[03:32:18] <Zipheir> "Congratulations Guido, you've caught up with Alonzo Church."
[03:32:54] <dTal> I like the combination of elegantly simple and horrifyingly unpythonic
[03:33:35] *** Quits: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[03:33:47] <Zipheir> Maybe it's that what they've called Pythonic excludes some things that are elegantly simple.
[03:33:52] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 272 seconds)
[03:34:11] <Zipheir> Or, rather, makes something elegant things ... not.
[03:34:40] <mdhughes> The Pythonic way to do let is an inner function, just like you expand let to lambda in Scheme.
[03:35:06] *** Joins: seninha (~chatzilla@user/seninha)
[03:35:17] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[03:37:03] <Zipheir> I suppose that means nested functions for nested bindings, though.
[03:38:14] <mdhughes> Yeah. Or just a pile of named parameters. **kwargs is also useful for that.
[03:43:33] <dTal> I'm trying to convert a Python script to purely nested expressions. No functions allowed.
[03:44:33] <s-liao> Why?
[03:45:34] <dTal> Fun.
[03:46:04] <dTal> I hate all this [].append() mutable nonsense.
[03:46:54] <s-liao> What is that?
[03:47:11] <dTal> I want to fit the whole program on one line. No functions, no mutations, just a leviathan expression.
[03:48:00] <s-liao> What do you mean "No functions"?
[03:48:13] <Zipheir> Presumably no function definitions.
[03:48:26] <s-liao> You expand the function as the expression?
[03:48:48] *** Joins: badkins (~badkins@136.56.92.199)
[03:49:45] <dTal> No function definitions, indeed. No assignments of any kind. No state.
[03:51:03] <dTal> It's just a game. It's trivial to write Scheme that way. Writing Python that way requires a little rule bending :)
[03:53:10] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 256 seconds)
[03:55:21] <s-liao> Like this one https://github.com/drewc/gxjs
[03:55:33] <s-liao> Probly not js, but Python
[03:56:29] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[03:57:12] *** Joins: badkins (~badkins@136.56.92.199)
[04:01:37] <Zipheir> "One lang to rule them all and in parens let bind them."
[04:01:46] <Zipheir> That reminds me of that poem in R2RS.
[04:03:21] <tokie> i tried to use a lambda in python a few weeks ago as an example to a friend new to programming and boy did that go wrong
[04:03:38] <tokie> i already disliked python, but ooof :p 
[04:03:41] <Zipheir> Data and procedures and the values they amass, / Higher-order functions to combine and mix and match, / Objects with their local state, the messages they pass, / A property, a package, the control point for a catch-- / In the Lambda Order they are all first-class.
[04:04:03] *** Joins: m455 (~m455@user/m455)
[04:04:10] <Zipheir> One Thing to name them all, One Thing to define them / One Thing to place them in environments and bind them, / in the Lambda Order they are all first-class.
[04:04:25] <Zipheir> (AI Memo 848, AKA R2RS)
[04:05:27] <Zipheir> tokie: It's kind of crippled.
[04:05:33] <Zipheir> Python's lambda, I mean.
[04:06:36] <tokie> yeah, super crippled
[04:07:12] <tokie> i suspect it's because of python's grammar
[04:07:40] *** Joins: mdhughes_ (mdhughes@user/mdhughes)
[04:08:04] *** Quits: mdhughes (mdhughes@user/mdhughes) (Killed (NickServ (GHOST command used by mdhughes_)))
[04:08:07] *** mdhughes_ is now known as mdhughes
[04:08:11] <mdhughes> Python's lambda is just for passing parameters to another function, before they had the equivalent of apply. It's not a function lambda.
[04:10:29] <Zipheir> i.e. it doesn't correspond in any clear way to λ-calculus or Scheme lambda.
[04:10:42] <Zipheir> Well, it does, with limitations.
[04:11:10] *** Joins: mdhughes_ (~mdhughes@user/mdhughes)
[04:11:11] <Zipheir> Admittedly, it's clearly not what Python's designers see as idiomatic for the language.
[04:11:21] <mdhughes_> AAUGH, network. OK, fixed.
[04:11:31] *** Quits: mdhughes (mdhughes@user/mdhughes) (Killed (NickServ (GHOST command used by mdhughes_!~mdhughes@user/mdhughes)))
[04:11:34] *** mdhughes_ is now known as mdhughes
[04:11:59] <Zipheir> "Will the real mdhughes please stand up?"
[04:12:04] <mdhughes> Right, the Python way is a stack of algol-like functions, often organized in classes and modules.
[04:12:20] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[04:12:36] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[04:12:49] <mdhughes> tkinter required so many little helper functions, `lambda x: tksomefunc("foo", "bar", x)` is the only sane way to use it.
[04:13:45] <Zipheir> Which is fine by my, in Python, in Ada, or in any other imperative language.  Though I second Backus' 1972 argument that this is the conceptual von Neumann bottleneck with a vengeance.
[04:13:57] <Zipheir> s/by my/by me/
[04:14:21] <mdhughes> I'm amused by list comprehensions, because it's turning it back into a half-assed λ-calculus, but the syntax is backwards.
[04:15:50] <energizer> dTal: http://www.onelinerizer.com/
[04:16:47] <tokie> energizer: oh dear
[04:17:19] <Zipheir> Yeah, it's interesting to see so many imperative languages adopting lambda-ish ideas like generators and comprehensions.
[04:18:03] <tokie> rust is like that - it has lambdas, though they're also kinda crippled but for other reasons
[04:18:04] <Zipheir> We're headed for some kind of confluence.  Or, more likely, increasingly messy mudballs.
[04:18:26] <tokie> mostly the borrow checker in rust has a hard time reasoning about lifetimes with closures
[04:18:32] <Zipheir> Yes.
[04:19:05] <tokie> it works fine if you wrap your stuff in Arc, or Arc<Mutex>, but capturing references is a lot harder
[04:19:32] <Zipheir> I found working with the Rust borrow checker kind of painful, but I can't imagine things being much easier when there's mutation everywhere.
[04:19:49] <tokie> i think it actually drives people to use mutation less
[04:20:12] <Zipheir> There's certainly wisdom in that, I believe.
[04:21:35] <Zipheir> But it's a weird model, since it's idiomatically imperative.  A functional model with mutation as an effect makes more sense to me.  Maybe that's what Rust will eventually mutate into.
[04:24:11] <dTal> https://bpa.st/JH7Q
[04:24:14] <dTal> my creation
[04:25:38] <energizer> remeinds me of this chat server https://gist.github.com/habnabit/3805075
[04:29:41] *** Joins: theruran (uid11305@id-11305.hampstead.irccloud.com)
[04:43:31] <dTal> beautiful
[04:47:58] <mdhughes> People say Python can't be functional, but there it is. The perfect code.
[04:55:57] <dTal> who says it's limiting to have lambdas be no more than 1 line
[04:56:23] *** Quits: seninha (~chatzilla@user/seninha) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.53.10.2/20220219201334])
[04:57:08] *** Joins: cchristiansen (~user@n122-106-221-66.sbr1.nsw.optusnet.com.au)
[05:13:33] *** Joins: TCZ (~tcz@91.150.178.124)
[05:14:12] *** Quits: jao (~jao@66.63.167.125) (Ping timeout: 256 seconds)
[05:16:18] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[05:28:32] *** Joins: livoreno (~livoreno@user/notzmv)
[05:29:54] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[05:30:21] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[05:32:25] *** Quits: rx80 (~quassel@user/rx80) ()
[05:34:03] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[05:34:40] *** Joins: rx80 (~quassel@user/rx80)
[05:42:32] *** Joins: s-liao (~s-liao@101.86.96.21)
[05:45:33] *** Joins: badkins (~badkins@136.56.92.199)
[05:53:17] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 240 seconds)
[06:01:57] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Ping timeout (120 seconds))
[06:05:31] *** Joins: s-liao (~s-liao@101.86.96.21)
[06:06:54] *** Quits: m455 (~m455@user/m455) (Ping timeout: 256 seconds)
[06:07:25] *** Joins: m455 (~m455@user/m455)
[06:17:48] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[06:20:57] *** Joins: notzmv (~zmv@user/notzmv)
[06:25:19] *** Quits: ski (~ski@remote12.chalmers.se) (Ping timeout: 256 seconds)
[06:25:55] *** Joins: ski (~ski@remote12.chalmers.se)
[06:27:25] *** Joins: mange (~user@n114-78-12-98.bla3.nsw.optusnet.com.au)
[06:33:17] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 240 seconds)
[06:34:23] *** Quits: libfud (~libfud@2600:1700:48e8:d1cf:aaa1:59ff:fe53:95b8) (Remote host closed the connection)
[06:36:38] *** Joins: frost (~frost@user/frost)
[06:37:30] *** Joins: skapata (~Skapata@user/skapata)
[06:38:40] *** Joins: libfud (~libfud@2600:1700:48e8:d1cf:aaa1:59ff:fe53:95b8)
[06:46:24] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Ping timeout: 272 seconds)
[06:46:32] *** Joins: seninha (~chatzilla@user/seninha)
[06:50:36] *** Quits: TCZ (~tcz@91.150.178.124) (Quit: Leaving)
[06:59:33] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[07:00:54] *** Joins: badkins (~badkins@136.56.92.199)
[07:05:50] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 256 seconds)
[07:07:48] *** Quits: Perryman (~perryman@216.97.249.113) (Quit: Konversation terminated!)
[07:14:12] *** Quits: johnjaye (~pi@173.209.64.74) (Ping timeout: 240 seconds)
[07:16:22] *** Joins: johnjaye (~pi@173.209.64.74)
[07:21:42] *** Quits: johnjaye (~pi@173.209.64.74) (Ping timeout: 256 seconds)
[07:22:24] *** Joins: Perryman (~perryman@user/perryman)
[07:23:09] *** Joins: johnjaye (~pi@173.209.64.74)
[07:25:46] *** Joins: masoudd (~masoudd@user/masoudd)
[07:28:24] *** Quits: johnjaye (~pi@173.209.64.74) (Ping timeout: 250 seconds)
[07:29:44] *** Joins: johnjaye (~pi@173.209.64.74)
[07:34:56] *** Quits: johnjaye (~pi@173.209.64.74) (Ping timeout: 245 seconds)
[07:37:29] *** Joins: johnjaye (~pi@173.209.64.74)
[07:40:00] *** Joins: ASau` (~user@lmpc.drb.insel.de)
[07:42:57] *** Quits: johnjaye (~pi@173.209.64.74) (Ping timeout: 256 seconds)
[07:43:31] *** Quits: ASau (~user@lmpc.drb.insel.de) (Ping timeout: 256 seconds)
[07:44:27] *** Joins: johnjaye (~pi@173.209.64.74)
[07:47:37] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 240 seconds)
[07:49:27] *** Quits: seninha (~chatzilla@user/seninha) (Remote host closed the connection)
[07:50:22] *** Quits: johnjaye (~pi@173.209.64.74) (Remote host closed the connection)
[07:50:53] *** Joins: johnjaye (~pi@173.209.64.74)
[07:52:12] *** Joins: karlosz (~karlosz@47.151.136.69)
[07:54:09] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 250 seconds)
[07:55:30] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[07:56:33] *** Quits: johnjaye (~pi@173.209.64.74) (Ping timeout: 256 seconds)
[07:57:23] *** Joins: johnjaye (~pi@173.209.64.74)
[08:00:12] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 240 seconds)
[08:01:46] *** Joins: notzmv (~zmv@user/notzmv)
[08:02:47] *** Quits: johnjaye (~pi@173.209.64.74) (Ping timeout: 256 seconds)
[08:04:03] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[08:05:20] *** Joins: johnjaye (~pi@173.209.64.74)
[08:10:43] *** Quits: johnjaye (~pi@173.209.64.74) (Ping timeout: 256 seconds)
[08:15:36] *** Joins: johnjaye (~pi@173.209.64.74)
[08:20:36] *** Quits: johnjaye (~pi@173.209.64.74) (Ping timeout: 240 seconds)
[08:22:29] *** Joins: johnjaye (~pi@173.209.64.74)
[08:28:22] *** Quits: johnjaye (~pi@173.209.64.74) (Ping timeout: 272 seconds)
[08:28:56] *** Joins: johnjaye (~pi@173.209.64.74)
[08:34:42] *** Quits: johnjaye (~pi@173.209.64.74) (Ping timeout: 272 seconds)
[08:35:46] *** Joins: johnjaye (~pi@173.209.64.74)
[08:41:00] *** Quits: johnjaye (~pi@173.209.64.74) (Ping timeout: 240 seconds)
[08:42:36] *** Joins: johnjaye (~pi@173.209.64.74)
[08:44:49] *** Joins: hashfunc1353 (~user@2601:5c0:c280:7a9e:78e9:5f82:1899:8c96)
[08:45:35] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) ()
[08:46:10] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[08:48:07] *** Quits: johnjaye (~pi@173.209.64.74) (Ping timeout: 256 seconds)
[08:49:05] *** Joins: johnjaye (~pi@173.209.64.74)
[08:54:36] *** Quits: cchristiansen (~user@n122-106-221-66.sbr1.nsw.optusnet.com.au) (Ping timeout: 240 seconds)
[08:54:58] *** Quits: johnjaye (~pi@173.209.64.74) (Ping timeout: 272 seconds)
[08:55:19] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:55:25] *** Joins: johnjaye (~pi@173.209.64.74)
[09:00:52] *** Quits: johnjaye (~pi@173.209.64.74) (Ping timeout: 256 seconds)
[09:01:55] *** Joins: johnjaye (~pi@173.209.64.74)
[09:02:05] *** Joins: cchristiansen (~user@n122-106-221-66.sbr1.nsw.optusnet.com.au)
[09:07:40] *** Quits: johnjaye (~pi@173.209.64.74) (Ping timeout: 256 seconds)
[09:20:30] *** Joins: badkins (~badkins@136.56.92.199)
[09:24:39] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[09:24:58] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 250 seconds)
[09:35:08] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:42:09] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[09:45:03] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[09:49:58] *** Quits: Perryman (~perryman@user/perryman) (Remote host closed the connection)
[09:55:10] *** Joins: johnjaye (~pi@173.209.64.74)
[09:55:38] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:57:20] *** Joins: Perryman (~perryman@user/perryman)
[10:00:12] *** Quits: johnjaye (~pi@173.209.64.74) (Ping timeout: 240 seconds)
[10:01:37] *** Joins: johnjaye (~pi@173.209.64.74)
[10:02:33] *** Quits: confuzeus (~h_m@186-149-117-154.bitcointernet.co.za) (Remote host closed the connection)
[10:03:42] *** Joins: confuzeus (~h_m@186-149-117-154.bitcointernet.co.za)
[10:06:53] *** Quits: johnjaye (~pi@173.209.64.74) (Ping timeout: 256 seconds)
[10:07:59] *** Joins: johnjaye (~pi@173.209.64.74)
[10:13:00] *** Quits: johnjaye (~pi@173.209.64.74) (Ping timeout: 240 seconds)
[10:14:55] *** Quits: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[10:15:47] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[10:22:37] *** Joins: johnjaye (~pi@173.209.64.74)
[10:26:14] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:27:37] *** Quits: johnjaye (~pi@173.209.64.74) (Ping timeout: 240 seconds)
[10:33:49] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[10:40:15] *** Quits: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 240 seconds)
[10:44:00] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[10:46:04] *** Quits: cchristiansen (~user@n122-106-221-66.sbr1.nsw.optusnet.com.au) (Remote host closed the connection)
[10:49:48] *** Quits: hashfunc1353 (~user@2601:5c0:c280:7a9e:78e9:5f82:1899:8c96) (Ping timeout: 240 seconds)
[10:54:28] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:21:28] *** Joins: badkins (~badkins@136.56.92.199)
[11:23:36] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Remote host closed the connection)
[11:25:37] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 240 seconds)
[11:28:48] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[11:35:45] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[11:44:13] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[11:54:45] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:59:10] *** Joins: hashfuncc47 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[12:11:10] *** Quits: tripfandango (~tripfanda@5.29.15.59) (Ping timeout: 260 seconds)
[12:29:52] *** Joins: Avichi (~Avichi@94.25.173.147)
[12:30:06] *** Quits: edmrk[m] (~edmrkmatr@2001:470:69fc:105::1:5a63) (Quit: You have been kicked for being idle)
[12:30:12] *** Quits: hashfuncc47 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Ping timeout: 240 seconds)
[12:32:32] *** Joins: klovett_ (~klovett@107.127.17.177)
[12:34:30] *** Quits: klovett (~klovett@107.127.17.177) (Ping timeout: 256 seconds)
[12:36:23] *** Joins: badkins (~badkins@136.56.92.199)
[12:40:50] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 250 seconds)
[13:15:22] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[13:25:57] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:37:48] *** Quits: opfez (~opfez@ti0013a400-0909.bb.online.no) (Ping timeout: 240 seconds)
[13:49:31] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 245 seconds)
[14:01:08] *** Joins: seninha (~chatzilla@user/seninha)
[14:13:06] *** Quits: mange (~user@n114-78-12-98.bla3.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[14:14:27] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[14:18:55] *** Joins: tripfandango (~tripfanda@77.137.65.104)
[14:23:22] *** Joins: opfez (~opfez@ti0013a400-5453.bb.online.no)
[14:37:22] *** Joins: badkins (~badkins@136.56.92.199)
[14:41:37] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 240 seconds)
[14:45:54] *** Joins: TCZ (~tcz@91.150.178.124)
[14:48:50] *** Quits: robin (~robin@user/terpri) (Quit: Leaving)
[14:50:08] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:54:43] *** Joins: robin (~robin@user/terpri)
[15:04:13] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[15:34:48] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:17:34] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[16:27:32] *** Joins: patrice (~patrice@user/patrice)
[16:34:36] *** Quits: patrice (~patrice@user/patrice) (Ping timeout: 240 seconds)
[16:36:45] *** Quits: opfez (~opfez@ti0013a400-5453.bb.online.no) (Ping timeout: 256 seconds)
[16:38:16] *** Joins: badkins (~badkins@136.56.92.199)
[16:38:37] *** Joins: opfez (~opfez@ti0013a400-5976.bb.online.no)
[16:42:36] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 240 seconds)
[16:43:40] *** Joins: s-liao (~s-liao@101.86.96.21)
[17:01:23] *** Joins: thevishy (~Nishant@2405:201:f005:c007:e022:4c5f:4bd4:2b64)
[17:03:16] *** Quits: TCZ (~tcz@91.150.178.124) (Quit: Leaving)
[17:04:03] *** Joins: johnjaye (~pi@173.209.64.74)
[17:05:34] *** Joins: Riastradh (~riastradh@netbsd/board/riastradh)
[17:07:10] <Riastradh> Zipheir: Among binary trees, I like logarithmic weight-balanced, a.k.a. logarithmic bounded-balance, trees best: https://sci-hub.se/https://link.springer.com/chapter/10.1007/3-540-48224-5_39  They're easy to implement and they provide order statistic operations on top of regular balanced binary search tree operations.
[17:07:57] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 240 seconds)
[17:09:02] <Riastradh> Am not a fan of red/black trees but they're pretty common.  Sedgewick likes left-leaning red/black trees.  Maybe they're the prettiest kind of red/black trees.
[17:09:07] *** Joins: badkins (~badkins@136.56.92.199)
[17:09:15] *** Quits: johnjaye (~pi@173.209.64.74) (Ping timeout: 250 seconds)
[17:09:34] <LeoNerd> Real-life trees are, of course, famous for hardly ever being red *or* black
[17:10:13] <Riastradh> Disadvantage of any balanced binary trees, of course, is that they parallelize badly -- you can't have readers running in parallel with writers, and they make for lousy use of caches.  Radix trees are much better about that and don't involve reasoning about rebalancing criteria.
[17:10:26] *** Joins: johnjaye (~pi@173.209.64.74)
[17:11:13] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[17:13:18] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 256 seconds)
[17:15:54] *** Quits: johnjaye (~pi@173.209.64.74) (Ping timeout: 260 seconds)
[17:20:08] *** Joins: johnjaye (~pi@173.209.64.74)
[17:22:16] *** Quits: frost (~frost@user/frost) (Ping timeout: 272 seconds)
[17:25:46] *** Quits: johnjaye (~pi@173.209.64.74) (Ping timeout: 256 seconds)
[17:28:02] *** Joins: johnjaye (~pi@173.209.64.74)
[17:31:37] <fizzie> There's those Japanese maple trees with red leaves and black(-ish) bark, is *that* where they got the idea for red-black trees from?
[17:33:17] *** Quits: johnjaye (~pi@173.209.64.74) (Ping timeout: 240 seconds)
[17:35:41] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[17:37:13] <Riastradh> Hash tables are good for some applications but they have sharp edges.  The principle of making a uniform random choice of function from a universe of keys to any particular fixed range of hashes is all well and good for reasoning, but...
[17:38:11] <Riastradh> ...you have to actually pick a specific function, and that requires dealing with entropy, and with keeping keys secret, and you can still get random delays, and the load factor can dramatically affect performance, and resizing is a pain in the arse, and so on and so forth.
[17:38:41] <Riastradh> (that said, hash tables are better for parallelism than balanced binary trees)
[17:40:47] *** Quits: Avichi (~Avichi@94.25.173.147) (Ping timeout: 256 seconds)
[17:47:19] <Riastradh> Any fixed hash functions (like `djb2a' or whatever) are generally pretty silly -- you're sort of hoping that they have the right distribution of hashes on the universe of keys, which maybe sometimes kinda works out in practice but isn't something you can reliably reason about up front.
[17:48:39] <Riastradh> Hash tables also fail to maintain any kind of useful iteration order.
[17:49:14] <Riastradh> Which sometimes masks bugs and/or makes reproducing what _should_ be deterministic program output a huge pain.
[17:49:54] <Riastradh> Radix trees are good for parallelism _and_ guaranteed good worst-case performance _and_ lexicographic ordering -- provided, of course, that the keys are bit strings.
[17:52:32] <Riastradh> (Now, for many purposes, you just need _some_ easy way to store a mapping from keys to data, and the convenience of working with whatever the data structure is may outweigh any minor differences in performance...although the nondeterministic iteration order of hash tables is pretty bad.)
[17:54:08] <dpk> there are tricks to get hash-tables to remember their insertion order efficiently
[17:54:29] <dpk> https://www.igvita.com/2009/02/04/ruby-19-internals-ordered-hash/
[17:57:15] *** Joins: johnjaye (~pi@173.209.64.74)
[18:02:48] *** Quits: johnjaye (~pi@173.209.64.74) (Ping timeout: 272 seconds)
[18:14:58] <Riastradh> Sure, there are ways to get reliable ordering if you go out of your way to implement them (although usually lexicographic order is more useful than insertion order).
[18:16:51] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:45e9:3822:8cbb:4b60)
[18:16:51] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:45e9:3822:8cbb:4b60) (Changing host)
[18:16:51] *** Joins: skapata (~Skapata@user/skapata)
[18:16:56] *** Joins: johnjaye (~pi@173.209.64.74)
[18:22:26] *** Quits: johnjaye (~pi@173.209.64.74) (Ping timeout: 256 seconds)
[18:24:17] *** Joins: johnjaye (~pi@173.209.64.74)
[18:29:24] *** Quits: johnjaye (~pi@173.209.64.74) (Ping timeout: 240 seconds)
[18:32:37] *** Joins: johnjaye (~pi@173.209.64.74)
[18:34:34] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[18:35:37] *** Joins: badkins (~badkins@136.56.92.199)
[18:37:54] *** Quits: johnjaye (~pi@173.209.64.74) (Ping timeout: 250 seconds)
[18:45:50] *** Joins: johnjaye (~pi@173.209.64.74)
[18:51:00] *** Quits: johnjaye (~pi@173.209.64.74) (Ping timeout: 240 seconds)
[18:52:17] *** Joins: johnjaye (~pi@173.209.64.74)
[18:57:24] *** Quits: johnjaye (~pi@173.209.64.74) (Ping timeout: 240 seconds)
[19:00:09] *** Joins: johnjaye (~pi@173.209.64.74)
[19:02:50] *** Quits: sp1ff (~user@c-73-189-25-64.hsd1.ca.comcast.net) (Remote host closed the connection)
[19:05:30] *** Quits: johnjaye (~pi@173.209.64.74) (Ping timeout: 256 seconds)
[19:08:15] *** Joins: johnjaye (~pi@173.209.64.74)
[19:13:43] *** Quits: johnjaye (~pi@173.209.64.74) (Ping timeout: 256 seconds)
[19:14:51] *** Joins: johnjaye (~pi@173.209.64.74)
[19:20:05] *** Quits: johnjaye (~pi@173.209.64.74) (Ping timeout: 252 seconds)
[19:21:21] *** Joins: johnjaye (~pi@173.209.64.74)
[19:26:45] *** Quits: johnjaye (~pi@173.209.64.74) (Ping timeout: 256 seconds)
[19:27:57] *** Joins: gproto23 (~gproto23@user/gproto23)
[19:28:31] *** Joins: johnjaye (~pi@173.209.64.74)
[19:34:07] *** Quits: johnjaye (~pi@173.209.64.74) (Ping timeout: 256 seconds)
[19:34:57] *** Joins: johnjaye (~pi@173.209.64.74)
[19:40:56] *** Quits: johnjaye (~pi@173.209.64.74) (Remote host closed the connection)
[19:42:37] *** Joins: johnjaye (~pi@173.209.64.74)
[19:48:35] *** Quits: johnjaye (~pi@173.209.64.74) (Remote host closed the connection)
[19:49:13] *** Joins: johnjaye (~pi@173.209.64.74)
[19:55:14] *** Quits: johnjaye (~pi@173.209.64.74) (Remote host closed the connection)
[19:55:35] *** Joins: johnjaye (~pi@173.209.64.74)
[19:58:52] <Zipheir> Riastradh: wb!  Great to hear from you.
[20:01:06] *** Quits: johnjaye (~pi@173.209.64.74) (Ping timeout: 260 seconds)
[20:01:09] *** Quits: thevishy (~Nishant@2405:201:f005:c007:e022:4c5f:4bd4:2b64) (Quit: Leaving)
[20:02:02] *** Joins: johnjaye (~pi@173.209.64.74)
[20:03:44] *** ChanServ sets mode: +o Zipheir
[20:04:09] *** Zipheir sets mode: +b *!*pi@173.209.64.*
[20:04:09] *** johnjaye was kicked by Zipheir (Excess join/quit, please fix your bouncer.)
[20:04:15] *** ChanServ sets mode: -o Zipheir
[20:04:45] <wasamasa> wow, it sure has been a while
[20:40:28] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[20:49:05] *** Joins: sp1ff (~user@c-73-189-25-64.hsd1.ca.comcast.net)
[21:04:43] <Zipheir> Riastradh: Are you saying that all of the various well-known "general" hash functions out there that people usually recommend are "pretty silly"?
[21:05:12] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 272 seconds)
[21:06:26] <Zipheir> I always thought it was pretty weird to assume that some one function would produce a good hash distribution on *any* input, but I thought wiser heads than mine had looked into this problem and come up with djb2a and the rest...
[21:12:10] *** Quits: rgherdt (~rgherdt@port-92-193-217-5.dynamic.as20676.net) (Ping timeout: 272 seconds)
[21:18:18] *** Quits: robin (~robin@user/terpri) (Quit: Leaving)
[21:18:35] *** Joins: robin (~robin@user/terpri)
[21:19:49] *** Quits: amazigh (~amirouche@user/amirouche) (Ping timeout: 240 seconds)
[21:22:13] *** Joins: amazigh (~amirouche@user/amirouche)
[21:24:27] <samph> I read it as "fixed hash functions are silly for radix trees", because you may want the key to be arbitrarily long.
[21:26:11] <Zipheir> The discussion of radix trees occurred after the comment about fixed hash functions.
[21:26:13] *** Quits: Riastradh (~riastradh@netbsd/board/riastradh) (Ping timeout: 240 seconds)
[21:27:29] *** Quits: robin (~robin@user/terpri) (Quit: Leaving)
[21:28:16] *** Joins: robin (~robin@user/terpri)
[21:28:55] *** Joins: Riastradh (~riastradh@netbsd/board/riastradh)
[21:31:35] *** Quits: robin (~robin@user/terpri) (Client Quit)
[21:31:53] *** Joins: robin (~robin@user/terpri)
[21:33:28] *** Quits: badkins (~badkins@136.56.92.199) (Remote host closed the connection)
[21:35:45] *** Quits: robin (~robin@user/terpri) (Client Quit)
[21:37:08] *** Joins: robin (~robin@user/terpri)
[21:42:44] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[21:43:07] *** Joins: rgherdt (~rgherdt@port-92-193-217-5.dynamic.as20676.net)
[21:58:25] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[22:18:17] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[22:26:43] *** Quits: Riastradh (~riastradh@netbsd/board/riastradh) (Ping timeout: 256 seconds)
[22:32:08] *** Joins: badkins (~badkins@136.56.92.199)
[22:34:06] <amazigh> \o/
[22:45:44] *** Guest402 is now known as sudden
[22:46:12] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 250 seconds)
[22:54:17] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) ()
[22:55:27] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[23:01:34] *** Joins: skapate (~Skapata@2804:14c:87b0:9d2e:9473:c92c:b844:1b59)
[23:01:34] *** Quits: skapate (~Skapata@2804:14c:87b0:9d2e:9473:c92c:b844:1b59) (Changing host)
[23:01:34] *** Joins: skapate (~Skapata@user/skapata)
[23:03:17] *** skapata is now known as Guest4571
[23:03:17] *** Quits: Guest4571 (~Skapata@user/skapata) (Killed (osmium.libera.chat (Nickname regained by services)))
[23:03:17] *** skapate is now known as skapata
[23:08:52] *** Joins: badkins (~badkins@136.56.92.199)
[23:12:19] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:13:08] *** Quits: badkins (~badkins@136.56.92.199) (Ping timeout: 256 seconds)
[23:13:20] *** Joins: Riastradh (~riastradh@netbsd/board/riastradh)
[23:13:38] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[23:14:32] <Riastradh> Zipheir: yes, any fixed hash function like `djb2a' or `FNV-1' is basically silly -- the design process is essentially `make something reasonably fast to compute with some level of avalanche and test it on some corpus like English words'.
[23:16:20] <Riastradh> Siphash is designed to be a pseudorandom function family -- it's designed so that, without knowledge of the key, there are no known cryptanalytic techniques to distinguish the outputs of arbitrarily chosen inputs from uniform random bit strings.
[23:17:30] <Riastradh> Even the best PRF designs are somewhat costly to compute compared to djb2a or FNV-1, though -- they carry a bit of cost.  (Something like HMAC-SHA256 costs a great deal more, but that's a bit of an old and crusty design, not the cheapest good PRF on the shelf.)
[23:19:40] <Riastradh> If you have a secret _and_ no adaptive adversary -- that is, if you get all the input data up front, and then decide on a secret, with no option for the adversary to observe the behaviour of the hash table and then choose additional input data --
[23:20:38] <Riastradh> then you can use a universal hash family, like Poly1305 to _guarantee_ a bound on the collision probability for any pair of keys, integrated over all possible secrets, at a computational cost comparable to djb2a or FNV-1.
[23:24:10] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:33:15] *** Joins: badkins (~badkins@136.56.92.199)
[23:35:12] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[23:36:27] <Zipheir> Riastradh: Thanks!
[23:40:31] *** Joins: skapate (~Skapata@2804:14c:87b0:9d2e:9d17:3f5c:3c5f:d569)
[23:40:31] *** Quits: skapate (~Skapata@2804:14c:87b0:9d2e:9d17:3f5c:3c5f:d569) (Changing host)
[23:40:31] *** Joins: skapate (~Skapata@user/skapata)
[23:42:26] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 252 seconds)
[23:45:36] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:46:45] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Remote host closed the connection)
[23:47:49] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
