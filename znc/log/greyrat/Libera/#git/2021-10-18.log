[00:03:43] *** Joins: durham (~durham@2600:1700:38d4:60:c3c:5bfc:8cac:a0ac)
[00:04:14] *** Quits: ZacSharp (~ZacSharp@user/zacsharp) (Quit: ZacSharp)
[00:04:50] *** Joins: ZacSharp (~ZacSharp@user/zacsharp)
[00:05:23] *** Quits: eggbean (~eggbean@user/eggbean) (Remote host closed the connection)
[00:05:42] *** Joins: eggbean (~eggbean@user/eggbean)
[00:08:11] *** Quits: durham (~durham@2600:1700:38d4:60:c3c:5bfc:8cac:a0ac) (Ping timeout: 264 seconds)
[00:09:15] *** Joins: remyabel (remyabel@user/remyabel)
[00:18:16] <drew> is there a way to git clean that will not touch files that are ignored by gitignore?
[00:19:16] <ikke> it does that by default
[00:19:38] <ikke> you have to provide -x for git clean to delete ignored files
[00:21:06] *** Joins: o1lo01ol1o (~o1lo01ol1@2001:8a0:6d7a:df01:5579:ced2:5960:f2d4)
[00:24:58] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[00:25:37] *** Quits: o1lo01ol1o (~o1lo01ol1@2001:8a0:6d7a:df01:5579:ced2:5960:f2d4) (Ping timeout: 252 seconds)
[00:42:38] *** Quits: Yruama (~Yruama@2a01:cb15:8139:9400:8634:97ff:fe6e:86ac) (Quit: Leaving)
[00:48:51] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:49:53] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 246 seconds)
[00:50:26] *** Quits: FlyingWaffle (FlyingWaff@gateway/vpn/protonvpn/flyingwaffle) (Quit: Quit)
[00:50:34] *** Quits: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca) (Read error: Connection reset by peer)
[00:51:04] *** Quits: bloodelk (~bloodelk@user/bloodelk) (Read error: Connection reset by peer)
[00:51:07] *** Joins: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca)
[00:52:48] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[00:56:49] *** Joins: zebrag (~chris@user/zebrag)
[00:59:16] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[01:02:30] <drew> thanks ikke
[01:04:12] *** Joins: Vonter_ (~Vonter@user/vonter)
[01:05:53] *** Quits: Dotz0cat (~Dotz0cat@h38.88.187.173.dynamic.ip.windstream.net) (Quit: ZNC 1.8.2 - https://znc.in)
[01:06:59] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:07:49] *** Joins: Dotz0cat (~Dotz0cat@h38.88.187.173.dynamic.ip.windstream.net)
[01:08:12] *** Joins: durham (~durham@2600:1700:38d4:60:c3c:5bfc:8cac:a0ac)
[01:08:17] *** Quits: durham (~durham@2600:1700:38d4:60:c3c:5bfc:8cac:a0ac) (Remote host closed the connection)
[01:08:49] *** Quits: Vonter_ (~Vonter@user/vonter) (Ping timeout: 265 seconds)
[01:09:41] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[01:11:15] *** jazzy is now known as jazz-o-lantern
[01:15:36] *** Quits: tuskkk____ (uid18470@id-18470.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[01:18:50] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[01:24:12] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[01:26:47] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:27:12] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[01:28:00] *** Joins: spare (~gzxsdvs3n@user/spareproject)
[01:28:42] <TomyLobo> if CoolerZ comes back, git describe has a "--match <pattern>" option. that seems like an easy fix to get rid of certain tags and not others
[01:33:30] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[01:33:58] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[01:34:15] *** Quits: humky (~humky@user/humky) (Quit: Leaving)
[01:34:59] *** Joins: Vonter_ (~Vonter@user/vonter)
[01:38:45] *** Quits: jazz-o-lantern (~jaziz@user/jaziz) (Read error: Connection reset by peer)
[01:39:10] *** Joins: jazz-o-lantern (~jaziz@user/jaziz)
[01:39:19] *** Quits: Vonter_ (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[01:42:09] *** Quits: Narrat (~omnius@p200300df5f377c7f06ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[01:46:06] *** Quits: dscho (~dscho@cgn-213-196-212-140.nc.de) (Quit: Connection closed)
[01:53:57] *** Joins: Activ8 (~Activ8@user/aab/x-3846634)
[01:53:58] <Activ8> anyone in here know git ? do I have to install the whole of git to download files using the git command
[01:55:17] *** Joins: pycurious (~Adium@user/pycurious)
[01:56:48] <BtbN> Uhm, you very much have to install git to use git.
[01:57:21] <Activ8> I was hoping there was a small exe but someone in sysadmin said same thing, cheers
[01:57:42] <BtbN> How would that possibly work?
[01:59:47] *** Quits: hoochmonger (~hoochmong@user/hoochmonger) (Ping timeout: 264 seconds)
[01:59:55] <Activ8> the small exe might have been able to download the files required just like how wget kinda works
[01:59:59] <Activ8> I wasn't sure
[02:04:04] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[02:11:04] <anddam> "Activ8 | anyone in here know git ?" <-- oddest opening so far in #git?
[02:11:20] <Activ8> sorry I never meant to say that I copied pasted from another chan
[02:11:21] <Activ8> lol
[02:11:23] <Activ8> my bad
[02:11:27] <Activ8> I know you all know
[02:11:35] <anddam> I am just "meh"
[02:11:38] <Activ8> ha
[02:11:42] <Activ8> I'm not even men
[02:11:44] <Activ8> meh*
[02:12:47] *** Quits: YellowSuB (~YellowSuB@user/yellowsub) (Ping timeout: 250 seconds)
[02:12:56] <anddam> what even is this "sysadmin" place?
[02:13:15] *** Quits: rtur (~weechat@mail.rtur.org) (Ping timeout: 265 seconds)
[02:14:56] *** Joins: YellowSuB (~YellowSuB@user/yellowsub)
[02:15:45] <TomyLobo> Activ8, is your git repo hosted on github (or gitlab) perchance?
[02:16:12] <TomyLobo> you can download an archive of the current version there
[02:16:41] <Activ8> TomyLobo yes, oh! I could download it an just extract it right? that would work
[02:16:49] <TomyLobo> yup
[02:17:00] <Activ8> it's not going to be a latest version it's going to be one already set in stone with no more project changes
[02:17:00] <TomyLobo> but personally i'd just install git
[02:17:11] <Activ8> I'm going to move over to powershell
[02:17:22] <Activ8> it's a little more powerful for requirements
[02:17:43] <TomyLobo> not sure what your choice of shell has to do with anything, but sure
[02:17:52] <TomyLobo> it's more powerful than cmd
[02:18:16] <Activ8> I have to bundle git into an installer if I want to use it, where as powershell is native so no requirements for git
[02:18:39] <Activ8> and because I can do an offline bundle of the repo I would just need to extract it to get what I want rather than download it
[02:18:56] <anddam> TomyLobo: more powerful == more downloadz
[02:18:57] <Activ8> I was going to use wget as well but trying to get a smaller foot print
[02:19:10] <TomyLobo> why does your installer download from git anyway?
[02:19:23] <TomyLobo> dont you have a CI?
[02:20:04] <Activ8> I wasn't sure which way I was going to do it
[02:20:22] <anddam> I have still no clue about what you are actually doing
[02:21:01] <Activ8> creating an installer for windows for the lounge chat irc client
[02:21:08] <Activ8> well attemping too
[02:21:24] <Activ8> it uses nodejs, and yarn
[02:21:48] <TomyLobo> it sounds like you're creating what's commonly referred to as a "web installer" (no relation to web development). dont make a web installer. web installers are icky
[02:22:12] <Activ8> I'll move to offline where possible
[02:22:14] <anddam> I'm shivering already
[02:22:47] <anddam> Activ8: but notice you can download any commit from github, not necessarily releases (WRT your "set in stone")
[02:22:55] <TomyLobo> it's windows, how hard can it be to preload everything to a directory and then package that up in an installer?
[02:23:07] <Activ8> that's what I'm doing TomyLobo
[02:23:17] <TomyLobo> then install git
[02:23:23] <TomyLobo> on your build machine
[02:27:07] *** Quits: dansan (~daniel@75.81.148.51) (Quit: The C preprocessor is a pathway to many abilities some consider to be unnatural.)
[02:27:46] *** Quits: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[02:28:06] <TomyLobo> https://imgur.com/xxMzkhu
[02:28:17] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:30:26] *** Quits: spare (~gzxsdvs3n@user/spareproject) (Remote host closed the connection)
[02:31:50] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[02:32:48] *** Joins: mattf (~mattf@li908-138.members.linode.com)
[02:32:52] *** Quits: pizdets_ (~pizdets@183.182.115.35) (Ping timeout: 250 seconds)
[02:32:55] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 265 seconds)
[02:33:31] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[02:33:47] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[02:33:50] *** Joins: pizdets (~pizdets@183.182.114.240)
[02:35:58] *** Joins: dansan (~daniel@75.81.148.51)
[02:37:33] *** Joins: humky (~humky@user/humky)
[02:37:34] *** Quits: linguist (~autistic@user/linguist) (Ping timeout: 252 seconds)
[02:39:15] *** Quits: TomyLobo (~TomyLobo@p200300e80f06af00d0259f6bb9583317.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[02:40:07] *** Joins: linguist (~autistic@user/linguist)
[02:43:45] *** Quits: humky (~humky@user/humky) (Quit: Leaving)
[02:46:21] *** Joins: durham (~durham@2600:1700:38d4:60:c3c:5bfc:8cac:a0ac)
[02:46:25] *** Quits: durham (~durham@2600:1700:38d4:60:c3c:5bfc:8cac:a0ac) (Remote host closed the connection)
[02:47:38] *** Joins: humky (~humky@user/humky)
[02:58:03] *** Joins: hoochmonger (~hoochmong@user/hoochmonger)
[03:07:35] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Ping timeout: 264 seconds)
[03:16:31] *** Joins: jazzy (~jaziz@user/jaziz)
[03:17:11] *** Quits: jazz-o-lantern (~jaziz@user/jaziz) (Ping timeout: 264 seconds)
[03:17:22] *** jazzy is now known as jazz-o-lantern
[03:17:43] *** Joins: durham (~durham@2600:1700:38d4:60:c3c:5bfc:8cac:a0ac)
[03:22:35] *** Quits: durham (~durham@2600:1700:38d4:60:c3c:5bfc:8cac:a0ac) (Ping timeout: 264 seconds)
[03:24:28] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Quit: 404)
[03:25:26] *** Quits: dsrt^ (~dsrt@70.166.66.234) (Remote host closed the connection)
[03:28:08] <pycurious> How do i delete a local commit to a branch (my current HEAD) - i dont want to change anything else - just get rid of that commit and move the HEAD to the last to last commit?
[03:28:54] <ZacSharp> you mean `git reset HEAD@{1}`?
[03:29:28] <ZacSharp> you want to move the branch or just HEAD?
[03:29:46] <pycurious> In my current branch - the last commit is what i want to get rid of
[03:29:49] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[03:29:57] <pycurious> the head needs to move to the commit before the last one
[03:30:08] <ZacSharp> head or branch or both?
[03:30:41] <pycurious> let me type something that might help
[03:32:11] *** Quits: hoochmonger (~hoochmong@user/hoochmonger) (Ping timeout: 264 seconds)
[03:32:58] <pycurious> ZacSharp: https://dpaste.org/PGVp
[03:35:10] <ZacSharp> I see you are on mybranch and with `git reset mybranch~` you can get to https://dpaste.org/FvAf
[03:35:45] <pycurious> what does this "mybranch~" mean? That sounds great!
[03:35:48] *** Joins: Jong (~Jong@2620:10d:c090:400::5:fbf2)
[03:35:52] <ZacSharp> and I think that is what you want but since you talked about moving HEAD, it might as well be `git checkout mybranch~`
[03:36:09] <ZacSharp> mybranch~ means the first parent of the commit mybranch is on
[03:36:38] <ZacSharp> <commit>~<n> is the n-th first parent of commit
[03:36:58] <ZacSharp> <commit>^<n> is the n-th parent of commit (only merges have more than one)
[03:37:30] <pycurious> It worked - I now need to checkout those files that i dont want any changes from
[03:38:29] <pycurious> ZacSharp: thanks!
[03:38:31] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[03:40:37] *** Joins: chenqisu1 (~xirndc@183.217.203.91)
[03:41:53] *** Joins: zebrag (~chris@user/zebrag)
[03:48:45] *** Joins: durham (~durham@2600:1700:38d4:60:c3c:5bfc:8cac:a0ac)
[03:51:13] *** Quits: durham (~durham@2600:1700:38d4:60:c3c:5bfc:8cac:a0ac) (Remote host closed the connection)
[03:51:29] *** Joins: durham (~durham@2600:1700:38d4:60:c3c:5bfc:8cac:a0ac)
[03:54:07] *** Quits: jazz-o-lantern (~jaziz@user/jaziz) (Ping timeout: 265 seconds)
[03:56:11] *** Quits: thiago (~thiago@2601:1c0:4501:635c:20d9:5c75:12ea:d132) (Ping timeout: 264 seconds)
[03:57:19] *** Quits: natrys (~natrys@user/natrys) (Ping timeout: 252 seconds)
[04:04:58] *** Joins: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[04:08:26] *** Joins: cdown (~cdown@163.114.131.1)
[04:09:59] *** Quits: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 264 seconds)
[04:10:00] *** Joins: natrys (~natrys@user/natrys)
[04:16:22] *** Quits: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e) (Ping timeout: 268 seconds)
[04:17:11] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[04:19:42] *** Joins: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e)
[04:20:14] *** Quits: durham (~durham@2600:1700:38d4:60:c3c:5bfc:8cac:a0ac) (Remote host closed the connection)
[04:20:30] *** Joins: lgc (~lgc@user/lgc)
[04:21:15] *** Quits: natrys (~natrys@user/natrys) (Quit: natrys)
[04:22:21] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[04:28:46] *** Quits: Sazhen86_ (~Sazhen86@125-236-239-93.adsl.xtra.co.nz) (Quit: I've gone to sleep...)
[04:29:13] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Ping timeout: 252 seconds)
[04:30:37] *** Joins: neverwas (jpneverwas@swissbox.unperson.link)
[04:35:01] *** Joins: The_Jag (~The_Jag@host-79-16-36-15.retail.telecomitalia.it)
[04:35:49] *** Quits: The_Jag_ (~The_Jag@host-87-17-20-94.retail.telecomitalia.it) (Ping timeout: 252 seconds)
[04:37:05] *** Joins: jazzy (~jaziz@user/jaziz)
[04:38:26] <neverwas> Hi, I'm trying to track down a copy of cvs2git, but it looks like the site's down: http://cvs2svn.tigris.org Anyone know of another way to snag a tarball?
[04:40:34] *** Quits: The_Jag (~The_Jag@host-79-16-36-15.retail.telecomitalia.it) (Read error: Connection reset by peer)
[04:40:55] *** Joins: The_Jag (~The_Jag@host-79-16-36-15.retail.telecomitalia.it)
[04:44:30] *** Quits: brw (~bas@static.66.39.12.49.clients.your-server.de) (Quit: The Lounge - https://thelounge.chat)
[04:46:41] *** Quits: ZacSharp (~ZacSharp@user/zacsharp) (Quit: ZacSharp)
[04:47:14] *** Joins: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[04:47:22] *** Joins: brw (~bas@static.66.39.12.49.clients.your-server.de)
[04:47:35] *** Quits: rgrinberg (~textual@ip235-44-15-186.ct.co.cr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:51:27] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[04:56:01] <b0nn> http://ftp.pbone.net/mirror/dag.wieers.com/redhat/el6/en/x86_64/dag/RPMS/
[04:56:36] <b0nn> https://ubuntu.pkgs.org/18.04/ubuntu-universe-amd64/cvs2svn_2.5.0-1_all.deb.html
[04:56:38] <b0nn> etc
[04:56:56] <neverwas> cool, thanks
[04:57:11] <b0nn> note:  I have NFI if any of them are official
[04:57:19] <mackerman> el6 is dead.
[04:57:38] <b0nn> mackerman: it's the rpm file, not the distro
[04:57:47] <b0nn> presume your complaint is supporting libs?
[04:58:01] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:01:45] *** Joins: igemnace (~ian@user/igemnace)
[05:01:56] <mackerman> cvs2svn from that repo cannot be installed to CentOS 8.  Maybe something useful can be extracted from the python scripts in it.
[05:07:06] *** Quits: remyabel (remyabel@user/remyabel) (Quit: WeeChat 3.2)
[05:07:17] *** Joins: bremner (~bremner@notmuch/developer/bremner)
[05:07:24] <neverwas> The docker.io/library/ubuntu:bionic image seems to be working
[05:09:14] <mackerman> To install the  cvs2svn via Ubuntu's package?  That would work.
[05:11:15] *** Quits: DoofusCanadensis (~DoofusCan@2604:3d09:47c:f970:fc0e:4b2d:12ee:3407) (Quit: So as you can see from this flowchSQUIRREL!!)
[05:12:48] <elibrokeit> neverwas: https://packages.debian.org/source/buster/cvs2svn
[05:13:14] <elibrokeit> They have a .orig.tar.gz which probably does what you want ;)
[05:14:21] <neverwas> Oh nice. much neater this way. Thanks elibrokeit
[05:15:15] *** Joins: Vonter_ (~Vonter@user/vonter)
[05:17:38] *** Quits: jazzy (~jaziz@user/jaziz) (Read error: Connection reset by peer)
[05:18:48] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[05:19:31] *** Joins: rgrinberg (~textual@ip235-44-15-186.ct.co.cr)
[05:19:36] *** Quits: brw (~bas@static.66.39.12.49.clients.your-server.de) (Quit: The Lounge - https://thelounge.chat)
[05:19:52] *** Quits: Vonter_ (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[05:20:14] *** Joins: Sazhen86 (~Sazhen86@125-236-239-93.adsl.xtra.co.nz)
[05:20:20] *** Joins: brw (~bas@static.66.39.12.49.clients.your-server.de)
[05:21:54] *** Joins: thiago (~thiago@2601:1c0:4501:635c:20d9:5c75:12ea:d132)
[05:25:53] *** Joins: Vonter_ (~Vonter@user/vonter)
[05:27:59] *** Quits: emf (~emf@2620:10d:c090:400::5:35f6) (Ping timeout: 264 seconds)
[05:30:02] *** Joins: The_Jag_ (~The_Jag@host-80-183-32-131.business.telecomitalia.it)
[05:30:19] *** Quits: Vonter_ (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[05:32:47] *** Quits: The_Jag (~The_Jag@host-79-16-36-15.retail.telecomitalia.it) (Ping timeout: 264 seconds)
[05:34:42] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[05:36:34] *** Joins: Vonter_ (~Vonter@user/vonter)
[05:37:06] *** Quits: tar_xvf (~tar@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[05:39:55] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[05:40:46] *** Quits: Vonter_ (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[05:41:16] *** Joins: tar_xvf (~tar@ip-115-87.wireless.oberlin.edu)
[05:42:13] *** Quits: tar_xvf (~tar@ip-115-87.wireless.oberlin.edu) (Client Quit)
[05:43:43] *** Joins: tar_xvf (~tar@ip-115-87.wireless.oberlin.edu)
[05:44:09] *** Quits: tar_xvf (~tar@ip-115-87.wireless.oberlin.edu) (Client Quit)
[05:44:56] *** Joins: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[05:45:12] *** Joins: bloody (~bloody@user/bloody)
[05:45:48] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[05:45:51] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[05:46:26] *** Joins: Vonter_ (~Vonter@user/vonter)
[05:48:08] *** Quits: bloody (~bloody@user/bloody) (Client Quit)
[05:50:00] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 260 seconds)
[05:51:05] *** Quits: Vonter_ (~Vonter@user/vonter) (Ping timeout: 265 seconds)
[05:51:11] *** Joins: mallkrampus (~mallkramp@207.45.82.186)
[05:51:57] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[05:54:08] *** Joins: bloody (~bloody@user/bloody)
[05:54:18] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Killed (silver.libera.chat (Nickname regained by services)))
[05:54:18] *** vinleod is now known as vdamewood
[05:59:25] *** Quits: ikwyl6 (~ikwyl6@2.58.44.226) (Ping timeout: 252 seconds)
[06:06:20] *** Joins: hackinghorn (~hackingho@user/hackinghorn)
[06:08:00] *** Quits: hornhack (~hackingho@user/hackinghorn) (Ping timeout: 265 seconds)
[06:17:14] *** Joins: Vonter_ (~Vonter@user/vonter)
[06:18:10] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 252 seconds)
[06:18:30] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[06:19:07] *** Quits: xlei (akans@pool-68-129-84-118.nycmny.fios.verizon.net) (Ping timeout: 265 seconds)
[06:19:25] <tsujp> on a branch with no merges from other branches between FOO and HEAD I can do `git rebase -i --autosquash FOO~` quite comfortably. If there are merges from master between FOO and HEAD i.e. FOO..HEAD is there a flag I can pass to make the autosquash and what not less painful? I have to do conflict solves already solved in the merge commit
[06:19:31] <tsujp> I used such a flag before but I cannot remember it or find it
[06:19:53] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:21:59] *** Quits: Vonter_ (~Vonter@user/vonter) (Ping timeout: 264 seconds)
[06:23:28] *** Quits: bin101 (~bin101@user/bin101) (Ping timeout: 265 seconds)
[06:24:48] *** Quits: Sazhen86 (~Sazhen86@125-236-239-93.adsl.xtra.co.nz) (Quit: I've gone to sleep...)
[06:27:05] *** Joins: Vonter_ (~Vonter@user/vonter)
[06:27:08] *** Joins: bin101 (~bin101@user/bin101)
[06:28:49] <elibrokeit> tsujp: --rebase-merges perhaps?
[06:31:35] *** Quits: Vonter_ (~Vonter@user/vonter) (Ping timeout: 264 seconds)
[06:31:36] *** Joins: xlei (znc@pool-68-129-84-118.nycmny.fios.verizon.net)
[06:41:30] *** Joins: Vonter_ (~Vonter@user/vonter)
[06:43:26] *** Joins: saroy (~Sandipan@45.249.73.204)
[06:44:11] *** Quits: thiago (~thiago@2601:1c0:4501:635c:20d9:5c75:12ea:d132) (Quit: Lost terminal)
[06:45:51] *** Joins: DoofusCanadensis (~DoofusCan@2604:3d09:47c:f970:a594:cc33:6e78:6c65)
[06:46:11] *** Quits: Vonter_ (~Vonter@user/vonter) (Ping timeout: 265 seconds)
[06:49:34] *** Quits: rgrinberg (~textual@ip235-44-15-186.ct.co.cr) (Ping timeout: 265 seconds)
[06:54:58] *** Joins: rgrinberg (~textual@ip235-44-15-186.ct.co.cr)
[06:54:59] *** Joins: thiago (~thiago@2601:1c0:4501:635c:d51:5f6f:4b21:e23e)
[06:55:25] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[07:02:39] *** Joins: Vonter_ (~Vonter@user/vonter)
[07:03:18] *** Quits: NightMonkey (~NightMonk@user/nightmonkey) (Quit: ZNC - http://znc.in)
[07:04:55] <tsujp> ah ill give it a shot elibrokeit
[07:06:44] *** Joins: NightMonkey (~NightMonk@user/nightmonkey)
[07:07:07] *** Quits: Vonter_ (~Vonter@user/vonter) (Ping timeout: 252 seconds)
[07:10:03] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[07:10:16] *** Joins: pycurious (~Adium@user/pycurious)
[07:11:37] *** Quits: DoofusCanadensis (~DoofusCan@2604:3d09:47c:f970:a594:cc33:6e78:6c65) (Quit: So long, suckers)
[07:14:16] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 245 seconds)
[07:16:22] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[07:20:27] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[07:20:52] <tsujp> elibrokeit sorry I dc'd, `--rebase-merges` right?
[07:21:02] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[07:29:00] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[07:33:00] *** Quits: rgrinberg (~textual@ip235-44-15-186.ct.co.cr) (Remote host closed the connection)
[07:33:23] *** Quits: xlei (znc@pool-68-129-84-118.nycmny.fios.verizon.net) (Ping timeout: 264 seconds)
[07:34:17] *** Joins: rgrinberg (~textual@ip235-44-15-186.ct.co.cr)
[07:36:58] *** Joins: pycurious (~Adium@user/pycurious)
[07:39:36] *** Joins: rapiz (~rapiz@115.156.141.168)
[07:40:45] *** Joins: xlei (znc@pool-68-129-84-118.nycmny.fios.verizon.net)
[07:41:13] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 252 seconds)
[07:47:24] *** Joins: coot (~coot@37.30.48.91.nat.umts.dynamic.t-mobile.pl)
[07:51:40] *** Joins: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au)
[07:51:52] <quazimodo> is it considered bad to put changelog inside a git tag?
[07:52:20] *** Quits: rapiz (~rapiz@115.156.141.168) (Quit: Konversation terminated!)
[07:53:55] *** Joins: pycurious (~Adium@user/pycurious)
[07:54:42] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[07:56:28] <ikke> quazimodo: for smaller projects, I tend to do that, but I'm not sure many people will look there for the changelog
[07:57:40] *** Quits: Dotz0cat (~Dotz0cat@h38.88.187.173.dynamic.ip.windstream.net) (Ping timeout: 252 seconds)
[07:58:22] *** Joins: Dotz0cat (~Dotz0cat@h113.245.19.98.static.ip.windstream.net)
[07:58:35] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 264 seconds)
[08:00:37] *** Quits: n-st (~n-st@user/n-st) (*.net *.split)
[08:00:37] *** Quits: Wolf480pl (wolf480pl@2a01:4f8:c2c:e5b0::1) (*.net *.split)
[08:00:37] *** Quits: lemontree (~chat@user/lemontree) (*.net *.split)
[08:00:37] *** Quits: phryk (~totallyno@user/phryk) (*.net *.split)
[08:00:37] *** Quits: quesker (idnet@2600:3c01::f03c:91ff:feac:4ce2) (*.net *.split)
[08:00:37] *** Quits: preisi_svr (~preisi@prei.si) (*.net *.split)
[08:00:37] *** Quits: oprypin (~irc@pryp.in) (*.net *.split)
[08:00:37] *** Quits: Spydar007 (~spydar007@user/spydar007) (*.net *.split)
[08:00:37] *** Quits: nickmass (~nickmass@nickmass.com) (*.net *.split)
[08:00:37] *** Quits: mgedmin (~mg@user/mgedmin) (*.net *.split)
[08:00:37] *** Quits: push-f (~martin@push-f.com) (*.net *.split)
[08:00:37] *** Quits: FLHerne (flh@flherne.uk) (*.net *.split)
[08:00:37] *** Quits: hbjy (~hbjy@rockylinux/web/hbjy) (*.net *.split)
[08:00:37] *** Quits: fingercomp (fingercomp@95.216.163.96) (*.net *.split)
[08:00:37] *** Quits: Benett (~Benett@2a03:4000:1a:7aa::2) (*.net *.split)
[08:00:37] *** Quits: Riviera (Riviera@user/riviera) (*.net *.split)
[08:00:37] *** Quits: davve (davve@bsd.douchedata.com) (*.net *.split)
[08:00:37] *** Quits: dmvrtx_ (dmvrtx@2a01:7e01::f03c:92ff:fefd:6ed6) (*.net *.split)
[08:00:37] *** Quits: Moult (~sevenstro@sevenstrokes.net) (*.net *.split)
[08:00:45] *** Joins: davve (davve@bsd.douchedata.com)
[08:00:46] *** Joins: Riviera (Riviera@user/riviera)
[08:00:46] *** Joins: oprypin (~irc@pryp.in)
[08:00:52] *** Joins: dmvrtx (dmvrtx@2a01:7e01::f03c:92ff:fefd:6ed6)
[08:00:57] *** Joins: FLHerne_ (flh@flherne.uk)
[08:01:04] *** Joins: preisi_svr (~preisi@prei.si)
[08:01:05] *** Joins: push-f (~martin@push-f.com)
[08:01:11] *** Joins: lemontree (~chat@46.23.89.241)
[08:01:15] *** Joins: nickmass (~nickmass@nickmass.com)
[08:01:15] *** Quits: lemontree (~chat@46.23.89.241) (Signing in (lemontree))
[08:01:15] *** Joins: lemontree (~chat@user/lemontree)
[08:01:16] *** Joins: Moult (~sevenstro@sevenstrokes.net)
[08:01:22] *** Joins: Wolf480pl (wolf480pl@2a01:4f8:c2c:e5b0::1)
[08:01:29] *** Joins: hbjy (~hbjy@rockylinux/web/hbjy)
[08:01:30] *** Joins: n-st (~n-st@user/n-st)
[08:01:30] *** Joins: quesker (~idnet@mail.89vx.net)
[08:01:30] *** Joins: Benett (~Benett@2a03:4000:1a:7aa::2)
[08:01:30] *** Joins: phryk (~totallyno@user/phryk)
[08:01:37] *** Joins: Spydar007 (~spydar007@user/spydar007)
[08:02:05] *** Joins: fingercomp (fingercomp@fomalhaut.me)
[08:02:43] *** Joins: mgedmin (~mg@user/mgedmin)
[08:02:49] *** FLHerne_ is now known as FLHerne
[08:04:05] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[08:07:00] *** Joins: vishal (~vishal@fedora/vishal)
[08:07:01] *** Quits: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Remote host closed the connection)
[08:10:06] *** Quits: _xor (~xor@72.49.199.147) (Read error: Connection reset by peer)
[08:10:34] *** Joins: _xor (~xor@72.49.199.147)
[08:12:30] *** Joins: pycurious (~Adium@user/pycurious)
[08:15:27] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[08:16:03] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[08:17:03] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 265 seconds)
[08:18:01] *** Quits: hbautista (~hbautista@187.171.117.35) (Ping timeout: 245 seconds)
[08:24:35] *** Joins: yeirr (~yeirr@user/yeirr)
[08:25:12] *** Quits: lgc (~lgc@user/lgc) (Quit: WeeChat 3.2-dev)
[08:29:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 265 seconds)
[08:40:56] <quazimodo> ikke: i can parse all the tags & build the changelog file
[08:41:06] <quazimodo> i don't really want to include the changelog as a physical file in the repository tbh
[08:41:21] <quazimodo> it's metadata built off the commit messages
[08:41:39] <quazimodo> but now that I say that it means it has no place on the commit message I guess
[08:47:02] *** Joins: pycurious (~Adium@user/pycurious)
[08:47:52] <ikke> A change log usually is higher level
[08:51:21] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 245 seconds)
[08:56:47] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 264 seconds)
[08:57:11] *** Joins: alkino (~quassel@user/alkino)
[09:06:16] *** Quits: rgrinberg (~textual@ip235-44-15-186.ct.co.cr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:12:34] *** Quits: stats464_ (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Read error: Connection reset by peer)
[09:12:44] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[09:21:37] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[09:23:17] *** Joins: 042AABODN (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[09:28:07] *** Joins: pycurious (~Adium@user/pycurious)
[09:28:54] *** Quits: yeirr (~yeirr@user/yeirr) (Ping timeout: 260 seconds)
[09:30:33] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Read error: Connection reset by peer)
[09:31:03] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[09:32:36] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 258 seconds)
[09:33:55] *** Quits: xlei (znc@pool-68-129-84-118.nycmny.fios.verizon.net) (Ping timeout: 265 seconds)
[09:37:09] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 276 seconds)
[09:38:06] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[09:45:23] *** Quits: 042AABODN (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 264 seconds)
[09:52:03] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[09:55:35] *** Quits: mallkrampus (~mallkramp@207.45.82.186) (Ping timeout: 264 seconds)
[09:58:33] *** Joins: asbachb (~asbachb@p5b3f64f1.dip0.t-ipconnect.de)
[10:00:52] *** Joins: pycurious (~Adium@user/pycurious)
[10:02:54] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:04:14] *** Quits: coot (~coot@37.30.48.91.nat.umts.dynamic.t-mobile.pl) (Quit: coot)
[10:04:54] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[10:05:18] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 260 seconds)
[10:06:43] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 258 seconds)
[10:06:56] *** Joins: yeirr (~yeirr@user/yeirr)
[10:08:22] *** Joins: mallkrampus (~mallkramp@148.72.164.125)
[10:08:51] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[10:09:22] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[10:13:32] *** Joins: rfuentess (~rfuentess@static-5-51-117-151.ftth.abo.bbox.fr)
[10:14:15] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 268 seconds)
[10:18:15] *** Joins: coot (~coot@37.30.48.91.nat.umts.dynamic.t-mobile.pl)
[10:18:19] *** Joins: ksynwa (~ksynwa@5.45.111.57)
[10:18:20] *** Joins: spare (~gzxsdvs3n@user/spareproject)
[10:19:47] <quazimodo> ikke: depends on the commit & branch strategies
[10:20:02] <quazimodo> in long lived feature branch style strategies, yes i agree
[10:20:13] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[10:20:37] <quazimodo> we're moving to trunk based dev where each checked in commit really should provide complete business value of some sort, then in that case the commit messages make sense
[10:20:54] <quazimodo> and we limit the total work to max 1 day
[10:21:01] <quazimodo> so git bisect will still have value
[10:26:01] *** Quits: asbachb (~asbachb@p5b3f64f1.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[10:26:41] *** Joins: igemnace (~ian@user/igemnace)
[10:27:09] <ikke> fyi, a semi-linear worfklow do the same while still allow for even smaller commits (if it makes sense)
[10:27:37] <ikke> The merge commit would represents the business value, while each commit can represent a logical unit of work
[10:28:18] <quazimodo> yeah that can also make sense
[10:28:40] <quazimodo> actually I'm trying to force these devs to go as linear as possible, not because I don't like merges, I do like merges & branches actually
[10:28:46] <quazimodo> a 'busy' git graph has never been a problem forme
[10:28:56] *** Joins: Vonter_ (~Vonter@user/vonter)
[10:29:05] <quazimodo> but the devs on my team take aaaaaages to build stuff & push it out because they go breadth first all the time
[10:29:11] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 264 seconds)
[10:29:13] <quazimodo> it's created real business risk & headache
[10:29:56] <quazimodo> i'm pushing for linear, daily, hard so that they go feet first into the deep end on getting an thin end to end bit of work out every day
[10:30:08] <quazimodo> they'll find ways to use branches & stuff i'm certain
[10:30:53] <ikke> So more a matter of limiting scope
[10:31:25] <ikke> But yeah, these are challenges
[10:31:31] <quazimodo> ikke: at some point the user stories are already very refined, it becomes prohibitively costly in planning to make them thinner
[10:32:05] <quazimodo> but both back & front end can deliver on a "chunky" bit of work, the user story, by doing thin slices every day
[10:32:26] <quazimodo> up to them on how they want to do that, i dont mind having several entries for 'Ticket-abc123' in the changelog
[10:32:51] <quazimodo> it's harder for things like system upgrades, rails 5 to 6 took a bit of time
[10:33:04] <quazimodo> partly because a lot of the lib providers aren't signed up to that sort of process
[10:33:10] *** Quits: Vonter_ (~Vonter@user/vonter) (Ping timeout: 258 seconds)
[10:33:10] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[10:33:24] <quazimodo> I image that many of them will move to a 'rolling update' model soon enough as it becomes clearer that this style of development & delivery is better
[10:33:35] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[10:33:36] *** Joins: pycurious (~Adium@user/pycurious)
[10:33:48] <quazimodo> "as it becomes clearer" is a faithful statement, i'm pretty sure it is but time will tell
[10:34:40] *** Quits: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net) (Quit: ZNC 1.8.2 - https://znc.in)
[10:34:41] <quazimodo> what I'm thiking is that major version updates should be _absolutely minimal things necessary_ to cause the backwards incompatibility
[10:35:04] <quazimodo> sadly many projects seem to use a major version update to change absolutely everything that they can, rather than the minimum possible change
[10:35:27] <quazimodo> friend of mine was on an xcode codebase that went from major to major, i could feel him crying over discord as every single possible thing that could break did break
[10:38:11] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 264 seconds)
[10:42:14] *** Quits: Cork (~Cork@user/cork) (Remote host closed the connection)
[10:43:24] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[10:44:29] *** Joins: Cork (~Cork@user/cork)
[10:47:44] *** Joins: palasso (~palasso@user/palasso)
[10:48:08] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[10:49:49] *** Joins: Vonter_ (~Vonter@user/vonter)
[10:50:45] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[10:52:20] *** Joins: cation21 (cation@user/cation)
[10:52:21] *** Joins: pycurious (~Adium@user/pycurious)
[10:53:48] *** Quits: cation (cation@user/cation) (Ping timeout: 265 seconds)
[10:54:15] *** Quits: Vonter_ (~Vonter@user/vonter) (Ping timeout: 258 seconds)
[10:55:37] *** cation21 is now known as cation
[10:56:10] *** Quits: Cork (~Cork@user/cork) (Ping timeout: 258 seconds)
[10:56:11] *** Quits: thiago (~thiago@2601:1c0:4501:635c:d51:5f6f:4b21:e23e) (Ping timeout: 264 seconds)
[10:56:54] *** Joins: Ilyu (~quassel@78.202.228.230)
[11:00:27] *** Joins: Vonter_ (~Vonter@user/vonter)
[11:03:15] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[11:04:47] *** Joins: theoceaniscool (~theoceani@119.12.232.133)
[11:04:59] *** Quits: Vonter_ (~Vonter@user/vonter) (Ping timeout: 258 seconds)
[11:06:25] *** Joins: vladoski (~vladoski@2001:b07:add:d406:63fc:899a:25f0:b2bc)
[11:08:26] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 258 seconds)
[11:12:32] *** Joins: Cork (~Cork@user/cork)
[11:12:39] *** Quits: vladoski (~vladoski@2001:b07:add:d406:63fc:899a:25f0:b2bc) (Remote host closed the connection)
[11:14:04] *** Joins: vladoski (~vladoski@2001:b07:add:d406:886:f908:e49c:23de)
[11:26:53] *** Joins: bkircher (~bkircher@200116b84646c600f2b6ff3b366cc350.dip.versatel-1u1.de)
[11:31:07] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[11:32:17] *** Joins: Guest41 (~Guest41@2402:e280:216c:64:bdd5:f7de:2df6:2d25)
[11:33:02] *** Quits: Guest41 (~Guest41@2402:e280:216c:64:bdd5:f7de:2df6:2d25) (Client Quit)
[11:33:02] *** Joins: ouzel8___ (~ouzel8_@shams.boastblast.com)
[11:33:03] *** Joins: darkstarx (~darkstard@2601:1c2:300:c8a0::6c32)
[11:33:18] *** Quits: darkstardevx (~darkstard@2601:1c2:300:c8a0::6c32) (Remote host closed the connection)
[11:33:19] *** Quits: ouzel8_ (~ouzel8_@shams.boastblast.com) (Read error: Connection reset by peer)
[11:33:26] *** Quits: PocketKiller (PacKetIV@user/packetiv) (Ping timeout: 245 seconds)
[11:33:26] *** Quits: Puyo (sid500577@user/puyo) (Ping timeout: 245 seconds)
[11:33:26] *** Quits: coldmountain (sid484352@helmsley.irccloud.com) (Ping timeout: 245 seconds)
[11:33:49] *** Joins: coldmountain (sid484352@id-484352.helmsley.irccloud.com)
[11:33:50] *** Joins: Puyo (sid500577@user/puyo)
[11:34:25] *** Joins: PocketKiller (PacKetIV@user/packetiv)
[11:35:47] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 264 seconds)
[11:40:40] *** Joins: pycurious (~Adium@user/pycurious)
[11:45:10] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 260 seconds)
[11:45:22] *** Joins: vlado_ (~vladoski@93-47-225-6.ip114.fastwebnet.it)
[11:47:55] *** Quits: vladoski (~vladoski@2001:b07:add:d406:886:f908:e49c:23de) (Ping timeout: 258 seconds)
[11:53:39] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[11:55:34] *** Joins: cadmio (~cadmio@151.25.149.251)
[11:55:36] <cadmio> Hello
[11:55:52] <cadmio> How can I avoid to update the binary file on committing?
[12:00:14] <aminvakil> cadmio: put it in .gitignore? not add it in commit?
[12:01:44] <cadmio> like this: git rm --cached 'filename'; echo 'filename' >> .gitignore  ?
[12:01:59] *** Quits: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[12:02:36] *** Joins: mat001 (~mat001@213.143.69.121)
[12:03:49] *** Quits: rkta (~kt@62.113.246.111) (Remote host closed the connection)
[12:04:30] *** Joins: rkta (~kt@62.113.246.111)
[12:07:27] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_dog)
[12:07:29] *** Quits: vlado_ (~vladoski@93-47-225-6.ip114.fastwebnet.it) (Remote host closed the connection)
[12:08:32] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[12:08:42] *** Joins: masber (~masber@2001:620:808:1001::28f7)
[12:12:01] *** Joins: vladoski (~vladoski@2001:b07:add:d406:e345:4e9f:5bda:dc73)
[12:14:25] *** Quits: bkircher (~bkircher@200116b84646c600f2b6ff3b366cc350.dip.versatel-1u1.de) (Quit: WeeChat 3.2)
[12:15:52] *** Joins: bkircher (~bkircher@200116b84646c600f2b6ff3b366cc350.dip.versatel-1u1.de)
[12:18:11] <cadmio> is it correct?
[12:18:55] <canton7> cadmio, that will tell git to stop tracking the file while not deleting it locally, and then tell git to avoid adding it to the repo in future
[12:20:20] <cadmio> git rm --cached 'binaryname'; echo 'binaryname' >> .gitignore; git add .gitignore; git commit -m "Ignore binary file from now on"
[12:20:26] <cadmio> maybe this is more complete
[12:21:19] *** Joins: o1lo01ol1o (~o1lo01ol1@2001:8a0:6d7a:df01:dde2:6c49:6076:e5ad)
[12:23:54] <cadmio> right?
[12:27:38] *** Joins: Rashad (~Rashad@213.139.41.247)
[12:28:50] *** Joins: pycurious (~Adium@user/pycurious)
[12:30:04] <osse> yes
[12:32:07] <cadmio> thanks
[12:33:10] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[12:33:14] *** Joins: nehsou^ (~nehsou@70.166.66.234)
[12:33:32] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 258 seconds)
[12:33:39] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[12:34:11] *** Parts: cadmio (~cadmio@151.25.149.251) (WeeChat 3.0)
[12:36:59] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 264 seconds)
[12:37:53] <woss[m]> good morning. i'm trying to get my head around how git does the clone.
[12:37:53] <woss[m]> Let's say i have a repository stored here https://ipfs.anagolay.network/ipfs/bafybeig3de4tyicwayzydzcxuabqs42fcolvfd3bjgxibespytes2hthte but the `.git/config#remote` origin is set to `https://github.com/woss/rust-multihash`
[12:37:53] <woss[m]> when i do `git clone https://ipfs.anagolay.network/ipfs/bafybeig3de4tyicwayzydzcxuabqs42fcolvfd3bjgxibespytes2hthte/.git rust-multihash` from WHERE git gets the data? Does it get it from the cloned URL or goes and fetches it from the remote origin?
[12:38:38] <woss[m]>  * good morning. i'm trying to get my head around how git clone, dies the clone. little bit of help would be greatly appreciated 🙂
[12:38:38] <woss[m]> Let's say i have a repository stored here https://ipfs.anagolay.network/ipfs/bafybeig3de4tyicwayzydzcxuabqs42fcolvfd3bjgxibespytes2hthte but the `.git/config#remote` origin is set to `https://github.com/woss/rust-multihash`
[12:38:38] <woss[m]> when i do `git clone https://ipfs.anagolay.network/ipfs/bafybeig3de4tyicwayzydzcxuabqs42fcolvfd3bjgxibespytes2hthte/.git rust-multihash` from WHERE git gets the data? Does it get it from the cloned URL or goes and fetches it from the remote origin?
[12:42:42] *** Joins: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net)
[12:43:33] <osse> woss[m]: that doesn't happen here
[12:43:56] <woss[m]> @osse doesn't happen where?
[12:44:11] <osse> I mean when I clone then .git/config contains the expected yrl
[12:45:16] <osse> maybe you have something in ~/.gitconfig that modifies the URLs
[12:46:39] <woss[m]> darn, you are right! i never thought to check the `.git/config` after the clone. i was 100% sure it doesn't change. so to answer my own question. git actually takes the files from the clonned url rather than the remote. this is great news !
[12:47:32] <woss[m]> and now to find that in the documentation to learn why 🙂
[12:49:19] *** Joins: vlado_ (~vladoski@93-47-225-6.ip114.fastwebnet.it)
[12:49:31] *** Joins: drogas (~drogas@jump2.jet.uk)
[12:51:56] *** Quits: vladoski (~vladoski@2001:b07:add:d406:e345:4e9f:5bda:dc73) (Ping timeout: 258 seconds)
[12:53:53] *** Quits: Lunatrius (~Lunatrius@77.38.77.136) (Read error: Connection reset by peer)
[12:54:08] *** Joins: Lunatrius (~Lunatrius@77.38.77.136)
[12:55:27] *** Joins: pulse (~pulse@user/pulse)
[12:57:47] <woss[m]> i'm not well versed in C but this looks like a place where the `git clone` takes the path where the files are. https://github.com/git/git/blob/master/builtin/clone.c#L961 please correct me if i'm wrong
[12:58:36] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[12:59:50] *** Quits: Cork (~Cork@user/cork) (Ping timeout: 260 seconds)
[13:00:16] *** Quits: vlado_ (~vladoski@93-47-225-6.ip114.fastwebnet.it) (Read error: Connection reset by peer)
[13:00:18] *** Quits: coot (~coot@37.30.48.91.nat.umts.dynamic.t-mobile.pl) (Quit: coot)
[13:03:13] *** Joins: vladoski (~vladoski@2001:b07:add:d406:aa66:9dae:fc42:f2e)
[13:03:31] *** Joins: pycurious (~Adium@user/pycurious)
[13:05:32] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[13:08:01] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 245 seconds)
[13:09:31] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[13:19:54] *** Joins: lgc (~lgc@user/lgc)
[13:28:59] *** Joins: Cork (~Cork@user/cork)
[13:29:38] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:29:43] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[13:30:52] *** Joins: coot (~coot@37.30.48.91.nat.umts.dynamic.t-mobile.pl)
[13:30:53] *** Joins: pycurious (~Adium@user/pycurious)
[13:31:25] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:36:31] *** Joins: vlado_ (~vladoski@93-47-225-6.ip114.fastwebnet.it)
[13:38:08] *** Joins: dayday (uid520582@id-520582.hampstead.irccloud.com)
[13:39:05] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 258 seconds)
[13:39:05] *** Quits: vladoski (~vladoski@2001:b07:add:d406:aa66:9dae:fc42:f2e) (Ping timeout: 258 seconds)
[13:41:21] <jast> woss[m]: I don't think I understand. when you're cloning, no .git/config exists yet, and so no remote exists, either. the only way for git to determine a remote URL is to use the URL provided on the command line, which then gets added to the newly created .git/config
[13:42:17] <woss[m]> Click on the link i provided. It's a full git repo with .git and files
[13:42:45] <jast> okay, but the remote's config is not transmitted during clones
[13:42:49] <osse> nothing in .git will be copied when you clone
[13:44:07] *** Joins: natrys (~natrys@user/natrys)
[13:47:15] <jast> clones are not filesystem-level copies. if the clone is happening via git://, SSH or a server supporting git's smart HTTP protocol, only the actual data is transmitted using git's native protocol. with less intelligent servers, file-level copies are used, but only on the critically important data (refs, packs and objects basically)
[13:48:03] *** Joins: daoudr (~daoudr@2a02:1205:c681:1650:2213:cc7f:a040:3a92)
[13:51:38] *** Quits: Cork (~Cork@user/cork) (Ping timeout: 260 seconds)
[13:57:11] *** Quits: bkircher (~bkircher@200116b84646c600f2b6ff3b366cc350.dip.versatel-1u1.de) (Ping timeout: 245 seconds)
[14:00:49] *** Quits: spare (~gzxsdvs3n@user/spareproject) (Remote host closed the connection)
[14:01:14] *** Joins: spare (~gzxsdvs3n@user/spareproject)
[14:01:51] <woss[m]> so less intelligent server can be just a ifps node with http gateway, like my example. I'm trying to understand the steps what git does when it clones. the reason for all the `dumb` questions is that i am working on https://github.com/woss/ipfs-rehost-web-service and am not sure what would suit better, bare repos or the full repos.
[14:01:51] <woss[m]> the git documentation is quite extensive and it is hard to pinpoint answers to these questions. that's why i ask them here 🙂
[14:01:51] <woss[m]>  
[14:04:30] *** Quits: qsx (qsx@shell.chaotikum.eu) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:05:06] <woss[m]> the project has only one condition that must be met, that is `The code behind the git clone must always be available`.
[14:05:06] <woss[m]> my understanding is that with the bare repos, git connects to the remote and fetches the files from there. if that remote is a personal server and it goes down, no files are cloned ( maybe i'm wrong ). Also if the remote is the centralized repository hub like github and they go down or the owner removes the repository, files are not cloned.
[14:05:06] <woss[m]> for that reason i went with the full repo on the ipfs.
[14:05:06] <woss[m]> also this decision was made with my current knowledge on git internals and what is better
[14:05:13] *** Joins: qsx (qsx@shell.chaotikum.eu)
[14:05:19] *** Joins: lionkor (~lionkor@200116b80fe170007285c2fffea63d72.dip.versatel-1u1.de)
[14:05:52] *** Joins: hornhack (~hackingho@user/hackinghorn)
[14:06:42] <osse> the process of cloning is the same whether you clone a bare repo or a full repo
[14:06:59] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[14:07:13] <osse> either way, the actual files on disk are not used
[14:07:15] *** Joins: xlei (znc@pool-68-129-84-118.nycmny.fios.verizon.net)
[14:08:45] *** Quits: hackinghorn (~hackingho@user/hackinghorn) (Ping timeout: 260 seconds)
[14:09:58] *** Quits: spare (~gzxsdvs3n@user/spareproject) (Remote host closed the connection)
[14:11:36] <osse> man gitremote-helpers
[14:11:36] <gitinfo> the gitremote-helpers manpage is available at https://gitirc.eu/gitremote-helpers.html
[14:12:28] <osse> Not really sure how it works over https
[14:13:02] <osse> Over ssh it's fairly simply, conceptually: git logs on to the server via ssh and runs git commands to do the data transfer
[14:14:36] <woss[m]> maybe we are not talking about the same thing. let say i don't have the files on my laptop ( fs ) and i do a `git clone http://full-repo/.git` ( link above). this will make a clone from that url and it will NOT look at the remote, after the successful clone it will set the remote to the url
[14:15:24] *** Quits: Rashad (~Rashad@213.139.41.247) (Quit: Client closed)
[14:15:35] <woss[m]> second, i don't have the files on my laptop (fs) and i do `git clone http://bare-repo.git` where the remote is set and points to a github repo. the git will take the files from the github?
[14:15:41] <osse> what do you mean by "it will not look at the remote"
[14:15:46] <woss[m]> the protocol is not important
[14:16:36] <woss[m]> osse: >  will NOT look at the remote
[14:16:36] <woss[m]> this? i mean will the git ask for any information on the URL that is set to be a remote.origin in the config file or not
[14:17:46] <osse> it will not
[14:18:01] *** Quits: Ilyu (~quassel@78.202.228.230) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:18:01] <osse> the config file of the remote repo is not used at all
[14:18:53] <woss[m]> but is it used when i would like to clone the bare repo?
[14:18:58] <osse> no
[14:21:33] <woss[m]> so how the git knows where are the files? 🙂
[14:21:57] <woss[m]> oh, don't tell me that all is in the `packs`
[14:22:11] <woss[m]> s/oh, don't tell me that all is in the `packs`/oh, don't tell me that all is in the `pack` objects/
[14:22:19] *** Joins: rond_ (~rond_@2a02:a31a:a23c:f480:2fd7:e087:5546:a438)
[14:22:22] <osse> the program "git-upload-pack" is invoked on the remote side
[14:22:31] <osse> how that works internally I don't know
[14:23:10] *** Joins: Cork (~Cork@user/cork)
[14:25:44] <woss[m]> i just made  bare repo of the project i shared before. https://ipfs.anagolay.network/ipfs/bafybeigxtqnbuqlbp2f3ltjqdwl7am3ic443s7sjjohf2l3g5iskofihym... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/418281dc98b0a30761a1bba5043bbd9e2a865114)
[14:26:54] <woss[m]> osse: this is what is confusing to me, `remote side` is what exactly, the url that is set in the `remote.origin`
[14:27:26] <osse> when I say "the remote side" I mean server you clone from
[14:27:38] <osse> ie. ipfs.anagolay.network
[14:30:47] *** Joins: bkircher (~bkircher@200116b84646c600f2b6ff3b366cc350.dip.versatel-1u1.de)
[14:30:58] <woss[m]> but that server doesn't have git, it's insanely dumb http gateway. how can it then return anything 🤔
[14:31:05] *** Joins: pycurious (~Adium@user/pycurious)
[14:35:13] <woss[m]> hm. i did an experiment, removed the remote from the config then saved it on the node, it still worked without problems, and the remote is set properly on local fs. so @osse your message that `the config file of the remote repo is not used at all` is proven to be correct ( not that i thought otherwise 🙂 )
[14:35:30] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 260 seconds)
[14:40:27] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[14:41:47] *** Quits: mx08 (~mx08@user/mx08) (Ping timeout: 240 seconds)
[14:42:43] *** Joins: mx08 (~mx08@user/mx08)
[14:44:28] <furrymcgee> :help reg
[14:44:50] <osse> loool noob
[14:45:19] *** preisi_svr is now known as preisi
[14:52:23] *** Joins: spare (~gzxsdvs3n@user/spareproject)
[14:58:33] *** Joins: pycurious (~Adium@user/pycurious)
[15:03:02] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 258 seconds)
[15:17:19] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[15:18:23] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 264 seconds)
[15:19:22] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:19:25] *** Quits: spare (~gzxsdvs3n@user/spareproject) (Remote host closed the connection)
[15:26:28] *** Joins: AnapodoPsalidaki (~AnapodoPs@2a02:587:2917:5181:e4e8:cf7a:8e17:b67b)
[15:26:59] *** Joins: jwillikers (~jwilliker@2604:2800:2:a403:fe91:ac3e:5153:1290)
[15:27:11] <Activ8> anddam and TomyLobo thank you for the help yesterday about the git packaging, worked a treat.  I just downloaded the package on a dev machine then  packaged it then extracted to location when I wanted to build the package.  Cheers for info.
[15:30:08] *** Joins: Sazhen86 (~Sazhen86@125-236-239-93.adsl.xtra.co.nz)
[15:31:35] *** Quits: yeirr (~yeirr@user/yeirr) (Ping timeout: 264 seconds)
[15:35:20] *** Quits: coot (~coot@37.30.48.91.nat.umts.dynamic.t-mobile.pl) (Quit: coot)
[15:36:38] *** Joins: teut (~teut@182.68.178.118)
[15:39:42] *** Quits: chenqisu1 (~xirndc@183.217.203.91) (Quit: Leaving)
[15:40:31] *** Quits: teut (~teut@182.68.178.118) (Quit: Client closed)
[15:40:39] *** Quits: Jong (~Jong@2620:10d:c090:400::5:fbf2) (Read error: Connection reset by peer)
[15:43:30] *** Joins: pycurious (~Adium@user/pycurious)
[15:45:58] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[15:47:37] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:547a:a00b:38d:bc41)
[15:47:37] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:547a:a00b:38d:bc41) (Changing host)
[15:47:37] *** Joins: skapata (~Skapata@user/skapata)
[15:47:49] *** Quits: dayday (uid520582@id-520582.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:51:15] *** Quits: jwillikers (~jwilliker@2604:2800:2:a403:fe91:ac3e:5153:1290) (Quit: jwillikers)
[15:51:33] *** Joins: jwillikers (~jwilliker@ics141-1.icsincorporated.com)
[15:54:47] *** Joins: remyabel (remyabel@user/remyabel)
[16:04:26] *** Quits: rahl (~rahl@102.114.64.189) (Ping timeout: 265 seconds)
[16:06:01] *** Joins: rahl (~rahl@102.114.62.141)
[16:06:37] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 252 seconds)
[16:07:39] *** Joins: yeirr (~yeirr@user/yeirr)
[16:09:18] *** Joins: adlternative (~adl@117.32.216.71)
[16:12:15] *** Joins: bloody (~bloody@user/bloody)
[16:12:24] <adlternative> hey, guys, why my gmail can't receive anything from git@vger.kernel.org since last week?
[16:13:04] <adlternative> but in lore.kernel.org, I can see them correctly.
[16:13:48] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:18:35] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[16:19:21] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[16:23:22] *** Joins: charolastra (~quassel@gw.mokka.at)
[16:23:46] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 260 seconds)
[16:24:09] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[16:25:24] *** Joins: coot (~coot@37.30.48.91.nat.umts.dynamic.t-mobile.pl)
[16:25:27] *** Joins: bloody (~bloody@user/bloody)
[16:26:57] *** Quits: jwillikers (~jwilliker@ics141-1.icsincorporated.com) (Remote host closed the connection)
[16:27:36] <ikke> adlternative: you seem to have the same issue as linguist
[16:29:18] <charolastra> hi, i branched of the master branch, didn't pay attention and commited changes that should have gone into master into the feature branch. now i'm trying to pull those individual commits into master. that worked until i try to merge commits that are on top of feature commits. then it merges the whole branch until that commit, including the whole feature changes
[16:30:01] <charolastra> is it possible to move certain commits from one branch to another (assuming they are mutual changes). is cherry picking what i'm looking for?
[16:31:20] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[16:33:59] <j416> charolastra: cherry-pick will get you the changes from just one commit, yes.
[16:34:18] <j416> charolastra: if you should decide to merge that whole feature branch at a later point though, you will end up with duplicate commits.
[16:34:32] <j416> charolastra: unless you first rebase the feature branch to remove those duplicates.
[16:35:11] <adlternative> ikke: Ok... Have people in the Git community noticed this? What damage has happened to git@vger.kernel.org?
[16:36:07] <j416> charolastra: it sounds like you want: 1) git checkout master; 2) git cherry-pick <yourcommit>, repeat for each commit; 3) git checkout feature 4) git rebase master
[16:36:34] <j416> charolastra: that should end you up with just those commits in master, and your feature branch sans those commits.
[16:36:50] <charolastra> excellt, i'll try that :)
[16:36:53] <ikke> adlternative: why do you assume git@vger.kernel.org is the reason?
[16:37:03] <ikke> for all you know gmail is blocking e-mails
[16:37:10] <ikke> (I have no idea what the reason is)
[16:38:08] <ikke> I have no issues receiving e-mails from the git mailing list, but I'm not using gmail
[16:38:26] <ikke> maybe gmail bounced e-mails for a while and you were automatically unsubscribed
[16:41:06] *** Quits: humky (~humky@user/humky) (Quit: Leaving)
[16:42:37] <woss[m]> how can i switch a tag or a specific revision on a bare repo?
[16:43:02] <woss[m]> s/a/to/, s/tag or//
[16:43:32] <woss[m]> s/how can i switch a tag or a specific revision on a bare repo?/how can i switch to a specific revision or a tag on a bare repo? /
[16:43:43] <woss[m]> for the branch i found out it looks like this `git symbolic-ref HEAD refs/heads/my-branch`
[16:45:06] <osse> there is no such thing for bare repos because there is no work tree
[16:45:50] <osse> you can make a branch that points to specific revision and then update HEAD to point to that branch
[16:45:50] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[16:46:31] *** Quits: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca) (Quit: Leaving.)
[16:46:43] *** Joins: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca)
[16:47:41] <ikke> adlternative: did you try to subscribe again?
[16:50:22] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 258 seconds)
[16:50:53] <woss[m]> @osse when i clone bare repo and do `git log` i see the commits. so there is no way to switch to a specific commit? even if i would manually changed the HEAD content
[16:51:28] <osse> woss[m]: a clone of a bare repo is not bare
[16:51:32] <osse> use it like normal
[16:51:47] <woss[m]> i meant when i clone a repo AS a bare
[16:51:52] <woss[m]> sorry
[16:52:38] * woss[m] uploaded an image: (105KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/xnmhnaSHGWLxVMjaGsjCBIJX/image.png >
[16:53:22] <osse> you can update HEAD, but that's it
[16:53:36] <osse> because "switch to" is a bit vague in a bare repo
[16:54:06] *** Joins: hackinghorn (~hackingho@user/hackinghorn)
[16:56:07] *** Quits: hornhack (~hackingho@user/hackinghorn) (Ping timeout: 258 seconds)
[16:57:19] <woss[m]> yeah, i got that. been using git for over 13 years and now when i started to dig into the internals and more advanced stuff i realized how powerful this thing is. i never thought about it before, when i used the `most used` day to day commands 🙂
[16:57:36] *** Joins: jwillikers (~jwilliker@2604:2800:2:a406:5684:ab2e:169e:127)
[16:59:07] *** Joins: bloody (~bloody@user/bloody)
[16:59:35] <adlternative> ikke: OK, I’ll go to try subscribe.
[17:00:20] <adlternative> Maybe this is a problem with gmail, I donno
[17:02:13] *** Quits: vlado_ (~vladoski@93-47-225-6.ip114.fastwebnet.it) (Remote host closed the connection)
[17:05:16] *** Joins: kek_ (~kek_@net-2001-067c-10ec-5744-8000-0000-0000-04e9.v6.ethz.ch)
[17:05:17] <kek_> git
[17:05:18] <kek_> hi
[17:05:44] <kek_> so if I pull changes and file foo.txt was changed, how can I diff it to see what actually changed?
[17:05:48] *** Quits: Xenguy (~Xenguy@user/xenguy) (Quit: Leaving)
[17:06:04] *** Joins: Trieste_ (T@user/pilgrim)
[17:06:12] *** Joins: ChmEarl (~chmearl@user/chmearl)
[17:06:20] <osse> git pull will print stuff like  "f6f0c267c6..34eadcb480  master -> master"
[17:06:28] *** Quits: Sazhen86 (~Sazhen86@125-236-239-93.adsl.xtra.co.nz) (Quit: I've gone to sleep...)
[17:06:29] <osse> you can then e.g.  git diff f6f0c267c6 34eadcb480 -- foo.txt
[17:06:40] <osse> or just git log -- foo.txt
[17:06:41] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 264 seconds)
[17:08:10] *** Joins: cousteau (~cousteau@user/cousteau)
[17:08:22] *** Joins: vladoski (~vladoski@2001:b07:add:d406:704f:6a18:b1c4:6e30)
[17:10:12] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[17:10:39] *** Joins: vlado_ (~vladoski@93-47-225-6.ip114.fastwebnet.it)
[17:11:21] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[17:13:10] *** Joins: ozoned (odoood@gateway/vpn/protonvpn/odoood)
[17:13:13] *** Quits: vladoski (~vladoski@2001:b07:add:d406:704f:6a18:b1c4:6e30) (Ping timeout: 252 seconds)
[17:13:38] <cousteau> I'm the only developer in a small project.  I implement features, test them, commit & push them, and await for feedback, so my history is basically a single "linear" master branch.  Should I consider adding each new feature on a separate branch, await for feedback, commit any possible fixes, and merge them to master when they're done?  Or is interleaving new features with fixes to older commits considered acceptable?
[17:15:56] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Ping timeout: 245 seconds)
[17:16:03] *** Quits: bkircher (~bkircher@200116b84646c600f2b6ff3b366cc350.dip.versatel-1u1.de) (Ping timeout: 258 seconds)
[17:16:46] <cousteau> (on second thought, "I just implemented the feature you wanted, feel free to do a git pull and test it" is way easier to explain than "you see, there's a branch called feature123, please fetch it and check it out and if it's OK I'll merge it into master" to a person with little git knowledge)
[17:16:56] *** Joins: spare (~gzxsdvs3n@user/spareproject)
[17:17:54] *** Joins: bkircher (~bkircher@200116b84646c600f2b6ff3b366cc350.dip.versatel-1u1.de)
[17:18:27] *** Quits: lionkor (~lionkor@200116b80fe170007285c2fffea63d72.dip.versatel-1u1.de) (Remote host closed the connection)
[17:18:50] *** Joins: lionkor (~lionkor@200116b80fe17000764f18832140df39.dip.versatel-1u1.de)
[17:23:52] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:7d1f:4249:e36f:c9c2)
[17:26:48] *** Joins: humky (~humky@user/humky)
[17:27:56] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[17:28:10] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:7d1f:4249:e36f:c9c2) (Client Quit)
[17:28:40] *** Joins: rgrinberg (~textual@ip235-44-15-186.ct.co.cr)
[17:30:22] *** Quits: vlado_ (~vladoski@93-47-225-6.ip114.fastwebnet.it) (Read error: Connection reset by peer)
[17:31:09] *** Joins: vladoski (~vladoski@2001:b07:add:d406:7a31:77d6:c6b0:2247)
[17:31:35] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[17:31:48] *** Joins: pycurious (~Adium@user/pycurious)
[17:32:22] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 260 seconds)
[17:33:18] *** Quits: marw (4988ea31b1@knopi.disroot.org) (Remote host closed the connection)
[17:34:53] *** Joins: pyeverything (~pyeveryth@BUMC-dot1x-155-41-222-209.bumc.bu.edu)
[17:36:22] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 258 seconds)
[17:37:11] *** Joins: thebombzen (~thebombze@c-68-41-54-207.hsd1.mi.comcast.net)
[17:37:27] <thebombzen> Is there a way to remove a commit from history when you revert it?
[17:37:40] <thebombzen> git revert HASH just creates another commit
[17:38:33] <bookworm> thebombzen: rebase -i
[17:38:37] <bookworm> !rewrite
[17:38:37] <gitinfo> Rewriting public history is not recommended. Everyone who has pulled the old history will have to do work (and you'll have to tell them to), so it's infinitely better to just move on. If you must, you can use `git push --force-with-lease <remote> <branch>` to force (and the remote may reject that, anyway). See http://goo.gl/waqum
[17:38:39] <thebombzen> non-interactively
[17:39:05] <thebombzen> I'm using github pages to serve some images, but only temporarily, and I don't want the images forever in the git repo history cause it will bog stuff down
[17:39:11] <thebombzen> that's the motivation
[17:39:24] <bookworm> just serve them in a pastebin then
[17:39:38] *** Quits: adlternative (~adl@117.32.216.71) (Remote host closed the connection)
[17:39:40] <bookworm> github pages really isn't meant for that
[17:40:01] <thebombzen> most paste services reject requests send through a browser
[17:40:31] <bookworm> hm?
[17:40:40] *** Joins: odoood__ (~odoood@2601:c8:c003:a550::3)
[17:40:43] *** Quits: odoood__ (~odoood@2601:c8:c003:a550::3) (Remote host closed the connection)
[17:42:24] <thebombzen> well, essentially, I want a temporary upload location in a browser. my current solution is a minimal HTTP server instance that takes the requests and forwards them to a paste service via CGI. this risks getting me IP banned tho
[17:42:42] <thebombzen> but I don't really have the desire to manage hosting them myself
[17:43:01] <thebombzen> I was thinking githup pages could be that host, but then I ran into the commit history issue
[17:43:25] <thebombzen> I was wondering if I could non-interactively remove a specific hash
[17:43:28] *** Quits: yuljk (~yuljk@86.11.178.103) (Ping timeout: 252 seconds)
[17:43:35] *** Quits: ozoned (odoood@gateway/vpn/protonvpn/odoood) (Ping timeout: 264 seconds)
[17:44:01] <bookworm> very likely, though I don't know how, never had to do that as it isn't something I need to do often
[17:44:13] <osse> if there's only one branch to consider:  GIT_EDITOR=true git rebase --onto=hash~1 hash
[17:44:48] *** Quits: alkino (~quassel@user/alkino) (Ping timeout: 258 seconds)
[17:44:49] *** Joins: adlternative (~adl@117.32.216.71)
[17:44:52] <thebombzen> the hash might not necessarily be HEAD~1, is that still going to work in that case?
[17:45:00] <thebombzen> or HEAD
[17:45:15] *** Joins: alkino (~quassel@user/alkino)
[17:45:23] <osse> yes
[17:45:53] <osse> but I don't think it will work if hash is HEAD. not completely sure.
[17:46:02] <osse> but in that case you can reset HEAD~
[17:46:18] <cousteau> thebombzen: if it's the last commit, it's easy.  If not, rebase; but be aware of the consequences if you're pushing somewhere
[17:47:00] <thebombzen> yea, I'm aware of all the badness that comes with rewriting history and forcepush. it's not a collaborative project per se, I'm only using git cause that's how you put something on github pages. see up.
[17:47:18] <cousteau> Yeah in that case there should be no issue
[17:47:29] *** Joins: meator (~meator@user/meator)
[17:48:01] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 245 seconds)
[17:48:34] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[17:48:34] *** Quits: chexum (~quassel@gateway/tor-sasl/chexum) (Remote host closed the connection)
[17:48:54] <cousteau> Although since I'm kinda superstitious with rewriting history, I'd normally just do a git revert, even if that means having two extra commits
[17:48:54] *** Joins: chexum (~quassel@gateway/tor-sasl/chexum)
[17:49:02] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[17:49:42] <cousteau> Gotta need to have a better look at your specific use case though, let me have a look at what you wrote...
[17:51:33] <cousteau> ...ok done.  Honestly I don't know if using GitHub pages as a hosting service is a good idea, but yeah if you want to rebase non-interactively, it can be done
[17:52:31] *** Quits: zulutango (~zulutango@static-n58-105-160-58.mas4.nsw.optusnet.com.au) (Remote host closed the connection)
[17:52:57] *** Joins: zulutango (~zulutango@static-n58-105-160-58.mas4.nsw.optusnet.com.au)
[17:53:22] *** Quits: kek_ (~kek_@net-2001-067c-10ec-5744-8000-0000-0000-04e9.v6.ethz.ch) (Quit: Leaving)
[17:54:44] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Read error: No route to host)
[17:55:00] *** Joins: zebrag (~chris@user/zebrag)
[17:56:31] *** Joins: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com)
[18:01:36] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:01:49] *** Quits: vladoski (~vladoski@2001:b07:add:d406:7a31:77d6:c6b0:2247) (Remote host closed the connection)
[18:03:03] *** Joins: vladoski (~vladoski@2001:b07:add:d406:7a31:77d6:c6b0:2247)
[18:03:05] *** Quits: enyc (~enyc@user/enyc) (Ping timeout: 246 seconds)
[18:03:23] *** Quits: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au) (Ping timeout: 264 seconds)
[18:13:50] *** Joins: ArtVandelayer (~ArtVandel@ip174-68-147-20.lv.lv.cox.net)
[18:20:49] *** Joins: thiago (~thiago@2601:1c0:4501:635c:d51:5f6f:4b21:e23e)
[18:24:32] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[18:24:33] *** Quits: pyeverything (~pyeveryth@BUMC-dot1x-155-41-222-209.bumc.bu.edu) (Remote host closed the connection)
[18:25:17] *** Joins: Ilyu (~quassel@78.202.228.230)
[18:32:31] *** Joins: Guest40 (~Guest40@187.61.239.232)
[18:33:10] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[18:33:23] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[18:34:27] *** Joins: gast0n (~g4570n@user/gast0n)
[18:36:21] <thebombzen> I have my GPG signing key set in my global config with git config --global user.signingKey KEY_ID
[18:36:31] <thebombzen> I'd like to remove that signing key for a particular local repo, so they're unsigned
[18:36:57] <thebombzen> I've already changed user.name and user.email locally with --local but git still tries to sign my commits
[18:37:23] <thebombzen> setting it to the empty string also failed, it caused gpg to whine
[18:37:27] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[18:37:53] <thebombzen> Is there a way to unset the signing key on a local basis
[18:38:05] <imMute> set the commit.gpgsign config to false
[18:38:47] <thebombzen> I suppose that does what I want
[18:40:39] *** Joins: ravan (~ravan@user/ravan)
[18:41:54] *** Quits: masber (~masber@2001:620:808:1001::28f7) (Quit: Client closed)
[18:43:04] *** Joins: pyeverything (~pyeveryth@204.8.153.35)
[18:43:59] <imMute> you want to turn off gpg signing, that's waht that config option controls.
[18:47:47] *** Quits: pyeverything (~pyeveryth@204.8.153.35) (Ping timeout: 264 seconds)
[18:48:15] *** Joins: yuljk (~yuljk@86.11.178.103)
[18:52:50] *** Quits: madewokherd (~urk@75-168-202-251.mpls.qwest.net) (Quit: If your computer stops responding for a long time, turn it off and then back on.)
[18:55:31] *** Quits: coot (~coot@37.30.48.91.nat.umts.dynamic.t-mobile.pl) (Quit: coot)
[18:56:05] *** Quits: cousteau (~cousteau@user/cousteau) (Quit: Quit)
[18:56:37] *** Quits: rewt (~default@user/rewt) (Killed (NickServ (GHOST command used by rewt__)))
[18:56:52] *** Joins: rewt (~default@user/rewt)
[18:56:57] *** Joins: zmt00 (~zmt00@user/zmt00)
[18:57:28] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Ping timeout: 265 seconds)
[18:57:46] *** Quits: Guest40 (~Guest40@187.61.239.232) (Quit: Client closed)
[18:58:24] *** Quits: adlternative (~adl@117.32.216.71) (Ping timeout: 258 seconds)
[19:00:26] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[19:02:30] *** Joins: sniperwolf (~sniperwol@91.230.98.1)
[19:02:46] *** Quits: rfuentess (~rfuentess@static-5-51-117-151.ftth.abo.bbox.fr) (Remote host closed the connection)
[19:06:21] <elibrokeit> thebombzen: if you are using GitHub pages and don't want history to bulk up, just treat it as completely temporary... Then just re-init the repo and force push a single root commit every time you update
[19:08:22] *** Quits: jwillikers (~jwilliker@2604:2800:2:a406:5684:ab2e:169e:127) (Remote host closed the connection)
[19:08:25] *** Joins: teut (~teut@182.68.178.118)
[19:12:24] <thebombzen> elibrokeit: if I'm storing images for 24 hours, that requires me to re-upload every image any time any new image is sent to be uploaded
[19:12:27] <thebombzen> which is not ideal
[19:12:36] <ikke> That's not a usecase for git
[19:12:49] <thebombzen> indeed, it is not.
[19:12:53] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[19:13:00] <thebombzen> I'm only using git because I'm using github pages as a storage location, hence the question.
[19:13:13] <ikke> still, this is not a usecase for git
[19:13:26] <thebombzen> well call up github pages and tell them to allow me to use something else and we'll be good
[19:13:30] <ikke> gitub pasges is for static site hosting
[19:13:38] <ikke> images that automatically disappear is dynamic content
[19:13:49] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[19:13:51] <thebombzen> indeed, would you like to donate to my kickstarter to fund a VPS
[19:14:33] <thebombzen> I'm a broke student with no money
[19:14:49] <ikke> Then you have to do with means that you have
[19:15:00] <ikke> and accept that the situation is not ideal
[19:15:08] <thebombzen> that is literally what I am doing
[19:15:40] <ikke> Yes, but you complain that it's difficult to get dynamic behavior for a static page host
[19:15:47] <thebombzen> I'm not complaining, I'm asking how to do it.
[19:15:55] <ikke> By rewriting history
[19:16:10] <ikke> Like you've been told
[19:16:10] <thebombzen> you're now like the third person who has barged in and told me "don't do that" without reading the original conversation. we've been over *all* of this already
[19:16:27] <ikke> I have read it. You started by asking how to delete comits by reverting
[19:16:56] <ikke> Firstly, you cannot delete remote content, only make it unreachable
[19:17:19] <thebombzen> removing the commit and force pushing won't do that?
[19:17:24] <ikke> chance is that even if you push rewritten history that no longer refers to that image, it's still available on github for some time
[19:17:41] <ikke> No, the commit is still there until github decides to garbage collect it
[19:18:02] <thebombzen> oh, they're not security-sensitive images. I don't care if someone somewhere saves it somwhere. I just don't want or need them around forever cause that will bog down cloning the repo and the like
[19:18:15] *** Joins: durham (~durham@2600:1700:38d4:60:c3c:5bfc:8cac:a0ac)
[19:18:18] <thebombzen> if it takes github some time to GC them I'm totally okay with that
[19:18:20] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 258 seconds)
[19:18:53] *** Joins: madewokherd (~urk@comcast.codeweavers.com)
[19:19:01] <ikke> Then rewrite the commit to remove the images you don't want anymore and add new ones and force push that
[19:19:28] <thebombzen> I don't see how that's functionally better than the rebase solution I was provided
[19:19:36] *** Quits: durham (~durham@2600:1700:38d4:60:c3c:5bfc:8cac:a0ac) (Remote host closed the connection)
[19:19:43] <ikke> git rebase is a way to rewrite commits
[19:19:50] <thebombzen> or remove them
[19:19:54] <ikke> yes
[19:20:08] <ikke> How you rewrite history does not matter that much
[19:20:12] *** Joins: durham (~durham@163.114.132.5)
[19:20:16] <ikke> as long as you make sure the images are not references anymore
[19:20:17] <thebombzen> like, I was already granted a solution to this problem, namely GIT_EDITOR=true git rebase --onto=hash~1 hash
[19:20:42] <thebombzen> is there some specific reason this is a bad idea that your solution about rewriting the single commit is not?
[19:20:59] <ikke> hmm, that sounds like a noop operation to me
[19:21:08] <ikke> rebase the current commit onto it's parent
[19:21:16] <thebombzen> that operation does work, I tried it
[19:21:17] *** Quits: Ilyu (~quassel@78.202.228.230) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:21:19] <ikke> or, the referred commit
[19:21:56] *** Joins: eduard (~eduard@p200300fbef0b500080a91bfb4631b6c1.dip0.t-ipconnect.de)
[19:21:57] <thebombzen> if you run git rebase --onto=hash~1 hash by itself, then it will just pull up a rebase editor with one line, namely the commit. deleting the line will remove the commit
[19:22:12] <thebombzen> and /usr/bin/true always succeeds and returns no output
[19:22:29] <thebombzen> so the key here is GIT_EDITOR=true
[19:22:37] <elibrokeit> thebombzen: re initing will cause an entirely new root tree node, but all the.files are identical, so they use the same object nodes, and.tje git remote will advertise that it doesn't need those objects.
[19:23:15] <thebombzen> elibrokeit: ah, okay. how do you git re-init without removing all the objects then?
[19:23:16] <ikke> elibrokeit: not if the branches have unrelated history
[19:23:27] <thebombzen> there's not going to be unrelated history for my specific use case
[19:23:36] <elibrokeit> Alternatively, you can of course create a git repo with one commit: "upload files to GitHub pages", and every time you update the pages site, do it by git commit --amend. Still exactly one commit at all times, no history at all.
[19:23:51] *** Quits: dermoth (~dermoth@dsl-66-36-141-108.mtl.aei.ca) (Ping timeout: 245 seconds)
[19:24:07] <thebombzen> huh. and does git pushing do that object optimization you mentioned earlier?
[19:24:18] <elibrokeit> ikke: what do "branches" have to do with a one-branch, one-commit-on-that-branch repo that exists for deployment bookkeeping
[19:24:30] <thebombzen> yea, this is not code. there's no reason to have branches
[19:24:42] <ikke> elibrokeit: you mention reinitializing the repo
[19:25:09] <elibrokeit> ikke: Because people are silly sometimes and may mess up --amend
[19:25:25] <elibrokeit> It's a sure-fire way to guarantee that the root commit is the only commit
[19:25:34] <ikke> right, but if you start from clean history, the branches are unrelated (no common commits)
[19:25:37] <ikke> so git will just push everything
[19:25:54] <ikke> even if the remote already has some of the objects
[19:25:56] <elibrokeit> And same thing if you amend the root commit and still start with clean history
[19:26:04] <elibrokeit> Huh? That's silly
[19:26:04] <ikke> yes
[19:26:18] <ikke> the protocol only advertises refs
[19:26:33] <ikke> it does not negotiate every single object
[19:27:03] <elibrokeit> Okay then, there's absolutely no way to avoid re-uploading all content each time I guess.
[19:27:19] <elibrokeit> You'd need to do that with ftp uploads too, often enough :D
[19:27:48] <elibrokeit> https://srht.site doesn't use backing repos in git, and just has you upload your site tarball
[19:28:04] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[19:28:11] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[19:28:52] <eduard> Hi. I used a github project as a submodule in my repo which is on a private gitlab instance. I now wanted to fork this subrepro to make local changes to it. For this reason, i cloned the github project into a new repo on my gitlab server. I have updated the repo URL in my .gitmodules file accordingly, but this seems to have broken the submodule. If
[19:28:53] <eduard> i run 'git submodule update', I get the error message "fatal: remote error: upload-pack: not our ref ...". How can I fix this? It seems the .git/config file still points to the github URL
[19:29:43] <imMute> eduard: git submodule sync    IIRC.  that updates the .git/config with the URL from the .gitmodules
[19:30:00] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[19:31:35] <eduard> imMute: thanks, that seems to have fixed it
[19:31:54] *** Quits: teut (~teut@182.68.178.118) (Quit: Client closed)
[19:36:07] <thebombzen> elibrokeit: what about the rebase solution, does that avoid it?
[19:36:23] *** Joins: dermoth (~dermoth@dsl-66-36-157-168.mtl.aei.ca)
[19:36:28] <thebombzen> commit hashes should be unmodified for the other ones, iirc
[19:37:38] <elibrokeit> No, rebase will apparently cause all rebased commits to be fully re-uploaded.
[19:38:14] *** Quits: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net) (Quit: WeeChat 3.3)
[19:38:19] *** Quits: cambrian_invader (~cambrian_@50-195-82-171-static.hfc.comcastbusiness.net) (Read error: Connection reset by peer)
[19:38:38] *** Joins: cambrian_invader (~cambrian_@50-195-82-171-static.hfc.comcastbusiness.net)
[19:38:44] <elibrokeit> But you'll avoid the network bandwidth incurred by commits you haven't changed/rebased.
[19:38:54] <ikke> Not entirely, only new objects added in the commits that have been rewritten
[19:39:39] *** Joins: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net)
[19:39:54] *** Quits: The_Jag_ (~The_Jag@host-80-183-32-131.business.telecomitalia.it) (Read error: Connection reset by peer)
[19:40:26] *** Joins: The_Jag (~The_Jag@host-80-183-32-131.business.telecomitalia.it)
[19:40:54] *** Quits: The_Jag (~The_Jag@host-80-183-32-131.business.telecomitalia.it) (Read error: Connection reset by peer)
[19:41:31] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[19:41:37] <elibrokeit> i.e. the delta of the rewritten commit -- everything that would have been uploaded the first time you pushed that commit (before rewriting it)
[19:42:21] *** Joins: The_Jag (~The_Jag@host-80-183-32-131.pool80183.interbusiness.it)
[19:43:00] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[19:44:20] *** Lord_of_Life_ is now known as Lord_of_Life
[19:44:53] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[19:45:53] *** Quits: eduard (~eduard@p200300fbef0b500080a91bfb4631b6c1.dip0.t-ipconnect.de) (Quit: Client closed)
[19:46:37] *** Joins: emf (~emf@2620:10d:c090:400::5:75e7)
[19:47:08] *** Joins: teut (~teut@182.68.178.118)
[19:52:38] *** _subopt is now known as subopt
[19:53:19] *** Joins: DoofusCanadensis (~DoofusCan@207.229.38.10)
[19:54:14] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 260 seconds)
[19:55:08] *** Quits: vladoski (~vladoski@2001:b07:add:d406:7a31:77d6:c6b0:2247) (Remote host closed the connection)
[19:55:10] *** Quits: yuljk (~yuljk@86.11.178.103) (Ping timeout: 260 seconds)
[20:01:27] *** Quits: remyabel (remyabel@user/remyabel) (Quit: WeeChat 3.2)
[20:09:45] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:16:53] *** Joins: yuljk (~yuljk@86.11.178.103)
[20:19:42] *** Joins: hbautista (~hbautista@187.171.117.35)
[20:20:28] *** Joins: Jong (~Jong@2620:10d:c090:400::5:fbf2)
[20:27:22] *** Quits: theoceaniscool (~theoceani@119.12.232.133) (Ping timeout: 260 seconds)
[20:28:53] *** Quits: relipse (sid16131@tinside.irccloud.com) ()
[20:29:06] *** Joins: relipse (sid16131@id-16131.tinside.irccloud.com)
[20:31:48] *** Joins: mrcrypto (uid521271@id-521271.helmsley.irccloud.com)
[20:33:24] *** Joins: coot (~coot@37.30.48.91.nat.umts.dynamic.t-mobile.pl)
[20:40:10] *** Quits: coot (~coot@37.30.48.91.nat.umts.dynamic.t-mobile.pl) (Remote host closed the connection)
[20:45:07] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:7d1f:4249:e36f:c9c2)
[20:46:07] *** Quits: yuljk (~yuljk@86.11.178.103) (Ping timeout: 258 seconds)
[20:49:19] *** Joins: euouae (~euouae@user/euouae)
[20:49:34] <euouae> Hello when I'm submitting a patch to a mailing list, how should it be done?
[20:49:42] <woss[m]> How important is the `.git/logs` folder for the repository. Can it be deleted?
[20:49:51] <euouae> Does it matter if I sign my commits in my git repo? signatures are not shown in the patch right?
[20:50:36] <euouae> woss[m] https://git-scm.com/book/en/v2/Git-Internals-Maintenance-and-Data-Recovery
[20:50:38] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:7d1f:4249:e36f:c9c2) (Quit: Client closed)
[20:50:53] <ikke> euouae: gpg signatures are not important at all
[20:51:13] <euouae> ikke, what do you mean?
[20:51:57] <ikke> gpg signatures don't matter for the git project. They don't care who you are, they care about the changes
[20:52:18] <ikke> A sign-off-by is required
[20:52:51] <euouae> so what you're saying is that the maintainer /might/ sign it, but not the author?
[20:53:09] <woss[m]> euouae: Oh perfect. Thanks. In my case it's safe to delete it
[20:54:07] <ikke> euouae: the maintainer only signs tags, not commits
[20:57:02] <euouae> ikke got it. Just submit the diff patch then right? thanks
[20:57:47] *** Joins: coot (~coot@37.30.48.91.nat.umts.dynamic.t-mobile.pl)
[20:58:43] <ikke> with a signed-off-by
[20:59:04] <ikke> https://github.com/git/git/blob/master/Documentation/MyFirstContribution.txt
[20:59:11] <ikke> https://github.com/git/git/blob/master/Documentation/SubmittingPatches
[21:00:04] <euouae> Great, thanks for the info
[21:00:53] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[21:02:31] *** Quits: deepy (deepy@user/deepy) (Quit: meow)
[21:03:02] *** Joins: deepy (deepy@user/deepy)
[21:03:24] *** Quits: coot (~coot@37.30.48.91.nat.umts.dynamic.t-mobile.pl) (Quit: coot)
[21:04:26] *** Joins: coot (~coot@37.30.48.91.nat.umts.dynamic.t-mobile.pl)
[21:10:32] *** Joins: CrniPjotr[m] (~blackpjot@2001:470:69fc:105::b3dd)
[21:12:29] *** Joins: yuljk (~yuljk@86.11.178.103)
[21:15:22] *** Quits: furrymcgee (~devuan@cgn-89-1-209-32.nc.de) (Quit: leaving)
[21:17:53] *** Quits: Portugol9 (~Portugol9@user/portugol9) (Read error: Connection reset by peer)
[21:18:13] *** gordonfish- is now known as gordonfish
[21:19:37] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[21:19:46] *** Joins: Portugol9 (~Portugol9@user/portugol9)
[21:25:17] *** Joins: brianward (~brianward@174-21-4-6.tukw.qwest.net)
[21:28:51] *** Quits: yuljk (~yuljk@86.11.178.103) (Ping timeout: 245 seconds)
[21:33:11] *** Quits: elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz) (Quit: A random quit message)
[21:33:24] *** Joins: elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz)
[21:35:00] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[21:37:00] *** Joins: bloody (~bloody@user/bloody)
[21:39:18] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[21:40:35] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: No Ping reply in 180 seconds.)
[21:42:18] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:46:22] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:49:24] <linguist> ikke, I didn't see in time and adlternative is no longer here, but I then decided to use NNTP for that. I'm just not sure yet I can post to the list this way, but the moment I need to send something I'll know
[21:49:47] <ikke> linguist: you do not need to be subscribed to send to the mailing list
[21:51:04] <linguist> Ohhh, thanks, I guess NNTP is an excellent alternative for those using services like gmail
[21:51:30] *** Parts: euouae (~euouae@user/euouae) ( )
[21:51:41] *** Quits: SuperLag (~akulbe@user/superlag) (Ping timeout: 264 seconds)
[21:53:15] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:53:18] *** Joins: SuperLag (~akulbe@user/superlag)
[21:54:23] *** Quits: saroy (~Sandipan@45.249.73.204) (Ping timeout: 264 seconds)
[21:55:30] *** Quits: cronos (~cronos@user/cronos) (Quit: ZNC - https://znc.in)
[21:57:52] *** Joins: cronos (~cronos@user/cronos)
[21:57:59] *** Quits: SuperLag (~akulbe@user/superlag) (Ping timeout: 264 seconds)
[22:01:34] *** ndimitrij is now known as ndim
[22:02:26] <relipse> Hi, I have about 30 directories that all need to be version controlled, if i do a git init in each directory then git add all the files necessary , then i can add a remote to push it to github or bitbucket right?
[22:03:02] *** Quits: lgc (~lgc@user/lgc) (Quit: WeeChat 3.2-dev)
[22:03:30] <rewt> yes
[22:03:35] *** Parts: Activ8 (~Activ8@user/aab/x-3846634) (The Lounge - https://thelounge.chat)
[22:03:47] *** Joins: SuperLag (~akulbe@user/superlag)
[22:04:04] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:7d1f:4249:e36f:c9c2)
[22:06:33] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:7d1f:4249:e36f:c9c2) (Client Quit)
[22:16:02] <relipse> is there any risk in doing git init and git add (a bunch of files) in a web directory?
[22:16:13] <relipse> and an initial commit
[22:18:23] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 264 seconds)
[22:19:38] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:19:47] *** Joins: yuljk (~yuljk@86.11.178.103)
[22:20:01] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Read error: Connection reset by peer)
[22:24:19] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:25:01] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[22:25:35] <nedbat> relipse: the only risk is that you will commit files you didn't want to commit.
[22:25:58] <j416> relipse: if you do git init in each directory, you will end up with 30 repos, each of which you would have to create a repo for on your host (github, or what have you) and each of which you would have to add that remote to.
[22:26:03] <j416> relipse: just, to make that clear.
[22:27:00] <relipse> does it matter what user I run git init as?
[22:27:08] <relipse> like root?
[22:27:10] <j416> relipse: also, not sure what you mean by "web directory", but if there's a risk you're exposing that directory to the internet, there's of course the risk that someone is able to get their hands on that and with that all of your history
[22:27:18] <j416> relipse: git doesn't care
[22:27:19] *** Joins: bambanxx (~bambanx@181-163-39-75.baf.movistar.cl)
[22:27:26] <j416> relipse: of course you'll need read/write access.
[22:27:55] <relipse> ok so it seems that i ought to init the repo one dir up, where public_html is below
[22:28:05] <relipse> so web cannot access .git
[22:28:15] <j416> or perhaps avoid having a repo on the server altogether
[22:32:06] <relipse> but that is where the latest code is
[22:32:30] <relipse> it's not going to hurt anything right?
[22:32:44] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[22:33:04] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[22:34:40] *** Quits: Linkandzelda (~Linkandze@cloudirc.laz.li) (Quit: Cya)
[22:38:13] *** Quits: utis (~utis@84.208.165.160) (Ping timeout: 252 seconds)
[22:40:07] *** Quits: mrcrypto (uid521271@id-521271.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[22:40:10] *** Joins: utis (~utis@vpn-client338.uio.no)
[22:42:18] *** Quits: rond_ (~rond_@2a02:a31a:a23c:f480:2fd7:e087:5546:a438) (Quit: Client closed)
[22:48:14] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:49:14] <j416> short answer is no (not if you do it right), but if it's a production server and you're unsure, I'd make sure I had a backup.
[22:51:44] *** Parts: ash_worksi (~ash_m@user/ash-m/x-3292451) ()
[22:53:34] <mackerman> git is not required to deploy a release to a host.  There are other ways of doing package management type tasks.
[22:55:09] <relipse> how do I create an organization and create private repos and allow private forks and code reviews?
[22:56:55] <mackerman> Design your processes and pick your tools to do so.  git  doesn't define a workflow to use.
[22:57:34] <mackerman> Also just git doesn't have concepts of  organization,  forks, and review processes.  Usually that's some  forge software on top.
[22:57:53] *** Joins: pyeverything (~pyeveryth@204.8.153.35)
[22:57:59] <DoofusCanadensis> those are questions for #github, really
[22:58:17] <DoofusCanadensis> git is the tool, github is the service
[22:58:29] <mackerman> Or #gitlab   there are a couple options
[23:01:28] *** Joins: ZacSharp (~ZacSharp@user/zacsharp)
[23:02:47] *** Quits: pyeverything (~pyeveryth@204.8.153.35) (Ping timeout: 264 seconds)
[23:03:50] <DoofusCanadensis> point. I do find that most people asking about organizations and such are here because they think git is github
[23:04:41] <mackerman> I prefer not to conflate git and GitHub, nor assume forges in general means GitHub.
[23:10:46] <relipse> what about bitbucket?
[23:11:15] <mackerman> Use what you want to, lots of git hosting options exist:  https://git.wiki.kernel.org/index.php/GitHosting
[23:11:39] <DoofusCanadensis> plenty of services, yes
[23:12:01] <DoofusCanadensis> bitbucket is fun because it started as a mercurial hosting service and now is a git hosting service
[23:12:14] <relipse> because hg is dead
[23:12:16] <relipse> lol
[23:12:19] <relipse> i used it when it was hg
[23:12:47] <DoofusCanadensis> I could never quite get hg. git made more sense to me.
[23:13:01] <relipse> hg was pretty cool
[23:20:02] *** Quits: yeirr (~yeirr@user/yeirr) (Remote host closed the connection)
[23:21:59] <elibrokeit> the one and only time I tried to submit a patch to an hg project, I could not figure out the equivalent of rebasing onto the version which was merged upstream. So I did https://xkcd.com/1597/ and deleted, then recloned the hg repo afresh and committed on top of that
[23:22:11] <elibrokeit> I've never needed to do !xkcd git, for actual git lol
[23:26:02] *** Joins: pycurious (~Adium@user/pycurious)
[23:28:47] *** Quits: teut (~teut@182.68.178.118) (Quit: Client closed)
[23:33:51] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[23:34:01] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 258 seconds)
[23:35:39] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[23:39:21] *** Quits: sniperwolf (~sniperwol@91.230.98.1) (Ping timeout: 256 seconds)
[23:39:29] *** Quits: coot (~coot@37.30.48.91.nat.umts.dynamic.t-mobile.pl) (Quit: coot)
[23:39:48] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[23:40:04] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[23:40:21] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[23:41:06] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[23:41:12] *** Joins: emf_ (~emf@2620:10d:c090:400::5:a662)
[23:42:56] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[23:43:57] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[23:44:11] *** Quits: emf (~emf@2620:10d:c090:400::5:75e7) (Ping timeout: 264 seconds)
[23:44:12] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[23:45:16] *** Joins: theoceaniscool (~theoceani@119.12.232.133)
[23:52:33] *** Joins: Vonter_ (~Vonter@user/vonter)
[23:57:01] *** Quits: Vonter_ (~Vonter@user/vonter) (Ping timeout: 258 seconds)
[23:59:00] *** Joins: Betal (~Betal@user/betal)
[23:59:04] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[23:59:26] *** Joins: bloody (~bloody@user/bloody)
[23:59:41] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
