[00:09:43] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[00:15:58] <FromDiscord> <lakmatiol> sent a code paste, see https://play.nim-lang.org/#ix=3NOh
[00:16:13] <FromDiscord> <lakmatiol>  https://media.discordapp.net/attachments/371759389889003532/936723863138607146/unknown.png
[00:17:13] <FromDiscord> <xx_ns> @lakmatiol wait, I know you...
[00:17:15] <FromDiscord> <xx_ns> pydis?
[00:17:54] <FromDiscord> <lakmatiol> ye, I spend a lot of time on pydis
[00:19:40] <FromDiscord> <Elegantbeef> newlining `ref object` is one issue
[00:19:40] <FromDiscord> <Elegantbeef> but there is another issue
[00:20:02] <FromDiscord> <Elegantbeef> That issue is a compiler bug causing a seg fault
[00:23:10] <FromDiscord> <Elegantbeef> Ah seems `SomeInteger` works so `enum` causes the segfault
[00:23:20] <FromDiscord> <noow> can I know whether  -d:debug or -d:release/danger was used for compiling a piece of nim code from within the code?
[00:23:22] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3NOm
[00:23:39] <FromDiscord> <noow> is there a `when danger:` or something
[00:23:50] <FromDiscord> <Elegantbeef> `when defined(danger)`
[00:23:58] <FromDiscord> <noow> ah ok thank
[00:36:39] *** Quits: neceve (~quassel@2.26.93.228) (Read error: Connection reset by peer)
[00:44:06] <FromDiscord> <mratsim> In reply to @Waldecir Santos "Can some one explain": because nim string formatting predates Python
[00:44:33] <FromDiscord> <Elegantbeef> Also Nim isnt python 😛
[00:48:35] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:49:18] <FromDiscord> <xx_ns> it's fairly easy to get nim to do f-string style formatting as well
[00:49:26] <FromDiscord> <xx_ns> power of metaprogramming baby
[00:54:10] <FromDiscord> <Waldecir Santos> Yeah my question is more about why `&` that's all
[00:54:19] <FromDiscord> <Waldecir Santos> (edit) "is" => "was"
[00:54:56] <FromDiscord> <Elegantbeef> well there is `fmt` aswell
[00:58:10] <FromDiscord> <dom96> !eval import strformat; echo fmt"foo\tbar"; echo &"foo\tbar"
[00:58:14] <NimBot> foo\tbar↵foo	bar
[00:58:19] <FromDiscord> <dom96> that's why
[00:58:56] <FromDiscord> <Patitotective> `!eval` should support fenced code blocks
[00:59:08] <FromDiscord> <Elegantbeef> It's on IRC so it cannot support much
[00:59:28] <FromDiscord> <dom96> PRs welcome 😄
[01:04:09] <FromDiscord> <Patitotective> !eval↵echo "hello"↵echo "world"
[01:05:16] <FromDiscord> <Patitotective> There is no a bot-test channel?
[01:12:25] <FromDiscord> <Patitotective> I'm trying to understand _nimbot_'s code so I'm looking at https://github.com/nim-lang/irc but it seems to have no docs, is there a reason for that? I mean, I see there are documentation comments. Should I open a PR adding the docs?
[01:12:44] <FromDiscord> <Patitotective> I mean, an actual website
[01:13:44] <FromDiscord> <Patitotective> (edit) "a PR adding" => "an issue/PR to add"
[01:20:56] *** Quits: mahlon (~mahlon@martini.nu) (Ping timeout: 250 seconds)
[01:32:21] <FromDiscord> <Patitotective> https://github.com/nim-lang/irc/pull/24
[01:32:23] <FromDiscord> <Patitotective> 🙃
[01:43:07] <FromDiscord> <Rainbow Asteroids> does anyone know how to get the channel permissions of an author of a message in dimscord?
[01:49:45] <FromDiscord> <dom96> generated docs don't belong inside the repo
[01:52:48] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:f537:af82:4a8:f904)
[01:54:37] <FromDiscord> <treeform> In reply to @Patitotective "I'm trying to understand": here are docs https://nimdocs.com/nim-lang/irc/irc.html 🙂
[01:56:43] <FromDiscord> <dom96> In reply to @treeform "here are docs https://nimdocs.com/nim-lang/irc/irc.": Nice! I keep trying to use nimble.directory for docs but it rarely seems to work :/ https://nimble.directory/docs/irc//irc.html
[01:57:20] <FromDiscord> <treeform> probably just a bug in nimble directory
[01:57:42] <FromDiscord> <treeform> I only do docs for a few authors
[02:24:04] <FromDiscord> <Patitotective> In reply to @treeform "here are docs https://nimdocs.com/nim-lang/irc/irc.": I didn't know that existed :O
[02:30:29] <FromDiscord> <eyecon> In reply to @Rainbow Asteroids "does anyone know how": Looks like it could be msg.member.permissions but I didn't test it
[02:30:37] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[02:31:19] <FromDiscord> <Rainbow Asteroids> Message.member.permissions leads to an empty set, no matter the author
[02:34:14] <FromDiscord> <eyecon> You might need to get permission for some actions, I think you specify them when inviting the bot with OAuth, and when setting up the bot you have to specify to use that permission
[02:34:27] <FromDiscord> <eyecon> But it is just a speculation, ping the author maybe
[02:36:01] <FromDiscord> <eyecon> They are called `Intents` apparently
[02:37:46] <FromDiscord> <eyecon>  https://media.discordapp.net/attachments/371759389889003532/936759484632694824/unknown.png
[02:40:08] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:11:48] *** Joins: mahlon (~mahlon@martini.nu)
[03:19:57] <FromDiscord> <Patitotective> sent a code paste, see https://play.nim-lang.org/#ix=3NP2
[03:20:08] <FromDiscord> <Patitotective> (edit) "https://play.nim-lang.org/#ix=3NP4" => "https://play.nim-lang.org/#ix=3NP3"
[03:23:21] <anddam> howdy, is there a multi-platform nim desktop GUI framework, possibly using web rendering engine?
[03:23:37] <anddam> something akin to https://github.com/fschutt/azul that I stumbled upon and looks real nice
[03:25:56] <FromDiscord> <Elegantbeef> There are multiple of webview wrappers, not exactly what you're after i guess though
[03:28:04] <anddam> jeez I cannot tab-complete nick from discord…
[03:28:19] <FromDiscord> <Elegantbeef> Even worse is i'm not on discord 😛
[03:29:55] <anddam> Elegantbeef: mostly I need (e.g. "would like") to write multi-platform win/mac/lin GUI app, possibly with a compact framework for the GUI and that is portable (or rather not platform-specific, hence the CSS / quasi-HTML request)
[03:31:18] <FromDiscord> <Elegantbeef> https://github.com/marcomq/nimview yea there is stuff like this
[03:31:55] <anddam> whoa
[03:31:58] <anddam> that spot on
[03:32:05] <anddam> x/that/ a/'s/
[03:32:29] <FromDiscord> <Elegantbeef> https://github.com/oskca/webview https://github.com/juancarlospaco/webgui are also stuff to look at
[03:32:38] <FromDiscord> <Elegantbeef> webgui relies on gtk though
[03:39:35] <NimEventer> New thread by Dom96: NimForum 2.2.0 - Fixes a big CVE!, see https://forum.nim-lang.org/t/8852
[03:51:58] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[04:08:12] *** Quits: rp1 (~rp@cpc77289-basf12-2-0-cust607.12-3.cable.virginm.net) (Ping timeout: 250 seconds)
[04:08:30] *** Joins: rp1 (~rp@cpc77289-basf12-2-0-cust607.12-3.cable.virginm.net)
[04:09:21] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:f537:af82:4a8:f904) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[04:14:26] <FromDiscord> <xx_ns> In reply to @NimEventer "New thread by Dom96:": hey i'm mentioned 🙂
[04:14:39] <FromDiscord> <xx_ns> feelsgoodman.jpg
[04:15:30] <FromDiscord> <ajusa> are there any good dotenv parsers for Nim? https://github.com/euantorano/dotenv.nim seems to require quoting file paths for some reason
[04:16:28] <FromDiscord> <Elegantbeef> https://nimble.directory/search?query=env
[04:17:04] <FromDiscord> <ajusa> In reply to @Elegantbeef "https://nimble.directory/search?query=env": thank you, maybe I shouldn't have search `dotenv` and `.env` lol
[04:18:00] <FromDiscord> <Elegantbeef> You could always fork the otherone if that was your only issue
[04:20:02] <FromDiscord> <ajusa> I tried doing a simple change to get it to work and that didn't help, so I gave up.  Looks like xmonader's doesn't have that issue, but it doesn't handle quoted strings properly. The envconfig one isn't a proper dotenv reader, it's for Nim configuration only.
[04:20:11] <FromDiscord> <ajusa> I'll just put stuff in double quotes lol
[04:21:01] <FromDiscord> <xx_ns> sent a code paste, see https://play.nim-lang.org/#ix=3NPi
[04:21:42] <FromDiscord> <xx_ns> @ajusa
[04:21:45] <FromDiscord> <ajusa> uh
[04:22:21] <FromDiscord> <ajusa> I guess clearing the environment variables becomes easier if you read it in? But yeah I see your point
[04:22:41] <FromDiscord> <ajusa> (eg it doesn't pollute a terminal with a bunch of vars potentially)
[04:23:09] <FromDiscord> <xx_ns> sent a code paste, see https://play.nim-lang.org/#ix=3NPj
[04:23:30] <FromDiscord> <xx_ns> once `./mybinary` exits and the subshell exits, the env vars are cleared
[04:23:33] <FromDiscord> <ajusa> Thanks! That's a much simpler solution
[04:27:33] <anddam> what even is https://github.com/marcomq/nimview#minimal-python-example ? installing "nimview" pip package results in a single    nimview.pyd: PE32+ executable (DLL) (console) x86-64, for MS Windows     into site-packages
[04:27:55] <anddam> how does that cope with  Platforms: Windows, Linux, MacOS, Android, Cloud / Web
[04:28:04] <anddam> (I am on Linux)
[04:29:07] <FromDiscord> <Elegantbeef> Perhaps it's an oversight?
[04:29:27] <FromDiscord> <Elegantbeef> I mean why are you even installing the pip package?
[04:33:36] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 268 seconds)
[04:46:14] *** Quits: krux02 (~krux02@p200300e81723dd00b48b627b8314596f.dip0.t-ipconnect.de) (Remote host closed the connection)
[04:54:49] <FromDiscord> <Patitotective> What is the closest GUI library to sublime text?
[04:54:59] <FromDiscord> <Elegantbeef> None
[04:55:36] <FromDiscord> <xx_ns> sublime uses a custom UI framework
[04:56:02] <FromDiscord> <xx_ns> something based on gtk iirc
[04:56:37] <FromDiscord> <xx_ns> so something like https://github.com/StefanSalewski/gintro may be what you're looking for?
[04:58:00] <FromDiscord> <Patitotective> In reply to @xx_ns "so something like https://github.com/StefanSalewski": Hm, yea, but it isn't highly customizable like qt
[04:58:05] <FromDiscord> <Patitotective> i think
[04:59:45] <FromDiscord> <Elegantbeef> Gtk is used for many different desktop environments
[04:59:46] <FromDiscord> <Elegantbeef> So it's pretty customizable
[05:01:04] <FromDiscord> <Patitotective> In reply to @Elegantbeef "Gtk is used for": hm, you're right, idk why i thought it wasnt
[05:49:36] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 256 seconds)
[06:22:47] <FromDiscord> <Patitotective> is there any application built with _gintro_?
[06:32:13] <FromDiscord> <haolian9 (高浩亮)> nimforum reports `Couldn't retrieve posts.` every time i click the `load more posts` on [this page](https://forum.nim-lang.org/t/7983)
[06:44:54] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[07:20:00] <FromDiscord> <JSONBash> In reply to @haolian9 (高浩亮) "nimforum reports `Couldn't retrieve": I get the same
[07:22:27] <FromDiscord> <JSONBash> how do you pass an immutable variable as a reference?
[07:22:39] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:23:57] <FromDiscord> <Elegantbeef> What are you trying to do?
[07:25:32] <FromDiscord> <JSONBash> https://play.nim-lang.org/#ix=3NPG
[07:27:58] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3NPH
[07:28:39] <FromDiscord> <Elegantbeef> There is no way to make pass it as `var string` without making a `var` copy
[07:35:09] <FromDiscord> <JSONBash> so cannot pass an immutable variable as a reference then?
[07:37:04] <FromDiscord> <Elegantbeef> well impliclity yes
[07:37:14] <FromDiscord> <Elegantbeef> Large types will be passed as reference
[07:37:54] <FromDiscord> <JSONBash> is there a size where it does that? and is that automatic?
[07:38:06] <FromDiscord> <Elegantbeef> You can also do `type MyType {.byref.} = object`
[07:38:12] <FromDiscord> <Elegantbeef> 3 float iirc
[07:38:22] <FromDiscord> <Elegantbeef> > = 3 floats will automatically be passed by ref
[07:40:33] <FromDiscord> <JSONBash> could I do this then? https://play.nim-lang.org/#ix=3NPL
[07:41:07] <FromDiscord> <Elegantbeef> distinct string might work
[07:41:11] <FromDiscord> <Elegantbeef> busy now so cant check
[07:41:20] <FromDiscord> <JSONBash> something equivalent to 3 floats in size is passed by reference?
[07:41:30] <FromDiscord> <Elegantbeef> more than
[07:43:41] <FromDiscord> <JSONBash> oh so I shouldn't spend much time worrying about this then because nim does all the heavy lifting for me?
[07:43:48] *** Quits: rienske (~rie@185.254.75.31) (Quit: WeeChat 3.4)
[07:43:48] <FromDiscord> <Elegantbeef> Yes
[07:44:01] <FromDiscord> <Elegantbeef> It has optimizations for copy vs ref passing
[07:44:02] <FromDiscord> <JSONBash> also is this what you meant? https://play.nim-lang.org/#ix=3NPM
[07:44:16] <FromDiscord> <JSONBash> In reply to @Elegantbeef "It has optimizations for": nice, that's even better!
[07:44:22] <FromDiscord> <Elegantbeef> Yea
[08:02:06] <FromDiscord> <noow> um how do I troubleshoot if I have an import, a public symbol from that import and it is not recognizing it
[08:02:40] <FromDiscord> <Elegantbeef> What's the compiler say
[08:02:42] <FromDiscord> <noow> sent a code paste, see https://paste.rs/nCa
[08:03:03] <FromDiscord> <noow> oh wait
[08:03:06] <FromDiscord> <noow> I can't read
[08:03:12] <FromDiscord> <noow> it's a recursive module dependency
[08:03:55] <FromDiscord> <noow> why do my generics not work tho 😭
[08:04:24] <FromDiscord> <noow> the previous setup had a different setup and I was calling a function on a generic, and another module had the implementation of that function for that type, yet it couldn't find it
[08:04:45] <FromDiscord> <noow> honestly I will just cat all my nim files together, put function definitions on top and call it a day
[08:05:12] <FromDiscord> <that_dude> Does anyone have a good place for me too look to understand the difference between exception and defect? They seem to be used interchangeably
[08:05:12] <FromDiscord> <Elegantbeef> You could also fix the import order 😜
[08:05:20] <FromDiscord> <noow> but it's a recursive dependency
[08:05:25] <FromDiscord> <noow> it is meant to be recursive
[08:05:33] <FromDiscord> <Elegantbeef> delayed imports allow that
[08:05:38] <FromDiscord> <noow> huh?
[08:05:39] <FromDiscord> <Elegantbeef> Is the code open?
[08:05:44] <FromDiscord> <noow> yes but not pushed
[08:05:55] <FromDiscord> <Elegantbeef> Push to a branch and i'll see if i can help
[08:06:03] <FromDiscord> <noow> okay gimme a min
[08:06:03] <FromDiscord> <Elegantbeef> Will be in a bit though
[08:06:08] <FromDiscord> <noow> i appreciate any help
[08:08:40] <FromDiscord> <noow> https://github.com/prod2/nondescript just view latest commit on the main branch
[08:09:18] <FromDiscord> <noow> fnv1a for NdValue is defined in types/value, while the generic using it is in types/hashtable.nim
[08:09:26] <FromDiscord> <noow> and value depends on hashtable through an intermediary
[08:10:36] <FromDiscord> <noow> you can `./build.sh` or `nim c --gc:arc -d:danger main`
[08:23:27] <FromDiscord> <Elegantbeef> Ok i'll take a look now
[08:26:17] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[08:27:12] <FromDiscord> <Elegantbeef> your `findEntry` you need to `mixin` your procedures
[08:27:25] <FromDiscord> <noow> mixin?
[08:27:30] <FromDiscord> <noow> do I ctrl+f the nim manual?
[08:27:34] <FromDiscord> <Elegantbeef> ` mixin fnv1a, equal`
[08:27:39] <FromDiscord> <Elegantbeef> It forces the symbols open inside of a generic
[08:27:55] <FromDiscord> <Elegantbeef> So it reasons them at instantiation
[08:28:15] <FromDiscord> <noow> i'll try that, thank you
[08:28:25] <FromDiscord> <Elegantbeef> But there is another issue
[08:30:14] <FromDiscord> <noow> i pushed the mixin and a small fix to vm
[08:30:31] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[08:31:24] <FromDiscord> <noow> okay it compiles and works
[08:31:27] <FromDiscord> <noow> thanks a lot!!!
[08:31:30] <FromDiscord> <Elegantbeef> No problem
[08:31:41] <FromDiscord> <Elegantbeef> last issue was doing `not x == b` instead of `x != b`
[08:31:42] <FromDiscord> <noow> i should read the nim manual from top to bottom sometime 🙂
[08:32:10] <FromDiscord> <noow> In reply to @Elegantbeef "last issue was doing": yeah, i just changed a bunch of code at once with no compilations
[08:32:19] <FromDiscord> <noow> things like that creep in when i do that
[08:32:25] <FromDiscord> <Elegantbeef> Well anywho there you go no big file
[08:32:33] <FromDiscord> <noow> 🥲
[08:32:46] <FromDiscord> <noow> no need for reinventing C headers
[08:33:32] <FromDiscord> <Elegantbeef> Even though some people do importing is fine in most cases
[08:33:37] <FromDiscord> <noow> yay nondescript calculates 37th fib now under 6.5 seconds
[08:33:47] <FromDiscord> <Elegantbeef> Let's get it faster!
[08:33:54] <FromDiscord> <noow> python does it under 9, lua under 3
[08:34:35] <FromDiscord> <noow> In reply to @Elegantbeef "Let's get it faster!": yes, I ran out of ideas of optimization just by looking at the code
[08:34:38] <FromDiscord> <noow> time to bring out the profiler
[08:34:54] <FromDiscord> <Elegantbeef> How do i run the benchmark?
[08:35:09] <FromDiscord> <noow> time ./nds benchmarks/fib.nds
[08:35:34] <FromDiscord> <noow> after ./build.sh which uses arc and danger
[08:35:42] <FromDiscord> <Elegantbeef> Also you know you can use nimble to make a cross platform build task
[08:36:04] <FromDiscord> <Elegantbeef> then you could do `nimble buildFast` and it'd output nds
[08:36:16] <FromDiscord> <noow> I don't like having a src folder
[08:36:32] <FromDiscord> <Elegantbeef> You dont need one
[08:36:35] <FromDiscord> <Elegantbeef> Nimble just bitches for no reason
[08:37:01] <FromDiscord> <noow> oh? then i will look into it
[08:37:24] <FromDiscord> <Elegantbeef> Nico for instance doesnt have a `src` and uses a nimble file with tasks
[08:38:33] <FromDiscord> <noow> ah thanks, I will add it to my todo list
[08:39:05] <FromDiscord> <noow> might be useful when I start building a test suite
[08:43:46] <FromDiscord> <Elegantbeef> No hashing to access it or creating it
[08:43:47] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3NPU
[08:44:26] <FromDiscord> <noow> oh, you're right
[08:45:03] <FromDiscord> <noow> wow... with all this help, would you like a mention in the commit message, or something
[08:48:32] <FromDiscord> <Elegantbeef> @lakmatiol\: https://github.com/nim-lang/Nim/pull/19467 when/if this gets merged you'll be able to use you code on devel
[08:50:00] <FromDiscord> <Elegantbeef> I mean you do you i didnt do much, I already have many contributions 😛
[09:03:26] <FromDiscord> <noow> sent a code paste, see https://play.nim-lang.org/#ix=3NPV
[09:04:02] <FromDiscord> <noow> time for expandArc or something 🤔
[09:04:30] <FromDiscord> <Elegantbeef> Perhaps a double free?
[09:04:59] <FromDiscord> <Elegantbeef> Ah nevermind i'm dumb
[09:05:04] <FromDiscord> <xflywind> try also with `-d:useMalloc`?
[09:05:11] <FromDiscord> <Elegantbeef> smoke bomb
[09:08:52] <FromDiscord> <noow> sent a code paste, see https://play.nim-lang.org/#ix=3NPW
[09:09:05] <FromDiscord> <Elegantbeef> Dont think so it should error
[09:09:29] <FromDiscord> <noow> nevermind the type is uint, it's just being cast to ptr
[09:09:37] <FromDiscord> <noow> so destroying an uint shouldn't do anything
[09:10:16] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[09:10:45] <FromDiscord> <noow> In reply to @flywind "try also with `-d:useMalloc`?": malloc: invalid size
[09:10:57] <FromDiscord> <noow> oh no something must be very wrong with my code
[09:14:30] <FromDiscord> <Rika> you cant have a destructor for a ptr object afaik
[09:14:51] <FromDiscord> <noow> it was a var uint
[09:15:16] <FromDiscord> <noow> im just casting heavily cause NaN boxing
[09:15:32] <FromDiscord> <Rika> mmmmmmmm thanks FPU
[09:16:55] <FromDiscord> <noow> im also munmap_chunk(): invalid pointer
[09:17:01] <FromDiscord> <Rika> is the broken code pushed
[09:17:31] <FromDiscord> <Rika> oh wow i kinda hate this code xd procs in procs ngl cursed
[09:17:33] <FromDiscord> <Rika> anyway
[09:17:55] <FromDiscord> <noow> In reply to @Rika "oh wow i kinda": 😦
[09:18:00] <FromDiscord> <Rika> is the broken code pushed
[09:18:02] <FromDiscord> <noow> yes
[09:18:08] <FromDiscord> <Rika> branch? master?
[09:18:09] <FromDiscord> <noow> loops are broken specifically
[09:18:12] <FromDiscord> <noow> In reply to @Rika "branch? master?": yes
[09:18:13] *** Quits: noeontheend (~noeonthee@207.237.194.194) (Ping timeout: 240 seconds)
[09:18:21] <FromDiscord> <noow> noone is relying on my code so 🤷🏻‍♂️
[09:19:15] <FromDiscord> <noow> var i = 0; while (i < 3) {print i; i = i + 1;};↵triggers it
[09:19:18] <FromDiscord> <Rika> what exam
[09:19:18] <FromDiscord> <Rika> okay
[09:20:00] <FromDiscord> <Rika> i dont get the error
[09:20:07] <FromDiscord> <noow> do ./debug.sh
[09:20:07] <FromDiscord> <Rika> wait, ver of nim?
[09:20:12] <FromDiscord> <noow> 1.6.2
[09:20:21] <FromDiscord> <Rika> neither
[09:20:29] <FromDiscord> <noow> -d:useMalloc tho
[09:20:32] <FromDiscord> <noow> oh
[09:20:33] <FromDiscord> <Rika> im on 1.6.0
[09:20:46] <FromDiscord> <Rika> another regression?
[09:21:01] <FromDiscord> <Rika> let me check
[09:21:02] <FromDiscord> <noow> 1.6.0 is fine
[09:21:21] <FromDiscord> <Rika> no issue on 1.6.2 for me
[09:21:57] <FromDiscord> <noow> well
[09:22:11] <FromDiscord> <noow> 1.6.0 works fine on my system, 1.6.2 doesn't
[09:23:01] <FromDiscord> <Rika> neither build or debug break on 1.6.2
[09:23:14] <FromDiscord> <Rika> maybe you have a fucked 1.6.2 somehow? that would be extremely starnge
[09:23:16] <FromDiscord> <Rika> (edit) "starnge" => "strange"
[09:23:25] <FromDiscord> <noow> I'll redownload
[09:23:26] <FromDiscord> <Rika> are you using a strange system?
[09:23:37] <FromDiscord> <noow> just a normal linux distro
[09:23:38] <FromDiscord> <noow> 😭
[09:24:01] <FromDiscord> <noow> although
[09:24:17] <FromDiscord> <Rika> ?
[09:24:27] <FromDiscord> <noow> try running benchmarks/efib.nds
[09:24:40] <FromDiscord> <Rika> got it
[09:24:42] <FromDiscord> <Rika> got the issue
[09:25:22] <FromDiscord> <Rika> same with 1..6.0
[09:25:23] <FromDiscord> <Rika> okay
[09:25:34] *** Joins: rienske (~rie@185.254.75.31)
[09:27:36] <FromDiscord> <Rika> its a current bug it seems, gonna koch
[09:27:42] <FromDiscord> <Rika> actuall
[09:27:45] <FromDiscord> <noow> 1.4.8 also breaks
[09:27:49] <FromDiscord> <Rika> koch wont help, wonder whats wrong then
[09:28:00] <FromDiscord> <Rika> would expand arc help i dunno
[09:29:07] <FromDiscord> <noow> yeah im looking into that
[09:30:08] *** Quits: rienske (~rie@185.254.75.31) (Client Quit)
[09:30:13] <FromDiscord> <noow> okay
[09:30:20] <FromDiscord> <noow> it's an out of bounds indexing
[09:31:52] <FromDiscord> <Rika> where?
[09:31:59] <FromDiscord> <noow> line 184 in vm
[09:32:22] <FromDiscord> <Rika> do you not have bounds checks on ^^;
[09:32:40] <FromDiscord> <noow> I reimplemented seq's for optimization, but yes I turned my own bouds checks on
[09:33:39] <FromDiscord> <Bung> In reply to @Bung "<@!145405730571288577> `Error: cannot open": @ElegantBeef have you check this ?
[09:33:55] <FromDiscord> <Elegantbeef> 1.0.11 should fix it
[09:34:22] <FromDiscord> <Rika> use this https://nim-lang.org/docs/system.html#compileOption%2Cstring `compileOption("boundChecks")`
[09:34:51] <FromDiscord> <Bung> ok let me try
[09:34:56] <FromDiscord> <Elegantbeef> May i ask what optimizations you made to your seq?
[09:35:24] <FromDiscord> <noow> instead of defining with a length and a start, I am defining it in terms of pointers to the bottom and top object
[09:35:39] <FromDiscord> <noow> and capacity
[09:35:41] <FromDiscord> <Rika> idk how thats an optimisation but ok
[09:36:04] <FromDiscord> <noow> the improvements in performance could be just a different growing rate
[09:36:20] <FromDiscord> <Elegantbeef> You can implement your own growth rate using `newSeqWithCap` 😛
[09:36:25] <FromDiscord> <Rika> not really
[09:36:30] <FromDiscord> <Rika> itll grow at the same rate
[09:36:35] <FromDiscord> <Rika> just a different cap at the start
[09:36:47] <FromDiscord> <noow> In reply to @Rika "idk how thats an": also, I can drop the last n objects by decrementing the top pointer
[09:36:57] *** Joins: rienske (~rie@185.254.75.31)
[09:37:05] <FromDiscord> <Rika> same thing with a length? just reduce the length
[09:37:09] <FromDiscord> <Elegantbeef> You can drop the last N objects by just decrementing `len` 😀
[09:37:28] <FromDiscord> <Rika> not sure if the bridge was slow this time
[09:37:35] <FromDiscord> <Elegantbeef> Nah i was
[09:37:55] <FromDiscord> <noow> well, that little math of adding len or just having a top directly probably doesn't make that much of a difference true
[09:38:15] <FromDiscord> <Rika> yeah most of the time is spent on the alloc and copies
[09:38:41] <FromDiscord> <Rika> so yeah newSeqWithCap would help if you knew the init.size or the max size
[09:38:48] <FromDiscord> <noow> I just straight out double the length everytime I run out and don't shrink right now
[09:39:00] <FromDiscord> <Elegantbeef> Nim seq's dont shrink eeither
[09:39:34] <FromDiscord> <Elegantbeef> seq's also have a doubling growth rate iirc until a point where they do a larger growth
[09:39:58] <FromDiscord> <Rika> you should be fine as long as you do a good/not stupid initial capacity
[09:40:28] <FromDiscord> <noow> well, sometihng improved the performance 🤷🏻‍♂️ or i just suck at benchmarking
[09:40:54] <FromDiscord> <Elegantbeef> Profiling is a gift
[09:40:55] <FromDiscord> <Rika> could be both
[09:41:01] <FromDiscord> <noow> probably the drop-n tho
[09:41:09] <FromDiscord> <Bung> @ElegantBeef it seems it does not add current project src to search paths
[09:41:14] <FromDiscord> <noow> since I was for countup discard popping
[09:41:31] <FromDiscord> <Elegantbeef> of course not↵(@Bung)
[09:41:33] <FromDiscord> <noow> i didn't find a easy way to drop the last n with seqs
[09:41:58] <FromDiscord> <Elegantbeef> `yourSeq.pop`
[09:42:14] <FromDiscord> <Elegantbeef> `yourSeq.setLen(yourSeq.len - n)`
[09:42:16] <FromDiscord> <Rika> well yeah thats one good point, afaik nim doesnt just dec. the length when the del is at the end
[09:42:19] <FromDiscord> <Rika> ah yeah setlen
[09:42:20] <FromDiscord> <Rika> lmao
[09:42:28] <FromDiscord> <noow> oh
[09:43:22] <FromDiscord> <Elegantbeef> Remember bung Nimscripter is a general purpose interop tool, it doesnt make many assumptions about where nim files should be
[09:44:03] <FromDiscord> <Elegantbeef> If you dont give it a `NimScriptPath` it doesnt have 0 inkling any folder other than `stdlib` is in the path
[09:45:36] <FromDiscord> <Elegantbeef> So what i'm saying is supply `getCurrentDir()` into the search paths
[09:53:45] <FromDiscord> <noow> nevermind xD
[09:53:49] <FromDiscord> <noow> it was a stupid typo
[09:53:53] <FromDiscord> <Rika> Lol
[09:53:56] <FromDiscord> <noow> i mean i did a pop instead of peek
[09:53:57] <FromDiscord> <Elegantbeef> Dont do that
[09:54:01] <FromDiscord> <Rika> Lol
[09:54:06] <FromDiscord> <noow> this happens when it's 7 am and i haven't slept all night
[09:54:27] <FromDiscord> <Bung> oh , I get new error that without idea
[09:54:40] <FromDiscord> <Bung> sent a code paste, see https://play.nim-lang.org/#ix=3NQ8
[09:56:10] <FromDiscord> <Elegantbeef> code you're using write's a stack trace
[09:56:24] <FromDiscord> <noow> @Rika @ElegantBeef well thanks for all the willingness to help, i hope you forgive a stupid thing or two i've done today
[09:56:49] <FromDiscord> <Elegantbeef> Hey i help people i dont care how many stupid things they do aslong as they're sincerely trying 😛
[09:57:55] <FromDiscord> <noow> i wonder if languages with string interning GC strings 🤔
[09:59:19] <FromDiscord> <Elegantbeef> I dont know what you just said
[10:00:26] <FromDiscord> <noow> im just crying out loud because i have no idea how I will implement a GC
[10:01:27] <FromDiscord> <Elegantbeef> mark and sweep isnt too difficult afaik
[10:02:04] <FromDiscord> <noow> yeah i'll figure it out somehow
[10:02:25] <FromDiscord> <noow> i will probably have to keep a reference to every single object on the heap though
[10:03:22] <FromDiscord> <noow> or keep track of all allocated memory and check which I can access from the root
[10:03:43] <FromDiscord> <noow> well i'll go sleep now xD thank a lot again
[10:03:51] <FromDiscord> <Elegantbeef> No problem
[10:04:33] <FromDiscord> <Rika> I was doing something
[10:04:42] <FromDiscord> <Rika> String interning is strange to think about I'd say
[10:05:36] <FromDiscord> <Bung> do know which part use writeStackTrace, my code does not use it directly
[10:06:12] *** Joins: nrds (~NimBot@ns501209.ip-142-4-210.net)
[10:06:31] <FromDiscord> <Elegantbeef> I havent got a way to figure it out yet
[10:06:44] <FromDiscord> <Elegantbeef> but `fileIndex` should let us get the file
[10:07:20] <FromDiscord> <Elegantbeef> https://github.com/beef331/nimscripter/blob/master/src/nimscripter.nim#L28-L31 feel free to figure it out if you have the time/effort
[10:07:21] <FromDiscord> <Bung> ` (8, 6): 'writeChars' [proc declared in /Users/bung/.choosenim/toolchains/nim-1.6.2/lib/system/io.nim(214, 6)]` you mean this hint , I also checked
[10:08:08] <FromDiscord> <Elegantbeef> No i mean we have the file index from `info` and we should be able to get what file, but I havent got around to it
[10:08:42] <FromDiscord> <Bung> okay , I'll try get some info from there
[10:13:30] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 250 seconds)
[10:14:26] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[10:17:34] <FromDiscord> <that_dude> Sorry to ask again, but what is the difference between exception and defect, and which one should I use. They seem to be used interchangably
[10:17:47] <FromDiscord> <Elegantbeef> Defects are for logic errors and not meant to be caught
[10:17:57] <FromDiscord> <Elegantbeef> Exceptions are exceptional code which can be caught
[10:18:34] <FromDiscord> <that_dude> So I would use defect if I did a wrong conversion in code, but exception if I couldn't load the needed data from a website?
[10:19:41] <FromDiscord> <that_dude> or defect is "kill through error" and exception is "give another chance through error"
[10:19:52] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3NQa
[10:22:18] <FromDiscord> <that_dude> ok I think I got it
[10:22:45] <FromDiscord> <Elegantbeef> You shouldnt often use defects unless it's truely unhandleable
[10:23:52] <FromDiscord> <that_dude> Fair enough
[10:27:23] <FromDiscord> <Bung> @ElegantBeef  https://github.com/beef331/nimscripter/pull/10
[10:27:51] <FromDiscord> <Elegantbeef> Can you bump to 1.0.12?
[10:29:06] <FromDiscord> <Bung> sure
[10:29:54] <FromDiscord> <Bung> done
[10:30:31] <FromDiscord> <Elegantbeef> There you go, thanks!
[10:33:05] *** Quits: nrds (~NimBot@ns501209.ip-142-4-210.net) (Remote host closed the connection)
[10:33:08] <FromDiscord> <Bung> you can still use https://github.com/bung87/crown_ui/tree/nimscripter for reproduce , it report nimyaml use `writeStackTrace`
[10:33:37] *** Joins: nrds (~NimBot@ns501209.ip-142-4-210.net)
[10:33:38] <FromDiscord> <Elegantbeef> Yea I cant do anything here, dont add files you cant use in nimscript
[10:35:13] <FromDiscord> <Bung> is there simple rule I can no which lib I cant use with nimscript ?
[10:35:54] <FromDiscord> <Elegantbeef> Well in this case the issue is a lacking flag
[10:36:26] <FromDiscord> <Elegantbeef> So perhaps i need to expose yet another parameter
[10:36:29] <FromDiscord> <Elegantbeef> Or make an object
[10:37:02] <FromDiscord> <Elegantbeef> https://github.com/flyx/NimYAML/blob/a72966374fe9c88e0974036131a36a8b4201e20d/yaml/private/internal.nim#L29-L37 i think the issue here
[10:39:05] <FromDiscord> <Bung> in there which code cant be used with nimscript ?
[10:40:03] <FromDiscord> <Elegantbeef> Any code that relies on low level code will not work
[10:40:28] <FromDiscord> <Elegantbeef> Many things will work if they dont rely on importC or similar
[10:42:46] <FromDiscord> <Bung> but here I see use nim builtin procs
[10:45:32] <FromDiscord> <Elegantbeef> `when defined(nativeStacktrace) and nativeStackTraceSupported:`
[10:45:40] <FromDiscord> <Elegantbeef> NimVm doesnt have stacktrace
[10:46:39] <FromDiscord> <Bung> okay, thanks for explanation
[11:11:11] <euantorano> @ajusa I’m the author of the dotenv library you mentioned earlier. I’m not sure I understand what you mean by “it seems to require quoting file paths for some reason”, but I’m happy to try and fix any issues you’re having. Can you please open an issue on GitHub?
[11:15:29] *** Quits: rienske (~rie@185.254.75.31) (Quit: WeeChat 3.4)
[11:15:48] *** Joins: rienske (~rie@185.254.75.31)
[11:16:21] <FromDiscord> <Elegantbeef> I believe they're talking about `MyVar=/somePath/`
[11:16:33] <FromDiscord> <Elegantbeef> do you not make it so you have to do \`MyVar="/somePath/"\~
[11:31:52] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[11:35:10] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[11:53:23] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:f537:af82:4a8:f904)
[12:16:38] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[12:23:13] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:f537:af82:4a8:f904) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:30:10] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:f537:af82:4a8:f904)
[12:45:23] <haakon> Is there any difference between separating proc parameters with comma and semicolon? Which should I prefer?
[12:47:43] <FromDiscord> <Illusive> Is there a good text editor on Nim?
[12:48:06] <FromDiscord> <BhamidipatiNikhil> In reply to @Illusive "Is there a good": VScode
[12:49:47] <arkanoid> haakon, comma. Semicolon is used for special cases, when compiler can't find by itself what you want
[12:50:31] <haakon> arkanoid: God it, thanks
[12:50:38] <haakon> got*
[12:54:31] <arkanoid> I have kinda naive question. I see code calling dealloc(data) when data is "UncheckedArray[T]". Con can free memory if array size is not there?
[12:55:25] <arkanoid> For example in myseq example here: https://nim-lang.org/docs/destructors.html
[12:58:26] <arkanoid> Does nim keeps the size of each allocated heap size for me?
[13:00:52] <FromDiscord> <Phil> ... I think I'm missing something regarding reversing a string
[13:03:46] <FromDiscord> <Phil> Never mind, I kept using "let" strings with reverse
[13:05:14] <FromDiscord> <Phil> now how to turn a seq[char] into a string...
[13:05:34] <FromDiscord> <Phil> (edit) "string..." => "string in a simple manner that isn't me writing a loop on that array manually..."
[13:10:10] <FromDiscord> <Rika> arkanoid: i would recommend semicolon over comma once you're an "advanced user" slash you're using `using`
[13:10:31] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:f537:af82:4a8:f904) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:11:24] <FromDiscord> <Rika> phil: choose, loop or memory copy or unsafe cast 😛
[13:17:05] <FromDiscord> <mratsim> In reply to @arkanoid "Does nim keeps the": That's the role of an allocator yes, malloc/free are the same
[13:20:35] <FromDiscord> <Phil> In reply to @Rika "phil: choose, loop or": Loop it is for I am afraid of the unsafe
[13:20:46] <FromDiscord> <Phil> Namely of having to debug stuff I don't comprehend that well
[13:24:06] <FromDiscord> <Phil> ... man, that moment when you realize you can use nim aliases on 10 types and just use them by defining a proc for every single type in the alias
[13:24:13] <FromDiscord> <Phil> (edit) "a" => "an overloaded"
[13:24:34] <FromDiscord> <Rika> ?
[13:27:28] <FromDiscord> <Phil> So I have a full text search using sqlite's fts5 table
[13:27:45] <FromDiscord> <Phil> And the contents of that search table come from 10 other tables, for all of which I have model-types (using norm)
[13:28:17] <FromDiscord> <Phil> Now I still need procs that handle inserting and updating entries to and from that searchTable
[13:28:40] <FromDiscord> <Phil> And I'm not going to write 10 procs per functionality I need called "insertCharacter", "insertCreature", "insertblablabla"
[13:31:46] <FromDiscord> <Phil> sent a long message, see https://paste.rs/f4i
[13:32:28] <FromDiscord> <Phil> I maybe should add that the way to build the text and title that should go into the search table are different for every of the 10 tables
[13:32:40] <FromDiscord> <Rika> i mean if they all share mainly the same proc body that works yes
[13:32:53] <FromDiscord> <Phil> Anyway, I just realized I could do this as I was halfway of writing the very convoluted way
[13:33:01] <FromDiscord> <Phil> When Aliases and how useful they are hit me in the head
[13:33:38] <FromDiscord> <Phil> the proc body of "insertSearchEntry" is always the same, only the way of how you get the text for body and title of an entry differs
[13:58:32] <FromDiscord> <Phil> Is there a way for me to ascertain at compile time that all types of an alias have a proc with a given signature?
[14:01:02] <FromDiscord> <Rika> With concepts or compiles()
[14:01:04] <FromDiscord> <Rika> I guess
[14:01:32] <FromDiscord> <Phil> concepts are slowly but surely reaching the point of "most awaited feature for nim stable"
[14:01:50] <FromDiscord> <Phil> (edit) ""most" => "being my most" | "stable"" => "stable"
[14:01:59] <FromDiscord> <vindaar> yeah, it sounds like you want concepts. But I don't understand what you mean by "all types of an alias"
[14:02:50] <FromDiscord> <Rika> All types of a type class
[14:03:14] <FromDiscord> <vindaar> sent a code paste, see https://play.nim-lang.org/#ix=3NQW
[14:04:07] <FromDiscord> <Phil> sent a code paste, see https://paste.rs/xlY
[14:04:10] <FromDiscord> <vindaar> ah. But in that case why place them inside the type class if they don't fulfill the requirement already?↵(@Rika)
[14:04:37] <FromDiscord> <vindaar> so this is for users of some library?
[14:04:46] <FromDiscord> <Rika> Concepts is the solution pretty much…
[14:05:06] <FromDiscord> <Phil> This is for myself, see the debate above about me having a search table with content of 10 other tables.↵Yeah, concepts seem like the way to go here
[14:05:27] <FromDiscord> <vindaar> well, it's a partial solution for this. Because it will only cause type `B` to fail resolving some other proc that requires the type `MyConcept`. Nothing more
[14:06:36] <FromDiscord> <Rika> You can put outside the proc “if not compiles(…): {.error:….}
[14:07:46] <FromDiscord> <Phil> That might actually be nicer in the meantime as, while I'm eager to work with concepts, I'm hesitant to go for an experimental feature if the implementation might change on me while I'm in the middle of writing my project
[14:08:06] <FromDiscord> <Rika> Compiles is just as unstable as concepts I would say.
[14:08:22] <FromDiscord> <Phil> It is? dangit!
[14:08:25] <FromDiscord> <vindaar> I did read what you wrote above now. Still not quite following. In the snippet with `MyAB` you posted. Just having the code written like this already causes a CT error for `getNum` if you hand a `B`
[14:08:54] <FromDiscord> <Rika> But only if you hand a B
[14:08:59] <FromDiscord> <vindaar> concepts aren't actually that unstable. They can be a bit annoying if they don't match what you think / match too much. Or if you need recursive concepts
[14:09:03] <FromDiscord> <Rika> I assume they want it to error even if not
[14:09:14] <FromDiscord> <Phil> Pretty much
[14:09:20] <FromDiscord> <Phil> I want the guarantee at compile time that the procs are there
[14:09:28] <FromDiscord> <Phil> Not an error at runtime once the passing to B happens
[14:09:36] <FromDiscord> <Rika> You could just write tests 😛
[14:10:07] <FromDiscord> <Phil> ....but....but
[14:10:20] <FromDiscord> <vindaar> that cannot work however. At least not with concepts. A concept doesn't "know" anything about all other concepts that match. It's only a way to restrict generics. That doesn't apply here. Your generic is perfectly restricted using the `MyAB` alias↵(@Rika)
[14:11:10] <FromDiscord> <vindaar> if you really want that, you'd have to write a macro that iterates the type alias and checks if the proc exists with some hack (i.e. either by calling it with a dummy or emitting `compiles` statements for each type)
[14:11:16] <FromDiscord> <Rika> In reply to @vindaar "that cannot work however.": Concepts aren’t a match in this case yes, but what I said (compiles) should be with the right predicate
[14:14:09] <FromDiscord> <vindaar> and at the same time I don't see how `getNum` with the type alias will ever match a `getNum`  call for any explicit type in the alias. The explicit version of the proc will always be called instead I think
[14:14:56] <FromDiscord> <Rika> I think it’s just an example here
[14:15:00] <FromDiscord> <vindaar> of course, the other `getNum` can be something like `getNumImpl` or whatever
[14:15:09] <FromDiscord> <Phil> Ah, maybe bad example, the getNum(t: MyAB) could also be called "getANumber(t: MyAB)" for my purposes
[14:15:15] <FromDiscord> <Rika> Actually that’s kinda brilliant
[14:15:28] <FromDiscord> <Phil> Ohh I like the way of impl
[14:15:30] <FromDiscord> <Rika> If you want a proc to be guaranteed for a type in a type class
[14:15:39] <FromDiscord> <Rika> You make a proc using the type class that’s an error
[14:15:56] <FromDiscord> <Phil> I don't think I understand
[14:16:08] <FromDiscord> <Rika> Actually no
[14:16:18] <FromDiscord> <Rika> That’s still compile time error only on usage
[14:16:26] <FromDiscord> <Rika> Dude just write tests dammit hahaha
[14:16:33] <FromDiscord> <Phil> But lazyness!
[14:18:12] <FromDiscord> <vindaar> ohh, that's actually pretty smart if you want a custom error message↵(@Rika)
[14:18:25] <FromDiscord> <vindaar> but still only works on usage
[14:18:46] <FromDiscord> <vindaar> but then again, if you never need the missing proc, arguably it's not a problem if your program doesn't error at CT
[14:21:27] <FromDiscord> <Phil> ~~I hate it when people notice that I'm trying to use the compiler as my todo list reminder~~
[14:21:33] <FromDiscord> <Phil> (edit) "~~I hate it when people notice that I'm trying to use the compiler as my todo list reminder~~ ... " 03added "😄"
[14:22:10] <FromDiscord> <Rika> No I get it I don’t like it either when CTEs I make only trigger on usage
[14:28:31] <FromDiscord> <Phil> Hmmm
[14:28:36] <FromDiscord> <Phil> I could use some advise organization wise
[14:28:45] <FromDiscord> <Rika> Write tests
[14:28:48] <FromDiscord> <Rika> Lol
[14:28:54] <FromDiscord> <Phil> Dang it Rika!
[14:30:17] <FromDiscord> <Phil> I organize my application by domain. ↵So I've got src/applications and inside that I've got on dir for each creature, character, location, item etc.↵Now I have one that is "search", which makes use of stuff in creature/character/location/item etc., mainly the knowledge on how to turn an instance of a character/bla into a string
[14:30:44] <FromDiscord> <Rika> What’s the issue?
[14:30:48] <FromDiscord> <Phil> I'm just contemplating whether "getSearchBody(article: Character)" should be located in the "character" folder or the "search" folder
[14:30:49] <FromDiscord> <vindaar> sent a code paste, see https://play.nim-lang.org/#ix=3NR5
[14:30:56] <FromDiscord> <Rika> In reply to @Isofruit "I'm just contemplating whether": Search
[14:31:07] <FromDiscord> <Rika> It’s not inherent to characters it’s inherent to searching
[14:31:30] <FromDiscord> <Phil> Makes sense to me, thanks!
[14:32:24] <FromDiscord> <Phil> In reply to @vindaar "well, you asked for": This is the type of thing that makes me scared of macros 😄
[14:33:12] <FromDiscord> <vindaar> if not for the `when compiles` in there, I'd almost consider it usable. But the purpose doesn't warrant it imo
[14:34:23] <FromDiscord> <Phil> Thanks for the proof of concept though! If I'm interpreting this correctly the "explode" macro turns into code that tries to do a call for every combination of a type in MyAB with "getNumImpl" and errors out if it's not there, leaving no code behind even if it compiles
[14:34:27] <FromDiscord> <Phil> Am I reading that correctly?
[14:35:55] <FromDiscord> <vindaar> exactly↵(@Phil)
[14:36:15] <FromDiscord> <vindaar> ah wait, not quite
[14:36:29] <FromDiscord> <vindaar> nvm
[14:36:51] <FromDiscord> <vindaar> sorry 😅 I was about to say it's not quite right it doesn't leave anything behind, but I was confused for a second
[15:00:48] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:3db3:b1d2:4da9:9983)
[15:16:49] <haakon> Is it not possible to foldl over HashSets? `@[1,2,3].toHashSet().foldl(a + b)` gives me "template/generic instantiation of `foldl` from here"
[15:17:21] <FromDiscord> <Rika> How do you iterate over a hash set
[15:17:29] <FromDiscord> <Rika> There's no order
[15:19:04] <haakon> The order would be arbitrary. You can iterate over a HashSet with `for`
[15:19:48] <FromDiscord> <Rika> In reply to @haakon "Is it not possible": What is the whole error
[15:19:53] <FromDiscord> <Rika> That is only one line of many
[15:20:45] <FromDiscord> <enthus1ast> well there is https://nim-lang.org/docs/sets.html#OrderedSet
[15:21:16] <FromDiscord> <Bung> @ElegantBeef do you have idea how that could be fixed ?
[15:21:24] <haakon> The whole error is https://paste.rs/VEI
[15:21:48] <haakon> (from the inim repl)
[15:22:11] <FromDiscord> <vindaar> most (all?) procedures / templates in `sequtils` assume your input data is a sequence↵(<@709044657232936960_haakon=5b=49=52=43=5d>)
[15:22:33] <FromDiscord> <Rika> In reply to @vindaar "most (all?) procedures /": I think  it's more "sequence like"
[15:22:58] <haakon> vindaar: yeah I guess that's the problem. Folding over sets like this is simply not supported
[15:23:49] <FromDiscord> <vindaar> that's what it should really be, but the implementations aren't exactly very generic↵(@Rika)
[15:24:30] <FromDiscord> <vindaar> you can use a `toSeq` in there though. Of course means you have an additional iteration over your set. If that's fine `theSet.toSeq.foldl(a + b)` works though↵(<@709044657232936960_haakon=5b=49=52=43=5d>)
[15:24:51] <haakon> Yeah that's what I'm falling back on :-)
[15:31:21] <haakon> But toSeq is failing in the same way? `@[1,2,3].toHashSet().toSeq()` -> "template/generic instantiation of `toSeq` from here"
[15:33:26] <FromDiscord> <Rika> Sorry but again we need more context
[15:34:35] <haakon> Ah right. Here: "type mismatch: got 'int' for 'x`gensym35' but expected 'HashSet[system.int]"
[15:35:46] <FromDiscord> <Phil> I keep forgetting... but does nim have any remotely close equivalent to elvis operator?
[15:41:21] <haakon> Eh, rewrote it in a less functional way, works
[15:41:26] <FromDiscord> <Rika> No, nim does not have truthiness
[15:42:10] <FromDiscord> <Rika> Unless you only want an elvis operator for booleans, in which that's just "or"
[15:47:07] <emery> has anyone considered porting nim to solo5?
[16:00:27] <FromDiscord> <Rika> Tobwhatv
[16:00:30] <FromDiscord> <Rika> To what
[16:05:27] <FromDiscord> <Phil> In reply to @Rika "Unless you only want": Pretty much, I often used to do stuff like : ↵`let bla = procThatReturnsBool() ? valueA : valueB`
[16:05:51] <FromDiscord> <Phil> Or rather the equivalent of that in JS/Python
[16:07:50] <FromDiscord> <Rika> That’s not Elvis
[16:07:55] <FromDiscord> <Rika> That’s ternary
[16:08:20] <FromDiscord> <konsumlamm> you can just use an if expression theb
[16:08:21] <FromDiscord> <Rika> Ternary is inline if statement in Nim
[16:08:24] <FromDiscord> <konsumlamm> (edit) "theb" => "then"
[16:08:31] <FromDiscord> <Rika> Statement? Expression
[16:16:12] *** Quits: mahlon (~mahlon@martini.nu) (Ping timeout: 250 seconds)
[17:02:30] *** Joins: lumo_e (~enrico@151.29.57.144)
[17:23:55] <arkanoid> mratsim: (late) thanks
[17:36:42] *** Joins: pro (~pro@user/pro)
[17:44:34] *** Joins: PMunch (~PMunch@user/pmunch)
[17:45:29] <FromDiscord> <BhamidipatiNikhil> Guys, i am stuck... Any idea why the 30th line is showing indentation error? https://media.discordapp.net/attachments/371759389889003532/936987919925796915/unknown.png
[17:47:19] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: Leaving)
[18:03:13] <PMunch> @BhamidipatiNikhil, I can't see the image Discord sent..
[18:14:37] *** Quits: lumo_e (~enrico@151.29.57.144) (Ping timeout: 240 seconds)
[18:21:45] *** Joins: arkurious (~arkurious@user/arkurious)
[18:22:42] <FromDiscord> <BhamidipatiNikhil> I don't want to read the whole line as input... just the first element i want as input and ignore the rest.... How should i go about it?
[18:23:27] <FromDiscord> <Bung> http://debuggable.com/posts/parsing-file-uploads-at-500-mb-s-with-node-js:4c03862e-351c-4faa-bb67-4365cbdd56cb it seems this is right solution of a http multipart parser ?!
[18:27:57] <PMunch> @BhamidipatiNikhil, just read until you're happy and stop?
[18:48:14] <FromDiscord> <BhamidipatiNikhil> sent a long message, see http://ix.io/3NSs
[18:48:43] <FromDiscord> <BhamidipatiNikhil> i cannot control how i give input, because i am attempting a problem in an onlinejudge...
[18:48:52] *** Parts: pro (~pro@user/pro) (WeeChat 3.4)
[18:49:58] <PMunch> Read the full line, then use "align" from strutils with "0 " as your pattern perhaps?
[18:50:27] <PMunch> Ah, it only takes a character, not a string
[18:59:04] <FromDiscord> <tandy> is there a way to get the first digit of an int without casting?
[18:59:16] <FromDiscord> <tandy> i want to check whether http error codes start with `2`
[18:59:22] <FromDiscord> <tandy> [Edit](https://discord.com/channels/371759389889003530/371759389889003532/937006441187917874): is there a way to get the first digit of an int without casting to string?
[18:59:33] <Zevv> tandy: waht about div 100
[18:59:36] <FromDiscord> <tandy> i guess i can just do range check
[19:00:11] <Zevv> right, that's nicest. `val in 200..299`
[19:00:13] <FromDiscord> <Rika> In reply to @Zevv "<@878733865919844433>: waht about div": you mean div
[19:00:17] <FromDiscord> <Rika> oh wait
[19:00:19] <FromDiscord> <Rika> what
[19:00:24] <FromDiscord> <Rika> why did i read mod somehow?
[19:00:31] <FromDiscord> <Rika> i am going crazy
[19:00:35] <Zevv> div, mod, es ist mir alles egal
[19:00:36] <FromDiscord> <Rika> this is it guys
[19:01:18] <Zevv> remember, life is just a simulation. You're running on a cpu that does div and mod in one instruction. easy to confuse these kind of things
[19:01:34] <FromDiscord> <Rika> @_@
[19:04:16] <FromDiscord> <tandy> oh thats clean, didnt know u could do that↵(<@709044657232936960_=5aevv=5b=49=52=43=5d>)
[19:04:18] <FromDiscord> <tandy> ty
[19:05:06] <Zevv> technically, there's nothing wrong with  a >= 200 and a <= 299, of course. that's what the range check will boil down to udner the hood anyway
[19:22:56] <FromDiscord> <Patitotective> Idea: `..` first parameter should be 0 as default, so you can write `..10`
[19:27:37] <FromDiscord> <haxscramper> In reply to @Patitotective "Idea: `..` first parameter": this was implemented but then deprecated
[19:27:42] <FromDiscord> <Patitotective> why?
[19:27:53] <FromDiscord> <Patitotective> (edit) "why? ... " 03added "😕"
[19:43:00] <FromDiscord> <haxscramper> https://github.com/nim-lang/RFCs/issues/311
[19:44:08] *** Joins: noeontheend (~noeonthee@207.237.194.194)
[19:45:43] <FromDiscord> <Patitotective> :o
[19:51:25] <FromDiscord> <Patitotective> Is it possible to build a free-dependencies _gintro_ application? Like, self-contain all the dependencies required
[19:59:03] <FromDiscord> <auxym> In reply to @Patitotective "why? 😕": you lose a explicitness to save a single character
[19:59:14] <FromDiscord> <auxym> would be my guess
[20:02:43] <FromDiscord> <Patitotective> yea, i just realize is not clear what it means
[20:02:51] <FromDiscord> <Patitotective> (edit) 04removed "i just realize"
[20:03:46] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[20:18:58] <anddam> Elegantbeef: still there? 
[20:19:12] <anddam> anyway I checked out the python binding since it's what I am most accustomed to
[20:19:30] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: leaving)
[20:19:32] <anddam> and the readme suggested it could be used straight away
[20:20:18] <anddam> different topic, I have 1.6.0 installed on this computer, is there a nimble way to upgrade to 1.6.2 or should I just paint over it with choosenim (like I did in first place to install nim)?
[20:57:39] <anddam> oh choosenim has me served already
[20:59:22] <FromDiscord> <Phil> sent a long message, see http://ix.io/3NU1
[21:00:10] <FromDiscord> <Phil> (edit) "http://ix.io/3NU1" => "http://ix.io/3NU2"
[21:00:45] <FromDiscord> <Phil> (edit) "http://ix.io/3NU2" => "http://ix.io/3NU3"
[21:10:50] <anddam> I am possibly doing something really wrong, I installed webgui package, then a simple "import webgui" in test.nim and `nim r test.nim` results in "/webgui-git/examples/test.nim(1, 8) Error: cannot open file: webgui"
[21:11:54] <anddam> the example.nim at https://github.com/marcomq/nimview/tree/main/examples has "import ../src/webgui" but isn't the point of installing a package just that you get the package namespace regardless of the source wd?
[21:32:10] <FromDiscord> <ajusa> In reply to @Isofruit "Wait, I'm designing myself": That's a wall of text but have you tried includes?
[21:32:32] <FromDiscord> <ajusa> Like have one models.nim file that just includes all the other files that you've split it into
[21:33:08] <FromDiscord> <ajusa> Unless you have mutually dependent types, then I think the compiler forces you to declare those in the same type section
[21:38:20] <FromDiscord> <Goel> I though the primitive type `int` was `int32` on x86 archit and `int64` in x64 archit, but it's not like that? Or maybe it takes that size but it remain of type `int`
[21:39:01] <FromDiscord> <Phil> In reply to @ajusa "That's a wall of": That would sort of work for models, as I tend to intentionally do multiple model-specific sub-models (e.g. Encounter needs a Diaryentry model, so they get a custom EncounterDiaryEntry Model which has only a subset of the data)
[21:39:45] <FromDiscord> <Phil> That does still leave the question open of the repositories though, where encounterRepository has a proc that depends on diaryEntryRepository, while diaryEntryRepository has its own proc that depends on a separate proc on encounterRepository
[21:40:02] <FromDiscord> <Goel> (edit) "I though the primitive type `int` was `int32` on x86 archit and `int64` in x64 archit, but it's not like that? Or maybe it takes that size but it remain of type `int`" => "sent a code paste, see https://play.nim-lang.org/#ix=3NUr"
[21:40:39] <FromDiscord> <Phil> Or wait, would "include" workon that to? I need to read up on that keyword
[21:41:17] *** Quits: k0mpjut0r (~k0mpjut0r@2a01:8740:1:706::2) (Ping timeout: 252 seconds)
[21:41:20] <FromDiscord> <Phil> Oh wow, yeah that might work, if it "copy pastes" the contents of one file into another file
[21:41:29] <FromDiscord> <Phil> I could have one mega repository file and a mega model file
[21:42:32] <FromDiscord> <konsumlamm> In reply to @Goel "I though the primitive": it's not about x86 vs x64 (those are two specific architectures), it's about 32 bit vs 64 bit architectures
[21:42:56] <FromDiscord> <konsumlamm> but the answer is that `int` and `int32`/`int64` have the same size, but they're not literally the same type
[21:43:25] <FromDiscord> <konsumlamm> whereas `float` is always an alias for `float64`
[21:43:26] <FromDiscord> <Goel> Wait what, why int32 and int64 have the same size?
[21:43:34] <FromDiscord> <konsumlamm> they don't
[21:44:07] <FromDiscord> <konsumlamm> (`int` and `int32`) or (`int` and `int64`)
[21:46:00] <FromDiscord> <Phil> Wait, that wouldn't give me access in encounterRepository.nim to diaryEntryRepository.nim, hmmm
[21:46:08] <FromDiscord> <Phil> (edit) "diaryEntryRepository.nim," => "diaryEntryRepository.nim and vice versa,"
[21:51:14] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[21:53:15] *** Joins: mahlon (~mahlon@martini.nu)
[22:02:36] <FromDiscord> <Phil> All SO gives me is "rethink your problem domain and make repositories for that", gna
[22:05:40] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[22:11:15] <FromDiscord> <gcao> Today I run into this fork of Nim called Nimskull (https://github.com/nim-works/nimskull). does anyone know anything about it?
[22:11:58] <FromDiscord> <haxscramper> Aside from plans in the readme etc.?
[22:12:10] <FromDiscord> <Phil> Ah, hax is here, I can save myself the typing
[22:12:49] <FromDiscord> <haxscramper> If you want the short rant-free version then it is a fork of nim for now
[22:13:19] <FromDiscord> <Phil> Wasn't the key differentiator your focus would be more on stability and less buggs?
[22:13:52] <FromDiscord> <haxscramper> yes, that hasn't changed
[22:14:07] <FromDiscord> <Phil> Check, just wanted to see whether I recalled that correctly
[22:14:36] <FromDiscord> <haxscramper> well, right now the focus is on the massive refactoring of the compiler impl. because it is barely maintainable
[22:15:37] <FromDiscord> <haxscramper> with some intermediate steps like minor https://github.com/nim-works/nimskull/pull/214 and major https://github.com/orgs/nim-works/projects/4 tooling improvement
[22:17:23] <FromDiscord> <lpha3ch0> sent a code paste, see https://play.nim-lang.org/#ix=3NUO
[22:18:16] <FromDiscord> <haxscramper> `&` can be an overloaded prefix oeprator
[22:18:22] <FromDiscord> <haxscramper> what is the full context of this code?
[22:18:38] <FromDiscord> <lpha3ch0> In reply to @haxscramper "what is the full": https://gist.github.com/khchen/5cd03eab742517fa20ccc688e6b1a1a6
[22:20:46] <FromDiscord> <haxscramper> https://github.com/khchen/winim/blob/master/winim/utils.nim#L43 someone can't use `addr`
[22:20:50] <FromDiscord> <haxscramper> (edit) "https://github.com/khchen/winim/blob/master/winim/utils.nim#L43 someone can't use `addr` ... " 03added "I guess"
[22:21:02] <FromDiscord> <haxscramper> this is a C-like addr version
[22:21:56] <FromDiscord> <Rika> Yikes
[22:22:38] <FromDiscord> <lpha3ch0> That's what it looked like to me but I was still confused because I was aware of it's application to concatenate strings and saw it was overloaded but couldn't find any references to how it was used other than concatenation.
[22:22:43] <FromDiscord> <haxscramper> In reply to @haxscramper "with some intermediate steps": btw if someone is interested in what they can theoreticallly get when implicit system import happens https://media.discordapp.net/attachments/371759389889003532/937057687169007667/151627106-713d4d46-ea9d-4694-a886-4d261eaa9d9b.png
[22:23:23] <FromDiscord> <lpha3ch0> It must be overloaded somewhere in winim. Thanks for your help.
[22:24:46] <FromDiscord> <haxscramper> '> somewhere↵↵https://github.com/khchen/winim/blob/f658fc523a7c8960b2f808d774b0f77cecec86db/winim/utils.nim#L43-L52 - this is where it is overloaded
[22:25:33] <FromDiscord> <haxscramper> In reply to @Isofruit "Ah, hax is here,": I probably should wait a little next time before jumping in
[22:28:34] <arkanoid> Any idea how to solve this issue when using OOP and finalizers? Have to fix without relying on declaring =destroy for backward compatibility: https://play.nim-lang.org/#ix=3NUW
[22:38:39] *** Joins: k0mpjut0r (~k0mpjut0r@79.124.7.34)
[22:57:22] <FromDiscord> <vindaar> https://play.nim-lang.org/#ix=3NVi
[22:57:23] <FromDiscord> <vindaar> that's what I'd do
[23:10:29] <FromDiscord> <krisppurg> In reply to @Rainbow Asteroids "does anyone know how": first things first, I think you need to get member from guild (because I think message.member doesnt have as much data). Then do something like member.computePerms(guild.channels[m.channel_id])
[23:11:11] <FromDiscord> <krisppurg> https://krisppurg.github.io/dimscord/dimscord/helpers.html#computePerms%2CGuild%2CRole
[23:12:40] <FromDiscord> <tandy> love it when you can see posts on nim forum but not actually visit them
[23:24:55] <arkanoid> vindaar, I don't understand your, example, it gives me the same error as before
[23:25:15] <arkanoid> do I have to define "gcDestructors"?
[23:25:25] <FromDiscord> <SecureThisShit> Stupid question. I have an byte sequence and would like to get a pointer to the first byte of it. How can I do that?
[23:25:47] <arkanoid> oh, you mean just branch code with and without destructors
[23:25:58] <FromDiscord> <vindaar> oops, the two branches are exchanged. The `defined(gcDestructors` should be the one that can define `=destroy` hooks. It's a variable that's automatically defined when compiling with ARC↵(<@709044657232936960_arkanoid=5b=49=52=43=5d>)
[23:27:01] <FromDiscord> <vindaar> if `s` is your `seq[byte]` (I assume that's what you mean by a byte sequence?) it's just `s[0].addr` (or possibly `unsafeAddr` depending on the variable. That'll change soon though...)↵(@SecureThisShit)
[23:27:55] <FromDiscord> <SecureThisShit> In reply to @vindaar "if `s` is your": Nice, that worked thanks!
[23:28:08] <FromDiscord> <SecureThisShit> Easy ^^
[23:28:17] <arkanoid> vindaar, ok, let me test this with a larger example
[23:29:08] *** Joins: lumo_e (~enrico@131.114.212.19)
[23:32:11] <arkanoid> what's happening to nim forum?
[23:32:30] *** Joins: vicfred (~vicfred@user/vicfred)
[23:32:47] <FromDiscord> <vindaar> what do you mean?↵(<@709044657232936960_arkanoid=5b=49=52=43=5d>)
[23:33:44] <arkanoid> I was receiving cloudflare 502 bad gateway a minute ago, but now it loads
[23:34:05] <arkanoid> now again
[23:34:21] <arkanoid> maybe just some pages? https://forum.nim-lang.org/t/4132
[23:34:47] <arkanoid> should I report it?
[23:35:25] <FromDiscord> <vindaar> oh, indeed
[23:43:37] <arkanoid> done
[23:44:03] <arkanoid> do I have to declare the non-ref type to declare it's =destroy?
[23:45:15] <arkanoid> like `ParentObj = object of RootObj` + `Parent = ref ParentObj` + `proc `=destroy`(self: Parent)` ?
[23:45:46] <arkanoid> sorry, third should be `self: ParentObj`
[23:51:04] <FromDiscord> <demotomohiro> You can also define destructor for ref object type like ``=destroy`(self: Parent()[].typeof)`
[23:51:42] <FromDiscord> <demotomohiro> `=destroy`(self: Parent()[].typeof)
[23:51:49] <arkanoid> vindaar, btw the solution you suggested is not possible to apply in my context as it would break existing code that use the `proc delete(x: T) = x.ParentT.delete` pattern
[23:53:23] <FromDiscord> <vindaar> existing code in the sense of users being dependent on it or you having to change your  code?↵(<@709044657232936960_arkanoid=5b=49=52=43=5d>)
[23:57:00] <arkanoid> the first one
[23:58:41] <FromDiscord> <Patitotective> What are you working on? @Arkanoid :p
[23:58:47] <FromDiscord> <vindaar> hm \:/
[23:59:23] <FromDiscord> <vindaar> I'd still work toward a new major release with a breaking API, because `=destroy` hooks aren't going away
