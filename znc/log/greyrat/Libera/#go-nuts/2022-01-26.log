[00:04:43] *** Quits: deepy (deepy@user/deepy) (Read error: Connection reset by peer)
[00:06:09] *** Joins: deepy (deepy@user/deepy)
[00:07:03] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 256 seconds)
[00:09:32] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 250 seconds)
[00:09:39] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[00:09:50] *** Joins: mickey8 (~user@user/mickey)
[00:10:45] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:144d:71e8:f3fd:20f1) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:10:51] *** Joins: shtirlic (~shtirlic@95-55-121-107.dynamic.avangarddsl.ru)
[00:13:52] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:2055:673d:3155:da63) (Ping timeout: 250 seconds)
[00:18:46] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[00:27:58] *** Quits: absc (~absc@dynamic-adsl-94-34-167-118.clienti.tiscali.it) (Remote host closed the connection)
[00:29:34] *** Joins: krackout (~krackout@194.219.131.3.dsl.dyn.forthnet.gr)
[00:35:27] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[00:39:10] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[00:39:24] *** Quits: girafe (~girafe@176-147-142-235.abo.bbox.fr) (Quit: Leaving)
[00:39:54] *** Joins: girafe (~girafe@176-147-142-235.abo.bbox.fr)
[00:47:03] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[00:49:05] *** Quits: dandaman (~Adium@c-67-176-92-29.hsd1.co.comcast.net) (Quit: Leaving.)
[00:49:48] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:51:05] *** Quits: bluedust (~bluedust@103.165.167.52) (Read error: Connection reset by peer)
[00:51:41] *** Joins: bluedust (~bluedust@103.165.167.52)
[00:54:45] *** Quits: krackout (~krackout@194.219.131.3.dsl.dyn.forthnet.gr) (Quit: φεύγω, γεια σας!)
[00:58:03] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 256 seconds)
[01:03:53] *** Quits: jiqiren_ (~jiqiren@oh-hi.org) (Quit: leaving)
[01:04:22] *** Joins: arcatech (~arcatech@user/arcatech)
[01:05:00] *** Joins: jiqiren (~jiqiren@oh-hi.org)
[01:06:18] *** Quits: idstam (~idstam@2.70.151.23.mobile.tre.se) (Ping timeout: 250 seconds)
[01:08:11] *** Joins: idstam (~idstam@37.250.42.49.bredband.tre.se)
[01:15:37] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[01:32:17] *** Quits: shka (~herr@109.231.0.226) (Ping timeout: 240 seconds)
[01:33:12] *** Joins: crashrep (~crashrep@user/crashrep)
[01:37:00] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[01:37:09] *** Quits: moto (~moto@user/moto) (Ping timeout: 256 seconds)
[01:39:00] *** Joins: moto (~moto@user/moto)
[01:42:20] *** Quits: carlavilla (~carlavill@2a0c:5a84:320d:6900:221:6bff:fe3b:cee4) (Quit: awwww)
[01:51:13] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Quit: The Lounge - https://thelounge.chat)
[01:51:36] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[01:52:45] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[01:54:16] *** Joins: crashrep (~crashrep@user/crashrep)
[01:54:59] *** Quits: analogsalad (~analogsal@user/analogsalad) (Remote host closed the connection)
[01:55:17] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 256 seconds)
[01:56:51] *** Joins: Torr (~Torr@user/torr)
[01:58:45] *** Joins: bluedust_ (~bluedust@59.89.217.203)
[02:02:02] *** Quits: bluedust (~bluedust@103.165.167.52) (Ping timeout: 240 seconds)
[02:08:21] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[02:09:22] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: your partner prefers dildos)
[02:26:10] *** Quits: davidkrauser (~davidkrau@user/davidkrauser) (Quit: Leaving)
[02:32:48] *** Joins: LiftLeft (~LiftLeft@fixed-138-186-31-170.totalplay.net)
[02:33:31] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:144d:71e8:f3fd:20f1)
[02:35:25] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[02:38:05] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:144d:71e8:f3fd:20f1) (Client Quit)
[02:40:03] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Quit: mugen)
[02:43:34] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[02:44:32] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Client Quit)
[02:44:45] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[02:45:37] *** Quits: wlperdue (~wlperdue@ip24-254-86-223.sb.sd.cox.net) (Ping timeout: 240 seconds)
[02:49:00] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[02:49:01] *** Quits: kinlo (~peter@user/kinlo) (Ping timeout: 268 seconds)
[03:01:39] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[03:03:06] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[03:05:07] *** Joins: art_vandelay (~art_vande@142.126.234.156)
[03:08:05] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[03:25:50] *** Quits: jespada (~jespada@87.74.36.188) (Ping timeout: 250 seconds)
[03:27:14] *** Joins: jespada (~jespada@87.74.36.188)
[03:28:03] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Read error: Connection reset by peer)
[03:29:09] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[03:32:14] <dostoyevsky2> I've subscribed to the go-nuts ML and can tag all messages with a label but half of the emails actually end up in spam... so if I click on the label in gmail I don't see those messages.. even though I can see that they have it when I look into the spam folder...
[03:32:15] *** Joins: f33d1[m] (~g0nkstead@2001:470:69fc:105::1:320b)
[03:32:15] *** Joins: MarkWatson[m] (~markwatso@2001:470:69fc:105::1:5be8)
[03:32:15] *** Joins: pagalingling[m] (~pagalingl@2001:470:69fc:105::1:60b9)
[03:32:46] <b0nn> gmail has a "Don't send these to spam" thing when you set up the tag
[03:33:03] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:a15e:646d:e227:5233)
[03:35:16] <b0nn> It's: "Filter messages like these" | <fill out fields> | "Create Filter" | "check "Never send it to Spam" and "Also apply filter to matching conversations"
[03:35:51] <dostoyevsky2> b0nn: Ah, I am using the basic html version were this doesn't seem to be available
[03:36:02] <b0nn> FTR I used to set my filters up to "Skip the Inbox" but I've found that I let the mail hit the inbox, then I removed the Inbox tag when I've read it
[03:36:19] *** Joins: kinlo (~peter@user/kinlo)
[03:37:38] *** Joins: rcernin (~rcernin@101.189.141.138)
[03:38:50] *** Quits: leonarth (~leonarth@user/leonarth) (Quit: 84R6CDo3S62HkuYSkVXBr7fXp2wn1XRHeQZ8QPrqxbXvfXP33EH4MhueE2ifPcRbbQQhVXPheMD957muhhBtrvs2QKykeA3)
[03:39:16] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:a15e:646d:e227:5233) (Ping timeout: 250 seconds)
[03:44:26] *** Quits: bluedust_ (~bluedust@59.89.217.203) (Read error: Connection reset by peer)
[03:45:32] *** Quits: kinlo (~peter@user/kinlo) (Ping timeout: 240 seconds)
[03:48:11] *** Joins: smach (~savio@177.12.44.211)
[03:50:37] *** Joins: crashrep (~crashrep@user/crashrep)
[03:50:49] *** Joins: kinlo (~peter@user/kinlo)
[03:53:11] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[04:03:17] *** Quits: frebib (~frebibcha@nerdhouse.io) (Ping timeout: 240 seconds)
[04:08:03] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:2c10:39f9:e5eb:9172)
[04:08:43] *** Joins: dsrt^ (~dsrt@96-86-240-178-static.hfc.comcastbusiness.net)
[04:09:50] *** Quits: RhinosF1 (uid339563@miraheze/RhinosF1) (Quit: Connection closed for inactivity)
[04:15:37] *** Quits: rcernin (~rcernin@101.189.141.138) (Ping timeout: 240 seconds)
[04:18:00] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[04:18:18] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[04:19:12] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:2c10:39f9:e5eb:9172) (Quit: Client closed)
[04:21:01] *** Quits: itsalexjones (~itsalexjo@82.4.99.241) (Read error: Connection reset by peer)
[04:23:50] *** Joins: noarb (~noarb@user/noarb)
[04:27:45] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[04:28:02] *** Joins: mickey8 (~user@user/mickey)
[04:29:10] *** Quits: krux02 (~krux02@p200300e81723dd00b48b627b8314596f.dip0.t-ipconnect.de) (Remote host closed the connection)
[04:34:37] *** Quits: ItsNotGoodName0 (~ItsNotGoo@c-73-83-144-140.hsd1.wa.comcast.net) (Quit: The Lounge - https://thelounge.chat)
[04:34:45] *** Joins: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com)
[04:34:57] *** Joins: ItsNotGoodName0 (~ItsNotGoo@c-73-83-144-140.hsd1.wa.comcast.net)
[04:42:02] *** Quits: g2anj (~v@58.228.230.4) (Ping timeout: 240 seconds)
[04:46:01] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:47:37] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:48:51] *** Joins: hanzo (uid532183@user/hanzo)
[04:59:21] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[05:03:20] *** Quits: kinlo (~peter@user/kinlo) (Ping timeout: 250 seconds)
[05:04:25] *** Joins: naicam|ne (~naicam|ne@wireguard/tunneler/naicamne)
[05:09:38] *** Quits: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[05:13:13] *** Joins: kinlo (~peter@user/kinlo)
[05:17:27] *** Quits: R2robot (~R2robot@user/r2robot) (Quit: Pull the lever, Kronk.  Wrong leverrrrrrr!)
[05:18:52] *** Quits: dr0n (~nabromov@176.26.119.61) (Ping timeout: 268 seconds)
[05:20:13] *** Joins: R2robot (~R2robot@user/r2robot)
[05:24:41] *** Joins: g2anj (~v@58.228.230.4)
[05:29:20] *** Quits: Nex8192 (~Nex8192@user/nex8192) (Quit: Don't watch me die)
[05:29:35] *** Joins: Nex8192 (~Nex8192@user/nex8192)
[05:46:53] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-08e4-8030-e2cd-d870.res6.spectrum.com)
[05:48:50] *** Quits: moto (~moto@user/moto) (Ping timeout: 250 seconds)
[05:50:32] *** Quits: eXtr3m0 (~eXtr3m0@user/eXtr3m0) (Ping timeout: 240 seconds)
[05:50:57] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[05:52:53] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Read error: Connection reset by peer)
[06:00:23] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[06:00:34] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[06:05:48] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[06:06:50] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[06:08:29] *** Quits: lilgopher (~textual@2601:241:8000:38f0:19e4:7178:7a1:26c0) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:19:00] *** Joins: frebib (~frebibcha@nerdhouse.io)
[06:23:21] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-08e4-8030-e2cd-d870.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[06:24:51] *** Joins: califax- (~califax@user/califx)
[06:27:51] *** Quits: monoxane (~monoxane@user/monoxane) (Ping timeout: 256 seconds)
[06:28:17] *** Joins: dr0n (~nabromov@176.26.119.61)
[06:28:21] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[06:28:21] *** califax- is now known as califax
[06:30:53] *** Joins: monoxane (~monoxane@user/monoxane)
[06:50:35] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[06:54:28] *** Joins: DagoRed (~DagoRed@user/dagored)
[07:02:04] *** Quits: dr0n (~nabromov@176.26.119.61) (Quit: WeeChat 2.8)
[07:03:00] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:05:46] *** Joins: moto (~moto@user/moto)
[07:06:27] *** Joins: vj-- (~vj@bras-base-toroon3514w-grc-83-174-93-56-58.dsl.bell.ca)
[07:06:57] *** Quits: art_vandelay (~art_vande@142.126.234.156) (Ping timeout: 256 seconds)
[07:08:44] *** Joins: art_vandelay (~art_vande@142.126.234.156)
[07:23:27] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-08e4-8030-e2cd-d870.res6.spectrum.com)
[07:24:33] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-08e4-8030-e2cd-d870.res6.spectrum.com) (Client Quit)
[07:45:49] *** Quits: rewt (~default@user/rewt) (Read error: Connection reset by peer)
[07:45:52] *** Quits: pepee (~pepee@user/pepee) (Quit: WeeChat 2.8)
[07:47:35] *** Joins: rewt (~default@user/rewt)
[08:03:08] *** Joins: Atque (~Atque@user/atque)
[08:05:36] *** Joins: yagamilito (~yagamilit@98.51.90.15)
[08:06:29] *** Quits: yagamilito (~yagamilit@98.51.90.15) (Client Quit)
[08:07:13] *** Quits: LiftLeft (~LiftLeft@fixed-138-186-31-170.totalplay.net) (Ping timeout: 268 seconds)
[08:10:50] *** Quits: noboruma (~noboruma@202-189-221-251.tokyo.fdn.vectant.ne.jp) (Remote host closed the connection)
[08:21:21] *** Joins: LiftLeft (~LiftLeft@mobile-166-172-56-62.mycingular.net)
[08:26:02] *** Quits: kinlo (~peter@user/kinlo) (Ping timeout: 240 seconds)
[08:31:43] *** Joins: tau (tau@user/tau)
[08:33:28] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:4526:2037:e10a:c5df)
[08:37:44] *** Joins: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de)
[08:41:56] *** Joins: kinlo (~peter@user/kinlo)
[08:44:15] *** Quits: Nixieboluo (~Nixiebolu@47.93.220.75) (Quit: Ping timeout (120 seconds))
[08:44:37] *** Joins: Nixieboluo (~Nixiebolu@47.93.220.75)
[08:54:03] *** Quits: LiftLeft (~LiftLeft@mobile-166-172-56-62.mycingular.net) (Ping timeout: 256 seconds)
[08:58:20] *** Joins: et_ (~et@user/et)
[08:59:38] *** Quits: et (~et@user/et) (Ping timeout: 268 seconds)
[08:59:38] *** et_ is now known as et
[09:04:03] *** Quits: blinux (~blinux@pool-72-78-144-199.phlapa.fios.verizon.net) (Quit: WeeChat 3.0)
[09:06:10] *** Joins: LiftLeft (~LiftLeft@fixed-138-186-31-170.totalplay.net)
[09:06:32] *** Quits: kinlo (~peter@user/kinlo) (Ping timeout: 240 seconds)
[09:25:14] *** Joins: kinlo (~peter@user/kinlo)
[09:35:37] *** Quits: whoami (~whoami@d118-75-170-49.try.wideopenwest.com) (Ping timeout: 240 seconds)
[09:40:41] *** Joins: whoami (~whoami@d118-75-170-49.try.wideopenwest.com)
[09:44:33] *** Quits: Wouter0100 (~Wouter010@entry.nbg.netvos.nl) (Read error: Connection reset by peer)
[09:44:44] *** Joins: Wouter0100 (~Wouter010@entry.nbg.netvos.nl)
[09:53:05] *** Quits: Xjs (~jannis@user/xjs) (Quit: Good night.)
[09:59:13] *** Quits: whoami (~whoami@d118-75-170-49.try.wideopenwest.com) (Ping timeout: 256 seconds)
[10:02:20] *** Joins: whoami (~whoami@d118-75-170-49.try.wideopenwest.com)
[10:07:04] *** Quits: Wouter0100 (~Wouter010@entry.nbg.netvos.nl) (Remote host closed the connection)
[10:07:16] *** Joins: Wouter0100 (~Wouter010@entry.nbg.netvos.nl)
[10:10:17] *** Quits: whoami (~whoami@d118-75-170-49.try.wideopenwest.com) (Ping timeout: 240 seconds)
[10:11:01] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[10:20:40] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[10:20:58] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:4526:2037:e10a:c5df) (Quit: Client closed)
[10:23:49] *** Joins: whoami (~whoami@d118-75-170-49.try.wideopenwest.com)
[10:25:18] *** Joins: mic4ael (~mic4ael@kolodzie-pc.cern.ch)
[10:29:56] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[10:32:23] *** Quits: Batzy (~quassel@user/batzy) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[10:33:24] *** Joins: Batzy (~quassel@user/batzy)
[10:39:48] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:41:01] *** Joins: lilgopher (~textual@2601:241:8000:38f0:ecca:9804:6958:c845)
[10:44:22] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 250 seconds)
[10:49:35] *** Joins: RhinosF1 (uid339563@miraheze/RhinosF1)
[11:14:54] *** Quits: bkircher (~bkircher@2001:a61:2506:9301:af0b:a40a:8043:cfe7) (Quit: Leaving)
[11:16:26] *** Quits: kinlo (~peter@user/kinlo) (Ping timeout: 250 seconds)
[11:23:10] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[11:25:18] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:144d:71e8:f3fd:20f1)
[11:27:20] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[11:27:31] *** Joins: Atque (~Atque@user/atque)
[11:27:57] *** Joins: kinlo (~peter@user/kinlo)
[11:28:06] *** Joins: mikoto-chan (~mikoto-ch@84.199.144.235)
[11:29:28] *** Joins: shka (~herr@109.231.0.226)
[11:30:12] *** Joins: rendar (~rendar@user/rendar)
[11:31:29] *** Quits: Batzy (~quassel@user/batzy) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[11:32:30] *** Joins: Batzy (~quassel@user/batzy)
[11:34:34] *** Joins: saschagrunert (~saschagru@46.128.124.48)
[11:44:26] *** Joins: xsteadfastx (~marv@94.31.106.190)
[11:49:31] *** Joins: leonthemisfit (~Leon@user/leonthemisfit)
[11:51:50] *** Joins: Xjs (~jannis@user/xjs)
[11:55:29] *** Quits: lilgopher (~textual@2601:241:8000:38f0:ecca:9804:6958:c845) (Quit: Textual IRC Client: www.textualapp.com)
[11:58:35] *** Joins: fef (~thedawn@user/thedawn)
[12:02:06] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[12:05:54] *** Joins: bluedust (~bluedust@103.161.144.140)
[12:14:57] *** Quits: kinlo (~peter@user/kinlo) (Ping timeout: 240 seconds)
[12:15:34] *** Parts: _mikey (~mikey@user/mikey/x-4335048) (WeeChat 3.4)
[12:17:51] *** Quits: Latrina (~Latrina@user/latrina) (Ping timeout: 256 seconds)
[12:18:41] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[12:18:58] *** Joins: bindu (~bindu@user/bindu)
[12:21:17] *** Quits: zwr (~zwr@2804:d45:b966:fb00:5d44:edfe:270d:6900) (Ping timeout: 240 seconds)
[12:22:17] *** Joins: zwr (~zwr@2804:d45:b966:fb00:1974:a2f:e75f:4c0b)
[12:23:41] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: your partner prefers dildos)
[12:27:37] *** Joins: absc_ (~absc@81.31.144.178)
[12:28:41] *** Quits: shtirlic (~shtirlic@95-55-121-107.dynamic.avangarddsl.ru) (Ping timeout: 268 seconds)
[12:29:05] *** Joins: shtirlic (~shtirlic@95-55-121-107.dynamic.avangarddsl.ru)
[12:36:05] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[12:40:32] *** Joins: kinlo (~peter@user/kinlo)
[12:40:56] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:144d:71e8:f3fd:20f1) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:44:35] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[12:45:40] *** Joins: leonarth (~leonarth@user/leonarth)
[12:50:33] *** Joins: eXtr3m0 (~eXtr3m0@user/eXtr3m0)
[13:00:12] *** Quits: bluedust (~bluedust@103.161.144.140) (Remote host closed the connection)
[13:00:48] *** Joins: bluedust (~bluedust@103.161.144.140)
[13:04:37] *** Quits: kinlo (~peter@user/kinlo) (Ping timeout: 240 seconds)
[13:04:57] *** Quits: bluedust (~bluedust@103.161.144.140) (Ping timeout: 240 seconds)
[13:11:44] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[13:13:03] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[13:15:10] *** Quits: kodah- (~kodah@user/kodah) (Ping timeout: 250 seconds)
[13:16:17] *** Joins: kodah- (~kodah@user/kodah)
[13:17:02] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 240 seconds)
[13:17:17] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Ping timeout: 240 seconds)
[13:22:31] *** Joins: boof (~rickybob@gateway/vpn/pia/rickybob)
[13:27:04] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[13:28:39] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Client Quit)
[13:29:46] *** Joins: kinlo (~peter@user/kinlo)
[13:33:56] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[13:38:19] *** Quits: DreamweaverN (~Dreamweav@37.48.111.199) (Ping timeout: 250 seconds)
[13:40:16] *** Joins: DreamweaverN (~Dreamweav@2001:1af8:4700:b0d0:a800::)
[13:40:40] *** Quits: amk (~amk@109.255.169.126) (Remote host closed the connection)
[13:41:40] *** Joins: amk (~amk@109.255.169.126)
[13:44:58] *** Joins: Ergo^ (~ergo@91.238.59.144)
[13:47:30] *** Joins: Atque (~Atque@user/atque)
[13:48:54] *** Joins: krux02 (~krux02@p200300e81723dd00b48b627b8314596f.dip0.t-ipconnect.de)
[13:49:39] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: Leaving)
[14:21:49] *** Joins: nathanael (~nathanael@user/nathanael)
[14:22:43] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:9f1:afa3:3f2b:4176)
[14:25:48] *** Quits: theoceaniscool (~theoceani@119.12.241.29) (Ping timeout: 250 seconds)
[14:26:28] *** absc_ is now known as absc
[14:27:37] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:9f1:afa3:3f2b:4176) (Ping timeout: 240 seconds)
[14:32:44] *** Quits: mikoto-chan (~mikoto-ch@84.199.144.235) (Ping timeout: 250 seconds)
[14:43:41] *** Quits: Tharro (~Tharro@2001:bc8:1824:1623::1) (Ping timeout: 245 seconds)
[14:47:16] *** Quits: dsrt^ (~dsrt@96-86-240-178-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[14:51:08] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 268 seconds)
[15:02:28] *** Joins: theoceaniscool (~theoceani@119.12.241.29)
[15:04:29] *** Joins: Tharro (~Tharro@2001:bc8:1824:1623::1)
[15:13:38] *** Joins: bluedust (~bluedust@103.161.144.140)
[15:15:08] *** Quits: bluedust (~bluedust@103.161.144.140) (Remote host closed the connection)
[15:18:01] *** Quits: Tharro (~Tharro@2001:bc8:1824:1623::1) (Quit: Bye, bye!)
[15:18:18] *** Joins: Tharro (~Tharro@2001:bc8:1824:1623::1)
[15:25:51] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:144d:71e8:f3fd:20f1)
[15:29:53] *** Joins: astonex_ (~astonex@14.52.76.151)
[15:29:59] *** Quits: astonex_ (~astonex@14.52.76.151) (Client Quit)
[15:30:04] *** Joins: astonex (~astonex@14.52.76.151)
[15:33:09] *** Joins: souvik (~souvik@103.82.81.39)
[15:38:05] *** Joins: itsalexjones (~itsalexjo@82.4.99.241)
[15:38:05] *** Quits: souvik (~souvik@103.82.81.39) (Ping timeout: 256 seconds)
[15:43:39] *** Joins: itsalexjones_ (~itsalexjo@82.4.99.241)
[15:43:57] *** Quits: itsalexjones (~itsalexjo@82.4.99.241) (Ping timeout: 240 seconds)
[15:46:49] *** Joins: on^ (~on@96-86-240-178-static.hfc.comcastbusiness.net)
[16:08:04] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[16:16:23] *** Joins: BrunoFontes (~bruno@187.115.253.43)
[16:18:46] *** Quits: Xjs (~jannis@user/xjs) (Quit: Bye.)
[16:21:08] *** Joins: yoonkn (~user@175.197.208.79)
[16:26:34] *** Quits: Echoz (~chris@user/echoz) (Quit: WeeChat 3.4)
[16:37:13] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[16:37:13] *** Joins: Echoz (~chris@user/echoz)
[16:43:03] *** Joins: brooks0 (~brooks@23.157.160.131)
[16:45:53] *** Quits: brooks (~brooks@23.157.160.131) (Ping timeout: 256 seconds)
[16:49:48] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[16:53:42] *** Joins: pepee (~pepee@user/pepee)
[16:54:37] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 240 seconds)
[17:00:30] *** Quits: pagalingling (~pagalingl@2a09:5e40:1030:e30:76:6f0c:1e52:f065) (Ping timeout: 250 seconds)
[17:02:21] *** Joins: pagalingling (~pagalingl@2a09:5e40:1030:e30:76:6f0c:1e52:f065)
[17:02:27] *** Joins: analogsalad (~analogsal@user/analogsalad)
[17:10:27] *** Quits: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-52-65-93-194-105.dsl.bell.ca) (Ping timeout: 256 seconds)
[17:11:40] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:144d:71e8:f3fd:20f1) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:13:55] *** Joins: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-251.dsl.bell.ca)
[17:15:45] *** Joins: bluedust (~bluedust@103.161.144.140)
[17:20:17] *** Quits: bluedust (~bluedust@103.161.144.140) (Ping timeout: 240 seconds)
[17:23:57] *** Joins: edrocks (~Ed@user/edrocks)
[17:24:45] *** Quits: edrocks (~Ed@user/edrocks) (Client Quit)
[17:25:35] *** Joins: edrocks2 (uid538213@id-538213.uxbridge.irccloud.com)
[17:25:50] *** Quits: astonex (~astonex@14.52.76.151) (Quit: Leaving)
[17:27:26] *** Joins: edrocks (~Ed@user/edrocks)
[17:28:37] *** Quits: BrunoFontes (~bruno@187.115.253.43) (Ping timeout: 240 seconds)
[17:30:32] *** Quits: nathanael (~nathanael@user/nathanael) (Ping timeout: 240 seconds)
[17:35:08] *** Quits: analogsalad (~analogsal@user/analogsalad) (Quit: bye)
[17:35:51] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[17:36:49] *** Joins: nhanb_ (~nhanb@171.232.78.213)
[17:37:32] *** Quits: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-251.dsl.bell.ca) (Ping timeout: 240 seconds)
[17:40:24] *** Quits: nhanb_ (~nhanb@171.232.78.213) (Client Quit)
[17:40:37] *** Joins: nhanb_ (~nhanb@171.232.78.213)
[17:40:53] *** Quits: nhanb_ (~nhanb@171.232.78.213) (Client Quit)
[17:42:21] *** Joins: nhanb_ (~nhanb@171.232.78.213)
[17:42:35] *** Quits: nhanb_ (~nhanb@171.232.78.213) (Client Quit)
[17:42:49] *** Joins: nhanb_ (~nhanb@171.232.78.213)
[17:43:05] *** nhanb_ is now known as nhanb
[17:43:15] *** Quits: nhanb (~nhanb@171.232.78.213) (Client Quit)
[17:43:21] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:144d:71e8:f3fd:20f1)
[17:43:29] *** Joins: nhanb_ (~nhanb@171.232.78.213)
[17:43:44] *** Quits: nhanb_ (~nhanb@171.232.78.213) (Client Quit)
[17:43:53] *** Quits: xsteadfastx (~marv@94.31.106.190) (Ping timeout: 256 seconds)
[17:48:49] *** Joins: pieguy128 (~pieguy128@bas8-montreal02-65-93-195-202.dsl.bell.ca)
[17:55:00] *** Joins: arkurious (~arkurious@user/arkurious)
[18:00:13] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-14e7-49c4-8e85-9c7b.res6.spectrum.com)
[18:05:39] *** Joins: mug3n (~mugen@gateway/tor-sasl/mugen)
[18:08:24] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[18:13:21] *** Quits: on^ (~on@96-86-240-178-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[18:22:13] *** Quits: defn (~n0b0dy@user/defn) (Ping timeout: 256 seconds)
[18:23:03] *** glats_ is now known as glats
[18:24:19] <aLeSD> hi all
[18:24:27] *** Joins: defn (~n0b0dy@user/defn)
[18:24:53] <aLeSD> is ti possible to use commit of a library to be used in my go project ?
[18:25:45] <EdFletcher> aLeSD: It depends on how the library is licensed
[18:25:56] <aLeSD> MIT
[18:26:21] <aLeSD> which is the syntax in the go.mod file ?
[18:26:42] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:144d:71e8:f3fd:20f1) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:27:52] *** Joins: davidkrauser (~davidkrau@user/davidkrauser)
[18:32:52] *** Joins: The_Loko (~The_Loko@79.116.24.80)
[18:36:52] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-14e7-49c4-8e85-9c7b.res6.spectrum.com) (Remote host closed the connection)
[18:40:45] *** Joins: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net)
[18:44:14] *** Joins: llorllale (~llorllale@198.98.119.85)
[18:50:44] *** Joins: lilgopher (~textual@2601:241:8000:38f0:19e4:7178:7a1:26c0)
[18:54:58] *** Quits: andlabs (~andlabs@70.107.171.168) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:57:54] *** Joins: sir-_RaIsei_- (~sir-_Rals@2600:8801:1b84:5400:340f:b285:21b3:c8d6)
[18:58:06] *** Parts: sir-_RaIsei_- (~sir-_Rals@2600:8801:1b84:5400:340f:b285:21b3:c8d6) ()
[19:01:37] *** Quits: art_vandelay (~art_vande@142.126.234.156) (Ping timeout: 240 seconds)
[19:03:26] *** Joins: art_vandelay (~art_vande@142.126.234.156)
[19:03:48] <dostoyevsky2> I tried to add a new function to sync.Map but seems I lose all of sync.Map's functions when I do `type S sync.map'  https://go.dev/play/p/U5uHLxuKZbf
[19:04:38] *** Joins: xsteadfastx (~marv@94.31.99.67)
[19:05:18] <bookworm> https://go.dev/play/p/CbibHEdUm0y dostoyevsky2
[19:06:23] <bookworm> needs a New method though to initialize it
[19:06:24] <dostoyevsky2> bookworm: oh, great!
[19:07:24] <dostoyevsky2> https://go.dev/play/p/lV2nErcGxox <- seems to work now with Store/contains/Load
[19:10:30] *** Joins: andlabs (~andlabs@2605:ef80:8096:4071:902b:e74c:ad34:1750)
[19:10:56] *** Quits: jzacsh[m] (~jzacshdax@2001:470:69fc:105::1:3a69) (Quit: Client limit exceeded: 20000)
[19:13:06] *** Quits: xsteadfastx (~marv@94.31.99.67) (Ping timeout: 250 seconds)
[19:15:58] *** Quits: RhinosF1 (uid339563@miraheze/RhinosF1) (Quit: Connection closed for inactivity)
[19:16:39] *** Joins: nhanb (522d4a25ea@2604:bf00:561:2000::13b)
[19:17:11] *** Quits: AsenMx (~asen@user/asenmx) (Ping timeout: 256 seconds)
[19:19:26] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[19:19:41] *** Joins: mickey8 (~user@user/mickey)
[19:23:17] *** Quits: mattmurr[m] (~mattmurrm@2001:470:69fc:105::1:5ea0) (Quit: Client limit exceeded: 20000)
[19:24:45] *** Joins: RhinosF1 (uid339563@miraheze/RhinosF1)
[19:24:54] <dostoyevsky2> it's neat that I could replace my map with a sync.Map to avoid data races, but there doesn't seem a sync.Array or the like... only sync.Pool... maybe that'll do
[19:25:07] *** Joins: jzacsh[m] (~jzacshdax@2001:470:69fc:105::1:3a69)
[19:25:07] *** Joins: mattmurr[m] (~mattmurrm@2001:470:69fc:105::1:5ea0)
[19:25:11] *** Joins: arcatech (~arcatech@user/arcatech)
[19:26:00] <A_Dragon> please dont use sync.map, for anything x.x
[19:26:22] <bookworm> why?
[19:27:17] <dostoyevsky2> A_Dragon: I don't want to implement these thread-safe data structures on my own...
[19:27:37] <A_Dragon> bookworm: because its slow and generally not intended for anything outside of very specific use cases
[19:27:49] <A_Dragon> generally its faster to use a sync.mutex to guard a normal map
[19:28:12] <dostoyevsky2> and it quieted `go run -race'
[19:28:14] <bookworm> then what on earth is sync.map doing if not that?
[19:28:22] * bookworm should look at the code
[19:28:27] <A_Dragon> bookworm: just read the docs
[19:28:37] <A_Dragon> The Map type is specialized. Most code should use a plain Go map instead, with separate locking or coordination, for better type safety and to make it easier to maintain other invariants along with the map content.
[19:28:42] <A_Dragon> https://pkg.go.dev/sync#Map
[19:29:11] <A_Dragon> its a map *IMPLEMENTATION*, its not just a struct { map[str]interface{}; sync.Mutex }
[19:29:48] <bookworm> indeed, never used it so far
[19:30:06] <A_Dragon> you should essentially never need it
[19:30:52] *** Quits: beholders_eye (~weechat@2804:1b3:70c3:fcf9:7779:33f5:462c:7dec) (Quit: WeeChat 3.3)
[19:31:18] <A_Dragon> sync.Map is one of the few things I'd remove from the stdlib
[19:31:23] <A_Dragon> because its a trap for new devs
[19:31:49] <bookworm> we should get some pretty large improvements to general datastructures once generics are in
[19:32:11] <bookworm> using an empty interface should then be a thing of the past mostly
[19:32:11] <A_Dragon> there will likely be a few generic things in 1.19
[19:32:22] <A_Dragon> no, empty interfaces have their place
[19:32:35] <A_Dragon> eg json will still require them
[19:32:39] <bookworm> always will. Data structures aren't such places though
[19:32:53] <dostoyevsky2> bookworm: orderedmap would be nice too but I don't have high hopes
[19:32:57] <A_Dragon> unless you want to hold multiple distinct types :P
[19:33:17] <bookworm> Sure, but heterogeneous containers are rather seldom no?
[19:33:30] <bookworm> at least if you value your sanity
[19:33:41] <A_Dragon> dostoyevsky2: keys := make([]string, 0, len(someMap); for k in someMap { keys.append(k) }
[19:33:55] <A_Dragon> sort.Strings(keys)
[19:35:26] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[19:36:19] *** Quits: andlabs (~andlabs@2605:ef80:8096:4071:902b:e74c:ad34:1750) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:37:49] *** Quits: iryith (~iryith3@user/iryith) (Ping timeout: 240 seconds)
[19:38:51] *** Joins: beholders_eye (~weechat@2804:1b3:70c3:fcf9:7779:33f5:462c:7dec)
[19:41:44] <dostoyevsky2> A_Dragon: I have this case with YAML documents, where the order of keys is important.. so just sorting it doesn't help.  I defined a custom precedence of the keys so I get the same results at the end for the command line where the keys end up as parameters.  Maybe just being to implement data types would help, where one could implement a func [](key, value)  would be helpful
[19:42:14] <A_Dragon> []strict{key string; value interface{}}
[19:42:17] <A_Dragon> struct*
[19:42:33] <A_Dragon> [][2]interface{}
[19:42:40] <A_Dragon> [][2]string
[19:42:54] *** Joins: AsenMx (~asen@user/asenmx)
[19:44:21] <dostoyevsky2> A_Dragon: how would you do a lookup in that datastructure?  like m[key] ?
[19:44:31] <A_Dragon> you couldnt
[19:44:52] <A_Dragon> implementing indexing would be nice
[19:45:45] <A_Dragon> but you could also just func (m *myMap[K, T]) Index(key K) V
[19:45:57] *** Quits: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[19:46:29] <dostoyevsky2> A_Dragon: yeah, but then I just would abolish the standard map/array syntaxes completely...
[19:46:38] <A_Dragon> and that matters?
[19:46:45] *** Quits: beholders_eye (~weechat@2804:1b3:70c3:fcf9:7779:33f5:462c:7dec) (Quit: WeeChat 3.3)
[19:46:46] <A_Dragon> if you used sync.Map you'd have to as well
[19:47:44] <dostoyevsky2> A_Dragon: I don't want to parse yaml into a sync map though
[19:47:49] <A_Dragon> ¯\_(ツ)_/¯
[19:47:59] <A_Dragon> maps are input order independant
[19:48:14] <A_Dragon> its annoying but there are "good" reasons for it
[19:49:29] *** Quits: Kaivo (~Kaivo@user/kaivo) (Ping timeout: 256 seconds)
[19:49:35] *** Joins: beholders_eye (~weechat@2804:1b3:70c3:fcf9:7779:33f5:462c:7dec)
[19:49:51] *** Joins: andlabs (~andlabs@ool-457dd512.dyn.optonline.net)
[19:51:08] *** Joins: elastic_1 (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[19:52:03] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[19:52:39] *** Joins: iryith (~iryith3@207.81-166-89.customer.lyse.net)
[19:52:39] *** Quits: iryith (~iryith3@207.81-166-89.customer.lyse.net) (Changing host)
[19:52:39] *** Joins: iryith (~iryith3@user/iryith)
[19:56:02] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Quit: ZNC - https://znc.in)
[20:00:30] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[20:00:48] *** Quits: xse (~xse@user/xse) (Remote host closed the connection)
[20:02:40] *** Joins: xse (~xse@user/xse)
[20:02:49] *** Joins: whaley (~whaley@2603-6080-a301-33d1-a8f4-ea2c-f384-4767.res6.spectrum.com)
[20:08:23] *** Joins: Kaivo (~Kaivo@user/kaivo)
[20:09:11] <dostoyevsky2> Doesn't seem to be hard to implement something that's similar to Java's synchronized keyword: type Mu struct { sync.Mutex }; func (m *Mu) synchronized(f func ()) { m.Lock(); f(); m.Unlock() }
[20:09:12] *** Quits: nortoh (~nortoh@user/nortoh) (Quit: this is not importent)
[20:10:01] <A_Dragon> can quite easily do that. Please dont
[20:10:20] <A_Dragon> for one, you can far easier just m.Lock() defer m.Unlock() where you need it
[20:10:29] <A_Dragon> and for another, now you're locked to only passing func() to that
[20:11:17] <dostoyevsky2> If I wanted to do manual locking and unlocking I probably just write it in C++
[20:11:32] <A_Dragon> which means that one of: 1, your funcs never take arguments, all state is global, 2, your funcs DO take arguments, but you call synchronized with `synchronized(func () { myRealFunc(a, b, c) }`, or c, func() is short for interface and things are reflecty.
[20:11:34] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[20:11:34] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[20:11:34] *** Joins: nortoh (~nortoh@user/nortoh)
[20:11:59] *** Quits: saschagrunert (~saschagru@46.128.124.48) (Remote host closed the connection)
[20:12:09] *** Joins: Latrina (~Latrina@cpc138118-hatf10-2-0-cust296.9-3.cable.virginm.net)
[20:12:09] *** Quits: Latrina (~Latrina@cpc138118-hatf10-2-0-cust296.9-3.cable.virginm.net) (Changing host)
[20:12:09] *** Joins: Latrina (~Latrina@user/latrina)
[20:13:42] <fizzie> As an aside, your implementation forgot to unlock the mutex on panics, unlike the usual "lock + defer unlock" pair.
[20:14:30] <A_Dragon> ^
[20:15:05] <dostoyevsky2> fizzie: oh, I thought defer wouldn't really provide the C++ RAII semantics...  and just not call the defers on panics...
[20:15:27] <A_Dragon> when a panic occurrs, execution stops in the current function
[20:15:33] *** Quits: edrocks (~Ed@user/edrocks) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:15:33] <A_Dragon> all defers are run, and the function returns to its caller
[20:15:46] <A_Dragon> at the caller, the call acts like a panic, thus execution stops, and defers are run
[20:15:57] <A_Dragon> defers are the only place a panic can be caught, using recover()
[20:16:45] *** Quits: absc (~absc@81.31.144.178) (Quit: Leaving)
[20:17:09] *** Quits: Latrina (~Latrina@user/latrina) (Read error: Connection reset by peer)
[20:17:42] <A_Dragon> defers are always called when a function returns (a notable exception here is that if the main goroutine exits, all other goroutines exit immidiately)
[20:20:02] *** Quits: arkurious (~arkurious@user/arkurious) (Ping timeout: 240 seconds)
[20:27:58] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[20:32:52] *** Joins: arkurious (~arkurious@user/arkurious)
[20:38:48] *** Joins: naicam| (~naicam|ne@wireguard/tunneler/naicamne)
[20:39:26] *** Quits: naicam|ne (~naicam|ne@wireguard/tunneler/naicamne) (Ping timeout: 252 seconds)
[20:40:33] *** Quits: yoonkn (~user@175.197.208.79) (Read error: Connection reset by peer)
[20:53:38] *** Joins: xsteadfastx (~marv@94.31.99.67)
[20:58:42] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[21:08:28] *** Joins: goldfish (~goldfish@user/goldfish)
[21:09:44] *** Joins: bluedust (~bluedust@103.161.144.140)
[21:12:43] *** Joins: Latrina (~Latrina@cpc138118-hatf10-2-0-cust296.9-3.cable.virginm.net)
[21:12:43] *** Quits: Latrina (~Latrina@cpc138118-hatf10-2-0-cust296.9-3.cable.virginm.net) (Changing host)
[21:12:43] *** Joins: Latrina (~Latrina@user/latrina)
[21:12:43] *** Joins: blinux (~blinux@pool-72-78-144-199.phlapa.fios.verizon.net)
[21:16:15] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 276 seconds)
[21:16:22] *** Joins: mickey80 (~user@user/mickey)
[21:17:33] *** Quits: mickey8 (~user@user/mickey) (Ping timeout: 276 seconds)
[21:17:34] *** mickey80 is now known as mickey8
[21:19:38] <Thedarkb1-Deskto> Why is it a compilation error and not a warning when you include something you don't use?
[21:20:34] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[21:20:52] *** Joins: bindu (~bindu@user/bindu)
[21:20:58] <bookworm> why is the barn red and not green? Someone liked a red barn
[21:22:59] *** Joins: Atque (~Atque@user/atque)
[21:26:08] <fizzie> Officially, to "trad[e] short-term convenience for long-term build speed and program clarity" and (on why there's no option) "because compiler options should not affect the semantics of the language and because the Go compiler does not report warnings".
[21:26:24] <fizzie> The full argument being at https://go.dev/doc/faq#unused_variables_and_imports -- you may or may not find it convincing.
[21:28:51] *** Quits: xsteadfastx (~marv@94.31.99.67) (Ping timeout: 256 seconds)
[21:29:23] <Thedarkb1-Deskto> Thanks
[21:30:18] <pjs> fizzie: re the go.work workspace issue you were helping with the other day. I had to push the code live for `go work sync` to actually work and after that, all local dev works fine. Wondering if I should file a bug for this because that seems wrong based on the docs I've read so far.
[21:30:43] *** Quits: henry40408 (~henry4040@175.181.155.165) (Remote host closed the connection)
[21:31:16] *** Joins: henry40408 (~henry4040@175.181.155.165)
[21:35:18] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[21:36:24] <fizzie> It does sound a little wrong. Though I guess the material I've read about it _has_ focused on the use case where you have "existing" dependencies and just want to edit them locally. But I don't think it should be a requirement that the modules all resolve to something, especially when that something's not going to be used.
[21:43:06] * pjs nods.
[21:43:17] <pjs> We'll see how it plays out as the final version nears
[21:44:48] *** Joins: connor_k (~ckuehl@ip70-179-143-145.fv.ks.cox.net)
[21:46:51] *** Quits: bluedust (~bluedust@103.161.144.140) (Remote host closed the connection)
[21:48:27] *** Joins: cobber (~protorom@213.240.182.77)
[21:51:18] *** Joins: arcatech (~arcatech@user/arcatech)
[21:58:09] *** Quits: Batzy (~quassel@user/batzy) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:59:14] *** Joins: Batzy (~quassel@user/batzy)
[21:59:57] *** Quits: novns (~novns@user/novns) (Quit: ZNC - https://znc.in)
[22:00:20] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 268 seconds)
[22:00:24] *** clarjon_1 is now known as clarjon1
[22:00:26] *** Joins: novns (~novns@user/novns)
[22:06:35] *** Joins: crashrep (~crashrep@user/crashrep)
[22:11:37] *** Joins: SteveR (~SteveR@2600:6000:ff7e:f6d5::97b)
[22:12:04] <SteveR> i want to remove few lines of git code from a remote repository, i dont want to introduce as a commit
[22:12:11] <SteveR> how can i create a patch file
[22:12:59] *** Joins: ghost08 (~ghost08@adsl-dyn-18.95-102-48.t-com.sk)
[22:13:09] <smlavine> SteveR: See git-format-patch(1)
[22:13:56] <SteveR> smlavine do i need to remove the lines i intended to delete from a file and then run git-format-patch
[22:15:03] <SteveR> i tried to do a git diff and then i tried to create a patch file
[22:15:06] <SteveR> but i get an error
[22:15:11] <SteveR> https://bpa.st/RRJA
[22:15:29] <smlavine> SteveR: Make a local commit, then `git format-patch <name-of-remote>`. Also this is probably better suited for #git
[22:15:33] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[22:17:46] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[22:17:56] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[22:18:50] <bookworm> (#git tried and failed to help them, twice)
[22:20:55] *** Quits: svedrin (~quassel@tiamat.funzt-halt.net) (Quit: https://quassel-irc.org - Komfortabler Chat. Überall.)
[22:21:12] *** Joins: svedrin (~quassel@tiamat.funzt-halt.net)
[22:24:13] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[22:26:09] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:144d:71e8:f3fd:20f1)
[22:29:45] *** Quits: ventic (ircbouncer@3v.fi) (Quit: ZNC - http://znc.in)
[22:29:55] *** Joins: iryith1 (~iryith3@207.81-166-89.customer.lyse.net)
[22:30:15] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[22:30:19] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[22:31:01] *** Joins: ventic (ircbouncer@3v.fi)
[22:31:09] *** Joins: Atque (~Atque@user/atque)
[22:31:58] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[22:33:38] *** Quits: iryith (~iryith3@user/iryith) (Ping timeout: 268 seconds)
[22:37:33] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[22:38:09] *** Quits: ghost08 (~ghost08@adsl-dyn-18.95-102-48.t-com.sk) (Quit: WeeChat 3.4)
[22:39:10] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[22:39:35] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[22:43:02] *** Quits: ventic (ircbouncer@3v.fi) (Quit: ZNC - http://znc.in)
[22:45:13] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[22:56:22] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[22:56:48] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[22:56:57] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[22:57:17] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[22:59:17] *** Quits: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[22:59:34] *** Quits: The_Loko (~The_Loko@79.116.24.80) (Quit: Leaving)
[22:59:52] *** Joins: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net)
[23:00:26] <lazyreader> isn't "I want to remove code from a remote but don't want to make a commit" incoherent in the git view of the world?
[23:02:19] *** Quits: whaley (~whaley@2603-6080-a301-33d1-a8f4-ea2c-f384-4767.res6.spectrum.com) (Quit: It won't give up.  It wants me dead.  Goddamn this noise inside my head.)
[23:09:18] *** Joins: ventic (ircbouncer@3v.fi)
[23:10:15] <b0nn> hmm, I *think* that it's possible to screw the remote tree up by ssh into the host and manually adjusting the code on disk, but that would break things pretty hard
[23:12:20] <bookworm> they didn't formulate that properly, they aren't messing with the remote local repo... they run a CI pipeline, clone and try to apply a patch. That patch is rejected because it doesn't apply and now they are lost
[23:19:09] *** Quits: SteveR (~SteveR@2600:6000:ff7e:f6d5::97b) (Ping timeout: 256 seconds)
[23:20:19] *** Quits: holgersson (~quassel@user/holgersson) (Quit: “Format C:........[Done]“)
[23:20:38] *** Joins: holgersson (~quassel@user/holgersson)
[23:20:58] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[23:21:21] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[23:21:36] *** Quits: lithammer (~lithammer@2a02:2770::21a:4aff:fe88:c18d) (Quit: ZNC - http://znc.in)
[23:21:56] *** Joins: lithammer (~lithammer@arch-vps.cloud.tilaa.com)
[23:31:29] *** Joins: NastyNezra (inyou@ip72-193-170-88.lv.lv.cox.net)
[23:34:18] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[23:35:13] *** Quits: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[23:35:37] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[23:44:58] *** Joins: dr0n (~nabromov@176.26.119.61)
[23:48:12] *** Joins: renlo (~Renlo_Ren@pool-173-68-108-120.nycmny.fios.verizon.net)
[23:53:29] *** Quits: davidkrauser (~davidkrau@user/davidkrauser) (Quit: Leaving)
[23:56:11] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:144d:71e8:f3fd:20f1) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:57:32] *** Joins: ultsllt (~ultsllt@50.231.5.242)
[23:58:42] <jayalane> During log4j I wrote a go thing to scan and fix this big NFS filer, and I had one jar file cause a panic in archive/zip - sadly I only had time to add in a recover with a log statement and by the time I tried to file an issue, the original jar file was gone.  Is it worth filing an issue with just the backtrace?
