[00:03:26] <brownorange> lol i guess i'll try
[00:03:43] *** Quits: cynicalcats (~cynicalca@user/cynicalcats) (Quit: ZNC - http://znc.in)
[00:05:34] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:07:38] <brownorange> 1) there are mathematical statements that do not fit the form of a or not a. aka the L.E.M  2) mathematics does imply a or not a as a tautology. it is a true proposition, not a "it depends" proposition. 3) if a mathematical statement is allowed to violate L.E.M, then either L.E.M is false for the formal system is false. 5) if L.E.M is false or any part of the formal system called math is false, then math has contradictions.
[00:07:45] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[00:07:54] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[00:08:13] *** Quits: [_] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[00:08:18] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[00:08:34] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[00:08:37] <lerax> brownorange: where is the item 4?
[00:09:29] <brownorange> lerax, numbering mistake.
[00:09:57] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[00:10:17] *** Joins: Crescendo (~Crescendo@user/crescendo)
[00:10:21] *** Joins: jellydonut (~quassel@185.213.154.161)
[00:10:21] <brownorange> as an informal argument it seems right to me
[00:10:42] *** Joins: cynicalcats (~cynicalca@c-24-8-58-78.hsd1.co.comcast.net)
[00:10:42] *** Quits: cynicalcats (~cynicalca@c-24-8-58-78.hsd1.co.comcast.net) (Changing host)
[00:10:42] *** Joins: cynicalcats (~cynicalca@user/cynicalcats)
[00:12:03] <brownorange> QED would be math therefore does have contradictions. thus it is inconsistent
[00:12:14] <HisShadow> what does provability have to do with truthness?
[00:12:29] <riv> provable => true
[00:12:43] <brownorange> HisShadow anything and everythign depending on the formal system
[00:14:14] <riv> also godels completeness theorem: true in all models => provable
[00:14:34] *** Quits: jellydonut (~quassel@185.213.154.161) (Client Quit)
[00:14:49] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[00:14:59] *** Quits: anovick_ (~anovick@2a0d:6fc0:1831:1500:98e9:2c6f:1a52:52c0) (Ping timeout: 268 seconds)
[00:15:52] <brownorange> perhaps we should tamper with L.E.M
[00:16:35] <brownorange> or redefine what a wff is
[00:17:41] *** Quits: DocNostril (~DrNostril@217.138.197.252) (Quit: Smell ya later~~)
[00:19:22] *** Joins: Crescendo (~Crescendo@user/crescendo)
[00:20:12] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[00:20:22] *** Joins: mindraj (~mindraj@user/mindraj)
[00:21:17] <[itchyjunk]> Since re^it |-> r^ne^(int), my "pie" just grows as in a) 0< Arg z < pi/2  b) 0< Arg z < 3pi/4 c) 0< Arg z < pi
[00:21:24] <[itchyjunk]> https://i.ibb.co/k3V811F/image.png
[00:21:56] <riv> pi / 4 would be 1/8th of a circle
[00:22:23] <[itchyjunk]> right so the size of pizza slice grown as n grows right?
[00:22:29] <[itchyjunk]> nothing else changes with these mappings
[00:22:35] <riv> yeah just the angle changes
[00:22:42] <[itchyjunk]> makes sense
[00:26:31] *** wabibunny87 is now known as bunny87
[00:27:42] *** Joins: ferdna (~ferdna@user/ferdna)
[00:30:09] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[00:32:34] *** Quits: qbt (~edun@user/edun) (Remote host closed the connection)
[00:33:07] <brownorange> so the universal set cannot exist in ZFC?
[00:33:40] <riv> yes no set of all sets
[00:34:31] <brownorange> and the solution was disallowing that to make ZFC better than naive set theory?
[00:35:46] <riv> yes
[00:36:41] <brownorange> then a similar solution might be productive for the incompleteness of math. i know that's a big claim, but it's worth trying
[00:37:30] <riv> no
[00:37:41] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[00:37:48] <brownorange> you think they're totally different don't you?
[00:38:50] <riv> i agree with what you said earlier, that they have a similarity
[00:38:59] <riv> they both involve a diagonalization construction
[00:39:55] <brownorange> sets are not wffs.. so the solution may not be exactly the same
[00:42:16] <[itchyjunk]> Is incompleteness something that you "solve" ?
[00:42:26] <[itchyjunk]> I thought it came with the formal system you choose
[00:42:48] <[itchyjunk]> you can go to a complete system but you can prove false things to be true or somesuch?
[00:43:38] <brownorange> itchyjunk, the working idea is math is inconsistent because undecidable statements violate L.E.M.
[00:43:43] <tusko> mh_le obviously pi is based on it
[00:43:54] <brownorange> im' saying the paradox leads to contradiction just as in the russell\ paradox
[00:44:16] <brownorange> and now i'm trying to solve it similarly like the russel paradox got solved
[00:44:51] <[itchyjunk]> eh, beyond me to understand this
[00:45:18] <tusko> Suppose we had a string, and that string had been operated on by Vigenere (but we learned how long the key was!). So, we scan it and put each i-th character into one of keyLength many bins. each of those bins should display some variance amongst themselves.
[00:45:49] <tusko> I'm wondering what the exact relationship is between the characters in a bin all having been shifted by the same amount and their variance while encoded.
[00:45:51] <mh_le> tusko: pi is based on what?
[00:46:10] <tusko> 1pi = tau/2
[00:46:13] <qergle> please refresh me, is the variance analysis kasikis?
[00:46:27] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[00:47:22] *** Joins: quartz (~quartz@user/quartz)
[00:47:48] <tusko> qergle, that's right. I have some ciphertext. When I put each character into i bins 1 <= i <= x (assuming the key length is between 1 and x), population variance is maximized when we select the proper key length.
[00:48:21] <tusko> Sorry, the average of the population variances of each bin is maximized.
[00:49:10] <tusko> But its very clear, order of magnitude for one key length and super small for all other lengths except multiples of that key length.
[00:49:42] <tusko> Now, assuming I know the key length. I take the cipher and sort each character sequentially into key length many bins.
[00:49:55] <qergle> then freq analysis each bin
[00:49:57] <qergle> right
[00:50:00] <qergle> ?
[00:50:17] <tusko> I did that, and then I compared against known frequencies of engrish characters
[00:50:26] <tusko> It didn't go so well.
[00:50:35] <qergle> maybe the plaintext isn't engrish
[00:50:51] <tusko> I'm assured that it is and that it has a key length between 3 and 13
[00:51:00] <qergle> where's the ciphertext?
[00:52:02] *** Quits: oxide (~lambda@user/oxide) (Ping timeout: 260 seconds)
[00:53:33] <tusko> 'FKRUUWOYLCNVHOVMWWUVLXIPJBYWHQYYJXTNCOBYVSTMURYHWVUWNXZCNMOBLVIYJXNJCSXRWVOCAVOYXBTWVXWZWOEWPXXXHXVDYCOKWKTMUXYEQSTPUZKCCSIDSKBYCYTRUDOCNCZWTOXZWXYQVBOKWMTCOYERQDTLUGYFUNTBHSVYJLUDAXKYUSZCSOXLWNTBLOXEQOTFHDOCHXVJYDXZOXZQLXGZAVJKUMDYRCTJUGKJWMTQHFOYXPTMYSFTWQTXMPXEQOTBWVOPWXGWKXBPPERJASXRWDNNUMSCLERJASYYKXWQLXOGNBTLUPSYMXSHZOVQWQXXDSXRWQXRTXKMXEZWAROYVYACOYXHQOTNCOBYRDTRZXKYMKSYGXNCRJFUFXRZEOSKLBXTWXSHUCYFUYTFOOXPEOXWJXPTWNTVFCOWOXOWCYVFWDGAPVIYYKABP
[00:53:33] <tusko> XQYKOLXYOXNXPLRUXGLAONXBCODIXGWKXLCRXMRUQXFYXZQLXBPJBTXMXOGNBEWMEXPAKRWJXWPNDUWHXNYNCVNJSKWUITFOOXPEOXWTIXSHZUBUQOEWCALOXKYWEVYLBXSJXJWVPXXNJTCOKDYRDTALAETAOYWHXCEAYTPUWYCJVTYYSXNRZRNUDYYYBKELXDYVOTOYYWYMORRIOBLCORHUCDPYZOWNXSYCYTCOOXDCBKNAJXLWNTVLDRZMSIJSVIYTXULRSXRWZKXWVOFBXNJACXZOPTJUDRPWJTLUKMNXETCUSDYQSMQUDSXNXZXUQOEWDUWZOKYJCTBVYXYJCTLUMKYKXTQPCXTBXSHUCEMBDOCBDOYOYXWWSCEXVTJUNXMJVRKUASEQXGWWRSWXCUYOSMLUXLUVEBTBRTFHDYYCRXXDCXSRWYNSPXFYYTWOSCYBGU
[00:53:34] <tusko> AKYXNWAARLDVJWDGTLXDZWDNNUCRTYLTWOOBPWSYWUYDSRXMWZEBAASYRUQXTWXZQPCLYLPTCOOIYKEZWRXOHWSZIUKVXXCZWHVVYVOTWPXXEQOOAUNORAOKIUCYXNXZRTOXZAXUCOOBKWMNNYSCSWFKAFXXPJBRHUDRPWCGVLXPPNVOWNCXEXGGAKCXEQOTXJOKYWGOCOXWPK'
[00:53:37] <tusko> oops
[00:53:40] <tusko> sorry
[00:53:42] <qergle> holy mother of god
[00:53:43] *** Joins: Simplar (~Simplar@188.163.92.105)
[00:53:46] <tusko> lol
[00:54:05] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[00:54:13] <biberao> i hope thats a bitcoin
[00:54:18] <Simplar> if f(g(x)) is an even function, can it be concluded that g(f(x)) is an even function too?
[00:54:29] *** Joins: jellydonut (~quassel@185.213.154.161)
[00:54:39] <tusko> biberao, tudo bem
[00:54:50] <qergle> tusko: ok, what key length did you get maximizing your statistic?
[00:55:10] <tusko> um, let me run it to verify
[00:55:11] <biberao> damn why did i even chat
[00:55:28] <brownorange> Unfortunately the only way to limit wffs to just the provable ones, is you need a decision procedure to know which are provable. Such a procedure is typically known as using the formal system itself.
[00:55:47] <brownorange> that's my first approximation of the issue
[00:55:50] <tusko> qergle, 8, for sure it is 8
[00:56:03] <qergle> interesting
[00:56:04] <tusko> Simplar, definition of even function
[00:56:14] <biberao> qergle: you never answered me back
[00:56:24] <Simplar> An even function is function that has f(-x)=f(x)
[00:56:34] <Simplar> thus, for example, cosine is an even function
[00:57:48] <tusko> biberao, meu companero. você nao me ama mais :(
[00:58:27] <tusko> Simplar, ok, so cases. Try g is even or g is odd.
[00:58:34] <tusko> because you know what f will be
[00:58:50] <Simplar> If g is odd, g(-x)=-g(x)
[00:59:28] <tusko> well, that settles it then, doesn it
[00:59:51] <Simplar> ...then g(f(x)) is odd?
[00:59:55] <Simplar> so it depends on g
[01:00:24] *** Joins: Guest0 (~Guest0@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[01:01:26] <tusko> I say so
[01:01:36] <tusko> I'd*
[01:01:40] *** Joins: System123 (~System123@net-37-179-171-3.cust.vodafonedsl.it)
[01:02:08] *** Quits: lerax (~user@177-104-241-177.gbsn.com.br) (Ping timeout: 265 seconds)
[01:02:30] <qergle> ok, i think i believe 8
[01:02:46] <tusko> For sure its 8. 100%
[01:03:19] <tusko> biberao come back :(
[01:04:56] <biberao> tusko: weirdo
[01:04:56] <biberao> :D
[01:05:00] <tusko> qergle, now knowing that fact. I want to put the characters into keylen many bins again
[01:05:03] <Gurkenglas> A bivariate gaussian is a gaussian random function Bool->R, when you replace Bool with R then nice covariance matrices correspond to function distributions whose samples are *continuous*, even though almost all functions are nowhere continuous. Therefore I suspect a duality between properties of the covariance matrix and properties of the functions in the distribution - what's the duality called?
[01:05:26] <tusko> sounds like alchemy
[01:06:42] <qergle> tusko: ok, i got it :)
[01:07:43] *** Quits: BlueSky (~BlueSky@user/bluesky) (Quit: Leaving)
[01:07:58] <Z-module> Simplar: f and g are assumed to be just any two functions R -> R, no other given properties?
[01:08:19] <Simplar> Z-module: yes
[01:08:40] <qergle> tusko: as you certain your ciphertext is good, you didn't mess up the copy paste?
[01:13:18] *** Joins: cslr (~cslr@85-76-34-233-nat.elisa-mobile.fi)
[01:13:48] *** Quits: sander (~sander@user/sander) (Remote host closed the connection)
[01:15:19] *** Quits: plasticmae (~plasticma@cpe-172-249-151-214.socal.res.rr.com) (Quit: Leaving)
[01:16:13] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[01:16:18] <qergle> it seems to be a vigenere with a twist
[01:20:11] <qergle> tusko: your cipher-maker has done something weird with the punctuation
[01:21:16] <[itchyjunk]> I have a map z |-> z^2 and i want to know the image of z = x + i under this map
[01:21:29] <riv> (x + i)^2
[01:21:35] <[itchyjunk]> it looks like it take the like parallel to the x axis to y=x looking line?
[01:21:45] <[itchyjunk]> hmm i computed that but i wasn't sure what to make of it
[01:21:46] <riv> as x ranges over all real numbers?
[01:21:52] <[itchyjunk]> other than it look like x =y like lines
[01:21:55] <[itchyjunk]> yes
[01:22:04] <riv> (x^2 - 1) + i (2 x)
[01:22:08] <riv> you can graph that
[01:22:20] <riv> the real and imag parts are the x and y coordinates
[01:22:45] *** Joins: greyhash (~greyhash@2601:2c6:c100:1f00::af26)
[01:25:32] <bunny87> hello, i had a question. say i have a Banach algebra (A, *) which has an unity element
[01:25:52] <bunny87> can i find an inverse for every element of the algebra?
[01:25:55] <[itchyjunk]> Its y=x line shifted to the left by 1 ?
[01:25:57] <bunny87> given it's not zero
[01:26:16] <bunny87> [itchyjunk]: i'm sure it isn't, it's going through the origin
[01:26:28] <[itchyjunk]> it was meant for my graph not yours
[01:26:39] <[itchyjunk]> But what's an algebra? a ring over a field?
[01:26:50] <bunny87> not sure, it's just a set with a binary operation *
[01:27:16] <[itchyjunk]> its a vector space with vector multiplication? hmm idk
[01:27:22] *** Quits: brettgilio (~brettgili@x-node.gq) (Ping timeout: 252 seconds)
[01:27:43] <bunny87> it's just a set, nothing else specified
[01:27:50] <bunny87> over which i define a binary operation *
[01:28:06] <[itchyjunk]> but if it is some type of ring then i would imagine all elements that's not multiplicative identity would have inverses
[01:28:22] <[itchyjunk]> banach algebra is on top of banach spaces right?
[01:28:28] <[itchyjunk]> maybe you assume some property from there
[01:28:35] <riv> [itchyjunk], its a quadratic
[01:28:43] <[itchyjunk]> :(
[01:28:48] <riv> just graph it
[01:29:26] <riv> https://www.desmos.com/calculator/r5g4qntgr4
[01:29:40] <yinghua> Matrix algebras should be examples of Banach algebras for whatever definition of banach algebra that you're using
[01:29:54] <qergle> tusko: well you seem to be gone
[01:30:18] <[itchyjunk]> hmmmmmmmmmmmm
[01:30:19] <qergle> but the cipher maker violated a vignere rule, which is punctuation remains unchanged
[01:30:31] *** Joins: h4zel (~hazel@user/h4zel)
[01:31:04] *** Quits: h4zel (~hazel@user/h4zel) (Client Quit)
[01:31:18] *** Joins: lerax (~user@177-104-241-177.gbsn.com.br)
[01:31:40] *** Quits: System123 (~System123@net-37-179-171-3.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[01:31:53] <cslr> I got on an idea how to get better voting results (I hope). I wrote a mathematical article about it: https://medium.com/codex/better-voting-results-through-markov-chains-d8aa46c79870
[01:31:59] <bunny87> [itchyjunk], yinghua: the definition we're using is:
[01:32:18] *** Joins: System123 (~System123@net-37-179-171-3.cust.vodafonedsl.it)
[01:32:26] <cslr> it would be interesting to get feedback about it (email: nop@iki.fi)
[01:32:38] *** Joins: h4zel (~hazel@user/h4zel)
[01:33:24] <cslr> i don't know much about voting theory and use machine learning based approach to better model probability distribution from votes
[01:33:56] <bunny87> there's a set A with a binary operation *, which is associative and has an identity (say 1). also, multiplication by the left and right is complex-linear, so * is bilinear
[01:34:54] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[01:35:10] <bunny87> furthermore, A is complete (every Cauchy seq converges) and has a norm for which, given a,b in A, ||a * b|| <= ||a|| ||b||. also, the norm of the identity of * is 1.
[01:35:21] <yinghua> And matrix algebras satisfy those conditions, taking * to be the matrix multiplication
[01:35:40] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[01:35:45] <yinghua> And whatever norm you wish to use
[01:36:04] <[itchyjunk]> riv, i still can't graph it after lookign at your graph :(
[01:36:22] *** Quits: Simplar (~Simplar@188.163.92.105) (Quit: Going offline, see ya! (www.adiirc.com))
[01:36:35] <yinghua> But not every matrix has an inverse
[01:36:40] <bunny87> ...true that
[01:37:02] <bunny87> thanks for clarifying, yinghua, i was introduced to the concept of Banach algebras just today...
[01:37:05] <bunny87> ...in an assignment
[01:37:34] <[itchyjunk]> is this tied into lie algebra?
[01:37:40] *** Lord_of_Life_ is now known as Lord_of_Life
[01:37:42] <yinghua> You're welcome
[01:37:50] <bunny87> not really... you wouldn't believe, it's in my complex analysis hw.
[01:38:19] <bunny87> though it's defined in the paper, i didn't know what a Banach algebra is, and since the inverse property isn't specified, i shouldn't assume every non-null element has an inverse.
[01:38:25] <[itchyjunk]> my homework needs to be graph a simple quadratic and i can't figure it out
[01:38:27] * [itchyjunk] sobs
[01:38:32] <bunny87> damn :(
[01:38:57] *** Quits: mindraj (~mindraj@user/mindraj) (Quit: Goodbye, have a great day/evening!)
[01:39:23] <riv> [itchyjunk], what are you meaning, I linked the graph? there it is, you dont need to do any more graphing work
[01:39:48] <[itchyjunk]> yes but i should be able to replicated it on paper..
[01:39:58] <[itchyjunk]> i am picking "x" and getting pairs of u,v's
[01:40:09] <[itchyjunk]> and trying to graph is in a u,v plane
[01:40:24] <riv> that is fine yes dot down a few points and draw a curve through them
[01:40:27] <bunny87> cslr: just as a question: does medium support inline latex?
[01:40:48] <bunny87> if so, i think my browser isn't rendering
[01:41:50] <[itchyjunk]> ah i made a mistake for one point but now it works out. thanks!
[01:43:53] *** Quits: oj (~oj@user/oj) (Remote host closed the connection)
[01:49:06] <Z-module> [itchyjunk]: I think you meant you need the image of the first-1/8-disk pie wedge from the punctured open unit disk (the set {z : 0 < |z| < 1, 0 < arg(z) < pi/4} ), no?
[01:49:53] <Hash> guys!
[01:50:04] <Hash> Modulus is still not making sense to me and ti's been hours
[01:50:12] <Z-module> [itchyjunk]: remember that squaring a complex z just changes its length from |z| to |z|^2, and doubles its angle
[01:50:17] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[01:50:19] <riv> Modulus? like  12 % 10 = 2 ?
[01:50:26] <Hash> I don't understand what the... please allow me to curse, i'm frusrated... FUCK modulus is other than remainder.
[01:50:33] <Hash> Why call it a modulus when it's just a bloody remainder
[01:50:35] <Hash> I dont' get it
[01:50:37] <Hash> What am I missing?
[01:50:43] <riv> well it is remainder
[01:50:44] <Hash> I am so frustrated right now
[01:51:18] <Z-module> the remainder answer you get is not the modulus itself. The modulus itself (10 in your example up there) is just what you're dividing by.
[01:51:29] *** Quits: terrorjack (~terrorjac@ec2-54-95-39-30.ap-northeast-1.compute.amazonaws.com) (Remote host closed the connection)
[01:51:33] <Hash> I don't follow. Hangon
[01:51:46] <Hash> remainder answer is NOT modulus? Ok. Alright Ill start there
[01:51:48] *** Joins: terrorjack (~terrorjac@ec2-54-95-39-30.ap-northeast-1.compute.amazonaws.com)
[01:51:57] <Hash> ok, so established, mod is not remainder. So what is it then?
[01:52:10] *** Quits: h4zel (~hazel@user/h4zel) (Ping timeout: 252 seconds)
[01:52:14] <Hash> Which numnber is the mod then? the mainder? divisor? dividend? what?
[01:53:15] *** Joins: h4zel (~hazel@user/h4zel)
[01:53:49] <Hash> while "9 mod 3" would evaluate to 0, because the division of 9 by 3 has a quotient of 3 and a remainder of 0
[01:54:07] <Hash> What does it mean 9 mod 3? It means to just calculate and get the remainder?
[01:54:17] <Hash> because 0 is the remainder in that 9 mod 3 example
[01:54:25] <Hash> so 0 is the modulus for 9/3
[01:54:32] <Hash> I am so confused.
[01:54:37] <Z-module> in  a % b   that you are using, the operator itself is that '%' thing, often written 'mod' instead. That's just an operation symbol.  12 % 10 = 2.   But in the other (more mathematical) meaning of 'mod', taht we referred to earlier, this is written as a relation 12 ≡ 2 (mod 10) , meaning 12 is "congruent to" 2 with 10 as the modulus.
[01:54:55] <Z-module> It's going to cause a lot of pain of you go back and forth between these two meanings a lot.
[01:55:03] <Hash> hmm
[01:55:09] <Hash> ok, give me time to read and rethink a few times
[01:55:11] <Hash> I'll be back
[01:55:18] <Z-module> Best to use a symbol such as '%' for the operation thing (that yields a remainder), and not the word 'mod'
[01:55:25] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.2.1)
[01:55:50] <Hash> thanks
[01:55:51] <Hash> brb
[01:56:49] <Z-module>   a ≡ b (mod m)   means    m | (a - b)     means      a,b each leave the same remainder on integer-division by m     means      a % m  =  b % m
[01:56:59] <Hash> | pipe means what?
[01:57:10] <Z-module>  "divides"
[01:57:13] <Hash> oh ok
[01:57:21] <Z-module>   d | m    means some integer k exists with  m = kd
[01:57:33] *** Quits: System123 (~System123@net-37-179-171-3.cust.vodafonedsl.it) (Remote host closed the connection)
[01:57:51] <Hash> I instantly get overwhelmed and it all mixes together then I have trouble to untnagle it
[01:58:00] <Hash> I have to go extra slowly to understand.
[01:58:13] <cherim> [2021-09-18 20:19:09] <Hash> It's been 20 years since college and now 2nd degree needs math
[01:58:22] <Z-module> it's partly not your fault, with the widespread and confusing overloading of 'mod'
[01:58:28] <cherim> It's unbelievable that you managed to get a degree with that level of patience
[01:58:51] <Hash> You wanna get ignored?
[01:59:08] <Hash> I'm not trying to be rude, but what's the bloody point in saying stupid nonsense to me like that?
[01:59:42] <Hash> You see me alredy frustrated, working hard to understand something and you think it's appropriate to mockme? add stress? insult to injury?
[01:59:50] <Hash> What a wonderful human being. *afk*
[02:00:26] *** Joins: Macuser (~Macuser@216.30.159.201)
[02:01:27] *** Quits: h4zel (~hazel@user/h4zel) (Ping timeout: 268 seconds)
[02:03:29] *** Quits: Deknos (~someone@user/menace) (Quit: Deknos)
[02:05:59] *** Joins: Kol (~Kol@d75-157-122-186.bchsia.telus.net)
[02:07:56] <brownorange> OK here's an idea. There will be two zfc axiom systems. The first is just ZFC. We use it to prove what we want. Of that which we are able to prove we feed it to the secondary axiom system. The second system is ZFC + requirement propositions be provable. AS a result the second system is complete. With it being complete we can then check if it is consistent
[02:10:41] *** Quits: balboa (~admin@user/marlboro) (Quit: k(pta)^(3.3a){I come down here for a fat woman and that's what I'm havin.}(www.kpta.8m.com))
[02:11:05] *** Parts: lerax (~user@177-104-241-177.gbsn.com.br) (i'm tired of math for now)
[02:11:26] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[02:11:44] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[02:14:37] <brownorange> unless it's possible to assert undecidable propositions from decidable ones..
[02:16:42] <Cale> brownorange: What does "requirement propositions be provable" mean?
[02:18:26] *** Quits: qeed__ (~qeed@072-190-106-143.res.spectrum.com) (Remote host closed the connection)
[02:18:42] *** Joins: qeed__ (~qeed@072-190-106-143.res.spectrum.com)
[02:20:46] *** Quits: quartz (~quartz@user/quartz) (Ping timeout: 252 seconds)
[02:26:53] <brownorange> Cale, you must find a proof of a proposition in zfc1 before inputting it into zfc2
[02:27:07] <Cale> What do you mean "inputting it"?
[02:27:14] <brownorange> referencing it.
[02:27:26] <Cale> I don't understand
[02:28:06] <brownorange> suppose you prove 2+2=4 in zfc1, now you have a decidable proposition.  this proposition then you may reference in zfc2
[02:28:32] <Cale> But why would you have to? Presumably you could prove it just the same way in ZFC2?
[02:29:10] <brownorange> the point is to limit zfc2's wffs to be only provable ones
[02:29:36] <brownorange> once yo'uve done that you have completeness
[02:29:36] <Cale> Ahhh
[02:29:53] <Cale> You just can't tell what a wff is most of the time
[02:29:57] <Cale> haha
[02:30:19] <brownorange> yep. but with a proof it's been shown to be a or not a
[02:30:29] <Cale> So you won't be able to pose the question about whether either system is complete, probably
[02:30:33] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[02:30:46] *** Joins: Samian (~Sami@user/samian)
[02:31:09] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Client Quit)
[02:31:19] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[02:31:27] <Cale> Because without a proof of completeness of ZFC in ZFC (which would entail its inconsistency) its completeness wouldn't be a wff in ZFC2
[02:32:16] <brownorange> you won't be able to prove completeness of zfc1, but you will be able to for zfc2, which will allow you to evaluate consistency
[02:33:00] <brownorange> what objection could you have to zfc2, given it would be virtually the same axioms
[02:33:19] *** Quits: greyhash (~greyhash@2601:2c6:c100:1f00::af26) (Quit: Leaving)
[02:33:47] <Cale> I mean, the main thing is that it's not very useful because in order to begin to ask any question in ZFC2, we must already know the answer to that question in ZFC1
[02:34:18] <brownorange> true. you won't be able to use completeness to know wha'ts provable. but you will be able to check for consistency atleast
[02:34:27] <Cale> In what way?
[02:35:03] <brownorange> i think proving consistency of zfc2 would be the same as proving consistency in zfc1, as only the provables of zfc1 are input into zfc2, you can assess if !(a and !a)
[02:35:04] <Cale> You can't talk about Con(ZFC) in ZFC2, because you can't prove Con(ZFC) in ZFC
[02:36:22] <brownorange> ok assuming consistency of zfc2, why would that mean zfc1 is consistent? i would say because tautologically all the things you can prove in zfc1 when inputted into zfc2, would have been provable in zfc2 anyway
[02:36:38] <brownorange> thus the consistency of zfc2 is the same as zfc1
[02:36:45] <Cale> You might be able to ask about Con(ZFC2), but only if you can prove Con(ZFC2) in ZFC, which you probably won't be able to do, because, if ZFC were to be inconsistent, then all formulas of ZFC would be WFFs in ZFC2, and the two systems would be equivalent.
[02:37:46] <brownorange> you raise an interesting point that a shift in the definition of wff for zfc2, makes a consistency proof some what different, but virtually all the wffs that are provable which is what consistency evaluates would be in zfc2
[02:38:38] <brownorange> maybe i'm not appreciating a system's own ability to self-talk..
[02:38:45] <Cale> If ZFC is inconsistent, then so is ZFC2, and if ZFC2 is inconsistent, then so is ZFC, of course.
[02:39:09] <brownorange> ah then it might work
[02:39:25] <Cale> Well, no, that's disastrous for being able to do anything here
[02:40:33] <brownorange> i think the difference is equal consistency versus equal provability of consistency
[02:41:11] <brownorange> they won't have equal provability of it . and the issue with zfc1 proving its consistency (godel says it can't right?), is that it has undecidables. i think zfc2 would not
[02:41:48] <Cale> If we can prove that ZFC2 is consistent in ZFC, then we'll be able to prove ZFC is consistent in ZFC, which will mean that ZFC is inconsistent.
[02:41:57] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[02:42:12] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[02:43:17] *** Quits: bunny87 (~bunny87@132.191.1.157) (Read error: Connection reset by peer)
[02:45:08] <brownorange> since the meaning of wff has changed in zfc2's case, you probably can't prove zfc2 in zfc1
[02:45:44] <Cale> You mean we probably can't prove Con(ZFC2) in ZFC1?
[02:45:48] *** Quits: Jordy (~jordy@user/jordy) (Read error: Connection reset by peer)
[02:45:57] <Cale> I agree about that
[02:46:09] <Cale> But that means we can't even discuss Con(ZFC2) in ZFC2
[02:46:27] *** Joins: bunny87 (~bunny87@132.191.1.157)
[02:46:39] *** Quits: dutch (~DutchIngr@user/dutch) (Quit: WeeChat 3.2.1)
[02:46:59] <brownorange> possibly. aren't consistency proofs don't with some HOL anyway?
[02:47:09] <Cale> Not necessarily
[02:47:25] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[02:47:35] *** Quits: TechTest (uid283215@id-283215.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[02:47:41] <Cale> I mean, certainly consistency proofs in ZFC are not done with a higher order logic, since that's a first order theory
[02:48:07] *** Joins: dutch (~DutchIngr@user/dutch)
[02:48:27] *** Joins: seninha (~seninha@user/seninha)
[02:48:37] <brownorange> odel's incompleteness theorems, one or both were in HOL
[02:48:42] <brownorange> Godels*
[02:48:45] <Cale> Neither
[02:49:02] <Cale> I mean, you can formulate them in HOL
[02:49:35] <Cale> But there's no need for that. You can carry them out in ZFC just fine.
[02:49:40] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[02:51:17] <brownorange> ok then. so it would appear either way a consistency proof is needed. this where my expertise ends. but i'm willing to bet completeness of zfc2, and consistency will both require their own numbering tricks
[02:52:45] <Cale> ZFC2 feels complete because of its extremely restricted definition of wff, but because you can't ask any question you didn't already know the answer to (and you also can't ask many questions that you do know the answer to), there won't ever be much point to it.
[02:53:06] *** Joins: h4zel (~hazel@user/h4zel)
[02:53:09] <Cale> Consistency of ZFC2 is just as open as it is for ZFC though.
[02:53:46] <Cale> If ZFC turns out to be inconsistent, then every wff of ZFC is a wff of ZFC2, and ZFC2 proves all of them just the same way
[02:54:05] *** Joins: brettgilio (~brettgili@x-node.gq)
[02:54:49] <brownorange> true it may open up to showing zfc is just inconsistent, which would be a good thing
[02:55:24] <Cale> But... I don't think it gets you any closer to proving that ZFC is inconsistent either
[02:55:52] <brownorange> with undecidables out of the way it should make it easier
[02:56:41] <brownorange> suppose you needed to do mathematical induction over some theorems to argue for consistency. it helps not to have undecidable landmines int he way
[02:56:50] <brownorange> in the way*
[02:57:04] <Cale> Not really, you still need to exhibit a sentence P for which both P and not P are provable, and the only way you could know both sentences were well-formed in ZFC2 is to know they were provable in ZFC, so you'd already have your inconsistency of ZFC
[02:58:02] *** Quits: h4zel (~hazel@user/h4zel) (Ping timeout: 260 seconds)
[02:58:09] *** Joins: Crescendo (~Crescendo@user/crescendo)
[02:58:42] *** Quits: Salt_Pepper (~Salt_Pepp@c-68-62-42-123.hsd1.mi.comcast.net) (Quit: Leaving)
[02:59:23] <Cale> Also, there's nothing particularly spooky about undecidable sentences. I think people get too worked up about them. Nobody complains that the axioms for a group are incomplete.
[02:59:46] *** Robbin is now known as Puffin
[03:00:02] *** Joins: rindolf (~shlomif@87.68.240.100.adsl.012.net.il)
[03:00:08] <brownorange> what about collatz then
[03:00:27] <Cale> We don't know that Collatz is undecidable
[03:00:43] <brownorange> that's the problem, it could be
[03:00:49] <Cale> So?
[03:01:20] <brownorange> a metamath proof means you still need some trusty theorems
[03:01:28] <Cale> If it's undecidable, that means there are models of the natural numbers where it holds and models where it fails.
[03:01:54] <Cale> Should we be bothered to change the definition of the natural numbers to fix that?
[03:02:10] *** Joins: h4zel (~hazel@user/h4zel)
[03:02:23] <Cale> I have no strong expectation either way about the conclusion, at least, not enough that I'd be unhappy with the natural numbers as a concept for not deciding Collatz
[03:03:01] <brownorange> idk this models business appears to lead people to say things like under some different set of assumptions, you can prove something false that might otherwise be true. either you accept zfc in full, or what are we even doing
[03:03:16] <Cale> hm?
[03:03:31] <Cale> I often work in systems incompatible with ZFC
[03:03:36] <brownorange> example commutativity of addition changing under some models, or maths built to break other math assumptions
[03:04:13] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[03:05:07] <brownorange> if i have to i'll retreat to peano1 and peano2, instead of zfc1 or zfc2.
[03:05:13] <Cale> But of course, ZFC doesn't decide everything about the natural numbers. It decides more than PA does.
[03:05:39] <Cale> But you can formulate Con(ZFC) by Gödel encoding in PA
[03:05:58] <Cale> and then ZFC had better not help you decide if that ought to be true, or else it's inconsistent
[03:06:31] *** Quits: Gurkenglas (~Gurkengla@dslb-002-207-014-195.002.207.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[03:08:20] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[03:08:38] <brownorange> this encoding business really makes me wonder how much people would be willing to accept if there was only the right encoding for the task
[03:08:56] <Cale> hm?
[03:09:00] <Guest0> for a PDE,how do I know what boundary or initial conditions are needed to make it well-posed?
[03:10:30] *** Quits: dalcde (dec41@pip.srcf.societies.cam.ac.uk) (Remote host closed the connection)
[03:10:41] <brownorange> If I encoded peano in propositional logic, does that prove that propositional logic (being totally decidable)  shows peano is all decidable?
[03:10:47] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:11:16] <Cale> Uhhh, you're not going to be able to do that, but yes?
[03:11:31] *** Joins: average (uid473595@user/average)
[03:11:54] <brownorange> you could encode numbers with propositional logic, and formal systems conceivably
[03:12:29] <brownorange> eventually whatever you build would be a decidable version of that thing
[03:12:44] <Cale> How are you going to encode numbers?
[03:14:02] <brownorange> computers can verify proofs, and help you right them. while they may not embed the platonic versions of whatever , you can get the formal systems down pat as much as a formal system means anything
[03:14:20] <Cale> huh?
[03:14:32] <Cale> Sure...
[03:14:48] <Cale> I don't see how that helps us encode numbers in pure propositional logic.
[03:15:03] <brownorange> digital information and logical circuits already let us encode everything we need.
[03:15:21] <brownorange> Cale, by using hypotheses
[03:15:34] <Cale> How?
[03:16:28] <brownorange> hypothesize the states and the structure
[03:16:41] <Cale> What does that even mean?
[03:16:55] <Cale> I feel like you're grasping for something that isn't likely to be there
[03:17:12] <Cale> Pure propositional logic is too weak to formulate... most mathematical structures.
[03:17:17] <brownorange> ok let's start with circuits. you agree circuits can be setup to do what a computer program does
[03:17:28] <Cale> ummm...
[03:17:35] <Cale> If they're allowed to have cycles, yes
[03:17:44] <Cale> and delays
[03:17:53] <brownorange> we'll hypothesize those too. and id on't mean in the cycles=true  type of way
[03:17:58] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi) (Ping timeout: 252 seconds)
[03:18:09] <Cale> Cycles turn into inconsistency of your logic
[03:18:12] <brownorange> think of it as like writing an emulator. you've probably heard of a virtual machine
[03:18:37] <brownorange> Cale, with interpretation that apparently inconsistency can be abstracted away
[03:18:46] <Cale> If I can do general recursion, so I can compute the least fixed point of a function, I have (A -> A) -> A, basically
[03:18:48] <brownorange> apparent*
[03:18:58] <causative> brownorange, the basic problem is that in propositional logic you only have a finite number of propositions to work with
[03:19:13] <Cale> Well, that's also not true is it?
[03:19:29] *** Joins: dalcde (dec41@pip.srcf.societies.cam.ac.uk)
[03:19:47] <Cale> You can formulate arbitrarily long and complicated propositions, it's just that you can't express anything too interesting with tautologies of propositional logic.
[03:19:50] <brownorange> causative but computers have finite amounts of bits and circuits that allow full verifiers and formal system definitions
[03:19:59] *** Quits: crankslider (~slidercra@user/slidercrank) (Ping timeout: 268 seconds)
[03:20:14] <causative> I mean a finite number of atomic propositions
[03:20:26] <Guest0> The PDE I am looking at is u_tt - T/r * u_xx = 0 on (0,l) x(0,T). So I think that means x is in (0,l) and t is in (0,T). But how do I know if this PDE is "well-posed" ?
[03:20:37] <brownorange> Cale, the logical inferences (tautologies) are necessary but with more hypotheses we can advance precise state of affairs to reason about. even if it is one proof at a time
[03:21:31] <Cale> Oh, you mean by adding axioms?
[03:21:34] <brownorange> a simple way to setup a circuit is with biconditionals. output1 = (a /
[03:21:54] <causative> and even though the set of formulas is infinite, they can only implement a finite number of distinct logic functions, for a given number of atomic propositions
[03:22:12] <brownorange> output1 = (a /\ b)  output2 = (output1 Nor c)    // see the accumulation of processsing
[03:22:13] <Cale> causative: ah, in that sense, yeah
[03:22:58] <brownorange> we don't make infinite proofs .  though some get very long
[03:23:32] <brownorange> the longest proof ever made by mathematicians is still not infinite
[03:23:49] <Cale> Of course...
[03:24:01] <Cale> The output1 = ... thing made no sense to me though
[03:24:25] <brownorange> think of output1, output2, output3 as independent variables
[03:24:30] <Cale> I don't see how you're going to encode any statements about the natural numbers
[03:25:21] <brownorange> worst case scenario you build up all the same digital layers you do until you have something like a computerized formal verifiers (which already exist)
[03:26:28] <causative> you can't have an E(x) predicate that says whether x is even, you have to have E1 = false, E2 = true, E3 = false, E4 = true, ... to infinity, but you're not allowed to have an infinite schema, you have to write each one that you want separately
[03:28:30] <brownorange> are you hinting that because syntactic transformations in verifiers/provers isn't the same support as semantic, that the proofs make by verifiers are not as worthy ? my understanding is virtually every proof if not more can be done with computers
[03:29:51] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 268 seconds)
[03:30:12] *** Quits: Sofia (~sofia@gateway/tor-sasl/sofia) (Ping timeout: 276 seconds)
[03:31:56] <brownorange> I'm aware that in stronger formal systems like zfc, there's a greater infinity of propositions that can be expressed. but this doesn't matter in reality
[03:32:52] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[03:34:15] *** Joins: wabibunny87 (~bunny87@148.102.115.209)
[03:35:50] *** Quits: h4zel (~hazel@user/h4zel) (Ping timeout: 265 seconds)
[03:37:39] *** Quits: bunny87 (~bunny87@132.191.1.157) (Ping timeout: 268 seconds)
[03:39:08] <Guest0> My question is now: how do I know how many boundary conditions and initial conditions to impose on my PDE to make it so that a solution is unique?
[03:39:25] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:42:36] *** Joins: BadK4rMa (~BadK4rMa@75.175.121.142)
[03:44:49] <brownorange> So if we can encode the so called undecidable propositions (especially the troubling ones about self-provability), in a lesser formal system does that make the lesser formal system incomplete because it would have a proposition that is undecidable, or is because a decision procedure exists that makes it actually decidable?
[03:45:02] <brownorange> if the third option is it does nothing. then i wonder if encoding is all it's cracked up to be.
[03:45:36] <brownorange> in theory every proposition in prop-calc is decidable.
[03:45:45] *** wabibunny87 is now known as bunny87
[03:49:51] <mornfall> the system isn't lesser if it can encode the hard propositions of the original system
[03:50:48] <isekaijin> Guest0: I have only taken a course on the classical PDEs (heat, wave, Laplace). Furthermore, only in two independent variables. And already in that case we had insane behavior like one condition uniquely determining a solution, and another very similar condition not doing so.
[03:51:34] <Guest0> can you provide the example of needing only one condition to uniquely determining a solution ?
[03:52:03] <brownorange> @mornfall so propositional calculus would be as strong as peano or even zfc?
[03:52:03] <mornfall> Guest0: f(x, t) = 0 :p
[03:52:18] <Guest0> hm
[03:52:34] <Guest0> that isn't a PDE?
[03:52:48] <mornfall> Guest0: that's a condition
[03:52:51] <mornfall> Guest0: pick your PDE
[03:53:22] <Guest0> u_tt - T/r * u_xx = 0 on (0,l) x (0,T). Meaning x in (0,l) and t in (0,T)
[03:53:37] <isekaijin> Guest0: Finding a C^2 solution u(x,y) to the Laplace equation on a simply connected closed region D \subset R^2, such that u = 0 on the boundary.
[03:53:38] *** Joins: quartz (~quartz@user/quartz)
[03:54:52] <cherim> You can even take Guest0's equation and compare T/r>0 and T/r<0 cases
[03:55:40] <Guest0> I'm sorry, I am confused.
[03:57:00] <cherim> In principle, you can impose any sorts of boundaty conditions, but some variants are bad in the sense that you get either many solutions or none
[03:57:25] <Guest0> Okay, so how do I know how many I need?
[03:57:48] <cherim> Suppose we discard these and want "good" conditions which always yield unique solutions (provided some smoothness holds)
[03:57:50] <mornfall> Guest0: what everyone is trying to say, i think, is that there is no rule of thumb
[03:58:00] <Guest0> oh :(
[03:58:14] <cherim> Then in your example with T/r>0 you should specify f and f_t at t=0
[03:58:17] *** Joins: System123 (~System123@net-37-179-171-3.cust.vodafonedsl.it)
[03:58:19] <mornfall> PDEs are wild like that
[03:58:49] <cherim> And with T/R<0 you should specify f (without derivatives) on all 4 pieces of the boundary
[03:59:32] <Guest0> why?
[03:59:49] <mornfall> because cherim has seen the equation before :)
[04:00:36] *** Joins: seninha (~seninha@user/seninha)
[04:00:37] <cherim> Yes, you have to research specific types
[04:01:01] <Guest0> can you please tell me why you said what you said
[04:01:10] <mornfall> it's a pretty well-studied equation
[04:01:56] <Guest0> No...man I mean why for T/r > 0 they said to specify f and f_t at t = 0.
[04:02:01] <Sheilong> What is the definition of closest integer?
[04:02:56] <cherim> When T/r>0, it's a wave equation. Solutions are of the form f1(x-vt) + f2(x+vt)
[04:03:10] *** Quits: System123 (~System123@net-37-179-171-3.cust.vodafonedsl.it) (Ping timeout: 252 seconds)
[04:03:29] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[04:03:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[04:03:41] <mornfall> (with v the square root of T/r or somesuch)
[04:03:48] *** Joins: smitop7 (~smitop@user/smitop)
[04:03:58] <cherim> You can find f1 and f2 already from f and f' at t=0, then these parts will propagate along x=x0+vt and x=x0+vt lines
[04:04:43] <cherim> Values at the boundaries for t=0 will get overspecified if you also prescribe them arbitrarily
[04:04:52] <cherim> They have to be what the wave will bring there
[04:05:06] <brownorange> I've reached a conclusion. Assuming collatz conjecture was undecidable, encoding it in propositional logic would mean nothing. there would be so many layers of interpretation for the conjecture  and also the axioms of math, that there would be no meaning. just interpretation upon a skeleton.
[04:05:30] *** Joins: spirit- (~spirit@233.ip-144-217-92.net)
[04:05:35] <mornfall> brownorange: i think the main question is what you mean by 'encoding' there
[04:05:57] *** Quits: smitop (~smitop@user/smitop) (Quit: Ping timeout (120 seconds))
[04:05:57] *** Quits: spirit (~spirit@233.ip-144-217-92.net) (Quit: Leaving)
[04:05:57] *** smitop7 is now known as smitop
[04:06:12] *** Gustavo6046_ is now known as Gustavo6046
[04:06:44] <Guest0> uhm, okay
[04:07:01] <mornfall> brownorange: because if the result of said encoding is infinite, then it's meaningless to talk about decidability
[04:07:16] <isekaijin> What? Clearly the statement of the Collatz conjecture means something. There is a unique set of *the* natural numbers, and the Collatz conjecture either holds or does not hold for this set.
[04:07:26] <Guest0> when T/r < 0, why did you say there were pieces of bondary?
[04:08:13] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 265 seconds)
[04:08:23] <isekaijin> The issue here is that the Peano axioms (or whatever your favorite axiomatization of the natural numbers in FOL is, satisfying the hypotheses of Gödel's theorem) do not completely characterize the natural numbers, since they have other exotic models.
[04:08:45] <cherim> If T/r<0, "good" conditions would be specifying f on (t=0, 0<=x<=l), (t=T, 0<=x<=L), (x=0, 0<=t<=T), (x=L, 0<=t<=T)
[04:08:49] <mornfall> Guest0: because that's how Laplace's equation works
[04:08:55] <cherim> Four linear segments
[04:09:40] <cherim> In that case your f will minimize integral of (\grad f)^2 over the rectangle given boundary values
[04:09:40] <Guest0> so like...people already know these are the number of boundary/initial conditions for these known/special PDEs ?
[04:10:02] <cherim> This clearly has a solution for boundary conditions of this sort
[04:10:09] <mornfall> Guest0: as i said, those are well-studied equations
[04:10:16] <Guest0> okay. Thank you
[04:10:16] <mornfall> Guest0: and there is no rule of thumb
[04:10:24] <cherim> There are some rules
[04:10:35] <brownorange> @mornfall prop-calc can be infinite. the symbol table for the formal system however is usually quite short
[04:10:49] <brownorange> and the theorem for collatz is also a fairly short statement
[04:10:59] <brownorange> statement for collatz*
[04:11:01] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:11:02] <cherim> In 2D and second order it's mostly about the signature of a quadratic form ax^2 + 2b xy+ cy^2
[04:11:04] *** Quits: BadK4rMa (~BadK4rMa@75.175.121.142) (Remote host closed the connection)
[04:11:31] <brownorange> again verifier/provers on a computer don't need infinite bits or cpu power
[04:11:33] <cherim> Where the main derivatives in your equation are a f_xx + 2bf_xy + cf_yy
[04:11:52] <mornfall> brownorange: i want to see the ‘short’ propositional encoding of it
[04:12:06] <cherim> Definite forms will behave as T/r<0, (+1, -1) signature will behave like the wave equation
[04:12:07] <brownorange> lol
[04:12:30] <mornfall> brownorange: because you know, there are quantifiers in there
[04:12:32] <isekaijin> Never mind “short”, is there a finite propositional encoding of it?
[04:12:48] <Guest0> cherim, I don't know what you're saying. sorry
[04:13:23] *** Joins: ferdna (~ferdna@user/ferdna)
[04:13:30] <mornfall> isekaijin: (of course not)
[04:14:01] *** Quits: arseniiv_ (~arseniiv@136.169.204.31) (Ping timeout: 265 seconds)
[04:14:08] <cherim> http://www.scholarpedia.org/article/Partial_differential_equation#Classification_of_Second-Order_Partial_Differential_Equations
[04:15:11] *** Quits: kakashiA1 (~kakashi@ip-37-201-198-173.hsi13.unitymediagroup.de) (Quit: WeeChat 3.1)
[04:15:42] *** Joins: Nickssen (~Nickssen@pc-25-120-47-190.cm.vtr.net)
[04:16:00] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[04:16:08] <brownorange> i'll have to get back to you on a example of a propositional encoding. you're basically asking for me to construct hypothetical circuits, hypothetical theorem verifier and/or a hypothetical formal system implementation encodings.
[04:16:18] <isekaijin> brownorange: These days computers have rather large memories, shielding even most programmers from having to deal with the finiteness of it. But out of memory errors are a reminder that no, computers cannot deal with arbitrary natural numbers or arbitrarily large objects in general.
[04:16:19] <cherim> See also "Basic Problems for PDEs of Mathematical Physics" there which discusses the "good" types of boundary conditions for them
[04:16:59] <Nickssen> dirichlet and neumann and so on?
[04:17:07] <Nickssen> I started studying that this week heh D:
[04:17:55] *** Joins: Macuser (~Macuser@216.30.159.201)
[04:17:56] <mornfall> brownorange: no, i am asking you to consider the problem in abstract
[04:18:41] *** Joins: Sofia (~sofia@gateway/tor-sasl/sofia)
[04:18:56] <Nickssen> I can't recall if it was cherim, but someone here told me about finding substitutions to turn the following ODE into Bessel's DE: z^2 u''(z) - 2z u'(z) + (z^2 + 5/4)u(z)= 0
[04:19:06] <mornfall> brownorange: also, a) proof assistants don't use propositional calculus, and b) proof assistants are not magic
[04:19:28] <brownorange> mornfall in abstract a verifier can have a proof in memory, or atleast a statement in the proof. this statement is a wff. wffs are made up of symbols which are bits etc all part of the verifier or otherwise in memory.
[04:19:33] <cherim> It's almost Bessel as is
[04:19:40] <Nickssen> I think i could brave it through and use frobenius but it'd be a lot easier to use the substitution, but i can't undrstand how to change the sign on the +5/4
[04:19:45] <brownorange> hypothetically all that is representable as bits, the states that are, and the states that could be in the structure
[04:19:59] <brownorange> beneath the verifier is some circuits that can run the verifier, those circuits also could be bits
[04:20:13] <Nickssen> Bessel also needs that constant term to be an integer too, right?
[04:20:16] <brownorange> with enough layers yes you could have a simple statement like collatz encoded
[04:22:03] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[04:22:04] <cherim> I think that substitution will y=x^{3/2}u substitution will aready make the constant term positive
[04:22:19] <cherim> After all, the solutions were Bessels with nu=1
[04:22:39] <cherim> And no, Bessel exists not only for integer nu
[04:22:54] <brownorange> proving that the formalization of math can happen with a propositional encoding would require significant matching of known to be true/known to be false theorems. until you basically accepted the method works
[04:23:02] <Nickssen> ah right
[04:23:19] <Nickssen> all reals except negative integers right?
[04:23:51] <brownorange> if i encoded things right you could only do the proofs you know are correct
[04:23:56] <brownorange> using prop-calc
[04:24:51] <cherim> When you say "except ...", which value do you mean? nu or nu^2 or -nu^2?
[04:25:07] <cherim> In any case, I am not sure you have to forbid anything
[04:25:39] <cherim> nu and -nu are the same, of course, since it's (k^2 -nu^2/x^2)u in the canonical form
[04:26:21] <cherim> Pure imaginary nu https://dlmf.nist.gov/10.45
[04:26:33] <Nickssen> we were introduced to bessels equation as  x^2 y''(x) + xy'(x) + (x^2 - p ^2)y = 0
[04:26:57] <cherim> OK, my canonical form is after division by x^2
[04:27:00] <Nickssen> we used frobenius to define the J_p (x) function as the bessel function of order p of the first kind
[04:27:18] <cherim> Then you have (1-p^2/x^2)y
[04:27:25] <cherim> Can have any complex p
[04:27:52] *** Quits: brownorange (~brownoran@user/brownorange) (Quit: Leaving)
[04:27:59] <cherim> With (k^2-p^2/x^2) you only scale the argument, J_p(kx) instead of J_p(x)
[04:28:22] <cherim> Also no problems with k being imaginary (even happens more often)
[04:29:06] <tusko> qergle, sorry had to change some lady's oil
[04:29:18] *** Joins: gggpkm (~gggpkm@111-251-158-17.dynamic-ip.hinet.net)
[04:29:26] <tusko> The punctuation is gone, its just all uppercase characters in sequence
[04:29:27] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 268 seconds)
[04:29:54] <qergle> tusko: except it's not all gone.
[04:29:54] *** Joins: twoisprime (~twoisprim@user/twoisprime)
[04:30:00] <tusko> That's right
[04:30:10] <tusko> Let me correct that, I totally overlooked it
[04:30:18] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:30:37] <qergle> oh, you enciphered the text?
[04:31:06] <tusko> Yes, but I have some other ciphertext that was given to me
[04:31:22] <Nickssen> having a bit of trouble with it cherim, but still trying to get it
[04:31:28] <qergle> well, then i can tell you, it's the beginning of a very famous book
[04:31:38] <tusko> yeah, exactly
[04:31:41] <tusko> exactly
[04:31:54] <qergle> but the first char you gave "F" should be an "L"
[04:32:00] <qergle> there are some other issues too
[04:34:08] *** Quits: cuppajoeman (~cuppajoem@public-241-139.nat.utoronto.ca) (Ping timeout: 256 seconds)
[04:34:50] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[04:38:16] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[04:38:35] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:38:37] <qergle> tusko: changing oil again?
[04:38:45] <tusko> nah
[04:38:47] <tusko> try this https://termbin.com/7ebvv
[04:38:59] <tusko> I'll share my function
[04:39:51] <Nickssen> hi qergle
[04:39:53] <tusko> encoding function https://termbin.com/br85
[04:39:56] <Nickssen> hadn't realized that name change
[04:40:03] <qergle> tusko: that's better
[04:40:12] <qergle> but still messed up. you tried to use deadbeef, i think.
[04:40:45] <qergle> hello Nickssen
[04:40:58] <Nickssen> how is presidency going?
[04:41:12] *** Quits: brettgilio (~brettgili@x-node.gq) (Quit: Leaving...)
[04:41:24] *** Joins: brettgilio (~brettgili@x-node.gq)
[04:45:34] <tusko> qergle, yeah that was the key DEADBEEF
[04:46:04] *** Quits: brettgilio (~brettgili@x-node.gq) (Client Quit)
[04:46:17] *** Joins: brettgilio (~brettgili@x-node.gq)
[04:46:47] *** Quits: brettgilio (~brettgili@x-node.gq) (Client Quit)
[04:47:05] <qergle> hrmm, actually, it looks fine to me now.
[04:47:28] *** Joins: brettgilio (~brettgili@x-node.gq)
[04:47:46] <qergle> but you see the issue with your last encoding?
[04:47:47] *** Quits: brettgilio (~brettgili@x-node.gq) (Client Quit)
[04:47:51] <tusko> nice
[04:48:01] <qergle> it should've been: https://dpaste.org/VYOk
[04:48:04] <tusko> but how do you identify the key once you know the key length?
[04:48:18] <qergle> freq analysis
[04:48:44] <tusko> So my function must be incorrect
[04:49:45] *** Joins: brettgilio (~brettgili@x-node.gq)
[04:49:50] <tusko> because when I decode your cipher with DEADBEEF I get junk
[04:50:14] <qergle> no, that was the proper encoding the first time you gave it to me
[04:50:38] <qergle> when you used JKGJHKKL to cipher it
[04:51:05] <qergle> what you gave was "FKRUUWOYLCNVHOVMWWU..." which was wrong
[04:51:47] <qergle> my pastebin corrects your initial ciphertext from a few hours ago.
[04:52:03] <tusko> I don't think I ever used JKGJHKKL
[04:52:20] <qergle> what did you use for the very first thing you pasted to me?
[04:52:29] <tusko> Ok, I haven't changed that function
[04:52:32] <tusko> 1 sec
[04:52:49] <qergle> whatever it was that spit out "FKRUUWOYLCNVHOVMWWUV..."
[04:54:30] <tusko> This is the output of vigenere(text, 'DEADBEEF') https://termbin.com/ro23g
[04:55:27] <qergle> ok, i think i'm in a parallel universe where nothing makes sense
[04:55:37] <qergle> a few hours ago you posted a ciphertext
[04:55:48] <tusko> in chat?
[04:55:49] <qergle> it began like this: "FKRUUWOYLCNVHOVMWWUVLXIPJBYWHQYYJXTNCOBYVS..."
[04:55:52] <qergle> do you remember?
[04:56:05] <tusko> It would have had strange punctuation in it
[04:56:09] <qergle> yes, i replied "good lord" or something, because you flooded the channel
[04:56:22] *** Quits: brettgilio (~brettgili@x-node.gq) (Remote host closed the connection)
[04:56:27] <tusko> I got rid of all of that punctuation and got the string you see now
[04:56:41] *** Joins: brettgilio (~brettgili@x-node.gq)
[04:56:56] <qergle> yes
[04:57:00] <qergle> but you also changed the key
[04:57:02] <qergle> <tusko> 'FKRUUWOYLCNVHOVMWWUVLXIPJBYWHQYYJXTNCOBYV
[04:57:06] *** Quits: brettgilio (~brettgili@x-node.gq) (Remote host closed the connection)
[04:57:11] <qergle> when you made that ^^ what key did you use?
[04:57:23] <tusko> I honestly don't recall
[04:57:35] *** Joins: brettgilio (~brettgili@x-node.gq)
[04:57:47] <qergle> it was JKGJHKKL
[04:57:58] <tusko> I can show you my encrypt function
[04:58:07] <tusko> https://termbin.com/br85
[04:58:13] <qergle> ok, moving on, this is not productive
[04:58:23] <qergle> the last cipher was melville with DEADBEEF key
[04:58:29] *** Quits: bunny87 (~bunny87@148.102.115.209) (Ping timeout: 265 seconds)
[04:58:50] <qergle> properly done because you removed everything except the letters A through Z
[04:59:04] <tusko> the one you sent to me?
[04:59:11] <tusko> was it uppercase, lowercase?
[04:59:11] <qergle> are you drunk?
[04:59:31] <tusko> No man, I used my vigenere function with DEADBEEF key to decode it and got junk
[04:59:45] <qergle> ok, i'm only doing this once more
[04:59:52] <tusko> I'm asking you if you see anything obviously wrong with the function
[05:00:18] <qergle> 1. You INCORRECTLY encrypted using 'JKGJHKKL' a few hours ago. my pastebin PROPERLY encrypts using 'JKGJHKKL'
[05:00:42] <qergle> 2. you now CORRECTLY encrypted using "DEADBEEF'. I cracked that too.
[05:01:12] <qergle> are you with me now?
[05:01:34] <tusko> Do you agree that the ciphertext beginning with FELON is Melville encrypted with 'DEADBEEF'?
[05:01:45] <qergle> yes
[05:01:55] <tusko> ok, then yeah I think we agree
[05:02:24] <tusko> Except earlier I used DEADBEEF also, not JKGJHKKL
[05:02:29] <qergle> no you didn't
[05:02:33] <Nickssen> i wish i was drunk
[05:02:34] <tusko> lol
[05:03:15] <tusko> The string, at that time, had punctuations in it that were unhandled. It could have appeared to be encrypted by whatever kind of key
[05:03:42] <tusko> I would call you attention to JKGJHKKL where the D's have become J's and the E's are mad K's
[05:03:51] <tusko> Its DEADBEEF but all dicked up
[05:04:49] <qergle> oh i see
[05:04:58] <qergle> yeah, the punctuation threw off the key
[05:06:26] <qergle> now, on to your project. once you find the key length that maximizes likelihood, you need to have some kind of english score, match to english freqs
[05:06:46] <qergle> not sure how you want to handle that, maybe rank by matching of top 10 or so
[05:08:24] *** Joins: vicfred (~vicfred@user/vicfred)
[05:15:45] *** Joins: stipa_ (~stipa@user/stipa)
[05:18:18] *** Quits: stipa (~stipa@user/stipa) (Ping timeout: 265 seconds)
[05:18:20] *** stipa_ is now known as stipa
[05:18:27] *** Joins: seninha (~seninha@user/seninha)
[05:20:01] *** Quits: quartz (~quartz@user/quartz) (Ping timeout: 252 seconds)
[05:22:07] <tusko> qergle, I thought to try matching the frequency of a bin to a letter +/- some tolerance but it didn't work out so well
[05:22:49] <tusko> My next thought was to take the closest 3 or something and try all permutations of those.
[05:23:06] <tusko> but how I'd identify proper english text without visual inspection idk
[05:23:55] <qergle> the key here is coming up with a good score function
[05:23:57] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:26:22] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[05:28:49] *** Joins: Arcorann (~A@user/arcorann)
[05:30:21] <tusko> yeah, no kidding
[05:31:22] *** Joins: bunny87 (~bunny87@148.102.115.209)
[05:32:02] *** Quits: Dotz0cat (~Dotz0cat@h144.199.117.75.dynamic.ip.windstream.net) (Ping timeout: 260 seconds)
[05:34:46] *** Joins: Dotz0cat (~Dotz0cat@h115.70.29.71.dynamic.ip.windstream.net)
[05:37:41] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[05:38:09] *** Quits: Nickssen (~Nickssen@pc-25-120-47-190.cm.vtr.net) (Ping timeout: 256 seconds)
[05:38:53] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:6d6b:4dc3:fdc2:2c00)
[05:39:24] *** Joins: kmh_ (~kmh@p200300df5f40570075ceafc9a632845f.dip0.t-ipconnect.de)
[05:41:36] *** Quits: kmh (~kmh@p200300df5f378d0021639dd591b39146.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[05:44:54] *** Quits: xff0x (~xff0x@2001:1a81:52ed:4100:e126:e3d0:8698:438) (Ping timeout: 268 seconds)
[05:45:22] *** Quits: AimHere (~David@92.238.16.159) (Ping timeout: 252 seconds)
[05:46:07] *** Joins: xff0x (~xff0x@2001:1a81:5327:1a00:7ba6:6c4f:f759:2f72)
[05:47:09] *** Joins: Nickssen (~Nickssen@pc-25-120-47-190.cm.vtr.net)
[05:47:31] *** Quits: twoisprime (~twoisprim@user/twoisprime) (Quit: twoisprime)
[05:48:53] *** Quits: qeed__ (~qeed@072-190-106-143.res.spectrum.com) (Quit: qeed__)
[05:51:14] *** Joins: qeed (~qeed@072-190-106-143.res.spectrum.com)
[05:53:40] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (Ping timeout: 240 seconds)
[05:53:41] *** Joins: sveit (~sveit@2001:19f0:ac01:247:5400:ff:fe5c:689f)
[05:53:55] *** Joins: wabibunny87 (~bunny87@148.102.115.209)
[05:57:56] *** Quits: bunny87 (~bunny87@148.102.115.209) (Ping timeout: 265 seconds)
[05:58:49] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[05:58:51] *** Joins: AimHere (~David@92.238.16.159)
[06:04:34] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:08:52] *** Joins: quartz (~quartz@user/quartz)
[06:19:03] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Read error: Connection reset by peer)
[06:19:08] *** Joins: dogbert_2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[06:19:44] *** Joins: Donitz_ (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[06:22:10] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Ping timeout: 252 seconds)
[06:22:51] *** Quits: Donitz_ (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Client Quit)
[06:23:26] *** Joins: cmayo (~cmayo@2603-7000-9403-3591-9406-d14d-8f93-78da.res6.spectrum.com)
[06:23:28] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[06:27:27] *** dogbert_2 is now known as dogbert2
[06:28:16] *** Quits: brettgilio (~brettgili@x-node.gq) (Quit: Leaving...)
[06:28:35] *** Joins: brettgilio (~brettgili@x-node.gq)
[06:29:16] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.2)
[06:35:01] *** Joins: frelleck (~frelleck@user/frelleck)
[06:35:42] *** Joins: gggp (~textual@60.10.23.159)
[06:36:18] *** Quits: gggp (~textual@60.10.23.159) (Client Quit)
[06:37:34] *** Joins: Macuser (~Macuser@216.30.159.201)
[06:37:48] *** Joins: orthoplex64 (~crm@70.120.0.94)
[06:39:43] <Nickssen> hi frelleck
[06:39:56] <frelleck> hi
[06:41:30] <Nickssen> how is everything? here i am on saturday night studying for thursday's test with my old friend
[06:42:00] <frelleck> eh all right
[06:42:04] <frelleck> wish I had something to do
[06:43:11] <Nickssen> reading is something i've been wanting to do
[06:43:19] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[06:48:20] *** Quits: yinghua (~yinghua@2800:2121:1400:1db:b16d:d359:384:92aa) (Quit: Leaving)
[06:48:21] *** wabibunny87 is now known as bunny87
[06:49:47] <[itchyjunk]> Z-module, yes
[06:50:26] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:6d6b:4dc3:fdc2:2c00) (Ping timeout: 260 seconds)
[06:53:39] *** Joins: eruditass (uid248673@id-248673.uxbridge.irccloud.com)
[06:56:32] <orthoplex64> the 120 vertices of the 600-cell as unit quaternions form a group under multiplication and correspond to icosahedral symmetry (rotations only); same with the 24-cell and tetrahedral symmetry. but what 4-polytope's vertices correspond to octahedral symmetry? it would have to have 48 vertices, and none of the ones I know have that number of vertices
[06:57:51] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Remote host closed the connection)
[06:58:21] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[06:59:03] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Remote host closed the connection)
[06:59:13] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[07:02:36] *** Joins: mendel_munkis (~moshe@97-127-22-211.mpls.qwest.net)
[07:02:59] *** mendel_munkis is now known as Guest8525
[07:03:02] *** Joins: xiongxin8802 (~xiongxin@119.123.103.94)
[07:04:07] <[itchyjunk]> this https://i.ibb.co/Jxkf1Dw/image.png has the solution this https://www.desmos.com/calculator/mfijjxmtqj right ?
[07:04:17] <[itchyjunk]> Actually stratch that, i know that oen is correct
[07:04:45] <Nickssen> oo are you doing complex variable now?
[07:04:50] <Nickssen> I am about to start that class
[07:05:17] <[itchyjunk]> yes
[07:05:18] <Guest8525> is https://pastebin.com/4BPTDN0x an accurate definition of well-ordered?
[07:06:53] <bunny87> Nickssen, [itchyjunk]: nice, i've started complex an recently :3
[07:07:01] <bunny87> hope the best for you! po/
[07:07:02] <bunny87> o/
[07:07:23] <Nickssen> heh thanks! struggling with pdes for the moment heh
[07:08:11] <bunny87> oh no, not good T_T
[07:11:07] <Nickssen> If i have the sturm liouville problem (1+x)^2 D^2y = k y    (k as eigenvalue) what would be an appropriate change of variable to make the operator have the cauchy euler form?
[07:14:14] *** Joins: BadK4rMa (~BadK4rMa@75.175.121.142)
[07:14:14] <Nickssen> nevermind
[07:14:18] <Nickssen> lol
[07:17:49] <orthoplex64> never mind my question too; apparently it's the union of a 24 cell and its normalized dual, which doesn't look like it has a name
[07:19:52] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:207a:16a3:41d0:11b8) (Quit: Quit)
[07:25:34] *** Quits: Nickssen (~Nickssen@pc-25-120-47-190.cm.vtr.net) (Quit: Client closed)
[07:29:38] *** Quits: jero98772 (~jero98772@181.58.39.14) (Remote host closed the connection)
[07:35:24] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[07:36:55] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 268 seconds)
[07:43:40] *** Joins: Null_A (~null_a@2601:645:8700:2290:f960:d5c5:94b5:c3e6)
[07:47:57] *** Quits: tacegory (~tacegory@user/tacegory) (Remote host closed the connection)
[07:54:45] *** Quits: cmayo (~cmayo@2603-7000-9403-3591-9406-d14d-8f93-78da.res6.spectrum.com) (Quit: quit)
[07:55:57] *** Joins: kakuhen_ (~kakuhen@user/kakuhen)
[07:56:28] *** Joins: Carbonflux (~Carbonflu@c-24-56-228-141.customer.broadstripe.net)
[07:56:38] *** Quits: tusko (~yeurt@copyfree/advocate/tusko) (Remote host closed the connection)
[07:56:48] *** Joins: twoisprime (~twoisprim@user/twoisprime)
[07:57:00] *** Joins: tusko (~yeurt@copyfree/advocate/tusko)
[07:58:57] <qergle> tusko: here's one for you (or anyone else): https://dpaste.org/6m24
[07:59:02] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Ping timeout: 260 seconds)
[07:59:05] *** Joins: pycurious (~Adium@user/pycurious)
[07:59:59] <pycurious> Given a rectangle R (integral coordinates centered at 0,0), how do i generate a random rectangle S of a given size inside R?  S is not axis-aligned
[08:01:35] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 268 seconds)
[08:06:33] *** Joins: elderK (uid205007@id-205007.helmsley.irccloud.com)
[08:09:46] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 260 seconds)
[08:11:40] *** Quits: DaPinkOne (~Dap@user/dap) (Ping timeout: 268 seconds)
[08:13:30] *** Joins: cmayo (~cmayo@2603-7000-9403-3591-9406-d14d-8f93-78da.res6.spectrum.com)
[08:16:29] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[08:17:54] *** Quits: BadK4rMa (~BadK4rMa@75.175.121.142) (Remote host closed the connection)
[08:18:21] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[08:19:36] *** Quits: Kaylah (~Kaylah@ptr-ekg3bny15a5hndb6zax.18120a2.ip6.access.telenet.be) (Quit: Client closed)
[08:21:10] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 240 seconds)
[08:21:51] *** Joins: BadK4rMa (~BadK4rMa@75.175.121.142)
[08:22:57] *** Quits: BadK4rMa (~BadK4rMa@75.175.121.142) (Remote host closed the connection)
[08:24:15] *** Joins: gggp (~textual@60.10.23.159)
[08:24:53] *** Quits: gggp (~textual@60.10.23.159) (Client Quit)
[08:26:45] *** Joins: solveig (sid194105@id-194105.uxbridge.irccloud.com)
[08:27:30] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 260 seconds)
[08:27:52] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[08:29:41] *** Joins: DaPinkOne (~Dap@user/dap)
[08:30:19] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 252 seconds)
[08:30:41] *** Joins: cheater (~Username@user/cheater)
[08:31:11] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[08:32:36] <PlanckWalk> pycurious: Do you have any particular distribution properties you want to satisfy?
[08:37:07] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-75b6-b217-124b-0862.res6.spectrum.com) (Read error: Connection reset by peer)
[08:42:11] <pycurious> PlanckWalk: Just uniformly chosen at random would be great
[08:42:44] <pycurious> PlanckWalk:  the problem is, in my case, I'm really working with R as being a matrix and S being a submatrix of a fixed size.
[08:43:28] <pycurious> So given say a R = 1000 x 2000  I need a sub matrix of size 4 x 100 (rotated arbitrarily) inside R
[08:44:01] <pycurious> I can also live with approximately uniform if that is easier
[09:02:09] <PlanckWalk> Uniformly in what space?
[09:02:35] *** Quits: bunny87 (~bunny87@148.102.115.209) (Read error: Connection reset by peer)
[09:02:39] <PlanckWalk> Err wait what?  What is a "matrix rotated randomly"?
[09:03:26] <PlanckWalk> Err arbitrarily
[09:03:35] *** Joins: gggp (~textual@60.10.194.42)
[09:03:48] <PlanckWalk> Like, a 4x100 matrix at an angle of 13.6 degrees or something?
[09:04:46] <pycurious> PlanckWalk: so if you have a 1000, 2000 matrix. You want to pick a random submatrix of size 4x100, but this matrix could be a horizontal, vertical, 45 degree angled or any angled submatrix?
[09:04:55] <pycurious> yes -
[09:05:39] *** Quits: gggp (~textual@60.10.194.42) (Client Quit)
[09:06:46] *** Quits: gggpkm (~gggpkm@111-251-158-17.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[09:06:49] *** Joins: gggp (~textual@60.10.23.159)
[09:08:04] <PlanckWalk> pycurious: What would (for example) a 2x2 matrix rotated 15 degrees look like?
[09:08:37] <PlanckWalk> What entries from R would fill the entries of some random T?
[09:10:23] <pycurious> PlanckWalk: I'm not sure how to define a integral 2x2 subset that is rotated. If this was a real number - that would be easier
[09:11:10] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (Ping timeout: 252 seconds)
[09:11:45] *** Quits: xiongxin8802 (~xiongxin@119.123.103.94) (Ping timeout: 265 seconds)
[09:12:08] <PlanckWalk> If it was an image, you could probably do interpolation or something.
[09:12:28] <PlanckWalk> But for a general matrix that could mean anything, I don't even know whether it makes sense.
[09:12:59] *** Joins: xiongxin8802 (~xiongxin@113.116.224.211)
[09:13:47] <PlanckWalk> At any rate you could probably do rejection sampling: pick a top-left point uniformly at random and a uniform rotation angle, and reject those that go outside your original rectangle.
[09:13:48] *** Quits: aac (~AAC@2001:8a0:6cc5:7e01:e53e:bff9:da2:4604) (Quit: aac)
[09:14:20] <PlanckWalk> (Treating these as a continuous real rectangles for now)
[09:14:54] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[09:17:11] <PlanckWalk> That gives you a uniform conditional distribution.
[09:17:22] *** Joins: jamtorus (~quassel@185.213.154.161)
[09:17:43] <PlanckWalk> (But not the only uniform conditional distribution!)
[09:18:25] *** Quits: Guest8525 (~moshe@97-127-22-211.mpls.qwest.net) (Read error: No route to host)
[09:18:26] <pycurious> PlanckWalk: I was thinking if i can sample a segment …then move the segment up and down
[09:18:35] *** Joins: mendel_munkis (~moshe@97-127-22-211.mpls.qwest.net)
[09:18:59] *** mendel_munkis is now known as Guest2161
[09:19:28] <PlanckWalk> Do you mean for the integer points?
[09:20:05] <PlanckWalk> The trouble is that a real rectangle of integer area A doesn't necessarily have A points in it.
[09:20:16] <PlanckWalk> A integer points, I mean.
[09:20:58] *** Quits: jellydonut (~quassel@185.213.154.161) (Ping timeout: 252 seconds)
[09:23:05] <PlanckWalk> A 2x2 square centred at the origin with an angle of 45 degrees to the axes includes 5 points, for example.
[09:23:49] *** Joins: Arcorann_ (~A@159-196-65-46.9fc441.mel.nbn.aussiebb.net)
[09:23:50] *** Quits: Arcorann (~A@user/arcorann) (Read error: Connection reset by peer)
[09:24:15] *** Quits: Guest0 (~Guest0@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 256 seconds)
[09:35:02] *** Quits: RadSurfer (~RadSurfer@cpe-174-104-66-243.neo.res.rr.com) (Remote host closed the connection)
[09:35:22] *** Joins: RadSurfer (~RadSurfer@cpe-174-104-66-243.neo.res.rr.com)
[09:35:57] *** Quits: int-e (~noone@int-e.eu) (Ping timeout: 245 seconds)
[09:36:06] *** Joins: int-e (~noone@int-e.eu)
[09:39:42] *** Quits: xbatora1 (xbatora1@lounge.fi.muni.cz) (Ping timeout: 245 seconds)
[09:39:55] *** Joins: xbatora1 (xbatora1@lounge.fi.muni.cz)
[09:40:15] *** Quits: ozarker (~ozarker@172-15-173-110.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 268 seconds)
[09:40:32] *** Quits: udevd (~kaetzchen@user/udevd) (Ping timeout: 245 seconds)
[09:40:34] *** Joins: ozarker (~ozarker@172-15-173-110.lightspeed.mssnks.sbcglobal.net)
[09:40:47] *** Joins: udevd (~kaetzchen@user/udevd)
[09:41:06] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Read error: Connection reset by peer)
[09:43:23] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[09:47:10] *** Joins: System123 (~System123@net-37-179-171-3.cust.vodafonedsl.it)
[09:49:24] *** Joins: pycurious (~Adium@user/pycurious)
[09:51:34] *** Quits: System123 (~System123@net-37-179-171-3.cust.vodafonedsl.it) (Ping timeout: 268 seconds)
[09:55:40] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 268 seconds)
[09:55:40] *** Quits: cmayo (~cmayo@2603-7000-9403-3591-9406-d14d-8f93-78da.res6.spectrum.com) (Quit: quit)
[09:56:06] *** Quits: solveig (sid194105@id-194105.uxbridge.irccloud.com) (Quit: Updating details, brb)
[09:56:15] *** Joins: solveig (sid194105@id-194105.uxbridge.irccloud.com)
[09:57:51] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:913c:38b7:852c:ff66)
[09:59:31] *** Joins: cmayo (~cmayo@2603-7000-9403-3591-9406-d14d-8f93-78da.res6.spectrum.com)
[10:09:04] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[10:16:16] *** Quits: elderK (uid205007@id-205007.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[10:17:38] *** Joins: mbuf (~Shakthi@182.77.103.62)
[10:19:01] *** Joins: pycurious (~Adium@user/pycurious)
[10:21:28] *** Joins: qbt (~edun@user/edun)
[10:22:19] *** Quits: twoisprime (~twoisprim@user/twoisprime) (Ping timeout: 265 seconds)
[10:23:14] *** Quits: qbt (~edun@user/edun) (Remote host closed the connection)
[10:23:46] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 265 seconds)
[10:24:44] *** Joins: ppw (~ppw@user/ppw)
[10:25:44] *** Joins: Gurkenglas (~Gurkengla@dslb-002-207-014-195.002.207.pools.vodafone-ip.de)
[10:26:43] <ppw> is there any fundamental distinction between 'Gaussian' and 'normal'?
[10:27:45] <somiaj> not that I know of, just two different names for the same distribution
[10:28:41] <somiaj> though according to wikipedia, gaussian is the name of the function of the bell curve, while normal is the actual distribution, but they often get used interchangable
[10:29:32] <somiaj> https://en.wikipedia.org/wiki/Gaussian_function -- that is not the same as the normal distribution, but a lot might depend on context
[10:30:40] *** Quits: coeus (~coeus@211.sub-174-205-160.myvzw.com) (Ping timeout: 240 seconds)
[10:31:16] *** Quits: average (uid473595@user/average) (Quit: Connection closed for inactivity)
[10:31:22] *** Quits: frelleck (~frelleck@user/frelleck) ()
[10:31:57] <ppw> so when a text is referring to random variables that are i.i.d., Gaussian, and normal, it would be just the same if it said random variables that are i.i.d. and normal, right?
[10:32:43] <somiaj> Yea in that context, gaussian is just another name for normal distribution
[10:32:58] <somiaj> I was just pointing out that some may consider the gaussian the 'function' and not the distribution
[10:33:11] <ppw> yeah, no, I get it .. that's why I specified the context
[10:33:15] <somiaj> but I too have heard guassian and normal used interchangable
[10:33:44] <somiaj> though I'm unsure why a book would say, 'i.i.d., Gaussian, and normal' that seems a bit redundent
[10:34:05] <somiaj> I would guess they would use either gaussian or normal, but not both. Do you have an example book that actually said that?
[10:34:39] <ppw> it's my lecture notes, probably copied from a powerpoint slide
[10:35:31] <ppw> about Gauss-Markov assumptions
[10:36:01] <ppw> that's the condition on the residuals
[10:36:07] <somiaj> I don't know what those are, I recongize markov chains, but not sure what gauss-markov assumptions would be
[10:36:15] <ppw> linear regression
[10:37:08] <somiaj> yea just seems to be stating the assumptions that are needed
[10:37:19] <ppw> yes
[10:37:55] <somiaj> I don't know them off the top of my head, but looking them up in google, they seem reasonable
[10:39:31] *** Joins: nejimban_ (~ben@2a01cb000533ce00058a20e68951a619.ipv6.abo.wanadoo.fr)
[10:39:43] *** Joins: qbt (~edun@user/edun)
[10:40:10] *** Quits: nejimban (~ben@user/nejimban) (Ping timeout: 240 seconds)
[10:42:30] *** Quits: Null_A (~null_a@2601:645:8700:2290:f960:d5c5:94b5:c3e6) (Remote host closed the connection)
[10:43:35] *** Joins: nejimban (~ben@lfbn-idf1-1-1697-248.w90-91.abo.wanadoo.fr)
[10:43:35] *** Quits: nejimban (~ben@lfbn-idf1-1-1697-248.w90-91.abo.wanadoo.fr) (Changing host)
[10:43:35] *** Joins: nejimban (~ben@user/nejimban)
[10:43:44] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[10:45:00] *** Quits: nejimban_ (~ben@2a01cb000533ce00058a20e68951a619.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[10:48:53] *** Joins: twoisprime (~twoisprim@user/twoisprime)
[10:53:37] *** Joins: TechTest (uid283215@id-283215.lymington.irccloud.com)
[10:53:51] *** Quits: twoisprime (~twoisprim@user/twoisprime) (Ping timeout: 268 seconds)
[10:57:46] *** Quits: harveypwca (~harveypwc@2601:246:c180:a570:2435:ba7:e573:bc26) (Quit: Leaving)
[10:58:04] *** Joins: pycurious (~Adium@user/pycurious)
[10:58:34] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[11:02:43] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 252 seconds)
[11:06:11] *** Quits: xiongxin8802 (~xiongxin@113.116.224.211) (Ping timeout: 268 seconds)
[11:06:44] *** Joins: twoisprime (~twoisprim@user/twoisprime)
[11:10:59] *** Joins: p0indexter (~alpha@user/p0indexter)
[11:13:51] *** Quits: p0indexter (~alpha@user/p0indexter) (Client Quit)
[11:15:35] *** Parts: ppw (~ppw@user/ppw) ()
[11:16:03] *** Joins: kobalt (~rsonx@user/kobalt)
[11:23:28] *** Joins: Simplar (~Simplar@188.163.92.105)
[11:24:01] <Simplar> I've got a pretty tricky plane geometry task here.
[11:25:24] *** Quits: twoisprime (~twoisprim@user/twoisprime) (Quit: twoisprime)
[11:28:37] <Simplar> In triangle ABC with medians AL, BM, and CN, with such points A₁, B₁, C₁ chosen on medians AL, BM, and CN, that AA₁:A₁L = BB₁:B₁M = CC₁:C₁N = 3:1. Find the ratio of areas of triangles ABC and A₁B₁C₁.
[11:30:49] <Simplar> Here is the drawing: https://prnt.sc/1ssls18
[11:32:00] <Simplar> I know that in any triangle medians meet at a point O that divides each median in ratio 2:1 starting from the vertex.
[11:32:28] *** Joins: p0indexter (~alpha@user/p0indexter)
[11:35:02] *** Quits: kobalt (~rsonx@user/kobalt) (Quit: leaving)
[11:36:16] <Simplar> i know that the triangle LMN is a triangle made by midlines of triangle ABC. So its area is equal to 1/4 the area of ABC
[11:36:24] *** Quits: gggp (~textual@60.10.23.159) (Ping timeout: 268 seconds)
[11:36:51] <Simplar> I believe A₁B₁C₁ is similar to LMN, but I don't yet know with which coefficient
[11:37:59] *** Joins: Fohsap (~Muimi@2001:19f0:6001:e4d:5400:3ff:fe41:8d5b)
[11:38:22] *** Joins: audio (~audio@2603-8081-1800-6a6f-60cd-6954-be1d-d6dd.res6.spectrum.com)
[11:38:41] *** Joins: pycurious (~Adium@user/pycurious)
[11:43:02] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 260 seconds)
[11:43:45] <Simplar> Let O be the point of intersection of all three medians. Then we have AO:OL=BO:OM=CO:ON=2:1. Let's analyze the median AL, finding OA₁:A₁L. If AO=2x, then OL = x. By the task, if AA₁ = 3y, then A₁L = y. Thus AL = x+2x = 3y+y, thus 3x=4y, thus x:y = 4:3, and y:x = 3:4. That means x = 4y/3, and y = 3x/4.
[11:49:22] <Simplar> AA₁ = 3y = 3*3x/4 = 9x/4. AO = 2x. Thus, OA₁ = AA₁-AO = 3y-2x = 9x/4-2x=(1/4)x. But if OA₁ = (1/4)x, and OL = x, then OA₁:A₁L = (1/4)x:(3/4)x = 4x:(4*3x) = 1:3.
[11:52:42] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:52:49] <Simplar> OA₁ is 2z of a median in triangle A₁B₁C₁, thus 2z = (1/4)x => z = (1/8)x.
[11:53:33] <Simplar> So the median from A₁ has a length (3/8)x.
[11:54:22] <Simplar> (3/8)x:3x = 1:8
[11:55:02] <Simplar> so median of a triangle A₁B₁C₁ to the opposite side of A₁ has a length equal to 1/8 of the length of AL.
[11:56:23] <Fangs> maybe this is too much of a soft question, but what are some common 'hook' questions that might get someone hooked on mathematics
[11:56:50] <Fangs> I went down the RSA cryptography, fermat's little theorem, group theory route (not quite, but that was part of it)
[11:56:56] <Simplar> Fangs: anything that a non-mathematician will be interested in
[11:57:04] <Simplar> Most people's concern is how do they use it in life
[11:57:11] <Fangs> yes, I'm collecting some common avenues
[11:57:22] *** Joins: gggp (~textual@114.245.104.163)
[11:57:32] <Simplar> I would say, the Pareto principle
[11:57:34] <Fangs> physics, calculus, DE is another brain-dead obvious one too, but thats also immensely broad
[11:57:38] <Simplar> or a probability theory
[11:57:46] <Simplar> because those indeed are useful
[11:58:07] <Fangs> I'll have to concede that I don't know game theory or voting theory
[11:58:07] *** Joins: specing_ (~specing@user/specing)
[11:58:07] *** Quits: specing (~specing@user/specing) (Killed (NickServ (GHOST command used by specing_)))
[11:58:11] <Simplar> Dirichlet principle about pigeons in particular
[11:58:33] *** Quits: vqueiroz (uid340368@id-340368.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[11:58:50] <Fangs> (which is a shame, thats also a very 'weird' area of maths that many might not even know exists)
[11:59:01] <Simplar> (true)
[11:59:15] <Simplar> I'm kinda stuck at that point. If two similar triangle have medians in ratio of 1:8, then how do I find how their areas relate?
[11:59:21] <Fangs> I think data structures -> graphs -> euler's characteristic -> alg top is a very very far stretch but this is what got me hooked
[11:59:26] <Simplar> Do I really have to use the Heron's formula for medians lmao
[11:59:46] *** specing_ is now known as specing
[12:00:02] <Fangs> Simplar: arent the two triangles similar?
[12:01:24] <Simplar> yes but I only know the ratio of medians
[12:01:38] *** Joins: chomwitt (~chomwitt@2a02:587:dc15:500:12c3:7bff:fe6d:d374)
[12:02:16] <Fangs> what are you doing this problem for?
[12:02:29] <Fangs> (as in, what kind tools do you have access to)
[12:02:34] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[12:03:17] <Fangs> I'll pretend we can work with vectors
[12:04:14] <Fangs> Simplar: the center of the triangle is just (OA + OB + OC)/3 while "N" is just (AO + OC)/2 I think
[12:04:45] <Simplar> Fangs: it's a problem given to me by a student of pre-graduate class. He's kinda dying to know the solution
[12:05:48] <Fangs> let X be the center, and N be the point on that side there. from here you should be able to find the length of XN
[12:05:53] <Fangs> divide that by two
[12:06:23] <Fangs> and that should tell you the ratio
[12:06:29] <Fangs> (idk if that solves your problem)
[12:06:39] *** Joins: aryeh (~aryeh@185.114.120.43)
[12:07:19] <Fangs> Simplar: does that make sense?
[12:07:57] *** aryeh is now known as sfdfsdf
[12:08:51] *** Quits: sfdfsdf (~aryeh@185.114.120.43) (Client Quit)
[12:09:34] *** Joins: aryehostrowski (~aryehostr@185.114.120.43)
[12:10:19] *** Quits: aryehostrowski (~aryehostr@185.114.120.43) (Client Quit)
[12:10:23] *** Joins: DrNostril (~DrNostril@ip-152-82.sn3.clouditalia.com)
[12:11:03] *** Joins: aryehostrowski (~aryehostr@185.114.120.43)
[12:11:29] <Simplar> S(A1B1C1):S(ABC) = 1/64 ?
[12:13:02] <Fangs> I'm not sure. where do you get that?
[12:13:49] *** Quits: aryehostrowski (~aryehostr@185.114.120.43) (Client Quit)
[12:14:10] *** Joins: Aryeh (~Aryeh@185.114.120.43)
[12:20:44] *** Joins: BadK4rMa (~BadK4rMa@75.175.121.142)
[12:24:51] *** Joins: xiongxin8802 (~xiongxin@113.116.224.211)
[12:29:21] *** Joins: cmayo_ (~cmayo@2603-7000-9403-3591-2838-3ded-139b-398b.res6.spectrum.com)
[12:30:43] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[12:31:07] *** Joins: oxide (~lambda@user/oxide)
[12:31:26] *** jamtorus is now known as jellydonut
[12:33:08] *** Quits: cmayo (~cmayo@2603-7000-9403-3591-9406-d14d-8f93-78da.res6.spectrum.com) (Ping timeout: 268 seconds)
[12:34:08] *** Joins: vysn (~vysn@user/vysn)
[12:35:34] *** Quits: BadK4rMa (~BadK4rMa@75.175.121.142) (Remote host closed the connection)
[12:35:59] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:39:27] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:49:42] <Simplar> Fangs: let me reload the IRC
[12:49:44] <Simplar> and i'll tell
[12:49:45] *** Joins: rain3 (~rain3___@2a02:2f09:d100:8700:1ae4:6be9:2a58:7de6)
[12:49:48] *** Quits: Simplar (~Simplar@188.163.92.105) (Quit: Going offline, see ya! (www.adiirc.com))
[12:50:01] *** Joins: crankslider (~slidercra@user/slidercrank)
[12:52:06] *** Quits: gggp (~textual@114.245.104.163) (Ping timeout: 260 seconds)
[13:02:31] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:913c:38b7:852c:ff66) (Ping timeout: 268 seconds)
[13:07:37] *** Quits: szdani10 (~szdani10@unix-comp-airnet.net) (Quit: ZNC 1.8.2 - https://znc.in)
[13:11:59] *** Joins: szdani10 (~szdani10@unix-comp-airnet.net)
[13:12:24] *** Joins: gggp (~textual@114.245.104.159)
[13:12:56] *** Joins: darwin (~darwin@fsf/member/darwin)
[13:13:10] <darwin> is the universe set abbreviated 'universet?'
[13:16:30] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:18:40] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[13:20:49] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.2.1)
[13:22:48] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[13:23:08] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[13:24:44] *** solveig is now known as marianne
[13:25:23] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:28:57] *** Joins: anovick_ (~anovick@2a0d:6fc0:1831:1500:98e9:2c6f:1a52:52c0)
[13:35:14] *** Quits: Carbonflux (~Carbonflu@c-24-56-228-141.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[13:37:44] <mh_le> darwin: not really
[13:38:02] <darwin> how then?
[13:38:11] <mh_le> it's not?
[13:38:15] <darwin> it should be
[13:38:22] <darwin> i'll become famous for coming up with this
[13:39:26] *** Parts: darwin (~darwin@fsf/member/darwin) (Leaving)
[13:50:28] *** Quits: DrNostril (~DrNostril@ip-152-82.sn3.clouditalia.com) (Quit: Smell ya later~~)
[13:51:29] *** Joins: NEYi (~NEYi@109.251.216.38)
[13:52:20] *** Joins: tcornea (~tcornea@193.226.172.43)
[13:52:28] *** Joins: tizef (~tyzef@202.153.81.147)
[13:52:30] *** Quits: tcornea__ (~tcornea@193.226.172.43) (Read error: Connection reset by peer)
[13:54:43] *** Quits: NEYi (~NEYi@109.251.216.38) (Remote host closed the connection)
[13:55:08] *** Joins: NEYi (~NEYi@109.251.216.38)
[13:55:30] <qergle> in some respects probability is so easy to mess up on...
[13:56:41] *** Quits: xiongxin8802 (~xiongxin@113.116.224.211) (Read error: Connection reset by peer)
[13:57:02] *** Joins: xiongxin8802 (~xiongxin@119.123.103.94)
[13:58:06] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[14:02:05] *** Joins: Null_A (~null_a@2601:645:8700:2290:f960:d5c5:94b5:c3e6)
[14:03:00] *** Quits: xiongxin8802 (~xiongxin@119.123.103.94) (Quit: Konversation terminated!)
[14:03:22] *** Joins: xiongxin8802 (~xiongxin@113.116.33.45)
[14:04:08] *** Joins: PJBoy (~PJBoy@user/pjboy)
[14:05:28] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:09:57] *** Joins: evilscreww (~evilscrew@user/evilscreww)
[14:10:23] *** Quits: gggp (~textual@114.245.104.159) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:10:56] *** Joins: gggpkm (~gggpkm@111-251-158-17.dynamic-ip.hinet.net)
[14:11:11] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[14:11:51] *** Quits: Null_A (~null_a@2601:645:8700:2290:f960:d5c5:94b5:c3e6) (Remote host closed the connection)
[14:12:36] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Client Quit)
[14:12:42] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[14:16:06] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 260 seconds)
[14:17:20] *** Joins: Null_A (~null_a@2601:645:8700:2290:f960:d5c5:94b5:c3e6)
[14:18:26] *** Quits: Null_A (~null_a@2601:645:8700:2290:f960:d5c5:94b5:c3e6) (Client Quit)
[14:21:11] *** Joins: jmft2 (~jmft2@213.31.248.255)
[14:23:26] *** Joins: extern (~archer@141.226.63.36)
[14:28:28] *** Quits: cmayo_ (~cmayo@2603-7000-9403-3591-2838-3ded-139b-398b.res6.spectrum.com) (Quit: quit)
[14:30:00] *** Quits: anovick_ (~anovick@2a0d:6fc0:1831:1500:98e9:2c6f:1a52:52c0) (Ping timeout: 260 seconds)
[14:33:10] *** Quits: gauss (~gauss@2001:19f0:5801:170:5400:3ff:fe81:62fe) (Ping timeout: 268 seconds)
[14:34:18] *** Quits: rain3 (~rain3___@2a02:2f09:d100:8700:1ae4:6be9:2a58:7de6) (Ping timeout: 260 seconds)
[14:37:22] *** Quits: tizef (~tyzef@202.153.81.147) (Remote host closed the connection)
[14:40:34] *** Joins: Jordy (~jordy@user/jordy)
[14:42:51] *** Quits: kakuhen_ (~kakuhen@user/kakuhen) (Quit: Leaving...)
[14:45:29] *** marianne is now known as solveig
[14:48:24] *** Quits: xiongxin8802 (~xiongxin@113.116.33.45) (Quit: Konversation terminated!)
[14:48:41] *** Joins: xiongxin8802 (~xiongxin@119.123.103.94)
[14:54:31] *** Quits: evilscreww (~evilscrew@user/evilscreww) (Quit: Connection closed)
[15:02:15] *** Quits: con3 (~con3@2604:a880:4:1d0::be:d000) (Quit: ZNC 1.8.2 - https://znc.in)
[15:07:33] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[15:09:54] *** Quits: oxide (~lambda@user/oxide) (Ping timeout: 265 seconds)
[15:10:21] *** Joins: oxide (~lambda@user/oxide)
[15:12:15] *** Quits: p0indexter (~alpha@user/p0indexter) (Quit: parting is such sweet sorrow)
[15:15:51] *** Quits: mbuf (~Shakthi@182.77.103.62) (Read error: Connection reset by peer)
[15:16:14] *** Joins: mbuf (~Shakthi@182.77.103.62)
[15:23:24] *** Joins: Klinda (~klinda@2.227.251.209)
[15:24:31] *** Quits: xiongxin8802 (~xiongxin@119.123.103.94) (Quit: Konversation terminated!)
[15:24:49] *** Joins: xiongxin8802 (~xiongxin@113.116.224.211)
[15:25:29] *** Quits: xiongxin8802 (~xiongxin@113.116.224.211) (Client Quit)
[15:25:49] *** Joins: xiongxin8802 (~xiongxin@113.116.224.211)
[15:26:58] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[15:33:20] *** Joins: BlueSky (~BlueSky@user/bluesky)
[15:45:22] *** Joins: mindraj (~mindraj@user/mindraj)
[15:45:25] *** Quits: sm2n_ (~sm2n@user/sm2n) (Ping timeout: 252 seconds)
[15:45:41] *** Joins: sblip (~sblip@107.161.25.77)
[15:45:48] *** Joins: sm2n (~sm2n@user/sm2n)
[15:49:28] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[15:50:10] *** Joins: savask (~savask@Powder/Developer/savask)
[15:51:21] *** Quits: jmft2 (~jmft2@213.31.248.255) (Quit: This computer has gone to sleep)
[15:59:06] *** Joins: qeed_ (~qeed@072-190-106-143.res.spectrum.com)
[16:01:34] *** Quits: qeed (~qeed@072-190-106-143.res.spectrum.com) (Ping timeout: 260 seconds)
[16:06:52] *** Joins: LucaTM (~LucaTM@user/lucatm)
[16:07:16] *** Quits: haykam2 (~haykam@static.100.2.21.65.clients.your-server.de) (Remote host closed the connection)
[16:07:29] *** Joins: haykam1 (~haykam@static.100.2.21.65.clients.your-server.de)
[16:08:30] *** Quits: xiongxin8802 (~xiongxin@113.116.224.211) (Quit: Konversation terminated!)
[16:08:45] *** Joins: xiongxin8802 (~xiongxin@113.116.33.45)
[16:11:35] *** Quits: extern (~archer@141.226.63.36) (Read error: Connection reset by peer)
[16:12:09] *** Joins: frost (~frost@59.71.243.104)
[16:12:52] *** Joins: dauggy (~wojtek@31.12.0.178)
[16:14:53] *** Joins: tizef (~tyzef@202.153.81.147)
[16:19:52] *** Joins: trbp (~trbp@user/trbp)
[16:20:46] <riv> https://www.youtube.com/watch?v=VTDKqW_GLkw learning about dobble (design)
[16:20:54] <riv> combinatorial design
[16:21:37] *** Joins: extern (~archer@141.226.61.49)
[16:22:14] *** Joins: seninha (~seninha@user/seninha)
[16:23:48] *** Quits: Samian (~Sami@user/samian) (Quit: Textual IRC Client: www.textualapp.com)
[16:25:32] *** Joins: p0indexter (~alpha@user/p0indexter)
[16:27:45] *** Joins: usr25 (~usr25@user/usr25)
[16:28:08] <riv> https://upload.wikimedia.org/wikipedia/commons/8/88/Projective_plane_of_order_7.svg
[16:28:12] <riv> cool you can mouse over the lines
[16:30:13] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:33:52] *** Joins: anovick_ (~anovick@2a0d:6fc0:1831:1500:98e9:2c6f:1a52:52c0)
[16:36:32] <riv> never heard of a cyclic difference set before
[16:36:50] <riv> although I think i have done stuff with additive sets
[16:39:08] *** Joins: rain3 (~rain3___@2a02:2f09:d100:8700:1ae4:6be9:2a58:7de6)
[16:40:55] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[16:42:29] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[16:47:52] <extern> is it safe ot say taht concrete math is the only math one need for computer science purposes
[16:48:09] <Franciman> it depends
[16:48:09] <riv> it's the main one but not the only one
[16:48:11] <Franciman> on the purposes
[16:48:24] <extern> ruling out computer graphics
[16:48:26] <Franciman> did you believe type theory could make use of Topology?
[16:48:35] <Franciman> i didn't, but now it seems they are connected
[16:49:28] *** Quits: avoidr (~avoidr@user/avoidr) (Ping timeout: 265 seconds)
[16:50:01] *** Joins: Turingtoast (~Tino@200116b860a95500d83b11ab595f34a1.dip.versatel-1u1.de)
[16:51:01] *** Joins: avoidr (~avoidr@user/avoidr)
[16:51:24] <riv> > The set of all translates of a difference set {\displaystyle D}D forms a symmetric block design
[16:54:51] *** Quits: riv (~river@tilde.team/user/river) (Quit: Leaving)
[17:00:11] *** Joins: riv (~river@tilde.team/user/river)
[17:03:29] <riv> there's finite geometry
[17:03:34] <riv> is there infinite discrete geometry?
[17:03:56] <riv> I suppose you could have F_2^inf
[17:06:29] *** Joins: arseniiv_ (~arseniiv@136.169.204.31)
[17:06:33] *** Joins: cheater (~Username@user/cheater)
[17:14:19] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[17:20:24] <rond_> extern what's concrete math?
[17:21:04] <rond_> a book?
[17:22:16] *** Quits: gggpkm (~gggpkm@111-251-158-17.dynamic-ip.hinet.net) (Remote host closed the connection)
[17:22:23] <[itchyjunk]> Is "formal language" algebra?
[17:22:32] <[itchyjunk]> branch of algebra or algebra in any sense of that word?
[17:23:10] *** Joins: gggp (~textual@60.10.194.42)
[17:23:44] *** Quits: extern (~archer@141.226.61.49) (Quit: WeeChat 3.2)
[17:23:53] <riv> that is a good book
[17:24:05] <riv> formal language is logic
[17:27:14] <int-e> or computability/automata theory
[17:30:19] <int-e> Formal languages are usually sets of strings, which I'd place it outside of algebra and outside of logic as well. (IME the latter is happy to treat terms as trees, something you might get from parsing a string using a context-free-grammar.)
[17:37:42] *** Quits: anovick_ (~anovick@2a0d:6fc0:1831:1500:98e9:2c6f:1a52:52c0) (Ping timeout: 260 seconds)
[17:43:33] <Z-module> [itchyjunk]: did you work out those images of the pie wedge set?
[17:44:07] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[17:44:17] <mh_le> heya Z-module
[17:44:26] <mh_le> you busy?
[17:45:20] <Z-module> not too much
[17:45:44] *** Quits: arseniiv_ (~arseniiv@136.169.204.31) (Quit: gone too far)
[17:46:18] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[17:46:19] *** Joins: bosspotato (~bosspotat@lnsm3-montreal02-142-119-117-134.internet.virginmobile.ca)
[17:46:19] *** Quits: bosspotato (~bosspotat@lnsm3-montreal02-142-119-117-134.internet.virginmobile.ca) (Changing host)
[17:46:19] *** Joins: bosspotato (~bosspotat@user/bosspotato)
[17:46:55] *** Quits: gggp (~textual@60.10.194.42) (Ping timeout: 252 seconds)
[17:47:56] *** Quits: p0indexter (~alpha@user/p0indexter) (Quit: parting is such sweet sorrow)
[17:48:01] *** Quits: BlueSky (~BlueSky@user/bluesky) (Ping timeout: 252 seconds)
[17:48:04] <pazof> to me, language is a mathematical object
[17:48:11] <pazof> like interpretations
[17:48:20] *** Joins: arseniiv (~arseniiv@136.169.204.31)
[17:48:20] <pazof> sinc they are injections
[17:48:34] <[itchyjunk]> Z-module, the slice of the pie just increased by n times no?
[17:48:39] <[itchyjunk]> i didn't do anything more with it
[17:49:13] *** Joins: gggp (~textual@60.10.194.42)
[17:49:21] <[itchyjunk]> since r = 1, r^n = 1, so t |-> nt for each of those so 2t,3t and t
[17:49:34] *** Joins: yinghua (~yinghua@2800:2121:1400:1db:8865:3e5b:fd2e:180)
[17:49:42] <[itchyjunk]> so larger portions of this disc
[17:50:49] *** Quits: riv (~river@tilde.team/user/river) (Quit: Leaving)
[17:52:28] *** Joins: riv (~river@tilde.team/user/river)
[17:55:37] *** Joins: vqueiroz (uid340368@id-340368.hampstead.irccloud.com)
[17:56:39] *** Joins: Brainium (~brainium@user/brainium)
[17:56:40] <Z-module> [itchyjunk]: yes, for n = any of 1,2,3,...,8, the image is all the points z in the puncutured open unit disk with 0 < arg(z) < pi*n/4 . So for n = 4 that's the entire open upper half-disk.
[17:57:07] <[itchyjunk]> right!
[17:57:46] <Z-module> For n = 8 it's the whole open unit disk except for non-negative reals.  For any n > 8, stuff now overlaps the bottom of the pie wedge and you get the whole punctured disk.
[17:59:05] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Remote host closed the connection)
[17:59:38] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[18:00:34] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 260 seconds)
[18:01:43] *** Joins: Crescendo (~Crescendo@user/crescendo)
[18:01:52] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[18:02:54] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Client Quit)
[18:03:19] <[itchyjunk]> for n = 8 oh
[18:03:21] <[itchyjunk]> ohhh
[18:03:29] <[itchyjunk]> okay makes snese
[18:04:52] *** Quits: X-Scale (~ARM@83.223.227.181) (Ping timeout: 265 seconds)
[18:05:18] *** X-Scale` is now known as X-Scale
[18:06:17] *** Joins: anovick_ (~anovick@igld-83-130-139-184.inter.net.il)
[18:06:27] <Z-module> yeah, for n = 8, the points very close to the upper wedge edge (those with arg very close to pi/4) end up being under and very close to the positive x-axis, but they never quite reach it.
[18:08:25] *** Quits: xiongxin8802 (~xiongxin@113.116.33.45) (Ping timeout: 252 seconds)
[18:08:30] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[18:08:31] <[itchyjunk]> right!
[18:10:12] *** Joins: tacegory (~tacegory@user/tacegory)
[18:10:47] *** Joins: p0indexter (~alpha@user/p0indexter)
[18:11:26] *** Joins: Macuser (~Macuser@216.30.159.201)
[18:14:00] *** Joins: X-Scale` (~ARM@46.50.5.115)
[18:16:04] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 252 seconds)
[18:16:22] *** X-Scale` is now known as X-Scale
[18:17:01] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[18:17:27] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:26:40] *** Quits: droid3 (~fffd@024-177-015-135.res.spectrum.com) (Ping timeout: 240 seconds)
[18:27:14] <Guest2161> why is the set of ll integers not well ordered by <?
[18:29:07] <pazof> what's an "ll integer"?
[18:30:03] <Guest2161> sorry
[18:30:21] <Guest2161> a
[18:30:37] <Guest2161> key died, I meant all integers.
[18:31:28] <nejimban> what's <
[18:31:30] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-80d8-d4ba-58c2-1b2b.res6.spectrum.com)
[18:31:43] <pazof> :-)
[18:31:43] <nejimban> it's not reflexive?
[18:31:53] <Guest2161> less than
[18:32:09] <Guest2161> what's reflexive?
[18:32:21] <nejimban> x < x for all x
[18:32:50] <nejimban> (↑ this is not a lenny face)
[18:33:17] *** Joins: tx8r (~tx8r@gateway/tor-sasl/tx8r)
[18:33:43] <nejimban> I think one usually wants the relation to be reflexive
[18:33:59] <Guest2161> however for the positive integers it is?
[18:34:17] <nejimban> why?
[18:36:17] <Guest2161> I am reading "The art of Computer Programming", one of the exercises is "prove that despite well-ordering the positive integers < doesn't well order the set of all integers" I completely failed to understand the answer.
[18:38:10] *** Quits: frost (~frost@59.71.243.104) (Quit: Connection closed)
[18:38:16] *** Joins: rubiksdream (~rubiksdre@user/rubiksdream)
[18:38:49] *** Joins: cheater1__ (~Username@user/cheater)
[18:38:50] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 260 seconds)
[18:38:56] *** cheater1__ is now known as cheater
[18:39:52] <Fangs> god damnit Foster's book on Riemmann surfaces is really upsetting
[18:40:10] <Fangs> curly E for "sheaf of differentiable functions"
[18:40:12] <W> Guest2161, the requirement is that every set has a least element; the set of negative integers does not
[18:40:23] <Fangs> where differentiable means infinitely differentiable (JUST CALL IT SMOOTH)
[18:40:40] <Fangs> (AND INSTEAD OF curly E WHY NOT USE C^oo)
[18:41:16] <Fangs> they defined cech cochains for arbitary degrees, but only defined differentials for H^1
[18:42:02] *** Joins: dez (uid92154@user/dez)
[18:43:03] <Guest2161> just out of curiousity why least not greatest?
[18:43:07] <W> Guest2161, you can have another relation, say; comparing absolute values with negative being after positive for identical absolute value, and that relation is well-ordered on the set of all integers because 0 is the least element (and continuing upward 1,-1,2,-2, etc.)
[18:43:35] <W> you mean, why is the concept of "well-ordered" important?
[18:44:22] *** Quits: crankslider (~slidercra@user/slidercrank) (Ping timeout: 268 seconds)
[18:44:28] <W> you can have a greatest element as well; the negative integers is well-ordered for > :) ("least" element is just a matter of having /one/ end)
[18:45:05] <Guest2161> yeah I just reilezed that while trying to clarify.
[18:45:27] <Z-module> Guest2161: well-ordered sets permit all sorts of useful inductive arguments and definitions.
[18:46:07] <AimHere> Guest2161, Knuth gives the axioms of well-ordering before the exercise. Can you see one which isn't fulfilled with the integers and the '<' relation?
[18:46:39] <W> well-ordering is important because the well-ordering theorem says that any set (of any kind and size, including different cardinalities of infinite) can be so ordered
[18:46:54] <AimHere> Right, but here, 'well-ordering' is specific to TAOCP.
[18:47:02] <Guest2161> it's clearly iii I just don't see how it states there must be a least element
[18:47:09] *** Quits: cawfee (~root@2406:3003:2077:2758::babe) (Quit: macos update)
[18:47:29] <Guest2161> in fact with a lymans reading it seems to imply there can't be
[18:47:32] *** Quits: mindraj (~mindraj@user/mindraj) (Quit: Goodbye, have a great day/evening!)
[18:47:54] <AimHere> Guest2161, are you reading the axiom right? It's pretty clear
[18:48:18] <Guest2161> obviously not :)
[18:48:27] *** Joins: droid3 (~fffd@024-177-015-135.res.spectrum.com)
[18:48:30] <AimHere> "iii) If A is any nonempty subset of S, there is an element x in a with x~=y (that is x~y or x=y) for all y in A"
[18:48:52] <AimHere> Where ~ is my transcription of the 'well-ordering' relation
[18:48:53] <Guest2161> as I read it for every element in A there is a lesser element
[18:49:49] <AimHere> Are you sure that's what it says?
[18:50:12] <Guest2161> unless X and Y can be the same element
[18:51:01] <AimHere> Maybe this is an english language parsing thing
[18:51:21] <Guest2161> and even then I don't see how that implies that there must be an X=Y
[18:51:24] *** Quits: Aryeh (~Aryeh@185.114.120.43) (Quit: Client closed)
[18:51:39] <Guest2161> probably a language parsing thing. thanks for the help though
[18:52:15] <AimHere> You have your subset A. The axiom states that there is an x, and that for every other y in A, either x=y or x~y (i.e. x<y)
[18:53:06] <AimHere> Can you think of a set A of the integers where you can't find such an x?
[18:53:23] <AimHere> *subset
[18:53:34] <Guest2161> ah I read as "for every y in A there exists an X"
[18:54:31] <Guest2161> my reading skills are lacking, once you pointed it out it clearly reads the other way.
[18:54:34] <Z-module> It should be:  For every nonempty subset A of S, exists x in A :   forall y in A,  x ~= y
[18:54:51] <Guest2161> thanks all for the help.
[18:54:54] <Z-module> this x is the "smallest" element of A, for this ordering
[18:56:35] *** Quits: chomwitt (~chomwitt@2a02:587:dc15:500:12c3:7bff:fe6d:d374) (Ping timeout: 260 seconds)
[19:00:34] <Guest2161> completely unrelated, does there exist a proof (or disproof) that for every prime n there exists a prime K such that n<K<2n?
[19:00:45] <Z-module> yes indeed
[19:00:54] <Z-module> this is called "Bertrand's postulate"
[19:01:46] <Z-module> for every n >= 2, not just prime n.  Erdos gave a spectacularly simple proof of it using basic stuff about middle binomial coefficients
[19:03:25] <Guest2161> I feel like that is probably the basis for a proof of goldbachs conjecture
[19:03:26] <Z-module> A lot more is true: for every positive real eps,   lim_{x -> infty} (# of primes p with x < p < (1 + eps)x)  is +infty.
[19:03:58] *** Quits: gggp (~textual@60.10.194.42) (Ping timeout: 252 seconds)
[19:06:39] <Z-module> In other words, for any positive eps no matter how tiny, for every natural n, there are at least n primes between x and (1 + eps)x  for all sufficiently large x.
[19:10:24] *** Joins: gggp (~textual@60.10.194.42)
[19:10:30] *** Joins: euouae (~euouae@user/euouae)
[19:13:09] *** Parts: euouae (~euouae@user/euouae) ( )
[19:13:49] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[19:19:08] *** Joins: BadK4rMa (~BadK4rMa@75.175.121.142)
[19:19:58] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Remote host closed the connection)
[19:20:08] <CuriousErnestBro> apparently E(X|X)=X is called the stability law
[19:20:51] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[19:21:30] *** Joins: quartz (~quartz@user/quartz)
[19:22:50] *** Joins: cawfee (~root@2406:3003:2077:2758::babe)
[19:25:52] *** Quits: rond_ (~rond_@2a02:a31a:a23c:f480:2fd7:e087:5546:a438) (Quit: Client closed)
[19:30:49] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Remote host closed the connection)
[19:30:59] *** Joins: erentar2002[m] (~erentar20@2001:470:69fc:105::7af1)
[19:33:36] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi)
[19:33:44] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:35:09] *** Joins: xiongxin8802 (~xiongxin@113.116.224.211)
[19:35:33] <cherim> Which proof of Bertrand's is by Erdos?
[19:35:53] *** Joins: cmayo (~cmayo@2603-7000-9403-3591-9176-7875-3a28-2bdc.res6.spectrum.com)
[19:36:17] *** Joins: slidercrank (~slidercra@user/slidercrank)
[19:38:05] *** Quits: gggp (~textual@60.10.194.42) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:40:13] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[19:41:51] <cherim> I see Aigner-Ziegler also attribute modern proofs to Erdos (in Ch.2) though
[19:45:23] <cherim> Ok, I thought https://en.wikipedia.org/wiki/Proof_of_Bertrand%27s_postulate is considered to be Chebyshev but with some simplifications
[19:48:08] *** Joins: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5)
[19:50:18] *** Joins: Kaylah (~Kaylah@ptr-ekg3bnxazyo9alnm79l.18120a2.ip6.access.telenet.be)
[19:53:30] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[19:55:10] *** Quits: haritz (~hrtz@user/haritz) (Ping timeout: 240 seconds)
[19:56:50] *** Joins: drobi (~drobi@bras-base-otwaon234vw-grc-01-142-112-128-170.dsl.bell.ca)
[19:58:37] *** Quits: solveig (sid194105@id-194105.uxbridge.irccloud.com) ()
[19:59:00] *** Joins: solveig (sid194105@id-194105.uxbridge.irccloud.com)
[19:59:33] *** Quits: solveig (sid194105@id-194105.uxbridge.irccloud.com) (Client Quit)
[20:00:01] <Z-module> cherim:  https://www3.nd.edu/~dgalvin1/pdf/bertrand.pdf
[20:00:18] *** Joins: gb73d (gb73d@host-92-7-42-10.as13285.net)
[20:00:43] *** Joins: solveig (sid194105@id-194105.uxbridge.irccloud.com)
[20:01:27] <cherim> Yes, I read that exact proof, just the attribution went wrong
[20:01:40] *** Quits: xiongxin8802 (~xiongxin@113.116.224.211) (Quit: Konversation terminated!)
[20:02:16] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:03:44] <cherim> I have bad relations with Bertrand's in general. When I was in 9th grade, I was returning from a summer camp by train. Somebody brought up a problem that quickly reduced to "n! is not a square for n>1"
[20:04:43] <cherim> And I could neither prove it without Bertrand's nor reconstruct Chebyshev's proof which I knew existed and was elementary
[20:05:02] <cherim> Very bad memories
[20:05:29] <cherim> Pure agony and nothing to consult when on a train
[20:06:34] *** Quits: Arcorann_ (~A@159-196-65-46.9fc441.mel.nbn.aussiebb.net) (Ping timeout: 260 seconds)
[20:10:23] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[20:11:00] *** Quits: p0indexter (~alpha@user/p0indexter) (Quit: parting is such sweet sorrow)
[20:11:19] <qed> :)
[20:11:49] *** Joins: lxlldr (~I@87-196-81-142.net.novis.pt)
[20:12:50] *** Joins: p0indexter (~alpha@user/p0indexter)
[20:15:20] *** Joins: pyzozord (pyzozord@user/pyzozord)
[20:16:05] <pyzozord> Hello, I'm trying to understand what is algebra and algebraic structure. And if/what relation it has to formla languages.
[20:18:34] <pazof> imho, you want to explore, I don't really know the english word, something like "the theory of finite state automata"
[20:19:31] <pazof> what is a grammar, a language, and thus a formula
[20:19:53] <pyzozord> https://en.wikipedia.org/wiki/Automata_theory?
[20:20:13] <pazof> yes
[20:20:27] <pyzozord> pazof: you might be taking my question on too serious level. I don't have any education in math at all
[20:22:18] <pyzozord> does this make sense: "algebra is applied formal language which is applied set theory which is applied logic"?
[20:22:32] <pazof> formula language to me is just a way to identify a non-ambigious language
[20:23:34] <pyzozord> I'm not sure what "a forumla" is. I learned that mathematicians tend to "overload"/redefine terms all the time, so I kind of don't really know anything in the world of mathematics
[20:24:13] <pyzozord> is formula a different word for formal language?
[20:24:29] <pazof> a formula is a word
[20:24:49] <pazof> an item from a language
[20:24:53] *** Quits: xff0x (~xff0x@2001:1a81:5327:1a00:7ba6:6c4f:f759:2f72) (Ping timeout: 268 seconds)
[20:25:33] <pyzozord> ah I see so algebra is a formal language, but it is so much more
[20:25:44] <pyzozord> the fact that it is a language is not really all that important
[20:25:57] <pyzozord> the important is what opreations can be done on symbols
[20:26:44] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 268 seconds)
[20:27:52] <W> hmm, I came across this as part of a proof "since a countable union of at most countable sets is at most countable" and it strikes me as wrong. Let's say a union of sets on the form S_n={0,10^n,2*10^n...9*10^n} for integer n, won't the subset of this union selecting decimal digits make up the reals? Am I missing something?
[20:28:50] <somiaj> W: you are taking unions, you aren't adding them
[20:28:58] <somiaj> so for instance 11 would not be in the union
[20:29:10] <qergle> you can go beyond "at most"
[20:29:16] <Z-module> cherim: I found a full version of Landau's "Handbuch der Lehre von der Verteilung der Primzahlen" containing his proof of Bertrand that's supposedly very close to Chebyshev's. It looks long and messy.
[20:29:17] <qergle> every countable union of countable sets is countable
[20:29:34] <W> somiaj, sure, but {10,1} will be?
[20:29:44] <somiaj> W: no it won't
[20:29:59] <somiaj> W: the union will contain 'numbers', it won't contain 'sets'
[20:30:07] <W> oh, wait, the number of subsets of a set is exactly not the same order of the set
[20:30:14] <W> that's why it works, yeah I get it
[20:30:20] <W> something something powerset
[20:30:23] <Z-module> in fact, |Pow(X)| strictly > |X|  for all sets X
[20:30:34] <Z-module> (finite and infinite)
[20:30:48] <cherim> What I read as Chebyshev's took 3 journal (A4) pages in a magazine for high school students (so assuming next to know prerequisites)
[20:31:02] <Z-module> that assertion means: for every X, in injection X -> Pow(X) exists but no injection Pow(X) -> X  exists.
[20:31:04] <cherim> Actually, the core proof fit one page
[20:31:36] <cherim> But the psi(x) looked very unmotivated and it was not a pleasant reading
[20:31:52] <Z-module> cherim, which syllable do modern Russian's stress in his surname? Online things about him seem to disagree on that.
[20:31:52] *** Quits: usr25 (~usr25@user/usr25) (Quit: Leaving)
[20:31:57] <qergle> let C be a countable collection of countable sets S_i. so we wish to prove ⋃ S_i is countable
[20:31:57] <Z-module> modern Russians*
[20:32:10] <cherim> Modern Russians also have trouble
[20:32:15] <Z-module> heh
[20:32:25] <cherim> Like with Alekhine
[20:32:47] <qergle> we already have some surjection N → C, and likewise from N → S_i for all i.
[20:33:19] <W> qergle, yeah no I get the idea that e.g. Z^2 is countable, I just had myself confused thinking I could represent the reals as a union of countable sets (when that really is exactly Z^2 given some order of sets and some order in each set)
[20:33:43] <cherim> All my life it was 100% Al'yokhin, now everybody migrated to Alekhin. With Chebyshev it's still Ch'ebyshev more often I guess, but formally ё must be always stressed
[20:34:03] <qergle> so f(i)=S_i) and g_i:N→S_i, let h(m,n)=g_m(n)
[20:34:47] <qergle> if h is a surjection (which it is), you've proven it
[20:35:20] *** Joins: cuppajoeman (~cuppajoem@cpeac202e0695f3-cmac202e0695f0.cpe.net.cable.rogers.com)
[20:36:11] <cuppajoeman> Hey, I'm learning about probability and I found this definition: https://i.imgur.com/Dv68y6c.png this seems super similar to the definition of a topology, are the they same?
[20:37:34] <cherim> Z-module: here are even two Kvant articles from different years; I knew http://kvant.mccme.ru/1971/05/o_postulate_bertrana.htm but there was a later http://kvant.mccme.ru/pdf/1998/04/kv0498korobov.pdf
[20:37:47] <cherim> Hopefully the structure is obvious already from the formulas
[20:38:00] <qergle> topology doesn't go beyond finite intersections.
[20:38:11] <cherim> Can't say it's much worse than modern
[20:38:12] <Z-module> cuppajoeman: no: in a topology, the collection of open sets (the topology) needs to be closed under only *finite* intersections, and *all* (not just countable) unions, and hardly ever closed under complements.
[20:38:17] <rubiksdream> cuppajoeman, not exactly, one big difference is topologies aren't closed under complements
[20:38:34] *** Quits: p0indexter (~alpha@user/p0indexter) (Quit: parting is such sweet sorrow)
[20:38:52] <qergle> so several differences. but there is a meta-similarity in the way it's presented, i guess.
[20:43:12] <cuppajoeman> Ok thank you for clearing that up
[20:45:04] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[20:45:09] *** Joins: river (~river@tilde.team/user/river)
[20:45:20] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[20:46:39] *** Joins: xff0x (~xff0x@2001:1a81:5327:1a00:7ba6:6c4f:f759:2f72)
[20:46:42] *** Parts: savask (~savask@Powder/Developer/savask) ()
[20:47:28] *** Quits: riv (~river@tilde.team/user/river) (Ping timeout: 252 seconds)
[20:47:31] <qergle> have you already taken a probability course or is this your first?
[20:47:41] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Quit: luna-is-here)
[20:49:07] <cuppajoeman> I have but it never introduced the sigma algebra
[20:49:11] *** Joins: BlueSky (~BlueSky@user/bluesky)
[20:49:16] <cuppajoeman> i think it was a very introductory one
[20:49:29] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[20:50:11] <qergle> oh ok, that's fine. as long as you developed some intuition for this stuff.
[20:50:14] *** Joins: johnkeats7 (~johnkeats@2804:14c:32:a0cc:892e:40cc:9099:b58d)
[20:50:36] *** Quits: Brainium (~brainium@user/brainium) (Quit: Konversation terminated!)
[20:50:41] *** Joins: slycelote (~slycelote@user/slycelote)
[20:51:41] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[20:52:47] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[20:53:02] *** Quits: arseniiv (~arseniiv@136.169.204.31) (Ping timeout: 268 seconds)
[20:54:26] <cuppajoeman> sigma-algebra seems a little abstract so far
[20:54:32] <cuppajoeman> hopefully some usages will help
[20:56:50] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:892e:40cc:9099:b58d)
[20:57:40] *** Quits: quartz (~quartz@user/quartz) (Ping timeout: 240 seconds)
[20:58:10] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[20:58:11] *** Quits: johnkeats7 (~johnkeats@2804:14c:32:a0cc:892e:40cc:9099:b58d) (Ping timeout: 268 seconds)
[20:59:12] *** Joins: johnkeats7 (~johnkeats@2804:14c:32:a0cc:892e:40cc:9099:b58d)
[21:00:53] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[21:01:09] *** Joins: Crescendo (~Crescendo@user/crescendo)
[21:01:11] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:01:38] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:892e:40cc:9099:b58d) (Ping timeout: 260 seconds)
[21:02:39] *** Quits: BadK4rMa (~BadK4rMa@75.175.121.142) (Remote host closed the connection)
[21:05:25] *** Joins: texasmusicinstru (~Rheanna@218.78.77.129)
[21:13:02] *** Joins: econo (uid147250@user/econo)
[21:13:28] *** Joins: aws (~aws@mx1.aosync.me)
[21:16:54] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[21:22:22] *** Joins: trace987 (~trace@dynamic-002-247-249-191.2.247.pool.telefonica.de)
[21:23:37] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[21:24:19] *** Joins: arseniiv (~arseniiv@136.169.204.31)
[21:34:20] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[21:35:10] *** Quits: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se) (Client Quit)
[21:39:10] *** Quits: qbt (~edun@user/edun) (Ping timeout: 252 seconds)
[21:41:42] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[21:50:42] *** Quits: Kaylah (~Kaylah@ptr-ekg3bnxazyo9alnm79l.18120a2.ip6.access.telenet.be) (Quit: Client closed)
[21:52:48] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Quit: luna-is-here)
[21:54:12] <mawk> how do you call the 3D shape that's like a rectangular pyramid frustum, but the top and bottom rectangle aren't in the same proportions?
[21:54:25] <mawk> some kind of trapeze but in 3D
[21:56:25] <slycelote> https://www.cuemath.com/geometry/trapezoidal-prism/ ?
[21:56:40] *** Quits: rubiksdream (~rubiksdre@user/rubiksdream) (Ping timeout: 252 seconds)
[21:57:21] *** Quits: tizef (~tyzef@202.153.81.147) (Remote host closed the connection)
[21:57:39] *** Quits: cmayo (~cmayo@2603-7000-9403-3591-9176-7875-3a28-2bdc.res6.spectrum.com) (Quit: quit)
[21:57:47] *** Quits: arseniiv (~arseniiv@136.169.204.31) (Ping timeout: 268 seconds)
[21:58:21] *** Joins: cmayo (~cmayo@2603-7000-9403-3591-9176-7875-3a28-2bdc.res6.spectrum.com)
[21:59:15] *** Joins: luna-is-here (~quassel@ip-95-223-59-100.hsi16.unitymediagroup.de)
[22:01:57] *** Quits: luna-is-here (~quassel@ip-95-223-59-100.hsi16.unitymediagroup.de) (Client Quit)
[22:02:32] *** Joins: qbt (~edun@user/edun)
[22:02:36] *** Quits: slidercrank (~slidercra@user/slidercrank) (Read error: Connection reset by peer)
[22:05:42] <mawk> the inverse of that slycelote
[22:05:49] <mawk> two rectangles joined by 4 trapezes
[22:06:31] <mawk> but I guess my shape is a special case of that yes
[22:06:32] <mawk> thanks
[22:08:19] <mawk> actually no I think that shape is right
[22:08:37] <mawk> it's just that the quadrilateres of interest are the top and bottom rectangles in my case
[22:08:41] <mawk> not the front and back trapezes
[22:09:55] *** Joins: arseniiv (~arseniiv@136.169.204.31)
[22:12:53] *** Joins: bobb_ (~bobb_@dslb-092-074-252-153.092.074.pools.vodafone-ip.de)
[22:14:56] *** Quits: qed (~Shimon@bzq-84-108-229-161.cablep.bezeqint.net) (Changing host)
[22:14:56] *** Joins: qed (~Shimon@user/qed)
[22:15:09] *** Joins: Maturion (~Maturion@p200300ede710e500f4b5753e8f1d8c12.dip0.t-ipconnect.de)
[22:15:38] *** Joins: slidercrank (~slidercra@user/slidercrank)
[22:19:02] *** Joins: coeus (~coeus@53.sub-174-205-175.myvzw.com)
[22:19:44] *** Quits: solveig (sid194105@id-194105.uxbridge.irccloud.com) ()
[22:20:58] *** Joins: solveig (sid194105@id-194105.uxbridge.irccloud.com)
[22:21:45] *** Joins: Mattiaslndstrm (~Mattiasln@c188-148-207-108.bredband.tele2.se)
[22:26:52] *** Quits: trace987 (~trace@dynamic-002-247-249-191.2.247.pool.telefonica.de) (Ping timeout: 252 seconds)
[22:31:25] *** Joins: trace987 (~trace@dynamic-002-247-249-191.2.247.pool.telefonica.de)
[22:34:58] *** Quits: emerent (~quassel@p200300cd57485502ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[22:35:48] *** Joins: emerent (~quassel@p200300cd574855c0ba27ebfffed28a59.dip0.t-ipconnect.de)
[22:40:03] <biberao> hi
[22:41:31] <Z-module> hi
[22:41:41] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[22:42:14] *** Joins: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557)
[22:43:54] <biberao> Z-module: heres a portuguese guess https://dpaste.com/AS77JD2KW
[22:46:10] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 252 seconds)
[22:48:56] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[22:49:36] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Remote host closed the connection)
[22:50:14] *** Joins: Powerhouse6666 (~Powerhous@security.orcacomputers.com)
[22:50:40] <qergle> he arrived with € 17.5
[22:50:53] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[22:51:01] *** Joins: cheater (~Username@user/cheater)
[22:51:09] <biberao> qergle: damn you guys do it easily
[22:51:11] <biberao> i cant do that
[22:51:12] <biberao> :(
[22:51:21] *** Quits: mbuf (~Shakthi@182.77.103.62) (Quit: Leaving)
[22:52:00] *** Joins: captain_awesome (~captain_a@69.168.163.234)
[22:52:08] <captain_awesome> 2 + 2 = 4
[22:52:28] <biberao> ?
[22:52:29] <Z-module> I don't understand "folds" in that, biberao
[22:52:49] <Z-module> also, instead of "guess" you need to say "riddle"
[22:53:03] <biberao> yes
[22:53:07] <biberao> i couldnt remember the word
[22:53:09] <biberao> sorry
[22:53:32] <biberao> Z-module: i think the translation meant folds = doubles
[22:53:39] <biberao> google translate might have done it wrong
[22:55:03] <Z-module> aha, that makes a lot more sense
[22:55:19] *** Quits: Europa (~Europa@user/europa) (Remote host closed the connection)
[22:55:20] <biberao> because
[22:55:21] <cherim> It's like Dirac with -1 fish but doesn't even need an equation. You just compute directly in reverse time...
[22:55:29] <biberao> the word dobrar means folding
[22:55:33] <biberao> like you fold a paper
[22:55:35] <cherim> -2 fish actually
[22:55:35] *** Joins: Europa (~Europa@user/europa)
[22:55:40] <Z-module> (except it already uses "double" in the quotes by the man)
[22:56:04] <biberao> Z-module: blame google translate :p
[22:56:05] <biberao> haha
[22:56:25] <qergle> or you think of a single saint and asking him to octuple your cash in exchange for 140.
[22:56:37] <biberao> qergle: ?
[22:56:44] <biberao> cherim: you mean me?
[22:57:47] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:207a:16a3:41d0:11b8)
[22:57:50] <qergle> we us the lemma of collapsible saints.
[22:59:18] *** Joins: Everything (~Everythin@37.115.210.35)
[22:59:19] *** Quits: trace987 (~trace@dynamic-002-247-249-191.2.247.pool.telefonica.de) (Ping timeout: 252 seconds)
[22:59:19] <qergle> use*
[23:00:03] <biberao> ?
[23:01:23] *** Joins: trace987 (~trace@dynamic-002-247-249-191.2.247.pool.telefonica.de)
[23:01:23] <Z-module> anyway biberao, equationally it's straightforward: If the man starts with D euros, you are just solving   2(2(2D - 20) - 20) - 20 = 0
[23:02:04] <cherim> I am having trouble finding this in English
[23:02:11] <cherim> http://codepad.org/zb1H0NET is a google translate
[23:03:18] *** Quits: Null_A (~null_a@2601:645:8700:2290:6daa:6a79:97ab:557) (Remote host closed the connection)
[23:03:19] <Z-module> (and one of the Google founders was of Russian origin, so it oughtta be good)
[23:04:56] <biberao> :\
[23:05:55] <CuriousErnestBro> if p is the probability of winning $1 and q is the probability of losing $1
[23:06:11] <CuriousErnestBro> And X_n is the amount of money you have at time n
[23:06:25] <CuriousErnestBro> what the heck is (q/p)^(X_n) then?
[23:06:52] <johnkeats7> doing martingales?
[23:07:03] <biberao> Z-module: you're good and i suck at it
[23:07:13] <orthoplex64> does anyone know of an intuitive pattern behind the convex hulls of simplexes and their (scaled) duals? in 2D it's a hexagon, 3D cube, 4D something called a disphenoidal 30-cell apparently
[23:07:21] <qergle> -2 fish makes no sense
[23:07:36] <qergle> 2 antifish is clearly the right way to solve this
[23:07:43] <johnkeats7> orthoplex64, aren't simplices convex already?
[23:07:48] <biberao> Z-module: i think your way is cool
[23:07:50] <Z-module> biberao: you mean good at translating "word problems" to algebraic symbols? You can get better, through practice.
[23:08:01] <biberao> Z-module: ya thats my problem
[23:08:06] <biberao> i have another thats killing me haha
[23:08:21] <orthoplex64> yeah but I'm talking about taking a simplex, making another of the same kind by putting points in the centers of the cells, scaling that one up to the size of the original, and taking the convex hull of that
[23:09:55] <johnkeats7> of both the simplex and the dual points you mean
[23:10:12] <Z-module> biberao: maybe you need to invoke the theory of Killing forms
[23:10:23] <cuppajoeman> I'm trying to understand the birthday problem: https://en.wikipedia.org/wiki/Birthday_problem#Calculating_the_probability So far I understand that there are birthdays b1, ..., bn and we want to compute the probability that "forall i < j in {1, ..., n}, b_i != b_j" that's also equivalent to showing "forany i in {2, ..., n}, bi not in {b_1, ...,
[23:10:23] <cuppajoeman> b_{i-1} }", but I'm confused on how they get the huge product at the end?
[23:10:54] <CuriousErnestBro> johnkeats7 yes ...
[23:10:55] <cuppajoeman> (instead of computing the probability that two people have the same birthday we are trying to compute the probaility that no one has the same brithday
[23:11:03] <CuriousErnestBro> I don't know the meaning of that
[23:11:29] <CuriousErnestBro> It seems to me the optional stopping theorem says E(X_tau|F_0) = k (where k is the starting amount of money)
[23:11:36] <qergle> cuppajoeman: correct. and what's the prob of all different birthdays?
[23:11:54] <CuriousErnestBro> then E(X_tau) = E(E(X_tau|F_0))=E(k)=k
[23:12:02] <cuppajoeman> that's what I'm trying to figure out, based on the wiki article, they use the second characterization of all being different
[23:12:24] <johnkeats7> CuriousErnestBro, the thing is if p != q then X_n is not a martingale, so you have to be careful
[23:12:45] <qergle> well, in n people, you have C(365,n) ways to pick all different birthdays
[23:12:52] <orthoplex64> johnkeats7: yes, but the dual points are another simplex, since simplexes are self-dual
[23:12:52] <qergle> and the denominator is 365^n
[23:12:53] <biberao> Z-module: sorry?
[23:12:57] <biberao> what does that mean?
[23:12:57] <johnkeats7> the way i see it the (q/p)^X_n stuff is a neat trick to get a martingale out of the whole ordeal
[23:13:12] <cuppajoeman> Right, that explanation totally makes sense
[23:13:19] <cuppajoeman> I'm trying to understand what they're doing now
[23:13:27] <Z-module> biberao, just silly wordplay on my part.   https://en.wikipedia.org/wiki/Killing_form
[23:13:28] <qergle> where?
[23:13:45] <qergle> which equation?
[23:13:47] <cuppajoeman> I think they're setting "Event i: birthday i differs from brithday 1 ... i-1"
[23:14:00] <CuriousErnestBro> johnkeats7 I can just replace X_n in my expectation with (q/p)^X_n and it just works? E(X_n)= E((q/p)^X_n)=k
[23:14:02] <cuppajoeman> They say " Finally, the principle of conditional probability implies that P(A′) is equal to the product of these individual probabilities: "
[23:14:02] <CuriousErnestBro> that sounds like bs
[23:14:32] <biberao> Z-module: i have another
[23:15:01] <johnkeats7> CuriousErnestBro, try to show it's a martingale, by computing the expected value at each step. something like that fact that the product of iid mean 1 things is a martingale
[23:15:03] *** Joins: seninha (~seninha@user/seninha)
[23:15:07] <johnkeats7> i don't remember the details.
[23:15:07] *** Quits: cmayo (~cmayo@2603-7000-9403-3591-9176-7875-3a28-2bdc.res6.spectrum.com) (Quit: quit)
[23:15:10] *** Quits: tx8r (~tx8r@gateway/tor-sasl/tx8r) (Quit: Leaving)
[23:15:14] <CuriousErnestBro> johnkeats7 already did that
[23:15:20] <CuriousErnestBro> (q/p)^X_n is martingale
[23:15:35] <johnkeats7> right. so you can apply the stopping theorem to *that*, but not to X_n itself.
[23:16:41] <qergle> ok, so they are saying E2=P(person 2 doesn't share a birthday with person 1), En=P(person n doesn't share birthday with persons 1,2,3,...n-1)
[23:17:04] <johnkeats7> ode to a martingale..
[23:18:03] *** Quits: Powerhouse6666 (~Powerhous@security.orcacomputers.com) (Remote host closed the connection)
[23:18:42] <cuppajoeman> Right, and then they are saying that P(No one has same bday) = Prod{i=1}{n} P(Ei)
[23:18:49] <cuppajoeman> where does the prod come from?
[23:19:48] *** Quits: trace987 (~trace@dynamic-002-247-249-191.2.247.pool.telefonica.de) (Ping timeout: 268 seconds)
[23:20:45] <qergle> it's a stupid way to solve it
[23:21:09] *** Quits: slidercrank (~slidercra@user/slidercrank) (Read error: Connection reset by peer)
[23:21:11] <cuppajoeman> yeah the combi solution is very clean
[23:21:49] <qergle> P(n are different) = P(1,2 are diff) * P(1,2,3 are diff | 1,2 are diff) * P(1,2,3,4 are diff | 1,2,3 are diff) * ...
[23:22:54] <biberao> Z-module: thanks to your way
[23:22:59] <biberao> i figured how to solve another :D
[23:24:31] *** Quits: gb73d (gb73d@host-92-7-42-10.as13285.net) ()
[23:24:56] <cuppajoeman> qergle: How are you able to break it into the product?
[23:26:17] <qergle> think of a huge disjunction
[23:26:18] *** Joins: trace987 (~trace@dynamic-002-247-249-191.2.247.pool.telefonica.de)
[23:27:34] <qergle> so you know that P(A ∩ B) = P(B | A)*P(A)
[23:28:01] <qergle> that's called bayes' rule
[23:28:26] *** Quits: rain3 (~rain3___@2a02:2f09:d100:8700:1ae4:6be9:2a58:7de6) (Ping timeout: 268 seconds)
[23:28:34] *** Quits: texasmusicinstru (~Rheanna@218.78.77.129) (Remote host closed the connection)
[23:29:08] <qergle> i meant conjunction there (not disjunction), excuse.
[23:31:03] *** Joins: oriba (~oriba@dynamic-078-055-079-043.78.55.pool.telefonica.de)
[23:31:04] *** Joins: texasmusicinstru (~Rheanna@101.91.193.123)
[23:35:26] *** Quits: Guest2161 (~moshe@97-127-22-211.mpls.qwest.net) (Ping timeout: 268 seconds)
[23:35:46] *** Quits: Fohsap (~Muimi@2001:19f0:6001:e4d:5400:3ff:fe41:8d5b) (Ping timeout: 252 seconds)
[23:35:51] <cuppajoeman> Oh ok so it's like P( (A1 ^ A2 ^ ...) ^ An)) = P( (An) | (A1 ^ A2 ^ ... ^ An-1) ) P( A1 ^ A2 ^ ... ^ An-1)
[23:35:59] <cuppajoeman> and then you keep unravelling it?
[23:36:19] *** Joins: xeno (~xeno@user/xeno)
[23:37:02] *** Quits: lxlldr (~I@87-196-81-142.net.novis.pt) (Ping timeout: 260 seconds)
[23:37:05] <qergle> yes
[23:37:28] <qergle> if we allow ourselves to denote *and* with commas, for real estate
[23:37:39] *** Joins: magla (~gelignite@55d408e5.access.ecotel.net)
[23:38:27] <qergle> we have P(E1,E2,E3,...,En) = P(E1)*P(E2|E1)*P(E3|E1,E2)*P(E4|E1,E2,E3)*...
[23:38:44] <qergle> we just keep unfolding as you said
[23:39:22] *** Quits: bobb_ (~bobb_@dslb-092-074-252-153.092.074.pools.vodafone-ip.de) (Quit: Client closed)
[23:40:00] *** Quits: Turingtoast (~Tino@200116b860a95500d83b11ab595f34a1.dip.versatel-1u1.de) (Quit: My iMac has gone to sleep. ZZZzzz…)
[23:46:48] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[23:49:23] <fweht> i  found this formula in a noise shader on shadertoy and i wonder, does this use of PHI really make any sense?  as far as i can see, `distance(xy*PHI, xy)` equals `length(xy)*(PHI-1.0` and since this is multiplied by `seed`, where is the magic of PHI? https://www.irccloud.com/pastebin/wglZdM0j/
[23:52:52] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 265 seconds)
[23:53:35] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[23:54:13] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[23:55:14] *** Quits: cuppajoeman (~cuppajoem@cpeac202e0695f3-cmac202e0695f0.cpe.net.cable.rogers.com) (Ping timeout: 256 seconds)
[23:55:56] *** Joins: specing_ (~specing@user/specing)
[23:55:56] *** Quits: specing (~specing@user/specing) (Killed (NickServ (GHOST command used by specing_)))
[23:57:35] *** specing_ is now known as specing
[23:59:26] <CuriousErnestBro> johnkeats7 thanks, it worked out
[23:59:36] <CuriousErnestBro> lots of ugly maths but it works
