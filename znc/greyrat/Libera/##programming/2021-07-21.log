[00:00:16] <user51> my assumption is that higher pixel density would be closer to paper; but i'm not 100% on it
[00:00:27] <Izem> I'm not sure what one would do if the focus was not on files
[00:00:28] <blahboybaz> Fwiw I got my stupid list to work. I know my logic probaly sucks real bad and the list could be implemented way better but I just started with js a few weeks ago and I'm kinda proud of myself. So shoot me!  :p
[00:00:32] <blahboybaz> https://onecompiler.com/nodejs/3x5snkxhf
[00:00:32] <GeDaMo> Old dot matrix printers didn't have that high resolution :P
[00:01:44] <user51> i well, the oldest book i have is unix prog environment
[00:01:51] *** Joins: anovick__ (~anovick@IGLD-83-130-153-93.inter.net.il)
[00:01:59] <user51> hardcover, too. smooth pages that are a nice shade of yellow nowdays.
[00:02:47] *** Quits: Trashlord (~trash@user/trashlord) (Ping timeout: 255 seconds)
[00:03:23] <GeDaMo> It's unlikely that a book was produced using a dot matrix
[00:03:36] <user51> a man can hope
[00:03:42] *** Joins: Trashlord (~trash@user/trashlord)
[00:03:49] *** Joins: Matt|home (~matt@adsl-74-233-58-88.mia.bellsouth.net)
[00:04:02] <digdilem> i miss the noise of dot matrix
[00:04:13] <digdilem> the epson fx80 was one of only two printers i have ever liked
[00:04:33] <blahboybaz> They used to have perforated edges with holes in them so the cogs in the wheels (in the printer) could move the paper along. You would have to tear of the edges after the print job was done  :)
[00:04:40] *** Quits: anovick_ (~anovick@igld-83-130-153-93.inter.net.il) (Ping timeout: 268 seconds)
[00:04:48] *** Joins: kariosfox (~kariosfox@89.229.173.37)
[00:05:03] <digdilem> yep. big box of paper, only have to change it once in a blue moon
[00:05:04] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[00:05:21] <blahboybaz> wow that was a long time ago
[00:05:37] <digdilem> ouch. i won't tell you about my punched card collection then.
[00:06:36] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[00:08:12] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[00:08:23] *** Joins: Crescendo (~Crescendo@user/crescendo)
[00:09:36] <user51> damn, i went on a font binge :)
[00:10:02] <user51> pretty amazed at what you can find on the internet
[00:10:15] *** Joins: Thedarkb (~beno@2001:bb6:b404:188f:1ba6:37d:9e2b:30e8)
[00:11:15] <bxtn> inter netty, what a wonderful phrase. inter netty, ain't no passin' phaaaaase
[00:12:25] *** Joins: austincheney (~austinche@2600:1700:1220:76c8:308b:28a3:e189:86d2)
[00:12:41] *** Quits: Thedarkb1 (~beno@86-42-5-248-dynamic.agg3.kny.prp-wtd.eircom.net) (Ping timeout: 268 seconds)
[00:12:42] <user51> hakuna matata?
[00:12:52] <bxtn> no, kid, inter netty.
[00:13:06] *** Quits: BlueCannonBall (~optimal@user/bluecannonball) (Quit: Konversation terminated!)
[00:13:06] <austincheney> what is the correct gitignore rule for this.  I want to block everything in a directly named js except js/lib/ws-es6
[00:13:09] <bxtn> if you're going to live with us, you're going to have to eat likes us.
[00:13:09] <user51> oh, i only nknow about the hebrew version
[00:13:17] * bxtn lifts a rock to find doritos and mountain dew
[00:13:18] <user51> so, it took me a while to notice the beat
[00:13:32] <austincheney> what that be something like    /js/**  !/js/lib/ws-es6
[00:13:35] <bxtn> oh nvm yes it is to the tune of hakuna matata.
[00:16:12] <Izem> there is alos #git if you need extra help
[00:19:13] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 258 seconds)
[00:22:22] *** Quits: yamz (~salitos@102.166.173.126) (Ping timeout: 252 seconds)
[00:24:06] *** Joins: BlueCannonBall (~optimal@pool-108-49-218-22.bstnma.fios.verizon.net)
[00:24:06] *** Quits: BlueCannonBall (~optimal@pool-108-49-218-22.bstnma.fios.verizon.net) (Changing host)
[00:24:06] *** Joins: BlueCannonBall (~optimal@user/bluecannonball)
[00:24:23] <bxtn> which #git? hard-G or soft-G?
[00:24:54] *** Quits: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca) (Quit: Connection closed)
[00:25:15] *** Quits: Null_A (~null_a@2601:645:8700:2290:f559:df0a:6e82:e360) (Read error: Connection reset by peer)
[00:26:36] <blahboybaz> Where is the word "undefined" comimg from in the output?  [node js]: https://onecompiler.com/nodejs/3x5g9r9uk
[00:28:10] <pyzozord> blahboybaz: from the last line
[00:28:12] <blahboybaz> Wouldn't line 27 execute if it was coming from that else block?
[00:28:22] <blahboybaz> hi pyzozord
[00:28:28] <blahboybaz> I got my list working
[00:29:05] <pyzozord> blahboybaz: in javascript if you don't return anything the return value will always be undefined
[00:29:15] <pyzozord> blahboybaz: hi, cool! :)
[00:29:16] <blahboybaz> oh wow
[00:29:22] <blahboybaz> thanks man
[00:29:28] <pyzozord> no worries
[00:30:30] *** Joins: kawics11 (~ta@catv-89-133-12-156.catv.broadband.hu)
[00:30:44] <pyzozord> same goes for function argument, if you don't pass anything to a function, inside that function all it's arguments will have value undefined
[00:31:52] *** Quits: dunkeln_ (~dunkeln@188.71.231.232) (Ping timeout: 258 seconds)
[00:32:07] *** Joins: Null_A (~null_a@2601:645:8700:2290:51:7614:ed:3f42)
[00:32:48] *** Joins: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net)
[00:36:34] *** Quits: kanth_mobile (~kanth@201.182.165.33) (Quit: -a- Connection Timed Out)
[00:36:46] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[00:39:33] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Quit: Leaving.)
[00:40:19] *** Quits: eXistenZ (~biskit@bzq-109-67-145-67.red.bezeqint.net) (Quit: Leaving)
[00:41:01] *** Joins: m3wzx5 (~m3wzx5@user/m3wzx5)
[00:41:12] *** Joins: kanth_mobile (~kanth@201.182.165.33)
[00:42:10] <blahboybaz> right on
[00:42:31] <blahboybaz> my validateIndex() works too now
[00:42:43] <blahboybaz> I guess perseverance pays off sometimes
[00:43:26] *** Quits: kawics11 (~ta@catv-89-133-12-156.catv.broadband.hu) (Ping timeout: 240 seconds)
[00:44:49] *** Quits: Null_A (~null_a@2601:645:8700:2290:51:7614:ed:3f42) (Remote host closed the connection)
[00:45:05] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[00:45:23] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[00:46:03] <pyzozord> blahboybaz: Yeah, you've chosen the more difficult way to learn. If I may suggest, try to suplement your exploration with some guided tutorials
[00:47:50] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[00:49:14] *** Joins: Null_A (~null_a@2601:645:8700:2290:51:7614:ed:3f42)
[00:49:40] <blahboybaz> pyzozord: I'm sorry bro, I've tried but I can't get myself to choke it down. Doing stuff with it is the only thing that makes sense to me
[00:49:58] <blahboybaz> Funny thing, you can learn a lot from failure
[00:51:12] <pyzozord> sure
[00:51:16] *** Joins: arcatech (~arcatech@user/arcatech)
[00:51:25] *** Quits: Kanth (~Kanth@201.182.165.33) (Ping timeout: 250 seconds)
[00:51:56] *** phenom_ is now known as phenom
[00:52:37] <pyzozord> I find egghead.io tutorials quite good, they are quite expensive but worth the money. They helped me jump ship from php to js
[00:53:44] <pyzozord> But I perosnally really like videotutorials, I find it easier to see how it's done, also less effort than reading
[00:54:16] *** Quits: jamea (~jamea77@10.189-202-213.bestelclientes.com.mx) (Ping timeout: 252 seconds)
[00:55:09] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[00:55:55] *** Joins: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca)
[00:57:23] <Puyo> video tutorials are Wack
[00:57:44] <bxtn> worse than lectures. except you can at least pause videos. but videos are terrible.
[00:57:57] <Puyo> i personally like codecademy
[00:58:02] <bxtn> "iM a ViSuAl LeArNeR" you know what also requires eyes to parse? words.
[00:58:05] <Puyo> because like you get to do stuff and it tells you when you fuck it up
[00:58:13] <Puyo> bxtn: thats not necesarily true
[00:58:18] *** Quits: koo7 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 252 seconds)
[00:58:45] <bxtn> i'm just tired of things like facebook spreading the myth how "videos are the future of information consumption".
[00:58:55] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[00:59:03] *** Quits: Null_A (~null_a@2601:645:8700:2290:51:7614:ed:3f42) (Remote host closed the connection)
[00:59:12] <Puyo> maybe for other stuff but not for learning to code
[00:59:41] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Remote host closed the connection)
[00:59:57] <bxtn> just tired of videos and lectures being the new de facto method of teaching so i can at least reread something.
[01:00:28] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[01:00:48] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[01:01:58] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 252 seconds)
[01:02:51] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[01:03:56] *** Joins: dunkeln_ (~dunkeln@188.71.231.232)
[01:04:02] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Read error: Connection reset by peer)
[01:04:04] *** Quits: Neverloads (NeverLoad@freakshells.net) (Read error: Connection reset by peer)
[01:04:26] *** Joins: Neverloads (NeverLoad@freakshells.net)
[01:05:09] *** Joins: kbmonkey (~kbmonkey@2001:8003:2602:9a01:d5cc:5308:3ab:dec)
[01:05:29] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[01:05:38] *** Joins: pulse (~pulse@user/pulse)
[01:05:57] <pyzozord> bxtn: well I'm dyslexic, I have low reading comprehention and I read english with speed of significantly below average
[01:05:57] *** Joins: kawics11 (~ta@catv-89-133-12-156.catv.broadband.hu)
[01:07:51] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:08:37] *** Joins: arcatech (~arcatech@user/arcatech)
[01:09:32] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Remote host closed the connection)
[01:10:30] *** Quits: dunkeln_ (~dunkeln@188.71.231.232) (Ping timeout: 240 seconds)
[01:11:08] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[01:15:33] <phogg> video tutorials are great! They're a nice alternative to the executive summary at the top of a paper. Then you can go read the meat of it.
[01:15:39] <kzootech>  hello
[01:17:13] *** Quits: kawics11 (~ta@catv-89-133-12-156.catv.broadband.hu) (Ping timeout: 255 seconds)
[01:24:25] *** Quits: user51 (~user51@77.124.42.70) (Remote host closed the connection)
[01:24:37] *** Quits: nekodesu (~nekonIsL@user/nekobit) (Ping timeout: 252 seconds)
[01:25:01] *** Quits: stoneware (~stoneware@user/stoneware) (Quit: I'll be back soon)
[01:25:28] *** Joins: nekodesu (~nekonIsL@user/nekobit)
[01:26:20] *** Quits: bpmedley (~bpmedley@69-174-155-1.bltnilaa.metronetinc.net) (Quit: Textual IRC Client: www.textualapp.com)
[01:26:47] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 244 seconds)
[01:28:13] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[01:29:12] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[01:29:29] *** Joins: dunkeln (~dunkeln@188.71.231.232)
[01:30:21] *** Joins: bpmedley (~bpmedley@69-174-155-1.bltnilaa.metronetinc.net)
[01:31:00] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[01:32:08] *** Joins: elkalamar__ (elkalamar@gateway/vpn/airvpn/elkalamar)
[01:32:35] *** Quits: kanth_mobile (~kanth@201.182.165.33) (Ping timeout: 250 seconds)
[01:33:28] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 268 seconds)
[01:34:42] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 268 seconds)
[01:35:02] *** Joins: alycidyne (~kova@91-160-172-214.subs.proxad.net)
[01:35:07] *** Quits: scabby_ (~scabby@user/scabootssca) (Ping timeout: 258 seconds)
[01:36:10] <kbmonkey> I woke up from a dream, in which I was 15 yo again and programming in 16-bit dos. I wish I kept everything I wrote back then. It would be fun (and funny) to see.
[01:36:17] <alycidyne> Hello, for those who know about Multics, who do you think is to blame? The people who designed Multics, or the people who chose Unix?
[01:36:27] *** Joins: Crescendo (~Crescendo@user/crescendo)
[01:36:28] <alycidyne> (to blame for its disappearance, I mean)
[01:37:03] *** Joins: jamea (~jamea77@189.231.111.118)
[01:37:10] *** Quits: elkalamar__ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 268 seconds)
[01:37:21] <alycidyne> And, more generally, whenever a good idea fails to spread, do you think the problem is with the people who came up with it or with the people whose chose other ideas?
[01:39:04] <alycidyne> s/whose chose/who chose/
[01:40:05] <Izem> pretty sure they took the good ideas from multics
[01:40:10] <Izem> what do you think is missing?
[01:40:25] <Izem> who's the blame? no one, the project just sorta flopped
[01:40:43] <Izem> unix team barely got any funding
[01:41:12] *** Quits: noteness (noteness@user/noteness) (Quit: Ping Timeout: 419 seconds)
[01:41:13] <alycidyne> Izem: okay, what about the single level store? the toolchain? the languages?
[01:41:53] <Izem> iirc they used PL/1 on multics?
[01:42:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[01:42:09] <Izem> what else was in the toolchain of repute?
[01:42:26] <Izem> as for single level store, idk
[01:42:34] <Izem> multics I remember for virtual memory
[01:42:57] <Izem> what's the single level store if you have time?
[01:43:51] *** Joins: trevors (~trevors@catv-89-132-207-129.catv.broadband.hu)
[01:44:24] <alycidyne> Izem: single-level store is where there is no explicit I/O API: instead, page faults are used to either pull in pages or sync them to disk (kind of like mmap, but with no distinction between the file system and process memory)
[01:45:08] *** Quits: alycidyne (~kova@91-160-172-214.subs.proxad.net) (Quit: Lost terminal)
[01:45:15] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Remote host closed the connection)
[01:45:25] <Izem> interesting
[01:45:48] *** Joins: alycidyne (~kova@91-160-172-214.subs.proxad.net)
[01:46:11] <alycidyne> Izem: sorry, GPU fault in alacritty
[01:46:21] <alycidyne> (always up with irssi, dunno why)
[01:46:29] <Izem> gpu to render text is interesting :P
[01:46:54] <alycidyne> Izem: well it gets rid of Xwayland
[01:47:14] <alycidyne> anyway, the only modern commercial OS which uses a single-level store is IBM i
[01:47:26] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4) (Quit: WeeChat 2.8)
[01:48:04] <Izem> what's some benefits of that? other than it sounds cool :D
[01:48:15] <Nosrep> what does
[01:48:31] <Izem> single-level store
[01:48:32] *** Joins: stoneware (~stoneware@user/stoneware)
[01:48:42] <AlexDelarge> even the first apple had colour afaik
[01:49:04] <Rounin> Hmmmmm... It did? Even when the first Macs didn't? How strange
[01:49:19] <Izem> alycidyne would these be really good with a cache?
[01:50:10] <alycidyne> Izem: I speak about a single-level store because I'm now realizing it would make whole distinctions obsolete - including the distinction between program and library
[01:50:13] *** Joins: noteness (noteness@user/noteness)
[01:50:54] <Izem> alycidyne apparently SLS is known as virtual memory today? https://gunkies.org/wiki/Single-level_store
[01:51:50] <alycidyne> Izem: it used to mean virtual memory, now it specifically means using page faults to provide a full abstraction of all of the computer's storage
[01:52:38] <alycidyne> e.g. Linux does not have a single-level store because files cannot be referred to solely by a hardware address - they must either be mapped or read in
[01:52:58] <alycidyne> (Linux uses page faults for swapping, which is only one possibility)
[01:53:24] <pyzozord> alycidyne: as far as I know the funding for multics was pulled out after they could meet any deadlines
[01:53:26] <alycidyne> A similar concept is an object store
[01:53:55] *** Joins: nedbat (~nedbat@python/psf/nedbat)
[01:53:56] <Rounin> I suppose one could make one unified system, but all kinds of software uses memory addresses for memory, not a file system, and uses a file system for files, rather than addresses
[01:53:59] <alycidyne> pyzozord: that too
[01:54:03] *** Quits: blahboybaz (~blahboyba@c-67-183-225-44.hsd1.wa.comcast.net) (Ping timeout: 265 seconds)
[01:54:07] <pyzozord> alycidyne: I think primarely that
[01:54:38] <pyzozord> Ken Thompson was left without a project but still his intereset was in designing operating systems
[01:54:57] <Rounin> Perhaps a file system for memory would be more fun to program with
[01:55:05] <pyzozord> so he started putting together a new one on an old abandonend micro computer thay had around
[01:55:11] <Rounin> Nothing preventing it, really... It's not like one can't just add it in userspace
[01:55:21] <alycidyne> pyzozord: that said, there's also Gresham's law of ideas: people protect ideas judged "good" and let other people use only ideas which are judged bad - so everybody exchanges only bad ideas
[01:55:28] *** Quits: noteness (noteness@user/noteness) (Ping timeout: 255 seconds)
[01:56:13] <alycidyne> pyzozord: which is why Unix was freely handed out
[01:56:42] <Izem> alycidyne: I admit that does sound pretty nice
[01:57:01] *** Parts: nedbat (~nedbat@python/psf/nedbat) (Textual IRC Client: www.textualapp.com)
[01:57:36] *** Quits: TechTest (uid283215@id-283215.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[01:57:45] <pyzozord> alycidyne: interesting law, thanks. I'm not sure if it applies to ideas though, ideas are not scarce
[01:58:13] <alycidyne> pyzozord: they're not... if people were more creative :P
[01:58:18] <pyzozord> you can't really "steal" an idea, you can only copy it
[01:58:23] <Izem> unix was actually under lock and key believe it or not
[01:58:53] <alycidyne> Izem: until it got to Berkeley, then everything went to shit
[01:58:55] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[01:58:58] <Izem> if they were a bit more adventurous things would look different
[01:59:03] <pyzozord> Oh yeah I know it was, still is. The primary reason why linux got invented - a copied idea
[01:59:30] *** Joins: blahboybaz (~blahboyba@c-67-183-225-44.hsd1.wa.comcast.net)
[01:59:32] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 252 seconds)
[01:59:51] <Izem> heh, now I wonder what kind of kernel bell labs unix had
[01:59:53] <alycidyne> pyzozord: Linux was written by Linus as a toy. People began to use it because it wasn't under litigation
[02:00:21] <Izem> yeah, the bsds were at the time right?
[02:00:27] <Izem> or freebsd at least
[02:00:30] <pyzozord> alycidyne: yep. Linus wrote it because he wanted to use something like unix on his machine
[02:00:50] *** Quits: Akuli (~Akuli@82-203-165-130.bb.dnainternet.fi) (Quit: Leaving)
[02:00:53] <alycidyne> pyzozord: even though there was 386BSD...
[02:00:55] <pyzozord> alycidyne: he didn't write it just for fun, he wrote his own software because he had a machine that was lacking a lot of ssoftware
[02:01:18] *** LjL is now known as LjL-Pfizer
[02:02:00] <Izem> also caught up in dot com stuff was plan9, it recently got (re?) released under a open license
[02:02:32] <alycidyne> Izem: Inferno, a Plan9 descendant, was what got open sourced IIRC
[02:02:43] <alycidyne> Izem: there's also 9front
[02:02:57] <Izem> no, something happened either this year or last year
[02:03:08] <Izem> Inferno was actually the commerical product
[02:03:32] *** Joins: Guest1384 (~max@2a02:8109:9b80:2778::62ae)
[02:04:32] *** Quits: Guest1384 (~max@2a02:8109:9b80:2778::62ae) (Client Quit)
[02:04:53] *** Joins: scabby (~scabby@user/scabootssca)
[02:05:26] <Izem> yeah https://plan9foundation.org/ got the plan9 codestuffs
[02:05:50] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:06:09] <Izem> alycidyne so how do you protect stuff in a system like that?
[02:06:35] <alycidyne> *sigh* how things would be if we used standardized ABIs, single-level stores and threaded code to create networked apps...
[02:06:43] <Izem> what do you mean by library btw?
[02:06:54] <alycidyne> Izem: you actually tweak the filesystem namespace itself
[02:07:17] <Izem> sounds like plan9 :P
[02:07:42] <alycidyne> Izem: oh wait I thought you were asking about Plan9, it actually depends
[02:08:09] <alycidyne> Izem: single-level store is a mechanism for I/O, not protection, you can use either ACLs or capabilities
[02:08:09] <Izem> threaded code I know as implementing stuff as collections of subroutines?
[02:08:38] <Izem> oh ok
[02:09:06] <blahboybaz> Which is better for vscode.. ESLint or jslint?
[02:09:34] <blahboybaz> Doh! Nevermind - I read that wrong
[02:10:09] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[02:10:11] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Client Quit)
[02:10:34] <Izem> alycidyne: so now that memory caches are big, does SLS matter? Of course I get that you want to generalize access
[02:10:40] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[02:12:04] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Client Quit)
[02:12:26] *** Joins: chomwitt (~chomwitt@2a02:587:dc0e:ef00:12c3:7bff:fe6d:d374)
[02:12:48] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[02:13:24] <alycidyne> Izem: SLS is only somewhat linked to page caches, it's just a design which gets rid of APIs, how it is implemented is (supposed to be) immaterial
[02:13:49] *** Quits: trevors (~trevors@catv-89-132-207-129.catv.broadband.hu) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:14:00] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Client Quit)
[02:14:10] <Izem> ok, I'll keep that in mind :)
[02:14:18] <Teckla> https://github.com/c3lang/c3c
[02:14:18] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[02:14:38] *** Quits: Thedarkb (~beno@2001:bb6:b404:188f:1ba6:37d:9e2b:30e8) (Ping timeout: 245 seconds)
[02:14:43] *** Joins: trevors (~trevors@catv-89-132-207-129.catv.broadband.hu)
[02:14:49] *** Joins: Thedarkb (~beno@2001:bb6:b404:188f:1ba6:37d:9e2b:30e8)
[02:16:17] <pyzozord> blahboybaz: noone uses jslint, literaly every company I worked for uses eslint
[02:16:50] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[02:16:58] *** Joins: x_kuru (~xkuru@user/xkuru)
[02:17:01] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.0.1)
[02:18:06] <blahboybaz> pyzozord: Thx.
[02:18:13] *** Joins: Null_A (~null_a@2601:645:8700:2290:51:7614:ed:3f42)
[02:18:46] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[02:19:08] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 255 seconds)
[02:19:16] *** LjL-Pfizer is now known as LjL
[02:20:13] *** Joins: Crescendo (~Crescendo@user/crescendo)
[02:20:21] *** Joins: Ranhir (~Ranhir@157.97.53.139)
[02:20:52] *** Joins: vysn (~vysn@user/vysn)
[02:21:28] *** Joins: salitos (~salitos@197.156.190.211)
[02:26:20] <pyzozord> gah, my cpu fan keeps freaking out
[02:26:41] <pyzozord> it turns into a drone for two seconds and then dies until I reboot
[02:26:56] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[02:27:06] <pyzozord> sensors report 65535 rpm while the fan is not spinning at all
[02:27:11] *** Quits: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca) (Ping timeout: 250 seconds)
[02:27:46] *** audioduck is now known as audiocat
[02:28:22] *** Quits: Inhahe (~inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 265 seconds)
[02:28:37] *** Joins: vysn (~vysn@user/vysn)
[02:29:17] *** Quits: Null_A (~null_a@2601:645:8700:2290:51:7614:ed:3f42) (Remote host closed the connection)
[02:29:49] *** Joins: Inhahe (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[02:31:44] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 255 seconds)
[02:33:57] *** Quits: BlueCannonBall (~optimal@user/bluecannonball) (Quit: Konversation terminated!)
[02:35:29] *** Joins: BlueCannonBall (~optimal@pool-108-49-218-22.bstnma.fios.verizon.net)
[02:35:29] *** Quits: BlueCannonBall (~optimal@pool-108-49-218-22.bstnma.fios.verizon.net) (Changing host)
[02:35:29] *** Joins: BlueCannonBall (~optimal@user/bluecannonball)
[02:36:17] *** Joins: Null_A (~null_a@2601:645:8700:2290:51:7614:ed:3f42)
[02:36:21] *** Quits: alycidyne (~kova@91-160-172-214.subs.proxad.net) (Quit: leaving)
[02:36:25] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[02:37:06] *** Quits: src (~src@user/src) (Quit: leaving)
[02:38:11] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:38:37] *** Joins: zeenk (~zeenk@2a02:2f04:a008:d600:18f2:3421:bac6:8f38)
[02:39:13] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Remote host closed the connection)
[02:39:18] *** Joins: nekobit (~nekobit@user/nekobit)
[02:39:34] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[02:43:40] *** Quits: BlueCannonBall (~optimal@user/bluecannonball) (Quit: Konversation terminated!)
[02:43:55] *** Joins: Crescendo (~Crescendo@user/crescendo)
[02:44:07] *** Joins: BlueCannonBall (~optimal@pool-108-49-218-22.bstnma.fios.verizon.net)
[02:44:07] *** Quits: BlueCannonBall (~optimal@pool-108-49-218-22.bstnma.fios.verizon.net) (Changing host)
[02:44:07] *** Joins: BlueCannonBall (~optimal@user/bluecannonball)
[02:46:28] *** Joins: pncl (~pncl___@5.245.211.197)
[02:47:28] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Ping timeout: 268 seconds)
[02:47:53] *** Telvana is now known as Apple][
[02:48:06] *** paulo_ is now known as ligma
[02:50:16] *** Joins: Kanth (~Kanth@201.182.165.33)
[02:51:05] *** Quits: trevors (~trevors@catv-89-132-207-129.catv.broadband.hu) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:51:49] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[02:51:53] *** Quits: pncl (~pncl___@5.245.211.197) (Quit: Leaving)
[02:52:38] *** Quits: Quacc (~youbuntoe@user/quacc) (Quit: WeeChat 3.2)
[02:52:54] *** Quits: ozarker (~ozarker@172-15-173-110.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 246 seconds)
[02:53:13] <pulse> ushort_max ? :p
[02:54:36] *** Joins: pncl (~pncl___@5.245.211.197)
[02:54:50] *** Quits: pncl (~pncl___@5.245.211.197) (Remote host closed the connection)
[02:55:43] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[02:56:44] *** Quits: dhil (~dhil@195.213.192.47) (Ping timeout: 252 seconds)
[02:57:20] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.2)
[03:01:55] <Joanna> Hello does anyone use hints with dbgrids?
[03:04:51] *** Quits: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net) (Remote host closed the connection)
[03:05:36] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Remote host closed the connection)
[03:06:12] *** Joins: schmillin (~schmillin@user/schmillin)
[03:06:39] *** Joins: DevAntoine (~DevAntoin@78.196.234.32)
[03:07:31] *** Quits: kmh (~kmh@p200300df5f3d23009140df07fea1d84d.dip0.t-ipconnect.de) (Quit: Leaving)
[03:10:54] *** Quits: kariosfox (~kariosfox@89.229.173.37) (Ping timeout: 268 seconds)
[03:11:19] *** Quits: zeenk (~zeenk@2a02:2f04:a008:d600:18f2:3421:bac6:8f38) (Quit: Konversation terminated!)
[03:11:31] *** Quits: DevAntoine (~DevAntoin@78.196.234.32) (Ping timeout: 268 seconds)
[03:12:43] *** Quits: salitos (~salitos@197.156.190.211) (Quit: Leaving)
[03:12:44] *** Joins: Quacc (~youbuntoe@user/quacc)
[03:12:56] *** Quits: Quacc (~youbuntoe@user/quacc) (Client Quit)
[03:18:55] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Quit: Blackpajamas)
[03:19:02] *** Joins: paulo___ (ligma@112.210.192.83)
[03:19:42] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[03:20:05] *** Quits: ligma (~paulo_@user/paulo/x-9032687) (Ping timeout: 265 seconds)
[03:20:54] *** Joins: esxloc (~user@user/esxloc)
[03:21:15] *** Quits: nekobit (~nekobit@user/nekobit) (Quit: this is a cry for help)
[03:23:57] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Ping timeout: 265 seconds)
[03:25:56] *** Joins: Quacc (~youbuntoe@user/quacc)
[03:26:47] *** Joins: nekobit (~nekobit@user/nekobit)
[03:28:17] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[03:28:45] *** Joins: pavonia (~user@user/siracusa)
[03:29:22] *** Joins: CodeSpelunker (~CodeSpelu@user/codespelunker)
[03:30:50] *** Quits: ______GOD______ (~GOD@user/god/x-9778998) (Quit: Turning off a portion of this simulation.)
[03:31:08] *** Quits: dunkeln (~dunkeln@188.71.231.232) (Ping timeout: 255 seconds)
[03:31:21] *** Joins: dunkeln (~dunkeln@94.128.224.230)
[03:32:40] *** Joins: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca)
[03:34:52] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Ping timeout: 252 seconds)
[03:35:58] *** Quits: nekobit (~nekobit@user/nekobit) (Remote host closed the connection)
[03:36:46] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[03:37:19] *** Joins: nekobit (~nekobit@user/nekobit)
[03:38:01] *** Quits: chomwitt (~chomwitt@2a02:587:dc0e:ef00:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[03:38:25] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:40:54] *** Joins: rtypo (~alex@user/rtypo)
[03:41:12] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[03:41:22] *** Quits: delial (~delial@47.185.98.253) (Quit: Leaving)
[03:41:25] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[03:42:21] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:6cf3:aa58:e4f9:2fac)
[03:42:48] *** Joins: jraskar (~Kanth@201.182.165.33)
[03:44:49] *** Quits: Kanth (~Kanth@201.182.165.33) (Ping timeout: 268 seconds)
[03:45:42] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 265 seconds)
[03:46:40] *** Quits: dunkeln (~dunkeln@94.128.224.230) (Ping timeout: 268 seconds)
[03:47:51] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[03:50:03] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 258 seconds)
[03:51:04] *** Quits: NEYi (~NEYi@109.251.216.38) (Quit: Leaving)
[03:51:07] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:54:09] *** Joins: Thedarkb1 (~beno@2001:bb6:b404:188f:1ba6:37d:9e2b:30e8)
[03:55:19] *** Quits: Thedarkb (~beno@2001:bb6:b404:188f:1ba6:37d:9e2b:30e8) (Ping timeout: 252 seconds)
[03:59:13] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 255 seconds)
[03:59:26] *** Joins: arahael1 (~arahael@60-242-119-83.tpgi.com.au)
[04:00:34] *** Quits: arahael (~arahael@203-206-95-20.tpgi.com.au) (Ping timeout: 255 seconds)
[04:01:01] *** Joins: hexfive (~eric@50.35.83.177)
[04:02:35] *** Quits: Tazmainian (~Tazmainia@41.193.169.28) (Read error: Connection reset by peer)
[04:02:51] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[04:02:59] *** arahael1 is now known as Arahael
[04:04:18] *** Joins: queen (~igloo@106.9.71.78)
[04:04:20] *** Joins: Jacktar_ (~whiteshad@gateway/tor-sasl/jacktar)
[04:04:53] *** Quits: jacktar (~whiteshad@gateway/tor-sasl/jacktar) (Ping timeout: 244 seconds)
[04:05:00] *** Jacktar_ is now known as jacktar
[04:05:10] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[04:05:42] *** Joins: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca)
[04:09:24] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[04:09:34] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 255 seconds)
[04:09:42] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:09:43] *** Quits: queen (~igloo@106.9.71.78) (Remote host closed the connection)
[04:11:29] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[04:11:55] *** Joins: queen (~igloo@106.9.71.78)
[04:12:16] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[04:12:23] <Izem> when reading the tftp rfc, I noticed it does not give you any information about how to present the protocol in an application to an end user, is that normal?
[04:14:45] *** Quits: soapsudsxx (~soapsudsx@209.221.40.138) (Remote host closed the connection)
[04:14:57] *** Quits: queen (~igloo@106.9.71.78) (Remote host closed the connection)
[04:15:34] *** Joins: queen (~igloo@106.9.71.78)
[04:16:40] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 252 seconds)
[04:17:29] <Arahael> Izem: Probably, a lot of tech docs talk about *only* the subject, and not how it might be applied or used.
[04:17:37] *** Joins: kmh (~kmh@p200300df5f3d2300449353ed639cbf20.dip0.t-ipconnect.de)
[04:18:38] *** Quits: Thedarkb1 (~beno@2001:bb6:b404:188f:1ba6:37d:9e2b:30e8) (Ping timeout: 240 seconds)
[04:18:46] <Izem> ok
[04:19:58] <Izem> what are your thoughts on exceptions? I've never really put them to good use.
[04:20:41] <Izem> I've seen then used casually in a real Java code base, but that did give me any inspiration either
[04:21:04] <Izem> especially empty catch cases :P
[04:22:11] <beaky> exceptions are for like exceptional cases i think
[04:23:03] *** Quits: derpy (~quassel@dslb-002-201-172-123.002.201.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[04:23:40] <beaky> rust doesnt have exceptions because they instead use Result values for 'recoverable errors' and panics for 'unrecoverable errors'
[04:24:08] *** Joins: soapsudsxx (~soapsudsx@209.221.40.138)
[04:25:08] <jeaye> Ends up being much more functional that way.
[04:26:04] *** Quits: jacktar (~whiteshad@gateway/tor-sasl/jacktar) (Ping timeout: 244 seconds)
[04:26:14] <Izem> I'm not sure how messing about the stack helps you recover from errors anyways
[04:26:14] <piou> IMHO it's important to distinguish between recoverable and unrecoverable errors, including when using an exception system. D for example has Exceptions that are recoverable and Errors that can be thrown like exceptions but aren't recoverable.
[04:26:22] *** Joins: jacktar (~whiteshad@gateway/tor-sasl/jacktar)
[04:28:00] <Arahael> Izem: Java uses exceptions partially as program flow, as well, though - they have two types: Checked, and unchecked exceptions.
[04:28:20] <beaky> yes the original idea with exceptions (and related things like common lisps conditions) was that the majority of programming errors are difficult to 'locally' handle so exceptions (and things like common lisps conditions) enable people to decouple error signaling and handling in the loosest way possible and code them in different areas
[04:28:34] <Arahael> Izem: And it's not about "messing with the stack", it's about "Locating the handler that knows how to cope with and respond to the exception".
[04:28:36] *** Joins: dre (~dre@2001:8003:c932:c301:482c:1f78:f040:9036)
[04:28:41] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[04:29:03] *** Joins: derpy (~quassel@dslb-002-202-069-038.002.202.pools.vodafone-ip.de)
[04:29:06] <Izem> yeah, but couldn't the handler just be a function?
[04:29:39] <Izem> I do remember the checked and unchecked exceptions bit
[04:29:47] <Arahael> Izem: In some languages, they are, yes.
[04:31:04] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[04:31:12] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[04:31:36] <Izem> I think that aspect can be easily handled with state if it's clear when you are in an error or recovery situation
[04:32:09] <Izem> but if exception handling is there, may as well use it
[04:32:46] <Izem> beaky: how does agda handle this situation?
[04:33:54] *** Quits: derpy (~quassel@dslb-002-202-069-038.002.202.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[04:34:06] <beaky> haskell uses exceptions so when using agda's haskell backend there might need to be some exceptiion handlign stuff
[04:34:44] <Izem> I see
[04:34:59] <Arahael> beaky: Haskell's exception system is practically unique to haskell, though.
[04:37:05] *** Joins: derpy (~quassel@dslb-002-207-116-213.002.207.pools.vodafone-ip.de)
[04:37:07] <beaky> yes there are different exception usecases in haskell for like two different things one for partial functions (like the infamous list head function) and one for similar situations where rust would panic
[04:37:34] *** Quits: CodeSpelunker (~CodeSpelu@user/codespelunker) (Ping timeout: 252 seconds)
[04:37:53] <beaky> and in agda for the first one you can use things like proofs that your list is not empty
[04:38:04] <beaky> and avoid having to handle anything
[04:39:06] *** Joins: amigojapan (uid86330@id-86330.brockwell.irccloud.com)
[04:39:26] <Izem> ok, so imagine you are writing a client for a protocol, what do you do for the connection being cut?
[04:39:59] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[04:40:16] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[04:40:26] <Izem> proofs are great but they might not always be feasible
[04:40:43] *** Joins: ChromaCat248 (~ChromaCat@user/chromacat248)
[04:42:02] <beaky> yes for nondeterministic events like connections being cut you would just use some async handling i think
[04:42:44] <beaky> (not exception handling)
[04:42:47] *** Quits: BlueCannonBall (~optimal@user/bluecannonball) (Ping timeout: 268 seconds)
[04:43:37] <beaky> although there's such a thing as async exceptions for like cancelling threads i think
[04:48:14] *** Joins: s0beragee (~s0berage@135-23-213-77.cpe.pppoe.ca)
[04:49:40] *** Quits: s0berage (~s0berage@135-23-213-77.cpe.pppoe.ca) (Ping timeout: 252 seconds)
[04:50:46] *** Quits: blahboybaz (~blahboyba@c-67-183-225-44.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[04:51:48] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[04:55:11] *** Joins: gggp (~gggp@123.116.88.127)
[04:57:14] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[05:04:11] *** Quits: mobidrop (~mobidrop@217-62-121-57.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[05:04:36] *** Joins: mobidrop (~mobidrop@217-62-121-57.cable.dynamic.v4.ziggo.nl)
[05:05:32] *** Joins: cis (cis@user/cis)
[05:10:17] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 265 seconds)
[05:10:56] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 252 seconds)
[05:12:13] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) (Ping timeout: 265 seconds)
[05:12:51] *** Quits: inky_ (~inky@46.36.118.203) (Read error: Connection reset by peer)
[05:14:40] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[05:14:58] <smallville7123> yay https://github.com/mgood7123/Graphical-Tool-Kit/commit/a19ffbd5d6c93282d4fcbcbe0467a3481393ac87
[05:16:02] <W> Izem, not that I've used it myself, but TLA+ seems like it was made for that specific kind of thing
[05:18:54] *** Joins: inhahe_ (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[05:20:25] <W> as for exceptions instead of handlers, it is much easier to reason about the flow of exceptions than handlers. You have to follow a chain of exceptions through a call stack to figure out where it's handled, but at least that is a finite tractable human-reachable problem for almost any codebase; where a handler gets registered (or which ones, if multiple can be, and how they get called, in which order) is much harder
[05:21:07] *** Quits: Inhahe (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) (Ping timeout: 255 seconds)
[05:21:36] <W> often, also, you *want* to handle an error state "somewhat" locally; e.g. if you're in a thread handling a single web connection from a single user, and there is an error with the database, you want to handle it for *that* user, since it might be something they sent; the handler must know about the state of that thread, the state of the connection and where to send error information
[05:21:38] *** Joins: BlueCannonBall (~optimal@pool-108-49-218-22.bstnma.fios.verizon.net)
[05:21:38] *** Quits: BlueCannonBall (~optimal@pool-108-49-218-22.bstnma.fios.verizon.net) (Changing host)
[05:21:38] *** Joins: BlueCannonBall (~optimal@user/bluecannonball)
[05:25:43] *** Joins: gggp_ (~gggp@123.118.15.132)
[05:27:18] <Izem> that makes sense
[05:29:02] *** Quits: gggp (~gggp@123.116.88.127) (Ping timeout: 255 seconds)
[05:30:48] *** Quits: freakazoid334 (~freakazoi@72.168.176.61) (Quit: Leaving)
[05:32:13] *** Joins: ______GOD______ (~GOD@user/god/x-9778998)
[05:32:48] *** Quits: s0beragee (~s0berage@135-23-213-77.cpe.pppoe.ca) (Quit: Leaving)
[05:33:23] *** Quits: ChromaCat248 (~ChromaCat@user/chromacat248) (Remote host closed the connection)
[05:35:10] *** Joins: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[05:35:42] *** Joins: freakazoid333 (~freakazoi@72.168.176.61)
[05:36:20] *** Quits: freakazoid333 (~freakazoi@72.168.176.61) (Read error: Connection reset by peer)
[05:36:49] *** Joins: freakazoid333 (~freakazoi@72.168.176.61)
[05:36:49] *** Quits: cronos (~cronos@user/cronos) (Quit: ZNC - https://znc.in)
[05:38:59] *** Joins: ChromaCat248 (~ChromaCat@user/chromacat248)
[05:39:01] *** Joins: cronos (~cronos@user/cronos)
[05:39:25] *** Quits: queen (~igloo@106.9.71.78) (Quit: Igloo IRC: https://iglooirc.com)
[05:41:15] *** Quits: esxloc (~user@user/esxloc) (Ping timeout: 246 seconds)
[05:42:14] *** Joins: gggp__ (~gggp@111.63.14.119)
[05:42:36] *** Quits: JuggleTux (~tux@mob-194-230-146-199.cgn.sunrise.net) (Ping timeout: 268 seconds)
[05:44:26] <beaky> yes common lisp conditions are like a fusion of exceptions and handlers and you can even have 'restarts' where you can interactively see in either the program or in the lisp ide / debugger multiple choices and pick the best way you want to handle a condition
[05:45:06] *** Quits: gggp_ (~gggp@123.118.15.132) (Ping timeout: 246 seconds)
[05:45:15] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:46:14] *** Joins: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net)
[05:46:49] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[05:49:44] *** Quits: hposca (~hposca@node-1w7jr9phoke2tnetlghxkyj3n.ipv6.telus.net) (Ping timeout: 255 seconds)
[05:50:54] *** Quits: xff0x_ (~xff0x@2001:1a81:52d5:1300:581a:587e:cc8c:4deb) (Ping timeout: 240 seconds)
[05:51:00] *** Quits: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca) (Quit: Connection closed)
[05:51:41] <beaky> and using the condtiions all the states you need can buble up to the handler
[05:52:25] *** Joins: gggp_ (~gggp@60.10.194.43)
[05:52:52] *** Joins: xff0x_ (~xff0x@2001:1a81:530d:8900:36a5:b6bb:ee85:bc72)
[05:54:17] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[05:54:45] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 265 seconds)
[05:54:52] *** Quits: gggp__ (~gggp@111.63.14.119) (Ping timeout: 255 seconds)
[05:55:16] <beaky> if only they used common lisp for emacs instead of reinventing lisp
[05:55:24] *** Quits: gitgood (~gitgood@80-44-9-45.dynamic.dsl.as9105.com) (Ping timeout: 258 seconds)
[05:56:00] *** Quits: paulo___ (ligma@112.210.192.83) (Remote host closed the connection)
[05:58:05] *** Joins: TheRedRipper (~TheRedRip@user/theredripper)
[05:58:13] *** Joins: inky_ (~inky@46.36.118.203)
[05:58:44] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 255 seconds)
[05:59:16] *** Joins: brabrax (~brabrax@user/brabrax)
[06:00:04] <TheRedRipper> does anyone remember a chat that was like #globalchat or something i cant remember
[06:00:10] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 252 seconds)
[06:01:00] *** Joins: blahboybaz (~blahboyba@c-67-183-225-44.hsd1.wa.comcast.net)
[06:02:20] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 268 seconds)
[06:03:15] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Read error: Connection reset by peer)
[06:03:28] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[06:03:47] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[06:04:04] *** Quits: cronos (~cronos@user/cronos) (Quit: ZNC - https://znc.in)
[06:08:37] *** Joins: cronos (~cronos@user/cronos)
[06:09:00] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:11:46] *** Quits: cronos (~cronos@user/cronos) (Client Quit)
[06:11:47] *** Joins: gggp__ (~gggp@111.63.14.119)
[06:12:30] *** Quits: m3wzx5 (~m3wzx5@user/m3wzx5) (Remote host closed the connection)
[06:12:51] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[06:15:07] *** Quits: gggp_ (~gggp@60.10.194.43) (Ping timeout: 265 seconds)
[06:16:26] *** Joins: cronos (~cronos@user/cronos)
[06:16:39] <beaky> arrays are my favorite data structure why shouldn'
[06:16:50] <beaky> why shouldn't they just be used for everything
[06:17:15] <beaky> everything else is less cache friendly and bad for cache and has more branching which is bad for branch prediction
[06:18:53] *** Joins: HaMsTeRs (~mx@14-0-230-253.static.pccw-hkt.com)
[06:19:37] *** Joins: gggp_ (~gggp@60.10.194.43)
[06:21:26] *** Joins: gggp (~gggp@123.116.73.194)
[06:21:55] *** Quits: gggp__ (~gggp@111.63.14.119) (Ping timeout: 258 seconds)
[06:22:46] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[06:23:20] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[06:24:18] *** Quits: gggp_ (~gggp@60.10.194.43) (Ping timeout: 265 seconds)
[06:25:27] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[06:26:02] *** Quits: x_kuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[06:28:23] <Nosrep> haskell:
[06:28:30] <Nosrep> linked lists are cool and all but so sloow
[06:29:54] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:f85d:495b:7ffd:586) (Quit: Leaving)
[06:33:31] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:f85d:495b:7ffd:586)
[06:35:23] *** Joins: eyynet4 (~0x100@32.211.211.39)
[06:36:32] *** Quits: gggp (~gggp@123.116.73.194) (Remote host closed the connection)
[06:36:56] *** Joins: gggp (~gggp@60.10.194.43)
[06:38:05] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[06:38:34] *** Joins: CodeSpelunker (~CodeSpelu@user/codespelunker)
[06:43:02] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[06:43:42] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[06:43:48] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[06:44:22] <beaky> yes they are the most inefficient data structure
[06:44:33] <beaky> fundamentally cache unfriendly and branch heavy
[06:45:18] *** Joins: m3wzx5 (~m3wzx5@user/m3wzx5)
[06:46:11] *** Quits: SmokenatorZ (~Smokenato@177.172.115.74) (Quit: Screw you guys, im going home)
[06:48:03] *** Joins: frutti (~igloo@106.121.182.248)
[06:48:09] *** Joins: SmokenatorZ (~Smokenato@177.172.115.74)
[06:49:21] *** Quits: Quacc (~youbuntoe@user/quacc) (Quit: WeeChat 3.2)
[06:49:33] *** Quits: Rounin (~david@cm-84.212.130.215.getinternet.no) (Ping timeout: 268 seconds)
[06:50:24] *** Quits: jraskar (~Kanth@201.182.165.33) (Ping timeout: 265 seconds)
[06:50:51] *** Quits: frutti (~igloo@106.121.182.248) (Client Quit)
[06:50:57] *** Quits: gggp (~gggp@60.10.194.43) (Ping timeout: 245 seconds)
[06:53:00] <beaky> the dream would be for functional programming languages to make the default adhoc recursive data structure be as maximally cache friendly and branch prediciton friendly as possible without sacrificing abstraction zero-cost as rust would say
[06:58:25] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[06:59:29] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 258 seconds)
[06:59:43] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[07:00:16] *** Quits: hexnewbie (~hexnewbie@user/hexnewbie) (Ping timeout: 252 seconds)
[07:00:17] *** Joins: Crescendo (~Crescendo@user/crescendo)
[07:02:52] *** Joins: hexnewbie (~hexnewbie@user/hexnewbie)
[07:03:03] *** Quits: m3wzx5 (~m3wzx5@user/m3wzx5) (Remote host closed the connection)
[07:06:15] *** Quits: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net) (Quit: Client closed)
[07:07:12] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 255 seconds)
[07:07:49] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[07:11:45] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[07:12:05] <vdamewood> Hi, people etc.
[07:12:28] * HaMsTeRs twists vdamewood's nipples
[07:12:33] *** Quits: eyynet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[07:12:46] *** Joins: eyynet4 (~0x100@32.211.211.39)
[07:13:01] <vdamewood> HaMsTeRs: Um, no.
[07:13:45] <HaMsTeRs> yes
[07:15:08] <vdamewood> HaMsTeRs: This is in't respectful and friendly. Please stop.
[07:16:53] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[07:19:51] <HaMsTeRs> ever heard the story snow white (the based on true story version)?
[07:21:10] <vdamewood> Nope.
[07:22:16] *** Quits: Nosrep (~archbox@user/nosrep) (Read error: Connection reset by peer)
[07:29:43] *** Joins: creek (~creek@user/creek)
[07:30:06] *** Quits: Null_A (~null_a@2601:645:8700:2290:51:7614:ed:3f42) (Remote host closed the connection)
[07:31:41] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) (Ping timeout: 258 seconds)
[07:32:06] *** Quits: ITD4004 (~ITD4004@187.61.233.248) (Remote host closed the connection)
[07:34:24] *** Joins: jazzy2 (~jaziz@2600:380:c07e:8a82:64d5:2b35:3886:56b2)
[07:35:54] *** Quits: jazzy (~jaziz@2600:380:c07e:8a82:1dd8:59e9:1c54:8960) (Ping timeout: 240 seconds)
[07:39:03] *** Quits: CodeSpelunker (~CodeSpelu@user/codespelunker) (Quit: CodeSpelunker)
[07:41:42] *** Joins: gggp (~gggp@123.113.186.67)
[07:41:53] *** Joins: arvind_s (~arvind_s@2402:3a80:10da:57ff:b142:be28:6804:4d2f)
[07:42:38] *** Quits: paravida (~myChateau@user/paravida) (Remote host closed the connection)
[07:43:10] *** Parts: arvind_s (~arvind_s@2402:3a80:10da:57ff:b142:be28:6804:4d2f) ()
[07:45:40] *** Quits: jamea (~jamea77@189.231.111.118) (Ping timeout: 268 seconds)
[07:46:26] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[07:46:51] *** Quits: cronos (~cronos@user/cronos) (Quit: ZNC - https://znc.in)
[07:47:39] *** Joins: Burkuf (~AnCELASTR@216.243.47.158)
[07:47:42] *** Quits: schmillin (~schmillin@user/schmillin) (Ping timeout: 255 seconds)
[07:49:41] *** Quits: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net) (Read error: Connection reset by peer)
[07:49:51] *** Joins: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net)
[07:50:25] *** Joins: cronos (~cronos@user/cronos)
[07:52:11] *** Joins: Codaraxis_ (~Codaraxis@ip68-5-90-227.oc.oc.cox.net)
[07:53:09] *** Quits: BlueCannonBall (~optimal@user/bluecannonball) (Ping timeout: 258 seconds)
[07:56:29] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 268 seconds)
[07:57:20] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[07:58:36] *** Joins: yaboiburner_ (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net)
[07:59:22] *** Quits: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net) (Read error: Connection reset by peer)
[07:59:24] *** yaboiburner_ is now known as yaboiburner
[07:59:31] *** Joins: Guest58 (~Guest58@103.5.134.18)
[08:03:12] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[08:07:04] *** Quits: inhahe_ (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) ()
[08:07:24] *** Joins: gggp_ (~gggp@60.10.194.43)
[08:08:56] *** Quits: quartz (~quartz@2603-8001-7700-61a4-0000-0000-0000-0acb.res6.spectrum.com) (Ping timeout: 252 seconds)
[08:09:44] *** Joins: Inhahe (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net)
[08:10:38] *** Joins: gggp__ (~gggp@60.10.194.43)
[08:10:40] *** Quits: gggp (~gggp@123.113.186.67) (Ping timeout: 252 seconds)
[08:11:44] *** Quits: gggp__ (~gggp@60.10.194.43) (Remote host closed the connection)
[08:11:47] *** Joins: Quacc (~youbuntoe@user/quacc)
[08:12:01] *** Joins: gggp__ (~gggp@123.113.187.192)
[08:12:39] *** Joins: jinsun_ (~jinsun_@user/jinsun)
[08:13:30] *** Quits: gggp_ (~gggp@60.10.194.43) (Ping timeout: 240 seconds)
[08:13:54] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[08:15:56] *** Quits: Guest58 (~Guest58@103.5.134.18) (Quit: Ping timeout (120 seconds))
[08:16:03] <Joanna> vdamewood: you really should restrict this channel to registered users only there are too many trolls
[08:16:31] <eyynet4> and ogres too
[08:16:41] *** Joins: Guest58 (~Guest58@103.5.134.18)
[08:16:50] <vdamewood> Joanna: Alas, most of the trolls are registered.
[08:16:56] <eyynet4> someone loves +r a little too much
[08:17:45] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[08:17:48] <Joanna> Well they can still me removed and forced to make a new account
[08:18:20] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[08:18:32] *** Quits: Quacc (~youbuntoe@user/quacc) (Quit: WeeChat 3.2)
[08:18:59] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[08:19:31] *** Quits: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net) (Ping timeout: 246 seconds)
[08:21:31] <vdamewood> eyynet4: I wouldn't say it's a little too much. It can be a valid solution to a real problem.
[08:24:14] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[08:25:08] <Arahael> Joanna: If and when it's a problem we will put it on temporarily, it's actually rarely been an issue here.
[08:25:12] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[08:27:11] <Joanna> People who come here to troll are pretty obvious. If it was my channel I would ban without hesitation because trolls scare away the good people and make channel look bad.
[08:29:05] <Joanna> Ops are kind of held responsible for what happens in their channel
[08:29:33] <InPhase> Joanna: Well that's really the problem.  Sometimes they're obvious, sometimes they're not.  Sometimes they look obvious but it's a miscommunication or a cultural fish out of water that can quickly adapt and integrate.
[08:29:43] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[08:30:13] <InPhase> Joanna: I've seen all kinds of versions of those cases and everything in between.
[08:31:10] <Joanna> If it’s not obvious at first it will become so after talking to them.
[08:32:08] <InPhase> Joanna: Yes.  One principle that holds well is that real problems reveal themselves convincingly, and give a clear enough division between the cases, if you apply just a notch of patience.
[08:32:45] <Joanna> The person harassing vdamewood a moment ago is kind of obvious
[08:33:39] <AlexDelarge> and they are also a registered user
[08:34:42] *** Quits: hoochmonger (~hoochmong@user/hoochmonger) (Ping timeout: 245 seconds)
[08:35:08] <InPhase> Joanna: And yet not causing any problem since being asked to stop.  So we extend a cautious benefit of the doubt for the moment, and proceed on.  :)
[08:35:14] *** Joins: hoochmonger (~hoochmong@user/hoochmonger)
[08:35:28] <Joanna> Registered <> unbannable :)
[08:35:48] <AlexDelarge> sigh, circular
[08:36:16] *** Joins: jamea (~jamea77@177.239.84.103)
[08:36:37] <Joanna> Well you all have more patience than I do. Good luck :)
[08:37:02] *** Quits: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net) (Quit: WeeChat 3.2)
[08:37:25] <beaky> plenty of patience to be had waiting for all our code to compile
[08:37:43] <vdamewood> beaky: Naw,. That's what sword fights are for.
[08:39:11] <InPhase> vdamewood: There should be a ##swordfight where people can talk about how long their compiles are taking.
[08:39:40] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:40:05] *** Joins: Null_A (~null_a@2601:645:8700:2290:a92e:e23d:59b7:f2e9)
[08:40:21] <Arahael> InPhase: We've already got #lfs, #gentoo, and #arch. ;)
[08:40:30] <InPhase> :)
[08:41:04] <InPhase> See now, they could have merged their channels.
[08:42:35] *** Quits: Guest58 (~Guest58@103.5.134.18) (Quit: Ping timeout (120 seconds))
[08:44:50] *** Joins: Quacc (~youbuntoe@user/quacc)
[08:45:11] *** Joins: The_Blode (~Blode@92.40.181.37.threembb.co.uk)
[08:45:16] <beaky> the art of extracting the most useful and accurate information from research papers as hilel wayne tries to settle the question whether there are empirical evidence that suprots the claim formal methods matter https://buttondown.email/hillelwayne/archive/i-ing-hate-science/
[08:45:17] *** Quits: Quacc (~youbuntoe@user/quacc) (Client Quit)
[08:52:28] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[08:59:12] *** Joins: frutti (~igloo@223.72.190.30)
[09:00:10] *** Quits: frutti (~igloo@223.72.190.30) (Remote host closed the connection)
[09:00:58] *** Quits: HaMsTeRs (~mx@14-0-230-253.static.pccw-hkt.com) (Read error: Connection reset by peer)
[09:01:29] <vdamewood> and they're gone.
[09:02:10] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[09:02:56] *** Joins: TechTest (uid283215@id-283215.tooting.irccloud.com)
[09:03:55] *** Joins: esxloc (~user@user/esxloc)
[09:05:27] *** Quits: eyynet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[09:07:03] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[09:07:54] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[09:12:11] *** Joins: Codaraxis__ (~Codaraxis@193.138.218.171)
[09:13:50] *** Joins: Quacc (~youbuntoe@user/quacc)
[09:14:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[09:15:56] *** Quits: Codaraxis_ (~Codaraxis@ip68-5-90-227.oc.oc.cox.net) (Ping timeout: 252 seconds)
[09:16:52] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[09:17:01] *** Joins: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca)
[09:17:40] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[09:18:59] *** Joins: SmokenatorZ3 (~Smokenato@191.17.65.93)
[09:20:42] *** Quits: SmokenatorZ (~Smokenato@177.172.115.74) (Ping timeout: 240 seconds)
[09:20:42] *** SmokenatorZ3 is now known as SmokenatorZ
[09:22:12] *** Quits: xff0x_ (~xff0x@2001:1a81:530d:8900:36a5:b6bb:ee85:bc72) (Ping timeout: 255 seconds)
[09:23:07] *** Joins: xff0x_ (~xff0x@2001:1a81:530d:8900:7b7c:d7d5:bd71:1e50)
[09:24:35] *** Quits: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca) (Quit: Connection closed)
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:30:18] *** Joins: Guest58 (~Guest58@103.5.134.18)
[09:30:39] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:30:47] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[09:31:03] <beaky> so btrees seem like the most natural general extension to trees that combines the best features of both arrays (implementation ease, cache friendliness, branching friendlienss) and trees (theoretically efficient algorithms faster than linear) what are some other ways to make trees more array-like in terms of performance and effectiveness without sacrificing the utility of trees
[09:31:42] *** Quits: inky_ (~inky@46.36.118.203) (Ping timeout: 252 seconds)
[09:31:43] <beaky> and also compactness another big advantage of btrees over many other kinds of trees (with arrays being the ultimate compact data structure)
[09:34:12] *** Joins: inky_ (~inky@46.36.118.203)
[09:35:51] *** Joins: gggp_ (~gggp@123.113.187.192)
[09:38:05] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[09:39:02] *** Quits: gggp__ (~gggp@123.113.187.192) (Ping timeout: 252 seconds)
[09:40:45] *** Joins: dunkeln (~dunkeln@94.128.224.230)
[09:41:20] <beaky> my dream to answer this question would be for a big database of all possible data structure operations, from basic things like get/set/insert/delete/append to more complex things like search, and a big list of benchjmark results of every data structure on each of these tasks so we can see that the humble array is the superior ultimate data structure
[09:41:57] <beaky> all benchmarked against implementations in assembly so data structures cant cheat by using their privilege as the 'native' data structure of a language
[09:42:35] <beaky> imagine that debian shootout alioth language game thing, but for basic data structures
[09:44:24] <beaky> but it will be better because unlike in that competition where different languages are really tested for 'how easily can you discard everything about the language and its runtime and how much like c can you write' or 'how clever your algorithm is' its all the same data structures and the same algorithms
[09:45:01] *** Quits: Valware (~val@Valeyard/Developer/Valware) (Ping timeout: 268 seconds)
[09:45:23] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[09:45:28] *** Quits: inky_ (~inky@46.36.118.203) (Ping timeout: 258 seconds)
[09:46:51] *** Joins: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net)
[09:46:57] <creek> https://kotaku.com/first-it-was-an-assassins-creed-expansion-now-its-ubis-1847326742
[09:47:20] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[09:47:51] <creek> Skull & Bones went into alpha after ~8 years of development. - budget:  over $120m; - multiple almost annual reboots, suffered from a lack of vision in the past and toxic work culture; - a deal with the Singapore government requires its completion
[09:50:32] *** Joins: trevors (~trevors@catv-89-132-207-129.catv.broadband.hu)
[09:50:34] *** Quits: trevors (~trevors@catv-89-132-207-129.catv.broadband.hu) (Client Quit)
[09:51:59] *** Quits: Quacc (~youbuntoe@user/quacc) (Quit: WeeChat 3.2)
[09:52:02] *** Joins: HaMsTeRs (~mx@14-0-227-103.static.pccw-hkt.com)
[09:52:27] <jamea> c# anyone have a little time? https://paste.debian.net/1205085/  lines 1 to 11, i add items to my combobox, right?
[09:53:30] *** Quits: danielrparks (~quassel@2600:1700:3f7b:20f:a3cf:6595:10bb:644b) (Ping timeout: 240 seconds)
[09:53:32] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:55:16] *** Joins: inky_ (~inky@46.36.118.203)
[10:00:30] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[10:07:52] *** Joins: gggp__ (~gggp@123.113.187.192)
[10:09:00] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[10:10:56] *** Quits: gggp_ (~gggp@123.113.187.192) (Ping timeout: 252 seconds)
[10:12:02] *** Quits: jamea (~jamea77@177.239.84.103) (Ping timeout: 252 seconds)
[10:13:10] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[10:15:56] *** Quits: anovick__ (~anovick@IGLD-83-130-153-93.inter.net.il) (Ping timeout: 255 seconds)
[10:18:38] *** Quits: gggp__ (~gggp@123.113.187.192) (Ping timeout: 252 seconds)
[10:19:06] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[10:21:14] *** Joins: pandakekok9 (~job@wikimedia-commons/pandakekok9)
[10:21:51] *** Joins: programmar (~zenix@118.69.128.37)
[10:25:58] *** Quits: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net) (Remote host closed the connection)
[10:33:40] *** Quits: creek (~creek@user/creek) (Quit: chrysanthemum has risen)
[10:34:09] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[10:34:26] *** Quits: ahungry (~user@99-40-9-245.lightspeed.livnmi.sbcglobal.net) (Remote host closed the connection)
[10:34:58] *** Quits: mobidrop (~mobidrop@217-62-121-57.cable.dynamic.v4.ziggo.nl) (Ping timeout: 268 seconds)
[10:37:50] *** Joins: riff_IRC (~riff-IRC@user/riff-irc)
[10:38:52] *** Joins: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net)
[10:39:17] *** Quits: HaMsTeRs (~mx@14-0-227-103.static.pccw-hkt.com) (Read error: Connection reset by peer)
[10:39:20] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Killed (NickServ (GHOST command used by riff_IRC)))
[10:39:28] *** riff_IRC is now known as riff-IRC
[10:40:20] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[10:41:52] *** Joins: mobidrop (~mobidrop@84.241.204.114)
[10:44:22] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[10:45:03] *** Quits: SmokenatorZ (~Smokenato@191.17.65.93) (Quit: Screw you guys, im going home)
[10:46:45] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[10:46:51] *** Quits: echoreply (~echoreply@2001:19f0:9002:1f3b:5400:ff:fe6f:8b8d) (Quit: WeeChat 2.8)
[10:47:21] *** Joins: echoreply (~echoreply@45.32.163.16)
[10:48:03] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[10:48:07] *** Joins: SmokenatorZ (~Smokenato@189.111.66.74)
[10:48:32] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[10:48:40] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[10:49:47] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[10:52:56] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 258 seconds)
[10:54:55] <TheRedRipper> forgot i had this tab open wheeze
[10:54:57] *** Quits: soapsudsxx (~soapsudsx@209.221.40.138) (Remote host closed the connection)
[10:54:58] <TheRedRipper> whats up yalll
[10:56:33] *** Quits: programmar (~zenix@118.69.128.37) (Read error: Connection reset by peer)
[10:56:53] *** Joins: programmar (~zenix@118.69.128.37)
[10:57:22] <beaky> hello my nameis beaky
[10:57:28] <beaky> soon i will implement my idea in assembly
[10:58:05] <beaky> but i havent really figured out how im going to orchestrate the benchmarking
[10:58:16] <TheRedRipper> hey beaky ive seen you around
[10:58:17] <TheRedRipper> how are ya
[10:58:45] <beaky> i just finished drinking tea now im thinkign about benchmarking data structures to see just how superior arrays are to all the most sophisticated data structures out there
[10:59:54] <Arahael> beaky: No more tea left!?
[11:00:56] *** Joins: dhil (~dhil@195.213.192.47)
[11:01:18] <TheRedRipper> uh oh
[11:01:20] <TheRedRipper> no more
[11:01:24] <TheRedRipper> teaaaaa?
[11:01:26] <TheRedRipper> we dead
[11:01:28] <TheRedRipper> forever
[11:01:30] <TheRedRipper> call it boys
[11:01:34] <TheRedRipper> xP
[11:01:40] <AlexDelarge> hahahahahaha
[11:10:23] *** Quits: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net) (Remote host closed the connection)
[11:10:37] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:11:06] *** Quits: dunkeln (~dunkeln@94.128.224.230) (Ping timeout: 255 seconds)
[11:11:06] <beaky> i will also restrict all my data structures to under a few kilobytes each
[11:11:26] <beaky> so i can benchmark them more fairly
[11:11:35] <AlexDelarge> personal blog
[11:19:57] <beaky> one last problem is that i do not know how to allocate memory in assembler since i do not want to be benchmarking allocator performance instead of data structure performance i think the best solution is to define them all statically in the same few kb of space
[11:21:54] *** Quits: audiocat (~audio@2603-8081-1800-00ad-54b0-eacb-9c51-4be4.res6.spectrum.com) (Ping timeout: 255 seconds)
[11:22:21] *** Quits: hoochmonger (~hoochmong@user/hoochmonger) (Ping timeout: 255 seconds)
[11:23:04] <Arahael> beaky: if you only need a few kb, I'd just allocate the entire thing on the stack in advance.
[11:23:12] <beaky> yes brilliant idea
[11:23:51] <beaky> i love the stack it is so convenient
[11:24:09] *** Joins: mobidrop_ (~mobidrop@84.241.194.144)
[11:26:01] *** Joins: kikijiki (~Thunderbi@user/kikijiki)
[11:26:28] *** Quits: mobidrop (~mobidrop@84.241.204.114) (Ping timeout: 252 seconds)
[11:29:00] <Arahael> Indeed!
[11:29:13] *** Quits: xff0x_ (~xff0x@2001:1a81:530d:8900:7b7c:d7d5:bd71:1e50) (Ping timeout: 246 seconds)
[11:30:19] *** Joins: xff0x_ (~xff0x@2001:1a81:530d:8900:cddd:a545:4e9e:a55d)
[11:31:40] <nitrix> If you're benchmarking arrays, wouldn't the allocation be upfront?
[11:33:22] *** Joins: aradesh (~aradesh@user/aradesh)
[11:34:43] *** Joins: trevors (~trevors@79.120.223.86)
[11:35:26] *** Joins: dunkeln (~dunkeln@94.128.224.230)
[11:35:35] *** Joins: gggp__ (~gggp@60.10.194.43)
[11:36:03] <beaky> yes i will do upfront allocation for everything not just arrays
[11:36:31] <beaky> this way i level the playing field
[11:37:07] *** Quits: furrykef (~furrykef@ip68-229-199-137.ok.ok.cox.net) (Remote host closed the connection)
[11:37:23] *** Joins: chomwitt (~chomwitt@2a02:587:dc0e:ef00:12c3:7bff:fe6d:d374)
[11:37:28] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:38:04] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[11:38:06] *** Joins: furrykef (~furrykef@ip68-229-199-137.ok.ok.cox.net)
[11:39:37] <programmar> what does it actually mean when someone says an OS is licensed ? in term of computer science does it mean that the source codes of the project isn't published and if someone tries to illegally view them will be sued ? or does it mean that it is published but doesn't allow modifications once used ?
[11:40:37] <programmar> i usually encounter topics like that when trying to do some Linux researching tho, especially when they refer back to its history with how things were licensed
[11:40:49] <nitrix> It means someone signed a bit of paper to someone else over a stupid technicality to gain money.
[11:41:14] *** Quits: dunkeln (~dunkeln@94.128.224.230) (Ping timeout: 258 seconds)
[11:41:57] *** Quits: Guest58 (~Guest58@103.5.134.18) (Quit: Client closed)
[11:44:18] <beaky> indeed the history of software licensing came about with the development/initial popularity of the personal computer and the first 'software companies' like microsoft trying to acquire soem kind of legal instrument as a leverage to demand money / cease sharing of software  https://en.wikipedia.org/wiki/Open_Letter_to_Hobbyists
[11:44:35] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 255 seconds)
[11:45:06] <programmar> nitrix: as far as i know Linux has its own license too and it doesn't seem to gain money
[11:45:29] <programmar> it's something like, if you wanna use it, use it, but make sure to make it open-sourced as well iirc
[11:46:13] *** Quits: trevors (~trevors@79.120.223.86) (Read error: Connection reset by peer)
[11:46:24] <beaky> yes free software licenses like the one linux uses came afterwards as a reaction to the use of licenses as a tool for asserting proprietary control
[11:47:06] *** Joins: trevors (~trevors@79.120.223.86)
[11:47:31] <programmar> beaky: well according to what you describes it sounds like Microsoft was hiding and refusing to disclose their source code but is there any company that does disclose their source codes but... just doesn't allow modifications to it ?
[11:47:39] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Read error: Connection reset by peer)
[11:51:43] <beaky> yes there are some 'look but dont touch or share' kind of deals out there like the deal microsoft has with some organizations to the windows source code there are other examples tho i dont remember htem off the top of my head
[11:54:18] <programmar> beaky: also does this mean that if someone intends to reverse engineer some parts of standard applications of Windows, they could be sued ?
[11:54:27] <programmar> only if successfully
[11:57:37] *** Joins: audgirka (~audgirka@2402:e280:3e16:e48:d5ba:7034:2ac9:4275)
[11:57:55] <beaky> not necessarily there are laws to protect reverse engineering if it is done for the purposes of 'interoperability' https://en.wikipedia.org/wiki/Reverse_engineering#Legality
[11:58:54] <Arahael> I think these all require lawyers.
[11:58:55] <beaky> in general legal questions of this sort are quite complex to answer and the answer will vary greatly depending on the exact jurisdiction, software license, etc.
[11:59:04] <Arahael> Yep.
[11:59:22] *** Quits: cronos (~cronos@user/cronos) (Quit: ZNC - https://znc.in)
[11:59:59] <programmar> well, gotcha
[12:00:06] <programmar> this is enough for a head start :P
[12:00:27] *** Joins: ixil (~ixil@82.197.178.137)
[12:01:34] <beaky> even if you do get sued your case can end up being ruled in your favor like in the oracle v. google thing taht was finally resolved in 2020 after like 10 years
[12:02:01] *** Joins: soulisson (~soulisson@41.250.98.102)
[12:02:06] <soulisson> Hello
[12:03:27] <programmar> beaky: well nice to know
[12:06:00] <soulisson> I lack sleep. I suck at programming. I struggle to explain basic concepts.
[12:06:20] <AlexDelarge> <BLOG>
[12:06:37] <AlexDelarge> soulisson: sounds like you need a psychiatrist, not irc
[12:06:40] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Ping timeout: 246 seconds)
[12:07:00] <TheRedRipper> WHEEZE
[12:07:09] *** Joins: src (~src@user/src)
[12:07:56] <soulisson> AlexDelarge, you're probably right
[12:08:24] <TheRedRipper> why arent you sleeping if you need sleep
[12:08:27] <TheRedRipper> idet
[12:08:27] <AlexDelarge> then why are you blogging here in a programming channel
[12:08:58] <soulisson> AlexDelarge, apologies
[12:08:58] <AlexDelarge> soulisson: on second thought IDGAF
[12:09:14] <TheRedRipper> meanie
[12:09:21] <AlexDelarge> grow up
[12:09:22] *** Quits: trevors (~trevors@79.120.223.86) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:10:29] <TheRedRipper> no
[12:10:33] <TheRedRipper> youre being mean
[12:10:44] <TheRedRipper> it was funny then mean
[12:10:52] *** Quits: frdy (~mcfrdy@user/mcfrdy) (Ping timeout: 246 seconds)
[12:11:09] <Arahael> Reminding people to please be respectful and friendly.
[12:11:52] <DPA> soulisson: Do you lack sleep because you have to get up early for work, or do you just not go to bed when you get tired or get up too soon? If the former, try to find ways to work less. If the latter, try sleeping as needed.
[12:12:16] <AlexDelarge> it's so sad that so many so-called adults have the mind of a ten year old :(
[12:12:42] <TheRedRipper> its not immature to call someone out for being mean
[12:12:57] <TheRedRipper> and if you think im an adult youre retarded
[12:12:58] <AlexDelarge> wow.  just...wow
[12:13:10] <AlexDelarge> ah and there's the ad-hom insults
[12:13:11] *** Joins: alycidyne (~kova@91-160-172-214.subs.proxad.net)
[12:13:37] <Jck_true> Can't agree if you should use tab or spaces in your source? I got the solution for you! USE BOTH! In the same file!
[12:13:44] *** Joins: HaMsTeRs (~mx@14-0-227-103.static.pccw-hkt.com)
[12:14:33] *** Quits: blahboybaz (~blahboyba@c-67-183-225-44.hsd1.wa.comcast.net) (Ping timeout: 255 seconds)
[12:15:00] <Arahael> Jck_true: Haha, people have seriously done that so I can't tell if you're being serious or joking! ;) (Some people say: Use spaces for indentation, spaces for alignment).
[12:15:03] <TheRedRipper> lol
[12:15:11] <TheRedRipper> Arahael: thats what i use
[12:15:12] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:15:19] <Arahael> Well, there you go!
[12:15:35] <Jck_true> Arahael: I got lines now that are indented with tab tab space space space space <code>
[12:15:38] <Arahael> TheRedRipper: Do you configure your editor so that they at least look different?
[12:15:48] <DPA> https://upload.wikimedia.org/wikipedia/commons/c/c5/Edvard_Munch%2C_1893%2C_The_Scream%2C_oil%2C_tempera_and_pastel_on_cardboard%2C_91_x_73_cm%2C_National_Gallery_of_Norway.jpg
[12:16:01] <soulisson> DPA, thanks. I shouldn't have brought my problems here (I'm just having a rough time). Apologies for the inconvenience to everyone!
[12:16:05] <TheRedRipper> yeah
[12:16:12] *** Quits: kbmonkey (~kbmonkey@2001:8003:2602:9a01:d5cc:5308:3ab:dec) (Quit: Leaving)
[12:16:30] <TheRedRipper> Jck_true: why
[12:16:31] <Arahael> soulisson: It's no biggie.  Take care of yourself.
[12:16:37] <Jck_true> Why can't people just use tabs... that is what tabs are for... Team Tabs anyone?
[12:16:46] <vdamewood> TheRedRipper: As bad as someone else's conduct is, let's not use the R-word like that.
[12:17:00] *** Joins: trevors (~trevors@79.120.223.86)
[12:17:43] <TheRedRipper> vdamewood: my apologies. keep forgetting to watch myself in public.
[12:18:15] <DPA> Tabs are only a good thing if you can set tab stops. Multiple tabs, eww. Use spaces.
[12:18:29] *** Joins: blahboybaz (~blahboyba@c-67-183-225-44.hsd1.wa.comcast.net)
[12:19:04] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 265 seconds)
[12:19:22] <soulisson> I do have a question related to loops (maybe not a good one). I understand that in programming, loops are constructs that allow a block of code to be executed multiple times. They're usually in the form header + block. During execution do we consider that the whole loop statement is executed multiple times including the header?
[12:19:33] <soulisson> Sorry for my english
[12:19:43] <alycidyne> Hello, are there OSes which allow trapping page faults? e.g. to let a process segment be swapped directly to its backing file instead of to swap?
[12:19:52] *** Joins: Crescendo (~Crescendo@user/crescendo)
[12:20:04] *** Joins: zeenk (~zeenk@2a02:2f04:a008:d600:18f2:3421:bac6:8f38)
[12:20:20] <alycidyne> Also, I'm not sure whether mmap was designed specifically for this, so sorry if it is
[12:20:22] <TheRedRipper> soulisson: if i read and understood that correctly... yyyyeeeesss?
[12:20:48] <alycidyne> soulisson: yes, because the condition, in the header, must be evaluated each time
[12:21:45] *** Joins: kawics11 (~ta@catv-89-133-12-156.catv.broadband.hu)
[12:21:48] <vdamewood> soulisson: Really, loops can be thought of as 'condition' and 'body'. The condition is evaluated between each execution of the body. Whether it gets evaluated before the first body execution depends on the loop.
[12:21:51] <Jck_true> soulisson: in a do{ } while(); loop the loop is executed first and then the conditional is checked after.
[12:22:02] *** Joins: cronos (~cronos@user/cronos)
[12:22:48] <Quietwalker> usually there's also a period of initialization or setup, explicitly or implicitly.
[12:22:54] <soulisson> TheRedRipper, alycidyne thanks.
[12:22:56] *** Quits: blahboybaz (~blahboyba@c-67-183-225-44.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[12:23:08] <TheRedRipper> no problem
[12:23:18] <Arahael> alycidyne: Any reason you don't want to just mmap the file?
[12:24:10] *** Joins: nee (~mobidrop@217-62-121-57.cable.dynamic.v4.ziggo.nl)
[12:24:15] <alycidyne> Arahael: oh this is in design, I'm not writing any particular app
[12:24:36] <Arahael> alycidyne: Well, even so. Why not just mmap the file? :D
[12:25:30] <alycidyne> Arahael: because trapping page faults can make mmap redundant, and would allow an elegant way of implementing a single-level store
[12:25:38] <DPA> soulisson: There are many types of loops. The simplest kind is  "label: do_something(); goto label;". The most kommon ones are for and while loops:
[12:25:39] <DPA> "for(int i=0; i<10; i++){ do_something(); }" -> "int i=0; while(i<10){ do_something(); i++;}" -> "int i=0; label: if(i<10){ do_something(); i++; goto label; }"
[12:25:39] <DPA> Code, conditions, etc. are executed in sequence, as needed.
[12:26:18] *** Joins: Atque (~Atque@user/atque)
[12:26:42] *** Quits: mobidrop_ (~mobidrop@84.241.194.144) (Ping timeout: 255 seconds)
[12:26:49] <soulisson> vdamewood, Jck_true, yeah I forgot about do - while loops.
[12:27:02] *** Quits: cronos (~cronos@user/cronos) (Quit: ZNC - https://znc.in)
[12:27:15] <TheRedRipper> while loops are my favorite kinds of loops C:
[12:27:23] *** Joins: Noventicx (~Noventicx@crux.uberspace.de)
[12:27:43] <AlexDelarge> lol
[12:28:03] <soulisson> DPA, My question was more related to if we consider that there are multiple executions of the whole loop (header and block) or exclusively of the body part. For instance in for loop, the initial statement is considered as part of the loop but only executed once, that's what mad me wonder about how we consider things.
[12:28:08] <Arahael> alycidyne: I don't actually know if you can trap them in a user-mode process.
[12:28:20] <soulisson> TheRedRipper, why is that?
[12:28:59] <TheRedRipper> simple, easy to use, apply to evrything. also, clean and consice. while thing is thing, do or dont do thing.
[12:29:06] *** Joins: cronos (~cronos@user/cronos)
[12:30:00] <alycidyne> Arahael: me neither, that's why I asked :P
[12:30:13] <soulisson> TheRedRipper, I only use them when I don't know the number of iterations, I mainly work with python.
[12:30:21] <TheRedRipper> ah
[12:30:39] *** Quits: cronos (~cronos@user/cronos) (Client Quit)
[12:30:44] <Arahael> alycidyne: This looks intriguing: https://www.kernel.org/doc/html/latest/admin-guide/mm/userfaultfd.html
[12:31:20] <alycidyne> Arahael: interesting indeed, thanks
[12:31:27] *** Quits: trevors (~trevors@79.120.223.86) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:32:03] *** Quits: Null_A (~null_a@2601:645:8700:2290:a92e:e23d:59b7:f2e9) ()
[12:32:45] *** Joins: trevors (~trevors@79.120.223.86)
[12:33:32] <alycidyne> I need to leave early, I have something to do this morning
[12:33:38] <alycidyne> Until later folks
[12:33:39] *** Quits: alycidyne (~kova@91-160-172-214.subs.proxad.net) (Quit: leaving)
[12:33:52] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[12:34:02] <TheRedRipper> byeee
[12:35:07] <DPA> I usually just avoid thinking / specifying such things too rigidly. Statements just get executed in a certain order. If I say the loop runs as long as, is executed x times, etc., then
[12:35:07] <DPA> people tend to already know which parts are executed in which order. So I don't have to specify it anyway.
[12:36:22] <beaky> so there are horizontal tabs but why hasnt there been vertical tabs
[12:36:44] <beaky> except on the mainframe where they exist
[12:36:50] <soulisson> DPA, you're right, I tend to compartmentalize things too much. I forget the big picture
[12:36:57] <beaky> that way i can use vertical tabs between blocks of code
[12:37:27] *** nee is now known as mobidrop
[12:37:44] *** Quits: Jigsy (~Jigsy@user/jigsy) (Killed (NickServ (GHOST command used by Jigsy`)))
[12:37:50] *** Joins: Jigsy` (~Jigsy@user/jigsy)
[12:39:10] <beaky> or the ascii group/record/field separators for data
[12:39:43] *** Jigsy` is now known as Jigsy
[12:41:47] <beaky> programming in assembly is very hard i always have to remember what registers i use and make sure i dont overrite other registers
[12:41:53] <soulisson> I was working few weeks ago on a PE Loader (on windows) that I gave up. I was wondering if there was a way to do things so the loaded program gets the right command line arguments. Instead of my loaded process to see "peloader myprogram.exe arg1 arg2", I would like it to see "myprogram.exe arg1 arg2"
[12:42:07] <DPA> I would have found the form feed / new page character very useful in variouse situations, if only the software had supported it...
[12:42:13] *** Joins: cronos (~cronos@user/cronos)
[12:43:29] *** gggp__ is now known as gggp
[12:47:12] *** Quits: programmar (~zenix@118.69.128.37) (Quit: Leaving)
[12:47:14] *** Quits: kawics11 (~ta@catv-89-133-12-156.catv.broadband.hu) (Ping timeout: 252 seconds)
[12:48:54] *** Quits: lavadonut (~lavadonut@user/lavadonut) (Ping timeout: 276 seconds)
[12:49:06] *** Joins: lavadonut (~lavadonut@172-222-149-079.res.spectrum.com)
[12:50:30] *** Joins: NEYi (~NEYi@109.251.216.38)
[12:50:52] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[12:52:46] <Jck_true> beaky: LF line feed, FF new page.... Just not anything that implements it :P
[12:53:24] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Read error: Connection reset by peer)
[12:53:53] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[12:56:34] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:57:04] <pyzozord> is TLA+ what mathematicians use for writing proofs? Or is TLA+ specfically designed for programmers?
[12:57:19] <pikapika> DPA, there are many characters out there
[12:59:39] *** Joins: newtoliberachat (~xyz@49.206.29.212)
[12:59:56] <beaky> tla+ is not designed for general maths but specifically as a formal language for concurrent / distributed stuff amenable to model checking
[13:00:34] <beaky> while leslie lamport emphasizes how tla+ is just 'simple maths'
[13:01:31] <beaky> or 'just set theory'
[13:01:48] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[13:01:58] *** Quits: trevors (~trevors@79.120.223.86) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:02:00] <beaky> (plus temporal logic of course thus the name tla+)
[13:02:51] <pyzozord> beaky: thanks
[13:04:05] *** Joins: trevors (~trevors@79.120.223.86)
[13:04:12] <beaky> yes he would like to see mathematicians write stuff in somtehing as formal as tla+ https://www.microsoft.com/en-us/research/publication/write-21st-century-proof/
[13:05:17] *** Joins: archie (~archie@host-95-245-61-170.retail.telecomitalia.it)
[13:06:05] <pikapika> beaky, hi
[13:06:12] <beaky> hello im beaky
[13:06:24] <pikapika> beaky, I saw you in a game
[13:06:31] <beaky> woah im in a video game?
[13:06:36] <pikapika> Yes
[13:08:36] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[13:08:48] <pyzozord> beaky: what's the difference between "formal proofs" and "rigorous informal proofs"?
[13:11:08] <beaky> rigorous informal proofs are still prose (not specified in a formal language)
[13:11:58] <piou> A formal proof is structured in a specific way so that it can be checked by a computer. Most mathematical proofs are not formal, but they are rigorous meaning that although they can't be checked by a computer as is they still rely on logic and properly prove what they should
[13:12:07] <pyzozord> beaky: can formal proofs be non-rigorous?
[13:12:30] *** jazzy2 is now known as jazzy
[13:13:04] *** Joins: gggp_ (~gggp@123.113.187.192)
[13:13:14] <beaky> for a formal proof you use a formal language and every single step is deduced through logic deduction with a clear reference to the rules of inference like e.g. gentzen style sequent calculs https://en.wikipedia.org/wiki/Sequent_calculus
[13:13:15] <piou> I don't think they can
[13:15:53] <vdamewood> I don't think.
[13:16:06] *** Quits: gggp (~gggp@60.10.194.43) (Ping timeout: 265 seconds)
[13:16:25] *** Joins: gggp__ (~gggp@123.113.187.192)
[13:16:41] <vdamewood> Okay. Now I think.
[13:18:07] <beaky> yes you can't really have non-rigorous formal proofs (since the idea of rigor is predicated on there being varying 'degrees of formality' and if you're going full formal proof then its ipso facto 'rigorous')
[13:18:24] *** Joins: tolot (~tolot@dynamic-093-133-086-049.93.133.pool.telefonica.de)
[13:19:24] *** Quits: gggp_ (~gggp@123.113.187.192) (Ping timeout: 252 seconds)
[13:20:51] *** Quits: The_Blode (~Blode@92.40.181.37.threembb.co.uk) (Ping timeout: 268 seconds)
[13:21:01] *** Quits: cronos (~cronos@user/cronos) (Quit: ZNC - https://znc.in)
[13:21:23] *** Joins: gggp_ (~gggp@60.10.23.160)
[13:21:54] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[13:22:15] <soulisson> hello piou :)
[13:24:07] <piou> yo !
[13:24:32] *** Quits: gggp__ (~gggp@123.113.187.192) (Ping timeout: 252 seconds)
[13:24:32] *** Joins: cronos (~cronos@user/cronos)
[13:26:40] <beaky> hello what are some common mistakes in assembler programming like how in c common mistakes are like buffer overflows or null dereferencing
[13:28:02] *** Joins: The_Blode (~Blode@92.40.181.42.threembb.co.uk)
[13:28:14] <vdamewood> beaky: Clobbering the wrong registers
[13:28:48] <beaky> nice that is one common mistake i often make too frequently
[13:28:55] <psydroid> that's a good question
[13:29:24] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[13:29:35] <psydroid> don't you just get a segmentation fault, though?
[13:29:52] <piou> I'd argue all c mistakes are still on the table
[13:29:53] <psydroid> or are there more implications for security?
[13:30:16] <piou> psydroid: in what case?
[13:31:01] *** Quits: cronos (~cronos@user/cronos) (Quit: ZNC - https://znc.in)
[13:31:09] *** Quits: archie (~archie@host-95-245-61-170.retail.telecomitalia.it) (Quit: Client closed)
[13:31:42] *** Quits: Tom (~Tom@82-64-144-132.subs.proxad.net) (Ping timeout: 256 seconds)
[13:32:48] <psydroid> piou, from what I understand from beaky's question he wants to know if there is anything to pay attention to as far as security is concerned in assembly code, so I am wondering if there are classes of errors that can't occur because you can't make them in assembly (if you write code carefully enough)
[13:33:27] *** Joins: varaindemian (~varaindem@86.124.78.162)
[13:33:33] <deniska> everything you can make in C you can make in assembly, almost by definition :)
[13:33:42] <deniska> including mistakes
[13:34:04] <psydroid> on ppc64/le my code crashed when I hadn't reserved enough space on the stack for each function
[13:34:13] <beaky> but at least assembler doesnt have undefined behavior
[13:34:26] <beaky> everything is nice and well defined by that 5000-page intel manual
[13:34:52] <deniska> beaky: just don't forget to get one with a new enough errata section :)
[13:35:00] <piou> psydroid: if you write code carefully enough you're not going to make mistakes, mistakes happen because it's not possible to write carefully enough. Besides I don't get from beaky's question that he was specifically interested in the security aspect.
[13:35:01] * psydroid doesn't do intel unless he really has to
[13:35:02] <beaky> lol
[13:35:28] *** Joins: cronos (~cronos@user/cronos)
[13:35:37] <beaky> yes not specifically secuirty (but i guess security too since those are important mistakes to avoid)
[13:36:53] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 265 seconds)
[13:37:20] <psydroid> what concrete problems have you run into?
[13:38:04] *** Joins: Paused (~Pauses@2a02:4780:1:1::1:9e7e)
[13:38:36] <beaky> not knowing what registers get overwritten, not having the right size of data, using the wrong instructions that i thought did what i wanted to do,
[13:40:07] <Jck_true> depending on your platform addressing short/medium/long, bank switching etc is abstracted away in C but something you have to worry about in Assembler...
[13:40:22] <beaky> nice i like bank switching
[13:40:36] <pikapika> Jck_true, what platforms still uses memory banks
[13:40:43] <Jck_true> pikapika: 8051?
[13:40:52] <beaky> 8051, microchip pic, i think thats it
[13:41:18] <pikapika> Oh ok
[13:41:26] <pikapika> As expected its some older microprocessors
[13:43:12] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 255 seconds)
[13:44:05] *** Joins: dunkeln (~dunkeln@94.129.69.87)
[13:44:05] *** Joins: Guest13 (~Guest13@103.5.134.18)
[13:46:38] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[13:47:06] *** Joins: Crescendo (~Crescendo@user/crescendo)
[13:47:41] *** Joins: DevAntoine (~DevAntoin@pop.92-184-123-207.mobile.abo.orange.fr)
[13:48:01] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[13:48:08] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[13:48:18] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[13:48:30] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:48:51] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[13:48:58] *** Quits: dunkeln (~dunkeln@94.129.69.87) (Ping timeout: 265 seconds)
[13:49:33] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[13:51:01] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[13:51:07] *** Lord_of_Life_ is now known as Lord_of_Life
[13:53:18] *** Joins: dunkeln_ (~dunkeln@94.129.69.87)
[13:53:49] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[13:53:49] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[13:53:49] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[13:59:17] *** Joins: jaysicks (~jaysicks@178-164-216-104.pool.digikabel.hu)
[14:02:24] *** Joins: dan01 (~dan01@2a02:2f0f:3017:4e00:f883:ac1e:f755:aea1)
[14:03:48] *** Joins: salitos (~salitos@197.156.190.225)
[14:07:10] <beaky> the dream would be for an assembler ide that would let me write correct assembler interactively
[14:07:33] *** Quits: cronos (~cronos@user/cronos) (Quit: ZNC - https://znc.in)
[14:07:39] <beaky> or at a higher level so i can have like procedural abstraction and data structures
[14:08:44] <edgar-rft> don't do that all programming languages that compile to native binary code? :-)
[14:08:46] <beaky> it would be like in coq where i can take chunk of assembler and in each step i can see the entire state of the processsor
[14:09:02] <beaky> lol
[14:09:27] *** Quits: nekodesu (~nekonIsL@user/nekobit) (Quit: free(neko);)
[14:09:29] *** Quits: wwilly__ (~wwilly@217.140.99.251) (Quit: Leaving)
[14:10:24] <beaky> yes i want the dream of being able to have like hoare logic in assembly, but without having to use a higehr programming language that would obscure or impose on the full state
[14:12:08] *** Joins: cronos (~cronos@user/cronos)
[14:13:04] <beaky> and the ide will help with everything like gotos wont just be an number but show up graphically like a recursive structure or induction hypothesis
[14:13:20] <GeDaMo> https://carlosrafaelgn.com.br/Asm86/index.html
[14:14:17] <beaky> nice i keep getting stuck as 'waiting for an external interrupt'
[14:14:38] *** Quits: cronos (~cronos@user/cronos) (Client Quit)
[14:16:43] *** Joins: cronos (~cronos@user/cronos)
[14:18:55] *** Joins: pulse (~pulse@user/pulse)
[14:19:21] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[14:21:17] <beaky> why are they called interrupts if they are awaiting it
[14:21:36] <GeDaMo> Sometimes there's nothing to do until the interrupt arrives
[14:22:55] *** Joins: gggp__ (~gggp@123.113.187.192)
[14:23:58] <lockywolf> what would people recommend for mining C++ code? Like documentation generation, UML diagram generation, header file inclusion tree... ?
[14:24:30] <lockywolf> I heard about doxygen and sphinx used for c++ fairly often, but perhaps I am outdated?
[14:24:36] *** Quits: salitos (~salitos@197.156.190.225) (Ping timeout: 255 seconds)
[14:25:01] *** Joins: salitos (~salitos@154.122.190.108)
[14:25:02] <lockywolf> And there is something more posh, written in Rust and Electron, with interactive navigation and such
[14:25:32] <pulse> "mining"?
[14:26:06] *** Quits: gggp_ (~gggp@60.10.23.160) (Ping timeout: 256 seconds)
[14:27:02] *** Joins: user51 (~user51@77.124.42.70)
[14:30:40] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Ping timeout: 258 seconds)
[14:32:05] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[14:34:38] <Arahael> lockywolf: I don't use c++, generally, but I have heard of cscope, that could help as well
[14:34:44] *** Quits: jaysicks (~jaysicks@178-164-216-104.pool.digikabel.hu) (Remote host closed the connection)
[14:34:45] *** Quits: HaMsTeRs (~mx@14-0-227-103.static.pccw-hkt.com) (Read error: Connection reset by peer)
[14:35:05] <lockywolf> is cscope still alive?
[14:35:18] *** Joins: jaysicks (~jaysicks@178-164-216-104.pool.digikabel.hu)
[14:35:45] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[14:36:07] <lockywolf> updated 2012?
[14:36:08] * Arahael doesn't know.
[14:36:33] <beaky> rewrite it in rust
[14:36:47] <beaky> "rscope"
[14:37:10] <beaky> rewrite the world in rust
[14:37:41] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[14:37:59] <lockywolf> why not in go?
[14:38:28] <lockywolf> although there were some updates in 2020, but mainly to keep it compiling
[14:40:15] <beaky> rust is superior since go lacks several rust features like zero-cost abstractions, move semantics, guaranteed memory safety without garbage collection, threads without data races, trait-based generics, pattern matching, type inference, minimal runtime, and efficient c bindings
[14:40:38] <deniska> go doesn't have semicolons tho
[14:40:43] <deniska> which is nice
[14:41:35] <user51> does rust have pointers?
[14:41:44] <Guest13> go has one thing rust does not - ergonomics :D
[14:42:06] <user51> maybe it's because the bulk of my experience is c, but i always miss pointers to some degree if a language doesnt have them
[14:42:20] <deniska> they're both fairly unergonomic, but in entirely different ways :)
[14:42:42] <beaky> safe rust lacks pointers (unsafe rust does) but in exchange there are related constructs like references
[14:42:50] *** Quits: DevAntoine (~DevAntoin@pop.92-184-123-207.mobile.abo.orange.fr) (Remote host closed the connection)
[14:42:56] <Guest13> Generics, sure  - bloated, but having to massively refactor code after you've committed to an approach is a huge PITA
[14:42:58] <beaky> or boxed values
[14:43:08] *** Joins: entuland (~entuland@user/entuland)
[14:43:27] *** Quits: xsperry (~as@user/xsperry) (Remote host closed the connection)
[14:44:21] *** Joins: Twipply (~Twipply@user/twipply)
[14:44:49] <beaky> at least go is easier to search about if you just call it 'golang' whereas if you search about rust you get the video game
[14:45:00] *** Joins: juliaEnv (~mathAndRh@ip-86-49-255-240.net.upcbroadband.cz)
[14:45:19] <pulse> C is peak programming because one requires a thick, wizardesque beard which you then stroke in the middle of invalid memory
[14:46:06] <juliaEnv> gdb does a better job, there
[14:46:28] <juliaEnv> and valgrind (which many lamers who use C don't know)
[14:47:20] <juliaEnv> that's why we code 0day Xploits
[14:47:23] *** Quits: cronos (~cronos@user/cronos) (Ping timeout: 250 seconds)
[14:49:08] <juliaEnv> do you use Less.js and never care about security? Boom! https://portswigger.net/daily-swig/flaw-in-preprocessor-language-less-js-causes-website-to-leak-aws-secret-keys
[14:49:32] *** Joins: cronos (~cronos@user/cronos)
[14:49:56] *** gggp__ is now known as gggp
[14:49:59] <pikapika> The javascript people have a tendency to needlessly pile on libraries
[14:50:13] <pulse> if only they were just libraries
[14:50:26] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[14:50:48] <beaky> i like javascript it is the premier programming language of the web browser the most modern well-designed application platform
[14:51:31] *** Quits: esxloc (~user@user/esxloc) (Ping timeout: 246 seconds)
[14:52:19] <pulse> https://i.imgur.com/t38leIu.jpg
[14:53:13] <user51> c is annoying to use in many cases, imo
[14:54:04] <pulse> yes, that's why we have C++
[14:54:40] *** Joins: Rounin (~david@cm-84.212.130.215.getinternet.no)
[14:55:01] *** Quits: dunkeln_ (~dunkeln@94.129.69.87) (Ping timeout: 246 seconds)
[14:55:36] <Arahael> Guest13: Generics don't have to be bloated.
[14:56:14] *** Joins: JuggleTux (~tux@mob-194-230-146-199.cgn.sunrise.net)
[14:56:45] <beaky> yes like mlton for instance makes the generics very compact because the whole program optimization treeshakes away all unnecessary modules
[14:56:58] *** Joins: dunkeln (~dunkeln@188.70.26.84)
[14:57:14] *** Quits: trevors (~trevors@79.120.223.86) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:58:25] *** Quits: Guest13 (~Guest13@103.5.134.18) (Quit: Ping timeout (120 seconds))
[14:58:37] *** Joins: trevors (~trevors@79.120.223.86)
[14:58:55] *** Quits: trevors (~trevors@79.120.223.86) (Read error: Connection reset by peer)
[14:59:12] <pulse> treeshakes, that's a nice verb
[14:59:38] <juliaEnv> do you know which Open Source implementation of the RETE algorithm is fastest?
[14:59:43] * pulse treeshakes and a million acorns fall on his head
[15:00:07] *** Joins: trevors (~trevors@79.120.223.86)
[15:02:06] *** Quits: AkechiShiro (~licht@user/akechishiro) (Ping timeout: 258 seconds)
[15:05:13] *** Joins: trevors_ (~trevors@79.120.223.86)
[15:06:27] *** Quits: trevors (~trevors@79.120.223.86) (Ping timeout: 255 seconds)
[15:06:47] *** Joins: olle (~olle@p578524f9.dip0.t-ipconnect.de)
[15:06:51] <olle> Is there a good IRC channel for software project management?
[15:09:01] *** Joins: password (~password@user/password2)
[15:09:05] <juliaEnv> olle PM is a part of Software Engineering
[15:09:25] <juliaEnv> olle afaik there is no channel about Software Engineering
[15:10:42] <beaky> software engineering the doomed discipline as dijkstra would say
[15:10:57] *** Quits: newtoliberachat (~xyz@49.206.29.212) (Ping timeout: 245 seconds)
[15:12:04] *** Joins: snake (~snake@user/snake)
[15:12:18] <juliaEnv> Djikstra is dead
[15:12:41] <juliaEnv> Software Engineering is alive and kicking!
[15:12:45] <pulse> olle, this one? :p
[15:14:59] *** Joins: Thedarkb-Desktop (~beno@2001:bb6:b404:188f:bc41:46f8:4af6:5784)
[15:16:03] *** Joins: TinoDidriksen (~TinoDidri@tinodidriksen.com)
[15:17:08] *** Joins: Atque (~Atque@user/atque)
[15:17:30] *** Joins: Guest2118 (~Guest21@103.5.134.18)
[15:17:44] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:17:51] <Guest2118> Wow, the web interface for LIberaChat kinda sucks
[15:18:15] <pikapika> What is it? Does it use kiwi?
[15:18:18] <pulse> use hexchat instead
[15:18:50] <Guest2118> let me check hexchat out
[15:19:07] <Guest2118> pikapika I'm not sure - it's the default one on the Libera main page
[15:19:29] *** Joins: gggp_ (~gggp@111.63.14.119)
[15:19:53] <Guest2118> pulse Oh, it's an IRC client. Thanks. I already do use irrsi, just thought of trying out the webchat :D
[15:20:08] <pulse> i see
[15:20:10] <Guest2118> Also, I need to fix my privacy issues on irssi first
[15:20:22] <Guest2118> Any tips on that? As in, mask my IP and other details?
[15:20:36] *** Joins: gggp__ (~gggp@111.63.14.119)
[15:20:52] <biberu> Guest2118: you can connect via tor and / or get a cloak in #libera-cloak
[15:20:53] <pulse> you can join #libera-cloak
[15:20:55] <Guest2118> The help says to talk to some admin (at least on Freenode), but...
[15:21:08] <pulse> it's automated now
[15:21:13] <pulse> join #libera-cloak and type !cloak and wait
[15:21:13] <biberu> this isn't freenode
[15:21:14] <Guest2118> biberao Ah, I see. Thanks, biberao pulse
[15:21:55] <biberu> Guest2118: https://libera.chat/guides/connect#accessing-liberachat-via-tor
[15:21:59] *** Quits: Guest2118 (~Guest21@103.5.134.18) (Client Quit)
[15:22:36] *** Quits: gggp (~gggp@123.113.187.192) (Ping timeout: 252 seconds)
[15:22:50] *** Quits: inky_ (~inky@46.36.118.203) (Ping timeout: 255 seconds)
[15:23:04] <juliaEnv> do you have any experience with Rules Engines that would involve knowing which Open Source Rules Engine is the leader of the pack in speed?
[15:23:14] <olle> pulse: hm, this one isn't too basic?
[15:23:40] <olle> I'd like to find a channel with actual project leads.
[15:23:48] <olle> Maybe that's something people pay for.
[15:23:58] <pulse> this is IRC olle
[15:24:10] <Arahael> Good joke. :)
[15:24:11] *** Quits: gggp_ (~gggp@111.63.14.119) (Ping timeout: 255 seconds)
[15:24:30] <pulse> short of specific projects that include project leads, you're not gonna find anything even remotely like that on IRC
[15:24:31] <juliaEnv> olle just ask your PM question
[15:24:32] *** Quits: cronos (~cronos@user/cronos) (Quit: ZNC - https://znc.in)
[15:24:41] <juliaEnv> olle I lead projects
[15:24:45] *** Joins: mishugana (~z0ltan@103.5.134.18)
[15:24:53] <olle> juliaEnv: Well, the question is about any connection about risk/company culture and code quality.
[15:25:17] <beaky> yes many many people here are project leads (this is an irc network for free software projects after all)
[15:25:17] *** Quits: mishugana (~z0ltan@103.5.134.18) (Client Quit)
[15:25:20] <juliaEnv> olle can you rephrase it into a clear question?
[15:25:43] <pulse> i'm a project lead and i wouldn't really trust my own judgment most of the time ;)
[15:25:47] *** Joins: contagious_meow (~salitos@154.122.52.10)
[15:25:54] *** Joins: yo (~0xfe0@2405:201:5502:d69:c32:8cab:cb7:332d)
[15:25:55] <olle> :)
[15:26:08] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[15:26:18] <olle> juliaEnv: not really... maybe I'll try google scholar xD
[15:26:20] <Paused> What is the use of being a project lead if we trusted ourselves? Lol
[15:26:37] <juliaEnv> olle but what are you searching for?
[15:27:18] <olle> "Why Good Developers Write Bad Code: An Observational Case Study of the Impacts of Organizational Factors on Software Quality"
[15:27:21] <olle> https://ieeexplore.ieee.org/abstract/document/7194616
[15:27:23] <olle> Possibly this
[15:27:41] <juliaEnv> olle variables involved in code quality?
[15:28:02] *** Joins: cronos (~cronos@user/cronos)
[15:28:09] <olle> Well, I'm writing a code quality guide for our team, and I wanted to include someting about company culture and such. :)
[15:28:41] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 255 seconds)
[15:28:50] *** Quits: salitos (~salitos@154.122.190.108) (Ping timeout: 252 seconds)
[15:29:23] <juliaEnv> olle is it one of those do vs. don't do (deisgn) guides?
[15:29:42] *** Quits: inky (~inky@46.36.118.203) (Ping timeout: 258 seconds)
[15:29:53] <GeDaMo> https://buttondown.email/hillelwayne/archive/i-ing-hate-science/
[15:29:59] <olle> juliaEnv: I wanted to cover both high-level concepts and lower details, e.g. variable and method naming.
[15:30:37] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[15:30:47] <biberu> can you give an example on the kind of cultural information you want in this document, and who the audience is?
[15:32:05] *** Joins: porphyry (~porphyry@103.5.134.18)
[15:32:14] <juliaEnv> olle OK, coding standards and company policies (called company culture). Good writers write, best writers copy. :)
[15:32:29] *** Quits: cronos (~cronos@user/cronos) (Client Quit)
[15:32:42] <olle> biberu: I'm having small 30-min workshops for my team, covering the parts I write about.
[15:32:52] <juliaEnv> olle here is something that you can copy from (copy the bits and pieces you want) http://swebokwiki.org/Chapter_10:_Software_Quality
[15:33:49] <olle> Cool, thanks
[15:33:51] <juliaEnv> olle it contains many references, and covers also "software engineering culture and ethics"
[15:34:39] *** Joins: cronos (~cronos@user/cronos)
[15:35:19] <biberu> olle: a policy that exists in some document may be very different from how people actually behave, you may need to work with that in more ways
[15:35:26] *** Quits: dunkeln (~dunkeln@188.70.26.84) (Ping timeout: 252 seconds)
[15:35:57] <user51> juliaEnv: wouldn't good writers copy other good writers
[15:36:34] <juliaEnv> user51 they'd copy the best writers, if they saw their writing :)
[15:36:35] <user51> the software quality link seems dubious to me, since from quick scrolling i haven't seen one line of code there.
[15:36:37] <olle> biberu: yes yes, policy vs actual culture in the team
[15:36:44] *** Quits: porphyry (~porphyry@103.5.134.18) (Client Quit)
[15:37:22] <biberu> olle: and around the team
[15:37:37] <juliaEnv> olle for code standards, I recommend googling something that is most widely used for that specific language, and setting up auto code formatting on save
[15:37:42] <olle> for sure, culture of the *company, better phrased.
[15:37:57] <olle> juliaEnv: that's the easy part ;)
[15:38:13] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[15:38:19] <olle> the hard part is to configure code quality metrics and how to use those metrics :d
[15:38:58] <pikapika> Metrics are a funny thing
[15:39:24] <olle> I went down a rabbit hole of code duplication algorithms.
[15:39:34] <olle> or code clone detection, called academically
[15:40:11] <user51> olle: how much duplication did you start with?
[15:40:34] <juliaEnv> olle if you want to measure defects per LOC, etc. may want some addons for your git repo, or for your service tickets (ServiceNow! or other ITIL-compliant ITSM is most commonly used)
[15:40:48] <pulse> here's the secret olle and you're free to do with this knowledge whatever you wish - we haven't actually yet figured out how to properly develop software, and all the managerial knowledge is merely our best guesses so far. none of them work ideally, and things always go wrong and you always, necessarily, have to improvise your way out of a bad situation.
[15:40:50] <olle> user51: in our current legacy code? hard to say, but around 10% at least.
[15:40:54] <pulse> keep that in mind when writing your guides ;)
[15:41:10] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[15:41:31] <user51> pulse: remninds me of the bwk quote
[15:41:34] <olle> pulse: Yeah, I know. My first recommendation in the guide is to be risk aware (technical/business/project risk).
[15:41:45] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[15:42:14] <juliaEnv> olle I don't remember ever tracking the metrics, though. I'd love to set it up, but I don't think any company I've work with had it.
[15:42:19] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[15:42:20] *** Quits: cronos (~cronos@user/cronos) (Quit: ZNC - https://znc.in)
[15:42:27] <juliaEnv> * worked with
[15:42:38] *** Joins: inky (~inky@5.77.170.37)
[15:42:47] <pulse> coincidentally, that's why all project management models tend to start out complex, intricate, and modernized, and they converge into waterfall somewhere halfway down the timeline of the project
[15:42:49] <user51> “The most effective debugging tool is still careful thought, coupled with judiciously placed print statements”
[15:42:51] <pulse> hilarious when you think of it
[15:42:54] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[15:42:58] <biberu> olle: you may want to consider how developers perceive (personal) risk and how that affects their behaviour
[15:43:02] <olle> juliaEnv: A colleague recently switched work. At his new place, commit is blocked unless it has a code grade of A or B (on a A-F scale).
[15:43:05] <pulse> user51, hah :p
[15:43:35] <beaky> what are code grades
[15:43:40] <juliaEnv> olle that's awesome. A static code analyzer does it.
[15:43:44] <olle> beaky: something some CI tools do
[15:43:50] <user51> i'll admit to still doing stupid things
[15:44:07] <user51> i noticed that i could replace 50 lines of something with a shorter preprocessing step
[15:44:08] <juliaEnv> olle I've configured this once as a git pre-push hook
[15:44:25] <user51> but it seems paradoxical, e.g you won't notice it unless you do it :D
[15:44:33] <juliaEnv> hopefully, I'm not misnaming it
[15:44:53] <beaky> yes the last bug i wrote was an off by one error
[15:45:19] <juliaEnv> olle but seriously, what programming language? In Java, I use Sonar, the best is to add it as an addon to every dev's IDE
[15:45:23] *** Joins: gggp_ (~gggp@123.113.187.192)
[15:45:41] <olle> juliaEnv: PHP, right now I'm adding my own CI tools step by step.
[15:45:46] *** Quits: varaindemian (~varaindem@86.124.78.162) (Ping timeout: 246 seconds)
[15:45:55] *** Joins: cronos (~cronos@user/cronos)
[15:46:05] <juliaEnv> olle what's their IDE? PHPStorm?
[15:46:05] <olle> Even patched a tool with a new code clone detection algorithm ^^ (copy-pasted from Java)
[15:46:21] <olle> juliaEnv: Some use that, other Notepad (CTO) ;D
[15:46:27] <beaky> nice will you use github copilot
[15:46:40] *** Quits: src (~src@user/src) (Quit: leaving)
[15:46:48] <olle> beaky: asking me? what's copilot?
[15:46:59] *** Joins: dunkeln (~dunkeln@188.70.26.84)
[15:47:29] <juliaEnv> olle that's a problem when they merely write, and use text editors instead of advanced IDEs with plugins like Sonar (lint) which supports also PHP
[15:47:31] <beaky> github copilot is the latest and greatest gpt-3 based code synthesis tool developed by github in collaboration with openai https://copilot.github.com/
[15:47:38] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[15:48:00] <biberu> olle: plain notepad?
[15:48:04] *** Joins: porphyry (~porphyry@103.5.134.18)
[15:48:04] <juliaEnv> olle https://www.sonarsource.com/php/ https://phpmetrics.org/ etc.
[15:48:05] <olle> biberu: phew, more to read at home...
[15:48:13] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[15:48:24] <olle> sorry
[15:48:26] <pikapika> biberu, nothing wrong with notepad
[15:48:28] <olle> beaky: ^
[15:48:29] *** Quits: gggp__ (~gggp@111.63.14.119) (Ping timeout: 255 seconds)
[15:48:35] <juliaEnv> olle with CI/CD you can lint their code with Sonar on the staging server
[15:48:39] <pikapika> I used to use notepda for multithousand line projects alright
[15:48:41] <pikapika> Its quite workable
[15:48:44] <pikapika> I use nano these days
[15:49:05] <olle> juliaEnv: I'm not such a big fan of those giant CI tools, I think I prefer lighter versions which can easily be run locally on the CLI
[15:49:08] <biberu> olle: look, i found not a project lead
[15:49:37] <juliaEnv> olle Sonar runs also locally, and for anyone who uses a normal IDE there is also a Sonar plugin
[15:50:25] <juliaEnv> olle it can tell a developer in real-time, while he is writing a line of bad code, that the code is bad, underline it, and explain why it is bad, and how to fix it
[15:51:12] *** Quits: scabby (~scabby@user/scabootssca) (Ping timeout: 252 seconds)
[15:51:38] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 255 seconds)
[15:51:43] <juliaEnv> olle and automated code formatting can solve most of the coding standards (auto format on save). That's also possible in a normal IDE. In PHP, a very common issue is tabs vs. spaces and NL vs NLBR :)
[15:51:54] <pikapika> Nothing wrong with nano
[15:51:58] <pikapika> Nano is a good code editor
[15:52:02] * juliaEnv used to call PHP a Pretty Horrible Programming
[15:52:10] <pikapika> PHP is quite decent
[15:52:23] <pikapika> I bet you just read that stupid fractal article
[15:52:26] <olle> juliaEnv: I think I get it up and running, yeah. Sonar.
[15:52:30] <olle> got it*
[15:52:50] <olle> Then try to find out which code clone algo they use...?
[15:53:04] <olle> Or to fail on a certain LCOM4 metric.
[15:53:10] <olle> In a certain folder. Etc.
[15:53:59] *** Joins: scabby (~scabby@user/scabootssca)
[15:54:15] *** Joins: inky_ (~inky@46.36.118.203)
[15:54:54] <DPA> I think programs trying to judge code quality, rather than only showing real errors, are nothing but snakeoil.
[15:54:54] <DPA> I still remember that time when someone replaced a perfectly safe strcpy with a strncpy wrongly, such that the code ended up having an overflow afterwards, just because a tool said strcpy is evil...
[15:55:34] <olle> That's another discussion. :)
[15:55:52] *** Joins: |7| (~seachdamh@user/seachdamh)
[15:55:53] <juliaEnv> funny enough, I've learned so much CompSci that now I'm able to code my own hypertext preprocessing language (to me it's just a simple language for expression evaluation). But, I won't code it because it's a waste of time.
[15:59:49] <juliaEnv> in fact, it's better to use node.js than PHP
[15:59:58] <pikapika> Bullshit
[16:00:17] *** Quits: cronos (~cronos@user/cronos) (Quit: ZNC - https://znc.in)
[16:00:24] <deniska> not sure what's worse, php or node :D
[16:00:34] <vdamewood> and is worse.
[16:01:34] *** Joins: newtoliberachat (~xyz@49.206.29.212)
[16:01:41] * vdamewood strokes Python.
[16:01:48] <biberu> juliaEnv: do you mean just the runtime, or also writing js manually?
[16:01:56] <beaky> i like python it is the most pythonic programming language
[16:01:59] *** Joins: AkechiShiro (~licht@user/akechishiro)
[16:02:34] <vdamewood> beaky: And Ruby is a good rubric for that.
[16:03:06] <pikapika> vdamewood, uwu
[16:03:08] <deniska> C#, and you don't need glasses :D
[16:03:15] <pikapika> juliaEnv, complete bullshit
[16:03:19] <pikapika> deniska, php is decent
[16:03:26] <pikapika> I would prefer a static typed lang but php is fine
[16:03:49] <olle> no flame war needed xD
[16:03:50] <vdamewood> deniska: C#, C# run. Run # run.
[16:03:52] *** Joins: cronos (~cronos@user/cronos)
[16:04:11] <biberu> vdamewood: if you like python perhaps you'd enjoy f#
[16:04:14] <juliaEnv> https://www.jesuisundev.com/en/why-developers-hate-php/
[16:04:20] <pikapika> olle, for one, php is much less sensitive to memory leaks
[16:04:25] <vdamewood> biberu: No. I'd prefer C#.
[16:04:29] <pikapika> And more importantly, no async bullshit
[16:04:43] <deniska> anyway, each language has its place, even if it's rust, so let's no flame :)
[16:07:49] <vdamewood> deniska: Aww... not even a little?
[16:08:32] *** Joins: Leone (~Leo@45.72.231.86)
[16:08:58] <Paused> Do any of you have any recommendations for a Ubuntu server command line system monitoring tool? I currently use glances on all my servers and I'm looking to try something new.
[16:10:07] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[16:10:45] <pulse> https://i.imgur.com/YsgvIAD.jpg
[16:11:56] <deniska> vdamewood: chat can have a little flame, as a treat
[16:12:09] <biberu> pulse: now we need one for js
[16:14:14] <pulse> i got you covered biberu https://i.imgur.com/rV3rTdK.png
[16:14:39] <biberu> good
[16:15:04] *** Joins: jamea (~jamea77@177.239.84.103)
[16:15:11] *** Quits: trevors_ (~trevors@79.120.223.86) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:15:27] *** Quits: cronos (~cronos@user/cronos) (Quit: ZNC - https://znc.in)
[16:15:56] <olle> pulse: hm, not completely fair, some are due to floating point arith
[16:16:46] <pulse> yeah that's one's not JS specific
[16:18:26] *** Quits: chomwitt (~chomwitt@2a02:587:dc0e:ef00:12c3:7bff:fe6d:d374) (Ping timeout: 252 seconds)
[16:18:39] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[16:18:54] *** Joins: cronos (~cronos@user/cronos)
[16:19:13] *** Joins: trevors (~trevors@79.120.223.86)
[16:19:57] <|smlckz|> implicit conversion taken to extreme.. only comparable to Perl and PHP
[16:20:39] <vdamewood> deniska: Yay!
[16:25:54] *** Quits: contagious_meow (~salitos@154.122.52.10) (Read error: Connection reset by peer)
[16:25:57] *** Joins: yamz (~salitos@197.156.190.166)
[16:26:06] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Quit: Leaving)
[16:29:45] *** Joins: scabby_ (~scabby@user/scabootssca)
[16:35:36] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[16:36:01] *** Quits: inky_ (~inky@46.36.118.203) (Ping timeout: 258 seconds)
[16:36:46] *** porphyry is now known as mishugana
[16:37:07] *** Joins: The_Blode_ (~Blode@92.40.168.52.threembb.co.uk)
[16:37:12] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[16:37:34] *** Quits: The_Blode (~Blode@92.40.181.42.threembb.co.uk) (Ping timeout: 268 seconds)
[16:38:39] *** Joins: hoochmonger (~hoochmong@user/hoochmonger)
[16:39:12] *** Joins: female_student_4 (~female_st@2a01:388:243:150::1:28)
[16:39:18] *** Quits: mishugana (~porphyry@103.5.134.18) (Quit: Client closed)
[16:40:18] <female_student_4> Hi, I keep getting rejected from masters courses in computer science even though I know how to code up to final year undergraduate
[16:40:27] <female_student_4> The problem is, I don't have an appropriate bachelors
[16:40:41] <female_student_4> and I didn't get a first because my ex girlfriend was a psychopath who made me have a mental breakdown
[16:40:47] <female_student_4> So, I don't know what to do
[16:40:56] <female_student_4> Do I need a degree or will it be a hindrance i dont know
[16:41:49] <deniska> a degree may help, but being self-taught is still considered fairly normal in programming field
[16:42:29] *** Joins: nm (~igloo@117.121.61.41)
[16:42:30] <pikapika> deniska, but they are talking about colleges
[16:42:49] <deniska> ah, oh, wait, yeah
[16:43:00] <Thedarkb-Desktop> I'm a drop out but I'm hoping my freelance work is building up my CV, I'm not earning a lot though.
[16:43:08] <deniska> my mind immediately jumped to jobs :)
[16:43:12] *** Quits: trevors (~trevors@79.120.223.86) (Ping timeout: 255 seconds)
[16:43:23] *** Joins: gggp__ (~gggp@123.113.178.180)
[16:43:25] <female_student_4> I meant,  can I progress in the field without a degree
[16:43:27] <female_student_4> i.e. the job market
[16:43:37] <female_student_4> I'm thinking of just getting good at kaggle? Idk, if that's naive
[16:43:59] <pikapika> I think kaggle is about machine learning, which is of course the current fad
[16:44:33] *** Quits: jamea (~jamea77@177.239.84.103) (Ping timeout: 255 seconds)
[16:44:39] <female_student_4> yeah, don't know why people are hyping up ML when to me it just seems like very advanced stats
[16:44:50] <female_student_4> anyhoo
[16:44:56] <female_student_4> Is it better to have degree or not
[16:45:11] <pikapika> Many companies require a degree
[16:45:21] <pikapika> female_student_4, everything is a bunch of bullshit
[16:45:24] <pikapika> Its all fads
[16:45:49] <female_student_4> lol
[16:45:58] <pikapika> The web dev world especially is extremely fad driven
[16:46:08] <pikapika> and web dev in turn is the major fad all over the software world these days
[16:46:17] <female_student_4> What annoys me is twats on linkedin putting "Python"
[16:46:28] <female_student_4> And they can't even do complex stuff in Python
[16:46:30] <pikapika> Web dev is pure fad chasing
[16:46:34] *** Quits: gggp_ (~gggp@123.113.187.192) (Ping timeout: 252 seconds)
[16:46:47] <female_student_4> Like in my opinion, know a for, while if else
[16:46:51] <female_student_4> Does not mean you KNOW python
[16:47:02] <pikapika> Yeah thats a bunch of bullshit
[16:47:08] <pikapika> A language is just like a human language
[16:47:11] <olle> female_student_4: I have only a bachelor and can get a job, but for master you need bachelor first, of course.
[16:47:15] <pikapika> It is not enough to just know the syntax
[16:47:26] *** Joins: Valware (~val@2001:41d0:800:2e90:2304:86cf:d60c:1)
[16:47:26] *** Joins: trevors (~trevors@79.120.223.86)
[16:47:29] <deniska> female_student_4: all other things being equal, it's better to have a degree
[16:47:29] <pikapika> You must know the way of speaking
[16:47:51] <deniska> female_student_4: is it too bad not to have it? Probably not
[16:48:00] <female_student_4> Yeah people doing Edx courses in Python and saying they know Python infuriate me
[16:48:04] <female_student_4> Because they know nothing
[16:48:28] <female_student_4> olle in comp sci?
[16:48:41] <bjs> Im sure some of them really do know Python
[16:48:44] <pikapika> A language is a very subtle thing
[16:49:06] <pikapika> I can write C almost everywhere
[16:49:10] <pikapika> Doesn't mean I know those languages
[16:49:11] <female_student_4> bjs maybe some, but I think if an individual believes they know Python after a 8 week course, they are very much mistaken
[16:49:13] <pikapika> I can write C in Java
[16:49:17] <austincheney> I am writing a browser remote control application.  What are some good public sites that would make for good demos?
[16:49:17] <pikapika> Does not mean I know Java
[16:49:20] <pikapika> I can write C in Python
[16:49:22] <bjs> female_student_4: there are also people with degrees who have no idea what they're doing
[16:49:25] <pikapika> Does not mean I know Python
[16:49:45] <female_student_4> bjs Yep, tell me that again. Doing a ML course currently, some guy on it is a 3rd year comp sci, and I know more than him
[16:50:01] <female_student_4> He thinks R is hard
[16:50:11] <pikapika> He might be correct
[16:50:13] *** Quits: ephemer0l (~ephemer0l@organizedmagnetism.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[16:50:17] <female_student_4> R is just functions
[16:50:19] <female_student_4> So easy
[16:50:27] <vdamewood> When I was in school we had a guy with a PhD who got assigned me as an assistant so I could actually teach the class, he was so terrible.
[16:50:27] <bjs> female_student_4: languages aren't easy or hard,  it's the problems you solve with them that are or aren't
[16:50:29] <pikapika> Some languages are hard due to annoying reasons
[16:50:32] <bjs> and many people use R and solve hard problems
[16:50:49] <female_student_4> bjs Yes, I am talking about he found picking up R hard
[16:50:50] *** Quits: trevors (~trevors@79.120.223.86) (Client Quit)
[16:50:51] <pikapika> bjs, it depends. In some languages the only primitive data type you have available is a vector of numbers.
[16:50:56] <pikapika> Its annoying to do many things in them
[16:51:06] <pikapika> female_student_4, there are good reasons why someone might find 'R' hard
[16:51:16] <pikapika> Compared to a language like C or Java
[16:51:23] <female_student_4> What would be a good reason?
[16:51:28] <pikapika> And that isn't necessarily due to the language problems itself being hard
[16:51:41] <pikapika> female_student_4, dynamic typing is often a bs reason that makes a language very hard
[16:51:42] <female_student_4> bjs Yeah, exactly, you can't get that problem solving depth in my opinion from a 8 week edx course
[16:51:48] <austincheney> female_student_4, it is very straight forward to tell good developers from bad ones:  do they require certain patterns or conventions?  Do they do things they know are hostile to the user because its easier for them?
[16:51:49] *** Joins: ephemer0l (~ephemer0l@organizedmagnetism.com)
[16:52:05] <female_student_4> austincheney interesting
[16:52:09] <user51> vdamewood: horrible in what way?
[16:52:22] <pikapika> Likewise things like requiring to free the reference of the iterator after doing a for each (php)
[16:52:28] <pikapika> Stupid stuff like that
[16:52:41] <pikapika> Or a language lacking structs/classes and only having vectors of reals
[16:53:11] <austincheney> female_student_4, those two things capture most bad developers.  and they will come up with all kinds of bullshit excuses to qualify bad practices
[16:53:23] <vdamewood> user51: eg: A question came up about Java, in the expression 2 + 2 + 3 * 4, which operation is performed first. He couldn't explain why 2 + 2 was performed first.
[16:53:36] *** Joins: w0ng (~w0ng@103.1.212.140)
[16:53:37] <bjs> female_student_4: you can't really infer much from what people struggle with, everyone finds different things hard.  Some people really struggle with asm/C and others find it obvious and simple
[16:53:46] <pikapika> vdamewood, how are you sure 2+2 is performed first?
[16:54:21] <female_student_4> bjs When my R course is purely functional based I can, you're literally passing through arguments into functions in certain orders. That is not hard
[16:54:24] <pikapika> There is nothing requiring any specific order
[16:54:25] <user51> i imagine they'd just fold the constants :)
[16:54:28] <user51> therefore no operations
[16:54:31] <pikapika> The optimizations and the jvm can do anything
[16:54:42] <pikapika> Or like user51 said, just a pure constant right at compile time
[16:54:44] <bjs> female_student_4: and then you flip it around and ask them to do something in Haskell suddenly the C/asm people can't do anything
[16:54:51] <deniska> I think java is fairly strict about defining the order of operations
[16:55:00] *** Joins: trevors (~trevors@79.120.223.86)
[16:55:01] <vdamewood> pikapika: Well, that was the answer in the text book.
[16:55:09] <female_student_4> bjs I've heard people don't like Haskell ;however, I am not very familiar with it.
[16:55:12] <bjs> female_student_4: well,  what you find easy others may not because of your background and interests and things
[16:55:21] <deniska> you can have launchTheMissilesAndReturnTheAmount() instead of the constant `2`
[16:55:38] <bjs> female_student_4: it's not that people don't "like" it, it's that it's a very different language and even "simple" and "easy" things in the language people can find hard to understand and grasp if they're not used to it
[16:55:45] <deniska> so java defines the order strictly
[16:55:49] <pikapika> vdamewood, then you shouldn't use incorrect data from textbooks in your interviews
[16:56:00] <vdamewood> pikapika: Interviews?
[16:56:03] <pikapika> bjs, the most important thing is
[16:56:24] <vdamewood> pikapika: What interviews?
[16:56:25] <pikapika> There are some languages in which simple things become hard, and some hard things are easy and some hard things are hard
[16:56:30] <pikapika> Some languages are just inconsistent and weird
[16:56:32] <female_student_4> austincheney What are you implying about patterns by the way? I had a discussion with someone on IRC ages ago about how there are a lot of bad programmers out there just layering code upon code without actually knowing what's going on behind it. Then I brought up about perhaps that is why design patterns are useful? Do you have any further comment
[16:56:33] <female_student_4> on that?
[16:56:41] <pikapika> Something thats trivial in C might require a lot of contortion in that language
[16:56:51] <pikapika> but you could query a db in a single line in it
[16:57:20] <bjs> female_student_4: I've seen school children pick up Haskell and find it 'easy',  whereas experienced programmers find the same task hard. Simply because the children don't have the same pre-conceived notions about how a program is supposed to execute
[16:57:20] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[16:57:20] <female_student_4> bjs I will say I struggle with some math in coding because I didn't do math but that's it really and tbh I held myself accountable and push myself to be better at the math because you can write faster programs if you are good at maths
[16:57:39] *** Parts: olle (~olle@p578524f9.dip0.t-ipconnect.de) ()
[16:57:42] *** Joins: inky_ (~inky@5.77.170.37)
[16:57:47] <austincheney> female_student_4, use the right tool for the job.  less is more.  Do expect code patterns to be helpful.
[16:57:48] <vdamewood> So, anyway, I got to explain what a syntax tree was, and that the parser would make sure that the 3 * 4 was performed separately from the others, but nothing was stopping it from evaluating the 2 + 2 first.
[16:58:24] <austincheney> female_student_4, many bad developers do a bunch of nonsense to decorate their code with friendly conventions.  all code is a form of debt.
[16:58:40] <female_student_4> austincheney what do you constitute as a bunch of nonsense?
[16:58:43] <vdamewood> Anyway, the instructor couldn't even explain that.
[16:59:33] <female_student_4> austincheney I think I understand your hostility point
[16:59:34] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[16:59:42] <user51> if you go far enough, there's no reason any of the symbols couldn't mean something else :)
[16:59:54] <user51> but that's gotcha territory
[17:00:33] <bjs> female_student_4: well maybe if you struggle with "math in coding" maybe you'd really struggle to program in Haskell, and even those "simple" things you'd really struggle with.
[17:00:56] <austincheney> female_student_4, code that has nothing to do with the purpose, business requirements, or user facing features of an application.  that which a developer adds only for their own wellfare like a bunch of circular references to qualify a OOP madness when a simple function will more clearly do the same job
[17:02:35] <austincheney> you see this A LOT in multiparadigm languages.  Developers will do a bunch of unnecessary stupid things because that is how they are taugh when really you could solve the same problem with 20% of the instructions in a way that executes 100x faster
[17:02:59] *** Quits: dunkeln (~dunkeln@188.70.26.84) (Ping timeout: 252 seconds)
[17:03:50] <|smlckz|> see also, leaky abstractions
[17:04:03] *** Quits: Valware (~val@2001:41d0:800:2e90:2304:86cf:d60c:1) (Quit: (◕‿◕✿) bai)
[17:04:32] <pikapika> austincheney, you know what is annoying
[17:04:42] <pikapika> Trying to fit a data structure to an rdbms
[17:04:58] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[17:05:24] * austincheney gets angry when he sees people try to somehow comparing writing in JavaScript to assembly
[17:05:50] <female_student_4> bjs I doubt it but ok
[17:05:54] <female_student_4> MOVING ON
[17:06:32] <bjs> female_student_4: but you said you found the "math in coding" hard, and haven't tried Haskell, so your only datapoint is that you *Would* struggle
[17:06:33] *** Quits: jaysicks (~jaysicks@178-164-216-104.pool.digikabel.hu) (Ping timeout: 268 seconds)
[17:06:35] <bjs> so why do you doubt it?
[17:06:59] <female_student_4> @bjs I feel like you're arguing with me for no reason and its kinda weird and I'm just here for positive vibes so I'm not going to respond anymore
[17:07:16] <vdamewood> austincheney: At least in assembly, 9007199254740992 + 1 is 9007199254740993.
[17:07:18] *** Joins: Valware (~val@2001:41d0:800:2e90:2304:86cf:d60c:1)
[17:07:32] <bjs> female_student_4: haha I think you're misinterpreting. I think you're just being unfair to those people around you because they struggle with R :P
[17:07:41] <vdamewood> Well, on most 64-bit machines.
[17:07:52] <OverCoder> hello
[17:07:56] <|smlckz|> category theory isn't hard math ii[r|u]c
[17:08:00] <OverCoder> I am wiling to take like ~30m break from studying maths
[17:08:00] <vdamewood> OverCoder: Olleh!
[17:08:02] <OverCoder> so um
[17:08:09] <OverCoder> what kinda CSS challenge I'd be making
[17:08:17] *** Joins: dunkeln (~dunkeln@188.70.26.84)
[17:08:17] <female_student_4> austincheney that makes  a lot of sense yeah
[17:08:22] <OverCoder> I need some insane front-end dev idea to quickly do
[17:08:29] <bjs> female_student_4: learning languages is a very long process and even a 2-3 year degree doesn't really give people the experience they need, especially a CS degree which has relatively little focus on programming
[17:08:41] <female_student_4> austincheney I've experienced very minor examples of what you are saying
[17:09:24] <pikapika> austincheney, I think I know what you are referring to
[17:09:44] <pikapika> Was is someone trying to compare writing async code to writing asm?
[17:10:08] <pikapika> bjs, mathematicians used to use C and FORTRAN mainly
[17:10:15] <pikapika> Today probably MATLAB, Python, R etc
[17:10:33] <|smlckz|> some are using Julia etc.
[17:10:48] <bjs> pikapika: I'm not sure very many people who call themselves "mathematician" as their primary label would use C
[17:10:52] <bjs> :P
[17:10:53] <bjs> I hope!
[17:10:59] <austincheney> a less clear difference between good and bad developers is that good developers have learned what not to do.  this is less clear because it is often not well received and so many good developers will just keep these things to themselves
[17:11:11] <pikapika> Mathematicians don't want to bother with kicking the fucking computer trying to make it do shit
[17:11:14] <pikapika> They use practical languages
[17:12:10] <bjs> Well they use languages that have libraries and ecosystems to help them do the thing they want.  That's why languages like Python became so popular in some circles.
[17:12:26] <|smlckz|> pikapika: also automated theorem provers / proof assistants..
[17:12:31] *** Quits: Valware (~val@2001:41d0:800:2e90:2304:86cf:d60c:1) (Changing host)
[17:12:31] *** Joins: Valware (~val@Valeyard/Developer/Valware)
[17:12:37] <pikapika> |smlckz|, yes those can be added too
[17:12:59] *** Joins: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[17:13:02] <female_student_4> austincheney On a small scale, can see the hostility bit to the user especially at the input stage. So, like how the user wants to input the data. I could definitely see someone asking them to write something in a specified way as opposed to adding modifying code for a user's relevant inputs
[17:13:24] <pikapika> female_student_4, actually clear, "strongly typed" input is always a positive
[17:13:40] <bjs> tell that to Excel :)
[17:14:08] <female_student_4> pikapika no I mean like, let's say theres a certain format for a data input but the program says to alter it in some matter when it doesn't really line up with the actual thing
[17:14:08] <bjs> strongly typed is positive for programmer users,  but it's not always the obvious/best API
[17:14:13] <OverCoder> I still don't know how to take a break
[17:14:13] <OverCoder> help
[17:14:17] <OverCoder> I need a fun front-end idea
[17:14:35] <pikapika> female_student_4, I don't understand
[17:14:42] *** Quits: trevors (~trevors@79.120.223.86) (Ping timeout: 255 seconds)
[17:14:53] <pikapika> OverCoder, write a traditional desktop like windowing system for a browser
[17:15:10] <OverCoder> that is possibly too much to ask for in a 30 minutes
[17:15:12] <OverCoder> but I'll try
[17:15:17] <|smlckz|> OverCoder: simple analog clock
[17:15:26] <pikapika> Analog cock might be too boring
[17:15:29] <OverCoder> |smlckz|, nah this one is boring
[17:15:32] <OverCoder> and easy
[17:15:48] <OverCoder> pikapika, uhhhhhhhhhhhhhhhhhhhh
[17:15:58] *** Quits: |7| (~seachdamh@user/seachdamh) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[17:16:10] <bjs> pikapika: strongly typed means you give the users error if they give you the wrong "type",  which can be a good thing but it can be a bad thing and really frustrate users
[17:16:19] <|smlckz|> OverCoder: how about: Quantum Tic Tac Toe?
[17:16:31] <austincheney> many developers seem to completely lose focus of what software is.  software is just an automation tool that either builds a product or solves some immediate problem and nothing more.  software is not the product.
[17:16:34] <OverCoder> what is quantim tic tac toe even
[17:16:44] <pikapika> bjs, users will be far more frustrated if subtle differences in input lead to errors or the program deciding a different ocurse than they intended
[17:16:57] <female_student_4> pikapika so, I had to input some data in this form a while back. And their user form would only accept the email if the first letter was upper case. But my email does not begin with a first upper case letter. So, it kept rejecting my email. They could have just used some procedure to either alter the first letter of my email to upper case or just
[17:16:57] <female_student_4> simply use lower- case. Ultimately, I couldn't use their automated form. Also, it didn't specify that upper case letter error, that was something I figured out as an end-user
[17:17:15] <bjs> pikapika: it's really unclear,  take something like Excel which tries really hard to guess and interpret what the user inputs and tries very hard to not give type errors
[17:17:18] <female_student_4> The error was just "Email not found"
[17:17:28] <|smlckz|> OverCoder: https://en.wikipedia.org/wiki/Quantum_tic-tac-toe
[17:17:28] <pikapika> bjs, exactly
[17:17:41] <bjs> pikapika: because if a user types "1" into a cell, then "2" into the other and adds them it'd be *more* annoying to the user to get an error, even though really they're both text
[17:17:41] *** Quits: w0ng (~w0ng@103.1.212.140) (Quit: w0ng)
[17:17:46] <pikapika> Getting normal text get interpreted as a number or a date is annoying
[17:17:54] *** Joins: trevors (~trevors@79.120.223.86)
[17:18:17] <pikapika> female_student_4, thats just a sign of deeper problems if it expects the email's first letter to be uppercase
[17:18:34] <female_student_4> yeah, to me that was some form of hostility to the user
[17:18:53] <female_student_4> pikapika it didn't tell me that though, I just figured it out
[17:19:04] *** Joins: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net)
[17:19:26] <biberao> biberu: doppleganger
[17:19:32] *** Joins: w0ng (~w0ng@103.1.212.140)
[17:19:45] *** Joins: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net)
[17:20:03] <bjs> pikapika: well maybe, but it's not like the Excel devs didn't consider that. It's a carefully considered design and made to be the least hostile/least annoying to the user
[17:20:57] <female_student_4> austincheney The types of automation tools I've built were utter trash when I didn't know OO
[17:22:02] <Arahael> pikapika: A lot of users don't really want things to be precise, they really want the computer to 'figure it out', and if the computer gets it slightly wrong, they'll prefer to fiddle with it until it 'works'.
[17:22:16] <biberu> biberao: doppleganger
[17:22:25] <biberao> :\
[17:22:31] <|smlckz|> lol
[17:23:19] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) ()
[17:23:30] <|smlckz|> doppelgänger
[17:23:35] <pikapika> bjs, I am saying the weakly typing is what causes a lot of annoyance
[17:23:43] <biberao> |smlckz|: ya you're right
[17:23:44] <austincheney> female_student_4, here is the strategy that works for me:  1) start with the end in mind, known your endstate.  2) build the components in isolation.  3) put it together internally enough to feature test  4) put it together for others to test.
[17:23:51] <biberao> but me and biberu are a specific kind of breed
[17:23:52] <austincheney> always save composition for the end
[17:24:07] <bjs> pikapika: yes I know you're saying that,  but if it were just always true then carefully designed software like Excel would be strong not weak
[17:24:47] <bjs> but it's not, it's carefully designed, it's thought out and there was lots of testing and user experiments and collecting data to produce something that was the least worst option and it ended up weakly typed
[17:24:48] <pikapika> I am saying I disagree that excel is actually that user friendly. People have just gotten used to its ways.
[17:25:13] <Arahael> pikapika: Not actually true, that ignores all the history of spreadsheet software.
[17:25:20] <pikapika> The main thing of excel isn't the weak typing, rather the fact that its easily available as part of the office package and most importantly that it combines a data presnetation and a programming into a single file
[17:25:30] *** Quits: dunkeln (~dunkeln@188.70.26.84) (Ping timeout: 265 seconds)
[17:25:36] <female_student_4> austincheney are you a software developer?
[17:25:46] * Arahael remembers Lotus 1-2-3.
[17:25:50] *** Joins: contagious_meow (~salitos@197.156.190.133)
[17:25:51] <bjs> pikapika: Okay but that position implies that you know the truth and all the developers, and engineers, and researchers and users and managers and decades of work that went into it all got the answer consistently wrong
[17:25:56] <austincheney> female_student_4, i am
[17:27:12] <pikapika> bjs, excel does in fact provide a way to make the type of a cell explicit
[17:27:30] <bjs> pikapika: it doesn't provide a way to do strong typing
[17:27:36] <bjs> only formatting
[17:27:42] <pikapika> bjs, and I will say yes, I am not afraid to say when the result of decades of work can still be suboptimal
[17:27:42] <female_student_4> austincheney for how long?
[17:28:32] <pikapika> The important thing about excel is it provides a mature programming language integrated into the software
[17:28:36] <pikapika> Thats the main benefit
[17:28:40] <bjs> pikapika: but it's not suboptimal, that's the point I'm making, it's a carefully considered decision specific to that domain to make it easier for the users of that particular piece of software.  To just say that "strong typing is always the best" is completely ignoring all the nuance and complexity of both software , and humans.
[17:28:47] <pikapika> People can tolerate a lot for this benefit
[17:29:00] *** Quits: hexfive (~eric@50.35.83.177) (Quit: WeeChat 3.0)
[17:29:06] <pikapika> You are ignoring my personal human experiences bjs
[17:29:21] <Arahael> Heh.
[17:29:22] *** Quits: yamz (~salitos@197.156.190.166) (Ping timeout: 265 seconds)
[17:29:23] <bjs> pikapika: I'm not ignoring it, I'm saying that there's more than just you :)
[17:29:56] <austincheney> female_student_4, before I say I need some suggestions of websites people woule like to see automated using a remote control application
[17:30:24] <pikapika> bjs, I agree a weak typed representation can be useful sometimes
[17:30:42] <pikapika> for example its quite nice being able to parse streams of text with the pipes of shell commands
[17:31:26] *** Joins: Blankspace (~abcd@user/blankspace)
[17:31:43] <bjs> Yes it's not that one is always better than the other, it's that there are trade-offs and different domains (and even individual users and programs in that domain) will want things differently
[17:31:45] <female_student_4> austincheney websitesthat people would like to see automated mhmm
[17:32:04] <bjs> I personally prefer stronger types, and for weaker typed things I wish there were get-outs to say "no really, I want to be careful here now"
[17:32:49] <female_student_4> austincheney Probably your daily shop, so people more or less pick the same groceries every week or so. Could just have some generator which selects the relevant ones and puts them in the Basket. Reduces 30 minutes to 2 and people can make minor adjustments if they want to
[17:33:09] <female_student_4> Sort of like the "Order again?" functionality in deliveroo
[17:33:31] <austincheney> female_student_4, that is a good idea.  I will look at the shipt website
[17:35:21] <female_student_4> austincheney yeah I thought of it a while ago when doing my shopping
[17:35:30] <female_student_4> I thought how easily that could be automated
[17:36:02] <austincheney> i would have to log in.  Log ins are bad for a public demo
[17:37:21] *** Quits: Teckla (~Teckla@user/teckla) (Quit: leaving)
[17:37:42] <female_student_4> austincheney why?
[17:39:38] <austincheney> i am building demos for this browser automation application.  the demos would be shipped with the application and contains user/password as plaintext in a data structure of test automation steps
[17:40:45] <female_student_4> Yeah that is difficult then
[17:41:05] <biberu> austincheney: wouldn't you want to run those demos against services under your control too, or even offline?
[17:41:54] <female_student_4> austincheney https://www.sainsburys.co.uk/gol-ui/SearchDisplayView?filters[keyword]=beer&&langId=44&storeId=10151&searchType=2&searchTerm=beer
[17:41:58] <austincheney> biberu, yes, those would be internet test files
[17:41:59] <female_student_4> You don't have to log in here
[17:42:26] <female_student_4> https://www.tesco.com/groceries/en-GB/search?query=beer&icid=tescohp_sws-1_m-ft_in-beer_ab-226-b_out-beer
[17:42:27] <female_student_4> or here
[17:43:01] <austincheney> awesome
[17:43:01] *** Quits: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net) (Ping timeout: 246 seconds)
[17:43:22] <female_student_4> https://www.waitrose.com/ecom/shop/search?&searchTerm=spaghetti
[17:43:29] <female_student_4> A lot of them you don't, its just viewing
[17:43:32] *** Joins: xsperry (~as@user/xsperry)
[17:43:49] <female_student_4> Difficult at the basket stage though so...
[17:43:54] <female_student_4> That would require a log in
[17:43:54] <austincheney> female_student_4, then to answer your question I have been programming fulltime for 13 years and I was writing html/xml/css for 10 years before that
[17:44:36] *** Joins: nekodesu (~nekonIsL@user/nekobit)
[17:45:43] <Arahael> female_student_4: I disagree that baskets require a login.
[17:45:56] <female_student_4> Arahael I just said that
[17:46:10] *** Quits: scabby (~scabby@user/scabootssca) (Ping timeout: 258 seconds)
[17:46:13] <Arahael> female_student_4: Ah, I misinterpretd, then - no worries.
[17:46:20] *** Quits: scabby_ (~scabby@user/scabootssca) (Ping timeout: 252 seconds)
[17:46:31] <female_student_4> yeah, thinking about it, a lot of these sites are protected by log-ins
[17:46:46] <Arahael> female_student_4: Having a login has other benefits (for the vendor).
[17:46:57] <Arahael> Makes it much easier to track, for one thing.
[17:47:12] <female_student_4> austincheney very long time, need to think of a better idea
[17:47:14] <Arahael> And for another - makes it much easier to add value-added convenience features.
[17:47:50] <female_student_4> Could have some functionality
[17:47:53] <female_student_4> It pulls in the list
[17:47:56] <female_student_4> Once you log in
[17:48:01] <female_student_4> Adds everything automatically to basket
[17:48:15] <female_student_4> I wonder if you could do that with the limited functionality of the loss of the basket stage
[17:48:19] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:48:37] <female_student_4> As in, it just becomes the software will just initiate a search and keep pressing add once the user logs in
[17:48:38] *** Joins: scabby (~scabby@user/scabootssca)
[17:48:50] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[17:49:06] *** Joins: scabby_ (~scabby@user/scabootssca)
[17:49:13] <Arahael> female_student_4: Well, as an example, the basket could be implemented using cookies.
[17:49:24] <Arahael> female_student_4: Even just a session cookie.
[17:49:39] <female_student_4> So, like on the website once you click add , it just directs you to the log-in page
[17:49:47] <female_student_4> But you don't need to log in to search the items
[17:49:55] <female_student_4> So you just have some initial search list
[17:49:55] *** Joins: BlueCannonBall (~optimal@pool-108-49-218-22.bstnma.fios.verizon.net)
[17:49:55] *** Quits: BlueCannonBall (~optimal@pool-108-49-218-22.bstnma.fios.verizon.net) (Changing host)
[17:49:55] *** Joins: BlueCannonBall (~optimal@user/bluecannonball)
[17:49:59] <female_student_4> Accumulates the items
[17:50:02] <female_student_4> Then once that's done
[17:50:05] <OverCoder> https://irc.overcoder.dev/uploads/fa6a3a6bcf14c463/Peek%202021-07-21%2016-19.gif
[17:50:05] <female_student_4> Ask the user to log in
[17:50:07] <OverCoder> pikapika, thanks
[17:50:12] <OverCoder> it was a nice experiment
[17:50:15] * OverCoder goes back to studying
[17:50:17] <female_student_4> and then it just goes around adding the items to the basket once you've logged in
[17:50:36] <OverCoder> why does the gif not move
[17:50:36] <OverCoder> wat
[17:51:13] <female_student_4> I need to go now I reckon, I've procrastinated too much
[17:51:20] <OverCoder> https://irc.overcoder.dev/uploads/8c604a680d01bdf2/Peek%202021-07-21%2016-21.mp4
[17:51:25] <OverCoder> pikapika
[17:51:33] <female_student_4> was nice chatting with you all
[17:51:36] *** Quits: jazzy (~jaziz@2600:380:c07e:8a82:64d5:2b35:3886:56b2) (Ping timeout: 255 seconds)
[17:51:37] <female_student_4> austincheney hope it all works out
[17:53:34] <pikapika> OverCoder, what
[17:53:36] <pikapika> I forgot the context
[17:53:48] <OverCoder> I said I wanted something cool to do quickly in CSS
[17:53:51] <OverCoder> because I am taking a break from maths
[17:53:54] <pikapika> Oh yeah
[17:53:55] <austincheney> female_student_4, thanks
[17:53:55] <OverCoder> and you said I make a windowing system
[17:53:57] <pikapika> How was the experiment?
[17:53:58] <OverCoder> and that's what I got
[17:53:58] *** Joins: chomwitt (~chomwitt@ppp-94-67-220-135.home.otenet.gr)
[17:54:02] <OverCoder> I mean it looks like it is a windowing system
[17:54:06] <OverCoder> but not that it actually works lol
[17:54:08] <OverCoder> I mean it just drags
[17:54:09] <pikapika> I'll check in a bit, please don't delete
[17:54:21] <OverCoder> yeah not deleting, could send the pen itself too with the code if you wish
[17:54:26] <OverCoder> It was really a nice experiment
[17:54:41] *** Quits: female_student_4 (~female_st@2a01:388:243:150::1:28) (Quit: Client closed)
[17:56:06] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Ping timeout: 255 seconds)
[17:57:21] *** Joins: rsx (~dummy@ppp-188-174-131-253.dynamic.mnet-online.de)
[17:58:09] *** Joins: dunkeln (~dunkeln@188.70.26.84)
[18:07:39] *** gggp__ is now known as gggp
[18:08:10] *** Quits: Blankspace (~abcd@user/blankspace) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[18:09:18] *** Quits: audgirka (~audgirka@2402:e280:3e16:e48:d5ba:7034:2ac9:4275) (Quit: Leaving)
[18:14:29] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[18:19:34] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[18:22:41] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[18:22:56] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[18:24:55] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4) (Ping timeout: 250 seconds)
[18:25:24] *** Joins: speckz (~speckz@2600:1700:ce0:bf00:e140:43e0:6c49:9b58)
[18:25:46] *** Joins: yamz (~salitos@197.156.190.242)
[18:25:53] *** Quits: contagious_meow (~salitos@197.156.190.133) (Read error: Connection reset by peer)
[18:27:14] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[18:27:24] *** Quits: a-a (uid506782@id-506782.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[18:28:32] *** Joins: jaysicks (~jaysicks@87-97-5-248.pool.digikabel.hu)
[18:29:32] *** Quits: nm (~igloo@117.121.61.41) (Remote host closed the connection)
[18:29:36] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 252 seconds)
[18:32:33] *** Quits: newtoliberachat (~xyz@49.206.29.212) (Ping timeout: 268 seconds)
[18:34:38] *** Joins: Crescendo (~Crescendo@user/crescendo)
[18:35:33] *** Quits: w0ng (~w0ng@103.1.212.140) (Quit: w0ng)
[18:36:03] *** Joins: w0ng (~w0ng@103.1.212.140)
[18:36:50] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[18:36:55] *** Joins: gggp_ (~gggp@111.63.14.119)
[18:37:16] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[18:37:26] *** Joins: Crescendo (~Crescendo@user/crescendo)
[18:37:34] <yo> OverCoder: can you share the pen?
[18:38:12] <OverCoder> yo, https://codepen.io/OverCoder/pen/mdmMNZp
[18:39:05] <OverCoder> just improved it a bit, refresh the pen
[18:40:04] *** Quits: gggp (~gggp@123.113.178.180) (Ping timeout: 246 seconds)
[18:40:28] *** Joins: Teckla (~Teckla@user/teckla)
[18:41:28] <yo> got it, pretty simple and nice
[18:43:04] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[18:43:57] *** Joins: Rashad (~textual@2a01:9700:1456:c100:7836:c86f:3065:ae4a)
[18:44:25] *** Quits: jaysicks (~jaysicks@87-97-5-248.pool.digikabel.hu) (Ping timeout: 250 seconds)
[18:44:46] *** Quits: speckz (~speckz@2600:1700:ce0:bf00:e140:43e0:6c49:9b58) (Quit: Textual IRC Client: www.textualapp.com)
[18:46:27] *** Joins: jaysicks (~jaysicks@87-97-5-248.pool.digikabel.hu)
[18:48:08] *** Joins: gitgood (~gitgood@80-44-9-45.dynamic.dsl.as9105.com)
[18:50:09] *** Quits: CalimeroTeknik (~calimero@user/calimeroteknik) (Remote host closed the connection)
[18:52:17] *** Quits: yamz (~salitos@197.156.190.242) (Read error: Connection reset by peer)
[18:52:27] *** Quits: bxtn (~bxtn@2600:1700:38a0:3d40::49) (Read error: Connection reset by peer)
[18:52:35] *** Joins: bxtn (~bxtn@172.13.160.191)
[18:53:03] *** Joins: salitos (~salitos@197.156.190.186)
[18:53:52] *** Joins: gggp__ (~gggp@123.113.187.192)
[18:56:56] *** Quits: gggp_ (~gggp@111.63.14.119) (Ping timeout: 268 seconds)
[18:57:46] *** Quits: salitos (~salitos@197.156.190.186) (Ping timeout: 240 seconds)
[18:58:05] *** Joins: CalimeroTeknik (~calimero@user/calimeroteknik)
[18:59:44] *** Quits: snake (~snake@user/snake) (Ping timeout: 255 seconds)
[19:01:23] *** Quits: Rashad (~textual@2a01:9700:1456:c100:7836:c86f:3065:ae4a) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:01:48] *** Quits: jaysicks (~jaysicks@87-97-5-248.pool.digikabel.hu) (Ping timeout: 255 seconds)
[19:07:45] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[19:11:35] *** Joins: arcatech (~arcatech@user/arcatech)
[19:12:14] *** Parts: w0ng (~w0ng@103.1.212.140) ()
[19:13:45] *** Joins: jaysicks (~jaysicks@87-97-5-248.pool.digikabel.hu)
[19:16:58] <TheRedRipper> hello again :P
[19:18:10] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[19:18:15] <GeDaMo> Hi TheRedRipper :)
[19:18:32] <TheRedRipper> hey GeDaMo! how are ya?
[19:18:46] <GeDaMo> OK, you?
[19:18:54] <TheRedRipper> pretty good
[19:19:02] <TheRedRipper> just got off work
[19:19:18] <TheRedRipper> have some programming homework to do before my next lecture
[19:19:30] <GeDaMo> What are you writing?
[19:19:39] <TheRedRipper> craps game in java
[19:19:52] *** Quits: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[19:19:56] <TheRedRipper> pretty shitty code, i think i wrote it at like 3am, so im rewriting it :P
[19:23:45] <user51> man, awk isn't really the language for this
[19:24:06] <user51> in fact, it feels like i'd have more trouble but less headache in c at this point
[19:24:15] <TheRedRipper> for what?
[19:24:36] <user51> reading and transforming strings that aren't really well tabulated
[19:25:19] *** Joins: dan1001 (~dan01@2a02:2f0f:3017:4e00:f883:ac1e:f755:aea1)
[19:25:20] <user51> since unlike c you can't (easily) access a character
[19:25:27] *** gggp__ is now known as gggp
[19:25:49] *** Quits: dan1001 (~dan01@2a02:2f0f:3017:4e00:f883:ac1e:f755:aea1) (Client Quit)
[19:25:55] <user51> say ; is a delimiter, ABC;XYZ breaks it, or you can do a dance with calls to substring, matching function, whatever
[19:26:27] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[19:26:44] *** Quits: mobidrop (~mobidrop@217-62-121-57.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[19:27:23] <user51> also, while you can construct something similar in principle to a struct, there's no multidimensional arrays, so your options are either using lots of arrays and hope your indices match between them OR split() strings and pretend that's adequete
[19:27:32] <user51> lessons learned is that negative area is super important
[19:28:05] *** Quits: nekobit (~nekobit@user/nekobit) (Remote host closed the connection)
[19:28:15] <user51>  wait, does anyone know what i mean by 'negative area'?
[19:31:43] *** Quits: launchd (examknow@bitbot/launchd) (Quit: updates!)
[19:33:25] *** Joins: gggp_ (~gggp@111.63.14.119)
[19:34:11] *** Joins: kawics11 (~ta@catv-89-133-12-156.catv.broadband.hu)
[19:35:13] *** Joins: launchd (examknow@bitbot/launchd)
[19:35:23] *** Joins: quippy (~quippy@47-220-146-143.gtwncmkt04.res.dyn.suddenlink.net)
[19:36:42] *** Quits: gggp (~gggp@123.113.187.192) (Ping timeout: 252 seconds)
[19:36:44] *** Joins: kns (~kns@45.86.203.160)
[19:37:27] *** Quits: launchd (examknow@bitbot/launchd) (Client Quit)
[19:37:55] *** Joins: launchd (examknow@bitbot/launchd)
[19:39:54] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4) (Ping timeout: 240 seconds)
[19:40:05] *** Quits: Guest8836 (internot@2607:5300:60:21b::1) (Changing host)
[19:40:05] *** Joins: Guest8836 (internot@user/scarecr0w)
[19:40:13] *** Guest8836 is now known as Scarecr0w
[19:40:24] *** Quits: gry (~quassel@botters/gry) (Ping timeout: 258 seconds)
[19:41:41] *** Quits: astronaut (~segfault@103.160.128.17) (Read error: Connection reset by peer)
[19:42:03] *** Quits: trevors (~trevors@79.120.223.86) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:42:39] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[19:43:00] *** Joins: trevors (~trevors@79.120.223.86)
[19:44:05] *** Quits: nekodesu (~nekonIsL@user/nekobit) (Ping timeout: 268 seconds)
[19:44:17] *** Joins: nekodesu (~nekonIsL@user/nekobit)
[19:45:06] *** Quits: The_Blode_ (~Blode@92.40.168.52.threembb.co.uk) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[19:45:07] *** Quits: xff0x_ (~xff0x@2001:1a81:530d:8900:cddd:a545:4e9e:a55d) (Ping timeout: 245 seconds)
[19:46:55] *** Joins: xff0x_ (~xff0x@185.65.135.235)
[19:46:57] *** Joins: gry (~quassel@botters/gry)
[19:47:06] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[19:47:26] *** Joins: gggp__ (~gggp@60.10.23.160)
[19:48:10] *** Quits: inky (~inky@5.77.170.37) (Quit: Leaving.)
[19:50:14] *** Joins: inky (~inky@37.252.67.70)
[19:50:48] *** Quits: kns (~kns@45.86.203.160) (Quit: Leaving)
[19:50:48] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4) (Ping timeout: 256 seconds)
[19:51:02] *** Quits: inky_ (~inky@5.77.170.37) (Ping timeout: 255 seconds)
[19:51:06] *** Joins: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net)
[19:51:12] *** Quits: gggp_ (~gggp@111.63.14.119) (Ping timeout: 268 seconds)
[19:52:16] *** Joins: gggp_ (~gggp@123.118.15.132)
[19:52:40] *** Quits: pandakekok9 (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[19:53:26] *** Quits: scabby (~scabby@user/scabootssca) (Remote host closed the connection)
[19:53:50] *** Joins: scabby (~scabby@user/scabootssca)
[19:53:53] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:55:15] *** Quits: gggp__ (~gggp@60.10.23.160) (Ping timeout: 252 seconds)
[19:56:07] *** Quits: Thedarkb-Desktop (~beno@2001:bb6:b404:188f:bc41:46f8:4af6:5784) (Read error: Connection reset by peer)
[19:56:23] *** Joins: Thedarkb-Desktop (~beno@2001:bb6:b404:188f:bc41:46f8:4af6:5784)
[19:56:43] *** Quits: inky (~inky@37.252.67.70) (Ping timeout: 246 seconds)
[19:57:46] *** Quits: soulisson (~soulisson@41.250.98.102) (Remote host closed the connection)
[19:57:59] *** Joins: wovixo (~wovixo@128.104.205.49)
[19:58:23] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[19:59:30] *** Joins: CodeSpelunker (~CodeSpelu@user/codespelunker)
[20:00:25] *** Joins: Guest7194 (~Guest71@103.5.134.18)
[20:00:48] *** Quits: andrewSC (~andrewSC@95.179.141.168) (Quit: WeeChat 3.2)
[20:01:29] *** Joins: anovick__ (~anovick@igld-83-130-153-93.inter.net.il)
[20:01:34] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:f85d:495b:7ffd:586) (Read error: Connection reset by peer)
[20:01:41] *** Quits: xff0x_ (~xff0x@185.65.135.235) (Ping timeout: 268 seconds)
[20:02:28] *** Quits: Guest7194 (~Guest71@103.5.134.18) (Client Quit)
[20:02:42] *** Joins: Guest2417 (~Guest2417@103.5.134.18)
[20:02:54] *** Joins: rtjure (~rtjure@bras-79-132-1-103.comnet.bg)
[20:03:18] *** Joins: xff0x_ (~xff0x@2001:1a81:530d:8900:cddd:a545:4e9e:a55d)
[20:03:59] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[20:05:55] *** Quits: rtjure (~rtjure@bras-79-132-1-103.comnet.bg) (Read error: Connection reset by peer)
[20:06:15] *** Joins: brickfat (~brickfat@user/brickfat)
[20:06:33] *** Joins: rtjure (~rtjure@bras-79-132-10-94.comnet.bg)
[20:06:42] <|smlckz|> now move on to lua
[20:06:49] <|smlckz|> i guess
[20:07:06] <|smlckz|> user51
[20:07:59] <user51> why lua?
[20:08:56] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[20:10:31] <|smlckz|> similiar in smallness/simplicity/ligthweightness to awk; good as an upgrade from awk; before you reach Perl, Python, etc. for scripting, imo
[20:11:09] *** Joins: tradar (~tradar@user/tradar)
[20:12:03] <user51> hm. i'll might try. thansk for the tip!
[20:12:04] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[20:12:27] <user51> i'm feeling the imposter syndrome creeping up, so maybe tomorrow :D
[20:12:39] *** Joins: Quacc (~youbuntoe@user/quacc)
[20:13:04] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:6cf3:aa58:e4f9:2fac) (Quit: Textual IRC Client: www.textualapp.com)
[20:13:27] *** Quits: Guest2417 (~Guest2417@103.5.134.18) (Quit: Client closed)
[20:14:24] <|smlckz|> what exactly were you trying to do in awk?
[20:15:33] *** Joins: pulse (~pulse@user/pulse)
[20:15:44] * oldlaptop ought to look into lua sometime
[20:16:35] *** Joins: bencevans (~bencevans@static.153.97.4.46.clients.your-server.de)
[20:17:16] <oldlaptop> |smlckz|: can you by chance compare lua to tcl? (which is roughly similar in terms of its intended use; core tcl is AIUI bigger, but that's why there's jim)
[20:18:28] <Thedarkb-Desktop> You can actually embed Awk in programs with Libfawk.
[20:18:34] <Thedarkb-Desktop> Only a subset though.
[20:18:37] *** Joins: jraskar (~Kanth@201.182.165.33)
[20:18:40] *** Joins: Andalu30 (~andalu30@85.137.21.37.dyn.user.ono.com)
[20:18:59] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:19:04] <user51> |smlckz|: http://sprunge.us/MMPSuv
[20:19:20] <user51> take that yacc-like input, output a parser
[20:19:46] <|smlckz|> the syntax of tcl is obviously lighter than of tcl and small tcl-like languages can be used in places of lua or maybe forth?
[20:20:12] <|smlckz|> s/than of tcl/than of lua/
[20:21:03] *** Joins: Null_A (~null_a@2601:645:8700:2290:9d5c:9f84:452e:3ad)
[20:21:12] <|smlckz|> oldlaptop: for example: https://zserge.com/posts/tcl-interpreter/
[20:21:45] <oldlaptop> |smlckz|: yes, it would be hard to get much less syntax than tcl
[20:23:34] <|smlckz|> oldlaptop: agree. tcl syntax can be compared to that of lisps...
[20:24:02] <|smlckz|> but tcl's much more cleaner imo
[20:24:14] <oldlaptop> a really simple/naive implementation is "definitely slow" in the way that author describes, though. (core tcl does various tricks to get in roughly the same speed class as other scripting languages, which can generally be thought of as opportunistically storing certain strings as integers, floats, lists etc. based on how they're used)
[20:24:28] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[20:24:28] *** Joins: danielrparks (~quassel@2600:1700:3f7b:20f:ea46:129d:e4ec:c9df)
[20:24:31] *** Joins: Guest2417 (~Guest2417@103.5.134.18)
[20:24:36] <user51> how slow is a scripting language, anyway
[20:24:57] <oldlaptop> An excellent question to which there isn't really a coherent answer :P
[20:24:58] <Guest2417> Depends on the language, right? :-)
[20:25:12] *** Quits: trevors (~trevors@79.120.223.86) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:25:15] <oldlaptop> Guest2417: and, very strongly, on how it's used
[20:25:25] <|smlckz|> user51: output the parser in which language?
[20:25:27] <user51> imo the real money more in human time than language
[20:25:51] <user51> |smlckz|: c, i already have an idea how the output should look like
[20:26:35] <user51> just that you need better data structure than just an associative array unless you do a lot of splits(), auxillary arrays, etc
[20:26:48] *** Joins: trevors (~trevors@79.120.223.86)
[20:26:48] *** Quits: Quacc (~youbuntoe@user/quacc) (Quit: WeeChat 3.2)
[20:27:03] <user51> originally i had something like grammar[nt, nrule, nsym] but eventually, that gets quite.. meh
[20:27:31] <|smlckz|> here's a shitty and buggy implementation of this specific parser that i had written a while ago: https://paste.rs/hog
[20:27:44] *** Quits: gitgood (~gitgood@80-44-9-45.dynamic.dsl.as9105.com) (Remote host closed the connection)
[20:27:57] <oldlaptop> user51: that would definitely militate against tcl, I suppose (where the usual "better data structure" is either some nested-list thing or implemented by some library/extension)
[20:28:01] <user51> that's why i said 'negative area' - a seperator that doesn't appear as part of the thing, but is important nonetheless
[20:28:05] *** Joins: gitgood (~gitgood@80-44-9-45.dynamic.dsl.as9105.com)
[20:28:14] *** Quits: gitgood (~gitgood@80-44-9-45.dynamic.dsl.as9105.com) (Client Quit)
[20:28:20] *** Joins: hposca (~hposca@node-1w7jr9phoke2u784enbks8vht.ipv6.telus.net)
[20:28:23] *** Quits: dunkeln (~dunkeln@188.70.26.84) (Ping timeout: 255 seconds)
[20:28:34] <|smlckz|> user51: i hope you'll like lua's tables
[20:28:35] <user51> i'm not sure what the right name for that is
[20:28:41] *** Quits: kawics11 (~ta@catv-89-133-12-156.catv.broadband.hu) (Ping timeout: 265 seconds)
[20:28:42] *** Joins: trace987 (~trace@ip5b429888.dynamic.kabel-deutschland.de)
[20:28:55] <oldlaptop> one trick is to pull another language in and use sqlite :memory: databases as your "better data structure", though
[20:29:21] <|smlckz|> hahah
[20:29:51] <oldlaptop> |smlckz|: as the guy said, "show me your flowcharts and I will be mystified, show me your tables and I won't need your flowcharts"
[20:30:01] <oldlaptop> it works better than it sounds
[20:30:19] *** Quits: eldenring0 (uid506233@id-506233.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[20:30:32] <user51> |smlckz|: 11 years old, but my first exposure to lua: https://prog21.dadgum.com/67.html?0
[20:30:35] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Remote host closed the connection)
[20:31:38] <Guest2417> You're 11? XD
[20:31:42] <Guest2417> Just kidding!
[20:31:49] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:32:43] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[20:33:14] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:33:20] <oldlaptop> user51: in fairness to lua, 'associative arrays', indexing, nul/null values, and the like are a bit more universal than things like laziness
[20:33:44] <Guest2417> True
[20:33:44] <|smlckz|> the article was published in: April 3, 2010 :: 11 years ago...
[20:34:26] *** Joins: gitgood (~gitgood@80-44-9-45.dynamic.dsl.as9105.com)
[20:34:27] <oldlaptop> i.e. there are way more people who are sufficiently "immersed" to understand the lua document
[20:34:57] <oldlaptop> (to the point where such people are a perfectly reasonable audience, especially for something like lua that's often used to extend programs written in C or something)
[20:35:59] *** Joins: SerialSmile (~SerialSmi@95-25-234-70.broadband.corbina.ru)
[20:37:47] <oldlaptop> user51: apropos of your link (and the post on J you link at the bottom), but spinning further off the subject, maybe you'd find https://wiki.tcl-lang.org/page/Tcl+Tutor interesting
[20:38:55] *** Joins: moha (uid506645@id-506645.brockwell.irccloud.com)
[20:42:28] *** Joins: kawics11 (~ta@catv-89-133-12-156.catv.broadband.hu)
[20:42:42] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Read error: Connection reset by peer)
[20:44:52] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[20:45:33] <pikapika> oldlaptop, hi
[20:46:22] *** Joins: dunkeln (~dunkeln@188.70.26.84)
[20:46:40] *** Joins: soapsudsxx (~soapsudsx@209.221.40.138)
[20:46:54] *** Quits: nekodesu (~nekonIsL@user/nekobit) (Ping timeout: 256 seconds)
[20:47:05] *** Joins: nekodesu (~nekonIsL@user/nekobit)
[20:48:14] *** Joins: xkuru (~xkuru@user/xkuru)
[20:48:56] *** Quits: kawics11 (~ta@catv-89-133-12-156.catv.broadband.hu) (Ping timeout: 252 seconds)
[20:49:20] *** Joins: snake (~snake@user/snake)
[20:49:42] *** Joins: kawics11 (~ta@catv-89-133-12-156.catv.broadband.hu)
[20:49:44] <user51> oldlaptop: sure, at my level a lot of that stuff makes sense
[20:50:24] <oldlaptop> user51: I suppose what I'm getting at is that there's a choice-of-audience thing going on here
[20:51:02] *** Quits: tolot (~tolot@dynamic-093-133-086-049.93.133.pool.telefonica.de) (Quit: Leaving)
[20:51:19] *** Quits: Thedarkb-Desktop (~beno@2001:bb6:b404:188f:bc41:46f8:4af6:5784) (Ping timeout: 246 seconds)
[20:51:29] <user51> yeah i understand what you mean
[20:51:40] <oldlaptop> what's appropriate to introduce a language to an audience of programmers is different from what's appropriate to introduce a language (and programming) to an audience of not-yet programmers
[20:51:41] *** Joins: Thedarkb-Desktop (~beno@2001:bb6:b404:188f:bc41:46f8:4af6:5784)
[20:53:20] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[20:53:46] <oldlaptop> and that's different in kind from what happens with relatively insular communities like that surrounding haskell that have their own jargon, I think
[20:54:30] <oldlaptop> currying and laziness are unfamiliar to a lot of people who are otherwise pretty well-immersed in programming jargon
[20:55:09] *** Quits: rsx (~dummy@ppp-188-174-131-253.dynamic.mnet-online.de) (Quit: rsx)
[20:56:25] *** Joins: blackserver (~AdminUser@drmons0552w-159-2-42-16.dhcp-dynamic.fibreop.ns.bellaliant.net)
[21:01:38] *** Joins: andrewSC (~andrewSC@95.179.141.168)
[21:02:23] *** Quits: freakazoid333 (~freakazoi@72.168.176.61) (Read error: Connection reset by peer)
[21:03:02] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 255 seconds)
[21:03:35] *** Quits: chomwitt (~chomwitt@ppp-94-67-220-135.home.otenet.gr) (Ping timeout: 258 seconds)
[21:05:10] *** Joins: m3wzx5 (~m3wzx5@user/m3wzx5)
[21:06:49] *** Quits: Guest2417 (~Guest2417@103.5.134.18) (Quit: Client closed)
[21:08:55] *** Joins: src (~src@user/src)
[21:13:04] *** Joins: phil294 (~phi@ip1f13cf74.dynamic.kabel-deutschland.de)
[21:13:25] *** Joins: nekobit (~nekobit@user/nekobit)
[21:14:54] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[21:15:22] *** Quits: andrewSC (~andrewSC@95.179.141.168) (Changing host)
[21:15:22] *** Joins: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC)
[21:16:03] *** Quits: novns (~novns@user/novns) (Quit: ZNC 1.8.2 - https://znc.in)
[21:16:32] *** Joins: novns (~novns@user/novns)
[21:17:30] *** Joins: inky (~inky@37.252.67.70)
[21:17:35] *** Joins: archie (~archie@host-95-245-61-170.retail.telecomitalia.it)
[21:18:03] *** Quits: phil294 (~phi@ip1f13cf74.dynamic.kabel-deutschland.de) (Quit: phil294)
[21:26:39] *** Quits: Andalu30 (~andalu30@85.137.21.37.dyn.user.ono.com) (Read error: Connection reset by peer)
[21:29:16] *** Joins: Tom (~Tom@2a01:e0a:2de:8130:6c87:9224:dba5:3b6a)
[21:29:16] *** Quits: inky (~inky@37.252.67.70) (Ping timeout: 258 seconds)
[21:30:05] *** Quits: SerialSmile (~SerialSmi@95-25-234-70.broadband.corbina.ru) (Quit: Leaving)
[21:33:14] *** Joins: nvmd (~nvmd@user/nvmd)
[21:36:20] *** Quits: trevors (~trevors@79.120.223.86) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:37:26] *** Quits: amigojapan (uid86330@id-86330.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[21:43:05] *** Quits: kawics11 (~ta@catv-89-133-12-156.catv.broadband.hu) (Ping timeout: 255 seconds)
[21:44:18] *** Quits: JuggleTux (~tux@mob-194-230-146-199.cgn.sunrise.net) (Ping timeout: 240 seconds)
[21:52:08] *** Joins: trevors (~trevors@79.120.223.86)
[21:53:18] *** Quits: shailangsa (~shailangs@host86-186-142-108.range86-186.btcentralplus.com) (Ping timeout: 268 seconds)
[21:56:02] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 252 seconds)
[21:56:51] *** Quits: segnior (segnior@user/segnior) (Ping timeout: 255 seconds)
[21:58:42] *** Joins: segnior (segnior@user/segnior)
[21:58:58] *** Joins: m3wzX5_ (~m3wzx5@user/m3wzx5)
[22:01:01] *** Joins: mrsena (~sena@user/sena)
[22:01:10] *** Quits: m3wzx5 (~m3wzx5@user/m3wzx5) (Ping timeout: 244 seconds)
[22:01:38] *** Joins: creek (~creek@user/creek)
[22:01:48] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Ping timeout: 255 seconds)
[22:02:50] *** Joins: chomwitt (~chomwitt@ppp-94-67-220-135.home.otenet.gr)
[22:02:51] *** Quits: soapsudsxx (~soapsudsx@209.221.40.138) (Remote host closed the connection)
[22:03:04] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[22:04:09] *** Quits: CodeSpelunker (~CodeSpelu@user/codespelunker) (Ping timeout: 258 seconds)
[22:04:22] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[22:04:32] *** Quits: sena (~sena@user/sena) (Ping timeout: 258 seconds)
[22:06:34] *** Joins: JuggleTux (~tux@mob-194-230-146-199.cgn.sunrise.net)
[22:07:16] *** Quits: gggp_ (~gggp@123.118.15.132) (Ping timeout: 246 seconds)
[22:07:39] *** Quits: thekingofbandit (tkob@user/thekingofbandit) (Ping timeout: 255 seconds)
[22:08:05] *** Quits: archie (~archie@host-95-245-61-170.retail.telecomitalia.it) (Quit: Client closed)
[22:08:08] *** Quits: segnior (segnior@user/segnior) (Ping timeout: 252 seconds)
[22:09:26] *** Quits: trevors (~trevors@79.120.223.86) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:09:43] *** Joins: segnior (~segnior@user/segnior)
[22:12:12] *** Quits: radu2424 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[22:12:33] *** Joins: thekingofbandit (tkob@user/thekingofbandit)
[22:13:19] *** Joins: radu24240 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[22:13:30] *** Quits: Thedarkb-Desktop (~beno@2001:bb6:b404:188f:bc41:46f8:4af6:5784) (Read error: Connection reset by peer)
[22:14:10] *** Joins: Thedarkb-Desktop (~beno@2001:bb6:b404:188f:bc41:46f8:4af6:5784)
[22:17:20] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[22:20:33] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[22:20:33] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[22:20:36] *** Quits: dunkeln (~dunkeln@188.70.26.84) (Ping timeout: 252 seconds)
[22:20:37] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Remote host closed the connection)
[22:21:06] <shan> does C++ have tail call optimisation?
[22:21:12] *** Quits: Null_A (~null_a@2601:645:8700:2290:9d5c:9f84:452e:3ad) (Remote host closed the connection)
[22:21:57] *** Joins: Null_A (~null_a@2601:645:8700:2290:9d5c:9f84:452e:3ad)
[22:23:24] *** Quits: Codaraxis__ (~Codaraxis@193.138.218.171) (Ping timeout: 255 seconds)
[22:24:13] *** Joins: Shailangsa_ (~shailangs@host86-186-196-233.range86-186.btcentralplus.com)
[22:25:06] <GeDaMo> I don't think the language requires it but some compilers may implement it
[22:25:18] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Remote host closed the connection)
[22:25:48] <shan> oh okay
[22:27:16] <pulse> s/some/all/
[22:27:25] <pulse> s/may//
[22:27:26] <pulse> :p
[22:27:42] *** Joins: Quacc (~youbuntoe@user/quacc)
[22:30:41] *** Joins: Blankspace (~androirc@user/blankspace)
[22:33:45] *** Quits: nvmd (~nvmd@user/nvmd) (Ping timeout: 255 seconds)
[22:35:28] *** Joins: nvmd (~nvmd@user/nvmd)
[22:38:55] *** Quits: Quacc (~youbuntoe@user/quacc) (Quit: WeeChat 3.2)
[22:40:10] *** Joins: ZeroDay (~ZeroDay@gateway/tor-sasl/zeroday)
[22:41:43] *** Joins: Quacc (~youbuntoe@user/quacc)
[22:42:00] *** Quits: Quacc (~youbuntoe@user/quacc) (Client Quit)
[22:43:14] *** Joins: trevors (~trevors@185.81.136.21)
[22:43:52] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[22:43:52] *** Quits: nekodesu (~nekonIsL@user/nekobit) (Ping timeout: 268 seconds)
[22:44:01] *** Joins: nekodesu (~nekonIsL@user/nekobit)
[22:46:54] *** Joins: audiocat (~audio@2603-8081-1800-00ad-791c-8967-7040-5249.res6.spectrum.com)
[22:49:02] *** Joins: Twipply (~Twipply@user/twipply)
[22:49:14] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[22:49:35] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:50:24] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 255 seconds)
[22:50:43] *** Joins: teut (~teut@182.69.77.174)
[22:51:03] *** Quits: trevors (~trevors@185.81.136.21) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:51:06] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[22:51:31] *** Joins: trevors (~trevors@185.81.136.21)
[22:52:18] <teut> in  most programming languages when  the compiler sees a function, it puts a pointer in the stack to another stack (new  stack of function instructions)
[22:52:25] <teut> is this correct?
[22:52:57] <teut> and that new stack is in heap memory
[22:53:10] <oldlaptop> Not really, no.
[22:53:28] *** Quits: trevors (~trevors@185.81.136.21) (Client Quit)
[22:53:39] <teut> but function's instruction are stored in a separate stack
[22:53:45] <teut> instructions*
[22:53:56] *** Joins: Crescendo (~Crescendo@user/crescendo)
[22:53:58] <oldlaptop> ...not really, no
[22:54:30] <teut> in most programming languages only   the declaration is read of the function
[22:54:38] <teut> known as hosting in js
[22:54:47] <teut> hoisting*
[22:55:22] *** Joins: soapsudsxx (~soapsudsx@209.221.40.138)
[22:55:41] <teut> and the instructions inside are only run when it is called in a progam
[22:55:47] <teut> program*
[22:55:57] *** Quits: Blankspace (~androirc@user/blankspace) (Read error: Connection reset by peer)
[22:56:01] <teut> so there is a stack switch
[22:56:06] <oldlaptop> "Stack" is unfortunately a word with lots of more or less unrelated meanings. You might be better off not using it while you're trying to understand this.
[22:56:59] <teut> in case of objects , a pointer is dropped onto the stack and that points to some space in heap
[22:57:37] <teut> atleast this should be right
[22:58:02] *** Quits: thebob (~thebob@user/thebob) (Ping timeout: 265 seconds)
[23:03:20] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[23:03:26] <oldlaptop> There is generally one "call stack", which is used to keep track of how functions that are currently running are called. That's an abstract concept, to a great degree, and it's called a "stack" by analogy to the fundamental data structure. This is related to, but not quite the same as, the idea of "the stack" as a region of memory broadly speaking.
[23:03:55] <oldlaptop> None of this has anything to do with where or how the machine code for a function is stored.
[23:04:04] *** Joins: quartz (~quartz@2603-8001-7700-61a4-0000-0000-0000-0acb.res6.spectrum.com)
[23:05:09] <oldlaptop> This is a good demonstration of what the "stack" data structure is: https://en.wikipedia.org/wiki/File:Lifo_stack.png
[23:05:10] <teut>   ya ya that last line I know
[23:05:29] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[23:05:31] <teut> I know data structures and algos
[23:05:36] *** Joins: Inari (~Pinkishu@p508ef194.dip0.t-ipconnect.de)
[23:06:00] *** Joins: CodeSpelunker (~CodeSpelu@user/codespelunker)
[23:06:21] <oldlaptop> When a function is called, you can think about it as "pushing" another record (it is often called a "stack frame") onto this abstract "runtime stack". (Often this involves pushing some things, often the storage associated with the function's local variables and/or parameters, onto a real stack.)
[23:06:42] <oldlaptop> When the function returns, it's popped from the "runtime stack".
[23:06:44] *** Quits: jaysicks (~jaysicks@87-97-5-248.pool.digikabel.hu) (Ping timeout: 265 seconds)
[23:06:58] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[23:07:08] <teut> I have heard of stack frame but I just thought of it as a mini-stack
[23:07:25] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[23:08:10] <teut> and if the function requires some variable from outside the stack frame what do you do?
[23:08:21] <teut> some global lets say
[23:08:28] <oldlaptop> Again, none of this has anything to do with where or how the function bodies (that is, the actual machine code) are stored. It's possible and sensible to have multiple "runtime stacks", but that implies you have multiple "threads" of execution running concurrently, and that's not what you're thinking about.
[23:08:30] <GeDaMo> Globals are not on the stack
[23:08:32] <teut> you can only see the top in a stack
[23:09:19] <teut> in a video they say something aboout the text section
[23:09:27] <teut> that it contains them
[23:09:49] <oldlaptop> This is one of those ways in which the word "stack" can be misleading here. There's usually no particular reason you can't "see" things anywhere in the actual data structure that's storing things like functions' local variables. (In fact, it's common in C to write functions whose job is to modify local variables in the function that called them.)
[23:09:53] <teut> ah right, globals in "Data"
[23:10:07] <teut> Uploaded file: https://uploads.kiwiirc.com/files/6d9d299ff878eea7031e935c8116339c/image.png
[23:10:12] <GeDaMo> "text" is the machine code
[23:11:09] <oldlaptop> The C language itself (and most related langauges) doesn't really have a concept of "the stack" or "the heap" or "the text section" or "the data section", it deals with things at a higher level of abstraction than that.
[23:11:36] *** Joins: thebob (~thebob@user/thebob)
[23:11:38] <teut> c has structs , and malloc thats it
[23:11:52] *** Joins: wwilly (~wwilly@217.140.99.251)
[23:12:17] <oldlaptop> The exact details are kind of complicated, but "memory" in C generally looks like one giant array. (Possibly two giant arrays, one to store data and one to store the program's machine code.)
[23:12:20] *** Quits: m3wzX5_ (~m3wzx5@user/m3wzx5) (Remote host closed the connection)
[23:12:49] <teut> why to store the machine code when you got the instructions?
[23:13:15] <bjs> teut: the machine code *is* the instructions, and for the computer to execute them, they have to be stored somewhere
[23:13:15] <oldlaptop> "the instructions" are not a different thing from "the machine code"
[23:13:18] <teut> the instructions ultimately get translated to machine code
[23:13:23] <bjs> teut: and "text" is just where they get put.
[23:13:24] <teut> by assembler
[23:13:29] <GeDaMo> The CPU only understands machine code
[23:13:49] *** Joins: furrymcgee (~devuan@31.179.186.66)
[23:14:03] <oldlaptop> You don't have assembly-language "instructions" anymore when you're executing a program, generally speaking.
[23:14:09] <bjs> teut: yes, or in C's case, the compiler. It produces a blob of machine code that *is* the program, and that program gets put at the bit of the program's memory called "text". When the program runs the CPU jumps to text and starts executing the program there (roughly)
[23:14:21] <oldlaptop> You have actual instructions, in the machine-code format the actual machine executes.
[23:14:28] <teut> I was thinking of assembly whole time
[23:14:56] <bjs> teut: when you think of C and say something like gcc,  it really just outputs a blob of binary machine code.  There is some strong correspondence between the blob of binary and some "assembly" program.
[23:15:08] <teut> yes bjs , thats all good but lot of stuff is abstracted out in that sentence
[23:15:24] <bjs> teut: not very much is abstracted in that sentence
[23:15:44] <bjs> C compiler takes .c program in, and binary blob of machine code comes out
[23:15:45] <teut> the text is  machine code for the assembly, is that correct?
[23:16:12] <teut> yes bjs, this much I understand
[23:16:14] <bjs> teut: yes, it's the machine code for the program that the C compiler actually created
[23:16:23] <teut> and you use assembly to make that binary
[23:16:40] <teut> the c compies to  asse,bly
[23:16:41] <bjs> teut: well no, if you have a C program you use a C compiler
[23:16:46] <oldlaptop> That is how the term is used for ELF-format binary programs on Linux and most modern unix-like systems other than macOS. (Maybe some other formats talk about "text" sections too.)
[23:17:11] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[23:17:13] <bjs> teut: you can think about it like that yes,  it doesn't actually generate a file with assembly in or anything though
[23:17:34] <teut> the gcc allows me to generate exe or  .asm
[23:17:45] <bjs> teut: yep
[23:17:55] <teut> on godbolt I can even see the assembly instryctions
[23:18:13] <bjs> teut: godbolt takes the machine code and *dis*assembles it back to assembly I think
[23:18:16] <bjs> (objdump -D)
[23:18:30] <bjs> teut: but you can think of the compiler as going `C -> asm -> native` if you want
[23:18:37] <teut> yes it does that only and refreshes every x seconds
[23:18:50] *** Joins: m3wzx5 (~m3wzx5@user/m3wzx5)
[23:18:52] <teut> yes that is how I think
[23:19:12] <teut> in parsing there is the pushdown stack that you told
[23:19:20] <teut> now thats a different stack
[23:19:34] <teut> but its jumbled up stuff
[23:19:36] <bjs> teut: automata are mathematical models of programming
[23:20:01] <bjs> teut: here the word "stack" (as in the "stack" section of the ELF) is a name given to a bit of the memory used by the program,  that the compiler will use to store local variables in
[23:20:22] <bjs> it is called "stack" because it's used in a stack-like way (you "push" local variables into it, the "pop" them off again)
[23:20:31] <teut> yes, and what about your nonlocal variables?
[23:21:13] *** Joins: thekevinhuang (~QuantumBr@154.3.42.76)
[23:21:27] *** Quits: Leone (~Leo@45.72.231.86) (Read error: Connection reset by peer)
[23:21:44] <teut> because in a stack you are allowed to only check top, or pop , or push
[23:21:45] <bjs> teut: C doesn't have non-local variables.  Unless you mean just global "static storage duration" ones?
[23:22:18] <bjs> If you really mean closures, then the compiler can just pretend they're locals too and push them on as well, but it has to be careful because different languages have different semantics for those kinds of non-locals.
[23:22:24] <teut> ok, then you might just convert those inner functions of python to flat big single functions
[23:22:32] <teut> might be*
[23:22:41] <teut> converting*
[23:22:59] *** Joins: inky (~inky@37.252.67.70)
[23:23:02] <bjs> teut: Python isn't compiled like C, so it doesn't quite work the same way.
[23:23:07] <teut> yes ,  understood
[23:23:31] <bjs> teut: but in C those global variables that aren't in the "heap" or "stack" sections, are stored in the "data" section. They are global and have a fixed address
[23:23:42] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 255 seconds)
[23:24:00] <teut> yes this i know now
[23:24:07] <teut> Uploaded file: https://uploads.kiwiirc.com/files/9307b9608ca40fcc9f6e5e9a2419416b/image.png
[23:24:28] *** Quits: m3wzx5 (~m3wzx5@user/m3wzx5) (Quit: Leaving)
[23:24:46] <teut> so is the text just there to fetch some instructions and put on stack?
[23:24:51] <bjs> teut: if you actually dump the object file you may also see a section called "bss" which is where you may find (some) of the global variables
[23:24:51] *** Joins: Blankspace (~abcd@user/blankspace)
[23:25:09] <bjs> teut: the "text" section is the bit of the memory that contains the blob of machine code when the program is ran.
[23:25:19] <bjs> so the CPU knows where to find it to begin executing it.
[23:25:28] <bjs> (or rather, so the OS can tell the CPU where it is)
[23:26:06] <teut> ya in the process of loading it, it need to fill up the stack , and there might be not enough memory to fill the stack all at once
[23:26:23] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[23:26:27] <GeDaMo> The stack isn't full at the start, it's used while the program is running
[23:26:33] <bjs> teut: what do you mean "fill the stack". The stack is a thing that gets used as the program runs.
[23:26:46] <bjs> teut: when you call a function, it "pushes" the local variables onto the stack, and when you return it "pops" them off.
[23:27:01] <teut> yes , so just   grab   x number of instructions from the text and runn them
[23:27:32] <GeDaMo> The instructions are not on the stack
[23:27:39] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:27:52] <teut> the instructions not in the stack then where?
[23:28:03] <GeDaMo> The instructions are in the text section
[23:28:07] *** Joins: dunkeln (~dunkeln@188.70.26.84)
[23:28:12] *** Quits: CodeSpelunker (~CodeSpelu@user/codespelunker) (Quit: CodeSpelunker)
[23:28:17] *** Joins: Zer0D4y (~ZeroDay@gateway/tor-sasl/zeroday)
[23:28:22] *** Quits: ZeroDay (~ZeroDay@gateway/tor-sasl/zeroday) (Remote host closed the connection)
[23:28:22] <teut> [/* 9 8  89        ]    this is the stack
[23:28:42] <teut> now you just use bytecode instead of * or 89
[23:28:57] <teut> its prefix notation ig
[23:29:52] *** Quits: dhil (~dhil@195.213.192.47) (Remote host closed the connection)
[23:30:38] *** Joins: m3wzx5 (~m3wzx5@user/m3wzx5)
[23:30:39] <quippy> anybody know if there's a way to make the *compilation* scroll by default?
[23:30:44] <quippy> I always have to click on it and jump to the bottom :P
[23:30:57] <GeDaMo> Which compilation?
[23:31:01] <quippy> the *compilation* buffer, sorry
[23:31:02] <quippy> forgot a word
[23:31:11] <quippy> oh
[23:31:13] <quippy> wrong channel
[23:31:15] <quippy> sheesh I'm batting 0
[23:31:22] <quippy> that was a question for #emacs, sorry folks
[23:31:25] *** Joins: rtypo (~alex@user/rtypo)
[23:31:28] *** Joins: Auron (~Auron956@user/auron)
[23:31:35] <quippy> can't type, don't know where I am, etc etc, I'll see myself out
[23:32:13] *** Quits: dan01 (~dan01@2a02:2f0f:3017:4e00:f883:ac1e:f755:aea1) (Read error: Connection reset by peer)
[23:32:55] <teut> the name is stack is misguiding , you can reach any position in the stack by  offset vaalue
[23:33:35] <GeDaMo> The call stack is just another area of memory
[23:33:43] <GeDaMo> It's not an abstract stack data structure
[23:33:48] *** Quits: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC) (Quit: WeeChat 3.2)
[23:33:59] *** Quits: Blankspace (~abcd@user/blankspace) (Read error: Connection reset by peer)
[23:34:05] *** Joins: andrewSC (~andrewSC@archlinux/trusteduser/andrewSC)
[23:34:21] *** Joins: Blankspace (~abcd@2401:4900:3b2a:ec12:e1a2:b4dd:f202:4bc0)
[23:34:28] <teut> yes
[23:34:47] <thekevinhuang> hello! new to the channel :)   Is anyone studying GANS (neural networks)?
[23:35:10] <teut> yes, I can try to help
[23:35:41] *** Quits: Blankspace (~abcd@2401:4900:3b2a:ec12:e1a2:b4dd:f202:4bc0) (Changing host)
[23:35:41] *** Joins: Blankspace (~abcd@user/blankspace)
[23:35:54] <thekevinhuang> hello teut, I'm new to IRC, so I don't know how to use all the functions.... were  you referring to my comment just now?
[23:36:03] *** Joins: Quacc (~youbuntoe@user/quacc)
[23:36:10] <teut> yes  thekevinhuang
[23:36:15] *** Quits: Quacc (~youbuntoe@user/quacc) (Client Quit)
[23:37:49] <thekevinhuang> oh kewl, thanks teut!  I have an application idea for GANs and I just wanted to ask some questions.  Where are "we" in terms of using GANs to find out if an image has been altered or deepfaked?
[23:38:02] <thekevinhuang> What level or stage or reliability are we at globally?
[23:38:57] <teut> you want to know if an image is deepfaked or not , is that what you are asking?
[23:39:11] <thekevinhuang> yep :)  Thanks :)
[23:39:29] <thekevinhuang> or a part of an image
[23:40:05] <WarauSalesman> XD
[23:40:17] <WarauSalesman> sure we gonna solve this problem in IRC channels
[23:41:09] *** Quits: radu24240 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[23:41:37] <thekevinhuang> Oh, I'm not looking for a solution, I'm just curious about the state of the science/technology. But yeah, you're right :P
[23:41:51] <teut> I really dont know much  about how to do it sorry, but usually the numbers are sort off next to the gaussian distrib
[23:41:53] <teut> https://ieeexplore.ieee.org/document/9189596
[23:42:04] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Read error: Connection reset by peer)
[23:42:17] <teut> this paper tells about some research done, let me have a look
[23:42:17] *** Quits: scabby (~scabby@user/scabootssca) (Ping timeout: 258 seconds)
[23:43:00] <thekevinhuang> thanks teut, kewl abstract, a lil too advanced for me.
[23:43:06] *** Joins: radu24240 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[23:43:20] <teut> which was based on image noise and image augmentation.
[23:43:27] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[23:43:31] <thekevinhuang> It would be kewl, if I could find a GANs researcher :(  I'd love to ask questions and maybe team up for an application
[23:43:38] <bjs> teut: the name "stack" comes because it's a stack data structure
[23:44:00] <teut> the images created by these Gans will less noise I believe
[23:44:13] <bjs> teut: you "push" things on, and "pop" things off. You push/pop what are called "stack frames" which contain all of the locals for a function
[23:44:16] <teut> but in stack you cannot see below top bj
[23:44:17] <bjs> (and some other data)
[23:44:18] <teut> bjs
[23:44:44] <bjs> teut: well the important part of a stack is it's LIFO, the last stack you push is the first one that gets popped
[23:44:48] *** Quits: Blankspace (~abcd@user/blankspace) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[23:44:57] <teut> yes true
[23:45:07] <bjs> that's how it works,  each call pushes something, and each return pops something
[23:45:14] <bjs> and you can peek at the top to get the locals for the function.
[23:45:39] <bjs> teut: it's like a stack of arrays, you can see inside the "top" array, but not the others without popping (or some clever trick to "walk" the stack)
[23:46:32] <teut> and , and each array represents  the stack frame of a funtion, correct?
[23:46:47] <teut> but array of array is an array
[23:47:07] <GeDaMo> thekevinhuang: there are some channels more related to AI and machine learning
[23:47:12] <teut> ofcourse in python you have nested arrays but I hope it made sense
[23:47:21] <teut> GeDaMo nope there arent
[23:47:37] <teut> I had tried on various ones on freenode
[23:47:45] <GeDaMo> ##machinelearning #ai
[23:47:47] <thekevinhuang> hey teut, thanks for explaining :)   Hey GeDaMo, sorry, I'm so new to IRC, I only played around with it in highschool and I'm old now lol
[23:47:54] <thekevinhuang> ohhh nice, thank you GeDaMo
[23:47:55] <teut> they dont respond , i waitind from morining to evening
[23:48:01] <user51> good evening
[23:48:15] <teut> but there is a bot which gives research  paper links
[23:48:30] <teut> thekevinhuang  do one thing
[23:48:42] <teut> grab a resnet and train it to detect fake images
[23:48:51] <teut> job done
[23:49:28] <GeDaMo> also ##machinelearning-general
[23:50:02] <teut> no one knows how machine learning works, there is some math which research paper talk about but I never found any which tells when to use  tanh, sigmoid etc
[23:50:11] <teut> its hit and trial
[23:50:24] <teut> depp learning I mean*
[23:50:27] <teut> deep*
[23:51:45] <teut> bjs that last sentence looks  gr8, something important lies there
[23:52:01] <bjs> teut: lies where?
[23:52:03] *** Quits: quippy (~quippy@47-220-146-143.gtwncmkt04.res.dyn.suddenlink.net) (Quit: Leaving)
[23:52:45] <teut> so that array, aka a stack frame contains the instructions for a function I believe
[23:52:56] <GeDaMo> "Detecting and Simulating Artifacts in GAN Fake Images" https://arxiv.org/pdf/1907.06515v2.pdf
[23:53:50] <thekevinhuang> Thanks teut, :)   Let me take notes of what you said
[23:54:13] <GeDaMo> "Can Forensic Detectors Identify GAN Generated Images?" http://www.apsipa.org/proceedings/2018/pdfs/0000722.pdf
[23:54:23] *** Quits: jacktar (~whiteshad@gateway/tor-sasl/jacktar) (Remote host closed the connection)
[23:54:32] <thekevinhuang> awesome, thanks for the links peeps :)
[23:54:51] *** Joins: jacktar (~whiteshad@gateway/tor-sasl/jacktar)
[23:55:53] <teut> you can try to train a resnet, your results will be poorer as compared to the research papers but I expect good enogh
[23:55:54] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[23:56:55] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 268 seconds)
[23:57:04] <teut> if you want to optimize it, you can see how the research paper does it
[23:59:06] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[23:59:29] *** Quits: Shailangsa_ (~shailangs@host86-186-196-233.range86-186.btcentralplus.com) ()
