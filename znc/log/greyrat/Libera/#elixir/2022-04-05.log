[00:06:34] *** Quits: mizi_ (~mizi@user/mizi) (Ping timeout: 268 seconds)
[00:11:45] *** Quits: mahmutov (~mahmutov@5.176.62.169) (Ping timeout: 248 seconds)
[00:16:38] *** Joins: rgrinberg (~textual@177.248.158.166)
[00:17:52] *** Joins: zyxmaw (~zyxmaw@2a01:799:e62:5000:d4e4:dd0c:62a4:6ae5)
[00:18:55] *** Joins: rawley (~rawley@142.99.241.242)
[00:23:35] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Remote host closed the connection)
[00:24:11] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[00:29:02] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Ping timeout: 246 seconds)
[00:58:11] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[01:00:12] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 272 seconds)
[01:03:22] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Ping timeout: 272 seconds)
[01:08:06] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[01:10:13] *** Quits: fantazo (~fantazo@192-164-154-92.hdsl.highway.telekom.at) (Ping timeout: 260 seconds)
[01:10:43] *** Quits: zyxmaw (~zyxmaw@2a01:799:e62:5000:d4e4:dd0c:62a4:6ae5) (Ping timeout: 260 seconds)
[01:17:08] *** Joins: zyxmaw (~zyxmaw@2a01:799:e62:5000:d4e4:dd0c:62a4:6ae5)
[01:19:06] *** Joins: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com)
[01:30:41] *** Quits: bit4bit (~bit4bit@190.128.123.78) (Read error: Connection reset by peer)
[01:31:01] *** Quits: zyxmaw (~zyxmaw@2a01:799:e62:5000:d4e4:dd0c:62a4:6ae5) (Ping timeout: 240 seconds)
[01:31:04] *** Joins: bit4bit (~bit4bit@181.49.102.14)
[01:33:05] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[01:34:51] *** Quits: w1ntermute (~sven@ipservice-092-219-123-235.092.219.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[01:37:38] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[01:40:31] *** Joins: zyxmaw (~zyxmaw@2a01:799:e62:5000:d4e4:dd0c:62a4:6ae5)
[01:43:16] *** Quits: rawley (~rawley@142.99.241.242) (Remote host closed the connection)
[01:43:50] *** Joins: ur5us (~ur5us@2406:e002:689a:b901:e214:9926:5ee8:c50f)
[01:46:47] *** Quits: vieira (uid370194@id-370194.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[01:47:06] *** Quits: notapenguin (~ryu@2804:14d:5685:96c7::4) (Quit: WeeChat 3.5)
[01:48:55] <symb0l87> Is there a way to 'alias' some where clauses using Ecto? Example, I frequently check for 'completed' status in a 'jobs' table. Is there any way to do maybe a Jobs.completed |> joins.. where.. select.. etc
[01:49:29] <josevalim> A function can encapsulate that logic
[01:50:17] *** Quits: rgrinberg (~textual@177.248.158.166) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:50:28] <symb0l87> Thanks, that what I was thinking. Didn't know if that was appropriate. In rails, we had the 'scope' keyword to do this
[02:21:36] *** Quits: DNH (~DNH@2a02:8109:b740:2c4:c037:4b3d:a51c:742a) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:36:27] *** Quits: Rubyn (~Rubyn@user/rubyn) (Quit: WeeChat 3.4)
[02:36:34] *** Joins: DNH (~DNH@2a02:8109:b740:2c4:6d7f:99b6:5035:1068)
[02:41:52] *** Quits: bit4bit (~bit4bit@181.49.102.14) (Remote host closed the connection)
[02:51:05] <symb0l87> What's the best way to add/subtract days/months/years from a DateTime?
[02:51:30] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[02:51:32] *** Joins: rgrinberg (~textual@177.248.158.166)
[02:56:07] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[02:59:02] *** Quits: rgrinberg (~textual@177.248.158.166) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:04:50] <josevalim> There is DateTime.add I think. But you need to convert it to seconds IIRC
[03:06:25] <symb0l87> Ah, damn. I saw that you could use seconds but didn't think that was the only way
[03:15:19] *** Quits: DNH (~DNH@2a02:8109:b740:2c4:6d7f:99b6:5035:1068) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:48:29] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[04:15:16] *** Quits: rx80 (~quassel@user/rx80) ()
[04:17:33] *** Joins: rx80 (~quassel@user/rx80)
[04:30:16] *** Quits: antranigv (~antranigv@37.252.78.252) (Quit: ZNC 1.8.2 - https://znc.in)
[04:30:41] *** Joins: antranigv (~antranigv@37.252.78.252)
[04:37:33] *** Quits: NightMonkey (~NightMonk@user/nightmonkey) (Ping timeout: 256 seconds)
[04:37:36] *** Joins: brw7 (~bas@46.232.210.60)
[04:37:50] *** Joins: andrhua7 (~andrhua@user/andrhua)
[04:37:55] *** Joins: hmans7 (~hmans@user/hmans)
[04:38:06] *** Quits: ebb (ebb@user/ebb) (Remote host closed the connection)
[04:38:07] *** Quits: Perry (~perry@coffee-break.at) (Ping timeout: 256 seconds)
[04:38:14] *** Joins: mooff7 (mooff@awful.cooking)
[04:38:41] *** Joins: Perry (~perry@coffee-break.at)
[04:38:42] *** Quits: brw (~bas@46.232.210.60) (Read error: Connection reset by peer)
[04:38:42] *** brw7 is now known as brw
[04:38:54] *** Quits: mooff (mooff@awful.cooking) (Write error: Connection reset by peer)
[04:38:55] *** mooff7 is now known as mooff
[04:39:03] *** Joins: NightMonkey (~NightMonk@user/nightmonkey)
[04:39:07] *** Quits: wolfshappen (~waff@irc.furworks.de) (Read error: Connection reset by peer)
[04:39:15] *** Quits: jpaa (~jpaa@161.97.129.36) (Ping timeout: 256 seconds)
[04:39:15] *** Quits: sweater (~sweater@206.81.18.26) (Ping timeout: 256 seconds)
[04:39:17] *** Quits: hmans (~hmans@user/hmans) (Read error: Connection reset by peer)
[04:39:17] *** hmans7 is now known as hmans
[04:39:23] *** Joins: jpaa (~jpaa@161.97.129.36)
[04:39:39] *** Joins: sweater (~sweater@206.81.18.26)
[04:39:42] *** Joins: n8nl (~n8nl@c-24-61-77-34.hsd1.ma.comcast.net)
[04:39:49] *** Quits: kawen (~quassel@static.208.191.216.95.clients.your-server.de) (Ping timeout: 256 seconds)
[04:39:58] *** Joins: kawen (~quassel@static.208.191.216.95.clients.your-server.de)
[04:40:03] *** Joins: wolfshappen (~waff@irc.furworks.de)
[04:40:23] *** Quits: andrhua (~andrhua@user/andrhua) (Ping timeout: 256 seconds)
[04:40:23] *** andrhua7 is now known as andrhua
[04:41:17] *** Joins: rgrinberg (~textual@177.248.158.166)
[04:42:39] *** Quits: beise (~beise@85.17.52.17) (Ping timeout: 256 seconds)
[04:42:53] *** Joins: beise (~beise@85.17.52.17)
[04:42:59] *** Joins: wink_ (fhtagn@user/wink)
[04:43:47] *** Quits: tomku (~tomku@user/tomku) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: OMGOMG (~bobrobert@poppy.ifi.uio.no) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: wink (fhtagn@user/wink) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: bind5 (~bind@md-dingen.tilaa.cloud) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: creature (~alex@198.98.114.33) (Ping timeout: 256 seconds)
[04:43:47] *** Quits: joshproehl (~quassel@user/joshproehl) (Ping timeout: 256 seconds)
[04:44:14] *** Joins: joshproehl (~quassel@user/joshproehl)
[04:44:21] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Ping timeout: 256 seconds)
[04:44:29] *** Joins: fjmorazan_ (~quassel@user/fjmorazan)
[04:45:14] *** Joins: creature (~alex@198.98.114.33)
[04:45:15] *** Joins: OMGOMG (~bobrobert@poppy.ifi.uio.no)
[04:45:29] *** Joins: tomku (~tomku@user/tomku)
[04:45:45] *** Joins: ebb (ebb@user/ebb)
[04:46:00] *** Joins: bind5 (~bind@md-dingen.tilaa.cloud)
[04:46:57] *** Quits: ur5us (~ur5us@2406:e002:689a:b901:e214:9926:5ee8:c50f) (Ping timeout: 256 seconds)
[04:49:12] *** Quits: Tanger (~tangmang@2403-580f-f5--a4ac-e219-5a80-e0c3.ip6.aussiebb.net) (Remote host closed the connection)
[04:53:01] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[04:57:42] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Ping timeout: 272 seconds)
[05:00:37] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 260 seconds)
[05:02:12] *** Quits: rgrinberg (~textual@177.248.158.166) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:06:43] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[05:14:23] <davic> symb0l87: there is a library for that named Timex that can help, if you want to parse a datetime there is also date_time_parser
[05:14:45] <davic> there is also a lib to build those rails-similar functions but it would make the application a bit fat
[05:18:00] *** Joins: rgrinberg (~textual@177.248.158.166)
[05:18:34] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[05:26:37] *** Quits: n8nl (~n8nl@c-24-61-77-34.hsd1.ma.comcast.net) (Ping timeout: 268 seconds)
[05:48:26] *** Joins: n8nl (~n8nl@c-24-61-77-34.hsd1.ma.comcast.net)
[05:54:10] *** Joins: fwg (~fwg@user/fwg)
[06:03:27] *** Quits: rgrinberg (~textual@177.248.158.166) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:15:30] *** Joins: ur5us (~ur5us@2406:e002:689a:b901:e214:9926:5ee8:c50f)
[06:17:43] *** Joins: mahmutov (~mahmutov@5.176.62.169)
[06:20:17] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Ping timeout: 248 seconds)
[06:39:20] *** Joins: res0nat0r0844 (~Fletch@dia.whatbox.ca)
[06:39:40] *** Quits: res0nat0r084 (~Fletch@dia.whatbox.ca) (Read error: Connection reset by peer)
[06:39:49] *** Joins: Tanger (~Donger@signiq.cust.bdr01.per02.wa.VOCUS.net.au)
[06:40:16] *** Joins: MuffinPimp_ (~mokou@box.mokou.io)
[06:40:31] *** Quits: MuffinPimp (~mokou@box.mokou.io) (Ping timeout: 256 seconds)
[06:40:41] *** MuffinPimp_ is now known as MuffinPimp
[06:41:05] *** Quits: void09 (~void@150.230.21.57) (Ping timeout: 256 seconds)
[06:41:12] *** Joins: acosta3 (~acosta@163-172-62-165.rev.poneytelecom.eu)
[06:41:44] *** Joins: void09 (~void@150.230.21.57)
[06:42:36] *** Quits: acosta (~acosta@163-172-62-165.rev.poneytelecom.eu) (Read error: Connection reset by peer)
[06:42:36] *** acosta3 is now known as acosta
[06:47:08] *** Quits: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[06:48:38] *** Quits: n8nl (~n8nl@c-24-61-77-34.hsd1.ma.comcast.net) (Ping timeout: 268 seconds)
[06:54:52] *** Joins: rgrinberg (~textual@177.248.158.166)
[07:09:45] *** Joins: trafficjam (~trafficja@103.231.88.30)
[07:12:54] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:13:55] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:14:13] *** Quits: mahmutov (~mahmutov@5.176.62.169) (Ping timeout: 260 seconds)
[07:14:13] *** Quits: srfsh (~srfsh@user/srfsh) (Remote host closed the connection)
[07:14:29] *** Joins: srfsh (~srfsh@user/srfsh)
[07:25:35] *** Quits: srfsh (~srfsh@user/srfsh) (Ping timeout: 240 seconds)
[07:32:00] *** Joins: srfsh (~srfsh@user/srfsh)
[07:34:05] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[07:39:08] <symb0l87> davic: Thanks! Timex looks perfect
[07:41:56] <davic> symb0l87: npnp, hopefully we get something more feature-rich included in Elixir itself at one point but timex works gut so far
[08:22:46] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Remote host closed the connection)
[08:25:19] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[08:36:27] *** Quits: kuzyn1 (~kuzyn@modemcable071.66-22-96.mc.videotron.ca) (Ping timeout: 260 seconds)
[08:45:26] *** Quits: trafficjam (~trafficja@103.231.88.30) (Ping timeout: 250 seconds)
[08:48:08] *** Quits: symb0l87 (~symb0l@user/symb0l) (Ping timeout: 260 seconds)
[08:50:12] *** Joins: symb0l87 (~symb0l@user/symb0l)
[08:50:15] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Remote host closed the connection)
[08:50:47] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[08:54:46] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Remote host closed the connection)
[08:56:05] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[09:00:46] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Ping timeout: 245 seconds)
[09:03:41] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 268 seconds)
[09:05:43] *** Quits: rgrinberg (~textual@177.248.158.166) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:24:54] *** Quits: symb0l87 (~symb0l@user/symb0l) (Read error: Connection reset by peer)
[09:27:21] *** Joins: symb0l87 (~symb0l@user/symb0l)
[09:36:14] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[09:50:42] *** Joins: fantazo (~fantazo@192-164-154-92.hdsl.highway.telekom.at)
[09:51:10] *** Quits: ur5us (~ur5us@2406:e002:689a:b901:e214:9926:5ee8:c50f) (Ping timeout: 268 seconds)
[09:58:50] *** Quits: gitgoood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 246 seconds)
[10:29:07] <serafeim> hey friends
[10:36:52] *** Joins: int16h (~int16h@user/bombuzal)
[10:37:57] *** Quits: bombuzal (~int16h@user/bombuzal) (Ping timeout: 256 seconds)
[10:40:08] *** Joins: DNH (~DNH@2a02:8109:b740:2c4:9487:ccc0:d294:ae76)
[10:42:52] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Remote host closed the connection)
[10:43:26] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[10:50:01] *** Quits: DNH (~DNH@2a02:8109:b740:2c4:9487:ccc0:d294:ae76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:50:15] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Remote host closed the connection)
[10:53:29] *** Joins: mexen (uid495612@user/mexen)
[10:53:30] *** Joins: habamax (~habamax@user/habamax)
[10:58:10] *** Joins: DNH (~DNH@2a02:8109:b740:2c4:9487:ccc0:d294:ae76)
[11:09:36] *** Quits: DNH (~DNH@2a02:8109:b740:2c4:9487:ccc0:d294:ae76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:11:09] *** Joins: voltone (~voltone@2a02-a453-5486-1-5e3-8fe5-85d4-bcff.fixed6.kpn.net)
[11:14:04] *** wink_ is now known as wink
[11:16:08] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[11:37:05] *** Quits: zyxmaw (~zyxmaw@2a01:799:e62:5000:d4e4:dd0c:62a4:6ae5) (Ping timeout: 248 seconds)
[11:45:49] *** Joins: zyxmaw (~zyxmaw@2a01:799:e62:5000:d4e4:dd0c:62a4:6ae5)
[11:50:17] *** Quits: zyxmaw (~zyxmaw@2a01:799:e62:5000:d4e4:dd0c:62a4:6ae5) (Ping timeout: 250 seconds)
[11:55:05] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Remote host closed the connection)
[11:55:39] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[12:03:07] *** Joins: trafficjam (~trafficja@203.176.111.34)
[12:14:40] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[12:16:43] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Remote host closed the connection)
[12:17:31] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[12:20:21] *** Quits: trafficjam (~trafficja@203.176.111.34) (Quit: Client closed)
[12:28:28] *** Joins: zyxmaw (~zyxmaw@2a01:799:e62:5000:d4e4:dd0c:62a4:6ae5)
[12:35:13] *** Quits: zyxmaw (~zyxmaw@2a01:799:e62:5000:d4e4:dd0c:62a4:6ae5) (Ping timeout: 248 seconds)
[12:39:59] *** Joins: trafficjam (~trafficja@203.176.111.34)
[12:41:56] *** Quits: Tanger (~Donger@signiq.cust.bdr01.per02.wa.VOCUS.net.au) (Quit: Leaving)
[12:44:04] *** Joins: mattil (~mattil@helsinki.portalify.com)
[12:45:09] *** bkircher is now known as bkircher_afk
[12:45:33] *** Joins: gitgoood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[12:55:24] *** Joins: ur5us (~ur5us@203.86.198.200)
[12:56:52] *** Quits: ur5us (~ur5us@203.86.198.200) (Remote host closed the connection)
[12:59:32] *** Joins: ur5us (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb)
[13:04:21] *** Quits: srfsh (~srfsh@user/srfsh) (Remote host closed the connection)
[13:04:38] *** Joins: srfsh (~srfsh@user/srfsh)
[13:17:38] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 260 seconds)
[13:25:06] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Remote host closed the connection)
[13:25:39] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[13:35:23] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Remote host closed the connection)
[13:36:26] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[13:57:52] *** Quits: trafficjam (~trafficja@203.176.111.34) (Ping timeout: 250 seconds)
[14:12:10] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Remote host closed the connection)
[14:13:37] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[14:18:11] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Ping timeout: 246 seconds)
[14:51:01] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[14:57:39] *** Quits: ur5us (~ur5us@2406:e002:689a:b901:920f:b571:c0ce:1fdb) (Ping timeout: 268 seconds)
[15:06:48] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Remote host closed the connection)
[15:17:25] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[15:19:53] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:22:12] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[15:37:23] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[15:37:36] *** Joins: notapenguin (~ryu@2804:14d:5685:96c7::4)
[15:41:48] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:7904:da90:b863:898)
[16:01:49] *** Joins: spyt1 (~spyt@2a01:4f8:c2c:c73a::1)
[16:13:45] *** Quits: wolfshappen (~waff@irc.furworks.de) (Quit: later)
[16:14:10] *** Joins: wolfshappen (~waff@irc.furworks.de)
[16:25:48] *** Quits: pflanze (~pflanze@61-41-178-139.dyn.fiber.qlnet.ch) (Remote host closed the connection)
[16:26:10] *** Joins: pflanze (~pflanze@61-41-178-139.dyn.fiber.qlnet.ch)
[16:28:11] *** Quits: pflanze (~pflanze@61-41-178-139.dyn.fiber.qlnet.ch) (Client Quit)
[16:28:42] *** Joins: pflanze (~pflanze@61-41-178-139.dyn.fiber.qlnet.ch)
[16:29:52] *** Quits: srfsh (~srfsh@user/srfsh) (Remote host closed the connection)
[16:30:03] *** Joins: srfsh (~srfsh@user/srfsh)
[16:34:23] *** Quits: agrosant (~agrosant@79.103.182.92.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[16:34:57] *** Joins: agrosant (~agrosant@79.103.182.92.dsl.dyn.forthnet.gr)
[16:44:49] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:7904:da90:b863:898) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:45:18] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:7904:da90:b863:898)
[17:08:36] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Remote host closed the connection)
[17:09:09] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[17:12:48] *** Joins: Guest79 (~Guest79@net-2-47-51-195.cust.vodafonedsl.it)
[17:13:21] *** Quits: Guest79 (~Guest79@net-2-47-51-195.cust.vodafonedsl.it) (Client Quit)
[17:21:14] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[17:22:30] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 272 seconds)
[17:30:44] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[17:32:49] *** Quits: gitgoood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 248 seconds)
[17:34:38] *** Joins: gitgoood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[17:54:42] *** Quits: gitgoood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 260 seconds)
[17:57:12] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Remote host closed the connection)
[17:57:44] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[18:00:35] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[18:11:00] *** Joins: kuzyn1 (~kuzyn@bras-base-mtrlpq2848w-grc-38-74-14-213-137.dsl.bell.ca)
[18:21:15] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Remote host closed the connection)
[18:51:45] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[18:54:25] *** Joins: Sgeo (~Sgeo@user/sgeo)
[18:56:12] *** Joins: gitgoood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[18:57:08] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[18:59:29] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[19:18:15] *** Joins: symb0l878 (~symb0l@user/symb0l)
[19:18:39] *** Joins: rgrinberg (~textual@177.248.158.166)
[19:21:38] *** Quits: symb0l87 (~symb0l@user/symb0l) (Ping timeout: 246 seconds)
[19:21:38] *** symb0l878 is now known as symb0l87
[19:28:45] *** Joins: bit4bit (~bit4bit@181.49.102.14)
[19:38:18] *** Joins: mizi_ (~mizi@user/mizi)
[19:45:24] *** Quits: bit4bit (~bit4bit@181.49.102.14) (Ping timeout: 240 seconds)
[19:54:39] *** Joins: bit4bit (~bit4bit@181.49.102.14)
[20:04:48] *** Joins: mahmutov (~mahmutov@5.176.62.169)
[20:21:27] *** Joins: _w1ntermute_ (~sven@ip1f12840f.dynamic.kabel-deutschland.de)
[20:34:12] *** Quits: bit4bit (~bit4bit@181.49.102.14) (Ping timeout: 240 seconds)
[20:43:47] *** Quits: rgrinberg (~textual@177.248.158.166) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:46:30] *** Joins: rgrinberg (~textual@177.248.158.166)
[20:48:02] *** Quits: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net) (Remote host closed the connection)
[20:51:06] *** Joins: yauhsien (~yauhsien@61-231-37-33.dynamic-ip.hinet.net)
[21:04:58] *** Quits: wolfshappen (~waff@irc.furworks.de) (Read error: Connection reset by peer)
[21:10:24] *** Quits: rgrinberg (~textual@177.248.158.166) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:13:19] <m1dnight> I have a database that stores measurements over time (a timeseries), and I'm wondering how I can make the queries faster. 
[21:13:49] <m1dnight> The table contains type,timestamp,value, and typically I query for all measurements between two timestamps, and the min and max of this range.
[21:14:17] <m1dnight> I've put indices on all columns, and all columns combined, as well.
[21:14:39] <m1dnight> But still, it's pretty slow (2 seconds or so, and a single page makes 5 queries, so that goes up to 10 seconds)
[21:14:41] <benwilson512> m1dnight: hey hey! I do a fair bit of stuff with timeseries
[21:14:48] <benwilson512> couple of basic questions
[21:15:26] <rawtaz> is it not relevant which database you are talking about, to begin with?
[21:15:32] <benwilson512> https://www.irccloud.com/pastebin/tR9yu7HD/
[21:15:44] <benwilson512> and yeah I'm assuming postgres but if not that's important
[21:16:04] <m1dnight> Postgres, yes. I was told to use postgres "unless its really important you use something else, even for time series"
[21:16:13] <rawtaz> nice :D
[21:16:20] <rawtaz> you must have real friends, telling you stuff like that :3
[21:16:28] <benwilson512> yeah, we have billions and billions of rows of timeseries data in postgres, works great
[21:17:10] <m1dnight> Let me first try to get the query output from elixir to I can do the analyze, just a sec~!
[21:17:22] <rawtaz> is there any particular storage you use for it? or just the regular data types in regular tables?
[21:17:25] <rawtaz> benwilson512: ^
[21:17:39] <rawtaz> i mean driver
[21:17:45] <benwilson512> rawtaz: we eventually added timescaledb
[21:17:51] <rawtaz> oh ok
[21:17:53] <benwilson512> makes deleting data from that table possible
[21:18:07] <benwilson512> and the write performance improvements / compression eventually are critical
[21:18:33] <benwilson512> we got to about 1.2 billion rows on a regular postgres table though
[21:18:41] <rawtaz> cute :)
[21:19:02] <benwilson512> yeah it isn't truly "big data" or anything, but it's big enough that you gotta pay attention to how you hit it
[21:19:14] <benwilson512> especially if you want to run it on reasonably priced hardware
[21:21:13] <benwilson512> m1dnight: FYI I've got a meeting here in 10 min but I'll try to follow up throughout the day
[21:21:38] <m1dnight> Yeah no problem, I'm trying to get the query in raw format :D
[21:21:43] <m1dnight> but the table is 135 mb to start
[21:22:18] <m1dnight> 1620397 rows atm
[21:22:19] <benwilson512> row count?
[21:22:23] <benwilson512> ah
[21:22:33] <benwilson512> OK these queries should not be taking two seconds :D
[21:22:36] <m1dnight> The thing is, I used to have a table for each type of measurement, but now I merged them.
[21:22:45] <m1dnight> Ah, thought you were gonna say "that's obvious" :D
[21:22:59] <m1dnight> I'm going to try and setup some basic queries time them.
[21:23:00] <benwilson512> how many rows are usually included in the time range you're finding the min / max of?
[21:23:14] <m1dnight> Errr, should check that out, hold on.
[21:23:18] <Nicd> the "explain analyze" output would be very helpful
[21:23:30] <m1dnight> yeah, working on that, just a sec.
[21:23:40] <Nicd> also this is a nice site: https://explain.depesz.com
[21:23:47] <Nicd> helps you make sense of the explain result
[21:24:01] *** Quits: _w1ntermute_ (~sven@ip1f12840f.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[21:25:38] <m1dnight> Ah but wait, I did make a booboo with the query. I actually ran a function that runs 14 queries (two weeks), instead of 1. 
[21:25:41] <m1dnight> But still, pretty slow.
[21:26:27] <benwilson512> how many rows in that 1 week?
[21:28:03] *** Joins: rgrinberg (~textual@177.248.158.166)
[21:29:23] *** Quits: kuzyn1 (~kuzyn@bras-base-mtrlpq2848w-grc-38-74-14-213-137.dsl.bell.ca) (Ping timeout: 246 seconds)
[21:29:36] <m1dnight> 470
[21:29:54] <m1dnight> hrm, it seems like it's actually pretty snappy in pgadmin, so I'm going to guess that the performance hit comes from elixir and stuff I do there.
[21:30:19] <benwilson512> hmmmm
[21:30:30] <rawtaz> instead of guessing, simply profile the database calls in your elixir app and/or the queries in your database
[21:30:40] <rawtaz> then you will see where the time is spent
[21:30:48] <m1dnight> http://pastie.org/p/0aEdkWBLXWpknt9mKjdTgv
[21:31:08] <m1dnight> im entirely new to this, not being lazy or something :p
[21:31:12] <m1dnight> ill look into profiling
[21:32:10] <rawtaz> oh sure :)
[21:32:23] <rawtaz> you can configure pg to log query times
[21:32:46] <rawtaz> and in elixir just output time before and after db calls
[21:38:14] <benwilson512> m1dnight: so it looks like from that, it is taking only 1 ms in the database
[21:38:23] <benwilson512> so if you're seeing 2 seconds, I don't think that's your db
[21:39:05] <Nicd> Ecto already logs query times by default in dev mode
[21:39:59] <m1dnight> [debug] QUERY OK source="measurements" db=126.3ms idle=884.1ms
[21:40:31] <rawtaz> how does the elixir app contact the database?
[21:41:08] *** Joins: kuzyn1 (~kuzyn@bras-base-mtrlpq2848w-grc-38-74-14-213-137.dsl.bell.ca)
[21:41:21] <m1dnight> I guess TCP? I don't understand. It's a psql in a docker that I talk to over TCP on port 5432 exposed on localhost
[21:42:03] <rawtaz> does the app run in its own container and the database in another? are you using Docker Compose to run them in unison?
[21:42:23] <m1dnight> ah, it's my dev environment right now, only the db is in a container
[21:43:00] <m1dnight> I can't do measurements in "production" right away, but it's slow enough there that I started investigating.
[21:45:10] <rawtaz> i see
[21:45:49] <m1dnight> wtf, it's reasonably fast al of a sudden
[21:46:20] <m1dnight> instead of a few seconds, it now at most a second
[21:46:20] <rawtaz> rubber duck powah
[21:46:40] <m1dnight> but this quantum stuff aint going to get me, I have my git log to show I didnt change a thing 😂
[21:46:47] <rawtaz> lol
[21:49:52] <m1dnight> okay, so a sanity check, when i was typing in functioncalls i did rudimentary timings with datetime, and I got two seconds, same function now runs in 0 seconds (so sub second)
[21:50:03] <m1dnight> I'm guessing that PSQL is caching some stuff forme.
[21:56:13] <fantazo> how do you make remote shells, when the app is running on a kubernetes cluster, behind the load balancer? headless services?
[21:57:44] <m1dnight> doesn't kubernetes give you the ip for each instance?
[21:57:54] *** Quits: habamax (~habamax@user/habamax) (Quit: WeeChat 3.0)
[21:58:38] <rawtaz> m1dnight: it might very well be caching that is messing with you, sure
[21:59:05] <m1dnight> Last time I manually wrote all queries to do nearly all computation in the datbase, but that's really brittle.
[21:59:16] <rawtaz> heh yeah
[21:59:20] <fantazo> m1dnight: these ips are inside the cluster. only service IPs are exposed.
[21:59:33] <m1dnight> What do Real Developers(tm) do? Cache the function calls in elixir, or optimize it anyway?
[22:00:14] <m1dnight> fantazo: one optoin would be to have a container that exposes the remote shell as a service?
[22:00:15] <rawtaz> it very much depends on your use case, needs and requirements, and the architecture of the application
[22:00:38] <rawtaz> sometimes its fine with the cache the database provides. one might add to that an explicit data cache, e.g. using redis, thats very common.
[22:00:51] <rawtaz> going beyond that is generally speaking for much larger types of architectures
[22:00:55] <fantazo> m1dnight: hmm, *head scratch*
[22:01:01] *** Parts: fantazo (~fantazo@192-164-154-92.hdsl.highway.telekom.at) ()
[22:01:02] <rawtaz> also master-slave setup of databases isnt uncommon
[22:01:50] <m1dnight> This is all because of timezones *waves fist*
[22:02:04] * rawtaz blinks :O
[22:02:12] <m1dnight> Yeah, so the gist of it is the following.
[22:02:37] <m1dnight> I have records (time, value, type) that represent energy consumption
[22:02:41] <rawtaz> that it doesnt matter which way you turn or twist this, youll never get it right anyway
[22:03:09] <m1dnight> to calculate the consumption for the last n days, I just fire of n queries "all values between t1 and t2" where t1 and t2 are the midnight timestamps for a given timezone (that one of the browser)
[22:03:26] <m1dnight> this ensures you cannot use date_trunc in PSQL, because it's not aware of the timezone
[22:03:37] <m1dnight> unless I pass that in with the query, but then I'm in another world of pain I think
[22:31:26] <benwilson512> I'd do the time conversions in the elixir side
[22:49:47] *** Joins: phaleth (~phaleth@user/phaleth)
[22:55:26] *** Joins: bit4bit (~bit4bit@181.49.102.14)
[22:56:11] *** Quits: mizi_ (~mizi@user/mizi) (Ping timeout: 246 seconds)
[22:57:20] *** Joins: fwg_ (~fwg@user/fwg)
[22:58:42] *** Joins: wolfshappen (~waff@irc.furworks.de)
[23:00:11] *** Quits: fwg (~fwg@user/fwg) (Ping timeout: 260 seconds)
[23:02:01] *** Joins: KettleCorn (~kttl_crn@h64-35-193-106.cntcnh.dedicated.static.tds.net)
[23:10:59] *** Quits: mahmutov (~mahmutov@5.176.62.169) (Ping timeout: 252 seconds)
[23:13:08] *** Joins: mahmutov (~mahmutov@5.176.41.245)
[23:16:21] *** Quits: rgrinberg (~textual@177.248.158.166) (Quit: My MacBook has gone to sleep. ZZZzzz…)
