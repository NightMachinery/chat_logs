[00:02:38] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[00:05:01] *** Quits: evilpyro (~evilpyro@user/evilpyro) (Quit: Leaving)
[00:05:07] *** Joins: bolovanos_ (~bolovanos@user/bolovanos)
[00:08:01] *** Joins: MetroWind[m] (~mwdarksai@2001:470:69fc:105::1:e3a7)
[00:09:19] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[00:09:32] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[00:11:47] *** Joins: wickedmic (~wickedmic@2a02:908:1028:3140:2c7b:1bff:feb4:e91a)
[00:12:08] *** Quits: Giovanni (~Giovanni@176.67.166.45) (Remote host closed the connection)
[00:12:25] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Ping timeout: 256 seconds)
[00:15:56] *** Joins: Yruama (~Yruama@2a01:cb15:8128:c100:6c61:6a53:9bf0:64ca)
[00:16:20] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[00:19:04] *** Joins: Zogatribe (Zogatribe@user/zogatribe)
[00:21:29] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[00:21:46] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[00:21:52] *** Quits: andreasbuhr (~quassel@p549db93e.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:22:49] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:23:48] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[00:24:25] *** Joins: sbrothy (~sbrothy@192038132086.mbb.telenor.dk)
[00:26:52] *** Joins: RoKenn (~RoKenn@2001:a61:35b1:ca01:f871:9008:e595:ad5a)
[00:26:52] *** Quits: RoKenn (~RoKenn@2001:a61:35b1:ca01:f871:9008:e595:ad5a) (Changing host)
[00:26:52] *** Joins: RoKenn (~RoKenn@user/rokenn)
[00:29:19] *** Quits: RoKenn (~RoKenn@user/rokenn) (Client Quit)
[00:30:19] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[00:34:16] *** Quits: m_ben (~m_ben@user/m-ben/x-7429725) (Quit: WeeChat 3.4.1)
[00:34:32] *** Joins: RoKenn (~RoKenn@2001:a61:35b1:ca01:daeb:9226:aa3:3abd)
[00:34:33] *** Quits: RoKenn (~RoKenn@2001:a61:35b1:ca01:daeb:9226:aa3:3abd) (Changing host)
[00:34:33] *** Joins: RoKenn (~RoKenn@user/rokenn)
[00:49:11] *** Joins: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[00:50:16] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Read error: Connection reset by peer)
[00:51:00] *** Quits: pulse (~pulse@user/pulse) (Quit: { https://indiedevs.net/ })
[00:52:06] *** Quits: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:54:02] *** Joins: KAHR-Alpha (~Alpha@2a01cb0d024a66002c92c285d35cae12.ipv6.abo.wanadoo.fr)
[00:54:49] <ville> CarloWood: what do you consider to be a character?
[00:54:55] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[00:55:25] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 240 seconds)
[00:55:38] *** Joins: ckdCreations (~ckdCreati@147.55.130.38)
[00:56:11] <ville> CarloWood: https://manishearth.github.io/blog/2017/01/14/stop-ascribing-meaning-to-unicode-code-points/ can give you some idea what that might be
[00:58:22] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Remote host closed the connection)
[00:58:38] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[00:58:40] *** Quits: LuckyFire_ (~LuckyFire@79.125.172.127) (Read error: Connection reset by peer)
[01:00:13] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:f944:961e:33a0:8573)
[01:00:28] *** Quits: unknow (~i.am@user/marlboro) (Quit: a pentium 100 "running" windows 11 trying to play Last of Us II at ps4emu... that's my brain trying understand 0->R->R->R/2R->0)
[01:00:34] *** Joins: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net)
[01:04:56] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[01:05:34] *** Joins: sobkas (~sobkas@95.175.17.217)
[01:06:07] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[01:09:01] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[01:10:30] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[01:11:07] *** Joins: sobkas (~sobkas@95.175.17.217)
[01:11:55] *** Quits: PlasmaHH (~PlasamaHH@user/plasmahh) (Ping timeout: 256 seconds)
[01:14:41] *** Quits: heiner (~Thunderbi@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (Quit: heiner)
[01:15:49] *** Joins: heiner (~Thunderbi@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[01:18:49] *** Quits: magla (~gelignite@d53678fd.access.ecotel.net) (Quit: Stay safe!)
[01:21:32] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:f944:961e:33a0:8573) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:21:51] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[01:25:58] *** Quits: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:28:08] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[01:28:38] *** Quits: heiner (~Thunderbi@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (Quit: heiner)
[01:29:37] *** Quits: Zogatribe (Zogatribe@user/zogatribe) (Ping timeout: 240 seconds)
[01:30:37] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[01:32:05] *** Quits: unyu (~pyon@user/pyon) (Ping timeout: 250 seconds)
[01:36:50] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[01:38:36] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 252 seconds)
[01:38:55] *** Quits: sobkas (~sobkas@95.175.17.217) (Remote host closed the connection)
[01:39:33] *** Joins: sobkas (~sobkas@95.175.17.217)
[01:40:55] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Remote host closed the connection)
[01:41:25] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[01:42:00] *** Quits: reset (~reset@user/reset) (Quit: reset)
[01:42:14] *** Quits: sobkas (~sobkas@95.175.17.217) (Remote host closed the connection)
[01:43:07] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[01:43:25] *** Joins: kevr (~kevr@user/kevr)
[01:43:51] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Remote host closed the connection)
[01:44:17] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[01:44:41] *** Joins: sobkas (~sobkas@95.175.17.217)
[01:45:15] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[01:45:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[01:46:11] <PJBoy> how long has http://eel.is/c++draft/ostream.rvalue been in the standard :/
[01:46:35] *** Quits: sobkas (~sobkas@95.175.17.217) (Remote host closed the connection)
[01:47:14] *** Joins: sobkas (~sobkas@95.175.17.217)
[01:47:20] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[01:47:35] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[01:47:48] <kalven> cppreference says 11
[01:48:08] <PJBoy> huh, I couldn't find it in cppreference
[01:49:26] <PJBoy> oh it's over there
[01:59:31] *** Quits: sobkas (~sobkas@95.175.17.217) (Remote host closed the connection)
[02:00:08] *** Joins: sobkas (~sobkas@95.175.17.217)
[02:03:26] *** Joins: unlink2 (~unlink@p200300ebcf19f600f31648a859b660c5.dip0.t-ipconnect.de)
[02:07:00] *** Quits: str0 (~str0@178.220.28.32) (Remote host closed the connection)
[02:08:50] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[02:09:25] *** Joins: sobkas (~sobkas@95.175.17.217)
[02:11:07] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[02:11:20] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[02:12:23] *** Joins: seninha (~seninha@user/seninha)
[02:13:26] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[02:15:06] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Read error: Connection reset by peer)
[02:15:57] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[02:19:25] *** Quits: Ikkepop (~C-Man@78.31.190.82) (Ping timeout: 240 seconds)
[02:26:28] *** Joins: heiner (~Thunderbi@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[02:26:59] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[02:27:12] *** Joins: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de)
[02:28:56] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[02:30:02] *** Quits: mrus (~mrus@gateway/tor-sasl/mrus) (Remote host closed the connection)
[02:30:22] *** Joins: mrus (~mrus@gateway/tor-sasl/mrus)
[02:32:51] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[02:32:56] *** Quits: sbrothy (~sbrothy@192038132086.mbb.telenor.dk) (Read error: No route to host)
[02:33:12] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[02:33:33] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[02:39:30] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:39:50] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:42:01] *** Quits: g0se (~goose@111.199.80.15) (Ping timeout: 256 seconds)
[02:42:21] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[02:44:18] *** Joins: unyu (~pyon@user/pyon)
[02:44:19] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[02:44:28] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[02:44:28] *** ChanServ sets mode: +v npaperbot
[02:44:34] *** Joins: wolf2k_huh (~wolfman20@2600:1700:3211:4140:ed80:39cd:9f85:5968)
[02:44:48] *** Joins: RazielZ (~Raziel@user/raziel)
[02:47:24] *** Quits: wolfman2000 (~wolfman20@2600:1700:3211:4140:e10b:3250:d487:4a56) (Ping timeout: 240 seconds)
[02:47:48] *** Quits: Raziel (~Raziel@user/raziel) (Ping timeout: 240 seconds)
[02:48:20] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[02:49:59] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[02:50:10] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[02:56:52] *** Joins: ferdna (~ferdna@user/ferdna)
[02:58:35] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[02:59:45] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[03:01:43] *** Quits: evangeline (~Eleanor@178.79.105.181) (Ping timeout: 268 seconds)
[03:04:18] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[03:04:33] *** Joins: bindu (~bindu@user/bindu)
[03:05:00] *** Quits: Tokamak (~Tokamak@172.58.191.33) (Ping timeout: 240 seconds)
[03:05:14] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[03:06:33] *** Quits: ivii (~ivan@user/ivii) (Read error: Connection reset by peer)
[03:06:47] *** Joins: ivii (~ivan@user/ivii)
[03:09:31] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[03:09:34] *** Joins: Tokamak (~Tokamak@107.116.82.161)
[03:10:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[03:12:48] *** Joins: badone (~badone@209.132.189.136)
[03:15:48] *** Quits: mathe8989 (~wellmathe@dhcp-138-246-3-71.dynamic.eduroam.mwn.de) (Ping timeout: 240 seconds)
[03:17:23] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[03:22:18] *** Joins: C-Man (~C-Man@78.31.190.82)
[03:22:37] *** Quits: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Ping timeout: 240 seconds)
[03:24:27] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[03:28:04] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[03:29:06] *** Quits: ckdCreations (~ckdCreati@147.55.130.38) (Read error: Connection reset by peer)
[03:29:23] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[03:30:17] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 240 seconds)
[03:31:19] *** Joins: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net)
[03:31:39] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[03:33:21] *** Quits: pizdets_ (~pizdets@183.182.110.214) (Ping timeout: 256 seconds)
[03:33:51] *** Parts: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro) ()
[03:34:07] *** Joins: pizdets (~pizdets@183.182.111.79)
[03:36:27] *** Joins: Zogatribe (Zogatribe@user/zogatribe)
[03:40:17] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:47:24] *** Quits: leah2 (~leah@vuxu.org) (Ping timeout: 240 seconds)
[03:49:42] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[03:52:22] *** Quits: Cyp (~cyp@213.237.85.100) (Excess Flood)
[03:52:34] *** Quits: RazielZ (~Raziel@user/raziel) (Read error: Connection reset by peer)
[03:53:16] *** Joins: Cyp (~cyp@213.237.85.100)
[03:55:13] *** Joins: teepee (~teepee@openscad/teepee)
[03:56:05] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[03:56:14] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[03:56:24] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[03:58:25] *** Quits: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de) (Quit: Connection closed)
[04:01:16] *** Quits: nq (~nq@82.79.141.40) (Quit: Leaving)
[04:02:37] *** Joins: leah2 (~leah@vuxu.org)
[04:03:09] *** Joins: Raziel (~Raziel@user/raziel)
[04:06:24] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[04:07:28] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[04:08:12] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[04:11:19] *** Quits: Munnu (~timo@81-197-122-250.elisa-laajakaista.fi) (Ping timeout: 256 seconds)
[04:16:00] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[04:23:53] *** Joins: Munnu (~timo@81-197-122-250.elisa-laajakaista.fi)
[04:24:01] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[04:28:22] *** Quits: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:31:00] *** Joins: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de)
[04:34:48] *** Quits: zeenk (~zeenk@2a02:2f04:a110:7d00:2011:cfed:bad7:3c94) (Quit: Konversation terminated!)
[04:35:52] *** Joins: N4buc0 (~N4buc0@2804:7f4:348b:29b4:88e2:a62c:a498:2792)
[04:37:21] *** Quits: Munnu (~timo@81-197-122-250.elisa-laajakaista.fi) (Ping timeout: 252 seconds)
[04:49:58] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[04:50:02] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[04:50:15] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[04:50:19] *** Joins: Munnu (~timo@81-197-122-250.elisa-laajakaista.fi)
[04:52:28] *** Quits: N4buc0 (~N4buc0@2804:7f4:348b:29b4:88e2:a62c:a498:2792) (Remote host closed the connection)
[04:52:51] *** Joins: N4buc0 (~N4buc0@2804:7f4:348b:29b4:88e2:a62c:a498:2792)
[04:53:26] *** Joins: zer0x (~zer0x@1.55.170.252)
[04:55:04] *** Joins: pikapika_lunar (~pikapika_@pika.powered.by.lunarbnc.net)
[04:55:04] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[04:55:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[04:55:51] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[04:58:18] *** pikapika_lunar is now known as pikapika
[05:03:11] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 252 seconds)
[05:03:20] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[05:03:46] *** Joins: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net)
[05:03:54] *** Quits: N4buc0 (~N4buc0@2804:7f4:348b:29b4:88e2:a62c:a498:2792) (Remote host closed the connection)
[05:04:53] *** Joins: bolovanos__ (~bolovanos@user/bolovanos)
[05:08:53] *** Joins: chenqisu1 (~chenqisu1@183.217.201.88)
[05:09:00] *** Quits: bolovanos_ (~bolovanos@user/bolovanos) (Ping timeout: 260 seconds)
[05:10:39] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[05:11:37] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[05:11:47] *** Quits: bolovanos__ (~bolovanos@user/bolovanos) (Ping timeout: 260 seconds)
[05:12:40] *** Joins: g0se (~goose@111.199.80.15)
[05:16:43] *** Quits: senoraraton (~senorarat@192-195-83-130.static.monkeybrains.net) (Ping timeout: 256 seconds)
[05:17:08] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[05:17:31] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[05:17:51] *** Quits: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:20:47] *** Quits: llh (~UPP@user/llh) (Quit: :::: ( UPP ) ::::)
[05:21:07] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 250 seconds)
[05:21:25] *** Joins: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br)
[05:21:26] *** Quits: Linux77 (~LinuMage@189-48-140-124.user3p.veloxzone.com.br) (Client Quit)
[05:22:48] *** Joins: Linux77 (~L30n4rd0@189-48-140-124.user3p.veloxzone.com.br)
[05:23:03] *** Joins: fengdaolong (~fengdaolo@171.43.210.166)
[05:23:09] *** Joins: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net)
[05:23:27] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[05:25:22] *** zz is now known as anyone
[05:26:21] *** Joins: Pwnna (~Pwnna@mushroom.thekks.net)
[05:27:19] <Pwnna> So let's say I have A a; { A& b = a; }. So technically b went out of scope, but the deconstructor didn't get called (makes sense, otherwise it would be chaos). How is this implemented?
[05:27:33] <Pwnna> Is it because b is basically just a const pointer which means when it "goes out of scope" basically nothing happens
[05:27:59] <anyone> since b is a reference (and a is the original object), the dtor of b (if you can call it that) does nothing
[05:28:17] *** Joins: nicbk (~nicbk@user/nicbk)
[05:28:34] <Pwnna> is that like a part of the standard?
[05:28:48] <anyone> no, that's just for making sense of it
[05:29:13] <AliceMeows> b does not own the instance of A it only refers to one
[05:29:18] <Pwnna> yeah
[05:29:50] <anyone> the type is A* (or A&), and  A*::~A* (if one could write it like this - of course you can't) is a noop because it's a fundamental type like int
[05:29:58] <Pwnna> exactly
[05:30:54] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[05:31:01] <Pwnna> that's what i was saying originally that A& is really just A *const which is basically an integer and the destructor is basically a noop
[05:31:25] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[05:31:28] <anyone> A& need not be a pointer, standards-wise
[05:31:33] <Pwnna> fair enough
[05:31:46] <Pwnna> my understanding is that every variable will get its destructor called (no-op or not) when they go out scope. So I was just wondering how that's implemented for a reference
[05:31:50] <anyone> "trivial destruction" (or trivially-destructible), that's it, that's what you'll find in the standard
[05:31:55] *** Joins: str0 (~str0@178.220.28.32)
[05:31:59] <Pwnna> ah ok that's the keyword i should look up
[05:32:33] <anyone> well, since references are trivially destructible in that sense, there's no implementation to speak of :p
[05:32:45] <Pwnna> right
[05:32:51] <Pwnna> yeah ok that makes sense
[05:33:39] <Pwnna> thanks!
[05:34:22] *** Joins: epony (epony@user/epony)
[05:34:28] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[05:34:36] <anyone> in gcc, "HAS_TRIVIAL_DESTRUCTOR" smells like implementation
[05:34:43] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[05:40:41] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[05:40:53] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[05:42:49] *** Quits: anyone (~filler@a4.inai.de) (Quit: *)
[05:43:15] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[05:44:20] *** Joins: anyone (~filler@a4.inai.de)
[05:44:28] *** anyone is now known as zz
[05:46:11] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[05:51:03] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Remote host closed the connection)
[05:53:52] *** Quits: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:54:51] <zz> << is_trivially_destructible_v<string &>
[05:54:51] <geordi> true
[06:01:24] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-2420-4733-60a5-9d17.res6.spectrum.com) (Ping timeout: 240 seconds)
[06:02:57] *** Joins: Octarine (~Octarine@p0597515-vcngn.tkyo.nt.ngn.ppp.ocn.ne.jp)
[06:03:25] *** Joins: KAHR-Alpha_ (~Alpha@lfbn-rei-1-143-120.w86-225.abo.wanadoo.fr)
[06:04:40] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-0874-3206-ce5b-fa50.res6.spectrum.com)
[06:05:16] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-0874-3206-ce5b-fa50.res6.spectrum.com) (Remote host closed the connection)
[06:05:29] *** Quits: KAHR-Alpha (~Alpha@2a01cb0d024a66002c92c285d35cae12.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[06:07:46] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[06:14:46] *** Joins: Techcable (~Techcable@user/Techcable)
[06:15:26] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: CodePoint struts into the sunset on the beach.)
[06:16:16] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[06:16:45] *** Quits: rootx74 (~root@108.61.89.107) (Changing host)
[06:16:45] *** Joins: rootx74 (~root@user/rootx74)
[06:18:08] *** Joins: clime (~clime@89.24.40.184)
[06:18:18] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-0874-3206-ce5b-fa50.res6.spectrum.com)
[06:19:24] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-0874-3206-ce5b-fa50.res6.spectrum.com) (Read error: Connection reset by peer)
[06:19:32] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[06:19:48] *** rootx74 is now known as cryptobug
[06:20:35] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[06:20:46] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-0874-3206-ce5b-fa50.res6.spectrum.com)
[06:21:02] *** Quits: Posterdati (~posterdat@user/Posterdati) (Ping timeout: 240 seconds)
[06:23:43] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[06:27:08] *** Joins: Yruama_ (~Yruama@2a01:cb15:8128:c100:6c61:6a53:9bf0:64ca)
[06:27:18] *** Quits: Yruama (~Yruama@2a01:cb15:8128:c100:6c61:6a53:9bf0:64ca) (Read error: Connection reset by peer)
[06:28:07] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[06:29:49] <zz> map::emplace_hint arguably works best with map::lower_bound (because then you reach the amortized constant case mentioned in https://en.cppreference.com/w/cpp/container/map/emplace_hint),
[06:29:49] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[06:30:00] <zz> but what do you use for unordered_map::emplace_hint, since there's no lower_bound there?
[06:30:18] *** Joins: abode (~abode@2001:8f8:1263:f81:8230:49ff:fe6e:36b5)
[06:30:37] <zz> ..oO(hm I could just look at stdlibc++ and its try_emplace function)
[06:30:39] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[06:32:11] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 250 seconds)
[06:34:13] *** Joins: Posterdati (~posterdat@user/Posterdati)
[06:37:36] *** Quits: Octarine (~Octarine@p0597515-vcngn.tkyo.nt.ngn.ppp.ocn.ne.jp) (Quit: Client closed)
[06:37:55] <Alipha> zz: eg, if you were inserting a bunch of elements, you could use emplace_hint several times in a row, using the return value from the previous emplace for the next emplace
[06:38:04] <Alipha> Oh
[06:38:10] <Alipha> unordered_map
[06:38:55] <Alipha> zz: I think the unordered_map hint functions were just added for consistency
[06:43:22] <bpalmer> 'The hint allows the unordered map implementation to do a value compare first to see if the hint works. This avoids having to do the hash function which can be more costly than a compare operation.' is one possibility, mentioned at https://stackoverflow.com/questions/15559655/stdunordered-map-insert-with-hint )
[06:44:04] <bpalmer> which is at least worth thinking about, although the most upvoted answers are about consistency.
[06:44:20] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[06:44:29] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[06:44:29] *** ChanServ sets mode: +v npaperbot
[06:46:36] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 252 seconds)
[06:47:23] *** Quits: fengdaolong (~fengdaolo@171.43.210.166) (Quit: WeeChat 2.8)
[06:48:43] *** Parts: cryptobug (~root@user/rootx74) (Leaving)
[06:54:21] *** Joins: cryptobug (~root@user/rootx74)
[06:55:23] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[07:00:38] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[07:03:28] *** Joins: Xardas (~Xardas@149.233.51.127)
[07:10:09] *** Quits: Yruama_ (~Yruama@2a01:cb15:8128:c100:6c61:6a53:9bf0:64ca) (Quit: Leaving)
[07:12:06] *** Quits: clime (~clime@89.24.40.184) (Ping timeout: 272 seconds)
[07:15:00] *** Joins: senoraraton (~senorarat@148-64-109-17.PUBLIC.monkeybrains.net)
[07:15:38] *** Joins: Inline__ (~Inline@p200300cd470cc200742cdab66a29c7e1.dip0.t-ipconnect.de)
[07:17:49] *** Quits: Inline (~Inline@p200300cd4709ad00c6efe95d186eec52.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[07:23:05] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 256 seconds)
[07:24:35] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[07:28:24] *** Quits: senoraraton (~senorarat@148-64-109-17.PUBLIC.monkeybrains.net) (Ping timeout: 252 seconds)
[07:30:03] *** Quits: smeso (~smeso@user/smeso) (Quit: smeso)
[07:31:05] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[07:33:42] *** Joins: LunarJetman (Zogatribe@user/zogatribe)
[07:34:54] *** Quits: Zogatribe (Zogatribe@user/zogatribe) (Ping timeout: 272 seconds)
[07:37:16] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[07:37:26] *** Joins: senoraraton (~senorarat@148-64-109-17.PUBLIC.monkeybrains.net)
[07:38:57] *** Quits: KAHR-Alpha_ (~Alpha@lfbn-rei-1-143-120.w86-225.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[07:39:00] *** Quits: unlink2 (~unlink@p200300ebcf19f600f31648a859b660c5.dip0.t-ipconnect.de) (Remote host closed the connection)
[07:39:23] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:39:41] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Remote host closed the connection)
[07:41:54] *** Joins: smeso (~smeso@user/smeso)
[07:46:38] *** Joins: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96)
[07:50:01] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Quit: kaiseisei)
[07:52:07] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[07:53:05] *** Joins: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net)
[07:54:23] *** Quits: str0 (~str0@178.220.28.32) (Quit: Leaving)
[07:58:57] *** Joins: abode_ (~abode@94.59.225.33)
[07:59:19] *** Quits: cryptobug (~root@user/rootx74) (Quit: ZNC 1.8.2 - https://znc.in)
[07:59:28] *** Joins: rootx74 (~root@108.61.89.107)
[08:00:47] *** Parts: rootx74 (~root@108.61.89.107) ()
[08:00:52] *** Quits: senoraraton (~senorarat@148-64-109-17.PUBLIC.monkeybrains.net) (Ping timeout: 272 seconds)
[08:01:39] *** Quits: abode (~abode@2001:8f8:1263:f81:8230:49ff:fe6e:36b5) (Ping timeout: 260 seconds)
[08:16:52] <Alipha> bpalmer: that would only work if the key is already in the map, in which case, it seems odd to optimize for the case where the key already exists and the insert is not performed.
[08:20:15] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[08:21:14] *** Joins: EdFletcher (~PKD@user/edfletcher)
[08:23:52] *** Quits: EdFletcher (~PKD@user/edfletcher) (Remote host closed the connection)
[08:25:53] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[08:28:15] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 256 seconds)
[08:31:05] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[08:31:32] *** Joins: EdFletcher (~PKD@user/edfletcher)
[08:43:15] *** Quits: nicbk (~nicbk@user/nicbk) (Ping timeout: 240 seconds)
[08:45:47] *** Parts: AliceMeows (~AliceMeow@user/alicemeows) ()
[08:51:37] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[08:54:57] *** Joins: ironman (~ironman@2405:201:1010:b026:5f00:b63f:4116:bd78)
[08:57:08] *** Quits: LunarJetman (Zogatribe@user/zogatribe) (Read error: Connection reset by peer)
[08:59:48] *** Quits: hashfunc569 (~user@2601:5c0:c280:7090:78e9:5f82:1899:8c96) (Ping timeout: 240 seconds)
[09:03:50] *** Joins: cryptobug (~root@108.61.89.107)
[09:05:35] *** Quits: mad_enz (~mad_enz@lnsm4-toronto12-50-101-118-206.internet.virginmobile.ca) (Ping timeout: 250 seconds)
[09:07:23] *** Quits: duds- (~duds-@user/duds) (Ping timeout: 252 seconds)
[09:08:48] *** Joins: millido (~millido@84.210.150.128)
[09:09:03] *** Quits: jsbach (~jsbach@2a01:c23:61a1:e900:82f3:2db5:ad58:cd06) (Ping timeout: 252 seconds)
[09:09:03] *** Quits: cation (cation@user/cation) (Ping timeout: 252 seconds)
[09:10:30] *** Joins: cation (cation@user/cation)
[09:11:20] *** Joins: Prof_Dumbledore (~Prof_Dumb@2405:204:9314:995e:a441:a73c:588a:ffcc)
[09:13:02] *** Joins: unlink2 (~unlink@p200300ebcf19f600f31648a859b660c5.dip0.t-ipconnect.de)
[09:16:45] *** Joins: c4017 (~c4017@2604:3d08:747f:7c90:6c75:c89d:916b:3b14)
[09:16:48] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[09:17:46] *** Joins: EdFletcher (~PKD@user/edfletcher)
[09:19:47] *** Quits: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de) (Quit: Connection closed)
[09:20:29] *** Joins: duds- (~duds-@user/duds)
[09:20:29] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[09:21:47] *** Joins: jsbach (~jsbach@2a01:c23:6503:2e00:b63b:c294:6c9:2b6a)
[09:23:47] *** Quits: sreve (~quassel@p4ff44e04.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[09:23:51] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Remote host closed the connection)
[09:23:52] *** Joins: sreve_ (~quassel@p4ff44c08.dip0.t-ipconnect.de)
[09:24:16] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[09:27:28] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[09:39:11] *** Quits: zer0x (~zer0x@1.55.170.252) (Ping timeout: 260 seconds)
[09:53:17] *** Joins: shelf (~shelf@198.232.120.151)
[09:57:33] *** Joins: ironman_ (~ironman@2409:4042:2e13:fb83:14fd:98d6:7357:8596)
[09:59:48] *** Quits: ironman (~ironman@2405:201:1010:b026:5f00:b63f:4116:bd78) (Ping timeout: 240 seconds)
[10:01:30] *** ironman_ is now known as ironman
[10:03:13] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[10:06:19] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[10:19:57] *** Quits: ironman (~ironman@2409:4042:2e13:fb83:14fd:98d6:7357:8596) (Ping timeout: 240 seconds)
[10:25:32] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[10:26:32] *** Joins: EdFletcher (~PKD@user/edfletcher)
[10:26:48] *** Joins: ironman (~ironman@2409:4042:2e13:fb83:14fd:98d6:7357:8596)
[10:26:59] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[10:27:14] *** Quits: badone (~badone@209.132.189.136) (Quit: ZNC 1.7.5 - https://znc.in)
[10:27:24] *** Quits: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:29:33] *** Joins: dkdn (~dkdn@178.49.152.151)
[10:31:47] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[10:32:36] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[10:32:55] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[10:33:57] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[10:35:45] *** Quits: dkdn (~dkdn@178.49.152.151) (Ping timeout: 256 seconds)
[10:36:06] *** Joins: clime (~clime@89.24.40.184)
[10:38:10] *** Joins: dkdn (~dkdn@178.49.152.151)
[10:43:23] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[10:43:59] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[10:44:20] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[10:44:29] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[10:44:29] *** ChanServ sets mode: +v npaperbot
[10:47:06] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[10:47:28] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[10:50:14] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[10:51:14] *** Joins: EdFletcher (~PKD@user/edfletcher)
[10:53:22] *** Joins: CalamityBloo (~CalamityB@user/CalamityBlue)
[10:56:36] *** Quits: CalamityToo (~CalamityB@user/CalamityBlue) (Ping timeout: 240 seconds)
[11:05:48] *** Quits: clime (~clime@89.24.40.184) (Ping timeout: 272 seconds)
[11:08:58] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[11:09:12] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[11:11:42] *** Quits: shelf (~shelf@198.232.120.151) (Ping timeout: 252 seconds)
[11:11:49] *** Joins: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net)
[11:11:55] *** Quits: jsbach (~jsbach@2a01:c23:6503:2e00:b63b:c294:6c9:2b6a) (Remote host closed the connection)
[11:12:31] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 260 seconds)
[11:15:05] *** Quits: ironman (~ironman@2409:4042:2e13:fb83:14fd:98d6:7357:8596) (Quit: Leaving)
[11:15:17] *** Joins: hinata (~hinata@2409:4042:d03:5395:8438:c568:cb89:63f8)
[11:15:55] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 240 seconds)
[11:18:02] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[11:19:04] *** Quits: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:24:04] *** Joins: dkdn54 (~dkdn@178.49.152.151)
[11:25:43] *** Joins: dkdn76 (~dkdn@178.49.154.151)
[11:26:01] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[11:26:09] *** Quits: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:27:19] *** Quits: dkdn (~dkdn@178.49.152.151) (Ping timeout: 256 seconds)
[11:29:03] *** Joins: zer0x (~zer0x@1.55.170.252)
[11:29:35] *** Quits: dkdn54 (~dkdn@178.49.152.151) (Ping timeout: 256 seconds)
[11:30:09] *** Quits: dkdn76 (~dkdn@178.49.154.151) (Ping timeout: 256 seconds)
[11:30:40] *** Quits: zer0x (~zer0x@1.55.170.252) (Read error: Connection reset by peer)
[11:30:58] *** Joins: zer0x (~zer0x@1.55.170.252)
[11:32:21] *** emerent is now known as Guest6773
[11:32:21] *** Joins: emerent_ (~quassel@p200300cd5743c336ba27ebfffed28a59.dip0.t-ipconnect.de)
[11:32:22] *** Quits: Guest6773 (~quassel@p200300cd5743c377ba27ebfffed28a59.dip0.t-ipconnect.de) (Killed (calcium.libera.chat (Nickname regained by services)))
[11:32:22] *** emerent_ is now known as emerent
[11:35:54] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 252 seconds)
[11:36:57] *** Joins: Enitin (~Enitin@82.180.145.227)
[11:38:05] *** Joins: JohnMS_WORK (~kvirc@194.110.240.100)
[11:41:34] *** Joins: pottsy (~pottsy@2400:4050:b560:3700:95a9:bb69:4209:aa9b)
[11:42:58] *** Quits: rwb (~augh@alogs.space) (Excess Flood)
[11:43:10] *** Joins: rwb (~augh@alogs.space)
[11:43:17] *** Quits: Enitin (~Enitin@82.180.145.227) (Ping timeout: 240 seconds)
[11:44:48] *** rwb is now known as rb
[11:48:01] *** Joins: ironman__ (~ironman@103.133.229.155)
[11:53:23] *** ironman__ is now known as ironman
[11:55:39] *** Joins: mathe8989 (~wellmathe@dhcp-138-246-3-71.dynamic.eduroam.mwn.de)
[11:59:28] *** Joins: evangeline (~Eleanor@178.79.105.181)
[12:07:37] *** Quits: hinata (~hinata@2409:4042:d03:5395:8438:c568:cb89:63f8) (Ping timeout: 240 seconds)
[12:08:34] *** Joins: hinata (~hinata@2409:4042:e0d:132c:8438:c568:cb89:63f8)
[12:14:07] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[12:22:34] *** Joins: zeenk (~zeenk@2a02:2f04:a110:7d00:2011:cfed:bad7:3c94)
[12:23:34] *** Quits: wyre (~wyre@user/wyre) (Quit: ZNC 1.8.2 - https://znc.in)
[12:25:52] *** Joins: wyre (~wyre@user/wyre)
[12:27:43] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[12:28:23] *** Joins: Enitin (~Enitin@82.102.22.85)
[12:32:28] *** Joins: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de)
[12:32:29] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[12:38:12] *** Quits: hinata (~hinata@2409:4042:e0d:132c:8438:c568:cb89:63f8) (Ping timeout: 240 seconds)
[12:40:17] *** Joins: hinata (~hinata@2409:4042:e0d:132c:8438:c568:cb89:63f8)
[12:41:31] *** Quits: Prof_Dumbledore (~Prof_Dumb@2405:204:9314:995e:a441:a73c:588a:ffcc) (Quit: Leaving)
[12:43:44] *** Joins: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[12:46:08] *** Joins: Major_Biscuit (~MajorBisc@c-001-015-045.client.tudelft.eduvpn.nl)
[12:46:19] *** Quits: hinata (~hinata@2409:4042:e0d:132c:8438:c568:cb89:63f8) (Ping timeout: 260 seconds)
[12:48:17] *** Quits: Sadale (~Sadale@user/sadale) (Ping timeout: 240 seconds)
[12:49:07] *** Joins: Sadale (~Sadale@user/sadale)
[12:49:56] *** Quits: MajorBiscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 245 seconds)
[12:51:15] *** Quits: ironman (~ironman@103.133.229.155) (Quit: Leaving)
[12:55:58] *** Joins: nq (~nq@2a02:2f08:e015:a900:e603:7a30:2c23:12e)
[13:03:07] *** Joins: hinata (~hinata@2409:4042:e0d:132c:8438:c568:cb89:63f8)
[13:03:36] *** Joins: zibolo (~quassel@global-deiInside018.dei.polimi.it)
[13:11:46] *** Joins: bobb_ (~bobb_@dslb-092-074-253-191.092.074.pools.vodafone-ip.de)
[13:14:03] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[13:14:19] *** Quits: rvalue (~rvalue@user/rvalue) (Remote host closed the connection)
[13:15:00] *** Joins: rvalue (~rvalue@user/rvalue)
[13:22:35] *** Joins: ironman (~ironman@2405:201:1010:b026:5f00:b63f:4116:bd78)
[13:24:30] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Ping timeout: 272 seconds)
[13:25:13] *** Joins: rendar (~rendar@user/rendar)
[13:26:32] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[13:27:08] *** Joins: jsbach (~jsbach@2a01:c23:6503:2e00:20af:254d:e8dd:27a0)
[13:27:50] <ville> Alipha: why would it be odd? the data is what the data is and it may very well be a very common operation
[13:35:18] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[13:35:54] *** Quits: hinata (~hinata@2409:4042:e0d:132c:8438:c568:cb89:63f8) (Quit: Leaving)
[13:38:33] *** Quits: C-Man (~C-Man@78.31.190.82) (Ping timeout: 252 seconds)
[13:39:20] *** Quits: Cahaan (~Cahaan@user/cahaan) (Read error: Connection reset by peer)
[13:41:52] *** Joins: Cahaan (~Cahaan@user/cahaan)
[13:46:44] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:47:37] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[13:47:48] *** Quits: skapate (~Skapata@user/skapata) (Read error: Connection reset by peer)
[13:51:17] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[13:53:46] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[13:57:05] *** zz is now known as anyone
[14:01:14] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Quit: Leaving)
[14:01:22] *** Joins: ivii (~ivan@user/ivii)
[14:03:39] *** Joins: ironman_ (~ironman@2409:4042:2e13:fb83:14fd:98d6:7357:8596)
[14:03:47] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 260 seconds)
[14:04:47] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[14:05:01] *** Joins: Enitin (~Enitin@82.180.145.227)
[14:05:48] *** Quits: ironman (~ironman@2405:201:1010:b026:5f00:b63f:4116:bd78) (Ping timeout: 240 seconds)
[14:06:14] *** ironman_ is now known as ironman
[14:06:17] <ville> if humans are the ones "generating" the keys then i'd expect there to be a very well pronounced group that occur very often
[14:08:44] *** Joins: arch_angel (~arch-ange@user/arch-angel)
[14:08:56] *** Quits: arch_angel (~arch-ange@user/arch-angel) (Remote host closed the connection)
[14:09:37] *** Joins: plastico (~plastico@neomutt/plastico)
[14:10:40] *** gentooclimax is now known as climax
[14:13:16] *** Joins: ironman_ (~ironman@2405:201:1010:b026:5f00:b63f:4116:bd78)
[14:15:24] *** Quits: ironman (~ironman@2409:4042:2e13:fb83:14fd:98d6:7357:8596) (Ping timeout: 240 seconds)
[14:17:53] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[14:18:22] *** Joins: LucaTM (~LucaTM@user/lucatm)
[14:19:53] *** Joins: karakedi (~eAC53C340@user/karakedi)
[14:21:19] *** climax is now known as gentooclimax
[14:23:57] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[14:24:52] *** Joins: toulene9 (~toulene@user/toulene)
[14:25:49] *** Quits: toulene (~toulene@user/toulene) (Ping timeout: 240 seconds)
[14:25:49] *** toulene9 is now known as toulene
[14:28:10] *** ironman_ is now known as ironman
[14:29:01] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[14:29:24] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[14:30:01] *** Joins: oaulakh_ (~oaulakh@106.204.79.108)
[14:31:47] <oaulakh_> https://paste.debian.net/1235433/ can anyone helpful with this arduino code which looks like c++ but arduino channel not responding that's. it always shows "LED ON", i think i'm doing something wrong with payload datatype coversion which is in bytes raw
[14:31:49] *** Joins: the_lanetly_052 (~the_lanet@194.135.166.224)
[14:33:38] <anyone> if it's not c++, then it's not c++.
[14:33:49] <anyone> !ford
[14:33:49] <nolyc> ford focus
[14:34:16] <PJBoy> looks like C++ to me
[14:34:41] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[14:35:22] <urdh> lacks details though
[14:35:38] <anyone> "I tried to buy a Renault in a Renault shop, but there were no salesmen available, so I came into this Ford shop. Why won't you sell me a Renault?!"
[14:35:52] <urdh> e.g. what kind of type is String, and what does its bool conversion operator do
[14:37:36] <oaulakh_> anyone, ok right analogy, but if i am making a custom with renault engine than speed and mileage would be same rather the fact weight of both car bodies are same
[14:37:47] <oaulakh_> custom car*
[14:37:51] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 260 seconds)
[14:38:17] <PJBoy> it's not gonna be productive to discuss the nuances of that analogy
[14:39:03] <PJBoy> the arduino docs don't mention a bool conversion operator for String :/
[14:39:09] *** Joins: Dreadnaught (Kulrak@n122-109-183-238.rdl2.qld.optusnet.com.au)
[14:40:10] <oaulakh_> so in arduino linker automatically inherit the default required libs so we don't have program specifics which are repeatable. so arduino channel wasn't responding so someone in #C channel suggest me to ask in #C++ so yeah. here we are discussing renault in C channel. sorry
[14:40:41] <PJBoy> would probably suggest not using the bool conversion, as it's seemingly undocumented
[14:41:21] <oaulakh_> ok then can i convert bytes numerical data into int??? if yes then any tutorials?
[14:41:23] <urdh> oaulakh_: right, but that's in effect an *Arduino* standard library, which would typically be a topic for #C++-general (or indeed #arduino) unless you have a very specific *language*-related question
[14:41:41] *** Quits: Kulrak (~Kulrak@n122-109-114-101.rdl1.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[14:41:53] <urdh> this seems to just be a confusion regarding the API of that String type, which is technically off topic
[14:42:08] <urdh> but it's not like there's high traffic in here at the moment so who cares
[14:42:34] *** Joins: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de)
[14:42:44] <oaulakh_> urdh, just where i'm reading wrong "payload", so i can understand mqtt raw string to use in my code to input value for other embedded connected devives to activate
[14:43:06] <oaulakh_> urdh, thanks
[14:43:25] <urdh> oaulakh_: that depends very much on what you mean by "bytes numerical data" - is it human-readable string, serialized integers (what byte order?), something else?
[14:43:28] <PJBoy> so just to confirm, the string contains bytes that should be interpreted as an int
[14:43:36] <PJBoy> rather than a string of ascii numerical characters
[14:44:15] <PJBoy> if you have a string of ascii numerical characters, then you've got .toInt() and life is easy
[14:44:21] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[14:44:31] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[14:44:31] *** ChanServ sets mode: +v npaperbot
[14:44:33] *** Quits: Ali_A (~Ali_A@dslb-088-070-113-094.088.070.pools.vodafone-ip.de) (Client Quit)
[14:44:44] *** Joins: slidercrank (~slidercra@user/slidercrank)
[14:45:28] <oaulakh_> PJBoy, yes String which nothing but raw numbers
[14:45:47] <oaulakh_> ok ok
[14:46:05] <PJBoy> then yeah need number of bytes + endianness
[14:46:34] <oaulakh_> of some variable have raw ascii text like "123" i can covert them by putting .toInt() right?
[14:46:53] <PJBoy> docs would indicate so, yeah
[14:47:10] <oaulakh_> ok thanks, PJBoy let me try
[14:52:36] <oaulakh_> PJBoy, it works bro
[14:53:17] <PJBoy> nice
[14:53:28] <ville> !general
[14:53:29] <nolyc> #C++-general for algorithms, libraries, practices, projects, tools etc.
[14:53:34] <oaulakh_> PJBoy, now where i can learn dataconversion and datatypes so i can send raw bytes data from mqtt server or JSON would be fine
[14:54:04] <PJBoy> search integer deserialisation
[14:54:10] *** Joins: unknow (~i.am@user/marlboro)
[14:54:17] *** Quits: wyre (~wyre@user/wyre) (Quit: ZNC 1.8.2 - https://znc.in)
[14:55:29] *** Joins: wyre (~wyre@user/wyre)
[14:56:56] <oaulakh_> PJBoy, ok
[14:56:58] *** gentooclimax is now known as climax
[15:01:26] *** Joins: m_ben (~m_ben@user/m-ben/x-7429725)
[15:03:23] *** Quits: zeenk (~zeenk@2a02:2f04:a110:7d00:2011:cfed:bad7:3c94) (Quit: Konversation terminated!)
[15:08:48] *** Quits: oaulakh_ (~oaulakh@106.204.79.108) (Quit: Leaving)
[15:10:28] *** climax is now known as gentooclimax
[15:15:07] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Ping timeout: 256 seconds)
[15:15:24] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Ping timeout: 240 seconds)
[15:17:08] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[15:21:34] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[15:21:59] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[15:31:39] *** Joins: C-Man (~C-Man@static.187.59.243.136.clients.your-server.de)
[15:34:15] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[15:36:32] *** Joins: Sadale (~Sadale@user/sadale)
[15:37:21] *** Quits: chenqisu1 (~chenqisu1@183.217.201.88) (Quit: Leaving)
[15:39:49] *** Quits: Sadale (~Sadale@user/sadale) (Client Quit)
[15:40:30] *** Z`aT is now known as T`aZ
[15:44:18] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[15:46:09] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[15:51:56] *** Joins: jplejacq (~jplejacq@24.224.90.176)
[15:54:59] *** Quits: jplejacq (~jplejacq@24.224.90.176) (Client Quit)
[16:02:12] *** Joins: clime (~clime@89-24-40-184.nat.epc.tmcz.cz)
[16:03:32] *** Joins: andreasbuhr (~quassel@p549dba69.dip0.t-ipconnect.de)
[16:03:32] *** Quits: andreasbuhr (~quassel@p549dba69.dip0.t-ipconnect.de) (Client Quit)
[16:07:17] *** Quits: JohnMS_WORK (~kvirc@194.110.240.100) (Ping timeout: 240 seconds)
[16:08:09] *** Quits: proller (~p@2a02:6b8:b081:1222::1:34) (Ping timeout: 252 seconds)
[16:08:32] *** Quits: Enitin (~Enitin@82.180.145.227) (Ping timeout: 272 seconds)
[16:09:16] *** Joins: Enitin (~Enitin@82.180.145.226)
[16:09:38] *** Joins: jplejacq (~jplejacq@24.224.90.176)
[16:12:15] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Ping timeout: 240 seconds)
[16:13:47] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[16:15:49] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[16:16:51] *** Joins: bebyx (~Thunderbi@user/bebyx)
[16:18:35] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[16:21:42] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[16:22:49] *** Quits: abode_ (~abode@94.59.225.33) (Remote host closed the connection)
[16:24:31] *** Quits: Major_Biscuit (~MajorBisc@c-001-015-045.client.tudelft.eduvpn.nl) (Ping timeout: 245 seconds)
[16:28:52] *** Joins: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl)
[16:29:12] *** Joins: Major_Biscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[16:33:24] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (Ping timeout: 240 seconds)
[16:33:54] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[16:35:07] *** Joins: guest (~guest@2804:14c:6583:6001:b19:38fe:b614:5cfc)
[16:37:02] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[16:38:07] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[16:43:21] *** Joins: Sadale (~Sadale@user/sadale)
[16:45:32] *** Joins: reset (~reset@user/reset)
[16:45:42] *** Parts: cryptobug (~root@108.61.89.107) (Leaving)
[16:46:55] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Ping timeout: 240 seconds)
[16:49:50] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[16:51:57] *** Parts: rewrit3 (~rewrit3@user/rewrit3) ()
[16:52:59] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[16:57:44] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[16:58:58] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[16:59:17] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[17:03:56] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[17:06:39] <Eelis> does C++ have a convenient way to get a string with the current date in ISO format? e.g. "2022-03-24"
[17:06:48] <Eelis> going through strftime is super tedious
[17:07:10] <anyone> <fmt/chrono.h>
[17:07:17] <anyone> https://fmt.dev/6.0.0/api.html#chrono-api
[17:07:34] <Eelis> i mean in the stdlib, not custom libs
[17:08:45] <Eelis> ah, it does look like C++23's std::format supports some chrono stuff
[17:08:51] <Eelis> guess i'll have to wait a few years then
[17:09:35] <anyone> by the looks of it, std::format will just be like fmt:: (or rather, fmt was modeled on the std proposal)
[17:09:53] <Eelis> i think the fmt lib long predates any format lib proposals
[17:10:01] <Eelis> stdlib proposals, i mean
[17:12:26] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 245 seconds)
[17:13:24] *** Quits: Oxyd (~oxyd@user/oxyd) (Ping timeout: 240 seconds)
[17:13:31] <m_ben> Eelis: what about https://en.cppreference.com/w/cpp/io/manip/put_time ?
[17:14:08] *** Quits: xq (~xq@user/xq) (Ping timeout: 252 seconds)
[17:14:14] *** Joins: Oxyd (~oxyd@user/oxyd)
[17:14:58] <Eelis> well, two things: (1) it's for iostreams, which is already tedious if you just want a string (2) it takes a std::tm*, not some chrono type
[17:15:13] <Eelis> so i'm sure it can be made to work, but i'm not sure it's convenient
[17:15:34] <Eelis> as it requires a bunch of additional conversions
[17:16:31] *** Quits: Major_Biscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 260 seconds)
[17:17:36] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[17:18:15] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[17:18:26] *** Joins: Major_Biscuit (~MajorBisc@c-001-015-045.client.tudelft.eduvpn.nl)
[17:20:43] *** Quits: belphegor666 (~satan@user/belphegor666) (Ping timeout: 260 seconds)
[17:22:22] *** Joins: Coldberg (~C-Man@78.31.190.82)
[17:24:31] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[17:25:42] *** Joins: PlasmaHH (~PlasamaHH@user/plasmahh)
[17:25:47] *** Joins: proller (~p@2a02:6b8:b081:b65d::1:15)
[17:27:04] *** Quits: C-Man (~C-Man@static.187.59.243.136.clients.your-server.de) (Ping timeout: 272 seconds)
[17:28:15] *** Quits: teepee (~teepee@openscad/teepee) (Ping timeout: 240 seconds)
[17:30:46] *** Joins: Payam54 (~Payam@138.106.57.131)
[17:32:58] *** Joins: lurker (~lurker@2001:448a:50e0:b87d:1bc3:6845:9b7b:92aa)
[17:33:12] *** Joins: Xardas (~Xardas@149.233.51.127)
[17:33:58] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[17:34:36] *** Joins: mad_enz (~mad_enz@lnsm4-toronto12-50-101-118-206.internet.virginmobile.ca)
[17:34:43] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[17:34:56] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[17:38:39] *** Joins: Atque (~Atque@user/atque)
[17:39:38] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[17:40:45] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[17:41:11] *** Joins: str0 (~str0@178.220.28.32)
[17:43:08] *** Quits: ironman (~ironman@2405:201:1010:b026:5f00:b63f:4116:bd78) (Quit: Leaving)
[17:43:35] *** Quits: Enitin (~Enitin@82.180.145.226) (Ping timeout: 260 seconds)
[17:46:04] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[17:46:36] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:47:06] *** Quits: pizdets (~pizdets@183.182.111.79) (Quit: pizdets)
[17:47:45] *** Joins: pizdets (~pizdets@183.182.111.79)
[17:51:42] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[17:51:57] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 240 seconds)
[18:02:31] *** Quits: pottsy (~pottsy@2400:4050:b560:3700:95a9:bb69:4209:aa9b) (Remote host closed the connection)
[18:03:00] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[18:04:35] *** Joins: pottsy (~pottsy@2400:4050:b560:3700:95a9:bb69:4209:aa9b)
[18:06:25] *** Joins: ivii (~ivan@user/ivii)
[18:08:38] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[18:10:05] *** Joins: cryptobug (~cryptobug@2001:448a:1082:fe6f:11b4:66d7:9cdc:7455)
[18:10:25] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[18:11:05] *** Joins: seninha (~seninha@user/seninha)
[18:15:19] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[18:17:10] *** Joins: irf21k (~irf21k@2401:4900:4e7f:e237:59a9:81d:6ebc:9488)
[18:21:57] *** Joins: Anna28 (~Guest56@185.145.245.99)
[18:26:10] *** Quits: Anna28 (~Guest56@185.145.245.99) (Quit: Connection closed)
[18:30:35] *** Joins: zeenk (~zeenk@2a02:2f04:a110:7d00:2011:cfed:bad7:3c94)
[18:32:00] *** Quits: cryptobug (~cryptobug@2001:448a:1082:fe6f:11b4:66d7:9cdc:7455) (Read error: Connection reset by peer)
[18:33:53] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[18:35:02] *** Quits: Major_Biscuit (~MajorBisc@c-001-015-045.client.tudelft.eduvpn.nl) (Ping timeout: 260 seconds)
[18:37:17] *** Joins: Enitin (~Enitin@82.180.145.228)
[18:37:17] *** Joins: teepee (~teepee@openscad/teepee)
[18:40:42] *** Quits: str0 (~str0@178.220.28.32) (Remote host closed the connection)
[18:44:21] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[18:44:30] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[18:44:30] *** ChanServ sets mode: +v npaperbot
[18:45:20] *** Joins: cryptobug (~cryptobug@2001:448a:1082:fe6f:e092:f3e1:b1f7:e0cf)
[18:46:56] *** Joins: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro)
[18:48:39] *** Quits: Green_ (~Green-@h-85-24-185-116.A189.priv.bahnhof.se) (Quit: ...)
[18:49:43] *** Joins: Major_Biscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[18:50:30] *** Joins: Green_ (~Green-@h-85-24-185-116.A189.priv.bahnhof.se)
[18:51:24] *** Quits: KimK (~KimK@2600:8803:740b:4700:4a5b:39ff:fe0b:57d2) (Ping timeout: 240 seconds)
[18:56:23] *** Quits: Enitin (~Enitin@82.180.145.228) (Ping timeout: 260 seconds)
[18:58:00] *** Joins: magla (~gelignite@55d40a33.access.ecotel.net)
[18:58:15] *** Joins: abode (~abode@2001:8f8:1263:f81:8230:49ff:fe6e:36b5)
[19:03:08] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:182e:ca9a:1505:6966)
[19:04:17] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[19:06:11] <osse> the chrono stuff is C++20
[19:06:16] *** Joins: Enitin (~Enitin@82.102.22.86)
[19:07:00] <cryptobug> https://cryptobug.wordpress.com/2022/03/20/windows-0day/
[19:07:07] <cryptobug> windows 10 unknown
[19:07:10] <cryptobug> 64 bit
[19:07:18] <cryptobug> windows 7 32 bit unknown
[19:07:20] <cryptobug> enjoy
[19:07:29] <cryptobug> come to channel #0x71 for discussion of Our OS
[19:07:42] <cryptobug> one of them is a decoy
[19:07:47] <cryptobug> which is 64 bit windows 7
[19:07:53] <cryptobug> you already heard from microsoft
[19:07:58] <cryptobug> i am team lead of microsoft
[19:08:06] <cryptobug> is only Two Of Us the coder
[19:08:14] <cryptobug> The Most High with me
[19:08:39] *** Joins: str0 (~str0@178.220.28.32)
[19:09:09] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[19:09:48] <anyone> no one cares.
[19:10:53] *** Joins: nicbk (~nicbk@user/nicbk)
[19:12:00] <fiesh> see if anyone cares!
[19:12:06] *** Quits: bobb_ (~bobb_@dslb-092-074-253-191.092.074.pools.vodafone-ip.de) (Quit: Client closed)
[19:12:23] <Alipha> !give cryptobug topic
[19:12:24] <nolyc> cryptobug: #C++ is strictly for Standard C++, including potential and future standardizations. Stay on topic in #C++. #C++-general is less strict, meant for libraries, projects, compilers, and tools in the wider C++ ecosystem, but still must pertain to C++ in some way.
[19:14:06] <cryptobug> #0x71 is the microsoft official support channel
[19:17:09] *** Quits: abode (~abode@2001:8f8:1263:f81:8230:49ff:fe6e:36b5) (Remote host closed the connection)
[19:17:23] *** Quits: m_ben (~m_ben@user/m-ben/x-7429725) (Quit: WeeChat 3.4.1)
[19:20:25] * Alipha wonders why he isn't an op yet ;-)
[19:21:02] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[19:21:11] *** Quits: cryptobug (~cryptobug@2001:448a:1082:fe6f:e092:f3e1:b1f7:e0cf) (Ping timeout: 245 seconds)
[19:29:34] *** Quits: lurker (~lurker@2001:448a:50e0:b87d:1bc3:6845:9b7b:92aa) (Quit: Client closed)
[19:30:34] *** Quits: magla (~gelignite@55d40a33.access.ecotel.net) (Quit: Stay safe!)
[19:33:48] *** Quits: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl) (Ping timeout: 240 seconds)
[19:35:48] *** Joins: cryptobug (~cryptobug@2001:448a:1082:fe6f:d11d:775:30d9:db1b)
[19:35:56] *** Quits: cryptobug (~cryptobug@2001:448a:1082:fe6f:d11d:775:30d9:db1b) (K-Lined)
[19:38:10] *** Quits: Payam54 (~Payam@138.106.57.131) (Quit: Client closed)
[19:38:23] *** Joins: Payam49 (~Payam@138.106.57.131)
[19:38:47] <urdh> always a good sign when people get K-lined
[19:38:50] <PJBoy> too many ops spoil the brothel
[19:41:35] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[19:42:12] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:182e:ca9a:1505:6966) (Ping timeout: 240 seconds)
[19:42:48] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[19:43:27] *** Joins: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net)
[19:45:37] *** Joins: Moosadee (~Moosadee@198.248.38.26)
[19:46:33] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[19:46:53] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[19:47:17] *** Quits: Tokamak (~Tokamak@107.116.82.161) (Ping timeout: 240 seconds)
[19:47:42] *** Quits: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[19:50:12] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 272 seconds)
[19:50:44] *** Joins: cryptobug (~cryptobug@2001:448a:1082:fe6f:d83f:ea5d:369:b1cd)
[19:50:56] *** Quits: cryptobug (~cryptobug@2001:448a:1082:fe6f:d83f:ea5d:369:b1cd) (K-Lined)
[19:51:02] *** Joins: trumae (~trumae@2804:431:c7c1:c8d4:ed4a:ec28:5174:c320)
[19:51:32] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[19:52:09] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[19:52:10] *** Joins: Tokamak (~Tokamak@107.116.82.161)
[19:56:37] *** Quits: zer0x (~zer0x@1.55.170.252) (Ping timeout: 240 seconds)
[19:56:51] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[20:00:57] *** Joins: cryptobug (~cryptobug@2001:448a:1082:fe6f:4dc1:814b:113c:392f)
[20:01:06] *** Quits: cryptobug (~cryptobug@2001:448a:1082:fe6f:4dc1:814b:113c:392f) (K-Lined)
[20:01:15] *** Joins: xkuru (~xkuru@user/xkuru)
[20:03:07] *** Quits: Major_Biscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 260 seconds)
[20:04:44] *** Joins: Major_Biscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e)
[20:06:14] *** Joins: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net)
[20:06:40] *** Joins: wakeup (~wakeup@user/wakeup)
[20:08:11] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:11:55] *** Joins: AliceMeows (~AliceMeow@user/alicemeows)
[20:14:16] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 272 seconds)
[20:21:15] *** Quits: nicbk (~nicbk@user/nicbk) (Ping timeout: 240 seconds)
[20:21:55] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[20:22:17] *** Joins: rackj (~rackj@c-73-193-19-25.hsd1.wa.comcast.net)
[20:23:05] <rackj> Do I need to std::string::reserve() after a std::string::clear()? My guess is yes since "pointers are invalidated"
[20:24:51] *** Joins: nicbk (~nicbk@user/nicbk)
[20:25:08] <urdh> depends, why are you reserving?
[20:25:30] <urdh> i doubt any std::string implementation is going to free memory on clear()
[20:25:34] <rackj> it's just 32 bytes, lots of little strings
[20:25:56] <rackj> so instead of doing the capacity double inside a hot loop, I reserve 32 bytes
[20:25:59] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[20:26:18] *** Quits: LucaTM (~LucaTM@user/lucatm) (Ping timeout: 272 seconds)
[20:27:02] <Alipha> { string s(1000); s.clear(); cout << s.capacity(); }
[20:27:02] <geordi> error: no matching function for call to 'string::basic_string(int)'
[20:27:08] <Alipha> { string s(1000, 'a'); s.clear(); cout << s.capacity(); }
[20:27:09] <geordi> 1000
[20:27:39] <urdh> yeah I'd expect all implementations to behave like that
[20:28:05] <urdh> then again, calling reserve() anyway can't hurt that much
[20:28:11] <rackj> yeah
[20:28:13] <urdh> profile it if you really care
[20:28:23] <rackj> well, it's a hot loop but it's not *that* tight
[20:28:25] <rackj> thanks all
[20:29:24] <urdh> { cout << string{}.capacity(); }
[20:29:25] <geordi> 15
[20:30:37] *** Joins: Guest53 (~Guest53@155.190.35.5)
[20:30:43] <Guest53> Hi All
[20:30:48] <Alipha> hi
[20:31:03] <Guest53> good to see you Alipha
[20:31:18] <Guest53> could you have a look at that https://wandbox.org/permlink/686KwlV3MfTcKhep
[20:31:51] <Guest53> am trying to figure out the unsafe scenario for the above code (static polymorphism)
[20:32:05] <Guest53> so far i was able to come out only with one scenario
[20:32:10] <Guest53> the one commneted out
[20:32:36] <Guest53> which is luckily the compiler is able to eliminate at compile time
[20:33:09] *** Quits: rackj (~rackj@c-73-193-19-25.hsd1.wa.comcast.net) (Quit: Client closed)
[20:33:41] <Guest53>  could you tell me of other possible unsafe scenarios that can escape the compiler checking and happen at runtime
[20:34:14] *** Joins: unixpro1970 (~unixpro19@c-67-168-1-124.hsd1.wa.comcast.net)
[20:34:46] *** Joins: belphegor666 (~satan@ip-046-223-003-068.um13.pools.vodafone-ip.de)
[20:36:23] *** Quits: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:36:26] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 272 seconds)
[20:37:02] *** Joins: jokoon (~eio@2a01:e0a:542:e160:64b1:ddbf:d4d9:7471)
[20:37:44] *** Joins: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net)
[20:37:46] <Guest53> Alipha: What do you think about the above ?
[20:38:20] *** Quits: zibolo (~quassel@global-deiInside018.dei.polimi.it) (Ping timeout: 272 seconds)
[20:38:38] <Guest53> is it really safe ?
[20:39:13] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[20:39:30] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[20:40:09] *** Quits: belphegor666 (~satan@ip-046-223-003-068.um13.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[20:40:32] *** Quits: trumae (~trumae@2804:431:c7c1:c8d4:ed4a:ec28:5174:c320) (Ping timeout: 268 seconds)
[20:40:43] *** Joins: trumae (~trumae@2804:18:863:a2e5:1:0:df2:cd3f)
[20:40:58] <Guest53> common guys... think of catastrophic scenarios
[20:41:25] *** Joins: LucaTM (~LucaTM@user/lucatm)
[20:42:07] *** Joins: belphegor666 (~satan@ip-046-223-003-068.um13.pools.vodafone-ip.de)
[20:42:27] <urdh> no
[20:42:49] *** Quits: Major_Biscuit (~MajorBisc@2a02:a461:129d:1:193d:75d8:745d:e91e) (Ping timeout: 250 seconds)
[20:43:31] *** Quits: Guest53 (~Guest53@155.190.35.5) (Quit: Client closed)
[20:44:03] *** Joins: Guest53 (~Guest53@155.190.35.5)
[20:44:32] <Guest53> do you mean this code https://wandbox.org/permlink/686KwlV3MfTcKhep is 100% safe
[20:44:58] *** Joins: Major_Biscuit (~MajorBisc@c-001-015-045.client.tudelft.eduvpn.nl)
[20:45:29] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[20:45:46] <urdh> no, i mean i'm not going to think of catastrophic scenarios
[20:46:02] <urdh> besides, what do you mean when you say "safe"?
[20:48:11] <Guest53> "safe" means that pass compiler checking and does not crash at execution time
[20:50:25] <Guest53> unsafe scenario here would me a class of type "Base", passed to the execution function (no errors ate compile time)
[20:51:08] <Guest53> but then the code suddenly crashes at runtime when invoking the serialization() function
[20:52:00] *** Inline__ is now known as Inline
[20:53:41] *** Quits: pottsy (~pottsy@2400:4050:b560:3700:95a9:bb69:4209:aa9b) (Ping timeout: 265 seconds)
[20:54:45] *** Joins: maroloccio (~marolocci@pousada3ja.mma.com.br)
[20:56:25] <urdh> the whole point of CRTP is that the polymorphism is resolved at compile-time
[20:56:36] <urdh> hence, "static" polymorphism
[20:56:59] *** Joins: Guest3 (~Guest3@185.145.245.102)
[20:57:01] <urdh> if that static_cast would be invalid, it won't compile
[20:57:57] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[20:58:19] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[20:59:42] *** Quits: Guest3 (~Guest3@185.145.245.102) (Client Quit)
[21:00:22] *** Joins: bindu_ (~bindu@user/bindu)
[21:00:35] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 240 seconds)
[21:00:39] <Guest53> yes exactly
[21:01:17] <Guest53> but because i am a really afraid of what's going at runtime =$
[21:01:26] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[21:02:01] <Guest53> am trying to think of all possible scenarios where there would a crash at runtime >.<
[21:02:05] *** Joins: Tokamak_ (~Tokamak@172.58.191.11)
[21:02:08] *** bindu_ is now known as bindu
[21:02:12] *** Quits: Tokamak (~Tokamak@107.116.82.161) (Ping timeout: 240 seconds)
[21:03:24] *** Joins: Tokamak (~Tokamak@107.116.82.161)
[21:04:37] <Guest53> so far no one answer, i would suppose this code https://wandbox.org/permlink/686KwlV3MfTcKhep won't cause any runtime crash, once successfully compiled
[21:05:39] *** Quits: trumae (~trumae@2804:18:863:a2e5:1:0:df2:cd3f) (Ping timeout: 256 seconds)
[21:06:17] *** Quits: Tokamak_ (~Tokamak@172.58.191.11) (Ping timeout: 240 seconds)
[21:06:39] *** Joins: trumae (~trumae@2804:18:84b:d5b:1:0:e27:c90d)
[21:06:55] *** Quits: nicbk (~nicbk@user/nicbk) (Ping timeout: 240 seconds)
[21:10:44] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[21:10:45] *** Quits: Inline (~Inline@p200300cd470cc200742cdab66a29c7e1.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[21:13:54] *** Quits: trumae (~trumae@2804:18:84b:d5b:1:0:e27:c90d) (Read error: Connection reset by peer)
[21:14:30] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: CodePoint struts into the sunset on the beach.)
[21:14:35] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[21:14:46] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[21:14:48] *** Joins: trumae (~trumae@2804:431:c7c1:c8d4:5c89:60e9:da90:9648)
[21:15:03] <Alipha> so, Derived1 could define its own serialize function, which would be bad. wouldn't crash, but unexpected results, probably. and you could have some weird inheritance tree, like https://wandbox.org/permlink/BljNvzLf32YjBI1V , but that seems like blatant idoicy, not something accidental
[21:15:07] <Alipha> Guest53: ^
[21:15:35] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[21:15:55] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 260 seconds)
[21:16:26] *** Joins: seninha (~seninha@user/seninha)
[21:17:18] *** Joins: Enitin (~Enitin@82.180.145.230)
[21:18:11] *** Joins: Tokamak_ (~Tokamak@172.58.191.11)
[21:19:37] *** Quits: Tokamak (~Tokamak@107.116.82.161) (Ping timeout: 240 seconds)
[21:19:45] *** Quits: unlink2 (~unlink@p200300ebcf19f600f31648a859b660c5.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:20:31] *** Quits: belphegor666 (~satan@ip-046-223-003-068.um13.pools.vodafone-ip.de) (Changing host)
[21:20:31] *** Joins: belphegor666 (~satan@user/belphegor666)
[21:21:23] *** Quits: Enitin (~Enitin@82.180.145.230) (Ping timeout: 250 seconds)
[21:22:00] *** Joins: Enitin (~Enitin@82.180.145.227)
[21:22:01] <Eelis> you could also add ~Base(){ static_assert(std::is_base_of_v<Base, Derived>); }
[21:22:02] <Guest53> Good.. so over here https://wandbox.org/permlink/QgIBRG1vHYsmkbnl Derive1 implement its own serialize , but luckily the compiler figure out this for me
[21:22:13] *** Joins: dhch (~dhch@185.213.154.171)
[21:22:19] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[21:22:25] <Guest53> Alipha: ^
[21:22:59] <Alipha> Guest53: what if they implement both serialize and marshall? (or is that "blatant idoicy" territory?)
[21:23:19] <Guest53> =$ D: =$ D: =$ D:
[21:23:21] <Eelis> Guest53: your execute() function should take its argument by reference, otherwise you slice
[21:23:49] <Alipha> oh, indeed. that'd be bad
[21:24:19] <Alipha> should probably give Base protected copy constructor and copy operator=
[21:25:31] <Guest53> to which case you're refering now
[21:25:38] <Guest53> bu the way Alipha: https://wandbox.org/permlink/zEDaTXTr6aVKWaOa
[21:25:46] *** Joins: Inline (~Inline@p200300cd470cc200742cdab66a29c7e1.dip0.t-ipconnect.de)
[21:25:51] <Guest53> it still does the righ tjob
[21:26:31] <Eelis> that's the nature of UB: it may appear to do the "right" thing
[21:26:33] <Guest53> Eelis: by the wayhow this will help >
[21:26:34] <Guest53> you could also add ~Base(){ static_assert(std::is_base_of_v<Base, Derived>); }
[21:26:49] <Eelis> Guest53: it will detect cases where Derived is not actually derived from Base
[21:27:05] <Guest53> good point
[21:27:12] <Eelis> such as your "class Derived2: public Base<Test>"
[21:27:28] <Alipha> Guest53: referring to Eelis's slicing point: https://wandbox.org/permlink/Q9Rd0RGYsgihWzMS
[21:28:29] *** Joins: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu)
[21:29:11] <Alipha> Guest53: and i was talking about if execute took a T instead of a Base<T>: https://wandbox.org/permlink/SeZfrowOeX5J9BbV
[21:30:57] <Eelis> (Alipha: the basic rule is that if a word/name already ends with an 's', you don't need an extra 's' for the possessive. so e.g.: "Eelis' huge penis", not "Eelis's huge penis")
[21:31:41] <Guest53> =$ D: =$ D: X-P =D -_- :@ :b
[21:31:46] <Alipha> Guest53: https://wandbox.org/permlink/d6fiZyvXJmbLVptS
[21:32:11] *** Quits: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net) (Read error: Connection reset by peer)
[21:32:33] *** Joins: pulse (~pulse@user/pulse)
[21:33:04] *** Joins: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net)
[21:34:21] <Guest53> Alipha: Waw... from which planet you came
[21:34:28] <Guest53> that's great
[21:35:28] <Guest53> By the way guys, what do you mean by "slice" ?
[21:35:31] <Eelis> a dtor is a more generally reasonable place to put the static_asserts, because while a class may have many constructors, it can only have 1 destructor, thus avoiding the need for repetition
[21:36:25] <Guest53> hmmm, i see
[21:36:29] *** Quits: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net) (Client Quit)
[21:36:30] <Eelis> !fs slice
[21:36:31] <nolyc> struct Food { int calories; }; struct Bread : Food { int butter; }; Food food = Bread(); // Slicing bread has never been easier...
[21:36:50] <Eelis> slicing means making a copy of the base subobject of an object of derived type
[21:37:07] <Alipha> Guest53: in https://wandbox.org/permlink/Q9Rd0RGYsgihWzMS note that the output shows 850980864 for x instead of 3, which x was initialized to
[21:37:08] <Eelis> it's generally a bad idea because the copy will only copy the subobject, not the derived object
[21:38:05] <Guest53> Oh I see
[21:38:11] <Guest53> however this will resolve
[21:38:32] <Guest53> just have to put the asser in destructor
[21:38:37] <Guest53> https://wandbox.org/permlink/d6fiZyvXJmbLVptS
[21:38:53] <Alipha> b, inside execute, is of type Base<Derived1>. it is not a Derived1 because b is a copy of the Base<Derived1> subobject. the Derived1 portion was sliced off. so then static_cast<Derived*>(this) is not valid because *this is not a Derived1
[21:38:56] *** Joins: magla (~gelignite@55d40a33.access.ecotel.net)
[21:39:30] <Guest53> now my brain is really overflowing
[21:39:36] *** Quits: nq (~nq@2a02:2f08:e015:a900:e603:7a30:2c23:12e) (Quit: Leaving)
[21:39:53] *** Joins: nq_ (~nq@2a02:2f08:e015:a900:e603:7a30:2c23:12e)
[21:40:08] <Guest53> tell me guys does Alipha code https://wandbox.org/permlink/d6fiZyvXJmbLVptS resolve the above issues
[21:40:43] <Alipha> yes, that covers everything
[21:41:22] *** Joins: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net)
[21:41:54] <Alipha> if you move the static_asserts into the destructor, you'll have to add `Base() = default;` because, since i defined a copy ctor, the compiler will no longer generate a default constructor automatically
[21:42:13] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[21:43:13] *** Quits: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net) (Client Quit)
[21:43:18] <Guest53> yes, that covers everything: hmm i don't think so
[21:43:21] <Guest53> think about this
[21:43:31] <InPhase> Guest53: Alipha typically produces expert-level code.  But that said, you should always strive to understand any provided code you integrate into your own code.
[21:43:36] <Guest53> https://wandbox.org/permlink/1DlmCJAGKxxyLBOo
[21:44:08] <Guest53> InPhase: yes that's why my brain overflowed
[21:44:43] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[21:45:38] <Guest53> Alipha: Did you see that https://wandbox.org/permlink/1DlmCJAGKxxyLBOo
[21:45:48] <InPhase> Guest53: Sometimes it helps to deconstruct the pieces, run a bunch of usage tests, and/or try to reimplement the same sort of thing following the provided principle.
[21:45:54] <Guest53> am crying phatically
[21:46:47] <Guest53> why it's printing 0 ... D: =$ D: =$ D: =$
[21:47:32] <Eelis> what is the "D: =$ D: =$ D: =$" gobbledygook you keep posting?
[21:48:05] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[21:48:28] <Guest53> Oh Sorry
[21:49:16] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[21:50:24] *** Joins: ckdCreations (~ckdCreati@147.55.133.134)
[21:52:03] <Eelis> Guest53: you have "class Derived1: public Base<Derived2>", which is no good
[21:53:20] <Guest53> yes but i thought the compiler won't let this happen
[21:53:32] <Guest53> since our static assertio code we introduced
[21:53:33] <Eelis> why wouldn't it?
[21:53:46] <Eelis> Derived2 is a derived class of Base<Derived2>
[21:54:03] <Eelis> (indirectly, through Derived1)
[21:54:26] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[21:54:58] *** Quits: Moosadee (~Moosadee@198.248.38.26) (Ping timeout: 272 seconds)
[21:55:08] <Guest53> see over here the compiler didn't let such cahos https://wandbox.org/permlink/ABzgPJuYrV5JabA5
[21:56:18] *** Joins: Moosadee (~Moosadee@198.248.38.27)
[21:57:05] *** Joins: abode (~abode@2001:8f8:1263:f81:8230:49ff:fe6e:36b5)
[21:58:10] <Eelis> that's not really a useful test case, because there, you use Derived2 but never define it. a more relevant testcase woudl be one where Derived2 is actually defined
[21:59:08] <Eelis> if you don't define Derived2, then sure, most uses of it will cause errors. but that's expected
[21:59:11] *** Quits: jokoon (~eio@2a01:e0a:542:e160:64b1:ddbf:d4d9:7471) (Quit: Leaving)
[22:01:14] <Guest53> ok guys thanks a lot have to leave now
[22:01:15] <Guest53> Alipha, Eelis: thanks you so much
[22:01:25] <Eelis> np
[22:01:28] *** Quits: Guest53 (~Guest53@155.190.35.5) (Quit: Client closed)
[22:02:33] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[22:08:52] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[22:15:01] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[22:21:19] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:1110:204a:e437:3022)
[22:21:19] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:1110:204a:e437:3022) (Changing host)
[22:21:19] *** Joins: skapata (~Skapata@user/skapata)
[22:29:14] *** Joins: abode_ (~abode@94.59.225.33)
[22:30:25] *** Joins: sobkas (~sobkas@95.175.17.217)
[22:30:28] *** Joins: LuckyFire (~LuckyFire@79.125.173.234)
[22:30:43] *** Joins: shelf (~shelf@198.232.120.151)
[22:30:54] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[22:31:36] *** Quits: abode (~abode@2001:8f8:1263:f81:8230:49ff:fe6e:36b5) (Ping timeout: 245 seconds)
[22:33:23] *** Quits: mathe8989 (~wellmathe@dhcp-138-246-3-71.dynamic.eduroam.mwn.de) (Ping timeout: 260 seconds)
[22:33:29] *** Joins: vicfred (~vicfred@user/vicfred)
[22:38:01] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 256 seconds)
[22:38:52] *** Joins: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net)
[22:40:56] *** Joins: m_ben (~m_ben@user/m-ben/x-7429725)
[22:43:12] *** Joins: mathe8989 (~wellmathe@dhcp-138-246-3-71.dynamic.eduroam.mwn.de)
[22:44:22] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[22:44:30] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[22:44:30] *** ChanServ sets mode: +v npaperbot
[22:49:01] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[22:49:38] *** Quits: proller (~p@2a02:6b8:b081:b65d::1:15) (Ping timeout: 252 seconds)
[22:50:19] *** Quits: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:52:28] *** Quits: sobkas (~sobkas@95.175.17.217) (Read error: Connection reset by peer)
[22:54:07] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[22:55:17] *** Quits: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[23:01:10] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[23:01:24] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[23:01:42] *** Joins: nicbk (~nicbk@user/nicbk)
[23:04:19] *** Quits: Payam49 (~Payam@138.106.57.131) (Quit: Client closed)
[23:05:27] *** Joins: sobkas (~sobkas@95.175.17.217)
[23:07:47] *** Joins: rajkosto (~rajkosto@93-86-99-236.dynamic.isp.telekom.rs)
[23:07:53] *** Joins: senoraraton (~senorarat@c-67-160-210-246.hsd1.ca.comcast.net)
[23:07:57] *** Quits: trumae (~trumae@2804:431:c7c1:c8d4:5c89:60e9:da90:9648) (Ping timeout: 240 seconds)
[23:08:02] *** Quits: malloy (~jimery@116.30.221.173) (Ping timeout: 265 seconds)
[23:08:22] *** Quits: Moosadee (~Moosadee@198.248.38.27) (Read error: Connection reset by peer)
[23:08:40] *** Joins: Moosadee (~Moosadee@198.248.38.26)
[23:09:16] *** Joins: trumae (~trumae@2804:18:84b:d5b:1:0:e27:c90d)
[23:10:33] *** Joins: malloy (~jimery@116.30.221.173)
[23:13:37] *** Quits: trumae (~trumae@2804:18:84b:d5b:1:0:e27:c90d) (Read error: Connection reset by peer)
[23:14:04] *** Joins: trumae (~trumae@2804:431:c7c1:c8d4:5c89:60e9:da90:9648)
[23:14:15] *** Quits: LuckyFire (~LuckyFire@79.125.173.234) (Remote host closed the connection)
[23:14:38] *** Joins: LuckyFire (~LuckyFire@79.125.173.234)
[23:15:19] *** Quits: the_lanetly_052 (~the_lanet@194.135.166.224) (Ping timeout: 268 seconds)
[23:16:02] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:18:20] *** Joins: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net)
[23:21:14] *** Quits: m_ben (~m_ben@user/m-ben/x-7429725) (Quit: WeeChat 3.4.1)
[23:27:14] *** Quits: abode_ (~abode@94.59.225.33) (Remote host closed the connection)
[23:28:52] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[23:28:56] *** Quits: zoraj (~zoraj@vmi794994.contaboserver.net) (Read error: Connection reset by peer)
[23:31:01] *** Quits: msk (~Thunderbi@89.205.124.59) (Ping timeout: 240 seconds)
[23:32:15] *** Quits: johnjaye (~pi@173.209.64.74) (Quit: WeeChat 3.3)
[23:33:07] *** Joins: zoraj (~zoraj@vmi794994.contaboserver.net)
[23:33:11] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:34:51] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:34:52] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[23:35:29] *** Quits: shelf (~shelf@198.232.120.151) (Ping timeout: 256 seconds)
[23:36:30] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:40:15] *** Quits: LuckyFire (~LuckyFire@79.125.173.234) (Remote host closed the connection)
[23:40:38] *** Joins: LuckyFire (~LuckyFire@79.125.173.234)
[23:41:09] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[23:41:59] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[23:44:02] *** Joins: LuckyFire_ (~LuckyFire@79.125.173.234)
[23:44:06] *** Quits: ralu (~ralu@static.211.245.203.116.clients.your-server.de) (Ping timeout: 252 seconds)
[23:44:47] *** Quits: str0 (~str0@178.220.28.32) (Remote host closed the connection)
[23:45:55] *** Joins: ralu (~ralu@static.211.245.203.116.clients.your-server.de)
[23:46:04] *** Quits: AliceMeows (~AliceMeow@user/alicemeows) (Read error: Connection reset by peer)
[23:46:17] *** Joins: AliceMeows (~AliceMeow@user/alicemeows)
[23:46:42] *** Joins: crankslider (~slidercra@user/slidercrank)
[23:47:42] *** Quits: LuckyFire (~LuckyFire@79.125.173.234) (Ping timeout: 272 seconds)
[23:48:37] *** Quits: trumae (~trumae@2804:431:c7c1:c8d4:5c89:60e9:da90:9648) (Ping timeout: 268 seconds)
[23:49:14] *** Quits: imi (~imi@catv-89-132-115-236.catv.fixed.vodafone.hu) (Ping timeout: 268 seconds)
[23:49:49] *** Quits: LuckyFire_ (~LuckyFire@79.125.173.234) (Quit: Leaving)
[23:50:23] *** Joins: LuckyFire (~LuckyFire@79.125.173.234)
[23:50:51] *** Quits: ralu (~ralu@static.211.245.203.116.clients.your-server.de) (Ping timeout: 260 seconds)
[23:51:45] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[23:51:52] *** Quits: LuckyFire (~LuckyFire@79.125.173.234) (Client Quit)
[23:56:12] *** Joins: LuckyFire (~LuckyFire@79.125.173.234)
