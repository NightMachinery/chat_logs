[00:00:05] *** Quits: nekobyte (~nekobyte@user/nekobit) (Quit: You may not rest now, there are monsters nearby.)
[00:02:34] *** Joins: ayenet4 (~0x100@32.211.211.39)
[00:02:55] *** Joins: xuochi (~xuochi@c-24-98-208-21.hsd1.ga.comcast.net)
[00:04:22] *** Quits: nekonibble (~nekonibbl@user/nekobit) (Ping timeout: 252 seconds)
[00:07:09] *** Joins: inky_ (~inky@141.136.79.84)
[00:09:38] *** Joins: stoneware (~stoneware@user/stoneware)
[00:11:21] *** Joins: nekonibble (~nekonibbl@user/nekobit)
[00:11:28] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 272 seconds)
[00:13:04] *** Joins: shellwirt (~shellwirt@2001:1284:f013:4856:d59:1e37:347a:600b)
[00:14:46] *** Quits: snake (~snake@user/snake) (Quit: My MacBook Pro has gone to sleep. ZZZzzzâ€¦)
[00:16:50] *** Joins: mmlj4 (~mmlj4@ip68-230-228-233.no.no.cox.net)
[00:18:20] *** Joins: Lyn (~Lyn@user/law)
[00:22:16] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[00:22:55] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[00:23:53] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[00:25:24] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[00:28:27] *** Quits: speckz (~speckz@2600:1700:ce0:bf00:b48d:fb65:abf:6e14) (Quit: Textual IRC Client: www.textualapp.com)
[00:33:09] <Lyn> Golang or nodeJS for backend?
[00:33:49] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[00:33:51] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[00:34:13] <ayenet4> C backend!
[00:34:21] <chance> coke or smirnoff ice? XD
[00:34:27] <pyzozord> Lyn: what's the usecase?
[00:35:32] *** Joins: brickfat (~brickfat@user/brickfat)
[00:36:01] <Lyn> pyzozord: mobile app
[00:36:13] *** Quits: alguien (~alguien@user/alguien) (Quit: alguien)
[00:37:18] <ayenet4> WHY is google trying to push rust into linux kernel?
[00:37:39] <chance> well, i'm walking away, so i'll just drop my personal opinion and poof =P  if you need to do a whole bunch of stuff concurrently, golang. if you need to serve a whole bunch of concurrent users, but not necessarily to run a boatload of ultra-performant concurrent *processes*, imo use your favorite python-like object, whatever lets you do it with the
[00:37:39] <chance> least frustration. i think the only reason to use anything with "js" in the name for a backend is if you're a full stack dev and that's your comfort zone, in which case, why ask the question? work in your comfort zone
[00:37:41] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 255 seconds)
[00:37:50] *** Quits: nekonibble (~nekonibbl@user/nekobit) (Ping timeout: 252 seconds)
[00:38:10] <pyzozord> Lyn: sounds like a small project (although both Facebook and Angry Birds are mobile apps so range is quite wide). I'd go with whatever you are the most comfortable with
[00:41:56] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[00:41:59] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[00:42:44] *** Joins: nekonibble (~nekonibbl@user/nekobit)
[00:45:43] *** Quits: yitz (~nick@exercism/yitz) (Quit: Reconnecting)
[00:45:52] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[00:45:56] *** Joins: yitz (~nick@exercism/yitz)
[00:46:56] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 272 seconds)
[00:47:01] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[00:48:08] *** Quits: yitz (~nick@exercism/yitz) (Client Quit)
[00:48:28] *** Joins: yitz (~nick@exercism/yitz)
[00:49:19] *** Quits: yitz (~nick@exercism/yitz) (Client Quit)
[00:49:45] *** Joins: yitz (~nick@exercism/yitz)
[00:50:29] *** Joins: alguien (~alguien@user/alguien)
[00:51:43] *** Quits: Doffi (~doffi@91.132.197.188) (Read error: Connection reset by peer)
[00:51:55] *** Joins: Doffi (~doffi@91.132.197.188)
[00:54:15] <Twix> Lyn, PHP!!!1!!1!
[00:54:45] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Quit: Leaving.)
[00:56:21] <Twix> More serious answer: there is a hipster community around elixir and erlang. Also there are the ruby fanatics. If you like robust system languages instead of all of this jit, vm and script languages, you could try rust.
[00:56:27] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[00:56:39] <ayenet4> i was being serious
[00:58:38] <Twix> i'm currently writing a small C backend for an webapp which is being served from a microcontroller. Its not really an ideal language to do weby stuff
[00:59:17] <ayenet4> why not
[00:59:29] <Twix> because its actual work
[00:59:39] <ayenet4> everything is work
[01:00:07] <edgar-rft> work is ugh
[01:00:13] <ayenet4> you mean the string parsing?
[01:00:15] <Twix> but you get things like webbackends easier than writing it in C
[01:00:38] <Twix> for example
[01:00:57] <ayenet4> copy/pasting requires more thought?
[01:01:10] *** Joins: nekobyte (~nekobyte@user/nekobit)
[01:01:33] *** Quits: pete443_ (~pete@user/pete443) (Quit: Bye.)
[01:01:48] *** Joins: pete443 (~pete@user/pete443)
[01:02:20] <Twix> you have to think about memory management all the time, you need to think about not letting some loopholes open for exploitation, you need to think about correct error handling. You need to think a lot about correct locking
[01:02:34] <ayenet4> just use the stack
[01:02:41] <ayenet4> that's why its there
[01:02:41] *** Quits: nekonibble (~nekonibbl@user/nekobit) (Ping timeout: 252 seconds)
[01:03:17] <Twix> it is possible, and sometimes(e.g. on a microcontroller) neccessary to do it in C. It is possible, yes. But you can have it easier
[01:03:43] <ayenet4> C has more architecture support and testing
[01:03:45] <Twix> "just use the stack". Did you do some more complex stuff in C? Like ever?
[01:03:57] <Twix> On a contraint system?
[01:04:02] <Twix> *constraint
[01:04:30] <ayenet4> thats why its used for system dev
[01:04:32] <ayenet4> i mean
[01:05:02] <Twix> Even on a fully blown linux you have 8 MB of Stack, i think. Its not like "do all the stuff on the stack". On my microcontroller, i usually have 1 kB of stack
[01:05:19] <ayenet4> you can set stack size in clone(2)
[01:05:29] <Twix> not on my microcontroller
[01:05:35] <ayenet4> on linux i mean
[01:05:56] <Twix> still, its has it limits
[01:06:52] <Twix> so things might get a bit complicated
[01:07:02] *** Quits: nekobyte (~nekobyte@user/nekobit) (Quit: nyaaaa and don't forget, you're here forever :3)
[01:07:26] <deniska> you can't really allocate dynamic amount of data on the stack. Some C compilers can do dynamically sized arrays and that's it
[01:07:47] <ayenet4> then use mmap/mremap
[01:07:59] <ayenet4> +munmap
[01:08:24] *** Quits: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net) (Remote host closed the connection)
[01:08:55] <Twix> you can do a lot of fancy things, of course.
[01:09:11] *** Quits: eXistenZ (~biskit@bzq-109-64-247-234.red.bezeqint.net) (Quit: Leaving)
[01:09:23] *** Quits: Doffi (~doffi@91.132.197.188) (Read error: Connection reset by peer)
[01:09:41] *** Quits: TechTest (uid283215@id-283215.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[01:09:52] <Twix> But it will always lead to more work and possibly more programming errors
[01:09:59] *** Joins: Doffi (~doffi@91.132.197.188)
[01:10:28] <ayenet4> a valid attack agains t C-lang is that its macro system it hot garbage
[01:10:42] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[01:10:44] <ayenet4> so no generics, unless you like juggling hand grenades
[01:11:04] <Twix> and people make heavy use of it :D
[01:11:11] <Twix> for small macros this is fine
[01:11:29] <Twix> but did every tried to understand the device tree system of zephyr? It is fun
[01:11:34] <deniska> C11 added some fancy explosives to its macro arsenal
[01:11:52] <deniska> namely _Generic
[01:12:31] <Twix> *ever
[01:13:26] *** Joins: nekobyte (~nekobyte@user/nekobit)
[01:14:29] <Twix> "Did you see the device tree system like linux has? It makes configuring Linux for special devices easy. Lets do the same but without having the memory to actually store it. So lets implement it using funny C Macros. Its gonna be great"
[01:20:02] *** Joins: blahboybaz (~blahboyba@c-67-183-225-44.hsd1.wa.comcast.net)
[01:23:03] *** Quits: alycidyne (~kova@91-160-172-214.subs.proxad.net) (Quit: leaving)
[01:23:44] <blahboybaz> Not sure where to begin looking.. I want to Test that the class constructor returns a Node object (using jest / node console app). I've automocked my class and tested a couple basic things that pass (so I know those things are working). But I'm nor really sure what the right question to ask or where to expect the answer (ie: whether there may be a matcher for that or whehter it may invove some
[01:23:50] <blahboybaz> vanilla js in the test suite). Any pointer would be much appreciated as I continute to rack my brain over this.  :)
[01:23:54] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[01:24:46] <blahboybaz> Where I have a 'class Node{...}' I want to test that that object is a "Node" class.
[01:25:51] <ayenet4> how does javascript class work, can it possibly be any other type?
[01:25:52] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 246 seconds)
[01:26:33] *** Parts: alguien (~alguien@user/alguien) ()
[01:27:42] <blahboybaz> ayenet4: I would imagine not; and, to be honest, I don't even know why I would want to test that. What you have here is this guy (me) just doing all kind of stuff in first attempts to learn something - hoping that some incling of knowledge and understanding will shake out in the end if I just DO some things
[01:28:16] *** Joins: snake (~snake@user/snake)
[01:28:44] *** Quits: snake (~snake@user/snake) (Client Quit)
[01:28:52] <blahboybaz> I just feel like I can't learn it all at the same time (what to test as well as how to perform the test) so I should pick one, make some mistakes, make sume successes, and see what I learn  :)
[01:29:22] <ayenet4> yeah but javascript such a crazy language they might have some classname string
[01:29:39] <ayenet4> and polymorphism
[01:29:54] *** Joins: Danishman (~Allan@2-104-144-110-cable.dk.customer.tdc.net)
[01:30:03] <blahboybaz> It's all good man
[01:30:26] *** Quits: shredder (~user@user/shredder) (Quit: quitting)
[01:30:31] <ayenet4> if you want to test such a thing, add a class ID or string yourself
[01:31:36] *** Joins: Kacper_ (~kasper93@89-74-110-199.dynamic.chello.pl)
[01:31:42] <blahboybaz> ayenet4: Its funny you mention that since I was just kind of contemplating how checking the value of a property in the class would actually idenitify it
[01:32:09] <blahboybaz> I'll try to test my getter and setter I guess
[01:32:10] *** Quits: kasper93 (~kasper93@89-74-110-199.dynamic.chello.pl) (Ping timeout: 246 seconds)
[01:32:11] *** Kacper_ is now known as kasper93
[01:32:30] *** Joins: snake (~snake@user/snake)
[01:32:46] *** Joins: shredder (~user@user/shredder)
[01:43:38] *** Joins: Crassus (~Crassus@user/crassus)
[01:52:38] *** Quits: password (~password@user/password2) (Ping timeout: 252 seconds)
[01:54:10] *** __jmcantrell__ is now known as jmcantrell
[01:55:44] <blahboybaz> When it comes to testing a class why would someone choose mock over spying? It seem like what you can do with a mock is limited compared to spying on an actual object of the real implementation
[01:57:09] <blahboybaz> Well, on second thought - I don't know if you can spy on a class per se. From what I have gathered you spy on methods of a class or on functions but maybe you can't spy on a class
[01:58:35] <arahael> blahboybaz: "mock" is a bit of a technical word in this case - you could say it's jargon.  "spying" isn't established as jargon, though - you'd have to explain what you mean exactly.
[02:01:36] <blahboybaz> arahael: Well, from what I seem to be reading so far (and I could be wrong), I can only seem to test the constructor with a mock but with a spy I can test methods in the class but not the constructor. Am I missing something here?
[02:02:12] <blahboybaz> I guess I don't get what the use cases are for either
[02:02:17] <arahael> blahboybaz: "with a spy"?  I think you must be using a very particular testing framework or language that has specfic support for that and they chose to use those names?
[02:02:33] <blahboybaz> jest spyOn()
[02:02:47] <arahael> What language and framework is that in?
[02:03:02] <blahboybaz> for me it is node but more broadly jest is for js
[02:03:09] <arahael> Ah, jest.
[02:03:21] <blahboybaz> mmm hmm
[02:04:23] <arahael> blahboybaz: Ok, just checked their docs.  It sounds like they're dynamically replacing the function with a proxy that exposes the inputs and outputs of that method even when it's called indirectly.
[02:04:43] <arahael> blahboybaz: In python, this same thing is called "patching", and is part of python's mocking library.
[02:05:06] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[02:05:36] *** Quits: Blacky (~Blacky@208.98.223.4) (Quit: Connection closed)
[02:05:46] *** Quits: pyzozord (~pyzozord@user/pyzozord) (Quit: leaving)
[02:05:50] *** Joins: Blacky (~Blacky@208.98.223.4)
[02:06:11] <blahboybaz> My best understanding is that mocking is to isolate what you are testing (so you mock dependencies - stuff like network calls and api calls).
[02:07:11] <blahboybaz> I don't have network calls or api calls in my codebase but then the only other option I see is spying on an object and I don't see that you can do that with the class constructor (just it's methods).
[02:07:12] <arahael> blahboybaz: Are you aware of "Dependency Injection" and "Inversion of Control"?
[02:07:38] *** Joins: nekonibble (~nekonibbl@user/nekobit)
[02:07:38] <blahboybaz> IOC somewhat but not by experience (just know the definition)
[02:07:49] *** Quits: nekonibble (~nekonibbl@user/nekobit) (Client Quit)
[02:07:57] <blahboybaz> injection I have heard of but not really know much about how it works
[02:08:12] *** Quits: Blacky (~Blacky@208.98.223.4) (Client Quit)
[02:08:37] <arahael> blahboybaz: Ok, well, a quick summary.  Suppose you write a function "printLinesInFile".  A naive way to write that would be to pass in a filename, as a string, and the function implementation will open that file, iterate over the lines, adn print them out directly.
[02:09:06] *** Quits: furrykef (~furrykef@ip68-229-199-137.ok.ok.cox.net) (Quit: gotta relog)
[02:09:17] <arahael> blahboybaz: However, what if you want to print lines in a stream you open from an http site?  Or what if you want to test that in a test case but you don't want to prepare a file first, etc?
[02:09:46] <arahael> blahboybaz: So you want to "invert" the control - by passing in a "Stream", which you've already opened, and the function implementation then just has to iterate over the lines.
[02:09:58] *** Joins: furrykef (~furrykef@ip68-229-199-137.ok.ok.cox.net)
[02:10:51] <arahael> blahboybaz: There's also the matter of the print function it uses: You should invert that too, and explicitly pass in a routine to allow it to print to a potentially more appropriate output:  In this way the function's responsibility becomes much simpler: It has to iterate over whatever stream it gets, determine the lines, and then call the provided function appropriately to output them.
[02:10:51] <blahboybaz> So like writing code that produces the result the caller is expecting but doesn't know the source isn't the real source?
[02:11:32] <arahael> blahboybaz: Doesn't know - and more importantly - doesn't care, it's no-longer part of it's responsibilities.
[02:11:40] <arahael> blahboybaz: However...  That was just background information. :D
[02:11:50] <blahboybaz> ok
[02:12:09] <arahael> blahboybaz: If you do this a lot in languages such as javascript, many people feel that this makes the code complicated.  Everything has dependencies, and you have to explicitly set them up all the time.
[02:12:33] <arahael> blahboybaz: Wiring up these dependencies can be tedious.  (I personally prefer to wire them up manually, but there are different schools of thought here)
[02:13:21] <arahael> blahboybaz: In dynamic langauges such as javascript, python, ruby, etc, many people think: "The language is dynamic. Why not have the function leverage that, and instead of getting the dependency from the arguments, why not just get it from the global state of the program?"
[02:13:21] <blahboybaz> arahael: I thought that a testing framework essentially does what we are talking about (IOC and injecting values)
[02:13:33] <arahael> blahboybaz: I was getting to that. :)
[02:13:41] *** Joins: nekonibble (~nekonibbl@user/nekobit)
[02:13:57] <blahboybaz> ok :)
[02:13:59] *** Quits: nekonibble (~nekonibbl@user/nekobit) (Client Quit)
[02:14:06] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[02:14:19] <arahael> blahboybaz: So yes, a testing framework works with that idea - it acknowledges that people often prefer to get those dependencies from teh global state, and so, the test framework offers functionality to "swap those out temporarily", for the purpose of testing.
[02:14:22] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[02:14:58] <blahboybaz> Right on
[02:15:01] <arahael> blahboybaz: These dependencies are global, however, so you can only swap it out globally - you can't say, "test this... With those dependencies", and "test that, with those otehr dependencies" - you can only do one, and then the other, by swapping them out temporarily.
[02:15:33] <arahael> blahboybaz: So these dependencies should be considered global singletons, effectively.  Just want to make that explicit if you want to use that for your main program.
[02:16:34] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[02:16:35] <arahael> blahboybaz: So THAT's why mocking libraries for dynamic langauges will often allow you to do some sort of live patching.  Python calls this "patch", many others including ruby call this "monkeypatching".  Seems Jest calls this "spying".
[02:17:00] <blahboybaz> I appreciate the talk but tbh I'm seeing a tremendous number of terminology I have only a limited understanding of
[02:17:33] *** Quits: chomwitt (~Pitsikoko@2a02:587:dc04:e00:85d7:f442:7698:9c9a) (Remote host closed the connection)
[02:17:34] <blahboybaz> Maybe it's just me not feeling confident in my understanding of terminology
[02:18:02] <blahboybaz> I seem to get trapped in trying to figure everything out rather than just DOING stuff and I really only learn when I do that thing I'm trying to learn.
[02:18:27] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:18:54] <arahael> blahboybaz: does it help in this conversation if youc onsider the specific terminology as "keywords to investigate to learn more"?  Because I've tried to make the explanation general.  What are the keywords (other than Dependency Injection and Inversion of Control, which I've already summarized)?
[02:18:56] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 255 seconds)
[02:20:07] <blahboybaz> arahael: Yes but in my case I tend to overanalize things I guess (been accused of being a too detailed thinker all my life). I think it takes me longer than others to sort things out.
[02:20:58] <arahael> blahboybaz: Nothing wrong with that, though you may need to prioritise. :)
[02:21:33] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:21:57] <blahboybaz> I look at words I don't understand in a sentence like variables in an equation. The meaning of the sentence comes from solving the equation and if you have to many variables it gets more difficult to solve. (I know how crazy that must sound).
[02:22:13] <blahboybaz> arahael: for sure
[02:22:29] <blahboybaz> I'm gonna get back to doing some stuff - thanks man
[02:22:32] <arahael> blahboybaz: Not crazy at all, no.  Are you able to share that list from this specific conversation that makes you a bit stuck on it?
[02:22:39] <arahael> blahboybaz: Ah, no worries - take care.
[02:22:44] <arahael> blahboybaz: Glad to help. :)
[02:22:55] *** Quits: Maker (~maker@70.18.215.45) ()
[02:23:58] <blahboybaz> Well I only have a summary (not technical) undeserstanding of 'singleton', 'Inversion of Control', and 'Dependency Injection' - just off the top of my head without scrolling back in the convo
[02:24:19] <blahboybaz> It's cool man. Maybe we get to it another time
[02:24:22] <blahboybaz> peace out for now
[02:25:04] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:25:09] <arahael> blahboybaz: No worries - the explaination in the discussion covers those topics except for singleton. :)  An example of a singleton is probably console.log: You only ever have the one instance of that, and they really are globals.  Another time. :)
[02:26:08] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Quit: WeeChat 3.2)
[02:26:58] *** Quits: inom (~inom@176.59.102.225) (Ping timeout: 240 seconds)
[02:28:53] <blahboybaz> class myClass { constructor(){ this.instance = new myClass } }   maybe?
[02:29:04] <blahboybaz> idk
[02:29:48] <arahael> blahboybaz: That's a common implementation, yeah, though I was being a bit more meta: In javascript, you can consider the class itself, rather than the instance, to also be a singleton.
[02:30:12] <arahael> blahboybaz: It's objects all the way down. :)
[02:31:05] <arahael> (Not sure how one normally sets up singletons in javascript - maybe rather than 'this.instance = new myClass', you'd be doing myClass.instance = new myClass)
[02:31:25] * arahael doesn't usually use javascript.
[02:31:39] <blahboybaz> I see
[02:32:11] <pulse> singletons are typically implemented as IIFE's (immediately invoked function expressions) in javascript
[02:32:28] <blahboybaz> Seems like just a regular object is by nature a singleton then (something like let obj = ();) then
[02:32:38] <pulse> something like.. let x = (function() { /*private things*/ return { /* public api */ }; }());
[02:32:54] <pulse> or you can just do an object literal if you don't care for encapsulation
[02:32:57] *** Joins: nekonibble (~nekonibbl@user/nekobit)
[02:33:06] <blahboybaz> a literal yeah
[02:33:09] <arahael> pulse: And pretty much at the module scope, too, I'm guessing?
[02:33:23] <pulse> yeah this works at any level
[02:33:42] <arahael> blahboybaz: Anyway, so that's what the "spy" functionality in your mock library is intending to deal with: To allow temporarily swapping all this out.
[02:33:46] <pulse> the modern way i suppose would be with Class
[02:33:47] <arahael> (For the purposes of testing)
[02:34:15] <blahboybaz> arahael: right on
[02:34:48] *** Quits: JuggleTux (~tux@83.137.6.190) (Ping timeout: 268 seconds)
[02:34:50] <blahboybaz> beforeEach() lets me start fresh every time tho
[02:34:59] <blahboybaz> in jest anyway
[02:35:15] <arahael> blahboybaz: Yep, the operative word is "temporarily".  You don't want the output of one test to influence the next, afterall.
[02:35:40] *** Joins: Raguile (~Raguile@user/raguile)
[02:36:24] <blahboybaz> I don't get the part about writhing a fialing test to start with. I mean I get why to do it but not the implmentation of the concept: failing test, passign test, refactor (or whatever that last part is)
[02:36:36] <blahboybaz> fialing\failing
[02:37:23] *** Quits: nekonibble (~nekonibbl@user/nekobit) (Ping timeout: 255 seconds)
[02:37:39] <blahboybaz> You do a failing test then delete it then do a passing test by itself then consider how to rewrite the code if needed or to add to the code (new feature) if needed?
[02:37:44] <arahael> blahboybaz: That's generally part of "TDD" philosophy, but ultimately ti gives you confidence that your test is actually testing something.  I've seen people write a test, that just passes, but it tests nothing.  If it fails first, you've proven to yourself that the state it's testing for is actually being tested when you implement the test so that it passes.
[02:37:58] <Lyn> didn't read the chat, but making sure something fails a test is useful to weed out improper but potential use
[02:38:04] <arahael> ^^ That.
[02:38:30] <blahboybaz> kind of like doing a hello world program to test your compiler (or interpreter) before investing any more time
[02:38:44] <arahael> Kind of, yeah.
[02:39:06] <blahboybaz> right on
[02:39:39] <blahboybaz> Lyn: "use" ?
[02:39:59] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[02:40:00] <Lyn> hacking, for example
[02:40:12] <blahboybaz> oh
[02:40:15] <blahboybaz> ok
[02:40:56] <blahboybaz> I wonder if a testing framework can be effectinve in pen testing your codebase
[02:41:04] <blahboybaz> intentionally trying to break shit
[02:42:16] *** Joins: arcatech (~arcatech@user/arcatech)
[02:48:01] *** Joins: JuggleTux (~tux@83.137.6.185)
[02:50:27] *** Quits: freakazoid333 (~freakazoi@72.168.176.108) (Read error: Connection reset by peer)
[02:50:51] *** Joins: freakazoid333 (~freakazoi@72.168.176.108)
[02:52:06] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:55:50] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 255 seconds)
[02:59:16] *** Quits: ixil (~ixil@82.197.178.137) (Remote host closed the connection)
[03:00:26] *** Quits: ChromaCat248_ (~ChromaCat@user/chromacat248) (Quit: Leaving)
[03:02:09] *** Quits: Akuli (~Akuli@82-203-165-49.bb.dnainternet.fi) (Quit: Leaving)
[03:05:24] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[03:06:41] *** Joins: LunarJetman (LunarJetma@97e14d2e.skybroadband.com)
[03:06:56] <LunarJetman> me posting as Mr Flibble - https://groups.google.com/g/comp.theory/c/6cEnndkkrKA (Turing's halting problem)
[03:07:41] *** Joins: ChromaCat248 (~ChromaCat@user/chromacat248)
[03:08:03] *** Quits: ayenet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[03:08:40] *** Quits: Intelo (~Intelo@88.246.74.132) (Ping timeout: 246 seconds)
[03:11:24] *** Joins: Nact (~l@host-85-27-127-131.dynamic.voo.be)
[03:12:22] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:18:20] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 255 seconds)
[03:21:39] *** Quits: chemiker (~xarch@ip5f5a05e1.dynamic.kabel-deutschland.de) (Ping timeout: 265 seconds)
[03:24:37] *** Quits: Iryon (~Iryon@185-12-21-77.sigma.jaslo.pl) (Remote host closed the connection)
[03:25:48] *** Joins: misnor (~misnor@156.57.153.38)
[03:30:17] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Remote host closed the connection)
[03:35:12] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[03:35:25] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[03:35:48] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[03:46:18] <pikapika> Does anyone know some good free decompilers that are multiplatform? (In the sense they can decompile an exe, a linux binary, etc)
[03:46:46] <pikapika> Preferably one thats itself available for linux
[03:48:03] <vdamewood> Are decompilers still a thing?
[03:48:35] *** Joins: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[03:49:14] *** Quits: danielrparks (~quassel@2600:1700:3f7b:20f:96c:bc33:fcf7:92b0) (Quit: No Ping reply in 180 seconds.)
[03:50:29] *** Joins: danielrparks (~quassel@2600:1700:3f7b:20f:e71c:b9c2:6843:424e)
[03:50:41] <pikapika> vdamewood, as long as long abandoned binary only dead software exists, decompilers will continue to exist
[03:50:43] <Twix> pikapika, free as in free software or free as in beer?
[03:50:55] <pikapika> Twix, preferably both but at least the latter
[03:51:10] * vdamewood gives pikapika an empty glass.
[03:51:13] <Twix> and with decompilers you mean decompile to C source?
[03:51:22] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 240 seconds)
[03:51:24] <arahael> I've used decompilers in the past, a good way to get some insight into a closed-source project, but I've only used RedGate, which is .NET only.
[03:51:33] <pikapika> Anything will do, I think C seems most natural as an intermediate from pure asm
[03:51:56] *** Quits: chance (~chance@user/chance) (Quit: Client closed)
[03:52:03] <arahael> pikapika: In practice, I think for optimised C, you might as well just read the assembly.
[03:52:18] <Twix> Well, there is this NSA thingy ... Ghidra. It is free software
[03:52:21] <vdamewood> If you decompile a C++ program with a C decompiler, will it still look normal, but with explicit vtables, and still-mangled names?
[03:52:30] <pikapika> I don't know how optimized it is, its a program from like 15 years ago
[03:52:34] <pulse> this reminds me of an instance where my old boss asked us to decompile the competitors C# code and it was literally the full source code without comments
[03:52:38] <pulse> but function names etc. were all tehre
[03:52:46] <pulse> at least i think that's how it worked
[03:52:54] <arahael> vdamewood: Right.
[03:53:08] <Twix> Then there is IDA pro, i think the decompiler is free for private use. At least for some platforms
[03:53:25] <arahael> pulse: Decompiling the byte-code compiled langauges tends to be that good - RedGate especially.
[03:53:41] <pulse> i think it was basically the full source
[03:53:48] <pulse> so we just copied their entire business logic
[03:53:53] <pulse> not that i condone... such practices
[03:54:18] <LjL> you don't condone, you just... done
[03:54:21] <arahael> pulse: Awkward.
[03:54:46] <pulse> well on the plus side, compatibility was great :D
[03:54:52] <pulse> i crack myself up
[03:54:57] <Twix> there is radare2. I think they were working on a decompiler.
[03:55:05] *** Quits: ji (uid72176@user/raj) (Quit: Connection closed for inactivity)
[03:55:14] <Twix> But i think you should simply use ghidra, pikapika
[03:55:14] <pikapika> Twix, does ghidra have native linux builds
[03:55:21] <Twix> its java
[03:55:24] <pikapika> and can the linux version decomp windows bins
[03:55:26] <pikapika> oh
[03:55:27] <Twix> so .. yes?
[03:55:40] <pikapika> Ok, I'll check ghidra
[03:56:17] <misnor> I was about to recommend ghidra with the caveat that it is from the NSA.
[03:56:45] <Twix> but all the people use. I even know people who used it before it made freely avaible
[03:56:57] <Twix> because it was in one of those "NSA Tools leak"
[03:57:15] <Twix> *was made
[03:57:51] <pulse> decompiling sounds like some CSI stuff. i don't imagine decompiling C and looking at the result is anything close to pleasant though
[03:58:08] *** Quits: jaysicks (~jaysicks@BC9C1F67.mobile.pool.telekom.hu) (Read error: Connection reset by peer)
[03:58:26] *** Joins: jaysicks (~jaysicks@BC9C1F67.mobile.pool.telekom.hu)
[03:58:52] <PlanckWalk> It isn't, mostly because of the optimization
[03:59:13] <Twix> pulse, i used ida pro a few times. The result is actually quite good. But of course, it contains a lot oddities
[03:59:32] *** Quits: jaysicks (~jaysicks@BC9C1F67.mobile.pool.telekom.hu) (Remote host closed the connection)
[03:59:33] <pulse> PlanckWalk, yeah that's what i was thinking. a lot of garbled logic
[03:59:42] <pulse> optimal for the machine but maddening for a human
[04:00:10] *** Joins: jaysicks (~jaysicks@BC9C1F67.mobile.pool.telekom.hu)
[04:00:44] <PlanckWalk> It's just a bit of untangling mostly, but sometimes it is just rearranged and unexpected
[04:01:30] <PlanckWalk> Un-optimized code is almost worse in some ways
[04:02:20] <PlanckWalk> Like, "WTF does this load a register with a constant, write it to memory, read it back from memory, and copy it to a second register, then write that register back to the same memory location again?"
[04:03:23] <pulse> there's probably lot of unrolling of loops and such too
[04:03:26] <pulse> at least i imagine it as such
[04:03:31] <pulse> i've only ever seen decompiled C#
[04:04:03] <pulse> well, i watched a youtube video about some guy decompiling stuff at one point
[04:04:08] <pulse> i think it was to fix a bug in a really old game
[04:04:20] <pulse> and somehow he succeeded, and it looked borderline impossible iirc
[04:04:27] <PlanckWalk> Decompiled Java is usually pretty easy to read
[04:04:40] <pulse> probably similar to C#
[04:04:41] <PlanckWalk> Except that all the well-known decompilers have bugs.
[04:06:00] <PlanckWalk> So you either want to fix them in your local copy (sending patches is an exercise in frustration usually) or use at least two and compare the output.
[04:06:45] <pikapika> PlanckWalk, hows the quality for C decomp
[04:07:10] <PlanckWalk> No idea for decompiling-to-C
[04:07:20] <PlanckWalk> Disassembling is pretty straightforward though
[04:07:20] <pikapika> For the program I am experimentingw with, C should be the most natural output format
[04:07:36] <pikapika> Disasm is easy but reading machine generated asm is tedious
[04:08:00] <PlanckWalk> Last time I used decompile-to-C was ages ago and it was pretty poor then.
[04:08:43] <PlanckWalk> As in even something almost as simple as "Hello World" wouldn't recompile to a working program.
[04:08:43] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[04:09:05] <PlanckWalk> It would just give you a general idea of the code structure
[04:10:01] <PlanckWalk> With Java, you get one compiler-breakign error per maybe 1000 lines
[04:10:19] <PlanckWalk> (Depending on what features were used etc)
[04:11:07] <PlanckWalk> Err compile-breaking, as in won't produce working code that behaves as the original.
[04:11:13] <vdamewood> Now I want a decompiler
[04:12:05] <arahael> vdamewood: I seem to recall that VS (Pro) has one built-in, at least for .net.
[04:12:33] <vdamewood> Hmm I wonder if comm has it.
[04:13:49] *** Joins: Jacktar_ (~whiteshad@gateway/tor-sasl/jacktar)
[04:14:28] *** Quits: nekobyte (~nekobyte@user/nekobit) (Quit: nyaaaa and don't forget, you're here forever :3)
[04:15:44] *** Joins: Rounin (~david@cm-84.212.130.215.getinternet.no)
[04:16:01] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[04:16:49] *** Quits: jacktar (~whiteshad@gateway/tor-sasl/jacktar) (Ping timeout: 244 seconds)
[04:16:50] *** Jacktar_ is now known as jacktar
[04:18:40] *** Quits: jess (~jess@libera/staff/jess) ()
[04:21:08] *** Quits: jstoker (~jstoker@user/jstoker) (Read error: Connection reset by peer)
[04:22:19] *** Joins: nekobyte (~nekobyte@user/nekobit)
[04:24:22] *** Joins: jstoker (~jstoker@user/jstoker)
[04:27:05] <DarkTrick> **Q** @ Where to store default settings in my application: Any ideas from you guys? https://softwareengineering.stackexchange.com/q/430139/345246
[04:27:17] *** Quits: vitorgonc (~vitorgonc@2804:d55:580c:5e00:2d03:d5cd:bf32:187b) (Ping timeout: 252 seconds)
[04:28:02] <vdamewood> DarkTrick: Which OS?
[04:28:10] <DarkTrick> Ubuntu
[04:28:18] *** Quits: nekobyte (~nekobyte@user/nekobit) (Quit: don't forget, you're here forever :3)
[04:28:30] <DarkTrick> But... does that make a difference?
[04:29:05] <vdamewood> Oh, in-code values.
[04:29:13] <vdamewood> No, then it doesn't matter.
[04:29:28] <DarkTrick> ye, in case on-disk values are not set
[04:29:49] <vdamewood> Put it in the code that reads the on-disk values.
[04:30:17] <DarkTrick> vdamewood, what's the rationale behind this decision?
[04:31:16] <vdamewood> That's where you're reading ht value anyway. so you just call your getvalue function, and have it return the default if there's none on disk.
[04:34:53] *** Quits: Lyn (~Lyn@user/law) (Ping timeout: 252 seconds)
[04:35:04] <DarkTrick> vdamewood, So I would have a hashtable with all the default values as values and setting names as keys. If there's nothing on disk, the value of the hashtable will be returned <-- for example
[04:35:49] <vdamewood> DarkTrick: Yep, or you could have the hashtable, then write over the defaults when you read the on-disk config.
[04:36:34] <pikapika> vdamewood, The KÃ¶ppen climate classification defines a climate as "temperate" when the mean temperature is above âˆ’3 Â°C (26.6 Â°F) but below 18 Â°C (64.4 Â°F) in the coldest month. However, other climate classifications set the minimum at 0 Â°C (32.0 Â°F).
[04:36:36] <DarkTrick> even smarter!
[04:37:32] <vdamewood> pikapika: Did I lose the context?
[04:37:36] <DarkTrick> vdamewood, thanks for the quick help!
[04:38:30] <pikapika> vdamewood, whats your opinion on that climate?
[04:38:43] <pikapika> Is it truly "temperate" for you, or is it hot or is it cold for you?
[04:38:58] <vdamewood> I don't really have an opinion.
[04:39:30] <pikapika> vdamewood, is your place colder or warmer
[04:42:24] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[04:42:57] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:e833:e331:ef6f:afca) (Quit: Leaving)
[04:43:05] <vdamewood> It's temperate then. Our average high is 17.7, our average low is 7.9.
[04:43:10] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:7133:e4e2:a4dd:98d5) (Quit: Leaving)
[04:43:15] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[04:44:04] <pikapika> vdamewood, still higher than temperate I think
[04:44:11] <pikapika> apparentlyh lows can go as low as -3
[04:44:21] <pikapika> I'd say yours is a very pleasant climate
[04:44:41] *** Joins: Guest88 (~Guest88@87.101.92.27)
[04:44:46] <vdamewood> It'a classified as temperate rain forest.
[04:51:38] *** Joins: vitorgonc (~vitorgonc@2804:d55:580c:5e00:2d03:d5cd:bf32:187b)
[04:51:57] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[04:52:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:52:14] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:3012:8da5:3c00:21ae)
[04:53:04] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 258 seconds)
[04:59:12] *** Joins: jazzy (~jaziz@2600:380:8653:59ba:fdf6:260a:bc2c:db50)
[05:00:11] <vdamewood> When Arnold Schwartzenegger goes pee, he's the Unrinator
[05:00:18] <vdamewood> Urinator
[05:00:27] <pikapika> I like that word
[05:00:48] <Guest88> Urinegger
[05:01:22] *** Quits: Rounin (~david@cm-84.212.130.215.getinternet.no) (Ping timeout: 240 seconds)
[05:01:27] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[05:02:29] *** Quits: vitorgonc (~vitorgonc@2804:d55:580c:5e00:2d03:d5cd:bf32:187b) (Ping timeout: 252 seconds)
[05:03:27] *** Joins: vitorgonc (~vitorgonc@2804:d55:58e0:2600:2d03:d5cd:bf32:187b)
[05:08:29] *** Quits: Tazmainian (~Tazmainia@41.193.169.28) (Read error: Connection reset by peer)
[05:08:42] *** Quits: rtypo (~alex@user/rtypo) (Quit: WeeChat 3.2)
[05:09:57] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[05:10:18] *** Quits: ephemer0l (~ephemer0l@organizedmagnetism.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[05:12:03] *** Joins: nekonibble (~nekonibbl@user/nekobit)
[05:12:08] *** Joins: ephemer0l (~ephemer0l@organizedmagnetism.com)
[05:12:11] *** Joins: Treebeard (~bland@64.253.0.103.dyn-cm-pool70.pool.hargray.net)
[05:12:13] *** Quits: Treebeard (~bland@64.253.0.103.dyn-cm-pool70.pool.hargray.net) (Changing host)
[05:12:13] *** Joins: Treebeard (~bland@user/benland100)
[05:13:18] *** Quits: BenLand100 (~bland@user/benland100) (Ping timeout: 265 seconds)
[05:13:18] *** Treebeard is now known as BenLand100
[05:14:26] *** Quits: vitorgonc (~vitorgonc@2804:d55:58e0:2600:2d03:d5cd:bf32:187b) (Ping timeout: 255 seconds)
[05:14:40] *** Joins: vitorgonc (~vitorgonc@2804:d55:580c:5e00:2d03:d5cd:bf32:187b)
[05:17:22] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 272 seconds)
[05:21:42] *** Joins: audiocat (~audio@2603-8081-1800-00ad-0cb4-6e2c-d49d-e8f1.res6.spectrum.com)
[05:21:58] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[05:23:39] *** Joins: newshound (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[05:26:08] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[05:26:13] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[05:26:35] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 255 seconds)
[05:28:13] <vdamewood> I wish there were a definitive bible on C#.
[05:28:20] <vdamewood> Like with C or Perl.
[05:28:35] *** Quits: newshound (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net) (Quit: WeeChat 2.8)
[05:29:18] *** Joins: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[05:30:10] *** Quits: Rayke (rayke@user/rayke) (Ping timeout: 246 seconds)
[05:31:55] *** Joins: Rayke (rayke@user/rayke)
[05:32:04] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[05:32:19] *** Joins: sena (~sena@user/sena)
[05:33:12] *** Quits: zoey (~zoey@2a02:8084:a080:9e00:3fae:994c:3fdc:274d) (Quit: Leaving)
[05:33:51] *** Quits: freakazoid333 (~freakazoi@72.168.176.108) (Read error: Connection reset by peer)
[05:34:07] *** Quits: Apple][ (capo@user/telvana) (Remote host closed the connection)
[05:34:19] *** Joins: freakazoid333 (~freakazoi@72.168.176.108)
[05:34:48] *** Joins: jmft2 (~jmft2@81.149.115.87.dyn.plus.net)
[05:35:22] *** Joins: Telvana (~capo@user/telvana)
[05:36:44] *** Joins: tuxedo (~tuxedo@114.125.103.211)
[05:37:00] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 272 seconds)
[05:38:05] <blahboybaz> I've been fighting with this thing all day long and I can't seem to tell what the source of the problem is. Feel like painting the walls with my brains at this point
[05:38:37] * vdamewood dips into blahboybaz's skull for more 'paint'.
[05:38:45] <vdamewood> blahboybaz: what's going on?
[05:40:00] *** Quits: Telvana (~capo@user/telvana) (Read error: Connection reset by peer)
[05:40:07] *** Quits: Guest88 (~Guest88@87.101.92.27) (Quit: Client closed)
[05:40:51] *** Quits: jmft2 (~jmft2@81.149.115.87.dyn.plus.net) (Quit: Client closed)
[05:40:58] *** Joins: Telvana (capo@user/telvana)
[05:41:07] <phogg> programming is a lot like banging your head against a wall repeatedly. Eventually you make a window, but it's painful
[05:41:25] <phogg> and yet if you stop then you get no window
[05:41:31] <blahboybaz> vdamewood: jest
[05:41:43] <blahboybaz> I hate it and I hate their documentation
[05:41:59] <blahboybaz> I thought that by default a jest spy was supposed to be the unmocked, actual implmentation. If that is true (and I'm implementing the test right)  then there is something wrong with the code I am testing (my actual code in the codebase), or I'm not implementing the test right. The code being tested is extremely, radically simple (16 short lines) and I can't see that being being the source of the
[05:42:02] *** Quits: freakazoid333 (~freakazoi@72.168.176.108) (Read error: Connection reset by peer)
[05:42:05] <blahboybaz> failure, the reason given by jest f or the failure smacks of the mock being used (not the real implementation), and manual testing confirms the validity of the code being tested. Is there some reason jest.spyOn() might be using the mock rather then the real implementation?
[05:42:09] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[05:42:22] <blahboybaz> https://onecompiler.com/nodejs/3x4y7dqyq
[05:42:42] *** Joins: freakazoid333 (~freakazoi@72.168.176.108)
[05:42:42] <vdamewood> Hmm... I'm  not familiar.
[05:42:57] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[05:43:15] <blahboybaz> vdamewood: me either
[05:43:27] <arahael> blahboybaz: The documentation says "Creates a mock function similar to jest.fn but also tracks calls to object[methodName]. Returns a Jest mock function."
[05:43:38] *** Joins: pete443_ (~pete@user/pete443)
[05:44:31] <arahael> blahboybaz: Curiously it also points out that it also calls the "Spied" method by default, so you might need to show a *short* example of how you're calling it.  Please use the pastebin, though I can't imagine that your example will be more than a couple of lines for the spyOn bit specifically.
[05:44:48] <blahboybaz> arahael: How the heck do you test the actual implementation then? Specifically the initial values of fields when the object is created. I saw a requireActualImplementation() for jest but the documentation is confusing on how to implement that.
[05:45:14] <arahael> blahboybaz: Usually these are the dependencies of the actual method you're testing.
[05:45:15] *** Quits: radu2424 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[05:45:56] *** Quits: pete443 (~pete@user/pete443) (Ping timeout: 252 seconds)
[05:46:01] <arahael> blahboybaz: Ie, lets say you're testing `listLinesInFile`, but you know that listLinesInFile calls 'print' and 'File.Open".  You might (and probably do) want to spy on 'print' and 'File.Open' in order to have full visibility on 'listLinesInFile'
[05:46:19] *** Joins: radu2424 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[05:46:35] <blahboybaz> arahael: https://onecompiler.com/nodejs/3x4y7dqyq  <--  Shows the questionable test in context but the whole paste is fairly small and simple and the comments in it make it clear where to look
[05:47:19] *** Quits: Telvana (capo@user/telvana) (Remote host closed the connection)
[05:47:35] *** Joins: Telvana2 (capo@user/telvana)
[05:47:50] <arahael> blahboybaz: Yeah, I think you're mocking the very thing you're testing.  That's probably not ideal.
[05:48:12] *** Joins: nekobyte (~nekobyte@user/nekobit)
[05:48:17] <blahboybaz> I do an automock right out the gate and test a few things and that goes well, then I want to test the initialization values of the fields in the actual implemenation so I try a jest.spyOn() but get a failure
[05:48:50] <blahboybaz> I thoght I could switch from using the mock to using the real implementation later on
[05:48:59] *** Telvana2 is now known as Telvana
[05:49:29] *** Joins: jmft2 (~jmft2@81.149.115.87.dyn.plus.net)
[05:49:41] <arahael> blahboybaz: I would probably suggest only mocking things that the real implementation depends on.
[05:49:49] <blahboybaz> I saw a requireActualImplementation() for jest but the documentation is confusing on how to implement that.
[05:50:15] <arahael> blahboybaz: That's mostly when the dependencies are HUGE and difficult to fake out completely.
[05:50:36] <blahboybaz> ahh
[05:50:55] <arahael> Or when the dependencies have rather intricate behaviour you need to preserve in order for the subject under test (which is not itself mock'ed) to operate.
[05:50:56] <blahboybaz> So I should just do spyOn() instead of mocking for everything I'm testing?
[05:51:42] *** Quits: jmft2 (~jmft2@81.149.115.87.dyn.plus.net) (Client Quit)
[05:51:50] <arahael> spyOn is mostly, from what I can tell, for those dependencies that you can't normally directly access, eg, for globals.  If you can pass in the dependency normally, then I wouldn't bother with spyOn.
[05:51:56] <blahboybaz> but them I'm back to not being able to use spyOn() to test the constructor
[05:52:17] <arahael> I think the python naming here is better: It calls spyOn "patch" instead.  Much clearer.
[05:52:37] <blahboybaz> Well I guess I really don't know how to do this then - maybe it's time for a walk
[05:52:54] <arahael> Walks are good!  Clears the head. :)
[05:53:01] <arahael> I'm about to go for one myself.
[05:54:16] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.2)
[05:54:27] <arahael> vdamewood: btw, the context here was https://jestjs.io/docs/jest-object#jestspyonobject-methodname
[05:54:45] *** Joins: Enitin (~enitin@181.214.206.141)
[06:00:49] *** Joins: Null_A (~null_a@2601:645:8700:2290:99b9:1812:a970:81db)
[06:00:49] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[06:01:32] *** Quits: nekobyte (~nekobyte@user/nekobit) (Read error: Connection reset by peer)
[06:01:56] *** Joins: nekobyte (~nekobyte@user/nekobit)
[06:02:06] *** Joins: vicfred (~vicfred@user/vicfred)
[06:02:26] *** Quits: xff0x (~xff0x@2001:1a81:525a:ea00:2bea:6319:b748:f3db) (Ping timeout: 252 seconds)
[06:04:01] *** Joins: xff0x (~xff0x@2001:1a81:5298:1800:8236:5b72:ab69:e57)
[06:06:29] *** Quits: radu2424 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[06:06:44] *** Joins: gggp (~gggp@125.33.90.106)
[06:07:31] *** Joins: radu2424 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[06:08:35] *** Joins: brabrax- (~brabrax@user/brabrax)
[06:09:22] *** Quits: brabrax_ (~brabrax@user/brabrax) (Ping timeout: 246 seconds)
[06:11:59] *** Quits: tuxedo (~tuxedo@114.125.103.211) (Quit: Bye.)
[06:14:17] *** Joins: foozle (~foozle@2001-b011-c001-52e7-516b-1d97-31a7-6d4d.dynamic-ip6.hinet.net)
[06:16:54] *** Quits: Mangy_Dog (~Mange@user/mangy-dog/x-7397214) (Ping timeout: 272 seconds)
[06:17:24] *** Quits: jaysicks (~jaysicks@BC9C1F67.mobile.pool.telekom.hu) (Remote host closed the connection)
[06:19:21] *** Joins: roent (~roent@user/roent)
[06:25:05] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 255 seconds)
[06:26:08] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[06:30:00] <lerzer> how would one decrypt this simple algorithm? https://pastebin.com/MDPC6Dx2]
[06:30:10] <lerzer> is it just decoding the method and reversing the appropriate transformation for each char?
[06:32:47] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[06:33:58] *** Joins: soapsudsxx (~soapsudsx@209.221.40.138)
[06:34:56] *** Joins: gggp_ (~gggp@60.10.194.47)
[06:37:32] *** Quits: gggp (~gggp@125.33.90.106) (Ping timeout: 252 seconds)
[06:40:36] <blahboybaz> I'm just not finding the information I need or I'm not understanding how to apply it to my use case (if it is there). I haven't wanted to just ask here (like, spoon fed) but I am just not finding the solution - so, here goes..  Real sorry, been getting a lot of feedback and advice on here lately and it has helped, but, I am trying to test the the initialization value of the properties in a class
[06:40:42] <blahboybaz> (the values an actual instance would have but using jest and not manually testing). That test would have to come after a few other tests in the suite that do use a mock (ie: previouse tests use a mock and pass but then, later, I want to test the actaul instantiation values of the fields in that class).
[06:40:50] *** Quits: vitorgonc (~vitorgonc@2804:d55:580c:5e00:2d03:d5cd:bf32:187b) (Ping timeout: 255 seconds)
[06:41:40] <blahboybaz> Even if I knew what to look for that fits the use case
[06:44:30] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[06:44:32] *** Joins: Mangy_Dog (Mange@82-69-39-176.dsl.in-addr.zen.co.uk)
[06:44:32] *** Quits: Mangy_Dog (Mange@82-69-39-176.dsl.in-addr.zen.co.uk) (Changing host)
[06:44:32] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[06:44:32] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[06:47:35] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 255 seconds)
[06:47:55] *** Joins: TechTest (uid283215@id-283215.tooting.irccloud.com)
[06:51:41] *** Joins: nekobyte_ (~nekobyte@user/nekobit)
[06:51:45] *** Joins: amigojapan (uid86330@id-86330.brockwell.irccloud.com)
[06:52:05] *** nekobyte is now known as Guest5697
[06:52:05] *** Quits: Guest5697 (~nekobyte@user/nekobit) (Killed (calcium.libera.chat (Nickname regained by services)))
[06:52:05] *** nekobyte_ is now known as nekobyte
[06:52:29] *** Joins: gggp__offline (~gggp@60.10.194.47)
[06:53:34] *** gggp__offline is now known as gggp
[06:54:42] *** Quits: nekobyte (~nekobyte@user/nekobit) (Read error: Connection reset by peer)
[06:55:14] *** Quits: gggp_ (~gggp@60.10.194.47) (Ping timeout: 255 seconds)
[06:55:50] *** Joins: nekobyte (~nekobyte@user/nekobit)
[06:57:20] *** Quits: nulleip (~luiz@179.215.124.48) (Remote host closed the connection)
[07:00:30] *** Joins: tuxedo (~tuxedo@114.125.103.211)
[07:01:10] *** Joins: gggp_ (~gggp@60.10.194.47)
[07:04:15] *** Joins: nulleip (~luiz@179.215.124.48)
[07:04:41] *** Quits: gggp (~gggp@60.10.194.47) (Ping timeout: 255 seconds)
[07:07:04] *** Joins: gggp__offline (~gggp@60.10.194.47)
[07:07:31] *** Quits: Leone (~Leo@45.72.231.86) ()
[07:07:42] *** Quits: roent (~roent@user/roent) (Quit: My client has gone to sleep. ZZZzzzâ€¦)
[07:07:50] *** Joins: vitorgonc (~vitorgonc@2804:d55:580c:5e00:2d03:d5cd:bf32:187b)
[07:08:11] *** gggp__offline is now known as gggp
[07:09:27] *** Joins: gggp__offline (~gggp@60.10.194.47)
[07:10:05] *** Quits: gggp_ (~gggp@60.10.194.47) (Ping timeout: 255 seconds)
[07:12:11] *** Joins: pandakekok9 (~job@user/job)
[07:13:13] *** Parts: tuxedo (~tuxedo@114.125.103.211) (Leaving)
[07:13:16] *** Quits: gggp (~gggp@60.10.194.47) (Ping timeout: 272 seconds)
[07:17:12] *** Joins: Guest67 (~Guest67@120.208.164.67)
[07:18:18] *** Quits: DrMax (~DrMax@node-1w7jra94757fzu1p7ryb77xw1.ipv6.telus.net) (Ping timeout: 240 seconds)
[07:18:31] <vdamewood> So, FreeBSD offers xz compressed downloads of their ISO files, which I'll take because they're around 80% of the size.
[07:19:07] <vdamewood> I tried to decompress the ISO with tar, and tar decided the ISO was a corrupted tarbal and exploded the FreeBSD install system all over my ~/Downloads directory.
[07:20:04] <pikapika> vdamewood, be extremely careful with tar
[07:20:11] *** Joins: kodah (~kodah@user/kodah)
[07:20:19] <pikapika> tar does not have a concept of "directories" or "hierarchy"
[07:20:23] <pikapika> It only understands paths
[07:20:33] <pikapika> so if a file is /bin/whatever inside a tar
[07:20:39] <pikapika> it will untar to just that location
[07:20:48] <pikapika> regardless of what your cwd was
[07:21:03] <vdamewood> pikapika: I'm on macOS, everything is protected.
[07:21:04] <kodah> i want to say the flag to undo that behavior is something like "ignore junk"
[07:21:16] <pikapika> vdamewood, still its a general thing
[07:21:25] <pikapika> tars can unzip anywhere and anywhere
[07:21:25] *** Quits: davros (~davros@host86-185-61-40.range86-185.btcentralplus.com) (Ping timeout: 258 seconds)
[07:21:27] <kodah> then it just tars a file
[07:21:28] *** Quits: Guest67 (~Guest67@120.208.164.67) (Ping timeout: 246 seconds)
[07:21:52] *** Joins: gggp_ (~gggp@60.10.194.47)
[07:22:04] *** Joins: b1101 (~b1101@ool-44c01641.dyn.optonline.net)
[07:22:05] *** gggp_ is now known as gggp
[07:22:07] * kodah checks
[07:22:46] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:22:52] <pikapika> kodah, tars can be treacherous
[07:23:01] <pikapika> Be careful with tars and paths
[07:23:35] <kodah> yeah i've had to work around the problem yall are discussing before
[07:24:00] <kodah> i can't remember the flags to get it to ignore paths, but i think there's multiple ways to do it and none are default
[07:24:27] <kodah> oh, you can pass -C if all files are in the same root directory
[07:24:28] <pikapika> kodah, does that basically make it only expand anything thats inside current directory?
[07:24:34] <pikapika> and ignore others
[07:24:40] <kodah> yeah
[07:24:56] *** Quits: shellwirt (~shellwirt@2001:1284:f013:4856:d59:1e37:347a:600b) (Quit: Leaving)
[07:25:01] <kodah> then if you want it to cut out empty folders there's one where they call those "junk"
[07:25:23] *** Quits: gggp__offline (~gggp@60.10.194.47) (Ping timeout: 255 seconds)
[07:25:49] <kodah> hmm, that flag might be macos
[07:25:58] <pikapika> Yeah mac is very obscure
[07:27:06] *** Joins: gggp_ (~gggp@60.10.194.47)
[07:28:25] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[07:29:00] <vdamewood> macos uses bsdtar
[07:29:27] <vdamewood> In fact, using the Terminal in macOS is basically FreeBSD.
[07:29:33] <pikapika> mac is a very obscure os
[07:30:20] *** Quits: gggp (~gggp@60.10.194.47) (Ping timeout: 255 seconds)
[07:30:47] *** Joins: DrMax (~DrMax@node-1w7jra94757fyzd6z78koagjd.ipv6.telus.net)
[07:33:59] <Twix> https://i.imgur.com/P3adlZk.mp4 :D
[07:35:51] *** Quits: Null_A (~null_a@2601:645:8700:2290:99b9:1812:a970:81db) (Remote host closed the connection)
[07:37:12] *** Quits: misnor (~misnor@156.57.153.38) (Remote host closed the connection)
[07:39:35] <blahboybaz> I think that for some reason jest stubbornly continues to use the mock implementation of my class even if I literally instantiate an instance and test the instance directly (ie: let obj = new myClass(); expect(myClass.field).toBe('some-value');) - why would it do that to me?
[07:40:03] <blahboybaz> Yes, I feel victimized, traumatieed, and scarred at this point
[07:41:05] <beaky> nice i like freebsd
[07:41:48] <pikapika> freebsd is also kinda obscure, but not as much I think
[07:42:21] *** Telvana is now known as Apple][
[07:44:20] <vdamewood> Dammit, Textual still doesn't have an Apple Silicon build.
[07:49:17] *** Joins: diamondbond (~diamondbo@175.157.224.213)
[07:52:25] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[07:53:17] *** Quits: blahboybaz (~blahboyba@c-67-183-225-44.hsd1.wa.comcast.net) (Ping timeout: 255 seconds)
[07:54:39] *** Joins: CodePoint (~BitShift@2600:1700:3070:3790::29)
[07:56:34] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[07:58:31] *** Joins: Izem (~Izem@65.95.172.41)
[07:58:33] *** Quits: freakazoid333 (~freakazoi@72.168.176.108) (Read error: Connection reset by peer)
[07:59:05] *** Joins: freakazoid333 (~freakazoi@72.168.176.108)
[08:03:07] *** Quits: freakazoid333 (~freakazoi@72.168.176.108) (Read error: Connection reset by peer)
[08:04:04] *** Joins: freakazoid333 (~freakazoi@72.168.176.108)
[08:07:37] *** Joins: gggp__offline (~gggp@221.219.77.87)
[08:10:35] *** Quits: gggp_ (~gggp@60.10.194.47) (Ping timeout: 252 seconds)
[08:11:24] <vdamewood> Well, yay. Now I have to wait for Digital ocean to have a Rocky Linux image.
[08:11:47] *** Joins: Guest20 (~Guest20@120.208.164.67)
[08:13:40] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[08:14:45] *** Joins: blahboybaz (~blahboyba@c-67-183-225-44.hsd1.wa.comcast.net)
[08:14:47] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[08:16:12] <beaky> what is rocky linux
[08:16:42] <Guest20> maybe another ditros
[08:17:20] <vdamewood> beaky: It's a rebuild of Red Hat like CentOS was.
[08:18:25] *** __jmcantrell__ is now known as jmcantrell
[08:18:37] *** Joins: seL4 (~seL4@gateway/tor-sasl/sel4)
[08:19:18] <seL4> how do you fix nondeterministic bugs efficiently?
[08:19:45] <seL4> when it isn't your own codebase?
[08:20:20] <vdamewood> You don't.
[08:20:37] <vdamewood> If you don't have source, you don't fix the bug.
[08:20:49] <seL4> I do have source, but I didn't write it
[08:21:31] <vdamewood> Oh. In that case, use a debugger.
[08:21:38] *** Quits: kodah (~kodah@user/kodah) (Quit: kodah)
[08:22:50] <vdamewood> Oh, damn. I'm out of battery power.
[08:23:24] *** Joins: kodah (~kodah@user/kodah)
[08:26:44] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 272 seconds)
[08:27:06] *** Quits: envex (~envex@cpe-173-91-189-33.neo.res.rr.com) (Ping timeout: 252 seconds)
[08:28:42] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[08:28:57] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[08:29:19] *** Quits: gggp__offline (~gggp@221.219.77.87) (Remote host closed the connection)
[08:29:48] *** Joins: gggp__offline (~gggp@60.10.194.47)
[08:29:57] *** Quits: compscipunk (~compscipu@2600:1700:cca0:4d1f:e0b7:2aed:71c6:62e2) (Quit: WeeChat 3.2)
[08:30:27] <seL4> how would I know if I fixed the bug?
[08:30:32] <PlanckWalk> Nondeterministic bugs suck.
[08:31:19] <PlanckWalk> Sometimes you can't know (in practice) whether you fixed it.
[08:31:31] <PlanckWalk> On other occasions you can.
[08:31:34] *** gggp__offline is now known as gggp
[08:32:05] <seL4> ok, thanks
[08:32:27] *** Parts: seL4 (~seL4@gateway/tor-sasl/sel4) ()
[08:32:44] *** Joins: gerred (~gerred@2603-7081-7001-866e-094c-af51-8919-917d.res6.spectrum.com)
[08:34:10] *** Joins: compscipunk (~compscipu@2600:1700:cca0:4d1f:e0b7:2aed:71c6:62e2)
[08:35:18] *** Joins: gggp_ (~gggp@60.10.194.47)
[08:35:40] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[08:37:11] <amigojapan> Hey
[08:37:19] *** Quits: lerzer (~lerzer@101.175.100.42) (Ping timeout: 246 seconds)
[08:37:34] <amigojapan> Hi vdamewood
[08:37:55] <amigojapan> Konnichola
[08:38:39] <amigojapan> vdamewood: did your all night coffee shop ever reopen?
[08:38:43] *** Quits: gggp (~gggp@60.10.194.47) (Ping timeout: 265 seconds)
[08:38:46] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[08:39:14] *** Quits: paulo_ (~paulo_@user/paulo/x-9032687) (Ping timeout: 258 seconds)
[08:40:17] *** Joins: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net)
[08:41:56] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Ping timeout: 252 seconds)
[08:42:25] *** Quits: Izem (~Izem@65.95.172.41) (Quit: Izem)
[08:42:30] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[08:42:39] *** Joins: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca)
[08:43:29] <amigojapan> I feel we lost a lot when we went from having a programming language as an OS to basing the OS around normal office workers
[08:43:59] <kodah> what does that mean?
[08:44:41] <amigojapan> It means it was better when we had a programming language for OS
[08:44:55] <kodah> do we not?
[08:45:06] <amigojapan> No we don't now
[08:45:11] <kodah> what is C?
[08:45:30] <amigojapan> You don't use C as your OS
[08:45:46] <amigojapan> But you did use basic as your OS
[08:46:08] *** Quits: diamondbond (~diamondbo@175.157.224.213) (Ping timeout: 258 seconds)
[08:46:13] <amigojapan> You can use an OS without understanding C at all
[08:46:20] <kodah> you have that concept in the terminal, somewhat
[08:47:03] <amigojapan> Terminal is also based on office workers with "files"and "folders"
[08:47:28] <kodah> how would you organize a system of files?
[08:47:30] <amigojapan> Before you needed to code to really use the computer
[08:47:32] *** Quits: Guest20 (~Guest20@120.208.164.67) (Quit: Connection closed)
[08:48:09] <amigojapan> kodah: files used to be listed as programs too
[08:48:25] *** Quits: CrypticSquared (~CrypticS_@user/crypticsquared) (Quit: Leaving...)
[08:48:30] <kodah> that's effectively what the shell does
[08:48:44] *** Joins: CrypticSquared (~CrypticS_@user/crypticsquared)
[08:49:00] <amigojapan> kodah: files should not be the main thing the OS does tho
[08:49:17] <kodah> what should the OS do instead?
[08:49:54] <amigojapan> Force the user to make their own programs like basic of lisp machines did
[08:50:13] <kodah> such as?
[08:51:12] <amigojapan> kodah: like instead of using a spreadsheet you would code a basic program to do your business expense calculations
[08:51:55] <kodah> where will your program store the state of business expenses?
[08:52:39] *** Joins: gggp__offline (~gggp@60.10.194.47)
[08:53:04] <amigojapan> Sure in a file. But file management should not be the main focus of an OS
[08:53:31] <amigojapan> That is designed for vanilla office workers
[08:53:49] <kodah> what OS's are you speaking on?
[08:54:48] <amigojapan> Oses should be for programmers
[08:55:18] <amigojapan> kodah: like lisp machines or basic computers
[08:56:07] *** Quits: gggp_ (~gggp@60.10.194.47) (Ping timeout: 265 seconds)
[08:56:15] <amigojapan> kodah: what came before UNIX
[08:56:57] *** Joins: gggp (~gggp@60.10.194.47)
[08:59:01] *** Quits: gggp__offline (~gggp@60.10.194.47) (Ping timeout: 265 seconds)
[09:00:47] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 255 seconds)
[09:00:53] *** Quits: gerred (~gerred@2603-7081-7001-866e-094c-af51-8919-917d.res6.spectrum.com) (Quit: Client closed)
[09:04:34] <kodah> i don't know that i agree with your assessment that operating systems are designed for office workers. i do agree that something was lost when operating systems become more abstracted, but there's also a lot gained.
[09:06:08] *** Joins: gggp_ (~gggp@60.10.194.47)
[09:06:58] <amigojapan> kodah: now they are basically designed so anyone can use them without any programming knowledge at all
[09:09:48] *** Quits: gggp (~gggp@60.10.194.47) (Ping timeout: 272 seconds)
[09:11:30] <vdamewood> amigojapan: No, it won
[09:11:39] <vdamewood> 't ever reopen.
[09:11:50] <vdamewood> Also, the building was demolished a month or two ago.
[09:11:56] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[09:12:29] <amigojapan> vdamewood: so there is no coffee shop
[09:13:00] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[09:13:02] *** Joins: img (~img@user/img)
[09:13:24] <vdamewood> Well, most coffee shops haven't been open to the public for a while now.
[09:13:28] *** Quits: gitgood (~gitgood@80-44-9-45.dynamic.dsl.as9105.com) (Ping timeout: 246 seconds)
[09:13:43] <vdamewood> Only places with walk-up windows have been open recently.
[09:14:10] *** Quits: CodePoint (~BitShift@2600:1700:3070:3790::29) (Quit: Never gonna give you up, never gonna let you down...)
[09:14:42] <amigojapan> Ah right forgot about Corona
[09:15:08] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[09:15:25] <amigojapan> vdamewood: in Japan they allow things to be opens up to 8pm
[09:17:03] *** Quits: img (~img@user/img) (Client Quit)
[09:18:26] *** Joins: img (~img@user/img)
[09:18:28] <vdamewood> bugs sure do love pepperoncini juice.
[09:18:59] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[09:23:17] *** Quits: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca) (Quit: Izem)
[09:24:06] *** Joins: gggp__offline (~gggp@221.219.77.87)
[09:24:08] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[09:24:21] <amigojapan> vdamewood: in Japan they call a kind of pasta "pepperoncino"
[09:25:48] *** Joins: flk15 (~flk15@120.208.164.67)
[09:25:56] *** Quits: inky_ (~inky@141.136.79.84) (Ping timeout: 252 seconds)
[09:26:48] *** Quits: The_Blode (~Blode@92.40.180.222.threembb.co.uk) (Changing host)
[09:26:48] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[09:27:02] *** Quits: gggp_ (~gggp@60.10.194.47) (Ping timeout: 252 seconds)
[09:27:49] <vdamewood> amigojapan: In Italian, Peperoncino just means chile pepper.
[09:28:29] <amigojapan> Ah ok
[09:29:27] <vdamewood> What Americans call pepperoncini would be called friggitelli.
[09:29:37] <vdamewood> elsewhere
[09:29:56] <amigojapan> vdamewood: Napolitan is also another name for a pasta invented in Japan
[09:29:59] *** Quits: gggp__offline (~gggp@221.219.77.87) (Read error: Connection reset by peer)
[09:30:05] *** Quits: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net) (Remote host closed the connection)
[09:30:19] *** Quits: rgddev[m] (~rgddevmat@2001:470:69fc:105::69c8) (*.net *.split)
[09:30:19] *** Quits: BEC001AF[m] (~kreatemor@2001:470:69fc:105::a0f) (*.net *.split)
[09:30:19] *** Quits: cisco87 (~quassel@lnxg33k.com) (*.net *.split)
[09:30:19] *** Quits: Ara (~Ara@user/ara) (*.net *.split)
[09:30:19] *** Quits: sevengraff (~admin@li891-34.members.linode.com) (*.net *.split)
[09:30:19] *** Quits: stkw0 (~quassel@ns3046126.ip-91-121-8.eu) (*.net *.split)
[09:30:19] *** Quits: zhiayang (~zhiayang@user/zhiayang) (*.net *.split)
[09:30:19] *** Quits: Boniche (~Boniche@ivysaur.umbreon.net) (*.net *.split)
[09:30:19] *** Quits: Neverloads (NeverLoad@freakshells.net) (*.net *.split)
[09:30:19] *** Quits: blackop (~ocloud@user/blackop) (*.net *.split)
[09:30:19] *** Quits: Mathisen (mathisen@about/windows/staff/mathisen) (*.net *.split)
[09:30:19] *** Quits: nicolapc1 (wasp@tilde.institute) (*.net *.split)
[09:30:19] *** Quits: dodo (~dodo@user/dodo) (*.net *.split)
[09:30:19] *** Quits: Square (~a@178.62.91.8) (*.net *.split)
[09:30:19] *** Quits: sauce (~sauce@omae.wa.mou.shindei.ru) (*.net *.split)
[09:30:19] *** Quits: Bodger1234 (uid503511@id-503511.highgate.irccloud.com) (*.net *.split)
[09:30:19] *** Quits: akselmo (~akselmo@user/akselmo) (*.net *.split)
[09:30:19] *** Quits: woggle (~charles@c-va-26578d734e-1840-1.tingfiber.com) (*.net *.split)
[09:30:19] *** Quits: greyblue9 (uid500829@id-500829.charlton.irccloud.com) (*.net *.split)
[09:30:19] *** Quits: ario_ (~ario@159.65.220.102) (*.net *.split)
[09:30:19] *** Quits: Puyo (sid500577@user/daniel11420) (*.net *.split)
[09:30:19] *** Quits: hbjy (~hbjy@rockylinux/web/hbjy) (*.net *.split)
[09:30:19] *** Quits: routeveg (~lee@197.ip-51-195-136.eu) (*.net *.split)
[09:30:25] *** Joins: Neverloads (NeverLoad@freakshells.net)
[09:30:25] *** Joins: ario (~ario@159.65.220.102)
[09:30:30] *** Joins: routeveg (~lee@197.ip-51-195-136.eu)
[09:30:31] *** Joins: Puyo_ (sid500577@user/daniel11420)
[09:30:31] <vdamewood> https://en.wikipedia.org/wiki/Friggitello
[09:30:31] *** Joins: akselmo_ (~akselmo@user/akselmo)
[09:30:31] *** Joins: Bodger1234_ (sid503511@id-503511.highgate.irccloud.com)
[09:30:34] *** Joins: cisco87 (~quassel@lnxg33k.com)
[09:30:34] *** Joins: greyblue9 (sid500829@id-500829.charlton.irccloud.com)
[09:30:34] *** Quits: flk15 (~flk15@120.208.164.67) (Quit: Connection closed)
[09:30:34] *** Joins: sauce (~sauce@omae.wa.mou.shindei.ru)
[09:30:36] *** Joins: stkw0 (~quassel@ns3046126.ip-91-121-8.eu)
[09:30:41] *** Joins: blackop (~ocloud@user/blackop)
[09:30:49] *** Joins: nicolapc1 (wasp@tilde.institute)
[09:30:49] *** Joins: Mathisen_ (mathisen@about/windows/staff/mathisen)
[09:30:54] *** Joins: woggle (~charles@c-va-26578d734e-1840-1.tingfiber.com)
[09:30:54] *** Joins: Boniche (~Boniche@ivysaur.umbreon.net)
[09:30:58] *** Joins: sevengraff (~admin@li891-34.members.linode.com)
[09:30:59] *** Joins: zhiayang_ (~zhiayang@user/zhiayang)
[09:31:01] *** Joins: dodo (~dodo@user/dodo)
[09:31:16] *** Joins: hbjy (~hbjy@rockylinux/web/hbjy)
[09:31:18] <amigojapan> Ah ok
[09:31:41] *** zhiayang_ is now known as zhiayang
[09:31:44] *** Joins: Ara (~Ara@user/ara)
[09:32:33] *** Joins: Square (~a@178.62.91.8)
[09:33:11] <amigojapan> https://www.justonecookbook.com/ketchup-spaghetti-recipe/
[09:34:31] <arahael> amigojapan: ketchup there must be the american variety: a bit more savory.
[09:35:30] <amigojapan> But sure what kind of ketchup we have arahael
[09:36:04] <amigojapan> Not sure
[09:37:00] <arahael> amigojapan: in australia, as an example, we don't call it "ketchup", we call it "tomato sauce", and due to various health scares in the past where salt was regarded as evil...  our sauces are quite sweet.
[09:37:13] <vdamewood> Ketchup here is basically tomato syrup.
[09:37:43] <vdamewood> Sugar (or high-fructose corn syrup) is the second ingredient.
[09:37:51] <amigojapan> I see arahael so what do you call tomato sauce then?
[09:38:10] <kodah> i think tomato paste is ketchup without sugar or HFCS
[09:38:17] <arahael> amigojapan: uh...  tomato sauce?
[09:38:53] <amigojapan> arahael: in America there is one product called ketchup and another called tomato sauce
[09:38:56] <death916> tomato paste, sauce, and ketchup are all differtn
[09:39:26] <arahael> amigojapan: ah. here it"s all "tomato sauce". there's one brand called ketchup, but thats just a brand. we still call it tomato sauce.
[09:39:28] <vdamewood> We have tomato sauce here too. It's not sweet like ketchup.
[09:39:34] *** Quits: jinsun (~quassel@user/jinsun) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[09:40:04] <arahael> we do have tomato paste too, though, which is just concentrated tomato and salt.
[09:40:06] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[09:40:06] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[09:40:06] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[09:40:15] * amigojapan feels lots of miscommunication are going on
[09:40:17] *** Joins: web-49 (~web-49@120.208.164.67)
[09:40:18] <vdamewood> Yeah, we got that too.
[09:40:53] <vdamewood> amigojapan: Well, it's kind of like how we americans call Frigitelli 'pepperoncini'. different words for things in different places.
[09:41:05] <death916> or bannanna pepeprs
[09:41:18] <vdamewood> Also, arahael, in the US Ketchup is obnoxiously sweet.
[09:41:21] <amigojapan> I see vdamewood
[09:41:33] <arahael> vdamewood: today, or traditionally, though?
[09:41:36] <vdamewood> death916: Banana peppers are different, but close.
[09:41:44] <death916> hmm
[09:41:55] <death916>  i thought they were interchangeable with perpperoncinis
[09:42:03] <death916> guess i was wrong
[09:42:11] <death916> or misinformed
[09:42:30] <arahael> death916: you talking about some sort of capsicium? :)
[09:42:40] <arahael> death916: or some sort of peppercorn?
[09:42:42] <kodah> there's that whole thing where we call horseradish wasabi
[09:42:51] <death916> capsicium
[09:42:55] <death916> the yellow ones
[09:42:57] <death916> that r mild
[09:43:00] <death916> n tangy
[09:43:03] <vdamewood> and often pickled
[09:43:06] <death916> ya
[09:43:14] <arahael> kodah: that one is more intentional - real wasabi is very rare.
[09:43:37] <kodah> yeah, i know why, it's just funny
[09:43:47] *** Joins: wei2912 (~wei2912@112.199.250.21)
[09:43:57] <kodah> more americans would probably like horseradish if they knew it was in a lot of stuff
[09:44:10] *** Joins: euouae (~euouae@user/euouae)
[09:44:11] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[09:44:25] <euouae> In a typical small supercomputer what's the cpu/gpu ratio?
[09:44:43] <vdamewood> arahael: There are two varieties of capsicum in the US that are yellowi to yellow-green in color, and often pickled. One is called Pepperoncini in the US (Frigitelli elsewhere), and one is called a banana pepper.
[09:44:43] <arahael> euouae: you mean, like a phone? ;)
[09:45:25] <euouae> hehe yeah like a phone or I'm thinking of a university supercomputer
[09:45:26] <arahael> vdamewood: curious, in addition to all sorts of "peppers" that you have, you mean?
[09:45:31] <death916> idk if a phone is a super computer by todays standards
[09:45:42] <vdamewood> arahael: Yes, and these are considered 'peppers' in the US as well.
[09:45:46] <euouae> my phone is a huge boost from my laptop for sure
[09:45:47] <death916> it is a compact very powerful computing device tho lol
[09:46:02] <GeDaMo> euouae: https://www.top500.org/lists/top500/2021/06/
[09:46:04] <death916> samsungs u can jus plug into a monitor with a kb n mosue
[09:46:09] <death916> and use it as 1 pc
[09:46:15] <death916> kinda
[09:46:15] <euouae> GeDaMo: nice thanks
[09:46:23] <death916> samsung phones
[09:47:01] <euouae> GeDaMo: where's the gpu info?
[09:47:15] <amigojapan> I use a sharp phone
[09:47:23] *** Joins: gggpkm_ (~gggpkm@221.219.68.57)
[09:47:55] <GeDaMo> It doesn't seem to list the GPUs, that's annoying
[09:48:04] <GeDaMo> "Summit has 4,356 nodes, each housing two Power9 CPUs with 22 cores each  and six NVIDIA Tesla V100 GPUs, each with 80 streaming multiprocessors  (SM)."
[09:48:31] <amigojapan> I realise sharp is not that popular outside Japan
[09:49:04] <euouae> so 6*80*4356?
[09:49:34] *** Quits: alex3 (~alex3@BSN-77-82-41.static.siol.net) (Quit: WeeChat 3.0)
[09:49:40] <euouae> GPUs are optimized for linear algebra right? Even on comparable number of cores, GPUs would outperform CPUs on certain numerical calculations correct?
[09:50:21] <arahael> amigojapan: anyway, i was manly pointing out that the critical ingredient, ketchup, is probably not the same as what was in 1950, and the interpretation has varied a lot too.
[09:51:21] <amigojapan> Ok arahael but I never are ketchup in the 1950s. Also sugar seems more dangerous than salt to me
[09:51:39] <amigojapan> Especially high fructose corn syrup
[09:52:14] <vdamewood> There's nothing more dangerous about HFCS than sucrose. They're nearly identicle chemically.
[09:52:54] <arahael> vdamewood: "nearly", though the other problem with HFCS is it's in *everything* in america as i understand it.
[09:52:55] <GeDaMo> Don't they go through different mechanisms in the body?
[09:53:08] <GeDaMo> euouae: it's probably not that simple
[09:53:23] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:53:24] <vdamewood> arahael: That is the dangerous part.
[09:53:39] <euouae> GeDaMo: in any case, where should the computations lie? in the GPUs right?
[09:53:54] <arahael> amigojapan: oh, just to check, are you more focused on the recipe?  i was reading the "story", which described the history.
[09:54:30] <GeDaMo> It's going to depend on what the machine is actually doing, the CPUs are pretty powerful on their own
[09:54:32] <vdamewood> The difference between HFCS and sucrose is that a sucrose molecule is a fructose molecule and a glucose molecule bonded together. Whereas HFCS is fructose and glucose loose.
[09:54:42] <amigojapan> arahael: I have heard the story too
[09:55:03] <arahael> amigojapan: it's in the article :)
[09:55:07] <vdamewood> The first thing the human body does to sucrose is break it down into fructose and glucose.
[09:55:21] <amigojapan> arahael: you mean the story of Napolitan right?
[09:55:38] <arahael> amigojapan: let me bring up your link again...
[09:55:44] <amigojapan> Ty
[09:55:47] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[09:56:21] <arahael> amigojapan: yes. "origin of Napolitan".
[09:56:28] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Remote host closed the connection)
[09:56:30] <amigojapan> Ah ok
[09:57:11] *** Quits: gggpkm_ (~gggpkm@221.219.68.57) (Ping timeout: 252 seconds)
[10:00:31] <amigojapan> arahael: there is also ketchup with rice omelette
[10:01:52] <death916> gross
[10:03:37] <euouae> GeDaMo: I feel kind of stupid now but I thought GPUs are preferred for certain tasks
[10:03:38] *** Quits: LiftLeft (~LiftLeft@154.21.114.114) (Ping timeout: 272 seconds)
[10:03:53] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[10:03:55] <euouae> e.g. bitcoin mining?
[10:04:04] *** Quits: Nact (~l@host-85-27-127-131.dynamic.voo.be) (Quit: Konversation terminated!)
[10:04:21] <amigojapan> death916: it's actually really good
[10:06:37] <DarkTrick> Can someone help me with my configure.ac file?  I'm trying to implement conditional variable values
[10:06:42] <DarkTrick> https://github.com/DarkTrick/gjiten/blob/deprecationRemoval/configure.ac
[10:06:51] <GeDaMo> GPUs were originally designed for streaming data like, they work well when there are few dependencies between data items
[10:07:00] <death916> gpus are better for alot of tasks
[10:07:27] <death916> i guess untill u have a cpu with sufficient cores
[10:07:37] *** Quits: nekobyte (~nekobyte@user/nekobit) (Quit: don't forget, you're here forever :3)
[10:07:38] <death916> and even still gpous have special hardware for certain workloads
[10:07:41] <DarkTrick> line 67: `gjiten_prefix="$prefix"` If "--debug-enabled" was given at command line, the value should be `../` instead of `$prefix`
[10:08:30] <euouae> So like tasks where the core can just go at it until the end with no input, right?
[10:08:40] *** Quits: bayaz (~bayaz@user/bayaz) ()
[10:08:42] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 272 seconds)
[10:08:46] <euouae> e.g. feed n and compute f(n) and report back
[10:08:56] *** Joins: bayaz (~bayaz@user/bayaz)
[10:08:56] *** ChanServ sets mode: +o bayaz
[10:09:26] <euouae> then the issue is about splitting n's efficiently between the gpu cores?
[10:10:31] <GeDaMo> I suspect a lot of the scientific calculations being run on those supercomputers are based on matrices
[10:12:22] *** Quits: nekonibble (~nekonibbl@user/nekobit) (Ping timeout: 268 seconds)
[10:13:39] *** Joins: roent (~roent@user/roent)
[10:14:49] <vdamewood> amigojapan: I need to test something, would you type '!ops' for me?
[10:15:22] <amigojapan> !ops
[10:15:36] <vdamewood> Oh, that's weird
[10:15:57] <vdamewood> It highlighted, but didn't color it on my client.
[10:16:50] <euouae> GeDaMo: so just utilize both CPU and GPU with the calculations?
[10:17:39] <vdamewood> amigojapan: Arigracias
[10:18:04] <amigojapan> vdamewood: antcat
[10:18:05] <GeDaMo> euouae: they likely do but they still have to coordinate
[10:18:34] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[10:18:55] <euouae> How do you coordinate them?
[10:19:14] <vdamewood> amigojapan; Nice one.
[10:19:25] <amigojapan> :)
[10:19:37] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[10:19:45] *** Quits: Raguile (~Raguile@user/raguile) (Ping timeout: 246 seconds)
[10:19:53] <GeDaMo> euouae: I don't know how these supercomputers are connected up but usually the CPU would send jobs to the GPU
[10:20:12] <lavadonut> i am skeleton jelly
[10:21:00] <euouae> GeDaMo: Yeah I'm just trying to imagine, if you have a million tasks, how do you decide which ones to send to the gpu and which to the cpu? assuming they're identical
[10:21:12] <euouae> or is it just "grab a task if you're free"
[10:21:33] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[10:21:52] <GeDaMo> The tasks would probably have to be written to be CPU or GPU
[10:22:19] <euouae> ok so you have to 'tag' them as cpu/gpu before even going at it?
[10:24:10] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[10:27:47] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[10:30:50] <GeDaMo> Given that the point of these machines is performance, I'd assume the programmers are going to spend a fair amount of time moving stuff around to get the best performance :P
[10:31:43] <euouae> I'm just not sure how that is done
[10:31:54] *** Joins: gggpkm_ (~gggpkm@60.10.194.47)
[10:31:59] <euouae> Is it part of whatever framework is being used or is it manual (part of the algorithm)?
[10:32:07] <euouae> The work distribution
[10:32:14] <GeDaMo> Probably a bit of both
[10:32:25] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[10:32:35] <euouae> So C++ is the one ring to rule them all?
[10:33:14] <euouae> Or is there other languages that can be reasonable? I thought that maybe python or haskell could do it, the work management and distribution part
[10:33:37] <deniska> euouae: you have to program a thing in a really special way to make it working on a GPU
[10:33:43] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[10:33:52] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Ping timeout: 246 seconds)
[10:33:54] <deniska> it's not like you can just decide what to send to a GPU
[10:34:17] <GeDaMo> I'd assume that Fortran is still used a fair amount
[10:34:39] <euouae> deniska: OK in what way?
[10:35:26] <euouae> deniska: for example, assume I generate a million matrices and a million vectors and want to apply matrix M_n to vector v_n and collect the results
[10:35:40] <deniska> euouae: using special frameworks like CUDA for nvidia or APIs like compute shaders for other GPUs
[10:35:53] <GeDaMo> GPU processors don't have transparent caches like CPUs, they have programmer-controlled local memory
[10:36:08] <euouae> How is that done? Who reads the random pool? The cpu or gpu? Who applies the matrix?
[10:36:15] <vdamewood> No, C++ is the "in the darkness, bind them"
[10:36:29] <euouae> hehe
[10:36:51] <vdamewood> Okay, seriously, I love C++, but that joke was just so good, I couldn't pass it up.
[10:37:12] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[10:37:43] <deniska> euouae: if you have just a million of operations like that, easier to just do the whole thing in a CPU, it will take well under one second :)
[10:38:30] *** Quits: pandakekok9 (~job@user/job) (Remote host closed the connection)
[10:38:32] *** Joins: khanred (~khanred@45-17-211-63.lightspeed.okcbok.sbcglobal.net)
[10:38:32] *** Quits: khanred (~khanred@45-17-211-63.lightspeed.okcbok.sbcglobal.net) (Changing host)
[10:38:32] *** Joins: khanred (~khanred@user/khanred)
[10:38:54] *** Quits: [R] (~rs@genoce.org) (Quit: No Ping reply in 180 seconds.)
[10:38:55] <euouae> Sure, replace the 1M number with something reasonable
[10:38:57] <deniska> euouae: a typical workflow is to treat GPU as a weird remote computer. You send programs and data to it, you issue it commands to apply programs to data, you wait until it finishes, and you download back the results
[10:39:02] *** Joins: [R] (~rs@genoce.org)
[10:39:41] <euouae> Ok so you need to specially craft that 'program' in the framework and then treat it like a black-box said 'program'
[10:39:58] *** Joins: gggpkm (~gggpkm@125.33.95.132)
[10:40:01] <euouae> I'm assuming GPUs don't generate random numbers though right?
[10:40:20] <deniska> Yes. And GPUs are generally great at applying the same algorithm to a lot of small pieces of data at once
[10:41:11] <euouae> Speaking of the language, does it matter a lot? Do you know deniska ?
[10:41:25] *** Quits: micrex22 (~quassel@user/micrex22) (Read error: Connection reset by peer)
[10:41:34] *** Quits: gggpkm_ (~gggpkm@60.10.194.47) (Ping timeout: 246 seconds)
[10:41:38] *** Joins: inky_ (~inky@46.36.112.11)
[10:41:43] <deniska> I'm not really familiar with GPU programming beyond knowing basics of OpenGL which is for graphics
[10:42:02] <euouae> Alright
[10:42:03] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[10:43:21] *** Joins: mrig (~mrig@user/mrig)
[10:43:22] *** Parts: compscipunk (~compscipu@2600:1700:cca0:4d1f:e0b7:2aed:71c6:62e2) (WeeChat 3.2)
[10:44:53] <GeDaMo> I don't know how widely used it is but https://en.wikipedia.org/wiki/OpenCL is for programming across different kinds of machines including CPUs and GPUs
[10:45:33] <deniska> From what I've heard OpenCL is semi-abandoned
[10:46:22] <deniska> nvidia doesn't care to support it well because they have their own proprietary thing
[10:46:55] *** Joins: a6a45081-2b83 (~aditya@223.226.232.244)
[10:46:58] <GeDaMo> That's Nvidia for you :P
[10:48:13] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 246 seconds)
[10:49:30] *** Joins: micrex22 (~quassel@user/micrex22)
[10:50:30] *** Quits: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net) (Ping timeout: 272 seconds)
[10:50:53] <amigojapan> deniska: the basics are that you want to do operations in large arrays of numbers. You send the arrays to the GPU. The GPU does all of the operations in parallel. Then it returns a result to the CPU
[10:50:55] <deniska> people will probably just end up subverting modern flexible low level GPU APIs like vulkan into doing computations
[10:51:13] *** Joins: eXistenZ (~biskit@bzq-109-64-247-234.red.bezeqint.net)
[10:51:17] *** Joins: LiftLeft (~LiftLeft@154.21.114.237)
[10:52:01] <deniska> amigojapan: Iâ€¦ said roughly the same thing :)
[10:52:44] *** Joins: xerxes (~xerxes@117.222.69.126)
[10:52:50] <GeDaMo> Using GPUs for general calculations started before there were programmable shaders
[10:55:00] *** Joins: ayenet4 (~0x100@32.211.211.39)
[10:55:04] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[10:55:16] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[10:57:15] *** Joins: jaysicks (~jaysicks@BC9C1F67.unconfigured.pool.telekom.hu)
[10:58:48] *** Quits: soapsudsxx (~soapsudsx@209.221.40.138) (Remote host closed the connection)
[11:00:13] *** Quits: vitorgonc (~vitorgonc@2804:d55:580c:5e00:2d03:d5cd:bf32:187b) (Read error: Connection reset by peer)
[11:01:29] *** Joins: vitorgonc (~vitorgonc@2804:d55:580c:5e00:2d03:d5cd:bf32:187b)
[11:02:24] *** Joins: f33f046c-a02e (~aditya@171.76.227.35)
[11:03:33] *** Quits: a6a45081-2b83 (~aditya@223.226.232.244) (Ping timeout: 268 seconds)
[11:03:55] *** Joins: SmokenatorZ6 (~Smokenato@177.172.117.90)
[11:04:55] *** Joins: pandakekok9 (~job@user/job)
[11:05:42] *** Quits: SmokenatorZ (~Smokenato@152.249.185.60) (Ping timeout: 272 seconds)
[11:05:42] *** SmokenatorZ6 is now known as SmokenatorZ
[11:06:35] *** Quits: arcatech (~arcatech@user/arcatech) (Ping timeout: 252 seconds)
[11:06:48] *** Quits: gggpkm (~gggpkm@125.33.95.132) (Remote host closed the connection)
[11:07:56] *** Quits: micrex22 (~quassel@user/micrex22) (Read error: Connection reset by peer)
[11:09:08] *** Quits: roent (~roent@user/roent) (Quit: My client has gone to sleep. ZZZzzzâ€¦)
[11:11:08] *** Joins: micrex22 (~quassel@user/micrex22)
[11:18:29] *** Joins: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca)
[11:20:08] *** Quits: pandakekok9 (~job@user/job) (Read error: Connection reset by peer)
[11:20:26] *** Quits: euouae (~euouae@user/euouae) (Read error: Connection reset by peer)
[11:21:49] *** Joins: Lyn (~Lyn@user/law)
[11:22:02] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[11:22:29] *** Joins: gggp (~gggp@60.10.23.164)
[11:23:44] *** Joins: roent (~roent@user/roent)
[11:27:13] <xerxes> Are there any Go channels in Libera?
[11:27:39] <khanred> xerxes, #golang
[11:27:56] <khanred> redirects to #go-nuts but yk
[11:28:35] *** Joins: pandakekok9 (~job@user/job)
[11:28:42] <jeaye> xerxes: /msg alis list golang
[11:28:46] <xerxes> khanred: thanks. i don't know why alis didn't show this.
[11:28:49] <jeaye> For future questions.
[11:29:03] *** Quits: bayaz (~bayaz@user/bayaz) ()
[11:29:16] *** Joins: node1 (~node1@user/node1)
[11:29:17] *** Joins: Raguile (~Raguile@user/raguile)
[11:29:19] *** Joins: bayaz (~bayaz@user/bayaz)
[11:29:19] *** ChanServ sets mode: +o bayaz
[11:29:46] <gggp> what is the best laptop vendor
[11:29:55] <vdamewood> Apple
[11:29:58] <khanred> Boeing
[11:30:16] <gggp> for windows os
[11:30:21] <vdamewood> Boeing?
[11:30:32] <xerxes> gggp: Dell should be good enough.
[11:30:55] <xerxes> gggp: cheap and durable.
[11:31:01] <vdamewood> After Linus Tech Tips did a secret shopper on dell, and they ripped them off, I stopped buying dell.
[11:31:25] <xerxes> what's a secret shopper?
[11:31:38] <khanred> My Dell has been decent, Apple is nice too
[11:32:15] <xerxes> i've used Dell with both Windows and Linux. it has good build and design.
[11:32:18] <vdamewood> https://youtu.be/Go5tLO6ipxw
[11:32:22] <jeaye> I really like my System76 Oryx Pro. Comes with GNU/Linux on it, but I guess you could put Windows on there. :P
[11:32:34] *** Joins: inom (~inom@176.59.102.225)
[11:32:48] <vdamewood> xerxes: It's when someone buys something from some store with the intention of reporting their experience.
[11:32:58] <vdamewood> Or from a customer order line.
[11:33:14] <xerxes> vdamewood: i didn't know Linus Torvalds ran a tech channel too.
[11:33:30] <vdamewood> jeaye: Which distro?
[11:33:48] <jeaye> You have some options. Their default is their own Debian derivative.
[11:34:16] <jeaye> I have two Sytem76 machines: one laptop, one desktop. Both run Arch.
[11:34:23] <arahael> What's System76 like?
[11:34:45] *** Quits: roent (~roent@user/roent) (Quit: My client has gone to sleep. ZZZzzzâ€¦)
[11:34:49] <vdamewood> jeaye: Link?
[11:35:11] <jeaye> vdamewood: To which?
[11:35:27] <vdamewood> jeaye: Your model, if still available.
[11:35:32] <jeaye> This is the Oryx Pro: https://system76.com/laptops/oryx
[11:36:10] <node1> Hi
[11:36:13] <node1> I think  procedural programming is more open for malicious code to get exploited when comparing with object oriented programming(As there is logic behind protecting the data using access specifier ).
[11:36:34] <jeaye> The desktop is a Thelio Major, shown here: https://system76.com/desktops
[11:37:01] <xerxes> node1: that's not how it works.
[11:37:08] <node1> I think this is the advantages of OOPs over procedural programming for data sensative project
[11:38:16] *** Joins: Lemniscate (~sauvin@about/linux/staff/sauvin)
[11:38:49] *** Joins: Zsolt (~KantorZso@82.77.145.115)
[11:38:56] <Zsolt> hello
[11:39:06] <vdamewood> Any 'privacy' in OOP is an illusion
[11:39:22] <xerxes> Zsolt: yello
[11:39:59] <Zsolt> does somebody has experience with windows command line and Unicode output?
[11:40:34] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 240 seconds)
[11:41:49] <Zsolt> I want that my Windows console application outputs some unicode symbols. My application code is this: setmode(_fileno(stdout), _O_U16TEXT); and wprintf(L"\nTesting unicode: \x22d5");
[11:41:58] <Zsolt> 0x22d5 is â‹•
[11:42:05] <node1> vdamewood, What do you mean? You mean those encapsulation for hidding a data in oop is illusion?
[11:42:11] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[11:42:14] <vdamewood> node1: Yep.
[11:42:19] <Zsolt> but the unicode character is not shown, I see only a little box :(
[11:42:30] <xerxes> node1: encapsulation protects data from accidental human access.
[11:42:32] <vdamewood> node1: The encapsulation only exists to protect programmers from making coding errors.
[11:42:35] <node1> vdamewood, I would love to get my self wrong here. Please prove it
[11:42:37] <xerxes> node1: a malicious code can do anything.
[11:43:17] <node1> I see..
[11:43:42] <vdamewood> node1: For one, all of the 'private' parts are still specified in the header. Second, machine code has no 'private' keyword so it's all accrssible after being compiled.
[11:44:14] <vdamewood> All the encapsulation does is let your compiler now that you shouldn't be doing something, and your compiler gives an error.
[11:44:14] <GeDaMo> Zsolt: possibly it's the font being used for the console?
[11:44:28] <vdamewood> Zsolt: Which terminal are you using?
[11:44:51] <node1> Thank you vdamewood and xerxes , i would look more in details about it.
[11:45:00] <Zsolt> vdamewood: Windows cmd.exe
[11:45:11] <Zsolt> on Windows 7
[11:45:41] *** Quits: xerxes (~xerxes@117.222.69.126) (Quit: leaving)
[11:46:13] <Zsolt> maybe I need to set up the command-line for unicode output?
[11:47:17] *** Quits: ayenet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[11:48:44] <vdamewood> Well, the default terminal host is meant to be backwards compatible with some very old systems.
[11:49:16] <vdamewood> Windows Terminal does a pretty good job of handling Unicode.
[11:49:37] <vdamewood> But I don't know if Windows Terminal works on Windows 7.
[11:49:46] *** Quits: f33f046c-a02e (~aditya@171.76.227.35) (Read error: Connection reset by peer)
[11:51:02] <Zsolt> vdamewood: Windows Terminal is not the cmd.exe, what we call the command-line?
[11:51:51] <vdamewood> Zsolt: No, 'Windows Terminal' is a new terminal program for Windows that supports cmd.exe, PowerShell, and even Bash on WSL.
[11:52:04] <vdamewood> I forget what the default terminal host is called.
[11:52:46] <vdamewood> But when you run cmd.exe, in the background it runs another program to open a window and display it. cmd.exe is just the program that takes commands and executes them.
[11:52:57] *** Joins: f33f046c-a02e (~aditya@106.212.68.200)
[11:53:01] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Ping timeout: 265 seconds)
[11:53:21] <vdamewood> How text displays is up to your terminal host rather than cmd.exe itself.
[11:53:45] <vdamewood> Oh, I guess it's just called "Windows Console"
[11:54:09] *** Joins: chemiker (~xarch@ip5f5a05e1.dynamic.kabel-deutschland.de)
[11:54:21] <vdamewood> damn, gotta go.
[11:54:41] <Zsolt> vdamewood: OK, so do you think that in Windows 7 command-line unicode is not supported?
[11:57:37] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[11:58:09] <Izem> I think it is
[11:58:31] <Izem> when I was browsing the docs win7 had a bunch of unicode stuff
[12:00:54] <gggp> how about huawei laptop
[12:01:34] <khanred> lol
[12:02:37] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[12:02:41] <deniska> Zsolt: you can try playing around with running 'chcp 65001' in cmd
[12:03:05] <deniska> but a lot of windows tools will be confused by cmd in that state
[12:03:07] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[12:03:07] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[12:03:07] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[12:04:32] *** Quits: hardtotell (~hardtotel@satyr.seedboxes.cc) (Quit: ZNC 1.6.3+deb1+trusty0 - http://znc.in)
[12:04:47] <amigojapan> Zsolt: command line does not only refer to cmd it refers to any interface with which you interacts with they commands and see a terminal window as output
[12:05:15] *** Joins: entuland (~entuland@user/entuland)
[12:05:59] <amigojapan> Zsolt: why can't you use powershell in win 7?
[12:07:34] <Zsolt> deniska: I just want to achieve to output some unicode chars, I don't care about other apps. this time
[12:07:54] <Zsolt> amigojapan: I can use powershell, but the output is the same
[12:08:11] <arahael> Zsolt: Try using powershell but *not* in CMD.exe
[12:08:18] *** Quits: gggp (~gggp@60.10.23.164) (Ping timeout: 268 seconds)
[12:08:19] <arahael> Use it's native terminal.
[12:08:38] * arahael hasn't used windows in years, though.
[12:09:05] <amigojapan> Yeah I am really not a Windows user either
[12:10:00] *** Quits: jaysicks (~jaysicks@BC9C1F67.unconfigured.pool.telekom.hu) (Remote host closed the connection)
[12:10:24] <deniska> arahael: I think powershell and cmd use the same 'terminal' thing
[12:10:24] *** Joins: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3)
[12:10:34] *** Quits: audiocat (~audio@2603-8081-1800-00ad-0cb4-6e2c-d49d-e8f1.res6.spectrum.com) (Ping timeout: 246 seconds)
[12:10:35] *** Joins: jaysicks (~jaysicks@BC9C1F67.mobile.pool.telekom.hu)
[12:10:47] <arahael> deniska: Hmm, I actualyl suspect not, but maybe it is in win7.
[12:10:56] <arahael> There's been a lot of work in recent win10 from what I have heard.
[12:11:49] <amigojapan> Zsolt: I think the first answer will work https://stackoverflow.com/questions/49476326/displaying-unicode-in-powershell
[12:12:32] <deniska> arahael: no, you launch cmd.exe, you launch powershell, the same thing draws the console window
[12:12:44] <deniska> it has the same set of options, the same context menu, same everything :)
[12:13:00] <arahael> deniska: I'm pretty sure there's a completely different terminal you can use. It's blue.
[12:13:02] *** Joins: hardtotell (~hardtotel@satyr.seedboxes.cc)
[12:13:12] <deniska> arahael: it's the same terminal, just with different defaults
[12:13:37] <Zsolt> OK, thanks
[12:13:48] <amigojapan> No problem
[12:14:09] <arahael> deniska: Ah, interesting
[12:15:14] <deniska> arahael: the work MS was doing in win10 is to unmarry the console output machinery from that magic conhost window, so implementing other terminals would be a less hacky affair
[12:15:26] <arahael> deniska: So good.
[12:17:07] *** Joins: Fairy97 (~Fairy@2001:464a:4992:0:2975:ee0:353:13b1)
[12:18:01] *** Joins: Buttercat (~Buttercat@user/buttercat)
[12:18:35] *** Joins: paulo_ (~paulo_@user/paulo/x-9032687)
[12:18:50] *** Joins: furrymcgee (~devuan@31.179.186.66)
[12:19:50] *** Joins: bytefire (~bytefire@51.19.186.131)
[12:20:08] *** Quits: blahboybaz (~blahboyba@c-67-183-225-44.hsd1.wa.comcast.net) (Ping timeout: 255 seconds)
[12:20:26] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[12:20:44] <smallville7123> how do i implement a physics loop for a game engine without using a busy loop due to its high power consumption, and without using sleep due to its lack of precision
[12:21:05] *** Quits: Fairy (~Fairy@2001:464a:4992:0:cd20:3286:3c6e:4a1e) (Ping timeout: 256 seconds)
[12:21:30] <GeDaMo> https://dewitters.com/dewitters-gameloop/
[12:23:05] *** Joins: Pickchea (~private@user/pickchea)
[12:24:01] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:25:11] *** Joins: aradesh (~aradesh@user/aradesh)
[12:25:14] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[12:29:47] <kosek> my new ransomware is almost completed
[12:30:30] <kosek> oh worng chan
[12:30:34] <kosek> I mean anti ransomware
[12:30:36] <kosek> stay cool
[12:30:47] *** Parts: kosek (~kosek@158.255.211.151) (WeeChat 2.3)
[12:31:36] <vdamewood> arahael: Yeah, deniska is right. When you run PowerShell (or pwsh) it runs the same program to display as cmd.exe.
[12:32:03] <arahael> Unfortunate.
[12:32:12] <vdamewood> Windows Terminal is meant to replace that.
[12:33:12] <GeDaMo> Did you see the video where a game developer was complaining about the performance of Windows Terminal?
[12:33:34] <vdamewood> Zsolt: Looks like Windows Terminal is Windows 10 (1903 or later) only.
[12:33:49] <Zsolt> vdamewood: OK, thanks!
[12:34:10] <GeDaMo> "[EPILEPSY WARNING] How fast should an unoptimized terminal run?" https://www.youtube.com/watch?v=hxM8QmyZXtg
[12:34:15] <Zsolt> how are Windows code pages or code pages in general to the ASCII table related? it is guaranteed that every code page has its first 127 chars the same as ASCII?
[12:34:20] <GeDaMo> He wrote his own in two days to show what was possible
[12:34:44] <vdamewood> Zsolt: No, there is no such guarantee.
[12:35:23] *** Quits: f33f046c-a02e (~aditya@106.212.68.200) (Remote host closed the connection)
[12:36:12] <deniska> Zsolt: every unicode encoding besides utf-8 is incompatible with ascii
[12:36:45] <Zsolt> deniska: but code pages are not unicode encodings!
[12:36:50] <deniska> utf-16 and utf-32 can be rendered as "a very broken ascii with zeros interspersed", utf-7 will be completely unrecognizeable :)
[12:37:03] <Zsolt> not all of them
[12:37:29] *** Quits: paulo_ (~paulo_@user/paulo/x-9032687) (Ping timeout: 265 seconds)
[12:37:29] <Zsolt> cp 437  for example is not unicode
[12:37:49] <deniska> Aren't all characters 437 can encode in unicode?
[12:38:26] <Zsolt> deniska: Aren't all chaacters of ASCII can encode in unicode? :D and ASCII is not unicode
[12:39:14] <deniska> Zsolt: I mean, we can just treat all (most?) code pages as various unicode subsets
[12:40:13] <vdamewood> deniska arahael: Maybe not. I just ran powershell.exe and cmd.exe while running Task Manager, and conhost.exe comes up with cmd.exe, but not powershell.exe
[12:40:33] *** Joins: federico_it (~textual@151.51.82.235)
[12:40:36] <Zsolt> deniska: I asked if non-unicode code pages have the same low 127 chars ...
[12:40:44] <Zsolt> or not
[12:41:22] <deniska> Zsolt: japanese may have something weird, dunno
[12:42:27] <vdamewood> Zsolt: There are many code pages based on EBCDIC.
[12:43:45] <Zsolt> so that would mean that if in plain ASCII 0x3D is sign '=', and I use equal in my code, it can be that if somebody changes the code page 0x3D will output a different symbol than equal??
[12:44:08] <arahael> Zsolt: Not always.  As for japanese, the '/' character is different.
[12:44:47] *** Joins: inky (~inky@46.36.112.90)
[12:44:50] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[12:44:50] <Zsolt> but there is a possibility for that, right?
[12:45:08] <arahael> Zsolt: A possibility for what?
[12:45:11] <vdamewood> Zsolt: In an EBCDIC codepage, = us 7E
[12:45:15] <vdamewood> s/us/is/
[12:46:30] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[12:46:49] <Zsolt> arahael: a possibility that the 7 bit symbol values from ASCII table will produce different symbols using different code pages
[12:47:02] <arahael> Zsolt: I specifically gave the example of japanese there.
[12:47:09] *** Quits: inky_ (~inky@46.36.112.11) (Ping timeout: 268 seconds)
[12:47:36] <arahael> Zsolt: I think it becomes the "Yen" symbol or something. Someone who knows japanese might know.
[12:47:38] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[12:48:11] <Zsolt> arahael: so if decimal 47 is '/' in English, than decimal 47 is some other symbol in japonese?
[12:48:14] <arahael> Regardless of what character it is, it's plainly not a line any more.
[12:48:20] <arahael> Zsolt: Yes...
[12:48:44] <arahael> Zsolt: Let me dig up an article I always recommend for helping devs understand unicode.
[12:49:05] <arahael> Zsolt: It's old, but still very, very, very relevant: https://www.joelonsoftware.com/2003/10/08/the-absolute-minimum-every-software-developer-absolutely-positively-must-know-about-unicode-and-character-sets-no-excuses/
[12:49:20] <Zsolt> arahael: I could change cmd.exe codepage to japanese to verify, right?
[12:49:31] *** Quits: ShawnB (~ShawnB@193.27.13.134) (Read error: Connection reset by peer)
[12:49:55] <arahael> Zsolt: Probably.  I've forgotten how, I mainly notice it when I'm running windows entirely in japanese.
[12:50:42] <Zsolt> arahael: I know that article, also the host why wrote that :D
[12:51:06] <Zsolt> I read it some time ago ...
[12:51:15] <arahael> Might be good for a refresher, then. :)
[12:52:07] *** Quits: web-49 (~web-49@120.208.164.67) (Quit: Ping timeout (120 seconds))
[12:53:12] <Izem> GeDaMo: nice rant :)
[12:53:23] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[12:54:21] <amigojapan> arahael: one hint would be that the \ becomes a Â¥
[12:54:33] *** Quits: khanred (~khanred@user/khanred) (Ping timeout: 268 seconds)
[12:55:22] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 246 seconds)
[12:55:29] <Zsolt> arahael: yes, thanks, I'm reading it right now ...
[12:55:42] *** Quits: Kamui (~kamui-ren@2001:470:69fc:105::f74) (Quit: Bridge terminating on SIGTERM)
[12:55:42] *** Quits: crysisanon[m] (~crysisano@2001:470:69fc:105::1687) (Quit: Bridge terminating on SIGTERM)
[12:55:42] *** Quits: lwe[m] (~dendrumat@2001:470:69fc:105::2f9b) (Quit: Bridge terminating on SIGTERM)
[12:55:42] *** Quits: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2) (Quit: Bridge terminating on SIGTERM)
[12:55:43] *** Quits: orbatos[m] (~orbatos@user/orbatos) (Quit: Bridge terminating on SIGTERM)
[12:55:43] *** Quits: elemongw[m] (~elemongwk@2001:470:69fc:105::34ee) (Quit: Bridge terminating on SIGTERM)
[12:55:44] *** Quits: Roman[m] (~wrongt@2001:470:69fc:105::341e) (Quit: Bridge terminating on SIGTERM)
[12:55:45] *** Quits: happy-dude (~happy-dud@2001:470:69fc:105::b4d7) (Quit: Bridge terminating on SIGTERM)
[12:55:46] *** Quits: AnisBarghouthi[m (~anis-barg@2001:470:69fc:105::6ebb) (Quit: Bridge terminating on SIGTERM)
[12:56:01] *** Lord_of_Life_ is now known as Lord_of_Life
[12:56:13] <arahael> GeDaMo: Just checked out that youtube you linked.  Yeah, I think the crazy slow windows terminal is...  Frankly bizarre.
[12:56:30] <arahael> amigojapan: You mean Zsolt? :)
[12:56:51] <arahael> amigojapan: I'm guessing that Â¥ is "yen", then. :)
[12:57:04] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[12:57:17] <amigojapan> 5:19 PM <arahael> Zsolt: Probably.  I've forgotten how, I mainly notice it when I'm running windows entirely in japanese. - I meant to reply to this
[12:57:37] <arahael> Ah.
[12:57:40] <Lyn> why did I have to run "npm audit fix --force" after "npm install" to fix 5 vulnerabilities? and why does it install vulns in the first place is my main question lol
[12:57:48] *** Quits: LiftLeft (~LiftLeft@154.21.114.237) (Ping timeout: 272 seconds)
[12:57:49] <arahael> amigojapan: I'll point out that I have literally not run windows in years. :)
[12:57:51] <Lyn> had to run the fix 3 times**
[12:57:59] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[12:57:59] <amigojapan> Yes arahael backslashes become yen symbols in Japanese Windows
[12:58:49] <vdamewood> arahael: c:Â¥WindowsÂ¥System32
[12:58:58] *** Joins: AnisBarghouthi[m (~anis-barg@2001:470:69fc:105::6ebb)
[12:59:01] <amigojapan> Right
[12:59:15] *** Joins: BEC001AF[m] (~kreatemor@2001:470:69fc:105::a0f)
[12:59:17] *** Joins: Kamui (~kamui-ren@2001:470:69fc:105::f74)
[12:59:17] *** Joins: Roman[m] (~wrongt@2001:470:69fc:105::341e)
[12:59:29] *** Joins: crysisanon[m] (~crysisano@2001:470:69fc:105::1687)
[12:59:29] *** Joins: elemongw[m] (~elemongwk@2001:470:69fc:105::34ee)
[12:59:29] *** Joins: lwe[m] (~dendrumat@2001:470:69fc:105::2f9b)
[12:59:29] *** Joins: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2)
[12:59:41] *** Joins: rgddev[m] (~rgddevmat@2001:470:69fc:105::69c8)
[12:59:41] *** Joins: happy-dude (~happy-dud@2001:470:69fc:105::b4d7)
[12:59:41] *** Joins: orbatos[m] (~orbatos@user/orbatos)
[12:59:42] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:59:52] <vdamewood> I would love it if Windows would switch to forward slashes for directory separators.
[13:00:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[13:00:11] <arahael> vdamewood: They allow it, just not for display.
[13:00:27] <deniska> that depends on which API you're poking at
[13:00:34] <deniska> most would work with / just fine
[13:00:40] <amigojapan> vdamewood: it would stop being able to run legacy programs
[13:00:40] <arahael> Like many things in win32.
[13:00:52] <deniska> but some other APIs will barf :)
[13:01:11] <deniska> What trips me more often when it comes to windows is that : is a forbidden character in file paths
[13:01:24] <arahael> As is -, if I remember.
[13:01:29] <deniska> - is fine
[13:01:36] <vdamewood> Yep. - is fine.
[13:01:53] <arahael> Hmm, I seem to remember that had issues.
[13:01:56] *** Joins: web-49 (~web-49@120.208.164.67)
[13:01:58] <amigojapan> deniska: cause of a: b: c: and so on
[13:02:05] <Stryyker> CreateFile should be fine with / unless you use a special prefix
[13:02:20] <deniska> So I'll have a script which saves something specifying date and time in HH:MM format in the file name
[13:02:28] <deniska> and then it will break on windows :)
[13:02:42] <vdamewood> Windows can't have : \ / * ? " < > or |
[13:02:48] <deniska> really annoying, much more annoying then a path separator being different
[13:03:14] <Zsolt> arahael: just tested, english '\' = '*' in japanese EBCDIC 20290 cp
[13:03:18] <deniska> vdamewood: windows file name restrictions sound a lot like a bad kind of XSS protection :D
[13:03:28] <vdamewood> You also can't name your file nul con com1, com2, com3, .. com 9, lpt1, ltp2, ... lpt9, etc.
[13:03:38] <arahael> Zsolt: Test *forward* slash. The /
[13:03:44] <Stryyker> Also you can bypass the win32 layer with a special prefix so you can use the normally forbidden filenames and characters
[13:03:54] <amigojapan> vdamewood: what happens if you make a file with such a character in another OS and download it on Windows?
[13:04:01] *** Quits: vitorgonc (~vitorgonc@2804:d55:580c:5e00:2d03:d5cd:bf32:187b) (Ping timeout: 246 seconds)
[13:04:05] <deniska> vdamewood: again, depends on what kind of API you use, but file names like that will trip a lot of existing userspace tools
[13:04:06] <Stryyker> but if you do bypass the win32 layer you can't use / for path seperators
[13:04:16] <vdamewood> Zsolt: EBCDIC isn't specific to Japanese, and Japanese isn't specific to EBCDIC.
[13:04:20] <arahael> amigojapan: At best, the program will result in a mangled path. At worst, it stops working.
[13:04:32] <deniska> amigojapan: "downloading" a file is creating a file and then writing to it, it will fail at creating it
[13:04:33] *** Quits: web-49 (~web-49@120.208.164.67) (Client Quit)
[13:04:36] *** Joins: vitorgonc (~vitorgonc@2804:d55:58e0:2600:849b:a6d:f686:9246)
[13:04:58] <amigojapan> I see deniska
[13:05:31] <deniska> names like `con` (and also con.txt or con.mp3 for more fun) are not strictly forbidden, more like almost forbidden
[13:05:34] <Stryyker> https://docs.microsoft.com/en-us/windows/win32/fileio/naming-a-file
[13:05:46] <deniska> you can force them into existence, but then programs may behave weirdly around them
[13:05:56] *** Joins: gggp (~gggp@60.10.194.47)
[13:05:57] <Zsolt> arahael: no visible output for '/' only an audible beep
[13:06:08] <vdamewood> rename kernel32.sys con.?
[13:06:42] *** Joins: web-38 (~web-38@120.208.164.67)
[13:06:47] <Zsolt> vdamewood: cp 932 japonese is not working, it tells invaide cp :(
[13:07:02] <arahael> Zsolt: Not sure how you're testing it, but regardless, are you satisifed that different codepages also differ in the first 7 bits?
[13:07:29] <amigojapan> copy con> lpt:
[13:07:32] <vdamewood> Zsolt: I don't work with code pages very much anymore. Everything is Unicode. So, I do everything in UTF-8 or UTF-16.
[13:08:20] <Zsolt> arahael: yes
[13:08:38] <Zsolt> I'm satisfied!
[13:08:53] <vdamewood> Hi satisfied, he's beaky
[13:08:58] *** Quits: src (~src@user/src) (Quit: leaving)
[13:09:09] <amigojapan> beaky!
[13:09:22] *** Quits: JuggleTux (~tux@83.137.6.185) (Ping timeout: 246 seconds)
[13:09:34] *** Joins: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net)
[13:09:47] <arahael> beaky: I found a Java to Webassembly compiler, which is called TeaVM, and that reminded me of you. :)
[13:10:01] <Zsolt> vdamewood: if you work in unicode, how do you set the command-line, cmd.exe to output unicode?
[13:10:30] <vdamewood> Zsolt: I don't use conhost.exe, I use Windows Terminal.
[13:10:48] <Zsolt> vdamewood: understand ...
[13:10:53] *** Quits: gggp (~gggp@60.10.194.47) (Ping timeout: 252 seconds)
[13:10:58] *** Joins: JuggleTux (~tux@83.137.6.185)
[13:11:04] *** Joins: gggp (~gggp@60.10.194.47)
[13:11:38] <vdamewood> Also, I don't use Windows 7 on a regular basis. I still have my discs, but I never touch it anymore.
[13:11:53] <rannnn8888> you  know if have channel  to go ? or ask here ?
[13:11:54] <amigojapan> vdamewood: I have used some Linux distro where backslashes assisted as yen symbols too
[13:12:44] <amigojapan> rannnn8888: ask the question here first
[13:15:07] <bytefire> hi, a basic question about machine learning...
[13:15:33] <bytefire> is it true that deep learning is a way to train a neural network?
[13:15:53] <bytefire> sorry my knowledge in AI is less than basic :
[13:17:01] *** Joins: Guest53 (~Guest53@ipv4-80-68-231-64.net.internetunion.pl)
[13:17:34] *** Joins: Fluxx (~Fluxx@user/fluxx)
[13:19:45] <amigojapan> bytefire: I am no expert in AI but deep learning sounds like a marketing tearm to me
[13:19:56] *** Joins: roent (~roent@user/roent)
[13:20:21] *** Joins: TheRedRipper (~TheRedRip@user/theredripper)
[13:20:23] <TheRedRipper> java keeps reading if(bean=1) as boolean when its integer? how do i fix that? is there a way or can i not use numbers -1 to 1
[13:20:58] <Izem> I'm suprised that's legal java syntax
[13:21:01] <rannnn8888> amigojapan have here ppl use its i not see here before
[13:21:26] <TheRedRipper> Izem: its just a quick summary
[13:21:26] <bytefire> amigojapan: hmm... it seems like it is a scientific term too. seems like when you have many layers in a neural network and you train that many layers, it is called deep learning
[13:21:33] <Izem> if statements only take booleans iirc
[13:21:40] *** Quits: node1 (~node1@user/node1) (Remote host closed the connection)
[13:21:46] *** Joins: node1_ (~node1@103.206.8.74)
[13:21:54] *** Joins: khanred (~khanred@45-17-211-63.lightspeed.okcbok.sbcglobal.net)
[13:22:10] <bytefire> amigojapan: but my source of knowledge is this link only: http://neuralnetworksanddeeplearning.com/
[13:22:13] *** Quits: node1_ (~node1@103.206.8.74) (Remote host closed the connection)
[13:22:17] <GeDaMo> TheRedRipper: isn't = used for assignment in Java? Does it allow assignment in a conditional?
[13:22:23] <Izem> "The Expression must have type boolean or Boolean, or a compile-time error occurs."
[13:22:46] <TheRedRipper> .. fuck i think im thinking of python while doing java
[13:23:08] *** Quits: freakazoid333 (~freakazoi@72.168.176.108) (Read error: Connection reset by peer)
[13:23:32] *** Joins: freakazoid333 (~freakazoi@72.168.176.108)
[13:24:12] <Izem> It seems to allow = in a conditional, but it's def being converted to boolean
[13:24:53] <TheRedRipper> i fixed it
[13:24:58] <TheRedRipper> thank you
[13:25:57] <amigojapan> rannnn8888: I don't understand
[13:26:16] <Izem> yep, as part of AssignmentExpression
[13:26:20] <Izem> np
[13:27:17] <rannnn8888> amigojapan you know go :D  ?
[13:27:51] *** Quits: Guest53 (~Guest53@ipv4-80-68-231-64.net.internetunion.pl) (Quit: Client closed)
[13:28:07] *** Quits: TheRedRipper (~TheRedRip@user/theredripper) (Quit: WeeChat 3.0)
[13:29:16] <amigojapan> Not really rannnn8888 but someone here may know it it may be common to other languages
[13:30:39] *** Joins: gggp_ (~gggp@221.219.77.87)
[13:31:25] *** Quits: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca) (Quit: Izem)
[13:31:29] *** Quits: foozle (~foozle@2001-b011-c001-52e7-516b-1d97-31a7-6d4d.dynamic-ip6.hinet.net) (Quit: Leaving)
[13:32:47] <rannnn8888> i try to add like a list proxy and send each requests from other proxy i add in pr and try pass this to send user but get  too many arguments in call to AsyncHTTP https://dpaste.org/0zBJ
[13:33:29] <rannnn8888> I have almost no experience in the language so I may be really wrong: D
[13:33:31] <amigojapan> Ok let me see
[13:34:02] *** Quits: gggp (~gggp@60.10.194.47) (Ping timeout: 265 seconds)
[13:34:19] <arahael> rannnn8888: Your AsyncHTTP has been written so that it requires ONE argument, called "users", and the type of an array of string.
[13:34:43] <arahael> rannnn8888: However, you've called AsyncHTTP at line 132 with TWO arguments, the first one is "users", and the second one is "pr".
[13:34:55] *** Joins: brickfat (~brickfat@user/brickfat)
[13:35:11] <rannnn8888> arahael yes i not can pass two  argument ? users and pr ?
[13:35:28] <arahael> rannnn8888: Only if the function requires two argumetns.
[13:35:56] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 258 seconds)
[13:36:47] <arahael> rannnn8888: I think "pr" in your code is another user? If so, maybe you meant to add "2xx.127.143.xxx:xxxx" to the users list instead of the pr list.  But I don't know what it is you're doing with that code.
[13:38:04] <amigojapan> rannnn8888: I think the write is in line func AsyncHTTP(users []string) ([]string
[13:38:23] <amigojapan> rannnn8888: you need to add pr as a parameter
[13:39:01] <rannnn8888> arahael This is just a basis, for the future  users its need be the end point my api , and pr the proxy, That's why it needs 2 arguments
[13:39:07] *** Joins: rifl` (~user@user/rifl)
[13:39:35] <arahael> rannnn8888: In that case, like amigojapan says, you need to modify your AsyncHTTP implementation to understand that.
[13:39:42] <arahael> rannnn8888: Because right now it accepts only one argument.
[13:39:59] <amigojapan> rannnn8888: you or argument is not defined in the declaration of the function
[13:40:19] <arahael> amigojapan: I'll leave it with you - I think you have a better understanding of what rannnn8888 is doing.
[13:40:27] *** Quits: roent (~roent@user/roent) (Quit: Bye)
[13:40:35] *** Quits: rifl (~user@user/rifl) (Ping timeout: 252 seconds)
[13:40:39] <rannnn8888> amigojapan k and its the right way add this like this  AsyncHTTP(users []string,pr []string)  ?
[13:40:54] <amigojapan> arahael: but I never used go
[13:41:00] <rannnn8888> arahael thank you for your time
[13:41:24] <amigojapan> I think so rannnn8888 . But I have not used go
[13:41:47] <rannnn8888> amigojapan me to I wrote this based on my understanding of Python
[13:42:07] <rannnn8888> and google :x
[13:42:09] <arahael> amigojapan: It's written by Rob Pike, make what you will of that. :)  But it's pretty intuitive if you know C, major differences: It supports "interfaces", arrays, and has garbage collection.
[13:42:10] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 246 seconds)
[13:42:19] <rannnn8888> but the requests time here very fast vs python
[13:42:20] <amigojapan> In python the same problem would have happened
[13:42:46] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 272 seconds)
[13:42:54] <amigojapan> I see arahael
[13:43:40] <arahael> Also *extremely* well documented: https://golang.org/doc/ http in particular at: https://golang.org/pkg/net/http/
[13:43:48] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[13:45:41] <amigojapan> Ty arahael
[13:46:38] *** Joins: gggp__offline (~gggp@60.10.194.47)
[13:46:48] <rannnn8888> amigojapan i try this get have (string)
[13:46:48] <rannnn8888>         want (string, string) https://dpaste.org/C4bj
[13:48:29] <amigojapan> rannnn8888: maybe [] strings is not the way to write a list of strings in go
[13:48:36] <rannnn8888> no new variables on left side of :=
[13:48:37] <rannnn8888> C:\1\tcpr\baba.go:97:41: not enough arguments in call to sendUser
[13:48:37] <rannnn8888>         have (string)
[13:48:38] <rannnn8888>         want (string, string)
[13:48:53] *** Joins: gggp (~gggp@60.10.194.47)
[13:49:05] *** Joins: inky_ (~inky@46.241.133.248)
[13:49:06] <rannnn8888> amigojapan but in the users its work
[13:49:21] *** Quits: gggp_ (~gggp@221.219.77.87) (Ping timeout: 258 seconds)
[13:50:50] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Remote host closed the connection)
[13:51:06] <amigojapan> rannnn8888: let me find where they are declared
[13:52:10] *** Quits: gggp__offline (~gggp@60.10.194.47) (Ping timeout: 268 seconds)
[13:52:38] <mrig> GeDaMo: heh, that video is awesome! The project will never get off the ground though; clearly a case of premature simplicity!
[13:52:39] *** Joins: gggp_ (~gggp@60.10.194.47)
[13:52:54] *** Quits: inky (~inky@46.36.112.90) (Ping timeout: 272 seconds)
[13:53:06] *** Joins: Rounin (~david@cm-84.212.130.215.getinternet.no)
[13:54:05] <mrig> That has got me pondering trying to read his code ...
[13:54:39] <amigojapan> rannnn8888: dunno try []string{}
[13:54:55] <W> hmm that reminds me, what are people thoughts on type-matched arguments/parameters? I.e. most people know named parameters, where you can do `sendTo(name=myRecipient, address=myAddress)` or `sendTo(address=myAddress, name=myRecipient)` as equivalent calls, rather than positional; but typed arguments would be matched by type, and you could not e.g. define a method `sendTo(string,string)` because string is ambiguous
[13:55:26] *** Quits: gggp (~gggp@60.10.194.47) (Ping timeout: 272 seconds)
[13:55:47] <W> but would have to do `sendTo(name,address)` where name and address are types (lightweight wrappers around strings, most likely)
[13:55:58] *** Quits: khanred (~khanred@45-17-211-63.lightspeed.okcbok.sbcglobal.net) (Ping timeout: 252 seconds)
[13:56:01] <arahael> W: In Haskell, I like it. Avoids a whole class of errors, and yes, typically implemented as a wrapped struct.
[13:56:33] <W> oh Haskell has this? Neat. Are the arguments also positional, or can you then swap it around and have it match up by type?
[13:57:02] <deniska> W: so that you can do both sendTo(name, address) and sendTo(address, name)?
[13:57:07] <W> yes
[13:57:19] <arahael> W: Well, they're not positional per se based on type - they're still positional as per usual - you can just almost trivially wrap the types up so that it's checked.
[13:57:23] <W> the actual caller order would be irrelevant
[13:57:32] <deniska> W: I think it quickly degrades into de-facto named arguments: sendTo((name) name_s, (address) address_s)
[13:58:02] <arahael> W: But you could eg, use a "Record" - basically a struct, and specify your types in any order by name (and the type has to match, too).
[13:58:09] <W> deniska, sure, you could see it this way - but most likely it's an incentive to actually use the types more widely
[13:59:02] <deniska> W: I don't think "width and height should be of different type" is a solutionâ€¦ to any sort of problem :)
[13:59:11] <W> deniska, e.g. if you are just feeding something from elsewhere into sendTo, might as well make that other thing elsewhere return address rather than string
[13:59:18] <arahael> W: Swift does the syntax as you provide it, though - ie, in swift, you do specify names in argumetns - if the argumetn has a name, you have to include the name - and the position and type has to match
[13:59:57] *** Joins: Auron (Auron956@user/auron)
[14:00:19] <amigojapan> arahael: I think in obj-c only the name matters
[14:00:32] *** Quits: web-38 (~web-38@120.208.164.67) (Quit: Connection closed)
[14:00:34] <arahael> amigojapan: In Swift the type also matters.
[14:00:38] *** Joins: pulse (~pulse@user/pulse)
[14:00:41] *** Joins: The_Blode (~Blode@92.40.180.221.threembb.co.uk)
[14:00:52] <W> deniska, well, coordinates are a bit special in how you can multiply vectors by scalars and so on; as for e.g. on a map, why not? Longitude and latitude being clearly labelled is useful many places outside of programming even
[14:01:15] <amigojapan> Yeah the type matters in objective C too but the position does not arahael
[14:01:55] <arahael> amigojapan: You can omit optional arguments in swift, but the order has be the same....
[14:02:00] <W> arahael, I want to avoid actually having to specify the name *or* care about the position, the idea is that if things are their own type all the time, and this pervades code of a language, then it's one less thing to have to think about
[14:02:52] <W> the idea would be that using string as a type itself is rare outside of general string-manipulation, and similar with numeric types and mathematics
[14:03:04] *** Quits: The_Blode (~Blode@92.40.180.221.threembb.co.uk) (Changing host)
[14:03:04] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[14:03:06] <deniska> W: how to handle sendTo(address_from, address_to)?
[14:03:12] <arahael> W: So the type has to be unique...
[14:03:20] <W> deniska, two different types
[14:03:27] <deniska> W: named params are great because they give you an idea what things are at the calling place
[14:03:45] <W> this is true, and I do like things being explicit, hmm...
[14:04:02] <mrig> beaky: thanks for linking that paper on communicating in C, found it fascinating.
[14:04:14] <deniska> W: sendTo(addressA, addressB) and you now have to look up what types are
[14:04:27] <rannnn8888> amigojapan where u mean ? []string{} ? in my main() i write like this https://dpaste.org/C4bj#L28,120
[14:04:29] <deniska> which can even be infered if they come from somewhere else
[14:05:04] <arahael> deniska: I imagine in that case they might be sendTo(FirstAddress(addressA), SecondAddress(addressB)), though hopefully with less clunky syntax.
[14:05:11] <W> deniska, well your case initially differed the semantics of the two addresses; in all other cases, collections or tuples or implicit multiarguments are fine
[14:05:24] <amigojapan> rannnn8888: not main. I mean the declaration of AsyncHTTP
[14:05:53] <deniska> arahael: as I said, we're just reinventing named params using other mechanisms
[14:06:27] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[14:06:33] <W> not /just/, named params can't spread beyond the calling site
[14:06:35] *** Quits: rifl` (~user@user/rifl) (Remote host closed the connection)
[14:06:50] *** Joins: rifl` (~user@user/rifl)
[14:07:14] <deniska> and now imagine eldrich horrow which will happen in "shipBackTheReturn" function, with all the type casts from RecepientAddress to SenderAddress and vice versa :)
[14:07:19] <W> e.g. if you're sending emails, and just feeding in data from a database, your database binding being to string instances would be inconvenient, so you'd actually make the mapping of the to_address query result to a toAddress type, and similar with from
[14:07:22] <deniska> horror*
[14:07:33] *** Joins: inky (~inky@46.241.133.248)
[14:07:35] *** Quits: inky_ (~inky@46.241.133.248) (Remote host closed the connection)
[14:07:53] <deniska> W: so "named params, but names are provided by something else somewhere else"
[14:08:00] <W> and now other things which used those database bindings would get the types too
[14:08:07] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[14:08:34] <arahael> W: Specifying distinct types like this is normal in haskell - infact, "String" is avoided (it's awful), but they're not position independant. Just looking at the various haskell extensions...
[14:08:44] <rannnn8888> amigojapan like this ? func AsyncHTTP(users,pr []string{}) ([]string, error) {
[14:08:59] <deniska> in haskell a function takes exactly a single argument :P
[14:09:18] <amigojapan> rannnn8888: why did you revise it from users?
[14:09:22] <W> arahael, yeah I can see arguments for positional still, but even if they were, if they were uniquely typed, the IDE could just swap them around for you if you type them the wrong way, say
[14:10:06] <amigojapan> 6:38 PM <rannnn8888> amigojapan like this ? func AsyncHTTP(users []string{},pr []string{}) ([]string, error) {
[14:10:28] <rannnn8888> amigojapan so how i need resvse this ?
[14:10:51] <amigojapan> Reeves?
[14:11:01] <rannnn8888> revise
[14:11:02] <amigojapan> Severse?
[14:11:13] <amigojapan> 6:40 PM <amigojapan> 6:38 PM <rannnn8888> amigojapan like this ? func AsyncHTTP(users []string{},pr []string{}) ([]string, error) {
[14:11:45] <amigojapan> rannnn8888: it's my guess
[14:12:28] <deniska> W: I think most arguments should be named
[14:12:42] *** Quits: Zsolt (~KantorZso@82.77.145.115) (Quit: Leaving)
[14:12:51] <arahael> I prefer having the not named.
[14:12:58] <deniska> python even has a special syntax for "these parameters can only be passed as named arguments"
[14:13:00] <arahael> Having the name information in the type _is_ very nice.
[14:13:21] <deniska> the problem with types is that they are named at a different location
[14:13:40] <deniska> maybe even in a different module if a language supports type inference
[14:13:53] <amigojapan> deniska: I think arguments should be named. But sending them in werid positions like reverse is confusing
[14:14:06] <rannnn8888> amigojapan https://dpaste.org/HY5b i get https://dpaste.org/an9F
[14:14:12] <arahael> deniska: The function would specify the types they need, though, wouldn't it?
[14:14:24] <amigojapan> Let me see rannnn8888
[14:14:24] <deniska> arahael: where the function is defined? In another module again
[14:14:35] <deniska> or maybe in the same module, but at the different place
[14:14:39] <deniska> not at the line you call
[14:15:03] <deniska> you may rely on IDE to tell you the types as you type
[14:15:12] <amigojapan> rannnn8888: my guess was wrong... You really need someone that knows go
[14:15:15] <arahael> deniska: Oh, I see, at the caller - you'd still need to name those types, but yeah, if you're using type inferrence a lot it might be harder to see, but...
[14:15:16] <deniska> but at this point IDE may as well fix the order for you :)
[14:16:12] <amigojapan> rannnn8888: you need to pass them as a list it seems you are just passing them as string
[14:16:15] <deniska> a lot of functions work on pairs of the same entity type
[14:16:17] <rannnn8888> amigojapan I did not find anything or channel: X
[14:16:20] <arahael> amigojapan: rannnn8888: #go-nuts should be good, but I find it hard to follow what you guys are doing.
[14:16:22] <deniska> addresses, file paths
[14:17:03] <deniska> sure, "file path" is a more useful type than string, but "destination file path" is not a more useful type than "file path"
[14:17:13] <amigojapan> arahael: just trying to pass pr as a string list. Go is not liking how it is declared
[14:17:22] <arahael> amigojapan: What's the latest code again?
[14:17:50] <amigojapan> arahael: 6:44 PM <rannnn8888> amigojapan https://dpaste.org/HY5b i get https://dpaste.org/an9F
[14:18:54] *** Joins: khanred (~khanred@45-17-211-63.lightspeed.okcbok.sbcglobal.net)
[14:18:59] <arahael> amigojapan, rannnn8888: I think you want func AsyncHTTP(users []string, pr []string) ([]string, error)
[14:19:47] <rannnn8888> arahael yep it try its back last error  no new variables on left side of :=
[14:19:47] <rannnn8888> C:\1\tcpr\baba.go:97:41: not enough arguments in call to sendUser
[14:19:48] <rannnn8888>         have (string)
[14:19:48] <rannnn8888>         want (string, string)
[14:20:00] <amigojapan> arahael: he did that before and the compiler complained that it wanted (string,string)
[14:20:19] <arahael> rannnn8888: When assigning to a *new* variable, use :=
[14:20:26] <arahael> rannnn8888: If you're reassigning to an existing variable, just use =
[14:21:53] *** Quits: inky (~inky@46.241.133.248) (Ping timeout: 265 seconds)
[14:22:24] <arahael> rannnn8888: And yep, sendUser requires two argumetns, but on line 97, you've only given it one, it needs a second argument - (which, curiously, is called 'pr')
[14:22:24] <rannnn8888>  arahael here ? inputCh := streamInputs(done, users)
[14:22:25] <rannnn8888>     inputCh = streamInputs(done, pr)
[14:22:39] <W> deniska, for what it's worth, I am also against type inference except in limited circumstances (Java's is mostly okay as it is now), and do want the type information to be local to any code where it matters. But if variables and parameters to the context are explicitly typed, that's usually there. I guess I can see how `sendTo(database.getAddresses())` might hide the type information though
[14:23:15] <arahael> W: I'd be cautious about having too much type inferrence if it's subtype polymorphism.  But if it's algebraic polymorphism I tend to prefer inferrence.
[14:23:35] <amigojapan> Oh rannnn8888 the problem is now sendUser(.  You are missing a parameter again
[14:23:40] <rannnn8888> arahael so make like a two ? inputCh and inputCh2 ?
[14:24:42] <arahael> W: It also helps heaps having sum types. (Which don't exist in Java, still, I think)
[14:25:10] <W> (and even how that might lead to errors, e.g. sendTo taking both address and set<address>, and getAddresses accidentally being changed to return address)
[14:25:35] <arahael> W: THat'd be implicit type conversion. Yeah, I don't like that either.
[14:25:40] <W> arahael, not automatic ones no, but you can of course implement something like that yourself
[14:25:57] <amigojapan> rannnn8888: you have bodyStr, err := sendUser(input) which has only one parameter but it would have two. User and pr
[14:26:32] <amigojapan> rannnn8888: this would also happen in python
[14:26:44] <arahael> W: Really needs to be supported by the compiler, imho.
[14:27:26] *** Joins: gggp__offline (~gggp@60.10.23.164)
[14:27:37] <deniska> You can easily implement that in python and experiment with that
[14:28:12] <rannnn8888> amigojapan what u say like this ?https://dpaste.org/Khd4
[14:28:12] <deniska> maybe some hacky C++ templates will work for that too :)
[14:28:15] <amigojapan> deniska: I doubt his problem is really the golang. It's more fundamental
[14:28:27] <amigojapan> Let me see rannnn8888
[14:28:43] <deniska> amigojapan: I was refering to our "all arguments must be of different types" discussion
[14:28:52] <arahael> A good point, define all the functions as: def foo(*args): sourceAddr = getArgOfType(SourceAddr, args) ...
[14:30:07] *** Quits: gggp_ (~gggp@60.10.194.47) (Ping timeout: 246 seconds)
[14:30:17] <amigojapan> rannnn8888: both line 18 and 28 need 2 parameters. You only provide (inout) which is one
[14:30:23] *** gggp__offline is now known as gggp
[14:30:37] <deniska> a type fundamentally is "what kind of object it is", now instead we're trying to shift the meaning of a type to "how this object will be used"
[14:30:41] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[14:31:38] *** Quits: JuggleTux (~tux@83.137.6.185) (Ping timeout: 268 seconds)
[14:31:47] <deniska> generally you want a type of an object to be as general as possible, and type of a function parameter as narrow as possible
[14:31:50] <amigojapan> rannnn8888: (input)
[14:32:06] <deniska> and now we're spilling this narrowness from outside the function call for no visible to me benefit
[14:32:08] <amigojapan> rannnn8888: you need to provide 2 strings
[14:33:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[14:34:08] <amigojapan> rannnn8888: this is not a golang specific problem. I suggest you try to define fictions in a simple language like LOGO
[14:34:50] <amigojapan> rannnn8888: the fiction declaration needs to match the number of parameters sent to it
[14:34:56] <amigojapan> Function
[14:35:19] <arahael> amigojapan: I don't think rannnn8888 is blaming go for this, are they?
[14:35:34] <amigojapan> arahael: probably not
[14:35:55] *** Joins: pyzozord (~pyzozord@user/pyzozord)
[14:36:00] <amigojapan> arahael: but go is complicating it by having obscure syntax
[14:36:43] <arahael> amigojapan: What's the particular syntax issue here again?
[14:36:43] *** Joins: rifl`` (~user@user/rifl)
[14:37:27] <amigojapan> arahael: that is why I made the mistake before with adding the {} at the end of string
[14:37:35] *** Quits: Raguile (~Raguile@user/raguile) (Ping timeout: 256 seconds)
[14:38:02] *** Quits: rifl` (~user@user/rifl) (Ping timeout: 258 seconds)
[14:38:37] <arahael> amigojapan: Ah, yeah.  C-family warts.  That's not specifically C, but C-family always seem to have some inconsistencies.
[14:38:42] <amigojapan> arahael: I later raised it was complaining about a different function call
[14:39:05] <arahael> amigojapan: The error message was complaining about several different errors.  I always just look at teh first one.
[14:39:19] *** Joins: envex (~envex@cpe-173-91-189-33.neo.res.rr.com)
[14:39:23] <amigojapan> Right arahael
[14:40:03] <rannnn8888> amigojapan both line 18 and 28 , both one its to users = inputCh and 28 = inputCh2
[14:40:04] <amigojapan> arahael: I was looking at the one that wants two strings
[14:40:08] <W> deniska, types definitely hold generalized _semantics_, which may or may not include "how it will be used". And there's other benefits to more generally separating types by use, i.e. enabling easier refactoring when one use requires something more than was anticipated
[14:40:30] <rannnn8888> amigojapan i mean input inputCh and input inputCh2
[14:40:58] <amigojapan> rannnn8888: no no. You need to serve two strings like (user,pr)
[14:41:46] <amigojapan> rannnn8888: they can have different name but they need to be two strings
[14:42:25] <W> s/i.e./e.g./
[14:43:12] <rannnn8888> amigojapan how i can change here to two  srting user,pr it input / https://dpaste.org/FrKQ
[14:43:48] *** Quits: Buttercat (~Buttercat@user/buttercat) (Quit: Leaving.)
[14:44:02] *** Quits: khanred (~khanred@45-17-211-63.lightspeed.okcbok.sbcglobal.net) (Read error: Connection reset by peer)
[14:44:10] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[14:44:28] <deniska> W: a good type to pass is as narrow as possible, a good type to receive is as wide as possibl
[14:45:03] <deniska> these are the opposite requirements, you can't benefitially tie them to each other
[14:45:07] <W> deniska, entirely disagree with that; be strict everywhere
[14:45:29] *** Joins: gggp_ (~gggp@60.10.23.164)
[14:46:04] * arahael also prefers it strict everywhere.
[14:46:18] *** Quits: gggp_ (~gggp@60.10.23.164) (Remote host closed the connection)
[14:46:27] <amigojapan> rannnn8888: it seems you only have one string to pass so maybe star or from the declaration of the function. Show me the function sendUser(user again. I can't find it anymore
[14:47:04] *** Joins: gggp_ (~gggp@60.10.23.164)
[14:47:04] <deniska> W: well, "strict" is different from "casting galore between aliases of the same type"
[14:47:07] <mrig> The article that I read yesterday on why C is still there, states that it is exactly because it is not strict that it is preferred for the places that it is still used.
[14:47:24] * arahael also hates casting.
[14:47:26] <W> deniska, I meant the generalized sentiment you expressed
[14:47:39] <mrig> Interesting point, states that it was originally specked to communicate with alien languages :)
[14:47:54] <rannnn8888> amigojapan https://dpaste.org/oxNh
[14:48:04] <amigojapan> Let me see rannnn8888
[14:48:10] <W> and as you pointed out, it's not casting is it, if you can liken it to named parameters easily. For one, casting generally happens at runtime, I am describing compiler/static analysis features
[14:48:31] *** Joins: node1 (~node1@user/node1)
[14:48:38] *** Quits: gggp (~gggp@60.10.23.164) (Ping timeout: 268 seconds)
[14:48:42] <rannnn8888> amigojapan see i change to inputCh2 := streamInputs(done, pr)
[14:48:55] <mrig> Thus a prerequisite was that it be flexible and capable of analysis or introspection.
[14:49:19] <amigojapan> rannnn8888: change func sendUser(user string,pr string) (string, error) {
[14:49:19] <amigojapan> To func sendUser(user string) (string, error) {
[14:49:28] <arahael> W: Another possibility is what haskell calls "type punning" (not enabled by default - it's a syntax extension).  Basically, when using the name of a field in a record, it assumes you want to bind it to a variable of the same name.
[14:49:46] <arahael> W: And with records, these can be in any order.
[14:49:54] *** Quits: danielrparks (~quassel@2600:1700:3f7b:20f:e71c:b9c2:6843:424e) (Quit: No Ping reply in 180 seconds.)
[14:50:33] <deniska> W: let me rephrase. In good API design you want to require as little as possible from the parameters you receive, because lifting requirements is not a breaking change, but adding requirements is
[14:50:39] <rannnn8888> amigojapan and then how get the pr ?
[14:50:43] <deniska> W: and in the return types of an API the situation is opposite
[14:50:49] <W> arahael, I'm going to have to learn Haskell one of these days, just to follow arguments like these :) Java has records too, but they are ordered (because they define an implicit constructor, and constructor arguments are ordered/positional)
[14:50:56] <arahael> W: Ie, myFunc MyFuncArgs{arg1,arg2,arg3} = arg1 + arg2 + arg3; where "MyFuncArgs" is a record that describes all the types myFunc requires.
[14:51:09] *** Joins: danielrparks (~quassel@2600:1700:3f7b:20f:d0dd:eb62:f921:88a9)
[14:51:25] <amigojapan> There must be a way to reverse streaminputs. Or you could erase that
[14:51:39] <deniska> W: if you require less from your callers they won't complain, if you provide more to your callers, they also don't complain
[14:51:52] <deniska> complaining begins when you require more or provide less
[14:52:07] <deniska> your proposal means that what you require must be inherently tied to what you provide
[14:52:21] <W> deniska, "complaining" here taking the form of... compiler errors/immediate IDE feedback?
[14:52:22] <deniska> so you can't neither lax the requirements, nor provide more
[14:52:37] <deniska> W: breaking changes
[14:53:03] <W> that wasn't what I was asking, I'm wondering what specific downside you are thinking of here, to the programmer
[14:53:03] <deniska> W: might be compiler error if we're talking compilation units, might be breaking consumers if we're talking HTTP APIs and such
[14:53:23] <amigojapan> https://www.irccloud.com/pastebin/WJzPATrh
[14:53:58] <W> I would say that, since loosening requirements on what you take in isn't a breaking change, then initially the requirements should be as strict as possible, so you have room for different directions to expand
[14:54:19] <amigojapan> rannnn8888: read that link please
[14:55:02] <W> also, designing code and designing public APIs are _very_ different things, with different likely errors and misunderstandings
[14:55:12] <W> *public web APIs
[14:56:07] <W> backwards compatibility takes on an entirely different weight, to the degree you probably just want to support multiple versions of a schema outright from the get go
[14:56:40] *** Joins: node1_ (~node1@103.206.8.74)
[14:57:22] <amigojapan> arahael: how do you undo be streaminputs() to get the original variables?
[14:57:23] *** Quits: node1 (~node1@user/node1) (Remote host closed the connection)
[14:57:35] <arahael> amigojapan: Let me check the code again.
[14:57:39] *** Joins: inky (~inky@31.7.162.99)
[14:57:56] <amigojapan> Ok arahael
[14:58:14] <arahael> amigojapan: I think channels are one-way. It's basically a thread-safe queue.
[14:58:19] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) ()
[14:58:33] *** Joins: Mangy_Dog (Mange@82-69-39-176.dsl.in-addr.zen.co.uk)
[14:58:33] *** Quits: Mangy_Dog (Mange@82-69-39-176.dsl.in-addr.zen.co.uk) (Changing host)
[14:58:33] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[14:58:51] <amigojapan> I see arahael
[14:58:52] <deniska> As downsides to a programmer, my main grip is how a lot of types are usefully symmetric, like addresses or file paths, and inventing new types just for the sake of passing to a function is reimplementing named parameters, badly
[14:59:29] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Client Quit)
[14:59:42] *** Joins: Mangy_Dog (Mange@82-69-39-176.dsl.in-addr.zen.co.uk)
[14:59:42] *** Quits: Mangy_Dog (Mange@82-69-39-176.dsl.in-addr.zen.co.uk) (Changing host)
[14:59:42] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[14:59:53] <deniska> add((first_summand) a, (second_summand) b)
[15:01:25] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 258 seconds)
[15:01:54] <deniska> there's nothing particular to a number which makes it "divident" or "divisor"
[15:02:09] <amigojapan> rannnn8888: it would be easier not to use StreamInputs in that case
[15:02:34] <amigojapan> rannnn8888: she just send pr
[15:02:43] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[15:02:47] *** Joins: Buttercat (~Buttercat@user/buttercat)
[15:03:21] *** Joins: node1__ (~node1@103.206.8.74)
[15:03:46] <arahael> amigojapan, rannnn8888: Oh, I should point out that the syntax "go { ... }()" executes the block in a thread.
[15:04:09] <rannnn8888> amigojapan i need but two :D  one to users and one two pr :X   https://dpaste.org/M8Jy I got completely entangled: X
[15:04:13] <mrig> deniska: seems that this is a fundamental trade off between either micro managed or unsafe.
[15:04:21] <amigojapan> Ah ok arahael
[15:04:29] <mrig> This is the paper that I was referring to : https://www.cl.cam.ac.uk/%7Esrk31/research/papers/kell17some-preprint.pdf
[15:04:42] <rannnn8888> maybe have way add the pr in the func sendUser lie list and random simple ?
[15:04:49] <rannnn8888> amigojapan
[15:04:49] <amigojapan> Let me see rannnn8888
[15:05:25] <arahael> amigojapan: "defer ..." executes the deferred statement at the end of the block, ie, just as you're returning it. It's a good way to, as an example, close a file.
[15:05:26] *** Quits: node1_ (~node1@103.206.8.74) (Remote host closed the connection)
[15:06:53] <rannnn8888> amigojapan maybe have simple way here make this ? example in Simple language https://dpaste.org/LdpY
[15:06:59] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) ()
[15:07:09] <amigojapan> rannnn8888 let me see
[15:07:19] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[15:08:22] <amigojapan> rannnn8888: the error is sendUser(input)
[15:09:05] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 258 seconds)
[15:09:20] <amigojapan> rannnn8888: try commenting out inputCh2 := streamInputs2(done, pr)
[15:09:59] <amigojapan> rannnn8888: then change to sendUser(input, pr)
[15:11:12] *** Quits: node1__ (~node1@103.206.8.74) (Quit: Leaving)
[15:11:17] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[15:11:33] *** Joins: node1 (~node1@user/node1)
[15:11:57] *** Joins: Pickchea (~private@user/pickchea)
[15:13:25] *** Joins: node1_ (~node1@103.206.8.74)
[15:13:40] <amigojapan> rannnn8888: why are you making this program? It seems to be to complicated for your still
[15:14:32] *** Quits: node1 (~node1@user/node1) (Remote host closed the connection)
[15:15:08] *** Joins: inky_ (~inky@5.77.141.79)
[15:15:14] *** Quits: inky (~inky@31.7.162.99) (Ping timeout: 272 seconds)
[15:15:14] *** node1_ is now known as node1
[15:15:35] *** Quits: node1 (~node1@103.206.8.74) (Changing host)
[15:15:35] *** Joins: node1 (~node1@user/node1)
[15:15:36] <amigojapan> rannnn8888: I suggest doing some function call practice in python first. Like try the Turtle library in python. If you were familiar with function calls you would understand this
[15:15:56] <arahael> Yeah, or practice Go a bit more, don't do multithreaded code whilst you're still figuring out argumetn passing. :)
[15:16:05] *** Quits: Buttercat (~Buttercat@user/buttercat) (Remote host closed the connection)
[15:16:08] <arahael> Actually, rannnn8888, have you done the Go Tour yet?
[15:18:33] *** Joins: c0rrupt (~c0rrupt@cpe-75-180-32-100.columbus.res.rr.com)
[15:19:34] *** Quits: inky_ (~inky@5.77.141.79) (Ping timeout: 252 seconds)
[15:20:42] *** Quits: Thedarkb-Desktop (~beno@86-42-5-248-dynamic.agg3.kny.prp-wtd.eircom.net) (Remote host closed the connection)
[15:20:56] *** Joins: inky_ (~inky@31.7.162.99)
[15:21:02] <pyzozord> I think I'm ready to move on from gnome-terminal to some other terminal emulator, any suggestions? Ideally it would be written in C so that I can make any changes, it would be cross platform and it would have good utf-8 support (especially emojis). I don't care much for tabs or similar features since I use tmux.
[15:22:12] <mrig> pyzozord: xterm is fantastic, great to read the history of it too.
[15:22:16] <pulse> cmd.exe :D
[15:22:25] <mrig> :D
[15:22:32] *** Joins: Guest99 (~Guest99@2409:8a0c:9e10:4d56:408b:2979:3b4f:3a66)
[15:22:53] <pyzozord> This one looks pretty cool, except it's C++ https://github.com/contour-terminal/contour, I should learn C++ at some point
[15:23:35] <mrig> reminds me that I'm still half way thought the investigation of xterm for getting to grips with the ASCII terminal specification that few followed.
[15:23:42] <pyzozord> pulse: tbh I am quite interestin in WSL2
[15:23:58] <pulse> yes WSL is nice
[15:24:01] <pulse> not that i use it
[15:24:08] <pulse> but still it's nice even in principle
[15:24:10] <mrig> there is enlightenment terminal too.
[15:24:44] <mrig> had a few bugs when I used it, but is going in an interesting direction.
[15:25:17] <GeDaMo> pyzozord: you might be interested in this video "[EPILEPSY WARNING] How fast should an unoptimized terminal run?" https://www.youtube.com/watch?v=hxM8QmyZXtg
[15:25:37] <Square> what is WSL2?
[15:25:40] <mrig> GeDaMo: heh, I was just looking for the link to re post that.
[15:25:52] <GeDaMo> :P
[15:25:56] <pyzozord> GeDaMo: I actually watched it recently! Quite shocking
[15:26:10] <mrig> GeDaMo: stop it! You are distracting me from my maths! :P
[15:26:14] <pyzozord> well the first half of it, I haven't watched the whole video yet
[15:26:47] <GeDaMo> There's a link to his code in the description
[15:27:19] <pyzozord> ooh, huh, that changes things
[15:27:46] <pyzozord> I guess I could use that as a base and merge it somehow with https://st.suckless.org/
[15:27:57] <pyzozord> and it might just be the perfect terminal emulator for me
[15:28:24] <GeDaMo> Also, this is the issue that started the whole thing https://github.com/microsoft/terminal/issues/10362
[15:31:18] <pyzozord> I love in the video how he makes the normal terminal print a gig of text and then proceeds to talk over it for a good few minutes.
[15:31:34] <pyzozord> just to drive to point home
[15:31:42] <mrig> He does make some fair points.
[15:36:34] <mrig> I wonder if the delays that exist in the libraries or systems that he is negating are there due to code creep or or by design?
[15:37:54] <furrymcgee> there is mintty terminal emulator for cygwin, msys and wsl
[15:38:11] *** Joins: lerzer (~lerzer@101.175.100.42)
[15:40:21] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[15:43:24] *** Quits: inky_ (~inky@31.7.162.99) (Ping timeout: 252 seconds)
[15:43:31] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 268 seconds)
[15:44:07] <pyzozord> oh wow I didn't realize microsoft had with open source https://github.com/microsoft/terminal/
[15:44:22] <pyzozord> s/had/had anything/
[15:44:50] <Stryyker> they've open sourced a bit
[15:45:16] <Guest99> pyzozord how , its already right there for long time
[15:46:08] *** Joins: gggp__offline (~gggp@60.10.194.47)
[15:47:02] <pyzozord> Guest99: to be honest I think it was just stuck in my mind that microsoft is anti open source and I never bothered to reconsider that view. It never crossed my mind that microsoft can pivot like this
[15:47:51] <Guest99> for whatever its bussiness
[15:49:22] <Stryyker> Expect their bigger products to be closed like Windows, Visual Studio, Office
[15:49:41] *** Quits: gggp_ (~gggp@60.10.23.164) (Ping timeout: 268 seconds)
[15:49:55] <pyzozord> I guess they need to learn to pivot if they want to stay relevant
[15:50:29] <mrig> I gather they have gone into weapons manufacture.
[15:50:46] <mrig> not likely to disappear if you have that kind of contract.
[15:50:46] <pyzozord> Well... That's not the kind of pivot I had in mind :D
[15:51:04] *** Quits: xff0x (~xff0x@2001:1a81:5298:1800:8236:5b72:ab69:e57) (Ping timeout: 246 seconds)
[15:51:22] *** Joins: xff0x (~xff0x@185.65.135.235)
[15:51:40] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[15:51:53] <Guest99> everything is changing ,should they remain uncertainty, i'd like to see that
[15:52:08] *** gggp__offline is now known as gggp
[15:52:55] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[15:53:01] <mrig> The good think about change is that it is reliable :P
[15:57:29] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 255 seconds)
[15:59:45] *** Joins: jmft2 (~jmft2@81.149.115.87.dyn.plus.net)
[16:01:33] *** Joins: trace987 (~trace@ip5b429953.dynamic.kabel-deutschland.de)
[16:03:42] *** Quits: jmft2 (~jmft2@81.149.115.87.dyn.plus.net) (Client Quit)
[16:03:52] *** Joins: jmft2 (~jmft2@81.149.115.87.dyn.plus.net)
[16:05:26] *** Quits: federico_it (~textual@151.51.82.235) (Quit: Textual IRC Client: www.textualapp.com)
[16:07:22] <pulse> it's 13:37
[16:09:13] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Quit: MirC)
[16:09:40] <mrig> I think alacritty is the rust terminal offering too, use that a while, there is also kitty too.
[16:09:55] <mrig> pulse: are you overclocking? :D
[16:10:49] *** Joins: gitgood (~gitgood@80-44-9-45.dynamic.dsl.as9105.com)
[16:10:58] <pulse> just clocking :p
[16:11:56] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[16:12:40] *** Joins: Twipply (~Twipply@user/twipply)
[16:14:25] <amigojapan> rannnn8888: did you just message me? I can't really find the message but I got an alert
[16:14:46] *** Quits: chemiker (~xarch@ip5f5a05e1.dynamic.kabel-deutschland.de) (Ping timeout: 246 seconds)
[16:16:56] *** Quits: xff0x (~xff0x@185.65.135.235) (Ping timeout: 258 seconds)
[16:17:25] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[16:17:55] *** Joins: ixil (~ixil@82.197.178.137)
[16:18:34] *** Joins: xff0x (~xff0x@2001:1a81:5298:1800:8236:5b72:ab69:e57)
[16:19:31] *** Joins: rsx (~dummy@ppp-188-174-157-224.dynamic.mnet-online.de)
[16:19:55] *** Joins: gggp_ (~gggp@60.10.23.164)
[16:20:45] <pyzozord> Does anyone know of any doctoral research project in performant terminal emulation?
[16:21:09] *** Joins: magla (~gelignite@55d42871.access.ecotel.net)
[16:22:03] <pyzozord> oh nevermind. In the next sentence he says "I am not aware of the body of work around performant GPU terminal emulation"
[16:22:38] *** Quits: gggp (~gggp@60.10.194.47) (Ping timeout: 252 seconds)
[16:23:11] *** Quits: wei2912 (~wei2912@112.199.250.21) (Quit: Lost terminal)
[16:28:03] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 258 seconds)
[16:29:06] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:29:58] *** Joins: mrig (~mrig@user/mrig)
[16:30:30] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[16:31:09] *** Joins: inky_ (~inky@31.7.162.99)
[16:35:33] <node1> I'm trying to trace memory consumption  used by a python program. I have used `pid = os.getpid()` in my program in order to trace the pid of that running program.  So that after knowing the pid number i should find inside /proc/pidnumber/smaps
[16:36:19] <node1> But could not able to find inside  /proc directory may i know why?
[16:36:52] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[16:37:59] *** Joins: Kill-Animals (~Kill-Anim@216-21-135-198.ip.van.radiant.net)
[16:38:19] *** Quits: Ruxnor (kevin@user/kddlb) (Quit: Ping timeout (120 seconds))
[16:38:38] *** Joins: Ruxnor (kevin@user/kddlb)
[16:39:38] *** Quits: zhiayang (~zhiayang@user/zhiayang) (Remote host closed the connection)
[16:39:46] *** Quits: arahael (~arahael@118.211.182.212) (Ping timeout: 240 seconds)
[16:39:53] *** Quits: jazzy (~jaziz@2600:380:8653:59ba:fdf6:260a:bc2c:db50) (Ping timeout: 252 seconds)
[16:39:54] *** Joins: zhiayang (~zhiayang@user/zhiayang)
[16:40:37] *** Quits: BUSY (~BUSY@user/busy) (Ping timeout: 256 seconds)
[16:41:08] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Read error: Connection reset by peer)
[16:41:32] *** Joins: arahael (~arahael@118.211.182.212)
[16:41:58] *** Joins: BUSY (~BUSY@user/busy)
[16:42:31] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[16:45:35] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[16:52:10] *** Quits: jmft2 (~jmft2@81.149.115.87.dyn.plus.net) (Quit: Client closed)
[16:55:06] *** Quits: inky_ (~inky@31.7.162.99) (Ping timeout: 265 seconds)
[16:56:56] *** Joins: inky_ (~inky@31.7.162.99)
[16:57:07] <pyzozord> https://github.com/cmuratori/refterm/blob/main/faq.md
[16:57:58] *** Joins: jmft2 (~jmft2@81.149.115.87.dyn.plus.net)
[16:59:05] *** Joins: gggp__offline (~gggp@60.10.194.47)
[17:02:27] *** Quits: gggp_ (~gggp@60.10.23.164) (Ping timeout: 268 seconds)
[17:03:19] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[17:04:15] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[17:07:48] *** Joins: exile (~exile8338@2a00:23c4:ba88:fc01:68fe:19eb:6dd5:3e3e)
[17:08:06] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[17:08:39] *** Quits: exile (~exile8338@2a00:23c4:ba88:fc01:68fe:19eb:6dd5:3e3e) (Client Quit)
[17:08:58] *** Joins: exilepilot (~exilepilo@2a00:23c4:ba88:fc01:68fe:19eb:6dd5:3e3e)
[17:09:15] <pyzozord> why do some people use for(;;) instead of while(1)? Is a matter of taste? Is it because for(;;) has less characters?
[17:09:39] *** Quits: coax_ (~coax@p5dcbe425.dip0.t-ipconnect.de) (Remote host closed the connection)
[17:10:06] <pulse> (;;) makes a crab
[17:10:09] <pulse> (1) doesn't
[17:10:13] <pulse> need i say more
[17:10:41] *** Quits: jmft2 (~jmft2@81.149.115.87.dyn.plus.net) (Quit: Client closed)
[17:11:14] <pyzozord> It does look a little buggy :D
[17:11:41] <pyzozord> I think I see more of a spider head
[17:12:56] <sandman13> pyzozord: Mostly matte of taste.
[17:13:03] <sandman13> "while loop considered harmful" xD
[17:13:08] <sandman13> *matter
[17:13:29] *** Quits: inom (~inom@176.59.102.225) (Quit: WeeChat 3.1)
[17:14:33] *** Joins: inom (~inom@176.59.102.225)
[17:14:44] *** Joins: xkuru (~xkuru@user/xkuru)
[17:16:50] *** Quits: inky_ (~inky@31.7.162.99) (Ping timeout: 272 seconds)
[17:17:22] *** Joins: jazzy (~jaziz@2600:380:8653:59ba:8859:2efb:1ac:ad5d)
[17:17:56] *** Joins: Leone (~Leo@45.72.231.86)
[17:18:27] <beaky> yes while loops are bad bro they are a form of general recursion which is too powerful and overkill you gotta instead go for more limited forms of recursion (like for loops) so you can more easily show termination through the decreasing size of the structure
[17:18:38] <W> I use neither; I prefer controlled exit out of scope (over exceptions for control flow, process kill etc), with the loop itself clearly documenting when that happens `while(!userExit){`
[17:20:41] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[17:20:51] *** Joins: jmft2 (~jmft2@81.149.115.87.dyn.plus.net)
[17:21:01] *** Quits: jmft2 (~jmft2@81.149.115.87.dyn.plus.net) (Client Quit)
[17:21:39] *** bayaz sets mode: -q Hitchens!*@*
[17:22:04] <beaky> yes maybe i should do that instead of usnig too many conditions (or a blank infinite loop) i too often reach for the 'many ways to exit the infinite loop' approach where i use tools like monads or common lisp conditions or exceptions to do adhoc 'identify how i exited and then handle that' processing
[17:22:46] <beaky> when if i had simpler while loop conditions it could explore better ways
[17:23:49] *** Quits: vitorgonc (~vitorgonc@2804:d55:58e0:2600:849b:a6d:f686:9246) (Ping timeout: 246 seconds)
[17:24:03] *** Joins: vitorgonc (~vitorgonc@2804:d55:580c:5e00:849b:a6d:f686:9246)
[17:26:30] <deniska> I very rarely use something besides `true` in while loops
[17:27:46] <deniska> I guess in languages which have do-while or loop-until style loops, I'd use them more often than while loops
[17:28:18] <deniska> but `while True:` is basically loop-until of languages without that construct
[17:28:35] <W> it's very rare I do use while at all, I'd say, but sometimes you have some kind of active loop, like an interactive command line interface, or lower level networking code (using select and such)
[17:29:14] <beaky> yes like when doing a search i do 'while queue is not empty:' but then often i move such conditions inside an early return in the loop anyway
[17:30:01] *** bayaz sets mode: -q *!*@117.222.64.149
[17:31:18] *** Quits: Kill-Animals (~Kill-Anim@216-21-135-198.ip.van.radiant.net) (Ping timeout: 258 seconds)
[17:31:36] <pyzozord> I tend to use for for simple loops and static conditions, and while loops for dynamic conditions, then when I see while in my code it's a signal that this is a "dynamic" loop
[17:31:41] *** Joins: gggp_ (~gggp@60.10.194.47)
[17:32:00] *** Joins: JuggleTux (~tux@83.137.6.185)
[17:32:52] <beaky> for forever
[17:35:12] *** Quits: gggp__offline (~gggp@60.10.194.47) (Ping timeout: 272 seconds)
[17:37:21] *** Joins: birkoff (birkoff@user/birkoff)
[17:39:34] <pulse> while(while(true))
[17:41:51] <mrig> surely that is a C variant of some lisp dialect?
[17:42:13] * mrig stutters.
[17:42:30] <arahael> you mean (while(while true))? ;)
[17:42:36] <pulse> do x while lyle and kyle smile
[17:43:15] *** Joins: dan01 (~dan01@2a02:2f0f:3017:4e00:d9cb:9927:8271:98ed)
[17:43:33] *** Joins: hexfive (~eric@50.35.83.177)
[17:43:33] *** Quits: hexfive (~eric@50.35.83.177) (Client Quit)
[17:44:56] <pulse> and now my coffee is cold
[17:46:30] <sandman13> that's because you ran double while loop
[17:50:18] *** Quits: jazzy (~jaziz@2600:380:8653:59ba:8859:2efb:1ac:ad5d) (Ping timeout: 240 seconds)
[17:51:13] *** Joins: gggp__offline (~gggp@60.10.194.47)
[17:52:48] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Killed (NickServ (GHOST command used by xavie!~xavie@abayonne-654-1-273-90.w92-146.abo.wanadoo.fr)))
[17:53:11] *** Joins: xavie (~xavie@176-139-252-198.abo.bbox.fr)
[17:53:33] *** Joins: xcombelle (~xavie@abayonne-654-1-273-90.w92-146.abo.wanadoo.fr)
[17:54:49] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[17:54:50] *** Quits: gggp_ (~gggp@60.10.194.47) (Ping timeout: 272 seconds)
[17:55:58] *** Joins: gggp (~gggp@60.10.194.47)
[17:57:30] *** Quits: gggp__offline (~gggp@60.10.194.47) (Ping timeout: 240 seconds)
[17:58:22] *** Joins: Pickchea (~private@user/pickchea)
[18:00:05] *** Joins: gggp_ (~gggp@123.113.191.251)
[18:00:47] *** Joins: chemiker (~xarch@ip5f5a05e1.dynamic.kabel-deutschland.de)
[18:02:21] <mrig> Oh those wheels within wheels ...
[18:02:33] *** Quits: Guest99 (~Guest99@2409:8a0c:9e10:4d56:408b:2979:3b4f:3a66) (Quit: Client closed)
[18:03:41] <mrig> hum, need a reboot.
[18:03:42] *** Quits: gggp (~gggp@60.10.194.47) (Ping timeout: 272 seconds)
[18:03:50] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[18:05:02] *** Quits: freakazoid333 (~freakazoi@72.168.176.108) (Read error: Connection reset by peer)
[18:05:18] *** Quits: chemiker (~xarch@ip5f5a05e1.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[18:06:38] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[18:07:07] *** Joins: mrig (~mrig@user/mrig)
[18:07:54] <pulse> when the UI doesn't know what's going on anymore than you do https://i.imgur.com/JgR9mff.png
[18:08:09] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) ()
[18:09:01] <pulse> and yes both popped up at the same time :p
[18:09:13] <pulse> apparently it _did_ reset the pw though
[18:15:29] *** Quits: ixil (~ixil@82.197.178.137) (Remote host closed the connection)
[18:19:28] *** Joins: paulo_ (~paulo_@user/paulo/x-9032687)
[18:20:29] *** Joins: inky_ (~inky@37.252.95.41)
[18:20:35] *** Quits: stoneware (~stoneware@user/stoneware) (Ping timeout: 255 seconds)
[18:22:13] <beaky> yes this is why you need disjoint sum types so you can represent mutually exclusive states
[18:22:34] *** Quits: pyzozord (~pyzozord@user/pyzozord) (Quit: Lost terminal)
[18:23:30] <sandman13> pulse: reminded me of this: https://i.imgur.com/iwBEp2a.png
[18:23:46] <pulse> heh
[18:24:03] <sandman13> "Task failed successfully!"
[18:24:12] *** Joins: user51 (~user51@77.124.42.70)
[18:25:23] <beaky> i am error https://youtu.be/dXbp6y_7eac
[18:25:30] *** Quits: kikijiki (~Thunderbi@user/kikijiki) (Quit: kikijiki)
[18:25:40] *** Joins: snake (~snake@user/snake)
[18:26:02] *** Joins: stoneware (~stoneware@user/stoneware)
[18:26:32] <pulse> i knew what it was before iclicked
[18:35:00] <paulo_> rickroll?
[18:37:25] *** Quits: inky_ (~inky@37.252.95.41) (Ping timeout: 268 seconds)
[18:38:28] <beaky> no rickroll is dQw4w
[18:38:37] *** Joins: gggp__offline (~gggp@60.10.194.47)
[18:39:20] <beaky> that is error who bug sends you to meet
[18:39:38] *** Joins: gerred (~gerred@2603-7081-7001-866e-094c-af51-8919-917d.res6.spectrum.com)
[18:39:54] *** Joins: zoey (~zoey@2a02:8084:a080:9e00:3fae:994c:3fdc:274d)
[18:40:01] <user51> well, this is anice day
[18:40:03] *** Joins: pyzozord (~pyzozord@user/pyzozord)
[18:40:50] *** Quits: Retropikzel (~Retropikz@2001:999:202:4432:e8f7:c7b2:5e6e:e9f2) (Ping timeout: 255 seconds)
[18:40:56] <user51> think i got how the pre-gen stage of a parser generator should work, now i'm curious how to do code generation
[18:41:50] *** Quits: gggp_ (~gggp@123.113.191.251) (Ping timeout: 258 seconds)
[18:43:48] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[18:44:07] *** gggp__offline is now known as gggp
[18:44:35] <user51> pretty frustrating project though, and i can't recommend against it enough. or maybe i should, reverse psychology..
[18:44:52] *** Joins: Crassus (~Crassus@user/crassus)
[18:46:28] *** Joins: Akuli (~Akuli@87-94-111-20.bb.dnainternet.fi)
[18:51:36] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[18:52:53] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[18:55:22] <GeDaMo> userthe easiest way to do code generation is to concatenate machine code sequences
[18:55:26] <GeDaMo> user51: ^
[18:56:26] *** Joins: inky_ (~inky@46.36.112.166)
[18:56:56] *** Joins: shellwirt (~shellwirt@2001:1284:f013:4856:d59:1e37:347a:600b)
[18:58:41] <pyzozord> Damn it. St uses libxft which has broken support for color emojis.
[18:59:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:01:50] *** Joins: kosek (~kosek@158.255.211.151)
[19:03:04] <kosek> Do someone have some experience with Elon Musk.. ?? He jsut calld me for a few min. ans askedme to working fore him
[19:04:43] *** Joins: Pickchea (~private@user/pickchea)
[19:05:13] <kosek> but I like my work for russian government ... tbh not Im not even sure or I can change without getting a bullet
[19:05:54] <kosek> Im so confused
[19:07:24] <mrig> kosek: I recommend that you could go ask in ##moshpit
[19:07:32] *** Quits: bytefire (~bytefire@51.19.186.131) (Ping timeout: 265 seconds)
[19:07:41] *** Joins: node1 (~node1@user/node1)
[19:07:53] <mrig> likely get more educated responses on this particular subject in there ;P
[19:08:11] *** Joins: misnor (~misnor@156.57.153.38)
[19:08:41] <node1> Any good books name for learning how to code in terms of time complexity and memory management? how is this `clean code` ?
[19:09:41] <kosek> dance to rock music in a violent manner involving jumping up and down and deliberately colliding with other dancers
[19:10:14] *** Joins: Crassus (~Crassus@user/crassus)
[19:10:17] <pulse> kosek, stop trolling
[19:10:47] *** Quits: gerred (~gerred@2603-7081-7001-866e-094c-af51-8919-917d.res6.spectrum.com) (Quit: Client closed)
[19:12:58] <pyzozord> node1: time complexity - CLRS, memory - What Every Programmer Should Know About Memory
[19:13:31] <pyzozord> node1: also on memory A Primer on Memory Consistency and Cache Coherence but I haven't look at that one yet so I'm not sure how good it is
[19:13:50] <node1> okay let me look into those books
[19:14:55] <user51> GeDaMo: i assume you're talking about asm here, originally i intended it to output awk
[19:15:06] <GeDaMo> Ah
[19:15:14] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[19:15:20] <GeDaMo> Well, the principle is the same
[19:15:41] <GeDaMo> You have a set of snippets of target system code which you concatenate
[19:15:48] <user51> i also thought forth might work
[19:15:49] <mrig> oh that's an awesome read, I'd forgotten all about that one.
[19:16:08] <mrig> node1: https://akkadia.org/drepper/cpumemory.pdf
[19:16:30] <user51> but now i'm taking a break, because i'm a bit tired from working on it :)
[19:16:31] <node1> mrig, thanks
[19:16:34] <user51> fun and frustrating!
[19:16:38] <node1> https://lwn.net/Articles/250967/
[19:18:24] <user51> GeDaMo: just to make sure, 'concatenate machine code sequences
[19:18:43] <user51> ' is equivalent to cat asmprog1 asmprog2 ... asmprogN?
[19:18:55] <GeDaMo> Well, sort of
[19:19:09] <GeDaMo> Sometimes you need to fill in literal values like addresses of variables and sich
[19:19:10] <user51> er, that feels a bit naive
[19:19:31] <user51> yeah, replace might need to replace cat with assembler
[19:19:36] <GeDaMo> I'm talking about sequences of like 1, 2 or 3 instructions, not major programs
[19:20:35] <user51> ok, replace asmprog with snip :)
[19:20:40] <user51> as in snippet
[19:21:12] *** Quits: gitgood (~gitgood@80-44-9-45.dynamic.dsl.as9105.com) (Ping timeout: 268 seconds)
[19:21:13] <user51> thanks for your time, btw!
[19:21:37] <GeDaMo> No problem :)
[19:22:23] *** Quits: pandakekok9 (~job@user/job) (Remote host closed the connection)
[19:22:35] *** Quits: tomgus1 (~tomgus1@2a02:c7f:d2b0:e600:ba27:ebff:fe5c:2dcd) (Read error: Connection reset by peer)
[19:22:44] <user51> heh, speaking about assembly, i did try to write an assembler in yacc, but then it felt like using the wrong tool for it
[19:22:47] *** Joins: tomgus1 (~tomgus1@2a02:c7f:d2b0:e600:ba27:ebff:fe5c:2dcd)
[19:23:09] *** Joins: gitgood (~gitgood@80-44-9-45.dynamic.dsl.as9105.com)
[19:23:10] *** Joins: xerxes (~xerxes@117.222.64.42)
[19:23:33] <deniska> you don't need anything fancy to parse assembler
[19:24:03] <deniska> unless you want to support some sort of arbitrary expressions in constants, macros and such
[19:24:29] *** Quits: shellwirt (~shellwirt@2001:1284:f013:4856:d59:1e37:347a:600b) (Ping timeout: 255 seconds)
[19:27:36] *** Joins: inky (~inky@46.162.235.220)
[19:27:48] *** Quits: exilepilot (~exilepilo@2a00:23c4:ba88:fc01:68fe:19eb:6dd5:3e3e) (Quit: Leaving)
[19:27:50] *** Joins: nekonibble (~nekonibbl@user/nekobit)
[19:29:12] *** Joins: gggp_ (~gggp@60.10.194.47)
[19:29:16] *** Quits: inky_ (~inky@46.36.112.166) (Ping timeout: 252 seconds)
[19:30:19] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[19:31:46] *** Joins: jess (~jess@libera/staff/jess)
[19:32:40] *** Quits: gggp (~gggp@60.10.194.47) (Ping timeout: 265 seconds)
[19:32:45] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[19:33:30] *** Joins: snake (~snake@user/snake)
[19:34:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[19:34:46] *** Quits: c0rrupt (~c0rrupt@cpe-75-180-32-100.columbus.res.rr.com) (Ping timeout: 268 seconds)
[19:35:47] *** Joins: portapazienza (~portapazi@93-47-220-192.ip114.fastwebnet.it)
[19:35:57] *** Joins: c0rrupt (c0rrupt@cpe-75-180-32-100.columbus.res.rr.com)
[19:38:25] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[19:38:38] *** Parts: portapazienza (~portapazi@93-47-220-192.ip114.fastwebnet.it) ()
[19:40:01] *** Joins: shellwirt (~shellwirt@2001:1284:f013:4856:d59:1e37:347a:600b)
[19:40:15] *** Joins: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca)
[19:40:16] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Client Quit)
[19:42:12] *** Joins: soapsudsxx (~soapsudsx@209.221.40.138)
[19:43:05] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (Ping timeout: 256 seconds)
[19:44:08] <pyzozord> well I guess I can survive on monochrome emoijs for the sake of actually being able to build my terminal emulator
[19:44:12] *** Joins: gggp__offline (~gggp@123.113.191.251)
[19:44:13] <pyzozord> st is kinda cool
[19:44:18] *** gggp__offline is now known as gggp
[19:45:40] <user51> what's cool about it?
[19:46:02] <xerxes> user51: it's cool.
[19:46:26] <pyzozord> it's very simple, you can actually understand it and make chnges to it with little C knoweledge
[19:46:33] <xerxes> user51: you can configure anything.
[19:47:00] <pyzozord> and it's got community patches https://st.suckless.org/patches/ I installed for example 'alpha' for transparent background
[19:47:10] <xerxes> user51: i use it. i've configured it to not show text decorations at all.
[19:47:10] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 265 seconds)
[19:47:34] *** Quits: gggp_ (~gggp@60.10.194.47) (Ping timeout: 272 seconds)
[19:47:50] <xerxes> user51: i also configured it to try only my monospace font to search for glyphs.
[19:48:09] <xerxes> user51: i also configured it to show only the glyphs i like.
[19:48:27] <xerxes> user51: i've also turned off reverse video.
[19:49:30] <xerxes> user51: apart from st and Firefox, there is no other application window open in my system generally.
[19:50:14] *** Joins: freakazoid333 (~freakazoi@72.168.176.96)
[19:50:55] <xerxes> user51: i sometimes use Nautilus, that's it.
[19:52:09] <pyzozord> only annyoing thing is it doesn't work with color emojis because of upstream bug in the libxft
[19:53:19] <pyzozord> also somehow feels faster, but this can be subjective
[19:53:19] *** Joins: Tazmainian (~Tazmainia@41.193.169.28)
[19:53:21] <xerxes> user51: to make all these change in GNOME Terminal or the like, i'd have to change the VteTerminal, which not a fun experience as GTK3 code is dense to work with.
[19:53:38] *** Joins: arcatech (~arcatech@user/arcatech)
[19:54:17] <xerxes> user51: i'd have to wade through miles of GLib and GObject object-oriented madness before i could even start to make any changes.
[19:55:02] <xerxes> user51: even i, being a sub-standard programmer, could change st as i like. that's simplicity.
[19:55:59] <xerxes> pyzozord: i don't like emojis anyway. i don't even allow non-Latin characters. they don't sit well with the monospace outlook.
[19:58:14] *** Quits: inky (~inky@46.162.235.220) (Ping timeout: 252 seconds)
[19:58:18] <xerxes> user51: all in all, if you want total control over the software you use, you should check out the tools from suckless.org like dwm, st, etc.
[19:58:24] *** Joins: inky_ (~inky@37.186.117.147)
[19:58:46] <pyzozord> xerxes: I admit I'm a sucker for emojis. I like emojis in my shell prompt. And sometimes in program outputs. They are high information bandwidth vehicles.
[19:59:06] <pyzozord> I'm not so found of them in the code though
[19:59:22] <xerxes> pyzozord: i won't mind emojis if i can find a good font for them.
[19:59:39] <pyzozord> But it could be years in the javascript ecosystem stockholm syndrom :D
[20:00:01] <xerxes> user51: but whatever you do, don't fall for the patches. they mostly won't work and would make you dependent. try to change the code on your own.
[20:00:10] <pyzozord> xerxes: the one that comes with ubuntu is really pretty good looking. I think it's this one https://www.google.com/get/noto/help/emoji/
[20:01:08] <xerxes> user51: many new guys stuff their st with patches and make it suck more ultimately. it's supposed to be minimal in style. don't make the mistake of thinking it could replace all the bells and whistles of the traditional emulators.
[20:02:36] <xerxes> user51: this is the same mistake newcomers to Vim make too. they stuff it full of plugins in hopes that Vim will become their new IDE.
[20:03:20] *** Joins: LiftLeft (~LiftLeft@154.21.23.6)
[20:05:01] <xerxes> pyzozord: i like this. https://ellekasai.github.io/twemoji-awesome/
[20:06:58] <pyzozord> ah, I will need to install the patch to support clicking links
[20:07:56] <user51> xerxes: yeah i'm familiar with suckless stuff, i'm currently using lxde for a long while. maybe i hsould go back to dwm, but honestly, on my desktop things work fine
[20:08:05] <xerxes> pyzozord: here is how i do it. i double-click it to select it. then i press Ctrl+Shift+C to copy it. and then i paste it in the browser. :P
[20:08:26] <user51> afair the reason was that changing language was broken in dwm for some reason.
[20:08:36] <xerxes> user51: if things absolutely work for you, it might not be a good thing to change it.
[20:08:39] <xerxes> user51: i agree.
[20:09:04] <user51> also, after some experience with plan 9, i'm less enthusiastic about terminals
[20:09:15] <pyzozord> xerxes: yeah that one is also good looking. I think it's used in Slack.
[20:09:15] <user51> bleh, i said i'll tkae a break from parsing :D
[20:09:38] <xerxes> user51: i absolutely hated GNOME but kept using it for a long time. i couldn't see myself using any other DE, that's why i shifted to dwm.
[20:09:50] <user51> i think it's still on default on my x61
[20:10:21] <xerxes> user51: i'm not familiar with Plan 9. what's the workflow over there?
[20:10:46] <user51> worse in my experience, but some people like it, and i haven't delved deep enough anyway
[20:11:01] <user51> the reliance on the mouse can be pretty annoying
[20:11:03] <xerxes> user51: do you not need terminal emulators in Plan 9?
[20:11:45] <user51> but it was designed in the late 80s afair, so criticizing it now is silly
[20:12:20] <xerxes> user51: mouse-chording and modeless-editing are popular techniques which i don't think i could ever start liking, in this lifetime at least. :P
[20:12:47] *** Quits: Crassus (~Crassus@user/crassus) (Quit: Textual IRC Client: www.textualapp.com)
[20:13:12] <xerxes> user51: i also don't get why they are so popular. it takes so much time for me to find where my mouse is. :)
[20:13:15] <user51> xerxes: rio (and acme) handles the terminal part. try booting up a vm. it's an interesting experience, especially seeing that the terminal and graphical programs running together
[20:13:31] <user51> i use a lot of keyboard shortcuts as well
[20:13:32] <xerxes> user51: i shall do that.
[20:14:15] <user51> i think i got tired of micropatching everything to use the keyboard
[20:15:20] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[20:15:25] *** Quits: Pixi (~Pixi@user/pixi) (Quit: Leaving)
[20:15:34] *** Quits: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net) (Ping timeout: 246 seconds)
[20:15:35] <user51> yeah, it's a real thing. i used to be pretty heavy into keyboard stuff. last 2 years i kind of got undecided about how much benefit i'm getting.
[20:15:38] <xerxes> user51: i like the philosophy of people associated with Plan 9, Go, etc. Rob Pike seems to be one of the central figures now. the guys over at suckless are influenced heavily by that too. the only thing i don't like is the alleged political beliefs and a cult-like existence of these people.
[20:16:22] <user51> i used to be into that stuff when i was younger, nowdays i'd just rather be more pragmatic
[20:17:52] *** Joins: davros (~davros@host86-185-61-40.range86-185.btcentralplus.com)
[20:17:58] <xerxes> user51: this works good for me now. maybe in the future i will change it. but given the inertia one needs to conquer to change these things, i doubt i will let this go.
[20:18:23] <user51> i also got a bit bummed with "minimal" software
[20:18:40] <user51> nowdays i consider it a marketing term
[20:18:43] <xerxes> user51: i'm not in it for the minimalism. i just don't like bad visual design.
[20:19:00] <xerxes> user51: i'm quite superficial when it comes to software. :)
[20:20:10] <xerxes> user51: with uniform visuals through terminal interface, i'm calmer and don't get distracted easily. i made my own font for the terminal too, just for the same reasons.
[20:20:46] <xerxes> user51: but i get it. many new people are in it for the bragging rights. and they do brag a lot about this. :P
[20:21:17] <xerxes> user51: i don't think running minimal software makes you a better programmer, or a better anything really.
[20:22:00] *** Quits: Lyn (~Lyn@user/law) (Quit: Leaving)
[20:22:33] <xerxes> user51: it just helps calm my nerves.
[20:23:08] <xerxes> user51: but it's true. "minimalism" has become a buzzword.
[20:24:51] *** Joins: Pixi (~Pixi@user/pixi)
[20:27:05] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[20:27:09] *** Quits: shellwirt (~shellwirt@2001:1284:f013:4856:d59:1e37:347a:600b) (Remote host closed the connection)
[20:28:34] <xerxes> user51: these developers, if they form a nebulous group, seems to always either propagate a perverted brand of market libertarianism endemic to America on the one hand or full-blown white supremacy on the other. this is one thing which i don't like about them. but i shall stop here before the moderators ban me, again.
[20:30:06] *** Joins: gggp_ (~gggp@60.10.194.47)
[20:31:10] *** Joins: Pickchea (~private@user/pickchea)
[20:33:23] *** Quits: gggp (~gggp@123.113.191.251) (Ping timeout: 258 seconds)
[20:42:48] *** Joins: gggp__offline (~gggp@60.10.194.47)
[20:43:50] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[20:44:33] *** Quits: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se) (Remote host closed the connection)
[20:45:32] *** Quits: gggp_ (~gggp@60.10.194.47) (Ping timeout: 252 seconds)
[20:45:49] *** Joins: usr123 (~usr123@124.253.110.229)
[20:46:54] <usr123> I've never been able to understand what NP complete means. I tried reading the wikipedia page. Can someone please explain in layman terms what NP complete means? I understand that it's a class of problems where if we can find a solution for one of them, we can find a solution for all of them or something.
[20:52:33] <pyzozord> usr123: https://www.youtube.com/watch?v=XDTOs8MgQfg maybe this will help
[20:54:12] <paulo_> is integer factorization NP complete?
[20:54:18] <pyzozord> I don't understand it well myself. As far as I can understand it's about time complexity of an algorithm and time complexity of a proof of that algorithm. in P O(algo)=O(proof) in NP O(algo) != O(proof)
[20:54:27] <CalimeroTeknik> usr123, that's not the description, that's a property; in layman terms it's a problem where the only way to solve it is trying all possibilities
[20:54:59] <CalimeroTeknik> that's the simplest explanation of NP I can do
[20:55:30] <CalimeroTeknik> (it's not complete though, it's a first impression)
[20:56:11] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:56:56] <CalimeroTeknik> pyzozord, I don't think proofs are involved in the definition
[20:57:02] <usr123> CalimeroTeknik: Okay, so it basically means that we don't really have an algorithm for the problem, we just have to try out all possibilities for different parameters and then find the best solution of all the outcomes?
[20:57:33] <CalimeroTeknik> that's the spirit
[20:57:44] <usr123> Got it. Thanks
[20:57:54] <CalimeroTeknik> although there's a raging war of heuristics, as to "in which order do we try them out"?
[20:58:32] *** akselmo_ is now known as akselmo
[20:58:57] <CalimeroTeknik> maybe we won't get the best option, but if we find a good enough one quickly, sometimes that'll suffice in practice
[20:59:24] <CalimeroTeknik> of course this means stopping before actually solving the problem
[20:59:37] <CalimeroTeknik> close enough does it
[21:00:26] <CalimeroTeknik> and I said my explanation was incomplete: the missing part was how hard it is to check that a suggested solution is indeed one
[21:00:47] *** Joins: kron (~weechat@user/qaph)
[21:03:03] *** Joins: gggp_ (~gggp@221.219.77.87)
[21:06:26] *** Quits: gggp__offline (~gggp@60.10.194.47) (Ping timeout: 265 seconds)
[21:07:42] <xerxes> user51: are you there?
[21:09:09] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[21:11:49] *** Joins: ayenet4 (~0x100@32.211.211.39)
[21:11:57] <user51> xerxes: yes, need something?
[21:12:11] <xerxes> user51: i'm sorry.
[21:12:20] <xerxes> usr123: i meant to ask you.
[21:12:24] <user51> ha
[21:12:50] <xerxes> maybe if people chose unique names, like myself. :)
[21:14:24] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 258 seconds)
[21:14:34] <usr123> Yes, I'm here.
[21:17:09] *** Joins: Natch (~natch@c-e070e255.014-297-73746f25.bbcust.telenor.se)
[21:17:53] *** Joins: Guest9 (~Guest9@103.250.145.129)
[21:18:57] <Guest9> is there any tool which can speak (TTS) both words (word & its translated word in another language)
[21:19:11] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[21:21:18] <GeDaMo> Google translate?
[21:22:24] <xerxes> usr123: another motivation for the NP complexity is to look at whether a solution could be verified in polynomial time. if for a problem, a proposed solution could be verified to be a correct solution in polynomial time, the problem is an NP complexity problem.
[21:22:46] *** Joins: nekobyte (~nekobyte@user/nekobit)
[21:25:08] *** Joins: kind80 (~kind80@119.30.38.202)
[21:25:19] <Guest9> GeDaMo it doesnt work together
[21:25:37] <Guest9> it works for one at a time only
[21:25:52] <GeDaMo> Possibly it has an API you can use?
[21:27:41] <xerxes> Guest9: do you want the tool to do the translation too?
[21:27:50] <Guest9> nope
[21:28:11] <Guest9> if it has provision, then its fine
[21:28:20] <Guest9> otherwise, i have my own dictionary
[21:28:26] <Guest9> xerxes
[21:28:39] *** Quits: rsx (~dummy@ppp-188-174-157-224.dynamic.mnet-online.de) (Quit: rsx)
[21:28:57] *** Joins: web-22 (~web-22@2409:8a0c:9e10:4d56:408b:2979:3b4f:3a66)
[21:30:12] <kind80> Hi everyone
[21:30:17] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:30:25] <kind80> Can I help me Python bot
[21:30:29] <kind80> Mediawiki Python bot
[21:31:10] <ayenet4> yes
[21:31:19] <kind80> I want to import the module template from Wikipedia to my wiki
[21:31:22] *** Joins: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[21:33:01] *** Quits: ayenet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[21:33:13] *** Joins: ayenet4 (~0x100@32.211.211.39)
[21:34:06] *** kind80 is now known as Kind
[21:34:30] <xerxes> Guest9: i don't have any suggestion. but may i ask which languages and what purpose are you looking it for?
[21:35:35] <Guest9> for langyuage learning, english hindi xerxes
[21:35:35] *** Joins: gggp__offline (~gggp@221.219.77.87)
[21:37:50] <xerxes> Guest9: what language are you trying to learn?
[21:38:24] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[21:38:56] *** Quits: gggp_ (~gggp@221.219.77.87) (Ping timeout: 258 seconds)
[21:40:05] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[21:40:52] *** Quits: amigojapan (uid86330@id-86330.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[21:42:00] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[21:43:50] *** Quits: inky_ (~inky@37.186.117.147) (Ping timeout: 252 seconds)
[21:43:55] *** Quits: Kind (~kind80@119.30.38.202) (Ping timeout: 258 seconds)
[21:45:10] *** Joins: kind80 (~kind80@119.30.38.202)
[21:46:48] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[21:46:51] <xerxes> Guest9: if you're trying to learn english from hindi, use some English learning app like Cake or even Duolingo. if you're trying to learn hindi from english, why?
[21:48:32] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[21:48:43] *** Joins: blahboybaz (~blahboyba@c-67-183-225-44.hsd1.wa.comcast.net)
[21:50:09] *** Joins: node1 (~node1@user/node1)
[21:50:16] *** Joins: mrig (~mrig@user/mrig)
[21:50:30] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[21:50:31] <Guest9> for IELTS
[21:50:50] <xerxes> Guest9: you speak hindi, natively?
[21:51:49] <Guest9> yes
[21:53:24] <xerxes> Guest9: solve test papers. TTS softwares are not going to help. free TTS software are sub-standard anyway. watch BBC or some other English YouTube channels. try to speak.
[21:53:36] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[21:54:00] <node1> Well when i did lscpu , i found i have 1 cpu, 2 cores and 1 thread per core. So if i do a calculationn i think i can run maximum thread is  2, and total number of core count is 2. https://pastebin.com/raw/SnejVKNy
[21:54:01] <xerxes> Guest9: go to https://merriam-webster.com if you need to learn the meaning of some word.
[21:54:59] <node1> Am i did the right calculation ?
[21:55:50] <xerxes> Guest9: also, try to speak yourself.
[21:56:46] *** Quits: kind80 (~kind80@119.30.38.202) (Ping timeout: 272 seconds)
[21:58:50] *** Quits: kodah (~kodah@user/kodah) (Ping timeout: 255 seconds)
[21:59:22] <GeDaMo> node1: yes
[21:59:31] <node1> Yay!!
[21:59:42] <GeDaMo> Although those are hardware threads, you can have as many software threads as you can fit into memory
[21:59:55] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[22:01:21] <node1> i see, and i'm using AMD processor so can i say thread is here call simultaneous multithreading ?
[22:02:32] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[22:03:33] *** Joins: brickfat (~brickfat@user/brickfat)
[22:06:35] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Read error: Connection reset by peer)
[22:06:46] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[22:08:14] *** Joins: gggp_ (~gggp@60.10.194.47)
[22:08:50] <node1> Because i found Intel say same thing as hyperthreading and AMD as SMT( simultaneous multithreading)
[22:09:21] <GeDaMo> I don't know SMT but hyperthreading has two hardware threads per core
[22:09:57] *** Joins: compscipunk (~compscipu@2600:1700:cca0:4d1f:fa84:a423:cbf9:1471)
[22:10:10] <node1> yes even i have seen that and those belongs to intel family processor.
[22:10:45] *** Quits: gggp__offline (~gggp@221.219.77.87) (Ping timeout: 258 seconds)
[22:12:44] *** gggp_ is now known as gggp
[22:13:12] <blahboybaz> I'm seeing something wierd with jest that doesn't seem to match the usage according to the documentation. Jest has a function toBeNull()  ( see: https://jestjs.io/docs/expect#tobenull ). In the example the usage shows it being used like a function ( ie: with the parenthesis at the end "()" ). However, when I try to use it like that I get an error. If I try to use toBe(null) I also get an error.
[22:13:18] <blahboybaz> But if I use toBeNull  ( without the parens ) it passes. What could be going on here?
[22:13:50] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[22:14:05] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:14:10] *** Quits: dan01 (~dan01@2a02:2f0f:3017:4e00:d9cb:9927:8271:98ed) (Read error: Connection reset by peer)
[22:14:15] *** Joins: snake (~snake@user/snake)
[22:14:47] <pyzozord> blahboybaz: can you share the code you are trying to run?
[22:18:20] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[22:18:42] *** Quits: freakazoid333 (~freakazoi@72.168.176.96) (Read error: Connection reset by peer)
[22:19:02] <blahboybaz> pyzozord: https://onecompiler.com/nodejs/3x566n7ay   <--   lines 34 thourgh 39 (line 37 passes as written but I do not have confidence what it being tested or its source [ie: a mock? The real object?]_. And I don't know why I have to omit the parens "()" for it to work
[22:19:16] *** Joins: freakazoid333 (~freakazoi@72.168.176.96)
[22:19:29] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) ()
[22:19:53] *** Quits: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca) (Quit: Izem)
[22:20:02] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[22:21:12] <pyzozord> blahboybaz: what error do you get? It should be .toBeNull();
[22:21:24] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[22:22:17] *** Joins: immibis_ (~immibis@2a02:3032:400:aff2:d899:f991:dcec:5708)
[22:22:52] <Guest9> CTRL+C is  shortcut used for copy, is it possible to have C+CTRL for differnt purpose i.e. Paste
[22:23:06] <blahboybaz> pyzozord: If I add the parens to the end - toBeNull() - then I get the error   expect(received).toBeNull()
[22:23:09] <blahboybaz>  Received: undefined
[22:23:26] <pyzozord> blahboybaz: that's not an error in the test code
[22:23:52] <pyzozord> it's just a failed expectation, obj is not "null", it is "undefined". In javascript those are two different values
[22:24:03] <blahboybaz> I know with certainty that that field is initialized to null. Manual testing proves it but I can't seem to test it in jest
[22:24:26] <blahboybaz> Then mahybe the real object isn't being tested?
[22:24:29] *** Quits: immibis (~immibis@62.156.144.218) (Ping timeout: 255 seconds)
[22:25:11] <pyzozord> blahboybaz: you must be manually testing something wrong. do console.log('debug', obj.data) before line 37
[22:25:46] <blahboybaz> If I do let obj = new Node(); console.log(obj.data); and just run it manually (not a jest test) I get the output "null".
[22:26:44] <pyzozord> ah, it may be about the mock. remove line 5 and check again
[22:27:29] <blahboybaz> pyzozord: I'm guess you mean in the jest test file so if I place that line obove me exepect line I get  debug undefined by jesst output
[22:28:25] <pyzozord> blahboybaz: oh ok well in that case obj.data is not null, it is undefined and the expect().toBeNull() fails correctly
[22:29:18] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[22:29:19] <blahboybaz> pyzozord: Check this out: https://onecompiler.com/nodejs/3x567g5mt
[22:29:35] <blahboybaz> That's what's being tested I only added the last 2 lines to do manual test
[22:30:30] <pyzozord> blahboybaz: where you did console.log('debug', obj.data), do instead console.log('debug', obj)
[22:31:27] <blahboybaz> pyzozord: I get  debug Node {}
[22:31:40] <pyzozord> blahboybaz: also try removing line 5 in the test the one with jest.mock
[22:32:51] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[22:33:34] <blahboybaz> If I comment line 5 and run the same code - what includes condole.loe(debug obj.data); -  then I get  debug Node { next: null }
[22:34:28] <pyzozord> blahboybaz: yeah so it's the mock
[22:34:56] <pyzozord> blahboybaz: generally it looks like your test is testing the Node, in that case you don't want to mock the node
[22:35:16] <pyzozord> blahboybaz: generally mocks are for things that must be used but are not important for the test
[22:35:32] *** Joins: kmh_ (~kmh@p2e511d5e.dip0.t-ipconnect.de)
[22:35:42] <pyzozord> blahboybaz: in this case Node is the main subject of the test therefor it's important, and should not be mocked
[22:35:47] <blahboybaz> But the line creating the mock is commented and I'm getting a fail
[22:35:54] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[22:36:50] *** Quits: kmh (~kmh@p200300df5f30ad00c00521c3c33cf4ab.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[22:37:22] *** Joins: pavonia (~user@user/siracusa)
[22:38:16] <pyzozord> ok I looked again there are two more things wrong
[22:38:41] <pyzozord> irst, your variable name is not "data", it's "_data".
[22:39:00] <pyzozord> I don't know what I did but I did something werid...
[22:39:40] <pyzozord> First, your variable name is not "data", it's "_data".
[22:40:16] <blahboybaz> pyzozord: Even if I eliminate the beforeEach block, do let node = new Node(); in the scope of define, then change the case of Node to node (what should be the instantiated object) in all the test lines - now all my previously passing tests (the first 3) all fail. If I comment all tests excetp that last one (the one with toBeNull() in it then it passes but it is the only one. I need to be able to
[22:40:20] <pyzozord> Second, you are using # which indicates that variable or function is private to the class. That means it will be completly invisible outside, like for example in your test
[22:40:22] <blahboybaz> test all these things (all the test cases that were being done.
[22:41:13] <blahboybaz> pyzozord: it #_data (private field) has a getter and setter which ar accessed with obj.data or obj.data(value) respectively.
[22:41:38] <blahboybaz> So the getter and setter should be getting used. Manual testing shows everything to work fine
[22:42:13] <pyzozord> blahboybaz: oh you are right, sorry haven't been reading it very closely
[22:43:36] <blahboybaz> Its like I have a problem if I go one way and a different problem if I go the other way and can't get a valid test with all tests included
[22:43:56] <pyzozord> blahboybaz: have you looked at the example here? https://jestjs.io/docs/jest-object#jestspyonobject-methodname-accesstype
[22:45:07] <blahboybaz> Yeah, I tried that too (the code has since changed but I tried that yesterday afternoon). I had the same situation as in my last comment
[22:45:19] *** Quits: inom (~inom@176.59.102.225) (Quit: WeeChat 3.1)
[22:45:24] <blahboybaz> iirc I could get it to pass but only in isolation (not with all tests being run)
[22:45:47] *** Joins: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca)
[22:45:59] *** Parts: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca) ()
[22:46:03] *** Joins: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth)
[22:46:16] *** Joins: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net)
[22:46:27] <blahboybaz> Intuitively it seems I need a way to tell jest 'don't use the mock for this last couple tests - its fine you used it the first few but now switch to not using that and use this REAL object now instead'
[22:47:13] <pyzozord> blahboybaz: you can always jest.unmock()
[22:47:31] *** Quits: TechTest (uid283215@id-283215.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[22:48:52] <blahboybaz> pyzozord: I will check the documentation on that too but so I know what I'm looking at... That goes in the scope of describe (or it can)?
[22:49:05] *** Joins: Kacper_ (~kasper93@89-74-110-199.dynamic.chello.pl)
[22:49:21] <pyzozord> blahboybaz: it can go anywhere, just remember you need to require again after you unmock
[22:49:26] *** Joins: gggp_ (~gggp@60.10.194.47)
[22:50:04] *** Quits: xerxes (~xerxes@117.222.64.42) (Quit: leaving)
[22:50:14] *** Quits: kasper93 (~kasper93@89-74-110-199.dynamic.chello.pl) (Ping timeout: 258 seconds)
[22:50:14] *** Kacper_ is now known as kasper93
[22:50:52] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[22:50:57] *** Joins: gggp__offline (~gggp@60.10.194.47)
[22:51:01] *** __jmcantrell__ is now known as jmcantrell
[22:51:03] <blahboybaz> pyzozord: I'm sure that last part is the critical piece. Thatnks
[22:51:26] *** Joins: poww0wmus1c (~poww0wmus@gateway/tor-sasl/poww0wmus1c)
[22:51:32] *** Joins: Kacper_ (~kasper93@89-74-110-199.dynamic.chello.pl)
[22:52:23] *** Quits: gggp (~gggp@60.10.194.47) (Ping timeout: 255 seconds)
[22:52:25] <pyzozord> blahboybaz: or you can extend your mock to suppor your data
[22:52:57] <pyzozord> blahboybaz: but I'd rather remove the mock completly from there, you are not testing anything there. You are testing if empty mock shell works
[22:54:10] <pyzozord> blahboybaz: instead use jest.spyOn to gain insight into the inner behaviour of your real Node object
[22:54:42] *** Quits: gggp_ (~gggp@60.10.194.47) (Ping timeout: 265 seconds)
[22:54:42] *** Quits: kasper93 (~kasper93@89-74-110-199.dynamic.chello.pl) (Ping timeout: 265 seconds)
[22:54:42] *** Kacper_ is now known as kasper93
[22:54:47] *** Quits: usr123 (~usr123@124.253.110.229) (Read error: Connection reset by peer)
[22:55:10] *** Joins: usr123 (~usr123@49.156.64.137)
[22:55:30] <blahboybaz> Yeah, its a real shitfest
[22:55:34] *** Joins: Chewt (~hayden@2601:1c0:8101:7310::5ae3)
[22:56:03] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:56:42] <pyzozord> Where do you guys create throwaway projects like this? Something just for 5 minutes? I often do mine in /tmp/test but it feels kind of dirty
[22:57:28] <pyzozord> like I'm not supposed to use /tmp like this, it's for programs, not for users. Feels like I'd be randomly creating directories in /proc
[22:57:35] *** Joins: alycidyne (~kova@91-160-172-214.subs.proxad.net)
[22:57:45] *** Joins: entuland (~entuland@user/entuland)
[22:58:16] *** Quits: Guest9 (~Guest9@103.250.145.129) (Ping timeout: 268 seconds)
[22:58:26] *** Quits: alycidyne (~kova@91-160-172-214.subs.proxad.net) (Client Quit)
[22:59:36] <GeDaMo> I have a ~/tmp but I never clear it so it's full of crap :P
[22:59:39] <blahboybaz> Well I'll be a som bitch something worked!  :)
[22:59:55] *** Joins: kodah (~kodah@user/kodah)
[23:00:07] *** Joins: alycidyne (~kova@91-160-172-214.subs.proxad.net)
[23:00:24] <pyzozord> Hmm, ~/tmp is not a bad idea
[23:00:35] *** Quits: xcombelle (~xavie@abayonne-654-1-273-90.w92-146.abo.wanadoo.fr) (Ping timeout: 258 seconds)
[23:00:38] <bihtori> I used to store throwaway stuff in /tmp, but then my VM crashed and I lost everything there.
[23:01:01] <dodo> sounds like it wasn't tmp data..
[23:01:08] <deniska> pyzozord: ~/Desktop
[23:01:12] *** Joins: xcombelle (~xavie@abayonne-654-1-273-90.w92-146.abo.wanadoo.fr)
[23:01:33] <pyzozord> well I forget where is coming from (maybe systemd?) but I have ~/.local/ that kind of mirrors / it has a share/ bin/ etc) so maybe I'll just make a ~/.local/tmp
[23:01:48] *** Joins: NEYi (~NEYi@109.251.216.38)
[23:03:05] <alycidyne> Hello, can one say that an operating system's architecture is basically equivalent to defining responsibilities for the code running on a system?
[23:03:19] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[23:03:54] *** Joins: kind80 (~kind80@37.111.231.152)
[23:03:56] <alycidyne> In that, e.g. one party is responsible for implementing the abstractions, other parties are responsible for device drivers, some libraries come from fourth parties, and the rest come from users?
[23:03:56] *** Joins: inom (~inom@176.59.102.225)
[23:04:09] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[23:04:32] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[23:04:38] <alycidyne> ... I basically repeated Conway's law, didn't I
[23:05:21] *** Quits: kind80 (~kind80@37.111.231.152) (Client Quit)
[23:05:45] <pyzozord> alycidyne: noo, conways law is that code architecture follows social organization and it's comm lines
[23:06:04] <pyzozord> eh I buchered it
[23:06:06] <pyzozord> "ny organization that designs a system (defined broadly) will produce a design whose structure is a copy of the organization's communication structure."
[23:06:12] <pyzozord> Any*
[23:06:26] <alycidyne> pyzozord: well, social organization can follow responsibilities, whether or not it's a single organization
[23:07:06] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[23:08:06] <pyzozord> alycidyne: I think you may be tapping into something deeper, conway's law is just telling us that people write code where it's easy to communicate with other people
[23:08:06] <InPhase> pyzozord: Yeah.  I should take that quote and put it in the header of the forked versons of my organization's event processing pipeline, which reflects the organizational labor division rather than sensible engineering design.
[23:08:06] *** Quits: Chewt (~hayden@2601:1c0:8101:7310::5ae3) (Quit: WeeChat 3.1)
[23:08:46] <kosek> Im into you
[23:09:11] <pyzozord> InPhase: I'm very glad to have a relatively young (so hopeful, well intending and not jaded) CTO who seems to be well aware of Conway's Law :)
[23:09:11] <kosek> yes I mean Y O U
[23:09:18] <InPhase> pyzozord: Every time we go to centralize with an engineering design, someone complains about the design being engineered and wants to have their own separate piece they can work on separately, for their own convenience, without having to coordinate.
[23:09:36] <InPhase> pyzozord: And then repeat across the decades.
[23:10:44] *** Quits: inom (~inom@176.59.102.225) (Ping timeout: 252 seconds)
[23:10:44] <alycidyne> pyzozord: because, from that alone, it apparently dooms any effort to deploy or spread an OS with an explicit architecture. Because businesses do not want to have their roles externally defined.
[23:10:52] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[23:11:11] <pyzozord> yeah :D Well in general I think human communication is waaay more difficult then people give it credit. It hard labor. Repeating the same thing over many times in new ways, being patient, and doing your best to try to understand the other side. Our flappy organs are not the best thought transmitters :D
[23:11:19] <kosek> software developer need to feel fire under (_/_) otherweiss they start to be lazy thats why mobbing is a good way for more efficient
[23:11:50] *** Joins: chemiker (~xarch@ip5f5a05e1.dynamic.kabel-deutschland.de)
[23:12:18] <kosek> whip worked always well
[23:12:27] <pyzozord> kosek: not all software developers. Some have something that is called "intrisic motivation". But they usually have much trouble communicating with the vast rest who doesn't have it
[23:12:56] <kosek> ofc
[23:13:10] <alycidyne> Well... back to my ice castle, then.
[23:13:17] <pyzozord> alycidyne: I'm sorry, your question seems very interesting, but I don't think I know enough to help out
[23:13:47] <alycidyne> pyzozord: no worries, I was more kind of testing it as a hypothesis
[23:14:06] <alycidyne> trying to see what counter examples would appear
[23:14:09] <paulo_> what's mobbing?
[23:15:04] <kosek> leading with iron hand
[23:15:04] *** Joins: swn (~sweeney@c-73-253-42-20.hsd1.ct.comcast.net)
[23:15:11] <alycidyne> pyzozord: and I said "ice castle" to refer to my laptop, i.e. where my creations will never be abused...
[23:15:28] <pyzozord> paulo_: I thin he meant, it's like pair programming, but it's not two programmers, it's many https://en.wikipedia.org/wiki/Mob_programming
[23:15:33] * alycidyne looks at BSD Unix
[23:15:40] <kosek> no delays
[23:15:50] <kosek> etc
[23:16:01] <kosek> noooo
[23:16:07] <alycidyne> pyzozord: s/abused/distorted/
[23:16:47] <kosek> I'm a friend of monarchy
[23:17:31] <kosek> in return, no one complains about the income
[23:18:45] <kosek> but this was in past today Im retire with 32
[23:18:54] <kosek> and enjoy life
[23:19:28] *** Quits: soapsudsxx (~soapsudsx@209.221.40.138) (Remote host closed the connection)
[23:19:32] <kosek> working on shit I like and no on shit I have
[23:19:32] <alycidyne> Ugh, I don't want to even imagine retirement
[23:19:42] <pyzozord> alycidyne: from my leymen perspective, I'd say that yes, conceptually operating systems role is to define and enforce responsibilities, and privilages for programs so that they can run and do it together harmoniously
[23:19:50] <kosek> alycidyne: why =
[23:19:57] <kosek> ?
[23:20:40] <alycidyne> kosek: well, depends on what you call retirement, but if it's leisure, no. Leisure never satisfied me.
[23:20:52] *** Joins: cajiga (~john@2601:85:280:f700:1058:cef1:9aa8:cbe1)
[23:21:05] *** Joins: soapsudsxx (~soapsudsx@209.221.40.138)
[23:21:20] <alycidyne> pyzozord: uh the role of an operating system is to operate the computer
[23:22:11] <alycidyne> it may not define responsibilities at all (i.e. no architecture)
[23:22:30] *** Joins: audiocat (~audio@2603-8081-1800-00ad-e450-fa91-465b-f753.res6.spectrum.com)
[23:23:09] <alycidyne> pyzozord: defining and enforcing responsibilities is the job of an architecture - which a program need not even document
[23:23:32] *** Quits: ayenet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[23:23:37] *** Joins: inom__ (~inom@176.59.102.225)
[23:23:38] <alycidyne> remember, people are inconsistent and forgetful, and many don't even follow patterns - or if they do, they don't build them
[23:23:52] <pyzozord> alycidyne: I meant it very broadly, as in for example part of the responsibility of a linux application is to conform to linux abi
[23:23:55] *** Joins: ayenet4 (~0x100@32.211.211.39)
[23:24:14] <alycidyne> A pattern is something unnatural - it requires memory, which, as we see, is not always necessary in nature
[23:25:18] <alycidyne> Ergo architecture is the exception, not the rule. *sigh*
[23:25:24] *** Quits: chemiker (~xarch@ip5f5a05e1.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[23:25:31] *** Joins: ITD4004 (~ITD4004@187.61.233.248)
[23:28:21] *** Joins: Pickchea (~private@user/pickchea)
[23:28:53] *** __jmcantrell__ is now known as jmcantrell
[23:29:30] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[23:30:04] <alycidyne> Maybe I can subvert industry decision making in some way...
[23:30:32] * alycidyne wonders about making friendships with managers.
[23:30:45] <alycidyne> Or CTOs?
[23:32:37] *** Quits: web-22 (~web-22@2409:8a0c:9e10:4d56:408b:2979:3b4f:3a66) (Ping timeout: 246 seconds)
[23:33:22] *** Joins: src (~src@user/src)
[23:36:21] <alycidyne> InPhase: I had meant to ask earlier - what does your organization do, if it's not classified?
[23:37:31] *** Joins: Ecophobia (~Ecophobia@mobile-access-bcee54-61.dhcp.inet.fi)
[23:38:40] *** Quits: Ecophobia (~Ecophobia@mobile-access-bcee54-61.dhcp.inet.fi) (Remote host closed the connection)
[23:39:26] <user51> https://upload.wikimedia.org/wikipedia/commons/thumb/9/94/DFA_example_multiplies_of_3.svg/1920px-DFA_example_multiplies_of_3.svg.png
[23:40:07] <user51> i'm assuming the start symbol here is sigma (empty string, so it happens automatically) but is EOF implicitly assumed to be handled?
[23:40:28] <GeDaMo> S0 is the start and end state
[23:42:12] <alycidyne> pyzozord: you know what's most depressing? Conway's law was stated in 1968
[23:43:00] *** Quits: kosek (~kosek@158.255.211.151) (Quit: WeeChat 2.3)
[23:43:02] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 265 seconds)
[23:43:31] <user51> maybe this is better wording: i'm just not sure how symbols like newline and EOF would be handled in that dfa
[23:43:47] <GeDaMo> They're not
[23:43:55] <GeDaMo> It only handles 0 and 1
[23:45:58] *** Joins: recursiveNode (~recursive@ip-86-49-255-142.net.upcbroadband.cz)
[23:46:40] <recursiveNode> after many years, I've learned why not to use wikipedia. The reason was not clear until now, so I used it for many years. Do you use wikipedia?
[23:47:07] <GeDaMo> Frequently
[23:47:09] <ayenet4> yes
[23:47:46] <alycidyne> Not without cross-referencing at times ofc
[23:47:48] <user51> so theoretically speaking, if that dfa was a binary i could run, it would fail if i pipe multiples of 3 in binary to it, but if i delete the newlines the string would be accepted?
[23:48:40] <GeDaMo> The executable could be written to ignore any character that wasn't a 0 or a 1
[23:49:30] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[23:50:27] *** Quits: c705 (c705@alpine/contributor/c705) (Quit: Hello! And... good-bye!)
[23:51:40] *** Quits: alycidyne (~kova@91-160-172-214.subs.proxad.net) (Quit: leaving)
[23:52:47] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[23:52:57] <pavonia> recursiveNode: What is the reason?
[23:55:50] *** Quits: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 255 seconds)
[23:55:58] <recursiveNode> pavelow The reason is you might want to do research. In that case, instead of looking up accurate information from peer-reviewed journals, like seminal papers that are extremely scrutinized by experts from the field. Instead of those, you will be reading generally agreeable text from wikipedia. From that text, you cannot accurately do research because it is far from the original research papers. As a result, you miss
[23:55:58] <recursiveNode> the actual peer-reviewed definitions of concepts, and you miss the peer-reviewed "what,how,why,etc." of the subjects. While wikipedia explanations are agreeable, they do not lead to understanding concepts very well. Only research papers create that deep, expert understanding. (I've learned this experimentally)
[23:56:35] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 252 seconds)
[23:56:52] *** Quits: silverwhitefish (~hidden@47.202.102.10) (Read error: Connection reset by peer)
[23:57:15] *** Joins: silverwhitefish (~hidden@47.202.102.10)
[23:58:38] <recursiveNode> pavelow now, instead of wikipedia, from today I'm using strictly scholar.google.com to find definitions of concepts from peer-reviewed journals that are scrutinized by experts from the field, and that contain seminal papers explaining the what, how & why 1st hand without narration, using the exact, precise language.
[23:59:46] *** Lemniscate is now known as Sauvin
