[00:19:15] <TinoDidriksen> yolo, cmake --build -j ... see https://stackoverflow.com/a/50883540/145919
[00:19:38] <TinoDidriksen> Works with all generators that are capable of parallel builds.
[00:20:00] <xkoncek> i remember having to compute logarithms then invoking glGenerateMipmap
[00:20:09] <xkoncek> *when
[00:32:40] *** Quits: cart_man (~rynot@host-78-144-125-216.as13285.net) (Quit: Konversation terminated!)
[00:34:41] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:45:20] <johnny> PJBoy, which disto are you on?
[00:45:26] <PJBoy> windows
[00:45:40] <PJBoy> unless this was in reference to that python comment
[00:45:42] <LordKalma> if only it was possible to quotegrab two messages
[00:45:43] <PJBoy> in which case ubuntu
[00:45:57] <johnny> which version of ubuntu?
[00:46:15] <johnny> i'm sitting here on python 3.10
[00:46:23] <PJBoy> initially it was 21.10
[00:46:28] <PJBoy> and then downgraded to 20.04
[00:46:36] <PJBoy> it was kinda sad for me
[00:46:58] <LordKalma> LTS is nice for enterprise
[00:47:09] <PJBoy> I could get new python, it was the old python that I was suffering from installing
[00:47:09] <johnny> why did you have to downgrade?
[00:47:13] <johnny> ah
[00:47:19] <johnny> why did you ned an older python?
[00:47:42] <PJBoy> old python library that uses async as a non-keyword
[00:48:10] <PJBoy> I need to replace that dependency at some point
[00:48:11] <LordKalma> speaking of linux
[00:48:19] <PJBoy> but it'll take some major rewriting to do so
[00:48:35] <LordKalma> so, i've only heard about alpine linux because it ships with some docker images
[00:48:38] <LordKalma> so it's linux without GNU?
[00:48:45] <johnny> interestingly fedora keeps older versions of python around for users, but no devs can depend on them. but not as old as 3.5
[00:49:10] <johnny> python 3.6+ are all available
[00:49:18] <PJBoy> I had a go at compiling that python from source
[00:49:23] <PJBoy> and make segfaulted
[00:49:52] <johnny> LordKalma, i thought it was more like without glibc, rather than without gnu. i never looked at the tooling side
[00:50:01] <PJBoy> and the deadmouse ppa or whatever it was called didn't work out on 21.x
[00:50:08] <LordKalma> it uses busybox, so, idk..
[00:50:14] <johnny> ah then you're probably right
[00:51:17] <johnny> one day i'll replace the c based coreutils with the rust based ones and see what happens
[00:51:31] <LordKalma> also, musl-libc... what compiler do you use with that?
[00:51:43] <johnny> you can link about musl with gcc just fine iirc
[00:51:53] <LordKalma> gcc is gnu :p
[00:51:56] <johnny> so?
[00:51:57] <LordKalma> what do you use on alpine? :p
[00:52:09] <johnny> you can install gcc iirc
[00:52:29] <LordKalma> I'm just curious if it's possible to go full no-GNU
[00:52:29] <johnny> alpine is more about keeping te runtime environment small than the dev env
[00:52:58] <johnny> well the kernel can be compiled with clang to some degree now. and openmandriva compiles everything they can with clang
[00:53:18] <johnny> so that plus with alpine does, means at least.. mostly :)
[00:53:21] <TinoDidriksen> The GNU userland is so damn useful, though. So many great non-Posix options.
[00:53:38] <johnny> well the rusty coreutils help with part of that
[00:53:45] <johnny> although not sed and others
[00:54:11] <LordKalma> what's a userland?
[00:54:29] <TinoDidriksen> Coreutils and others. The small tools everyone expects to exist.
[00:54:39] <johnny> simply put.. the parts that get interacted with by you or your programs
[00:55:00] <xkoncek> for example `find`
[00:55:03] <LordKalma> cat, ls, tail?
[00:55:09] <johnny> yes
[00:55:11] <TinoDidriksen> Yeah, things like that.
[00:55:42] <johnny> remember gnu os is/was a thing  not just gnu/linux
[00:56:03] <xkoncek> i would rather pay a few MBs of storage for the convenience of debugging and availability of GNU utils
[00:56:20] <LordKalma> With what kernel?
[00:56:21] <johnny> sure, but you migh be doing unikernels or somehting where you don't need all that
[00:56:24] <johnny> gnu hurd
[00:56:41] <LordKalma> xkoncek: i never get the alpine version of docker images, bah
[00:56:43] <johnny> of course it's x86 only (still), but it does actually run stuff on the appropriate hardware
[00:57:00] <LordKalma> They are slower and the moment python needs to build something from source you're fucked
[00:57:03] <xkoncek> LordKalma quite a lot of available dockr images are based on alpine tho
[00:57:09] <johnny> indeed they are
[00:57:18] <LordKalma> Usually you have the option
[00:57:23] <LordKalma> On the popular things
[00:57:55] <xkoncek> i think i wanted a minecraft server but ended up building my own image on Fedora
[00:58:36] <johnny> as an aside.. i'm pretty impressed by minecraft's staying power
[00:58:53] <LordKalma> On the python/node/nginx stack I'm building I have chosen debian for all 3
[00:59:07] <johnny> ever tried to build nginx from source.. it's weird
[00:59:09] * imMute is impressed by how much horsepower the minecraft dedicated server needs  >.<
[00:59:24] <imMute> johnny: yep, many times.  what's weird about it?
[00:59:34] <LordKalma> imMute:
[00:59:36] <johnny> the standard ./configure options are weird
[00:59:42] <LordKalma> imMute: its java...
[00:59:45] <johnny> did they ever make it possible to have a headers only package to build modules against?
[01:00:02] <johnny> last i checked you still needed the source
[01:00:25] <johnny> i moved to caddy for my personal stuff over nginx
[01:00:32] <imMute> johnny: ah, that I don't know.  I just stuck the source for all the modules I needed in the main install (as that's how debian had it setup already)
[01:00:48] <johnny> imMute, then i'm guessing the answer is still no :)
[01:01:12] <LordKalma> Fortunaly I only need mod_uwsgi haha
[01:01:22] <LordKalma> Which comes with the default docker bundle
[01:04:40] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:05:22] *** Quits: winning-luser (~wl@2601:8c1:80:70d0::414b) (Quit: Leaving)
[01:05:48] *** Quits: The_Jag (~The_Jag@host-79-52-45-220.retail.telecomitalia.it) (Quit: The_Jag)
[01:06:00] <ashafq> Probably not the right channel to ask, but does Ryzen has something like TurboBoost?
[01:06:15] <PJBoy> BSD has managed to stave off the vast majority of gnu
[01:06:46] <xkoncek> does Apple contribute anything to BSD?
[01:06:56] <kalven> ashafq: yes
[01:07:02] <xkoncek> afaik they have some investment in clang
[01:08:20] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[01:09:03] <PJBoy> openbsd website says "For historical reasons, the OpenBSD base system still includes the following GPL-licensed components: the GNU compiler collection (GCC) with supporting binutils and libraries, GNU CVS, GNU texinfo, the mkhybrid file system creation tool, and the readline library. Replacement by equivalent, more freely licensed tools is a long-term desideratum."
[01:09:15] <kalven> xkoncek: apple started clang
[01:10:00] *** Quits: magla (~gelignite@55d4d852.access.ecotel.net) (Quit: Stay safe!)
[01:10:05] <ashafq> kalven: Are there ways to turn it off for benchmarking?
[01:11:38] <ashafq> kalven: the problem is there are two functions that I am benchmarking. If I swap the order of the benchmark, I get completely different results.
[01:12:08] *** Quits: RazielXYZ (~Raziel@user/raziel) (Read error: Connection reset by peer)
[01:12:30] <kalven> https://askubuntu.com/questions/1294142/disabling-amds-equivalent-on-a-zen-1-epyc-of-intels-turbo-boost-at-runtime
[01:12:31] <ashafq> If the order is A, B, then benchmark states they are same. But B, A makes B run twice as faster.
[01:13:03] <ashafq> is that due to turboboost, that is probably the first question I should've asked.
[01:27:08] *** Quits: robod34 (Username@79.113.195.239) (Quit: Goe offline! ( http://marius.sucan.ro/ ))
[01:40:27] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:40:37] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:40:37] *** ChanServ sets mode: +v npaperbot
[01:48:33] *** Quits: woggle (~charles@c-va-26578d734e-1840-1.tingfiber.com) (Ping timeout: 268 seconds)
[01:49:57] *** Quits: Simplar (~Simplar@188.163.93.76) (Quit: Going offline, see ya! (www.adiirc.com))
[01:58:42] *** xisop_ is now known as xisop
[02:00:51] *** Joins: woggle (~charles@c-va-26578d734e-1840-1.tingfiber.com)
[02:01:26] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[02:04:13] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 256 seconds)
[02:07:32] *** Joins: bobb_ (~bobb_@dslb-088-065-176-249.088.065.pools.vodafone-ip.de)
[02:14:36] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[02:20:57] *** Joins: rackj (~rackj@c-73-140-240-136.hsd1.wa.comcast.net)
[02:23:51] <LordKalma> ashafq, "Precision Boost", XFR and "Precision Boost Overdrive"
[02:24:37] <LordKalma> ashafq, if nothing else, you can pin the frequency in the BIOS
[02:26:30] *** Joins: rond_ (~rond_@2a01:115f:943:5e00:fd3e:9189:6c2:6793)
[02:31:08] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[02:33:13] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[02:36:57] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:f8a4:6db7:261b:aef9)
[02:42:12] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:f8a4:6db7:261b:aef9) (Ping timeout: 268 seconds)
[02:43:10] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[02:45:33] *** Quits: rond_ (~rond_@2a01:115f:943:5e00:fd3e:9189:6c2:6793) (Quit: Client closed)
[02:46:23] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[02:51:33] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:08:47] *** Joins: mike18_ (~geri@71-220-52-187.mpls.qwest.net)
[03:08:50] <mike18_> re
[03:11:55] <mike18_> hi question to https://ideone.com/h7SS4D ... what happens if line 115 is i+1 instead index+1? https://ideone.com/h7SS4D
[03:12:39] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:1449:5971:863:633c)
[03:14:16] *** Quits: Tokamak (~Tokamak@172.58.191.63) (Ping timeout: 268 seconds)
[03:19:14] *** Joins: peeps (~peepsalot@openscad/peepsalot)
[03:20:28] *** Quits: rackj (~rackj@c-73-140-240-136.hsd1.wa.comcast.net) (Quit: Client closed)
[03:21:42] *** Quits: peeps[zen] (~peepsalot@openscad/peepsalot) (Ping timeout: 260 seconds)
[03:32:30] *** Quits: bobb_ (~bobb_@dslb-088-065-176-249.088.065.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[03:36:55] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[03:42:11] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:6dc4:e68d:fe69:c13f)
[03:51:50] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[04:00:21] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.4)
[04:00:30] <very_sneaky> oof, yeah i should start paying closer attention to licenses
[04:05:55] <very_sneaky> mike18_: completely different things - looks like `index` doesn't change throughout the loop and represents the size of the string (number of chars), whereas `i` will start at 0 and increment each loop
[04:06:53] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[04:07:20] <mike18_> very_sneaky: i alway mess up those indices....
[04:07:23] <mike18_> how to remember?
[04:07:35] <very_sneaky> how to remember what?
[04:07:52] <mike18_> if to use i+1 or index+1
[04:08:34] <very_sneaky> even better, you could use a range based loop and name them something meaningful
[04:08:59] <very_sneaky> the way it's been used here i think is ambiguous - index is poorly named
[04:09:09] <very_sneaky> `i` is pretty universally understood as iteration index
[04:12:08] <mike18_> very_sneaky: or here: the recursion uses i+1: https://ideone.com/nXRPXl
[04:13:08] <very_sneaky> mike18_: in both of the cases you've shown me, index is an input to the function and has nothing to do with the iteration
[04:13:38] <mike18_> combinationSum2 uses i+1 from that loop
[04:13:50] <mike18_> whereas the prev example uses index+1 from the outside function
[04:14:06] <very_sneaky> they're calling different functions?
[04:14:09] <cbreak> people really should stop using signed int ... https://arstechnica.com/information-technology/2022/01/exchange-server-bug-gets-a-fix-after-ruining-admins-new-years-plans/
[04:15:12] <very_sneaky> mike18_: you have to look at the function signature of the function being called to work out what data needs to be passed to it. In the initial example it obviously required the length of the string + 1, in the second case it looks like it needs the next iteration index
[04:19:30] *** Joins: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net)
[04:19:41] *** Quits: rayw_ (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net) (Read error: Connection reset by peer)
[04:20:07] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Remote host closed the connection)
[04:21:58] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[04:25:27] *** Quits: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de) (Remote host closed the connection)
[04:37:36] *** Joins: ferdna (~ferdna@user/ferdna)
[04:38:48] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[04:40:21] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:6dc4:e68d:fe69:c13f) (Quit: Quit)
[04:42:12] <InPhase> cbreak: Oof.  Seriously.
[04:42:47] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[04:51:07] *** Joins: malloy (~jimery@116.30.220.175)
[05:01:02] *** Quits: biberu (~biberu@user/biberu) (Read error: Connection reset by peer)
[05:02:25] *** Joins: biberu (~biberu@user/biberu)
[05:03:17] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[05:15:22] *** Quits: malloy (~jimery@116.30.220.175) (Ping timeout: 250 seconds)
[05:15:44] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:17:28] *** Joins: malloy (~jimery@116.30.220.175)
[05:27:39] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 256 seconds)
[05:28:04] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[05:40:28] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:40:36] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:40:36] *** ChanServ sets mode: +v npaperbot
[05:48:03] *** Joins: Burgundy (~yomon@5-12-10-45.residential.rdsnet.ro)
[05:56:13] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[05:57:33] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 256 seconds)
[05:57:50] *** Quits: malloy (~jimery@116.30.220.175) (Ping timeout: 250 seconds)
[05:59:50] *** Joins: malloy (~jimery@116.30.220.175)
[06:02:38] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:6dc4:e68d:fe69:c13f)
[06:07:01] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 240 seconds)
[06:10:09] *** Quits: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net) (Ping timeout: 256 seconds)
[06:12:06] *** Quits: john99 (~john99@199.246.103.34.bc.googleusercontent.com) (Quit: Client closed)
[06:18:03] *** Joins: evocatus (~evocatus@62.182.77.224)
[06:20:37] <malloy> hello, shall we prefer boost::filesystem to std::filesystem ?
[06:21:41] <johnny> malloy, why?
[06:22:02] *** Quits: danielrparks (~quassel@2600:1700:3f7b:20f:9cc:dd59:e257:1efa) (Remote host closed the connection)
[06:23:11] <malloy> johnny:  i don't know, some people says std::filesystem has some unfinished jobs. so i come here to ask you
[06:23:18] *** Joins: danielrparks (~quassel@2600:1700:3f7b:20f:8382:b32a:bfe7:21b8)
[06:23:57] <johnny> i just used std::filesystem . i didn't notice anything missing for me. but if the missing stuff matters to you, then use the boost version
[06:24:59] <johnny> although to be fair to your question malloy . if there was a missing feature that wasn't too big, i'd probably do it myself rather than bringing in boost
[06:25:18] <johnny> i generally try to avoid boost because it's too a lot of code for little value (to me)
[06:25:35] <johnny> if you alreayd rely on boost though, that won't matter to you
[06:26:18] <malloy> johnny:  ok
[06:27:17] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 240 seconds)
[06:27:39] <johnny> malloy, and of course one must consider your C++ standard your project relies on, and whether you rely on compilers new enough to include it in the fist place.  I can make that requirement, but maybe your project can't. so it depends no that as well
[06:28:37] <johnny> sometimes it might even mean you need to include it from experimental/ or even perhaps pass a separate flag to link it like in early clang versions
[06:30:11] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[06:48:47] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[06:55:17] *** ezzieygu1wuf is now known as ezzieyguywuf
[07:08:27] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[07:12:39] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Read error: Connection reset by peer)
[07:15:11] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[07:15:28] *** Joins: cvitak (~cvitak@83-245-250-171-nat-p.elisa-mobile.fi)
[07:15:44] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[07:24:28] *** Joins: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de)
[07:28:20] *** Joins: adeliktas1 (~adeliktas@i59F5F686.versanet.de)
[07:28:37] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 240 seconds)
[07:29:02] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[07:30:37] *** Quits: adeliktas (~adeliktas@i59F52F7D.versanet.de) (Ping timeout: 256 seconds)
[07:30:37] *** adeliktas1 is now known as adeliktas
[07:44:23] *** Quits: mike18_ (~geri@71-220-52-187.mpls.qwest.net) (Remote host closed the connection)
[07:46:43] *** Quits: evocatus (~evocatus@62.182.77.224) (Quit: Leaving)
[07:48:42] <kalven> re-watching this classic: https://www.youtube.com/watch?v=rX0ItVEVjHc
[07:55:05] *** Quits: smeso (~smeso@user/smeso) (Quit: smeso)
[07:58:37] *** Quits: jsbach (~jsbach@2a01:c23:6441:8000:d454:d36d:3779:f890) (Ping timeout: 240 seconds)
[08:00:53] *** Joins: smeso (~smeso@user/smeso)
[08:05:14] *** Quits: DSpider (DSpider@2a02:2f00:1ff:ffff::646c:67d9) (Quit: Leaving)
[08:12:06] *** Joins: jsbach (~jsbach@2a01:c22:ad5e:8f00:fe26:e2d0:801a:dcba)
[08:12:19] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Remote host closed the connection)
[08:12:46] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[08:15:05] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[08:21:16] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[08:24:45] *** Joins: seninha (~seninha@user/seninha)
[08:28:51] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 256 seconds)
[08:29:16] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[08:34:45] *** Quits: teepee (~teepee@openscad/teepee) (Ping timeout: 276 seconds)
[08:35:17] *** Quits: cvitak (~cvitak@83-245-250-171-nat-p.elisa-mobile.fi) (Ping timeout: 240 seconds)
[08:35:38] *** Joins: teepee (~teepee@openscad/teepee)
[08:39:50] *** Joins: tesuji (~quassel@2a02:908:180:9500:a026:587a:2a4d:f3c)
[08:47:16] *** Quits: malloy (~jimery@116.30.220.175) (Ping timeout: 250 seconds)
[08:49:21] *** Joins: malloy (~jimery@116.30.220.175)
[08:49:56] *** Quits: pulse (~pulse@user/pulse) (Quit: Join a gamedev community @ https://indiedevs.net/)
[08:50:10] <malloy> johnny: thanks
[09:20:39] *** Quits: rajkosto (~rajkosto@178-221-253-235.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[09:27:22] *** Quits: HvszrStykp (~X@81.171.62.86) (Ping timeout: 268 seconds)
[09:30:03] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 256 seconds)
[09:30:28] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[09:33:45] <p-i-> Yessss! I found a dev who nailed the websockets task in 6h. Sometimes it's better economy to just accept a loss and start from scratch.
[09:40:28] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:40:37] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:40:37] *** ChanServ sets mode: +v npaperbot
[10:02:30] <very_sneaky> p-i-: did they use the same lib you were using?
[10:11:50] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:17:01] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 240 seconds)
[10:25:54] *** Quits: tesuji (~quassel@2a02:908:180:9500:a026:587a:2a4d:f3c) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[10:49:42] *** Quits: ville (~ville@82-181-178-111.bb.dnainternet.fi) (Quit: ville)
[11:01:04] *** Joins: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net)
[11:01:21] *** Joins: ville (~ville@82-181-178-111.bb.dnainternet.fi)
[11:09:43] <ville> kalven: this may be of interest then as well: https://media.handmade-seattle.com/practical-data-oriented-design/
[11:10:51] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 250 seconds)
[11:15:52] *** Joins: namo (~nomo@95.87.208.95)
[11:20:28] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:22:53] <kalven> that does look interesting, thanks!
[11:22:58] <kalven> that's the zig guy, right?
[11:23:09] <ville> yes, he is the main guy there
[11:26:38] *** Joins: asen (~asen@2408:821a:618:1300:a3e4:7e9a:23b7:bba4)
[11:27:54] *** Quits: asen (~asen@2408:821a:618:1300:a3e4:7e9a:23b7:bba4) (Client Quit)
[11:32:41] *** Joins: HvszrStykp (~X@81.171.62.86)
[11:33:13] *** Quits: ville (~ville@82-181-178-111.bb.dnainternet.fi) (Changing host)
[11:33:13] *** Joins: ville (~ville@user/ville)
[11:44:07] *** Joins: cart_man (~rynot@host-78-144-125-216.as13285.net)
[11:47:31] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Quit: WeeChat 3.3)
[11:49:37] *** Quits: jsbach (~jsbach@2a01:c22:ad5e:8f00:fe26:e2d0:801a:dcba) (Ping timeout: 240 seconds)
[11:56:34] <LordKalma> !fact
[11:56:35] <nolyc> LordKalma: Each enumeration also has an underlying type.
[11:57:46] <LordKalma> {E a; cout << typeid().name();} enum E{c,d,f};
[11:57:46] <geordi> error: expected primary-expression before ')' token
[11:57:56] <LordKalma> {E a; cout << typeid(a).name();} enum E{c,d,f};
[11:57:57] <geordi> E
[11:58:03] <LordKalma> interesting
[12:00:54] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[12:01:13] <ville> perhap look at std::underlying_type in this case
[12:03:05] <LordKalma> {cout << typeid(underlying_type_t<E>).name();} enum E{c,d,f};
[12:03:05] <geordi> unsigned int
[12:21:16] *** Joins: robod34 (Username@79.113.195.239)
[12:23:40] <p-i-> very_sneaky: No, they used Boost's websocket lib
[12:24:12] <p-i-> I don't know if this has any performance overhead / latency over libwebsockets
[12:24:51] *** Quits: p-i- (~Ohmu@180.183.72.66) (Quit: Leaving...)
[12:25:10] *** Joins: p-i- (~Ohmu@2403:6200:8978:6ebd:d904:b477:8a7f:db46)
[12:25:57] *** Quits: cart_man (~rynot@host-78-144-125-216.as13285.net) (Quit: Konversation terminated!)
[12:26:18] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[12:31:19] *** Quits: tinloaf (~tinloaf@2a03:94e0:163c:57e:bc51:5c66:86e7:1) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[12:32:00] *** Joins: Guest8100 (~tinloaf@2a03:94e0:163c:57e:bc51:5c66:86e7:1)
[12:36:18] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[12:40:16] *** Quits: chozorho1 (~chozorho@2601:146:300:c30::9e95) (Quit: stay safe)
[12:51:56] *** Joins: plastico (~plastico@neomutt/plastico)
[12:52:17] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[13:11:52] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[13:17:29] *** Joins: kaph_ (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[13:19:37] *** Quits: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Ping timeout: 240 seconds)
[13:26:43] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:6dc4:e68d:fe69:c13f) (Quit: Quit)
[13:31:50] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:32:33] <Haohmaru> !rq
[13:32:33] <nolyc> Haohmaru: <LordKalma> C++ programmers wanted. Must be CV-qualified
[13:33:29] <Haohmaru> never disrespect the CV-qualifiers
[13:34:12] *** Quits: PJBoy (~PJBoy@user/pjboy) (Killed (strontium.libera.chat (Nickname regained by services)))
[13:34:17] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:38:35] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:40:29] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:40:40] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:40:40] *** ChanServ sets mode: +v npaperbot
[13:50:21] *** Joins: xkuru (~xkuru@user/xkuru)
[13:57:46] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[13:58:37] *** Joins: peeps[zen] (~peepsalot@openscad/peepsalot)
[13:58:47] *** Quits: kaph_ (~kaph@net-2-38-107-19.cust.vodafonedsl.it) (Ping timeout: 256 seconds)
[13:59:21] *** Quits: peeps (~peepsalot@openscad/peepsalot) (Ping timeout: 256 seconds)
[13:59:54] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[14:04:51] *** Joins: gargus (~user@14-201-142-45.static.tpgi.com.au)
[14:07:13] *** Joins: frost (~frost@user/frost)
[14:07:38] *** Joins: bobb_ (~bobb_@dslb-088-065-184-211.088.065.pools.vodafone-ip.de)
[14:16:37] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[14:23:50] *** Joins: kaph (~kaph@net-2-38-107-19.cust.vodafonedsl.it)
[14:37:27] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Ping timeout: 276 seconds)
[14:38:36] *** Joins: jsbach (~jsbach@46.183.103.8)
[14:39:56] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[14:44:32] *** Joins: AmR (~AmREiSa@156.199.20.227)
[14:49:45] <AmR> I need some help for database file identifier, Can I have that help here ?
[14:50:35] <Haohmaru> ask the actual question and we'll see
[14:51:16] <TinoDidriksen> Don't ask to ask - just ask the question, and either you'll get an answer or we'll see if we can direct to someone that may know.
[14:51:55] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[14:51:56] <Haohmaru> std::god knows everything ;P~
[14:52:04] <LordKalma> !std::god
[14:52:05] <nolyc> LordKalma: Error: "std::god" is not a valid command.
[14:53:05] <AmR> the db file https://file.io/TgwcsweTpnCS
[14:53:52] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[14:57:40] <TinoDidriksen> Huh, good question. It's not a well-known format - libmagic doesn't recognize it. But it looks easy to parse.
[15:02:42] <PJBoy> tfw deleted
[15:03:52] <PJBoy> libmagic looks fun though, TIL
[15:04:04] <TinoDidriksen> libmagic is the library behind "file"
[15:05:34] <PJBoy> oh right
[15:05:43] <PJBoy> I thought file was some basic gnu tool
[15:06:25] <PJBoy> I didn't know it could magically determine file formats
[15:10:03] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 256 seconds)
[15:10:28] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[15:16:57] *** Quits: jsbach (~jsbach@46.183.103.8) (Ping timeout: 240 seconds)
[15:18:04] *** Joins: DSpider (~DSpider@82.79.237.5)
[15:21:42] <TinoDidriksen> For reference, the file looks like this hexdumped: http://sprunge.us/83ZSql first 500 lines, http://sprunge.us/rvephg last 500 lines - so looks like a pretty simple record format with trailing init data.
[15:24:44] <AmR> I will try parse it But I don't get it's parse key now.
[15:27:57] *** Joins: ravan_ (~ravan@user/ravan)
[15:32:17] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 256 seconds)
[15:33:18] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[15:37:35] <LordKalma> can we see the original file again?
[15:38:28] <johnny> PJBoy, it uses a combination of signatures from filetypes plus some other heuristics like say an extension or the first X characters to decide what it is
[15:39:03] *** Quits: p-i- (~Ohmu@2403:6200:8978:6ebd:d904:b477:8a7f:db46) (Remote host closed the connection)
[15:39:29] <johnny> although sometimes still you end up with something like "ASCII with very long lines"  (i can't remember the exact message)
[15:40:01] <johnny> i'm having a play with kaitai struct rather than writing a parser for a binary file format myself
[15:40:34] <johnny> it's not so easy to do with the files i've talked about before here, but these are more like databases rather than programs
[15:49:07] *** Joins: supernova (~quassel@2405:9800:ba11:6207:ec5a:322d:47ae:cab)
[15:50:03] <supernova> guys, is it possible to use ostream operator with two const Array Inside? Stable: friend std::ostream &operator<<( std::ostream &, const Array & ); Need: friend std::ostream &operator<<( std::ostream &, const Array & , const Array &)
[15:50:03] <supernova> Reason: Overload two dimensional Array
[15:51:11] *** Joins: seninha (~seninha@user/seninha)
[15:52:01] <bobb_> supernova check the signatures https://en.cppreference.com/w/cpp/io/basic_ostream/operator_ltlt
[15:52:04] *** Quits: unyu (~pyon@user/pyon) (Quit: WeeChat 3.3)
[15:52:39] <TinoDidriksen> op<< is binary. If you want to output 2 items, just call << twice.
[15:57:23] *** Joins: tsujp84 (~tsujp@sourcehut/user/tsujp)
[15:57:44] <tsujp84> can i have the prototype for my struct declared in a header file and then implemented in a cpp file?
[15:59:50] <supernova> Yes, but i dont know how to take this arguments
[16:00:18] <supernova> if i amend ostream operator to have two arguments it throws error
[16:00:19] <supernova> https://wandbox.org/permlink/8aN3gGm2pPQM5bOG
[16:00:30] <TinoDidriksen> You don't take 2 Array. You call << Array1 << Array2
[16:00:50] <TinoDidriksen> op<< can only take 2 args. Not 3.
[16:01:20] <supernova> thanks! Clear
[16:02:44] <ville> tsujp84: what do you mean by "declared"?
[16:02:56] <tsujp84> the prototype
[16:03:08] <ville> tsujp84: what is "the prototype" of a struct in your opinion
[16:03:45] <AmR> LordKalma:  New Link https://easyupload.io/0pyvet
[16:04:02] <AmR> brb
[16:04:18] <cbreak> tsujp84: structs can be defined in headers, yes.
[16:04:31] <tsujp84> ville cbreak it's not liking me when i do this https://pastebin.com/raw/0PadP4hN
[16:04:33] <cbreak> you can then implement its member functions in a cpp file
[16:04:38] <tsujp84> multiple definitions of INDIRECT_DEVICE_CONTEXT
[16:04:58] <cbreak> tsujp84: you're not allowed to define things twice
[16:05:01] <cbreak> only define it once
[16:05:19] <ville> tsujp84: struct aa {}; is a definition of a class. you can only define it once.
[16:05:25] <cbreak> remove the function definition from the header
[16:05:35] <cbreak> then define that member function in a source file
[16:05:38] <ville> tsujp84: void f() {} is a definition of a function. you can only define it once.
[16:05:42] <cbreak> without trying to define the whole struct again
[16:06:14] <cbreak> tsujp84: struct X { void member(); }; .... void X::member() {};
[16:06:18] <tsujp84> remove the property from the header too? So the header is just `struct INDIRECT_DEVICE_CONTEXT;` and the .cpp is the same?
[16:06:27] <cbreak> like this.
[16:06:35] <supernova> TinoDidriksen, nice movies rating on imdb :D
[16:06:38] <tsujp84> ah okay gotcha
[16:06:41] <ville> tsujp84: that would be what's commonly called a forward declaration
[16:07:19] <ville> tsujp84: whilst useful sometimes, just having that in a header wouldn't allow other translation units that include the header know anything about the struct ohter than "it exists"
[16:07:33] <tsujp84> and is it bad practice to have "source file logic" in a header? Like, could i have the second snippet entirely in the header, including say a complicated class and actual implementations of it's methods in the header? Is that bad practice? The header is designed to only be used elsewhere not in it's own accompanying .cpp file of the same name
[16:07:47] <tsujp84> cbreak ville thanks
[16:07:50] <cbreak> depends.
[16:07:51] <ville> tsujp84: they wouldn't know the size of the struct. which is very important if you plan to make a variable of the type. nor would they know any of the memners it may or may not have
[16:08:06] <tsujp84> ville ah ok that's not good I want them to know about it's structure (hehe pun) too not just "it exists"
[16:08:28] <supernova> it throws error after i edited it to cout two arrays. I'm def-ly missing smth
[16:08:32] <cbreak> if you don't care about compile time and memory usage during compiling / linking, then you can define everything in headers
[16:08:47] <ville> tsujp84: everything depends in programming. what may be acceptable in one context may have dire consequences in another.
[16:09:28] <tsujp84> I see, perhaps in this case I will soldier on and then ask for a review later
[16:09:31] <tsujp84> Learning C++ you see
[16:09:45] <tsujp84> By writing a windows driver lol, i like doing things the hard way
[16:10:23] <ville> tsujp84: not sure how much "c++" you need for a driver in general, but whatever gets you writing something
[16:10:35] *** Joins: Roughy (~mdaw45ns@user/roughy)
[16:11:00] <tsujp84> Windows' header files have C++ only things in them
[16:11:10] *** Joins: jokoon (~jokoon@136.252.163.126)
[16:11:11] <PJBoy> do they?
[16:11:11] <tsujp84> Like structs without `typedef` which if you try and use with C throws errors
[16:11:19] <tsujp84> Well, I mean _these ones_ do
[16:11:27] <tsujp84> See: iddcx.h
[16:11:37] <ville> tsujp84: that's hardly a meaningful difference
[16:12:37] <PJBoy> I don't have that one :/
[16:12:47] <tsujp84> I spent days trying to use those headers in a C-only way
[16:12:49] <tsujp84> I can paste it, sec
[16:13:37] <PJBoy> it's probably this? https://github.com/wmliang/wdk-10/blob/master/Include/10.0.14393.0/um/iddcx/1.0/IddCx.h
[16:14:03] <tsujp84> that's a very old one it's substantially different from then
[16:14:12] <tsujp84> iirc
[16:14:17] <PJBoy> ah
[16:14:21] * PJBoy knows nothing
[16:14:31] <tsujp84> sec ill paste it into a github gist give me a min or two to find the file
[16:14:36] <ville> tsujp84: so for example just grabbing the "c++ guidelines" for some big company and blindly following them in your small project is probably not a great idea. the engineers at the big company may have even done an excellent job coming up with their rules, and if they did they did so by examining the limitations their unique circumstances impose. and those circumstances are likely quite
[16:14:38] <ville> different to yours
[16:15:00] <tsujp84> gist for iddcx.h 1.4 https://gist.github.com/tsujp/f8a54fde73fb2f9199a9239b03bd5226
[16:15:06] <jokoon> https://wandbox.org/permlink/cUTFxBqnHyfZL0n1 how would I fix such piece of code?
[16:15:46] <PJBoy> I see directx headers
[16:15:53] <PJBoy> now I *know* those are C++
[16:16:14] <tsujp84> So I couldn't at all use that via C in the case of DirectX?
[16:16:35] <tsujp84> ville roger, in this case I was just perusing random repos and saw headers that were fully implemented and was curious about any convention
[16:16:37] <tsujp84> but yeah case-by-case
[16:16:43] <PJBoy> directx is all about OO interfaces and shit
[16:17:04] <PJBoy> I don't *think* you could use C with them
[16:17:08] <tsujp84> Yeah and this is a WDF driver too which makes use of Framework Objects so I am skeptical
[16:17:30] <ville> jokoon: you need to pick the array form of unique_ptr, and use the array form of new expression
[16:18:07] <ville> jokoon: https://en.cppreference.com/w/cpp/memory/unique_ptr the (2)
[16:18:29] <PJBoy> the rest of the header is very C-esque though, so it's weird
[16:18:30] <jokoon> I fixed it like this: std::unique_ptr<int> thing (new int[]{1,2,3});
[16:18:55] <PJBoy> you don't want that
[16:18:58] <PJBoy> { std::unique_ptr<int> thing (new int[]{1,2,3}); }
[16:18:59] <geordi> error: tried to apply non-array operator delete to pointer returned by new[]. Aborted
[16:19:24] <jokoon> it works on wandbox
[16:19:43] <jokoon> oh wait
[16:19:48] <PJBoy> !give jokoon ub limerick
[16:19:49] <nolyc> jokoon: Behavior of code, you will find,\ Is not always clearly enshrined,\ In specification,\ Or implementation,\ It sometimes is right undefined!
[16:19:59] <jokoon> Like this indeed:     std::unique_ptr<int[]> thing (new int[]{1,2,3});
[16:20:08] <ville> jokoon: https://en.cppreference.com/w/cpp/language/new ...
[16:20:10] <PJBoy> that's more like it
[16:20:11] <ville> jokoon: right
[16:20:49] <ville> cppreference really should fix their system to have links to various spots
[16:20:58] <jokoon> Now i want to put this array in a vector, but this fails: std::vector<int> (thing, thing+3);
[16:21:20] <ville> jokoon: testcase
[16:21:21] <PJBoy> ville, such as?
[16:21:43] <ville> PJBoy: all the headers/chapters, lines in the code examples..
[16:21:55] <PJBoy> the chapters are linkable
[16:21:58] <LordKalma> yes, it's so annoying it doesn't have anchor tags
[16:22:04] <jokoon> https://wandbox.org/permlink/I0c52N9bkjkzQekN
[16:22:21] <PJBoy> e.g. https://en.cppreference.com/w/cpp/memory/unique_ptr#Example
[16:22:41] <LordKalma> if it does that, WHY DOESN'T IT TELL YOU
[16:22:57] <ville> jokoon: thing is a unique_ptr, the std::vector doesn't have ctor from unique_ptr
[16:22:58] <PJBoy> because life sucks
[16:23:02] <LordKalma> like every other site with an anchor symbol on hover, or even just being a <a> to itself
[16:23:06] <ville> PJBoy: it doesn't count if i can't click on it
[16:23:11] <LordKalma> ^
[16:23:32] <PJBoy> yeah I see what you mean
[16:23:39] <PJBoy> you could make a custom CSS for it
[16:23:45] <ville> i could. i won't
[16:24:01] <jokoon> So can I just access the raw pointer from unique_ptr?
[16:24:08] <ville> i rather moan about it on irc. it's pretty basic stuff
[16:24:21] <ville> jokoon: go look up its documentation...
[16:24:31] <ville> https://en.cppreference.com/w/cpp/memory/unique_ptr
[16:24:32] <PJBoy> if you had it your way, what would the clickable bit be?
[16:24:34] <jokoon> oh yes it's get
[16:24:50] <PJBoy> one of those onhover paragraph symbols?
[16:25:09] <LordKalma> usually the clickable bit is the whole chapter title
[16:25:11] <PJBoy> like the python docs
[16:25:15] <LordKalma> section title*
[16:25:18] <ville> PJBoy: either the header it self, or possibly one of those on-hover things, but certainly not dependent on javascript
[16:25:26] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[16:25:39] <LordKalma> yes, the way python docs do it is more than ok
[16:25:52] <PJBoy> would have to see if mediawiki have a thing for this
[16:26:56] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[16:27:17] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[16:28:35] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:3c47:5b36:444:8126)
[16:28:35] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:3c47:5b36:444:8126) (Changing host)
[16:28:35] *** Joins: skapata (~Skapata@user/skapata)
[16:28:49] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[16:29:16] <AmR> LordKalma:  back
[16:32:39] <tsujp84> ngl im kinda learning a lot just by reading this code, it's nice
[16:32:59] <tsujp84> i dont hate C++ as much as I thought I would (yet), im optimistic I should say
[16:33:01] <PJBoy> wow, the mediawiki folks have had a lot to say on the topic https://www.mediawiki.org/wiki/Requests_for_comment/Clickable_section_anchors
[16:33:05] <cbreak> tsujp84: careful with microsoft code, you could learn dumb crap
[16:33:07] <tsujp84> not looking for a reason to hate just.. enjoying it so far
[16:33:30] <tsujp84> cbreak bahahahah what do you have off the top of your head to watchout for?
[16:33:39] <tsujp84> i saw `auto*` being recommended and that's a hard nope for me
[16:34:23] * PJBoy agrees
[16:35:07] <cbreak> I'd recommend avoiding raw pointers if you can
[16:35:13] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:6dc4:e68d:fe69:c13f)
[16:35:37] <cbreak> tsujp84: that's the newest I've read about MS code quality: https://arstechnica.com/information-technology/2022/01/exchange-server-bug-gets-a-fix-after-ruining-admins-new-years-plans
[16:35:44] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[16:35:46] <cbreak> yes... they were dumb enough to use signed int
[16:36:03] <cbreak> ... to store "version" numbers...
[16:36:26] <cbreak> << std::numeric_limits<int>::max()
[16:36:27] <geordi> 2147483647
[16:36:45] <cbreak> and their version numbers are long.
[16:37:41] <tsujp84> that's such a microsoft thing to do
[16:38:32] <cbreak> yes.. just like hard coding checks for *9* everywhere (because of win 98 and 95), and then having to skip from 8 to 10 because of that crap.
[16:38:51] <tsujp84> LMFAO???????????????????
[16:39:52] <PJBoy> woah there
[16:40:20] <PJBoy> I'm not sure if MS actually made that blunder
[16:40:27] <PJBoy> or if it was just users depending on that behaviour
[16:40:53] <cbreak> well. Either way, it's stupid.
[16:41:01] <tsujp84> i mean they do refuse to update things in the name of legacy compatibility
[16:41:18] <tsujp84> so even if users started doing it, it's now part of microsoft's unwavering "never change it so its backwards compatible" mentality
[16:41:58] *** Parts: jokoon (~jokoon@136.252.163.126) ()
[16:42:01] <cbreak> apparently, the fix to the problem of not being able to store the new date 22.01.01 was to roll back the version number and use something like 21.12.33 or so...
[16:42:22] <cbreak> (not sure if that's true, just read that in a comment)
[16:42:33] <tsujp84> that's a good temp fix id say
[16:42:37] <tsujp84> _temp_ fix emphasis
[16:42:57] <tsujp84> probably move to a string or like unsigned, or like 64bit
[16:42:59] *** Joins: jokoon (~jokoon@136.252.163.126)
[16:43:01] <jokoon> Are there debugging exercises?
[16:43:14] <jokoon> I mean reading bad code to find problems?
[16:43:37] <Roughy> write some code, have a nap, read your code
[16:43:38] <cbreak> pick a random open source project
[16:44:08] <cbreak> many of them should have open bug tickets, and plenty of code to read
[16:51:31] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:c48f:a6ee:6684:c8b)
[16:54:51] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[16:54:55] *** Joins: aniketgm (~Aniket@49.36.107.163)
[17:05:58] *** Joins: jsbach (~jsbach@2a02:810a:1440:4cec:7792:8cc:85fa:5f72)
[17:06:21] *** Quits: jsbach (~jsbach@2a02:810a:1440:4cec:7792:8cc:85fa:5f72) (Remote host closed the connection)
[17:07:07] <PJBoy> pick notepad++
[17:08:04] *** Joins: jsbach (~jsbach@2a02:810a:1440:4cec:2ccb:9d76:6760:4ca1)
[17:08:41] *** Parts: aniketgm (~Aniket@49.36.107.163) ()
[17:10:30] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[17:20:37] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 240 seconds)
[17:20:50] <jokoon> I meant badly written code
[17:20:57] <Haohmaru> my code maybe?
[17:21:10] <Haohmaru> contributions are welcome ;P~
[17:21:30] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[17:22:06] *** Quits: gargus (~user@14-201-142-45.static.tpgi.com.au) (Quit: Leaving)
[17:22:42] *** Quits: danielrparks (~quassel@2600:1700:3f7b:20f:8382:b32a:bfe7:21b8) (Quit: No Ping reply in 180 seconds.)
[17:22:50] <PJBoy> write an implementation of https://www.sciencedirect.com/science/article/pii/0022000088900451
[17:22:57] <PJBoy> that task took me a fair whack of debugging
[17:23:28] *** Joins: pulse (~pulse@user/pulse)
[17:23:58] *** Joins: danielrparks (~quassel@2600:1700:3f7b:20f:3451:6c14:1f55:e681)
[17:24:13] <cbreak> jokoon: if you're sufficiently picky, any code is badly written
[17:24:14] <whupdup> does anyone know why gcc is giving me undefined reference to `yybegin(char const*)' when I try to compile it (ubuntu 20.04 x64 LTS, thru WSL)? I can tell that this means it can't link against bison or flex or something, but the ./configure output told me it found both of them
[17:25:58] <Haohmaru> are you using some sketchy build scripts to build it?
[17:26:16] <whupdup> I'm doing it the way the website told me
[17:26:28] <Haohmaru> huh..
[17:26:40] <whupdup> I ran ./configure --disable-multilib --enable-languages=c,c++ --enable-lto
[17:26:42] <whupdup> then make -j9
[17:26:45] <Haohmaru> what if you retry the command? ;P~
[17:26:56] <whupdup> yeha I retried configuring and making several times now
[17:27:03] <whupdup> it doesn't wanna find it
[17:27:14] <whupdup> also did a make clean
[17:27:16] <whupdup> and tried again
[17:27:29] <Haohmaru> i mean the link command in particular
[17:29:35] *** Joins: rajkosto (~rajkosto@178-221-253-235.dynamic.isp.telekom.rs)
[17:29:38] <whupdup> no idea where it is in this awful mess
[17:29:41] *** ravan_ is now known as ravan
[17:33:47] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[17:39:57] *** Joins: p-i- (~Ohmu@mx-ll-180.183.72-66.dynamic.3bb.co.th)
[17:40:29] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:40:39] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:40:39] *** ChanServ sets mode: +v npaperbot
[17:41:48] <whupdup> is there a 'compiling gcc for dummies' guide anywhere
[17:41:51] <whupdup> this is so annoying
[17:42:00] <whupdup> I also can't search for the error because it's just a generic bison linker error
[17:42:40] <PJBoy> try sudo apt-get install * -y
[17:42:56] <whupdup> installing... everything?
[17:43:04] <PJBoy> yeah
[17:43:14] <PJBoy> should solve your missing dependency
[17:44:07] *** rpav_ is now known as rpav
[17:44:15] <whupdup> that just attempted to install any library named after files in my current dir
[17:44:19] *** Quits: p-i- (~Ohmu@mx-ll-180.183.72-66.dynamic.3bb.co.th) (Ping timeout: 256 seconds)
[17:46:52] *** Quits: dextaa (~DV@user/dextaa) (Quit: Leaving)
[17:46:57] <whupdup> my current dir was gcc at least
[17:47:49] *** Joins: dextaa (~DV@user/dextaa)
[17:47:53] <Terminus> compiling for dummies would be have a program that only has a single file named `foo.cpp`, no dependencies, and you just run `make foo` assuming you have make installed.
[17:48:17] *** Quits: jsbach (~jsbach@2a02:810a:1440:4cec:2ccb:9d76:6760:4ca1) (Ping timeout: 240 seconds)
[17:49:46] <jokoon> Can't I see the content of a unique_ptr in visual studio?
[17:49:52] <jokoon> while debugging?
[17:50:08] <PJBoy> you can, albeit with some typing required
[17:50:33] <jokoon> I have a std::unique_ptr<int[]>
[17:50:54] <jokoon> what do you mean with some typing?
[17:50:56] <PJBoy> that makes it a little trickier, but still possible
[17:51:58] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[17:52:18] <jokoon> ok
[17:54:12] *** Quits: rajkosto (~rajkosto@178-221-253-235.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[17:54:23] <PJBoy> ...struggling to get my example to work
[17:55:33] <rpav> you want to see the contents of the array? not that i have VS handy
[17:56:30] <PJBoy> in principle though, you go to the watch window and ask for `p.get(),4` where p is your pointer and 4 is your array size
[17:56:53] <PJBoy> `&*p,4` works too
[17:57:30] <jokoon> ok
[18:00:16] <rpav> i'm a bit surprised you can't click on it and see the data basically, but .. can't you also call functions?
[18:00:23] <rpav> maybe not templates
[18:00:52] *** Joins: jsbach (~jsbach@2a02:810a:1440:4cec:adff:3ef8:aded:bb26)
[18:01:03] <RandomReader> the data is visible, but it's an int*, since there's no size information carried with it
[18:01:18] <RandomReader> so you get one dereference
[18:01:27] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[18:01:53] <rpav> ah true so you'd have to specify at least
[18:02:19] <rpav> though one would _also_ think viewing memory at a point as a type would not be hard
[18:02:44] *** Joins: unyu (~pyon@user/pyon)
[18:03:34] <RandomReader> that's what PJBoy's expression does in the Immediate panel
[18:03:52] <TinoDidriksen> whupdup, afaik, you MUST build gcc out-of-source, either in a subfolder or sibling folder.
[18:04:19] <TinoDidriksen> So running ./configure is already wrong.
[18:04:23] <Haohmaru> oh is he building in the source folder, maan
[18:04:28] <whupdup> oh
[18:04:30] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[18:04:33] <whupdup> rip
[18:04:40] <Haohmaru> isn't that explained in the build instructions?
[18:04:53] <Haohmaru> you typically make a "build" folder and go in there
[18:05:08] <TinoDidriksen> No, you typically run ./configure in the source folder.
[18:05:19] <Haohmaru> uh
[18:05:46] <TinoDidriksen> Just not for GCC
[18:05:47] <Haohmaru> maybe *my* scripts were the sketchy ones.. but it worked <le_shrug.jpg>
[18:06:05] *** Quits: jokoon (~jokoon@136.252.163.126) (Quit: Client closed)
[18:06:21] <TinoDidriksen> It's good practice to build out-of-source, but not all projects support that and very few people do it.
[18:06:56] <Haohmaru> huh
[18:06:59] <PJBoy> ...I didn't know about the immediate window before
[18:07:04] <PJBoy> neat stuff
[18:08:01] <whupdup> to me the sketchy scripts are everything that isn't cmake
[18:08:28] <Haohmaru> !rq
[18:08:28] <nolyc> Haohmaru: <LordKalma> C++ programmers wanted. Must be CV-qualified
[18:08:39] <PJBoy> VS doesn't want my `p.get(),4` to work
[18:08:43] <PJBoy> that's so weird
[18:08:43] <Haohmaru> blah, i wanted the one about cmake
[18:13:29] *** Joins: RoKenn (~RoKenn@2001:a61:3432:ab01:1347:a743:e3e4:9207)
[18:13:30] *** Quits: RoKenn (~RoKenn@2001:a61:3432:ab01:1347:a743:e3e4:9207) (Changing host)
[18:13:30] *** Joins: RoKenn (~RoKenn@user/rokenn)
[18:14:52] *** Joins: p-i- (~Ohmu@2403:6200:8978:6ebd:d904:b477:8a7f:db46)
[18:23:34] *** Quits: jsbach (~jsbach@2a02:810a:1440:4cec:adff:3ef8:aded:bb26) (Quit: Leaving)
[18:25:24] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[18:26:07] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:27:31] <tsujp84> for a class named `Foo` what does `Foo foo = {};` mean? I thought you had to have a new keyword for a new object of type Foo?
[18:29:32] <InPhase> tsujp84: You must come from Java.  You can write massive programs in C++ without ever using the word "new".
[18:29:53] <tsujp84> So that expression is creating a new object `foo` of type `Foo`?
[18:30:05] <InPhase> It is.
[18:30:19] <TinoDidriksen> Creates and initializes.
[18:30:26] <tsujp84> and `Foo foo;` would be `foo` and uninitialised?
[18:30:35] <TinoDidriksen> If it doesn't have a constructor, yes.
[18:30:36] <InPhase> That's default initialized.
[18:31:01] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:1449:5971:863:633c) (Ping timeout: 240 seconds)
[18:31:31] <InPhase> A well-designed class will initialize everything that needs to be initialized at default initialization.
[18:31:43] <tsujp84> Gotcha
[18:33:22] <InPhase> tsujp84: Generally, well designed objects are designed to allocate their own memory.  And the modern approach for doing that involves smart pointers, and the ideal approach for that now involves things like std::make_unique, std::make_shared, or using another container like std::vector that handles group allocation.  In rare cases of making your own low level container, you might require setting up
[18:33:28] <InPhase> your own new/delete pattern inside the class, and then you would use it externally without new.
[18:34:15] <InPhase> tsujp84: The term for this is "value semantics", where even things that dynamically allocate memory have a usage that treats them as if they are simple values that you can declare and pass around.
[18:39:59] <tsujp84> Right, cheers. Noted down and will try and improve once first disgusting version of my project is done.
[18:40:22] *** Joins: dfkfs (~dfkfs@178.49.152.42)
[18:46:14] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[18:46:49] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[18:48:14] <whupdup> Looks like moving my configuration to a build dir fixed building gcc, guess I missed the fact that it's *required* in the instructions somewhere
[18:48:16] <whupdup> so far, anyway
[18:48:26] <whupdup> I'll know when it finishes building
[18:48:45] <yolo> string s1="str"; assert(s1=="str"); -- implicitly decay an array into pointer, how to avoid that
[18:49:06] *** Quits: cq-work (~Z_Lund@user/cq-work) (Quit: WeeChat 3.4)
[18:49:10] <TinoDidriksen> "str"s
[18:49:29] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[18:49:37] <TinoDidriksen> Or string_view
[18:54:02] <yolo> string s1="str"; assert(s1=="str"s); string_view sv{s1}; assert(s1 == sv); -- same warning
[18:55:15] <yolo> s1 is a string that needs some operations on it, so I can't do string_view
[18:56:35] <yolo> string_view s2{s1}; assert(s2="str"); -- still warns
[18:57:35] *** Joins: Tokamak (~Tokamak@172.58.191.63)
[19:01:37] <tsujp84> im getting a strange error I don't understand, a pre-provided library cannot find an identifier it itself has? https://i.imgur.com/kpqfnPT.png
[19:01:49] *** Joins: cvitak (~cvitak@83-245-250-171-nat-p.elisa-mobile.fi)
[19:02:03] <tsujp84> the cut off macro at the bottom in green `DECLARE_CONTEXT` etc is a macro that too uses `_WDF_INDIRECT_DEVICE_CONTEXT_TYPE_INFO` ... what gives?
[19:04:17] <tsujp84> whoops dont worry I missed this from the docs
[19:04:24] <tsujp84> Before calling WDF_OBJECT_ATTRIBUTES_INIT_CONTEXT_TYPE, you must call WDF_DECLARE_CONTEXT_TYPE or WDF_DECLARE_CONTEXT_TYPE_WITH_NAME globally
[19:06:19] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[19:06:24] *** Joins: jsbach (~jsbach@2a02:810a:1440:4cec:9b8f:235f:db7d:55a7)
[19:13:37] *** Quits: jsbach (~jsbach@2a02:810a:1440:4cec:9b8f:235f:db7d:55a7) (Ping timeout: 240 seconds)
[19:15:26] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[19:19:25] *** Joins: pulse (~pulse@user/pulse)
[19:25:59] *** Joins: jsbach (~jsbach@2a02:810a:1440:4cec:3af3:abff:fe57:23d5)
[19:35:20] *** Joins: zmt00 (~zmt00@user/zmt00)
[19:51:12] <xkoncek> compilers should handle .png as source format
[19:51:38] <LordKalma> there are reddit memes about using paint as IDE
[19:51:49] <tsujp84> LMFAO
[19:52:03] <LordKalma> https://ms-paint-i.de/
[19:52:35] <tsujp84> like the uhh
[19:52:44] <tsujp84> power poiint programming
[19:52:47] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[19:52:50] <tsujp84> tape turing machines
[19:52:59] <LordKalma> the powerpoint tape video is amazing
[19:58:49] <yolo> string z{"length"}; assert(strlen(z.c_str())==6); assert(sizeof(z.c_str())==8); what gives, why 8 here? I expect 7
[19:59:22] <TinoDidriksen> sizeof(char*) is a pointer size.
[19:59:46] <LordKalma> << sizeof(remove_ptr_t<char*>)
[19:59:46] <geordi> error: 'remove_ptr_t' was not declared in this scope
[19:59:51] <TinoDidriksen> sizeof() does not count characters.
[19:59:54] <LordKalma> bah, assumed it existed :p
[20:00:55] <TinoDidriksen> z.size() will also return 6 there. The null terminator is not part of std::string's size.
[20:01:47] <yolo> char array[100]; size_t s=sizeof(array)/sizeof(array[0]); sizeof() does count chars?
[20:02:57] <LordKalma> in there the data type is char[100] not char*
[20:02:59] <yolo> TinoDidriksen: yeah i was trying to probe the NUL in string, e.g. for a string.length of 10, I should 'malloc' 11 for that, but string.length/size all returns 10, it's like the NUL is not there, but it is
[20:03:02] <LordKalma> pointer decay my friend :)
[20:03:33] <yolo> in fact i am fighting with decays here, thus playing with the very basic decaying code
[20:03:49] <yolo> passing by reference might be the 'safest/cleanest' way out
[20:04:00] <LordKalma> not using C data types is the best way out
[20:06:06] *** Quits: tsujp84 (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[20:06:06] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[20:09:21] <PJBoy> never use sizeof/sizeof
[20:09:24] <PJBoy> use std::size
[20:09:42] <TinoDidriksen> Even an empty std::string has the null terminator, but it's never counted.
[20:10:04] <AmR> LordKalma: Did U look at data file, If You have time ?
[20:10:08] <LordKalma> I though the c++ standard said std::strings might actually not have a null terminator?
[20:10:19] <TinoDidriksen> C++11 mandated null termination.
[20:10:37] <TinoDidriksen> AmR, it's a simple format - write a binary parser for it. It'll be good learning.
[20:10:51] <AmR> OK
[20:12:32] *** Quits: Tokamak (~Tokamak@172.58.191.63) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:12:34] <PJBoy> I think null termination would have been required in practice anyway?
[20:12:38] <PJBoy> pre 11
[20:12:55] <PJBoy> c_str() required null termination, and it's a const qualified member function
[20:14:19] *** Joins: Tokamak (~Tokamak@172.58.191.63)
[20:14:24] <ville> PJBoy: i don't think std::string requirements were implementable before
[20:14:27] <yolo> string_view can have no NUL, but string does have NUL
[20:14:41] <PJBoy> seriously?
[20:14:57] <PJBoy> the current string requirements would have worked before wouldn't they
[20:15:48] <ville> PJBoy: i can't remember the details why the 98/03 were inconsistent. but yes it was around some of the big-O, terminator, operator [] and c_str()
[20:16:24] <PJBoy> crazy world
[20:16:25] <ville> you could implement some of them correctly, but then that would break some other requirement
[20:16:27] <TinoDidriksen> Null termination was not required before. Contiguousness was the implied requirement - not specified, but couldn't implement without.
[20:17:08] <ville> c_str() required the data to be terminatd, but had O(1)?
[20:17:20] <PJBoy> yeah
[20:18:05] <PJBoy> I don't see anything that would disallow giving the string a null terminator at construction time
[20:18:15] <LordKalma> I though std::string .data() wasn't guaranteed a null
[20:18:24] <LordKalma> but std::string .c_str() did
[20:18:42] <LordKalma> !std::string
[20:18:43] <nolyc> http://en.cppreference.com/w/cpp/string/basic_string
[20:18:48] <PJBoy> in ++03 yeah
[20:19:25] <LordKalma> size()) (until C++11) // size()] (since C++11)
[20:19:29] <LordKalma> that's the difference
[20:20:03] <LordKalma> (until C++11) The returned array is not required to be null-terminated.  interesting
[20:20:07] <LordKalma> so I was outdated
[20:24:50] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41)
[20:25:17] *** Quits: Tokamak (~Tokamak@172.58.191.63) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:28:09] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Quit: WeeChat 3.4)
[20:28:30] <Alipha> { int foo[100]; std::cout << std::size(foo); }  // yolo, as PJBoy said, never usze sizeof to count elements of a raw array. use std::size.
[20:28:30] <geordi> 100
[20:28:52] <Alipha> { int *foo = new int[100]; std::cout << std::size(foo); }  // then you'll get a compile error if you pass it a pointer
[20:28:52] <geordi> error: no matching function for call to 'size(int*&)'
[20:29:35] <LordKalma> who'd say it's best to use C++'s stuff in C++
[20:30:09] <yolo> string has NUL, string_view does not.
[20:30:54] <yolo> { string_view sv{"hello"}; for(size_t i = 0; sv[i]; ++i) cout << sv[i]; }
[20:30:54] <geordi> hello/usr/local/include/c++/12.0.0/string_view:238: constexpr const basic_string_view<_CharT, _Traits>::value_type& basic_string_view<_CharT, _Traits>::operator[](size_type) const [with _CharT = char; _Traits = char_traits<char>; const_reference = const char&; size_type = long unsigned int]: Assertion '__pos < this->_M_len' failed. [+ 1 discarded line]
[20:31:11] <yolo> { string str{"hello"}; for(size_t i = 0; str[i]; ++i) cout << str[i]; }
[20:31:11] <geordi> hello
[20:32:36] <Alipha> yolo: indeed. string_view can be used (and is often used) to refer to a substring of chars in the middle of a larger string, in which case, it would be impossible for string_view to "add a nul char"
[20:33:18] <yolo> make sense, the part 'surprised' me is that a full clone of the underlying string still does not contain NUL, so string_view will never have NUL
[20:33:53] <yolo> by the way, someone here write a book called 'pure c++', means removing all C-habits, making c++ a separate language that has nothing to do with C, as it causes quite some issues still
[20:33:57] <cbreak> why would it contain a null if you don't put one there?
[20:34:28] <Alipha> { string foo{"hello world"}; string_view bar(foo.data() + 2, 6); std::cout << bar; }
[20:34:29] <geordi> llo wo
[20:40:48] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[20:52:32] *** Quits: dfkfs (~dfkfs@178.49.152.42) (Quit: Client closed)
[20:54:53] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[21:02:30] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[21:03:38] *** Joins: Simplar (~quassel@188.163.93.76)
[21:06:17] *** Joins: john99 (~john99@101.246.103.34.bc.googleusercontent.com)
[21:07:30] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[21:21:01] *** Quits: wuldor2 (~daddy@84.71.242.153) (Remote host closed the connection)
[21:21:13] *** Quits: AmR (~AmREiSa@156.199.20.227) (Quit: Konversation terminated!)
[21:21:43] *** Joins: chris64 (~chris@user/chris64)
[21:22:36] *** Quits: danielrparks (~quassel@2600:1700:3f7b:20f:3451:6c14:1f55:e681) (Quit: hopefully this is a reboot and not a crash)
[21:28:57] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 240 seconds)
[21:29:38] *** Joins: Tokamak (~Tokamak@172.58.191.63)
[21:30:37] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 240 seconds)
[21:31:40] *** Joins: chozorho (~chozorho@2601:146:300:c30::58f0)
[21:36:19] *** Joins: AmR (~AmREiSa@156.199.28.131)
[21:40:30] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:40:41] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:40:41] *** ChanServ sets mode: +v npaperbot
[21:41:46] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293)
[21:42:46] *** Joins: magla (~gelignite@55d453bf.access.ecotel.net)
[21:49:31] *** Quits: Tokamak (~Tokamak@172.58.191.63) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:50:11] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:5c16:538b:70f3:1b3)
[21:50:47] *** Quits: john99 (~john99@101.246.103.34.bc.googleusercontent.com) (Quit: Client closed)
[21:54:30] *** Quits: Simplar (~quassel@188.163.93.76) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:55:43] *** Quits: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net) (Remote host closed the connection)
[21:57:53] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[21:58:05] *** Joins: ashafq (~ashafq@pool-96-237-238-252.bstnma.fios.verizon.net)
[22:00:47] *** notevil_ is now known as NOTevil
[22:01:37] *** Quits: supernova (~quassel@2405:9800:ba11:6207:ec5a:322d:47ae:cab) (Ping timeout: 240 seconds)
[22:11:46] *** Joins: Tokamak (~Tokamak@172.58.191.63)
[22:13:01] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:6dc4:e68d:fe69:c13f) (Ping timeout: 240 seconds)
[22:26:49] *** Quits: ville (~ville@user/ville) (Quit: ville)
[22:27:06] *** Joins: ville (~ville@user/ville)
[22:33:48] *** Joins: gareppa (~gareppa@user/gareppa)
[22:35:35] *** Joins: cart_man (~rynot@cpc100914-uddi26-2-0-cust18.20-3.cable.virginm.net)
[22:36:14] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[23:15:05] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:c48f:a6ee:6684:c8b) (Ping timeout: 252 seconds)
[23:22:29] *** Quits: rb (~augh@theguntretort.com) (Ping timeout: 256 seconds)
[23:22:32] *** Joins: rwb (~augh@theguntretort.com)
[23:24:09] *** rwb is now known as rb
[23:26:17] *** Quits: jsbach (~jsbach@2a02:810a:1440:4cec:3af3:abff:fe57:23d5) (Ping timeout: 240 seconds)
[23:34:25] *** Quits: rb (~augh@theguntretort.com) (Remote host closed the connection)
[23:35:54] *** Joins: rwb (~augh@theguntretort.com)
[23:38:47] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:6dc4:e68d:fe69:c13f)
[23:42:12] *** Quits: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[23:42:42] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[23:43:17] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[23:44:34] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[23:45:30] *** Quits: cart_man (~rynot@cpc100914-uddi26-2-0-cust18.20-3.cable.virginm.net) (Quit: Konversation terminated!)
[23:45:30] *** Joins: jsbach (~jsbach@2a02:810a:1440:4cec:ac88:7faa:71ea:c5f2)
[23:53:12] *** Joins: winning-luser (~wl@2601:8c1:80:70d0::414b)
[23:57:26] *** Quits: letto (~letto@188.25.113.229) (Quit: Konversation terminated!)
[23:58:04] *** Joins: letto (~letto@188.25.113.229)
[23:59:17] *** Quits: winning-luser (~wl@2601:8c1:80:70d0::414b) (Ping timeout: 240 seconds)
