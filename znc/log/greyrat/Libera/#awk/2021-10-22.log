[00:00:30] <Patsie> since they are passed by reference, you _can_ modify array parameters
[00:03:28] <Patsie> ah, I think that's no use for you here. since you use the return value as a SYMTAB label again. that's how the nesting of the functions work
[00:03:43] <Patsie> so yeah, ignore my array rant
[00:11:32] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[00:24:55] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[00:26:49] *** Quits: Strykar_ (~wakka@signald/Strykar) (Quit: Leaving.)
[01:42:01] *** Joins: roarde (~roarde@user/roarde)
[02:05:23] *** Quits: kensanata (~user@user/kensanata) (Remote host closed the connection)
[02:34:49] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[02:35:37] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[02:59:07] *** Quits: lgc (~lgc@user/lgc) (Quit: WeeChat 3.2-dev)
[03:13:37] *** Joins: natechan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[03:30:52] *** Joins: seninha (~seninha@user/seninha)
[03:43:56] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:30:32] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[04:34:46] *** Joins: vlm (~vlm@user/vlm)
[04:42:49] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[04:48:00] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 260 seconds)
[04:51:01] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:34:55] *** Joins: jetchisel (jetchisel@user/jetchisel)
[05:57:59] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Ping timeout: 264 seconds)
[05:59:46] *** Joins: yuesbeez (uid458354@tinside.irccloud.com)
[06:06:46] *** Quits: shbot (~shbot@37.139.2.101) (Remote host closed the connection)
[06:07:04] *** Joins: shbot (~shbot@37.139.2.101)
[06:25:40] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Quit: This computer has gone to sleep)
[06:30:48] *** Quits: yuesbeez (uid458354@tinside.irccloud.com) (Quit: Connection closed for inactivity)
[08:07:57] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[08:13:33] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (Ping timeout: 265 seconds)
[08:20:19] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[08:22:54] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Client Quit)
[08:24:09] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[08:30:56] *** Quits: ccl (ccl@shell.xshellz.com) (Ping timeout: 268 seconds)
[08:36:21] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 276 seconds)
[08:36:43] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[08:55:57] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Quit: This computer has gone to sleep)
[09:52:07] *** Joins: lavaball (felix@31.204.155.215)
[11:12:48] *** Joins: m4n (~emacs@ip5f5bd1ff.dynamic.kabel-deutschland.de)
[11:51:49] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[11:55:03] *** Joins: earnestly (~earnest@user/earnestly)
[12:03:43] *** Joins: lgc (~lgc@user/lgc)
[13:44:30] *** Joins: lavaball (felix@31.204.155.215)
[13:57:13] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[14:10:10] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[14:11:15] *** Quits: X-Scale (~ARM@46.50.2.19) (Ping timeout: 258 seconds)
[14:12:22] *** X-Scale` is now known as X-Scale
[14:32:32] *** Joins: rendar (~rendar@user/rendar)
[14:32:52] <rendar> i have this simple snippet, but it doesn't seem to work: https://bpa.st/HGMA -- any help?
[14:33:04] <rendar> i just want to edit a yaml conf file entries
[14:38:38] *** Joins: X-Scale` (~ARM@83.223.233.104)
[14:40:13] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 265 seconds)
[14:41:03] <rendar> anyone?
[14:41:23] *** X-Scale` is now known as X-Scale
[14:46:11] *** Joins: seninha (~seninha@user/seninha)
[14:49:13] <Patsie> # printf "%s\n" 'main:' 'password: "test"' | awk -v 'pw=new_&pass' '/^[[:blank:]]*main:/ { print; if (getline > 0 && $1 == "password:") $2 = "\047" pw "\047" } 1'
[14:49:15] <shbot> Patsie: main:
[14:49:16] <shbot> Patsie: password: 'new_&pass'
[14:52:11] <rendar> Patsie, the thing is, i have this: https://bpa.st/3RKQ -- so i must pass to awk 3 things: 1) the location of the key, e.g. "db, net" or "" for root, 2) the key, e.g. "port" and 3) the new value to set
[14:52:56] <rendar> for instance i wish to update db.net.port but not net.port, if you get what i mean
[14:54:49] <rendar> can i achieve that?
[14:56:29] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[15:30:27] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Quit: This computer has gone to sleep)
[15:32:00] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[15:49:23] *** Quits: wuseman (wuseman@user/wuseman) (Ping timeout: 258 seconds)
[15:55:20] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (Read error: Connection reset by peer)
[15:58:27] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[16:10:02] *** Joins: lavaball (felix@31.204.155.215)
[16:16:10] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (Read error: Connection reset by peer)
[16:19:13] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[16:27:30] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (Read error: Connection reset by peer)
[16:28:55] <emanuele6> that sounds sophisticated, i wouldn't write a tool like that in awk. at least, not as i would write an awk file that reads text. yaml is a complex format which includes json.
[16:30:21] <emanuele6> s/file that/script that simply/
[16:53:12] *** Quits: roarde (~roarde@user/roarde) (Quit: Leaving)
[16:59:27] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[18:08:33] *** Joins: tangy (~tangy@user/tangy)
[18:26:47] <rendar> emanuele6, ok
[18:44:55] <rendar> how could i do something like: read all file lines, check for `[whatever tab/spaces]my_string: hello` with only "my_string" as the search key, substitute that line with: `[the same tab/spaces found]my_string: something_else`
[18:47:36] <emanuele6> why do you need to read everything before checking?
[18:48:48] <emanuele6> awk -F: '/[[:blank:]]my_string/ { $0 = $1": something_else"' }'
[18:49:33] <emanuele6> something like this could work, you don't need to read all the line before checking, that is not typically how you write an awk command 
[18:50:05] <emanuele6> i missed a ^
[18:50:18] <emanuele6> awk -F: '/^[[:blank:]]+my_string/ { $0 = $1": something_else"' }'
[18:50:24] <emanuele6> and a +
[18:50:58] <emanuele6> ah, and the final `:' after my_string
[18:53:20] <emanuele6> and print :)
[18:54:10] <emanuele6> # printf '%s\n' ' something: sum' 'aaaaaaa: x' '       f: subtract'
[18:54:13] <shbot> emanuele6:  something: sum
[18:54:13] <shbot> emanuele6: aaaaaaa: x
[18:54:13] <shbot> emanuele6:        f: subtract
[18:54:47] <emanuele6> # printf '%s\n' ' something: sum' 'aaaaaaa: x' '       f: subtract' | awk -F: '/^[[:blank:]]+f:/ { $0 = $1": multiply" } 1'
[18:54:49] <shbot> emanuele6:  something: sum
[18:54:49] <shbot> emanuele6: aaaaaaa: x
[18:54:49] <shbot> emanuele6:        f: multiply
[18:56:58] <emanuele6> <rendar > i just want to edit a yaml conf file entries
[18:57:54] <emanuele6> wait, you want to use awk to *process yaml* and you want to use it *in-place*?
[18:58:08] <emanuele6> why don't you just use patch(1)?
[18:58:36] <emanuele6> s/to use it/to do it/
[19:09:10] *** Joins: ccl (ccl@shell.xshellz.com)
[19:11:18] <emanuele6> or patch+m4 if you need to change the new value dynamically
[19:13:20] *** Joins: wuseman (~wuseman@81-234-120-217-no68.tbcn.telia.com)
[19:13:20] *** Quits: wuseman (~wuseman@81-234-120-217-no68.tbcn.telia.com) (Changing host)
[19:13:20] *** Joins: wuseman (~wuseman@user/wuseman)
[19:34:31] *** brennen|afk is now known as brennen
[19:44:38] <nmz> rendar: you want to edit the yaml that is in an html file?
[19:47:31] <nmz> oh, this damn thing isn't raw
[19:47:33] <nmz> lol
[19:47:46] <rendar> no, the yaml file of a db configuration
[19:48:08] <rendar> emanuele6, uhm, can you elaborate more on that patch solution?
[19:48:18] <rendar> emanuele6, i have just to update a value inside a simple yaml conf
[19:54:58] <nmz> yaml is super complicated rendar, but you can probably use miller for it
[19:55:15] <rendar> i just need a quick solution
[19:55:27] <nmz> I'm making a parser for it, wait a bit
[19:55:32] <nmz> you have to count the whitespace
[19:58:18] <emanuele6> rendar: i meant create a patch file with diff(1), distribute the patch file and then apply the change with patch(1)
[20:00:25] <rendar> emanuele6, but i can't use diff
[20:01:25] <emanuele6> i don't understand
[20:01:34] <emanuele6> why can you not?
[20:04:26] <nmz> yaml is super complicated, you have to remember where each key's place is in the tree (how much whitespace it has)
[20:05:17] <emanuele6> also it may contain json
[20:05:36] <emanuele6> foo: bar
[20:05:40] <emanuele6> and
[20:05:45] <emanuele6> {"foo":"bar"}
[20:06:06] <emanuele6> are both valid yaml files that should be interpreted in the same way
[20:07:18] <nmz> that's just idiotic
[20:07:46] <nmz> there's barely any good json parsers out there apart from jq
[20:09:02] <emanuele6> yeah, yml is just a very over complicated format
[20:09:16] <emanuele6> i would be much better if it didn't have the inline json thing
[20:10:25] <nmz> csv as well, looks simple, is super complicated
[20:11:29] <emanuele6> at least there is python for csv
[20:14:58] <emanuele6>  python -c 'import csv, sys; csv.writer(sys.stdout).writerows(map(lambda entry: ...), csv.reader(sys.stdin)))'
[20:15:05] <emanuele6> it's long to write, but decent
[20:16:03] <emanuele6> there is a extra paren after ...
[20:16:43] <emanuele6> for example, you can use as ...: [ "somethingelse" if i == 2 and e[i] == "something" else e[i] for i in range(len(e)) ]
[20:16:57] <emanuele6> to change the third field from something to somethingelse
[20:17:58] <emanuele6> and writer.writerows() and map(..., reader()) don't need to read the whole output to process
[20:18:09] <emanuele6> s/output/input/
[20:18:19] <emanuele6> it can process record by record
[20:29:59] <nmz> that's easy to do though
[20:31:16] <nmz> I need an exporter function for my csv thing
[20:31:58] <nmz> hmm, after trying to write this, it seems yaml isn't mean to be worked on directly, the best method seems to be to convert to json then use as normal
[20:47:03] *** Joins: Camusensei (~Camusense@megaman.thican.net)
[21:14:51] *** Joins: user51 (~user51@176.228.59.81)
[21:36:31] *** Quits: Torr (~Torr@user/torr) (Remote host closed the connection)
[21:36:54] <nmz> rendar: I think I got something
[21:36:56] <nmz> https://github.com/Nomarian/Awk-Batteries/blob/c02a03607efa9f48f757919c2483dcd83c680118/Units/yaml.awk
[21:37:26] <nmz> output is as https://termbin.com/k1cn
[21:37:45] <nmz> its very limited, but its good enough
[21:37:52] <nmz> gosh, I think that took me 2 hours to write
[21:38:03] *** Joins: Torr (~Torr@user/torr)
[21:38:10] <nmz> and here I was planning on using my free time on @#$%
[21:40:35] <emanuele6> i think you can use: index($0,$1)
[21:40:45] <emanuele6> to find the number of whitespace
[21:41:06] <nmz> so, to update db:net:port you need to basically run awk -f ./yaml.awk -e 'tree=="db:net:" && $1 == "port:" {$2="3748173764"} {print}' rendar.yaml
[21:41:16] <nmz> oh nice emanuele6 
[21:41:18] <emanuele6> # <<< '   a' awk '{ print index($0,$1) }'
[21:41:20] <shbot> emanuele6: 4
[21:41:22] <emanuele6> -1
[21:41:22] <nmz> I knew there was a better method
[21:42:06] <nmz> oh, that fucks up the whitespace
[21:42:09] <nmz> wonder why
[21:42:27] <emanuele6> did you add -1?
[21:42:37] <emanuele6> # <<< '   a' awk '{ print index($0,$1)-1 }'
[21:42:39] <shbot> emanuele6: 3
[21:43:11] <nmz> why is it messing up the whitespace? grr
[21:44:34] <nmz> # <<< '   ' awk '{ print index($0,$1) }'
[21:44:36] <shbot> nmz: 1
[21:44:40] <nmz> nope
[21:44:50] <nmz> aw
[21:44:55] <nmz> and it looked so succint too
[21:44:59] <emanuele6> because $1 is ""
[21:45:03] <nmz> ya
[21:45:18] <nmz> the way this works is, it always knows whitespace
[21:45:25] <nmz> and I don't want to change FS
[21:45:41] <nmz> although maybe I should
[21:46:57] <emanuele6> can't you just ignore blank lines?
[21:47:01] <nmz> no
[21:47:10] <nmz> mm
[21:47:12] <nmz> no?
[21:47:23] <nmz> I've never used yaml but it seems whitespace is super important
[21:47:51] <emanuele6> i am pretty sure blank lines don't matter
[21:47:54] <emanuele6> let me check
[21:47:59] <nmz> 😡
[21:48:11] <nmz> I'm starting to hate yaml more and more
[21:48:37] <emanuele6> yes, blank lines don't matter
[21:48:42] <emanuele6> https://github.com/mpv-player/mpv/blob/master/.github/workflows/build.yml <- example
[21:48:50] <nmz> (╯°□°）╯︵
[21:49:40] <nmz> ok that's simple
[21:49:47] <nmz> they still care about # comments
[21:50:49] <nmz> the problem is that you can't just do a {next} with an -i inplace
[21:51:05] <nmz> you gotta print everything as is
[21:51:59] <emanuele6> can't you just slap an `NF' before your code block?
[21:57:02] <nmz> it seems to mess everything up
[22:02:38] <nmz> ok, it should work now
[22:17:03] <nmz>  - uses: actions/checkout@v2 breaks on this too
[22:17:05] <nmz> yeah
[22:17:10] <nmz> dirty hack I guess
[22:17:14] <nmz> good for simple yaml
[22:21:45] <emanuele6> - is array
[22:22:16] <emanuele6> foo:
[22:22:24] <emanuele6>  - 1
[22:22:26] <emanuele6>  - 2
[22:22:39] <emanuele6> same as {"foo":[1,2]} in json
[22:24:04] <emanuele6> foo:
[22:24:13] <emanuele6>  - bar: baz
[22:24:30] <emanuele6> this is: {"foo":[{"bar":"baz"}]}
[22:30:55] <emanuele6> and you can also have json mixed in
[22:31:02] <emanuele6> foo:
[22:31:09] <emanuele6> - bar: baz
[22:31:14] <emanuele6> - [1,2]
[22:31:32] <emanuele6> - {"zab":"rab"}
[22:33:07] <emanuele6> "*whitespace*- [1,2]" could also be written as "*whitespace*-\n*whitespace* - 1\n*whitespace* - 2"
[22:33:50] <emanuele6> and it also has weird white space rules
[22:33:55] <emanuele6> - foo:
[22:34:04] <emanuele6>  - bar: baz
[22:34:08] <emanuele6> this is not valid
[22:34:25] <emanuele6> the second - needs to be at least at the same level of the f
[22:34:50] <emanuele6> so you need to also consider - in the indentation level if you want to also implement arrays
[22:35:23] <emanuele6> yaml is very complex
[22:52:38] *** Quits: waldo323 (~waldo323@d14-69-96-170.try.wideopenwest.com) (Remote host closed the connection)
[22:53:34] *** Joins: waldo323 (~waldo323@d14-69-96-170.try.wideopenwest.com)
[22:54:10] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 260 seconds)
[22:55:15] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Quit: This computer has gone to sleep)
[23:20:02] *** Joins: wuseman (~wuseman@81-234-120-192-no68.tbcn.telia.com)
[23:20:02] *** Quits: wuseman (~wuseman@81-234-120-192-no68.tbcn.telia.com) (Changing host)
[23:20:02] *** Joins: wuseman (~wuseman@user/wuseman)
[23:47:38] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 260 seconds)
[23:53:41] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
