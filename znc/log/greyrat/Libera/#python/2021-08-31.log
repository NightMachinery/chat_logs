[00:00:39] <lucyfurnice> The pgen included with the python source has a __main__, I will convert that to exe for cython
[00:00:40] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 240 seconds)
[00:01:25] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Ping timeout: 244 seconds)
[00:02:23] *** Quits: toverna (~uni@128-70-103-249.broadband.corbina.ru) (Quit: Konversation terminated!)
[00:03:04] <nedbat> ens: are you sure the banner exists in the line?
[00:03:39] <Akuli> re.match searches only from the beginning
[00:03:52] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 245 seconds)
[00:04:17] <nedbat> ens: ah, the old "I meant .search!"
[00:04:31] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[00:04:42] <ens> the banner does exist in the line. i'll try .search!
[00:05:12] *** Joins: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3)
[00:05:19] <ens> yes .search works. thanks :)
[00:06:18] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[00:07:27] *** Quits: fandre1986 (~fandre198@178-36-241-155.adsl.inetia.pl) (Quit: Connection closed)
[00:07:55] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Ping timeout: 252 seconds)
[00:09:14] *** Quits: PyT001 (~PyT001@2402:e280:3d22:227:100f:556b:9085:4e1f) (Quit: Client closed)
[00:09:39] <Akuli> you could also use 'in', if you don't really need a pattern:    b'banner' in whatever
[00:09:59] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[00:10:40] *** Quits: lucyfurnice (~lucyfurni@2601:5cc:8300:4e50:6002:1cd2:ca83:43f8) (Quit: Client closed)
[00:10:51] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[00:11:07] *** Joins: ubert (~Thunderbi@178.115.67.30.wireless.dyn.drei.com)
[00:11:14] *** Quits: y1n (~y1n@84-115-64-130.wifi.dynamic.surfer.at) (Ping timeout: 244 seconds)
[00:11:48] *** Joins: besnn (~besnn@user/besnn)
[00:13:07] *** Joins: kevinlc (~kevinalh@2800:200:e8d0:20b::4)
[00:15:19] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[00:15:36] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[00:15:57] *** Joins: mickey (~user@user/mickey)
[00:19:11] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[00:19:27] *** Joins: matsaman (~matsaman@user/matsaman)
[00:19:55] *** Joins: ska (~ska@user/ska)
[00:21:20] *** Joins: teut (~teut@106.212.2.35)
[00:21:27] <teut> Uploaded file: https://uploads.kiwiirc.com/files/371e3f28ef06787f777e82aad0511d07/pasted.txt
[00:21:29] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:21:36] <aphysically> awwww what https://bpa.st/KXHQ
[00:21:49] <teut> what does the function there?
[00:21:52] <ska> I see that there is ricardochaves/python-lint package for creating linting tests, but seems to me that a simple Makefile is more flexible and easier to test for local developer. Is this wrong?
[00:21:53] <teut> is*
[00:22:37] <Wooble> teut: you need to `def` a function to have a yield.
[00:23:21] <Wooble> (what do you expect that to do outside a function in a while loop?)
[00:23:27] <teut> oh yes , right with a while it was required , overwrite we cant reference the iterator
[00:23:40] <teut> otherwise*
[00:24:00] <Wooble> it has nothing to do with the while. yield without a function doesn't mean anything. what would it mean?
[00:24:06] *** Joins: y1n (~y1n@84-115-65-170.wifi.dynamic.surfer.at)
[00:24:34] <teut> i = (i for i in range(10))    this is an iterator
[00:24:38] *** Quits: colorado (~fluiD@161.97.231.145) (Read error: Connection reset by peer)
[00:24:43] <teut> no func here
[00:24:46] *** Joins: colorado (~fluiD@161.97.231.145)
[00:24:52] <Wooble> also... no yield there :P
[00:24:59] <raek> teut: range is a function there
[00:25:07] <teut> lol , thats true
[00:25:42] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 244 seconds)
[00:25:53] <teut> you can type the numbers in a list there raek
[00:26:02] <jinsun> aphysically: did you forget to add a `__future__` import at the top?
[00:26:16] <aphysically> no, let me show you
[00:26:35] <aphysically> I was converting to using the __future__ import as I split into modules when I ran into it
[00:26:56] *** Quits: k162 (k162@user/k162) (Remote host closed the connection)
[00:26:59] <aphysically> here's the first module I'm in the process of separating out https://bpa.st/C7MQ
[00:27:15] <aphysically> there's only one union used in the file, for defining a type alias toward the top
[00:27:17] *** Joins: k162 (k162@user/k162)
[00:27:22] <aphysically> when I tried to use | there I got the error
[00:27:34] <raek> teut: in the typical case you have a for loop that consumes values and a generator that produces values.
[00:27:51] <raek> the for loop and the generator are two separate pieces of code
[00:27:53] *** Quits: jcalla (~jcalla@cpe-75-189-211-206.nc.res.rr.com) (Ping timeout: 248 seconds)
[00:27:59] *** Quits: aead (~aead@user/aead) (Quit: aead)
[00:28:01] <bjs> teut: you don't say `yield` there
[00:28:17] <teut> yes yes , Wooble told that
[00:28:19] <bjs> teut: the `yield` keyword can only appear inside a `def` block (a function)
[00:28:21] <raek> and they "take turns" running
[00:28:24] <jinsun> aphysically: oh yes, if you assign it to another variable then that import doesn't help
[00:28:42] <teut> ya  , many other language stole your yield keyword resently
[00:28:47] <teut> recently
[00:28:50] <aphysically> will that work in 3.10, or that just in general isn't a syntax supported?
[00:28:58] <bjs> teut: it's just syntax,  it's what tells Python that the function is a generator
[00:29:04] <jinsun> it will work in 3.10
[00:29:09] <bjs> aphysically: add `from __future__ import annotations` to the top of your file.
[00:29:20] <raek> teut: do you have a feeling for why you cannot have a "return" outside a function?
[00:29:22] <bjs> aphysically: the syntax has always existed, it's just binary or.  In 3.10 then all Python types will support it.
[00:29:28] <bjs> teut: which languages??
[00:29:33] <teut> c++, js
[00:29:52] *** Quits: mei (~mei@user/mei) (Ping timeout: 252 seconds)
[00:30:02] <teut> they stole your import statement too
[00:30:06] <raek> coroutines is a concept older than python
[00:30:19] <bjs> teut: do you think Python invented these ideas :P
[00:30:25] <teut> didnt it?
[00:30:29] <bjs> haha no
[00:30:55] <teut> the web said that some hacker gave you the  lambda, a few other important things
[00:30:59] <raek> lot's of really useful ideas are really ancient.
[00:31:00] <bjs> teut: huh?
[00:31:02] <teut> in 1995 or so
[00:31:17] <bjs> teut: Guido?  he started writing Python back then
[00:31:30] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[00:31:36] <Wooble> I think guido blames lisp hackers for lambda.
[00:31:36] <teut> Python reached version 1.0 in January 1994. The major new features included in this release were the functional programming tools lambda , map , filter and reduce . Van Rossum stated that "Python acquired lambda, reduce(), filter() and map(), courtesy of a Lisp hacker who missed them and submitted working patches".
[00:31:44] <aphysically> so a nice side effect of splitting into modules: I can give functions simpler names when I intend to just use them as importing the module directly
[00:31:46] *** Quits: shangxiao (~davids@124.182.71.141) (Quit: WeeChat 3.2)
[00:31:59] <bjs> teut: I'm not sure what point you're trying to make
[00:31:59] <aphysically> like instead of "ff_duration" I can just call it duration in the ffmpeg module file, and use it as ffmpeg.duration
[00:32:07] <bjs> Wooble: blame might be the right word :P
[00:32:08] <jinsun> bjs: the future import doesn't help if you do `x = str | int` instead of `x: str | int` which is kinda what aphysically was trying to do
[00:32:26] <Wooble> bjs: well I mean he was trying to argue it could be removed without anyone caring much at the time. :)
[00:32:33] <raek> lambdas were introduces in Lisp in 1958. the lambda calculus (the math inspiring it) was formalized in the 1930s...
[00:32:47] <aphysically> yes I was defining a typealias as jinsun said bjs
[00:32:49] *** Quits: magla (~gelignite@55d45175.access.ecotel.net) (Read error: Connection reset by peer)
[00:32:49] <bjs> Wooble: I wish they were removed, or at least made something better
[00:32:56] <raek> I digress.
[00:33:08] <teut> so you mean you coped lisps stuff and now other languages are copying yours?
[00:33:10] *** Joins: magla (~gelignite@55d45175.access.ecotel.net)
[00:33:13] <teut> copied*
[00:33:20] <bjs> teut: "you" being Python?  yes it copied a lot of stuff from a lot of places
[00:33:22] <raek> teut: who is "you" here?
[00:33:32] <teut> Python only
[00:33:37] *** Joins: nac (~nac@user/nac)
[00:33:38] *** Quits: ubert (~Thunderbi@178.115.67.30.wireless.dyn.drei.com) (Read error: Connection reset by peer)
[00:33:48] <bjs> teut: almost everything is copied from somewhere else,  maybe changed a little bit :)
[00:33:56] *** Joins: ubert (~Thunderbi@178.115.67.30.wireless.dyn.drei.com)
[00:34:14] <teut> c++ got lambda in 2011
[00:34:27] <teut> and  ranges in 2020
[00:34:52] <bjs> teut: sure,  I'm not sure what your point is still :)
[00:35:30] <teut> I mean if you copied then why languages older and more famous than you dont have such basic features
[00:35:43] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[00:35:48] <bjs> teut: why do you call them "basic features"
[00:35:55] <teut> map, filter,  reduce ,   these are the basic things
[00:35:58] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:36:07] <bjs> teut: for a functional language yes,  I still wish Python didn't have those functions
[00:36:14] <bjs> same with lambda
[00:36:33] *** Quits: rhax (~yannick@user/rhax) (Ping timeout: 244 seconds)
[00:37:37] <teut> python isnt functional specificly
[00:37:37] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 252 seconds)
[00:38:00] <teut> it supports many paradigms
[00:38:07] <bjs> teut: that's why I have always thought that it was a mistake for Python to have `lambda` and map/filter/reduce
[00:38:10] *** Quits: ubert (~Thunderbi@178.115.67.30.wireless.dyn.drei.com) (Ping timeout: 252 seconds)
[00:38:46] <Wooble> i'd advocate for removing about half of the other builtins too. :)
[00:38:53] <teut> oh in this sense you mean , ya you can say it then,  but I think those features are very useful
[00:38:56] <bjs> there's very few places that it makes sense to use them over the other features Python has in modern code,  and I would bet that if Python were to be re-invented all over again knowing what we do now that those features would not be included
[00:39:29] <teut> you got list comprehensions but others dont
[00:39:37] <bjs> teut: others don't what?
[00:40:09] *** Quits: manin (~x@185.242.190.95) (Quit: Leaving)
[00:40:11] <teut> others dont have it , so they should provide atleast one mechanism
[00:40:16] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:40:18] *** Quits: magla (~gelignite@55d45175.access.ecotel.net) (Quit: Stay safe!)
[00:40:25] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[00:40:32] <teut> c++ now has anonymous function 2017 version
[00:40:32] <bjs> teut: but Python does have list comprehensions,  so it doesn't need map or filter. And we have `for` so we don't need reduce :)
[00:40:43] <teut> so at the end it got lambdas
[00:40:44] <bjs> teut: yes you keep saying that,  I'm still not sure what point you're trying to make
[00:41:25] <bjs> teut: I'm sure the C++ lambdas will be better than the Python ones,  the Python lambdas are kind of silly because you can't use 1/2 of the syntax of the language inside them
[00:41:35] <teut> with `for`   you will require a temp variable to achieve the  functionality of reduce
[00:41:39] *** Joins: jcalla (~jcalla@cpe-75-189-211-206.nc.res.rr.com)
[00:41:51] <teut> I dont like short lived dummies
[00:42:01] <bjs> teut: I mean reduce was so bad it already got removed  (or well, moved
[00:43:13] <teut> yes , I know, it is in functools
[00:43:16] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:5e6:167:440a:5f89) (Quit: Textual IRC Client: www.textualapp.com)
[00:43:27] <ens> if i want to do a global variable in my script, how do i declare it?
[00:43:41] <bjs> ens: to "do" a global variable?  what does "doing" a global variable mean
[00:43:47] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 244 seconds)
[00:44:19] <bjs> teut: I'm just saying these features weren't invented by Python,  they aren't that important to most languages (because they're very functional-programming orientated) and other languages aren't "stealing" from Python by including generators and lambdas
[00:44:20] <ens> like if i am doing a socket and i have a 'connection state' integer which gets set to 1 when the login credentials have been sent and i detect a banner to see they have been accepted
[00:44:20] *** Joins: Auron (Auron956@user/auron)
[00:44:43] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[00:44:45] <rama> Is there a way to make multiple objects within a dict comprehension? Something like {1:f'1-{x}', 2:f'2-{x}' for x in ['foo']}
[00:44:46] <bjs> ens: I feel like there's some subcontext here that you've got some code that you're trying to make work and it doesn't?
[00:44:56] <teut> atleast the stole the "import"
[00:44:59] <teut> they*
[00:45:05] *** Quits: Haxxa (~Haxxa@122.199.45.213) (Quit: Haxxa flies away.)
[00:45:10] *** Joins: mickey0 (~user@user/mickey)
[00:45:15] <bjs> teut: did they?
[00:45:19] <teut> but its good since I have to learn less
[00:45:29] <teut> didnt they?
[00:45:32] <hsv> Hi, is there a way to pre-download a dependent module as a .tar.gz file, to be installed via requirements.txt ?
[00:45:34] <ens> i'm writing a script from scratch to connect to a server and wait for certain messages in order to do some processing on them.
[00:45:39] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[00:45:40] *** mickey0 is now known as mickey
[00:45:53] <bjs> teut: why do you say they stole import?
[00:45:53] *** Joins: fikran (~fikran@user/fikran)
[00:46:04] <bjs> teut: because they use the word "import"?  I thought the actual feature was very different
[00:46:09] <teut> yes
[00:46:36] <teut> oh implementation wise   I like the js's import
[00:46:49] <bjs> teut: it's not stealing import just because they use the word "import",  and it's not even the same import system it's totally different and Python did not invent the word "import"
[00:47:15] <Wooble> rama: no, write a for loop.
[00:47:27] <teut> I dont know, c++ named it import in 2020, js in ES 6
[00:47:31] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 252 seconds)
[00:47:51] <teut> I know otherwise that the linking is done differently
[00:47:58] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[00:48:15] <p-i-> Suppose I want to make a simple web service on, say, an AWS EC2 machine. So the user does https://1.2.3.4/my_service?foo=1&bar=2 and it generates a .csv that downloads to their machine. What's a good _really_ lightweight framework? I would have used Flask 3 years ago...
[00:48:35] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:48:36] <bjs> teut: the word "import" is not some cryptic word that Python invented,  it's an incredibly generic word that means to "bring in" or "include" or "transfer" and python wasn't even the first language to use the word "import" in the way it does
[00:49:52] <jinsun> hsv: there is `pip download` command, and in requirement.txt you can put the relative path to the downloaded file (havent' tested)
[00:50:06] *** Joins: Haxxa (~Haxxa@122.199.45.213)
[00:50:08] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[00:50:19] <teut> ok, so , I can remove my stereotypes. Python is the first languages that I might had done some significant work in.
[00:50:19] <ens> so i declared: "connection_status = 0" outside of a function def, but when i try to reference+set it inside the function def it says that the 'connection_status' is referenced before assignment...
[00:50:23] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[00:50:31] <ens> but the assignment is at the top of the script
[00:50:32] *** Joins: ZedHedTed (~ZedHedTed@user/zedhedted)
[00:50:51] <bjs> ens: you need to say `global connection_status` inside the top of the function def
[00:51:12] <bjs> teut: Python may be old from the 1990's,  but lots of these ideas and features can be found in languages going back to the 1960's
[00:51:24] *** Joins: midnite (~human@user/midnightlantern)
[00:51:46] <ens> ah nice one, thanks bjs.
[00:51:49] *** Quits: besnn (~besnn@user/besnn) (Read error: Connection reset by peer)
[00:51:56] <midnite> Hi. Could someone please help me figure out why the statment on the last line in this code snippet never executes? https://bpa.st/NKKQ
[00:52:05] <p-i-> I can see Quart and FastAPI are new on the scene since I last wrote microservices
[00:52:14] <bjs> midnite: what is `database` ?
[00:52:28] <teut> matched is empty probably
[00:52:45] <midnite> bjs: database is a dict, let me show you, hold on
[00:53:05] *** Quits: Mach (~mach@2a02:2f09:d303:5d00::738) (Quit: q)
[00:53:06] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Remote host closed the connection)
[00:53:06] <phy1729> I'd assume it's an iterator
[00:53:24] *** Quits: ice99 (~ice9@user/ice9) (Remote host closed the connection)
[00:53:44] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[00:54:02] <midnite> I'll paste the whole program for you
[00:54:14] <midnite> along with the necessary files
[00:54:23] *** Joins: ice9 (~ice9@user/ice9)
[00:54:33] <The-Compiler> p-i-: Flask is still decent, even supports asyncio AFAIK since its recent 2.0.0 release
[00:54:43] <teut> ya bjs, I get it, thanks for clearly false notions about Python from my head. Now I can think about languages in a different way based on  feature and paradigm that they select to follow.
[00:54:48] *** Joins: zebrag (~chris@user/zebrag)
[00:55:00] <hsv> jinsun: that worked, thanks!
[00:55:22] <teut> different programming languages are  good for different things
[00:55:34] *** Quits: Hax0r (~Hax0r@46.38.93.176) (Remote host closed the connection)
[00:55:49] <midnite> bjs: okay, like I said, database is a dict: https://bpa.st/raw/OESQ
[00:56:08] <bjs> teut: take a look at https://en.wikipedia.org/wiki/ALGOL_60#ALGOL_60  for an example of a program in a very very old language.  You'll probably see that the language looks a bit different but if you squint almost looks like Python or something
[00:56:42] <teut> oh yes thats a famous language, basis of smallttalks
[00:56:58] <bjs> teut: it's a famous language for sure, but it's a very very old language, pre-dating pretty much any language you use today
[00:57:07] <bjs> midnite: well that's two dicts :)
[00:57:11] <bjs> midnite: what is the full file?
[00:57:22] <midnite> bjs: the full python program?
[00:57:28] <bjs> midnite: yes
[00:57:30] <midnite> hold on
[00:57:34] *** Joins: volgar1x (~volgar1x@37.172.111.138)
[00:57:58] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 252 seconds)
[00:58:10] *** Joins: aead (~aead@user/aead)
[00:58:22] <teut> ya I was thinking that the famous think was the Backus Naur form was associated with it
[00:58:28] <teut> thing*
[00:58:50] <bjs> teut: but Smalltalk was a decade after this language, and Python was decades after Smalltalk.  and none of them are exactly the same as each other but you can definitely see one "influence" the next
[00:59:27] *** Quits: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d) (Quit: WeeChat 3.2)
[01:00:09] <teut> yes but algol doesnt look like python , and its static type
[01:00:25] <bjs> teut: I mean it does look very much like Python.
[01:00:44] <teut> it does? not to me
[01:00:57] <midnite> bjs: https://cdn.discordapp.com/attachments/764718200868438059/881999346269302854/dna.zip
[01:01:06] *** Quits: aead (~aead@user/aead) (Client Quit)
[01:01:08] <teut> looks more like matlab
[01:01:21] <bjs> teut: I mean matlab also kind of looks like Python.  Can you not see the similarities?
[01:01:51] <teut> -_-  matlab, I hate it
[01:02:09] <teut> I like R>>>Mathlab
[01:02:22] <teut> and I dont like R
[01:02:27] <midnite> bjs: statement I was asking you about before is near the end of the file dna.py on line 104
[01:02:53] <bjs> midnite: hmm a zip file is not a good way to distribute code to strangers on the internet
[01:02:56] *** Joins: techsurvivor (~don@86.106.121.38)
[01:03:01] <midnite> bjs: I'm open to suggestions
[01:03:14] <bjs> midnite: look i'm not distrusting you but i wouldn't get very far if i opened every zip file people sent me over the internet
[01:03:19] <midnite> like I said
[01:03:22] <midnite> open to suggestions
[01:03:23] <bjs> midnite: gist.github.com or just use bpaste (it makes multiple files)
[01:03:50] <bjs> (bpaste has a "add new file" button at the bottom).  really I just want to see what calls the function you had and what was going on
[01:04:05] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Remote host closed the connection)
[01:04:45] <bjs> teut: maybe you don't like the language but clearly they're all similar. Look at that algol code again, it has a procedure (a def) with some parameters (with some type annotations) and it has a comment (a docstring), it has assignment statements and if statements and for loops with ranges start/stop/step just like Python
[01:05:35] <midnite> bjs: https://bpa.st/TWWQ
[01:05:54] <jinsun> looks like the database is a csv.DictReader, not a dictionary, whcih means you reach the end of the csv file after the first iteration over the database
[01:05:54] <bjs> midnite: ah database is not a dict, it's a csv.DictReader
[01:06:07] <midnite> bjs: oh, yeah
[01:06:14] <bjs> midnite: when you loop over the database it "consumes" the rows, it doesn't wrap back to the start of the file at the end
[01:06:25] <bjs> midnite: maybe you want to save all the rows into a list first or something
[01:06:44] <midnite> so I can't just iterate over the same object twice in python like in C?
[01:06:50] <teut> maybe, but I cant see why its nearer to python and not c
[01:06:54] <jinsun> it depends on the object
[01:07:08] <bjs> teut: I mean it predates both languages by a long time, it's near to both
[01:07:08] <jinsun> you can iterate over lists many times
[01:07:19] <midnite> but not csv.DictReaders?
[01:07:22] <bjs> midnite: you can,  you can do it over lists.  But you can't do it over files
[01:07:33] <midnite> why not? I'm trying to understand
[01:07:36] <bjs> midnite: like in C when you read each line of the file it advances forward in the file so the next read reads the next line
[01:07:39] *** Quits: Akuli (~Akuli@87-94-109-202.bb.dnainternet.fi) (Quit: Leaving)
[01:07:41] <midnite> oh ok, right
[01:07:56] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[01:08:00] <bjs> midnite: and csv.DictReader is just a wrapper around a file really
[01:08:02] <teut> midnite there are iterators here in python
[01:08:02] <midnite> so a csv.DictReader
[01:08:04] <midnite> ah ok
[01:08:07] <midnite> got it bjs :)
[01:08:15] <midnite> thanks
[01:09:01] *** Joins: akk (~akk@174-28-98-206.albq.qwest.net)
[01:09:12] <bjs> teut: I mean you're still thinking in the mindset that features are either invented or "stolen" from 1 other language.  It doesn't work that way,  if you look back you'll see the same set of features over and over through lots of different languages.  Something like Python has little influences from all of them (and some big influences from others)
[01:10:01] *** Quits: regreg (~regreg@2a02:2f09:531a:c700:586:97e4:b5d5:795c) (Ping timeout: 250 seconds)
[01:10:03] <midnite> bjs: how could I copy the contents of a csv.DictReader into their own independent dict?
[01:10:04] <bjs> teut: like if you look at some examples of Lisp https://en.wikipedia.org/wiki/Lisp_(programming_language)#Examples it doesn't *look* like Python, but you look a bit deeper and you will start to see lots of similarities and ideas that have lived on
[01:10:11] <teut> yes I get it, like I said , I am learning new languages and will understand that slowly
[01:10:18] <bjs> midnite: again it's not a dict, it's a file.  You can save all the rows (the dicts) into a list
[01:10:32] <bjs> midnite: like `rows = list(database)` then `for d in rows: print(d)` would print each row (each dict) out
[01:10:50] <teut> yes python looks like lisp
[01:10:57] <bjs> midnite: a list is like an array, it'll load all the rows into memory and then you can loop over it many times
[01:11:05] <bjs> teut: it does?  haha,  it doesn't look very much like lisp at all
[01:11:13] <aphysically> I'm definitely going to end up with unused imports after this module splitting despite my best efforts, so I'll have to find a linter to spot it finally I guess
[01:11:19] <aphysically> probably flake8 or something
[01:11:39] <jinsun> yes flake8 is good
[01:11:43] *** Quits: y1n (~y1n@84-115-65-170.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[01:11:47] <teut> ok, so that means I m just looking at keywords and not understanding the paradigm then
[01:12:06] <bjs> teut: do you say it looks more like Lisp because of the "defun" containing "def" than the Algol one because of the "procedure"?   It's like you're just looking at the spelling of the words rather than how the programs are actually structured or the way the program executes
[01:12:06] <bjs> yes
[01:12:23] <teut> no worries, I will learn few old languages once priorities are over
[01:12:41] <bjs> teut: you don't have to learn the old dead languages, after all, they are old and dead
[01:12:50] <aphysically> jinsun: pylint seemed ok except it's soooo aggressive by default
[01:12:55] *** Joins: MikZyth (~MikZyth@188.65.242.159)
[01:13:00] <gloin> Trying to, uh, try in a for loop but unexpectedly getting unexpected indent here, why? https://bpa.st/YWGQ
[01:13:01] <teut> but they were simpler to understand and implement
[01:13:05] <bjs> teut: but maybe you shouldn't be asserting what features were "stolen" and from which language unless you do know the older languages and some of the history :P
[01:13:12] <bjs> teut: have you heard of Ada?
[01:13:19] <teut> yes
[01:13:31] *** Joins: Payam (~Payam@c188-150-219-9.bredband.tele2.se)
[01:13:34] <Repiphany> gloin: You have an extra space in front of the try-except
[01:13:38] <teut> all from Uncle Bob s videos
[01:13:48] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[01:13:50] <jinsun> aphysically: yup pylint is annoying by default, having a configuration file is a must with pylint so you can disable or change defaults
[01:13:54] <teut> that is much older one
[01:14:03] <bjs> teut: I think you shouldn't make assertions about how they were "simpler to understand and implement" if you (A) do not understand any of the older languages and (B) do not know how they were implemented
[01:14:10] <gloin> Repiphany: so I do. Hard to do Python in vim :(
[01:14:16] <bjs> teut: no Ada is newer than Algol/Lisp/Smalltalk
[01:14:22] <teut> oh no, its a pascals successsor
[01:14:23] <bjs> and is, surprisingly, not dead yet.
[01:14:30] *** Quits: vit (~vit@chello085216193138.chello.sk) (Quit: Konversation terminated!)
[01:14:35] <bjs> teut: so again, maybe you should learn more before making assertions :P
[01:14:42] <midnite> bjs: thanks for all your help!
[01:14:45] <teut> eiffel is also not dead, I saw few days ago
[01:15:03] <hodapp> whaaa
[01:15:47] <teut> yes , I get it, I will study better than thinking all this crap
[01:15:56] <hodapp> also, avoid Uncle Bob
[01:15:59] <bjs> teut: a lot of languages are still alive,  including even variations of Lisp
[01:16:29] <teut> hodapp, what about Martin Fowler then?
[01:16:38] <Payam> why isn't this `i = 0, j=1 if i==6` a valid Python syntax or `i,j=0,+j if i==6`
[01:17:03] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:17:09] <Payam> it is right?
[01:17:24] <hodapp> just avoid self-styled gurus in general
[01:17:40] <Repiphany> `j = (1 if i == 6)` what is j supposed to be assigned if the condition is false
[01:17:41] <bjs> Payam: "is it right?" do you mean you think it should be valid syntax and think you have a bug? or that you think morally it should be?  or ?
[01:17:51] <teut> yes bjs, many are alive , and people loving the paradigms or stuck with their legacy systems are keepings them alive
[01:18:07] <Payam> I think it should be. I just though of it and now when I write it my pylint doesn't complain
[01:18:13] <Payam> but I had to add a else
[01:18:31] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[01:18:40] <teut> hodapp , ok
[01:19:11] *** Joins: grnman_ (~gandalf@c-73-49-209-161.hsd1.fl.comcast.net)
[01:19:15] <Payam> no didn't work
[01:19:15] <bjs> Payam: so `i = 0, j = 1` isn't valid Python syntax even without the `if`,  but in general Python has an if-statement (`if <cond>: <body>`) and an if-expression: `<value> if <cond> else <value>`
[01:19:29] <teut> btw leaving that, I had this confusion still in python, that is multithreading( running multiple threads together) on multicores possible or not?
[01:19:31] *** Quits: volgar1x (~volgar1x@37.172.111.138) (Read error: Connection reset by peer)
[01:19:39] <bjs> teut: yes and no
[01:19:54] <teut> the docs say , GIL will only allow 1 thread to run at one time
[01:19:55] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[01:20:11] *** Joins: mexen (uid495612@user/mexen)
[01:20:16] <Payam> bjs, howabout this : `i,j=0,+j if i==6 else 5,2`
[01:20:17] <teut> so that implies thread switching like in a single core processor
[01:20:21] <Payam> it didn
[01:20:24] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[01:20:27] <bjs> teut: the docs i'm sure are much more careful and nuanced than that.  The GIL means you can have as many threads as you want, and they can run in parallel but only one thread may touch Python data structures at once
[01:20:32] <teut> the terminology is "concurrent"
[01:20:34] <Payam> it didn't work but i looks very nice in my opinion
[01:20:39] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[01:20:51] <teut> the GIL is a mutex
[01:20:54] <bjs> Payam: uh,  I can't even tell what part is supposed to be which
[01:21:07] *** Lord_of_Life_ is now known as Lord_of_Life
[01:21:08] *** Joins: georgios (~georgios@user/georgios)
[01:21:11] <Payam> bjs, what does "touching data structure"
[01:21:30] *** Joins: Pickchea (~private@user/pickchea)
[01:21:42] <teut> but what about an async function?  like a thread safe queue?
[01:21:55] <bjs> teut: yes, it's a lock.  It's a lock that protects *all* of the Python data structures.  So if two threads try access Python objects at once then one has to wait for the other to finish accessing first.
[01:21:56] <teut> that can use multiple threads I believe
[01:22:10] <bjs> teut: async functions are all in one thread usually
[01:22:27] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[01:22:39] <teut> oh so that gil must be  a member of your "Object"
[01:22:39] <bjs> Payam: is that supposed to be like `i, j = 0, (+j if i == 6 else 5)`  what is the ,2 part?
[01:22:50] <teut> of which allobjects inherit from
[01:22:57] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[01:23:01] *** Quits: rakoon (~rakoon@2a02:2149:824f:5900:2b96:47e:a2d2:4ad9) (Ping timeout: 250 seconds)
[01:23:02] <teut> from *
[01:23:05] <bjs> teut: no no,  the GIL is not a Python object, it's part of the implemantation
[01:23:41] <teut> ok
[01:23:44] <bjs> teut: it's there as part of the implementation to protect all objects, there is only 1 lock and it is called the "GIL". Anytime CPython wants to read/write a Python data structure it must hold the GIL.
[01:23:59] <bjs> teut: during big operations it can release it,  libraries can release it (e.g. numpy does)
[01:24:02] <teut> I have seen David beazley's talk and he showed the c code
[01:24:11] *** Joins: rakoon (~rakoon@2a02:2149:824f:5900:9465:636c:de47:286e)
[01:24:25] <bjs> but you can't e.g. have one thread write to one list while another thread writes to a different one.  One thread has to wait for the other to finish first.
[01:24:31] <teut> numpy runs c not python
[01:25:00] <bjs> teut: yes and that C can run in parallel because it's not interacting with Python objects once the calculations begin
[01:25:04] <Payam> bjs, https://bpa.st/IATA
[01:25:07] *** Joins: y1n (~y1n@84-115-65-170.wifi.dynamic.surfer.at)
[01:25:15] <teut> that much I know
[01:25:29] <bjs> Payam: oh it's supposed to be `i, j = (0, +j) if i == 6 else (5, 12)`
[01:25:29] <teut> so the answer is no then
[01:25:32] *** Joins: emika4 (~emika@185.207.249.217)
[01:25:45] <teut> c can run threads but python cannot
[01:25:49] <bjs> teut: okay the answer is no you cannot have two threads executing Python at the same time
[01:25:49] <Payam> bjs, ah a tuple?
[01:25:52] <teut> in parallel
[01:26:01] *** Quits: emika (~emika@185.207.249.46) (Ping timeout: 252 seconds)
[01:26:02] *** emika4 is now known as emika
[01:26:10] <bjs> Payam: yes `i, j = 0, +j` is already a tuple, you just need the parens here so it's clear which part the `if` is attached to
[01:26:30] <teut> I read somewhere that in case of the async queue you can do that but
[01:26:30] <gloin> One more question: what's the Python way to do what I'm attempting to do on line 5 here? I know "or die" is a perlism but so far I haven't figured out the clean (aka not giant stack trace trashing the console) way to exit with "just the facts" portion of the error: https://bpa.st/AXJA
[01:26:33] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:3436:cb54:f635:1e2e)
[01:26:57] <bjs> gloin: sys.exit
[01:27:07] <teut> the queue can make a copy of a list item and then function can be applied over it in a diffent thread
[01:27:07] <gloin> bjs: ty
[01:27:07] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 252 seconds)
[01:27:24] <bjs> teut: that still sounds like it's using threads so you get the same problem with the GIL, so I'm not sure how it helps
[01:27:32] <Byteflux> teut: Parallelism in Python is achieved by multiprocessing, but correct not with threads or async.
[01:27:50] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:3436:cb54:f635:1e2e) (Client Quit)
[01:28:09] <Byteflux> You'd use threads or async for concurrency in IO-bound situations where you are waiting for IO and could be spending that time doing something else while you wait
[01:28:44] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 244 seconds)
[01:28:55] *** Joins: jpic (~jpic@82.142.28.254)
[01:29:05] <jinsun> gloin: probably `raise e` might be better since you did `die(e)`
[01:29:17] <teut> ya I read some operaring system course, so during the time an interrupt occurs , rest of the tasks in the scheduler can run
[01:29:25] *** Joins: fanis30 (~anon@adsl-180.37.6.1.tellas.gr)
[01:29:40] <bjs> teut: asyncio isn't an operating system thing, it's a Python thing
[01:29:41] <aphysically> awww flake8 doesn't support pyproject.yaml config
[01:29:43] <aphysically> oh well
[01:29:58] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:5e6:167:440a:5f89)
[01:30:01] <jinsun> ya I stuff it in setup.cfg
[01:30:12] <teut> asyncio is not even a python thing
[01:30:19] <bjs> teut: asyncio is the name of a python library
[01:30:20] <teut> its a programming concept
[01:30:27] <teut> async , then
[01:30:30] <bjs> teut: Async I/O is a concept, asyncio is a library :)
[01:30:32] <Byteflux> AsyncIO event loops use select() under the hood I think? Which could mean some OS-specific behavior
[01:30:43] <teut> async Input output?
[01:30:46] <bjs> teut: yes async or really just asynchronous is a very old concept that captures a lot of things
[01:30:48] <bjs> teut: yes
[01:31:04] *** Joins: the4oo4 (~the4oo4@shenzhou.whatbox.ca)
[01:31:06] <phillhocking> hey, i'm on ubuntu 20.04 only using apt/pip to install stuff... and it won't let me create a virtual environment
[01:31:09] <phillhocking> python3: can't open file 'venv': [Errno 2] No such file or directory
[01:31:21] <phillhocking> i'm guessing that something is wrong in $PATH
[01:31:30] <teut> I know the OS model of process scheduling where OS sends a task from the queue to a processor
[01:31:32] <bjs> phillhocking: did you run `python3 venv` by mistake instead of just `venv` or `python3 -m venv`
[01:31:47] *** Quits: stoneware (~stoneware@user/stoneware) (Quit: Ping timeout (120 seconds))
[01:31:55] <teut> isnt thats what async is ?
[01:32:08] <bjs> teut: async just means asynchronous,  it means you do one thing while another one waits
[01:32:28] <phillhocking> bjs: `venv` gives me command not found did you mean env from deb coreutils
[01:32:32] <jjhoo> phillhocking: apt install python3-venv ?
[01:32:37] <bjs> teut: but yes the usual way you implement it is with queues and a scheduler, when one goes to wait it gets put on a queue and then switches to another
[01:32:49] <bjs> phillhocking: then probably you wanted `python3 -m venv`   if Ubuntu didn't install a `venv` command
[01:33:03] <phillhocking> jjhoo: that's the one i think lol
[01:33:10] <phillhocking> venvb
[01:33:10] <teut> I m sure about it that async queues use threads at the consumer end
[01:33:14] <bjs> teut: this is how threads are implemented inside the OS, and this is how asyncio `async def`s are impelemented inside asyncio
[01:33:59] <phillhocking> weird, venv still doesn't work even after invoking the shell again after the apt install
[01:33:59] <teut> in a David Beazly talk he tells how to make this Async Queue from scratch
[01:34:02] <bjs> teut: I'm not sure what you mean by that, asyncio (the library) probably does have some threads hanging around for its various data structures sure.  Where are you going with this?
[01:34:07] <phillhocking> but the python3 -m venv seems to do the trick
[01:34:20] <bjs> phillhocking: `python3 venv` won't ever work that's telling python3 to run the file called "venv"
[01:34:25] *** Joins: stoneware (~stoneware@user/stoneware)
[01:34:50] <teut> ok, I ll have to find more stuff, so async is still unclear to me
[01:35:51] <bjs> teut: I mean you pretty much already have it. async means asynchronous: you can do something else while you wait for something else to happen.  A common way to do this is to have a queue of threads/tasks(coroutines) that are waiting to be scheduled
[01:35:57] *** Quits: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net) (Quit: See you on the flip side.)
[01:36:07] <Byteflux> Async I/O is quite often single threaded. It is often characterized as an opposing model for multithreaded IO.
[01:36:45] <bjs> teut: Your OS will have maybe a queue of threads for each CPU. Then one of those threads might be Python, and inside that Python thread is asyncio which has its own thread of `async def`s that the Python program then switches between as well
[01:36:47] <teut> no, but the latest time I heard about async was that the frameworks abstract out the stuff
[01:37:02] <teut> and they can use the same OS model to parallelize your code
[01:37:37] <bjs> teut: "no" to what?  and yes,  it's using the same model and yes it can parallelize some things (but like we say, not everything) and yeah you can use asyncio (for example) without thinking about the queues and scheduling going on
[01:37:40] <bjs> so it's fairly abstracted
[01:37:49] <midnite> is there some simple way to create a truly seperate, independent copy of a list, besides creating a new, empty list and iterating over the old list, putting its contents into the new list bit by bit?
[01:38:07] <bjs> midnite: `new_list = old_list.copy()`   (or often written just `new_list = list(old_list)`
[01:38:17] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[01:38:18] <teut> if I have to explain it to an interviewer what do I say?
[01:38:20] <bjs> Note that this only copies the list, not the things in the list.
[01:38:33] <bjs> teut: you tell them what you know and explain where you're still unsure about things
[01:38:33] <Byteflux> If you have to explain "what is async I/O?"
[01:38:36] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:39:03] <teut> ya, isnt that pretty standard in js?
[01:39:23] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[01:39:25] <midnite> bjs: that doesn't appear to work for me in this case
[01:39:39] <bjs> midnite: what does "doesn't appear to work" mean :P
[01:39:41] <teut> maybe but in python, but people are moving from threads to this task queue async
[01:40:01] <bjs> midnite: is there a funny smell, is there smoke, do you hear a distant rumble :D
[01:40:04] <midnite> bjs: see lines 99 thru 107 here: https://bpa.st/RLAA
[01:40:11] <midnite> bjs: all of the above
[01:40:15] <bjs> :)
[01:40:47] <Gustavo6046> can unit tests be applied to life itslef
[01:40:47] <jinsun> it doesn't copy the dicts inside the list
[01:40:58] <bjs> midnite: there's a lot of comments here, what am i supposed ot be looking at? What is happening that is wrong
[01:40:59] <aphysically> huh, TIL https://docs.python.org/3/faq/programming.html#why-are-default-values-shared-between-objects
[01:41:15] <Byteflux> teut: Threads are a bit unique in Python as you pointed out they are not the same as OS threads, but OS threads will always be relevant and useful. If you need the power of OS threads in Python, you'd typically use multiprocessing instead. Parallelism and concurrency are not mutually exclusive concepts, they have benefits over each other and can be combined as well.
[01:41:56] <jinsun> midnite: you want copy.deepcopy(database) if you also want the dicts inside of the list also to be copied
[01:42:08] <bjs> Byteflux: Python threads *are* OS threads, they're just running a Python interpreter in each and all those threads share the same global lock (the GIL).
[01:42:31] *** Quits: kevinlc (~kevinalh@2800:200:e8d0:20b::4) (Ping timeout: 252 seconds)
[01:42:37] <teut> ya Python uses pthreads
[01:42:53] <teut> c has that lib
[01:43:05] <bjs> That's why if you make multiple threading.Thread's it'll look like only 1 is executing Python at a time (because it is) but if one touches a file or does a web request or some other I/O the OS will happily reschedule it later and run a different Python thread at that time
[01:43:10] <Byteflux> bjs: Ah, right. Well I guess the point still remains that the GIL is a big restraint.
[01:43:27] <phillhocking> so now i've created my venv, installed the required modules, but `pip freeze` has a whole bunch of stuff i didn't install and just came with base
[01:43:40] <teut> they're just running a Python interpreter in each   ????????
[01:43:46] <phillhocking> i'm trying to come up with a requirements.txt for just my project, ergo the venv lol
[01:43:47] <midnite> bjs: see line 96 https://bpa.st/FV2Q
[01:43:50] <Byteflux> Where CPython decides to lock every access instead of you getting to have more fine grained control over locks
[01:44:05] <bjs> teut: I know!  wait till you find out that each CPU is running an entire OS :)
[01:44:13] <teut> the  python interpreter is  your  "python.exe" executable on windows
[01:44:19] <teut> python  abc.py
[01:45:02] <midnite> jinsun: thanks, that did what I want (finally)
[01:45:22] <bjs> teut: yes and if you make a threading.Thread you'll have two threads running `python` (but obviously, sharing the same memory)
[01:45:23] <teut> bjs, I studied the OS course and they told the full process of the boot
[01:45:27] *** Quits: jasper_ (~user@styria.daemonized.org) (Ping timeout: 240 seconds)
[01:45:40] <bjs> midnite: I can see the line, what am I supposed to observe?
[01:45:46] *** Quits: jan1 (~jan@user/jan1) (Quit: WeeChat 3.0.1)
[01:45:49] *** Quits: blingrang_ (~blingrang@user/blingrang) (Ping timeout: 252 seconds)
[01:45:54] <midnite> bjs: never mind :)
[01:46:07] <bjs> okay I guess jinsun guessed correctly what the problem was :P
[01:46:22] <teut> they said that OS starts on one processor
[01:46:26] <phillhocking> how do i create a requirements.txt that's just for my venv?
[01:46:36] *** Joins: regreg (~regreg@2a02:2f09:531a:c700:d9c1:ba82:8211:579f)
[01:46:51] <Gustavo6046> why don't file sharing websites preview .wad, they could read it as an archive (a list of lump names), and if they wanted to go an extra mile also auto-detect if it had any Doom-format levels and render previews of the linedefs in them :o
[01:46:56] <Gustavo6046> it's a pretty simple file format tbh
[01:47:02] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[01:47:12] <teut> then it pauses, data stores to ram , and then another process takes the cpu , OS suspends, then OS is started back
[01:47:30] <nedbat> phillhocking: put it in your repo, and only use it for your venv
[01:47:36] <teut> it was comple
[01:47:38] <teut> x
[01:48:03] <phillhocking> nedbat: i did just that, but pip freeze has all the stuff installed in base
[01:48:45] <nedbat> phillhocking: how did you make your venv?
[01:49:33] *** Joins: kevinlc (~kevinalh@2800:200:e8d0:20b::4)
[01:50:05] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[01:50:10] <phillhocking> nedbat: https://gist.github.com/phillhocking/13810c9f073fc2921a992abdfb6fa792
[01:50:18] <bjs> teut: it's a complex system that all fits together
[01:50:41] <teut> I ll have to see the OS course a couple of times
[01:50:42] <nedbat> phillhocking: that doesn't show how you made the venv in the first place.
[01:50:56] <phillhocking> let me refresh it, one sec sorry i didn't grab the right paste
[01:51:18] <teut> the boot up part contained so much c code that I skipped mojority of it
[01:51:25] <teut> majority
[01:51:31] <Payam> any knows what those dropdown menus called that multiple choices can be selected?
[01:51:34] *** Joins: IgIgOrzoy (~IgIgOrzoy@user/igigorzoy)
[01:52:26] *** Joins: d0ku (~d0ku@178.43.56.75.ipv4.supernova.orange.pl)
[01:52:33] *** Joins: aead (~aead@user/aead)
[01:52:53] <Payam> I meant combobox
[01:52:58] <teut> thanks, I got enough information with what I can answer quite many questions.
[01:53:14] <phillhocking> nedbat: plz refresh
[01:53:29] *** Parts: akk (~akk@174-28-98-206.albq.qwest.net) (+++)
[01:53:38] <jinsun> Payam: Qt jut calls them QComboBox https://doc.qt.io/qtforpython/PySide6/QtWidgets/QComboBox.html
[01:54:31] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[01:54:40] *** Quits: midnite (~human@user/midnightlantern) (Ping timeout: 240 seconds)
[01:55:19] <nedbat> phillhocking: hmm, i wonder if this is a venv vs virtualenv thing?
[01:55:32] <nedbat> phillhocking: another option is to manually create a requirements.txt
[01:56:16] <phillhocking> nedbat: sure thing, i guess its just aiohttp and aiofiles
[01:56:53] <phillhocking> i just was trying to use pip freeze so i looked like i knew what i was doing lolol
[01:57:17] <rud0lf> what's the best way of informing one of many identical worker threads it should terminate? i only can think of dictionary's "thread-name: bool_stop"
[01:57:23] *** Quits: IgIgOrzoy (~IgIgOrzoy@user/igigorzoy) (Quit: Client closed)
[01:58:09] <rud0lf> i there a way to set specific thread local variable?
[01:59:19] <jinsun> rud0lf: https://docs.python.org/3/library/threading.html#thread-local-data ?
[02:01:24] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:01:47] <nedbat> rud0lf: you can't set another thread's thread-local variable.
[02:02:03] <nedbat> rud0lf: do you have a queue you are using to communicate with the thread already?
[02:03:30] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[02:05:40] *** Quits: sillyboots (~richdyl@168.208.215.217) (Ping timeout: 240 seconds)
[02:05:55] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[02:05:55] *** Quits: shabius (~shabius@2a0e:1c80:2:1021::1001) (Ping timeout: 250 seconds)
[02:06:21] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Ping timeout: 250 seconds)
[02:06:27] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 244 seconds)
[02:06:34] *** Joins: ayusta (Thunderbir@gateway/vpn/protonvpn/ayustae)
[02:07:09] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[02:07:39] *** Quits: rakoon (~rakoon@2a02:2149:824f:5900:9465:636c:de47:286e) (Ping timeout: 250 seconds)
[02:07:44] *** Quits: fanis30 (~anon@adsl-180.37.6.1.tellas.gr) (Quit: WeeChat 3.2)
[02:08:28] <rud0lf> nedbat: i'm still designing it in my head
[02:08:53] *** ayusta is now known as ayustae
[02:09:02] <rud0lf> i want threaded RFCOMM bluetooth consumer that dies if there's new connection
[02:09:13] <rud0lf> which means communication failed and it reconnected
[02:09:33] *** Quits: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net) (Ping timeout: 244 seconds)
[02:09:46] *** Joins: i0e (~is0ke3@user/is0ke3)
[02:10:20] <rud0lf> so i think one queue per thread with tuple (CMD_DATA, data) and (CMD_DIE, None)
[02:10:57] <rud0lf> thank you for the link, jinsun, i shall read it
[02:11:07] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 252 seconds)
[02:11:27] *** Joins: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net)
[02:11:33] *** Quits: y1n (~y1n@84-115-65-170.wifi.dynamic.surfer.at) (Ping timeout: 250 seconds)
[02:11:47] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[02:12:38] *** Quits: sazawal (~sazawal@122.162.80.16) (Quit: Leaving)
[02:12:56] *** Joins: anddt (~anddt@net-130-25-114-32.cust.vodafonedsl.it)
[02:14:11] <gloin> Is this a valid pattern for conditionally populating a dict? https://bpa.st/SZPQ
[02:14:29] <bjs> gloin: no that doesn't look like valid syntax
[02:14:49] <bjs> gloin: you can go `foo = {}` then just `if some_condition: foo["bar"] = baz`
[02:15:13] <gloin> bjs: that'll work
[02:15:27] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:15:41] <gloin> be neat to be able to put conditionals in the definition though, fewer LOC
[02:17:28] <p-i-> I've set up a 'hello world' webserver using starlette on an EC2 ubuntu box. `uvicorn demo:app --port 80 --host 0.0.0.0` and browser to http://35.74.240.174/ works.
[02:17:31] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Quit: Leaving...)
[02:18:13] <p-i-> But if I try `--port 443` with https://... I get errors from the server stderr
[02:18:32] <p-i-> Has anyone bumped into this one?
[02:18:34] *** Quits: cedric (~cedric@2a01:cb11:867:c200:c50c:54e6:aad6:bd26) (Quit: Konversation terminated!)
[02:20:22] <p-i-> https://bpa.st/HVNA super-unhelpful output from Starlette
[02:20:51] <jinsun> well if your code is assuming http and you try to access using https it won't work
[02:21:05] *** Quits: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa) (Ping timeout: 250 seconds)
[02:21:48] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[02:22:13] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[02:22:38] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Quit: leaving)
[02:23:53] *** Joins: mago (~mago@87.125.58.247)
[02:24:00] <mago> Hello need help understanding this code:
[02:24:01] <mago> https://www.codegrepper.com/code-examples/python/python+split+video+into+frames
[02:24:02] *** Joins: y1n (~y1n@84-115-65-170.wifi.dynamic.surfer.at)
[02:24:07] *** Quits: newpy (~newpy@2601:280:4381:1390:d8a2:4368:1fe2:a8e3) (Quit: Leaving)
[02:24:10] <jinsun> no idea how you would do https with starlette though, at the socket levels you have to wrap the sockets with https://docs.python.org/3/library/ssl.html#ssl.SSLContext.wrap_socket, but starlette would have something to do all that magically for you
[02:24:26] *** Joins: Fedorasan (~fedorasan@user/fedorasan)
[02:24:28] <mago> The first snippet, i run it, all goes fine, but where are the frames saved? How do i retrieve them?
[02:24:50] <phillhocking> so hey, i know you are supposed to do unit tests before writing an application...
[02:24:52] <mago> Its to split an mp4 vido into frames, it seems to run smooth but dont know where are they saved..
[02:25:19] <p-i-> I did try to add some CORS code https://bpa.st/IP7A but it doesn't seem to have done anything.
[02:25:22] <phillhocking> but what unit tests do you think would be helpful for this particular project? https://github.com/phillhocking/package_statistics/tree/dev
[02:25:49] <p-i-> I wonder if I need to fiddle with "let's encrypt" and get an SSL cert on the remote box.
[02:26:12] *** Joins: ssbr` (~ssbr@python/site-packages/ssbr)
[02:26:45] *** Joins: nomic (~nomic@185.217.117.169)
[02:27:16] *** Joins: elkclone (~elkclone@user/elkclone)
[02:27:53] <p-i-> yup https://www.uvicorn.org/deployment/#running-with-https I need a cert
[02:28:22] *** Quits: ssbr_ (~ssbr@python/site-packages/ssbr) (Ping timeout: 245 seconds)
[02:28:44] *** Joins: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[02:31:57] *** Joins: Achylles (~Achylles_@2804:431:d725:af0f:65ee:a58:ea07:2607)
[02:36:08] <phillhocking> i mean really the only thing i can think of is having expected input be caps or something
[02:36:14] *** Quits: tty14 (~tty14@152.67.7.96) (Remote host closed the connection)
[02:37:12] *** Joins: tty14 (~tty14@152.67.7.96)
[02:37:21] *** Quits: mago (~mago@87.125.58.247) (Quit: Client closed)
[02:39:03] *** Quits: montxero (~user@149.167.149.74) (Read error: Connection reset by peer)
[02:39:16] *** Joins: montxero (~user@149.167.149.74)
[02:40:04] <jinsun> phillhocking: maybe this will help getting started https://bit.ly/pytest3
[02:41:40] *** Joins: jasper_ (~user@styria.daemonized.org)
[02:43:00] <phillhocking> thanks jinsun i'll check it out
[02:43:22] *** Quits: anddt (~anddt@net-130-25-114-32.cust.vodafonedsl.it) (Quit: Client closed)
[02:43:31] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[02:44:01] *** Quits: goepsilongo_ (~goepsilon@2603-7000-ab00-62ed-d076-a878-a2d3-a90b.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:45:13] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 252 seconds)
[02:45:39] *** Quits: jmft2 (~jmft2@81.149.115.87.dyn.plus.net) (Quit: This computer has gone to sleep)
[02:45:57] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[02:46:12] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[02:46:46] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[02:47:12] *** Quits: teut (~teut@106.212.2.35) (Quit: Connection closed)
[02:47:59] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:48:55] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[02:50:26] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[02:51:58] <nedbat> phillhocking: btw, """docstrings""" are only for describing the function, class, or module.  Other comments should be like this:   # comment
[02:52:26] <elkclone> werd
[02:52:46] <phillhocking> nedbat: thanks! i'm still super new at this whole thing lol
[02:52:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 244 seconds)
[02:53:02] <phillhocking> and i'm trying to do it all the 'right' way from day one, but its a lot of stuff to try and integrate
[02:53:16] *** Joins: masoudd (~masoudd@user/masoudd)
[02:53:26] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[02:53:46] *** Joins: hakeem (~hakeem@user/hakeem)
[02:53:50] *** Quits: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) (Quit: Leaving.)
[02:54:34] *** Quits: techsurvivor (~don@86.106.121.38) (Ping timeout: 252 seconds)
[02:55:14] *** Joins: fikran (~fikran@user/fikran)
[02:57:28] <nedbat> phillhocking: another small point: your disp() function takes "f" (why f?) and only uses the first element of it, and the only place you call it, you make a list of the data you have.
[02:58:10] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[02:58:34] <phillhocking> nedbat: i thought that `f` was like a python thing for throwaway variables
[02:58:59] <nedbat> phillhocking: 1) is that a throwaway variable? 2) no, f is often short for "file" when opening a file.
[02:59:27] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[03:00:04] <phillhocking> nedbat: understood, i'll change it
[03:00:13] *** Joins: zepolen (~zepolen@2a02:587:8611:2428:4221:8a9a:ad2c:6861)
[03:00:35] <greatgatsby> any recommendations to benchmark python on a machine?  Not my code, I want to compare two installs, different OS, etc.  Some nice pip installable benchmark package?
[03:00:45] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[03:00:49] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:01:02] *** Quits: Payam (~Payam@c188-150-219-9.bredband.tele2.se) (Quit: Leaving)
[03:04:46] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:05:34] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[03:05:40] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 240 seconds)
[03:05:41] <Pilate> it comes with timeit built in
[03:05:48] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[03:06:01] *** Joins: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa)
[03:08:00] *** Gustavo6046_ is now known as Gustavo6046
[03:08:47] *** Quits: zepolen (~zepolen@2a02:587:8611:2428:4221:8a9a:ad2c:6861) (Remote host closed the connection)
[03:09:22] *** Quits: beencubed (~beencubed@209.131.238.248) (Ping timeout: 252 seconds)
[03:09:40] *** Joins: jmft2 (~jmft2@81.149.115.87.dyn.plus.net)
[03:10:43] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Quit: leaving)
[03:11:21] *** Quits: y1n (~y1n@84-115-65-170.wifi.dynamic.surfer.at) (Ping timeout: 250 seconds)
[03:11:30] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[03:12:09] *** Quits: sysRPL (~sysRPL@ec2-3-17-180-170.us-east-2.compute.amazonaws.com) (Ping timeout: 248 seconds)
[03:12:52] *** Joins: Karatsuba (~jamer05@user/karatsuba)
[03:14:10] *** Quits: kevinlc (~kevinalh@2800:200:e8d0:20b::4) (Ping timeout: 240 seconds)
[03:14:39] *** Joins: romanholtwick (~romanholt@200116b804f0dc006a6d40745f39d4a0.dip.versatel-1u1.de)
[03:15:43] *** Joins: Atque (~Atque@user/atque)
[03:17:58] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:7d60:692:8362:ee4b)
[03:19:10] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[03:19:35] *** Quits: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa) (Ping timeout: 250 seconds)
[03:21:29] *** Quits: foureyes (foureyes@brought.to.you.by.bnc4free.com) (Quit: Leaving)
[03:22:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[03:23:15] *** Quits: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee) (Ping timeout: 276 seconds)
[03:23:20] *** Joins: y1n (~y1n@84-115-65-235.wifi.dynamic.surfer.at)
[03:23:57] *** Quits: d0ku (~d0ku@178.43.56.75.ipv4.supernova.orange.pl) (Ping timeout: 244 seconds)
[03:24:16] <romanholtwick> hey, i just started with python for a camera project (zelda pictograph box) and i need help with button pushes. i need to use a specific button but while testing it always registers as 2 or 3 pushes. i want to make python wait for a second after it registers a push before it registers the next one. google only shows examples for how to make python
[03:24:17] <romanholtwick> wait UNTIL a button is pushed.
[03:24:44] *** Joins: beencubed (~beencubed@209.131.238.248)
[03:25:30] *** Quits: Gurkenglas (~Gurkengla@dslb-088-064-053-140.088.064.pools.vodafone-ip.de) (Ping timeout: 244 seconds)
[03:25:30] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 244 seconds)
[03:26:05] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:26:10] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[03:27:05] *** Joins: cjb (~cjb@user/cjb)
[03:27:17] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.2)
[03:27:45] *** Quits: c10l (~c10l@89.34.167.207) (Quit: The Lounge - https://thelounge.chat)
[03:28:16] *** Joins: c10l (~c10l@89.34.167.207)
[03:28:22] <ens> romanholtwick: i'm guessing here but you could record the current timestamp when you get a button press, and then compare it with the timestamp you got from the last button press. if the difference is too little then ignore.
[03:28:56] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:7d60:692:8362:ee4b) (Quit: Leaving)
[03:29:00] <masoudd> The name of it is debouncing button press
[03:29:28] <masoudd> The tiny contacts in the button are slamming into eachother and bouncing a few times
[03:29:30] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:7d60:692:8362:ee4b)
[03:29:30] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:7d60:692:8362:ee4b) (Client Quit)
[03:29:37] *** Joins: markb_one (~markb1@2600:1700:eb40:7ecf:7d60:692:8362:ee4b)
[03:30:08] *** Quits: markb_one (~markb1@2600:1700:eb40:7ecf:7d60:692:8362:ee4b) (Read error: Connection reset by peer)
[03:30:31] <masoudd> You don't have to do it in software. If you have access to the button and its pins you can do it with a few electrical components
[03:31:21] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[03:31:25] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[03:32:25] *** Quits: ivan_ (~Ivyy@2001:a62:483:bf01:2a66:fc03:b1bf:9cff) (Read error: Connection reset by peer)
[03:32:34] *** Joins: iflema (~ian@user/iflema)
[03:33:12] <romanholtwick> masoudd thats exactly the problem. but im afraid i cant use another button for this so i was looking for a simple software solution. i will search for some suggestions (hardware and software) with this keyword.
[03:33:25] *** Gustavo6046_ is now known as Gustavo6046
[03:33:48] <masoudd> There is nothing wrong with the button. It's normal to bounce
[03:34:48] <masoudd> You can do it in software or hardware. Depends on which way you're more comfortable with
[03:36:40] <ens> yeah for debouncing hardware just stick a small cap on the line. if that's an option.
[03:36:50] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:39:19] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:39:22] *** Quits: romanholtwick (~romanholt@200116b804f0dc006a6d40745f39d4a0.dip.versatel-1u1.de) (Ping timeout: 256 seconds)
[03:39:30] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[03:39:40] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 240 seconds)
[03:39:56] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:40:46] *** Quits: stocom0988778 (~sam@82-132-219-222.dab.02.net) (Read error: Connection reset by peer)
[03:40:46] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[03:41:50] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[03:41:51] *** Joins: stocom0988778 (~sam@82-132-229-222.dab.02.net)
[03:43:47] *** Quits: davor (~davor@user/davor) (Ping timeout: 240 seconds)
[03:43:55] *** Joins: kevinlc (~kevinalh@2800:200:e8d0:20b::4)
[03:44:10] <hsv> Hi, i'm using this to decode a packed struct with bitfields - https://github.com/iotile/structpp
[03:44:29] *** Joins: davor (~davor@user/davor)
[03:44:55] <hsv> but it does not allow unpacking more than 8-bytes chunks, afaict.
[03:46:21] <hsv> so i end up with chunk1.val1, chunk1.val2, chunk1.val3, ... chunk2.val.., etc.
[03:46:28] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[03:46:56] <hsv> is there a way to 'merge' these back together?
[03:47:00] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[03:49:01] *** Quits: junktext (~junktext@109.201.152.169) (Ping timeout: 252 seconds)
[03:50:47] <InPhase> hsv: Perhaps b''.join(...)
[03:51:26] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[03:51:31] <InPhase> hsv: The correctness of that depends on what you're actually getting as an output.
[03:51:45] <InPhase> But it will work for "8-byte chunks".
[03:52:19] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 252 seconds)
[03:52:34] *** Quits: montxero (~user@149.167.149.74) (Read error: Connection reset by peer)
[03:52:48] *** Joins: montxero (~user@149.167.149.74)
[03:53:00] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[03:55:09] *** Joins: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[03:55:44] <hsv> the code is like..
[03:56:00] <hsv> chunk1 = structpp.unpack("<Q{val1: 4, val2: 4, val3: 8, ...}", input[0:8])
[03:56:10] *** Quits: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Remote host closed the connection)
[03:56:22] <hsv> chunk2 = structpp.unpack("<Q{val1: 5, val2: 1, val3: 2, ...}", input[8:15])
[03:56:45] *** Joins: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[03:57:36] <hsv> actually calling them val1, val2, etc is a bad example, sorry.
[03:57:48] <hsv> the elements all have unique names.
[03:57:49] *** Joins: Ivyy (~Ivyy@2001:a62:483:bf01:f762:dab5:9a59:d364)
[03:58:08] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:58:34] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[03:59:11] <hsv> the problem is they must be referenced as chunk1.foo, chunk1.bar, chunk2.baz, etc.
[04:00:01] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[04:00:54] *** Joins: odoood (~odoood@2601:c8:c003:a550::7)
[04:01:11] *** Quits: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 250 seconds)
[04:03:25] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[04:04:30] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[04:06:52] *** Joins: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f)
[04:07:45] <Repiphany> getattr(chunk1, 'foo')
[04:08:57] *** Quits: Ivyy (~Ivyy@2001:a62:483:bf01:f762:dab5:9a59:d364) (Remote host closed the connection)
[04:09:55] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[04:10:28] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 252 seconds)
[04:11:49] *** Joins: Wulf (~Wulf@user/wulf)
[04:12:00] *** Quits: y1n (~y1n@84-115-65-235.wifi.dynamic.surfer.at) (Ping timeout: 244 seconds)
[04:14:19] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 252 seconds)
[04:14:34] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:7d60:692:8362:ee4b)
[04:14:53] *** Joins: markb_one (~markb1@2600:1700:eb40:7ecf:7d60:692:8362:ee4b)
[04:15:19] *** Quits: markb_one (~markb1@2600:1700:eb40:7ecf:7d60:692:8362:ee4b) (Remote host closed the connection)
[04:15:21] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:7d60:692:8362:ee4b) (Client Quit)
[04:15:37] <hsv> what i have is chunk1.foo, chunk1.bar, chunk2.baz, ... chunkN.etc.
[04:15:50] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:7d60:692:8362:ee4b)
[04:16:08] <hsv> what i would like: output.foo, output.bar, output.baz, output.etc
[04:17:06] <hsv> failing that, a method to disect a byte array into bitfields without the constraint of max 8-byte units.
[04:17:45] <Repiphany> struct has iter_unpack if that's what you mean
[04:19:32] <hsv> struct can only handle byte-aligned members.
[04:20:03] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[04:21:24] <hsv> structpp adds the ability for bitfields (i.e. non-aligned, arbitrary length)
[04:22:01] *** Joins: frozensoil (~ddhanak@bras-base-lnglpq1516w-grc-01-74-12-204-141.dsl.bell.ca)
[04:22:55] <hsv> but, afaict, it is constrained to max 8-byte units.
[04:23:09] *** Joins: arinov (~arinov@213.194.126.155)
[04:23:48] <Repiphany> Presumably you need to do <QQ... or whatever
[04:24:14] <hsv> oh, interesting.. i will try that.
[04:24:20] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Quit: Leaving)
[04:28:04] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[04:28:08] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:28:15] *** Quits: frostschutz (~frostschu@2a01:c23:8470:6000:5c9:e6d8:6dc1:3ce0) (Remote host closed the connection)
[04:28:29] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 250 seconds)
[04:29:45] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[04:30:25] *** Joins: p-i-_ (~Ohmu@2403:6200:8870:cca9:980e:ef50:735d:2516)
[04:31:22] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[04:33:41] *** Quits: p-i- (~Ohmu@2403:6200:8870:cca9:c4ac:50b6:4385:193) (Ping timeout: 250 seconds)
[04:34:01] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Client Quit)
[04:34:16] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[04:35:32] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[04:37:49] *** Joins: zebrag (~chris@user/zebrag)
[04:37:50] <hsv> the first 'Q' effectively just skips 8-bytes.
[04:45:32] *** Joins: Barones (~Barones@2804:214:8192:e7a4:ddcb:b8ad:dfa6:c7bd)
[04:46:56] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[04:47:28] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[04:49:04] *** Joins: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net)
[04:51:12] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[04:51:43] *** Quits: Barones (~Barones@2804:214:8192:e7a4:ddcb:b8ad:dfa6:c7bd) (Ping timeout: 252 seconds)
[04:53:22] *** Quits: odoood (~odoood@2601:c8:c003:a550::7) (Ping timeout: 252 seconds)
[04:54:46] *** Joins: midnite (~human@user/midnightlantern)
[04:57:47] *** Joins: zebrag (~chris@user/zebrag)
[04:59:30] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:00:40] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 240 seconds)
[05:01:20] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.2)
[05:01:25] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[05:01:34] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi) (Ping timeout: 252 seconds)
[05:01:35] *** Quits: midnite (~human@user/midnightlantern) (Quit: midnite)
[05:01:40] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 240 seconds)
[05:04:47] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:3436:cb54:f635:1e2e)
[05:04:55] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[05:05:19] <stewie925> hi guys, is there a selenium-python IRC channel?
[05:06:53] <domhnall> stewie925: #selenium,   they have a slack channel also.
[05:07:12] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2)
[05:07:21] <stewie925> thank you domhnall
[05:09:21] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Ping timeout: 244 seconds)
[05:10:26] *** Joins: khrbt (~znc@user/khrbt)
[05:11:06] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Quit: leaving)
[05:13:43] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[05:18:18] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[05:22:06] *** Quits: Achylles (~Achylles_@2804:431:d725:af0f:65ee:a58:ea07:2607) (Remote host closed the connection)
[05:22:27] *** Joins: zebrag (~chris@user/zebrag)
[05:24:30] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[05:25:23] *** Joins: frost (~frost@59.71.240.119)
[05:30:25] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:33:44] *** Joins: jazzy (~jaziz@2600:380:4452:a3ec:1dd5:e36f:ac02:9c83)
[05:33:58] *** Joins: akaWolf (~akaWolf@akawolf.org)
[05:34:11] *** Joins: vlm (~vlm@user/vlm)
[05:34:58] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[05:38:17] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 244 seconds)
[05:40:51] *** Quits: tm007 (uid287041@id-287041.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[05:43:11] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[05:44:27] *** Joins: Julian (~tos9@python/site-packages/Julian)
[05:45:04] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 252 seconds)
[05:47:34] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[05:48:04] *** Joins: sharperguy__ (~sharpergu@2001:16b8:5c88:6b00:e48:efb5:82f0:c768)
[05:49:10] *** Quits: regreg (~regreg@2a02:2f09:531a:c700:d9c1:ba82:8211:579f) (Ping timeout: 240 seconds)
[05:50:34] *** Quits: sharperguy_ (~sharpergu@2001:16b8:5cf2:5b00:2633:59f3:621a:18de) (Ping timeout: 252 seconds)
[05:51:28] *** Joins: emika0 (~emika@83.136.182.17)
[05:51:31] <mawk> round(0.5) == 0
[05:51:32] <mawk> why??
[05:51:41] *** Quits: emika (~emika@185.207.249.217) (Ping timeout: 250 seconds)
[05:51:41] *** emika0 is now known as emika
[05:51:48] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[05:52:13] *** Quits: davor (~davor@user/davor) (Ping timeout: 252 seconds)
[05:52:44] *** Joins: davor (~davor@user/davor)
[05:53:17] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[05:53:27] <mawk> the closest integer is 1
[05:53:38] <nedbat> mawk: it's equidistant from 0 and 1
[05:54:04] <mawk> yes
[05:54:10] <nedbat> so why not 0?
[05:54:36] <mawk> but 0.0, 0.1, 0.2, 0.3, 0.4 → 0
[05:54:59] <mawk> and 0.5, 0.6, 0.7, 0.8, 0.9 → 1
[05:55:16] <grym> that's one set of rounding rules
[05:55:24] <grym> as it happens, it's not the one python uses
[05:56:19] <grym> (python rounds to even, and, well, 0's even)
[05:56:41] *** Quits: Shanzem_ (~Shanzem@86.31.109.147) (Quit: sudo Shanzem -lol -updoot -karma -gold >/dev/lies)
[05:57:03] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:3436:cb54:f635:1e2e) (Ping timeout: 256 seconds)
[05:57:38] <nedbat> mawk: this might bother you more:  round(1.5) -> 2
[05:57:44] *** Joins: Fiji (~Fiji@user/fiji)
[05:57:49] *** Joins: Barones (~Barones@2804:214:8192:e7a4:ddcb:b8ad:dfa6:c7bd)
[05:57:52] *** Joins: Pandadub (~Barones@189.40.77.138)
[05:58:08] <nedbat> i am surprised that round() doesn't have an option for the rule to use
[05:58:08] <grym> https://docs.python.org/3/library/functions.html?highlight=round#round  has the details
[05:58:38] <grym> mawk: ^
[05:58:56] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 250 seconds)
[06:00:20] <mawk> thanks
[06:00:28] *** Quits: ssbr` (~ssbr@python/site-packages/ssbr) (Ping timeout: 252 seconds)
[06:01:17] <mawk> yeah nedbat so I use (x + 0.5)//1
[06:02:43] <nedbat> mawk: clever
[06:03:19] <aphysically> I guess my next step should be understanding nox, and then build up my understanding of pytest and linters on top of that
[06:03:37] <mawk> you mean of pylint
[06:03:42] <nedbat> aphysically: why nox?
[06:03:52] <seanicus> i mean i learned in school that .5 always rounds up.  but then later on i learned with sigfigs, .5 rounds up if the digit before is either even or odd
[06:04:32] <aphysically> nedbat: do you suggest something else? I just saw it mentioned a few times
[06:04:44] <mawk> which way to round is encoded in the round operation itself usually seanicus
[06:04:52] <nedbat> aphysically: i'm not saying don't use it.  i just wondered why you were using it.
[06:04:58] *** Joins: Julian (~tos9@python/site-packages/Julian)
[06:06:04] <aphysically> well I'm not using anything yet, my intent is to build up to a project that has: unit tests, documentation (possibly generated), maybe some sort of CI?, some sort of automation of linting tasks maybe
[06:06:41] <aphysically> I don't really have any strong opinions how this should be done, except for just trying to get familiar with the most common/suggested ways to do things
[06:07:01] *** Joins: audiocat (~audio@2603-8081-1801-3bb5-e3a3-6617-06e6-05c7.res6.spectrum.com)
[06:07:36] <nedbat> aphysically: maybe i don't understand what nox does
[06:07:44] *** Quits: aead (~aead@user/aead) (Ping timeout: 244 seconds)
[06:07:55] <aphysically> I certainly wouldn't rely on me understanding it
[06:08:03] <grym> aphysically: perhaps you mean tox
[06:08:09] *** Quits: emerent (~quassel@p200300cd5701a19fba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:08:44] <aphysically> maybe, I got the impression they were doing the same thing and I hadn't really decided on one or the other
[06:08:45] <grym> seanicus: there's no one right way to round something, that's all
[06:09:03] *** Joins: emerent (~quassel@p200300cd5701a160ba27ebfffed28a59.dip0.t-ipconnect.de)
[06:09:39] *** Joins: supbo (~kenan@li227-215.members.linode.com)
[06:09:54] *** Joins: aead (~aead@user/aead)
[06:11:24] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Remote host closed the connection)
[06:11:28] *** Quits: jpic (~jpic@82.142.28.254) (Ping timeout: 252 seconds)
[06:13:04] *** Joins: jpic (~jpic@82.142.28.254)
[06:14:29] *** Joins: regreg (~regreg@2a02:2f09:531a:c700:e57b:ecaa:6e29:5a8)
[06:15:52] <aphysically> tox looks like it will be simpler and a bit more widely used
[06:19:02] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:19:09] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[06:19:34] *** Quits: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f) (Quit: Leaving)
[06:22:24] *** Quits: stoneware (~stoneware@user/stoneware) (Quit: I'll be back soon)
[06:23:45] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 250 seconds)
[06:24:52] *** Quits: Fedorasan (~fedorasan@user/fedorasan) (Quit: Going offline, see ya! (www.adiirc.com))
[06:25:00] *** Joins: stoneware (uid515661@user/stoneware)
[06:25:21] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:25:57] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 245 seconds)
[06:25:57] *** brabrax_ is now known as brabrax
[06:30:23] *** Quits: blddk (~admin@185.233.252.229) (Quit: ZNC 1.8.2 - https://znc.in)
[06:30:58] *** Joins: blddk (~admin@185.233.252.229)
[06:39:28] *** Joins: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca)
[06:40:46] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[06:43:42] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:44:25] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 252 seconds)
[06:46:15] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:46:25] *** Quits: Karatsuba (~jamer05@user/karatsuba) (Quit: WeeChat 2.8)
[06:47:17] *** Quits: arinov (~arinov@213.194.126.155) (Quit: WeeChat 3.1)
[06:52:49] *** Joins: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp)
[06:57:06] *** Joins: deever (~fips@105-59-178-139-pool.fiber.fcom.ch)
[06:57:11] *** Quits: Barones (~Barones@2804:214:8192:e7a4:ddcb:b8ad:dfa6:c7bd) (Remote host closed the connection)
[06:57:11] *** Quits: Pandadub (~Barones@189.40.77.138) (Remote host closed the connection)
[06:57:23] *** Joins: Barones (~Barones@2804:214:8192:e7a4:ddcb:b8ad:dfa6:c7bd)
[06:57:31] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[06:57:43] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[06:58:22] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[06:58:42] *** Joins: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp)
[06:59:56] *** Quits: jmft2 (~jmft2@81.149.115.87.dyn.plus.net) (Quit: This computer has gone to sleep)
[07:00:38] *** Joins: theprophet (~theprophe@85.114.228.184)
[07:00:53] <deever> i'd like to develop a python package and a subpackage (with additional dependencies) with two different git repos. how do i best run that code while developing?
[07:01:00] *** Joins: artwalker (~Adium@36.113.98.173)
[07:01:21] *** Quits: Barones (~Barones@2804:214:8192:e7a4:ddcb:b8ad:dfa6:c7bd) (Remote host closed the connection)
[07:01:44] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (Remote host closed the connection)
[07:03:10] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[07:03:31] *** Joins: Barones (~Barones@2804:214:8192:e7a4:ddcb:b8ad:dfa6:c7bd)
[07:03:45] *** Joins: djapo (~archangel@user/djapo)
[07:04:17] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) ()
[07:04:25] <Fiji> if i'm testing out async, is "trio" the default lib to look at (ala `requests` when needing an http client), or is asyncio sufficient?
[07:04:39] *** Quits: Barones (~Barones@2804:214:8192:e7a4:ddcb:b8ad:dfa6:c7bd) (Client Quit)
[07:04:52] *** Joins: Barones (~Barones@2804:214:8192:e7a4:ddcb:b8ad:dfa6:c7bd)
[07:07:44] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[07:08:14] *** Joins: hendursaga (~weechat@user/hendursaga)
[07:10:46] <stealth_> Fiji, asyncio comes with standard library, though it doesn't not support reguests
[07:11:29] <Fiji> i know, i mean, requests is the defacto http client instead of urllib
[07:11:40] <Pilate> i always used aiohttp but ive heard trio is nice
[07:11:41] <Fiji> so i was wondering if trio fits into a similar space over asyncio
[07:12:37] <stealth_> Fiji, as far as i know requests does not support async
[07:12:58] <Fiji> i understand that, my question isn't about requests' async capability
[07:13:12] <Fiji> just wonder if trio is the de facto async library
[07:13:31] <stealth_> Fiji, no, it would be asyncio
[07:14:11] <Fiji> all right, i'll take a look at that then
[07:15:02] <stealth_> Fiji, at the end of the day you should use what you like.
[07:16:10] <Fiji> just trying to find where to start, if i don't like asyncio i'll try something else
[07:18:12] <stealth_> deepy, you can use external packages in your package. You just have to include it in `setup(install_requires=['external-package'], ...)`
[07:25:24] <stealth_> deever, ^
[07:25:45] *** Joins: stormbytes (~textual@ool-18e4a56c.dyn.optonline.net)
[07:26:10] *** Quits: aead (~aead@user/aead) (Ping timeout: 240 seconds)
[07:27:15] *** Quits: Barones (~Barones@2804:214:8192:e7a4:ddcb:b8ad:dfa6:c7bd) (Remote host closed the connection)
[07:28:51] *** Quits: MikZyth (~MikZyth@188.65.242.159) (Ping timeout: 244 seconds)
[07:30:06] *** Joins: MikZyth (~MikZyth@188.65.242.159)
[07:31:28] <aphysically> oh no
[07:31:35] <aphysically> flake8-docstrings is very unhappy with my lack of docstrings
[07:31:35] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[07:32:24] <aphysically> well I have tox running linting and type checking at least
[07:33:03] <aphysically> now if I should do pytest or documentation generation first
[07:34:14] <stealth_> code + pytest is normally a good start
[07:38:05] *** Joins: srhm (~srhm@user/srhm)
[07:41:20] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[07:42:39] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[07:42:48] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[07:43:34] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Max SendQ exceeded)
[07:44:14] *** Quits: visl (visl@user/visl) (Ping timeout: 250 seconds)
[07:45:33] *** Joins: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[07:45:43] *** Joins: nomic (~nomic@185.217.117.169)
[07:45:48] *** Joins: visl (visl@user/visl)
[07:46:40] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[07:47:18] *** Quits: Cyberg33k (~Cybergeek@91.216.101.170) (Quit: This computer has gone to sleep)
[07:47:27] *** Quits: MikZyth (~MikZyth@188.65.242.159) (Ping timeout: 244 seconds)
[07:47:38] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Max SendQ exceeded)
[07:48:21] *** Joins: MikZyth (~MikZyth@188.65.242.159)
[07:48:39] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Remote host closed the connection)
[07:48:58] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:50:32] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[07:51:39] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Max SendQ exceeded)
[07:52:57] <theprophet> guys is next() and __next__ are same in python?
[07:53:27] *** Quits: Atrillox (~bigguy@219.137.143.167) (Ping timeout: 250 seconds)
[07:53:37] <theprophet> does they both have same purpose?
[07:55:24] <stealth_> theprophet, https://docs.python.org/3/library/functions.html#next
[07:57:29] <theprophet> so __next__ is inside an iterated class?
[07:58:15] <stealth_> pretty much `next(obj)` calls `obj.__next__()` method
[07:58:18] <theprophet> i mean iterable class *
[07:58:29] *** Quits: artwalker (~Adium@36.113.98.173) (Quit: Leaving.)
[07:58:42] <theprophet> i see , thank you very much
[07:59:02] <theprophet> so whenever i  see __next__ means they are injecting that method to something if it does not have one
[07:59:05] <theprophet> is that correct?
[08:00:07] <stealth_> sure
[08:00:41] <theprophet> thank you brother/sister
[08:01:04] *** Joins: matsaman (~matsaman@user/matsaman)
[08:04:35] *** Joins: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[08:04:45] *** Quits: srhm (~srhm@user/srhm) (Quit: Konversation terminated!)
[08:14:15] *** Quits: MikZyth (~MikZyth@188.65.242.159) (Ping timeout: 250 seconds)
[08:14:47] *** Quits: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 240 seconds)
[08:15:16] *** Joins: MikZyth (~MikZyth@188.65.242.159)
[08:15:32] <stealth_> theprophet, could also say they are overriding parent method to behave in a different way.
[08:16:16] *** Quits: Linux77 (~Linux7_7@237-182-233-186.raimax.com.br) (Ping timeout: 252 seconds)
[08:16:16] <theprophet> @stea
[08:16:22] <theprophet> stealth_ got it
[08:17:10] *** Joins: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net)
[08:18:32] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[08:20:29] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:20:38] *** Quits: ncwbqcfe (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: ncwbqcfe)
[08:21:39] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:21:48] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[08:25:24] *** Joins: apteryx (~maxim@dsl-10-141-212.b2b2c.ca)
[08:25:57] *** Quits: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net) (Ping timeout: 250 seconds)
[08:26:42] <apteryx> hello!  when using Python as a library, the value of sys.executable is not the Python interpreter?
[08:27:14] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 244 seconds)
[08:27:37] *** Joins: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net)
[08:28:05] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:28:24] <apteryx> would sys.prefix be correct?
[08:30:52] *** Joins: Atrillox (~bigguy@219.137.141.84)
[08:30:58] <stealth_> apteryx, you can read up on it https://docs.python.org/3/library/sys.html
[08:32:21] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-9c50-f290-3cc4-9a67.res6.spectrum.com) (Read error: Connection reset by peer)
[08:32:24] <apteryx> yeah, it looks like it'd return always the place where the Python libraries/modules are kept, whatever the payload (C program using the Python library or an interpreted script)
[08:33:40] *** Joins: srhm (~srhm@user/srhm)
[08:34:08] *** Joins: y1n (~y1n@84-115-65-90.wifi.dynamic.surfer.at)
[08:35:53] <stealth_> apteryx, is there anything you are trying to get at specifically?
[08:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:37:04] <apteryx> ah, it's some site.py file used in the context of GNU Guix.  It's supposed to take GUIX_PYTHONPATH and filter its content according to the Python interpreter used.
[08:37:31] *** Joins: Atque (~Atque@user/atque)
[08:38:52] *** Quits: MikZyth (~MikZyth@188.65.242.159) (Ping timeout: 252 seconds)
[08:39:47] <stealth_> apteryx, i see
[08:40:09] <apteryx> I've made the original sitecustomize.py file, but it'd look at sys.executable and stumble in the context of libraries
[08:40:10] *** Joins: MikZyth (~MikZyth@188.65.242.159)
[08:40:15] <apteryx> I've made a 2nd revision here http://issues.guix.gnu.org/50105#1
[08:40:17] *** Quits: kindablue (znc@2001:19f0:6001:175a:dedb:79f4:38d:5b35) (Quit: System Rebooting..)
[08:41:10] *** Joins: kindablue (znc@2001:19f0:6001:175a:dedb:79f4:38d:5b35)
[08:43:42] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[08:43:46] *** Quits: zaquest (~notzaques@5.128.210.178) (Ping timeout: 252 seconds)
[08:44:43] *** Joins: aead (~aead@user/aead)
[08:46:10] *** Quits: MikZyth (~MikZyth@188.65.242.159) (Ping timeout: 240 seconds)
[08:46:21] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 244 seconds)
[08:46:29] <stealth_> apteryx, `sys.path[index] = matching_sites`
[08:46:51] *** Quits: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Remote host closed the connection)
[08:47:26] *** Joins: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[08:47:40] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 252 seconds)
[08:48:30] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[08:50:34] *** Quits: pyeverything (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Remote host closed the connection)
[08:50:36] *** Joins: MikZyth (~MikZyth@188.65.242.159)
[08:51:19] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[08:51:30] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[08:51:45] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:53:16] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[08:53:53] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:56:51] <stealth_> apteryx, maybe bit more clear https://bpa.st/BPOA
[08:58:40] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[08:58:46] *** Joins: Forty-Bot (~kvirc@pool-108-45-127-224.washdc.fios.verizon.net)
[09:00:32] *** Quits: masoudd (~masoudd@user/masoudd) (Quit: Leaving)
[09:00:47] *** Quits: Dev0n (~Dev0n@user/dev0n) (*.net *.split)
[09:00:47] *** Quits: The-Compiler (~compiler@the-compiler.org) (*.net *.split)
[09:00:47] *** Quits: tanner (~tanner@tilde.town) (*.net *.split)
[09:00:47] *** Quits: mikebald (~mikebald@159.203.185.106) (*.net *.split)
[09:00:47] *** Quits: carlio (~carlio@88.198.149.110) (*.net *.split)
[09:00:47] *** Quits: nigelb (~nigel@zeus.nigelb.me) (*.net *.split)
[09:00:55] *** Joins: nigelb (~nigel@zeus.nigelb.me)
[09:00:57] *** Joins: masoudd (~masoudd@user/masoudd)
[09:01:03] *** Joins: carlio (~carlio@88.198.149.110)
[09:01:06] *** Joins: mikebald (~mikebald@159.203.185.106)
[09:01:11] *** Joins: tanner (~tanner@tilde.town)
[09:01:12] *** Joins: The-Compiler (~compiler@the-compiler.org)
[09:02:21] *** Quits: srhm (~srhm@user/srhm) (Quit: Konversation terminated!)
[09:05:59] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 244 seconds)
[09:08:06] *** Joins: node1 (~node1@user/node1)
[09:08:43] *** Joins: rakoon (~rakoon@2a02:2149:824f:5900:405f:dae5:cc42:679d)
[09:08:49] *** Quits: coc0nut (~coc0nut@user/coc0nut) (Quit: ZNC 1.8.2 - https://znc.in)
[09:09:28] *** Quits: masoudd (~masoudd@user/masoudd) (Read error: Connection reset by peer)
[09:09:43] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[09:11:24] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[09:17:30] *** Joins: mei (~mei@user/mei)
[09:17:55] *** Quits: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net) (Ping timeout: 252 seconds)
[09:18:28] *** Quits: MikZyth (~MikZyth@188.65.242.159) (Ping timeout: 252 seconds)
[09:19:14] *** Joins: MikZyth (~MikZyth@188.65.242.159)
[09:19:59] *** Quits: stocom0988778 (~sam@82-132-229-222.dab.02.net) (Read error: Connection reset by peer)
[09:20:10] *** Joins: clarjon_1 (~clarjon1@user/clarjon1)
[09:22:49] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Ping timeout: 252 seconds)
[09:29:28] *** Quits: y1n (~y1n@84-115-65-90.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[09:30:37] <node1> How to downgrade packages using pip? any quick idea?
[09:30:44] *** Quits: c10l (~c10l@89.34.167.207) (Quit: The Lounge - https://thelounge.chat)
[09:31:13] *** Joins: c10l (~c10l@89.34.167.207)
[09:31:24] <matsaman> node1: just tell pip to install the version you want
[09:31:38] <node1> And what aboutg the current version?
[09:31:46] <matsaman> it goes away
[09:32:14] <matsaman> if you want something cleaner you can uninstall everything in the venv and reinstall with new versions, or just wipe out the venv and create a new one
[09:33:36] *** Joins: sturmmann (~sturmmann@user/sturmmann)
[09:36:32] *** Joins: minip (minip@user/minip)
[09:37:53] *** Quits: MikZyth (~MikZyth@188.65.242.159) (Ping timeout: 250 seconds)
[09:39:21] *** Quits: ELFrederich (~ELFrederi@134.244.29.70) (Remote host closed the connection)
[09:39:40] *** Quits: aead (~aead@user/aead) (Ping timeout: 240 seconds)
[09:39:51] *** Joins: ELFrederich (~ELFrederi@134.244.29.70)
[09:39:57] *** Joins: MikZyth (~MikZyth@188.65.242.92)
[09:42:28] *** Joins: upsala (~zcb@185.213.155.160)
[09:42:59] *** Quits: kindablue (znc@2001:19f0:6001:175a:dedb:79f4:38d:5b35) (Quit: System Rebooting..)
[09:43:10] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[09:43:13] *** Quits: regreg (~regreg@2a02:2f09:531a:c700:e57b:ecaa:6e29:5a8) (Ping timeout: 252 seconds)
[09:46:04] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com)
[09:46:04] *** Joins: kindablue (znc@irc.tpurist.com)
[09:46:05] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[09:46:05] *** Quits: kofuyu (~kofuyu@user/kofuyu) (Quit: Ping timeout (120 seconds))
[09:46:05] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[09:46:07] *** Joins: kofuyu (~kofuyu@user/kofuyu)
[09:46:35] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[09:47:19] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 244 seconds)
[09:47:40] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (Ping timeout: 240 seconds)
[09:48:25] *** Quits: dthpulse_ (~quassel@podciarou.sk) (Ping timeout: 248 seconds)
[09:50:28] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[09:50:33] *** Joins: rud01f2 (rud0lf@user/rud0lf)
[09:50:47] *** Joins: dthpulse (~quassel@podciarou.sk)
[09:51:17] *** Quits: dfch (~dfch@user/dfch) (Remote host closed the connection)
[09:51:19] *** Quits: andreas303 (andreas303@ip227.orange.bnc4free.com) (Remote host closed the connection)
[09:51:19] *** Quits: rud01f (rud0lf@user/rud0lf) (Read error: Connection reset by peer)
[09:51:20] *** Quits: rud0lf (rud0lf@user/rud0lf) (Remote host closed the connection)
[09:51:20] *** rud01f2 is now known as rud01f
[09:51:29] *** Joins: rud0lf (rud0lf@user/rud0lf)
[09:51:33] *** Joins: andreas3- (andreas303@ip227.orange.bnc4free.com)
[09:51:58] *** Quits: rodstewart (~dmartins@188.ip-149-56-97.net) (Ping timeout: 252 seconds)
[09:51:58] *** Quits: xMopx (~xMopx-lib@192.95.23.134) (Ping timeout: 252 seconds)
[09:52:01] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 252 seconds)
[09:52:03] *** Joins: dfch (~dfch@user/dfch)
[09:52:06] <FH_thecat> something inside a python script is calling /usr/bin/file, which then checks if /usr/bin/python3.7 exists
[09:52:10] *** Parts: tusko (~yeurt@copyfree/advocate/tusko) (Byeee)
[09:52:22] <FH_thecat> any idea what python code calls /usr/bin/file ?
[09:52:31] *** Quits: somlis (~somlis@user/somlis) (Ping timeout: 252 seconds)
[09:53:27] *** Joins: rodstewart (~dmartins@188.ip-149-56-97.net)
[09:53:29] *** Joins: xMopx (~xMopx-lib@192.95.23.134)
[09:53:40] <Wulf> FH_thecat: look for "magic" or "mime"
[09:54:15] *** Joins: Sky_Net (~Sky_Net@176.14.213.85)
[09:54:34] *** Quits: int (~int@0x4.cx) (Quit: see you :))
[09:54:38] *** Quits: sturmmann (~sturmmann@user/sturmmann) (Quit: sturmmann)
[09:54:48] *** Joins: int (~int@0x4.cx)
[09:55:07] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[09:55:17] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[09:55:32] *** Joins: sturmmann (~sturmmann@user/sturmmann)
[09:55:39] *** Quits: kevinlc (~kevinalh@2800:200:e8d0:20b::4) (Ping timeout: 250 seconds)
[09:55:46] <FH_thecat> Wulf:  no "magic" or "mime"
[09:55:58] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[09:56:01] *** Joins: Gurkenglas (~Gurkengla@dslb-088-075-022-191.088.075.pools.vodafone-ip.de)
[09:56:13] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0:fa88:8bc5:c0d2:27cc) (Remote host closed the connection)
[09:56:24] <FH_thecat> the script that I am looking at is "iotop"
[09:56:47] <FH_thecat> which has files in /usr/lib/python3/dist-packages/iotop
[09:57:19] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0:fa88:8bc5:c0d2:27cc)
[09:57:22] <FH_thecat> for some reason, iotop is calling /usr/bin/file
[09:57:45] <Wulf> FH_thecat: I can confirm it runs file.
[09:57:51] *** Joins: newpy (~newpy@2601:280:4381:1390:d8a2:4368:1fe2:a8e3)
[09:58:53] <FH_thecat> Wulf: OK, and can you see which part of the code is calling file ?
[09:59:28] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (Read error: Connection reset by peer)
[10:01:05] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[10:02:52] <deever> stealth_: no, i mean without installation...i'd need something like a package with subpackages in non-subdirectories...probably impossible, isn't it?
[10:03:31] *** Joins: ihristov (~ihristov@217.145.94.71)
[10:04:15] <stealth_> deever, nothing is impossible! having hard time grasping what is it you are trying to do.
[10:05:40] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Quit: Leaving)
[10:05:57] <Wulf> FH_thecat: getting close.
[10:06:16] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 28.0.50)
[10:07:15] <stealth_> deever, o, linking another library inside your project is actually common. something like this https://github.com/YoSTEALTH/Liburing/tree/master/libs
[10:08:02] <stealth_> deever, there it includes the C library to compile within python library.
[10:08:27] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[10:09:24] <Wulf> FH_thecat: import platform; platform.architecture()
[10:09:40] <Wulf> FH_thecat: called in ioprio.py
[10:10:17] *** Joins: ano (~ano@user/ano)
[10:10:19] <stealth_> deever, you would have to include the external library using https://github.com/YoSTEALTH/Liburing/blob/master/MANIFEST.in
[10:11:24] <Wulf> FH_thecat: usage of `file' is documented here: https://docs.python.org/3/library/platform.html
[10:11:31] <FH_thecat> Wulf: great! thank you
[10:11:43] <deever> stealth_: i'm developing a package and its subpackage, which should be "gitted" separately. i'll probably have to copy these into the repo from PYTHONPATH, or is there a way to add the files in the repo to PYTHONPATH so that it works?
[10:12:02] <Wulf> FH_thecat: You're welcome.
[10:12:07] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[10:12:56] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[10:14:45] <stealth_> deever, maybe namespace packaging is what you want! this way you can have 1 core package, and another project add on to that 1 core library as modules https://packaging.python.org/guides/packaging-namespace-packages/
[10:17:25] *** Joins: emika6 (~emika@83.136.182.241)
[10:18:58] *** Quits: emika (~emika@83.136.182.17) (Ping timeout: 252 seconds)
[10:18:58] *** emika6 is now known as emika
[10:18:58] *** Joins: gggp (~textual@111.63.14.115)
[10:19:02] *** Quits: gggp (~textual@111.63.14.115) (Client Quit)
[10:19:13] <deever> stealth_: aahh...exactly
[10:19:41] <stealth_> cool
[10:20:53] *** Joins: Mija (~Mija@user/mija)
[10:22:17] <deever> stealth_: is there a way to have actual code in the namespace package?
[10:23:12] <jinsun> not at the top level namespace, you can only have code in the subpackages
[10:23:55] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 252 seconds)
[10:24:25] <Gustavo6046> is python's under-the-hood hash collection a modulo bucket or a binary search tree or?
[10:24:26] <stealth_> deever, it does not support having `__init__.py` file so everything starts with `from pkg.module import something`
[10:24:32] <jinsun> it is just a way to make namespace.foo and namespace.bar separate packages instead of namespace_foo and namespace_bar, since underscores are a bit ugly
[10:25:05] *** Quits: stormbytes (~textual@ool-18e4a56c.dyn.optonline.net) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[10:26:32] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:27:09] <cluelessperson> Gustavo6046, I think it's technically both?
[10:27:26] <Gustavo6046> :O
[10:27:31] <Gustavo6046> that sounds awesome
[10:27:32] <cluelessperson> Gustavo6046, because the hash function is re-sizable, isn't it?
[10:27:53] <Gustavo6046> so you're telling me, each bucket is actually a binary tree?
[10:28:48] <cluelessperson> Gustavo6046, I mean, when you hash a thing, you have a limited pool of hash outputs, which itself acts as a modulo,   *then* you're using a binary search aren't you to store?
[10:29:01] <cluelessperson> I don't know exactly
[10:29:10] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com)
[10:29:49] <Gustavo6046> Ah
[10:31:45] <deever> stealth_, jinsun: ok, thank you very much! :)
[10:32:18] *** Quits: ihristov (~ihristov@217.145.94.71) (Quit: Connection closed)
[10:32:21] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[10:33:14] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[10:33:16] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Ping timeout: 252 seconds)
[10:33:28] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[10:35:38] <DerpGusta> I have a set of functions that I need to run in a loop. what would be the best way to implement it architecturally?
[10:36:05] <stealth_> while/for loop
[10:36:13] <jinsun> `for func in your_set: func()` ?
[10:36:45] <DerpGusta> that's it? thanks!
[10:38:59] <DerpGusta> I'm running multiple functions on the same input and was wondering if there was a better way to do it.
[10:39:54] <jinsun> better than what?
[10:40:25] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 252 seconds)
[10:40:54] <DerpGusta> just the for loop and using the input declared outside of the loop.
[10:40:56] <Wulf> result = [func(data) for func in [foo, bar, baz]]
[10:41:21] <Wulf> But perhaps use generators. Or use a "normal" loop instead of comprehensions.
[10:42:32] <stealth_> DerpGusta, also give `partial` a look if you need to pass args/kwargs for your functions https://docs.python.org/3/library/functools.html#functools.partial
[10:43:57] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[10:46:20] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[10:46:21] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:46:36] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[10:46:55] *** Joins: seednode (~seednode@user/seednode)
[10:47:03] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[10:49:13] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Ping timeout: 252 seconds)
[10:53:01] *** Joins: shlomif (~shlomif@87.68.240.100.adsl.012.net.il)
[10:58:47] *** Joins: gusto (~Augustus@109.255.100.54)
[10:59:25] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:00:39] *** Joins: palasso (~palasso@user/palasso)
[11:01:34] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:03:26] *** Joins: kosh (~kosh@user/kosh)
[11:04:07] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[11:04:33] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Ping timeout: 250 seconds)
[11:06:03] *** Quits: sturmmann (~sturmmann@user/sturmmann) (Ping timeout: 276 seconds)
[11:08:56] *** Joins: zln (~golluq@c80-217-230-193.bredband.tele2.se)
[11:09:28] <zln> hi guys, can I yield a value and increase it afterwards, little like i++ instead of ++i
[11:10:56] <jinsun> you can neither do `i++` nor `++i`, have to do it in two lines
[11:11:54] <leduyquang753> ++i is possible with i += 1.
[11:12:04] <leduyquang753> Not i++ though.
[11:12:19] <zln> :(
[11:12:31] <jinsun> you can't "yield" or "return" at the same time as i+=1 though
[11:12:45] <zln> :(((
[11:12:46] <jinsun> have to do that in a separate line
[11:12:55] *** Joins: mexen (uid495612@user/mexen)
[11:12:57] <zln> just getting more and more sad now :D
[11:13:10] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[11:13:24] <zln> I see, will try something
[11:15:57] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[11:17:41] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[11:20:01] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[11:20:01] <jinsun> zln: so `yield i; i+=1` would be kinda like `i++` and `i += 1; yield i` will be sort of like `++i`
[11:22:46] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[11:23:53] <zln> ah,
[11:24:31] <zln> so the syntax 'yield i; i+=1' works. didn't know that was possible :D
[11:24:59] <DerpGusta> how much is multithreading affected with GIL? I want to run a multithreaded function in aws lambda
[11:25:03] <zln> the first part of the last sentence was meant to be a question :D
[11:25:32] <deniska> zln: even if it works, it's just the same as writing `yield i` and `i += 1` on the same line
[11:25:47] *** Joins: manti7 (~manti7@176.10.104.94)
[11:26:02] <zln> deniska: I see, the diffrence and logic now. Thanks all
[11:26:24] <zln> always good help here for us beginners
[11:26:40] <deniska> zln: on two separate lines I mean
[11:27:24] <zln> deniska: Then after yielding from a function, consequitve lines is possible yeah?
[11:27:28] <zln> not like return?
[11:29:27] *** Joins: ice9 (~ice9@user/ice9)
[11:30:31] <raek> DerpGusta: the GIL means that only one OS thread can make progress in python code. if multiple threads have python code to run, their execution will be interleaved.
[11:31:07] <raek> so if your goal is to run two pieces of code independently of each other, because it is easier to write the code that way, using threads will work
[11:32:13] *** Joins: semeion (~semeion@user/semeion)
[11:32:24] <raek> but if your goal is to improve performance through parallelism (making real progress in multiple threads at the same time, not merely interleaved execution), then you won't get any performance gain using threads in python
[11:33:10] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Ping timeout: 252 seconds)
[11:33:20] <jinsun> zln: yes, your function becomes a generator function once you use yield, so it stops at the yield, but you can continue execution using next(), see https://docs.python.org/3/tutorial/classes.html#generators
[11:33:23] *** Joins: VaniaPy (~VaniaPy@46.12.6.159.dsl.dyn.forthnet.gr)
[11:34:35] *** o is now known as niko
[11:35:17] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[11:35:32] <DerpGusta> raek: thanks for the clarification. If I use asyncio or threadpool for running functions that depend on network responses, will I see any performance benefit?
[11:36:55] <DerpGusta> raek: If so, what do you recommend? no. of threads is not a limitation because lambda supports 1024 logical threads!
[11:38:09] <raek> DerpGusta: both asyncio and threads are limited to only one piece of python code running at any moment in time. as far as I understand, asyncio should has less overhead for switching between work to be done. (others can probably explain this better)
[11:38:33] <raek> DerpGusta: I don't have any experience with AWS Lambda, so I can't recommend enything
[11:38:37] <raek> *anything
[11:39:06] <DerpGusta> raek: understood. I think asyncio is more performant because it uses a single thread for the event loop right?
[11:39:26] *** Joins: HaJo (~hajo@77.75.204.185.fixip.bitel.net)
[11:39:41] <DerpGusta> raek: and switching within the thread would be faster
[11:39:50] <raek> there is less context switching goin on at least. and creating new units of work ("tasks" instead of "threads") is significantly cheaper.
[11:41:06] <raek> that is my udnerstanding (but I'm fairly new to asyncio)
[11:41:48] <shlomif> hi all! i'd appreciate code reviews of https://github.com/shlomif/fc-solve/blob/master/fc-solve/CI-testing/translate-travis.yml-to-github-actions.py (i already tried flake8 and pylint)
[11:42:17] <DerpGusta> raek: thanks a lot! you've made my decision easy :D
[11:42:19] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[11:42:48] <rud0lf> can re-throw exception in "try .. except" block (except part)
[11:42:53] <raek> what is better also depends on what you value. runtime performance is one thing. asyncio needs to code to be written in a particular style. you could argue that async code is more complex to understand.
[11:43:49] <DerpGusta> performance only! code is already ready. need to refactor
[11:44:24] <jinsun> shlomif: consult mypy also (it will complain a lot though)
[11:44:26] <raek> all code that can block needs to be rewritten to a async style. and all code that calls that code... :-)
[11:44:47] *** Joins: fruitypunk (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9)
[11:45:00] <jinsun> yes, the only benfit of threads in cpyhon is that you can run your usual sync functions in them
[11:45:28] <jinsun> don't have to go full async from beginning to end
[11:47:18] <jinsun> rud0lf: you can write `raise` in the except block to rethrow
[11:47:48] <raek> in a testing project I work with, we're spending most time waiting for events to happen (which usually takes many seconds to happen) and performance is not that critical. using executor/futures to "wait for different things at the same time" made the code fairly straight forward.
[11:48:17] <rud0lf> jinsun: thank you
[11:49:36] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[11:51:05] *** Quits: Dotz0cat (~Dotz0cat@h85.15.31.71.dynamic.ip.windstream.net) (Ping timeout: 248 seconds)
[11:52:19] *** Joins: nomic (~nomic@185.217.117.169)
[11:54:44] *** Quits: p-i-_ (~Ohmu@2403:6200:8870:cca9:980e:ef50:735d:2516) (Read error: Connection reset by peer)
[11:54:58] *** Joins: k_sze (~k_sze@mail2.kalunite.net)
[11:55:13] *** Parts: VaniaPy (~VaniaPy@46.12.6.159.dsl.dyn.forthnet.gr) ()
[11:55:19] <shlomif> jinsun: shlomif[fcs]:$trunk$ mypy fc-solve/CI-testing/translate-travis.yml-to-github-actions.py
[11:55:19] <shlomif> Success: no issues found in 1 source file
[11:55:20] *** Joins: p-i- (~Ohmu@mx-ll-171.6.224-111.dynamic.3bb.co.th)
[11:55:31] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[11:55:46] *** Joins: dulanic5 (~dulanic@47.187.144.163)
[11:57:05] *** Joins: raxor2k (~raxor2k@78.158.252.74)
[11:57:15] <rud0lf> if i have variable "data" in thread, would it be shared between threads?
[11:57:28] <rud0lf> i think yes but i need to make sure...
[11:57:47] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[11:57:51] *** Quits: dulanic (~dulanic@47.187.144.163) (Ping timeout: 250 seconds)
[11:57:51] *** dulanic5 is now known as dulanic
[11:58:01] <shlomif> rud0lf: depends on its scoping , i presume
[11:58:28] <rud0lf> thank you
[11:59:01] *** Quits: apteryx (~maxim@dsl-10-141-212.b2b2c.ca) (Ping timeout: 252 seconds)
[11:59:16] <jinsun> shlomif: oh I guess it went into full dymamic mode and allowed everything, https://mypy.readthedocs.io/en/stable/getting_started.html#function-signatures-and-dynamic-vs-static-typing
[11:59:59] *** jaamro is now known as ormaaj
[12:00:00] <raxor2k> i need a simple dict function to collect points for each student while reading the data from DB, can anyone help?
[12:00:01] <raxor2k> https://bpa.st/BDWA
[12:00:28] <jinsun> shlomif: `mypy --strict` will not allow dynamic typing at all, but that will be a pain to fix, so I won't suggest that unless you want to go the full static typing way
[12:02:43] <raxor2k> do i need a tuple dict or something ?
[12:05:14] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[12:05:21] <jinsun> shlomif: it would be better to put the last line `main()` inside a if __name__ == '__main__' block, so you can import this file from unit tests without running it
[12:05:42] *** Joins: seednode (~seednode@user/seednode)
[12:10:25] <stealth_> raxor2k, just have `students = {'timmi': 0, 'annie': 0}` then when you get the data from the db, `students[name] += points`
[12:10:37] *** Quits: jazzy (~jaziz@2600:380:4452:a3ec:1dd5:e36f:ac02:9c83) (Ping timeout: 252 seconds)
[12:13:00] *** Joins: apteryx (~maxim@dsl-153-61.b2b2c.ca)
[12:15:17] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Read error: Connection reset by peer)
[12:16:07] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 244 seconds)
[12:16:40] *** Joins: rendar (~rendar@user/rendar)
[12:17:40] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 244 seconds)
[12:18:01] <raxor2k> stealth: isnt it a simpler algorithm like this?
[12:18:05] <raxor2k> such as zip or something ?
[12:18:38] <raxor2k> anyways i will try ur solution
[12:18:39] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 250 seconds)
[12:19:06] *** Quits: martums (~martums@user/martums) (Read error: Connection reset by peer)
[12:19:09] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[12:19:41] <jinsun> that solution from stealth_ is as simple as it would get, adding zip or something will just make it more complex
[12:19:53] *** Joins: martums (~martums@user/martums)
[12:19:58] *** Joins: Norore (~weechat@balder.ens.fr)
[12:20:13] <stealth_> raxor2k, well depending on your database, there might be a `sum(points)` or something, so it does the adding for you and only returns the results.
[12:20:19] *** Joins: lightbulbjim (~lightbulb@user/lightbulbjim)
[12:20:28] <The-Compiler> I mean, there's  collections.defaultdict(int)  which avoids having to set it to 0 initially
[12:20:39] *** Joins: shad (~shad@user/shad)
[12:20:39] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[12:20:56] *** Joins: cgz2021 (~Thunderbi@120.87.200.47)
[12:21:55] <cgz2021> ?
[12:21:58] <The-Compiler> cgz2021: !
[12:22:08] <jinsun> cgz2021: ?
[12:22:13] <The-Compiler> :D
[12:22:14] <cgz2021> 有说中文的吗?
[12:22:39] <cgz2021> Do anyone speak Chinese?
[12:22:45] *** Joins: Atque (~Atque@user/atque)
[12:23:21] <stealth_> raxor2k, what database are you using?
[12:23:50] *** Quits: p-i- (~Ohmu@mx-ll-171.6.224-111.dynamic.3bb.co.th) (Quit: Leaving...)
[12:24:27] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[12:24:32] <raxor2k> stealth: mysql
[12:26:17] <The-Compiler> cgz2021: I can't find a Chinese Python IRC channel, unfortunately
[12:27:22] *** Joins: R0b0t1 (~R0b0t1@d-74-214-63-13.md.cpe.atlanticbb.net)
[12:27:25] <cgz2021> The-Compiler: Thanks, I have the translation software
[12:27:54] *** Joins: umamisoup (uid511883@id-511883.stonehaven.irccloud.com)
[12:28:01] *** Joins: darksun (~darksun@user/darksun)
[12:28:11] *** Quits: mcglk_ (~mcglk@131.191.49.120) (Ping timeout: 250 seconds)
[12:28:22] <cgz2021> I am new to pyhton
[12:28:57] <cgz2021> I am a novice
[12:29:40] <stealth_> raxor2k, something like `SELECT name, SUM(points) from table_name_here GROUP_BY id`
[12:29:57] <R0b0t1> I've got an async function that tries to schedule another function as a callback but it never fires
[12:30:16] *** dcaro_away is now known as dcaro
[12:30:20] *** Joins: wender (~Wender@189.37.67.41)
[12:31:15] *** Joins: mcglk (~mcglk@131.191.49.120)
[12:31:38] <R0b0t1> e.g. self.loop.call_soon(lambda x: print('a'), [0])
[12:31:44] <raxor2k> stealth: im using sqlalchemy, not like that
[12:31:51] <R0b0t1> my while loop continues to run, but I never see anything printed
[12:32:19] <stealth_> R0b0t1, `print(..., flush=True)`
[12:32:40] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[12:32:44] <R0b0t1> stealth_: that doesn't happen to be it
[12:32:48] <R0b0t1> it's not running for some reason
[12:33:23] <stealth_> R0b0t1, `print()` probably runs once and never again?
[12:33:30] *** Joins: ihristov (~ihristov@217.145.94.71)
[12:33:30] <R0b0t1> it doesn't run at all
[12:33:38] <R0b0t1> A
[12:33:40] <stealth_> R0b0t1, did you flush it?
[12:33:41] *** Quits: computeiro (~Wender@189.37.66.142) (Ping timeout: 244 seconds)
[12:33:44] <R0b0t1> I did flush it
[12:33:55] <R0b0t1> but that's not the issue, because I'm using newlines
[12:34:31] <R0b0t1> hold on
[12:34:37] *** Quits: cgz2021 (~Thunderbi@120.87.200.47) (Quit: cgz2021)
[12:34:52] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Client Quit)
[12:35:15] <stealth_> raxor2k, o, so you are using sqlalchemy ORM?, i have never used it so i can't really help with that.
[12:35:31] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:36:08] <R0b0t1> stealth_: https://paste.rs/9Bw.py elsewehre I await ControlMAnager.run()
[12:37:08] *** Joins: jmft2 (~jmft2@81.149.115.87.dyn.plus.net)
[12:37:54] <shlomif> jinsun: yes, i know
[12:38:01] <raxor2k> stealth_: i was able to grab all the data and add to dict, but the points does not add to each other? : https://bpa.st/NM4Q
[12:38:59] *** Joins: Hoffnarr (~textual@92.237.237.50)
[12:39:39] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:39:56] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[12:40:13] *** Quits: Atrillox (~bigguy@219.137.141.84) (Read error: Connection reset by peer)
[12:42:05] *** Joins: fanis30 (~anon@adsl-180.37.6.1.tellas.gr)
[12:42:32] <stealth_> raxor2k, https://bpa.st/NM4Q#4L7 should be outside of the for loop
[12:43:03] *** Joins: d0ku (~d0ku@178.43.56.75.ipv4.supernova.orange.pl)
[12:43:26] <raxor2k> thats not possible ?
[12:44:41] <stealth_> raxor2k, sorry, i don't really use sqlalchemy, there probably is a way to do both take in 1 line, but you might have to run 1 query to get the names of the students then another query to get the results, the way you have it now.
[12:46:04] *** Joins: P1ro_ (~quassel@user/p1ro)
[12:46:04] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[12:46:33] <stealth_> R0b0t1, its hard to debug without actually running the code, could you just add some `print('1', flush=True)` 2, 3, ... to see how far its running?
[12:46:44] *** Joins: P1ro__ (~quassel@user/p1ro)
[12:48:37] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[12:49:28] *** Quits: Hoffnarr (~textual@92.237.237.50) (Quit: Textual IRC Client: www.textualapp.com)
[12:49:40] *** Quits: P1ro (~quassel@user/p1ro) (Ping timeout: 252 seconds)
[12:50:00] <raxor2k> stealth: but this problems hasnt anything to do with sqlalchemy? you see on the output i get all the data from db
[12:50:05] <raxor2k> the problem is at the function
[12:50:27] *** Quits: P1ro_ (~quassel@user/p1ro) (Ping timeout: 245 seconds)
[12:51:26] <stealth_> raxor2k, give me a sec
[12:51:42] *** Joins: Adoi (~Adoi@user/adoi)
[12:52:21] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[12:54:06] *** Quits: minip (minip@user/minip) (Remote host closed the connection)
[12:54:14] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:54:57] <stealth_> raxor2k, try this https://bpa.st/EQYA
[12:58:05] *** Quits: mingdao (~mingdao@wireguard/tunneler/mingdao) (Ping timeout: 250 seconds)
[12:58:06] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4) (Quit: WeeChat 2.8)
[12:58:47] <raxor2k> stealth: that seems to be working! i got this: defaultdict(<class 'int'>, {'timmi': 13, 'annie': 5})
[12:59:06] <stealth_> raxor2k, cool
[12:59:57] <raxor2k> thanks !
[13:01:53] <R0b0t1> stealth_: I know it's running
[13:02:01] <R0b0t1> If you see loop, it prints the string
[13:02:03] <R0b0t1> it always prints it
[13:02:11] <R0b0t1> it keeps printing it after I schedule the callback
[13:02:36] <stealth_> R0b0t1, o.O i get it
[13:03:11] *** Quits: rannnn8888 (~rannnn888@bzq-79-183-158-130.red.bezeqint.net) (Ping timeout: 256 seconds)
[13:03:44] <stealth_> R0b0t1, why is it in a `while True:` loop?
[13:06:07] <stealth_> R0b0t1, does `print(line)` actually give you something?
[13:06:13] *** Joins: Atque (~Atque@user/atque)
[13:06:48] *** Joins: plastico (~plastico@neomutt/plastico)
[13:08:01] <R0b0t1> yes
[13:08:10] <R0b0t1> it's reading a serial port and then based on what it reads, calls a function
[13:08:20] <R0b0t1> so it prints out what I get on the serial port, and keeps printing it out
[13:08:31] <R0b0t1> then I try to async schedule it so I can keep processing commands
[13:08:43] <R0b0t1> but the function I pass to call_soon just never fires
[13:10:31] *** Joins: wob_jonas (~wob_jonas@business-37-191-60-209.business.broadband.hu)
[13:11:20] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:11:53] <stealth_> R0b0t1, something could be blocking, like i don't know this `l = ZcListener()` does
[13:12:42] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[13:13:36] <Gurkenglas> Is there some oneliner to turn my function f() into the generator of its return values when called repeatedly?
[13:15:19] <R0b0t1> stealth_: if I do start or stop instead, all that is scheduled is a print to the serial port, and that doesn't run either
[13:15:29] <R0b0t1> also no the zclistener doesn't block it spawns a thread
[13:17:25] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[13:17:27] <stealth_> R0b0t1, `self.loop.call_soon(self.fn_map[fn]())`
[13:18:06] *** Joins: diamondbond (~diamondbo@116.206.245.127)
[13:19:26] <stealth_> Gurkenglas, is the `f()` a generator to begin with?
[13:19:43] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[13:19:43] <Gurkenglas> no, let's say it reads a line from stdin
[13:20:53] <stealth_> Gurkenglas, i think its `iter(file.read, '')` or `b''` if you are reading bytes, give me sec let me confirm it.
[13:21:05] <Gurkenglas> stealth_, you miss the point
[13:21:09] *** Joins: theprophet (~theprophe@85.114.228.184)
[13:21:32] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[13:21:37] <Gurkenglas> "let's say" means you can use "reads a line from stdin" as an example of the type of thing I would like to handle here
[13:21:47] <Gurkenglas> f is a function that returns a value.
[13:23:37] <stealth_> Gurkenglas, ya, you totally lost me there.
[13:25:09] <Gurkenglas> stealth_, how do I get a generator gen such that next(gen) just calls my f()?
[13:26:50] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:26:51] <stealth_> Gurkenglas, https://docs.python.org/3/library/itertools.html search for `repeatfunc`
[13:26:58] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:27:06] <Gurkenglas> Thanks!
[13:30:39] <stealth_> Gurkenglas, you should be able to do `gen = iter(repeatfunc(...)); next(gen)`
[13:30:55] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 252 seconds)
[13:33:50] <R0b0t1> stealth_: I had done that earlier. It doesn't work. I just changed it back to check,.
[13:34:38] *** Joins: regreg (~regreg@2a02:2f09:531a:c700:19d9:64bd:860e:3a3e)
[13:34:46] *** Joins: sky008 (~Thunderbi@120.87.200.47)
[13:35:44] *** Quits: diamondbond (~diamondbo@116.206.245.127) (Quit: Leaving)
[13:36:11] <sky008> Hello everyone
[13:36:44] *** Joins: P1ro (~quassel@user/p1ro)
[13:36:45] *** Quits: lordrishav (~LordRisha@user/lordrishav) (Quit: WeeChat 2.8)
[13:37:07] <theprophet> hi
[13:37:13] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[13:38:23] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[13:39:19] <stealth_> R0b0t1, it sure is a weird one, i never used `call_soon` so i can't comment much on it.
[13:39:59] <stealth_> R0b0t1, all the example show it calling static vs async function for some weird reason
[13:40:21] <R0b0t1> yeah so there's supposed to be a function "call_coroutine_threadsafe" but I seem to not have it
[13:40:29] <R0b0t1> in either case that's why I tried passing it a lambda
[13:40:49] *** Quits: P1ro__ (~quassel@user/p1ro) (Ping timeout: 252 seconds)
[13:41:16] <stealth_> R0b0t1, few places use `functools.partial` to pass in function.
[13:42:24] <R0b0t1> looks like they're doing that to make a normal function an async one
[13:42:29] <R0b0t1> I'm starting with an async function
[13:43:58] *** Joins: slav0nic (slav0nic@python.su)
[13:44:07] <stealth_> R0b0t1, i don't personally use asyncio, if you wait around other ppl that know it more might be able to better help you
[13:45:26] <raxor2k> stealth: the result prints me: defaultdict(<class 'int'>, {'timmi': 13, 'annie': 5}), what if i further want to show only timmis points or use timmis points somewhere else, how do i loop in?     print(results["timmi"]) did not work
[13:46:26] <The-Compiler> raxor2k: I don't see why results["timmi"] shouldn't work
[13:47:07] <stealth_> raxor2k, ya that should have worked.
[13:48:02] <stealth_> raxor2k, you should be able to use `results` just like you should a normal `dict`
[13:48:28] <stealth_> would*
[13:48:41] <R0b0t1> stealth_: apparently it does have to do with my functions being async
[13:49:38] <R0b0t1> but I can't get it to work with ensure_future
[13:49:40] <R0b0t1> so hmm
[13:50:17] *** Joins: xcombelle (~xavie@176-139-252-198.abo.bbox.fr)
[13:50:34] <raxor2k> sorry, my bad
[13:50:36] <raxor2k> works perfectly
[13:54:00] <bjs> R0b0t1: can you show the code?
[13:54:22] *** Joins: dvx (~dvx@185.63.97.64)
[13:54:38] <bjs> R0b0t1: async things are very fiddly and it's hard to debug without seeing what's actually going on,  it might just be something really simple that we're missing
[13:55:11] <stealth_> R0b0t1, ya, apparently the solution is to pass `asyncio.create_task(async_func())` the `call_soon` is sync function only!
[13:55:32] *** Joins: y1n (~y1n@84-115-64-153.wifi.dynamic.surfer.at)
[13:55:37] <R0b0t1> bjs: I think it's because the ControlManager.run function is async and has a while True loop in it. If I exit right after I call_soon the sub-function then it eventually completes, but I thought asyncio would interrupt at awaits to run other things and so on
[13:55:48] <R0b0t1> sooo... what is the idiomatic solution
[13:55:56] <bjs> R0b0t1: hmm,  did I miss some pastebin with the code?
[13:55:58] <bjs> what is ControlManager
[13:55:59] *** Quits: fxrs (~fxrs@192.227.212.130) (Quit: ZNC 1.7.x-git-653-187f617 - http://znc.in)
[13:56:06] <R0b0t1> bjs: https://paste.rs/9Bw.py
[13:56:10] <R0b0t1> there's more too it, but fairly self contained
[13:56:13] *** Joins: fxrs (~fxrs@192.227.212.130)
[13:56:41] <bjs> R0b0t1: so is the idea to put each in the "background"?
[13:57:00] <stealth_> R0b0t1, you still have those `print` without `print(..., flush=True)` when you are dealing with async you should flush it or else you don't see result till buffer is full.
[13:57:41] <bjs> stealth_: I mean print(...) will flush anyway usually since these streams are line buffered (usually)
[13:58:40] <stealth_> bjs, when dealing with async it very glitchy, i flush it.
[13:58:45] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 250 seconds)
[13:58:54] <bjs> stealth_: it shouldn't be glitchy, why is it glitchy?
[13:59:14] <bjs> R0b0t1: it's not obvious exactly what the right thing to do here is, do you want the loop to go round again and start another e.g. _internal_scan while the last _internal_scan might still be happening?
[13:59:22] <stealth_> bjs, asking the wrong person :p ask python-dev
[13:59:51] <bjs> stealth_: okay I'll be more clear:  there's no reason async would make print glitchy,  you must be confusing something
[14:00:34] <bjs> R0b0t1: the idiomatic solution to running things concurrently is to `await asyncio.gather(async_func1(), async_func2(), async_func3())` which runs the functions together concurrently and waits for them all to finish before continuining.  It's just deciding where to put this line to get the right behaviour you wanted.
[14:01:41] *** Joins: rsx (~dummy@ppp-188-174-148-246.dynamic.mnet-online.de)
[14:01:46] <stealth_> bjs, no, just what i noticed, most of the stuff i write is async.
[14:02:02] *** Joins: mingdao (~mingdao@wireguard/tunneler/mingdao)
[14:02:11] <bjs> stealth_: no what?
[14:02:42] <stealth_> bjs, "you must be confusing something" no, i am pretty sure.
[14:02:48] *** Joins: LucaTM (~LucaTM@user/lucatm)
[14:03:01] <bjs> stealth_: okay I'll be even more clear, there is no mechanism in async frameworks to make print glitchy,  print isn't even async.
[14:03:20] <bjs> Maybe you've replaced the standard streams or are running Python in a weird non-line-buffered case
[14:03:37] <R0b0t1> bjs: that won't work
[14:03:44] <R0b0t1> I need something else
[14:03:57] <bjs> R0b0t1: I assume you're saying it won't work because of some reason
[14:03:59] <R0b0t1> I don't want to wait on the dispatch of one interactive command
[14:04:09] <R0b0t1> yes basically that's a REPL taking in data from a serial port
[14:04:17] <R0b0t1> but the functions can be particularly long running
[14:04:22] <R0b0t1> I don't want to lock up the REPL while they run
[14:04:35] <stealth_> bjs, when writing my async event-loop, i had to use flush, or else i would not see print(...) at times!
[14:04:46] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[14:04:58] <bjs> R0b0t1: well asyncio makes this a bit tricky, there is the low-level https://docs.python.org/3/library/asyncio-task.html#asyncio.create_task create_task(coro())  function that schedules the coro "in the background".
[14:05:21] <R0b0t1> bjs: I think I may need to start another event loop
[14:05:27] <R0b0t1> in another thread
[14:05:29] *** Joins: cheater (~Username@user/cheater)
[14:05:33] <R0b0t1> but it's like
[14:05:38] <R0b0t1> I don't see much benefit to asyncio then
[14:05:51] <bjs> R0b0t1: no you don't,  create_task will work fine, it'll add the `async def`s to the event loop
[14:05:52] *** Joins: MaximB (~MaximB@87.68.164.220)
[14:05:56] <R0b0t1> aren't coroutines supposed to be cooperative? that's what makes me feel I am using this wrong
[14:05:59] <R0b0t1> ok
[14:06:08] <bjs> R0b0t1: cooperative means they explicitly say `await`
[14:07:04] <bjs> R0b0t1: asyncio is a bit awkward for this kind of pattern,  libraries like `trio` add a "nursery" datatype that manages a bunch of "background" tasks.  asyncio doesn't have this and you have to do it manually with create_task
[14:07:07] *** Joins: P1ro_ (~quassel@user/p1ro)
[14:07:12] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Ping timeout: 244 seconds)
[14:07:27] <R0b0t1> bjs: self.loop.create_task(self.fn_map[fn]()) doesn't work
[14:07:41] <bjs> R0b0t1: "doesn't work"?
[14:07:45] <R0b0t1> never runs
[14:08:15] <R0b0t1> the while loop that calls ControlManager.read continues to work and print to stdout but the scheduled functions never run
[14:08:21] <bjs> R0b0t1: can you show like, the actual current code and the output?
[14:08:32] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[14:09:20] <bjs> R0b0t1: out of interest, did the call_soon(...) give you an error?
[14:10:21] <R0b0t1> nope
[14:10:22] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:10:31] *** Quits: P1ro (~quassel@user/p1ro) (Ping timeout: 252 seconds)
[14:10:46] <R0b0t1> bjs: https://paste.rs/zO3.py, if I type "a\r\nstart\r\n" into the serial port being read it gets a, prints it, gets start, prints it
[14:10:54] <R0b0t1> per previous testing it is running that if statement
[14:11:01] *** Joins: Naan (~Naan@user/naan)
[14:11:04] *** Quits: audiocat (~audio@2603-8081-1801-3bb5-e3a3-6617-06e6-05c7.res6.spectrum.com) (Ping timeout: 252 seconds)
[14:11:26] <bjs> R0b0t1: I dislike "per _previous_ testing", I'd prefer there to just be a print() inside the if so you know for sure if it's running in *this* test :P
[14:11:57] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 276 seconds)
[14:11:59] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[14:12:17] <R0b0t1> sigh fine whatever
[14:12:23] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[14:12:30] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 250 seconds)
[14:12:33] <R0b0t1> yes it's running it
[14:13:07] <bjs> R0b0t1: I'm just running through the list of obvious things that can be going wrong, sorry. Sometimes there's something silly like some random extra whitespace or control characters that miss
[14:13:16] *** Quits: ihristov (~ihristov@217.145.94.71) (Ping timeout: 252 seconds)
[14:13:20] <bjs> R0b0t1: e.g. your print(line) can print start  but actually it was "start\r" or something and so the if never fires
[14:13:29] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Quit: leaving)
[14:13:47] <bjs> or maybe the encoding was wrong so it looked like you _sent_ start, but received something else. or maybe actually you received b"start" not "start" and so it didn't fire
[14:13:55] <bjs> lots of things can go wrong even if it "looks" like it should fire
[14:14:59] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[14:15:13] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[14:17:26] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[14:18:34] *** Quits: sky008 (~Thunderbi@120.87.200.47) (Ping timeout: 244 seconds)
[14:18:49] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[14:19:06] *** Quits: jmft2 (~jmft2@81.149.115.87.dyn.plus.net) (Quit: This computer has gone to sleep)
[14:19:10] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[14:19:35] <R0b0t1> no I get it, thanks for taking a look bjs
[14:23:21] *** Joins: sky008 (~Thunderbi@120.87.200.47)
[14:23:24] *** Joins: Atrillox (~bigguy@219.137.141.84)
[14:24:14] <raxor2k> stealth: one last question: if i want to loop through all of them and and get their key and values, how? 'for i in results: print(i)'  just prints the key(names), but not the values(points)
[14:25:03] <bjs> R0b0t1: oh oh, you're using queue.Queue ?
[14:25:16] <bjs> R0b0t1: don't you want an `asyncio.Queue` and to `await` the read/write methods?
[14:25:59] <bjs> R0b0t1: queue.Queue is a threading Queue and can block the whole thread including the event loop;  I don't know if this is what is happening but it certainly looks suspicious.
[14:26:06] <stealth_> raxor2k, `for name, value in results.items(): print(name, value)`
[14:26:25] <raxor2k> nvm: just me overcomplicating things, solved it
[14:26:29] <raxor2k> thanks anyways
[14:26:43] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::4433)
[14:26:59] *** Joins: volgar1x (~volgar1xm@2001:470:69fc:105::e61d)
[14:27:42] *** Quits: murr4y (ali@user/murr4y) (Quit: WeeChat 3.1)
[14:27:44] <bjs> R0b0t1: I think ControlWriter shouldn't be a Thread but it should be an `async def run(self)` that you also create_task (or gather()) from the ControlManager's run.
[14:28:12] <raxor2k> working with dicts are just torture man ..
[14:29:06] <R0b0t1> bjs: interesting, yes I didn't originally want to use the threading queue
[14:29:12] <stealth_> raxor2k, https://www.pythonsheets.com/notes/python-dict.html
[14:29:19] <bjs> R0b0t1: I think what happened here is that the `line = await self.read()` is then blocking on the queue .get(), blocking the entire event loop and so the background tasks don't run.  If you make ControlWriter async and use an asyncio Queue everywhere then you won't have this problem.
[14:29:23] <R0b0t1> bjs: but the problem is the pyserial functions hard block, there is no async binding
[14:29:35] <R0b0t1> so afaict I must wrap them in a thread
[14:29:37] *** Quits: regreg (~regreg@2a02:2f09:531a:c700:19d9:64bd:860e:3a3e) (Ping timeout: 245 seconds)
[14:29:40] <R0b0t1> and that thread has to use the threading queue
[14:29:48] <bjs> R0b0t1: the pyserial read/writes should probably be moved into a thread then,  asyncio.to_thread is a nifty function that can do that for you.
[14:30:00] <bjs> R0b0t1: (c.f. asyncio's run_in_executor function in older versions).
[14:30:21] <stealth_> bjs, actually there is a async version of serial
[14:30:27] *** Quits: sky008 (~Thunderbi@120.87.200.47) (Ping timeout: 244 seconds)
[14:30:40] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 240 seconds)
[14:30:52] <stealth_> https://pypi.org/project/pyserial-asyncio/#description
[14:30:55] <bjs> stealth_: R0b0t1: yeah I quickly scanned pyserial's docs and it looks like it has some asyncio-aware `async def` versions https://pyserial.readthedocs.io/en/latest/pyserial_api.html#asyncio
[14:31:09] <bjs> with the pyserial-asyncio package
[14:31:34] <R0b0t1> err I've tried that and it seems seriously broken
[14:31:35] <bjs> which is probably just putting it in threads anyway,  but at least it's someone else's job :P
[14:31:40] <bjs> R0b0t1: tried which
[14:31:45] <R0b0t1> the supposed async bindings
[14:32:11] <bjs> R0b0t1: they are broken?
[14:32:20] <R0b0t1> yes, seems like it
[14:32:29] <bjs> R0b0t1: hmm, why do you say that
[14:32:40] <R0b0t1> I dunno I just had too many issues using it
[14:32:41] *** Joins: varaindemian (uid73404@id-73404.charlton.irccloud.com)
[14:32:48] <R0b0t1> it was ages ago
[14:32:54] <R0b0t1> well, like 6mo ago
[14:33:05] <stealth_> ya most like async+subprocess, but at least it should solve some problems.
[14:33:09] <R0b0t1> so is there no way to wrap the call to the queue.get()
[14:33:13] <R0b0t1> so that I can use it with asyncio
[14:33:17] <R0b0t1> that seems path of least resistance
[14:33:53] <bjs> R0b0t1: use an asyncio.Queue and then use to_thread to do the pyserial things
[14:34:49] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[14:35:37] <R0b0t1> bjs: I am pretty sure I can't use asyncio.Queue because then the threads get a coroutine from queue.get() queue.put()
[14:35:38] *** Joins: vladoski (~vladoski@host-79-30-99-140.retail.telecomitalia.it)
[14:35:39] <bjs> R0b0t1: by making the communication between the ControlManager and ControlWriter totally async (with an asyncio.Queue and making ControlWriter's run an `async def`) then you remove any of the blocking on communication between them. Then add something like `await asyncio.to_thread(self.port.write, data)` to run it in a thread
[14:35:56] <bjs> R0b0t1: what do you mean they get a coroutine?
[14:35:58] *** Joins: Adoi (~Adoi@user/adoi)
[14:36:05] <vladoski> what's the most efficient way to check if a dictionary has the keys that I need and to check that keys to not contain None
[14:36:18] <R0b0t1> asyncio.Queue.get() returns a future that needs to be awaited, bjs
[14:36:34] <R0b0t1> I can't do that as the Reader/Writer are currently written
[14:36:46] <R0b0t1> same with .put()
[14:36:58] *** Quits: montxero (~user@149.167.149.74) (Remote host closed the connection)
[14:37:12] <bjs> R0b0t1: yes,  make them asyncio.Queue's and then make it an `async def run` and `await` the put/get's
[14:37:20] *** Joins: montxero (~user@149.167.149.74)
[14:37:28] <R0b0t1> bjs: but then I'm locking up on the serial port reads and writes
[14:37:28] <bjs> R0b0t1: then only use threads to do the actual pyserial stuff: `await asyncio.to_thread(self.port.write, data)`
[14:37:39] <R0b0t1> oh I see
[14:37:43] <bjs> R0b0t1: I literally gave you the line to run twice now
[14:37:45] <raxor2k> stealth: nice sheet, i have saved it :)
[14:37:48] <R0b0t1> well, wait... does that spawn a thread each time I try to write something
[14:37:55] <R0b0t1> I can't do that
[14:38:12] <stealth_> raxor2k, :) also its stealth_ with the "_" at the end
[14:38:57] <bjs> R0b0t1: no it doesn't,  it uses run_in_executor and there's a default exector
[14:39:01] <bjs> so there's a pool of threads
[14:39:04] <raxor2k> stealth_ : roger that
[14:39:16] <raxor2k> bjs: if he continues like this im sorry to say it but he becomes the new king here
[14:39:29] <raxor2k> bjs: but you are still the nr1 here so far
[14:39:35] <bjs> raxor2k: stop with that it's just noise
[14:40:51] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[14:41:52] *** Quits: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net) (Ping timeout: 252 seconds)
[14:42:51] *** Quits: y1n (~y1n@84-115-64-153.wifi.dynamic.surfer.at) (Ping timeout: 244 seconds)
[14:43:30] *** Joins: emika7 (~emika@83.136.182.45)
[14:43:46] *** Joins: khrbt (~znc@user/khrbt)
[14:43:49] *** Joins: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net)
[14:44:06] <jinsun_> <vladoski> "what's the most efficient way to..." <- `if all(k in d and d[k] is not None for k in required_keys): ...`
[14:44:09] <bjs> R0b0t1: if you're *really* worried about controlling exactly which threads, then you can use run_in_executor yourself and pass an explicit thread pool with the number of threads you want and stuff.  But the default is normally fine,  it has a default pool of threads (typically equal to the number of processors) and it will use those.
[14:44:37] *** Quits: emika (~emika@83.136.182.241) (Ping timeout: 252 seconds)
[14:44:37] *** emika7 is now known as emika
[14:46:20] <stealth_> vladoski, `if 'key' in directory and directory['key'] is not None:`
[14:47:50] <R0b0t1> ok I had to use run_in_executor
[14:47:53] <R0b0t1> thanks bjs got it
[14:48:17] <bjs> R0b0t1: "had to"?
[14:48:23] <R0b0t1> I'm on 3.7
[14:48:29] <bjs> Ah
[14:50:16] *** Quits: lightbulbjim (~lightbulb@user/lightbulbjim) (Quit: Sleeping...)
[14:50:18] <seanBE> I just noticed that the rss feeds disappeared from https://mail.python.org/archives/ Was this mentioned somewhere or is there an alternative rss source?
[14:52:03] *** Joins: lightbulbjim (~lightbulb@user/lightbulbjim)
[14:52:22] <R0b0t1> well bjs my takeaway from this is asyncio is a lot more complicated than I thought it was b/c I spent a week or so trying to get something similar working ~7mo ago (canbus, not serial)
[14:52:28] <R0b0t1> and didn't find the exact right things
[14:52:40] <R0b0t1> socket stuff is easy enough (because somebody else did it :)
[14:52:45] <bjs> R0b0t1: I think it's more that trying to combine async and threads is the tricky part here
[14:53:09] <R0b0t1> yeah what ticked me off last time was like, you really rely on the low level parts of the API being async and if they're not it gets pretty bad
[14:53:10] <bjs> the pure async stuff isn't too hard,  although maybe it's just different enough to the threading model you're used to it takes some getting used to
[14:53:19] *** Quits: fanis30 (~anon@adsl-180.37.6.1.tellas.gr) (Quit: WeeChat 3.2)
[14:53:32] <bjs> R0b0t1: that's why to_thread exists (/ run_in_executor) and it can handle those parts usually pretty well.
[14:53:54] <bjs> Infact a lot of libraries that claim to have an async API, really often only have a sync API + some wrappers that call run_in_executor ;)
[14:55:35] *** Joins: y1n (~y1n@84-115-65-99.wifi.dynamic.surfer.at)
[14:56:43] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Ping timeout: 252 seconds)
[14:57:02] *** Quits: shlomif (~shlomif@87.68.240.100.adsl.012.net.il) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[14:57:30] * varaindemian AttributeError: 'Name' object has no attribute 'text'
[14:57:44] <varaindemian> https://www.irccloud.com/pastebin/WEDI4ErH/
[14:57:47] <varaindemian> trying this
[14:58:23] *** Quits: Mija (~Mija@user/mija) (Quit: Mija)
[14:58:33] <bjs> varaindemian: the error would suggest the exdata.exchange object doesn't have a .text method
[15:01:42] <varaindemian> bjs: took it fro mehre tho https://www.tutorialspoint.com/python_network_programming/python_dns_look_up.htm
[15:02:34] *** Joins: Fedorasan (~fedorasan@user/fedorasan)
[15:02:36] <grawity> stealth_: hmm is that actually better than "directory.get('key') is not None"
[15:03:17] <stealth_> grawity, yes, cause `.get()` will return None by default if 'key' is not found.
[15:03:38] <bjs> varaindemian: that page looks very old,  what do the actual docs for dnspython say
[15:04:06] <stealth_> grawity, since its return `None` you don't know if the value itself was None of key not found! get it?
[15:04:33] <bjs> varaindemian: here are examples from dnspython's actual webpage it seems https://www.dnspython.org/examples/
[15:04:40] <grawity> stealth_: but that's the same condition anyway, isn't it
[15:05:04] <jinsun> stealth_: but in this case it doesn't matter because you want to give false either way, so the .get way is equivalent actually
[15:05:05] <grawity> if it were two separate 'if' blocks I wouldn't have asked
[15:05:31] <grawity> but it's one and the end result is the same, so I'm curious about whether .get() would be measurably slower
[15:06:51] *** Joins: zaquest (~notzaques@5.128.210.178)
[15:08:02] <stealth_> grawity, jinsun suppose, it can be gotcha, maybe splitting `and` to another `if` would better error checking
[15:08:16] <R0b0t1> bjs: if I need to dispatch and await on a blocking function but potentially interrupt that control flow with an asyncio.Event how do I do that?
[15:09:58] <jinsun> grawity: with a random timeit on my ssytem, the .get way is slightly faster actually, 236 ns with .get vs 299 ms with the and condition
[15:10:00] <bjs> R0b0t1: you mean you've started something in an executor and now you want to stop awaiting it?
[15:10:10] <R0b0t1> yeah, when an asyncio.Event is set
[15:10:13] <R0b0t1> or when it completes
[15:10:47] <jinsun> grawity: ugn ns both ways, not ms
[15:11:46] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[15:12:03] <stealth_> grawity, if you do `if 'key' in directory` it would get faster then `.get()` the `and` part only gets called if first part is true, `.get()` internally probably does the same.
[15:12:29] <stealth_> jinsun, no way python goes into nm
[15:12:32] *** Quits: JavaBean (~javabean@user/javabean) (Ping timeout: 245 seconds)
[15:12:58] <bjs> R0b0t1: hmm, Python does not have so-called "asynchronous exceptions" so you cannot inject an exception into a running thread in general.
[15:13:19] <R0b0t1> yeah, I've seen a lot of case studies on how that is hard/impossible
[15:13:29] <jinsun> stealth_: well it is 300 ns, not 1 ns
[15:13:31] <R0b0t1> but the asyncio framework *does* provide the base for a way to do it
[15:13:31] <bjs> R0b0t1: this is one of the big benefits of async (to be able to cancel something),  so if you actually want to stop the thread doing the work you need to write the thread to e.g. check the Event
[15:13:45] *** Parts: HaJo (~hajo@77.75.204.185.fixip.bitel.net) ()
[15:14:35] <R0b0t1> ok so I guess spin with a wait on the future and check the event
[15:15:02] <bjs> R0b0t1: it provides a way to do it for asyncio Tasks, not for threads. You can probably cancel awaiting the Future, but the background thread will continue to run.
[15:15:30] <bjs> R0b0t1: but to make the actual Thread's work stop the thread will have to check the Event itself (e.g. with .is_set() I think) and then clean itself up
[15:16:56] <R0b0t1> this isn't a thread, yeah that'd be hopeless
[15:17:00] *** Joins: ice9 (~ice9@user/ice9)
[15:17:02] <R0b0t1> well. killing a thread works.
[15:17:05] <R0b0t1> this seems to work, sec
[15:17:06] <bjs> R0b0t1: what isn't a thread?
[15:17:21] <bjs> R0b0t1: asyncio Task's have a .cancel() method you can call, that will stop them at the next `await`.
[15:17:32] *** Joins: somlis (~somlis@user/somlis)
[15:17:33] <jinsun> grawity: so that test was when the key was in the dictionary, if the key is not in the dictionary then the and way becomes faster and wins
[15:18:20] <R0b0t1> bjs: https://paste.rs/3mZ.py
[15:18:29] <R0b0t1> _internal_scan
[15:18:34] *** Joins: Archenfield (~textual@2405:6580:8e60:4600:79f2:7a96:f606:e526)
[15:18:38] <stealth_> jinsun, ok! i am not sure how you are measuring it, 1 ms = 1000000ns
[15:20:04] <bjs> R0b0t1: why are you still using queue.Queue to communicate?
[15:20:26] <R0b0t1> I have to, that zeroconf library spawns a thread that invokes methods from my class
[15:20:32] <R0b0t1> I don't know why
[15:20:34] <bjs> R0b0t1: things will work much easier the more you use asyncio rather than trying to use threading to communicate.  Let the threads do the work but use asyncio for all the gluing
[15:20:41] <R0b0t1> yeah I'm aware
[15:21:21] <bjs> R0b0t1: but this doesn't mean your Queue needs to be a queue.Queue
[15:21:29] <R0b0t1> how's that
[15:21:31] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[15:21:57] <bjs> R0b0t1: you're the one who makes and uses the Queue, not zeroconf
[15:22:05] *** Quits: Archenfield (~textual@2405:6580:8e60:4600:79f2:7a96:f606:e526) (Client Quit)
[15:22:16] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[15:22:25] <R0b0t1> yeah but zeroconf makes and uses the thread
[15:22:54] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[15:23:01] *** Quits: montybanksnyc (~montybank@pool-71-127-199-18.nwrknj.fios.verizon.net) (Remote host closed the connection)
[15:23:20] *** Joins: montybanksnyc (~montybank@pool-71-127-199-18.nwrknj.fios.verizon.net)
[15:23:41] <R0b0t1> I'm giving it some more thought but I don't know how to put asyncio in front of it without opening up its guts
[15:23:45] <bjs> R0b0t1: hmm,  fair enough.
[15:24:33] <bjs> R0b0t1: does the code as-given work or?
[15:25:09] <R0b0t1> yeah
[15:25:20] <R0b0t1> like you said still not pleased I have to use (I think) a normal queue
[15:25:21] *** Joins: Archenfield (~textual@2405:6580:8e60:4600:f9eb:d5ef:b6d0:e092)
[15:25:24] *** Quits: Cypris (uid511277@user/cypris) (Killed (NickServ (GHOST command used by cypris_!uid507362@id-507362.tinside.irccloud.com)))
[15:25:28] *** Joins: Dotz0cat (~Dotz0cat@h30.94.187.173.dynamic.ip.windstream.net)
[15:26:38] *** Joins: cypris (uid507362@user/cypris)
[15:26:57] <R0b0t1> oh wait there's async code in the samples
[15:26:58] *** dcaro is now known as dcaro_away
[15:27:00] <R0b0t1> smh
[15:27:17] <jinsun> stealth_: I was using %timeit, but it is not too surprising really, it was just `dict.get(key) is not None`, whiich is mostly happening in C
[15:27:17] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 244 seconds)
[15:27:19] *** Joins: noctavian_ (~noctavian@gateway/tor-sasl/noctavian)
[15:27:42] *** Quits: Strom (strom@fedora/strom) ()
[15:27:54] <R0b0t1> good thing I looked again
[15:28:25] <bjs> R0b0t1: i guess you will solve your problem by making things async, but in general you can do something like https://bpa.st/AOHQ
[15:28:50] <stealth_> jinsun, hmm cool if it is that fast.
[15:29:18] *** Quits: noctavian (~noctavian@gateway/tor-sasl/noctavian) (Ping timeout: 276 seconds)
[15:29:31] <bjs> instead of checking, you can just await them and let someone else .cancel() the future and that will raise an exception on the `await`, and if unhandled will propagate up through the async-defs until it is. My example shows it being handled later on.  But note that this only cancels the async side of things, the threads are still running in the background even after main reaches the end.
[15:29:47] *** Joins: Strom (strom@fedora/strom)
[15:31:15] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Quit: No Ping reply in 180 seconds.)
[15:32:40] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[15:33:01] *** Quits: OPK (~OPK@user/opk) (Ping timeout: 252 seconds)
[15:34:46] <stealth_> bjs, does `run_in_executor` just run in thread?
[15:35:18] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[15:36:26] <bjs> stealth_: depends on the executor you pass, but yes the default is to run things in a thread pool
[15:36:57] *** Joins: JavaBean (~javabean@user/javabean)
[15:37:36] <stealth_> bjs, makes sense
[15:37:37] *** Joins: besnn (~besnn@user/besnn)
[15:37:45] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[15:39:07] *** Joins: jmft2 (~jmft2@81.149.115.87.dyn.plus.net)
[15:39:56] <R0b0t1> bjs: I think I'm going to keep the executor, the library as-is is pretty rough
[15:40:02] <R0b0t1> this is actually clearer
[15:41:07] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[15:41:15] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[15:42:29] *** Joins: theprophet (~theprophe@85.114.228.184)
[15:42:55] *** Quits: y1n (~y1n@84-115-65-99.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[15:44:55] *** Quits: shad (~shad@user/shad) (Ping timeout: 250 seconds)
[15:50:24] *** Joins: sumagnadas (~sumagnada@45.112.68.38)
[15:50:30] *** cypris is now known as curiosity
[15:51:31] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Quit: WeeChat 3.2)
[15:52:22] <sumagnadas> so i am making an application for myself which will pull my supermix playlist from yt music and play it using libvlc module but it seems like i dont have control over it from the notification area of ubuntu or using media keys on my laptop....so how do i get it to show up on the notification area as well as control it using media keys?
[15:54:59] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[15:55:29] *** Joins: y1n (~y1n@84-115-65-99.wifi.dynamic.surfer.at)
[15:55:40] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:eda0:63af:8279:f703) (Ping timeout: 240 seconds)
[15:57:15] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 244 seconds)
[15:57:43] *** Joins: legola (~legola@46.235.100.27)
[15:58:17] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[15:59:57] *** Quits: sumagnadas (~sumagnada@45.112.68.38) (Quit: WeeChat 3.2)
[16:08:09] <theprophet> is it neccessary to learn meanings of builtin functions before you start coding? or is it better to do it while writing the codes?
[16:08:18] *** Joins: OPK (~OPK@user/opk)
[16:10:11] *** Joins: Ergo^ (~ergo@91.238.59.144)
[16:13:09] *** Joins: Karatsuba (~jamer05@user/karatsuba)
[16:13:44] <R0b0t1> summonner: I know it may not be what you want to do but highly recommend dling your playlists with youtube-dl first
[16:13:46] <R0b0t1> it'll take a playlist url
[16:13:57] *** Joins: vince (~vince@75.127.14.76)
[16:15:20] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[16:15:32] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[16:17:23] *** Joins: Barones (~Barones@2804:214:8192:e7a4:ddcb:b8ad:dfa6:c7bd)
[16:18:18] <R0b0t1> probably some good problems to solve around importing playlists and managing them
[16:18:29] <R0b0t1> been thinking about doing it for a while
[16:21:35] *** Quits: lightbulbjim (~lightbulb@user/lightbulbjim) (Quit: Leaving...)
[16:21:41] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[16:22:10] <BinarySavior> hi i'm trying to use Tensorflow on my nvidia gpu, but i'm getting "Could not load libcudnn.so.8"
[16:22:41] <BinarySavior> however i verified it's in the targets/ dir within my cuda installation
[16:22:42] <summonner> R0b0t1, did you mean me?
[16:23:53] <BinarySavior> i have tensorflow installed within a venv, but cuda and libcudnn are installed on the host OS, how can I configure Tensorflow to make sure it's looking in the right place for the libcudnn
[16:23:55] <summonner> this is #python
[16:24:13] *** Joins: Adoi (~Adoi@user/adoi)
[16:26:11] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 244 seconds)
[16:28:26] *** Quits: Barones (~Barones@2804:214:8192:e7a4:ddcb:b8ad:dfa6:c7bd) (Remote host closed the connection)
[16:28:48] *** Joins: dez (uid92154@user/dez)
[16:32:06] *** Joins: sturmmann (~sturmmann@user/sturmmann)
[16:32:07] *** Quits: sturmmann (~sturmmann@user/sturmmann) (Client Quit)
[16:32:18] *** Joins: sturmmann (~sturmmann@user/sturmmann)
[16:32:45] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[16:33:30] *** Joins: gggp (~textual@111.63.14.115)
[16:33:41] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[16:33:46] *** Quits: dld (~davidlowr@2601:197:600:1210:2dc5:f09c:7b2e:fda2) (Ping timeout: 250 seconds)
[16:34:40] *** Quits: Archenfield (~textual@2405:6580:8e60:4600:f9eb:d5ef:b6d0:e092) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:35:15] *** Quits: gggp (~textual@111.63.14.115) (Client Quit)
[16:35:29] *** Quits: Karatsuba (~jamer05@user/karatsuba) (Ping timeout: 244 seconds)
[16:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:37:35] *** Joins: ssbr` (~ssbr@python/site-packages/ssbr)
[16:39:22] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[16:42:43] *** Quits: y1n (~y1n@84-115-65-99.wifi.dynamic.surfer.at) (Ping timeout: 244 seconds)
[16:44:33] *** Joins: zuQe8 (~zuQe8@cpc105068-sgyl40-2-0-cust196.18-2.cable.virginm.net)
[16:46:18] *** Quits: umamisoup (uid511883@id-511883.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[16:46:41] *** Joins: nuala (~nuala@user/nuala)
[16:47:16] *** Quits: rakoon (~rakoon@2a02:2149:824f:5900:405f:dae5:cc42:679d) (Ping timeout: 252 seconds)
[16:47:22] *** Quits: crawler (~crawler__@user/crawler) (Ping timeout: 244 seconds)
[16:47:38] *** Joins: crawler (~crawler__@user/crawler)
[16:47:43] *** Joins: georgios (~georgios@user/georgios)
[16:48:02] *** Joins: rakoon (~rakoon@2a02:2149:824f:5900:d9c9:4f8:62db:2934)
[16:48:55] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 244 seconds)
[16:49:10] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[16:49:52] *** Quits: pankid (~quassel@pankid.club) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[16:50:26] *** Joins: pankid (~quassel@pankid.club)
[16:51:58] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[16:56:07] *** Joins: y1n (~y1n@84-115-65-99.wifi.dynamic.surfer.at)
[16:58:15] *** dcaro_away is now known as dcaro
[17:01:06] *** Joins: shad (~shad@user/shad)
[17:01:07] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (Excess Flood)
[17:01:07] *** Quits: casastorta (~casastort@dc4.krivokuca.net) (Ping timeout: 250 seconds)
[17:01:10] *** Joins: xcombelle (~xavie@176-139-252-198.abo.bbox.fr)
[17:01:17] *** Joins: casastorta (~casastort@dc4.krivokuca.net)
[17:01:38] *** Joins: besnn (~besnn@user/besnn)
[17:01:46] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[17:02:09] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:02:59] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e840c-136.dhcp.inet.fi)
[17:03:47] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Ping timeout: 245 seconds)
[17:05:41] *** Quits: raxor2k (~raxor2k@78.158.252.74) ()
[17:08:56] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[17:09:15] *** Quits: jmft2 (~jmft2@81.149.115.87.dyn.plus.net) (Quit: This computer has gone to sleep)
[17:09:40] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Quit: leaving)
[17:09:52] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[17:10:35] *** Quits: newpy (~newpy@2601:280:4381:1390:d8a2:4368:1fe2:a8e3) (Quit: Leaving)
[17:12:03] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: neolem (~neolem@2001:470:69fc:105::c675) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: morguldir (~morguldir@2001:470:69fc:105::21bd) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: psydroid (~psydroid@user/psydroid) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: allegary (~allegary@apache/committer/gjm) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: aifa[m] (~aifamatri@2001:470:69fc:105::d06e) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: ronny (~ronny@2001:470:69fc:105::b57) (Quit: Bridge terminating on SIGTERM)
[17:12:04] *** Quits: cotsuka (~cotsuka@user/cotsuka) (Quit: Bridge terminating on SIGTERM)
[17:12:05] *** Quits: gloomy (~gloomy@2001:470:69fc:105::ce00) (Quit: Bridge terminating on SIGTERM)
[17:12:05] *** Quits: orbatos[m] (~orbatos@user/orbatos) (Quit: Bridge terminating on SIGTERM)
[17:12:05] *** Quits: syphar (~syphar@2001:470:69fc:105::2ad6) (Quit: Bridge terminating on SIGTERM)
[17:12:05] *** Quits: meatballs (~meatballs@2001:470:69fc:105::633) (Quit: Bridge terminating on SIGTERM)
[17:12:06] *** Quits: binarymutt[m] (~binarymut@user/binarymutt) (Quit: Bridge terminating on SIGTERM)
[17:12:08] *** Quits: bonkinator (~bonkinato@2001:470:69fc:105::173e) (Quit: Bridge terminating on SIGTERM)
[17:12:08] *** Quits: kikijiki[m] (~kikijiki@user/kikijiki) (Quit: Bridge terminating on SIGTERM)
[17:12:09] *** Quits: HarryGuerrilla (~harryguer@2001:470:69fc:105::e24d) (Quit: Bridge terminating on SIGTERM)
[17:12:09] *** Quits: BrenBarn1 (~brenbarn@2001:470:69fc:105::2da2) (Quit: Bridge terminating on SIGTERM)
[17:12:09] *** Quits: amblina[m] (~amblinama@2001:470:69fc:105::e2de) (Quit: Bridge terminating on SIGTERM)
[17:12:09] *** Quits: canardo1 (~canardo@2001:470:69fc:105::e110) (Quit: Bridge terminating on SIGTERM)
[17:12:09] *** Quits: volgar1x (~volgar1xm@2001:470:69fc:105::e61d) (Quit: Bridge terminating on SIGTERM)
[17:12:09] *** Quits: jinsun_ (~jinsunmat@user/jinsun) (Quit: Bridge terminating on SIGTERM)
[17:12:09] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Quit: Bridge terminating on SIGTERM)
[17:12:09] *** Quits: aeva[m] (~aeva@2001:470:69fc:105::e2d9) (Quit: Bridge terminating on SIGTERM)
[17:12:11] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (Quit: Bridge terminating on SIGTERM)
[17:12:11] *** Quits: boris[m] (~borisruna@2001:470:69fc:105::32f3) (Quit: Bridge terminating on SIGTERM)
[17:12:12] *** Quits: jwon (~jwon@user/jwon) (Quit: Bridge terminating on SIGTERM)
[17:12:12] *** Quits: saltrocklamp[m] (~elementio@user/hexology) (Quit: Bridge terminating on SIGTERM)
[17:13:37] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Quit: WeeChat 3.2)
[17:13:54] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e840c-136.dhcp.inet.fi) (Quit: WeeChat 2.8)
[17:15:10] *** Joins: morguldir (~morguldir@2001:470:69fc:105::21bd)
[17:16:24] *** Joins: xcombelle (~xavie@176-139-252-198.abo.bbox.fr)
[17:16:51] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:17:31] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 252 seconds)
[17:18:30] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 276 seconds)
[17:18:51] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[17:18:55] *** Joins: jmft2 (~jmft2@81.149.115.87.dyn.plus.net)
[17:20:11] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[17:22:23] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:23:09] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[17:23:10] *** Quits: sus (thelounge@user/zeromomentum) (Quit: the lounge - https://webirc.envs.net)
[17:23:40] *** Quits: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca) (Ping timeout: 240 seconds)
[17:23:55] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[17:24:42] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[17:24:42] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[17:24:42] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[17:24:42] *** Joins: jwon (~jwon@user/jwon)
[17:24:42] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[17:24:42] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[17:24:42] *** Joins: BrenBarn (~brenbarn@2001:470:69fc:105::2da2)
[17:24:42] *** Joins: meatballs (~meatballs@2001:470:69fc:105::633)
[17:24:42] *** Joins: kikijiki[m] (~kikijiki@user/kikijiki)
[17:24:42] *** Joins: syphar (~syphar@2001:470:69fc:105::2ad6)
[17:24:42] *** Joins: orbatos[m] (~orbatos@user/orbatos)
[17:24:42] *** Joins: psydroid (~psydroid@user/psydroid)
[17:24:42] *** Joins: binarymutt[m] (~binarymut@user/binarymutt)
[17:24:42] *** Joins: neolem (~neolem@2001:470:69fc:105::c675)
[17:24:42] *** Joins: boris[m] (~borisruna@2001:470:69fc:105::32f3)
[17:24:42] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[17:24:42] *** Joins: gloomy (~gloomy@2001:470:69fc:105::ce00)
[17:24:42] *** Joins: canardo (~canardo@2001:470:69fc:105::e110)
[17:24:42] *** Joins: allegary (~allegary@apache/committer/gjm)
[17:24:42] *** Joins: cotsuka (~cotsuka@user/cotsuka)
[17:24:42] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[17:24:42] *** Joins: ronny (~ronny@2001:470:69fc:105::b57)
[17:24:43] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[17:24:56] *** Joins: aeva[m] (~aeva@2001:470:69fc:105::e2d9)
[17:26:05] <summonner> BinarySavior, vaguely, something to do with your library paths. normally they're not set as a user. LD_PATH or something like that, I'm not 100% sure
[17:26:17] *** Parts: lessless (~lessless@ip.82.144.211.11.stat.volia.net) (Textual IRC Client: www.textualapp.com)
[17:26:19] *** Joins: sus (thelounge@user/zeromomentum)
[17:26:21] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[17:26:22] *** Quits: sus (thelounge@user/zeromomentum) (Client Quit)
[17:26:51] *** Joins: sus (thelounge@user/zeromomentum)
[17:27:23] <domhnall> youtube-dl is written in python but it
[17:27:42] <domhnall> its development is stale, use https://github.com/yt-dlp/yt-dlp in stead, R0b0t1
[17:28:33] *** Joins: nomic (~nomic@185.217.117.169)
[17:28:35] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[17:28:37] <mdk> I don't see it stale: https://github.com/ytdl-org/youtube-dl
[17:29:02] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[17:29:26] <domhnall> months vs hours
[17:29:44] <Kabouik> I think yt-dlp was created when Github censored youtube-dl, but they have reverted it since then, didn't they?
[17:30:07] <domhnall> Kabouik: I don't know.
[17:30:33] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[17:30:54] <mdk> domhnall: 1 month (during holidays) without a commit does not mean stale for me, at least not stale enough to create a fork and advertise it, as this been discussed with ytdl folks?
[17:30:57] <Kabouik> They did restore the repository, but what I'm not sure is whether yt-dlp was created at the time as an alternative, and how they drifted apart since then.
[17:31:06] *** Joins: djhankb (~djhankb@208.113.164.68)
[17:31:30] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e840c-136.dhcp.inet.fi)
[17:32:32] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Ping timeout: 245 seconds)
[17:32:41] <mdk> I fear it's more like "working with humans is too hard, I don't want to open PRs, I'll just fork." but TBH I did not looked at it :D
[17:34:29] <domhnall> mdk: good point about the development.
[17:37:03] <The-Compiler> mdk: the last youtube-dl release was almost 3 months ago, before that, it used to have new releases all 1-2 weeks
[17:37:40] <The-Compiler> mdk: so it's certainly not as active anymore as it used to be, and the fact that it has almost 850 open pull requests probably was reason enough for people to fork it
[17:38:18] <mdk> forking instead of helping looks counter productive but ... humans I bet ...
[17:38:37] *** Joins: heco (~redrum@user/redrum88)
[17:38:52] *** Quits: sus (thelounge@user/zeromomentum) (Quit: the lounge - https://webirc.envs.net)
[17:39:22] *** Joins: sus (thelounge@user/zeromomentum)
[17:39:22] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e840c-136.dhcp.inet.fi) (Quit: WeeChat 2.8)
[17:42:39] *** Quits: y1n (~y1n@84-115-65-99.wifi.dynamic.surfer.at) (Ping timeout: 244 seconds)
[17:43:35] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[17:46:34] *** Joins: Halven (sid515085@id-515085.highgate.irccloud.com)
[17:47:54] *** Quits: elkclone (~elkclone@user/elkclone) (Quit: Leaving)
[17:56:25] *** Joins: y1n (~y1n@84-115-65-99.wifi.dynamic.surfer.at)
[17:57:53] *** Joins: nyloc (~nyloc@p4fde5e51.dip0.t-ipconnect.de)
[17:58:21] *** Quits: Warped (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[17:58:40] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 244 seconds)
[17:59:44] *** Joins: Warped (~Warped@user/warped)
[17:59:53] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[18:00:36] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:02:08] *** Joins: shlomif (~shlomif@87.68.240.100.adsl.012.net.il)
[18:03:31] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:03:41] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[18:06:56] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 244 seconds)
[18:07:16] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[18:07:35] *** Quits: frost (~frost@59.71.240.119) (Quit: Connection closed)
[18:07:47] *** Joins: cryptomonad (~cryptomon@194.191.225.149)
[18:08:27] *** Joins: Archenfield (~textual@2405:6580:8e60:4600:3d4c:df55:3da6:41eb)
[18:09:06] <varaindemian> https://python-docx.readthedocs.io/en/latest/index.html would you suggest something better for editing docx hyperlinks?
[18:09:13] *** Quits: rakoon (~rakoon@2a02:2149:824f:5900:d9c9:4f8:62db:2934) (Ping timeout: 252 seconds)
[18:09:31] *** Quits: shad (~shad@user/shad) (Ping timeout: 244 seconds)
[18:11:31] *** Joins: shad (~shad@user/shad)
[18:11:48] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[18:11:56] *** Joins: mokulus (~mokulus@user/mokulus)
[18:11:59] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[18:12:41] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-c005-d117-11eb-28f3.res6.spectrum.com)
[18:13:04] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:13:31] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[18:13:46] *** Joins: fdan (~fdan@192.146.154.3)
[18:15:14] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Remote host closed the connection)
[18:15:29] *** Quits: jaymzwork (~jaymz@ec2-54-175-12-73.compute-1.amazonaws.com) (Quit: Leaving)
[18:16:05] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Read error: Connection reset by peer)
[18:16:56] *** Joins: Elzington (~Elzington@68.235.43.133)
[18:17:04] *** Joins: quasineutral4 (~quaisneut@user/quasineutral)
[18:17:56] *** Quits: quasineutral (~quaisneut@user/quasineutral) (Read error: Connection reset by peer)
[18:17:56] *** quasineutral4 is now known as quasineutral
[18:18:06] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[18:19:07] *** Quits: d0ku (~d0ku@178.43.56.75.ipv4.supernova.orange.pl) (Ping timeout: 252 seconds)
[18:20:27] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 245 seconds)
[18:21:19] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:21:35] *** Joins: dld (~davidlowr@2620:6e:6000:2900:3d0a:b99:963f:cf07)
[18:27:36] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 244 seconds)
[18:28:09] *** Quits: SuperLag (~akulbe@user/superlag) (Remote host closed the connection)
[18:28:38] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 244 seconds)
[18:28:55] *** Joins: blingrang_ (~blingrang@user/blingrang)
[18:29:05] *** Joins: SuperLag (~akulbe@user/superlag)
[18:29:13] *** Joins: fanis30 (~anon@adsl-180.37.6.1.tellas.gr)
[18:30:30] *** Joins: computeiro (~Wender@191.54.169.111)
[18:30:31] *** Quits: NightMonkey (~NightMonk@user/nightmonkey) (Quit: ZNC - http://znc.in)
[18:30:47] *** Quits: iflema (~ian@user/iflema) (Quit: iflema)
[18:31:06] *** Joins: lethu (~lethu@user/lethu)
[18:31:09] <BinarySavior> summonner, thanks, the key was adding my libs to LD_LIBRARY_PATH
[18:31:19] *** Quits: cryptomonad (~cryptomon@194.191.225.149) (Read error: Connection reset by peer)
[18:31:28] *** Joins: cryptomonad (~cryptomon@194.191.225.149)
[18:31:43] *** Quits: wender (~Wender@189.37.67.41) (Ping timeout: 252 seconds)
[18:31:50] <bitblit> just started getting this error when I run "alot": Permission denied: '/usr/local/lib/python3.9/dist-packages/sh-1.14.2.dist-info'. i noticed at the same path the python 3.8 folder is owned by root:staff, whereas 3.9 is owned by root:root. looks like 3.8 also has some special permissions. anyway, question what should my 3.9 permissions be?
[18:32:05] <summonner> BinarySavior, great!
[18:33:17] <stealth_> bitblit, you must have installed package using root? `sudo pip install ... ` ?
[18:33:36] <stealth_> bitblit, now you are trying to access it as user
[18:33:41] <grym> (which is v. naughty, don't do that)
[18:33:45] *** Quits: pgib (~textual@173.38.117.82) (Ping timeout: 248 seconds)
[18:34:23] <stealth_> ya never install pip package as root
[18:34:36] *** Quits: cryptomonad (~cryptomon@194.191.225.149) (Client Quit)
[18:35:14] <bitblit> ah, i must have done so!
[18:35:28] <bitblit> thanks
[18:35:41] *** mbrndtgn5 is now known as mbrndtgn
[18:35:52] *** Quits: blingrang_ (~blingrang@user/blingrang) (Ping timeout: 245 seconds)
[18:36:28] *** Joins: blingrang_ (~blingrang@user/blingrang)
[18:36:34] *** Joins: Ecophobia (~Ecophobia@mobile-access-2e840c-136.dhcp.inet.fi)
[18:38:25] *** Joins: NightMonkey (~NightMonk@user/nightmonkey)
[18:42:06] *** Quits: Anarchic` (~Anarchic@getlegit.co.uk) (Quit: ZNC - http://znc.in)
[18:42:46] *** Quits: y1n (~y1n@84-115-65-99.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[18:43:42] *** Joins: Anarchic (~Anarchic@getlegit.co.uk)
[18:44:07] <bitblit> well actually i do need to import that for a script running as root.
[18:44:27] *** Joins: qlixed (~qlixed@181.44.129.13)
[18:44:39] *** Joins: fikran (~fikran@user/fikran)
[18:44:58] <grym> you can run a venv as root, too
[18:45:10] *** Quits: Ecophobia (~Ecophobia@mobile-access-2e840c-136.dhcp.inet.fi) (Quit: WeeChat 2.8)
[18:45:15] <grym> you can run a venv you installed as a user, as root, even
[18:45:19] *** Quits: Anarchic (~Anarchic@getlegit.co.uk) (Remote host closed the connection)
[18:45:44] *** Quits: Archenfield (~textual@2405:6580:8e60:4600:3d4c:df55:3da6:41eb) (Read error: Connection reset by peer)
[18:46:24] *** Joins: Anarchic (~Anarchic@getlegit.co.uk)
[18:46:31] *** Quits: nyloc (~nyloc@p4fde5e51.dip0.t-ipconnect.de) (Quit: Client closed)
[18:47:51] <bitblit> thx i'll have to read up on venv, not really familiar.
[18:48:53] *** Quits: jmft2 (~jmft2@81.149.115.87.dyn.plus.net) (Quit: This computer has gone to sleep)
[18:49:08] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:50:26] *** Joins: logithack (~logithack@p200300cfbf366f00d74a46fbd53e1789.dip0.t-ipconnect.de)
[18:50:33] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[18:50:40] *** Quits: logithack (~logithack@p200300cfbf366f00d74a46fbd53e1789.dip0.t-ipconnect.de) (Client Quit)
[18:51:23] *** Quits: m33k (dexter@user/m33k) (Quit: WeeChat 2.3)
[18:51:53] *** Quits: NightMonkey (~NightMonk@user/nightmonkey) (Quit: ZNC - http://znc.in)
[18:52:55] *** Quits: ssbr` (~ssbr@python/site-packages/ssbr) (Remote host closed the connection)
[18:53:15] *** Joins: ssbr` (~ssbr@python/site-packages/ssbr)
[18:53:33] *** Joins: zebrag (~chris@user/zebrag)
[18:55:39] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:55:41] *** Joins: y1n (~y1n@84-115-65-99.wifi.dynamic.surfer.at)
[18:56:13] *** Joins: akk (~akk@174-28-98-206.albq.qwest.net)
[18:56:27] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:7d60:692:8362:ee4b) (Ping timeout: 250 seconds)
[18:57:31] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[19:01:37] <varaindemian> can anyobody help me with a suggestion please?
[19:01:56] <shlomif> varaindemian: hi
[19:01:58] <varaindemian> questions asked earlier: https://python-docx.readthedocs.io/en/latest/index.html would you suggest something better for editing docx hyperlinks?
[19:02:09] *** Quits: damonlynch (~ngaio@2601:245:c700:2c06:d13:1085:8371:b421) (Quit: Leaving)
[19:03:40] <shlomif> varaindemian: i never tried doing that using python/etc
[19:03:40] *** Quits: sus (thelounge@user/zeromomentum) (Quit: the lounge - https://webirc.envs.net)
[19:03:55] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[19:04:11] *** Joins: sus (thelounge@user/zeromomentum)
[19:05:50] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[19:05:50] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 244 seconds)
[19:06:21] <varaindemian> :(
[19:06:23] <The-Compiler> varaindemian: "Automate the boring stuff" is generally a good book and recommends python-docx as well FWIW
[19:09:27] *** Quits: emika (~emika@83.136.182.45) (Ping timeout: 244 seconds)
[19:09:30] *** Joins: emika7 (~emika@185.207.249.86)
[19:09:47] *** Joins: Julian (~tos9@python/site-packages/Julian)
[19:10:31] <ens> i have an app that runs continuously but restarts once every day. if i want to maintain a persistent dictionary is there a module i should use? or is it just acceptable to dump a json string to a file and reload it at startup?
[19:10:46] <ens> module/import
[19:11:00] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[19:11:10] <varaindemian> The-Compiler: interesting!
[19:11:29] <The-Compiler> ens: json seems fine
[19:13:19] *** Joins: Nei_ (~ailin@user/nemui)
[19:13:29] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (Quit: Ping timeout (120 seconds))
[19:13:30] *** Quits: WayToDoor (~WayToDoor@user/waytodoor) (Quit: Ping timeout (120 seconds))
[19:13:31] *** Joins: mbrndtgn7 (~mbrndtgn@undecidable.de)
[19:13:51] *** Joins: WayToDoor (~WayToDoor@user/waytodoor)
[19:14:27] *** Joins: w1kl4s (~w1kl4s@user/w1kl4s)
[19:15:10] *** Quits: mbrndtgn (~mbrndtgn@undecidable.de) (Ping timeout: 240 seconds)
[19:15:10] *** mbrndtgn7 is now known as mbrndtgn
[19:15:49] *** Quits: Nei (~ailin@user/nemui) (Remote host closed the connection)
[19:16:16] *** Quits: srji (~srji@static.43.141.203.116.clients.your-server.de) (Ping timeout: 252 seconds)
[19:16:36] <shlomif> ens: hi. do note that json and python have different type systems
[19:16:47] *** Joins: srji (~srji@static.43.141.203.116.clients.your-server.de)
[19:16:52] *** Nei_ is now known as Nei
[19:17:12] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 244 seconds)
[19:18:43] *** Quits: sus (thelounge@user/zeromomentum) (Quit: the lounge - https://webirc.envs.net)
[19:18:49] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:c1dc:359d:3459:e8da)
[19:19:12] *** Joins: sus (thelounge@user/zeromomentum)
[19:21:45] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Ping timeout: 248 seconds)
[19:22:14] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[19:22:15] *** Joins: kevinlc (~kevinalh@2800:200:e8d0:20b::4)
[19:22:34] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[19:22:44] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[19:23:17] <akk> varaindemian: O
[19:23:58] <akk> varaindemian: I'll second python-docx, I've found it fairly easy to use for simple things, though the docs aren't always too clear.
[19:24:02] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:24:35] *** Joins: Pickchea (~private@user/pickchea)
[19:24:43] *** Quits: sus (thelounge@user/zeromomentum) (Quit: the lounge - https://webirc.envs.net)
[19:25:13] *** Joins: sus (thelounge@user/zeromomentum)
[19:25:33] *** Joins: Julian (~tos9@python/site-packages/Julian)
[19:26:48] *** Joins: Payam (~Payam@c188-150-219-9.bredband.tele2.se)
[19:28:37] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[19:28:52] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[19:29:31] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 252 seconds)
[19:29:33] *** Joins: raxor2k (~raxor2k@78.158.252.74)
[19:29:48] *** Joins: SuperL4g (~akulbe@user/superlag)
[19:30:39] <raxor2k> stealth_ : how can i merge to dict together? lets say i have dict1: = {name : "timmi", "points" : 2} , and dict2: {"name" : "timmi", "gender" : "male"},   and i want to merge them together using "name" key +
[19:30:40] <raxor2k> ?
[19:31:08] <bjs> raxor2k: make a new dict and then put what you want in the new dict
[19:31:21] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[19:31:36] <stealth_> raxor2k, `dict2.update(dict1)`
[19:32:08] <raxor2k> bjs: ok but i still need a way to store it together, like "name" : timmi from dict 1 should be placed with "name" : timmi from dict2
[19:32:11] <grym> raxor2k: {**dict1, **dict2}, and dict2's values win
[19:32:18] *** Joins: besnn (~besnn@user/besnn)
[19:32:19] *** Joins: kristian (~kristian@212.51.152.242)
[19:32:37] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[19:32:45] <bjs> raxor2k: what do you mean "together",  it's just a dictionary.
[19:33:26] <raxor2k> bjs: i will try what u said
[19:33:27] <grym> raxor2k: https://bpa.st/3QTQ
[19:33:29] <grym> e.g.
[19:33:33] <raxor2k> i will be shocked if this works
[19:33:55] <bjs> raxor2k: I feel like you've missed some context out from describing it to us,  but maybe you should just try do it yourself then show us your attempt if it goes wrong
[19:34:01] *** Joins: aead (~aead@user/aead)
[19:34:10] *** Quits: SuperL4g (~akulbe@user/superlag) (Client Quit)
[19:34:40] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 240 seconds)
[19:34:52] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[19:34:53] <stealth_> raxor2k, or https://bpa.st/VHLQ this way you are not creating a 3rd dict
[19:35:46] <raxor2k> im trying both solutions right now
[19:36:20] *** Joins: magla (~gelignite@55d413e5.access.ecotel.net)
[19:36:24] <ens> i'm writing a discord bot. the script defines client = discord.client() and some async methods, and then the script does client.run(..) to start waiting for events. is there some way to have another bit of code that runs periodically say, every 10 seconds or such?
[19:37:34] *** Joins: d0ku (~d0ku@178.43.56.75.ipv4.supernova.orange.pl)
[19:37:38] <kristian> I am going to need to write a lot of functions, all of them are of similar nature and will collect data. There will be around 100 of them and this will only grow in the future. What would be a good way to structure this? Considering I don't know a good way of grouping these into modules yet I thought of one module per function.
[19:37:46] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 252 seconds)
[19:38:16] <kristian> These could be moved into packages at a later stage. The only thing I don't like about this approach would be the imports from foo.my_func_1 import my_func_1 - are there other patterns for this?
[19:38:40] <kristian> I want to prevent having 1000 line files :) maybe the import statement isn't that bad after all?
[19:39:27] <stealth_> how do you know you are going to have 100 functions?
[19:39:58] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[19:39:59] <kristian> we need +100 of different data timeseries
[19:40:41] <stealth_> maybe you can have `function(data, timeseries=123)` ?
[19:41:14] *** Joins: saroy (~Sandipan@45.249.73.249)
[19:41:36] *** Quits: MikZyth (~MikZyth@188.65.242.92) (Quit: WeeChat 3.1)
[19:41:42] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[19:42:09] <Payam> Does anyone know how to make a multiselective combo box in gtk?
[19:42:31] *** Quits: y1n (~y1n@84-115-65-99.wifi.dynamic.surfer.at) (Ping timeout: 244 seconds)
[19:43:28] *** Quits: hexa- (~hexa-@juno.lossy.network) (Quit: WeeChat 3.1)
[19:44:55] *** Joins: hexa- (~hexa-@juno.lossy.network)
[19:45:29] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[19:45:53] *** Joins: odoood (~odoood@2601:c8:c003:a550::7)
[19:45:59] *** Joins: p-i- (~Ohmu@2403:6200:8870:cca9:980e:ef50:735d:2516)
[19:46:16] <kristian> stealth_: the functions can be completely different and not have much in common so I'm not sure if that helps
[19:47:22] <p-i-> I'm playing with https://www.starlette.io/. I've got a basic endpoint up. I hit http://1.2.3.4/foo?a=123 and it does some processing for ~5m then returns a text response. Is there some way to get the response line by line as it is generated?
[19:47:23] <stealth_> kristian, finding what common and coding that into function is a good practice
[19:47:46] *** Joins: jmft2 (~jmft2@81.149.115.87.dyn.plus.net)
[19:48:00] <p-i-> This is probably rather OT for this channel; does anyone know any decent python webdev hangouts that might be a better match?
[19:48:46] *** Quits: zln (~golluq@c80-217-230-193.bredband.tele2.se) (Ping timeout: 252 seconds)
[19:49:04] *** Joins: regreg (~regreg@2a02:2f09:531a:c700:cc36:efa2:81ec:6cc)
[19:49:17] <raxor2k> bjs: there is a problem tho, one of the dicts are stored in a list
[19:49:28] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[19:49:30] <bjs> raxor2k: okay it sounds like we're getting a little bit more context now
[19:49:37] <bjs> raxor2k: why is that a problem?
[19:49:47] <raxor2k> dict1 with the points are inside a list, dict2 is not
[19:49:59] <raxor2k> my head is just gone now.. im totally blurred
[19:50:19] <stealth_> raxor2k, then do `dict1.update(dict2)`
[19:50:32] <stealth_> `dict1` will still be in that list
[19:50:35] <bjs> raxor2k: okay... but why is the list a problem? Does that mean you have *many* dicts you want to merge? or do you only want to merge 1 of them? or what?
[19:50:42] *** Joins: mickey (~user@user/mickey)
[19:50:48] <raxor2k> yes
[19:50:50] <raxor2k> i have:
[19:52:01] *** Joins: Naan (~Naan@user/naan)
[19:52:01] *** Quits: wob_jonas (~wob_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[19:52:19] <raxor2k> list = [{"name" : "timmi" , "points" : 0}, {"name": "timmi", "points": 10}],  and then just dict2: {"name" : "timmi", "gender" : "male"}
[19:52:26] <raxor2k> so dict1 is inside the list
[19:52:54] *** Joins: FatDarrell (~textual@68.91.156.229)
[19:53:25] <bjs> raxor2k: and what's the problem you face?
[19:53:36] <stealth_> raxor2k, thought you had the data in a database!
[19:54:00] *** Quits: sus (thelounge@user/zeromomentum) (Quit: the lounge - https://webirc.envs.net)
[19:54:16] <raxor2k> stealth_: yes i have ?
[19:54:24] <raxor2k> but on 2 different tables
[19:54:28] <stealth_> raxor2k, `my_list.append(dict2)`
[19:54:30] *** Joins: sus (zero@user/zeromomentum)
[19:54:45] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[19:55:00] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:55:16] *** Joins: y1n (~y1n@84-115-64-36.wifi.dynamic.surfer.at)
[19:55:37] <grym> raxor2k: if your data is in a database, why are you not *JOIN-ing your data in the query
[19:55:58] <grym> (databases are great at this! make it do the work, that's what it's for)
[19:56:27] <raxor2k> grym: actually i havent thought about this
[19:57:38] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:58:07] <stealth_> raxor2k, remember `SELECT name, SUM(points) FROM ...`  we talked about, thats wht grym is also saying.
[19:59:22] <ens> solved the discord thing. i setup a function to be called periodically via: loop.call_later(delay, functionname)
[19:59:57] <stealth_> grym, raxor2k uses, sqlalchemy + its orm, if you know how to use SUM with that, you can help
[20:04:38] <grym> i don't
[20:04:44] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 244 seconds)
[20:05:32] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[20:05:46] <stealth_> ya same here, i never used it
[20:05:46] *** Quits: saroy (~Sandipan@45.249.73.249) (Quit: Leaving)
[20:08:48] *** Joins: matsaman (~matsaman@user/matsaman)
[20:09:18] *** Joins: polyrob_ (~rob@user/polyrob)
[20:09:23] *** Joins: tvm_ (~tom@ip-89-103-96-164.net.upcbroadband.cz)
[20:09:46] *** Quits: tvm (~tom@ip-89-103-250-229.net.upcbroadband.cz) (Ping timeout: 240 seconds)
[20:10:27] *** Joins: khrbt (~znc@user/khrbt)
[20:10:35] *** Joins: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca)
[20:11:05] <supakeen> `session.query(func.sum(MyMappedObject.somecol)).filter(...).scalar()`.
[20:11:18] *** Joins: _SKiTZO (~dark@230.89-11-156.nextgentel.com)
[20:11:36] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:11:45] <stealth_> raxor2k, ^
[20:11:49] *** Quits: polyrob (~rob@user/polyrob) (Ping timeout: 252 seconds)
[20:11:49] *** polyrob_ is now known as polyrob
[20:12:03] <_SKiTZO> Am I the only one who thinks having a js linter implemented in Python rather than in js is a good idea?
[20:12:32] <matsaman> they're probably both going to have good use cases
[20:12:56] <bjs> _SKiTZO: presumably the language the linter is implemented in shouldn't really matter so much.  But often it's nice if it's in the same ecosystem as the thing it's running on
[20:13:02] <_SKiTZO> I have a workflow that lints all my HTML/CSS/python code at build time but if I want to do the same with js I suddenly  have a dependency on nodejs
[20:13:02] <bjs> just as a practical point
[20:13:18] <InPhase> _SKiTZO: You had us at "implemented in Python rather than in js is a good idea".  But you might get a different answer in a different channel.
[20:13:19] <matsaman> or the person who's charged with maintaining it, etc., etc.
[20:13:44] <jinsun> Microsoft had the opposite idea, they have a python linter implemented in JS (well TypeScript)
[20:14:00] <bjs> _SKiTZO: if i'm writing Python and want to run a linter, then it's *pretty sure* that I've got a Python environment setup and so a linter written in Python would have benefits because I presumably should be able to "just run it", whereas a linter made in JS would require some extra work to install and run.  But once it's there, there's no difference really.
[20:14:02] <_SKiTZO> InPhase, this is the start of a nice circle jerk but also I am kind of serious  about this
[20:14:36] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[20:14:39] <_SKiTZO> I was looking for a js language model implemented in python but could not really find any
[20:14:53] <bjs> _SKiTZO: language model?
[20:15:07] <mokulus> How to simplify for e in [e for e in entries if e.date == datetime.date.today()]: ?
[20:15:17] <InPhase> _SKiTZO: And my comment was intended to be mildly humorous, but also serious.  I think Python is a cleaner language for such things, but if your audience is js programmers, who might want to modify the linter or contribute to it, they are not going to appreciate one in Python if they don't actually know Python.  Therefore, people might simply avoid it.
[20:15:17] <_SKiTZO> bjs: I am working on a "web linter" so if there isnt a js linter I can implement one using a language model.
[20:15:18] <_SKiTZO> parser
[20:15:21] <domhnall> jinsun: vs code? :)
[20:15:28] *** Joins: jazzy (~jaziz@172.58.36.139)
[20:15:28] <bjs> _SKiTZO: oh a parser
[20:15:51] <matsaman> mokulus: store more in variables?
[20:16:03] *** Joins: jazzy2 (~jaziz@172.58.36.139)
[20:16:35] <bjs> mokulus: tbh that looks fairly simple as it is.
[20:16:49] *** Quits: y1n (~y1n@84-115-64-36.wifi.dynamic.surfer.at) (Ping timeout: 252 seconds)
[20:17:08] <InPhase> _SKiTZO: There are very few things I would advice people to write in javascript.  The list is:  1) Things that must run in a browser.  2) Support tools specifically for javascript developers.
[20:17:14] <phy1729> slight worry that when processing the date could change, so I'd fetch it once and store in a variable, but it seems unlikely
[20:17:15] <InPhase> s/advice/advise/
[20:17:47] <mokulus> matsaman, bjs I used: for e in filter(lambda e: e.date == datetime.date.today(), entries):
[20:17:48] <_SKiTZO> I think it boils down to the way we look at languages. The js community think js is the center of the universe and so does python. But while python might be useful to js developers, python developser depend on js for web related stuff. Having to incorporate the js motherload (nodejs) seems like an unecessary  nuicance for the listtle part I need
[20:17:59] <bjs> mokulus: that certainly looks more complicated
[20:18:03] <bjs> I thought you wanted simpler?
[20:18:17] <jinsun> domhnall: I was thinking pylance/pyright, but yeah they are extensions for vsocde
[20:18:18] *** Joins: rakoon (~rakoon@2a02:2149:824f:5900:6306:9e8e:486d:1293)
[20:18:34] <matsaman> mokulus: take your list comprehension or whatever and assign it to a variable with a straightforward descriptive name
[20:18:45] <_SKiTZO> I of course ment and similarly python devs think of python as the center
[20:18:48] <InPhase> _SKiTZO: The simple reality is that there are a lot of javascript developers out there who know only that one language, due primarily to economic factors driving that subfield.  So, you have to contemplate that in your plans I think.
[20:19:15] <mokulus> I think it's much simpler now
[20:19:16] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[20:19:23] <bjs> mokulus: with filter and a lambda!?
[20:19:48] <bjs> _SKiTZO: it's not about what people think of as the "center of the universe" or anything as silly as that. A linter is just a separate program and it can be written in whatever language is most appropriate.  Sometimes it's appropriate for it to be in the same language as the code it's linting
[20:19:50] <bjs> and sometimes it's not
[20:20:06] <_SKiTZO> Found this! https://github.com/Kronuz/esprima-python there might be some hope after all...
[20:20:07] *** Quits: jazzy (~jaziz@172.58.36.139) (Ping timeout: 252 seconds)
[20:20:33] <mokulus> yes, the syntax is much simpler. pity I can't do for e in entries if ...:
[20:20:38] <matsaman> mokulus: all you have to do is think to yourself "is me in a year going to know immediately what this is? Or would having assigned it to a descriptive variable or adding a comment have been better?"
[20:20:58] <bjs> mokulus: it is? it looks more complicated to me
[20:21:04] <bjs> mokulus: what do you mean can't do that? where would you want to do that
[20:21:16] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 244 seconds)
[20:21:19] <matsaman> bjs: except never in haskell, amirite?! =P
[20:21:36] <bjs> matsaman: never what in haskell
[20:21:45] <matsaman> anything, heh
[20:21:51] *** Joins: sveinse (~sveinse@2a01:799:55e:1000:c23f:d5ff:fe69:c6fb)
[20:21:53] <bjs> never anything?
[20:21:54] <grym> nonsense! pandoc's great
[20:21:56] <grym> :)
[20:22:00] <matsaman> yeah that's why it's so annoying
[20:22:04] <bjs> matsaman: what
[20:22:05] <matsaman> it's the only thing I need haskell for
[20:22:23] <grym> .. they do ship binaries, you know
[20:22:25] <bjs> Why do you need Haskell to run pandoc?
[20:22:30] <matsaman> pshaw
[20:22:32] <bjs> I'm very confused by this conversation
[20:23:57] <mokulus> "for e in [e for e in entries if <filter>]:" is imo worse than "for e in filter(<filter>, entries):"
[20:24:12] *** Quits: kristian (~kristian@212.51.152.242) (Remote host closed the connection)
[20:24:21] *** Joins: Cyberg33k (~Cybergeek@91.216.101.170)
[20:24:33] <bjs> mokulus: surely you'd write that `for e in entries: if <filter>: ...`
[20:24:52] <jinsun> surely `for e in entries: if not filter: continue ...`
[20:24:59] <mokulus> I'd prefer: "for e in entries if <filter>:" but it's not in python
[20:25:12] <bjs> mokulus: isn't it the same? You've just moved where the colon went
[20:25:23] <sveinse> In all the world of commercial and open software, what are the (modern) options to make an end-user app in python with GUI on Windows? I know about Qt and web application (that requires a browser in addition). Any others? Does Microsoft offer anything in their VS suite towards GUI and python these days?
[20:25:29] *** Quits: Atrillox (~bigguy@219.137.141.84) (Remote host closed the connection)
[20:27:16] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Ping timeout: 252 seconds)
[20:27:23] <raxor2k> bjs: my head is bleeding
[20:27:27] <raxor2k> how can this be so difficult
[20:27:28] <bjs> raxor2k: doing what?
[20:27:44] <bjs> raxor2k: I'm not sure, you still haven't really explained what you're trying to do or shown the code you've tried to write to do it
[20:28:10] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[20:28:28] *** Joins: khrbt (~znc@user/khrbt)
[20:29:06] <Harlin> Are template strings used often? It seems to me these days that string.format() and f strings are used a lot. Also, the old style '%s' % () is still used.
[20:29:17] *** Joins: djapo (~archangel@user/djapo)
[20:29:37] <grym> i use f-strings almost exclusively
[20:29:42] <Harlin> A class I'm taking does mention that Template strings offer more security but I don't see them used often in code.
[20:30:13] <Harlin> grym, I could see that. I use them on occasion when I remember to but have been using str.format() for a while now.
[20:30:20] <domhnall> sveinse: something like wxPython?
[20:30:34] *** Quits: odoood (~odoood@2601:c8:c003:a550::7) (Ping timeout: 252 seconds)
[20:30:34] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[20:30:39] <jinsun> sveinse: not really anything from microsoft, it is better to just use Qt, but if you are a masochist you can use pywin32 to directly call the win32 api, or use pythonnet to call .Net framework stuff like Winforms and WPF
[20:31:07] <matsaman> Harlin: more security than making people make changes in python code? Or more security than something more specific than that
[20:31:14] <matsaman> the former is easy to accept
[20:31:35] <_SKiTZO> I only used Qt with C++ and it is my favorite framework. I use it for everything, not just qui stuff.
[20:31:39] <_SKiTZO> *gui
[20:31:54] <_SKiTZO> never used the python binding, so  I have no idea if that is any good
[20:32:13] *** Quits: Norore (~weechat@balder.ens.fr) (Quit: WeeChat 1.9.1)
[20:32:17] <sveinse> domhnall: thanks. Is wx(python) very active? I encountered a py module that requres a specific ancient wx to work and that was and is a mess.
[20:33:03] *** Joins: Julian (~tos9@python/site-packages/Julian)
[20:33:07] *** Quits: fanis30 (~anon@adsl-180.37.6.1.tellas.gr) (Quit: WeeChat 3.2)
[20:33:21] *** Quits: mokulus (~mokulus@user/mokulus) (Quit: WeeChat 3.2)
[20:33:23] <sveinse> We use Qt a lot for both C++ as well as front-end UI, so I know a little about it. Its nice in its way, but its large and heavy. It's definitely not "do one thing and do it well", its more "do everything".
[20:33:50] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:398e:7ab8:d74e:d9a5)
[20:34:27] <akk> I mostly use gtk for python gui apps, but that might not be a good option for non-linux users.
[20:34:53] <ens> if i have a bytearray and want to iterate byte by byte, i am wondering if the right way to do it is: for i in range (0, len(barray)): b = barray[i]
[20:34:53] <_SKiTZO> Sveinse: You are right, Qt can be very "do everything" but actualy Qt codebase is modular. You can with some effort only include the parts you like. The focus on this modularity has been ramped up significantly in latest version (6).
[20:35:03] <ens> or maybe there's some split() that returns each byte?
[20:35:07] <_SKiTZO> I have no idea if this carries over to the python stuff
[20:35:14] *** Joins: Barones (~Barones@2804:7f3:8987:af06:562d:cf9a:984d:226d)
[20:35:28] <_SKiTZO> I will stop selling Qt now xD
[20:35:30] <bjs> ens: what about `for b in bytearray: print(b)`
[20:35:48] <sveinse> I'm no pro MS guy (rather the oposite), but I'm puzzled that MS haven't integrated their UI thing in VS with Python. Since every windows box comes with the UI libs installed, the binaries/packages could be rather small
[20:37:16] <matsaman> they're pretty heavily invested in their own UI frameworks aren't they?
[20:37:22] * matsaman shrugs
[20:37:31] <deniska> sveinse: which UI thing? Windows probably has like 8 at this point
[20:37:33] <ens> bjs: b seems to be an int instead of an ascii char (which i want in my case) but maybe i can just do chr(b)
[20:37:40] <_SKiTZO> sveinse, MS's strategies have and most likely will continue to be centered around marketshare. Outward they support all kinds of platforms, but internally they are all about pushing C#/.NET
[20:37:56] <_SKiTZO> you will notice if you ever spend 5 minutes working with azure python libs.
[20:38:19] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 244 seconds)
[20:38:32] <sveinse> _SKiTZO: I've been responsible for compiling and packaging Qt for our embedded use at work, and its a huge thing in compilation. Even larger than the linux kernel. But that's a digression here and I'm stopping with that.
[20:38:35] <bjs> ens: well it's the same as barray[i], so I assumed that's what you wanted.  chr(b) will return the 1-character string that has ASCII code b
[20:38:47] <_SKiTZO> nobody at microsoft spent any time at all writing actual python code as part of that offering. It is all machine generated from a central definition
[20:38:49] *** jazzy2 is now known as jazzy
[20:38:50] <ens> i will work with this, thanks bjs.
[20:38:50] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 244 seconds)
[20:39:54] <_SKiTZO> sveinse, cool! I used to the same!
[20:39:56] *** Joins: Atrillox (~bigguy@219.137.141.84)
[20:40:46] <sveinse> Interesting that MS implement their VS Code in electron then really when they have 8 GUIs. In all cases, I can't see that a python "backend" to one of these 8 UIs would prevent them from endorsing their systems and tools.
[20:41:07] <sveinse> Anyways, I'm not here to insist I want an UI from MS
[20:41:23] <matsaman> how much python dev does MS historically generate?
[20:41:31] <matsaman> trying to think of something significant
[20:41:37] *** Joins: semeion (~semeion@user/semeion)
[20:42:17] <sveinse> matsaman: no, except their own python language server and tools for VS Code, very little I think
[20:43:08] <deniska> I'm not sure whether an alternative universe in which "Visual Python" existed would be better or worse than ours
[20:43:23] <grym> we've tried ironpython once
[20:43:25] <grym> it was poo
[20:43:32] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[20:43:46] <matsaman> sveinse: poor devils they must be missing out
[20:43:46] <deniska> That's not exactly visual python
[20:43:49] *** Quits: raxor2k (~raxor2k@78.158.252.74) ()
[20:43:49] <matsaman> what do they use instead?
[20:44:04] <deniska> well, maybe visual python.net circa 2005, but not an imaginary visual python circa 1997
[20:44:19] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:44:21] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 250 seconds)
[20:44:39] *** Joins: veek (~veek@117.192.20.244)
[20:44:51] <matsaman> heh, reminds me of https://en.wikipedia.org/wiki/Daniel_Robbins_(computer_programmer)#Microsoft
[20:45:02] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 244 seconds)
[20:45:10] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 240 seconds)
[20:45:41] <sveinse> Yeah, I wasn't thinking about Visual Python. That I'm not really interested in. But MS is more than just their tools? ...or perhaps that's where I'm mistaking. Dev on win _is_ Visual Studio, noone ever operates build systems outside of this like we do in *nix
[20:45:58] * grym uses pycharm on windows, too
[20:46:13] <domhnall> yikes
[20:46:29] <matsaman> I've worked someplace that used VS before, it's pretty hard to use independent tools in such an environment
[20:46:40] <matsaman> not impossible, but not fun
[20:47:09] <domhnall> no, I enjoyed pycharm...I take that back.
[20:47:23] <sveinse> And for the record, this Linux-guy here runs win10 with most of his py development there (saved by git bash) and is pretty happy most of the time.
[20:47:57] <_SKiTZO> sveinse, I think devs use all kinds of things on windows. I usually end up in msys/gitbash/qtcreator/scite/cmake or some such hodge podge
[20:48:15] <sveinse> right
[20:48:46] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:48:48] <_SKiTZO> Luckily usually I get to choose my clients/projects so I don't often end up there xD
[20:49:48] <sveinse> Yeah. VS is completely unknown territory for me. Give me a bash shell and I'm on familiar grounds.
[20:50:43] *** Quits: jazzy (~jaziz@172.58.36.139) (Ping timeout: 244 seconds)
[20:51:45] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 244 seconds)
[20:52:28] <sveinse> I think I need to give pycharm2 a go and see if I get decent packaging with pyinstaller
[20:52:29] *** Joins: iomari891 (~iomari891@105.112.138.38)
[20:52:41] <sveinse> *pyside2 and Qt
[20:53:07] *** Joins: Betal (~Betal@user/betal)
[20:53:18] *** Joins: Julian (~tos9@python/site-packages/Julian)
[20:53:39] *** Quits: vladoski (~vladoski@host-79-30-99-140.retail.telecomitalia.it) (Remote host closed the connection)
[20:53:40] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 252 seconds)
[20:54:00] *** Joins: fikran (~fikran@user/fikran)
[20:54:02] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[20:54:20] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 244 seconds)
[20:56:01] <deniska> Last time I used VS it was VS2007
[20:56:53] <sveinse> Last time I used it was to install the python compiler package
[21:01:15] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[21:02:14] <matsaman> last time I used it was the last time
[21:02:27] <sveinse> :P
[21:02:42] <matsaman> life's too short for closing and re-opening an application to be a daily ritual for it to work
[21:03:14] <matsaman> dunno how people can settle for such circumstances
[21:04:14] *** Quits: curiosity (uid507362@user/cypris) (Quit: Connection closed for inactivity)
[21:04:37] <sveinse> You've never worked with large corporate PLM or ERP or QA systems then? That's waste of life. I even wonder if they've heard that UX-designers are a thing
[21:05:19] <matsaman> if I see 'Visual Studio' in job requirements I usually close the tab
[21:05:40] <matsaman> but I mean, I usually do the same for C#, so, not really a big issue =P
[21:06:45] <deniska> for most people 5 minutes to generate a report is not an egregious waste of time, it's a coffee break
[21:06:58] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[21:07:03] <deniska> in fact if you optimize it to take only 2 minutes, you are now just ruining their break
[21:07:57] *** Joins: czuk_cza (~mist@188.147.99.19.nat.umts.dynamic.t-mobile.pl)
[21:09:48] *** Joins: me-sudoer-dentne (~me-sudoer@182.48.206.171)
[21:10:02] *** Quits: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca) (Ping timeout: 245 seconds)
[21:10:09] <me-sudoer-dentne> i had a quick question
[21:10:21] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 244 seconds)
[21:10:22] <_SKiTZO> And there is always poop salary calculator. It comes in handy when you have a gig like that
[21:10:25] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[21:10:37] <me-sudoer-dentne> how to download files from blob urls
[21:10:51] *** Joins: lexx (~scsi@78.157.70.196)
[21:10:52] <me-sudoer-dentne> (python version 3.9)
[21:10:52] <_SKiTZO> me-sudoer-dentne, what is a blob url?
[21:11:09] <me-sudoer-dentne> blob:www.someurl.com
[21:11:25] <me-sudoer-dentne>  /something/some
[21:11:29] <_SKiTZO> any url downloading usually means using the python package "Requests"
[21:11:42] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 245 seconds)
[21:11:50] <_SKiTZO> me-sudoer-dentne, https://docs.python-requests.org/en/master/
[21:12:00] <me-sudoer-dentne> yeah i am using it
[21:12:09] *** Joins: white_shadow (~white_sha@user/white-shadow/x-1132694)
[21:12:21] <_SKiTZO> any errors?
[21:12:25] <me-sudoer-dentne> idk
[21:12:32] <me-sudoer-dentne> its just nothing in the file
[21:12:44] <me-sudoer-dentne> its empty
[21:12:58] <_SKiTZO> ok so are you sure the file actually contains anything in the first place? What happens if you download the exact sae url from browser?
[21:13:07] <_SKiTZO> *same
[21:13:36] <_SKiTZO> also you might want to put a pastebin of your code
[21:13:55] <me-sudoer-dentne> i havent made the script
[21:14:02] <me-sudoer-dentne> using idle for now
[21:14:21] <me-sudoer-dentne> maybe i should try with a proper script
[21:14:34] <_SKiTZO> you might want to :)
[21:14:45] <me-sudoer-dentne> but i dont think that should make much of a differencr
[21:14:49] <me-sudoer-dentne> difference
[21:15:03] <_SKiTZO> the difference is that then you can paste it and we can help you
[21:15:25] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[21:15:29] <_SKiTZO> also while formatting it you might discover the problem on your own
[21:15:36] <me-sudoer-dentne> ywah right lol
[21:15:40] <me-sudoer-dentne> yeah*
[21:15:56] *** Joins: cow0w (~user@bzq-11-168-31-138.red.bezeqint.net)
[21:16:03] <cow0w> Hi, I have two data frames in pandas, how can I add to the dataframe A, dataframe B column selected with A.timestamp that falls within row range in B which have a start,end timestamp ?
[21:16:05] *** Joins: Hax0r (~Hax0r@128.127.222.236)
[21:16:06] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[21:16:21] *** dcaro is now known as dcaro_away
[21:16:43] *** Joins: netsan (~netsan@user/netsan)
[21:17:19] *** Quits: jmft2 (~jmft2@81.149.115.87.dyn.plus.net) (Quit: This computer has gone to sleep)
[21:19:27] *** Joins: EgonX (~EgonX@2601:2c6:47f:9c18:6d14:18b3:1a63:6512)
[21:20:04] <me-sudoer-dentne> requests.exceptions.InvalidSchema: No connection adapters were found for 'blob:https://www.youtube.com/bb65d85d-75eb-47cd-8c58-18c30b9419f3'
[21:20:16] <me-sudoer-dentne> what to do with thos
[21:20:16] <me-sudoer-dentne> this
[21:20:29] <grym> me-sudoer-dentne: .. remove the blob: ?
[21:20:32] <grym> it's not a valid URL
[21:20:39] <me-sudoer-dentne> ok
[21:20:42] <grym> (afaik)
[21:21:01] <me-sudoer-dentne> its a 404
[21:21:03] <grym> that's a 404, though
[21:21:03] <grym> yes
[21:21:10] <me-sudoer-dentne> coz its a blob url
[21:21:15] <_SKiTZO> yes, I would put a https:// infront
[21:21:16] <me-sudoer-dentne> a temporary url
[21:21:35] <me-sudoer-dentne> _SKiTZO: i litreally copied it from the webpage
[21:21:47] <grym> me-sudoer-dentne: "lob URLs can only be generated internally by the browser. URL.createObjectURL() will create a special reference to the Blob or File object which later can be released using URL.revokeObjectURL(). These URLs can only be used locally in the single instance of the browser and in the same session (ie. the life of the page/document)."
[21:21:50] <_SKiTZO> me-sudoer-dentne, I don't think a "blob url" is a real thing. Are you working with a blob store?
[21:21:53] <grym> i don't think that's going to help you
[21:22:00] *** Joins: NightMonkey (~NightMonk@user/nightmonkey)
[21:22:01] <matsaman> .split(':')[1]
[21:22:06] *** Joins: luisqa (~Guest92@186.151.92.14)
[21:22:13] <grym> https://stackoverflow.com/a/30881444
[21:22:20] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (Ping timeout: 252 seconds)
[21:22:35] <grym> matsaman: if i'm reading it right, the url after `blob:` should _always_ 404 outside of the session that create it
[21:22:50] <grym> me-sudoer-dentne: anyway, that's not how you download youtube videos...
[21:23:17] <me-sudoer-dentne> grym: then how should i go about it?
[21:23:32] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Quit: Blackpajamas)
[21:23:32] <grym> me-sudoer-dentne: i use youtube-dl, personally
[21:23:37] <me-sudoer-dentne> yeah me to
[21:23:39] <me-sudoer-dentne> too*
[21:23:42] *** Quits: Hax0r (~Hax0r@128.127.222.236) (Remote host closed the connection)
[21:23:52] <me-sudoer-dentne> but its for experience
[21:24:04] <DPA> blob: is per browser, not per session.
[21:24:50] <matsaman> grym: so not particularly different to a lot of URIs linked on a lot of websites
[21:25:03] <matsaman> but with 'blob:' in front =)
[21:26:19] <DPA> One site creates it with JS, and as long as it doesn't unload or get destroyed, any origin can load it to the extent allowed by the same origin rules.
[21:26:21] *** Quits: veek (~veek@117.192.20.244) (Quit: Leaving)
[21:26:22] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 244 seconds)
[21:27:18] <_SKiTZO> fun fact: implementing an extension in chrome/firefox is super easy and it will allow you to invoke any js code you want from inside the page currently in the browser with apis that will allow you to store stuff, send stuff etc.
[21:27:47] *** Quits: zaquest (~notzaques@5.128.210.178) (Remote host closed the connection)
[21:27:48] <matsaman> and you could use the built-in developer console
[21:28:00] <matsaman> or a bookmarklet
[21:28:12] <matsaman> or javascript directly in the address bar, to some extent for some browsers
[21:28:15] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[21:28:28] <_SKiTZO> matsaman, most def. but extension is just a folder with a manifest.json and a main.js on your desktop registered in settings. takes litterally 2 minutes to set upo
[21:28:32] <_SKiTZO> *up
[21:30:00] <matsaman> still sour about Firefox breaking extensions I used for years
[21:30:12] *** Quits: wolfgang (~wolfgang@101.174.6.197) (Remote host closed the connection)
[21:30:19] *** Joins: zaquest (~notzaques@5.128.210.178)
[21:31:21] *** Joins: cedric (~cedric@2a01:cb11:867:c200:905f:203:c0a:84b7)
[21:31:37] *** Joins: nomic (~nomic@185.217.117.169)
[21:31:43] *** Joins: CrtxReavr (crtxreavr@shodan.trioptimum.com)
[21:33:02] *** Joins: the-mask (~the-mask@user/the-mask)
[21:33:30] *** Quits: crawler (~crawler__@user/crawler) (Quit: Leaving)
[21:34:01] *** Joins: Julian (~tos9@python/site-packages/Julian)
[21:36:23] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[21:37:09] *** Joins: besnn (~besnn@user/besnn)
[21:38:25] *** Joins: Akuli (~Akuli@82-203-166-202.bb.dnainternet.fi)
[21:38:50] *** Joins: wender (~Wender@189.37.67.41)
[21:39:33] <akk> _SKiTZO: Do you know of a good howto on that? Not just how to register one, but things like what can you do in an extension, and a small example?
[21:39:52] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 252 seconds)
[21:41:17] *** Quits: computeiro (~Wender@191.54.169.111) (Ping timeout: 245 seconds)
[21:41:26] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[21:42:30] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.2)
[21:42:38] <phy1729> akk: I've found the MDN docs excellent (as usual) https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions and they have a your first extention tutorial. Though this is off topic.
[21:43:04] *** Joins: goldfish (~goldfish@user/goldfish)
[21:43:30] *** Joins: Gerula (~Gerula@user/gerula)
[21:43:39] <akk> Thanks phy1729. And yes, off-topic, sorry, I asked before noticing which channel tab this was.
[21:44:17] *** Joins: aeadio (~aead@user/aead)
[21:45:10] *** Quits: rsx (~dummy@ppp-188-174-148-246.dynamic.mnet-online.de) (Quit: rsx)
[21:45:37] <_SKiTZO> akk, I just googled it and the frist couple of hits got me started really quickly. It isn't very hard
[21:45:45] *** Quits: aead (~aead@user/aead) (Quit: aead)
[21:46:00] *** aeadio is now known as aead
[21:46:31] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 244 seconds)
[21:46:33] *** Joins: jinsun_ (~jinsunmat@user/jinsun)
[21:47:34] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 252 seconds)
[21:48:08] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[21:49:03] *** Quits: jinsun_ (~jinsunmat@user/jinsun) (Quit: Reconnecting)
[21:49:15] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[21:49:23] *** Joins: jinsun_ (~jinsun@user/jinsun)
[21:49:30] *** Quits: me-sudoer-dentne (~me-sudoer@182.48.206.171) (Quit: Leaving)
[21:50:10] *** Quits: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com) (Ping timeout: 240 seconds)
[21:51:30] *** Joins: nergar (~Nergar@177.225.152.16)
[21:54:28] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:c1dc:359d:3459:e8da) (Quit: Leaving)
[21:55:11] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:59:00] *** Joins: Pixi (~Pixi@user/pixi)
[21:59:32] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:00:09] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:00:32] *** Quits: daniel-k (~daniel-k@fsf/emeritus/daniel-k) (Quit: bye)
[22:01:09] *** Joins: srhm (~srhm@user/srhm)
[22:01:14] *** Joins: daniel-k (~daniel-k@fsf/emeritus/daniel-k)
[22:01:25] *** Joins: verified_human (~verified_@user/verified-human/x-8819513)
[22:02:07] *** Quits: srhm (~srhm@user/srhm) (Read error: Connection reset by peer)
[22:02:30] *** Joins: srhm (~srhm@user/srhm)
[22:02:52] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[22:04:37] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[22:04:43] *** Quits: white_shadow (~white_sha@user/white-shadow/x-1132694) (Quit: Leaving)
[22:05:33] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[22:05:36] *** Joins: darksun (~darksun@user/darksun)
[22:06:55] *** Joins: schumaml (~schumaml@dslb-188-104-190-238.188.104.pools.vodafone-ip.de)
[22:08:06] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[22:08:51] <ens> is there a data structure that i can use in which m[v1] -> v2 also has m[v2] -> v1 or do i just make a dictionary with them pointing both ways?
[22:10:03] <bjs> ens: make a dictionary with both ways, or more likely two dictionaries.
[22:10:19] <ens> ok. thanks.
[22:10:35] <bjs> ens: the reason no built-in data structure exists is that there's multiple options for how such a structure behaves, e.g. what does {1: 'a', 2: 'a'} give you?
[22:10:37] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:10:47] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Quit: No Ping reply in 180 seconds.)
[22:11:29] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[22:12:01] *** Joins: dolor_avis (~dolor_avi@user-5-173-12-113.play-internet.pl)
[22:13:06] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:13:20] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:14:47] *** Quits: bjs (sid190364@user/bjs) (Ping timeout: 240 seconds)
[22:15:07] *** Quits: circuitbone (sid355934@user/circuitbone) (Ping timeout: 240 seconds)
[22:15:07] *** Quits: Freso (sid7914@libera/staff/metabrainz.user.Freso) (Ping timeout: 240 seconds)
[22:15:21] *** Quits: NiKaN (sid385034@id-385034.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[22:15:21] *** Quits: liam (sid7517@id-7517.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[22:15:32] *** Joins: nickodd (~nickodd@user/nickodd)
[22:15:59] *** Joins: FluffyMask (~masque@user/fluffymask)
[22:16:07] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 252 seconds)
[22:16:13] *** Quits: stoneware (uid515661@user/stoneware) (Ping timeout: 250 seconds)
[22:16:13] *** Quits: fury (uid193779@id-193779.helmsley.irccloud.com) (Ping timeout: 250 seconds)
[22:16:16] *** Joins: circuitbone (sid355934@user/circuitbone)
[22:16:20] *** Joins: NiKaN (sid385034@id-385034.helmsley.irccloud.com)
[22:16:21] *** Joins: bjs (sid190364@user/bjs)
[22:16:22] *** Joins: Freso (sid7914@libera/staff/metabrainz.user.Freso)
[22:16:27] *** Joins: liam (sid7517@id-7517.helmsley.irccloud.com)
[22:16:39] *** Quits: BlueShark (sid10311@user/blueshark) (Ping timeout: 250 seconds)
[22:16:44] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[22:16:47] *** sharperguy__ is now known as sharperguy
[22:17:24] *** Quits: leonardus (sid358597@id-358597.tinside.irccloud.com) (Ping timeout: 272 seconds)
[22:17:28] *** Joins: ChkDigit (~u388mw@207-195-34-73.prna.static.sasknet.sk.ca)
[22:17:53] *** Joins: stoneware (uid515661@user/stoneware)
[22:18:07] *** Joins: fury (uid193779@id-193779.helmsley.irccloud.com)
[22:18:09] *** Joins: iomari891 (~iomari891@105.112.138.38)
[22:18:11] *** Joins: leonardus (sid358597@id-358597.tinside.irccloud.com)
[22:18:11] *** Joins: BlueShark (sid10311@user/blueshark)
[22:19:35] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[22:20:25] *** Quits: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net) (Quit: Quit)
[22:21:59] *** Joins: damonlynch (~ngaio@2601:245:c700:2c06:89dd:5c9f:10c0:59f)
[22:23:47] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 245 seconds)
[22:24:46] *** Quits: nicksloan (sid195124@user/nicksloan) (Ping timeout: 250 seconds)
[22:24:55] *** Joins: nicksloan (sid195124@user/nicksloan)
[22:25:45] *** Joins: tempate (~alpha@user/tempate)
[22:25:51] *** Joins: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net)
[22:26:31] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:26:41] <tempate> Are one line fors more efficient for gathering data into a list than a normal for with an append?
[22:27:08] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:27:31] <InPhase> tempate: Yes, a little bit.
[22:27:32] <TML> tempate: by "one line fors", do you mean list comprehensions? like:  [x for x in y]?
[22:28:26] <tempate> TML: yes
[22:29:15] <grym> tempate: they're useful for doing a little bit of work, whose result is a list you intend to use, very tersely
[22:29:18] <grym> they're quite nice
[22:29:41] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[22:29:51] <TML> tempate: https://wiki.python.org/moin/PythonSpeed/PerformanceTips#Loops is probably worth reading here
[22:29:54] <tempate> Is there a way to make the normal version as fast as the list comprehension?
[22:30:11] *** Quits: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca) (Quit: Leaving)
[22:30:11] <ross> I think it's pretty reasonable to assume that python's internal methods for performing list comprehensions are as efficient or equally efficient as an imperative method you'd write yourself
[22:30:36] <TML> tempate: but in general, I don't reach for a listcomp for _performance_ reasons
[22:31:31] <tempate> I find list comprehensions not very readable; in my experience people use them inadequately and end up with huge one-liners
[22:31:32] *** Joins: plastico (~plastico@neomutt/plastico)
[22:31:34] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[22:31:45] <InPhase> tempate: If you're concerned about performance enough to worry about the difference between the two, and if your mentioned data is numerical, then you should really be looking into numpy instead.  It's about 50 times faster than either of those other approaches.
[22:31:51] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[22:32:31] <tempate> InPhase: noted, thanks a lot
[22:32:40] <TML> tempate: Then write what you think is readable
[22:32:42] <jinsun> tempate: performance is not a good reason to use listcomp, so if you feel they are not readable use a simple for loop
[22:33:09] *** Joins: Julian (~tos9@python/site-packages/Julian)
[22:33:28] <ross> out of interest, if the data is string-based rather than numerical and performance is a concern, what's the best route there?
[22:33:35] <InPhase> tempate: The SciPy Lectures provide a pretty rapid and decently written introduction to how numpy works.
[22:33:45] <bjs> tempate: I'm not sure you could even measure the difference, it'd be tiny.
[22:34:04] <tempate> InPhase: I've used numpy in the past, I was just wondering about this
[22:34:20] <tempate> jinsun: thanks
[22:34:28] <tempate> bjs: noted, thanks a lot
[22:34:33] <ross> re strings, I had a situation maybe a year or two ago like that and I reached for Cython, which was faster, but converting python strings to C strings was very slow and it was worse overall
[22:34:34] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[22:34:54] <bjs> tempate: list comprehensions are almost exactly just a for loop + a list.append in the background.
[22:34:57] *** Quits: luisqa (~Guest92@186.151.92.14) (Ping timeout: 256 seconds)
[22:34:58] <InPhase> tempate: Benchmarking is tricky at times, but ipython's %timeit is a very convenient way to get some rough estimates on such things.
[22:35:30] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Client Quit)
[22:35:30] *** Joins: mago (~mago@87.125.58.48)
[22:36:00] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:36:03] <mago> Hello, how could i filter from a .txt file  all the lines that don't have at least 2 @ ?
[22:36:12] <TML> tempate: There's a great SICP quote for this: Programs must be written for people to read, and only incidentally for machines to execute.
[22:36:25] <cluelessperson> mago, easily.  what do you have so far?
[22:36:35] <tempate> TML: I couldn't agree more
[22:36:42] <mago> Nothing, just the text file and the idea cluelessperson
[22:36:58] <InPhase> mago: [L for L in lines if len(L.split('@'))>=2]
[22:37:00] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Quit: Leaving)
[22:37:12] <jinsun> (although I go for one-linering as much as possible, sometimes even 3 or 4 levels of for loops in a listcomp, only if it  really looks bad I go for simple for loop)
[22:37:17] <TML> tempate: That said, I tend to use simple listcomps a lot, because I don't find them terribly unreadable
[22:37:27] <mago> InpPhase is that python?
[22:37:28] <cluelessperson> mago, do you know how to open a file?  read it line by line, and search strings?
[22:37:33] <TML> mago: Yes
[22:37:41] <InPhase> mago: That's the channel we're in, so yes.  :)
[22:37:45] <mago> cluelessperson I have a templat somehwere..
[22:37:47] <cluelessperson> InPhase, I wouldn't suggest that. :P
[22:38:28] <mago> Ok, opening the file and starting with:
[22:39:53] <mago> Ok clueless person InPhase, I started with this:
[22:39:55] <mago> with open('file.txt') as f:
[22:39:56] <mago>    comments = [line.strip() for line in f]
[22:40:21] <mago> Is that the next line: [L for L in lines if len(L.split('@'))>=2] ?
[22:40:27] <cluelessperson> I think f is a file handle, and not lines.
[22:40:56] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[22:41:51] *** Joins: plastico (~plastico@neomutt/plastico)
[22:43:14] <jinsun> mago: why did you add that line `line.strip() ...`? did you want that?
[22:43:24] <InPhase> mago: My list comprehension assumes you have already read in all the lines.
[22:43:32] <aphysically> good lord, the lack of support for this confused me for a good 20 minutes since I was so sure I was following what the style guide said lmao https://github.com/PyCQA/pydocstyle/issues/449
[22:44:23] *** Quits: Dotz0cat (~Dotz0cat@h30.94.187.173.dynamic.ip.windstream.net) (Ping timeout: 244 seconds)
[22:44:24] <matsaman> imagine typing that much over coding style enforcement =P
[22:44:32] *** Quits: ssbr` (~ssbr@python/site-packages/ssbr) (Remote host closed the connection)
[22:44:48] *** Quits: Madda (~Madda@208.249.9.51.dyn.plus.net) (Remote host closed the connection)
[22:44:56] *** Joins: ssbr` (~ssbr@python/site-packages/ssbr)
[22:45:38] <grym> why len(l.split... when you can l.count('@') instead ?
[22:46:10] <TML> grym: spite, maybe?
[22:46:10] <jinsun> aphysically: eh so much indentatiion, numpy style is better https://numpydoc.readthedocs.io/en/latest/format.html
[22:46:25] *** Joins: Madda (~Madda@208.249.9.51.dyn.plus.net)
[22:46:58] *** Quits: kevinlc (~kevinalh@2800:200:e8d0:20b::4) (Ping timeout: 252 seconds)
[22:47:04] *** Quits: netsan (~netsan@user/netsan) (Remote host closed the connection)
[22:47:17] <mago> I went with bash in the end, thanks for the support though. jinsun InPhase CluelessPerson
[22:47:29] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 244 seconds)
[22:50:16] *** Quits: ssbr` (~ssbr@python/site-packages/ssbr) (Ping timeout: 252 seconds)
[22:51:41] <shugo> hi
[22:51:55] *** Joins: Auron (Auron956@user/auron)
[22:52:18] *** Parts: shugo (~shugo@user/shugo) ()
[22:53:33] <frozensoil> I am not too sure if I am using the strip() function correctly: https://bpa.st/JCZA
[22:53:57] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[22:53:58] <frozensoil> basically I am pinging a 3rd party api (intercom) - why would I use strip() on the content?
[22:54:12] *** Parts: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) ()
[22:54:57] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[22:55:16] <jinsun> since that is an if condition I assume you don't want a string with only whitespace?
[22:55:41] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:56:15] <jinsun> bool("        ")  is True but bool("         ".strip()) is False
[22:56:17] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[22:56:39] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[22:56:53] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:00:53] <ShorTie> i'm compiling python from scratch for glibc, but all i can get is "ModuleNotFoundError: No module named 'msvcrt'"
[23:01:05] <ShorTie> any idea's maybe ??
[23:01:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[23:01:25] *** Joins: Julian (~tos9@python/site-packages/Julian)
[23:02:11] <The-Compiler> ShorTie: msvcrt is the Microsoft C++ runtime, that doesn't sound like it'd mix well with glibc
[23:02:43] <The-Compiler> I'm assuming you're building on Linux, where it'd be totally expected that the msvcrt module isn't available
[23:03:21] *** Joins: fikran (~fikran@user/fikran)
[23:04:09] *** Joins: wolfgang (~wolfgang@101.174.6.197)
[23:06:05] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 244 seconds)
[23:06:13] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Ping timeout: 252 seconds)
[23:06:15] <cluelessperson> mago, with bash it's just  grep -r "@@" file.txt,   but I figured you wanted a python challenge.
[23:07:11] <cluelessperson> filter(lambda l: "@@" in l, open("file.txt", "r").readlines())  yee
[23:08:10] *** Quits: nixture (sid240036@id-240036.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[23:08:25] *** Quits: leonardus (sid358597@id-358597.tinside.irccloud.com) (Ping timeout: 252 seconds)
[23:08:25] *** Quits: arseru (uid515527@user/arseru) (Ping timeout: 252 seconds)
[23:08:30] *** Joins: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee)
[23:08:31] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[23:08:40] *** Joins: nixture (sid240036@id-240036.helmsley.irccloud.com)
[23:09:01] *** Joins: arseru (uid515527@user/arseru)
[23:09:11] *** Joins: leonardus (sid358597@id-358597.tinside.irccloud.com)
[23:10:01] *** Quits: devcpu (~rusty@104.243.107.236) (Ping timeout: 252 seconds)
[23:10:17] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[23:11:39] *** Joins: devcpu (~rusty@104.243.107.236)
[23:12:24] *** Quits: dvx (~dvx@185.63.97.64) (Remote host closed the connection)
[23:12:35] <ens> i have a string (var) that i want to pass down a socket via sock.sendall(var). the socket method expects bytes.
[23:12:59] <ens> can i do some kind of cast to make the string bytes in an acceptable way?
[23:13:05] *** Joins: newpy (~newpy@2601:280:4381:1390:d8a2:4368:1fe2:a8e3)
[23:13:08] <grym> ens: you can encode it
[23:13:18] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:13:19] *** Quits: lexx (~scsi@78.157.70.196) (Ping timeout: 244 seconds)
[23:13:23] <grym> "foo".encode(), which defaults to utf8
[23:13:47] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:14:28] *** Joins: pyeveryt_ (~pyeveryth@c-66-31-107-137.hsd1.ma.comcast.net)
[23:15:24] *** Joins: luisqa (~Guest92@186.151.92.13)
[23:16:44] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:17:06] *** Quits: Barones (~Barones@2804:7f3:8987:af06:562d:cf9a:984d:226d) (Remote host closed the connection)
[23:17:17] *** Parts: tempate (~alpha@user/tempate) ()
[23:17:24] *** Joins: Barones (~Barones@2804:7f3:8987:af06:562d:cf9a:984d:226d)
[23:18:47] *** Joins: kevinlc (~kevinalh@2800:200:e8d0:20b::4)
[23:21:47] *** Joins: Ivyy (~Ivyy@2001:a62:483:bf01:e971:c165:d1b4:5a85)
[23:24:45] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[23:24:47] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Read error: Connection reset by peer)
[23:25:04] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:25:31] *** Joins: Pandadub (~Barones@177.133.26.175)
[23:25:31] <cluelessperson> ens, everything is bytes in the end, it's just a matter of converting it in a (hopefully) standardized or obvious way. :)
[23:25:35] *** Joins: stwange (~j@82.21.202.140)
[23:26:27] *** Joins: Julian (~tos9@python/site-packages/Julian)
[23:27:25] <stwange> Hey I have a line of Python 2 code I'm struggling to get running in 3. I've tried wrapping it with key(), I've tried sorted(answers key=....) but each time it says lambda>() missing 1 required positional argument: 'y'. The line is: answers.sort(cmp=lambda x,y: x[1]-y[1])
[23:27:40] *** Quits: Barones (~Barones@2804:7f3:8987:af06:562d:cf9a:984d:226d) (Ping timeout: 240 seconds)
[23:27:51] <phy1729> What is answers a list of? tuples?
[23:28:29] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[23:31:07] *** acidsys is now known as cranberry
[23:31:11] <phy1729> answers.sort(key=operator.itemgetter(1))
[23:31:26] *** cranberry is now known as Lysergsaeure
[23:32:48] *** Joins: Samian (~Sami@2620:10d:c091:480::1:8938)
[23:33:09] <Samian> how do I indicate code is on the next line when typing code on irc?
[23:33:12] *** Joins: thiras (~thiras@user/thiras)
[23:33:36] <dodo> Samian: use the pastebin from /topic
[23:33:45] <Samian> but it's only 3 lines
[23:33:47] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3-dev)
[23:33:57] <Samian> I'll assume you know where the next lines are
[23:34:03] <Samian> so here's my question...
[23:34:08] <lambda> use semicolons
[23:34:33] <lambda> or braces :)
[23:35:08] *** Joins: Pickchea (~private@user/pickchea)
[23:35:21] <Samian> Anyone ever do this? Try: ;   import some_package    some_package_found = True  ;   except ModuleNotFoundError:  ;  some_package_found = False
[23:35:24] *** Joins: emika (~emika@185.207.249.78)
[23:35:40] <Samian> nah semicolons make it harder to read
[23:35:57] *** Joins: n00b101 (uid448161@id-448161.tooting.irccloud.com)
[23:36:46] *** Joins: y1n (~y1n@84-115-64-195.wifi.dynamic.surfer.at)
[23:36:56] <Samian> try:    import apex    apex_found = True   except ModuleNotFoundError:    apex_found = False
[23:37:01] *** Quits: emika7 (~emika@185.207.249.86) (Ping timeout: 252 seconds)
[23:37:07] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 245 seconds)
[23:37:18] <verified_human> use this Samian --> https://bpa.st/+python
[23:37:21] <Samian> and then later in the code I have "adagrad": apex.optimizers.FusedAdagrad if apex_found else torch.optim.Adagrad,
[23:37:37] <verified_human> much easier to get point across
[23:37:41] <Samian> my question is do any of you ever do what I'm doing here?
[23:37:48] *** Joins: waynew (~wayne@user/waynew)
[23:37:52] <Samian> I'm making a variable that indicates whether the package was found
[23:38:13] *** Quits: mago (~mago@87.125.58.48) (Quit: Client closed)
[23:38:24] <dodo> never done that, and wouldn't want to tbh
[23:38:51] <meejah> i've done that (for "optional" dependency, i'm assuming?)
[23:39:11] <jinsun> Samian: https://docs.python.org/3/library/importlib.html#importlib.util.find_spec
[23:39:24] *** Joins: Thanatos (~Thanatos@ec2-54-148-37-124.us-west-2.compute.amazonaws.com)
[23:39:49] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[23:40:01] <jinsun> Samian: so `some_package_found = importlib.utill.find_spec("some_package") is not None`
[23:40:24] <meejah> Samian: if you want something "higher profile" as justification, https://github.com/crossbario/autobahn-python/search?q=ImportError
[23:40:26] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:41:24] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[23:41:33] *** Joins: GiLgAmEzH (~gilgamezh@a210077.upc-a.chello.nl)
[23:41:55] *** Quits: dolor_avis (~dolor_avi@user-5-173-12-113.play-internet.pl) (Quit: dolor_avis)
[23:41:57] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[23:42:12] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:42:39] <Samian> let's say the user can pass cli arguments. like --use-sqlite   ... Why not have try: import sqlite3  sqlite3_found = True   except ModuleNotFound: sqlite3 = False.   and later in the code:     args = parser.parse_args()  if args.use_sqlite and not sqlite3_found:   sys.exit("ERROR: sqlite3 not found")
[23:43:14] <Samian> I meant,  sqlite3_found = False
[23:44:15] <Samian> thanks meejah
[23:45:11] <Samian> jinsun  let me read about that command! thanks
[23:45:44] *** Quits: varaindemian (uid73404@id-73404.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[23:46:28] *** Joins: raxor2k (~raxor2k@78.158.252.74)
[23:46:33] <Samian> What's wrong with making a global package_name_found boolean?   i understand other ways exist, but what's wrong with a simple boolean?
[23:46:35] <raxor2k> bjs: im still struggling
[23:46:40] <raxor2k> i have no other choice than to just share the code
[23:46:54] *** Quits: n00b101 (uid448161@id-448161.tooting.irccloud.com) (Quit: Updating details, brb)
[23:47:02] <bjs> raxor2k: that might be a good idea
[23:47:03] *** Joins: n00b101 (uid448161@id-448161.tooting.irccloud.com)
[23:47:53] <raxor2k> i must say im embarrased
[23:48:22] *** Quits: n00b101 (uid448161@id-448161.tooting.irccloud.com) (Client Quit)
[23:48:31] *** Joins: n00b101 (uid448161@id-448161.tooting.irccloud.com)
[23:48:35] *** Joins: Roey (~Roey@user/Roey)
[23:48:37] *** Joins: pgib (~textual@173.38.117.72)
[23:51:43] *** Quits: nomic (~nomic@185.217.117.169) (Quit: Leaving)
[23:53:04] <rud0lf> hello... i'm trying to implement Process and multiprocessing.Queue with Threads and queue.Queue, because it won't work on 2 cores
[23:53:10] <rud0lf> i hope that's the reason
[23:53:35] *** Joins: plastico (~plastico@neomutt/plastico)
[23:53:36] <bjs> rud0lf: you're trying to *implement* Process with threads?  I'm not understanding
[23:53:44] <rud0lf> the only additional method used is .join_thread() which i don't understand "Join the background thread."
[23:53:46] *** Joins: shabius (~shabius@2a0e:1c80:2:1021::1001)
[23:53:50] <rud0lf> bjs: yes :)
[23:54:04] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:54:06] <rud0lf> Thread.run() instead of multiprocessing.Process.run()
[23:54:13] <bjs> rud0lf: I don't quite follow
[23:54:21] <bjs> why are you doing this? Threads aren't quite the same as processes
[23:54:34] <rud0lf> i know, i hope it's gonna work
[23:54:36] *** Quits: n00b101 (uid448161@id-448161.tooting.irccloud.com) (Quit: Updating details, brb)
[23:54:46] *** Joins: n00b101 (uid448161@id-448161.tooting.irccloud.com)
[23:54:53] <bjs> rud0lf: work to do what?  but what's the question here
[23:54:57] <rud0lf> i have this program SOPARE to match phrases in recorded soundstream
[23:55:15] <rud0lf> to my disappointment, it won't gonna run on raspberry pi zero, because it has 2 instead of minimum 4 cores
[23:55:43] <rud0lf> i have no clue how multiprocessing forces to require four cores
[23:55:53] <bjs> rud0lf: oh you're saying *python* required 4 cores?
[23:55:56] <rud0lf> i'm quite tired with mangling with pi zero
[23:55:58] <rud0lf> bjs: yes
[23:56:06] <bjs> rud0lf: uh,  in what way was it "requiring" 4 cores?
[23:56:14] <rud0lf> it fails to run
[23:56:22] <bjs> rud0lf: fails to run?  like you get an error?
[23:56:42] <rud0lf> let me re-run it on pi zero
[23:57:14] <Inge> rud0lf: do you record sound on the Pi zero too?
[23:57:16] <bjs> raxor2k: so long as you just try to write something,  if it doesn't work we can help if you show the code
[23:57:30] <rud0lf> Inge: i have mic and speaker pi hat
[23:58:40] <Inge> I want to set up a little thing to record bird songs and use BirdNet stuff to determine what they are. There is a project that runs on a Pi4, but I want it out in the woods on battery - and a pi Zero w with camera running runs for like 50+ hours on a 20 000 mAh battery pack .. so if I can use that for recording, it would be great
[23:59:11] <rud0lf> Inge: the hat is like $10
[23:59:33] <Inge> does the hat include a mic?
[23:59:45] <rud0lf> a pair of mics
[23:59:54] <rud0lf> but they can't be used with speaker at the same time
[23:59:59] <Inge> what is the hat name?
