[00:14:09] *** Joins: Guest65 (~Guest65@2a02:a317:e43a:8580:f1d4:fbf0:821d:da5b)
[00:14:39] *** Quits: Guest65 (~Guest65@2a02:a317:e43a:8580:f1d4:fbf0:821d:da5b) (Client Quit)
[00:42:10] *** Quits: randyr (~randyr@82-197-205-217.dsl.cambrium.nl) (Quit: leaving)
[00:50:53] *** Quits: bit4bit_ (~bit4bit@181.49.102.14) (Quit: Leaving)
[01:19:10] *** Quits: natrys (~natrys@user/natrys) (Ping timeout: 252 seconds)
[01:19:56] *** Joins: natrys (~natrys@user/natrys)
[01:24:16] *** Quits: lnlsn (~lnlsn@189.100.214.121) (Read error: Connection reset by peer)
[01:24:32] *** Joins: lnlsn (~lnlsn@189.100.214.121)
[01:42:45] *** Quits: hoppity (~user@user/hoppity) (Remote host closed the connection)
[01:42:46] *** Quits: lnlsn (~lnlsn@189.100.214.121) (Read error: Connection reset by peer)
[01:42:58] *** Joins: lnlsn (~lnlsn@189.100.214.121)
[01:43:29] *** Quits: efm (~efm@new-vpn.tummy.com) (Quit: Konversation terminated!)
[01:59:22] <rawtaz> 5/25
[02:20:46] *** Quits: pi1 (~pi@177.223.162.27) (Ping timeout: 252 seconds)
[02:31:18] *** Quits: nullheroes (~nullheroe@168.235.66.22) (Quit: WeeChat 2.3)
[02:36:04] *** Quits: arpunk (~arpunk@user/arpunk) (Read error: Connection reset by peer)
[02:43:33] *** Joins: sreedev (~user@106.51.17.61)
[02:46:39] *** Joins: sm2n_ (~sm2n@user/sm2n)
[02:46:50] *** Quits: sm2n (~sm2n@user/sm2n) (Ping timeout: 260 seconds)
[02:51:11] *** Quits: sreedev (~user@106.51.17.61) (Remote host closed the connection)
[03:16:24] *** Quits: ur5us (~ur5us@2406:e002:6bf4:3401:98a1:2fc7:8e69:742b) (Ping timeout: 268 seconds)
[03:31:09] *** Quits: natrys (~natrys@user/natrys) (Ping timeout: 245 seconds)
[03:33:42] *** Quits: lnlsn (~lnlsn@189.100.214.121) (Read error: Connection reset by peer)
[03:33:56] *** Joins: lnlsn (~lnlsn@189.100.214.121)
[03:37:23] *** Quits: sagax (~sagax_nb@user/sagax) (Remote host closed the connection)
[03:39:52] *** Quits: lnlsn (~lnlsn@189.100.214.121) (Read error: Connection reset by peer)
[03:40:09] *** Joins: lnlsn (~lnlsn@189.100.214.121)
[03:46:21] *** Joins: arpunk (~arpunk@user/arpunk)
[03:51:00] *** Joins: Guest99 (~Guest99@179.15.4.125)
[03:51:16] *** Joins: ahappydeath (~silbermm@dsl-74-83-53-157.fuse.net)
[03:51:19] *** Quits: Guest99 (~Guest99@179.15.4.125) (Client Quit)
[03:51:26] *** Joins: silbermm (~silbermm@dsl-74-83-53-157.fuse.net)
[03:58:47] *** Quits: silbermm (~silbermm@dsl-74-83-53-157.fuse.net) (Ping timeout: 246 seconds)
[03:58:57] *** Quits: ahappydeath (~silbermm@dsl-74-83-53-157.fuse.net) (Ping timeout: 268 seconds)
[04:24:07] *** Joins: ur5us (~ur5us@2406:e002:6bf4:3401:98a1:2fc7:8e69:742b)
[04:30:46] *** Quits: lnlsn (~lnlsn@189.100.214.121) (Read error: Connection reset by peer)
[04:36:07] *** Joins: lnlsn (~lnlsn@189.100.214.121)
[04:36:36] *** Joins: ahappydeath (~silbermm@dsl-74-83-53-157.fuse.net)
[04:36:46] *** Joins: silbermm (~silbermm@dsl-74-83-53-157.fuse.net)
[04:37:43] *** Quits: brauliobz (~manjaro-u@user/brauliobz) (Ping timeout: 252 seconds)
[04:43:25] *** Quits: silbermm (~silbermm@dsl-74-83-53-157.fuse.net) (Quit: WeeChat 3.2.1)
[04:46:49] *** Joins: ahappydath (~silbermm@dsl-74-83-53-157.fuse.net)
[04:49:52] *** ahappydeath is now known as Guest5315
[04:49:52] *** Quits: Guest5315 (~silbermm@dsl-74-83-53-157.fuse.net) (Killed (sodium.libera.chat (Nickname regained by services)))
[04:49:52] *** ahappydath is now known as ahappydeath
[04:50:06] *** Joins: ahappyde1th (~silbermm@dsl-74-83-53-157.fuse.net)
[04:50:20] *** Quits: ahappyde1th (~silbermm@dsl-74-83-53-157.fuse.net) (Client Quit)
[04:54:12] *** Quits: lnlsn (~lnlsn@189.100.214.121) (Read error: Connection reset by peer)
[04:57:42] *** Quits: hoppity`` (~user@S0106b4fbe4e5da7b.cg.shawcable.net) (Remote host closed the connection)
[04:59:34] *** Joins: lnlsn (~lnlsn@189.100.214.121)
[05:05:33] *** Quits: lnlsn (~lnlsn@189.100.214.121) (Read error: Connection reset by peer)
[05:05:46] *** Joins: lnlsn (~lnlsn@189.100.214.121)
[05:20:44] *** Joins: ahappyde1th (~silbermm@dsl-74-83-53-157.fuse.net)
[05:20:44] *** Quits: lnlsn (~lnlsn@189.100.214.121) (Read error: Connection reset by peer)
[05:21:51] *** ahappyde1th is now known as silbermm
[05:22:07] *** Quits: silbermm (~silbermm@dsl-74-83-53-157.fuse.net) (Client Quit)
[05:26:10] *** Joins: lnlsn (~lnlsn@189.100.214.121)
[05:38:39] *** Quits: ahappydeath (~silbermm@dsl-74-83-53-157.fuse.net) (Ping timeout: 245 seconds)
[05:40:04] *** Joins: inhortte (~inhortte@71-139-38-254.lightspeed.lbcktx.sbcglobal.net)
[06:07:53] *** Joins: brw (~bas@static.66.39.12.49.clients.your-server.de)
[06:19:11] *** Quits: ur5us (~ur5us@2406:e002:6bf4:3401:98a1:2fc7:8e69:742b) (Remote host closed the connection)
[06:19:30] *** Joins: ur5us (~ur5us@2406:e002:6bf4:3401:98a1:2fc7:8e69:742b)
[06:51:59] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[06:52:35] *** Joins: hendursaga (~weechat@user/hendursaga)
[07:10:58] *** Joins: mahmutov (~mahmutov@37.155.16.134)
[07:58:28] *** Quits: ur5us (~ur5us@2406:e002:6bf4:3401:98a1:2fc7:8e69:742b) (Ping timeout: 252 seconds)
[07:59:47] *** Quits: sm2n_ (~sm2n@user/sm2n) (Read error: Connection reset by peer)
[08:00:38] *** Joins: sm2n_ (~sm2n@user/sm2n)
[08:10:19] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 245 seconds)
[08:10:34] *** Quits: mahmutov (~mahmutov@37.155.16.134) (Ping timeout: 252 seconds)
[08:39:54] *** Quits: gitgooood (~gitgood@80-44-12-204.dynamic.dsl.as9105.com) (Ping timeout: 245 seconds)
[08:44:22] *** Joins: floriann (~Thunderbi@2a02:8106:2e:1300:ea6a:64ff:fe67:369e)
[08:47:01] *** Joins: voltone (~voltone@mailgw3.be-all.com)
[08:59:31] *** Joins: mexen (uid495612@user/mexen)
[09:27:46] *** Quits: lnlsn (~lnlsn@189.100.214.121) (Read error: Connection reset by peer)
[09:28:27] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[09:31:44] <serafeim> hello friends
[09:33:16] *** Joins: lnlsn (~lnlsn@189.100.214.121)
[09:51:47] <Nicd> morning
[09:52:45] *** Joins: rovanion (~rovanion@h-46-59-13-236.a163.priv.bahnhof.se)
[09:55:17] <rovanion> When I run `mix phx.new project --database sqlite3` I get ** (Mix) Unknown database "sqlite3" but https://github.com/phoenixframework/phoenix/pull/4268 from this April says support was added then. Any idea what could be going wrong on my machine?
[09:58:32] <serafeim> maybe you need to upgrade the phoenix app generator ? try `mix archive.install hex phx_new`
[09:58:32] *** Quits: lnlsn (~lnlsn@189.100.214.121) (Read error: Connection reset by peer)
[09:58:45] <serafeim> it should get you 1.6
[09:58:49] *** Joins: lnlsn (~lnlsn@189.100.214.121)
[09:59:08] <rovanion> serafeim: That did it, thank you!
[09:59:48] <serafeim> no prob
[10:07:00] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[10:11:25] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 268 seconds)
[10:15:54] *** Joins: superb_z (~soup@43.245.210.237)
[10:17:00] *** Quits: lnlsn (~lnlsn@189.100.214.121) (Read error: Connection reset by peer)
[10:17:20] *** Joins: lnlsn (~lnlsn@189.100.214.121)
[10:18:59] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[10:20:08] *** Quits: superb_z (~soup@43.245.210.237) (Client Quit)
[10:20:57] *** Joins: superb_z (~soup@43.245.210.237)
[10:26:33] *** Quits: superb_z (~soup@43.245.210.237) (Quit: Leaving)
[10:27:06] *** Joins: superb_z (~soup@43.245.210.237)
[10:31:40] *** Joins: ur5us (~ur5us@2406:e002:6bf4:3401:98a1:2fc7:8e69:742b)
[10:45:47] *** Joins: LostKobrakai_ (~LostKobra@2001:16b8:2d90:e500:4176:daa4:f058:1223)
[10:54:27] *** Joins: ur5us_ (~ur5us@203.86.198.200)
[10:55:39] *** Quits: ur5us (~ur5us@2406:e002:6bf4:3401:98a1:2fc7:8e69:742b) (Read error: Connection reset by peer)
[10:55:39] *** Quits: lnlsn (~lnlsn@189.100.214.121) (Read error: Connection reset by peer)
[11:01:05] *** Joins: lnlsn (~lnlsn@189.100.214.121)
[11:15:01] *** Joins: glassofethanol (~ethanmorg@82.16.192.251)
[11:36:01] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:36:43] *** Joins: aidalgol_ (~aidalgol@user/aidalgol)
[11:38:44] *** Joins: sagax (~sagax_nb@user/sagax)
[11:39:21] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:42:39] *** Quits: kvn (~weechat@cpc115982-dals23-2-0-cust605.20-2.cable.virginm.net) (*.net *.split)
[11:42:39] *** Quits: Tongir (~tangmang@signiq.cust.bdr01.per02.wa.vocus.net.au) (*.net *.split)
[11:42:39] *** Quits: paak (~Peter@mail.krupl.net) (*.net *.split)
[11:42:39] *** Quits: SlicerDicer6 (~SlicerDic@107-208-180-225.lightspeed.mdsnwi.sbcglobal.net) (*.net *.split)
[11:42:39] *** Quits: andreyorst (~andreyors@2.92.125.242) (*.net *.split)
[11:42:40] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (*.net *.split)
[11:42:40] *** Quits: rovanion (~rovanion@h-46-59-13-236.a163.priv.bahnhof.se) (*.net *.split)
[11:42:40] *** Quits: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de) (*.net *.split)
[11:42:40] *** Quits: blambi (~blambi@c-6d1b524e.011-113-67626725.bbcust.telenor.se) (*.net *.split)
[11:42:40] *** Quits: aidalgol (~aidalgol@user/aidalgol) (*.net *.split)
[11:42:40] *** Quits: Rubyn (~Rubyn@user/rubyn) (*.net *.split)
[11:45:05] *** Quits: ur5us_ (~ur5us@203.86.198.200) (Ping timeout: 264 seconds)
[11:48:39] *** Joins: notzmv (~zmv@user/notzmv)
[11:54:23] *** Joins: rovanion (~rovanion@h-46-59-13-236.a163.priv.bahnhof.se)
[11:54:23] *** Joins: kvn (~weechat@cpc115982-dals23-2-0-cust605.20-2.cable.virginm.net)
[11:54:23] *** Joins: Tongir (~tangmang@signiq.cust.bdr01.per02.wa.vocus.net.au)
[11:54:23] *** Joins: paak (~Peter@mail.krupl.net)
[11:54:23] *** Joins: SlicerDicer6 (~SlicerDic@107-208-180-225.lightspeed.mdsnwi.sbcglobal.net)
[11:54:23] *** Joins: andreyorst (~andreyors@2.92.125.242)
[11:54:23] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[11:54:23] *** Joins: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de)
[11:54:23] *** Joins: blambi (~blambi@c-6d1b524e.011-113-67626725.bbcust.telenor.se)
[11:54:23] *** Joins: Rubyn (~Rubyn@user/rubyn)
[11:54:25] *** Quits: voegelas (~voegelas@www.andreasvoegele.com) (Excess Flood)
[11:55:09] *** Joins: voegelas (~voegelas@www.andreasvoegele.com)
[11:55:30] *** Quits: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de) (Max SendQ exceeded)
[11:56:24] *** Joins: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de)
[12:30:15] *** Joins: chgr (~ek@nat-91-137-16-23.net.encoline.de)
[12:34:58] *** Quits: chgr (~ek@nat-91-137-16-23.net.encoline.de) (Client Quit)
[12:43:24] *** Joins: phaleth (~phaleth@user/phaleth)
[12:51:57] *** Quits: superb_z (~soup@43.245.210.237) (Remote host closed the connection)
[12:54:30] <rovanion> Would anyone happen to know how to add CSS to a HTML element inside a ~H string? I'm not allowed to use <%= %> inside an element and I don't know how to access a name not in assigns :/ https://paste.debian.net/1214351/
[12:55:25] <href> you can put it in the assigns, with assigns = assign(:style, ...)
[12:55:42] <Nicd> also setting a variable like that in the render will disable diff tracking
[12:58:04] *** Quits: voltone (~voltone@mailgw3.be-all.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:00:17] *** Joins: voltone (~voltone@mailgw3.be-all.com)
[13:01:49] *** Joins: turnip (~jonleight@159.196.171.157)
[13:02:17] *** Parts: turnip (~jonleight@159.196.171.157) ()
[13:05:27] *** Joins: jonleighton (~jonleight@159.196.171.157)
[13:07:03] *** Joins: brauliobz (~manjaro-u@user/brauliobz)
[13:07:55] <rovanion> Thank you, both of you. So I managed it when i made the style into a string like: https://paste.debian.net/1214353/ Is this the only way or is it also possible to interpolate Maps into styles? I only got errors that Phoenix.HTML.Safe was not implemented for Map and Keywordlists.
[13:08:44] *** Quits: LostKobrakai_ (~LostKobra@2001:16b8:2d90:e500:4176:daa4:f058:1223) (Ping timeout: 250 seconds)
[13:10:46] <jonleighton> josevalim: Hey 👋️ Regarding the proposal I made on the mailing list about a Path.match?/3. You said that it would need to be implemented in Erlang's filelib first. Do I assume correctly that that would mean re-implementing my library using Erlang rather than Elixir, and without the help of NimbleParsec, etc? I'm not really familiar with Erlang so I don't know if you were envisaging something else.
[13:11:43] <jonleighton> josevalim: Anyhow, if the above is correct then I'm sorry but I'm not really up for it. I don't know Erlang already and I already spent quite a bit of time implementing the Elixir library. I was proposing that it could be essentially dropped into Elixir core, but if not then no worries, it can stay a separate library.
[13:13:15] <josevalim> jonleighton: yes, that's what i meant
[13:13:29] <josevalim> jonleighton: if it is of any help, erlang already has a wildcard parser
[13:13:41] <josevalim> so it would be a matter of running the wildcard parser against a string
[13:13:49] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[13:14:02] <Nicd> rovanion: you should not set variables inside render call
[13:14:08] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[13:14:32] <Nicd> https://hexdocs.pm/phoenix_live_view/assigns-eex.html#pitfalls
[13:15:04] <josevalim> jonleighton: it is private API, but so you have an idea:
[13:15:06] <Nicd> instead you should directly assign the CSS string
[13:15:15] <josevalim> https://www.irccloud.com/pastebin/3QqF3CSi/
[13:16:15] <josevalim> jonleighton: and if you know elixir, erlang will be very easy to catch up, but indeed it will require time :) so i understand if you are not available
[13:16:22] <josevalim> i am just trying to give you a bit more context
[13:18:16] <href> Nicd: oof I had totally missed the "outside of render" part. 
[13:19:43] <jonleighton> josevalim: Thanks. Heh, this might have saved me quite a bit of time at the weekend! Though it was fun to play with NimbleParsec. I realised that Elixir's functionality was implemented via filelib:wildcard/2 but not that it would be so simple to get a parse tree out. I should have investigated further!
[13:20:07] <jonleighton> josevalim: Anyway, yes that does make the task seem less overwhelming, I though I'd have to write a parser...
[13:20:58] *** Quits: voltone (~voltone@mailgw3.be-all.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:21:00] <jonleighton> josevalim: Ok, I'll have a think about it, maybe I will find enthusiasm for this but I won't make any promises I can't keep right now :)
[13:22:43] *** Joins: voltone (~voltone@mailgw3.be-all.com)
[13:23:49] <josevalim> cool! If anything, you can write the implementation in Elixir and someone can help convert it to Erlang later
[13:25:12] <jonleighton> josevalim: By that do you mean you'd be open to a PR to implement it by calling into the private compile_wildcard API for now?
[13:25:12] *** Quits: lnlsn (~lnlsn@189.100.214.121) (Read error: Connection reset by peer)
[13:25:49] <jonleighton> I.e. implement Path.match?/3 by calling :filelib.compile_wildcard and then transforming the parse tree to a regex?
[13:30:43] *** Joins: lnlsn (~lnlsn@189.100.214.121)
[13:40:06] <josevalim> jonleighton: unfortunately no, it is private API, there is no guarantee it will be there on OTP 25
[13:40:31] <jonleighton> josevalim: fair enough, I think that's pretty reasonable. Just wanted to clarify what you were saying.
[13:47:16] *** Quits: jonleighton (~jonleight@159.196.171.157) (Quit: jonleighton)
[13:57:04] *** Quits: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de) (Quit: The Lounge - https://thelounge.chat)
[13:57:55] *** Joins: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de)
[13:59:28] *** Quits: voltone (~voltone@mailgw3.be-all.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:00:40] *** Joins: voltone (~voltone@mailgw3.be-all.com)
[14:04:53] *** Joins: Guest40 (~Guest40@p200300c8cf120f002bd93c39d9b2b655.dip0.t-ipconnect.de)
[14:08:10] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[14:08:10] *** Quits: lnlsn (~lnlsn@189.100.214.121) (Read error: Connection reset by peer)
[14:08:27] *** Joins: lnlsn (~lnlsn@189.100.214.121)
[14:10:42] *** Quits: darkstarx (~darkstard@2601:1c2:300:c8a0::f2b6) (Ping timeout: 250 seconds)
[14:11:50] *** Joins: darkstardevx (~darkstard@c-24-21-53-33.hsd1.or.comcast.net)
[14:12:24] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 245 seconds)
[14:13:32] *** Quits: Guest40 (~Guest40@p200300c8cf120f002bd93c39d9b2b655.dip0.t-ipconnect.de) (Quit: Client closed)
[14:24:08] *** Joins: natrys (~natrys@user/natrys)
[14:31:23] *** Quits: brauliobz (~manjaro-u@user/brauliobz) (Quit: Konversation terminated!)
[14:33:34] *** Joins: brauliobz (~manjaro-u@user/brauliobz)
[14:36:06] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:d1f8:65da:debb:16ba)
[14:36:30] *** Parts: DNH (~DNH@2a02:8108:1100:16d8:d1f8:65da:debb:16ba) ()
[14:36:37] <rovanion> Nicd: Thank you for linking that page. I read through it besides its main points, to be careful with do/end-blocks and name assignment, to use #{@name} to access the value of assigns.name in a HTML tag.
[14:53:50] *** Quits: brauliobz (~manjaro-u@user/brauliobz) (Quit: Konversation terminated!)
[14:54:27] *** Quits: voltone (~voltone@mailgw3.be-all.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:54:47] *** Joins: voltone (~voltone@mailgw3.be-all.com)
[14:56:55] *** Joins: brauliobz (~manjaro-u@user/brauliobz)
[15:06:49] *** Quits: brauliobz (~manjaro-u@user/brauliobz) (Quit: Konversation terminated!)
[15:08:44] *** Joins: brauliobz (~manjaro-u@user/brauliobz)
[15:28:57] <rovanion> Is it possible to pattern match on whether a key is present in a map? 
[15:29:44] <serafeim> rovanion: `%{a: a} = %{a: 3}` works
[15:29:44] *** Quits: lnlsn (~lnlsn@189.100.214.121) (Read error: Connection reset by peer)
[15:29:53] *** Joins: lnlsn (~lnlsn@189.100.214.121)
[15:30:06] <serafeim> also `%{b: a} = %{a: 3}` throws
[15:30:15] <serafeim> so it is possible ?
[15:30:23] <Nicd> yes, it is possible
[15:31:25] <Nicd> though those are atom key matches, for any type use `%{^key => _} = input`
[15:32:11] <rovanion> Hmm, right. If I want to refer to the whole Map that's being passed to the function and not just the key I'm matching against, how would I do that?
[15:32:41] <serafeim> rovanion: you need to assign it to a variable... def foo(%{a: a}=b), do ...
[15:32:57] <serafeim> so a will have the value of :a and b the value of the parameter
[15:33:10] <rovanion> Huh, okey, thank you!
[15:38:13] *** Quits: andreyorst (~andreyors@2.92.125.242) (Ping timeout: 252 seconds)
[15:38:38] *** Joins: ahappydeath (~silbermm@dsl-74-83-53-157.fuse.net)
[15:45:19] *** Joins: andreyorst (~andreyors@2.92.124.83)
[15:48:04] *** Quits: lnlsn (~lnlsn@189.100.214.121) (Read error: Connection reset by peer)
[15:48:19] *** Joins: lnlsn (~lnlsn@189.100.214.121)
[15:51:23] *** Quits: rovanion (~rovanion@h-46-59-13-236.a163.priv.bahnhof.se) (Quit: WeeChat 2.8)
[15:56:14] *** Quits: Rubyn (~Rubyn@user/rubyn) (Quit: WeeChat 3.2.1)
[15:56:58] *** Quits: ahappydeath (~silbermm@dsl-74-83-53-157.fuse.net) (Ping timeout: 252 seconds)
[15:59:48] *** Joins: Rubyn (~Rubyn@user/rubyn)
[16:02:04] *** Quits: triskite3 (uid414920@id-414920.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[16:04:57] *** Joins: triskite3 (uid414920@id-414920.uxbridge.irccloud.com)
[16:27:43] *** Joins: wonko (~wjc@62.115.229.50)
[16:39:15] *** Quits: voltone (~voltone@mailgw3.be-all.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:54:46] *** Quits: glassofethanol (~ethanmorg@82.16.192.251) (Quit: leaving)
[16:55:12] *** Joins: voltone (~voltone@mailgw3.be-all.com)
[17:00:21] *** Joins: glassofethanol (~ethanmorg@82.16.192.251)
[17:02:16] *** Quits: lnlsn (~lnlsn@189.100.214.121) (Read error: Connection reset by peer)
[17:07:40] *** Joins: lnlsn (~lnlsn@189.100.214.121)
[17:20:42] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[17:22:41] *** Quits: malware (~malware@ec2-52-91-134-43.compute-1.amazonaws.com) (Ping timeout: 260 seconds)
[17:25:58] *** Joins: malware (~malware@ec2-52-91-134-43.compute-1.amazonaws.com)
[17:28:49] *** Quits: sbmsr (~pi@2600:1700:63d0:4830:7dbf:92d8:fd42:235d) (Ping timeout: 252 seconds)
[17:33:04] *** Quits: floriann (~Thunderbi@2a02:8106:2e:1300:ea6a:64ff:fe67:369e) (Quit: floriann)
[17:33:29] *** Joins: floriann (~Thunderbi@2a02:8106:2e:1300:ea6a:64ff:fe67:369e)
[17:37:50] *** Quits: lnlsn (~lnlsn@189.100.214.121) (Read error: Connection reset by peer)
[17:40:30] *** Joins: bit4bit (~bit4bit@190.128.123.78)
[17:43:21] *** Joins: lnlsn (~lnlsn@189.100.214.121)
[17:46:40] *** Joins: Sgeo (~Sgeo@user/sgeo)
[17:53:57] *** Quits: voltone (~voltone@mailgw3.be-all.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:02:59] *** Quits: jess (~jess@libera/staff/jess) ()
[18:27:40] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Ping timeout: 265 seconds)
[18:31:05] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[18:47:35] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[18:48:01] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[18:50:25] *** Gustavo6046_ is now known as Gustavo6046
[19:08:55] *** Quits: duane (~duane@75-35-193-117.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 252 seconds)
[19:10:54] *** Joins: duane (~duane@75-35-193-117.lightspeed.nsvltn.sbcglobal.net)
[19:11:46] *** Joins: NeoCron (~NeoCron@p200300c4cf1c96002e5e9f24316d1b2a.dip0.t-ipconnect.de)
[19:36:06] *** Quits: lnlsn (~lnlsn@189.100.214.121) (Read error: Connection reset by peer)
[19:36:26] *** Joins: lnlsn (~lnlsn@189.100.214.121)
[19:43:37] *** Quits: glassofethanol (~ethanmorg@82.16.192.251) (Quit: leaving)
[19:43:51] *** Joins: gitgooood (~gitgood@80-44-12-204.dynamic.dsl.as9105.com)
[20:34:17] *** Quits: lnlsn (~lnlsn@189.100.214.121) (Read error: Connection reset by peer)
[20:34:31] *** Joins: lnlsn (~lnlsn@189.100.214.121)
[20:34:45] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[20:35:16] *** Joins: hendursa1 (~weechat@user/hendursaga)
[20:42:50] *** Joins: mahmutov (~mahmutov@37.155.16.134)
[20:47:03] *** Joins: hoppity (~user@user/hoppity)
[20:51:08] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[20:56:47] *** Quits: lnlsn (~lnlsn@189.100.214.121) (Read error: Connection reset by peer)
[20:56:59] *** Joins: lnlsn (~lnlsn@189.100.214.121)
[21:18:07] <hoppity> Hi guys, I got a basic json API working with Phoenix 1.6. Can anyone suggest a good way to implement API keys so that only authorized entities can make requests to my API?
[21:26:10] <srfsh> hoppity: there's Phoenix.Token module you can use.
[21:26:22] <srfsh> https://hexdocs.pm/phoenix/Phoenix.Token.html
[21:26:43] <hoppity> srfsh: thank you
[21:29:28] *** Quits: lnlsn (~lnlsn@189.100.214.121) (Read error: Connection reset by peer)
[21:29:38] *** Joins: lnlsn (~lnlsn@189.100.214.121)
[21:35:03] *** Quits: jushur (~human@user/jushur) (Quit: brb)
[21:36:25] *** Joins: jushur (~human@user/jushur)
[21:42:20] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[21:42:47] *** Joins: hendursaga (~weechat@user/hendursaga)
[21:51:41] *** Quits: bit4bit (~bit4bit@190.128.123.78) (Ping timeout: 264 seconds)
[21:51:41] *** Quits: lnlsn (~lnlsn@189.100.214.121) (Read error: Connection reset by peer)
[21:54:10] *** Joins: bit4bit (~bit4bit@190.128.123.78)
[21:57:10] *** Joins: lnlsn (~lnlsn@189.100.214.121)
[21:59:50] *** Joins: rovanion (~rovanion@h-46-59-13-236.A163.priv.bahnhof.se)
[22:19:55] *** Quits: floriann (~Thunderbi@2a02:8106:2e:1300:ea6a:64ff:fe67:369e) (Quit: floriann)
[22:24:20] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:d1f8:65da:debb:16ba)
[22:27:34] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:d1f8:65da:debb:16ba) (Client Quit)
[22:27:34] *** Quits: lnlsn (~lnlsn@189.100.214.121) (Read error: Connection reset by peer)
[22:27:48] *** Joins: lnlsn (~lnlsn@189.100.214.121)
[22:27:48] *** aidalgol_ is now known as aidalgol
[22:34:31] *** Joins: jess (~jess@libera/staff/jess)
[22:40:37] *** Quits: phaleth (~phaleth@user/phaleth) (Quit: phaleth)
[22:53:10] *** Quits: lnlsn (~lnlsn@189.100.214.121) (Read error: Connection reset by peer)
[22:53:20] *** Joins: lnlsn (~lnlsn@189.100.214.121)
[22:58:58] *** Quits: lnlsn (~lnlsn@189.100.214.121) (Read error: Connection reset by peer)
[23:04:35] *** Joins: lnlsn (~lnlsn@189.100.214.121)
[23:06:55] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:d1f8:65da:debb:16ba)
[23:08:59] *** Quits: hoppity (~user@user/hoppity) (Remote host closed the connection)
[23:14:59] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:d1f8:65da:debb:16ba) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:19:39] *** Joins: beise_ (~beise@server1291.seedhost.eu)
[23:28:45] *** Quits: lnlsn (~lnlsn@189.100.214.121) (Read error: Connection reset by peer)
[23:34:07] *** Joins: lnlsn (~lnlsn@189.100.214.121)
[23:37:58] *** Joins: pi1 (~pi@177.223.162.27)
[23:40:07] *** Quits: lnlsn (~lnlsn@189.100.214.121) (Read error: Connection reset by peer)
[23:40:23] *** Joins: lnlsn (~lnlsn@189.100.214.121)
[23:48:13] *** Joins: ur5us_ (~ur5us@2406:e002:6bf4:3401:98a1:2fc7:8e69:742b)
[23:54:42] *** Joins: silbermm (~silbermm@dsl-74-83-53-157.fuse.net)
[23:56:05] *** silbermm is now known as ahappydeath
