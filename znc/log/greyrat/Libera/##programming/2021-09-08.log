[00:03:43] *** Joins: Lyn (~Lyn@user/law)
[00:05:03] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[00:06:40] *** Quits: mnd999_ (~mark@2001:8b0:da3:76a2:4630:5b97:83a2:3e21) (Ping timeout: 252 seconds)
[00:06:52] *** Joins: arcatech (~arcatech@user/arcatech)
[00:10:23] *** Quits: rsx (~dummy@ppp-188-174-151-43.dynamic.mnet-online.de) (Quit: rsx)
[00:11:40] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[00:13:36] *** Joins: inky (~inky_@46.36.119.19)
[00:15:49] *** Quits: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com) ()
[00:21:11] <pikapika> Plain html is responsive by default
[00:23:49] <nova> How would one go about making a LaTeX (or just a TeX) engine? There are no resources online that I could find. Quit interesting.
[00:23:55] <nova> s/uit/uite
[00:23:56] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[00:24:07] <dodo> engine?
[00:24:43] <Amadiro> nova, basically, one wouldn't
[00:24:59] <Amadiro> there are some partial alternative ones like MathJax
[00:25:15] <Amadiro> but even that one only does a small subset of LaTeX
[00:25:39] *** Quits: dan01 (~dan01@2a02:2f09:321a:b600:39e3:b050:3810:7919) (Read error: Connection reset by peer)
[00:25:47] <nova> so then how did luatex, xelatex, etc come to fruition
[00:26:13] <Amadiro> They're just forks of the LaTeX engine with an extra feature tacked on, AFAIU
[00:26:31] <Amadiro> like luatex which just adds lua scripting
[00:26:43] <nova> uh. hm. hahaha. that's amazing and strange.
[00:27:25] <nova> I guess typesetting is probably pretty damn hard, but it's crazy that there aren't like ... variants (per se)
[00:29:25] <Amadiro> typesetting is hard, and also LaTeX is not standardized or "based on a simple core" like lua (which is comparatively easy to implement)
[00:29:51] <Amadiro> The LaTeX team themselves have kinda tried (and kinda given up on) releasing a new version since 1994
[00:32:30] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[00:33:06] <nova> I mean ... wouldn't a nice, clean language/compiler/engine that draws strengths from LaTeX while "fixing" the various myopic downfalls be ... not just useful and practical but also more maintainable and usable. Think about a future where you can code in some RMarkdown variant but with extra flexibility and commands and less constraints - a future where you wouldn't have to spam the backslash
[00:33:08] <nova> key or read a latex log because over some hfill overflow bs. Imagine *waves hand magically*
[00:34:20] <nova> It would take a decade or so to rewrite LaTeX and make it cleaner, but hey. It's been 25 years anyway. :D at this point we could have rewritten LaTeX 4 times over.
[00:34:49] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Quit: Leaving.)
[00:35:21] <Amadiro> nova, you can always go ahead and try it, but I'm skeptical that you'd be able to break LaTeX2e's mote
[00:36:45] <nova> but bah. who wants practical anyhow? That's boring. well, don't challenge me D: because I might just have to turn into a vampire for a decade and "do it" (by that I mean create a solid foundation that is workable but extensible so others can make it great because it's not a job for one itty hooman)
[00:38:22] *** Quits: snake (~snake@user/snake) (Quit: My MacBook Pro has gone to sleep. ZZZzzzâ€¦)
[00:39:28] * nova mkdir git/NeoTeX; git init git/NeoTeX  # wry grin knowing this will never be worked on reeheehee
[00:39:29] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[00:39:47] *** Joins: independent56 (~independe@95.144.68.39)
[00:42:16] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Quit: Blackpajamas)
[00:42:29] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[00:42:47] *** Joins: independent56 (~independe@95.144.68.39)
[00:43:40] <webNET4> i like the 10 year approach, gives you time to throw your project out halfway through and completely rewrite it
[00:44:37] *** Quits: Hax0r (~Hax0r@128.127.222.236) (Ping timeout: 252 seconds)
[00:44:50] <nova> exxxactly - not once but three times :)
[00:45:06] *** Quits: Haxxa (~Haxxa@122.199.45.213) (Quit: Haxxa flies away.)
[00:45:14] <nova> and 3 years of procrastination and reading about typesetting ;)
[00:48:17] *** Joins: Haxxa (~Haxxa@122.199.45.213)
[00:49:29] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi) (Read error: Connection reset by peer)
[00:50:15] *** Joins: electr0n (~electr0n@about/security/founder/electr0n)
[00:54:58] *** Quits: menace (~someone@user/menace) (Quit: menace)
[00:57:58] *** Quits: phil294 (~phi@ip1f13ff68.dynamic.kabel-deutschland.de) (Ping timeout: 265 seconds)
[01:02:23] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.2)
[01:02:40] *** Joins: vysn (~vysn@user/vysn)
[01:04:25] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[01:05:28] <mrig> do rust authors procrustinate?
[01:08:48] *** Joins: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca)
[01:10:57] <pulse> no, they're just crusty
[01:11:26] <phogg> procrustination still involves writing rust, so it must be at least marginally productive
[01:13:57] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[01:15:32] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:16:46] <pavonia> It involves lying in a Procrustean bed
[01:16:53] <nova> At least you can trust them
[01:17:05] <nova> even if they get a bit frustrated
[01:17:22] <pulse> must we trust rust
[01:18:00] *** Quits: digilink (~digilink@user/digilink) (Quit: WeeChat 3.2)
[01:18:16] *** Quits: jamea77 (~jamea@189.231.74.254) (Ping timeout: 265 seconds)
[01:18:24] *** Joins: digilink (~digilink@user/digilink)
[01:21:26] *** Quits: eEntershikari1 (~eentershi@109.197.254.86) (Ping timeout: 252 seconds)
[01:23:40] *** Joins: snake (~snake@user/snake)
[01:24:09] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[01:26:10] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[01:26:10] *** Lord_of_Life_ is now known as Lord_of_Life
[01:27:03] *** Quits: snake (~snake@user/snake) (Client Quit)
[01:27:23] *** Quits: Akuli (~Akuli@213.216.210.90) (Quit: Leaving)
[01:28:50] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[01:28:58] *** Joins: Pickchea (~private@user/pickchea)
[01:29:35] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:f1cc:d5ea:e86d:e5c1)
[01:30:07] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[01:30:10] *** Quits: aliosablack (~chomwitt@2a02:587:dc02:7900:12c3:7bff:fe6d:d374) (Read error: Connection reset by peer)
[01:30:12] *** Quits: user51 (~user51@176.228.90.248) (Quit: leaving)
[01:30:19] *** Quits: magla (~gelignite@55d44c2f.access.ecotel.net) (Quit: Stay safe!)
[01:31:21] *** Joins: chomwitt (~chomwitt@ppp-94-67-192-178.home.otenet.gr)
[01:31:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:33:22] <mrig> only pros crastinate though, I presume the same is true of crustination?
[01:33:37] *** Joins: Macuser (~Macuser@216.30.159.201)
[01:33:46] <mrig> Lets be honest it is only those on a salary that are not allowed to pause for thought. 
[01:34:43] <InPhase> mrig: Most of the reason I like salaried positions is that thinking time counts as work.
[01:35:12] <mrig> InPhase: ah if you can get that kind of work, then more power to you! :D
[01:35:15] <InPhase> mrig: Although that requires a management structure which recognizes this, for it to actually happen...
[01:35:35] *** Quits: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca) (Ping timeout: 256 seconds)
[01:35:46] <mrig> InPhase: I've known that situation only once so far, it was the most productive period I've know too.
[01:36:32] <mrig> Good management really is key to the environment being right.
[01:37:27] <InPhase> mrig: I encourage my direct reports to report summaries of time spent thinking, designing, or studying up on a topic they need to understand, in their reports of their activities.  That way I can encourage the value of this but keep track of the right ratio and timing of it in relation to deadlines.
[01:37:51] *** Joins: snake (~snake@user/snake)
[01:38:07] *** Quits: Leone (~Leo@24.140.234.189) ()
[01:38:08] <mrig> Yes must be really hard, as some would just meander and not get any traction.
[01:39:45] <mrig> But then that is also a part of some peoples working style.
[01:40:40] *** Joins: sidy (~sidy@user/sidy)
[01:41:11] *** Quits: motherr (~motherr@user/motherr) (Quit: zzz)
[01:44:45] <mrig> I love the remark made by some of the engineers working at bell labs back in the day, it is mentioned somewhere that they were required to provide an a4 sheet of papers explanation of what they were working on once a year; Sounds like creative bliss.
[01:45:16] <mrig> I could be mistaken but am pretty certain that I heard or read that in one of the interviews.
[01:48:08] *** Joins: jokoon (~eio@2a01:e0a:542:e160:2db0:a7b3:f992:1d5b)
[01:48:13] *** Joins: gry_ (~quassel@botters/gry)
[01:48:16] *** Quits: gry (~quassel@botters/gry) (Ping timeout: 252 seconds)
[01:48:55] *** Quits: gtr (~gtr@fsfe/gtr) (Quit: Leaving)
[01:51:08] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[01:55:11] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[01:58:43] <vysn> guess whos back
[01:58:51] <vysn> https://thechoiceisyours.whatisthematrix.com/
[01:58:53] <bayaz> Title: CHOOSE YOUR REALITY 
[01:59:02] <vysn> how did they do the time thing?
[01:59:48] <InPhase> mrig: Bell Labs really sounds like a unicorn job.  There should be more unicorn jobs.  :)
[02:00:12] *** Joins: humanface (~humanface@20014C4E1C505700FC94E113FB37CF83.dsl.pool.telekom.hu)
[02:02:07] <InPhase> mrig: And by that I mean, former Bell Labs, when it was the Bell Labs of legend.
[02:02:23] <CoJaBo> I always love bugs of the form "Function foo() evidently just returned from a random place that no return statement exists at"
[02:03:09] <CoJaBo> I don't even have a guess as to how to debug this one
[02:03:57] <Rounin> Hmm... Recursion perhaps?
[02:04:03] <Rounin> Or an exception of some kind
[02:04:26] <CoJaBo> The exeption handler always generates a console and database log entry
[02:04:55] <CoJaBo> But indeed, control actually seems to have jumped from a function deep in the callstack, straight to the outer event loop
[02:05:24] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:05:30] <CoJaBo> There's no viable explanation for how that could have happened, and it's a PHP app so no pointer shenanagans possible either
[02:06:08] <InPhase> CoJaBo: I hope it's not...  But is it a multithreaded PHP app?
[02:06:19] <CoJaBo> Nope; single-threaded all the way
[02:06:25] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[02:06:38] <CoJaBo> AFAICT, the function didn't run all it's checks as if one of the args was set to skip the very last check, but there is no place in the app that calls with such args
[02:07:09] <InPhase> CoJaBo: You might be suffering from code-blindess.
[02:07:22] <mrig> InPhase: something to do with having rather a lot of money due to a natural monopoly :D
[02:07:25] <CoJaBo> After this function is run, the result is then committed to the database by another function call, which is present everywhere this function is called, but that next function did not execute either
[02:08:01] <InPhase> CoJaBo: This is an affliction where your actual problem is so stupid you can't see it, often some sort of syntactic thing like a misplaced semicolon or something.
[02:08:57] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Read error: Connection reset by peer)
[02:09:14] <CoJaBo> InPhase: This was a spurious event tho; it almost always runs correctly, and I can't reproduce the issue
[02:09:16] <InPhase> s/code-blindess/code-blindness/
[02:09:27] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[02:09:32] <CoJaBo> I have typo-blindess
[02:09:37] <InPhase> :)
[02:09:41] *** Joins: jamea (~jamea@189.237.19.18)
[02:09:50] <mrig> I would think that the situation was probably very similar to that of being patronised by royalty for your work.
[02:09:56] *** Quits: hexology (~hexology@user/hexology) (Quit: hex on you ...)
[02:10:12] <CoJaBo> I've so done the semicolon thing tho; but that can't explain this case, as it's a very rare event for this to fail
[02:10:17] <mrig> many of the great works in history were financed in this way.
[02:11:09] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[02:11:56] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:12:16] <InPhase> CoJaBo: Concurrent php requests that spliced in between themselves in some output file causing confusion?
[02:12:41] <CoJaBo> InPhase: It's a CLI application, only one instance running
[02:12:49] <vysn> mystery solved. they talk about the matrix trailer time trick here
[02:12:51] <CoJaBo> Daemon, basically.
[02:13:02] <vysn> https://news.ycombinator.com/item?id=28446761
[02:13:17] <InPhase> CoJaBo: Sounds like the sort of thing that should be pretty deterministic if everything you said is true.
[02:13:24] <vysn> pre-generated mp4 files
[02:13:36] <vysn> The client side generates an unobfuscated string
[02:13:40] <InPhase> CoJaBo: Therefore, something you said or assume is probably not true.  Figure out what.  :)
[02:13:43] <CoJaBo> It waits for an event, reads it in, then processes it. This is one of the most-deterministic areas of one of our most-deterministic apps
[02:14:28] <CoJaBo> The problem is that, in the middle of processing Event 23,343,847 it just stops in the middle and moves on to Event 23,343,848
[02:14:40] <InPhase> CoJaBo: If you want you can also blame it on cosmic rays.  But that explanation will fail the next time it happens the same way.
[02:15:16] <CoJaBo> I can find the last known line it ran in the function it was in, and I can find that it could not have returned from that function to anywhere that called that function. This is pretty bizarre =D
[02:15:36] <CoJaBo> Cosmic rays seem unlikely even; this machine has ECC RAM to prevent these types of problems D=
[02:16:50] *** Joins: nicbk (~nicbk@user/nicbk)
[02:16:52] <InPhase> CoJaBo: Did your subsequent test runs have exactly identical input?
[02:17:12] <InPhase> CoJaBo: Or are there some things varying between test runs due to the nature of the program?
[02:17:41] <CoJaBo> InPhase: Yes; I copied the event JSON from the API it came from, and ran that thru all possible paths that could hit that API; it ran perfect in every one
[02:18:33] <CoJaBo> In theory, the API could've b0rked and returned different data, but the relevent portions of it were printed to the console log, and there's nothing else that could have changed that would have changed the determined action
[02:19:23] *** gry_ is now known as gry
[02:20:54] <InPhase> CoJaBo: Can other aspects of the program change the order of when this section was called with respect to other parts of what is being processed, even if you assume this does not affect this part of the code?
[02:22:08] *** Joins: rtypo (~alex@user/rtypo)
[02:22:39] <InPhase> CoJaBo: Fundamentally, something was different in the state if it exhibited different behavior.  And you assume everything is the same.  So some assumption that this depends upon must be wrong.
[02:23:40] *** Joins: Noventicx1 (~Noventicx@crux.uberspace.de)
[02:24:02] <InPhase> CoJaBo: Go through the reasons you are certain it could not be different, and check all the reasons you are sure it is true, and try hard to find an exception.
[02:24:09] <CoJaBo> InPhase: Not that I could imagine; the "result gets committed to the database after processing is run" bit is unconditional, it always runs after that function, and there's no place that function is called alone... If the processing function failed, it would print an error; even if it didn't, the commit function would print an error
[02:24:31] <CoJaBo> There's only a handful of places that call it in the entire app
[02:24:33] *** Joins: LjL^ (~ljl@user/ljl)
[02:24:42] *** Joins: Khoyo_ (~khoyo@ns328946.ip-37-187-115.eu)
[02:25:07] *** Quits: gravypod (~gravypod@user/gravypod) (Ping timeout: 240 seconds)
[02:25:13] <InPhase> You can also try pastebinning the section of code and see if someone catches some thing you missed from code blindness.  (I'm willing to look later, but I'm heading out to drive home right now.)
[02:25:27] *** Quits: insolentworm (~root@vps-7db3bef3.vps.ovh.ca) (Ping timeout: 240 seconds)
[02:25:27] *** Quits: Khoyo (~khoyo@user/khoyo) (Ping timeout: 240 seconds)
[02:26:00] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 276 seconds)
[02:26:05] *** Joins: gravypod (~gravypod@user/gravypod)
[02:26:22] <CoJaBo> InPhase: There's a conditional in the processing function relying on a variable that is hard-coded to true; that being set to an impossible value would explain how the processing function could return without showing an error. But setting that hardcoded value to false results in the commit printing an error, as would be expected, but didn't happen during the failure event
[02:26:54] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[02:27:10] <CoJaBo> I've tested also inserting a return where the control evidently returned, and running each path that calls this function; there again, the DB commit function catches it. This is so incredibly weird lol
[02:27:17] *** Quits: Noventicx (~Noventicx@crux.uberspace.de) (Quit: Ping timeout (120 seconds))
[02:27:17] *** Quits: LjL (~ljl@user/ljl) (Ping timeout: 240 seconds)
[02:27:17] *** Noventicx1 is now known as Noventicx
[02:27:20] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[02:27:36] *** LjL^ is now known as LjL
[02:27:50] *** Joins: insolentworm (~root@vps-7db3bef3.vps.ovh.ca)
[02:29:39] <CoJaBo> I just noticed also, there's a console logging function that logs some other parameters, that happens either before or after the DB commit, and is conditional on the processing function having run thru to the point where it had made a console log entry, and that logging function didn't run either. So that's now 3 impossible conditions violated :/
[02:30:08] *** Quits: electr0n (~electr0n@about/security/founder/electr0n) (Remote host closed the connection)
[02:31:01] *** Joins: jamea77 (~jamea@189.237.19.18)
[02:31:19] *** Joins: electr0n (~electr0n@about/security/founder/electr0n)
[02:31:35] *** Joins: webNET4 (~0x100@32.211.211.39)
[02:32:42] *** Quits: jamea (~jamea@189.237.19.18) (Ping timeout: 265 seconds)
[02:32:42] *** Quits: gitgooood (~gitgood@host-78-145-137-41.as13285.net) (Ping timeout: 265 seconds)
[02:35:52] *** Joins: jamea (~jamea@189.237.19.18)
[02:37:53] *** Quits: jamea77 (~jamea@189.237.19.18) (Ping timeout: 252 seconds)
[02:40:26] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 265 seconds)
[02:46:22] *** Joins: lalitmee_ (~lalitmee@180.94.32.166)
[02:48:27] *** Quits: orhan89 (~orhan89@151.91.188.35.bc.googleusercontent.com) (Ping timeout: 240 seconds)
[02:48:47] *** Joins: dre (~dre@2001:8003:c932:c301:5cf6:8209:dad6:8a73)
[02:48:53] *** Quits: lalitmee__ (~lalitmee@180.94.32.100) (Ping timeout: 252 seconds)
[02:49:52] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[02:50:09] *** Joins: DefiantN (~DefiantN@user/defiantn)
[02:50:14] *** Joins: orhan89 (~orhan89@151.91.188.35.bc.googleusercontent.com)
[02:54:19] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:f1cc:d5ea:e86d:e5c1) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[02:55:03] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Remote host closed the connection)
[02:55:53] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[03:01:59] <InPhase> CoJaBo: Are you certain you didn't background one run and launch another, splicing them, but only having this occur once?
[03:03:21] <CoJaBo> Not sure what that means exactly, but this isn't run in background or concurrently. The log was specifically from one running instance
[03:05:06] <CoJaBo> I've actually confirmed that there's an assert if that one variable is passed in as false, it actually logs that and forces it to true, so that appears to also be a dead end
[03:06:54] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[03:11:30] *** Quits: humanface (~humanface@20014C4E1C505700FC94E113FB37CF83.dsl.pool.telekom.hu) (Quit: Client closed)
[03:13:29] <CoJaBo> InPhase: I might have a candidate eureika moment at last...................
[03:13:59] <CoJaBo> InPhase: If I throw an exception from the place where control went astray, the app hangs, which isn't something it should be able to do
[03:14:38] <CoJaBo> Throwing an exception almost anywhere else in that vicinity causes no issues
[03:15:42] *** Joins: gitgooood (~gitgood@host-78-145-137-41.as13285.net)
[03:15:50] *** Quits: independent56 (~independe@95.144.68.39) (Ping timeout: 260 seconds)
[03:16:13] <CoJaBo> So I haven't reproduced the problem, but I have a reproducible "impossible" condition in the same spot of the same function...
[03:19:44] <CoJaBo> The exception handler seems pretty simple and robust, and must always print an error, which is why this is so unexpected.. Also, nothing in this function should be able to throw anyway
[03:20:41] *** Joins: jokoon2 (~eio@2a01:e0a:542:e160:4580:8de2:aba0:a0bd)
[03:22:32] *** Quits: jokoon2 (~eio@2a01:e0a:542:e160:4580:8de2:aba0:a0bd) (Client Quit)
[03:23:21] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:24:00] *** Quits: jokoon (~eio@2a01:e0a:542:e160:2db0:a7b3:f992:1d5b) (Ping timeout: 260 seconds)
[03:30:16] *** Joins: hexingb (~hexingb@2409:8902:78c4:4375:75f3:ab3b:f55:9c79)
[03:30:58] *** Quits: jamea (~jamea@189.237.19.18) (Read error: Connection reset by peer)
[03:32:54] *** Quits: pizdets (~pizdets@183.182.114.81) (Ping timeout: 250 seconds)
[03:33:06] *** Joins: jamea (~jamea@189.237.19.18)
[03:33:41] *** Joins: pizdets (~pizdets@183.182.110.162)
[03:33:44] *** Joins: anovick (~anovick@2a0d:6fc0:1bd8:7800:98e9:2c6f:1a52:52c0)
[03:35:32] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 265 seconds)
[03:35:47] *** Joins: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca)
[03:39:29] *** Quits: snake (~snake@user/snake) (Ping timeout: 252 seconds)
[03:42:14] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[03:42:37] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[03:46:16] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[03:46:56] *** Joins: vicfred (~vicfred@user/vicfred)
[03:49:51] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 276 seconds)
[03:50:53] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[03:51:00] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 265 seconds)
[03:51:48] *** Quits: caramel (~caramel@user/caramel) (Read error: Connection reset by peer)
[03:57:12] <CoJaBo> InPhase: Several assumptions assumed to be true, turned out not to have been =D
[03:57:17] *** Quits: jamea (~jamea@189.237.19.18) (Ping timeout: 265 seconds)
[03:57:39] <CoJaBo> InFact, almost all of them were wrong D=
[03:58:45] *** Parts: Joanna (uid57472@id-57472.lymington.irccloud.com) ()
[04:00:02] <[itchyjunk]> Should have started with the assumptions that any assumption can be wrong
[04:00:58] <CoJaBo> [itchyjunk]: It seemed reasonable to assume that ::sleep($variable_set_to_zero) would probably not do anything of importance
[04:01:39] <Caffeinated> that'll learn ya
[04:01:53] <CoJaBo> And it also seemed reasonable to assume that ::print($exception) would print an exception without involving tons of flaky logic
[04:01:59] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[04:02:05] <Caffeinated> or maybe not
[04:02:24] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:03:11] <CoJaBo> ::sleep(0) threw an exception that was caught and re-thrown by ::print($exception) in a way that caused a recursive loop, which later somehow threw an exception that caused ::print($exception) to dump binary data to the console
[04:03:33] <Caffeinated> "we got 'im now bubba!  c'awn skeeter!"
[04:04:25] <CoJaBo> The binary data ended with just the exactly right number of CURSOR-UP characters to VISIBLY ERASE the expected log entry. It was there, but due to the cursor-ups, it was completely over-printed, hiding all of the naughtiness that had just transpired
[04:04:54] <CoJaBo> WHY ::sleep(0) threw an exception is even wilder
[04:05:31] <CoJaBo> It turns out that's a yield point to the vendor's co-operative multitasking function
[04:05:40] *** Joins: zaher_ (~zaher@37.48.148.135)
[04:07:08] <CoJaBo> What ended up happening, so far as I can tell, is that this closed the prior network socket used by the API. Unfortunately, that connection had broken, so this threw an exception, and due to a bug in that library, this leaked out of the yield point and all the way back up........ to the main event loop
[04:07:28] <CoJaBo> Man was that ever a wild ride
[04:07:32] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 252 seconds)
[04:07:32] *** Quits: zaher (~zaher@37.48.176.167) (Ping timeout: 252 seconds)
[04:08:31] <CoJaBo> InPhase: So this DID involve multi-tasking, recursion, network issues, AND exceptions, all in one bug. Literally all of the things I told you I ruled out rofl
[04:08:47] <Caffeinated> glory days!
[04:08:54] <arahael>  weird dream.  i had a dream we were in some sort of programming competitions (i don't like competitions), and the final stage was: "develop your own language", and my team had zero ideas, so at the end of the allocated time (which wasn't stated), i stood up, thanked the team, and presented the ideas, making it up on the spot.
[04:09:24] <CoJaBo> lolm
[04:09:26] <dre> should've just made lisp 
[04:09:33] <InPhase> CoJaBo: Well I thought it would only take one.  But okay.  :)
[04:09:38] <arahael> the language?  ultimately a rule system, with the justification was: you had no requirements, except to imply that existing languages weren't good enouh, so this would be a good start".
[04:09:42] *** Joins: digilink (~digilink@user/digilink)
[04:09:45] *** Quits: chomwitt (~chomwitt@ppp-94-67-192-178.home.otenet.gr) (Remote host closed the connection)
[04:09:51] <arahael> dre: heh
[04:09:53] *** Joins: motherr (~motherr@user/motherr)
[04:10:10] <CoJaBo> InPhase: I miss Java's mandate that functions explicitly declare what they can throw :/
[04:10:11] <InPhase> arahael: Sounds like many IRC conversations.
[04:10:23] *** Quits: motherr (~motherr@user/motherr) (Client Quit)
[04:10:43] <arahael> InPhase: i'm not sure i want to explore *why* i had this dream! ;)
[04:11:48] *** Joins: caramel (~caramel@user/caramel)
[04:11:48] <arahael> InPhase: but i woke up with a tinge of regret: what did i unleash that would be contorted and deformed for the decades to come?
[04:11:49] <CoJaBo> arahael: I'd easily win any competition for causing the most improbable bugs possible
[04:12:09] <arahael> CoJaBo: that's my unique ability.
[04:12:30] *** Joins: phil294 (~phi@ip1f13ff68.dynamic.kabel-deutschland.de)
[04:12:31] *** Joins: mmlj4 (~mmlj4@ip68-11-69-185.no.no.cox.net)
[04:12:59] <CoJaBo> Also, I had a group project once, I was late to the final presentation, and missed the rehersal completely. I walked in just as my team took to the board, and I presented the powerpoint flawlessly, despite literally just reading it off the slides and filling in the blanks where needed
[04:13:00] <InPhase> CoJaBo: Your particular bug sounds like a condemnation of PHP...  And also, astonishingly intertwined.
[04:13:21] <arahael> CoJaBo: even if thats a string equality bug: stra := ""; strb := ""; stra <> strb <-- runtime crash.
[04:13:36] <CoJaBo> InPhase: This one doesn't even crack the top 100 of stupid things PHP lets you do =D
[04:13:38] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[04:13:59] <arahael> CoJaBo: i had that happen on 6 computers worldwide.
[04:15:50] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:16:16] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:90de:fcf0:43fb:a5db) (Ping timeout: 252 seconds)
[04:16:30] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:592f:1d19:f5a3:fe53) (Ping timeout: 260 seconds)
[04:16:37] <[itchyjunk]> Java question
[04:16:47] <InPhase> CoJaBo: I had a similarly baffling bug in some C++ code about 2 months ago.  But I went through that process of doubting all the assumptions and walked the tree back until I found it.  I had an end-user report coming in that experiment A collected EEG data just fine, but experiment B had EEG data with missing channels.  This happened apparently even if they configured the same channels.  This was 
[04:16:47] <[itchyjunk]> Why can only objects be assigned null ?
[04:16:53] <InPhase> particularly baffling because the EEG acquisition code has absolutely zero knowledge of the experiments, so there is no logical reason it could be affected by one experiment versus another.  It escaped testing, because there was no logical reason to test all the experiments for something that didn't change between experiments.  Except, it did...
[04:17:24] <CoJaBo> InPhase: Bonus Fail: I for the longest time failed to notice the cursor-up characters over-printing stuff, because I was viewing the log with `tail`
[04:18:35] *** Quits: phil294 (~phi@ip1f13ff68.dynamic.kabel-deutschland.de) (Quit: phil294)
[04:19:04] <InPhase> CoJaBo: After much tracing, checking, doubting, and questioning of sanity, I tracked it back to the fact that experiment A loaded a few extra values from the config file when it was loaded.  This took a few milliseconds longer than experiment B's load time, and therefore because I had recently optimized the EEG acquisition to run faster, that few milliseconds of load time delay was exactly the 
[04:19:10] <InPhase> amount needed to either allow the hardware time to complete its initialization, or not complete its initialization.  I fixed the bug with sleep(1), and a comment.
[04:19:41] <arahael> ugh. hate those fixes.
[04:20:16] <CoJaBo> Most importantly, it was hiding a one-word print that indicated control had passed into the vendor code, which I had completely ignored because of the echo "Finishing thing..."; that did not show in the log, strongly suggesting that control was lost before entering that next function :/
[04:20:25] <arahael> when dealing with external hardware though frequently required, but that doesnt change how i feel about it.
[04:21:28] *** Joins: ChromaCat248 (~ChromaCat@user/chromacat248)
[04:21:38] <InPhase> arahael: Agreed.  And the delays needed were not documented by the vendor.  I had already deduced the needed delays in testing, and implemented them.  But then after the additional optimization (targetting the rest of run time and not initialization) my initial tested accidentally became invalid right on the margin.
[04:21:40] <CoJaBo> Bonus BONUS fail: At one point, I did view my local dev copy of ::sleep(), which simply calls built-in sleep(). The current prod version no longer does that
[04:22:05] <Caffeinated> there was someone who needed to modify original IBS 5170 bios code to do thatf for using IDE hd's
[04:22:20] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 260 seconds)
[04:22:26] <InPhase> CoJaBo: You're supposed to make one epic mistaken assumption for epic bugs.  Not like, 6.  ;)
[04:22:49] <Caffeinated> the code he reverse engineered was fully commented to...was a treat to read through
[04:23:16] <CoJaBo> InPhase: This is probably the third time I've fallen down this multidimensional rabbithole of fail
[04:23:24] <Caffeinated> made me wish i had an eprom burner :P
[04:23:25] <arahael> InPhase: frustrating.
[04:23:43] <InPhase> CoJaBo: At least you found your way out on the same day, for what was an elaborate pile of confusion.
[04:23:54] <InPhase> CoJaBo: That can go much worse.  :)
[04:24:17] <CoJaBo> InPhase: "Animebug" took literally months to find the root-cause, so yeh.
[04:24:34] <CoJaBo> "Defrostbug" took about a week IIRC
[04:24:53] <CoJaBo> I'mm'a name this one "Sleepbug" I think
[04:25:10] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 252 seconds)
[04:25:58] *** Joins: Macuser (~Macuser@216.30.159.201)
[04:26:00] *** Joins: davros (~davros@host86-185-99-252.range86-185.btcentralplus.com)
[04:26:03] <CoJaBo> InPhase: Animebug came in with this bug report: "new partitions keep containing anime"
[04:26:59] *** Joins: digilink (~digilink@user/digilink)
[04:29:37] <InPhase> Instant classic.
[04:29:47] <pulse> how do you say "tonight", but meaning previous night
[04:29:50] <pulse> not the one about to happen
[04:29:55] <InPhase> Last night?
[04:29:57] <pulse> "i had a dream tonight" is still correct
[04:30:00] <pulse> i had a dream last night
[04:30:03] <pulse> yeah that works, thanks
[04:30:15] <CoJaBo> Indeed, I created a new virtual parition, and it contained this file:    devilmite_beam__rs2_[DF9B546C].mkv
[04:30:45] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[04:31:21] <CoJaBo> It turned out to be an interplay of horrible, horrible code, a cargo-cult design-antipattern I named "Increment If Invalid", PLUS a content-filter bug =D
[04:32:42] <CoJaBo> The actual bug was this block of code: if( is_invalid($PARTITION_ID) ) { $PARTITION_ID++ }  //insure partition owner valid owner
[04:36:41] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[04:37:07] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (Ping timeout: 252 seconds)
[04:37:53] *** Quits: mmlj4 (~mmlj4@ip68-11-69-185.no.no.cox.net) (Ping timeout: 265 seconds)
[04:40:28] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[04:47:00] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) ()
[04:48:59] *** Joins: jamea (~jamea@189.237.61.14)
[04:49:03] <CoJaBo> InPhase: Aaaannddd........ The word of the day is $idempotant. (Not to be confused with the correct spelling, $idempotent)
[04:49:46] <CoJaBo> Yep, the whole ultimate root cause of Sleepbug: A typo.
[04:49:56] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[04:50:34] <Caffeinated> mmmmmm grog
[04:50:54] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[04:51:08] *** Joins: mmlj4 (~mmlj4@ip68-11-69-185.no.no.cox.net)
[04:52:15] <[itchyjunk]> beaky, why are you MIA?
[04:52:23] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 265 seconds)
[04:52:33] <Caffeinated> lol
[04:52:48] <jinsun> MIA?
[04:52:53] <Caffeinated> don't poke the gorgon
[04:53:22] *** Joins: webNET4 (~0x100@32.211.211.39)
[04:53:57] <beaky> im not mia im beaky
[04:55:07] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Remote host closed the connection)
[04:55:28] <jinsun> googling MIA doesn't help much, just 2 women named that appear
[04:56:28] <CoJaBo> jinsun: Shirly you must be jokingâ€½
[04:56:56] <[itchyjunk]> beaky, i have questions
[04:56:59] <beaky> "missing in action" someone who's not there and whose whereabouts are unconfirmed
[04:57:00] <Caffeinated> guffaw
[04:57:00] <[itchyjunk]> exact (fun s : S => fun h : H => fun m : M => m).
[04:57:14] <[itchyjunk]> so should this take something of type S and return something of type M ?
[04:57:19] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[04:57:26] <[itchyjunk]> i want to prove Theorem syllogism : forall (S H M : Prop),(S->H)->(H->M)->S->M.
[04:58:35] <Caffeinated> validation
[04:59:26] <beaky> it should take two functions, one of type S -> H and another of type H -> M, then it applies them in sequence to compose them (thus yielding S -> M)
[04:59:53] <[itchyjunk]> yeah that's what i wanted to do i think but i thought i could do it this way
[04:59:55] <[itchyjunk]> xD
[05:00:10] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[05:00:22] <beaky> the idea is that transitivity of implication corresponds to function composition 
[05:00:35] <[itchyjunk]> hmm that makes sense
[05:00:48] <[itchyjunk]> but intros s h, already figures out S->H and H->M part
[05:01:00] <[itchyjunk]> without needeing to do this lamda function stuff
[05:01:04] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:d4b6:3f93:f669:5584)
[05:01:08] <[itchyjunk]> but then i get stuck at the last step
[05:01:23] <[itchyjunk]> i have S->H and H->M and witnesses for them
[05:01:49] <beaky> yes intros s h introduces the functions s and h
[05:02:02] <beaky> then you can compose them with apply (or exact)
[05:02:50] *** Joins: Intelo (~Intelo@88.246.78.218)
[05:03:20] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[05:04:13] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:d4b6:3f93:f669:5584) (Ping timeout: 252 seconds)
[05:04:26] <[itchyjunk]> oh i see
[05:04:28] <[itchyjunk]> i think
[05:04:40] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[05:05:56] <[itchyjunk]> issue
[05:06:17] <[itchyjunk]> so i have exact (fun s => fun h => (i want to return something of type M))
[05:06:23] <[itchyjunk]> but i have never introduced this 
[05:07:44] *** Parts: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca) ()
[05:11:08] *** h4x0r is now known as MrDuckHunt
[05:11:53] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 252 seconds)
[05:13:28] <beaky> yes try to introduce one last variable (like x : S) then you can go h (s x) 
[05:13:52] <beaky> and then qed you've proven syllogism
[05:14:38] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[05:15:15] <[itchyjunk]> hmm
[05:16:19] <[itchyjunk]> hmmmmmmmmmmmm
[05:16:31] *** Joins: snake (~snake@user/snake)
[05:18:00] <Caffeinated> i smell burning meat
[05:18:29] *** Quits: peteyboy1 (~peteyboy1@95.169.235.10) (Ping timeout: 252 seconds)
[05:19:09] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[05:19:36] <arahael> Caffeinated: Take your hand off the stove.
[05:21:03] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[05:21:53] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:592f:1d19:f5a3:fe53)
[05:22:08] *** Joins: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:90de:fcf0:43fb:a5db)
[05:24:04] <vdamewood> I smell... I smell... I smell... Ducky!
[05:24:43] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[05:25:16] <[itchyjunk]> beaky, i ended up doing apply https://bpa.st/XJFA
[05:25:19] <bayaz> Title: View paste XJFA 
[05:26:59] <beaky> yes apply is nicer than exact it lets you provide the proof transformations step-by step
[05:30:02] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[05:30:39] <[itchyjunk]> yeah makes sense
[05:30:51] <[itchyjunk]> coq is hard
[05:31:27] *** Joins: mov_eax (~mov_eax@user/mov-eax/x-5035058)
[05:33:14] *** Joins: AbleBacon_ (~AbleBacon@user/AbleBacon)
[05:33:28] *** Quits: gitgooood (~gitgood@host-78-145-137-41.as13285.net) (Ping timeout: 265 seconds)
[05:33:38] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:d4b6:3f93:f669:5584)
[05:35:43] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[05:36:00] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[05:36:40] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:d4b6:3f93:f669:5584) (Ping timeout: 252 seconds)
[05:36:40] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Ping timeout: 252 seconds)
[05:39:47] *** Joins: kmh_ (~kmh@p200300df5f04e9009876a73e099002be.dip0.t-ipconnect.de)
[05:41:02] *** Quits: kmh (~kmh@p2e511797.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[05:41:58] *** Joins: akevinhuang2 (~thekevinh@user/thekevinhuang)
[05:42:10] *** Quits: hexingb (~hexingb@2409:8902:78c4:4375:75f3:ab3b:f55:9c79) (Ping timeout: 252 seconds)
[05:42:28] *** Joins: hexingb (~hexingb@2409:8900:2721:f005:5d3e:2454:a246:7a27)
[05:43:49] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-b82e-8865-a976-d9c2.res6.spectrum.com) (Ping timeout: 252 seconds)
[05:44:20] *** Quits: akevinhuang (~thekevinh@user/thekevinhuang) (Ping timeout: 252 seconds)
[05:44:56] *** Joins: frost (~frost@59.71.240.119)
[05:46:19] *** Joins: FreEm1nD (~freemindm@mail.guarapari.store)
[05:48:11] *** Quits: mov_eax (~mov_eax@user/mov-eax/x-5035058) (Quit: WeeChat 3.0.1)
[05:48:27] *** Quits: gry (~quassel@botters/gry) (Ping timeout: 265 seconds)
[05:49:09] *** Joins: gry (~quassel@botters/gry)
[05:49:25] *** Quits: zaher_ (~zaher@37.48.148.135) (Ping timeout: 265 seconds)
[05:54:20] <beaky> yes soon you will get used to specifying theorems with coq's type theory and then discover all the forms of tactics and proof approaches
[05:55:07] <beaky> and then come up with one-liner proof scripts like 'crush' in adam chlipala's certified programming with dependent types book
[05:55:55] *** Quits: xff0x (~xff0x@2001:1a81:5244:5800:bebc:1a37:2a8f:4a9c) (Ping timeout: 252 seconds)
[05:57:56] *** Joins: xff0x (~xff0x@2001:1a81:527e:a000:8410:b7cd:5783:45ad)
[05:58:41] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-b453-a897-4f94-54c0.res6.spectrum.com)
[06:00:07] *** Joins: dsrt^ (~dsrt@68.101.54.227)
[06:03:06] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[06:09:17] *** Joins: a6a45081-2b83 (~aditya@2601:249:4300:1296:88ec:cc73:84d4:1507)
[06:13:31] *** Quits: hexingb (~hexingb@2409:8900:2721:f005:5d3e:2454:a246:7a27) (Ping timeout: 252 seconds)
[06:14:05] *** Joins: hexingb (~hexingb@101.236.65.144)
[06:15:58] <[itchyjunk]> beaky, lol i hope
[06:16:32] <[itchyjunk]> beaky, a computerphile video also made me very interested in agda. do the skill from coq carry over there? or will there be a lot of relearning?
[06:16:33] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:17:07] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 245 seconds)
[06:17:07] *** brabrax_ is now known as brabrax
[06:18:29] <beaky> yes the type theory of agda is similar so you can specify things similarly but unlike coq there's no tactics in agda and agda puts more focus on using the dependent types directly to do proofs (like programming, or if you were to repeatedly use the 'refine' tactic in coq)
[06:19:26] *** Quits: juliaEnv (~juliaEnv@ip-86-49-255-181.net.upcbroadband.cz) (Quit: Going offline, see ya! (www.adiirc.com))
[06:19:27] <beaky> but agda's dependent types are more useable than coq so whereas in coq you have to explicitly use 'match ... return ... with' and convoy pattern a lot in agda it is less necessary and the pattern matching is nicer
[06:19:39] *** Quits: jaysicks (~jaysicks@94-21-246-55.pool.digikabel.hu) (Remote host closed the connection)
[06:20:35] <beaky> and one more difference is that in coq universes are cumulative so universe polymorphism feels very automatic but in agda universes are not cumulative by default (though there is an option to turn it on) instead you will have to explicitly specify universe levels as extra variables 
[06:21:26] <beaky> also if you like dependent types but still want to use coq and have things be a bit nicer you can look into plugins like coq Equations https://github.com/mattam82/Coq-Equations
[06:21:28] <bayaz> Title: GitHub - mattam82/Coq-Equations: A function definition package for Coq 
[06:22:06] <[itchyjunk]> hmm universe polymorphism sounds interesting but no  idea what they are
[06:22:32] <[itchyjunk]> fancy
[06:22:47] <beaky> universes are types of 'all types' like how in coq there's the type Set, Prop, Type (and lately they've added SProp too)
[06:22:51] <[itchyjunk]> i am also considering dabbling with emacs since everyone recommends it
[06:23:04] <[itchyjunk]> ah yes
[06:23:09] <beaky> yes install emacs and then install proof general through the emacs package management system
[06:23:24] *** Joins: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca)
[06:23:44] *** Quits: vicfred (~vicfred@user/vicfred) (Ping timeout: 265 seconds)
[06:26:18] <beaky> this chapter explains what universes are and how they work in coq (and why coq has Prop) universes are important when trying to specify things that are not simple Sets (the smallest universe, for things like basic data types in programming) like 'for all predicates A -> B'  http://adam.chlipala.net/cpdt/html/Universes.html
[06:26:19] <bayaz> Title: Universes 
[06:26:38] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 265 seconds)
[06:26:47] <beaky> or defining dependent types that have those kinds of higher universe types
[06:27:11] <Caffeinated> rofl beaky is on a roll
[06:29:53] <[itchyjunk]> seems related to when we say universe in set theory a bit then?
[06:31:06] <beaky> yes universes are related to strongly inaccessible cardinals in set theory
[06:31:49] <beaky> and Type is related to 'grothendieck universes' 
[06:32:00] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[06:32:10] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[06:32:14] <[itchyjunk]> Having a function that reverses a list and applying that function again gives us identity back. here, type theory connects to category theory
[06:32:22] <[itchyjunk]> this stuff gets so insane so quick!
[06:33:10] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:33:50] *** Joins: gggp (~textual@114.245.105.253)
[06:34:42] <Izem> beaky: Have you heard of typestates?
[06:34:51] <beaky> what are typestates
[06:36:07] <[itchyjunk]> what are types tates ?
[06:37:48] <Izem> I was hoping you could tell me :P
[06:37:53] <beaky> lol
[06:38:18] <webNET4> mashed, fried, baked, boiled, microwaved, grilled, emyulsified
[06:39:30] <Izem> Seems to be about using types to describe state, I saw it in the plaid programming language http://www.cs.cmu.edu/~aldrich/plaid/oopsla11-slides.pdf
[06:39:31] <bayaz> Type: application/pdf Size: 560.6 kB 
[06:40:39] <webNET4> i would use enumeration type
[06:40:52] <beaky> i guess it is like finite state machines on steroids
[06:41:00] *** Quits: FreEm1nD (~freemindm@mail.guarapari.store) (Remote host closed the connection)
[06:41:26] *** Quits: gggp (~textual@114.245.105.253) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[06:42:02] <beaky> fused with hoare logic
[06:42:27] *** Joins: Architect (~MrDuckHun@user/h4x0r)
[06:42:28] *** Architect is now known as TheArchitect
[06:43:00] <beaky> and related to linear logic and effect systems 
[06:43:40] <beaky> like rust which i like 
[06:44:02] <beaky> in rust you have to borrow everything once and the borrow checker checks it
[06:45:11] <beaky> speaking of rust nice looks like they've almost finished rewriting rust in rust https://blog.sunfishcode.online/rust-programs-entirely-in-rust/
[06:45:13] <bayaz> Title: Rust programs written entirely in Rust 
[06:46:30] *** Joins: khanred (~khanred@user/khanred)
[06:47:14] *** Joins: gitgooood (~gitgood@host-78-145-137-41.as13285.net)
[06:47:29] <Izem> what is it written in now?
[06:47:43] <beaky> rite now they are using the c standard library which is written in c
[06:48:26] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[06:48:52] <Caffeinated> remby o/
[06:50:06] <[itchyjunk]> i know fin tech uses a lot of FP
[06:50:17] <[itchyjunk]> but do they use formal proofs for their programs?
[06:50:21] <[itchyjunk]> sounds like something they would want
[06:50:48] *** Quits: TheArchitect (~MrDuckHun@user/h4x0r) (Ping timeout: 265 seconds)
[06:52:24] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[06:52:28] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[06:53:20] *** MrDuckHunt is now known as TheArchitect
[06:56:51] *** AbleBacon_ is now known as AbleBacon
[06:56:55] <Izem> I know airspace uses formal methods, not sure who else does
[06:57:13] <khanred> lolwhat
[06:57:24] <khanred> We sure as hell didn't when I worked in it
[06:57:26] <kline> 3>he thinks aerospace routinely proves its software
[06:57:27] <[itchyjunk]> oh it's a shipping service?
[06:57:43] <khanred> I worked in aerospace, there were no formal methods
[06:57:46] <Izem> s/airspace/aerospace
[06:57:52] <khanred> Just a lot of automated and manual testing
[06:57:55] <Izem> not at your level I guess
[06:58:02] <oldlaptop> formal proofs are sort of the opposite pole from the kind of intensive testing the aerospace people do
[06:58:04] <khanred> lol ok
[06:58:07] <Izem> I am speaking to the industry as a whole
[06:58:13] <PlanckWalk> Haha no
[06:58:17] <khanred> Izem, Have you worked in aerospace?
[06:58:22] <Izem> nope
[06:58:27] <khanred> THen shut up
[06:58:27] <PlanckWalk> Some tiny fragments of softwrae yes, the vast majority no
[06:58:41] <[itchyjunk]> fin tech probably uses formal proofs right?
[06:58:45] <Izem> yes, I mentioned an industry known to use it
[06:58:46] <[itchyjunk]> they are heavy on OCaml
[06:59:02] <beaky> only one company jane street is heavy on ocaml
[06:59:03] <PlanckWalk> I have no idea what fintech uses
[06:59:06] <[itchyjunk]> someone doing intern at jane street in the math channe ltold me
[06:59:07] <[itchyjunk]> oh
[06:59:09] <[itchyjunk]> heh
[06:59:26] <[itchyjunk]> well i talked to an intern in jane street and he said FP is used in fin tech quite a bit
[06:59:48] <Izem> I wonder which companies use k or j
[07:00:40] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[07:00:41] *** Joins: xiongxin8802 (~quassel@2409:8955:384c:1539:13ac:876e:41f7:7142)
[07:00:42] <oldlaptop> [itchyjunk]: what do you suppose the odds are that an intern at FooCorp has experience in any foo-industrial firms other than FooCorp?
[07:01:35] <[itchyjunk]> he was interning as a coder
[07:02:05] * oldlaptop did assume he wasn't interning as a floor-mopper
[07:02:24] <[itchyjunk]> apparently airbus uses it 
[07:02:44] <[itchyjunk]> and some hardware manufacturers too
[07:04:33] <[itchyjunk]> "In the aftermath of the bug and subsequent recall, there was a marked increase in the use of formal verification of hardware floating point operations across the semiconductor industry."
[07:04:39] <[itchyjunk]> https://en.wikipedia.org/wiki/Pentium_FDIV_bug
[07:04:40] <bayaz> Title: Pentium FDIV bug - Wikipedia 
[07:04:41] <[itchyjunk]> wow
[07:05:47] *** Quits: frost (~frost@59.71.240.119) (Ping timeout: 265 seconds)
[07:07:43] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[07:09:24] *** Joins: frost (~frost@59.71.240.119)
[07:10:49] *** Joins: cliluw (~cliluw@47.147.80.149)
[07:11:35] *** Quits: gitgooood (~gitgood@host-78-145-137-41.as13285.net) (Ping timeout: 265 seconds)
[07:13:28] <Izem> amazon is also known to have used it with great results
[07:13:55] <Izem> that sector would be cloud or distributed computing I suppose
[07:14:54] *** Joins: allegorical_ (~guest@2607:fea8:33e0:65c:5d:7aa2:c248:ba6c)
[07:15:10] *** Quits: allegorical_- (~guest@2607:fea8:33e0:65c::2) (Ping timeout: 240 seconds)
[07:19:03] <[itchyjunk]> Izem, apparently aerospace uses it
[07:19:13] <[itchyjunk]> both boeing and airbus use it for certain things
[07:19:20] <[itchyjunk]> https://blog.compiler.ai/2021/05/06/verification-is-tcbpb-reduction/
[07:19:21] <bayaz> Title: Verification = TCB/PB Reduction 
[07:20:09] <[itchyjunk]> https://www.engadget.com/2020-02-06-boeing-737-max-software-bug.html
[07:20:32] <Izem> yes I'm aware
[07:20:46] <Izem> I just couldn't really think of other success stories
[07:21:37] <Izem> when ever you look into verfied compilers they like to mention those
[07:22:23] <[itchyjunk]> https://compiler.ai/bugs/
[07:22:23] <bayaz> Title: clojure.lang.LazySeq@d70b15c4 
[07:22:27] <[itchyjunk]> yeah
[07:22:50] <[itchyjunk]> that formal proofs are used at hardware level is news to me.
[07:23:09] <[itchyjunk]> Next, i'm interested in formal proofs in the context of FPGA's and such
[07:24:09] <[itchyjunk]> oh i know someone who works at amazon and also knows coq
[07:27:26] <Izem> they used tla+ for aws, not sure about coq
[07:27:47] <Izem> for hardware, you could say they have always used formal proofs?
[07:28:07] <Izem> just maybe not with proof verifiers
[07:28:11] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[07:28:27] *** Joins: pandakekok9 (~job@wikimedia-commons/pandakekok9)
[07:28:32] <Izem> or theorem provers or whatever the term is
[07:29:03] *** Quits: zwr (~zwr@2804:d45:b966:fb00:910a:d889:ae80:3966) (Remote host closed the connection)
[07:30:30] *** Joins: gggp (~textual@114.245.105.253)
[07:31:00] <[itchyjunk]> oh!
[07:31:06] <[itchyjunk]> tla+ was java thing right?
[07:31:10] <[itchyjunk]> that's crazy
[07:31:11] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Client Quit)
[07:31:18] <Izem> In industry, do rewrites usually end poorly?
[07:31:25] *** Joins: leduyquang753 (~leduyquan@27.73.60.131)
[07:31:25] *** Quits: leduyquang753 (~leduyquan@27.73.60.131) (Changing host)
[07:31:25] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[07:31:56] <Izem> oh til it is written in Java
[07:33:01] <Izem> oh cool, it is also a key component for azure it seems
[07:33:05] *** Quits: gggp (~textual@114.245.105.253) (Client Quit)
[07:33:36] <Izem> I recall him mentioning that's part of why it was made, cool
[07:33:54] <[itchyjunk]> oh tla? ms uses java too?
[07:34:01] <[itchyjunk]> wow
[07:34:09] <[itchyjunk]> java is far more popular than i would have thought
[07:34:22] *** Quits: arcatech (~arcatech@user/arcatech) (Ping timeout: 252 seconds)
[07:34:42] <Izem> yeah, they have their own build of openjdk so it must be used a lot
[07:35:40] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[07:36:29] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[07:37:25] <Izem> I'm now wondering if memory safety is the big problem with OSes or is it access?
[07:37:45] <Izem> memory safety might be overrated
[07:40:38] *** Joins: Quacc (~youbuntoe@user/quacc)
[07:40:42] *** Quits: Quacc (~youbuntoe@user/quacc) (Client Quit)
[07:41:26] <davros> prefetch intrinsics.. are these things just ignored these days infacour of hardware prefetching
[07:41:29] <davros> or do they still work
[07:41:52] <davros> prefetch instructions i mean
[07:41:52] *** Joins: node1 (~node1@user/node1)
[07:42:00] *** Joins: sivert (~sivert@69.140.208.98)
[07:42:01] <davros> which can of course be generated by prefetch intrinsics.
[07:44:45] *** Quits: frost (~frost@59.71.240.119) (Ping timeout: 260 seconds)
[07:47:32] *** Quits: akevinhuang2 (~thekevinh@user/thekevinhuang) (Ping timeout: 252 seconds)
[07:48:42] *** Joins: golden_ticket (uid205013@id-205013.helmsley.irccloud.com)
[07:50:05] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[07:50:19] *** Joins: frost (~frost@59.71.240.119)
[07:51:11] *** Joins: saltrocklamp[m] (~elementio@user/hexology)
[07:52:12] *** Quits: jiffe (~jiffe@mail.nsab.us) (Ping timeout: 245 seconds)
[07:53:37] *** Quits: jamea (~jamea@189.237.61.14) (Ping timeout: 252 seconds)
[07:54:30] *** Joins: jiffe (~jiffe@mail.nsab.us)
[07:57:08] *** Joins: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net)
[08:02:58] *** Quits: xiongxin8802 (~quassel@2409:8955:384c:1539:13ac:876e:41f7:7142) (Ping timeout: 252 seconds)
[08:07:09] *** Quits: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca) (Ping timeout: 256 seconds)
[08:10:38] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[08:11:22] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[08:13:33] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[08:17:25] *** Quits: anovick (~anovick@2a0d:6fc0:1bd8:7800:98e9:2c6f:1a52:52c0) (Ping timeout: 260 seconds)
[08:22:03] *** Joins: gggp (~textual@111.63.14.116)
[08:22:42] <nova> would anyone like to help me invent a name for a prgm?
[08:23:53] <Guest80> sure 
[08:24:21] <Guest80> my iq is 183 I think I can guide you in right direction 
[08:25:10] *** Joins: euouae (~euouae@user/euouae)
[08:25:42] <euouae> Hello 
[08:25:53] *** Quits: a6a45081-2b83 (~aditya@2601:249:4300:1296:88ec:cc73:84d4:1507) (Remote host closed the connection)
[08:26:32] <Guest80> hello good sir, can you help Nova and I come up with a great name for a prgm?
[08:26:52] <euouae> I have an ~/.ssh/id_rsa_yubikey.pub file that I use with ssh for github. For example, ssh git@github.com works fine. I tried adding this key to gitlab as well, but it does not work. Am I doing something wrong? ssh doesn't look at the id_rsa_yubikey.pu file
[08:27:53] <nova> I think only IQ > 9000 will suffice, but here goes. The prgm is an editor like ed or ex but with a different ideology - similar moreso to that of sam or acme. Instead of using line-based ranges, it would use multiple selections in addition to (line-based) ranges. These selections could be refined by chaining together refinement operations, manipulated in other ways by specifying various
[08:27:55] <nova> motions and operations, filtered with filters, and manipulated with commands. Also, there could be user-defined filters, refiners, and operators. I could give an example, but that is the gist.
[08:29:18] <edgar-rft> qskbqx sounds like a good name for a prgm
[08:30:16] * Guest80 brain explodes contemplating the universe of possible Regex-Macro-Language-Ranges
[08:31:41] <edgar-rft> Guest80: there are so many different mutually incompatible regex implementations that this should your smallest problem
[08:31:42] <nova> for example, :3,$;v/foo/;e/foobar/;x/Et_/;s/(,)/ (tentatively - grammar not set in stone) would (1) define a line-based range from 3 to end-of-file, (2) Visually select all regex that matches "foo", (3) filter out (Exclude) "foobar", (4) eXecute ex command "Et_" (End of WORD then go 'til "_"), (5) surround each refined selection with "(" and ")"
[08:32:22] <Caffeinated> lol, and it starts early tonight
[08:32:39] <nova> compare that with the equivalent statement in vim :3,$s/foo\%(bar\)\@!\s*[^;[:space:]]\+.\{-}\ze;/(&)/g  .. still somewhat trivial, but here you're limited by regex instead of being able to chain together filters, manipulators, and actions
[08:33:42] <nova> effectively, it's like a more robust macro in vim with a grammar that is more extensible. Like an ex for vim macros but better (hopefully)
[08:34:45] <nova> I have some stupid names like yae (yet another editor), jae (just another editor), xed (already taken)
[08:37:32] *** TheArchitect is now known as GodMode
[08:37:32] *** GodMode is now known as TheArchitect
[08:37:47] *** TheArchitect is now known as GodMode
[08:37:47] *** GodMode is now known as TheArchitect
[08:37:49] *** TheArchitect is now known as h4x0r
[08:37:52] *** Joins: lalitmee__ (~lalitmee@180.94.32.185)
[08:38:17] <nova> or sbe for "selection-based editor", but I hate that. I am pretty tired, too
[08:38:31] <oldlaptop> alas, sed is also taken
[08:38:48] <nova> sled >:3
[08:38:51] <oldlaptop> 'jed' is pretty good
[08:39:01] <nova> Just an EDitor lmao
[08:39:09] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[08:39:22] <nova> jed is already an editor
[08:39:28] <oldlaptop> It was inevitable
[08:39:34] <nova> http://www.jedsoft.org/jed/
[08:39:35] <bayaz> Title: The JED Programmer's Editor 
[08:39:59] <euouae> nevermind I figured it out, I needed an entry for gitlab.com in ~/.ssh/config
[08:40:09] <euouae> nova, try ned then, nova's editor
[08:40:30] <nova> https://github.com/nevdelap/ned
[08:40:31] <bayaz> Title: GitHub - nevdelap/ned: For regular expression power users, ned is like grep and ripgrep, but with powerful replace capabilities, and more powerful than sed, as it isn't restricted to line oriented editing. 
[08:40:31] *** Quits: lalitmee_ (~lalitmee@180.94.32.166) (Ping timeout: 265 seconds)
[08:41:30] <nova> I was trying to think of maybe something like "atom" and steer away from "*ed*" also, but my brain ceased to function
[08:42:31] <nova> ee: "edit-y editor" .. great job brain. 10/10
[08:43:29] <euouae> Yeah I don't get it, gitlab gives me a different response from github 
[08:43:50] <euouae> and I can't authenticate. Does anyone have experience with that?
[08:44:33] *** Joins: vysn (~vysn@user/vysn)
[08:44:34] <nova> haven't tried gitlab in a while, but first time you use ssh, it should ask if you want to add the fingerprint. you just then add your pub key to gitlab on website
[08:46:00] <euouae> I've done those, yeah, but something is going wrong when it comes to authenticating 
[08:46:17] <euouae> with github it asks for my yubikey, but gitlab just fails after the ssh client sends over the public key
[08:46:17] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[08:48:17] <nova> make sure everything everything is ~/.ssh/id_rsa{,.pub}  if those two aren't the path, then you have to tell it to use different keys. I bet ya did that, but I so tired. must sleeps.
[08:49:56] <euouae> This is what ssh -v gives me, https://paste.debian.net/1210835/
[08:49:59] <bayaz> Title: debian Pastezone 
[08:50:25] <euouae> Maybe I need to restart the ssh-agent 
[08:51:32] <euouae> for some reason it doesn't accept my offered public key?
[08:54:22] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[08:54:45] <Guest80> when was first time you realized you were a genius>
[08:55:53] *** Quits: Intelo (~Intelo@88.246.78.218) (Ping timeout: 256 seconds)
[08:56:19] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[08:56:52] <nova> fourteen thousand years ago
[08:57:44] *** Joins: tekmunkey (~tekmunkey@69.145.236.165)
[09:00:06] <Guest80> https://www.youtube.com/watch?v=V1bFr2SWP1I
[09:00:11] <bayaz> Title: OFFICIAL Somewhere over the Rainbow - Israel "IZ" KamakawiwoÊ»ole 
[09:01:01] <nova> euouae, you added anything to ~/.ssh/config ?
[09:01:29] <euouae> nova, Host gitlab.com IdentitiesOnly yes, IdentityFile ~/.ssh/id_rsa_yubikey.pub
[09:01:40] <euouae> The exact same thing I have for github.com, where it worksfine
[09:02:28] <nova> euouae, what you see when you do  ssh -T git@gitlab.example.com
[09:02:46] <euouae> gitlab.example.com? Shouldn't it be git@gitlab.com ?
[09:03:20] <nova> ssh -T git@gitlab.example.com
[09:03:37] <nova> for testing
[09:03:39] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:03:48] <euouae> example.com runs ssh?
[09:04:00] <nova> https://docs.gitlab.com/ee/ssh/#verify-that-you-can-connect
[09:04:01] <bayaz> Title: GitLab and SSH keys | GitLab 
[09:04:11] *** Parts: tekmunkey (~tekmunkey@69.145.236.165) ()
[09:04:12] <euouae> It just tells you to change it to the gitlab instance you're running
[09:04:19] <euouae> It's not telling you to actually connect to example.com
[09:04:32] *** Quits: hexingb (~hexingb@101.236.65.144) (Ping timeout: 252 seconds)
[09:04:42] <nova> 4. Run the ssh -T git@gitlab.example.com command again. You should receive a Welcome to GitLab, @username! message. 
[09:04:56] <nova> you're right whoops. *tired*
[09:05:18] <nova> try ssh -T git@gitlab.com  I guess
[09:05:19] *** Joins: hexingb (~hexingb@2409:8900:2720:f08:3c07:a965:34f3:5811)
[09:06:04] <nova> if fails, try ssh -Tvvv git@gitlab.com  .. hopefully not same errors as before
[09:06:14] <euouae> I see, gitlab doesn't have gitlab instances 
[09:06:33] <euouae> I see gnome runs a gitlab instance, so you can do `ssh git@gitlab.gnome.org` for example
[09:06:38] <euouae> I'm just being stupid nova 
[09:06:47] <euouae> But thank you for your help <3 
[09:07:57] <nova> me too. only thing I can think to do is just delete from gitlab and re-copy pub key with  xsel -bi < .ssh/...  then paste (xsel is modern xclip)
[09:08:33] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[09:08:45] <euouae> The fix was that I was supposed to run this on a gitlab instance -- but gitlab.com itself doesn't qualify 
[09:08:51] <euouae> gitlab.gnome.org is a gitlab instance 
[09:09:01] <euouae> I think gitlab.com is just the 'company' website 
[09:09:38] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[09:13:36] <Guest80> haha
[09:13:46] <Caffeinated> haha
[09:13:59] <Caffeinated> knee deep in the hooplah
[09:14:55] *** Joins: audio (~audio@2603-8081-1801-3bb5-cbd5-2f8b-b6de-5f12.res6.spectrum.com)
[09:16:58] <Guest80> https://www.youtube.com/watch?v=-crgQGdpZR0
[09:16:59] <bayaz> Title: ABBA - Take A Chance On Me (Official Music Video) 
[09:20:30] *** Joins: anovick (~anovick@2a0d:6fc0:1bd8:7800:98e9:2c6f:1a52:52c0)
[09:22:00] <nova> euouae, I just reset my password, created my ssh key on gitlab (I deleted the extra newline at the end - I don't know if it mattered), then I did git clone git@gitlab.com:novasenco/test.git, typed "yes" to add fingerprint, typed my ssh key's password, and boom it worked. *shrug*
[09:23:04] *** Quits: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net) (Quit: Connection closed)
[09:23:04] <nova> you have an rsa sha256 which is the minimum, but that looks good
[09:23:05] <Caffeinated> as an aside... #gitlab is a channel
[09:23:58] <nova> does anything really exist?
[09:24:21] <Caffeinated> oh dear
[09:24:21] <khanred> taxes
[09:24:30] <euouae> sha256 is the minimum? What do you mean?
[09:25:19] <euouae> In my gpg.conf preferences I have sha512 priority, I don't know why sha256 is shown instead
[09:25:32] <euouae> I think that's what gitlab prefers
[09:27:41] <nova> if a tree falls and nothing with "ears" "hears" it fall, does it make a sound? (no?) similarly, if a species exists for a tiny spec of time and goes extinct and entropy erases said species from *existence*, does said species "exist"? It's a good question. What is existence? Does it rely on some external awareness. There could be uncountably many infinite universes (or just countably many
[09:27:43] <nova> infinite universes), but we are unaware of them, so they don't exist to us, do they? surely, in the potentially infiniteness of time, we do not really "exist". right?
[09:28:03] <euouae> "entropy erases said species" -> nonsense
[09:28:12] <euouae> Don't use the word entropy if you don't understand it
[09:28:26] <nova> funny :)
[09:28:29] <euouae> Also it sounds like you're high
[09:28:39] <nova> I never smoke. I get too paranoid. you sound high
[09:29:01] <euouae> I'm not philosophizing though
[09:29:09] <nova> what "carries" information about our existence? electromagnetic waves
[09:29:17] <euouae> more nonsense
[09:29:31] <Caffeinated> oh do lets not devolve into "I know you are but what am I" childish bs
[09:29:36] <nova> heh. okay. go live in your own little world :)
[09:30:02] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:31:15] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:32:12] <nova> yes, sorry for discussing things. I'm so sorry to have disturbed you. It's not like you could just flip to another channel or actually have cordial discourse. I wonder what has happened to persons on the internet. interesting.
[09:32:17] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[09:32:37] <Caffeinated> needtogrowup.com
[09:33:10] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Client Quit)
[09:33:23] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[09:33:43] <smallville7123> Hi
[09:33:57] <nova> smallville7123, the answer is no
[09:33:59] <sivert> hello
[09:34:06] <smallville7123> Lol
[09:34:26] *** Quits: euouae (~euouae@user/euouae) (Quit:  )
[09:34:30] <Caffeinated> lol @ someone who quits then rejoins and pretends they are just new here
[09:34:54] <smallville7123> Lol
[09:34:59] <nova> we got a real peanut gallery over here :D
[09:35:12] <smallville7123> I'm on android
[09:35:20] <Caffeinated> who is "we"?  how many of there are you, nova?
[09:35:31] <nova> we exclusive of me and one.
[09:35:38] <nova> #makessense
[09:35:43] <sivert> that depends on your definition of "you"
[09:35:45] <smallville7123> XD
[09:35:52] <Caffeinated> nova: there's psychological help available for you sweetie
[09:35:54] <khanred> You guys are dorks
[09:36:18] <Caffeinated> lol I love stunning generalizations from plebs
[09:36:40] <smallville7123> For some reason the app reconnects me every time I edit the auto-join list
[09:36:45] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 260 seconds)
[09:36:48] <smallville7123> Which is stupid
[09:37:31] <Caffeinated> smallville7123: #android, #android-dev
[09:37:42] <nova> Caffeinated, why the degrading humor meant to bring others down so you can feel superior?
[09:37:49] <smallville7123> ?
[09:38:02] <smallville7123> I'm not complaining lol
[09:38:05] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[09:38:12] <Caffeinated> smallville7123: Yeah.  You are.
[09:38:14] <smallville7123> I'm telling you why I reconnected
[09:38:51] <nova> don't worry. they have been like this for my visible history. shame.
[09:38:58] *** Quits: DasBrain_ (~DasBrain@user/dasbrain) (Ping timeout: 240 seconds)
[09:39:29] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 265 seconds)
[09:39:40] <sivert> i have a hard programming question i need an answer 
[09:39:43] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[09:39:45] <sivert> which is better python or c?
[09:39:49] <Caffeinated> sigh.  I usually don't ignore smallville7123 until after they've been posting for at least 5 hours solid.  But today, early.
[09:39:56] *** Joins: webNET4 (~0x100@32.211.211.39)
[09:40:22] <Caffeinated> c is better, of course.
[09:40:27] <smallville7123> -_-
[09:40:32] <nova> sivert, neither and both. python good for prototyping and easier and widely used. C good for speed, embedded, etc. depends on use-case
[09:40:37] *** Parts: khanred (~khanred@user/khanred) (Leaving)
[09:40:52] <Caffeinated> python is fun for little bits and bobs, small fun little projects, but c is real
[09:41:07] <Caffeinated> if in doubt, look at the language your OS was written in
[09:41:12] <smallville7123> You have very little patience
[09:41:22] <sivert> hmm what's an OS?
[09:41:44] <xsperry> Caffeinated, why would you do that, unless you're writing another OS
[09:41:51] <webNET4> C-lang is ok
[09:42:16] <Caffeinated> xsperry: See you in 20 years, sweetie o/
[09:42:31] *** Quits: hexingb (~hexingb@2409:8900:2720:f08:3c07:a965:34f3:5811) (Ping timeout: 252 seconds)
[09:43:15] <xsperry> Caffeinated, yeah, see you. btw C is a horrible choice for most software written today from scratch.
[09:43:23] <smallville7123> In terms of portability, C and C++ run just about everywhere, where as python has limited support to what platforms python can be built for
[09:43:28] <Caffeinated> lmao
[09:43:40] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Quit: AmigaOS PPC 4.1 +E +U1 // AmIRC 68K)
[09:44:02] <nova> someone wants attention
[09:44:03] <smallville7123> Or rather, to what platforms python can be ported to
[09:44:07] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[09:44:10] <Caffeinated> it's so fun that people who aren't proficianet in a language automatically dislike it merely because they don't know
[09:44:15] <Caffeinated> tsk tsk
[09:44:28] <xsperry> Caffeinated, I have used C for 10 years. today, I know better
[09:44:38] <xsperry> it is spelled proficient
[09:45:16] *** Joins: jacks2 (~bc8165b6@217.29.117.252)
[09:45:44] <Caffeinated> then get into a "my toy is bigger than your toy" bs pretend argument trying to prove themselves right
[09:45:48] <xsperry> we all go through the ignorant "moar speed, write things OS was written in" phase. you will grow out of it
[09:45:49] <Caffeinated> so silly
[09:46:02] *** Joins: soapsudsxx (~soapsudsx@209.221.40.154)
[09:46:09] *** Joins: hexingb (~hexingb@101.236.65.144)
[09:46:31] <smallville7123> For example, android and iOS have no built-in support for python (eg no python executable is pre-installed) but it is possible to cross compile and run python executable for those platforms
[09:47:46] <sivert> do any of you know much about gpgpu?
[09:47:51] <smallville7123> However iOS in particular restricts this somewhat as it counts as "executing downloadable code" or something, which apple doesn't like cus security
[09:49:22] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Remote host closed the connection)
[09:49:44] <nova> for the weechat users out there looking to purify their irc /filter add Caffeine irc.*.##programming host_~Caffeine@* *
[09:50:16] <arahael> nova: There's no call for that, if you have a problem, please take it to the -ops channel. ##programming-ops.
[09:50:17] <smallville7123> However it is fine if it is an online interpereter tho, as those cannot affect their device and do not pose a security risk for apple
[09:50:43] *** Quits: gggp (~textual@111.63.14.116) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[09:52:06] <Caffeinated> I know about #gnupg 
[09:52:06] <smallville7123> While C and C++ are perfectly acceptable on android and iOS as both natively support them and they are often used in apps such as those that use 3d graphics
[09:52:17] <sivert> if i could find python bindings for modern opengl would i suffer any loss of performance on my little physics simulations by using python instead of c/c++ to write my shit code?
[09:52:45] <Caffeinated> and #python
[09:54:06] <jacks2> sivert, depends what you do. python is "fast" if all you do is use it as a glue language, that calls functions written in other languages. but if you do significant calculations in python itself, it will be considerably slower
[09:54:07] <smallville7123> HOWEVER iOS does not allow C/C++ compilation on-device as it goes against their rules, as it would allow users to potentially drastically alter the apps behaviour at runtime by downloading, compiling, and then executing code
[09:54:27] <oldlaptop> jacks2: then on the third hand you get things like pypy
[09:54:40] <oldlaptop> (or is pypy the only mature jit out there still?)
[09:55:29] <smallville7123> Specifically it ONLY allows compiling code as PART of the app itself when the app is being built by xcode
[09:55:29] *** h4x0r is now known as AllDucksMustDie
[09:55:30] <jacks2> I'd guess pypy is still an order of magnitude slower. C python is up to two orders of magnitude slows
[09:55:38] <jacks2> s/slows/slower
[09:55:43] <sivert> C python = cython?
[09:55:57] <nova> no. just a specific python interpretter
[09:56:02] <jacks2> no, python written in C. reference implementation
[09:56:25] <arahael> sivert: As opposed to pypy, jython, ironpython, etc.
[09:56:26] <nova> whoops. I saw "cpython". cpython is a python interpretter. cython is python that compiles to C
[09:56:32] <beaky> nice i like python
[09:56:34] <sivert> oh ok
[09:56:37] <smallville7123> Eg you can develop an iOS app entirely in C/C++ and apple is fine with that, but you cannot download and execute external code at runtime
[09:56:38] <Caffeinated> rofl
[09:56:57] <sivert> i'm not a programmer
[09:57:06] <smallville7123> The same applies to python as well
[09:57:08] <edgar-rft> I've heard bpython is written in bitcoin.
[09:57:23] <sivert> i'll never write an application that anyone else will use/be interested in using
[09:57:30] <nova> ipython is written with the square-root of negative one.
[09:57:32] <Caffeinated> lol edgar-rft 
[09:57:52] <arahael> nova: There are at least two different projects with that name.  One of them is "interactive" python.
[09:58:02] <sivert> i just want to do n-body simulations and stuff and have learned enough c++ to use opengl for simple simulations
[09:58:19] <smallville7123> Android itself, and android app store Google Play, on the other hand are fine with downloading and executing external code 
[09:58:48] <nitrix> The OpenGL API is in C, not C++.
[09:58:48] <arahael> smallville7123: Technically so can iOS.  It's just not permitted by the T&C's.
[09:58:52] <deniska> What apple specifically disallows is executing machine code which wasn't there in a bundle
[09:58:58] <smallville7123> Yes
[09:59:07] <deniska> so shipping C compiler which compiles to wasm and then interpreting that wasm is fine
[09:59:07] <smallville7123> Eg his jailbreak
[09:59:09] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[09:59:11] <smallville7123> Via*
[09:59:14] <sivert> then there are c++ bindings yes?
[09:59:21] *** Joins: webNET4 (~0x100@32.211.211.39)
[09:59:30] <arahael> smallville7123: No, regular iOS apps can do this, it's just, again, not permitted.
[09:59:58] <smallville7123> Yea
[10:00:07] <deniska> smallville7123: google play disallows executing executables not present in a bundle since recently
[10:00:09] <smallville7123> Tho there isnt such point
[10:00:20] <sivert> regardless it doesn't really matter as i'm still doing the actual physics on the cpu and only using the gpu for the rendering, which i know is retarded
[10:00:26] <nitrix> There are, but I don't follow the reasoning where C++ is somehow mandatory prior to use OpenGL, because it isn't.
[10:00:51] <sivert> but i don't want to learn how to use opencl and i haven't found any good resources on opengl compute shaders and don't really have the patience to learn right now
[10:01:00] <arahael> sivert: Not retarded at all - it's what the GPU is made for.
[10:01:00] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[10:01:01] <nitrix> Other languages have bindings to OpenGL too. Where does C++ come in?
[10:01:04] <smallville7123> As app store is only way to obtain and install app if you cannot install one via developer tools on Mac os
[10:01:31] <arahael> smallville7123: Not true, you can, as an example, use enterprise distribution methods, or if you have the .ipa file, drag it onto the phoen.
[10:01:40] <smallville7123> Eg I don't know of a way to install a pre-huilt iOS app without jail breaking ios
[10:01:42] <Caffeinated> you just said you know c++
[10:01:45] <arahael> smallville7123: There's also checkflight.
[10:01:45] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[10:01:50] <smallville7123> Pre-built*
[10:01:50] <Caffeinated> ...or dont you
[10:01:57] <webNET4> ok find some physics library that has "compute" support, all you need is python to not be slower than 17 milliseconds each frame
[10:02:08] <sivert> you're right nitrix forget it i just happened to start learning about opengl using tutorials that used c++ code
[10:02:18] <arahael> smallville7123: I install apps without the app store *all the time*.  You connect the phone using the cable, open finder, and drag the .ipa file onto the phone.
[10:02:26] <Caffeinated> hah yes find a library you can shovel all the work into like a steam locomotive
[10:02:32] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Quit: WeeChat 3.2)
[10:02:33] <smallville7123> Oh ok
[10:02:51] <smallville7123> But you need a computer to do so right?
[10:02:58] <sivert> arahael: I mean using the CPU for the intensive physics calcs and the GPU only for drawing to the screen, seems completely stupid to me
[10:03:15] <arahael> smallville7123: Yes, unless you use an enterprise distribution method, in which case, the phone has to download it from a website, but that doens't use the app store either.
[10:03:25] <arahael> smallville7123: Needs a manifest file or something, though.
[10:03:34] <smallville7123> Hmm
[10:03:38] <InPhase> sivert: If you are writing n-body simulations, then congratulations, you're a programmer!  You might not identify as a software engineer, because that includes some other stuff.  But, it counts as programmer.  :)
[10:03:38] <webNET4> does python have openMP support?
[10:04:26] <smallville7123> sivert have you ever heard of multi threading?
[10:04:35] <arahael> sivert: Incidentially, I don't know how to write an n-body simulation, but I'm a software engineer. ;)
[10:04:59] *** Joins: gggp (~textual@114.245.107.137)
[10:05:01] *** Joins: DasBrain (~DasBrain@user/dasbrain)
[10:05:09] <smallville7123> Basically the CPU and the GPU are like two different threads running at the same time
[10:05:23] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:06:01] *** Quits: AllDucksMustDie (~GodMode@user/h4x0r) (Remote host closed the connection)
[10:06:17] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) (Client Quit)
[10:06:31] <smallville7123> The CPU does not need to wait for the GPU to do its stuff before the CPU can continue, which stalls the CPU as it waits for GPU
[10:06:48] <smallville7123> Which would stall*
[10:07:00] *** Joins: AllDucksMustDie (~GodMode@user/h4x0r)
[10:07:12] <sivert> Caffeinated: i don't know what you mean about shoveling the work into a library
[10:07:26] <smallville7123> eg CPU > GPU (stalling CPU while it waits for GPU) > repeat
[10:07:41] <smallville7123> This is bad design as it hinders performance
[10:08:00] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 265 seconds)
[10:08:01] *** AllDucksMustDie is now known as TheArchitect
[10:08:07] <smallville7123> Idealy you want CPU operating WHILE GPU is doing its stuff
[10:08:41] <Caffeinated> sivert: No.  You don't.
[10:09:06] <smallville7123> ADDITIONALLY the GPU would also need to wait for the CPU to do all its stuff, which is also bad
[10:09:13] <sivert> oh, was that in response to webNET4?
[10:09:23] <smallville7123> For example
[10:09:24] <Caffeinated> ?X"DR
[10:09:39] <webNET4> computations in parallel
[10:09:45] <Caffeinated>  sivert: no, it was in response to you
[10:10:20] <smallville7123> If CPU takes 4 seconds, and GPU takes 4 seconds, then it takes 8 seconds to draw a frame if the CPU and GPU execute after each other
[10:10:29] *** TheArchitect is now known as AllDucksMustDie
[10:10:32] <arahael> sivert: Keep in mind that several of us have very different methodologies and schools of thought as to how you should approach programming.  Me personally? I say go ahead and use libraries and frameworks as long as they are well designed and support the work you are doing.
[10:10:39] <sivert> i'm sorry, i don't know why i keep not seeing messages for 3 minutes and then seeing 10 at once
[10:10:45] <Caffeinated> hence why I put your nick in front of it, sivert 
[10:10:48] <InPhase> !q Caffeinated "Chronic rudeness to other channel members"
[10:10:48] *** bayaz sets mode: +q $a:AlexDeLarge
[10:11:33] <smallville7123> But if the CPU and GPU execute at same time, then it still takes 8 seconds to draw the first frame, but every frame AFTER will take 4 seconds to draw instead of 8
[10:11:41] <sivert> InPhase, arahael: thanks for the encouragement, etc.
[10:12:06] <sivert> smallville7123: I've heard of multithreading and am vageuly familiar with it but have also been told/read online that it's not something to mess around with if you don't really know how to use it
[10:12:15] <smallville7123> Due to the CPU doing what it needs to do while GPau doing what it needs to do
[10:12:16] *** Quits: gggp (~textual@114.245.107.137) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[10:12:57] <smallville7123> Eg CPU > [ CPU, GPU ] > [ CPU, GPU ] > and so on
[10:13:01] *** Joins: xiongxin8802 (~quassel@2409:8955:384c:1539:13ac:876e:41f7:7142)
[10:13:37] <smallville7123> Instead of CPU > GPU > CPU > GPU > CPU > GPU > and so on
[10:13:54] *** Parts: Caffeinated (~Caffeine@user/alexdelarge) ()
[10:14:00] <InPhase> sivert: If you're doing n-body simulations on CPU in Python, then you need to be doing it in numpy.  If you're using Python just to load up the GPU to run it, then the slow speeds of non-numpy Python should not have any significant impact on your performance.
[10:14:16] *** Joins: Hax0r (~Hax0r@51.252.22.22)
[10:14:33] <smallville7123> That's true, as you need to keep things synchronized
[10:15:25] <smallville7123> Which is definitely not always easy and can be very complex depending on what you want to do
[10:15:50] <sivert> what are the consequences of messing up trying to use multiple threads?
[10:15:56] <smallville7123> And it does not always improve performance
[10:16:01] <sivert> if that's a question with infinite answers no need to go into detail
[10:16:46] <arahael> sivert: In short, if you mess up multiple threads, you'll either have undefined behaviour (ie, at best a crash), or a lockup (the application freezes, doing nothing), or the threads become sequential (Ie, you might as well not have multiple threads at all)
[10:16:48] *** Joins: isosterix (~isosterix@ip-95-222-34-30.hsi15.unitymediagroup.de)
[10:17:14] <smallville7123> For example, if the tame taken to synchronise the threads is equal to or greater than the time taken to execute the code then sequential execution will be faster
[10:17:16] <sivert> InPhase: i want to do them on the gpu because i can only do like 300 particles before the stuttering starts
[10:17:39] <sivert> ah, that makes sense smallville7123 
[10:17:45] <smallville7123> Time*
[10:18:00] <InPhase> sivert: 300?
[10:18:00] <smallville7123> This however does not happen in a real cpu
[10:18:01] <arahael> sivert: numpy and the like will use alternative approaches. (I'm not sure of the details, but they basically are cleverly written so that your problem can be expressed in the machine as some sort of huge matrix that can be efficiently computed over).
[10:18:31] <InPhase> sivert: What kind of inter-body calculations are you working with there?  Is this a radial potential well or something more complicated?
[10:18:35] * arahael should tell sivert that he, personally, hasn't actually used numpy much, so take his suggestions with a grain of salt)
[10:18:42] <sivert> i've used numpy along with some other libraries for machine learning
[10:18:46] <smallville7123> As synchronisation overhead of the CPU pipleline is VERY small, almost non existant
[10:18:48] *** Quits: AllDucksMustDie (~GodMode@user/h4x0r) (Remote host closed the connection)
[10:19:22] *** Quits: xff0x (~xff0x@2001:1a81:527e:a000:8410:b7cd:5783:45ad) (Ping timeout: 252 seconds)
[10:19:37] *** Joins: TheArchitect (~GodMode@user/h4x0r)
[10:20:04] *** Joins: xff0x (~xff0x@2001:1a81:527e:a000:d157:28e0:13dd:1400)
[10:20:12] <sivert> InPhase: at each time step calculate the force on each particle to get the acceleration, * dt to get velocity, * dt to get new position, update the old position to the new position
[10:20:47] <smallville7123> Eg the CPU can synchronise its stages faster than it can execute an instruction
[10:21:06] <smallville7123> Which doesn't make sense to me
[10:21:25] <sivert> why not?
[10:21:53] <InPhase> sivert: Are you using some sort of neighbor tables or similar?
[10:22:14] <smallville7123> Cus how can a CPU synchronise a complex pipeline faster than it can process and execute a single instruction
[10:22:23] <sivert> i'm afraid i don't know what a neighbor table is
[10:22:57] <jacks2> multithreading can be something as simple as replacing sequential map with parallel map. or a nightmare with many locks that interact with one another
[10:23:10] <InPhase> sivert: It's a technique by which for each particle, you only consider the influence of particles within a specified range for which the interaction is significant.
[10:23:32] <sivert> oh, that's brilliant, ok, no
[10:23:47] <InPhase> sivert: Neighbor tables are what are required to make N-body simulations scale to very large numbers of bodies, because rather than calculate all the combinations of interactions, you're only doing an amount set by how densely packed they are.
[10:24:41] <InPhase> sivert: There are efficiency steps you can take such as only updating the neighbor tables after a certain number of steps, so that the update itself is not expensive.
[10:25:46] <smallville7123> Tho given how complex a CPU actually is, it is very likely that synchronising the pipeline is in fact a very quick thing to do, as it needs to do tons of other stuff too such as branch prediction, Out-Of-Order execution, dependency checking, and other stuff
[10:25:52] <InPhase> sivert: And there are efficient ways to generate neighbor tables, such as assigning particles to grid cells, which result in full linear scaling of run time as you add more particles.  3000 particles is then 100 times slower than 30 particles.
[10:26:21] <InPhase> sivert: Without this, 3000 particles is 10,000 times slower than 30 particles.
[10:26:30] <smallville7123> Which could all take significantly longer than the time taken to synchronise a pipeline
[10:26:56] <sivert> that's so smart man
[10:27:38] <sivert> i came up with the idea of making the force proportional to 1/(r+[small number]) to avoid infinities and i thought that was clever haha
[10:28:11] *** Quits: nicbk (~nicbk@user/nicbk) (Quit: nicbk)
[10:28:12] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[10:28:43] <InPhase> sivert: I learned that during a molecular dynamics project at Los Alamos way back in 2001.  And I was able to do thousands of atoms with real-time update on the display, watching rapid phase transitions in piles of atoms.  And that was with 2001 hardware.  So you can do it efficiently now for sure.  :)
[10:29:20] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[10:29:21] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[10:29:34] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[10:30:08] <sivert> i really appreciate the help!
[10:30:56] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Client Quit)
[10:31:08] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[10:31:11] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Client Quit)
[10:31:19] *** Joins: independent56 (~independe@95.144.68.39)
[10:31:24] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[10:31:29] <sivert> smallville7123: you might as well be speaking another language, computers are basically magic to me
[10:31:42] <smallville7123> Haha :)
[10:33:09] <sivert> i'm like mid-life crisising hard and learning everything i was supposed to learn in college and technology from 100 years ago still blows my mind
[10:33:37] <InPhase> sivert: Wait until you get to friction fire.  That stuff's tricky.
[10:33:52] *** Joins: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net)
[10:36:05] <sivert> well that's more like 50k year old technology isn't it?
[10:38:55] *** Joins: mnd999_ (~mark@2001:8b0:da3:76a2:b30d:a07c:7290:5ed6)
[10:38:59] <InPhase> Possibly up to 20 times older, and predating the border for where we declare our species originating.
[10:39:23] <InPhase> But at least about 50k.
[10:39:28] <vysn> sivert: how old are you if i may ask
[10:39:45] <edgar-rft> probably older than 50k
[10:39:53] <sivert> i am younger than 50k
[10:39:56] <sivert> 30
[10:40:21] <edgar-rft> then you're still a kid :-)
[10:40:30] <vysn> I would not call plans at 30 a midlife crisis :)
[10:40:58] <vysn> you are just making good life decisions to learn more
[10:41:06] <edgar-rft> if you have planned to die with 60, why not?
[10:41:40] <sivert> LOL
[10:42:29] *** TheArchitect is now known as DuckFace
[10:42:52] <edgar-rft> but I know what you are talking about, I was 35 or 36 when I suddenly tarted to relearn all those things that I never properly learned at school
[10:43:28] <InPhase> One should aim to do some of that every year.  :)
[10:43:51] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[10:44:07] <sivert> yeah it's largely driven by regret about wasted time and fear of getting old so i just use midlife crisis as shorthand
[10:44:12] <arahael> Pfft.  Relearning, what nonsense.  I'm having trouble learning the first time around! ;)
[10:44:43] *** Quits: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net) (Remote host closed the connection)
[10:44:46] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[10:44:56] <arahael> But seriously, it's astonishing the amount of knowledge out there.  I think it's very true that the more you learn, the more you know just how much you don't know.
[10:45:03] *** Joins: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net)
[10:45:07] *** Joins: independent56 (~independe@95.144.68.39)
[10:45:48] <sivert> well said
[10:45:51] <vysn> +1
[10:45:54] <edgar-rft> every answer you find raises minimum five new questions :-)
[10:46:10] *** Quits: Hax0r (~Hax0r@51.252.22.22) (Quit: Leaving)
[10:46:16] <InPhase> edgar-rft: First question, why is it 5?
[10:47:24] <vysn> most probably as a figure of speech
[10:47:25] <edgar-rft> InPhase: the answer is 42
[10:48:09] <InPhase> edgar-rft: Ah yes, 6 times 9.
[10:48:43] <edgar-rft> we think math in decimal because we have ten fingers, so I assumed I said five because I typed with the other hand
[10:49:07] <InPhase> I really wish humans had 8 fingers.
[10:49:13] <InPhase> My life would be easier.
[10:49:23] <arahael> InPhase: *technically*, we do. ;)
[10:49:24] <vysn> sivert: there is also the type of personality that determines how much we learn or want to learn new things
[10:49:25] <InPhase> I would accept 16 fingers.
[10:49:36] <InPhase> Although that would look funny.
[10:49:45] <edgar-rft> InPhase: 8 fingers is easy to solve :-)
[10:50:11] <InPhase> edgar-rft: Well I need EVERYBODY to have 8 fingers, which is a more challenging engineering project.
[10:50:38] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[10:52:01] <sivert> vysn: i have immense difficulty slowing down my brain so i try to focus it on interesting things to make the most of it
[10:52:52] <InPhase> sivert: Have you tried waking up in the morning?  That seems to work for slowing mine down a bit.
[10:53:15] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[10:53:18] <vysn> lol
[10:53:31] <edgar-rft> InPhase: you mean I should try to wake up now?
[10:53:48] <InPhase> edgar-rft, wake up, you're late for school.
[10:54:09] <sivert> InPhase: ha, yes but i'm hopelessly addicted to caffeine so i only get 20 minutes of peace before the first cup of coffee hits 
[10:54:17] <InPhase> On that note, I should probably get to bed.
[10:54:21] <InPhase> Goodnight.
[10:54:25] <sivert> me too
[10:54:31] <sivert> good night all
[10:54:33] <edgar-rft> bed is for wimps
[10:54:38] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[10:54:50] *** Joins: xeno__ (~xeno@user/xeno)
[10:55:39] <vysn> sivert: its tempting to want to learn everything but then you end up falling down the rabbit hole
[10:56:17] *** Quits: xeno (~xeno@user/xeno) (Ping timeout: 245 seconds)
[10:56:28] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[10:56:36] <vysn> I can't recall who said this but it goes like this
[10:56:51] <vysn> learn one thing about everything, and everything about one thing
[10:57:47] <vysn> focusing makes it easier to absorb, recall and apply knowledge
[10:57:56] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[10:58:01] *** Joins: Akronymus (~Akronymus@85.31.8.180)
[10:58:18] *** Quits: golden_ticket (uid205013@id-205013.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[10:58:35] *** Joins: Fairy97 (~Fairy@2001:464a:4992:0:fdd5:c841:87f9:237c)
[10:58:58] *** Quits: xiongxin8802 (~quassel@2409:8955:384c:1539:13ac:876e:41f7:7142) (Ping timeout: 252 seconds)
[10:59:03] *** Quits: DuckFace (~GodMode@user/h4x0r) (Remote host closed the connection)
[10:59:04] <edgar-rft> If I have ever learned one thing about everything then it's that you can't learn one thing about everything.
[10:59:15] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:f1cc:d5ea:e86d:e5c1)
[10:59:20] *** Joins: TheArchitect (~GodMode@user/h4x0r)
[11:00:09] <amigojapan> There are socialists and there are generalists, both have their space
[11:00:30] *** Joins: node1 (~node1@user/node1)
[11:00:54] <amigojapan> Their place*
[11:00:58] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[11:02:10] *** Quits: Fairy (~Fairy@2001:464a:4992:0:882e:cef8:320b:7103) (Ping timeout: 252 seconds)
[11:02:14] <vysn> https://www.youtube.com/watch?v=KUWn_TJTrnU
[11:02:16] <bayaz> Title: Growth Mindset vs. Fixed Mindset 
[11:04:16] *** Joins: Atque (~Atque@user/atque)
[11:08:10] <edgar-rft> Unicode needs socialist space and generalist space characters
[11:13:48] *** Quits: TheArchitect (~GodMode@user/h4x0r) (Ping timeout: 276 seconds)
[11:14:28] <node1> How to use Pydb to read python 3 syntax?
[11:14:54] *** Quits: mattypants (~quassel@66-90-146-141.dyn.grandenetworks.net) (Remote host closed the connection)
[11:15:42] *** Quits: pandakekok9 (~job@wikimedia-commons/pandakekok9) (Ping timeout: 250 seconds)
[11:16:08] *** Joins: mattypants (~quassel@66-90-146-141.dyn.grandenetworks.net)
[11:16:28] *** Joins: TheArchitect (~GodMode@user/h4x0r)
[11:17:23] *** Joins: user51 (~user51@176.228.90.248)
[11:19:24] *** Joins: pandakekok9 (~job@wikimedia-commons/pandakekok9)
[11:19:50] *** Quits: sivert (~sivert@69.140.208.98) (Ping timeout: 252 seconds)
[11:20:45] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[11:25:49] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 265 seconds)
[11:26:18] *** Joins: mrig (~mrig@user/mrig)
[11:26:53] *** Joins: xiongxin8802 (~quassel@2409:8955:384c:1539:13ac:876e:41f7:7142)
[11:27:07] *** Joins: roro (~roro@user/roro)
[11:27:19] *** Quits: roro (~roro@user/roro) (Client Quit)
[11:30:14] <amigojapan> edgar-rft: did I say socialists? I meant specialists
[11:30:53] <amigojapan> 3:30 PM <amigojapan> There are specialists and there are generalists, both have their place*
[11:30:59] *** Joins: jazzy2 (~jaziz@172.58.43.80)
[11:31:15] *** jazzy2 is now known as jazzy1
[11:32:52] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:33:25] *** Quits: anovick (~anovick@2a0d:6fc0:1bd8:7800:98e9:2c6f:1a52:52c0) (Ping timeout: 260 seconds)
[11:34:02] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 265 seconds)
[11:35:01] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[11:35:33] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:39:51] *** Joins: aradesh (~aradesh@user/aradesh)
[11:40:46] *** Quits: audio (~audio@2603-8081-1801-3bb5-cbd5-2f8b-b6de-5f12.res6.spectrum.com) (Ping timeout: 252 seconds)
[11:43:41] *** Joins: jackiee (~u0_a245@c-174-55-240-240.hsd1.pa.comcast.net)
[11:46:27] *** Joins: GreenAlpaca (~GreenAlpa@user/greenalpaca)
[11:46:41] *** Quits: jackiee (~u0_a245@c-174-55-240-240.hsd1.pa.comcast.net) (Quit: leaving)
[11:49:12] *** Quits: xiongxin8802 (~quassel@2409:8955:384c:1539:13ac:876e:41f7:7142) (Ping timeout: 245 seconds)
[11:50:29] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:51:01] *** Joins: xiongxin8802 (~quassel@223.104.63.183)
[11:54:33] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[11:55:21] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[11:57:41] *** Joins: absc (~absc@81.31.144.178)
[11:57:57] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi)
[11:58:48] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:00:11] *** Quits: soapsudsxx (~soapsudsx@209.221.40.154) (Remote host closed the connection)
[12:00:15] *** Quits: independent56 (~independe@95.144.68.39) (Ping timeout: 260 seconds)
[12:00:59] *** Joins: xavie (~xavie@176-139-252-198.abo.bbox.fr)
[12:01:47] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi)
[12:01:59] *** Joins: lunarkitty (uid501895@user/pyra)
[12:05:12] *** Joins: jaysicks (~jaysicks@94-21-246-55.pool.digikabel.hu)
[12:06:10] *** TheArchitect is now known as AllDucksMustDie
[12:06:49] *** xavie is now known as xcombelle
[12:07:35] *** Joins: sjmulder (~sjmulder@2a02-a443-33e5-1-ecb-947b-bb49-fcdf.fixed6.kpn.net)
[12:07:38] <DPA> Does !(x&(x-1)) work to tell me for any number except 0 if it's a power of 2?
[12:08:22] *** Joins: gnod (~gnod@user/gnod)
[12:08:25] <gnod> Good Morning
[12:09:16] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[12:11:07] <amigojapan> DPA: not sure, this is how people normally test for powers of 2 math.ceil(Log2(n))
[12:11:21] <gnod> I often work in docker containers on the command line and wish I could trigger the host to open a certain directory in a file browser.
[12:11:29] <gnod> Any ideas how to do this? For example I can trigger a web browser by outputting "https://someurl" so the user can click on it. Can I do something similar to easily open a file browser?
[12:11:40] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[12:12:05] <interop_madness> DPA, yes, see https://graphics.stanford.edu/~seander/bithacks.html#DetermineIfPowerOf2
[12:12:07] <bayaz> Title: Bit Twiddling Hacks 
[12:12:19] <pyzozord> DPA: It makes sense
[12:12:22] <gnod> Oh, it is this: file:///path
[12:12:38] <jinsun> DPA: should work (and for 0 too, because 0 is  a power of 2), prove it with Agda to be sure though
[12:12:49] <pyzozord> DPA: you are just checking here if only the leading bit is 1 and rest zeros, which is what power of twos are doing
[12:12:54] *** Quits: pandakekok9 (~job@wikimedia-commons/pandakekok9) (Ping timeout: 250 seconds)
[12:13:19] <DPA> Perfekt, Thanks!
[12:13:30] <pyzozord> oh, yeah, except that zero part, it makes sense that zero is power of 2
[12:13:38] <amigojapan> gnod: if you SSH into it you could use the -x flag of SSH and then call the file manager
[12:13:40] <user51> nice, didn't know that. thanks DPA 
[12:14:15] *** Joins: ixil (~ixil@mpp-cp1-natpool-2-433.ethz.ch)
[12:14:22] *** xeno__ is now known as xeno
[12:14:49] <gnod> amigojapan: Hmm.. maybe. But it would open the file manager of the container I guess? Turns out this works nicely: echo "Look in your temp dir: file:///tmp/"
[12:16:57] *** Joins: Rounin (~david@84.212.130.215)
[12:18:20] *** Quits: mattypants (~quassel@66-90-146-141.dyn.grandenetworks.net) (Ping timeout: 260 seconds)
[12:18:55] *** Joins: mattypants (~quassel@66-90-146-141.dyn.grandenetworks.net)
[12:20:09] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[12:20:19] *** Joins: node1 (~node1@user/node1)
[12:20:55] <node1> What this term means `edge cases` in terms of programming?
[12:21:33] <pyzozord> uncommon situations
[12:21:59] *** Quits: xiongxin8802 (~quassel@223.104.63.183) (Ping timeout: 252 seconds)
[12:22:11] <node1> Could you please elaborate.
[12:22:13] *** Joins: juliaEnv (~juliaEnv@ip-86-49-255-181.net.upcbroadband.cz)
[12:22:40] *** Joins: xiongxin8802 (~quassel@2409:8955:384c:1539:13ac:876e:41f7:7142)
[12:23:05] <gnod> node1: If you slap someone, you go to prison. Except when you slap yourself. That is an edge case.
[12:23:16] <pyzozord> lol :D
[12:23:21] <node1> lol
[12:23:41] <node1> I just roll out from my chair.
[12:24:07] <user51> gnod: gimme a high five
[12:24:18] <gnod> user51: o/
[12:24:36] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi)
[12:24:48] <node1> Logically speaking no nation in the world  has law to sent any person jail if he or she has slap somebody.
[12:25:19] <gnod> Depends on how hard they slap.
[12:25:49] <node1> common let's come to the point. I have read out your statement and it does not have any real time sense.
[12:26:07] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[12:26:15] <gnod> If the slap speed is close to the speed of light, this will happen: https://what-if.xkcd.com/1/
[12:26:16] <bayaz> Title: Relativistic Baseball 
[12:26:20] <gnod> But that is an edge case again.
[12:26:23] <pyzozord> so you know how there is a trash bin on windows desktop? Edge case is when someone tries to drag and drop the trash bin inside the trash bin
[12:26:46] *** Quits: ixil (~ixil@mpp-cp1-natpool-2-433.ethz.ch) (Remote host closed the connection)
[12:26:47] <node1> We are disucssing in terms of software engineering. If you have any example to support, then most welcome.
[12:27:15] <pyzozord> it's the same principle just kind of input to the function that happen rarely
[12:27:35] <gnod> node1: function slap($user1,$user2) { if ($user1==$user2) return; // handle the edge case of user hitting themselfes
[12:27:39] <pyzozord> or certain combination of function or data occures rarely
[12:27:43] <jinsun> i think of edge case ass something only at the ends of a range, the other unusual stuff is corner cases
[12:27:49] <pyzozord> s/function/function calls/
[12:28:15] <node1> I'm just trying to understand here the word  ` testing boundary conditions`
[12:28:17] <arahael> node1: Another term is the "happy path" - the path where most things will happen, where none of the edge cases are expected to be hit.
[12:28:30] <pyzozord> often edge cases are just everything you didn't think of :P
[12:28:46] <pyzozord> how true that is is arguable ;)
[12:29:50] *** Quits: isosterix (~isosterix@ip-95-222-34-30.hsi15.unitymediagroup.de) (Quit: Leaving)
[12:30:24] <node1> If you look into the https://en.wikipedia.org/wiki/Edge_case `they are testing boundary conditions of an algorithm, function or method` what does this line means?
[12:30:24] <bayaz> Title: Edge case - Wikipedia 
[12:30:25] <gnod> node1: One million real life code examples here: https://github.com/search?q=edge+case&type=commits
[12:31:15] <pyzozord> node1: if your algorithm takes 0..n random integers. Edge cases are 0 integers, n integers, n integers of 0, n integers of n etc
[12:31:20] *** Quits: absc (~absc@81.31.144.178) (Ping timeout: 252 seconds)
[12:31:58] <arahael> node1: An edge case could also be if the integers were not random.
[12:32:10] <pyzozord> node1: is using confusing language but it means "can you algorithm handle rare inputs"
[12:32:18] <node1> pyzozord, okay so in short maximum and minimum value ?
[12:32:31] <pyzozord> node1: no not only, literally just rare inputs
[12:32:43] <node1> okay thank you 
[12:32:48] <pyzozord> node1: if your algorithm is sorting an edge case may be already sorted values
[12:32:52] <mrig> Hello :)
[12:33:09] <pyzozord> Good morning mrig :)
[12:33:11] <deniska> node1: boundary condition is a condition when something in algorithm may "switch" from one way of doing things to another
[12:33:26] <node1> deniska, for example?
[12:33:58] *** Quits: jacktar (~whiteshad@gateway/tor-sasl/jacktar) (Remote host closed the connection)
[12:34:38] <deniska> node1: imagine making a division algorithm, among other inputs for testing, you may want to specifically test division of 0, division by 0, division by 1, negative numbers in one or both inputs etc
[12:34:39] <mrig> When in a brows menu on a UI, if you have a folder highlighted and press the 'quick' button, and that button pulls up a menu with three choices: SELECT, ALL DEL, CANCEL. Would you expect ALL DEL to erase only that folder, or the entire disk?
[12:34:41] *** Quits: gnod (~gnod@user/gnod) (Quit: leaving)
[12:34:59] <mrig> a file browser menu rather.
[12:35:24] <node1> okay i understand now.
[12:35:29] <mrig> I mean, they could have called it DEL FOLDER?
[12:35:39] * mrig scratches head a little bemused.
[12:35:44] <deniska> node1: for algorithms working with arrays of data you may want to check an empty array, a single element array, a very large array
[12:35:54] <pyzozord> mrig: i'd expect the folder to be deleted not entire disk
[12:36:00] <deniska> node1: for string handling library you may want to check really unusual strings, etc
[12:36:22] <mrig> pyzozord: Thats what I'm thinking too. Seems a little vague for something so important.
[12:36:30] *** Joins: tekmunkey (~Bubba@69.145.236.165)
[12:36:42] *** Joins: lalitmee_ (~lalitmee@180.94.32.190)
[12:37:00] *** Quits: AllDucksMustDie (~GodMode@user/h4x0r) (Ping timeout: 276 seconds)
[12:37:28] <node1> okay thank you.
[12:37:37] * node1 back to testing now
[12:37:53] <deniska> there's even a big list of naughty strings for testing string related operations :) https://github.com/minimaxir/big-list-of-naughty-strings/blob/master/blns.txt
[12:37:55] <bayaz> Title: big-list-of-naughty-strings/blns.txt at master Â· minimaxir/big-list-of-naughty-strings 
[12:38:04] <mrig> pyzozord: Well I dared to press it, it has erased the contents of the folder, but not the folder itself :)
[12:38:11] <mrig> crazy bad UI on this thing.
[12:38:37] <pyzozord> mrig: yes bad ui, I'd expect it to delete the folder too
[12:38:51] <pyzozord> mrig: that's how it works on all OSes. Good ui is unsuprising ui
[12:39:17] *** Quits: lalitmee__ (~lalitmee@180.94.32.185) (Ping timeout: 265 seconds)
[12:39:28] <pyzozord> intuitive things are things that are taking adventage of user's prelearned knoweledge
[12:39:38] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[12:39:41] <mrig> You don't know a bad one until you are using it.
[12:39:59] <mrig> This is embedded on a tiny lcd screen.
[12:40:07] *** Joins: absc (~absc@81.31.144.180)
[12:40:08] <pyzozord> and the good ones are never recognized as such, because they just stay out of the way :)
[12:40:21] <pyzozord> so onone never notices them
[12:40:38] *** Joins: TheArchitect (~GodMode@user/h4x0r)
[12:41:03] <mrig> Guess the programmer was not employed for their UI skills 'cause this is awful. Also when it is digital audio media for recording, if you loose data it can be thousands of euros worth of error.
[12:41:19] <pyzozord> Sometimes it take a lot of frontend effort to make something simple and intuitive and doing what you expect. What users see is something drasticly simple, but the frontend dev could have spend days on making it such
[12:41:21] <deniska> SerenityOS dev recently made a video on fixing the issue when rectangular highlight in a file manager goes between an icon and a label underneath, it doesn't get highlighted
[12:41:33] <deniska> In comments people pointed out that macOS has this issue :)
[12:41:57] <mrig> You could recover from the disk but that is not what your average user would want to do.
[12:42:09] <mrig> deniska: yikes that's some scary stuff really.
[12:43:14] <deniska> this not-even-too-much-of-a-bug is like bad kerning, after you learn about it, you'll notice it anywhere :)
[12:43:25] *** Joins: lalitmee (~lalitmee@180.94.32.16)
[12:43:25] <mrig> Imagine if the audio is a one off take of the audio of a wedding; Oh sorry folks we are going to have to do that ceremony part again, I lost the file.
[12:43:26] *** Quits: lalitmee_ (~lalitmee@180.94.32.190) (Ping timeout: 252 seconds)
[12:43:28] *** Parts: tekmunkey (~Bubba@69.145.236.165) ()
[12:43:53] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[12:44:01] *** Quits: inky (~inky_@46.36.119.19) (Ping timeout: 252 seconds)
[12:44:07] *** Quits: JavaBean (~javabean@user/javabean) (Ping timeout: 265 seconds)
[12:44:28] <mrig> anyway, rant over :)
[12:44:37] <pyzozord> I think I finished my work for today already :D
[12:45:05] *** Joins: JavaBean (~javabean@user/javabean)
[12:46:29] <mrig> heh
[12:46:35] * enyc meows
[12:46:43] <mrig> pyzozord: are you now tiding the codebase?
[12:47:00] <mrig> refactoring into some logical masterpiece?
[12:47:01] *** Quits: inky_ (~inky@46.36.119.19) (Ping timeout: 265 seconds)
[12:47:02] <arahael> Remember folks: Keep your backups.
[12:47:03] <enyc> mrig: also it can be easy to blame programmer but miss the environment/constraints they are under
[12:47:09] *** Joins: inky_ (~inky@188.115.241.80)
[12:47:28] <mrig> arahael: eye, at lest 3 staggered ones.
[12:47:45] * password backups arahael
[12:47:54] <arahael> To be fair, Apple's TimeMachine has done really well in making backups accessible to most users
[12:48:23] <mrig> enyc: sure yes this is very true, this device, though made by a very well respected brand within the domain does have a very plastic and cheap feel to it when you pick it up.
[12:49:27] *** Joins: gggp (~textual@114.245.107.137)
[12:49:40] <mrig> supposed to be in at least two physical locations too.
[12:51:44] * mrig hates Homophones
[12:52:13] <mrig> am genuinely not sure if my use of too there was correct.
[12:52:17] <mrig> :|
[12:52:33] <pyzozord> mrig: I think I'll work a bit on my terminal. I still have some input troubles. Also I get some visual glitch around the border of the window. Want this done so I can move back to leetcode/codility without guilty conciousness
[12:52:59] <mrig> not sure how I can expect a foreign programmer to code a text UI menu correctly in English if I can use the language myself.
[12:53:29] <mrig> pyzozord: ah, but how much of the st functionality will you try to keep?
[12:54:03] <mrig> pyzozord: cool stuff though, if you can do that were you are.
[12:54:12] <pyzozord> mrig: I'm almost done, my terminal is a less functional than st. I removed all mouse and copy/paste related functionality
[12:54:36] <mrig> ah, to much to get that in?
[12:55:23] <pyzozord> Yeah, too lazy, also tmux helps me out here, it has the visual selection mode and can integrate with xclip. It's just a bit more annoying to use than mouse, but not by much
[12:55:38] <mrig> I'd want to be able to access the registers personally, but would probably copy vims system and not use the 'way of the mouse'.
[12:55:58] <pyzozord> That's my excuse :D "Mose is evil anyway" :D
[12:56:06] <pyzozord> Err, mouse. Moses are ok
[12:56:10] <mrig> ah yes, I use tmux's selection from time to time.
[12:56:28] <mrig> mouseesses
[12:56:34] <mrig> mice ;)
[12:56:40] <pyzozord> oh right, right
[12:56:59] <pyzozord> Mooses are fine though
[12:57:07] <mrig> you would expect one to be a mie, but alas.
[12:57:32] *** Quits: xiongxin8802 (~quassel@2409:8955:384c:1539:13ac:876e:41f7:7142) (Ping timeout: 245 seconds)
[12:57:54] <mrig> Read quite an interesting article on 'like' yesterday.
[12:58:40] <pyzozord> Like yesterday? Like, everyone speaks like that now anyway. Like, what's the big deal. 
[12:58:50] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[12:59:07] *** Joins: inky (~inky_@188.115.241.80)
[12:59:08] <mrig> I'd be intrigued to know if there are similar grammatical morpheme, from single words, in other languages.
[12:59:26] <merijn> Most languages have filler words, yes
[12:59:34] <merijn> Or filler phrases, even
[12:59:50] <pyzozord> In polish we have Kurwa. It is very versitile
[12:59:52] <mrig> It would seem that the word has changed meaning over time anyhow, but that it has become a grammatical tool in this way is quite peculiar.
[13:00:12] <mrig> colloquial tongue I suppose.
[13:00:41] <user51> damn metaproblems
[13:00:49] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzzâ€¦)
[13:00:50] <pyzozord> Although I read somewhere recently that swear words are indication that the speaker is thinking at the moment on a lower, more limbic level.
[13:01:02] <user51> i thought about writing an irc client, then realized hey how much of that is also a text editor
[13:01:20] <user51> https://en.wikipedia.org/wiki/Inventor%27s_paradox
[13:01:21] <bayaz> Title: Inventor's paradox - Wikipedia 
[13:01:34] <mrig> more an expression of timing, rhythm and rhyme than of lexical sense.
[13:01:46] <mrig> cool yet unruly.
[13:01:48] <pyzozord> user51: try https://tools.suckless.org/ii/ + readline
[13:01:50] <bayaz> Title: tools | suckless.org software that sucks less 
[13:01:59] <mrig> user51: nice, are you writing emacs?
[13:02:38] <mrig> dont forget to put a named pipe underneath the sink!
[13:02:44] <mrig> :D
[13:03:16] <mrig> very cool thought though, how similar things are at the text treatment level.
[13:03:20] <mrig> thought.
[13:03:26] <pyzozord> file based irc client is very interesting
[13:03:52] *** Quits: kron (~weechat@user/qaph) (Ping timeout: 245 seconds)
[13:03:55] <mrig> ah file based, why is that? Do you mean a file interface?
[13:04:03] <user51> pyzozord: typical minimalist software. blaming the user for the frontend.
[13:04:07] <pyzozord> mrig: yeah. Take a look at the link
[13:04:17] <mrig> UNIX file, more so than binary .thing type file
[13:04:35] <pyzozord> user51: my idea was, take their logic, write your own itnerface with readline and curses
[13:04:53] *** Joins: plastico (~plastico@neomutt/plastico)
[13:04:56] <mrig> pyzozord: oh cool, using fifo, I learned about that just the other day.
[13:05:18] <mrig> nice way to separate modules. 
[13:05:32] <pyzozord> user51: fine, I'll make my own suckless software! With blackajk and hookers!
[13:06:05] <pyzozord> mrig: yeah I'm new to it too. Apparently /proc has all kinds of interesting goodies like that
[13:06:09] <user51> i just can't enjoy all the "minimalist" stuff anymore
[13:06:12] *** Quits: TheArchitect (~GodMode@user/h4x0r) (Remote host closed the connection)
[13:06:26] <mrig> minimalist is nice if it is elegant.
[13:06:44] <pyzozord> I take the minimalist and make it work for me. My version of suckless terminal has animated gifs
[13:06:52] <pyzozord> They'd hang me for that
[13:06:57] <mrig> Like a beautiful person who does not need makeup.
[13:07:02] <user51> nice, can i see it?
[13:07:03] *** Joins: TheArchitect (~GodMode@user/h4x0r)
[13:07:56] <pyzozord> user51: https://imgur.com/a/AHe0WgZ
[13:07:57] <bayaz> Title: imgur.com 
[13:08:21] <mrig> pipes should be really good for audio, I'm rather intrigued to understand why there are issues with the normal Linux kernel, and whether or not the same issues occur on all UNIX type OS.
[13:08:33] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:f1cc:d5ea:e86d:e5c1) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[13:08:48] <mrig> micro timing when using concurrency I suppose.
[13:09:14] <mrig> micro timing being pretty crucial for some audio processing.
[13:10:05] <mrig> pyzozord: you could show a gif of a mouse every time someone tries to cut and paste, that would be fun :D
[13:10:27] <mrig> Or a mouse trap!
[13:10:33] <user51> pyzozord: no gifs? :(
[13:10:50] <mrig> right I really should find my bug and get this current code out of the way.
[13:10:57] <pyzozord> mrig: lol, yeah I could. This one https://giphy.com/gifs/dog-home-mfw-EPwELUbhreEPC
[13:10:58] <bayaz> Title: Excuse Me Mouse GIF - Find & Share on GIPHY 
[13:11:07] <pyzozord> user51: the background is the gif
[13:12:12] <pyzozord> mrig: that would be pretty hilarious to show that gif in the background whenever user clicks with mouse
[13:13:32] <mrig> yes; That would be perfect!
[13:13:56] <password> make their mouse grow by 10% each time they click
[13:14:24] <mrig> Be a clever trick if you make the actual computer mouse grow :|
[13:14:37] <password> lol
[13:14:45] * mrig hides from such wizardry.
[13:17:15] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[13:17:21] <mrig> any how, did you resolve your SDL concerns as to CPU usage?
[13:17:28] *** Quits: jazzy1 (~jaziz@172.58.43.80) (Ping timeout: 265 seconds)
[13:18:48] <pyzozord> I realized I had the program set at 1000 fps. So decreasing it to 60 helped :D
[13:19:18] <mrig> ah, well yes that would do it!
[13:19:23] <pyzozord> At 60fps I had about 7% cpu usage. Decreasing it to 30 dropped it to 3-4% :)
[13:19:48] <mrig> you could do great play back in slow motion but other than that, pretty useless for a terminal to turn over so fast!
[13:19:54] <pyzozord> More can be done, but I'd need to drop sdl and just write shaders in opengl which I am not ready for
[13:20:39] <pyzozord> yes, however it's single thread so there is just a tiny bit of lag when pressing keys at 30fps comparing to original stterm. Although you don't notice it if you don't compare
[13:20:51] <mrig> Is it the gif animation that requires this rate?
[13:20:56] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[13:20:59] <pyzozord> so I'm thinking about splitting this into the background gif thread and the input thread
[13:21:21] <mrig> you could change the rate when an animation is present perhaps, have it even slower when it is not required. 
[13:21:29] <password> ok
[13:21:39] <password> is it just me or is it kinda hard to know what linters check for?
[13:21:47] <mrig> lol
[13:21:48] <pyzozord> mrig: gifs have just duration in miliseconds for each frame
[13:22:21] <mrig> I am chatting with a password, because their colour is the same and nic length is the same.
[13:22:39] <pyzozord> so they have variable framerate. I set my program at 30fps so if there are two if there are two frames at 60fps my program will skip one frame
[13:22:51] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[13:22:51] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[13:22:51] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[13:22:52] <password> :D
[13:22:55] <mrig> 30 is still very fast.
[13:23:05] <arahael> password: good linters should explain what they check for in their docs.
[13:23:07] <mrig> that is motion picture fast.
[13:23:10] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[13:23:22] *** Joins: Tazy (~Tazmainia@102.39.90.151)
[13:23:31] *** Quits: gggp (~textual@114.245.107.137) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[13:23:45] <password> arahael do you know of any free one that is decent?
[13:23:50] <pyzozord> mrig: yeah should be enough for utterly useless full screen background animation :D As long as it convays motion and doesn't eat a lot of cpu
[13:23:50] <mrig> password: there are often lots of different linters and they are configurable too.
[13:24:00] <password> especially for lua/php/c++
[13:24:11] <password> I'm trying to find a nice one , so far Sublimelinter seems great
[13:24:14] <arahael> password: erm...  hlint?  ah, for those languages, sorry don't know!
[13:24:25] <mrig> password: 5fps is probably more than enough.
[13:24:38] <mrig> for a terminal without any animation.
[13:24:48] <password> lol mrig
[13:24:50] *** Quits: juliaEnv (~juliaEnv@ip-86-49-255-181.net.upcbroadband.cz) (Ping timeout: 260 seconds)
[13:25:00] <mrig> would go with what feels spongy on the key press.
[13:25:16] <mrig> that's the main feedback that a user will get.
[13:25:31] <mrig> not point in burning fossil fuel for nothing.
[13:25:31] <pyzozord> password, pyzozord. Whatever. Starts with p ands with d. All good ;)
[13:25:48] <mrig> This is why I like devanagari.
[13:25:52] <pyzozord> oh, ends with "ord". That's even better :D
[13:25:57] <mrig> far more advanced as a script.
[13:26:10] <password> pyzozord our nicks are so similar
[13:26:11] *** Quits: Akronymus (~Akronymus@85.31.8.180) (Ping timeout: 256 seconds)
[13:27:03] <pyzozord> mrig: at 30 I feel like I get a little bit of that spunginess feeling. Although I'm not 100% sure that fps is the reason. 
[13:27:32] *** pyzozord is now known as pyzoword
[13:27:42] <pyzoword> lets make it more difficult for mrig
[13:27:50] <mrig> https://www.sciencealert.com/word-jumble-meme-first-last-letters-cambridge-typoglycaemia
[13:27:50] * pyzoword makes mr burns fingers gesture
[13:27:50] <bayaz> Title: Can Our Brains Really Read Jumbled Words as Long as The First And Last Letters Are Correct? 
[13:28:01] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 252 seconds)
[13:28:01] *** Quits: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[13:28:16] <mrig> me switches char set and chuckles with glee.
[13:29:16] * mrig magic is written with far greater scrips than those that are adequate for the common tongue.
[13:29:44] *** pyzoword is now known as pyzozordozaur
[13:29:47] <mrig> lol
[13:29:48] <pyzozordozaur> there that should do it
[13:30:38] <pyzozordozaur> That's my full name all along! I just never revealed it!
[13:31:04] <sjmulder> lol, strftime() %K for 'kitchensink': https://github.com/openbsd/src/blob/413a7a13698420b2b74c88a1af2f32f671aecf85/lib/libc/time/strftime.c#L234
[13:31:06] <bayaz> Title: src/strftime.c at 413a7a13698420b2b74c88a1af2f32f671aecf85 Â· openbsd/src 
[13:32:00] *** Joins: iridium__ (~iridium@182.70.231.150)
[13:33:36] <mrig> password: ah, are you using sublime text as your editor?
[13:33:43] <password> yeah
[13:33:47] <mrig> cool stuff.
[13:33:54] <password> I'm suggesting to my boss that we get a linter
[13:34:03] <password> he assigned 1 hour to get it running :D
[13:34:14] <password> he has no idea how things work
[13:34:16] <mrig> interesting mix of mouse and text use.
[13:34:23] <iridium__> does anybody have a suggestion for a library in JavaScript which provides pattern-matching capabilities a la Haskell or Erlang?
[13:34:27] <pyzozordozaur> ugh I hate it when I'm micromanaged like this
[13:34:48] <pyzozordozaur> I'd take two hours out of spite
[13:35:22] <sjmulder> ugh yes
[13:35:31] <sjmulder> I'm in sorta the opposite boat. there's nothing much for me to do
[13:35:59] <password> oh i took 4 hours on an 30min task last week
[13:36:01] <sjmulder> so I called manager, and she was like 'you can look at these things', but really that's just sending a few emails to people
[13:36:05] <password> actual 4 hours
[13:36:07] <mrig> Well I'm pleased that I finally understand my Makefile, and it now only re-compiles when and objects source has been altered.
[13:36:18] <password> but i am looking for a new place to work
[13:36:23] <password> just need to update my cv
[13:36:31] <password> man i hate writing a cv
[13:36:44] <password> it feels like my life is awatse if i summarise it on 2 pages
[13:37:59] <pyzozordozaur> password: you might have too much expectatins of yourself
[13:38:11] <password> eh
[13:38:13] <mrig> none of my most prised work achievements in life can go onto a CV, it is as if there are two dimensions, the way I actually function and the way that I am supposed to function. CV only equates to the latter.
[13:38:18] <pyzozordozaur> I'm just happy and proud of the two pages
[13:38:27] <password> or just chronic depression , so summarising my life is diffucult
[13:38:52] <mrig> password: CV is perhaps the cause of that depression?
[13:39:03] <pyzozordozaur> not everything has to be chronological. I got big half page tables of technologies and skills
[13:39:07] <mrig> bloody Romans, what have they ever done for us?
[13:39:22] <password> eh
[13:39:26] <password> no mrig
[13:39:35] <password> depression is nasty thing
[13:39:49] <password> things can make it worse but rarely casue em
[13:39:55] <mrig> Sure I know, I have first hand experience of it directly.
[13:40:02] *** Quits: iridium__ (~iridium@182.70.231.150) (Quit: leaving)
[13:40:24] <pyzozordozaur> Depression is pretty common, and is getting even more common
[13:40:26] <password> you knwo what scares me about this pandemic?
[13:40:32] <mrig> Both that and its upside, mania.
[13:40:40] <mrig> ..have freed myself from it with knowledge now though.
[13:40:49] *** Joins: iridium__ (~iridium__@182.70.231.150)
[13:40:53] <password> lots of kids going into depression and often times the parents aren't equipped to handle or notice it
[13:40:58] <mrig> but I can and do empathise.
[13:41:15] <mrig> yes head in the sand society will do that.
[13:41:26] <mrig> ostrich philosophy.
[13:41:45] <mrig> look for ever finer grains of sand, in this hole.
[13:42:12] <user51> why not put it in a lazarus pit
[13:42:12] <pyzozordozaur> I believe it's more of the ever present social perssure to be better, having more subscribes, more zeros in bank, more this, better that
[13:42:19] <mrig> knowledge is awesome.
[13:42:43] <mrig> works to, as an antidote to collective lunacy.
[13:42:46] <pyzozordozaur> it's the optimizer society we live in, everything has to be optimized to the bleeding edge. No redudancy allowed
[13:43:37] <pyzozordozaur> it's weird though because most people slack so much at work for example
[13:43:43] <pyzozordozaur> I don't understand this contradiction
[13:44:22] <mrig> we don't optimise at all though really, everything is dispersed and dissipated.
[13:44:41] <mrig> can you make those seven lines all parallel to each other?
[13:44:48] <mrig> Common you are an expert!
[13:46:26] <password> eh they slack because their overworked D:
[13:46:31] <pyzozordozaur> yes what's really happening is that we are optimizing for optics not for the actual thing
[13:46:44] <mrig> If things were well optimised you would not have such a great disparity in wealth.
[13:46:55] <pyzozordozaur> and people fall victim into beliving the optics reflect the real thing
[13:46:59] <password> its because work harder is seen as a valid thing to say
[13:47:19] <password> people will perform well and really well if you equip them with the right tools
[13:47:33] <password> the job of a manager should to find out what tools they need
[13:47:40] <mrig> people are not there to perform for you though.
[13:47:52] <mrig> mutual respect is key, and is severely lacking.
[13:48:06] <password> JUP
[13:48:18] <mrig> given the choice, humane or insect colony. I know where I am headed.
[13:48:19] <pyzozordozaur> yeah, although that can vary from place to place I guess
[13:48:29] <mrig> ant go to war and enslave others too.
[13:48:53] * mrig tries not to step on the ants, but would rather keep away from them.
[13:49:09] *** pyzozordozaur is now known as pyzozord
[13:49:25] <pyzozord> I think I'll actually go play some video games, and won't be productive
[13:49:33] <password> ok
[13:49:37] <password> what games you playin?
[13:49:39] <pyzozord> Wanted to play some old resident evil games
[13:49:49] <password> ooh
[13:49:59] <password> i basically just play one game these days
[13:50:02] <mrig> work is the new religion in laic France, it is quite amusing.
[13:50:49] <mrig> it is literally mindlessly worshiped, This creates quite a paradox when environmental issues come up.
[13:51:14] <mrig> because it is the polar opposite of an environmental ethic.
[13:51:54] <mrig> but just keep doing things and don't think about it until a tornado hits, is the path that is being taken.
[13:51:55] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[13:52:54] <mrig> oh resident evil, that is that third person isometric zombie adventure game, right?
[13:53:12] <pyzozord> yes! :)
[13:53:26] <pyzozord> it's not isometric, but it has fixed backgrounds
[13:53:34] <mrig> I wonder if those are rendered using 3D at all, perhaps just to generate textures?
[13:53:49] <mrig> is the perspective from a 3D engine?
[13:54:00] <pyzozord> the old ones where prerenred backgrounds yeah
[13:54:21] <pyzozord> they just had an extra mask layer so that the character can go behind some objects
[13:54:29] <mrig> prerendered, right that makes sense, to keep the processing requirements down.
[13:54:36] <mrig> nice
[13:54:37] <pyzozord> the characters were rendered in 3d on top of the prerentered texture background
[13:54:52] <mrig> yes, for lighting and stuff this makes a lot of sense.
[13:55:01] <mrig> to get some realism
[13:55:16] <pyzozord> That's a really cool kind of game, for sure would love to make one of those
[13:55:23] <mrig> was thinking about getting blender out for generating some 2D images.
[13:55:34] <mrig> yes that would be cool.
[13:55:39] *** Joins: hexfive (~eric@50.35.83.177)
[13:55:42] <mrig> I like adventure games that are not to fast.
[13:55:51] <mrig> love pretty graphics though.
[13:56:16] <mrig> would be a way to make sprite sheets too.
[13:56:23] <mrig> blender I mean.
[13:56:35] <pyzozord> Belnder is very cool
[13:57:05] <mrig> Oh I need to keep working on my C and go chops, will be able to integrate things eventually.
[13:57:22] <mrig> I used to use 3Dsmax, learned it pretty fast.
[13:57:31] <pyzozord> yep, same
[13:57:47] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[13:57:47] <mrig> But had a cracked version and no replacement for it when I switched to Linux.
[13:58:00] <pyzozord> I tried out many of them I remember I really liked the interface that Maya had for some reason
[13:58:05] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Read error: Connection reset by peer)
[13:58:09] <mrig> did enjoy it but was working for architects, and that was aweful.
[13:59:00] <mrig> maya seems really cool but I've not used it though.
[13:59:00] *** Quits: Matt|home (~matt@adsl-74-233-58-121.mia.bellsouth.net) (Quit: Leaving)
[13:59:01] <pyzozord> But blender is by far the coolest for me now
[13:59:11] <pyzozord> especially that it has rich integration with python
[13:59:17] <pyzozord> whatever is not there I can just write myself
[13:59:24] <mrig> They had me do things like 'create a picture of this landscape with the building it it so that it seems really unobtrusive' so that they could get planning permission, I hated it.
[14:00:13] <mrig> yes, I need to try blender, I've a lot of photographic experience including lighting, so it should be quite simple to develop some workable images.
[14:00:19] *** Quits: hexfive (~eric@50.35.83.177) (Client Quit)
[14:00:27] <mrig> well thats on the todo list anyhow.
[14:01:05] <mrig> blender being open source is also a massive plus.
[14:01:14] <mrig> written in C I gather.
[14:01:49] <mrig> am kind of intrigued by the UI as I have read that it is quite different from most other UI.
[14:02:10] <mrig> So an inventive use of GTK, or some such-
[14:03:03] <GeDaMo> I think Blender is older than GTK
[14:03:05] <pyzozord> Yeah I'm facinated by it's ui too
[14:03:06] <arahael> mrig: blender is a mix of c and python, iirc.
[14:04:01] <arahael> mrig: i think blender does its own UI as well.
[14:04:16] <mrig> ah, right, I'd assumed some lib.
[14:04:43] <mrig> An impressive effort anyhow.
[14:05:36] *** Quits: iridium__ (~iridium__@182.70.231.150) (Quit: leaving)
[14:08:58] *** Joins: iridium__ (~iridium@182.70.231.150)
[14:09:52] <arahael> mrig: A custom UI isnt' /that/ difficult, Lagrange also has a custom UI, custom UI's are just very unpopular today for several reasons. (Some good, and some are just trendy reasons).
[14:10:02] <mrig> heh, 3Dsmax used to blue screen when it ran out of space if you set the rending up poorly, could be after 4 hours of the machine crunching that it would do it.
[14:10:30] <arahael> One good reason is that adding accessibility support to a custom UI is not as simple as it should be. Another reason is that customers shouldn't have to pay for the additional work that goes into a custom UI for once-off applications.
[14:10:55] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[14:11:09] <mrig> oh lagrange is a gemini browser.
[14:11:46] <mrig> sure yes, it is a complicated area, nice to get something really good in the open source world
[14:12:01] *** Quits: xff0x (~xff0x@2001:1a81:527e:a000:d157:28e0:13dd:1400) (Ping timeout: 252 seconds)
[14:12:15] <mrig> it is one of the things that turns people off free software sometimes.
[14:12:49] <arahael> mrig: To be fair, most of the good UI's are all opensource.
[14:12:57] *** Joins: xff0x (~xff0x@port-92-195-70-241.dynamic.as20676.net)
[14:13:07] <arahael> What turns people off free software is it's so.. inconsistent - and we rarely, if ever, hire a good UI designer.
[14:13:25] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[14:13:35] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[14:13:37] <mrig> Oh I'm thinking for specific tasks, image editing, sound editing that sort of thing; I suppose most of those are custom though.
[14:13:47] <mrig> in the proprietary world I mean.
[14:14:25] <mrig> right yes, UI does tend to be under estimated in importance by a lot of people.
[14:14:46] *** Joins: exvicesindaco_ (~exvicio@host-79-46-77-254.retail.telecomitalia.it)
[14:14:59] <arahael> The proprietary world tends to use conventional UI's more often than not, though they do put a lot of effort in theming them, and often hire a UI person as well.
[14:15:09] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[14:15:37] *** Joins: gggp (~textual@60.10.23.169)
[14:15:50] <mrig> Oh sticking to conventions sure, but widgets for specific domain relevent tasks are spot one.
[14:15:57] <Amadiro> I think we got like 20 people in our UI/UX team
[14:16:08] <mrig> rather than shoe horned it to something that sort of works.
[14:16:20] <iridium__> things are changing though. user-interface in the Linux world is bad but still better than before. the problem is that the big desktop environments follow the same development philosophy as their closed-source counterparts and become bloated and difficult to manage in the process.
[14:16:28] *** Quits: password (~password@user/password2) (Quit: Connection closed)
[14:16:31] <arahael> Amadiro: UI/UX teams are _awesome_.  Worth every dollar, really.  It's kind of sad, you can have a shitty, crappy implementation, but get the UI right, and it's all OK.
[14:16:40] <mrig> yes it is amazing really what is available.
[14:17:02] *** Quits: gggp (~textual@60.10.23.169) (Client Quit)
[14:17:13] <mrig> oh if the behind the scenes does not work with it, that is pretty rough too.
[14:17:20] <pyzozord> arahael: people will be any shit if it's wrapped in a pretty box
[14:17:24] <mrig> complicated buisness.
[14:17:26] *** Joins: password (~password@user/password2)
[14:17:33] <mrig> buy?
[14:17:36] <Amadiro> I feel like in the XP days, linux and mac both had better UI than windows, because if you used something like gnome everything was very consistent, but on windows everyone did their own weird crappily themed UI
[14:17:43] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[14:17:44] <Amadiro> but now windows is probably ahead
[14:17:55] <iridium__> GNOME now celebrates adding a new item or some minor change eye candy in their interface when these things should really be scriptable out of the box.
[14:18:11] <pyzozord> mrig: yeah s/be/buy/
[14:18:13] *** Joins: anovick (~anovick@IGLD-83-130-127-193.inter.net.il)
[14:18:16] <arahael> Amadiro: Depends.  Windows is behind in terms of consistent support for high DPI.
[14:18:35] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Ping timeout: 252 seconds)
[14:18:36] <mrig> High DPI must be a bit of a nightmare in the UI world.
[14:18:43] *** exvicesindaco_ is now known as exvicesindaco
[14:18:48] <arahael> High DPI is easy, really.
[14:18:49] <Amadiro> linux and mac aren't perfect on HDPI either, but mac is probably best
[14:18:54] <arahael> Just not on windows. :D
[14:18:55] *** Joins: gggp (~textual@123.113.176.46)
[14:19:06] <mrig> if the interface is good, then it ought to be easy I suppose.
[14:19:16] <Amadiro> HDPI is not that easy if you have multiple screens connected with different DPIs and all that
[14:19:18] <arahael> Yeah, there's a few different approaches, and with a cross platform UI there are a few gotchas and pains, yeah.
[14:19:26] <arahael> Amadiro: MacOS solves that nicely. :)
[14:19:39] <pyzozord> arahael: I'm not sure I agree about contemporary windows ui consistancy, https://ntdotdev.wordpress.com/2021/02/06/state-of-the-windows-how-many-layers-of-ui-inconsistencies-are-in-windows-10/
[14:19:40] <bayaz> Title: State of the Windows: How many layers of UI inconsistencies are in Windows 10? 
[14:19:46] <iridium__> when in reality, customising using a GUI is as painful as customising using a text-file.
[14:20:00] *** Joins: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net)
[14:20:11] <iridium__> GNOME should stop treating it's users as children.
[14:20:14] <arahael> pyzozord: You think windows is very consistent?
[14:20:24] <Amadiro> arahael, hoe does it solve it
[14:20:35] <Amadiro> *how
[14:20:38] <arahael> Amadiro: You can't have a window on two different screens.
[14:20:47] *** Quits: iridium__ (~iridium@182.70.231.150) (Quit: leaving)
[14:20:52] <pyzozord> arahael: no, imo it's pretty inconsistant
[14:21:07] <Amadiro> arahael, you can, it just gets forced onto one of the screens once you drop it
[14:21:12] <arahael> pyzozord: We're in agreement, then. You might've been responding to something else. :)
[14:21:14] <pyzozord> arahael: I thought you think it's consistant :D
[14:21:25] <arahael> Amadiro: Ah, well, that's... An edge case. ;)
[14:22:00] <Amadiro> yeah. I'm fine with this solution, though I prefer being able to overlap, especially when using an ultrawide screen that shows up in macos as two separate screens but has no bezel
[14:22:10] <pyzozord> I've decided I will not play games. I'll just read about games. Namely some D&D books.
[14:22:29] <Amadiro> I used to use my ultrawide monitor that way, because window management sucked so much on macos, but now I switched to using a tiling WM on macos and use the ultrawide monitor as a single large one
[14:22:32] <Amadiro> it's bearable
[14:22:35] <arahael> Amadiro: Ultrawide screens are still poorly supported on macs. :( (At least, in M1)
[14:22:46] <mrig> I am avoiding going into a game at the moment, as I know what a time sink hole it will be.
[14:22:49] <mrig> tempting though.
[14:22:56] <arahael> mrig: I'm already there. :(  Playing nethack again!
[14:23:12] <Stryyker> That article is a little misleading calling them layers
[14:23:14] <mrig> Yes this is a MUD :)
[14:23:18] <pyzozord> nethack has that amazing quality that it's fully turn based and extremly fast to get in and out of
[14:23:55] <pyzozord> you can (theoretically) stop at any time very easily. It usually sucks me in for just few more turns though :D
[14:24:00] <Amadiro> arahael, I have a 2018 one I think, with an x86.
[14:24:09] <pyzozord> But that's because the game is just good, not because of some mechanical reasons
[14:24:15] <Amadiro> it works fine using amethyst as tiling window-manager(-addon)
[14:24:23] <Amadiro> it's just a little sluggish in tiling the windows
[14:24:28] *** Quits: gggp (~textual@123.113.176.46) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[14:24:38] *** Quits: JavaBean (~javabean@user/javabean) (Ping timeout: 252 seconds)
[14:25:02] <pyzozord> Reading D&D books is almost like playing a MUD, but it has that quality of stopping any time you like, like in nethack :D
[14:25:14] *** Joins: JavaBean (~javabean@user/javabean)
[14:30:10] *** Quits: WhizzWr (Whizz@s-o-m-e.h-o-s-t.name) (Ping timeout: 240 seconds)
[14:31:44] *** Joins: LucaTM (~LucaTM@user/lucatm)
[14:32:39] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[14:33:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[14:34:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:34:32] *** Joins: jokoon (~eio@2a01:e0a:542:e160:6140:7cd3:2d72:c0aa)
[14:34:35] *** Joins: dev0 (~dev0@user/deepspace-link)
[14:35:18] *** Joins: Matt|home (~matt@adsl-74-233-58-121.mia.bellsouth.net)
[14:35:42] <user51> DND eh
[14:35:49] <user51> i was thinking of replaying baldurs gate 1
[14:36:33] <user51> it would've been fun to see how you can combine things, but you also lose a lot of satisfaction from beating a silly ai
[14:36:43] *** Joins: peteyboy1 (~peteyboy1@95.169.235.10)
[14:36:55] <mrig> it is the not being able to leave a game once you start that is a little scary with MUDs.
[14:37:07] <mrig> I can see that becoming very time consuming.
[14:37:32] <mrig> crazy though when you think that some people earn millions by doing just that.
[14:37:50] * mrig scratches head and ponders that a moment, really crazy situation.
[14:38:09] <mrig> Is playing games a waste of time if this is the case?
[14:38:56] *** Quits: Jigsy (~Jigsy@user/jigsy) (Ping timeout: 252 seconds)
[14:38:56] *** Quits: hexingb (~hexingb@101.236.65.144) (Ping timeout: 252 seconds)
[14:38:57] *** Quits: JavaBean (~javabean@user/javabean) (Read error: Connection reset by peer)
[14:39:06] *** Joins: hexingb (~hexingb@2409:8900:2720:4eea:24bb:748:8f14:4ef8)
[14:39:21] *** Joins: Jigsy (~Jigsy@user/jigsy)
[14:39:21] <mrig> The rich gamer might laugh at the coder and their ephemeral code, and ask who the time water is :D
[14:39:30] <mrig> waster
[14:40:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[14:40:25] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:40:35] *** Joins: dunkeln (~dunkeln@94.128.205.199)
[14:40:36] *** Quits: dunkeln (~dunkeln@94.128.205.199) (Changing host)
[14:40:36] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[14:40:48] *** Joins: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca)
[14:42:11] *** Quits: Jigsy (~Jigsy@user/jigsy) (Killed (NickServ (GHOST command used by Jigsy`)))
[14:42:18] *** Joins: Jigsy` (~Jigsy@user/jigsy)
[14:43:28] *** Quits: dev0 (~dev0@user/deepspace-link) ()
[14:43:33] <pyzozord> user51: baldurs gate is amazing! That is the game that got me into DND
[14:44:10] *** Jigsy` is now known as Jigsy
[14:44:16] <pyzozord> mrig: I don't think MUDs are where anyone makes any serious money
[14:44:47] <pyzozord> it's very much a genre of games made by fans for fans of that kind of game
[14:44:55] <mrig> no I dont mean in MUDs, I mean in online games generally.
[14:45:27] <pyzozord> There are few commercial muds though, I never got into them, but I should try they keep being most popular
[14:45:34] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[14:45:50] <pyzozord> although I think they adopted that predatory pricing scheme of praying on "whales"
[14:46:13] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:47:01] <mrig> oh gaming with a few friends on line should not be costly.
[14:47:26] <mrig> It's like going outside to play in the woods or the fields as a kid.
[14:47:32] <arahael> "whales"?  I generally dislike predatory pricing.
[14:48:49] <pyzozord> "whales" is a term coined by publishers, and it refers to the top top 10% players that pay more than the other 90% combined or something like that
[14:49:20] <pyzozord> is what those addictive mobile games thrive on
[14:51:45] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[14:52:05] *** Joins: TastyWiener95 (~uhhh3@user/tastywiener95)
[14:52:22] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:52:48] <user51> pyzozord: i can't call it great
[14:52:57] <user51> ncie soundtrack, combat is.. well, i havent explored it too deeply
[14:53:17] <user51> it seems interesting programmatically, but the ai ran straight inside my AOE magic
[14:53:34] <user51> concurrent failure :D
[14:53:41] <pyzozord> It's AD&D second edition. It makes more sense when you are familiar with Terms like THAC0
[14:55:00] <pyzozord> yeah ai is not great, pathing is also notorious. Generally it's not an amazing programming feat, but it's servicable
[14:57:19] <user51> magic missile is pretty damn good
[14:57:25] <user51> that's most of what i remember :D
[14:58:01] <pyzozord> also sleep is very useful spell
[14:58:39] <pyzozord> it's almost like instadeath if they fall asllep you can just walk up to them and murder them while they sleep
[14:59:14] <user51> sliding scale of unfairness
[14:59:23] <user51> ai throws 20 mooks at you > sleep is fine
[14:59:41] <user51> supposedly strong group of 4 > sleep op
[14:59:44] <arahael> Does anyone happen to know the IRC chatroom for linux mint?
[15:00:02] *** Quits: hexingb (~hexingb@2409:8900:2720:4eea:24bb:748:8f14:4ef8) (Ping timeout: 245 seconds)
[15:00:30] *** Joins: hexingb (~hexingb@2409:8900:2721:ea37:3cb9:880c:c2a4:4a4f)
[15:01:51] <GeDaMo> The /topic for ##linuxmint here says "Official Linux Mint Support @ ircs://irc.spotchat.org/#linuxmint-help"
[15:02:17] <user51> pyzozord: some of the spells look like they work well programmatically.. er, compositionally?
[15:02:21] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[15:02:30] <arahael> Ah, sweet.  Thanks GeDaMo.
[15:02:38] <user51> project image, chain contingency, maybe recursively? :D
[15:03:41] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:03:46] *** Quits: Jigsy (~Jigsy@user/jigsy) (Killed (NickServ (GHOST command used by Jigsy`)))
[15:03:52] *** Joins: Jigsy` (~Jigsy@user/jigsy)
[15:05:04] <pyzozord> user51: yeah magic was always fun in D&D. Very weak at first, very powerful in late game. Remeber that Baldurs Gate 1 is more less early adveture. You start at level 1 and more or less finish at level 10. I'd think about playing the whole saga. Baldurs gate 2 is 10-20 level. And the final addon Baldurs Gate 2 throne of ball you ascend into godhood, beyond level 20
[15:06:45] *** Joins: Jigsy (~Jigsy@user/jigsy)
[15:06:45] *** Quits: Jigsy` (~Jigsy@user/jigsy) (Killed (NickServ (GHOST command used by Jigsy)))
[15:06:58] <pyzozord> I am probably getting very offtopic. I wish there was a nice dnd channel
[15:07:05] *** Quits: diophantoz (~dz@user/diophantoz) (Quit: leaving)
[15:08:05] *** Quits: inky (~inky_@188.115.241.80) (Ping timeout: 260 seconds)
[15:08:07] *** Quits: inky_ (~inky@188.115.241.80) (Ping timeout: 252 seconds)
[15:08:11] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[15:09:13] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[15:09:21] *** Joins: inky_ (~inky@46.36.119.19)
[15:09:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:10:36] <GeDaMo> There's #D&D and #rpg
[15:10:53] <pyzozord> it's not "throne of ball", it's "throne of baal"...
[15:11:02] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Remote host closed the connection)
[15:11:28] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[15:11:28] <pyzozord> I know, they are pretty low population. But I should pay visit and see if they are active channels. It would be very cool
[15:12:17] <user51> you could stay on topic if you were talking about writing a baldur's gate bot :D
[15:12:34] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[15:12:35] <edgar-rft> pyzozord: I think Drag-n-Drop is not too much offtopic here
[15:13:35] *** Quits: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[15:13:58] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[15:14:43] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[15:15:40] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:19:07] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 252 seconds)
[15:20:37] <mrig> I think D'n'D is very similar to programming; The process of writing and adventure is pretty much the same as for writing the states of a program.
[15:20:50] <mrig> edgar-rft: lol
[15:22:53] *** Joins: inky (~inky_@46.36.119.19)
[15:26:31] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[15:27:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:27:48] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[15:30:17] *** Quits: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca) (Ping timeout: 256 seconds)
[15:31:08] *** Joins: pavonia (~user@user/siracusa)
[15:31:28] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Remote host closed the connection)
[15:31:54] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[15:34:30] *** Joins: jmft2__ (~JMFT@82.3.54.26)
[15:35:06] *** Joins: lalitmee_ (~lalitmee@180.94.33.15)
[15:35:15] *** Joins: dunkeln (~dunkeln@94.128.205.199)
[15:35:15] *** Quits: dunkeln (~dunkeln@94.128.205.199) (Changing host)
[15:35:15] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[15:35:58] <user51> formal grammar for dnd scenario geneation
[15:36:02] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Remote host closed the connection)
[15:36:12] <user51> parser combinator to have a more concurrent world
[15:36:23] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[15:37:10] *** Quits: jmft2 (~JMFT@82.3.54.26) (Ping timeout: 240 seconds)
[15:37:38] *** Quits: lalitmee (~lalitmee@180.94.32.16) (Ping timeout: 265 seconds)
[15:39:17] <pyzozord> I was thinking that it would be cool to make a parser for Magic cards
[15:39:45] <pyzozord> Mtg is turing-complete, so it would make sense to make a parser for it
[15:48:03] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[15:48:05] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[15:48:58] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[15:49:04] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[15:49:47] <user51> pyzozord: find good combos by using compiler optimizations
[15:50:11] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Client Quit)
[15:50:31] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[15:51:59] *** Joins: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net)
[15:53:29] <merijn> I have started a project like that a few times
[15:53:32] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Remote host closed the connection)
[15:53:35] <merijn> But magic is *complex*
[15:53:45] <merijn> It is incredibly hard and *a lot* of work to correctly model it
[15:53:56] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[15:54:05] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[15:54:15] <arahael> merijn: How do you know when you've correctly modelled it? What standards do you refer to? ;)
[15:54:26] <mrig> ah some sort of formal model of magic might be required, in order that it be modeled with any realism.
[15:54:38] * mrig consults the elfs guild.
[15:54:40] * arahael mouths "realism".
[15:54:45] <merijn> arahael: The several hundred page comprehensive rules
[15:55:00] *** Quits: digilink (~digilink@user/digilink) (Quit: WeeChat 3.2)
[15:55:03] <mrig> or is that the elves guild?
[15:55:09] <arahael> merijn: For DND?
[15:55:19] <mrig> elvin even?
[15:55:27] <merijn> arahael: The *actual* official comprehensive rules are very thorough and mechanical. So you *can* probably implement them correctly, but they're messy as shit
[15:55:28] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Remote host closed the connection)
[15:55:35] <arahael> Wow.
[15:55:39] <arahael> I had no idea.
[15:55:44] <mrig> shucks, good old norm, where would we be without im?
[15:55:45] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[15:55:52] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[15:56:06] *** Joins: ixil (~ixil@mpp-cp1-natpool-2-426.ethz.ch)
[15:56:24] <merijn> arahael: If you wanna find out if someone has a good understanding of magic rules, just ask them the following question: "Hey, can you explain the layering rules to me?"
[15:56:49] <merijn> If they don't run away screaming or look horrified, their understanding of the rules is not to be trusted
[15:58:28] <merijn> arahael: Go to rule 614 "Replacement effects" and admire the horror: https://media.wizards.com/images/magic/tcg/resources/rules/MagicCompRules_21031101.pdf
[15:58:29] <bayaz> Type: application/pdf Size: 1.2 MB 
[15:58:29] <arahael> Ha.
[15:59:14] <user51> merijn: what data structure did you use?
[16:00:09] <merijn> Custom ADTs
[16:01:02] *** Joins: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca)
[16:01:04] <pyzozord> arahael: there already exists an open source implementation of the rules and most cards https://github.com/magefree/mage
[16:01:05] <bayaz> Title: GitHub - magefree/mage: Magic Another Game Engine 
[16:01:06] <arahael> merijn: I wonder how translations are done - to other languages.
[16:01:08] *** Joins: digilink (~digilink@user/digilink)
[16:01:15] <merijn> painfully
[16:01:30] *** Joins: motherr (~motherr@user/motherr)
[16:01:58] <piou> merijn: that's harsh, I don't think even level 1 judges are expected to know all intricacies of the layering rules by heart
[16:02:02] <arahael> merijn: So I wouldn't expect an Auslan translation any time soon!  It seems the dialogue itself has to be fairly specific.
[16:02:03] <user51> merijn: abstract data types?
[16:02:17] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 265 seconds)
[16:02:18] <arahael> user51: He uses custom ones.
[16:03:28] <pyzozord> here is implementation of Fireball https://github.com/magefree/mage/blob/master/Mage.Sets/src/mage/cards/f/Fireball.java
[16:03:29] <bayaz> Title: mage/Fireball.java at master Â· magefree/mage 
[16:03:32] <arahael> user51: Not all languages support them.
[16:03:36] *** TheArchitect is now known as AllDucksMustDie
[16:03:59] <arahael> merijn: I wonder how it compares to nethack. :)
[16:03:59] <merijn> user51: Algebraic data types. I.e. like Rust's enums
[16:05:03] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[16:05:07] <arahael> But *not* like C's enums.
[16:07:09] *** Quits: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca) (Remote host closed the connection)
[16:07:23] <user51> i love me some enums
[16:07:29] *** Joins: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca)
[16:08:55] <merijn> user51: Rust's enums are really just the Algebraic Data Types from Haskell/F#/Ocaml/SML, but with the name changed because mainstream programmers think algebraic is a scary word :p
[16:10:15] <pyzozord> is custom adt a different name for structs?
[16:11:07] <GeDaMo> No, it's more like a union with a tag to specify which of the union elements is valid
[16:13:45] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[16:13:46] <user51> merijn: algebra is nice
[16:13:54] <user51> i've been meaning to study the math for a while
[16:14:23] <merijn> GeDaMo: Well, to be fair, it's *both*
[16:14:43] <GeDaMo> Well, yes, OK :P
[16:15:13] *** Joins: dunkeln (~dunkeln@94.128.205.199)
[16:15:14] *** Quits: dunkeln (~dunkeln@94.128.205.199) (Changing host)
[16:15:14] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[16:15:14] <user51> so they're like c's union?
[16:17:05] <merijn> user51: The stereotypical example would be "data Maybe a = Nothing | Just a" which is a "generic" (if you're used to Java/C#) type "Maybe" with two constructors: "Nothing" (which has no arguments) or "Just" which has one argument of the generic type
[16:17:15] *** Joins: gggp (~textual@60.10.23.169)
[16:17:16] <merijn> user51: So you'd have "Just True :: Maybe Bool"
[16:17:44] <pyzozord> so just types that can be one of set of n concrete types
[16:17:50] <pyzozord> so unions
[16:18:15] <merijn> pyzozord: Yes, but with a union you cannot check which it is
[16:18:20] <pyzozord> except in c you need some kind of tag indicating what type is it at the moment
[16:18:21] <merijn> (C unions, anyway)
[16:18:24] <merijn> Right
[16:18:25] <GeDaMo> "Nothing" and "Just" in this example are constructors
[16:19:15] <merijn> pyzozord: The fact that it integrates with "switch" style pattern matching is a gamechanger, though
[16:19:24] <GeDaMo> You can also see this like inheritance: Nothing is-a Maybe, Just is-a Maybe
[16:19:34] <merijn> tbh, I'm *still* confused why more imperative languages haven't implemented ADTs
[16:19:51] <user51>  well, i'm still confusede what's so good about all this type stuf
[16:19:51] <merijn> You could easily extend something like Java or C# with ADTs with almost zero syntactical change
[16:20:16] <GeDaMo> Similar to a switch
[16:20:21] <merijn> user51: What makes it good is that in a case (think switch) statement variables are only in scope if they *actually* exist
[16:20:50] <merijn> user51: In something like C++/Java/C# you'd have a class with one member which might be null and you'd need to remember to check if it is
[16:21:06] <pyzozord> merijn: I'm not sure what dou you mean by "switch style petter matching" and why would that be important enough to note?
[16:21:17] *** Quits: gggp (~textual@60.10.23.169) (Client Quit)
[16:21:29] <merijn> user51: if you have "foo :: Maybe Int" (i.e. foo has type Maybe Int), then you can write "case foo of Nothing -> stuff; Just i -> stuffWith i"
[16:21:40] <user51> merijn: maybe those type languages have an advantage in some situation, while other languages have advantages in others
[16:21:50] <merijn> user51: Note that it is impossible to accidentally use "i" in the Nothing branch, because there is no i
[16:23:22] *** Quits: death916 (AdiIRC@user/death916) (Ping timeout: 252 seconds)
[16:23:43] *** Joins: death916 (~death916@c-67-182-183-147.hsd1.ca.comcast.net)
[16:23:47] *** Quits: hexingb (~hexingb@2409:8900:2721:ea37:3cb9:880c:c2a4:4a4f) (Ping timeout: 245 seconds)
[16:24:00] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[16:25:22] <merijn> pyzozord: Because the interaction of "branching on which constructor you have, and only having the fields relevant for that constructor" in scope is one of the core ways you do controlflow
[16:26:30] <merijn> pyzozord: You're datatypes are so short to define it becomes easy/convenient to just define custom throw away datatypes for everything
[16:26:33] *** Quits: death916 (~death916@c-67-182-183-147.hsd1.ca.comcast.net) (Changing host)
[16:26:33] *** Joins: death916 (~death916@user/death916)
[16:26:58] <merijn> pyzozord: Stuff like: https://github.com/merijn/Belewitte/blob/master/benchmark-analysis/src/Query.hs#L49-L59
[16:26:59] <bayaz> Title: Belewitte/Query.hs at master Â· merijn/Belewitte 
[16:27:21] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.2)
[16:27:37] *** Joins: vysn (~vysn@user/vysn)
[16:27:37] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[16:28:06] <merijn> Why use a boolean and try to remember what "true" and "false" meant if you can use a named enum instead.
[16:28:57] <merijn> The Converter type helps me have a simple consistent interface between filtering/unfiltering mappings (that I can easily expand with new options later). You get cases like: https://github.com/merijn/Belewitte/blob/master/benchmark-analysis/src/Query.hs#L210-L213
[16:28:58] <bayaz> Title: Belewitte/Query.hs at master Â· merijn/Belewitte 
[16:29:10] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 260 seconds)
[16:29:27] <merijn> If I ever add a new constructor to Converter, the compiler will give warnings for every "case of" in the code to tell me I'm missing a case for the new constructor
[16:29:59] <merijn> Which means that expanding types like this 1 year from now becomes super easy. No thinking, just follow the compile errors for missing cases and figure out what to do in each position
[16:30:21] *** Quits: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca) (Ping timeout: 256 seconds)
[16:30:36] *** Joins: Crescendo (~Crescendo@user/crescendo)
[16:31:25] *** Joins: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca)
[16:32:19] *** Joins: Twipply (~Twipply@user/twipply)
[16:34:05] <pyzozord> oh so this really doesn't have anything to do with the switch statement per se?
[16:34:58] <pyzozord> sorry I'm just not sure I understand well
[16:38:17] *** Quits: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca) (Remote host closed the connection)
[16:38:35] *** Joins: hexingb (~hexingb@103.37.140.21)
[16:38:36] *** Joins: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca)
[16:39:57] <pyzozord> merijn: I think you are speaking with too haskelly minset for me to follow along. I think I'm not really familiar with functional programming enough to follow on the abstraction level you are on
[16:41:57] *** Quits: frost (~frost@59.71.240.119) (Quit: Connection closed)
[16:42:14] *** Joins: JavaBean (~javabean@user/javabean)
[16:42:23] *** Joins: pulse (~pulse@user/pulse)
[16:43:47] <merijn> pyzozord: "case of" is, effectively, the switch of the Haskell/F# world
[16:43:59] *** Joins: TheArchitect (~GodMode@user/h4x0r)
[16:44:14] <merijn> pyzozord: Except, instead of only switching on the value of an integer you can switch on "which constructor was used to create a value"
[16:45:25] <pyzozord> merijn: oh ok so in C world it would be something like switch(myunion.type) ?
[16:45:36] <merijn> pyzozord: So the "case convert of" is basically doing "if this was constructed with Simple (which has a set of argument you can then use), do X. If this was constructed using Filter (which has different fields/values), do Y"
[16:45:39] *** Quits: AllDucksMustDie (~GodMode@user/h4x0r) (Remote host closed the connection)
[16:46:07] <merijn> pyzozord: Yes, with the difference that you *cannot* accidentally access the wrong fields of the union (because those are out of scope)
[16:46:17] *** Joins: JavaBean- (~javabean@user/javabean)
[16:46:24] <pyzozord> got it thanks :)
[16:46:25] *** Joins: braxas (sid508886@id-508886.lymington.irccloud.com)
[16:46:29] <braxas> hi
[16:46:44] <braxas> In general I try and avoid creating invalid objects, I dunno if there is some named principle for this
[16:46:50] <braxas> or if I am just quirky
[16:47:07] *** Quits: JavaBean (~javabean@user/javabean) (Ping timeout: 252 seconds)
[16:47:10] <merijn> pyzozord: THe othe thing is that defining unions of structs, etc. is more verbose in C. Note how the first link defines like 3 datatypes in a few lines for use in just that file/API
[16:47:25] <merijn> braxas: "correct-by-construction"
[16:47:43] <merijn> braxas: https://wiki.c2.com/?CorrectByConstruction
[16:48:49] <merijn> braxas: Or the related adage from FP "make illegal states unrepresentable"
[16:49:01] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[16:50:29] <braxas> thanks merijn - second one gets more relevant hits on google
[16:51:59] <pyzozord> merijn: what would be an example of mathematical model for a software solution without writing any code?
[16:52:22] <merijn> ask me later, I forgot to turn on dinner and it needs to stew for 5 hours :p
[16:52:37] <pyzozord> oh damn, that sounds like good dinner
[16:53:40] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 260 seconds)
[16:53:49] *** Quits: JavaBean- (~javabean@user/javabean) (Read error: Connection reset by peer)
[16:55:01] *** Joins: mickey2 (~user@user/mickey)
[16:57:28] *** Joins: JavaBean (~javabean@user/javabean)
[16:57:34] <[itchyjunk]> just eat it raw, garunteed to stew in your stomach for 5 hours
[16:57:39] *** Quits: mickey (~user@user/mickey) (Ping timeout: 276 seconds)
[16:57:40] *** mickey2 is now known as mickey
[16:58:45] <pyzozord> [itchyjunk]: I think I'll bring my own food to your dinner party :P
[16:58:48] *** TheArchitect is now known as AllDucksMustDie
[16:59:53] <[itchyjunk]> raw vegans do it like that
[17:01:09] *** Quits: lalitmee_ (~lalitmee@180.94.33.15) (Remote host closed the connection)
[17:01:34] *** Joins: lalitmee_ (~lalitmee@180.94.33.15)
[17:01:41] <user51> gordon ramsay is typing
[17:02:50] <pyzozord> I wonder if there is a gordon ramsay of programming
[17:02:58] <arahael> merijn: you *still* havent started cooking!?
[17:03:00] <pyzozord> Jon Blow kind of fits the bill
[17:03:09] <piou> who?
[17:03:32] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:03:37] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 252 seconds)
[17:04:04] <user51> linus torvalds? :P
[17:04:21] *** Joins: gitgooood (~gitgood@host-78-145-137-41.as13285.net)
[17:04:36] <pyzozord> hmm yeah that makes sense
[17:04:45] *** Quits: GreenAlpaca (~GreenAlpa@user/greenalpaca) (Ping timeout: 260 seconds)
[17:04:48] <pyzozord> that was easy
[17:05:10] <pyzozord> there are a lot mode gordon ramsays in programming field than in cooking
[17:05:31] <pulse> is there a barbara streissand in programming
[17:06:13] <pyzozord> don't even know who that is :P
[17:06:40] <pyzozord> https://en.wikipedia.org/wiki/Streisand_effect ?
[17:06:41] <bayaz> Title: Streisand effect - Wikipedia 
[17:06:59] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[17:07:12] <pulse> you somehow missed this song when it was played on every radio in existence? :p https://www.youtube.com/watch?v=wWhtcU4-xAM&
[17:07:13] <bayaz> Title: Duck Sauce - Barbra Streisand (Official Video) 
[17:08:01] <pyzozord> oh yeah I heard that song
[17:08:14] *** Joins: jamea (~jamea@187.185.190.209)
[17:08:18] <pyzozord> wow so 2010s
[17:09:06] <pulse> hah\
[17:10:40] *** Quits: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net) (Remote host closed the connection)
[17:10:59] *** Joins: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net)
[17:11:34] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:f1cc:d5ea:e86d:e5c1)
[17:12:17] *** Quits: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca) (Ping timeout: 256 seconds)
[17:13:59] *** Joins: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca)
[17:15:57] *** Quits: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca) (Remote host closed the connection)
[17:16:16] *** Joins: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca)
[17:17:38] *** Joins: zwr (~zwr@2804:d45:b966:fb00:7f47:4b3e:500a:5f92)
[17:18:18] *** Joins: ychaouche (~ychaouche@user/ychaouche)
[17:18:23] <ychaouche> hey programmers
[17:18:55] <ychaouche> I am looking for a particular programming language I'm not sure of its name, I think it was called daho, it was developed in china, anyone can identify this programming language ? 
[17:19:07] *** Joins: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net)
[17:19:12] <ychaouche> searching for daho on google didn't give good results
[17:20:41] *** Quits: jacks2 (~bc8165b6@217.29.117.252) (Quit: http://www.okay.uz/ (EOF))
[17:21:22] <arahael> ychaouche: what was special about it?
[17:21:33] <piou> ychaouche: any other information you can give? Characteristics, syntax example, anything?
[17:21:54] <arahael> ychaouche: if not the same language, maybe one of us will know a similar language, perhaps?  or do you have an example of the syntax?
[17:22:33] <ychaouche> If only I could retrieve my old bookmarks, I don't even know where they are
[17:22:38] *** Joins: Akronymus (~Akronymus@85.31.8.180)
[17:23:09] <arahael> perhaps even why you want to know it :)
[17:23:53] <piou> ychaouche: have you tried going through this list and see if anything catches your eye? https://en.wikipedia.org/wiki/List_of_programming_languages
[17:23:54] <bayaz> Title: List of programming languages - Wikipedia 
[17:24:45] <piou> Just having "a possible name that apparently isn't the correct name" isn't much to help you :/
[17:25:36] <mrig> oh I think that I'm moments away from solving my current bug. [starts getting hopes up]
[17:26:42] *** Joins: Pickchea (~private@user/pickchea)
[17:26:52] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[17:26:58] *** Joins: xiongxin8802 (~xiongxin@113.116.34.210)
[17:27:12] *** Quits: JavaBean (~javabean@user/javabean) (Read error: Connection reset by peer)
[17:28:00] *** Joins: pandakekok9 (~job@wikimedia-commons/pandakekok9)
[17:29:40] *** Quits: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca) (Remote host closed the connection)
[17:29:41] <wedr> I took home a new monitor from work office, just before they shut down. A 27-inch IPS 75hz monitor, sitting within 2 inches away from the edge of the table, now looks like a 4K monitor in my eyes.
[17:29:58] * [itchyjunk] calls the po po
[17:30:57] *** Joins: vpw (~vpw@122.172.227.30)
[17:33:44] *** Joins: brickfat (~brickfat@user/brickfat)
[17:33:45] *** Joins: JavaBean (~javabean@user/javabean)
[17:34:16] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:34:43] <ychaouche> piou: I did
[17:34:55] <ychaouche> it seems that page isn't exhaustive
[17:35:20] <piou> There are lots of special purpose programming languages so it's not much of a surprise
[17:35:41] *** Joins: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca)
[17:36:51] <arahael> ychaouche: a better question is how would you know if the language is the same?
[17:37:41] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:f1cc:d5ea:e86d:e5c1) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[17:37:48] <ychaouche> arahael: the same as ? 
[17:38:17] <arahael> ychaouche: how would you know if the language is the same you are looking for?
[17:38:30] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[17:38:48] <ychaouche> by the name I guess, if the name changed then looking at the history of the language I could find the old name
[17:39:10] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 260 seconds)
[17:39:22] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[17:40:01] *** Joins: gggp (~textual@60.10.23.169)
[17:40:19] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:41:03] <arahael> ychaouche: only by the name?
[17:41:49] *** Dalek is now known as Valware
[17:42:03] <ychaouche> yes, I don't remember why I bookmakred it, I think it had something new at the time but can't remember what.
[17:42:06] <piou> ychaouche: why do you want to find that language if you don't know anything about it at all?
[17:42:21] *** Joins: mobidrop_ (~mobidrop@217-62-121-57.cable.dynamic.v4.ziggo.nl)
[17:42:22] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Read error: Connection reset by peer)
[17:42:25] <ychaouche> piou: curiousity
[17:42:36] <piou> ychaouche: surely you must remember something, a field of application, a characteristic, something?
[17:42:47] *** Quits: gggp (~textual@60.10.23.169) (Client Quit)
[17:42:49] <arahael> ychaouche: do you know who used it or when it was invented?
[17:42:50] <piou> Where does your curiosity come from?
[17:43:43] <ychaouche> arahael: I think it was mid-to-last 2000s
[17:43:50] <ychaouche> and it was chinese
[17:43:56] <sjmulder> ...oh no not another Mural board where we have to talk about our goals and way of working
[17:44:06] *** Quits: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca) (Remote host closed the connection)
[17:45:25] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[17:45:46] <jinsun> by chinese you mean created by someone in China, or it has chinese keywords
[17:46:36] <arahael> ychaouche: hmm, so very recent.
[17:46:40] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:49:13] * [itchyjunk] sobs in 1's and 0's
[17:49:32] <arahael> ychaouche: anything like https://spectrum.ieee.org/classical-chinese
[17:49:33] <bayaz> Title: World's First Classical Chinese Programming Language 
[17:49:39] * Akronymus laughs then cries in `1,0,?`
[17:50:02] <Akronymus> Literally EVERYTHING is nullable.
[17:50:09] <Akronymus> Bool? Nullable
[17:50:13] <Akronymus> Int, nullable
[17:50:21] <Akronymus> float, nullable.
[17:50:29] <Akronymus> I hate ABL
[17:50:39] <ychaouche> I found Dao in my bookmarks, going to check that out
[17:50:53] <arahael> Akronymus: can nullables be nullables?
[17:51:09] <ychaouche> what ? https://en.wikipedia.org/wiki/Dao_(programming_language)
[17:51:16] <Akronymus> The concept of nullable doesn't exist.
[17:51:28] <Akronymus> As everything can be assigned the "unknown" value
[17:51:33] <Akronymus> Which is basically a NULL
[17:52:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[17:52:42] <arahael> Akronymus: sounds like everything is boxed to a reference type, and that you can clear the reference.
[17:52:43] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:52:52] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[17:53:15] <ychaouche> ok found it http://daoscript.org/
[17:53:16] <bayaz> Title: Dao Language for Scripting and Computing 
[17:53:27] <Akronymus> arahael kinda. Is it really boxed if the box is the only way to access anything?
[17:53:36] <Akronymus> As in, you can't unbox it.
[17:54:43] *** Joins: Lynn (~Lyn@user/law)
[17:55:32] *** Quits: mobidrop_ (~mobidrop@217-62-121-57.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[17:57:20] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[17:58:02] *** Quits: Lyn (~Lyn@user/law) (Ping timeout: 252 seconds)
[17:58:06] <arahael> Akronymus: i'd say it is.
[17:58:40] <Akronymus> Everything being boxed is !!FUN!!
[17:58:44] <arahael> ychaouche: hmof. demo page is a 404 error.
[17:58:50] <Akronymus> Especially if you literally can't unbox it
[17:59:18] <ychaouche> arahael: it seems the language is dead, copyright is 2009-2016.
[18:00:13] <ychaouche> "What does hmof stand for ? Your abbreviation search returned 0 meanings"
[18:00:27] *** Quits: gitgooood (~gitgood@host-78-145-137-41.as13285.net) (Ping timeout: 245 seconds)
[18:00:50] *** Joins: moose` (~moose@user/moose)
[18:01:01] <ychaouche> oh, searched in the wrong dictionary. Got the meaning on urbandic :)
[18:01:12] <arahael> Akronymus: it does seem peculiar, yeah.
[18:01:32] *** Quits: moose (~moose@user/moose) (Read error: Connection reset by peer)
[18:02:10] <arahael> ychaouche: oh, wow.  that was a weirdly applicable typo!!
[18:02:16] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[18:02:20] *** Joins: golden_ticket (uid205013@id-205013.helmsley.irccloud.com)
[18:02:23] <arahael> ychaouche: i meant to say "hmpf"
[18:02:45] <arahael> (the sound you make when you sigh)
[18:03:05] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[18:03:18] <ychaouche> written sounds differ very much from country to country
[18:03:30] <ychaouche> I prefer to use :sigh:
[18:04:11] <arahael> yeah, it's probably a fairly local slang in my case.
[18:04:36] *** Quits: Tazy (~Tazmainia@102.39.90.151) (Quit: Leaving)
[18:04:39] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:04:57] *** AllDucksMustDie is now known as Chevron
[18:05:01] <arahael> typing :'s is inconvenient at the moment - using an ipad onscreen keyboard.
[18:05:28] <arahael> g'night!
[18:05:29] *** Chevron is now known as TheArchitect
[18:07:17] *** Joins: pulse_ (~pulse@user/pulse)
[18:07:33] <pulse_> when the internet fairy cuts your connection
[18:07:57] *** Quits: pulse (~pulse@user/pulse) (Killed (NickServ (GHOST command used by pulse_)))
[18:08:03] *** pulse_ is now known as pulse
[18:08:49] <Akronymus> arahael and if you concatenate a string out of values, if ANY is "unknown" it turns the whole result to "unknown"
[18:09:01] <Akronymus> Which is fun to debug.
[18:09:45] *** Quits: Akronymus (~Akronymus@85.31.8.180) (Quit: Client closed)
[18:09:58] *** Joins: Akronymus (~Akronymus@85.31.8.180)
[18:10:04] <Akronymus> Network, why?
[18:10:47] *** Joins: r-ush (~r-ush@52.187.184.81)
[18:12:53] *** Quits: inky (~inky_@46.36.119.19) (Ping timeout: 252 seconds)
[18:14:36] <merijn> arahael: No, I got distracted by work so I'm late on cooking :\
[18:14:51] <merijn> arahael: Also, found out I don't have an oven dish deep enough. We'll see how well it goes
[18:15:36] <arahael> merijn: i find that a dutch oven tends to be a versatile replacement for many things, it's deep and all that.
[18:16:13] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:16:47] <jamea> Javascript: how to activate webcam and read scan a codebar? and put the result on a inputtext or div?
[18:16:55] <merijn> So many English terms with Dutch with no basis in reality...
[18:17:03] <merijn> Except "going Dutch", that's 100% true facts
[18:17:09] <pulse> flying dutchman
[18:17:46] <merijn> My generation is more chill, but my parents generation will split the bill to the *cent* based on what you ordered
[18:18:03] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Quit: sudo Shanzem -lol -updoot -karma -gold >/dev/lies)
[18:18:25] *** Quits: inky_ (~inky@46.36.119.19) (Ping timeout: 252 seconds)
[18:18:32] <Akronymus> merijn why wouldn't you split to the cent?
[18:18:42] <merijn> too much work
[18:18:53] * Akronymus shrugs
[18:19:01] <merijn> If everyone ordered in the same ballpark, just split equally N ways
[18:19:11] <arahael> merijn: hmm, i guess you probably call it differently, we have a rather... crude slang for "dutch oven", and a kitchen tool. totally different.  my dutch oven is basically a pyrex pot with a pyrex lid.
[18:19:17] <merijn> If someone ordered expensive shit, make them pay separetely :p
[18:19:20] <arahael> merijn: but they are usually ceramic.
[18:19:51] <deniska> jamea: I've seen various asmjs/wasm experiments on porting barcode reading libs to the web
[18:19:54] <Akronymus> Over here, at restaurants prices are pretty much always tens of cents.
[18:20:05] <deniska> jamea: they all seemed a bit clunky and frankly not so good, but that was couple years ago
[18:20:22] *** Joins: inky_ (~inky@178.78.157.68)
[18:20:38] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[18:20:52] <merijn> arahael: rÃ¶mertopf ?
[18:21:20] <deniska> merijn: here we have all receipts available electronically, I've seen "split the bill" feature in banking apps
[18:21:37] *** Quits: dld (~davidlowr@2601:197:600:1210:3d0a:b99:963f:cf07) (Ping timeout: 252 seconds)
[18:21:40] <merijn> deniska: Right, but that's not working out whether A ordered 10cents more than B, no?
[18:22:08] <merijn> deniska: I'm not talking about "total / number of people" with an accuracy of cents
[18:22:08] <deniska> merijn: I mean, the end result is a really precise bill splitting
[18:22:22] *** Joins: dld (~davidlowr@2601:197:600:1210:a0ae:7339:f00b:dfe6)
[18:22:24] <merijn> I meant: work out exactly how much each person ordered to the cent and pay that
[18:22:40] <deniska> merijn: you literally check which items who ordered in the app, and it generates invoices or whatever :)
[18:22:42] <merijn> So person A pays 23.80 and person B pays 21.10
[18:22:54] <merijn> because A had a slightly more expensive drink
[18:22:55] *** Quits: anovick (~anovick@IGLD-83-130-127-193.inter.net.il) (Ping timeout: 260 seconds)
[18:23:08] <deniska> merijn: the end result is cent accuracy, yes
[18:23:19] <arahael> merijn: perhaps.  this is a dutch oven: https://www.cutleryandmore.com/staub/round-dutch-oven-p111889  except mine is pyrex and i use it to bake bread...
[18:23:21] <bayaz> Title: Staub Dutch Oven 4-quart Cast Iron Cocotte Basil Green | Cutlery and More 
[18:23:38] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-5673bf-42.dhcp.inet.fi) (Quit: Leaving)
[18:24:06] <merijn> Ah, that doesn't even have a name here, besides "stewpot"
[18:24:29] <merijn> That's just enamel covered cast iron, yeah?
[18:24:41] <deniska> merijn: kinda similar to this, but with fewer OCR, and more government involvement https://www.iguides.ru/upload/resize_cache/main/c8b/800_800_1/c8b12475b00b5ba2b161bb2e19d66f83.jpg
[18:24:42] <bayaz> Type: image/jpeg Size: 158.4 kB 
[18:24:52] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[18:25:15] *** Quits: dsrt^ (~dsrt@68.101.54.227) (Ping timeout: 260 seconds)
[18:25:16] *** Joins: pleroma_ (~pleroma@182.70.231.150)
[18:25:17] <arahael> merijn: apparently in the netherlands it is called a "braadpan".
[18:25:43] <merijn> That's just "roast pan" :p
[18:25:58] <arahael> merijn: and yeah, thats pretty mich what they are :)
[18:26:02] <merijn> But yeah, usually enamel cast iron
[18:26:39] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[18:26:42] <arahael> yep.  i like mine being pyrex but i have to be careful not to shock it by heating it too fast.
[18:27:07] <merijn> enamel is great, though
[18:27:27] <merijn> It's like, all the advantages of cast iron, without all the hassle of seasoning it and not being able to use the dishwasher
[18:28:50] *** Joins: inky (~inky_@178.78.157.68)
[18:29:51] <arahael> yep, every household should have at least one.
[18:30:16] <arahael> anyway.  it's now technically a new day... i should sleep.
[18:30:24] <arahael> i have to wake up today!  g'night!
[18:30:57] *** Joins: constxd (~brad@TA9C7.WPA.Dal.Ca)
[18:31:12] <constxd> hi fam
[18:31:15] <constxd> i need help
[18:31:36] <pulse> have you tried turning it off and on again
[18:31:42] <constxd> yes
[18:31:44] <Akronymus> Kinda hard to help if you don't describe your problem
[18:32:12] <constxd> so my programming language has this notion of iterable objects right
[18:32:21] <Akronymus> Collections?
[18:32:31] <constxd> collections and other things
[18:32:55] <constxd> for x in y { ... } under the hood will call y.__next__() until it returns nil
[18:32:58] *** Joins: tinhatcat (~manjaro-g@2620:103:a000:2201:8e4c:af6a:e11c:11a1)
[18:33:15] <Akronymus> Seems reasonable.
[18:33:22] <constxd> but it has become clear that i need a different stopping condition
[18:33:37] <Akronymus> Because infinite list generators?
[18:33:54] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:33:55] <constxd> no, for example consider this
[18:34:26] <constxd> let v = []; (..5).map(v.push).list();
[18:34:41] *** Joins: rtypo (~alex@user/rtypo)
[18:34:48] <constxd> you'd expect v to end up as [0, 1, 2, 3, 4]
[18:34:57] <constxd> but instead it ends up as [0]
[18:35:20] <Akronymus> [0] or v.length() = 0?
[18:35:26] <constxd> [0]
[18:35:53] <constxd> because v.push(0) returns nil, so it pushes 0 and then stops
[18:35:54] <Akronymus> What does (..5) actually produce?
[18:35:57] <Akronymus> Oh.
[18:36:05] <constxd> (..5) is a Range
[18:36:11] <Akronymus> Then you are checking the wrong thing.
[18:36:25] <constxd> (..5).list() would be [0, 1, 2, 3, 4]
[18:36:32] <Akronymus> map should always run through the whole collection.
[18:36:51] <constxd> it does but .map() is lazy and returns another generator
[18:36:54] <Akronymus> It shouldn't even check what happens inside it.
[18:36:56] <constxd> so like
[18:36:57] <Akronymus> Ooooh.
[18:37:02] <bjs> constxd: your example doesn't make sense,  because presumably you say v.push is what returns nil
[18:37:10] <bjs> constxd: not Range's __next__
[18:37:38] <bjs> although you are possibly making a mistake by having a nil rather than a proper option type
[18:37:39] <constxd> bjs: yes but i used .map(), so v.push is applied to the Range __next__'s return value
[18:37:41] <Akronymus> Yeah, map's generator shouldn't return what the inner function evaluates to either
[18:37:46] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:592f:1d19:f5a3:fe53) (Read error: Connection reset by peer)
[18:37:49] <bjs> constxd: yes... so
[18:37:59] <Akronymus> Then map is implemented in the wrong way.
[18:38:01] <bjs> constxd: if the __next__ value is nil, you don't apply the function and the map iterator ends.
[18:38:35] <Akronymus> Map should not EVER return what happens inside it.
[18:38:38] <constxd> right but if Range __next__ is not nil, and then becomes nil after i apply the mapping function, then there is a problem
[18:39:01] <constxd> how do you suppose i should implement map then?
[18:39:06] <Akronymus> Oh, is __next__ retrieving the value of the next element rather than the next element?
[18:39:07] <bjs> constxd: yes,  this is because your "nil" can't tell the difference between "there is no value" and "a value of nil"
[18:39:47] <constxd> right that's the problem 
[18:39:58] <constxd> i dont know how i should solve it though
[18:40:03] <constxd> python uses exceptions iirc
[18:40:06] <constxd> StopIteration
[18:40:11] <Akronymus> Eeewww
[18:40:12] <constxd> that's kinda cringe
[18:40:16] <merijn> Use something like Optional :p
[18:40:27] <bjs> constxd: well you could have a proper option type,  you can have exceptions,  you could have a proper datatype used during iteration
[18:40:32] <bjs> constxd: cringe?
[18:40:52] <Akronymus> __next__ should return a item that has a .value
[18:40:58] *** Parts: ychaouche (~ychaouche@user/ychaouche) (Konversation terminated!)
[18:41:03] <Akronymus> The item itself only becomes nil if there is no next item
[18:41:05] <constxd> just cringe in the sense that it would require a decent amount of work to implement in my runtime
[18:41:15] <Akronymus> and map should access it through .value or soemthing similar
[18:41:17] <bjs> constxd: well, do you have datatypes?  objects/enums/structs
[18:41:18] <constxd> i was hoping for something simple that makes it work :D
[18:41:34] <Akronymus> Basically wrap the value of __next__
[18:41:42] <constxd> of course i have datatypes but the language is dynamically typed
[18:41:51] <constxd> wrapping makes it hard to chain things
[18:42:02] <bjs> constxd: so __next__ could return a datatype that contained the next value, or returns nil
[18:42:07] <bjs> constxd: so Value(nil) != nil
[18:42:09] <Akronymus> Altough, that'd necessitate using .value in the map, so .map(v.push(x.value))
[18:42:21] <Akronymus> bjs yeah, what I said.
[18:42:35] <constxd> that's frankly horrifying
[18:42:37] *** Quits: ixil (~ixil@mpp-cp1-natpool-2-426.ethz.ch) (Remote host closed the connection)
[18:42:42] <bjs> constxd: why is it horrifying? 
[18:42:53] <bjs> constxd: the Value object wouldn't leak into the actual program, unless you directly called __next__
[18:43:01] <Akronymus> constxd do you know monads?
[18:43:10] <Akronymus> I think those would genuinly help you in this case.
[18:43:12] <constxd> if i call .map on a [Int], the function i pass should accept Int not Value Int
[18:43:18] <Akronymus> Specifically bind and such.
[18:43:21] <bjs> constxd: yes why would it accept Value int?
[18:43:39] <bjs> constxd: the iterator would use the Value internally but it wouldn't leak
[18:43:42] <constxd> bjs: xs.map(x -> v.push(x.value)) -- that's what was just suggested
[18:43:51] <bjs> constxd: that's a terrible suggestion, that's not what I'd do
[18:44:25] <Akronymus> Thats what a naive implementation of mine would look like
[18:44:28] <constxd> either way this line of reasoning inevitably leads to weird FP shit
[18:44:32] <bjs> constxd: no
[18:44:43] <Akronymus> > weird FP shit
[18:44:50] *** Quits: jokoon (~eio@2a01:e0a:542:e160:6140:7cd3:2d72:c0aa) (Read error: Connection reset by peer)
[18:44:53] <constxd> muh category theory
[18:44:54] <Akronymus> ... you DO know where .map comes from, right?
[18:44:55] <bjs> constxd: your programs wouldn't change at all, and there only function is your __next__ and map functions
[18:45:11] <constxd> cmon bros my language is supposed to be pragmatic 
[18:45:21] <bjs> constxd: it's just right now you can't tell the difference (inside your iterator implementation code) between nil (empty) and nil (a value)
[18:45:28] <Akronymus> Also .map would be the wrong functionality anyways.
[18:45:32] <Akronymus> (You'd want .iter)
[18:45:49] <bjs> constxd: having a Value datatype (or really, something like Option) internally would let you easily distinguish.
[18:46:01] <Akronymus> Which may actually be the root cause.
[18:46:38] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Quit: WeeChat 3.2.1)
[18:46:40] <Akronymus> .map is for transforming from x => y.
[18:46:43] <bjs> constxd: e.g. like in Python you just use for loops and .map() and other things without having to talk about StopIteration explicitly.  
[18:46:45] <constxd> right
[18:46:47] <Akronymus> .iter is for doing something with each element
[18:46:50] <constxd> yes
[18:47:32] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Remote host closed the connection)
[18:47:51] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[18:47:56] <constxd> bjs: i see what you mean, it could work yes
[18:48:04] <constxd> will consider
[18:48:12] <Akronymus> Personally, I'd wrap all collection stuff in some element monad.
[18:48:19] <Akronymus> Just because it makes stuff MUCH easier.
[18:48:30] <bjs> constxd: "could" work lol.  It's exactly how Rust implemented iterators https://doc.rust-lang.org/std/iter/trait.Iterator.html#tymethod.next
[18:48:30] <bayaz> Title: Iterator in std::iter - Rust 
[18:48:40] <Akronymus> Or, well, the elements of the collections.
[18:48:44] <constxd> bjs: yes i know
[18:49:21] <constxd> Akronymus: a better example would have been something like this
[18:49:38] *** Joins: ixil (~ixil@mpp-cp1-natpool-2-426.ethz.ch)
[18:49:55] <Akronymus> Are you going for static or dynamic typing?
[18:50:04] *** Quits: ixil (~ixil@mpp-cp1-natpool-2-426.ethz.ch) (Remote host closed the connection)
[18:50:04] <constxd> io.open('foo.txt').map(int).list()
[18:50:39] <constxd> if any of the lines contain something other than an integer, int() will return nil and the iterator will be cut short
[18:50:42] <Akronymus> Oh, open returns a collection of lines?
[18:51:07] <constxd> returns a File object but File imeplements Iter by iterating over lines yeah
[18:51:24] *** Joins: jazzy2 (~jaziz@172.58.43.73)
[18:51:32] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[18:51:50] <Akronymus> Yeah, the only reasonable implementation I can think of is using a wrapper, even if just pointer, to the element.
[18:51:57] <bjs> constxd: a Option/Value type used internally in the iterator implementation would just fix this nil problem, as `nil` would mean empty but `Value(nil)` (or `Some(nil)`) would mean it yielded a nil.  Then the iterator implementation would just unwrap the value/some and pass it along
[18:52:07] <Akronymus> So, if the pointer itself would be nil you can see that there was no element.
[18:52:20] <Akronymus> Otherwise you can deref it and know that you have an element.
[18:52:24] <Akronymus> Even if that element is nil
[18:52:26] <constxd> ok
[18:52:38] <constxd> thank u kings
[18:52:52] <Akronymus> But seriously, category theory would help.
[18:52:54] <constxd> gotta go, will try to implement it like that
[18:53:01] <Akronymus> Specifically the monadic laws.
[18:53:08] <Akronymus> Because then you get composability "for free"
[18:53:32] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[18:53:40] *** Quits: constxd (~brad@TA9C7.WPA.Dal.Ca) (Quit: WeeChat 3.0.1)
[18:54:30] *** Quits: pandakekok9 (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[18:55:03] *** Joins: xavie (~xavie@176-139-252-198.abo.bbox.fr)
[18:55:47] *** Joins: numsima (~numsima@101.175.64.73)
[18:56:33] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Remote host closed the connection)
[18:56:44] *** Quits: kmh_ (~kmh@p200300df5f04e9009876a73e099002be.dip0.t-ipconnect.de) (Quit: Leaving)
[18:57:30] <gitesh> bjs: I still think computer is meaning you have data like classes in python and you have tools like for loop if else statement assignement statement etc that work on that and that's it what computer is and what programming is.
[18:57:46] <gitesh> *work on that data
[18:57:48] <bjs> gitesh: computer means whatever you want it to mean
[18:58:02] <bjs> computers literally used to mean "a person who computes (adds numbers up)"
[18:58:04] <gitesh> but that's what programming IS
[18:58:31] <Akronymus> Data is data.
[18:58:35] <bjs> gitesh: well programming can be what you want it to be as well
[18:58:40] <Akronymus> How you express it isn't inherent to computers
[18:58:49] <bjs> gitesh: the original "programmers" didn't have classes or for loops or anything like that either
[18:59:20] <gitesh> bjs: but the still had tools at low levels i think as the same as for loops and anything like that
[18:59:34] <Akronymus> For loops are too high level
[18:59:35] <gitesh> because there are 6 things according to alan turing
[18:59:48] <bjs> gitesh: sure,  you can decide what to call these things,  and how you define "programming" and "computer" is totally up to you
[19:00:01] <bjs> you've done enough now to "feel" what those words mean,  but there is no definition of either 
[19:00:03] <Akronymus> The MOST basic blocks are comparisons and jump if
[19:00:05] <gitesh> i think if else for loop and like that are made up of these alan turing tools
[19:00:20] <bjs> gitesh: forget about turing stuff,  that's not how we define these things
[19:00:38] <bjs> gitesh: but yeah,  modern programming languages have ifs and fors and classes and programming involves using those things
[19:00:50] <bjs> and that's a fine way to think about it
[19:00:55] <Akronymus> But that's just one way to think about it.
[19:00:57] <Akronymus> bjs
[19:01:12] <bjs> gitesh: it might not be the way *I* think about computers and programming languages,  but it might be the way *you* do. and that's fine
[19:01:16] <gitesh> then it's cool i can use how am I thinking about it to teach python other students here in my locally
[19:01:56] <Akronymus> I personally don't think starting with a procedural/oop language is a good thing.
[19:02:10] *** Joins: Tazy (~Tazmainia@102.39.90.151)
[19:02:25] <bjs> gitesh: teach it the way you were taught,  with examples and making things;  this is how most people seem to learn programming the best
[19:02:30] <gitesh> i love procedurals Akronymus 
[19:02:44] <Akronymus> gitesh i think they poison the mind of programmers.
[19:02:52] <Akronymus> Specifically because statements and assignements.
[19:03:11] <gitesh> bjs: ok
[19:03:19] <Akronymus> I'd personally go with something like f# or haskell as a first language.
[19:03:21] <Akronymus> Or lisp.
[19:03:35] <gitesh> Do you guys have any idea of teaching python to others locally or on youtube?
[19:03:49] <Akronymus> Because learning procedural coming from functional is WAY easier than the other way around.
[19:03:51] <gitesh> if I have youtube channel , will people like to get teached offlien
[19:03:52] <bjs> gitesh: yes I've taught programming to people in person.  Everyone is different
[19:03:55] <pyzozord> that is like suggsting to learn how to ride fomula f1 if you want to learn how to drive a ca
[19:04:01] <pyzozord> car
[19:04:10] <Akronymus> I wouldn't say so.
[19:04:33] <Akronymus> IMO you only think like that because you started with procedural (most likely)
[19:04:40] <Akronymus> So that is what is easy to you
[19:04:52] <bjs> I really wouldn't suggest F# as a first language.  Haskell can be okay, but it's very different to a lot of the "standard" languages out there.  There is nothing wrong with procedural/imperative or even object-orientated languages
[19:04:52] <gitesh> Can I do both youtube and offline teaching? what do you think? either or both
[19:05:19] <Akronymus> bjs yeah, but they teach you habits that are HARD to unlearn.
[19:05:21] <bjs> gitesh: if you want to teach other people,  I would maybe suggest waiting a bit before going down that road and starting with offline so you know what you're doing
[19:05:35] <gitesh> bjs: ok
[19:05:51] <Akronymus> IME for someone COMPLETELY new to programming, functional is easier to understand.
[19:05:58] <bjs> Akronymus: Haskell is different to Java so if you start learning Haskell then move to Java you will have habits that are hard to undo,  it's the same the other way around
[19:06:07] <bjs> New programmers take up either just fine in my experience
[19:06:36] <Akronymus> bjs but it is easier to unlearn them (haskell -> java) than the other way around. (java -> haskell)
[19:06:44] <pyzozord> Akronymus: I don't agree. It makes a lot of sense to you, but fundementally mathematical thinking is unnatural to humans. We need to learn it
[19:06:55] <piou> I don't know that one is easier to understand, but not having to deal with side effects from the get go can simplify things
[19:07:02] <Akronymus> ^
[19:07:11] <Akronymus> Side effects are HARD to reason about
[19:07:13] <bjs> Akronymus: i've not seen any evidence of that, the two camps are just very different and new programmers struggle to go between them in either direction
[19:07:19] <mrig> Akronymus: I would not agree with your notion that top down programming is the best way for everyone to start out.
[19:07:19] <bjs> piou: yeah but binding is not exactly a simple problem
[19:07:32] <Akronymus> I didn't say top down.
[19:07:36] <pyzozord> oh wait! that's perfect time for my video about oop vs fp
[19:07:40] <piou> pyzozord: there's nothing more fundamentally mathematical to FP than to imperative programming, despite the way FP is often presented
[19:07:45] <mrig> but that is what functional is though.
[19:08:05] <pyzozord> https://www.youtube.com/watch?v=-VADIcicpcg
[19:08:06] <bayaz> Title: Object Oriented Programming vs Functional Programming â€¢ Dave Farley â€¢ GOTO 2021 
[19:08:23] <Akronymus> Oh, you were a speaker at GOTO? pyzozord
[19:08:27] <pyzozord> My opinion on fp vs oop ^
[19:08:36] <pyzozord> Akronymus: oh no haha I'm not that smart
[19:08:36] *** Joins: jamea77 (~jamea@187.185.190.209)
[19:08:41] <Akronymus> Oh.
[19:08:48] <piou> I don't think FP should be opposed to OOP
[19:09:06] <dTal> they are inherently opposed
[19:09:11] <piou> So I guess I have an issue with the basis of the comparison
[19:09:17] <Akronymus> No not really dTal
[19:09:23] <piou> dTal: no, they're not
[19:09:26] <pleroma_> it depends on what you call OOP.
[19:09:26] <dTal> FP is about the elimination of state, OOP is about the encapsulation of state
[19:09:31] <bjs> piou: functional is really declarative first, functions second and purity third. 
[19:09:33] <pyzozord> every watch the video!
[19:09:35] <pyzozord> everyone
[19:09:44] <pyzozord> stay calm and watch the video
[19:09:57] <piou> bjs: that I agree with
[19:10:02] *** Quits: jamea (~jamea@187.185.190.209) (Ping timeout: 245 seconds)
[19:10:22] <dTal> nah I'm at work, pontificating on IRC is less conspicuously wasting time than watching videos
[19:10:40] <pleroma_> OOP as practiced in Java and C++ is very far from functional paradigm because they embrace mutability and don't provide nicely for higher-order functions.
[19:10:45] <dTal> pyzozord, can you sum it up in a single word?
[19:10:53] <pyzozord> dTal: it's an old dude talking smart things. It's educative. You are paid to learn things.
[19:11:09] <Akronymus> Even internal state of a function isn't opposed to FP.
[19:11:13] <dTal> bold assumption on your part about the terms of my employment
[19:11:22] <pyzozord> dTal: oop and fp are both useful
[19:11:28] <piou> pleroma_: the fact that they can be used to embrace different goals isn't enough to make them opposite though
[19:11:29] <dTal> I agree
[19:11:38] <pleroma_> but OOP as practiced in Erlang is perfectly composable with FP. in reality, Erlang is the only real OOP language.
[19:11:40] <Akronymus> I certainly don't like oop.
[19:11:54] <Akronymus> But they fp and oop aren't opposed
[19:12:09] <bjs> They are different :)
[19:12:11] <pyzozord> Akronymus: I think you might find some interesting arguments in that video
[19:12:29] <Akronymus> Hell, I actually like objects.
[19:12:40] <Akronymus> I just do NOT like object orientation.
[19:13:03] <piou> pleroma_: not sure I'd call Erlang "The only real oop language", even limiting yourself to "OOP must fit an actor model" there are other languages than Erlang
[19:13:31] <merijn> Like smalltalk doesn't exist >.>
[19:13:33] <user51> i wonder if programmers in the 90s, 20s, and 10s also had the same conversations on irc
[19:13:34] <Akronymus> Doesn't smalltalk fall under "real oop" too?
[19:13:35] * piou dislikes bold claims that lack the subtlety necessary to encompass the real world
[19:13:49] <user51> i'm really not sure what's the endgame with all that programming discussions
[19:14:18] <bjs> user51: Akronymus is trying to convince gitesh that they should teach people FP first
[19:14:24] <pleroma_> if i may suggest this, https://www.youtube.com/watch?v=TTM_b7EJg5E. Joe Armstrong himself makes this claim and i whole-heartedly agree. this is the only GOTO Talk worth watching.
[19:14:25] <bayaz> Title: The Do's and Don'ts of Error Handling â€¢ Joe Armstrong â€¢ GOTO 2018 
[19:14:27] <bjs> I said gitesh should try learn programming better before they start teaching others at all :)
[19:14:27] <pyzozord> all you are talking about right now is in the video
[19:15:21] <piou> user51: I guess one issue is that the programmers saying "Java is horrible" in the 2000s mostly aren't the same as the ones saying it now. People need to be retaught and rediscover things.
[19:15:39] <Akronymus> Java ruined JS
[19:15:39] <piou> Maybe that's the only thing IRC does: provide a constant pool of regulated conflict
[19:15:47] <Akronymus> Originally it was meant to be LISP on the web.
[19:16:00] <Akronymus> But nooo, execs demanded it to look more like java
[19:16:55] <piou> pleroma_: the designer of a language making a claim about that language being better than others isn't exactly any reason to take said claim more seriously
[19:18:02] *** Quits: JavaBean (~javabean@user/javabean) (Ping timeout: 265 seconds)
[19:18:27] <pleroma_> Erlang has message-passing which Smalltalk can't even dream about. message-passing in Smalltalk is just method calling in disguise. i prefer to take the word of Joe Armstrong as my personal experience backs it too.
[19:18:35] <piou> pleroma_: it certainly doesn't make it wrong, but come on, of course the dude is going to push what he worked on, and he invested so much of his time to design it as he wanted that of course it's going to be a language he likes very much, but that's not exactly an objective opinion
[19:19:04] <piou> pleroma_: and as I said, sure the actor model is interesting but even limiting yourself to it there are other languages
[19:19:16] <pleroma_> piou: it's true. in any case, Java and C++ don't provide true encapsulation.
[19:19:29] <pleroma_> piou: syntax is important too.
[19:19:29] *** Quits: jazzy2 (~jaziz@172.58.43.73) (Ping timeout: 265 seconds)
[19:20:10] <pleroma_> piou: Erlang provides a much better implementation of Actor Model than some run of the mill enterprise-fed Akka or something like that.
[19:21:00] <piou> Erlang is good, no question about it, but there's no reason to ideolize it either
[19:21:06] <pleroma_> i refer all talks of Joe Armstrong on YouTube to everybody here. each talk of his has more knowledge than the entire playlists of GOTO and Google Developers.
[19:21:42] <pleroma_> piou: i'm not idolising Erlang. but also don't compare it to Scala or Java.
[19:21:52] <piou> I don't?
[19:22:28] <piou> And the premise that the actor model makes for the best or purest implementation of OOP is very debatable too
[19:22:37] <pleroma_> piou: implementing something in a library is very different than native support. the only exception is Lisp here.
[19:22:48] <piou> Yes?
[19:23:08] <piou> You seem to be arguing against yourself
[19:23:33] <Akronymus> yeah, pyzozord I don't think that video is very good.
[19:23:45] <GeDaMo> pleroma_: there's also Forth! :P
[19:24:00] <pleroma_> piou: while Actor Model is not literally OOP, the strengths for which OOP is touted are much better represented in Actor Model than Java or C++ style classical OOP.
[19:24:14] <pleroma_> GeDaMo: evidently.
[19:24:55] <piou> pleroma_: that's an opinion, which is based on a specific interpretation of what OOP is and what its strength are
[19:24:58] <Akronymus> folds, maps and such do one thing. And always that one thing.
[19:25:04] <Akronymus> Whereas loops can do whatever.
[19:25:18] <Akronymus> So I have to parse each loop separately.
[19:26:07] <Akronymus> And I HIGHLY disagree that mathematical thinking is unnatural. 
[19:26:08] <pleroma_> piou: what do you think strengths of OOP are, if any?
[19:26:14] <piou> pleroma_: to be clear, I personally agree that Erlang is a much better language to do OOP in than Java for example, I'm just annoyed at the arrogance to say that Erlang is *the* OOP language without considering all the subtleties that come into question.
[19:26:21] <Akronymus> I find thinking in sets is much easier than thinking in instructions
[19:26:41] <Akronymus> And the fold example is just stupid
[19:27:02] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[19:27:02] <Akronymus> fold is "less clear" because you don't know it.
[19:27:32] <Akronymus> But once you understand folds, ALL folds make sense to you.
[19:27:38] <piou> pleroma_: I hate such bold statements as "X is best" without context or nuance because they're invariably counterproductive and often plain wrong given a context other than what the people making the claim considered.
[19:27:52] *** Joins: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net)
[19:27:56] <Akronymus> (Well, fold itself, the actual accumulation function can be quite complicated too)
[19:28:06] <pyzozord> Akronymus: what's wrong with it?
[19:28:10] <GeDaMo> "A tutorial on the universality and expressiveness of fold" https://www.cs.nott.ac.uk/~pszgmh/fold.pdf
[19:28:11] <bayaz> Type: application/pdf Size: 209.0 kB 
[19:28:14] <piou> pleroma_: the fact that I agree with you that erlang is a very nice OOP language, better than people give it credit for, has nothing to do with it
[19:28:19] <Akronymus> pyzozord saying the loop is easier.
[19:28:26] <Akronymus> for loop that is.
[19:28:47] <Akronymus> With a fold I KNOW that I take a collection and return a single value.
[19:28:50] <user51> GeDaMo: https://www.youtube.com/watch?v=d6wd78jMHDk
[19:28:51] <Akronymus> In all cases.
[19:28:51] <pyzozord> Akronymus: I suppose that subjective but his argument about mathematical thinking is has convinced me
[19:28:51] <bayaz> Title: Satellite TV Channels Stackenblochen 
[19:28:54] <user51> forth programming parody
[19:29:09] <pyzozord> Akronymus: humans do think imperatively
[19:29:19] <Akronymus> Where with a loop, I have to look at every single instruction to see what it actually results in.
[19:29:31] <pyzozord> Akronymus: we can tell by how all instructions including cookbooks are written
[19:29:38] <GeDaMo> Forth can parody itself! :P
[19:29:56] <piou> pyzozord: plenty of things are as akin to FP as a cooking book is to imperative programming
[19:30:00] <pleroma_> piou: enlighten me with said nuances and subtelties, please.
[19:30:02] <Akronymus> Cookbooks are pretty functional
[19:30:10] <Akronymus> Just piping the result of one step to the next.
[19:30:25] <Akronymus> And passing the current state of what you cook around
[19:30:36] <user51> GeDaMo: know any interesting forth code?
[19:30:42] <pyzozord> what is "stir until cooked" if not a do while loop
[19:30:57] <pleroma_> Akronymus: recipes are not functional.
[19:31:06] <piou> pleroma_: I think I'll pass, I don't think I'll be able to convince you so I'm not going to waste time there
[19:31:07] <pleroma_> Akronymus: it's a common pedagogical technique but not strictly true.
[19:31:08] <GeDaMo> : co  2r> swap 2>r ;
[19:31:38] <user51> my god
[19:31:39] <pleroma_> piou: i won't debate. but i'm curious about what kind of subtleties you are referring to.
[19:31:40] <Akronymus> yeah, people seem to poisoned by procedural/oop here piou
[19:31:48] *** Joins: Andalu30 (~andalu30@85.137.21.37.dyn.user.ono.com)
[19:31:54] <GeDaMo> user51: co-routines! :P
[19:32:28] <piou> pleroma_: no hard feelings but if life has taught me something it's that if something seems absolute then it's probably that we're missing something
[19:32:32] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[19:32:46] <pyzozord> I think that the argument that mathematical thinking is unnatural for thinking, that's why there is so few mathematician is a good one
[19:33:01] <piou> meeeeeeeeh
[19:33:04] <user51> pyzozord: what is mathematical thinking
[19:33:09] <Akronymus> Also: map that actually disallows sideeffects is EASILY paralellized.
[19:33:28] *** Joins: kmh (~kmh@p200300df5f04e9006d31634f65c10f00.dip0.t-ipconnect.de)
[19:33:36] <piou> map is good, it allows optimizations that aren't possible with a loop
[19:33:37] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[19:33:47] <pyzozord> user51: rigorous, functional, multidimmentional, dealing with infinities stuff like this. I don't know.
[19:33:58] <user51> btw, for all the discussion here, has anyone other than GeDaMo posted some code in the last 10 minutes?
[19:34:03] <pyzozord> much simpler to put chicken in the pot, then stir until cooked
[19:34:04] <Akronymus> piou one of the reason why haskell programs can compete in performance with c, in the general case.
[19:34:16] <Akronymus> It is easier to write fast enough haskell than fast enough c.
[19:34:39] <piou> pyzozord: imperative programming demands just as much rigor
[19:34:41] <Akronymus> Of course, if you need to squeeze every last drop of performance out, haskell is probably gonna be harder.
[19:34:42] <bjs> Akronymus: yes and it's definitely *not* the boatloads of optimizations that people have spent 2 decades building into GHC :P
[19:34:51] <Akronymus> piou more rigor I'd say.
[19:34:54] <pyzozord> piou: but less in thinking about it
[19:35:01] <user51> maybe we should compare GHC and SBCL instead
[19:35:03] <piou> pyzozord: not really?
[19:35:15] <piou> pyzozord: I mean, for a given result at least you need as much thinking
[19:35:21] <Akronymus> bjs and how much time was spent on gcc optimizations?
[19:35:25] <piou> The law of conservation of complexity applies
[19:35:39] <bjs> Akronymus: a bit more, that's why C is still faster
[19:35:45] <pleroma_> piou: so, it's a rule of thumb in life you follow. i see. nothing wrong with it. it's probably correct. while there is no metric for the "most OOP language" and comparing languages like that is not useful, some certain things could be said about the paradigms and the characteristics of said paradigms that one is discussing.
[19:35:45] <user51> piou: whoa, waterbed theory was formalized? :D
[19:36:08] <Akronymus> bjs my point was that it is easier to optimize a functional language up to a certain point.
[19:36:16] <Akronymus> And it will be fast enough in most cases.
[19:36:24] <Akronymus> functional language compiler*
[19:36:29] <pleroma_> piou: that's why i start with an absolute so the position is very clear. otherwise we are all living in a Turing Tar-Pit anyway.
[19:36:44] <pleroma_> piou: in any case, your point was taken.
[19:37:04] <Akronymus> BECAUSE you can make many more assumptions than in imperative/procedural/oop languages.
[19:37:18] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:d4b6:3f93:f669:5584) (Read error: Connection reset by peer)
[19:37:42] <pleroma_> here is another gem, https://www.youtube.com/watch?v=lKXe3HUG2l4
[19:37:43] <bayaz> Title: "The Mess We're In" by Joe Armstrong 
[19:37:54] <pyzozord> Akronymus: i think you are talking about scaling your software to big projects. But that's not what learning programming is about.
[19:38:02] <bjs> Akronymus: not really, optimizing functional languages is just as painful. Even CSE isn't simple
[19:38:03] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:d4b6:3f93:f669:5584)
[19:38:06] <Akronymus> Yeah, got kinda sidetracked
[19:38:27] <pyzozord> Akronymus: I am talking about learning how to say "hello my name is pyzozord, I like computers" not about writing tolkien's trillogy
[19:38:28] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[19:38:39] <bjs> and your parallel map example is a good one that sounds easy and yet compilers for FP languages just don't do it beacuse while it sounds "embarrassingly parallel" it turns out to not be that simple
[19:38:51] <Akronymus> And I am talking something more complex.
[19:38:59] <Akronymus> Like summing the values of a list.
[19:39:09] <pyzozord> Yes and learning how to program should never start with complex things
[19:39:24] <user51> maybe we should start with NAND
[19:39:30] <pyzozord> that is trival in both oop and fp
[19:39:47] <Akronymus> Of course.
[19:39:52] <pyzozord> the argument with state messing with you is an argument that applies only at big scale
[19:40:03] <pyzozord> which is outside the scope of "learning how to program"
[19:40:20] *** Quits: xff0x (~xff0x@port-92-195-70-241.dynamic.as20676.net) (Ping timeout: 252 seconds)
[19:40:22] <Akronymus> You don't even need state in a LOT of cases.
[19:40:34] *** Quits: pleroma_ (~pleroma@182.70.231.150) (Quit: leaving)
[19:41:02] <pyzozord> up to 7 pieces of state are what human brain can handle at any time. Most natural way of thinking for humans is imperative with small amount of state
[19:41:05] <Akronymus> Usually in beginner programs just passing the output of one function as input in the next one is good enough
[19:41:08] <pyzozord> no no-state
[19:41:10] <piou> pyzozord: state messing with you can happen very fast, one example is the moment where you add conccurency to the mix
[19:41:26] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[19:41:27] <Akronymus> Concurrency isn't even needed.
[19:41:42] <Akronymus> Just accidentally changing a global variable can be enough.
[19:41:44] <pyzozord> piou: learning concurency is not learning how to program
[19:41:55] <piou> Nope, but the moment you interract with elements outside the program concurrency is unavoidable
[19:42:07] <InPhase> pyzozord: Unles you learn concurrency and how to program concurrently.
[19:42:10] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[19:42:13] *** Quits: anton (anton@tloks.com) (Quit: anton)
[19:42:16] <pyzozord> piou: yes but that's outside the argument about learning how to program
[19:42:27] <pyzozord> InPhase: yep, but that is no 101 of programming, that's later
[19:42:28] <piou> Things as simple as reading a file can have strange properties
[19:42:32] <bjs> pyzozord: well "learning to program" is so broad and vague and generic it might as well include everything
[19:42:41] <InPhase> pyzozord: Yes.  But maybe because we're still doing everything wrong.
[19:42:41] <Akronymus> Anyways, g2g
[19:42:46] <Akronymus> Because workday is over.
[19:42:51] *** Quits: Akronymus (~Akronymus@85.31.8.180) (Quit: workday is over.)
[19:43:15] <InPhase> pyzozord: I won't be shocked at all if in 20 years CS101 languages are highly concurrent, and that the intro problems are as well.
[19:43:17] <piou> And while I agree that concurrency isn't one of the first things required, I think it is necessary to learn at some point that programs don't exist by themselves and that stuff can happen
[19:43:32] <piou> outside their little shell.
[19:43:46] <pyzozord> bjs: I mean if you understand by "learning to program" learning concurency and about monads then I think you mean "learning how to engineer software"
[19:43:50] <piou> That's definitely part of "learning to program"
[19:44:00] <homura> programming is for losers
[19:44:00] *** Parts: homura (root@user/homura) ()
[19:44:18] <pyzozord> piou: in that case I would have to say I do not know how to program
[19:44:22] <InPhase> Okay 1990 person.
[19:44:38] <bjs> pyzozord: I mean "learning to program" is so vague ... obviously concurrency and file systems and networks and all the other stuff are certainly part of programming, and people learn them.  So why can't I say they're part of the process of "learning to program"
[19:45:04] <piou> pyzozord: there's your issue: you focus on the goal "Before I didn't know, now I do". But "learning to program" is a process, not a goal
[19:45:19] <bjs> pyzozord: I mean you can equally say they're not part of the process,  when you pick such a vague phrase as "learning to program" :)
[19:45:30] <pyzozord> piou: that's not what you advice to somehow to ask how they can start learning programming
[19:45:32] *** Joins: dunkeln (~dunkeln@94.128.205.199)
[19:45:32] *** Quits: dunkeln (~dunkeln@94.128.205.199) (Changing host)
[19:45:32] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[19:45:35] <piou> pyzozord: the fact that you still have important stuff to learn doesn't mean that you don't know important stuff or that you can't do anything
[19:45:38] <pyzozord> s/somehow/someone/
[19:45:38] *** Joins: xff0x (~xff0x@2001:1a81:527e:a000:2ce2:bb46:8710:1c2a)
[19:45:50] <beaky> hello why does the binomial 'n choose k' formula get its own fancy notation with giant parentheses what is so special about the binomial numbers
[19:45:51] <piou> pyzozord: I don't get your sentence
[19:45:54] <bjs> pyzozord: well also _starting_ to learn to program is very different from someone who is learning or has totally learned how to program
[19:46:21] <piou> pyzozord: if you only consider the first hour of programming teaching then sure you won't get into concurrency, but you won't get into anything really useful either
[19:46:34] <pyzozord> I am arguing that feeding complex concepts and ideas to newbies is harmful for them
[19:47:02] <bjs> pyzozord: eh, programming is a complex concept 
[19:47:05] <bjs> in itself
[19:47:09] <pyzozord> no not really
[19:47:32] <bjs> pyzozord: you only say that now you're passed the "starting" phase :)
[19:47:37] <GeDaMo> In the first hour you might learn loops or branches, they're pretty important
[19:47:47] <piou> pyzozord: teaching them complex stuff is how they stop being newbies
[19:47:48] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:d4b6:3f93:f669:5584) (Read error: No route to host)
[19:47:52] <pyzozord> bjs: I've been learning programming when I was a kid. Many people start very early
[19:48:05] <piou> pyzozord: not to say you must *start* with that, but at some point you've got to tackle the complexity
[19:48:21] <pyzozord> piou: of course, question is where is that point
[19:48:25] <bjs> pyzozord: sure and when you started it was overwhelming for sure, it is for everyone.  Everything would've seemed complex.  As you learn more you learn more "complex" things
[19:48:32] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:d4b6:3f93:f669:5584)
[19:48:36] <mrig> concurrency is not at all new, it was the technique used to solve and save the moon landing mission by Margret Hamilton.
[19:48:49] <bjs> the phrase "learning to program" is so vague, there is no clear cutoff of when someone has "learned" to program. Does it take a week to learn? a year to learn? Are people still learning after a decade?
[19:48:59] <mrig> Would argue that the mission would not have worked without it.
[19:49:02] <GeDaMo> I'm still learning :|
[19:49:04] <piou> pyzozord: now, there's another issue: what you consider complex isn't necessarily what's complex for newbies
[19:49:52] <beaky> yes i still havent learned programming yet
[19:49:53] <pyzozord> bjs: https://xkcd.com/2501/
[19:49:54] <bayaz> Title: Average Familiarity 
[19:50:28] <beaky> especially programming in rust still on my todo list
[19:50:29] <bjs> pyzozord: I'm just saying that maybe if you use the overly vague and general phrases like "learning to program" you shouldn't expect people to all agree on what should be involved or what order things should happen or even how long such a process lasts on average.
[19:50:50] <pyzozord> I believe people suggesting functional programing and concurency to newbies asking how to learn programming are biased to the harm of newbies
[19:51:06] <piou> pyzozord: I've seen plenty of people pick up recursion easily because it's easy to draw and they can do it on a sheet of paper to see how it works, and I've seen plenty of people finding that difficult and having less trouble with loops. It's easy and useful to assume that the way you see things is the best way, but that depends as much on the student as on the teacher really.
[19:51:07] <bjs> pyzozord: well suggesting functional programming is not harmful,  it's not more complex it's just different
[19:51:15] <piou> pyzozord: nobody is recommending concurrency to newbies
[19:51:24] <pulse> i recommend Pascal and C to newbies
[19:51:24] <bjs> indeed there are good arguments why it might be less complex, especially for particular groups
[19:51:27] <mrig> pyzozord: I think that go would make a great first language.
[19:51:28] <pulse> harden the tree while it's growing
[19:51:54] <bjs> pyzozord: concurrency is something that should definitely appear during someone's "learning to program" journey,  but there's no rule about when/how early and how much detail
[19:52:15] <mrig> some people have greater ease in thinking about concurrency than others, find the right language for the persons mindset.
[19:52:35] <pyzozord> the concurency subject came about because of the problems with state management which why Akronymous wanted to suggest functional programming to someone who wanted to learn programming
[19:52:40] <bjs> pyzozord: indeed lots of people learn programming the first time through things like scratch, where concurrency is a day 1 thing
[19:52:47] <bjs> one sprite does one thing while another does another thing
[19:53:13] <piou> pyzozord: yes, concurrency came to the table while discussing how not having to manage state can be helpful to avoid complex issues
[19:53:14] <InPhase> piou: A lot of that has to do with the background a person comes in with.  Mathematicians, for example, can often pick up recursive programming pretty easily.
[19:53:23] <mrig> functional, just tech them the difference between a function and a procedure \o/
[19:53:35] <pyzozord> piou: those are problems you worry about after you learned some basic programing, not before
[19:53:36] <bjs> These discussions about absolutes of what beginners *should* and *should not* be taught,  or what language they should definitely use or definitely never use, it's all kind of silly
[19:53:59] <piou> InPhase: in France, at least when I was in high-school, we saw things like recursion proofs at age 16 maybe, so many people have had an exposure to that
[19:54:10] <pikapika> Thickness and weight are non-issues for me
[19:54:27] <piou> pyzozord: it's your job as the teacher to anticipate the problems that might arise even if you do not point them out to the students
[19:54:30] <pikapika> I'll gladly carry a 3 inch thick 2kg block of plastic in my pocket
[19:54:42] <piou> pyzozord: just because the students won't see the issues doesn't mean the teacher can just ignore them
[19:55:01] <pyzozord> bjs: I don't agree with that. I think it's important subject and many people fall into this meme https://pbs.twimg.com/media/EOw8aroWkAASiyq?format=jpg&name=small
[19:55:03] <bayaz> Type: image/jpeg Size: 85.1 kB 
[19:55:08] <bjs> pyzozord: what part don't you agree with?
[19:55:21] <piou> pyzozord: that's why I was mentionning concurrency, not to say it must be taught, but to say that steering away from state allows you to avoid that issue completely
[19:55:25] <pikapika> pyzozord, fp is unnatural for a human brain. It should not be a first language.
[19:55:28] <pyzozord> bjs: that discussing how we should help newbies is a silly subject
[19:55:34] <pikapika> It is valid but after learning a traditional language
[19:55:42] <beaky> nice that meme sums up stackoverflow
[19:55:45] <bjs> pyzozord: I think your comment about killing newbies is wrong toop
[19:55:46] <piou> pikapika: do you have a study showing that?
[19:55:53] <pikapika> piou, humanity
[19:56:05] <piou> pikapika: because I've never seen any, and the only people I see claiming that are people that first learned imperative programming
[19:56:14] <bjs> pyzozord: Oh sorry I thought we were playing the game of misinterpreting each other for fun :)
[19:56:25] <pikapika> piou, imperative is natural
[19:56:30] <piou> people that learn FP first never seem to complain about it, and plenty of people learn the things that are "difficult" such as recursion even outside programming
[19:56:34] <bjs> pyzozord: I said that talking in *absolutes* is silly. Not having discussions in themselves.
[19:56:40] <piou> pikapika: yeah, you're just trolling
[19:56:45] <pyzozord> bjs: no not really, sorry if i misinterpreted you somewhere along the way
[19:56:51] <bjs> piou: indeed, I've seen school children learn Haskell as their first language and be fine with it
[19:56:51] <pikapika> piou, thats because those people didn't "learn" programming. They learned a leaky abstraction without knowing its a leaky abstraction.
[19:57:10] <pikapika> ASM or C are ideal beginner languages
[19:57:21] <bjs> piou: the trouble always comes when they move on to a different paradigm. It doesn't really matter which one they started with, it's always hard for them
[19:58:01] <pyzozord> bjs: I am ok with suggsting functional paradigm to newbies as long as it's annotated with "it's a smaller job market, some people think it's harder to learn, etc"
[19:58:02] <piou> The main issue with learning a pure FP language first isn't FP, it's that those languages lack popularity
[19:58:05] <bjs> I've seen students learn SML first,  I've seen them learn Scratch first, I've seen them learn VB first, I've seen them learn Python first, I've seen them learn C first.  They always struggle with the same set of conceptual problems and they all eventually get it.  But when switching to another in the set they -all- struggle.
[19:58:19] <bjs> pyzozord: I mean a newbie's first language is so far away from them getting a job it's not usually even a concern
[19:58:30] *** Joins: akevinhuang (~thekevinh@user/thekevinhuang)
[19:58:33] <piou> pyzozord: would you label a python class with "some people think it's harder to learn" ?
[19:58:36] <pikapika> piou, the real problem is that its a leaky abstraction
[19:58:43] <bjs> pyzozord: relatively few people start learning one language and then never learn another before they get a job,  but I guess it might happen (e.g. at code camps or something?)
[19:58:46] <pyzozord> bjs: I don't think so. I think many people nowaday learn with the sole purpose of getting a well paid job fast
[19:58:57] <pikapika> Learning FP as the first language means you have no idea what is and isn't sane for the computer hardware
[19:59:09] <bjs> pyzozord: that's almost universally untrue in e.g. the UK where we teach schoolchildren to program
[19:59:11] *** Quits: xiongxin8802 (~xiongxin@113.116.34.210) (Quit: Konversation terminated!)
[19:59:17] <bjs> or at university
[19:59:23] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[19:59:30] <piou> pyzozord: as much as I agree with the job statement (although, why would kids care, and don't you learn lots of stuff for other things than direct professionnal application), the "it may be harder" is just setting you up for failure
[19:59:33] <pyzozord> bjs: I've meet many people in each job just after bootcamps and nothing else
[19:59:42] <pyzozord> bjs: who did it literally to turn their lives around
[19:59:57] <bjs> pyzozord: sure that's the example I gave,  and those certainly seem the minority as days go on
[20:00:25] <pyzozord> bjs: I think bootcamps are strong on the raise recent years
[20:00:40] <pyzozord> absolutely not a minority. From my experience as much as 10% of my collegues
[20:00:59] <pyzozord> Maybe bit less. Maybe 5%
[20:01:11] <InPhase> pyzozord: Web dev?
[20:01:12] *** Joins: vysn (~vysn@user/vysn)
[20:01:15] <pyzozord> InPhase: yeah
[20:01:16] *** Joins: rcoote (~rcoote@2a02:908:692:81c0:678:cf0a:e3f5:ea8b)
[20:01:26] <InPhase> pyzozord: Yeah.  It seems to differ in that subfield.
[20:01:27] <bjs> pyzozord: well 0% of my colleagues have ever fallen into that category.  So I'm not sure personal experiences really are representitive
[20:01:38] <bjs> it's hard, it depends on the subject,  it depends on the country,  it depends on the age
[20:01:42] <InPhase> pyzozord: The demand is just too huge there right now for it to be filled in the normal manner.
[20:02:17] <pyzozord> bjs: aren't you in academia?
[20:02:33] <bjs> pyzozord: I am currently, I've done lots of things
[20:02:48] <pyzozord> from the web dev and academia, what kind of person would be more likely to ask for help about how to start programming?
[20:03:01] <bjs> academia, it's literally what academia does
[20:03:02] <bjs> :p
[20:03:06] <InPhase> pyzozord: I expect that aspect of webdev to change as demand levels off and webdev complexity continues to rise.
[20:03:27] <pyzozord> InPhase: that could be true, however I'm talking about the current moment
[20:03:43] <pyzozord> talking about helping people now, or not helping them
[20:03:53] <bjs> pyzozord: I mean 5% in webdev as like, the highest estimate would mean 95% _not_ learning that way
[20:04:12] <bjs> and I guess you're implying webdev is more likely to have these people from the outset so
[20:04:26] <bjs> certainly I'm still happy with my "minority" comment
[20:04:27] <pyzozord> bjs: I meant strictly bootcamps. I'd say about 50% is self thaught like me
[20:04:43] <pyzozord> Even more than 50%. Having cs background is actually less common
[20:04:46] <pikapika> InPhase, web dev is very hard
[20:05:19] *** Quits: hexingb (~hexingb@103.37.140.21) (Read error: Connection reset by peer)
[20:05:26] <bjs> pyzozord: yeah self taught is very common, and will be less common as time goes on (with e.g. more teaching of programming in schools).  And even of the self-taught I'd predict relatively few of them only ever learned 1 language
[20:05:38] *** Quits: jamea77 (~jamea@187.185.190.209) (Ping timeout: 252 seconds)
[20:05:52] <bjs> I still don't think the choice of first language matters very much,  I've never really seen it impact people and I meet people whose "first language" choice is a wild mix 
[20:05:59] *** Joins: hexingb (~hexingb@101.236.65.144)
[20:06:03] <pyzozord> anyhow, peson who asks such a besic question should be directed to the most basic answers
[20:06:24] <pyzozord> with more complex answers provided as an option, but clearly marked they are more complex
[20:06:53] <bjs> pyzozord: sure and everyone would agree.  But the idea that you can order all the things from "basic" to "complex", or say that one language is "better" than another for teaching to beginners seems very unfounded
[20:07:16] <pikapika> A beginner should start with a language like asm or C
[20:07:17] <pyzozord> well of course it needs some common sense
[20:07:19] <bjs> I typically tell people Python if they want to learn to program,  but i don't choose it because of the language itself really
[20:07:33] <pyzozord> and where we can't agree on common sense we should maybe relay on general popularity
[20:07:35] <pikapika> bjs, we were taught using a basic dialect
[20:07:41] <pyzozord> to eliminate our own bias
[20:07:45] <pikapika> I think old BASICs are close to a friendly assembler
[20:07:48] <bjs> pikapika: well then, maybe dijkstr was right
[20:08:19] <pikapika> bjs, dikstra is just an opinionated blowhard
[20:08:25] <bjs> was
[20:08:26] <pikapika> He did good work on algorithms
[20:08:38] <pikapika> But let us not give any credence to his "quotes"
[20:08:53] <pikapika> I felt C was a very natural next step from BASIC
[20:09:07] <bjs> I feel like you're being overdefensive to my joke here
[20:09:07] <bjs> :P
[20:09:09] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:650e:47a8:7a24:991c)
[20:09:10] <pikapika> It solidifed some of the common "goto design patterns" in the form of loops, switches etc
[20:09:17] <pyzozord> I feel suggesting functional programming to newbies without marking it as less popular is misleading
[20:09:27] <InPhase> Python is a great starting language right now because it has the starting simplicity of BASIC, but scales up to a wide range of serious work.  It also has some significant limits, but by the time someone hits them is about the right time for them to learn something else.  And, then they know Python, which is also very popularly used.
[20:09:29] <pikapika> bjs, I am just describing the importance for beginners to get an intuitive understanding of hardware
[20:09:41] <pyzozord> I personally read it as a flex at the cost of the newbie
[20:10:24] <piou> Good thing with C is that they'll spend so much time scrapping their heads among a pointer nightmare, segfaults and other issues that wouldn't exist in modern languages, that you won't hear from your students for a few years
[20:10:25] <bjs> pyzozord: it's really not a cost to them at all.  Obviously if someone signs up to learn modern webdev in order to get a job at some webdevy place then starting with Haskell would probably be inappropriate
[20:10:35] *** Quits: hexingb (~hexingb@101.236.65.144) (Ping timeout: 252 seconds)
[20:10:45] <bjs> pyzozord: but if you're at a uni or teaching kids how to program for the first time, then a FP language is as good as any
[20:11:08] <pikapika> bjs, remember the hardware
[20:11:28] <pikapika> Old BASICs were a bit like a friendly assembler
[20:11:33] <pikapika> Except for strings
[20:11:34] <bjs> pikapika: to be honest,  C doesn't really look like the hardware at all,  especially not to a beginner.
[20:11:45] *** Joins: hexingb (~hexingb@2409:8900:2721:daa6:64c7:a70f:8b7f:4dcc)
[20:11:54] <piou> C is just as leaky an abstraction as haskell
[20:12:00] <bjs> and modern hardware doesn't look like anything you're imagining by the asm/C abstraction anyway
[20:12:04] <piou> And ASM isn't much better
[20:12:37] <pikapika> bjs, it does not need to build up an electronics engineer level of knowledge. Just an intuitive understanding of whats cheap and whats costly. How memory is seen by the os, a crude idea of how the constructs like if else, loops, functions etc work internally etc
[20:12:38] <piou> Unless they're coding on 6502 I guess
[20:12:38] <bjs> pikapika: it's certainly something they will learn at some point but there's no real benefit from starting with it
[20:12:49] <bjs> and there's no reason to start at C, rather than starting with DSP
[20:13:31] <pikapika> bjs, the main point is that you must know things that are "trivial" in python like heavy string/list processing are actually very harmful for the computer and should be avoided as far as possible
[20:13:34] <pyzozord> ok well maybe lets agree on that: there is no such thing as general "learn how to program". We should ask for context, "what is your goal with programming", and give advice based on that
[20:13:47] <pyzozord> otherwise indeed everyone will interpret it to their own circumstances
[20:13:47] <bjs> pikapika: they're not harmful at all,  the computer is fine
[20:13:50] <InPhase> pikapika: Avoid prematurely teaching optimization.  :)
[20:13:55] <pikapika> Harmful as in costly for hardware
[20:13:58] <beaky> yes computers are designed to process strings and lists 
[20:14:06] <pyzozord> if I were in academia and someone asked me how to learn programming I'd be also happy to suggest them haskell or lisp
[20:14:07] <bjs> pikapika: it's not really costly, the students will run the program and it'll finish in 0.1ms
[20:14:11] <bjs> they won't even notice it took any time at all
[20:14:19] <pikapika> With C we get a good intuitive understanding of what an "array" is to the hardware
[20:14:39] <pikapika> bjs, thats not the issue. The issue is that they won't understand its cost or "why" its costly
[20:14:45] <bjs> pikapika: the hardware doesn't really understand arrays though, they're a C concept
[20:14:51] <pikapika> Which will show in more real projects
[20:15:13] * InPhase looks at bjs with a ssedways glance.
[20:15:16] <pikapika> bjs, the asm has explicit instructions that are like mov so and so value to base+offset*step_size memory location
[20:15:21] <pyzozord> Also not sure why I got worked up about this. I think I just got caught in an argument :P
[20:15:28] <pyzozord> I don't care _that_ much
[20:15:54] <bjs> InPhase: real hardware is just a big blob of asynchronous units whose "memory" is a topology of busses to random banks of bits which sort of overlap
[20:16:24] <bjs> pyzozord: maybe we should agree that "learn to program" is a vague term that depends on lots of things?  What a great idea you have :P
[20:16:26] <InPhase> bjs: Which is the sort of description that gets you blank stares from intro students.  :)
[20:16:59] <bjs> InPhase: I think teaching C in order to "teach hardware" is not a good idea, teaching C is fine as a low-level language but it's certainly not going to teach the students what hardware looks like
[20:17:10] <pikapika> bjs, its not about teaching hardware
[20:17:13] <pyzozord> bjs: yes took me a while
[20:17:17] <pikapika> For teaching hardware you'll have to well teach hardware
[20:17:18] <pyzozord> bjs: I appologise
[20:17:25] <pikapika> Its about gaining an intuitive high level understanding of the hw
[20:17:26] *** Joins: molson (~michael@2001-48F8-704A-CA1-0-0-75F-100E-static.midco.net)
[20:17:46] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-b453-a897-4f94-54c0.res6.spectrum.com) (Ping timeout: 252 seconds)
[20:17:59] <bjs> pyzozord: the problem is that C doesn't give you that.  asm does.  Only *once* you've learned asm and done some reading/been taught about computer architecture can you start to make sense of how C relates to it
[20:18:02] <bjs> oops
[20:18:04] <pikapika> It is sufficient at that stage to understand what an "array" is, how memory is shown by the hardware and os, what are the rough implementations of branching and looping and function calls etc
[20:18:06] <bjs> pikapika: the problem is that C doesn't give you that.  asm does.  Only *once* you've learned asm and done some reading/been taught about computer architecture can you start to make sense of how C relates to it
[20:18:08] <bjs> sorry pyzozord 
[20:18:49] <pikapika> bjs, yes it should be supplemental material by the instruction. Like explaining at a very high level the concept of how function calls can be implemented with stack frames and so on
[20:19:02] <piou> meh
[20:19:10] <piou> what's the point
[20:19:13] <pikapika> or how all the hardware mainly has are conditional and unconditional gotos internally
[20:19:29] <bjs> pikapika: I agree you want to teach people this,  but it takes a very long time before someone is able to see the subtle relation between asm and C's model
[20:19:41] <piou> I really see no point whatsoever in people learning that
[20:19:46] <pikapika> A more indepth and proper study of computer architecture can come later
[20:19:52] <piou> Not first thing in their programming journey I mean
[20:20:05] <pikapika> piou, if people don't learn that they won;t understand the difference between a list and a hash table
[20:20:07] <pikapika> etc
[20:20:21] <piou> pikapika: you don't need that to understand the difference between a list and a hash
[20:20:33] <InPhase> I agree that bottom-up is not a strong approach to learning programming for the vast majority of people.  I think the hardware-level understanding is absolutely crucial.  But I flag this as Sophomore/Junior level knowledge.
[20:20:46] <piou> pikapika: and whether you even need to understand the difference between a list and a hash table from the get go is even heavily debatable
[20:20:55] <pikapika> piou, it is absolutely important
[20:20:58] <piou> pikapika: later
[20:21:12] <bjs> a new programmer is lost among the weeds here for *months*,  it's not until they've basically learned the fundamentals of what a program is and how to make computers print things and add stuff up can they really start to internalise the way these languages are related to what the computer is "actually" doing
[20:21:18] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-99ef-1e4e-a8ff-fad3.res6.spectrum.com)
[20:21:30] <pyzozord> I also agree that bottom-up of learning of programming is not the most optimal. I believe learning a programming language is somewhat similar to learning a human language
[20:21:31] <pikapika> piou, a list and a hash map are vastly different entities even if many scripting langs provide a uniform syntax for both
[20:21:44] <piou> pikapika: as I said, later
[20:21:45] <pikapika> And if one does not understand this from the beginning
[20:21:53] <pikapika> They will find it very hard to unlearn bad habits
[20:22:01] <bjs> and at that point it doesn't really matter whether the language they'd been using up to then was C or VB or Haskell
[20:22:04] <pikapika> The benefit of C is that there are no hash tables
[20:22:06] <merijn> pikapika: It depends on your hashmap implementation. Many hashmaps have worst case of being a linked list :p
[20:22:07] <bjs> if you're talking about a multi-year course where the person is going to learn programming, and computer architecture, and all the other stuff. then yes, C and asm should be part of that "somewhere".  Should C and asm be what they're fed on the first day?  It's very unclear, and I certainly wouldn't try show *both*
[20:22:12] <GeDaMo> Arrays, structs, hash tables, lists, trees are all concrete implementations of a nested key:value type
[20:22:16] <pikapika> If you want one you first implement it yourself and gain an understanding of the tradeoffs and complexity
[20:22:20] <GeDaMo> As shown by Lua's tables
[20:22:28] <piou> Nobody understands it from the beginning, you get to learn it at some point, and that's not a habit that's that difficult to break really
[20:22:41] <pikapika> piou, thats fine. People can just learn proper arrays first.
[20:22:53] <pikapika> Hash tables should be introduced later. Thus we should avoid languages that confuse/mix up the two.
[20:22:58] <pikapika> ie for initial teaching
[20:23:05] <piou> and your "proper array" isn't represented in the same way in different implementations of different languages
[20:23:16] <mrig> What on earth would lead you to believe that there is one best way to learn?
[20:23:23] <pyzozord> I just hope that people giving advice to newbies put the newbie's goals first and foremost
[20:23:29] <piou> Don't learn a language to learn another one, learn your language first and foremost
[20:23:34] <pyzozord> that's really at the core what I was arguing
[20:23:39] <pikapika> piou, any sane implementation should be like those mov val,[base+offset*step] asm instructions 
[20:23:45] <piou> pikapika: no ?
[20:23:59] <bjs> pyzozord: sadly people often don't,  because people often hold very strong opinions on what the "right" way to teach people is
[20:24:00] <pyzozord> In many cases, I am the newbie :P
[20:24:02] <bjs> and then use that as a big hammer
[20:24:03] <pikapika> piou, show me a language with proper arrays that aren't a growable vector
[20:24:05] <pikapika> internally
[20:24:07] <piou> pikapika: don't get me wrong, this way of doing arrays has nice properties, but there's also a lot of nice properties it lacks
[20:24:16] <GeDaMo> pikapika: C? :P
[20:24:21] <pikapika> piou, and those other properties make the data structure "not an array"
[20:24:42] <piou> pikapika: you've fallen into a cyclic reasonning, I won't follow you there
[20:24:54] <pikapika> GeDaMo, growable vector is optional. The main thing was array as a region with continuous memory addresses.
[20:25:31] <pikapika> piou, there is no cyclic reasoning. Any data structure where arr[i] isn't arr_base+i*element_size is not an array
[20:25:44] <pikapika> It is some other data structure that just happens to have an array like "ui" for the syntax
[20:25:53] <pyzozord> bjs: yes I think you made me realise that I am not an exception here. Thanks for being patient. I realized I was more biased than I thought too.
[20:26:04] <bjs> pyzozord: I used to be biased too
[20:26:25] <GeDaMo> We're all still biased :|
[20:26:29] <pikapika> If your language implements "lists" as linked lists internally
[20:26:32] <bjs> pyzozord: I've just gone up and down the stack and actually watched students and adults and kids learn programming from many different bases and have realised they all get stuck on the same things every time
[20:26:33] <pikapika> then its not an array
[20:26:55] <beaky> what kinds of things do people get stuck on most 
[20:26:59] <pikapika> If "arrays" in your language are a hash map, they are not an array
[20:27:05] <pyzozord> bjs: same question as beaky 
[20:27:18] <bjs> pyzozord: e.g. with concurrency, the moment they have to learn to "synchronize" two actions they are stuck. It doesn't matter what path they took to get there, they always get stuck on the exact same things.
[20:27:30] <pikapika> <piou> and your "proper array" isn't represented in the same way in different implementations of different languages
[20:27:34] <mrig> go has a really nice amount of syntactic sugar for new programmers, the only really difficult pert is that it deas not interface well with graphics servers.
[20:27:35] <piou> pikapika: alright, that's a definition, but it also highlights why it's ridiculous to expect most people to learn how such array work when they're starting"
[20:27:36] <pikapika> You have yet to show me any examples
[20:27:38] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 252 seconds)
[20:27:57] <pikapika> piou, but they don't need to if the langauge does not conflate/confuse arrays with various other non-array data structures.
[20:27:58] <piou> pikapika: most languages don't have that array as a common type
[20:28:03] <pikapika> Hashmaps can be introduced later.
[20:28:33] <mrig> would be interesting to see how a language agnostic display server would work out.
[20:28:43] <piou> And there's nothing that says that hashmap are more complex or anything and must be introduced later
[20:28:45] <pikapika> Anyways when I was taught see I was taught the abstraction of the continuous address space and the concept of pointers and so on
[20:28:50] <pikapika> Everyone understood that stuff
[20:28:56] <pikapika> Its not "hard" for beginners
[20:29:08] <pikapika> *s/see/arrays
[20:29:13] <piou> pikapika: Ah, there you go to the root of the problem: your assumption that just because it worked for you it's the only proper way to do things
[20:29:45] <piou> quite the common misconception really
[20:29:52] *** Quits: jab416171 (~jab416171@c-174-52-53-66.hsd1.ut.comcast.net) (Ping timeout: 252 seconds)
[20:30:01] <pikapika> piou, the thing is you will leave a beginner utterly confused or with hard to unlearn bad habits if you start them off with a language that confuses arrays with other st uff
[20:30:06] <bjs> pyzozord: well, general ideas of abstraction and encapsulation,  as well as specifics about how things execute.
[20:30:06] <bjs> pyzozord: e.g. those learning SML get confused about bindings in the exact same way a Python learner gets assignment confused in the same way someone learning C confuses variables
[20:30:06] <bjs> it's the same problem just it looks different
[20:30:07] *** Quits: absc (~absc@81.31.144.180) (Quit: Leaving.)
[20:30:20] <piou> pikapika: the thing is, you won't, because it entirely depends on how you do it and what you do arround it
[20:30:34] <pikapika> piou, "I" am not alone. I am talking about a whole class.
[20:30:39] <pikapika> class of students
[20:30:49] <piou> pikapika: if all they're going to do for the first year is make websites in python you're approach is completely disconnected from their reality
[20:30:59] <piou> pikapika: that share the same context
[20:31:01] <bjs> pyzozord: loops/recursion always cause problems (even though they're the same thing...), conditional execution (branching, `if`, call-by-need...), datatypes (classes/newtype/structs), types..
[20:31:31] <piou> pikapika: you really shouldn't extrapolate your own situation to other people without making sure that they're evolving in a similar context with similar goals
[20:31:43] <pyzozord> I truly think that recursion is more complex to think about. Not the simple case. Not recursive fibonacci, the more complex stuff
[20:31:46] *** Joins: slakman (~slakman@112.202.220.5)
[20:32:06] <piou> pyzozord: thing is, recursion is easy to draw
[20:32:09] <pikapika> piou, tell me how a student won't be utterly confused if the "arrays" you teach them happen to actually be a mix of a hasmap and an ordered set
[20:32:10] <bjs> sure they also get stuck on particular ugly bits of each language, and some languages have more bumps than others (C's pointers..., Haskell `Monad` etc)
[20:32:23] *** Joins: gggp (~textual@60.10.23.169)
[20:32:24] <bjs> pyzozord: well, it's exactly the same as a while loop
[20:32:26] <pikapika> Pointers are trivial
[20:32:28] <piou> pikapika: I suggest you go see real students
[20:32:40] <pyzozord> bjs: it's got implicit state
[20:32:42] *** Joins: jamea (~jamea@10.189-202-213.bestelclientes.com.mx)
[20:32:43] <bjs> pyzozord: as in, every recursive call can fairly trivially be turned into a while loop + a variable with a stack
[20:32:55] <piou> you'll see much more people stuck for days on pointers than being confused by how their arrays are implemented, especially since they don't need to care about how they're implemented
[20:32:56] <pikapika> piou, and if they aren't confused by that, then it means they were never taught there is a difference between an array and a hashmap and a set and so on
[20:32:58] <bjs> pyzozord: well... I mean, sure, like I said, everyone gets stuck at the same point here :)
[20:33:01] <pikapika> Which is even more dangerous for later on
[20:33:03] <pyzozord> took me a while this year to study how to convert recursion back to iteration
[20:33:15] <piou> pikapika: you can learn the properties of an object without knowing how it's implemented
[20:33:33] <pikapika> piou, not if the implementation actually matters to the usage of the object
[20:33:34] <piou> pikapika: and yes that abstraction may leak at some point, but that doesn't prevent you from using it properly
[20:33:36] <mrig> hashmaps are really simple and a really nice thing to explore though.
[20:33:37] <pyzozord> before I realized that I need a stack with at least one variable indicating if we are going down or up on this stack item
[20:33:46] <mrig> ah was scrolled back some then :|
[20:34:39] <pyzozord> before that I could do certain things recursively others iteratively but could not change the method at will
[20:34:49] <mrig> obviously good ones are complicated, but the basics are simple.
[20:34:58] <piou> pyzozord: tbf you manipulate much more loops than their equivalent recursive counterpart. It's just as hard to deconstruct a recursive function to see what is changing at every step and write a loop for that
[20:35:02] *** Joins: jab416171 (~jab416171@c-174-52-53-66.hsd1.ut.comcast.net)
[20:35:05] <pikapika> bjs, the difficulty is with multiple recursion
[20:35:18] <pikapika> Its not easy to see how to convert a multiple recursion into iteration
[20:35:20] <molson> if you wanna learn recursion, I suggest a lisp based language.
[20:35:33] <pikapika> Multiple as in the function calls itself at more than one point
[20:35:51] <piou> Ah, I gather molson has read SICP
[20:35:57] <molson> yep
[20:36:03] <bjs> pikapika: you mean mutual and yes it's also just the same,  like I said, everyone gets stuck here when going from one to the other
[20:36:15] <pyzozord> simple recursion is trivial it's just calls itself until it doesn't, then it "bubbles up"
[20:36:21] <pikapika> molson, you should not learn recursion after the initial stages without understanding its implementation
[20:36:28] <bjs> it's not until you really make yourself comfortable on both sides of the fence does it make sense, so to speak
[20:36:28] <pikapika> bjs, not mutual
[20:36:30] <pikapika> Mutual is easy
[20:36:44] <pikapika> It just cycles through a bunch of functions until returning to the original caller
[20:36:46] <bjs> pikapika: you mean not-tail-recursive?
[20:36:54] <pikapika> bjs, not just non-tail recursive
[20:36:58] <pikapika> I meant multiple points of call
[20:37:01] <WarauSalesman> pyzozord: that's a great way of trivializing something you have no idea about
[20:37:07] <pikapika> For example fibonacci trivial implementation has two calls
[20:37:12] <pikapika> but its tail recursive you say 
[20:37:13] <pikapika> fine
[20:37:17] <pikapika> Lets take merge sort then
[20:37:21] <pikapika> It has two calls of the function
[20:37:22] <bjs> fibonacci normally doesn't have tail recursion no
[20:37:36] <bjs> but that's what I said above, it's a while loop + a stack
[20:37:47] <pyzozord> WarauSalesman: I think you are assuming little much there
[20:37:50] <pikapika> bjs, no operation is being doen after the call of the fib(n-1) so its tail recursion
[20:37:50] <WarauSalesman> fibonnacci CAN be tail recursive if you implement it in a veeery clever way
[20:37:51] <bjs> and like i keep saying,  it's just something that everyone finds difficult until they really make themselves at home
[20:37:54] <pikapika> bjs, but as I said
[20:37:55] <bjs> pikapika: ... the + ?
[20:37:58] <pikapika> Merge sort is a better example
[20:38:02] <GeDaMo> fibs = 0 : 1 : zipWith (+) fibs (tail fibs)
[20:38:12] <pikapika> Merge sort calls itself twice
[20:38:21] <pikapika> and does non-trivial stuff in between
[20:38:25] <bjs> pikapika: the usual definition is something like `return fib(n - 1) + fib(n - 2)`  this is not tail recursive
[20:38:30] <pikapika> Quicksort, FFT etc follow a similar structure
[20:38:33] <bjs> and anyway all of these examples are trivial, they're just the while loop + a stack as before
[20:38:38] <bjs> mutual is slightly more complicated but not by much
[20:38:49] <pikapika> bjs, well fib being tail recursive or not is not the question here anyways given that its easily iteratized
[20:39:03] <pikapika> My general case was when there are multiple callsites for the recursion
[20:39:08] <pikapika> Such as mergesort with two calls
[20:39:09] <bjs> pikapika: but the general case is also just trivial
[20:39:13] <bjs> you just make a stack and a while loop
[20:39:16] <pikapika> Mutual is different
[20:39:27] <pikapika> Mutual recursion is f(g(h(...(f(x))))
[20:39:30] <bjs> mutual is different and harder yeah, I know
[20:39:31] <GeDaMo> x86 has a Fibonacci instruction :P https://www.felixcloutier.com/x86/xadd
[20:39:32] <bayaz> Title: XADD â€” Exchange and Add 
[20:39:33] <bjs> your case is the trivial one
[20:39:39] <pikapika> Mutual is easier
[20:39:41] <bjs> no
[20:39:44] <pikapika> You just have to flatten the call hierarchy
[20:39:51] <bjs> Your case is very easy
[20:39:58] <bjs> mutual case is slightly harder, but not very much harder
[20:40:03] <pikapika> bjs, tell me how you will trivially convert a merge sort to iteration
[20:40:06] <pikapika> or a quick sort or fft
[20:40:08] <pikapika> same structure
[20:40:08] <bjs> you just reify the call stack and you get a while loop
[20:40:16] <pikapika> For one, you'll need two stacks
[20:40:23] <bjs> no?
[20:40:25] <pikapika> for a pure conversion
[20:40:28] <pikapika> bjs, how not?
[20:40:38] <pyzozord> bjs: arguable if that is "trivial"
[20:40:47] <bjs> pikapika: well, why would you need 2 stacks?  Your programming language doesn't need 2, it only has 1 call stack
[20:41:04] <bjs> pyzozord: sure
[20:41:46] <bjs> pikapika: so instead of having a call stack and recursive calls you have an explicit stack structure and a while loop and you get the same thing.
[20:41:49] <pyzozord> "reify" is cool but "thingify" is cooler
[20:41:52] <pikapika> oh right, I think I can just push the call records to one stack
[20:42:00] <bjs> Yes
[20:42:10] <pikapika> Hmm I remember facing some difficulty with that last time, but I should just try it again
[20:42:20] <pikapika> In that case I agree that mutual is the harder case
[20:42:25] <bjs> pikapika: I mean this whole conversation is supposed to be convincing pyzozord that everyone gets stuck here
[20:42:32] <bjs> I guess you helped me more than I could've hoped :)
[20:42:38] <pikapika> Yeah
[20:42:54] <pikapika> Iteratizing recursion is not as easy as you think even if in principle it can be a purely mechanical act
[20:42:59] <pyzozord> Yeah I got stack there too, err stuck
[20:43:11] <bjs> pyzozord: everyone does,  regardless of the journey they took to get there
[20:43:13] <bjs> they get stuck :P
[20:43:39] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Remote host closed the connection)
[20:43:51] <pikapika> bjs, though merge sort also isn't a good example. It has a very beautiful binary tree structure that should I think be iterazible without a stack and just some nested loops
[20:44:08] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[20:44:10] <bjs> pikapika: some things can be flattened to not need the stack at all yeah
[20:44:28] <pyzozord> In many cases recursion is more difficult to do in iterative way
[20:44:43] <pyzozord> also more optimal because you control the stack yourself
[20:44:48] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Read error: Connection reset by peer)
[20:44:56] <pyzozord> and your stack can be on the heap, much bigger
[20:44:59] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[20:45:05] <bjs> pyzozord: well depends,  e.g. Haskell doesn't have a call stack
[20:45:08] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Remote host closed the connection)
[20:45:16] <pyzozord> oh that's interesting
[20:45:16] <bjs> it all depends where you're coming from... wait am I getting dejavu? :P
[20:45:19] <beaky> yes recursion (self-referential definitions) often gets confused with call stacks https://existentialtype.wordpress.com/2016/02/22/it-is-what-it-is-and-nothing-else/
[20:45:20] <bayaz> Title: It Is What It Is (And Nothing Else) 
[20:45:36] *** Joins: DevAntoine (~DevAntoin@195.101.183.21)
[20:45:38] <pikapika> It is important to be able to use explicit recursion or just completely flattening into iteration like that
[20:46:11] <pikapika> It is scary to rely on the internal stack in cases where the depth can be large or not clearly bound
[20:46:51] <pyzozord> bjs: yeah, not coming from academia personally I think of many of these concepts as "high" concepts that aren't really necessary for the job and thus belong in the "complex" / "later" group
[20:47:20] <pyzozord> bjs: but I can totally see how undergrad student starts year one semster one with SCIP
[20:47:20] *** Quits: rcoote (~rcoote@2a02:908:692:81c0:678:cf0a:e3f5:ea8b) (Quit: Konversation terminated!)
[20:47:35] <pyzozord> SICP
[20:47:48] <bjs> pyzozord: I think your own biases are coming in again in that "the way pyzozord programs is the right way and everything else is fodder for students before they learn the true way"
[20:48:17] <pyzozord> if you are aiming to be a computer scientists these concepts are indeed fundamental. If you are aiming to win bread making websites they are highly optional
[20:48:21] <bjs> maybe for budding webdevelopers that is true,  but for others... then no
[20:48:31] <mawk> <pyzozord> and your stack can be on the heap, much bigger
[20:48:38] <mawk> the call stack of the majority of even C programs is in the heap
[20:48:39] <bjs> pyzozord: I mean webdevs make not very much money compared to other programmers out there ;)
[20:48:40] <mawk> as soon as they use threads
[20:48:52] <pyzozord> bjs: no no, I'm not saying what is the right way now, I think maybe you interpreted me wrong
[20:49:11] <piou> pyzozord: some things are worth learning, not for the chance to apply them, but for the perspective they offer
[20:49:12] <beaky> yes all theory seems like high concepts coming from the pre-theoretic perspective, like how we had fire for thousands of years but it took only a few centuries ago for the physics and chemistry of combustion to come about
[20:49:15] <InPhase> The notion of finite call stacks is so antiquated.  We should really have compilers taking care of giving us unbounded call stacks automatically.
[20:49:21] *** Quits: numsima (~numsima@101.175.64.73) (Quit: Client closed)
[20:49:28] <bjs> pyzozord: sure,  I just was saying that webdev isn't the only way to make money
[20:50:03] <beaky> yes i like unbounded call stacks i run my programs with ulimit -s unlimited
[20:50:09] <InPhase> It should be trivial to provide a guarantee that a recursive function won't terminate unless the computer runs out of memory.
[20:50:13] *** Quits: DevAntoine (~DevAntoin@195.101.183.21) (Ping timeout: 252 seconds)
[20:50:24] <mawk> is it truly unlimited beaky though I have serious doubts
[20:51:04] <InPhase> mawk: To the extent that the computer itself is.
[20:51:36] <mawk> so the kernel automatically expands the stack when you hit the end of the page or something?
[20:51:42] <pyzozord> I think the finite call stacks are very much a reality still. I think in C but also in javascript
[20:51:48] <mawk> or does it mmap the whole memory for your stack in a CoW fashion
[20:51:55] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:52:02] <beaky> nice i like mmap
[20:52:07] *** Quits: golden_ticket (uid205013@id-205013.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[20:52:08] <pyzozord> I've ran into this many times on leetocde, the functional recursion failed but iterative recursion worked well
[20:52:15] <merijn> pyzozord: Depends on language implementation :p
[20:52:42] <merijn> InPhase: Just go all big brain like GHC and don't even have a call stack :p
[20:52:52] *** Joins: soapsudsxx (~soapsudsx@209.221.40.154)
[20:52:57] *** Quits: Pickchea (~private@user/pickchea) (Remote host closed the connection)
[20:53:26] <beaky> exactly call stacks are an implementation detail c doesn't really need a call stack either
[20:53:51] <beaky> go stackless and screaming-fast
[20:54:11] <beaky> speaking of go i think go uses its own special stuff too
[20:55:15] <gitesh> everything what programming is names and values mostly
[20:55:16] <pyzozord> is go really stackless?
[20:55:20] *** Joins: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com)
[20:56:20] <beaky> no but i think they use their own weird plan9 approach 
[20:57:11] *** Joins: Krail (~Krail@user/alexdelarge)
[20:57:17] <InPhase> merijn: That choice might have some side effects.
[20:57:31] <Powerhouse6666> I'm trying to verify if I have Closed-Loop Opt-In or not.  Right now when user fills out a form, they get a confirm subscription email but I don't have any cookie or anything in the URL just sending them to a thank you page.  I get the following data in MariaDB.  " 323 | mybestfriendsarecats@aol.com           |         1 | 0000-00-00 00:00:00 | 2021-09-05 19:53:06 | 0000-00-00 00:00:00 | 0000-00-00 00:00:00 | 24.109.184.150"  
[20:57:32] <Powerhouse6666> So is this Closed Loop Opt-in or do I need some type of cookie to tie to MariaDB some how?  I could be over thinking here need to be certain.  
[20:58:08] <beaky> (tho maybe cgo uses the c stack)
[20:59:36] <mrig> go has a stack for every goroutine, and they can use as much space as you have ram.
[20:59:50] <mrig> they start out tiny for a coroutine though.
[20:59:51] <pyzozord> don't really know what a closed loop opt-in is
[21:00:06] <pyzozord> i think it stands for "confirmed opt-in" but I'm not sure
[21:00:15] <Powerhouse6666> pyzozord, sorry https://www.spamhaus.org/whitepapers/mailinglists/
[21:00:17] <bayaz> Title: The Spamhaus Project - Mailing Lists -vs- Spam Lists 
[21:01:21] <mrig> using cgo makes building more difficult.
[21:01:28] *** Quits: Andalu30 (~andalu30@85.137.21.37.dyn.user.ono.com) (Ping timeout: 265 seconds)
[21:01:38] <pyzozord> Powerhouse6666: you need to make sure they visited the link they got in email to confirm, that's all
[21:02:11] *** Joins: dunkeln (~dunkeln@94.128.205.199)
[21:02:12] *** Quits: dunkeln (~dunkeln@94.128.205.199) (Changing host)
[21:02:12] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[21:02:34] <mrig> a different stack for each logical grouping of state, seems like quite a civilised approach to using stacks :)
[21:02:41] <pyzozord> Powerhouse6666: at least that is how i understood it
[21:02:52] *** Quits: gggp (~textual@60.10.23.169) (Ping timeout: 252 seconds)
[21:03:36] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[21:04:23] *** Joins: snake (~snake@user/snake)
[21:04:36] <pyzozord> are there non-c go? I thought the principle c implementation of go is de-facto what everone uses
[21:04:56] *** Joins: gggp (~textual@123.113.176.46)
[21:05:20] <GeDaMo> Is there a gogo? :P
[21:05:29] <pyzozord> haha had the same question :P
[21:05:33] <mrig> go is gogo now :)
[21:05:37] <pyzozord> there should be a gogo-gadget library
[21:05:38] <Powerhouse6666> pyzozord, okay that's what I have now.  So then the URL proves what? Just a click for the user? This starts the reputation building with mail servers?
[21:05:47] <mrig> has its own compiler written in go.
[21:06:23] <mrig> go has a curious placement slap bang between C and Haskell.
[21:07:30] <GeDaMo> https://www.youtube.com/watch?v=CZqUNEHYZgQ
[21:07:31] <bayaz> Title: Landscape - Einstein A Go Go 
[21:07:34] <pyzozord> Powerhouse6666: i don't know about reputation, but I interpret closed-loop opt-in as user clicks they are interested on the website, they fill in a form give their email, you send them confirmation link to their email and they click that link and visit the confirmation page. As they visit the confirmation page you save in database that user confirmed and completed the optin
[21:09:14] *** Joins: quippy (~quippy@47-220-146-143.gtwncmkt04.res.dyn.suddenlink.net)
[21:09:33] <Powerhouse6666> pyzozord, okay, so in my Database I has viewed, clicked, but it doesnt say they clicked the confirmation URL.  Is this an issue or am I over thinking too much?
[21:10:05] <pyzozord> Powerhouse6666: when is "viewed" and "clicked" saved?
[21:10:18] <Powerhouse6666> pyzozord, real time
[21:10:31] <pyzozord> I mean at what even, what step in the process
[21:10:40] *** Quits: quippy (~quippy@47-220-146-143.gtwncmkt04.res.dyn.suddenlink.net) (Client Quit)
[21:11:03] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) ()
[21:11:05] <Powerhouse6666> as soon as they open or click
[21:11:44] <pyzozord> but what the they open and click, the form or the confirmation page?
[21:12:24] <Powerhouse6666> They fill the form, get the confirmation email click the url and I send them to a thank you page.
[21:13:21] <pyzozord> at which step what do you save in db?
[21:14:14] <Powerhouse6666> good question.  When they fill out the form
[21:14:34] <Powerhouse6666> so nothing in the database proving they confirmed optin
[21:14:45] <Powerhouse6666> other then their ip
[21:14:51] <pyzozord> there you go :)
[21:14:57] <Powerhouse6666> which im not certain if that is enough to keep the litigators away
[21:15:03] <pyzozord> need to save they visited the link from the email
[21:15:10] *** Joins: Akuli (~Akuli@87-94-109-224.bb.dnainternet.fi)
[21:15:13] <Powerhouse6666> hmm
[21:15:52] <Powerhouse6666> so I have one more personalized field I can use for this
[21:16:25] *** Lynn is now known as Lyn
[21:16:50] <pyzozord> keeping litigators away sounds kinda spammy
[21:17:41] <Powerhouse6666> pyzozord, no clue how to save they visited the confirmation link from the email. | Aye, that's exactly what I am protecting myself and clients from. 
[21:18:42] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[21:19:10] *** Joins: [itchyjunk] (~itchyjunk@155.97.14.20)
[21:19:21] *** Quits: vpw (~vpw@122.172.227.30) (Ping timeout: 265 seconds)
[21:19:30] <pyzozord> just need to save to db that the confirmation page was visited
[21:19:41] <Powerhouse6666> ty
[21:19:46] <Powerhouse6666> this is good news
[21:19:48] *** Joins: magla (~gelignite@55d4c46b.access.ecotel.net)
[21:19:48] *** Quits: tvm_ (~tom@ip-89-103-96-164.net.upcbroadband.cz) (Quit: Lost terminal)
[21:20:34] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[21:20:52] <pyzozord> ok i will go no, after proving im a bigger iditiot then i thought i was in the earlier discussion :P
[21:21:02] <pyzozord> s/no/now
[21:21:34] <Powerhouse6666> bah?
[21:21:58] <pyzozord> nvm
[21:22:21] <[itchyjunk]> what exactly is `null` in java?
[21:22:35] <[itchyjunk]> I don't get why objects can have the value null but not primitives
[21:22:53] <GeDaMo> null is a reference
[21:22:54] <[itchyjunk]> a = null says a point to some memory location that has nothing in it?
[21:23:01] <[itchyjunk]> hmm idk what reference means either :(
[21:23:20] *** Quits: molson (~michael@2001-48F8-704A-CA1-0-0-75F-100E-static.midco.net) (Quit: Leaving)
[21:23:23] <GeDaMo> primitive types aren't objects so they don't have references
[21:23:25] *** Joins: rany (~rany@user/rany)
[21:23:33] <GeDaMo> You can think of it as a bit like a pointer
[21:27:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[21:28:08] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[21:30:11] *** Joins: numsima (~numsima@101.175.64.73)
[21:31:34] *** Quits: gggp (~textual@123.113.176.46) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:33:56] *** Joins: molson (~user@2001-48F8-704A-CA1-0-0-75F-100E-static.midco.net)
[21:34:11] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[21:35:45] <jinsun> [itchyjunk]: a = null means that a contains a reference to nothing, and when you de-reference it (when you actually try to acceess its fields or methods), then you get some NullPointerException
[21:35:52] *** Quits: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net) (Ping timeout: 245 seconds)
[21:36:30] <[itchyjunk]> String a = ''; vs String a = null is different?
[21:36:39] <pikapika> [itchyjunk], yes
[21:36:45] <pikapika> "" is a valid object
[21:36:50] *** Joins: rany (~rany@user/rany)
[21:37:47] <jinsun> primitive types cannot be null because there is no reference or de-reference goiing on, they always have a value
[21:37:56] <GeDaMo> "" is an empty string but it's still a string
[21:39:12] *** Quits: molson (~user@2001-48F8-704A-CA1-0-0-75F-100E-static.midco.net) (Quit: ERC (IRC client for Emacs 27.1))
[21:39:41] *** Joins: molson (~michael@2001-48F8-704A-CA1-0-0-75F-100E-static.midco.net)
[21:39:59] *** Parts: Krail (~Krail@user/alexdelarge) ()
[21:40:33] <[itchyjunk]> think it makes sense
[21:40:57] <[itchyjunk]> other than the primitive types. you'ed think primitive types would also need something pointing to them in the memory location and such
[21:41:03] <[itchyjunk]> probably an artifact of java
[21:43:05] <GeDaMo> In a sense there's still something pointing to primitive types it's just not programmer accessible 
[21:43:27] <jinsun> you can think like primitive types "contain" their value, but objects contain a reference to their value, null is a valid value for a reference, but not for int or double or other primitive stuff
[21:44:25] <[itchyjunk]> oh
[21:44:36] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[21:45:01] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:47:15] *** Joins: wedr_ (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net)
[21:47:18] <jinsun> Java null is bad because the same null can be assigned to any type, Rust and F# have Option<T> which is better, where the None is also of type T, and you cannot assign a None of type T1 to a Option of type T2
[21:47:24] *** Quits: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[21:48:14] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[21:48:19] *** Joins: gitgooood (~gitgood@host-78-145-137-41.as13285.net)
[21:48:27] <[itchyjunk]> ohh
[21:48:33] <[itchyjunk]> null having a type
[21:48:35] <[itchyjunk]> interesting
[21:48:42] <[itchyjunk]> so null is typeless in java?
[21:50:12] <[itchyjunk]> be back
[21:50:16] *** Quits: [itchyjunk] (~itchyjunk@155.97.14.20) (Quit: Client closed)
[21:54:22] <wedr_> Anyone here uses Linux (in general) and not just using Ubuntu? How do you handle cases where the Linux OS just freezes on you without warning? (Mouse frozen, no responses, etc.) Just reboot and restart all over? Or you actually find some OS error logs somewhere in the Linux system to find and read about them?
[21:54:47] * pulse cackles on the inside
[21:55:18] *** wedr_ is now known as wedr
[21:55:21] <pikapika> wedr_, there is a 'reisub'
[21:55:28] <pulse> if i use linux i litearlly use ubuntu or mint for that specific reason
[21:55:32] <pulse> they're the least problematic
[21:55:47] <pikapika> wedr, ctrl alt reisub
[21:55:52] <wedr> pikapika, Yep, I know about the REISUB
[21:56:05] <pyzozord> I use ubuntu because everyone uses ubuntu
[21:56:08] <wedr> But it gets annoying when it's frequently doing this, and I had to use REISUB within an hour
[21:56:16] <pikapika> wedr, what distro
[21:56:22] <wedr> I use Ubuntu LTS
[21:56:41] <pulse> i'm saving money for a mac so i can have both good terminal and sanity
[21:56:44] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[21:56:55] <pyzozord> I don't know anything about linuxes really, but my first impulse would be to check out logs
[21:56:57] *** Joins: mickey (~user@user/mickey)
[21:57:02] <pyzozord> after the freeze/crash
[21:57:11] <wedr> do you where I can check out logs after freezing/crashing in Ubuntu?
[21:57:29] <pyzozord> I was thinking about journalctl
[21:57:36] <pulse> /var/log
[21:57:38] <pyzozord> but there are probably other places
[21:57:55] <wedr> pulse, make sure you save at least $2600. The extra couple of hundreds of dollars are for peripherals, mouse, keyboards, and a new chair
[21:57:58] <jinsun> pulse: windows also has good terminal nowadays (windows terminal + WSL2)
[21:58:02] *** Joins: nitro (~nitro@c-73-165-183-88.hsd1.pa.comcast.net)
[21:58:10] <pulse> wedr, hah. nah i'm going for the macbook
[21:58:11] <wedr> pulse, I'll check out /var/log
[21:58:14] <pulse> jinsun, kinda sorta
[21:58:21] *** Quits: sjmulder (~sjmulder@2a02-a443-33e5-1-ecb-947b-bb49-fcdf.fixed6.kpn.net) (Quit: Leaving)
[21:58:24] <pyzozord> pulse: sanity is an ilusion, especially on apple
[21:58:33] <wedr> pulse, That's the best part. Apple tends to replace peripherals like it's no biggie
[21:58:46] <pulse> pyzozord, it's better than linux for sure
[21:58:55] <pulse> i was on linux for ~7 years exclusively
[21:59:02] <pulse> do not want to go back
[21:59:11] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:f1cc:d5ea:e86d:e5c1)
[21:59:16] <pulse> mac is unix + it has a stable ecosystem and a stable DE
[21:59:22] <pulse> which is quite good tbh
[21:59:30] <pyzozord> pulse: until they make you buy a new laptop after your chair in the kitchen broke
[21:59:31] <pulse> linux has nothing but broken DEs
[21:59:33] <pulse> litearlly
[21:59:43] <pulse> pyzozord, well, i might need the $1500 stand
[21:59:44] <pulse> haha
[21:59:46] <pikapika> pulse, xfce is perfection
[21:59:50] <pulse> pikapika, no, it's not
[21:59:55] <pikapika> How is it not?
[21:59:57] <pulse> xfce is something that would look dated in 1991
[22:00:09] <pikapika> It has everything needed in a wm
[22:00:13] <pikapika> "Dated" is just a matter of theming
[22:00:15] <pikapika> so thats bullshit
[22:00:20] <pulse> strong nope
[22:00:26] *** Quits: nitro_ (~nitro@c-73-165-183-88.hsd1.pa.comcast.net) (Ping timeout: 265 seconds)
[22:00:30] <pikapika> Modern design is regressive
[22:00:35] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[22:00:37] <pulse> it's ok, i didn't say it's useless
[22:00:42] <pulse> but it's dated and clunky
[22:00:49] <pikapika> Windows 3.1 was released in 92
[22:00:50] <pulse> i'd much rather use macos or windows
[22:00:58] <wedr> kernel: [  916.873248] audit: type=1400 audit(1631122168.700:11444): apparmor="DENIED" operation="ptrace" profile="snap.discord.discord" <===  UGH, Discord, what you doing?
[22:01:01] <pulse> pretty sure i'd rather use win3.1 too
[22:01:05] <pikapika> Xfce is basically like windows so I don't see the problem
[22:01:11] <pulse> keep looking
[22:01:29] <pikapika> It lets you have windows you can move with the mouse, and the - [] x at the right places
[22:01:34] <pikapika> exactly like windows
[22:01:36] <pulse> i'm a front-end guy. i need something that fits into 2021
[22:01:36] <pikapika> What else do you need?
[22:01:52] <pikapika> pulse, its just a matter of theming. Not that I am sure how much you can theme a title bar
[22:01:53] <pulse> pikapika, that's like saying a horse carriage is all you need. it has wheels, it has sits, what else do you need
[22:02:01] <pulse> seats*
[22:02:03] <pikapika> pulse, what else does windows or mac provide?
[22:02:19] <pulse> a wonderful environment for human beings to interact with the machine
[22:02:19] <pikapika> I never saw any special magic other than a titlebar with - [] x in windows
[22:02:21] <pulse> with intuitive gestures
[22:02:22] *** Quits: nitro (~nitro@c-73-165-183-88.hsd1.pa.comcast.net) (Ping timeout: 265 seconds)
[22:02:27] <pulse> intuitive placements
[22:02:28] <pyzozord> that does not look good for a discord at all
[22:02:29] <pulse> intuitive everything
[22:02:31] <pikapika> What placements?
[22:02:37] <pikapika> There is a title bar with - [] x
[22:02:39] <pulse> i mean if apple is good at anything they're good at making interfaces
[22:02:41] <pikapika> thats all a wm does
[22:02:51] <pikapika> Its placement is exactly the same as windows
[22:02:54] <pulse> pikapika, clearly you want to drag me into some kind of ill witted argument. i refuse to play your game :p
[22:02:56] <pikapika> Its placement is exactly the same as in Windows
[22:02:59] <pulse> if you enjoy xfce, i don't mind that
[22:03:01] <pulse> i don't
[22:03:07] <InPhase> pulse: Windows and mac interfaces are massively slow for use compared to a well-configured xfce.
[22:03:09] <pikapika> pulse, a wm is not a widget toolkit
[22:03:21] <pikapika> WM just handles the window management
[22:03:24] <pulse> InPhase, that's relative tbh
[22:03:32] <pikapika> The only "theming" you see is in the window decorations
[22:03:32] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[22:03:37] <pulse> linux literally gets in my way with common tasks. on windows i fly through stuff
[22:03:39] <pikapika> The window decorations in xfce are exactly like in Windows
[22:03:45] <InPhase> pulse: In a Windows or Mac interface it can take entire seconds just to do basic stuff like open programs.  I got better things to do with my time than sit around waiting for seconds while I click through stuff.  :-P
[22:03:48] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:03:58] <pikapika> pulse, you are talking about something completely different from a wm
[22:03:59] <pulse> InPhase, i'm gonna assume you're not intimately involved with developing front-ends :p
[22:04:01] <pulse> same for pikapika 
[22:04:03] <pikapika> A wm is just that
[22:04:13] <pikapika> A titlebar with - [] x
[22:04:17] <pikapika> Thats all that Windows and Mac provide
[22:04:21] <pikapika> and thats what xfce gives too
[22:04:25] <pulse> pikapika, like a horse carriage, right :p
[22:04:30] <wedr> pulse, found the culprit. Looks like it's a broken WIFI driver in Ubuntu LTS.    https://hastebin.com/zasatoyubu.yaml
[22:04:35] <pikapika> pulse, what else does Windows or mac have
[22:04:43] <pulse> pikapika, a mouse scroll speed setting
[22:04:49] <pulse> pikapika, image preview in common dialogs
[22:05:08] <InPhase> pulse: I do.  But while intuitive front end features for the masses are great (and xfce has all of those), it's important to also support high level interface features for computing experts, like keyboard shortcuts to do all of the most common tasks.
[22:05:10] *** Joins: Izem (~Izem@bras-base-london1483w-grc-31-74-12-158-179.dsl.bell.ca)
[22:05:22] <pikapika> pulse, dialogs are not the work of wm
[22:05:25] <pulse> i disagree that windows doesn't offer those
[22:05:29] <pulse> or mac for that matter
[22:05:30] <pyzozord> I think Mac/Windows start better and over time the user experience degrades. Linuxes start low but over time you tinker with it and user experience grows
[22:05:33] <pikapika> pulse, you are not talking about window managers then
[22:05:34] <InPhase> pulse: And those keyboard shortcut features should execute in small fractions of a second so that there is no lag to the experience.
[22:05:37] <pikapika> You are talking about toolkits
[22:05:43] <pikapika> Completely different thing
[22:05:44] <pulse> pikapika, i'm talking about computer/human interfaces
[22:05:54] <pikapika> pulse, then why mention wm
[22:06:03] <pulse> InPhase, you say this but i've recently been developing something on gnome3 and i thought i was going to go crazy
[22:06:10] <pulse> now i realize gnome3 isn't xfce but still
[22:06:16] <pulse> the number of times it got in my way is astonishing
[22:06:33] <pyzozord> oh yeah pulse is hating the bazaar
[22:06:39] <pulse> my preferred linux DE is cinnamon, and even that is lacking compared to mac/windows
[22:06:40] <pyzozord> it has it's cons for sure
[22:06:47] <InPhase> pulse: I think it's widely agreed gnome3 made some design decision errors.  This was a large part of the growth in popularity of xfce in the first place.
[22:07:03] <pikapika> pulse, and for that matter
[22:07:18] <pikapika> Gtk open/save dialogs have previews
[22:07:18] *** Joins: scjosh (~scjosh@206.189.79.69)
[22:07:39] <pikapika> the file managers also have thumbnails
[22:07:42] <pikapika> etc
[22:07:57] <pikapika> pulse, "modern" design is regressive
[22:08:01] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[22:08:03] <pulse> disagreed
[22:08:07] <pulse> modern design is great
[22:08:14] <pyzozord> Ultimately I don't want any graphical interface on my machine. I'll just use terminal all the way. And use headless browser that screenshots the pages so I can read them
[22:08:19] <pikapika> Modern design removes features and adds ram/cpu usage
[22:08:19] <pulse> use windows 95 for 3 minutes and you'll see yourself
[22:08:30] <pikapika> Windows 95 is superior to most modern uis
[22:08:34] <pulse> haha
[22:08:35] <pulse> godo joke
[22:08:38] <pulse> good*
[22:08:42] <pulse> when's the last time you actually used windows 95?
[22:08:50] <pulse> i mean i love the aesthetics of windows 95, don't get me wrong
[22:08:51] <pikapika> For example modern uis have flat colors and its hard to see what is a button vs a label vs a link etc
[22:08:59] <pikapika> Windows 95 had clear colors and borders between the controls
[22:09:21] <pulse> yes, it looked nice
[22:09:35] <pikapika> It is a superior design to most modern websites
[22:09:42] * pulse gives up
[22:09:50] <pulse> i don't ultimately care what others use :p
[22:09:58] <pyzozord> that's the spirit
[22:09:59] <pikapika> Its just objective fact
[22:10:02] <pulse> i MUCH prefer windows and/or mac to xfce, i'll tell you that much
[22:10:09] <pulse> cinnamon is barely passable
[22:10:10] <pulse> barely
[22:10:14] <InPhase> pulse: The thing that has gotten most stupid about both Windows and Mac is the obsessive removal of text, and this assumption that iconographic pictures are easier to use.  This is NOT more intuitive to anyone with a reading ability.  It doesn't even tell you what things are by looking.  You have to fumble around and guess until you memorize everything.
[22:10:20] <pikapika> Win 95 controls had clear borders. Thats objectively better than confusing borderless light shaded flat controls.
[22:10:22] <pulse> and don't even get me started on KDE
[22:10:29] <pikapika> InPhase, its the same everywhere
[22:10:41] *** Quits: gitgooood (~gitgood@host-78-145-137-41.as13285.net) (Remote host closed the connection)
[22:10:42] <pikapika> Features are going away and yet at the same time ram and cpu usage is increasing
[22:10:55] <pulse> InPhase, maybe, but most of those are familiar to most users
[22:10:59] *** Joins: gitgooood (~gitgood@host-78-145-137-41.as13285.net)
[22:11:03] <pulse> if you see a printer icon you don't really need a label next to it that says "Print"
[22:11:09] <pyzozord> I mostly hate on apple and microsoft for being big evil corporations. I'm not a fan of those.
[22:11:29] <pikapika> Things that were one click are 5 clicks after an update etc
[22:11:34] <pulse> yet you drink coca-cola, pyzozord ? :p
[22:11:37] <InPhase> pulse: Only after you've gone through all that initial fumbling and gotten used to it.  This is NOT an easier interface, it's just one that people force themselves to learn.
[22:11:38] <pikapika> if the feature even exists after the update
[22:11:44] <pyzozord> pulse: yes :(
[22:12:03] <pulse> InPhase, idk. i'm a fan of modern design. this is not me being contrarian, this is from actively working with modern interfaces
[22:12:08] <pulse> you can do modern design in a bad way
[22:12:12] <pulse> and you can do modern design in a great way
[22:12:20] <pulse> it's the implementation that counts, not the paradigm
[22:12:40] <pikapika> Windows 95 has superior design to most modern websites and apps
[22:12:50] <InPhase> pulse: I think a good interface should be highly usable when you walk up to it for the first time.
[22:12:52] <pikapika> And regarding websites, plain html is responsive by default
[22:12:55] <pulse> pikapika, i have a windows 95 machine here that i use for retro purposes. i wouldn't develop on it
[22:12:59] <pulse> it would drive me mad
[22:13:08] <pyzozord> pulse: but truth be told, one cannot live life completly without contradictions and not being a hipocrite at all. I think that was a life lesson for me and helped me mature a bit to understand that. But that's my truth, doens't need to be anyone elses truth
[22:13:29] <pulse> InPhase, a good interface combines usability with looks and familiarity
[22:13:34] <InPhase> pulse: And if you want features for experts, add extra features to make interactions faster for experts (e.g., shortcuts).  An expert-level feature should not need to be "knowing where things are".
[22:13:38] <pulse> just having good usability doesn't make a good interface
[22:13:40] <pulse> it has to look good too
[22:13:52] *** moose` is now known as moose
[22:13:52] <pulse> if you try to market a windows 95 looking product today, people will laugh and you'll go broke
[22:14:05] <pulse> much easier to sell a sleek, flat, modern app
[22:14:05] <InPhase> pulse: So I genuinely don't understand the people who think words are ugly even if useful, so they should remove words to get something that's pretty.
[22:14:15] <pulse> InPhase, i'm a fan of icons+words
[22:14:27] <pulse> i remember when applications first started adding icons to menus. i thought that was great
[22:14:35] <pikapika> People are forced to use inferior ui for lack of alternatives
[22:14:43] <InPhase> I have no problems with icon inclusion.
[22:14:46] <pulse> now you could instantly find the option, instead of linearly going through each one
[22:14:55] <pikapika> pulse, thats a different thing
[22:15:02] <pikapika> A "search" option does not require icons
[22:15:04] <pulse> pikapika, i guarantee you that you'd have a hard time selling a dated looking app
[22:15:10] <pyzozord> I personally don't mind icons. I actually think we are doing much better job at design then we did any time earlier. On average
[22:15:20] <pulse> pikapika, search is so common that literally everyone in the world knows what the icon looks like
[22:15:24] <pulse> you really don't need a "search" label next to it
[22:15:32] <pulse> a magnifier glass is instantly recognizable
[22:15:35] <InPhase> Although when I have icons and words in a list, I typically just scan the words.  Adult reading ability should come with parsing words at a glance as quickly as icons.
[22:15:40] <pikapika> pulse, you need search when there are a lot of features
[22:15:45] <pikapika> And some tasks simply demand a lot of features
[22:15:48] <pikapika> You can't cut them
[22:15:54] <pulse> depends on context, but yes
[22:16:07] <pulse> there's no way to generalize. you can just follow good UX practices
[22:16:19] <pyzozord> InPhase: there might be some disabilities making it more difficult to parse words than icons
[22:16:40] <InPhase> pyzozord: Yes.  And certainly it's different for young children as well.
[22:17:00] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[22:17:06] <pikapika> In 2021, you get better design by not listening to "professional designers"
[22:17:16] <pyzozord> I mean for adults too. Dyslexia comes to mind immediatly, but I'm sure there are many others
[22:17:17] <pulse> no, you don't
[22:17:24] <InPhase> pyzozord: But it seems the popular trend is to assume no one can read anyway, and therefore that part of information is superfluous.  This is what I don't get.
[22:17:25] <pulse> and that's a very biased thing to say pikapika 
[22:17:33] <pulse> clearly you don't work with designers
[22:17:36] <pulse> you just hate them xD
[22:17:39] <pikapika> Maybe but the proof is the majority of modern sites and apps
[22:17:44] <pikapika> I am sure there are sane designers
[22:17:54] <pulse> most designers are bad
[22:17:56] <pikapika> But they are clearly rare or not able to exercize their powers
[22:17:57] <pulse> professional designers aren't bad
[22:18:22] <InPhase> pulse: Then who are they paying to design all the messed up websites if they're not professionals who design?  :)
[22:18:37] <pulse> it also massively depends on your target customer base
[22:18:56] <pulse> InPhase, there's a sea of horrible designers, and the teams in charge of actual features for most websites aren't designers
[22:18:57] <pyzozord> Most of the designers I worked with produced beautiful interfaces
[22:18:57] <mercenary> pulse: matter of fact, I happen to work with designers. After about 5 iterations of the customer pushing back at the professional designers, we ended up with a usable workflow :/
[22:19:13] <pulse> it massively depends on who you want to target
[22:19:25] <pulse> if you want to market a game with a website, and you do some kind of simple design, you'll never do a single sale
[22:19:26] <pyzozord> But graphic designers are not ux designers. Companies ignore this fact
[22:19:33] <pikapika> pyzozord, yes
[22:19:38] <pikapika> A design isn't a pretty picture
[22:19:39] *** Joins: rany (~rany@user/rany)
[22:19:42] <pikapika> Its the interaction of components
[22:19:49] *** Joins: pi1 (~pi@197.26.97.170)
[22:19:51] <pikapika> A good design reduces the number of clicks etc
[22:20:01] <pikapika> None of that is visible or optimized by "pretty pictures"
[22:20:16] <pyzozord> Still on average I think we are more aware of UX now than we were 10-20-40 years ago
[22:20:29] <pyzozord> (not sure about 40, wasn't around back then)
[22:20:34] <Izem> UX of the past is much better
[22:20:41] <Izem> UX has been forsaken
[22:20:48] <pulse> pikapika, you're thinking like a programmer, not like a designer, and certainly not like a customer
[22:20:55] <pulse> "pretty pictures" are incredibly important
[22:21:00] <pulse> especially when it comes to marketing products
[22:21:07] <pikapika> pulse, customers hate modern ui
[22:21:11] <pulse> no, they don't
[22:21:14] <pulse> you hate modern ui
[22:21:19] <pulse> because you're a biased programmer :p
[22:21:31] <pyzozord> I don't think UX has been forsaken, I think it maybe jus refocues from poweruses to average consumer
[22:21:33] <pulse> the vast majority of people loves modern design
[22:21:36] <pikapika> Customers had a huge outcry when windows 8 came out
[22:21:47] <pulse> pikapika, i'm sure you'd say this is bad design https://www.blizzard.com/en-us/
[22:21:48] <bayaz> Title: Blizzard Entertainment 
[22:21:48] <pulse> by your standards
[22:21:49] <pyzozord> and us (the power users) are not happy with the change because we lost on this deal
[22:21:49] <pikapika> pulse, the vast majority does not know better is possible and puts up with it
[22:21:55] <pulse> yet it makes blizzard literal millions
[22:22:01] <pikapika> A video game is a very different design from an app
[22:22:03] <pulse> it's in fact very good design
[22:22:17] <pulse> pikapika, any product you want marketed required good visual design
[22:22:24] <pulse> if you want to sell a vacuum cleaner, you better make it visually appealing
[22:22:28] <pikapika> Bad designs are often cherished and "retconned" into game difficulty in video games
[22:22:33] <pulse> if you do "least clicks" and other bollocks, good luck with sales
[22:22:34] <pikapika> Very different from app design
[22:22:40] *** Quits: inky (~inky_@178.78.157.68) (Ping timeout: 265 seconds)
[22:22:51] <pulse> you're just thinking from one particular context, when UX applies to a much wider range
[22:22:59] <pulse> i work with a marketing team directly, i'm not making this stuff up
[22:23:00] <pyzozord> Yeah it makes sense ux refocused. Computers are becoming much more mainstream as time goes on, so it's natural that UX must change it's target
[22:23:20] <user51> ui defeats my grep though
[22:23:25] <pikapika> pulse, a pretty picture is just step 1
[22:23:28] <pulse> and apple is just spearheading visual design tbh
[22:23:32] <pikapika> A pretty picture does not guarantee a usable ui
[22:23:35] <Izem> I'm always surprised that there seem to relatively little attempts to make another desktop for linux from coporate
[22:23:38] <user51> i remember hating newsbeuter because i couldn't grep
[22:23:38] <pikapika> Apple is spearheading trash
[22:23:54] <pulse> pikapika, that's bias talking, not objectivity
[22:23:57] <pulse> apple makes billions of dollars
[22:24:02] *** Quits: pi1 (~pi@197.26.97.170) (Quit: WeeChat 2.3)
[22:24:08] <pikapika> Yes because it is a cult of branding
[22:24:11] <pulse> so what?
[22:24:12] <pikapika> Not because its usable
[22:24:23] <pulse> do you think a windows 95 style website would make them any money?
[22:24:27] <pikapika> Things like removing ports from phones are anything but good design
[22:24:29] <Izem> billons doesn't mean the design is good (but it is in this case)
[22:24:30] <pulse> or would this be far preferable https://www.apple.com/iphone-12/
[22:24:31] <bayaz> Title: iPhone 12 and iPhone 12 mini 
[22:24:48] <pulse> Izem, it kind of does. it's well researched and marketed towards customers
[22:24:50] <pulse> not towards pikapika types
[22:24:56] <pulse> who enjoy unix from 1980
[22:25:01] <pikapika> Wrong
[22:25:04] <pikapika> I like good design
[22:25:06] <pyzozord> I had my apple phase for about 5 years. I realize now I was forcing myself to be what I'm not
[22:25:15] <Izem> pulse: yeah apple hci right?
[22:25:17] <pulse> pikapika, your definition of good design is too narrow to make it in the modern world
[22:25:23] <pikapika> pulse, removing useful ports is not "good design" in any universe
[22:25:34] <pyzozord> that's a strong argument :D
[22:25:36] <pulse> pikapika, really? then why did they outsell the previous models by a factor of 2 lol
[22:25:38] <pikapika> Apple is just a signalling thing
[22:25:46] <pyzozord> pulse: because of marketing
[22:25:46] <pulse> and i was talking mostly about webdesign they use
[22:25:50] <pikapika> pulse, why are jordan shoes so popular
[22:25:53] <pyzozord> pulse: not because of missing ports
[22:26:12] <pulse> this "debate" is tiring xD
[22:26:17] <pikapika> People buy Apple to signal something
[22:26:23] <pikapika> Not because they think it is superior
[22:26:26] <pulse> now you're just generalizing
[22:26:31] <Izem> it is though :P
[22:26:31] <pyzozord> yeah it has a strong social signaling aspect
[22:26:37] <pikapika> pulse, it is the most common reason
[22:26:42] <pulse> maybe in america, there's barely a few apple users here where i live
[22:26:46] <pulse> i bought an iphone for work exclusively
[22:26:48] <pulse> i happen to like it now
[22:26:51] <pulse> it's a good product
[22:26:56] <pulse> bit limited, but still good
[22:27:12] <Izem> e.g. the mini is a really good buy right now
[22:27:16] <pyzozord> pulse: that would be because people can't afford it. In the netherlands they can afford it and it totally is a signaling thing here
[22:27:18] <pikapika> Maybe macs are good but with things like removing holes iphone is anything but good
[22:27:27] <pulse> pyzozord, nah, people hate apple here
[22:27:38] <pulse> most people i talk to say they prefer android because it's better
[22:27:43] <Izem> workstation laptops start at 1000, you can get a mini for 900
[22:28:02] <pulse> pikapika, apple has a tendency to be ahead of time
[22:28:10] <pikapika> They don't
[22:28:11] <pyzozord> pulse: in Poland situation is similar, I personaly believe that is an excuse
[22:28:12] <pulse> it pisses off people but ultimately they become defacto
[22:28:16] <pulse> like usb-c
[22:28:18] <pulse> it's a pain in the butt
[22:28:21] <pulse> but ultimately it's the right choice
[22:28:22] <pikapika> Most ui advances were already made in the 80s and 90s
[22:28:28] <pikapika> Modern uis are regressive compared to them
[22:28:32] <pulse> you're wrong pikapika 
[22:28:36] *** Joins: lalitmee__ (~lalitmee@180.94.33.33)
[22:28:38] <pyzozord> pulse: and the real reason is they can't afford it because it can cost as much as a used car
[22:28:40] <pulse> you couldn't even run some modern interfaces in the 90s
[22:28:41] <pikapika> I like excellent design
[22:28:46] <pulse> for the lack of processing power
[22:29:01] <pikapika> pulse, for example 'twm' is more featureful than most modern wms
[22:29:03] <pulse> 3D views and visualizations and whatnot
[22:29:03] <Izem> pikapika: yeah I agree, but for the popular OSes it's still pretty traditional
[22:29:23] <Izem> the web kinda wrecked a big hole in ui design
[22:29:24] <pulse> pikapika, i'd rather use windows 3.1 at that point, lmao
[22:29:28] <pikapika> 3d views are just a gimmick
[22:29:31] <pikapika> Not a useful feature
[22:29:31] <pyzozord> pulse: but anyway go for it if it floats your boat
[22:29:35] <pulse> oh, yeah "gimmick"
[22:29:39] <pulse> because visual appeal is not important
[22:29:40] <pyzozord> but imo it's a waste of money really
[22:29:43] <pulse> humans are totally not visual creatures :p
[22:29:45] <pikapika> twm is highly featureful
[22:29:48] <pulse> we're like groundhogs
[22:30:02] <pulse> pikapika, you're talking from a place of deep, deep bias
[22:30:06] <pikapika> pulse, you just looked at a screenshot
[22:30:09] <pulse> i can understand it as a programmer
[22:30:12] <pikapika> Which is just a matter of theming
[22:30:19] <pikapika> You cannot understand twm without using it
[22:30:22] <pikapika> Without seeing it in motion
[22:30:29] <pikapika> An ui isn't just a pretty picture
[22:30:31] <pulse> it's basic as hell, no amount of theming will help that
[22:30:34] <pikapika> An ui is motion and interaction
[22:30:42] <pikapika> pulse, it is more featureful than windows and mac
[22:30:45] <pikapika> its anything but "basic"
[22:30:47] * pulse gives up :D
[22:30:50] <Izem> pyzozord: privacy, real software, synchronization
[22:30:52] <pulse> "no"
[22:31:00] <Izem> not sure if most people care about that though
[22:31:25] *** Quits: lalitmee_ (~lalitmee@180.94.33.15) (Ping timeout: 260 seconds)
[22:31:28] <Izem> you can't deny that apple wants their customers to have the best, even if they don't need the best
[22:31:31] <pyzozord> Izem: yeah I don't think most people know anything about these things. Also that doesn't sound like things that aren't available on linux
[22:31:39] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:d4b6:3f93:f669:5584)
[22:31:42] <Izem> linux ui is terrible
[22:31:48] <pulse> Izem, agreed for the most part
[22:31:58] <pyzozord> honstly ubuntu with gnome 3 is quite pretty
[22:32:00] <pulse> it's sad too
[22:32:03] <pikapika> I think twm probably predates linux
[22:32:06] <pulse> i liked gnome2 the best tbh
[22:32:08] <pulse> it was comfy
[22:32:19] <pulse> gnome3 makes me want to stick a fork in my knee
[22:32:24] <Izem> pyzozord: only thing I think people seem to like is synchronization and sharing
[22:32:24] <pyzozord> I like gnome3 much better to be honest. That activity thing, I really like it
[22:32:28] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.2)
[22:32:30] <pulse> i can't stand gnome3
[22:32:37] <pulse> even unity is better at this point
[22:32:44] *** Joins: Macuser (~Macuser@216.30.159.201)
[22:32:55] <pyzozord> oh no I didn't like unity. I was installing gnome3 when they had the unity phase
[22:32:55] <Izem> I remember seeing someone with mostly windows apps on the dock in a mac xD
[22:33:03] <Izem> I was like why ...
[22:33:09] <pulse> if the linux community wasn't so vile and so fragmented, they would come together to make something that would rival macos
[22:33:12] <pulse> and then things would be great
[22:33:24] <Izem> it's not the community
[22:33:33] <pulse> but they can't do that because the linux community is literally the most vile community the internet has
[22:33:34] <Izem> who's going to design it?
[22:33:38] <pyzozord> If they all united I think macos wouldn't come even close 
[22:33:45] <pulse> Izem, it is. it's absolutely disgusting how unfriendly the linux community is
[22:33:49] <Izem> redhat is doing their own thing, love it or hate it
[22:34:11] <Izem> pyzozord: they could've shared a ui with macos :P
[22:34:22] <pikapika> twm has more advanced features than modern win/mac
[22:34:28] <pikapika> Its very popular and well liked
[22:34:29] <DPA> If they all united, you'd get Gnome OS, but with no good alternatives.
[22:34:39] <Izem> :O
[22:34:55] <pyzozord> not just ubuntu people, all linux people
[22:35:16] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:d4b6:3f93:f669:5584) (Ping timeout: 252 seconds)
[22:35:32] <Izem> gnome3 makes no sense but it is pretty slick
[22:35:38] <Izem> nice product
[22:35:53] <pyzozord> What doesn't make sense about it?
[22:36:02] <Izem> easy to build for too, kde on the other hand whew
[22:36:09] <Izem> the very non traditional ui
[22:36:18] <DPA> (By the way, Gnome OS is an actual thing, it's not ubuntu)
[22:36:36] <pyzozord> Izem: what do you mean by non traditional ui?
[22:37:17] <Izem> no menus, no dock, no task bar, no system tray ... etc
[22:37:31] <pyzozord> oh, I love all that :D
[22:37:39] <pyzozord> there is system tray though
[22:37:40] <Izem> yep, you are a programmer
[22:37:55] <Izem> that tray only has 2 or 3 defined elements
[22:37:57] <pyzozord> no no I mean I love not having all of that
[22:38:14] *** Joins: bitmega (~bitmega@2605:a601:a93c:4f00:69b2:e79f:cb3e:d5b8)
[22:38:14] <Izem> other programs cannot use it without extensions and it looks absolutely terrible
[22:38:19] <pyzozord> I just got acitivies
[22:38:53] <pyzozord> Oh yeah other programs don't integrate well sometimes
[22:39:02] <Izem> also massive header / window titles
[22:39:12] <pyzozord> Yeah that is annoying too I changed that
[22:39:14] <pikapika> pulse, I give a great importance to good ui
[22:39:18] <DPA> There is also Gnome CSD, and everything has a very dumbed down / small feature set. Many things aren't very customizable/modular either.
[22:39:21] <pyzozord> gsettings or something I don't remember
[22:39:28] <Izem> lol
[22:39:41] <Izem> it's not even configurable in a user friendly way
[22:39:51] <Izem> gnome settings is a seperate app
[22:40:18] <pulse> pikapika, you strike me as someone who doesn't do front-end day to day
[22:40:23] <pyzozord> eh, if you wanna change the defaults you need to work for it, I can understand that strategy
[22:40:30] <Izem> and the file manager is terrible ...
[22:40:45] <pikapika> pulse, most front end today is really bad
[22:40:46] <pyzozord> I think it looks nice :D it's servicable
[22:40:51] <pulse> pikapika, that wasn't my remark :p
[22:41:01] <Izem> or, you could have traditional defaults and allow folks to change it
[22:41:01] <pulse> i work with front-end nearly every day
[22:41:04] <pyzozord> I'm surprised how much I like gnome3 and how people hate it
[22:41:06] <Izem> like kde
[22:41:08] <pikapika> I am not putting the blame on the designers wholly, its just as much the problem with those telling them what to do
[22:41:12] <Izem> kde has other issues
[22:41:15] <pulse> i'm very well aware of how important visual side of the design is
[22:41:20] <pulse> visual appeal is like 60% of the design
[22:41:21] <Izem> it does look slick though
[22:41:30] <Izem> 90% I'd wager
[22:41:30] <pulse> and trends change, just like fashion changes
[22:41:30] <pikapika> pulse, it is
[22:41:35] <pulse> current trend is flat
[22:41:39] <pikapika> But after we get the motions correct
[22:41:39] <pulse> it's not the first nor the last trend
[22:41:52] <pulse> pikapika, also, it's impossible to please everyone, but it's possible to please 90%
[22:41:56] <Izem> trends come and good but good design is timeless
[22:42:01] <pikapika> A good skin can't save a bad structure, but a good structure is usable even with a bad skin
[22:42:08] <Izem> yeah
[22:42:19] <pulse> sure
[22:42:24] <Izem> does apple own the global menu?
[22:42:29] <pulse> but usability and design go hand in hand
[22:42:35] <pulse> Izem, nah
[22:42:39] <Izem> much better idea than menus on all windows
[22:42:40] <pulse> .. i think
[22:42:47] <pulse> no, that's one thing i dislike on mac, lol
[22:42:51] <pyzozord> I think it's important to distinguish between graphic design and interface/ux design
[22:42:52] <pulse> it's a preference though
[22:43:02] <pikapika> pyzozord, exactly
[22:43:13] <Izem> can you? graphic design is part of the ux somewhat
[22:43:18] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[22:43:19] <Izem> but yeah I guess
[22:43:31] <DPA> Gnome CSD managed to singlehandedly break consistent window borders for everyone but gnome. It's not just a design trend, its sabotage.
[22:43:32] <pyzozord> Izem: yeah how it looks vs how it behaves
[22:44:04] <Izem> yeah e.g. like use of certain colours to make things easier to use or something idk
[22:44:31] <pikapika> Izem, yes good contrast is important
[22:44:51] <Izem> so I guess we just need more open hci and graphics people :)
[22:44:59] <pyzozord> I guess I am kind of the mac user of the linux :P
[22:45:08] *** Quits: lalitmee__ (~lalitmee@180.94.33.33) (Ping timeout: 252 seconds)
[22:45:09] <pyzozord> aka the ubuntu user :D
[22:45:32] <pyzozord> I don't care much. It looks nice, it's well supported and I got my terminal
[22:45:42] <Izem> but then you don't get the fresh ootb gnome from redhat :P
[22:45:48] <pikapika> Yeah don't listen to the distro wankery
[22:45:52] *** Quits: hexingb (~hexingb@2409:8900:2721:daa6:64c7:a70f:8b7f:4dcc) (Ping timeout: 245 seconds)
[22:46:05] <Izem> terminals lol
[22:46:08] <pikapika> If a task requires a highly distro specific approach you are probably doing it wrong
[22:46:33] <pyzozord> Izem: I do pretty much 50% of the tasks in terminal, other 50% in chromium
[22:46:36] <Izem> terminals and browsers seem like worse is better
[22:46:42] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:d4b6:3f93:f669:5584) (Ping timeout: 245 seconds)
[22:46:44] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:dc0c:f0b2:7d10:1786)
[22:47:04] <pyzozord> I believe in the Worse Is Better :D
[22:47:24] <Izem> if I worked in the 70s I'd be pretty disappointed to see people using terminal emulators in 2020s
[22:47:25] <pyzozord> https://dreamsongs.com/WorseIsBetter.html
[22:47:26] <bayaz> Title: Worse Is Better 
[22:47:31] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[22:47:35] <pikapika> Izem, wrong
[22:47:43] <pikapika> We have multiple windowing now
[22:47:52] <Izem> mutiplexing?
[22:47:55] <pikapika> Just having a terminal vs having multiple windows is a very different thing
[22:47:57] *** Quits: bitmega (~bitmega@2605:a601:a93c:4f00:69b2:e79f:cb3e:d5b8) (Quit: WeeChat 3.2.1)
[22:48:08] <Izem> that's old :P
[22:48:10] <pikapika> Izem, we can launch multiple windows of your xterm or whatever
[22:48:19] <pikapika> Did we have that in the 70s?
[22:48:23] <Izem> yeah
[22:48:26] <pikapika> Ok
[22:48:39] <pikapika> I'd still say with modern mouse driven wms, its easier
[22:48:48] <pulse> it's all nice to be nostalgic about old interfaces but if you actually used one you'd pee yourself laughing
[22:48:50] <pyzozord> well one persons trash is another pesons treasure, otherwise this world would be boring
[22:48:51] <Izem> it use the mouse too
[22:48:52] <pulse> i mean it's usable obviously
[22:48:54] <pikapika> Just having a terminal vs having multiple windows is a very big difference
[22:48:58] <Izem> s/use/used/
[22:49:01] <mrig> A different desktop might perhaps want to deal with data in a completely different way; That would be fun to investigate.
[22:49:15] <pulse> it's hard to overstate just how many more possibilities we have today than, say, mid 90s
[22:49:25] <pulse> and how much more stable our software is
[22:49:29] <Izem> what do you mean?
[22:49:40] <pulse> on win95 you'd work on something, and your system would randomly freeze
[22:49:42] <pulse> for no reason, lol
[22:49:50] <Izem> oof
[22:49:54] <pyzozord> mrig: yeah I think both GUI and OOP are Alan Kays invetntions and both highly misunderstood
[22:49:56] <pulse> if your red hat bricked in the 90s, good luck
[22:49:59] <GeDaMo> Multiple terminal windows and a mouse are more 80s than 70s :P
[22:49:59] <pulse> no internet to save you
[22:50:18] <Izem> GeDaMo: oh ok
[22:50:24] <pikapika> pulse, didn't they have big comprehensive manuals instead back then
[22:50:26] <pikapika> due to lack of internet
[22:50:34] <pulse> yeah, but you know how much that covered, right
[22:50:39] <pulse> and you can't search the manual
[22:50:46] <pikapika> yeah
[22:50:49] <pulse> you have to spend 3 hours investigating the issue first
[22:50:52] *** Quits: jess (~jess@libera/staff/jess) ()
[22:50:59] <pikapika> Thats one big benefit of a pdf over a printed book
[22:51:01] <pulse> we're super spoiled but it's hard to notice
[22:51:09] <mrig> The file system is really little more than nomenclature and key value pairs.
[22:51:17] <pikapika> even something as primitive as ctrl+f is a big improvement over a textbook even with an index
[22:51:29] <pulse> yeah
[22:51:35] <Izem> index is easier
[22:51:49] <pyzozord> pulse: but we are also in a much bigger and much more complex world than they were back then
[22:51:51] <Izem> there are indexes in pdfs :P
[22:51:52] <InPhase> pulse: I'm not sure why you think the Linux community is unfriendly.  The whole reason I was drawn to Linux in the first place was because of how friendly the Linux community seemed.  Linux users tend to have shared values about computing, information, engineering, principles of sharing, gift cultures, etc.
[22:51:57] <pikapika> Izem, note index means a table of words to page numbers
[22:52:03] <pikapika> the table of contents is a different thing
[22:52:05] <pyzozord> pulse: we need these improvements to navigate this vast complexity
[22:52:07] <Izem> I know
[22:52:09] <pulse> InPhase, in theory, i agree
[22:52:10] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[22:52:11] <pikapika> index pages were typically at the end of the obok
[22:52:12] <pulse> InPhase, in practice, not so much
[22:52:20] <pikapika> Izem, yes I was just clarifying in case you thought otherwise
[22:52:21] <Izem> index tells you where topical stuff is
[22:52:27] <pikapika> Index is useful certainly
[22:52:28] <Izem> ctrl-f is everything
[22:52:29] <pulse> i've never seen more vile exchanges than on various linux boards
[22:52:37] <pulse> and i've been to some pretty vile places on the internet
[22:52:42] <pulse> linux community takes the cake
[22:52:44] *** Joins: vysn (~vysn@user/vysn)
[22:52:53] <Izem> that doesn't represent the reality though
[22:52:55] <pikapika> I'd say its less linux more just you came across some shitty people
[22:53:05] <pulse> idk
[22:53:05] <pikapika> Linux people are quite friendly here on libera for example
[22:53:07] <pulse> i don't think so
[22:53:07] <pikapika> no vileness
[22:53:08] <Izem> that's probably a troublesome aspect of the internet
[22:53:09] <pyzozord> InPhase: I want to persent the same kind of culture here but when you describe it I feel I'm not quite there yet
[22:53:23] <InPhase> pulse: I've not experienced whatever specific things you are recalling.  But I don't think that's representative of Linux users as a whole.  I've encountered a lot, and it tends to be a pretty decent group compared to the average.
[22:53:32] <pikapika> Its just you must have come across something like a stormfront hangout or whatever
[22:53:34] *** Joins: Klinda (~klinda@2.227.251.209)
[22:53:41] *** Joins: nvmd (~nvmd@user/nvmd)
[22:53:41] <pulse> InPhase, i'm not saying all linux users are like that
[22:53:51] <pulse> just that linux communities tend to gravitate towards nastiness for some reason
[22:53:59] *** Joins: Narrat (~omnius@p200300df5f01ca1206ea56fffe2e7cdc.dip0.t-ipconnect.de)
[22:54:00] <pulse> they're especially unfriendly towards newbies
[22:54:07] <InPhase> pulse: Notably there are a LOT of Linux users now, so there are absolutely going to be piles and piles of bad apples.  But I think it's still a solid, positive, and supportive group on the whole.
[22:54:07] <pikapika> I think you came across some stormfront forum or some such neo-nazi bullshit
[22:54:10] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 240 seconds)
[22:54:10] <Izem> but I guess you could say coporate is the biggest linux user xD
[22:54:17] <vdamewood> Hi, people etc.
[22:54:23] <Izem> hola
[22:54:30] <pulse> the cycle goes like this. newbie has a problem. newbie asks for solution. forum responds with 10 wildly different solutions. newbie tries all 10. none work. forum accuses newbie that it's their fault
[22:54:34] <pulse> i've seen this one so many times
[22:54:39] <pulse> almost down to the letter
[22:54:43] <pikapika> pulse, oh thats a different issue
[22:54:49] <pulse> pikapika, that's just one example
[22:54:56] <pulse> some of the skilled linux people are no better
[22:54:58] <pikapika> pulse, I'd say the bsd people can be worse with that
[22:55:05] <pikapika> at least you got answers from the linux forum
[22:55:05] <pulse> maybe i just found the most bitter possible communities, idk
[22:55:19] <vdamewood> pulse: What about the snide RTFM comment?
[22:55:26] <Izem> bsd actually has nice manuals though
[22:55:44] <pulse> vdamewood, at least RTFM is honest :p
[22:55:53] <pyzozord> my experience with openbsd people was very nice
[22:55:57] <InPhase> pulse: Tech support requires some extreme patience whenever people don't follow instructions exactly, or skip over requests for required information to diagnose a problem efficiently.
[22:56:04] <pikapika> pyzozord, the openbsd I think has the most "colorful" types
[22:56:12] <pyzozord> very friendly and knowlegable
[22:56:40] <InPhase> pulse: That patience is great to have, but it's a small subset of all people who have it.
[22:56:44] <pulse> InPhase, i've never seen that happen on windows boards
[22:56:51] <pulse> literally not even once
[22:57:01] <pulse> on windows answer boards, no one would attack others
[22:57:03] <InPhase> pulse: Probably because you can't solve problems with Windows.  :-P  You just reinstall.
[22:57:08] <pulse> if no answer was to be had, it would simply die out
[22:57:13] <pulse> InPhase, ha
[22:57:13] <Izem> windows forums are why I started using linux lol
[22:57:20] <pulse> Izem, really?
[22:57:29] <pulse> maybe i live in a parallel universe
[22:57:47] *** Joins: zim (~zim@193.32.127.219)
[22:57:48] <InPhase> pulse: Linux is a different beast, because all problems are solvable, but the complexity of the solutions goes up in required technical skill as the problem gets more challenging.
[22:57:49] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 252 seconds)
[22:57:54] <Izem> yeah, I wanted to learn about windows when I started school, it was pretty much just why do you want to do X etc
[22:58:07] <pulse> InPhase, true, but that's no excuse for thinly veiled personal attacks and massive egos
[22:58:09] <InPhase> pulse: And, most beginners will not have the technical skill for that extra set of solvable problems.
[22:58:12] <pulse> both of which are common
[22:58:14] <Izem> but my single experience isn't everything
[22:58:25] <pulse> obviously you can't ask for infinite patience
[22:58:30] <Izem> linux has documents everywhere so much easier to learn about
[22:58:34] <pulse> but you also assume people to have some kind of standards for discourse
[22:58:49] <pulse> and linux community, at least in my experience, at large, is not a friendly place
[22:59:05] <InPhase> pulse: I've seen attacks all over the place, on anything involving technical complexity.  And yes, it shouldn't happen.  But I don't think Linux has any special amounts of this compared to other technical topics.
[22:59:17] <pulse> maybe
[22:59:40] <pyzozord> InPhase: I think there might a bit of it
[22:59:53] <pyzozord> Linus Torval was not exactly paragon of friendliness
[23:00:16] <Izem> wasn't that just the culture back then?
[23:00:17] <InPhase> Yeah, he certainly had some issues to work through.  It sounds like he's actually making an effort on that now.
[23:00:18] <pyzozord> and if he wants or not as the founder and leader of the linux kernel he is something of an example
[23:00:26] <Izem> or is it Torvalds himself?
[23:00:43] <pyzozord> I believe that culture in any group stems from the top
[23:00:57] <pulse> i dreamt tonight Linus from LTT was in my room and was asking me about my PC build
[23:01:01] <pulse> terrifying
[23:01:05] <Izem> lol
[23:01:06] <InPhase> I think Linus is pretty far removed from most Linux users though, and thus it doesn't really result in any influence.
[23:01:28] <pikapika> Torvalds is a friendly man
[23:01:31] <dTal> fron what I've seen of Torvalds rants, they typically result from extreme provocation
[23:01:59] <dTal> not neccesarily social provocation, technical will do, but he is not a man who tolerates BS
[23:02:01] <pikapika> Yeah those "rants" being cited as proof of torvalds being angry is bullshit.
[23:02:06] <pyzozord> he does seem like a nomral, even cool, nerdy guy in interviews
[23:02:14] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[23:02:17] <Izem> heh I wonder if they actually will get rust in the kernel
[23:02:20] <pyzozord> I was a bit surprised to learn about public bashing etc
[23:02:21] <pikapika> Anyone will seem insane if you collate their angrist moments
[23:02:24] <pikapika> angriest
[23:02:27] <Izem> yeah
[23:02:41] <pikapika> Izem, yeah its bullshit
[23:02:46] <pikapika> Torvalds is a very friendly guy
[23:03:09] <dTal> the thing is, Torvalds can't "fire" kernel contributors
[23:03:11] <pulse> for some definitions of friendly :)
[23:03:13] <InPhase> pikapika: Yeah, I think he is both.
[23:03:21] <Izem> like gordon ramsay :P
[23:03:25] <pikapika> InPhase, both as in?
[23:03:26] <dTal> so the rants perform an important social function
[23:03:35] <TJ-> dTal:oh he can, and has - refusing to accept their pull requests for example
[23:03:45] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[23:03:50] <InPhase> pikapika: A friendly guy, usually.  And a person who loses his cool sometimes when he really should be acting professionally.  And, he has acknowledged this and announced he's working on it.  I take him at his word on that.
[23:04:02] <pikapika> InPhase, which means just a normal guy
[23:04:10] <pikapika> Everyone has angry moments sometimnes
[23:04:11] <pulse> didn't they make him take a friendliness class or something
[23:04:19] <CoJaBo> Man, absolutely none of our devs, myself included, can spell "idempotent"
[23:04:28] <InPhase> pikapika: Pretty much.  It takes a lot of work to not snap at anyone ever, when you're observed a lot.
[23:04:28] <pikapika> And like if someone starts spewing antivax bs in a kernel mailing list, it naturally will lead to angery
[23:04:31] <pikapika> *anger
[23:04:37] <dTal> TJ-: permanently? As in "I will no longer merge anything you write no matter how good it is?"
[23:04:39] <pyzozord> InPhase: me too, and I believe this is deep introspection, not shallow calculated move to keep power close
[23:04:55] <Izem> what?
[23:05:25] <pikapika> Its just that there has emerged a sort of cottage industry around making news articles of torvalds angry moments
[23:06:19] <DPA> I think there was an uni which decided making a study knowingly sending bad patches was a good idea, which got banned. Not sure if permanently, though.
[23:06:30] <pyzozord> I mean computer guys are not the friendliest bunch. We didn't choose computers because we wanted to work with people
[23:06:31] <Izem> are there other projects that are as big as linux source wise
[23:06:34] <pyzozord> at least I didn't :P
[23:06:39] <InPhase> pikapika: Trashing on famous people by pointing out their most flawed moments has become a global passtime.  While sure, people should work on improving their worse aspects, on the whole this is not particularly healthy for society to be doing to famous people.  It dehumanizes them.
[23:07:11] <Izem> web mob :P
[23:07:22] <pikapika> InPhase, well no sometimes people deserve to be called out
[23:07:29] <pikapika> But torvalds usually isn't that case
[23:07:40] <InPhase> pikapika: Yes, but then it needs to be considered in balance.
[23:07:49] *** Joins: vicfred (~vicfred@user/vicfred)
[23:07:55] <pikapika> Like if someone is spewing neonazi bullshit, they deserve to be slammed hard
[23:08:08] <pyzozord> Trashing on public people is not healthy. But not discussing behavior of leaders of communities is also not healthy
[23:08:21] <InPhase> Take anyone in this room, put a camera on them for their entire life up until now, and we could trivially construct an edited narrative of their life making them look horrible.
[23:08:33] <Izem> D:
[23:08:44] <InPhase> Clearly especially Izem!  ;)
[23:08:58] *** Joins: menace (~someone@ppp-93-104-186-17.dynamic.mnet-online.de)
[23:08:58] *** Quits: menace (~someone@ppp-93-104-186-17.dynamic.mnet-online.de) (Changing host)
[23:08:58] *** Joins: menace (~someone@user/menace)
[23:09:08] *** menace is now known as Deknos
[23:09:29] <Izem> the scary thing is that we probably can do this somewhat :P
[23:09:32] <pyzozord> I think both discussion and compassion are required. Public figures must be held up to higher standard. But they should also receive a lot of understanding
[23:09:56] <Izem> a lot? idk
[23:09:59] <pyzozord> They are not just humans. They are humans a lot of humans look up to
[23:10:02] <mrig> I don't think that Mr Torvalds supports fools lightly, this is probably why the linux community effort on the Kernel worked. But with the massive popularity of both Linux and programming more generally, there is a whole new dynamic at play.
[23:10:24] <Deknos> todays blogs, tutorials and co should not be a website anymore but a git repository. change my mind.
[23:10:27] <mrig> Which he has had to learn to pander to.
[23:10:42] <InPhase> pyzozord: Well, do famous people really need to be held to a higher standard?  I question this premise.
[23:10:45] <mrig> Would love to chat with the guy, I really would.
[23:11:14] <pyzozord> InPhase: in my opinion yes, because they are received as examples to be compied whether they want it or not
[23:11:21] <InPhase> pyzozord: Shouldn't we really be holding everyone up to whatever standard we set for appropriate conduct?
[23:11:34] <user51> pyzozord: skin in the game. i don't think you'd like people shoving terrible code into a kernel you're a major figure of.
[23:11:41] <pyzozord> InPhase: it's simply "with more power comes more responsibility"
[23:11:46] <InPhase> Because it seems to me most people trashing on famous people don't meet the standard they set for those people.
[23:12:16] <pyzozord> InPhase: and I don't think they need to. Noone look ups to the trashers
[23:12:25] <Izem> you mean like tabloid stuff?
[23:12:25] <pyzozord> s/look ups/looks up/
[23:12:27] <mrig> A curious situation as his kernel has lead to the development of the very networks size that has made him famous in the first palace, I doubt very much that he wants that fame, always struck me as being very down to earth.
[23:12:46] <InPhase> pyzozord: Maybe we should stop with the "look up" thing then maybe.
[23:13:04] <pyzozord> InPhase: we should but I don't think we can change how people work
[23:13:23] <InPhase> pyzozord: Although that's exactly the premise...  That famous people should change how they work.  :-P
[23:13:25] <Izem> sure, you can just say I'm not a role model like charles barkley :P
[23:13:36] <InPhase> pyzozord: Because...  other people can't?
[23:13:46] <pyzozord> InPhase: essentially, sadly, yes
[23:14:00] <pyzozord> life is unfair
[23:14:10] <pyzozord> but also, life is unfair
[23:14:28] <mrig> Izem: much of the web is tabloid, and social media is a whole new level of gossip.
[23:14:43] <Izem> yep
[23:14:48] <mrig> the bar has lowered significantly.
[23:14:49] <Izem> pretty weird
[23:15:04] <mrig> Im not grumbling about it, just making an observation.
[23:15:13] <Izem> when I see news reporting on social media I chuckle
[23:15:15] <InPhase> pyzozord: It is.  But as individuals I think we should aim to oppose the unfair that we see around us.  For me, that includes trying to hold famous people as just humans like everyone else.
[23:15:33] <Izem> that's like 10 levels of jokes right there
[23:16:06] <pyzozord> InPhase: I agree with that, I think that's just reminding everyone that public figures deserve a lot of compassion and understanding
[23:16:21] <pyzozord> InPhase: but I don't think that means less responsibility for the public figures
[23:16:28] <Izem> time for society to submit itself to the algorithm
[23:16:39] <Izem> ... or has it already?
[23:17:08] <pyzozord> I think there is a way of critiquing someone and acknologing they're a human being.
[23:17:22] <Izem> algorithm age, human happies will be perfectly decided by a fair entity :P
[23:17:31] <Izem> s/happies/happiness/
[23:17:35] <pyzozord> acknowledging
[23:17:45] *** Quits: zwr (~zwr@2804:d45:b966:fb00:7f47:4b3e:500a:5f92) (Remote host closed the connection)
[23:17:48] <Izem> I think we are overthinking it
[23:18:38] <Izem> you can react to something, but what you say is going to be different if you are preparing an article for the news or some paper
[23:18:46] *** Joins: sivert (~sivert@2601:144:100:f6a0:81bc:53f4:3c7a:71d1)
[23:19:35] <pyzozord> Just to be clear: I don't know how serious was the situation with Linus Torvalds, I'm kind of talking hipothetically
[23:19:47] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[23:19:55] <pyzozord> and I hope I didn't come across as one of the trashers
[23:19:58] <Izem> I think InPhase is talking about mob stuff
[23:20:11] <pyzozord> because I am still very much fan of Linus Torvalds
[23:20:11] <Izem> that seems to happen online for some reason
[23:21:02] <mrig> Oh gossip off line leads to all sorts of trouble at times.
[23:21:23] <mrig> It's massively scaled up on the internet though.
[23:21:26] <Izem> yes gossip sucks
[23:21:35] <Izem> but I talking about cancel culture stuff
[23:21:44] <mrig> Gets people lynched.
[23:21:48] <Izem> or whatever the term is, I don't even thing people are thinking
[23:22:27] <mrig> So etiquette and decorum become pretty important, I think.
[23:22:27] *** Joins: jacks2 (~bc8165b6@217.29.117.252)
[23:22:49] <Izem> how regular people have so much time to look stuff up in mail archives or twitter timelines is uncanny
[23:22:51] <wedr> I see cancel culture as anti-gossip
[23:22:51] <jacks2> I'm writing a javascript golf code, is there a way to make this less verbose? (x, y) -> x+y?
[23:23:01] <pyzozord> yeah that cancel culture is terrible too
[23:23:02] <jacks2> ie, can you pas an operator as a function without using lambda/arrow functions?
[23:23:09] <pyzozord> I'm not subscribing to that at all
[23:23:40] <pulse> the cancel culture should add a "retry" button
[23:23:47] <wedr> jacks2, not sure. Never heard of anything less than a lambda function.
[23:24:00] <pyzozord> jacks2: can you say a bit more, I'm not sure I understand
[23:24:46] <pyzozord> pulse: hah, try/catch culture
[23:24:54] <wedr> try/finally culture
[23:25:04] <pulse> switch culture
[23:25:31] <jacks2> pyzozord, can you do something like + instead of (x,y -> x+y)
[23:25:49] *** Quits: blaklistd (~blaklistd@user/blaklistd) (Quit: The Lounge - https://thelounge.chat)
[23:25:51] <pyzozord> jacks2: (x,y -> x+y) is not javascript
[23:25:52] <Izem> maybe, with map
[23:26:16] <jacks2> pyzozord, what? I'm pretty sure it is
[23:26:21] <Izem> but I'm guessing + is not a symbol
[23:26:31] <pyzozord> jacks2: there is no -> operator in js
[23:26:58] <pyzozord> also lambdas with multiple arguments must have arguments wrapped in parens
[23:27:02] <jacks2> oh right, I meant =>
[23:27:10] <pyzozord> the closest would be (x,y) => x+y
[23:27:16] <jacks2> anyway, is there a more concise way of writing the same thing
[23:27:30] <pyzozord> no that's the simplest form
[23:27:32] <Izem> + :P
[23:27:40] <jacks2> Izem, that doens't work
[23:27:41] <pyzozord> yeah just x+y :D
[23:27:48] <Izem> it's just not available as a name
[23:28:29] <GeDaMo> jacks2: what's the challenge?
[23:28:44] *** Joins: blaklistd (~blaklistd@user/blaklistd)
[23:30:42] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:31:53] <pyzozord> you can do const f = (x,y) => x+y and then just pass f around
[23:32:30] <GeDaMo> It's for code golf, as few characters as possible
[23:32:50] <pyzozord> oh I didn't know what a code golf was
[23:34:19] *** Joins: mdbauman (~mdbauman@99-184-99-19.lightspeed.gnvlsc.sbcglobal.net)
[23:35:22] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[23:35:43] *** Joins: Krail (~Krail@user/alexdelarge)
[23:35:44] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[23:35:46] *** Quits: mnd999_ (~mark@2001:8b0:da3:76a2:b30d:a07c:7290:5ed6) (Ping timeout: 252 seconds)
[23:36:37] *** Parts: Krail (~Krail@user/alexdelarge) ()
[23:36:42] <[itchyjunk]> we will talk about java gui today
[23:36:52] <[itchyjunk]> and my last attempt to dl java fx broke it
[23:37:01] <[itchyjunk]> hopefully I can clean that up
[23:38:22] *** Joins: bitmega (~bitmega@2605:a601:a93c:4f00:69b2:e79f:cb3e:d5b8)
[23:38:51] *** Joins: lunarkitty (uid501895@user/pyra)
[23:39:35] <ullbeking> Does anybody here have bash Cookbook 2nd ed. in paperback?
[23:40:23] *** Quits: kuku (~kuku@user/kuku) (Remote host closed the connection)
[23:40:38] *** Joins: humanface (~humanface@20014C4E1C505700C81FBCF815197CD0.dsl.pool.telekom.hu)
[23:41:00] <[itchyjunk]> not i
[23:45:29] <DPA> How was that psychological phenomenon called where one can let go of a project less easily the longer one has worked on it?
[23:45:48] <InPhase> DPA: Sunk cost fallacy?
[23:46:00] <DPA> Yes, thanks.
[23:46:29] <Izem> making a browser?
[23:46:57] <pyzozord> DPA: https://medium.com/better-humans/cognitive-bias-cheat-sheet-55a472476b18
[23:50:18] <[itchyjunk]> looking at fallacy cheat sheets can lead to a different fallacy
[23:50:46] <[itchyjunk]> https://existentialcomics.com/comic/9
[23:50:47] <bayaz> Title: The Adventures of Fallacy Man 
[23:52:12] <pyzozord> hah :D
[23:52:44] <pyzozord> well having a skill is one thing knowing when to deploy the skill is another skill
[23:53:25] <[itchyjunk]> knowing tomato is a fruit is knowledge. knowing not to put it in fruit salad is wisdom
[23:53:56] <pyzozord> deep truth
[23:54:14] <Izem> lol
[23:54:26] <Izem> this is exactly what happens
[23:55:57] <pyzozord> [itchyjunk]: btw of the previous discussion about proving something correct I think this guy explains it better than I could https://www.youtube.com/watch?v=TTM_b7EJg5E
[23:55:58] <bayaz> Title: The Do's and Don'ts of Error Handling â€¢ Joe Armstrong â€¢ GOTO 2018 
[23:56:36] <[itchyjunk]> can't watch videos for now, on campus
[23:57:16] <[itchyjunk]> I didn't realize the professor in the video I linked was the same person who contributed to the HoTT book
[23:57:18] <pyzozord> the tldr is you can only prove program doesn't have inconsistancies, you can't prove it does something actually useful
[23:57:36] *** Quits: bitmega (~bitmega@2605:a601:a93c:4f00:69b2:e79f:cb3e:d5b8) (Changing host)
[23:57:36] *** Joins: bitmega (~bitmega@user/bitmega)
[23:57:38] <[itchyjunk]> I was talking about proof in a type system
[23:57:44] <[itchyjunk]> he mentions that in his video
[23:57:59] <[itchyjunk]> to have a proof there means something very specific
[23:58:00] <pyzozord> and I told you I was talking about something different :P
[23:58:12] <[itchyjunk]> yes but I said "well in type context"
[23:58:23] <[itchyjunk]> but then that stupid irc client example was brought up
[23:58:34] <[itchyjunk]> which is what really irked me
[23:59:19] <pyzozord> probably some kinda bias :P
[23:59:32] <[itchyjunk]> nothing to do with irc
[23:59:37] <pyzozord> irc-bias
