[00:00:25] <Arokh> I guess github uses an older compiler? https://github.com/dotnet/roslyn/issues/32572
[00:03:22] *** Joins: zaher_ (~zaher@37.48.157.207)
[00:05:32] *** Quits: zaher (~zaher@37.48.177.18) (Ping timeout: 268 seconds)
[00:06:52] *** Joins: TheGuestMovie (~TheGuestM@173.231.114.74)
[00:08:07] *** zaher_ is now known as zaher
[00:10:45] *** Joins: Fiji (~Fiji@user/fiji)
[00:23:14] <JakeSays> Arokh: what does that have to do with github?
[00:24:02] <Arokh> A github action fails due to that.
[00:24:08] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[00:24:55] <JakeSays> ah
[00:28:19] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:b037:9ee3:7136:164b)
[00:28:39] <TheGuestMovie> is there a site where I can input a URL and it tells you which frontend libs/framework was used to create it?
[00:32:11] *** Quits: jamea (~jamea@200.68.140.79) (Ping timeout: 264 seconds)
[00:43:04] *** Parts: TheGuestMovie (~TheGuestM@173.231.114.74) ()
[00:45:35] <edcba> wow MIDI 2.0, there are standards evolving slower than http or maybe even IP
[00:55:16] <ekh> when I use BinaryReader to go thru csv file, do I need to take into consideration the comma and skip it?
[00:55:56] <ekh> I mean after I do for example br.ReadInt64 and br.ReadDecimal calls
[00:56:12] <JakeSays> why are you using binaryreader?
[00:56:25] <ekh> not sure, stackoverflow? :P
[00:56:30] <JakeSays> lol you can't use binary reader to parse a csv
[00:56:51] <JakeSays> ReadInt64 expects the data to be an 8 byte int
[00:57:05] <JakeSays> in csv it's text
[00:57:46] <ekh> then I blame this guy https://stackoverflow.com/a/67535541 :P
[00:57:53] <ekh> so, normal streamreader?
[00:59:41] <JakeSays> that guy isn't using a binary reader to read csv
[01:00:18] <ekh> quoting "var br = new BinaryReader(stream);"
[01:00:20] <JakeSays> use a textreader
[01:00:28] <ekh> will do
[01:08:11] *** Quits: ezio (~ezio@user/ezio) (Ping timeout: 264 seconds)
[01:08:33] <ekh> ok, much faster. from 7+ minutes to 1 minutes 28sec
[01:16:02] *** Joins: zaher_ (~zaher@178.171.174.130)
[01:19:42] *** Quits: zaher (~zaher@37.48.157.207) (Ping timeout: 260 seconds)
[01:21:16] *** Joins: FlipFlop (~FlipFlop@user/fl1pfl0p)
[01:25:23] <Nasp> And more insecure right?
[01:33:40] <JakeSays> Nasp: what?
[01:34:32] <bomb> String.format() is 3x faster in Java 17
[01:37:47] <ekh> I think Nasp's comment is for me :D
[01:38:39] <JakeSays> i know
[01:39:00] <ekh> TIL, str.Split(new [] {','}) is faster than str.Split(',')
[01:39:53] <JakeSays> you shouldn't be using split
[01:41:00] <ekh> what should I use?
[01:41:19] <JakeSays> you should be parsing the string using a state machine
[01:41:38] <JakeSays> splitting on commas won't handle 0,"a,b",9
[01:42:05] <ekh> my record consist of int,decimal,long
[01:42:46] <JakeSays> ah well then you definitely shouldn't be splitting.
[01:43:33] <ekh> elaborate please :P
[01:43:42] <JakeSays> iirc (int|decimal|long).Parse() accept a span<char>
[01:44:13] <JakeSays> so you just find the start and end position of the first number and pass a span then repeat for the second, etc
[01:44:39] <JakeSays> that eliminates a lot of gc and string copying overhead
[01:51:43] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[01:51:55] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:7411:242:32c0:bf72) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:55:44] <ekh> that is 10 seconds faster. it is now at 57 seconds :P (the reading/parsing part)
[01:56:57] *** Joins: kstatz12 (~karl.stat@205.178.87.116)
[01:58:39] *** Joins: khanred (~khanred@user/khanred)
[01:58:44] <khanred> o/
[02:04:06] <ekh> JakeSays should I be using ReadLine or something else?
[02:04:55] <JakeSays> ekh: well, if the data is 100% numeric, then i'd just read a character at a time and handle end of line myself
[02:09:16] *** Quits: jess (~jess@libera/staff/jess) ()
[02:09:27] *** Joins: zaher__ (~zaher@37.48.157.207)
[02:12:23] *** Quits: zaher_ (~zaher@178.171.174.130) (Ping timeout: 264 seconds)
[02:12:35] <ekh> ok so reader.Read() and skip char 44 (comma) and 10 (newline), what to do with those ints representing characters? wouldn't I go back to string manipulation square and gc? or is it possible to make a span of char out of those ints?
[02:14:21] <ekh> i mean, how can I make decimal and long out of those many integers :P
[02:16:07] <JakeSays> ekh: no need for the reader. just use a raw stream, and have a char buffer that you fill one char at a time until you hit a ',' or \n (ignore \r).
[02:16:36] <JakeSays> then you can create a span from the buffer
[02:16:51] <JakeSays> also re-use the buffer each iteration
[02:25:54] <Slade> BUY +40,000 QQQ 100 17 JUN 22 332 PUT @12.02 LMT
[02:25:58] <Slade> hmm. 48 million dollar position
[02:27:33] <Slade> thats JakeSays crushing people with his wallet again
[02:33:52] <JakeSays> bah. chump change.
[02:40:42] <JakeSays> Slade: what instrument is that. i don' remember the symbol
[02:41:16] <Slade> JakeSays, 100 largest non-financial stocks
[02:41:38] <Slade> true economic movement so to speak.. obviously very tech heavy
[02:42:13] <JakeSays> so it's an index. which one?
[02:42:50] <Slade> Nasdaq-100
[02:43:22] <JakeSays> much better.
[02:43:59] <Slade> i never know what level of precision to use when describing things to randos on the internet
[02:44:13] <JakeSays> always start with the most concise
[02:44:22] <Slade> i did. QQQ :P
[02:44:49] <JakeSays> yup, and then you expand outward. next would've been nasdaq 100
[02:44:51] <Slade> ultra popular, so popular its got futures
[02:44:54] <JakeSays> not a fuckin' book
[02:45:16] <Slade> i went ELI5 :P
[02:48:13] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[02:53:06] *** Quits: bomb (~bomb@user/bomb) (Quit: ‏‏‎ ‎)
[02:57:20] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[02:57:23] *** Quits: X-Scale (~ARM@83.223.251.139) (Ping timeout: 264 seconds)
[02:58:55] *** X-Scale` is now known as X-Scale
[03:02:33] <ekh> JakeSays, now it took 122 seconds, not sure why. I tried to follow what you said (the best I can), my implementation looks ugly and now decimal.Parse takes around 25 seconds. https://pastebin.com/NeKNvCE3
[03:05:03] <JakeSays> ekh: paste a hundred or so lines of that giant file
[03:07:14] <ekh> https://pastebin.com/RLReYX1F
[03:07:57] <JakeSays> hmm. just a sec..
[03:13:43] *** Quits: xsperry (~xs@user/xsperry) (Read error: Connection reset by peer)
[03:18:54] <khanred> bitches
[03:19:10] <gufi> bitches!
[03:19:48] <khanred> !
[03:20:51] <JakeSays> ekh: i'm workin' on a parser.
[03:21:14] <ekh> thanks!
[03:21:30] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 260 seconds)
[03:27:12] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[03:27:44] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[03:32:39] *** Joins: xsperry (~xs@user/xsperry)
[03:38:13] <JakeSays> ekh: i think i can do this w/o any temp buffer
[03:41:45] <ekh> ^^
[03:42:58] *** Quits: zaher__ (~zaher@37.48.157.207) (Ping timeout: 260 seconds)
[03:49:55] *** Joins: Fairy (~Fairy@ti0004a400-4356.bb.online.no)
[03:52:12] <MizMahem> herble. I always get confused by set theory. Is there a method I can use to compare to collections that implies both have the exact same length and values? `SetEquals` only seems to imply the later (that is, the IEnumerable it is compared against can have duplicates).
[03:52:28] *** Quits: Fairy97 (~Fairy@2001:464a:4992:0:dd95:968b:982e:1ba9) (Ping timeout: 260 seconds)
[03:56:09] <MizMahem> I'd just use the CSV parser built in or use another library, but if we are racing against the clock for some reason you can use this handy trick I picked up no to long ago....
[03:56:56] <MizMahem> `int ParseDigits(int total, char digit) => checked(total * 10 + digit - '0');`
[03:57:44] <MizMahem> this aggregate formula/method should be faster than the built in Parse, mainly because it makes more assumptions about the type of the data input.
[03:58:28] <MizMahem> only works for integers at the moment, though you could adapt it for longs trivially, and floats/longs with more work.
[03:58:34] <gufi> would work fine on ints only but suppose if you wanted you could split on . and do some maths as well there
[03:58:45] <MizMahem> yeah
[04:00:01] <MizMahem> that said, it's probably not *that* much faster, as the parse methods all use something like this under the hood at some point, they just have a lot more logic in there designed to handle things like other number formats, commas, ect.
[04:10:15] *** Quits: supajerm (~supajerm@gateway/vpn/pia/supajerm) (Remote host closed the connection)
[04:17:28] <JakeSays> ekh: https://gist.github.com/JakeSays/2baf54961845d719b42002f7a976cf9f
[04:21:21] <JakeSays> NumberBuilder could be made a bit faster, but not sure if it'd make much difference
[04:24:25] <JakeSays> fixed a bug
[04:26:38] <JakeSays> that's probably about as fast as one could get
[04:27:30] <JakeSays> fuc. trick or treaters driving my dog nuts
[04:36:25] <khanred> isnt halloween tmr?
[04:42:38] <JakeSays> khanred: not in utah
[04:43:41] <khanred> Jesus doesn't allow it
[04:54:06] *** Joins: Lukky (~Lukky@modemcable163.88-161-184.mc.videotron.ca)
[04:54:09] <Lukky> Hi
[04:56:45] <Lukky> In VS2019, using Github. I'm a bit unsure how to best create branches. SHould I use the Github web interface to create the branch, or is it safe to do it all in VS?
[04:57:47] <JakeSays> ekh: i created a test 8gb file. with a release build, i'm getting 65 seconds for 153,170,671 records. if i only include ones with an id of 1, i get 48 seconds for 6,118,714 records.
[05:01:53] <JakeSays> "if president biden declared breathing mandatory, half of texas would suffocate itself on purpose."
[05:10:56] *** Joins: cn--j (~cn-j@user/cn-j)
[05:12:41] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[05:13:11] <gufi> ... can... can we make this a thing?
[05:14:29] *** Quits: cn-j (~cn-j@user/cn-j) (Ping timeout: 265 seconds)
[05:16:08] <JakeSays> gufi: mandatory breathing?
[05:16:19] <gufi> just get him to say it
[05:17:01] <JakeSays> lol that would be awesome
[05:24:23] *** Quits: cn--j (~cn-j@user/cn-j) (Ping timeout: 264 seconds)
[05:27:23] *** Quits: bpmedley (~bpmedley@2600:1700:e2c:8410:ca7:3d41:899d:d37e) (Ping timeout: 264 seconds)
[05:28:03] *** Joins: ezio (~ezio@user/ezio)
[05:46:29] *** Joins: ekh` (~ekh@37.39.228.194)
[05:49:22] *** Quits: ekh (~ekh@188.236.166.116) (Ping timeout: 260 seconds)
[06:37:05] *** Quits: kstatz12 (~karl.stat@205.178.87.116) (Remote host closed the connection)
[07:01:53] *** Quits: khanred (~khanred@user/khanred) (Read error: Connection reset by peer)
[07:18:26] *** Quits: ezio (~ezio@user/ezio) (Ping timeout: 245 seconds)
[07:24:05] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[07:47:12] <moose> How did JakeSays get off of my ignore list. Oh right, they're uncloaked.
[08:02:23] *** Joins: riksteri (riksteri@gateway/vpn/airvpn/riksteri)
[08:12:41] <Slade> is it just me or is it creepy when people talk about their ignore lists, who is on it, why it sucks, etc.
[08:44:34] <JakeSays> Slade: it's not just you.
[08:47:03] <JakeSays> bah. i need another printer. these 9 hour prints are killin' me
[08:52:45] *** Quits: Cecen (~Cecen@cpe-23-242-10-17.socal.res.rr.com) ()
[08:54:53] *** Joins: ||--|| (~user@pool-100-2-116-151.nycmny.fios.verizon.net)
[09:02:47] *** Quits: dinowilliam (~dinowilli@138.204.26.93) (Ping timeout: 264 seconds)
[09:04:03] <Slade> JakeSays, i feel like its like walking in to someone masturbating in a public place
[09:05:11] <Slade> JakeSays, same kind? or new
[09:05:13] <Slade> printer
[09:05:55] <JakeSays> Slade: i'll probably just get another one of these cheap ones to get me by until i finish my own
[09:10:40] <Slade> JakeSays, https://www.modix3d.com/big60-order/
[09:11:14] <JakeSays> that's a big bastard
[09:12:22] <MizMahem> set logic always gets me mixed up. Is there an operation for `ISet` that checks both for content equality, and length equality? SetEquals does the latter, but not the former. IE an IEnumerable with duplicates will still return true.
[09:12:36] <JakeSays> Slade: https://www.modix3d.com/big-180x/
[09:12:46] <MizMahem> I can of course do `Count()` but that may mean enumerating the array.
[09:12:52] <MizMahem> er, the IEnumerable.
[09:13:07] <MizMahem> well, an additional enumeration.
[09:13:07] <Slade> JakeSays, i figured $13k was over what you were spending
[09:13:50] <JakeSays> https://www.modix3d.com/big-meter/
[09:14:00] <JakeSays> Slade: lol just a bit over
[09:14:19] <Slade> JakeSays, ah so you linked the 12k one ;P
[09:54:39] *** Quits: ekh` (~ekh@37.39.228.194) (Read error: Connection reset by peer)
[09:59:41] <ern> What kind of room do you keep these in? separate room with good ventilation?
[10:20:01] <MatthiasVance> You live IN the devive
[10:20:03] <MatthiasVance> *device
[10:20:14] <MatthiasVance> You just print chairs and a bed etc
[10:37:27] *** Quits: Andrio (Andrio@questers-rest.andriocelos.net) (Changing host)
[10:37:27] *** Joins: Andrio (Andrio@idlerpg/player/Andrio)
[10:45:01] <moose> It would be fun to just 3D print your living room
[11:05:15] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:1c07:22c7:b7d5:2c38)
[11:10:34] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[11:23:07] <MatthiasVance> Yeah I agree, go to some factory with your specs
[11:23:30] <MatthiasVance> Load model, pay for materials, go there when it's finished
[11:23:46] <MatthiasVance> Then single item production might become viable?
[11:23:50] <MatthiasVance> At some point I mean
[11:24:29] <MatthiasVance> So apparently GeForce NOW does have my base game, which means I am a cloud gamer when they release their 3080 memberships
[11:24:44] <MatthiasVance> 1440p at 120 FPS is what they promise :o
[11:34:26] <irwiss> compression artifacts will make it look more like 720i/30, and latency will fuck over many games that rely on reaction
[11:34:56] <irwiss> tried PoE with it and even that was pretty shit to play
[11:36:47] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:44:58] *** Joins: Jong (~Jong@174.27.107.153)
[11:50:54] <Nasp> None of those cloud gaming things have ever worked
[11:51:13] <Nasp> I remember a collegue showed me one 2 years ago "See there is no lag at all"
[11:51:28] <Nasp> Me trying to play and can notice there's like 200ms input delay
[12:02:31] <moose> Yeah there's just no way it works without really noticeable input lag unless you are on fiber
[12:02:48] <moose> Thin clients will not become popular again :)
[12:02:55] <moose> At least not for a long while
[12:03:08] <MatthiasVance> I am on fiber
[12:03:24] <moose> What is your round trip latency to NVIDIA's stuff?
[12:03:32] <irwiss> i mean it's ok if you're already used to consoles, you can't see shit anyway cause you sit 5 meters away and your tv outputs like 30fps, but if you already had a taste of proper 120hz with no latency it's complete crap
[12:03:44] <moose> lol consoles
[12:03:46] <MatthiasVance> I am no longer a serious gamer so I think I'll be fine :D
[12:03:58] <moose> I was so so so shocked when I saw console game graphics and people said they were stunning
[12:04:03] <MatthiasVance> ah yeah
[12:04:05] <moose> I was like "yeah 10 years ago on PCs"
[12:04:06] <irwiss> ""next gen""
[12:04:22] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[12:04:28] <MichaelLong> consoles...
[12:04:36] <moose> I can't play console games unless it's some shit like mario kart
[12:04:41] <moose> or platformers
[12:04:47] <moose> I used to say racing games were my console go-to, but not anymore
[12:05:20] <irwiss> project cars dude, end of the racing story
[12:05:46] <MichaelLong> assetto corsa
[12:06:16] <moose> ^
[12:06:36] <MichaelLong> still play it with my gear, especially in the winter time
[12:13:09] *** Joins: N1N (~N1N@user/n1n)
[12:14:57] <Nasp> Console for me are still for platform games
[12:15:02] <Nasp> And for those they are amazing
[12:17:24] <MatthiasVance> ah yeah
[12:18:03] <MatthiasVance> so Stream.ReadAsync() expects an int offset but the Length is int64, wtf
[12:18:27] <MatthiasVance> ohh it's the offset in the destination buffer
[12:18:45] <MatthiasVance> I should just seek :D
[12:22:24] *** Joins: zaher (~zaher@37.48.190.132)
[12:23:00] *** Quits: Haxxa (~Haxxa@122.199.46.64) (Quit: Haxxa flies away.)
[12:23:20] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[12:25:34] <irwiss> you can connect your favorite controller to your pc and play platformers too, including emulators ;)
[12:25:49] <MatthiasVance> but then you need a pc
[12:25:58] <irwiss> most likely you already have a pc
[12:26:04] <MatthiasVance> I want to get rid of having a pc :D
[12:26:47] <irwiss> nah fuck that, mobile browsers are shit, mobile apps are shit and mobile ux is shit
[12:28:38] <MatthiasVance> sorry I meant desktop
[12:28:54] <MatthiasVance> I would love to just have something like a Mac Mini and call it a day
[12:29:00] <MatthiasVance> (that form factor)
[12:29:29] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[12:41:15] <irwiss> i just shove miniatx under table and call it a day, or a few years cause i don't fuck with it besides upgrading every 2-3 years
[12:44:17] <MatthiasVance> yeah same
[12:44:47] <MatthiasVance> hm mac mini isn't even available in 16GB RAM configurations
[12:45:56] <MichaelLong> there're also those Intel NUCs
[12:55:32] *** Joins: sysRPL (~sysRPL@ec2-3-131-36-133.us-east-2.compute.amazonaws.com)
[12:55:35] <sysRPL> fpc
[12:59:48] <sysRPL> oops
[12:59:50] <sysRPL> this is my first attempt at writing a ui toolkit for opengl from scratch: https://streamable.com/n42kll
[13:00:41] <sysRPL> i need to add a slider control, finish the text entry control, and enhance the `pack` layout system i've started that allows for more options when arranging child controls
[13:01:48] <sysRPL> it's fully themable
[13:04:21] <MatthiasVance> Nice sysRPL !
[13:05:10] <sysRPL> the layout code looks like this -> https://gist.github.com/sysrpl/118fed3b03997f43ae68a10fd2e98d1d
[13:05:36] <sysRPL> the theme system decides on the size of the controls as well as fonts and control rendering
[13:06:37] <sysRPL> the widget packing system then arranges the controls for you. you pack them horz or vertically or flows then by size depending on the container type. in this case the container is a simple TWindow
[13:09:39] <MatthiasVance> Ah yeah I love layout managers like that
[13:19:29] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[14:03:27] *** Joins: spinningCat (~spinningC@94.54.234.81)
[14:03:30] *** Quits: spinningCat (~spinningC@94.54.234.81) (Changing host)
[14:03:30] *** Joins: spinningCat (~spinningC@about/web/muscles)
[14:14:27] *** Quits: moose (~moose@user/moose) (Quit: Leaving)
[14:14:31] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[14:16:58] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[14:18:49] *** Joins: cn--j (~cn-j@user/cn-j)
[14:26:54] *** Quits: cn--j (~cn-j@user/cn-j) (Ping timeout: 260 seconds)
[14:29:27] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[14:32:57] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:33:42] *** Joins: csrf (~csrf@user/csrf)
[14:33:47] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[14:36:46] *** Joins: zaher_ (~zaher@130.180.161.179)
[14:40:30] *** Quits: zaher (~zaher@37.48.190.132) (Ping timeout: 260 seconds)
[14:49:53] *** Joins: zaher__ (~zaher@37.48.190.132)
[14:53:30] *** Quits: zaher_ (~zaher@130.180.161.179) (Ping timeout: 260 seconds)
[15:04:29] <MatthiasVance> 1uy
[15:04:31] <MatthiasVance> 2uy
[15:10:13] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[15:14:24] *** zaher__ is now known as zaher
[15:16:36] *** Joins: cn--j (~cn-j@user/cn-j)
[15:18:13] *** Joins: bomb (~bomb@user/bomb)
[15:19:16] *** Joins: jamea (~jamea@177.239.80.39)
[15:28:06] *** Quits: cn--j (~cn-j@user/cn-j) (Ping timeout: 260 seconds)
[15:29:56] <jamea> hi all, if create my form; fCapturaMasDatos fcapmasdat = new fCapturaMasDatos(); and call a method: fcapmasdat).imprimirZebra2() need free after call the method? or simply: fcapmasdat.Close() ?
[15:34:29] <bomb> if I had to guess without seeing what's all this about, I'd say use the Close() method
[15:35:21] <bomb> for a more educated guess, provide us with the API docs of whatever library you're using
[15:35:49] <bomb> oh, and your code too
[15:37:49] *** Quits: xsperry (~xs@user/xsperry) ()
[15:42:30] *** Joins: planetcalls|work (~planetcal@user/planetcallwork/x-8157852)
[15:46:21] *** Quits: planetcall (~planetcal@user/planetcallwork/x-8157852) (Ping timeout: 245 seconds)
[15:52:21] <jamea> hi bomb thanks
[15:52:26] <jamea> where can paste code?
[15:52:41] *** Joins: Roughy (~mdaw45ns@user/roughy)
[15:57:53] <jamea> see: https://paste.debian.net/1217460/after line 15, its simple: fcapmasdat.Close();     ?  for free mem?
[16:07:39] *** Joins: cn--j (~cn-j@user/cn-j)
[16:33:33] *** Joins: xsperry (~xs@user/xsperry)
[16:53:57] <jamea> bomb i am ok?
[16:54:53] *** Quits: bomb (~bomb@user/bomb) (Remote host closed the connection)
[16:55:01] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[16:55:23] *** Joins: bomb (~bomb@user/bomb)
[16:55:45] *** Joins: interop_home (~b@194-166-2-56.adsl.highway.telekom.at)
[16:55:45] *** Quits: interop_home (~b@194-166-2-56.adsl.highway.telekom.at) (Changing host)
[16:55:45] *** Joins: interop_home (~b@user/interop-madness/x-0950004)
[16:55:46] *** Quits: spinningCat (~spinningC@about/web/muscles) (Ping timeout: 260 seconds)
[17:14:33] <MatthiasVance> There, resignation sent =)
[17:19:28] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[17:21:31] <jamea> MatthiasVance yes,
[17:24:26] *** Quits: interop_home (~b@user/interop-madness/x-0950004) (Quit: Leaving)
[17:27:46] <ap5> Gday
[17:28:38] <MatthiasVance> hi ap5 !
[17:41:55] <ap5> I am in the proces of redefining my whole linux setup in nix :D https://gitlab.com/mslot/dees. It is quite fun doing.
[17:44:27] <bomb> yeah, nix is the fashion now
[17:45:50] <ap5> i cant believe i havent heard about it before. I have needed it all the time. All my fucked install bash scripts that always gets doomed
[17:49:35] <BtbN> And a random distro solves that? oO
[17:54:07] <jamea> anyone know how to numbering page number page 1/pagecount in itextsharp?
[17:56:54] *** Quits: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com) (Remote host closed the connection)
[17:58:16] <bomb> nix ain't no distro BtbN
[17:58:38] <bomb> NixOS is XD
[17:58:59] <bomb> ap5 are you using Nix with Debbie?
[18:00:32] <ap5> bomb, i use nix with nixOS
[18:00:52] <ap5> BtbN: it isnt random for me
[18:01:33] <MatthiasVance> jamea: Are you comfortable with the AGPL license or are you paying for it?
[18:01:53] <bomb> ah, nixos won't do for me
[18:03:49] <ap5> I like that i can rollback a generation if something fucks up :D I have used it already. But the real magic is Nix. Nix is odd and quite nice. It solves my problem perfectly.
[18:05:18] *** Quits: zaher (~zaher@37.48.190.132) (Ping timeout: 260 seconds)
[18:06:31] <MichaelLong> also wanted to look into it, but not found the time yet. the declarative approch strikes me, could valuable at work also
[18:07:42] <bomb> rollback a generation? like Windows System Restore? XD
[18:08:24] <MichaelLong> heh
[18:12:28] <ap5> bomb, something along the way, but different.
[18:13:08] <bomb> Norton Ghost?
[18:13:10] * bomb runs
[18:13:58] <ap5> What???
[18:15:47] <bomb> remember internet cafés 20+ years ago? they used to have that, so when you reboot Windows, previous customer's modifications would be gone
[18:19:05] <ern> I had a thin client that worked in same way. When you booted it, XP was back to it's "original" state
[18:19:15] <ern> but you could do whatever to it when it was "on"
[18:20:01] <bomb> invaluable tool for libraries and school computers
[18:20:27] <ap5> Aaaah. Not quite like that
[18:22:27] <ap5> Everyime i add a new program or something of the link, i build my config. That generates a new generation that i boot into. If something is off, i can simply chose the older generation from the grub. It works on machine level, so everything is versioned
[18:22:32] <ap5> kernel to
[18:25:27] <MichaelLong> hm
[18:26:29] <ap5> Nix and NixOS is basically one big pile of symlinks and magic :D i like it
[18:28:31] <MichaelLong> when I looked it up some time ago, one issue was it could introduce quite some maintenance and additional complexity.
[18:29:04] *** Quits: bomb (~bomb@user/bomb) (Remote host closed the connection)
[18:29:14] <MichaelLong> but to really estimate that, one have to use it in a practical way I suppose
[18:29:30] *** Joins: bomb (~bomb@user/bomb)
[18:30:26] <ap5> It does add complexity and takes up some more disk space :)
[18:30:49] <MichaelLong> disk space is the least problem :)
[18:31:36] <bomb> yeah, it reminds me of Nixon, that's the real bugger for me
[18:33:01] <MichaelLong> also a reason why I've hesitated to dig into it, what problem does it solve for _me_. I never have had a reason to roll back an entire system. What I have to do is to roll back certain configuration files and such. That's already mitigated by a regular backup regime
[18:34:28] *** Joins: jollygood2 (~bc8165b6@217.29.117.252)
[18:35:33] <jollygood2> hi. if you have to interact with C api, and that interaction consists of more than one or two calls, do you prefer to do it in C#, or C? or maybe C++/CLI?
[18:36:14] <jollygood2> I find it easier to do it in C or C++, but I'm not sure how I should go about it. creating a dll that exports my function, or just doing it in C++/CLI
[18:37:02] <ap5> MichaelLong: it has always been something for me, when i update a system, and it is bugged or not working. It gives me the chills. And then a reinstall take ages because of the customization.
[18:38:46] <MichaelLong> ap5, yeah I can relate to that. For me I'm at a point now with my linux experience that I never reinstall anything anymore. I'll fix it.
[18:40:41] <ap5> Ofc i try that to before reinstalling :) bit sometimes, more than often, i have discovered a broken system after an apt or pacman upgrade
[18:42:07] <MichaelLong> I like the declarative approach. that's something I could utilize at work
[18:43:27] <ap5> That is what sold me in the first place. I have always been looking for a way to describe my system
[18:44:42] <irwiss> jollygood2: if you have a decent C interface then "normal" C# pinvoke will do the job, c++/cli drags lots of issues with it, portability is one of the main ones
[18:46:04] <jollygood2> irwiss, I see. the problem is, that I have to redeclare all the functions and types, while with C++/CLI, I already have that done for me in a header file.
[18:46:25] <jollygood2> and there's additional typesafety when using C++
[18:46:28] <jollygood2> or C
[18:47:32] <jollygood2> too bad that there are compatibility issues with C++/CLI. maybe I'll just write it in C then, and export a single high-level function to use in C#
[18:51:41] <irwiss> there's no "additional" type safety you get over pinvoke, if you define your types right you get exact same type safety
[18:52:20] <jollygood2> well C# has only IntPtr, right? you can accidentally pass int * when the function accepts char *. in C++ that will be complie error, and in C a warning
[18:53:56] *** Joins: spinningCat (~spinningC@air138.wispotter.com)
[18:54:01] *** Quits: spinningCat (~spinningC@air138.wispotter.com) (Changing host)
[18:54:01] *** Joins: spinningCat (~spinningC@about/web/muscles)
[18:54:19] <jollygood2> may not apply to char *, as you'd just pinvoke that as a string. but will certainly apply when using pointers to C structs
[18:54:47] *** Joins: supajerm (~supajerm@gateway/vpn/pia/supajerm)
[18:55:08] <irwiss> not sure what scenario you're talking about, if you want to marshal strings you specify what string format you want to pass in the pinvoke method signature and marshaller will convert to the specified type
[18:55:38] <jollygood2> I am talking about C# losing information of the type pointer is pointing to. it is all IntPtr, which is effectively void *
[18:56:25] <irwiss> generally i avoid passing around pointers in c# unless it's opaque ones you're not supposed to touch anyway, other pointers can be converted by marshaller to proper c# types
[18:56:44] <irwiss> if you wanna pinvoke a string you have marshal attributes to tell exactly which string encoding is expected and get auto conversion
[18:57:03] *** Joins: dinowilliam (~quassel@138.204.26.93)
[18:57:32] <irwiss> if you expect to do some heavy lifting then a library wrapping the actual thing and a simpler C interface towards the .net side is also an option
[18:57:49] <jollygood2> yes, as I said that applies to string. but not to pointers to C structs. passing IntPtr that points to Foo will compile, even if C function accepts Bar*. in C++, that will be compile error
[18:57:56] <jollygood2> that doesn't apply to string*
[18:58:32] <irwiss> if your structs are blittable then marshaller will also handle arrays of those structs too
[18:59:19] <irwiss> just define them right and it'll handle it (obviously there's reasons not to do it too, like perf) although ms docs site seems dead for me right now
[19:00:36] <irwiss> https://docs.microsoft.com/en-us/dotnet/framework/interop/marshaling-different-types-of-arrays took a while to load
[19:02:01] *** Quits: spinningCat (~spinningC@about/web/muscles) (Read error: Connection reset by peer)
[19:02:47] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[19:06:23] *** Joins: spinningCat (~spinningC@air138.wispotter.com)
[19:07:14] *** Quits: spinningCat (~spinningC@air138.wispotter.com) (Changing host)
[19:07:14] *** Joins: spinningCat (~spinningC@about/web/muscles)
[19:10:07] <irwiss> https://www.reddit.com/r/funny/comments/qjp3c9/the_balloon_world_cup_looks_absolutely_cool/ this looks more fun than a lot of other sports
[19:10:57] <bomb> yeah, especially when doing with the significant other
[19:14:37] *** Joins: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com)
[19:14:42] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[19:14:50] *** Quits: cn--j (~cn-j@user/cn-j) (Ping timeout: 260 seconds)
[19:21:49] *** Quits: spinningCat (~spinningC@about/web/muscles) (Read error: Connection reset by peer)
[19:22:55] *** Joins: cn--j (~cn-j@user/cn-j)
[19:23:19] *** Joins: spinningCat (~spinningC@air138.wispotter.com)
[19:23:21] *** Quits: spinningCat (~spinningC@air138.wispotter.com) (Changing host)
[19:23:21] *** Joins: spinningCat (~spinningC@about/web/muscles)
[19:25:26] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[19:29:50] *** Quits: dinowilliam (~quassel@138.204.26.93) (Ping timeout: 260 seconds)
[19:30:13] *** Joins: dinowilliam (~quassel@168.194.162.230)
[19:31:22] <Slade> :trollface: https://twitter.com/plantmath1/status/1454471660803870726?s=21
[19:43:52] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[19:45:06] *** Quits: spinningCat (~spinningC@about/web/muscles) (Ping timeout: 245 seconds)
[19:50:07] <lz__> lmao python is shit https://stackoverflow.com/questions/1233448/no-multiline-lambda-in-python-why-not
[19:50:52] <_Shurik_> any dynamically typed language is utter garbage
[19:52:21] <MichaelLong> lz__, nah nah
[19:52:58] <cn--j> Doesn't C# support dynamic typing?
[19:53:20] <cn--j> Why can't a public member method in a struct be invoked without a prior "new"?
[19:53:29] <_Shurik_> support
[19:53:32] <_Shurik_> not based on
[19:54:13] <_Shurik_> dynamic typing renders compile time error checking useless
[19:55:53] <bomb> _Shurik_ do you know that Java is going to have a BADASS framework for FFI?
[19:56:05] <cn--j> E.g., I can't do MyStruct s; s.Foo(); Why?
[19:56:06] <bomb> a simple tool will generate Java sources from C/C++ header files
[19:57:49] <_Shurik_> bomb: yes.  I don't like java just out of sheer principle
[19:58:21] <bomb> _Shurik_ yet you're happily using J++ everyday!
[19:58:32] <bomb> sorry, it was an overreaction
[19:58:37] <bomb> we cool.
[19:59:16] <_Shurik_> Trust me, I know better :)
[19:59:25] <_Shurik_> but, in a way - you are correct
[20:01:04] <MatthiasVance> _Shurik_: Kind of like nullable reference types!
[20:01:14] <MatthiasVance> "renders compile time error checking useless"
[20:01:29] <MatthiasVance> Seriously, fuck C# for that reason :D
[20:04:03] <cn--j> I don't understand. Isn't their primary use compile-time error checking? Is it because you get a lot of these checks?
[20:04:16] <cn--j> I mean warnings.
[20:05:58] <MichaelLong> Slade, should I invest in META?
[20:06:17] <MatthiasVance> cn--j: That's what I *thought* it would be before they launched the feature
[20:06:30] <MatthiasVance> cn--j: But no it sucks donkey balls and doesn't actually enforce the type to be nullable/non-nullable
[20:06:30] <Slade> MichaelLong, i never tell anyone what to invest in. except knowledge
[20:06:44] <MichaelLong> so this is a yes?
[20:06:49] <MichaelLong> :P
[20:08:45] <cn--j> MatthiasVance: It's better than nothing.
[20:10:24] <Nasp> It's a shame it isn't more enforced
[20:11:55] <MatthiasVance> cn--j: How is it better than nothing if it doesn't give you guarantees?
[20:11:58] <MatthiasVance> You *still* need all the checks
[20:18:58] *** Quits: ||--|| (~user@pool-100-2-116-151.nycmny.fios.verizon.net) (Remote host closed the connection)
[20:21:44] <cn--j> MatthiasVance: Well, sometimes if you try to pass a maybe-null into a non-null argument accepting method, it gives you a warning. What's bad about that?
[20:22:33] <MatthiasVance> I don't like "maybe it helps"
[20:22:42] <MatthiasVance> I want to be explicit
[20:23:32] *** Quits: jamea (~jamea@177.239.80.39) (Ping timeout: 246 seconds)
[20:24:59] <cn--j> MatthiasVance: Where isn't it explicit?
[20:25:06] <MatthiasVance> It's not enforced
[20:25:12] <MatthiasVance> Across all code paths
[20:25:22] <cn--j> So there are bugs?
[20:26:06] <cn--j> See what it does guarantee, and handle what it doesn't, I guess.
[20:27:48] <MatthiasVance> meh
[20:50:48] *** Joins: ezio (~ezio@user/ezio)
[20:51:41] *** Joins: planetcall (~planetcal@user/planetcallwork/x-8157852)
[20:55:38] *** Quits: planetcalls|work (~planetcal@user/planetcallwork/x-8157852) (Ping timeout: 260 seconds)
[21:04:32] *** Joins: jamea (~jamea@189.237.48.29)
[21:12:31] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[21:14:56] *** Joins: bpmedley (~bpmedley@2600:1700:e2c:8410:287a:ba68:3dc6:8c60)
[21:32:34] *** Joins: X-Scale` (~ARM@31.22.147.35)
[21:33:02] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 260 seconds)
[21:34:23] *** X-Scale` is now known as X-Scale
[21:34:45] *** Quits: psb (sid500598@user/psb) (Ping timeout: 260 seconds)
[21:36:14] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:1c07:22c7:b7d5:2c38) (Ping timeout: 260 seconds)
[21:36:47] *** Joins: psb (sid500598@user/psb)
[21:57:29] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:5933:ca1a:d2a4:f410)
[21:59:21] *** Joins: spinningCat (~spinningC@94.54.234.81)
[21:59:30] *** Quits: spinningCat (~spinningC@94.54.234.81) (Changing host)
[21:59:30] *** Joins: spinningCat (~spinningC@about/web/muscles)
[22:03:47] <canton7> MatthiasVance, the way I see it, you trust NRTs for internal use, and put the checks around the boundary
[22:04:29] <canton7> I've stopped putting ANE checks on non-nullable parameters for non-API methods for example
[22:04:53] <canton7> ... but the main use is in pointing out when you've forgotten to check for null, or when you've made a bad assumption about when something can be null
[22:05:47] <biberu> that's how I use them too
[22:06:17] <biberu> it's very helpful within your own fences
[22:10:32] *** Ameisen_ is now known as Ameisen
[22:17:42] *** Quits: riksteri (riksteri@gateway/vpn/airvpn/riksteri) (Quit: riksteri)
[22:22:35] *** Quits: ezio (~ezio@user/ezio) (Ping timeout: 264 seconds)
[22:27:10] <irwiss> yeah, can't enforce nullable refs everywhere on day 0, it's now permeated BCL pretty hard though, so other stuff can follow through, eventually $shitlib you're using will also do nullable annotations and it'll get more effective
[22:27:58] <irwiss> and it covers like 90% of the dumb "oh wait this actually can be null after all" cases
[22:35:35] <Lukky> Is there a read/write Tuple<>ish in .NET?
[22:39:46] *** Quits: cn--j (~cn-j@user/cn-j) (Ping timeout: 260 seconds)
[22:40:21] *** Joins: Fiji (~Fiji@user/fiji)
[22:44:50] *** Quits: jollygood2 (~bc8165b6@217.29.117.252) (Ping timeout: 260 seconds)
[22:45:05] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[22:46:49] <Lukky> Doh... using a Stack instead of a Queue...
[22:47:14] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:48:46] <Lukky> I need a data structure where I can acces the last inserted item, but also I need to read it back in insertion order... would it be ok to rely on Linq's Reverse() ?
[22:49:04] <Lukky> On a Stack that is
[22:52:12] <MatthiasVance> canton7: Yeah that's true
[22:56:54] *** Joins: ezio (~ezio@user/ezio)
[22:57:35] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[23:03:34] *** Quits: shailangsa (~shailangs@host217-39-45-200.range217-39.btcentralplus.com) (Remote host closed the connection)
[23:07:51] <biberu> Lukky: you want a deque?
[23:10:32] <Lukky> oh, let me check this out... never used one, heard the name... thx
[23:11:00] <Lukky> doh... I thought you mean a class LOL
[23:11:12] <biberu> it's a data structure
[23:11:18] <Lukky> really?
[23:11:50] <biberu> https://en.wikipedia.org/wiki/Double-ended_queue
[23:11:58] <Lukky> I find the method though... must look harder I guess :-)
[23:12:31] *** Joins: cn--j (~cn-j@user/cn-j)
[23:12:50] <Lukky> Ok, will look for it in .NET
[23:15:39] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[23:36:05] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:5933:ca1a:d2a4:f410) (Ping timeout: 260 seconds)
[23:37:38] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:b037:9ee3:7136:164b) (Quit: Textual IRC Client: www.textualapp.com)
[23:41:53] *** Quits: dubiago (~dubiago@167.99.238.127) (Quit: WeeChat 2.8)
[23:49:41] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:1d19:ac87:3b13:4cf)
[23:51:27] *** Joins: jinsun__ (~quassel@user/jinsun)
[23:54:41] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 245 seconds)
