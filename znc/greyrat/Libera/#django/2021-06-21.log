[00:00:10] <wallbroken> how to returns the only item associated to the current logged account?
[00:00:50] <wallbroken> queryset.annotate(user_count=Count('user')).filter(user_count=1)
[00:00:51] <wallbroken> that's ok?
[00:02:40] <GinFuyou> it has no relation to current user
[00:02:42] *** Joins: MateoR (~MateoRadm@dynamic-2k7xn8ifjfqvv28cnc-pd01.res.v6.highway.a1.net)
[00:06:04] <wallbroken> qs = qs.annotate(user_count=Count('user')).filter(user_count=1)
[00:06:08] <wallbroken> i made it this way
[00:06:11] <wallbroken> looks like it works
[00:10:09] <GinFuyou> It doesn't make it correct
[00:16:34] *** Quits: blackleitus (~blackleit@189.195.192.244) (Quit: Leaving)
[00:17:15] <wallbroken> GinFuyou: do you want to see the view i've made?
[00:17:24] <wallbroken> but looks like it works correctly
[00:17:54] <wallbroken> https://dpaste.org/OMLT#L16
[00:19:42] <GinFuyou> That filters items related to exactly one user
[00:19:54] <GinFuyou> it seems so at least
[00:20:30] <GinFuyou> It has not connection to request.user so it's quite surely incorrect u=to what you've described
[00:20:47] <wallbroken> do you want i explain you what my goal is?
[00:21:04] <wallbroken> but, as i said, it looks like that view does what i do.
[00:21:44] <wallbroken> my goal is that the view show only the item relateed EXCLUSIVELY to the current user
[00:21:48] <GinFuyou> You can get correct results from incorrect actions. By chance. It happens
[00:21:53] <wallbroken> each item is m2m with user
[00:22:11] <wallbroken> let's suppose an item is bounded to me and you
[00:22:17] <wallbroken> i don't want it to be shown
[00:22:21] <wallbroken> because it is shared
[00:22:27] <wallbroken> and icannot edit it
[00:22:35] <wallbroken> ok?
[00:22:54] <GinFuyou> Ok, then it looks like a part of solution
[00:23:59] <wallbroken> so the goal is: show only the items bounded only to the current user
[00:24:24] <GinFuyou> there is still no check for current user
[00:27:36] <wallbroken> in what sense?
[00:29:17] <wallbroken> qs = qs.filter(user=self.request.user)
[00:29:20] <wallbroken> do you mean this?
[00:29:35] <GinFuyou> Yes, something like that
[00:35:41] <wallbroken> GinFuyou: no
[00:35:43] <wallbroken> doesn't work
[00:36:06] <wallbroken>             qs = qs.filter(user=self.request.user)
[00:36:06] <wallbroken>             qs = qs.annotate(user_count=Count('user')).filter(user_count=1)
[00:38:03] <wallbroken> ok i switched order
[00:38:05] <wallbroken> and it works
[01:02:57] *** Quits: MateoR (~MateoRadm@dynamic-2k7xn8ifjfqvv28cnc-pd01.res.v6.highway.a1.net) (Quit: Client closed)
[01:07:05] *** Joins: suriel (~cassy@user/cassy)
[01:07:20] <suriel> Hi, anyone with REST experience?
[01:17:56] *** Joins: remo (~user@wheelly-shelter.volia.net)
[01:18:14] <remo> >>> from django.core.cache import cache
[01:18:14] <remo> >>> cache._connections.settings
[01:18:14] <remo> {'default': {'BACKEND': 'django.core.cache.backends.locmem.LocMemCache'}}
[01:18:14] <remo> >>> from django.conf import settings
[01:18:14] <remo> >>> settings.CACHES
[01:18:15] <remo> {'default': {'BACKEND': 'django_redis.cache.RedisCache', 'LOCATION': 'redis://some_redis_1:6379/2', 'OPTIONS': {'CLIENT_CLASS': 'django_redis.client.DefaultClient'}}}
[01:19:08] <remo> why CACHES is set to redis, but  cache._connections.settings  {'default': {'BACKEND': 'django.core.cache.backends.locmem.LocMemCache'}} ?
[01:21:02] <remo> Django==3.2.1, django-redis==5.0.0
[01:26:11] *** Joins: clawh (~clawh@185.244.214.60)
[01:30:05] *** Joins: weewoo (~Unchained@S0106bc4dfbe53d33.ed.shawcable.net)
[01:35:01] *** Quits: sadg (~odd@cpc113812-lea23-2-0-cust1375.6-3.cable.virginm.net) (Quit: WeeChat 3.0.1)
[01:37:53] <wallbroken> GinFuyou: https://www.dropbox.com/s/ca09pz62n5t6127/untitled2.png?dl=0
[01:37:59] <wallbroken> is there a way to remove this field?
[01:38:11] <wallbroken> i want to remove it if i'm logged with a not staff user
[01:43:16] <GinFuyou> Cleaner way is to have two form classes with and w\o the field.
[01:44:03] <GinFuyou> There are probably "faster" ways, but I'm not so sure for safety
[01:45:58] <weewoo> Hey guys! Im trying to serialize data from a third party API and save into my molde.
[01:46:02] <weewoo> model*
[01:46:34] <weewoo> Unfortunately the capitalization of field names is not the same between the API and my model.
[01:46:59] <weewoo> How do we specify how to serialize the data into the model properly? Ill get a dpaste in a second.
[01:47:23] *** Joins: rannnn8888 (~rannnn888@bzq-79-177-141-235.red.bezeqint.net)
[01:47:39] <wallbroken> GinFuyou: if not self.request.user.is_staff:
[01:47:46] <wallbroken> you think this could work?
[01:47:51] <wallbroken> in form
[01:48:10] <wallbroken> because i want different list of field for staff user and for non staff user
[01:49:21] <GinFuyou> wallbroken, not it doesn't work in form itself
[01:49:56] <GinFuyou> Dynamic fields may work in init... but as I said not sure if there are no issues with it
[01:53:22] <wallbroken> GinFuyou: so i prepare two different forms with different fields ?
[01:54:27] <GinFuyou> I'd do that. With inheritance it's not much of code. Then select form class in the view based on user
[01:55:51] <weewoo> https://dpaste.org/FMvy         How should I be serializing this data so I can save it into the model/db?
[01:56:08] <weewoo> Also, how do i do a linebreak in IRC, rather than send on {enter}?
[01:59:27] *** Joins: flynn (~mcbloch@user/flynn)
[02:02:07] <GinFuyou> weewoo, I suppose it would be easier just to pre-process data with .lower() on keys?
[02:02:37] <GinFuyou> if you don't need reverse too
[02:03:28] <wallbroken> https://dpaste.org/CCZG
[02:03:32] <wallbroken> i get error
[02:03:39] <weewoo> yeah, that might be a good idea. Would it be better to simply change my model to CamelCase to match the API data?
[02:03:54] <wallbroken> https://dpaste.org/TnpL
[02:04:14] <weewoo> Would that break any sort of bad practice?
[02:05:16] <GinFuyou> It doesn't follow general python naming convention. But not as hard as having capitalized var\function names
[02:06:13] <GinFuyou> Serializers should have way to set key-field mapping manually.
[02:06:41] <GinFuyou> But not sure how to pre-process all keys without hardcoding
[02:07:11] <GinFuyou> Perfectly, it's serializer's job as I understand it
[02:08:39] <wallbroken> GinFuyou: what the problem in my code?
[02:09:31] *** Joins: audiocat (~audio@2603-8081-1800-0062-0963-400c-620f-c7e4.res6.spectrum.com)
[02:10:11] <weewoo> I figure it should be easy to find documentation on how to set the key-field mapping; I dont mind doing it manually
[02:10:54] <weewoo> But it is not as easy as i thought to find that documentation
[02:11:10] <rannnn8888> someone know when i use ajax get request my server send the request or the clinet ?
[02:11:56] <weewoo> rannnn8888 Huh?
[02:14:15] <wallbroken> ok found the problem
[02:14:19] <wallbroken> there was a typo
[02:14:43] <rannnn8888> weewoo when i use get data from api
[02:15:40] *** Quits: suriel (~cassy@user/cassy) (Quit: Leaving)
[02:16:55] <wallbroken> GinFuyou: it works perfectly
[02:16:58] <wallbroken> thanks
[02:16:59] *** Quits: knbk (~quassel@84-24-92-123.cable.dynamic.v4.ziggo.nl) (Ping timeout: 265 seconds)
[02:18:55] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 265 seconds)
[02:23:03] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:5642:78c3:490c:d48)
[02:24:56] <wallbroken> is there a syntax to make all the field except a specified one?
[02:25:42] <GinFuyou> exclude = ['a_field'] in form.Meta you mean?
[02:26:04] *** Joins: Thanatos (~Thanatos@197.210.64.157)
[02:27:17] <wallbroken> GinFuyou: i want to remove 'user' field from fields = '__all__'
[02:27:33] <wallbroken> so, instead of listing 50 items
[02:27:44] <wallbroken> i just want to list the items to exclude
[02:28:15] <GinFuyou> then it's use `exclude = ['user']` instead of "fields = '__all__'". (You can't use both)
[02:30:33] <wallbroken> GinFuyou: thank you
[02:46:03] *** Quits: crowbar (~crowbar@user/crowbar) (Remote host closed the connection)
[02:46:18] *** Joins: crowbar (~crowbar@user/crowbar)
[02:47:12] *** Quits: especial (~especial@cm-84.214.207.74.getinternet.no) (Remote host closed the connection)
[02:57:19] <wallbroken> GinFuyou:
[02:57:44] <wallbroken> is there a way to make items "grayed out" if their field "ordered" is true?
[03:00:16] <GinFuyou> "grayed out" probably means "disabled" in html terms. You could set it at form init. But I think it doesn't work for required fields, but can be wrong
[03:00:51] <GinFuyou> iirc disabled fields are never submitted, but validation still check them
[03:02:28] <wallbroken> FunkyBob: i have a field for each item
[03:02:32] <wallbroken> it's called "ordered"
[03:02:57] <wallbroken> if this flag is set to true, it means that that item has been ordered by somebody else
[03:03:03] <wallbroken> then it's unavailable
[03:03:13] <wallbroken> so i want to show it as grayed out
[03:03:35] <wallbroken> s/FunkyBob /GinFuyou
[03:04:15] <GinFuyou> well, grayed out where? In a multiselect widget?
[03:06:54] *** Joins: sed (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net)
[03:08:49] <wallbroken> in the main page
[03:08:55] <wallbroken> i have all the list of items
[03:08:58] <wallbroken> which are shoes
[03:09:53] <GinFuyou> If it's just a list view and not form widget - html is directly under your control. (form make changes problematic at times)
[03:15:06] *** Joins: bddba (~bddba@2600:8800:1d8b:ef00:d56e:939d:5c5c:f14a)
[03:16:05] <wallbroken> GinFuyou: and how to check from the html if the ordered field for that specific item is set to true or false?
[03:16:18] <wallbroken> remember that "ordered" is a m2m field
[03:16:21] <wallbroken> user bounded
[03:16:49] <GinFuyou> you may want use annotate for example
[03:17:12] <GinFuyou> annotation is available from template as if it was real field
[03:18:25] *** Quits: bddba (~bddba@2600:8800:1d8b:ef00:d56e:939d:5c5c:f14a) (Quit: Client closed)
[03:18:43] <wallbroken> well i have a bug sorry
[03:18:48] <wallbroken> a blocking bug
[03:18:51] *** Joins: bddba (~bddba@2600:8800:1d8b:ef00:d56e:939d:5c5c:f14a)
[03:19:19] *** Quits: bddba (~bddba@2600:8800:1d8b:ef00:d56e:939d:5c5c:f14a) (Client Quit)
[03:20:28] <wallbroken> https://github.com/ClaudioViti/lookbook/blob/multi-user-registration/shoes/views.py#L255
[03:20:31] <wallbroken> in this function
[03:20:37] <wallbroken> when i add a new item
[03:20:57] <wallbroken> it should automatically set the "user" field for the current user
[03:22:35] *** Joins: summersault (~summersau@186.214.166.50)
[03:22:41] <GinFuyou> then add it ^_^
[03:26:58] <wallbroken> GinFuyou: user = self.request.user ?
[03:27:02] *** Quits: summersault (~summersau@186.214.166.50) (Ping timeout: 265 seconds)
[03:27:04] *** Quits: Rikem (~mike@user/rikem) (Ping timeout: 265 seconds)
[03:31:38] <bparker> why do you have imports all over random lines of code
[03:32:15] <GinFuyou> probably <something>.user but yeah, idea didn't change for those weeks you was using it =P
[03:32:33] *** Joins: blackout69 (~blackout6@net-2-38-155-178.cust.vodafonedsl.it)
[03:32:40] <wallbroken> what is <something>
[03:33:07] <bparker> request.user
[03:33:21] <bparker> but you don't say what needs the user set on it and we can't see its model either
[03:33:43] <bparker> we don't know what 'a new item' is
[03:34:11] <wallbroken> the shoe model item
[03:34:14] <wallbroken> i posted the code
[03:34:35] <bparker> I see many things with Shoe in the name
[03:34:39] <bparker> you need to be a lot more specific
[03:34:57] <bparker> and I only see a link to a views.py
[03:35:06] <wallbroken> go to models.py
[03:35:16] <wallbroken> you will see Shoe
[03:35:27] <wallbroken> under Shoe you will see a field called "user"
[03:35:59] <bparker> why on earth does a model called Shoe have a user field
[03:36:06] <bparker> and why a manytomany
[03:36:08] <bparker> and why so many of them
[03:36:54] <bparker> looks like you also allow ordering things with absolutely no identifying information about them
[03:37:07] <bparker> literally everything is blank=True
[03:40:18] <wallbroken> shoe_instance.user.set(request.user)
[03:40:20] <wallbroken> i used this
[03:40:22] <wallbroken> but i get anerror
[03:40:39] <wallbroken> ''User" object is not iterable
[03:41:05] <weewoo> I have a problem where I am trying to serialize data. However, the fieldnames are slightly different -- my data has camelCase, but the model is completely lowercase. Does anyone have an easier way to match my data to my ModelSerializer aside from pre-processing the data? (There are alot of rows, and preprocessing is taking longer than Id like)
[03:43:32] <rannnn8888> how i can return this two ? like useres and one more users2 https://dpaste.org/4fmL
[03:43:51] <rannnn8888> with qs2
[03:46:29] *** Joins: diek (~diek@2804:14d:7681:82bd:bc59:26ca:9f7a:29de)
[03:48:26] <GinFuyou> rannnn8888, what is the purpose of it?
[03:49:12] <GinFuyou> wallbroken, if it's m2m, you probably want .add() and make sure it saved first
[03:49:36] <rannnn8888> GinFuyou what u mean ? i want get to json like one for qs its the user,amd one more to qs2 this i want be users2
[03:50:03] <GinFuyou> Ah, you want those two separately?
[03:51:41] *** Quits: diek (~diek@2804:14d:7681:82bd:bc59:26ca:9f7a:29de) (Ping timeout: 265 seconds)
[03:52:38] <rannnn8888> GinFuyou for example yes "users": [{"Symbol": "AXXA", "ts": "2021-05-30T00:00:00Z", "count": 12}], "users2": [{"Symbol": "AXXA", "ts": "2021-05-30T00:00:00Z", "count": 12}]
[03:53:00] <rannnn8888> users = qs users2 =qs2
[03:54:09] *** Parts: blackout69 (~blackout6@net-2-38-155-178.cust.vodafonedsl.it) ()
[03:54:36] <bparker> it looks like you're trying to use this one Shoe model as inventory, order and item tables all in one, and that's just not going to work
[03:54:44] <GinFuyou> rannnn8888, they you probably want to return one base qs, and then doing qs1, qs2 from it in get_context_data
[03:55:04] <GinFuyou> get_queryset() is not expected to return several querysets
[03:55:06] <wallbroken> GinFuyou: works
[03:55:09] <wallbroken> thank you
[03:56:07] *** Joins: bddba (~bddba@2600:8800:1d8b:ef00:d56e:939d:5c5c:f14a)
[04:00:27] <rannnn8888> GinFuyou how ? i need return him togther first https://dpaste.org/RqaY
[04:04:51] <GinFuyou> rannnn8888, basically, you could move most code to get_context_data(). in get queryset you could combine common parts of it
[04:05:41] *** Quits: bddba (~bddba@2600:8800:1d8b:ef00:d56e:939d:5c5c:f14a) (Quit: Client closed)
[04:06:14] *** Joins: yanchai (~yanchai@124.105.86.225)
[04:06:55] <GinFuyou> like second annotate and filter
[04:07:24] *** Joins: bddba (~bddba@2600:8800:1d8b:ef00:d56e:939d:5c5c:f14a)
[04:08:44] <GinFuyou> then qs1 = self.object_list.annotate(<annotate1>) qs2=self.object_list.annotate(<annotate2>)
[04:11:55] <wallbroken> GinFuyou: well, client side is hard
[04:12:12] <wallbroken> so the best i can do is to add a check that if you try to add the item to the cart
[04:12:27] <wallbroken> a message tells you "that item is already ordered"
[04:13:08] <PaulWay[w]> You should always do that on the server, but you can also implement a Javascript check in the browser (though I don't know how).
[04:14:48] *** Joins: weewoo_ (~weewoo@206.75.116.113)
[04:15:37] *** Quits: weewoo_ (~weewoo@206.75.116.113) (Remote host closed the connection)
[04:16:17] *** Joins: diek (~diek@2804:14d:7681:82bd:bc59:26ca:9f7a:29de)
[04:19:52] *** Joins: weewoo_ (~weewoo@206.75.116.113)
[04:20:34] *** Quits: weewoo_ (~weewoo@206.75.116.113) (Remote host closed the connection)
[04:20:39] *** Quits: Kalov (~Thunderbi@179.56.117.154) (Remote host closed the connection)
[04:23:11] *** Joins: weewoo_ (~weewoo@206.75.116.113)
[04:24:04] <remo> How to use two cache together ?
[04:24:32] <remo> INMEM_CACHE_ALIAS = 'inmem'
[04:24:32] <remo> DEFAULT_CACHE_ALIAS = 'default'
[04:24:32] <remo> CACHE_MIDDLEWARE_ALIAS = "default"
[04:24:32] <remo> CACHES = {
[04:24:32] <remo>     "default": {
[04:24:33] <remo>         "BACKEND": "django_redis.cache.RedisCache",
[04:24:35] <remo>         "LOCATION": f"redis://{BASE_REDIS_CONTAINER}_1:6379/1",  # noqa
[04:24:37] <remo>         "OPTIONS": {
[04:24:39] <remo>             "CLIENT_CLASS": "django_redis.client.DefaultClient",
[04:24:41] <remo>         }
[04:24:42] *** Quits: oblikoamorale (~n@user/oblikoamorale) (Ping timeout: 240 seconds)
[04:24:43] <remo>     },
[04:24:43] <schinckel> Yeah, don't paste in here please.
[04:24:43] *** Quits: clawh (~clawh@185.244.214.60) (Remote host closed the connection)
[04:24:44] *** Quits: weewoo_ (~weewoo@206.75.116.113) (Remote host closed the connection)
[04:24:45] <remo>     "inmem": {
[04:24:47] <remo>         "BACKEND": "django.core.cache.backends.locmem.LocMemCache",
[04:24:51] <remo>         # "LOCATION": "unique-snowflake",
[04:24:53] <remo>     }
[04:24:55] <remo> }
[04:24:57] <remo> django.core.cache.backends.base.InvalidCacheBackendError: The connection 'inmem' doesn't exist.
[04:24:59] <remo> schinckel: ok)
[04:27:12] *** Joins: oblikoamorale (~n@user/oblikoamorale)
[04:31:26] *** Joins: weewoo_ (~weewoo@206.75.116.113)
[04:32:35] *** Quits: weewoo_ (~weewoo@206.75.116.113) (Remote host closed the connection)
[04:39:38] *** Joins: weewoo_ (~weewoo@S0106a84e3fe837d3.ed.shawcable.net)
[04:40:08] *** Quits: weewoo_ (~weewoo@S0106a84e3fe837d3.ed.shawcable.net) (Remote host closed the connection)
[04:40:59] *** Quits: Thanatos (~Thanatos@197.210.64.157) (Ping timeout: 265 seconds)
[04:44:27] *** Quits: diek (~diek@2804:14d:7681:82bd:bc59:26ca:9f7a:29de) (Remote host closed the connection)
[04:53:08] <schinckel> remo: Can you dpaste the stack trace for that error?
[04:53:48] *** Joins: diek (~diek@187.36.4.113)
[05:00:52] <remo> schinckel: https://paste.debian.net/hidden/2bbb0110/
[05:10:36] <GinFuyou> hm, pretty unimportant question, but I can't make my mind. If you need 3-state field like (selected, not selected, undecided) would you use a nullable boolean or just a field of choices?
[05:16:05] <remo> schinckel: ?
[05:17:20] <schinckel> remo: It might be interesting to drop into a pdb breakpoint in that django method and see what _is_ in `caches`.
[05:18:30] <schinckel> https://github.com/django/django/blob/main/django/core/checks/caches.py#L63 suggests that it's not creating the caches correctly.
[05:20:33] *** Quits: diek (~diek@187.36.4.113) (Remote host closed the connection)
[05:22:11] <remo> schinckel: this bug unavailable in LTS, but aviable in current release
[05:22:52] <schinckel> Okay, that's different then. Have you looked in the django bug tracker, and reported it there if you can't find it?
[05:23:16] <schinckel> (What version do you mean by LTS?)
[05:27:57] *** Quits: schmillin_ (~schmillin@user/schmillin) (Quit: Leaving)
[05:32:14] *** Joins: elena (~elena@202-153-212-80.ca99d4.syd.static.aussiebb.net)
[05:35:07] *** Joins: diek (~diek@187.36.4.113)
[05:36:35] *** Joins: tm007 (uid287041@id-287041.highgate.irccloud.com)
[05:38:55] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:38:57] *** Quits: remo (~user@wheelly-shelter.volia.net) (Quit: Leaving)
[05:40:10] <PaulWay[w]> LTS usually means Long Term Support
[05:43:42] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[05:52:07] <GinFuyou> Yes, but current django release is LTS
[05:52:46] *** Quits: diek (~diek@187.36.4.113) (Remote host closed the connection)
[05:52:51] <PaulWay[w]> Ah, sorry, I misunderstood schinkel - I missed the 'version' in 'what version do you mean'?
[05:55:05] <PaulWay[w]> :-)
[05:55:34] *** Quits: bddba (~bddba@2600:8800:1d8b:ef00:d56e:939d:5c5c:f14a) (Quit: Client closed)
[06:01:17] *** Joins: bddba (~bddba@2600:8800:1d8b:ef00:d56e:939d:5c5c:f14a)
[06:01:36] *** Parts: bddba (~bddba@2600:8800:1d8b:ef00:d56e:939d:5c5c:f14a) ()
[06:05:30] *** Joins: diek (~diek@2804:14d:7681:82bd:bc59:26ca:9f7a:29de)
[06:10:29] *** Quits: diek (~diek@2804:14d:7681:82bd:bc59:26ca:9f7a:29de) (Ping timeout: 244 seconds)
[06:11:42] *** Quits: typh (~jason@159.203.17.45) (Quit: WeeChat 3.1)
[06:20:13] *** Quits: finnx (~sheppards@2600:1702:1ae0:930:2734:d7d7:c526:9d51) (Quit: Leaving)
[06:25:06] *** Joins: diek (~diek@187.36.4.113)
[06:26:10] *** Joins: onorbumbum (~onorbumbu@2600:6c52:7800:3131:f4d8:90c6:f667:fa15)
[06:27:48] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:5642:78c3:490c:d48) (Ping timeout: 265 seconds)
[06:28:08] <onorbumbum> Hello awesome people. I have a question that has been bothering me for some time now. I have a question about autocomplete on foreign keys on frontend. I know a form of sleect2 is used on the backend. I want to know if I'm missing something. Is there an easy way of implementing autocomplete on foreign keys in frontend forms?
[06:28:14] <onorbumbum> Thank you in advance
[06:29:44] *** Quits: diek (~diek@187.36.4.113) (Ping timeout: 265 seconds)
[06:30:51] *** Quits: slavfox (~slavfox@93.158.232.111) (Quit: ZNC 1.8.2 - https://znc.in)
[06:31:41] *** Joins: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl)
[06:38:21] <GinFuyou> onorbumbum, yes, django-select2 or similar packages
[06:38:46] <onorbumbum> i have tried dal and a jquery ui so far, wrote a custom view
[06:39:20] <onorbumbum> but i realized maybe I am missing something. this functionality exists in admin. I thought maybe there is a widget thatI am missing.
[06:39:39] <onorbumbum> Thank you for your answer. Any one package that you like more than the other?
[06:40:42] <GinFuyou> I used django-select2 and it fulfilled my needs, so I haven't tried others yet
[06:41:48] <GinFuyou> I have a project that uses fully custom autocomplete (because it's needs to be relatively advanced) I'm planning to take a look if I can re-purpose some other package to develop it
[06:42:13] <GinFuyou> But in most cases select2 got me covered
[06:42:42] <onorbumbum> select2 documentation says you need  a persistent cache
[06:42:58] <onorbumbum> I am not sure if pythonanywhere lets you
[06:46:06] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 244 seconds)
[07:09:38] <wallbroken> GinFuyou: i'm still trying to know how to make a check when adding an item to cart
[07:10:07] <wallbroken> i'm trying to implement a check that will allow/deny it if the item is in "ordered" state
[07:13:37] *** Joins: explore (uid233125@id-233125.stonehaven.irccloud.com)
[07:25:22] *** Joins: diek (~diek@2804:14d:7681:82bd:859a:5a5a:f72e:2420)
[07:30:09] *** Quits: diek (~diek@2804:14d:7681:82bd:859a:5a5a:f72e:2420) (Ping timeout: 265 seconds)
[07:36:17] <sed> does anyone have a kubernetes configuration they can share for their django production app?
[07:43:15] *** Joins: skeld_ (~skeld@2601:148:200:ac70:b046:7927:9a95:9891)
[07:47:26] *** Quits: skeld (~skeld@2601:148:200:ac70:1027:a3de:b0d:be8c) (Ping timeout: 252 seconds)
[07:48:10] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[07:53:45] *** Joins: weewoo_ (~weewoo@S0106bc4dfbe53d33.ed.shawcable.net)
[07:54:25] *** Quits: weewoo_ (~weewoo@S0106bc4dfbe53d33.ed.shawcable.net) (Remote host closed the connection)
[08:08:30] *** Joins: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:5642:78c3:490c:d48)
[08:10:47] *** Quits: rje_ (~rje@50.54.137.153) (Quit: rje will be back)
[08:16:04] *** Quits: yanchai (~yanchai@124.105.86.225) (Ping timeout: 265 seconds)
[08:31:49] *** Joins: tm007_ (uid287041@id-287041.highgate.irccloud.com)
[08:32:10] *** Joins: explore_ (uid233125@id-233125.stonehaven.irccloud.com)
[08:32:20] *** Joins: lazzurs3 (~lazzurs@user/lazzurs)
[08:33:00] *** Joins: rowbee (~augh@theguntretort.com)
[08:39:36] *** Quits: explore (uid233125@id-233125.stonehaven.irccloud.com) (*.net *.split)
[08:39:36] *** Quits: onorbumbum (~onorbumbu@2600:6c52:7800:3131:f4d8:90c6:f667:fa15) (*.net *.split)
[08:39:36] *** Quits: tm007 (uid287041@id-287041.highgate.irccloud.com) (*.net *.split)
[08:39:36] *** Quits: sed (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net) (*.net *.split)
[08:39:36] *** Quits: audiocat (~audio@2603-8081-1800-0062-0963-400c-620f-c7e4.res6.spectrum.com) (*.net *.split)
[08:39:36] *** Quits: rwb (~augh@theguntretort.com) (*.net *.split)
[08:39:36] *** Quits: neteffect (~neteffect@47.201.17.61) (*.net *.split)
[08:39:36] *** Quits: lazzurs (~lazzurs@user/lazzurs) (*.net *.split)
[08:39:37] *** tm007_ is now known as tm007
[08:39:37] *** explore_ is now known as explore
[08:39:37] *** rowbee is now known as rwb
[08:39:37] *** lazzurs3 is now known as lazzurs
[08:46:43] *** Joins: diek (~diek@187.36.4.113)
[08:51:23] *** Quits: diek (~diek@187.36[09:27:36] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[09:28:12] *** Joins: biozz (~biozz@178.57.22.163)
[09:30:08] *** Quits: ChanServ (ChanServ@services.libera.chat) (shutting down)
[09:30:56] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[09:44:55] *** Joins: ChanServ (ChanServ@services.libera.chat)
[09:44:55] *** iridium.libera.chat sets mode: +o ChanServ
[09:46:00] *** Joins: biozz (~biozz@178.57.22.163)
[09:51:22] *** Quits: biozz (~biozz@178.57.22.163) (Quit: Leaving...)
[09:57:23] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 268 seconds)
[10:00:28] *** Quits: jgee (~jgee@186.80.49.20) (Ping timeout: 268 seconds)
[10:13:45] *** Quits: weewoo (~Unchained@S0106bc4dfbe53d33.ed.shawcable.net) (Quit: Client closed)
[10:20:04] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[10:43:14] *** Joins: especial (~especial@cm-84.214.207.74.getinternet.no)
[10:43:21] *** Quits: elena (~elena@202-153-212-80.ca99d4.syd.static.aussiebb.net) (Quit: Client closed)
[10:48:04] *** Joins: blackleitus (~blackleit@189.195.192.28)
[10:48:44] <blackleitus> is there a way to use in django exclude instead of `fields = ('field1,field2, etc')
[10:49:06] <blackleitus> I want to include fields in serializer in django drf
[10:53:48] <FunkyBob> blackleitus: you mean a way to list fields to _not_ serialise?
[10:54:01] <FunkyBob> I'd guess that DRF would do the same pattern as django Forms, which support exclude=
[10:54:09] <FunkyBob> you'd... have to read their docs to find out
[10:54:46] *** Joins: aaribaud (~aaribaud@2a01:e0a:c:2150:ecee:e4b2:d659:54f4)
[10:56:43] <blackleitus> exactly
[10:57:12] <blackleitus> I think is better telling which ones you dont want then telling which ones you want to
[10:59:00] <blackleitus> FunkyBob, by the way , do you build api params wihtout having to use multiples request.get('') for each django api param ?
[11:00:27] *** Joins: mattil (~mattil@helsinki.portalify.com)
[11:00:34] <aaribaud> Hello everyone. I am looking for a way to provide a django-based website to beta users, where each user can get their own, dynamically created, short-lived, instance of the django web application and their own DB. Surely I can't be the first one with such a requirement. What do you folks use for this?
[11:01:32] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[11:02:25] *** Joins: diek (~diek@2804:14d:7681:82bd:859a:5a5a:f72e:2420)
[11:03:57] *** Quits: Catatonic (~Catatonic@ariel.whatbox.ca) (Quit: Quit)
[11:04:52] *** Joins: Catatonic (~Catatonic@ariel.whatbox.ca)
[11:06:17] <PaulWay[w]> aaribaud: Containers?
[11:07:02] <wallbroken> FunkyBob: do you think what i want to do is easily possible?
[11:07:04] *** Quits: diek (~diek@2804:14d:7681:82bd:859a:5a5a:f72e:2420) (Ping timeout: 268 seconds)
[11:07:17] <aaribaud> PaulWay[w]: I am hoping for the most lightweight possible.
[11:07:22] <PaulWay[w]> I've missed that bit of the conversation wallbroken.
[11:07:32] <PaulWay[w]> aaribaud: well, it's lighter than VMs.
[11:07:57] <PaulWay[w]> What are you trying to achieve, though, aaribaud?
[11:08:06] <PaulWay[w]> What are you providing?
[11:08:16] <wallbroken> PaulWay[w]: what are you referring to?
[11:09:09] <PaulWay[w]> I thought you were asking a question generally.
[11:09:22] <PaulWay[w]> Most things are possible, the question is how.
[11:10:45] <PaulWay[w]> blackleitus: yes, IIRC DRF serializers support exclude=
[11:11:23] <aaribaud> PaulWay[w]: sure containers are lighter than VMs. I am trying to find if there is e.g. a python "web application instance factory" that would take a Django application and instantiate on-demand for visitors. Like some projects which have a "try me" URL.
[11:12:23] <PaulWay[w]> So you're providing base Django applications for people to customise?  And you want people to try them out?
[11:12:56] *** Joins: elena (~elena@202-153-212-80.ca99d4.syd.static.aussiebb.net)
[11:13:30] <aaribaud> My goal is to provide beta testers with a starting point (pre-fille DB) fr[12:04:55] *** Quits: diek (~diek@2804:14d:7681:82bd:859a:5a5a:f72e:2420) (Ping timeout: 244 seconds)
[12:14:13] *** Quits: PaulWay[w] (~PaulWay@2001:44b8:1110:f800:5642:78c3:490c:d48) (Ping timeout: 244 seconds)
[12:20:07] *** Joins: brylie (~Thunderbi@88-114-218-116.elisa-laajakaista.fi)
[12:20:10] *** Joins: wattux (~wattux@212.51.23.106)
[12:35:45] *** Joins: dre (~dre@120.156.36.108)
[12:35:57] <dre> finally figured out weechat
[12:36:00] <dre> wew
[12:47:24] *** Joins: pycode (~pycode@2001:b07:5d28:551:9f5b:9549:fe62:a9b9)
[12:47:25] <pycode> hello
[12:48:17] <pycode> i have a small HR backend where i need to show some counter like number of applications, number of profiles, etc... i need those "numbers" in many pages, should i create a tag?
[12:48:40] <pycode> otherwise i need to add on every view new context with those numbers
[12:59:29] *** Quits: brylie (~Thunderbi@88-114-218-116.elisa-laajakaista.fi) (Quit: brylie)
[13:04:32] <dre> I'm trying to think of the best way to implement a pluggable, "checks" module.
[13:05:11] <dre> for instance. say I have something like a Document(Model)
[13:06:18] <dre> and a collection of Check classes, like CheckAttachments or CheckSuitabilityForX - which are custom code in the codebase
[13:07:18] <dre> if I want the Document to be linked to different checks, how should I do it? (I guess now that I think about it, it might be some sort of .choices enum?)
[13:07:51] <dre> and have something like the_document.run_checks() (?)
[13:07:53] <dre> no idea
[13:14:01] *** Joins: browniebroke (uid501792@id-501792.tinside.irccloud.com)
[13:34:01] *** Joins: n00bn00b (~N00b@79.184.114.71.ipv4.supernova.orange.pl)
[13:35:26] <n00bn00b> apollo13 and wattux: Hi we have talked about blocking anon users to all views but login on django; latest conclusion was middleware with django-require-login; needs was testing against regression and CI with new code
[13:35:41] <n00bn00b> so the middleware is not present in RequestFactory "by design"
[13:35:58] <n00bn00b> https://stackoverflow.com/a/59059177
[13:36:08] <n00bn00b> https://docs.djangoproject.com/en/3.2/topics/testing/advanced/#the-request-factory
[13:36:43] <n00bn00b> so, no - still there is no way to protect project automagically from the crap change
[13:36:49] <n00bn00b> in this scenario
[13:53:47] *** Joins: n00bn00b_ (~N00b@79.184.114.71.ipv4.supernova.orange.pl)
[13:55:05] *** Joins: k3nny (~k3nny@user/k3nny)
[13:57:10] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[13:57:20] *** Quits: n00bn00b (~N00b@79.184.114.71.ipv4.supernova.orange.pl) (Ping timeout: 265 seconds)
[14:00:15] *** Joins: n00bn00b (~N00b@79.184.114.71.ipv4.supernova.orange.pl)
[14:03:08] *** Quits: n00bn00b_ (~N00b@79.184.114.71.ipv4.supernova.orange.pl) (Ping timeout: 265 seconds)
[14:03:27] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[14:18:33] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[14:20:34] *** Quits: n00bn00b (~N00b@79.184.114.71.ipv4.supernova.orange.pl) (Quit: WeeChat 3.0)
[14:21:48] *** Joins: n00bn00b (~N00b@79.184.114.71.ipv4.supernova.orange.pl)
[14:26:20] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[14:27:07] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Killed (zirconium.libera.chat (Nickname regained by services)))
[14:27:07] *** vinleod is now known as vdamewood
[14:30:12] <pycode> ok my urls have some problem.... i do 127.0.0.1:8000/company/dashboard and i get page not found.... (debug=True)and i read....  Django tried these URL patterns, in this order: ....
[14:30:22] <pycode> company dashboard [name='dashboard']
[14:30:22] *** Joins: Sahil66 (~Sahil@150.107.182.213)
[14:30:27] *** Joins: zothix (~zoth@user/zothix)
[14:30:28] <pycode> so whats the problem?
[14:31:52] <GinFuyou> pycode, share full traceback and patterns please
[14:31:57] <zothix> My django API works fine when i send data as raw form through post man, when i send it through form data, my nested dictionary goes as user: ['{...user_fields}'] and drf gives error of user field is required
[14:32:05] <pycode> GinFuyou, thi