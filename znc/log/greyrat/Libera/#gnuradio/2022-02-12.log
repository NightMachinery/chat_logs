[00:00:32] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[00:25:31] *** Joins: yesno (~yesno@109.98.151.62)
[01:04:20] *** Quits: yesno (~yesno@109.98.151.62) (Quit: Leaving)
[01:08:17] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 240 seconds)
[01:53:20] *** Joins: epony (epony@user/epony)
[02:14:38] *** Joins: jemius (~imperator@200116b82d84c90044f28f95290de34c.dip.versatel-1u1.de)
[02:33:37] *** Quits: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[02:49:21] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[02:49:21] *** Quits: jemius (~imperator@200116b82d84c90044f28f95290de34c.dip.versatel-1u1.de) (Quit: Leaving)
[03:21:41] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:1965:773b:688d:6ecc)
[03:21:52] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:1965:773b:688d:6ecc) (Remote host closed the connection)
[03:23:49] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:cf3:7026:9a71:c50d)
[03:27:16] *** Joins: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:1965:773b:688d:6ecc)
[03:30:06] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[03:48:12] *** Joins: zxrqmz88 (~private@2603-7000-1302-b6f3-3d8a-a376-fc0f-5cee.res6.spectrum.com)
[03:53:36] <tcarls[m]> Interleaved characters switch between real and imaginary componenst
[03:53:45] <tcarls[m]> s/componenst/components/
[03:56:43] *** Quits: zxrqmz88 (~private@2603-7000-1302-b6f3-3d8a-a376-fc0f-5cee.res6.spectrum.com) (Quit: Quit)
[03:58:11] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Quit: Leaving)
[04:08:26] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:24:09] *** Joins: BrianG61UK__ (~BrianG61U@2a02:8010:66b7:dddd:1965:773b:688d:6ecc)
[04:27:17] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:1965:773b:688d:6ecc) (Ping timeout: 256 seconds)
[04:29:26] *** Quits: goldrak (~goldrak@bl16-27-108.dsl.telepac.pt) (Ping timeout: 260 seconds)
[04:37:02] *** Quits: BrianG61UK__ (~BrianG61U@2a02:8010:66b7:dddd:1965:773b:688d:6ecc) (Read error: Connection reset by peer)
[04:50:31] <tcarls[m]> Is there a Right Way way to schedule a callback in a block to be invoked at a given wall-clock time offset? (This is basically a "send a message and decrement a counter every N ms until that counter is at zero" use case).
[04:57:07] <Jacob[m]12> I don't think there is a specific way this "should" be done.
[04:58:14] <willcode4[m]> Timer-based callbacks would require creating a separate thread and using OS or C++ timer functions.
[04:58:30] <tcarls[m]> Would it break anything (f/e with assumptions about threading or lack thereof) to use the Python runtime's callback-scheduling facilities?
[04:59:38] <muaddib[m]> Look at the gr-timing_utils from sandia they have wall clock time.
[05:00:50] <tcarls[m]> Heh. There are some tools in there I already reinvented (f/e, the edge detector).
[05:01:17] <muaddib[m]> You might ask Jacob about them :)
[05:01:17] <muaddib[m]> I was glancing over it the other day , but havenâ€™t given it any real time (no pun intended). 
[05:02:49] <Jacob[m]12> specifically this block may be of interest: https://github.com/sandialabs/gr-timing_utils/blob/master/include/timing_utils/interrupt_emitter.h
[05:05:52] <tcarls[m]> Indeed; thank you
[05:08:40] <Jacob[m]12> anything that combines wall clock time and sample time inherently has a lot of edge cases. most of them are probably handled....but i can almost guarantee that at least some arent
[05:09:04] <tcarls[m]> nod. Fortunately, I can afford a lot of slop in my current use case.
[05:15:15] <Jacob[m]12> Ok that's good. I believe most of the challenges come from applications that require very precise timing and interrupt slew compensation
[05:17:57] <muaddib[m]> What would you recommend for doing precise timing operations? Iâ€™m still trying to understand the concept of timed commands. Iâ€™ve never had need to, but some stuff Iâ€™m messing around with now seems like it could benefit.
[05:23:05] <patchvonbraun[m]> The timed-command concept isn't particularly well integrated into GR at the moment.  Time tags on sample streams have been a thing for a while--which is absolutely necessary for doing things like TDMA systems.  Timed tuning on Ettus radios is design for those cases where the synthesizers have a phase-resynch feature and you have mulitple radios/daughtercards within a single  multi_usrp object, and you need them to all be tuned at
[05:23:06] <patchvonbraun[m]> exactly the same time (so that the RESYNCH pulse can happen at precisely the same time).
[05:30:49] <Jacob[m]12> Integrated timed messages would be very useful but are sort of complicated
[05:32:50] <Jacob[m]12> You could do what UHD does, and have an optional item number for a command but how you handle that for a work function (or general_work) is not straightforward
[05:33:23] <patchvonbraun[m]> Plenty of issues.  Like the radio's view of time vs host view of time.  They aren't operating off the same refclock.
[05:34:32] <Jacob[m]12> Yeah that is an added complication if alternate (anything but sample number) time sources are factored into the whole concept
[05:34:50] <Jacob[m]12> Even the simplest case is still problematic
[05:35:33] <Jacob[m]12> Using wall clock time in GR apps also does nasty things like make simulation or operating from files nondeterministic
[05:35:56] <Jacob[m]12> But sometimes you just need to bind things to the real world through absolute time
[05:59:39] <muaddib[m]> I think my use case is about as  crude as my understanding of tags, messages and PMTs. Those would the the 3 things on my â€˜yet to get comfortable withâ€™ list in GNURadio. 
[05:59:40] <muaddib[m]> Iâ€™m really just interested in how people send bursts at very small intervals to a UHD sink. If that can be done in GNURadio. 
[06:09:53] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[06:21:54] <Jacob[m]12> it definitely can, though this is not particularly simple using just in-tree tools
[06:22:39] <Jacob[m]12> start with PMTs (data structure), then tags are easy (they are just PMT objects associated with a specific item in a buffer), and then messages/PDUs
[06:23:51] <Jacob[m]12> PMTs are the underlying data type used for all those: tags/messages/pdus. They have some idiosyncrasies but are not as complicates as they seem
[06:24:13] *** Joins: yesno (~yesno@109.98.151.62)
[06:29:17] *** Quits: cuoops (~cuoops@user/cuoops) (Quit: kthxbye)
[06:31:55] *** Joins: Vonter (~Vonter@user/vonter)
[06:35:00] *** Joins: pcero (~pcero@187.135.224.248)
[06:59:56] <muaddib[m]> Ok. Iâ€™ll try that. Iâ€™ve been using GNURadio for about 9/10 years, but everytime I get to a situation with PMTâ€™s vs messages vs PDUâ€™s I have to go back through the PMT docs to remember how theyâ€™re formatted. Even then itâ€™s a little confusing. Maybe itâ€™s just a me thing :)
[06:59:56] <muaddib[m]> I separate a lot of my flowgraphs with ZMQ sockets on remote or local machine(s) for different things. As a user Iâ€™ve found it to be tough when I want to change a variable in multiple flowgraphs running at the same time: i.e. send a sample rate change from one graph to all the downstream blocks. I know the variable change is updated in one graph but sending that downstream and getting it picked up by the downstream blocks seems overly
[06:59:56] <muaddib[m]> complicated to do. 
[06:59:56] <muaddib[m]> Iâ€™ve actually used xmlrpc for this in the past. 
[07:08:11] *** Joins: cuoops (~cuoops@user/cuoops)
[07:12:28] <jsallay[m]> It's not just a you thing. There is an effort under way to modernize pmts. https://github.com/gnuradio/pmt
[07:12:28] <jsallay[m]> I know it doesn't help you now, but it should be integrated into the next version of gnuradio.
[07:12:58] *** Quits: pcero (~pcero@187.135.224.248) (Quit: Konversation terminated!)
[07:17:37] <Jacob[m]12> Ctrlport is really ideal for what you want muaddib however I don't think it's seen much attention since 3.7
[07:22:04] <muaddib[m]> > <@jsallay:gnuradio.org> It's not just a you thing. There is an effort under way to modernize pmts. https://github.com/gnuradio/pmt
[07:22:04] <muaddib[m]> > I know it doesn't help you now, but it should be integrated into the next version of gnuradio.
[07:22:04] <muaddib[m]> thanks for saying that. I thought there was talk on one of the recent project updates/GRCON update about replacing PMT's with a different structure altogether.  Do I have that confused with something else? was that LOG4CPP getting replaced with protobuf?
[07:23:01] <muaddib[m]> <Jacob[m]12> "Ctrlport is really ideal for..." <- I thought controlport was the thing that showed you your flowgraph bottlenecks and block consumption. The last time I used it was 3.7!
[07:23:20] <muaddib[m]> * and block CPU consumption. The
[07:24:39] <jsallay[m]> There was a talk about it at grcon. https://events.gnuradio.org/event/8/contributions/71/attachments/43/76/GRCon21%20PMTs.pptx
[07:25:22] <muaddib[m]> yup, I knew it was a google thing.
[07:26:57] <muaddib[m]> i'm excited about the modernization. This year i've had way more need for it than I ever have in the past which is probly why i'm behind in my knowledge. Thanks for the update though!
[07:37:20] <drmpeg> Ctrlport is somewhat broken since pybind11.
[07:38:19] <muaddib[m]> <whatever the emoji is for sad face>
[07:39:55] <drmpeg> It may still be useful, but the Python bindings are definitely not working.
[07:42:15] <drmpeg> https://github.com/gnuradio/gnuradio/blob/main/gr-blocks/python/blocks/bindings/python_bindings.cc#L53
[07:47:00] <muaddib[m]> i think i can see why :D
[07:47:54] <drmpeg> It has to do with the bindings being built on the fly.
[07:48:11] <muaddib[m]> oh ok
[07:48:14] <drmpeg> https://github.com/gnuradio/gnuradio/blob/main/gnuradio-runtime/lib/CMakeLists.txt#L207
[11:15:41] *** Quits: yesno (~yesno@109.98.151.62) (Quit: Leaving)
[11:17:44] *** Joins: mk[] (~mk@27-32-61-230.tpgi.com.au)
[11:21:08] <mk[]> hey, is it normal to get "bytes lost" message with rtl_test?
[11:23:35] *** Quits: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net) (Remote host closed the connection)
[12:12:59] *** Quits: mk[] (~mk@27-32-61-230.tpgi.com.au) (Quit: Leaving)
[12:17:34] *** Joins: harish_ (~harish@27.125.135.173)
[12:17:34] *** Quits: harish__ (~harish@158.140.144.42) (Read error: No route to host)
[12:19:04] *** Joins: harish__ (~harish@158.140.144.42)
[12:22:23] *** Quits: harish_ (~harish@27.125.135.173) (Ping timeout: 256 seconds)
[12:25:17] *** Joins: jemius (~imperator@200116b82dc18400cf44e2fbedcfde7e.dip.versatel-1u1.de)
[12:30:10] *** Quits: DavidGarca[m] (~pdgarciam@2001:470:69fc:105::1:6743) (Quit: You have been kicked for being idle)
[12:30:10] *** Quits: Solomon[m] (~solomonbs@2001:470:69fc:105::e1a7) (Quit: You have been kicked for being idle)
[12:30:10] *** Quits: cpfig[m] (~cpfiggnur@2001:470:69fc:105::1:36c4) (Quit: You have been kicked for being idle)
[13:10:08] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:ac:7dd7:a7a6:6992)
[13:24:25] *** Joins: IanW (~IceChat9@jindivik.force9.co.uk)
[14:12:08] *** Quits: jemius (~imperator@200116b82dc18400cf44e2fbedcfde7e.dip.versatel-1u1.de) (Quit: Leaving)
[15:11:15] *** Quits: arch3r (~ben@185.66.194.78) (Ping timeout: 256 seconds)
[15:15:15] *** Joins: arch3r (~ben@185.66.194.78)
[15:19:46] *** Quits: arch3r (~ben@185.66.194.78) (Read error: Connection reset by peer)
[15:34:57] *** Joins: arch3r (~ben@185.66.194.78)
[15:49:30] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[16:11:58] *** Joins: goldrak (~goldrak@bl16-27-108.dsl.telepac.pt)
[16:14:32] *** Joins: yesno (~yesno@109.98.151.62)
[16:24:23] *** Joins: nsk_nyc (~nsk_nyc@network45-238-142-host-234.inethn.net)
[16:26:21] *** Joins: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de)
[17:10:28] *** Joins: baracurda (~baracurda@user/parserblabla)
[17:14:35] *** Quits: nsk_nyc (~nsk_nyc@network45-238-142-host-234.inethn.net) (Quit: Textual IRC Client: www.textualapp.com)
[17:28:09] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 256 seconds)
[17:28:45] *** Joins: wolfshappen (~waff@irc.furworks.de)
[17:39:24] *** Quits: Thorn (~Thorn@user/thorn) (Ping timeout: 256 seconds)
[17:41:59] *** Joins: Thorn (~Thorn@user/thorn)
[17:57:00] *** Quits: baracurda (~baracurda@user/parserblabla) (Ping timeout: 276 seconds)
[18:26:54] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[18:37:22] *** Quits: gr33nR10t (~greenriot@user/gr33nr10t) (Read error: Connection reset by peer)
[18:41:28] *** Joins: gr33nR10t (~greenriot@user/gr33nr10t)
[18:54:31] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:ac:7dd7:a7a6:6992) (Ping timeout: 250 seconds)
[19:13:23] *** Joins: jemius (~imperator@200116b82dc18400cf44e2fbedcfde7e.dip.versatel-1u1.de)
[19:43:18] *** Joins: pcero (~pcero@187.135.224.248)
[19:57:37] <superkuh> When you first start it it might bobble once, but then not again. If it does it twice or any time well after start, that's not good.
[19:57:49] <superkuh> Oh. I'm literally a day late.
[20:30:17] *** Quits: goldrak (~goldrak@bl16-27-108.dsl.telepac.pt) (Ping timeout: 256 seconds)
[20:35:14] *** Joins: goldrak (~goldrak@bl16-27-108.dsl.telepac.pt)
[21:04:41] *** Quits: kusanagi (~kusanagi@user/kusanagi) (Read error: Connection reset by peer)
[21:06:01] *** Joins: kusanagi (~kusanagi@user/kusanagi)
[21:10:58] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:7e0e:65b7:7f7e:b0aa)
[21:11:10] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:7e0e:65b7:7f7e:b0aa) (Client Quit)
[21:14:59] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:7e0e:65b7:7f7e:b0aa)
[21:15:07] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:7e0e:65b7:7f7e:b0aa) (Client Quit)
[21:44:49] *** Joins: baracurda (~baracurda@user/parserblabla)
[21:56:59] *** Quits: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[22:14:17] *** Joins: leptonix (~leptonix@a83-163-17-196.adsl.xs4all.nl)
[22:15:50] *** Quits: leptonix (~leptonix@a83-163-17-196.adsl.xs4all.nl) (Client Quit)
[22:24:48] *** Quits: baracurda (~baracurda@user/parserblabla) (Ping timeout: 276 seconds)
[23:00:03] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[23:41:18] <patchvonbraun[m]> superkuh: But at least not a dollar short....
[23:55:08] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
