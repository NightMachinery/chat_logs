[01:12:35] *** Quits: Doraemon (~NeoCron@p200300c4cf07d8007d174ac0d3b51364.dip0.t-ipconnect.de) (Quit: Leaving)
[01:12:56] *** Joins: NeoCron (~NeoCron@p200300c4cf07d8007d174ac0d3b51364.dip0.t-ipconnect.de)
[01:13:23] <FromDiscord> <DaiChimpo> is there a nim equivalent of _getch()?
[01:18:37] <Amun-Ra> there's getch in terminal module
[01:26:43] <FromDiscord> <Phytolizer> how can one get the current username in nim? i know how to get it in C using getlogin_r(), is there a similar function in Nim?
[01:29:35] <Amun-Ra> getlogin in posix module
[01:29:55] <Amun-Ra> there's getlogin_r, too
[01:31:15] <FromDiscord> <Phytolizer> oh i was missing that module when searching the wiki. thanks
[01:31:44] <FromDiscord> <Phytolizer> (edit) "wiki." => "docs."
[01:39:48] <FromDiscord> <Yardanico> In reply to @Phytolizer "how can one get": You might also want to check out https://nim-lang.org/docs/os.html#getHomeDir , it's about the home dir but it's cross platform
[01:40:51] <FromDiscord> <Yardanico> It just gets the home dir from the env variable though
[01:54:27] *** Joins: fputs4 (~fputs@67.59.83.166)
[01:56:11] *** Quits: fputs (~fputs@67.59.83.166) (Ping timeout: 245 seconds)
[01:56:11] *** fputs4 is now known as fputs
[02:17:13] *** Quits: NeoCron (~NeoCron@p200300c4cf07d8007d174ac0d3b51364.dip0.t-ipconnect.de) (Quit: Leaving)
[02:57:52] *** Quits: terminalpusher (~terminalp@2a01:586:2941:1:aeef:4407:c895:665b) (Remote host closed the connection)
[03:09:30] <FromDiscord> <Phytolizer> sent a code paste, see https://play.nim-lang.org/#ix=3Gqp
[03:11:02] <FromDiscord> <Phytolizer> In reply to @Yardanico "You might also want": yeah i saw that but am only using Linux and so the getlogin() fn is good enough for me rn
[03:11:08] <FromDiscord> <Elegantbeef> That just means you dont have `{.base.}` applied to the method, which you do
[03:11:22] <FromDiscord> <Elegantbeef> So i can only imagine you're using an older nim version since it doesnt appear on 1.6.0
[03:11:33] <FromDiscord> <Phytolizer> using 1.7.1
[03:13:21] <FromDiscord> <Phytolizer> do you think it is just a bug in nimlsp? it does compile with nim
[03:13:47] <FromDiscord> <Phytolizer> using nimlsp 0.3.2
[03:15:03] <FromDiscord> <Elegantbeef> Quite possibly
[03:15:24] <FromDiscord> <Elegantbeef> Does `nim check` print any errors?
[03:15:35] <FromDiscord> <Phytolizer> nope
[03:16:08] <FromDiscord> <Elegantbeef> Then something spooky is happening ðŸ˜›
[03:16:44] *** Quits: adium (adium@user/adium) (Quit: Stable ZNC by #bnc4you)
[03:17:37] <FromDiscord> <Phytolizer> alright, i'll type up an issue. thanks
[03:35:12] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:35:36] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:55:42] <FromDiscord> <evoalg> In reply to @hmmm "oioi I want to": https://play.nim-lang.org/#ix=3Gqz ... I kinda like the first one maybe
[03:59:29] <FromDiscord> <Elegantbeef> Best is up to you
[04:02:18] <FromDiscord> <evoalg> I like hearing that!
[04:12:54] *** Joins: adium (adium@user/adium)
[04:16:30] *** Quits: krux02 (~krux02@p200300e8170c11004db6e8013ca32c23.dip0.t-ipconnect.de) (Remote host closed the connection)
[04:34:12] <FromDiscord> <TryAngle> sent a code paste, see https://play.nim-lang.org/#ix=3GqE
[04:34:44] <FromDiscord> <TryAngle> (edit) "https://play.nim-lang.org/#ix=3GqE" => "https://play.nim-lang.org/#ix=3GqF"
[04:35:48] <FromDiscord> <ynfle (ynfle)> It could be nimlsp is compiled with an older version of nim
[04:45:18] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[04:56:08] <FromDiscord> <Marisol> What's `doAssert` is for? Is it for unit testing?
[04:57:49] <FromDiscord> <Elegantbeef> It's an assertion that can never be turned off
[05:03:40] <FromDiscord> <Marisol> Ok so if the condition fails it won't compile, right? No need to make a separate unit test anymore
[05:04:25] <FromDiscord> <Elegantbeef> Well if it's a compile time statement yes, otherwise it's a runtime check
[05:05:03] <FromDiscord> <Marisol> Can check runtime? What happens if it fails on runtime... Just crash?
[05:05:24] <FromDiscord> <Elegantbeef> It raises the defect and closes
[05:05:42] <FromDiscord> <Elegantbeef> Which is what you want when you use doAssert
[05:06:08] <FromDiscord> <Elegantbeef> And no you do not want to catch the defect
[05:11:40] <FromDiscord> <evoalg> Ah ok I just looked it up, `assert` is not checked if compiled with `-d:danger` or `--assertions:off` but `doAssert` is always checked ... but it's only checked at that line right and not all the time? ... but `var a: 2..5` for eg would be checked all the time?
[05:12:09] <FromDiscord> <Rika> "at the line"?
[05:12:18] <FromDiscord> <Rika> only on execution yes
[05:12:19] <FromDiscord> <Marisol> Hmm ok. I still don't understand what we're using it for
[05:12:20] <FromDiscord> <Elegantbeef> Nope subrange type is not checked all the time
[05:12:23] <FromDiscord> <Rika> same with var a
[05:12:43] <FromDiscord> <Elegantbeef> You pretty much never use `doAssert`
[05:12:54] <FromDiscord> <Rika> In reply to @Marisol "Hmm ok. I still": guaranteed assert `doassert` vs sanity check assert `assert` i guess
[05:13:19] <FromDiscord> <Rika> tho i guess you would want sanity checks on all the time as well so
[05:13:34] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3GqM
[05:13:34] <FromDiscord> <Rika> i guess either use doassert or -d:danger --assertions:on
[05:13:50] <FromDiscord> <Rika> or never use -d:danger lmfao
[05:14:52] <FromDiscord> <Elegantbeef> Eh if you dont account for defects you deserve not having runnable code ðŸ˜›
[05:15:22] <FromDiscord> <Rika> ok
[05:15:36] <FromDiscord> <Rika> ill make all my exceptions defects no matter what then
[05:15:44] <FromDiscord> <Rika> that way no errors ever!
[05:15:52] <FromDiscord> <Elegantbeef> !remindme never to use rika's code
[05:16:04] <FromDiscord> <Rika> `raise Defect(nil)`?
[05:16:44] <FromDiscord> <Elegantbeef> !ban Rika
[05:17:01] <FromDiscord> <Rika> haha u aint a mod
[05:17:14] <FromDiscord> <Elegantbeef> Of course not cause i'd clean this place up! ðŸ˜›
[05:17:15] <FromDiscord> <Marisol> Need to dig more library source codes. I swear I saw doAssert all the time
[05:17:32] <FromDiscord> <Rika> yeah doassert and assert differences are vague id say
[05:17:42] <FromDiscord> <Elegantbeef> The issue with `doAssert` is it cannot be turned off so can be a detriment on performance
[05:17:55] <FromDiscord> <Rika> just like beef is
[05:18:46] <FromDiscord> <konsumlamm> In reply to @Marisol "Need to dig more": maybe you saw it in unit tests?
[05:28:53] <FromDiscord> <evoalg> what I mean is that `var a: 2..5` will be checked every time a is assigned to, but `assert a in 2..5` will only be checked on that line that the assertion in on (but if "a" get's assigned to later on in the program) ... have I got that right?
[05:29:13] <FromDiscord> <Rika> yes
[05:29:19] <FromDiscord> <evoalg> nice!
[05:29:43] <FromDiscord> <evoalg> that's only like the 2nd time I've got something right
[05:29:58] <FromDiscord> <Elegantbeef> You'll get 3 things eventually
[05:31:24] <FromDiscord> <evoalg> I appreciate your faith in me
[05:31:27] <FromDiscord> <Rika> unfortunate that you havent yet, beef
[05:31:55] <FromDiscord> <Elegantbeef> Eh 3 lefts make a right
[05:36:08] <FromDiscord> <ynfle (ynfle)> Nah
[05:36:48] <FromDiscord> <Rika> -3 != 1 though
[05:38:36] <FromDiscord> <Elegantbeef> Sure but turning is a relative operation so the resultant vector is perpendicular to my current direction, which means with three rotations i'll `dot(forward, originalRight) == 1`
[05:39:14] <FromDiscord> <Elegantbeef> Methinks the math checks out
[05:39:32] <FromDiscord> <evoalg> doAssert confirms it
[05:39:44] <FromDiscord> <Elegantbeef> Ah see evo is right 3 times now
[05:40:13] <FromDiscord> <evoalg> so you were right that I would be right 3 times?
[05:40:29] <FromDiscord> <Elegantbeef> No clue i dont have a degree in rightology
[05:42:01] <FromDiscord> <Rika> truth is absolute though xddd
[05:44:42] <FromDiscord> <Marisol> In reply to @konsumlamm "maybe you saw it": Here for example https://github.com/planety/prologue/blob/devel/src/prologue/validater/validater.nim
[05:45:08] <FromDiscord> <Elegantbeef> Those `doAsserts` are used in runnable tests
[05:45:18] <FromDiscord> <Elegantbeef> They're another line of testing in this case
[05:45:28] <FromDiscord> <Elegantbeef> runnable examples i mea
[05:50:35] <FromDiscord> <Marisol> So runnableExamples isn't part of the code... Read somewhere that it's only used for docs?
[05:51:44] <FromDiscord> <Rika> not really "only"
[05:51:50] <FromDiscord> <Rika> also for tests afaik
[05:53:33] <FromDiscord> <Marisol> Ok thanks. Will start writing tests
[06:06:49] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 256 seconds)
[06:10:35] <FromDiscord> <Elegantbeef> runnable examples is for docs and another line of tests really
[06:11:02] <FromDiscord> <Elegantbeef> You have examples that you know compile and are correct
[06:11:42] *** Joins: rockcavera (~rc@192.12.113.202)
[06:11:42] *** Quits: rockcavera (~rc@192.12.113.202) (Changing host)
[06:11:42] *** Joins: rockcavera (~rc@user/rockcavera)
[06:11:54] <FromDiscord> <Elegantbeef> When you use nim doc gen the examples are shown in a code block
[06:14:04] <FromDiscord> <Marisol> We have built in doc generator? Cool
[06:14:37] <FromDiscord> <Elegantbeef> Yep the nim docs are generated using the docgen
[07:14:20] <FromDiscord> <evoalg> `"foo".toSeq` produces `@['f', 'o', 'o']` ... but if I want to split to a seq of strings characters instead of chars, I could do this `"foo".toSeq.join(",").split(',')` which produces `@["f", "o", "o"]` but is there an easier way?
[07:16:00] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3Gr4
[07:16:11] <FromDiscord> <evoalg> ooooo thank!
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:44:46] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[08:50:23] <NimEventer> New post on r/nim by miran1: Advent of Nim 2021, see https://reddit.com/r/nim/comments/r4objm/advent_of_nim_2021/
[09:32:02] *** Quits: ehmry (~quassel@2a03:3b40:fe:ab::1) (*.net *.split)
[09:32:03] *** Quits: syl (~z@user/syl) (*.net *.split)
[09:32:03] *** Quits: def- (~def-@static.238.114.9.176.clients.your-server.de) (*.net *.split)
[09:32:03] *** Quits: NimBot (~NimBot@mail.nim-lang.org) (*.net *.split)
[09:32:03] *** Quits: dom96 (~dom@mail.nim-lang.org) (*.net *.split)
[09:32:13] *** Joins: def-- (~def-@static.238.114.9.176.clients.your-server.de)
[09:32:19] *** Joins: NimBot (~NimBot@mail.nim-lang.org)
[09:32:34] *** Joins: ehmry (~quassel@2a03:3b40:fe:ab::1)
[09:32:37] *** def-- is now known as def-
[09:33:32] *** Joins: dom96 (~dom@mail.nim-lang.org)
[09:35:55] *** Joins: syl (~z@user/syl)
[09:36:24] *** Quits: mjsir911 (~bnc@user/mjsir911) (*.net *.split)
[09:36:42] *** Joins: mjsir911 (~bnc@sirabella.org)
[09:36:44] *** Quits: mjsir911 (~bnc@sirabella.org) (Changing host)
[09:36:44] *** Joins: mjsir911 (~bnc@user/mjsir911)
[09:39:53] *** Quits: def- (~def-@static.238.114.9.176.clients.your-server.de) (Ping timeout: 256 seconds)
[09:39:53] *** Joins: def-- (~def-@static.238.114.9.176.clients.your-server.de)
[09:40:17] *** def-- is now known as def-
[11:20:11] <arkanoid> What would be the difference from writing a python program and compile it with nuitka (https://nuitka.net/pages/overview.html), or write the same program in nim but using a lot of nimpy?
[11:21:53] <arkanoid> If I got it correctly both ends up creating C code that call libpython directly
[12:33:41] <FromDiscord> <Slava0135> https://blog.jetbrains.com/blog/2021/11/29/welcome-to-fleet/ hope we will get Nim support as well
[12:34:35] *** Parts: k0ta (~k0ta@103.108.94.37) ()
[12:57:19] <arkanoid> cool!
[13:42:11] <FromDiscord> <evoalg> In reply to @arkanoid "What would be the": Have you tried it? I tried it but it seems really slow compared to Nim
[13:43:45] <arkanoid> evoalg, it seems to me that should be quite 1:1. Once you start running python code via nimpy and passing PyObjects between functions, it's just python without a .py script. Nuitka should be doing exactly the same
[13:45:29] <FromDiscord> <evoalg> ahh sorry I was comparing standard python converted to binary via nuitka compared to nim ... I didn't use nimpy or anything in my test
[13:46:27] <FromDiscord> <enthus1ast> what do you need from the python world?
[13:47:26] <arkanoid> enthus1ast scientific stack, numpy, pandas, other. I know about arraymancer and datamancer, but I need to do string manipulation
[13:49:36] <FromDiscord> <hmmm> hey I was testing one of my apps on wsl linux and it crashes at cannot open: file.txt IOERROR. Do I need to disinfect windows files in some way to make linux digest them?
[13:53:12] <FromDiscord> <hmmm> yea linux hates windows stuff, if I nano file.txt it slaps a huge red banner [file.txt is unwritable]
[13:56:47] <FromDiscord> <enthus1ast> @hmmm\: have you cd'ed into the correct folder?
[13:58:00] <FromDiscord> <hmmm> yea, apparently it's something having to do with the line endings of windows and linux being different. I just slapped all the files needed by the app in windows on the linux filesystem. Apparently I need to convert them in some way
[14:03:57] <FromDiscord> <evoalg> So if you used dos2unix on those files in a linux terminal then it would work?
[14:05:46] <FromDiscord> <hmmm> I was doing just that and surprisingly doesn't work, it says "converting file.txt to Unix format... but it actually doesn't! lol. Anyway I confirmed the problem is about line endings because I deleted one of the log files, touched a new one and that part of the program works
[14:06:28] <FromDiscord> <hmmm> I think notepad++ has a nifty EOL utility but I don't want to install it just for that lol. Maybe I'll look into VScode or better sublimetext facilities
[14:07:05] <FromDiscord> <enthus1ast> all major editors etc can read both nowadays
[14:07:14] <FromDiscord> <hmmm> and can save both ways?
[14:07:25] <FromDiscord> <enthus1ast> idk
[14:08:17] <FromDiscord> <enthus1ast> the line handling procs in nim also should be able to handle both
[14:08:39] <FromDiscord> <hmmm> I think nim it's fine, it's just linux that hates that stuff
[14:08:56] <FromDiscord> <enthus1ast> can you try to open with vimÃŸ
[14:08:58] <FromDiscord> <enthus1ast> ?
[14:09:22] <FromDiscord> <hmmm> yea it opens normally
[14:09:28] <FromDiscord> <hmmm> nano slaps the warning tho
[14:09:32] <FromDiscord> <enthus1ast> then nano is just shit
[14:09:35] <FromDiscord> <hmmm> lol
[14:09:49] <FromDiscord> <hmmm> yea but the problem is that the program still crashes in the non log part
[14:10:03] <FromDiscord> <enthus1ast> which program?
[14:10:05] <FromDiscord> <evoalg> if you do `cat -A file.txt` can you see the line endings?
[14:10:51] <FromDiscord> <hmmm> no line endings I can see with cat -A
[14:11:47] <FromDiscord> <evoalg> you can't? ... do you have gnu cat?
[14:12:01] <FromDiscord> <hmmm> hmm
[14:12:08] <FromDiscord> <hmmm> I think I have the normal cat lol
[14:12:11] <FromDiscord> <hmmm> how do I check
[14:13:21] <FromDiscord> <evoalg> `cat --version`
[14:13:43] <FromDiscord> <hmmm> yea cat GNU coreutils 9.0
[14:14:58] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[14:15:51] <FromDiscord> <evoalg> does the text file contain ascii or unicode?
[14:18:23] <FromDiscord> <hmmm> nah it's very simple lol https://media.discordapp.net/attachments/371759389889003532/914830140993855518/test.PNG
[14:21:06] <FromDiscord> <hmmm> honestly dos2unix should work but doesn't, sublimetext and vscode have painful settings that don't toggle and I don't absolutely want to install notepad++. The situation is dire
[14:22:31] <FromDiscord> <hmmm> oh
[14:22:32] <FromDiscord> <evoalg> So file.txt contains just TEST but it's crashing your nim app?
[14:22:37] <FromDiscord> <hmmm> this one liner solved it: awk '{ sub("\r$", ""); print }' winfile.txt > unixfile.txt
[14:22:44] <FromDiscord> <hmmm> don't know what it does but it works lol
[14:23:16] <FromDiscord> <enthus1ast> just testet, nano has no troubles read and write files created with notepad
[14:23:22] <FromDiscord> <enthus1ast> must be something else
[14:23:43] <FromDiscord> <hmmm>  https://media.discordapp.net/attachments/371759389889003532/914831483330494464/tested.PNG
[14:24:02] <FromDiscord> <evoalg> \r$ is windows end of line, and $ is unix, so that awk one liner just get's rid on the \r
[14:24:17] <FromDiscord> <enthus1ast> maybe the path gives troubles
[14:24:21] <FromDiscord> <hmmm> that's cool
[14:24:23] <FromDiscord> <enthus1ast> can you send a\:â†µpwd
[14:24:47] <FromDiscord> <hmmm> wait I'll first test the app with converted files
[14:24:48] <FromDiscord> <hmmm> should work
[14:25:07] <FromDiscord> <enthus1ast> bet you try to access win from linux side or other way around
[14:26:52] <FromDiscord> <hmmm> yea
[14:26:54] <FromDiscord> <hmmm> works perfectly
[14:27:01] <FromDiscord> <hmmm> it was the line endings
[14:27:42] <FromDiscord> <hmmm> so apparently the entire stuff it's one awk line....why dos2unix fails to apply a single awk line it's strange to me
[14:28:28] <FromDiscord> <enthus1ast> i think there's something else going on
[14:28:42] <FromDiscord> <enthus1ast> never had troubles with line endings since years
[14:29:16] <FromDiscord> <enthus1ast> and i use wsl extensively
[14:29:21] *** Joins: Colt (~Colt@user/colt)
[14:29:42] <FromDiscord> <hmmm> don't know, if nim gives IOERROR trying to write to a file, nano says it's unwritable, after the awk nano stfus and nim stops erroring, I'd say it's the line endings
[14:30:36] <FromDiscord> <enthus1ast> maybe it was able to change ownership or access rights
[14:30:37] <FromDiscord> <enthus1ast> idk
[14:30:43] <FromDiscord> <enthus1ast> but good that it works for you
[14:31:44] <FromDiscord> <hmmm> well I'm happy except I need to find a way to mass convert files I want to test on windows
[14:32:00] <FromDiscord> <hmmm> maybe this is the time to actually learn some bash magicks
[14:32:08] <arkanoid> how can I call a function that starts with "_" character in nimpy?
[14:37:55] <FromDiscord> <hmmm> oh nice found the sublimetext toggle, now we happy https://media.discordapp.net/attachments/371759389889003532/914835057380823100/sublimetext.png
[14:38:04] <FromDiscord> <hmmm> ðŸ¥³
[14:51:41] <arkanoid> solved (getAttr)
[15:01:58] <FromDiscord> <pietroppeter> @dom96 any thoughts on plausible analytics for website and forum? see https://forum.nim-lang.org/t/7439#56338
[15:35:29] <FromDiscord> <Steffen> sent a code paste, see https://play.nim-lang.org/#ix=3GsN
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:11] <FromDiscord> <Steffen> and I have no clue how to fix that
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:47] <arkanoid> why nimlsp doesn't come with instruction for vscode, that is the most used nim ide according to stats? https://github.com/PMunch/nimlsp
[15:38:35] <arkanoid> oh, there's a PR https://github.com/PMunch/nimlsp/pull/81
[15:41:27] <FromDiscord> <Steffen> gah, ok, I got it
[16:11:52] <FromDiscord> <hmmm> is it possible that in calling osproc execProcessif if one of the args in the openarray has a space in it like"-option x" it  can possibly lead to form the wrong command?
[16:17:02] <FromDiscord> <hmmm> hmm seems like it, I just switched to execCmd that takes args in freeform and it works. Still I'd like to use execProcess more since it's more comfy and has better options
[16:32:07] *** Joins: kayabaNerve_ (~kayabaNer@user/kayabanerve)
[16:33:01] *** Quits: kayabaNerve (~kayabaNer@user/kayabanerve) (Killed (NickServ (GHOST command used by kayabaNerve_)))
[16:33:04] *** kayabaNerve_ is now known as kayabaNerve
[16:39:29] *** Joins: src (~src@user/src)
[16:40:46] <NimEventer> New thread by Kobi: Question: How to limit concurrent async futures?, see https://forum.nim-lang.org/t/8665
[16:43:19] *** Joins: PMunch (~PMunch@user/pmunch)
[17:04:25] <arkanoid> just tried building python from source, static linking libpython.a, import nimpy and run some python code. It works! pldd shows no dynamically loaded libs and release + opt:size results in a 828KB executable size
[17:21:30] <FromDiscord> <hmmm> uh oh apparently there was an entire proc dedicated to my problems named quoteshell() in os
[17:28:42] <FromDiscord> <hmmm> good old timmy was fighting the good fight: https://github.com/nim-lang/Nim/pull/8272
[17:35:14] <FromDiscord> <dom96> In reply to @pietroppeter "<@132595483838251008> any thoughts on": happy to accept a PR to add support for them in NimForum ðŸ™‚
[17:36:09] <FromDiscord> <dom96> But I'd keep GAnalytics on the forum we have in prod, we can add Plausible as an additional one though
[17:37:26] *** Joins: arkurious (~arkurious@user/arkurious)
[18:01:39] *** Quits: xet7 (~xet7@user/xet7) (Quit: Leaving)
[18:02:46] *** Joins: xet7 (~xet7@user/xet7)
[18:07:19] *** Joins: rockcavera (~rc@192.12.113.70)
[18:07:19] *** Quits: rockcavera (~rc@192.12.113.70) (Changing host)
[18:07:19] *** Joins: rockcavera (~rc@user/rockcavera)
[19:10:34] <FromDiscord> <UN533N_5PY> https://nimble.directory/search?query=testâ†µsomething is wrong with nimble.directory
[19:13:02] <FromDiscord> <UN533N_5PY> Getting a 502 Gateway error
[19:19:25] <FromDiscord> <pietroppeter> In reply to @dom96 "happy to accept a": ok that I can do (PR for plausible in nimForum)
[19:21:03] <FromDiscord> <pietroppeter> In reply to @dom96 "But I'd keep GAnalytics": adding plausible fot forum in prod: what are the total monthly views on the biggest recent month? with my plausible subscription we could go up to 100K. What about the website? what is an estimate top monthly view for website?
[19:51:41] <FromDiscord> <jetlennit> hey! does anyone know if there's already been a push towards a spotify api wrapper in nim? i was thinking about making one and wanted to see if it had been done already
[20:19:29] <FromDiscord> <dom96> oh, I forgot this isn't free. Are there any Google Analytics alternatives that are free (or at least free for open source?)
[20:24:46] <nrds> <06Prestige99> https://nimble.directory/ is down eh?
[20:24:54] <nrds> <06Prestige99> 502 bad gateway
[20:26:40] <FromDiscord> <dom96> ping federico3
[20:43:02] <FromDiscord> <Knightmare Legion> Hello, is there a way for me to add bounds on generic types on stable /I know that this is possible with `concept` but it's unstable/?
[21:20:24] <FromDiscord> <hmmm> oh so cute, micro the linux editor understands nim synthax :nimAngry:
[21:21:39] <FromDiscord> <hmmm> you can also set to build and run with F7 or Ctrl + r making it on par with our best tooling solutions ðŸ˜†
[21:33:19] <nrds> <06Prestige99> how about showing errors etc?
[21:43:38] *** Joins: terminalpusher (~terminalp@2a01:586:2941:1:e472:132f:6ad:d0f3)
[21:50:27] <FromDiscord> <pietroppeter> In reply to @dom96 "oh, I forgot this": Plausible is open source though, so if one has a server it could install it there and use it for free. I guess it require additional effort though
[21:51:46] <arkanoid> most idiomatic way to create an empty array of strings?
[21:52:09] *** Joins: elph (uid286227@id-286227.lymington.irccloud.com)
[21:52:27] <FromDiscord> <pietroppeter> Notes on how to self host plausible analytics: https://plausible.io/self-hosted-web-analytics
[21:57:21] <nrds> <06Prestige99> arkanoid: array or sequence?
[21:57:45] *** Quits: fputs (~fputs@67.59.83.166) (Quit: The Lounge - https://thelounge.chat)
[21:57:54] <arkanoid> Actually I need both
[21:58:09] <PMunch> @pietroppeter, hmm maybe I should try plausible on my own website
[21:58:21] <FromDiscord> <pietroppeter> In reply to @dom96 "oh, I forgot this": It seems goat counter is free for non commercial use, interesting!
[21:58:29] <FromDiscord> <pietroppeter> https://www.goatcounter.com
[21:58:38] <PMunch> `var myStrArr: array[10, string]`?
[21:58:50] <PMunch> Or similar for seq?
[22:00:27] <FromDiscord> <pietroppeter> In reply to @PMunch "<@869267093110026320>, hmm maybe I": It is very easy to set up and they have a free trial. It also works very nicely from what I have seen so far. if you the want to be guest on my subscription you are welcome
[22:00:58] <PMunch> I was planning on self-hosting :P
[22:01:48] *** Joins: fputs (~fputs@67.59.83.166)
[22:05:45] *** Joins: krux02 (~krux02@p200300e8170c11004db6e8013ca32c23.dip0.t-ipconnect.de)
[22:06:13] <FromDiscord> <pietroppeter> Ah thatâ€™s better ðŸ™‚
[22:07:48] <arkanoid> PMunch, I was reinstalling vscodium and I wanted to try your nim lsp, with surprise I've found that vscode is not listen in the readme. Is there a reason for that?
[22:08:05] <PMunch> Yes
[22:08:12] <PMunch> The reason is that no-one have added it there
[22:08:23] <FromDiscord> <pietroppeter> GoatCounter and plausible are the only ones mentioned in this article (June 2020): https://lwn.net/Articles/822568/ what I am not able to find is if goatcounter allows public dashboard (visible to anyone). I like a lot that feature of plausible
[22:09:03] <nrds> <06Prestige99> Do any of the vscode plugins use nimlsp?
[22:09:31] <PMunch> I haven't used VSCode/-ium myself, so I don't know what to write in such a section
[22:10:18] <NimEventer> New post on r/nim by aduros: WASM-4 is a virtual game console for building simple retro games that now fully supports Nim, see https://reddit.com/r/nim/comments/r52faq/wasm4_is_a_virtual_game_console_for_building/
[22:11:32] <arkanoid> PMunch but vscode is the most used ide for nim according to stats, and you have a PR from ha guy who a has forked your lsp to make it async for the vscode-nim-lsp extension for vscode
[22:12:40] <nrds> <06Prestige99> I don't see such PR on the nimlsp repo?
[22:13:37] <nrds> <06Prestige99> unless you mean https://github.com/PMunch/nimlsp/pull/81/files
[22:13:59] <arkanoid> exactly
[22:14:58] <PMunch> That PR isn't really related to the project it's made to at all
[22:15:04] <PMunch> It just links to a different project..
[22:15:29] <nrds> <06Prestige99> yeah that other repo isn't a fork 
[22:16:21] <arkanoid> this https://github.com/bung87/nimlsp
[22:16:22] <PMunch> This apparently is a fork: https://github.com/bung87/nimlsp
[22:16:58] <nrds> <06Prestige99> Weird, I wonder why
[22:16:59] <arkanoid> yeah, he wrote me that his fors is your made async for its vscode extension, that expects that
[22:17:34] <PMunch> VSCode in Microsofts infinite wisdom somehow managed to mess up the very concept of LSP (which was created by Microsoft for VSCode by the way). AFAIK every LSP server (the language) needs its own plug-in in VSCode
[22:18:20] <arkanoid> and he has one: https://github.com/bung87/vscode-nim-lsp
[22:19:23] <arkanoid> so basically I end up installing your lsp and his extension, found out that they don't work together, then contacted him for info and he said that he preferred to turn your lsp to async (not sure if there's a technical reason behind that)
[22:19:24] <nrds> <06Prestige99> yeah that's the typescript one
[22:20:25] <arkanoid> question is: considering that vscode is the preferred ide among the community, isn't this a good start point to land lsp to the masses?
[22:20:44] <arkanoid> better tooling was on priority list, if I remember correctly
[22:21:46] <PMunch> The reason why VSCode is the favourite editor is because it has great plug-ins already that build on nimsuggest directly instead of on NimLSP
[22:23:17] <arkanoid> ok, but surely the future is lsp and splitting the community here seems not the best choice
[22:23:36] <PMunch> Would I prefer that everyone started helping out with NimLSP instead of developing individual plug-ins for all editors? Maybe, maybe not. After having implemented LSP I'm not too sure about the technical foundations of it, but at this point it's so popular that creating a better solution would probably never get you anywhere.
[22:24:08] <PMunch> I agree that LSP is nice and we should put more work into a proper LSP server though
[22:24:16] <FromDiscord> <Rika> im pretty sure many people also seem to have a revulsion of lsp over "standalone" as well
[22:24:24] <PMunch> Well, improve the current server
[22:24:37] <nrds> <06Prestige99> Isn't the biggest issue with it atm, nimsuggest?
[22:24:39] <PMunch> @Rika, really? Never heard anyone say that
[22:24:50] <nrds> <06Prestige99> Like it crashes constantly while I write code
[22:24:52] <FromDiscord> <Rika> not say it of course no one would
[22:24:59] <FromDiscord> <Rika> its just a gut feeling
[22:25:20] <PMunch> @Prestige, IMO yes, but all the plug-ins are built around nimsuggest and many of the other ones seems to work better than NimLSP sometimes does
[22:25:27] <arkanoid> a good lsp for nim would fit all IDE. It's just vscode that wants ad-hoc extension for that and should be considered an exception.
[22:25:47] <PMunch> Yes, as I said I'm all for improving NimLSP :)
[22:26:11] <nrds> <06Prestige99> PMunch I'll continue contributing if we can target what needs fixing. My biggest issue is just the crashing, though
[22:27:59] <PMunch> Yeah, and that's all down to nimsuggest
[22:28:22] <nrds> <06Prestige99> I expect fixing _that_ would be quite painful
[22:28:29] <arkanoid> well, I just wanted point out that a nim + vscode + (forked)lsp already exists. Maybe an integration of all the things could start from here
[22:28:30] <PMunch> I guess one thing to improve is logging of crash situations and possibly automatic reporting
[22:28:59] <FromDiscord> <Rika> it will "until its completely replaced by the solution enabled by IC"
[22:29:31] <PMunch> I don't think VSCode requires an async client though. But if my version doesn't work with the VSCode plug-in maybe I'm wrong
[22:29:33] <nrds> <06Prestige99> Isn't IC supposed to improve nimsuggest, or are we expecting a replacement?
[22:31:09] <FromDiscord> <Rika> thats what i said yes
[22:31:11] <FromDiscord> <Rika> oh
[22:31:15] <FromDiscord> <Rika> wait no i misread
[22:31:18] <FromDiscord> <Rika> no afaik its supposed to replace
[22:31:40] <FromDiscord> <Rika> rather again, "enable a replacement"
[22:32:10] <nrds> <06Prestige99> Hopefully that all comes sooner than later.. I feel like our IDE tooling is not great
[22:32:44] <FromDiscord> <Rika> "feel"? it really isnt
[22:33:05] <arkanoid> I have to keep restarting vscode every now and then to keep nim extension working
[22:34:13] <nrds> <06Prestige99> maybe nim 2.0
[22:34:16] <nrds> <06Prestige99> eh
[22:38:50] <PMunch> arkanoid, you aren't supposed to have to restart the editor.. The LSP client is supposed to manage the server and restart it if it crashes..
[22:39:26] <arkanoid> no, I'm not talking about the lsp world here. I'm still on vscode and it's extensions (based on nimsuggests)
[22:40:32] <PMunch> Ah VSCode should probably restart those when they crash..
[22:42:56] <PMunch> But I think they just run nimsuggest as a separate program so it might crash and the plug-in fails to restart it
[22:43:57] <FromDiscord> <Rika> pretty much
[22:50:09] <FromDiscord> <gdquest> In reply to @arkanoid "I have to keep": Ah! That's everyone? Good to hear that ðŸ™‚
[22:50:51] <FromDiscord> <gdquest> I was wondering why linting and completion stopped every now and then
[23:01:59] <arkanoid> all drills down to nimsuggest I think, but unsure. There are multiple levels of abstraction here. nimsuggest > vscode-extension, or nimsuggest > nimlsp > vscode-extension. All drills down to nimsuggest, that I think I've read that it's evolution is linked to partial compilation, that sould be on priority list
[23:02:33] <FromDiscord> <Rika> and afaik it is
[23:18:23] <FromDiscord> <Hex08> `/home/elia/code/nimbox/src/nimbox.nim(1, 8) Error: cannot open file: bigints`â†µAm I doing something wrong? I created a project with `nimble init`, then `nimble install bigints` and I'm doing `import bigints` in my main file
[23:19:17] <PMunch> require "bigints" in your .nimble file
[23:20:23] <PMunch> You don't need to `nimble install bigints`, simply add `require bigints` to your .nimble file and it will download and install it automatically if you don't already have it :)
[23:23:09] <FromDiscord> <Hex08> Got it! That's cool!
[23:30:37] <PMunch> Yup! Nimble is a combined build system and package manager
[23:32:57] *** Quits: happycorsair[m] (~happycors@2001:470:69fc:105::205) (Ping timeout: 265 seconds)
[23:36:52] *** Quits: terminalpusher (~terminalp@2a01:586:2941:1:e472:132f:6ad:d0f3) (Remote host closed the connection)
[23:37:09] *** Joins: terminalpusher (~terminalp@2a01:586:2941:1:e472:132f:6ad:d0f3)
[23:46:11] *** Joins: happycorsair[m] (~happycors@2001:470:69fc:105::205)
