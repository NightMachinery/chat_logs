[01:00:44] *** Joins: re101-bird-67 (~re101-bir@91.226.59.52)
[01:02:46] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[01:02:52] *** Joins: re101-bird-6727 (~re101-bir@91.226.59.52)
[01:05:49] *** Quits: wyre (~wyre@user/wyre) (Quit: ZNC 1.8.2 - https://znc.in)
[01:07:40] *** Joins: wyre (~wyre@user/wyre)
[01:07:57] *** Quits: src (~src@user/src) (Ping timeout: 240 seconds)
[01:08:32] *** Quits: dakudos (~dakudos@c-73-229-175-50.hsd1.co.comcast.net) (Ping timeout: 252 seconds)
[01:09:32] *** Joins: tkazi (~tkazi@user/tkazi)
[01:10:05] *** Joins: src (~src@user/src)
[01:12:40] *** Quits: tkazi (~tkazi@user/tkazi) (Client Quit)
[01:13:18] <re101-dog-24> anybody know off the top of their head is a lookbehind or lookahead more expensive?
[01:13:39] *** Joins: tkazi (~tkazi@user/tkazi)
[01:13:42] *** Quits: tkazi (~tkazi@user/tkazi) (Remote host closed the connection)
[01:14:51] <OnlineCop> Lookbehinds in most flavors except ECMAScript and .NET have a fixed-length lookbehind.
[01:15:30] <OnlineCop> In those cases, lookbehind would be a fixed number of iterations, where lookaheads have no size/length restriction.
[01:16:01] <purplex> depends on how to use them :p
[01:16:08] *** Joins: tkazi (~tkazi@user/tkazi)
[01:16:16] <OnlineCop> Most of the "expense" will be coming from your quantifiers: {min,max}, * (0 or more), + (1 or more), ? (0 or 1), since if one of those don't match, it will backtrack and try the other possibilities.
[01:16:55] <OnlineCop> Given that, I would assume lookaheads to be the more expensive.
[01:17:23] <purplex> in general lookbehind always seemed expensive to me so i prefer \K to them and sometimes it is redundant to use
[01:17:56] <purplex> but expensive in terms of "steps", not really in practical when you run code
[01:20:45] <purplex> even if its not expensive in practical, writing good regexes (which are more simple and readable) is what i prefer (regardless of speed comparison)
[01:24:55] <re101-dog-24> I'm just looking back 1 character so don't worry about lengths/limits
[01:34:24] *** Quits: src (~src@user/src) (Quit: leaving)
[01:37:20] *** Joins: dakudos (~dakudos@172.58.62.218)
[01:45:17] *** Joins: Guest72 (~Guest72@pool-100-37-122-152.nycmny.fios.verizon.net)
[01:45:28] <Guest72> How do I select any white space between two letters (not numbers or any other charecters) so that I can replace it with a comma and space? https://regex101.com/r/YTkWQZ/1
[01:45:34] <Guest72> https://regex101.com/r/YTkWQZ/1
[01:46:34] <Guest72> Want to be able to replace Charlie100db Charlie100db with Charlie100db, Charlie100db but not replace anything in a string like "Charlie 100dc, charlie 100 dcc,"
[01:46:37] <Guest72> ?
[01:47:53] *** Joins: [diablo]1 (~diablo]@user/diablo/x-9068044)
[01:49:47] *** Quits: [diablo] (~diablo]@user/diablo/x-9068044) (Ping timeout: 252 seconds)
[01:49:47] *** [diablo]1 is now known as [diablo]
[01:50:18] <Guest72> this is like dejavu
[01:52:00] *** Quits: dakudos (~dakudos@172.58.62.218) (Ping timeout: 252 seconds)
[01:54:33] <VectorX> Guest72 how is this? https://regex101.com/r/YTkWQZ/4
[01:55:29] <Guest72> dont want to select the letters
[01:55:53] <Guest72> just want to replace that white space with a ", "
[01:56:10] <VectorX> Guest72 since you are already doing a replace, the selected letters are getting added back
[01:56:33] <Guest72> It wont work because I wont know what letters there will be
[01:56:33] <VectorX> the result is what you asked for
[01:56:37] <Guest72> thatss just an example
[01:56:58] <Guest72> my example already had those sleected
[01:57:15] <Guest72> b\sC
[01:57:24] <re101-dog-24> does your enviornment support lookahead/behind?
[01:57:34] <VectorX> are they not going to be letters of the english alphabet?
[01:57:54] <Guest72> maybe you are right. I'm not sure
[01:58:05] <Guest72> I have to see if I can do that as substitution in google
[01:58:39] <re101-dog-24> if your enviornment supports lookahead/lookbehind I can give you the solution right now
[01:59:24] <VectorX> the exameple I gave selects any letter in the english alphabet from A to Z case insensitive ie upper and lowercase with the \i flag
[02:00:05] <re101-dog-24> he just wants to select the space between the letters, not the letters and the space
[02:00:31] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[02:03:56] *** Joins: dakudos (~dakudos@c-73-229-175-50.hsd1.co.comcast.net)
[02:05:59] <Guest72> I think I am stuck with using this format for the replacement REGEXREPLACE(text, regular_expression, replacement)
[02:06:22] <Guest72> so the replacement string is limited in that I do not believe it can also be regex
[02:29:49] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-186f-74a5-20d9-fd48.fixed6.kpn.net)
[02:33:05] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Read error: Connection reset by peer)
[02:33:06] *** Joins: dionysus70 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[02:34:23] *** Quits: JanC (~janc@user/janc) (Read error: Connection reset by peer)
[02:34:37] *** Joins: JanC (~janc@user/janc)
[02:34:37] *** Joins: src (~src@user/src)
[02:35:25] *** dionysus70 is now known as dionysus69
[02:45:50] <VectorX> Guest72 are you doing this in a spreadsheet ?
[02:45:56] <Guest72> yes
[02:46:07] <OnlineCop> When you capture values, the 'replacement' will use either \1 or $1 notation to insert those captured values back in.
[02:46:12] <OnlineCop> If $1 doesn't, work, try \1.
[02:46:21] <Guest72> ok let me see
[02:46:36] <VectorX> Guest72 ok, so as an example if you content is in cell A1 then if you add the function to another cell it would be something like this, =REGEXREPLACE(A1, "(?i)([a-z])\s+?([a-z])", "$1, $2")
[02:48:15] <Guest72> I tried the first one earlier it did not add a comma, I tried \1 just now and that doesnt work either
[02:48:44] <OnlineCop>  \1 itself doesn't add a comma. It's just going to contain the captured ([a-z]) letter.
[02:48:57] <Guest72> thanks gtg
[02:49:00] *** Quits: Guest72 (~Guest72@pool-100-37-122-152.nycmny.fios.verizon.net) (Quit: Client closed)
[03:15:07] *** Joins: guesswhat (~guesswhat@ip-89-177-103-59.net.upcbroadband.cz)
[03:22:27] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:33:08] *** Quits: guesswhat (~guesswhat@ip-89-177-103-59.net.upcbroadband.cz) (Quit: Client closed)
[03:33:30] *** Quits: daoudr_ (~daoudr@xdsl-31-164-222-159.adslplus.ch) (Quit: Leaving)
[03:36:17] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Ping timeout: 240 seconds)
[03:39:48] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-186f-74a5-20d9-fd48.fixed6.kpn.net) (Ping timeout: 240 seconds)
[03:41:33] *** Quits: src (~src@user/src) (Quit: leaving)
[04:00:23] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-6802-fd73-f118-91e.fixed6.kpn.net)
[04:03:35] *** Quits: re101-bird-6727 (~re101-bir@91.226.59.52) (Quit: Client closed)
[04:05:57] *** Quits: re101-bird-67 (~re101-bir@91.226.59.52) (Quit: Client closed)
[04:07:15] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-6802-fd73-f118-91e.fixed6.kpn.net) (Ping timeout: 268 seconds)
[04:14:39] *** Joins: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp)
[04:18:25] *** Quits: re101-dog-24 (~re101-dog@cpe-71-68-26-80.carolina.res.rr.com) (Quit: Client closed)
[04:25:30] *** Quits: Fozzworth (~Fozzworth@user/fozzworth) (Read error: Connection reset by peer)
[04:40:26] *** Joins: z_lehinsun (~lehinsun@188.113.178.220)
[04:40:44] *** Quits: z_lehinsun (~lehinsun@188.113.178.220) (Remote host closed the connection)
[05:09:03] *** Joins: ahmedelgabri (~ahmedelga@2a02:a446:d88a:1:3557:8879:525a:7fdd)
[05:10:07] *** Joins: w_lehinsun (~lehinsun@188.113.178.220)
[05:16:59] *** Quits: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[05:17:02] *** Quits: ahmedelgabri (~ahmedelga@2a02:a446:d88a:1:3557:8879:525a:7fdd) (Ping timeout: 240 seconds)
[06:14:42] *** Quits: w_lehinsun (~lehinsun@188.113.178.220) (Read error: Connection reset by peer)
[06:19:28] *** Quits: sgen (~sgen@2607:fea8:7ce1:c8e0:a992:a734:d5e:8b54) (Remote host closed the connection)
[06:32:17] *** Quits: maetthew (~maetthew@user/maetthew) (Quit: ZNC 1.8.2 - https://znc.in)
[06:34:54] *** Joins: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se)
[06:34:54] *** Quits: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se) (Changing host)
[06:34:54] *** Joins: maetthew (~maetthew@user/maetthew)
[06:41:21] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[07:41:29] *** Quits: wbg (~wbg@user/wbg) (*.net *.split)
[07:45:49] *** Joins: wbg (~wbg@home.zedat.fu-berlin.de)
[07:45:49] *** Quits: wbg (~wbg@home.zedat.fu-berlin.de) (Changing host)
[07:45:49] *** Joins: wbg (~wbg@user/wbg)
[08:53:19] *** Quits: luva (~luva@45.141.152.54) (Quit: Ping timeout (120 seconds))
[08:59:05] *** Joins: luva (~luva@185.168.9.232)
[08:59:06] *** Joins: k8yun (~k8yun@user/k8yun)
[09:22:27] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 252 seconds)
[09:28:23] *** Quits: podverse-mitch (~mitch-pod@c-73-176-137-149.hsd1.il.comcast.net) (Remote host closed the connection)
[09:38:17] *** Quits: k8yun (~k8yun@user/k8yun) (Read error: Connection reset by peer)
[09:47:58] *** Joins: podverse-mitch (~mitch-pod@c-73-176-137-149.hsd1.il.comcast.net)
[09:52:53] *** Quits: podverse-mitch (~mitch-pod@c-73-176-137-149.hsd1.il.comcast.net) (Ping timeout: 256 seconds)
[10:14:41] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[10:21:21] *** Joins: podverse-mitch (~mitch-pod@c-73-176-137-149.hsd1.il.comcast.net)
[10:27:54] *** Joins: cerill (~cerill@h-155-4-198-153.A785.priv.bahnhof.se)
[10:33:01] *** Joins: DynV (~DynV@user/dynv)
[10:33:56] *** Quits: podverse-mitch (~mitch-pod@c-73-176-137-149.hsd1.il.comcast.net) (Ping timeout: 252 seconds)
[10:34:38] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-c1ba-53f6-f97-7788.fixed6.kpn.net)
[10:35:17] *** Joins: re101-ant-31 (~re101-ant@165.225.234.198)
[10:35:30] *** Quits: re101-ant-31 (~re101-ant@165.225.234.198) (Client Quit)
[10:36:50] <DynV> I'm trying to find names that doesn't contain initialisms. I think a good rule for that is that if there's 2 consecutive letters the 2nd should be small capital. I'm trying to consider exotic names like Klingon, which would look something like K'S'Rdfdd'T'Dfdgf https://regex101.com/r/rx9tvT/1
[10:38:27] <DynV> s/names/full names/
[10:38:28] <rebot> 14DynV meant: I'm trying to find 07full names14 that doesn't contain initialisms. I think a good rule for that is that if there's 2 consecutive letters the 2nd should be small capital. I'm trying to consider exotic names like Klingon, which would look something like K'S'Rdfdd'T'Dfdgf https://regex101.com/r/rx9tvT/1
[10:39:27] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-c1ba-53f6-f97-7788.fixed6.kpn.net) (Ping timeout: 268 seconds)
[10:39:30] <DynV> s/initialisms./initialism on Notepad++./
[10:39:31] <rebot> 14DynV meant: I'm trying to find names that doesn't contain 07initialism on Notepad++.14 I think a good rule for that is that if there's 2 consecutive letters the 2nd should be small capital. I'm trying to consider exotic names like Klingon, which would look something like K'S'Rdfdd'T'Dfdgf https://regex101.com/r/rx9tvT/1
[10:42:38] <DynV> https://regex101.com/r/rx9tvT/2
[10:43:41] <DynV> V2 is no good, wait
[10:44:25] <DynV> https://regex101.com/r/rx9tvT/3
[10:45:51] <DynV> https://regex101.com/r/rx9tvT/4
[10:47:24] <DynV> https://regex101.com/r/rx9tvT/5
[10:50:41] *** Quits: cerill (~cerill@h-155-4-198-153.A785.priv.bahnhof.se) (Ping timeout: 256 seconds)
[11:00:11] <DynV> It seems I got it on https://regex101.com/r/rx9tvT/6 but I need to check on N++
[11:01:48] <DynV> V5 was actually not good, it matches sentence beginning that aren't a full name.
[11:03:20] <DynV> https://regex101.com/r/rx9tvT/7
[11:05:50] <DynV> V7 seems good on regex101 but works weirdly on N++.
[11:10:33] <DynV> Also it shouldn't work on things that overall look like initialism like: D F G Y.
[11:12:56] <DynV> but it should allow for intialed middle names, with or without a dot next to it, ie: Bob T Smith & John A. Henry.
[11:15:11] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 252 seconds)
[11:18:38] *** Joins: ravan (~ravan@user/ravan)
[11:28:09] *** Quits: ravan (~ravan@user/ravan) (Quit: Leaving)
[11:31:37] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[11:40:21] *** Joins: ravan (~ravan@user/ravan)
[11:54:32] *** Quits: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[11:54:35] *** Joins: re101-snake-1 (~re101-sna@2405:201:d024:d06d:4c85:237c:2610:5f70)
[11:54:52] *** Quits: re101-snake-1 (~re101-sna@2405:201:d024:d06d:4c85:237c:2610:5f70) (Client Quit)
[12:03:23] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-a15d-3775-219e-6efa.fixed6.kpn.net)
[12:07:37] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-a15d-3775-219e-6efa.fixed6.kpn.net) (Ping timeout: 240 seconds)
[12:13:26] *** Joins: loganlee[gnu] (~Thunderbi@user/loganlee)
[12:17:29] *** Joins: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-70ad-ebff-cd3d-fb1c.fixed6.kpn.net)
[12:23:26] *** Joins: palasso (~palasso@user/palasso)
[12:30:40] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Remote host closed the connection)
[12:33:30] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[12:38:13] *** Joins: lavaball (felix@31.204.155.215)
[12:46:03] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-143f-8d77-3a99-621e.fixed6.kpn.net)
[12:46:37] *** Quits: ahmedelgabri (~ahmedelga@2a02-a446-d88a-1-70ad-ebff-cd3d-fb1c.fixed6.kpn.net) (Ping timeout: 240 seconds)
[12:51:00] *** Quits: loganlee[gnu] (~Thunderbi@user/loganlee) (Quit: loganlee[gnu])
[12:52:17] *** Quits: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[13:10:39] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Ping timeout: 256 seconds)
[13:12:28] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[13:16:28] *** Joins: podverse-mitch (~mitch-pod@c-73-176-137-149.hsd1.il.comcast.net)
[13:21:09] *** Quits: podverse-mitch (~mitch-pod@c-73-176-137-149.hsd1.il.comcast.net) (Ping timeout: 252 seconds)
[13:26:16] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Remote host closed the connection)
[13:28:36] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[13:32:49] *** Joins: podverse-mitch (~mitch-pod@c-73-176-137-149.hsd1.il.comcast.net)
[13:35:02] *** Joins: re101-liger-43 (~re101-lig@40.74.5.47)
[13:36:24] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Remote host closed the connection)
[13:36:43] *** Joins: [diablo]2 (~diablo]@user/diablo/x-9068044)
[13:37:03] *** Quits: [diablo] (~diablo]@user/diablo/x-9068044) (Ping timeout: 268 seconds)
[13:37:03] *** [diablo]2 is now known as [diablo]
[13:37:40] <re101-liger-43> Hi Regex101,
[13:37:40] <re101-liger-43> I have got a question about converting a regex expression from .net to java regex... somehow .net finds the following regex fine but java won't accept this.
[13:37:41] <re101-liger-43> ^=?\s?(\{1(\.?000)?\2?\})?\s*-?(?>\((?<DEPTH>)\s*)*-?(\d{1,3}(\.\d{3})+|\d+)\s?(\s*[-+*/]\s*(?!.*\(\s*\).*)(?!.*\d\s+\d)(?!\s?\)\s*\()((-?(\d{1,3}(\.\d{3})+|\d+)|(\((?<DEPTH>)\s?)+|(\)(?<-DEPTH>)\s?)+|)\s?){2}(?<![-+*/]\s*))*(?(DEPTH)(?!))$
[13:37:41] <re101-liger-43> Particually the DEPTH (groups) are challenging to fix... could you guys / girls help me with this?
[13:37:42] *** rebot sets mode: +q re101-liger-43!*@*
[13:37:43] *** Joins: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp)
[13:37:43] <rebot> 14re101-liger-43: For regex help, please share a https://regex101.com/ link. To share other data, see !paste. You will be unmuted in 30s.
[13:38:03] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[13:38:12] *** rebot sets mode: -q re101-liger-43!*@*
[13:39:44] <re101-liger-43> Regex can be found in: https://regex101.com/r/WdCZlm/1
[13:43:40] *** Joins: re101-sloth-73 (~re101-slo@84-31-158-226.cable.dynamic.v4.ziggo.nl)
[13:43:51] *** Quits: podverse-mitch (~mitch-pod@c-73-176-137-149.hsd1.il.comcast.net) (Ping timeout: 256 seconds)
[13:44:37] *** Joins: re101-sloth-7360 (~re101-slo@84-31-158-226.cable.dynamic.v4.ziggo.nl)
[13:46:24] *** Quits: re101-sloth-7360 (~re101-slo@84-31-158-226.cable.dynamic.v4.ziggo.nl) (Client Quit)
[13:46:26] *** Quits: re101-sloth-73 (~re101-slo@84-31-158-226.cable.dynamic.v4.ziggo.nl) (Client Quit)
[14:03:15] <purplex> re101-liger-43: from the looks of it, that will need a rewrite because java misses a lot of features e.g, balancing groups, conditionals, variable length lookbehind
[14:12:28] *** Joins: re101-eel-43 (~re101-eel@2405:201:4014:7d0c:e125:9cc0:a1c4:fd6c)
[14:12:28] <re101-eel-43> https://regex101.com/r/3FCCsm/1
[14:12:48] <re101-eel-43> need regec to allow only numbers ,- and spaces
[14:14:29] <re101-eel-43> *regex
[14:19:24] <re101-eel-43> is anyone there??
[14:20:16] <digitok> what is wrong with it atm
[14:20:32] <digitok> i can see it needs a starting anchor
[14:20:38] <digitok> do you not want to allow () around the first 3 digits?
[14:20:46] <re101-eel-43> no
[14:21:07] <re101-eel-43> I need regex to allow only numbers ,- and spaces
[14:21:17] <digitok> where can ,- and spaces be used
[14:21:22] <re101-eel-43> yes
[14:21:35] <digitok> yea, where in the string are they allowed
[14:21:46] <re101-eel-43> string not allowed
[14:21:56] <re101-eel-43> only numbers ,- and space are allowed
[14:22:06] <digitok> ok, where in the input are ,- and space allowed
[14:22:13] <digitok> anywhere?
[14:22:30] <re101-eel-43> yes
[14:22:41] <digitok> is ",,,12312,------------, 31230---" valid
[14:23:04] <re101-eel-43> yes
[14:23:09] <re101-eel-43> not ,
[14:23:23] <digitok> ok, just - and space
[14:23:27] <re101-eel-43> yes
[14:23:33] <re101-eel-43> and mubers
[14:23:37] <re101-eel-43> *numbers
[14:23:46] <digitok> always 10 numbers no more, no less?
[14:24:01] <re101-eel-43> there is no limit on numbers
[14:24:13] <digitok> ok so could be 1, could be 100
[14:24:18] <re101-eel-43> yes
[14:24:29] <digitok> https://regex101.com/r/3FCCsm/2
[14:24:39] <digitok> wait
[14:24:48] <digitok> https://regex101.com/r/3FCCsm/3
[14:28:32] *** Joins: krappix (~krappix@nat-eduroam-76-gw-01-lne.lille.inria.fr)
[14:29:59] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 256 seconds)
[14:34:22] *** Joins: ravan_ (~ravan@user/ravan)
[14:34:28] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[14:50:40] *** Joins: re101-moth-2 (~re101-mot@124.123.122.140)
[14:50:51] <re101-moth-2> Hi anyone there?
[15:06:56] *** Quits: re101-eel-43 (~re101-eel@2405:201:4014:7d0c:e125:9cc0:a1c4:fd6c) (Quit: Client closed)
[15:14:02] <purplex> not a valid regex question @moth :p
[15:25:05] *** Quits: re101-liger-43 (~re101-lig@40.74.5.47) (Quit: Client closed)
[15:37:01] *** Joins: vlm (~vlm@user/vlm)
[15:37:25] *** Quits: krappix (~krappix@nat-eduroam-76-gw-01-lne.lille.inria.fr) (Ping timeout: 256 seconds)
[15:41:49] *** Quits: vlm (~vlm@user/vlm) (Ping timeout: 240 seconds)
[15:42:23] *** Joins: podverse-mitch (~mitch-pod@c-73-176-137-149.hsd1.il.comcast.net)
[15:46:01] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[15:48:37] *** Quits: podverse-mitch (~mitch-pod@c-73-176-137-149.hsd1.il.comcast.net) (Ping timeout: 240 seconds)
[15:49:06] *** Joins: vlm (~vlm@user/vlm)
[15:50:03] *** Joins: stevenm__ (~stevenm@195.62.218.30)
[15:50:40] *** Quits: re101-moth-2 (~re101-mot@124.123.122.140) (Quit: Ping timeout (120 seconds))
[15:52:43] *** Quits: stevenm_ (~stevenm@stevenm.keele.netcentral.co.uk) (Ping timeout: 256 seconds)
[15:53:17] *** Quits: vlm (~vlm@user/vlm) (Ping timeout: 240 seconds)
[16:05:49] *** Joins: awmv (~awmv@2a02:1210:18ef:bb00:b95d:bd11:c848:bb29)
[16:16:24] *** Quits: awmv (~awmv@2a02:1210:18ef:bb00:b95d:bd11:c848:bb29) (Quit: Client closed)
[16:21:29] *** Joins: re101-ant-31 (~re101-ant@61.0.169.98)
[16:21:36] *** Joins: awmv (~awmv@2a02:1210:18ef:bb00:b95d:bd11:c848:bb29)
[16:22:35] *** Joins: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl)
[16:23:43] <re101-ant-31> want to match regex for
[16:23:44] <re101-ant-31> string is this [21][ftp] host: 172.105.42.163   login: anonymous   password: anonymous
[16:23:44] <re101-ant-31> want data as 21 ftp 172.105.42.163 anonymous anonymous
[16:23:45] <re101-ant-31> please help
[16:23:45] *** rebot sets mode: +q re101-ant-31!*@*
[16:23:46] <rebot> 14re101-ant-31: For regex help, please share a https://regex101.com/ link. To share other data, see !paste. You will be unmuted in 30s.
[16:24:15] *** rebot sets mode: -q re101-ant-31!*@*
[16:26:44] *** Joins: re101-ant-3121 (~re101-ant@61.0.169.98)
[16:26:47] *** Quits: re101-ant-3121 (~re101-ant@61.0.169.98) (Client Quit)
[16:26:52] *** Quits: re101-ant-31 (~re101-ant@61.0.169.98) (Quit: Client closed)
[16:27:04] *** Joins: re101-ant-31 (~re101-ant@61.0.169.98)
[16:27:21] *** Joins: vlm (~vlm@user/vlm)
[16:28:25] *** Quits: awmv (~awmv@2a02:1210:18ef:bb00:b95d:bd11:c848:bb29) (Ping timeout: 256 seconds)
[16:29:13] <re101-ant-31> https://regex101.com/
[16:29:13] <re101-ant-31> want to extract data from the given string as
[16:29:14] <re101-ant-31> 21 ftp 172.105.42.163 anonymous anonymous
[16:29:14] <re101-ant-31> please help
[16:29:15] *** rebot sets mode: +q re101-ant-31!*@*
[16:29:16] <rebot> 14re101-ant-31: For regex help, please share a https://regex101.com/ link. To share other data, see !paste. You will be unmuted in 30s.
[16:29:45] *** rebot sets mode: -q re101-ant-31!*@*
[16:29:51] <re101-ant-31> using puthon
[17:03:42] *** Quits: re101-ant-31 (~re101-ant@61.0.169.98) (Quit: Client closed)
[17:27:01] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Read error: Connection reset by peer)
[17:30:11] *** Joins: Lope (~lope@user/lope)
[17:30:35] <Lope> https://regex101.com/r/IysUlj/1
[17:31:00] <Lope> Please scroll down about halfway, where it says: Makhanda, commonly known as Grahamstown
[17:31:02] <Lope> blah blah blah
[17:31:17] <Lope> why is the regex getting stuck and not matching the entire sentence?
[17:31:24] <Lope> it's getting cut off at "is"
[17:32:08] <Lope> hahahah
[17:32:12] <Lope> it's because of the word a
[17:32:16] <Lope> nevermind.
[17:32:29] *** Joins: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge)
[17:33:11] <Lope> Now this is getting stuck for an unknown reason... https://regex101.com/r/IysUlj/2
[17:35:38] <Lope> digitok? :)
[17:38:07] <Lope> ohhhh cos London doesn't end in a space.
[17:39:56] <Lope> ok, got it working: https://regex101.com/r/IysUlj/4
[18:08:52] *** Joins: re101-donkey-88 (~re101-don@212.114.28.149)
[18:09:06] *** Quits: re101-donkey-88 (~re101-don@212.114.28.149) (Client Quit)
[18:16:42] *** Quits: herjazz (~herjazz@p10295192-ipngn22201marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:16:56] *** Joins: stevenm_ (~stevenm@stevenm.keele.netcentral.co.uk)
[18:17:41] *** Joins: podverse-mitch (~mitch-pod@c-73-176-137-149.hsd1.il.comcast.net)
[18:19:47] *** Quits: stevenm__ (~stevenm@195.62.218.30) (Ping timeout: 252 seconds)
[18:27:41] *** Quits: Lope (~lope@user/lope) (Ping timeout: 250 seconds)
[18:28:55] *** Joins: re101-gar-46 (~re101-gar@185.125.224.20)
[18:31:04] <re101-gar-46> I have a string for example: de.yahoo.com and I would like to extract everything after the first .   So in this example I would like to have yahoo.com   Does anyone know, how it works? I work in R and I though to implement this into the function str_extract.
[18:31:53] *** Quits: treble (~treble@user/treble) (Ping timeout: 252 seconds)
[18:32:04] <mysticspiral[m]> o
[18:32:30] <mysticspiral[m]> sorry, didnt want to type
[18:33:04] *** Quits: vlm (~vlm@user/vlm) (Read error: Connection reset by peer)
[18:33:17] <mysticspiral[m]> (?<=\.).*
[18:34:06] *** Joins: treble (~treble@user/treble)
[18:34:09] <re101-gar-46> Thank you very much, it works.:)
[18:35:39] *** Joins: krappix (~krappix@nat-eduroam-76-gw-01-lne.lille.inria.fr)
[18:40:47] *** Quits: treble (~treble@user/treble) (Ping timeout: 256 seconds)
[18:48:30] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[18:53:47] *** Joins: vlm (~vlm@user/vlm)
[18:58:46] *** Quits: re101-gar-46 (~re101-gar@185.125.224.20) (Quit: Ping timeout (120 seconds))
[19:00:16] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[19:00:39] *** Joins: vlm (~vlm@user/vlm)
[19:02:37] *** Joins: treble (~treble@user/treble)
[19:07:29] *** Joins: re101-rabbit-52 (~re101-rab@17.sub-174-242-223.myvzw.com)
[19:08:34] *** Joins: re101-duck-39 (~re101-duc@208.127.241.11)
[19:08:37] <re101-duck-39> https://regex101.com/r/LLHgKC/1
[19:08:57] *** Quits: vlm (~vlm@user/vlm) (Read error: Connection reset by peer)
[19:09:05] <re101-duck-39> looking to get the last digits after 3rd dot .
[19:09:53] <re101-duck-39> like 128 here
[19:09:58] *** Quits: re101-rabbit-52 (~re101-rab@17.sub-174-242-223.myvzw.com) (Client Quit)
[19:10:16] <digitok> where are you using the regex?
[19:10:20] <digitok> which language/tool
[19:10:35] <re101-duck-39> Splunk- extractig that no
[19:11:38] <digitok> the easiest way would be \d+$
[19:12:08] *** Joins: vlm (~vlm@user/vlm)
[19:13:02] <re101-duck-39> got it
[19:13:07] <re101-duck-39> thanks
[19:14:07] <digitok> yw
[19:30:40] *** Joins: re101-gar-455 (~re101-gar@185.125.224.20)
[19:32:20] <re101-gar-455> Hi everyone, I have a string "fgrg/.hello/.blaftg" and I would like to remove the part before the first /. (including the /.). Based on the example, the expected output should look like this hello/.blaftg
[19:33:04] <re101-gar-455> Does anyone knows how this works? I tried a few things but do not achieve what I am looking for
[19:35:40] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[19:36:03] *** Joins: vlm (~vlm@user/vlm)
[19:40:25] *** Joins: lavaball (felix@31.204.155.215)
[19:43:51] <OnlineCop> re101-gar-455: What tool or regex engine are you using for this?
[19:43:55] *** Quits: stutz (~stutz@user/stutz) (Ping timeout: 256 seconds)
[19:44:21] <re101-gar-455> RStudio
[19:44:29] <OnlineCop> One approach could be `^.*?/[.]` but that could be problematic in a few situations.
[19:44:47] <OnlineCop> If you know that it will never have another '/' in there, you could try `^[^/]*/[.]`
[19:45:12] <OnlineCop> That `^` matches from the beginning of the line/string, then matches until it reaches `/` and then matches a literal `.` character.
[19:45:39] <OnlineCop> You might need to escape the '/', so: `^.*?\/[.]` or `^[^\/]*\/[.]`
[19:47:46] <re101-gar-455> Thanks. It works. What do you mean with if I know that it will never have another "/" in there? You mean something like "fgrg//.hello/.blaftg"?
[19:48:56] *** Joins: stutz (~stutz@p200300e88f1ad300b25adafffe87820c.dip0.t-ipconnect.de)
[19:48:56] *** Quits: stutz (~stutz@p200300e88f1ad300b25adafffe87820c.dip0.t-ipconnect.de) (Changing host)
[19:48:56] *** Joins: stutz (~stutz@user/stutz)
[19:56:19] <OnlineCop> Right. When that happens, the `.*?` one will work because it will see '/' but not see the '.' after it, and just keep trying.
[19:56:36] <OnlineCop> The [^/]* one will stop at the first '/' in '//.' and give up without matching further.
[19:58:59] *** Quits: vlm (~vlm@user/vlm) (Read error: Connection reset by peer)
[19:59:29] <re101-gar-455> Ah okay, perfect. Thanks :)
[20:00:24] <OnlineCop> My pleasure.
[20:01:09] *** Joins: vlm (~vlm@user/vlm)
[20:01:42] *** Quits: re101-gar-455 (~re101-gar@185.125.224.20) (Quit: Client closed)
[20:27:30] *** Joins: methbkts (~methbkts@82.138.90.40)
[20:32:25] *** Quits: subie (~subie@2601:4c0:4080:bc0:ca0f:1d28:f742:47b5) (Ping timeout: 256 seconds)
[20:36:06] *** Joins: subie (~subie@2601:4c0:4080:bc0:ca0f:1d28:f742:47b5)
[20:38:53] *** Joins: leana (~leana@212-71-233-6.ip.linodeusercontent.com)
[20:38:58] <leana> hello !
[20:40:32] <leana> I've got a question with regex, I want to match a quote (that is, a sentence starting with a double quote end ending with another). I want to match this sequence and then replace it's quote by French quotes («  »).
[20:40:54] *** Quits: krappix (~krappix@nat-eduroam-76-gw-01-lne.lille.inria.fr) (Quit: Client closed)
[20:41:24] <OnlineCop> leana: Within this language, can there be nested quotes? For example: "some \"quoted\" text" or "some ""quoted"" text"  ?
[20:41:56] <leana> I'm now matching "[^"]*" and replacing with « $0 », but the problem is that it just adds new quotes and does not replace them.
[20:42:49] <OnlineCop> leana: Capture the text you want to keep, so after the first " and before the last ": `"([^"]*)"` and then replace with  « $1 »  (group 1 is the captured text).
[20:43:19] *** Quits: dionysus69 (~Thunderbi@94-43-121-219.dsl.utg.ge) (Ping timeout: 250 seconds)
[20:43:20] <leana> OnlineCop: No I don't think so, it's just a simple text editing thing we have to do for university
[20:43:46] <leana> captured text is selected by braces ?
[20:43:48] <OnlineCop> https://regex101.com/r/Dd6sYT/1 is typically how I do it.
[20:44:04] <OnlineCop> Yes, '(...)' is captured text.
[20:44:56] <leana> awesome ! I'm going to try it now
[20:45:36] <OnlineCop> Some languages like sed require you to escape the '(' and ')' parentheses: "\([^"]*\)"  but most just allow "([^"]*)" 
[20:46:57] <leana> It worked ! Thank you so much !
[20:47:04] <OnlineCop> My pleasure.
[20:57:01] *** Quits: methbkts (~methbkts@82.138.90.40) (Ping timeout: 256 seconds)
[21:03:35] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-143f-8d77-3a99-621e.fixed6.kpn.net) (Ping timeout: 256 seconds)
[21:03:48] *** Joins: awmv (~awmv@2a02:1210:18ef:bb00:a4a8:4c8:b1d6:d24e)
[21:04:42] *** Quits: re101-duck-39 (~re101-duc@208.127.241.11) (Quit: Client closed)
[21:06:54] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:25:10] *** Joins: src (~src@user/src)
[21:25:55] *** Quits: travisghansen (~travisgha@192.74.130.86) (Quit: The Lounge - https://thelounge.github.io)
[21:26:57] *** Joins: karhunkynsi (~karhunkyn@user/karhunkynsi)
[21:26:57] *** ChanServ sets mode: +v karhunkynsi
[21:28:03] *** Joins: travisghansen (~travisgha@192.74.130.86)
[21:48:08] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[21:49:17] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-143f-8d77-3a99-621e.fixed6.kpn.net)
[21:49:34] *** Joins: palasso (~palasso@user/palasso)
[21:58:43] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-143f-8d77-3a99-621e.fixed6.kpn.net) (Ping timeout: 250 seconds)
[21:59:01] *** Quits: DynV (~DynV@user/dynv) (Ping timeout: 268 seconds)
[22:00:12] *** Quits: vlm (~vlm@user/vlm) (Ping timeout: 240 seconds)
[22:06:06] *** Joins: vlm (~vlm@user/vlm)
[22:06:31] *** Joins: ttree (~ttree0@c-24-17-16-242.hsd1.wa.comcast.net)
[22:06:59] *** Quits: vlm (~vlm@user/vlm) (Remote host closed the connection)
[22:07:34] *** Joins: re101-impala-25 (~re101-imp@104.241.199.228)
[22:08:04] *** Joins: vlm (~vlm@user/vlm)
[22:09:13] <re101-impala-25> Does anyone have any idea for simplifying this beast? Prompt: Match fakeurl.com, www.fakeurl.com, https://fakeurl.com, foo.fakeurl.com, BUT NOT the specific subdomains of clinic.fakeurl.com and members.fakeurl.com https://regex101.com/r/MYD0Ea/1
[22:10:23] <re101-impala-25> also, ome thing i can figure out how to correct in the current version: it shouldn't match on blahfakeurl.com but I just can't seem to get that exception in without ruining the rest
[22:13:48] <OnlineCop> re101-impala-25: Are you using PCRE or something else?
[22:16:03] *** Joins: DynV (~DynV@user/dynv)
[22:17:06] <re101-impala-25> OnlineCop javascript :O
[22:18:00] <OnlineCop> Does https://regex101.com/r/MYD0Ea/2 look like it's matching correctly?
[22:18:39] <re101-impala-25> dang you're good
[22:18:54] <OnlineCop> If you switch to ECMAScript, you can use variable-length lookbehinds and do: `(?<!clinic\.\S*|members\.\S*)\S*fakeurl\.com\S*
[22:18:55] <re101-impala-25> is there any way to have it NOT match the last one blahfakeurl.com
[22:19:12] <OnlineCop> Maybe throw a  `\b`  before it?
[22:19:43] <OnlineCop> '\bfakeurl' will require that there's some non-"word" before it so it doesn't match in the middle of "blah[here]fakeurl"
[22:19:54] <re101-impala-25> I really need to get better at regular expressions
[22:20:01] *** Quits: awmv (~awmv@2a02:1210:18ef:bb00:a4a8:4c8:b1d6:d24e) (Quit: Client closed)
[22:20:08] <re101-impala-25> I took me hours and you just knocked it out in moments :D
[22:20:22] <OnlineCop> https://regex101.com/r/MYD0Ea/3 for the Javascript version.
[22:20:23] <re101-impala-25> (*SKIP)(*F) ive never even seen these!
[22:20:34] <OnlineCop> Note: This doesn't appear to work in Safari but it works if you change browsers.
[22:21:04] <re101-impala-25> hmmm
[22:21:11] <OnlineCop> (*SKIP)(*F) is a PCRE "bells-and-whistles" that basically says to disregard special edge cases. Not available in other regex flavors, sadly.
[22:22:03] <re101-impala-25> Oh no XD, I also can't use a ?<! look behind because i need to support safari
[22:22:09] <OnlineCop> You can obviously change those  \S*  to .* if you want; this should allow you to match in the middle of a string, though since URLs don't contain whitespace.
[22:22:55] <re101-impala-25> ooo i see what you did on that part
[22:23:06] <OnlineCop> A more universal way to handle this is to "match" the unwanted stuff, then do an OR "|" pipe, and then capture only the remaining stuff that you want.
[22:23:49] <OnlineCop> For example, match `\b(?:clinic|members)\.\S+|(\S*\bfakeurl\.com\S*)`
[22:24:27] <OnlineCop> Then if the capture group contains a value, it's none of those specific edge cases you wanted to exclude.
[22:25:06] <VectorX> re101-impala-25 probably would help if you seperate the matches maybe on top and with some seperation non matches at the bottom of your paste 
[22:25:36] <re101-impala-25> VectorX that's a good idea, I'll do that next time
[22:25:42] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-143f-8d77-3a99-621e.fixed6.kpn.net)
[22:26:41] <re101-impala-25> OnlineCop is there an easy way to flip a lookbehind into a lookahead? I unfortunately do need to support safari
[22:27:06] <OnlineCop> https://regex101.com/r/MYD0Ea/5 is the "keep only captures" version I was mentioning.
[22:27:06] <re101-impala-25> errr
[22:27:09] <re101-impala-25> other way around i mean
[22:27:38] <re101-impala-25> Man I'm going to save these, this is good stuff OnlineCop:D
[22:27:55] <OnlineCop> Most regex flavors besides Javascript and .NET don't support "variable-length" lookbehinds. So if you know for sure the length of the string, you can do one of either of these:
[22:28:37] *** Quits: vlm (~vlm@user/vlm) (Ping timeout: 268 seconds)
[22:28:37] <OnlineCop> `(?<!\bclinic\.|\bmembers\.)...everything else...` OR `(?<!\bclinic\.)(?<!\bmembers\.)...everything else...`
[22:28:59] <OnlineCop> But in all cases, Safari doesn't like (?<
[22:29:10] <OnlineCop> Either the positive (?<= or the negative (?<! lookbehinds.
[22:30:12] <re101-impala-25> oh no:O  i thought it was just look aheads it didnt like
[22:33:44] <OnlineCop> I believe Safari handles lookaheads properly; it's just lookbehinds it doesn't understand.
[22:33:58] <OnlineCop> You CAN do a lookahead as long as you start at the ^ anchor.
[22:34:14] <re101-impala-25> huh, that's an interesting exception
[22:34:38] <OnlineCop> https://regex101.com/r/MYD0Ea/6
[22:34:54] <OnlineCop> That one should (fingers crossed) work properly on Safari. Let me grab a Mac and check.
[22:35:34] <re101-impala-25> success :D
[22:35:37] <OnlineCop> Yeah; Safari works properly on the lookahead.
[22:36:19] <OnlineCop> Again, if you want this to match mid-line somewhere, your '^' anchor at the beginning will have to just ensure that it's to the left of where you're trying to match.
[22:36:36] <re101-impala-25> you are the man OnlineCop, I think i learned more from you in the past 15 minutes than I have reading for the past 2 hours XD
[22:36:38] <OnlineCop> Something like `(?:\s|^)` can often work to match that you've at least got some whitespace before it.
[22:37:04] <OnlineCop> Or if you need, `(?:[\s"']|^)` if you might be inside of "double" or 'single' quotes.
[22:37:37] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-143f-8d77-3a99-621e.fixed6.kpn.net) (Ping timeout: 240 seconds)
[22:37:53] <OnlineCop> You should be able to add a few more examples under TEST STRING where it's in the middle of other text somewhere to be sure it's matching (or not) properly.
[22:39:15] <re101-impala-25> it's not quite, but that is a not a concern for this task:D  it will be reading just an array of urls and testing them against this pattern
[22:39:24] <OnlineCop> https://regex101.com/r/MYD0Ea/7
[22:39:27] <OnlineCop> Ah, okay.
[22:39:39] <OnlineCop> In that case, ^ is fine there.
[22:39:55] *** Joins: re101-skunk-21 (~re101-sku@162.93.80.9)
[22:40:21] <re101-skunk-21> Hello
[22:40:57] <OnlineCop> Heya.
[22:41:11] <re101-skunk-21> I need some help
[22:41:39] <re101-skunk-21> I want to ignore firm name in agreement which is in DB
[22:42:24] <re101-skunk-21> for eg. ELECTRONIC DOCUMENTS AND SIGNATURES[insert firm name](“we” or “us”) or (“Custodian”) may be
[22:42:58] <OnlineCop> What do you mean by "ignore" the Firm name?
[22:43:09] <re101-skunk-21> want to ignore firm name so that if it doesn't match with DB it should ignore in regex and display nay firm name
[22:43:10] <OnlineCop> Match any Firm name within that area?
[22:43:23] <re101-impala-25> skunk, could you make something like this with a set of pass/fail matches? https://regex101.com/r/QwR3c9/1
[22:43:32] <re101-impala-25> the test string part anyway
[22:45:41] <OnlineCop> re101-skunk-21: It would help to have some examples. Those "[insert firm name]" will require specific cases with regex. You should obviously obfuscate real names with some similar "test" values.
[22:45:56] <re101-skunk-21> Please have a look at above example
[22:47:03] <re101-impala-25> send us a link
[22:47:07] <re101-skunk-21> I want to ignore some words after and before few words.
[22:47:29] <re101-impala-25> that just described all of regex basically XD
[22:47:34] <re101-skunk-21> a consent agreement is in DB
[22:47:50] <re101-skunk-21> then firm name is added to that agreement
[22:47:51] <OnlineCop> re101-skunk-21: https://regex101.com/r/N4eCV6/1
[22:48:03] <re101-skunk-21> firm name can be any name in
[22:48:17] <re101-skunk-21> now we are checking firm name with DB
[22:48:28] <re101-impala-25> OnlineCop is a saint
[22:48:37] <re101-skunk-21> if firm name matches with DB then successful
[22:48:55] <re101-skunk-21> if doesn't match with DB it failes
[22:48:59] <OnlineCop> re101-skunk-21: This is going to capture whatever name within (...) parentheses.
[22:49:14] <OnlineCop> You'll take the Capture Group 1 to match against the names in your database.
[22:49:38] <re101-skunk-21> I want to ignore firm name if either match with DB or not match but display the agreement with firm name
[22:51:23] <OnlineCop> re101-skunk-21: Then you'll need to supply the regex with the Firm name you're trying to include/exclude.
[22:51:54] <OnlineCop> For example, given the Firm names in that link I shared, pick some that "should" match, and some that "should not" match.
[22:52:08] <re101-skunk-21> we are not aware about firm name....it can be any name
[22:52:38] <OnlineCop> Regex may not be the right solution.
[22:53:15] <OnlineCop> Here, several Firm names are extracted from the text. You would use that captured value (group $1 or \1 in this case) to test whether it exists in your database.
[22:53:25] <OnlineCop> If not, do_A(). If it matches, do_B().
[22:54:19] <re101-skunk-21> we've to ignore the firm name which doesn't match with our DB
[22:54:51] <OnlineCop> Right. But that's no longer a regex issue.
[22:55:37] <OnlineCop> You use regex to extract the name from some text. You then use whatever DB logic to test for that name. If it exists, you COULD do further parsing on the text (with regex, or some other method).
[22:56:00] <OnlineCop> I don't know DBs, so I don't know how to do any of that part.
[22:56:10] *** Quits: src (~src@user/src) (Quit: leaving)
[22:57:13] <re101-skunk-21> is there any case that we can match all other text in ELECTRONIC DOCUMENTS AND SIGNATURES[insert firm name](“we” or “us”) or (“Custodian”) may be before and after the [insert firm name]
[22:59:42] *** Quits: rvalue (~rvalue@user/rvalue) (Read error: Connection reset by peer)
[23:00:14] *** Joins: rvalue (~rvalue@user/rvalue)
[23:02:14] *** Joins: re101-skunk-2195 (~re101-sku@162.93.80.1)
[23:02:42] <re101-skunk-2195> Hello
[23:03:59] <OnlineCop> o/
[23:04:33] <OnlineCop> re101-skunk-21: You should be able to just match the rest of the code and use `.*` to match "everything else" to the end of the line/string.
[23:04:45] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-143f-8d77-3a99-621e.fixed6.kpn.net)
[23:05:28] <OnlineCop> re101-skunk-21: `.` doesn't match newlines, so if you need it to match to the end of the entire string (that contains newlines), you could try `[\S\s]*` or `(?:.+|\r?\n)*` (although the last one is going to be quite slow).
[23:08:05] <re101-impala-25> hmm, I missed something. OnlineCop Is there an easy fix you can think of to also pass `members.testurl.fakeurl.com`?
[23:08:06] <re101-impala-25> I've updated here: https://regex101.com/r/eb7tjE/1
[23:08:44] <re101-impala-25> subdomain `testurl.members.fakeurl.com` is bad, but `members.testurl.members.com` is okay
[23:10:04] *** Joins: macksfield (~macksfiel@104.241.199.228)
[23:11:20] <OnlineCop> So you want the domain name 'fakeurl.com' to apply the filtering, but all other URLs should be okay?
[23:11:34] <macksfield> hey it's @OnlineCop, it's re101-impala-25, decided to boot up IRC :D
[23:12:06] <macksfield> if you take a look at the link - i added two more cases that should pass
[23:12:14] <OnlineCop> Within the (?!...) after that last \. you could just add 'fakeurl\.com' or even '\S*\.fakeurl\.com` if "foo.members.bar.baz.fakeurl.com" should be avoided.
[23:12:24] *** Parts: leana (~leana@212-71-233-6.ip.linodeusercontent.com) ()
[23:12:55] <re101-impala-25> `foo.members.bar.baz.fakeurl.com` this one is okay, but RN it's failing to match
[23:13:34] *** Quits: re101-skunk-2195 (~re101-sku@162.93.80.1) (Quit: Client closed)
[23:13:45] <OnlineCop> https://regex101.com/r/eb7tjE/2 possibly?
[23:14:30] <re101-skunk-21> https://regex101.com/r/N4eCV6/1 looks good to me
[23:14:32] <OnlineCop> Basically, if it's 'clinic.fakeurl.com' or 'members.fakeurl.com' with anything else BEFORE it, you want to fail, but if it's 'clinic.foo.bar.baz.fakeurl.com' (or 'members'), that one should pass?
[23:14:53] <OnlineCop> re101-skunk-21: 👍
[23:15:28] <re101-skunk-21> can you please help me how to write full code of line
[23:15:56] <re101-skunk-21> var regex = new Regex();
[23:16:10] <OnlineCop> re101-skunk-21: I don't know which regex "flavor" your DB uses, but you might be able to find some examples for the code with 'Code Generator' on the left.
[23:16:10] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-143f-8d77-3a99-621e.fixed6.kpn.net) (Ping timeout: 260 seconds)
[23:16:46] <OnlineCop> The Code Generator should also escape \ and other special characters for you.
[23:17:33] <re101-skunk-21> var regex = new Regex("ELECTRONIC DOCUMENTS AND SIGNATURES([^()]*)\(“we” or “us”\) or \(“Custodian”\) may be");
[23:17:35] *** Quits: re101-impala-25 (~re101-imp@104.241.199.228) (Quit: Client closed)
[23:18:19] <OnlineCop> re101-skunk-21: Yeah, that looks correct to me. It depends on whether a Firm's name can contain '(' or ')' like you see in one of those example lines (it won't match because the Firm name DOES contain '(' in it).
[23:19:06] <OnlineCop> macksfield: Let me know if that doesn't work. Also on line 4, `\s` can match newlines, so you might want to use [\t ] instead of \s: `[\t "']` (that's a literal space in there if it's hard to see).
[23:19:45] <macksfield> @onlinecop it is correct, you got it right :D
[23:19:54] <OnlineCop> In other words, a tab, a literal space character, a double quote, or a single quote (each of those is 1-character wide) OR ^ (an anchor is 0-characters wide).
[23:20:48] <re101-skunk-21> a firm name may contain dot (.), comma(,)
[23:20:51] <OnlineCop> macksfield: If you have a lot of edge cases you have to consider, the regex101 site offers "unit tests". Then you can tell what should/shouldn't match, and know if changing the regex pattern breaks any of those.
[23:21:14] <OnlineCop> re101-skunk-21: The [^()] will match ANY character except '(' or ')', which includes (.) and (,).
[23:21:47] <macksfield> oh the unit tests are cool
[23:23:57] <OnlineCop> Unit Tests save whenever you Save Regex or Update Regex, so you can always play around with them and come back to them later.
[23:24:00] <re101-skunk-21> if we want to ignore everything then it should be like [^]...right ?
[23:25:41] <OnlineCop> re101-skunk-21: The literal 3 characters `[^]` in Javascript will match everything, including newlines. But `[^...]` matches anything NOT in the group. The opposite is `[...]` which matches only characters (or ranges like a-z or 0-9) in the group.
[23:26:36] <OnlineCop> re101-skunk-21: If you want to match everything to the end of the file, Javascript will support `[^]*` instead of either `.*` or `[\S\s]*`.
[23:28:41] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-143f-8d77-3a99-621e.fixed6.kpn.net)
[23:28:56] <re101-skunk-21> suppose we've a firm name Test_firm(2)-DEV
[23:29:05] <re101-skunk-21> then ?
[23:29:27] <re101-skunk-21> [^] will work or not ?
[23:31:38] <OnlineCop> You might want `.*?` instead.
[23:32:16] <OnlineCop> The `*?` is going to try to match as few characters as possible until the "(we or us)" text is encountered.
[23:33:20] <re101-skunk-21> var regex = new Regex("ELECTRONIC DOCUMENTS AND SIGNATURES([`.*?`]*)\(“we” or “us”\) or \(“Custodian”\) may be");
[23:33:32] <re101-skunk-21> right ?
[23:33:45] <OnlineCop> `var regex = new Regex("ELECTRONIC DOCUMENTS AND SIGNATURES (.*?) \(“we” or “us”\) or \(“Custodian”\) may be");`
[23:34:47] <re101-skunk-21> thanks.
[23:34:53] <re101-skunk-21> OnlineCop
[23:37:07] <re101-skunk-21> Actually I use fake experience of 7-8 years and use proxy interview to get job at level 4 engineer position but I don't have any exp. Thats why I need help to fix everything
[23:37:37] *** Quits: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-143f-8d77-3a99-621e.fixed6.kpn.net) (Ping timeout: 240 seconds)
[23:37:43] <re101-skunk-21> thanks everyone for your support
[23:38:04] <macksfield> lolol
[23:38:05] <OnlineCop> Cool! Happy job-hunting!
[23:38:20] <macksfield> I guess that's a lot easier to pull off with everything being remote
[23:38:32] <macksfield> by proxy interview, you mean you had someone do the interview for you?
[23:38:47] <OnlineCop> My interviews have always been super intense. None have EVER asked about regex skills, though.
[23:39:23] *** Joins: ahmedelg1 (~ahmedelga@2a02-a446-d88a-1-7d97-d8b5-64e5-51da.fixed6.kpn.net)
[23:39:28] <OnlineCop> That reminds me of https://www.cnet.com/culture/developer-allegedly-outsources-his-whole-job-to-china-fired/  :D
[23:40:18] <re101-skunk-21> my frnd had my interview even he was on video call at interview time instead of me
[23:41:18] <re101-skunk-21> its been about 1 year...now I learned lot of coding
[23:41:27] <re101-skunk-21> doing good at my work
[23:42:10] <macksfield> I Find that article hilarious. He basically has all the experience he needs to run a consultancy now lol
[23:43:47] *** Joins: re101-insect-64 (~re101-ins@2a00:a040:184:9095:7d40:792:b70f:287e)
[23:44:04] <re101-insect-64> Hey
[23:44:47] <re101-insect-64> I'm stuck on the regex101 quiz. Question 2
[23:45:11] <re101-insect-64> got any tips?
[23:45:12] <OnlineCop> #regex-quiz channel?
[23:45:42] *** Quits: re101-skunk-21 (~re101-sku@162.93.80.9) (Quit: Client closed)
[23:48:17] *** Quits: macksfield (~macksfiel@104.241.199.228) (Read error: Connection reset by peer)
[23:49:20] *** Joins: macksfie_ (~macksfiel@142-254-87-7.fiber.dynamic.sonic.net)
[23:49:32] *** macksfie_ is now known as macksfield
