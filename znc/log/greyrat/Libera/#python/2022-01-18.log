[00:00:06] *** Quits: niko (~niko@libera/staff/niko) (Ping timeout: 633 seconds)
[00:00:10] <xheimlich> But it's a little annoying that map, filter and zip return generators.
[00:00:17] *** Joins: nomad1 (~nomad@user/spacenomad)
[00:00:27] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[00:00:42] *** Joins: bluedust (~bluedust@185.248.85.41)
[00:00:59] <SnoopJ> xheimlich, why's that?
[00:01:28] *** Joins: bluedus__ (~bluedust@194.37.96.105)
[00:01:36] <charlie_sando> It gets me everytime, I always assume its returning a list
[00:01:38] *** Joins: syrius (syrius@titan.stormtek.net)
[00:01:48] <johnkeats6> well you both are horribly wrong
[00:02:08] <xheimlich> I guess I don't default to thinking in generators/lazy computation.
[00:02:11] <SnoopJ> they both used to return lists in Python 2, which made them useless over large data
[00:02:27] <charlie_sando> aha
[00:02:56] <SnoopJ> correction: filter wasn't guaranteed to be a list, which is even more confusing
[00:02:59] *** Joins: ld_ (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net)
[00:03:03] <SnoopJ> but it was non-lazy
[00:03:04] *** ld_ is now known as a0z1
[00:03:06] <johnkeats6> you can just call list() if you really really need a list
[00:03:18] <TML> I don't mind that they return generators, but I do sometimes find it annoying that they don't all just return some ABC
[00:03:30] <xheimlich> yes. but parens matching in non-sexpr languages is hard.
[00:03:33] * whatsupdoc Here is my code: https://dpaste.org/vote
[00:03:42] <whatsupdoc> https://dpaste.org/vote
[00:04:02] *** Quits: bluedust_ (~bluedust@117.207.227.55) (Ping timeout: 240 seconds)
[00:04:03] <SnoopJ> xheimlich, this is why my solution captured the generator to a dedicated name, FWIW. Oftentimes the paren-matching game is a sign you're doing too much on one line
[00:04:38] <SnoopJ> although sometimes a few continuation lines is all you need, a name isn't the only solution
[00:05:00] *** Joins: maxzor (~maxzor@2a01cb04054faa00253ae0b752eb470c.ipv6.abo.wanadoo.fr)
[00:05:05] *** Joins: bluedust_ (~bluedust@103.160.233.171)
[00:05:12] *** Joins: ano (~ano@user/ano)
[00:05:13] <whatsupdoc> UnboundLocalError: local variable 'maxl' referenced before assignment
[00:05:22] <xheimlich> SnoopJ: yes, but comprehensions are often readable one-liners.
[00:05:26] <avu> whatsupdoc: you need nonlocal
[00:05:28] *** Quits: bluedust (~bluedust@185.248.85.41) (Ping timeout: 250 seconds)
[00:05:33] <SnoopJ> whatsupdoc, you need `nonlocal` if you want to assign to the outer scope
[00:05:33] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[00:05:57] *** Quits: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv) (Read error: Connection reset by peer)
[00:06:01] <xheimlich> also don't assign to the outer scope.
[00:06:19] <whatsupdoc> I'm not sure why `nonlocal` fixes it
[00:06:36] <whatsupdoc> How does that differ from the nested function example?
[00:06:37] <xheimlich> remember, a monad is just a matroid in the category of endofunctors.
[00:06:38] <SnoopJ> whatsupdoc, because without it, the compiler sees that you do an assignment to that name, and assignments bind names in the *local* scope by default.
[00:06:40] <p-i-> charlie_sando: If I try test-string of 'ABC' it doesn't match
[00:06:41] *** Quits: bluedus__ (~bluedust@194.37.96.105) (Ping timeout: 256 seconds)
[00:06:52] <whatsupdoc> Is it because it's recursive?
[00:06:55] <SnoopJ> no
[00:07:03] *** Joins: jfcaron (~jfcaron@192.252.229.171)
[00:07:17] <whatsupdoc> https://dpaste.org/VJxh
[00:07:30] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[00:07:36] <whatsupdoc> this works without nonlocal?
[00:07:38] *** Quits: nomad1 (~nomad@user/spacenomad) (Ping timeout: 250 seconds)
[00:07:41] <whatsupdoc> I'm not seeing the difference
[00:07:44] <avu> whatsupdoc: now try assigning to `x` in `inner`
[00:07:55] <avu> after accessing it
[00:08:01] <charlie_sando> p-i-, weird , that was just a starting point though theres probably that doesnt work
[00:08:14] <SnoopJ> whatsupdoc, the difference is exactly what I just told you: the compiler is aware of whether or not you assign to a name in a code block, and if you are assigning, it will assume the variable is local unless you tell it otherwise.
[00:08:17] <whatsupdoc> avu:  works for me
[00:08:25] <SnoopJ> So if you want to read *and* write a nonlocal, you need to let the compiler know it's a nonlocal.
[00:08:31] <avu> whatsupdoc: not after reading it, no
[00:08:48] *** Joins: RabidToaster1 (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[00:09:02] *** Quits: bluedust_ (~bluedust@103.160.233.171) (Ping timeout: 240 seconds)
[00:09:12] <whatsupdoc> SnoopJ: why would it ever think you'd want to do that though?
[00:09:24] <whatsupdoc> SnoopJ: shadowing variables is bad practice
[00:09:27] <SnoopJ> whatsupdoc, because that is the specification of the language.
[00:09:34] *** Joins: bluedust (~bluedust@192.252.212.46)
[00:09:41] *** Joins: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv)
[00:10:01] *** Parts: architek (~luser@user/frikinz) ()
[00:10:05] <SnoopJ> We could discuss the reasons you would or would-not design a language with this feature, but there isn't much point in doing that until we're sure you actually understand the feature
[00:10:11] <p-i-> charlie_sando: yup, thanks. I'm working with it.
[00:10:17] <nedbat> whatsupdoc: it's common for an inner scope to be able to hide names in an outer scope
[00:10:18] <avu> whatsupdoc: https://dpaste.org/13rw - that gets you the same UnboundLocal exception
[00:10:18] <whatsupdoc> ok thanks for your help
[00:10:31] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[00:10:42] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[00:11:18] <xheimlich> it'd be fun to have a languages where all variables are global and auto persisted to disk. maybe build on top of redis or some such thing.
[00:11:30] <xheimlich> then everyone can share the persistent global namespace.
[00:11:32] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 240 seconds)
[00:11:32] *** RabidToaster1 is now known as RabidToaster
[00:11:33] <SnoopJ> in terms of generated code, you'll get STORE_FAST (local scope) without the keyword, and you'll get STORE_DEREF (more general) with it
[00:11:34] <xheimlich> basically graffitti
[00:11:46] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[00:11:55] <TML> whatsupdoc: Personally, I would just do avoid the whole closure thing by doing some currying instead
[00:12:15] * SnoopJ can't recall a time he's needed to use `nonlocal`
[00:13:27] <xheimlich> at one point I had an HTTP API thing.
[00:13:40] <xheimlich> not idempotent. users would drive calculations.
[00:14:07] <xheimlich> so I used global (not nonlocal) inside functions that respond to endpoints.
[00:14:20] *** Quits: Guest45 (~Guest45@99-6-72-105.lightspeed.rcsntx.sbcglobal.net) (Quit: Client closed)
[00:14:24] <xheimlich> it was not the correct design. but I did it.
[00:14:33] *** Joins: dsrt^ (~dsrt@wsip-98-188-242-61.mc.at.cox.net)
[00:14:48] *** Joins: shad (~shad@user/shad)
[00:15:35] <p-i-> tags_removed = re.sub('<.*?>', ' ', s) ; uppers = re.findall(r'\b[A-Z][A-Z]+\b', tags_removed)  # seems to do the trick
[00:15:52] <p-i-> would be nice if I could daisy-chain these
[00:16:05] <p-i-> maybe not
[00:16:17] <p-i-> clarity > 1liners
[00:17:01] <xheimlich> one-liners get a bad rep.
[00:17:25] <xheimlich> one sees more in a screenful with vertically compact code
[00:17:25] <SnoopJ> not an undeserved one
[00:18:01] <xheimlich> black is really miscalibrated in this aspect.
[00:18:06] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[00:19:03] *** Joins: summersault (~summersau@179.221.251.36)
[00:19:10] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[00:19:11] <p-i-> I've got into the habit of divide&conquer complexity, try to leave nothing opaque to a sleep-deprived future maintainer (me)
[00:19:33] <SnoopJ> "Everyone knows that debugging is twice as hard as writing a program in the first place. So if you're as clever as you can be when you write it, how will you ever debug it?"
[00:21:04] *** Quits: dreamon (~dreamon@p57a4c526.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[00:22:57] *** Quits: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv) (Ping timeout: 256 seconds)
[00:23:10] <p-i-> haha
[00:23:11] <p-i-> +1
[00:23:12] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[00:23:30] *** Joins: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv)
[00:23:32] *** Quits: jay-m126 (~jay-m@154.72.160.184) (Ping timeout: 240 seconds)
[00:23:49] *** Quits: Pandadub (~Barones@189.50.80.77) (Read error: Connection reset by peer)
[00:24:06] *** Joins: Pandadub (~Barones@189.50.80.77)
[00:25:03] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[00:25:15] *** Quits: Pandadub (~Barones@189.50.80.77) (Remote host closed the connection)
[00:25:22] <xheimlich> yes, but you're equating one-liners with too-clever-by-half obfuscated code.
[00:25:35] *** Joins: Pandadub (~Barones@189.50.80.77)
[00:25:39] *** Joins: ham5urg_ (~ham5urg@p200300d1670c4f00e64e787baaf7b40f.dip0.t-ipconnect.de)
[00:25:48] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Remote host closed the connection)
[00:25:51] <xheimlich> list comprehensions are one-liners that are clearer than equivalent for-loops. And you see more in a screenful.
[00:26:19] <SnoopJ> Cram as much on one line as you like
[00:26:33] <xheimlich> it's naive to, on the contrary, associate verboseness with readability.
[00:26:45] <SnoopJ> xheimlich, who has done that?
[00:26:51] *** Joins: ano (~ano@user/ano)
[00:27:02] *** Quits: xx (~xx@user/xx) (Ping timeout: 240 seconds)
[00:27:27] <xheimlich> The z = f(x, g(x)) you've changed to y = g(x); z = f(x,y) now has an y to explain.
[00:28:07] <xheimlich> variable assignments should communicate some intent.
[00:28:31] *** Joins: Betal (~Betal@user/betal)
[00:28:33] *** Joins: montyboy (uid333652@id-333652.tinside.irccloud.com)
[00:28:35] <SnoopJ> hello? is this thing on, are you receiving?
[00:29:46] <nedbat> xheimlich: if y had a real name, the name would be an explanation
[00:29:52] <charlie_sando> points made all around , it's a tie
[00:30:08] <charlie_sando> nedbat just entered the chat with a point
[00:30:10] <nedbat> i just changed one line into two because the meat of the work was hidden in the middle, so i assigned it to a variable to make it more apparent.
[00:30:16] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[00:31:02] *** Quits: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net) (Ping timeout: 240 seconds)
[00:31:05] <SnoopJ> being overly clever is something you can do with names, too
[00:31:09] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[00:31:21] *** Joins: Nutte35 (~Nutte@202.153.81.183)
[00:31:36] *** Joins: thevar1able (~textual@46.39.45.122)
[00:32:15] *** Quits: thevar1able (~textual@46.39.45.122) (Client Quit)
[00:33:03] <SnoopJ> I don't see that form anywhere near as often as I see "priority one: line count," although I suspect numpy has something to do with this
[00:33:47] <xheimlich> nedbat: yes. but the original context was that it was annoying to match parentheses in an expression like list(filter(map...
[00:33:53] *** Quits: u0_a416 (~xxNightxO@120.20.41.150) (Ping timeout: 256 seconds)
[00:34:26] <xheimlich> just use intermediate names, someone said.
[00:35:15] <p-i-> one thing I notice is that my brain can insta-parse single-character variable-names much more easily than words
[00:35:20] *** Joins: u0_a416 (~xxNightxO@120.20.41.150)
[00:35:20] <xheimlich> people must have working memories that are 10X or more mine. I value "looking at much of my surrounding code"
[00:35:27] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[00:35:36] *** llanhmod is now known as Guest2146
[00:35:37] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[00:35:39] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[00:35:40] <xheimlich> short variable names are conventional in some domains.
[00:35:41] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[00:35:44] <p-i-> So for any half-complicated algo I sometimes find myself 'cacheing' long vars into single letters
[00:35:55] <SnoopJ> I believe I am the "someone" but the list(filter(map())) problem you are talking about is not one I recognize, my comment was specific to the problem that preceded the discussion
[00:35:56] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (Read error: Connection reset by peer)
[00:36:00] <p-i-> It depends a lot on scope/lifetime
[00:36:09] *** Quits: Guest2146 (~developer@user/domhnall/x-2887755) (Ping timeout: 256 seconds)
[00:36:10] <xheimlich> e.g. the whole sklearn-verse uses X, y
[00:36:13] <phy1729> p-i-: that works until you dump your cache and have to come back to the code
[00:36:26] *** Quits: bluedust (~bluedust@192.252.212.46) (Remote host closed the connection)
[00:36:30] *** Joins: junebug (~junebug@2600:1700:3db0:2540:3ccc:5d8e:3741:8da)
[00:36:32] <SnoopJ> As far as list(filter(map(...))), that's an excellent case for the solution you yourself have already enumerated: comprehensions do exactly the work of such an expression
[00:36:51] <p-i-> phy1729: But it's written right above: `x = fooObject.horiz_offset`
[00:37:27] *** Quits: \mSg (mSg@user/msg/x-0285936) ()
[00:37:30] <xheimlich> if it's an offset, it should be "dx"
[00:37:42] <p-i-> I knew someone would get me on that one
[00:37:51] <p-i-> lul
[00:37:55] <SnoopJ> force of habit, perhaps
[00:37:59] <p-i-> It's a visual cortex thing. It's easy to insta-spot all occurences of `i` on a page
[00:38:07] *** Joins: onichomp (~onichomp@2806:264:4408:1d3:a8d2:17cf:109f:e304)
[00:38:09] *** Quits: martin__-- (~default@84-113-156-178.cable.dynamic.surfer.at) (Read error: Connection reset by peer)
[00:38:09] *** Joins: thevar1able (~textual@46.39.45.122)
[00:38:09] <p-i-> but much harder to do with `index`
[00:38:11] <xheimlich> see, in many domains "dx" means a lot more than "variation_across_the_horizontal_coordinate_that_corresponds_to_the_direction_you_walk_across"
[00:38:14] <SnoopJ> p-i-, I often use `idx`
[00:38:23] <xheimlich> I use "ix" for index.
[00:38:32] <phy1729> some editors can highlight a word quickly to aid in that
[00:38:36] <SnoopJ> xheimlich, this straw-man you're building really isn't saving on line count
[00:38:38] *** Joins: ano (~ano@user/ano)
[00:38:41] <p-i-> I think 2-3 letters is about what we can fit on the fovea
[00:38:55] *** Quits: onichomp (~onichomp@2806:264:4408:1d3:a8d2:17cf:109f:e304) (Read error: Connection reset by peer)
[00:38:57] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[00:39:00] <xheimlich> SnoopJ: I'm arguing for short variable names now. Not everywhere, of course.
[00:39:04] <p-i-> anything more needs to be constructed with eyeball-movement/interpolation
[00:39:32] *** Joins: onichomp (~onichomp@2806:264:4408:1d3:a8d2:17cf:109f:e304)
[00:39:32] <SnoopJ> xheimlich, yes we seem to be sliding sideways into a different rant
[00:39:33] <xheimlich> but e.g. I have right now a class BaseModularPartition and a CointegratingModularPartition that inherits from it.
[00:39:34] *** Joins: BrokenCog (~BrokenCog@25.sub-174-194-144.myvzw.com)
[00:39:54] <xheimlich> but when it becomes a variable name or comprehension, it slips into "mod".
[00:40:04] *** Quits: Nutte35 (~Nutte@202.153.81.183) (Read error: Connection reset by peer)
[00:40:46] <BrokenCog> hello, I'm wondering if there is some sort "block edit" available in the interpreter - for instance, having loop and wanting to make a change in the second line of the loop?  rather than up arrow up arrow up arrow enter, repeat once per line?
[00:41:00] <xheimlich> it's a code convention by now. it would be silly to say [modular_partition.rank for modular_partition in list_of_modular_partitions]
[00:41:18] <SnoopJ> BrokenCog, not the built-in REPL, but you might want to look at IPython for that
[00:41:21] *** Quits: onichomp (~onichomp@2806:264:4408:1d3:a8d2:17cf:109f:e304) (Read error: Connection reset by peer)
[00:41:32] <p-i-> lkie if you tilddwe the ltertes kpeenig the frsit and lsat fxied, you can still usually process words in context.
[00:41:34] <SnoopJ> its notion of "input cell" is pretty much exactly that
[00:41:38] <p-i-> The brain is a great interpolator.
[00:42:00] *** Joins: onichomp (~onichomp@2806:264:4408:1d3:a8d2:17cf:109f:e304)
[00:42:21] *** Quits: onichomp (~onichomp@2806:264:4408:1d3:a8d2:17cf:109f:e304) (Read error: Connection reset by peer)
[00:42:31] *** Joins: summersault (~summersau@179.221.251.36)
[00:42:43] *** Quits: dbristow (~dbristow@user/dbristow) (Read error: Connection reset by peer)
[00:43:00] *** Joins: onichomp (~onichomp@2806:264:4408:1d3:a8d2:17cf:109f:e304)
[00:43:04] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[00:43:41] *** Quits: onichomp (~onichomp@2806:264:4408:1d3:a8d2:17cf:109f:e304) (Read error: Connection reset by peer)
[00:43:46] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[00:43:50] *** Joins: thevar1able (~textual@46.39.45.122)
[00:44:09] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:a00a:fbfb:340a:8fb7) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:44:20] *** Joins: onichomp (~onichomp@2806:264:4408:1d3:a8d2:17cf:109f:e304)
[00:45:12] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[00:45:32] <BrokenCog> SnoopJ: thanks.  I guess I'll just use a file.
[00:45:44] *** Joins: Lojas (~Lojas@65.99.190.117)
[00:46:01] *** Quits: Ilyu (~quassel@gateway/vpn/pia/ilyu) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:46:03] *** Quits: Lojas (~Lojas@65.99.190.117) (Changing host)
[00:46:03] *** Joins: Lojas (~Lojas@user/Lojas)
[00:46:08] <charlie_sando> BrokenCog, IPython or JupyterNotebook might be what youre after
[00:46:30] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[00:46:39] <xheimlich> in a pinch, google "google colab"
[00:46:41] <p-i-> Is Python code typically slower the first time it executes?
[00:46:47] *** Joins: karlnashville (~karl@2601:482:4280:4cf0:bcb9:41e1:ac71:1448)
[00:46:58] <xheimlich> yes.
[00:47:10] <SnoopJ> p-i-, the actual execution shouldn't be, but you do have to compile code before you execute it. If you're seeing a difference, that might be why.
[00:47:23] <xheimlich> look for a whole mess of __pycache__/*.pyc files.
[00:47:24] <p-i-> e.g. if you were optimizing an algo to respond fast to a signal, would you try to traverse all paths ahead of time?
[00:47:30] *** Quits: trainsley69_ (~trainsley@c83-252-9-240.bredband.tele2.se) (Ping timeout: 250 seconds)
[00:48:04] *** Joins: bkhl (~bkhl@user/bkhl)
[00:48:05] <bjs> p-i-: i'm not entirely sure that the example relates to the question you asked?  but sure it might be better to traverse all paths,  it might also be a terrible idea.
[00:49:27] *** Joins: dbristow (~dbristow@user/dbristow)
[00:49:33] <p-i-> But a .pyc will compile the whole file in one go, right? If all my code is in foo.py then I incur a startup overhead as it compiles foo.pyc but for a function `def bar():` in that file, would bar be expected to run slower the first invocation?
[00:49:36] <BrokenCog> p-i-: http://www.ojohaven.com/fun/spelling.html
[00:49:40] *** Quits: zebrag (~chris@user/zebrag) (Ping timeout: 250 seconds)
[00:49:47] <BrokenCog> charlie_sando: thanks, I'll just use a local file/editor.
[00:50:22] <nedbat> p-i-: no. the function wouldn't be slower the first time
[00:50:40] *** Joins: Pickchea (~private@user/pickchea)
[00:50:40] <bjs> p-i-: well when Python reads the file it has to compile the function, which isn't very much work.  Running the actual function happens long after this and the first actual call doesn't incur any overhead.
[00:50:42] <SnoopJ> p-i-, modules are compiled together
[00:51:21] <xheimlich> there's always functools.lru_cache and joblib.Memory
[00:51:33] <avu> p-i-: this is all assuming CPython BTW, pypy for example would be a different story
[00:51:36] <bjs> p-i-: and the .pyc files are already compiled, so the overhead is even less for those.
[00:51:53] <jinsun> BrokenCog: what's wrong witth IPython? you can't install stuff from pypi?
[00:52:05] *** Joins: summersault (~summersau@179.221.251.36)
[00:52:13] *** Joins: kts (~kts@103.73.237.3)
[00:52:56] <SnoopJ> jinsun, I didn't read it as anything being wrong with it, just a preference for a file on disk
[00:53:28] <BrokenCog> jinsun: I thought IPython was a browser based tool like Jupyter, I was wanting to use it in the terminal.
[00:53:45] <SnoopJ> BrokenCog, IPython is a terminal tool. Jupyter is a web UI that sits on top of it, basically.
[00:54:01] <BrokenCog> ahhhh, okay. thanks.  I'll check that out then.
[00:54:02] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:3804:da2a:aa0f:e262) (Quit: Client closed)
[00:54:10] *** Joins: Daemoen (~Daemoen@daemoen.ct-unlimited.com)
[00:54:11] <xheimlich> jinsun: I mean, if you're trying to ride a skateboard and someone says "you can tighten your wheels with an Allen wrench, they're free at the tools emporium" or you can just wedge some bubblegum wrapper and keep trying to ollie
[00:54:13] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[00:54:31] <jinsun> BrokenCog: Jupyter is the browser based tool, IPython can be used from the terminal
[00:54:39] <BrokenCog> jinsun: got it!
[00:54:46] <p-i-> BrokenCog: love it. One of the characters in Feersum Endjinn (Iain M Banks) was voiced in this way, and I was impressed how quickly the 'dialect' became natural to my brain.
[00:54:58] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[00:55:01] *** Quits: teut (~teut@2401:4900:1c68:6b85:81e5:34bc:8adc:b633) (Quit: Client closed)
[00:55:16] <BrokenCog> p-i-: yeah.  human pattern recog is powerful :)>
[00:55:37] <BrokenCog> I haven't read that book ... I enjoy some of his, I'll look for a copy.
[00:55:51] <p-i-> nedbat bjs SnoopJ Thanks! That had been in the back of my mind for ages.
[00:56:08] *** Joins: thevar1able (~textual@46.39.45.122)
[00:56:48] *** Quits: bkhl (~bkhl@user/bkhl) (Remote host closed the connection)
[00:57:02] *** Quits: ST47 (~ST47@wikimedia/st47) (Ping timeout: 250 seconds)
[00:57:34] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:57:40] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Quit: Leaving)
[00:58:06] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[00:58:14] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[00:58:26] *** Quits: ovnicraft (~ovnicraft@181.188.201.152) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:59:04] *** Joins: ovnicraft (~ovnicraft@181.188.201.152)
[00:59:15] <SnoopJ> p-i-, you shouldn't really be able to notice the difference if you're doing in-application timing (with `time` or `timeit`) but it will show up if you profile the whole Python process
[00:59:23] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[01:00:07] *** Joins: zebrag (~chris@user/zebrag)
[01:00:10] *** Joins: slackcals (~slackcals@user/slackcals)
[01:00:20] *** Joins: cs (~ovnicraft@186.70.222.62)
[01:01:14] *** Quits: ovnicraft (~ovnicraft@181.188.201.152) (Read error: Connection reset by peer)
[01:01:27] *** Joins: trainsley69_ (~trainsley@c83-252-9-240.bredband.tele2.se)
[01:01:54] *** Joins: dreamon (~dreamon@p57a4c526.dip0.t-ipconnect.de)
[01:02:57] *** Quits: Kanjizai (~kanjizai@cpe-107-185-193-171.socal.res.rr.com) (Ping timeout: 240 seconds)
[01:03:12] *** Joins: barry1 (~Thunderbi@222.129.38.226)
[01:03:55] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[01:04:25] *** Joins: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net)
[01:05:10] *** Joins: lastshell (~lastshell@user/lastshell)
[01:06:12] *** Quits: cs (~ovnicraft@186.70.222.62) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:06:44] <sn_fk_n> what's the difference between `await asyncio.gather(...)` and `asyncio.wait(...)`? is it only that `wait` can return before all are completed?
[01:07:02] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[01:07:32] *** Quits: barry1 (~Thunderbi@222.129.38.226) (Ping timeout: 240 seconds)
[01:08:41] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[01:08:43] <bjs> sn_fk_n: gather() is primarily used to schedule coroutines to run concurrently and wait for them to finish.  wait() is for waiting on arbitrary Futures, and you shouldn't pass coroutines to them.
[01:08:50] *** Joins: ST47 (~ST47@wikimedia/st47)
[01:09:36] <sn_fk_n> ah okay thank you the documentation has `aws` in the arguments so it's slightly comfusing
[01:09:43] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[01:09:56] *** Joins: bkhl (~bkhl@user/bkhl)
[01:10:22] <bjs> sn_fk_n: yes, it accepts any awaitable but you should really only pass it futures.  Anything else is confusing (and will be removed/deprecated)
[01:10:28] <bjs> is deprecated, will be removed*
[01:10:31] <sn_fk_n> so if i created some list of futures I would call `asyncio.wait()` on these
[01:11:00] <bjs> sn_fk_n: yeah, you tell wait to wait for the first to complete, or for all of them to finish or the first to fail
[01:11:07] <bjs> and it can tell you which are still running
[01:11:09] <sn_fk_n> great thank you
[01:12:15] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[01:12:30] *** Joins: summersault (~summersau@179.221.251.36)
[01:14:29] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[01:14:48] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:15:09] *** Joins: djhankb (~djhankb@208.113.164.68)
[01:17:07] *** Quits: bkhl (~bkhl@user/bkhl) (Remote host closed the connection)
[01:17:29] *** Joins: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:6cda:3370:1807:80a0)
[01:18:27] *** Quits: kclark (~kclark@rrcs-24-73-14-193.se.biz.rr.com) (Quit: leaving)
[01:18:39] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10e7:994e:f559:3ba5:9a71:470a)
[01:18:58] <jinsun> aphysically: I was just checking out the TypedDict discussion in pyright, so did that just end up getting the annoying "unknown" type thing for [] and {} suppressed everywhere?
[01:19:14] <aphysically> yes
[01:19:19] <jinsun> nice
[01:19:42] <jinsun> also looks like someone else also poked about the big integers
[01:19:55] <aphysically> the discussion is hidden in a closed issue
[01:19:58] <aphysically> https://github.com/microsoft/pyright/issues/2875
[01:20:13] *** Joins: kclark (~kclark@rrcs-24-73-14-193.se.biz.rr.com)
[01:20:19] <jinsun> and he ended up actually implementing the bigint thing also, also nice
[01:20:30] *** Joins: constxd_ (~brad@142.167.170.88)
[01:20:34] <jinsun> yeah I was seeing that one
[01:20:52] *** Quits: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:20:57] <aphysically> I'm not sure if the special casing can also be directional to fix the sequence thing
[01:21:42] *** karlnashville is now known as karl_AFK
[01:21:45] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[01:22:21] *** Quits: Algernon69 (~Algernon6@2a01:e0a:511:6ce0:6cda:3370:1807:80a0) (Ping timeout: 250 seconds)
[01:22:23] *** Quits: kclark (~kclark@rrcs-24-73-14-193.se.biz.rr.com) (Client Quit)
[01:22:45] <jinsun> yeah still have to try it out, but from the "always supress if it comes from [] or {}" phrasing, it looks promising
[01:23:23] *** Quits: Pandadub (~Barones@189.50.80.77) (Quit: Leaving)
[01:23:33] *** Joins: kclark (~kclark@rrcs-24-73-14-193.se.biz.rr.com)
[01:24:00] *** Quits: zmt01 (~zmt00@user/zmt00) (Read error: Connection reset by peer)
[01:24:11] *** Quits: markcerv (~markcerv3@52-119-125-204.PUBLIC.monkeybrains.net) (Read error: Connection reset by peer)
[01:24:38] <jinsun> oh Sequence thing? that one I didn't even understand, apparently that is not fixed from just that
[01:24:39] *** Quits: geli (~gelignite@55d4fbf8.access.ecotel.net) (Quit: Stay safe!)
[01:25:10] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:25:25] <jinsun> I was thinnking about the other problem of creating an empty list and appending in a loop, not sure if that will be fixed with this
[01:26:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[01:27:01] *** Quits: derpadmin (~Anonymous@homebase.200013.net) (Ping timeout: 240 seconds)
[01:27:01] *** Joins: summersault (~summersau@179.221.251.36)
[01:27:09] *** Quits: jpic (~jpic@82.142.9.130) (Ping timeout: 256 seconds)
[01:28:21] *** Quits: BrokenCog (~BrokenCog@25.sub-174-194-144.myvzw.com) (Read error: Connection reset by peer)
[01:28:50] *** Joins: jpic (~jpic@82.142.9.130)
[01:28:51] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[01:28:58] *** Joins: fikran (~fikran@user/fikran)
[01:29:10] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[01:29:32] *** karl_AFK is now known as karlnashville
[01:30:37] *** Joins: Kanjizai (~kanjizai@cpe-107-185-193-171.socal.res.rr.com)
[01:31:15] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[01:32:12] *** Joins: jdmark (~jdmark@user/jdmark)
[01:32:54] *** Joins: ano (~ano@user/ano)
[01:33:18] <jinsun> hmm no that is not going to be fixed, only reportUnknownArgumentType is suppressed, that one is reportUnknownMemberType
[01:33:49] <jinsun> still good, but doesn't get rid of all annoyances
[01:34:03] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[01:35:32] *** Quits: ubert (~Thunderbi@p200300ecdf0994547bbbb5c3c61d0cc2.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[01:35:32] *** ub is now known as ubert
[01:36:09] *** Joins: Guest9014 (~vit@chello085216193138.chello.sk)
[01:36:29] *** Joins: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b)
[01:37:42] *** Quits: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b) (Client Quit)
[01:37:45] *** Joins: zmt00 (~zmt00@user/zmt00)
[01:37:46] *** Joins: BrokenCog (~BrokenCog@25.sub-174-194-144.myvzw.com)
[01:39:16] *** Quits: BrokenCog (~BrokenCog@25.sub-174-194-144.myvzw.com) (Client Quit)
[01:39:27] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Quit: Leaving)
[01:39:42] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:40:13] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[01:42:15] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[01:42:30] *** Quits: nomic (~nomic@185.217.117.104) (Quit: Leaving)
[01:44:15] *** Joins: derpadmin (~Anonymous@homebase.200013.net)
[01:44:35] *** Quits: dre (~dre@2001:8003:c932:c301:1533:19c3:8abd:b2d5) (Quit: Leaving)
[01:45:17] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[01:46:26] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 250 seconds)
[01:47:10] *** Joins: Julian (~tos9@python/site-packages/Julian)
[01:48:05] *** Joins: jazzy (~jaziz@user/jaziz)
[01:48:09] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:231d:262d:fcb7:17d7)
[01:48:20] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:51:11] *** Joins: viaSanctus (~viaSanctu@user/viasanctus)
[01:52:25] *** Joins: summersault (~summersau@179.221.251.36)
[01:52:29] *** Joins: bkhl (~bkhl@user/bkhl)
[01:53:49] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[01:54:14] *** Joins: bindu (~bindu@user/bindu)
[01:54:21] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[01:54:37] *** Joins: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b)
[01:55:52] *** Quits: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b) (Client Quit)
[01:56:23] *** Quits: debayer948 (~debayer@cpe-76-169-99-230.socal.res.rr.com) (Remote host closed the connection)
[01:56:47] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[01:56:57] *** Joins: debayer948 (~debayer@cpe-76-169-99-230.socal.res.rr.com)
[01:58:22] *** Joins: juliaEnv (~juliaEnv@ip-86-49-248-177.net.upcbroadband.cz)
[01:58:29] *** Joins: Guest42 (~Guest42@37.228.215.208)
[01:59:41] *** Quits: karlnashville (~karl@2601:482:4280:4cf0:bcb9:41e1:ac71:1448) (Quit: Konversation terminated!)
[01:59:47] *** Quits: Guest42 (~Guest42@37.228.215.208) (Client Quit)
[02:01:10] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[02:01:15] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[02:01:37] *** arjun is now known as ccldarjun
[02:01:40] *** Quits: jfcaron (~jfcaron@192.252.229.171) (Quit: jfcaron)
[02:02:37] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[02:03:36] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[02:03:49] *** Quits: nfc_ (nfc@tilde.institute) (Ping timeout: 240 seconds)
[02:04:33] *** Quits: pseudonymous (~pseud0@78.143.68.142.static.fibianet.dk) (Ping timeout: 256 seconds)
[02:04:33] *** Quits: katsuragi (katsuragi@tilde.institute) (Ping timeout: 256 seconds)
[02:05:17] *** Joins: lethu (~lethu@user/lethu)
[02:05:32] *** Quits: upsala (~zcb@185.209.196.170) (Quit: WeeChat 3.4)
[02:05:32] *** Quits: constxd_ (~brad@142.167.170.88) (Ping timeout: 240 seconds)
[02:07:30] *** Quits: jazzy (~jaziz@user/jaziz) (Read error: Connection reset by peer)
[02:07:44] *** Quits: fofoni (~fofoni@user/fofoni) (Quit: Leaving)
[02:07:50] *** Quits: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2) (Remote host closed the connection)
[02:07:55] *** Joins: jazzy (~jaziz@user/jaziz)
[02:08:08] *** Joins: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2)
[02:09:02] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[02:10:05] *** Quits: Nutte35 (~Nutte@27.114.187.37) (Read error: Connection reset by peer)
[02:11:18] *** Joins: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b)
[02:11:24] *** Joins: Nutte35 (~Nutte@202.153.81.183)
[02:12:33] *** Quits: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b) (Client Quit)
[02:12:53] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 256 seconds)
[02:13:58] *** Joins: ajnulo (~ajnulo@dynamic-176-002-223-083.176.2.pool.telefonica.de)
[02:13:58] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10e7:994e:f559:3ba5:9a71:470a) (Read error: Network is unreachable)
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:50] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:01] *** Joins: Everything (~Everythin@46-133-77-215.mobile.vf-ua.net)
[02:17:04] *** Quits: kclark (~kclark@rrcs-24-73-14-193.se.biz.rr.com) (Quit: Lost terminal)
[02:17:25] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 256 seconds)
[02:17:41] *** Joins: Enitin (~Enitin@82.102.22.85)
[02:18:42] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[02:19:27] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[02:20:29] *** Joins: panella32 (~panella32@185.108.105.203)
[02:20:47] <edd_lc> if i develop a namespace-d package, do i understand correctly that another dev can write a different package for the same namespace and the intergration between us (deployment env installs both projects) will allow importing both? e.g. `import company.package1; import company.package2`
[02:20:47] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:20:49] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 256 seconds)
[02:22:02] *** Quits: Guest9014 (~vit@chello085216193138.chello.sk) (Ping timeout: 240 seconds)
[02:22:33] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[02:23:32] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[02:23:40] <SnoopJ> edd_lc, yes. Google does this, for instance.
[02:24:11] <edd_lc> SnoopJ: cheers
[02:24:18] * SnoopJ would rather just have `import package1` and `import package2`, though
[02:24:21] *** Joins: morteza_24 (~morteza24@37.98.104.239)
[02:26:44] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 250 seconds)
[02:27:13] *** Quits: morteza24 (~morteza24@37.98.107.222) (Ping timeout: 256 seconds)
[02:27:16] *** Joins: thevar1able (~textual@46.39.45.122)
[02:28:13] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[02:28:15] *** Joins: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b)
[02:28:57] *** Quits: junebug (~junebug@2600:1700:3db0:2540:3ccc:5d8e:3741:8da) (Ping timeout: 240 seconds)
[02:29:24] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[02:29:30] *** Quits: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b) (Client Quit)
[02:29:35] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[02:29:57] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Ping timeout: 240 seconds)
[02:31:30] *** Quits: ajnulo (~ajnulo@dynamic-176-002-223-083.176.2.pool.telefonica.de) (Ping timeout: 250 seconds)
[02:31:33] *** Quits: ryu` (~ryusaku@c6A334BC1.dhcp.as2116.net) (Changing host)
[02:31:33] *** Joins: ryu` (~ryusaku@user/ryu/x-3206151)
[02:31:49] <edd_lc> SnoopJ: hmm, tha's fair. in the context of (excuse the buzz words. not mine) the company's finops, there's a requirement to find dangling envs in the cloud (client envs which were abandoned/no license/etc) to reduce costs. my initial thought was "company.finops.dangling_envs" as there are many tools across the company. will a name (no namespace) like "find_dangling_envs" be acceptable?
[02:32:03] *** Joins: Terexen (~terexen@user/terexen)
[02:32:19] *** Quits: morteza_24 (~morteza24@37.98.104.239) (Ping timeout: 256 seconds)
[02:32:27] *** Joins: nfc_ (nfc@tilde.institute)
[02:32:33] *** Joins: katsuragi (katsuragi@tilde.institute)
[02:33:13] *** Joins: morteza_24 (~morteza24@93.119.214.182)
[02:33:16] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:231d:262d:fcb7:17d7) (Quit: Konversation terminated!)
[02:35:09] *** Quits: klotzhauer (~klotzhaue@gibtesnochklopapier.de) (Quit: ZNC 1.8.2 - https://znc.in)
[02:36:52] *** Joins: johnkeats7 (~johnkeats@186.220.240.39)
[02:37:15] *** Quits: panella32 (~panella32@185.108.105.203) (Ping timeout: 256 seconds)
[02:37:17] *** Joins: klotzhauer (~klotzhaue@gibtesnochklopapier.de)
[02:37:43] *** Quits: The_Loko (~The_Loko@79.116.24.80) (Quit: Leaving)
[02:39:17] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:f823:4d62:8643:d53b) (Ping timeout: 240 seconds)
[02:40:03] <kenwoodfox> Im working on helping my robotics team with a project that sounds simple but im imagining is going to have a lot of parts, im looking to make a python daemon that will utilize 3 or 4 usb webcams and do a lot with them, they want to transcode and stream a full fps, but quarter res video to an mjpeg server as well as record a full res full fps video stream to a file, (prolly mkv)
[02:40:24] <kenwoodfox> Im wondering if i can do it all with python and ffmpeg subprocesses or if ill need to do some pil or possibly opencv
[02:42:52] <SnoopJ> edd_lc, hmm, I'm a little lost here I think. Can you unpack the ideas "client env" and how these tools relate to namespace(s)?
[02:43:21] *** Joins: Julian (~tos9@python/site-packages/Julian)
[02:44:07] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:44:24] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[02:45:22] *** Joins: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b)
[02:46:10] <edd_lc> SnoopJ: unrelated to the code, my employer has clients. each client buys a license and receives an environment in the cloud comprised of different cloud resources. there was a bug in the internal deploy tool that failed to delete some cloud environments when the client license was terminated.
[02:46:11] *** Quits: Julian (~tos9@python/site-packages/Julian) (Client Quit)
[02:46:43] <ba> kenwoodfox: I'd suggest doing it with ffmpeg subprocesses. Doing it in Python will be slow
[02:47:17] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[02:47:35] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[02:47:44] <kenwoodfox> ba: that does sound reasonable then, im glad :3 I think i can stream from the same /dev/videoX more than once so, spawn like 8 ffmpeg proccesses and let a python script maintain them all
[02:48:21] <edd_lc> SnoopJ: in comes the code; there's now a requirement "write a tool that can detect these unused cloud environments". regardless of both the employer's business and technicaly requirement, im taking into account there are other internal tools already in use, written in python. these may or may not be correctly managed using python namespaced packages
[02:49:13] <edd_lc> SnoopJ: but, you may be right - maybe it's making things less readable sprinkling namespace around.
[02:49:32] *** Quits: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b) (Ping timeout: 240 seconds)
[02:49:57] *** Joins: Viewday115 (~Viewday@user/viewday)
[02:50:23] <SnoopJ> correctly managed how? I'm still not entirely sure what the underlying task is, or what kind of design decision you're making
[02:50:33] <SnoopJ> (presumably)
[02:51:33] *** Joins: harpia (~harpia@2804:2aec:205:1400:be2a:c8d5:4566:5dc8)
[02:52:02] *** Quits: dreamon (~dreamon@p57a4c526.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[02:52:02] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 240 seconds)
[02:52:02] *** Viewday115 is now known as Viewday11
[02:52:26] *** Joins: Reign (~Username@ip98-161-226-10.ph.ph.cox.net)
[02:53:31] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[02:54:10] *** Quits: harpia (~harpia@2804:2aec:205:1400:be2a:c8d5:4566:5dc8) (Client Quit)
[02:55:13] <edd_lc> underlying task, technically speaking, is scan a few managed k8s for namespaces that don't appear in another list (simplified). this must be done in python and will be a project written from scratch. new repo in the company's git server. what im not sure about - should i publish the package as a namespaced one to the company's pypi? this to allow "import company.finops.package1" while encouraging others to do the same (e.g.
[02:55:13] <edd_lc> "import company.security.package1"). or just simply a well named package which will be imported as "import great_naming"
[02:55:33] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[02:57:17] *** Quits: maxzor (~maxzor@2a01cb04054faa00253ae0b752eb470c.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[02:57:32] *** Joins: ovnicraft (~ovnicraft@186.70.222.62)
[02:59:03] *** Joins: nomic (~nomic@185.217.117.104)
[03:01:02] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 240 seconds)
[03:02:07] *** Quits: klotzhauer (~klotzhaue@gibtesnochklopapier.de) (Quit: ZNC 1.8.2 - https://znc.in)
[03:02:35] *** Joins: millido (~millido@84.210.150.128)
[03:02:48] *** Joins: klotzhauer (~klotzhaue@gibtesnochklopapier.de)
[03:03:11] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[03:03:25] *** Joins: Guest77 (~Guest77@p200300edaf0b6400353f0bd3c22e6d16.dip0.t-ipconnect.de)
[03:03:54] *** Quits: Guest77 (~Guest77@p200300edaf0b6400353f0bd3c22e6d16.dip0.t-ipconnect.de) (Client Quit)
[03:03:56] *** Quits: nomic (~nomic@185.217.117.104) (Client Quit)
[03:04:04] *** Joins: Guest77 (~Guest77@p200300edaf0b6400353f0bd3c22e6d16.dip0.t-ipconnect.de)
[03:04:10] *** Joins: summersault (~summersau@179.221.251.36)
[03:04:26] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 250 seconds)
[03:04:32] *** Quits: Guest77 (~Guest77@p200300edaf0b6400353f0bd3c22e6d16.dip0.t-ipconnect.de) (Client Quit)
[03:04:42] *** Joins: Guest77 (~Guest77@p200300edaf0b6400353f0bd3c22e6d16.dip0.t-ipconnect.de)
[03:05:41] <edd_lc> don't worry about it, though. ill ask around, at work, what's the standard approach. consistency is nice
[03:06:46] *** Quits: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2) (Read error: Connection reset by peer)
[03:06:52] <ba> kenwoodfox: sounds good! do check out `asyncio` if you need to maintain lots of I/O stuff in parallel (like subprocesses)
[03:07:04] *** Joins: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2)
[03:08:34] *** Quits: Guest77 (~Guest77@p200300edaf0b6400353f0bd3c22e6d16.dip0.t-ipconnect.de) (Client Quit)
[03:08:43] *** Quits: rje (~textual@65.141.156.170) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:08:44] *** Joins: Guest77 (~Guest77@p200300edaf0b6400353f0bd3c22e6d16.dip0.t-ipconnect.de)
[03:09:09] *** Quits: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv) (Ping timeout: 256 seconds)
[03:10:01] <SnoopJ> edd_lc, part of the reason I don't like this use of namespaces is that what is *in* that global namespace is anything but
[03:10:32] *** Quits: Guest77 (~Guest77@p200300edaf0b6400353f0bd3c22e6d16.dip0.t-ipconnect.de) (Client Quit)
[03:11:07] <SnoopJ> but if just being able to signal that the code is under AcmeCo's namespace is the principal goal, it might be just the thing
[03:12:08] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[03:12:30] <edd_lc> SnoopJ: when you say it's anything but, do you mean that whatever is under that namespace isn't actually implementing anything related to the namespace? in this context, the company's product?
[03:12:51] <SnoopJ> edd_lc, I mean that if I do `import google.protobuf` I know nothing about the `google` namespace except that it exists
[03:12:55] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[03:13:05] <SnoopJ> I have no other guarantees about it because google doesn't make any
[03:14:02] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:6140:c4c6:bf9:2254) (Ping timeout: 240 seconds)
[03:14:17] <edd_lc> SnoopJ: what would be the opposite? isn't that the only way namespaces work? you can't declare what it should export, can you?
[03:14:21] <SnoopJ> if you have meaningful stuff to provide at the very top (that a user can always expect) then maybe it's more consistency
[03:14:37] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[03:15:22] *** Joins: summersault (~summersau@179.221.251.36)
[03:15:23] <SnoopJ> edd_lc, I mean intrinsically. You can definitely do some tricks to make the experience more predictable for the end-user when doing this, but I've never *seen* that
[03:15:43] <kenwoodfox> ba: thanks!
[03:15:53] <SnoopJ> Usually it's just a big bucket where some code lives and you really have no idea *what* code without poking around for yourself
[03:16:00] *** Quits: klotzhauer (~klotzhaue@gibtesnochklopapier.de) (Quit: ZNC 1.8.2 - https://znc.in)
[03:16:41] *** Joins: klotzhauer (~klotzhaue@gibtesnochklopapier.de)
[03:16:53] <edd_lc> SnoopJ: like Google's SDK? one can't know which parts are installed and which aren't
[03:17:02] <SnoopJ> right
[03:17:09] *** Joins: kj7rrv (~kj7rrv@linuxarc/founder/kj7rrv)
[03:17:14] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[03:17:14] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[03:17:27] <SnoopJ> or at least, you need to do some extra work as an end-user if you want to know that
[03:17:57] <SnoopJ> I assume that it ticks some organizational policy box at google or someone downstream from them. Perhaps people ticking practices boxes a lot like the ones you're thinking about
[03:18:01] *** Joins: summersault (~summersau@179.221.251.36)
[03:18:02] <edd_lc> SnoopJ: that's a good point. when i was scraching my head with their SDK, i thought "oohhh, well, it's Google, i must be the idiot here". fair.
[03:18:29] <edd_lc> SnoopJ: that makes a lot of sense. i'll try to avoid it, then. don't do unto others and all that
[03:19:10] <SnoopJ> It's not necessarily worse downstream, the difference between `from google.protobuf import ...` and what it would be like without the prefix is not huge
[03:19:13] <edd_lc> s/ach/tach/g
[03:19:15] *** Joins: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b)
[03:19:48] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:19:49] <edd_lc> tch
[03:20:39] *** Quits: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b) (Client Quit)
[03:20:40] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Client Quit)
[03:20:45] <SnoopJ> There are ways to address those tensions with dynamic behavior, plugin systems and the like. Pytest is a particularly good example of that
[03:21:13] *** Joins: thevar1able (~textual@46.39.45.122)
[03:21:34] <SnoopJ> So, call it a nudge in the right direction if your introspection requirements are really rich
[03:23:57] <Forty-Bot> does pytest support printing stack traces for all child processes?
[03:24:07] *** Quits: klotzhauer (~klotzhaue@gibtesnochklopapier.de) (Quit: ZNC 1.8.2 - https://znc.in)
[03:24:27] <Forty-Bot> I am trying to debug a multiprocess test, and I only get the stack trace for one process
[03:24:49] *** Joins: klotzhauer (~klotzhaue@gibtesnochklopapier.de)
[03:24:52] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:25:31] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:26:02] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 240 seconds)
[03:26:38] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[03:27:10] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[03:27:31] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:3804:da2a:aa0f:e262)
[03:27:40] *** Joins: jonthesnow (~xizhendu@171.221.228.84)
[03:28:24] *** Joins: Viewday119 (~Viewday@user/viewday)
[03:29:46] <edd_lc> SnoopJ: thanks
[03:30:07] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[03:30:08] *** Viewday119 is now known as Viewday11
[03:30:52] *** Quits: e2m4n (~ezman@user/e2m4n) (Ping timeout: 250 seconds)
[03:32:34] *** Parts: llanhmod (~developer@user/domhnall/x-2887755) ()
[03:35:27] *** Joins: rje (~textual@50.35.241.164)
[03:35:34] *** Quits: charlie_sando (~charlie_s@2600:6c60:417f:24b5:fefe:a416:f283:9412) (Quit: Leaving)
[03:35:45] *** Joins: millido (~millido@84.210.150.128)
[03:36:04] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[03:36:27] *** Joins: nomic (~nomic@185.217.117.104)
[03:37:14] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[03:38:17] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[03:38:19] *** Joins: fikran (~fikran@user/fikran)
[03:40:42] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[03:41:17] *** Joins: merijn (~merijn@c-001-002-002.client.esciencecenter.eduvpn.nl)
[03:41:21] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[03:42:17] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[03:42:20] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:43:11] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[03:43:43] *** Quits: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net) (Ping timeout: 256 seconds)
[03:44:26] *** Quits: onichomp (~onichomp@2806:264:4408:1d3:a8d2:17cf:109f:e304) (Read error: Connection reset by peer)
[03:45:04] *** Joins: onichomp (~onichomp@2806:264:4408:1d3:a8d2:17cf:109f:e304)
[03:45:05] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[03:46:29] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[03:46:36] *** Joins: summersault (~summersau@179.221.251.36)
[03:47:29] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[03:49:33] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:51:27] *** Joins: Viewday115 (~Viewday@user/viewday)
[03:52:32] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[03:53:05] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[03:53:05] *** Viewday115 is now known as Viewday11
[03:53:21] *** Joins: Enitin (~Enitin@82.102.22.84)
[03:56:21] *** Quits: dextercd (~dexter@2a02:a450:f25d:1:76d4:35ff:fefe:34c) (Quit: WeeChat 3.4)
[03:56:22] *** Quits: debayer948 (~debayer@cpe-76-169-99-230.socal.res.rr.com) (Remote host closed the connection)
[03:56:32] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[03:56:42] <ldericher> Heya, I just tried using the Protocol class with importlib: https://replit.com/@ldericher/ImportProtocol - As expected `use(mod)` succeeds, but `frog_use(mod)` fails. Type checking fails to detect this in mypy, pycharm and the online repl IDE. Would I have to use the `runtime_checkable` annotation and `isinstance` checks for this to work?
[03:56:59] *** Joins: debayer948 (~debayer@cpe-76-169-99-230.socal.res.rr.com)
[03:57:16] *** Joins: icy_hot (~icy_hot@99-83-35-64.lightspeed.elpstx.sbcglobal.net)
[03:58:18] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.4)
[03:58:21] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:58:25] *** Joins: dre (~dre@2001:8004:44f0:eb2:b102:9bd6:452b:3d18)
[03:58:28] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl48a9wq6zsjwgpvn.ipv6.telus.net)
[03:59:46] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[04:01:23] *** Joins: zmt01 (~zmt00@user/zmt00)
[04:02:02] *** Quits: jonthesnow (~xizhendu@171.221.228.84) (Ping timeout: 240 seconds)
[04:02:37] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[04:02:55] *** Quits: ccldarjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:04:00] *** Joins: jazzy (~jaziz@user/jaziz)
[04:04:55] *** Quits: ormiret (sid314108@id-314108.lymington.irccloud.com) (Ping timeout: 268 seconds)
[04:04:56] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[04:05:02] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[04:05:04] *** Quits: Hobbyboy (Hobbyboy@hobbyboy.co.uk) (Quit: The BNC has broken!)
[04:05:05] *** Quits: ovnicraft (~ovnicraft@186.70.222.62) (Ping timeout: 256 seconds)
[04:05:20] *** Joins: msirabella (~bnc@user/mjsir911)
[04:05:20] *** Joins: FLHerne_ (flh@flherne.uk)
[04:05:21] *** Joins: sco1_ (~sco1@charon.whatbox.ca)
[04:05:22] *** Quits: dTal (quassel@dragonbox/wizzard/dtal) (Remote host closed the connection)
[04:05:23] *** Joins: pagios- (~pagios@life.is-a.beauty)
[04:05:32] *** Quits: pagios (~pagios@life.is-a.beauty) (Ping timeout: 268 seconds)
[04:05:56] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[04:06:07] *** Joins: ovnicraft (~ovnicraft@186.70.222.62)
[04:06:10] *** Quits: luna-is-here (~quassel@2a02:908:f761:2a3c::a) (Ping timeout: 268 seconds)
[04:06:10] *** Quits: spiderman_ (spiderman@spiderman.shelltalk.net) (Ping timeout: 268 seconds)
[04:06:10] *** Quits: Reinhilde (ellenor@vice-chairwoman.of.freenode.management) (Ping timeout: 268 seconds)
[04:06:10] *** Quits: mjr7[m] (~mjr7matri@2001:470:69fc:105::1:64e6) (Ping timeout: 268 seconds)
[04:06:11] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (Ping timeout: 268 seconds)
[04:06:11] *** Quits: Tardar (~tardar@2001:470:69fc:105::1:4b40) (Ping timeout: 268 seconds)
[04:06:11] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Ping timeout: 268 seconds)
[04:06:11] *** Quits: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016) (Ping timeout: 268 seconds)
[04:06:11] *** Quits: YakoYoku (~yakoyoku@2001:470:69fc:105::780) (Ping timeout: 268 seconds)
[04:06:11] *** Quits: mjsir911 (~bnc@user/mjsir911) (Ping timeout: 268 seconds)
[04:06:12] *** Quits: sco1 (~sco1@charon.whatbox.ca) (Ping timeout: 268 seconds)
[04:06:12] *** Quits: Peng_ (~mnordhoff@user/Peng) (Ping timeout: 268 seconds)
[04:06:12] *** Quits: troethe (~troethe@2a01:4f8:c0c:4bb4::1) (Ping timeout: 268 seconds)
[04:06:12] *** Quits: dnns01_ (~quassel@2a02:c207:3003:651::1) (Ping timeout: 268 seconds)
[04:06:19] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[04:06:23] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[04:06:40] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[04:06:43] *** Joins: onystrom (onm@irccore.ofelbar.se)
[04:06:46] *** Quits: one-star-chef (~one-star-@2001:470:69fc:105::165c) (Ping timeout: 268 seconds)
[04:06:46] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 268 seconds)
[04:06:46] *** Quits: capra[m] (~capramatr@2001:470:69fc:105::1:2280) (Ping timeout: 268 seconds)
[04:06:46] *** Quits: upekkha (~Advanced@2a01:4f8:1c0c:49df::1) (Ping timeout: 268 seconds)
[04:06:47] *** Quits: FLHerne (flh@flherne.uk) (Ping timeout: 268 seconds)
[04:06:47] *** Quits: nopx (~nopx@2a03:4000:29:6f:949e:beff:fe40:8857) (Ping timeout: 268 seconds)
[04:06:47] *** Quits: mrtnt_ (~Martin@2001:ad0:1:1:da9e:f3ff:fe4a:8dd0) (Ping timeout: 268 seconds)
[04:06:47] *** Quits: OlaNys (onm@irccore.ofelbar.se) (Ping timeout: 268 seconds)
[04:06:47] *** Quits: krjst (~krjst@2604:a880:800:c1::16b:8001) (Ping timeout: 268 seconds)
[04:06:48] *** Joins: metta (~Advanced@2a01:4f8:1c0c:49df::1)
[04:06:49] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:3804:da2a:aa0f:e262) (Quit: Client closed)
[04:06:49] *** Joins: ormiret (sid314108@id-314108.lymington.irccloud.com)
[04:06:56] *** Joins: dnns01 (~quassel@2a02:c207:3003:651::1)
[04:07:15] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[04:07:56] *** Joins: troethe (~troethe@2a01:4f8:c0c:4bb4::1)
[04:07:56] *** Joins: dTal (quassel@dragonbox/wizzard/dtal)
[04:08:08] *** Joins: cyphase (~cyphase@user/cyphase)
[04:08:17] *** Joins: Peng_ (~mnordhoff@user/Peng)
[04:08:17] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[04:08:20] *** Joins: mrtnt_ (~Martin@2001:ad0:1:1:da9e:f3ff:fe4a:8dd0)
[04:08:23] *** Joins: nopx (~nopx@v22018056211265782.supersrv.de)
[04:08:36] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:3804:da2a:aa0f:e262)
[04:09:03] *** Joins: zaquest (~notzaques@5.130.79.72)
[04:09:04] *** Joins: Hobbyboy (Hobbyboy@hobbyboy.co.uk)
[04:09:27] *** FLHerne_ is now known as FLHerne
[04:09:37] *** Joins: krjst (~krjst@2604:a880:800:c1::16b:8001)
[04:10:13] *** Joins: spiderman (spiderman@spiderman.shelltalk.net)
[04:11:10] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Ping timeout: 250 seconds)
[04:12:06] *** Quits: Lojas (~Lojas@user/Lojas) (Quit: Going offline, see ya! (www.adiirc.com))
[04:14:06] <foo> I'm working with a developer who is suggesting we take 1 module with 20 functions and break it up in to mod_name/__init__.py and put every function in its own file. He is saying "1 fat single file versus lean modules" -> I have never seen this before and it sounds dumb. But I'm open to missing the point here... does this make sense to anyone?
[04:14:26] <edd_lc> foo: no
[04:14:43] *** Quits: visl (visl@user/visl) (Ping timeout: 256 seconds)
[04:15:07] <dre> foo, no
[04:15:09] <marduk> a java programmer perhaps?
[04:15:43] <foo> marduk: no, but not very experienced.
[04:15:51] *** Quits: merijn (~merijn@c-001-002-002.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[04:16:10] <foo> This makes absolutely no sense to me. edd_lc / dre - I appreciate the sanity check. I appreciate his suggestion but he's literally proposing we go from 20 mods to like 300 files each with 1 function in them.
[04:16:13] *** Quits: dre (~dre@2001:8004:44f0:eb2:b102:9bd6:452b:3d18) (Read error: Connection reset by peer)
[04:16:18] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[04:16:33] <edd_lc> foo: that's similar to java/cpp file per class style. but, with each language, you also have to adapt to its style. in python, that's not how we roll. modules usually hold domain
[04:16:38] *** Joins: Ellenor (ellenor@vice-chairwoman.of.freenode.management)
[04:17:03] <marduk> maybe they get paid by the number of files produced
[04:17:09] <edd_lc> lol
[04:17:30] *** Joins: pedahzur (~jkugler@216-67-98-32.static.acsalaska.net)
[04:17:43] <foo> edd_lc: thank you, that makes sense. But we're not talking about classes, we're talking about individual functions. If it was classes I could sort of see that.
[04:17:46] <foo> But even then... that's pushing it
[04:17:49] <foo> marduk: haha, that's hilarious.
[04:17:52] <foo> Thank ya'll.
[04:18:17] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[04:18:32] *** Joins: kaiseisei (~Thunderbi@171.116.77.170)
[04:18:37] *** Joins: Viewday118 (~Viewday@user/viewday)
[04:18:38] *** Quits: pedahzur (~jkugler@216-67-98-32.static.acsalaska.net) (Client Quit)
[04:19:32] *** Joins: YakoYoku (~yakoyoku@2001:470:69fc:105::780)
[04:19:40] *** Joins: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016)
[04:19:43] *** Joins: Tardar (~tardar@2001:470:69fc:105::1:4b40)
[04:19:45] *** Joins: Wulf (~Wulf@user/wulf)
[04:19:49] *** Quits: nyah (~nyah@94.6.71.219) (Quit: leaving)
[04:20:02] <nedbat> foo: how many lines in the file?
[04:20:57] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[04:20:57] *** Viewday118 is now known as Viewday11
[04:21:06] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:21:25] *** Joins: mjr7[m] (~mjr7matri@2001:470:69fc:105::1:64e6)
[04:21:39] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[04:21:50] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[04:22:37] <foo> nedbat: 420
[04:22:47] <foo> nedbat: models.py is 464
[04:23:00] <foo> nedbat: if you have a general "framework" for how you think through this, I'm open to it. Otherwise the logic is simple: our geo-related functions go in geo.py
[04:23:06] <nedbat> foo: it's not so much
[04:23:11] <foo> nedbat: what is "too much" for you?
[04:23:36] *** Joins: one-star-chef (~one-star-@2001:470:69fc:105::165c)
[04:24:02] <nedbat> foo: my philosophy is simple but vague: keep like things together and different things separate
[04:25:01] *** Joins: capra[m] (~capramatr@2001:470:69fc:105::1:2280)
[04:25:12] *** Joins: ghostbuster (~admin@user/ghostbuster)
[04:26:01] <ghostbuster> can someone tell me what i'm doing wrong https://termbin.com/zx6z
[04:26:08] *** Joins: jfcaron (~jfcaron@192.252.229.171)
[04:26:47] *** Quits: edd_lc (~manjaro-i@85.64.197.64.dynamic.barak-online.net) (Ping timeout: 256 seconds)
[04:27:51] <nedbat> ghostbuster: use "python -m pip install usb"
[04:28:12] <ghostbuster> same message, already satisfied
[04:29:37] *** Quits: chgtg (~chg@116.3.16.5) (Ping timeout: 256 seconds)
[04:29:55] <Repiphany> pyusb, not usb
[04:29:59] <nedbat> ^^
[04:30:14] *** Quits: reset (~reset@user/reset) (Quit: reset)
[04:30:26] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:3804:da2a:aa0f:e262) (Quit: Client closed)
[04:30:47] <ghostbuster> thank you, would never have figured that out haha
[04:32:50] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:c84d:24ef:5079:3a2f) (Quit: Leaving)
[04:33:42] *** Joins: jazzy2 (~jaziz@user/jaziz)
[04:34:57] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[04:34:57] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Ping timeout: 240 seconds)
[04:36:07] <jinsun> ghostbuster: the thing you have to pip install can be different from what you have to import, so never just randomly pip install things if you can't import them
[04:36:27] *** Quits: u0_a416 (~xxNightxO@120.20.41.150) (Read error: Connection reset by peer)
[04:36:30] <jinsun> ghostbuster: you should ask the person who wrote the code, or if you can't reach then then google it and find out which package you were trying to use, and then see the install instruction for that package
[04:36:41] *** Quits: tim__ (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Read error: Connection reset by peer)
[04:37:17] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[04:37:24] <Repiphany> pyusb seems to be a requirement for blinkstick so not sure why it wouldn't have been installed automatically on that install
[04:37:45] *** Joins: u0_a416 (~xxNightxO@120.20.41.150)
[04:37:46] *** Joins: jazzy (~jaziz@user/jaziz)
[04:37:54] *** Joins: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[04:37:57] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Remote host closed the connection)
[04:38:16] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[04:39:04] <Repiphany> Oh, I guess they're misusing os_requires?
[04:39:13] *** Bakunin is now known as anisotropy
[04:39:22] *** anisotropy is now known as Bakunin
[04:39:25] *** Quits: JanC (~janc@user/janc) (Ping timeout: 240 seconds)
[04:40:15] <jinsun> there is install_requires=os_requires in the setup() call though
[04:41:37] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[04:42:00] *** Joins: jazzy2 (~jaziz@user/jaziz)
[04:43:37] *** Joins: JanC (~janc@user/janc)
[04:43:57] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[04:44:11] *** Quits: ST47 (~ST47@wikimedia/st47) (Ping timeout: 256 seconds)
[04:44:36] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[04:45:05] *** Joins: frmlof (~frmlof@70.243.238.191)
[04:45:32] *** Quits: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Read error: Connection reset by peer)
[04:45:37] *** Quits: CuriousErnestBro (~CuriousEr@user/curiousernestbro) (Ping timeout: 268 seconds)
[04:46:02] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[04:46:17] *** Joins: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[04:46:44] *** Quits: pizza (~pizzaiolo@user/pizzaiolo) (Remote host closed the connection)
[04:46:49] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[04:46:51] *** Quits: Mikro (leo@libera.ninja) (Ping timeout: 268 seconds)
[04:47:01] *** Quits: justJustache (~justache@user/justache) (Remote host closed the connection)
[04:47:05] *** Quits: lifefir31 (~lifefir3@152.37.120.101) (Quit: Ping timeout (120 seconds))
[04:47:07] *** Quits: CalimeroTeknik (~calimero@user/calimeroteknik) (Quit: バイバイ)
[04:47:16] *** Quits: Duckle (~Duckle@user/duckle) (Quit: Ping timeout (120 seconds))
[04:47:22] *** Joins: lifefir31 (~lifefir3@152.37.120.101)
[04:47:28] *** Quits: summonner (~summonner@188.26.74.156) (Ping timeout: 268 seconds)
[04:48:01] *** Quits: kts (~kts@103.73.237.3) (Quit: Konversation terminated!)
[04:48:04] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[04:48:05] *** Quits: birkoff (birkoff@user/birkoff) (Ping timeout: 268 seconds)
[04:48:07] *** Joins: CuriousErnestBro (~CuriousEr@user/curiousernestbro)
[04:48:22] *** Joins: justJustache (~justache@user/justache)
[04:48:27] *** Joins: Duckle (~Duckle@user/duckle)
[04:48:36] *** Joins: pizzaiolo (~pizzaiolo@user/pizzaiolo)
[04:49:51] *** Joins: Viewday118 (~Viewday@user/viewday)
[04:49:53] *** Joins: summonner (~summonner@188.26.74.156)
[04:50:00] *** Quits: johnkeats7 (~johnkeats@186.220.240.39) (Quit: Leaving)
[04:50:07] *** Joins: Mogget (Mogget@vogon02.moshwire.com)
[04:51:43] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[04:51:44] *** Viewday118 is now known as Viewday11
[04:52:28] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[04:52:41] *** Joins: CalimeroTeknik (~calimero@185.13.36.50)
[04:53:02] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[04:53:02] *** Quits: zamanf (~readyorno@2a02:587:3234:b500:a1d0:4b14:522e:96bc) (Ping timeout: 240 seconds)
[04:54:28] *** Joins: cliluw (~cliluw@47.147.73.223)
[04:54:32] *** Quits: LimeOn (~user@user/limeon) (Quit: .)
[04:55:57] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[04:56:00] *** Ellenor is now known as Reinhilde
[04:56:34] *** Joins: ST47 (~ST47@wikimedia/st47)
[04:58:25] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[04:58:56] *** Quits: debayer948 (~debayer@cpe-76-169-99-230.socal.res.rr.com) (Quit: The Lounge - https://thelounge.chat)
[05:00:22] *** Joins: birkoff (birkoff@birkoff.thunderirc.net)
[05:00:46] *** birkoff is now known as Guest5441
[05:00:46] *** Quits: hightower3 (~hightower@212.15.178.51) (Read error: Connection reset by peer)
[05:01:42] *** Joins: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net)
[05:04:14] <toma> [Think Python 2e, Exercise 9.3] Using a word list (approximately 113k words) can you find a combination of 5 forbidden letters that excludes the smallest number of words? Is there a better way than doing this with five nested loops going through all combinations of letters?
[05:05:38] *** Joins: jazzy (~jaziz@user/jaziz)
[05:07:48] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[05:09:01] *** Quits: mikeputnam2 (~mikeputna@wilug/mikeputnam) (Ping timeout: 240 seconds)
[05:09:40] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 250 seconds)
[05:10:37] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[05:12:21] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[05:13:36] *** Joins: ano (~ano@user/ano)
[05:13:51] *** Joins: unixlab (unixlab@debian.theserver.tk)
[05:13:57] *** Joins: jazzy2 (~jaziz@user/jaziz)
[05:15:28] <grym> toma: there's some handy stuff in itertools and collections
[05:15:38] <grym> that i would look at, hint hitn
[05:15:42] *** Quits: beastDiv1 (~beastDivi@user/beastdivision) (Remote host closed the connection)
[05:16:02] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[05:16:10] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 250 seconds)
[05:18:40] *** Quits: kaiseisei (~Thunderbi@171.116.77.170) (Quit: kaiseisei)
[05:18:51] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[05:21:21] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[05:21:49] *** Joins: ano (~ano@user/ano)
[05:22:42] *** Joins: kaiseisei (~Thunderbi@171.116.77.170)
[05:23:46] *** Quits: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2) (Quit: Leaving)
[05:24:01] *** Joins: Guest85 (~Guest85@197.237.100.32)
[05:25:27] <Guest85> Special methods (e.g. __repr__) are the key to the consistent behaviour of objects of all types.
[05:25:32] *** Joins: frost (~frost@user/frost)
[05:26:01] *** Joins: Viewday112 (~Viewday@user/viewday)
[05:26:07] *** Quits: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net) (Ping timeout: 256 seconds)
[05:28:10] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 268 seconds)
[05:28:10] *** Viewday112 is now known as Viewday11
[05:28:30] <toma> grym: thanks. I'll make a note of that for the future when I learn how to access data in memory. something scares me about how many disk reads I might end up doing for a problem like this.
[05:28:36] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[05:29:13] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[05:29:40] <grym> toma: absolutely read the file into a set first
[05:29:44] <grym> toma: once.
[05:29:56] <grym> (then screw around with itertools and collections)
[05:30:17] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[05:30:19] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:34] <grym> toma: contents = pathlib.Path('thewordlist.txt').read_text().split(
[05:30:50] <grym> toma: contents = pathlib.Path('thewordlist.txt').read_text().split('\n')
[05:31:03] <grym> (that'll be a list of 113k words)
[05:31:57] <toma> grym: that's way beyond chapter 09 :) let me cut and paste that somewhere.
[05:32:34] <toma> grym: thanks
[05:32:38] <icy_hot> Is there such a thing as manpages for a python module?
[05:32:46] <grym> toma: it's not, really :)
[05:32:58] <grym> icy_hot: python -m pydoc
[05:33:48] <icy_hot> grym Thanks!
[05:33:51] <icy_hot> Big TIL
[05:34:23] <jinsun> .splitlines() will be better than .split("\n") if there is a trailing newline
[05:35:01] <toma> grym: i think at this point var = fin.read(), words = var.split("\n") is how it would be done. but sets aren't taught until chapter 19 (??). set math makes this whole exercise a little too easy.
[05:35:39] <toma> jinsun: good point, but the data is assumed to be properly formatted. :)
[05:35:49] *** Joins: califax- (~califax@user/califx)
[05:36:18] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[05:36:24] <grym> toma: https://bpa.st/JGOA  i don't really like handling files without a context manager; read_text() makes it simple
[05:36:31] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[05:36:51] <grym> jinsun: i always forget that
[05:38:26] <jinsun> toma: well trailing newline counts as properly formatted in unix, and that file does seem to have trailing newline, though if you are fine with having a blank string as one of the words then split("\n") is fine
[05:38:39] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:38:42] *** Quits: kaiseisei (~Thunderbi@171.116.77.170) (Remote host closed the connection)
[05:38:58] <toma> jinsun: i'm just a beginner. i appreciate the advice.
[05:39:08] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 250 seconds)
[05:39:08] *** brabrax_ is now known as brabrax
[05:39:19] *** Quits: kijix\ (~shinomori@c-73-143-164-176.hsd1.ct.comcast.net) (Ping timeout: 256 seconds)
[05:39:36] <jinsun> (or you could remove the trailing newline then .split("\n") and .splitlines() will behave same)
[05:39:39] *** Joins: kaiseisei (~Thunderbi@171.116.77.170)
[05:40:18] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[05:40:19] *** califax- is now known as califax
[05:41:13] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[05:41:25] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 240 seconds)
[05:44:59] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 256 seconds)
[05:45:38] *** Joins: dob1 (~dob1@user/dob1)
[05:45:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[05:46:21] *** Joins: visl (visl@user/visl)
[05:46:32] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Ping timeout: 240 seconds)
[05:47:39] *** Joins: shokohsc4 (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr)
[05:47:41] *** Joins: fikran (~fikran@user/fikran)
[05:48:13] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-431-13.w86-246.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[05:48:13] *** shokohsc4 is now known as shokohsc
[05:48:36] *** Joins: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net)
[05:49:17] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:3804:da2a:aa0f:e262)
[05:50:29] *** Quits: ornxka (~ornxka@user/ornxka) (Ping timeout: 256 seconds)
[05:51:36] *** Joins: Viewday117 (~Viewday@user/viewday)
[05:52:08] *** Quits: slisnake0 (~slisnake@82.102.25.14) (Ping timeout: 250 seconds)
[05:53:03] *** Joins: slisnake0 (~slisnake@82.102.25.14)
[05:53:14] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[05:53:15] *** Viewday117 is now known as Viewday11
[05:53:17] *** Joins: ornxka (~ornxka@user/ornxka)
[05:53:19] *** Joins: summersault (~summersau@179.221.251.36)
[05:53:53] *** Joins: kclark (~kclark@rrcs-24-73-14-193.se.biz.rr.com)
[05:55:20] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[05:56:32] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 240 seconds)
[05:57:46] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[05:58:21] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[05:59:38] <jinsun> toma: hmm if you can't use stuff from after chapter 9, it would be difficult to optimize, since even lists and dicts are covered after that
[05:59:59] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[06:00:37] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 240 seconds)
[06:00:51] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[06:01:06] <jinsun> one really simple optimization could be to just loop over all words and maintain counts of number of words containing each letter, then exclude any letter that forms more words than the bottom 5 combined
[06:01:09] <toma> jinsun: yup. i'm cheating a little because set math makes this a lot more tolerable... but i know just enough to cheat a little, but not enough to understand everything you guys are suggesting.
[06:01:17] *** Joins: Viewday113 (~Viewday@user/viewday)
[06:01:21] *** Quits: ornxka (~ornxka@user/ornxka) (Remote host closed the connection)
[06:01:30] <jinsun> and that would at least need lists, and would be nicer with dicts
[06:01:41] <grym> i don't think it's "cheating"
[06:02:05] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[06:02:25] *** Joins: summersault (~summersau@179.221.251.36)
[06:02:26] <toma> jinsun: i'm actually okay not solving that problem with code. i think it's just a fun game the author has suggested. but i was hoping that it wasn't just O(n^5).
[06:02:38] <grym> doing it the brute force way is really painful
[06:02:46] *** Joins: ornxka (~ornxka@user/ornxka)
[06:02:46] <jinsun> yeah if you understand it, it's fine to use the later stuff
[06:02:53] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[06:02:54] *** Viewday113 is now known as Viewday11
[06:03:00] <grym> and set.isdisjoint is your _friend)
[06:03:44] <toma> grym: oh nice.
[06:04:07] <grym> uh huhhh
[06:04:07] <grym> :)
[06:04:32] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[06:05:23] *** Joins: beastDiv1 (~beastDivi@user/beastdivision)
[06:05:37] <jinsun> the way I was thinking was still brute force but 10 C 5 tries instead of 26 C 5 because you can just discard the 16 most frequent letters
[06:05:47] <toma> but honestly i'm a little over my head right now. it took me a few google searches just to find a solution is this word abecedarian (in alphabetical order). return w == ''.join(sorted(w))
[06:05:48] *** Quits: Guest85 (~Guest85@197.237.100.32) (Ping timeout: 256 seconds)
[06:06:29] <toma> s/find/figure out
[06:06:45] <grym> that's a nice way to do it... for some words.
[06:07:26] <toma> grym: is there a word that this would not work that comes to mind?
[06:07:31] <jinsun> O(n) way would be to just compare each letter with previous
[06:07:44] <jinsun> and return False if it is smaller than the previous one
[06:07:56] *** Joins: frost (~frost@user/frost)
[06:08:00] <grym> the ''.join() is a weird pythonism that you get used to
[06:08:39] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[06:08:40] <grym> toma: ß sorts after z
[06:08:48] <toma> jinsun: yup but that seems to be more code. log n * n seems goood for me.
[06:09:00] <jinsun> though C sort vs python loop may make the sorted version faster, especially since it is just few characters
[06:09:02] <toma> grym: now that's completely over my head.
[06:09:21] <grym> toma: the gotcha here is that naively sorted() sorts by the numerical value of the character
[06:09:21] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Ping timeout: 256 seconds)
[06:09:29] <grym> which is not always alphabetical order
[06:09:43] <grym> (for non-ascii alphabets, in particular_
[06:09:57] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[06:10:11] <toma> oh i didn't consider not alpha characters, and i did look out for lower and upper case letters.
[06:10:23] <toma> grym: good point.
[06:10:28] <grym> try 'ß'.isalpha()
[06:10:39] <Henry151> hey #python... when i install snowflake-connector-python with "pip install snowflake-connector-python" in my python 3.7 venv, i get the x86_64 version, but when i do it in my python 3.10 venv, i get the arm version. Any idea why, or how to force it to do the x86_64 version?
[06:10:52] <toma> grym: oh man.
[06:10:56] <toma> grym: dang.
[06:11:12] <jinsun> that wordlist is ascii stuff only so you can avoid thinking about weird unicode problems
[06:11:13] <grym> toma: it's a perfectly sensible letter, in some german
[06:11:25] <jinsun> but it is good stuff to know
[06:11:44] <toma> Scheiße!
[06:11:44] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[06:11:53] <grym> toma: yeah, what jinsun said; ignore that for these exercises, but know that it's out there and you'll encounter it immediately in the real world
[06:13:26] <Henry151> is a particular venv/installation of python locked to one architecture or another? or can i specify architecture somehow for specific packages when installing them inside the venv?
[06:13:43] <grym> Henry151: it's whatever architecture the host interpreter is
[06:13:52] <grym> there's no venv-xbuild or anything
[06:13:54] <Henry151> ah ok
[06:14:12] <Henry151> so my problem is that my python 3.10 venv is built on the wrong architecture
[06:14:14] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[06:14:25] <grym> ... how ?
[06:14:33] <Henry151> gotcha thanks for the quick help :) hope all is well
[06:14:36] <grym> did you make it one place and move it somewhere else?
[06:15:01] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Ping timeout: 256 seconds)
[06:15:35] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[06:15:40] <Henry151> well my base python 3.10.1 was actually installed by "brew install ipython" and it just pulled in 3.10.1 from somewhere and installed it... so i was just using that for my venv, ie. /path/to/that/3.10.1/bin/python -m venv venv
[06:15:58] *** Quits: omegatron (~some@p5484973e.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:16:05] *** Joins: ano (~ano@user/ano)
[06:16:15] <Henry151> but i instead now will acquire my own copy of 3.10.1 in the architecture i want for this and try over again
[06:17:20] <Henry151> playing with "pyrasgo" and was finding it wouldn't work in my python 3.10.1 venv but was working fine in my 3.7 venv... then i noticed that the path to the thing that is screwing up had "arm" in it on the 3.10 venv and "86_64" in it on the 3.7 venv
[06:17:36] <Henry151> which is that snowflake-connector-python
[06:18:02] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[06:18:32] *** Quits: Mortician (~Mortician@cpe-75-83-83-8.socal.res.rr.com) (Ping timeout: 240 seconds)
[06:18:51] *** Joins: Viewday119 (~Viewday@user/viewday)
[06:20:25] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[06:20:29] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[06:20:29] *** Viewday119 is now known as Viewday11
[06:21:55] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[06:23:50] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:24:17] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-8926-a20e-7ef6-caff.res6.spectrum.com) (Ping timeout: 240 seconds)
[06:25:52] <stewie925> Ive gotten so used to Python 3.6's f-string format style that I was struggling with Turing.com's python test - they still use print. %s format
[06:25:52] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[06:26:03] *** Joins: panella32 (~panella32@216.131.105.215)
[06:26:29] <toma> stewie925: well did you pass your turing test?
[06:26:43] <stewie925> yes, i did whew
[06:26:48] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-8926-a20e-7ef6-caff.res6.spectrum.com)
[06:26:51] <mefistofeles> stewie925: yeah, it happens, I think python must be the popular language that changes these things more frequently
[06:26:53] <stewie925> and they have really tricky questions
[06:27:18] <stewie925> I wish I made screenshots f all of them ugh
[06:27:38] <stewie925> I hate the old string %s format - too many styles to remember
[06:28:30] <BrenBarn> I wish they had gotten rid of that
[06:28:40] <grym> ye olde latex comment style
[06:29:12] <stewie925> here is one of the "tricky" questions, https://bpa.st/UKGQ
[06:29:23] <grym> toma: hah, so my silly approach to your permutation problem is still running.  down to 90 forbidden words as the local minimum so far
[06:29:35] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[06:29:52] <grym> stewie925: that's a common, if subtle, gotcha
[06:29:55] *** Joins: ejjfunky (~ejjfunky@125.164.21.65)
[06:30:12] <grym> but it seems weird to test explicitly unless you're testing "do you know about the wacky stuff"
[06:30:33] <stewie925> yes, but I was able to get it right
[06:31:12] *** Joins: nunggu (~q@user/nunggu)
[06:31:41] <stewie925> oh no, I didnt :(
[06:32:13] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[06:32:51] <jinsun> I got it wrong too, thought the second one was passing 2 args to the function
[06:32:59] *** Joins: karlpen (~karlpen@201.47.199.192.dynamic.adsl.gvt.net.br)
[06:33:07] <stewie925> ye, the second one list2 grrrr
[06:33:16] <stewie925> tricky question, indeed
[06:33:17] <jinsun> that one was really cheating though, it is like an eyesight test
[06:33:40] <grym> wait, so what was the actual question
[06:33:50] <stewie925> they got so much more tricky questions, I couldnt print screen enough
[06:33:57] <grym> because it's doing the bad default arg thing and i thought that was the "gotcha"
[06:34:07] <stewie925> grym: https://bpa.st/UKGQ - what is the value of list2
[06:34:16] <jinsun> that is one gotcha
[06:34:21] <stewie925> I thought it would be initializing the list
[06:34:29] <jinsun> second gotcha is that 'Python, []' is one argument
[06:34:33] *** Quits: karlpen (~karlpen@201.47.199.192.dynamic.adsl.gvt.net.br) (Quit: Leaving...)
[06:34:39] <toma> grym: wow. my guess was to exclude words without vowels ("aeiou") was 107.
[06:34:53] <grym> toma: oh i'm brute forcing it
[06:35:06] <stewie925> jinsun - the list2 passes two args
[06:35:25] <stewie925> 'python' , []
[06:35:32] <grym> stewie925: not as written, it doesn't
[06:35:41] <grym> it passes one arg, the string "python, []
[06:35:43] <grym> "
[06:35:50] <jinsun> yeah 'Python, []' is one arg
[06:35:58] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[06:36:07] <jinsun> I didn't see the quotes properly and thought it was 2 args too in beginniing
[06:36:13] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[06:36:15] <jinsun> that's why I said I got it wrong
[06:36:16] <stewie925> how so? the code shows `'python', []`
[06:36:29] <stewie925> python is enclosed in quites, the [] is not
[06:36:31] <stewie925> quotes
[06:36:55] <stewie925> and the function has two parameters, a val and a list (defaulted to [] if not passed)
[06:36:55] <jinsun> then what you pasted is different, I'm looking at https://bpa.st/UKGQ
[06:37:04] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[06:37:19] <stewie925> oh (censored)
[06:37:24] <stewie925> yeah I typed wrong
[06:37:37] <stewie925> let me change it
[06:37:38] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[06:37:46] *** Joins: millido (~millido@84.210.150.128)
[06:38:03] <jinsun> okay then what it looked to me initially was the right question :D
[06:38:12] *** Joins: summersault (~summersau@179.221.251.36)
[06:38:18] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[06:38:19] <stewie925> https://bpa.st/7JXQ
[06:38:24] <stewie925> hehe junsun
[06:38:48] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[06:39:18] <stewie925> do you guys know where else I can find these weird type of gotcha questions online?
[06:39:35] <jinsun> they are not really good questions
[06:39:40] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[06:39:53] *** Joins: summersault (~summersau@179.221.251.36)
[06:40:13] <grym> yeah that's just frippery
[06:40:17] <stewie925> yeah I hate trick questions lol
[06:40:25] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:40:25] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:40:25] *** finn_elija is now known as FinnElija
[06:40:29] <grym> the next frippery question is "ha ha, what's the value of list1 once all three calls are made"
[06:40:32] *** Quits: panella32 (~panella32@216.131.105.215) (Ping timeout: 240 seconds)
[06:40:37] <jinsun> but there is a github repo with lots of python gotchas here https://github.com/satwikkansal/wtfpython
[06:40:54] *** Joins: Guest85 (~Guest85@197.237.100.32)
[06:40:54] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[06:40:56] <grym> i have a personal collection :)
[06:40:57] * stewie925 clicks on the link
[06:41:01] <grym> named 'wat'
[06:41:04] <stewie925> grym: share! :D
[06:41:04] *** Joins: adiKt (uid472628@2a03:5180:f::7:3634)
[06:41:17] <grym> it's on anotehr machine, but i'll dig it up
[06:41:21] <grym> maybe not to night
[06:41:38] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Client Quit)
[06:41:48] <stewie925> no not right now :)
[06:41:53] <stewie925> its not urgent
[06:41:55] *** Quits: jfcaron (~jfcaron@192.252.229.171) (Quit: jfcaron)
[06:42:02] *** Quits: Nutte35 (~Nutte@202.153.81.183) (Ping timeout: 240 seconds)
[06:42:04] *** Joins: ano (~ano@user/ano)
[06:42:13] *** Quits: Guest85 (~Guest85@197.237.100.32) (Client Quit)
[06:42:34] <grym> there are some fun code golf ones though
[06:42:50] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 250 seconds)
[06:42:56] <grym> "Write a function that always returns 5. Do not use any of the following characters
[06:42:59] <grym> =0123456789*+-/= Numeric or otherwise."
[06:42:59] <stewie925> so I got the answer correct  LOL, I just misplaced the closing quote in  the second question
[06:43:15] <stewie925> I got a few more that I took screenshot of ...
[06:43:17] <grym> er, typed = twice too often
[06:44:18] <stewie925> hehe grym
[06:44:30] <grym> my favorite of which is `def return_five(): return len('len()')`
[06:44:34] <stewie925> they should create a python game app for those type of questions
[06:44:45] <grym> code golf has been played for generations
[06:45:04] *** Quits: Everything (~Everythin@46-133-77-215.mobile.vf-ua.net) (Quit: leaving)
[06:45:17] *** Joins: lethu (~lethu@user/lethu)
[06:45:21] <stewie925> that sure is a brain twister
[06:45:29] <grym> there are lots of ways to do it
[06:45:39] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[06:45:44] <TML> Never understood the appeal, always felt like practicing skills that if you actually do in real code will probably get you reprimanded :)
[06:45:44] <grym> all of them are pretty silly, and good fun
[06:45:55] <toma> grym: would this work for your 5 question "return ord("%") % ord(" ")"
[06:46:07] <grym> TML: "i don't like poetry; noone would do this in a quarterly report!"
[06:46:11] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[06:46:21] <grym> toma: that's the spirit!
[06:46:46] <toma> grym: w00t
[06:46:55] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[06:47:15] <stewie925> you have to memorize the ascii values
[06:47:29] <grym> i've never bothered
[06:47:32] <grym> i know a few
[06:47:33] <toma> stewie925: nah... you could just use 'f' and 'a'
[06:49:12] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[06:49:36] <stewie925> oh yeah toma - youre right....
[06:49:58] <stewie925> what a showoff "return ord("%") % ord(" ")"  lol
[06:49:59] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[06:50:29] <toma> stewie925: hahah. no i was dumb. i looked in up in an ascii chart and then figured out there was a better way....
[06:51:02] *** Joins: Viewday117 (~Viewday@user/viewday)
[06:51:09] <jinsun> I just noticed str(math.pi)[5] is 5, doesn't solve the problem but random useless fact
[06:51:25] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:51:36] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[06:51:36] *** Viewday117 is now known as Viewday11
[06:51:49] <jinsun> also TIL https://bugs.python.org/issue12345 :D
[06:52:02] *** Quits: slisnake0 (~slisnake@82.102.25.14) (Ping timeout: 268 seconds)
[06:52:02] *** Joins: Guest07 (~Guest07@pool-96-253-74-73.rcmdva.fios.verizon.net)
[06:52:06] <jinsun> nice get on the bpo number too
[06:52:17] *** Joins: ano (~ano@user/ano)
[06:52:42] <stewie925> I just remembered I could use len('abcde') for grym's tricky question
[06:52:49] <stewie925> lol
[06:53:01] <stewie925> but thats a newbie answer, I know....
[06:53:01] <toma> stewie925: NICE!
[06:53:15] <toma> stewie925: i prefer your solution to mine
[06:53:15] <stewie925> nah, its a newbie answer, but it works lol
[06:54:04] <grym> stewie925: ok, now do it without len :)
[06:54:29] <grym> toma: 90's looking real good here
[06:54:37] <grym> no lower value found so far
[06:54:42] <stewie925> grrrr grym lol
[06:55:23] <stewie925> that ord thing is a good one
[06:55:38] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[06:55:58] <stewie925> anyway, let me post those trick questions ...
[06:56:19] *** Joins: jfcaron (~jfcaron@192.252.229.171)
[06:56:19] <toma> grym: 90s... hmmm... do you know the lettters?
[06:56:30] <grym> toma: i will in a second; i realised i was being stupid
[06:57:32] *** Quits: raym (~raym@user/raym) (Ping timeout: 240 seconds)
[06:58:14] *** Joins: parv (~quass@user/parv)
[06:59:36] *** Joins: raym (~raym@user/raym)
[07:00:05] *** Quits: subopt (~subopt@2603-8081-2302-459a-002c-be69-8646-8eca.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:01:21] *** Quits: beastDiv1 (~beastDivi@user/beastdivision) (Remote host closed the connection)
[07:02:43] *** pizzaiolo is now known as pizza
[07:03:05] *** Quits: nomic (~nomic@185.217.117.104) (Quit: Leaving)
[07:04:05] <TML> grym: Just shows, I guess, how your brain and my brain process those things differently - poetry is putting emotion on paper, no conscious crossover into the logical space; writing code is more logical, with very little crossover into the creative space (by the time I sit down to write the code for something, the "creative" aspect is 95% complete and I'm just "encoding" what I created mentally)
[07:05:00] <stewie925> tricky 2 and 3 : https://bpa.st/GHSA
[07:05:37] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::10) (Ping timeout: 240 seconds)
[07:05:46] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 245 seconds)
[07:05:46] *** Joins: iflema_ (~ian@user/iflema)
[07:07:06] *** Quits: humbertowoody (~humbertow@189.236.30.209) (Ping timeout: 250 seconds)
[07:07:44] *** Joins: humbertowoody (~humbertow@189.236.30.209)
[07:08:32] <toma> stewie925: just finished working with sets for the last couple hours. still got it wrong. question 3 didn't seem "tricky"
[07:10:34] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[07:15:15] <stewie925> back
[07:15:29] <stewie925> yeah the question 3 threw me off a bit, but I was able to answer correctly
[07:15:42] <stewie925> #2 set.update. I struggled with it
[07:16:02] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 240 seconds)
[07:17:37] *** Joins: adeliktas1 (~adeliktas@i59F4A1E6.versanet.de)
[07:17:55] *** iflema_ is now known as iflema
[07:19:02] *** Quits: adeliktas (~adeliktas@i59F4DA04.versanet.de) (Ping timeout: 240 seconds)
[07:19:02] *** adeliktas1 is now known as adeliktas
[07:19:16] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-c475-c516-38bc-5933.res6.spectrum.com)
[07:19:17] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-8926-a20e-7ef6-caff.res6.spectrum.com) (Ping timeout: 240 seconds)
[07:20:48] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[07:21:19] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[07:21:52] *** Quits: parv (~quass@user/parv) (Quit: parv)
[07:23:08] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[07:24:42] *** Quits: Bakunin (~Bakunin@user/lindis) (Remote host closed the connection)
[07:25:21] *** Joins: Viewday110 (~Viewday@user/viewday)
[07:26:59] *** Quits: juliaEnv (~juliaEnv@ip-86-49-248-177.net.upcbroadband.cz) (Ping timeout: 256 seconds)
[07:27:14] *** Joins: summersault (~summersau@179.221.251.36)
[07:27:33] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[07:27:34] *** Viewday110 is now known as Viewday11
[07:28:20] *** Quits: humbertowoody (~humbertow@189.236.30.209) (Ping timeout: 250 seconds)
[07:30:09] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:30:37] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[07:30:41] *** Joins: humbertowoody (~humbertow@189.236.30.209)
[07:31:03] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[07:32:17] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:34:02] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[07:34:45] *** Quits: ElPresidente (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 256 seconds)
[07:34:50] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[07:35:25] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:118c:d4d7:b3d9:80d4)
[07:35:29] *** Quits: humbertowoody (~humbertow@189.236.30.209) (Ping timeout: 256 seconds)
[07:35:37] *** Joins: greknod282 (~grek@120.88.171.98)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:33] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:29] *** Quits: NeoCore (~neocore@195.200.221.21) (Quit: Leaving)
[07:37:42] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[07:41:34] *** Joins: chgtg (~chg@116.3.16.5)
[07:43:01] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:45:15] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl48a9wq6zsjwgpvn.ipv6.telus.net) (Quit: Leaving)
[07:46:31] *** Joins: constxd_ (~brad@142.167.170.88)
[07:48:37] *** Joins: hexenbane (~hexenbane@192.154.196.137)
[07:50:00] *** Quits: chgtg (~chg@116.3.16.5) (Ping timeout: 250 seconds)
[07:51:31] *** Joins: Viewday119 (~Viewday@user/viewday)
[07:52:08] *** Joins: chgtg (~chg@116.3.16.5)
[07:52:10] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 250 seconds)
[07:53:08] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[07:53:09] *** Viewday119 is now known as Viewday11
[07:53:15] *** Joins: bytehackr (~Sandipan@43.252.250.86)
[07:55:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[07:55:45] <vaio> hello, what's the best/easier way to convert timestamp like 2021-05-25T14:38:13+00:00 to epoch ?
[07:56:15] <vaio> im a bit confused with the `T`  and `+00:00`  parts
[07:56:45] *** Joins: thorbw_ (~tw@46.230.130.50)
[07:56:54] *** Joins: xx (~xx@user/xx)
[07:57:02] *** Joins: fikran (~fikran@user/fikran)
[08:01:40] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[08:02:33] <TML> vaio: pendulum.parse('2021-05-25T14:38:13+00:00')
[08:02:54] <phy1729> T is literal and +00:00 means it's UTC
[08:03:57] *** Quits: nicode (~nic@2607:f2c0:946d:3800:5978:3a37:ee84:d8cb) (Ping timeout: 240 seconds)
[08:04:20] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[08:04:23] *** Quits: ezakimak (~ezakimak@c-174-52-132-123.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[08:04:44] *** Quits: mar77i (~martti@46-126-48-136.dynamic.hispeed.ch) (Ping timeout: 250 seconds)
[08:05:18] <phy1729> vaio: datetime.datetime.strptime('2021-05-25T14:38:13+00:00', '%Y-%m-%dT%H:%M:%S%z').timestamp()
[08:05:19] <TML> vaio: The format you're seeing there appears to be a variant of ISO-8601, and the `T` is to demarcate the "date" portion of the string from the "time" portion (hence the 'T')
[08:05:24] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[08:06:28] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Ping timeout: 250 seconds)
[08:06:28] *** Joins: ezakimak (~ezakimak@c-174-52-132-123.hsd1.ut.comcast.net)
[08:07:12] *** Joins: jinsun__ (~quassel@user/jinsun)
[08:08:33] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[08:08:33] <vaio> TML: ah, thanks for the explanation, I was actually taking a look at the strptime() doc, but couldn't figure how to deal with the T thing (so, thanks just the same, phy1729, solving this issue =))
[08:08:54] <vaio> i didn't know "litteral" stuff could be provided
[08:09:08] <phy1729> That's why you have to escape the rest with %
[08:09:40] *** Joins: ElPresidente (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net)
[08:10:05] <vaio> mhmh, that makes sense indeed :)
[08:11:01] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 256 seconds)
[08:11:32] *** Quits: sreve (~quassel@p4ff44efb.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[08:12:09] *** Joins: sreve (~quassel@p4ff44cd7.dip0.t-ipconnect.de)
[08:13:06] *** Joins: xavie (~xavie@176-139-252-198.abo.bbox.fr)
[08:14:28] *** Quits: queue- (~nerd@user/queue/x-7267619) (K-Lined)
[08:16:29] *** Joins: programmar (~whatever@118.69.128.37)
[08:16:42] <programmar> join #linux
[08:16:46] <programmar> whoops
[08:16:48] <programmar> sorry
[08:17:37] *** Quits: emf (~emf@2620:10d:c090:400::5:2d26) (Ping timeout: 240 seconds)
[08:19:00] *** Joins: Viewday118 (~Viewday@user/viewday)
[08:19:09] *** Joins: dre (~dre@2001:8003:c932:c301:3dc2:f775:99d4:76ef)
[08:20:11] *** Joins: emf (~emf@2620:10d:c090:400::5:2d26)
[08:20:49] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[08:20:50] *** Viewday118 is now known as Viewday11
[08:20:54] *** Joins: GIR0001 (~GIR@64.145.93.44)
[08:21:15] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[08:25:08] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Remote host closed the connection)
[08:26:17] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[08:27:02] *** Quits: yac_ (~user@user/yac) (Ping timeout: 240 seconds)
[08:27:27] *** Quits: yac (~user@user/yac) (Ping timeout: 256 seconds)
[08:27:42] *** Quits: yac__ (~user@user/yac) (Ping timeout: 250 seconds)
[08:28:14] *** xavie is now known as xcombelle
[08:29:54] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[08:30:42] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 268 seconds)
[08:31:15] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:31:35] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Client Quit)
[08:31:56] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:33:39] *** Joins: \mSg (mSg@user/msg/x-0285936)
[08:34:54] *** Joins: yac (~user@user/yac)
[08:35:18] *** Joins: Guest1 (~Guest1@1.62.26.227)
[08:35:31] *** Quits: Guest1 (~Guest1@1.62.26.227) (Client Quit)
[08:37:21] *** Quits: hexenbane (~hexenbane@192.154.196.137) (Quit: Leaving)
[08:37:30] *** Joins: txtsd (~txtsd@user/txtsd)
[08:37:47] <txtsd> Is there an easy way to get platform independent cache directory?
[08:38:47] *** Quits: Guest07 (~Guest07@pool-96-253-74-73.rcmdva.fios.verizon.net) (Ping timeout: 256 seconds)
[08:42:30] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[08:42:33] <coc0nut> can only find examples of percentages for pyplot pie diagrams. i want it to show the value or count number aswell as percentage... anyone knows where to look?
[08:44:55] <BrenBarn> txtsd: there's appdirs
[08:44:59] <BrenBarn> and some other fork of it whose name I can't remember
[08:46:29] <coc0nut> nvm I found a way
[08:47:01] *** Joins: han-solo (~hanish@user/han-solo)
[08:47:14] *** Joins: newpy (~newpy@2601:280:4381:1390:196e:7869:f358:fc63)
[08:48:11] *** Quits: yac (~user@user/yac) (Remote host closed the connection)
[08:49:18] *** Joins: humbertowoody (~humbertow@189.236.30.209)
[08:49:22] *** Joins: panella32 (~panella32@193.36.225.111)
[08:50:00] *** Joins: Viewday111 (~Viewday@user/viewday)
[08:51:39] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[08:51:39] *** Viewday111 is now known as Viewday11
[08:55:45] <txtsd> Thanks BrenBarn
[09:01:02] *** Quits: ouestbillie (~gallup@54.29.90.149.rev.vodafone.pt) (Ping timeout: 240 seconds)
[09:02:14] *** Joins: dvx (~dvx@5.181.92.64)
[09:02:23] <defn-> I have a pandas question. Say I have a df, and I then want to group the df by two columns. For example Name and Address. if I use df.groupby() I'm given a GroupBy object, but what I really want is just a formatted dataframe
[09:03:08] *** Joins: ouestbillie (~gallup@45.83.220.194)
[09:04:11] <defn-> ah i'm just being dumb
[09:04:15] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[09:04:17] <defn-> I should just set the index
[09:04:22] <defn-> df.set_index(['ind1','ind2'], inplace=True)
[09:04:30] <defn-> I'll see myself out thanks for being my rubber ducky
[09:06:07] *** Joins: bluedust (~bluedust@103.160.233.171)
[09:06:34] <defn-> actually that doesn't seem to do quite what I had hoped
[09:07:47] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:118c:d4d7:b3d9:80d4) (Read error: Connection reset by peer)
[09:08:27] <BrenBarn> what do you want the rows of the new dataframe to be?
[09:08:40] <BrenBarn> like the deal with groupby is generally that you get one row per group
[09:08:45] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[09:09:01] *** Joins: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2)
[09:09:08] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[09:11:15] *** Quits: constxd_ (~brad@142.167.170.88) (Ping timeout: 256 seconds)
[09:11:28] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Ping timeout: 250 seconds)
[09:14:12] *** Joins: Viewday113 (~Viewday@user/viewday)
[09:14:30] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 250 seconds)
[09:14:44] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:3804:da2a:aa0f:e262) (Quit: Client closed)
[09:16:16] *** Joins: analoq (~yashi@user/dies)
[09:16:21] *** Joins: kuahara (kuahara@072-182-135-032.res.spectrum.com)
[09:16:21] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[09:16:22] *** Viewday113 is now known as Viewday11
[09:16:57] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 268 seconds)
[09:17:24] *** Joins: vanessa (~annada@103.160.128.7)
[09:19:34] <kuahara> if I'm using 'import openpyxl' in my header, why do I then also have to use 'from openpyxl import load_workbook' before I can use the load_workbook() function?
[09:19:46] <kuahara> shouldn't load_workbook already be included?
[09:20:17] <han-solo> the import is not equivalent to #include kinda thing
[09:20:42] <han-solo> you can `openpyxl.load_workbook` maybe
[09:20:53] *** Quits: panella32 (~panella32@193.36.225.111) (Ping timeout: 256 seconds)
[09:20:57] <kuahara> I thought import and #include were the same thing
[09:21:05] <han-solo> there are not :)
[09:21:27] *** Quits: GIR0001 (~GIR@64.145.93.44) (Quit: Leaving)
[09:21:45] <han-solo> you import the module, and use the module namespace, or import the names from the modules like `from mod import func, Cls` etc..
[09:21:59] <kuahara> That makes sense.
[09:22:45] <han-solo> i'm curious on what you consider a header file in python though
[09:22:55] *** Joins: panella32 (~panella32@193.36.225.111)
[09:23:10] <kuahara> I meant the start of the document, not a separate header file like a .h in c++
[09:23:16] <han-solo> ah, got it
[09:23:37] <kuahara> I assume such a file can be included in python as well though, no?
[09:23:56] *** Joins: yac (~user@user/yac)
[09:25:15] *** Joins: Viewday117 (~Viewday@user/viewday)
[09:25:36] <han-solo> no, i think
[09:26:02] <BrenBarn> there's not really such a thing as a "header file" in Python
[09:26:30] <kuahara> Seems like having such a thing would help keep things tidy
[09:27:07] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[09:27:08] *** Viewday117 is now known as Viewday11
[09:27:08] <han-solo> i'm more comfortable with toplevel imports in the module
[09:27:21] <han-solo> i know where a name comes from just from the module i'm working with
[09:27:56] <kuahara> I'm not going to be working on anything huge, so that's fine for me too.  What do they do in larger scale projects though?
[09:28:31] <han-solo> you make package(s), i guess
[09:28:51] <kuahara> I'll dive further down that rabbit hole if I ever get there  :)
[09:29:15] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:29:21] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:9cff:49a9:6556:888f)
[09:30:10] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:9cff:49a9:6556:888f) (Client Quit)
[09:30:21] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[09:31:52] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:d301:91ee:e846:6da9)
[09:33:20] *** Joins: beastDiv1 (~beastDivi@user/beastdivision)
[09:33:51] *** Joins: sudomannn (~sudomann@2601:543:100:4fc8:5c68:5817:cec9:586d)
[09:36:01] *** Quits: ejjfunky (~ejjfunky@125.164.21.65) (Ping timeout: 256 seconds)
[09:36:35] *** Quits: zaz\ (~zaz@poneybl.eu) (Ping timeout: 256 seconds)
[09:36:37] *** Quits: sudomann (~sudomann@2601:543:100:4fc8:5c68:5817:cec9:586d) (Ping timeout: 240 seconds)
[09:37:46] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[09:39:11] *** Joins: Jong (~Jong@2620:10d:c090:400::5:44d9)
[09:39:51] *** Joins: zaz\ (~zaz@poneybl.eu)
[09:41:27] *** Quits: beastDiv1 (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[09:42:19] *** Joins: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net)
[09:42:46] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Remote host closed the connection)
[09:43:18] *** Quits: vanessa (~annada@103.160.128.7) (Quit: WeeChat 3.4)
[09:43:24] *** Quits: thatmint (~thatmint@user/thatmint) (Quit: The Lounge - https://thelounge.chat)
[09:45:15] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[09:49:37] *** Joins: humberto1 (~humbertow@189.236.30.209)
[09:52:23] *** Joins: Viewday115 (~Viewday@user/viewday)
[09:52:38] *** Quits: humbertowoody (~humbertow@189.236.30.209) (Ping timeout: 250 seconds)
[09:52:39] *** Joins: vanessa (~annada@103.160.128.7)
[09:52:59] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[09:52:59] *** Viewday115 is now known as Viewday11
[09:54:09] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 256 seconds)
[09:55:18] *** Quits: Daemoen (~Daemoen@daemoen.ct-unlimited.com) (Quit: WeeChat 3.2)
[09:55:32] *** Quits: \mSg (mSg@user/msg/x-0285936) (Ping timeout: 240 seconds)
[09:57:50] *** Quits: humberto1 (~humbertow@189.236.30.209) (Ping timeout: 250 seconds)
[10:00:41] *** Joins: Viewday118 (~Viewday@user/viewday)
[10:01:08] *** Quits: panella32 (~panella32@193.36.225.111) (Quit: Textual IRC Client: www.textualapp.com)
[10:01:17] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[10:02:20] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[10:02:20] *** Viewday118 is now known as Viewday11
[10:04:02] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 240 seconds)
[10:04:26] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[10:06:22] *** Joins: fikran (~fikran@user/fikran)
[10:06:30] *** Joins: han-solo (~hanish@178.248.118.21)
[10:10:29] *** Quits: adiKt (uid472628@2a03:5180:f::7:3634) (Quit: Connection closed for inactivity)
[10:10:46] <BrenBarn> I think accessing lib functions through a namespace keeps things clean
[10:11:03] <BrenBarn> you can `import longpackage.longmodule as short` to have a shortcut
[10:11:29] <BrenBarn> I don't like having to go back and edit the import line every time I realize I need some other function from a lib
[10:12:16] *** Quits: han-solo (~hanish@178.248.118.21) (Changing host)
[10:12:16] *** Joins: han-solo (~hanish@user/han-solo)
[10:13:18] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[10:13:19] *** Quits: bluedust (~bluedust@103.160.233.171) (Read error: Connection reset by peer)
[10:13:30] *** Quits: Pixi (~Pixi@user/pixi) (Quit: Leaving)
[10:13:32] *** Joins: bluedust (~bluedust@103.160.233.171)
[10:15:04] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[10:17:25] *** Quits: programmar (~whatever@118.69.128.37) (Quit: Leaving)
[10:17:26] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[10:17:42] *** Joins: parv (~quass@user/parv)
[10:19:20] *** Joins: Viewday117 (~Viewday@user/viewday)
[10:19:25] *** Joins: Goreng (~Goreng@202.138.250.54)
[10:20:26] *** Quits: Goreng (~Goreng@202.138.250.54) (Client Quit)
[10:20:40] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[10:21:31] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[10:21:32] *** Viewday117 is now known as Viewday11
[10:21:41] *** Joins: beastDiv1 (~beastDivi@user/beastdivision)
[10:22:22] *** Quits: beastDiv1 (~beastDivi@user/beastdivision) (Remote host closed the connection)
[10:22:28] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Remote host closed the connection)
[10:24:11] *** Joins: beastDiv1 (~beastDivi@user/beastdivision)
[10:25:09] *** Joins: manti7 (~manti7@176.10.104.94)
[10:25:13] *** Joins: Pixi (~Pixi@user/pixi)
[10:25:15] *** Joins: ac_slater (~ac_slater@c-67-168-6-19.hsd1.wa.comcast.net)
[10:25:31] *** Parts: Guest5441 (birkoff@birkoff.thunderirc.net) ()
[10:25:43] *** Joins: fef (~thedawn@user/thedawn)
[10:26:20] <ac_slater> hey all. I want to put some matplotlib windows on a webpage. Is there a project that supports this? It's intended to be hacky, and I don't want to rewrite matplotlib modules in a d3.js or whatever
[10:26:47] *** Joins: humberto1 (~humbertow@189.236.30.209)
[10:27:53] <ac_slater> mpld3?
[10:28:27] *** Joins: audiobirb (~audio@user/audio)
[10:31:57] *** Quits: humberto1 (~humbertow@189.236.30.209) (Ping timeout: 240 seconds)
[10:32:26] *** Quits: onichomp (~onichomp@2806:264:4408:1d3:a8d2:17cf:109f:e304) (Read error: Connection reset by peer)
[10:33:04] *** Joins: onichomp (~onichomp@2806:264:4408:1d3:a8d2:17cf:109f:e304)
[10:33:43] *** Joins: ham5urg__ (~ham5urg@pd95eb546.dip0.t-ipconnect.de)
[10:35:00] *** Joins: humberto1 (~humbertow@189.236.30.209)
[10:35:44] *** Joins: Guest9014 (~vit@chello085216193138.chello.sk)
[10:36:24] *** Quits: ham5urg_ (~ham5urg@p200300d1670c4f00e64e787baaf7b40f.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[10:37:17] *** Joins: fivegruel (~fivegruel@HSI-KBW-095-208-248-017.hsi5.kabel-badenwuerttemberg.de)
[10:37:25] <kuahara> Forms feel like a huge pain in the butt using python.  Trying to get text aligned to the left and to not look like garbage.
[10:37:45] <kuahara> and the place() method is just... ugh
[10:39:20] *** Parts: ac_slater (~ac_slater@c-67-168-6-19.hsd1.wa.comcast.net) (WeeChat 3.4)
[10:39:23] *** Joins: programmar (~whatever@118.69.128.37)
[10:39:39] *** Quits: humberto1 (~humbertow@189.236.30.209) (Ping timeout: 256 seconds)
[10:39:46] <programmar> is there any file mode which allows me to read/write at the same time without overwriting the existing data ?
[10:40:03] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[10:40:24] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[10:40:49] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Client Quit)
[10:41:55] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[10:42:02] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 250 seconds)
[10:42:11] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[10:42:56] <supakeen> Not really no.
[10:43:24] <programmar> hm, guess i have to find another way then
[10:43:56] <supakeen> You could, theoretically, do this but you'd be managing a lot yourself.
[10:44:12] <supakeen> There's a single file position that is used for both so between operations you can ensure it's in the right place.
[10:45:02] <supakeen> So you *can* use for example the `r+` mode and seek back and forth :)
[10:45:50] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:3ce7:6a79:6d9a:be55)
[10:45:57] <programmar> yea but doesn't r+ will overwrite everything ?
[10:46:08] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Quit: mogad0n)
[10:46:42] <supakeen> Depends on where you put your file position.
[10:47:05] <kuahara> Is there a simple way to create a form where I can try to collect data for say 5 variables at once when the user hits the submit button?   Using tkinter for this is ugly as sin so far.
[10:47:33] *** Quits: r3m (~launch@user/r3m) (Quit: WeeChat 3.5-dev)
[10:47:35] *** Joins: MajorBiscuit (~MajorBisc@c-001-025-054.client.tudelft.eduvpn.nl)
[10:47:58] <kuahara> I'd like to have line1, line2, line3  one on top of the other, with text boxes to the right of each for users to use for answers.
[10:48:38] <han-solo> webapp ftw ;)
[10:49:36] <han-solo> you maybe be interested in pyside or something though
[10:49:59] <icy_hot> kuahara I feel you. I tried tkinter once for a pet project, but I had a hard time controlling where I want my texts and images to be
[10:50:08] <icy_hot> needless to say I abandoned said pet project
[10:50:40] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[10:51:41] <kuahara> I just wanted to collect some initial project data:  name of the PM, site ID, site name, state, etc... at the start of each execution to set a few static vars before writing the rest of the program.
[10:52:13] <kuahara> Figured a quick pop up with some text and textboxes would look nicer than prompting the user on a CLI
[10:52:31] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[10:52:33] *** Joins: birkoff (birkoff@user/birkoff)
[10:56:20] <cluelessperson> kuahara, I recommend using the web for that.
[10:57:03] *** Quits: foul_owl (~kerry@94.140.8.107) (Ping timeout: 256 seconds)
[10:57:17] *** Quits: Jong (~Jong@2620:10d:c090:400::5:44d9) (Ping timeout: 240 seconds)
[10:57:27] *** Joins: r3m (~launch@user/r3m)
[10:57:29] <kuahara> I feel like that would be even less elegant than the CLI
[10:57:57] <cluelessperson> kuahara, depends on who you're designing the cli for.
[10:58:03] <kuahara> coworkers
[10:58:21] <cluelessperson> kuahara, maybe use click?
[10:58:25] <kuahara> But I mean seriously... I'm starting up a web browser to grab four plain text answers from an end user?
[10:58:25] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[10:58:27] *** Joins: mrwick (~mrwick@user/mrwick)
[10:58:36] <han-solo> no, a cli is way elegant
[10:58:39] <han-solo> for this
[10:58:59] *** Joins: jmd (~user@de.cellform.com)
[10:59:07] <kuahara> With a form, the user could stop, preview all 4 answers, edit where necessary, then submit
[10:59:17] <cluelessperson> kuahara, sorry, I misunderstood how far you were going.   four plain text answers, might as well a simple list of questions and print, input. :P
[10:59:25] <kuahara> with a CLI, they get one question at a time, enter, next question, enter... can't fix mistakes.
[10:59:34] <programmar> supakeen,: what do you mean by position ? like the .seek() method ?
[10:59:41] <supakeen> Yes.
[11:00:06] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:f2bd:7ae8:e6b7:6a7c)
[11:00:29] <kuahara> What if they entered in the name of the wrong project manager?  They have to close and restart the whole program to fix it?
[11:00:34] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[11:00:40] <han-solo> no, ask a confirmation in the end ?
[11:00:53] <cluelessperson> kuahara, you could do all sorts of things
[11:01:26] <cluelessperson> answer_questions questions1 save.json
[11:01:34] <kuahara> I shouldn't have gotten hung up on this in the very beginning.  Should have started with a CLI and tried to pretty it up later.  It's 1:30am here.  I gotta hit the sack.
[11:01:35] <cluelessperson> if save.json exists, display, and re-enter. :P
[11:01:42] <programmar> supakeen: don't i have to open the file first then seek it ?
[11:02:13] *** Joins: VaniaPy (~VaniaPy@46.12.137.214.dsl.dyn.forthnet.gr)
[11:04:02] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[11:04:23] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[11:04:52] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[11:06:06] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[11:06:47] *** Joins: slav0nic (slav0nic@python.su)
[11:07:29] *** Quits: seednode99 (~seednode@user/seednode) (Quit: Nihil supernum.)
[11:07:33] <programmar> wait, r+ doesn't seem to overwrite anything
[11:07:38] <programmar> if i seek(0)
[11:07:45] <programmar> ok got it
[11:08:25] *** Joins: seednode99 (~seednode@user/seednode)
[11:09:02] *** Quits: sudomannn (~sudomann@2601:543:100:4fc8:5c68:5817:cec9:586d) (Ping timeout: 240 seconds)
[11:09:03] *** unixlab is now known as nicoz
[11:09:35] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[11:10:07] *** Joins: foul_owl (~kerry@97-126-11-68.tukw.qwest.net)
[11:10:16] *** Joins: mexen (uid495612@user/mexen)
[11:12:58] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[11:14:01] *** Joins: upsala (~zcb@185.209.196.170)
[11:14:39] *** Joins: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4)
[11:14:47] *** Quits: icy_hot (~icy_hot@99-83-35-64.lightspeed.elpstx.sbcglobal.net) (Quit: WeeChat 3.4)
[11:15:24] *** Quits: hamms (~hams@c-73-255-22-88.hsd1.tx.comcast.net) (Ping timeout: 250 seconds)
[11:16:48] *** Joins: Algernon69 (~Algernon6@88.124.69.179)
[11:16:55] *** Joins: nelim (~nelim@about/openbglab/nelim)
[11:17:29] *** Joins: szymon (~ugh@37.120.156.250)
[11:17:33] *** Parts: nelim (~nelim@about/openbglab/nelim) (Leaving)
[11:17:55] *** Joins: gusto (~Augustus@109.255.100.54)
[11:18:11] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10e7:994e:8d4f:ab0b:d316:b5a)
[11:18:57] *** Quits: beastDiv1 (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[11:20:27] *** Quits: platta (~platta@pool-173-61-104-121.cmdnnj.fios.verizon.net) (Ping timeout: 256 seconds)
[11:21:32] *** Quits: Algernon69 (~Algernon6@88.124.69.179) (Ping timeout: 240 seconds)
[11:21:37] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 240 seconds)
[11:21:59] *** Joins: dreamon (~dreamon@ppp-88-217-76-15.dynamic.mnet-online.de)
[11:22:16] *** Joins: tobybl (~tobybl@248.195.115.87.dyn.plus.net)
[11:23:02] *** Joins: kosh (~kosh@user/kosh)
[11:23:57] *** Joins: beastDiv1 (~beastDivi@user/beastdivision)
[11:24:24] <wyre> hi guys, how is this being evaluated? https://bpa.st/LSIA
[11:24:25] *** Quits: beastDiv1 (~beastDivi@user/beastdivision) (Remote host closed the connection)
[11:24:26] *** Quits: onichomp (~onichomp@2806:264:4408:1d3:a8d2:17cf:109f:e304) (Read error: Connection reset by peer)
[11:25:04] *** Joins: onichomp (~onichomp@2806:264:4408:1d3:a8d2:17cf:109f:e304)
[11:25:25] <BrenBarn> it's "lexicographic"
[11:25:38] <BrenBarn> so it compares the first element, then if those are equal compares the second, etc.
[11:26:18] <wyre> BrenBarn, but it will return always True until some element at left tuple is bigger than its corresponding element in the right tuple?
[11:26:44] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[11:27:10] <BrenBarn> well, bigger or equal, since you asked for strictly less-than
[11:27:24] <BrenBarn> I don't know why you say "but"
[11:27:34] <BrenBarn> it compares the first element, then if those are equal it compares the second, etc.
[11:28:13] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[11:28:49] <wyre> I see, thank you BrenBarn 😊
[11:29:48] *** Joins: rendar (~rendar@user/rendar)
[11:30:27] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[11:31:04] *** Quits: gusto (~Augustus@109.255.100.54) (Read error: Connection reset by peer)
[11:31:20] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[11:31:23] *** Quits: ST47 (~ST47@wikimedia/st47) (Ping timeout: 268 seconds)
[11:31:41] *** Joins: gusto (~Augustus@109.255.100.54)
[11:32:34] *** Joins: o (~niko@libera/staff/niko)
[11:33:46] *** Quits: weedmic (~weedmic@5.102.235.240) (Remote host closed the connection)
[11:34:39] *** Joins: palasso (~palasso@user/palasso)
[11:35:53] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[11:36:02] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Client Quit)
[11:36:59] *** Quits: bluedust (~bluedust@103.160.233.171) (Remote host closed the connection)
[11:37:02] *** Quits: Sylhouette (~johan@87.233.191.146) (Ping timeout: 240 seconds)
[11:37:11] *** Quits: szymon (~ugh@37.120.156.250) (Remote host closed the connection)
[11:39:39] *** Joins: szymon (~ugh@37.120.156.250)
[11:40:35] *** Joins: clydez (~clydez@178-116-34-81.access.telenet.be)
[11:43:15] *** Joins: ST47 (~ST47@wikimedia/st47)
[11:44:59] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[11:46:45] *** Quits: VaniaPy (~VaniaPy@46.12.137.214.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[11:46:45] *** Quits: Guest1058 (~roro@78.192.226.182) (Read error: Connection reset by peer)
[11:47:02] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[11:47:19] <aphysically> jinsun_: new pyright published but I'm heading to sleep for now
[11:47:25] *** Quits: tofran (~tofran@37.189.158.134) (Ping timeout: 240 seconds)
[11:49:11] *** Joins: tofran (~tofran@37.189.158.134)
[11:49:38] *** Joins: szymon_ (~ugh@37.120.156.250)
[11:50:28] *** Joins: someuser (~user@197.54.16.50)
[11:50:45] *** Joins: ubert1 (~Thunderbi@p200300ecdf09949ebd4b43e35031000e.dip0.t-ipconnect.de)
[11:51:19] *** Joins: reset (~reset@user/reset)
[11:52:42] *** Quits: szymon_ (~ugh@37.120.156.250) (Client Quit)
[11:53:03] *** Joins: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52)
[11:54:28] *** Joins: tesuji (~quassel@2a02:908:180:9500:64dc:7373:6d3:d9e5)
[11:54:57] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[11:55:01] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[11:55:02] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[11:55:05] *** Joins: pipapipapibo (~w@2601:601:cf7e:1d80::a5ad)
[11:55:18] *** Joins: jazzy (~jaziz@user/jaziz)
[11:55:32] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[11:55:59] *** Joins: Auron (~Auron956@user/auron)
[12:01:02] *** Quits: waxfire6 (~waxfire@65.119.2.240) (Ping timeout: 240 seconds)
[12:01:39] *** Quits: lbalhar (~lbalhar@93.185.13.26) (Ping timeout: 256 seconds)
[12:02:19] *** Joins: VaniaPy (~VaniaPy@46.12.137.214.dsl.dyn.forthnet.gr)
[12:02:32] *** Joins: pvergain1 (~Thunderbi@2a01:e0a:223:690:d301:91ee:e846:6da9)
[12:02:33] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:d301:91ee:e846:6da9) (Read error: Connection reset by peer)
[12:02:33] *** Parts: VaniaPy (~VaniaPy@46.12.137.214.dsl.dyn.forthnet.gr) ()
[12:02:33] *** pvergain1 is now known as pvergain
[12:02:50] *** Quits: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2) (Ping timeout: 268 seconds)
[12:03:46] *** Joins: hightower2 (~hightower@212.15.178.51)
[12:05:01] *** Joins: bluedust (~bluedust@103.160.233.171)
[12:06:54] *** Joins: headline (~headline@ip70-181-236-119.sd.sd.cox.net)
[12:07:49] <headline> Anyone know where the aubio lib guys are at? Their channel on freenode is empty and it doesn't seem to be used here either. I'm struggling to read in and pitch detect an audio file using the lib
[12:08:19] *** Joins: waxfire6 (~waxfire@65.119.2.240)
[12:08:36] *** Joins: sudomannn (~sudomann@2601:543:100:4fc8:61d8:16f6:94:fd94)
[12:09:25] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[12:10:11] *** Quits: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net) (Quit: Leaving)
[12:10:42] *** Quits: CalimeroTeknik (~calimero@185.13.36.50) (Changing host)
[12:10:42] *** Joins: CalimeroTeknik (~calimero@user/calimeroteknik)
[12:10:48] <headline> Perhaps I'm doing some sort of sin reading the wav file - any once-overs would be greatly appreciated https://bpa.st/WWSA
[12:12:25] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[12:13:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[12:14:06] *** Joins: andreasbuhr (~quassel@p549db05b.dip0.t-ipconnect.de)
[12:14:06] *** Quits: andreasbuhr (~quassel@p549db05b.dip0.t-ipconnect.de) (Client Quit)
[12:14:40] *** Joins: rsx (~dummy@ppp-188-174-159-210.dynamic.mnet-online.de)
[12:15:43] *** Joins: fikran (~fikran@user/fikran)
[12:17:35] <mrwick> headline: interesting lib, thanks for the heads up. looks like the wav file is read with audio_manager.load_vocal_map, but there is no error there
[12:18:05] <headline> Hi! Thanks for the response - Sorry it wasn't clear but that paste is the body of audio_manager.load_vocal_map
[12:18:16] *** Parts: pagios- (~pagios@life.is-a.beauty) (Leaving...)
[12:18:46] <mrwick> is that also a python lib, or your own creation?
[12:19:02] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[12:19:24] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[12:19:49] <headline> Those are my own abstractions, I've lifted the scope on this method because it can stand on its own as if it were the main body of the program
[12:20:26] <headline> My issue is isolated in this block, I may shoot the maintainer an email and ask their opinion on what's going on
[12:20:34] <headline> Probably my best course of action
[12:20:36] *** Joins: stonkey (~stonkey@user/stonkey)
[12:21:38] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[12:22:02] *** Quits: programmar (~whatever@118.69.128.37) (Ping timeout: 240 seconds)
[12:22:34] *** Quits: morteza_24 (~morteza24@93.119.214.182) (Quit: Leaving)
[12:22:34] *** Quits: sudomannn (~sudomann@2601:543:100:4fc8:61d8:16f6:94:fd94) (Ping timeout: 250 seconds)
[12:22:34] *** Quits: szymon (~ugh@37.120.156.250) (Ping timeout: 250 seconds)
[12:23:49] *** Quits: AlanMD (~AlanMD@5-12-8-203.residential.rdsnet.ro) (Remote host closed the connection)
[12:24:05] <mrwick> headline: yes a runtime error on aubio.pitch would probably mean something in the pitch method, maybe check that source out yourself?
[12:24:47] *** Joins: AlanMD (~AlanMD@5-12-8-203.residential.rdsnet.ro)
[12:25:17] <mrwick> headline: or try with command-line tool, maybe the same error comes and it's something to do your vocals.wav file
[12:25:28] <mrwick> headline: is vocals.wav 44,1kHz/16bit?
[12:26:34] <headline> Trying with the command line tool is a great idea, I'll give that a shot. It is 44100/16 yes
[12:27:43] *** Quits: Tat (~Tat@137-025-218-069.res.spectrum.com) (Ping timeout: 256 seconds)
[12:27:47] *** Joins: Geenirvana (root@2a01:7e00::f03c:93ff:fe69:40e7)
[12:28:44] *** Quits: hightower2 (~hightower@212.15.178.51) (Ping timeout: 268 seconds)
[12:28:53] *** Joins: Tat (~Tat@137-025-218-069.res.spectrum.com)
[12:29:16] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[12:29:31] <headline> It looks like the command line tool is functioning correctly
[12:29:49] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[12:31:05] *** Joins: szymon (~ugh@37.120.156.250)
[12:31:05] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[12:31:09] <headline> Oh gosh I think I figured it out
[12:32:09] *** Joins: szymon_ (~ugh@37.120.156.250)
[12:32:26] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (Quit: Connection closed for inactivity)
[12:32:59] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[12:33:04] <headline> I set the hop size from the aubio.source call to 1024 and on the pitch call I changed the buffer input to 2048 with a hop of 1024 and it seems to function correctly. I'm a novice in audio formats, but my ignorant guess is that since it's reading two channels it needs the input buffer size to be twice the source hop size
[12:33:28] <headline> https://bpa.st/CVKA
[12:33:58] <headline> Thankfully I can bite my tongue on sending that email. Yay trial and error!
[12:34:02] *** Joins: ayusta (Thunderbir@gateway/vpn/protonvpn/ayustae)
[12:34:19] *** Joins: chele (~chele@user/chele)
[12:35:15] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 256 seconds)
[12:35:16] *** ayusta is now known as ayustae
[12:35:30] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[12:35:59] *** Joins: shad (~shad@user/shad)
[12:36:43] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:37:56] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[12:39:02] *** Quits: moto (~moto@user/moto) (Ping timeout: 240 seconds)
[12:40:42] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:40:56] *** Quits: codeswhite (~codeswhit@user/codeswhite) (Remote host closed the connection)
[12:42:21] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[12:42:31] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[12:42:47] *** Quits: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:43:59] *** Joins: mar77i (~martti@46-126-48-136.dynamic.hispeed.ch)
[12:44:03] *** Quits: domicron (~domicron@gateway/tor-sasl/domicron) (Remote host closed the connection)
[12:45:01] *** Joins: domicron (~domicron@gateway/tor-sasl/domicron)
[12:45:17] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Ping timeout: 256 seconds)
[12:45:29] *** Joins: codeswhite (~codeswhit@user/codeswhite)
[12:45:31] *** Joins: Pickchea (~private@user/pickchea)
[12:45:38] *** Quits: parv (~quass@user/parv) (Quit: parv)
[12:48:02] *** Quits: baltazar (~baltazar@84-236-20-10.pool.digikabel.hu) (Ping timeout: 240 seconds)
[12:49:34] *** Quits: Geenirvana (root@2a01:7e00::f03c:93ff:fe69:40e7) (Quit: WeeChat 3.3)
[12:49:55] *** Joins: jazzy2 (~jaziz@user/jaziz)
[12:50:13] *** Joins: baltazar (~baltazar@84-236-26-21.pool.digikabel.hu)
[12:50:32] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[12:50:44] *** Joins: pseudonymous (~pseud0@78.143.68.142.static.fibianet.dk)
[12:50:59] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[12:51:47] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[12:52:01] *** Quits: Smedles (~quassel@2403-580d-1--aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Ping timeout: 245 seconds)
[12:52:28] *** Quits: kaiseisei (~Thunderbi@171.116.77.170) (Quit: kaiseisei)
[12:52:32] *** Joins: programmar (~whatever@118.69.128.37)
[12:53:02] *** Quits: vanessa (~annada@103.160.128.7) (Ping timeout: 240 seconds)
[12:54:00] *** Joins: plastico (~plastico@neomutt/plastico)
[12:54:38] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 268 seconds)
[12:54:57] *** Joins: vanessa (~annada@103.160.128.7)
[12:55:09] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[12:55:16] *** Parts: llanhmod (~personnel@user/domhnall/x-2887755) ()
[12:55:16] *** Joins: szymon__ (~ugh@5.253.206.218)
[12:55:29] *** Quits: szymon (~ugh@37.120.156.250) (Ping timeout: 256 seconds)
[12:55:30] *** Joins: kaiseisei (~Thunderbi@171.116.77.170)
[12:55:51] *** Joins: Smedles (~quassel@61-245-148-167.3df594.adl.nbn.aussiebb.net)
[12:55:52] *** Quits: szymon_ (~ugh@37.120.156.250) (Ping timeout: 268 seconds)
[12:56:12] *** Parts: amoe (~amoe@visarend.solasistim.net) ()
[12:56:13] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[12:56:13] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[12:57:57] *** Joins: jazzy (~jaziz@user/jaziz)
[12:58:23] *** Joins: anotheruser (~user@45.130.86.7)
[12:59:50] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:00:08] *** Joins: arseru (uid515527@user/arseru)
[13:00:23] <arseru> Hi! Is it a good idea to use class inheritance in tests/pytest to reuse test methods?
[13:00:29] *** Quits: peterandre (peterandre@2605:6400:c847:1524::4251) (Quit: Oooh mysterious girl!)
[13:00:30] *** Quits: nicoz (unixlab@debian.theserver.tk) (Quit: ZNC - https://znc.in)
[13:01:18] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[13:01:31] *** Joins: jazzy2 (~jaziz@user/jaziz)
[13:01:42] <lericson>     return fr'${"cxy"[offset % 3]}_i^{("\mu", "\lambda")[offset // 3]}$'
[13:01:42] <lericson> SyntaxError: f-string expression part cannot include a backslash
[13:01:43] *** Joins: shad (~shad@user/shad)
[13:01:43] <lericson> why?
[13:01:53] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[13:01:53] *** Quits: someuser (~user@197.54.16.50) (Ping timeout: 256 seconds)
[13:02:18] *** Joins: szymon_ (~ugh@37.120.211.213)
[13:02:32] *** Joins: weedmic (~weedmic@5.102.235.240)
[13:02:39] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 268 seconds)
[13:02:50] *** jazzy2 is now known as jazzy
[13:03:50] *** Joins: ihristov (~ihristov@85.187.46.226)
[13:04:36] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[13:05:02] *** Quits: szymon__ (~ugh@5.253.206.218) (Ping timeout: 250 seconds)
[13:06:35] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[13:06:49] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[13:07:44] <KirkMcDonald> lericson: So as to avoid confusing backslashes in the contained expression with escape sequences in the containing string literal.
[13:08:13] <lericson> aha
[13:08:21] <lericson> yeah i guess that's a bit prickly
[13:08:52] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[13:09:35] *** Joins: Geenirvana (root@2a01:7e00::f03c:93ff:fe69:40e7)
[13:10:02] *** Quits: gitly (~gitly@148.252.129.4) (Ping timeout: 240 seconds)
[13:10:14] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 250 seconds)
[13:10:27] *** Joins: et_ (~et@user/et)
[13:10:30] *** Joins: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b)
[13:11:06] *** Quits: et (~et@user/et) (Ping timeout: 250 seconds)
[13:11:06] *** et_ is now known as et
[13:11:48] *** Joins: Enitin (~Enitin@82.102.22.85)
[13:12:16] *** Joins: gitly (~gitly@148.252.133.169)
[13:12:36] *** Quits: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b) (Client Quit)
[13:13:58] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:15:09] <p-i-> I'm trying to setup a fresh linux-box that has 3 IPv4 addresses. I'm creating a /etc/netplan/10-enp1s0.yaml looking something like this: https://bpa.st/TFBA
[13:15:27] <p-i-> problem is: routes->to and routes->via are hardcoded
[13:15:36] <p-i-> I'm just copy-pasting from a working box
[13:15:54] <p-i-> Does anyone know how to get correct values (thru Python or even bash)?
[13:16:11] <p-i-> I don't know if I can query the linux-box for them, or if it's in the domain of the cloud provider
[13:16:39] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Remote host closed the connection)
[13:16:45] <weedmic> anyone have a good primer on parsing data from a 24 hour recording of htop?  like group all pid 1234 and total it up, then pid 2345, etc.?
[13:17:03] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[13:17:23] *** Joins: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b)
[13:18:14] *** Quits: headline (~headline@ip70-181-236-119.sd.sd.cox.net) (Quit: Client closed)
[13:18:32] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[13:18:51] *** Joins: Enitin (~Enitin@82.102.22.85)
[13:22:19] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:22:31] *** Joins: kydd (~kydd@212.237.178.212)
[13:22:44] *** Quits: modlin (modlin@user/modlin) (Remote host closed the connection)
[13:22:58] *** Joins: moto (~moto@user/moto)
[13:23:00] *** Joins: modlin (modlin@user/modlin)
[13:23:02] *** Quits: ubert1 (~Thunderbi@p200300ecdf09949ebd4b43e35031000e.dip0.t-ipconnect.de) (Remote host closed the connection)
[13:23:26] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[13:23:56] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Remote host closed the connection)
[13:24:06] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[13:24:21] *** Joins: szymon__ (~ugh@37.120.156.163)
[13:25:12] *** Joins: Ivii (~Ivyy@2001:a62:4c3:8e01:6d96:190f:824f:1d2)
[13:26:32] *** Quits: szymon_ (~ugh@37.120.211.213) (Ping timeout: 240 seconds)
[13:27:46] *** Joins: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net)
[13:27:54] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:28:38] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[13:29:02] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[13:29:34] *** Joins: LimeOn (~user@user/limeon)
[13:30:32] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 240 seconds)
[13:30:55] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[13:31:14] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[13:31:47] *** Joins: hightower2 (~hightower@95.168.116.6)
[13:37:11] *** Quits: onichomp (~onichomp@2806:264:4408:1d3:a8d2:17cf:109f:e304) (Ping timeout: 268 seconds)
[13:38:32] *** Quits: foul_owl (~kerry@97-126-11-68.tukw.qwest.net) (Ping timeout: 240 seconds)
[13:40:08] <weedmic> a primer on parsing data from a file - that would be helpful too
[13:40:13] <p-i-> How can I write the contents of a string in Python to a file on a remote linux box?
[13:40:29] <p-i-> I could write it to a local file and do it via bash / ssh
[13:40:45] <weedmic> i generally use ssh
[13:41:21] <p-i-> It's an awkward mix of python-in-bash and basn-in-python
[13:41:32] <weedmic> or do you mean more like open -w ...
[13:42:20] <hightower2> you could use sshfs to "mount" a remote directory via SSH, then you write the same as to a local file. Later you can "unmount" with fusermount -u, and also there are various recipes how to make this connection permanent/auto-retrying if you need it.
[13:42:23] <weedmic> you can connect out of python, then the path is just a path
[13:42:44] <weedmic> even better
[13:42:57] <p-i-> subprocess.run(["scp", FILE, "USER@SERVER:PATH"])
[13:43:10] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 250 seconds)
[13:43:12] <p-i-> What's the reason for not just passing the whole command as a string into subprocess.run?
[13:43:39] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[13:43:49] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[13:43:50] <hightower2> no particular reason, except that you're creating temporary files on local disk (which otherwise aren't needed), and you're starting a new and costly process (SSH session) on every copy
[13:43:57] <weedmic> i should make the connections before/outside of the script - then it's just a path inside the script.  you might be tempted to include passwords and things theother way
[13:44:53] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[13:45:16] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[13:45:28] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Remote host closed the connection)
[13:45:47] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[13:46:34] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[13:48:49] *** Joins: szymon_ (~ugh@185.244.214.217)
[13:49:37] *** Joins: e-pelaza (~e-pelaza@lfbn-tln-1-98-122.w86-241.abo.wanadoo.fr)
[13:50:39] <p-i-> I'm deploying multiple boxes with the same config tho
[13:50:46] <p-i-> trying to automate
[13:50:54] <p-i-> subprocess.run(f'''scp -i _keys/vultr.pem tmp.yaml root@{ip0}:/etc/netplan/10-enp1s0.yaml''')
[13:51:08] <p-i-> I don't like it, but it's a start
[13:51:34] *** Joins: dfkfs (~dfkfs@178.49.152.42)
[13:51:57] *** Joins: foul_owl (~kerry@174-21-143-101.tukw.qwest.net)
[13:51:59] *** Quits: szymon__ (~ugh@37.120.156.163) (Ping timeout: 268 seconds)
[13:52:04] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[13:52:12] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[13:52:19] <p-i-> something like `stdin > /etc/netplan/10-enp1s0.yaml` that lets me send direct from the string would be cleaner but I can't quite see it.
[13:52:32] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[13:52:51] *** Joins: szymon__ (~ugh@37.120.211.206)
[13:53:16] <The-Compiler> p-i-: IIRC you can do  "ssh yourhost cat"  and pipe data to that - might need to fiddle with the redirection a bit
[13:53:42] <The-Compiler> p-i-: but it sounds like something like https://www.fabfile.org/ might be useful
[13:53:43] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[13:53:45] *** Quits: OPK (~OPK@user/opk) (Remote host closed the connection)
[13:54:53] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[13:55:41] *** Quits: szymon_ (~ugh@185.244.214.217) (Ping timeout: 268 seconds)
[13:57:26] <p-i-> This is odd. That subprocess.run (executed from within ipython in the cwd) fails with FileNotFoundError: [Errno 2] No such file or directory: 'scp -i _keys/vultr.pem tmp.yaml root@45.32.121.241:/etc/netplan/10-enp1s0.yaml'
[13:57:57] <p-i-> But if I execute that exact same command from bash, it works!
[13:58:16] *** Parts: kydd (~kydd@212.237.178.212) ()
[13:58:45] <The-Compiler> p-i-: first thing I'd do is passing a list rather than a single string
[13:59:09] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[13:59:17] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[13:59:30] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[14:00:12] *** Quits: jfcaron (~jfcaron@192.252.229.171) (Quit: jfcaron)
[14:00:30] <p-i-> ah yes, if I pass 'my string'.split() it works
[14:00:41] <p-i-> I guess bash saw the whole string as a single token
[14:03:58] *** Quits: programmar (~whatever@118.69.128.37) (Ping timeout: 250 seconds)
[14:04:09] *** Joins: cisco87 (~quassel@user/cisco87)
[14:04:15] *** Parts: cisco87 (~quassel@user/cisco87) (https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:06:32] *** Quits: luva (~luva@146.70.62.246) (Ping timeout: 240 seconds)
[14:07:54] *** Joins: szymon_ (~ugh@185.156.174.147)
[14:07:57] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[14:08:05] *** Quits: szymon_ (~ugh@185.156.174.147) (Remote host closed the connection)
[14:08:36] *** Quits: weedmic (~weedmic@5.102.235.240) (Quit: Konversation terminated!)
[14:08:36] *** Quits: hightower2 (~hightower@95.168.116.6) (Read error: Connection reset by peer)
[14:09:01] *** Quits: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se) (Ping timeout: 240 seconds)
[14:09:32] *** Quits: kaiseisei (~Thunderbi@171.116.77.170) (Ping timeout: 240 seconds)
[14:10:29] *** Quits: szymon__ (~ugh@37.120.211.206) (Ping timeout: 268 seconds)
[14:10:52] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[14:11:14] *** Joins: newdimension (~newdimnes@user/newdimension)
[14:11:23] *** Joins: hightower2 (~hightower@212.15.178.48)
[14:12:04] *** Joins: icy_hot (~icy_hot@99-83-35-64.lightspeed.elpstx.sbcglobal.net)
[14:12:15] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:12:25] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[14:12:27] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Client Quit)
[14:12:54] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[14:13:02] *** Quits: yotsuba (~yotsuba@89-138-112-52.bb.netvision.net.il) (Ping timeout: 240 seconds)
[14:13:07] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[14:14:22] *** Quits: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4) (Ping timeout: 250 seconds)
[14:14:45] *** Joins: luva (~luva@37.120.197.36)
[14:15:05] *** Lord_of_Life_ is now known as Lord_of_Life
[14:17:20] *** Joins: awmv_username_ta (~awmv@2a02:21b0:644f:c181:2977:40a1:b8bc:aa5f)
[14:18:09] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[14:18:09] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[14:18:27] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[14:20:35] *** Quits: dfkfs (~dfkfs@178.49.152.42) (Quit: Client closed)
[14:20:58] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:3ce7:6a79:6d9a:be55) (Ping timeout: 268 seconds)
[14:21:05] *** Joins: esther (~esther@2607:fb90:5fe1:e9d8:faa1:7fd0:19c2:ba06)
[14:21:27] *** Joins: jmd (~user@de.cellform.com)
[14:21:51] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[14:21:52] *** Joins: dalan2 (~dalan@194-193-173-12.tpgi.com.au)
[14:21:52] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Remote host closed the connection)
[14:21:58] *** Joins: e2m4n (~ezman@user/e2m4n)
[14:22:03] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[14:22:18] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[14:22:33] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:c27c:662:4d20:7ece)
[14:22:55] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[14:23:28] *** Quits: dalan (~dalan@203-219-209-191.static.tpgi.com.au) (Ping timeout: 250 seconds)
[14:23:29] *** dalan2 is now known as dalan
[14:24:44] *** Quits: e-pelaza (~e-pelaza@lfbn-tln-1-98-122.w86-241.abo.wanadoo.fr) (Quit: Leaving)
[14:24:53] *** Joins: Masklin_Gurder (~joel@h-155-4-23-96.A230.priv.bahnhof.se)
[14:25:04] *** Joins: fikran (~fikran@user/fikran)
[14:25:17] *** Quits: esther (~esther@2607:fb90:5fe1:e9d8:faa1:7fd0:19c2:ba06) (Ping timeout: 240 seconds)
[14:25:40] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[14:26:08] *** Joins: e-pelaza (~e-pelaza@lfbn-tln-1-98-122.w86-241.abo.wanadoo.fr)
[14:26:45] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[14:27:08] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 268 seconds)
[14:27:38] *** Joins: jmd (~user@de.cellform.com)
[14:30:57] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[14:32:08] *** Joins: tim__ (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[14:32:29] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[14:32:57] *** Quits: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[14:33:34] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[14:33:47] *** Joins: jmd (~user@de.cellform.com)
[14:33:58] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[14:34:18] *** Quits: e-pelaza (~e-pelaza@lfbn-tln-1-98-122.w86-241.abo.wanadoo.fr) (Quit: Leaving)
[14:34:21] *** Quits: johnny_ (sid481967@id-481967.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:34:28] *** Joins: jmd (~user@de.cellform.com)
[14:34:28] *** Joins: e-pelaza (~e-pelaza@lfbn-tln-1-98-122.w86-241.abo.wanadoo.fr)
[14:35:30] *** Quits: e-pelaza (~e-pelaza@lfbn-tln-1-98-122.w86-241.abo.wanadoo.fr) (Client Quit)
[14:39:02] *** Quits: Guest9014 (~vit@chello085216193138.chello.sk) (Ping timeout: 240 seconds)
[14:41:03] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[14:41:47] *** Joins: Guest23 (~Guest23@185.125.227.48)
[14:42:03] *** Joins: jmd (~user@de.cellform.com)
[14:42:06] *** Quits: Guest23 (~Guest23@185.125.227.48) (Client Quit)
[14:42:33] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[14:42:38] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[14:43:29] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[14:45:33] <grawity> subprocess doesn't even invoke bash unless you use shell=True
[14:45:37] <grawity> even with a string arg
[14:46:02] *** Joins: tomasfarias1 (~tomasfari@user/tomasfarias)
[14:48:10] *** Quits: tomasfarias (~tomasfari@user/tomasfarias) (Ping timeout: 250 seconds)
[14:48:29] *** Joins: jmd (~user@de.cellform.com)
[14:48:31] *** Joins: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4)
[14:49:47] *** Joins: tomasfarias (~tomasfari@user/tomasfarias)
[14:51:15] *** Joins: lyodaom (~user@host86-160-97-46.range86-160.btcentralplus.com)
[14:51:15] *** Quits: tomasfarias1 (~tomasfari@user/tomasfarias) (Ping timeout: 256 seconds)
[14:52:37] *** Joins: tobybl_ (~tobybl@248.195.115.87.dyn.plus.net)
[14:52:46] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:54:53] *** Quits: tobybl (~tobybl@248.195.115.87.dyn.plus.net) (Ping timeout: 268 seconds)
[14:55:04] <p-i-> I'm following https://computingforgeeks.com/how-to-install-python-on-ubuntu-linux-system/ to put Python3.10 on the remote
[14:55:08] <p-i-> Everything completed
[14:55:16] <p-i-> sudo apt install python3.10
[14:55:20] <p-i-> That was the last command
[14:55:26] <p-i-> and it looks like it installed fine
[14:55:52] <p-i-> but `python3.10 --version` .. it doesn't find python3.10
[15:00:50] *** Joins: e-pelaza (~e-pelaza@lfbn-tln-1-98-122.w86-241.abo.wanadoo.fr)
[15:01:15] *** Joins: iomari891 (~iomari891@197.210.71.107)
[15:01:51] *** Quits: awmv_username_ta (~awmv@2a02:21b0:644f:c181:2977:40a1:b8bc:aa5f) (Quit: Textual IRC Client: www.textualapp.com)
[15:01:55] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:c27c:662:4d20:7ece) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[15:02:10] *** Joins: pkapp (~pkapp@2601:58c:c500:6900:e30f:100c:4c68:d591)
[15:02:28] *** Quits: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4) (Ping timeout: 250 seconds)
[15:05:37] *** Joins: nomic (~nomic@185.217.117.104)
[15:06:31] <arseru> Hi! Is it a good idea to use class inheritance in tests/pytest to reuse test methods?
[15:06:59] <arseru> p-i-: what about `python3 --version`?
[15:07:09] <arseru> or `python --version`
[15:08:41] *** Joins: tomasfarias1 (~tomasfari@user/tomasfarias)
[15:09:06] *** Quits: oscurochu (~oscurochu@37.120.215.101) (Remote host closed the connection)
[15:09:09] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[15:09:16] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10e7:994e:8d4f:ab0b:d316:b5a) (Read error: Connection reset by peer)
[15:09:34] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10e7:994e:8d4f:ab0b:d316:b5a)
[15:10:31] *** Quits: tomasfarias (~tomasfari@user/tomasfarias) (Ping timeout: 256 seconds)
[15:10:32] *** tomasfarias1 is now known as tomasfarias
[15:10:37] <chilversc> arseru: that's going to be very situational, I have done that in the past if I want to run exactly the same tests but with some sort of different condition, such as configuring the subject in a different way, or different types of subject
[15:10:58] *** Joins: Mikro (leo@libera.ninja)
[15:11:18] <chilversc> Not tried it in pytest though, but have used it in java and .net test frameworks
[15:11:25] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[15:11:46] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[15:12:35] <chilversc> I tend to prefer other methods first, such as parameterised tests
[15:13:02] <arseru> chilversc: cool, I was asking because it doesn't look like setting the `tests/` dir as a package (to be able to import classes from it, so that you can extend them and have different tests in different files) to be able to reuse test methods is a best practice
[15:15:23] *** Joins: Guest60 (~Guest60@2402:3a80:cda:a41e:23ea:319e:c89d:8e7b)
[15:15:39] *** Quits: icy_hot (~icy_hot@99-83-35-64.lightspeed.elpstx.sbcglobal.net) (Quit: WeeChat 3.4)
[15:15:41] <Guest60> Hi
[15:15:52] *** Joins: RBX (~RBX@2a03:90c0:83:2953::1d)
[15:17:10] <Guest60> In python, during variable assignment. In the left hand side variable can be  concated  after assignment? i';m confused. for instance one = 1 \n two+one = 2
[15:17:41] <Guest60> so the variable onetwo  having the value 2
[15:18:09] *** Quits: botfather (~botfather@shell1.dds.nl) (Remote host closed the connection)
[15:18:30] *** Quits: pycode (~pycode3@2001:b07:5d28:551:ca56:8ec5:f65f:440d) (Ping timeout: 250 seconds)
[15:20:37] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Remote host closed the connection)
[15:21:06] *** Joins: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2)
[15:21:28] *** Quits: e-pelaza (~e-pelaza@lfbn-tln-1-98-122.w86-241.abo.wanadoo.fr) (Quit: Leaving)
[15:21:36] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[15:21:53] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[15:22:32] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 240 seconds)
[15:23:03] *** Joins: pepper (~pepper@user/pepper)
[15:23:19] *** Joins: thevar1able (~textual@46.39.45.122)
[15:23:19] *** Joins: tWqaq_ (~tWqaq@101.93.138.74)
[15:23:42] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 250 seconds)
[15:23:55] <chilversc> Guest60: I don't get the question, two+one = 2 is an error; SyntaxError: cannot assign to operator
[15:25:23] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:25:43] <Guest60> but why? How to make it done?
[15:25:45] *** Quits: RBX (~RBX@2a03:90c0:83:2953::1d) (Quit: Client closed)
[15:25:52] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:f2bd:7ae8:e6b7:6a7c) (Ping timeout: 250 seconds)
[15:26:05] *** Quits: Furai (~Furai@furai.pl) (Quit: WeeChat 3.4)
[15:26:45] <han-solo> Guest60: what's your usecase ?
[15:26:56] <chilversc> Guest60: what are you trying to do, as I don't understand the question
[15:27:10] *** Quits: jpic (~jpic@82.142.9.130) (Ping timeout: 250 seconds)
[15:27:23] *** Joins: RBX (~RBX@2a03:90c0:83:2953::1d)
[15:28:29] <chilversc> Guest60: are you trying to do some sort of dynamic assignment (where the name of the variable is stored in another variable), e.g. something like; name="foo"; assign 42 => name; print(foo); and have that print out the number 42?
[15:28:50] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:6140:c4c6:bf9:2254)
[15:28:52] <Guest60> I have variable having value 1 i.e var = 1, now in the second part of execution i would likes to make a variable  that must associated with  var variable  value at end. For instance something like this  vervar = 2 will looks ver1 = 2, where ver1 is variable and 2 is it's value
[15:29:19] *** Joins: Furai (~Furai@furai.pl)
[15:29:27] <chilversc> Guest60: generally, I would say don't do that, such dynamic assignments are really for more advanced metaprogramming
[15:29:47] <chilversc> Guest60: in most cases you want either a list or a dict data type
[15:29:58] <Guest60> OKay but if it possible then kindly do let me know.
[15:30:01] *** Joins: lbalhar (~lbalhar@93.185.13.26)
[15:30:03] <han-solo> you likely just require a list or dict, depending on exactly what you are doing
[15:30:16] *** Joins: weedmic (~weedmic@5.102.235.240)
[15:30:52] <chilversc> Guest60: eg. you could have; ver = {}; val = 1; ver[val] = 42; print(ver[1])
[15:31:20] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[15:31:25] <chilversc> Guest60: the advantage of a list or a dict, is you can loop over the items in them really easily, and pass them around as a single variable
[15:31:27] <bjs> Guest60: dynamic messing with variables like that is not (safely) possible,  this is why Python has dicts.
[15:32:19] <chilversc> Guest60: this might help https://realpython.com/python-dicts/
[15:32:39] <Guest60> OKay so it's possible with dict only.
[15:33:02] *** Quits: Masklin_Gurder (~joel@h-155-4-23-96.A230.priv.bahnhof.se) (Ping timeout: 240 seconds)
[15:33:42] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[15:33:54] *** Joins: jpic (~jpic@82.142.9.130)
[15:34:06] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 250 seconds)
[15:34:21] *** Joins: Masklin_Gurder (~joel@h-155-4-23-152.a230.priv.bahnhof.se)
[15:34:29] <bjs> Guest60: in general there is no way to 'reference a variable' in Python.  variables are references to objects,  but aren't objects themselves.  So you cannot e.g. have a variable that refers to another variable.  But you *can* have a dict, and a variable that refers to one of the keys in the dict
[15:35:19] <Guest60> okay thank you all bjs
[15:35:23] *** Quits: Guest60 (~Guest60@2402:3a80:cda:a41e:23ea:319e:c89d:8e7b) (Quit: Client closed)
[15:35:56] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:03] *** Quits: randall (~randall@user/randall) (Quit: leaving)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:32] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[15:36:37] *** Joins: KvL (~KvL@user/KvL)
[15:36:53] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Remote host closed the connection)
[15:37:11] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[15:37:25] *** Quits: deniska (~deniska@user/deniska) (Ping timeout: 240 seconds)
[15:38:03] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Client Quit)
[15:38:14] *** Quits: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:38:17] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[15:38:52] *** Quits: clydez (~clydez@178-116-34-81.access.telenet.be) (Ping timeout: 250 seconds)
[15:38:57] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[15:39:03] *** Quits: bluedust (~bluedust@103.160.233.171) (Remote host closed the connection)
[15:41:49] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[15:42:01] *** Quits: percyc (~percyc@183.236.188.154) (Remote host closed the connection)
[15:42:08] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[15:42:20] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[15:42:23] *** Quits: RBX (~RBX@2a03:90c0:83:2953::1d) (Quit: Client closed)
[15:42:30] *** Joins: percyc (~percyc@183.236.188.154)
[15:43:07] *** Joins: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b)
[15:43:34] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Read error: Connection reset by peer)
[15:43:52] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:45:48] *** Quits: BlessJah (~BlessJah@user/blessjah) (Ping timeout: 250 seconds)
[15:46:21] *** Joins: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net)
[15:47:11] *** Quits: shad (~shad@user/shad) (Ping timeout: 256 seconds)
[15:47:49] *** Joins: BlessJah (~BlessJah@user/blessjah)
[15:47:55] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10e7:994e:8d4f:ab0b:d316:b5a) (Ping timeout: 268 seconds)
[15:48:02] *** Quits: anotheruser (~user@45.130.86.7) (Ping timeout: 240 seconds)
[15:48:19] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10e7:994e:8d4f:ab0b:d316:b5a)
[15:49:32] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[15:50:35] *** Quits: pankid (~quassel@pankid.club) (Quit: No Ping reply in 180 seconds.)
[15:51:45] *** Joins: pankid (~quassel@pankid.club)
[15:53:14] *** Joins: botfather (~botfather@shell2.dds.nl)
[15:53:42] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[15:53:55] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[15:53:59] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Ping timeout: 256 seconds)
[15:54:02] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 240 seconds)
[15:55:12] *** Quits: nomic (~nomic@185.217.117.104) (Quit: Leaving)
[15:55:37] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[15:55:41] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Client Quit)
[15:57:30] *** Quits: Terexen (~terexen@user/terexen) (Remote host closed the connection)
[15:57:33] *** Quits: xx (~xx@user/xx) (Ping timeout: 256 seconds)
[15:57:59] *** Joins: cosimone (~user@93-47-230-83.ip115.fastwebnet.it)
[15:58:31] *** Joins: thevar1able (~textual@46.39.45.122)
[15:59:04] *** Joins: maxzor (~maxzor@2a01cb04054faa00f07423e7aeecd60a.ipv6.abo.wanadoo.fr)
[15:59:39] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[15:59:56] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[16:00:27] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[16:01:13] *** Joins: pycode (~pycode3@2001:b07:5d28:551:f9de:b09d:192a:fe6c)
[16:01:21] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[16:01:39] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[16:02:10] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Remote host closed the connection)
[16:02:25] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[16:03:20] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:03:53] *** Joins: bluedust (~bluedust@103.160.233.171)
[16:04:03] *** Joins: cheater (~Username@user/cheater)
[16:04:03] *** Quits: bluedust (~bluedust@103.160.233.171) (Read error: Connection reset by peer)
[16:04:51] *** Joins: bluedust (~bluedust@185.248.85.10)
[16:05:02] *** Quits: fivegruel (~fivegruel@HSI-KBW-095-208-248-017.hsi5.kabel-badenwuerttemberg.de) (Ping timeout: 240 seconds)
[16:05:36] *** Joins: bluedust_ (~bluedust@117.204.148.73)
[16:05:49] *** Joins: timdiels (~user@78-22-205-207.access.telenet.be)
[16:06:11] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[16:06:37] <p-i-> Can anyone think why `subprocess.run(f'ssh -i _keys/vultr.pem root@{ip0}'.split() + ['netplan apply'])` is timing out now I have it running inside a worker thread?
[16:06:42] *** Joins: bluedus__ (~bluedust@89.46.62.217)
[16:07:45] <p-i-> wait, it's an earlier command that's hanging: `scp -o StrictHostKeyChecking=no -i _keys/vultr.pem tmp-{i}.yaml root@{ip0}:/etc/netplan/10-enp1s0.yaml`
[16:08:01] <p-i-> also being put through subprocess.run
[16:08:22] *** Joins: clydez (~clydez@178-116-34-81.access.telenet.be)
[16:09:11] <timdiels> Hi. What are the pro/con of providing convenience imports in a pkg? I.e. being able to `from pkg import X, Y` instead of `from pkg.x import X; from pkg.y import Y`. In my case I have app models in orcae.app.models which is split into submodules because there are lots of models and in a higher layer I would be able to `import orcae.app.models as app; app.SomeModel` to disambiguate between SomeModel of the
[16:09:16] <timdiels> higher layer. This also allows me to reorganise my submodules without breaking app client code. But currently I've been importing them directly from the submodule so far because I don't like importing more than what I need, but now that I have a better architecture it might be ok to do so.
[16:09:17] *** Quits: bluedust (~bluedust@185.248.85.10) (Ping timeout: 256 seconds)
[16:09:37] <timdiels> Alternatively I would prefix them with App, e.g. AppSomeModel
[16:09:45] <Helle> timdiels: the indirection is a big reason to do it
[16:09:46] <grawity> sometimes I see `pkg` itself import things from its sub-modules, so that they become re-importable
[16:10:02] *** Quits: bluedust_ (~bluedust@117.204.148.73) (Ping timeout: 240 seconds)
[16:10:05] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:c99f:61f1:4f83:5b59)
[16:11:32] *** Quits: pipapipapibo (~w@2601:601:cf7e:1d80::a5ad) (Ping timeout: 240 seconds)
[16:12:17] <dav1d> p-i-, stdout in a pipe and never read?
[16:15:51] *** flooded is now known as _flood
[16:17:09] *** Joins: constxd_ (~brad@142.167.170.88)
[16:17:57] <AhmedAmerican> i do have a dataframe which i would like to send it via email and to be displayed friendly to the end user. any suggestion would be appreciated !
[16:18:19] *** Joins: fef (~thedawn@user/thedawn)
[16:18:37] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[16:19:23] *** Joins: dez (uid92154@user/dez)
[16:19:32] *** Quits: dalan (~dalan@194-193-173-12.tpgi.com.au) (Ping timeout: 240 seconds)
[16:20:13] *** Quits: jackblasted (~quassel@45.131.194.40) (Ping timeout: 256 seconds)
[16:20:41] *** Joins: jackblasted (~quassel@45.131.194.235)
[16:21:20] *** Quits: pycode (~pycode3@2001:b07:5d28:551:f9de:b09d:192a:fe6c) (Ping timeout: 250 seconds)
[16:21:31] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[16:22:17] *** Joins: omegatron (~some@p5484973e.dip0.t-ipconnect.de)
[16:23:56] *** Quits: KvL (~KvL@user/KvL) (Quit: KvL)
[16:25:39] *** Joins: vlm (~vlm@user/vlm)
[16:26:33] *** Joins: Jong (~Jong@174.27.15.0)
[16:27:12] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:27:23] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 268 seconds)
[16:27:36] <p-i-> hm it's just crazy-slow
[16:27:49] <p-i-> sometimes it times out, sometimes it goes through
[16:27:55] <p-i-> wierd as it's a <1Kb file
[16:28:10] *** Quits: clydez (~clydez@178-116-34-81.access.telenet.be) (Read error: Connection reset by peer)
[16:28:32] *** Joins: clydez (~clydez@178-116-34-81.access.telenet.be)
[16:28:43] *** Quits: {HD} (~{HD}@86.106.121.213) (Ping timeout: 256 seconds)
[16:29:09] *** Joins: platta (~platta@pool-173-61-104-121.cmdnnj.fios.verizon.net)
[16:30:16] *** Quits: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2) (Remote host closed the connection)
[16:30:32] *** Joins: {HD} (~{HD}@86.106.121.213)
[16:31:13] *** Quits: Jong (~Jong@174.27.15.0) (Quit: Textual IRC Client: www.textualapp.com)
[16:32:16] <timdiels> grawity: that's what I meant by convenience imports, yes
[16:32:53] <timdiels> Helle: indirection it is then, thanks
[16:32:56] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[16:33:30] <Helle> timdiels: argument btw is: most of the packages you see floating around that do it and state they have a reason to do it, do it because of that
[16:33:37] <Helle> so it seems like a sensible practice to follow
[16:34:12] <Helle> I know that is hardly solid reasoning, but best practices
[16:34:25] *** Joins: fikran (~fikran@user/fikran)
[16:35:38] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[16:36:32] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[16:36:38] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:6140:c4c6:bf9:2254) (Ping timeout: 268 seconds)
[16:36:53] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[16:37:47] *** Quits: clydez (~clydez@178-116-34-81.access.telenet.be) (Ping timeout: 256 seconds)
[16:38:13] *** Joins: jmiehe1 (~Thunderbi@user/jmiehe)
[16:38:22] *** Joins: Pickchea (~private@user/pickchea)
[16:38:47] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[16:40:12] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:40:32] *** Joins: bluedust (~bluedust@117.204.148.73)
[16:41:02] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Ping timeout: 240 seconds)
[16:41:02] *** jmiehe1 is now known as jmiehe
[16:41:47] *** Joins: platta0 (~platta@pool-173-61-104-121.cmdnnj.fios.verizon.net)
[16:42:24] <timdiels> Helle: In the past I've had problems with it where a module I did not need got imported and needed some configuration; and so I had to provide said configuration even though I wasn't going to use it. But, with hexagonal architecture / ports and adapters, I think I can avoid that. At least for app.models it won't be a problem.
[16:42:53] <timdiels> I was thinking pylint should be able to find most broken imports for me, but it's still extra work and a potential for bugs if pylint misses anything
[16:43:18] *** Quits: platta0 (~platta@pool-173-61-104-121.cmdnnj.fios.verizon.net) (Read error: Connection reset by peer)
[16:43:18] <timdiels> So I'm leaning more towards indirection again.
[16:43:42] *** Joins: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2)
[16:44:02] *** Quits: platta (~platta@pool-173-61-104-121.cmdnnj.fios.verizon.net) (Ping timeout: 268 seconds)
[16:44:25] *** Quits: bluedus__ (~bluedust@89.46.62.217) (Ping timeout: 256 seconds)
[16:44:26] *** Joins: platta0 (~platta@pool-173-61-104-121.cmdnnj.fios.verizon.net)
[16:44:42] *** platta0 is now known as platta
[16:44:43] *** Quits: NoelFlantier3 (~Hubert@static.189.244.201.195.clients.your-server.de) (Read error: Connection reset by peer)
[16:45:05] <wyre> do you recommend me dh-virtualenv or dh-python instead?
[16:45:08] *** Joins: NoelFlantier3 (~Hubert@static.189.244.201.195.clients.your-server.de)
[16:45:14] <wyre> (for building python packages as .deb)
[16:45:55] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:46:40] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Remote host closed the connection)
[16:46:40] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Remote host closed the connection)
[16:46:40] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Read error: Connection reset by peer)
[16:48:21] *** Quits: GrayArea (~cpd@cpc115156-dals23-2-0-cust689.20-2.cable.virginm.net) (Ping timeout: 268 seconds)
[16:48:24] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[16:49:04] *** Joins: djhankb (~djhankb@208.113.164.68)
[16:49:18] *** Joins: pileatedx (~textual@cpe-67-241-68-204.twcny.res.rr.com)
[16:49:32] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Read error: Connection reset by peer)
[16:49:39] *** Joins: shad (~shad@user/shad)
[16:51:33] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[16:51:45] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[16:52:06] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[16:52:08] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[16:52:36] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[16:53:06] <wyre> also ... should I use setup.py or setup.cfg?
[16:55:12] *** Joins: fivegruel (~fivegruel@HSI-KBW-095-208-248-017.hsi5.kabel-badenwuerttemberg.de)
[16:55:58] <timdiels> Helle: come to think of it, libraries definitely want to do that because they have no control over their client code, so they can't simply go over the code with pylint as the client code is external
[16:56:50] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[16:57:44] *** Quits: M-blaise (~M-blaise@105.112.138.38) (Ping timeout: 250 seconds)
[16:58:25] <Helle> yep yep
[16:59:13] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[17:00:31] *** Parts: arseru (uid515527@user/arseru) ()
[17:00:51] *** Joins: M-blaise (~M-blaise@105.112.138.38)
[17:01:35] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[17:03:56] *** Joins: fef (~thedawn@user/thedawn)
[17:04:32] *** Quits: constxd_ (~brad@142.167.170.88) (Ping timeout: 240 seconds)
[17:05:14] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[17:05:18] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[17:05:20] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[17:05:54] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[17:06:14] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 268 seconds)
[17:08:31] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[17:08:36] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[17:11:29] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[17:12:24] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:d301:91ee:e846:6da9) (Ping timeout: 268 seconds)
[17:12:53] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[17:13:10] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:d301:91ee:e846:6da9)
[17:14:41] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[17:14:55] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:d301:91ee:e846:6da9) (Client Quit)
[17:15:08] *** Quits: withered_dragon (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: Lost terminal)
[17:16:31] *** Joins: withered_dragon (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[17:16:51] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[17:17:02] *** Joins: clydez (~clydez@178-116-34-81.access.telenet.be)
[17:17:02] *** Quits: jarthur_ (~jarthur@2603-8080-1540-002d-c475-c516-38bc-5933.res6.spectrum.com) (Ping timeout: 240 seconds)
[17:17:04] *** Joins: ice9 (~ice9@user/ice9)
[17:18:18] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:b1f4:b48d:15f:e280)
[17:19:20] *** Joins: ajnulo (~ajnulo@2a02:3102:4cc5:fffd:bd3:1db6:a16d:5acd)
[17:20:02] *** Joins: aselman4 (~aselman4@ashpr013-p2.nls.ford.com)
[17:21:18] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-495e-8be4-79fe-5895.res6.spectrum.com)
[17:24:02] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[17:24:33] <aselman4> Hello, https://github.com/django/django/blob/2.2.19/django/db/models/sql/compiler.py#L407 i get a TypeError on this line saying params is missing. select_format takes 3 parameters: the compiler, sql and params. in the line where it is called, self is the compiler, sql is sql and params is params but it raises an exception. if i call the method with
[17:24:33] <aselman4> 4 parameters, it doesnt complain almost as if its ignoring self as a parameter.
[17:24:43] *** Joins: pycode (~pycode3@2001:b07:5d28:551:5c6f:a9b2:b431:9a7b)
[17:25:21] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 268 seconds)
[17:25:21] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 268 seconds)
[17:25:32] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[17:25:36] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[17:25:54] *** Joins: McDonaldsWiFi (~PublicWiF@user/publicwifi)
[17:26:00] <grawity> where is select_format implemented?
[17:26:20] *** Quits: cosimone (~user@93-47-230-83.ip115.fastwebnet.it) (Remote host closed the connection)
[17:26:24] <mar77i> aselman4: investigate output_field, it should be an instance and likely you forgot to add parens and added it as a class
[17:26:25] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[17:26:32] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 240 seconds)
[17:26:44] <mar77i> as a property of type type, to be specific.
[17:27:11] <mar77i> no. attribute of type type. better now.
[17:27:29] <leitz> I'm confused. If I define a method in a single file, can it be called earlier in the file than the definition?
[17:28:04] <leitz> And, in the method parameters, can a variable be referenced that isn't created until after the method definition?
[17:28:27] <leitz> I guess the question is, does Python read the entire file, or process things one line at a time?
[17:28:27] <mar77i> leitz: not in global context. but inside a function, you can use all names that have been assigned up to the point where the function was called later in the file.
[17:29:07] <grawity> no, whether it reads the entire file doesn't have much to do with whether it hoists the function definitions like JS does
[17:30:01] <grawity> the entire file is syntax-checked, parsed, compiled etc – but execution still flows from top to bottom
[17:30:07] <mar77i> class A / class B / class C / def main() / main() / def rest() # in main, you can use A, B and C, but not rest. imagine there are bodies to each of these, except the main() call
[17:30:19] *** Quits: vfeenstr (vfeenstr@redhat/evilissimo) (Ping timeout: 256 seconds)
[17:30:44] *** Joins: VaniaPy (~VaniaPy@46.12.137.214.dsl.dyn.forthnet.gr)
[17:31:02] <aselman4> grawity: https://github.com/django/django/blob/2.2.19/django/db/models/fields/__init__.py#L390
[17:31:12] <wyre> I'm confused about what's the proper way to set up my project, I'm not sure if I should use setup.py, setup.cfg or pyproject.toml
[17:31:21] <leitz> Ah, gotcha. Normally I define the methods early on, but one of the default parameters is from argparse, and thus not defined early on.
[17:32:03] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[17:32:05] <mar77i> aselman4: I told you earlier. it looks like your model contains a line like `x = IntegerField`, when in fact it should be `x = IntegerField()`
[17:33:13] *** Joins: hlauk (~hlauk@176.33.97.244)
[17:33:18] <grawity> (basically python's 'def foo()' behaves exactly like an assignment such as 'foo = lambda:' ... unlike e.g. in JS where it pretends that functions are at the top)
[17:33:56] <aselman4> mar77i: sorry, missed it. that was the problem. Thanks
[17:34:28] <wyre> I mean, apparently the traditional (old) way was with setup.py but ... the newest way is by using pyproject.toml and setup.cfg, right?
[17:34:49] *** Quits: aselman4 (~aselman4@ashpr013-p2.nls.ford.com) (Quit: Client closed)
[17:34:56] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[17:35:36] *** Joins: dfkfs (~dfkfs@178.49.152.42)
[17:36:19] <grawity> leitz: regarding the second question, I guess you have something like this? https://paste.rs/UMy – I'm not entirely clear on the rules in this case, sometimes it works, but if it doesn't, there are easy workarounds ('global args' or pre-declaring args)... probably not good practice to use globals, in general
[17:37:31] *** Joins: qeqeqw (~qeqeqw3@2001:861:3a04:e320:31ea:a59b:1c06:51f4)
[17:37:37] <moto> win go 1
[17:38:16] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[17:38:54] *** Quits: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:38:55] *** Quits: clydez (~clydez@178-116-34-81.access.telenet.be) (Ping timeout: 268 seconds)
[17:39:57] *** Quits: jochum (~quassel@user/jochum) (Ping timeout: 256 seconds)
[17:40:19] *** Joins: bloody (~bloody@user/bloody)
[17:40:35] *** Joins: jochum (~quassel@user/jochum)
[17:41:00] *** Quits: McDonaldsWiFi (~PublicWiF@user/publicwifi) (Quit: WeeChat 3.3)
[17:41:26] *** Joins: sudomann (~sudomann@2601:543:100:4fc8:896f:9146:a340:c12d)
[17:41:47] *** Joins: clydez (~clydez@178-116-34-81.access.telenet.be)
[17:46:18] <petaflot> hello! I'm planing to use pylatex to make invoices... the part I'm most worried about is a footer that should appear only once per multi-page document ; an example can be seen on page 42 of the specs: https://www.paymentstandards.ch/dam/downloads/ig-qr-bill-fr.pdf if anyone has some advice I'll be glad
[17:46:39] <xheimlich> sometimes -- not always -- I like to deep dive on a project for two weeks, discovering its shape without a plan, and only then update git, writing function-by-function and sometimes line-by-line commits that explain why changes.
[17:47:21] <xheimlich> continuous integration sounds like good engineering when something is basically ready and you're just... integrating.
[17:47:27] <xheimlich> anyway. carry on.
[17:47:32] *** Quits: lbalhar (~lbalhar@93.185.13.26) (Ping timeout: 240 seconds)
[17:47:32] <Helle> petaflot: I would not know with pylatex, I did write LaTeX macros for that once, idk if that may be an option with the module
[17:47:39] <Helle> petaflot: it is not that hard to implement
[17:47:50] *** Quits: hightower2 (~hightower@212.15.178.48) (Read error: Connection reset by peer)
[17:48:04] *** Joins: deniska (~deniska@user/deniska)
[17:48:44] *** Joins: hightower2 (~hightower@95.168.121.6)
[17:49:00] *** Joins: esther (~esther@2607:fb90:5fea:c126:90b0:685e:1e60:feec)
[17:49:39] *** Joins: McDonaldsWiFi (~PublicWiF@user/publicwifi)
[17:49:51] *** Joins: hightower3 (~hightower@95.168.118.8)
[17:50:18] *** Quits: hightower2 (~hightower@95.168.121.6) (Read error: Connection reset by peer)
[17:50:36] *** Quits: McDonaldsWiFi (~PublicWiF@user/publicwifi) (Client Quit)
[17:51:07] *** Quits: dfkfs (~dfkfs@178.49.152.42) (Quit: Client closed)
[17:51:19] *** Quits: portalrat_ (~portalrat@user/portalrat) (Remote host closed the connection)
[17:51:22] *** Joins: dfkfs (~dfkfs@178.49.152.42)
[17:51:26] <leitz> xheimlich, sometimes I really need to be deep into the problem set to even begin to consider integration. I've found CI/CD to have issues, but it's a nice thought.
[17:51:39] *** Joins: portalrat_ (~portalrat@user/portalrat)
[17:52:16] *** Joins: McDonaldsWiFi (~PublicWiF@user/publicwifi)
[17:52:18] *** Quits: fling (~fling@user/fling) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[17:52:23] <leitz> grawity, mostly. It was   def foo(thing = defaults['thing']):   but defaults hadn't had 'thing' integrated yet.
[17:52:52] <grawity> ah
[17:52:57] *** Quits: esther (~esther@2607:fb90:5fea:c126:90b0:685e:1e60:feec) (Ping timeout: 240 seconds)
[17:53:08] *** Joins: fling (~fling@user/fling)
[17:53:31] <grawity> function default values are *not* lazy-evaluated, they're evaluated at time of definition, and IIRC there's even a whole discussion happening about whether that should be changed
[17:53:39] <xheimlich> yeah. basically my job (I'm a "technical cofounder"; also have another job but nevermind) is (A) to deep dive and try and produce competitive advantages and (B) shoehorn whatever I done into an HTTP endpoint the front-end guys can consume.
[17:53:41] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[17:53:51] <petaflot> Helle: I'll see what macros can do for me... but one thing latex has definitely been a pain with for ages is including characters beyond [A-Z][a-z][0-9] and a few other punctuation marks. even ° is a problem! I whish there was an alternative to latex..
[17:54:36] <xheimlich> But the development repos and the endpoint repos are completely separate. The underlying product gets to the endpoint repos by virgin birth, sometimes even dependent on binary pickles, etc.
[17:54:44] <Helle> petaflot: I have not run into that, but yeah, I would suggest solving it (essentially) entirely on the LaTeX side
[17:55:05] <xheimlich> I'm sure I'm not the only Python guy in a node/react shop anyway.
[17:55:21] <xheimlich> I mean, it must be a common situation in ML-ish startups.
[17:56:15] *** Joins: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b)
[17:56:33] <SnoopJ> leitz, it might be helpful to point out that `def func(): ...` is itself executable code that binds the name `func`, the distinction is much weaker than languages that have declarations as a concept.
[17:56:38] *** Joins: Guest5216 (~Guest52@2a01:598:990d:be71:908d:a87a:77f1:5e96)
[17:56:50] <Guest5216> hi
[17:57:27] *** Quits: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b) (Client Quit)
[17:57:41] <Guest5216> can anyone help me? i had a question! i get a IndexError: list index out of range ...
[17:58:01] <Guest5216> seq = [[1,1,2]]
[17:58:02] <Guest5216> print(seq[0]) # hier gehts
[17:58:02] <Guest5216> for i in range(len(seq.pop())):
[17:58:03] <Guest5216>     n = len(seq)
[17:58:03] <Guest5216>     print(seq[0]) # hier bekomme ich list index out of range
[17:58:26] *** Joins: mh3f_ (~mdhowle@spcvpn.sonoco.com)
[17:58:50] *** Quits: Guest5216 (~Guest52@2a01:598:990d:be71:908d:a87a:77f1:5e96) (Client Quit)
[17:59:59] *** Joins: jonthesnow (~xizhendu@171.221.228.84)
[18:00:29] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[18:00:53] *** Joins: mug3n_ (~mugen@gateway/tor-sasl/mugen)
[18:00:57] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[18:01:05] *** Quits: mh3f__ (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Ping timeout: 256 seconds)
[18:01:07] <SnoopJ> it's because of the pop(), if anybody else was wondering
[18:01:18] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[18:01:27] *** Joins: puzzled (~puzzled@83-85-202-120.cable.dynamic.v4.ziggo.nl)
[18:01:44] *** Quits: clydez (~clydez@178-116-34-81.access.telenet.be) (Ping timeout: 268 seconds)
[18:02:14] <leitz> Guest5216, what Snoopj said. You have double [[]], so len(seq) is one item of a three element list. When you pop that only item, seq is empty.
[18:02:30] <SnoopJ> they left :/
[18:03:16] <leitz> Well, drat. One of the few questions I could actually answer...
[18:03:20] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[18:03:54] *** Quits: mug3n (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[18:04:16] <jinsun__> lol, did even wait one minute
[18:04:30] <jinsun__> didn't
[18:04:55] *** Joins: clydez (~clydez@178-116-34-81.access.telenet.be)
[18:05:07] *** Joins: programmar (~whatever@118.69.128.37)
[18:05:10] *** Joins: constxd_ (~brad@142.167.170.88)
[18:06:32] *** Parts: programmar (~whatever@118.69.128.37) ()
[18:06:39] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:388c:b3d0:9d83:a60)
[18:06:48] *** Joins: water_27300935_ (~xe@182.90.129.70)
[18:07:43] *** Quits: hlauk (~hlauk@176.33.97.244) (Ping timeout: 256 seconds)
[18:07:56] <Wooble> maybe their client helpfully quit to save them being kicked for pasting in channel.
[18:08:03] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:08:52] *** Joins: Jong (~Jong@2620:10d:c090:400::5:5dc3)
[18:09:43] *** Joins: Klinda (~superleag@user/klinda)
[18:09:44] *** Joins: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net)
[18:10:01] *** Quits: emerent (~quassel@p5b265a25.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:10:24] *** Joins: anotheruser (~user@197.54.16.50)
[18:10:25] *** Joins: someuser (~user@197.54.16.50)
[18:10:53] *** Quits: Vision (~Vision@097-087-115-181.res.spectrum.com) (Read error: Connection reset by peer)
[18:11:17] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[18:11:17] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[18:11:36] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 268 seconds)
[18:11:56] *** Joins: Kruppt (~Kruppt@50.111.28.175)
[18:12:24] *** Quits: ovnicraft (~ovnicraft@186.70.222.62) (Read error: Connection reset by peer)
[18:12:24] *** Joins: cs (~ovnicraft@186.70.222.62)
[18:12:35] *** Joins: eson123 (~whatever@user/eson123)
[18:13:06] *** Joins: randall (~randall@user/randall)
[18:14:09] *** Joins: Vision (~Vision@097-087-115-181.res.spectrum.com)
[18:14:28] *** Joins: bluedust_ (~bluedust@68.235.43.109)
[18:14:31] *** Joins: Harlin (~DonQixote@75-163-149-234.clsp.qwest.net)
[18:15:25] *** Joins: frmlof (~frmlof@70.243.238.191)
[18:15:59] *** Joins: mspe (~user@tilde.team/user/mspe)
[18:17:00] *** Quits: VaniaPy (~VaniaPy@46.12.137.214.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[18:17:21] *** Quits: M-blaise (~M-blaise@105.112.138.38) (Ping timeout: 256 seconds)
[18:17:21] *** Joins: emerent (~quassel@p200300cd570443e6ba27ebfffed28a59.dip0.t-ipconnect.de)
[18:17:54] *** Quits: bluedust (~bluedust@117.204.148.73) (Ping timeout: 250 seconds)
[18:18:16] *** Quits: McDonaldsWiFi (~PublicWiF@user/publicwifi) (Quit: WeeChat 3.3)
[18:18:23] *** Quits: ajnulo (~ajnulo@2a02:3102:4cc5:fffd:bd3:1db6:a16d:5acd) (Ping timeout: 268 seconds)
[18:18:31] *** Joins: pipapipapibo (~w@50.239.254.186)
[18:19:31] <Togra> I imagine you could still do that, but with a while loop instead, and just keep the loop going until seq is empty?
[18:19:47] *** Joins: M-blaise (~M-blaise@105.112.138.38)
[18:19:54] <Togra> looking at it now, I'd probly do it differently
[18:20:00] *** Joins: peterand- (peterandre@2605:6400:c847:1524::4251)
[18:20:09] <Togra> also it's a list inside of the list too so a little more syntax needed
[18:20:43] <SnoopJ> mutating while iterating is generally not a great idea, but that would be a better way to go about it, yea
[18:20:46] <Wooble> it's unclear what they were trying to do and why, and they're not here to question it.
[18:22:23] *** Quits: pkapp (~pkapp@2601:58c:c500:6900:e30f:100c:4c68:d591) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[18:22:38] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[18:23:22] *** Joins: McDonaldsWiFi (~PublicWiF@user/publicwifi)
[18:24:48] *** Quits: rickybob2 (~rickybob@gateway/vpn/pia/rickybob) (Quit: rickybob2)
[18:26:12] *** Joins: Bakunin (~Bakunin@user/lindis)
[18:27:01] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[18:27:17] *** Joins: bluedust (~bluedust@117.204.148.73)
[18:27:20] *** peterand- is now known as peterandre
[18:27:26] *** Quits: constxd_ (~brad@142.167.170.88) (Ping timeout: 250 seconds)
[18:27:42] <eson123> about behind-the-scene of python, between comparing two integers together and two strings together, i suppose the string takes a bit slightly longer ? since i assume it has to enumerate through each character then compare it ?
[18:29:27] *** Joins: mh3f__ (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[18:29:37] *** Quits: pileatedx (~textual@cpe-67-241-68-204.twcny.res.rr.com) (Quit: pileatedx)
[18:30:26] *** Quits: codeswhite (~codeswhit@user/codeswhite) (Quit: Quit)
[18:31:00] <Wooble> might depend how large the integer is. :)
[18:31:07] *** Quits: bluedust_ (~bluedust@68.235.43.109) (Ping timeout: 256 seconds)
[18:31:32] *** Quits: mh3f_ (~mdhowle@spcvpn.sonoco.com) (Ping timeout: 240 seconds)
[18:31:56] <Wooble> (also whether the string or integer is interned)
[18:32:32] <eson123> hm, say the integer is within its maximum peak of 64bit only
[18:32:41] <eson123> i never dealt with numbers crossing that line
[18:32:50] <grym> eson123: python's integers are arbitrarily large
[18:32:51] <Wooble> but sure, in general maybe expect comparing a sequence to take longer than comparing anything else.
[18:33:04] <grym> (or arbitrarily small)
[18:34:02] <eson123> Wooble: also what do you mean by "interned" ?
[18:34:48] <Wooble> eson123: as an implementation detail, some objects are reused, so all instances of, say, the number 5 or the string "foo" will just use the same object
[18:35:43] <water_27300935_> Hi, a question about numpy.
[18:35:48] <water_27300935_> https://pastebin.com/Ag8hypE2
[18:36:11] *** Quits: ezakimak (~ezakimak@c-174-52-132-123.hsd1.ut.comcast.net) (Quit: ezakimak)
[18:36:15] <Wooble> eson123: (and I *believe* int and string equality both have a fast path for when the objects are identical)
[18:36:37] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:388c:b3d0:9d83:a60) (Quit: Konversation terminated!)
[18:37:10] *** Joins: ezakimak (~ezakimak@c-174-52-132-123.hsd1.ut.comcast.net)
[18:38:02] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 240 seconds)
[18:39:33] <eson123> Wooble: hm, i still can't get the 5 and "foo" example, like how are they having different value if they could potentially be the same object or is
[18:39:52] <grym> eson123: they don't have a different value; 5 is certainly 5
[18:39:53] *** Joins: maplefinger (~Bakunin@user/lindis)
[18:39:58] <grym> it's also (usually) the same object
[18:40:10] *** Quits: Bakunin (~Bakunin@user/lindis) (Killed (NickServ (GHOST command used by maplefinger)))
[18:40:14] *** maplefinger is now known as Bakunin
[18:40:15] <grym> you shouldn't rely on that second fact being true though
[18:41:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[18:41:32] *** Quits: ihristov (~ihristov@85.187.46.226) (Ping timeout: 240 seconds)
[18:42:19] *** Joins: unixlab (unixlab@debian.theserver.tk)
[18:42:34] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[18:42:43] <gitesh> http://inventwithpython.com/bigbookpython/project1.html
[18:42:55] *** Joins: zmt01 (~zmt00@user/zmt00)
[18:43:00] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[18:43:06] <gitesh> I'm not getting the following
[18:43:07] <gitesh> while len(guess) != NUM_DIGITS or not guess.isdecimal():
[18:43:24] *** Quits: pseudonymous (~pseud0@78.143.68.142.static.fibianet.dk) (Quit: Leaving)
[18:43:27] *** Quits: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca) (Remote host closed the connection)
[18:43:46] *** Joins: fikran (~fikran@user/fikran)
[18:43:48] *** Joins: znf_ (ibm86@blender.linge-ma.ro)
[18:44:03] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[18:44:29] *** Joins: Viewday11 (~Viewday@user/viewday)
[18:44:41] <gitesh> I think guess should be NUM_DIGITS
[18:46:35] *** Quits: dsrt^ (~dsrt@wsip-98-188-242-61.mc.at.cox.net) (Remote host closed the connection)
[18:47:42] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:c9e8:b7fb:cb1d:72ee)
[18:47:42] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:c9e8:b7fb:cb1d:72ee) (Changing host)
[18:47:42] *** Joins: skapata (~Skapata@user/skapata)
[18:48:02] *** Quits: M-blaise (~M-blaise@105.112.138.38) (Ping timeout: 240 seconds)
[18:48:41] *** Quits: Douwd (~douwd@nexus.bsdpro.net) (Quit: So long, and thanks for all the fish.)
[18:48:41] *** Joins: humberto1 (~humbertow@189.236.30.209)
[18:48:59] *** Quits: frmlof (~frmlof@70.243.238.191) (Quit: frmlof)
[18:49:04] *** mh3f__ is now known as mh3f
[18:49:25] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:49:32] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 240 seconds)
[18:49:53] *** Joins: kts (~kts@103.73.237.109)
[18:50:00] <merijn> Is there a commonly used library with an interval map implementation?
[18:50:28] *** Joins: Deneb (~johnch@30.125.7.51.dyn.plus.net)
[18:50:34] *** Joins: M-blaise (~M-blaise@105.112.138.38)
[18:51:26] <Deneb> how do I test for two substrings in a string? This works: if "GPIB-USB" in version: ; This does not and always returns true: if "GPIB-USB" or "AR488" in version:
[18:51:52] <grym> Deneb: if "GPIP-USB" in version or "AR488" in version:
[18:52:08] *** Joins: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro)
[18:52:10] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[18:52:20] <grym> if all(x in version for x in ("GPIP-USB",...
[18:52:23] *** Quits: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2) (Remote host closed the connection)
[18:52:25] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[18:52:31] <grym> er, s/all/any
[18:52:34] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 250 seconds)
[18:52:53] <grym> and if the list of things you're or-ing grows long, consider making it a set instead
[18:53:04] <grym> if any(x in version for x in {"GPIP-USB",...
[18:53:39] <Deneb> grym: seems a bit wordy, but it didn't like it in any case. SyntaxError: EOL while scanning string literal
[18:54:20] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::10)
[18:54:29] <Deneb> grym: at this point the list is only two possible string variants. Whether it will grow remains to be seen.
[18:54:38] *** Joins: nomic (~nomic@185.217.117.104)
[18:54:48] *** Joins: hamms (~hams@c-73-255-22-88.hsd1.tx.comcast.net)
[18:55:00] <grym> Deneb: https://bpa.st/RBPA
[18:55:03] *** Joins: laslmtdbm^ (~laslmtdbm@wsip-98-188-242-61.mc.at.cox.net)
[18:55:15] <The-Compiler> Deneb: your code gets interpreted as:    if ("GPIB-USB") or ("AR488" in version):   because the or-operator just joins two expressions together, it doesn't know anything about the "in" (and vice-versa)
[18:55:56] <The-Compiler> Deneb: and that's always true because "GPIB-USB" always is (like any non-empty string)
[18:56:43] <The-Compiler> grym: how would making it a set change anything?
[18:57:02] *** Quits: PublicWiFi (~PublicWiF@user/publicwifi) (Quit: WeeChat 3.0)
[18:57:05] <grym> The-Compiler: "in" is O(1) then
[18:57:08] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[18:57:12] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[18:57:33] *** Quits: McDonaldsWiFi (~PublicWiF@user/publicwifi) (Quit: WeeChat 3.3)
[18:57:40] <grym> or, no, it won't matter
[18:58:08] <Deneb> The-Compiler: thanks. That kind of makes sense although in most languages the 'or' would check for both expressions. In this case it didn't even like brackets around the two or'ed terms
[18:58:19] <Deneb> grym: just trying your no. 3 option
[18:58:43] <The-Compiler> Deneb: I'm not aware of any language where "or" works in the way you describe it (except English, that is)
[18:59:37] *** Joins: PublicWifi (~PublicWiF@user/publicwifi)
[19:01:52] *** Quits: PublicWifi (~PublicWiF@user/publicwifi) (Client Quit)
[19:02:12] *** Quits: bluedust (~bluedust@117.204.148.73) (Remote host closed the connection)
[19:02:42] *** Quits: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro) (Ping timeout: 256 seconds)
[19:02:58] *** Joins: PublicWifi (~PublicWiF@user/publicwifi)
[19:02:58] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[19:03:03] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[19:03:29] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[19:05:30] <xheimlich> Before man was GPIB-USB was waiting for him.
[19:05:48] <xheimlich> The ultimate string for the ultimate hacker.
[19:06:06] <AhmedAmerican> i do have a dataframe which i would like to send it via email and to be displayed friendly to the end user. any suggestion would be appreciated !
[19:06:11] <Deneb> grym: your option no. 3 works. Thank you.
[19:07:26] *** Quits: zmt01 (~zmt00@user/zmt00) (Quit: Leaving)
[19:07:44] <grym> AhmedAmerican: you can dump dataframes to html i think
[19:08:21] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[19:08:26] *** Joins: zmt00 (~zmt00@user/zmt00)
[19:09:21] <jinsun__> you can do df.to_html, and you can use styler to do fancy formatting of the html table also https://pandas.pydata.org/pandas-docs/stable/user_guide/style.html
[19:10:07] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[19:11:26] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[19:12:19] *** Joins: akk (~akk@174-28-122-47.albq.qwest.net)
[19:12:40] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[19:13:02] <NeilRG> can someone who's been programming in Python since 2.7 take a look at this and let me know if there are any mistakes? https://github.com/python-mode/python-mode/pull/1149#issuecomment-1015538200
[19:13:31] *** Joins: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca)
[19:13:54] *** Joins: Jimmy2027 (~hendrik@2001:1620:2018:38:dde3:1b0f:dc57:eb0f)
[19:15:48] <Jimmy2027> hi, does someone know if there is a way to automatically launch a function with all different combinations of inputs given as keywords? for example if I have a function f(a,b), I want to call it automatically as [f(a,b), f(a,b=b), f(a=a,b=b), f(b, a=a)]
[19:16:47] <phy1729> You want to test that python calling works?
[19:17:37] <phy1729> Also f(b, a=a) wouldn't work
[19:17:39] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[19:17:43] <Jimmy2027> yes
[19:17:52] <Jimmy2027> phy1729: true, makes one case less :)
[19:17:54] *** Quits: skeels (21030cf582@2604:bf00:561:2000::237) (Remote host closed the connection)
[19:17:54] *** Quits: srhm (dda3db84b5@user/srhm) (Remote host closed the connection)
[19:17:54] *** Quits: akspecs (00cc8321af@sourcehut/user/akspecs) (Remote host closed the connection)
[19:17:54] *** Quits: Robin_Jadoul (afe6b98926@2604:bf00:561:2000::18e) (Remote host closed the connection)
[19:17:54] *** Quits: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf) (Remote host closed the connection)
[19:17:54] *** Quits: Hummer12007 (061e0434dc@2604:bf00:561:2000::16) (Remote host closed the connection)
[19:17:54] *** Quits: colbyhub (411e4f2740@2604:bf00:561:2000::2de) (Remote host closed the connection)
[19:17:54] *** Quits: andrea (3f138254b4@2604:bf00:561:2000::38) (Remote host closed the connection)
[19:17:54] *** Quits: lew (c292bc13c9@2604:bf00:561:2000::27e) (Remote host closed the connection)
[19:17:54] *** Quits: Schnouki (e7aa4cfb39@user/schnouki) (Remote host closed the connection)
[19:17:54] *** Quits: sharktamer (9bafe1e1bb@2604:bf00:561:2000::17) (Remote host closed the connection)
[19:17:54] *** Quits: seanh (1a2a07ea57@2604:bf00:561:2000::201) (Remote host closed the connection)
[19:17:54] *** Quits: srstevenson (b46bf53c49@2604:bf00:561:2000::f3) (Remote host closed the connection)
[19:17:54] *** Quits: akelly (24aca7a63b@2604:bf00:561:2000::152) (Remote host closed the connection)
[19:17:55] *** Quits: mrHedgehog0 (9658dbe103@2604:bf00:561:2000::a5) (Remote host closed the connection)
[19:17:55] *** Quits: sliwkr (1aac56ad72@2604:bf00:561:2000::251) (Remote host closed the connection)
[19:17:55] *** Quits: fluffyballoon (45ce440a48@2604:bf00:561:2000::e2) (Remote host closed the connection)
[19:18:12] *** Quits: deniska (~deniska@user/deniska) (Ping timeout: 268 seconds)
[19:18:26] *** Joins: sharktamer (9bafe1e1bb@2604:bf00:561:2000::17)
[19:18:27] *** Joins: Schnouki (e7aa4cfb39@user/schnouki)
[19:18:27] *** Joins: Hummer12007 (061e0434dc@2604:bf00:561:2000::16)
[19:18:27] *** Joins: sliwkr (1aac56ad72@2604:bf00:561:2000::251)
[19:18:28] *** Joins: Robin_Jadoul (afe6b98926@2604:bf00:561:2000::18e)
[19:18:28] *** Joins: seanh (1a2a07ea57@2604:bf00:561:2000::201)
[19:18:30] *** Joins: andrea (3f138254b4@2604:bf00:561:2000::38)
[19:18:37] *** Joins: akelly (24aca7a63b@2604:bf00:561:2000::152)
[19:18:37] *** Joins: srhm (dda3db84b5@user/srhm)
[19:18:39] <phy1729> I guess you could have args=[...]  kwargs={} and pop from the end of args and add into kwargs and f(*args, **kwargs)
[19:18:42] *** Joins: skeels (21030cf582@2604:bf00:561:2000::237)
[19:18:42] *** Joins: fluffyballoon (45ce440a48@2604:bf00:561:2000::e2)
[19:18:42] *** Joins: srstevenson (b46bf53c49@2604:bf00:561:2000::f3)
[19:18:42] *** Joins: colbyhub (411e4f2740@2604:bf00:561:2000::2de)
[19:18:45] *** Joins: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf)
[19:18:45] *** Joins: akspecs (00cc8321af@sourcehut/user/akspecs)
[19:18:49] *** Joins: lew (c292bc13c9@2604:bf00:561:2000::27e)
[19:18:49] *** Joins: mrHedgehog0 (9658dbe103@2604:bf00:561:2000::a5)
[19:18:55] *** Joins: deniska (~deniska@user/deniska)
[19:19:23] <phy1729> That's only for the simple case where all parameters aren't positional only or keyword only. (keyword only would be easy enough, just stick them in kwargs to start)
[19:20:15] *** Quits: M-blaise (~M-blaise@105.112.138.38) (Ping timeout: 256 seconds)
[19:20:49] <Jimmy2027> phy1729: in the example f(a,b) they are positional right?
[19:21:06] <phy1729> yes
[19:21:44] *** Joins: redrum88 (~redrum88@user/redrum88)
[19:21:57] *** Quits: pythia (~pythia@ti0044a400-1030.bb.online.no) (Ping timeout: 256 seconds)
[19:22:15] *** Joins: M-blaise (~M-blaise@105.112.138.38)
[19:22:52] *** Joins: pythia (~pythia@ti0044a400-1030.bb.online.no)
[19:23:21] <Jimmy2027> hmm I'm going to try that out in a toyfile
[19:24:45] *** Joins: cosimone (~user@93-47-230-83.ip115.fastwebnet.it)
[19:25:38] *** Joins: subopt (~subopt@2603-8081-2302-459a-e089-227f-623f-7e69.res6.spectrum.com)
[19:26:15] *** Quits: eson123 (~whatever@user/eson123) (Quit: Leaving)
[19:27:25] *** Quits: M-blaise (~M-blaise@105.112.138.38) (Remote host closed the connection)
[19:27:41] <petaflot> meeh. I'm trying to `import stdnum.iso7064 as iso7064` then `help(iso7064.mod_97_10)` but I get AttributeError: module 'stdnum.iso7064' has no attribute 'mod_97_10' ; what stupid mistake am I doing?
[19:27:56] *** Joins: mh3f_ (~mdhowle@spcvpn.sonoco.com)
[19:28:32] *** Joins: M-blaise (~M-blaise@105.112.138.38)
[19:29:10] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[19:30:06] *** Quits: pschmitt[m] (~pschmitt@2001:470:69fc:105::1:24cb) (Quit: You have been kicked for being idle)
[19:30:13] *** Quits: vanessa (~annada@103.160.128.7) (Quit: WeeChat 3.4)
[19:30:14] <SnoopJ> petaflot, it might help to look at `iso7064.__file__` to see what is backing whatever you imported, which might clarify why it doesn't have this attribute
[19:30:16] *** Joins: stonkey (~stonkey@user/stonkey)
[19:30:27] *** Quits: mh3f (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Ping timeout: 256 seconds)
[19:30:30] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[19:31:01] *** Quits: fivegruel (~fivegruel@HSI-KBW-095-208-248-017.hsi5.kabel-badenwuerttemberg.de) (Ping timeout: 256 seconds)
[19:31:08] <han-solo> it seems you have to `from stdnum.ios7604 import mod_97_10`
[19:31:37] <han-solo> or the `import stdnum...` to have that name because https://github.com/arthurdejong/python-stdnum/blob/master/stdnum/iso7064/__init__.py
[19:31:47] <han-solo> is empty
[19:32:04] *** Quits: Santzes (~Santzes@2400:8901::f03c:92ff:fe49:47a6) (Quit: WeeChat 3.4)
[19:32:05] *** Joins: yaraju (~yaraju@user/yaraju)
[19:33:15] <petaflot> han-solo: I totally don't understand why but  `from stdnum.ios7604 import mod_97_10` works :-)
[19:33:20] *** Parts: water_27300935_ (~xe@182.90.129.70) (WeeChat 3.4)
[19:33:23] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[19:33:27] *** Quits: M-blaise (~M-blaise@105.112.138.38) (Ping timeout: 256 seconds)
[19:33:45] <petaflot> .. except for the typo of course
[19:34:01] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[19:34:02] <petaflot> ^o^oes
[19:34:03] <SnoopJ> packages don't always provide their subpackages as attributes in the module
[19:34:20] <han-solo> `stdnum.iso9064` is a subpackage, and it doesn't have any hoisted names in `__init__.py` so you have to import the modules inside that subpackage
[19:35:07] <petaflot> alright... I didn't know subpackages had to be explicitly specified as attributes. this makes sense, thank you SnoopJ
[19:35:30] *** Joins: kijix\ (~shinomori@c-73-143-164-176.hsd1.ct.comcast.net)
[19:35:45] *** Joins: M-blaise (~M-blaise@105.112.138.38)
[19:35:47] <Jimmy2027> phy1729: something like this should work right? https://bpa.st/5DHQ
[19:35:55] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[19:37:01] <SnoopJ> petaflot, well, the point is that they don't _have_ to be, but it's a fairly typical convention so it can be surprising when you bonk on a package that doesn't do this. It's the same reason `import PIL; PIL.Image` will be an error, for instance (and I forget this pretty much every time)
[19:37:17] <SnoopJ> numpy/scipy do it in a few packages as well I believe
[19:37:25] <han-solo> same happens with `urllib` for me ':)
[19:38:09] *** Joins: xx (~xx@user/xx)
[19:38:32] *** Quits: laslmtdbm^ (~laslmtdbm@wsip-98-188-242-61.mc.at.cox.net) (Ping timeout: 240 seconds)
[19:38:36] *** Joins: monkeyPlus (~monkeyPlu@2001:8a0:6cc5:7e01:958f:68ca:930d:dd01)
[19:38:57] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Read error: Connection reset by peer)
[19:39:34] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[19:39:38] *** Quits: znf_ (ibm86@blender.linge-ma.ro) (Quit: ZNC - http://znc.in)
[19:39:49] *** Joins: draq (~draq@152.70.180.41)
[19:39:54] <monkeyPlus> https://bpa.st/EIDA
[19:39:58] <monkeyPlus> can anyone help
[19:40:15] *** Quits: M-blaise (~M-blaise@105.112.138.38) (Remote host closed the connection)
[19:40:15] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[19:40:33] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Read error: Connection reset by peer)
[19:40:38] <Wulf> monkeyPlus: don't pass in floats
[19:40:45] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[19:40:48] *** Joins: esther (~esther@91.206.168.10)
[19:40:49] <SnoopJ> monkeyPlus, one of your `num`s is a float, but gcd() only accepts ints
[19:40:51] <monkeyPlus> no i printed type, and they are all ints
[19:40:57] <Wulf> monkeyPlus: you're mistaken.
[19:41:01] *** Quits: hamms (~hams@c-73-255-22-88.hsd1.tx.comcast.net) (Ping timeout: 268 seconds)
[19:41:02] <monkeyPlus> ok let me try again
[19:41:05] <SnoopJ> monkeyPlus, can you show us the complete program including the inputs?
[19:41:19] *** Quits: cliluw (~cliluw@47.147.73.223) (Read error: Connection reset by peer)
[19:41:19] <monkeyPlus> opps nevermind
[19:41:27] <monkeyPlus> num2 was a float :) i only printed num1
[19:41:29] <Wulf> :)
[19:41:32] *** Quits: znf (~ibm86@toaster.linge-ma.ro) (Quit: ZNC - http://znc.in)
[19:41:54] <SnoopJ> "Most bugs are a result of the execution state not being exactly what you think it is."
[19:42:05] *** Joins: M-blaise (~M-blaise@105.112.138.38)
[19:43:01] *** Joins: znf_ (ibm86@2001:19f0:5001:3600:5400:3ff:fecd:9ee5)
[19:43:29] *** Joins: ajnulo (~ajnulo@2a02:3102:4cc5:fffd:b0f8:7e15:20e2:1c2e)
[19:43:49] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[19:44:18] *** Quits: ajnulo (~ajnulo@2a02:3102:4cc5:fffd:b0f8:7e15:20e2:1c2e) (Client Quit)
[19:44:26] *** Joins: ajnulo (~ajnulo@2a02:3102:4cc5:fffd:b0f8:7e15:20e2:1c2e)
[19:44:57] *** Quits: esther (~esther@91.206.168.10) (Ping timeout: 240 seconds)
[19:45:00] *** Quits: tWqaq_ (~tWqaq@101.93.138.74) (Quit: Leaving)
[19:45:33] *** Quits: ajnulo (~ajnulo@2a02:3102:4cc5:fffd:b0f8:7e15:20e2:1c2e) (Client Quit)
[19:45:42] *** Joins: ajnulo (~ajnulo@2a02:3102:4cc5:fffd:b0f8:7e15:20e2:1c2e)
[19:46:20] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[19:46:47] *** Joins: lbalhar (~lbalhar@188-175-36-239.client.rionet.cz)
[19:47:54] *** Joins: beastDiv1 (~beastDivi@user/beastdivision)
[19:49:20] *** Joins: laslmtdbm^ (~laslmtdbm@wsip-98-188-242-61.mc.at.cox.net)
[19:49:40] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:4f71:e483:695e:a1c3)
[19:50:10] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:50:17] *** Quits: beastDiv1 (~beastDivi@user/beastdivision) (Remote host closed the connection)
[19:51:29] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[19:51:35] *** Quits: clydez (~clydez@178-116-34-81.access.telenet.be) (Ping timeout: 256 seconds)
[19:51:48] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[19:52:00] *** Quits: draq (~draq@152.70.180.41) (Changing host)
[19:52:00] *** Joins: draq (~draq@user/draq)
[19:52:09] *** znf_ is now known as znf
[19:52:26] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[19:52:32] *** Joins: beastDiv1 (~beastDivi@user/beastdivision)
[19:52:39] <petaflot> alpha particle bug?
[19:52:41] *** Quits: redrum88 (~redrum88@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[19:53:19] *** Joins: Guest07 (~Guest07@pool-96-253-74-73.rcmdva.fios.verizon.net)
[19:53:49] <SnoopJ> ?
[19:53:59] <petaflot> monkeyPlus: if you're really into problem solving, you could add some try/except clause that catches the error : if you're _really_ feeding only integers to gcd() it'll make it pretty obvious
[19:54:16] <monkeyPlus> np ..
[19:54:16] <monkeyPlus> :)
[19:54:45] <petaflot> SnoopJ: yeah, cuz the alpha particle bug does precisely that : change the execution state to sth you do not expect :-D
[19:55:06] <SnoopJ> petaflot, I don't know what "the alpha particle bug" is
[19:55:16] <SnoopJ> are you talking about single-event effects (SEE) like bit-flips?
[19:55:32] <petaflot> SnoopJ: really?!? I would have thought you did! basically it's.. yes SEE
[19:55:56] <petaflot> a most fascinating subject
[19:56:53] <SnoopJ> not quite the sort of bug I had in mind, but I suppose it counts
[19:57:04] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[19:57:49] <SnoopJ> we had a cyclotron beamline dedicated to SEE at $grad_uni, very busy place with all the defense contractor testing
[19:57:51] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[19:58:26] <petaflot> this must have been really cool. any results came out of this?
[19:58:26] *** Quits: pycode (~pycode3@2001:b07:5d28:551:5c6f:a9b2:b431:9a7b) (Ping timeout: 250 seconds)
[19:58:47] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[19:58:56] *** Joins: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro)
[19:59:10] *** Joins: bluedust (~bluedust@117.204.148.73)
[19:59:21] *** Quits: Deneb (~johnch@30.125.7.51.dyn.plus.net) (Quit: Leaving)
[19:59:47] <SnoopJ> presumably they were able to tick the "rad-safe" box on the performance criteria for the assorted death-rays the users were probably testing
[19:59:56] *** Joins: mh3f__ (~mdhowle@cpe-98-25-217-234.sc.res.rr.com)
[20:00:01] *** daniel3 is now known as daniel2
[20:00:45] <SnoopJ> AFAIK you usually address SEE architecturally by having a system that can check itself, e.g. redundant processors and error correction where it makes sense
[20:01:28] <petaflot> .. which makes sense :-]
[20:01:36] *** Quits: percyc (~percyc@183.236.188.154) (Remote host closed the connection)
[20:01:46] *** Joins: jay-m126 (~jay-m@154.72.160.184)
[20:01:51] *** Quits: tim__ (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Quit: Leaving)
[20:01:59] *** Joins: nyah (~nyah@94.6.71.219)
[20:02:05] *** Joins: percyc (~percyc@183.236.188.154)
[20:02:08] *** Joins: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[20:02:15] <Wooble> very few bugs are the result of SEE, but those ones are a lot closer to the original meaning than silly errors in the code.
[20:02:22] <SnoopJ> petaflot, it's unfortunately the kind of event that you *really* think a lot about when [thing] is supposed to be resilient to high altitude nuclear detonations
[20:02:36] *** Quits: mh3f_ (~mdhowle@spcvpn.sonoco.com) (Ping timeout: 268 seconds)
[20:02:50] *** Joins: georgios (~georgios@user/georgios)
[20:02:51] <petaflot> +1 in favor of separate caches in multi-core systems
[20:03:11] <SnoopJ> but in systems with zero fault tolerance I guess you don't really care where the offending radiation came from
[20:04:05] <SnoopJ> I believe the Ingenuity helicopter has such a redundant system in the flight control hardware but I don't think it's really because of SEE :)
[20:04:35] <Wooble> (or... not the original; software bugs being named after the bug in the relay on mark ii is a lie. :( )
[20:04:56] *** Quits: jpodivin (~jpodivin@cgnat44-pool3-68-163.poda.cz) (Ping timeout: 250 seconds)
[20:05:05] <petaflot> Wooble: couldn't agree more. and proper error-detection (through architecture changes or code redundancy, ie. doing the same maths 2-3 times and making sure the results are consistent) should fix this most times
[20:05:22] *** Quits: smqra (~rooba@208.110.85.44) (Quit: WeeChat 3.5-dev)
[20:05:57] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[20:06:10] *** Joins: Guest9014 (~vit@chello085216193138.chello.sk)
[20:06:39] * petaflot wonders if/how our human brains do this kind of error detection/correction. probably not.
[20:06:48] <Celelibi> Is there a way to call a static method from a class attribute?
[20:06:55] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[20:07:04] <bjs> Celelibi: what do you mean by "from a class attribute"
[20:07:07] *** Joins: Myst3 (~Myst@user/myst)
[20:07:22] <Celelibi> I mean class Foo: blah = thestaticmethod(); @staticmethod def thestaticmethod():...
[20:07:50] *** Joins: Barones (~Barones@189.50.80.77)
[20:08:00] <Wooble> Celelibi: no; the method and the class don't exist at that point.
[20:08:27] <Celelibi> So, what would be the right way to do it?
[20:08:35] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[20:08:47] <bjs> Celelibi: oh,  well for a start you have to define the method before you can call it.
[20:08:48] <Wooble> don't have a staticmethod, same as any other time you're thinking of having a staticmethod.
[20:09:05] <bjs> Celelibi: but maybe you just want to define the function outside the class
[20:09:10] *** Joins: constxd_ (~brad@142.167.170.88)
[20:09:36] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:10:01] <Celelibi> The method uses other class attributes. So I think it's nice to have it as a static method.
[20:10:14] *** Joins: pigweed (~pigweed@97.119.204.166)
[20:10:25] <bjs> Celelibi: make it a classmethod then, so you can access the class as the argument
[20:10:27] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[20:10:34] <bjs> Celelibi: but in general, https://bpa.st/73HA
[20:10:37] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 268 seconds)
[20:11:01] *** Joins: kl1n3 (~freedom0@libera/staff/kline)
[20:11:01] *** Joins: thevar1able (~textual@46.39.45.122)
[20:11:33] <bjs> Celelibi: a @classmethod is like a @staticmethod except the class object gets passed as the first argument.  Then you can have @classmethod def foo(cls): print(cls.attr)  # etc
[20:11:36] *** Quits: tofran (~tofran@37.189.158.134) (Quit: Ping timeout (120 seconds))
[20:11:49] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[20:12:09] *** Joins: tofran (~tofran@37.189.158.134)
[20:12:17] *** Joins: Pickchea (~private@user/pickchea)
[20:12:56] *** Joins: xa0s (~xa0s@mab.sdf.org)
[20:13:40] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[20:14:28] *** Joins: crashrep (~crashrep@user/crashrep)
[20:15:56] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[20:16:39] *** Joins: eson123 (~whatever@user/eson123)
[20:17:13] *** Joins: ingmarbergman (~ingmar@2804:3814:3:cd6:29cb:9bea:f330:2c57)
[20:17:36] <eson123> also does anyone knows how can i append a new line in between a specific line in a file without running out of memory ? for example i have file.txt containing "line1\nline2" and i wanna append "line3" in between that, so it would be "line1\nline3\nline2"
[20:18:01] *** Joins: smqra (~rooba@208.110.85.44)
[20:18:03] <eson123> stackoverflow suggests me what i thought about which is readlines them first, append to list then put back but that doesn't seem efficient
[20:18:16] <bjs> eson123: the easiest and best way to do this is to read through file line at a time, and write the lines back out to another file
[20:18:24] <bjs> then at the end, overwrite the original with the one with the new line
[20:18:33] *** Quits: timdiels (~user@78-22-205-207.access.telenet.be) (Quit: leaving)
[20:18:41] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:18:48] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[20:19:29] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[20:19:54] <eson123> dang, that is gonna be bad if my file get a bit too huge overtime
[20:20:14] <bjs> eson123: overtime?
[20:20:20] *** Joins: nomic2 (~nomic@185.192.69.2)
[20:20:22] <eson123> over time
[20:20:29] *** Quits: nomic (~nomic@185.217.117.104) (Ping timeout: 268 seconds)
[20:20:33] <bjs> eson123: I'm not sure, why would the file being big be a problem?
[20:20:50] *** nomic2 is now known as nomic
[20:21:09] <eson123> well imagine if it has over a few thousand lines then i wanna append one line between somewhere the first 10 lines, looping through each line, writing to another file can be quite of a bad complexity
[20:21:18] *** Joins: thevar1able (~textual@46.39.45.122)
[20:21:36] <Wooble> unless you're using old floppy disks a few thousand lines won't be a problem
[20:21:48] <bjs> eson123: well every line that appears after the line you want to append after has to be written to a file again anyway
[20:22:14] <eson123> yea i know :( guess there is no other choice
[20:22:15] <petaflot> SnoopJ: remids of this friend working on infra that is is supposed to be resistant to nuclear warfare. when I told him "wtf, when a nuke hits you're dead" he replied "well ot those who pay for the service" ; I forgot to say that once he's been nuked, the infrastructure may well last a little longer but his contractors will very soon feel much lonely and incompetent when faced with everything that has
[20:22:21] <petaflot> been setup so that the infra is resilient to nukes. I'm mean, I'll probably be dead to by then, but I'll be laughing my arse off
[20:22:26] <eson123> that makes me wonder, is that also how notepad works and other editors work ?
[20:22:40] <eson123> like i can just move my cursor at a certain point then press "enter" and give a new line
[20:22:47] <Wooble> eson123: almost any text editor will keep the entire file in memory
[20:22:57] <bjs> eson123: most of them load all the lines into memory, change the one in memory and then write back out a new file when you save.
[20:23:05] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[20:23:22] <bjs> (some like vim can be slightly more clever and load chunks at a time, but if you try make a change at the beginning of a big file in vim and save you'll notice it doing the same thing too)
[20:23:32] *** Quits: dreamon (~dreamon@ppp-88-217-76-15.dynamic.mnet-online.de) (Ping timeout: 240 seconds)
[20:23:34] *** Quits: MajorBiscuit (~MajorBisc@c-001-025-054.client.tudelft.eduvpn.nl) (Ping timeout: 268 seconds)
[20:23:57] *** Joins: zebrag (~chris@user/zebrag)
[20:24:04] <petaflot> eson123: I remember getting in quite some trouble to remove a (the first) line containing "2" at the start of a file with some 50M prime numbers.
[20:24:10] <bjs> because a file is just a flat array of bytes really and in the end if you want to put extra stuff "in the middle" you need to shuffle all the stuff up
[20:24:14] *** Joins: tofran8 (~tofran@37.189.158.134)
[20:24:32] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[20:24:35] *** Joins: Roey (~Roey@user/Roey)
[20:24:35] <han-solo> i always wanted to try `mmap `
[20:24:51] *** Quits: tofran (~tofran@37.189.158.134) (Ping timeout: 256 seconds)
[20:24:51] *** tofran8 is now known as tofran
[20:25:01] <bjs> han-solo: mmap is cool but doesn't help with this
[20:25:04] <petaflot> .. or down depending on the mods intended. there really isn't much you ca do against it
[20:25:05] <eson123> bjs: well i mean do those editors do the "reading through each line then writing it to another one with the appended line" trick you told me about :P
[20:25:10] <eson123> i do know they load everything into memory
[20:25:20] <bjs> eson123: no, my trick doesn't need to load everything into memory
[20:25:26] <bjs> since they load everything into memory no they are not doing that
[20:25:40] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[20:25:48] *** Quits: eson123 (~whatever@user/eson123) (Remote host closed the connection)
[20:25:59] *** Joins: paul424 (~tom@ip-5-172-237-8.multi.internet.cyfrowypolsat.pl)
[20:25:59] <han-solo> bjs: i was wondering something like `idx = f.find('some specific line'); f[idx:idx] = b'some new line\n'` # not sure if it will work
[20:26:00] *** Quits: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro) (Ping timeout: 256 seconds)
[20:26:08] *** Joins: eson123 (~whatever@118.69.128.37)
[20:26:08] *** Quits: eson123 (~whatever@118.69.128.37) (Changing host)
[20:26:08] *** Joins: eson123 (~whatever@user/eson123)
[20:26:17] *** Joins: hamms (~hams@66.249.114.68)
[20:26:23] <eson123> whoops disconnection
[20:26:32] <bjs> han-solo: the issue is with the way files work, they're just a flat array of bytes.  You can't "insert into the middle", you will always have to do some shuffling
[20:26:47] <han-solo> right
[20:27:01] <eson123> did i miss anything or any mention :/
[20:27:05] *** Joins: nomic2 (~nomic@185.192.69.41)
[20:27:10] <bjs> eson123: I don't know for sure, but I'd bet that most editors save to some kind of temp file and overwrite -- this is normally just a safer operation
[20:27:12] <petaflot> eson123: nope!
[20:27:46] <eson123> bjs: awh, ok
[20:27:53] *** Quits: nomic (~nomic@185.192.69.2) (Ping timeout: 268 seconds)
[20:28:04] *** Joins: Danishman (~Danishman@2-104-144-110-cable.dk.customer.tdc.net)
[20:28:10] <Wooble> easy to check; unplug your computer during save of huge file and see what happens :)
[20:28:23] <petaflot> bjs: AFAIK this is how vim works, and this is what makes most sense
[20:28:55] <bjs> well vim is a special case, and obviously the editors like emacs/vim/vs/vscode are going to be doing a lot of fancy things
[20:28:58] <eson123> Wooble: oh yea i tried one
[20:29:00] <bjs> because they have to support more than just editing text
[20:29:01] <eson123> and still regret it
[20:29:21] <petaflot> also, it can be noticed with pipes that writing to a file you're reading from will totally mess things up. stuff like PDF mergers are quite sesitive to this
[20:30:18] <petaflot> eson123: I suppose pulling the plug was not really intended?
[20:30:31] *** Quits: constxd_ (~brad@142.167.170.88) (Ping timeout: 256 seconds)
[20:30:49] *** Quits: ingmarbergman (~ingmar@2804:3814:3:cd6:29cb:9bea:f330:2c57) (Quit: Leaving)
[20:30:53] <BinarySavior_> Hi for some reason `pip freeze` lists matplotlib as an installed package but if I say `pip uninstall matplotlib` it says "Can't uninstall 'matplotlib'. No files were found to uninstall.
[20:31:12] <eson123> petaflot: of course not, i forgot to click on "Safely remove drive"
[20:31:14] <BinarySavior_> similarly, if I try `pip install matplotlib` then it says requirement already satisfied
[20:31:25] <eson123> at first i thought that was time-wasting but well i learnt it the hard one
[20:31:30] <bjs> eson123: there's lots of tricks you can do with files, you can overwrite a file in-place but it's literally a "overwrite this byte with that one".  Some editors can edit "chunks" of a file at a time.  But no matter what you do, if you insert a new line at the start of a file somehow all the characters after that line have to be re-written back out to a file (whether overwriting the bytes of the same file, or to a new file)
[20:33:01] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[20:33:22] <eson123> fair enough
[20:33:23] <petaflot> eson123: obviously you're a windows user.. and I don't really know how it works in that case ut with linux you can do some pretty funky stuff because filenames and inodes numbers are not the same. ie, you can write to a file and move it while writing to it
[20:33:31] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[20:33:34] <eson123> my file will hardly ever cross a few thousand lines anyway so that's gud :P
[20:33:43] *** Joins: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro)
[20:33:59] <eson123> petaflot: i am basically on Linux rn but yes i do use Windows sometime
[20:34:09] <eson123> and that indicent of mine was on an Ubuntu machine
[20:34:17] *** Quits: M-blaise (~M-blaise@105.112.138.38) (Ping timeout: 240 seconds)
[20:34:20] <eson123> somehow it corrupted lots of my images and files
[20:34:33] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[20:35:08] <petaflot> eson123: oh. well if you're asking me ubuntu is pretty bad. either case, make sure "sync" completes before removig a USB drive (or use `mount -o sync ...`)
[20:35:41] *** Quits: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[20:35:47] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl48amqjhc1ucn4br.ipv6.telus.net)
[20:35:56] <eson123> hm ok then, i haven't known Ubuntu that well to see where it's bad at anyway
[20:36:05] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[20:36:08] *** Joins: M-blaise (~M-blaise@105.112.138.38)
[20:36:14] *** Joins: Staunch (~Staunch@150.69.100.34.bc.googleusercontent.com)
[20:36:21] *** Joins: thevar1able (~textual@46.39.45.122)
[20:36:26] <toma> grym: any updates on the five letter thing?
[20:36:31] *** Joins: apocalyptech (~apocalypt@wilug/apocalyptech)
[20:36:49] *** nomic2 is now known as nomic
[20:39:40] *** Joins: clydez (~clydez@178-116-34-81.access.telenet.be)
[20:39:46] *** Joins: Deana (~Deana@2a01:540:6250:7c00:42af:551b:1791:ad02)
[20:39:46] *** Quits: clydez (~clydez@178-116-34-81.access.telenet.be) (Remote host closed the connection)
[20:39:53] *** Joins: edd_lc (~manjaro-i@85.64.197.64.dynamic.barak-online.net)
[20:40:11] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::10) (Quit: Konversation terminated!)
[20:41:06] <apocalyptech> Heya!  So my desktop just got an upgrade from 3.9 -> 3.10, which means I've gotta do some updating on my various venvs.  I know a `python -m venv --upgrade <path>` will get the base venv working again, and I can freeze the old module list w/ `pip freeze --path <path>/lib/python3.9/site-packages` (and then reinstall the package list from there)...
[20:41:16] *** Joins: aselman4 (~aselman4@ashpr013-p2.nls.ford.com)
[20:41:18] *** Parts: aselman4 (~aselman4@ashpr013-p2.nls.ford.com) ()
[20:41:24] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::10)
[20:41:38] <apocalyptech> ... is there a better (ie: automated) way to do those module reinstalls, though?  Would be nice to have a --reinstall-previous-modules or something for when minor versions update like this
[20:42:10] *** Joins: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[20:42:28] <edd_lc> i usually create venvs from pyenv shims so system updates wouldn't break venvs with same python version as system. might be nice for next time
[20:42:44] <Yhg1s> apocalyptech: it's a major version update, not a minor one, and you don't really upgrade the system from one version to another -- they exist side-by-side. You don't really upgrade virtualenvs either, you create new ones with thee new Python version
[20:42:50] *** Joins: magla (~gelignite@55d4217a.access.ecotel.net)
[20:43:42] <edd_lc> in arch system python went from 3.9 to 3.10
[20:43:55] *** Quits: skapata (~Skapata@user/skapata) (Quit: Ĝis.)
[20:44:12] <Yhg1s> apocalyptech: you may also not want to reinstall everything installed in the old virtualenv either, since dependencies can be conditional on the Python version. You usually want to install the things you manually installed in the virtualenv, not everything that got pulled in by dependencies.
[20:44:19] *** Quits: lethu (~lethu@user/lethu) (Remote host closed the connection)
[20:44:54] *** Quits: trace987 (~trace@ip5b42976d.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[20:45:17] *** Quits: Staunch (~Staunch@150.69.100.34.bc.googleusercontent.com) (Ping timeout: 240 seconds)
[20:45:28] <apocalyptech> Yhg1s: re: system upgrading, essentially what edd_lc said.  Distro's packaging means that the system Python got replaced entirely; 3.9 no longer exists on the system.
[20:45:45] *** Quits: beastDiv1 (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[20:45:48] *** Joins: BrokenCog (~BrokenCog@156.sub-174-194-145.myvzw.com)
[20:45:53] <apocalyptech> Fair point re: deps.  I actually do have `requirements.txt` for basically all my venvs anyway, since they're nearly always for specific projects
[20:46:01] <Yhg1s> apocalyptech: then you can't use the virtualenvs at all anymore, not even to run 'pip --freeze'.
[20:46:10] *** Joins: Algernon666 (~Algernon6@2a04:cec0:10f9:bc97:8d4f:ab0b:d316:b5a)
[20:46:13] <apocalyptech> Delete+recreate has always rubbed me the wrong way, though.  Guess that's just my cross to bear, then.  :)
[20:46:23] *** Quits: palasso (~palasso@user/palasso) (Ping timeout: 268 seconds)
[20:46:32] <Yhg1s> (I would complain that they removed a Python version from under me, but then I don't use Arch and don't use the system-provided Python for virtualenvs.)
[20:46:32] <apocalyptech> Yhg1s: No, I can -- I've already done it for three of 'em.
[20:46:43] <apocalyptech> Yhg1s: Just gotta pass in `--path` so the freeze pulls in the 3.9 packages
[20:46:45] <Yhg1s> apocalyptech: that would mean that the old installation isn't gone, then.
[20:46:59] <Yhg1s> apocalyptech: oh, I see. I would not count on that working, no.
[20:47:08] *** Joins: Nutte35 (~Nutte@27.114.187.37)
[20:47:08] <apocalyptech> It is; I've got to run `python -m venv --upgrade <path>` first, otherwise the venv is, indeed, broken
[20:47:26] <apocalyptech> Though I'll probably just take your advice and recreate 'em
[20:48:05] <apocalyptech> Still strikes me as suboptimal, but the lack of builtin solutions for what I'm attempting pretty clearly means I'm antipatterning here.  :)
[20:48:16] <apocalyptech> Just gotta submit to The Way, I guess.  :)
[20:48:31] <Yhg1s> apocalyptech: the system removing a Python version from under you is an antipattern, sure.
[20:48:33] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[20:48:49] *** Quits: rje (~textual@50.35.241.164) (Ping timeout: 256 seconds)
[20:49:28] *** Quits: Algernon91 (~Algernon6@2a04:cec0:10e7:994e:8d4f:ab0b:d316:b5a) (Ping timeout: 268 seconds)
[20:49:50] <apocalyptech> Yhg1s: Anyway, thanks for the help/advice!  Appreciate it
[20:49:58] *** Quits: anotheruser (~user@197.54.16.50) (Quit: Leaving)
[20:50:04] <apocalyptech> edd_lc: You too.  :)
[20:50:34] *** Joins: Viewday117 (~Viewday@user/viewday)
[20:50:40] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[20:51:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[20:51:34] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Quit: WeeChat 3.3)
[20:51:42] *** Joins: corgi (~corgi@2620:1b2:c40:3000:f39c:21a6:6c2f:8daa)
[20:51:42] *** Quits: corgi (~corgi@2620:1b2:c40:3000:f39c:21a6:6c2f:8daa) (Changing host)
[20:51:42] *** Joins: corgi (~corgi@user/corgi)
[20:51:50] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[20:52:01] <edd_lc> apocalyptech, cheers
[20:52:40] *** Quits: Deana (~Deana@2a01:540:6250:7c00:42af:551b:1791:ad02) (Quit: Konversation terminated!)
[20:52:47] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[20:52:48] *** Viewday117 is now known as Viewday11
[20:53:07] *** Joins: fikran (~fikran@user/fikran)
[20:55:04] *** Joins: andyandybobandy (~AndyAndyB@37.120.205.108)
[21:01:37] <BinarySavior_> hi I created a new python2 env within pycharm and inherited site packages from python2 installation.  Within my python2 installation occurs the matplotlib package.  matplotlib depends on pypi "six" module.  it contains its own six.py and six.pyc which is incomplete or a bit different than the pypi six module.  So after installing module "six"
[21:01:38] <BinarySavior_> into my venv using pip install six, if I try to "import six" in python, it keeps going into matplotlib's six.py instead of the six module which I have installed
[21:01:52] *** shodan45_ is now known as shodan45
[21:02:48] *** Quits: Viewday11 (~Viewday@user/viewday) (Remote host closed the connection)
[21:02:56] <BinarySavior_> is there a way to tell python2 that import six should point to pypi six installation and _not_ to matplotlib's six.pyc file?
[21:03:08] *** Joins: Viewday11 (~Viewday@user/viewday)
[21:03:33] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[21:05:17] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Quit: williampiv)
[21:05:31] *** Joins: Viewday111 (~Viewday@user/viewday)
[21:05:43] *** Quits: tobybl_ (~tobybl@248.195.115.87.dyn.plus.net) (Remote host closed the connection)
[21:06:02] *** Quits: bytehackr (~Sandipan@43.252.250.86) (Ping timeout: 240 seconds)
[21:06:11] <edd_lc> BinarySavior_, does that happen in the interpreter, too? how do you check it uses matplotlib's six.pyc?
[21:07:31] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[21:07:32] *** Viewday111 is now known as Viewday11
[21:07:37] <BinarySavior_> edd_lc the base interpreter does not have pip, i am encountering an error when using pip install wxPython which depends on six
[21:08:02] <BinarySavior_> to check where venv is importing six from i type `import six` and then I type `six`
[21:08:13] *** Joins: harpia (~harpia@2804:2aec:205:1400:be2a:c8d5:4566:5dc8)
[21:08:33] <BinarySavior_> but I actually worked around the issue by deleting those six.py and six.pyc from the python2 matplotlib installation
[21:08:59] <BinarySavior_> now the venv is forced to use the actual six installation
[21:09:16] <BinarySavior_> hopefully matplotlib still works, who knows... i'm not using it right now anyway
[21:13:19] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[21:13:29] <edd_lc> BinarySavior_, that sounds a bit like black magic but if it works that's a win. what's your present working directly when you're executing "import six; six"? because, the import resolution starts from local dir, $PYTHONPATH and then installed packages (more or less, dont remember correctly). technically, it won't search within a package
[21:13:31] *** Joins: ice9 (~ice9@user/ice9)
[21:14:58] *** Quits: Leliana (is@the.one.and.only.revthefox.co.uk) (Quit: brb, sex)
[21:15:19] *** Joins: Leliana (is@2a02:2658:1133:0:dead:babe:0:1)
[21:16:07] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[21:16:28] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[21:16:32] *** Quits: ajnulo (~ajnulo@2a02:3102:4cc5:fffd:b0f8:7e15:20e2:1c2e) (Read error: Connection reset by peer)
[21:17:34] *** Joins: ajnulo (~ajnulo@2a02:3102:4cc5:fffd:b0f8:7e15:20e2:1c2e)
[21:18:01] *** Quits: ajnulo (~ajnulo@2a02:3102:4cc5:fffd:b0f8:7e15:20e2:1c2e) (Client Quit)
[21:19:52] *** Quits: Algernon666 (~Algernon6@2a04:cec0:10f9:bc97:8d4f:ab0b:d316:b5a) (Read error: Connection reset by peer)
[21:20:05] *** Joins: goldfish (~goldfish@user/goldfish)
[21:20:05] *** Joins: Algernon666 (~Algernon6@2a01:e0a:511:6ce0:f0fc:3609:a062:8525)
[21:20:23] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[21:21:29] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[21:21:43] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[21:22:56] *** Joins: dreamon (~dreamon@pd9503284.dip0.t-ipconnect.de)
[21:23:32] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[21:24:47] *** Joins: nicode (~nic@2607:f2c0:946d:3800:7702:bdd5:2eed:e4f0)
[21:25:08] *** Quits: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net) (Client Quit)
[21:25:13] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[21:26:28] *** Quits: Algernon666 (~Algernon6@2a01:e0a:511:6ce0:f0fc:3609:a062:8525) (Ping timeout: 268 seconds)
[21:28:24] *** Joins: JordiGH (~jordi@user/jordigh)
[21:28:36] <JordiGH> Hm, did Deadsnakes stop supporting Xenial? https://launchpad.net/~deadsnakes/+archive/ubuntu/ppa
[21:29:04] *** Joins: sfinks (~ascherf@user/sfinks)
[21:29:06] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:29:47] <sfinks> hello, anyone here with an idea which tool was used to create these bindings? https://github.com/pyudev/pyudev/blob/master/src/pyudev/_ctypeslib/libudev.py
[21:30:04] *** Joins: papna (~mike@159.203.139.114)
[21:30:05] <sfinks> it's so well structured that I'm wondering whenever it was handmade or generated
[21:30:11] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[21:30:14] <jinsun__> JordiGH: yup https://github.com/deadsnakes/issues/issues/195
[21:30:20] *** Joins: rje (~textual@65.141.156.170)
[21:30:35] *** Quits: hamms (~hams@66.249.114.68) (Ping timeout: 256 seconds)
[21:31:08] <han-solo> sfinks: it is written, i think
[21:31:47] *** Parts: andyandybobandy (~AndyAndyB@37.120.205.108) (Leaving)
[21:32:13] *** Joins: n0cturna1 (~n0cturna1@h155173.upc-h.chello.nl)
[21:32:43] <sfinks> … and I had my hopes high there was a tool that would save me from the work of porting the headers of a C lib to python
[21:33:09] *** Quits: bluedust (~bluedust@117.204.148.73) (Remote host closed the connection)
[21:33:11] *** Joins: stonkey (~stonkey@user/stonkey)
[21:34:02] *** Quits: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[21:34:03] *** Quits: Amadiro (~Amadiro@84.209.11.12) (Remote host closed the connection)
[21:34:35] *** Joins: Staunch (~Staunch@137.83.202.22)
[21:34:47] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[21:35:03] *** Quits: dfkfs (~dfkfs@178.49.152.42) (Quit: Client closed)
[21:35:23] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[21:35:26] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[21:36:45] *** Joins: onichomp (~onichomp@2806:264:4408:224:30d6:9c53:2b23:60b1)
[21:38:00] *** Joins: jw_dungeon (~jw@2601:44:4380:4a10:151:a143:641:a301)
[21:38:11] *** Quits: rje (~textual@65.141.156.170) (Ping timeout: 268 seconds)
[21:38:14] *** Joins: fef (~thedawn@user/thedawn)
[21:38:20] <JordiGH> jinsun__: oh no
[21:39:40] *** Joins: rje (~textual@65.141.156.170)
[21:39:43] *** Quits: BrokenCog (~BrokenCog@156.sub-174-194-145.myvzw.com) (Read error: Connection reset by peer)
[21:40:04] *** Quits: dvx (~dvx@5.181.92.64) (Quit: dvx)
[21:40:36] *** Quits: onichomp (~onichomp@2806:264:4408:224:30d6:9c53:2b23:60b1) (Read error: Connection reset by peer)
[21:41:14] *** Joins: onichomp (~onichomp@2806:264:4408:224:30d6:9c53:2b23:60b1)
[21:41:17] *** Joins: BrokenCog (~BrokenCog@156.sub-174-194-145.myvzw.com)
[21:41:58] *** Joins: Mortician (~Mortician@cpe-75-83-83-8.socal.res.rr.com)
[21:42:11] *** stella is now known as aoei
[21:43:18] *** Quits: five64333 (~five6@8.40.26.70) (Ping timeout: 250 seconds)
[21:43:47] *** Joins: jmd (~user@de.cellform.com)
[21:44:55] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[21:45:02] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Quit: Leaving)
[21:45:58] *** Joins: kuhilas (~kuhilas@2001:470:69fc:105::3040)
[21:46:57] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[21:47:33] *** Joins: Algernon666 (~Algernon6@2a01:e0a:511:6ce0:f0fc:3609:a062:8525)
[21:47:45] *** Joins: greedom (~greedom@p200300de67104800f0b3461d3061ea1b.dip0.t-ipconnect.de)
[21:47:54] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[21:48:10] *** Quits: rvalue (~rvalue@user/rvalue) (Quit: ZNC - https://znc.in)
[21:48:57] *** Quits: edd_lc (~manjaro-i@85.64.197.64.dynamic.barak-online.net) (Ping timeout: 240 seconds)
[21:49:47] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[21:50:46] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[21:50:52] *** Joins: stonkey2 (~stonkey@user/stonkey)
[21:50:59] *** Quits: gdd (~gdd@129.199.146.230) (Ping timeout: 256 seconds)
[21:51:24] *** Quits: jw_dungeon (~jw@2601:44:4380:4a10:151:a143:641:a301) (Read error: Connection reset by peer)
[21:51:31] *** Joins: five64333 (~five6@8.40.26.70)
[21:51:33] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 256 seconds)
[21:52:07] *** Quits: stonkey2 (~stonkey@user/stonkey) (Remote host closed the connection)
[21:52:27] *** Joins: stonkey (~stonkey@user/stonkey)
[21:52:31] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[21:53:00] *** Joins: ub (~Thunderbi@141.98.252.232)
[21:53:15] *** Quits: ubert (~Thunderbi@141.98.252.232) (Ping timeout: 256 seconds)
[21:53:15] *** ub is now known as ubert
[21:53:49] *** Quits: dante-as (~dante-as@5-12-102-114.residential.rdsnet.ro) (Ping timeout: 256 seconds)
[21:53:53] <aphysically> jinsun__: I am here once again needing a comparable typing :D
[21:54:00] *** Joins: goldcrest (~goldcrest@212.252.83.217)
[21:54:01] <aphysically> I was writing a function to find a percentile in list
[21:54:12] <kuhilas> I installed solfege on arch linux and having trouble with sound. In sound setup if I choose "use OSS device" it says cannot import `_solfege_c_midi' from 'solfege.soundcard' etc. Then the "Use ALSA device" is grayed out and there is a notice. "Disabled because the pyalsa python module was not found. I don't have pulseaudio installed here. I am using alsa on everything. I have installed solfege using pacman. After this I installed python-pyalsa
[21:54:12] <kuhilas> package also using pacman and relaunched solfege and I can pick alsa option but get these errors http://sprunge.us/ecJqF4
[21:54:32] <goldcrest> Hey all, has anyone ever made a text based adventure in python? I'm a noob and am hoping to make one to help me learn
[21:55:17] *** Joins: rvalue (~rvalue@user/rvalue)
[21:57:18] *** Quits: lbalhar (~lbalhar@188-175-36-239.client.rionet.cz) (Ping timeout: 268 seconds)
[21:57:29] <jinsun__> aphysically: percentiles would only make sense in list[float] no? or do you have some general thing that works for any comparable?
[21:57:59] *** Joins: jmd (~user@de.cellform.com)
[21:58:41] *** Quits: ba (~ba@cpc1-hari17-2-0-cust27.20-2.cable.virginm.net) (Remote host closed the connection)
[21:58:57] *** Joins: Viewday110 (~Viewday@user/viewday)
[21:59:16] *** Quits: eson123 (~whatever@user/eson123) (Quit: Leaving)
[22:00:25] *** Quits: BrokenCog (~BrokenCog@156.sub-174-194-145.myvzw.com) (Quit: Reconnecting)
[22:00:26] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[22:00:27] *** Viewday110 is now known as Viewday11
[22:00:38] *** Quits: iomari891 (~iomari891@197.210.71.107) (Ping timeout: 250 seconds)
[22:00:40] *** Joins: BrokenCog (~BrokenCog@156.sub-174-194-145.myvzw.com)
[22:00:49] <aphysically> jinsun__: I'm only using with int atm anyway just wanted to type it generic
[22:00:53] <aphysically> https://bpa.st/LBZA something like this I think
[22:01:08] *** Quits: monkeyPlus (~monkeyPlu@2001:8a0:6cc5:7e01:958f:68ca:930d:dd01) (Remote host closed the connection)
[22:01:26] <aphysically> I guess percentile can be float
[22:01:43] <jinsun__> looks like _typeshed has some useful comparison stuff which I didn't notice before https://github.com/python/typeshed/blob/master/stdlib/_typeshed/__init__.pyi#L38
[22:02:38] *** Quits: greedom (~greedom@p200300de67104800f0b3461d3061ea1b.dip0.t-ipconnect.de) (Remote host closed the connection)
[22:02:57] <aphysically> hmm mmaybe my variance is wrong though
[22:03:04] <jinsun__> but can't use it at runtime, will have to do ugly stuff like if TYPE_CHECKING
[22:03:20] *** Quits: BrokenCog (~BrokenCog@156.sub-174-194-145.myvzw.com) (Client Quit)
[22:03:23] *** Joins: greedom (~greedom@p200300de67104800f0b3461d3061ea1b.dip0.t-ipconnect.de)
[22:03:35] *** Joins: BrokenCog (~BrokenCog@156.sub-174-194-145.myvzw.com)
[22:04:29] <jinsun__> and it is using Any and not T like you are tryingn
[22:04:32] *** Quits: BrokenCog (~BrokenCog@156.sub-174-194-145.myvzw.com) (Read error: Connection reset by peer)
[22:04:42] *** Quits: Algernon666 (~Algernon6@2a01:e0a:511:6ce0:f0fc:3609:a062:8525) (Ping timeout: 268 seconds)
[22:04:47] <aphysically> hmmm yes
[22:04:51] <aphysically> mine doesn't work
[22:04:57] <aphysically> try using it
[22:04:58] *** Quits: Kraus (~quassel@075-141-246-250.res.spectrum.com) (Quit: No Ping reply in 180 seconds.)
[22:05:41] *** Joins: BrokenCog (~BrokenCog@156.sub-174-194-145.myvzw.com)
[22:05:57] <aphysically> oh huh, pyright complains but not mypy
[22:06:21] *** Joins: Kraus (~quassel@075-141-246-250.res.spectrum.com)
[22:06:31] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[22:06:35] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:06:52] *** Quits: rsx (~dummy@ppp-188-174-159-210.dynamic.mnet-online.de) (Quit: rsx)
[22:07:47] <aphysically> I don't understand the error
[22:08:05] <jinsun__> I had complaints mainly because of missing imports and forward references
[22:08:38] <jinsun__> after importing stuff and moving around things, both are fine (I'm checking with pylance though not pyright)
[22:08:39] <aphysically> jinsun__: https://bpa.st/WAMQ
[22:08:50] <aphysically> try actually using it, like that
[22:10:39] <aphysically> ahah, it actually has to be __other and not other
[22:12:49] <jinsun__> ah, yeah the parameter name doesn't matter for lt
[22:15:13] <aphysically> err, it does matter (for pyright) apparently
[22:16:38] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:94dc:ba22:f327:5b29)
[22:17:11] <jinsun__> yeah I mean that is why the lt shouldn't require the name other, but use a positional only thing
[22:17:34] *** Joins: Atque (~Atque@user/atque)
[22:18:29] <stewie925> good morning - I see this github code listing of using generators to print a huge file - https://github.com/just4jc/DataCamp-3/blob/master/06-python-data-science-toolbox-(part-2)/3-bringing-it-all-together!/writing-a-generator-to-load-data-in-chunks-(2).py - I suppose I could change lines 55-57 to say "for line in gen_file: print(line)" to write
[22:18:29] <stewie925> them all out, right?
[22:19:07] <jinsun__> aphysically: using the _typeshed thing it can be done this way I guess? https://bpa.st/2CDA
[22:19:20] *** Joins: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b)
[22:19:24] *** Joins: moog (~moog@107.112.217.106)
[22:19:42] <aphysically> I just changed it to     def __lt__(self: CT, __other: CT) -> bool: for now
[22:21:12] <jinsun__> stewie925: yes, you can loop over the gen like that
[22:21:12] *** Joins: summersault (~summersau@179.221.251.36)
[22:21:34] *** Quits: magla (~gelignite@55d4217a.access.ecotel.net) (Quit: Stay safe!)
[22:21:44] <stewie925> appreciate. it, jinsun!  noticed you picked a new color btw
[22:21:50] *** Quits: thorbw_ (~tw@46.230.130.50) (Read error: Connection reset by peer)
[22:22:04] <stewie925> (or an impostor?)
[22:22:05] *** Joins: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl)
[22:22:09] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[22:22:12] <stewie925> j/k
[22:22:28] <jinsun__> I'm just being lay to change my nick back :D
[22:22:38] <jinsun__> s/lay/lazy
[22:22:45] <stewie925> yeah I noticed the underscore after your nick
[22:23:09] *** jinsun__ is now known as jinsun
[22:23:16] *** Joins: magla (~gelignite@55d4217a.access.ecotel.net)
[22:23:29] <jinsun> okay back to normal :D
[22:24:02] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[22:26:17] <stewie925> :D
[22:28:26] *** Quits: hightower3 (~hightower@95.168.118.8) (Read error: Connection reset by peer)
[22:30:58] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[22:33:20] *** Joins: edd_lc (~manjaro-i@85.64.197.64.dynamic.barak-online.net)
[22:35:35] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:35:38] *** Joins: Viewday118 (~Viewday@user/viewday)
[22:36:58] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[22:36:59] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Read error: Connection reset by peer)
[22:37:32] *** Quits: edd_lc (~manjaro-i@85.64.197.64.dynamic.barak-online.net) (Ping timeout: 240 seconds)
[22:37:35] *** Quits: n0cturna1 (~n0cturna1@h155173.upc-h.chello.nl) (Quit: WeeChat 3.4)
[22:37:37] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[22:37:38] *** Viewday118 is now known as Viewday11
[22:38:03] *** Quits: summersault (~summersau@179.221.251.36) (Remote host closed the connection)
[22:38:32] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Quit: rickybob)
[22:39:23] *** Joins: luciusf1 (~luciusf@46.23.90.165)
[22:39:28] *** Joins: sudomannn (~sudomann@2601:543:100:4fc8:896f:9146:a340:c12d)
[22:40:16] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[22:42:03] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[22:42:23] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[22:42:32] *** Quits: sudomann (~sudomann@2601:543:100:4fc8:896f:9146:a340:c12d) (Ping timeout: 240 seconds)
[22:42:44] *** Joins: ice9 (~ice9@user/ice9)
[22:43:03] *** Joins: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[22:43:20] *** Quits: pipapipapibo (~w@50.239.254.186) (Remote host closed the connection)
[22:45:04] *** Quits: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:46:07] *** Quits: Staunch (~Staunch@137.83.202.22) (Ping timeout: 256 seconds)
[22:46:54] *** Joins: thevar1able (~textual@46.39.45.122)
[22:47:03] *** Joins: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com)
[22:47:27] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[22:48:15] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[22:48:41] *** Joins: ld_ (~a0z1@193.27.14.10)
[22:50:00] *** Joins: beastDiv1 (~beastDivi@user/beastdivision)
[22:50:54] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:94dc:ba22:f327:5b29) (Quit: Client closed)
[22:51:03] *** Quits: merijn (~merijn@c-001-001-018.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[22:51:34] *** Quits: a0z1 (~a0z1@cpc158779-hari22-2-0-cust168.20-2.cable.virginm.net) (Ping timeout: 268 seconds)
[22:52:02] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:52:08] *** Joins: martin__-- (~default@84-113-156-178.cable.dynamic.surfer.at)
[22:52:11] *** gentooclimax is now known as climax
[22:52:25] *** Quits: greedom (~greedom@p200300de67104800f0b3461d3061ea1b.dip0.t-ipconnect.de) (Remote host closed the connection)
[22:52:34] <martin__--> Hi, I created a python class where I set an internal method reference, but when calling it I get "tresholdActivation() takes 1 positional argument but 2 were given"
[22:52:56] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[22:53:09] <grym> martin__--: can you show the code?
[22:53:17] *** Quits: xx (~xx@user/xx) (Ping timeout: 240 seconds)
[22:53:18] <martin__--> I do it like this:  if(af==None):  self.activationf = self.tresholdActivation where def tresholdActivation(v):
[22:53:24] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:94dc:ba22:f327:5b29)
[22:53:31] *** Joins: Guest60 (~Guest60@43.230.42.71)
[22:53:32] *** Quits: sfinks (~ascherf@user/sfinks) (Quit: Whoops)
[22:53:39] <martin__--> grym I get the error when I call the method active= self.activationf(weightedsum)
[22:53:45] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[22:53:45] <grym> martin__--: probably you want `def thresholdActivation(self,v)`
[22:54:15] <martin__--> thanks grym it works now :)
[22:54:25] <BrenBarn> maybe you forgot to include self as an argument when defining it?
[22:54:38] <SnoopJ> methods on a class get the instance of the class as their first argument, unless you do something to modify that behavior (i.e. @classmethod or @staticmethod)
[22:54:41] <grym> BrenBarn: seems so
[22:54:45] <martin__--> I didn't use self in thresholdActivation so I thought I don't need it
[22:55:06] *** Quits: beastDiv1 (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[22:55:12] <SnoopJ> Python will pass it even if you don't use it, but it doesn't really hurt anything to have it there and not use it
[22:55:24] <Wooble> martin__--: if you don't use it, you might not have wanted an instance method.
[22:56:09] <CrtxReavr> Needing vs. not needing self can be a bit confusing,  those "foo() takes X positional argument but y were given" errors, are a good clue about it.
[22:56:40] *** Joins: ice9 (~ice9@user/ice9)
[22:57:03] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[22:57:07] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[22:57:20] <Guest60> In python is there anyway to map  matrix index i.e i have into this form  [(0, 0), (0, 1), (0, 2), (1, 1), (1, 2), (2, 0)] into list [1,2,3] , here (0,0)--> [1,2,3] similarly (0,1)  should map with other list. ?
[22:57:37] *** Quits: ice9 (~ice9@user/ice9) (Max SendQ exceeded)
[22:57:57] *** Joins: ice9 (~ice9@user/ice9)
[22:58:40] *** Quits: driib2 (~driib@185.65.135.253) (Quit: Ping timeout (120 seconds))
[22:58:52] *** Joins: Viewday113 (~Viewday@user/viewday)
[22:59:02] *** Joins: driib2 (~driib@185.65.135.253)
[22:59:33] <Wooble> Guest60: umm... can you elaborate? where is the [1,2,3] coming from?
[23:00:26] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[23:00:27] *** Viewday113 is now known as Viewday11
[23:00:49] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[23:01:01] <Guest60> It's my list which i would likes to associate with this index
[23:01:18] *** Joins: jfcaron (~jfcaron@192.252.229.171)
[23:01:34] <BrenBarn> do you just want a dict with tuple keys?
[23:01:54] <Guest60> Is it possible?
[23:01:55] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[23:02:28] *** Joins: fikran (~fikran@user/fikran)
[23:02:43] <Guest60> wow thanks
[23:03:00] *** Quits: Guest60 (~Guest60@43.230.42.71) (Quit: Client closed)
[23:03:19] *** Joins: FluffyMask (~masque@user/fluffymask)
[23:03:26] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[23:03:26] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[23:03:26] *** finn_elija is now known as FinnElija
[23:03:39] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:03:47] *** Joins: thevar1able (~textual@46.39.45.122)
[23:03:59] <BrenBarn> Like you can do `d = {(0, 1): [1, 2, 3]}` and then `d[0, 1]` will be `[1, 2, 3]`
[23:04:06] <Wooble> they left.
[23:04:43] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:c94d:2005:ed45:6900)
[23:04:43] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:c94d:2005:ed45:6900) (Changing host)
[23:04:43] *** Joins: skapata (~Skapata@user/skapata)
[23:05:42] *** Joins: parv (~quass@user/parv)
[23:06:13] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[23:06:27] *** Joins: matsaman (~matsaman@user/matsaman)
[23:06:46] *** Quits: thevar1able (~textual@46.39.45.122) (Client Quit)
[23:08:06] <phy1729> In anyio is there a way to get a task to just run in the background without awaiting it? Like asyncio.create_task/ensure_future
[23:08:31] <CrtxReavr> BrenBarn, huh. . . I use tuples of ints as dict keys a lot. . . never realized you could drop the ()s like that.
[23:09:10] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[23:09:28] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:b1f4:b48d:15f:e280) (Quit: pvergain)
[23:09:32] *** Quits: ice9 (~ice9@user/ice9) (Read error: Connection reset by peer)
[23:09:34] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:09:53] *** Joins: ice9 (~ice9@user/ice9)
[23:09:59] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[23:10:03] *** Quits: spithash (~spithash@user/spithash) (Ping timeout: 276 seconds)
[23:10:27] *** Joins: spithash (~spithash@user/spithash)
[23:10:28] *** Quits: ice9 (~ice9@user/ice9) (Max SendQ exceeded)
[23:10:33] *** Joins: eron (~eron@2804:431:c7c2:3848:71e8:6fbf:96e2:3117)
[23:10:36] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[23:10:50] <Ingvix> I want to insert a string A in the middle of string B, replacing the characters of the B string for the length of A. Similar to how R works in vim. Is there some method that makes this easy or must I calculate the positions and do some slicing and combining to get what I desire?
[23:10:55] *** Joins: thevar1able (~textual@46.39.45.122)
[23:10:56] *** Joins: ice9 (~ice9@user/ice9)
[23:11:01] *** Quits: newdimension (~newdimnes@user/newdimension) (Read error: Connection reset by peer)
[23:12:28] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[23:12:35] *** Quits: onichomp (~onichomp@2806:264:4408:224:30d6:9c53:2b23:60b1) (Read error: Connection reset by peer)
[23:12:42] <SnoopJ> Ingvix, strings are immutable, so you're stuck with making a new string composed of the parts you want. If we had a more concrete example what you're trying to do we might be able to recommend the best way to go about it
[23:13:00] *** Joins: Viewday114 (~Viewday@user/viewday)
[23:13:13] *** Joins: onichomp (~onichomp@2806:264:4408:224:30d6:9c53:2b23:60b1)
[23:13:16] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Remote host closed the connection)
[23:13:18] <Ingvix> SnoopJ, I wish to insert the progress percentage in the middle of a progress bar
[23:13:36] *** Joins: williampiv (~williampi@ip24-254-86-223.sb.sd.cox.net)
[23:15:10] <Wooble> Ingvix: why is the entire progress bar one string?
[23:15:12] *** Quits: thevar1able (~textual@46.39.45.122) (Client Quit)
[23:15:37] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 268 seconds)
[23:15:37] *** Viewday114 is now known as Viewday11
[23:15:58] <Wooble> (also have yopu considered just using tqdm?)
[23:16:51] *** Quits: Oddity (~Oddity@user/oddity) (Remote host closed the connection)
[23:17:32] *** Joins: thevar1able (~textual@46.39.45.122)
[23:18:14] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[23:18:25] <Ingvix> so I could print it. I build it from [ and ] at the ends and = for the progress and spaces for uh, the rest
[23:18:30] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[23:18:59] <SnoopJ> Ingvix, string formatting provides a way to middle-pad strings, maybe that can do what you want? https://bpa.st/U77Q
[23:19:29] *** Joins: mickey84 (~user@user/mickey)
[23:19:32] <SnoopJ> tqdm +1 though, it provides excellent progress bars "out of the box"
[23:19:46] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[23:19:46] *** mickey84 is now known as mickey8
[23:19:53] <Ingvix> I see
[23:19:53] *** climax is now known as gentooclimax
[23:20:09] *** Quits: eron (~eron@2804:431:c7c2:3848:71e8:6fbf:96e2:3117) (Quit: Client closed)
[23:20:22] <SnoopJ> otherwise you could do it the way you said, by concatenating the before/after portions
[23:20:28] <Ingvix> I like to avoid too many dependencies if it's a simple thing I can do myself
[23:20:32] *** Quits: ST47 (~ST47@wikimedia/st47) (Ping timeout: 240 seconds)
[23:20:50] <rvalue> i am trying to recollect why running jupyter/minimal-notebook container as root is required if i can send matching UID and GID in the environment. can someone help?
[23:21:02] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Ping timeout: 240 seconds)
[23:21:08] <SnoopJ> this always comes down to what things like "too many" or "simple" mean to the end-user. tqdm isn't required, but it's worth knowing about if/when you get sick of solving all the little problems that come with progress bars
[23:21:21] <TML> Ingvix: I think you probably can replace your "string A, string B" thing with just a simple f-string and padding
[23:21:45] <SnoopJ> yea using the padding functionality is a good choice if you know the width
[23:22:02] *** Quits: apple_ (~jcass4@066-188-202-056.res.spectrum.com) (Quit: Leaving)
[23:22:03] <Ingvix> yes, I'm aware of that now
[23:22:28] <SnoopJ> I used an f-string spelling at first but I didn't like how dense it was, so I switched to str.format()
[23:22:46] <rvalue> this is my compose decl, https://pastebin.com/sw8iH4xe
[23:23:56] <Ingvix> guess my problem is solved then, thanks
[23:23:56] *** Joins: aknot (~aknot@2603:900a:1503:17bb:c849:1151:a6c5:a5ab)
[23:24:13] *** Joins: beastDiv1 (~beastDivi@user/beastdivision)
[23:24:47] *** Joins: constxd_ (~brad@142.167.170.88)
[23:24:53] *** Joins: hightower2 (~hightower@95.168.118.8)
[23:25:16] *** Joins: sleepingforest (~sleepingf@user/sleepingforest)
[23:26:44] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[23:26:49] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[23:27:29] *** Quits: jay-m126 (~jay-m@154.72.160.184) (Ping timeout: 256 seconds)
[23:27:46] *** Joins: Moosadee (~Moosadee@198.248.38.24)
[23:27:53] *** Quits: Moosadee (~Moosadee@198.248.38.24) (Read error: Connection reset by peer)
[23:27:59] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[23:28:18] *** Quits: ld_ (~a0z1@193.27.14.10) (Quit: Leaving)
[23:28:50] *** Joins: apteryx (~maxim@dsl-205-236-230-134.b2b2c.ca)
[23:28:55] *** Joins: thevar1able (~textual@46.39.45.122)
[23:29:16] *** Joins: jay-m126 (~jay-m@129.0.204.220)
[23:30:05] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[23:30:28] <apteryx> Hello!  I'm having a case where the get_body of an 'email.message.EmailMessage' instance returns None, both for the 'plain' and 'html' preferencelist.
[23:30:31] *** Quits: mspe (~user@tilde.team/user/mspe) (Quit: WeeChat 2.8)
[23:30:49] *** Joins: mspe (~user@tilde.team/user/mspe)
[23:31:07] <apteryx> Is there a manual fallback I could do to prepend and append some text to the message?
[23:31:41] *** Joins: driib20 (~driib@185.65.135.252)
[23:31:57] <apteryx> the message instance is created via:     message = email.message_from_string(message_text, policy=email.policy.default)
[23:32:39] *** Quits: ubert (~Thunderbi@141.98.252.232) (Quit: ubert)
[23:33:28] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[23:34:06] *** Quits: beastDiv1 (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[23:34:07] *** Quits: driib2 (~driib@185.65.135.253) (Ping timeout: 268 seconds)
[23:34:07] *** driib20 is now known as driib2
[23:34:08] *** Quits: thevar1able (~textual@46.39.45.122) (Quit: thevar1able)
[23:34:28] *** Joins: ST47 (~ST47@wikimedia/st47)
[23:35:14] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[23:35:21] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 268 seconds)
[23:36:25] *** Quits: kts (~kts@103.73.237.109) (Remote host closed the connection)
[23:36:50] *** Joins: kts (~kts@103.73.237.109)
[23:37:05] *** Quits: onichomp (~onichomp@2806:264:4408:224:30d6:9c53:2b23:60b1) (Read error: Connection reset by peer)
[23:37:35] <TML> apteryx: Check out the example code for walk() in the docs and see what the parts of your message object tree are, that might point you to something helpful
[23:37:43] *** Joins: onichomp (~onichomp@2806:264:4408:224:30d6:9c53:2b23:60b1)
[23:38:01] <TML> Not much else I can say without being able to see message_text
[23:40:35] *** Quits: onichomp (~onichomp@2806:264:4408:224:30d6:9c53:2b23:60b1) (Read error: Connection reset by peer)
[23:41:08] *** mrproper_ is now known as mrproper
[23:41:13] *** Joins: onichomp (~onichomp@2806:264:4408:224:30d6:9c53:2b23:60b1)
[23:41:16] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:94dc:ba22:f327:5b29) (Quit: Client closed)
[23:41:21] *** Quits: ElPresidente (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net) (Read error: Connection reset by peer)
[23:43:36] *** Quits: mh3f__ (~mdhowle@cpe-98-25-217-234.sc.res.rr.com) (Quit: Leaving)
[23:44:13] *** Quits: vladoski (~foo@2001:b07:add:d406:41a8:f12c:281a:eb8b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:45:42] *** Joins: vladoski (~foo@93-47-225-14.ip114.fastwebnet.it)
[23:45:57] *** Joins: vegg (~Stas@78.162.147.8)
[23:46:41] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[23:47:04] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:803d:824b:a45b:692b)
[23:47:37] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[23:47:43] *** Quits: AlanMD (~AlanMD@5-12-8-203.residential.rdsnet.ro) (Quit: ZZZzzz…)
[23:48:32] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 250 seconds)
[23:48:39] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[23:48:49] *** Joins: Aylat (~Aylat@33.red-83-35-103.dynamicip.rima-tde.net)
[23:48:51] *** Joins: xkuru (~xkuru@user/xkuru)
[23:49:10] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[23:49:43] *** Joins: Atque (~Atque@user/atque)
[23:51:09] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[23:51:26] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[23:51:32] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[23:53:58] *** Quits: Stench (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[23:55:46] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[23:56:16] *** Quits: runelind (~runelind@user/runelind) (Quit: ZNC 1.8.2 - https://znc.in)
[23:57:39] *** Quits: hightower2 (~hightower@95.168.118.8) (Read error: Connection reset by peer)
[23:58:46] *** Joins: hightower2 (~hightower@95.168.118.8)
[23:58:54] *** Joins: elwoodpd (~elwoodpd@host-92-8-65-11.as13285.net)
[23:59:35] *** Quits: onichomp (~onichomp@2806:264:4408:224:30d6:9c53:2b23:60b1) (Read error: Connection reset by peer)
[23:59:35] *** Quits: hightower2 (~hightower@95.168.118.8) (Read error: Connection reset by peer)
[23:59:47] *** Joins: panella32 (~panella32@164.215.205.64)
[23:59:48] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
