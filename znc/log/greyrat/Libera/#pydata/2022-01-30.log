[03:06:18] <Arrinao> How do I flatten individual items in arrays? I have two arrays [['Ann', 11], ['Yul', 19], ['Ted', 29]] and [['Tom' 15], ['Mia' 28], ['Sam' 32]] and I want to create one array with [['Ann, 11, 'Tom', 15], ['Yul', 19, 'Mia, 28], ['Ted', 29, 'Sam', 32]]. Can anyone help? 
[03:07:21] <mefistofeles> Arrinao: do you have a way of telling ahead which arrays indices or something like that you want to flatten? Or else how can you tell?
[03:08:38] <Arrinao> I don't understand the question. I'm just asking for a way of how it's done
[03:09:06] <Arrinao> mefistofeles: what exactly do you want to to know?
[03:11:29] <mefistofeles> Arrinao: basically, I don't see an easy way just by doing it "by hand", probably list comprehensions will help, but your original structures (having to lists and such) doesn't help for that task. I wonder if you could think of better structures for your problem instead of just having separate lists
[03:11:45] <mefistofeles> s/to lists/two lists
[03:14:25] <Arrinao> huh. Sounds like it's way too complicated to do, that you are asking me to think of better structures :/
[03:14:47] <mefistofeles> Arrinao: oh, actually I just recognize there IS a pattern, it's not that arbitrary
[03:14:52] <Arrinao> I mean yeah, I would think of list comprehensions as well, I just can't really see how to do that
[03:14:53] <mefistofeles> Arrinao: sounds like zip will help a lot there
[03:15:10] <Arrinao> I tried, but didn't really get anywhere :(
[03:15:37] <Arrinao> what about np.flatten?
[03:15:53] <mefistofeles> sure, that helps
[03:16:00] <mefistofeles> if you don't mind using numpy
[03:16:14] <Arrinao> I guess I have to since I'm dealing with np.arrays here
[03:16:16] <Arrinao> :D
[03:16:20] <mefistofeles> oh, then yes, use that
[03:16:50] <Arrinao> just to know
[03:17:00] <Arrinao> the individual lists inside the array are arrays too?
[03:20:48] <mefistofeles> Arrinao: so, IF everything is already a np array I think you can use something like `[np.array(x).flatten() for x in zip(a,b)]
[03:20:51] <mefistofeles> `
[03:21:17] <mefistofeles> there's also probably a "better" way to do the zip, something from numpy, but that should work
[03:26:24] <mefistofeles> Arrinao: even easier, np.concatenate((a,b), 1)
[03:26:30] <mefistofeles> I rememberd about that one :P
[03:28:10] <Arrinao> ha! it works ! didn't try this second yet but the first f***ing works
[03:28:16] <Arrinao> thanks a lot
[03:29:44] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:30:20] <Arrinao> mefistofeles: here's what I was working on btw. https://dpaste.com/6FADQSJUX
[03:31:03] <mefistofeles> Arrinao: hey! glad it worked. Btw, you should really try the second option, it's cleaner
[04:05:30] <Arrinao> mefistorfeles: I tried the second option and got this error: 'only integer scalar arrays can be converted to a scalar index'
[04:06:54] <mefistofeles> that sounds something related to pandas not the numpy concatenate
[04:07:35] <mefistofeles> Arrinao: what's the code?
[04:17:27] <Arrinao> you were right forgot to delete the zip part from the previous attempt :D
[04:17:47] <Arrinao> now I'm getting wrong number dimensions for buffer error
[04:18:11] <Arrinao> https://dpaste.com/7U6SJ969L
[04:18:28] <Arrinao> omg
[04:18:31] <Arrinao> wait
[04:18:48] <Arrinao> alright fixed :D
[04:19:26] <Arrinao> I had to create a dpaste to spot it lol
[04:34:39] <mefistofeles> haha, no worries
[05:11:05] *** Quits: Arrinao (~Arrinao@102.61.broadband3.iol.cz) (Read error: Connection reset by peer)
[09:17:08] *** Quits: ua_ (~ua@public-gprs233941.centertel.pl) (Ping timeout: 250 seconds)
[09:30:19] *** Joins: ua_ (~ua@public-gprs218405.centertel.pl)
[12:00:52] *** Joins: palasso (~palasso@user/palasso)
[15:35:34] *** Joins: Arrinao (~Arrinao@102.61.broadband3.iol.cz)
