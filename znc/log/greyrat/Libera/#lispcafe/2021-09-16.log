[00:00:48] *** Joins: retropikzel (~retropikz@2001:999:20e:11a2:f40c:d2e0:4c4e:e45f)
[00:01:20] *** Joins: rogersm (~rogersm@90.166.177.48)
[00:02:55] *** Quits: rogersm (~rogersm@90.166.177.48) (Client Quit)
[00:03:16] *** Joins: fengshaun (~fengshaun@S010680615f0c2c0a.cg.shawcable.net)
[00:03:36] *** Quits: humasect (~humasect@2001:1970:57e0:4100::b247) (Remote host closed the connection)
[00:07:37] *** Quits: retropikzel (~retropikz@2001:999:20e:11a2:f40c:d2e0:4c4e:e45f) (Ping timeout: 268 seconds)
[00:13:18] <moon-child> somebody: 'javascript isn't compiled, it runs in a browser'
[00:13:26] <moon-child> [...]
[00:13:59] <shka> to be fair, i have no idea how js is implemented 
[00:14:06] <shka> currently
[00:14:33] <moon-child> it's all JIT compilers and has been for 10-15-odd years
[00:14:54] <shka> ok, makes sense 
[00:15:08] <shka> though, seems kinda inefficient
[00:15:15] <shka> a lot of browser compiling js 
[00:15:28] <shka> all around the world
[00:15:36] <moon-child> there's a baseline interpreter
[00:15:45] <moon-child> only the hot code gets compiled
[00:16:17] <shka> that's a relief
[00:16:36] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[00:16:39] <moon-child> that's how most jits work
[00:16:49] <moon-child> either they have a baseline interpreter or a reallllly dumb stage0 compiler
[00:17:55] <gilberth> Browsers could cache the the JITed code. idk if they do.
[00:17:58] <copec> The JS engines are probably the most developed performant jit engines that have been developed
[00:18:31] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 252 seconds)
[00:19:22] <copec> I've been reading the old discussion threads lately, and I wish the Wasm group would wake up and support some minimal features that could make it the one JVM to rule them all
[00:20:13] *** Joins: aeth (~aeth@user/aeth)
[00:20:23] <moon-child> ???
[00:20:35] <copec> exactly
[00:21:08] <gilberth> I wish s-expressions would have been used for the wholse host of gazillion random syntaxes.
[00:22:27] <gilberth> As the whole web stack suffers from the everything-is-a-string-syndrome.
[00:22:27] *** Joins: humasect (~humasect@2001:1970:57e0:4100::b247)
[00:23:02] <moon-child> that's the least of its problems
[00:23:02] <gilberth> And some typesetting would be nice in a browser as I demonstrated some 20+ years ago.
[00:23:30] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[00:24:16] <gilberth> moon-child: I disagree.
[00:24:42] <copec> moon people like strings
[00:25:03] <moon-child> copec: I take offsense at that
[00:25:33] <copec> hah!
[00:25:34] <moon-child> gilberth: not that the syntax isn't dumb.  It just pales in comparison to all of the other bogosities committed by the web
[00:26:06] <gilberth> It's "syntax_es_", that's the problem.
[00:26:57] *** Quits: humasect (~humasect@2001:1970:57e0:4100::b247) (Ping timeout: 268 seconds)
[00:28:37] <gilberth> In essence every damn HTML, XML, or CSS attribute has its own micro-syntax. And it's a moving target because there is no common universal syntax, like s-expressions. Could be Prolog'ish or whatever, I won't care as long as I could write a parser that still works next year.
[00:31:40] <gilberth> And then you get the constant confusion about internal versus external representation. We will still see random garbage from characters beyond US-ASCII for all eternity.
[00:32:37] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 265 seconds)
[00:33:28] <gilberth> Like me living in a certain "Stra&amp;amp;szlig;e" This is ridiculous.
[00:42:36] *** Joins: lisp123 (~lisp123@5.30.23.247)
[00:47:01] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 252 seconds)
[00:48:13] *** Joins: humasect (~humasect@2001:1970:57e0:4100::b247)
[00:49:41] *** Quits: humasect (~humasect@2001:1970:57e0:4100::b247) (Remote host closed the connection)
[00:51:56] *** Joins: humasect (~humasect@d24-235-145-145.home1.cgocable.net)
[00:52:54] *** Quits: humasect (~humasect@d24-235-145-145.home1.cgocable.net) (Remote host closed the connection)
[00:55:55] *** Quits: _Posterdati_ (~posterdat@host-79-43-209-252.retail.telecomitalia.it) (Ping timeout: 252 seconds)
[01:02:45] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[01:09:16] *** Joins: _Posterdati_ (~posterdat@host-95-235-15-123.retail.telecomitalia.it)
[01:09:42] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[01:18:07] *** Joins: lisp123 (~lisp123@5.30.23.247)
[01:22:09] *** Joins: humasect (~humasect@2001:1970:57e0:4100::b247)
[01:25:56] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 268 seconds)
[01:34:36] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[01:41:22] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[01:54:30] *** Quits: humasect (~humasect@2001:1970:57e0:4100::b247) (Remote host closed the connection)
[01:56:43] *** Joins: lisp123 (~lisp123@5.30.23.247)
[02:03:12] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[02:03:58] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 252 seconds)
[02:10:11] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[02:35:50] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 260 seconds)
[02:37:38] *** Joins: aeth (~aeth@user/aeth)
[02:54:57] <hayley> https://www.youtube.com/watch?v=7nHveHhgjNo
[02:54:58] -ixelp- Bombers ('79 Live Original Mix) - YouTube
[02:55:12] <lotuseater> morning hayley :)
[02:55:24] <hayley> Hello lotuseater
[02:56:26] * hayley uploaded an image: (99KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/iWYEHUENqKfYpKfWvEnpXYhm/v8-goes-brrrrrrr.png >
[02:56:26] <hayley> moon-child: ^^
[03:00:37] <hayley> https://mp2.dk/techblog/chowjs/ "However, most consoles don’t allow user applications to create executable code at runtime"
[03:00:38] -ixelp- ChowJS: an AOT JavaScript engine for game consoles â Tech Blog â MP2 Games Tech Blog - Deep dives into tech & gamede [...]
[03:01:10] <hayley> .oO( Maybe they're right about how consoles show off what future PCs look like in a few years... )
[03:02:21] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[03:05:21] <hayley> But if you really want, you can JIT on some microcontrollers. That makes sense.
[03:05:27] * gilberth spots more encoding bugs.
[03:09:38] <hayley> https://www.youtube.com/watch?v=N1PV115rV6U
[03:09:38] -ixelp- We Are Glass - YouTube
[03:13:11] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[03:16:30] *** Joins: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa)
[03:19:51] *** Joins: retropikzel (~retropikz@83-245-254-255-nat-p.elisa-mobile.fi)
[03:30:18] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[03:33:17] *** Joins: recordgroovy (~recordgro@50.35.20.8)
[03:36:40] <hayley> moon-child: I found the thread. God damn
[03:37:08] <hayley> No one in r/programminglanguages can fathom doing run-time optimisation apparently.
[03:37:08] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[03:38:13] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[03:40:09] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 265 seconds)
[03:41:48] *** Joins: aeth (~aeth@user/aeth)
[03:42:06] *** Joins: kakuhen (~kakuhen@user/kakuhen)
[03:58:54] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[04:05:20] <hayley> Though for bootstrapping I'd have to rig a JIT compiler to compile AOT. Wonder how well that would pan out.
[04:05:42] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[04:06:04] <hayley> I guess, at least for the compiler, I can trace the compiler self-compiling, and theoretically could do a lot of inlining.
[04:09:38] *** Quits: retropikzel (~retropikz@83-245-254-255-nat-p.elisa-mobile.fi) (Quit: Leaving)
[04:28:48] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[04:32:36] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[04:34:48] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[04:35:37] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[04:36:26] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Quit: Ping timeout (120 seconds))
[04:36:44] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[04:54:57] <hayley> mfiano: Just add a SPEED-MIXIN and all your code will go faster https://i.redd.it/m3hl70mgbvf51.png
[04:56:06] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[05:12:58] <moon-child> hayley: I think if I had to bootstrap a JIT, I would have a non-adaptive mode and use that for bootstrapping.  I guess that's taking the easy way out, but
[05:22:37] *** Quits: random-nick (~random-ni@87.116.181.5) (Ping timeout: 265 seconds)
[05:37:18] <hayley> Yeah. Though I could get some statistics from bootstrapping.
[05:55:12] *** Quits: clothespin (~awolven@2601:246:4000:1030:3843:f11f:b543:85cd) (Remote host closed the connection)
[06:28:43] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 268 seconds)
[06:39:29] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[06:41:03] *** Quits: recordgroovy (~recordgro@50.35.20.8) (Ping timeout: 268 seconds)
[06:42:50] *** Joins: recordgroovy (~recordgro@50.35.20.8)
[06:58:24] <lotuseater> now that I saw this panic!(bla) stuff from rust today again it came to my mind that the "Don't panic!" from Douglas Adams could be an additional advise from the past
[06:58:51] <moon-child> hehe
[06:59:24] <lotuseater> predicting it long ago :)
[06:59:49] <dave0> maw
[07:00:19] <lotuseater> maw dave0 
[07:00:35] <dave0> i like how earth was classified "harmless"
[07:00:47] <lotuseater> maybe rustaceans need a get_towel! macro too
[07:00:53] <lotuseater> haha yes
[07:01:37] <lotuseater> i should read the books sometime again, or watch the old films
[07:02:01] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[07:04:07] <lotuseater> "oh well, when something goes wrong in our programs it just crashes everything with leaving undefined behaviour. but it's fast!"
[07:05:01] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[07:05:22] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[07:18:07] * hayley uploaded an image: (178KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/oAaTLHhWScEgDMKuZtzYbOde/hello-cringe-department(1).png >
[07:21:52] <lotuseater> Joe :) one of my favorite notable computer scientists
[07:36:27] <White_Flame> I remember getting a linkedin invite from him
[07:37:20] <White_Flame> he accidentally boomered something and all of his email address book, including anybody on email lists he was a part of, got linkedin invites and his accounts blew up
[07:37:38] <White_Flame> something like 30,000 emails in a day
[07:38:07] <lotuseater> when was this?
[07:38:13] <White_Flame> or rather, 30k invitations and multiple emails from that
[07:38:20] <White_Flame> a couple years before he died, I'd guess
[07:38:23] <lotuseater> he passed away in April 2019 sadly :(
[07:38:30] <lotuseater> ah okay
[07:39:16] <lotuseater> i like his talks from newer talks like "the mess we're in" or "how we program multicores"
[07:39:35] *** Joins: humasect (~humasect@2001:1970:57e0:4100::b247)
[07:39:35] <lotuseater> second "talks" ← "time"
[07:42:31] <White_Flame> erlang is a great language to learn concepts from, but it's awfully focused and completely non-applicable for multithreaded handing of read-only datastructures
[07:43:20] <humasect> good to get some grasp of prolog along the way, understanding erlang's choices and etc
[07:43:26] <White_Flame> I don't think I've seen his other talks, though
[07:43:39] <lotuseater> watch them :)
[07:44:44] <lotuseater> and yes, in its domain it's strong and extraordinary (if used right and with knowledge howto)
[07:59:06] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (Ping timeout: 260 seconds)
[08:04:34] <hayley> A shared mutable data structure is just an "actor" that you can whack in a supervisor tree, and you can bail it out if it's broken.
[08:04:48] <hayley> From that point of view, shared memory is merely a pretty good micro-optimization.
[08:08:50] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[08:14:37] <hayley> https://www.reddit.com/r/ProgrammerDadJokes/comments/poxdfq/q_if_the_uk_was_the_empire_where_the_sun_never/
[08:17:28] *** Quits: semz (~none@user/semz) (Ping timeout: 268 seconds)
[08:24:01] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[08:24:46] *** Joins: notzmv (~zmv@user/notzmv)
[08:28:25] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (Ping timeout: 252 seconds)
[08:29:32] *** Joins: semz (~none@user/semz)
[08:31:11] <moon-child> I wonder how much inter-core shared memory wrangling looks like a 'classic' (networked) distributed system
[08:32:20] <hayley> Snooping caches have an inter-core bus, I suppose. And shared caches are like switches.
[08:35:30] *** Quits: recordgroovy (~recordgro@50.35.20.8) (Ping timeout: 260 seconds)
[08:36:08] *** Joins: recordgroovy (~recordgro@50.35.20.8)
[08:49:56] *** Quits: fengshaun (~fengshaun@S010680615f0c2c0a.cg.shawcable.net) (Ping timeout: 268 seconds)
[08:56:28] *** Joins: fengshaun (~fengshaun@S010680615f0c2c0a.cg.shawcable.net)
[09:11:34] *** Joins: lisp123 (~lisp123@5.30.23.247)
[09:16:34] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 260 seconds)
[09:27:51] <hayley> In typical low-level concurrent fashion, I thought my new table was faster (for threads which repeatedly inserted then deleted entries), but then my real CHT apparently got faster.
[09:44:06] <mfiano> err, what?
[09:45:26] <hayley> I was testing my new concurrent hash table, which uses buckets, and is thus terrible at everything other than not having to resize to remove dead keys.
[09:45:55] <mfiano> i mean, speed-mixin
[09:46:13] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[09:46:15] <hayley> Yeah, just (defclass speed-mixin () ()) and throw that in.
[09:46:54] <mfiano> I am not awake enough to know what that joke was in reply to.
[09:46:55] <moon-child> cmucl actually implemented callsite optimization back in the late 90s.  But they only do it for methods that dispatch on subclasses of a class called 'speed-mixin'
[09:47:08] <moon-child> so you have to use that if you wanna go fast
[09:48:16] * hayley asks what AI is used to compile JavaScript in the V8 compiler.
[09:49:16] *** Joins: lisp123 (~lisp123@5.30.23.247)
[09:54:16] <hayley> The good answer would be "instruction selection is state space search" but that's not the answer we'll get.
[09:56:43] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[09:57:13] <hayley> Or, idk, some maximisation problem? I don't know my AI terms.
[09:58:37] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 252 seconds)
[10:02:04] <hayley> https://hackaday.com/2021/09/15/german-experiment-shows-horses-beating-local-internet-connections/
[10:02:05] -ixelp- German Experiment Shows Horses Beating Local Internet Connections | Hackaday
[10:03:21] <moon-child> modern day rfc1149?
[10:24:17] <contrapunctus> rofl
[10:32:33] *** Joins: lisp123 (~lisp123@5.30.23.247)
[10:55:38] *** Joins: shka (~herr@109.231.62.239)
[11:23:42] <hayley> https://www.youtube.com/watch?v=QKAb_J_NGyQ
[11:23:43] -ixelp- Complex - YouTube
[11:26:11] <humasect> patientce
[11:28:09] * hayley still tries to get phone-scammed about an Amazon purchase.
[11:28:31] <humasect> hello i've received too many gpus?
[11:28:47] <hayley> Something about an iPhone 11 purchase.
[11:29:17] * hayley uploaded an audio file: (372KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/fvWvomaeWnwYUVzxYrhilgXW/phone.mp3 >
[11:29:54] <hayley> Prior I was asked if I had an Android or Apple phone, and I said I had "a cheap dumb phone".
[11:31:57] <humasect> heh ? 
[11:32:09] <humasect> plugged in my ext audio for this ?
[11:32:25] <humasect> symboilcs?
[11:32:44] * hayley uploaded an image: (48KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/BGTLPRQpEvGAzpWjksiFcaoz/symbolics3600-phone.JPG >
[11:32:47] <hayley> Pictured: Symbolics 3600 phone
[11:32:56] <humasect> yeh ok
[11:33:04] <humasect> nice and efficient
[11:33:13] <humasect> bet its quiet too
[11:33:54] <humasect> rather use ps vita with 3g sim 
[11:34:08] <humasect> rare and 1/2hr battery but 
[11:34:11] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 268 seconds)
[11:34:52] <shka> cheap dump phones are the best phonets
[11:35:25] <humasect> some dudes i know use basic flip phone, i'd rather that for actual phone. not mix it with computing
[11:35:30] <humasect> or gaming
[11:35:37] <shka> yeah
[11:35:50] <shka> it could be me xD
[11:36:05] <humasect> trying to pick up touchscreen phone like handling eggs, careful dont open screen press this button touch this open that app, ahh
[11:36:18] <shka> good for battery life, no risk of damaging expensive hardware in your pocket, can be used in gloves
[11:36:44] <humasect> yeah
[11:36:56] <shka> and you can use it to make calls
[11:37:10] <shka> which is what i use phones for anyway
[11:37:29] <humasect> yeah
[11:37:39] <humasect> this one moto e6 lights up whenever its jostled
[11:38:03] <hayley> I dunno why they keep calling me, because I just troll them rather than get scammed every time.
[11:38:09] <humasect> my bed is blankets on the floor but it still activates. so have to be very surgical with operating thems 
[11:38:39] <humasect> im good at getting scamed
[11:38:41] <humasect> mmm
[11:38:43] <humasect> +++
[11:39:11] <humasect> the iphone forces me to have PIN, the android does not
[11:39:14] <moon-child> I tried responding to spam email with bait a couple of time, never got a response
[11:39:40] <moon-child> which--idk why they would send it in the first place in that case
[11:40:06] <hayley> Still, do they expect everyone to know if they have an Apple or Android phone?
[11:40:42] <humasect> yes what
[11:41:02] <hayley> Apple users usually know, but I'd wager "it runs Android" is harder to guess when there's multiple price points and brands and vendor abberations^Wdistributions of the OS.
[11:41:19] <humasect> yay for standards
[11:42:29] <humasect> not apple = android
[12:01:27] *** Joins: cranium (~cranium@user/cranium)
[12:14:40] <kakuhen> i wish scammers would call me
[12:15:18] <kakuhen> I should start listening to those websites that beg you to give a phone number; they probably sell huge lists of phone numbers to these scammers
[12:16:01] <hayley> https://www.youtube.com/watch?v=mKWHa65cmns the telemarketer song
[12:16:01] -ixelp- Dead Souls (2010 Remaster) - YouTube
[12:33:14] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:36:00] *** Joins: hendursa2 (~weechat@user/hendursaga)
[12:36:18] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:39:33] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:52:10] *** _Posterdati_ is now known as Posterdati
[12:53:03] *** Quits: humasect (~humasect@2001:1970:57e0:4100::b247) (Read error: Connection reset by peer)
[12:53:14] *** Joins: humasect (~humasect@2001:1970:57e0:4100::b247)
[13:04:41] *** Joins: ln43 (~ln43@user/ln43)
[13:16:26] *** Quits: ln43 (~ln43@user/ln43) (Ping timeout: 260 seconds)
[13:18:27] * hayley uploaded an image: (57KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/lMnvHvLWDGwpNVqwkZutzmav/hunchentoot-latency.png >
[13:19:43] <hayley> So I installed the Azul JVM to test ABCL on the C4 collector, and the results are...better from the 30th percentile somehow.
[13:20:45] <hayley> No, I misread, it's always better than G1, but better than Clozure past the 30th percentile.
[13:43:11] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Quit: Leaving...)
[13:45:26] *** Quits: humasect (~humasect@2001:1970:57e0:4100::b247) (Quit: Leaving...)
[14:04:50] <gilberth> Good morning #lispcafe!
[14:12:23] <dave0> maw gilberth !
[14:16:25] <shka> morning?
[14:16:28] <shka> close enough i guess
[14:16:33] * gilberth spots extra space and is quick in reclaiming it.
[14:17:00] <gilberth> shka: It's pretty early for the nocturnal one.
[14:18:40] <shka> yeah, gilberth has moved like from https://www.youtube.com/watch?v=OnyL0h40z7g to https://www.youtube.com/watch?v=UrfFHzqGBZI
[14:18:40] -ixelp- Lydia Lunch - Suicide Ocean - YouTube
[14:18:51] <shka> going mainstream hours :P
[14:20:49] <gilberth> Yes, rather unfortunate as the former is a better fit.
[14:21:27] <shka> at least it is not https://www.youtube.com/watch?v=2bFtJO2C65c
[14:21:27] -ixelp- Lydia Lunch - Afraid Of Your Company - YouTube
[14:22:50] <gilberth> Heh.
[14:24:28] <gilberth> Hmm, those \special{} are not laid out as letters, but are still in the right position in the stream of glyphs within a DVI.
[14:29:53] *** Joins: lisp123 (~lisp123@5.30.23.247)
[14:31:29] <hayley> Good morning gilberth!
[14:31:59] <hayley> OTOH with my investigation, it's also possible I'm measuring the Azul compiler which uses LLVM somehow.
[14:32:11] * hayley uploaded an image: (62KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/GMgFmmwnUqXaogfluRdHRqIA/hunchentoot-latency.png >
[14:32:17] <hayley> Since I neglected it, here is the same graph with the load figures.
[14:34:07] *** Joins: santiagopim (~user@84.78.249.190)
[14:34:35] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 265 seconds)
[14:35:16] <gilberth> hayley: Your data is curious. Why do C4 and CCL have the very same steps between .1% and .01%. And why does ECL have this very sharp raise at 20%? And what the f*** is it that makes SBCL take so long?
[14:36:26] <gilberth> r/s = requests per second?
[14:37:53] <hayley> Yes.
[14:40:43] * hayley runs DaCapo benchmarks
[14:41:04] <hayley> Okay, now why is the damn Azul VM like twice as fast? Does it set the heap size differently or something?
[14:42:06] <hayley> I mean, it's not like e.g. LispWorks is twice as fast as SBCL.
[14:42:37] <gilberth> LispWorks is CMUCL also.
[14:43:20] <hayley> I'm sure there's similar lineage in Java.
[14:46:13] <hayley> Well, I found OpenJDK is faster on the lusearch test. And I've only run lusearch and jython.
[14:47:08] <hayley> The unfortunate thing is that I'd have to port the benchmarks to test in Lisp.
[14:49:48] <hayley> Still, you have to wait for the JIT to kick in. Then after some more warmup the execution time goes ___
[14:51:20] *** Quits: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa) (Remote host closed the connection)
[14:53:31] <gilberth> Is it only me or Google? I can't find anything, it seems like Google just shows me what is deemed popular somehow and not what would be relevant.
[14:55:00] <gilberth> I mean, I search for "TeX blah" and get results for doing things in MS Word.
[14:55:37] <hayley> Usually works for me.
[14:56:33] <hayley> Oh shit, the EULA for the JVM says I can't mention anything about performance.
[14:56:49] <hayley> https://www.azul.com/wp-content/uploads/Azul-Platform-Prime-Evaluation-Agreement.pdf "3. Confidentiality"
[14:56:55] <gilberth> Not for me. I would expect that my search terms appear somewhere in the search result.
[14:57:24] <gilberth> hayley: That is very silly of that EULA.
[14:57:28] <hayley> Just...forget that graph okay?
[14:57:44] <hayley> Is that even legal?
[14:58:36] <hayley> Can I say that #lispcafe is an internal discussion room for Applied Language?
[14:59:32] *** Joins: random-nick (~random-ni@87.116.176.198)
[15:02:51] <hayley> gilberth: Do you or your wife know if they can really enforce that?
[15:03:38] <Gnuxie> it's a pretty good eula clause
[15:04:01] <Gnuxie> it stops someone putting your VM in a biased benchmark marketting slide for their VM
[15:04:49] <hayley> That's the point, yes, but it makes discussing anything hard.
[15:06:14] <hayley> Especially when I have results which make it look good--oh, does that count as confidential information? Does one bit (good/bad) cause their business to crumble?
[15:10:49] <Gnuxie> well, i don't think they'll sue someone talking in private, but if you go on hackernews saying their VM is bad they will get angry 
[15:10:52] <Gnuxie> because yes, it makes their business crunble
[15:11:19] <Gnuxie> they might turn a blind eye to positive benchmarks 
[15:11:22] <hayley> Is #lispcafe private?
[15:11:33] <Gnuxie> well it's not got Azul customers in it has it 
[15:12:10] <Gnuxie> well, it could have, but not ones that don't have micro trust in benchmarks 
[15:12:18] <hayley> The restrictions are for the free VM, and I guess it's rather that they complain you slandered them, so they don't have as many customers.
[15:14:50] <hayley> They'd spend like $10042069 on servers and VMs, I hope they're good about it.
[15:25:59] <gilberth> hayley: It would surprise me when that EULA term could be enforced here. I have zero knowledge about anglosaxon law, sorry.
[15:26:19] <hayley> Lucky you.
[15:26:38] <hayley> Anyways, here is JITing by copy and pasting machine code https://arxiv.org/pdf/2011.13127.pdf
[16:15:30] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[16:16:31] *** Quits: X-Scale (~ARM@92.250.99.192) (Ping timeout: 252 seconds)
[16:16:49] *** X-Scale` is now known as X-Scale
[16:32:04] *** Joins: X-Scale` (~ARM@83.223.226.16)
[16:32:31] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 265 seconds)
[16:33:25] *** X-Scale` is now known as X-Scale
[16:44:23] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Quit: WeeChat 3.2.1)
[16:45:59] *** Joins: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa)
[17:08:18] * hayley still tries to poke holes in Gil Tene's GC logic.
[17:09:14] <hayley> So a read barrier is preferable to a write barrier as apparently mutation rate goes up with allocation rates. Already I am imagining that copying and functional data structures don't obey that rule, and they allocate a lot of crap.
[17:10:05] <hayley> But, surely then the read rate goes up too? You're not just mutating objects for the hell of it, you want to compute something and get a result.
[17:17:23] *** Joins: selwyn (~selwyn@user/selwyn)
[17:42:41] *** Quits: hendursa2 (~weechat@user/hendursaga) (Quit: hendursa2)
[17:43:28] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:45:16] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[17:53:50] <gilberth> More bugs! There is a file on a network volume macOS cannot see. This is not funny anymore, Apple. Why, oh, why, is it getting worse with each upgrade?
[18:02:13] * hayley uploaded an image: (182KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/GJjrHQGzmBOzIbedFUfrMYIP/david-ungar-complex-colour-map.jpg >
[18:02:51] <hayley> Mrw I find evidence of my grand unified theory of "radical" sucking at computing
[18:05:05] <gilberth> <Page-down> is not working in Preview.app. Do they even test their stuff?
[18:07:34] <hayley> Helps when you can't get keyboards with those pesky buttons on them.
[18:09:22] <gilberth> Haha. The scroll-wheel isn't working either to view the next page in a PDF I have. It works fine with 10.10, but not with 10.15. Is the minor version number measured in kilo-bugs?
[18:11:28] <hayley> I would like to thank David Ungar for introducing me to the values-principles-practices line of analysis nonetheless. By focusing on the general principles at work, I can account for a lot of stupidity apparently.
[18:11:48] <hayley> Dunno, IIRC I stopped using a MacBook from 10.12 or so.
[18:12:43] <gilberth> Yes, milady. So it'll be ctwm for me?
[18:13:21] <hayley> ctwm?
[18:13:40] <gilberth> The window manager. For X11.
[18:13:46] <hayley> Right.
[18:14:45] <gilberth> Does Linux have a reasonable fast PDF viewer yet?
[18:15:16] <dave0> nite all
[18:15:28] <gilberth> Take care, dave0!
[18:15:50] <dave0> byes gilberth 
[18:15:53] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:16:10] <lotuseater> I like zathura.
[18:16:44] <hayley> evince is fine for me.
[18:17:13] <hayley> The SICL book, some 200 pages or so, is snappy enough to load when I recompile it far too frequently.
[18:18:05] <recordgroovy> Second on zathura. Loads instantly, and live-reloads docs, which covers all my needs. Sounds like evince does that, too
[18:21:31] <lotuseater> and it's about the keybindings :)
[18:24:37] <gilberth> lotuseater: Seem to be quite fast. Does it have a single page view?
[18:24:54] <gilberth> Man page does not mention it.
[18:26:34] <shka> okular is completely fine for me
[18:26:46] <shka> i guess i don't read THAT fast
[18:29:05] <gilberth> Well, I am used to ghostscript essentially, which is slow. I want to navigate fast in a huge spec or data sheet and don't read PDFs cover to cover. And: I would need a go-back-to-where-i-came-from function.
[18:30:16] <lotuseater> oh I don't know exactly, but with the keys a, s, and d you can switch view modes
[18:30:45] <gilberth> I mean: ancient macOS is fine, the more recent, the worse. This is why I don't upgrade, but now I have a Mac mini which came with 10.15 or sth, which I'd like to use instead of my MacBook.
[18:30:56] <lotuseater> yes the go back where i came from is also possible via bookmarks
[18:32:25] *** Joins: lisp123 (~lisp123@5.30.23.247)
[18:32:50] <gilberth> lotuseater: Neither of which does what I want, short of disabling navigation somehow. Brilliant.
[18:33:18] *** sm2n_ is now known as sm2n
[18:34:00] <lotuseater> öhm
[18:36:52] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 252 seconds)
[18:36:57] <gilberth> Anyhow, I am making progress, TeX is fine with my fake font metrics and I get fixed space layout now for sane conversion of the rendered content to plain text. Though \special{} isn't particular nice. For transporting meta-information, I'd rather experiment with a font having chars being 1/2^16 Knuth-pt wide, which is the smallest, as a width of zero indicates that the glyph isn't available.
[18:38:26] <lotuseater> for what is \special{} again? i think never used it myself
[18:42:18] <lotuseater> ah okay for sending things to the dvi
[19:05:08] *** Joins: selwyn (~selwyn@user/selwyn)
[19:07:23] *** Quits: selwyn (~selwyn@user/selwyn) (Remote host closed the connection)
[19:07:48] *** Joins: selwyn (~selwyn@user/selwyn)
[19:27:06] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.2)
[19:27:28] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[19:29:21] <gilberth> lotuseater: Yes, I need an OOB channel.
[19:30:48] <lotuseater> oki :)
[19:31:13] *** Joins: aeth_ (~aeth@user/aeth)
[19:31:28] *** Quits: aeth (~aeth@user/aeth) (Killed (NickServ (GHOST command used by aeth_)))
[19:31:33] *** aeth_ is now known as aeth
[19:32:56] *** Quits: makomo (~makomo@user/makomo) (Ping timeout: 252 seconds)
[19:36:10] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[19:39:34] *** Quits: CrashTestDummy (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 260 seconds)
[19:45:50] *** Quits: cranium (~cranium@user/cranium) (Quit: Leaving)
[19:47:09] *** Joins: makomo (~makomo@user/makomo)
[19:51:33] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[19:57:03] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.2)
[19:57:34] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[20:04:41] *** Quits: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa) (Remote host closed the connection)
[20:11:39] *** Quits: raeda_ (~raeda@72.49.219.33) (Quit: Leaving)
[20:12:03] *** Joins: raeda (~raeda@72.49.219.33)
[20:13:15] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[20:23:50] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[20:37:17] <mfiano> zathura is nice for PDF rendering, though only 1 of the two PDF backend extensions is worth anything :)
[20:40:33] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[20:47:28] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[20:49:40] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.2)
[20:54:22] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[21:10:27] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[21:15:44] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[21:20:50] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[21:57:15] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[22:04:18] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[22:14:27] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[22:29:06] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[22:30:20] *** Joins: clothespin (~awolven@2601:246:4000:1030:e095:798a:5b2a:ec81)
[22:35:52] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[22:36:12] <gilberth> ANSI-CL as plain text: <http://clim.rocks/gilbert/tex/dpans.0.txt> --- work in progress.
[22:37:13] <moon-child> ooh, nice
[22:37:20] <moon-child> soon: 'man print-unreadable-object'
[22:37:43] <gilberth> Heh. If you wish, sure.
[22:40:28] <lotuseater> hui
[22:42:42] <gilberth> I might offer a proper plain text rendering with smaller margins and hyphenation. I set the margins that large because code examples would see line breaks otherwise. My fake font has 6pt per char, while cmtt9 as used for those code sampls has 4.725pt per char.
[22:44:08] <gilberth> I chose 6pt because a lot of dimensions as set in the dpans TeX sources are set as multiples of 0.5pc, and 0.5pc=6pt, works nicely.
[23:00:45] <lotuseater> wow this looks really amazing https://www.youtube.com/watch?v=MHwdMBagLKI
[23:00:45] -ixelp- The Last Faith - A Bloodborne & Castlevania Inspired Dark Gothic Metroidvania Adventure! (Prototype) - YouTube
[23:13:57] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[23:18:40] <pjb> gilberth: strange line length: (length "15.1.1.3.1.1 Fill Pointers .......................................................................15--1") #| --> 103 |# 
[23:18:52] *** Joins: selwyn (~selwyn@user/selwyn)
[23:20:32] <pjb> gilberth: note that there are unicode superscript and subscript characters (digits and a few letters and symbols).  Perhaps they could be used instead of ascii-art exponents/subscripts?
[23:21:46] <pjb> Otherwise, it looks nice. This should definitely be developped.  A 80-column version for the terminal would be great, as well as a 96, 128 or 132 column one. (I guess you can say the 103-column is a 128-column version).
[23:24:09] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
[23:25:18] <gilberth> pjb: I am aware of those unicode glyphs. But a plain text rendering is only a by-product of what I really want. And yes, an 80-column version would definitely be nice, but I really don't want to have line breaks in the code examples. Otherwise the 8 characters indent could be deleted for more room.
[23:28:30] <gilberth> The code examples itself are 80 chars wide at places, and I'd like some indent, so different width versions is a great suggestion.
[23:29:20] <selwyn> https://nitter.net/pic/media%2FE_Y3B7eWEAQ2jCq.jpg%3Fname%3Dorig
[23:33:33] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[23:33:36] <shka> https://www.youtube.com/watch?v=xHlBdebjpyQ
[23:33:36] -ixelp- Technology Democratized Media | US Political Polarization - YouTube
[23:35:27] <shka> interesting podcast
[23:35:52] <shka> especially in the context of the daily commute in the usa
[23:43:51] *** Quits: ec_ (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[23:50:45] *** Joins: ec_ (~ec@gateway/tor-sasl/ec)
