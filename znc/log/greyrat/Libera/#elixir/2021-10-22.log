[00:14:46] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[00:16:32] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[00:26:02] *** Joins: ahappydeath (~ahappydea@user/ahappydeath)
[00:27:01] *** Joins: ozoned (odoood@gateway/vpn/protonvpn/odoood)
[00:29:11] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Ping timeout: 264 seconds)
[00:30:26] *** Quits: ahappydeath (~ahappydea@user/ahappydeath) (Ping timeout: 260 seconds)
[00:31:51] *** Joins: Seaduck (~seaduck@2001:19f0:5:d68:5400:ff:fe75:209e)
[00:32:21] *** Joins: ahappydeath (ahappydeat@user/ahappydeath)
[00:35:48] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[00:36:09] *** Quits: Gustavo6046_ (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[00:36:13] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[00:36:40] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[00:53:58] *** Joins: ur5us (~ur5us@2406:e002:6c33:6d01:90c2:1bd2:83db:98)
[01:03:34] *** Quits: ozoned (odoood@gateway/vpn/protonvpn/odoood) (Ping timeout: 260 seconds)
[01:07:15] *** Quits: wonko (~wjc@62.115.229.50) (Ping timeout: 265 seconds)
[01:18:16] *** Quits: mouseghost (~draco@user/mouseghost) (Quit: mew wew)
[01:20:56] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[01:22:15] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[01:27:12] *** Joins: Greenlight (~nobody@67.69.69.132)
[01:32:38] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[01:35:45] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[01:54:15] *** Quits: Greenlight (~nobody@67.69.69.132) (Quit: Leaving)
[02:12:04] *** Joins: livoreno (~livoreno@user/notzmv)
[02:18:42] *** Quits: gitgood (~gitgood@80-44-12-204.dynamic.dsl.as9105.com) (Ping timeout: 260 seconds)
[02:22:36] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[02:29:16] *** Joins: gitgood (~gitgood@80-44-12-204.dynamic.dsl.as9105.com)
[02:48:55] *** Quits: stepnivlk (uid522743@helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[02:49:00] *** Quits: ahappydeath (ahappydeat@user/ahappydeath) (Ping timeout: 260 seconds)
[02:51:17] *** Joins: hendursaga (~weechat@user/hendursaga)
[02:54:30] *** Joins: eremitah (~int@191.35.222.153)
[02:54:30] *** Quits: eremitah (~int@191.35.222.153) (Changing host)
[02:54:30] *** Joins: eremitah (~int@user/eremitah)
[02:55:05] *** Quits: eremitah (~int@user/eremitah) (Client Quit)
[02:55:46] *** Joins: eremitah (~int@user/eremitah)
[03:15:23] *** Quits: ur5us (~ur5us@2406:e002:6c33:6d01:90c2:1bd2:83db:98) (Ping timeout: 264 seconds)
[03:41:33] *** Joins: ur5us (~ur5us@2406:e002:6c33:6d01:e4a1:448d:2cb1:fbb6)
[03:43:38] *** Quits: gitgood (~gitgood@80-44-12-204.dynamic.dsl.as9105.com) (Ping timeout: 260 seconds)
[04:03:42] *** Quits: Ilyu_ (~quassel@gateway/vpn/pia/ilyu) (Ping timeout: 260 seconds)
[04:03:45] *** Joins: Ilyu (~quassel@gateway/vpn/pia/ilyu)
[04:28:51] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[04:28:54] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[04:31:44] *** Gustavo6046_ is now known as Gustavo6046
[04:41:31] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[04:43:02] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[04:57:46] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[04:58:57] *** Joins: hendursaga (~weechat@user/hendursaga)
[05:10:08] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[05:10:24] *** Joins: justicefries (~default@2600:1700:9850:1a20:7152:a177:5b08:7dfc)
[05:10:31] *** Parts: justicefries (~default@2600:1700:9850:1a20:7152:a177:5b08:7dfc) ()
[05:14:36] *** Joins: justicefries (sid26447@id-26447.tinside.irccloud.com)
[05:24:09] *** Joins: livoreno (~livoreno@user/notzmv)
[05:56:50] *** Quits: triskite3_ (uid414920@id-414920.uxbridge.irccloud.com) (Ping timeout: 260 seconds)
[05:57:08] *** Quits: kwmiebach (sid16855@id-16855.tinside.irccloud.com) (Ping timeout: 258 seconds)
[05:57:25] *** Quits: rjk (sid809@id-809.uxbridge.irccloud.com) (Ping timeout: 252 seconds)
[05:57:25] *** Quits: justicefries (sid26447@id-26447.tinside.irccloud.com) (Ping timeout: 260 seconds)
[05:57:25] *** Quits: Nicd (sid11783@user/nicd) (Ping timeout: 260 seconds)
[05:58:31] *** Quits: benwilson512 (sid71699@id-71699.ilkley.irccloud.com) (Ping timeout: 252 seconds)
[05:58:31] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (Ping timeout: 252 seconds)
[05:58:38] *** Joins: benwilson512_ (sid71699@ilkley.irccloud.com)
[05:59:23] *** Joins: rjk (sid809@uxbridge.irccloud.com)
[05:59:34] *** Joins: sa (sid1055@tinside.irccloud.com)
[05:59:42] *** Joins: justicefries (sid26447@tinside.irccloud.com)
[06:00:31] *** Joins: goepsilongo (~goepsilon@2603-7000-ab00-62ed-d88f-6b90-d971-4130.res6.spectrum.com)
[06:01:05] *** Joins: Nicd (sid11783@user/nicd)
[06:11:46] *** Joins: kwmiebach (sid16855@tinside.irccloud.com)
[06:13:16] *** Joins: triskite3_ (uid414920@uxbridge.irccloud.com)
[06:14:42] *** Joins: mahmutov (~mahmutov@37.155.16.166)
[06:28:26] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[06:28:39] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[06:47:10] *** Joins: Celeo (~Celeo@user/celeo)
[06:49:45] *** Quits: Celeo (~Celeo@user/celeo) (Client Quit)
[06:51:52] *** Quits: siiky (~siiky@2001:8a0:ff6e:a500:b7d6:22ca:feb1:2b80) (Ping timeout: 252 seconds)
[06:53:54] *** Joins: siiky (~siiky@2001:8a0:ff62:7000:ffc3:4eda:f0a:bafe)
[07:08:00] *** Quits: mahmutov (~mahmutov@37.155.16.166) (Ping timeout: 260 seconds)
[07:11:19] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[07:12:13] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[07:14:34] *** Gustavo6046_ is now known as Gustavo6046
[07:19:44] *** Quits: goepsilongo (~goepsilon@2603-7000-ab00-62ed-d88f-6b90-d971-4130.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[07:50:47] *** Quits: ur5us (~ur5us@2406:e002:6c33:6d01:e4a1:448d:2cb1:fbb6) (Ping timeout: 264 seconds)
[08:09:13] *** Joins: LostKobrakai_ (~LostKobra@mue-88-130-59-123.dsl.tropolys.de)
[08:09:16] *** LostKobrakai_ is now known as LostKobrakai[awa
[08:10:23] *** Quits: LostKobrakai[awa (~LostKobra@mue-88-130-59-123.dsl.tropolys.de) (Client Quit)
[08:33:37] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 252 seconds)
[08:38:35] *** Joins: voltone (~voltone@2a02:14c:8a60:2a:850:21cb:5ab4:9b0d)
[08:43:26] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[08:44:17] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[08:53:18] *** Quits: voltone (~voltone@2a02:14c:8a60:2a:850:21cb:5ab4:9b0d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:54:00] *** Joins: voltone (~voltone@2a02:14c:8a60:2a:850:21cb:5ab4:9b0d)
[09:01:00] *** Quits: voltone (~voltone@2a02:14c:8a60:2a:850:21cb:5ab4:9b0d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:03:44] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[09:03:44] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[09:06:32] *** Gustavo6046_ is now known as Gustavo6046
[09:08:18] *** Joins: voltone (~voltone@2a02:14c:8a60:2a:24d2:522e:4533:3417)
[09:08:33] *** Quits: voltone (~voltone@2a02:14c:8a60:2a:24d2:522e:4533:3417) (Client Quit)
[09:30:00] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[09:34:34] *** Quits: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 260 seconds)
[09:56:43] *** val is now known as VAL
[09:57:15] *** Quits: equil (~u@user/eq) (Quit: WeeChat 2.8)
[09:59:07] *** Joins: equil (~u@user/eq)
[10:01:00] *** Joins: ArctVaulMarsHMPJ (~pjetcetal@128-71-225-36.broadband.corbina.ru)
[10:01:21] *** Quits: ArctVaulMarsHMPJ (~pjetcetal@128-71-225-36.broadband.corbina.ru) (Read error: Connection reset by peer)
[10:08:09] *** Joins: chgr (~ek@nat-91-137-31-13.net.encoline.de)
[10:22:44] *** Joins: ur5us (~ur5us@2406:e002:6c33:6d01:90c2:1bd2:83db:98)
[10:26:45] *** Joins: LostKobrakai_ (~LostKobra@2001:16b8:2de4:ea00:ed71:839c:cf5b:3fb3)
[10:26:56] *** LostKobrakai_ is now known as LostKobrakai[awa
[10:28:13] *** Quits: LostKobrakai[awa (~LostKobra@2001:16b8:2de4:ea00:ed71:839c:cf5b:3fb3) (Client Quit)
[10:40:31] *** Joins: LostKobrakai_ (~LostKobra@2001:16b8:2de4:ea00:ed71:839c:cf5b:3fb3)
[10:52:20] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[10:55:01] *** Quits: chgr (~ek@nat-91-137-31-13.net.encoline.de) (Quit: WeeChat 3.2)
[10:59:51] <serafeim> hello friends
[11:00:13] <serafeim> is it possible to send an event from a live_component to its parent live view ?
[11:01:48] <serafeim> just use this `send self(), {:updated_card, %{socket.assigns.card | title: title}}` ? 
[11:08:07] <serafeim> also is there a reason the send function is called without parenthe4ses ?
[11:08:40] <hauleth> Personal preference of the author
[11:08:49] <hauleth> I always ise parentheses
[11:08:57] <hauleth> IIRC the formatter will add them anyway
[11:10:12] <serafeim> this is from the official docs so i don't think that the preference of the auther is relevant
[11:10:47] <serafeim> i got it from here https://hexdocs.pm/phoenix_live_view/Phoenix.LiveComponent.html
[11:18:54] *** Joins: floriann (~Thunderbi@2a02:8106:2e:1300:ea6a:64ff:fe67:369e)
[11:32:27] <hauleth> serafeim: well, these docs are written by human being
[11:32:38] <serafeim> yes no problem
[11:32:42] <hauleth> Each human being have their own preferences
[11:32:44] <serafeim> i just wanted to know if there's some trickery
[11:32:53] <hauleth> Nah
[11:33:08] <serafeim> because i also have seen elsewhere the send to be written without parenthesis
[11:33:15] <serafeim> so maybe it's idiomatic like that
[11:33:25] <hauleth> I always use with parens
[11:35:16] <hauleth> some people treat it like an operatoe
[11:35:27] <hauleth> s/toe/tor/
[11:48:04] <serafeim> ah
[11:56:21] *** Quits: lessless (~lessless@ip.82.144.211.11.stat.volia.net) (Ping timeout: 245 seconds)
[12:03:57] *** Joins: dcz_ (~dcz@user/dcz)
[12:06:17] *** Joins: withershins (~craig@pa49-184-231-80.pa.vic.optusnet.com.au)
[12:07:50] *** Quits: withersh1 (~craig@pa49-184-233-216.pa.vic.optusnet.com.au) (Ping timeout: 260 seconds)
[12:16:28] <serafeim> how to return a 403 from an elixir controller action  ?
[12:18:10] *** Quits: Ilyu (~quassel@gateway/vpn/pia/ilyu) (Ping timeout: 258 seconds)
[12:18:31] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[12:29:11] <benwilson512_> serafeim: what have you tried so far?
[12:29:32] *** benwilson512_ is now known as benwilson512
[12:32:27] <serafeim> benwilson512: found it `Plug.Conn.send_resp(conn, 403, "")`
[12:32:45] <serafeim> however the docs are misleading because they have a put_status function there that ain't working properly
[12:33:02] <serafeim> this one https://hexdocs.pm/plug/Plug.Conn.html#put_status/2
[12:33:03] <benwilson512> serafeim: put_status does work, did you forget to halt afterward?
[12:33:29] <serafeim> i expected Plug.Conn.put_status(conn, 403) to work. it didn't
[12:33:38] <serafeim> benwilson512: do you see any mention of "halt" in the docs ? 
[12:33:58] <serafeim> if it's there and i missed it then it's my fault
[12:34:35] <benwilson512> serafeim: not interested in finding fault :) I'm just noting that most functions in plug do not halt the conn
[12:34:52] <benwilson512> send_resp specifically calls out that it does
[12:35:15] <benwilson512> or rather sorry that it does _not
[12:35:40] <benwilson512> but not halting is the default for basically every call
[12:35:51] <benwilson512> beyond that, put_status doesn't actually send a response
[12:36:05] <benwilson512> the module docs describe the overall structure of how to compose the functions
[12:36:31] <serafeim> ok i think i understand now... i didn't know all this though because i just googled and found out this answer
[12:36:36] <serafeim> this doc i mean
[12:37:01] <benwilson512> the Plug docs are definitely a little concise
[12:37:04] <serafeim> i thin the docs would be improved if the put_status docs (https://hexdocs.pm/plug/Plug.Conn.html#put_status/2) had an example that was actually working
[12:37:22] <serafeim> i.e `Plug.Conn.put_status(conn, 200) |> Plug.Conn.halt()`
[12:37:35] <serafeim> yes i know i could do a PR
[12:38:18] <benwilson512> well
[12:38:31] <benwilson512> I think the reason it doesn't immediately halt is that you may want to do other things
[12:38:43] <benwilson512> the module docs could definitely use more complete examples though
[12:39:15] *** Quits: ur5us (~ur5us@2406:e002:6c33:6d01:90c2:1bd2:83db:98) (Ping timeout: 258 seconds)
[12:39:15] <serafeim> yes i understand
[12:40:29] <serafeim> let's suppose i've got a list of strings in my live view socket. how should i use assigns when i append a string to that list ? 
[12:41:04] <serafeim> so that liveview will understand the situation and just add the added string to the dom instead of changing everything ?
[12:41:10] <serafeim> will it do it automatically ?
[12:41:35] <benwilson512> update(socket, :list_of_strings, fn list -> list ++ ["new_item"]) or https://hexdocs.pm/phoenix_live_view/dom-patching.html#temporary-assigns
[12:42:27] <serafeim> ah so i should use update instead of assigns ?
[13:01:22] *** Joins: voltone (~voltone@2a02:14c:8a60:2a:446f:cb4b:7f14:2c75)
[13:06:11] *** Quits: voltone (~voltone@2a02:14c:8a60:2a:446f:cb4b:7f14:2c75) (Client Quit)
[13:11:32] *** Joins: ur5us (~ur5us@2406:e002:6c33:6d01:90c2:1bd2:83db:98)
[13:19:37] *** Quits: ur5us (~ur5us@2406:e002:6c33:6d01:90c2:1bd2:83db:98) (Ping timeout: 252 seconds)
[13:23:58] *** Joins: ur5us (~ur5us@2406:e002:6c33:6d01:90c2:1bd2:83db:98)
[13:31:35] *** Quits: ur5us (~ur5us@2406:e002:6c33:6d01:90c2:1bd2:83db:98) (Ping timeout: 264 seconds)
[13:44:39] <serafeim> is there a way to make sure that my migrations have been applied when the server starts ?
[13:50:56] *** Quits: LostKobrakai_ (~LostKobra@2001:16b8:2de4:ea00:ed71:839c:cf5b:3fb3) (Ping timeout: 258 seconds)
[13:51:11] <dch> Erlang/OTP 24 [erts-12.1.2] [source] [64-bit] [smp:160:160] [ds:160:160:10] [async-threads:1]
[13:51:50] <dch> I'm not saying this is the ideal config for this hardware, but that is a *lot* of cores :-)
[13:52:16] *** Joins: LostKobrakai_ (~LostKobra@2001:16b8:2de4:ea00:b408:935e:6715:1eb6)
[14:23:53] <hauleth> dch: ARM? Your own machine or in cloud?
[14:24:34] <rawtaz> probably his apple watch :-)
[14:25:36] <dch> hauleth: in the clowd, but for my company project
[14:25:51] <hauleth> rawtaz: +1
[14:26:41] <hauleth> I wanted to buy ARM server to my home lab, unfortunately they do not sell them in short form, and I do not have enough depth for full rack
[14:27:01] <dch> i have a 32-core ampere arm64 server here. its amazing.
[14:27:26] <hauleth> As I am building my rack server inside an old escritoire
[14:29:05] <rawtaz> lol nice
[14:29:11] <rawtaz> classy, even
[14:30:12] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Read error: Connection reset by peer)
[14:31:44] <hauleth> rawtaz: yeah, I need to install screen with dashboard there
[14:33:21] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[14:50:52] *** Joins: fub (uid190747@id-190747.ilkley.irccloud.com)
[14:51:39] <fub> When using the phx.gen.live function, the following line of code is generated: path = Keyword.fetch!(opts, :return_to). Is there some benefit of using `Keyword.fetch!` instead of just `opts[:return_to]`?
[14:57:25] <LostKobrakai_> It doesn't return `nil` when the option is not provided, but raises
[15:03:07] *** Joins: voltone (~voltone@2a02:14c:8a60:2a:446f:cb4b:7f14:2c75)
[15:05:40] <fub> LostKobrakai_: ok. So why is it wanted in this case that an exception is thrown? https://hastebin.com/opodoriqeq.exs (this is the auto generated code)
[15:06:50] <hauleth> fub: because if the option is not passed it is programmer error
[15:07:32] <hauleth> https://github.com/elixir-lang/elixir/issues/11331 - what do you think?
[15:09:23] <Nicd> is it really an option if it's required? :P
[15:10:04] *** Quits: voltone (~voltone@2a02:14c:8a60:2a:446f:cb4b:7f14:2c75) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:11:40] <fub> LostKobrakai_: thanks
[15:12:01] <fub> totally new to elixir/phoenix and still in the process of understanding some basic stuff and why its done this way
[15:22:55] *** Joins: natrys (~natrys@user/natrys)
[15:27:09] *** Quits: LostKobrakai_ (~LostKobra@2001:16b8:2de4:ea00:b408:935e:6715:1eb6) (Ping timeout: 258 seconds)
[15:28:10] *** Joins: LostKobrakai_ (~LostKobra@2001:16b8:2de4:ea00:212b:c74:84c7:6bb1)
[15:37:34] *** Joins: gitgood (~gitgood@80-44-12-204.dynamic.dsl.as9105.com)
[15:50:35] *** Joins: nickjj (~nickjj@user/nickjj)
[16:31:24] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[16:32:36] *** Joins: hendursaga (~weechat@user/hendursaga)
[16:51:03] *** Joins: james_lavin (~jameslavi@ool-457981b2.dyn.optonline.net)
[17:18:55] *** Joins: Sgeo (~Sgeo@user/sgeo)
[17:20:34] *** Quits: eremitah (~int@user/eremitah) (Quit: quit.)
[17:20:51] *** Joins: eremitah (~int@user/eremitah)
[17:20:51] *** Quits: eremitah (~int@user/eremitah) (Client Quit)
[17:31:19] <rawtaz> something's fishy
[17:45:13] <hauleth> rawtaz: ??
[17:49:13] <rawtaz> i don't know what
[17:51:59] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 264 seconds)
[17:52:34] *** Joins: Ilyu (~quassel@gateway/vpn/pia/ilyu)
[18:04:21] *** Quits: floriann (~Thunderbi@2a02:8106:2e:1300:ea6a:64ff:fe67:369e) (Quit: floriann)
[18:06:00] *** Joins: pflanze (~pflanze@2001:1a88:19e:4500:a0c1:497c:91e:9cca)
[18:13:31] *** Quits: LostKobrakai_ (~LostKobra@2001:16b8:2de4:ea00:212b:c74:84c7:6bb1) (Ping timeout: 258 seconds)
[18:14:10] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 260 seconds)
[18:16:26] *** Joins: LostKobrakai_ (~LostKobra@2001:16b8:2de4:ea00:54b:c584:99c5:b237)
[18:40:26] *** Joins: eremitah (~int@user/eremitah)
[18:44:42] *** Quits: eremitah (~int@user/eremitah) (Client Quit)
[18:47:00] *** Joins: Bounga (~nico@82-65-32-175.subs.proxad.net)
[19:04:17] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[19:04:28] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[19:04:30] *** Quits: natrys (~natrys@user/natrys) (Ping timeout: 258 seconds)
[19:07:09] *** Gustavo6046_ is now known as Gustavo6046
[19:24:39] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[19:25:01] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[19:44:07] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[19:44:15] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Remote host closed the connection)
[19:49:21] *** Joins: wonko (~wjc@62.115.229.50)
[19:55:31] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[19:55:33] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[19:58:20] *** Gustavo6046_ is now known as Gustavo6046
[20:20:45] *** Quits: aa (~douglasco@200.146.85.128.static.gvt.net.br) (Quit: Leaving)
[20:32:28] *** Joins: natrys (~natrys@user/natrys)
[20:32:47] *** Quits: Bounga (~nico@82-65-32-175.subs.proxad.net) (Ping timeout: 264 seconds)
[20:40:56] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 245 seconds)
[20:58:01] *** Joins: emm0 (~emm@116.red-83-37-156.dynamicip.rima-tde.net)
[20:58:28] <emm0> Hi
[20:59:42] <emm0> Anyone presents?
[21:06:14] <hauleth> Probably
[21:07:51] *** Quits: emm0 (~emm@116.red-83-37-156.dynamicip.rima-tde.net) (Ping timeout: 265 seconds)
[21:08:42] *** Quits: Perry (~perry@coffee-break.at) (Quit: ZNC - http://znc.in)
[21:09:28] *** Joins: Perry (~perry@coffee-break.at)
[21:15:34] *** Joins: emm0 (~emm@116.red-83-37-156.dynamicip.rima-tde.net)
[21:15:38] *** LostKobrakai_ is now known as LostKobrakai[awa
[21:15:38] *** Quits: LostKobrakai[awa (~LostKobra@2001:16b8:2de4:ea00:54b:c584:99c5:b237) (Quit: LostKobrakai[awa)
[21:16:02] <emm0> Yess I see the users :)
[21:16:32] <emm0> Active one?
[21:16:35] <benwilson512> emm0: in general it's best to just go ahead and ask any questions you have
[21:16:48] <emm0> Oks
[21:17:12] <emm0> I want to learn Elixir, where can I start?
[21:18:15] <benwilson512> emm0: that depends a bit on how you like to learn programming languages. I'm old school and tend to like books, so the Programming Elixir book is a great way to start
[21:18:38] <benwilson512> https://elixir-lang.org/learning.html has a bunch of other great resources
[21:18:55] <emm0> And liveBooks?
[21:19:14] <benwilson512> livebook is brand new, there isn't a ton of learning material about it yet
[21:19:26] <benwilson512> once you know Elixir generally however it is very easy to use
[21:19:56] <emm0> It is like jupiter for puthon, right?
[21:20:18] <emm0> Python*
[21:23:06] <benwilson512> I believe there are similarities, but I'm not familiar enough with Jupiter to say for sure how much overlap there is
[21:26:07] *** Joins: LostKobrakai_ (~LostKobra@2001:16b8:2de4:ea00:54b:c584:99c5:b237)
[21:26:18] *** LostKobrakai_ is now known as LostKobrakai[awa
[21:27:02] *** Quits: LostKobrakai[awa (~LostKobra@2001:16b8:2de4:ea00:54b:c584:99c5:b237) (Client Quit)
[21:27:10] *** Quits: emm0 (~emm@116.red-83-37-156.dynamicip.rima-tde.net) (Ping timeout: 260 seconds)
[21:28:11] <hauleth> Jupyter is for Julia, Python, and R, it is literally in the name JuPyteR
[21:28:24] <hauleth> Jupyter is slightly different in few things
[21:28:34] <hauleth> It uses JSON for storing data
[21:29:13] <hauleth> LibeBook uses markdown files (with some additional metadata in comments)
[21:29:21] <hauleth> s/Libe/Live/
[21:29:40] <hauleth> Jupyter stores results of code cell computations in the resulting JSON
[21:29:52] <hauleth> LiveBook do not have such feature (yet?)
[21:30:32] <hauleth> Jupyter can run code only on current machine (current mean where Jupyter is running, not where oprator is running)
[21:30:51] <hauleth> LiveBook can use Erlang distributed system to run code on remote nodes
[21:58:35] *** Joins: livoreno (~livoreno@user/notzmv)
[22:01:13] *** Joins: notzmv (~zmv@user/notzmv)
[22:09:51] *** Joins: ur5us (~ur5us@2406:e002:6c33:6d01:90c2:1bd2:83db:98)
[22:16:21] *** Joins: mahmutov (~mahmutov@37.155.0.45)
[22:27:45] *** Joins: srfsh (~srfsh@user/srfsh)
[22:29:15] <rawtaz> too bad theres no public demo of livebook on the site
[22:30:23] *** Quits: ur5us (~ur5us@2406:e002:6c33:6d01:90c2:1bd2:83db:98) (Ping timeout: 264 seconds)
[22:30:23] *** Joins: Guest7 (~Guest7@ufr-132-230-194-32.eduroam-nat.uni-freiburg.de)
[22:32:31] *** Quits: srfsh (~srfsh@user/srfsh) (Remote host closed the connection)
[22:33:34] *** Joins: srfsh (~srfsh@user/srfsh)
[22:35:16] <hauleth> rawtaz: it is hard to share LiveBook in writeable way
[22:35:36] <hauleth> And it is hard to share "compiled" LiveBook IIRC
[22:35:43] <rawtaz> i see
[22:35:56] <hauleth> As there is no way to share it with "rendered" output
[22:36:04] <hauleth> So it could be read-only
[22:36:06] <hauleth> Not fun
[22:36:19] <hauleth> But IIRC you can easily it for free on Fly.io
[22:36:20] <rawtaz> could spin up a container for each demo instance for a few minutes. but i get noone can be arsed to take the time to set that up :)
[22:36:27] <rawtaz> yeah but then you have to create an account..
[22:36:40] <hauleth> Could spin container
[22:36:43] <rawtaz> no biggie though, i can probably watch some nice video about it somewhere :)
[22:36:51] <hauleth> Or spin real VM
[22:37:00] <hauleth> Using Firecracker or whatever
[22:37:04] <rawtaz> yeah too lazy. i just wanted to take a quick look at waht it looks like. not going to spend much time to run it etc just to see it
[22:54:56] <hauleth> You can run container locally
[22:57:44] *** Joins: curious-user (~user@user/curious-user)
[23:00:21] <curious-user> hi, Broadway's description says that it's "multi-stage" but is it really true? GenStage supports producer-consumers which enables multistageiness for example
[23:00:43] <curious-user> but i didn't find anything about produces-consumers in Broadway's docs
[23:03:46] <rawtaz> hauleth: i understand that. and im telling you that if someone just wants to take a quick look at what it looks like inside, then perhaps running a container isn't what theyre interested in.
[23:04:29] <hauleth> rawtaz: it just started, so maybe in future there will be such feature
[23:04:43] <hauleth> Or someone will provide LiveBook as a Service
[23:06:11] <curious-user> what is the preferred way to make Producer -> ConsumerProducer -> Consumer pipeline in Broadway ?
[23:09:20] *** Joins: ur5us (~ur5us@2406:e002:6c33:6d01:90c2:1bd2:83db:98)
[23:09:41] <rawtaz> hauleth: yep maybe :)
[23:15:59] *** Quits: ur5us (~ur5us@2406:e002:6c33:6d01:90c2:1bd2:83db:98) (Ping timeout: 264 seconds)
[23:26:19] *** Joins: ur5us (~ur5us@2406:e002:6c33:6d01:90c2:1bd2:83db:98)
[23:34:59] *** Joins: [deleted] (~livoreno@user/notzmv)
[23:37:55] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 260 seconds)
[23:39:24] *** VAL is now known as val
[23:58:20] *** Quits: dcz_ (~dcz@user/dcz) (Ping timeout: 260 seconds)
