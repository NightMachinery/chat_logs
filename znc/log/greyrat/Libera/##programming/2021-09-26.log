[00:00:45] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:01:08] <kariosfox> now it makes sense why AltGr is usually used for non-AsCII characters
[00:01:33] *** Joins: Pixi (~Pixi@user/pixi)
[00:02:23] *** Quits: zaher_ (~zaher@188.160.138.251) (Read error: Connection reset by peer)
[00:02:27] *** Quits: magla (~gelignite@55d42346.access.ecotel.net) (Quit: Stay safe!)
[00:02:57] <mawk> ascii is the english colonist tool 
[00:03:33] *** Joins: zaher_ (~zaher@188.160.138.251)
[00:04:37] <kariosfox> if you insist. I usually use CP8520
[00:05:13] <Noisytoot> compose key is even better
[00:05:15] <beaky> nice bpytop has been ported to c++ now it wont max out my cpus i can use it to replace htop maybe https://github.com/aristocratos/btop
[00:05:16] <bayaz> Title: GitHub - aristocratos/btop: A monitor of resources 
[00:05:40] <user51> https://upload.wikimedia.org/wikipedia/commons/thumb/6/67/Xerox_Alto_keyset.jpg/800px-Xerox_Alto_keyset.jpg
[00:05:41] <bayaz> Type: image/jpeg Size: 239.7 kB 
[00:05:44] <user51> i need one of those!
[00:06:12] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Quit: Leaving.)
[00:06:25] <mrig> In France it is known as Alt Grave, not sure where this comes from.
[00:06:45] <user51> i call it alt groove
[00:07:16] *** Quits: immibis (~hexchat@2a02:3032:409:ff71:ee8b:96c:f1e7:b0cb) (Read error: Connection reset by peer)
[00:07:33] <kariosfox> here it's called Alt Gruby - which translates to Alt Thick
[00:07:38] *** Joins: immibis (~hexchat@2a02:3032:409:ff71:ee8b:96c:f1e7:b0cb)
[00:07:43] <pyzozord> hmm maybe I'll start calling it "gralt" P
[00:07:54] <kariosfox> geralt
[00:08:12] <kariosfox> from rivia
[00:08:24] <mrig> you could also snarl at, alt grrrr
[00:08:36] <pyzozord> I meant it more as a holy gral but sure
[00:08:43] <mrig> ‚Üê‚Üì‚Üí
[00:09:01] *** Joins: zaher__ (~zaher@37.48.179.162)
[00:10:15] <mrig> grrr, ¬´¬ª ahh that is where those ones are to be found!
[00:10:42] <mrig> kariosfox: which language?
[00:10:57] <kariosfox> Polish
[00:11:12] <kariosfox> hence the witcher pun
[00:11:55] *** Joins: dunkeln (~dunkeln@94.129.71.70)
[00:11:55] *** Quits: dunkeln (~dunkeln@94.129.71.70) (Changing host)
[00:11:55] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[00:11:56] *** Quits: password2 (~password@user/password2) (Ping timeout: 252 seconds)
[00:12:29] *** Quits: zaher_ (~zaher@188.160.138.251) (Ping timeout: 252 seconds)
[00:13:18] <mrig> ah, cool alternate alts.
[00:16:49] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[00:17:14] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 260 seconds)
[00:17:45] *** Quits: snake (~snake@user/snake) (Quit: Namae nado nai, omae to onaji da..)
[00:17:50] *** Joins: immibis_ (~hexchat@62.156.144.218)
[00:18:18] *** Quits: user51 (~user51@176.228.115.184) (Quit: leaving)
[00:18:46] *** Quits: cm007magnum (~Rheanna@218.78.77.129) (Remote host closed the connection)
[00:19:31] *** Quits: xavie (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 252 seconds)
[00:19:59] *** Joins: spacemanjr (~spacemanj@46.246.82.68)
[00:20:17] *** Joins: cm007magnum (~Rheanna@101.89.197.243)
[00:20:30] *** Quits: immibis (~hexchat@2a02:3032:409:ff71:ee8b:96c:f1e7:b0cb) (Ping timeout: 260 seconds)
[00:33:37] *** Quits: spacemanjr (~spacemanj@46.246.82.68) (Quit: Leaving)
[00:34:50] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b0a7:81a6:ed08:859a)
[00:38:26] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[00:40:00] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:40:28] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b0a7:81a6:ed08:859a) (Ping timeout: 252 seconds)
[00:41:02] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[00:41:17] *** Lord_of_Life_ is now known as Lord_of_Life
[00:43:47] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[00:45:03] *** Joins: rtypo (~alex@user/rtypo)
[00:45:55] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[00:49:13] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[00:51:11] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[00:51:21] *** Joins: kts (~kts@103.73.237.252)
[00:52:42] *** Quits: zyweo (~Svew@user/zyweo) (Ping timeout: 260 seconds)
[00:53:54] *** Joins: ralinux (~saje@37.156.188.75)
[00:54:41] *** Joins: Samian (~Sami@user/samian)
[00:56:34] *** Quits: Samian (~Sami@user/samian) (Client Quit)
[00:58:05] *** Quits: tane (~tane@dslb-002-201-234-068.002.201.pools.vodafone-ip.de) (Quit: Leaving)
[01:00:32] *** Quits: reddit89_ (~user@user/reddit89) (Ping timeout: 265 seconds)
[01:00:36] *** Quits: kts (~kts@103.73.237.252) (Quit: Konversation terminated!)
[01:02:19] *** Joins: Samian (~Sami@user/samian)
[01:05:58] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[01:07:43] *** Quits: kariosfox (~kariosfox@176.221.124.146) (Remote host closed the connection)
[01:08:20] *** Joins: reddit89_ (~user@user/reddit89)
[01:08:45] *** Quits: cm007magnum (~Rheanna@101.89.197.243) (Remote host closed the connection)
[01:09:55] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.3)
[01:10:19] *** Joins: Macuser (~Macuser@216.30.159.201)
[01:11:19] *** Joins: extern (~archer@141.226.60.187)
[01:11:23] *** Joins: cm007magnum (~Rheanna@101.89.154.192)
[01:13:00] *** Joins: rtjure (~rtjure@bras-79-132-17-74.comnet.bg)
[01:15:31] *** Joins: pulse (~pulse@user/pulse)
[01:16:02] *** Quits: chomwitt (~chomwitt@2a02:587:dc0a:5800:12c3:7bff:fe6d:d374) (Ping timeout: 260 seconds)
[01:16:44] *** Joins: Null_A (~null_a@2601:645:8700:2290:91f2:4a69:be9c:a77e)
[01:19:01] *** Joins: snake (~snake@user/snake)
[01:20:05] *** Quits: snake (~snake@user/snake) (Client Quit)
[01:20:41] *** Joins: snake (~snake@user/snake)
[01:22:26] *** Quits: Guest2869 (~Guest@host110.190-137-39.telecom.net.ar) (Remote host closed the connection)
[01:27:01] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[01:27:17] *** Joins: akevinhuang2 (~thekevinh@user/thekevinhuang)
[01:28:56] *** Quits: akevinhuang (~thekevinh@user/thekevinhuang) (Ping timeout: 252 seconds)
[01:30:37] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[01:30:52] *** Quits: Maaaanu (~manuel@ip5b41c183.dynamic.kabel-deutschland.de) (Quit: leaving)
[01:31:26] *** Quits: NEYi_ (~NEYi@109.251.216.38) (Remote host closed the connection)
[01:31:37] *** Quits: xff0x (~xff0x@2001:1a81:52a2:cc00:e316:3cc6:4da2:e9d8) (Ping timeout: 252 seconds)
[01:31:50] *** Joins: NEYi_ (~NEYi@109.251.216.38)
[01:32:33] *** Joins: xff0x (~xff0x@2001:1a81:52a2:cc00:a2d5:fa6a:c964:7cba)
[01:32:42] *** Joins: Quietwalker (~X@154.3.251.33)
[01:37:16] *** Quits: Quietwalker (~X@154.3.251.33) (Ping timeout: 265 seconds)
[01:38:17] *** Quits: ralinux (~saje@37.156.188.75) (Ping timeout: 252 seconds)
[01:39:30] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-9c3e-79ce-5e92-d571.res6.spectrum.com) (Quit: Leaving.)
[01:41:44] *** Joins: audiobirb (~audio@2603-8081-1800-b44d-869e-11b0-904e-fa1b.res6.spectrum.com)
[01:41:46] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-a4b6-637b-513f-37e6.res6.spectrum.com)
[01:42:48] *** Joins: flaknet99 (~0x100@32.211.211.39)
[01:44:49] *** Quits: Samian (~Sami@user/samian) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[01:47:06] *** Quits: Null_A (~null_a@2601:645:8700:2290:91f2:4a69:be9c:a77e) (Remote host closed the connection)
[01:50:52] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[01:51:09] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[01:52:54] *** Quits: dan01 (~dan01@2a02:2f09:381b:db00:19ad:8022:fc85:4de7) (Ping timeout: 260 seconds)
[01:53:43] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[01:55:02] *** Joins: Samian (~Sami@user/samian)
[01:55:40] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[01:56:38] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[01:57:06] *** Quits: CoderGuy (~CoderGuy@user/coderguy) (Ping timeout: 260 seconds)
[01:58:50] *** Quits: cm007magnum (~Rheanna@101.89.154.192) (Remote host closed the connection)
[02:00:20] *** Joins: sidy (~sidy@user/sidy)
[02:00:38] *** Joins: cm007magnum (~Rheanna@218.78.27.29)
[02:00:57] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 265 seconds)
[02:03:31] *** Quits: Thedarkb (~Thedarkb@2001:bb6:b403:e042:b812:bb3f:25c8:9173) (Ping timeout: 252 seconds)
[02:04:18] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[02:05:37] *** Quits: Samian (~Sami@user/samian) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[02:09:16] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:12:02] *** Quits: diophantoz (~diophanto@user/diophantoz) (Ping timeout: 260 seconds)
[02:12:46] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:13:17] *** Joins: debbpointe (~madelyn@047-024-178-065.res.spectrum.com)
[02:16:27] *** Joins: D3adB1t (uid519857@id-519857.ilkley.irccloud.com)
[02:17:24] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[02:18:32] *** Joins: Quietwalker (~X@cpe-70-113-121-167.austin.res.rr.com)
[02:18:39] *** Joins: Thedarkb-Desktop (~beno@2001:bb6:b403:e042:3055:b1fb:e823:43e1)
[02:19:41] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[02:19:53] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[02:19:58] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 260 seconds)
[02:20:20] *** Joins: gggpkm (~gggpkm@111-251-148-94.dynamic-ip.hinet.net)
[02:21:54] *** Joins: digilink (~digilink@user/digilink)
[02:24:12] *** Quits: extern (~archer@141.226.60.187) (Quit: WeeChat 3.2.1)
[02:24:41] *** Quits: Guest9911 (~Guest99@171.121.36.171) (Quit: Connection closed)
[02:24:47] <Thedarkb-Desktop> When you need to step through every item in an associative array, is there a way to skip the gaps?
[02:25:03] *** Joins: Guest99 (~Guest99@171.121.36.171)
[02:25:25] <Thedarkb-Desktop> I wonder if I might be better using linked lists for the signal handlers in my game.
[02:26:23] <flaknet99> why do you have to loop all elements?
[02:26:35] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[02:26:40] <flaknet99> it defeats the lookup optimization
[02:27:05] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.2)
[02:27:22] <Thedarkb-Desktop> I'm over generalizing and applying a data structure that's optimised for most use cases for something that it isn't, which is why I think I need to switch it for a linked list.
[02:27:33] <Thedarkb-Desktop> so/for/to
[02:28:21] <flaknet99> it's only really optimized for fast lookup case w/ low overhead
[02:29:20] <Thedarkb-Desktop> The fast lookup is useful when something needs finding for removal but that isn't a worthy tradeoff, so I'll replace the event handlers with linked lists instead.
[02:29:21] <flaknet99> binary tree is fast too, but has all that node container bloat
[02:29:25] <Rounin> Thedarkb-Desktop: Well, it depends on what the data structure in the backend is, right... Obviously, it's all stored somewhere
[02:29:52] <Rounin> Thedarkb-Desktop: If you break the abstraction and just loop over the values stored in the background, it's faster
[02:30:02] <Rounin> You might not get them in the same order, but still
[02:30:12] <Thedarkb-Desktop> That was the plan, yeah.
[02:32:19] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:32:43] *** Joins: extern (~archer@141.226.60.187)
[02:32:44] *** Quits: pizdets (~pizdets@183.182.110.56) (Ping timeout: 252 seconds)
[02:33:05] * Thedarkb-Desktop just got a nasty idea.
[02:33:07] <Thedarkb-Desktop> Why not both?
[02:33:42] *** Quits: Powerhouse6666 (~Powerhous@security.orcacomputers.com) (Remote host closed the connection)
[02:33:49] *** Joins: pizdets (~pizdets@183.182.111.82)
[02:33:54] <Thedarkb-Desktop> Doubly linked list and have a hash table with pointers into the linked list for fast lookup but the linked list for stepping through all the elements.
[02:34:28] <flaknet99> the best solution is to not step through all elements
[02:35:09] <Thedarkb-Desktop> It's a case of needing to step through all of the frame handlers at the start of each frame.
[02:35:13] <flaknet99> it will become impossible to do anything with respectable frame times
[02:36:01] <Thedarkb-Desktop> Having a hash table that points into a doubly linked lists will give me the best of both worlds, skipping the gaps and allowing fast lookup, or am I wrong?
[02:36:30] <flaknet99> why doubly?
[02:36:43] <flaknet99> and can you just use an array/vector?
[02:37:06] <flaknet99> what is a frame handler
[02:37:44] <Thedarkb-Desktop> If you want to remove an entity handler from the list, find the pointer to the node in the list by looking it up in the hash table, then delete the node from the linked list and the reference from the hash table.
[02:37:57] <Thedarkb-Desktop> You wouldn't be able to do the deletion were it not doubly linked.
[02:38:11] *** Joins: dre (~dre@2001:8003:c932:c301:e5c5:40af:66d5:e309)
[02:38:14] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Ping timeout: 252 seconds)
[02:38:25] <Thedarkb-Desktop> I'm referring to the event handlers called on every frame.
[02:38:39] <flaknet99> what is an event handler?
[02:38:57] <Thedarkb-Desktop> A function that is called when an event takes place, ever done any GUI stuff?
[02:38:57] <flaknet99> something that happens based on a timestamp?
[02:39:24] <flaknet99> so you click a button, and throw some handler into a list?
[02:40:38] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[02:40:43] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:8d7a:8984:59ac:7d9d)
[02:40:50] <Thedarkb-Desktop> You click the button and execute all of the functions that have been registered to be called when the button is pressed.
[02:41:25] *** Quits: EmOwl-- (~EmOwl-@202.150.113.111) (Ping timeout: 252 seconds)
[02:41:55] <flaknet99> you can use a singly linked list
[02:42:45] <flaknet99> or a map if these are globally accessible functions that need an ID
[02:43:05] *** Joins: EmOwl- (~EmOwl-@202.150.113.111)
[02:43:13] <Thedarkb-Desktop> How do you do a deletion in a singly linked list if you don't have a pointer to the item that comes before it in the list?
[02:43:16] <Thedarkb-Desktop> That doesn't make any sense.
[02:43:28] <flaknet99> you iterate the list and store the previous
[02:43:48] <Thedarkb-Desktop> That would defeat the performance benefit of having a hash table index into it.
[02:44:04] <flaknet99> it would be faster than looking up ID's constantly
[02:44:10] *** Quits: extern (~archer@141.226.60.187) (Quit: WeeChat 3.2.1)
[02:44:12] <flaknet99> and hashing stuff all the time
[02:44:22] <Thedarkb-Desktop> The idea of having both is that you don't need to do any hashing when an event is triggered.
[02:44:44] <flaknet99> you could also use a basic array
[02:44:51] <flaknet99> all the complexity is going to hurt 
[02:45:09] <Thedarkb-Desktop> It's a hobby RPG project, not something anyone's paying me for lol
[02:45:20] <Thedarkb-Desktop> I can sit here and micro optimize all I want.
[02:45:22] <Thedarkb-Desktop> :P
[02:45:27] <flaknet99> yeah well it will hurt when you convince yourself its a good solution
[02:45:33] <flaknet99> and use it in the future for something that matters
[02:46:16] <flaknet99> it's not a micro optimization, its not doing crazy complex data structures for a simple vector of function calls
[02:46:58] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[02:47:04] <Thedarkb-Desktop> The idea is that you only need to walk the list to perform the function calls while getting the lookup benefit when doing an insertion or deletion lol.
[02:47:08] *** Joins: Lohengrin (~fredo@user/lohengrin)
[02:47:21] <flaknet99> what benefit
[02:47:36] <Thedarkb-Desktop> Faster insertions and deletions, that's literally all.
[02:47:43] <flaknet99> you store the last occupid slot and add right after it, 
[02:47:51] <flaknet99> deletion is also fst if you don't care about call ordering
[02:47:58] <flaknet99> otherwise you shift the array by n slots
[02:48:15] <flaknet99> how often are you adding/removing calls 
[02:48:52] *** Quits: cm007magnum (~Rheanna@218.78.27.29) (Remote host closed the connection)
[02:49:04] <Thedarkb-Desktop> Relatively infrequently, whenever an entity spawns or despawns or decides to listen for another event or whatever.
[02:49:55] *** Joins: Guest3758 (~Guest@host246.190-139-77.telecom.net.ar)
[02:50:01] *** Joins: cm007magnum (~Rheanna@218.78.27.29)
[02:50:37] <flaknet99> or just use a basic single linked list and save yourself the 100 nanoseconds or whatever 
[02:51:01] <Thedarkb-Desktop> That's probably what I'll end up doing.
[02:51:12] <Thedarkb-Desktop> I was just entertaining an idea of how I might do it a little faster.
[02:51:46] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[02:52:15] *** Joins: chenxuezhao (~chenxuezh@120.244.238.3)
[02:52:40] *** Quits: rtjure (~rtjure@bras-79-132-17-74.comnet.bg) (Ping timeout: 265 seconds)
[02:52:54] *** Quits: chenxuezhao (~chenxuezh@120.244.238.3) (Remote host closed the connection)
[02:53:06] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[02:55:13] *** Joins: b1101 (~b1101@pool-100-37-115-53.nycmny.fios.verizon.net)
[02:55:35] *** Joins: godSend23 (~gs24@99-189-112-140.lightspeed.sntcca.sbcglobal.net)
[02:55:36] <godSend23> hey all
[02:55:42] <godSend23> anyone familiar w/ mysql
[02:55:43] <godSend23> ?
[02:56:34] *** Quits: Lohengrin (~fredo@user/lohengrin) (Quit: WeeChat 3.2.1)
[02:58:27] <jeaye> Don't ask to ask; just ask.
[02:58:35] *** Quits: hexingb (~hexingb@111.30.224.85) (Ping timeout: 252 seconds)
[02:58:56] <godSend23> alright
[02:58:59] *** Joins: hexingb (~hexingb@2409:8902:7ba0:ff8c:595f:93b8:1482:f350)
[02:59:28] <Guest3758> may I ask if I may ask? :P
[02:59:48] <Guest3758> (just joke)
[02:59:50] <godSend23> i have a database folder inside mysql dir
[03:00:18] *** Joins: Psybur (~Psybur@mobile-166-170-32-197.mycingular.net)
[03:00:21] <godSend23> can i simply copy it over to new computer and place in the same equivalent dir?
[03:00:47] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[03:00:53] *** Quits: jaysicks (~jaysicks@62-165-215-215.pool.digikabel.hu) (Ping timeout: 265 seconds)
[03:00:59] *** Quits: MJCD (uid193337@user/mjcd) (Quit: Connection closed for inactivity)
[03:01:51] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:02:35] *** Joins: Izem (~Izem@bras-base-london1483w-grc-27-70-51-121-7.dsl.bell.ca)
[03:03:58] *** Quits: Guest99 (~Guest99@171.121.36.171) (Ping timeout: 252 seconds)
[03:04:44] *** Quits: godSend23 (~gs24@99-189-112-140.lightspeed.sntcca.sbcglobal.net) (Quit: Leaving)
[03:06:08] *** Joins: azed (~azed@197.17.98.238)
[03:10:24] <Hash> Hi
[03:11:40] *** Quits: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca) (Ping timeout: 252 seconds)
[03:12:30] *** Joins: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca)
[03:12:41] *** Joins: pavonia (~user@user/siracusa)
[03:13:46] *** Joins: jaysicks (~jaysicks@188-143-121-226.pool.digikabel.hu)
[03:15:12] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[03:15:40] <Izem> Hash: hello
[03:15:42] *** Joins: blahboybaz (~blahboyba@73.109.58.176)
[03:16:15] <Hash> How's it going
[03:16:17] <blahboybaz> Hi Y'all
[03:16:31] <blahboybaz> What's up Hash ?
[03:16:38] <Hash> Dinner
[03:16:41] <Hash> rice and spicy beef stew
[03:17:00] <blahboybaz> mmm yumm
[03:17:19] *** Joins: Samian (~Sami@user/samian)
[03:18:23] <blahboybaz> Had Mexican earlier
[03:19:26] <Hash> Very nice
[03:19:36] <Hash> I'm gonna go call mom
[03:19:38] <Hash> weekend
[03:19:47] *** Quits: debbpointe (~madelyn@047-024-178-065.res.spectrum.com) (Quit: Konversation terminated!)
[03:20:12] <blahboybaz> Right on
[03:20:44] <blahboybaz> So you you have beta; which is, apparently, the stage just prior to release, then what other stages are there and what are the corresponding names? Isn't Alpha one of them?
[03:21:07] <dre> guys I'm going mad here
[03:21:25] <dre> does anyone use any of the Intellij products? Rider, etc
[03:21:49] <dre> I want to configure it so that when autocomplete is up, I can press tab to cycle through the auto-complete list. 
[03:21:50] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[03:21:57] <dre> it's driving me nuts
[03:22:04] *** Joins: CodePoint (~BitShift@2600:1700:3070:3790::29)
[03:23:21] <Izem> dre: don't they have support?
[03:23:46] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[03:24:02] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:25:32] *** Quits: blahboybaz (~blahboyba@73.109.58.176) (Ping timeout: 252 seconds)
[03:25:56] *** Joins: xavie (~xavie@176-139-252-198.abo.bbox.fr)
[03:26:07] <dre> wdym?
[03:26:56] *** Joins: zaher_ (~zaher@130.180.145.78)
[03:27:13] <dre> maybe i just need to get used to it
[03:27:30] <dre> it does fuzzy find so that's nice
[03:29:24] *** Quits: Samian (~Sami@user/samian) (Ping timeout: 265 seconds)
[03:29:34] <Donitz> what's the best practice for requiring other github repos in a github repo for c++ projects
[03:29:54] <CodePoint> ... why would you do that?
[03:30:45] <CodePoint> generally speaking if somone creates reusable code they will package it into a header-only library or a set of dynamic or static library binaries.
[03:30:51] <CodePoint> Donitz ping
[03:30:54] *** Quits: zaher__ (~zaher@37.48.179.162) (Ping timeout: 260 seconds)
[03:32:08] <CodePoint> Donitz: if the project owner has not done this they are in woeful neglect of the project -- at least in terms of their obligations to creating usable release.
[03:32:33] <Donitz> yeah
[03:32:38] <Donitz> not going to put those files in my own repo
[03:33:40] <CodePoint> Donitz: generally speaking, if you do decide you want to include the code in your project, expect to maintain it as well if the original creator has not dedicated themselves to maintaining their library or its releases.
[03:33:51] *** Joins: foozle (~foozle@2001-b011-c001-3522-1787-3002-9fcb-f50e.dynamic-ip6.hinet.net)
[03:33:57] <Izem> this is what submodules are for
[03:34:01] <CodePoint> Donitz: generally this also means integrating the source code into yours in its original form as well.
[03:34:05] *** Joins: Macuser (~Macuser@216.30.159.201)
[03:34:18] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[03:34:24] <CodePoint> Izem: his problem is deeper than git.
[03:35:04] *** Joins: akevinhuang (~thekevinh@user/thekevinhuang)
[03:35:26] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[03:35:48] *** Joins: blahboybaz (~blahboyba@73.109.58.164)
[03:36:26] *** Joins: newpy (~newpy@206.168.231.90)
[03:37:02] <CodePoint> now if somone could tell me: does microsoft visual studio have support for .NET 5 (creating projects and upgrading from .NET 4.7 etc...)?
[03:37:02] *** Quits: foozle (~foozle@2001-b011-c001-3522-1787-3002-9fcb-f50e.dynamic-ip6.hinet.net) (Client Quit)
[03:37:34] <CodePoint> It seems my install of Visual Studio does not present me with the option to use or install .NET 5.
[03:37:37] *** Quits: akevinhuang2 (~thekevinh@user/thekevinhuang) (Ping timeout: 265 seconds)
[03:39:21] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[03:39:36] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[03:40:00] <flaknet99> sounds like a problem, why would anyone want to use .NET
[03:40:11] <CodePoint> because it's pretty good.
[03:40:19] <flaknet99> is it really though
[03:40:42] <CodePoint> You clearly have no experience.
[03:40:48] <CodePoint> I'm going to ignore you now.
[03:40:49] <flaknet99> silly me with no exp
[03:40:49] <jinsun> I think by default it tries to use LTS which is 3.1, but the .Net development workload includes .Net 5 also and you can choose it from the dropdown if you chose to install it
[03:40:56] <flaknet99> at least i'm not trying to use .net rofgl
[03:41:32] <CodePoint> That kind of arrogance will get you nowhere.
[03:41:53] <flaknet99> its not arrogance, its knowledge
[03:42:47] <CodePoint> jinsun: it looks like I have it installed, and can target it with dotnet in the commandline easy enough, but migrating from 4.7 would be a bitch if I have to recreate my entire project and solution files from scratch.
[03:42:52] <jinsun> at least on windows it is definitely a good choice, and it is getting better in linux also
[03:42:57] *** Quits: Psybur (~Psybur@mobile-166-170-32-197.mycingular.net) (Remote host closed the connection)
[03:43:15] <flaknet99> yeah its getting better because before it was non-functional
[03:43:30] <flaknet99> better than what alternative though?
[03:45:35] <CodePoint> has the potential to be better than python if microsoft doesn't fuck it up.
[03:46:05] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[03:46:14] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[03:46:18] *** Joins: flaknet99 (~0x100@32.211.211.39)
[03:46:37] *** Joins: diamondbond (~diamondbo@175.157.220.188)
[03:46:45] <jinsun> CodePoint: depending on the project (if it didn't use many framework specific things) the solution could be just to open the .csproj/.fsproj file and change the targetframework in the xml, I haven't tried on any large project though, only some simple console apps
[03:47:23] <CodePoint> hmm...
[03:47:33] <CodePoint> well it has a number of dependencies...
[03:47:41] <CodePoint> let's see if it can handle that.
[03:47:54] <CodePoint> (this is a large project)
[03:48:21] *** Quits: eem (~eem@user/eem) (Quit: WeeChat 3.3)
[03:48:43] *** deathonater is now known as Smeef
[03:48:51] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:48:56] <flaknet99> they're incapable of not fucking it up, can you write portable GUI apps with .NET yet?
[03:49:12] <flaknet99> it's been around for over a decade
[03:49:31] <jinsun> CodePoint: there is also this (which I just found, so no idea how good it is), https://dotnet.microsoft.com/platform/upgrade-assistant
[03:49:32] <bayaz> Title: Upgrade Assistant | .NET 
[03:50:25] *** Joins: Guest723 (~Guest7@113.26.32.236)
[03:51:28] <jinsun> flaknet99: nothing from MS yet (MAUI is supposed to be the thing but not ready yet), but there is https://github.com/AvaloniaUI/Avalonia
[03:51:29] <bayaz> Title: GitHub - AvaloniaUI/Avalonia: A cross platform XAML framework for .NET 
[03:53:10] <flaknet99> so you can't run .NET ui's from windows coded projects?
[03:53:28] <CodePoint> jinsun: yeah I've seen that.  Looks nice.
[03:53:45] <CodePoint> with cross-platform UIs, .net core is really somthing.
[03:53:47] <flaknet99> but they will be glad to support  our apps on their system
[03:53:51] <CodePoint> tons of potential.
[03:53:56] <flaknet99> just not bidirectional relationship
[03:54:26] <flaknet99> parasitic framework
[03:54:49] *** Quits: diamondbond (~diamondbo@175.157.220.188) (Quit: Leaving)
[03:54:54] <Guest3758> C/C++ is the best :)
[03:55:00] *** Quits: robz (~robz@109.78.229.54) (Quit: Leaving)
[03:55:05] <CodePoint> it is, but it is time-consuming.
[03:55:32] <CodePoint> I still can't get CodeLite to do code-completion right for 3rd party libs.  :\
[03:55:44] <Guest3758> for me?
[03:55:53] <Guest3758> was it*
[03:56:28] *** Quits: Brumaire (~quassel@81-64-14-121.rev.numericable.fr) (Ping timeout: 265 seconds)
[03:58:36] <CodePoint> I just don't have the time that I used to for managing my build system.
[04:01:29] *** Joins: YiRunZh (~YiRunZh@58.23.138.17)
[04:02:38] <CodePoint> jinsun, thanks for the tip on the upgrade assistant
[04:02:42] *** Quits: CodePoint (~BitShift@2600:1700:3070:3790::29) (Quit: Never gonna give you up, never gonna let you down...)
[04:03:48] *** Quits: YiRunZh (~YiRunZh@58.23.138.17) (Client Quit)
[04:06:08] *** Quits: blahboybaz (~blahboyba@73.109.58.164) (Ping timeout: 265 seconds)
[04:06:14] *** Joins: Samian (~Sami@user/samian)
[04:06:19] <flaknet99> "After program manager David Ortinau confirmed that "we do not support Linux as a development environment for .NET MAUI," Microsoft exec Richard Lander said, "It would be good knowing how many people would benefit from/need Linux environment support for development." "
[04:06:22] *** Quits: hexingb (~hexingb@2409:8902:7ba0:ff8c:595f:93b8:1482:f350) (Ping timeout: 260 seconds)
[04:06:31] <flaknet99> ...
[04:07:12] <flaknet99> https://visualstudiomagazine.com/articles/2021/08/19/maui-preview-7.aspx
[04:07:13] <bayaz> Title: .NET MAUI Layouts Revamped, Developers Question Lack of Linux -- Visual Studio Magazine 
[04:09:37] *** Joins: zaher__ (~zaher@37.48.179.188)
[04:09:39] <flaknet99> but yeah I have no idea what IM talking about right
[04:09:59] *** Joins: hexingb (~hexingb@223.104.227.184)
[04:10:14] <Guest3758> I won't trust on MS :P
[04:10:21] <Guest3758> "so much"
[04:10:23] <flaknet99> at the end of the day MS just wants more vassals
[04:10:35] <dre> it's like you guys have never heard of "embrace extend extinguish"
[04:10:38] *** Joins: normskal (~normskal@101.175.64.73)
[04:10:45] <dre> do you think MS shit comes for free? 
[04:11:08] <Guest3758> go simple text edition!
[04:12:48] *** night_wulfe__ is now known as night_wulfe
[04:13:23] *** Quits: zaher_ (~zaher@130.180.145.78) (Ping timeout: 265 seconds)
[04:13:58] *** Joins: dunkeln (~dunkeln@94.129.71.70)
[04:13:58] *** Quits: dunkeln (~dunkeln@94.129.71.70) (Changing host)
[04:13:58] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[04:14:58] *** Joins: beeza (sid53872@id-53872.tinside.irccloud.com)
[04:15:30] *** Quits: blaklistd (~blaklistd@user/blaklistd) (Quit: The Lounge - https://thelounge.chat)
[04:16:14] <Guest723> part of
[04:16:20] *** Joins: blahboybaz (~blahboyba@73.109.58.188)
[04:17:04] *** Quits: Izem (~Izem@bras-base-london1483w-grc-27-70-51-121-7.dsl.bell.ca) (Ping timeout: 256 seconds)
[04:18:20] *** Joins: blaklistd (~blaklistd@user/blaklistd)
[04:19:11] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 265 seconds)
[04:19:11] *** Quits: hexingb (~hexingb@223.104.227.184) (Ping timeout: 265 seconds)
[04:20:48] *** Joins: Izem (~Izem@bras-base-london1483w-grc-27-70-51-121-7.dsl.bell.ca)
[04:21:21] *** Quits: b1101 (~b1101@pool-100-37-115-53.nycmny.fios.verizon.net) (Quit: b1101)
[04:22:51] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[04:22:57] *** Joins: hexingb (~hexingb@2409:8902:7ba2:e6d5:410f:8ee4:b06a:3cd9)
[04:28:47] *** Quits: cm007magnum (~Rheanna@218.78.27.29) (Remote host closed the connection)
[04:29:29] *** Joins: somercet (~somercet@c-73-190-18-206.hsd1.mi.comcast.net)
[04:31:21] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[04:31:54] *** Joins: cm007magnum (~Rheanna@101.89.154.192)
[04:35:26] *** Quits: gggpkm (~gggpkm@111-251-148-94.dynamic-ip.hinet.net) (Read error: Connection reset by peer)
[04:37:28] *** Quits: blahboybaz (~blahboyba@73.109.58.188) (Ping timeout: 252 seconds)
[04:41:49] *** Quits: jacktar (~whiteshad@gateway/tor-sasl/jacktar) (Remote host closed the connection)
[04:42:05] *** Joins: jacktar (~whiteshad@gateway/tor-sasl/jacktar)
[04:43:23] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:44:29] *** Joins: blahboybaz (~blahboyba@73.109.58.168)
[04:46:55] *** Quits: Samian (~Sami@user/samian) (Ping timeout: 250 seconds)
[04:47:02] *** Joins: Guest13 (~Guest13@66-203-186-206.ded.execulink.com)
[04:47:19] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[04:47:39] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[04:47:59] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:49:08] *** Quits: Klinda (~klinda@2.227.251.209) (Read error: Connection reset by peer)
[04:49:14] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[04:49:42] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[04:52:12] *** Quits: Izem (~Izem@bras-base-london1483w-grc-27-70-51-121-7.dsl.bell.ca) (Ping timeout: 256 seconds)
[04:54:15] <vdamewood> Hi, people etc.
[04:54:25] *** Joins: paravida (~myChateau@71.215.86.34)
[04:56:13] *** Quits: Guest13 (~Guest13@66-203-186-206.ded.execulink.com) (Quit: Client closed)
[05:00:08] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 252 seconds)
[05:01:38] *** Quits: Quietwalker (~X@cpe-70-113-121-167.austin.res.rr.com) (Read error: Connection reset by peer)
[05:02:10] *** Quits: austincheney (~austinche@2600:1700:1220:76c8:f982:507a:283b:3df9) (Ping timeout: 240 seconds)
[05:03:27] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:04:08] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 250 seconds)
[05:04:09] *** brabrax_ is now known as brabrax
[05:05:16] *** Quits: azed (~azed@197.17.98.238) (Quit: WeeChat 3.2)
[05:05:17] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[05:06:37] *** Quits: blahblah441 (~blahblah4@69.4.234.71) (Quit: byeeeee)
[05:10:08] * vdamewood wonders if anyone builds software for macOS with gcc anymore.
[05:10:20] <arahael> Doubt it.
[05:10:57] *** Joins: Samian (~Sami@user/samian)
[05:11:02] <vdamewood> Are there any (C or C++) compilers (or toolchains for that matter) that support macOS?
[05:11:11] *** Joins: gggpkm (~gggpkm@li2010-23.members.linode.com)
[05:11:16] <vdamewood> *any other
[05:11:45] <flaknet99> if macos is truly posix compatible there should be many
[05:11:48] <arahael> Ostensibly llvm's.
[05:12:15] <arahael> flaknet99: It's a bit more complex than that - it's ultimately due to apple's somewhat draconian app store policies.
[05:12:18] <vdamewood> flaknet99: Not really, after all, macOS uses a different binary format from other POSIX systems, and POSIX doesn't mandate one.
[05:12:49] <arahael> flaknet99: You can't even, if I remember, compile your own build using apple's official swift sources with apple's official compilers and then use the result to build your application and submit to the store. It's against policy, and is rejected.
[05:12:50] <vdamewood> Hell, even other POSIX systems have different binary formats: a.out, ELF, and what have you.
[05:12:56] *** Joins: llh (~llh@user/llh)
[05:13:03] <flaknet99> macos doesnt support ELF?
[05:13:06] <flaknet99> ooof
[05:13:08] <vdamewood> Nope.
[05:13:22] <vdamewood> macOS uses its own format, Mach-O, which has features ELF doesn't.
[05:13:23] *** Joins: wxads (~hlpme@user/hlpme)
[05:13:24] *** Joins: LiftLeft (~LiftLeft@172.98.80.37)
[05:13:31] <somercet> I'm in an awkward place. I want GTK to die in a fire, but don't like C++.
[05:13:40] *** Quits: molson_ (~molson@2001-48F8-704A-CA1-0-0-75F-104D-static.midco.net) (Ping timeout: 250 seconds)
[05:13:55] <vdamewood> For example, Mach-O supports multiple architectures in the same file.
[05:14:17] <vdamewood> I've seen macOS libs and executables with up to 4 architectures' code in them.
[05:14:26] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 252 seconds)
[05:14:43] <vdamewood> (It was ppc, ppc64, i386, and x86_64 in that case.)
[05:15:04] <wxads> Anyone here tried bootstrap studio? does it offer drag-and-drop feature to develop web UI? What's advantage of using bootstrap studio compared to free bootstrap library?
[05:15:26] <vdamewood> somercet: Why do you want GTK+ to die in a fire?
[05:15:52] <flaknet99> did they change MACH-O so gcc is broken now?
[05:15:59] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:8dd5:65e7:4991:216e) (Read error: Connection reset by peer)
[05:16:01] *** Quits: xff0x (~xff0x@2001:1a81:52a2:cc00:a2d5:fa6a:c964:7cba) (Ping timeout: 252 seconds)
[05:16:09] *** Joins: Lohengrin (~fredo@user/lohengrin)
[05:16:23] <vdamewood> flaknet99: Oh, no. gcc was the original compiler for macOS. 9then Macintosh OS X), and it used Mach-O even back then.
[05:16:27] <vdamewood> s/Oh/Uh/
[05:16:31] <jinsun> somercet: time to switch to electron :D
[05:16:40] * vdamewood shoots jinsun
[05:17:24] <vdamewood> flaknet99: As far as I know, gcc still builds for macOS just fine, it's just that no one uses it.
[05:17:26] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[05:17:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[05:17:40] <somercet> well, I want GtkAppWin to handle open() and activate() signals, but it needs to know where to send the file names from CLI. So I subclassed, and now it won't pass along the G_APPLICATION_HANDLES_OPEN flag. :-P
[05:17:45] *** Joins: xff0x (~xff0x@2001:1a81:52da:9800:62d0:9acd:c6eb:bc13)
[05:18:11] *** Joins: kmh (~kmh@p200300df5f46c200184a6e10c909284f.dip0.t-ipconnect.de)
[05:18:48] *** Quits: cm007magnum (~Rheanna@101.89.154.192) (Remote host closed the connection)
[05:18:56] <somercet> The Gnome docs show the subclass' _new() function, which reads:
[05:19:34] <somercet> 	// Change/Add nothing here, use class/instance init
[05:19:36] <somercet> 	return g_object_new (GVIS_TYPE_APPLICATION, NULL);
[05:19:52] *** Quits: kmh_ (~kmh@p200300df5f32ed00e9e24169dc5a56fc.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[05:20:22] *** Quits: blahboybaz (~blahboyba@73.109.58.168) (Ping timeout: 252 seconds)
[05:20:24] *** Joins: cm007magnum (~Rheanna@119.96.171.22)
[05:21:09] <somercet> afaict, g_object_new() won't pass along anything like AppWin arguments.
[05:21:40] <flaknet99> oh right, they call it "Darwin"
[05:21:56] <somercet> Does gtk.rs fix these things?
[05:24:27] *** Joins: blahboybaz (~blahboyba@73.109.58.144)
[05:25:20] *** Quits: Samian (~Sami@user/samian) (Read error: Connection reset by peer)
[05:26:03] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-a4b6-637b-513f-37e6.res6.spectrum.com) (Quit: Leaving.)
[05:26:32] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 252 seconds)
[05:27:14] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[05:27:25] *** Joins: Alex123 (~Adium@cpe-76-91-121-195.socal.res.rr.com)
[05:27:35] *** Joins: flaknet99 (~0x100@32.211.211.39)
[05:27:41] <flaknet99> https://software.intel.com/content/www/us/en/develop/articles/intel-c-compiler-191-for-macos-release-notes-for-intel-parallel-studio-xe-2020.html
[05:27:43] <bayaz> Title: Intel¬Æ C++ Compiler for macOS* 19.1 Release Notes for Parallel Studio... 
[05:28:30] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[05:29:33] <vdamewood> flaknet99: Oh, hey there is one.
[05:30:02] *** Quits: Metalsutton (~Metalsutt@101.100.152.253) (Ping timeout: 260 seconds)
[05:31:30] *** Joins: trace987 (~trace@95.90.106.112)
[05:31:59] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[05:33:30] *** Joins: Izem (~Izem@bras-base-london1483w-grc-27-70-51-121-7.dsl.bell.ca)
[05:33:35] <flaknet99> https://en.wikipedia.org/wiki/C%2B%2BBuilder
[05:33:37] <bayaz> Title: C++Builder - Wikipedia 
[05:34:06] <flaknet99> may 2020: "Metal driver GPU support for macOS and iOS"
[05:36:09] *** Quits: Guest3758 (~Guest@host246.190-139-77.telecom.net.ar) (Remote host closed the connection)
[05:36:44] *** Joins: Thedarkb (~Thedarkb@2001:bb6:b403:e042:b812:bb3f:25c8:9173)
[05:37:14] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[05:40:17] *** Quits: trace987 (~trace@95.90.106.112) (Ping timeout: 252 seconds)
[05:41:27] *** Quits: jaysicks (~jaysicks@188-143-121-226.pool.digikabel.hu) (Remote host closed the connection)
[05:41:28] <vdamewood> Hmm... is there any indication C++ builder actually uses its own compiler on macOS?
[05:42:17] <flaknet99> good question ;)
[05:48:14] <vdamewood> Looks like it doesn't matter. The current version don't support macOS anyway.
[05:48:36] <vdamewood> Also, according to what I read on Embarcadero's website, C++ Builder just uses clang anyway.
[05:48:48] <Izem> printf is notorious for being a large complicated function, in an object oriented environment you do not have this problem because each object to has it's own string representation. Is that the correct line of thought?
[05:48:51] <flaknet99> hahaha
[05:48:55] <flaknet99> what newbs
[05:49:37] <vdamewood> Izem: Not really.
[05:50:06] <vdamewood> flaknet99: "what newbs"?
[05:50:18] <Izem> Where does it get complicated?
[05:50:19] *** Joins: ChromaCat248 (~ChromaCat@user/chromacat248)
[05:50:24] <flaknet99> they couldnt port the compiler
[05:50:32] *** Quits: blahboybaz (~blahboyba@73.109.58.144) (Ping timeout: 265 seconds)
[05:52:10] *** Joins: blahboybaz (~blahboyba@73.109.58.156)
[05:52:13] <vdamewood> Izem: Well, there are two reasons why printf could be considered complicated. The first is that there are so many *build-int* types in C that are potentially incompatible. For example there's char, short, int, long, and long long, but also size_t, ptrdiff_t, uintptr_t, and so on, and because they can have different sizes on different systems, they each need their own specifier.
[05:52:51] <vdamewood> Izem: Though, once you have a routine to convert one integer to a string, you have one for all of them, you just have to adjust for size.
[05:53:02] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[05:53:17] <vdamewood> I guess all the various formating optiond could be a problem too.
[05:53:18] <flaknet99> ANSI C printf doesn't have to support long long  :*(
[05:53:32] <vdamewood> flaknet99: That's okay. No one uses ANSI C anymore.
[05:53:36] <flaknet99> or gcc has a bug
[05:53:42] <Izem> microsoft does :P
[05:53:58] <flaknet99> with -pedantic  too ?
[05:54:25] *** Joins: chenxuezhao (~chenxuezh@106.39.157.10)
[05:54:38] <vdamewood> Izem: Nope. MSVC conforms to ISO 9899:2018
[05:55:10] <Izem> really? wow
[05:55:24] <Thedarkb> I believe they improved support so that they could compile Git.
[05:55:40] <vdamewood> flaknet99: -pedantic doesn't mean confirm to ANSI, it means confirm to the standard strictly, but it doesn't specify which standard.
[05:55:41] <Izem> oh, well better late than never
[05:55:57] <flaknet99> yeah -ANSI should be all you need
[05:55:57] <Izem> the kernel is still ansi C I think
[05:56:12] <vdamewood> flaknet99: Except ANSI doesn't meet my needs.
[05:57:11] <oldlaptop> Izem: Do you mean printf's *implementation* is large and complicated, or printf's *interface* is large and complicated? You still need all the string-conversion logic to go *somewhere*, so the "each object has its toString()" approach doesn't really buy you anything there
[05:57:34] <oldlaptop> as to the interface, I think that's an easier argument to make
[05:57:34] <Izem> I mean the implementation
[05:57:50] <oldlaptop> the implementation all still has to be somewhere
[05:57:53] <vdamewood> Izem: Anyway, another source of complication for printf is floating-point support. With GNU-based systems, floating-point support is included in its own library. This is fine if you only have floating-point functions like sin, and cos, but then you have to worry about printf printing a float. Do you make printf depend on the math lib, or do you some how make printf only use the math lib when it prints a float?
[05:58:16] <Izem> hmm
[05:58:26] <vdamewood> Izem: Finally, printf doesn't support every type out there, so any types that aren't included in C itself still need their own string conversion function.
[05:58:44] <oldlaptop> Another thing to consider in this whole argument is that many "object-oriented" environments provide a printf()-workalike anyway
[05:59:00] <Izem> good point
[05:59:09] <vdamewood> This is no different than ostream supporting all of C++'s built-in types, but requiring users to define their own override of ostream::operator<< for their own types.
[05:59:21] <oldlaptop> since the interface (though complicated - I'm sure everyone has ideas on how to do it better) is so general and useful
[05:59:34] <oldlaptop> and familiar to lots of people who know how to use printf
[05:59:45] <Izem> I think it still would be better for each object to have it's string representation, so you have less code for printf in your kernel
[05:59:55] *** Joins: b1101 (~b1101@pool-100-37-115-53.nycmny.fios.verizon.net)
[05:59:58] *** Quits: paravida (~myChateau@71.215.86.34) (Ping timeout: 252 seconds)
[06:00:17] <oldlaptop> I'm not sure I follow your argument.
[06:00:26] <vdamewood> A kernel can define it's own printf (kprintf?) however it wants. That's separate from the C standard library's printf.
[06:00:47] <oldlaptop> There's nothing about printf()-qua-printf() that requires all the conversion logic to be in one bazillion-line routine, if that's what you mean
[06:01:08] <Izem> oh
[06:01:31] <vdamewood> In the background, printf just passes each format token and its value to another function for 'rendering'.
[06:01:32] <oldlaptop> the complicated parts of printf() are, as far as userland C programs are concerned, not in kernel space
[06:01:42] <Izem> it does seem that for some of the popular OSes printf involves a lot of the OS early on
[06:02:16] <vdamewood> Well, in most OS's, just putting a character on the screen requires a system call.
[06:02:41] <vdamewood> And there's no guarantee that it goes to the screen.
[06:02:44] <oldlaptop> The part that's affected by your "give each object a toString()!" idea (or do you want double-ported values a la Tcl_Obj? I do like Tcl_Obj...) is pure computation, it doesn't involve the OS at all
[06:03:14] <Izem> I see
[06:03:43] <oldlaptop> writing strings out somewhere involves the OS, converting an IEEE754 float to a string does not (except insofar as you consider the C standard library part of "the OS")
[06:04:01] <vdamewood> Yeah, printing an integer in base ten is basically mod by 10, divide by 10, repeat. Reverse.
[06:04:17] <oldlaptop> one could in princple do that in the kernel, but I don't see why you would, any more than you'd do sqrt() in the kernel
[06:04:46] <oldlaptop> (actually there's an extra reason not to do sqrt() in the kernel, kernels often want to avoid doing floating-point math of any kind for boring technical reasons - but never mind that)
[06:04:50] <vdamewood> oldlaptop: Well, Izem did specify the 'kernel', and the C library isn't part of that.
[06:05:44] <vdamewood> In fact, on Linux, the Kernel and the C library aren't even developed by the same group or organization.
[06:06:02] <oldlaptop> "on Linux" there isn't even a "the C library"
[06:06:14] <vdamewood> Linux basically just grabbed the libc from another, incomplete OS.
[06:06:20] <oldlaptop> there are, what, four or five actively-developed C libraries for linux?
[06:06:22] *** Quits: ChromaCat248 (~ChromaCat@user/chromacat248) (Quit: Leaving)
[06:06:36] <vdamewood> oldlaptop: I only count 2. glibc, and musl. Other two?
[06:06:48] <oldlaptop> dietlibc, uClibc at least
[06:07:18] <vdamewood> I wouldn't mind seeing someone rip out the FreeBSD libc and working that one out.
[06:07:25] *** Joins: Intelo (~Intelo@88.244.93.123)
[06:07:48] <Izem> there might be another one from the folks at embeddedartistry or something, let me check
[06:08:03] <oldlaptop> in any case, none of this has anything to do with whether your string conversions go through a printf() or through myObject.toString()
[06:08:54] *** Quits: cm007magnum (~Rheanna@119.96.171.22) (Remote host closed the connection)
[06:09:09] <Izem> no, it's just for microcontrollers
[06:09:45] <Izem> ok, thanks for clearing that up 
[06:10:06] <oldlaptop> You may, on the subject of string representations, find https://wiki.tcl-lang.org/page/Tcl%5FObj interesting.
[06:10:17] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[06:10:32] *** Quits: inky_ (~inky@5.77.149.211) (Ping timeout: 252 seconds)
[06:10:56] *** Joins: cm007magnum (~Rheanna@218.78.43.189)
[06:11:21] <vdamewood> One of the fascinating things that moc (part of Qt) generates is an implementation for the tr() function that Qt uses to localize strings.
[06:11:25] <oldlaptop> (The short version: All values are strings, but they may have "internal representations" for efficiency reasons, and either the "internal representation" or "string representation" can be lazily recomputed as needed to do things like, say, insert an element into a list and then print it to stdout.)
[06:11:40] <vdamewood> Oh, wait. I don't think it's moc. I think that's in the Q_OBJECT macro.
[06:12:09] <vdamewood> Is TCL stringly typed?
[06:12:09] *** Parts: Intelo (~Intelo@88.244.93.123) ()
[06:12:15] *** Joins: nicbk (~nicbk@user/nicbk)
[06:12:26] <oldlaptop> Tcl has no notion of types, all values are strings.
[06:12:39] <Izem> yeah, interesting approach
[06:12:43] <vdamewood> Then yep, it is.
[06:13:04] <oldlaptop> A string might happen to be stored as an array, or an IEEE float, or a hash table, if you're doing certain things with it, but that's an implementation detail - just a performance hack and nothing more
[06:13:11] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[06:13:23] <Izem> I'm starting to think I/O system is the most critical part of the OS design
[06:13:43] <Thedarkb> I like Tcl a lot.
[06:13:48] <vdamewood> Izem: For the most part, I/O is one of only a handfull of things that an OS actually does.
[06:14:07] <Thedarkb> I tried it out as an embedded scripting language in a game I was working on and found it very pleasant to work with.
[06:14:07] <vdamewood> the other parts are memory management, and process scheduling.
[06:14:28] <Izem> process scheduling is easy
[06:14:51] <Izem> without i/o you can do nothing
[06:15:25] <Izem> it seems to get involved in the driver interface as well, depending on how you designed it
[06:15:33] <vdamewood> Just think, systems used to come without any I/O at all. You had to add an expansion card to get any I/O.
[06:15:52] <vdamewood> driver interfaces are just I/O.
[06:16:21] <Izem> vdamewood: no keyboard?
[06:16:49] <vdamewood> What's a keyboard?
[06:17:04] *** Quits: xff0x (~xff0x@2001:1a81:52da:9800:62d0:9acd:c6eb:bc13) (Ping timeout: 252 seconds)
[06:17:22] <Izem> well you mentioned systems that had no I/O
[06:17:24] <vdamewood> Maybe I should have put that in quotes.
[06:17:29] <vdamewood> "What's a keyboard?"
[06:17:38] <Izem> so I wondered if they had no pheriperals
[06:17:58] *** Joins: xff0x (~xff0x@2001:1a81:52da:9800:9455:9dce:c41f:b6e7)
[06:18:12] <vdamewood> Yep. If you wanted to plug one of those fancy keyboard things into the computer, you needed an expansion card to plug the keyboard into.
[06:18:27] <Izem> crazy
[06:18:59] <Izem> well, I don't know much about computers after all
[06:19:02] <vdamewood> And often, people didn't, they would just put a tape reader card in and only use the punched tape to input programs.
[06:19:16] <Izem> I thought they used to be built into keyboards
[06:19:33] <arahael> Hex keypads eventually got used to replace punched tape.
[06:19:56] <vdamewood> Izem: Those are much later than the ones I'm talking about.
[06:20:17] <Izem> this is when you had to program firmware manually?
[06:20:31] <vdamewood> What firmware?
[06:20:46] <Izem> idk, that's what I heard
[06:20:54] <vdamewood> Also, when did you ever have to program firmware manually?
[06:21:23] <Izem> for certain computers apparantly you had to program a sequence of instructions after boot or something
[06:21:47] <vdamewood> Well, that wasn't firmware, that was just how the computer worked.
[06:22:14] <arahael> People would memorize those instruction sequences and just bang them in at the start.
[06:22:26] <Izem> that is some type of loader?
[06:22:36] <vdamewood> No.
[06:22:43] <vdamewood> That was just how the computer worked.
[06:22:51] <vdamewood> There wasn't anything to 'load'.
[06:23:00] <arahael> Load from where?
[06:23:08] * arahael puts that in quotations.
[06:23:13] <Izem> what about the OS?
[06:23:13] <arahael> "Load from where?" :)
[06:23:19] <vdamewood> "What's an OS?"
[06:23:41] <Izem> program to provision computer hardware
[06:23:42] <vdamewood> Izem: These old computers didn't have and didn't know how to use an OS.
[06:24:06] <arahael> Izem: Why would you use a program to provision the computer hardware, you've already got the hardware, right there, on your desk.
[06:24:28] <Izem> how old are we talking here? older than the ibm 704?
[06:24:30] *** Quits: wxads (~hlpme@user/hlpme) (Ping timeout: 260 seconds)
[06:24:57] <vdamewood> Late 70s. I'm talking about the Altair 8800.
[06:25:17] <vdamewood> Which was the world's first personal computer.
[06:25:17] <Izem> ok, guess I took a wrong turn somewhere
[06:26:22] *** Quits: hexingb (~hexingb@2409:8902:7ba2:e6d5:410f:8ee4:b06a:3cd9) (Ping timeout: 260 seconds)
[06:26:54] *** Joins: hexingb (~hexingb@101.236.65.144)
[06:27:24] <vdamewood> If you were lucky you got a paper tape reader, and you could load your program from that.
[06:27:59] <vdamewood> And back in the ancient days, even on the IBM XT, all programs ran at boot time.
[06:28:26] <vdamewood> DOS was basically just a library of routines in the early days.
[06:28:32] *** Quits: macaw (~macaw@176.221.120.196) (Ping timeout: 256 seconds)
[06:29:23] * vdamewood wonders when IBM started building hard drives into their systems, and when they stopped building systems without hard drives.
[06:30:49] <vdamewood> Looks like it was the IBM XT that was the first with a hard drive, which was the second model they made.
[06:32:00] <Izem> hard to imagine
[06:33:04] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 265 seconds)
[06:35:49] *** Quits: SecretFire (~secret-fi@97-120-38-94.ptld.qwest.net) (Read error: Connection reset by peer)
[06:36:17] *** Joins: SecretFire (~secret-fi@97-120-38-94.ptld.qwest.net)
[06:36:26] <Izem> vdamewood: would you say making an OS is a complex task?
[06:36:35] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[06:36:55] <Izem> Or was it not complex until 3d computer graphics ?
[06:37:12] <vdamewood> Izem: It's still not complex because of 3d computer graphics.
[06:37:49] <vdamewood> Really the hard part of writing a kernel these days, is getting documentation for the hardware you have to support.
[06:38:15] <Izem> I see
[06:38:42] <Izem> interesting 
[06:39:37] *** Quits: xff0x (~xff0x@2001:1a81:52da:9800:9455:9dce:c41f:b6e7) (Ping timeout: 252 seconds)
[06:40:08] *** Joins: xff0x (~xff0x@2001:1a81:52da:9800:6eef:7ca3:1a38:24c9)
[06:41:05] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b0a7:81a6:ed08:859a)
[06:43:28] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Remote host closed the connection)
[06:45:40] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b0a7:81a6:ed08:859a) (Ping timeout: 252 seconds)
[06:47:07] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[06:52:38] *** Quits: snake (~snake@user/snake) (Quit: Namae nado nai, omae to onaji da..)
[06:54:49] *** Joins: Samian (~Sami@user/samian)
[07:01:09] <micrex22> vdamewood: technically the larger enterprise systems had har disks prior to the 5150 (and if memory serves you could buy a HDD for the 5150 but it would cost both of your kidneys). Alan Shuguart worked on the IBM RAMAC before he founded Seagate (apparently 'Seagate' was a cutesy reimagination of 'Shugart' with english words)
[07:02:13] <vdamewood> Yeah, I should have specified PCs.
[07:03:39] *** Joins: zaher (~zaher@37.48.151.221)
[07:04:59] *** Quits: zaher__ (~zaher@37.48.179.188) (Ping timeout: 252 seconds)
[07:13:30] *** Joins: dunkeln (~dunkeln@94.129.71.70)
[07:13:30] *** Quits: dunkeln (~dunkeln@94.129.71.70) (Changing host)
[07:13:30] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[07:14:15] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:15:59] *** Quits: zaher (~zaher@37.48.151.221) (Ping timeout: 252 seconds)
[07:16:42] *** Quits: Izem (~Izem@bras-base-london1483w-grc-27-70-51-121-7.dsl.bell.ca) (Ping timeout: 256 seconds)
[07:17:16] *** Joins: dba (uid502594@id-502594.hampstead.irccloud.com)
[07:17:38] *** Quits: Lohengrin (~fredo@user/lohengrin) (Quit: WeeChat 3.2.1)
[07:18:37] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 252 seconds)
[07:19:20] *** Quits: irado (~irado@177.12.221.62) (Remote host closed the connection)
[07:19:46] *** Joins: inky_ (~inky@46.36.119.235)
[07:20:04] *** Joins: irado (~irado@177.12.221.62)
[07:23:51] *** Joins: Izem (~Izem@bras-base-london1483w-grc-27-70-51-121-7.dsl.bell.ca)
[07:25:47] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[07:27:43] *** Joins: wxads (~hlpme@user/hlpme)
[07:30:57] *** Joins: iridium__ (~iridium@122.175.247.240)
[07:35:18] <smallville7123> how tf do i handle this?     https://gist.github.com/mgood7123/4b0badaed0120302ea6fbb655a909523
[07:35:20] <bayaz> Title: A.md 
[07:35:54] *** Quits: LiftLeft (~LiftLeft@172.98.80.37) (Ping timeout: 265 seconds)
[07:36:38] <iridium__> is it okay if i handle GET requests to my web application by serving HTML and i make POST, PUT and DELETE requests from the client using `fetch()` and not `<form>` and serve only JSON for the client JavaScript to handle?
[07:39:51] <flaknet99> why use html at all
[07:40:19] <flaknet99> you've already crossed the rubicon by wanting JS+JSON replies
[07:42:20] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[07:42:48] <iridium__> flaknet99: are you suggesting i make GET requests too from the client JavaScript and render the HTML in the client?
[07:43:38] <flaknet99> why use html was the question i was trying to get at
[07:45:25] <iridium__> flaknet99: it makes client-side routing easier for me. i don't want to check the routes on the client everytime the browser asks for a webpage.
[07:45:37] <flaknet99> oh its a web page?
[07:45:39] <flaknet99> you said app
[07:46:35] <iridium__> flaknet99: it's actually an application. is it okay not to bother with routing for an application even if it runs in the browser?
[07:46:40] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 252 seconds)
[07:47:05] <flaknet99> a webpageapp, ahhh
[07:47:13] <iridium__> flaknet99: i'm confused if i want to make it a traditional website or an application, i mean.
[07:47:30] <iridium__> flaknet99: i'll be right back.
[07:47:52] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[07:47:59] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[07:48:41] <jtgd> I built (soldered) an Altair 8800 and indeed would toggle in a program through the front panel that I had hand assembled
[07:48:41] *** Quits: cm007magnum (~Rheanna@218.78.43.189) (Remote host closed the connection)
[07:48:54] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[07:48:54] *** Quits: nicbk (~nicbk@user/nicbk) (Ping timeout: 276 seconds)
[07:50:31] *** Quits: blahboybaz (~blahboyba@73.109.58.156) (Ping timeout: 252 seconds)
[07:50:38] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 252 seconds)
[07:50:44] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[07:50:48] *** Joins: cm007magnum (~Rheanna@101.91.192.124)
[07:50:59] *** Quits: cm007magnum (~Rheanna@101.91.192.124) (Read error: Connection reset by peer)
[07:52:10] *** Quits: sidy (~sidy@user/sidy) (Ping timeout: 252 seconds)
[07:52:27] *** Joins: blahboybaz (~blahboyba@73.109.58.156)
[07:52:55] *** Joins: cm007magnum (~Rheanna@101.91.192.124)
[07:53:07] *** Quits: cm007magnum (~Rheanna@101.91.192.124) (Remote host closed the connection)
[07:54:03] *** Joins: cm007magnum (~Rheanna@101.91.192.124)
[07:54:19] *** Joins: Guest_4466 (~Guest@106.209.216.139)
[07:54:22] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[08:01:31] *** Quits: hexingb (~hexingb@101.236.65.144) (Ping timeout: 265 seconds)
[08:01:41] *** Quits: JavaBean (~javabean@user/javabean) (Quit: oh bother)
[08:02:32] *** Joins: hexingb (~hexingb@2409:8902:7ba2:e6d5:95b8:5e44:4aae:4033)
[08:05:20] *** Joins: Guest9 (~Guest9@p200300c8cf120f00436777980c911f5f.dip0.t-ipconnect.de)
[08:06:03] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[08:07:08] <beaky> nice i didn't know strace had an ostrich as a logo https://en.wikipedia.org/wiki/Strace
[08:07:09] <bayaz> Title: strace - Wikipedia 
[08:07:49] <beaky> like when i found out sudo had a logo https://www.sudo.ws/
[08:07:50] <bayaz> Title: Sudo Main Page 
[08:09:40] *** Joins: Brumaire (~quassel@81-64-14-121.rev.numericable.fr)
[08:09:44] *** Quits: blahboybaz (~blahboyba@73.109.58.156) (Ping timeout: 265 seconds)
[08:10:02] *** Joins: Lohengrin (~fredo@user/lohengrin)
[08:10:21] *** Joins: blahboybaz (~blahboyba@73.109.58.140)
[08:15:11] <dre> lmao 
[08:15:16] <dre> nice find
[08:15:49] *** Joins: dunkeln (~dunkeln@94.129.71.70)
[08:15:49] *** Quits: dunkeln (~dunkeln@94.129.71.70) (Changing host)
[08:15:49] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[08:17:16] <jtgd> it seems the sudo logo is a reference to xkcd. nice.
[08:18:40] <micrex22> beaky: wait until you see the Realtek logo!
[08:20:14] <beaky> woah so realtek's logo is actually a crab
[08:20:18] <beaky> like rust's crab mascot
[08:20:43] <beaky> i always thought realtek's logo was a pair of headphones or something
[08:23:31] *** Parts: Guest9 (~Guest9@p200300c8cf120f00436777980c911f5f.dip0.t-ipconnect.de) ()
[08:28:00] *** Joins: JavaBean (~javabean@user/javabean)
[08:28:49] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[08:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[08:31:15] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[08:32:49] *** Parts: somercet (~somercet@c-73-190-18-206.hsd1.mi.comcast.net) (Good Bye)
[08:32:53] *** Quits: zwr (~zwr@2804:d45:b966:fb00:444d:93c6:eb87:79af) (Remote host closed the connection)
[08:32:54] *** Joins: nicbk (~nicbk@user/nicbk)
[08:35:10] *** Quits: hexingb (~hexingb@2409:8902:7ba2:e6d5:95b8:5e44:4aae:4033) (Ping timeout: 260 seconds)
[08:35:45] *** Joins: droid3 (~fffd@024-177-015-135.res.spectrum.com)
[08:35:46] *** Joins: dan01 (~dan01@2a02:2f09:381b:db00:19ad:8022:fc85:4de7)
[08:36:27] <droid3> Let me know what you guys think
[08:36:29] <droid3> https://www.youtube.com/watch?v=tqWYQgGoxqY
[08:36:30] <bayaz> Title: Kronecker's amazing substitution method 
[08:36:46] <droid3> First video for one of my channels.
[08:36:52] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[08:37:30] *** Quits: nicbk (~nicbk@user/nicbk) (Remote host closed the connection)
[08:37:46] <droid3> I know i lack good typesetting skills/typography if i only could figure out a easy way to do latex/tex to match it to my font.
[08:38:51] *** Quits: cm007magnum (~Rheanna@101.91.192.124) (Remote host closed the connection)
[08:39:42] <droid3> Curious isnt fonts when render as a picture anyway by the OS thru the .ttf /glyph files.
[08:40:35] <droid3> What i am debating on is the best way to get math symbols /latex/tex consistent with my other words/pictures when creating videos.
[08:40:39] *** Joins: cm007magnum (~Rheanna@101.91.238.197)
[08:41:42] <droid3> making things look applying can be a channel in video specially when there not filmed but there more cgi based/text animated.
[08:41:49] <iridium__> droid3: you can check out 3Blue1Brown. he has a very good style.
[08:42:05] <droid3> manim i think he use that he developed.
[08:42:07] <iridium__> flaknet99: i'm back. what were you suggesting?
[08:42:16] *** Quits: Izem (~Izem@bras-base-london1483w-grc-27-70-51-121-7.dsl.bell.ca) (Ping timeout: 256 seconds)
[08:42:48] <iridium__> droid3: you can use Manim too. i played with it. if you know Python, it's good enough. although support for SVG is lacking.
[08:42:52] <droid3> He does a great job at making things look could as well as explaining them. I believe he is one of the best interms of math channel looks.
[08:43:25] <droid3> Numberphile is probably slightly more broad and mathlogger slightly more advanced.
[08:43:43] <droid3> But between the 3 of them they are simple the 3 best in my eyes.
[08:43:47] <iridium__> flaknet99: if i'm making a simple application which is supposed mostly to run in the mobile phone, can i leave routing aside?
[08:43:48] <droid3> Overall that is
[08:44:42] <iridium__> droid3: visualisation is very important. you can also check out some JavaScript animation library for math animations. browsers give you a lot of room to play with and then you could record it using a screen-recorder.
[08:44:58] *** Quits: wxads (~hlpme@user/hlpme) (Ping timeout: 252 seconds)
[08:45:11] <droid3> iridium i rather not use manim at the moment. I am curious why wasnt latex/tex just part of are regular font we have installed by default.
[08:45:30] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 265 seconds)
[08:45:52] <droid3> I guess what i am wondering is if all the fonts are just glyph files/ rendered as either a bitmap or svg vector graphic small image on a word document or pdf.
[08:46:10] <droid3> why we need all these different types of tex , ps /pdf ,...etc
[08:47:24] <iridium__> droid3: LaTeX is a typesetting system. it's not a type.
[08:47:42] <droid3> Ya well i can always record my screen , use a scanner of my drawn out math proofs,...etc but they just dont look quite as good at the cgi /text animation that 3blueOneBrown uses and other top math channels.
[08:47:53] <iridium__> droid3: you can have different font in LaTeX but that's just a small part of it.
[08:48:13] <iridium__> droid3: they do. have you checked out D3.js?
[08:48:30] <iridium__> droid3: you might have to do some coding of your own to do it in JavaScript.
[08:48:32] *** Joins: Izem (~Izem@bras-base-london1483w-grc-27-70-51-121-7.dsl.bell.ca)
[08:48:45] <droid3> iridium so then i guess i dont mind if i render the latex to a images and just put the image in a powerpoint or slide show it looks the same in the end.
[08:49:38] <iridium__> droid3: LaTeX has nothing to do with it unless you want PDF files. just use something that renders the formula into SVG like what Wikipedia uses, i think.
[08:49:56] <iridium__> droid3: MathML, etc.
[08:49:57] <droid3> However the issue is matching latex font /size with the font/size in the slideshow once you make them into images thru screenshots ...etc its kind of a pain to go back and regenerate if you messed up the font
[08:50:11] <iridium__> droid3: what's your objective?
[08:50:54] <droid3> O so then my question is maybe i shouldnt render it as a bitmap png,gif,..etc image. If i did it as a svg i wouldnt have to worry about sizing issues...etc
[08:50:59] <iridium__> droid3: it's not. take a screen recording only if you are satisfied with the animation. you can change the parameters through JS or CSS on the fly.
[08:51:09] <iridium__> droid3: SVG is very powerful.
[08:51:21] <droid3> But what program allows me to go from latex/tex to svg images of the formula?
[08:51:41] *** Quits: cm007magnum (~Rheanna@101.91.238.197) (Remote host closed the connection)
[08:52:04] <iridium__> droid3: in any case, you're not transferring the data so don't worry about the size of the SVG.
[08:52:24] *** Joins: cm007magnum (~Rheanna@101.91.238.197)
[08:52:40] <droid3> because if i have it in svg i can scale it down or resize it to anything i want without having to deal with font as long as i got the initial font type to corrospond to the font type of the other elements of the slideshow.
[08:53:01] *** Quits: cm007magnum (~Rheanna@101.91.238.197) (Remote host closed the connection)
[08:53:08] <iridium__> droid3: do a search and figure it out. 
[08:53:15] <droid3> https://www.youtube.com/watch?v=tqWYQgGoxqY 
[08:53:16] <bayaz> Title: Kronecker's amazing substitution method 
[08:53:24] <droid3> for example watch this video of mine.
[08:53:41] *** Joins: cm007magnum (~Rheanna@101.91.238.197)
[08:53:58] <droid3> Its ok. But the issue is you can tell where its font is different in size and type ...probably even tell when its a screenshot image as well.
[08:54:49] <iridium__> droid3: if you're making a video, don't use the same layout as a presentation. from the thumbnail itself, i can see that you're putting way too much stuff on the screen.
[08:55:05] <droid3> My objective is to get better at latex/tex so that its unnoticeable. And from a graphics designer point of few the typography aka the layout/fonts all make sense /are most pleasing to the eye.
[08:55:19] <iridium__> droid3: you want to dilute it to the absolute basic so viewers get a feel for it. they can then learn the details from the books, etc.
[08:56:08] <droid3> Ok so you think its better to split up the slides and build the slides more gradually one sentence or two at a time.
[08:56:28] <droid3> Sort of like 3brown1blue does it
[08:56:37] <iridium__> droid3: this is a common mistake people make while designing presentation and videos.
[08:56:55] <droid3> it just going to have more slides/frames but essentially the same content.
[08:56:56] <iridium__> droid3: your audience is there to *listen* to you. not read stuff on the page or screen.
[08:57:44] <iridium__> droid3: 80% of what you have written their could be removed. instead of *writing* when and where he was born, just attach some picture of the city or some icon from that era.
[08:58:10] <iridium__> droid3: it's a lot of work but that's what it takes to make a video. it's multimedia. utilise it.
[08:58:14] <droid3> Ya i know audio is later. The harder part was figuring out the latex/tex typesetting stuff. 
[08:58:15] <iridium__> s/their/there/
[08:58:48] <iridium__> droid3: convert LaTeX into SVG and you're. the hard part is figuring out what to show and how.
[08:58:59] <iridium__> s/you're/you're done/
[08:59:23] *** Quits: blahboybaz (~blahboyba@73.109.58.140) (Ping timeout: 252 seconds)
[08:59:39] <iridium__> droid3: keep the content to the minimal. if there are too many words on the screen, i wouldn't read 'em anyway.
[08:59:39] <droid3> Do you see where the font gets different. My focus is to get latex/tex to work with /complement the document its a major part the math symbols in a math video obviously.
[09:00:16] <droid3> Yet it so much easier just videoing my at a board or writting stuff on paper in real time. Then doing it completely graphical
[09:00:19] <iridium__> droid3: i see the fonts. but that's not the problem you should be solving.
[09:00:46] <iridium__> droid3: the way you're making this video, it would be better if you just write a blog post about it.
[09:00:52] *** Joins: blahboybaz (~blahboyba@73.109.58.204)
[09:00:57] <iridium__> droid3: video-making is about visualisation.
[09:01:06] <droid3> That why alot of people that dont do the animation based/cgi based math channels and resort to just at the board or on a piece of paper is much faster they can push out new material /content.
[09:01:29] <iridium__> droid3: you can push new material or content alright. but you can't make it stand out.
[09:01:45] <droid3> agreed 
[09:02:31] <iridium__> droid3: the way your video is right now, it would be much better if you just went all out Khan Academy style and wrote it using a stylus.
[09:02:42] <iridium__> droid3: but everybody is doing that right now, i think.
[09:02:43] <droid3> But numberphile one of my opinion of the best math channel is not like animation/cgi. No where near as complex in that aspect as 3blue1brown.
[09:03:33] <iridium__> droid3: yes, record yourself using a camera and write it using pen and paper. that's a good approach too. Vsauce uses it to great acclaim. Computerphile too.
[09:03:40] <droid3> But its strength is it has the top mathematicians and breath of content and some neat cartoon affects. The content is more catchy then the animation of that channel.
[09:04:13] <iridium__> droid3: the cartoon effects are not required if you can make similar demonstrations using real stuff. think Lego bricks, etc.
[09:04:18] <droid3> So i guess it depends on what your after computerphile same way really great channel but not really an animation channel as much as  a 3blue1brown.
[09:04:24] <iridium__> droid3: the key is visualisation.
[09:04:41] <iridium__> droid3: animation is not the only way to achieve visualisation.
[09:04:45] <droid3> Well i can make the math appealing and show some neat math not really on youtube before.
[09:05:04] <droid3> However i do like the cgi/animation appeal.
[09:05:19] <iridium__> droid3: animation is very time-consuming to do in my experience.
[09:05:32] <iridium__> droid3: but visualisation without animation requires a lot of creativity.
[09:05:58] *** Quits: Samian (~Sami@user/samian) (Ping timeout: 260 seconds)
[09:06:00] <iridium__> droid3: regardless, they make you stand out and above the other 2-cent content.
[09:06:15] <droid3> ya so i am debating on weather i just focus on putting new creative math that not many people seen before out there and sacrificing catchiness 
[09:07:26] <droid3> Because i can always scan it in and create slide shows , or i can film just me at a board or my hand writting out math on a paper.
[09:07:38] <iridium__> droid3: there is no catchiness here. go for the intuition, with animation or otherwise. you will never be popular across YouTube with math content but at least you'll generate a good fanbase that will motivate you to make new content.
[09:08:06] <droid3> If its good math like blackpenRedpen it will work going by his channel. However animation just makes it all the more cooler.
[09:08:08] <iridium__> droid3: between slideshows and pen/paper. i would prefer pen/paper. it's more natural.
[09:08:26] <iridium__> droid3: animation takes a lot of time. new channels can't afford that.
[09:09:18] <droid3> well its hard to compete even if i was to doing it all by myself.
[09:09:46] <iridium__> droid3: focus on making better content.
[09:10:22] <droid3> Its an impossible task i may know more math or as much math as them. But to do all the editing , making stuff look great, and all the other stuff that goes into perfecting a video channel show. That a stretch without help.
[09:11:11] *** Joins: user51 (~user51@176.228.115.184)
[09:11:11] <droid3> Ya i will definitely focus on that but also a major thing to make better content you kind of have to be a master of latex/tex and embedding math equations/symbols into your video in the way you want them.
[09:11:40] <droid3> And that the change for me to get right before i can even get the content neat/right. 
[09:11:48] <iridium__> droid3: if you use pen + paper, you don't need to worry about LaTeX.
[09:11:50] *** Quits: Lohengrin (~fredo@user/lohengrin) (Quit: WeeChat 3.2.1)
[09:12:09] <droid3> Many of times i am using sqrt(r) instead of latex/tex and nobody wants to have to read that in a video.
[09:12:39] <iridium__> droid3: yeah. `sqrt` looks pretty ugly, even in programming. i wish we have more symbols in ASCII.
[09:12:48] <iridium__> s/have/had/
[09:13:02] <iridium__> droid3: like APL.
[09:13:29] *** Joins: wxads (~hlpme@user/hlpme)
[09:13:57] <droid3> right i though about that many good math channels do use pen/paper and blackboard/whiteboard. And thats the way all go if i just find latex/tex and animation videos are taking up to much of my time. And i find i dont want to go thru the pain of doing animation videos and rather focus on get math out there in a reasonable amount of time before it becomes old news.
[09:13:59] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Read error: Connection reset by peer)
[09:14:20] *** Joins: chomwitt (~chomwitt@2a02:587:dc0a:5800:12c3:7bff:fe6d:d374)
[09:14:57] <iridium__> droid3: the one thing you need to care about with recording yourself is lighting. and also if you're comforatable showing your face.
[09:15:16] *** Joins: Lohengrin (~fredo@user/lohengrin)
[09:15:38] <iridium__> droid3: invest in lighting to make it look natural. and don't just record your hand on a paper. actually record yourself speaking, a la Computerphile.
[09:15:39] <droid3> there nice and cool but sometimes i find myself thinking its going to take me several days or weeks to get an animation video out there. And i want to get my content out there quickier the only way to do it is blackboard/whiteboard or paper/pencil and just record in realtime
[09:15:52] <iridium__> droid3: it is quicker.
[09:16:04] <iridium__> droid3: delay animation till you can afford to do it.
[09:16:11] *** Joins: Metalsutton (~Metalsutt@101.100.152.253)
[09:16:27] *** Quits: Metalsutton (~Metalsutt@101.100.152.253) (Read error: Connection reset by peer)
[09:16:31] <iridium__> droid3: target 5-6 videos per month at the very least. the best is 2-3 videos per week.
[09:16:41] <droid3> ya but i dont have to show my face for videos only my hands or not even that i can edit/cut out stuff , rotoscope stuff ...etc once i got the math on video
[09:16:50] <iridium__> droid3: no, you do.
[09:17:05] <iridium__> droid3: showing hands is as boring as reading from slides.
[09:17:25] <iridium__> droid3: tell me one channel except 5-Minute Crafts that doesn't show face and is popular.
[09:17:46] <droid3> i dont feel that way i never cared if it was an interesting topic just to see the math vs having to see the person with the math.
[09:17:49] <iridium__> droid3: faces are important for visualisation. when viewers see you speak, they are more interested.
[09:18:12] <droid3> Normally its not a major deal to me. But this is highly opinionated for subject areas. I dont think math is one of those things.
[09:18:29] <Lohengrin> droid can become a vtuber :v
[09:18:33] <iridium__> droid3: you need to attach a brand with your channel for it to be memorable. your handwriting on a paper is hardly a brand.
[09:18:56] <iridium__> droid3: show your face or make animation. that's the only choice you face. i've thought a lot about this.
[09:19:14] <droid3> iridium__ maybe if its for a certain level i doubt undergraduate,grad students or researchers care if they see the person in the video just as long as the content is what they want to see.
[09:19:17] <jazzy> that's one of the reasons why lectures are so much more effective than remote learning
[09:19:23] <jazzy> the theatre of it all is engaging
[09:19:24] <iridium__> droid3: they do.
[09:19:34] <droid3> ok well all have to make that choose eventually.
[09:19:47] <iridium__> droid3: math professors and students are human beings too.
[09:20:07] <droid3> But i still have to see if i want to go the animation/latex/tex route (hard video making way) or the in realtime video filming way.
[09:20:16] <iridium__> droid3: it's a natural human instinct. pen on paper is a strategy for 2000s.
[09:20:33] *** Joins: Samian (~Sami@user/samian)
[09:20:48] <droid3> well i am older so came before most of the video era
[09:21:00] <iridium__> droid3: welcome to the future, old man.
[09:21:12] <iridium__> droid3: how old are you? 40?
[09:21:32] <droid3> I have tried podcasting but even the best math podcast seem kind of mediocre in my opinion. Because with math topics you really need visual demonstrations and audio.
[09:21:52] <jazzy> numberphile is *very* good
[09:21:57] <iridium__> droid3: yes. and they need to see you explaining things. are you afraid that you don't look good on camera?
[09:22:00] <jazzy> but not a podcast
[09:22:15] *** Quits: Samian (~Sami@user/samian) (Read error: Connection reset by peer)
[09:22:32] <droid3> But i have a podcast channel i havent done stuff with in a long while. I can always do math/stem podcast but there only good to get quick math/science/engineering news out. Like somebody computed the next digit of pi ,...etc
[09:22:34] <iridium__> droid3: even podcasts are recorded for this reason. people love to see other people when given a choice. i would rather see a podcast than hear it. we are visual creatures.
[09:23:12] *** Quits: blahboybaz (~blahboyba@73.109.58.204) (Ping timeout: 265 seconds)
[09:23:18] <jazzy> oh actually, numberphile might have a podcast after all
[09:23:22] <iridium__> droid3: i've done plenty of thinking on this subject. you have to use a camera on your face. don't care if you don't look good. it's not a beauty pageant.
[09:23:24] <jazzy> I'm sure it's very high quality
[09:23:48] <droid3> So maybe i should use podcast to introduce whats coming and what the current new stuff that coming out is. As a quick channel alert and let the video/videocast/youtube channel focus on animation/latex (hard/not so much content but very appealing side)
[09:24:06] <iridium__> droid3: no. put such alerts on Instagram and Twitter.
[09:24:28] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:8d7a:8984:59ac:7d9d) (Read error: Connection reset by peer)
[09:24:28] <droid3> ya but even numberphile podcast get boring and alot of them are sometimes an hour long
[09:24:35] <X-Scale> droid3: have you seen some of the math visualization videos by 3Blue1Brown at youtube ? they're pretty amazing
[09:24:38] <iridium__> droid3: check out Vsauce, Veritasium and Computerphile. they are masters in this field.
[09:24:49] *** Joins: blahboybaz (~blahboyba@73.109.56.252)
[09:24:52] <droid3> I think they had much more success with there videocast then there podcast channel
[09:25:15] <iridium__> droid3: podcasts suck unless you're interviewing some personality or telling a story.
[09:25:35] <iridium__> droid3: for complicated conceptions, visualisation is very important.
[09:25:54] <droid3> Even 3blue1brown has a podcast side of things and its not that great. It is slightly better because his podcast show him not just the audio. But even still its nothing like his animation youtube channel.
[09:26:45] <iridium__> droid3: i would clean myself and cheerfully make videos of myself in front of board and try to explain concepts creatively, using Lego bricks and toys, clay figures, maps, conversations, interviews to mathematicians, etc.
[09:26:48] <droid3> Ya podcast can be great for general new breaking news. Or to personal interviews or opinions of top professionals ...etc
[09:26:51] <iridium__> droid3: that's what you should do.
[09:27:47] <iridium__> droid3: check out Johnny Harris too.
[09:27:59] *** Quits: akevinhuang (~thekevinh@user/thekevinhuang) (Ping timeout: 252 seconds)
[09:28:15] <iridium__> droid3: also, the maroon shirt guy, Tom <whatever> from England.
[09:28:31] <iridium__> droid3: they all show their faces. you can too.
[09:28:35] <droid3> curious iridium do you have any other times when to use a podcast over a video cast.
[09:28:36] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:8da4:a218:1597:833d) (Ping timeout: 268 seconds)
[09:28:46] <droid3> other then the few times we talked about above.
[09:28:46] *** Quits: cm007magnum (~Rheanna@101.91.238.197) (Remote host closed the connection)
[09:29:22] <droid3> I say personal interviews/opinions or breaking news can be done with podcast well or to voice your opinions.
[09:29:35] <iridium__> droid3: podcast severly limits your audience. it's only good for stuff that could also be done on the radio. you're not making use of the video technology then, are you?
[09:30:19] <iridium__> droid3: do you want to build a video channel or just ruminate on the possiblities. don't think about this too much. just do it.
[09:30:21] <droid3> But mostly everything else is better served with a great video youtube channel rather then just a audio only channel. No matter how good the cover art of the podcast is or how you creative writingly word it.
[09:30:35] *** Joins: cm007magnum (~Rheanna@101.89.207.55)
[09:30:38] *** Quits: jazzy (~jaziz@2600:380:854a:af07:5c15:5702:68a5:4b72) (Ping timeout: 250 seconds)
[09:31:00] <droid3> On last thing is website/blogs when is it better to do just those instead of a video /video channel?
[09:31:11] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[09:32:25] *** Joins: brabrax (~brabrax@user/brabrax)
[09:32:33] <droid3> at least for math/science topics podcast to me arent really applicable /less useful over all to audience then video.
[09:32:39] <iridium__> droid3: video channel is the only way to make a math video. or write a book instead.
[09:33:07] <droid3> But comparing video to website/blogs now is the last case to think on.
[09:33:24] *** Joins: hexingb (~hexingb@101.236.65.144)
[09:33:44] <droid3> Do people like video channels or math books / website/blogs better?
[09:33:49] <iridium__> droid3: that's not a comparison. 
[09:34:02] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[09:34:27] <iridium__> droid3: what do you want to do is the question. it seems that the only thing you want to do is contemplate on the myriad possiblities. that's no use. do it.
[09:34:29] <droid3> Basically what i am getting at with the STEM subject i know when to use podcast for the very few cases that its a good tool.
[09:34:35] *** Quits: blahboybaz (~blahboyba@73.109.56.252) (Ping timeout: 252 seconds)
[09:35:11] <droid3> But thinking on when you do video vs when you just make a blog,book,website is the last thing to think on.
[09:36:02] <droid3> Ok so i already have a podcast channel that i can use off/on to get the news out. And put it as a link in my youtube channel.
[09:36:20] <iridium__> droid3: that's not how it works.
[09:36:22] *** Joins: blahboybaz (~blahboyba@73.109.58.148)
[09:36:36] <iridium__> droid3: YouTube is good enough for everything. make 'em follow you on Twitter or Instagram.
[09:36:43] <droid3> I already a few github repos i can link to for code and blogs/website.
[09:36:46] <iridium__> droid3: nobody cares about your website.
[09:37:37] <iridium__> droid3: if you go for your website, you miss being part of the spectacle. just use Twitter and Instagram.
[09:37:49] <droid3> So it better to get everybody to flock to your youtube channel then it is to flock to your website,blog,or github code.
[09:37:56] <iridium__> droid3: once you've got enough creds, they will flock to your website too.
[09:38:02] <iridium__> droid3: absolutely.
[09:38:47] <iridium__> droid3: i don't even know the websites for my favourite YouTube channels. they people whose websites i visit don't make YouTube videos at all. it's a different domain altogether.
[09:39:04] <droid3> In that case its better to focus on youtube majority and perfect the channel the rest should come by people realizing the links or my saying take a look at my other github ,blogs, webpages,podcast,...etc from my youtube channel.
[09:39:21] <iridium__> droid3: absolutely. link it in the description.
[09:39:45] <iridium__> droid3: but focus on YouTube for content and Twitter and Instagram for announcements and other novelties.
[09:40:00] <iridium__> droid3: that's what the players do in this field.
[09:40:09] <droid3> So you think youtube channel popularity or getting a good youtube channel far out ways good blogs,websites,podcast,github code.
[09:40:21] <iridium__> droid3: and find some unique name. Higher Order Mathematics doesn't cut it.
[09:40:26] <droid3> if your trying to target audiences or build a fan base.
[09:40:28] <iridium__> droid3: absolutely.
[09:40:48] <iridium__> droid3: everything is higher order now. it reminded me of Higher Order Perl.
[09:41:06] <iridium__> droid3: it's boring. what's your name, may i ask?
[09:41:37] <droid3> Ok so there two way to get a good youtube channel. 1) do the blackboard/whiteboard ,pen paper realtime recording.  2) do the more difficult animation/cgi perfecting latex/tex...etc route / taking longer to make videos.
[09:41:55] <Hash> I want to make youtube videos
[09:42:09] <Hash> Teach people how to hack the planet
[09:42:14] <Hash> Cybersecurity videos
[09:42:18] *** Quits: Guest_4466 (~Guest@106.209.216.139) (Remote host closed the connection)
[09:42:18] *** Quits: Izem (~Izem@bras-base-london1483w-grc-27-70-51-121-7.dsl.bell.ca) (Remote host closed the connection)
[09:42:33] <iridium__> droid3: for you only 1 is viable. and only if you show your face. i gather you're not a native English speaker. are you worried about being judged on basis of looks and accent.
[09:42:58] <droid3> Well ya making youtube videos and keeping up with them on a schedule is going to be pretty hard. What ever happened to the days where the math person with the most math knowledge ruled.
[09:43:18] <Hash> There was never a technocracy
[09:43:19] <droid3> It seems you got to now be a multimedia guys along with the math.
[09:43:24] <Hash> that remains to be a dream.
[09:43:25] <iridium__> droid3: no *math* person has ever ruled. that's such a stupid way of thinking.
[09:43:34] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[09:43:34] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[09:43:34] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[09:43:43] <iridium__> droid3: you share and learn. it's not a competition.
[09:43:46] <flaknet99> if you make youtube videos you consent to the ever growing list of malicious ads they serve to your audience
[09:43:55] <droid3> not ruled but its seems the popularity or people value the people with the best youtube channels. 
[09:44:01] <iridium__> flaknet99: only if they monetise.
[09:44:08] <iridium__> droid3: no.
[09:44:13] <flaknet99> no the ads are everywhere
[09:44:22] <droid3> And having the top youtube channel doesnt imply your the best mathematician either.
[09:44:29] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:44:29] <iridium__> droid3: YouTube is not a platform for doing math. explaination and teaching are different.
[09:44:30] <flaknet99> "download latest drivers accidentally click here plz"
[09:44:46] *** Joins: Guest3758 (~Guest@host84.190-225-236.telecom.net.ar)
[09:44:51] <iridium__> flaknet99: sensible people block 'em ads.
[09:45:02] <flaknet99> you're still consenting to that behavior
[09:45:05] <droid3> But i have to say bluebrown , numberphiles ,...etc all have great speakers and there all great teachers.... it just seems they can really pump out videos so damn fast.
[09:45:25] <iridium__> flaknet99: although, that is much better than some underage girl dancing in a TikTok video.
[09:45:29] <droid3> They got to have some extra help not one person doing it all.
[09:45:29] <flaknet99> an accomplice?    or unwilling participant? does it make a difference
[09:45:58] <iridium__> droid3: to pump out videos fast, you're going to have to make the process easier.
[09:46:52] <droid3> ok thanks for the talk all have to decide on what direction or how i want the theme of my video channel to go. Aka the look. it seems 3blue1brown stays consistent with its look black background , animation very very good ...etc
[09:46:55] <iridium__> droid3: as i said, leave the animation now. just focus on creatively explainin concepts. refer Computerphile where Mike explains public key cryptography using some colorful liquids and stuff. that's the kind of stuff you ned.
[09:47:24] <iridium__> droid3: and show your face.
[09:47:35] <iridium__> droid3: that's the consistency.
[09:47:40] <iridium__> droid3: that's your brand.
[09:47:45] <droid3> ya and the process would become 1000 times easier if i can master latex/tex / creating math equations /symbols in my video and animating them.
[09:47:51] *** Quits: A_Dragon (A_D@libera/staff/dragon) (Quit: ZNC - https://znc.in)
[09:47:58] *** Joins: A_Dragon (A_D@libera/staff/dragon)
[09:48:17] <iridium__> droid3: it's the same old geezer to explain the math concepts. viewers would be able to relate.
[09:48:34] <droid3> Just being good at latex/tex without having the issue of looking for the right symbol or why the heck is the layout of the latex fing up...etc would save me tremendous amounts of time.
[09:48:41] <iridium__> droid3: animation is not easily automated. it's not just about figuring the fonts out.
[09:49:03] <droid3> I am using LYX for the latex editor but its kind of shitty if you ask me. In terms of getting all the stuff i want.
[09:49:24] <GeDaMo> Make a video about writing your own editor :P
[09:49:35] *** Joins: mmfood (~mmfood@45.135.187.13)
[09:49:52] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 252 seconds)
[09:50:34] <droid3> Ya so the bigger issue is i have to think about how i can make questions with latex/tex software and automate in an efficient manner what i want it to exactly look like. As automating very repeating step that takes up to much time.
[09:51:28] <droid3> Well unlike 3brown1blue i not to desired to go into writting my own at this time. It just doesnt appeal to me. I am more into writting computer algorithms to solve math computation problems at the moment.
[09:51:40] <droid3> but eventually that might change one day back over.
[09:51:42] <iridium__> droid3: oh my God! i've already told you that you don't have to worry about using LateX if you just record yourself.
[09:51:45] <user51> write an algorithm generator :P
[09:52:01] <droid3> Anyway thanks for the talk.
[09:52:25] <iridium__> it looks like droid3 is the Lord of the Masturbators who doesn't want to make videos, but just think about making videos. thanks buddy.
[09:52:46] <droid3> Ya but recording myself is the easy way out its not going to get me a channel like 3brown1blue it be more like a numberphile channel or mathlogger channel with less animation.
[09:54:01] <iridium__> that's enough for one day.
[09:57:33] *** Quits: iridium__ (~iridium@122.175.247.240) (Quit: leaving)
[09:57:38] *** Quits: wxads (~hlpme@user/hlpme) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[10:00:44] *** Quits: Lohengrin (~fredo@user/lohengrin) (Quit: WeeChat 3.2.1)
[10:01:00] *** Joins: kobalt (~rsonx@user/kobalt)
[10:02:04] <kobalt> hi. there is a theorem that says that every directed complete graph has a Hamiltonian path. But what if the graph is this https://share.sketchpad.app/21/b09-5876-ae376f.png
[10:02:05] <bayaz> Type: image/png Size: 112.9 kB 
[10:03:56] <GeDaMo> Top right, bottom left, bottom right, top left?
[10:04:44] *** Quits: Cashlin (~hp@user/cashlin) (Quit: Konversation terminated!)
[10:05:14] <kobalt> ah yes
[10:05:39] *** Quits: Trashlord (~trash@user/trashlord) (Quit: ZNC 1.8.2 - https://znc.in)
[10:05:58] *** Joins: Trashlord (~trash@user/trashlord)
[10:06:12] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[10:06:13] <kobalt> can't I tweak it to have none
[10:07:17] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[10:09:36] <GeDaMo> That sounds more like a ##math question
[10:11:15] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[10:14:55] *** Quits: blahboybaz (~blahboyba@73.109.58.148) (Ping timeout: 265 seconds)
[10:16:24] *** Joins: blahboybaz (~blahboyba@73.109.58.188)
[10:18:42] *** Joins: white5moke (~me@ip72-219-109-30.oc.oc.cox.net)
[10:18:46] *** Quits: cm007magnum (~Rheanna@101.89.207.55) (Remote host closed the connection)
[10:19:16] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[10:19:51] *** Joins: nrl^ (~nrl@68.101.50.106)
[10:20:12] *** Joins: cm007magnum (~Rheanna@101.91.193.123)
[10:20:42] *** Joins: mrig (~mrig@user/mrig)
[10:21:57] *** Joins: dunkeln (~dunkeln@94.129.71.70)
[10:21:57] *** Quits: dunkeln (~dunkeln@94.129.71.70) (Changing host)
[10:21:57] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[10:29:36] *** Joins: soapsudsxx (~soapsudsx@141.193.188.134)
[10:31:42] *** Quits: white5moke (~me@ip72-219-109-30.oc.oc.cox.net) ()
[10:35:46] *** Quits: Guest3758 (~Guest@host84.190-225-236.telecom.net.ar) (Read error: Connection reset by peer)
[10:38:39] *** Joins: aradesh (~aradesh@user/aradesh)
[10:39:17] <edgar-rft> for programmers everything beyond 1 an 0 sounds like complicated math :-)
[10:39:48] <GeDaMo> That's me! :P
[10:39:50] *** Quits: dan01 (~dan01@2a02:2f09:381b:db00:19ad:8022:fc85:4de7) (Read error: Connection reset by peer)
[10:40:56] <edgar-rft> in times wher everything's only braindeadly cobbled together from prefabricated libraries nobody needs to calculate math in their heads anymore
[10:41:14] *** Joins: extern (~archer@141.226.60.187)
[10:41:49] <edgar-rft> OMG numbers!!! - please ask in ##math 
[10:41:56] *** Quits: extern (~archer@141.226.60.187) (Client Quit)
[10:42:04] *** Joins: Buttercat (~Buttercat@user/buttercat)
[10:42:06] <GeDaMo> 1 + 1 still = 10, right? :|
[10:42:15] *** Joins: extern (~archer@141.226.60.187)
[10:42:34] <user51> do you have a library for that? + seems overloaded
[10:42:50] <user51> isn't that an AND parallel with a XOR?
[10:44:59] <edgar-rft> there are exactly 10 kind of people: those who can read binary and those who can't
[10:45:13] <edgar-rft> okay, that's an old one...
[10:45:46] <user51> wrong. that's 2 bits, hence 4 permutations :)
[10:46:28] <edgar-rft> user51: have you considered asking in ##math? :-)
[10:46:44] <user51> ban the M word
[10:48:43] *** Quits: blahboybaz (~blahboyba@73.109.58.188) (Ping timeout: 252 seconds)
[10:49:26] <beaky> 1+1 is 11 stringly typed programming
[10:50:20] *** Joins: poww0wmus1c (~poww0wmus@gateway/tor-sasl/poww0wmus1c)
[10:50:49] <edgar-rft> true, PRINT "1"+"1" prints "11" in BASIC
[10:51:57] *** Quits: cm007magnum (~Rheanna@101.91.193.123) (Remote host closed the connection)
[10:52:30] *** Joins: cm007magnum (~Rheanna@101.91.193.123)
[10:52:48] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Ping timeout: 250 seconds)
[10:53:14] *** Quits: nrl^ (~nrl@68.101.50.106) (Ping timeout: 252 seconds)
[10:54:44] <pyzozord> lol, nothing like little lording around in the morning "omg I know math, all people who don't are clearly inferior intelects"
[10:55:34] *** Joins: blahboybaz (~blahboyba@73.109.57.12)
[10:56:35] <pyzozord> typical zoomer student attitude. You are gonna have hard face frontalt encounter with reality later, it will make you a little bit more humble
[10:57:24] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[10:58:54] <user51> beaky: i used that once, actually
[10:59:21] <user51> as in, concatenating numbers since i didn't have shifts in awk
[10:59:35] <beaky> nice i like awk
[10:59:52] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 265 seconds)
[11:00:14] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b0a7:81a6:ed08:859a)
[11:01:52] *** Joins: eem (~eem@user/eem)
[11:02:04] *** Quits: soapsudsxx (~soapsudsx@141.193.188.134) (Remote host closed the connection)
[11:02:10] *** Joins: Joanna (uid57472@id-57472.lymington.irccloud.com)
[11:05:51] *** Joins: diophantoz (~diophanto@user/diophantoz)
[11:07:32] *** Quits: blahboybaz (~blahboyba@73.109.57.12) (Ping timeout: 252 seconds)
[11:08:42] *** Quits: Alex123 (~Adium@cpe-76-91-121-195.socal.res.rr.com) (Quit: Leaving.)
[11:08:46] *** Quits: cm007magnum (~Rheanna@101.91.193.123) (Remote host closed the connection)
[11:09:43] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[11:10:36] *** Joins: cm007magnum (~Rheanna@101.91.193.123)
[11:10:53] *** Joins: password2 (~password@user/password2)
[11:14:20] <user51> found some old code. pretty interesting how i'd do it differently now.
[11:16:24] <user51> but damn, it also feels like the intended program kinda blows too
[11:17:17] <user51> https://b1391bd6-da3d-477d-8c01-38cdf774495a.filesusr.com/ugd/44046b_89a8e226476741a3b7c5204575b8a0b2.pdf
[11:17:19] <bayaz> Type: application/pdf Size: 244.2 kB 
[11:17:53] <user51> feels like the assembly language they came up is more complicated than it should be
[11:18:00] *** Joins: magla (~gelignite@55d479ac.access.ecotel.net)
[11:18:03] <GeDaMo> Yeah, I felt that too
[11:18:27] <user51> ah, you know about nand2tetris?
[11:18:40] <GeDaMo> I did the hardware part, lost interest when it came to the software :P
[11:18:58] <user51> i did 1,2,3 and 6 afair
[11:19:05] <kobalt> It was some course on edx I remember
[11:19:24] <user51> i was much more amateur back then - so it was kinda hard for me to get the mux working
[11:19:29] <GeDaMo> It was on Coursera 
[11:19:36] <GeDaMo> Also their own website
[11:19:48] <user51> thy released a new edition
[11:20:35] *** Joins: nrl^ (~nrl@68.101.50.106)
[11:20:36] <user51> i also didn't really like the first chapter, but for years couldn't tell why
[11:20:39] <GeDaMo> Of the book? Or the course?
[11:20:58] <user51> https://www.amazon.com/Elements-Computing-Systems-second-Principles-dp-0262539802/dp/0262539802/ref=dp_ob_title_bk
[11:21:01] <user51> book
[11:21:15] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[11:21:46] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b0a7:81a6:ed08:859a) (Ping timeout: 252 seconds)
[11:21:52] <user51> i identify with  the reviewer AIAS fwiw
[11:22:40] <user51> imo there was nothing wrong with the information in the book, but putting it together was.. well, worse than it should be
[11:23:35] <user51> the nand gate stuff could perhaps be done better visually, rather than learning the syntax.
[11:23:44] <extern> good morning
[11:23:56] <user51> excellent morning
[11:27:48] <user51> also, the worst  aspect of the book was looking at their user forums and seeing people knee-deep in some convulted HDL code. ranting = 0;
[11:28:08] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[11:32:24] <mrig> Good morning
[11:32:49] <mrig> I took a look at the nand2tetris book but it didn't grab me for some reason.
[11:33:34] <mrig> Just found this guys set of videos for writing a full game and renderer from scratch, looks pretty awesome. https://www.youtube.com/channel/UCaTznQhurW5AaiYPbhEA-KA
[11:34:24] <GeDaMo> Ah, it's Casey Muratori
[11:34:37] <mrig> Like his cadence, wish he wouldn't drink infront of his mike all the time and crappy mic, but can't complain or shouldn't complain, the wisdom being offered is just superb.
[11:34:39] <GeDaMo> He's been working on that game for a couple of years
[11:34:45] <mrig> He's fantastic.
[11:34:48] <user51> just noticed the bot doesn't work for youtube/amazon
[11:35:04] <GeDaMo> Sometimes it does
[11:35:15] <mrig> Love that straight in he is teaching how to make an abstraction layer.
[11:35:26] <GeDaMo> mrig: that's the same guy who wrote the terminal which inspired pyzozord
[11:35:35] <mrig> I'm even installing windows on a VM to have a go.
[11:35:46] <mrig> GeDaMo: oh that's superb, even better.
[11:36:31] <extern> good morning
[11:36:33] <mrig> would be nice to know how to write an application that uses a window, that will work on posix and windows in C
[11:36:43] *** Joins: Alex123 (~Adium@cpe-76-91-121-195.socal.res.rr.com)
[11:37:02] <extern> mrig: opengl ?
[11:37:13] <mrig> no, this is introduced afterwards.
[11:37:22] <mrig> This is native rendering all from scratch.
[11:37:32] <mrig> which is what I want to learn at the moment.
[11:37:43] <mrig> no black boxes, none at all.
[11:38:15] <mrig> and all the searching about in the OS API's explained for you.
[11:38:30] <pyzozord> Casey over all a great programmer and a great guy
[11:38:32] <mrig> well for windows, I dont mind learning myself for linux :)
[11:38:54] <Trashlord> I really struggle with CSS, you know?
[11:38:56] <extern> that application must have some conditional compilation cause obviously linux and windows are two different os's
[11:38:57] <mrig> Love the intro, I've been doing this for years and want to pass on my knowledge.
[11:39:22] <Trashlord> I keep thinking I gotta improve my CSS skills if I ever want to get a job as a web developer. But it's just difficult for me, at least at this stage
[11:40:11] <extern> mrig: in other words you want to learn Xlib and win32 api
[11:40:13] <extern> ?
[11:40:54] *** Quits: kobalt (~rsonx@user/kobalt) (Ping timeout: 260 seconds)
[11:40:57] <mrig> extern: no, I want to get past that and understand what the abstarction layer is doing, I want to learn to write an abstration layer so that I can write a program that is portable
[11:41:26] <extern> mrig: the absraction layer have different implementations based on the environment
[11:41:31] <mrig> sure
[11:41:36] <extern> underneath it's using what the os exposes ...
[11:41:50] <extern> whether it's win32 api or (something lower than xlib) 
[11:42:15] <GeDaMo> https://justine.lol/ape.html
[11:42:32] <mrig> yep, so nice to be exposed to this, as he mentioned, he learned it slowly over a very long time, and would not want to have to approach it today without guidance. He is offering this guidance, which is awesome.
[11:42:50] <mrig> It is the time spent that is key here.
[11:43:05] <extern> it's re inventing the wheel 
[11:43:12] <arahael> mrig: I was modifying a C project earlier, and I got reminded how much I hate C. :)
[11:43:22] <user51> i love c
[11:43:25] <extern> C is the bets
[11:43:28] <extern> best
[11:43:42] <mrig> I would have liked to have learned this slowly over a long time, but that is not possible, so it is nice to get a road map, rather than an API and to be told that the bananas are bad.
[11:43:49] <arahael> mrig: There's a compiler define, and I couldn't easily figure out how to transform that in all 300 places in the code because I would have also had to figure out where to store the temporary buffer for the string - I'd have had to just leak it.
[11:43:59] <mrig> arahael: I bet it is awful if it is not well coded.
[11:44:06] <arahael> mrig: It's not well coded!
[11:44:18] <mrig> that is a tricky thing indeed.
[11:44:19] <user51> a lot of my own code is not well coded
[11:44:29] <extern> mrig: can you share the road map ?
[11:44:39] <mrig> This is why I am excited to find a master who is offering assistance.
[11:44:41] <arahael> user51: The specific project I'm referring is basically a variant of nethack. 
[11:44:57] <mrig> extern: well it is a long series of video tutorials
[11:45:00] <user51> arahael: i'll might be able to give advice if you link me to the code
[11:45:43] <GeDaMo> extern: this is the home page https://handmadehero.org/
[11:45:44] <bayaz> Title: Handmade Hero 
[11:46:05] <mrig> extern: I got to the videos from here https://handmadehero.org/
[11:46:05] <bayaz> Title: Handmade Hero 
[11:47:39] <extern> mrig: i remember i once looked down the source code of X11 you will find there for example algorithms of line drawing in a pixelated environment
[11:47:46] <arahael> user51: This was the function I originally tried to modify so that it would expand ~ in the path: https://github.com/arafangion/EvilHack/blob/master/src/files.c#L367
[11:47:48] <bayaz> Title: EvilHack/files.c at master ¬∑ arafangion/EvilHack 
[11:47:59] <arahael> user51: I ended up doing a completely different change instead, but blegh. :)
[11:47:59] <extern> check out X11 files 
[11:48:07] <extern> it might give you nice ideas
[11:48:35] <GeDaMo> https://en.wikipedia.org/wiki/Bresenham's_line_algorithm
[11:48:36] <bayaz> Title: Bresenham's line algorithm - Wikipedia 
[11:48:51] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[11:48:53] <mrig> arahael: I also came across this page which is pretty useful https://floooh.github.io/2019/09/27/modern-c-for-cpp-peeps.html
[11:48:53] <bayaz> Title: Modern C for C++ Peeps 
[11:49:17] <mrig> Helps to understand the crossover between C++ and C a little better it seems.
[11:50:29] <extern> everything "C++" is translated to C
[11:50:47] <mrig> At least this was something that was bugging me a lot, as extra confusion from unknowns.
[11:50:59] <user51> arahael: i assume all the ifdefs came with the code, they're quite painful to read
[11:51:07] <arahael> user51: They did.
[11:51:15] *** Joins: flaknet99 (~0x100@32.211.211.39)
[11:51:20] <extern> mrig: for example, "how to implement OOP in C" might solve your problem
[11:51:21] <mrig> Just love that this guy is using a bat file as his build system :D
[11:51:30] <extern> or read the Book Extreme C by kamran amini
[11:51:43] *** Joins: humanface (~humanface@20014C4E1C401E00149A26AE391C6AB4.dsl.pool.telekom.hu)
[11:51:57] <mrig> extern: I've gone into that quite a bit already, got an idea as to how it is done, what I need is lectures from a master, not books.
[11:52:23] <mrig> to see how it is best done to save from countless years of trial and error, that would have to be done otherwise.
[11:52:26] <user51> mrig: what would you do if you'll never be able to find lectures from a master?
[11:52:29] <arahael> user51: This is what I ended up doign instead: https://github.com/arafangion/EvilHack/commit/f2588019572e2ece7e1128c6f43638e2486186b0
[11:52:30] <bayaz> Title: Proof of concept to avoid needing to override the hackdir at runtime ¬∑ arafangion/EvilHack@f258801 
[11:52:38] <mrig> user51: countless years of hacking.
[11:52:39] <arahael> user51: But that still doesnt' make me appreciate C. :)
[11:52:41] <mrig> simple
[11:52:51] <mrig> if I was there when it was all new, it would be fine.
[11:52:55] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[11:53:00] <smallville7123> how can i handle the case for which a child required to know its parent size? https://gist.github.com/mgood7123/4b0badaed0120302ea6fbb655a909523
[11:53:01] <bayaz> Title: A.md 
[11:53:07] <arahael> user51: I think that's K&R C, almost, but even so.
[11:53:13] <mrig> but am not, so make do as I can :)
[11:53:13] *** Joins: flaknet99 (~0x100@32.211.211.39)
[11:53:27] <user51> c has a lot of ways to screw up
[11:53:32] <extern> mrig: you don't need lectures from a master you need to get some examples and i already told you where to find them
[11:53:40] <extern> gl
[11:53:44] <user51> i imagine a lot of it history
[11:54:43] <user51> arahael: yeah, the decleration is old style c
[11:55:20] <arahael> user51: In those days, all those inline #ifdefs for the different platform was *good style*.
[11:55:21] <extern> mrig: i can also recommend Xlib programming manual.. will give you some nice code to demonstrate event driven programming
[11:55:21] <mrig> well fingers crossed, seems that I can make a windows VM using my win7 key.
[11:56:02] <mrig> extern: I'll check those out later, will need to learn to do the same for xlib and wayland eventually.
[11:56:14] <user51> arahael: if you want to make a c programmer hate you, do something like *pointer/*pointer
[11:56:23] <user51> that evaluates to 1.. maybe :D
[11:56:47] <mrig> It is the renderer that is really exciting here though, need to get through the painful abstraction layer to get to that :)
[11:56:55] <arahael> user51: Hmm. :)
[11:57:31] <user51> branchful branchless code. it could be N/N, could be 0/0, or could be start of a comment :D
[11:57:47] <smallville7123> how can i handle the case for which a child required to know its parent size, for example a LinearLayout nested inside a LinearLayout, https://gist.github.com/mgood7123/4b0badaed0120302ea6fbb655a909523    *
[11:57:47] <bayaz> Title: A.md 
[11:58:16] <user51> i don't blame you for hating this - 162 ifdefs in one file is.. well
[11:58:30] <arahael> user51: And unclear memory ownership.
[11:58:45] *** Quits: cm007magnum (~Rheanna@101.91.193.123) (Remote host closed the connection)
[11:59:25] <arahael> user51: I actually tried dto fix it there, but all I got was an "Oops..." later on in the game.
[11:59:41] <arahael> user51: Or a free() reporting "wrong size".
[11:59:57] <user51> in all fairness now that i think about it, there should be a tool which factors that out
[12:00:13] <arahael> user51: How so?
[12:00:25] <user51> no idea, i just thought about it
[12:00:27] <pyzozord> smallville7123: how did you solve the problem from the other day with getting wrong value on the third loop?
[12:00:50] *** Joins: Twipply (~Twipply@user/twipply)
[12:00:50] *** Joins: cm007magnum (~Rheanna@218.78.77.129)
[12:00:57] *** Joins: iridium__ (~iridium@122.175.247.240)
[12:01:00] <extern> pyzozord: nice dude
[12:01:12] <extern> im impressed
[12:01:32] <user51> i suppose you could duplicate the functions then do function function_IFDEF_001, function IFDEF_002, and so on, but i really have no experience with ifdef stuff
[12:01:43] *** Joins: kobalt (~rsonx@user/kobalt)
[12:01:52] <pyzozord> extern: impressed with?
[12:02:06] <user51> by 'duplicate' i mean, duplicate and insert the code. but then you'll need a way to select which function to choose.
[12:02:11] <iridium__> i'm using the MariaDB connector for Express.js and i'm using the placeholders `?` with array of parameters to place in query strings as it recommends in the manual. is this enough to prevent common SQL injection attacks or do i need to escape these strings separately?
[12:02:20] <extern> you asking about a problem "from the other day"
[12:02:36] <extern> you don't find everyday that qualith in irc
[12:02:39] <extern> quality
[12:02:39] <arahael> user51: THe modern approach would be to have platform-specific implementation files, which nethack also does, but there's a bit of a reason for avoiding abstractions like that - it requires (slightly) more memory.
[12:02:49] *** Joins: gnon (~gnonnnn@88.240.249.116)
[12:02:50] *** Joins: jaysicks (~jaysicks@188-143-121-226.pool.digikabel.hu)
[12:02:55] <extern> pyzozord: your curiosity is admirable
[12:03:00] <extern> keep it going ..
[12:03:43] <user51> arahael: yeah, it would be sad if i couldn't get nethack running on a toaster :D
[12:03:44] *** Quits: gnon (~gnonnnn@88.240.249.116) (Client Quit)
[12:03:49] <pyzozord> ok, thanks. I am trying to figure out how to get Extreme C book now. It sounds interesting
[12:04:05] <extern> pyzozord: you have no ideea...
[12:04:09] <beaky> xtreme c programming
[12:04:10] <extern> one of my best buys from amazon
[12:04:10] <pyzozord> thi I'll sign up for https://www.packtpub.com/free-ebook/extreme-c/9781789343625
[12:04:13] <bayaz> Title: Extreme C Free eBook | Packt 
[12:04:41] <arahael> user51: There are some really esoteric systems this code used to support‚â•
[12:05:20] <arahael> user51: Take a look at https://github.com/arafangion/EvilHack/tree/master/sys
[12:05:21] <bayaz> Title: EvilHack/sys at master ¬∑ arafangion/EvilHack 
[12:05:36] <arahael> user51: Most of those are broken in this fork, mind you, but ignore that. ;)
[12:06:44] <pyzozord> uhg don't register there, it's a fake
[12:07:51] <arahael> pyzozord: And worse: Why would you want to do *extreme* C? Most of us should aspire to do *normal*, routine, plain and boring C. :)
[12:08:04] <pyzozord> :D
[12:08:06] <user51> at what point you're not doing c anymore though
[12:08:52] <arahael> user51: Hmm.
[12:09:04] *** Quits: Buttercat (~Buttercat@user/buttercat) (Quit: Leaving.)
[12:09:19] <user51> pretty natural for stuff to evolve like that
[12:09:41] <kobalt> I like c++ because printing stuffs is easier
[12:10:05] <kobalt> just do cout<<x
[12:10:37] <arahael> kobalt: You forgot to flush it.
[12:11:07] <arahael> (Which is automatic when you do cout << endl, iirc)
[12:11:55] <iridium__> kobalt: then you'll love Perl.
[12:12:47] <kobalt> also there is no standard regex library to compare a string pattern. why
[12:12:58] <kobalt> in c
[12:13:14] <iridium__> kobalt: what do you want to do?
[12:13:28] <user51> kobalt: man 3 regex?
[12:13:37] <user51> not sure about c++ tho
[12:13:41] <arahael> kobalt: There's a bunch of well-known libraries, what's wrong with that?
[12:13:52] <iridium__> kobalt: just use Perl.
[12:14:20] <iridium__> kobalt: it has regexen built-in.
[12:14:48] <kobalt> I will give Perl a try.
[12:15:06] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:15:27] <kobalt> it is called Raku now
[12:15:30] <pyzozord> looking at the quick description of the chapters of Extreme C, it doesn't look all that extreme :(
[12:15:43] <iridium__> kobalt: no, it's not.
[12:16:01] <iridium__> kobalt: Raku is Perl's sister language.
[12:16:06] <GeDaMo> pyzozord: is it like https://en.wikipedia.org/wiki/Extreme_ironing ? :P
[12:16:06] <bayaz> Title: Extreme ironing - Wikipedia 
[12:16:29] <pyzozord> lol :D
[12:16:50] <pyzozord> yeah it kind of is I guess
[12:17:11] <iridium__> GeDaMo: there are no power outlets over there. how do they use the iron?
[12:17:21] <pyzozord> I was expecting some revolutionary ideas, but it seems just like thorough modern c book
[12:17:42] <GeDaMo> Battery powered, obviously :P
[12:17:50] <iridium__> pyzozord: Deep C Secrets is also a good book about modern C.
[12:18:03] <iridium__> GeDaMo: wouldn't last for long, would it?
[12:18:19] <arahael> He could've heated the iron the old way.
[12:18:28] <iridium__> arahael: coal?
[12:18:53] <kobalt> one thing that still my head in c and c++ is the function pointer with that typedef technique
[12:18:58] <kobalt> spin
[12:19:02] <arahael> iridium__: Sure, or even just a regular fireplace.
[12:19:20] <arahael> iridium__: The term "iron" comes from the actual literal Iron you would fill with coal, though, so you're correct.
[12:19:42] <iridium__> arahael: they did use coal for ironing in olden days.
[12:19:50] <smallville7123> pyzozord: it was referencing pointer from lambda
[12:19:50] <arahael> Right ,to fill the iron. :)
[12:19:55] <iridium__> arahael: yeah.
[12:20:00] *** Joins: MarcoFe (~marcofe@93-36-161-108.ip60.fastwebnet.it)
[12:21:10] <smallville7123> how would you solve the following problem? https://gist.github.com/mgood7123/d3360169c663e54d365f65a45a71092f
[12:21:11] <bayaz> Title: gist:d3360169c663e54d365f65a45a71092f 
[12:21:16] <iridium__> arahael: imagine hiking up a mountain with a bag of hot coal to iron your shirt later. it would also keep you warm, i guess?
[12:21:48] <arahael> iridium__: Or more realistically, perhaps a hiker's stove. :)
[12:22:02] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 265 seconds)
[12:22:54] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[12:23:51] *** Joins: dunkeln (~dunkeln@94.129.71.70)
[12:23:51] *** Quits: dunkeln (~dunkeln@94.129.71.70) (Changing host)
[12:23:51] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[12:23:59] <kobalt> alright seems like there are some regex libraries after all
[12:24:04] <pyzozord> smallville7123: can you explain a bit more?
[12:24:23] <pyzozord> smallville7123: I'm looking at your example https://gist.github.com/mgood7123/423c20aea80b24e15a81ae6f921b799f
[12:24:24] <bayaz> Title: main.cpp 
[12:26:44] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[12:27:25] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Client Quit)
[12:28:23] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 252 seconds)
[12:30:27] <smallville7123> pyzozord: well, the pointer to the passed_pointer is captured by reference, and is also captured by reference in the nested lambda
[12:30:44] <smallville7123> think of it as a pointer to a pointer, for simplicity
[12:30:49] *** Quits: chenxuezhao (~chenxuezh@106.39.157.10) ()
[12:31:38] <smallville7123> when the first lambda goes out of scope, the reference to the passed pointer goes out of scope, thus what it points to can now change based on many factors, since it will be reused
[12:32:55] <smallville7123> since the inner lambda is using a pointer to the pointer passed_pointer, it may be valid until the pointer from the outer lambda gets reused someway, in which case it will point to a different location other than the passed_pointer
[12:34:02] <pyzozord> but "pointer" is defined in main, it never goes out of scope
[12:34:09] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[12:34:13] <smallville7123> if it copies the passed pointer by value instead, then it is guarenteed to be the value of the passed pointer itself, and not the value of a pointer that points to the passed pointer
[12:34:22] *** Joins: flaknet99 (~0x100@32.211.211.39)
[12:34:37] *** Quits: Alex123 (~Adium@cpe-76-91-121-195.socal.res.rr.com) (Quit: Leaving.)
[12:35:16] <smallville7123> eg int &* a; is equivilant to int ** ref_imp = address_of(a);   (very simplified)
[12:35:26] *** Quits: SuperNintendoSUX (~sjw@69.206.48.64) (Remote host closed the connection)
[12:35:51] <smallville7123> the int ** ref_impl is what gets passed to the inner lambda, hidden as a reference to int *
[12:36:31] <pyzozord> ok so that's some c++ism then?
[12:36:33] <smallville7123> which in turn, the ref_impl is a scoped pointer, in which it goes out of scope when the outer lamba's lifetime ends, and thus can be reused by the system
[12:36:40] *** Joins: SuperNintendoSUX (~sjw@69.206.48.64)
[12:37:23] <flaknet99> -std=c++98 should solve all of your problems
[12:37:29] <arahael> smallville7123: You're not supposed to use references as pointers, though.
[12:37:31] <smallville7123> flaknet99: nope
[12:37:39] <pyzozord> ooh I get it
[12:37:58] <flaknet99> yeah man that code is a disaster it makes my eyes rain
[12:37:59] <smallville7123> arahael: i know, but its easy to do when you are using lambda, eg just [&] instead of [=]
[12:38:24] <arahael> smallville7123: Can you use move semantics with lambda's instead?
[12:38:35] <pyzozord> yeah this is very c++ problem, references, lambdas
[12:38:53] <pyzozord> one of the reasons why I don't like c++, it has too many rules, you can't reason through this
[12:39:04] <smallville7123> and it is easy to miss since you usually dont think that the lambda itself is a scoped object and the capture by reference is ONLY VALID for the duration of the scoped lambda's existance
[12:39:05] <pyzozord> in C it would be straightforward
[12:39:13] <flaknet99> instead of spending days waiting to get lucky and finding someone to know the problem you could just rewrite it
[12:39:14] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-8966-8431-3fb4-9daa.res6.spectrum.com)
[12:39:17] <flaknet99> or ask in #c++
[12:39:32] <smallville7123> flaknet99: i already fixed the problem
[12:39:48] <pyzozord> sounds like references and scoped objects are c++-only concepts
[12:40:01] <smallville7123> haha
[12:40:12] <smallville7123> C++ is extremely complex
[12:40:15] <pyzozord> i mean scopes kind of are in c too
[12:40:21] <pyzozord> but references arent
[12:40:32] <pyzozord> i don't know what are references and how they differ from pointers
[12:40:57] <flaknet99> exacly
[12:41:06] <pyzozord> and looks like lambdas have different ways of capturing their parent scope
[12:41:18] <pyzozord> whatever [&] and [=] are
[12:41:18] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Read error: Connection reset by peer)
[12:41:25] <smallville7123> in C++ a reference GAURENTEES that the object will never be coped, a pointer supposidly cannot offer this gaurentee tho i do not know why
[12:41:35] <smallville7123> [&] is capture by reference
[12:41:42] <smallville7123> [=] is capture by value
[12:41:43] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[12:41:44] <arahael> pyzozord: It's new in C++, basically you can't do pointer arithmatic, with references, and it helps provide a convention where you're saying: "You can use this, but you don't own the resources".
[12:42:01] <smallville7123> yea :)
[12:42:06] <arahael> pyzozord: So if you provide only a reference, you're explicitly stating that they can't delete it.
[12:42:19] <pyzozord> oh ok
[12:42:29] <xsperry> I glanced at the code above and I don't think this is a C++ issue. it is a "we're mutating captured variable" issue
[12:42:43] <smallville7123> also even if you provide a pointer, you should not ASSUME that it is allocated and deletable
[12:42:45] <arahael> Oh, I haven't looked at the code in this case.
[12:42:49] <flaknet99> you looked at the code and your eyes arent raining?
[12:42:51] *** Quits: dre (~dre@2001:8003:c932:c301:e5c5:40af:66d5:e309) (Quit: Leaving)
[12:42:54] <arahael> smallville7123: That entirely depends on the project conventions.
[12:43:00] <smallville7123> true
[12:43:01] <flaknet99> must be a different paste
[12:43:07] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[12:43:26] <smallville7123> tho mostly you should assume that you are NOT meant to delete the pointer that is given to you
[12:43:32] <pyzozord> code we are talking about: https://gist.github.com/mgood7123/423c20aea80b24e15a81ae6f921b799f
[12:43:33] <bayaz> Title: main.cpp 
[12:44:04] <smallville7123> as it is likely managed elsewhere, or it may even be a pointer to heap allocated memory
[12:44:05] *** Joins: fdauihfu (~irado@177.12.221.60)
[12:44:12] *** Quits: magla (~gelignite@55d479ac.access.ecotel.net) (Quit: Stay safe!)
[12:44:30] <mrig> wow windows is slow to install compared to linux :|
[12:44:31] <pyzozord> smallville7123: so the problem here is with the inner lambda capturing by reference stuff from outer lambda
[12:44:33] *** Joins: jacks2 (~bc8165b6@217.29.117.252)
[12:44:37] <smallville7123> (which calling, for example,  int a; int * b = &a; delete b;     is undefined behaviour
[12:45:02] <smallville7123> pyzozord: no, the problem is the outer lambda referencing to the inner lambda
[12:45:14] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Ping timeout: 265 seconds)
[12:45:24] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:45:26] *** Quits: irado (~irado@177.12.221.62) (Ping timeout: 252 seconds)
[12:45:32] <pyzozord> smallville7123: I think we just said the same thing?
[12:46:02] <smallville7123> the inner lambda is fine as it gets set as a std::function in a returned structure, which is returned by the outer lambda
[12:46:56] <smallville7123> whe the outer lambda goes out of scope, its reference to passed_pointer also goes out of scope and should be consided a use-after-free case since it is a temporary pointer that is valid for the lifetime of the outer lambda
[12:46:59] <smallville7123> when*
[12:47:32] <jacks2> smallville, isn't passed_pointer just an argument to inner lambda?
[12:47:45] <pyzozord> yeah but that is not outer lambda's fault. It's inner lambda's fault for referencing stuff from outer lambda
[12:47:48] <jacks2> sorry, outter lambda
[12:47:59] <jacks2> oh nm, I get it
[12:48:06] <smallville7123> its like doing     int * x; { int a; x = a; } *x = 5;     *x may point to a, or it might point to some other location due to a going out of scope
[12:48:09] <jacks2> why is that a problem? that inner lambda references argument from outter lambda?
[12:48:12] <flaknet99> it's c++ committees fault
[12:48:35] <jacks2> C++ doesn't extend local variable's duration when they are captured?
[12:48:43] <smallville7123> no it does not
[12:48:51] *** Quits: cm007magnum (~Rheanna@218.78.77.129) (Remote host closed the connection)
[12:48:58] <smallville7123> unless you explicitly allocate them
[12:49:01] <flaknet99> do you have full warnings enabled?
[12:49:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[12:49:42] <smallville7123> eg     int * x; { int * a = new int; x = a; } *x = 5;     *x WILL now point to a, which is allocated on the heap in RAM
[12:49:56] <jacks2> smallville, so you fixed it by not capturing passed_pointer, or rather, capturing it by value, or however C++ calls that?
[12:50:27] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[12:51:05] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:20ab:da33:a5ae:6427)
[12:51:10] <pyzozord> smallville7123: thanks for explaining
[12:51:25] *** Joins: cm007magnum (~Rheanna@101.89.154.192)
[12:53:09] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[12:54:12] <iridium__> i'm using the MariaDB connector for Express.js and i'm using the placeholders `?` with array of parameters to place in query strings as it recommends in the manual. is this enough to prevent common SQL injection attacks or do i need to escape these strings separately?
[12:54:14] <GeDaMo> https://en.cppreference.com/w/cpp/language/lambda#Lambda_capture
[12:54:15] <bayaz> Title: Lambda expressions (since C++11) - cppreference.com 
[12:54:18] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[12:54:38] *** Quits: jacks2 (~bc8165b6@217.29.117.252) (Quit: http://www.okay.uz/ (EOF))
[12:54:41] *** Quits: xsperry (~as@user/xsperry) (Read error: Connection reset by peer)
[12:55:22] <smallville7123> this is equivilant to the lambda in lambda     std::function<void*()> x; int * passed_pointer; { int ** tmp = &passed_pointer; x = [=]() { *INTERNAL_DEREFERENCE(tmp) = 5 }; }  x();           tmp has gone out of scope when x is called, so it may set the passed_pointer to 5, or it might set another value to 5
[12:56:23] <smallville7123> in which `tmp` simulates passed_pointer being passed by reference, and INTERNAL_DEREFERENCE simulates the internal implementation of accessing passed_pointer by reference
[12:56:51] <pyzozord> yeah it makes my head spin, I don't see any reason for that complexity if they could write linux kernel in c
[12:57:05] <flaknet99> it's job security
[12:57:10] <smallville7123> :)
[12:57:39] *** Quits: kobalt (~rsonx@user/kobalt) (Quit: leaving)
[12:57:47] <smallville7123> ok consider this then    int * a = new int; *a = 1; delete a; *a = 5;
[12:58:03] *** Joins: kobalt (~rsonx@user/kobalt)
[12:58:42] <smallville7123> "*a = 1" could be called in a callback, and the allocations represent a scope in which a pointer (reference) to "a" is valid
[12:58:57] <smallville7123> "*a = 1" and "*a = 5" could be called in a callback, and the allocations represent a scope in which a pointer (reference) to "a" is valid      *
[12:58:58] *** Quits: kobalt (~rsonx@user/kobalt) (Client Quit)
[12:59:03] <flaknet99> the compiler doesn't decide "hey thats UB i should warn the user" ?
[12:59:23] <smallville7123> it can if it is smart enough
[12:59:35] <flaknet99> did you eanable all the warnings?
[12:59:36] <smallville7123> but as i said, C++ is an extremely complex language
[12:59:54] <smallville7123> and it is impossible to detect all cases of UB
[13:00:06] <flaknet99> thats an easy case to detect
[13:00:23] <smallville7123> for " int * a = new int; *a = 1; delete a; *a = 5;"   yes
[13:00:32] <pyzozord> suggests that they are probably still busy with detecting even easier cases
[13:00:57] <flaknet99> anything with scope-crossing problems should be easy to detect
[13:01:05] <flaknet99> unless it's intentional
[13:01:30] *** Joins: quazimodo (~quazimodo@n1-40-133-145.bla1.nsw.optusnet.com.au)
[13:01:31] *** Joins: quazimod1 (~quazimodo@n1-40-133-145.bla1.nsw.optusnet.com.au)
[13:01:50] <smallville7123> for the lambda, it would depend on a lot of things
[13:02:41] *** Joins: kobalt (~rsonx@user/kobalt)
[13:02:46] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[13:03:02] <smallville7123> mostly the ability to simulate and determine control flow, and possible deep function calls where the value may be passed around all over the place and other complex stuff
[13:03:35] *** Joins: xsperry (~xs@user/xsperry)
[13:03:41] <smallville7123> basically equivilat to the halting problem
[13:04:33] <smallville7123> and the ability to trace/simulate/track the complexity of C++ in order to determine if something will end up being UB or not
[13:04:57] *** Quits: xsperry (~xs@user/xsperry) (Read error: Connection reset by peer)
[13:06:03] <kobalt> I guess analysis on the code could be done to check it's complexity
[13:06:11] *** Joins: MJCD (uid193337@user/mjcd)
[13:06:41] <smallville7123> clang does a good job in most cases but there are just some cases that it is not smart enough to figure out, or some cases that it is impossible to figure out due to for example arbitary input being part of a control flow or some complex function building or what not
[13:07:16] <smallville7123> where the only way to catch the UB would be to actually run the program
[13:07:36] <flaknet99> or enable all the warnings
[13:07:59] *** Quits: BenLand100 (~bland@user/benland100) (Quit: s/BenLand100//)
[13:08:03] <smallville7123> the compiler may not be smart enough either
[13:08:21] *** Joins: plastico (~plastico@neomutt/plastico)
[13:08:59] <smallville7123> compilers are not REQUIRED to detect UB, and they MUST allow UB code to compile
[13:09:25] <arahael> Incorrect, smallville7123.
[13:09:26] <smallville7123> even if it is a divide by zero, the compiler MUST compile it
[13:09:37] <mrig> Surely the best way to catch these things is in the way that you code the thing in the first place?
[13:09:56] <smallville7123> (unless it is a syntax error in which the compiler CANNOT compile due to invalid syntax)
[13:09:58] <arahael> smallville7123: Pretty sure that not supporting UB is allowed behaviour, should they choose to do so.
[13:10:09] <mrig> In the sound engineering trade there is an expression, you can not polish a turd.
[13:10:10] <smallville7123> arahael: yup
[13:10:17] <smallville7123> but it is not REQUIRED
[13:10:23] <arahael> smallville7123: And that includes not compiling it.
[13:10:27] <arahael> smallville7123: Successfully or otherwise.
[13:10:28] <smallville7123> yea
[13:10:39] <mrig> unfortunately smart programs have now made it possible to polish turds, but that does not make it wise to do so.
[13:10:40] *** Joins: xsperry (~xs@user/xsperry)
[13:10:58] <pyzozord> mrig: what that expression has to do with sound engineering we will never know :D
[13:10:59] * mrig chuckles and cries at the same timt [facepalm]
[13:11:14] <mrig> pyzozord: it is simple garbage in garbage out.
[13:11:26] *** Quits: xff0x (~xff0x@2001:1a81:52da:9800:6eef:7ca3:1a38:24c9) (Ping timeout: 260 seconds)
[13:11:32] <kobalt> gigo in short
[13:11:35] <GeDaMo> https://en.wikipedia.org/wiki/Dorodango
[13:11:35] <bayaz> Title: Dorodango - Wikipedia 
[13:11:38] <smallville7123> it is souly up to the compiler wether it wants to for example detect a divide by 0 and force it as a compile error, or simply allow it to be compiled either because it simply does not detect it or because it intentionally sllows this
[13:11:55] <smallville7123> allows*
[13:12:03] *** Joins: zaher (~zaher@37.48.190.247)
[13:12:18] *** Joins: xff0x (~xff0x@2001:1a81:52da:9800:f838:bea4:9f6c:73cb)
[13:12:51] <pyzozord> I'd like a kind of analysis tool that detects all even remotely possible UBs and gotchas like overflows
[13:13:08] *** Joins: defiant (~defiant@user/defiant)
[13:13:14] <kobalt> UB is
[13:13:21] <iridium__> kobalt: undefined behaviour
[13:13:21] <pyzozord> I guess that's what rust is really
[13:13:35] <kobalt> oh I thought Upper Bound
[13:13:54] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:13:55] <kobalt> Upper bound of an algorithm
[13:14:33] <smallville7123> but generally speaking at the very minimum what ever is considered VALID SYNTAX should be COMPILED regardless of wether the result is UB, idiotic, insane, valid or any other
[13:14:34] <smallville7123> depending on compiler support for the specific syntax being compiled, eg if the compiler supports templates or not
[13:14:50] <GeDaMo> https://en.cppreference.com/w/cpp/language/ub
[13:14:50] <bayaz> Title: Undefined behavior - cppreference.com 
[13:14:56] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[13:15:03] <smallville7123> (most C++ compilers support templates, a C compiler DOES NOT)
[13:15:35] <smallville7123> (btw a VERY SMALL subset of C++ can be compiled with a C compiler, tho is UB)
[13:16:06] <pyzozord> c++99 was kind of ok, that stuff from 11 and 17 is kind of out there
[13:16:50] <pyzozord> too much too weird 
[13:17:09] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-8966-8431-3fb4-9daa.res6.spectrum.com) (Quit: Leaving.)
[13:17:09] <pyzozord> oh and now c++20 is a thing too
[13:17:16] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[13:17:27] <arahael> pyzozord: I'd keep looking at Rust instead. :)
[13:17:31] <user51> i'll wait for cpp23
[13:17:44] <iridium__> arahael: i feel Rust will be C++ in the future.
[13:17:45] <GeDaMo> https://en.cppreference.com/w/cpp/23
[13:17:45] <bayaz> Title: C++23 - cppreference.com 
[13:18:03] <arahael> iridium__: Perhaps, but isn't Rust already over 10 years old now?
[13:18:03] <smallvil_> specifically https://en.wikipedia.org/wiki/Compatibility_of_C_and_C%2B%2B
[13:18:04] <bayaz> Title: Compatibility of C and C++ - Wikipedia 
[13:18:05] <user51> meh, i'll wait for cpp26
[13:18:21] <flaknet99> imagine the nightmare if c++ had a package manager system
[13:18:28] *** Quits: kobalt (~rsonx@user/kobalt) (Quit: leaving)
[13:18:59] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b0a7:81a6:ed08:859a)
[13:19:02] <iridium__> arahael: i didn't mean it in a good way. Rust has revolutionary ideas but it's becoming more and more complicated like C++.
[13:19:15] <smallvil_> "This article, however, focuses on differences that cause conforming C code to be ill-formed C++ code, or to be conforming/well-formed in both languages but to behave differently in C and C++. "
[13:19:23] <arahael> iridium__: They don't seem to have the same dance with UB, though.
[13:20:05] <smallvil_> flaknet99: ie does, its called the internet :)
[13:20:07] <iridium__> arahael: i think i should learn Rust.
[13:20:25] <smallvil_> flaknet99: "19:48:21 flaknet99: imagine the nightmare if c++ had a package manager system"      it does, its called the internet :)
[13:20:46] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 260 seconds)
[13:20:54] *** Joins: BenLand100 (~bland@64.253.5.174.dyn-cm-pool75.pool.hargray.net)
[13:20:54] *** Quits: BenLand100 (~bland@64.253.5.174.dyn-cm-pool75.pool.hargray.net) (Changing host)
[13:20:54] *** Joins: BenLand100 (~bland@user/benland100)
[13:20:57] <mrig> windows is still installing, not even got to the updates yet! :D
[13:21:09] *** Joins: kobalt (~rsonx@user/kobalt)
[13:21:28] <pyzozord> C is ok with UB, it's a simple lanuage and you can reason through the UB. Rust is complex but doesn't have UB. C++ is the terrible middle ground where the language is complex and has a lot of UB
[13:21:49] <mrig> pyzozord: I watched this yesterday, found it to be interesting : https://www.youtube.com/watch?v=QpAhX-gsHMs
[13:21:50] <bayaz> Title: Modern C and What We Can Learn From It - Luca Sas [ ACCU 2021 ] 
[13:22:10] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[13:22:17] <pyzozord> mrig: oh nice thanks! I was looking for that talk few days ago!
[13:22:22] *** Joins: flaknet99 (~0x100@32.211.211.39)
[13:22:30] <mrig> The habit of passing by value is nice, am trying to make this my default in go too.
[13:22:42] <mrig> so it will be good to reinforce that.
[13:22:56] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 265 seconds)
[13:23:01] <pyzozord> mrig: I watched it before. I think this guy is kind of summirisng data-oriented-design ideas from the circles of Case Muratori
[13:23:12] <pyzozord> Casey*
[13:23:21] *** Joins: jacks2 (~bc8165b6@217.29.117.252)
[13:23:25] <mrig> ah ok, right that makes sense.
[13:24:01] <mrig> I don't understand why they default to pointers in go.
[13:24:13] <mrig> over simplification I suppose.
[13:24:27] <mrig> references I should say, I suppose.
[13:24:54] *** Quits: kobalt (~rsonx@user/kobalt) (Client Quit)
[13:25:51] <edgar-rft> meaybe they want to show that go has a point
[13:26:27] <flaknet99> the cmpiler could just turn it into a stack offset anyway, if its a pointer or not
[13:27:45] <mrig> yes it is optimised but often may end up on the heap if it can't prove that it is not used later on.
[13:28:21] *** Quits: BenLand100 (~bland@user/benland100) (Quit: s/BenLand100//)
[13:28:56] <mrig> I find that it is nice to have a model of what the compiler is doing in mind regardless of possible optimisations.
[13:29:05] <mrig> go is pretty good for this.
[13:29:59] <mrig> but it is mostly done after the fact with the tooling I suppose, so less relevant.
[13:36:27] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b0a7:81a6:ed08:859a) (Ping timeout: 250 seconds)
[13:38:23] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b0a7:81a6:ed08:859a)
[13:38:58] *** Quits: cm007magnum (~Rheanna@101.89.154.192) (Remote host closed the connection)
[13:40:33] *** Quits: dba (uid502594@id-502594.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[13:41:25] *** Quits: Guest723 (~Guest7@113.26.32.236) (Ping timeout: 252 seconds)
[13:41:26] *** Joins: BenLand100 (~bland@64.253.5.174.dyn-cm-pool75.pool.hargray.net)
[13:41:27] *** Quits: BenLand100 (~bland@64.253.5.174.dyn-cm-pool75.pool.hargray.net) (Changing host)
[13:41:27] *** Joins: BenLand100 (~bland@user/benland100)
[13:41:37] *** Joins: cm007magnum (~Rheanna@101.91.232.94)
[13:43:37] *** Quits: mmfood (~mmfood@45.135.187.13) (Ping timeout: 252 seconds)
[13:47:05] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[13:47:36] *** Joins: kobalt (~rsonx@user/kobalt)
[13:48:03] *** Joins: Guest738 (~Guest7@113.26.32.236)
[13:49:30] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[13:52:27] <arahael> mrig: Yes, but what a lot of people miss is that, eg, the C abstract machine, is not how computers have worked for a long time now.
[13:53:42] *** Joins: terminalpusher (~terminalp@2a01:586:b076:1:b672:386d:c0a9:7f7f)
[13:53:45] <jacks2> C doesn't even have native support for concurrency/parallelism.. and C fanatics still fantasize they are working close to the machine
[13:54:22] <deniska> I work close to metal, the laptop is literally on me right now :)
[13:54:41] <flaknet99> no language does, they all depend on OS to do that
[13:55:03] <deniska> Also I like how what we call "metal" is mostly sand and plastic
[13:55:20] *** Quits: BenLand100 (~bland@user/benland100) (Quit: s/BenLand100//)
[13:55:37] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[13:55:50] *** Quits: extern (~archer@141.226.60.187) (Ping timeout: 252 seconds)
[13:56:00] <GeDaMo> Some languages have support for parallelism
[13:56:16] <GeDaMo> https://en.wikipedia.org/wiki/Occam_(programming_language)
[13:56:18] <bayaz> Title: occam (programming language) - Wikipedia 
[13:56:24] <flaknet99> SSE does i guess
[13:56:32] <flaknet99> superscalar instructions
[13:56:34] <user51> it should be the opposite way. parllelism should support languages.
[13:56:40] <mrig> arahael: the magnet is, perhaps, that all OS interfaces are in C
[13:56:51] <mrig> makes it a very sticky language.
[13:56:53] <arahael> mrig: Not really, no.
[13:56:59] <GeDaMo> The OS interfaces aren't in C
[13:57:02] *** Quits: kobalt (~rsonx@user/kobalt) (Quit: leaving)
[13:57:14] <mrig> well the graphics API's then I suppose.
[13:57:53] <arahael> mrig: Windows is more or less their version of C++, Linux's is, as GeDaMo pointed out, definitely not in C, the graphics API's often aren't, and infact OpenGL is not in standard C (they invoke UB), and on iOS, for what it's worth, it's ObjC, generally.
[13:57:53] <GeDaMo> Not them either
[13:57:54] *** Quits: xsperry (~xs@user/xsperry) (Read error: Connection reset by peer)
[13:58:22] *** Joins: xsperry (~xs@user/xsperry)
[13:58:36] <GeDaMo> The calling conventions are defined in terms of registers/stack and machine code entry points
[13:59:05] <mrig> OK so the API's that you com across that abstract away the reality, seem to most often be in C
[13:59:39] <GeDaMo> The only C-specific thing is null terminated strings
[13:59:41] <mrig> Ah right, so the servers are the language bind?
[13:59:55] <mrig> oh that's interesting to know.
[14:00:14] <mrig> Right so if you can produce those then there is no obligation to go via C
[14:00:30] <arahael> mrig: As, eg, Go does - on Linux, they don't use the libc at all, iirc.
[14:00:43] <deniska> linux (the kernel) interface is syscalls, and C doesn't even have a built in way of making them :D
[14:00:56] <mrig> right yes, I am starting to get an idea of what gio must be doing then.
[14:01:31] <mrig> I had assumed that the system calls were a language API, but of course they are made in the shell.
[14:01:41] <mrig> the language has a system call function.
[14:01:56] <GeDaMo> That's from libc
[14:01:59] <arahael> mrig: Nope, not done in the shell either. :)
[14:02:08] * mrig tries to wipe away some of his ignorance :D
[14:02:20] <arahael> mrig: The shell is a user-facing application, in this case./
[14:02:33] <mrig> arahael: right not the shell the process, could be in the shell could be just a lib call I suppose.
[14:03:02] <arahael> mrig: Not sure what you're referring to as the shell then, in that cse.
[14:03:06] <deniska> mrig: shell is a programming language interpreter with REPL functionality, not unlike python
[14:03:10] *** immibis_ is now known as immibis
[14:03:23] <deniska> it just happens to have very streamlined syntax for launching binaries :)
[14:03:26] <mrig> the language implementations attempt at the specification that the OS is also implementing?
[14:03:51] <mrig> arahael: oh because I have been using the shell as my development environment.
[14:04:19] <arahael> mrig: You mean bash?
[14:04:23] <mrig> yes
[14:04:31] <arahael> That's a user-facing application.
[14:04:44] <mrig> right yes.
[14:05:07] <mrig> Been meaning to go into chroot and learn a little more about how these can be changed.
[14:05:35] <mrig> I saw that you can change your shell when watching something that was explaining this.
[14:05:57] *** Quits: hexingb (~hexingb@101.236.65.144) (Ping timeout: 265 seconds)
[14:06:25] <flaknet99> historically there ws a login program that would execute some SHELL= line from a config file after it opens users TTY
[14:06:33] *** Joins: hexingb (~hexingb@2409:8902:7ba2:e6d5:3d69:3766:2db9:a925)
[14:06:42] <GeDaMo> The users's startup shell is set in /passwd
[14:06:47] <deniska> mrig: shell is just an ordinary program, you can ask session handling machinery of your system to just launch a different program
[14:07:14] <GeDaMo> Er, /etc/passwd
[14:07:27] <deniska> mrig: on unixy systems the program to run is configured in /etc/passwd, yeah
[14:08:38] <mrig> oh cool, so you could in theory play about with this and have completely different types of shell.
[14:08:49] <mrig> sounds like fun.
[14:08:50] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b0a7:81a6:ed08:859a) (Ping timeout: 250 seconds)
[14:09:10] <GeDaMo> You can also just start a new shell from your current shell
[14:09:10] <deniska> mrig: zsh is a fairly popular alternative to bash
[14:09:23] <mrig> not only is the sky not the limit, the floor isn't either :D
[14:09:40] <flaknet99> you can do weird things with it, like some kind of wacky RPC system using various shell programs on different ssh users
[14:09:41] <user51> lower
[14:09:45] <mrig> I've never tried zsh, I gather it is a more C focused shell?
[14:09:46] <user51> my bad
[14:11:02] *** Joins: rsx (~dummy@ppp-188-174-153-64.dynamic.mnet-online.de)
[14:11:06] *** Joins: zaher_ (~zaher@37.48.190.58)
[14:11:06] <mrig> oh cool, a thunderstorm is starting up this end of the wire.
[14:11:20] <mrig> Love being inside when there is a storm outside.
[14:13:41] *** Quits: zaher (~zaher@37.48.190.247) (Ping timeout: 265 seconds)
[14:15:10] <arahael> mrig: I usually use the fish shell, which isn't even posix-compliant.
[14:15:22] <arahael> mrig: zsh is still a posix-compliant shell.
[14:15:37] <pyzozord> mrig: the os runs your program, specifically your program is loaded and executed on the processor in special less privilaged processor mode, then your program sometimes sets some registers and makes a call to a syscall, which jumps program execution into kernel, then kernel can do whatever it wants to do and return back to where it was called passing the execution back to the program
[14:16:16] <pyzozord> the libc are just wrappers for "set some registers and make calls to a syscall"
[14:16:58] <pyzozord> plus extra conveinence features that don't even call into kernel
[14:17:19] *** Quits: tomgus1 (~tomgus1@2a02:c7f:d2b0:e600:ba27:ebff:fe5c:2dcd) (Quit: ZNC 1.8.2+deb2 - https://znc.in)
[14:17:20] <pyzozord> shell is just another userland program just like your program
[14:17:32] <flaknet99> it' s more than just registers,  OS specific structs that the registers could point too
[14:17:34] *** Joins: tomgus1 (~tomgus1@2a02:c7f:d2b0:e600:ba27:ebff:fe5c:2dcd)
[14:17:39] <pyzozord> you can talk to other programs from your program via syscalls, that's called "ipc"
[14:18:02] *** Quits: stkw0 (~quassel@ns3046126.ip-91-121-8.eu) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:18:43] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:20ab:da33:a5ae:6427) (Read error: Connection reset by peer)
[14:19:01] *** Joins: tiago- (~tiago@185.207.167.110)
[14:19:21] <pyzozord> funny thing is, there is about 200 kernel syscalls in linux. Way less then any of the higher level libraries
[14:19:41] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[14:19:45] <GeDaMo> I think it's a bit more than that now
[14:19:54] *** Joins: flaknet99 (~0x100@32.211.211.39)
[14:20:19] <GeDaMo> https://gist.github.com/yamnikov-oleg/454f48c3c45b735631f2#file-syscall_x86_64-md
[14:20:20] <bayaz> Title: Linux Syscalls Reference 
[14:20:39] <pyzozord> oh 500 that's a bit more
[14:20:43] <GeDaMo> The largest number is 545 but they're not consecutive
[14:20:59] <GeDaMo> It jumps from 326 to 512
[14:21:48] *** Joins: BenLand100 (~bland@64.253.5.174.dyn-cm-pool75.pool.hargray.net)
[14:22:04] <arahael> And on linux, a language implementation almost might as well use the system calls directly.  It's just convenient to use an existing libc, because then you're mostly portable already.
[14:22:09] *** Quits: BenLand100 (~bland@64.253.5.174.dyn-cm-pool75.pool.hargray.net) (Changing host)
[14:22:09] *** Joins: BenLand100 (~bland@user/benland100)
[14:22:13] <pyzozord> still 500 is not that much compared to most userland apis, especially considering those 500 functions can do literally everything
[14:23:30] <pyzozord> also I think some of these syscalls make others obsolete
[14:23:40] <pyzozord> so it's not unique 500 concepts, it's less
[14:23:48] <arahael> Yes, but unusually, on linux, the system call api is *very* stable.
[14:24:01] <arahael> It's actually a bit bizarre - you can change the kernel more easily than you can change teh libc.
[14:24:44] <pyzozord> yeah I haven't decided yet, but I wanna say that kernel abi is a friendlier api than libc
[14:25:07] <pyzozord> well I guess I shoul say kernel api in this context, fact that it is an abi is irrelevant
[14:25:23] *** Joins: stkw0 (~quassel@ns3046126.ip-91-121-8.eu)
[14:25:58] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 252 seconds)
[14:26:12] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Remote host closed the connection)
[14:26:24] *** Quits: tiago- (~tiago@185.207.167.110) (Quit: Smile. Tomorrow's going to be worse.)
[14:28:04] <pyzozord> where I think libc shines really is functions like printf, that's pretty useful
[14:28:36] <pyzozord> and would make for much worse environment if everyone invented their own printfs
[14:28:42] <terminalpusher> What time complexity does a program have that 1. generates a random index 2. checks whether the element at the random index of a size-fixed buffer is zero (this is O(1)) and goes to 1. if true and otherwise 3. places a non-zero number into the buffer at that index? Is such a program O(1) or O(n)?
[14:28:51] *** Quits: cm007magnum (~Rheanna@101.91.232.94) (Remote host closed the connection)
[14:28:56] <flaknet99> libc is portable, the kernel ABI is not
[14:29:12] <flaknet99> if you only us e one arch you would never notice
[14:29:22] <arahael> pyzozord: printf leaves a lot to be desired.
[14:29:41] <GeDaMo> terminalpusher: when does it end?
[14:30:16] <leduyquang753> terminalpusher Unbounded.
[14:30:17] *** Joins: cm007magnum (~Rheanna@101.89.154.192)
[14:30:23] *** Parts: iridium__ (~iridium@122.175.247.240) ()
[14:30:26] <terminalpusher> when the whole fixed-size buffer is full. Well, it doesn't actually end, but it visually ends because when the buffer is full then you won't notice any changes anymore because it will just loop in the is-zero check
[14:30:42] <pyzozord> arahael: I hear they will add a binary print in c23
[14:30:45] <terminalpusher> unbounded? hmm yeah I kinda thought so
[14:30:48] <terminalpusher> I guess it's O(?)
[14:30:50] <terminalpusher> ?
[14:30:55] *** Joins: allegorical (~guest@2607:fea8:33e0:65c:d3b:7248:acff:b632)
[14:30:59] <leduyquang753> There is no big O.
[14:31:10] <arahael> pyzozord: How would that improve the printf situation?
[14:31:25] <pyzozord> arahael: that's all I need from printf that I don't have
[14:31:27] <terminalpusher> because it involves a random number (although it's pseudo random) there is no time complexity determinable right?
[14:31:53] <leduyquang753> Yes, it may keep picking the same thing and loop forever.
[14:31:57] <terminalpusher> right
[14:32:10] <arahael> pyzozord: A good printf would be a function that requires a format specifier, and a list of formatted values.  But C doesn't have a (good) var-args either.
[14:32:32] <GeDaMo> O(‚àû)
[14:32:35] <terminalpusher> what do you think about the time complexity notation `O(?)` though? 
[14:32:39] <terminalpusher> oh, yeah, or thaty
[14:32:40] <arahael> pyzozord: An ideal printf would have a format string that has language support for actually type checking the values.
[14:33:12] <arahael> pyzozord: Eg, in python, this is ideal, imho: print(f"blah {value}")
[14:33:32] <arahael> pyzozord: And the language takes 'value', and directly interpolates it into the string.
[14:33:36] <jacks2> with dependent types a user can write his own printf that checks if flags match the passed arguments at compile time
[14:33:47] <arahael> jacks2: And C doesn't have that, either.
[14:34:01] <arahael> jacks2: You don't even need dependent types, though.
[14:34:12] <jacks2> you do if you use a string
[14:34:22] <jacks2> otherwise, metaprogramming hacking
[14:34:29] <arahael> jacks2: Or use type classes.
[14:34:57] <flaknet99> even parameter orders to linux syscalls can be in an unexpected order, see kernel/fork.c  "CONFIG_CLONE_BACKWARDS"
[14:35:18] <jacks2> arahael, for type classes to work you'd need a different format than the one C uses
[14:35:37] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:35:40] <arahael> jacks2: For dependent types to work, you'd *also* need a different format. :)
[14:35:50] <jacks2> arahael, nope, the same format works
[14:36:20] <jacks2> https://www.youtube.com/watch?v=fVBck2Zngjo
[14:36:22] <bayaz> Title: Idris: Type safe printf 
[14:36:33] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[14:36:48] <arahael> jacks2: Ah, for the format string itself, sure - but I'm sure you can still support that format string uh, format, by using type classes, as well.
[14:37:08] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Client Quit)
[14:37:13] *** Quits: shalora (~quassel@2a02:810a:b40:9f4::178f) (Quit: https://quassel-irc.org - Komfortabler Chat. √úberall.)
[14:37:22] <arahael> jacks2: The type class would be "Formattable", and if the format string specifies %d, as an example, it calls Formattable.format_d
[14:37:27] <jacks2> arahael, then why wasn't that done in haskell's printf?
[14:37:29] *** Joins: Atque (~Atque@user/atque)
[14:37:52] <arahael> jacks2: I dunno, which printf are you referring to there?
[14:37:59] <jacks2> Text.Printf
[14:38:21] <arahael> jacks2: In the scanf module?
[14:39:09] <jacks2> it is in base
[14:39:38] <jacks2> Text.Printf is the module
[14:40:02] <arahael> Ah, ok, so the one in base then, it's got this intriguing line in the documentation: Unlike C printf(3), the formatting of this printf is driven by the argument type; formatting is type specific. The types formatted by printf "out of the box" are:
[14:40:17] <pyzozord> I wonder if I can write c without a libc at all
[14:40:48] <jacks2> arahael right. but try doing printf "%d" "foo"
[14:40:49] <arahael> jacks2: And it looks like it uses type classes - specifically the PrintfArg type class.
[14:41:27] *** Quits: xff0x (~xff0x@2001:1a81:52da:9800:f838:bea4:9f6c:73cb) (Ping timeout: 250 seconds)
[14:41:41] *** Quits: flaknet99 (~0x100@32.211.211.39) (Remote host closed the connection)
[14:42:22] <arahael> jacks2: Looks like it safely provides an exception?
[14:42:28] *** Quits: password2 (~password@user/password2) (Ping timeout: 252 seconds)
[14:42:29] *** Joins: xff0x (~xff0x@2001:1a81:52da:9800:f593:2afb:aa0a:4d64)
[14:42:43] *** Quits: cm007magnum (~Rheanna@101.89.154.192) (Remote host closed the connection)
[14:42:52] <jacks2> arahael, compile time error is safer.. which is what idris version on that link would do
[14:42:58] <GeDaMo> pyzozord: you'd need at least one function, the equivalent of syscall
[14:43:17] <GeDaMo> On a protected mode OS, that is
[14:43:18] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Remote host closed the connection)
[14:43:23] <arahael> jacks2: Right, but they chose not to do it that way for that function for some reason.
[14:43:36] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[14:43:37] <GeDaMo> On an embedded system wothout an OS, you might be able to get away with just poking at memory :P
[14:43:38] *** Joins: cm007magnum (~Rheanna@101.89.154.192)
[14:43:50] *** Quits: hexingb (~hexingb@2409:8902:7ba2:e6d5:3d69:3766:2db9:a925) (Ping timeout: 260 seconds)
[14:44:08] <jacks2> it isn't possible without dependent types, or metaprogramming. there are type safe versions of printf for haskell that use template haskell. but it can't be done by just using a plain function that accepts a String
[14:44:13] *** Quits: cm007magnum (~Rheanna@101.89.154.192) (Remote host closed the connection)
[14:44:35] <merijn> It can be done, but not with a convenient API :p
[14:44:47] <jacks2> how?
[14:44:48] <arahael> ^^
[14:44:59] *** Joins: cm007magnum (~Rheanna@101.89.154.192)
[14:45:14] <merijn> jacks2: Returning some horrific existential type and a "ExistentialPrintf -> Maybe String" kinda nonsense
[14:45:30] <merijn> It'll be god awful to use, though
[14:45:38] <jacks2> is that plain haskell, or halfway to dependent types ghc extension haskell
[14:45:59] <arahael> merijn: Can't you do it with a visitor pattern kind fo thing, using say, "PrintfFormattableType", with methods defined for each possible format you'd want to expose?
[14:46:09] <merijn> I don't think you need to go to extreme, just GADTs?
[14:46:25] <pyzozord> hmm, I can't find in gcc a flag to change the .start
[14:46:49] <merijn> pyzozord: You probably wanna look into "standalone" C
[14:46:50] <arahael> Regardless, I think the idea for Data.Printf was to provide a printf that's "similar" to that in other languages, so that when you need something like that, you can just use it.
[14:47:36] <merijn> pyzozord: The C spec specifies two versions of C "hosted" (running on an OS, the default kinda thing gcc assumes) and "standalone" which is the sorta bare-metal thing that a kernel uses
[14:47:40] *** Joins: extern (~archer@141.226.60.187)
[14:47:51] <merijn> pyzozord: .start and co are part of the hosted environment
[14:48:29] <merijn> arahael: Data.Printf is terrible, tbh and there's almost never a reason to use it over "mconcatting a list of strings"
[14:48:52] <arahael> merijn: I agree, I didn't even know it was there until jacks2 brought it up.
[14:48:58] <jacks2> I still use it, I am very familiar with printf flags, and template haskell versions are awful
[14:49:02] <pyzozord> merijn: can a standalone c program be run as a normal program on linux?
[14:49:04] <GeDaMo> pyzozord: the OS calls _start; libc provides a _start which calls main
[14:49:10] <arahael> jacks2: Why do you choose to use it?
[14:49:15] <merijn> jacks2: Why are printf and TH the only options?
[14:49:23] <pikapika> merijn, hi
[14:49:40] <jacks2> arahael, because I know all the printf flags by heart, and I'd have to look up alternatives that use different syntax, or they are just ugly
[14:49:44] <GeDaMo> pyzozord: I don't know if you can compile a C program containing a _start function and have it run
[14:50:12] <merijn> jacks2: Numeric has some pretty convenient/simple ones, tbh
[14:50:21] <pikapika> jacks2, what language
[14:50:30] <merijn> GeDaMo: You can, if you don't use hosted C :p
[14:50:54] <jacks2> though, after just searching an ugly template haskell version of printf, this came out.. it doesn't look half bad. https://hackage.haskell.org/package/typelits-printf
[14:50:55] <bayaz> Title: typelits-printf 
[14:51:11] <merijn> jacks2: I just use this: https://github.com/merijn/Belewitte/blob/master/benchmark-analysis/model-src/Evaluate.hs#L364-L372
[14:51:12] <bayaz> Title: Belewitte/Evaluate.hs at master ¬∑ merijn/Belewitte 
[14:51:16] <Donitz> eh, do you really have to build sdl from source to get version 2.0.17
[14:51:19] *** Joins: Klinda (~klinda@2.227.251.209)
[14:51:21] <Donitz> that sucks
[14:51:49] *** Quits: _inky (~inky_@46.36.119.235) (Ping timeout: 252 seconds)
[14:51:59] <merijn> jacks2: Where roundVal is just a trivial wrapper around showFFloat: https://hackage.haskell.org/package/base-4.15.0.0/docs/Numeric.html#v:showFFloat
[14:52:00] <jacks2> pikapika, in this particular case, haskell. but I just use printf everywhere, including in C++. added benefit that it annoys other C++ programmers :P
[14:52:00] <bayaz> Title: Numeric 
[14:52:27] <pikapika> jacks2, won't it cause issues if other code uses C++ streams
[14:53:04] <jacks2> merijn, I'm familiar with it. printf does more than just numbers though. and I'd have to look everything up every time, for example, I have no clue how I'd do printf "%4.2f". and some things, you can't do, such as "%-50s"
[14:53:30] *** Joins: mrig (~mrig@user/mrig)
[14:53:53] <jacks2> pikapika, I never experienced it. at worst, just flush stdout before calling C++ streams
[14:54:37] <mrig> Oh dear, there is some issue with my windows VM, does anyone know if there are any particular flags required to start up a windows qemu VM?
[14:54:53] <arahael> jacks2: C++'s streams are typesafe, though, unlike your printf hackery.
[14:55:16] <mrig> It says that it does not have enough ram, I gave it 2G for a 512m min requirement.
[14:55:21] <jacks2> arahael, they are. they are also extremely verbose when trying to replicate what printf does in few characters
[14:56:01] <jacks2> interestingly enough, some C and C++ compilers check if string literal matches passed flags, and issue a warning if it doesn't
[14:56:23] <arahael> mrig: Windows has required more than 512m for a long time.
[14:56:24] <pyzozord> mrig: I have this, it's probably pretty shitty, but it worked https://termbin.com/91ki
[14:56:25] <bayaz> Type: text/plain; charset=utf-8 
[14:56:46] <arahael> Yes.  4G is far more reasonable.
[14:56:49] <mrig> arahael: is 2G not enough do you think?
[14:56:54] <pikapika> arahael, and an ssd
[14:56:59] <arahael> mrig: 2G is the technical mimimum.
[14:57:08] <pikapika> Win 10 requires an ssd
[14:57:14] <pikapika> 7 is fine with hard disk
[14:57:23] <arahael> Oh, win 7?
[14:57:32] <mrig> thanks pyzozord I will give that a try.
[14:57:47] <mrig> this is running on a VM from an ssd
[14:58:00] <mrig> well trying to run from a ssd in a VM
[14:58:13] <arahael> jacks2: I usually just use functions to reformat things if required. 
[14:58:17] *** Joins: dre (~dre@2001:8003:c932:c301:e5c5:40af:66d5:e309)
[14:59:31] *** Quits: dre (~dre@2001:8003:c932:c301:e5c5:40af:66d5:e309) (Client Quit)
[15:00:25] *** Joins: inky (~inky@5.77.132.34)
[15:01:09] *** Joins: dunkeln (~dunkeln@94.129.71.70)
[15:01:10] *** Quits: dunkeln (~dunkeln@94.129.71.70) (Changing host)
[15:01:10] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[15:03:11] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.3)
[15:03:17] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[15:03:28] *** Quits: inky_ (~inky@46.36.119.235) (Ping timeout: 265 seconds)
[15:05:05] *** Joins: magla (~gelignite@55d479ac.access.ecotel.net)
[15:05:24] <pyzozord> I cannot find any official documentation about .start or _start in gcc, libc or in the tif pfs elf spec
[15:07:07] <pyzozord> (or in c11 spec)
[15:07:20] *** Joins: mrig (~mrig@user/mrig)
[15:08:00] <mrig> pyzozord: I'm getting an error when I try to use this, qemu-system-x86_64: -vga qxl: drive with bus=0, unit=0 (index=0) exists
[15:08:06] *** Joins: Rounin (~david@84.212.130.215)
[15:08:07] <GeDaMo> https://en.cppreference.com/w/c/language/identifier#Reserved_identifiers
[15:08:07] <bayaz> Title: Identifier - cppreference.com 
[15:08:21] <mrig> every line that I remove from the file, just makes way for the same error for the next device.
[15:08:59] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 252 seconds)
[15:09:01] <GeDaMo> pyzozord: I wrote a C program containing a function _start which does nothing but return; it compiles OK but segfaults when I run it
[15:09:03] <pyzozord> mrig: need to create a disk first with https://qemu-project.gitlab.io/qemu/system/images.html
[15:09:04] <bayaz> Title: Disk Images ‚Äî QEMU documentation 
[15:09:32] <pyzozord> mrig: actually not sure what that error is about, sorry
[15:09:35] <mrig> pyzozord: I have created a disk, am not sure if the OS was created successfully.
[15:10:31] <edgar-rft> isn't causing segfaults the whole point of using C?
[15:10:32] <pyzozord> GeDaMo: do you know why does it segfault?
[15:10:52] <mrig> oh no problem, will perhaps try installing again, but am loathed to try this as it is so long, I flagged 2G on install and am not sure as to whether this is why the thing will not boot up now.
[15:11:04] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 252 seconds)
[15:12:08] <pyzozord> mrig: don't remove yet
[15:12:29] <merijn> pyzozord: That's because _start takes care of preparing the hosted C environment
[15:12:35] <pyzozord> mrig: try one of these options https://wiki.gentoo.org/wiki/QEMU/Options#Graphics_card first
[15:12:35] <bayaz> Title: QEMU/Options - Gentoo Wiki 
[15:12:36] <merijn> pyzozord: So what _start does is specified by the C spec
[15:12:47] <GeDaMo> pyzozord: I put in a syscall to exit and now it doesn't segfault :P
[15:12:55] <pyzozord> oh hahha, perfect
[15:13:06] <merijn> edgar-rft: No, silent memory corruption and CVEs are other core goals of C
[15:13:08] <pyzozord> GeDaMo: did you use any gcc flags?
[15:13:22] <GeDaMo> -nostdlibs
[15:13:32] <GeDaMo> That means it doesn't link libc
[15:13:42] <mrig> pyzozord: oh cool, just using -m flag from your example and giving more ram seems to do the job.
[15:13:52] <merijn> pyzozord: The C spec says "programs start with C, there is an environment, etc." but the linux kernel doesn't know about main or any of that nonsense
[15:13:58] *** Joins: kts (~kts@103.73.237.124)
[15:14:07] <merijn> pyzozord: So there needs to be code in between "what the linux kernel will start running" and "main"
[15:14:12] <merijn> This is what _start is/does
[15:14:13] <pyzozord> GeDaMo: how did you syscall without libc?
[15:14:20] <GeDaMo> inline asm
[15:14:45] *** Quits: cm007magnum (~Rheanna@101.89.154.192) (Remote host closed the connection)
[15:14:50] * pyzozord snaps knuckles
[15:14:56] <pyzozord> That's will take some effort
[15:16:02] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 265 seconds)
[15:16:04] <user51> he's cheating, there's a SYSCALL instruction :P
[15:16:41] *** Joins: cm007magnum (~Rheanna@101.89.154.192)
[15:17:16] *** Quits: kts (~kts@103.73.237.124) (Client Quit)
[15:17:30] *** Quits: cm007magnum (~Rheanna@101.89.154.192) (Remote host closed the connection)
[15:18:01] <edgar-rft> if you're quick you can switch power off to avoid segfaults
[15:18:07] <mrig> hum, I feel that a little more clarity as to what 'just a moment' means could be required.
[15:18:08] *** Joins: cm007magnum (~Rheanna@101.89.154.192)
[15:18:26] <mrig> 'just a full morning or afternoon' would be more precise.
[15:18:26] <jacks2> merijn, do you know off hand what mechanism this printf is using? it says it isn't using template haskell, but fails at compile time if arguments don't match the flags. https://hackage.haskell.org/package/typelits-printf
[15:18:27] <bayaz> Title: typelits-printf 
[15:18:49] <jacks2> the only difference I see is that it uses @ character before the format string
[15:18:50] *** Quits: cm007magnum (~Rheanna@101.89.154.192) (Remote host closed the connection)
[15:18:59] <merijn> jacks2: That's using TypeApplications
[15:19:05] <merijn> jacks2: So that's not an actual string
[15:19:19] <merijn> It's a type-level string that they "cheat" into the type with TypeApplications
[15:19:52] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Remote host closed the connection)
[15:20:14] <pyzozord> mrig: yeah it took me half a day or more to do the qemu stuff
[15:20:26] <merijn> jacks2: Check out the printf_ example that uses Proxy instead
[15:20:35] <mrig> Do you have to create an account when running windows, with email address and all the rest?
[15:20:43] <pyzozord> no
[15:20:46] <mrig> I cant remember if I did in the past
[15:21:01] <jacks2> merijn, isn't type application's syntax x @Type?
[15:21:04] <pyzozord> you can download free version of windows 7 and install it unregistered without a serial key
[15:21:10] <mrig> it is not very clear on setting up, what constitutes a user account and what is fishing for your details.
[15:21:25] <GeDaMo> pyzozord: I can now print out something using the write syscall
[15:21:29] *** Joins: cm007magnum (~Rheanna@218.78.77.129)
[15:21:34] <mrig> I have entered my win7 serial, seems to be working.
[15:22:44] <pyzozord> GeDaMo: mind sharing your code? Also where do you get documentation about syscall abi from?
[15:22:55] <pyzozord> I noticed that man 2 exit shows me c api
[15:23:13] <mrig> It does not give me any other option than to make an account :|
[15:23:19] <GeDaMo> pyzozord: https://ideone.com/GAHKd9
[15:23:22] <merijn> jacks2: The "string literal" isn't a string literal
[15:23:22] <bayaz> Title: Ideone.com 
[15:23:29] <merijn> jacks2: It's a Symbol (type level string)
[15:23:49] *** Joins: Crescendo (~Crescendo@user/crescendo)
[15:23:50] <GeDaMo> pyzozord: it complained when I called a function "exit"
[15:24:00] <GeDaMo> There's apparently a builtin of that name
[15:24:00] *** Joins: dunkeln (~dunkeln@94.129.71.70)
[15:24:01] *** Quits: dunkeln (~dunkeln@94.129.71.70) (Changing host)
[15:24:01] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[15:24:13] <GeDaMo> pyzozord: https://blog.rchapman.org/posts/Linux_System_Call_Table_for_x86_64/
[15:24:13] <bayaz> Title: Linux System Call Table for x86 64 ¬∑ Ryan A. Chapman 
[15:24:20] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[15:24:46] <GeDaMo> If I was going to do this properly, I'd have a syscall function
[15:25:50] <mrig> oh dear lord, now it is forcing me in my selection of password.
[15:25:51] <GeDaMo> Line 18 should be rsi, not esi
[15:25:56] <mrig> this is painful :|
[15:26:31] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[15:27:11] <arahael> GeDaMo: I've never learnt how to do inline asm in C!  Not sure what that ::"m" syntax is.
[15:27:14] <pyzozord> GeDaMo: I'm not getting segfault but I'm also not getting any printouts, I did gcc -stdlib main.c
[15:27:23] <GeDaMo> arahael: no-one understands it :|
[15:27:23] <arahael> I thought it was just a bunch of strings that happened to have assembly mnemonics in them?
[15:27:35] <GeDaMo> pyzozord: -nostdlib
[15:27:52] <pyzozord> oh sorry, I meant -nostdlib
[15:27:56] <arahael> GeDaMo: I used to do assembly for about a year - but not in C. (And not on intel, either, but a very embedded system using a custom 8081)
[15:28:11] <arahael> (No, not 8081, probably8051, it was a while ago)
[15:28:27] <pyzozord> ah after correcting line 18 I get the printout
[15:28:49] <GeDaMo> Yeah, it worked with esi for me and it shouldn't have :P
[15:29:04] <GeDaMo> It needs to be the 64 bit version of the register for an address
[15:29:26] <mrig> oh man the UI is laughable.
[15:29:28] <mrig> :D
[15:29:34] <GeDaMo> arahael: the constraints thing is complex and I don't pretend to understand it
[15:30:02] <mrig> filling in the required birth info is a UI nightmare, do these people get paid for writing this?
[15:30:13] <arahael> mrig: Almost certainly yes.
[15:30:21] <mrig> man this is shocking.
[15:30:32] *** Quits: gitgood (~gitgood@80-44-12-204.dynamic.dsl.as9105.com) (Ping timeout: 265 seconds)
[15:30:51] <mrig> I have to scroll back through reams of years with the mouse wheel and have no way to enter the data with keys.
[15:31:03] <pyzozord> I'm looking up the asm documentation in gcc info pages right now too
[15:31:42] <mrig> seriously this is utter rubbish.
[15:31:42] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Ping timeout: 276 seconds)
[15:31:43] <pyzozord> "m" stands for "A memory operand is allowed, with any kind of address that the machine supports in general."
[15:31:51] <GeDaMo> I actually guessed at the "m" in the print function, I'm guessing it means memory address
[15:32:02] <GeDaMo> "r" is for a register
[15:32:04] *** Joins: hexingb (~hexingb@103.37.140.24)
[15:32:20] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[15:33:56] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[15:33:58] <GeDaMo> You can tell the inline assembler to use Intel syntax
[15:34:50] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 252 seconds)
[15:35:10] <mrig> perhaps windows 7 would have been a better option: It is specifying the ads now :|
[15:35:57] <pyzozord> trying to find out if I can use assembly directly, not as a pretend c function. I don't really want to worry about c string escape sequences in assembly
[15:36:31] <GeDaMo> You can write a separate asm file and gcc will assemble and link it for you
[15:36:31] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[15:37:27] <arahael> But it will mean you then have to implement the C calling convention *and* provide a header file for it.
[15:38:25] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[15:38:37] <pyzozord> ah that's not even a normal c string, that's called "assembly template"
[15:38:53] <pyzozord> well then I feel more ok about using it I guess
[15:39:05] *** Quits: terminalpusher (~terminalp@2a01:586:b076:1:b672:386d:c0a9:7f7f) (Remote host closed the connection)
[15:39:12] *** Quits: xsperry (~xs@user/xsperry) (Quit: quit)
[15:39:15] *** Joins: mishugana (~mishugana@user/mishugana)
[15:39:19] <GeDaMo> Oh, you mean in the inline asm? Yeah, you have to present it as strings
[15:40:53] <arahael> Which is an irritation.
[15:41:17] *** Joins: xiongxin (~quassel@113.116.32.187)
[15:41:29] <pyzozord> ahh the disassembly of this program looks so nice
[15:41:41] <pyzozord> only 280 lines
[15:41:45] <GeDaMo> I don't think you're meant to be writing large amounts of inline asm :P
[15:42:03] <GeDaMo> pyzozord: if you compile with -O3 it'll be smaller :P
[15:42:16] *** Quits: cm007magnum (~Rheanna@218.78.77.129) (Remote host closed the connection)
[15:42:46] *** Joins: cm007magnum (~Rheanna@218.78.77.129)
[15:42:47] <pyzozord> not much though, 263 lines
[15:42:52] <user51> arahael: i think you could #include an asm file
[15:43:00] <user51> still need to have them as strings iirc
[15:43:41] <Donitz> in vs2019, I'm very confused by include directories, the #include directive, including files in solution, and .cpp vs .h files
[15:43:47] <GeDaMo> In order to #include it, it would need to be a C file
[15:43:56] <Donitz> so why does some .h files contain all the code
[15:44:29] <user51> huh. tricky stuff.
[15:44:40] <Donitz> and why is it sometimes not enough to just use an include directory, but you have to import the file into your project
[15:44:42] <Donitz> for it to work
[15:45:14] <GeDaMo> An include directory would just have the include files, not any related C source files
[15:45:18] <merijn> tbh, sounds like you need to go grab a decent into to C/C++
[15:45:46] <Donitz> but that makes no sense GeDaMo 
[15:45:50] <Donitz> .h files contain tons of code too
[15:45:56] <Donitz> https://github.com/vurtun/nuklear/blob/master/nuklear.h
[15:46:06] <GeDaMo> They can, they don't have to
[15:46:09] <pyzozord> #include acts as literally a copy-paste
[15:46:16] <Donitz> so the distinction is entirely arbitrary
[15:46:23] <pyzozord> doesn't help with the assembly templates
[15:46:34] <pyzozord> still doing the same, just in different file
[15:47:09] <Donitz> so it's not enough to include the dir containing .cpp files
[15:47:16] <Donitz> but it's enough to include the dir with .h files?
[15:47:44] <GeDaMo> Donitz: I don't see any code in that file, it's all declarations and #defines
[15:47:56] <Donitz> I see plenty of code
[15:48:06] <GeDaMo> Pick a line number
[15:48:11] <Donitz> 15207
[15:48:23] *** Quits: DasBrain (DasBrain@user/dasbrain) (Killed (NickServ (GHOST command used by DasBrain_)))
[15:48:31] *** Joins: DasBrain_ (DasBrain@user/dasbrain)
[15:48:41] <pyzozord> that's a comment
[15:48:53] <Donitz> no it's not
[15:48:57] <pyzozord> oh no nevermind
[15:49:01] *** Joins: xsperry (~xs@user/xsperry)
[15:49:07] <GeDaMo> OK, that's a function
[15:49:25] <pyzozord> yeah just the file is so huge I didn't realize
[15:49:26] <Donitz> I know it contains code
[15:49:31] <Donitz> because that's literally the entire library
[15:49:40] <GeDaMo> So presumably, there's no associated C source file, everything is just in this header
[15:50:13] <pyzozord> yep, just a copy paste, literally lives as part of your code that #include's it
[15:50:19] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Remote host closed the connection)
[15:50:32] <Donitz> then why do I sometimes have to include files in the project itself for it to work
[15:50:36] <Donitz> as otherwise they don't seem to be compiled
[15:50:38] <Donitz> as with imgui
[15:50:51] <GeDaMo> One advantage of doin git this way is that the compiler can inline functions more easliy
[15:51:05] <Donitz> https://github.com/ocornut/imgui/tree/master/examples/example_sdl_sdlrenderer
[15:51:06] <bayaz> Title: imgui/examples/example_sdl_sdlrenderer at master ¬∑ ocornut/imgui 
[15:51:25] <Donitz> this project does not work if I put all the imgui source files in a single directory, and include it in vc++ directories
[15:51:30] <Donitz> it just says unresolved symbols
[15:51:36] <pyzozord> Donitz: sdl does not contain code in header files
[15:51:59] <Donitz> https://github.com/ocornut/imgui/blob/master/examples/example_sdl_sdlrenderer/example_sdl_sdlrenderer.vcxproj
[15:51:59] <bayaz> Title: imgui/example_sdl_sdlrenderer.vcxproj at master ¬∑ ocornut/imgui 
[15:52:08] <Donitz> instead I have to include the source files in the project itself
[15:52:12] <Donitz> not enough to just use include
[15:52:46] <pyzozord> Donitz: you are missing some fundamental concepts about linking and compilaton units
[15:53:45] <Donitz> well I thought it was a simple matter about just adding my lib dir containing .h and .cpp files into vc++ include directories, and #include them in main
[15:53:50] <Donitz> but that's apparently not the case
[15:54:07] <pyzozord> no it's more complex
[15:54:11] <Donitz> I wish it wasn't
[15:54:46] <pyzozord> it goes into the concepts of linkers and loaders and generally how operating systems execute programs
[15:54:58] <pyzozord> higher level languages hide it away from you
[15:55:41] <pyzozord> it's not "weird c thing" it's how computers really work
[15:58:46] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[15:59:03] *** Joins: Buttercat (~Buttercat@user/buttercat)
[15:59:39] <mrig> oh that's cool, the licence has been recognised.
[15:59:50] <Rounin> Well, to be fair, there's nothing about computers as a concept that necessitates linking or even libraries of any kind
[16:00:03] <pyzozord> hmm maybe that last statement is a bit of an exaduration. Computers work the way they work, mostly because they were designed to support C and operating systems written in C
[16:00:16] <mrig> just need  to get some display and screen release issues sorted then i'm good to go.
[16:00:18] <mrig> :)
[16:00:20] <pyzozord> there is a little bit of kind of cyclical influence going on
[16:00:25] *** Joins: kobalt (~rsonx@user/kobalt)
[16:00:28] <Donitz> so let's say I got a lib then which includes both cpp and header files
[16:00:36] <Donitz> what is the correct way to include them in my project
[16:00:45] <pyzozord> mrig: nice! you got it faster then me for sure
[16:00:48] <Donitz> say I put them into lib/lib_a
[16:00:52] <Donitz> under my project root
[16:01:46] <Rounin> Donitz: Binary libraries don't include such files, unless they do something very odd... Uncompiled libraries with just source code can be included in all kinds of ways... cpp and h files are really the same type of file
[16:02:00] <Donitz> I assume by binary library you mean something with .dll or .lib
[16:02:03] <Donitz> + header files
[16:02:19] <pyzozord> Donitz: you know there are dedicated #c and #C++ channels?
[16:02:22] <Donitz> in case you add the include dir with header files to the vc++ include directories and the lib to the linker
[16:02:25] <Rounin> Right... The header files are just there to tell the compiler how to set up the stack and registers to call the function
[16:02:46] <Rounin> (although they can contain actual executable code as well)
[16:02:52] <Donitz> but this time it's actually uncompiled
[16:03:23] *** Joins: zaher (~zaher@37.48.158.121)
[16:03:44] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[16:03:49] <Rounin> Oh, so you mean how do you use a library in VC++? That's more of a VC++ question, so I don't know anything about that
[16:04:22] <Donitz> it's more about, do I have to include the source files into my project to ensure they are built
[16:04:51] <Donitz> and if I do that, should I still put the header files into my include dirs
[16:04:57] <pyzozord> Donitz: depends on the library
[16:05:02] <GeDaMo> "project" is an IDE concept, it will be IDE-specific
[16:05:07] <Donitz> vs2019
[16:05:11] <Rounin> Usually, the way you do it is by using a pre-build library (such as a .dll, .so, .a, etc.), and then the headers contain some minimal declarations and/or code to let your program interact with the binary code
[16:05:49] *** Quits: zaher_ (~zaher@37.48.190.58) (Ping timeout: 265 seconds)
[16:05:53] <Donitz> imgui isn't pre-built, they prefer to just give you the source files
[16:05:59] <Rounin> So you would then just include the headers, and the binary code in the library would contain the core of the code, and your program would just use that
[16:06:16] <Rounin> Yeah, then you'd include the entire source code in yours
[16:06:21] <Donitz> "The core of Dear ImGui is self-contained within a few platform-agnostic files which you can easily compile in your application/engine. They are all the files in the root folder of the repository (imgui*.cpp, imgui*.h)."
[16:06:30] <Rounin> Unless you yourself want to build a DLL from it, of course, but why do that when you have the source
[16:06:42] <Donitz> I'd prefer to just contain it all in the .exe
[16:07:07] <Rounin> Yeah... Then it's just as if you wrote it yourself... All of it goes into your source tree somewhere
[16:07:23] <Donitz> ah okay, so just like in the example file then
[16:07:28] <Donitz> https://github.com/ocornut/imgui/blob/master/examples/example_sdl_sdlrenderer/example_sdl_sdlrenderer.vcxproj
[16:07:28] <bayaz> Title: imgui/example_sdl_sdlrenderer.vcxproj at master ¬∑ ocornut/imgui 
[16:07:31] <Rounin> Let's say you put it in imgui/ ... Then your source would go #include "imgui/something.h" or #include "imgui/something.c" etc.
[16:08:24] <Donitz> on that topic
[16:08:28] <Donitz> what's the best practice
[16:08:32] <Donitz> include dir lib, and say
[16:08:41] <Donitz> #include "lib_a/lib_a.h"
[16:08:49] *** Quits: cm007magnum (~Rheanna@218.78.77.129) (Remote host closed the connection)
[16:09:01] <Donitz> or include each library individually
[16:09:02] <Donitz> and say
[16:09:05] <Donitz> #include "lib_a.h"
[16:09:22] <Rounin> People have a thousand opinions on what's best practice... I think it's best practice to be a bit skeptical of best practices
[16:09:39] <Rounin> But surely one would want to have imgui in its own folder, at least
[16:10:08] <Donitz> yepp, but it's about whether I should put that folder into the Include directories
[16:10:13] *** Joins: cm007magnum (~Rheanna@101.91.240.201)
[16:10:16] <Donitz> or include my third-party lib directory root
[16:10:28] *** Quits: cm007magnum (~Rheanna@101.91.240.201) (Remote host closed the connection)
[16:10:56] <Donitz> I've seen people both use #include "SDL2/SDL.h"
[16:10:57] <Donitz> and
[16:11:03] <Donitz> #include "SDL.h"
[16:11:17] *** Joins: cm007magnum (~Rheanna@101.91.240.201)
[16:11:31] <Rounin> Hm... Might it be that you've seen "SDL2/SDL.h" and <SDL.h>? Because the second one points to the common include folders owned by the operating system
[16:11:44] <Rounin> The <> tells the compiler to search in some standard folders
[16:11:54] <Donitz> ah
[16:12:03] <Donitz> so I should never use <> when I'm working inside my own project only
[16:12:16] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[16:12:22] <Inline> you should use "" for project header files
[16:12:28] <Donitz> good
[16:12:29] <mrig> pyzozord: did you find a way to get windows to resize its display to the space that it is given?
[16:12:30] <Inline> and use <> for system header files
[16:13:42] <Donitz> well I think I understand it fairly well
[16:14:14] <Donitz> bit annoying to have to polute my project with source files from a library
[16:14:16] <Donitz> but it is what it is
[16:14:38] *** Joins: Auron (~Auron956@user/auron)
[16:15:27] <pyzozord> mrig: no, but I could set the resolution from inside the windows
[16:15:53] *** Joins: password2 (~password@user/password2)
[16:15:58] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 252 seconds)
[16:16:34] <pyzozord> gotta love waybackmachine
[16:18:17] <pyzozord> It's strange that I can't find more official source for linux syscall abi
[16:18:36] *** Quits: Buttercat (~Buttercat@user/buttercat) (Remote host closed the connection)
[16:19:23] *** Quits: kobalt (~rsonx@user/kobalt) (Quit: leaving)
[16:19:43] <GeDaMo> https://en.wikipedia.org/wiki/X86_calling_conventions#System_V_AMD64_ABI
[16:19:43] <bayaz> Title: x86 calling conventions - Wikipedia 
[16:20:15] <GeDaMo> "System V Application Binary Interface AMD64 Architecture Processor Supplement" 
[16:20:15] <GeDaMo> https://github.com/hjl-tools/x86-psABI/wiki/x86-64-psABI-1.0.pdf
[16:20:16] <bayaz> Domain: raw.githubusercontent.com Type: application/octet-stream Size: 496.3 kB 
[16:20:59] *** Joins: kobalt (~rsonx@user/kobalt)
[16:21:32] <pyzozord> oh nice, that's a newer version than I found here https://refspecs.linuxfoundation.org/
[16:21:33] <bayaz> Title: Linux Foundation Referenced Specifications 
[16:22:15] <pyzozord> but I don't see there list of syscalls
[16:23:01] <pyzozord> It does mention "The number of the syscall has to be passed in register %rax." so at least that is clear now
[16:23:55] <GeDaMo> Note that when you write to a 32 bit version of a register (eg. eax) it zeroes the upper 32 bits of the 64 bit version of the register
[16:24:16] <GeDaMo> Which is how I can get away with mov $60, %eax
[16:24:35] <mrig> pyzozord: right yes, then the zoom to fit makes more sense, was setting it high without that and loosing the taskbar.
[16:24:38] <pyzozord> oh I see, yeah that makes sense
[16:25:00] <GeDaMo> mov $60, %rax would be one byte longer because it need a prefix to access the 64 bit version of the register
[16:25:16] <mrig> now only need to figure out why ctrl, alt g does not work when in full screen mode.
[16:25:34] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[16:25:41] <GeDaMo> Huh, it's actually two bytes longer
[16:25:53] <pyzozord> mrig: vm captures all input
[16:25:55] <GeDaMo> b8 3c 00 00 00 ¬† ¬† ¬† ¬† ¬†mov ¬† ¬†eax,0x3c
[16:25:55] <GeDaMo> 48 c7 c0 3c 00 00 00 ¬† ¬†mov ¬† ¬†rax,0x3c
[16:26:23] <GeDaMo> https://defuse.ca/online-x86-assembler.htm
[16:26:24] <bayaz> Title: Online x86 and x64 Intel Instruction Assembler 
[16:27:12] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[16:27:39] <pyzozord> oh the instruction would be longer
[16:28:52] <pyzozord> I guess that's important when optimizing the instruction cache, but that's too much for me to worry about
[16:28:53] *** Joins: jokoon (~eio@2a01:e0a:542:e160:6dda:653e:fc2:5a67)
[16:29:07] <GeDaMo> Ha, even shorter
[16:29:07] <GeDaMo> 31 c0 ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† xor ¬† ¬†eax,eax
[16:29:07] <GeDaMo> b0 3c ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† mov ¬† ¬†al,0x3c
[16:29:30] <pyzozord> heh
[16:30:44] <pyzozord> I half-learned assembly about three times in my life, and forgot most of it each time. So I'm kind of not very confident in these subjects
[16:30:45] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[16:30:57] <beaky> yes the big list is in the manpages chapter 2 'syscalls' https://man7.org/linux/man-pages/man2/syscalls.2.html and the abi itself in 'syscall' https://man7.org/linux/man-pages/man2/syscall.2.html
[16:30:59] <bayaz> Title: syscalls(2) - Linux manual page 
[16:30:59] <bayaz> Title: syscall(2) - Linux manual page 
[16:31:17] <beaky> and each syscall has its own manpage https://man7.org/linux/man-pages/dir_section_2.html
[16:31:19] <bayaz> Title: Linux manual pages: section 2 
[16:32:25] <pyzozord> oh nice "man syscall" actually has some assembly related info
[16:32:35] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[16:32:44] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[16:32:57] *** Quits: mishugana (~mishugana@user/mishugana) (Quit: leaving)
[16:33:21] <pyzozord> but the most imporatant thing is what is the number of a syscall and man 2 exit doesn't tell me what is the number of this syscall
[16:33:58] <GeDaMo> man 2 exit is the glibc wrapper for the syscall, not the syscall itself
[16:34:13] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:34:52] *** Joins: Hax0r (~Hax0r@87.101.192.39)
[16:36:17] <pyzozord> yes looks that way, looks like manpages are not interested in providing information about anything else than c
[16:36:47] *** Joins: pulse (~pulse@user/pulse)
[16:36:54] <beaky> yes to see the actual number there's a header file for it
[16:37:04] *** Quits: jokoon (~eio@2a01:e0a:542:e160:6dda:653e:fc2:5a67) (Read error: Connection reset by peer)
[16:37:55] <pyzozord> ok well if the only official documentation is to read the header files then https://blog.rchapman.org/posts/Linux_System_Call_Table_for_x86_64/ already grepped them all for me
[16:37:55] <bayaz> Title: Linux System Call Table for x86 64 ¬∑ Ryan A. Chapman 
[16:38:03] *** Joins: jessemacdougall (~jesusJess@2604:3d08:5b7f:f3ec:a86e:5989:7d61:7e1b)
[16:38:33] *** Quits: Hax0r (~Hax0r@87.101.192.39) (Client Quit)
[16:38:57] *** Joins: LucaTM (~LucaTM@user/lucatm)
[16:39:01] <GeDaMo> https://github.com/torvalds/linux/blob/master/arch/x86/entry/syscalls/syscall_64.tbl
[16:39:02] <bayaz> Title: linux/syscall_64.tbl at master ¬∑ torvalds/linux 
[16:39:34] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[16:39:50] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:40:00] <beaky> yes just download the linux source code and look at that file
[16:40:17] <beaky> it is a highly accessible format
[16:41:00] <pyzozord> nice, thanks
[16:41:49] <mrig> cool ctrl alt f puts the screen back again :)
[16:43:03] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[16:43:10] <mrig> oh how strange to be looking at how to do things on windows again!
[16:43:42] <pyzozord> I had the same feeling
[16:44:34] <jessemacdougall> on this form when user selects country the mobile  field add the area code which is good.  however the user is able to delete the area code in the field. How do I set the field so that the user is unable to edit the area code?
[16:44:37] <jessemacdougall> https://thepowerhousemethod.org/
[16:44:38] <bayaz> Title: The Powerhouse Method 
[16:45:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[16:45:45] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:45:49] <pyzozord> jessemacdougall: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-readonly
[16:45:50] <bayaz> Title: <input>: The Input (Form Input) element - HTML: HyperText Markup Language | MDN 
[16:47:53] <beaky> what will programming be like in 2020 the future http://lambda-the-ultimate.org/node/4655
[16:48:08] <jessemacdougall> pyzozord, merci
[16:49:23] *** Quits: cm007magnum (~Rheanna@101.91.240.201) (Remote host closed the connection)
[16:49:40] *** Joins: mmfood (~mmfood@45.135.187.94)
[16:50:25] *** Joins: cm007magnum (~Rheanna@101.91.240.201)
[16:53:20] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[16:53:47] <beaky> what is the future of linux the year of the programmer's desktop https://blogs.gnome.org/uraeus/2021/09/24/fedora-workstation-our-vision-for-linux-desktop/
[16:53:49] <bayaz> Title: Fedora Workstation: Our Vision for Linux Desktop | Christian F.K. Schaller 
[16:55:31] <beaky> wish i used fedora but everytime i install it i end up with gnome and then gnome runs very slow so then i uninstall it and reinstall archlinux or gentoo
[16:55:45] <Donitz> uff
[16:56:10] <Donitz> debian + xfce or lxqt
[16:56:20] <Donitz> I can't stand the modern linus DEs
[16:56:21] <beaky> yes debian's package manager is much better than fedoras anyway
[16:56:23] <Donitz> linux*
[16:56:26] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[16:56:52] <Donitz> I used to like archlinux before they got rid of the automated installer
[16:56:57] <Donitz> having to do things manually sucks
[16:57:51] <beaky> i thought it was automatic just pacstrap
[16:58:46] *** Quits: cm007magnum (~Rheanna@101.91.240.201) (Remote host closed the connection)
[16:59:28] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 265 seconds)
[17:00:26] *** Joins: Crescendo (~Crescendo@user/crescendo)
[17:01:30] *** Joins: cm007magnum (~Rheanna@101.91.192.124)
[17:01:35] *** Quits: Jigsy (~Jigsy@user/jigsy) (Ping timeout: 246 seconds)
[17:02:27] *** Joins: Psybur (~Psybur@mobile-166-170-32-197.mycingular.net)
[17:02:31] *** Joins: Macuser (~Macuser@216.30.159.201)
[17:02:58] <jessemacdougall> pyzozord, I added in the read only attribute and it works.  Now the user is unable to enter their phone number though.  So I need the area code only to not be edited by user and the user enter mobile in the same field. Here is what I got so far "Mobile <br> <input type="text" id="phone" name="phone" oninput="this.value = this.value.replace(/[^0-9+ ]/g, '').replace(/(\..*)\./g, '$1');" requi    red maxlength="20" 
[17:02:59] <jessemacdougall> placeholder="Enter Mobile" style="color: black"; value="" readonly="readonly"><br><br>
[17:02:59] <jessemacdougall> "
[17:03:31] <victor> hello friends, I'm a bit lost at how I can search for a solution to my problem, namely what it's called. Let's say I have a value that can go between 0 and 127, and I want to "resolve" this value to 0.0 up to 1.0, what would this be called? 127 should be 1.0, 63 would end up being 0.5 and so on
[17:03:52] <pyzozord> jessemacdougall: you need to add and remove the readonly attribute dynamically in javascript
[17:04:21] <jessemacdougall> pyzozord ah okay
[17:04:32] *** Quits: cm007magnum (~Rheanna@101.91.192.124) (Remote host closed the connection)
[17:04:37] *** Joins: node1 (~node1@user/node1)
[17:04:56] *** Joins: cm007magnum (~Rheanna@101.91.192.124)
[17:05:07] *** Quits: cm007magnum (~Rheanna@101.91.192.124) (Read error: Connection reset by peer)
[17:05:58] *** Joins: cm007magnum (~Rheanna@101.91.192.124)
[17:06:33] <pyzozord> victor: hmm good question
[17:06:33] *** Joins: rexar89 (~alexi5@208.83.82.234)
[17:06:49] *** Joins: Jigsy (~Jigsy@user/jigsy)
[17:07:28] <pyzozord> the words that are not exactly it but come to my mind are clamp, scale, cast to float, interpolation
[17:08:09] <pyzozord> clamp is probably incorrect though, clamp just cuts off values nad you are more scalinig
[17:08:18] <pyzozord> I'm sure there is a mathematical term for what you are doing
[17:09:44] <victor> thanks pyzozord, yeah, clamping but within a scale sounds about right, but I'm also struggling to find the right search terms to find some appropriate solution
[17:10:58] <pyzozord> I'd ask in ##math
[17:11:05] *** Quits: cm007magnum (~Rheanna@101.91.192.124) (Remote host closed the connection)
[17:11:38] <jacks2> victor, ratio
[17:12:25] *** Joins: cm007magnum (~Rheanna@101.91.192.124)
[17:15:01] *** Quits: cm007magnum (~Rheanna@101.91.192.124) (Remote host closed the connection)
[17:16:09] *** Joins: cm007magnum (~Rheanna@101.91.192.124)
[17:18:24] <user51> pyzozord: god help us, he said the M word
[17:20:10] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Remote host closed the connection)
[17:20:21] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[17:21:18] <pyzozord> I knew someone would comment on that :P
[17:23:14] <mercenary> That is normal. Or normalized.
[17:23:15] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[17:23:29] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Remote host closed the connection)
[17:23:35] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[17:23:42] <arahael> user51: Monad?
[17:24:26] *** Joins: brabrax (~brabrax@user/brabrax)
[17:25:07] <merijn> arahael: Maths, I think
[17:25:09] <extern> GeDaMo: SnR has dropped quiet substancially since i left huh .. 
[17:25:35] <arahael> merijn: These are sad times :)
[17:26:24] * arahael returns to his slumber.
[17:29:07] <user51> arahael: math
[17:29:55] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[17:30:01] <oldlaptop> here you are, in a channel dedicated to "the most difficult branch of applied mathematics"
[17:32:01] *** Joins: node1 (~node1@user/node1)
[17:33:03] *** Joins: dan01 (~dan01@2a02:2f09:3306:1d00:85c4:e099:584e:633)
[17:33:49] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[17:34:11] *** Joins: Powerhouse6666 (~Powerhous@security.orcacomputers.com)
[17:37:10] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Remote host closed the connection)
[17:37:48] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[17:38:26] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[17:38:28] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 252 seconds)
[17:38:28] <diophantoz> is computer science applied math?
[17:38:58] <InPhase> No more than it's applied physics.
[17:39:05] <diophantoz> i agree
[17:39:16] <diophantoz> but you apply math
[17:39:27] <kobalt> Science for computers
[17:39:40] <diophantoz> or you apply logics and math is applied logics
[17:39:58] <diophantoz> he he heeheh e
[17:40:22] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[17:40:52] <kobalt> what is the criteria that makes a tournament to have a Hamiltonian cycle
[17:40:53] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[17:41:05] <TJ-> usually its misapplied illogical math
[17:41:29] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[17:41:35] <InPhase> diophantoz: The key thing is, what is the important content to a field?  Often fields operate at different layers of abstraction, and their key content is misrepresented when viewed as just a pile of things at the other layer, as the more abstract structure is what it's all about.
[17:41:56] <InPhase> diophantoz: Biology, for example, is not just chemistry.
[17:42:27] <kobalt> Biology is Turing complete.
[17:42:34] <InPhase> Nor is biology particle physics, although all of biology is in principle combinations of particle interactions.
[17:43:11] <merijn> *Good* computer science degrees are (for at east 50%) applied math
[17:43:27] <merijn> There's lots of terrible CS programmes out there that are basically glorified programming bootcamps
[17:43:57] <InPhase> merijn: That sounds like two extremes.
[17:43:57] <merijn> Well, depending on whether you consider logic a math field, anyway :p
[17:44:32] <InPhase> merijn: Is a course on Networking principles applied math or a glorified programming bootcamp?  ;)
[17:44:36] <merijn> Which a lot of logicians and mathematicians might not do, but in my experience 100% of theoretical computer scientists do
[17:45:00] <merijn> InPhase: Well, I said "for at least 50%", not "all of it" :p
[17:45:28] <merijn> InPhase: The remainder is networking and electrical engineering 101 :p
[17:45:31] <kobalt> many people think that CS means how to operate computers.
[17:45:40] <pyzozord> I guess CS divides into theoretical and applied right?
[17:45:52] <merijn> pyzozord: Yes, but also no
[17:46:05] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[17:46:36] <merijn> As someone whose on the "applied" side of things, I think 90% of the people doing "applied" computer science are really doing applied computer "science"
[17:47:12] *** Joins: quartz (~quartz@user/quartz)
[17:47:17] <merijn> The quality of empirical computer science is pretty terrible and probably best thought of "people fucking around with very specific or very big computers" than science
[17:47:58] <pyzozord> I mean when I throw rocks I don't "do physics". Also I don't think when I program I don't "do computer science"
[17:48:25] <pyzozord> but if I computed precisely where and how to throw the rock and then did it...
[17:48:42] <pyzozord> or if invented new ways of throwing rocks
[17:48:44] *** Quits: cm007magnum (~Rheanna@101.91.192.124) (Remote host closed the connection)
[17:48:46] <merijn> pyzozord: Sure, but the lack of CS background is, in my opinion, holding back lots of programmers :)
[17:49:22] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:49:31] <InPhase> merijn: I expect it will be a required background eventually.  Only growth-market realities have stopped this from happening so far.
[17:49:39] <kobalt> I won't consider a person to have CS degree if they don't have their own programming language.
[17:49:59] <merijn> People like to claim that "programming is changing so fast, you gotta keep learning". But in my experience, most of the useful stuff I learned in my degrees was 40-50 years old when I learned it and not gonna stop being useful anytime soon
[17:50:00] <pyzozord> yeah of course, I can admit myself. I'm not sure if I was actually stying computer science, but I've been dablbing a big in fundamental data structures and algorithm design, and just a bit in theory of computation and I think I am better programmer for it
[17:50:01] <InPhase> kobalt: COBAL-t?
[17:50:50] <merijn> kobalt: I did (and TAed) the compiler construction course for a few years and I think it's the single best, most educational course we had in our bachelor :)
[17:51:07] *** Joins: cm007magnum (~Rheanna@101.89.154.192)
[17:51:13] <pyzozord> the changing fast thing is very superficial, that's just familiarity with whatever latest fade is
[17:51:27] <merijn> Any CS degree that doesn't involve building a compiler is not worth whatever you paid for that degree :p
[17:51:30] <Thedarkb-Desktop> I wanted to do Applied Computing but pussied out due to fear of maths.
[17:51:52] <InPhase> merijn: Well tools and libraries change fast, and languages sometimes innovate quickly, but CS fundamentals and principles which should make up the most of a degree appear to be solid for very many decades.
[17:51:55] <merijn> Thedarkb-Desktop: tbh, most people aren't afraid of maths. They're afraid of numerical theory :)
[17:52:09] <merijn> and/or numerical analysis
[17:52:14] <merijn> And I don't blame them :p
[17:52:19] <merijn> Screw that shit
[17:52:29] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[17:52:40] <merijn> algebras, logics and proofs are nice, though and much more useful for programming
[17:52:41] <pyzozord> meh I am not afraid of learning and applying any rules
[17:52:51] <Thedarkb-Desktop> I ended up doing a different course at the same university and was told by the tutor that I would've been able to handle Applied, and then regretted avoiding it.
[17:52:53] <pyzozord> what bothers me is density/complexity of these rules and ideas
[17:53:27] <pyzozord> but what really bothers me is the puzzle solving ability, which seems the most core skill to mathematics, eve more than ability to hold a lot in your short term memory
[17:53:46] *** Quits: Thedarkb-Desktop (~beno@2001:bb6:b403:e042:3055:b1fb:e823:43e1) (Remote host closed the connection)
[17:54:01] *** Quits: Powerhouse6666 (~Powerhous@security.orcacomputers.com) (Remote host closed the connection)
[17:54:41] <merijn> pyzozord: What bothers you about it?
[17:54:42] <pyzozord> in some sense I don't believe there exists difficult ideas, just someone learning something too early, or a poorly concived ideas
[17:54:59] <pyzozord> merijn: I just seem to be very bad at it. Very bad at puzzle solving
[17:55:14] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[17:56:17] <pyzozord> yeah, I think if it's difficult to grasp some idea there are only two possible options: a) you are missing some more fundamental ideas b) this idea is just poor
[17:56:33] <pyzozord> after all it's all been invented by humans for humans
[17:56:34] <kobalt> many theorems and their proofs in Theory of 
[17:56:48] <kobalt> computation are non intuitive
[17:56:53] <merijn> pyzozord: It's a matter of practice
[17:56:54] <pyzozord> and we aren't all that different as much as some would love to believe
[17:57:05] *** Joins: tane (~tane@dslb-002-201-234-068.002.201.pools.vodafone-ip.de)
[17:57:07] <merijn> pyzozord: Proving is a skill and you can learn and practice it
[17:57:26] <tane> zzz, thanks for recommending feh yesterday, worked out well!
[17:57:41] <merijn> pyzozord: I'm pretty sure I mentioned Software Foundations to you in the past, which focusses *a lot* on how to prove things and has lots of exercises for it too
[17:58:25] <kobalt> I am quite scared of Number 
[17:58:26] <pyzozord> merijn: you probably did. I've experienced it myself after trying to read CLRS without any preparation
[17:58:29] <kobalt> Theory
[17:58:57] <InPhase> pyzozord: While "short term memory" can be a useful shorthand conversational term, in reality there appears to be no such thing as a short term memory.  Instead there's a forgetting curve for remembered things having a timescale on which things become more difficult to access again, and things are kept more active by replay, or continually pinging them with a bit of attention.
[17:59:16] <merijn> pyzozord: https://softwarefoundations.cis.upenn.edu/
[17:59:18] <bayaz> Title: Software Foundations 
[17:59:22] *** Quits: hexingb (~hexingb@103.37.140.24) (Ping timeout: 260 seconds)
[17:59:30] *** Quits: MarcoFe (~marcofe@93-36-161-108.ip60.fastwebnet.it) (Quit: Konversation terminated!)
[17:59:46] *** Joins: hexingb (~hexingb@2409:8902:7ba2:e6d5:3cae:3a8b:d3f:90b8)
[18:00:01] <pyzozord> I've realized (I kinda always knew in some way) that I am missing a very many ideas, I'm missing a whole cake of ideas (because cakes have layers). So I need to start with fundamentals, learn and build intuitions for such simple things as division or gcd etc
[18:00:09] <InPhase> pyzozord: The difference is sometimes important when you're brainstorming a program design, or debugging something complicated.  Rather than trying to hold 5-7 items in your head, what you should do is mentally load up the related pieces, and keep mentally cycling through their relevant relationships to the problem to keep it active while you reason it out.
[18:00:27] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[18:00:36] <pyzozord> and math will only start making sense to me with robust network of intuitions. I need to imagine and understand things, I can't just opreate on symbols
[18:01:04] <InPhase> pyzozord: And it's sort of hierarchical, so you can load up some complicated details under an umbrella concept, and keep the whole concept active by semantic association, greatly exceeding the notion of 5-7 items.
[18:01:30] <user51> so you're doing bfs over math?
[18:01:36] <pulse> pyzozord, that's why geometrical intuition is important
[18:02:47] <pyzozord> I've been actually practicing how to imagine an abitrary number of dimmentions
[18:03:04] <pyzozord> i imagine the first three as physical dimmentions, fourth as time
[18:03:06] *** Quits: xiongxin (~quassel@113.116.32.187) (Ping timeout: 260 seconds)
[18:03:25] <pyzozord> after that I start imagining potentionmeters
[18:03:40] <pyzozord> nobs
[18:03:42] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 250 seconds)
[18:03:46] <pyzozord> knobs I guess
[18:03:58] *** Joins: xiongxin (~quassel@113.116.34.58)
[18:04:02] <user51> it's not hard. just think about n-dimensional space and set n = 24
[18:04:27] <pyzozord> that's more of a symbolic intuition
[18:04:39] <user51> https://softwareengineering.stackexchange.com/questions/136987/what-does-mathematics-have-to-do-with-programming/137075#137075
[18:04:40] <bayaz> Title: What does mathematics have to do with programming? 
[18:05:42] <pyzozord> of course one can't just survive on "real life" intuitions, at some point I'll must support myself with more levels of conceptual abstraction
[18:05:53] <pyzozord> but I must builds all those mental images myself
[18:05:58] <pyzozord> that takes time and thinking
[18:06:20] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b0a7:81a6:ed08:859a)
[18:06:53] <pyzozord> at least that's my hope "good math is not hard, it just requires time. Bad math is hard, and also worthless"
[18:07:22] <pyzozord> except for puzzle solving
[18:07:32] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[18:07:34] <user51> which puzzles
[18:07:49] <pyzozord> People keep telling me I can get better at it, learn it. I hope that's true
[18:07:49] <wwilly> Hi, has anybody attempted to use a binary tree (splay in my case) over an array? The idea is to instead of malloc/free for each insertion/deletion, have a fixed array. Instead of manipulating pointer, manipulate array indices. If there is no space for new node, realloc the array. Does it make sense memory fragmentation wise, and performance? My current splay tree works well, but it's "slow". I'm curious if the 
[18:07:49] <wwilly> memory fragmentation is playing here.
[18:08:20] <GeDaMo> wwilly: https://en.wikipedia.org/wiki/Heap_(data_structure) ?
[18:08:21] <bayaz> Title: Heap (data structure) - Wikipedia 
[18:09:19] *** Joins: sidy (~sidy@ip174-74-91-218.om.om.cox.net)
[18:09:33] *** Quits: X-Scale (~ARM@83.223.233.176) (Ping timeout: 265 seconds)
[18:09:43] *** sidy is now known as Guest6949
[18:10:13] *** X-Scale` is now known as X-Scale
[18:11:06] <pyzozord> but I don't subscribe to the future where cs degree is required to do programming. I think that sounds elitists and really not fun. I subscribe to the future where programming becomes as universal as reading and writting. Not everone is a writer and can write Macbeth, but everyone can write.
[18:11:29] *** Quits: nrl^ (~nrl@68.101.50.106) (Ping timeout: 265 seconds)
[18:11:32] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b0a7:81a6:ed08:859a) (Ping timeout: 268 seconds)
[18:12:05] <pyzozord> And some people can write amazing things for what they need. For example tax forms. Or journals. People with different skills use writing for different purposes.
[18:13:17] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) ()
[18:13:33] <novns> Macbeth is a lie
[18:13:40] <novns> anyone can lie
[18:14:40] <merijn> pyzozord: I don't think CS degrees are required for programming and I think programming should be taught much more widely
[18:15:04] <merijn> pyzozord: And I agree with your "not everyone is a writer, but everyone can write" philosophy
[18:15:14] <pulse> most people can't program
[18:15:30] <pulse> you can try teaching them but they will simply not get it
[18:15:31] <novns> CS degrees are about specific applications of programming, that are very useful if you do this things
[18:15:32] <merijn> But, supposedly people who are programmers or "software engineers" are the actual writers in that comparison
[18:15:35] <merijn> pulse: They should be able to
[18:15:38] <pyzozord> I hope that's just because computers are a very recent thing
[18:15:49] <pulse> in my experience the vast majority of population simply can't program
[18:15:50] *** Quits: unmanbearpig (~unmanbear@user/unmanbearpig) (Ping timeout: 265 seconds)
[18:15:53] <pulse> be it genetics or what have you
[18:16:00] <pulse> even most programmers can't program tbh
[18:16:02] <novns> but not everyone have to implement parsers or invent new binary trees
[18:16:26] <novns> some people ar ok with simpler tasks
[18:16:30] <novns> *are
[18:16:35] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:3d44:b4b4:9588:c922)
[18:16:53] <merijn> pyzozord: The theoretical knowledge of the average programmer is VERY subpar, tbh. Which wouldn't be such a problem if there weren't such a weirdly common anti-intellectual mentality in many programming communities
[18:17:07] *** Joins: unmanbearpig (~unmanbear@45.76.95.141)
[18:17:17] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:17:18] <pyzozord> merijn: I don't subscribe to the ani-intellectual mentailit for sure
[18:17:19] <novns> CS degree is nice if you love to write compilers, kernels or system libraries
[18:17:45] <mrig> Talking about being scared of numbers, the amount of space this instillation is requiring is pretty frightening; I am going to have to free some up!
[18:17:51] <merijn> novns: Implementing parsers is fairly easy, though. And the fact that a lot of people don't know is really just an example of how terrible programming education is, atm
[18:17:54] <novns> but you don't need one to code some worpress plugins for money
[18:18:07] <novns> *wordpress
[18:19:09] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[18:19:13] *** Joins: Null_A (~null_a@2601:645:8700:2290:91f2:4a69:be9c:a77e)
[18:19:16] <mrig> ah that is a relief, with fewer options clicked it is a far lighter install!
[18:19:30] <pyzozord> merijn: and I think I have to agree that the state of our industry is chronic lack of education, and I am one of the good examples for that sadly
[18:19:33] *** Quits: freakazoid343 (~matt@2603-9000-cf0f-80e3-3d44-b4b4-9588-c922.inf6.spectrum.com) (Ping timeout: 268 seconds)
[18:19:50] <novns> you don't need industry to educate yourself
[18:19:55] <merijn> novns: I consider the fact that it is hard to teach people programming a failing of both our programming tooling and education systems :)
[18:20:03] <novns> it's all yours
[18:20:12] <novns> get books, read them, code a lot
[18:20:44] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[18:21:06] <novns> but never watch youtube tutorials, they make you dumb
[18:21:07] <mrig> not so sure that books are the answer, bookish knowledge aint all its cracked up to be.
[18:21:15] <merijn> Just because it is *possible* to teach yourself, doesn't mean that it is good that educational materials are bad
[18:21:30] <novns> merijn, what materials are bad?
[18:21:31] <user51> ask not what your programming language can do for you
[18:21:34] <merijn> The vast majority of people aren't that self-motivated
[18:21:40] <merijn> novns: Half of university CS degrees >.>
[18:21:41] <novns> merijn, Knuth books are super good
[18:21:49] <mrig> novns: I just found a superb series of tutorials on youtube and far prefer those to books, does that make me dumb?
[18:21:58] <mrig> a dull edge perhaps?
[18:22:05] <merijn> Knuth books almost require a degree to be able to read, so that's not gonna help anyone who doesn't know anything
[18:22:14] <user51> merijn: > weren't such a weirdly common anti-intellectual mentality in many programming communities
[18:22:26] <user51> never saw that, any examples?
[18:22:28] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 252 seconds)
[18:22:31] <mrig> doing is the best way to learn, and sometime it is nice to have someone show you the ropes.
[18:22:35] <novns> mrig, tutorials are very slow and they often tell you incorrect things
[18:23:18] <mrig> novns: this guy has been coding for years and years, and it is very thorough, speed coding rubbish is arguable the dumb thing in this age.
[18:23:18] <novns> you can watch 45 minutes of video or read 30 seconds for the same result
[18:23:30] <mrig> novns: I cant.
[18:23:36] <mrig> does that make me dumb?
[18:23:40] <merijn> user51: You should try linking someone a paper from a CS conference to answer their questions, see also all the hate on Haskell because it uses math names. Or in general suggest tools/approaches that use more theoretical CS knowledge
[18:23:53] <mrig> I can listen and visualise at the same time, I cant read and visualise.
[18:24:07] <mrig> I am a very good listener.
[18:24:18] <merijn> user51: The internet is full with hot takes that "reverse a binary tree" is both 1) impossibly hard and 2) useless as an interview question, because no one ever has to do that while programming
[18:24:19] <mrig> reading is a wast of visual cortex.
[18:24:21] <user51> mrig: its a skill.. do it while rubber ducking
[18:24:37] <novns> mrig, because they tell very basic things like "here we use the plus sign and it looks like a cross, please subscribe and hit the like button, and this video is sponsored by... 30 minutes of ads"
[18:24:40] *** Quits: password2 (~password@user/password2) (Ping timeout: 252 seconds)
[18:24:56] <user51> merijn: i'll admit that i dont have a lot of theoretical knowledge. dunno anything about haskell.
[18:24:59] <mrig> novns: this is coding a full platform abstraction layer and renderer.
[18:25:06] <mrig> for ¬£D
[18:25:08] <mrig> 3D
[18:25:10] <novns> mrig, and you never learn much from tutorials
[18:25:15] <mrig> 3D is easy thougs
[18:25:17] <mrig> though
[18:25:26] <mrig> novns: right oh.
[18:25:29] <user51> merijn: what does reverse a binary tree mean though?
[18:25:32] <merijn> user51: The thing about CS theory is that "a little goes a long way" :)
[18:25:33] <user51> left is rigth?
[18:25:46] <merijn> user51: That's the usual interpretation, yeah
[18:25:56] <GeDaMo> I think the meme is "invert a binary tree" and I don't know what that means :P
[18:26:07] <mrig> left right left right, always marching of to battle with some standard. :D
[18:26:14] <user51> invent a binary tree might aslo be a good question :P
[18:26:27] <wwilly> GeDaMo, ok thanks, but do you think that the fragmentation is killing the perf in my case? my node is 32bytes: on x86_64: 2 pointers, and two unsigned long long,    my machine is 64bytes cache line size. instead of using malloc/free (on linux glibc), managing this by a dense array would be better?
[18:26:28] <merijn> GeDaMo: "put upside down or in the opposite position, order, or arrangement." <- seems fairly obvious? :p
[18:26:29] *** Quits: extern (~archer@141.226.60.187) (Quit: habamax magic it is)
[18:26:33] <novns> mrig, because you when you have some question you can easily reread the text, but you cannot find the place where this one was discussed in a video
[18:26:42] <Brumaire> why use binary trees when you can use b-trees :p
[18:26:52] <mrig> novns: you dont seem to understand that not all people work in the same way.
[18:27:00] <mrig> you are telling me what it is like for you.
[18:27:14] <GeDaMo> wwilly: pointer chasing can definitely affect performance
[18:27:18] <merijn> Brumaire: because B trees are only a win for "paged accesses" like disk
[18:27:22] <mrig> simple as that, the assumption that this is thus the same for everyone else is a fallacy.
[18:27:28] <user51> merijn: wouldn't inverting means that it has some direction? so invert a binary tree is a bit of a weird question
[18:27:35] <novns> mrig, there are poor and easy way, and good and hard way
[18:27:37] <novns> choose one
[18:27:41] <mrig> It is right for me and I am doing well, there for it is the best method.
[18:27:43] <novns> videos are easy and ppor
[18:27:49] <novns> *poor
[18:27:54] <mrig> novns: nonsense.
[18:28:01] <novns> dixi
[18:28:12] <mrig> Obviously having a mentor present is better, but it is a next best thing.
[18:28:16] <merijn> wwilly: Dense arrays > anything pointer based when it comes to performance :p
[18:28:23] <novns> (it means I said what I want and I'm finished)
[18:28:25] *** Joins: paravida (~myChateau@23.31.187.1)
[18:28:57] <pulse> videos are complementary at best
[18:28:59] <merijn> wwilly: Flattening a (static) tree into an array is fairly simple, though
[18:29:33] <user51> merijn: does a binary heap suffice? but maybe there's not much of a practical different.
[18:29:34] <novns> mrig, there are rare exceptions of really education channels, but they are so rare
[18:29:42] <novns> *really good
[18:29:46] <mrig> the bias of cultures reading over aural preference is staggering.
[18:30:01] <pulse> they're complementary. if you watch 3blue1brown without prior math knowledge, you won't understand anything
[18:30:02] <wwilly> merijn, my array is dynamic, loads of insert/delete, and I don't know the size when my program progress
[18:30:03] <mrig> Oh sure it is hard to find good material, that is another issue.
[18:30:10] <merijn> wwilly: Also, note that malloc is generally *slow* since it generally uses mutexes/locks
[18:30:10] <pulse> if you watch them after you've put in theoretical study, you'll benefit from it
[18:30:17] <mrig> the internet is a dumping ground for rubbish mostly.
[18:30:28] <Brumaire> pulse: I learned linear algebra with 3b1b
[18:30:28] <novns> https://www.youtube.com/channel/UCKaYxkHrmsQePZFpzF9b7sQ
[18:30:35] <mrig> searching for good aural material is very difficult.
[18:30:36] <novns> this one is nice
[18:30:43] <pulse> Brumaire, no, you complemented theoretical knowledge you already had with it :p
[18:30:51] <mrig> audio visual in this case rather.
[18:30:53] <novns> https://www.youtube.com/c/Mathologer
[18:30:57] <novns> and this one
[18:30:58] <GeDaMo> wwilly: you can allocate in big blocks instead of one node at a time
[18:31:23] <novns> https://www.youtube.com/c/3blue1brown
[18:31:23] <merijn> That helps too, yeah
[18:31:27] <novns> and this one
[18:31:37] *** Joins: _inky (~inky_@5.77.132.34)
[18:31:40] <mrig> But there is a massive cultural bias towards certain psychological phenotype at the moment, it is scarily the case.
[18:31:41] <pulse> they're all nice complementary material
[18:31:47] <pulse> you _will not_ learn from them alone
[18:31:50] *** Quits: SmokenatorZ6 (~Smokenato@189-69-249-141.dial-up.telesp.net.br) (Quit: Screw you guys, im going home)
[18:31:50] <merijn> Write your own alloator that allocs big chunks and use a simple bump-pointer allocator in your own code
[18:31:51] <novns> and I cannot find anything else
[18:32:09] <novns> so we have three nice channels
[18:32:21] <novns> and 300 thousands of bad tutorials
[18:32:23] <merijn> wwilly: How many nodes are we talking? Ballpark
[18:32:50] <pulse> novns, numberphile, computerphile, sixty symbols, veritasium, stanford lectures...
[18:33:05] <merijn> Sounds like a good use case to implement your own "copy & collect" GC :p
[18:33:08] <user51> merijn: since i dont have any theoretical cs knowledge, give me a problem i'll fail at
[18:33:28] <novns> pulse, and you can get the same education much faster by reading books
[18:33:29] <user51> pulse: what's the next thing if you don't have videos
[18:33:31] <pyzozord> mit ocw
[18:33:39] <user51> the videos felt entertaining but not really educational
[18:34:00] <pulse> novns, i agree for the most part, they're all complementary. first you study, then you complement with various video material
[18:34:10] <pulse> you can't learn theoretical physics by just watching stanford lectures
[18:34:15] <merijn> user51: If you want to dive into theoretical CS foundations, the Software Foundations book series I linked earlier are good (and free!)
[18:34:17] <mrig> makes me chuckle when people fuss about issues such as gender when there are such gaping discrepancies in other areas.
[18:34:17] <pulse> your mind will wander and you'll learn nothing
[18:34:23] <pyzozord> you can't learn anything just by reading anything
[18:34:38] <pulse> a combination of reading and applying works
[18:34:41] <pyzozord> need to practice, think, explore, ask questions
[18:34:44] <mrig> The thing is one must be conscious of them, and few are. 
[18:34:47] <user51> merijn: what's the next best thing?
[18:34:48] <novns> pyzozord, practice is important
[18:34:54] <user51> if that's number 1, what's number 2?
[18:34:56] <pyzozord> in other words build mental model of the thing you are learning
[18:35:00] *** Joins: SmokenatorZ6 (~Smokenato@201-1-180-170.dsl.telesp.net.br)
[18:35:10] <pyzozord> it needs to stick, connect to other things you know
[18:35:32] <pulse> for me the most helpful thing is to build detailed notes
[18:35:37] <tane> pulse, +1
[18:35:46] <wwilly> GeDaMo, merijn, basically I'm computing the reuse distance of memory accesses: using hash map to check if memory@ has alread be seen, if so, use a tree to count number of nodes between two key, which is the logical tick of the memory@.     for a "tiny" run, it's about 126370652 diff addresses. the original code is https://bitbucket.org/niuqingpeng/file_parda/src/master/,   I already optimised the code use stl hash 
[18:35:46] <wwilly> map instead of glib hashmap, improving the perf by 3x, but I'm thinking about changing the splay tree as well.
[18:35:46] <tane> writing is important, reproduction, in one's own words
[18:35:47] <bayaz> Title: Bitbucket 
[18:36:14] <pyzozord> pulse: I always sucked at making notes :(
[18:36:27] <pyzozord> allthough I admit I made notes on sorting algorithms and I keep referring to them
[18:36:46] <pyzozord> i forget things, but it's a different kind of forget
[18:36:53] *** Joins: LiftLeft (~LiftLeft@172.98.92.24)
[18:37:07] <pulse> pyzozord, make it an artform https://i.redd.it/5r5ihq1lmvm41.jpg
[18:37:08] <bayaz> Type: image/jpeg Size: 1.1 MB 
[18:37:11] *** Quits: hexingb (~hexingb@2409:8902:7ba2:e6d5:3cae:3a8b:d3f:90b8) (Read error: Connection reset by peer)
[18:37:21] <tane> pyzozord, do you know the zettelkasten method? :) 
[18:37:32] *** Joins: hexingb (~hexingb@223.104.227.175)
[18:37:40] <merijn> 126,000,000 *different* addresses? How'd you ever fit that inside a hashmap? :p
[18:37:44] *** Quits: hexingb (~hexingb@223.104.227.175) (Read error: Connection reset by peer)
[18:37:45] <pulse> i've noticed the more beautiful and caring i am about notes, the better i internalize knowledge
[18:37:54] <pulse> it's an interesting phenomena
[18:38:04] *** Joins: hexingb (~hexingb@2409:8902:7ba2:e6d5:3cae:3a8b:d3f:90b8)
[18:38:09] <pulse> if you rush with your notes and make them ugly you won't have the motivation to look at them
[18:38:16] <pulse> but if you make them 10/10 beautiful, you'll look at them for aesthetics alone
[18:38:24] <pyzozord> pulse: that looks amaizing, but it doesn't look like notes to me
[18:38:25] <pulse> and in the meanwhile your brain will process the information contained
[18:38:37] <tane> it's a sketch-note
[18:38:42] <novns> pulse, and you get old before you make anything useful :)
[18:38:45] *** Quits: cm007magnum (~Rheanna@101.89.154.192) (Remote host closed the connection)
[18:38:53] <pulse> novns, you don't have to go overboard
[18:38:58] <pulse> just use colors, sketch stuff, things of that nature
[18:38:58] *** Quits: mmfood (~mmfood@45.135.187.94) (Ping timeout: 252 seconds)
[18:39:11] <pulse> i mean it works for me because i'm a strong visual learner
[18:39:14] <user51> pulse: sounds like a lot of effort
[18:39:15] <pulse> your mileage may vary
[18:39:20] <user51> didnt they make latex for that
[18:39:24] <pulse> user51, learning is a lot of effort
[18:39:27] <user51> also drinking near your notes? fml
[18:39:38] <pyzozord> i mean to make notes like that you already have to have notes
[18:39:41] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[18:39:42] <pulse> https://i.pinimg.com/originals/da/9a/29/da9a2992f2090fe717ddf4ad31299fbf.jpg
[18:39:43] <bayaz> Type: image/jpeg Size: 145.5 kB 
[18:39:58] <hassoon> pulse: nsfw ?
[18:40:02] <pulse> quite sfw
[18:40:03] <user51> pulse: oh fore sure i spent al ot of time improving my handwriting
[18:40:03] *** Joins: nrl^ (~nrl@68.101.50.106)
[18:40:05] <hassoon> pulse: swear
[18:40:06] <user51> it's much better now
[18:40:07] *** Joins: cm007magnum (~Rheanna@101.91.214.30)
[18:40:09] <pulse> the goal is to make notes that you'd _want_ to look at later on
[18:40:12] *** Quits: nrl^ (~nrl@68.101.50.106) (Remote host closed the connection)
[18:40:19] <pulse> not something you'll just throw away
[18:40:27] <novns> btw smoking helps to learn
[18:40:30] <user51> plan to throw away, you will, anyhow
[18:40:34] <hassoon> novns: nope
[18:40:41] *** Joins: mmfood (~mmfood@45.135.187.94)
[18:40:43] <pulse> user51, i still have like 90% of my notes from college days
[18:40:43] <hassoon> novns: smoking kills you, but slowly with years
[18:40:48] <mrig> novns: dont turn into the guy that this chap is talking about, getting everything done really fast : https://youtu.be/EZ05e7EMOLM?t=724
[18:40:49] <user51> actually, i think smoking helps smoking
[18:40:50] <bayaz> Title: üöÄ DevTernity 2017: Ian Cooper - TDD, Where Did It All Go Wrong 
[18:40:51] <hassoon> * through years
[18:40:55] <kobalt> you see, both textbook and lecture are needed for a course so both are important. I guess
[18:40:58] <hassoon> or throughout year s?
[18:40:59] <novns> because you take little pauses and you use them to thing about new things in silence
[18:41:06] <hassoon> meh inglis
[18:41:17] <pyzozord> I admit I don't really know how to learn. Never learned to learn.
[18:41:34] <pyzozord> I don't know what I am doing really. I just read stuff, listen to stuff and try stuff and ask stuff
[18:41:38] <novns> *to think
[18:41:38] <tane> novns, has a point. the brain making connections requires time (link: spaced repetition)
[18:41:44] <pyzozord> and it really doesn't go that efficient
[18:42:08] <user51> https://youtu.be/o_0Z90NSq90?t=263
[18:42:09] <bayaz> Title: 70 GTA San Andreas Radio Commercials 
[18:42:10] <user51> about smoking ^
[18:42:33] <tane> also - try juggling or any other bimanual activity, because things that don't move do not have brains.. :)
[18:42:58] <user51> pulse: in retrospect i could have used some notes on my old projects
[18:43:03] <wwilly> merijn, (126370652 * 8) / 1024 / 1024 = 964.131561279 MB,    std::unordered_map<void *, unsigned long long> h;   it's not so crazy ...
[18:43:18] <novns> hassoon, try to make little pauses somewhere in silence without smoking
[18:43:22] <user51> pulse: but since this is a programming channel, you MUST do backups with your notes too
[18:43:22] <novns> it really helps
[18:43:37] <merijn> wwilly: oh, wait, I fucked up my napkin math xD
[18:43:39] *** Quits: Guest6949 (~sidy@ip174-74-91-218.om.om.cox.net) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[18:43:48] <pulse> for me personally the superior way to study is to: ready theory -> take notes -> practice where applicable (math especially), and repeat
[18:43:54] <novns> hassoon, but you have to go somewhere, you have to change the place for 15 minutes
[18:43:55] <merijn> wwilly: I came out to 500GB, which seemed excessive, but it was 500 MB (I assumed 4 bytes per number)
[18:43:56] <pulse> the note taking part is surprisingly potent
[18:44:04] <user51> pulse: notes can't be quicksorted :P
[18:44:21] <pulse> user51, they don't have to be. they just have to present information in a way that _you_ will be able to understand at a glance
[18:44:26] <pulse> that's the point of making them visually interesting, too
[18:44:31] <pulse> i mean it works for me
[18:44:55] <user51> time to get a printer
[18:45:09] <hassoon> novns: ya i'm going home now
[18:45:11] <hassoon> so long
[18:45:19] * hassoon systectl poweroff'
[18:46:03] <wwilly> merijn, :)    so (126370652 * 8 * 2) / 1024 / 1024 = 1928.26312256 MB to at least store mem@ + timestamp, without thinking of smart trick that stl could do. however each key and each value are unique ... can't do much I guess
[18:46:58] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:47:07] <wwilly> GeDaMo, merijn, so question is, would a splay heap could be more efficient as a data structure towards less fragmentation and better cache locality do you think?
[18:47:11] <pulse> and manually taking notes for some reason works much better for me than typing it out on a computer
[18:48:29] <pyzozord> pulse: possibly because it's slower, forcing you to keep the thought in your head longer
[18:48:34] <novns> pulse, because writing affects your brain a lot more than typing
[18:48:56] <pulse> pyzozord, yep. plus the visual aspect. my brain tends to remember diagrams and pictorials much easier than strings of words or equations
[18:49:02] <novns> writing is connected to speech in brains
[18:49:12] <wwilly> this is the kind of thing that is produced at the end: https://drive.google.com/file/d/1S3TzOnPHR9XQvASMhGGXGoiz2XowqQLN/view?usp=sharing
[18:50:23] <user51> pulse: if i cant have notes, whats the best second option?
[18:50:45] <pulse> user51, having eidetic memory? :p idk
[18:50:50] <pulse> i mean you have to figure out what works for you
[18:50:53] <pulse> studying is a skill
[18:50:57] <pulse> which most people don't even develop
[18:51:04] *** Quits: mmfood (~mmfood@45.135.187.94) (Ping timeout: 252 seconds)
[18:51:12] <wwilly> but to generate this, recording each memory access + compute reuse distance, it's like more than 10x slow down :(
[18:51:29] <novns> btw learning new things helps you to skip dementia at old age
[18:52:03] <novns> and it's very nice for brain to learn new languages
[18:52:32] <user51> pulse: how to tkae notes, btw
[18:52:46] *** Joins: rtypo (~alex@user/rtypo)
[18:53:08] *** Joins: mmfood (~mmfood@45.135.187.94)
[18:53:36] <pulse> user51, you can do it in a boring way like this https://i.redd.it/t8l93raqh5n51.jpg
[18:53:36] <bayaz> Type: image/jpeg Size: 1.1 MB 
[18:54:01] <pulse> or you can do it in a fun way like this https://i.pinimg.com/originals/7a/ea/f2/7aeaf203775230bbaef1d967a85817b5.jpg
[18:54:01] *** Quits: magla (~gelignite@55d479ac.access.ecotel.net) (Quit: Stay safe!)
[18:54:01] <bayaz> Type: image/jpeg Size: 213.9 kB 
[18:54:13] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[18:54:18] <pulse> my approach is the middle point between the two :p
[18:54:47] <pulse> imagine you're making an encyclopedia, and then make it the best you can
[18:55:19] *** Joins: techzerker (~techzerke@host-67-204-227-19.public.eastlink.ca)
[18:55:28] *** Quits: tangy (~tangy@user/tangy) (Ping timeout: 265 seconds)
[18:56:00] *** Parts: DaPinkOne (~Dap@user/dap) (Leaving)
[18:56:34] *** Joins: Lohengrin (~fredo@user/lohengrin)
[18:58:06] <user51> ah yeah i thought about it before. it's just error prone so it might be better to print it.
[18:58:12] <user51> also much easier to share with others
[18:59:10] *** Quits: LambdaComplex (~adam@wireguard/tunneler/lambdacomplex) (Quit: WeeChat 2.0.1)
[18:59:23] *** Joins: LambdaComplex (~adam@wireguard/tunneler/lambdacomplex)
[18:59:42] <[itchyjunk]> I drank
[18:59:57] <[itchyjunk]> i should probably have not
[19:00:20] <user51> good
[19:00:27] <user51> beer is proof god loves us and wants us to be happy
[19:00:34] <pulse> i dislike beer
[19:00:46] <user51> beer likes you
[19:00:51] <pulse> :3
[19:01:00] <[itchyjunk]> i started with beer and ended with whiskey
[19:01:15] <[itchyjunk]> im as aspiring alcoholic
[19:01:25] <pulse> i'd rather LSD finally be legalized
[19:01:29] <[itchyjunk]> no more liquor for the rest of the semester i hope
[19:01:38] <pulse> so we can all enjoy gnomes
[19:01:40] <user51> no rum?
[19:01:47] <[itchyjunk]> yeah i'd rather do hallucinagens too
[19:01:47] *** Joins: dunkeln (~dunkeln@94.129.71.70)
[19:01:48] *** Quits: dunkeln (~dunkeln@94.129.71.70) (Changing host)
[19:01:48] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[19:01:50] <user51> rom, ram, rum
[19:01:52] <[itchyjunk]> there was no run
[19:02:23] *** Quits: techzerker (~techzerke@host-67-204-227-19.public.eastlink.ca) (Quit: Igloo IRC: https://iglooirc.com)
[19:03:02] <Guest738> fruit beer is good 
[19:03:35] <pyzozord> in my motherland they have a tradition of boiling beer
[19:03:43] <user51>  /beer
[19:04:14] <pyzozord> with cinamon and cloves
[19:04:21] <user51> btw, watch out for the beer bears
[19:05:22] <[itchyjunk]> boiled bear?
[19:06:15] *** Quits: MJCD (uid193337@user/mjcd) ()
[19:06:39] <pyzozord> oh right it's after 16:00 now
[19:07:30] *** Quits: _inky (~inky_@5.77.132.34) (Ping timeout: 260 seconds)
[19:09:53] *** Quits: inky (~inky@5.77.132.34) (Ping timeout: 252 seconds)
[19:10:04] <smallville7123> i am an idiot ;-;    A makes a measure spec of what size it computes for child Row based on it's width and parent Row's available space, and then passes that to child Row's measure, which child Row uses to measure itself
[19:14:30] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:14:41] *** Joins: password2 (~password@user/password2)
[19:14:44] <[itchyjunk]> I'm an idiot too
[19:14:48] *** Quits: gggpkm (~gggpkm@li2010-23.members.linode.com) (Ping timeout: 265 seconds)
[19:14:51] * [itchyjunk] highfive
[19:14:56] *** Joins: Izem (~Izem@bras-base-london1483w-grc-27-70-51-121-7.dsl.bell.ca)
[19:18:05] <novns> user51, if beer loves you why does it go outside too quick?
[19:18:54] <novns> cognac is your real friend
[19:19:10] *** Joins: jazzy (~jaziz@2600:380:854a:af07:358e:f55f:33dd:e809)
[19:20:31] <beaky> what are the easiest thigns to learn in programming
[19:21:00] <novns> beaky, the imperative paradigm
[19:21:01] <[itchyjunk]> What is congnac? I don't remember
[19:21:06] <[itchyjunk]> I don't know my liquor too well
[19:21:27] <beaky> what is the imperative paradigm
[19:21:34] <beaky> and how do i learn it
[19:21:46] <[itchyjunk]> hmm what does imperative paradigm even mean?
[19:21:49] <user51> novns: no idea, beer bug?
[19:21:54] <[itchyjunk]> google says imparitive just means of vital importance
[19:22:15] <novns> beaky, it's an idea of using commands to change things
[19:22:29] <novns> like put 10 in this variable
[19:22:45] <novns> than print this variable out
[19:22:48] <novns> *then
[19:23:01] *** Quits: Brumaire (~quassel@81-64-14-121.rev.numericable.fr) (Ping timeout: 265 seconds)
[19:23:14] <novns> then destroy this variable like it never existed before
[19:24:24] <novns> beaky, it's algorithms with stateful world
[19:25:06] <novns> beaky, and there are other different paradigms exist much harder to understand
[19:25:38] <Izem> [itchyjunk]: using commands for programs -- statement based
[19:25:45] <beaky> what makes those other paradigms harder to understand 
[19:25:50] <novns> like a stateless world where you can use functions without any sequences of command
[19:26:09] <novns> and you cannot change anything, just calculate
[19:26:11] *** Quits: xiongxin (~quassel@113.116.34.58) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:26:17] <novns> and it's very powerful 
[19:26:29] <novns> it's math actually
[19:27:17] <novns> beaky, because you learn about commands from the very early age
[19:27:33] <Izem> easiest might be logic programming tbh
[19:27:34] <novns> and you learn more abstract things much later
[19:28:51] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[19:28:52] *** Quits: cm007magnum (~Rheanna@101.91.214.30) (Remote host closed the connection)
[19:29:02] <novns> imperative paradigm is in your life everywhere
[19:29:13] <Izem> as for how to learn imperative, most cs material on algorithms would be imperative I think
[19:29:14] <novns> that's why it's easy to learn
[19:29:25] <Izem> it's giving the steps to solve a problem
[19:29:36] <novns> Izem, because algorithms are imperative by definition
[19:29:38] *** Joins: brabrax (~brabrax@user/brabrax)
[19:29:48] *** Quits: Null_A (~null_a@2601:645:8700:2290:91f2:4a69:be9c:a77e) (Remote host closed the connection)
[19:30:00] <novns> but sometimes it's more effective to use functional paradigm
[19:30:03] <Izem> oh yeah :P
[19:30:30] <novns> where you don't tell your program what to do, you tell it how to do
[19:30:30] *** Joins: cm007magnum (~Rheanna@218.78.43.189)
[19:30:49] <beaky> arent those other paradigms imperative too since you still tell them what you want
[19:31:08] <novns> beaky, no, imperative means you can change things in time
[19:31:21] <novns> functional means there;s nothing to change at all
[19:31:23] <Izem> a few are yeah
[19:31:36] <Izem> like OOP can still be imperative
[19:31:46] <Izem> it's hard to remove state
[19:31:47] <Lohengrin> there's an advantage to take one paradigm aproach instead of another? or it's just prefererence? I only use OOP
[19:32:11] <Izem> yeah there are advantages, it makes certain problems easier to solve
[19:32:16] <novns> Lohengrin, yes, functional paradigm is more effective for calculations
[19:32:21] <Izem> there is also preference
[19:33:22] <novns> Lohengrin, because your programs are just formulas then, and you can calculate your program itself
[19:33:28] *** Quits: kobalt (~rsonx@user/kobalt) (Ping timeout: 252 seconds)
[19:33:28] <user51> pyzozord: did you look at the linked list thing i sent a while ago?
[19:33:45] *** Joins: gitgood (~gitgood@80-44-12-204.dynamic.dsl.as9105.com)
[19:33:48] <user51> https://github.com/mkirchner/linked-list-good-taste
[19:33:50] <bayaz> Title: GitHub - mkirchner/linked-list-good-taste: Linus Torvalds' linked list argument for good taste, explained 
[19:34:15] <beaky> nice i like linked lists
[19:34:25] *** Exa is now known as Exagone313
[19:34:29] *** Exagone313 is now known as Exa
[19:34:46] <pulse> skip lists are objectively superior
[19:35:12] <novns> Lohengrin, and you can analyze your program in a very math way, like calculate all limits, formally prove correctness, etc
[19:35:48] <novns> because it's just math formulas without any side effects
[19:35:49] <Lohengrin> novns: for me functional paradigm is just recursion xD
[19:36:02] <Lohengrin> but i never try it, so maybe I have to
[19:36:24] <beaky> isn't imperative also math formulas too
[19:36:31] <novns> Lohengrin, FP is very useful to learn even if you don;t use it much
[19:36:52] <novns> beaky, no, imperative means non-static world and side effects
[19:36:53] <user51> isn't that the same thing they say about lisp?
[19:37:13] <beaky> math formulas on the non-static world state 
[19:37:39] <novns> you cannot use formulas when side effects break things
[19:37:53] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[19:38:04] *** Joins: freakazoid343 (~matt@2603-9000-cf0f-80e3-3d44-b4b4-9588-c922.inf6.spectrum.com)
[19:38:10] *** Joins: Crescendo (~Crescendo@user/crescendo)
[19:38:12] <beaky> but i thought you can do arithmetic imperatively and arithmetic is math formulas
[19:38:26] <novns> and by side effects I mean variables that are being modified in time
[19:38:29] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[19:39:10] <novns> in FP variables are not containers for some values
[19:39:17] <novns> it's just another math formulas
[19:39:41] <novns> there are no variables, just names for things
[19:39:48] <user51> its getting both hot and cold at the same time
[19:39:49] <user51> damn weather
[19:40:04] *** Joins: zwr (~zwr@2804:d45:b966:fb00:910d:b18d:ade0:cbdd)
[19:40:24] <novns> and if you write i = 1, you mean it.  it's equal to 1 forever
[19:40:38] <novns> it cannot be changed
[19:40:58] <novns> that's what functional paradigm is
[19:41:09] <user51> reminds me of git
[19:41:22] *** Joins: Guest77 (~Guest77@p200300c8cf120f00436777980c911f5f.dip0.t-ipconnect.de)
[19:41:34] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:3d44:b4b4:9588:c922) (Ping timeout: 268 seconds)
[19:41:39] <Guest77> is it possible to connect to a postgres instance on my host from inside a docker container?
[19:41:51] <novns> Guest77, yes, a second
[19:42:47] <novns> Guest77, mount /run/postgresql to your /run/postgresql, and DB_HOST=/run/postgresql/.s.PGSQL.5432
[19:43:06] <novns> use the socket instead of network
[19:43:19] *** Quits: paravida (~myChateau@23.31.187.1) (Ping timeout: 265 seconds)
[19:44:03] <Guest77> novns: er could you elaborate? mount the host's /run/postgresql to the container's /run/postgresql?
[19:44:10] <novns> yes
[19:44:31] *** Joins: paravida (~myChateau@23.31.187.1)
[19:44:46] <Guest77> and set an ENV to DB_HOST=/run/postgresql/.s.PGSQL.5432 in the Dockerfile?
[19:45:31] <novns> Guest77, this variable is used in some software like gitea, your software could be tuned another way
[19:46:05] <novns> but generally use a socket instead of network
[19:46:14] <Guest77> is it the {host} variable in "postgres://{user}:{password}@{host}/{database}"?
[19:46:39] *** Joins: extern (~archer@141.226.60.187)
[19:46:50] *** Quits: paravida (~myChateau@23.31.187.1) (Client Quit)
[19:47:58] <novns> Guest77, the socket is used when you skip the {host} part
[19:48:09] <novns> no host meansuse local socket
[19:48:16] <novns> *no host means use local socket
[19:48:20] *** Quits: Izem (~Izem@bras-base-london1483w-grc-27-70-51-121-7.dsl.bell.ca) (Remote host closed the connection)
[19:50:24] <novns> Guest77, and you can use non-default socket path with postgresql:///dbname?host=/path/to/socket/dir
[19:51:22] *** Quits: hexingb (~hexingb@2409:8902:7ba2:e6d5:3cae:3a8b:d3f:90b8) (Ping timeout: 260 seconds)
[19:51:27] <novns> or postgresql://%2Fpath%2Fto%2Fsocket%2Fdir/dbname
[19:51:33] *** Joins: white5moke (~white5mok@ip72-219-109-30.oc.oc.cox.net)
[19:53:20] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 250 seconds)
[19:53:43] *** Joins: Crescendo (~Crescendo@user/crescendo)
[19:59:08] *** Quits: unmanbearpig (~unmanbear@45.76.95.141) (Quit: unmanbearpig)
[20:02:48] <Guest77> novns: hmm i'm a bit lost, my linux networking knowledge is not very comprehensive
[20:03:54] <novns> Guest77, you have to skip network, sockets are files
[20:04:28] <novns> you mount the postgresql's socket file into a container and use it there
[20:05:49] <Guest77> it tells me that {host} as /run/postgresql/.s.PGSQL.5432 is invalid
[20:06:08] <novns> Guest77, use /run/postgresql as {host}
[20:06:20] <novns> or just skip {host}
[20:06:43] <novns> postgresql knows where his socket is by default
[20:07:21] <Guest77> my database url is "postgres://postgres:{password}@/run/postgresql/{database}", and my web framework is telling me this is invalid
[20:08:01] <novns> Guest77, you have to substitute / as %2F
[20:08:21] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Remote host closed the connection)
[20:08:40] <novns> Guest77, https://www.postgresql.org/docs/current/libpq-connect.html
[20:08:42] <bayaz> Title: 33.1.¬†Database Connection Control Functions 
[20:09:07] <novns> Guest77, read the 33.1.1.2 section
[20:09:16] <novns> there are examples
[20:11:02] <novns> Guest77, or you can allow connections to postgresql from outside, but it's not safe
[20:14:15] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:14:26] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:b423:2116:b870:efc8)
[20:15:46] *** Quits: rexar89 (~alexi5@208.83.82.234) (Ping timeout: 252 seconds)
[20:16:35] <novns> Guest77, or you can use  "--network host" for your container and then it will use host's network
[20:16:42] *** Joins: Akuli (~Akuli@82-203-167-98.bb.dnainternet.fi)
[20:16:48] <novns> so you can just connect to localhost
[20:16:49] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[20:17:15] <novns> but it's not safe too, all container's ports will be exposed
[20:18:06] <Guest77> this is just on my dev machine, so would that matter?
[20:18:19] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Remote host closed the connection)
[20:18:28] <Guest77> i did try the --network host thing about 20 minutes ago but i'm not able to access the application
[20:18:51] *** Quits: cm007magnum (~Rheanna@218.78.43.189) (Remote host closed the connection)
[20:18:54] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[20:19:12] *** Quits: rsx (~dummy@ppp-188-174-153-64.dynamic.mnet-online.de) (Quit: rsx)
[20:20:09] *** Quits: white5moke (~white5mok@ip72-219-109-30.oc.oc.cox.net) (Quit: Igloo IRC: https://iglooirc.com)
[20:20:22] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b0a7:81a6:ed08:859a)
[20:20:35] *** Joins: freakazoid12345 (~matt@2603-9000-cf0f-80e3-3d44-b4b4-9588-c922.inf6.spectrum.com)
[20:20:36] <Guest77> with this command: docker container run --network host --env URL="postgres://postgres:{password}@localhost:5432/{database}" --rm -it -p 4000:4000 --name my_app my/app
[20:21:16] *** Joins: cm007magnum (~Rheanna@101.91.232.94)
[20:21:51] <Guest77> docker ps doesn't even show it running
[20:22:50] *** Joins: node1 (~node1@user/node1)
[20:22:52] *** Joins: jokoon (~eio@2a01:e0a:542:e160:7109:25ec:66bf:b29)
[20:22:53] *** Quits: niemal (~niemal@user/niemal) (Quit: Leaving)
[20:23:38] *** Quits: freakazoid343 (~matt@2603-9000-cf0f-80e3-3d44-b4b4-9588-c922.inf6.spectrum.com) (Ping timeout: 252 seconds)
[20:23:42] *** Joins: akevinhuang (~thekevinh@user/thekevinhuang)
[20:24:01] <novns> check if it fails to start
[20:24:18] *** Quits: poww0wmus1c (~poww0wmus@gateway/tor-sasl/poww0wmus1c) (Remote host closed the connection)
[20:24:24] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[20:25:02] <Guest77> well its not giving any output when i run that command
[20:25:57] *** Quits: menace (~someone@user/menace) (Quit: menace)
[20:26:49] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec4e:a200:b0a7:81a6:ed08:859a) (Ping timeout: 250 seconds)
[20:29:24] *** Joins: ralinux (~saje@37.156.188.75)
[20:30:31] *** Joins: Izem (~Izem@bras-base-london1483w-grc-27-70-51-121-7.dsl.bell.ca)
[20:30:39] *** Joins: poww0wmus1c (~poww0wmus@gateway/tor-sasl/poww0wmus1c)
[20:30:49] *** Joins: kobalt (~rsonx@user/kobalt)
[20:31:03] *** Quits: jessemacdougall (~jesusJess@2604:3d08:5b7f:f3ec:a86e:5989:7d61:7e1b) (Quit: Leaving)
[20:31:18] *** Joins: Powerhouse6666 (~Powerhous@24.109.185.150)
[20:31:59] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:d961:6f41:954c:7423)
[20:33:48] *** Joins: white5moke (~white5mok@ip72-219-109-30.oc.oc.cox.net)
[20:33:55] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Remote host closed the connection)
[20:34:19] <novns> Guest77, no one knows what's your program and why it doesn't run
[20:34:33] <novns> no magic answer here
[20:35:22] *** Quits: freakazoid12345 (~matt@2603-9000-cf0f-80e3-3d44-b4b4-9588-c922.inf6.spectrum.com) (Ping timeout: 250 seconds)
[20:35:52] *** Quits: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net) (Quit: Leaving)
[20:36:03] *** Joins: gioyik (~gioyik@gateway/tor-sasl/gioyik)
[20:37:33] *** Joins: mishugana (~mishugana@user/mishugana)
[20:39:25] *** Quits: white5moke (~white5mok@ip72-219-109-30.oc.oc.cox.net) (Ping timeout: 252 seconds)
[20:39:55] *** Joins: Quietwalker (~X@cpe-70-113-121-167.austin.res.rr.com)
[20:40:00] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[20:42:03] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[20:42:31] <Lohengrin> clear
[20:42:46] <Lohengrin> ups :v
[20:42:53] *** Quits: gioyik (~gioyik@gateway/tor-sasl/gioyik) (Quit: WeeChat 3.1)
[20:43:11] <edgar-rft> is the ##programming magic broken?
[20:43:19] *** Quits: mmfood (~mmfood@45.135.187.94) (Ping timeout: 252 seconds)
[20:43:28] *** Quits: jacks2 (~bc8165b6@217.29.117.252) (Quit: http://www.okay.uz/)
[20:43:32] *** Quits: xsperry (~xs@user/xsperry) ()
[20:46:40] <Hash> What?
[20:46:48] <[itchyjunk]> yes
[20:46:51] <edgar-rft> That!
[20:47:44] *** Quits: extern (~archer@141.226.60.187) (Quit: WeeChat 3.2.1)
[20:49:55] <mishugana> Que?
[20:50:55] <edgar-rft> me no speak burrito
[20:51:03] <Hash> Dude
[20:51:06] <Hash> No.
[20:51:11] <Hash> me no speak Spanish
[20:51:31] <Hash> Don't be bloody racist.
[20:51:40] *** Joins: Narrat (~omnius@p200300df5f13ccd506ea56fffe2e7cdc.dip0.t-ipconnect.de)
[20:51:50] <Hash> What's the difference in that and saying me no speak 'beaner'
[20:51:52] <Lohengrin> aunque fue un poco graciosos :v
[20:51:52] <Hash> What's the difference?
[20:52:45] <Hash> You're still using something from a certain people to use as a jocular pejorative. That's either from ignorance or malice. I would say malice out of ignorance.
[20:53:23] <mishugana> The trouble is that people don't find stuff offensive till it applies to them. Sadly.
[20:53:26] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[20:54:06] <mishugana> Let's all not break the convivial spirit here. I hope that edgar-rft is contrite about his misplaced humour!
[20:54:16] <Hash> Peculiar thing is... I don't know a word of spanish. But I do know that burritos originate from the hispanics, and I am also aware how many Americans are racist against them.
[20:55:01] <mishugana> Me neither - I was just joining in the party myself, till things went a bit awry.
[20:55:07] <Hash> So this is not something that's up for debate or argument or any kind of discussion.
[20:55:19] <Hash> Do not be racist. Even for jocular reasons. Find a better and more tasteful way to be humrous.
[20:55:21] <mishugana> Well, I do agree with you.
[20:55:22] <Hash> Thank you.
[20:55:33] <[itchyjunk]> Racism implies someone thinking someone else is inferior
[20:55:46] <Hash> What part of it's not up for discussion did you miss?
[20:55:55] <[itchyjunk]> saying "burrito" isn't racist
[20:55:56] <Hash> Moving on.
[20:56:07] <[itchyjunk]> the part where you cry "racism"
[20:56:25] <Lohengrin> I'm from a spanish speaking country and I don't find that offensive
[20:56:33] <mishugana> Not to beat a dead horse, it reminds me of someone I worked with once - a White American who spent all week telling us about Black culture and history and the Black emancipation movement, and then on the last day started cracking jokes about Vietnamese. I was shocked and disappointed to say the least.
[20:56:34] <Lohengrin> but Hash is right
[20:56:40] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:a609:42d:bc28:102e)
[20:56:45] <Lohengrin> some poeple might take it in a different way
[20:56:48] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:57:02] <[itchyjunk]> Lohengrin, yes, inference can be different
[20:57:08] *** Quits: Powerhouse6666 (~Powerhous@24.109.185.150) (Ping timeout: 252 seconds)
[20:57:21] <[itchyjunk]> and it might be offensive to some. being offensive isn't equivalent to something being racist though.
[20:57:34] <[itchyjunk]> he didn't say it's offensive, he claims it's in particular "racism"
[20:57:36] <jeaye> [itchyjunk]: Hash is right here. Equating Spanish and burrito is discrimination. Discrimination against another race is racism.
[20:57:44] <mishugana> My method is this - if a certain group themselves find something offensive, it's meaningless to argue that something is *no* offensive. Just apologise, and don't do it again - like normal human beings.
[20:58:08] *** Quits: Joanna (uid57472@id-57472.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[20:58:44] <[itchyjunk]> mishugana, in this case, he didn't say he was offended. he said he was offended on the behalf of someone else.
[20:58:45] <mishugana> There was this whole debate on a YouTube video where someone was arguing that calling something "rice" as in "riceing up a car" was not offensive to Asians, even when Asians in the comments were saying that they find it offensive. The term originating from Japan, hence the "rice". Unbelievable.
[20:58:53] <[itchyjunk]> he should have just said it's offensive to him.
[20:59:06] <mishugana> [itchyjunk]: Sure, but it's common knowledge that Hispanics do find it offensive
[20:59:19] <mishugana> And I don't think one should change one's behaviour based on who's around or not, right?
[20:59:24] <Hash> When did I say that I was offended on behalf of something else. Please provide quotes, screenshots are preferred over text as that can be fabricated.
[20:59:28] <[itchyjunk]> mishugana, someone chimed in and said they are form a spanish speaking country and they don't find it as such.
[20:59:31] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:597b:6a63:9baf:8b09)
[20:59:47] <mishugana> [itchyjunk]: Anecdotal at best
[20:59:48] <jeaye> [itchyjunk]: That doesn't matter. That's only one person.
[20:59:51] <[itchyjunk]> you cried racism and clarified you don't speak spanish.
[20:59:54] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[21:00:06] <Hash> 'cried'?
[21:00:13] <[itchyjunk]> one taking offense was also one person then, by the same logic.
[21:00:17] <Hash> Please phrase your query in a non-loaded manner.
[21:00:20] <mishugana> Imagine the uproar if someone were to call a Jewish person a "kike", despite some Jews saying that they don't find it offensive? Why different yardsticks for different people?
[21:00:35] <mishugana> Or an Indian a "dot" or a "feather"?
[21:00:43] <mishugana> Or a Chinese a "chink"?
[21:00:47] <Hash> I can't respond to people being triggered. I'm not a psychologist or a mental supprot specialist.
[21:00:47] <mishugana> Like, come on, man.
[21:00:48] <[itchyjunk]> mishugana, do oyu find burrito and kike to be on similar footing?
[21:00:49] <jeaye> [itchyjunk]: You don't need to be the target of the racism to be the one to say something is racist. In fact, it's better if anyone who observes it steps up, rather than just the targets.
[21:01:04] <mishugana> jeaye: Precisely.
[21:01:16] <mishugana> There are some things that normal people would find universally distasteful.
[21:01:24] <[itchyjunk]> jeaye, if it's something directly racist, sure. but it's not clear here, seems like you yourself make a two step jump in logic to get to racism.
[21:01:31] <Hash> No one cried. To associae 'cried' is a clear conversational terrorism tactic, and I would advise you to not employ it any longer.
[21:01:35] <[itchyjunk]> being offended is fine, but not all offense is "racist"
[21:01:44] <mishugana> [itchyjunk]: What is racist then?
[21:02:10] <[itchyjunk]> mishugana, there are a few formal definition. we could take the oxford one or something
[21:02:14] <mishugana> Stereotypes are not racist?
[21:02:19] <jeaye> [itchyjunk]: I said this already: it's descrimination against a race and that's racism.
[21:02:37] <jeaye> "2. discriminatory or abusive behavior towards members of another race" ~ from WordNet
[21:02:46] <Hash> I wouldn't argue with jeaye 
[21:02:48] <mishugana> [itchyjunk]: Might I remind you that the very term "race" is meaningless if one were to be pedantic considering that it originated as a term for "species"?
[21:03:05] <mishugana> Common usage dictates the meanings of words, not the dictionary or a dated definition.
[21:03:06] <jeaye> [itchyjunk]: Boiling an entire culture into a single stereotypical food is discrimination.
[21:03:07] <[itchyjunk]> your premise is that saying a word that is culturally linked to a language to equate it to the language is already "discriminatory"
[21:03:10] <[itchyjunk]> this isn't a given.
[21:03:15] <mishugana> jeaye: Again, precisely.
[21:03:33] *** Quits: ralinux (~saje@37.156.188.75) (Ping timeout: 265 seconds)
[21:03:50] <Hash> I don't speak falafel. <- making fun of middle eastern people and languages
[21:03:59] <Hash> me no speak burrito... for the Spanish
[21:04:07] <Hash> How is it not racist?
[21:04:10] <[itchyjunk]> where is it "making fun" ?
[21:04:15] <jeaye> It is.
[21:04:16] <mishugana> [itchyjunk]: So imagine that I were Hispanic and I said that "burrito" is offensive to me in that context, would you still argue that it's not racism since it does not conform to the stated meaning in a dictionary, or that there is someone you know who doesn't find it offensive, and hence proof by contradiction?
[21:04:18] <deniska> hey
[21:04:31] <[itchyjunk]> https://en.wikipedia.org/wiki/Principle_of_charity
[21:04:32] <bayaz> Title: Principle of charity - Wikipedia 
[21:04:41] <Hash> deniska: hi
[21:04:42] <[itchyjunk]> mishugana, i would not
[21:05:03] <jeaye> [itchyjunk]: You have multiple people in here saying they're offended by this and you're basically telling them they have no cause to be offended.
[21:05:04] <mishugana> [itchyjunk]: How very lucky for us humans then that human behaviour does not follow mathematical logic.
[21:05:10] <mishugana> They tried, and they failed, miserably.
[21:05:32] <[itchyjunk]> mishugana, again, things very well might be offensive. but trying to immidately say that a person is deemining an entire race of person from an offensive comment it 2 steps away from something offensive being said
[21:05:34] <mishugana> jeaye: That's what I find perplexing.
[21:05:44] <deniska> let's restrain from using terms other people may find semantically charged, even if other people may disagree on the degree of how charged they are :)
[21:05:50] <[itchyjunk]> jeaye, that is precisely what i have not siad.
[21:05:53] *** Parts: Izem (~Izem@bras-base-london1483w-grc-27-70-51-121-7.dsl.bell.ca) ()
[21:05:59] <[itchyjunk]> i've said it can be offensive, but it being "racist" is quesitonable
[21:06:07] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: The Lounge - https://thelounge.chat)
[21:06:07] <mishugana> [itchyjunk]: Fine, suppose it were not "racist", but offensive, do you still have any objections about not using said term, for instance? Curious.
[21:06:11] <Hash> Look. It's really bad to say things like this as I'm about to, can be, not always, but sometimes needed, I don't like to tarnish reputations or slander or libel... but [itchyjunk] is known to be argumentative, trollish, raises the channel temperature often with offtopic nonsense and is rather abrasive and offputting.
[21:06:22] <[itchyjunk]> mishugana, i would have no objection in that case.
[21:06:37] <Hash> Can we stop this and go back to programming talking?
[21:06:43] <mishugana> Fine, let's leave it at then, shall we? This has been rather unpleasant.
[21:06:44] <[itchyjunk]> Hash, you going around calling people troll isn't anything new.
[21:06:51] <[itchyjunk]> mishugana, sure.
[21:06:56] <mishugana> Cool.
[21:06:57] <deniska> so, spaces are obviously better than tabs
[21:06:58] <Hash> Your behavior speak for itself. I don't have to speak.
[21:07:05] <Hash> deniska: depends.
[21:07:08] <[itchyjunk]> Then why are you speaking?
[21:07:12] <Lohengrin> deniska: 2 spaces always
[21:07:12] <Hash> Sometimes you find yourself pushing space too much.
[21:07:18] <Hash> Sometimes tabs are better.
[21:08:04] <jeaye> o.O
[21:08:17] <jeaye> Spaces vs tabs isn't about pressing space X times instead of tab once.
[21:08:32] <mishugana> I always have expandtab in my vimrc :D
[21:08:33] <jeaye> We still use the tab key; it's about how the whitespace is then encoded in the file.
[21:08:33] <Hash> For me it's PITA.
[21:08:37] <deniska> Hash: ‚ô• expandtab
[21:08:47] <jeaye> I press tab once, in vim, and it inserts two spaces.
[21:08:47] *** Quits: cm007magnum (~Rheanna@101.91.232.94) (Remote host closed the connection)
[21:09:03] <mishugana> Yup, same here.
[21:09:08] <Hash> I don't really care, I go with whatever the author ued
[21:09:14] <Hash> For myself, I don't really care, I mix both
[21:09:21] <GeDaMo> https://nickgravgaard.com/elastic-tabstops/
[21:09:21] <bayaz> Title: Elastic tabstops - a better way to indent and align code 
[21:09:39] <Hash> I use whatever I have to do less work
[21:10:14] * kobalt 's tab key broken
[21:10:36] *** Quits: dan01 (~dan01@2a02:2f09:3306:1d00:85c4:e099:584e:633) (Remote host closed the connection)
[21:10:38] <kobalt> I think I should xmodmap it to some other key I don't use
[21:10:54] <Hash> Imagine you're editing the same file you have in your fancy little IDE on another machine in another text editor, and you're full of spaces, and you need to navigate around
[21:10:59] *** Joins: dan01 (~dan01@2a02:2f09:3306:1d00:85c4:e099:584e:633)
[21:11:13] *** Joins: cm007magnum (~Rheanna@119.96.171.22)
[21:11:22] <Hash> Say you want to use normal arrow keys. Spaces would take you a while, I know. Tabs? You move through the code fast with arrow keys.
[21:11:26] <Hash> I like tabs
[21:11:29] <Hash> :)
[21:12:07] <Hash> Hash, you should use vim.
[21:12:10] <GeDaMo> https://www.youtube.com/watch?v=siaxGjttoVM
[21:12:10] <bayaz> Title: The Simpsons - Tab 
[21:12:12] <Hash> No. I really shouldn't.
[21:12:28] <Lohengrin> Hash:  then emacs :v
[21:12:33] <Hash> I do.
[21:12:48] <Hash> https://i.imgur.com/4Q46qt4.png 
[21:12:49] <bayaz> Type: image/png Size: 1.8 MB 
[21:12:50] <Lohengrin> nice, I use vim myself
[21:12:55] <mishugana> I use emacs only for Common Lisp. I just can't make Vim work nicely with CL :(
[21:12:59] <Hash> I can't stand vim.
[21:13:10] <mishugana> tried vlime and slimv, not really the same.
[21:13:11] <Lohengrin> but rather than navigate a file with arrow i use search querys
[21:13:13] <deniska> I use vim (well, neovim)
[21:13:19] <mishugana> Hash: Hehe, I love Vim
[21:13:23] <Hash> I absolutely cannot stand vim. At all. I can't deal with this insert mode and escape mode and mode mode and just mode this and mode that
[21:13:30] <mishugana> No plugins, just vanilla Vim + fzf + ag
[21:13:42] <Hash> Vim unintuitive, doesn't make any sense, huge learning curve, and for what? So I can type more? My fingers already hurt
[21:13:45] <Hash> I like mouse.
[21:13:46] <Hash> I'm old.
[21:14:21] <Hash> you navigate around the code in vim with editor commands. Meaning you have to type more. More finger presses and pain in joins.
[21:14:22] <mishugana> I actually find Vim quite intuitive - you have your "language" with "verbs" "nouns" and "action counts"
[21:14:28] <Hash> Mouse, wham bam, you're there at the cursor location.
[21:14:36] <mishugana> Emacs, on the other hand, is not one bit consistent!
[21:14:39] <Hash> joints*
[21:14:55] <Hash> You know I mean people are differe
[21:15:02] <Hash> One man's emacs is another man's vim
[21:15:10] <Lohengrin> Hash: I don't like the shortcuts of emacs, but with vim there're more intuitive, las mishugana said, is a language
[21:15:12] <Hash> I really love netbeans :)
[21:15:18] <Hash> Netbeans is my favorite IDE of all time
[21:15:34] <novns> vscode is perfect these days
[21:15:52] <mishugana> I tried Netbeans for a while, and to be honest, it's not bad at all, but I mostly use Eclipse with Java (sometimes IDeA)
[21:16:01] <Hash> Oh cool
[21:16:07] <Hash> I tried out vscode and I couldn't get used to it
[21:16:19] <mishugana> Lohengrin: Indeed, there was a talk on thoughtbot that I quite enjoyed where the author went into detail about the language of Vim. 
[21:16:25] <Hash> Netbeans has all the things I need, everything and all the tools buildin
[21:16:34] <Hash> then you can do the plugins and it's ice
[21:16:37] <Hash> nice*
[21:16:38] *** Quits: cm007magnum (~Rheanna@119.96.171.22) (Remote host closed the connection)
[21:16:49] <Hash> See, I can't even get fingers to press keys always. I miss key presses as nerve damage
[21:16:50] *** Quits: kobalt (~rsonx@user/kobalt) (Quit: leaving)
[21:16:52] <Hash> :(
[21:17:00] <mishugana> Hash: Hahaha
[21:17:04] <Lohengrin> Hash: xD
[21:17:08] <Hash> I totally mean to push the key
[21:17:09] *** Joins: cm007magnum (~Rheanna@119.96.171.22)
[21:17:17] <Lohengrin> Hash: for me is on the contrary, is the mouse usage, I don't like itt
[21:17:28] <Hash> And it feels like I'm doing it. But finger losing stregnth and key never gets pushed. I just think I pushed it.
[21:17:32] <Hash> So I don't even catch my typos
[21:17:39] <novns> Hash, you should try vscode with "tomorrow night blue" color theme
[21:18:06] <novns> it gives so pleasure to eyes
[21:18:10] *** Quits: cm007magnum (~Rheanna@119.96.171.22) (Remote host closed the connection)
[21:18:16] <mishugana> Yup, ever since I've been using Vim fulltime (around 5 odd years now), my RSI has gone down quite a bit - I realised then that it was the mouse and my way of holding it (curved palm) that was causing it - occasionally, but still annoying
[21:18:43] <Hash> so for me vim is just... 
[21:18:48] <Hash> I have to double mental and physical work
[21:18:50] <mishugana> novns: I'll be honest - for an electron app, Vscode is very performant and snappy (at least on small to medium sized projects). I prefer it to Atom.
[21:19:04] <novns> atom was good before
[21:19:17] <novns> but it was slow and now it's abandoned
[21:19:18] <Hash> I have to calculate how far away something is, count how many letters or chars or words or lines away somethging is, then type a syntactical command (do mentla work to remember that) and navigaegt
[21:19:21] <Hash> Honestly 
[21:19:22] <mishugana> novns: Yup
[21:19:29] <Hash> Vim just makes me do double mental work.
[21:19:29] *** Joins: cm007magnum (~Rheanna@119.96.171.22)
[21:19:31] <Hash> I don't like it.
[21:19:40] <Hash> I love emacs. No mentla work. Everything is just standard and makes sense.
[21:19:55] <mishugana> Hash: Oh, that becomes second nature very quickly though - it's only the initial period that's a bit of  torture (and I'm not accurate typer myself).
[21:20:11] *** Joins: mmfood (~mmfood@45.135.187.94)
[21:20:19] <Hash> I just dont' want my brain to have to worry about having to count how many lines/words how far away something is
[21:20:28] <Hash> I don't even want my braint ot have to develop0 thos eneural circutis
[21:20:36] <Hash> I want to keep my brain capacity for other useful things.
[21:20:44] <mishugana> I love SLIME/SLY on emacs - I couldn't even imagine any other way of working with Lisp(s). Other than that, not really - the shells are all terrible on Emacs.
[21:21:00] <Hash> *nod*
[21:21:05] <Hash> I'm not saying vim isn't great
[21:21:12] <Hash> Just people are diff cuz of their brains
[21:21:33] <Hash> this is why thanksfully those brains can learn to write their own software and solve their own problem
[21:21:35] <novns> Hash, https://sumbur.info/tmp/vscode.png
[21:21:36] <bayaz> Type: image/png Size: 204.6 kB 
[21:21:42] <novns> look how it looks here
[21:21:45] <Hash> and other will find that appealing, so variety is good
[21:21:55] <Hash> if there was only a few tools to use, we'd be in trouble. 
[21:22:10] <novns> the code is opensource, you can steal it
[21:22:32] <mishugana> That actually looks rather pretty novns 
[21:22:44] <mishugana> Hash: True that
[21:22:50] *** Joins: extern (~archer@141.226.60.187)
[21:23:07] <Hash> https://i.imgur.com/TRMx7pJ.jpg mishugana 
[21:23:07] <bayaz> Type: image/jpeg Size: 137.2 kB 
[21:23:25] <Hash> https://i.imgur.com/yGq3yRU.jpg after a bit of clean up
[21:23:26] <bayaz> Type: image/jpeg Size: 4.7 MB 
[21:23:37] <mishugana> Hash: Whoa, that's quite a setup there. I just have one monitor and my old mbp :(
[21:23:42] <Lohengrin> Hash: it need more screen I would say
[21:23:53] <mishugana> Lohengrin: Hahahaha
[21:23:59] *** Joins: yinghua (~yinghua@2800:2121:1400:1db:dd9a:21db:bfa:2483)
[21:24:01] <mishugana> Hash: Where's the table though?
[21:24:15] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.2.1)
[21:24:20] <mishugana> I mean the desk
[21:24:24] <Hash> No need for table/desk
[21:24:33] <mishugana> wireless, eh?
[21:24:35] <Hash> Recliner, really wide arms, wireless things
[21:24:38] <Hash> yup
[21:24:42] <mishugana> Nice
[21:24:53] <Hash> left side keyboard right side mouse
[21:25:02] <Hash> slide the keyboard over when needed, into lap
[21:25:13] <Hash> After clean up I got table.
[21:25:29] *** Joins: xsperry (~xs@user/xsperry)
[21:25:38] *** Quits: mmfood (~mmfood@45.135.187.94) (Ping timeout: 250 seconds)
[21:25:43] <mishugana> Are you a designer or something? Seriously, that's quite a lot of monitors!
[21:25:53] <Hash> https://i.imgur.com/QSk9cV4.png Nope
[21:25:54] <bayaz> Type: image/png Size: 264.3 kB 
[21:25:56] <Hash> I do this
[21:26:04] *** Joins: gpap (~gpap@athedsl-4417945.home.otenet.gr)
[21:26:13] <Hash> Now I am again in college fulltime student doing 2nd bachelor degree in cybersecurity
[21:26:21] <Lohengrin> Hash: full stack, nice
[21:26:23] <mishugana> Ah okay, very cool! :)
[21:26:24] <Hash> Got 1.5 year left
[21:26:35] <Hash> I have security experience working at Symantec stuff
[21:26:39] <Hash> Norton
[21:26:45] <novns> mishugana, I believe those are not monitors but just paintings in frames
[21:26:49] <Lohengrin> Hash: I would feel overwhelmed with all those monitors, like I wouldn't know which to look at
[21:27:00] <mishugana> novns: Hehehe
[21:27:20] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[21:27:29] *** Joins: mmfood (~mmfood@45.135.187.94)
[21:28:56] <pyzozord> Action Script 3. Anyone needs this still?
[21:29:06] <Hash> Nah, moved to Haxe
[21:29:23] <Hash> For any kind of that stuff but no more, as the world moved away from flashy stuff
[21:30:35] <pyzozord> oh damn that Haxe thing seems to be capable of making quite cool games
[21:31:02] *** Quits: gpap (~gpap@athedsl-4417945.home.otenet.gr) (Quit: Konversation terminated!)
[21:31:10] <Hash> Haxe/flixel/openfl
[21:31:13] <pyzozord> I'm even familiar with the Papers Please gamae, it's been mentioned a lot in indie
[21:31:13] <Hash> It's amazing
[21:31:22] <Hash> Very fast optimized code for any target platform
[21:31:40] <Hash> You can take the same code and compile it for diff targets and see how cleanly the generated code is
[21:31:46] <Hash> I love Haxe.
[21:31:55] <Hash> But it's no Haskell
[21:33:01] <Hash> Also check out neko vm
[21:33:28] <Hash> Neko is a high-level dynamically typed programming language. It can be used as an embedded scripting language. It has been designed to provide a common runtime for several different languages. Learning and using Neko is very easy. You can easily extend the language with C libraries. You can also write generators from your own language to Neko and then use the Neko Runtime to compile, run, and
[21:33:31] <Hash> access existing libraries.
[21:33:39] <Hash> It was made by the same dev who made Haxe
[21:34:37] <Hash> https://nekovm.org/ Neko comes with several libraries. One of these is mod_neko, which embeds the Neko Virtual Machine into an Apache web server, so you can use Neko to generate webpages. This website is actually generated using Neko.
[21:34:38] <bayaz> Title: NekoVM 
[21:34:44] *** Joins: jokoon2 (~eio@2a01:e0a:542:e160:7109:25ec:66bf:b29)
[21:35:24] <Hash> NekoVM is a virtual machine developed by Nicolas Cannasse as part of research and development (R&D) efforts at two indie video game firms in Bordeaux, France
[21:35:43] <Hash> So yeah, a lot of it came out of independent game studio research
[21:36:04] <Hash> first at Motion Twin and then at Shiro Games. NekoVM's native language is the bytecode for a high-level dynamically typed programming language called Neko. This pairing allows Neko to be used directly as an embedded scripting language or to target NekoVM by compiling some other language (such as Haxe) to NekoVM bytecode.
[21:37:01] *** Quits: jokoon (~eio@2a01:e0a:542:e160:7109:25ec:66bf:b29) (Ping timeout: 250 seconds)
[21:40:32] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[21:42:03] *** Quits: jaysicks (~jaysicks@188-143-121-226.pool.digikabel.hu) (Remote host closed the connection)
[21:42:35] *** Joins: jaysicks (~jaysicks@188-143-121-226.pool.digikabel.hu)
[21:43:27] *** Joins: rexar89 (~alexi5@208.83.82.234)
[21:46:45] *** Quits: awmv (~awmv@2a02:21b0:644f:c181:a609:42d:bc28:102e) (Quit: Ping timeout (120 seconds))
[21:50:54] *** Joins: magla (~gelignite@55d434bd.access.ecotel.net)
[21:57:23] <beaky> hello so there is raytracing for the most perfect 3d graphics but is there wave-tracing for like perfect sounding audio
[21:58:03] *** Quits: mishugana (~mishugana@user/mishugana) (Quit: leaving)
[21:59:07] *** Quits: cm007magnum (~Rheanna@119.96.171.22) (Remote host closed the connection)
[22:02:01] *** Joins: cm007magnum (~Rheanna@101.89.207.55)
[22:02:46] *** Quits: extern (~archer@141.226.60.187) (Quit: WeeChat 3.2.1)
[22:03:46] <Hash> beaky: what?
[22:04:37] <beaky> rays of light bounce around to render the scene likewise sound waves bounce around to render the audio
[22:05:54] *** Quits: zaher (~zaher@37.48.158.121) (Ping timeout: 265 seconds)
[22:05:56] *** Joins: zaher_ (~zaher@37.48.178.215)
[22:06:11] <[itchyjunk]> beaky, i would imagine something exists for generating synthetic sounds
[22:06:38] *** Joins: akevinhuang2 (~thekevinh@user/thekevinhuang)
[22:06:43] <Hash> Oh you mean ray accoustics
[22:06:48] <GeDaMo> https://en.wikipedia.org/wiki/Physical_modelling_synthesis
[22:06:48] <bayaz> Title: Physical modelling synthesis - Wikipedia 
[22:06:50] <Hash> Yeah sure.
[22:06:58] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[22:07:12] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:07:18] <beaky> nice what other things can we make using the raytracing appraoch
[22:07:28] <Hash> https://en.wikipedia.org/wiki/Geometrical_acoustics
[22:07:29] <bayaz> Title: Geometrical acoustics - Wikipedia 
[22:07:40] <pyzozord> beaky: I was thinking many times about this too
[22:08:01] <pyzozord> one of the first games that had more sophisticated spatial sound modeling was thief
[22:08:12] <beaky> can we raytrace our thoughts so computers can think more realistically
[22:08:31] <pyzozord> here is not ray tracing exactly but some inside look in like modern games do it https://www.youtube.com/watch?v=mN56EauPhPQ
[22:08:33] <bayaz> Title: Finding Space For Sound: Environmental Acoustics in Tom Clancy's The Division 2 
[22:08:34] *** Quits: akevinhuang (~thekevinh@user/thekevinhuang) (Ping timeout: 260 seconds)
[22:09:59] <pyzozord> I think that good sound is more immersive than visuals
[22:10:23] <[itchyjunk]> beaky, aren't you just taking about modeling in the sense of physics?
[22:10:38] <[itchyjunk]> given a system and initial condition, you figure out the state of the system at any given time?
[22:11:04] <Hash> https://github.com/EyNuel/cTraceo
[22:11:05] <bayaz> Title: GitHub - EyNuel/cTraceo: An Underwater Acoustic Raytracing Model. Check our wiki for more information 
[22:11:24] *** Quits: Lohengrin (~fredo@user/lohengrin) (Quit: WeeChat 3.2.1)
[22:11:28] <beaky> nice i have to try that then
[22:11:51] <beaky> raytrace everything
[22:11:55] <pyzozord> are you going to add sound effects to your tea database?
[22:12:25] <beaky> yes the sounds of pouring tea, boiling water, sipping and slurping
[22:14:08] *** Quits: Quietwalker (~X@cpe-70-113-121-167.austin.res.rr.com) (Ping timeout: 252 seconds)
[22:15:01] <[itchyjunk]> beaky, there is also the neural network approaches to sound these days
[22:15:23] <[itchyjunk]> you can apply CNN to sounds it the model learns it just like it would with images
[22:15:44] <[itchyjunk]> and can generate synthetic sounds that way. 
[22:16:31] <[itchyjunk]> https://gvpress.com/journals/IJHIT/vol13_no1/1.pdf
[22:16:31] <bayaz> Type: application/pdf Size: 405.1 kB 
[22:17:35] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Quit: leaving)
[22:18:29] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[22:18:30] *** Quits: Thedarkb (~Thedarkb@2001:bb6:b403:e042:b812:bb3f:25c8:9173) (Read error: Connection reset by peer)
[22:18:45] *** Joins: Crescendo (~Crescendo@user/crescendo)
[22:18:58] *** Joins: Thedarkb (~Thedarkb@2001:bb6:b403:e042:b812:bb3f:25c8:9173)
[22:19:44] *** fdauihfu is now known as Irado
[22:21:23] <diophantoz> maybe if you raytrace a ray so you trace while you trace
[22:21:26] *** Joins: quartz (~quartz@user/quartz)
[22:25:17] <diophantoz> sound synthesis is quite interesting
[22:25:23] <diophantoz> lots of different approaches
[22:26:07] <diophantoz> DSPs for instance
[22:27:02] *** Joins: ralinux (~saje@37.156.188.75)
[22:28:18] <diophantoz> https://en.wikipedia.org/wiki/Direct_digital_synthesis
[22:28:18] <bayaz> Title: Direct digital synthesis - Wikipedia 
[22:31:31] <InPhase> diophantoz: Also, banging on pots and pans works.
[22:31:56] <diophantoz> yes but that is analog
[22:32:39] <InPhase> Aye, but so are all your speakers and headphones.  :)
[22:32:51] <diophantoz> yes but they relay sound
[22:32:59] <diophantoz> not create it
[22:33:00] <pyzozord> InPhase: that's silly, pans don't have usb ports
[22:33:16] <InPhase> pyzozord: You don't know if I have a smart pan, don't judge.  :)
[22:33:24] <pyzozord> :D
[22:35:23] *** Quits: ralinux (~saje@37.156.188.75) (Quit: Leaving)
[22:39:42] <pyzozord> merijn: are you around?
[22:39:44] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[22:39:49] <pyzozord> ah I guess he is not
[22:40:50] *** Joins: Macuser (~Macuser@216.30.159.201)
[22:41:23] *** Joins: Alex123 (~Adium@2603-8000-f640-d482-6c2e-18ba-c8b2-2518.res6.spectrum.com)
[22:41:24] *** Quits: Alex123 (~Adium@2603-8000-f640-d482-6c2e-18ba-c8b2-2518.res6.spectrum.com) (Client Quit)
[22:42:42] <jinsun_> lol, just left when you asked
[22:43:20] *** Joins: pulse_ (~pulse@user/pulse)
[22:43:47] *** Quits: pulse (~pulse@user/pulse) (Killed (NickServ (GHOST command used by pulse_)))
[22:43:49] *** pulse_ is now known as pulse
[22:43:52] <GeDaMo> Probably just a coincidence :|
[22:44:08] <pyzozord> I'm guessing he was afk but left his client on recording or something and I triggered maybe some kind of bug and his client crashed
[22:45:49] *** Quits: poww0wmus1c (~poww0wmus@gateway/tor-sasl/poww0wmus1c) (Quit: leaving)
[22:47:32] <diophantoz> wow
[22:47:45] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:47:55] *** Joins: tangy (~tangy@user/tangy)
[22:47:56] <diophantoz> you ddosed him with a nick highlight
[22:48:21] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:c922:9c5f:802e:695a)
[22:48:43] *** Joins: Guest3758 (~Guest@181.91.157.142)
[22:48:52] *** Quits: cm007magnum (~Rheanna@101.89.207.55) (Remote host closed the connection)
[22:48:53] <pyzozord> dos'ed maybe yeah, maybe he had the client set on recordingf whenever he gets pinged, but something was misconfigured and the client could actually record
[22:49:41] <pyzozord> or just funny timing, happens way more then one would assume
[22:50:19] *** Quits: xavie (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 252 seconds)
[22:50:55] *** Joins: cm007magnum (~Rheanna@218.78.77.129)
[22:52:10] <diophantoz> what do you mean by record?
[22:52:26] *** Joins: Auron (~Auron956@user/auron)
[22:52:54] <pyzozord> just log whatever people were saying to him
[22:54:49] *** Joins: node1 (~node1@user/node1)
[22:55:54] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[22:56:59] *** Joins: blahboybaz (~blahboyba@73.109.58.164)
[22:57:59] *** Joins: X-Scale` (~ARM@92.250.96.13)
[23:00:13] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 250 seconds)
[23:01:54] *** X-Scale` is now known as X-Scale
[23:08:35] *** Quits: blahboybaz (~blahboyba@73.109.58.164) (Ping timeout: 252 seconds)
[23:08:48] *** Joins: blahboybaz (~blahboyba@73.109.58.164)
[23:10:09] *** Quits: dan01 (~dan01@2a02:2f09:3306:1d00:85c4:e099:584e:633) (Read error: Connection reset by peer)
[23:11:14] *** Joins: Lohengrin (~fredo@user/lohengrin)
[23:14:09] *** Quits: magla (~gelignite@55d434bd.access.ecotel.net) (Quit: Stay safe!)
[23:14:37] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[23:20:06] *** Joins: anovick (~anovick@2a0d:6fc0:18e5:4900:98e9:2c6f:1a52:52c0)
[23:22:50] <diophantoz> i see
[23:22:59] *** Joins: inky (~inky@5.77.132.34)
[23:25:31] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:d5e9:9264:173e:145a)
[23:25:35] *** Quits: tangy (~tangy@user/tangy) (Remote host closed the connection)
[23:27:48] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Quit: Leaving.)
[23:30:00] *** Quits: inky (~inky@5.77.132.34) (Ping timeout: 265 seconds)
[23:31:14] *** Quits: defiant (~defiant@user/defiant) (Quit: defiant)
[23:31:52] *** Joins: Alex123 (~Adium@cpe-76-91-121-195.socal.res.rr.com)
[23:33:02] *** Quits: blahboybaz (~blahboyba@73.109.58.164) (Ping timeout: 260 seconds)
[23:33:25] *** Joins: hexfive (~eric@50.35.83.177)
[23:38:21] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 250 seconds)
[23:39:47] *** Quits: cm007magnum (~Rheanna@218.78.77.129) (Remote host closed the connection)
[23:40:41] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[23:40:44] *** Quits: Lohengrin (~fredo@user/lohengrin) (Quit: WeeChat 3.2.1)
[23:40:46] *** Joins: cm007magnum (~Rheanna@101.91.214.30)
[23:40:48] *** Quits: hexfive (~eric@50.35.83.177) (Quit: WeeChat 3.0.1)
[23:41:15] *** Quits: user51 (~user51@176.228.115.184) (Remote host closed the connection)
[23:45:04] *** Quits: Haxxa (~Haxxa@116-255-6-75.ip4.superloop.com) (Quit: Haxxa flies away.)
[23:47:47] *** Joins: Haxxa (~Haxxa@116-255-6-75.ip4.superloop.com)
[23:49:50] *** Joins: Hax0r (~Hax0r@87.101.192.39)
[23:50:30] *** Joins: soapsudsxx (~soapsudsx@141.193.188.134)
[23:53:54] *** Quits: horseface_ (~horseface@125-63-6-2.ip4.superloop.com) (Quit: Leaving)
[23:54:14] *** Joins: horseface (~horseface@125-63-6-2.ip4.superloop.com)
[23:54:22] *** Joins: flaknet99 (~0x100@32.211.211.39)
[23:57:33] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 265 seconds)
[23:57:50] *** Quits: tane (~tane@dslb-002-201-234-068.002.201.pools.vodafone-ip.de) (Quit: Leaving)
[23:58:05] *** Quits: password2 (~password@user/password2) (Ping timeout: 252 seconds)
[23:58:54] *** Quits: eem (~eem@user/eem) (Quit: WeeChat 3.3)
[23:59:11] *** Joins: eem (~eem@user/eem)
