[00:00:16] *** Joins: djhankb (~djhankb@208.113.164.68)
[00:00:16] *** Quits: tmart (~tmart@47-220-166-159.gtwncmkt04.res.dyn.suddenlink.net) (Read error: Connection reset by peer)
[00:00:37] *** Joins: tmart (~tmart@47-220-166-159.gtwncmkt04.res.dyn.suddenlink.net)
[00:00:53] <tdsmith> Guest21: i'm not sure what you'd do other than have the function you wrap validate the arguments it receives
[00:01:21] *** Joins: Guest88 (~Guest88@2a01:799:149d:d900:9795:4679:d5fb:5acc)
[00:01:34] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[00:01:58] <sr71919> Hello all, I am trying to create a async task for every message(task) i receive in mqtt topic
[00:02:04] *** Quits: paul424 (~tom@ip-5-172-236-117.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[00:02:18] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[00:02:37] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[00:02:51] *** Quits: amogorkon (~amogorkon@user/amogorkon) (Ping timeout: 252 seconds)
[00:02:54] <sr71919> im using asyncio python to create async functions that need to be called when task arrives from mqtt topic
[00:04:08] <sr71919> how do i create new tasks dynamically (that will call async functions dynamically) - im stuck with this as the logic is implemented in python otherwise i need to rewrite in js for async/await/promise
[00:04:26] <bjs> sr71919: asyncio has a create_task function
[00:05:31] <sr71919> bjs: yes create_task function still need to be called via gather(*tasks) but gather is blocking
[00:05:39] <bjs> sr71919: no you don't need to call gather
[00:06:16] <bjs> create_task will create the task for you (and returns it)
[00:06:51] <sr71919> bjs: kindly explain - my requirement is for every task(message arriving from mqtttopic) i just need to call a async fn immediately
[00:07:26] <bjs> sr71919: well you can either `await the_async_fn()` or you can `create_task(the_async_fn())`
[00:07:28] <bjs> which do you wanT?
[00:07:34] *** Joins: stdout (~stdout@2605:ab80:b000:7202:3e12:af82:936c:2ff6)
[00:07:45] <errst> Can someone explain why this isn't working? And how can I make it work? -> https://gist.github.com/errst/b9675aecbb4c54504b4e5e3a3304eb34
[00:08:48] <EdFletcher> what is "isn't working"? what error is it printing? did it blow your computer up?
[00:09:00] <sr71919> bjs: which one will start every coroutine (for every task) instantaneously and run concurrently(no waiting between tasks) ?
[00:09:09] <Guest21> tdsmith well im trying to decouple the validation logic from the function f, so it wont raise an exception in there (since i just want keep the program flow at CLI level), prolly im better off wraping  that function f with another function g that does the validation and call f and wrap that function g with fire.
[00:09:19] <bjs> sr71919: neither that's not how async works, in either Python or JS
[00:09:23] *** Joins: Guest8842 (~Guest88@2a01:799:149d:d900:9795:4679:d5fb:5acc)
[00:09:31] *** Quits: Guest8842 (~Guest88@2a01:799:149d:d900:9795:4679:d5fb:5acc) (Client Quit)
[00:09:44] <tdsmith> Guest21: that sounds right, yeah
[00:09:52] <bjs> sr71919: so I'm not sure what you're asking,  create_task will create a task and add it to the "event loop" so it can be scheduled alongwith everything else
[00:10:05] <tdsmith> Guest21: if you're concerned about type validation you might like https://typer.tiangolo.com/ as well
[00:10:34] <sr71919> bjs: currently i have made all my sunc functions as async functions. and when i run them manually (in sequence of task add and gather) it works fine
[00:10:37] *** Quits: Anova_ (~Anova@199-48-178-143.ftth.glasoperator.nl) (Read error: Connection reset by peer)
[00:10:52] <bjs> sr71919: the high-level picture with async Python is that inside asyncio is a big bag of "tasks", and each time you reach an `await` the current task is paused and it switches to another one
[00:10:59] <bjs> create_task is what creates those tasks and adds them to the big bag
[00:11:07] <errst> EdFletcher: Updated gist with the err message
[00:11:16] *** Quits: filename (~kilitary@kilitary.xyz) (Remote host closed the connection)
[00:11:18] *** Quits: kmh (~kmh@2a00:6020:5004:6800:7cf7:18f6:edcc:82b9) (Read error: Connection reset by peer)
[00:11:30] *** Joins: kmh (~kmh@2a00:6020:5004:6800:7cf7:18f6:edcc:82b9)
[00:11:36] <errst> it says: AttributeError: 'list' object has no attribute 'name'
[00:11:36] <sr71919> bjs: but in sequence of tasks need to be called based on the type of message from mqtt topic
[00:12:00] <bjs> sr71919: I really don't understand why create_task(the_async_fn()) isn't what you want
[00:12:05] *** Joins: filename (~kilitary@188.68.215.221)
[00:12:07] <errst> I don't know why I do get this error. Dealing with almos half the day but no luck
[00:12:28] <Guest21> tdsmith thanks awesome!!
[00:12:56] <bjs> errst: well your ProfileConverter says `return ProfileB(source.name)` but you pass a list on line39
[00:13:06] <tdsmith> errst: oh, you're expecting type dispatching? typing.overload doesn't do that by default -- it assumes a single implementation
[00:13:06] <jinsun__> errst: well lists really don't have .name, so you need to fix the ProfileConverter.convert method so that it can handle lists
[00:13:20] <errst> tdsmith: yes
[00:13:22] <bjs> errst: what did you want ProfileConvert's convert to do?
[00:13:26] *** Joins: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net)
[00:14:19] <tdsmith> errst: you might be able to do this with functools.singledispatch but i'm not sure the semi-abstract method thing will work
[00:14:20] <errst> I want profile converter be able to convert list of profiles by using the function that gets single profile
[00:14:36] <bjs> errst: maybe you want a convert_single method instead?
[00:14:49] <errst> bjs: How?
[00:14:59] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[00:15:27] <bjs> errst: I mean, maybe you want multiple methods. Like convert() that converts a list, and convert_single() that converts just 1 thing
[00:15:28] <errst> tdsmith: Already tried but I think singledispatch is not working with the inheritance
[00:15:49] *** Quits: mcleuder (~mcleuder@gateway/tor-sasl/mcleuder) (Quit: mcleuder)
[00:16:14] *** Quits: kaste (~kaste@user/kaste) (Ping timeout: 250 seconds)
[00:16:47] <errst> bjs: Well, this is exactly what I'm trying to avoid actually. There is already an impl. for single conversion. I think, I should be able to use that function to perform on a list right?
[00:17:00] *** Quits: Throgkt (~Throgkt@user/throgkt) (Quit:  )
[00:17:02] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:17:10] *** Joins: dontyouloveshort (~dontyoulo@p200300d21f4406015485da917ded2a49.dip0.t-ipconnect.de)
[00:17:13] <sr71919> bjs: the problem is the async func calls need to be made again from a async function only (but i have a mqtt subscriber that is not asyncio ready)
[00:17:14] <bjs> errst: well then you have to write some code that detects it's a list, and calls that function.
[00:17:31] <bjs> sr71919: so what's wrong with create_task?
[00:17:46] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Ping timeout: 272 seconds)
[00:18:02] *** Joins: Throgkt (~Throgkt@user/throgkt)
[00:18:15] *** Quits: llanhmod_ (~personnel@user/domhnall/x-2887755) (Ping timeout: 252 seconds)
[00:18:48] *** Quits: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[00:19:21] <errst> bjs: I'm trying but couldn't figure out how I can do it in python without some workaround.
[00:19:42] *** Joins: Viewday1156 (~Viewday@user/viewday)
[00:20:01] <bjs> errst: well Python doesn't really work this way, so that's unsurprising.  You can have a big `if isinstance(source, list): ...` if-elif block
[00:20:02] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[00:20:12] <errst> jinsun__: There is actually a function that handles list, if you look at the second convert function; it simply applies the first function to a given list
[00:20:19] *** Joins: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net)
[00:20:26] <tdsmith> errst: yeah probably you want to have a concrete convert() on the parent class that calls out to an abstract convert_one() implemented on the child
[00:20:30] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[00:21:01] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 240 seconds)
[00:21:23] *** Quits: Guest88 (~Guest88@2a01:799:149d:d900:9795:4679:d5fb:5acc) (Quit: Client closed)
[00:21:38] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[00:21:51] <sr71919> bjs: this is the code https://bpa.st/LPIA that. works fine when run, but the tasks need to be started dynamically
[00:22:09] <bjs> sr71919: yeah create_task creates tasks dynamically
[00:22:10] <bjs> that's what it does
[00:22:33] <bjs> sr71919: create_task(some_async_fn()) creates a task and adds it to the pool of tasks that are "running"
[00:22:37] <errst> I guess, yeah but I'll try to do a re-research with the hope that I can find an answer to my question
[00:22:45] <jinsun__> errst: that's not how inheritance or overloads work, you only have one method with a particular name in a class, and if you define that in a subclass then the one in base class gets overridden, so your ProfileConverter has only one convert method which cannot handle lists
[00:23:00] <bjs> sr71919: I'm not really understanding the problem you see here (or why you have gather()s here)
[00:23:06] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[00:23:14] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl487ivan94mkfwvl.ipv6.telus.net)
[00:23:32] <bjs> sr71919: or what you mean by "dynamically" really, because this gather() code is also creating tasks dynamically (it's just also immediately waiting for them to finish)
[00:23:32] *** Quits: Viewday115 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[00:23:33] *** Viewday1156 is now known as Viewday115
[00:23:41] <Swayze> unless it accepts diff params then its polymorphism
[00:23:47] <jinsun__> errst: overload doesn't do anything it is just there for type checking, only the real implementation is called
[00:23:47] *** Joins: jpn (~jpn@user/jpn)
[00:24:06] <bjs> sr71919: `await gather(a(), b())` is basically just going `t1=create_task(a()); t2=create_task(b()); await t1; await t2`
[00:24:13] <errst> jinsun__: How can I make sure that it doesn't get overriden? The second function?
[00:24:17] <sr71919> bjs: the reason for having gather there was, there are some tasks that has dependancy for other tasks to finish, and some tasks that doesnt have dependancy need to be run concurrently so used gather for those independant tasks
[00:24:28] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[00:25:07] <jinsun__> errst: simpler way would be to use a different name for the one that handles one item and the one that handles multiple
[00:25:22] *** Joins: pycurious (~Adium@user/pycurious)
[00:25:23] <sr71919> bjs: this is a code that controls a hardware and the hardware has some tasks that can be independant and some tasks that need to be started only after prev task completion
[00:25:44] <jinsun__> errst: or you can have a big if else in one function that handles both lists and single items
[00:26:30] *** Joins: Guest60 (~Guest60@46.1.229.209)
[00:27:20] <jinsun__> well you can still have a different function for handling single items this way, the function with the if-else would just call that
[00:27:30] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 250 seconds)
[00:27:41] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[00:27:45] <errst> i might go with the second approach
[00:28:09] <bjs> sr71919: well okay,  i still don't really see what the actual problem you're trying to solve is but create_task is the function asyncio provides to 'dynamically' create a task (aka to "run in the background") without waiting for it to finish
[00:28:13] <errst> thanks everyone for the answers
[00:28:22] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 250 seconds)
[00:29:16] <bjs> sr71919: and all the other mechanisms asyncio provides (like gather and wait) are just create_task()ing things and then awaiting them in the right order or at the right time or with the right callbacks or whateveR)
[00:29:27] *** Quits: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[00:30:45] <sr71919> bjs: there are 4 arms, each arm can handle 3 types of tasks - but if we do give the tasks in sync mode (it takes lot of time - wasted sleeps) - so using asyncio im now able to switch between idle time and make arms work in parallel
[00:31:41] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[00:32:22] <SnoopJ> nedbat, yes, dinghy ran perfectly well after I figured out what was wrong with my version of jinja2
[00:32:23] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Client Quit)
[00:32:51] *** Quits: Throgkt (~Throgkt@user/throgkt) (Quit:  )
[00:33:05] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[00:33:19] <sr71919> bjs: the challenge is the tasks need to be sent from external system and the async functions need to be called on-demand when a action-message arrives in mqtt
[00:33:25] *** Quits: toxictrash (~toxictras@host-91-237-158-49.anfa.net.pl) (Ping timeout: 256 seconds)
[00:33:25] *** Joins: darksun (~darksun@user/darksun)
[00:33:27] *** Joins: Throgkt (~Throgkt@user/throgkt)
[00:33:33] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[00:33:57] *** Joins: jazzy (~jaziz@user/jaziz)
[00:34:31] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[00:35:45] <sr71919> can i call async functions, few to run immediately and few to wait for existing tasks to complete
[00:36:06] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[00:36:29] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[00:36:33] *** Joins: aoapteek (~seymon@85.203.44.165)
[00:37:04] <Swayze> python does support polymorphism
[00:37:12] *** Joins: _filename (~kilitary@188.242.105.134)
[00:37:15] *** Joins: toxictrash (~toxictras@host-91-237-158-49.anfa.net.pl)
[00:37:16] <Swayze> so you could have one method name but 2 diff calling signatures
[00:37:43] *** Joins: murdoc_x01 (~nitestryk@98.42.49.72)
[00:37:49] <Swayze> (overloading)
[00:37:53] <bjs> sr71919: isn't that what your gather() code does already?
[00:38:18] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[00:38:27] <murdoc_x01> ::
[00:38:44] *** Quits: Guest60 (~Guest60@46.1.229.209) (Quit: Client closed)
[00:39:00] <sr71919> bjs: i just changes from gather to create_task but it runs in sequence (not in background immediately) - https://bpa.st/SBSQ am i doing any step wrong?
[00:39:09] *** Quits: murdoc_x01 (~nitestryk@98.42.49.72) (Client Quit)
[00:39:42] *** Quits: kiirevurr (~seymon@85.203.44.165) (Ping timeout: 252 seconds)
[00:40:30] *** Quits: filename (~kilitary@188.68.215.221) (Ping timeout: 250 seconds)
[00:40:33] *** Joins: murdoc_x01 (~root@98.42.49.72)
[00:40:33] *** _filename is now known as filename
[00:41:21] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[00:41:21] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[00:41:34] <sr71919> here https://bpa.st/SBSQ when i have the await asyncio.create_task(todo4()) and await asyncio.create_task(todo1()) these are blocking not running in parallel (not running in background concurrently)
[00:41:56] *** Joins: Fiji_ (~Fiji@user/fiji)
[00:42:09] *** Joins: horner (~horner@host86-153-58-154.range86-153.btcentralplus.com)
[00:42:30] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[00:42:40] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[00:42:42] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[00:42:56] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[00:44:06] *** Joins: nitestryker (~nitestryk@98.42.49.72)
[00:44:11] *** Quits: nitestryker (~nitestryk@98.42.49.72) (Client Quit)
[00:44:39] *** Quits: Fiji- (~Fiji@user/fiji) (Ping timeout: 252 seconds)
[00:45:07] *** Joins: nitestryker (~nitestryk@98.42.49.72)
[00:45:16] *** Quits: murdoc_x01 (~root@98.42.49.72) (Quit: WeeChat 3.4)
[00:46:08] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 250 seconds)
[00:46:11] <bjs> sr71919: you don't have to await them
[00:46:22] <bjs> and certainly not immediately,  you can make many tasks then await them later
[00:46:49] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[00:46:55] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 240 seconds)
[00:47:12] *** Parts: nitestryker (~nitestryk@98.42.49.72) ()
[00:48:03] *** Joins: murdoc_x01 (~nitestryk@98.42.49.72)
[00:48:09] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:48:20] <sr71919> bjs: if i remove the await https://bpa.st/SBSQ then these tasks are never started
[00:48:35] <bjs> sr71919: well you need *an* await somewhere in your program otherwise it's not async at all
[00:49:10] *** Joins: alienhead (~solas@user/alienhead)
[00:49:10] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[00:49:38] <bjs> sr71919: you can emulate gather for example by going `t4 = create_task(todo4()); t1 = create_task(todo1())` to create both tasks then go `await t4; await t1` to wait for them to both finish
[00:50:04] <bjs> but of course you don't have to wait for both of them, or either of them, or you could add callbacks instead, or do whatever
[00:51:30] *** Quits: murdoc_x01 (~nitestryk@98.42.49.72) (Quit: WeeChat 3.4)
[00:51:32] *** Quits: Forsaken87 (~quassel@2a02:908:1866:e360:87b2:598e:5ed5:8ca9) (Quit: No Ping reply in 180 seconds.)
[00:51:42] *** Quits: Guest21 (~Guest21@85.137.0.51.dyn.user.ono.com) (Quit: Client closed)
[00:52:36] *** Joins: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[00:53:05] *** Joins: murdoc_x01 (~nitestryk@98.42.49.72)
[00:53:38] *** Joins: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net)
[00:55:33] <sr71919> bjs: thanks, ` await t4; await t1 ` just does what gather does adds more clarity - but now how do i call these tasks dynamically (in different sequence?)
[00:55:47] *** Joins: Forsaken87 (~quassel@ip-037-201-193-116.um10.pools.vodafone-ip.de)
[00:55:48] <bjs> sr71919: i still don't know what you mean by "call these tasks dynamically"
[00:56:37] *** Quits: humbertowoody (~humbertow@189.236.30.245) (Ping timeout: 240 seconds)
[00:57:13] *** Quits: impermanence (~impermane@c-75-73-193-204.hsd1.mn.comcast.net) (Quit: Connection closed)
[00:57:50] *** Quits: cincoswim (~cincoswim@cm-72-241-174-56.buckeyecom.net) (Ping timeout: 250 seconds)
[00:58:02] <sr71919> bjs:  task sequence for this hardware can be - [doA, doY, doJ, doA, doB] or [doB, doY, doA, doA,]  or some other sequence of tasks - so how do i parse such list and create async function calls for different task sequences?
[00:58:18] <bjs> sr71919: just call create_task() for each async function you want to run
[00:58:39] <bjs> or really, I still don't know why gather() doesn't work for you? You can just pass it whatever async functions you want to run
[00:58:50] *** Joins: c4017w_ (~c4017@209.52.68.8)
[00:59:12] <bjs> both of these (gather and create_task) are already as "dynamic" as you can get, they create the actual task there and then at runtime
[00:59:22] <nedbat> SnoopJ: did you arleady have a GITHUB_TOKEN environment variable? I forgot to mention it in the readme
[00:59:34] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::c) (Quit: Konversation terminated!)
[00:59:40] *** Joins: kaste (~kaste@user/kaste)
[00:59:52] <SnoopJ> nedbat, no, but I figured it probably existed and did some light spelunking
[01:00:09] <SnoopJ> It would have been helpful if it was in the readme though :)
[01:00:09] *** Joins: thocrates (~user@cpe-184-57-54-233.columbus.res.rr.com)
[01:00:11] <nedbat> SnoopJ: ok :)
[01:01:19] *** Quits: murdoc_x01 (~nitestryk@98.42.49.72) (Quit: WeeChat 3.4)
[01:02:00] *** Parts: thocrates (~user@cpe-184-57-54-233.columbus.res.rr.com) (WeeChat 3.0)
[01:02:20] <SnoopJ> nedbat, I'm thinking it might be interesting to run as a Jenkins job, having digests for large efforts could be kind of useful
[01:02:28] <sr71919> thanks bjs, gather works as expected, but how do create gather() calls or create_task calls by parsing a list or subscribing to a topic ?
[01:02:39] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[01:02:55] <SnoopJ> (I'm thinking of something roughly like a digest for a single Jira epic, a living document for work on $thing_that_spans_multiple_tickets
[01:03:02] <SnoopJ> )
[01:03:07] <bjs> sr71919: I mean these sound like unrelated problems.  "parse" the list to get the async fns you want to run,  then you just give those fns to gather()
[01:03:07] *** Joins: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net)
[01:03:31] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[01:04:05] <bjs> sr71919: the first part doesn't involve asyncio/gather at all, it just means making a list or something
[01:04:33] <bjs> and then you can `await gather(*that_list)`  when you want to run them all
[01:04:40] *** Joins: cincoswim (~cincoswim@cm-72-241-33-17.buckeyecom.net)
[01:05:12] <bjs> sr71919: (or instead of a list of coroutines + a gather,  just call create_task whenever you wanted)
[01:05:33] *** Quits: LiftLeft2 (~LiftLeft@airstream-nelson-fiber-dhcp-007-17.dsl.airstreamcomm.net) (Ping timeout: 252 seconds)
[01:06:51] *** Quits: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[01:07:01] *** Joins: semeion (~semeion@user/semeion)
[01:08:17] *** Quits: Scarecr0w (~intern0t@user/scarecr0w) (Ping timeout: 240 seconds)
[01:09:23] *** Joins: tetravus (~tetravus@c-71-231-69-112.hsd1.wa.comcast.net)
[01:09:35] *** Joins: humbertowoody (~humbertow@189.236.30.245)
[01:10:05] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[01:10:17] *** Quits: bitkiller (~bitkiller@user/bitkiller) (Ping timeout: 240 seconds)
[01:10:36] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[01:11:01] <sr71919> bjs: i tried this and still doesnt start tasks as expected - https://bpa.st/Q65A
[01:11:40] <bjs> sr71919: `await` does what it says on the tin: it waits.  If you immediately wait for the task to finish that you just created, then it'll wait.
[01:11:52] *** Joins: mugen (~mugen@gateway/tor-sasl/mugen)
[01:13:14] <sr71919> bjs: also another issue is the mqtt subscribe is not asyncio compatible ?
[01:13:43] *** Joins: kiras (~kiras@user/kiras)
[01:13:55] *** Quits: mug3n_ (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[01:14:19] <bjs> sr71919: well,  then this whole approach seems a bit of a dead end, unless you can find one that understands asyncio
[01:15:33] <kiras> hello, I have this code piece that downloads files from a web address. if I download them to the same directory as the code file's, all works fine. but I would like to download them to a different dir, therefore I added this part to the code, yet i get the error as shown; https://bpa.st/S7GA
[01:15:58] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Read error: Connection reset by peer)
[01:17:23] <ChrisWarrick> kiras: why are you mixing wget and urlretrieve?
[01:17:43] <Guest54> I have a class Foo with a bunch of attributes - bar and baz. I have a function, get_foo() that returns a List[Foo]. I want to do something like this: `for (bar, baz) in get_foo(): ....` - what is the right way to make my Foo "extractable" like that?
[01:17:59] *** Joins: jpn (~jpn@user/jpn)
[01:18:13] <kiras> the line 18 in the error is supposed to be 10
[01:18:15] <kiras> 19
[01:19:14] <kiras> ChrisWarrick, wget was in the original code before I decided to download them elsewhere. then I added urlretrieve. honestly I am not too familiar with it yet
[01:19:44] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:48c2:4ab7:8578:594d)
[01:19:59] <kiras> therefore I am not sure if the link and path args are correctly placed
[01:20:03] <ChrisWarrick> kiras: pick one tool — either wget (which is typically a bad idea), urllib.request, or requests — and just use that
[01:20:26] <ChrisWarrick> kiras: you’re passing the output of subprocess.call to urlretrieve, which cannot be right
[01:22:29] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[01:22:32] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 250 seconds)
[01:22:55] *** Quits: andreasbuhr (~quassel@p5dcf991b.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:24:25] <kiras> ChrisWarrick, simply removed the 'wget' line, and all works as I wanted. thank you!
[01:25:36] <kiras> seemed obvious that it was redundant after you told me :)
[01:25:57] *** Joins: emda[m] (~emdamatri@2001:470:69fc:105::1:d93a)
[01:26:28] *** Joins: oriba (~oriba@dynamic-077-011-005-242.77.11.pool.telefonica.de)
[01:26:41] *** Quits: schumaml (~schumaml@dslb-178-002-181-051.178.002.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[01:27:56] <bmr> ChrisWarrick: whatever do you mean, that can not be right?
[01:28:16] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[01:28:17] <bmr> sounds about as right as INVADING UKRAINE -- cough... sorry, no politics... well.. Don't do it.
[01:28:46] *** Joins: funhouse (~funhouse@user/funhouse)
[01:29:14] *** Joins: schumaml (~schumaml@dslb-094-216-174-064.094.216.pools.vodafone-ip.de)
[01:29:19] <ChrisWarrick> bmr: subprocess.call gives you the return code of a process. It is not logical for urlretrieve to do anything meaningful with wget’s return code.
[01:31:48] <kiras> interestingly, every time I was running the pasted code, first one or two packages were downloaded, and thereafter came the error
[01:32:30] *** Quits: leizy (~n0cturna1@h155173.upc-h.chello.nl) (Ping timeout: 252 seconds)
[01:32:49] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[01:33:08] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[01:33:13] *** Joins: murdoc_x01 (~nitestryk@98.42.49.72)
[01:33:25] *** Quits: PocketKiller (pocket@user/pocketkiller) (Quit: *evaporates*)
[01:33:27] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[01:33:36] *** Joins: PocketKiller (pocket@user/pocketkiller)
[01:34:09] *** Quits: Giovanni (~Giovanni@176.55.170.26) (Ping timeout: 252 seconds)
[01:34:14] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:34:43] *** Joins: leizy (~n0cturna1@h155173.upc-h.chello.nl)
[01:37:34] <sr71919> bjs: getting a async-mqtt client and trying subscribe
[01:38:09] *** Quits: aslicedbanjo (~aslicedba@host86-160-16-27.range86-160.btcentralplus.com) (Quit: Leaving.)
[01:38:18] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[01:40:04] *** Joins: gabagool (~user@2a01:cb1d:40b:9b00:1cb1:3840:75ca:3c80)
[01:42:37] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[01:44:36] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[01:44:37] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[01:44:57] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[01:49:04] *** Joins: Guest28 (~Guest28@2601:646:c600:1aa0:c9b5:9445:119f:b46)
[01:49:16] <nedbat> SnoopJ: i have a nightly github action with a dinghy digest. the result is published with github pages, and I did some git stuff to keep old ones from accumulating.
[01:50:12] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.4)
[01:50:48] *** Quits: agumonke` (~user@88.163.231.79) (Ping timeout: 256 seconds)
[01:50:48] *** Joins: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[01:50:49] <kiras> however, whereas subprocess with wget downloads seamlessly, urlretrieve gets interrupted frequently.
[01:50:56] *** hexa- is now known as h
[01:51:34] *** Quits: lessshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Read error: Connection reset by peer)
[01:51:40] *** Joins: parv (~quass@user/parv)
[01:51:42] *** Quits: Guest28 (~Guest28@2601:646:c600:1aa0:c9b5:9445:119f:b46) (Client Quit)
[01:53:09] *** h is now known as hexa-
[01:54:25] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-4da4-5828-7bb7-83bf.res6.spectrum.com) (Quit: jarthur)
[01:55:02] *** Joins: src (~src@user/src)
[01:55:07] *** Quits: gabagool (~user@2a01:cb1d:40b:9b00:1cb1:3840:75ca:3c80) (Remote host closed the connection)
[01:56:33] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[01:56:36] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[01:57:22] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[01:59:35] *** Joins: c4017w__ (~c4017@209.52.68.8)
[01:59:36] *** Quits: _xor (~xor@dsl-50-5-233-169.fuse.net) (Read error: Connection reset by peer)
[02:00:04] *** Joins: _xor (~xor@dsl-50-5-233-169.fuse.net)
[02:01:11] *** Quits: darksun (~darksun@user/darksun) (Quit: Lost terminal)
[02:01:35] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[02:01:43] *** Quits: martums59 (~martums@user/martums) (Read error: Connection reset by peer)
[02:02:27] *** Quits: src (~src@user/src) (Quit: leaving)
[02:02:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[02:03:19] *** Joins: src (~src@user/src)
[02:04:26] *** Quits: src (~src@user/src) (Client Quit)
[02:04:34] *** Quits: schumaml (~schumaml@dslb-094-216-174-064.094.216.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[02:05:15] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[02:05:43] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:d044:fcb7:bdbc:a073) (Ping timeout: 268 seconds)
[02:05:56] *** Joins: src (~src@user/src)
[02:06:30] *** Joins: schumaml (~schumaml@ipservice-092-211-200-190.092.211.pools.vodafone-ip.de)
[02:06:52] *** Joins: Scarecr0w (~intern0t@user/scarecr0w)
[02:07:10] *** Quits: cincoswim (~cincoswim@cm-72-241-33-17.buckeyecom.net) (Ping timeout: 250 seconds)
[02:09:45] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[02:10:00] *** Quits: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182) (Remote host closed the connection)
[02:11:42] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:12:07] *** Joins: jpn (~jpn@user/jpn)
[02:12:37] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[02:12:48] *** Quits: humbertowoody (~humbertow@189.236.30.245) (Ping timeout: 250 seconds)
[02:12:56] *** Joins: Barones (~Barones@user/Barones)
[02:14:15] *** Joins: cincoswim (~cincoswim@cm-72-241-33-17.buckeyecom.net)
[02:14:54] *** Joins: humbertowoody (~humbertow@189.236.30.245)
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:20] *** Quits: cincoswim (~cincoswim@cm-72-241-33-17.buckeyecom.net) (Client Quit)
[02:15:34] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Read error: Connection reset by peer)
[02:16:15] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:22] *** Joins: devish (~devish@205.251.233.53)
[02:16:30] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 252 seconds)
[02:16:31] *** Quits: src (~src@user/src) (Quit: leaving)
[02:16:40] *** Joins: src (~src@user/src)
[02:18:29] *** Quits: Mathisen (mathisen@about/windows/staff/mathisen) (Quit: ZNC 1.8.2 - https://znc.in)
[02:19:24] *** Quits: humbertowoody (~humbertow@189.236.30.245) (Ping timeout: 240 seconds)
[02:19:57] *** Quits: src (~src@user/src) (Client Quit)
[02:20:06] *** Joins: src (~src@user/src)
[02:21:23] *** Joins: humbertowoody (~humbertow@189.236.30.245)
[02:21:42] *** Joins: Mathisen (mathisen@about/windows/staff/mathisen)
[02:23:03] *** Quits: nyah (~nyah@05453449.skybroadband.com) (Remote host closed the connection)
[02:23:51] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[02:25:13] <Guest54> I have a dataclass with 4 optional attributes. I want to enforce a condition that if all optional attributes are None, then raise exception. What is the best way to do this? I'm thinking I could plant the exception in ctor, but wondering if there was a way to represent this in type checking
[02:25:59] <nedbat> Guest54: that doesn't sound like something type checking can do
[02:26:45] <SnoopJ> nedbat, hmm, maybe I could do the same. I've never used actions before, but they seem to be handy
[02:26:51] *** Quits: sr71919 (~sr71919@2405:201:e025:f094:391e:1b41:e77c:8677) (Remote host closed the connection)
[02:27:08] *** Joins: sr71919 (~sr71919@2405:201:e025:f094:391e:1b41:e77c:8677)
[02:27:36] *** Quits: NeoCore (~neocore@160.238.38.188) (Quit: Leaving)
[02:28:27] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 256 seconds)
[02:28:54] <nedbat> SnoopJ: this is mine: https://gist.github.com/nedbat/4264c234c92a40586eeebcb722dbeded
[02:29:20] <blei> stack overflow is chaos engineering the internet
[02:29:53] <blei> they have identified a set of tasks that correspond to routine maintenance which are impossible to accomplish without downtime O.o
[02:29:54] *** Quits: alienhead (~solas@user/alienhead) (Remote host closed the connection)
[02:29:56] <jinsun__> Guest54: you could use overload and NoReturn to do that, but you would have to define the __init__ yourself either way
[02:30:04] <blei> sounds like a question for... SO!
[02:30:15] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[02:30:36] *** Joins: alienhead (~solas@user/alienhead)
[02:31:27] <merrinx> need help with some code review https://github.com/Gako358/surface/tree/9f46b65685a5b25fe4fe399d6b7c0cdad88a95e3
[02:31:51] *** Quits: sr71919 (~sr71919@2405:201:e025:f094:391e:1b41:e77c:8677) (Ping timeout: 256 seconds)
[02:32:02] <merrinx> need an ide on how to in a way automize the process of git repos config and dot files config
[02:33:42] *** Quits: magla (~gelignite@d5366f7c.access.ecotel.net) (Quit: Stay safe!)
[02:34:57] <nedbat> merrinx: i'm not sure what you are asking for exactly.
[02:35:31] *** Quits: TheCat (~TheCat@user/z-cat) (Ping timeout: 250 seconds)
[02:35:54] <merrinx> nedbat: There are some user configuration needed in order to be able to run the app, how would I go a head and In a way make it more auto, for a user
[02:36:11] <merrinx> instead of manually config the needed files
[02:36:28] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[02:37:04] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[02:37:12] *** Quits: ubert (~Thunderbi@p200300ecdf19b7a24d515817a15e430d.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:37:21] *** Quits: upsala (~zcb@185.209.196.134) (Quit: WeeChat 3.4)
[02:37:24] *** Joins: sr71919 (~sr71919@2405:201:e025:f094:391e:1b41:e77c:8677)
[02:37:29] *** Quits: AHemlocksLie (~mikey@2603-8080-090b-0b47-0000-0000-0000-023d.res6.spectrum.com) (Quit: Leaving)
[02:38:42] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[02:38:55] *** Quits: src (~src@user/src) (Quit: leaving)
[02:39:01] <nedbat> merrinx: i haven't looked closely at the code, but you would either need a configuration file with the names of the files to handle, or you would somehow autodetect which files were interesting
[02:39:04] *** Joins: src (~src@user/src)
[02:40:38] <merrinx> I guess I just play around with makefile and bash scripts
[02:41:32] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[02:41:35] *** Quits: acidsys (~LSD@2a03:4000:55:d20::3) (Excess Flood)
[02:42:03] *** Quits: sr71919 (~sr71919@2405:201:e025:f094:391e:1b41:e77c:8677) (Ping timeout: 256 seconds)
[02:42:03] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[02:42:08] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[02:43:02] *** Quits: dontyouloveshort (~dontyoulo@p200300d21f4406015485da917ded2a49.dip0.t-ipconnect.de) (Quit: Leaving)
[02:43:38] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:45:36] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[02:46:35] *** Quits: blei (~blei@user/blei) (Ping timeout: 256 seconds)
[02:48:21] <ammar2> opinions on this use of operator overloading: clever or too magical? https://github.com/amusecode/amuse/blob/main/src/amuse/community/mesa_r15140/examples/new_model.py#L20
[02:48:33] *** Joins: sr71919 (~sr71919@2405:201:e025:f094:391e:1b41:e77c:8677)
[02:48:51] <ChrisWarrick> ammar2: too magical
[02:49:26] <ammar2> ChrisWarrick: would units.Gyr(0.05) be better?
[02:49:40] <ChrisWarrick> maybe
[02:49:55] <ChrisWarrick> I might be fine with 0.05 * units.Gyr
[02:50:21] <ChrisWarrick> (but I’m really not a fan of operator abuse)
[02:51:57] *** Quits: victori (~victori@cpe-76-89-139-69.socal.res.rr.com) (Quit: ZNC 1.8.2 - https://znc.in)
[02:52:10] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:52:37] *** Quits: ezakimak (~ezakimak@c-174-52-132-123.hsd1.ut.comcast.net) (Ping timeout: 240 seconds)
[02:52:40] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[02:52:49] *** Quits: sr71919 (~sr71919@2405:201:e025:f094:391e:1b41:e77c:8677) (Ping timeout: 256 seconds)
[02:52:56] *** Joins: Togran (~Togra@user/togra)
[02:53:00] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[02:53:22] *** Quits: Togran (~Togra@user/togra) (Client Quit)
[02:54:37] *** Joins: pycurious (~Adium@user/pycurious)
[02:55:36] *** Joins: Togran (~Togra@user/togra)
[02:55:36] *** Togra is now known as Guest9635
[02:55:37] *** Quits: Guest9635 (~Togra@user/togra) (Killed (calcium.libera.chat (Nickname regained by services)))
[02:55:37] *** Togran is now known as Togra
[02:55:40] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[02:55:44] *** Joins: victori (~victori@cpe-76-89-139-69.socal.res.rr.com)
[02:55:59] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[02:56:38] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[02:56:58] *** Joins: ezakimak (~ezakimak@c-174-52-132-123.hsd1.ut.comcast.net)
[02:56:58] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[02:57:27] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[02:58:44] *** Quits: kts (~kts@103.73.237.221) (Ping timeout: 250 seconds)
[02:58:45] *** Joins: kts_ (~kts@103.73.237.221)
[02:58:51] *** Quits: kts_ (~kts@103.73.237.221) (Client Quit)
[02:59:02] *** Quits: src (~src@user/src) (Quit: leaving)
[02:59:15] *** Joins: src (~src@user/src)
[02:59:40] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[02:59:43] *** Joins: puzzled (~puzzled@83-85-202-120.cable.dynamic.v4.ziggo.nl)
[03:00:16] *** Joins: c4017w_ (~c4017@209.52.68.8)
[03:01:13] *** Quits: Iolo (~iolo@user/Iolo) (Quit: Leaving)
[03:02:50] <jinsun__> Guest54: hmm, no looks like you cannot do it with __init__, because mypy doesn't allow returning NoReturn from __init__ and pyright allows it but doesn't check the overloads when the instance is constructed
[03:03:03] *** Quits: jmcb (~jmcb@hacksoc/member/jmcb) (Quit: Farewell.)
[03:03:08] <jinsun__> both mypy and pyright behaviors look like bugs
[03:03:15] *** Quits: dreamon (~dreamon@p57a4c768.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[03:03:30] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[03:04:42] *** Joins: llanhmod_ (~personnel@user/domhnall/x-2887755)
[03:05:28] *** Joins: bpalmer (~user@user/bpalmer)
[03:05:34] *** Joins: p-i- (~Ohmu@2403:6200:8978:9086:1030:27f5:3084:25d2)
[03:06:11] *** Joins: jpn (~jpn@user/jpn)
[03:06:36] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[03:06:52] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 272 seconds)
[03:07:13] <Guest54> jinsun_ hmm I see, thanks for the help:)
[03:07:24] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[03:08:35] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[03:12:05] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 256 seconds)
[03:12:22] *** Quits: victori (~victori@cpe-76-89-139-69.socal.res.rr.com) (Quit: ZNC 1.8.2 - https://znc.in)
[03:13:18] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[03:14:24] *** Quits: src (~src@user/src) (Quit: leaving)
[03:15:29] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 256 seconds)
[03:15:32] *** Joins: akk (~akk@75-161-61-130.albq.qwest.net)
[03:15:56] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:16:01] *** Joins: victori (~victori@cpe-76-89-139-69.socal.res.rr.com)
[03:18:19] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[03:18:47] *** Joins: furrykef (~furrykef@ip68-229-192-239.ok.ok.cox.net)
[03:19:12] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 252 seconds)
[03:19:23] <furrykef> I'm going crazy trying to enable logging for my uwsgi app
[03:19:35] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[03:19:36] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[03:19:40] *** Joins: semeion (~semeion@user/semeion)
[03:19:48] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[03:21:19] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[03:21:22] *** Joins: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com)
[03:22:35] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 240 seconds)
[03:23:03] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[03:23:03] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:48c2:4ab7:8578:594d) (Ping timeout: 252 seconds)
[03:23:20] *** Quits: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com) (Client Quit)
[03:24:03] <furrykef> This is my configuration, and the result: https://bpa.st/4JWQ
[03:24:33] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[03:24:33] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[03:25:28] *** Joins: kts (~kts@103.73.237.221)
[03:26:54] *** Quits: schumaml (~schumaml@ipservice-092-211-200-190.092.211.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[03:27:15] <furrykef> It doesn't create either of the logfiles, even as I access things
[03:28:47] *** Joins: schumaml (~schumaml@dslb-094-216-174-122.094.216.pools.vodafone-ip.de)
[03:29:30] *** Quits: parv (~quass@user/parv) (Ping timeout: 250 seconds)
[03:30:03] *** Quits: waxfire6 (~waxfire@65.119.2.240) (Quit: The Lounge - https://thelounge.chat)
[03:30:13] *** Joins: waxfire6 (~waxfire@65.119.2.240)
[03:31:24] *** Quits: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Read error: Connection reset by peer)
[03:32:22] *** Joins: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[03:33:44] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[03:34:09] *** Quits: Celeo_ (~znc-admin@user/celeo) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[03:35:38] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[03:35:40] *** Joins: Celeo (~znc-admin@user/celeo)
[03:35:55] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[03:37:33] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:38:47] *** Quits: tr4ck3ur (~tr4ck3ur@user/tr4ck3ur) (Quit: Leaving)
[03:39:07] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[03:39:32] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[03:40:29] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[03:40:43] *** Quits: bomb-on (~bomb-on@user/bomb-on) (Read error: Connection reset by peer)
[03:41:14] *** Joins: Wulf (~Wulf@user/wulf)
[03:41:26] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:41:52] *** Quits: puzzled (~puzzled@83-85-202-120.cable.dynamic.v4.ziggo.nl) (Quit: Leaving)
[03:41:58] *** Joins: bomb-on (~bomb-on@user/bomb-on)
[03:42:56] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 250 seconds)
[03:43:22] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 250 seconds)
[03:44:13] *** Quits: kiras (~kiras@user/kiras) (Quit: Leaving)
[03:46:32] *** Quits: OverCoder (~OverCoder@user/overcoder) (Quit: Quitting? That's odd.)
[03:46:36] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[03:46:41] *** Quits: MJ (~mjpieters@zopatista.plus.com) (Ping timeout: 252 seconds)
[03:47:24] *** Quits: mcglk (~mcglk@131.191.49.120) (Ping timeout: 272 seconds)
[03:47:30] *** Joins: MJ (~mjpieters@zopatista.plus.com)
[03:47:39] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[03:47:46] *** Joins: wyclif (~wyclif@user/wyclif)
[03:48:21] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-39f6-2932-099f-a193.res6.spectrum.com)
[03:49:30] *** Joins: mcglk (~mcglk@131.191.49.120)
[03:50:17] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[03:50:33] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 252 seconds)
[03:50:33] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[03:51:16] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[03:51:44] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:9c32:6ce7:3fcd:8461)
[03:52:37] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[03:52:55] <Guest54> I have a really basic question about file handing. I'm write a command line app that extract an image from a given paths. Let's say I have the following dir: "~foo/bar/baz.jpg". Say I'm in foo dir. I want my user to be able to be able to do python3 myapp --ile bar/baz.jpg. Or if they're in "bar", I want them to do python3 myapp --file baz.jpg. As
[03:52:56] <Guest54> you can see, the user is pointing to the right path, but it depends on where they're running the script. Is there a lib in python that figures out the absolute path of the pic no matter where the user runs the script from?
[03:53:03] <Guest54> oops sorry ignore
[03:53:31] *** Joins: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net)
[03:53:36] <Guest54> hey guys, quick question about file handling. I have paths of the form "foo/bar/baz.jpg" or just "bar/baz.jpg". In both cases I want to extract the path relative to "bar" (including bar), so the output would be "bar/baz.jpg" in both cases
[03:54:00] <Guest54> is there a lib to do this cleanly>
[03:56:21] *** Joins: pycurious (~Adium@user/pycurious)
[03:56:31] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[03:56:43] <jinsun__> didn't you solve this with pathlib already? or was that not clean enough?
[03:57:37] *** Quits: Midjak (~Midjak@82.66.147.146) (Quit: This computer has gone to sleep)
[03:57:55] <Guest54> jinsun_ ah I tried s = "foo/bar/baz.jpg"; x = Path(s); x.relative_to("bar/"); -- but I got an error: "ValueError: 'foo/bar/baz.jpg' does not start with '/bar'"
[03:58:50] *** Joins: ShinyCyril (~ShinyCyri@65.79.144.153)
[03:59:10] <jinsun__> ah okay so you didn't solve it
[03:59:27] <Guest54> yep was wondering if there's another way
[03:59:59] <jinsun__> your definition of bar is a bit vague, what should happen if there is no bar is the path or if it is there more than once?
[04:00:27] *** Quits: mcglk (~mcglk@131.191.49.120) (Ping timeout: 252 seconds)
[04:00:35] <jinsun__> s/is the path/in the path
[04:00:44] *** Joins: jpn (~jpn@user/jpn)
[04:00:55] *** Joins: c4017w__ (~c4017@209.52.68.8)
[04:00:58] <Guest54> in both cases then I would like to throw error
[04:01:07] *** Quits: Barones (~Barones@user/Barones) (Remote host closed the connection)
[04:01:26] *** Joins: Barones (~Barones@user/Barones)
[04:01:47] <jinsun__> if you just give "bar/" to relative_to it assumes the absolute path "/bar/"
[04:02:22] *** Quits: omegatron (~some@p5b056cb8.dip0.t-ipconnect.de) (Quit: Power is a curious thing.It can be contained, hidden, locked away,and yet it always breaks free.)
[04:02:52] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[04:03:09] *** Joins: siwica (~user@2001:9e8:2b2a:c500:1543:b7c8:3763:7c85)
[04:04:10] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[04:04:26] <bpalmer> sounds like you could just manually inspect the result of the Path's .parts attribute
[04:04:35] <siwica> Are you aware of an open-source in-browser repl that can be connected to a python process on a server?
[04:05:17] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 240 seconds)
[04:05:24] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 252 seconds)
[04:05:27] *** Joins: mcglk (~mcglk@131.191.49.120)
[04:06:50] <jinsun__> Guest54: you could do something like thishttps://bpa.st/PJTA
[04:06:58] <jinsun__> Guest54: oops, https://bpa.st/PJTA
[04:07:43] <Guest54> ty for guidance folks
[04:11:06] <jinsun__> siwica: JupyterHub is kinda like that https://jupyter.org/hub
[04:12:24] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[04:12:41] *** Quits: kts (~kts@103.73.237.221) (Quit: Konversation terminated!)
[04:13:12] <siwica> jinsun_: Basically I am having an embedded device with python installed on it. I want to offer a user to both write python scripts and use the python repl using a web iterface rather than by SSHing on the device.
[04:14:14] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[04:15:26] <siwica> jinsun_: Yeah, Jupyter Notebooks is an idea. Ideal would be something that does seemlessly integrate into a web page.
[04:17:10] *** Quits: Merinorus (~Merinorus@lfbn-mar-1-708-57.w90-118.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[04:17:21] *** Joins: Merinorus (~Merinorus@lfbn-mar-1-708-57.w90-118.abo.wanadoo.fr)
[04:19:25] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[04:20:50] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[04:22:26] *** Quits: LuKaRo (~LuKaRo@p200300dfa712f1141fa1e0576466c280.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[04:25:17] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[04:25:59] *** Joins: Tacoder (~Tacoder@2806:264:5482:9e0:41a9:db03:a62f:f2fb)
[04:26:24] *** Joins: LuKaRo (~LuKaRo@p200300dfa712f140429be276a75d0242.dip0.t-ipconnect.de)
[04:27:35] *** Quits: oriba (~oriba@dynamic-077-011-005-242.77.11.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:28:17] *** Quits: humbertowoody (~humbertow@189.236.30.245) (Ping timeout: 240 seconds)
[04:29:06] *** Quits: ShinyCyril (~ShinyCyri@65.79.144.153) (Quit: ShinyCyril)
[04:30:15] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (Read error: Connection reset by peer)
[04:30:41] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[04:31:04] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[04:32:28] *** Joins: Jck_true (~jcktrue@user/jck-true/x-0200799)
[04:35:41] *** Quits: Douwd (~douwd@nexus.bsdpro.net) (Quit: So long, and thanks for all the fish.)
[04:37:03] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[04:39:24] *** Quits: horner (~horner@host86-153-58-154.range86-153.btcentralplus.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:40:02] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 252 seconds)
[04:40:02] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:f5b1:179a:eea5:82cb)
[04:40:49] *** Joins: humbertowoody (~humbertow@189.236.30.245)
[04:41:02] *** Joins: pycurious (~Adium@user/pycurious)
[04:41:25] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[04:41:34] *** Joins: humanBird (~humanBird@2603-8001-7000-3642-0dff-237e-1d92-8de5.res6.spectrum.com)
[04:41:39] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[04:43:59] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[04:44:02] *** Joins: jpn (~jpn@user/jpn)
[04:44:42] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:bc91:87ee:dc4:4024)
[04:44:42] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:bc91:87ee:dc4:4024) (Changing host)
[04:44:42] *** Joins: skapata (~Skapata@user/skapata)
[04:47:16] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::ef3c) (Quit: Konversation terminated!)
[04:47:24] *** Quits: akk (~akk@75-161-61-130.albq.qwest.net) (Quit: +++)
[04:47:45] *** Joins: mvkvc (~mvkvc@bras-base-toroon63x9w-grc-20-184-147-20-18.dsl.bell.ca)
[04:47:51] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[04:49:20] *** Quits: mvkvc (~mvkvc@bras-base-toroon63x9w-grc-20-184-147-20-18.dsl.bell.ca) (Client Quit)
[04:50:32] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[04:51:16] *** Joins: pycurious (~Adium@user/pycurious)
[04:52:27] *** Joins: llh (~UPP@user/llh)
[04:52:51] *** Quits: tc__ (~tc@103-140-203-11.vic.as139284.net.au) (Remote host closed the connection)
[04:53:15] *** Joins: tc__ (~tc@103-140-203-11.vic.as139284.net.au)
[04:53:25] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[04:54:02] *** Quits: dreamscached (~dreamscac@user/dreamscached) (Ping timeout: 240 seconds)
[04:54:21] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 252 seconds)
[04:54:43] *** Joins: Atque (~Atque@user/atque)
[04:55:18] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:55:36] *** Quits: pycurious (~Adium@user/pycurious) (Read error: Connection reset by peer)
[04:55:49] *** Quits: PaterTemporalis (~woooopsie@2001:8a0:ee2a:bc00:c12c:db1:60bf:c91c) (Ping timeout: 240 seconds)
[04:59:00] *** Quits: humbertowoody (~humbertow@189.236.30.245) (Ping timeout: 240 seconds)
[05:01:36] *** Joins: c4017w_ (~c4017@209.52.68.8)
[05:03:06] *** Quits: gjvc (~gjvc@user/gjvc) (Quit: leaving)
[05:03:29] *** Joins: gjvc (~gjvc@user/gjvc)
[05:05:18] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[05:11:32] *** Joins: humbertowoody (~humbertow@189.236.30.245)
[05:13:49] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[05:13:56] *** Quits: dsrt^ (~dsrt@50.232.121.75) (Ping timeout: 250 seconds)
[05:14:12] *** Joins: nmilian (~nmilian@d-216-189-168-37.fl.cpe.atlanticbb.net)
[05:15:37] *** Quits: Guest54 (~Guest54@2620:10d:c092:400::4:be73) (Ping timeout: 256 seconds)
[05:16:06] *** Quits: humbertowoody (~humbertow@189.236.30.245) (Ping timeout: 250 seconds)
[05:16:17] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[05:17:35] *** Joins: namkeleser (~namkelese@101.175.104.107)
[05:18:25] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:19:13] *** Quits: medium_cool (~medium_co@136.36.128.48) (Quit: I have gone to sleep. ZZZzzz…)
[05:19:58] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 268 seconds)
[05:20:02] <foo> https://bpa.st/LQSQ -> I would usually use a var name like new_timer instead of obj. Can we agree that makes sense? Or is there a reason to use obj or is that a standard practice I'm not aware of? (Doing some code review and curious myself) -> thank you.
[05:20:08] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[05:20:16] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:48c2:4ab7:8578:594d)
[05:20:57] *** Quits: nomic (~nomic@185.217.117.88) (Quit: Leaving)
[05:21:02] *** Joins: medium_cool (~medium_co@136.36.128.48)
[05:21:17] *** Joins: nomic (~nomic@185.217.117.88)
[05:22:07] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:f5b1:179a:eea5:82cb) (Quit: Textual IRC Client: www.textualapp.com)
[05:22:14] *** Quits: medium_cool (~medium_co@136.36.128.48) (Client Quit)
[05:22:14] *** Joins: sydbarret (~anton@static-186-121-195-159.acelerate.net)
[05:22:18] *** Joins: ymwm_ (~yingmanwu@27.153.166.227)
[05:22:22] *** Parts: sydbarret (~anton@static-186-121-195-159.acelerate.net) ()
[05:22:29] *** Joins: sydbarret (~anton@static-186-121-195-159.acelerate.net)
[05:23:10] <sydbarret> Im trying to delete panda rows based on a list.  df= df[~df['ID'].isin(ids_to_append)]
[05:23:16] <sydbarret> doesnt seem to work
[05:23:31] <nedbat> foo: obj is not a good name for a variable in that context
[05:23:50] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[05:24:24] <bpalmer> At the same time, it's not a terrible name considering it only exists for 4 lines.
[05:25:15] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[05:25:24] <foo> nedbat / bpalmer - thank you. I think new_timer makes more sense, agree? Open to any other feedback on this code.
[05:25:31] *** Joins: sr71919 (~sr71919@2405:201:e025:f094:391e:1b41:e77c:8677)
[05:25:43] <bpalmer> I'd call it timer myself (no need for "new_" when you're creating it, unless you've also got an old one lying about, or you're trying to avoid namespace shadowing); but, I don't stress about short lived names that are "obvious enough"
[05:25:53] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:f566:7718:d488:88ea)
[05:25:59] <foo> bpalmer: thank you. :)
[05:26:02] <nedbat> foo: i would also call it "timer"
[05:26:57] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 256 seconds)
[05:27:21] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[05:27:42] <foo> nedbat / bpalmer - thank you for helping me to refine my "dev" instincts. The only other suggesting I'm making here is to document all args in the docstring. Otherwise I think that code looks good. (eg. I'm not sure if duration is in seconds or not) - grateful for the suggestions!
[05:27:44] *** Joins: wyclif (~wyclif@user/wyclif)
[05:27:44] *** Joins: humbertowoody (~humbertow@189.236.30.245)
[05:27:48] *** Quits: filename (~kilitary@188.242.105.134) (Ping timeout: 250 seconds)
[05:28:37] <bpalmer> foo: Also, "Create ... into ..." doesn't seem quite right. Perhaps "Create and insert a new timer in the context's database."
[05:29:14] <jinsun__> sydbarret: why do you think it doesn't work?
[05:29:19] <foo> bpalmer: really appreciate your eyes on this, thank you. 🙏🏽
[05:29:47] *** Quits: sr71919 (~sr71919@2405:201:e025:f094:391e:1b41:e77c:8677) (Ping timeout: 256 seconds)
[05:29:50] <sydbarret> jinsun__ seems i have to convert it to series first
[05:30:06] <sydbarret> jinsun__ i need to convert id column to serie first
[05:30:28] <sydbarret> ?
[05:31:02] <jinsun__> a column in a DataFrame is a series already
[05:31:07] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[05:31:33] <sydbarret> jinsun__  so its a syntax issue?
[05:31:45] *** Joins: dntreou (~yakiza@cpc91202-cmbg18-2-0-cust102.5-4.cable.virginm.net)
[05:32:06] <sydbarret> jinsun__ or comparing diferent datatypes?
[05:32:08] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[05:32:12] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[05:32:54] <jinsun__> umm, I don't understand how you got that from what I said, I think what you wrote works there is no issue
[05:33:20] <jinsun__> if you think there is a problem, then you have to show code with unexpected behavior
[05:33:49] *** Joins: lessshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[05:34:39] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Read error: Connection reset by peer)
[05:35:01] *** Joins: dclxvi (~quassel@2a02:8084:84:4100:adc8:90b1:ead3:f44d)
[05:36:06] *** Joins: _filename (~kilitary@188.242.105.134)
[05:36:12] *** Quits: dab21 (~dab21@pistis.amyanddavid.net) (Read error: Connection reset by peer)
[05:36:42] *** Joins: dab21 (dab21@pistis.amyanddavid.net)
[05:36:58] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 272 seconds)
[05:37:01] *** _filename is now known as filename
[05:37:43] <jinsun__> sydbarret: for example, https://bpa.st/TP3Q
[05:37:48] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[05:38:02] <jinsun__> so that line seems to be working fine
[05:38:14] *** Quits: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Ping timeout: 272 seconds)
[05:39:00] *** Joins: csileeeeeeeeeeoe (~csileeeee@50.232.121.75)
[05:40:05] *** Joins: audiobirb (~audio@user/audio)
[05:41:14] *** Joins: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp)
[05:42:30] *** Joins: davidlowryduda (~davidlowr@2601:197:600:1210:adfa:97b2:16e:b6e4)
[05:42:53] *** Quits: squirrel (uid529456@user/squirrel) (Quit: Connection closed for inactivity)
[05:43:48] *** Quits: schumaml (~schumaml@dslb-094-216-174-122.094.216.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[05:45:57] *** Quits: nmilian (~nmilian@d-216-189-168-37.fl.cpe.atlanticbb.net) (Remote host closed the connection)
[05:46:06] *** Joins: schumaml (~schumaml@dslb-178-002-184-131.178.002.pools.vodafone-ip.de)
[05:46:30] <sydbarret> it works now
[05:46:33] *** Quits: sydbarret (~anton@static-186-121-195-159.acelerate.net) (Quit: Going offline, see ya! (www.adiirc.com))
[05:46:57] *** Quits: humbertowoody (~humbertow@189.236.30.245) (Ping timeout: 240 seconds)
[05:47:53] *** Joins: humbertowoody (~humbertow@189.236.30.245)
[05:48:24] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[05:49:00] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 272 seconds)
[05:49:07] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Quit: kaiseisei)
[05:49:44] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[05:50:27] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[05:52:12] *** Quits: humbertowoody (~humbertow@189.236.30.245) (Ping timeout: 240 seconds)
[05:52:24] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::c)
[05:52:50] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[05:52:50] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[05:52:50] *** finn_elija is now known as FinnElija
[05:52:52] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[05:53:03] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[05:55:58] *** Quits: domicron (~domicron@gateway/tor-sasl/domicron) (Remote host closed the connection)
[05:55:59] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[05:56:15] *** Joins: tejr (~tejr@user/tejr)
[05:56:34] *** Joins: domicron (~domicron@gateway/tor-sasl/domicron)
[05:57:00] *** Joins: Fiji- (~Fiji@user/fiji)
[05:57:25] *** Quits: alienhead (~solas@user/alienhead) (Remote host closed the connection)
[05:57:38] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[05:58:05] *** Quits: Fiji- (~Fiji@user/fiji) (Remote host closed the connection)
[05:58:24] *** Joins: Fiji- (~Fiji@user/fiji)
[05:59:00] *** Quits: dntreou (~yakiza@cpc91202-cmbg18-2-0-cust102.5-4.cable.virginm.net) (Ping timeout: 250 seconds)
[05:59:52] *** Quits: Fiji_ (~Fiji@user/fiji) (Ping timeout: 250 seconds)
[06:00:01] *** Joins: humbertowoody (~humbertow@189.236.30.245)
[06:00:06] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[06:00:40] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[06:02:15] *** Joins: c4017w__ (~c4017@209.52.68.8)
[06:05:18] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[06:05:51] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[06:12:54] *** Quits: bomb-on (~bomb-on@user/bomb-on) (Quit: aллилѹіа!)
[06:13:27] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[06:16:15] *** Quits: domicron (~domicron@gateway/tor-sasl/domicron) (Ping timeout: 240 seconds)
[06:17:01] *** Joins: domicron (~domicron@gateway/tor-sasl/domicron)
[06:17:04] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[06:17:11] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:17:24] *** Joins: thiras (~thiras@user/thiras)
[06:18:08] *** Joins: transeIstor (~transeIst@h72-0-173-19.bendor.broadband.dynamic.tds.net)
[06:18:09] *** Joins: korg815 (~korg815@user/korg815)
[06:19:57] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[06:21:22] *** Parts: blackout69 (~blackout6@37.183.230.121) ()
[06:22:10] *** Joins: dtux (~dtux@2601:646:8f00:3f2:6170:f970:2cc8:a428)
[06:22:15] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:22:19] *** Quits: csileeeeeeeeeeoe (~csileeeee@50.232.121.75) (Remote host closed the connection)
[06:25:00] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 250 seconds)
[06:26:42] *** Quits: filename (~kilitary@188.242.105.134) (Remote host closed the connection)
[06:27:01] *** Quits: devish (~devish@205.251.233.53) (Ping timeout: 256 seconds)
[06:27:33] *** Quits: KnowledgeShark- (~Knowledge@50.34.198.222) (Read error: Connection reset by peer)
[06:28:03] *** Joins: KnowledgeShark- (~Knowledge@50.34.198.222)
[06:31:17] *** Quits: Veil (~Veil@user/Veil) (Quit: If one cut the source of flow.)
[06:31:28] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[06:31:38] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[06:32:25] <foo> With this: def greeting(name: str) -> str: ... the type hint is "-> str" correct?
[06:33:07] *** Joins: powftw (uid448161@id-448161.lymington.irccloud.com)
[06:33:20] <grym> and :str
[06:33:21] *** Quits: zzbot (~zzbot@user/zzbot) (Ping timeout: 272 seconds)
[06:33:37] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 240 seconds)
[06:33:59] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[06:34:03] <foo> grym: aha, thank you. :) Cool. Nice to be doing stuff like this in one of our codebases now.
[06:34:11] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[06:35:16] *** Quits: KnowledgeShark- (~Knowledge@50.34.198.222) (Remote host closed the connection)
[06:36:16] *** Joins: blei (~blei@user/blei)
[06:36:56] <Roey> hey all
[06:37:12] <Roey> anyone here routinely using python match/case statements in their code now?
[06:37:21] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[06:37:23] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[06:37:24] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:37:29] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:37:35] <nedbat> Roey: i haven't found uses for it.
[06:38:23] <Roey> aye
[06:38:28] <Roey> neither have I
[06:38:37] <Roey> but then I haven't done naything new in python in years
[06:38:47] <Roey> I just use the interpretr as a calculator
[06:38:48] <Roey> lol
[06:38:51] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[06:39:04] <foo> What tense should docstrings be in? I don't see it here: https://peps.python.org/pep-0257/ - eg. is this docstring ok? """Gets the current timestamp of UTC timezone""" ... or should that be """Get the current... ?
[06:39:31] *** Joins: Guest18 (~Guest18@172.92.89.49)
[06:39:40] *** Quits: Guest18 (~Guest18@172.92.89.49) (Client Quit)
[06:40:21] <grym> "The docstring is a phrase ending in a period. It prescribes the function or method’s effect as a command (“Do this”, “Return that”), not as a description; e.g. don’t write “Returns the pathname …”."
[06:42:23] <foo> grym: aha! ok, so instead of """Gets the current timestamp of UTC timezone""" we want to say """Return current timestamp of UTC timezone""" ? Or am I misreading that?
[06:42:23] *** Quits: groundboi (~groundboi@user/groundboi) (Quit: WeeChat 2.3)
[06:42:35] <grym> and with a period at the end
[06:43:14] <foo> grym: facepalm. ok, thanks.
[06:43:58] <foo> I wonder if there's a linter for docstrings, I have to see if we have that in pre-commit
[06:44:50] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[06:46:17] <foo> grym: instead of """Returns a list of Project objects""" we say """Return list of Project objects.""" ?
[06:47:26] <blei> third person
[06:47:46] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[06:47:54] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:47:57] <blei> ala schoolhouse rock
[06:48:20] <foo> blei: Thanks. hmm, would appreciate a more specific answer. When I think "third person" I think "they/them" -> unless your comment wasn't for me
[06:49:01] *** Quits: Fiji- (~Fiji@user/fiji) (Read error: Connection reset by peer)
[06:49:10] <blei> twas just a joke:)
[06:49:45] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[06:50:30] <foo> We haven't done it yet but does sphnix care about markdown in a docstring? eg. """Sync wrapper of `api_add_subscription_phase_change`"""
[06:51:21] *** Quits: giesen (~ggiesen@ego.giesen.me) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[06:51:23] <foo> Looks like no
[06:52:03] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Ping timeout: 252 seconds)
[06:53:05] *** Quits: dfrey (~dfrey@172.103.152.101) (Ping timeout: 256 seconds)
[06:53:15] <blei> can you detect if you are being run by strace
[06:55:21] *** Joins: sydbarret (~anton@static-186-121-195-159.acelerate.net)
[06:57:43] <jinsun_> <foo> "I wonder if there's a linter for..." <- pydocstyle
[06:59:14] <grym> foo: there's pydocstyle :P
[07:01:36] <foo> jinsun_: jinsun_ / grym - thank you! Will check if we have that
[07:01:50] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[07:01:59] <foo> We do not! Probably a good idea now that we're doing docstrings, woohoo, thank you
[07:02:57] *** Joins: c4017w_ (~c4017@209.52.68.8)
[07:05:59] *** Quits: sobkas (~sobkas@95.175.17.217) (Quit: sobkas)
[07:06:10] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[07:06:12] *** Quits: humbertowoody (~humbertow@189.236.30.245) (Ping timeout: 240 seconds)
[07:07:16] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[07:07:29] *** Quits: humanBird (~humanBird@2603-8001-7000-3642-0dff-237e-1d92-8de5.res6.spectrum.com) (Quit: Client closed)
[07:10:07] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-39f6-2932-099f-a193.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[07:11:07] *** Quits: nomic (~nomic@185.217.117.88) (Quit: Leaving)
[07:12:15] *** Parts: llanhmod (~personnel@user/domhnall/x-2887755) ()
[07:13:14] *** Joins: dfrey (~dfrey@172.103.152.101)
[07:13:29] *** Quits: emerent (~quassel@p200300cd5743c3f6ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[07:13:38] *** Joins: humbertowoody (~humbertow@189.236.30.245)
[07:14:13] *** Joins: emerent (~quassel@p200300cd5743c31aba27ebfffed28a59.dip0.t-ipconnect.de)
[07:14:44] *** Joins: Wh0 (~V@103.86.19.99)
[07:15:25] *** Joins: adeliktas0 (~adeliktas@i59F5FF5C.versanet.de)
[07:15:30] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Quit: WeeChat 2.8)
[07:16:23] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[07:16:55] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[07:17:21] *** Quits: adeliktas (~adeliktas@i59F4D539.versanet.de) (Ping timeout: 252 seconds)
[07:17:21] *** adeliktas0 is now known as adeliktas
[07:18:23] *** Quits: namkeleser (~namkelese@101.175.104.107) (Quit: Client closed)
[07:20:15] *** Joins: walterwhip (~www@user/walterwhip)
[07:21:19] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[07:22:51] *** Quits: Barones (~Barones@user/Barones) (Quit: Leaving)
[07:24:03] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.4)
[07:25:35] *** Quits: dre (~dre@2001:8003:c932:c301:5689:c0f3:d693:ff24) (Ping timeout: 252 seconds)
[07:25:57] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[07:26:32] *** Quits: schumaml (~schumaml@dslb-178-002-184-131.178.002.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[07:26:41] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[07:28:22] *** Joins: schumaml (~schumaml@dslb-178-002-177-052.178.002.pools.vodafone-ip.de)
[07:29:16] *** Quits: dtux (~dtux@2601:646:8f00:3f2:6170:f970:2cc8:a428) (Quit: dtux)
[07:30:07] *** Quits: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:32:19] *** Joins: GreenLlama (~quassel@80-219-124-12.dclient.hispeed.ch)
[07:32:36] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl487ivan94mkfwvl.ipv6.telus.net) (Ping timeout: 250 seconds)
[07:35:09] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[07:35:37] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[07:36:26] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[07:36:36] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: btc donations: bc1qt3chy4rqtzjny2h7qt47cy7nmu6th9sr66wa02)
[07:37:51] *** Quits: sreve_ (~quassel@p4ff443b7.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[07:38:20] *** Joins: sreve (~quassel@p54a71a79.dip0.t-ipconnect.de)
[07:40:59] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[07:41:40] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: Hay te huacho!)
[07:41:58] *** Joins: giesen (~ggiesen@ego.giesen.me)
[07:42:35] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[07:42:53] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[07:43:01] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[07:43:53] <orbisvicis> I want to check if (only) two matplotlib paths intersect, I believe I have to check the cartesian product of all line segments but I am hoping for a more efficient approach
[07:44:24] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Ping timeout: 256 seconds)
[07:44:44] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 250 seconds)
[07:45:09] *** Quits: giesen (~ggiesen@ego.giesen.me) (Client Quit)
[07:45:15] *** Joins: filename (~kilitary@static.246.201.46.78.clients.your-server.de)
[07:45:38] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[07:45:46] *** Quits: EGH (~EGH@185.25.195.104) (Ping timeout: 245 seconds)
[07:46:38] *** Joins: giesen (~ggiesen@ego.giesen.me)
[07:48:09] *** Quits: dclxvi (~quassel@2a02:8084:84:4100:adc8:90b1:ead3:f44d) (Ping timeout: 252 seconds)
[07:49:48] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 252 seconds)
[07:50:13] *** Quits: rtkng (~rtkng@024-176-075-241.res.spectrum.com) (Ping timeout: 240 seconds)
[07:50:19] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[07:51:46] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[07:53:00] *** Joins: NoxTurminal (~Noxturmin@user/noxturminal)
[07:54:24] *** Quits: schumaml (~schumaml@dslb-178-002-177-052.178.002.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[07:55:00] *** Quits: Tacoder (~Tacoder@2806:264:5482:9e0:41a9:db03:a62f:f2fb) (Ping timeout: 240 seconds)
[07:55:33] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[07:55:37] *** Joins: schumaml (~schumaml@dslb-188-104-165-025.188.104.pools.vodafone-ip.de)
[07:56:22] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[07:59:12] *** Quits: lessshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[07:59:18] *** Joins: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[08:03:15] *** Joins: c4017w__ (~c4017@209.52.68.8)
[08:04:43] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-306a-aeb7-82dd-814e.res6.spectrum.com) (Read error: Connection reset by peer)
[08:06:26] <murdoc_x01> l:
[08:06:45] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[08:08:20] *** Quits: schumaml (~schumaml@dslb-188-104-165-025.188.104.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[08:08:35] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[08:09:49] *** Joins: schumaml (~schumaml@dslb-178-007-192-242.178.007.pools.vodafone-ip.de)
[08:10:49] *** Joins: widp (~user@124.123.104.62)
[08:10:53] *** Joins: jpn (~jpn@user/jpn)
[08:11:21] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl48a1cjnutj4aj3v.ipv6.telus.net)
[08:13:03] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::4f67)
[08:13:10] <KnowledgeShark> Does anyone know why this isn't working? urllib.parse import urljoin (trying to construct a url from two python variables). https://dpaste.com/2B937KVQN
[08:13:27] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[08:15:56] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 272 seconds)
[08:16:34] *** Quits: schumaml (~schumaml@dslb-178-007-192-242.178.007.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[08:16:41] *** Quits: Wh0 (~V@103.86.19.99) (Read error: Connection reset by peer)
[08:16:54] *** Joins: widp` (~user@124.123.104.62)
[08:17:04] *** Joins: Wh0 (~V@103.86.19.99)
[08:18:03] *** Joins: schumaml (~schumaml@dslb-188-104-175-139.188.104.pools.vodafone-ip.de)
[08:18:06] *** Quits: humbertowoody (~humbertow@189.236.30.245) (Ping timeout: 250 seconds)
[08:18:25] *** Quits: toma (~RubbishPu@node-1w7jr9yhpl48a1cjnutj4aj3v.ipv6.telus.net) (Read error: Connection reset by peer)
[08:19:15] <jinsun__> KnowledgeShark: don't quote the variable names in line 4, url_part_1 and 'url_part_1' are different things
[08:19:44] <jinsun__> and the url_part_2 is a open file handle, which you can't give to urljoin directly, you need to read the contents of the file into another variable and use that
[08:20:22] *** Quits: widp (~user@124.123.104.62) (Ping timeout: 272 seconds)
[08:20:54] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[08:20:57] <KnowledgeShark> jinsun__: Thank you. I removed the quotes and received an error (which is probably what you said right after). So I want to pass the read variable on url_part_2 to a different variable and then use it and I shouldn't get an error. Thank you jinsun__!
[08:21:09] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[08:21:40] <KnowledgeShark> jinsun__: How do I read it to a different variable?
[08:22:13] <KnowledgeShark> does it need to be cloned or does it have to be a different way of assigning the variable to the open() function?
[08:22:26] *** Quits: transeIstor (~transeIst@h72-0-173-19.bendor.broadband.dynamic.tds.net) (Ping timeout: 250 seconds)
[08:22:26] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:48c2:4ab7:8578:594d) (Ping timeout: 250 seconds)
[08:22:40] <jinsun__> KnowledgeShark: see https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files
[08:22:48] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[08:23:35] *** Quits: widp` (~user@124.123.104.62) (Remote host closed the connection)
[08:23:43] *** Joins: Tacoder (~Tacoder@2806:264:5482:9e0:41a9:db03:a62f:f2fb)
[08:23:57] *** Joins: widp` (~user@124.123.104.62)
[08:24:07] *** Joins: wyclif (~wyclif@user/wyclif)
[08:24:53] <KnowledgeShark> jinsun__: Appreciate it!
[08:26:11] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[08:26:35] *** Quits: schumaml (~schumaml@dslb-188-104-175-139.188.104.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[08:26:48] <jinsun__> in short, maybe .read() will be enough, but in general depends a lot on what you wanted to do with the contents of the file, so would be good to understand how reading files works
[08:27:12] *** Quits: Wh0 (~V@103.86.19.99) (Ping timeout: 252 seconds)
[08:27:13] *** Joins: tWqaq (~tWqaq@240e:389:5d1c:ff00:f186:50e5:11e5:c5c9)
[08:27:46] *** Quits: efil4cri_ (~efil4cri@gateway/tor-sasl/wfnintr) (Remote host closed the connection)
[08:27:47] *** Quits: widp` (~user@124.123.104.62) (Read error: Connection reset by peer)
[08:27:47] <KnowledgeShark> trying to write combined urls to a file and then use the variable to do something different with bs4 and mysql.
[08:27:48] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:28:16] *** Joins: widp` (~user@124.123.104.62)
[08:28:17] *** Joins: schumaml (~schumaml@ipservice-092-211-205-104.092.211.pools.vodafone-ip.de)
[08:28:34] *** Joins: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr)
[08:29:14] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[08:29:33] *** Joins: wyclif (~wyclif@user/wyclif)
[08:29:45] *** Joins: siwica` (~user@2001:9e8:2b09:5800:4a1b:955f:1c60:19cb)
[08:30:09] *** Joins: humbertowoody (~humbertow@189.236.30.245)
[08:30:12] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 240 seconds)
[08:31:35] *** Quits: siwica (~user@2001:9e8:2b2a:c500:1543:b7c8:3763:7c85) (Ping timeout: 252 seconds)
[08:31:37] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[08:31:41] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Read error: Connection reset by peer)
[08:32:15] *** Joins: Wh0 (~V@103.86.19.99)
[08:32:33] *** Joins: rMdes (~rmdes@my.armada.digital)
[08:32:46] <KnowledgeShark> jinsun__: Thank you! It worked: dpaste: https://dpaste.com/D83JVVE2K
[08:32:53] <KnowledgeShark> :)
[08:33:41] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Ping timeout: 272 seconds)
[08:33:43] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[08:33:53] *** Joins: dre (~dre@2001:8003:c932:c301:bcc3:636b:c0a:15ba)
[08:33:57] <jinsun__> KnowledgeShark: you can remove line 5 there, it useless now
[08:34:02] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[08:34:21] <KnowledgeShark> jinsun__: You are correct! Thank you for pointing that out.
[08:35:33] *** Quits: rMdes (~rmdes@my.armada.digital) (Client Quit)
[08:40:03] *** Quits: walterwhip (~www@user/walterwhip) (Quit: Textual IRC Client: www.textualapp.com)
[08:40:42] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[08:41:40] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[08:44:02] *** Joins: src (~src@user/src)
[08:45:15] *** Joins: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182)
[08:45:16] *** Joins: walter_whip (~walter_wh@69.167.16.140)
[08:48:12] *** Quits: humbertowoody (~humbertow@189.236.30.245) (Ping timeout: 240 seconds)
[08:48:14] *** Quits: llanhmod_ (~personnel@user/domhnall/x-2887755) (Ping timeout: 272 seconds)
[08:49:53] *** Joins: llanhmod_ (~personnel@user/domhnall/x-2887755)
[08:50:10] *** Quits: Guest80 (~Guest80@pool-96-253-74-73.rcmdva.fios.verizon.net) (Quit: Ping timeout (120 seconds))
[08:52:10] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[08:53:40] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[08:54:21] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[08:55:36] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[08:56:22] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[08:56:41] *** Joins: _filename (~kilitary@188.242.105.134)
[08:57:02] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Remote host closed the connection)
[08:57:26] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[08:57:28] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Remote host closed the connection)
[08:57:33] <sydbarret> im getting  Object of type int64 is not JSON serializable when Im trying to move a dataframe to google sheet
[08:57:44] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 272 seconds)
[08:58:14] <sydbarret> only happens when I remove the header with
[08:58:21] <sydbarret> df_final.columns = df_final.iloc[0]
[08:58:25] <very_sneaky> i don't think the `json` package recognises numpy datatypes - try converting it to an int?
[08:58:28] <sydbarret> df_final = df_final[1:]
[08:58:48] <BrenBarn> I thought pandas dataframes had a to_json method or something
[08:59:27] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[08:59:27] *** Quits: filename (~kilitary@static.246.201.46.78.clients.your-server.de) (Ping timeout: 256 seconds)
[08:59:27] *** _filename is now known as filename
[08:59:28] <sydbarret> so i have to locate all columns that have integers and do like  df_final['ID'] = df_final['ID'].astype(str)
[08:59:48] *** Joins: zaquest (~notzaques@5.130.79.72)
[08:59:56] <sydbarret> cant just convert all dataframe to str?
[09:00:06] <sydbarret> i mean all its values
[09:00:22] <very_sneaky> sydbarret: maybe look at https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.to_json.html#pandas.DataFrame.to_json as per BrenBarn's suggestion
[09:00:22] *** Joins: humbertowoody (~humbertow@189.236.30.245)
[09:00:45] *** Joins: zacts (~zacts@user/zacts)
[09:00:54] <sydbarret> its probably happening when I execute the api in  the part     body=dict(majorDimension='ROWS',values=df.T.reset_index().T.values.tolist())
[09:01:02] <very_sneaky> otherwise, `'key': int(df_final['ID'])`
[09:01:42] <BrenBarn> `df.to_json()` will give you JSON for the df
[09:01:43] *** Quits: OP-0 (~pca290122@213.152.165.98) (Ping timeout: 256 seconds)
[09:01:58] <sydbarret> let me try
[09:03:17] *** Joins: OP-0 (~pca290122@134.245.44.90)
[09:03:30] *** Joins: c4017w_ (~c4017@209.52.68.8)
[09:04:57] *** Joins: jpn (~jpn@user/jpn)
[09:05:16] <sydbarret> im getting  DataFrame index must be unique for orient='columns'
[09:05:44] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[09:06:09] *** Parts: ksynwa (~ksynwa@5.45.111.57) (WeeChat 3.4)
[09:06:48] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[09:08:15] *** Quits: korg815 (~korg815@user/korg815) (Quit: WeeChat 2.8)
[09:08:22] *** Quits: OP-0 (~pca290122@134.245.44.90) (Ping timeout: 250 seconds)
[09:09:37] *** Joins: OP-0 (~pca290122@193.9.112.182)
[09:09:40] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 250 seconds)
[09:10:43] *** Quits: powftw (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[09:12:13] *** Quits: dre (~dre@2001:8003:c932:c301:bcc3:636b:c0a:15ba) (Ping timeout: 240 seconds)
[09:12:37] *** Joins: crashrep (~crashrep@user/crashrep)
[09:13:13] *** Joins: shangxiao (~davids@101.165.217.11)
[09:13:49] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[09:14:26] *** nbin_ is now known as nbin
[09:16:26] *** connor_goodwolf_ is now known as connor_goodwolf
[09:18:36] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[09:19:19] <BrenBarn> well, what does your DF look like?
[09:20:08] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[09:22:22] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[09:26:17] *** Quits: sagax (~sagax_nb@user/sagax) (Quit: Konversation terminated!)
[09:27:13] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[09:27:17] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[09:27:21] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[09:30:40] *** Quits: Neopolitan (~tn5421@45.76.61.24) (Quit: The Lounge - https://thelounge.chat)
[09:31:05] *** Joins: jpn (~jpn@user/jpn)
[09:31:32] *** Joins: Neopolitan (~tn5421@45.76.61.24)
[09:32:32] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[09:32:34] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[09:33:02] *** Sadale is now known as chartyr
[09:33:06] *** chartyr is now known as Chartyr
[09:33:10] *** Chartyr is now known as Sadale
[09:33:24] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[09:34:27] *** Quits: sydbarret (~anton@static-186-121-195-159.acelerate.net) (Quit: Going offline, see ya! (www.adiirc.com))
[09:35:16] *** Joins: zebrag (~chris@user/zebrag)
[09:36:22] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 272 seconds)
[09:36:57] *** Quits: bloody (~bloody@user/bloody) (Quit: okluvyabubye)
[09:37:32] *** Joins: on^ (~on@50.232.121.75)
[09:39:37] *** Quits: zebrag (~chris@user/zebrag) (Client Quit)
[09:41:26] *** Quits: Wh0 (~V@103.86.19.99) (Ping timeout: 272 seconds)
[09:41:46] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[09:42:13] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Read error: Connection reset by peer)
[09:43:04] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[09:43:57] *** Joins: Wh0 (~V@103.86.19.99)
[09:44:45] *** Quits: OP-0 (~pca290122@193.9.112.182) (Ping timeout: 252 seconds)
[09:46:57] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 252 seconds)
[09:46:57] *** Joins: OP-0 (~pca290122@193.9.112.182)
[09:50:12] *** Joins: audiobirb (~audio@user/audio)
[09:52:38] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[09:54:55] *** Joins: jpn (~jpn@user/jpn)
[09:55:17] *** Joins: dre (~dre@2001:8003:c932:c301:efa8:3ab4:6d9d:737a)
[09:59:48] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 272 seconds)
[10:01:19] *** Joins: dreamscached (~dreamscac@user/dreamscached)
[10:01:58] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:02:39] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[10:03:24] *** Quits: humbertowoody (~humbertow@189.236.30.245) (Ping timeout: 240 seconds)
[10:03:24] <rvalue> what GUI framework is best for python app?
[10:03:28] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[10:04:15] *** Joins: c4017w__ (~c4017@209.52.68.8)
[10:04:23] <KirkMcDonald> Qt is okay.
[10:05:04] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:9c32:6ce7:3fcd:8461) (Read error: Connection reset by peer)
[10:06:49] *** Joins: lessshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[10:07:24] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[10:07:51] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[10:11:12] *** Quits: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Ping timeout: 272 seconds)
[10:13:35] *** Joins: humbertowoody (~humbertow@189.236.30.245)
[10:14:11] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[10:16:58] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[10:17:24] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[10:17:48] *** Quits: humbertowoody (~humbertow@189.236.30.245) (Ping timeout: 240 seconds)
[10:19:41] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[10:19:52] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[10:19:56] *** Quits: vlado1 (~vlado@2800:484:3587:3c90:8bf1:66d4:72a6:4f9c) (Ping timeout: 252 seconds)
[10:20:29] *** Joins: jay-m126 (~jay-m@129.0.76.213)
[10:20:33] *** Joins: jay-m126_ (~jay-m@129.0.76.213)
[10:20:34] *** Joins: jay-m1261 (~jay-m@129.0.76.213)
[10:20:36] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:48c2:4ab7:8578:594d)
[10:20:50] *** Joins: jpn (~jpn@user/jpn)
[10:21:02] *** Quits: ezakimak (~ezakimak@c-174-52-132-123.hsd1.ut.comcast.net) (Quit: ezakimak)
[10:22:12] *** Joins: ezakimak (~ezakimak@c-174-52-132-123.hsd1.ut.comcast.net)
[10:23:02] *** Quits: Hunterkll (~hunterkll@remote.kisaracorporation.com) (Ping timeout: 240 seconds)
[10:23:57] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[10:24:22] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[10:24:29] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[10:25:30] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 250 seconds)
[10:25:31] *** Joins: upsala (~zcb@185.209.196.134)
[10:25:48] *** Quits: dante443 (~dante443@2600:1702:7a0:9a40:6e62:6dff:fe5d:c340) (Ping timeout: 240 seconds)
[10:26:19] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[10:26:20] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:bc91:87ee:dc4:4024)
[10:26:20] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:bc91:87ee:dc4:4024) (Changing host)
[10:26:20] *** Joins: skapata (~Skapata@user/skapata)
[10:27:05] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[10:27:18] *** Joins: dante443 (~dante443@2600:1702:7a0:9a40:6e62:6dff:fe5d:c340)
[10:28:16] *** Joins: humbertowoody (~humbertow@189.236.30.245)
[10:28:56] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 272 seconds)
[10:29:39] *** Joins: kandaka (~kandaka@91.148.232.52)
[10:33:43] *** Joins: fuze (uid76888@id-76888.lymington.irccloud.com)
[10:34:18] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[10:34:45] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:35:48] *** Joins: sertsa (~sertsa@209.140.9.178)
[10:35:57] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[10:36:24] *** Quits: sertsa (~sertsa@209.140.9.178) (Client Quit)
[10:37:30] <KnowledgeShark> How would I break a file into two variables from reading a file, function open() : example filename "4706734.json" -> python variables, like filenumber = "4706734" , fileextension = ".json" , filefull ="4706734.json" .
[10:37:49] <filename> best is pcre
[10:38:35] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[10:38:39] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[10:39:26] <filename> but you can use strstr
[10:39:27] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[10:39:29] <filename> or use c#
[10:39:36] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[10:39:42] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[10:39:56] <KnowledgeShark> filename: I am really a beginner. I don't understand what you are saying.
[10:40:02] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[10:40:36] *** Quits: flyback (~flyback@2601:540:8201:1e60::1b5d) (Ping timeout: 240 seconds)
[10:40:44] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Client Quit)
[10:40:46] <EdFletcher> huh? just use pathlib.Path https://docs.python.org/3/library/pathlib.html
[10:41:10] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[10:41:23] <EdFletcher> definitely _don't_ use regular expressions, that's overkill. and c#? that's just trolling in a python channel.
[10:42:01] <KnowledgeShark> EdFletcher: Was pathlib.Path a library you suggest for my obstacle? If so, Thank you.
[10:42:37] <EdFletcher> KnowledgeShark: ah yeah it was, sorry forgot to ping you
[10:42:46] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[10:43:10] <KnowledgeShark> EdFletcher: No Worries. I appreciate it! Looks like a huge library.
[10:44:35] <EdFletcher> haha it is, so much so that i thought i remembered it had something specific to this use case that i can't find right now
[10:44:37] *** Quits: Tacoder (~Tacoder@2806:264:5482:9e0:41a9:db03:a62f:f2fb) (Quit: Leaving)
[10:45:48] *** Joins: EGH (~EGH@185.25.195.104)
[10:45:56] *** Joins: Yugi (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[10:46:26] <EdFletcher> oh fhew it does, just named in a way i wasn't expected: the `.stem` and `.suffix` properties will be of interest here
[10:46:26] *** Joins: dclxvi (~quassel@2a02:8084:84:4100:8d16:2131:9d6:4c56)
[10:49:20] *** Quits: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 250 seconds)
[10:50:12] *** Quits: Wh0 (~V@103.86.19.99) (Ping timeout: 252 seconds)
[10:50:58] *** Joins: SaifRahman[m] (~saifrahma@2001:470:69fc:105::1:d986)
[10:51:17] *** Quits: iwkse (~iwkse@iurit.com) (Ping timeout: 240 seconds)
[10:51:51] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[10:53:23] <KnowledgeShark> EdFletcher: Much appreciated sir!
[10:53:25] *** Joins: flyback (~flyback@2601:540:8201:1e60::de9)
[10:54:58] *** Quits: jjasghar (~jjasghar@idlerpg/player/jjasghar) (Read error: Connection reset by peer)
[10:55:24] *** Quits: dclxvi (~quassel@2a02:8084:84:4100:8d16:2131:9d6:4c56) (Ping timeout: 240 seconds)
[10:55:42] *** Joins: Wh0 (~V@103.86.19.99)
[10:56:37] *** Joins: tobybl (~tobybl@227.192.115.87.dyn.plus.net)
[10:57:13] *** Joins: jjasghar (~jjasghar@idlerpg/player/jjasghar)
[10:59:33] *** Joins: Veil (~Veil@user/Veil)
[11:00:03] *** Quits: upsala (~zcb@185.209.196.134) (Quit: WeeChat 3.4)
[11:02:13] *** Joins: hanzo (uid532183@user/hanzo)
[11:03:09] *** Joins: manti7 (~manti7@176.10.104.94)
[11:04:01] *** Joins: white2 (~mahengrui@user/mahengrui1)
[11:04:53] *** Joins: c4017w_ (~c4017@209.52.68.8)
[11:06:14] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 250 seconds)
[11:08:08] *** Joins: akaWolf (~akaWolf@akawolf.org)
[11:08:21] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[11:09:15] *** Quits: spithash (~spithash@user/spithash) (Ping timeout: 240 seconds)
[11:09:49] *** Joins: sr71919 (~sr71919@2405:201:e025:f094:391e:1b41:e77c:8677)
[11:10:26] *** Quits: stdout (~stdout@2605:ab80:b000:7202:3e12:af82:936c:2ff6) (Quit: Leaving)
[11:10:33] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:11:49] *** Joins: parv (~quass@user/parv)
[11:11:58] <sr71919> Hello all, im working on python async task creation for every message i receive in mqtt topic
[11:12:06] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[11:13:23] *** Joins: NeoCore (~neocore@160.238.38.188)
[11:14:17] *** Quits: Anarkitty (~c0a801f8@user/Anarkitty) (Read error: Connection reset by peer)
[11:14:36] *** Joins: dreamon (~dreamon@p57a4c768.dip0.t-ipconnect.de)
[11:15:03] *** Joins: jpn (~jpn@user/jpn)
[11:15:47] *** Joins: Anarkitty (~c0a801f8@user/Anarkitty)
[11:19:24] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[11:20:14] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 272 seconds)
[11:20:47] *** Quits: hrm (~hrm@nimbus.harmtemolder.nl) (Quit: ZNC 1.8.2 - https://znc.in)
[11:22:16] *** Joins: hrm (~hrm@nimbus.harmtemolder.nl)
[11:22:50] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[11:23:03] *** Quits: hrm (~hrm@nimbus.harmtemolder.nl) (Client Quit)
[11:25:05] *** Joins: hrm (~hrm@nimbus.harmtemolder.nl)
[11:25:19] *** Quits: dreamon (~dreamon@p57a4c768.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[11:25:47] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[11:26:26] *** Joins: spithash (~spithash@user/spithash)
[11:27:55] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[11:28:11] <sr71919> could someone help with asyncio - im not able to run multiple ongoing tasks in concurrency
[11:28:56] *** Joins: greedom (~greedom@p200300de6705e30087cb3efb95047236.dip0.t-ipconnect.de)
[11:31:02] *** Quits: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:31:23] *** Joins: Helithumper (~Helithump@c-76-25-170-226.hsd1.co.comcast.net)
[11:31:41] *** Joins: fbiagent_ (~fbiagent@user/fbiagent)
[11:32:27] *** Quits: cthulchu_ (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[11:32:30] *** Joins: memoryleak (~quassel@195-202-248-193.dynamic.hispeed.ch)
[11:32:51] *** Joins: grooverman (~grooverma@152.250.149.217)
[11:34:43] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[11:34:48] *** Quits: grooverman_ (~grooverma@152.250.149.217) (Ping timeout: 272 seconds)
[11:34:48] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Ping timeout: 272 seconds)
[11:35:26] *** Quits: kandaka (~kandaka@91.148.232.52) (Ping timeout: 272 seconds)
[11:36:56] <mickey> how would i fill missing time series indexes in a dataframe with 0 value? there's like 1/1/20, 1/3/20, 1/4/20, 1/5/20, and i'd like to add 1/2/20 which is missing in between with value 0
[11:37:24] <mickey> date_range() doesn't exactly cut it for me because i loop through multiple files that have different start and end dates
[11:38:21] *** Quits: memoryleak (~quassel@195-202-248-193.dynamic.hispeed.ch) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[11:39:47] <mickey> i found some code on stackoverflow but it feels somewhat over-complex so i wonder if there's a better way
[11:40:19] *** Quits: toulene (~toulene@user/toulene) (Read error: Connection reset by peer)
[11:41:03] *** Quits: sr71919 (~sr71919@2405:201:e025:f094:391e:1b41:e77c:8677) (Remote host closed the connection)
[11:41:09] <white2> you may fill 0 by hands(input manually) it may be quick enough
[11:41:21] *** Joins: sr71919 (~sr71919@2405:201:e025:f094:391e:1b41:e77c:8677)
[11:41:42] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[11:41:43] *** Joins: amogorkon (~amogorkon@user/amogorkon)
[11:42:07] *** Joins: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net)
[11:42:37] *** Joins: toulene (~toulene@user/toulene)
[11:42:51] *** Quits: toulene (~toulene@user/toulene) (Read error: Connection reset by peer)
[11:43:15] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:43:15] *** Joins: memoryleak (~quassel@195-202-248-193.dynamic.hispeed.ch)
[11:44:11] <mickey> i ended up with just df.apply() a lambda x: x.reindex(pd.date_range(x.index.min(), x.index.max(), freq='D', name='Label'))
[11:44:16] <mickey> and then df.fillna(0)
[11:45:15] *** Joins: jpn (~jpn@user/jpn)
[11:45:27] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[11:46:03] *** Quits: sr71919 (~sr71919@2405:201:e025:f094:391e:1b41:e77c:8677) (Ping timeout: 256 seconds)
[11:46:59] *** Joins: toulene (~toulene@user/toulene)
[11:47:02] *** Quits: src (~src@user/src) (Quit: leaving)
[11:47:24] *** Quits: humbertowoody (~humbertow@189.236.30.245) (Ping timeout: 240 seconds)
[11:47:24] *** Quits: pyeverything (~pyeveryth@64-18-153-56.starry-inc.net) (Ping timeout: 250 seconds)
[11:48:17] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[11:48:30] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[11:49:10] *** Joins: wyclif (~wyclif@user/wyclif)
[11:49:34] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 250 seconds)
[11:50:09] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 252 seconds)
[11:51:10] *** Joins: src (~src@user/src)
[11:51:26] *** Quits: src (~src@user/src) (Client Quit)
[11:52:32] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[11:53:12] *** Quits: Batzy (~quassel@user/batzy) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[11:53:24] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[11:53:55] *** Joins: sr71919 (~sr71919@2405:201:e025:f094:391e:1b41:e77c:8677)
[11:54:20] *** Joins: Batzy (~quassel@user/batzy)
[11:54:43] *** Quits: Wh0 (~V@103.86.19.99) (Quit: Leaving)
[11:55:16] *** Quits: sr71919 (~sr71919@2405:201:e025:f094:391e:1b41:e77c:8677) (Remote host closed the connection)
[11:55:33] *** Joins: sr71919 (~sr71919@2405:201:e025:f094:391e:1b41:e77c:8677)
[11:56:39] *** Quits: ghost43_ (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[11:57:04] *** Joins: rsx (~dummy@ppp-188-174-146-205.dynamic.mnet-online.de)
[11:57:30] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[11:58:18] *** Quits: on^ (~on@50.232.121.75) (Remote host closed the connection)
[11:58:39] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[11:59:07] *** Quits: lessshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[11:59:19] *** Joins: lessshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[11:59:58] *** Quits: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[12:00:13] *** Quits: sr71919 (~sr71919@2405:201:e025:f094:391e:1b41:e77c:8677) (Ping timeout: 256 seconds)
[12:00:15] *** Joins: humbertowoody (~humbertow@189.236.30.245)
[12:03:33] *** Joins: namkeleser (~namkelese@101.175.104.107)
[12:05:17] *** Quits: gambl0re (~gambl0re@2607:fea8:a59f:c360::4f67) (Ping timeout: 240 seconds)
[12:05:38] *** Joins: c4017w__ (~c4017@209.52.68.8)
[12:06:33] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:e3ee:c4db:8320:c494)
[12:07:20] *** Quits: dreamscached (~dreamscac@user/dreamscached) (Ping timeout: 250 seconds)
[12:07:51] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[12:09:38] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[12:10:51] *** Quits: filename (~kilitary@188.242.105.134) (Quit: joined libera)
[12:11:02] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:14:28] *** Joins: magla (~gelignite@55d47190.access.ecotel.net)
[12:14:42] *** Quits: llanhmod_ (~personnel@user/domhnall/x-2887755) (Ping timeout: 272 seconds)
[12:15:47] *** Joins: llanhmod_ (~personnel@user/domhnall/x-2887755)
[12:17:06] *** Joins: moog_ (~moog@107.126.53.51)
[12:17:58] <KnowledgeShark> i'm lost with pathlib2 ; I can't seem to understand this library for what I am trying to achieve. Are there any other ways of splitting files into variables; other alternative libraries perhaps?
[12:18:12] *** Joins: jpn (~jpn@user/jpn)
[12:19:02] *** Quits: memoryleak (~quassel@195-202-248-193.dynamic.hispeed.ch) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[12:19:18] *** Quits: moog (~moog@98.97.87.156) (Ping timeout: 252 seconds)
[12:22:36] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:48c2:4ab7:8578:594d) (Ping timeout: 240 seconds)
[12:23:09] *** Quits: jpn (~jpn@user/jpn) (Ping timeout: 252 seconds)
[12:24:04] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[12:24:15] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 240 seconds)
[12:28:35] <EdFletcher> KnowledgeShark: https://ideone.com/2KJM0e
[12:28:38] *** Joins: palasso (~palasso@user/palasso)
[12:28:52] *** Joins: deniska (~deniska@user/deniska)
[12:29:31] <KnowledgeShark> EdFletcher: 100% *high five*
[12:30:00] <EdFletcher> KnowledgeShark: ✋
[12:31:51] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:32:02] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[12:32:20] *** Joins: Auron (Auron956@user/auron)
[12:32:38] *** Joins: dreamscached (~dreamscac@user/dreamscached)
[12:33:27] *** Joins: PhilosophicCheck (~Philosoph@ppp089210080078.access.hol.gr)
[12:33:28] *** Joins: memoryleak (~quassel@195-202-248-193.dynamic.hispeed.ch)
[12:33:37] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[12:33:45] *** Joins: TheCat (~TheCat@user/z-cat)
[12:34:26] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[12:36:22] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[12:38:36] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[12:38:49] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[12:39:26] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[12:40:51] *** Quits: PhilosophicCheck (~Philosoph@ppp089210080078.access.hol.gr) (Quit: Leaving)
[12:41:09] <KnowledgeShark> EdFletcher: here is my dpaste : https://dpaste.com/3S684LM55 ; How do I store/print only the "4706734" in file_broken_up_1 & ".json" in file_broken_up_2 ?
[12:41:15] <KnowledgeShark> Thank you again!
[12:41:50] <KnowledgeShark> ohhh... do I just remove "filenumber": ?
[12:43:08] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[12:44:37] <KnowledgeShark> got it!
[12:45:08] *** Joins: blackout69 (~blackout6@37.183.230.121)
[12:45:51] <KnowledgeShark> EdFletcher: this worked perfect: https://dpaste.com/DCYXK57A9 - :)
[12:48:18] *** Quits: death916 (~death916@user/death916) (Read error: Connection reset by peer)
[12:48:56] *** Quits: OP-0 (~pca290122@193.9.112.182) (Ping timeout: 250 seconds)
[12:49:00] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[12:49:34] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:50:39] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Ping timeout: 252 seconds)
[12:51:06] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[12:51:13] *** Joins: OP-0 (~pca290122@193.9.112.182)
[12:53:11] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[12:54:26] *** Joins: MarderIII (~MarderIII@2a02-a45a-72f1-1-bd6f-9234-8444-86f8.fixed6.kpn.net)
[12:54:36] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[12:57:52] *** Quits: fuze (uid76888@id-76888.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[12:58:22] *** Joins: ubert (~Thunderbi@p200300ecdf19b7b750061d6876d392e8.dip0.t-ipconnect.de)
[12:58:28] *** Joins: kosh (~kosh@user/kosh)
[12:58:51] *** Joins: mickey0 (~user@user/mickey)
[12:59:44] *** Joins: ub (~Thunderbi@p200300ecdf19b7b7b1fc5a865b2694ae.dip0.t-ipconnect.de)
[13:01:40] *** Joins: dreamon (~dreamon@p57a4c768.dip0.t-ipconnect.de)
[13:02:50] *** Quits: mickey (~user@user/mickey) (Ping timeout: 272 seconds)
[13:02:51] *** mickey0 is now known as mickey
[13:02:56] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:03:26] *** Quits: Strom (strom@fedora/strom) ()
[13:04:12] *** Quits: humbertowoody (~humbertow@189.236.30.245) (Ping timeout: 240 seconds)
[13:05:08] *** Joins: Strom (strom@fedora/strom)
[13:05:15] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 240 seconds)
[13:05:52] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[13:06:18] *** Joins: c4017w_ (~c4017@209.52.68.8)
[13:06:34] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[13:07:32] *** Joins: Collaken (~flo@ip4d17fdd1.dynamic.kabel-deutschland.de)
[13:09:03] *** Quits: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182) (Remote host closed the connection)
[13:09:04] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[13:09:17] *** Joins: spithash (~spithash@user/spithash)
[13:09:25] *** Joins: BoBeR182 (~BoBeR182@gateway/tor-sasl/bober182)
[13:10:26] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[13:12:56] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[13:14:56] *** Quits: memoryleak (~quassel@195-202-248-193.dynamic.hispeed.ch) (Ping timeout: 250 seconds)
[13:15:18] *** Joins: ahammer (~ahammer@157.122.68.183)
[13:15:35] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Ping timeout: 256 seconds)
[13:16:14] *** Quits: ahammer (~ahammer@157.122.68.183) (Client Quit)
[13:16:19] *** Joins: aslicedbanjo (~aslicedba@host31-48-146-80.range31-48.btcentralplus.com)
[13:16:27] *** Joins: ahammer (~ahammer@157.122.68.183)
[13:16:33] *** Joins: humbertowoody (~humbertow@189.236.30.245)
[13:17:47] *** Joins: kiras (~kiras@user/kiras)
[13:19:57] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 272 seconds)
[13:20:54] *** Quits: ahammer (~ahammer@157.122.68.183) (Ping timeout: 252 seconds)
[13:23:29] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:23:41] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[13:23:47] *** Joins: ahammer (~ahammer@157.122.68.183)
[13:24:10] *** Quits: ahammer (~ahammer@157.122.68.183) (Remote host closed the connection)
[13:24:11] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[13:24:12] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[13:24:13] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[13:24:59] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:25:22] *** Joins: thiras (~thiras@user/thiras)
[13:25:22] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: I'm a quit message virus. Please replace your old line with this line and help me take over the world. <screw you aloo_shu my old line was better and more creative!>)
[13:25:48] *** Parts: blackout69 (~blackout6@37.183.230.121) ()
[13:27:17] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[13:27:57] *** Joins: rendar (~rendar@user/rendar)
[13:28:01] *** Joins: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be)
[13:28:07] *** Quits: lessshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[13:28:18] *** Joins: lessshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[13:28:37] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[13:28:48] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[13:29:11] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[13:29:47] *** Quits: jazzy (~jaziz@user/jaziz) (Quit: Beddie bye-bye)
[13:30:48] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[13:31:02] *** Quits: tobybl (~tobybl@227.192.115.87.dyn.plus.net) (Remote host closed the connection)
[13:31:03] *** Quits: int (~int@0x4.cx) (Quit: see you :))
[13:31:28] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Read error: Connection reset by peer)
[13:32:00] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[13:32:09] *** Quits: parv (~quass@user/parv) (Quit: parv)
[13:32:45] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[13:36:44] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[13:36:52] *** Joins: humberto1 (~humbertow@189.236.30.245)
[13:39:35] *** Joins: ice9 (~ice9@user/ice9)
[13:39:37] *** Quits: humbertowoody (~humbertow@189.236.30.245) (Ping timeout: 240 seconds)
[13:42:13] *** Joins: kandaka (~kandaka@2001:8f8:1425:5aaa:acb3:7c98:9b25:6da9)
[13:42:38] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[13:43:06] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:49:21] *** Quits: namkeleser (~namkelese@101.175.104.107) (Quit: Client closed)
[13:49:32] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[13:50:00] *** Quits: kcrk_ (~kcrk@user/kcrk) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[13:50:28] *** Joins: kcrk (~kcrk@user/kcrk)
[13:51:34] *** Quits: greedom (~greedom@p200300de6705e30087cb3efb95047236.dip0.t-ipconnect.de) (Remote host closed the connection)
[13:51:49] *** Joins: slav0nic (slav0nic@python.su)
[13:53:21] *** Quits: OP-0 (~pca290122@193.9.112.182) (Ping timeout: 252 seconds)
[13:53:29] *** Joins: anshupatia (uid29854@id-29854.helmsley.irccloud.com)
[13:55:34] *** Joins: OP-0 (~pca290122@134.19.188.91)
[13:58:39] *** Quits: dreamon (~dreamon@p57a4c768.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[14:03:22] *** transbee is now known as transbea
[14:03:22] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[14:05:00] *** Quits: schumaml (~schumaml@ipservice-092-211-205-104.092.211.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[14:06:35] *** Joins: c4017w__ (~c4017@209.52.68.8)
[14:07:19] *** Joins: schumaml (~schumaml@dslb-178-007-198-199.178.007.pools.vodafone-ip.de)
[14:07:37] *** Joins: the_lanetly_052 (~the_lanet@194.135.168.228)
[14:08:50] *** Joins: greedom (~greedom@p200300de6705e30087cb3efb95047236.dip0.t-ipconnect.de)
[14:09:51] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 252 seconds)
[14:12:51] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[14:17:57] *** Joins: memoryleak (~quassel@195-202-248-193.dynamic.hispeed.ch)
[14:19:31] *** Joins: afidegnum (~afidegnum@102.176.94.94)
[14:19:57] *** Quits: humberto1 (~humbertow@189.236.30.245) (Ping timeout: 240 seconds)
[14:20:10] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:48c2:4ab7:8578:594d)
[14:21:51] <afidegnum> hi, How do i strip the backslashes?   "attrib": "{\\\"lang\\\": \\\"en\\\"}",
[14:22:21] *** Joins: Fifan (~Fifan@188.243.183.56)
[14:22:25] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[14:22:37] <ChrisWarrick> afidegnum: where did you get that string from?
[14:22:55] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[14:23:31] <afidegnum> it got queried from the database with escaped quotes
[14:23:36] <afidegnum> graph database
[14:23:50] *** Quits: kandaka (~kandaka@2001:8f8:1425:5aaa:acb3:7c98:9b25:6da9) (Ping timeout: 250 seconds)
[14:24:33] <afidegnum> ChrisWarrick: {\"lang\": \"en\"}
[14:24:47] <ChrisWarrick> afidegnum: who stored this string in the database this way?
[14:25:48] *** Quits: jay-m1261 (~jay-m@129.0.76.213) (Ping timeout: 252 seconds)
[14:25:48] *** Quits: jay-m126_ (~jay-m@129.0.76.213) (Ping timeout: 252 seconds)
[14:25:48] *** Quits: jay-m126 (~jay-m@129.0.76.213) (Ping timeout: 252 seconds)
[14:26:56] <wyre> do you recommend me just pymongo to work with mongodb?
[14:27:21] <wyre> isn't there something as the ORM concept in mongo?
[14:27:34] *** Joins: jay-m126 (~jay-m@129.0.76.211)
[14:27:44] *** Joins: jay-m126_ (~jay-m@129.0.76.211)
[14:27:48] *** Joins: jay-m1261 (~jay-m@129.0.76.211)
[14:28:03] *** Quits: widp` (~user@124.123.104.62) (Read error: Connection reset by peer)
[14:28:15] <wyre> maybe ... this? https://pypi.org/project/pymongo-model/
[14:28:25] * ChrisWarrick recommends not working with mongodb
[14:28:33] <llanhmod> ;(
[14:28:38] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[14:29:27] <wyre> oh, I think I got it https://pypi.org/project/pymodm/
[14:29:36] <wyre> ChrisWarrick, why? 🤔
[14:30:01] <llanhmod> yeah... ChrisWarrick, why not mongodb?
[14:30:28] *** Joins: Wh0 (~V@103.86.19.99)
[14:30:29] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[14:30:38] * llanhmod gonna use it regardless, just curious
[14:30:40] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[14:30:42] *** Joins: QuHaR (~QuHaR@192.162.148.48)
[14:30:45] *** Joins: humberto1 (~humbertow@189.236.30.245)
[14:31:12] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 250 seconds)
[14:32:07] *** Joins: cyphase (~cyphase@user/cyphase)
[14:32:15] <bookworm> license, depending on your viewpoint
[14:32:29] <ChrisWarrick> mongodb has a bad track record of cheating on benchmarks, trading benchmark speed for data loss potential. MongoDB's licensing can be problematic in some environments. Relational databases can handle large amounts of data just fine, and in the rare case you need unstructured data (hint: you don’t), you can use jsonb fields in postgres.
[14:32:30] <bookworm> they had a rather... interesting fallout
[14:32:30] <llanhmod> wyre: personally though, I enjoy interacting with mongodb more from python's pymongo than from java or c#.
[14:33:04] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:33:31] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[14:33:44] <wyre> sure llanhmod but I think the appropriate way to do it is with some wrapper for pymongo ... and this pymodm looks good
[14:34:30] <wyre> I'm planning to handle gitlab webhooks in a db and I thought noSQL was ideal 🤔
[14:34:53] <ChrisWarrick> wyre: what could nosql help you with that sql might not?
[14:35:09] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[14:35:52] <ChrisWarrick> wyre: if you want to store all the data gitlab sends at you, postgresql can do it easily with jsonb (and yes, you can query those fields)
[14:35:54] <wyre> I'm not sure ... I guess every one have their pros and cons ¯\_(ツ)_/¯
[14:36:07] *** Quits: lessshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Read error: Connection reset by peer)
[14:36:18] *** Joins: lessshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[14:36:22] <llanhmod> and every developer has that, "im gonna do it with this tool" phase also
[14:36:30] <ChrisWarrick> nosql databases have a lot of hype between them, but in reality, they’re not that great, and postgres can often get you better results
[14:36:31] <wyre> ChrisWarrick, and do you recommend me to do it with some ORM as SQLAlchemy?
[14:36:48] <ChrisWarrick> wyre: sure, ORMs are great
[14:36:50] *** Joins: spacenautx (~spacenaut@user/spacenautx)
[14:37:06] *** Joins: agumonke` (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7)
[14:37:37] <wyre> ChrisWarrick, the point also is I'm not sure how to structure the data in a SQL way
[14:38:01] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[14:38:16] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[14:38:32] *** Joins: zacts (~zacts@user/zacts)
[14:39:50] *** Joins: VoidSync (~sync@user/voidsync)
[14:40:18] <wyre> bc I should store a whole json per webhook event for the same issue id, for example
[14:40:20] *** Joins: namkeleser (~namkelese@101.175.104.107)
[14:40:30] <wyre> so that means I have to store a lot of jsons
[14:41:42] <wyre> (for every gitlab issue)
[14:45:23] *** Joins: kandaka (~kandaka@2001:8f8:1425:5aaa:7449:bc7e:1dbf:f84d)
[14:45:40] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[14:46:04] *** Joins: blackout69 (~blackout6@37.183.198.248)
[14:46:34] *** Quits: aslicedbanjo (~aslicedba@host31-48-146-80.range31-48.btcentralplus.com) (Quit: Leaving.)
[14:47:01] *** Joins: thorbw (~tw@46.230.130.50)
[14:47:55] *** Quits: QuHaR (~QuHaR@192.162.148.48) (Quit: WeeChat 3.3)
[14:48:06] *** Joins: kiirevurr (~seymon@85.203.44.165)
[14:49:25] *** Joins: cypostres (~cypostres@user/cypostres)
[14:50:11] *** Joins: darksun (~darksun@user/darksun)
[14:51:00] *** Quits: aoapteek (~seymon@85.203.44.165) (Ping timeout: 240 seconds)
[14:51:11] *** Joins: ivii (~ivan@user/ivii)
[14:51:35] *** Quits: phaise (~phaise@gateway/tor-sasl/phaise) (Ping timeout: 240 seconds)
[14:52:07] <nedbat> wyre: i think the point is that postgres has json support that lets you just dump json blobs as they are, and then work with them: https://www.postgresqltutorial.com/postgresql-json/
[14:53:05] <mentallyinspired> wyre SQLAlchemy is the way to go. If you have a lot of json then you should serialize and deserialize the json to ORM objects
[14:53:47] <mentallyinspired> Check out marshmallow for the serializing part
[14:54:17] <mentallyinspired> json <-> marshmallow schema <-> ORM object
[14:54:19] *** Joins: phaise (~phaise@gateway/tor-sasl/phaise)
[14:54:46] <mentallyinspired> ORM object = db Model
[14:55:38] *** Joins: thevishy (~Nishant@49.37.242.151)
[14:57:30] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[14:59:37] *** Joins: sobkas (~sobkas@95.175.17.217)
[15:00:27] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[15:03:48] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 272 seconds)
[15:03:50] <ChrisWarrick> wyre: you probably don’t need all the data from your webhooks
[15:03:58] *** Quits: afidegnum (~afidegnum@102.176.94.94) (Quit: leaving)
[15:04:46] *** Joins: revolve (~u0_a227@82-132-238-51.dab.02.net)
[15:04:47] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:07:14] *** Joins: c4017w_ (~c4017@209.52.68.8)
[15:08:49] *** Quits: blackout69 (~blackout6@37.183.198.248) (Quit: Leaving.)
[15:09:20] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[15:09:24] *** Quits: kickingvegas (~cchoi@c-73-170-198-193.hsd1.ca.comcast.net) (Quit: leaving)
[15:09:51] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[15:09:53] *** Joins: kandaka_ (~kandaka@81.171.63.88)
[15:10:38] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[15:12:38] *** Joins: savolla (~quassel@95.10.203.10)
[15:13:21] *** Joins: euouae (~euouae@user/euouae)
[15:13:40] *** Quits: kandaka (~kandaka@2001:8f8:1425:5aaa:7449:bc7e:1dbf:f84d) (Ping timeout: 250 seconds)
[15:13:42] <euouae> Hello if I create a venv, can I move it around in the filesystem?
[15:13:51] <euouae> e.g. if I have it under ~/foo/ can I then move it under ~/bar/
[15:14:44] <ChrisWarrick> euouae: no, you cannot
[15:14:49] <bjs> euouae: generally, no.  venvs are not supposed to be moved
[15:15:09] <bjs> euouae: you should be able to just make a new one under ~/bar/ and delete the old one though,  as venvs are 'cheap' and disposable
[15:15:09] <ChrisWarrick> euouae: you can create a new venv in ~/bar/, and then install all packages (pip freeze > requirements.txt   in the old one,  pip install -r requirements.txt   in the new one)
[15:16:21] <euouae> Nice, thanks
[15:16:28] *** Joins: PaterTemporalis (~woooopsie@2001:8a0:ee2a:bc00:c12c:db1:60bf:c91c)
[15:16:28] *** Quits: bookworm (~bookworm@thelounge/maintainer/bookworm) ()
[15:16:51] *** Quits: zerok (~zerok@user/zerok) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[15:17:26] *** Joins: bookworm (~bookworm@thelounge/maintainer/bookworm)
[15:18:58] *** Quits: savolla (~quassel@95.10.203.10) (Remote host closed the connection)
[15:20:14] *** Joins: zerok (~zerok@user/zerok)
[15:20:15] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[15:20:21] <wyre> mentallyinspired, but that's the traditional way I think ... I'm not sure if storing the jsons as they are (as in noSQL) will imply serializing <-> deserializing them 🤔
[15:25:12] *** Joins: horner (~horner@host86-153-58-154.range86-153.btcentralplus.com)
[15:28:01] <ChrisWarrick> wyre: you don’t always need all data you get from GitLab; in fact, if you depend on their data format, you might find that an upgrade to their backend will break your app in an incompatible way
[15:28:12] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[15:28:30] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[15:28:59] <wyre> so you don't recommend me mongodb, do you?
[15:29:17] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:29:56] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:69e4:5ba1:554a:22f)
[15:30:12] *** Quits: dkr13 (~dkr13@dkr13.de) (Quit: The Lounge - https://thelounge.chat)
[15:30:13] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[15:31:50] *** Joins: Iolo (~iolo@user/Iolo)
[15:32:43] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[15:32:43] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[15:32:49] *** Joins: nomic (~nomic@185.192.69.74)
[15:33:11] *** Joins: dkr13 (~dkr13@dkr13.de)
[15:33:23] <ChrisWarrick> I recommend postgresql
[15:33:59] *** Quits: dkr13 (~dkr13@dkr13.de) (Client Quit)
[15:35:00] *** Joins: dkr13 (~dkr13@dkr13.de)
[15:35:27] *** Quits: dkr13 (~dkr13@dkr13.de) (Client Quit)
[15:36:08] <wyre> ChrisWarrick, what about SQLite?
[15:36:39] *** Joins: dkr13 (~dkr13@dkr13.de)
[15:37:04] *** Quits: dkr13 (~dkr13@dkr13.de) (Client Quit)
[15:37:21] <euouae> I second postgresql
[15:37:28] *** Joins: kandaka (~kandaka@2001:8f8:1425:5aaa:417e:7c3f:abeb:61)
[15:38:11] *** Joins: dkr13 (~dkr13@dkr13.de)
[15:38:25] *** Joins: bomb-on (~bomb-on@user/bomb-on)
[15:38:38] *** Quits: kandaka_ (~kandaka@81.171.63.88) (Ping timeout: 272 seconds)
[15:38:52] <ChrisWarrick> wyre: sqlite3 lacks json support and it’s not necessarily suited for concurrent use
[15:39:39] <wyre> so you recommend sqlalchemy + postgresql, don't you?
[15:40:04] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:42:38] <KnowledgeShark> i'm a noob; however; I am currently working on parsing multiple datasets of json files -> MariaDB. SQLAlchemy, PyMySQL have been good to me so far in this journey.
[15:43:53] *** Quits: starz (starz@2001:41d0:8:4bd3::1) (Ping timeout: 252 seconds)
[15:44:06] <ChrisWarrick> wyre: yes
[15:44:10] *** Joins: kandaka_ (~kandaka@2001:8f8:1425:5aaa:4c31:3e9d:fb4a:8e51)
[15:44:58] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[15:45:20] *** Quits: kandaka_ (~kandaka@2001:8f8:1425:5aaa:4c31:3e9d:fb4a:8e51) (Client Quit)
[15:45:26] <bookworm> ChrisWarrick: sqlite3*has* json support
[15:45:47] <bookworm> a bit less fancy than pg, naturally
[15:45:59] *** Quits: avalon (avalon@coredump.net) (Quit: leaving)
[15:46:02] <bookworm> but for simple field extraction it's good enough
[15:46:10] *** Quits: llanhmod_ (~personnel@user/domhnall/x-2887755) (Ping timeout: 250 seconds)
[15:46:30] *** Joins: squirrel (uid529456@user/squirrel)
[15:46:52] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Ping timeout: 272 seconds)
[15:46:57] *** Quits: VoidSync (~sync@user/voidsync) (Quit: Leaving)
[15:47:02] *** Quits: humberto1 (~humbertow@189.236.30.245) (Ping timeout: 250 seconds)
[15:47:18] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[15:47:46] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[15:47:54] *** Quits: kandaka (~kandaka@2001:8f8:1425:5aaa:417e:7c3f:abeb:61) (Ping timeout: 250 seconds)
[15:48:04] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::ef3c)
[15:48:28] *** Joins: llanhmod_ (~personnel@user/domhnall/x-2887755)
[15:49:46] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[15:49:52] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[15:50:02] <ChrisWarrick> postgres has jsonb, which is binary storage for json documents
[15:50:03] <KnowledgeShark> Thank you everyone for this great channel here on libera.chat! Great people in here! I appreciate you! :)
[15:51:44] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[15:51:52] *** Joins: plastico (~plastico@neomutt/plastico)
[15:52:14] *** Quits: kiirevurr (~seymon@85.203.44.165) (Ping timeout: 250 seconds)
[15:54:45] *** Joins: starz (~starz@2001:41d0:8:4bd3::1)
[15:54:57] *** Joins: Doktor_Schniedel (~Doktor@96.241.239.7)
[15:55:07] *** Joins: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp)
[15:55:08] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[15:55:22] *** Parts: Doktor_Schniedel (~Doktor@96.241.239.7) (hi)
[15:56:28] *** Joins: Lando-SpaceIzzle (~Lando-Spa@user/lando-spacepimp)
[15:58:16] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Read error: Connection reset by peer)
[15:58:35] *** Joins: humberto1 (~humbertow@189.236.30.245)
[15:59:33] *** Joins: Klinda (~superleag@user/klinda)
[16:00:24] *** Quits: Lando-HoloNet (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 252 seconds)
[16:02:30] *** Quits: MarderIII (~MarderIII@2a02-a45a-72f1-1-bd6f-9234-8444-86f8.fixed6.kpn.net) (Quit: Leaving)
[16:03:00] *** Quits: humberto1 (~humbertow@189.236.30.245) (Ping timeout: 240 seconds)
[16:03:50] *** Joins: asa22 (~asa22@77.211.7.224)
[16:05:24] <asa22> Hello, I've been assigned a coding challenged where I am forbidden from using for, while loops or any list/set/dict comprehension, but I need to use loops, like Idk how one would even go about doing this otherwise, for example to read lines from stinput, should I implement my own for loop and use that one?
[16:05:47] <BASHitup> Well, well ....
[16:05:59] *** Joins: cdown_ (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[16:06:00] <nedbat> asa22: what other python features have you been taught?
[16:06:19] <asa22> none
[16:06:25] <asa22> I'm a super beginner
[16:06:27] <ChrisWarrick> asa22: what is this challenge a part for?
[16:06:32] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Ping timeout: 250 seconds)
[16:06:36] <asa22> school
[16:06:39] *** cdown_ is now known as cdown
[16:07:03] <ChrisWarrick> asa22: what did they teach you?
[16:07:05] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[16:07:31] *** Joins: c4017w__ (~c4017@209.52.68.8)
[16:07:31] *** Quits: euouae (~euouae@user/euouae) (Read error: Connection reset by peer)
[16:07:55] <asa22> just the basics of the language
[16:08:01] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[16:08:12] <asa22> what other things are there in python that I could use?
[16:08:18] <ChrisWarrick> that sounds like a backwards approach to teaching to me
[16:08:21] <jinsun__> reading lines doesn't need loop, you can just f.readlines()
[16:08:27] <phaise> https://en.wikipedia.org/wiki/Loop_unrolling
[16:08:29] <ChrisWarrick> you could use recursion
[16:08:45] <asa22> ooh
[16:08:56] <dreamscached> as alternative to loops use list/set/dict comprehension
[16:09:03] <dreamscached> or map(..)
[16:09:09] <asa22> dreamscached those are also forbidden
[16:09:27] <jinsun__> and there is always an option of literally copy-pasting the same thing over and over
[16:09:31] <dreamscached> dumb assignment imo
[16:09:35] <dreamscached> loops are essential
[16:10:00] <asa22> jinsun__ haha yeah I thought about that one but better not
[16:10:23] <asa22> thanks for the advice, I'll look into map() and recursion and I'll read that phaise
[16:10:28] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[16:10:37] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[16:11:41] *** Joins: dclxvi (~quassel@2a02:8084:84:4100:1737:9ecb:4cae:84c5)
[16:13:02] *** Quits: FFY00 (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 250 seconds)
[16:13:44] *** Joins: promey (~Promeys@gateway/tor-sasl/promey)
[16:13:54] *** Quits: shangxiao (~davids@101.165.217.11) (Ping timeout: 250 seconds)
[16:14:25] *** Joins: humberto1 (~humbertow@189.236.30.245)
[16:15:21] *** Joins: kiirevurr (~seymon@85.203.44.165)
[16:15:24] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:17:06] *** Joins: ascetics (~mingk@123.113.230.112)
[16:19:12] <noord> asa22: a language is turing complete when it contains variable access, arithmetic operations, conditionals, any kind of branching (goto or recursion). loops are translated into goto intructions
[16:19:17] *** Joins: shangxiao (~davids@101.165.217.11)
[16:19:48] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[16:20:05] *** farn_ is now known as farn
[16:20:19] *** Quits: mxp (~mxp@185.16.205.131) (Ping timeout: 256 seconds)
[16:21:14] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:21:29] <asa22> noord goto, noted
[16:22:02] *** Quits: Iolo (~iolo@user/Iolo) (Ping timeout: 240 seconds)
[16:22:26] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Read error: Connection reset by peer)
[16:22:26] <noord> asa22: btw python itself doesn't support goto
[16:22:36] <dreamscached> except that python has no labels/jumps, but kk
[16:22:43] <asa22> oh ok then
[16:22:59] <asa22> I think the teacher had recursion in mind when he gave us the assignment
[16:23:00] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[16:23:17] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:48c2:4ab7:8578:594d) (Ping timeout: 240 seconds)
[16:23:20] <asa22> or maybe just wants to see what we come up with, recursion seems like the way to go imo
[16:25:09] *** Quits: thevishy (~Nishant@49.37.242.151) (Quit: Leaving)
[16:25:33] *** Joins: mxp (~mxp@185.16.205.131)
[16:25:34] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[16:28:20] <hodapp> fun fact: it's possible to have certain forms of recursion (alongside all else mentioned there) without actually beign Turing-complete
[16:28:35] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 240 seconds)
[16:29:01] <hodapp> branching isn't a problem, only unbounded recursion (and things equivalent in power to unbounded)
[16:29:04] *** Quits: Stench (~Staunch@134.238.169.107) (Ping timeout: 250 seconds)
[16:30:17] *** Quits: Collaken (~flo@ip4d17fdd1.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[16:30:49] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[16:30:53] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[16:31:50] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Remote host closed the connection)
[16:32:37] <nedbat> another hastily conceived tool launched into the world: https://nedbatchelder.com/blog/202203/dinghy_digests.html I hope it doesn't become a problem :)
[16:33:58] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:34:42] *** Quits: Fifan (~Fifan@188.243.183.56) (Ping timeout: 250 seconds)
[16:35:36] *** Quits: walter_whip (~walter_wh@69.167.16.140) (Ping timeout: 252 seconds)
[16:35:51] *** Joins: ymwm__ (~yingmanwu@27.153.167.53)
[16:37:23] *** Quits: phaise (~phaise@gateway/tor-sasl/phaise) (Remote host closed the connection)
[16:37:52] *** Joins: phaise (~phaise@gateway/tor-sasl/phaise)
[16:38:07] *** Quits: horner (~horner@host86-153-58-154.range86-153.btcentralplus.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:38:21] *** Quits: ymwm_ (~yingmanwu@27.153.166.227) (Ping timeout: 252 seconds)
[16:38:36] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[16:39:28] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 250 seconds)
[16:40:54] <grym> nedbat: 10 years later "god why am i maintaining this AND coverage" :D
[16:41:14] *** Quits: zoraj_ (~zoraj@209.126.81.159) (Quit: ZNC - https://znc.in)
[16:41:14] <nedbat> grym: get out of my head!!
[16:43:51] *** Quits: shangxiao (~davids@101.165.217.11) (Ping timeout: 252 seconds)
[16:44:25] *** Quits: revolve (~u0_a227@82-132-238-51.dab.02.net) (Read error: Connection reset by peer)
[16:45:14] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[16:46:17] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[16:46:23] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[16:46:50] <grym> :D
[16:47:05] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[16:47:11] *** Joins: paul424 (~tom@apn-95-41-26-130.dynamic.gprs.plus.pl)
[16:47:24] *** Joins: l4s8g_ (~l4s8g@pd9e62e01.dip0.t-ipconnect.de)
[16:49:14] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Read error: Connection reset by peer)
[16:50:08] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:50:45] *** Joins: Fifan (~Fifan@188.243.183.56)
[16:51:40] *** Quits: NoelFlantier3 (~Hubert@195.201.244.189) (Remote host closed the connection)
[16:52:01] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[16:52:02] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:69e4:5ba1:554a:22f) (Ping timeout: 250 seconds)
[16:52:03] *** Joins: NoelFlantier3 (~Hubert@195.201.244.189)
[16:53:41] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[16:54:12] *** Joins: shangxiao (~davids@101.165.217.11)
[16:54:40] *** Quits: fbiagent_ (~fbiagent@user/fbiagent) (Remote host closed the connection)
[16:54:53] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[16:54:56] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[16:55:00] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Ping timeout: 240 seconds)
[16:56:32] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[16:57:17] *** Joins: bitkiller (~bitkiller@user/bitkiller)
[16:57:55] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[16:58:38] *** Joins: Midjak (~Midjak@82.66.147.146)
[17:01:24] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:02:41] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[17:03:00] *** Quits: herjazz (~herjazz@p10513117-ipngn24101marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:03:09] *** Joins: src (~src@user/src)
[17:04:58] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[17:04:58] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[17:05:39] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[17:07:24] *** Joins: zerotypic (~zerotypic@165.173.19.147)
[17:07:43] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[17:07:47] *** Joins: c4017w_ (~c4017@209.52.68.8)
[17:07:50] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[17:07:54] *** Joins: walter_whip (~walter_wh@103.251.65.30)
[17:07:55] *** Quits: KevinX (~KevinX@user/KevinX) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:09:02] *** Joins: creedofnecessity (~creedofne@98.97.83.185)
[17:10:47] *** Quits: kaivai (~kaivai@user/kaivai) (Quit: ZNC - https://znc.in)
[17:10:53] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[17:11:00] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[17:12:27] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[17:12:27] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[17:13:27] *** Joins: kaivai (~kaivai@user/kaivai)
[17:13:48] *** Quits: walter_whip (~walter_wh@103.251.65.30) (Ping timeout: 240 seconds)
[17:13:56] <rubin55> hey all, say, what If I want to return all items that are not in a set? for example: {a,b,c,d,e,f}, compare to {d,e,f}, returns {a,b,c}?
[17:15:55] *** Joins: AsenMx_ (~asen@user/asenmx)
[17:15:59] <nedbat> rubin55: `first_set - second_set`
[17:16:11] *** Quits: AsenMx (~asen@user/asenmx) (Ping timeout: 245 seconds)
[17:16:12] <rubin55> nedbat: ha!
[17:16:15] *** Joins: bahamas (~lucian@82.78.48.20)
[17:16:28] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[17:16:41] <rubin55> sometimes it's so much easier than you think :-) thanks
[17:16:59] <nedbat> python can be like that
[17:17:23] *** AsenMx_ is now known as AsenMx
[17:17:24] *** Quits: humberto1 (~humbertow@189.236.30.245) (Ping timeout: 240 seconds)
[17:18:00] *** Joins: zeden (~zeden@user/zeden)
[17:18:11] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[17:19:04] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[17:22:55] *** Joins: Iolo (~iolo@user/Iolo)
[17:23:48] *** Quits: bahamas (~lucian@82.78.48.20) (Ping timeout: 240 seconds)
[17:24:25] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:26:02] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:26:22] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-306a-aeb7-82dd-814e.res6.spectrum.com)
[17:28:57] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[17:29:19] *** Joins: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[17:29:40] <wyre> ChrisWarrick, bookworm the point is ... if I need to store several jsons (as events) for an issue should I create a table for every issue? I'm not sure how should I store key/values in SQL 🤔. Because I'm still not sure if you are suggesting to deserialize the jsons and use the traditional SQL way or reproduce a key/value pairs scheme as in noSQL but with postgresql
[17:29:41] *** Quits: lessshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[17:30:16] <ChrisWarrick> wyre: no, you’d have one events table that stores all events, with event properties in columns
[17:30:55] *** Joins: discmuc (~discmuc@ip1f13d7b0.dynamic.kabel-deutschland.de)
[17:31:02] *** Quits: asa22 (~asa22@77.211.7.224) (Quit: Client closed)
[17:31:34] <wyre> ChrisWarrick, sure, but then the columns will be fixed, they cannot be altered and not all events (jsons) might have the same fields
[17:31:57] *** Joins: humberto1 (~humbertow@189.236.30.245)
[17:31:59] <ChrisWarrick> wyre: you can always add columns to a table
[17:32:48] <ChrisWarrick> wyre: and if you don’t know what a thing is, if you don’t have it in your model/schema, then what use is it to you?
[17:33:01] *** Quits: discmuc (~discmuc@ip1f13d7b0.dynamic.kabel-deutschland.de) (Client Quit)
[17:34:22] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[17:35:01] *** Quits: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[17:35:16] *** Joins: pkapp (~pkapp@c-75-74-40-214.hsd1.fl.comcast.net)
[17:35:26] *** Quits: ascetics (~mingk@123.113.230.112) (Quit: Leaving.)
[17:36:57] *** Quits: Fifan (~Fifan@188.243.183.56) (Ping timeout: 240 seconds)
[17:37:42] *** Quits: shangxiao (~davids@101.165.217.11) (Ping timeout: 272 seconds)
[17:38:24] *** Joins: Fifan (~Fifan@188.243.183.56)
[17:38:57] *** Joins: kts (~kts@103.73.237.125)
[17:43:26] *** Lando-SpaceIzzle is now known as Lando-SpacePimp
[17:43:36] *** Quits: jay-m126 (~jay-m@129.0.76.211) (Ping timeout: 250 seconds)
[17:43:58] *** Joins: martums59 (~martums@user/martums)
[17:44:02] *** Quits: jay-m126_ (~jay-m@129.0.76.211) (Ping timeout: 250 seconds)
[17:44:04] *** Joins: shangxiao (~davids@101.165.217.11)
[17:44:40] *** Quits: kts (~kts@103.73.237.125) (Ping timeout: 272 seconds)
[17:44:41] *** Quits: jay-m1261 (~jay-m@129.0.76.211) (Ping timeout: 272 seconds)
[17:45:15] *** Joins: jay-m126 (~jay-m@154.72.150.248)
[17:45:45] *** Joins: jay-m126_ (~jay-m@154.72.150.248)
[17:46:14] *** Joins: jay-m1261 (~jay-m@154.72.150.248)
[17:48:22] *** Quits: shangxiao (~davids@101.165.217.11) (Ping timeout: 250 seconds)
[17:48:28] *** Joins: kts (~kts@103.73.237.125)
[17:49:24] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[17:49:50] *** Joins: shangxiao (~davids@101.165.217.11)
[17:50:53] *** Joins: Guest48 (~Guest48@2601:408:8100:8270:ed89:7cb5:4c52:8e1)
[17:51:27] *** Joins: bancroft_ (~bancroft@user/bancroft)
[17:51:49] <Guest48> Hi, in this article, is it true that all the `stdout` of the subprocess will be buffered to memory because , while it keeps reading in the loop and queing, it never "clears the buffer"?  I'm somewhat novice to this.
[17:51:51] <Guest48> https://lyceum-allotments.github.io/2017/03/python-and-pipes-part-6-multiple-subprocesses-and-pipes/
[17:52:01] <bancroft_> I'm looking at https://docs.python.org/3/library/sched.html is there really no built-in way to do something regularly (daily, weekly, day of the week, etc.)
[17:52:16] *** Joins: humbertowoody (~humbertow@189.236.30.245)
[17:52:43] *** Quits: efil4cri (~efil4cri@gateway/tor-sasl/wfnintr) (Remote host closed the connection)
[17:53:05] <ens> bancroft_: crontab?
[17:53:16] <nedbat> bancroft_: to run things periodically, you need support from the OS to track what time it is, and kick things off. A programming language can't provide that.
[17:53:26] <nedbat> bancroft_: crontab is a Unix facility to do it.
[17:53:39] <supakeen> * systemd timers
[17:53:53] <nedbat> bancroft_: or you can run a program "forever" and have it track the time.
[17:54:07] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Read error: Connection reset by peer)
[17:54:12] *** Quits: shangxiao (~davids@101.165.217.11) (Ping timeout: 240 seconds)
[17:55:00] *** Quits: humberto1 (~humbertow@189.236.30.245) (Ping timeout: 240 seconds)
[17:55:27] *** Quits: trashbird (~trashbird@user/trashbird) (Quit: Ping timeout (120 seconds))
[17:55:27] *** Quits: greknod (~grek@120.88.171.98) (Quit: Ping timeout (120 seconds))
[17:55:49] *** Joins: trashbird (~trashbird@user/trashbird)
[17:56:05] *** Quits: murdoc_x01 (~nitestryk@98.42.49.72) (Ping timeout: 256 seconds)
[17:56:19] *** Joins: greknod (~grek@120.88.171.98)
[17:56:39] *** Quits: duds- (~duds-@user/duds) (Remote host closed the connection)
[17:56:42] *** Quits: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de) (Ping timeout: 272 seconds)
[17:56:58] *** Joins: aslicedbanjo (~aslicedba@host86-168-244-94.range86-168.btcentralplus.com)
[17:57:00] *** Quits: the_lanetly_052 (~the_lanet@194.135.168.228) (Ping timeout: 252 seconds)
[17:57:05] *** Joins: duds- (~duds-@user/duds)
[17:57:14] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:59:15] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[17:59:29] *** Quits: martums59 (~martums@user/martums) (Read error: Connection reset by peer)
[17:59:47] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:69e4:5ba1:554a:22f)
[18:00:00] *** Joins: KevinX (~KevinX@user/KevinX)
[18:01:25] *** Joins: transeIstor (~transeIst@h67-204-160-244.bendor.broadband.dynamic.tds.net)
[18:01:48] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[18:02:39] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[18:04:06] *** Joins: martums59 (~martums@user/martums)
[18:04:40] *** Joins: kaiseisei (~Thunderbi@user/kaiseisei)
[18:05:42] *** Quits: tgamblin (~tgamblin@2607:fea8:c2a0:8640:7a3:73e3:df4:afe1) (Ping timeout: 250 seconds)
[18:07:00] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[18:07:02] *** Quits: kiras (~kiras@user/kiras) (Quit: Leaving)
[18:07:47] <rubin55> How do I express that a function might return a str or None?
[18:08:04] <rubin55> (type annotations, -> str|None?)
[18:08:08] *** Joins: c4017w__ (~c4017@209.52.68.8)
[18:08:22] <jinsun__> def func(...) ->str | None:
[18:08:28] <rubin55> hahah nice
[18:10:00] *** Quits: Veil (~Veil@user/Veil) (Quit: If one cut the source of flow.)
[18:10:12] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[18:10:30] *** Joins: gurkenglas (~gurkengla@dslb-178-012-018-212.178.012.pools.vodafone-ip.de)
[18:11:54] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[18:12:09] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[18:12:57] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[18:15:44] *** Joins: NotThatRPG_ (~NotThatRP@162-219-230-90.fttp.usinternet.com)
[18:15:57] *** Joins: Barones (~Barones@user/Barones)
[18:17:54] *** Quits: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com) (Ping timeout: 252 seconds)
[18:19:57] *** Joins: vlado (~vlado@191.156.181.41)
[18:20:28] *** Joins: vd (d4a4416b@67.205.143.82)
[18:20:41] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:48c2:4ab7:8578:594d)
[18:21:29] *** Quits: vlado (~vlado@191.156.181.41) (Client Quit)
[18:22:37] *** Parts: vd (d4a4416b@67.205.143.82) (The Lounge - https://thelounge.chat)
[18:24:05] *** Joins: dreamon (~dreamon@p57a4c768.dip0.t-ipconnect.de)
[18:24:15] *** Joins: shangxiao (~davids@101.165.217.11)
[18:24:23] *** Quits: mossman93_ (~quassel@user/mossman93) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:24:40] *** Quits: avane (~avane@fsf/member/avane) (Quit: o/)
[18:24:48] *** Joins: mossman93 (~quassel@user/mossman93)
[18:27:17] *** Joins: goepsilongo (~goepsilon@2603-7000-ab00-62ed-585f-140b-6646-4b30.res6.spectrum.com)
[18:28:06] *** Quits: rsx (~dummy@ppp-188-174-146-205.dynamic.mnet-online.de) (Quit: rsx)
[18:28:14] <fakenullie> or Optional[str]
[18:28:19] *** Joins: zebrag (~chris@user/zebrag)
[18:28:54] *** Quits: shangxiao (~davids@101.165.217.11) (Ping timeout: 252 seconds)
[18:29:26] <leshaste> how do you import from a file in a different directory?
[18:30:31] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[18:30:57] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[18:31:00] *** Joins: discmuc (~discmuc@ip1f13d7b0.dynamic.kabel-deutschland.de)
[18:31:57] *** Quits: discmuc (~discmuc@ip1f13d7b0.dynamic.kabel-deutschland.de) (Client Quit)
[18:35:21] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Ping timeout: 272 seconds)
[18:35:30] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[18:36:12] *** Quits: nomic (~nomic@185.192.69.74) (Quit: Leaving)
[18:37:55] *** Quits: xheimlich (~xheimlich@179.218.1.150) (Quit: leaving)
[18:38:12] *** Quits: jay-m126 (~jay-m@154.72.150.248) (Ping timeout: 240 seconds)
[18:38:12] *** Quits: jay-m1261 (~jay-m@154.72.150.248) (Ping timeout: 250 seconds)
[18:38:15] <llanhmod_>  leshaste: https://docs.python.org/3/reference/import.html#package-relative-imports
[18:38:30] *** Quits: jay-m126_ (~jay-m@154.72.150.248) (Ping timeout: 272 seconds)
[18:39:05] *** llanhmod_ is now known as regain
[18:39:30] *** llanhmod is now known as Guest1444
[18:39:30] *** regain is now known as llanhmod
[18:40:07] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[18:41:17] *** Joins: Lesault (~lesault@92.238.17.45)
[18:41:39] *** Joins: vlado (~vlado@191.156.190.24)
[18:42:26] *** Parts: Lesault (~lesault@92.238.17.45) ()
[18:42:46] *** Joins: apo (~apo@is.drifting-through.space)
[18:43:18] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[18:43:23] <apo> Hey, having a minor brainfart here. Why does this code block? https://p.0au.de/5a55b4dc/
[18:43:42] *** Quits: vlado (~vlado@191.156.190.24) (Client Quit)
[18:44:06] *** Joins: vlado (~vlado@191.156.187.233)
[18:44:33] *** Quits: vlado (~vlado@191.156.187.233) (Client Quit)
[18:44:48] *** Joins: mintograde (~mintograd@47.201.5.61)
[18:45:21] *** Joins: akk (~akk@75-161-61-130.albq.qwest.net)
[18:47:00] *** Joins: Pickchea (~private@user/pickchea)
[18:47:11] *** Quits: pyfisch (~pyfisch@user/pyfisch) (Ping timeout: 268 seconds)
[18:47:58] *** Joins: korg815 (~korg815@user/korg815)
[18:48:40] *** Joins: marcello1 (~mp@p200300dfaf10fe015baf6eed7f4ef68f.dip0.t-ipconnect.de)
[18:49:47] *** Joins: Atque (~Atque@user/atque)
[18:51:48] *** Quits: cypostres (~cypostres@user/cypostres) (Quit: Leaving)
[18:52:22] <apo> In fact, even starting a thread that just waits on the read and dumping more than 1MB of data into the pipe doesn't let it return <_<
[18:52:26] *** Quits: kaiseisei (~Thunderbi@user/kaiseisei) (Ping timeout: 272 seconds)
[18:52:56] *** Quits: Fifan (~Fifan@188.243.183.56) (Ping timeout: 250 seconds)
[18:54:45] *** Joins: pyfisch (~pyfisch@user/pyfisch)
[18:55:35] *** Joins: lesault (~lesault@92.238.17.45)
[18:57:06] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[18:57:35] <tpr> apo: try defining how many bytes will be read from the pipe
[18:57:37] *** Quits: toulene (~toulene@user/toulene) (Read error: Connection reset by peer)
[18:59:33] *** Joins: toulene8 (~toulene@user/toulene)
[18:59:37] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[19:00:21] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:ac39:dcc4:f026:98c)
[19:00:21] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:ac39:dcc4:f026:98c) (Changing host)
[19:00:21] *** Joins: skapata (~Skapata@user/skapata)
[19:01:40] <apo> tpr: Huh, thanks.
[19:01:53] <apo> Could've sworn I did it like this before. Apparently not :)
[19:02:17] *** Quits: l4s8g_ (~l4s8g@pd9e62e01.dip0.t-ipconnect.de) (Quit: l4s8g_)
[19:02:24] *** Joins: han-solo (~han-solo@user/han-solo)
[19:02:30] <tpr> apo: np. I think it tries to read until EOF if you don't define the len
[19:02:38] *** lesault is now known as Lesault2
[19:03:11] <apo> Oh derp, of course. I forgot to set it to non-blocking :)
[19:03:13] *** Lesault2 is now known as Lesault
[19:06:02] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[19:06:09] *** Joins: menace (~someone@ppp-93-104-172-246.dynamic.mnet-online.de)
[19:06:09] *** Quits: menace (~someone@ppp-93-104-172-246.dynamic.mnet-online.de) (Changing host)
[19:06:09] *** Joins: menace (~someone@user/menace)
[19:06:27] *** Joins: neo1 (~neo@103.144.161.13)
[19:07:31] *** Quits: Lesault (~lesault@92.238.17.45) (Quit: leaving)
[19:08:51] *** Joins: c4017w_ (~c4017@209.52.68.8)
[19:10:42] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[19:12:12] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[19:13:12] *** Joins: lesault (~lesault@92.238.17.45)
[19:13:43] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[19:13:55] *** Joins: Everything (~Everythin@37.115.210.35)
[19:14:16] *** _janus- is now known as _janus
[19:14:30] *** Joins: veek (~veek@117.192.17.48)
[19:16:19] *** Quits: chilvers1 (~chilversc@user/chilversc) (Read error: No route to host)
[19:18:57] *** Quits: lbalhar (~lbalhar@93.185.13.26) (Ping timeout: 252 seconds)
[19:18:57] *** Quits: Babar (~Babar@171.233.210.64) (Killed (copper.libera.chat (Nickname regained by services)))
[19:18:57] *** Joins: Babar (~Babar@171.233.210.64)
[19:19:46] *** Joins: avane (~avane@fsf/member/avane)
[19:20:20] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Read error: Connection reset by peer)
[19:21:42] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.a189.priv.bahnhof.se)
[19:23:43] *** Quits: toulene8 (~toulene@user/toulene) (Read error: Connection reset by peer)
[19:23:50] *** Quits: paul424 (~tom@apn-95-41-26-130.dynamic.gprs.plus.pl) (Remote host closed the connection)
[19:25:25] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:25:25] *** Joins: toulene (~toulene@user/toulene)
[19:26:20] *** Joins: vlado (~vlado@191.156.178.117)
[19:26:36] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 240 seconds)
[19:26:38] *** Joins: minip (~minip@user/minip)
[19:27:48] *** Quits: vlado (~vlado@191.156.178.117) (Client Quit)
[19:34:21] *** Joins: xheimlich (~xheimlich@179.218.1.150)
[19:34:54] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[19:34:57] <xheimlich> A while ago when asking about relative path imports etc. someone counseled to make a "proper Python package". So I could import it at least from my virtualenv.
[19:34:59] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[19:35:18] <grym> xheimlich: yes
[19:35:27] <grym> that's the easy and predictable way
[19:35:40] <grym> i don't do the other ways
[19:37:35] *** Quits: minip (~minip@user/minip) (Remote host closed the connection)
[19:38:55] *** Quits: tWqaq (~tWqaq@240e:389:5d1c:ff00:f186:50e5:11e5:c5c9) (Quit: Leaving)
[19:41:28] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[19:41:29] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[19:41:37] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (Ping timeout: 240 seconds)
[19:41:55] *** Quits: promey (~Promeys@gateway/tor-sasl/promey) (Ping timeout: 240 seconds)
[19:42:37] *** Quits: transeIstor (~transeIst@h67-204-160-244.bendor.broadband.dynamic.tds.net) (Ping timeout: 256 seconds)
[19:43:35] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[19:43:50] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[19:45:27] *** Joins: lbalhar (~lbalhar@93.185.13.25)
[19:45:36] *** Joins: vlado (~vlado@191.156.191.221)
[19:45:55] *** Quits: vlado (~vlado@191.156.191.221) (Client Quit)
[19:46:52] *** Quits: vaio (~gary@user/ghost) (Remote host closed the connection)
[19:46:54] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[19:47:06] *** Quits: kts (~kts@103.73.237.125) (Ping timeout: 250 seconds)
[19:47:32] *** Quits: humbertowoody (~humbertow@189.236.30.245) (Ping timeout: 250 seconds)
[19:48:44] *** Joins: Saknussemm (~Saknussem@151.60.26.20)
[19:50:01] *** Joins: vlado (~vlado@191.156.177.12)
[19:50:57] *** Quits: alex11 (~alex11@user/alex11) (Read error: Connection reset by peer)
[19:52:11] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-8110-d43e-8908-1c78.res6.spectrum.com)
[19:53:08] *** Joins: Pickchea (~private@user/pickchea)
[19:53:20] *** Quits: magla (~gelignite@55d47190.access.ecotel.net) (Quit: Stay safe!)
[19:54:25] *** Quits: Saknussemm (~Saknussem@151.60.26.20) (Quit: Leaving)
[19:54:26] *** Quits: phaise (~phaise@gateway/tor-sasl/phaise) (Remote host closed the connection)
[19:55:05] *** Joins: phaise (~phaise@gateway/tor-sasl/phaise)
[19:55:24] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 240 seconds)
[19:58:00] <xheimlich> I wish I hadn't stashed all my "library" code in a directory called "backend".
[19:58:16] <xheimlich> (where the code that's scripts or streamlit etc. lives outside and imports from "backend".
[19:58:24] <xheimlich> Backend is a stupid name for a package.
[19:58:47] <xheimlich> If you visit tourist locations in my city.
[19:58:56] *** Joins: humbertowoody (~humbertow@189.236.30.245)
[19:59:23] <xheimlich> people will try to sell you postcards predominantly picturing the citizenry's backend.
[20:00:06] *** Quits: Yugi (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 250 seconds)
[20:00:10] <xheimlich> I think the goal is for you to ask "where can I see more of that" -- people are actually kind of conservative but there's this whole mythos. But anyway, my point being that backend is a stupid name for a project.
[20:00:42] <xheimlich> can I name a project for something other than the directory it lives in.
[20:00:52] *** Quits: vlado (~vlado@191.156.177.12) (Quit: WeeChat 3.4)
[20:01:13] <xheimlich> (Since there's so many  relative imports yadda yadda I'd rather like not to break anything at this juncture while packagifying)
[20:01:19] <xheimlich> project = package. sorry.
[20:01:43] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[20:03:22] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[20:03:32] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 240 seconds)
[20:04:26] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Ping timeout: 250 seconds)
[20:04:38] *** Quits: kiirevurr (~seymon@85.203.44.165) (Ping timeout: 272 seconds)
[20:06:36] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[20:07:13] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[20:07:48] *** Quits: zerotypic (~zerotypic@165.173.19.147) (Ping timeout: 272 seconds)
[20:07:52] *** Quits: greedom (~greedom@p200300de6705e30087cb3efb95047236.dip0.t-ipconnect.de) (Remote host closed the connection)
[20:08:31] *** Joins: zzbot (~zzbot@user/zzbot)
[20:09:32] *** Joins: c4017w__ (~c4017@209.52.68.8)
[20:09:32] *** Joins: cdown_ (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[20:09:35] *** Quits: zzbot (~zzbot@user/zzbot) (Remote host closed the connection)
[20:11:36] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Ping timeout: 245 seconds)
[20:12:14] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Ping timeout: 272 seconds)
[20:12:38] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:13:30] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[20:13:54] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[20:14:06] *** Quits: cdown_ (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Ping timeout: 245 seconds)
[20:16:20] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[20:17:45] *** Joins: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net)
[20:19:06] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Ping timeout: 245 seconds)
[20:19:06] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[20:19:40] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:20:18] *** Quits: xheimlich (~xheimlich@179.218.1.150) (Quit: leaving)
[20:21:06] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[20:21:11] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[20:21:13] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[20:21:44] *** Joins: paul424 (~tom@ip-5-172-236-205.multi.internet.cyfrowypolsat.pl)
[20:23:13] *** Joins: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be)
[20:24:22] *** Quits: roxfan (~roxfan@2a02:a03f:a2be:4f00:48c2:4ab7:8578:594d) (Ping timeout: 250 seconds)
[20:24:59] *** Quits: KevinX (~KevinX@user/KevinX) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:25:13] *** Quits: neo1 (~neo@103.144.161.13) (Quit: WeeChat 3.4)
[20:26:36] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[20:27:01] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 245 seconds)
[20:31:24] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-306a-aeb7-82dd-814e.res6.spectrum.com) (Read error: Connection reset by peer)
[20:31:40] *** Joins: bluedust (~bluedust@185.195.232.134)
[20:33:07] *** Joins: upsala (~zcb@185.209.196.134)
[20:33:44] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[20:33:45] *** Joins: KevinX (~KevinX@user/KevinX)
[20:34:46] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-8110-d43e-8908-1c78.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[20:35:29] *** Joins: asa22 (~asa22@77.211.7.224)
[20:35:56] *** Quits: squirrel (uid529456@user/squirrel) (Quit: Connection closed for inactivity)
[20:36:10] <asa22> is it a bad idea to do recursion with main?
[20:36:25] <asa22> sounds like it is but wanna confirm
[20:37:19] <ChrisWarrick> asa22: there’s nothing special about main. But if you’re doing recursion to ask for user input again, consider making it a while loop. Will waste less memory and won’t crash after 1000 attempts.
[20:37:30] <bpalmer> asa22: python has limits on recursion that may come in to play, but I'm not sure why a function named main would be any different than any other function.
[20:37:38] *** Quits: KevinX (~KevinX@user/KevinX) (Client Quit)
[20:37:55] <asa22> ok thansk
[20:38:12] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Ping timeout: 240 seconds)
[20:40:46] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[20:41:49] *** Joins: sr71919 (~sr71919@2405:201:e025:f094:391e:1b41:e77c:8677)
[20:41:52] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[20:42:00] *** Quits: lesault (~lesault@92.238.17.45) (Ping timeout: 272 seconds)
[20:42:38] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[20:44:15] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[20:44:17] *** Joins: nomic (~nomic@185.192.69.74)
[20:44:23] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[20:44:23] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[20:44:52] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[20:44:57] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[20:45:31] *** Quits: bluedust (~bluedust@185.195.232.134) (Ping timeout: 256 seconds)
[20:45:45] *** Joins: zzbot (~zzbot@user/zzbot)
[20:45:48] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 272 seconds)
[20:46:05] *** Quits: sr71919 (~sr71919@2405:201:e025:f094:391e:1b41:e77c:8677) (Ping timeout: 256 seconds)
[20:46:47] *** Joins: ano (~ano@user/ano)
[20:47:26] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[20:48:20] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Ping timeout: 272 seconds)
[20:48:58] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[20:49:18] *** Quits: harleypig (thelounge@harleypig.com) (Quit: Have fun stormin' the castle!)
[20:50:03] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[20:50:21] *** Joins: harleypig (thelounge@harleypig.com)
[20:50:26] *** Joins: MarderIII (~MarderIII@2a02-a45a-72f1-1-5f9-9e9c-e62b-9149.fixed6.kpn.net)
[20:50:26] <asa22> been a while since I used python and lately Ive been using C# so I forgot
[20:50:51] <asa22> can I use strings with an integer inside as if they were numbers
[20:51:16] <asa22> I mean I guess I can just google it
[20:51:24] <bpalmer> Or try it. '2'+'2' = '22'
[20:51:59] <asa22> was thinking of 2 + '2'
[20:52:04] <asa22> I'll try it
[20:52:22] <notax> that'll give you a type error
[20:53:49] <asa22> ok int() is what I needed
[20:54:02] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[20:54:21] *** Joins: Betal (~Betal@user/betal)
[20:55:12] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[20:57:04] *** Quits: cerill (~cerill@h-155-4-198-153.A785.priv.bahnhof.se) (Quit: Client closed)
[20:57:25] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Ping timeout: 256 seconds)
[20:58:09] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[20:58:41] *** Joins: matsaman (~matsaman@user/matsaman)
[20:59:03] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[20:59:31] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[20:59:34] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[20:59:42] *** Quits: veek (~veek@117.192.17.48) (Quit: Leaving)
[21:00:06] *** Joins: Veil (~Veil@user/Veil)
[21:00:46] *** Quits: ymwm__ (~yingmanwu@27.153.167.53) (Ping timeout: 250 seconds)
[21:00:58] *** Joins: neo1 (~neo@103.144.161.8)
[21:01:53] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[21:02:14] *** Joins: bloody (~bloody@user/bloody)
[21:02:17] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 256 seconds)
[21:02:57] *** Quits: humbertowoody (~humbertow@189.236.30.245) (Ping timeout: 240 seconds)
[21:03:24] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:e3ee:c4db:8320:c494) (Quit: pvergain)
[21:04:02] *** Quits: neo1 (~neo@103.144.161.8) (Client Quit)
[21:04:43] *** Quits: asa22 (~asa22@77.211.7.224) (Quit: Client closed)
[21:04:54] *** Joins: neo1 (~neo@103.144.161.8)
[21:05:04] *** Joins: fezhead (~mrpenguin@user/mrpenguin)
[21:05:10] *** Quits: NeoCore (~neocore@160.238.38.188) (Read error: Connection reset by peer)
[21:05:45] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[21:05:54] *** Joins: NeoCore (~neocore@160.238.38.188)
[21:06:38] *** Quits: fezhead (~mrpenguin@user/mrpenguin) (Client Quit)
[21:06:50] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[21:07:02] *** Quits: lbalhar (~lbalhar@93.185.13.25) (Ping timeout: 240 seconds)
[21:07:41] *** Quits: NeoCore (~neocore@160.238.38.188) (Read error: Connection reset by peer)
[21:08:26] *** Joins: NeoCore (~neocore@160.238.38.188)
[21:08:40] *** Quits: NeoCore (~neocore@160.238.38.188) (Read error: Connection reset by peer)
[21:09:39] *** Joins: NeoCore (~neocore@160.238.38.188)
[21:09:56] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[21:10:15] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:10:38] *** Parts: SaifRahman[m] (~saifrahma@2001:470:69fc:105::1:d986) ()
[21:11:10] *** Joins: uxemacs (~timothy@user/uxemacs)
[21:11:32] *** Joins: angelacrust (~angelacru@182.64.84.36)
[21:12:08] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:115a:d879:b217:1367)
[21:13:41] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 245 seconds)
[21:14:25] *** Quits: blei (~blei@user/blei) (Ping timeout: 256 seconds)
[21:14:43] *** Quits: NeoCore (~neocore@160.238.38.188) (Read error: Connection reset by peer)
[21:15:29] *** Joins: humbertowoody (~humbertow@189.236.30.245)
[21:15:45] *** Joins: NeoCore (~neocore@160.238.38.188)
[21:16:59] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-8110-d43e-8908-1c78.res6.spectrum.com)
[21:17:10] *** Joins: BASHitup (~richard@user/yippeekaiyay)
[21:18:02] *** Quits: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be) (Ping timeout: 240 seconds)
[21:19:16] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[21:20:38] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 272 seconds)
[21:22:36] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[21:27:03] *** Joins: cheater (~Username@user/cheater)
[21:27:07] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-8110-d43e-8908-1c78.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[21:28:32] *** Quits: BASHitup (~richard@user/yippeekaiyay) (Quit: WeeChat 2.8)
[21:28:33] <wyre> what's the difference between inheriting from Base or from Model? https://docs.sqlalchemy.org/en/14/orm/tutorial.html#declare-a-mapping
[21:29:04] *** Joins: lesault (~lesault@92.238.17.45)
[21:30:09] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 272 seconds)
[21:31:43] *** Quits: cosimone (~user@93-44-187-176.ip98.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[21:31:46] *** Quits: leshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[21:31:48] *** Joins: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[21:32:25] *** Joins: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be)
[21:32:42] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[21:32:59] *** Joins: Auron (~Auron956@user/auron)
[21:33:00] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Quit: Client closed)
[21:33:00] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[21:33:12] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[21:33:13] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[21:33:29] *** Quits: NeoCore (~neocore@160.238.38.188) (Read error: Connection reset by peer)
[21:34:23] *** Joins: zyweo (~Svew@user/zyweo)
[21:34:42] <zyweo> //j #chemistry
[21:34:48] *** Quits: white2 (~mahengrui@user/mahengrui1) (Ping timeout: 252 seconds)
[21:35:12] *** Joins: newpy (~newpy@206.168.231.90)
[21:35:12] *** Quits: leizy (~n0cturna1@h155173.upc-h.chello.nl) (Ping timeout: 272 seconds)
[21:36:06] *** Joins: lakrass (~lakrass@user/lakrass)
[21:36:56] *** Joins: leizy (~n0cturna1@h155173.upc-h.chello.nl)
[21:36:58] *** Joins: tgamblin (~tgamblin@2607:fea8:c2a0:8640::61be)
[21:37:17] *** Joins: Warkruid (~MarderIII@2a02-a45a-72f1-1-5f9-9e9c-e62b-9149.fixed6.kpn.net)
[21:37:29] *** Quits: MarderIII (~MarderIII@2a02-a45a-72f1-1-5f9-9e9c-e62b-9149.fixed6.kpn.net) (Quit: Leaving)
[21:37:35] *** Quits: achilleas (~ach@user/achilleas) (Quit: :wq)
[21:38:28] *** Quits: dtux (~dtux@c-98-207-149-218.hsd1.ca.comcast.net) (Quit: dtux)
[21:38:47] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[21:38:47] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[21:38:58] *** Joins: achilleas (ach@user/achilleas)
[21:39:38] *** Quits: Warkruid (~MarderIII@2a02-a45a-72f1-1-5f9-9e9c-e62b-9149.fixed6.kpn.net) (Client Quit)
[21:40:17] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[21:41:04] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[21:42:05] *** Joins: Xardas (~Xardas@149.233.51.127)
[21:42:11] *** Joins: MarderIII (~MarderIII@2a02-a45a-72f1-1-5f9-9e9c-e62b-9149.fixed6.kpn.net)
[21:42:21] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-99f7-1928-2563-4a8c.res6.spectrum.com)
[21:42:52] *** Joins: iceneko (~Thunderbi@user/iceneko)
[21:43:31] *** Quits: namkeleser (~namkelese@101.175.104.107) (Quit: Client closed)
[21:43:43] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[21:46:05] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[21:46:12] *** Joins: greedom (~greedom@p200300de6705e30087cb3efb95047236.dip0.t-ipconnect.de)
[21:46:43] *** Quits: iceneko (~Thunderbi@user/iceneko) (Quit: iceneko)
[21:47:00] *** Quits: MarderIII (~MarderIII@2a02-a45a-72f1-1-5f9-9e9c-e62b-9149.fixed6.kpn.net) (Client Quit)
[21:49:06] *** Quits: leizy (~n0cturna1@h155173.upc-h.chello.nl) (Ping timeout: 252 seconds)
[21:50:25] *** Joins: magla (~gelignite@55d47190.access.ecotel.net)
[21:52:30] *** Joins: Pickchea (~private@user/pickchea)
[21:55:18] *** Joins: kiirevurr (~seymon@85.203.44.165)
[21:55:28] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[21:56:34] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:55e3:354c:cb16:8919)
[22:00:04] *** Quits: neo1 (~neo@103.144.161.8) (Quit: WeeChat 3.4)
[22:00:08] *** Joins: alex11 (~alex11@user/alex11)
[22:01:00] *** Joins: reset (~reset@user/reset)
[22:02:01] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 245 seconds)
[22:03:53] *** Joins: l4s8g_ (~l4s8g@pd9e62e01.dip0.t-ipconnect.de)
[22:04:28] *** Joins: neo1 (~neo@103.144.161.23)
[22:04:51] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[22:04:52] *** Joins: CodePoint (~jonathan@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[22:05:30] *** Joins: zoraj (~zoraj@vmi794994.contaboserver.net)
[22:06:36] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 240 seconds)
[22:06:49] *** Quits: neo1 (~neo@103.144.161.23) (Client Quit)
[22:07:04] *** Quits: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[22:07:59] *** Quits: bloody (~bloody@user/bloody) (Quit: okluvyabubye)
[22:08:13] *** Joins: Fifan (~Fifan@188.243.183.56)
[22:08:15] *** Quits: l4s8g_ (~l4s8g@pd9e62e01.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[22:08:19] *** Joins: zebrag (~chris@user/zebrag)
[22:08:35] *** Joins: csileeeeeeeeeeoe (~csileeeee@50.232.121.75)
[22:08:43] *** Joins: cyphase (~cyphase@user/cyphase)
[22:09:48] *** Quits: j0hn_mc_clane (~j0hn_mc_c@ptr-fqhhm12iua58a0gd4hj.18120a2.ip6.access.telenet.be) (Remote host closed the connection)
[22:09:54] *** Joins: bloody (~bloody@user/bloody)
[22:10:06] *** Quits: F0ma (Liudas@shell.xshellz.com) (Remote host closed the connection)
[22:10:07] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[22:10:55] *** Joins: c4017w__ (~c4017@209.52.68.8)
[22:11:00] *** luva2 is now known as luva
[22:11:38] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[22:11:48] *** Quits: menace (~someone@user/menace) (Quit: menace)
[22:11:58] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[22:11:59] *** Quits: lesault (~lesault@92.238.17.45) (Changing host)
[22:11:59] *** Joins: lesault (~lesault@user/lesault)
[22:12:29] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[22:13:06] *** Quits: lesault (~lesault@user/lesault) (Quit: leaving)
[22:14:13] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[22:14:56] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:69e4:5ba1:554a:22f) (Ping timeout: 252 seconds)
[22:15:03] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[22:15:24] *** Quits: Fifan (~Fifan@188.243.183.56) (Quit: Leaving)
[22:15:26] *** Joins: murdoc_x01 (~nitestryk@98.42.49.72)
[22:15:35] *** Joins: lesault (~lesault@user/lesault)
[22:15:40] *** Quits: CodePoint (~jonathan@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: WeeChat 3.4)
[22:15:51] *** Quits: angelacrust (~angelacru@182.64.84.36) (Quit: Client closed)
[22:15:51] *** Joins: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net)
[22:16:22] *** Joins: CodePoint (~jonathan@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[22:16:26] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[22:17:24] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 240 seconds)
[22:18:32] *** Joins: toma (~RubbishPu@node-1w7jr9yhpl48aihulxrfarfbw.ipv6.telus.net)
[22:19:11] *** Joins: transeIstor (~transeIst@h67-204-160-244.bendor.broadband.dynamic.tds.net)
[22:19:25] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Ping timeout: 240 seconds)
[22:19:37] *** Quits: humbertowoody (~humbertow@189.236.30.245) (Ping timeout: 240 seconds)
[22:19:48] *** Quits: Guest1444 (~personnel@user/domhnall/x-2887755) (Ping timeout: 240 seconds)
[22:20:01] *** Quits: wyclif (~wyclif@user/wyclif) (Quit: leaving)
[22:20:53] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[22:21:10] *** Joins: roxfan (~roxfan@2a02:a03f:a2be:4f00:a5c5:bf90:d9a1:468f)
[22:21:26] *** Quits: lakrass (~lakrass@user/lakrass) (Quit: WeeChat 3.4)
[22:22:37] *** gentooclimax is now known as climax
[22:22:40] *** Quits: thorbw (~tw@46.230.130.50) (Read error: Connection reset by peer)
[22:24:13] *** Quits: akk (~akk@75-161-61-130.albq.qwest.net) (Ping timeout: 240 seconds)
[22:24:22] *** Joins: anorak (~anorak@p200300db9f375e545210e58c1ae5910e.dip0.t-ipconnect.de)
[22:25:40] *** Parts: apo (~apo@is.drifting-through.space) ()
[22:25:48] *** climax is now known as gentooclimax
[22:25:52] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 272 seconds)
[22:25:53] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[22:26:38] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[22:26:41] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[22:26:54] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[22:27:22] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[22:28:18] *** Quits: zzbot (~zzbot@user/zzbot) (Ping timeout: 250 seconds)
[22:28:24] *** llanhmod is now known as Guest7370
[22:28:24] *** Quits: Guest7370 (~personnel@user/domhnall/x-2887755) (Killed (calcium.libera.chat (Nickname regained by services)))
[22:30:59] *** Quits: anorak (~anorak@p200300db9f375e545210e58c1ae5910e.dip0.t-ipconnect.de) (Quit: Leaving)
[22:31:06] *** Joins: humbertowoody (~humbertow@189.236.30.245)
[22:32:24] *** Joins: llanhmod_ (~personnel@user/domhnall/x-2887755)
[22:32:51] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:34:12] *** Joins: oriba (~oriba@dynamic-089-014-025-098.89.14.pool.telefonica.de)
[22:35:18] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[22:36:17] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
[22:36:24] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 252 seconds)
[22:38:32] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 272 seconds)
[22:39:11] *** Joins: Barones (~Barones@user/Barones)
[22:39:34] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[22:39:49] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[22:39:49] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Quit: Client closed)
[22:40:00] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[22:40:06] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[22:43:18] *** Joins: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[22:43:37] *** Joins: cosimone (~user@93-44-187-176.ip98.fastwebnet.it)
[22:44:13] *** Quits: korg815 (~korg815@user/korg815) (Ping timeout: 240 seconds)
[22:45:03] *** Joins: blei (~blei@user/blei)
[22:45:08] *** Quits: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:39] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[22:45:39] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[22:45:47] *** Joins: l4s8g (~l4s8g@pd9e62e01.dip0.t-ipconnect.de)
[22:46:08] *** Quits: CodePoint (~jonathan@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 272 seconds)
[22:47:26] *** Joins: CodePoint (~jonathan@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[22:47:50] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[22:48:03] *** Joins: Haxxa (~Haxxa@202-130-210-100.ip4.superloop.com)
[22:48:21] *** Joins: gambl0re (~gambl0re@2607:fea8:a59f:c360::4f67)
[22:49:32] *** Joins: BobRockHR (~andrija@user/BobRockHR)
[22:49:51] *** Joins: en7ropy (~en7ropy@172.241.167.37)
[22:50:18] *** Quits: en7ropy (~en7ropy@172.241.167.37) (Remote host closed the connection)
[22:51:31] *** Joins: en7ropy (~en7ropy@172.241.167.37)
[22:52:34] *** Quits: Throgkt (~Throgkt@user/throgkt) (Ping timeout: 250 seconds)
[22:53:10] *** tykling_ is now known as tykling
[22:53:45] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[22:53:50] <nedbat> Not sure what to make of this.... https://github.com/illacceptanything/illacceptanything
[22:54:24] <roxfan> then don't
[22:54:56] <han-solo> whoa!
[22:56:02] *** Quits: lesault (~lesault@user/lesault) (Ping timeout: 250 seconds)
[22:56:52] <han-solo> looks great for hacktoberfest
[22:58:06] *** Quits: blei (~blei@user/blei) (Quit: Client closed)
[22:58:24] *** Quits: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[22:58:46] *** Joins: debian_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[22:59:49] *** Quits: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[23:00:01] *** Joins: tj123 (~tjh123@cpe-75-185-104-199.cinci.res.rr.com)
[23:01:55] *** Quits: greedom (~greedom@p200300de6705e30087cb3efb95047236.dip0.t-ipconnect.de) (Remote host closed the connection)
[23:02:22] *** Joins: greedom (~greedom@p200300de6705e30087cb3efb95047236.dip0.t-ipconnect.de)
[23:02:25] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[23:02:41] <jinsun__> I like phy1729's PR there https://github.com/illacceptanything/illacceptanything/pull/505
[23:02:55] <jinsun__> merged 10,000 commits :D
[23:03:08] *** Joins: RobNyc (~pop-os@2603-7000-6140-686b-8fa0-86fd-e37a-1b17.res6.spectrum.com)
[23:03:38] <han-solo> haha
[23:05:08] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 250 seconds)
[23:05:20] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[23:05:41] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[23:06:00] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[23:07:03] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[23:07:10] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[23:07:26] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[23:07:43] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-99f7-1928-2563-4a8c.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[23:07:59] *** Quits: l4s8g (~l4s8g@pd9e62e01.dip0.t-ipconnect.de) (Quit: l4s8g)
[23:08:06] <toma> I'm having trouble understanding some code (https://github.com/harrison-broadbent/libgen-api/blob/bc8fb996c5a8c11ff1c5ddcaae53f2dd850ee766/libgen_api/search_request.py#L72 lines 72-84) that I read on github.  Is this an unusually difficult segment to understand?
[23:08:23] <phy1729> jinsun__: over 10k; took a few minutes to run
[23:08:45] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:09:12] <jinsun__> phy1729: ah so github just gave up and capped it at 10k
[23:09:51] <phy1729> it rekt my GitHub commit history graph for a year
[23:10:12] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[23:11:09] <marderIII>  /quit
[23:11:29] *** Quits: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net) (Quit: leaving)
[23:11:37] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:11:41] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c158-e30b-7e5e-fcd2.res6.spectrum.com)
[23:12:35] <jinsun__> toma: it is just doing too many things in one expression, and then black made it ugly
[23:13:07] <jinsun__> that is one of the problems of black, people just run it without looking at the final output if it still looks good
[23:13:08] <toma> jinsun__, black?
[23:13:32] <jinsun__> toma: https://github.com/psf/black
[23:13:39] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[23:13:55] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[23:14:18] *** Quits: magla (~gelignite@55d47190.access.ecotel.net) (Read error: Connection reset by peer)
[23:14:34] <jinsun__> in cases like that one, when there is super long expression, black can make it harder to read by trying to break it at random places
[23:15:16] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 272 seconds)
[23:15:19] <toma> jinsun__, thanks. I'll try to re-arrange and split it up myself and see if that helps me understand.
[23:15:57] <jinsun__> that is why in my code I run black and see if it uglifies it too much then I rewrite and break down the super long expressions into shorter ones myself
[23:16:00] <BrenBarn> I think it would look okay if not for the thing where it puts `1:` all by itself
[23:16:04] *** Joins: HiccupJul (~HiccupJul@cpc122682-reig6-2-0-cust39.6-3.cable.virginm.net)
[23:16:30] <HiccupJul> is there a way to run python in a browser, that supports third party modules?
[23:17:02] <toma> BrenBarn, that part had me confused but at least it's documented. I got lost lines 74 and 78 (the else statement).
[23:17:05] <BrenBarn> Brython will run most stuff if it's pure Python
[23:17:34] *** Joins: ttree (~ttree0@c-73-97-116-42.hsd1.wa.comcast.net)
[23:17:51] <BrenBarn> yeah that would probably be clearer with additional indentation
[23:18:30] <jinsun__> toma: that is ternary expression, `a if b else c`, will evaluate to a if bool(b) is True and c if bool(b) is False
[23:19:09] <jinsun__> and because it is within square brackets it is allowed to be split up into multiple lines
[23:19:34] <jinsun__> also the "b" in that expression is too long
[23:19:56] *** Quits: rvalue (~rvalue@user/rvalue) (Remote host closed the connection)
[23:20:07] *** Joins: KombuchaKip (~kip@192.252.230.5)
[23:20:47] *** Joins: rvalue (~rvalue@user/rvalue)
[23:23:08] <toma> jinsun__, neat. thanks for the explanation.
[23:23:23] *** Joins: magla (~gelignite@55d47190.access.ecotel.net)
[23:24:05] <jinsun__> toma: it used to look like this https://github.com/harrison-broadbent/libgen-api/blob/538c581df25c451701698e84dcd8c94ed603cc8d/libgen_API/search_request.py#L45
[23:24:09] <jinsun__> before they ran black
[23:25:06] *** Joins: Throgkt (~Throgkt@user/throgkt)
[23:25:27] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[23:25:51] *** Joins: merijn (~merijn@c-001-001-005.client.esciencecenter.eduvpn.nl)
[23:26:03] <jinsun__> not really much better I think
[23:27:00] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 252 seconds)
[23:27:02] <toma> jinsun__, I didn't know you could step back on github. :) And am I wrong to think that td.find('a')["title"] is not "" could be just td.find('a')["title"]? I think I'm also having a problem with nested list comprehensions.
[23:27:22] *** Quits: kiirevurr (~seymon@85.203.44.165) (Remote host closed the connection)
[23:27:41] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Remote host closed the connection)
[23:27:41] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: Lost terminal)
[23:28:24] <jinsun__> yeah it should have been that
[23:28:51] <jinsun__> comparing to "" using `is` is a bad idea, 3.10 even gives warning about that
[23:29:15] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[23:29:24] *** Quits: schumaml (~schumaml@dslb-178-007-198-199.178.007.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[23:29:32] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[23:30:12] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[23:30:22] <jinsun__> toma: the exact equivalent would be `td.find('a')["title"] != ""` just `td.find('a')["title"]` would catch other Falsy stuff like None and False and empty lists also
[23:30:28] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 272 seconds)
[23:30:34] <jinsun__> which may or may not be what they wante
[23:30:48] *** Lord_of_Life_ is now known as Lord_of_Life
[23:30:59] *** Quits: driib2 (~driib@185.65.135.233) (Ping timeout: 256 seconds)
[23:31:10] *** Joins: schumaml (~schumaml@dslb-188-104-173-129.188.104.pools.vodafone-ip.de)
[23:32:42] *** Joins: walter_whip (~walter_wh@103.251.65.24)
[23:33:52] <toma> jinsun__, awesome. I think I understand it clearly enough to try to re-write that section and that segment you provided will probably make it into my re-write.
[23:35:38] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[23:35:47] *** Parts: RobNyc (~pop-os@2603-7000-6140-686b-8fa0-86fd-e37a-1b17.res6.spectrum.com) (Leaving)
[23:36:44] *** Joins: walterwhip (~walterwhi@user/walterwhip)
[23:36:59] <bancroft_> nedbat: I went down a huge rabbit hole. In the end, you're right, i'm going with a cronjob but not the kind you were thinking probably https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/
[23:37:10] <bancroft_> I didn't want to install systemctl in an image lol
[23:37:13] <nedbat> bancroft_: ok, cool
[23:37:15] <bancroft_> this works very well for what I need
[23:37:21] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[23:37:23] *** Quits: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[23:37:38] *** Quits: schumaml (~schumaml@dslb-188-104-173-129.188.104.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[23:37:53] <wyre> ChrisWarrick, would you recommend me also Marshmallow?
[23:37:59] *** Joins: mavhq (~quassel@mapp-14-b2-v4wan-161519-cust401.vm15.cable.virginm.net)
[23:38:00] *** Quits: Wh0 (~V@103.86.19.99) (Quit: Leaving)
[23:38:00] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[23:38:30] *** Joins: smoke (~smoke@user/smoke)
[23:38:33] *** Quits: llanhmod_ (~personnel@user/domhnall/x-2887755) (Ping timeout: 252 seconds)
[23:38:35] *** tazle_ is now known as tazle
[23:39:27] *** Joins: schumaml (~schumaml@dslb-092-074-009-024.092.074.pools.vodafone-ip.de)
[23:40:01] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[23:41:00] *** Quits: walter_whip (~walter_wh@103.251.65.24) (Ping timeout: 240 seconds)
[23:41:09] *** Joins: xa0s (~xa0s@mab.sdf.org)
[23:41:18] *** Quits: walterwhip (~walterwhi@user/walterwhip) (Ping timeout: 252 seconds)
[23:42:36] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[23:43:02] *** Quits: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52) (Ping timeout: 240 seconds)
[23:43:20] *** Quits: agumonke` (~user@2a01:e0a:8f9:d3e0:b117:81a8:33f6:93e7) (Remote host closed the connection)
[23:44:13] *** Joins: marderIII (~MarderIII@86-88-74-111.fixed.kpn.net)
[23:44:34] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:115a:d879:b217:1367) (Quit: I have gone to sleep. ZZZzzz…)
[23:44:36] *** Quits: Barones (~Barones@user/Barones) (Ping timeout: 252 seconds)
[23:46:12] *** Quits: humbertowoody (~humbertow@189.236.30.245) (Ping timeout: 240 seconds)
[23:48:37] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[23:49:52] *** Joins: Barones (~Barones@user/Barones)
[23:52:05] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[23:52:05] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Quit: Client closed)
[23:52:19] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[23:52:21] *** Joins: foobaz21248467 (~foobaz212@152.37.103.80)
[23:53:15] *** Quits: boris_ (m-vwhg2g@152.70.163.76) (Remote host closed the connection)
[23:53:50] *** Joins: boris_ (m-vwhg2g@152.70.163.76)
[23:54:27] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[23:54:29] *** Joins: merrinx (~merrinx@ti0028a400-3686.bb.online.no)
[23:54:36] *** Quits: anshupatia (uid29854@id-29854.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[23:59:19] *** Quits: foobaz21248467 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[23:59:19] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[23:59:59] *** Quits: merrinx (~merrinx@ti0028a400-3686.bb.online.no) (Quit: WeeChat 3.3)
