[00:00:10] <emanuele6> if you intend to pipe the output directly, you can use awk
[00:01:01] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[00:01:01] <emanuele6> sha256sum | awk '{ printf "%s", $1 }' | command_that_does_not_like_trailing_newlines
[00:01:46] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[00:01:51] <sublim20> !declare
[00:01:52] <greybot> The "declare" command acts like "local" when used inside a function. declare -A is required for associative arrays. bash 4.2 adds declare -g to suppress the "local" thing.
[00:02:07] *** Joins: wigums (~wigums@user/wigums)
[00:02:16] *** Quits: xx (~xx@user/xx) (Remote host closed the connection)
[00:03:32] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Ping timeout: 240 seconds)
[00:04:05] *** Joins: cq-work (~Z_Lund@user/cq-work)
[00:04:07] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[00:04:09] <emanuele6> or even sh: sha256sum | { IFS= read -r hash rest; printf '%s' "$hash" ;} | command_that_does_not_like_trailing_newlines
[00:04:37] <emanuele6> but if you are using a command substitution, you don't need that.
[00:04:38] <cq-work> Are nested parameter expansions actually supported? ShellCheck says no but the result appears to be correct.
[00:05:15] *** Quits: bfortified (~bfortifie@user/bfortified) (Ping timeout: 256 seconds)
[00:05:32] *** Joins: bfortified (~bfortifie@user/bfortified)
[00:05:33] <emanuele6> ${var+"${other_var}"} works if that is what you are asking.
[00:05:52] <emanuele6> err, ${var+"${other_var:-hi}"}
[00:06:29] <cq-work> Yeah... is that new? Or any idea why ShellCheck would say that doesn't work?
[00:06:29] <emanuele6> not sure what you exactly mean with "nested parameter expansions" though
[00:06:33] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[00:06:39] <cq-work> https://github.com/koalaman/shellcheck/wiki/SC2299
[00:06:58] <emanuele6> !check var= other_var=; printf '%s' ${var+"${other_var:-hi}"}
[00:06:58] <checkbot> emanuele6: Line 1: Remove space after = if trying to assign a value (for empty string, use var='' ... ). See https://shellcheck.net/?id=cb63018
[00:07:07] <emanuele6> !check var='' other_var=''; printf '%s' ${var+"${other_var:-hi}"}
[00:07:07] <checkbot> emanuele6: Looks good to me
[00:07:19] <emanuele6> cq-work: it is not complaining about ${var+"${other_var:-hi}"}
[00:07:23] <Soliton> as you can see shellcheck complains about something else.
[00:07:30] <sublim20> hey all, got a quick question.   for bash commands, (like declare) how can one find info on them from the terminal.   info declare  returns nothing
[00:07:43] <emanuele6> cq-work: no, "Playing ${${path##*/}%.*}" is wrong.
[00:07:46] <Soliton> help declare
[00:07:47] <sublim20> as does the command, man declare
[00:07:47] <jetchisel> help declare
[00:07:50] <sublim20> oh, hahaha
[00:07:51] <jetchisel> woops ^^
[00:07:53] <Soliton> !man
[00:07:53] <greybot> bash builtins and keywords do not have separate man-pages, read bash's manual instead or use the help builtin. Rule of thumb: If ''type foo'' says foo is a builtin or keyword, run ''help foo'' or ''man bash'', otherwise try man and/or info.
[00:08:20] <sublim20> thanks
[00:09:33] *** Joins: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net)
[00:09:56] *** Quits: zoe (~zoe@fsf/member/zoe) (Read error: Connection reset by peer)
[00:10:15] <emanuele6> if they work for you, you are not using bash, but you are using the other popular shell.
[00:11:12] <sublim20> alright, so from a terminal, how can one know what shell is being used?
[00:11:37] <emanuele6> cq-work: and zsh is not supported by shellcheck.
[00:12:01] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:12:12] *** Joins: xx (~xx@user/xx)
[00:12:48] *** Joins: nem (sid113421@user/nem)
[00:12:56] <Soliton> !interpreter
[00:12:57] <greybot> WTF interpreter? https://github.com/stephane-chazelas/misc-scripts/blob/master/which_interpreter or http://stchaz.free.fr/which_interpreter or https://raw.github.com/mauke/poly.poly/master/poly.poly
[00:13:29] <Soliton> or perhaps ask your admin.
[00:14:02] *** Quits: aliosablack (~chomwitt@2a02:587:dc0f:7c00:12c3:7bff:fe6d:d374) (Read error: Connection reset by peer)
[00:14:27] <sublim20> heh, this is a personal machine, and im not employed in the IT field.
[00:15:00] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[00:15:00] <cq-work> !check var='caaadabaaa' other_var='c'; printf '%s' "${${var#$other_var}//b/}"
[00:15:01] <checkbot> cq-work: Line 1: Parameter expansions can't be nested. Use temporary variables. Line 1: Expansions inside ${..} need to be quoted separately, otherwise they match as patterns. See https://shellcheck.net/?id=cb63500
[00:15:23] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[00:15:24] <emanuele6> and that is correct.
[00:15:29] <emanuele6> # var='caaadabaaa' other_var='c'; printf '%s' "${${var#$other_var}//b/}"
[00:15:30] <shbot> emanuele6: bash: ${${var#$other_var}//b/}: bad substitution
[00:15:39] <emanuele6> !zsh
[00:15:39] <greybot> zsh is NOT an enhanced version of bash. It's a different shell, with different features and there's a different channel for your questions: #zsh For zsh-like menu completion, bind '\C-i':menu-complete # there is nothing similar to menu selection
[00:15:40] <cq-work> Huh...
[00:15:44] <Soliton> that is not how parameter expansions work. you need a parameter.
[00:16:00] <cq-work> I'm not using zsh.
[00:17:10] <emanuele6> you said that ${${path##*/}%.*} works for you
[00:17:11] <chiselfuse> Why do I see the use of echo everywhere instead of printf?
[00:17:17] <emanuele6> ${${path##*/}%.*} would work on zsh.
[00:17:24] <emanuele6> surely not in bash or dash
[00:17:45] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 276 seconds)
[00:17:46] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[00:18:26] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[00:18:34] *** Joins: smlavine (~smlavine@sourcehut/user/smlavine)
[00:18:48] <sublim20> isn't printf preferred over echo
[00:18:57] <sublim20> forget the reason, but remember reading rants about that
[00:19:03] <Soliton> yes.
[00:19:12] <sublim20> k
[00:19:16] <emanuele6> cq-work: if ${${path##*/}%.*} works on your shell, it surely is not bash or dash whatever shell it is.
[00:19:16] <phy1729> echo may or may not mangle -n and or backslashes
[00:19:34] <sublim20> ahhh
[00:19:35] <cq-work> yeah, it's using zsh... there's an especially dumb symlink in this environment.
[00:19:37] <cq-work> Fuck me.
[00:19:46] <cq-work> Well, thanks for the help.
[00:20:28] <emanuele6> luckily, that shellcheck link already gives you the solution
[00:21:36] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[00:24:53] <emanuele6> !step
[00:24:53] <greybot> To step through your code, look into bashdb or put this where you want to begin stepping: trap '(read -p "[$BASH_SOURCE:$LINENO] $BASH_COMMAND?")' DEBUG
[00:25:01] <emanuele6> !forget step
[00:25:01] <greybot> OK, emanuele6
[00:25:22] <chiselfuse> # printf "foo\nbar"
[00:25:23] <shbot> chiselfuse: foo
[00:25:23] <shbot> chiselfuse: bar
[00:25:38] <chiselfuse> Why is the backslash recognised without usint the %b option?
[00:26:00] *** Joins: CaCode (~CaCode@user/cacode)
[00:26:02] <Soliton> it's in the format string...
[00:26:11] <emanuele6> you should have used printf %s 'foo\nbar'
[00:26:57] <emanuele6> !learn step step through your code, look into bashdb or put this where you want to begin stepping: debug_prompt () { read -p "[$BASH_SOURCE:$LINENO] $BASH_COMMAND?" _ ;}; trap 'debug_prompt "$_"' DEBUG
[00:26:57] <greybot> OK, emanuele6
[00:27:41] *** Joins: rgrinberg (~textual@200.5.63.76)
[00:28:00] <emanuele6> in bash5, subshells "forget" that they are running inside a debug trap messing with $BASH_COMMAND expansions.
[00:28:30] <chiselfuse> I don't understand the exact usage of printf after reading `help printf`, can it take only one argument?
[00:28:43] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[00:28:59] <emanuele6> # help printf | head -1
[00:29:00] <shbot> emanuele6: printf: printf [-v var] format [arguments]
[00:29:17] <emanuele6> no, it can take any number of arguments.
[00:29:27] <Soliton> it takes as many arguments as are expected from the format string.
[00:29:31] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[00:29:33] *** Quits: roadie (~user@2a02:8108:ec0:1427:c18f:280:61a7:6a75) (Ping timeout: 250 seconds)
[00:29:35] <emanuele6> and more
[00:29:42] <Soliton> and if you give it more than it starts over with the format.
[00:29:52] <Filystyn> you can take more than ram allows you too I heard.. stories
[00:29:52] <chiselfuse> But I can also not pass to it a format string, as I did earlier?
[00:30:09] <Soliton> # printf
[00:30:10] <shbot> Soliton: printf: usage: printf [-v var] format [arguments]
[00:30:20] <Soliton> sure, but you'll get an error.
[00:30:22] <emanuele6> "foo\nbar" was the format string in your example.
[00:30:22] *** Joins: roadie (~user@2a02:8108:ec0:1427:c18f:280:61a7:6a75)
[00:30:37] <emanuele6> that is why the \n expanded to a newline character
[00:30:51] <chiselfuse> Oh, so in the format string, '\' is recognized always...
[00:31:46] <chiselfuse> # printf "foo\nbar%s" "test\ntest"
[00:31:46] <shbot> chiselfuse: foo
[00:31:46] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[00:31:47] <shbot> chiselfuse: bartest\ntest
[00:32:05] <chiselfuse> I see
[00:32:14] <tirnanog> as noted by the help, anything that's supported by printf(1) is also supported by bash's printf builtin, in addition to several more things that are bash specific.
[00:32:39] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[00:32:46] <Filystyn> printf is just so nice is it not ?
[00:33:17] <tirnanog> pretty good, I'd say.
[00:33:22] <chiselfuse> Yes, lovely
[00:33:35] <emanuele6> FORMAT is a character string which contains three types of objects: plain characters, which are simply copied to standard output; character escape sequences, which are converted and copied to the standard output; and format specifications, each of which causes printing of the next successive argument.
[00:33:46] <emanuele6> > character escape sequences, which are converted and copied to the standard output
[00:33:53] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 250 seconds)
[00:34:03] *** Joins: lavaball (felix@31.204.155.215)
[00:35:47] *** Quits: roadie (~user@2a02:8108:ec0:1427:c18f:280:61a7:6a75) (Ping timeout: 264 seconds)
[00:37:53] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 264 seconds)
[00:38:29] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:39:26] <millido> Hi, I am working with windowing functions, and I don't really understand how to find the main and side lobes. This is a tukey window with r=0,0.25,0.5,0.75,1 https://i.imgur.com/ZAoFYvh.png . I don't understand the relation to the main lobe being -3dB and the side lobe being -6dB
[00:39:32] *** Quits: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[00:39:43] <Soliton> !nabq
[00:39:43] <greybot> Not a #bash question. We're no experts in that software or OS; consider asking the channel or mailing list with experts on that topic (eg. #linux #openssh #ubuntu #zsh #systemd ##kernel or PM alis with "list keyword" to search for channels).
[00:42:11] *** Joins: vee (~vee@c-73-71-90-145.hsd1.ca.comcast.net)
[00:42:39] *** Quits: esselfe (~steph@user/esselfe) (Quit: brb)
[00:42:57] <Filystyn> millido can you elaborate
[00:43:26] *** Joins: jonatura (~jonatura@80.71.142.166.ipv4.parknet.dk)
[00:43:36] <millido> Sorry, that was meant for #math
[00:43:42] *** Joins: roadie (~user@2a02:8108:ec0:1427:c18f:280:61a7:6a75)
[00:47:36] *** Quits: marguesto (~marguesto@37.220.203.250) (Ping timeout: 268 seconds)
[00:49:41] *** Joins: Ademan (~ademan@47.185.115.221)
[00:50:51] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[00:52:23] <Ademan> apologies for the OT, but I'm not sure where else to ask, is ${foo:x:y} substring substitution sh-compatible? It seems to work in busybox sh which is what I *really* care about, but I'm curious if there's somewhere I can check on these sorts of compatibility questions generally
[00:52:36] <emanuele6> it is not.
[00:52:59] <Soliton> !posix
[00:52:59] <greybot> The POSIX standard defines what any modern unix should support. Use just POSIX external commands and options to make portable scripts. See http://shellhaters.org
[00:53:28] <emanuele6> specifically https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_06_02
[00:53:43] *** Joins: rcernin_ (~rcernin@124.190.139.235)
[00:54:08] <Soliton> not OT at all, btw.
[00:54:49] *** Joins: cliluw (~cliluw@47.147.80.149)
[00:56:29] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:459a:8b95:ccbb:dd5d) (Ping timeout: 246 seconds)
[00:56:30] *** Quits: smlavine (~smlavine@sourcehut/user/smlavine) (Quit: zzz)
[00:57:34] *** Quits: jonthesnow (~xizhendu@240e:305:7380:4300:22a3:ecb5:b567:7739) (Remote host closed the connection)
[00:57:50] *** Quits: wwalker (~wwalker@platinum.solid-constructs.com) (Quit: leaving)
[00:58:59] <emanuele6> s/specifically /see /
[00:59:30] *** Joins: jonthesnow (~xizhendu@240e:305:7380:4300:22a3:ecb5:b567:7739)
[01:02:00] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[01:02:42] *** Joins: smlavine (~smlavine@sourcehut/user/smlavine)
[01:02:51] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[01:04:03] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:05:14] *** Joins: John_Ivan (~John_Ivan@user/john-ivan/x-1515935)
[01:05:34] <Ademan> thanks!
[01:06:13] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[01:06:18] *** Joins: zebrag (~chris@user/zebrag)
[01:06:31] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[01:09:17] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[01:09:27] <xx> what even is busybox sh there days?
[01:10:47] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f6e3:7400:d4e2:b355:67fe:933c)
[01:10:55] *** Joins: rustyshackleford (uid236774@helmsley.irccloud.com)
[01:11:16] <apathor> ash?
[01:11:59] *** Quits: John_Ivan (~John_Ivan@user/john-ivan/x-1515935) (Remote host closed the connection)
[01:12:02] *** Quits: roadie (~user@2a02:8108:ec0:1427:c18f:280:61a7:6a75) (Ping timeout: 240 seconds)
[01:13:30] *** Quits: zer0bitz (~zer0bitz@2001:2003:f6e3:7400:9c57:4715:1ac5:a700) (Ping timeout: 268 seconds)
[01:13:39] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[01:14:14] <xx> right, so similar to dash then
[01:14:20] *** Joins: roadie (~user@2a02:8108:ec0:1427:c18f:280:61a7:6a75)
[01:14:41] <twkm> given dash came from ash, yes similar.
[01:19:19] <xx> all shells will turn to ash one day
[01:19:35] *** Quits: roadie (~user@2a02:8108:ec0:1427:c18f:280:61a7:6a75) (Ping timeout: 264 seconds)
[01:19:37] *** Joins: GuiToris (~GuiToris@user/guitoris)
[01:19:44] <akoana> ..and dash came from ash, ash came from sh, sh came from shell and h came from hell :)
[01:19:49] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:20:55] <akoana> xx: lol
[01:20:56] <tirnanog> it's usually ash but there's a compile-time choice of implementations.
[01:22:17] *** Quits: magla (~gelignite@55d4f4a1.access.ecotel.net) (Quit: Stay safe!)
[01:22:18] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[01:22:18] *** Quits: cliluw (~cliluw@47.147.80.149) (Quit: Leaving)
[01:22:56] <GuiToris> hello, I was wondering how I can get the full path of a file or folder. I typed in the search engine and I found 'readlink'. I've never even heard of it. So, if the program needs full path (eg encfs),should I use $(readlink ./folder), or is there a better way to do it?
[01:22:59] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[01:23:14] <phogg> readlink or realpath
[01:23:24] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[01:23:26] <tirnanog> I think hush is the other one.
[01:23:27] <phogg> sadly not standard tools. Doing it in a standards way is super annoying
[01:23:41] <tirnanog> then there are a bunch of options that affect the degree of posix-conformance, among other things.
[01:24:33] <GuiToris> phogg, I'm checking realpath, sounds more relevant
[01:24:35] <GuiToris> thank you
[01:24:36] <tirnanog> realpath is nice, if you have it.
[01:25:00] <GuiToris> yes, it is installed
[01:26:04] <phogg> if you don't have it you can trivially recreate the basic implementation: https://termbin.com/719m
[01:27:02] <phogg> I have this at hand because it has sometimes come up in a place where "you can't install new packages."
[01:28:00] <Filystyn> write a program in C with posix realpath, than call it in bash. Voila.
[01:28:20] <phogg> Filystyn: that's what I did
[01:28:45] <phogg> so easy you could do it from memory on demand, but after the second time I also saved the result
[01:29:27] *** Joins: sebastorama (~sebastora@190.83.56.68)
[01:29:53] <phogg> I end up throwing a way a lot of almost-but-not-quite-trivial programs that I should probably save for later. Like "split a .pem file"
[01:31:21] <GuiToris> apparently, realpath is very bash. It comes with the bash package
[01:31:35] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[01:31:50] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:31:55] <phogg> on Debian it is in the coreutils package. It's likely to be found anywhere you GNU.
[01:32:55] <GuiToris> phogg, I haven't really searched backwards, but it seems as both packages provide realpath
[01:33:10] <GuiToris> core/bash 5.1.0008-1: /usr/lib/bash/realpath
[01:33:13] <phogg> GuiToris: that's not allowed on apt-based systems
[01:33:28] <phogg> or rather only if you mark the two packages as Conflicts
[01:33:51] <Filystyn> I write  programs like that from time to time. gather them in kind of *small program repo* and they seem to be used again from time to time
[01:34:09] <GuiToris> you must be right, I'm probably just misunderstanding the output
[01:34:15] <phogg> Filystyn: I think we all have one of those, although mine isn't shared in a useful way
[01:34:27] <xx> bash-builtins: /usr/lib/bash/realpath
[01:34:32] <xx> coreutils: /usr/bin/realpath
[01:34:39] *** Quits: sublim20 (~sublim20@user/sublim20) (Read error: Connection reset by peer)
[01:34:45] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[01:34:47] <phogg> aha, xx has the answer
[01:34:50] *** Quits: ouzel8___ (~ouzel8_@shams.boastblast.com) (Ping timeout: 260 seconds)
[01:34:50] <GuiToris> I have similar output as xx pasted
[01:34:53] <twkm> i generally feel it is a mistake to worry about.
[01:34:54] <phogg> one is a loadable builtin for bash, the other isn't
[01:35:04] <xx> I had no idea the bash realpath exists
[01:35:08] <phogg> me either
[01:35:31] <phogg> apparently there is a builtin rm, too.
[01:35:36] <twkm> there are several useful and several useless loadables.
[01:35:57] * phogg is a bit mystified by truefalse
[01:36:01] <phogg> does it add both a true and a false?
[01:36:05] <xx> returns true or false
[01:37:08] <GuiToris> I like this realpath thing, it makes it easier copy-pasting the paths
[01:37:25] <cq-work> If I want to source a file for variables, is there a clean way to prevent overriding variables already set?
[01:37:44] *** Joins: Gerula (~Gerula@user/gerula)
[01:38:02] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 240 seconds)
[01:38:34] *** Quits: kj (~kj@beta.aerisnetwork.net) (Ping timeout: 260 seconds)
[01:38:38] *** Joins: ayusta (Thunderbir@gateway/vpn/protonvpn/ayustae)
[01:38:40] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[01:39:00] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[01:39:16] <cq-work> I suppose the env file could use ": ${a:=b}" instead now that I think about it...
[01:39:30] <GuiToris> xx, out of curiosity; what distribution has this line? bash-builtins: /usr/lib/bash/realpath
[01:39:35] <osse> a=${a:-b}
[01:39:37] <phogg> cq-work: can you sequence the source to go first?
[01:39:50] <osse> or [[ -v a ]] || a=b
[01:39:51] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f6e3:7400:d4e2:b355:67fe:933c) (Read error: Connection reset by peer)
[01:39:53] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 246 seconds)
[01:39:53] *** ayusta is now known as ayustae
[01:40:26] <tirnanog> a=${a-b} if you genunely meant "already set".
[01:40:29] <emanuele6> or: a=$a b=$b source file
[01:40:30] *** Joins: WinterStar (~IceLight@user/icelight)
[01:40:33] <phogg> GuiToris: it looks like the output of dlocate or dpkg -S to me
[01:40:37] <tirnanog> because :- means something else.
[01:40:45] <emanuele6> a and b will be restored after file is sourced
[01:41:12] <cq-work> phogg: yeah, I suppose I can, I'll go that route.
[01:41:28] <phogg> cq-work: if you can I would, since safety is then guaranteed
[01:41:57] *** Joins: sebastorama_ (~sebastora@190.83.56.68)
[01:41:58] <GuiToris> phogg, oh I thought he could use neither ubuntu or debian, because you said it was not possible under apt-based systems
[01:42:25] <phogg> GuiToris: it isn't possible to ship the same file path in two non-conflicting packages, but since the paths are different it's fine
[01:42:34] <xx> GuiToris: debian11, the paths are different
[01:42:42] *** Parts: MTecknology (~Mike@user/mtecknology) (You saw me, but now you don't.)
[01:42:57] <xx> output from `apt-file search realpath | grep realpath$`
[01:43:13] *** Quits: eblip (~eb0t@90.209.246.132) (Ping timeout: 250 seconds)
[01:43:14] <xx> (there probably is a better way of using apt-file)
[01:43:18] <emanuele6> # a=x b=y; echo 'a=X c=z' > file; source ./file; declare -p a b c
[01:43:18] <shbot> emanuele6: declare -- a="X"
[01:43:19] <shbot> emanuele6: declare -- b="y"
[01:43:19] <shbot> emanuele6: declare -- c="z"
[01:43:22] <GuiToris> oh, got it. crystal clear. The paths are also different here
[01:43:28] <emanuele6> # a=x b=y; echo 'a=X c=z' > file; a=$a b=$b source ./file; declare -p a b c
[01:43:29] <shbot> emanuele6: declare -- a="x"
[01:43:29] <shbot> emanuele6: declare -- b="y"
[01:43:29] <shbot> emanuele6: declare -- c="z"
[01:44:01] *** Quits: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net) (Quit: WeeChat 3.3)
[01:46:02] *** Quits: sebastorama_ (~sebastora@190.83.56.68) (Ping timeout: 240 seconds)
[01:48:57] *** Quits: paulgrmn_ (~paulgrmn@user/paulgrmn) (Ping timeout: 256 seconds)
[01:50:47] *** Quits: pa_ (~smuxi@86-95-132-61.fixed.kpn.net) (Remote host closed the connection)
[01:52:31] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[01:52:40] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[01:53:11] *** Quits: jonthesnow (~xizhendu@240e:305:7380:4300:22a3:ecb5:b567:7739) (Ping timeout: 264 seconds)
[01:53:59] *** Quits: hyper_ch (~hyper_ch@user/hyper-ch/x-8215596) (Read error: Connection reset by peer)
[01:57:53] *** Quits: n4dir (~user@mue-88-130-56-254.dsl.tropolys.de) (Remote host closed the connection)
[01:59:22] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:00:15] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[02:01:02] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[02:01:50] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[02:04:14] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[02:04:17] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[02:04:35] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[02:04:43] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[02:05:50] *** Joins: seninha (~seninha@user/seninha)
[02:09:04] *** Joins: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au)
[02:09:04] *** Joins: kj (~kj@kj.aerisnetwork.net)
[02:11:38] *** Joins: TTwrs (~TTwrs@c-67-169-185-154.hsd1.ca.comcast.net)
[02:12:56] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:18:20] *** Quits: Filystyn (~piotr@user/filystyn) (Quit: Lost terminal)
[02:22:50] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[02:23:43] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[02:24:47] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[02:25:05] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[02:25:24] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[02:30:53] *** Quits: kurahaupo (~kurahaupo@123-243-221-134.tpgi.com.au) (Ping timeout: 256 seconds)
[02:31:19] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[02:31:34] *** Joins: Inline (~Inline@2a02:908:1252:7a80:eac0:c033:fea2:56dd)
[02:31:46] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[02:31:48] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[02:33:24] *** Joins: kurahaupo (~kurahaupo@123-243-221-134.tpgi.com.au)
[02:34:28] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[02:34:55] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[02:35:29] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[02:36:59] *** Joins: A|an (~Alan@173.216.51.200)
[02:38:11] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[02:38:54] *** Joins: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net)
[02:39:02] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[02:39:45] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:40:01] *** Joins: kurahaupo_ (~kurahaupo@pa49-180-31-35.pa.nsw.optusnet.com.au)
[02:40:54] *** docmax_ is now known as docmax
[02:41:24] *** Quits: sebastorama (~sebastora@190.83.56.68) (Read error: Connection reset by peer)
[02:41:43] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[02:42:12] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[02:42:13] *** Quits: kurahaupo (~kurahaupo@123-243-221-134.tpgi.com.au) (Ping timeout: 256 seconds)
[02:42:20] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[02:43:34] *** Joins: pycurious (~Adium@user/pycurious)
[02:47:23] *** Joins: n4dir (~user@mue-88-130-56-254.dsl.tropolys.de)
[02:50:26] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[02:50:48] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[02:53:58] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[02:54:24] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[02:56:40] <vishal> bash completion question: Do I need to do something special if I want to include multiple completion specs in a single file?  I have a set of bash functions that provide completions for two different commands. At the end I just have complete -F _complete_foo foo; and complete -f _comp_bar bar;  The file itself is called 'foo'. Foo's completions work as expected, but if bar is run before foo is ever run, it doesn't complete. If I run foo completions before I
[02:56:40] <vishal> run bar for the first time, then bar starts working
[02:57:10] <vishal> s/-f/-F/ for the second case there
[02:58:06] <vishal> Do I just need to split it into two files? That would be unfortunate as I curently share some sub-functions between the two
[02:59:28] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[03:00:32] *** Quits: jonatura (~jonatura@80.71.142.166.ipv4.parknet.dk) (Ping timeout: 240 seconds)
[03:01:02] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.1)
[03:02:30] *** Joins: jonatura (~jonatura@80.71.142.166.ipv4.parknet.dk)
[03:02:37] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 256 seconds)
[03:05:18] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[03:05:40] <apathor> vishal: is bash_completion sourcing the file? maybe just source it ahead of time
[03:06:48] *** Joins: drd (~drd@93-42-69-115.ip85.fastwebnet.it)
[03:07:35] <apathor> i mean if you have it in bash_completion.d/foo or bash-completion/completions/foo it might be getting loaded on the fly when foo is first completed
[03:07:41] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[03:08:22] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[03:08:30] <vishal> yeah it is using the dynamic _completion_loader stuff
[03:08:52] *** Quits: GuiToris (~GuiToris@user/guitoris) (Quit: Sieben Acht Gute Nacht!)
[03:09:12] <vishal> it is installed in /usr/share/bash-completion/completions/
[03:09:48] <vishal> it looks like _completion_loader really just needs matching filenames for other commands
[03:09:50] <apathor> then it's working as expected. you could source the file ahead of time
[03:10:13] <vishal> can I just symlink the other command(s) to that same file and place those in /usr/share/bash-completion/completions ? Or is that bad practice
[03:10:29] <apathor> sounds fine to me
[03:10:32] <vishal> well this is something that's expected to be installed from an rpm package and then just work
[03:10:40] <apathor> oh gotcha not just for you
[03:10:43] <vishal> yep
[03:11:10] <vishal> I'll symlink the other names until someone complains :)
[03:11:17] <vishal> thanks!
[03:13:37] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[03:13:42] *** Joins: sebastorama (~sebastora@190.83.56.68)
[03:13:51] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[03:15:01] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:16:01] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[03:16:25] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[03:16:38] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[03:17:41] *** Quits: jonatura (~jonatura@80.71.142.166.ipv4.parknet.dk) (Ping timeout: 250 seconds)
[03:19:38] *** Joins: jonatura (~jonatura@0x3ec68541.mobile.telia.dk)
[03:20:01] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:20:38] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[03:21:00] *** Quits: Tahvok (~Tahvok@user/tahvok) (Quit: ZNC - http://znc.in)
[03:21:12] *** Joins: Tahvok (~Tahvok@user/tahvok)
[03:21:39] *** Quits: Benett (~Benett@2a03:4000:1a:7aa::2) (Quit:  )
[03:21:41] *** Quits: cebor (~cebor@user/cebor) (Quit: bye!)
[03:21:43] *** Quits: flying_sausages_ (~flying_sa@83.149.106.219) (Quit: You just lost the game. Peace Out.)
[03:21:56] *** Joins: Benett (~Benett@xnetx.de)
[03:22:00] *** Joins: cebor (~cebor@user/cebor)
[03:23:29] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[03:24:02] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[03:24:24] *** Joins: flying_sausages (~flying_sa@83.149.106.219)
[03:24:25] *** Quits: flying_sausages (~flying_sa@83.149.106.219) (Changing host)
[03:24:25] *** Joins: flying_sausages (~flying_sa@user/flying-sausages/x-2113186)
[03:29:23] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[03:29:39] *** Joins: rgrinberg (~textual@190.113.102.153)
[03:30:06] *** Quits: N0ZYC (~N0ZYC@173-16-166-245.client.mchsi.com) (Quit: Leaving...)
[03:30:23] *** Quits: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[03:35:41] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[03:36:07] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[03:36:25] *** Joins: pycurious (~Adium@user/pycurious)
[03:36:45] *** Quits: drd (~drd@93-42-69-115.ip85.fastwebnet.it) (Ping timeout: 250 seconds)
[03:37:36] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Remote host closed the connection)
[03:38:00] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[03:38:19] *** Quits: tex (~super@user/dix) (Ping timeout: 256 seconds)
[03:41:58] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:42:41] *** Joins: sebastorama (~sebastora@190.83.56.68)
[03:43:24] *** Quits: CaCode (~CaCode@user/cacode) (Read error: Connection reset by peer)
[03:43:38] *** Joins: CaCode (~CaCode@user/cacode)
[03:43:43] *** Joins: jamiejackson (~jamiejack@207.172.87.34)
[03:45:02] *** Quits: jonatura (~jonatura@0x3ec68541.mobile.telia.dk) (Ping timeout: 260 seconds)
[03:45:11] *** Joins: jonthesnow (~xizhendu@36.112.204.20)
[03:49:22] *** Joins: lembron (~admin@user/lembron)
[03:50:05] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Remote host closed the connection)
[03:50:31] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[03:50:55] *** Joins: jonatura (~jonatura@80.71.142.166.ipv4.parknet.dk)
[03:52:35] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:53:16] *** Joins: sebastorama (~sebastora@190.83.56.68)
[03:55:39] *** Quits: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66) (Quit: Leaving)
[03:55:49] *** Quits: rgrinberg (~textual@190.113.102.153) (Ping timeout: 250 seconds)
[03:56:44] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 246 seconds)
[03:57:09] *** Joins: esselfe (~steph@user/esselfe)
[03:57:59] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[04:00:20] <lembron> i have a script in the style of "(make thing); trap cleanup_make; (make another thing); trap cleanup_another; test1(); test2(); test3()" where "function cleanup_another() { ...; set +e; (exit $exit_status); cleanup_make; } " - this is in itself all functioning as expected. BUT: now i want to change this, i may only do test2() so  "(make another thing)" 'could now be skipped' --- is there any
[04:00:20] <lembron> pattern or so i should use (tacking cleanup-function todos in an array or such?) - or is likely the best idea to just make cleanupfunctions so they can "skip themself" (as in no destroy-actions when nothing is to destroy), and continue with the setE-exit.. worm" - almost feels a bit to much for bash...
[04:01:20] *** Quits: gr33nR10t (~greenriot@user/gr33nr10t) (Ping timeout: 260 seconds)
[04:01:27] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[04:02:07] *** Joins: gr33nR10t (~greenriot@user/gr33nr10t)
[04:02:28] <lembron> "cleanup-function todos in an array" as in, test2() can call some func to 'require the following things X, Y' and x-setup adds itself on -- this seems hellish with ordering tho...
[04:04:20] *** Joins: Gooberpatrol66 (~Gooberpat@user/gooberpatrol66)
[04:10:55] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Read error: Connection reset by peer)
[04:12:23] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[04:14:27] *** Quits: et (~et@user/et) (Ping timeout: 250 seconds)
[04:15:04] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[04:16:17] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:16:33] *** Joins: Bhavuk (~BTaneja@2401:4900:1c16:3929:d8d2:7945:4a0a:a47c)
[04:16:45] *** Joins: ferdna (~ferdna@user/ferdna)
[04:17:08] *** Joins: sebastorama (~sebastora@190.83.56.68)
[04:17:32] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 240 seconds)
[04:18:05] *** Quits: polve (~polve@twcitalia/polve) (Ping timeout: 264 seconds)
[04:18:58] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[04:19:25] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Client Quit)
[04:20:48] *** Joins: polve (~polve@twcitalia/polve)
[04:24:49] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[04:25:12] *** Joins: vysn (~vysn@user/vysn)
[04:25:17] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 250 seconds)
[04:27:02] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:27:22] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Client Quit)
[04:27:45] *** Joins: sebastorama (~sebastora@190.83.56.68)
[04:34:46] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[04:35:49] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Read error: Connection reset by peer)
[04:36:02] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[04:37:39] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:38:19] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[04:38:20] *** Joins: sebastorama (~sebastora@190.83.56.68)
[04:40:01] *** Quits: Inline (~Inline@2a02:908:1252:7a80:eac0:c033:fea2:56dd) (Ping timeout: 250 seconds)
[04:40:08] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.1) (Read error: Connection reset by peer)
[04:40:39] *** Quits: eem (~eem@user/eem) (Quit: WeeChat 3.3)
[04:46:00] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[04:46:39] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[04:47:43] *** Joins: iqqdq (~iqqdq@pool-108-26-241-146.bstnma.fios.verizon.net)
[04:48:15] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:48:56] <iqqdq> is it necessary to export $PATH? The variables I export are EDITOR and VISUAL
[04:48:57] *** Joins: sebastorama (~sebastora@190.83.56.68)
[04:49:36] *** Joins: namkeles (~namkeles@124.188.198.22)
[04:52:04] <tirnanog> lembron: appending cleanup function names to an array sounds fine to me.
[04:53:33] <tirnanog> iqqdq: generally, no. think about it. where does PATH usually come from in the first place? the environment, as defined by the parent process. consequently, it should already be exportable.
[04:53:44] <lembron> tirnanog what am i missing with sorting then? i got another case where i do that (each tests writes time-elapsed) and that appears to pop out in different order from time to time :D
[04:53:52] <tirnanog> # declare -p PATH
[04:53:53] <shbot> tirnanog: declare -x PATH="/usr/bin:/bin"
[04:53:59] <tirnanog> already marked as exportable.
[04:54:11] <tirnanog> that said, "export" does no harm.
[04:54:38] <tirnanog> lembron: can you reduce this to a simple example that demonstrates the problem?
[04:54:51] *** Joins: totenkoph (~scythe@user/totenkoph)
[04:55:30] <iqqdq> alright thank you
[04:58:24] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (Quit: The Lounge - https://thelounge.chat)
[04:58:52] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:59:35] *** Joins: sebastorama (~sebastora@190.83.56.68)
[04:59:42] *** Joins: sunny93 (~sunny93@wireguard/tunneler/sunny93)
[05:01:08] <tirnanog> i.e. "trap cleanup_make" isn't valid code, and it's not immediately clear why a trap would be declared _after_ the associated "thing" that might abort.
[05:01:17] <tirnanog> which makes it all a bit vague.
[05:02:04] *** Quits: iqqdq (~iqqdq@pool-108-26-241-146.bstnma.fios.verizon.net) (Quit: Client closed)
[05:03:07] *** Joins: rgrinberg (~textual@190.113.102.153)
[05:05:01] *** Quits: kurahaupo_ (~kurahaupo@pa49-180-31-35.pa.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[05:05:35] *** Quits: jonatura (~jonatura@80.71.142.166.ipv4.parknet.dk) (Ping timeout: 256 seconds)
[05:06:31] <lembron> tirnanog round about this: http://paste.debian.net/hidden/a3dba598/
[05:06:32] <checkbot> lembron: I think the problem is on line 14. This is interpreted as a command name ending with '.'. Double check syntax. See 13 issues on https://shellcheck.net/?id=cb80992
[05:07:17] <lembron> checkbot is close, but no cigar :P
[05:08:58] <lembron> i want to gain the ability that a "stepfunc knows what it needs" when running say TEST_STEPS="2 6", as now a 10 second test spends 50 seconds on setup it doesnt even need
[05:09:28] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:10:11] *** Joins: sebastorama (~sebastora@190.83.56.68)
[05:12:28] <lembron> the "setup step failing" is handled in itself, so the trapping is just on exiting "after" (as said, this is all functioning perfectly as is)
[05:20:05] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:20:48] *** Joins: sebastorama (~sebastora@190.83.56.68)
[05:24:14] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 246 seconds)
[05:24:30] *** Quits: rgrinberg (~textual@190.113.102.153) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:24:57] <lembron> and "sorting" as in this timer-mapper prints "13, 12, 11, 10, 16, 15, 14, 1, 2, 3..." currently - i would kinda understand if it were "10, 11, 12.., 1, 2, 3.." or such ;D, but this 13->10, then back to 16->14 down to 1 makes zero sense to me :D
[05:25:00] <tirnanog> I'm not sure I'm following this. let's take teststep_2 as an example. what exactly shouldn't be happening in the event that this is the first test function invoked?
[05:25:45] <tirnanog> you mention setup work. where? these unspecified "..."'s prior to the test loop? something else?
[05:25:52] *** Joins: rgrinberg (~textual@190.113.102.153)
[05:26:17] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[05:26:31] <lembron> yea the "..." stand in palce for creating/removing ressources
[05:26:54] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:27:56] <lembron> and say teststep_2() would need the "network + sidecar WEB" - while "sidecar x11" is ONLY ever used by teststep_4() -- if all test run, thats dandy, if i want to run just 2, it burns a lot of extra time
[05:29:40] <lembron> so each teststep should get some reuired_setup("network", "socks") call (and wrap the setup code in functions for that) so far im still all good on the how - BUT then trapping comes in and while "some can just be cleaned on there own" the network for example MUST happen last (or fails)
[05:29:54] <tirnanog> ok.
[05:30:02] <tirnanog> now a picture begins to emerge.
[05:30:12] *** Quits: TTwrs (~TTwrs@c-67-169-185-154.hsd1.ca.comcast.net) (Quit: Leaving)
[05:30:16] <lembron> if it werent for that order i could certainly just "blindfire all stop functions" - but i cant :/
[05:30:30] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:41] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:31:09] *** Quits: rcernin_ (~rcernin@124.190.139.235) (Ping timeout: 250 seconds)
[05:31:13] <tirnanog> in principle, is it feasible for you to mentally define the order in which the cleanup functions must be called, irrespective of which tests ever get executed (and putting aside which cleanup functions will be executed for the moment)?
[05:31:24] *** Joins: sebastorama (~sebastora@190.83.56.68)
[05:32:10] <tirnanog> for example, "must happen last" implicates a function name that could be at the end of this thoeretical list.
[05:32:45] *** Joins: CaCode_ (~CaCode@user/cacode)
[05:32:52] <lembron> kinda making a hybrid of both you think? that idea kinda slew in my mind while typing above paragraph out too yea :P
[05:32:53] *** Quits: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au) (Ping timeout: 250 seconds)
[05:33:01] <tirnanog> it's a simple question.
[05:33:03] <tirnanog> either you can or you can't.
[05:33:35] <tirnanog> if the order in which the cleanup functions must be called varies based on _which_ tests are going to be executed, it wouldn't be that simple, for instance. but maybe it is.
[05:34:42] <tirnanog> note that I'm talking only about order at this point.
[05:35:02] *** Quits: CaCode (~CaCode@user/cacode) (Ping timeout: 240 seconds)
[05:35:08] <lembron> strictly speaking i guess they arent....
[05:35:14] <tirnanog> aren't what?
[05:35:30] <lembron> "depending on wich"
[05:35:33] <tirnanog> ok
[05:38:08] <lembron> my "start" steps already can be run "twice" and skip themself, seems if i manage to get the same done with the cleanup i can just slam em all in a row while still having each step "rerun(and autoskip)" each setup it needs...
[05:38:31] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 250 seconds)
[05:38:40] *** Quits: n4dir (~user@mue-88-130-56-254.dsl.tropolys.de) (Ping timeout: 268 seconds)
[05:39:20] <lembron> ill play around with this a bit - thank you for spingboarding tirnanog =) the thought was there when i came here, but i needed a nudge over that cliff :D
[05:39:40] *** Quits: knstn (~knstn@ppp-94-66-57-29.home.otenet.gr) (Quit: leaving)
[05:40:25] *** Joins: n4dir (~user@i577BC862.versanet.de)
[05:41:18] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:42:00] *** Joins: sebastorama (~sebastora@190.83.56.68)
[05:42:15] <tirnanog> lembron: https://termbin.com/p2gb ... maybe.
[05:43:03] <tirnanog> not only does the test get to define which cleanup functions need to be executed, there is a globally defined order in which they must run.
[05:43:20] *** Quits: namkeles (~namkeles@124.188.198.22) (Quit: Client closed)
[05:44:08] <lembron> hm id move the enlistment into the setup, but thats pretty much right on then yea =)
[05:44:52] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (Read error: Connection reset by peer)
[05:45:28] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[05:46:23] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 256 seconds)
[05:47:45] *** Quits: Friithian (gunqqer@172.104.26.74) (Quit: Reconnecting)
[05:47:57] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (Read error: Connection reset by peer)
[05:48:00] *** Joins: Friithian (~gunqqer@friithian.dev)
[05:48:34] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[05:50:25] *** Quits: Friithian (~gunqqer@friithian.dev) (Client Quit)
[05:50:34] *** Quits: jamiejackson (~jamiejack@207.172.87.34) (Quit: Connection closed)
[05:50:34] *** Joins: Friithian (gunqqer@friithian.dev)
[05:51:53] *** Quits: Chex (~Chex@sleepl.northnook.ca) (Changing host)
[05:51:53] *** Joins: Chex (~Chex@user/chex)
[05:51:55] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:52:37] *** Joins: sebastorama (~sebastora@190.83.56.68)
[05:52:44] *** Joins: luva8 (~luva@146.70.62.252)
[05:52:44] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Remote host closed the connection)
[05:53:16] *** Joins: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net)
[05:54:02] *** Quits: luva (~luva@37.120.197.53) (Ping timeout: 240 seconds)
[05:54:02] *** luva8 is now known as luva
[05:55:01] *** Joins: wuseman (~wuseman@81-236-212-3-no68.tbcn.telia.com)
[05:58:43] *** Joins: earnestly (~earnest@user/earnestly)
[06:02:32] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:03:13] *** Joins: sebastorama (~sebastora@190.83.56.68)
[06:07:49] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (Read error: Connection reset by peer)
[06:08:26] *** Quits: reset (~reset@user/reset) (Ping timeout: 245 seconds)
[06:08:26] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[06:10:01] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:ec1a:72f1:2b70:c4b0)
[06:10:49] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (Read error: Connection reset by peer)
[06:11:27] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[06:11:53] *** Quits: wuseman (~wuseman@81-236-212-3-no68.tbcn.telia.com) (Ping timeout: 256 seconds)
[06:12:16] *** Joins: wuseman (~wuseman@81-234-120-217-no68.tbcn.telia.com)
[06:13:08] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:13:49] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (Read error: Connection reset by peer)
[06:13:50] *** Joins: sebastorama (~sebastora@190.83.56.68)
[06:14:22] *** Quits: N4buc0- (~N4buc0@179.186.178.29.dynamic.adsl.gvt.net.br) (Ping timeout: 260 seconds)
[06:14:26] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[06:16:38] *** Joins: CitraBenzoet (~CitraBenz@user/citrabenzoet)
[06:16:58] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (Read error: Connection reset by peer)
[06:17:38] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[06:17:59] *** Joins: markofcorn (~markofcor@172-220-018-195.res.spectrum.com)
[06:19:58] *** Quits: wuseman (~wuseman@81-234-120-217-no68.tbcn.telia.com) (Ping timeout: 260 seconds)
[06:20:05] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (Read error: Connection reset by peer)
[06:20:23] *** Joins: sonny (~sonny@bras-base-london1483w-grc-27-70-51-121-200.dsl.bell.ca)
[06:20:26] <markofcorn> If this is the wrong place to ask this since its more related to fzf let me know. I'm having trouble getting a script to correctly parse the arguments to fzf
[06:20:33] <markofcorn> Script is here: https://termbin.com/zo8h
[06:20:46] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[06:20:52] *** Joins: reset (~reset@user/reset)
[06:21:34] <tirnanog> !faq complex
[06:21:34] <greybot> https://mywiki.wooledge.org/BashFAQ/050 -- I'm trying to put a command in a variable, but the complex cases always fail!
[06:22:42] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:23:09] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (Read error: Connection reset by peer)
[06:23:44] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:23:47] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[06:24:12] <tirnanog> not to mention that the $(command substitution) is immediately being executed, before selected is even assigned.
[06:24:28] *** Joins: sebastorama (~sebastora@190.83.56.68)
[06:24:53] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[06:26:26] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (Read error: Connection reset by peer)
[06:27:06] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[06:27:21] <markofcorn> Hmm. So would functions be the best solution here?
[06:28:46] *** Joins: wuseman (~wuseman@81-236-212-3-no68.tbcn.telia.com)
[06:28:57] <tirnanog> erroneous, early expansion of a command substitution doesn't have anything to do with whether you are using functions or not.
[06:29:18] <tirnanog> FZCMD is definitely nonsense. you can use an array to store fzf arguments.
[06:29:34] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (Read error: Connection reset by peer)
[06:30:15] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[06:30:19] <markofcorn> Rather than USERCMD,PASSCMD,TOTPCMD, making them functions rather than expansions
[06:30:54] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[06:31:32] <tirnanog> maybe. how does execute-silent work exactly? does it execute a shell?
[06:32:07] *** Quits: n4dir (~user@i577BC862.versanet.de) (Remote host closed the connection)
[06:32:31] <markofcorn> From the man page: fzf switches to the alternate screen when executing a command.  How‐
[06:32:32] <markofcorn>        ever,  if  the  command is expected to complete quickly, and you are
[06:32:32] <markofcorn>        not interested in its output, you might want to  use  execute-silent
[06:32:33] <markofcorn>        instead,  which silently executes the command without the switching.
[06:32:56] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:ec1a:72f1:2b70:c4b0) (Ping timeout: 268 seconds)
[06:33:00] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (Read error: Connection reset by peer)
[06:33:09] <tirnanog> that doesn't say. will have to put it to the test, I think.
[06:33:41] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[06:33:53] <tirnanog> oh wait, it does.
[06:34:16] <tirnanog> $SHELL -c ... in the event that SHELL is set, which would be the login shell. ok.
[06:34:22] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:35:04] <markofcorn> So I guess where I'm stuck is I need to specify those commands in fzf before calling it, but $selected is assigned based on the selected entry in fzf
[06:35:05] *** Joins: sebastorama (~sebastora@190.83.56.68)
[06:35:31] <tirnanog> in that case, you could use functions by exporting them prior (export -f funcname). that eliminates the additional quoting layers and issues of code injection.
[06:35:44] <tirnanog> however, I think you're still going to have the issue of selected being unset.
[06:36:20] *** Joins: annomy (~annomy@103.38.199.98)
[06:36:23] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[06:36:26] <tirnanog> because fzf launches a shell as a sub-process. there's no way it's going to know about selected, unless it's exported by an ancestor process by way of the environment.
[06:36:58] <tirnanog> or unless fzf sets selected of its own accord (I don't use fzf).
[06:37:13] <tirnanog> either way, it would have to come from the environment.
[06:37:34] <markofcorn> Hmm. So this may not be possible. Separate scripts for username,pass,totp? Gonna call it with a keybind anyway so i guess it doesnt matter to me
[06:38:10] <tirnanog> apparently, it supports {} as a placeholder for the selected item. maybe that will help you?
[06:38:16] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[06:38:23] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Quit: Leaving)
[06:38:30] <tirnanog> in theory, you could execute-silent:function_name {}, I suppose.
[06:38:31] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (Ping timeout: 256 seconds)
[06:38:45] <tirnanog> and it should pass the selected item as a single argument (probably).
[06:39:00] <markofcorn> Unfortunately, I need to parse {} since bitwarden stores entries in messy json...
[06:39:05] *** Quits: wuseman (~wuseman@81-236-212-3-no68.tbcn.telia.com) (Ping timeout: 256 seconds)
[06:39:11] *** Joins: sgn (~sgn@user/sgn)
[06:39:15] *** Joins: wuseman (~wuseman@81-234-120-217-no68.tbcn.telia.com)
[06:39:25] <tirnanog> ok, but that's what your functions would do, wouldn't they?
[06:39:43] <tirnanog> or, rather, they could.
[06:39:58] <markofcorn> oh like the function takes {} as the argument then parses it and sends it to the clipboard
[06:40:01] <tirnanog> right.
[06:40:16] *** Quits: wuseman (~wuseman@81-234-120-217-no68.tbcn.telia.com) (Changing host)
[06:40:16] *** Joins: wuseman (~wuseman@user/wuseman)
[06:40:24] <tirnanog> you're then operating on "$1" in the function.
[06:40:35] <markofcorn> That could work
[06:40:41] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[06:40:50] *** Parts: CitraBenzoet (~CitraBenz@user/citrabenzoet) ()
[06:40:57] *** Quits: DaNeenjah (~jake@adsl-74-230-8-177.hsv.bellsouth.net) (Quit: WeeChat 3.3)
[06:41:02] <tirnanog> which should be quoted by the way. do be sure to run the code through shellcheck once it's shaped up.
[06:42:04] <tirnanog> as for FZCMD, it should be more like fzargs=(...); ... | fzf "${fzargs[@]}". expansions should always be quoted but ... I think you'll end up not needing any variable expansions for your eventual fzf args.
[06:42:15] <tirnanog> I mean, where you have $USERCMD and such already.
[06:42:42] <tirnanog> can probably be like: fzargs=('--bind=ctrl-u:execute-silent:user_func {}')
[06:42:44] <tirnanog> something like that
[06:43:09] <tirnanog> as long as you export -f user_fun before fzf gets called.
[06:43:11] <tirnanog> func*
[06:43:41] <markofcorn> gotcha. I'll let you know if I get stuck but that should get me going
[06:43:50] <markofcorn> Thank you
[06:44:05] <tirnanog> the single quotes are to avoid it being erroneously split into two arguments where the space is there.
[06:44:13] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[06:44:59] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:45:14] <tirnanog> you probably don't need an args array at all at that point, really. but anyway.
[06:45:40] *** Joins: sebastorama (~sebastora@190.83.56.68)
[06:52:00] *** Joins: rcernin (~rcernin@124.190.139.235)
[06:52:58] <tirnanog> markofcorn: as an aside, it looks as though fzf tries to employ some shell quoting scheme for the argument that is implied by {} (which is just as well, given it's ultimately being injected into a shell).
[06:53:15] <tirnanog> how good that scheme is, I do not know, but it's apparently trying.
[06:54:32] <tirnanog> odd, though. it would make a lot more sense to just specify FZF_SELECTION in the environment of the shell.
[06:54:40] <tirnanog> I suppose people like doing things the hard way.
[06:55:35] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:55:52] <markofcorn> in the shell invoked within fzf you mean? or is it me thats doing things the hard way
[06:56:17] *** Joins: sebastorama (~sebastora@190.83.56.68)
[06:56:32] <tirnanog> I mean fzf.
[06:57:01] <tirnanog> as in, why try to 'shellquote' something when the environment exists as a mechanism to safely convey such a value anyway.
[06:58:06] <tirnanog> if fzf were to do that, it would not need to rely on shell injection at all to convey the selection, which would obviously be safer.
[06:58:08] <tirnanog> oh well.
[06:59:53] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[07:00:14] *** Joins: alzgh (~alzgh@user/alzgh)
[07:01:45] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 256 seconds)
[07:04:01] *** Quits: MeowcatWoofWoofF (~rosefoxma@2001:470:69fc:105::c74e) (Quit: Client limit exceeded: 20000)
[07:05:16] *** Parts: sonny (~sonny@bras-base-london1483w-grc-27-70-51-121-200.dsl.bell.ca) (Good Bye)
[07:06:00] *** Quits: markofcorn (~markofcor@172-220-018-195.res.spectrum.com) (Quit: Client closed)
[07:06:02] *** Quits: luva (~luva@146.70.62.252) (Quit: Ping timeout (120 seconds))
[07:06:11] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:06:21] *** Joins: luva (~luva@146.70.62.252)
[07:06:34] *** Joins: wuseman (~wuseman@81-236-212-3-no68.tbcn.telia.com)
[07:06:54] *** Joins: sebastorama (~sebastora@190.83.56.68)
[07:09:57] *** Quits: fluter (~fluter@user/fluter) (Ping timeout: 250 seconds)
[07:10:04] *** Quits: A|an (~Alan@173.216.51.200) (Quit: A|an)
[07:10:27] *** Joins: N0ZYC (~N0ZYC@173-16-166-245.client.mchsi.com)
[07:15:11] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[07:15:24] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[07:16:43] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[07:16:48] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:17:35] *** Joins: sebastorama (~sebastora@190.83.56.68)
[07:20:21] *** Quits: wuseman (~wuseman@81-236-212-3-no68.tbcn.telia.com) (Ping timeout: 250 seconds)
[07:20:28] *** Joins: knn (~kn@47.200.203.62)
[07:20:56] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[07:21:12] *** Joins: wuseman (~wuseman@81-234-120-217-no68.tbcn.telia.com)
[07:21:32] *** Quits: timj (~timj@user/timj) (Quit: Leaving.)
[07:22:44] *** Joins: cdown (~cdown@89.32.122.5)
[07:23:17] *** Quits: rcernin (~rcernin@124.190.139.235) (Ping timeout: 256 seconds)
[07:23:33] *** Quits: earnestly (~earnest@user/earnestly) (Read error: Connection reset by peer)
[07:24:36] *** Quits: knn (~kn@47.200.203.62) (Client Quit)
[07:25:02] *** Quits: jos1 (~jos3@dyndsl-095-033-174-153.ewe-ip-backbone.de) (Ping timeout: 240 seconds)
[07:26:42] *** Quits: simpl_e (~user@user/simpl-e/x-8589812) (Ping timeout: 260 seconds)
[07:27:29] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:27:29] *** Joins: earnestly (~earnest@user/earnestly)
[07:28:11] *** Joins: sebastorama (~sebastora@190.83.56.68)
[07:28:57] *** Quits: wuseman (~wuseman@81-234-120-217-no68.tbcn.telia.com) (Ping timeout: 256 seconds)
[07:29:01] *** Joins: rcernin (~rcernin@124.190.139.235)
[07:30:41] *** Joins: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys)
[07:33:59] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 268 seconds)
[07:36:58] *** Joins: wuseman (~wuseman@81-236-212-3-no68.tbcn.telia.com)
[07:37:48] *** Joins: jos1 (~jos3@dyndsl-091-096-040-024.ewe-ip-backbone.de)
[07:38:05] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:38:48] *** Joins: sebastorama (~sebastora@190.83.56.68)
[07:39:32] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 268 seconds)
[07:39:35] *** Quits: Zauberfisch (~Zauberfis@cm147-42.liwest.at) (Read error: Connection reset by peer)
[07:40:01] *** Quits: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys) (Quit: WeeChat 3.2.1)
[07:40:18] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:40:32] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:40:33] *** Joins: Zauberfisch (~Zauberfis@cm147-42.liwest.at)
[07:42:49] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Remote host closed the connection)
[07:43:40] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[07:44:11] *** Joins: CaCode- (~CaCode@user/cacode)
[07:45:05] *** Quits: xx (~xx@user/xx) (Ping timeout: 268 seconds)
[07:45:22] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[07:46:47] *** Quits: CaCode_ (~CaCode@user/cacode) (Ping timeout: 250 seconds)
[07:47:26] *** Joins: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au)
[07:48:42] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:49:21] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:49:23] *** Joins: sebastorama (~sebastora@190.83.56.68)
[07:51:07] *** Joins: noarb (~noarb@user/noarb)
[07:52:28] *** Joins: xah37 (~manjaro-g@2603-6000-8c0b-3200-0000-0000-0000-0001.res6.spectrum.com)
[07:54:06] *** Joins: ^wuseman (~wuseman@81-234-120-217-no68.tbcn.telia.com)
[07:54:30] *** ^wuseman is now known as Guest6898
[07:54:56] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:54:57] *** Quits: wuseman (~wuseman@81-236-212-3-no68.tbcn.telia.com) (Ping timeout: 268 seconds)
[07:57:47] *** Joins: fluter (~fluter@user/fluter)
[07:59:02] *** Quits: Guest6898 (~wuseman@81-234-120-217-no68.tbcn.telia.com) (Ping timeout: 240 seconds)
[07:59:18] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:00:01] *** Joins: sebastorama (~sebastora@190.83.56.68)
[08:00:46] *** Joins: sublim20 (~sublim20@user/sublim20)
[08:02:25] *** Joins: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com)
[08:03:44] *** Joins: shbot1 (~shbot@37.139.2.101)
[08:03:44] *** Quits: shbot (~shbot@37.139.2.101) (Killed (NickServ (GHOST command used by shbot1)))
[08:04:48] *** Quits: annomy (~annomy@103.38.199.98) (Quit: WeeChat 3.3)
[08:06:21] *** Joins: Philonous_ (~Philonous@user/philonous)
[08:06:59] *** Joins: hyper_ch (~hyper_ch@user/hyper-ch/x-8215596)
[08:07:44] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[08:09:32] *** Joins: vishal (~vishal@fedora/vishal)
[08:09:55] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:10:41] *** Joins: sebastorama (~sebastora@190.83.56.68)
[08:13:51] *** Quits: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net) (*.net *.split)
[08:13:51] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (*.net *.split)
[08:13:51] *** Quits: jab416171 (~jab416171@c-174-52-57-117.hsd1.ut.comcast.net) (*.net *.split)
[08:13:51] *** Quits: jlc (~jlc@cpe-107-15-173-212.nc.res.rr.com) (*.net *.split)
[08:13:51] *** Quits: niko (~niko@libera/staff/niko) (*.net *.split)
[08:13:51] *** Quits: Bayes (~Bayes@user/bayes) (*.net *.split)
[08:13:51] *** Quits: damyan^ (damyan@mail.0x4711.org) (*.net *.split)
[08:13:51] *** Quits: Philonous (~Philonous@user/philonous) (*.net *.split)
[08:13:51] *** Quits: compuguy (ahall@user/compuguy) (*.net *.split)
[08:13:51] *** Quits: twkm (twkm@rfc1459.net) (*.net *.split)
[08:13:51] *** Quits: chronon (~chronon@user/chronon) (*.net *.split)
[08:13:51] *** Quits: dkeohane2 (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com) (*.net *.split)
[08:13:51] *** Quits: z14 (~alzee@157.136.233.35.bc.googleusercontent.com) (*.net *.split)
[08:13:51] *** Quits: e36freak (~e36freak@user/e36freak) (*.net *.split)
[08:14:21] *** Quits: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com) (Quit: ZNC 1.8.2+deb2build1 - https://znc.in)
[08:15:03] *** Joins: niko (~niko@libera/staff/niko)
[08:15:09] *** Joins: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com)
[08:18:25] *** Joins: Church (~aleph@pool-98-116-232-112.nycmny.fios.verizon.net)
[08:18:25] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[08:18:25] *** Joins: jab416171 (~jab416171@c-174-52-57-117.hsd1.ut.comcast.net)
[08:18:25] *** Joins: jlc (~jlc@cpe-107-15-173-212.nc.res.rr.com)
[08:18:25] *** Joins: Bayes (~Bayes@user/bayes)
[08:18:25] *** Joins: compuguy (ahall@user/compuguy)
[08:18:25] *** Joins: chronon (~chronon@user/chronon)
[08:18:25] *** Joins: twkm (twkm@rfc1459.net)
[08:18:25] *** Joins: dkeohane2 (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com)
[08:18:25] *** Joins: z14 (~alzee@157.136.233.35.bc.googleusercontent.com)
[08:18:25] *** Joins: e36freak (~e36freak@user/e36freak)
[08:19:17] *** Quits: maledictium (~crux@bl5-67-127.dsl.telepac.pt) (Ping timeout: 250 seconds)
[08:20:06] *** Quits: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com) (Ping timeout: 245 seconds)
[08:20:36] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:20:46] *** Joins: damyan^ (damyan@mail.0x4711.org)
[08:21:03] *** Joins: maledictium (~crux@dsl-142-149.bl26.telepac.pt)
[08:21:23] *** Joins: sebastorama (~sebastora@190.83.56.68)
[08:22:54] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:23:37] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 250 seconds)
[08:25:45] *** Joins: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com)
[08:26:07] *** Joins: WinterStar (~IceLight@user/icelight)
[08:27:53] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:30:43] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[08:31:15] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:31:58] *** Joins: sebastorama (~sebastora@190.83.56.68)
[08:32:01] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[08:32:17] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Remote host closed the connection)
[08:33:08] *** Quits: Ylli[m] (~yllimatri@2001:470:69fc:105::dea8) (Quit: Client limit exceeded: 20000)
[08:33:15] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[08:33:55] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Remote host closed the connection)
[08:34:17] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[08:35:13] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Remote host closed the connection)
[08:35:37] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[08:35:56] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Remote host closed the connection)
[08:36:20] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[08:36:24] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Remote host closed the connection)
[08:38:05] *** Quits: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com) (Ping timeout: 256 seconds)
[08:39:01] *** Joins: wuseman (~wuseman@81-234-125-122-no68.tbcn.telia.com)
[08:41:52] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:42:34] *** Joins: sebastorama (~sebastora@190.83.56.68)
[08:44:24] *** Joins: zostj (~rue@1-162-44-168.dynamic-ip.hinet.net)
[08:46:33] *** Joins: sazawal (~sazawal@122.161.85.123)
[08:52:28] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:53:12] *** Joins: sebastorama (~sebastora@190.83.56.68)
[08:56:06] *** Quits: rgrinberg (~textual@190.113.102.153) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:57:20] *** Joins: velix (~velix@user/velix)
[08:57:55] <velix> Anyone with a hint, why `${args[@]}` works, while `"${args[@]}"` doesn't? https://bpa.st/7KFQ
[08:58:13] *** Joins: Ylli[m] (~yllimatri@2001:470:69fc:105::dea8)
[08:58:13] *** Joins: MeowcatWoofWoofF (~rosefoxma@2001:470:69fc:105::c74e)
[09:01:23] <e36freak> --user-agent and ISV... should be separate arguments
[09:01:26] <llua> because word splitting lets the argument to those options to be seperate words
[09:01:29] <e36freak> you have them quoted together
[09:02:18] <velix> uuuuuuuuuh
[09:02:22] <velix> e36freak: thanks :D
[09:02:56] <velix> llua: also thanks ;)
[09:03:05] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:03:39] <velix> same to --checkers 1 etc.
[09:03:47] *** Joins: sebastorama (~sebastora@190.83.56.68)
[09:07:41] <velix> But you would go for "${args[@]}", right? Or is ${args[@]} fine in my case?
[09:10:22] <e36freak> you always want "${args[@]}"
[09:10:31] <velix> ;) ok
[09:10:47] <velix> I understand. like you always want bacon on a burger.
[09:11:06] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[09:13:42] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:14:24] *** Joins: sebastorama (~sebastora@190.83.56.68)
[09:15:49] <sublim20> blue cheese
[09:19:10] <velix> blue mountain cheese
[09:21:02] *** Quits: rcernin (~rcernin@124.190.139.235) (Ping timeout: 260 seconds)
[09:21:12] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[09:23:13] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:23:25] *** Joins: rcernin (~rcernin@124.190.139.235)
[09:24:19] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:24:35] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[09:24:55] *** Joins: alzgh (~alzgh@user/alzgh)
[09:25:00] *** Joins: sebastorama (~sebastora@190.83.56.68)
[09:25:06] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[09:25:44] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[09:27:45] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[09:28:11] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 250 seconds)
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:31:02] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[09:31:03] *** Quits: Darkfoe_ (sid402081@helmsley.irccloud.com) ()
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:31:20] *** Joins: Darkfoe_ (sid402081@helmsley.irccloud.com)
[09:31:38] *** Quits: Darkfoe_ (sid402081@helmsley.irccloud.com) (Client Quit)
[09:33:21] *** Joins: Darkfoe (sid402081@helmsley.irccloud.com)
[09:34:55] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:35:38] *** Joins: sebastorama (~sebastora@190.83.56.68)
[09:36:54] *** Quits: rcernin (~rcernin@124.190.139.235) (Ping timeout: 260 seconds)
[09:37:35] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 264 seconds)
[09:39:25] *** Joins: karakedi (~eAC53C340@user/karakedi)
[09:39:51] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[09:42:30] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[09:43:02] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:44:15] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Read error: Connection reset by peer)
[09:44:27] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[09:45:32] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:46:14] *** Joins: sebastorama (~sebastora@190.83.56.68)
[09:46:31] *** Quits: iamGavinJ (~iamGavinJ@user/iamgavinj) (Quit: iamGavinJ)
[09:46:46] *** Joins: vysn (~vysn@user/vysn)
[09:50:03] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 256 seconds)
[09:53:35] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[09:56:08] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:56:50] *** Joins: sebastorama (~sebastora@190.83.56.68)
[10:01:08] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[10:03:52] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:3456:a403:543c:f1a4)
[10:06:45] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:06:52] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[10:07:38] *** Joins: sebastorama (~sebastora@190.83.56.68)
[10:07:39] *** Joins: aramtsamtsam (~Thunderbi@2001:861:388a:5600:1710:c3dc:c776:df35)
[10:08:22] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Remote host closed the connection)
[10:10:00] *** Joins: Mo (~Mo@dynamic-077-006-054-200.77.6.pool.telefonica.de)
[10:10:27] *** Quits: aramtsamtsam (~Thunderbi@2001:861:388a:5600:1710:c3dc:c776:df35) (Client Quit)
[10:12:05] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[10:17:32] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:18:13] *** Joins: sebastorama (~sebastora@190.83.56.68)
[10:18:57] *** Quits: polve (~polve@twcitalia/polve) (Ping timeout: 256 seconds)
[10:19:30] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[10:19:44] *** Joins: Samian (~s@user/samian)
[10:20:49] *** Joins: polve (~polve@twcitalia/polve)
[10:22:47] *** Quits: Entelin (~Entelin@c-107-4-246-114.hsd1.mn.comcast.net) (Quit: WeeChat 3.3)
[10:22:57] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:3456:a403:543c:f1a4) (Ping timeout: 268 seconds)
[10:23:40] *** Joins: roadie (~user@2a02:8108:ec0:1427:88f6:1e31:ecdb:d3ad)
[10:24:16] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Ping timeout: 245 seconds)
[10:25:04] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:26:22] *** Joins: Bhavuk_ (~BTaneja@106.220.220.251)
[10:28:09] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:28:51] *** Joins: sebastorama (~sebastora@190.83.56.68)
[10:28:56] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[10:29:43] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[10:29:47] *** Quits: Bhavuk (~BTaneja@2401:4900:1c16:3929:d8d2:7945:4a0a:a47c) (Ping timeout: 264 seconds)
[10:29:51] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Client Quit)
[10:31:27] *** Joins: tex (~super@user/dix)
[10:32:32] *** Quits: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au) (Ping timeout: 240 seconds)
[10:34:17] *** Quits: Bhavuk_ (~BTaneja@106.220.220.251) (Read error: Connection reset by peer)
[10:34:54] *** Joins: Bhavuk (~BTaneja@2401:4900:1c16:54d6:64f8:dd1a:10bc:5d98)
[10:38:46] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:39:24] *** Quits: alzgh (~alzgh@user/alzgh) (Ping timeout: 256 seconds)
[10:39:38] *** Joins: sebastorama (~sebastora@190.83.56.68)
[10:40:50] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:41:58] *** Joins: lavaball (felix@31.204.155.215)
[10:46:04] *** Joins: alzgh (alzgh@user/alzgh)
[10:49:33] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:50:15] *** Joins: sebastorama (~sebastora@190.83.56.68)
[10:57:48] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[10:59:57] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Ping timeout: 268 seconds)
[11:00:09] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:00:52] *** Joins: sebastorama (~sebastora@190.83.56.68)
[11:03:33] *** Joins: Bhavuk_ (~BTaneja@2401:4900:1c16:54d6:3d46:23f:8adb:6257)
[11:04:39] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[11:05:27] *** Joins: Bhavuk_Taneja (~BTaneja@2401:4900:1c16:54d6:3d46:23f:8adb:6257)
[11:07:35] *** Quits: Bhavuk (~BTaneja@2401:4900:1c16:54d6:64f8:dd1a:10bc:5d98) (Ping timeout: 264 seconds)
[11:08:47] *** Quits: Bhavuk_ (~BTaneja@2401:4900:1c16:54d6:3d46:23f:8adb:6257) (Ping timeout: 264 seconds)
[11:08:55] *** Joins: Bhavuk_ (~BTaneja@2401:4900:1c16:54d6:258b:60dd:4a33:c7b1)
[11:10:46] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:11:29] *** Joins: sebastorama (~sebastora@190.83.56.68)
[11:12:59] *** Quits: Bhavuk_Taneja (~BTaneja@2401:4900:1c16:54d6:3d46:23f:8adb:6257) (Ping timeout: 264 seconds)
[11:14:48] *** Joins: sarantos (~sarantos@2a02:587:3431:f3d7:7990:f181:6ff:9756)
[11:15:40] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[11:17:36] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Read error: Connection reset by peer)
[11:18:21] *** Joins: arinov (~arinov@213.194.126.155)
[11:19:38] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[11:20:25] *** Joins: luca1 (~luca1@31.190.73.193)
[11:21:24] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:22:06] *** Quits: OlCe (~user@lfbn-nic-1-526-60.w90-118.abo.wanadoo.fr) (Read error: Connection reset by peer)
[11:22:11] *** Joins: sebastorama (~sebastora@190.83.56.68)
[11:27:28] *** Joins: ExeciN (~ExeciN@user/nicexe)
[11:27:42] *** Quits: Raguile (~Raguile@user/raguile) (Ping timeout: 260 seconds)
[11:28:01] *** Quits: esselfe (~steph@user/esselfe) (Ping timeout: 245 seconds)
[11:28:23] *** Joins: tobybl (~tobybl@213.31.135.91)
[11:30:07] *** Quits: sidy (~sidy@user/sidy) (Read error: Connection reset by peer)
[11:30:21] *** Joins: geonicz (~geonicz@86.57.152.167)
[11:31:19] *** Joins: martinus__ (~martin@95.31.201.77.rev.sfr.net)
[11:32:06] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:32:14] <ExeciN> hi people. I'm trying to run a complex command as a specific user so I thought of using `sudo -u user` and then wrapping the whole command in parenthesis to make it safer to use with a mix of double-quotes, signle-quotes and pipes. Is there a flaw in this logic? Should I skip using a subshell and instead put everything in quotes (and also escape quotes internally)?
[11:32:48] *** Joins: sebastorama (~sebastora@190.83.56.68)
[11:33:02] *** Quits: deltab (~deltab@user/deltab) (Ping timeout: 240 seconds)
[11:34:51] <geirha> parenthesis has no effect on quoting
[11:35:18] <geirha> and sudo don't know shell syntax
[11:35:29] *** Quits: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk) (Ping timeout: 264 seconds)
[11:35:34] *** Joins: AsenMx (~AsenMx@user/asenmx)
[11:38:21] *** shbot1 is now known as shbot
[11:40:11] *** Quits: luca1 (~luca1@31.190.73.193) (Quit: Leaving)
[11:40:24] *** Joins: luca1 (~luca1@31.190.73.193)
[11:41:58] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[11:42:19] *** Joins: chomwitt (~chomwitt@2a02:587:dc0f:7c00:12c3:7bff:fe6d:d374)
[11:42:30] *** Parts: velix (~velix@user/velix) (Leaving)
[11:42:36] *** Joins: mithrin (~mithrin@stip-static-62.213-81-207.telecom.sk)
[11:42:43] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:43:08] *** Joins: deltab (~deltab@user/deltab)
[11:43:27] *** Joins: sebastorama (~sebastora@190.83.56.68)
[11:44:32] *** Quits: l4yer (~l4yer@195.181.170.210) (Ping timeout: 240 seconds)
[11:45:42] *** Joins: sublim20 (~sublim20@user/sublim20)
[11:49:27] *** Quits: jonthesnow (~xizhendu@36.112.204.20) (Ping timeout: 250 seconds)
[11:50:38] *** Joins: Bhavuk_Taneja (~BTaneja@2401:4900:1c16:54d6:d94f:3c76:aca4:b843)
[11:52:09] *** Joins: Bhavuk (~BTaneja@2401:4900:1c16:54d6:dd29:831e:b1ea:855a)
[11:53:18] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:3456:a403:543c:f1a4)
[11:53:21] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:53:26] *** Quits: Bhavuk_ (~BTaneja@2401:4900:1c16:54d6:258b:60dd:4a33:c7b1) (Ping timeout: 245 seconds)
[11:53:55] *** Joins: OlCe (~user@lfbn-nic-1-526-60.w90-118.abo.wanadoo.fr)
[11:54:02] *** Joins: sebastorama (~sebastora@190.83.56.68)
[11:55:04] *** Joins: rcernin_ (~rcernin@124.190.139.235)
[11:55:35] *** Quits: Bhavuk_Taneja (~BTaneja@2401:4900:1c16:54d6:d94f:3c76:aca4:b843) (Ping timeout: 264 seconds)
[11:56:12] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[11:56:47] <ExeciN> I ended up putting `sudo -u user` int the beginnign and after almost every pipe
[11:56:49] *** Joins: l4yer (~l4yer@195.181.170.210)
[11:58:01] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:3456:a403:543c:f1a4) (Ping timeout: 245 seconds)
[11:59:15] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[12:03:26] <pj> I find that generally if a script needs root access then often times the best thing is to just run the entire script as root.
[12:03:57] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:04:25] *** Joins: IRCnet (~luca1@31.190.73.193)
[12:04:32] *** Joins: rendar (~rendar@user/rendar)
[12:04:40] *** Joins: sebastorama (~sebastora@190.83.56.68)
[12:06:01] *** Quits: luca1 (~luca1@31.190.73.193) (Quit: Leaving)
[12:06:34] <ExeciN> in my case I need to run some commands as a specific user (that isnt root)
[12:07:53] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Remote host closed the connection)
[12:08:18] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[12:08:26] *** Quits: polve (~polve@twcitalia/polve) (Ping timeout: 245 seconds)
[12:09:54] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Read error: Connection reset by peer)
[12:10:05] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[12:10:39] <pj> yeah, I see that.  You can just use a heredoc as stdin to sudo...
[12:10:45] <pj> sudo bash <<EOF
[12:10:46] *** Joins: polve (~polve@twcitalia/polve)
[12:10:52] <pj> ...your commands here
[12:10:52] *** Joins: aliosablack (~chomwitt@2a02:587:dc0f:7c00:12c3:7bff:fe6d:d374)
[12:10:53] <pj> EOF
[12:11:36] *** Quits: chomwitt (~chomwitt@2a02:587:dc0f:7c00:12c3:7bff:fe6d:d374) (Read error: Connection reset by peer)
[12:11:50] <pj> be aware that the heredoc is a double-quoted string, so variables will interpolate before switching user, unless you do <<<'EOF' to make it a single-quoted string.
[12:12:11] <pj> errrr: <<'EOF'
[12:12:17] <pj> that was one "<" too many
[12:13:43] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Client Quit)
[12:14:34] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:15:15] *** Joins: sebastorama (~sebastora@190.83.56.68)
[12:16:14] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:17:45] <sublim20> hey all, got a quick question.  i have a shell script that runs under cron every 3 hours.   the script requires user input and runs in a terminal.  what would be the best way to make sure the script only ever has one terminal window open
[12:18:38] <ExeciN> I don't think you should run anything interactive as a cron job
[12:18:42] <sublim20> currently, this problem is solved by a variable being stored in a text file and it being changed by the script.
[12:19:04] <sublim20> the cron job is a basic back up rsync script
[12:19:18] <sublim20> basically its a 'hey, wanna back up the stuff now?'
[12:20:12] <ExeciN> I would make a backup-now alias and keep the cron job only to remind the user
[12:21:10] <sublim20> that's an option.
[12:24:05] *** Quits: docmax (~docmax@dynamic-077-001-167-197.77.1.pool.telefonica.de) (Remote host closed the connection)
[12:24:22] *** Joins: N4buc0- (~N4buc0@2804:7f4:3487:cd22:a52:66c1:ba81:4436)
[12:24:39] *** Joins: furrymcgee (~devuan@cgn-89-1-208-64.nc.de)
[12:25:10] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:26:01] <azidhaka> Hi everyone, i've got the following: curl=$(curl -s "https://somesite/someapi/index.php?sid=${sid}&id=${id}&msisdn=${phone}&cyr=1&encoding=utf-8&msg=${text}") What is the best way to escape/encode the variables so i won't have problems with special symbols?
[12:26:05] *** Joins: sebastorama (~sebastora@190.83.56.68)
[12:26:34] <geirha> !urlencode
[12:26:34] <greybot> See http://mywiki.wooledge.org/BashFAQ/071 or https://gist.github.com/887e74e74877c7613920
[12:26:46] *** Quits: aliosablack (~chomwitt@2a02:587:dc0f:7c00:12c3:7bff:fe6d:d374) (Ping timeout: 245 seconds)
[12:26:48] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:27:17] <azidhaka> geirha: thanks
[12:28:09] <sublim20> someone should make a flow chart for questions on bash.   it'd just be 'question' ->  'wooledge FAQ'  end of flow chart.
[12:29:55] *** Joins: TomyWork (~TomyLobo@p200300e80f06af008daef0ef2594c262.dip0.t-ipconnect.de)
[12:30:25] *** Quits: dermoth (~dermoth@dsl-10-130-67.b2b2c.ca) (Ping timeout: 256 seconds)
[12:31:02] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[12:32:15] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[12:33:40] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:33:44] *** Quits: iomari891 (~iomari891@105.112.138.38) (Client Quit)
[12:33:49] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[12:35:58] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:36:02] *** Joins: chomwitt (~chomwitt@2a02:587:dc0f:7c00:12c3:7bff:fe6d:d374)
[12:36:41] *** Joins: sebastorama (~sebastora@190.83.56.68)
[12:36:53] *** Quits: IRCnet (~luca1@31.190.73.193) (Quit: Leaving)
[12:38:57] *** Joins: jetchisel (jetchisel@user/jetchisel)
[12:39:59] *** Quits: N4buc0- (~N4buc0@2804:7f4:3487:cd22:a52:66c1:ba81:4436) (Remote host closed the connection)
[12:40:22] *** Joins: N4buc0- (~N4buc0@2804:7f4:3487:cd22:a52:66c1:ba81:4436)
[12:41:36] *** Joins: nik (~nik777@vpn-users-dip-pool165.dip.cf.ac.uk)
[12:42:55] *** Joins: dermoth (~dermoth@dsl-153-127.b2b2c.ca)
[12:44:51] <furrymcgee> curl deserves its own faq
[12:46:23] *** Joins: N4buc0 (~N4buc0@179.186.178.29.dynamic.adsl.gvt.net.br)
[12:46:29] *** Quits: N4buc0- (~N4buc0@2804:7f4:3487:cd22:a52:66c1:ba81:4436) (Remote host closed the connection)
[12:46:35] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:46:35] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 264 seconds)
[12:47:16] *** Joins: sebastorama (~sebastora@190.83.56.68)
[12:47:32] *** Quits: roadie (~user@2a02:8108:ec0:1427:88f6:1e31:ecdb:d3ad) (Ping timeout: 240 seconds)
[12:47:41] *** Joins: stemid (~nocturnal@i-lands.anark.ist)
[12:48:02] *** Joins: vysn (~vysn@user/vysn)
[12:48:31] <stemid> is it possible to use {function;} syntax as a replacement for (subshell) when redirecting like while read -ra line; do echo "${line[1]}"; done < <(subshell)?
[12:48:43] *** Joins: IRCnet (~luca1@31.190.73.193)
[12:48:56] <Soliton> !<(
[12:48:56] <greybot> Process Substitution: <(command) or >(command) is replaced by a FIFO or /dev/fd/* entry. Basically shorthand for setting up a named pipe. See <http://mywiki.wooledge.org/ProcessSubstitution>. Example: diff -u <(sort file1) <(sort file2)
[12:49:04] *** Joins: arinov (~arinov@178.240.135.64)
[12:49:15] *** Joins: ekathva (~ekathva@93-90-58-246.welcomnet.fi)
[12:49:17] <Soliton> you can't make up your own syntax unless you patch bash accordingly.
[12:49:37] <Soliton> what is the goal anyway?
[12:50:00] <Soliton> you can do <(func) just fine.
[12:50:20] <stemid> nothing I just learned about serializing commands with {function; syntax;} recently and thought I could replace subshells with it. before I would often do $(subshell) | command; but I can replace that with { this; } | command instead. so I was hoping for more use.
[12:50:50] <Soliton> it's a subshell either way.
[12:51:08] <geirha> only one part of a pipeline can run in the main shell; subshells are needed to run things in parallel
[12:51:12] *** Joins: docmax (~docmax@dynamic-077-001-167-197.77.1.pool.telefonica.de)
[12:56:27] *** Quits: N4buc0 (~N4buc0@179.186.178.29.dynamic.adsl.gvt.net.br) (Remote host closed the connection)
[12:57:11] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:57:54] *** Joins: sebastorama (~sebastora@190.83.56.68)
[12:57:55] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Ping timeout: 250 seconds)
[13:00:03] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[13:00:36] *** Joins: iomari891 (~iomari891@105.112.138.38)
[13:01:10] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[13:01:21] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[13:02:04] *** Quits: iomari891 (~iomari891@105.112.138.38) (Client Quit)
[13:03:54] *** ChanServ sets mode: +o geirha
[13:04:00] *** geirha sets mode: +b-o sebas*!*sebastora@*$##fix_your_connection geirha
[13:04:57] *** Joins: roadie (~user@ip5f5be062.dynamic.kabel-deutschland.de)
[13:07:48] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:08:26] *** Quits: IRCnet (~luca1@31.190.73.193) (Quit: Leaving)
[13:09:32] *** Quits: roadie (~user@ip5f5be062.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[13:10:22] *** Joins: Nact (~l@host-85-27-120-251.dynamic.voo.be)
[13:12:33] *** Quits: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 276 seconds)
[13:14:01] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:14:07] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[13:14:10] *** Joins: luca1_ (~luca1@31.190.73.193)
[13:15:20] *** Joins: sublim20 (~sublim20@user/sublim20)
[13:15:44] *** Joins: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[13:16:09] *** Quits: luca1_ (~luca1@31.190.73.193) (Client Quit)
[13:16:23] *** Joins: IRCnet (~luca1@31.190.73.193)
[13:16:25] *** Quits: totenkoph (~scythe@user/totenkoph) (Remote host closed the connection)
[13:17:07] *** Joins: totenkoph (~scythe@user/totenkoph)
[13:19:45] *** Quits: totenkoph (~scythe@user/totenkoph) (Remote host closed the connection)
[13:20:29] *** Joins: totenkoph (~scythe@user/totenkoph)
[13:22:31] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[13:24:47] *** Quits: chomwitt (~chomwitt@2a02:587:dc0f:7c00:12c3:7bff:fe6d:d374) (Ping timeout: 246 seconds)
[13:25:01] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[13:25:13] *** Joins: chomwitt (~chomwitt@2a02:587:dc0f:7c00:12c3:7bff:fe6d:d374)
[13:28:47] *** Quits: rcernin_ (~rcernin@124.190.139.235) (Ping timeout: 256 seconds)
[13:31:29] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Remote host closed the connection)
[13:31:56] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[13:32:26] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[13:32:35] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[13:32:50] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[13:33:25] *** Quits: IRCnet (~luca1@31.190.73.193) (Quit: Leaving)
[13:33:42] *** Joins: IRCnet (~luca1@31.190.73.193)
[13:35:12] *** Joins: roadie (~user@ip5f5be062.dynamic.kabel-deutschland.de)
[13:35:13] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[13:36:12] *** Quits: alzgh (alzgh@user/alzgh) (Ping timeout: 256 seconds)
[13:37:47] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[13:41:28] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[13:43:35] <rendar> `exec MY_ENV_VAR= my_exec` is syntactically the same of `exec MY_ENV_VAR="" my_exec` right?
[13:43:41] *** Joins: drogas (~drogas@jump2.jet.uk)
[13:46:04] <geirha> they'll both result in the same "not found" error, yes
[13:46:21] *** Joins: iomari891 (~iomari891@105.112.138.38)
[13:47:09] <geirha> MY_ENV_VAR= exec my_exec   and   MY_ENV_VAR="" exec my_exec   are also identical
[13:47:17] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[13:47:28] *** Joins: esselfe (~steph@user/esselfe)
[13:48:34] *** Joins: han-solo (~hanish@user/han-solo)
[13:48:40] *** Joins: sublim20 (~sublim20@user/sublim20)
[13:49:35] *** Quits: Bhavuk (~BTaneja@2401:4900:1c16:54d6:dd29:831e:b1ea:855a) (Ping timeout: 264 seconds)
[13:50:29] *** Joins: ogis (~Android@240d:1c:3d:9500:7949:1120:2a0e:9186)
[13:51:43] *** Quits: nik (~nik777@vpn-users-dip-pool165.dip.cf.ac.uk) (Quit: Leaving)
[13:54:43] *** Joins: legola (~legola@46.235.101.181)
[13:56:18] *** Joins: cousteau (~cousteau@user/cousteau)
[13:57:08] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[13:57:59] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Remote host closed the connection)
[13:58:11] *** Joins: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net)
[13:58:24] <rendar> geirha, thanks
[13:58:27] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[13:58:36] *** Joins: cactushead (~cactus_he@159.196.56.11)
[13:59:27] <rendar> geirha, point is, if i have env+=( MY_ENV_VAR="" ) and i run `"${MY_ENV_VAR[@]}"  exec my_exec` bash says `MY_ENV_VAR command not found`
[13:59:30] <rendar> how can i fix this?
[14:00:08] <pj> rendar: by not making up syntax.
[14:00:14] <Soliton> use env
[14:00:19] *** Quits: zro (~zro@user/zro) (Ping timeout: 250 seconds)
[14:00:24] <rendar> Soliton, how?
[14:00:29] <Soliton> man env
[14:01:04] <rendar> Soliton, ok i think your solution is `env "${MY_ENV_VAR[@]}"  exec my_exec` then!
[14:01:06] <geirha> after "${MY_ENV_VAR[@]}" is expanded it is too late; it has already parsed the variable assignments
[14:01:11] *** Quits: arinov (~arinov@178.240.135.64) (Ping timeout: 246 seconds)
[14:01:19] <Soliton> env has not clue of exec...
[14:01:21] <cousteau> Do y'all usually quote the entire thing when concatenating variables with text, or just the variable?    source "$project/scripts/setup.sh"   vs   source "$project"/scripts/setup.sh
[14:01:24] <geirha> no, exec env "${array[@]}" my_exec
[14:01:34] <rendar> geirha, oh, i see
[14:01:56] <cactushead> I do the latter, source "$project"/path/to/thing
[14:02:09] *** Quits: legola (~legola@46.235.101.181) (Remote host closed the connection)
[14:02:12] *** Joins: zro (~zro@user/zro)
[14:03:07] <cousteau> Normally I wouldn't use quotes for that if I had already cd "$project", so it feels awkward that the editor highlights the path components differently if I'm adding the $project or not, so I'm kinda biased for the latter too
[14:03:16] <pj> rendar: if you want to exec a program and put an environment variable into it's environment you simply need to export the variable first.
[14:03:30] <cousteau> But maybe I'm crazy
[14:03:47] <pj> export foo=bar; exec myprogram
[14:03:54] <rendar> pj, but i don't want to export it, i want to just set it for that particular command line exection
[14:04:04] <rendar> hence i have `MY_VAR="1" exec myprogram`
[14:04:04] <pj> rendar: do you understand what exec does?
[14:04:08] <cousteau> (I mean, I am, but that's not the point)
[14:04:10] <rendar> pj, of course
[14:04:50] <pj> then you should understand that bash won't exist after you do the exec so it doesn't matter if the var is exported in that copy of bash
[14:05:01] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Read error: Connection reset by peer)
[14:05:09] <pj> and the program you're running it under wants the var in it's environment, so that's how you do it.
[14:05:17] *** Joins: mihaiadrian (~Thunderbi@82.76.223.244)
[14:05:21] <rendar> pj, well, that's because i'm using `env`
[14:05:23] <cousteau> rendar: you probably want   MYVAR=1 myprogram
[14:05:48] <cousteau> Or   env MYVAR=1 myprogram   (same thing)
[14:05:56] <rendar> cousteau, indeed, that's just what i said
[14:06:07] <geirha> so you don't actually want exec?
[14:06:28] <cousteau> No, you said   MYVAR=1 exec myprogram
[14:06:33] <rendar> geirha,  i want env MYVAR=1 exec myprogram, or MYVAR=1 myprogram
[14:06:42] <geirha> those two are very different
[14:06:43] <pj> !xy
[14:06:43] <greybot> http://mywiki.wooledge.org/XyProblem -- "I want to do X, but I'm asking how to do Y..."
[14:06:45] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Ping timeout: 256 seconds)
[14:06:58] <Soliton> # type exec
[14:06:58] <shbot> Soliton: exec is a shell builtin
[14:07:00] <rendar> sorry, typo
[14:07:16] <rendar> i want env MYVAR=1 exec myprogram, and (in other circumstances) MYVAR=1 exec myprogram
[14:07:18] <Soliton> exec env ...
[14:07:32] <rendar> exec env, yes sorry again
[14:07:33] <pj> I honestly think you don't understand what exec actually does here.
[14:07:35] <rendar> i meant exec env
[14:07:44] <cousteau> Soliton: just to confirm, throwing exec to env is kinda pointless, right?
[14:08:00] <Soliton> it won't work.
[14:08:06] <Soliton> env is not a shell.
[14:08:07] <cousteau> I see
[14:08:08] <rendar> pj, i understand that exec calls the execve* functions which totally replaces the process virtual memory, after fork(), yes
[14:08:31] <emanuele6> where is the fork?
[14:08:37] <rendar> emanuele6, huh?
[14:08:44] <pj> okay, so if you want to put an environment variable in that processes environment then you simply export it first.
[14:08:48] <rendar> emanuele6, every time bash calls a command it calls fork()
[14:08:50] *** Joins: thiras (~thiras@user/thiras)
[14:08:52] <rendar> to create a new process
[14:08:53] <cousteau> I don't think it forks.  It repurposes the shell.
[14:09:09] <pj> it doesn't fork, it just exec's
[14:09:10] <emanuele6> exec is not a command
[14:09:13] <geirha> exec expcliticly does not fork
[14:09:18] <emanuele6> if you exec, you don't fork
[14:09:26] <Soliton> that's the point of exec.
[14:09:32] <rendar> yes, exactly
[14:09:40] <emanuele6> ah, yes, exactly, of course
[14:09:45] <cousteau> exec replaces the current shell with another executable
[14:09:52] <rendar> i meant, *normally* the shell fork()+exec()
[14:10:00] <rendar> in the case of exec, it skips the fork()
[14:10:04] <cousteau> Hence, it doesn't create a new process, it just repurposes the current process
[14:10:06] <Soliton> anyway, your issue is that the assignment syntax does not work if you get it with some expansion.
[14:10:09] <pj> if you do "exec env ..." then you are literally replacing the current shell with the env program.
[14:10:10] <cousteau> Hence, it doesn't fork
[14:10:27] <Soliton> so you need to either use env so it does work. or just export first since who cares anyway.
[14:10:31] <rendar> emanuele6, typical of italians
[14:10:42] <rendar> Soliton, ok
[14:11:30] <rendar> pj, yes, and since i'm giving to the env program the variables by command line i don't need to export them
[14:11:43] <rendar> because then, the env program will call fork()+exec() to run the other program
[14:11:47] <rendar> that's what i meant before
[14:12:09] <Soliton> surely env just calls exec.
[14:12:18] <pj> rendar: if you're doing that then why use exec at all?  without exec bash will just call fork+exec to run the program.
[14:12:38] *** Quits: sarantos (~sarantos@2a02:587:3431:f3d7:7990:f181:6ff:9756) (Quit: Ping timeout (120 seconds))
[14:12:40] <emanuele6> yes, env doesn't fork()+exec(), it just execs
[14:12:44] <rendar> pj, well, i don't want the original bash process
[14:12:57] <cousteau> Maybe they do want to replace the shell and have it die there
[14:13:05] <rendar> cousteau, exactly
[14:13:35] <pj> at any rate, so you exec env, and that executes the target program, I'm simply saying that you can skip the step of executing env by simply exporting the var first.
[14:13:36] <emanuele6> but there is no fork in neither  exec cmd  nor  exec env cmd
[14:13:38] <rendar> i just want to replace the shell with some env variables, which i don't *need* to export, if i use `env`, that's all
[14:13:41] <rendar> is not that hard to grasp
[14:13:48] <rendar> emanuele6, ok ok
[14:13:53] <cousteau> I guess the point of pj was, why not just use export instead of env
[14:13:56] <emanuele6> env(1) simply modifies the environment and execs
[14:14:02] <cousteau> (no idea what's the advantage)
[14:14:07] *** Quits: tobybl (~tobybl@213.31.135.91) (Ping timeout: 256 seconds)
[14:14:23] <rendar> cousteau, because i have *multiple* env vars into an array
[14:14:38] <Soliton> presumably barely any difference in practice.
[14:14:39] <rendar> if you have an array of "${my_env_vars[@]}" how do you export all of them?
[14:14:57] <rendar> you must do a loop, and export them one by one, instead with `env` it's immediate
[14:15:04] <Soliton> export and env use the same syntax.
[14:15:07] <pj> export "${my_env_vars[@]}" # would presumably work
[14:15:19] <rendar> ok then
[14:15:33] *** Quits: mihaiadrian (~Thunderbi@82.76.223.244) (Read error: Connection reset by peer)
[14:15:35] <cousteau> export MYVAR=1; exec myprogram    is pretty much the same as    exec env MYVAR=1 myprogram
[14:15:49] <rendar> if `export "${my_env_vars[@]}"` this syntax works, then there is no point to use `env`
[14:16:09] <Soliton> if env "${my_env_vars[@]}" works then export will work just the same.
[14:16:11] <rendar> i thought export only worked with 1 var at once
[14:16:20] <Soliton> # help export
[14:16:21] <shbot> Soliton: export: export [-fn] [name[=value] ...] or export -p -- http://ix.io/aPV
[14:16:21] <cousteau> Except that the latter needlessly calls an additional command, env
[14:16:28] <rendar> ok, now i see
[14:16:39] *** Joins: tobybl (~tobybl@213.31.134.235)
[14:16:48] <rendar> cousteau, while instead 'export' is a bash built-in?
[14:16:55] <pj> rendar: yes
[14:17:07] <rendar> ok, then that's the best solution, thanks all
[14:17:36] <cousteau> Indeed, if it were a subshell it wouldn't work
[14:18:03] <rendar> cousteau, what you mean? calling a new bash?
[14:18:05] *** Quits: sgn (~sgn@user/sgn) (Ping timeout: 256 seconds)
[14:18:15] <cousteau> It'd export variables into a new process and then destroy the process and leave your env exactly as it was before
[14:18:36] <cousteau> If it were a command
[14:18:46] <rendar> cousteau, isn't that accomplished by: `export "${myvars[@]}"; exec my_prog` ?
[14:19:13] <cousteau> I mean, that's why export is NOT a command, but a builtin
[14:19:39] <rendar> cousteau, but running `export "${myvars[@]}"; exec my_prog` should leave the env like before calling export, right?
[14:19:44] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 246 seconds)
[14:19:46] <rendar> since there is exec..
[14:20:38] <pj> exec from a subshell replaces the subshell, not the parent process.
[14:20:51] <pj> this doesn't change with export vs env
[14:20:54] <cousteau> There'll be no env after you call exec, because once my_prog is finished the process will terminate
[14:21:31] *** Joins: earnestly (~earnest@user/earnestly)
[14:21:41] <rendar> cousteau, right, so all the variables i have exported won't be left on my shell *from which* i launch that script
[14:21:43] <pj> well, technically the environment is inherited by the new process.  Once it terminates any changes to the environment made in the subshell will be lost, which is exactly what *always* happens when you exit a subshell.
[14:21:47] <cousteau> exec my_prog; echo bye    will never reach the echo
[14:22:18] <rendar> cousteau, yes exactly, hence i'm saying that variables won't be exported
[14:22:23] <cousteau> rendar: wait, what's the script and what's the program?
[14:23:10] *** Quits: mei3 (~mei@user/mei) (Read error: Connection reset by peer)
[14:23:25] <cousteau> If you have a bash script that does ``export x=1`` and run it from a shell like ``./myscript``, it won't export $x to the calling shell
[14:23:36] <pj> # (export foo=bar; exec bash -c 'declare -p foo'); declare -p foo
[14:23:37] <shbot> pj: declare -x foo="bar"
[14:23:37] <shbot> pj: bash: declare: foo: not found
[14:23:47] <pj> # export foo=bar; exec bash -c 'declare -p foo'; declare -p foo
[14:23:48] <shbot> pj: declare -x foo="bar"
[14:23:48] <shbot> pj: (shell exited with 0)
[14:24:05] <pj> # export foo=bar; (exec bash -c 'declare -p foo'); declare -p foo
[14:24:05] <shbot> pj: declare -x foo="bar"
[14:24:06] <shbot> pj: declare -x foo="bar"
[14:24:48] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[14:25:08] *** Joins: ExeciN (~ExeciN@user/nicexe)
[14:25:08] <cousteau> If you call it using ``source myscript`` then it will export the variables in the shell (source runs the commands in the shell itself), but then the exec would kill your shell
[14:25:11] *** Joins: Trieste (T@user/pilgrim)
[14:26:00] *** Quits: mongy (~mongy@user/mongy) (Quit: WeeChat 3.3)
[14:26:07] <pj> cousteau: while I agree with what you're saying, I think you may be over-complicating it for rendar.
[14:26:39] <cousteau> Maybe, sorry
[14:26:47] <rendar> no problem
[14:27:10] <cousteau> I'm just not sure what rendar is doing, so I'm not sure which is the correct answer
[14:28:02] <rendar> i just want 1) launch a program with some env var 2) i don't want bash process to be here 3) i don't want those env vars to be set in the parent bash when i manually execute the program, i want them temporarly set
[14:28:04] <pj> rendar: it boils down to this, if you exec inside a subshell then you're not replacing bash, you're just replacing the subshell.  Everything about subshells still applies, though, (changes made in one are lost when the subshell exits).
[14:28:10] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.2)
[14:28:19] <rendar> yes
[14:28:24] <pj> if you're not in a subshell then you don't need to worry about it.
[14:28:39] <rendar> i may be both in a subshell or not
[14:28:41] <rendar> it depeds
[14:29:27] <pj> the environment changes you make with export or any other way will be lost as soon as the exec completes, and until then will only be retained in the new program you're running with exec.
[14:29:32] <cousteau> (3) is guaranteed by subshells
[14:29:35] <pj> they will not affect the parent shell.
[14:30:23] <cousteau> `export` is not some sort of system-wide thing; it only affects the current process and all the processes it calls, but not the parent one
[14:30:38] <pj> (3) is guaranteed regardless, the only way they would be retained is if you explicitly exported the variables and *then* launched a subshell and ran exec inside the subshell.
[14:30:58] <pj> and I really don't think you're doing that.
[14:32:45] *** Quits: AsenMx (~AsenMx@user/asenmx) (Remote host closed the connection)
[14:33:09] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.3)
[14:33:10] *** Joins: AsenMx (~AsenMx@user/asenmx)
[14:34:32] *** Joins: mongy (~mongy@user/mongy)
[14:36:13] <cousteau> rendar: just to clarify.  You're writing a bash script that ultimately calls my_prog, and then executing that script from a bash command line (or another program) as ./my_script, correct?
[14:36:20] *** Joins: sgn (~sgn@user/sgn)
[14:36:56] <hentai> Can someone remind me as to how I append something to each line in sed?
[14:36:59] *** Joins: rcernin_ (~rcernin@2001:8003:6803:db00:c12f:14b9:62d8:87a4)
[14:37:21] <edk> s/$/foo/
[14:37:36] <hentai> Oh... yeah, sorry for forgetting :)
[14:37:51] <pj> okay, I'm off
[14:38:03] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[14:42:13] *** Joins: sarantos (~sarantos@2a02:587:3431:f3d7:7990:f181:6ff:9756)
[14:45:36] *** Quits: useretail (~useretail@185.132.19.151) (Remote host closed the connection)
[14:45:50] *** Joins: useretail (~useretail@185.132.19.151)
[14:51:23] *** Quits: rcernin_ (~rcernin@2001:8003:6803:db00:c12f:14b9:62d8:87a4) (Ping timeout: 264 seconds)
[14:51:45] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[14:55:21] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 250 seconds)
[14:56:07] *** Quits: sarantos (~sarantos@2a02:587:3431:f3d7:7990:f181:6ff:9756) (Quit: Client closed)
[14:56:16] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[14:58:26] *** Joins: sarantos (~sarantos@2a02:587:3431:f3d7:7990:f181:6ff:9756)
[15:00:40] *** Quits: rookie101 (~rookie@207.154.204.166) (Quit: WeeChat 1.9.1)
[15:07:35] *** Quits: chomwitt (~chomwitt@2a02:587:dc0f:7c00:12c3:7bff:fe6d:d374) (Ping timeout: 264 seconds)
[15:08:50] *** Joins: chomwitt (~chomwitt@2a02:587:dc0f:7c00:12c3:7bff:fe6d:d374)
[15:10:11] *** Joins: iomari891 (~iomari891@105.112.138.38)
[15:13:55] *** Joins: kurahaupo (~kurahaupo@123-243-221-134.tpgi.com.au)
[15:14:20] *** Joins: nyex (~Thunderbi@177.84.107.30)
[15:21:46] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 245 seconds)
[15:26:39] *** Quits: OlCe (~user@lfbn-nic-1-526-60.w90-118.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[15:27:02] *** Joins: pycurious (~Adium@user/pycurious)
[15:27:02] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[15:27:09] *** Quits: sarantos (~sarantos@2a02:587:3431:f3d7:7990:f181:6ff:9756) (Quit: Client closed)
[15:27:24] *** Joins: pycurious (~Adium@user/pycurious)
[15:27:27] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[15:27:51] *** Quits: roadie (~user@ip5f5be062.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[15:28:02] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[15:30:07] *** Joins: bunny (~bunny@user/bunny)
[15:32:31] *** Quits: zro (~zro@user/zro) (Ping timeout: 268 seconds)
[15:34:36] *** Joins: pj (~pj@ghettoforge/pj)
[15:35:12] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[15:35:38] *** Quits: geonicz (~geonicz@86.57.152.167) (Remote host closed the connection)
[15:35:42] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[15:39:57] *** Quits: Ylli[m] (~yllimatri@2001:470:69fc:105::dea8) (Quit: You have been kicked for being idle)
[15:40:01] <rendar> cousteau, yes right
[15:40:07] <rendar> (i was afk sorry)
[15:40:29] <rendar> cousteau, but it may happen that instead of ./my_script that my_script could be a part of a crontab or something
[15:40:34] *** Quits: nicoty (~nicoty@user/nicoty) (Quit: Bridge terminating on SIGTERM)
[15:40:34] *** Quits: hussam (~hussam@user/hussam) (Quit: Bridge terminating on SIGTERM)
[15:40:34] *** Quits: kuhilas (~kuhilas@2001:470:69fc:105::3040) (Quit: Bridge terminating on SIGTERM)
[15:40:35] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (Quit: Bridge terminating on SIGTERM)
[15:40:35] *** Quits: jinsun_ (~jinsun@user/jinsun) (Quit: Bridge terminating on SIGTERM)
[15:40:35] *** Quits: freshgum[m] (~freshgum_@2001:470:69fc:105::c1a5) (Quit: Bridge terminating on SIGTERM)
[15:40:35] *** Quits: mattcen (~mattcen@2001:470:69fc:105::936) (Quit: Bridge terminating on SIGTERM)
[15:40:35] *** Quits: NRK[m] (~nrkmatrix@2001:470:69fc:105::4e30) (Quit: Bridge terminating on SIGTERM)
[15:40:36] *** Quits: Huy[m] (~huyngoenv@2001:470:69fc:105::dbc7) (Quit: Bridge terminating on SIGTERM)
[15:40:36] *** Quits: aplund (~aplundmat@2001:470:69fc:105::4146) (Quit: Bridge terminating on SIGTERM)
[15:40:37] *** Quits: rolandog[m] (~rolandogm@2001:470:69fc:105::972f) (Quit: Bridge terminating on SIGTERM)
[15:40:38] *** Quits: madcloud (~kmacdev@2001:470:69fc:105::bad5) (Quit: Bridge terminating on SIGTERM)
[15:40:38] *** Quits: elemongw[m] (~elemongwk@2001:470:69fc:105::34ee) (Quit: Bridge terminating on SIGTERM)
[15:40:38] *** Quits: hackshish[m] (~hackshish@2001:470:69fc:105::1:29e6) (Quit: Bridge terminating on SIGTERM)
[15:40:39] *** Quits: mrjpaxton[m] (~mrjpaxton@user/mrjpaxtonm/x-9268659) (Quit: Bridge terminating on SIGTERM)
[15:40:39] *** Quits: ForeverNoob[m] (~foreverno@2001:470:69fc:105::8c6) (Quit: Bridge terminating on SIGTERM)
[15:40:39] *** Quits: anak0rang[m] (~M9hsmatri@2001:470:69fc:105::1:15fc) (Quit: Bridge terminating on SIGTERM)
[15:40:40] *** Quits: creme[m] (~creme@2001:470:69fc:105::31c8) (Quit: Bridge terminating on SIGTERM)
[15:40:40] *** Quits: lautre[m] (~lautreg@2001:470:69fc:105::311f) (Quit: Bridge terminating on SIGTERM)
[15:40:40] *** Quits: Bikooo2[m] (~bikooo2ma@2001:470:69fc:105::1:1962) (Quit: Bridge terminating on SIGTERM)
[15:40:40] *** Quits: Helmholtz (~leibnizma@2001:470:69fc:105::3124) (Quit: Bridge terminating on SIGTERM)
[15:40:40] *** Quits: Celmor[m] (~celmormat@2001:470:69fc:105::434) (Quit: Bridge terminating on SIGTERM)
[15:40:40] *** Quits: JulianDannenberg (~julianjuh@2001:470:69fc:105::1:27e2) (Quit: Bridge terminating on SIGTERM)
[15:40:41] *** Quits: go4godvin (~go4godvin@user/go4godvin) (Quit: Bridge terminating on SIGTERM)
[15:40:41] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Quit: Bridge terminating on SIGTERM)
[15:40:41] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Bridge terminating on SIGTERM)
[15:40:42] *** Quits: dngray[m] (~dngray@user/dngray) (Quit: Bridge terminating on SIGTERM)
[15:40:43] *** Quits: Fernando-Basso (~fernandob@2001:470:69fc:105::d1d4) (Quit: Bridge terminating on SIGTERM)
[15:40:43] *** Quits: CarlFK (~carlfk@2001:470:69fc:105::5d8) (Quit: Bridge terminating on SIGTERM)
[15:40:44] *** Quits: Celeste[m] (~sleprainb@2001:470:69fc:105::3f4a) (Quit: Bridge terminating on SIGTERM)
[15:40:45] *** Quits: dotz0cat[m] (~dotz0catm@2001:470:69fc:105::91b) (Quit: Bridge terminating on SIGTERM)
[15:40:45] *** Quits: Psi-Jack[m] (~psi-jack@user/psi-jack) (Quit: Bridge terminating on SIGTERM)
[15:40:45] *** Quits: lazypwny[m] (~lazypwnyk@2001:470:69fc:105::e81e) (Quit: Bridge terminating on SIGTERM)
[15:40:45] *** Quits: modobasico (~modobasic@2001:470:69fc:105::1:1bc) (Quit: Bridge terminating on SIGTERM)
[15:40:45] *** Quits: lkhn (~lkhn@user/lkhn) (Quit: Bridge terminating on SIGTERM)
[15:40:45] *** Quits: tamz[m] (~tamzmatri@2001:470:69fc:105::9d6d) (Quit: Bridge terminating on SIGTERM)
[15:40:46] *** Quits: icebearii[m] (~icebearii@2001:470:69fc:105::1:3135) (Quit: Bridge terminating on SIGTERM)
[15:40:46] *** Quits: MeowcatWoofWoofF (~rosefoxma@2001:470:69fc:105::c74e) (Quit: Bridge terminating on SIGTERM)
[15:40:56] *** Quits: unmanbearpig (~unmanbear@user/unmanbearpig) (Ping timeout: 245 seconds)
[15:42:31] *** Joins: sarantos (~sarantos@2a02:587:3431:f3d7:7990:f181:6ff:9756)
[15:42:57] *** Joins: unmanbearpig (~unmanbear@user/unmanbearpig)
[15:43:09] <cousteau> Hm, well I've never learned how crontab works, but if that were the case (and exporting vars in crontab were an issue) I would advise you to call the script rather than sourcing/embedding it
[15:43:36] <rendar> i said crontab for saying just some service that may run it not as a command line
[15:43:50] <cousteau> Or have two scripts, one you run normally and one you inject into crontab (which calls the normal one)
[15:44:11] <cousteau> But I would have imagined that that sort of thing calls scripts rather than sourcing them
[15:44:33] <rendar> cousteau, btw my final solution to this is: my_script:   `export "${my_vars[@]}"; exec my_prog` this is what i want
[15:44:50] <rendar> then ./my_script <- and in the bash i shouldn't have those env var set
[15:44:56] <cousteau> Ah cool :)
[15:45:23] <cousteau> Yeah that's right, the outer bash won't see the vars you set in the bash script, exported or not
[15:45:38] <cousteau> That's why I was asking how you were calling this
[15:45:55] <rendar> my doubt about `export` were about 1) if it could export *multiple* variables as stated before and 2) if variables exported could 'pollute' my current bash env from where i call ./my_script
[15:46:30] *** Joins: roadie (~user@2a02:8108:ec0:1427:ed35:64d0:f3bb:2e25)
[15:47:17] <rendar> but it seems that if i call export from my_script, and i do ./my_script, the env doesn't get polluted, either if i use exec or not
[15:47:50] *** Joins: pa_ (~smuxi@86-95-132-61.fixed.kpn.net)
[15:48:03] <rendar> is that normal that calling `export MY="11"` from my_script and if i do `./my_script; echo $MY` gives me a blank line
[15:49:30] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[15:53:41] *** Quits: Strom (strom@fedora/strom) ()
[15:55:34] <cousteau> rendar: well if it couldn't export multiple vars at once, you could still have used a for loop, like    for exp in "${vars[@]}"; do export "$exp"; done
[15:55:47] *** Joins: Strom (strom@fedora/strom)
[15:56:04] <cousteau> re: (2), well, now you know it can't :)
[15:56:10] <gnoo> !export > rendar
[15:56:10] <greybot> rendar: The environment comprises the subset of variables that are exported, either permanently by the "export" statement or temporarily by prefix assignment. All variables are copied to subshells, but only exported variables are received by other programs; that is the ONLY effect of "export". It's intentionally not possible to modify variables in another process. http://mywiki.wooledge.org/Environment
[15:56:10] *** Joins: OlCe` (~user@lfbn-nic-1-564-52.w90-118.abo.wanadoo.fr)
[15:56:26] <furrymcgee> yes, you may write to stdout or other fd from subshells
[15:56:51] *** Joins: creme[m] (~creme@2001:470:69fc:105::31c8)
[15:56:55] <frojnd> Hi there. I have a problem defining array inside jq loop: jq -j '.foo[].pkgs[] |@sh"pkg=\(.pkg) foo=\(.foo) per=( \(.per) )\u0000"' "$file" | while IFS= read -rd '' entry; do eval "$entry"; for i in "${per[@]}"; do printf 'value: %s\n' "$i"; done ; done where $file looks like this: https://termbin.com/tr8f
[15:57:48] <frojnd> I mean it works in bash shell but I am testing in mksh and it doesn't like the per=( \(.per) )\u0000 part for some reason, it says: syntax error: unexpected '('
[15:57:58] *** Joins: lkhn (~lkhn@user/lkhn)
[15:57:58] *** Joins: kuhilas (~kuhilas@2001:470:69fc:105::3040)
[15:57:58] *** Joins: modobasico (~modobasic@2001:470:69fc:105::1:1bc)
[15:57:59] *** Joins: nicoty (~nicoty@user/nicoty)
[15:57:59] *** Joins: elemongw[m] (~elemongwk@2001:470:69fc:105::34ee)
[15:57:59] *** Joins: Helmholtz (~leibnizma@2001:470:69fc:105::3124)
[15:58:04] <cousteau> rendar: that is expected.  The subshell that is running my_script has an independent environment from the shell calling the script.
[15:58:10] *** Joins: rolandog[m] (~rolandogm@2001:470:69fc:105::972f)
[15:58:22] *** Joins: Ylli[m] (~yllimatri@2001:470:69fc:105::dea8)
[15:58:22] *** Joins: mrjpaxton[m] (~mrjpaxton@user/mrjpaxtonm/x-9268659)
[15:58:34] *** Joins: NRK[m] (~nrkmatrix@2001:470:69fc:105::4e30)
[15:58:48] *** Joins: madcloud (~kmacdev@2001:470:69fc:105::bad5)
[15:58:49] *** Joins: CarlFK (~carlfk@2001:470:69fc:105::5d8)
[15:58:56] <cousteau> When you export something, the variable is put in the environment of the shell that exported, and when you run a program, a COPY of the environment is passed, including all exported variables.
[15:58:58] *** Joins: pycurious (~Adium@user/pycurious)
[15:59:02] *** Joins: icebearii[m] (~icebearii@2001:470:69fc:105::1:3135)
[15:59:14] *** Joins: lautre[m] (~lautreg@2001:470:69fc:105::311f)
[15:59:14] *** Joins: MeowcatWoofWoofF (~rosefoxma@2001:470:69fc:105::c74e)
[15:59:15] *** Joins: Fernando-Basso (~fernandob@2001:470:69fc:105::d1d4)
[15:59:15] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[15:59:15] *** Joins: Celmor[m] (~celmormat@2001:470:69fc:105::434)
[15:59:27] *** Joins: Celeste[m] (~sleprainb@2001:470:69fc:105::3f4a)
[15:59:27] *** Joins: aplund (~aplundmat@2001:470:69fc:105::4146)
[15:59:27] *** Joins: Psi-Jack[m] (~psi-jack@user/psi-jack)
[15:59:27] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[15:59:27] *** Joins: hussam (~hussam@user/hussam)
[15:59:27] *** Joins: jinsun_ (~jinsun@user/jinsun)
[15:59:39] *** Joins: freshgum[m] (~freshgum_@2001:470:69fc:105::c1a5)
[15:59:39] *** Joins: lazypwny[m] (~lazypwnyk@2001:470:69fc:105::e81e)
[15:59:44] *** Joins: go4godvin (~go4godvin@user/go4godvin)
[15:59:44] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[15:59:44] *** Joins: ForeverNoob[m] (~foreverno@2001:470:69fc:105::8c6)
[15:59:46] <cousteau> So export causes the current program and all children to get the var set, but not the parent
[15:59:55] *** Joins: Bikooo2[m] (~bikooo2ma@2001:470:69fc:105::1:1962)
[15:59:55] *** Joins: tamz[m] (~tamzmatri@2001:470:69fc:105::9d6d)
[15:59:55] *** Joins: Huy[m] (~huyngoenv@2001:470:69fc:105::dbc7)
[15:59:55] *** Joins: hackshish[m] (~hackshish@2001:470:69fc:105::1:29e6)
[15:59:55] *** Joins: M9hs[m] (~M9hsmatri@2001:470:69fc:105::1:15fc)
[15:59:56] *** Joins: JulianDannenberg (~julianjuh@2001:470:69fc:105::1:27e2)
[15:59:57] *** Joins: enick_208 (~dngray@user/dngray)
[15:59:57] *** Joins: mattcen (~mattcen@2001:470:69fc:105::936)
[15:59:58] *** Joins: dotz0cat[m] (~dotz0catm@2001:470:69fc:105::91b)
[16:00:17] <cousteau> And I'm starting to get slightly annoyed at [m]atrix >:(
[16:01:35] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 264 seconds)
[16:01:35] *** Joins: legola (~legola@46.235.101.181)
[16:01:53] <cousteau> frojnd: var=( val1 val2 val3 ) is a bash thing, it's not standard (POSIX) shell
[16:05:56] * cousteau looks up what is mksh
[16:06:37] <cousteau> Oh, some ksh derivative.  No idea if that supports bash's arrays
[16:07:12] *** Joins: zeden (~zeden@user/zeden)
[16:07:35] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 264 seconds)
[16:08:27] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f6e3:7400:d8e7:a6fa:245:fafa)
[16:09:03] <cousteau> It seems it does :/
[16:11:14] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Ping timeout: 260 seconds)
[16:12:39] <ormaaj> Nice protocol. Most of the clients are terrible. sxcept weechat's matrix pluigin.
[16:12:39] <ormaaj> It has arrays. numeric only.
[16:12:51] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:14:01] *** Joins: pj (~pj@ghettoforge/pj)
[16:16:35] <geirha> m# arr=( foo bar ); typeset -p arr
[16:16:36] <shbot> geirha: set -A arr
[16:16:36] <shbot> geirha: typeset arr[0]=foo
[16:16:36] <shbot> geirha: typeset arr[1]=bar
[16:17:01] <geirha> so more likely frojnd is using neither bash nor mksh
[16:17:07] *** Joins: kurahaupo_ (~kurahaupo@pa49-181-130-72.pa.nsw.optusnet.com.au)
[16:18:35] <frojnd> Something in between
[16:18:49] <frojnd> It's an old android
[16:19:12] <hentai> Any good guides on integrating sqlite3 in bash?
[16:19:41] <hentai> I need to loop thru the database, and would appreciate any generic "guide" on the topic
[16:19:53] <rendar> cousteau, right
[16:20:04] *** Quits: Helmholtz (~leibnizma@2001:470:69fc:105::3124) (Quit: Client limit exceeded: 20000)
[16:20:04] *** Quits: Celmor[m] (~celmormat@2001:470:69fc:105::434) (Quit: Client limit exceeded: 20000)
[16:20:09] <geirha> frojnd: make sure you use mksh and not sh
[16:20:10] <emanuele6> ##sqlite
[16:20:11] <Soliton> there is no generic or specific integration.
[16:20:17] *** Joins: Helmholtz (~leibnizma@2001:470:69fc:105::3124)
[16:20:29] *** Quits: ForeverNoob[m] (~foreverno@2001:470:69fc:105::8c6) (Quit: Client limit exceeded: 20000)
[16:20:29] *** Quits: kurahaupo (~kurahaupo@123-243-221-134.tpgi.com.au) (Ping timeout: 256 seconds)
[16:20:30] *** Quits: CarlFK (~carlfk@2001:470:69fc:105::5d8) (Quit: Client limit exceeded: 20000)
[16:20:31] *** Joins: Celmor[m] (~celmormat@2001:470:69fc:105::434)
[16:20:31] *** Quits: aplund (~aplundmat@2001:470:69fc:105::4146) (Quit: Client limit exceeded: 20000)
[16:20:40] *** Quits: modobasico (~modobasic@2001:470:69fc:105::1:1bc) (Quit: Client limit exceeded: 20000)
[16:20:40] <geirha> as sh is busybox sh or something iirc
[16:20:45] *** Joins: aplund (~aplundmat@2001:470:69fc:105::4146)
[16:20:48] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Quit: Client limit exceeded: 20000)
[16:20:51] *** Quits: creme[m] (~creme@2001:470:69fc:105::31c8) (Quit: Client limit exceeded: 20000)
[16:20:52] *** Quits: nicoty (~nicoty@user/nicoty) (Quit: Client limit exceeded: 20000)
[16:20:53] *** Joins: ForeverNoob[m] (~foreverno@2001:470:69fc:105::8c6)
[16:20:55] *** Quits: hussam (~hussam@user/hussam) (Quit: Client limit exceeded: 20000)
[16:20:55] <cousteau> ormaaj: goddammit!  My quick test to see if this worked was (1 2 3)
[16:20:56] <rendar> let's say i want to run a script from my bash command line, and i want that script to export env variables also in the current shell i'm running, that's impossible, until i do `source <script_file>` right?
[16:21:05] <hentai> Soliton, I know, but just want to see examples and/or best practices to follow
[16:21:17] *** Joins: creme[m] (~creme@2001:470:69fc:105::31c8)
[16:21:17] *** Joins: modobasico (~modobasic@2001:470:69fc:105::1:1bc)
[16:21:19] *** Quits: Fernando-Basso (~fernandob@2001:470:69fc:105::d1d4) (Quit: Client limit exceeded: 20000)
[16:21:20] <Soliton> !graduated > hentai
[16:21:20] <greybot> hentai: Congratulations! You've graduated to needing to use a real language!
[16:21:21] *** Quits: mrjpaxton[m] (~mrjpaxton@user/mrjpaxtonm/x-9268659) (Quit: Client limit exceeded: 20000)
[16:21:23] <geirha> !faq change dir > rendar
[16:21:23] <greybot> rendar: https://mywiki.wooledge.org/BashFAQ/060 -- I'm trying to write a script that will change directory (or set a variable), but after the script finishes, I'm back where I started (or my variable isn't set)!
[16:21:26] *** Quits: Psi-Jack[m] (~psi-jack@user/psi-jack) (Quit: Client limit exceeded: 20000)
[16:21:30] *** Joins: nicoty (~nicoty@user/nicoty)
[16:21:33] *** Quits: kuhilas (~kuhilas@2001:470:69fc:105::3040) (Quit: Client limit exceeded: 20000)
[16:21:35] <hentai> Soliton, I know none :D
[16:21:38] *** Joins: mrjpaxton[m] (~mrjpaxton@user/mrjpaxtonm/x-9268659)
[16:21:42] *** Joins: CarlFK (~carlfk@2001:470:69fc:105::5d8)
[16:21:50] *** Joins: kuhilas (~kuhilas@2001:470:69fc:105::3040)
[16:21:58] *** Joins: Fernando-Basso (~fernandob@2001:470:69fc:105::d1d4)
[16:21:59] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[16:22:00] <Soliton> any scripting language with DB integration will be better than shell.
[16:22:09] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[16:22:13] *** Joins: Psi-Jack[m] (~psi-jack@user/psi-jack)
[16:22:13] *** Joins: hussam (~hussam@user/hussam)
[16:22:15] <geirha> rendar: it can also exec a new interactive bash session once it has exported everything, but then obviously you get a new shell and many won't like that
[16:22:17] <hentai> I just need to sed out some stuff out of the database, and doing it on SQL files is too brutal even for my tastes
[16:22:23] *** Quits: elemongw[m] (~elemongwk@2001:470:69fc:105::34ee) (Quit: Client limit exceeded: 20000)
[16:22:23] <cousteau> I like that there's a "graduated" factoid
[16:22:24] *** Quits: lkhn (~lkhn@user/lkhn) (Quit: Client limit exceeded: 20000)
[16:22:42] *** Joins: lkhn (~lkhn@user/lkhn)
[16:22:54] *** Joins: elemongw[m] (~elemongwk@2001:470:69fc:105::34ee)
[16:23:06] <tk> nonsense, bash is sufficient for any programming task
[16:23:15] <Soliton> !weakness
[16:23:16] <greybot> http://mywiki.wooledge.org/BashWeaknesses
[16:23:19] <gnoo> frojnd: if it's android 4.4+, you can use termux (from f-droid) to get bash or others
[16:23:19] <han-solo> if you have some python, https://docs.python.org/3/library/sqlite3.html
[16:23:24] *** Quits: go4godvin (~go4godvin@user/go4godvin) (Quit: Client limit exceeded: 20000)
[16:23:28] <Soliton> sed is turing complete let's write everything in it!
[16:23:40] *** Joins: go4godvin (~go4godvin@user/go4godvin)
[16:23:41] <cousteau> It highlights the fact that shell/bash/etc is mostly "command glue"
[16:23:51] <cousteau> Which is important to know
[16:24:08] *** Quits: rolandog[m] (~rolandogm@2001:470:69fc:105::972f) (Quit: Client limit exceeded: 20000)
[16:24:19] *** Quits: Ylli[m] (~yllimatri@2001:470:69fc:105::dea8) (Quit: You have been kicked for being idle)
[16:25:02] *** Joins: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net)
[16:25:03] <hentai> tk++
[16:25:10] *** Joins: rolandog[m] (~rolandogm@2001:470:69fc:105::972f)
[16:25:10] *** Joins: Ylli[m] (~yllimatri@2001:470:69fc:105::dea8)
[16:25:21] <hentai> Bash can glue together anything
[16:25:54] <cousteau> I think that Tcl has good sqlite3 integration, and sort of looks like "sh/bash done right" (in that the quoting hell is less of a hell)
[16:25:55] <tk> find me something you don't think it's possible to do in bash and watch as izabera proves you wrong
[16:26:07] <cousteau> tk: hahahahaha
[16:26:08] <geirha> It's odd though, when they make a command for manipulating a database, for use in a shell, that can't safely pass data from and to the database without the user having to resort to sql injection. I don't get the thought process of the people who write these commands
[16:26:09] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 256 seconds)
[16:26:21] <omegatron> hentai: put the amalgamated form of the sqlite3 source code into the bash source code, think of some commands and their syntax you want to use later and integrate it into your own private bash - not portable, yes, but maybe a good practice and as fast as the original sqlite3 program ..
[16:26:43] <hentai> omegatron, I dont need "fast", I need "eventually"
[16:26:58] <omegatron> challenge accepted ..
[16:27:02] <geirha> mh, maybe sqlite could be a nice attempt for another loadable builtin
[16:27:15] <hentai> There is a sqlite3 command you know
[16:27:22] <omegatron> you don't say
[16:27:40] <furrymcgee> they have .mode tcl in sqlite3
[16:27:48] <geirha> yes, sqlite3 is the command I'm talking about
[16:27:55] <geirha> sql-injection by default
[16:28:03] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Quit: hyskaru)
[16:28:11] <hentai> I just wanted to know if^Whow people successfully used it in bash scripts
[16:28:25] *** Quits: kurahaupo_ (~kurahaupo@pa49-181-130-72.pa.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[16:28:40] <emanuele6> yes, .mode tcl is actually tcl safe hehe
[16:29:16] <emanuele6> the sqlite command that is unnecessary in tcl, outputs in a tcl-safe format, but not in an sh-safe format
[16:30:41] *** Quits: unmanbearpig (~unmanbear@user/unmanbearpig) (Ping timeout: 256 seconds)
[16:32:11] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 264 seconds)
[16:32:18] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[16:32:23] <tk> this sounds like gcc and clang's -M options which only output a makefile specific format, except it's buggy and ambiguous, and there's no option to just output a list of dependencies '\n' or '\0' delimited
[16:32:25] *** Joins: unmanbearpig (~unmanbear@user/unmanbearpig)
[16:35:17] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[16:40:12] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[16:40:47] *** Joins: drogas (~drogas@jump2.jet.uk)
[16:42:12] *** Quits: anton (anton@user/anton) (Ping timeout: 268 seconds)
[16:44:29] *** Joins: zro (~zro@user/zro)
[16:48:56] <furrymcgee> there is also a libtclsqlite3 plugin which might be adopted by bash to read variables directly
[16:49:35] *** Quits: dsrt^ (~dsrt@h50.174.139.63.static.ip.windstream.net) (Remote host closed the connection)
[16:51:59] *** Quits: skered (~dereks@user/skered) (Ping timeout: 264 seconds)
[16:53:12] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[17:05:40] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[17:09:13] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[17:10:46] <rendar> when i launch my script, i get visualized a lot of `declare -x LC_TIME="C"`, and that's because sometimes `export` without any parameter gets called... how can i prevent this?
[17:11:02] *** Joins: jetchisel (jetchisel@user/jetchisel)
[17:11:54] *** Quits: gschanuel (~gschanuel@user/gschanuel) (Read error: Connection reset by peer)
[17:12:05] *** Joins: Bhavuk (~BTaneja@2401:4900:1c16:67ab:d9c0:3e29:4c9e:6a66)
[17:12:15] <omegatron> fix your script !?
[17:12:20] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[17:12:21] <rendar> omegatron, no
[17:13:45] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Ping timeout: 256 seconds)
[17:14:01] *** Quits: Bhavuk (~BTaneja@2401:4900:1c16:67ab:d9c0:3e29:4c9e:6a66) (Client Quit)
[17:15:23] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[17:15:42] *** Joins: henko (~henko@62-178-187-35.cable.dynamic.surfer.at)
[17:16:43] <rendar> any solution?
[17:18:47] *** Quits: maledictium (~crux@dsl-142-149.bl26.telepac.pt) (Ping timeout: 250 seconds)
[17:23:41] *** Quits: legola (~legola@46.235.101.181) (Remote host closed the connection)
[17:25:39] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 256 seconds)
[17:26:12] *** Joins: legola (~legola@46.235.101.181)
[17:26:58] *** Joins: legola_ (~legola@46.235.101.181)
[17:26:58] *** Quits: legola (~legola@46.235.101.181) (Read error: Connection reset by peer)
[17:29:01] <Soliton> so don't call export with no parameter.
[17:29:15] <phogg> rendar: I don't understand. If you don't want to have export print out like that, don't call it without parameters.
[17:29:22] <phogg> if you do, then what's the problem?
[17:29:42] <rendar> phogg, didn't want to check if the array is empty
[17:29:45] *** Joins: Trieste (~T@user/pilgrim)
[17:29:48] <rendar> but that's the only option i have, it seems
[17:29:58] <rendar> i was hoping in some -q flag or something
[17:30:00] <phogg> rendar: what has that got to do with it? Can you share the line in question?
[17:30:09] <phogg> rendar: well, you can always throw away stdout from export
[17:30:11] <phogg> but this is dumb
[17:30:26] <rendar> https://bpa.st/NH3Q
[17:30:45] *** Quits: ekathva (~ekathva@93-90-58-246.welcomnet.fi) (Remote host closed the connection)
[17:31:36] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:32:16] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[17:32:46] <Soliton> you're checking whether index 0 is empty or not.
[17:33:25] <Soliton> might coincide with the array being empty of course.
[17:33:38] *** Joins: xx (~xx@user/xx)
[17:34:07] <rendar> Soliton, what would be a more solid check?
[17:34:49] *** Joins: maledictium (~crux@176.78.142.149)
[17:36:48] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[17:37:21] <phogg> [[ -n ${py_environ[*]} ]] would be a more accurate "list will not expand to nothing" check, but I don't think that code as written could lead to export not having any args.
[17:38:00] *** Joins: lavaball (felix@31.204.155.215)
[17:38:13] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:38:24] <rendar> ok
[17:38:25] <phogg> false negatives are possible but not false positives
[17:38:41] <rendar> what about checking array size with # ?
[17:39:24] <Soliton> ((${#py_environ[@]} > 0))
[17:39:31] *** Joins: kurahaupo_ (~kurahaupo@pa49-181-130-72.pa.nsw.optusnet.com.au)
[17:40:16] *** Joins: Inline (~Inline@2a02:908:1252:7a80:6396:dd82:eabc:bcd7)
[17:40:18] <phogg> # vars=('' ''); [[ ${#vars[@]} != 0 ]] && echo vars not empty; [[ -n ${vars[*]} ]] && echo vars expands to nothing
[17:40:19] <shbot> phogg: vars not empty
[17:40:19] <shbot> phogg: vars expands to nothing
[17:40:51] <Soliton> it doesn't expand to nothing.
[17:41:08] <phogg> er, you're right. My wording is backwards
[17:41:46] <phogg> I should have used a the single empty element case
[17:41:46] *** Quits: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net) (Ping timeout: 260 seconds)
[17:41:56] <phogg> # vars=(''); [[ ${#vars[@]} != 0 ]] && echo vars not empty; [[ -n ${vars[*]} ]] && echo vars expands to nothing
[17:41:57] <shbot> phogg: vars not empty
[17:42:09] <phogg> wording still backwards but you get the idea
[17:43:00] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[17:43:23] <rendar> so what is the best solution, after all?
[17:44:22] <phogg> I am not qualified to comment on best. I would use [[ -n ${vars[*]} ]] if it were me.
[17:44:55] <phogg> it still isn't entirely correct, of course
[17:46:20] <emanuele6> ${py_environ[0]+export -- "${py_environ[@]}"}
[17:46:32] * emanuele6 hides.
[17:46:37] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Ping timeout: 256 seconds)
[17:46:58] <phogg> I like it
[17:47:47] <phogg> you would still get an error if you had '' as an entry in the list, though. I suppose you could just  2>/dev/null and not worry about it
[17:48:11] <emanuele6> why would '' be an entry?
[17:48:33] <phogg> why indeed? I am just trying to account for every possibility
[17:48:36] <Soliton> and why would you not want an error if it is?
[17:48:56] <phogg> he appears not to want messages emitted (that was the goal)
[17:49:00] <rendar> so in bash there isn't any way to check if an array is empty, cool
[17:49:13] <Soliton> ((${#py_environ[@]} > 0))
[17:49:17] <rendar> ok
[17:49:27] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[17:49:31] <phogg> you can check if it has zero length easily, but it's not easy to also check that all entries are non-empty strings
[17:49:37] <Soliton> ${#py_environ[@]} expands to the size of the array.
[17:49:40] *** OlCe` is now known as OlCe
[17:50:06] <emanuele6> an array that only contains empty strings is not empty.
[17:50:09] <Soliton> there was no requirement to magically sanity check the array content.
[17:50:39] <Soliton> non-empty entries would certainly not be enough for that anyway.
[17:51:03] <phogg> if the array contents can only be set by you it's not important, but if they could be set from user-supplied values then you have to think about it
[17:51:51] <emanuele6> then you also need to think about the format of all the other entries.
[17:52:28] <emanuele6> they must all be valid arguments for export.
[17:53:07] *** Joins: earendel (uid498179@user/earendel)
[17:53:09] <emanuele6> still, you would want an error if the input is invalid, no?
[17:53:22] <phogg> I would
[17:59:04] <earendel> lol
[17:59:50] *** Joins: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net)
[18:00:28] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[18:00:39] <earendel> hi
[18:00:48] *** Joins: zeden (~zeden@user/zeden)
[18:01:48] <emanuele6> phogg: so   ${py_environ[0]+export -- "${py_environ[@]}"}; if [[ $? != 0 ]]; then exit; fi; exec -- "$py_executable" "${py_flags[@]}"  would work
[18:02:07] <emanuele6> if you want to still allow `export VAR' at least
[18:03:23] *** Quits: kurahaupo_ (~kurahaupo@pa49-181-130-72.pa.nsw.optusnet.com.au) (Ping timeout: 264 seconds)
[18:03:46] <emanuele6> and if you don't want to allow it, you can use this trick
[18:03:52] *** Quits: kj (~kj@kj.aerisnetwork.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:04:47] <emanuele6> ${py_environ[0]+export -- "${py_environ[@]/!(*=*)}"}; if [[ $? != 0 ]]; then exit; fi; exec -- "$py_executable" "${py_flags[@]}"
[18:04:56] <emanuele6> actually, i'm not sure if that would work
[18:05:21] <emanuele6> # a=( a=b ); echo "${a[@]/!(*=*)}"
[18:05:22] <shbot> emanuele6: =b
[18:05:25] *** Joins: kj (~kj@kj.aerisnetwork.net)
[18:05:28] <emanuele6> yeah, it doesn't
[18:08:07] *** Joins: cdown_ (~cdown@163.114.131.1)
[18:09:25] <emanuele6> you can convert all the entries that contain an = to empties ( with ${a[@]/*=*} or %% or ## ), but i don't think you can do the opposite
[18:09:59] *** Quits: kj (~kj@kj.aerisnetwork.net) (Ping timeout: 264 seconds)
[18:10:59] *** Quits: cdown (~cdown@89.32.122.5) (Ping timeout: 256 seconds)
[18:11:05] *** cdown_ is now known as cdown
[18:12:18] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f6e3:7400:d8e7:a6fa:245:fafa) (Read error: Connection reset by peer)
[18:13:35] *** Joins: zer0bitz (~zer0bitz@2001:2003:f6e3:7400:d8e7:a6fa:245:fafa)
[18:15:39] *** Joins: n4dir (~user@i577BC862.versanet.de)
[18:17:51] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Read error: Connection reset by peer)
[18:18:07] *** Joins: rgrinberg (~textual@200.5.63.76)
[18:18:27] *** Joins: kurahaupo_ (~kurahaupo@pa49-181-130-72.pa.nsw.optusnet.com.au)
[18:18:30] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[18:19:03] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[18:20:48] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[18:20:52] *** Quits: kurahaupo (~kurahaupo@ppp122-115.static.internode.on.net) (Ping timeout: 268 seconds)
[18:22:12] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[18:26:19] *** Joins: kurahaupo (~kurahaupo@123-243-221-134.tpgi.com.au)
[18:26:26] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[18:28:15] *** Joins: zebrag (~chris@user/zebrag)
[18:28:51] *** Quits: kurahaupo_ (~kurahaupo@pa49-181-130-72.pa.nsw.optusnet.com.au) (Ping timeout: 245 seconds)
[18:30:18] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[18:31:18] *** Joins: seninha (~seninha@user/seninha)
[18:32:06] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[18:41:11] *** Quits: zro (~zro@user/zro) (Ping timeout: 264 seconds)
[18:42:11] *** Quits: mtk (~mtk@2601:185:200:72:44aa:53fe:886b:bee9) (Ping timeout: 245 seconds)
[18:45:42] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 260 seconds)
[18:49:27] *** Quits: cousteau (~cousteau@user/cousteau) (Quit: Quit)
[18:49:50] *** Joins: kj (~kj@beta.aerisnetwork.net)
[18:50:10] <dka_> hey
[18:50:21] <dka_> I can't ssh in my server, /bin/bash: Input/output error
[18:50:37] <dka_> any clue what the heal ? All my service are down and without ssh access I am Truly Fuckeed
[18:50:42] *** Joins: mtk (~mtk@2601:185:200:72:44aa:53fe:886b:bee9)
[18:51:17] <phy1729> Does -t help?
[18:52:46] *** Joins: causasui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[18:55:52] <dka_> No, /bin/bash: Input/output error
[18:56:33] <koollman> well. that's not good. Do you have backups ?
[18:58:03] *** Quits: sarantos (~sarantos@2a02:587:3431:f3d7:7990:f181:6ff:9756) (Quit: Client closed)
[18:59:44] <phy1729> #openssh might have more ideas
[19:00:20] *** Joins: skered (~dereks@user/skered)
[19:00:32] <koollman> the typical cause would be dead disk
[19:01:02] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[19:05:50] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[19:07:22] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[19:09:55] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (Ping timeout: 256 seconds)
[19:11:50] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Ping timeout: 260 seconds)
[19:12:00] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[19:13:41] <kurahaupo> dka_: What about if you try other commands, such as: ssh $hostname sleep 2
[19:13:54] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[19:14:13] <kurahaupo> Or scp $hostname:/bin/bash /tmp
[19:15:05] <han-solo> does the server ran out of memory ? or your home dir ? :D
[19:15:14] <llua> need the shell to work to run other commands
[19:16:02] *** Quits: henko (~henko@62-178-187-35.cable.dynamic.surfer.at) (Ping timeout: 260 seconds)
[19:16:59] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 268 seconds)
[19:17:38] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[19:18:00] *** Joins: henko (~henko@62-178-187-35.cable.dynamic.surfer.at)
[19:19:30] *** Joins: MiLeon (~MiLeon@HSI-KBW-078-042-179-074.hsi3.kabel-badenwuerttemberg.de)
[19:19:31] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[19:19:52] *** int is now known as Ox4
[19:20:16] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:20:16] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[19:20:32] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[19:20:42] *** Joins: pycurious (~Adium@user/pycurious)
[19:22:46] <wwallace> !injection
[19:22:46] <greybot> Don't pass user-supplied data in a context where it could be interpreted as code. BAD: ssh host "rm $file"; GOOD: ssh host "$(printf 'rm %q' "$file")"; see http://mywiki.wooledge.org/BashProgramming/05
[19:22:59] <wwallace> ah...
[19:23:31] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[19:24:18] *** Quits: esselfe (~steph@user/esselfe) (Quit: Going home)
[19:25:26] *** Quits: MiLeon (~MiLeon@HSI-KBW-078-042-179-074.hsi3.kabel-badenwuerttemberg.de) (Quit: Leaving)
[19:27:27] *** Joins: knstn (~knstn@ppp-94-66-57-225.home.otenet.gr)
[19:28:03] *** Quits: causasui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[19:28:39] *** Joins: WinterStar (~IceLight@user/icelight)
[19:29:49] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[19:30:43] *** Joins: benjwadams (~benjwadam@d-67-231-77-225.ct.cpe.atlanticbb.net)
[19:33:23] *** Quits: tsp (~tsp@allinaccess.com) (Quit: ZNC - http://znc.in)
[19:33:32] *** Joins: tsp (~tsp@srv1.xen.prgmr.com)
[19:33:38] *** Quits: henko (~henko@62-178-187-35.cable.dynamic.surfer.at) (Quit: WeeChat 3.3)
[19:34:37] *** Joins: l554 (~l554@user/l554)
[19:34:47] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[19:34:51] *** Joins: smhbvd^ (~smhbvd@h50.174.139.63.static.ip.windstream.net)
[19:35:10] *** Joins: MiLeon (~MiLeon@HSI-KBW-078-042-179-074.hsi3.kabel-badenwuerttemberg.de)
[19:35:40] *** Joins: arinov (~arinov@178.240.135.64)
[19:37:59] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[19:38:28] *** Joins: causasui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net)
[19:40:39] *** Joins: zro (~zro@user/zro)
[19:41:02] *** Quits: unmanbearpig (~unmanbear@user/unmanbearpig) (Ping timeout: 268 seconds)
[19:41:05] *** Joins: annomy (~annomy@103.38.199.98)
[19:41:47] *** Joins: ChmEarl (~chmearl@user/chmearl)
[19:42:28] *** Joins: unmanbearpig (~unmanbear@user/unmanbearpig)
[19:42:59] *** Quits: ogis (~Android@240d:1c:3d:9500:7949:1120:2a0e:9186) (Ping timeout: 264 seconds)
[19:45:04] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[19:45:47] *** Quits: smhbvd^ (~smhbvd@h50.174.139.63.static.ip.windstream.net) (Remote host closed the connection)
[19:47:11] *** Quits: Inline (~Inline@2a02:908:1252:7a80:6396:dd82:eabc:bcd7) (Ping timeout: 264 seconds)
[19:48:15] *** Joins: avallac_h (~avallac_h@85.223.233.166)
[19:52:36] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[19:52:44] *** Joins: guesswhat (~guesswhat@ip-89-176-154-20.net.upcbroadband.cz)
[19:53:02] *** Quits: killown (~killown@user/killown) (Ping timeout: 240 seconds)
[19:55:49] *** Quits: pa_ (~smuxi@86-95-132-61.fixed.kpn.net) (Read error: Connection reset by peer)
[19:57:19] *** Quits: Gerula (~Gerula@user/gerula) (Read error: Connection reset by peer)
[19:57:19] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:57:44] *** Joins: Gerula (~Gerula@user/gerula)
[19:58:17] *** Joins: pa (~smuxi@86-95-132-61.fixed.kpn.net)
[19:58:22] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[20:10:13] *** Joins: nctcf^ (~nctcf@h50.174.139.63.static.ip.windstream.net)
[20:10:42] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[20:11:58] *** Quits: tobybl (~tobybl@213.31.134.235) (Remote host closed the connection)
[20:13:57] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[20:14:57] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[20:15:36] *** Joins: GNUHacker (~gnu@fsf/member/GNUHacker)
[20:17:57] *** Joins: d630 (~d630@user/d630)
[20:18:56] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:a915:ec4b:44f7:de65)
[20:18:57] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:a915:ec4b:44f7:de65) (Changing host)
[20:18:57] *** Joins: skapata (~Skapata@user/skapata)
[20:21:02] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[20:21:11] *** Quits: annomy (~annomy@103.38.199.98) (Quit: WeeChat 3.3)
[20:21:42] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[20:22:41] *** Quits: obiwahn (~heini@user/obiwahn) (Quit: obiwahn)
[20:23:11] *** Quits: skered (~dereks@user/skered) (Quit: ircII EPIC5-2.1.6 -- Are we there yet?)
[20:23:36] *** Joins: iomari891 (~iomari891@105.112.138.38)
[20:25:18] *** Joins: igemnace (~ian@user/igemnace)
[20:27:29] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[20:27:56] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[20:31:48] *** Quits: kyr (~kyr@167.71.50.12) (Quit: Lost terminal)
[20:32:00] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Client Quit)
[20:32:06] *** Joins: kyr (~kyr@167.71.50.12)
[20:32:45] *** Joins: gabriele (~gabriele@user/gabriele)
[20:33:12] *** Joins: A|an (~Alan@173.216.51.200)
[20:33:22] *** Joins: lavaball (~Melissa@31.204.155.215)
[20:36:35] *** Parts: l554 (~l554@user/l554) ()
[20:37:34] *** Joins: skered (~dereks@user/skered)
[20:39:54] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[20:40:14] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[20:43:56] *** Joins: Fr0stBit (~theartist@ppp046176109117.access.hol.gr)
[20:44:10] <Fr0stBit> Hello!
[20:44:50] <Fr0stBit> How should I implement a USR1 trap to reload a running bash script by first killing all its child processes and then restarting itself?
[20:45:08] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Read error: Connection reset by peer)
[20:45:13] *** Joins: iamGavinJ (~iamGavinJ@user/iamgavinj)
[20:45:47] <Soliton> just run it in a loop and kill it when you want.
[20:47:18] <Fr0stBit> It is supposed to run a gui application
[20:48:16] *** Quits: IRCnet (~luca1@31.190.73.193) (Quit: Leaving)
[20:48:19] <Fr0stBit> I tried something in the lines of:
[20:48:21] <Fr0stBit> rld(){ trap - USR1; exec $0; }
[20:48:23] <Fr0stBit> trap rld USR1
[20:48:33] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:48:35] <Fr0stBit> but I need to kill the children somehow too
[20:50:12] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[20:50:56] <Soliton> kill 0
[20:51:00] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[20:51:32] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[20:51:58] *** Joins: rgrinberg (~textual@200.5.63.76)
[20:53:37] *** Joins: karakedi (~eAC53C340@user/karakedi)
[20:53:54] *** Joins: N4buc0 (~N4buc0@179.186.178.29.dynamic.adsl.gvt.net.br)
[20:54:28] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[20:55:14] *** Joins: magla (~gelignite@55d446ec.access.ecotel.net)
[20:56:31] *** sven_ is now known as noent
[20:57:01] *** Joins: pycurious (~Adium@user/pycurious)
[21:00:06] *** Quits: arinov (~arinov@178.240.135.64) (Ping timeout: 260 seconds)
[21:00:27] *** Quits: n4dir (~user@i577BC862.versanet.de) (Remote host closed the connection)
[21:00:43] *** Quits: roadie (~user@2a02:8108:ec0:1427:ed35:64d0:f3bb:2e25) (Remote host closed the connection)
[21:00:56] *** Joins: roadie (~user@2a02:8108:ec0:1427:ed35:64d0:f3bb:2e25)
[21:01:11] *** Quits: Fr0stBit (~theartist@ppp046176109117.access.hol.gr) (Quit: WeeChat 3.3)
[21:01:57] *** Joins: H3dn1ng (~H3dn1ng@185.213.154.230)
[21:08:11] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[21:09:18] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[21:11:47] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Ping timeout: 264 seconds)
[21:11:54] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:12:53] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Ping timeout: 256 seconds)
[21:13:31] *** Joins: John_Ivan (~John_Ivan@user/john-ivan/x-1515935)
[21:13:37] *** Quits: d630 (~d630@user/d630) (Quit: quit)
[21:16:52] *** Quits: furrymcgee (~devuan@cgn-89-1-208-64.nc.de) (Quit: leaving)
[21:20:51] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[21:21:25] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:24:02] *** Quits: MiLeon (~MiLeon@HSI-KBW-078-042-179-074.hsi3.kabel-badenwuerttemberg.de) (Quit: Leaving)
[21:24:16] *** Joins: acagastya (~acagastya@wikinews/acagastya)
[21:24:27] *** Quits: John_Ivan (~John_Ivan@user/john-ivan/x-1515935) (Remote host closed the connection)
[21:24:57] *** Quits: benjwadams (~benjwadam@d-67-231-77-225.ct.cpe.atlanticbb.net) (Quit: Client closed)
[21:27:35] <acagastya> While in /path/to/dir how do I get extract the name of the current working directory with the whole /path/to?
[21:28:05] <Soliton> "$PWD"
[21:28:20] *** Joins: kiryin (~kiryin@85-76-109-171-nat.elisa-mobile.fi)
[21:28:46] *** Joins: H3dn1ng_ (~H3dn1ng@185.213.154.238)
[21:29:34] <acagastya> Soliton no, that is giving the full path.
[21:29:40] *** Quits: H3dn1ng_ (~H3dn1ng@185.213.154.238) (Client Quit)
[21:29:49] <Soliton> so what is it you want?
[21:30:02] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 240 seconds)
[21:30:07] <acagastya> Wait, current working directory without the whole /path/to
[21:30:17] <acagastya> (Ah, I mistyped.)
[21:30:19] <Soliton> !basename
[21:30:19] <greybot> basename(1) can strip the directory and extension from a path (dir/subdir/file.ext -> file.ext or file). A parameter expansion can do it cleaner and *much* faster: "${path##*/}", "${path%.*}", at the cost of missing edge cases like path=/ or path=/path/to/dir/
[21:31:51] <acagastya> Ah, that works, thanks!
[21:32:09] *** Quits: H3dn1ng (~H3dn1ng@185.213.154.230) (Ping timeout: 256 seconds)
[21:32:44] *** pa is now known as Guest6697
[21:33:13] <lmat> # for i in hey there; do printf '%s' "${i//[e]}"; done;
[21:33:14] <shbot> lmat: hythr
[21:33:26] *** Quits: infernix (nix@spirit.infernix.net) (Quit: ZNC - http://znc.sourceforge.net)
[21:34:37] <Soliton> [e] matches the same as e.
[21:34:46] *** Joins: zoe (~zoe@fsf/member/zoe)
[21:34:54] <lmat> Hmm...I was going to complain that   [e]  "The  pattern is expanded to produce a pattern just as in pathname expansion," isn't right, but I'm having second thoughts after reading "Pattern Matching" below.
[21:35:34] <Soliton> not sure what you think is not right.
[21:36:22] *** Joins: wwalker (~wwalker@platinum.solid-constructs.com)
[21:37:07] <lmat> Soliton: I was expecting pattern to match the contents of parameter like globbing I think.
[21:37:26] <lmat> But this sort-of regex-looking [e] business isn't like globbing at all..I think :-D
[21:37:38] <Soliton> why?
[21:37:42] *** Quits: Nact (~l@host-85-27-120-251.dynamic.voo.be) (Quit: Konversation terminated!)
[21:37:49] <emanuele6> # touch aer air aar; echo a[ei]r
[21:37:50] <shbot> emanuele6: aer air
[21:37:53] <Soliton> [e] is the same in regex and globs.
[21:37:59] <lmat> yeah, somehow didn't know about that :'(
[21:38:06] <emanuele6> !glob
[21:38:06] <greybot> Globs are shell patterns that can be used for matching strings or expanding pathnames: [[ $name = Bob* ]]; rm -- *.txt; see http://mywiki.wooledge.org/glob
[21:38:19] <Soliton> just negation is different (^ vs !)
[21:39:15] *** Quits: legola_ (~legola@46.235.101.181) (Remote host closed the connection)
[21:39:39] *** Quits: roadie (~user@2a02:8108:ec0:1427:ed35:64d0:f3bb:2e25) (Ping timeout: 265 seconds)
[21:40:05] *** Quits: l4yer (~l4yer@195.181.170.210) (Ping timeout: 256 seconds)
[21:40:31] <lmat> # touch hey hay && echo h[^a]y;
[21:40:31] <shbot> lmat: hey
[21:40:35] <lmat> Soliton: When is ! used?
[21:40:51] <Soliton> when you want to write a proper glob.
[21:42:28] <emanuele6> [^a] is not portable
[21:43:56] *** Joins: roadie (~user@2a02:8108:ec0:1427:ed35:64d0:f3bb:2e25)
[21:44:22] *** Quits: af (~af@awalgarg.me) (Ping timeout: 260 seconds)
[21:45:11] *** Quits: avallac_h (~avallac_h@85.223.233.166) (Ping timeout: 256 seconds)
[21:46:00] *** Joins: H3dn1ng (~H3dn1ng@185.213.154.238)
[21:46:47] *** Joins: DaNeenjah (~jake@adsl-74-230-8-177.hsv.bellsouth.net)
[21:47:37] *** Parts: acagastya (~acagastya@wikinews/acagastya) ()
[21:47:57] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[21:49:06] *** Quits: shbot (~shbot@37.139.2.101) (Remote host closed the connection)
[21:49:30] *** Joins: shbot (~shbot@37.139.2.101)
[21:50:18] *** Joins: darkxploit (~jay@32.209.19.50)
[21:51:26] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[21:52:33] *** Joins: timj (~timj@user/timj)
[21:55:58] *** Joins: avallac_h (~avallac_h@85.223.233.166)
[21:56:50] *** Quits: chomwitt (~chomwitt@2a02:587:dc0f:7c00:12c3:7bff:fe6d:d374) (Ping timeout: 246 seconds)
[21:57:24] *** Joins: af (~af@awalgarg.me)
[21:58:53] *** Joins: chomwitt (~chomwitt@2a02:587:dc0f:7c00:12c3:7bff:fe6d:d374)
[21:58:55] <darkxploit> what am i doing wrong here: ${f:strip:${f:exec:sed:-e:s/^.*no_turbo=//:-es/.*$//:/proc/cmdline}}
[21:59:31] <Soliton> you had a stroke?
[21:59:54] <twkm> hard to say.  what do you feel is wrong?
[22:00:01] <emanuele6> what are you doing right?
[22:00:37] <gordonfish> darkxploit: It might help to simply what you're doing into a more basic example and see if you have the same problem.
[22:00:54] <gordonfish> Also, what is your input, what is the expected output, and what are you getting (error messages, et al) ?
[22:04:23] <darkxploit> sorry please ignore… not bash
[22:04:24] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:04:32] <darkxploit> im really sorry
[22:06:29] *** Camus_ is now known as Camus
[22:07:06] <Soliton> btw, s/.*$// will just remove everything.
[22:07:16] *** Quits: nctcf^ (~nctcf@h50.174.139.63.static.ip.windstream.net) (Remote host closed the connection)
[22:08:11] *** Camus is now known as Camusensei
[22:08:38] *** Joins: esselfe (~steph@user/esselfe)
[22:08:54] *** Quits: CaCode- (~CaCode@user/cacode) (Remote host closed the connection)
[22:09:56] *** Joins: CaCode- (~CaCode@user/cacode)
[22:11:55] *** Quits: CaCode- (~CaCode@user/cacode) (Remote host closed the connection)
[22:12:12] *** Joins: CaCode- (~CaCode@user/cacode)
[22:12:37] *** CaCode- is now known as CaCode
[22:14:33] *** Joins: ||arifaX (~Commodore@user/arifax/x-9857073)
[22:15:50] <||arifaX> Hi. Why does bash script in /etc/profile.d/test.bash echo $0 as -bash instead of the script name? I am a normal user, do a 'su -' then the script kicks in but $0 is '-bash' any ideas?
[22:16:39] *** Joins: iamGavinJ_ (~iamGavinJ@user/iamgavinj)
[22:16:44] <phy1729> !login
[22:16:44] <greybot> A login shell reads /etc/profile and one of ~/.bash_profile or ~/.bash_login or ~/.profile. You get a login shell by running bash with the --login (or -l) option, or by running bash with a leading - in argv[0]. The latter is the traditional way login(1) indicates that it wants a login shell.
[22:18:51] *** Quits: iamGavinJ (~iamGavinJ@user/iamgavinj) (Ping timeout: 245 seconds)
[22:19:18] <||arifaX> phy1729: I don't get it. Maybe I should explain that the script executes as it should, then it tries to delete itself by deleting $0 but instead of the script name it tries to delete '-bash' and I don't understand why. I want to create a run-once script for a pi zero unattended setup at first login of root.
[22:19:25] *** Joins: msmhbvd^ (~dsrt@h50.174.139.63.static.ip.windstream.net)
[22:20:31] *** Joins: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com)
[22:21:24] <||arifaX> Ok I hardcode the name, that works. Workarround, well.
[22:24:14] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:25:08] *** Joins: causa_sui (~causasui@192.241.228.169)
[22:26:37] *** Joins: rgrinberg (~textual@200.5.63.76)
[22:27:59] *** Quits: causasui (~causasui@c-73-191-216-12.hsd1.mi.comcast.net) (Ping timeout: 264 seconds)
[22:29:47] *** Quits: rgrinberg (~textual@200.5.63.76) (Client Quit)
[22:29:51] <Camusensei> ||arifaX: you may want to delete $1 instead? the first argument is $1
[22:32:21] <||arifaX> Camusensei: Ah since it sourced not executed that can be the case - thanks
[22:32:34] <emanuele6> !BASH_SOURCE
[22:33:07] <Camusensei> ||arifaX: it's the same whether it's sourced or executed. The first argument is always $1
[22:33:30] <emanuele6> # echo 'rm -- "$BASH_SOURCE' > file1; cp file1 file2; ls; source file2; source file1; ls
[22:33:36] <shbot> emanuele6: file1  file2
[22:33:36] <shbot> emanuele6: bash: file2: line 1: unexpected EOF while looking for matching `"'
[22:33:36] <shbot> emanuele6: etc... ( http://ix.io/3EO9 )
[22:33:39] <emanuele6> err
[22:33:45] <emanuele6> # echo 'rm -- "$BASH_SOURCE"' > file1; cp file1 file2; ls; source file2; ls; source file1; ls
[22:33:46] <shbot> emanuele6: file1  file2
[22:33:46] <shbot> emanuele6: file1
[22:34:28] <emanuele6> !$0
[22:34:28] <greybot> $0 is like argv[0] in C. It's whatever the caller decides to put there. You can't rely on it. See http://mywiki.wooledge.org/BashFAQ/028 and http://www.bash-hackers.org/wiki/doku.php/scripting/posparams#the_first_argument
[22:35:25] <emanuele6> $0 is not the file that is being run, it's just arg0. BASH_SOURCE is the file that is currently being run; either a sourced file or the main script file.
[22:35:27] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 276 seconds)
[22:36:46] <sdu> what is the way to describe "and/or" arguments in a usage string? e.g. if a command expects `cmd a` or `cmb b` or `cmd a b` etc.
[22:37:22] <geirha> list it twice   cmd a [b]    cmd b [a]
[22:37:25] *** Quits: haliucinas (~haliucina@5.20.153.21) (Remote host closed the connection)
[22:38:10] <sdu> I have 4 default arguments and that might augment so this will probably get large.. is it a mid correct way?
[22:38:19] <sdu> *is there
[22:38:28] *** Joins: docmax_ (~docmax@dynamic-077-003-058-000.77.3.pool.telefonica.de)
[22:38:28] *** Joins: n4dir (~user@i577BC862.versanet.de)
[22:39:06] <emanuele6> sdu: cmd arg [arg]...
[22:39:15] <geirha> then cmd [a] [b]  and just document that you need at least one of them
[22:39:44] <emanuele6> or use: cmd arg [arg]...   and list what are valid values of arg
[22:40:04] <sdu> thank you both :)
[22:40:46] <Elliria> This might also help: https://stackoverflow.com/questions/38067413/how-to-combine-and-and-or-condition-in-bash-script-for-if-condition
[22:41:17] *** Quits: docmax (~docmax@dynamic-077-001-167-197.77.1.pool.telefonica.de) (Ping timeout: 256 seconds)
[22:42:12] <sdu> cheers!
[22:42:44] <emanuele6> no, i don't think that link is relevant at all
[22:42:52] *** Joins: haliucinas (~haliucina@5.20.153.21)
[22:42:59] <twkm> sie is asking about documenting the usage forms, not how to code it.
[22:43:10] <Elliria> Ah, I missed that.
[22:44:06] *** Joins: aramtsamtsam (~Thunderbi@2001:861:388a:5600:1710:c3dc:c776:df35)
[22:44:10] *** Quits: aramtsamtsam (~Thunderbi@2001:861:388a:5600:1710:c3dc:c776:df35) (Client Quit)
[22:45:40] *** Quits: gabriele (~gabriele@user/gabriele) (Quit: Leaving)
[22:45:56] *** Quits: avallac_h (~avallac_h@85.223.233.166) (Ping timeout: 245 seconds)
[22:47:01] *** Joins: John_Ivan (~John_Ivan@user/john-ivan/x-1515935)
[22:47:16] *** Quits: roadie (~user@2a02:8108:ec0:1427:ed35:64d0:f3bb:2e25) (Ping timeout: 268 seconds)
[22:48:45] *** Quits: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com) (Quit: *POOF*)
[22:49:51] *** Quits: papa (~papa@user/papa) (Quit: connection reset again by peer.)
[22:51:12] *** Joins: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net)
[22:51:36] *** Quits: glider (~glider@user/glider) (Quit: ZNC 1.9.x-git-111-f2cdc3db - https://znc.in)
[22:52:12] *** Joins: roadie (~user@2a02:8108:ec0:1427:ed35:64d0:f3bb:2e25)
[22:53:11] *** Quits: anderson (~ande@user/anderson) (Quit: bye)
[22:53:11] *** Quits: eldritch (~eldritch@user/eldritch/x-9272577) (Quit: bye)
[22:56:47] *** Quits: roadie (~user@2a02:8108:ec0:1427:ed35:64d0:f3bb:2e25) (Ping timeout: 264 seconds)
[22:57:22] *** Joins: eldritch_ (~eldritch@user/eldritch/x-9272577)
[22:57:41] *** Quits: zostj (~rue@1-162-44-168.dynamic-ip.hinet.net) (Quit: WeeChat 3.3)
[22:58:27] <||arifaX> $BASH_SOURCE works perfect - thanks all
[23:01:32] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[23:01:51] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[23:02:01] *** Joins: glider (~glider@user/glider)
[23:05:09] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Ping timeout: 268 seconds)
[23:06:20] *** Joins: anderson (~ande@user/anderson)
[23:08:54] *** Quits: CaCode (~CaCode@user/cacode) (Remote host closed the connection)
[23:09:51] *** Joins: roadie (~user@2a02:8108:ec0:1427:ed35:64d0:f3bb:2e25)
[23:12:46] *** Quits: roadie (~user@2a02:8108:ec0:1427:ed35:64d0:f3bb:2e25) (Client Quit)
[23:16:19] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 265 seconds)
[23:16:54] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[23:21:21] <hentai> I want to move lines starting with tab, as well as those having a line above them a trailing tab, to the end of the previous line, what do I do?
[23:23:47] <geirha> awk '/^\t/{ line = line " " $0 } /^[^\t]/ { if (line) print line; line = $0 } END { print line }'
[23:24:12] <hentai> geirha, Thank you
[23:24:23] *** Quits: jess (~jess@libera/staff/jess) (Quit: I try to be an optimist / but my glass is always bone dry)
[23:25:03] <geirha> I didn't understand the part about trailing tab though
[23:25:40] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[23:25:54] <djph> geirha: I think he means lines that end "\t$" as well as lines that're "^\t"
[23:26:10] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 260 seconds)
[23:26:35] <hentai> Gerlo, If line ends with a tab, move the next line to the end of the original line
[23:26:36] *** Joins: arinov (~arinov@213.194.126.155)
[23:26:46] <hentai> djph, Yes
[23:26:47] *** Quits: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net) (Ping timeout: 264 seconds)
[23:27:07] <hentai> Those are 2 different conditions really :)
[23:27:44] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[23:29:05] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Client Quit)
[23:29:20] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[23:32:12] *** Joins: rgrinberg (~textual@200.5.63.76)
[23:33:05] *** Joins: heldwin (~heldwin@user/asmodee)
[23:33:54] *** Quits: ||arifaX (~Commodore@user/arifax/x-9857073) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[23:38:18] *** Joins: gordonfish[m] (~gordonfis@user/gordonfish)
[23:39:40] *** Joins: g0zart (~g0zart@gateway/vpn/pia/g0zart)
[23:40:56] *** Quits: martinus__ (~martin@95.31.201.77.rev.sfr.net) (Ping timeout: 245 seconds)
[23:42:33] <geirha> awk '/^\t/ || line ~ /\t$/{ line = line " " $0; next } /^[^\t]/ { if (line) print line; line = $0 } END { print line }'
[23:43:09] *** Quits: GNUHacker (~gnu@fsf/member/GNUHacker) (Quit: Leaving)
[23:43:30] *** Joins: AmalLight (~AmalLight@37.160.112.179)
[23:44:49] *** Quits: INeedAHandle (~INeedAHan@user/ineedahandle) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:44:52] *** Joins: GNUHacker (~foobar@fsf/member/GNUHacker)
[23:45:52] <AmalLight> hi dears . I have an original window size of 1920 x1080 i took a snapshot and I reduced it until of to get a size for 1440x630 , how I must doing for convert the 1440x630 mouse pointer coordinates to the original size ?
[23:46:06] <AmalLight> ( for remote control i meant )
[23:46:20] <AmalLight> I have to move the mouse on the server
[23:46:24] <oprypin> AmalLight, it's just math. actually a really neat piece of math to keep in mind
[23:46:34] <AmalLight> how can i do this ?
[23:46:49] <AmalLight> oprypin yes i tried
[23:46:56] *** wigums is now known as CaptBeetusMan
[23:46:56] <AmalLight> ok
[23:47:01] <oprypin> coordinate x, going from 1440 to 1920
[23:47:01] <oprypin> - that will be    x / 1440 * 1920
[23:47:06] <AmalLight> i understand the point of view
[23:47:16] <oprypin> how to do math in bash i hope you'll find, because i dont know
[23:47:29] *** Joins: TuckBrand1997 (~TuckBrand@209.87.29.242)
[23:47:35] <AmalLight> fab i made this dear 1920 / 1440
[23:47:35] <AmalLight> XD
[23:48:41] <phy1729> Not a bash question at all, but just think of it as you find the percentage is across the screen  (x/1920) and then scale that to the other screen   *1440
[23:48:52] <AmalLight> oprypin please don't tell this around you ( about this my incredible disaster on using math )
[23:49:08] <AmalLight> yes yes i understand now
[23:49:11] <AmalLight> XD
[23:49:25] <geirha> # x=20; printf '%s -> %s\n' "$x" "$(( x * 1440 / 1920 ))"
[23:49:25] <shbot> geirha: 20 -> 15
[23:49:39] *** TuckBrand1997 is now known as TuckerBrand1997
[23:49:39] <AmalLight> please forget XD
[23:49:51] <AmalLight> how are you today ?
[23:50:01] <AmalLight> XD
[23:51:11] <AmalLight> to change get this : https://www.youtube.com/watch?v=zWHsVXw7Vio
[23:52:14] *** Quits: guesswhat (~guesswhat@ip-89-176-154-20.net.upcbroadband.cz) (Quit: Client closed)
[23:52:35] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 264 seconds)
