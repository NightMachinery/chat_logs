[00:05:31] <[itchyjunk]> my uni started providing occulus quest 2 and "VR ready laptops" along with it fro mthe liberary now
[00:05:43] <[itchyjunk]> probably too late for me to get one
[00:05:45] *** Quits: jaysicks (~jaysicks@178-164-221-3.pool.digikabel.hu) (Remote host closed the connection)
[00:09:02] *** Quits: thevishy (~Nishant@2405:201:f005:c007:d93e:9746:14f0:2f69) (Read error: Connection reset by peer)
[00:09:15] <[itchyjunk]> https://cloud.google.com/blog/topics/developers-practitioners/find-anything-blazingly-fast-googles-vector-search-technology
[00:09:18] <[itchyjunk]> interesting
[00:09:50] *** Joins: thevishy (~Nishant@2405:201:f005:c007:49c7:f8b1:7727:93e)
[00:10:39] *** Quits: Tazy (~Tazmainia@192-143-25-174.ip.airmobile.co.za) (Read error: Connection reset by peer)
[00:10:41] *** Quits: Athas (athas@2a01:7c8:aaac:1cf:fd6:8489:d8da:43d) (Quit: ZNC 1.8.2 - https://znc.in)
[00:10:50] *** Joins: Athas (athas@sigkill.dk)
[00:11:12] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[00:11:38] *** Joins: npr60 (~npr60@79-74-69-242.dynamic.dsl.as9105.com)
[00:11:45] *** Quits: jasper1378 (~jasper137@bras-base-toroon0628w-grc-47-142-112-142-77.dsl.bell.ca) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[00:12:12] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[00:13:37] <dabow_ramone> hello
[00:14:13] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[00:15:03] <GeDaMo> Hi dabow_ramone :)
[00:17:52] *** Quits: absc (~absc@dynamic-adsl-94-34-203-164.clienti.tiscali.it) (Quit: Leaving)
[00:18:02] *** Quits: Whatever009 (~fuzzypixe@ensi-libre-service-019.ensimag.fr) (Ping timeout: 240 seconds)
[00:18:19] *** Joins: jasper1378 (~jasper137@bras-base-toroon0628w-grc-47-142-112-142-77.dsl.bell.ca)
[00:18:54] *** Joins: poww0wmus1c (~poww0wmus@gateway/tor-sasl/poww0wmus1c)
[00:20:21] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[00:21:05] <dabow_ramone> Hello GeDaMo
[00:21:09] *** Joins: murii (~murii@2a02:a58:835a:1100:416e:d699:80b5:235d)
[00:21:09] <dabow_ramone> How are yo man
[00:21:17] <dabow_ramone> Its a nice place you have here
[00:21:21] <dabow_ramone> XD
[00:21:24] *** Joins: audiocat (~audio@user/audio)
[00:21:38] <[itchyjunk]> user.getVitals();
[00:21:47] <[itchyjunk]> too bad we don't have a bot here that could get user vitals
[00:22:03] <[itchyjunk]> we could automate this chit chat out of the way
[00:22:07] <dabow_ramone> docs.wordcaount(++word.lenght==page.lenght)
[00:22:19] <[itchyjunk]> GeDaMo, are you willing to explose your API to a bot?
[00:22:40] <GeDaMo> I don't have an API as far as I know :|
[00:23:01] <[itchyjunk]> pft old people, amirite?
[00:23:02] <snake> a function can be many to one, one-to-one, and bijective
[00:23:09] <dabow_ramone> where do I find a dictionary with a full list of request, even withou a API, just in case?
[00:23:16] <[itchyjunk]> what about one to many?
[00:23:36] <dabow_ramone> many to nes, too
[00:23:37] <snake> itchyjunk: no
[00:23:42] <snake> that is a relation
[00:23:44] <dabow_ramone> many to manys?
[00:24:00] <dabow_ramone> but, that could result in a deadlock?
[00:25:54] *** Quits: murii (~murii@2a02:a58:835a:1100:416e:d699:80b5:235d) (Ping timeout: 260 seconds)
[00:26:15] *** Joins: ThePhilgrim2 (~thephilgr@78-69-18-227-no49.tbcn.telia.com)
[00:26:16] <dabow_ramone> var count = $ ++=()
[00:26:30] *** Quits: ThePhilgrim2 (~thephilgr@78-69-18-227-no49.tbcn.telia.com) (Client Quit)
[00:26:53] *** Parts: npr60 (~npr60@79-74-69-242.dynamic.dsl.as9105.com) ()
[00:28:02] *** Quits: inomoz (~inomoz@85.26.235.86) (Ping timeout: 240 seconds)
[00:30:39] *** Joins: Inari (~Pinkishu@p508ef170.dip0.t-ipconnect.de)
[00:34:07] *** Quits: andreas303 (andreas303@ip227.orange.bnc4free.com) (Ping timeout: 265 seconds)
[00:34:19] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 250 seconds)
[00:34:57] <[itchyjunk]> I am realizing google produces a lot of algorithms.
[00:35:02] <[itchyjunk]> It's very interesting.
[00:35:26] *** Quits: Akuli (~Akuli@82-203-166-217.bb.dnainternet.fi) (Quit: Akuli)
[00:35:30] <[itchyjunk]> Btw, I want to work with some basic data structure and haskell is a bit intimedating. Not sure what to do.
[00:35:40] <GeDaMo> How basic?
[00:35:58] <[itchyjunk]> I want to work my way up to merkle list. Not sure how basic i need to start.
[00:36:05] <[itchyjunk]> I vaguely know what "lists" are.
[00:36:12] <[itchyjunk]> I know a little but about Arrays
[00:37:59] <nomagno> Merkle trees sound trivial to understand
[00:38:05] <GeDaMo> "a hash tree or Merkle tree is a tree in which every "leaf" (node) is labelled with the cryptographic hash of a data block, and every node that is not a leaf (called a branch, inner node, or inode) is labelled with the cryptographic hash of the labels of its child nodes." https://en.wikipedia.org/wiki/Merkle_tree
[00:38:05] <bayaz> Title: Merkle tree - Wikipedia 
[00:38:25] <nomagno> They are glorified checksums, basically
[00:38:34] <nomagno> You modify any element in the tree, and it stops adding up
[00:38:44] <snake> i have in my notes " a function has an inverse if and only if it is a bijection"
[00:38:59] <[itchyjunk]> oh its a tree not a list
[00:39:00] <snake> this also means "if a function is a bijection then it has an inverse" but i don't think that is true
[00:39:19] <snake> itchyjunk: you can store a tree in an array, but only if its a heap
[00:39:29] <[itchyjunk]> hmmmmm
[00:39:36] <GeDaMo> https://en.wikipedia.org/wiki/Heap_(data_structure)
[00:39:36] <bayaz> Title: Heap (data structure) - Wikipedia 
[00:39:37] <[itchyjunk]> I know there is heap and stack
[00:39:45] <GeDaMo> This is a different heap
[00:39:48] <[itchyjunk]> and arrays in java are in heap and objects in stack?
[00:39:50] <[itchyjunk]> oh.. :(
[00:40:18] <snake> might not actually be relevant to merkle tree lol sorry
[00:40:28] <nomagno> A hash list does not require heap
[00:41:10] <[itchyjunk]> hmm
[00:41:12] <nomagno> You can think of it as an array of data structures that contain some data, and its hash
[00:41:15] <[itchyjunk]> I need to start with "trees"
[00:41:26] <[itchyjunk]> am i really stuck with java to learn about this now? lol
[00:42:13] <GeDaMo> Y0ou can write your own tree implementation in Java, you don't have to use the built-in ones
[00:42:16] *** Joins: inomoz (~inomoz@85.26.235.152)
[00:42:21] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[00:42:44] <[itchyjunk]> right, write my own. but i was gonna do that kinda stuff in haskell. figured i'd learn haskell and data structures at the same time
[00:42:49] <[itchyjunk]> but I am second guessing myself now
[00:43:08] <snake> "f(x) is a function that takes x, a book, and gives y, a bookshelf, all books the library owns belong to a shelf (injective) and all shelves are used (surjective), but also each shelf holds more than one book (many-to-one)
[00:43:13] <GeDaMo> Haskell is nice because you can define data structures without pointers or references
[00:43:39] <snake> the function is bijective, but the inverse of the function is "not a function" how is that possible
[00:44:10] *** rwb is now known as rb
[00:44:35] <[itchyjunk]> snake, are you sure?
[00:44:40] <[itchyjunk]> how is it bijective?
[00:44:41] <snake> itchyjunk: no
[00:44:51] <[itchyjunk]> there is no inverse of your f
[00:44:52] <snake> it's bijective because it is both injective and surjective
[00:45:15] <nomagno> In the end, for an educative implementation of anything, language really doesn't matter
[00:45:41] <[itchyjunk]> i dont think it's bijective.
[00:45:49] <nomagno> You want to prove you know the concept, if you relaky understand it you'll be able to write it in any languahe except maybe some weird assembly (like mine :P)
[00:45:52] <[itchyjunk]> 2 books can be mapped to same shelve.
[00:46:32] <snake> "surjective, all outputs are mapped, many-to-one is allowed"
[00:47:04] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[00:47:20] <[itchyjunk]> your injective definition.
[00:47:32] <[itchyjunk]> I am 51% sure your f is not bijective.
[00:47:57] <[itchyjunk]> bijection implies exists f^{-1} such that f \circ f^{-1} = id
[00:48:25] <snake> yeah that's the issue i found in my notes which contradicts my understanding
[00:48:33] <snake> the inverse functions
[00:48:51] <[itchyjunk]> your injective def is off.
[00:48:52] <snake> "injective, all inputs are mapped"
[00:49:18] <[itchyjunk]> f(x_1) = f(x_2) => x_1 = x_2 for f injective,
[00:49:31] <[itchyjunk]> all inputs are mapped by being a domain of a function.
[00:50:03] <[itchyjunk]> A = {1,2,3}, B = {a} , f:A->B then all elements from A gets mapped 
[00:50:08] <[itchyjunk]> by virtue of being the domain
[00:50:13] <[itchyjunk]> saying nothing about injection
[00:50:17] <[itchyjunk]> says*
[00:51:43] <[itchyjunk]> snake, injective is "one to one"
[00:51:56] <snake> itchyjunk: thankyou, you are right
[00:51:57] <snake> (mathematics) A relation on sets (X,Y) that associates each element of Y with at most one element of X.
[00:52:21] <snake> (set theory) A function that maps distinct x in the domain to distinct y in the codomain; formally, a f: X → Y such that f(a) = f(b) implies a = b for any a, b in the domain.
[00:52:37] <nomagno> If you know all of this stuff, you should not have any real issues understanding Merkel trees.
[00:52:57] <[itchyjunk]> I am reading up on tree
[00:53:18] <nomagno> It's an upwards hash chain such that almost any modification to the structure makes it invalid
[00:53:57] <[itchyjunk]> I understand the first part "upwards hash chain" but not the "any modification to the structure makes it invalid"
[00:54:09] <[itchyjunk]> we had to make linked list, i think that counts as soem sort of tree then
[00:54:12] <[itchyjunk]> based on what i am reading
[00:54:36] *** Joins: flakland (~flaknet99@32.211.211.39)
[00:54:40] <nomagno> [itchyjunk] You know how it is very hard for two inputs to have the same hash?
[00:54:50] <[itchyjunk]> yes
[00:55:27] <snake> yeah i think a linked list is technically a kind of tree
[00:55:39] <snake> since it has n-1 edges and n nodes
[00:56:13] *** Joins: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net)
[00:56:15] <nomagno> Well, the hash tree basically says "this structure is corrupt if any of the nodes is not the addition of its childs"
[00:56:49] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[00:56:55] <[itchyjunk]> hash of paretn node depends on hash of child?
[00:57:02] *** Quits: mattallmill_ (~mattallmi@ip68-103-132-187.ks.ok.cox.net) (Read error: Connection reset by peer)
[00:57:09] <nomagno> Yes
[00:57:17] <nomagno> Just look at Wikipedia's diagram
[00:57:25] <snake> oh i think blockchain uses that yeah?
[00:57:37] <nomagno> You do the hash of the addition of the child's two hashes
[00:57:51] <nomagno> If any bit in this structure changes, you can bet it won't add up
[00:58:42] <[itchyjunk]> okay, it conceptually it makes sense
[00:59:09] <[itchyjunk]> snake, yes i wanted to learn blockchain hello world. and GeDaMo told me about this data structure
[00:59:47] <snake> whoa
[00:59:50] *** Joins: akevinhuang2 (~thekevinh@user/thekevinhuang)
[00:59:52] <snake> glhf
[01:00:43] <[itchyjunk]> I see now why data structure and algorithms go hand in hand
[01:01:00] <[itchyjunk]> once you had a datastructure, you need some algo to work with it
[01:01:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[01:01:22] *** Joins: jhkrug (~jhkrug@84.236.249.225)
[01:01:31] <snake> injective just means "indivudally wrapped"
[01:01:33] <[itchyjunk]> What do you guys generally recommend for learning data structure and algorithm stuff?
[01:01:44] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Remote host closed the connection)
[01:01:44] <flakland> vim + gcc
[01:01:49] <nomagno> Well yes, conceptually speaking, that's the fundamental difference between the declarative and imperative ends of the spectrum
[01:01:55] *** Parts: jhkrug (~jhkrug@84.236.249.225) ()
[01:01:55] <[itchyjunk]> like what tutorials and such
[01:02:03] *** Quits: akevinhuang (~thekevinh@user/thekevinhuang) (Ping timeout: 252 seconds)
[01:02:05] <snake> itchyjunk there is a good one on youtube that is like 20 hours long
[01:02:12] <[itchyjunk]> yikes
[01:02:20] <[itchyjunk]> 20 mins would be nice :D
[01:02:39] <snake> https://www.youtube.com/watch?v=RBSGKlAvoiM
[01:02:40] <bayaz> Title: Data Structures Easy to Advanced Course - Full Tutorial from a Google Engineer 
[01:02:45] <snake> it was actually 8 hours i lied
[01:02:58] <nomagno> Declarative languages are better/more dynamic at containing data. Imperative languages are better/more flexible with processing data.
[01:03:01] <snake> itchyjunk i watched most of that and my DS classes are easy now
[01:03:09] <snake> since i have studied it before
[01:03:16] <snake> (with the youtube video)
[01:03:23] <[itchyjunk]> The github for this channel has no books/resources link.
[01:03:54] <[itchyjunk]> I vote we add one where popular resource/books is listed. What do you think, InPhase ?
[01:04:42] <snake> wasn't the channel taken over by rogue functional programmers from the functional programming gang during the transition to libera?
[01:04:44] *** Quits: sh1r4s3 (~sh1r4s3@109.252.75.9) (Remote host closed the connection)
[01:04:46] <snake> exodus
[01:05:17] <[itchyjunk]> my in phase is a coowner here
[01:05:18] *** Quits: user51 (~user51@176.228.151.30) (Remote host closed the connection)
[01:05:27] <snake> oh ok cool
[01:05:50] <[itchyjunk]> mr*
[01:06:10] <snake> there was once a time where speaking such things would get me instabanned for like 3 weeks
[01:06:18] *** Joins: jhkrug (~jhkrug@84.236.249.225)
[01:06:24] <snake> the good times
[01:08:45] *** Quits: constxd (~brad@192.75.101.164) (Ping timeout: 250 seconds)
[01:08:53] *** Parts: jhkrug (~jhkrug@84.236.249.225) ()
[01:08:53] *** Joins: sh1r4s3 (~sh1r4s3@109.252.75.9)
[01:10:58] *** Joins: jhkrug (~jhkrug@84.236.249.225)
[01:11:24] *** Parts: jhkrug (~jhkrug@84.236.249.225) ()
[01:11:28] <snake> each moderna dose was injected into at most one patient (or zero patients). f: P -> M
[01:12:12] <snake> this is the kind of stuff i missed on the exam btw lol, that and properties of relations
[01:12:33] <snake> and stupid stuff i always forget like the exponents rules
[01:12:48] *** Joins: andreas303 (andreas303@ip227.orange.bnc4free.com)
[01:12:53] <snake> but i can take the stupid stuff, i need to get the concepts at least
[01:13:26] <[itchyjunk]> actually moderna booster is 1/2 dose
[01:13:35] <snake> you monster
[01:13:37] <[itchyjunk]> so each moderna dose was probably injected into 2 people 
[01:13:50] <[itchyjunk]> What class is this?
[01:13:50] <nomagno> I am having huge trouble with stupid stuff this year in math
[01:13:53] <nomagno> Like, huuuge
[01:13:55] <snake>  discrete math
[01:14:03] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 256 seconds)
[01:14:03] <[itchyjunk]> phrasing function questions as real world problems is pretty dumb
[01:14:10] <[itchyjunk]> you need well defined sets to talk about it
[01:14:13] <snake> nomagno, yeah i fear the calculus class im required to take at some point
[01:14:16] *** Joins: TCZ (~tcz@91.150.178.124)
[01:14:20] <[itchyjunk]> nomagno, what math?
[01:14:37] <[itchyjunk]> i had a calc related final yesterday
[01:14:45] <[itchyjunk]> i didn't do too well but i am sure i should pass
[01:15:02] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[01:15:30] <snake> huh i thought all that time you spent questioning me about vectors, functions, and such would have helped you get an easy 4.0 in that class itchy
[01:15:44] <[itchyjunk]> heh
[01:15:55] <[itchyjunk]> i got some of the harder stuff correct but the easier stuff wrong
[01:16:05] <[itchyjunk]> Can't focus so not enough practice
[01:17:13] <snake> itchy: i think the patient is a well-defined domain, and moderna doses are a well defined range
[01:17:25] <snake> especially if we say specifically moderna vaccine patients
[01:17:26] *** Joins: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au)
[01:17:53] <snake> patients who got the moderna vaccine, lets ignore the 2nd dose tho (and actually i got 3 so would that make it 1/3)
[01:18:40] <snake> also "injection" to help remember injective
[01:18:44] <nomagno> [itchyjun]: it's algebra stuff, but of all the fairly cumbersome things, the one I fail at the most is, for whatever damn reason, (x^2+y^2)!=(x+y)^2, which I know from most of my education, which I should not fail at ever.
[01:19:13] <nomagno> As in, it's actually ridiculous. I know all concepts but when I'm going fast it ALWAYS slips trough
[01:20:12] <snake> g dot g dot g where g(x) = -x^2. i answered -x^6 but its -x^8
[01:20:36] <snake> probably because i wasted my highschool years failing algebra and repeating it
[01:20:38] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[01:20:47] <snake> like some kind of bimbo
[01:20:50] <snake> im not even a real snake
[01:20:52] *** Quits: humky (~humky@user/humky) (Quit: Leaving)
[01:21:02] <[itchyjunk]> snake, no
[01:21:08] <[itchyjunk]> dosages can be full or half
[01:21:14] <nomagno> That sounds like me right now to be fair. But I only have issues this year!
[01:21:16] <snake> itchy: aye thankyou
[01:21:18] <[itchyjunk]> so mapping from dosage to person isn't well defined
[01:21:37] <[itchyjunk]> its best to just remember the math definition
[01:21:37] <snake> nomagno, keep trying
[01:21:58] <nomagno> I will. I have enough determination to fill a truck right now
[01:22:07] <[itchyjunk]> (x+y)^2 = x^2 + y^2 sometimes
[01:22:21] <nomagno> I passed, lowkey miraculously.
[01:22:29] *** Joins: pulse (~pulse@user/pulse)
[01:22:34] <nomagno> Probably because prof knows I know.
[01:22:51] <nomagno> Else I would have barely failed
[01:22:56] <[itchyjunk]> yeah i think that's how i passed some of my classes
[01:23:06] <[itchyjunk]> got a B+ in a class i thought i would fail
[01:23:23] <pulse> So this is the power of Java https://www.wired.com/story/log4j-log4shell/
[01:23:24] <bayaz> Title: The Log4J Vulnerability Will Haunt the Internet for Years 
[01:23:40] <pulse> Imagine making a logging library so bad that it destroys the internet
[01:23:48] <flakland> the power of java compels you
[01:24:14] <snake> seriously how'd they screw that up?
[01:24:22] <flakland> they didn't
[01:24:23] <nomagno> My mark estimates are always wrong to be fair. If I think I have gotten a good mark (I rarely do), I have not. If I think I have done horrible, I get a great mark (this is mostly what happens).
[01:24:24] <snake> and don't tell me it's because they didn't write it in rust :p
[01:24:28] <flakland> it's a feature
[01:24:35] <snake> flakland, you shitting me?
[01:24:37] <nomagno> I should maybe add a ! to my estimations
[01:24:46] <flakland> a default feature no less
[01:24:51] <nomagno> I think I have... ![estimation] this exam.
[01:24:53] <snake> what is it
[01:25:09] <flakland> download random java code from the net
[01:25:20] <snake> RANDOM
[01:25:35] <snake> a roll of the die
[01:25:38] <flakland> potentially
[01:25:54] <snake> a shuffled deck of cards
[01:25:57] <snake> is it truly random?
[01:26:21] <snake> sorry
[01:26:43] <snake> flakland, so what users can make a post with a java link and if it makes it into Log4J it will just download and eggsecute it?
[01:27:01] <[itchyjunk]> forbinus
[01:27:04] <[itchyjunk]> that was the name
[01:27:09] <flakland> pretty much 
[01:27:16] <snake> yikes
[01:27:21] <[itchyjunk]> (a+b)^p = (a^p + b^p)
[01:27:23] <nomagno> Wow, this is worse than shellshock
[01:27:27] <[itchyjunk]> if the mab is forbinius
[01:27:30] *** Quits: XV8 (~XV8@2601:5cb:c001:50:3422:70c3:45ca:a8b5) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:27:49] <snake> that is developer level vulnerability. they were either as dumb as a rock or they did it on purpose lol
[01:28:20] <snake> there are people that legit see security vulns and say "nah we're never gonna get hacked". is it dumb or negligent or worse?
[01:28:23] <snake> hard to say
[01:28:24] *** Joins: XV8 (~XV8@2601:5cb:c001:50:29c4:77b3:3d1a:a58b)
[01:28:43] <dabow_ramone> non disclosure policy, maybe
[01:29:09] <snake> somebody had to have wrote that feature tho
[01:29:15] <snake> that person, what were they thinking
[01:29:32] <snake> was it dumb negligent or worse? or yeah maybe they were just following orders
[01:29:43] <dabow_ramone> in the white hat way, you not disclose, vulns, at all
[01:29:52] <flakland> their boss was probably raging at them to get it done yesterday, and pretending it wasn't going to be a default feature
[01:30:00] <snake> ok ramone, you dont get it at all
[01:30:09] <snake> flakland lol
[01:30:16] <dabow_ramone> why not, cmon
[01:30:25] <snake> yeah maybe but then why did the boss want it, maybe he didnt see how it'd be an issue
[01:30:55] <dabow_ramone> yeah, when thomas gabriel disclose that vuln, they put a gun in his hands, and say to him stop the hack
[01:31:02] <snake> whatever you want bossman, i just work here
[01:31:02] <nomagno> Public anonymous disclosure is the true way of the pentest hobbyist
[01:31:15] <nomagno> You get to watch the world burn, AND the bug get fixed.
[01:31:28] <snake> lol
[01:31:29] <dabow_ramone> ok, done.
[01:31:33] <dabow_ramone> lol
[01:31:37] <dabow_ramone> fixed
[01:31:59] <dabow_ramone> best case scenario
[01:32:20] <snake> sudo apt remove oracle-java
[01:32:23] *** Joins: zaher (~zaher@37.48.187.253)
[01:32:34] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:32:38] <dabow_ramone> if boss need to outsource the deploy of that patches, certainly, some heads are gonna roll, this week.
[01:33:03] <dabow_ramone> apt-get remov apache
[01:33:03] *** Quits: Leone (~Leo@69-165-148-197.dsl.teksavvy.com) (Read error: Connection reset by peer)
[01:33:56] <dabow_ramone> microsoft windows have a lot of holes, and they keep making money, so no one cares.
[01:34:41] *** Quits: zaher_ (~zaher@37.48.185.124) (Ping timeout: 252 seconds)
[01:37:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[01:38:31] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:39:43] *** Joins: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net)
[01:44:41] *** Quits: craftxbox (craftxbox@2001:bc8:47b0:272c::1) (Ping timeout: 268 seconds)
[01:45:14] *** Joins: craftxbox (craftxbox@2001:bc8:47b0:272c::1)
[01:45:24] *** Joins: sonny (~sonny@2a09:bac0:14::806:90fc)
[01:46:37] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[01:47:04] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[01:47:11] <vdamewood> Dammit. My project to mix C and .NET is done, but it was so fun I want to do it some more.
[01:48:26] <arahael> vdamewood: Condolences. :)
[01:48:53] <vdamewood> arahael: I kind of want to do it with C++ now, too.
[01:48:59] *** Quits: emf_ (~emf@2620:10d:c091:480::1:3f40) (Ping timeout: 252 seconds)
[01:49:05] <pulse> Nice, I like C++
[01:49:18] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:49:26] * vdamewood does a double take at pulse's nick.
[01:49:46] <pulse> If you mirror it, it becomes esluq
[01:49:56] <pulse> ezluq *
[01:50:19] <vdamewood> Okay, you are now EzLuq
[01:50:30] <vdamewood> (pronounced Easy Luke)
[01:50:31] <pulse> Yours becomes boowemabv
[01:50:43] <jkk> <dabow_ramone> microsoft windows have a lot of holes, and they keep making money, so no one cares. dont they fix some in win 11?
[01:51:33] <flakland> hahaha
[01:52:39] <pulse> They stuffed them with cotton balls
[01:53:10] <vdamewood> pulse: boowɘmabv
[01:53:31] <pulse> ɘ_ɘ
[01:53:38] *** Quits: Hash (~Hash@hashsecurity.org) (Quit: https://hashsecurity.org)
[01:53:45] <vdamewood> ǒ_ǒ
[01:54:12] <pulse> ~ɘ(ɘ_ɘ)ɘ~
[01:54:24] *** Joins: emf (~emf@2603-6080-9403-11bf-0000-0000-0000-0009.res6.spectrum.com)
[01:54:25] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[01:54:32] <vdamewood> ɘ!o_o!e
[01:54:42] <pulse> I will now eat some cookies.
[01:55:19] <vdamewood> 🍪_🍪
[01:55:32] <pyzozord> looks like a cookie fly
[01:55:54] <vdamewood> pyzozord: Dammit now I have that picture stuck in my head.
[01:56:04] <pulse> Same
[01:56:18] <vdamewood> bzzz
[01:56:27] * pyzozord runs hands
[01:56:33] <pyzozord> rubs*
[01:56:48] <vdamewood> This bugs me.
[01:56:54] *** Quits: operateur (~operateur@109-93-83-156.dynamic.isp.telekom.rs) (Ping timeout: 260 seconds)
[01:57:16] <vdamewood> 🪰_🪰
[01:57:18] <pulse> 🍕_🍕
[01:57:23] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[01:57:34] <pyzozord> my 2.4ghz wifi is so flaky, that's so annoying, can't use my phone reliably
[01:57:41] <vdamewood> Damn, no potica emoji.
[01:57:46] <pulse> Mine works great at 2.4
[01:58:17] <vdamewood> @_@ I guess the at sign works for potica.
[01:58:24] *** Joins: emf_ (~emf@2620:10d:c091:480::1:9cd9)
[01:58:31] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) (Ping timeout: 252 seconds)
[01:58:45] <vdamewood> Yum, Swirly bread.
[01:58:53] *** Quits: emf (~emf@2603-6080-9403-11bf-0000-0000-0000-0009.res6.spectrum.com) (Ping timeout: 252 seconds)
[01:59:02] <flakland> try a different wifi channel
[01:59:27] <vdamewood> pyzozord: Which channel are you using, anyway?
[01:59:52] <pyzozord> I'm not sure if its the router and noisy neighbors or is my phone's wifi chil/antenna is shitty
[02:00:21] *** Joins: Hash (~Hash@hashsecurity.org)
[02:00:24] <pyzozord> Router is set to automatically adjust the channel, I think it sits at 10 atm
[02:00:43] <pyzozord> chil=chip
[02:00:52] <vdamewood> Could be both.
[02:01:21] *** Joins: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com)
[02:01:27] <pyzozord> don't have any other 2.4ghz wifi device to compare
[02:01:57] <pyzozord> i bought this phone for €90 few years ago and it does pretty well
[02:02:02] <pulse> vdamewood, @ is kinda appropriate
[02:02:08] <vdamewood> FWIW,in an urban setting, 5.0 GHz is better due to wider bandwidth and lower congestion.
[02:02:13] <jkk> <pulse> I will now eat some cookies - you are not a browser ! Xd
[02:02:27] * pulse gives jkk a cookie warning
[02:02:46] <vdamewood> !warn jkk pulse can eat cookies if he wants.
[02:02:46] * bayaz warns jkk: pulse can eat cookies if he wants.
[02:02:50] <pulse> pyzozord, When in doubt, hack your neighbor's wifi
[02:03:09] <jkk> sudo apt-get remove pulse-browser lol
[02:03:13] * pyzozord installs a cookie blocker plugin on pulse
[02:03:17] <vdamewood> Hmm... I wonder if that would have been finnier if I sent the command privately.
[02:03:18] <pulse> >:(
[02:03:23] <vdamewood> funnier*
[02:03:31] <jkk> it was funny
[02:03:32] <jkk> Xd
[02:03:35] *** Quits: jamea77 (~jamea@10.189-202-213.bestelclientes.com.mx) (Ping timeout: 250 seconds)
[02:04:00] <vdamewood> Naw, if I did it privately it might have looked like pulse did it himself.
[02:04:20] <pyzozord> hmm maybe I should have my personal bot
[02:04:20] <vdamewood> s/I did/I had done/
[02:04:33] <vdamewood> pyzozord: I thought you were a bot.
[02:04:35] <pulse> R2D2, bring me some tea
[02:04:42] <vdamewood> R2Tea2?
[02:04:47] <pyzozord> I am, I just want a friend
[02:04:48] *** Joins: Haxxa (~Haxxa@202-130-211-204.ip4.superloop.com)
[02:04:52] <pyzozord> beep boop
[02:04:58] * vdamewood builds pyzozord a friend.
[02:04:59] *** Quits: sinhue (~mithrin@188-167-233-152.dynamic.chello.sk) (Read error: Connection reset by peer)
[02:05:27] * pyzozord is not a fan of Turing and his stupid test
[02:05:31] <vdamewood> pyzozord: This is your new friend. FR13ND
[02:05:52] *** jkk is now known as sysbot
[02:06:05] <pyzozord> nice, I'll go now waste some CPU cycles hehe
[02:06:08] * sysbot !warn pulse to eat pizza too!
[02:06:39] <vdamewood> sysbot: ops only.
[02:06:54] *** Joins: TastyWiener95 (~uhhh3@user/tastywiener95)
[02:06:59] *** sysbot is now known as jkk
[02:07:03] <pyzozord> sysbot it doesn't work like that, bayaz doesn't make friends easily
[02:07:47] *** Quits: TCZ (~tcz@91.150.178.124) (Quit: Leaving)
[02:07:55] <arahael> bayaz is extremely user-friendly. But he's very picky with what friends he has.
[02:08:14] <vdamewood> Dear YouTube. I don't drink. Stop sending me ads for alcoholic drinks.
[02:08:28] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:08:30] *** Quits: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk) (Read error: Connection reset by peer)
[02:08:39] <arahael> vdamewood: Youtube does that? That's illegal here in my country - drinking and smoking adverts.
[02:08:58] <vdamewood> arahael: Broadcast TV only here.
[02:08:59] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:09:10] <vdamewood> (I mean, only illegal on broadcast TV)
[02:09:13] <arahael> Loopholes. :(
[02:09:38] <pyzozord> so annoying, makes me wanna buy a new phone just for the wifi to work
[02:09:52] <vdamewood> pyzozord: Does your phone not support 5GHz?
[02:10:14] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[02:10:22] <pyzozord> i tried adjusting channels, i tried boosters (wired connected to the router) what else can I do?
[02:10:25] *** Joins: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk)
[02:10:36] <pyzozord> yes, its Redmi 5a I think
[02:10:57] <pyzozord> 6a
[02:11:58] *** Joins: Wafficus (~Wafficus@70.126.240.148)
[02:12:04] <Wafficus> hey there, does anyone here use ElectronJS?
[02:12:12] <pyzozord> my laptop, external screen and phone together costed less than what many people pay for phones
[02:12:21] <vdamewood> Well, gotta go.
[02:12:27] <vdamewood> Damn real life.
[02:12:29] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[02:12:31] <pyzozord> see ya
[02:12:36] <pyzozord> gl
[02:12:38] <jkk> :)
[02:12:43] <Wafficus> pyzozord lemme guess, Thinkpad?
[02:12:51] <pyzozord> yep x230
[02:12:57] <Wafficus> Nice, I got one too
[02:13:00] <Wafficus> best damn laptop I ever used
[02:13:07] <jkk> i love thinkpads
[02:13:10] <jkk> mmmm
[02:13:14] <pyzozord> very cool laptops indeed, so durable so cheap
[02:13:14] <oldlaptop> arahael: I don't think an attempted ban on Internet advertising of any kind would hold constitutional water in the US. Broadcast TV gets special carve-outs owing to the unique (and regulated) nature of "the public airwaves".
[02:13:18] <Wafficus> I have Manjaro on it, but had Fedora on it before with 'exwm' Emacs Window Manager
[02:13:29] <Wafficus> now I just use 'eyebrowse' with Emacs separately on it
[02:14:17] *** Quits: arahael (~arahael@27-32-144-20.tpgi.com.au) (Ping timeout: 252 seconds)
[02:17:32] <Wafficus> cheap, ah... maybe. I've had to sift through some shifty eBay posts
[02:17:53] <Wafficus> but to be fair, I kind of really like that form factor, to the point where I was thinking about getting the smaller ones, or longer ones, can't decide. But nothing with a modern keyboard
[02:18:01] <Wafficus> I just like the chiclet keyboards
[02:18:08] <Wafficus> what distro are you running on it pyzozord
[02:18:11] <jkk> https://www.rainloop.net/ looks nice
[02:18:11] <bayaz> Title: RainLoop Webmail 
[02:18:50] <pyzozord> Wafficus ubuntu
[02:19:16] <Wafficus> Nice, beats Debian ;)
[02:19:46] *** Quits: stagas (~stagas@2a02:587:c40e:fc00:6dcd:9cd9:967e:240a) (Ping timeout: 260 seconds)
[02:19:47] <Wafficus> interesting, is that self hosted too jkk or is that a service that does mail for you?
[02:20:19] <jkk> self hosted and maybe some offer as a service
[02:20:26] <Wafficus> interesting
[02:20:30] <jkk> nods :)
[02:20:35] <Wafficus> personally, Fastmail is pretty good for $60 a year
[02:20:40] <Wafficus> sounds crazy to some people
[02:21:03] <Wafficus> but a coworker I knew who ACTUALLY ran an email server told me he needed like $120+ a year for a stupid VM just to be able to handle spam, etc for a mail server
[02:21:06] <jkk> Wafficus, self hosted more private
[02:21:17] <Wafficus> right, I see the benefits of that for sure
[02:21:22] <jkk> hosted - hosts reads scans emails
[02:21:29] <Wafficus> I tried at least 3 times to deploy a mail server, but damn man, its intensely hard
[02:21:37] <jkk> Wafficus, it is very easy
[02:21:38] <Wafficus> I can't find a non-brainy guide to do it
[02:21:49] <Wafficus> I've looked, and looked, and looked, and looked (etc repeat forever)
[02:21:57] <jkk> i don't believe it
[02:22:01] <jkk> it is easyyy
[02:22:02] <jkk> :)
[02:22:15] <jkk> maybe I can write a guide
[02:22:37] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 256 seconds)
[02:23:32] *** Joins: inlight (~inlight@157.35.23.138)
[02:23:32] *** Quits: inlight (~inlight@157.35.23.138) (Changing host)
[02:23:32] *** Joins: inlight (~inlight@user/inlight)
[02:23:49] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[02:25:02] <jkk> Wafficus, where did you stuck
[02:25:18] <sonny> I use fastmail, it's pretty good
[02:25:58] <jkk> have to encrypt drive too so hosting provider cant access mail physically :)
[02:26:13] <jkk> that only leaves gov level traffic collectors
[02:26:34] <jkk> if mail truly send via ssh maybe they cant collect it too or?
[02:27:02] * jkk orders more tinfoil lol
[02:27:48] <gry> fastmail is good
[02:28:05] <gry> i'm too poor to self host email
[02:29:19] <Wafficus> hmm where was I stuck
[02:29:21] <Wafficus> I think...
[02:29:44] <Wafficus> I can't remember. I think the checks near the end didn't work or something. I don't know. I straight up asked on 3 separate mailing lists and was told "Good luck"
[02:29:59] <Wafficus> mostly because the guide itself was OpenBSD based I think, but yeah
[02:30:16] <Wafficus> if you can link up to a dead simple guide that ISN'T mail-in-a-box, props
[02:30:19] <Wafficus> otherwise, no worries man
[02:30:33] <decker> https://www.youtube.com/watch?v=maHTGpUx1Ws even the sun is raining on us :)
[02:30:34] <bayaz> Title: Some of The Water on Earth Actually Came From the Sun 
[02:30:34] <Wafficus> there are certain things worth self-hosting in life, and email just isn't one of them
[02:30:41] <jkk> lies :P
[02:30:50] <jkk> imagine the level of privacy
[02:31:22] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[02:31:34] *** Joins: humky (~humky@user/humky)
[02:31:41] <Wafficus> this is the guide
[02:31:42] <Wafficus> https://poolp.org/posts/2019-09-14/setting-up-a-mail-server-with-opensmtpd-dovecot-and-rspamd/
[02:31:44] <bayaz> Title: Setting up a mail server with OpenSMTPD, Dovecot and Rspamd 
[02:31:48] <Wafficus> That's what broke me ^
[02:32:00] <Wafficus> frigging autismo tier in terms of the setup
[02:32:17] <Wafficus> couldn't handle it man, too big brained. I tried though, for a straight 1 to 2 months. Not worth it man
[02:32:26] <jkk> 2 months...
[02:32:27] <jkk> ehehe
[02:32:40] <Wafficus> yeah, I vowed to not really spend that much time on projects
[02:32:42] <Wafficus> its not worth it
[02:32:46] *** Joins: arahael (~arahael@203.158.51.1)
[02:32:47] <Wafficus> I used to try stuff for 6 months +
[02:32:56] <Wafficus> nope, if it doesn't work as a prototype within weeks, ditch it
[02:33:06] <Wafficus> best advice I learned along the way, will pass this on to anyone else here
[02:33:25] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[02:33:45] *** Quits: Wafficus (~Wafficus@70.126.240.148) (Quit: Connection closed)
[02:33:57] *** Joins: pizdets_ (~pizdets@183.182.110.83)
[02:34:01] *** Quits: pizdets (~pizdets@183.182.114.96) (Ping timeout: 268 seconds)
[02:34:36] <nomagno> I'm having fun making a game engine for almost half a year now, still without any usable results!
[02:34:58] <nomagno> I keep over engineering and simplifying existing code to be fair
[02:35:17] <jkk> i just saw lesbian rap! Xd
[02:35:22] <nomagno> My codebase has reduced inside dramatically, but gained not a huge amount of functionality
[02:35:34] <nomagno> in size *
[02:35:55] *** Quits: Burgundy (~yomon@79.115.213.171) (Ping timeout: 252 seconds)
[02:36:01] <oldlaptop> nomagno: Before you know it you'll have room to add some things again.
[02:37:04] <decker> nomagno maybe you also need more of the game and less of the engine :)
[02:37:28] <jkk> https://www.digitalocean.com/community/tutorials/how-to-set-up-a-postfix-e-mail-server-with-dovecot
[02:37:29] <bayaz> Title: How To Set Up a Postfix E-Mail Server with Dovecot | DigitalOcean 
[02:37:33] <jkk> not great yet something 
[02:38:33] <nomagno> When I get a base backend that is absolutely perfect, I will git rebase and move onto the frontend.
[02:38:35] *** Quits: sidy (~sidy@user/sidy) (Quit: Leaving)
[02:38:49] <jkk> just release the game then make it better
[02:38:58] <jkk> or make users to commit new code lol
[02:39:03] <nomagno> The codebase is public.
[02:39:09] *** Quits: MaghOz (~maghoz@2001:4bc9:821:d3f2:540d:f952:207a:2) (Quit: WeeChat 3.3)
[02:39:17] <jkk> hentai games usually are popular
[02:39:24] <jkk> might get more commits
[02:39:26] <nomagno> I am lacking way too many components to make anything playable at the moment
[02:40:08] <nomagno> A proper physics engine, an arbitrary-resolution renderer, a track editor...
[02:40:43] <nomagno> Nah, I'm having fun. When it's ready for a release to be... Well, labelled, I'll probably naturally get contributions
[02:41:15] <pyzozord> jkk you seem like a fan of Luke Smith
[02:41:55] *** Quits: sonny (~sonny@2a09:bac0:14::806:90fc) (Ping timeout: 250 seconds)
[02:44:19] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[02:44:42] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[02:45:45] <pyzozord> and like you are a fan of moldbug
[02:45:55] *** Quits: Smeef (~deathonat@user/smeef) (Quit: (╯°□°）╯︵ ┻━━┻)
[02:46:13] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[02:46:27] <BucetaRosa> I am a fan of buruma and serafuku
[02:46:46] *** BucetaRosa is now known as BurumaSerafuku
[02:47:51] <pyzozord> not saying it's wrong, everyone has their views, it just crossed my mind considering what kind of comments you make about things that aren't about programming
[02:48:20] <jkk> pyzozord, well  many people may share similar views
[02:49:00] <BurumaSerafuku> you need more buruma and serafuku
[02:49:40] <pyzozord> I think everyone is entitled to their views, but they must make effort to be respectful and friendly even for people with different views
[02:49:58] <jkk>  I think everyone is entitled to their views - people have views
[02:49:59] <jkk> so simple
[02:50:02] *** Quits: piou (~piou@user/piou) (Ping timeout: 252 seconds)
[02:50:29] <jkk> no one cares what people like or not unless they choose to care
[02:53:58] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[02:56:11] <pyzozord> i was just curious if I made a correct guess
[02:56:39] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 250 seconds)
[02:56:57] *** Quits: poww0wmus1c (~poww0wmus@gateway/tor-sasl/poww0wmus1c) (Quit: leaving)
[02:59:38] *** Joins: src_ (~src@user/src)
[02:59:46] *** Joins: zaher_ (~zaher@46.58.213.37)
[02:59:50] <[itchyjunk]> alright bois, it's decided. time to learn me some python
[03:00:07] <[itchyjunk]> i dont think i wanna continue putting effort in java
[03:00:20] *** Quits: inlight (~inlight@user/inlight) (Remote host closed the connection)
[03:01:49] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Remote host closed the connection)
[03:02:06] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[03:02:07] <jkk> is there a japanese coding chat?
[03:02:30] <jkk> it seems most of people here are from Europe or US/Canada
[03:02:40] <pulse> I am from Europe
[03:02:51] <pulse> Things we have: pumpkin oil
[03:02:56] <pulse> Things we don't have: maple syrup
[03:03:01] <pulse> Send maple syrup plz
[03:03:03] <pulse> Signed, Europe
[03:03:14] *** Quits: src_ (~src@user/src) (Client Quit)
[03:03:25] *** Quits: zaher (~zaher@37.48.187.253) (Ping timeout: 256 seconds)
[03:03:25] *** Quits: src (~src@user/src) (Ping timeout: 256 seconds)
[03:03:25] *** Joins: src_ (~src@user/src)
[03:04:14] <dTal> what the hell is pumpkin oil
[03:04:38] *** Parts: OnkelTem (~OnkelTem@user/onkeltem) (WeeChat 3.3)
[03:04:50] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:06:32] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:06:34] <pyzozord> python is more versatile
[03:06:36] <yitz> I dunno but I'm not giving up maple syrup for it
[03:06:45] <pyzozord> in Java you get a job
[03:07:23] <pulse> dTal, It is the best tasting thing in existence
[03:07:23] <yitz> Plenty of people will hiring Python devs. Especially if you couple that with some basic systems skills
[03:07:37] <dTal> I'm intruiged
[03:07:39] <pyzozord> in python you get a job, script your os, write neural nets, and script multiple popular software
[03:07:39] <pulse> I am continually surprised of Americans not knowing about pumpkin oil
[03:07:42] <dTal> never seen it before
[03:07:49] <pulse> It goes on everything and tastes amazing
[03:08:02] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:08:13] <yitz> Like a dressing? Or for cooking?
[03:08:43] <pulse> It goes on everything but usually you put it into a salad
[03:08:54] <yitz> Huh. In America we use olive oil
[03:09:11] <yitz> Imported from Europe, ofc
[03:09:32] *** Quits: Nex6 (~Nex6@cpe-45-51-244-112.socal.res.rr.com) (Quit: Leaving)
[03:09:44] <pulse> Pumpkin oil also has a rare physical property called dichromatism
[03:09:59] <yitz> Do that make you sparkle when you eat it?
[03:10:04] <pulse> The viscous oil is light to very dark green to dark red in colour depending on the thickness of the observed sample. The oil appears green in thin layers and red in thick layers, an optical phenomenon called dichromatism.[6] Pumpkin oil is one of the substances with the strongest dichromatism. Its Kreft's dichromaticity index is -44
[03:10:52] <yitz> Fascinating
[03:10:55] <pulse> It's one of the rare substances that is both green, black and red depending on how you look at it
[03:10:56] <dTal> how do you extract it from a pumpkin
[03:11:01] <pulse> dTal, Seeds
[03:11:09] <yitz> I assume you squeeze/press it
[03:11:21] *** Quits: junebug (~junebug@2600:1700:3db0:2540:1742:fab7:61dd:4a6) (Quit: Leaving)
[03:11:35] *** Joins: piou (~piou@24.20.201.77.rev.sfr.net)
[03:12:58] <pulse> It is beyond good and it's a crime that people don't know it
[03:13:30] <yitz> I'll keep an eye out for it the next time I'm in the grocery store
[03:13:50] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[03:13:52] *** Joins: TCZ (~tcz@91.150.178.124)
[03:14:07] <pulse> If it's undiluted it's very strong. Few drops is enough
[03:16:08] <jkk> now it is pretty clear that all free email providers scan and archive email and pass it to gov agencies
[03:16:09] <jkk> :)
[03:16:32] <jkk> tried to register with one using voip nr - rejected :)
[03:16:35] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 250 seconds)
[03:17:15] <oldlaptop> pyzozord: I would expect most people to find python less unpleasant too
[03:17:32] <oldlaptop> I am no pip fan, but I hate it far less than the ant/gradle tribe
[03:18:21] *** Joins: ttree_ (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net)
[03:18:36] *** Joins: freakazoid343 (~matt@2603-9000-cf0f-80e3-74e9-183f-a719-d99e.inf6.spectrum.com)
[03:18:51] <oldlaptop> (no, ant wasn't the one... Maven, that was it)
[03:20:03] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[03:20:17] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:20:53] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[03:20:55] *** Quits: Kev_ (~Kev@2a01cb0400149f00417072b907469552.ipv6.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[03:21:22] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:74e9:183f:a719:d99e) (Ping timeout: 260 seconds)
[03:21:34] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:22:10] *** Quits: piou (~piou@24.20.201.77.rev.sfr.net) (Changing host)
[03:22:10] *** Joins: piou (~piou@user/piou)
[03:25:01] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[03:27:09] *** Quits: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[03:28:17] *** Joins: BorgoMatic_ (~KC0LR@2605:a601:ad80:7400:81b8:cb20:9a88:991e)
[03:28:21] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 256 seconds)
[03:29:00] *** Joins: AsenMx (~AsenMx@user/asenmx)
[03:30:51] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[03:31:30] *** Quits: BorgoMatic (~KC0LR@2605:a601:ad80:7400:81b8:cb20:9a88:991e) (Ping timeout: 265 seconds)
[03:31:46] *** Joins: BorgoMatic (~KC0LR@136.32.12.209)
[03:32:01] *** Quits: maxzor_ (~maxzor@2a01cb04054faa00a1d65d9892386c9b.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[03:32:03] *** Quits: Inari (~Pinkishu@p508ef170.dip0.t-ipconnect.de) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[03:32:07] *** Quits: gelignite (~gelignite@55d41c14.access.ecotel.net) (Quit: Stay safe!)
[03:32:29] *** Joins: hjf (~hjf@user/hjf)
[03:32:45] *** Quits: BorgoMatic_ (~KC0LR@2605:a601:ad80:7400:81b8:cb20:9a88:991e) (Ping timeout: 252 seconds)
[03:34:21] *** Joins: hjf__ (~hjf@user/hjf)
[03:34:26] *** Quits: maxzor (~maxzor@2a01cb04054faa0074db28cdec8759e4.ipv6.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[03:34:37] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:35:41] *** Quits: hjf_ (~hjf@user/hjf) (Ping timeout: 252 seconds)
[03:36:03] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[03:36:26] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[03:36:34] *** Quits: emf_ (~emf@2620:10d:c091:480::1:9cd9) (Read error: Connection reset by peer)
[03:36:37] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[03:36:47] *** Joins: emf (~emf@2603-6080-9403-11bf-0000-0000-0000-0009.res6.spectrum.com)
[03:37:53] *** Quits: hjf (~hjf@user/hjf) (Ping timeout: 252 seconds)
[03:38:06] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[03:39:27] *** Joins: jazzy (~jaziz@user/jaziz)
[03:44:10] *** Quits: lilgopher (~textual@2601:241:8000:38f0:a9b4:bc92:4840:3868) (Quit: Textual IRC Client: www.textualapp.com)
[03:44:29] *** Quits: inomoz (~inomoz@85.26.235.152) (Ping timeout: 252 seconds)
[03:46:12] *** Joins: jamea (~jamea@10.189-202-213.bestelclientes.com.mx)
[03:49:28] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:50:32] *** Quits: ttree_ (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net) (Quit: Leaving)
[03:50:51] *** Joins: ttree_ (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net)
[03:51:04] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[03:51:16] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[03:51:38] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[03:51:56] *** Quits: ttree_ (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net) (Remote host closed the connection)
[03:52:19] *** Quits: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net) (Quit: Leaving)
[03:54:37] *** Joins: xa0s (~xa0s@mab.sdf.org)
[03:56:26] *** Quits: emf (~emf@2603-6080-9403-11bf-0000-0000-0000-0009.res6.spectrum.com) (Quit: emf)
[03:57:29] *** Joins: inomoz (~inomoz@85.26.164.235)
[04:00:58] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[04:04:56] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:05:53] *** Quits: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk) (Quit: Leaving)
[04:06:51] *** Quits: piou (~piou@user/piou) (Ping timeout: 252 seconds)
[04:07:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[04:08:23] *** Joins: piou (~piou@24.20.201.77.rev.sfr.net)
[04:09:53] *** Joins: emf (~emf@2603-6080-9403-11bf-0000-0000-0000-0009.res6.spectrum.com)
[04:10:05] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[04:10:17] *** Quits: _inky (~inky_@46.36.116.208) (Ping timeout: 256 seconds)
[04:13:48] *** Joins: emf_ (~emf@2620:10d:c091:480::1:305b)
[04:14:47] *** Joins: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net)
[04:15:08] *** Quits: emf (~emf@2603-6080-9403-11bf-0000-0000-0000-0009.res6.spectrum.com) (Ping timeout: 268 seconds)
[04:15:11] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[04:15:25] *** Joins: flakland (~flaknet99@32.211.211.39)
[04:15:39] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[04:15:58] *** Joins: sonny (~sonny@2a09:bac0:14::806:90fc)
[04:16:53] *** Quits: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net) (Client Quit)
[04:20:05] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[04:20:17] *** Quits: BorgoMatic (~KC0LR@136.32.12.209) (Ping timeout: 250 seconds)
[04:22:06] *** Joins: Scottish-Guy (~user@87.74.192.32)
[04:23:08] *** Quits: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net) (Remote host closed the connection)
[04:24:03] *** Quits: piou (~piou@24.20.201.77.rev.sfr.net) (Changing host)
[04:24:03] *** Joins: piou (~piou@user/piou)
[04:24:50] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Ping timeout: 260 seconds)
[04:24:55] *** Quits: Pook (~Pook@2001:8a0:f996:1400:71fd:c83a:c1f3:231e) (Quit: Leaving)
[04:25:02] *** Quits: sonny (~sonny@2a09:bac0:14::806:90fc) (Ping timeout: 240 seconds)
[04:25:26] *** Quits: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de) (Remote host closed the connection)
[04:25:44] <Mangy_Dog> https://youtu.be/FxLrD4D4GGs   Part 2 is out :D
[04:25:45] <bayaz> Title: The Voyager Tricorder V2 - Part 2 
[04:26:35] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 250 seconds)
[04:28:55] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[04:29:39] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[04:29:48] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[04:30:24] *** Joins: Pixi (~Pixi@user/pixi)
[04:30:51] <kveroneau> Is KISS still a thing among developers these days?
[04:31:07] <jacekowski> no
[04:31:15] <kveroneau> Thought so. :(
[04:31:23] *** Joins: sonny (~sonny@2a09:bac0:14::806:90fc)
[04:31:25] <jacekowski> stackexchange is a thing though
[04:31:27] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[04:31:29] <kveroneau> I loved the principal behind KISS.  What happened?
[04:31:38] *** Joins: _inky (~inky_@46.36.116.208)
[04:31:44] <jacekowski> and copy&paste method (named after copy and paste)
[04:31:47] <flakland> simple is not good for jobsec
[04:31:56] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:32:12] <EdFletcher> it's a thing among _some_ developers, we adhere to it at our company pretty religiously (especially after bad experiences under the opposite regime!)
[04:32:40] <kveroneau> I was told to work on this codebase at work which was being developed by another developer, and they using this new buzzword called DI, which seems overly complicated for what they are trying to do.
[04:32:42] <flakland> also much harder to obscure exploitable code
[04:33:06] <EdFletcher> dependency injection yeah?
[04:33:09] <kveroneau> Yup
[04:33:29] <EdFletcher> yeah it's annoying at times, but it has its place at others, like any tool
[04:33:31] <EdFletcher> C#?
[04:33:38] <kveroneau> First time working with a stack made with DI, and it's extremely confusing to navigate the codebase at first.
[04:34:00] <kveroneau> The main app is C#, but they are using DI with a Python side-project.
[04:34:15] <EdFletcher> oh yeah it makes getting around the code a maze. and good luck trying to instantiate one of those objects by-hand, that's always a fun adventure.
[04:34:37] <kveroneau> That's one reason I never liked working with PHP codebases, was because trying to navigate it was like a maze. :(
[04:34:54] <EdFletcher> ah interesting, i'm much more used to seeing DI in C# codebases than others, but if they're predominantly a C# shop then it makes sense they'd take the paradigm to other languages
[04:35:22] <kveroneau> Yeah, I don't think Python was designed with DI in mind.
[04:35:23] <EdFletcher> oh well PHP is just a nightmare of ending depths, its not comparable to other sane languages like C# or python
[04:35:51] <EdFletcher> no python is definitely not designed with DI in mind, but you can add it (with varying amount of effort) to any language
[04:36:33] *** Quits: sonny (~sonny@2a09:bac0:14::806:90fc) (Ping timeout: 252 seconds)
[04:36:38] <EdFletcher> (and i'll just leave this here in case anyone wants to get uppity about my PHP bashing https://eev.ee/blog/2012/04/09/php-a-fractal-of-bad-design/)
[04:38:18] <EdFletcher> but kveroneau you'll get used to DI pretty quickly and then it's just another way of doing things, don't let it trip you up (you're always still allowed to be annoyed with it and gripe accordingly though)
[04:38:48] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:39:10] <flakland> i never heard of DI 
[04:39:15] <kveroneau> Thanks for the share EdFletcher, I always love reading articles like this. :D
[04:39:33] <flakland> is that like downloading a .so the program demands at runtime?
[04:39:39] <EdFletcher> haha sure thing kveroneau, it's one of my all-time faves so am always happy to share the joy 😃
[04:39:46] <kveroneau> flakland, I only just heard about it from my current job when I started on this new project.
[04:39:51] <EdFletcher> flakland: no
[04:40:10] <EdFletcher> https://en.wikipedia.org/wiki/Dependency_injection
[04:40:10] <bayaz> Title: Dependency injection - Wikipedia 
[04:42:03] *** Joins: sonny (~sonny@8.6.144.252)
[04:45:02] *** Quits: Matt|home (~matt@adsl-74-233-58-81.mia.bellsouth.net) (Quit: Leaving)
[04:49:03] <flakland> the service isn't required at runtime, or it is? i'm having trouble seeing how it's '''injected'''
[04:50:38] <EdFletcher> yeah the naming is... not great. it's a model of providing individual entities _within_ the software (classes, mostly) with their "dependencies" at runtime rather than them directly instantiating them themselves
[04:51:06] <flakland> sounds like another bog-standard type thing hard-depends on another thing
[04:51:38] *** Joins: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net)
[04:54:53] *** Quits: hexingb (~hexingb@2409:8900:2a51:d1b2:cd30:2c91:a219:1c33) (Ping timeout: 252 seconds)
[04:55:41] <flakland> i've decided to rename this pattern initialization obfuscator
[04:56:50] <PlanckWalk> At its core it is very simple, but it's easy to extend into some externally configurable monstrosity.
[04:57:02] <oldlaptop> EdFletcher: i.e. if Cars need an Engine, the Car constructor doesn't instantiate an engine, it requires an engine as an argument?
[04:57:26] <PlanckWalk> That's the simplest case, yes
[04:57:51] * oldlaptop shrugs and goes back to gleeful ignorance of The C# Way
[04:57:54] <EdFletcher> oldlaptop: yup bingo. and if Cars need 32 dependencies you guess it. it becomes awful quickly. obviously there are ways to organize yourself in the face of such situations, but i've actually seen constructors that take double-digit arguments. it's not great.
[04:58:23] <oldlaptop> I take it an "overloaded" no-argument constructor that provides defaults is Against The Way?
[04:58:38] <EdFletcher> indeed it is
[04:58:44] <PlanckWalk> It may also go to some ConfigurationFactoryProvider that supplies an Engine from some inscrutable source
[04:58:54] <EdFletcher> so have fun trying to instantiate these "by hand" yourself 😆
[04:59:28] <EdFletcher> yeah that's a common pattern PlanckWalk notes, but as also noted it just tends to obfuscate things further ("now I gotta find ConfigurationFactoryProvider too?!")
[04:59:49] <PlanckWalk> E.g. reading them from some config file, which itself may have some name configurable at runtime, and arguments listed in another configuration file to which that refers.
[05:00:09] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 256 seconds)
[05:00:11] <oldlaptop> I'm surprised the Java people didn't hit on that first.
[05:00:16] <EdFletcher> "magic" is accepted more often in C# shops than i've ever seen anywhere else. it's kinda infuriating.
[05:00:21] <oldlaptop> They're losing the race!
[05:00:28] <PlanckWalk> Java has had it for decades
[05:01:30] <PlanckWalk> E.g. Spring has been around for quite a long time.  Apparently not *quite* 2 decades.
[05:01:30] <oldlaptop> PlanckWalk: my (loose) idea of The Java Way involves the ability to pass something that implements StandardEngineInterface, or accept a default
[05:01:31] <kveroneau> Oh, I really hate when a language or framework uses "magic".
[05:02:00] <[itchyjunk]> I am being so undecisive.
[05:02:11] <oldlaptop> Probably through an incomprehensible inheritance chain such that you need to instantiate StandardDefaultSpringCarClass instead of Car /* fifteen levels up in the chain */ if you want the defaults
[05:02:13] <[itchyjunk]> Need a language to learn `datastructure and algorithms` type concepts
[05:02:21] <[itchyjunk]> argh
[05:02:38] <kveroneau> At first they make it sound like it's a good thing to have, but then when you actually sit down to use the darn thing, the magic just gets in the way to better understand how everything even works, and to troubleshoot issues during development.
[05:02:57] <EdFletcher> exactamundo
[05:03:03] <EdFletcher> debugging magic is the WORST
[05:03:04] <oldlaptop> (either that or you have to instantiate UltimateBaseRootCarClass instead of Car if you want to override something)
[05:03:24] <oldlaptop> kveroneau: less magic, more comprehension
[05:03:40] <EdFletcher> well said, i like that
[05:03:55] <kveroneau> Indeed.
[05:03:56] <flakland> every car must inherit from charriot
[05:04:03] <PlanckWalk> Half the time there's a whole custom annotationlanguage
[05:04:28] <PlanckWalk> And the meanings of the annotations depend upon more annotations
[05:04:29] <flakland> my engine factory should also create horses
[05:04:53] <oldlaptop> PlanckWalk: anyhow, I do take the point that Java does quite handily arrive at the ultimate goal of producing an inscrutable, and therefore enterprise-grade, mass
[05:04:53] <kveroneau> Come to think of, that's also why I prefer using Linux over Windows, just a wee bit less voodoo.  Like when Windows says it's updating, and it sits at 1% and magically jumps to 99%, then sits there for another 5 minutes, what's actually going on?
[05:05:09] *** Joins: pagnol (~user@014198154145.ctinets.com)
[05:05:36] <oldlaptop> I merely observe that this rigid adherence to The DI Way would expand their incomprehensibility horizons
[05:05:45] <kveroneau> I love being able to look under the hood and see everything running, and if something is broken, I want to be able to clearly see what's broken, and not need to endless search Google for an error code.
[05:06:36] <oldlaptop> kveroneau: this informs, for me, preferring openbsd to linux and tcl to python
[05:06:50] <kveroneau> It's like PHP error messages back in the day.  Did PHP ever fix how it displays it's errors?  I remember getting so frusturated over a weird error message and all that I missed was a closing quote somewhere.
[05:07:28] <kveroneau> oldlaptop, I used to use OpenBSD at version 3.5 in the early 2000s.
[05:07:43] <oldlaptop> less inscrutable stuff going on (though I'll admit there's a self-reinforcement problem with the latter: passing familiarity with tcl internals encourages further use of tcl and therefore further familiarity with the internals...)
[05:07:57] <Guest80> PHP programmers have the weirdest ideas about things
[05:08:05] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[05:08:23] <CoJaBo> kveroneau: Parse error: syntax error, unexpected T_PAAMAYIM_NEKUDOTAYIM on line ə
[05:08:33] *** Quits: src_ (~src@user/src) (Quit: Leaving)
[05:08:55] <oldlaptop> maybe cpython's approachable enough to perpetrate the same cycle in python programmers
[05:08:59] *** Quits: astroid (astroid@user/astroid) (Quit: IRCNow!)
[05:08:59] *** Quits: paulo (paulo@user/paulo/x-9032687) (Quit: ZNC 1.8.2 - https://znc.in)
[05:08:59] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (Quit: IRC Bouncer crashed ...)
[05:09:57] *** Quits: Scottish-Guy (~user@87.74.192.32) (Read error: Connection reset by peer)
[05:10:17] <kveroneau> CoJaBo :D
[05:10:23] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[05:10:39] *** Quits: inomoz (~inomoz@85.26.164.235) (Ping timeout: 252 seconds)
[05:10:39] <CoJaBo> kveroneau: They did fix that one a couple versions ago now lol
[05:11:11] <oldlaptop> (with that said... python is just more complicated in some ways - or should I say __complicated__)
[05:12:15] <kveroneau> oldlaptop, I didn't find the Python stacktraces difficult to understand where my error was.
[05:12:26] <oldlaptop> It definitely doesn't have *that* problem.
[05:12:35] <pagnol> does anyone happen to be aware of a scripting language like Lua or Guile that can be embedded in another application and whose vm state can be easily serialized to be later deserialized so that execution can resume?
[05:12:49] <CoJaBo> Mostly, anyway PHP Parse error:  syntax error, unexpected '::' (T_PAAMAYIM_NEKUDOTAYIM), expecting end of file in Command line code on line 1
[05:13:24] <kveroneau> PHP errors give me literal migrains.
[05:14:15] *** Quits: sonny (~sonny@8.6.144.252) (Ping timeout: 250 seconds)
[05:14:36] <kveroneau> There should be like a standard for how all languages display errors during runtime.
[05:15:01] <flakland>  stderr ?
[05:15:04] <kveroneau> haha
[05:15:05] <oldlaptop> kveroneau: (also in case it's not clear I don't mean to say python is more complicated than php, I mean to say it is more complicated than tcl - much less stuff going on, at least at a script-programmer's level)
[05:15:36] <oldlaptop> I imagine it is also more complicated than, say, lua. (Need to play with lua sometime.)
[05:16:32] <kveroneau> Python isn't that complicated.  It's been awhile since I tried using either TCL or Lua.  I used a version of Lua on PalmOS back in the day called Plua, but that was about it.
[05:17:10] *** Joins: dawnbreak (~dawn@119.61.27.20)
[05:17:13] <CoJaBo> I hat Python
[05:17:16] <oldlaptop> It has this concept called "types", that makes it categorically more complicated than tcl :P
[05:17:28] <kveroneau> Can't even find a download for Plua anywhere to put into POSE to at least see what I was using back then.  It's like all traces of Plua have been removed from the Internet. :(
[05:17:49] <CoJaBo> PHP types are fun, but impossible to migrate to from legacy cod
[05:18:29] <oldlaptop> python is definitely nowhere *near* as bad as it could be, especially for something with so much... how to say that diplomatically? "enterprise penetration"
[05:18:36] <kveroneau> Python 3.x added types, and this codebase I am working on decided to use types everywhere, and I'm not really used to even seeing types in Python.
[05:18:57] <CoJaBo> oldlaptop: It's Enterprisey!
[05:19:40] <oldlaptop> kveroneau: python2 doesn't have type annotations, but it has *types*
[05:19:45] *** Joins: sonny (~sonny@8.6.144.252)
[05:19:54] *** Quits: sonny (~sonny@8.6.144.252) (Client Quit)
[05:20:03] <oldlaptop> there is a difference between 2 and "2" and [2] and (2)
[05:20:11] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 252 seconds)
[05:20:15] <kveroneau> Ah, yes, type annotations is what I meant.  I'm not used to seeing those in Python code.
[05:21:15] <CoJaBo> Typing in PHP is awful
[05:21:54] <oldlaptop> tcl *does* have a difference between 2 and "2" and [2] and (2), I suppose, technically... (those are all different strings, after all!)
[05:22:07] <CoJaBo> In 8.0, they changed the way comparisons between non-numeric strings and numbers are broken, rather than making that an error.
[05:22:16] <oldlaptop> (okay, the second one is just the first one quoted, so those are the same)
[05:22:34] <oldlaptop> CoJaBo: :(
[05:23:02] <kveroneau> Any language which originally used weak typing that later adds strong typing isn't going to be the best experience.
[05:23:38] <oldlaptop> I would go further and suggest that you should have real, serious types, or none at all
[05:23:48] *** Joins: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[05:24:02] <oldlaptop> if you're not going to be haskell, and you're not even going to be C, the irritation/benefit ratio starts going downhill
[05:24:03] <kveroneau> Strong typing is also better suited to compiled languages, not scripting languages so much.  The main advantage of a scripting language is the weak typing.
[05:24:04] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:24:39] *** Joins: inomoz (~inomoz@83.149.21.102)
[05:25:58] <kveroneau> Python has many support functions like isinstance() among others to check parameters if needed for a specific type.  And when I used Python 2.x which didn't have strong typing, I never ran into many weird issues where it effected anything.
[05:27:01] <kveroneau> I just properly read the documentation for the module or class I was using to know what the proper parameter to pass were, and called it a day.
[05:27:10] <CoJaBo> For several of my apps, the worst bugs are caused by typing errors D=
[05:28:10] *** Joins: Garb0 (~Garb0@user/garb0)
[05:28:29] <kveroneau> The Python documentation is amazing, and when using an IDE, it basically guides you alone when passing parameters, as it usually puts the docstring into a nice pop-up to explain what parameter types you should be passing in.
[05:28:30] <CoJaBo> strict typing turns most of those into crashes, but there's no way to turn them into warnings lol. Also, some stupid things like the comparison thing are still horrifically broken
[05:28:40] <kveroneau> s/alone/along/
[05:28:48] <oldlaptop> python *definitely* does documentation well
[05:29:06] *** Quits: premultiplied (~premultip@69.84.6.130) (Quit: WeeChat 3.3)
[05:29:21] <kveroneau> More projects need to learn from Python's documentation. :D
[05:29:22] <flakland> crashes? it shouldn't compile if types mismatch
[05:29:43] *** Joins: sonny (~sonny@8.6.144.252)
[05:29:57] <oldlaptop> flakland: I gather CoJaBo is still talking about php.
[05:30:18] <flakland> php has types!?
[05:30:59] <oldlaptop> that has always been a major problem with php, that it has types and does nothing useful with them, like using them to prove things about the program
[05:31:06] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 260 seconds)
[05:31:07] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[05:31:33] <Themis3000> The one thing I'll say that I love about strongly typed languages is you'll know about type mismatching at compile time instead of running into it later. It helps prevent future mistakes. That being said I do tend to stick to python anyways. I can at least enjoy the type hinting that's provided that helps a bit
[05:31:47] <oldlaptop> (and, worse, it doesn't even use them to turn undesirable conditions into crashes or diagnostics so you'll see them)
[05:31:47] *** Quits: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au) (Ping timeout: 250 seconds)
[05:31:57] *** Joins: astroid (astroid@astroid.jujube.ircnow.org)
[05:31:57] *** Quits: astroid (astroid@astroid.jujube.ircnow.org) (Changing host)
[05:31:57] *** Joins: astroid (astroid@user/astroid)
[05:32:05] *** Joins: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de)
[05:32:41] <Themis3000> It's more work up front but it does force you to document stuff and it is doing a favor to your future self
[05:32:56] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[05:32:57] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[05:33:56] *** Quits: jkk (~jkk@213.180.39.162) (Quit: Leaving)
[05:34:13] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[05:34:50] *** Quits: xff0x (~xff0x@2001:1a81:5283:7b00:fc6:4766:ca7:9337) (Ping timeout: 260 seconds)
[05:35:01] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[05:35:40] *** Joins: img (~img@user/img)
[05:35:57] *** Quits: jamea (~jamea@10.189-202-213.bestelclientes.com.mx) (Ping timeout: 252 seconds)
[05:36:20] *** Joins: xff0x (~xff0x@2001:1a81:52c4:9100:e535:171:40b4:8c54)
[05:36:25] *** Joins: Garb00 (~Garb0@user/garb0)
[05:38:18] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[05:38:53] *** Quits: sonny (~sonny@8.6.144.252) (Ping timeout: 252 seconds)
[05:38:53] *** Quits: Garb0 (~Garb0@user/garb0) (Ping timeout: 252 seconds)
[05:41:11] *** Joins: stagas (~stagas@2a02:587:c40e:fc00:9032:5378:6dae:cb94)
[05:42:22] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Lost terminal)
[05:42:36] *** Quits: TCZ (~tcz@91.150.178.124) (Read error: Connection reset by peer)
[05:44:20] *** Joins: TCZ (~tcz@91.150.178.124)
[05:50:39] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[05:53:04] *** Joins: paulo (paulo@user/paulo/x-9032687)
[05:53:21] *** Joins: Guest64873 (~bot@172-220-180-248.res.spectrum.com)
[05:53:31] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[05:54:37] *** Quits: Guest64873 (~bot@172-220-180-248.res.spectrum.com) (Read error: Connection reset by peer)
[05:55:51] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[05:56:20] *** Joins: fe23 (~fe23@2409:8a34:468:83d0:290a:bdd7:f2cf:4d59)
[05:57:57] *** Joins: job (~job@wikimedia-commons/pandakekok9)
[05:59:02] *** Joins: junebug (~junebug@2600:1700:3db0:2540:96f9:e302:cde6:c8b)
[06:00:34] *** Quits: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net) (Quit: Connection closed)
[06:00:42] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Quit: Leaving)
[06:01:42] *** Garb00 is now known as Garb0
[06:03:10] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[06:03:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:04:11] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 252 seconds)
[06:04:29] *** akevinhuang2 is now known as akevinhuang
[06:05:50] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[06:05:54] *** Joins: Garb00 (~Garb0@user/garb0)
[06:06:42] *** Joins: aliosablack (~chomwitt@94.66.63.187)
[06:07:20] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[06:08:23] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[06:08:25] *** Quits: Garb0 (~Garb0@user/garb0) (Ping timeout: 250 seconds)
[06:08:37] *** Quits: chomwitt (~chomwitt@2a02:587:dc0d:3700:12c3:7bff:fe6d:d374) (Ping timeout: 250 seconds)
[06:08:50] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[06:10:03] *** Joins: freakazoid12345 (~matt@2603-9000-cf0f-80e3-b584-44f5-72b6-6bbf.inf6.spectrum.com)
[06:10:56] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:11:02] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 240 seconds)
[06:11:15] *** brabrax_ is now known as brabrax
[06:13:23] *** Quits: freakazoid343 (~matt@2603-9000-cf0f-80e3-74e9-183f-a719-d99e.inf6.spectrum.com) (Ping timeout: 250 seconds)
[06:13:49] *** Quits: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net) (Ping timeout: 256 seconds)
[06:17:32] *** Quits: Garb00 (~Garb0@user/garb0) (Ping timeout: 240 seconds)
[06:22:43] *** Joins: murii (~murii@2a02:a58:835a:1100:dd41:deff:1841:342)
[06:23:27] *** Quits: flakland (~flaknet99@32.211.211.39) (Remote host closed the connection)
[06:23:47] *** Joins: scoobydoob (~scooby@user/scoobydoo)
[06:25:57] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[06:26:38] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 260 seconds)
[06:26:46] *** scoobydoob is now known as scoobydoo
[06:26:51] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[06:27:34] *** Quits: murii (~murii@2a02:a58:835a:1100:dd41:deff:1841:342) (Ping timeout: 260 seconds)
[06:27:47] *** Joins: EdFletcher (~PKD@user/edfletcher)
[06:30:30] *** Quits: EdFletcher (~PKD@user/edfletcher) (Client Quit)
[06:30:36] *** Joins: Jong (~Jong@2620:10d:c090:400::5:3f74)
[06:30:46] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[06:30:49] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Quit: Leaving)
[06:31:21] *** Quits: TCZ (~tcz@91.150.178.124) (Quit: Leaving)
[06:31:47] *** Joins: sonny (~sonny@8.6.144.252)
[06:32:02] *** Joins: EdFletcher (~PKD@user/edfletcher)
[06:32:27] *** Quits: xff0x (~xff0x@2001:1a81:52c4:9100:e535:171:40b4:8c54) (Ping timeout: 250 seconds)
[06:34:27] *** Joins: password (~password8@user/password2)
[06:34:32] *** Joins: xff0x (~xff0x@2001:1a81:52ce:1300:ffd2:54e0:463d:d772)
[06:34:41] *** Joins: zaher__ (~zaher@37.48.187.253)
[06:34:56] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[06:37:06] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:b584:44f5:72b6:6bbf)
[06:38:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[06:38:11] *** Quits: zaher_ (~zaher@46.58.213.37) (Ping timeout: 256 seconds)
[06:39:32] *** Quits: freakazoid12345 (~matt@2603-9000-cf0f-80e3-b584-44f5-72b6-6bbf.inf6.spectrum.com) (Ping timeout: 240 seconds)
[06:40:02] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[06:42:43] *** Joins: ejjfunky (~ejjfunky@125.163.60.19)
[06:43:43] *** zaher__ is now known as zaher
[06:45:24] *** Quits: pulse (~pulse@user/pulse) (Quit: My hovercraft is full of eels)
[06:52:01] *** Quits: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com) (Ping timeout: 245 seconds)
[06:52:54] *** Joins: BorgoMatic (~KC0LR@2605:a601:ad80:7400:39f8:2cda:5ea0:712d)
[06:56:24] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Remote host closed the connection)
[06:59:17] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:b584:44f5:72b6:6bbf)
[06:59:21] *** Joins: Smeef (~deathonat@2603-7000-e206-3fd8-e93e-61eb-154b-0eb2.res6.spectrum.com)
[06:59:21] *** Quits: Smeef (~deathonat@2603-7000-e206-3fd8-e93e-61eb-154b-0eb2.res6.spectrum.com) (Changing host)
[06:59:21] *** Joins: Smeef (~deathonat@user/smeef)
[07:00:02] *** Quits: akevinhuang (~thekevinh@user/thekevinhuang) (Ping timeout: 240 seconds)
[07:01:29] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:b584:44f5:72b6:6bbf) (Ping timeout: 250 seconds)
[07:02:10] *** vinleod is now known as vdamewood
[07:03:31] *** Joins: soapsudsxx (~soapsudsx@209.221.40.158)
[07:04:36] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:b584:44f5:72b6:6bbf)
[07:05:47] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:b584:44f5:72b6:6bbf) (Ping timeout: 252 seconds)
[07:07:30] *** Joins: jamea (~jamea@177.239.81.39)
[07:11:56] *** Quits: sonny (~sonny@8.6.144.252) (Quit: Going offline, see ya! (www.adiirc.com))
[07:14:02] *** Quits: paulo (paulo@user/paulo/x-9032687) (Remote host closed the connection)
[07:14:02] *** Quits: astroid (astroid@user/astroid) (Remote host closed the connection)
[07:14:03] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (Remote host closed the connection)
[07:16:01] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[07:17:02] *** Quits: zaher (~zaher@37.48.187.253) (Ping timeout: 260 seconds)
[07:18:05] *** Joins: skepta (~eric2@36.77.236.126)
[07:25:26] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 260 seconds)
[07:25:47] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[07:27:07] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Client Quit)
[07:27:20] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[07:31:05] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[07:33:00] *** Joins: astroid (astroid@astroid.jujube.ircnow.org)
[07:33:00] *** Quits: astroid (astroid@astroid.jujube.ircnow.org) (Changing host)
[07:33:00] *** Joins: astroid (astroid@user/astroid)
[07:34:14] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[07:35:09] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Client Quit)
[07:36:23] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 250 seconds)
[07:37:53] <beaky> its been 4 days and i am still stuck in day 11 of advent of code
[07:38:03] *** Quits: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com) (Ping timeout: 252 seconds)
[07:38:13] <yitz> I'm pretty sure you can skip if you want
[07:38:30] <yitz> there's also the AOC help channel
[07:38:43] <beaky> woah nice ill check out that aoc channel then
[07:39:13] <beaky> the puzzle involves fixed points but then how do i prove how deep i must go for the least fixed point
[07:39:18] <yitz> #adventofcode and #adventofcode-help and #adventofcode-spoilers 
[07:40:09] <yitz> part two? count steps until it's all 0s
[07:40:58] <beaky> nice so its part 1 i gotta figure out then
[07:41:04] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[07:41:13] <beaky> then once i figure out part 1 instead of counting flashses i count steps
[07:41:30] <yitz> Update all points. Handle flashes and neighbors. Repeat.
[07:41:47] <yitz> #adventofcode-help might be better for this
[07:43:11] *** Quits: junebug (~junebug@2600:1700:3db0:2540:96f9:e302:cde6:c8b) (Ping timeout: 252 seconds)
[07:44:03] *** Quits: inhahe (inhahe@107-213-219-122.lightspeed.miamfl.sbcglobal.net) ()
[07:44:26] *** Joins: Kuleshov (Kuleshov@46.138.252.54)
[07:44:55] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[07:45:12] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[07:45:22] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:45:29] *** Joins: sonny (~sonny@8.6.144.252)
[07:45:44] *** Quits: anthk_ (~anthk@92.176.105.30) (Ping timeout: 265 seconds)
[07:46:24] <sonny> does business that involve software always require a lot of R&D
[07:47:16] <dodo> which business doesn't involve software?
[07:48:07] <yitz> writing software is often D of R&D
[07:49:44] *** Joins: jwillia3 (~jwillia3_@205.178.41.133)
[07:51:24] *** Joins: pavonia (~user@user/siracusa)
[07:52:00] *** Joins: jamea (~jamea@177.239.81.39)
[07:52:16] <sonny>  yitz: I see, how you do usually justify the costs?
[07:52:44] <sonny> or, maybe that's too broad
[07:53:23] <yitz> revenue numbers
[07:53:51] <sonny> ok, I think I get it
[07:54:06] *** Joins: paulo (paulo@user/paulo/x-9032687)
[07:54:34] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[07:55:30] <sonny> so you make a game that cost $1, you say potential revenue is 1M if 1M units are sold
[07:56:05] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[07:56:07] <sonny> development costs will be a fraction of this value
[07:58:09] <sonny> which seems to only be measureable in loc and time
[07:58:15] <sonny> and hardware
[07:59:48] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[08:01:49] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[08:02:02] <sonny> can you do saas without membership? e.g anonymous services
[08:03:53] *** Quits: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 250 seconds)
[08:06:47] *** Quits: kmh (~kmh@2a00:6020:5004:6800:8408:cfde:c018:df22) (Read error: Connection reset by peer)
[08:07:00] *** Joins: kmh (~kmh@2a00:6020:5004:6800:8408:cfde:c018:df22)
[08:08:01] *** Joins: scoobydoob (~scooby@user/scoobydoo)
[08:08:51] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 252 seconds)
[08:08:58] *** scoobydoob is now known as scoobydoo
[08:10:33] *** Quits: soapsudsxx (~soapsudsx@209.221.40.158) (Ping timeout: 256 seconds)
[08:11:49] *** Joins: Burgundy (~yomon@79.115.213.171)
[08:15:49] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 252 seconds)
[08:18:01] *** Quits: password (~password8@user/password2) (Ping timeout: 252 seconds)
[08:18:26] *** Joins: frost (~frost@user/frost)
[08:19:56] <amigojapan> Sonny maybe go to ##business
[08:20:29] <sonny> ok
[08:22:47] *** Quits: jamea (~jamea@177.239.81.39) (Ping timeout: 252 seconds)
[08:26:27] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[08:27:05] *** Quits: ravan (~ravan@user/ravan) (Read error: No route to host)
[08:27:33] *** Joins: chives (~chives@64.130.100.177)
[08:27:39] <chives> Yall know a way to parse video files for interesting details?
[08:29:40] *** Joins: soapsudsxx (~soapsudsx@141.193.188.130)
[08:30:17] *** Joins: teut (~teut@2401:4900:1c30:1de4:f19d:3f97:1aa3:ecb1)
[08:31:49] *** Joins: Atque (~Atque@user/atque)
[08:32:41] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) (Ping timeout: 252 seconds)
[08:33:04] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[08:34:42] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:39:23] *** Joins: ravan (~ravan@user/ravan)
[08:42:31] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[08:43:01] <sonny> ffmpeg probably
[08:44:16] *** Joins: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net)
[08:44:36] *** Joins: tangyQED (~tangy@user/tangy)
[08:48:31] *** Quits: tangy (~tangy@user/tangy) (Ping timeout: 256 seconds)
[08:50:24] *** Quits: kveroneau (kveroneau@node1.veroneau.net) (Quit: Follow my Nick on Twitter and YouTube!)
[08:52:29] *** Quits: b1101 (~b1101@pool-100-33-96-155.nycmny.fios.verizon.net) (Quit: b1101)
[08:52:43] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[08:59:19] *** Joins: allegorical_ (~guest@2607:fea8:33e0:65c:806:f743:978d:d8d7)
[08:59:47] *** Quits: soapsudsxx (~soapsudsx@141.193.188.130) (Ping timeout: 250 seconds)
[09:00:20] <dawnbreak> ok
[09:02:45] *** Quits: allegorical_- (~guest@2607:fea8:33e0:65c:ccc3:d475:4cb9:7737) (Ping timeout: 252 seconds)
[09:02:53] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[09:02:55] *** Joins: Duchess (~Duchess@2604:3d08:1:1b:564:6e0:6753:4df1)
[09:03:55] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[09:06:13] *** Quits: X-Scale (~ARM@206.46.158.5.rev.vodafone.pt) (Ping timeout: 240 seconds)
[09:06:25] *** Joins: murii (~murii@2a02:a58:835a:1100:dd41:deff:1841:342)
[09:07:09] *** Joins: X-Scale (~ARM@31.22.202.86)
[09:07:53] *** Quits: jwillia3 (~jwillia3_@205.178.41.133) (Ping timeout: 252 seconds)
[09:08:55] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[09:09:28] *** Joins: node1 (~hex@user/node1)
[09:19:31] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[09:19:40] *** Joins: mli (~mli@user/mli)
[09:21:47] *** Joins: user51 (~user51@176.228.151.30)
[09:22:19] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[09:22:44] *** Quits: BorgoMatic (~KC0LR@2605:a601:ad80:7400:39f8:2cda:5ea0:712d) (Ping timeout: 252 seconds)
[09:26:43] *** Quits: sonny (~sonny@8.6.144.252) (Quit: Going offline, see ya! (www.adiirc.com))
[09:28:17] *** Quits: mli (~mli@user/mli) (Quit: Leaving)
[09:28:48] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[09:38:12] *** Joins: dunkeln (~dunkeln@117.239.210.100)
[09:38:12] *** Quits: dunkeln (~dunkeln@117.239.210.100) (Changing host)
[09:38:12] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[09:38:19] *** Quits: audiocat (~audio@user/audio) (Ping timeout: 252 seconds)
[09:51:04] *** Joins: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr)
[09:51:33] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[09:53:35] *** Joins: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net)
[09:58:57] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[09:59:15] *** Quits: Duchess (~Duchess@2604:3d08:1:1b:564:6e0:6753:4df1) (Ping timeout: 256 seconds)
[10:00:19] *** Joins: Duchess (~Duchess@2604:3d08:1:1b:564:6e0:6753:4df1)
[10:00:33] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[10:02:21] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[10:06:17] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[10:08:23] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 252 seconds)
[10:08:52] *** Joins: Enitin (~Enitin@82.102.22.85)
[10:11:30] *** Joins: devz3ro (devz3ro2@2a00:1838:37:271::46d9)
[10:13:53] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Ping timeout: 252 seconds)
[10:15:09] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[10:16:05] *** Quits: skepta (~eric2@36.77.236.126) (Ping timeout: 252 seconds)
[10:19:25] <decker> 'but at the opposite same-pole'  I really need a word for the same orientation with a different (antipodal) coordinate.    like (0,pi,0) and (0,-pi,0)   (1,pi,1) and (-1,-pi,-1) result in the same orientation, but are themselves reflected around the origin.  The poles still result in a polar type behavior around those points too.
[10:20:27] <decker> and I don't know where to ask.  #physics is #QM #EFE #GR whitewash; #math is occupied more with the nature of the numbers than applications of those numbers
[10:20:44] <decker> #programmers tell me to go use some pre-canned library
[10:21:11] *** Joins: skepta (~eric2@36.77.236.126)
[10:21:43] *** Quits: moose (~moose@user/moose) (Quit: System has requested shutdown for maintenance.)
[10:22:13] <decker> some of these open forums on like new theories of everything - unfortunatly there is more of a tendancy to have an empphasis on 'the soul of the electron'... and empowerment of the consciousness to affect reality... 
[10:22:48] <dabow_ramone> so, you need to plot a fuction with those coordinates?
[10:23:25] <decker> http://mathb.in/68358 those are example coordinates of this function
[10:23:26] <bayaz> Title: MathB.in - Math pastebin with LaTeX and Markdown support 
[10:23:44] *** dabow_ramone is now known as AlteredBeast
[10:23:59] <decker> https://ibb.co/XkQtXbm which looks like this
[10:24:00] <bayaz> Title: image 
[10:24:44] *** Quits: murii (~murii@2a02:a58:835a:1100:dd41:deff:1841:342) (Remote host closed the connection)
[10:25:13] <decker> what I want is to write documentation; human readable explanation of said function
[10:25:31] *** Joins: Rounin (~david@84.212.130.215)
[10:25:34] *** Joins: murii (~murii@2a02:a58:835a:1100:dd41:deff:1841:342)
[10:27:03] <AlteredBeast> nice
[10:27:12] <AlteredBeast> beatiful images, by the way
[10:27:40] <decker> https://d3x0r.github.io/STFRPhysics/3d/indexSphereMap3.html sometimes more than an image is better
[10:27:41] <bayaz> Title: Rotation Space Explorer 
[10:27:50] <decker> (need to fix that <title>)
[10:28:22] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[10:28:44] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[10:31:10] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 260 seconds)
[10:32:17] <AlteredBeast> amazing
[10:32:41] *** Quits: teut (~teut@2401:4900:1c30:1de4:f19d:3f97:1aa3:ecb1) (Ping timeout: 256 seconds)
[10:33:43] *** Joins: moose (~moose@user/moose)
[10:34:00] *** Joins: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk)
[10:34:12] *** Joins: swinnenb (~swinnenb@user/swinnenb)
[10:38:13] *** Joins: audio (~audio@user/audio)
[10:38:40] <decker> generally pretty good for just trash JS :) super inefficient (not microoptimized)
[10:39:13] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[10:39:36] *** Quits: devz3ro (devz3ro2@2a00:1838:37:271::46d9) (Changing host)
[10:39:36] *** Joins: devz3ro (devz3ro2@user/devz3ro)
[10:42:18] *** Joins: braun (~MaghOz@212095005067.public.telering.at)
[10:42:20] *** Joins: maxzor (~maxzor@2a01cb04054faa0074db28cdec8759e4.ipv6.abo.wanadoo.fr)
[10:42:22] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[10:46:32] *** Quits: breavyn_ (~breavyn@user/breavyn) (Ping timeout: 240 seconds)
[10:47:12] *** Joins: breavyn (~breavyn@user/breavyn)
[10:52:15] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[10:53:25] *** Joins: Enitin (~Enitin@82.102.22.85)
[10:55:14] <decker> Oops forgot I still hadn't removed that expirimental transform that warped the sphere... (should be fixed in a few minutes)
[10:57:09] *** Joins: dunkeln (~dunkeln@150.129.114.218)
[10:57:09] *** Quits: dunkeln (~dunkeln@150.129.114.218) (Changing host)
[10:57:09] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[10:57:09] *** Joins: spine-o-saurus (~snake@2602:48:a06d:880c:50e2:f7cc:6af8:57d3)
[10:59:09] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[11:04:26] *** Joins: EdFletcher (~PKD@user/edfletcher)
[11:04:29] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[11:05:02] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[11:05:20] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:10:54] *** Joins: Enitin (~Enitin@82.102.22.84)
[11:11:34] *** Joins: maxzor_ (~maxzor@2a01cb04054faa00a1d65d9892386c9b.ipv6.abo.wanadoo.fr)
[11:13:05] <beaky> i love rust
[11:14:01] <decker> iron rust or aluminum rust?
[11:14:07] *** Joins: mrig (~AdiIRC@user/mrig)
[11:16:51] *** Joins: Geronimo5 (~Geronimo@user/geronimo)
[11:17:21] <beaky> the rust fungus
[11:17:31] <beaky> the origin of rust's name
[11:18:07] *** Quits: tangyQED (~tangy@user/tangy) (Remote host closed the connection)
[11:18:09] *** Joins: majors_ (~majors@user/majors)
[11:18:15] *** Quits: dfg (~dfg@user/dfg) (Ping timeout: 250 seconds)
[11:18:25] *** Joins: mxmystery7 (~kc@c-76-121-63-31.hsd1.wa.comcast.net)
[11:18:25] *** Quits: DALEK-SEC (~dalek@vps.exterminate.pathweb.org) (Ping timeout: 252 seconds)
[11:18:31] *** Joins: dfg (dfg@2600:3c00::f03c:92ff:feb4:be75)
[11:18:31] *** Quits: dfg (dfg@2600:3c00::f03c:92ff:feb4:be75) (Changing host)
[11:18:31] *** Joins: dfg (dfg@user/dfg)
[11:19:07] *** Quits: Geronimo (~Geronimo@user/geronimo) (Ping timeout: 250 seconds)
[11:19:07] *** Geronimo5 is now known as Geronimo
[11:19:09] *** Quits: majors (~majors@user/majors) (Ping timeout: 252 seconds)
[11:20:14] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[11:21:43] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 250 seconds)
[11:21:55] *** Joins: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com)
[11:24:03] *** Joins: Enitin (~Enitin@82.102.22.85)
[11:24:12] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:24:54] *** Quits: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net) (Quit: Leaving)
[11:26:37] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 256 seconds)
[11:27:05] *** Quits: nshire (~nshire@user/nshire) (Quit: Leaving)
[11:28:19] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 252 seconds)
[11:29:09] *** Quits: Enitin (~Enitin@82.102.22.85) (Read error: Connection reset by peer)
[11:29:56] *** Joins: Enitin (~Enitin@82.102.22.85)
[11:31:42] *** Quits: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[11:31:58] *** Joins: JCHammons[m] (~jchbitmas@2001:470:69fc:105::8350)
[11:32:19] *** Joins: murii_ (~murii@2a02:a58:835a:1100:dd41:deff:1841:342)
[11:32:30] *** Joins: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr)
[11:34:41] *** Quits: murii (~murii@2a02:a58:835a:1100:dd41:deff:1841:342) (Read error: Connection reset by peer)
[11:35:02] *** Quits: xsperry (~xs@user/xsperry) (Ping timeout: 240 seconds)
[11:35:28] *** Quits: jelly (jelly@user/jelly) (Read error: Connection reset by peer)
[11:35:54] *** Quits: hololeap_ (~hololeap@user/hololeap) (Ping timeout: 276 seconds)
[11:36:20] *** Joins: hololeap_ (~hololeap@user/hololeap)
[11:37:03] <user51> http://sprunge.us/kbfqLc
[11:37:07] <user51> python is fun!
[11:39:05] <user51> probably nt doing it right, tho
[11:39:12] <mxmystery7> risky click of the day
[11:39:19] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[11:39:40] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[11:39:58] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[11:40:04] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[11:40:18] <user51> heh, why?
[11:41:21] *** Joins: nshire (~nshire@user/nshire)
[11:42:58] *** Joins: jelly (~me@user/jelly)
[11:44:19] *** Joins: aradesh (~aradesh@user/aradesh)
[11:46:50] *** Quits: spine-o-saurus (~snake@2602:48:a06d:880c:50e2:f7cc:6af8:57d3) (Quit: Yippy-ki-yay)
[11:48:47] *** Joins: operateur (~operateur@91.143.220.230)
[11:48:51] *** Quits: Kuleshov (Kuleshov@46.138.252.54) (Read error: Connection reset by peer)
[11:48:58] *** Joins: Kuleshov (Kuleshov@46.138.252.54)
[11:49:23] *** Quits: Kuleshov (Kuleshov@46.138.252.54) (Read error: Connection reset by peer)
[11:49:43] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:50:21] *** Joins: palasso (~palasso@user/palasso)
[11:51:35] <Themis3000> user51: python is fun! When did you start out?
[11:51:49] <user51> today
[11:52:57] <user51> i'm just experimentnig for now
[11:54:03] <Themis3000> Cool! Well good luck on your journeys!
[11:54:13] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[11:54:38] <user51> thanks!
[11:54:45] *** Joins: Enitin (~Enitin@82.102.22.85)
[11:57:10] *** Joins: Klinda (~superleag@user/klinda)
[12:00:02] *** Quits: mxmystery7 (~kc@c-76-121-63-31.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[12:00:41] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[12:03:02] *** Quits: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi) (Ping timeout: 240 seconds)
[12:06:33] *** Joins: menace (~someone@ppp-93-104-175-20.dynamic.mnet-online.de)
[12:06:43] *** Quits: menace (~someone@ppp-93-104-175-20.dynamic.mnet-online.de) (Changing host)
[12:06:43] *** Joins: menace (~someone@user/menace)
[12:06:45] *** menace is now known as Deknos
[12:06:46] *** Joins: loganlee (~Thunderbi@user/loganlee)
[12:07:55] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[12:08:08] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:545:ac7:9d35:9c30)
[12:09:39] *** Quits: loganlee (~Thunderbi@user/loganlee) (Client Quit)
[12:09:49] *** Quits: fe23 (~fe23@2409:8a34:468:83d0:290a:bdd7:f2cf:4d59) (Read error: Connection reset by peer)
[12:09:50] *** Quits: Themis3000 (~Thunderbi@user/themis3000) (Quit: Themis3000)
[12:09:58] *** Joins: jaysicks (~jaysicks@178-164-221-3.pool.digikabel.hu)
[12:10:50] *** Joins: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au)
[12:10:56] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:15:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:16:00] *** Joins: fe23 (~fe23@2409:8a34:468:83d0:290a:bdd7:f2cf:4d59)
[12:18:06] *** Joins: Enitin (~Enitin@82.102.22.86)
[12:19:44] <mercenary> disappointing. day 15 seems plain "implement Dijkstra's algorithm"
[12:23:52] *** Joins: x-x (~x@user/x-x)
[12:29:45] <beaky> nice im still on day 12
[12:29:51] <beaky> was stuck for 4 days on day 11
[12:31:01] *** Quits: inomoz (~inomoz@83.149.21.102) (Ping timeout: 252 seconds)
[12:31:45] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[12:33:11] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[12:34:17] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:38:28] *** Quits: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net) (Remote host closed the connection)
[12:38:56] *** Quits: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com) ()
[12:39:23] *** Joins: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com)
[12:39:51] <pyzozord> the days are becoming tougher
[12:40:17] <pyzozord> day 15 part one is more or less at the end of what I can do
[12:40:19] <Stefan26> is there really no more compact way in python do increment each item in a list "mylist" than list(map(lambda x:x+1, mylist))
[12:40:49] <pyzozord> you can do [x+1 for x in mylist]
[12:43:37] *** Joins: inomoz (~inomoz@85.26.165.145)
[12:43:49] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[12:45:48] <beaky> yes all the puzzles use 2d arrays which agda is not very good at 
[12:46:02] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[12:46:09] <beaky> so for those puzzles i use rust my other favorite programming language
[12:49:21] <beaky> rust has arrays built into the language
[12:49:34] <pyzozord> yeah not sure if every year is like that but this year seems kind of biased for 2d and graph puzzles
[12:49:57] <beaky> lol
[12:51:00] <pyzozord> What? Did I say something funny? :P
[12:52:43] <beaky> yeah it does seem like theres alot of 2d and graph puzzles
[12:52:59] <beaky> 2 data structures that agda is not very good at
[12:54:32] <beaky> tho agda has trees in the stdlib maybe i should finally try to use it https://agda.github.io/agda-stdlib/README.Data.Tree.AVL.html
[12:54:34] <bayaz> Title: README.Data.Tree.AVL 
[12:55:33] *** Quits: sh1r4s3 (~sh1r4s3@109.252.75.9) (Ping timeout: 265 seconds)
[12:55:41] <pyzozord> sounds like could be a good idea
[12:56:18] <pyzozord> oh i just learned that avl tree is bst but self balancing
[12:56:18] <beaky> with maps you can have arrays and graphs with O(log n) lookup and updates 
[12:58:42] *** Quits: mrig (~AdiIRC@user/mrig) (Remote host closed the connection)
[12:58:52] *** Joins: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net)
[12:58:55] *** Joins: mrig (~AdiIRC@user/mrig)
[12:59:12] *** Joins: Matt|home (~matt@adsl-74-233-58-81.mia.bellsouth.net)
[13:03:15] <beaky> but im already 4 days behind 
[13:03:55] *** Joins: xsperry (~xs@user/xsperry)
[13:04:23] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 252 seconds)
[13:04:32] *** Joins: off^ (~off@wsip-98-188-240-142.mc.at.cox.net)
[13:04:39] *** Quits: node1 (~hex@user/node1) (Ping timeout: 256 seconds)
[13:04:41] *** Joins: Enitin (~Enitin@82.102.22.85)
[13:05:33] *** Quits: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk) (Quit: Leaving)
[13:06:09] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[13:06:15] <beaky> i must catch up with rust and then prove my rust solutions correct
[13:06:32] *** Joins: inlight (~inlight@157.35.20.222)
[13:06:32] *** Quits: inlight (~inlight@157.35.20.222) (Changing host)
[13:06:32] *** Joins: inlight (~inlight@user/inlight)
[13:07:47] *** Quits: x-x (~x@user/x-x) (Quit: leaving)
[13:07:53] *** Joins: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk)
[13:09:26] *** Joins: Guest82 (~Guest82@124.246.87.71)
[13:11:18] *** Joins: plastico (~plastico@neomutt/plastico)
[13:11:53] <deniska> pyzozord: brain fart was real, this one probably took me on and off a couple of hours :)
[13:13:31] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[13:13:39] *** Joins: Kuleshov (Kuleshov@46.138.252.54)
[13:14:06] <deniska> And I've implemented similar algorithms for previous years many times
[13:14:35] <deniska> I guess just a combination of not sleeping enough and having to be in an office today :)
[13:15:32] *** Quits: Sadale (~Sadale@user/sadale) (Ping timeout: 240 seconds)
[13:15:39] *** Parts: Guest82 (~Guest82@124.246.87.71) ()
[13:16:33] <beaky> graph algorithm overload
[13:16:35] <pyzozord> deniska: I didn't even try, I'm on wikipedia right now refreshing my memory of this algorithm
[13:17:22] <pyzozord> in theory I remember the big parts of this algorithm in practice when I looked it up I didn't remember how the big parts connect together
[13:17:53] *** Joins: federico_it (~textual@176.206.87.84)
[13:19:03] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[13:19:55] <pyzozord> might be smarter to do some work today first so I'm less distracted when I do this
[13:20:51] *** Joins: Sadale (~Sadale@user/sadale)
[13:24:21] *** Joins: Intelo (~Intelo@88.246.72.179)
[13:24:35] *** Quits: slavfox (~slavfox@93.158.232.111) (Ping timeout: 268 seconds)
[13:25:31] <Intelo> hi
[13:25:32] <Intelo> Are there any wireframe / prototype creation tools in javascript? opensource? I remember there was presentation tool in js though but I forgot the name
[13:25:56] <decker> https://threejs.org/editor/ sure
[13:25:57] <bayaz> Title: three.js editor 
[13:26:17] <decker> sketchup is still around too
[13:26:29] *** Quits: Sadale (~Sadale@user/sadale) (Ping timeout: 265 seconds)
[13:27:32] *** Joins: slavfox (~slavfox@93.158.232.111)
[13:28:25] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[13:29:28] <pyzozord> Intelo: what do you mean by wireframe / prototype
[13:29:34] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[13:29:46] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[13:30:00] <Intelo> pyzozord like balsamiq, invision, figma
[13:30:25] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[13:30:33] <pyzozord> webflow, but it's more like an actual design tool
[13:30:53] *** Joins: loganlee (~Thunderbi@user/loganlee)
[13:31:18] *** Quits: trace987 (~trace@ip5b429834.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[13:31:47] <pyzozord> also drawio
[13:31:58] <pyzozord> it's more for charts though
[13:33:25] <pyzozord> https://ninjamock.com/
[13:33:27] <bayaz> Title: NinjaMock online wireframe and mockup tool 
[13:33:34] *** Joins: Twipply (~Twipply@user/twipply)
[13:33:35] <pyzozord> generally https://www.google.com/search?q=mockups+wireframes+js+online
[13:33:36] <bayaz> Title: mockups wireframes js online - Google Search 
[13:34:27] *** Quits: Jong (~Jong@2620:10d:c090:400::5:3f74) (Ping timeout: 252 seconds)
[13:35:46] *** Joins: Crescendo (~Crescendo@user/crescendo)
[13:37:31] <pyzozord> oh open source, well I guess something like https://github.com/search?l=JavaScript&o=desc&q=mockup&s=stars&type=Repositories
[13:37:32] <bayaz> Title: Build software better, together 
[13:37:48] <Intelo> pyzozord I meant opensource. Not free online
[13:38:04] <pyzozord> yeah check out the last link, it has few of them
[13:39:31] *** Joins: cykid128_ (~cykid128@36-227-49-65.dynamic-ip.hinet.net)
[13:39:32] *** Joins: omo (~omo@36-227-49-65.dynamic-ip.hinet.net)
[13:39:39] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[13:40:04] <pyzozord> I wish there was a simple and clean immediate mode opengl-es based vector graphic library
[13:40:23] <pyzozord> I'd make nice cross platform ui library from that
[13:40:47] <cykid128_> umm, io2d or cairo might be your choice
[13:41:21] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Remote host closed the connection)
[13:41:45] <pyzozord> io2d is c++ so that's bad
[13:41:56] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[13:42:30] <pyzozord> and cario is a ui library, i just want graphics library and make my own ui out of that
[13:42:31] *** Joins: Sadale (~Sadale@user/sadale)
[13:42:44] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[13:42:54] <cykid128_> you shouldn't avoid C++ since u entered graphics area
[13:43:35] <pyzozord> nah, that's like saying you shouldn't avoid cars since you want to travel
[13:43:58] <cykid128_> so which language u use?
[13:44:34] <pyzozord> i'm thinking about writing the core in raw wasm, and then have js shell for the web version and c shell for the native version
[13:44:52] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:45:31] *** Quits: Kuleshov (Kuleshov@46.138.252.54) (Quit: Leaving)
[13:45:34] <mrig> Which version of c or c++ introduced ## in to the preprocessor?
[13:45:35] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[13:45:39] <mrig> Hello :)
[13:45:43] <pyzozord> that's like saying "i'm thinking about using a scooter that will sometimes have wings and sometimes a jet" :P
[13:46:21] <pyzozord> hi mrig, not sure about ##, I don't even know what is it
[13:46:26] <user51> what about safety?
[13:47:09] <mrig> pyzozord it us used as a token holder, replaced by text from a variable in macros
[13:47:12] <decker> C
[13:47:14] <pyzozord> wasm is safer than most other languages since it's very static
[13:47:22] <decker> it's very old token pasting operator... 
[13:47:31] <mrig> I was hoping to read a little more about it, but am not sure where to look for that.
[13:47:37] *** Lord_of_Life_ is now known as Lord_of_Life
[13:47:44] <mrig> old but not as old as KnR I guess :)
[13:48:09] <decker> #define mkfunc( name ) _myPrefix_##name    ..  void mkFunc(f)(void ) { ...}  gives you  void _myPrefix_f(void)
[13:48:20] <decker> I dunno about that
[13:48:28] <decker> c90 for sure?
[13:48:33] <pyzozord> https://en.cppreference.com/w/c/preprocessor/replace
[13:48:34] <bayaz> Title: Replacing text macros - cppreference.com 
[13:48:41] <pyzozord> seems to be since C99
[13:48:45] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 252 seconds)
[13:49:19] *** Quits: apotheon (~apotheon@copyfree/founder/apotheon) (Ping timeout: 256 seconds)
[13:49:21] <decker> dpesm
[13:49:28] <decker> doesn't say... __VA_ARGS__ is c99
[13:49:32] *** Joins: Enitin (~Enitin@82.102.22.85)
[13:49:33] <decker> which adds special behavior
[13:49:50] <pyzozord> yeah
[13:50:31] <pyzozord> well, we'd probably need to binary search the specs
[13:50:36] *** Joins: apotheon (~apotheon@copyfree/founder/apotheon)
[13:50:55] <pyzozord> check ansi c, check c11, then check c89 and c99
[13:50:57] <mrig> cool thank you, right it's just called replace, was not sure at all what it was called.
[13:51:45] <mrig> va_args were in KnR, is that the macro equivalent then?
[13:51:51] <mrig> seems so
[13:52:37] <decker> ansi c, https://docs.google.com/viewer?a=v&pid=sites&srcid=ZGVmYXVsdGRvbWFpbnxnanVoYWN8Z3g6NTFiY2ExMDdkYTI5YmRmZA  1988... K&R has it
[13:52:38] <bayaz> Title: The C Programming Language- Brian W. Kernighan, Dennis M. Ritchie.pdf 
[13:52:47] <decker> no
[13:52:54] <decker> va_args had to be done differently
[13:53:12] <decker> there was variable args handling for functions - that's not the same as the preprocessor
[13:53:46] <mrig> sure yes I mean for function arguments.
[13:55:00] <mrig> Oh yes the ## is in there too.
[13:55:22] <pyzozord> maybe it was there since the beginning
[13:55:29] <pyzozord> I consider ansi c kind of the beginning :P
[13:55:38] *** Joins: bailsman (~Mm1@xls01.freecult.org)
[13:55:49] <decker> ya token pasting is way useful :)
[13:55:53] <pyzozord> if it was in k&r 2nd edition than it was tehre in the beginning for me
[13:55:59] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[13:56:15] <decker> could wish JS had CPP somtimes
[13:56:30] <pyzozord> well, it does now
[13:56:36] <decker> no not really
[13:56:51] <decker> #ifdef __NODE__ :)
[13:57:00] <pyzozord> emscripten
[13:57:17] <decker> ya no :)
[13:57:18] <mrig> It does seem pretty useful, just exploring an example that uses it now.
[13:57:45] <decker> it's a gateway to templates
[13:58:39] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[14:00:43] *** Joins: Shariff (~UserNick@starbase26.connected.by.freedominter.net)
[14:01:33] *** Joins: BorgoMatic (~KC0LR@2605:a601:ad80:7400:ecdd:b2d7:96a7:3cae)
[14:02:39] *** Joins: hexingb (~hexingb@2409:8900:2a50:c8d:e55c:7aa8:f7c8:9455)
[14:06:02] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 240 seconds)
[14:06:19] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi)
[14:13:34] *** Joins: trace987 (~trace@ip5b429834.dynamic.kabel-deutschland.de)
[14:13:34] *** Joins: Anticom (~anticom@87.190.49.75)
[14:15:11] <Anticom> Hi folks. Is there some sort of unified and/or standardised set of rules for parsing dotenv (.env) files or is this implementation specific?
[14:16:23] <Anticom> First I thought it was toml but afaik dotenv files don't support tables or arrays
[14:16:26] *** Joins: Kuleshov (Kuleshov@46.138.252.54)
[14:16:42] <Deknos> it's bash like
[14:16:56] <Deknos> key=value
[14:17:09] <Deknos> nothing else.. but when bash interpretes it you could do bash arrays
[14:17:10] <decker> if you want to parse a value as JSON IT CAN HAVE ARRAYS
[14:17:11] *** Quits: Sadale (~Sadale@user/sadale) (Ping timeout: 256 seconds)
[14:17:15] <decker> oops
[14:17:26] <decker> (stickyish shiftkey)
[14:20:14] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[14:20:37] <pyzozord> .env is not a thing
[14:21:12] <pyzozord> it's just a some library that came up with thier own naming and format for storing and loading env vars from disk
[14:21:25] <[itchyjunk]> this computer kinda freezes running pycharm
[14:21:30] <pyzozord> so the standard is "use the most popular library for dotenv"
[14:24:07] <mrig> decker, in this example we are using it to make code generic, this guy does not use any C++ templates, prefers using the older ways.
[14:25:00] <decker> I use it to make the same functions float and double for my vector library 
[14:25:30] <decker> which is making generic code ;) and Isn't templates, but leads to and is similar to templates
[14:25:50] *** Quits: Anticom (~anticom@87.190.49.75) (Remote host closed the connection)
[14:26:33] <mrig> This is surprisingly similar to how you would do generic in go, nice to see someone coding with it.
[14:27:26] <mrig> oh for the vectors right yes, have written those just as functions and using a little overloading, no templates here for those either.
[14:27:33] *** Joins: absc (~absc@81.31.144.28)
[14:28:29] *** Joins: Sadale (~Sadale@user/sadale)
[14:29:39] <mrig> only using float for these though.
[14:31:04] *** Joins: Enitin (~Enitin@82.102.22.86)
[14:34:07] *** Quits: kmh (~kmh@2a00:6020:5004:6800:8408:cfde:c018:df22) (Read error: Connection reset by peer)
[14:34:11] *** Quits: Sadale (~Sadale@user/sadale) (Ping timeout: 256 seconds)
[14:34:23] *** Joins: Sadale_ (~Sadale@user/sadale)
[14:36:56] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[14:39:21] *** Joins: zaher (~zaher@37.48.180.81)
[14:40:23] *** Joins: sh1r4s3 (~sh1r4s3@85.143.114.212)
[14:42:14] *** Quits: Sadale_ (~Sadale@user/sadale) (Ping timeout: 260 seconds)
[14:42:37] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[14:43:39] *** Quits: hexingb (~hexingb@2409:8900:2a50:c8d:e55c:7aa8:f7c8:9455) (Ping timeout: 250 seconds)
[14:44:11] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[14:44:18] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 265 seconds)
[14:44:53] *** Joins: hexingb (~hexingb@103.37.140.21)
[14:44:59] *** Joins: Sadale (~Sadale@user/sadale)
[14:45:16] *** Joins: AsenMx (~AsenMx@user/asenmx)
[14:45:31] *** Quits: sh1r4s3 (~sh1r4s3@85.143.114.212) (Ping timeout: 256 seconds)
[14:46:39] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 256 seconds)
[14:49:16] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-b1ee-87e3-1ad0-a6a9.res6.spectrum.com) (Quit: jarthur)
[14:49:29] *** Quits: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[14:50:35] *** Quits: operateur (~operateur@91.143.220.230) (Ping timeout: 265 seconds)
[14:53:39] <arash> Hello,Do you feel fatigue after working on a project and think too much to solve the problem? then how do you recover? how can you stop yourself when you are solving a problem and you almost did it but you are so tired?
[14:54:45] *** Quits: Sadale (~Sadale@user/sadale) (Ping timeout: 252 seconds)
[14:55:19] <pyzozord> arash: make sure your sleep and diet are as good as possible
[14:55:33] <jelly> also, physical activity
[14:55:35] <pyzozord> arash: make breaks and let your brain rest
[14:56:20] *** Joins: Anticom (~anticom@87.190.49.75)
[14:57:06] *** Joins: pulse (~pulse@user/pulse)
[14:59:00] <arash> well.how do you break? for example you do physical activities or you watch tv for break? because I heard physical activity is the key for mental rest.
[15:01:09] <pyzozord> I'd go for a walk outside
[15:01:11] *** Quits: Anticom (~anticom@87.190.49.75) (Ping timeout: 250 seconds)
[15:01:33] <arash> jelly, pyzozord thank you
[15:03:08] *** Joins: RazielZ (~Raziel@user/raziel)
[15:03:28] *** Joins: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi)
[15:03:54] *** Quits: hololeap_ (~hololeap@user/hololeap) (Ping timeout: 276 seconds)
[15:04:05] *** Joins: hololeap_ (~hololeap@user/hololeap)
[15:04:49] *** Joins: sh1r4s3 (~sh1r4s3@85.143.114.212)
[15:05:30] <omo> Hi dude
[15:05:49] <GeDaMo> Hi omo :)
[15:06:39] *** Joins: password (~password8@user/password2)
[15:06:51] *** Quits: Raziel (~Raziel@user/raziel) (Ping timeout: 252 seconds)
[15:07:31] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[15:09:43] *** Joins: Anticom (~anticom@87.190.49.75)
[15:10:09] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Ping timeout: 252 seconds)
[15:10:25] <user51> hello GeDaMo 
[15:11:54] <GeDaMo> Hi user51 :)
[15:13:18] *** Quits: sh1r4s3 (~sh1r4s3@85.143.114.212) (Ping timeout: 265 seconds)
[15:16:35] *** Quits: hexingb (~hexingb@103.37.140.21) (Ping timeout: 250 seconds)
[15:16:59] *** Joins: breavyn_ (~breavyn@user/breavyn)
[15:17:37] *** Joins: hexingb (~hexingb@103.37.140.21)
[15:17:42] *** Quits: breavyn (~breavyn@user/breavyn) (Ping timeout: 260 seconds)
[15:18:12] <Anticom> pyzozord: I kind of disagree. There are implementations in many languages for this mechanism. Furthermore in many syntax highlighters the env "syntax" is supported. As a consequence there has (or at least should) be a common set of rules that people must have agreed upon. However I'm unable to find a canonical spec / reference implementation etc.
[15:19:06] <pyzozord> not sure what do I said
[15:19:18] <pyzozord> *what did I say
[15:19:27] <Anticom> pyzozord: Also the reason I'm asking this question is not because I'd like to implement a library myself. It's more like curiosity based intent.
[15:19:53] <pyzozord> oh about .env
[15:19:57] <Anticom> yes
[15:20:02] <decker> first = separates keyword from value
[15:20:09] <decker> newline seaprates key=value pairs
[15:20:20] <pyzozord> Anticom: it's more like a meme feature
[15:20:23] *** Quits: Kuleshov (Kuleshov@46.138.252.54) (Quit: Leaving)
[15:20:23] <pyzozord> it's just viral
[15:20:24] <decker> this=valid=setting    this =  "valid=setting'
[15:20:37] <pyzozord> as far as I know there isn't an official standard for it
[15:20:58] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 260 seconds)
[15:21:14] <pyzozord> it just litearlly goes name, value = line.split('=')
[15:21:19] <decker> so you can't have a key with an = in it, but you could have any other valud
[15:21:26] <decker> that wouldn't work right :)
[15:21:31] <Intelo> pyzozord I meant "opensource" tool
[15:21:48] <pyzozord> Intelo: I linked github search there are few open source tools there
[15:21:57] <Intelo> pyzozord thanks. I just saw your link
[15:22:11] *** Joins: Enitin (~Enitin@82.102.22.85)
[15:22:18] *** Joins: operateur (~operateur@91.143.220.230)
[15:22:36] <pyzozord> right nice, did my work for today, will look into todays advent of code
[15:22:38] <pyzozord> this one is tough
[15:23:07] <pyzozord> ah soon I won't be having so much free time
[15:23:14] <[itchyjunk]> What was that one author whose name started with D?
[15:23:21] <[itchyjunk]> the book is pretty famous
[15:23:31] <pyzozord> Dijkstra?
[15:23:34] <[itchyjunk]> thanks
[15:23:50] <pyzozord> but shush
[15:23:57] <pyzozord> it's early in the Day still
[15:23:59] <[itchyjunk]> wait, i forgot the name of the book too
[15:24:02] <decker> file.split('\n').map(l=>[l.substring(0,l.indexOf('_')),l.substring(l.indexOf('_')+1)])    terribly redundant
[15:24:11] <pyzozord> StructuredProgramming
[15:24:24] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[15:24:36] <[itchyjunk]> ty
[15:24:37] <pyzozord> (with a space)
[15:24:48] *** Joins: teut (~teut@2401:4900:1c30:1de4:f19d:3f97:1aa3:ecb1)
[15:25:04] *** Joins: sh1r4s3 (~sh1r4s3@85.143.114.212)
[15:25:14] <decker> file.split('\n').map(l=>[l.split('=')[0],l.split('=').slice(1).join('=')])     :/
[15:25:21] <[itchyjunk]> Ole-Johan Dahl, Edsger Wybe Dijkstra, Charles Antony Richard Hoare
[15:25:24] <Anticom> pyzozord: I was suspecting already that there's no official standard, but I'm wondering why that is. How are we supposed to have interoperable software, if the file format is not defined. For example docker compose supports reading .env files. What if i use a feature in my js project using dotenv lib but docker compose doesn't support it. Then I'm f*#!ed. Makes no sense to me
[15:25:25] <[itchyjunk]> all these people?
[15:25:45] *** Joins: Kuleshov (Kuleshov@46.138.252.54)
[15:26:02] <decker> Anticom the only reason to have it specified is so you can push the limits of how it is defined.
[15:26:04] <GeDaMo> https://en.wikipedia.org/wiki/Tony_Hoare  https://en.wikipedia.org/wiki/Ole-Johan_Dahl
[15:26:06] <bayaz> Title: Tony Hoare - Wikipedia 
[15:26:06] <bayaz> Title: Ole-Johan Dahl - Wikipedia 
[15:26:25] <[itchyjunk]> yeah, guess it's the right book
[15:26:41] <Anticom> decker: Imagine JSON or YAML not being defined but just loosely interpreted the same way by different libraries / programming languages / ecosystems etc.
[15:27:00] <Anticom> What I'm trying to get to is that IMHO it should be well-defined
[15:27:11] <decker> how can you not reason it out?
[15:27:18] <decker> it's just the subset of bash that defines variables.
[15:27:22] <decker> it's juset 'set' in dos
[15:27:46] <[itchyjunk]> i was thrown off because it says "Notes on structured programming" but probably correct
[15:28:19] <Anticom> decker: Where did you get that definition of being a subset of any kind of shell from?
[15:28:39] <decker> experience.  Being able to read ascii characters?
[15:29:05] <Anticom> So it's your personal definition of what .env syntax is
[15:29:20] <Anticom> And those tend to be subjective most of the times
[15:29:42] *** Joins: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net)
[15:30:02] <decker> take the simplest posssible idea and that's probably all it is.
[15:30:24] <decker> handling bizarre newlines should not ever be required... someone that writes \r\n\r\r deserves to be fscked :)
[15:31:10] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[15:33:01] * jelly gives decker a service that never executes the last line in a config file if \n is missing, and does not complain either
[15:33:33] <decker> jelly :) did it reply with a duck?
[15:34:12] <jelly> just silently ignores
[15:35:15] <jelly> point being: don't assume input is legal; verify and complain, don't let end user be fscked
[15:35:17] <decker> then that's a obvious error.  evidence of absense is evidence.
[15:35:32] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[15:35:36] <pyzozord> Anticom: https://xkcd.com/927/
[15:35:37] <bayaz> Title: Standards 
[15:35:49] <jelly> a config file is input
[15:36:19] <pikapika> pyzozord, did you manage to solve the polymer
[15:36:26] <pyzozord> polymer?
[15:36:41] <pikapika> pyzozord, day 14
[15:36:51] <pyzozord> yes
[15:36:54] <Anticom> pyzozord: basically one of the aspects I was trying to get to. Furthermore there might be OS specific differences since there's no spec to tell implementers what the intended behavior is supposed to be
[15:37:19] <decker> ya fortunatly we don't have ebcidic systems
[15:37:40] <pyzozord> pikapika: but in a very crude way, I essentially hacked my way through the puzzle, did not solve the puzzle
[15:37:47] *** Joins: Tom (~Tom@82-64-144-132.subs.proxad.net)
[15:38:03] *** Quits: Kol (~Kol@d75-157-122-186.bchsia.telus.net) ()
[15:38:04] <pikapika> Today's one seems like a backtracking puzzle
[15:38:08] <pikapika> I'll try it later
[15:38:13] *** Quits: sh1r4s3 (~sh1r4s3@85.143.114.212) (Ping timeout: 256 seconds)
[15:38:27] <pyzozord> Could be byt I think it's something more "by the books" at least part 1
[15:38:53] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[15:39:03] <pikapika> backtracking is very by the books
[15:39:33] <pyzozord> yeah but it's more general, this problem seems to me is a well known problem
[15:39:44] <pyzozord> I don't want to be more specific to not spoil
[15:40:15] <pyzozord> but I thought of backtracking solution as well
[15:40:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:40:34] <pyzozord> damn I can't do 2d list comprehensions in python
[15:41:36] <CodeMouse92> pyzozord: Meaning, you personally? One *can* do 2d list comprehensions in Python, they're just (a) tricky and (b) so convolutedly complex, it's probably a sign you should use normal looks
[15:41:38] <CodeMouse92> *loops
[15:42:18] <pyzozord> yeah I personally
[15:42:27] <pyzozord> I can't never get the syntax order right
[15:43:09] *** Joins: Jong (~Jong@2620:10d:c090:400::5:3f74)
[15:43:49] <GeDaMo> [(x,y) for x in [1,2,3] for y in [4,5,6]]
[15:44:44] *** Quits: cykid128_ (~cykid128@36-227-49-65.dynamic-ip.hinet.net) (Quit: Lost terminal)
[15:44:44] *** Quits: omo (~omo@36-227-49-65.dynamic-ip.hinet.net) (Remote host closed the connection)
[15:45:43] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[15:46:30] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:48:02] <beaky> nice im on day 12 now soon i will catch up to day 15
[15:48:16] <pyzozord> I have the other case, lets say I have '1,2,3\n4,5,6\n7,8,9' input, I always try to do [char for char in line for line in input.split('\n')] but that is not correct
[15:48:45] *** Quits: hololeap_ (~hololeap@user/hololeap) (Ping timeout: 276 seconds)
[15:49:03] <[itchyjunk]> that works in python?
[15:49:13] <[itchyjunk]> thats cool!
[15:49:20] <pyzozord> not my example though
[15:49:30] <[itchyjunk]> GeDaMo example i mean
[15:49:45] <[itchyjunk]> I wanna learn py but i am too intimedated by pycharm and my computers slowness
[15:49:46] <GeDaMo> That gives [(1, 4), (1, 5), (1, 6), (2, 4), (2, 5), (2, 6), (3, 4), (3, 5), (3, 6)]
[15:49:55] *** Joins: hololeap_ (~hololeap@user/hololeap)
[15:49:55] <[itchyjunk]> yes produces tuples
[15:50:01] <[itchyjunk]> I like set builder type notations
[15:50:27] *** Joins: inlight (~inlight@157.35.20.222)
[15:50:27] *** Quits: inlight (~inlight@157.35.20.222) (Changing host)
[15:50:27] *** Joins: inlight (~inlight@user/inlight)
[15:51:07] *** Joins: Sadale (~Sadale@user/sadale)
[15:51:49] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[15:52:12] <bjs> [itchyjunk]: then don't use pycharm.  use VSCode or vim or whatever editor you like to use
[15:52:17] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:52:49] <[itchyjunk]> Anytime i use gedit and needs some help, someone in py tells me i should suck it up and learn venv thiny
[15:53:14] <[itchyjunk]> i managed to set up the pycharm to use that now i think
[15:53:21] <[itchyjunk]> But i am not comfertable with the ide
[15:53:57] <[itchyjunk]> Is "python package" similar in idea to java package in eclipse?
[15:54:18] <[itchyjunk]> i should organize my themes of codes with those? or make new folders each time?
[15:54:29] <[itchyjunk]> I don't think there is a pycharm specific channel so i'll ask here
[15:54:47] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[15:56:02] *** Quits: Sadale (~Sadale@user/sadale) (Read error: Connection reset by peer)
[15:56:33] <pikapika> Python is a pleasant language, thats the language I am using for aoc too
[15:56:46] <pikapika> [itchyjunk], you don't need pycharm
[15:56:49] <pikapika> Just use any editor
[15:57:08] <pikapika> [itchyjunk], be very careful with python packages
[15:57:23] <pikapika> you dont want to globally install packages, particularly if your distro also uses python for bookkeeping stuff
[15:57:55] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[15:58:53] <[itchyjunk]> Yes, that's why the venv and by extension pycharm
[15:58:59] <pikapika> you don't need pycharm
[15:59:07] <pikapika> Never used it
[15:59:42] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:59:57] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[16:00:31] *** Joins: KillerWasp (KillerWasp@user/killerwasp)
[16:00:35] *** Joins: Sadale (~Sadale@user/sadale)
[16:00:49] <KillerWasp> hello random crumbles guys
[16:01:40] <[itchyjunk]> Oh, I can't do [1..10] in python?
[16:01:45] <[itchyjunk]> ;(
[16:02:03] <[itchyjunk]> Is haskell is not the best language to learn datastructure in, i wonder if py is in the same boat
[16:02:46] *** Joins: yhsiveht (~Nishant@2405:201:f005:c007:5dca:71f9:c326:6e3b)
[16:03:04] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[16:04:00] <arahael> [itchyjunk]: range(1, 10) in python
[16:04:03] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:04:03] <[itchyjunk]> f.. i can't code
[16:04:12] <GeDaMo> I think it would be range(1,11)
[16:04:13] <[itchyjunk]> oh i just tried that in the err interpreter
[16:04:28] <[itchyjunk]> range(0,10)
[16:04:28] <[itchyjunk]> range(0, 10)
[16:04:40] <[itchyjunk]> why doesn't it return a [0,1,..,10] ?
[16:04:42] <GeDaMo> In Haskell, [1..10] would include 10
[16:04:51] <arahael> oh yeah indeed
[16:05:16] <KillerWasp> for return values of 1 to 10?
[16:05:18] <arahael> always trips me that python is "up to and excluding"
[16:05:28] <[itchyjunk]> `x = range(0,10)` followed by `x` just returns `range(0,10)`
[16:05:49] <GeDaMo> If you use it where an iterator would go, it will expand
[16:05:50] <arahael> [itchyjunk]: it is an iterator now.
[16:05:56] <snake> i thought python was a practical joke
[16:05:59] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 256 seconds)
[16:06:00] <[itchyjunk]> hmmmm
[16:06:05] <arahael> list(x)
[16:06:05] <snake> u've been pranked bro
[16:06:11] <arahael> (or somethint)
[16:06:11] *** Quits: thevishy (~Nishant@2405:201:f005:c007:49c7:f8b1:7727:93e) (Ping timeout: 250 seconds)
[16:06:22] * arahael shkuld sleep. midnight
[16:06:24] <snake> better to do things the pure functional way (like in haskell)
[16:06:28] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 265 seconds)
[16:06:36] *** Joins: AsenMx (~AsenMx@user/asenmx)
[16:06:40] <[itchyjunk]> oh it does cartesian product?
[16:07:03] <[itchyjunk]> ah you did mention it already
[16:07:45] <snake> itchyjunk: yeah x is an object that represents the range
[16:08:08] <snake> welcome to the cool kid's table, object oriented programming
[16:09:09] <snake> itchyjunk: to answer your previous question (that i just read) more seriously: i learned data structures in python, its not bad for that purpose at all
[16:09:13] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[16:09:33] <[itchyjunk]> z = [x in range(0,5] is equivalent to z = list(range(0,5)) ?
[16:10:01] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:10:08] <snake> try it and see z == z
[16:10:11] <snake> True
[16:10:24] <snake> you overwrote it actually, so ofc its true
[16:10:31] <beaky> nice i like haskell
[16:10:43] <snake> beaky, i hate it, but im still learning it for some reason
[16:11:18] <[itchyjunk]> i wanna learn it
[16:11:19] <snake> i was finally able to open a file and parse it for a list of integers with discrete generic functions
[16:11:30] <[itchyjunk]> but apparently its hard to learn haskell and datastructures using haskell at the same time
[16:11:34] <[itchyjunk]> so i need an alt language
[16:11:36] <[itchyjunk]> so learning py now
[16:11:38] <snake> itchyjunk: i've been programming for like 10 years and haskell is hard
[16:11:38] <[itchyjunk]> :(
[16:11:58] <[itchyjunk]> yeah i wanna learn haskell regardless of it's difficulty :D
[16:12:03] <beaky> what about rust
[16:12:04] <[itchyjunk]> just makes me wanna learn it even more
[16:12:17] <snake> yes, rust is the ultimate safe systems level language
[16:12:47] <snake> itchy: yeah that is my issue too
[16:12:54] <snake> its hard and that makes me want to keep trying
[16:13:06] <snake> even though it's pointless
[16:13:20] <[itchyjunk]> live if pointless
[16:13:49] <snake> yup gotta find your own purpose even if that means swearing at the pc to satisfy our aggressive primal instincts
[16:13:57] *** Joins: Leone (~Leo@69-165-148-197.dsl.teksavvy.com)
[16:14:15] <snake> stupid pc
[16:14:27] <beaky> in rust i trust
[16:14:40] <snake> :o
[16:14:42] <rawplayer> :o
[16:14:48] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[16:14:57] <[itchyjunk]> in rust i thrust
[16:15:27] <[itchyjunk]> alright, suddenly bored with everything
[16:15:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[16:15:52] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:16:03] <[itchyjunk]> I should learn a little bit more of markup
[16:16:09] <[itchyjunk]> or was it markdown?
[16:16:36] <GeDaMo> I think Github uses some version of markdown
[16:16:49] <snake> markdown is easy
[16:17:01] <snake> i dont even know it, i just look at the manual each time i need to write it
[16:17:30] <GeDaMo> A quick reference is usually enough
[16:17:59] *** Joins: mrig (~mrig@user/mrig)
[16:18:21] <GeDaMo> https://docs.github.com/en/github/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax
[16:18:22] <bayaz> Title: Basic writing and formatting syntax - GitHub Docs 
[16:19:34] <[itchyjunk]> I can add block of code ``` and add links ()
[16:19:54] <[itchyjunk]> My goal was to learn wolfscripting and document it in github pages.
[16:20:04] <[itchyjunk]> But i think wolframcloud already gives me a place to do this
[16:20:10] <[itchyjunk]> ...
[16:20:25] <snake> how many languages are you learning at once itchy
[16:20:29] <[itchyjunk]> oh right, free wolframcloud delets your shit after some weeks
[16:20:33] <[itchyjunk]> snake, 0
[16:20:36] <snake> LOL
[16:20:41] <[itchyjunk]> but i am trying to learn too many at once
[16:20:41] <snake> yeah they do that
[16:20:51] <snake> you can DL them beforethat happens tho
[16:21:03] <[itchyjunk]> yes but no point publishing there
[16:21:14] <[itchyjunk]> might as well do it on github pages which i think doesnt' delete my shit
[16:21:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[16:21:34] <snake> hm well i dont think i can run wolfram code without wolframcloud which is free
[16:21:41] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:21:42] <snake> the program costs money, tho it comes free in raspbian
[16:21:51] <[itchyjunk]> no its free
[16:21:59] <snake> o huh
[16:22:00] <[itchyjunk]> you can download the engine for free as well
[16:22:04] <[itchyjunk]> without the cloud
[16:22:29] <[itchyjunk]> locally, if you put -cloud in your shebang , it runs it on their side and such too
[16:22:30] <snake> oh it comes with the cloud on pi
[16:22:40] <[itchyjunk]> you have pi?
[16:22:45] <snake> yeah man
[16:22:50] <[itchyjunk]> nice
[16:22:55] <[itchyjunk]> always wanted a pi
[16:23:01] <[itchyjunk]> but i know i won't do anything with it 
[16:23:02] <[itchyjunk]> so no point
[16:23:21] *** Joins: BorgoMatic_ (~KC0LR@2605:a601:ad80:7400:ecdd:b2d7:96a7:3cae)
[16:23:26] <snake> lol yeah i've played with it a few times but its just collecting dust now
[16:23:56] <[itchyjunk]> Good use as a dustcollector then
[16:25:33] <snake> itchy: yeah so the idea in python for DS is to just use a list like an array
[16:25:45] *** Joins: premultiplied (~premultip@69.26.147.80)
[16:25:45] <snake> but it will grow for you so you dont even need to worry about that
[16:25:47] *** Quits: Anticom (~anticom@87.190.49.75) (Remote host closed the connection)
[16:26:05] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[16:26:25] <snake> about resizing i mean
[16:26:27] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[16:26:30] <[itchyjunk]> So next, i have to learn to make a class?
[16:26:32] *** Quits: BorgoMatic (~KC0LR@2605:a601:ad80:7400:ecdd:b2d7:96a7:3cae) (Ping timeout: 240 seconds)
[16:26:36] <[itchyjunk]> so i can make a new data structure?
[16:26:41] <snake> yeah learn classes
[16:26:42] <[itchyjunk]> need to make a basic tree at some point
[16:26:45] <[itchyjunk]> alright
[16:26:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[16:27:12] *** Joins: BorgoMatic (~KC0LR@136.32.12.209)
[16:27:29] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[16:27:37] <CodeMouse92> GeDaMo: You can get lists of lists with [list(x,y) for x in [1,2,3] for y in [4,5,6]]
[16:28:10] *** Quits: BorgoMatic_ (~KC0LR@2605:a601:ad80:7400:ecdd:b2d7:96a7:3cae) (Ping timeout: 260 seconds)
[16:29:04] *** Joins: node1 (~hex@user/node1)
[16:29:17] <snake> TypeError: list expected at most 1 argument, got 2
[16:29:33] <GeDaMo> Maybe you meant list((x,y))
[16:29:43] <bjs> [x,y]
[16:30:01] *** Quits: CoderGuy2 (~CoderGuy@2601:644:102:2820:8dcd:55e0:e024:64ff) (Quit: Leaving)
[16:30:01] <node1> Hello
[16:30:03] <CodeMouse92> GeDaMo: yes
[16:30:07] <[itchyjunk]> the real question is, how does GeDaMo know so many languages?
[16:30:28] <GeDaMo> I read a lot :P
[16:30:39] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[16:30:49] <CodeMouse92> bjs: You don't want to use that syntax in a list comprehension, because you wind up falling afoul of mutable objects
[16:30:57] <bjs> CodeMouse92: what?
[16:31:05] <leduyquang753> Learning many programming languages is quite achievable.
[16:31:20] <bjs> CodeMouse92: list((x,y)) and [x,y] produce the same object, lists are mutable no matter how you produce them.
[16:31:44] <[itchyjunk]> leduyquang753, what about learning them well?
[16:32:18] <leduyquang753> If one dedicates enough time to go through each language's deep stuff then still.
[16:32:26] <GeDaMo> I wouldn't claim I know many languages well
[16:32:34] <snake> itchy: just take it one at atime
[16:32:38] <snake> you'll get there
[16:32:42] <leduyquang753> The real challenge is learning real human languages with vastly different properties.
[16:32:53] <snake> you don't need to know everything tho
[16:32:59] *** Joins: Anticom (~anticom@87.190.49.75)
[16:33:01] <CodeMouse92> bjs: I do seem to remember a problem with it, where you can under some circumstances get a list of lists where each item is bound to the same list
[16:33:08] <CodeMouse92> But...that is clearly not the case here
[16:33:13] <CodeMouse92> Gah, too early in the morning
[16:33:20] <bjs> CodeMouse92: [x]*n gives you a list with n references to the object x
[16:33:24] <node1> if we write a code (list) in python. I believe we are using `C link list` as an object? Is that true?
[16:33:26] <bjs> maybe that's what you're talking about
[16:33:30] <bjs> node1: no it is not
[16:33:46] <node1> Then what it is?
[16:33:50] <CodeMouse92> node1: Nope, lists in Python are allocated in contiguous memory
[16:33:54] <bjs> node1: well, underneath, it's an array
[16:33:55] <CodeMouse92> LIke arrays
[16:33:58] <snake> [[0]*10]*10
[16:34:08] <snake> 10x10 matrix initialized to zeroes
[16:34:24] <leduyquang753> That won't do what you want.
[16:34:31] *** Joins: swp1 (~Thunderbi@37.203.60.116)
[16:34:32] <bjs> snake: yeah that's the case CodeMouse92 was trying to say, I think.  Because it doesn't work right
[16:34:36] <CodeMouse92> YES, thank you
[16:34:37] <[itchyjunk]> Hey, wolfram can't do random internet search right?
[16:34:39] <snake> oh oof
[16:34:41] <[itchyjunk]> i know it can do wikipedia
[16:34:50] <node1> bjs, C array ?
[16:35:00] <[itchyjunk]> leduyquang753, do you know mandarin?
[16:35:09] <CodeMouse92> node1: Literally yes, at least in the case of CPython (the default implementation)
[16:35:37] <node1> CodeMouse92, Exactly that's what i would likes to prove.
[16:36:27] <CodeMouse92> node1: Earlier you mentioned a linked list, though, and C arrays are not linked lists
[16:36:42] <leduyquang753> List in Python is heap-allocated contiguous array: https://github.com/python/cpython/blob/main/Include/cpython/listobject.h
[16:36:43] <bayaz> Title: cpython/listobject.h at main · python/cpython 
[16:36:44] <CodeMouse92> (Which you *probably* know, so I suspect there's just some misunderstanding here)
[16:37:22] <snake> l = [[0 for i in range(10)] for j in range(10)]
[16:37:38] <node1> CodeMouse92, I would likes to confirm that whatever written in python(objects) are basically underneath C object codes
[16:37:49] *** Joins: pulse (~pulse@user/pulse)
[16:37:59] <CodeMouse92> node1: You keep saying "C object", but C doesn't *have* "objects"
[16:38:11] *** Quits: teut (~teut@2401:4900:1c30:1de4:f19d:3f97:1aa3:ecb1) (Ping timeout: 256 seconds)
[16:38:33] <node1> gcc -o object C_code_programme.c 
[16:38:33] <[itchyjunk]> Isn't object an abstract concept defined by the property of a block of data in memory?
[16:38:36] *** Quits: moose (~moose@user/moose) (Read error: Connection reset by peer)
[16:38:37] <CodeMouse92> C is allocating the memory according to familiar patterns behind-the-scenes here, yes. Heap-allocated arrays, C-strings, what have you...
[16:38:42] <merijn> CodeMouse92: it does, though. Not in the OOP sense, but the C spec definitely has a notion of "object"
[16:38:45] <CodeMouse92> But those aren't "objects"
[16:38:45] *** Joins: moose` (~moose@user/moose)
[16:39:01] <[itchyjunk]> What are "objects" ?
[16:39:07] *** Joins: constxd (~brad@192.75.101.164)
[16:39:11] <merijn> [itchyjunk]: Depends on context :p
[16:39:31] <pikapika> merijn, I am thinking of using a right pointer trick
[16:39:37] <pikapika> for the polymer
[16:39:57] <merijn> I have a solution that works in 40s, but I had an epiphany in bed last night and think I can make it faster still
[16:40:08] <snake> itchy: IMO an object is a type of data in a program with encapsulated data and methods
[16:40:09] <node1> I see so when we do calculate of a time complexity. It's  in terms of our code with data.
[16:40:09] <merijn> haven't had time to fix it yet, though. Busy cleaning up my solution for today
[16:40:16] <CodeMouse92> node1: Without getting lost in the weeds, regardless, the point is that CPython allocates all its data as you would expect according to typical C practices and design patterns.
[16:40:24] <CodeMouse92> Other implementations of Python, not necessary.
[16:40:24] <bjs> snake: the problem is that C has a word "object" which means something that is not quite that
[16:40:37] <snake> bjs, what you mean the .o files?
[16:40:40] <bjs> snake: no
[16:40:50] <bjs> snake: that's another different meaning of object :P
[16:40:51] <snake> oh there's ANOTHER object, seems like this word gets reused a lot
[16:40:54] <CodeMouse92> But they're just *using* those patterns. As bjs pointed out in the other room, they're not "wrappers".
[16:40:57] <snake> hahaha
[16:41:01] <[itchyjunk]> snake, a list has data and you might have api to manupulate that data
[16:41:05] <[itchyjunk]> so lists are objects?
[16:41:16] <snake> itchy yeah, and list is also an ADT
[16:41:16] <bjs> snake: but C uses the word "object" to mean something like "a bit of memory that contains a single 'thing'"
[16:41:25] <[itchyjunk]> ADT?
[16:41:29] <GeDaMo> https://en.cppreference.com/w/c/language/object
[16:41:29] <bayaz> Title: Objects and alignment - cppreference.com 
[16:41:30] <snake> abstract data type
[16:41:35] <deniska> python uses word object for everything you can potentially assign to a name
[16:41:40] <deniska> that includes lists
[16:41:54] <merijn> deniska: Oh, interesting question: Python doesn't have unboxed values?
[16:42:04] <merijn> I never thought about that before
[16:42:24] <snake> itchy: ADT describes how your class will behave (what methods are available) like for list you have list.insert, append, remove, clear, update, length, etc
[16:42:25] <CodeMouse92> merijn: I could be wrong, but I don't think Python really thinks much about "boxes" at all, heh
[16:42:28] <deniska> merijn: cpython doesn't, other implementations may try (in a semantically transparent fashion)
[16:42:38] <[itchyjunk]> merijn, you could say you are unboxing that thought for the first time
[16:42:38] <snake> as in getLength
[16:42:39] <CodeMouse92> But yeah, no, everything is an object in Python
[16:42:51] <merijn> Lame...
[16:43:08] <deniska> that simplifies things, which was kinda the goal of this whole python thing :)
[16:43:14] <snake> itchy: and for a stack you will have isEmpty push and pop, and perhaps clear, oh and peek()
[16:43:28] *** Joins: kek_ (~kek_@2a02:168:200f:1f10:dcde:2774:1301:baad)
[16:43:35] <merijn> unboxed values are nice
[16:43:39] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 252 seconds)
[16:43:45] <kek_> hi, when opening a file with hdfview, what's the memory restriction? Can't I view the file in "pieces"?
[16:44:08] <GeDaMo> What's hdfview?
[16:44:10] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[16:44:30] <CodeMouse92> merijn: Sure. but in what context?
[16:44:30] <snake> itchy code using your stack will not be able to access contents directly because of encapsulation and "data hiding" principles of OOP
[16:44:44] <node1> Everything in python is object.
[16:44:45] <snake> otherwise it wouldnt really be a stack
[16:44:57] <snake> itchy: instead they must use the methods you provide
[16:45:03] <CodeMouse92> Unboxed values may have little merit in a system that doesn't need the concept of "boxing" at all.
[16:45:09] <CodeMouse92> Java is a weird world, for the record.
[16:45:33] <snake> CodeMouse92, i dont think java is that weird
[16:45:41] <CodeMouse92> snake: Weird compared to many languages.
[16:45:52] <CodeMouse92> It marches to its own drummer in many regards.
[16:45:54] <snake> and wdym by boxing?
[16:45:56] <merijn> CodeMouse92: Well, you're stuck with boxed values unless you think C++'s template clusterfuck is a great substitute for generics >.>
[16:46:12] * CodeMouse92 would rather spend a lifetime with C++'s templates than Java's generics.
[16:46:21] <merijn> snake: boxing is one (of two) compiler techniques for implementing generics
[16:46:32] <CodeMouse92> merijn: But, that aside, Python doesn't actually need generics*, so it winds up moot.
[16:46:41] <merijn> (or "parametric polymorphism" in a better sense)
[16:46:44] <CodeMouse92> Duck typing generally negates the need for generics.
[16:46:55] <merijn> CodeMouse92: By requiring *everything* always be boxed...
[16:46:57] <snake> oh ok, yeah java has an Integer class to use with generics (e.g.)
[16:46:59] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[16:47:02] <CodeMouse92> *We literally do have generics in one sense for dispatching different functions by literal type, but that's seldom needed.
[16:47:09] <snake> int gets wrapped up into the Integer class
[16:47:20] <node1> And when everything is object then we could do anything (like we human do)
[16:47:24] <[itchyjunk]> hmm
[16:47:34] <CodeMouse92> merijn: Define boxing without generics, then, because you're using circular definitions now
[16:47:39] <merijn> snake: So, if you wanna reuse the same code with different types you need to either 1) generate different code for all possible inputs or 2) ensure all inputs "look the same" to generic code (by replacing them with a pointer/reference)
[16:47:43] *** Joins: anthk_ (~anthk@92.176.105.30)
[16:48:08] <snake> merijn, i haven't had many issues
[16:48:16] <[itchyjunk]> GeDaMo, in WS there is Wikidata type obeject called `recipe` and i wanna look into this.
[16:48:17] <node1> So python is the next generation language. And python is the future.
[16:48:19] <[itchyjunk]> How do I do that?
[16:48:25] <merijn> snake: unboxed values are things like "char", "short", "int" in Java. Those are different sizes and thus you can't pass them to generic code
[16:48:50] <CodeMouse92> I really fail to see why it's a bad thing for integers to be objects in Python, anyhow. Implementation detail, the memory overhead is not actually greater than the bare value.
[16:48:51] <GeDaMo> WS?
[16:49:00] <snake> merijn, right you have to do like MyStackClass<T> stack = new MyStackClass<Integer>();
[16:49:00] <CodeMouse92> It's not like each one has its own unique copy of the methods.
[16:49:01] <merijn> CodeMouse92: all values are passed as reference in Python, so that's boxing, because there's an indirection
[16:49:02] <[itchyjunk]> WikidataSearch["recipe"] shows all the ones available. wikiRecipe = WikidataData["recipe","chicken"]
[16:49:09] <[itchyjunk]> GeDaMo, wolfram scripting
[16:49:12] <CodeMouse92> merijn: Uhm....they're not passed by 'reference'
[16:49:14] <GeDaMo> Ah, I don't know it
[16:49:15] <CodeMouse92> They're passed by assignment
[16:49:20] <snake> merijn, so its a reference
[16:49:23] <[itchyjunk]> :(
[16:49:25] <snake> instead of the int itself
[16:49:31] <[itchyjunk]> no place to ask for help with this..
[16:49:33] <[itchyjunk]> someone should learn it
[16:49:35] <leduyquang753> In Python references are passed by value.
[16:49:37] <CodeMouse92> There actually is a profound diff between pass-by-ref and pass-by-assignment ;)
[16:49:38] <merijn> snake: Right the "reference" is "the box" in boxed vs unboxed
[16:49:44] <CodeMouse92> Um, no.
[16:49:48] <snake> merijn, ok got it
[16:49:53] <snake> thanks
[16:49:55] <CodeMouse92> Okay, so, in Python, we have names and values. Names are bound to values.
[16:49:57] <merijn> leduyquang753: Well, things are passed by value, but the only things you have are references to heap objects
[16:50:03] <node1> But still Java dominant in terms of building software
[16:50:06] <leduyquang753> Exactly.
[16:50:07] <CodeMouse92> foo = 42 means foo is bound to the value 42 in memory.
[16:50:09] <node1> why?
[16:50:21] <merijn> leduyquang753: So, it's pretty much indistinguishable from pass by reference :p
[16:50:23] <CodeMouse92> Assigning bar = foo means bar is now bound to whatever foo was bound to at that moment
[16:50:32] <leduyquang753> It is different than simply passing by value.
[16:50:33] <snake> i have a final exam for data structures and algorithms
[16:50:36] <CodeMouse92> Passing to a function just assigns to the parameter name
[16:50:39] <leduyquang753> by reference.
[16:50:47] <node1> snake, which book you follow?
[16:50:56] *** Quits: inlight (~inlight@user/inlight) (Ping timeout: 265 seconds)
[16:50:56] <snake> i hope to god there isn't several questions on infix -> postfix, evaluating posfix, AND evaluation infix
[16:51:06] <merijn> snake: The downside of boxing is, effectively, that you add an extra pointer indirection to every computation (which can slow you down significantly in hot loops), so unboxed values tend to be better for generating well-performing code
[16:51:09] <leduyquang753> Passing by reference means if you assign to an argument the outside variable also changes.
[16:51:16] <CodeMouse92> The critical difference is, some values are immutable, like all integers, while some are mutable, like lists
[16:51:19] <leduyquang753> In Python that's not the case.
[16:51:20] <merijn> snake: But boxed values make for nicer programming (plays nice with genereics)
[16:51:28] *** Quits: Anticom (~anticom@87.190.49.75) (Remote host closed the connection)
[16:51:35] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Remote host closed the connection)
[16:51:37] <GeDaMo> [itchyjunk]: are you looking at some web page?
[16:51:43] <merijn> snake: So *a lot* of compiler effort goes into "automatically unboxing boxed types whereever possible"
[16:52:02] <snake> merijn, huh i saw a sony presentation on how using homogenous data (pointers) in your structures actually increases performance by reducing cache misses
[16:52:09] <CodeMouse92> merijn: Yes, and for the record, almost nothing you just described happens in Python at all, so "unboxed" and "boxed" are meaningless concepts in Python.
[16:52:17] <CodeMouse92> The memory model is completely different
[16:52:25] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[16:52:30] <bjs> CodeMouse92: the overhead is quite large for an int.  Imagine how many bytes you need to store an 8-bit int vs how big that int object is in Python
[16:52:32] <CodeMouse92> Ahh...ned had a talk on this
[16:52:51] <bjs> Python does have types that have unboxed things in them (e.g. array)
[16:52:57] <merijn> snake: "It Depends (TM)"
[16:52:59] <bjs> because of exactly this overhead
[16:53:00] <kek_> GeDaMo, the official viewer for hdf files but nevermind, I think the cli viewer can easily do what I want.
[16:53:11] <CodeMouse92> bjs: The last time I checked on this for my book, int doesn't actually have a big overhead
[16:53:17] <CodeMouse92> It's only as long as it needs to be for the integer
[16:53:28] <GeDaMo> kek_: sorry, I have no idea what an hdf file is either :P
[16:53:30] <CodeMouse92> The methods belonging to the class exist once in memory
[16:53:31] <bjs> CodeMouse92: the CPython overhead is uniformally ~20 bytes
[16:53:38] <merijn> CodeMouse92: It's a massive slowdown for numeric code, which is why all numpy arrays are unboxed internally
[16:53:55] <merijn> Which is why all numpy arrays need explicit datatypes and are limited to, like, intX/floatX values
[16:53:57] *** Joins: Anticom (~anticom@87.190.49.75)
[16:53:57] <bjs> CodeMouse92: for me, the Python int 127 is 28 bytes.
[16:54:06] <kek_> another question. I'm using pyTorch to train a neural network. I run it on my gaming system. gpustats show a load of 58%. Is that expected? I have zero experience with cuda but I know that one usually won't reach peak performance of a cluster. 
[16:54:20] <bjs> which is 28x more bytes than a C char would need on this system :)
[16:54:28] <CodeMouse92> ahhh, the reference counter
[16:54:32] <CodeMouse92> That's where the overhead is coming from
[16:54:33] <kek_> GeDaMo, "Hierarchical Data Format is a set of file formats designed to store and organize large amounts of data." :D 
[16:54:41] <bjs> CodeMouse92: the reference count is 8 bytes
[16:54:44] <GeDaMo> Well that's vague :|
[16:54:49] <bjs> there's lots of other things too in the header of a Python object
[16:54:54] <bjs> to make >20 bytes per object
[16:55:08] <CodeMouse92> https://pythonspeed.com/articles/python-integers-memory/
[16:55:09] <bayaz> Title: Massive memory overhead: Numbers in Python and how NumPy helps 
[16:55:22] <leduyquang753> CPython has a small integer object cache so working with small integers is quite fine.
[16:56:14] <CodeMouse92> 8 bytes for the ref count, 8 bytes for the type pointer, and then the data itself
[16:56:20] <[itchyjunk]> GeDaMo, i am writing code in the wolframcloud to get stuff and looking up definitions on the refrence page
[16:56:22] <[itchyjunk]> https://reference.wolfram.com/language/ref/WikidataSearch.html
[16:56:23] <bayaz> Title: WikidataSearch—Wolfram Language Documentation 
[16:56:32] <CodeMouse92> That's all
[16:56:39] <[itchyjunk]> I can find things using WikidataSearch
[16:56:48] <[itchyjunk]> but i can't figure out what i can do with the result
[16:57:04] <[itchyjunk]> I think i am supposed to use WikidataData but i don't understand how to use it
[16:57:07] <CodeMouse92> Fascinating as this is, dogs need out, and I need to get ready for work. o/
[16:57:16] <snake> "just pick it up and make a panel out of it" - Dr. wolfram probably
[16:57:21] <[itchyjunk]> hmm, can you link a notebook page?
[16:57:31] <bjs> CodeMouse92: it's still >16 bytes overhead on my machine
[16:57:42] <bjs> but 16 bytes is still a huge amount of overhead for a 1 byte number :)
[16:57:48] <snake> writes a big ass line of boiler plate that easily draws a bar chart and article presentation image on the screen
[16:57:49] <[itchyjunk]> https://www.wolframcloud.com/obj/610e4c05-bcf4-4f61-806f-78da3114e4c2
[16:57:57] <[itchyjunk]> can people see the content of that link?
[16:58:03] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[16:58:16] <bjs> not to mention the packing that a numpy array does. A Python list with Python ints is >20 bytes per int, all scattered over memory + 8bytes per reference in the list. Whereas a numpy array unboxes and packs into a contiguous chunk of memory
[16:58:21] *** Joins: kmh (~kmh@2a00:6020:5004:6800:d70:f2c2:21a:fc91)
[16:58:25] *** Joins: Spaceflight (uid423739@id-423739.ilkley.irccloud.com)
[16:58:40] <GeDaMo> [itchyjunk]: yes
[16:58:46] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[16:58:55] <[itchyjunk]> ah, so ctrl + enter runs the code on each line
[16:58:56] <snake> "with the power of the wolfram language and the cloud knowledge engine i can just take that display and make it into a dynamic program" - dr.wolfram
[16:58:58] *** Quits: Anticom (~anticom@87.190.49.75) (Remote host closed the connection)
[16:59:07] <nomagno> Ah yes, python parrformance
[16:59:09] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[16:59:14] <snake> *writes Dynamic[...] and it just works*
[16:59:28] <[itchyjunk]> when i run the Search, i shows `Type` Wikidata and symbols `recipe` `cookbook` etc
[16:59:41] <[itchyjunk]> I am curious if i can actually get data out of that type
[16:59:41] <GeDaMo> [itchyjunk]: I can click on the results and it takes me to the web page ion Wikidata
[17:00:11] <node1> One question hovering over mind. Are we achieve maximum speed in computing using silicon chip?
[17:00:20] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Excess Flood)
[17:00:20] <nomagno> def runprogram:\n\tleak()\n\treturn
[17:00:26] <snake> itchyjunk: i wanted to make a wolfram program that locates OOI in the night sky and points my telescope to them, but i was dumb and bought a dobonian telescope
[17:00:32] <snake> dobsonian*
[17:00:39] <snake> however that's spelled
[17:00:41] <[itchyjunk]> ah
[17:00:44] <[itchyjunk]> not what i want then
[17:00:46] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[17:00:53] <[itchyjunk]> maybe WA can't look at wikibooks?
[17:00:56] <node1> Is it end of sillicon chip? Thats why we are looking for quantum computing?
[17:01:01] <nomagno> node1: No, because of you add one gate to the biggest silicon chip, it becomes faster
[17:01:09] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[17:01:15] <GeDaMo> [itchyjunk]: what do you want to be able to do with them?
[17:01:16] <nomagno> So the fastest chip can always be topped.
[17:01:47] <[itchyjunk]> GeDaMo, i want to find some data i can play with. i was hoping i could find some data on recipies and do stuff with it
[17:01:53] <node1> hummm..  
[17:02:03] <[itchyjunk]> wolfram doesn't crawl internet so i have to use wikipedia or few other trusted sources
[17:02:12] <vdamewood> Slurp, slurp, people etc.
[17:02:13] <[itchyjunk]> i was hoping i can find recipes somewhere on wiki 
[17:02:21] <nomagno> You want a recipes list?
[17:02:30] <node1> why would i add? intel or amd would do :( it's their job
[17:02:33] <[itchyjunk]> node1, qcomputers won't be general purpose
[17:02:37] <[itchyjunk]> nomagno, from wikipedia
[17:02:44] <[itchyjunk]> so i can do wolframscripting stuff on it
[17:02:53] <snake> quantum computers, a solution looking for a problem
[17:02:56] <node1> Yes i do understand at least for the next 50 years [itchyjunk] 
[17:03:03] <[itchyjunk]> node1, no, ever.
[17:03:11] <beaky> damn im still stuck on day 12 of advent of code
[17:03:12] <leduyquang753> node1 Chips with vertically stacked layers are being developed.
[17:03:13] <[itchyjunk]> qcomputers fundamentally won't be a general purpose computer
[17:03:20] <snake> beaky, brooo! im on like 7 haha
[17:03:23] <node1> Yes it's still lot of error prone
[17:03:34] <[itchyjunk]> nothing to do with error.
[17:03:44] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[17:03:44] <snake> itchy: don't bother
[17:03:49] <[itchyjunk]> classical computers will exist for classical tasks
[17:03:54] <beaky> it is because advent of code features puzzles involving arrays and graphs, two of the hardest data structures to implement in a purely functional way without cheating
[17:04:22] <snake> yeah lol tho i used java for days 1-5 so maybe ishould just go back xD
[17:05:00] <GeDaMo> https://spectrum.ieee.org/quantum-computing-google-sycamore
[17:05:00] <bayaz> Title: How Much Has Quantum Computing Actually Advanced? 
[17:05:00] <snake> beaky, are you still using agda?
[17:05:14] *** Joins: moose`` (~moose@user/moose)
[17:05:22] *** Quits: moose` (~moose@user/moose) (Read error: Connection reset by peer)
[17:05:31] <snake> beaky, or haskell?
[17:05:51] <node1> Anyway but i'need to upgrade my workstation to be more productive. I'm still 15 years back
[17:05:52] *** Joins: Anticom (~anticom@87.190.49.75)
[17:06:00] <OverCoder> Hi
[17:06:14] <GeDaMo> Hi OverCoder :)
[17:06:23] <OverCoder> I want a tool to allow me to benchmark all of my API's endpoints to get some insights
[17:06:27] <OverCoder> about the performance
[17:06:36] <OverCoder> GeDaMo, been long :P
[17:07:31] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[17:07:46] <OverCoder> By API endpoints I mean of the local back-end I run on my computer, not the production one
[17:07:53] *** Joins: inlight (~inlight@157.42.246.30)
[17:07:53] *** Quits: inlight (~inlight@157.42.246.30) (Changing host)
[17:07:53] *** Joins: inlight (~inlight@user/inlight)
[17:08:02] *** Joins: Enitin (~Enitin@82.102.22.85)
[17:08:23] <node1> OverCoder, Hello, which type of API your using?
[17:08:29] <OverCoder> It's an HTTP API
[17:08:30] <merijn> [itchyjunk]: My opinion is that quantum accelerators will absolutely revolutionise some niche fields and have, essentially, zero impact on the average desktop
[17:08:30] <snake> OverCoder, maybe you can use node.js to make a request tothe endpoint and then run that script with time
[17:08:31] <node1> Flask ?
[17:08:35] <snake> just a thought
[17:08:38] <OverCoder> Next.js
[17:08:51] <node1> Like there are flask , FastAPI?
[17:09:02] <OverCoder> snake, I mean I could alternatively write a bash script that utilizes `hey`, but I am looking if there are tools that give me graphs and stuff
[17:09:04] <OverCoder> fancy stuff
[17:09:07] <nomagno> [itchyjunk]: does it have to be wikipedia? The OpenFoodFacts API hooks you to the biggest open database on food: https://openfoodfacts.github.io/api-documentation/
[17:09:08] <node1> It looks javascript
[17:09:11] <bayaz> Title: Open Food Facts API Documentation 
[17:09:13] <snake> ohh
[17:09:14] <OverCoder> node1, Next.js is JS yes
[17:10:22] <node1> I have knowledge of flask. And i use `http` and postman to test
[17:11:16] <node1> httpie*
[17:11:21] <snake> OverCoder, could you generate the data and then use it in wolfram to draw graphs?
[17:11:26] <[itchyjunk]> nomagno, i am not sure if wolfram script can do other stuff
[17:11:29] <snake> idk just an idea
[17:11:29] <node1> https://httpie.io/
[17:11:30] <bayaz> Title: HTTPie – API testing client that flows you 
[17:11:42] <snake> ooh, clicks
[17:12:05] <[itchyjunk]> merijn, it will probably have some non zero impact on desktop but it might be zero impact :P qcomputers will be used for niche field mostly is my idea too
[17:12:36] <node1> Great things about `httpie` is community is very friendly and helpful.
[17:12:51] <nomagno> We might see PCIE quantum cards someday or something
[17:12:57] <nomagno> For security purposes
[17:13:11] <nomagno> But not qCPUs as a main component
[17:13:13] <snake> nomagno, doubt
[17:13:14] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[17:13:46] <snake> i think you will access a quantum computer over the internet, if it were in your pc you'd need your bedroom or office to be like 0 degrees C at all times
[17:13:54] <snake> (or colder?)
[17:14:41] <nomagno> Active localised cooling
[17:14:48] <[itchyjunk]> well, in theory, room temperature superconducting hasn't been disproven
[17:14:51] *** Joins: Mangy_Dog (~Mange@user/mangy-dog/x-7397214)
[17:14:52] <[itchyjunk]> so that might be there.
[17:14:57] <node1> Greenland is the best place for qcomputing and data center
[17:15:05] *** Quits: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au) (Ping timeout: 250 seconds)
[17:15:07] <[itchyjunk]> also, we don't know if there are alternate ways to reduce quantum decoherence
[17:15:18] <[itchyjunk]> so nothing says we can't have room temperature qcomputers yet
[17:15:45] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[17:17:38] *** Quits: Anticom (~anticom@87.190.49.75) (Remote host closed the connection)
[17:17:46] <[itchyjunk]> I give up. idk how to use this language
[17:17:52] <nomagno> If they're used as entropy generators or whatever, it seems feasable to have them on consumer computers someday, even if with active cooling.
[17:17:55] *** Quits: braun (~MaghOz@212095005067.public.telering.at) (Quit: WeeChat 2.8)
[17:20:07] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[17:20:49] <pyzozord> ugh my path finding in python is not going so well at the moment
[17:21:15] <[itchyjunk]> nomagno, how does the api thing you linked to works?
[17:21:20] <[itchyjunk]> https://reference.wolfram.com/language/workflow/ImportData.html
[17:21:21] <bayaz> Title: Import Data—Wolfram Language Documentation 
[17:21:27] <[itchyjunk]> i can import "most common format" it says
[17:21:53] <[itchyjunk]> would i have to query that api, get data, store it in some "comman format" then import it from WS?
[17:23:21] <nomagno> Probably.
[17:23:36] <node1> Does anyone know any online learning platform for latest industrial skills?
[17:23:37] *** Joins: akevinhuang (~thekevinh@user/thekevinhuang)
[17:23:43] <nomagno> JSON is definitely a common format
[17:23:45] <[itchyjunk]> I would like to use this :https://reference.wolfram.com/language/workflow/ImportData.html
[17:23:53] <[itchyjunk]> to import this : https://en.wikibooks.org/wiki/Cookbook:Table_of_Contents
[17:23:54] <bayaz> Title: Cookbook:Table of Contents - Wikibooks, open books for an open world 
[17:24:09] <[itchyjunk]> but i can't find where exactly the book is or what format is is in
[17:24:30] <kek_> Will tmux survive if I e.g. disconnect my vpn etc?
[17:25:06] <[itchyjunk]> tmux continues to run on disconnect if that is what you mean
[17:25:14] <[itchyjunk]> provided you ran it correctly
[17:26:55] *** Quits: zaher (~zaher@37.48.180.81) (Ping timeout: 252 seconds)
[17:28:25] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[17:28:57] *** Joins: Anticom (~anticom@87.190.49.75)
[17:29:29] *** Quits: node1 (~hex@user/node1) (Quit: Leaving)
[17:29:50] *** Joins: hoochmonger (~hoochmong@user/hoochmonger)
[17:30:25] *** Quits: hexingb (~hexingb@103.37.140.21) (Ping timeout: 256 seconds)
[17:30:49] *** Joins: hexingb (~hexingb@2409:8900:2a50:6a9:30fe:fdb6:7b7e:44b8)
[17:31:39] *** Joins: junebug (~junebug@2600:1700:3db0:2540:4dbe:37da:83de:ba5b)
[17:32:38] *** Joins: ixil (~ixil@2a02:120b:2c11:1d70:a38f:d77f:3f7e:92d2)
[17:32:58] *** Joins: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[17:33:25] <kek_> [itchyjunk], ok thanks. Currently I just ssh into my computer, open tmux, run my job which might take a day to run and then tomorrow ssh into it again because I change my connection quit a bit. conenct to vpns, disconnect, shut down my computer etc. etc. not sure if that's the way to really use it, I think most people just have it locally no?
[17:33:32] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[17:34:22] *** Joins: CoderGuy (~CoderGuy@user/coderguy)
[17:34:28] <CoderGuy> the feeling when you think something is cheaper & then it's not
[17:34:39] *** Quits: xsperry (~xs@user/xsperry) (Remote host closed the connection)
[17:34:40] <[itchyjunk]> no i have it for my vps
[17:34:49] *** Quits: Teckla (~Teckla@user/teckla) (Quit: leaving)
[17:34:50] <[itchyjunk]> to keep some process running when my connection terminates
[17:35:35] *** Joins: kek_1 (~kek_@net-2001-067c-10ec-574f-8000-0000-0000-000d.v6.ethz.ch)
[17:35:54] <[itchyjunk]> Man i feel exhausted. time to give up on WS for now
[17:36:05] *** Quits: junebug (~junebug@2600:1700:3db0:2540:4dbe:37da:83de:ba5b) (Ping timeout: 252 seconds)
[17:37:55] *** Quits: kek_ (~kek_@2a02:168:200f:1f10:dcde:2774:1301:baad) (Ping timeout: 252 seconds)
[17:38:33] *** Joins: allegorical_- (~guest@2607:fea8:33e0:65c:c5f0:255e:4e6b:4f67)
[17:40:29] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[17:41:05] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[17:41:57] *** Quits: murii_ (~murii@2a02:a58:835a:1100:dd41:deff:1841:342) (Remote host closed the connection)
[17:42:19] *** Quits: allegorical_ (~guest@2607:fea8:33e0:65c:806:f743:978d:d8d7) (Ping timeout: 252 seconds)
[17:43:19] *** Joins: pingpongball (~pingpongb@user/pingpongball)
[17:43:24] <pingpongball> Hello
[17:43:27] <pingpongball> Anybody here?
[17:43:30] <pulse> Ahoy there
[17:43:33] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[17:43:36] <pulse> I am definitely not here
[17:43:37] <[itchyjunk]> I dl'ed a book and it disappeared.
[17:43:43] <pingpongball> Anybody who have written several linux applications ?
[17:43:53] *** Joins: Enitin (~Enitin@82.102.22.86)
[17:44:13] <pulse> pingpongball, Just ask your question, if someone knows they will answer :-)
[17:44:26] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Read error: Connection reset by peer)
[17:44:35] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[17:44:35] <pingpongball> should i use gnome-builder or gtk?
[17:45:00] <pingpongball> which is easy ? or which is performant? out of which i can make linux apps fast
[17:45:17] <pingpongball> If i use python like in glade, would be my linux app, slow ?
[17:46:24] <pingpongball> so here are some old developers, expreience c++ , c developers
[17:47:03] <GeDaMo> GTK is an API, I'd assume that gnome builder is some GUI building tool which generates GTK code
[17:47:27] *** Joins: Payam (~Payam@138.106.57.132)
[17:48:02] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[17:48:25] <KillerWasp> GTK use GDK
[17:48:35] <pingpongball> Give me a good tutorial where i can master building gtk linux apps?
[17:49:02] *** Quits: mattallmill (~mattallmi@ip68-103-132-187.ks.ok.cox.net) (Ping timeout: 240 seconds)
[17:49:03] *** Joins: Enitin (~Enitin@82.102.22.86)
[17:49:09] *** Quits: yhsiveht (~Nishant@2405:201:f005:c007:5dca:71f9:c326:6e3b) (Quit: Leaving)
[17:49:10] <KillerWasp> pingpongball: you can use GTK2 or GTK3, both is different
[17:49:41] <pingpongball> are they really different, i see gtk4 too
[17:52:55] <KillerWasp> gtk4 now??
[17:53:24] <KillerWasp> i'm check all the tutorial/guides links, but all are dead...
[17:53:58] *** Quits: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[17:54:25] <pingpongball> dead
[17:54:32] <pingpongball> =L  why
[17:55:02] <[itchyjunk]> ded like my hopes and dreams
[17:55:09] <KillerWasp> unknown, even found from gnome website, and only give 404. :/
[17:56:07] <KillerWasp> https://developer.gnome.org/documentation/tutorials.html
[17:56:08] <bayaz> Title: Tutorials - GNOME Developer Documentation 
[17:56:15] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:56:41] <KillerWasp> i guess that the site are being remodeled.
[17:56:57] <pingpongball> When i see apps?
[17:57:01] <pingpongball> everybody have build everything
[17:57:11] <pingpongball> there is nothing left for us to build
[17:57:12] <pingpongball> on linux
[17:57:37] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Read error: Connection reset by peer)
[17:58:04] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:59:06] <KillerWasp> https://docs.gtk.org/gtk4/
[17:59:07] <bayaz> Title: Gtk-4.0 
[17:59:58] <KillerWasp> mmm, they now are separated in GDK and GSK.
[18:00:41] <KillerWasp> https://docs.gtk.org/gtk3/
[18:00:42] <bayaz> Title: Gtk-3.0 
[18:00:53] <KillerWasp> and not for 2.0 :'(
[18:00:55] <CoderGuy> okay so my question was this
[18:01:01] *** Quits: swp1 (~Thunderbi@37.203.60.116) (Ping timeout: 256 seconds)
[18:01:03] <CoderGuy> Does splitting a string twice by manually looping through each char have the same net cost as splitting the string, iterating over said split results & splitting again?   Answer: Apparently it does.
[18:01:10] <CoderGuy> https://bpa.st/IDQQ
[18:01:11] <bayaz> Title: View paste IDQQ 
[18:01:24] <CoderGuy> ummm yeah I think they truly have the same cost
[18:02:11] <KillerWasp> IDDQD
[18:02:22] <CoderGuy> huh is it wrong?
[18:02:38] <KillerWasp> i'm immortal!!! >:D
[18:02:44] <CoderGuy> oh ok
[18:02:46] <GeDaMo> How are you measuring 'cost'?
[18:02:51] <CoderGuy> just like what steps will happen
[18:03:00] <CoderGuy> it seems to be basically the same thing even in steps
[18:03:27] <pyzozord> ok did part one of day 15. It takes 13s to execute
[18:03:32] <CoderGuy> I thought the loop over would change things but I guess it doesn't because in both cases you have to loop over the chars
[18:03:42] <CoderGuy> and somehow looping over the chars is the same as "split it & loop over the results"
[18:04:09] <KillerWasp> GTK3 is considered old version now.
[18:04:40] *** Quits: ixil (~ixil@2a02:120b:2c11:1d70:a38f:d77f:3f7e:92d2) (Remote host closed the connection)
[18:05:04] *** Joins: ixil (~ixil@2a02:120b:2c11:1d70:a38f:d77f:3f7e:92d2)
[18:06:41] <merijn> pyzozord: You can do better than that ;)
[18:06:51] *** Joins: murii (~murii@90.95.42.142)
[18:07:58] <merijn> pyzozord: Mine takes bout ~1.5s for part 1 and 2, including printing a map of the route
[18:09:56] <pyzozord> I think that's because I call heapq.heapify after each node update
[18:10:32] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[18:10:54] *** Joins: Enitin (~Enitin@82.102.22.84)
[18:11:07] *** Quits: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[18:11:29] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[18:12:07] <merijn> I had an epiphany last night in bed on how to speed up yesterday too
[18:12:22] <decker> if something says 'read as binary string' is that a binary arraybuffer?
[18:12:23] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[18:12:24] <merijn> My current version takes 40s for the real puzzle, so time to see how fast I can make it
[18:12:30] *** Quits: anthk_ (~anthk@92.176.105.30) (Remote host closed the connection)
[18:12:37] <decker> (no, it's a string.)
[18:12:50] <decker> isn't it? I mean maybe it's not so obvious... 
[18:14:06] <GeDaMo> Presumably it means you shouldn't rely on line endings and suchlike
[18:14:17] *** Quits: Anticom (~anticom@87.190.49.75) (Remote host closed the connection)
[18:15:14] *** Joins: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr)
[18:15:45] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[18:16:09] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:16:30] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[18:16:47] <Stefan26> you implemented your own "find shortest path in weighted graph" algoritm?
[18:17:35] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[18:18:03] *** Joins: sh1r4s3 (~sh1r4s3@109.252.75.9)
[18:18:20] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[18:18:56] *** Joins: magla (~gelignite@55d4970c.access.ecotel.net)
[18:19:43] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 252 seconds)
[18:20:02] *** Quits: mz` (~mz`@user/mz/x-8532539) (Ping timeout: 240 seconds)
[18:20:32] <vdamewood> Dammit, I want to build a computer.
[18:20:36] <GeDaMo> Isn't that just Dijkstra's algorithm?
[18:21:04] <GeDaMo> vdamewood: got any paperclips? :P https://www.evilmadscientist.com/2013/paperclip/
[18:21:05] <bayaz> Title: How to Build a Working Digital Computer… out of paperclips | Evil Mad Scientist Laboratories 
[18:21:55] <decker> https://turingcomplete.game/
[18:22:06] <vdamewood> GeDaMo: Just as I was working at the ben-eater level of low-level, you gotta bring me down.
[18:22:10] <vdamewood> ...lower.
[18:22:47] <vdamewood> Can I use aluminium foil to make a capacitor?
[18:23:07] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[18:23:21] *** Joins: austincheney (~austinche@2600:1700:1220:76c8:19b0:f1e9:cf17:9c15)
[18:23:32] <GeDaMo> A capacitor is two conductors separated by an insulator
[18:23:36] <decker> https://introversion.co.uk/prototypes/   Episode 3 -Megaprocessor
[18:23:37] <bayaz> Title: Chris Delay's Master Failure Class 
[18:23:39] *** Joins: Anticom (~anticom@87.190.49.75)
[18:23:50] <pyzozord> my dijkstra is kinda slow
[18:24:01] <pyzozord> I did it in a dumb way, rewriting it now
[18:24:07] <vdamewood> GeDaMo: Yeah, I don't remember if aluminium is a conductor.
[18:24:16] <nomagno> decker: Alternative title: Just another proprietary VM with an imaginary P-code that is horribly optimized
[18:24:19] <vdamewood> Oh, wait, isn't it a fairly efficient one?
[18:24:21] *** Joins: Enitin (~Enitin@82.102.22.85)
[18:24:38] <nomagno> :D
[18:24:38] *** Quits: devz3ro (devz3ro2@user/devz3ro) (Quit: *)
[18:24:41] <GeDaMo> Aluminium has been used in electrical cables, I believe
[18:24:43] <MrMobius> they use it for house wiring in some countries
[18:24:44] <decker> aluminum is a really good conductor - aluminum oxide isn't
[18:24:46] <GeDaMo> Yeah
[18:24:56] <vdamewood> decker: Oohh...
[18:25:03] <GeDaMo> Sapphires and rubies are made of aluminium oxide 
[18:25:09] <decker> copper oxide is at last still conductive
[18:25:11] <vdamewood> And Aluminum oxidises instantly, doesn't it?
[18:25:35] <decker> it does :) but you know screws smooshed into the wire make air-tight gap
[18:25:49] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[18:25:52] *** Quits: Anticom (~anticom@87.190.49.75) (Remote host closed the connection)
[18:26:34] *** Joins: Anticom (~anticom@87.190.49.75)
[18:26:41] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi)
[18:27:05] <vdamewood> Rght, the reason aluminum is so popular is because Al2O3 forms a shiny, protective barrier and once you get that one-molecule sheet of oxide it doesn't oxidize any further.
[18:27:16] *** Quits: kek_1 (~kek_@net-2001-067c-10ec-574f-8000-0000-0000-000d.v6.ethz.ch) (Read error: Connection reset by peer)
[18:27:26] *** Joins: cis_ (~cis@user/cis)
[18:27:35] <pyzozord> ok now my dijkstra takes 0.7s for part one
[18:27:37] <pyzozord> that's better
[18:27:45] *** Joins: devz3ro (devz3ro2@2a00:1838:37:271::46d9)
[18:27:47] *** Quits: Rayke (rayke@user/rayke) (Ping timeout: 252 seconds)
[18:27:50] <pyzozord> merijn: thanks for not letting me off the hook
[18:27:55] <pulse> How to make good coffee step 1: make coffee
[18:28:01] *** Quits: devz3ro (devz3ro2@2a00:1838:37:271::46d9) (Changing host)
[18:28:01] *** Joins: devz3ro (devz3ro2@user/devz3ro)
[18:28:03] <pulse> Step 2: put 5 spoons of sugar into it
[18:28:03] *** Quits: Anticom (~anticom@87.190.49.75) (Remote host closed the connection)
[18:28:09] <vdamewood> pulse: Step 1: Grow good beans.
[18:28:16] *** Quits: Frogging101 (~Frogging@2600:3c03:e000:12e::f:100f) (Ping timeout: 245 seconds)
[18:28:20] <nomagno> That game seems like a watered-down, poorly optimized, unportable, overengineered VM + memory inspector with a few default punch cards included
[18:28:25] <pulse> Excuse me sir but beans are for soup not coffee
[18:28:36] *** Quits: cis (cis@user/cis) (Ping timeout: 268 seconds)
[18:28:37] *** Joins: Anticom (~anticom@87.190.49.75)
[18:28:41] <vdamewood> pulse: A Soy vanilla latte is a 3-bean soup.
[18:28:59] * pulse encounters a parse error
[18:29:00] <decker> nomagno moderatly more relavent than redstone computers :) 
[18:29:04] *** Joins: Frogging101 (~Frogging@kitsune.fastquake.com)
[18:29:41] *** Joins: Rayke (~rayke@user/rayke)
[18:29:59] <decker> ice cream not soup
[18:30:31] *** Joins: nvmd (~nvmd@user/nvmd)
[18:30:35] <pulse> Ice beam
[18:30:45] <nomagno> decker: you have a point
[18:30:54] *** Joins: sonny (~sonny@8.6.144.252)
[18:31:18] *** Joins: junebug (~junebug@2600:1700:3db0:2540:cdd6:4599:a811:6adc)
[18:31:19] <vdamewood> pulse: Parse error?
[18:31:28] <nomagno> That game is, like, hooking a VM binary to a Godot scene. Which you can do with a VM binary and Godot. Seems fun nontheless
[18:31:41] <pulse> vdamewood, What is a 3-bean
[18:31:46] <GeDaMo> I thought that megaprocessor link was going to be https://megaprocessor.com/ :P
[18:32:00] <vdamewood> pulse: As a side note, yes, 5 spoons of sugar makes any coffee delicious.
[18:32:19] *** Joins: Teckla (~Teckla@user/teckla)
[18:32:31] <decker> https://github.com/MutableLoss/6502SimDesktop vdamewood maybe make a cray 1/2 ?
[18:32:31] <pulse> I also have this theory that sugar actually wakes you up far better than caffeine does
[18:32:32] <bayaz> Title: GitHub - MutableLoss/6502SimDesktop: Desktop Version of the Easy 6502 Simulator 
[18:32:34] <pulse> Caffeine just makes you jittery
[18:32:43] <pulse> Sugar just smacks you up
[18:32:52] <pulse> Damn sugar
[18:32:56] <vdamewood> pulse: When you see descriptors with hyphens, think of the earlier items as describing the later items. For example, a Linux-based server says that the server is based on Linux. 3-bean means having three beans.
[18:33:26] <pulse> I pictured this https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/delish-200318-seo-how-to-cook-beans-horizontal-final-14288-eb-1585337558.jpg?crop=0.6668421052631579xw:1xh;center,top&resize=480:*
[18:33:27] <bayaz> Type: image/jpeg Size: 52.6 kB 
[18:33:29] <pulse> But with only 3 beans
[18:33:32] *** Quits: federico_it (~textual@176.206.87.84) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:34:01] <vdamewood> pulse: Ah, no, it means 3 kinds/types/breeds of bean.
[18:34:54] <GeDaMo> https://www.youtube.com/watch?v=OSlfttDnurw
[18:34:55] <bayaz> Title: Blackadder - Advanced Math (some beans) 
[18:36:13] *** Joins: xkuru (~xkuru@user/xkuru)
[18:37:55] <decker> http://www.cburch.com/logisim/ https://github.com/kara-abdelaziz/LS6502   logisim is more like Spice
[18:37:55] <bayaz> Title: Logisim 
[18:37:56] <bayaz> Title: GitHub - kara-abdelaziz/LS6502: 6502 processor implemented in Logisim 
[18:38:25] <MrMobius> Kowalski is the goto 6502 simulator if youre on windows
[18:38:55] <decker> but if you want to take a bunch of them and wire them together... you need more like a IC model
[18:38:57] <decker> rather than a sim
[18:39:22] <decker> (although you could mangle the code internally to maybe make a sim do parallel chips)
[18:40:16] *** Joins: skipper (~whatsupbo@user/scobydoo)
[18:40:37] *** Quits: junebug (~junebug@2600:1700:3db0:2540:cdd6:4599:a811:6adc) (Ping timeout: 252 seconds)
[18:41:44] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[18:43:32] *** Quits: ixil (~ixil@2a02:120b:2c11:1d70:a38f:d77f:3f7e:92d2) (Remote host closed the connection)
[18:43:57] *** Joins: ixil (~ixil@215.17.193.178.dynamic.wline.res.cust.swisscom.ch)
[18:46:07] <deniska> pyzozord: haha https://i.redd.it/roivwdjl2o581.png
[18:46:08] <bayaz> Type: image/png Size: 57.3 kB 
[18:46:27] <KillerWasp> decker: you're show your 6502 emulator collection?
[18:47:14] <decker> heh no not mine- just an approach if one didn't have their hands on circuit boards and whatnot
[18:47:18] *** Quits: job (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[18:48:13] *** Quits: TastyWiener95 (~uhhh3@user/tastywiener95) (Quit: Konversation terminated!)
[18:48:21] *** Joins: kveroneau (~kveroneau@node1.veroneau.net)
[18:49:41] *** Joins: zaher (~zaher@37.48.180.81)
[18:51:37] *** Quits: sonny (~sonny@8.6.144.252) (Ping timeout: 252 seconds)
[18:56:29] <pyzozord> deniska: heh
[18:56:59] <pyzozord> I remembered but not enough to do it all correctly without error
[18:57:19] <pyzozord> I remember the big pieces, breadth first, priority queue...
[18:57:49] <deniska> pyzozord: priority queue? Haha, min() goes brr
[18:58:48] *** Joins: sonny (~sonny@8.6.144.252)
[18:59:56] <pyzozord> lol :D
[19:00:13] <pyzozord> i was thinking about that but i wanted to use the heapq
[19:00:18] <pyzozord> but I did it the wrong way
[19:00:31] *** Quits: caramel (~caramel@user/caramel) (Ping timeout: 256 seconds)
[19:00:31] <pyzozord> i loded up all nodes into the heap upfront and then started removing from it
[19:00:48] <pyzozord> so I had to heapify after each iteration because heapq doesn't support updating values
[19:01:14] <pyzozord> had to do it the smarter way and have a "running queue" of only the next few items to visit
[19:01:24] <pyzozord> but I looked that up, I forgot about it
[19:01:36] <pyzozord> still working on part 2 atm
[19:03:12] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Quit: WeeChat 3.2.1)
[19:03:48] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (Quit: leaving)
[19:04:08] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[19:04:25] *** Joins: caramel (~caramel@user/caramel)
[19:04:39] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[19:05:51] <vdamewood> deniska: Are you around?
[19:06:11] *** Quits: Brando753 (~Brando753@ec2-34-218-254-59.us-west-2.compute.amazonaws.com) (Ping timeout: 245 seconds)
[19:06:32] *** Joins: mikeliuk (~mikeliuk@213.205.198.137)
[19:08:00] *** Joins: rsx (~dummy@ppp-188-174-144-140.dynamic.mnet-online.de)
[19:08:34] *** Joins: spine-o-saurus (~bagman@2602:48:a06d:880c:5eab:94a8:10eb:6735)
[19:08:58] *** Quits: ixil (~ixil@215.17.193.178.dynamic.wline.res.cust.swisscom.ch) (Remote host closed the connection)
[19:09:15] <vdamewood> Oh, hey, you said something not very long ago.
[19:09:22] *** Joins: ixil (~ixil@2a02:120b:2c11:1d70:a38f:d77f:3f7e:92d2)
[19:09:58] <deniska> vdamewood: yeah
[19:10:12] <pyzozord> nice, second star secured. In total the execution time takes 3.5 for both
[19:10:19] *** Joins: Ilyu (~quassel@78.202.228.230)
[19:10:44] <deniska> pyzozord: my spoiler https://github.com/deniska/adventofcode/blob/main/advent2021/a15.py
[19:10:45] <bayaz> Title: adventofcode/a15.py at main · deniska/adventofcode 
[19:10:51] *** Parts: pingpongball (~pingpongb@user/pingpongball) ()
[19:12:13] <pyzozord> here is mine https://ideone.com/UrNoMg
[19:12:16] <bayaz> Title: Ideone.com 
[19:13:10] <pyzozord> deniska: your solution, as usual, I like much more than mine
[19:13:15] <vdamewood> deniska: Damn, I have a question and I'm not sure how to ask it.
[19:13:22] *** Quits: sonny (~sonny@8.6.144.252) (Ping timeout: 260 seconds)
[19:13:50] *** Quits: ixil (~ixil@2a02:120b:2c11:1d70:a38f:d77f:3f7e:92d2) (Ping timeout: 260 seconds)
[19:13:55] <deniska> vdamewood: you better ask it now, or I'll be AFK for an hour soon :)
[19:14:18] <vdamewood> deniska: I guess the question is, gramatically, how do you tag something with its source language when elaborating on the original language of an import?
[19:14:46] *** Parts: spine-o-saurus (~bagman@2602:48:a06d:880c:5eab:94a8:10eb:6735) ()
[19:15:58] <vdamewood> deniska: Eg, In English we'd do this: Leo Tolstoy (Russian: Лев Толстой, 'Lev Tolstoy')
[19:16:50] <deniska> vdamewood: similarly: Уи́льям Шекспи́р (англ. William Shakespeare)
[19:17:03] *** Quits: skepta (~eric2@36.77.236.126) (Read error: Connection reset by peer)
[19:17:08] <vdamewood> deniska: Okay. Thanks.
[19:17:12] <deniska> common languages have abbreviations like "англ.", "фр."
[19:17:39] *** Joins: zaher_ (~zaher@37.48.176.213)
[19:17:45] <beaky> nice i like graph search
[19:18:00] <merijn> whoo
[19:18:07] <pyzozord> beaky: you are getting free spoilers, cover your eyes :P
[19:18:10] <merijn> New version of yesterday finishes instantly
[19:18:33] <merijn> In fact, new version of yesterday finishes instantly even if I expand the polymer 100x instead of 40x
[19:18:41] <pyzozord> merijn: i suppose you found the answer the the puzzle I couldn't find
[19:19:47] *** Quits: zaher (~zaher@37.48.180.81) (Ping timeout: 256 seconds)
[19:20:21] *** Quits: inlight (~inlight@user/inlight) (Read error: Connection reset by peer)
[19:20:31] <decker> polymer really only has to do a max of 75 ops per step
[19:20:58] <vdamewood> deniska: Also, today I learned that 'Lev' is the Russian word for Lion. For some reason, English has separate words for Lion, the noun, and Leo, the name.
[19:21:43] <pyzozord> deniska: I have few lessons from your code: 1) don't use 2d lists for grid, use tuple indexes 2) nice usage of dx,dy for neighbors 3) min go brrr, screw heapq 4) no need for objects, can keep seen, distances, etc in separate variables 5) don't be afraid or one letter variables for loop indexes, they might be more readable
[19:22:09] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:22:14] <deniska> pyzozord: the former is more of laziness
[19:22:26] <deniska> pyzozord: I spent way too much time debugging a nasty off by one error in part 2 :)
[19:22:46] <deniska> which I probably would catch sooner given a proper 2d array :)
[19:23:20] *** Joins: federico_it (~textual@151.36.44.116)
[19:23:37] <beaky> nice i liek arrays my favorite data structure
[19:23:40] *** Joins: inlight (~inlight@157.42.246.30)
[19:23:40] *** Quits: inlight (~inlight@157.42.246.30) (Changing host)
[19:23:40] *** Joins: inlight (~inlight@user/inlight)
[19:25:08] <pyzozord> i've spent in total few hours
[19:25:16] <pyzozord> i'd say about 2-3h
[19:25:29] <deniska> yeah, ~2 hours for me
[19:25:43] <vdamewood> Something I've been wondering for years, is there a difference between a 2d array and a matrix?
[19:25:53] <merijn> vdamewood: "it depends"
[19:25:54] <deniska> it doesn't help that a completely wrong algorithm works well for an example input :)
[19:25:54] <pyzozord> that's second time I actually implemented dijkstra, this time without implementing a binary heap
[19:26:03] <vdamewood> merĳn: Figures.
[19:26:06] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[19:26:19] <constxd> matrix is a subsert of 2d-array
[19:26:34] <pyzozord> I think 2d array is just how values are organized, matrix has specific operations it can do
[19:26:37] <merijn> I would argue it isn't
[19:26:51] <constxd> subset*
[19:26:54] <constxd> merijn: why?
[19:27:17] <pyzozord> I'd call it a superset, has the same values, but more defined operations
[19:27:22] <merijn> constxd: I'm assuming you meant that "2d-arrays can have different sizes at different offsets"?
[19:27:27] <constxd> merijn: yes
[19:27:35] <merijn> constxd: I would argue those aren't 2d arrays
[19:27:40] <merijn> Those are "arrays of arrays"
[19:27:45] <constxd> ok
[19:27:52] <constxd> then matrix and 2d-array are isomorphic
[19:28:23] *** Joins: rtypo (~alex@user/rtypo)
[19:28:38] <merijn> Solving part 1 and 2 of day 14 now takes me 0.01s, down from 40s from the original :D
[19:28:49] <vdamewood> I think I like pyzozord's explanation that matricies have operations that arrays don't.
[19:29:35] <merijn> pyzozord: How fast is your day 14 by now? :)
[19:29:42] <vdamewood> no one ever takes the dot product of two arrays.
[19:29:47] <GeDaMo> A matrix is an abstract type which can be implemented using arrays
[19:29:54] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (Remote host closed the connection)
[19:29:59] <pyzozord> merijn: I haven't been optimizing it, I'll spint it up with time right now to give exact measurement
[19:30:04] *** Joins: minto_ (~mintograd@47.201.5.61)
[19:30:14] <nomagno> A matrix is a 2D rectangular array for which operations are defined
[19:30:30] <nomagno> In an object oriented language, you might not be able to use .sum() on a 2D array, for instance
[19:30:33] <nomagno> but very much so on MatrixType1
[19:30:58] <pyzozord> merijn: it takes 15 seconds
[19:31:03] <nomagno> If talking about implementations, 2D arrays in general are very hard to efficiently dynamically resize
[19:31:09] <merijn> pyzozord: Well, you have a new target, then ;)
[19:31:22] <nomagno> you have to add padding like, EVERYWHERE to expand a 2D array in both directions
[19:31:30] <nomagno> On most implementations
[19:31:44] <pyzozord> merijn: I looked up the answer after I got mine to work, so I'm spoiled now
[19:31:51] *** Joins: Brando753 (~Brando753@ec2-34-218-254-59.us-west-2.compute.amazonaws.com)
[19:31:55] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[19:32:09] <pyzozord> merijn: it would probably took few more hours of banging my head on a desk with notebook and pen
[19:32:43] <pyzozord> ok advent of code does get tougher over time
[19:32:57] <pyzozord> beggnings were easy, but by now it's pretty serious stuff
[19:33:03] *** Quits: minto (~mintograd@47.201.5.61) (Ping timeout: 252 seconds)
[19:33:17] * vdamewood implements GeDaMo using a 4-d array.
[19:33:21] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[19:33:38] *** Joins: sonny (~sonny@8.6.144.252)
[19:34:04] <GeDaMo> Insufficient dimensions :P
[19:34:35] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:b584:44f5:72b6:6bbf) (Remote host closed the connection)
[19:34:36] * vdamewood implements GeDaMo using a 4d6 array.
[19:34:52] <pyzozord> dijkstra is essentially the most complex algorithm I learned
[19:35:00] *** Quits: sonny (~sonny@8.6.144.252) (Client Quit)
[19:35:16] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:b584:44f5:72b6:6bbf)
[19:35:20] <pyzozord> I really feel challanged now with these puzzles, not sure if I'll make it to the 25th day
[19:35:30] <nomagno> Today's problem 1 seems very fun, actually!
[19:35:32] <vdamewood> pyzozord: You are challanged.
[19:35:43] <nomagno> Let me take a jab at it. Since I don't like registering, I'm stuck with only the first problem of every day
[19:35:48] <merijn> nomagno: Today's was fairly relaxed compared to yesterday
[19:36:13] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Ping timeout: 256 seconds)
[19:36:16] <merijn> nomagno: You're missing out, the twists are fun
[19:36:16] <nomagno> Let me take a look at problem 14 then
[19:36:20] <pyzozord> I think today can be also solved with a backtracking algorithm
[19:36:33] <merijn> nomagno: 14 part 1 is easy-peasy, part 2 was nasty
[19:36:49] <pyzozord> merijn: can you share your solution?
[19:36:54] <merijn> Of which one?
[19:37:03] <nomagno> Well unless someone copyright-infringes, I'm stuck not seeing it
[19:37:17] <nomagno> ... let me look on youtube to see if someone copyright-infringed, actually!
[19:37:21] *** Joins: va5c0 (~vasco.nun@2001:818:e35b:6300:6b1:c037:b1cd:a17d)
[19:37:36] <merijn> nomagno: You can just use your Google oauth to sign in :p
[19:37:41] *** Quits: Anticom (~anticom@87.190.49.75) (Remote host closed the connection)
[19:37:46] <merijn> Or reddit, or github, or whatever
[19:37:48] <pyzozord> merijn: day 14
[19:37:57] <nomagno> Implying I am logged in to Google, or Reddit, or Github-
[19:37:58] <nomagno> Oh well I do have a Github account I don't use!
[19:38:00] *** Joins: qbt (~qbt@user/edun)
[19:38:02] *** Quits: va5c0 (~vasco.nun@2001:818:e35b:6300:6b1:c037:b1cd:a17d) (Client Quit)
[19:38:05] *** Quits: decker (~d3x0r@user/d3x0r) (Read error: Connection reset by peer)
[19:38:07] <merijn> pyzozord: https://github.com/merijn/AdventOfCode/blob/master/Day14.hs
[19:38:08] <bayaz> Title: AdventOfCode/Day14.hs at master · merijn/AdventOfCode 
[19:38:10] *** Parts: qbt (~qbt@user/edun) ()
[19:38:24] *** Joins: va5c0 (~vasco.nun@2001:818:e35b:6300:6b1:c037:b1cd:a17d)
[19:38:26] <MrMobius> does AoC time how long you took?
[19:38:27] <merijn> 71-115
[19:38:41] <merijn> MrMobius: not really
[19:38:52] <merijn> MrMobius: It ranks leaderboards based on "first to submit answer"
[19:39:01] <Thedarkb1-Deskto> Imagine if functions with multiple entry points actually got implemented by a C compiler, I wonder what kind of spaghetti would emerge.
[19:39:06] *** Joins: Anticom (~anticom@87.190.49.75)
[19:39:08] <merijn> So it kinda correlates to your time, with respect to people in the same timezone
[19:39:09] <nomagno> My Google account is definitely not touching my computer outside Incognito mode
[19:39:48] *** Joins: Sedan (~nigbkb@1-169-23-248.dynamic-ip.hinet.net)
[19:40:07] <kveroneau> nomagno, if you are on Linux, you can always run Chrome in a firejail to further restrict it.
[19:40:24] *** Joins: decker (~d3x0r@ip68-96-102-241.lv.lv.cox.net)
[19:40:28] <kveroneau> In this day and age, it's always a good idea to jail your browsers, as browser exploits are only getting more and more common.
[19:41:00] <pyzozord> lol people implementing shortest path search in 4 minutes 29 secounds
[19:41:13] *** Joins: peteyboy_ (~peteyboy1@95.169.232.161)
[19:41:14] <pyzozord> that just doesn't make sense
[19:41:24] <pyzozord> merijn: oh right, haskell, well nevermind
[19:41:56] *** Quits: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[19:42:02] <nomagno> I really should make more use of firejail
[19:42:14] <merijn> pyzozord: :p
[19:42:34] <pyzozord> merijn: if you care to explain what you are doing I'd be interested in reading that
[19:42:47] <pyzozord> but no worries, I understand if you don't care
[19:42:53] *** Quits: Kuleshov (Kuleshov@46.138.252.54) (Quit: Leaving)
[19:42:53] *** Joins: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[19:43:02] <merijn> My colleague is doing his in literate haskell with explanations, lemme check what he did
[19:43:38] <merijn> pfft, the slacker
[19:43:42] <merijn> No explanations
[19:43:44] *** Quits: _wovixo_ (~wovixo@128.104.205.49) (Quit: Leaving)
[19:44:09] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[19:44:32] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 240 seconds)
[19:45:16] *** Quits: Sedan (~nigbkb@1-169-23-248.dynamic-ip.hinet.net) (Remote host closed the connection)
[19:46:00] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[19:46:05] *** Joins: Akuli (~Akuli@82-203-161-29.bb.dnainternet.fi)
[19:46:44] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[19:48:02] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[19:50:49] *** Joins: wovixo (~wovixo@128.104.205.49)
[19:51:25] *** Quits: va5c0 (~vasco.nun@2001:818:e35b:6300:6b1:c037:b1cd:a17d) (Quit: WeeChat 3.3)
[19:51:51] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[19:53:56] *** Joins: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091)
[19:54:24] *** Quits: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091) (Client Quit)
[19:54:32] *** Joins: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091)
[19:55:25] *** Quits: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091) (Client Quit)
[19:55:33] *** Joins: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091)
[19:55:48] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[19:55:53] *** Joins: soapsudsxx (~soapsudsx@141.193.188.143)
[19:56:12] *** Joins: jwillia3 (~jwillia3_@205.178.41.133)
[19:57:57] *** Joins: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net)
[19:58:19] <nomagno> Part two of day 14 isn't really harder, it seems
[19:58:22] *** Quits: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091) (Client Quit)
[19:58:30] *** Joins: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091)
[19:58:34] <KillerWasp> all here busy with aoc...
[19:58:43] *** Joins: malcom2073 (~malcom@2.sub-174-250-4.myvzw.com)
[19:58:46] <nomagno> Well let me take a crack at it!
[19:59:32] <merijn> nomagno: It is if you want to finish before the heat-death of the universe :p
[19:59:49] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 252 seconds)
[20:00:18] <merijn> nomagno: My original part 1 solution didn't finish within 40 minutes. My 2nd hacky optimisation took 40s. Didn't figure out a *fast* version until I went to bed last night
[20:00:48] *** Quits: federico_it (~textual@151.36.44.116) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[20:01:12] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[20:01:53] *** Joins: Atque (~Atque@user/atque)
[20:01:54] <merijn> I'm kinda proud that my new version is near instant even for 1000x expansions :>
[20:02:32] *** Quits: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091) (Ping timeout: 240 seconds)
[20:03:34] *** Joins: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091)
[20:04:22] *** Quits: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091) (Client Quit)
[20:04:31] *** Joins: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091)
[20:04:45] *** Quits: fe23 (~fe23@2409:8a34:468:83d0:290a:bdd7:f2cf:4d59) (Quit: fe23)
[20:04:58] *** Quits: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091) (Client Quit)
[20:05:06] *** Joins: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091)
[20:05:10] *** Joins: Kev_ (~Kev@2a01cb0400149f001dcf40039f95c655.ipv6.abo.wanadoo.fr)
[20:05:46] *** Quits: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091) (Client Quit)
[20:05:50] *** Quits: off^ (~off@wsip-98-188-240-142.mc.at.cox.net) (Remote host closed the connection)
[20:05:54] *** Joins: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091)
[20:06:16] *** Quits: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091) (Client Quit)
[20:06:24] *** Joins: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091)
[20:06:54] *** Quits: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091) (Client Quit)
[20:07:02] *** Joins: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091)
[20:07:14] *** Quits: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091) (Client Quit)
[20:07:22] *** Joins: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091)
[20:07:35] *** Quits: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091) (Client Quit)
[20:07:43] *** Joins: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091)
[20:08:03] *** Quits: biberu (~biberu@user/biberu) (Read error: Connection reset by peer)
[20:08:17] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:08:48] *** Quits: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091) (Client Quit)
[20:09:00] *** Joins: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091)
[20:09:04] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[20:09:54] *** Joins: jkk (~jkk@213.180.39.162)
[20:10:22] *** Quits: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091) (Client Quit)
[20:10:37] *** Joins: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091)
[20:11:12] *** Quits: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091) (Client Quit)
[20:11:24] *** Joins: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091)
[20:13:18] *** Quits: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091) (Client Quit)
[20:13:26] *** Joins: nigbkb (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091)
[20:13:37] *** Quits: jwillia3 (~jwillia3_@205.178.41.133) (Ping timeout: 256 seconds)
[20:13:44] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[20:13:47] *** Joins: sfields (~sfields@2605:a601:adea:7a00:b908:8b7:c380:7652)
[20:13:52] *** Quits: Rayke (~rayke@user/rayke) (Quit: WeeChat 3.3)
[20:14:06] *** nigbkb is now known as Arge
[20:14:07] *** Joins: sonny (~sonny@8.6.144.252)
[20:14:34] *** Joins: malcom2074 (~malcom@8.sub-174-250-14.myvzw.com)
[20:15:32] *** Quits: malcom2073 (~malcom@2.sub-174-250-4.myvzw.com) (Ping timeout: 240 seconds)
[20:17:01] *** Joins: inky_ (~inky@188.115.233.47)
[20:18:11] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:19:15] *** Quits: _inky (~inky_@46.36.116.208) (Ping timeout: 252 seconds)
[20:19:17] *** Quits: inky (~inky@46.36.116.208) (Ping timeout: 256 seconds)
[20:20:13] *** Quits: malcom2074 (~malcom@8.sub-174-250-14.myvzw.com) (Ping timeout: 265 seconds)
[20:22:29] *** Joins: _inky (~inky_@141.136.79.202)
[20:23:23] *** Quits: inky_ (~inky@188.115.233.47) (Ping timeout: 250 seconds)
[20:24:39] *** Joins: MaghOz (~maghoz@2001:4bc9:821:d3f2:540d:f952:207a:2)
[20:25:42] *** Quits: sonny (~sonny@8.6.144.252) (Ping timeout: 260 seconds)
[20:25:42] *** Quits: Arge (~nigbkb@2409:8914:c30:8759:ec64:6b72:d910:f091) (Ping timeout: 260 seconds)
[20:25:53] *** Joins: nigbkb (~nigbkb@223.101.60.60)
[20:26:49] *** Quits: nigbkb (~nigbkb@223.101.60.60) (Client Quit)
[20:27:01] *** Joins: nigbkb (~nigbkb@223.101.60.60)
[20:28:38] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[20:30:18] *** Joins: sonny (~sonny@8.6.144.252)
[20:30:28] *** Joins: Akiva (~Akiva@user/Akiva)
[20:30:49] *** Quits: Anticom (~anticom@87.190.49.75) ()
[20:31:18] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[20:33:36] *** Quits: nigbkb (~nigbkb@223.101.60.60) (Quit: Quit)
[20:33:48] *** Joins: nigbkb (~nigbkb@223.101.60.60)
[20:33:50] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Quit: Konversation terminated!)
[20:34:20] *** Joins: biberu (~biberu@user/biberu)
[20:34:37] *** Quits: nigbkb (~nigbkb@223.101.60.60) (Client Quit)
[20:34:46] *** Quits: biberu (~biberu@user/biberu) (Remote host closed the connection)
[20:34:50] *** Joins: nigbkb (~nigbkb@223.101.60.60)
[20:36:10] *** Joins: inky_ (~inky@141.136.79.202)
[20:36:36] *** Joins: Rayke (rayke@user/rayke)
[20:36:44] *** Quits: nigbkb (~nigbkb@223.101.60.60) (Client Quit)
[20:37:09] *** Joins: Arge (~Arge@223.101.60.60)
[20:37:15] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[20:37:19] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df047-236.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:37:58] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:545:ac7:9d35:9c30) (Remote host closed the connection)
[20:38:28] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:545:ac7:9d35:9c30)
[20:38:49] *** Joins: Enitin (~Enitin@82.102.22.84)
[20:39:20] *** Quits: Ilyu (~quassel@78.202.228.230) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:39:58] *** Joins: mz` (~mz`@user/mz/x-8532539)
[20:40:01] *** Joins: biberu (~biberu@user/biberu)
[20:42:14] *** Quits: operateur (~operateur@91.143.220.230) (Quit: WeeChat 3.3)
[20:42:25] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[20:42:47] *** Joins: xkuru (~xkuru@user/xkuru)
[20:42:50] *** Quits: Arge (~Arge@223.101.60.60) (Quit: Quit)
[20:43:03] *** Joins: Arge (~Arge@223.101.60.60)
[20:43:30] *** Quits: Arge (~Arge@223.101.60.60) (Remote host closed the connection)
[20:44:03] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[20:44:23] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:545:ac7:9d35:9c30) (Ping timeout: 250 seconds)
[20:44:54] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:1cc0:368e:c4de:fef6) (Read error: Connection reset by peer)
[20:45:13] *** Joins: va5c0 (~vasco.nun@2001:818:e35b:6300:6b1:c037:b1cd:a17d)
[20:45:21] *** Quits: va5c0 (~vasco.nun@2001:818:e35b:6300:6b1:c037:b1cd:a17d) (Client Quit)
[20:45:36] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:5d3d:c286:ea60:259a) (Read error: Connection reset by peer)
[20:45:50] *** Joins: va5c0 (~vasco.nun@2001:818:e35b:6300:6b1:c037:b1cd:a17d)
[20:49:02] *** Quits: pulse (~pulse@user/pulse) (Quit: My hovercraft is full of eels)
[20:51:03] *** Joins: mz` (~mz`@user/mz/x-8532539)
[20:51:12] *** Joins: pulse (~pulse@user/pulse)
[20:52:48] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[20:53:32] <ProfSimm> If in functional languages everything is an expression and the last expression is the return result, how exactly do we return, from, say, within 3 levels of conditional branching?
[20:53:41] *** Quits: rsx (~dummy@ppp-188-174-144-140.dynamic.mnet-online.de) (Quit: rsx)
[20:55:25] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[20:56:21] <sonny> what ever evaluates to true
[20:57:33] <ProfSimm> In Haskell actually a common pattern is to do pattern matching.
[20:57:58] <ProfSimm> You define the function N times, so you define your "early returns" on specific input when that input matches the earlier definition
[20:58:03] <edgar-rft> ProfSimm: a much more interesting question is howto print something on the screen without side-effects :-)
[20:58:04] <ProfSimm> But I'm not sure that's a complete replacement
[20:58:24] <sonny> replacement?
[20:58:29] <ProfSimm> edgar-rft: eh side-effects will always be needed I think. You just isolate them from the rest.
[20:58:40] <ProfSimm> sonny:  replacement for early returnds
[20:59:06] <ProfSimm> Basically I'm trying to figure out if I need a "return" statement in my language or not.
[20:59:15] <sonny> early returns are useless
[20:59:30] <ProfSimm> Well, they prevent deeply nested branching
[20:59:33] *** Joins: Maaaanu (~manuel@ip5b429007.dynamic.kabel-deutschland.de)
[20:59:35] *** Quits: hexingb (~hexingb@2409:8900:2a50:6a9:30fe:fdb6:7b7e:44b8) (Ping timeout: 252 seconds)
[21:00:01] <sonny> if you define your termination properly it's not necessary
[21:00:17] <ProfSimm> sonny: I assume. But it's a skill to gain
[21:00:38] <edgar-rft> just dive into the language with no return
[21:00:40] <sonny> sure, just like loops
[21:00:55] <sonny> but it's actually easier
[21:00:58] <ProfSimm> Another issue I'm facing is the comma operator: should it return the last value, or all values separated by commas
[21:02:18] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[21:02:52] <sonny> explain more, I've never seen this before
[21:03:43] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:04:24] *** Joins: teut (~teut@2401:4900:1c30:1de4:f19d:3f97:1aa3:ecb1)
[21:04:46] *** Joins: mz` (~mz`@user/mz/x-8532539)
[21:04:57] <sonny> how does haskell handle, f this I want to quit?
[21:05:13] <sonny> exceptions?
[21:05:33] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[21:06:29] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 250 seconds)
[21:08:38] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[21:09:06] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[21:10:57] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Quit: rickybob)
[21:14:59] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[21:16:16] *** Quits: trace987 (~trace@ip5b429834.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[21:16:29] *** Joins: mz` (~mz`@user/mz/x-8532539)
[21:18:31] *** Quits: va5c0 (~vasco.nun@2001:818:e35b:6300:6b1:c037:b1cd:a17d) (Quit: WeeChat 3.3)
[21:19:38] <ProfSimm> sonny: in many languages this expression evaluates to a list of 1 2 3 4:    [1, 2, 3, 4]   while this expression evaluates to 4:   (1, 2, 3, 4)
[21:19:49] <ProfSimm> So the comma has two meanings
[21:20:26] <sonny> news to me
[21:20:47] <sonny> I suppose that's up to you then
[21:20:52] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[21:22:26] *** Quits: aliosablack (~chomwitt@94.66.63.187) (Quit: Leaving)
[21:22:39] *** Joins: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de)
[21:22:39] *** Quits: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de) (Changing host)
[21:22:39] *** Joins: resamvi (~resamvi@user/resamvi)
[21:22:40] *** Joins: aliosablack (~chomwitt@2a02:587:dc19:a500:12c3:7bff:fe6d:d374)
[21:22:40] *** Quits: aliosablack (~chomwitt@2a02:587:dc19:a500:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[21:22:59] *** Joins: chomwitt (~chomwitt@2a02:587:dc19:a500:12c3:7bff:fe6d:d374)
[21:24:21] *** Quits: rvgate (~rvgate@user/rvgate) (Ping timeout: 256 seconds)
[21:25:16] *** Joins: tane (~tane@dslb-002-201-234-223.002.201.pools.vodafone-ip.de)
[21:25:16] *** Quits: tane (~tane@dslb-002-201-234-223.002.201.pools.vodafone-ip.de) (Changing host)
[21:25:16] *** Joins: tane (~tane@user/tane)
[21:25:46] *** Joins: prompt32 (~kapad@user/kapad)
[21:28:29] *** Joins: Colt (~Colt@user/colt)
[21:29:00] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[21:29:21] *** Joins: Klinda (~superleag@user/klinda)
[21:29:29] <constxd> ProfSimm: how can you have an "early return"
[21:30:00] *** Joins: echoSMILE (uid504326@user/echosmile)
[21:30:35] *** Joins: Guest65 (~Guest65@2a01cb012037a1800000004bd1a5ca01.ipv6.abo.wanadoo.fr)
[21:31:05] <constxd> that doesn't make sense in a pure functional language
[21:31:26] <constxd> neither does the comma operator
[21:31:43] *** Quits: absc (~absc@81.31.144.28) (Quit: Leaving)
[21:32:19] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[21:32:48] *** Joins: oft_gegong (~k@75.148.88.209)
[21:33:35] <sonny> constxd: exceptions
[21:33:56] <oft_gegong> I need help you guys. I used to be a programmer. Now I'm nothing. what do I do?
[21:34:17] <constxd> go see a psychiatrist
[21:34:23] <constxd> log off
[21:34:51] *** Joins: mz` (~mz`@user/mz/x-8532539)
[21:34:53] <oft_gegong> the psychiatrist: "I'm sorry to say this oft_gegong, but..you're crazy."
[21:35:52] *** Joins: jinsun (~quassel@user/jinsun)
[21:36:25] <edgar-rft> no worries, being a programmer *is* next to nothing
[21:36:53] <oft_gegong> edgar-rft, I thought you were going to say "next-gen" and I was getting chills
[21:37:06] *** Joins: Cashlin (~hp@user/cashlin)
[21:37:42] <edgar-rft> the next generation of programmers will be *less* than nothing
[21:37:54] <oft_gegong> ouch
[21:38:08] <berndj> https://www.youtube.com/watch?v=NSU11kxxJvc like dragging fingernails across a blackboard
[21:38:10] <bayaz> Title: FMWC Open - Dec 11 (FINALS) - Excel as esports 
[21:38:21] <edgar-rft> being nothing then will be an upgrade :-)
[21:38:25] <user51> https://www.python.org/dev/peps/pep-0020/#id2
[21:38:25] <bayaz> Title: PEP 20 -- The Zen of Python 
[21:38:29] <user51> i don't understand why the zen of python has all those principles, but it doesn't explain why
[21:38:43] <user51> i thought explicit was better than implicit :<
[21:39:25] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[21:39:26] <oft_gegong> 4.5GB GTA5 Steam update.... *dies*
[21:39:28] <berndj> oft_gegong: pivot your career into manual labour. at the end of the day there's something tangible you can be proud of
[21:39:34] <nomagno> Programmers seem to be getting hired with progressively more superficial understanding of computing itself
[21:39:58] *** Quits: jkk (~jkk@213.180.39.162) (Ping timeout: 265 seconds)
[21:39:58] <oft_gegong> berndj, my life is too horrible to be proud of anything
[21:40:04] <berndj> nomagno, maybe that's good for us dinosaurs
[21:41:25] *** Quits: Guest65 (~Guest65@2a01cb012037a1800000004bd1a5ca01.ipv6.abo.wanadoo.fr) (Quit: Client closed)
[21:41:37] <oft_gegong> the problem with programming is there are 100 good languages
[21:41:55] <edgar-rft> where?
[21:42:04] <oft_gegong> on the inter-webz
[21:42:47] <nomagno> That's not an issue tough
[21:42:51] <oft_gegong> A B C D E F G H I J K L, etc
[21:43:02] *** Quits: Leone (~Leo@69-165-148-197.dsl.teksavvy.com) (Read error: Connection reset by peer)
[21:43:40] <nomagno> That's like saying mechanics have too many tools these days, when you can do most things with a hammer.
[21:44:03] *** Joins: Guest65 (~Guest65@2a01cb012037a1800000004bd1a5ca01.ipv6.abo.wanadoo.fr)
[21:44:23] <constxd> hundreds of languages and yet only one that really matters
[21:44:48] <nomagno> constxd: Brainfuck, right?
[21:44:51] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 250 seconds)
[21:44:54] <pulse> C++
[21:45:03] <oft_gegong> javascript
[21:45:06] <constxd> Ty
[21:45:10] <nomagno> No no, x86 assembly
[21:45:28] <oft_gegong> hexadecimal
[21:45:54] *** Quits: Guest65 (~Guest65@2a01cb012037a1800000004bd1a5ca01.ipv6.abo.wanadoo.fr) (Client Quit)
[21:45:55] <nomagno> oft_gegong, pulse: You clearly lack culture. The answer is MetaCodeGolf
[21:46:14] <oft_gegong> so Game Maker?
[21:47:16] <nomagno> Game Maker is so last year, I'm thinking the only language that matters could actually be HTML, with what the finite state automatons and crap
[21:47:16] <oft_gegong> I can't fucking live anymore. I've existed for 3 trillion years. I need to die..like now
[21:47:42] *** Joins: Guest65 (~Guest65@2a01cb012037a1800000004bd1a5ca01.ipv6.abo.wanadoo.fr)
[21:47:42] <nomagno> Wait, wait! Emacs lisp
[21:48:01] *** Joins: mz` (~mz`@user/mz/x-8532539)
[21:48:09] <nomagno> No no, my bad. It's definitely BASIC
[21:49:09] <nomagno> (BASIC and Visual Basic are both dead, but they're unironically very hard to write code that doesn't at least half-work in them)
[21:49:31] <oft_gegong> I 3%understand code
[21:50:47] <oft_gegong> what programming is is 900%applying yourself. that's 70%it;
[21:51:19] *** Quits: mikeliuk (~mikeliuk@213.205.198.137) (Quit: Connection closed)
[21:51:59] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[21:52:24] <oft_gegong> the problem with programming is when you 90%give-up applying yourself because you feel you should be a magician by now
[21:52:38] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[21:55:04] *** Quits: Guest65 (~Guest65@2a01cb012037a1800000004bd1a5ca01.ipv6.abo.wanadoo.fr) (Quit: Client closed)
[21:55:13] *** Joins: Inline (~Inline@aftr-37-201-240-204.unity-media.net)
[21:55:33] <oft_gegong> If I was a god I'd develop a chess AI
[21:55:50] *** Joins: junebug (~junebug@2600:1700:3db0:2540:209b:d9f6:bee5:95e)
[21:56:17] <InPhase> Or you can just apt install a top rate chess AI.
[21:56:38] <oft_gegong> InPhase, I need my chess AI to be completely random but attacks when it can.
[21:57:00] <InPhase> Well that would be easy to implement, but not very good at chess.
[21:57:15] <oft_gegong> yeah but I can have fun playing against it InPhase 
[21:58:09] <oft_gegong> my guess is that the code would take up 500 lines of perl, but it would be too difficult to implement
[22:00:14] *** Joins: octav1a (~quassel@173.195.145.98)
[22:01:09] <oft_gegong> the algorithms are out-of-reach
[22:01:31] <oft_gegong> the semantics are too complex
[22:02:39] *** Quits: sonny (~sonny@8.6.144.252) (Ping timeout: 252 seconds)
[22:03:38] *** Joins: sonny (~sonny@8.6.144.252)
[22:03:54] <oft_gegong> dear god: I wish I could create a chess AI
[22:03:57] <InPhase> oft_gegong: Maybe start with something simple like dynamic programming of the 8 queens problem.
[22:04:35] <InPhase> A restricted chess problem is easier than a full chess game.
[22:04:47] * oft_gegong faints
[22:04:56] <sonny> oft_gegong: the chess programming wiki has lots of stuff
[22:05:11] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[22:05:12] <sonny> yeah, doing a reduced game like 5x5 chess will be much easier
[22:05:21] <GeDaMo> there's also a ##chessprogramming channel
[22:05:23] <sonny> or you can start with an AI for tic-tac-toe
[22:05:43] <sonny> something similar is used for the chess AI
[22:05:53] <sonny> a chess AI*
[22:05:54] <Stefan26> "[17:05] <pyzozord> I really feel challanged now with these puzzles, not sure if I'll make it to the 25th day"       <-- The pain will only be passing, You should survive the process.
[22:06:22] <edgar-rft> let's play chess like tic-tac-toe :-)
[22:06:29] *** Joins: mz` (~mz`@user/mz/x-8532539)
[22:07:07] <sonny> that'd be a simple bitmap
[22:07:48] <InPhase> oft_gegong: Sorry, backtracking for 8 queens is the keyword I intended to nudge you toward.
[22:08:45] *** Quits: beencubed (~beencubed@209.131.238.248) (Ping timeout: 268 seconds)
[22:09:10] <oft_gegong> <new topic> assuming you were 900%dead, how would you live life?
[22:10:01] <pyzozord> Stefan26: ah, a beautiful reference :)
[22:10:28] *** Joins: src (~src@user/src)
[22:10:37] <pyzozord> kinda considering playing it right now
[22:10:57] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[22:13:00] *** Joins: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:545:ac7:9d35:9c30)
[22:13:14] <oft_gegong> Assuming I had to live and I was 900%dead, I would live low-key;
[22:13:58] <InPhase> oft_gegong: You're in crazed statement mode again.  Please stop...
[22:15:18] <oft_gegong> it's not my fault that Steam has a 4.5GB GTA5 update
[22:17:40] *** zaher_ is now known as zaher
[22:18:00] *** Quits: DevAntoine (~DevAntoin@2a01:e34:ec18:50c0:545:ac7:9d35:9c30) (Ping timeout: 268 seconds)
[22:18:54] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[22:19:23] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) ()
[22:19:25] <nomagno> oft_gegong: Implementing a random chess mover is on the easier side
[22:19:36] <nomagno> Implementing a chess-attacker-when-it-can is too
[22:19:47] *** Joins: jwillia3 (~jwillia3_@205.178.41.133)
[22:20:01] <oft_gegong> nomagno, I'm not going to spend 3 hours figuring out how to use API's to implement those tricks
[22:20:26] <nomagno> Which API's?
[22:20:40] <oft_gegong> nomagno, the chess AI libraries
[22:20:42] <pyzozord> I'm not sure, are we at the hardwer performance levels where computers can explore all possible chess moves and pick the most optimal one?
[22:20:49] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[22:20:56] <nomagno> Well why do you want to do it with a chess AI library?
[22:21:01] <pyzozord> *hardware
[22:21:10] <nomagno> You don't need to, this specific problem can be solved without knowing a whole lot about chess
[22:21:16] <oft_gegong> nomagno, you're saying I should just program the AI from scratch?
[22:21:43] <oft_gegong> that's going to take 5 hours of programming on paper
[22:21:47] <nomagno> You don't need to program an AI! You need to program a chess engine and a dumb AI
[22:21:47] <edgar-rft> write your own chess rules and fuck all APIs
[22:21:54] <nomagno> ^
[22:21:55] <nomagno> Chess engine
[22:22:08] <nomagno> the AI part is quick as heck
[22:22:08] *** Joins: Inari (~Pinkishu@p4fe7ef77.dip0.t-ipconnect.de)
[22:22:09] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[22:22:12] <oft_gegong> a chess engine? from scratch?
[22:22:25] <nomagno> It's easier than it sounds.
[22:22:30] * oft_gegong dies
[22:22:56] <oft_gegong> I can't think
[22:23:12] <edgar-rft> we know
[22:23:35] <GeDaMo> https://www.theregister.com/2015/01/29/zx81_record_falls_as_dev_claims_smallest_chess_code_crown/
[22:23:48] <oft_gegong> I should pay someone to write the chess code on paper
[22:23:50] <GeDaMo> "Boot Chess needs just 512 bytes of memory, beating 1982's 1K ZX Chess"
[22:23:59] *** Quits: sonny (~sonny@8.6.144.252) (Quit: Going offline, see ya! (www.adiirc.com))
[22:25:48] *** Quits: hololeap_ (~hololeap@user/hololeap) (Read error: Connection reset by peer)
[22:26:00] *** Joins: mz` (~mz`@user/mz/x-8532539)
[22:26:50] <oft_gegong> I found out my solution. I don't want to be a programmer anymore.
[22:27:11] *** Joins: hololeap_ (~hololeap@user/hololeap)
[22:28:58] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[22:30:32] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[22:31:31] <oft_gegong> I know that you guys need me, badly. but it'll work itself out.
[22:33:48] *** Joins: moha (uid506645@id-506645.helmsley.irccloud.com)
[22:35:51] <Donitz> operator on new line when breaking lines
[22:35:53] <Donitz> ?
[22:36:03] *** Joins: Satin (uid193953@user/Seten)
[22:36:11] <KillerWasp> GeDaMo: the Chess in A2600 use only 256 bytes.
[22:36:48] <KillerWasp> I NEVER CAN WIN IN THIS GAME!!! Dx
[22:37:37] * KillerWasp are beaten by 256 bytes
[22:40:35] *** Quits: oft_gegong (~k@75.148.88.209) (Quit: Leaving)
[22:41:21] *** Joins: buzzard_ (~quassel@185.206.225.246)
[22:41:44] *** buzzard_ is now known as buzzard
[22:42:59] *** Quits: xff0x (~xff0x@2001:1a81:52ce:1300:ffd2:54e0:463d:d772) (Ping timeout: 252 seconds)
[22:43:02] *** Joins: ftpaaa (~AdminUser@141.0.226.150)
[22:43:59] *** Joins: xff0x (~xff0x@2001:1a81:52ce:1300:b1bd:3a1d:cfef:d772)
[22:44:09] *** Joins: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net)
[22:45:07] *** Quits: Haxxa (~Haxxa@202-130-211-204.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:27] *** Joins: mz` (~mz`@user/mz/x-8532539)
[22:48:45] *** Joins: terminalpusher (~terminalp@2a01:586:9b10:1:b1ed:1724:4f50:ba82)
[22:49:29] *** Joins: Haxxa (~Haxxa@202-130-211-204.ip4.superloop.com)
[22:50:08] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[22:50:55] *** Quits: craftxbox (craftxbox@2001:bc8:47b0:272c::1) (Ping timeout: 250 seconds)
[22:53:32] <MrMobius> 512 bytes of x86 vs 1k of Z80. seems a bit fishy...
[22:55:21] <GeDaMo> Might need more instructions to work with bigger values
[22:56:28] *** Joins: craftxbox (craftxbox@natsuko.ninja)
[23:01:16] *** Joins: mz` (~mz`@user/mz/x-8532539)
[23:02:00] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[23:05:01] *** Quits: furrykef (~furrykef@ip68-229-192-239.ok.ok.cox.net) (Ping timeout: 250 seconds)
[23:05:55] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:06:04] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[23:09:29] *** Joins: xavie (~xavie@176-139-252-198.abo.bbox.fr)
[23:09:37] *** xavie is now known as xcombelle
[23:09:46] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[23:11:36] *** Quits: ftpaaa (~AdminUser@141.0.226.150) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:14:48] *** Joins: mz` (~mz`@user/mz/x-8532539)
[23:15:22] *** Quits: [ins4ne]_ (~ins4ne]@user/ins4ne/x-5207303) (Quit: No Ping reply in 180 seconds.)
[23:15:53] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[23:16:40] *** Joins: [ins4ne] (~ins4ne]@user/ins4ne/x-5207303)
[23:16:57] *** Joins: EdFletcher (~PKD@user/edfletcher)
[23:18:11] *** Quits: EdFletcher (~PKD@user/edfletcher) (Remote host closed the connection)
[23:19:24] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[23:19:37] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[23:19:51] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:21:19] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:21:48] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[23:23:18] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:24:27] *** Joins: EdFletcher (~PKD@user/edfletcher)
[23:25:15] *** Joins: mxmystery7 (~kc@c-76-121-63-31.hsd1.wa.comcast.net)
[23:28:19] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[23:30:30] *** Quits: MaghOz (~maghoz@2001:4bc9:821:d3f2:540d:f952:207a:2) (Quit: WeeChat 3.3)
[23:31:10] *** Joins: trace987 (~trace@ip5b429834.dynamic.kabel-deutschland.de)
[23:32:30] *** Joins: Akiva (~Akiva@user/Akiva)
[23:33:12] *** Joins: mz` (~mz`@user/mz/x-8532539)
[23:34:47] *** Quits: hololeap_ (~hololeap@user/hololeap) (Read error: Connection reset by peer)
[23:35:02] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[23:35:25] *** Quits: junebug (~junebug@2600:1700:3db0:2540:209b:d9f6:bee5:95e) (Ping timeout: 252 seconds)
[23:35:27] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 276 seconds)
[23:35:32] *** Quits: kish` (~sid742412@user/aqua) (Remote host closed the connection)
[23:35:54] *** shiza is now known as pink_sarco
[23:37:53] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[23:38:02] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[23:38:10] *** Joins: flakland (~flaknet99@32.211.211.39)
[23:38:45] *** Quits: mxmystery7 (~kc@c-76-121-63-31.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[23:38:50] *** Joins: kish` (~sid742412@user/aqua)
[23:38:58] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[23:40:07] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 250 seconds)
[23:40:41] *** Quits: kish` (~sid742412@user/aqua) (Client Quit)
[23:41:46] *** Joins: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de)
[23:41:46] *** Quits: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de) (Changing host)
[23:41:46] *** Joins: resamvi (~resamvi@user/resamvi)
[23:41:58] *** Joins: hololeap_ (~hololeap@user/hololeap)
[23:44:45] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[23:44:53] *** Quits: Intelo (~Intelo@88.246.72.179) (Quit: Ping timeout (120 seconds))
[23:45:05] *** Joins: Klinda (~superleag@user/klinda)
[23:45:37] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[23:46:05] *** Quits: terminalpusher (~terminalp@2a01:586:9b10:1:b1ed:1724:4f50:ba82) (Remote host closed the connection)
[23:46:23] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 250 seconds)
[23:46:24] *** Quits: hololeap_ (~hololeap@user/hololeap) (Read error: Connection reset by peer)
[23:46:41] *** Joins: mz` (~mz`@user/mz/x-8532539)
[23:47:08] <maxzor_> Is CPU/GPU heterogenous computing done by a lot of folks? What are the use cases? Wonder trying to package rocm if there is an audience for https://rocmdocs.amd.com/en/latest/Installation_Guide/atmi.html?highlight=atmi
[23:47:09] <bayaz> Title: ATMI — ROCm 4.5.0 documentation 
[23:47:33] *** Joins: resamvi (~resamvi@user/resamvi)
[23:48:12] <maxzor_> Do you really need such extraordinary scheduling patter in supercomputers?
[23:48:20] <maxzor_> s/patter/patterns
[23:49:16] *** Quits: jwillia3 (~jwillia3_@205.178.41.133) (Ping timeout: 268 seconds)
[23:50:28] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 265 seconds)
[23:51:28] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[23:51:55] *** Quits: xff0x (~xff0x@2001:1a81:52ce:1300:b1bd:3a1d:cfef:d772) (Ping timeout: 265 seconds)
[23:51:55] *** Quits: resamvi (~resamvi@user/resamvi) (Ping timeout: 252 seconds)
[23:52:25] *** Joins: xff0x (~xff0x@2001:1a81:52ce:1300:b0c:6219:b31e:3167)
[23:53:37] *** Joins: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de)
[23:53:37] *** Quits: resamvi (~resamvi@p4ff7768d.dip0.t-ipconnect.de) (Changing host)
[23:53:37] *** Joins: resamvi (~resamvi@user/resamvi)
[23:54:09] *** Joins: Macuser (~Macuser@2600:1003:b443:b5e5:451b:6eac:6d38:7fec)
[23:54:29] *** Quits: buzzard (~quassel@185.206.225.246) (Ping timeout: 252 seconds)
[23:57:33] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 276 seconds)
