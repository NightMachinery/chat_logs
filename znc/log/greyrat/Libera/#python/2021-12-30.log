[00:00:37] *** Quits: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 256 seconds)
[00:07:19] *** Joins: idontnee_ (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se)
[00:08:19] *** Quits: Reffter (~Reffter@2001:818:dea5:2b00:c04c:7bb2:effd:1b5) (Quit: Client closed)
[00:08:25] *** Joins: ExeciN (~ExeciN@user/nicexe)
[00:09:33] *** Quits: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se) (Ping timeout: 250 seconds)
[00:09:37] *** Joins: Seiryu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[00:10:32] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Ping timeout: 240 seconds)
[00:10:57] *** Joins: Mortician (~Mortician@cpe-75-83-83-8.socal.res.rr.com)
[00:12:14] <Mortician> does anyone know gunicorn
[00:12:57] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[00:13:33] <SnoopJ> Mortician, let's suppose the answer is yes, what is your next question?
[00:14:05] *** Joins: blcyber (~blcyber@216.74.235.178)
[00:14:07] *** Quits: ewwegweg (~ewwegweg@user/ewwegweg) (Remote host closed the connection)
[00:14:47] *** Quits: blcyber_ (~blcyber@216.74.235.178) (Ping timeout: 256 seconds)
[00:14:54] *** Quits: Milos (~Milos@user/milos) (Quit: ZNC 1.8.2 - https://znc.in)
[00:15:01] <Mortician> so this api im working on is distributed
[00:15:10] *** Joins: Milos (~Milos@user/milos)
[00:15:16] <Mortician> and i want to just move it back to local
[00:15:21] <Mortician> so i can develop
[00:15:26] *** Joins: ewwegweg (~ewwegweg@user/ewwegweg)
[00:15:35] <Mortician> its a flask api
[00:15:38] *** Joins: ph88 (~ph88@2a02:8109:9e00:71d0::7e04)
[00:15:55] *** Quits: shailangsa (~shailangs@host109-159-108-207.range109-159.btcentralplus.com) (Ping timeout: 256 seconds)
[00:16:16] <Mortician> i think its getting packages from devpi remote server or something
[00:16:39] *** Quits: ewwegweg (~ewwegweg@user/ewwegweg) (Remote host closed the connection)
[00:16:41] *** Joins: thiras (~thiras@user/thiras)
[00:17:10] *** Joins: ewwegweg (~ewwegweg@user/ewwegweg)
[00:17:11] *** Quits: ewwegweg (~ewwegweg@user/ewwegweg) (Remote host closed the connection)
[00:17:29] *** Joins: ewwegweg (~ewwegweg@user/ewwegweg)
[00:17:57] <Mortician> is there some commands that will help me see whats what
[00:18:28] <SnoopJ> sorry, I don't understand what you're trying to do here
[00:20:37] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:4c19:361f:9d25:1a07)
[00:22:19] *** Quits: idontnee_ (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se) (Read error: Connection reset by peer)
[00:22:39] *** Joins: jdmark2 (~jdmark@user/jdmark)
[00:22:40] *** Joins: Denver (~Denver@174-16-236-178.hlrn.qwest.net)
[00:22:46] *** Joins: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se)
[00:23:55] *** Quits: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se) (Read error: Connection reset by peer)
[00:24:15] *** Joins: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se)
[00:24:32] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[00:25:45] *** Quits: jdmark2 (~jdmark@user/jdmark) (Client Quit)
[00:25:45] *** Quits: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se) (Read error: Connection reset by peer)
[00:26:03] *** Joins: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se)
[00:26:13] *** Quits: jdmark (~jdmark@user/jdmark) (Ping timeout: 240 seconds)
[00:26:22] <leitz> I seem to be missing something on argparse (python 3.10). Running the command with -i says it wants a value:  parser.add_argument("-i", "--id", action='store')
[00:26:57] *** Quits: sudomann (~sudomann@c-24-126-8-18.hsd1.wv.comcast.net) (Ping timeout: 268 seconds)
[00:27:04] <Peng> leitz: That's what action='store' is for
[00:27:08] *** Joins: ThanatosJ (~Thanatos@197.210.45.218)
[00:27:12] <Peng> leitz: What do you want it to do?
[00:27:13] *** Quits: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se) (Read error: Connection reset by peer)
[00:27:16] <SnoopJ> leitz, perhaps you wanted "store_true" or "store_false" ?
[00:27:22] *** Joins: sudomann (~sudomann@c-24-126-8-18.hsd1.wv.comcast.net)
[00:27:26] *** Joins: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se)
[00:28:16] <leitz> Yup, "store_true" worked. I thought "store" was for the arg, but I guess it's for the value.
[00:28:46] <parv> Could someone explain to me why there are different rules for "return" depending on context? Code: https://termbin.com/yqur
[00:29:47] <bjs> parv: i'm finding it hard to read this, what are the different rules you're talking about?
[00:30:01] <TML> parv: What do you mean 'rules for "return"'?
[00:30:07] <moonmoon> parv: you're conflating a couple of things in that code
[00:30:24] <moonmoon> 1) there is an implicit bare "return" at the end of every function, and "return" without an argument returns None
[00:30:29] *** Joins: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net)
[00:30:33] <leitz> note to self: getting data works better if you use the right database...
[00:30:47] <moonmoon> 2) objects like lists, dicts, and sets are passed by reference when given to functions, not by value
[00:30:57] <moonmoon> so mutating a parameter passed into you will mutate it for that outer scope as well
[00:31:01] <SnoopJ> leitz, "store" stores whatever is passed for that arg, so `--arg val` would store "val". store_const lets you store a constant, and store_true/store_false are shortcuts for store_const that define a default of "the other one"
[00:31:46] *** Joins: Timrit (~scott@047-012-066-084.res.spectrum.com)
[00:31:47] *** Quits: Thanatos (~Thanatos@197.210.45.218) (Ping timeout: 256 seconds)
[00:32:15] <moonmoon> (aka that save variable in the recursive calls refers to the exact same list / exact same memory as the one created in the outermost call)
[00:32:50] *** Quits: ewwegweg (~ewwegweg@user/ewwegweg) (Remote host closed the connection)
[00:32:58] *** Quits: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net) (Client Quit)
[00:33:38] *** Joins: ewwegweg (~ewwegweg@user/ewwegweg)
[00:33:43] *** Joins: idontnee_ (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se)
[00:33:59] *** Quits: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se) (Read error: Connection reset by peer)
[00:34:20] <parv> moonmoon, What are you trying to say wrt to the list used? No list is passed via first function call (in for-loop), so one is created.
[00:34:22] *** Quits: idontnee_ (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se) (Read error: Connection reset by peer)
[00:34:48] <bjs> parv: but then you pass that list down the stack to the other calls
[00:34:51] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Quit: Leaving)
[00:35:05] <parv> bjs, Yes to keep state
[00:35:33] <bjs> parv: anyway, what is your question about this code?
[00:35:34] *** Joins: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se)
[00:35:43] <parv> The list is returned at the end where first function call was issued
[00:35:47] <moonmoon> parv: and the created list in the first function is passed to all of the recursive calls, and that is the same list/memory in all of those calls. So that is why you get [5, 4, 3, 2] as your output despite not returning any values in the inner calls
[00:35:50] *** Quits: sudomann (~sudomann@c-24-126-8-18.hsd1.wv.comcast.net) (Ping timeout: 260 seconds)
[00:36:02] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[00:36:13] *** Joins: wovixo (~wovixo@128.104.205.49)
[00:36:25] *** Joins: shailangsa_ (~shailangs@host86-186-142-101.range86-186.btcentralplus.com)
[00:36:41] <moonmoon> your third function returns None because you aren't hitting your explicit return in that call (5 > 1)
[00:36:57] <moonmoon> if that doesn't clear things up for you, I'll need more details on what you're confused about
[00:38:39] <parv> bjs: My question is in function "to_threshold_plus_1_if_no_return" in if-block why is a "return" needed for save list state? Compare that to the if-block in "to_threshold_plus_1"
[00:39:02] <bjs> parv: well in that _no_return version there is a branch where the function doesn't return at all
[00:39:14] <bjs> parv: if you don't `return` from the function, you get None.  The other versions have `return`s in all their branches.
[00:39:27] *** Joins: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net)
[00:40:05] *** Quits: ewwegweg (~ewwegweg@user/ewwegweg) (Remote host closed the connection)
[00:40:11] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[00:41:05] *** Joins: arinov (~arinov@213.194.126.155)
[00:41:45] *** Quits: NeoCore (~neocore@195.200.221.172) (Quit: Leaving)
[00:42:02] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[00:42:18] *** Quits: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net) (Client Quit)
[00:42:39] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[00:42:56] <bjs> parv: think about https://bpa.st/3A7A to see what's going on here,  my first print(f(-1)) will print True, because the call goes down the first branch and there is a `return True`.  The second call print(f(1)) goes down the other branch, which does some stuff (makes more function calls) but doesn't have a `return`. So when it reaches the end of the branch (and then the end of the function) there wasn't a `return` so it gets None.
[00:43:01] *** Joins: magnumCool (~phil@62.red-185-88-202.telecablesantapola.es)
[00:43:04] *** Parts: magnumCool (~phil@62.red-185-88-202.telecablesantapola.es) ()
[00:43:06] *** Quits: tdsmith (~tdsmith@kvm.kumokasumi.org) (Quit: Bye!)
[00:43:17] *** Joins: vladoski (~foo@93-36-221-58.ip62.fastwebnet.it)
[00:43:31] *** Joins: tdsmith (~tdsmith@kvm.kumokasumi.org)
[00:44:14] *** Quits: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se) (Remote host closed the connection)
[00:45:12] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[00:45:31] *** Joins: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se)
[00:46:05] <parv> bjs, In that code would have expected to see "True" eventually. I am thinking that, f(1) eventually become <0, then that branch would produce True. But the behaviour is not that.
[00:46:37] <bjs> parv: `return` only returns from the current function call,  each time you call the function you get a brand new "call" with its own variables, and its own return value
[00:48:04] *** Joins: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net)
[00:48:19] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[00:49:03] <bjs> parv: there is a nice visualization website pythontutor.com which can show the stack frames, here's an example https://bit.ly/3FGLupo  (click "Visualize Execution") to step through it line-by-line
[00:49:07] *** Quits: remote (~self@user/hackers) (Quit: leaving)
[00:49:27] *** Joins: hackers (~self@user/hackers)
[00:49:32] *** hackers is now known as remtoe
[00:49:55] <bjs> parv: (and on the page there, set it to "show all frames" in the drop-down on the left, that might make it easier to follow)
[00:50:14] <parv> bjs, Thanks
[00:50:41] <parv> I will look through the stack ...
[00:50:58] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[00:51:47] <Mortician> this gunicorn is running some app
[00:51:52] <Mortician> .app_loader
[00:52:14] *** Quits: whaley (~whaley@097-082-197-228.res.spectrum.com) (Ping timeout: 268 seconds)
[00:52:37] <Mortician> but the source files are not even in the container
[00:53:12] *** Joins: qlixed (~qlixed@181.44.129.13)
[00:53:55] *** Joins: jayray (~jayray@user/jayray)
[00:55:17] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[00:56:04] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[00:56:53] <Mortician> devpi login?
[00:56:58] <Mortician> wth is this
[00:59:01] *** Quits: jamea22 (~jamea@189.237.49.43) (Ping timeout: 268 seconds)
[00:59:48] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[01:00:21] <grym> devpi is a pypi-like server that you can self-host
[01:00:58] <Mortician> there is a pkgs dir outide of container
[01:01:09] <Mortician> there i type make clean make upload
[01:01:15] <Mortician> that sends the files somewhere lol
[01:01:20] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[01:01:21] <Mortician> wth is going on this is madness
[01:01:30] <grym> this all sounds like homebrewed stuff
[01:01:31] <SnoopJ> the Makefile should tell you what those commands are actually doing
[01:01:37] <grym> so, i have no idea, but read the Makefile
[01:01:41] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[01:02:01] <SnoopJ> and hope the author took care to make it legible, heh
[01:02:06] <grym> i've written makefiles that call docker push before, but i didn't hand them out outside of work either :)
[01:02:08] *** Quits: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:03:00] <Mortician> this seems overly complex for a local website
[01:03:13] *** Joins: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net)
[01:03:14] <SnoopJ> Mortician, it's usually best to ask #python specific directed questions, if you're looking for assistance
[01:03:52] <grym> the local website my makefile makes involves pytorch :D
[01:04:43] <SnoopJ> grym, I have had to do more than a little surgery on that makefile in the past :P
[01:04:50] <grym> SnoopJ: i know! it's been great
[01:04:52] <Mortician> i dont think its taking my changes
[01:05:02] <grym> goes brrr now and warms up my office
[01:05:18] <SnoopJ> well, it wasn't great at those times, but thankfully I don't do it *often*
[01:05:28] <SnoopJ> and your dependencies are already cursed
[01:05:40] <grym> they really are
[01:05:49] <grym> stupid clients with stupid money
[01:05:51] <SnoopJ> nvidia-pyindex is probably the most ill-behaved package I am aware of
[01:05:54] *** Quits: tdsmith (~tdsmith@kvm.kumokasumi.org) (Quit: Bye!)
[01:05:56] <grym> cluttering up my envrc
[01:06:18] *** Joins: tdsmith (~tdsmith@kvm.kumokasumi.org)
[01:06:22] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu) (Quit: Leaving)
[01:07:17] *** Joins: sudomann (~sudomann@2601:155:8402:4960:f4b6:2f5c:9895:3a33)
[01:07:52] <Mortician> do i have to run make clean
[01:08:05] *** Joins: akk (~akk@174-28-122-47.albq.qwest.net)
[01:08:07] <grym> Mortician: dunno, depends on the makefile (which you should read)
[01:08:07] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[01:09:08] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[01:09:26] <Mortician> how do i move this locally
[01:09:44] <Mortician> and just include a local folder
[01:09:49] *** Joins: djhankb (~djhankb@208.113.164.68)
[01:09:50] <grym> we don't know
[01:09:56] <grym> we don't even know what 'this' is
[01:10:01] <Mortician> THIS
[01:10:32] <grym> well, glhf
[01:10:37] *** Quits: sudomannn (~sudomann@2601:155:8402:4960:f4b6:2f5c:9895:3a33) (Ping timeout: 240 seconds)
[01:14:16] *** Quits: Forsaken87_ (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:16:33] *** Quits: buzzard (~quassel@172.93.207.125) (Ping timeout: 256 seconds)
[01:17:30] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73)
[01:21:14] *** Quits: shailangsa_ (~shailangs@host86-186-142-101.range86-186.btcentralplus.com) (Ping timeout: 268 seconds)
[01:24:08] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Quit: Leaving)
[01:25:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[01:27:15] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[01:28:07] *** Joins: fikran (~fikran@user/fikran)
[01:30:45] <parv> My confusion over getting None sans explicit return in the if-branch came about due to expected /Behaviour in Other Programming Languages/. (example wrt Perl, Ruby: https://termbin.com/jsu5 )
[01:30:47] *** Quits: ThanatosJ (~Thanatos@197.210.45.218) (Ping timeout: 250 seconds)
[01:32:55] *** Quits: remtoe (~self@user/hackers) (Remote host closed the connection)
[01:33:47] *** Quits: magla (~gelignite@55d4b9f8.access.ecotel.net) (Quit: Stay safe!)
[01:33:49] <Mortician> i found site-packages in usr/lib
[01:33:56] <Mortician> i see my modules in there
[01:34:12] <Mortician> how can i can have a local site-packages
[01:34:24] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[01:34:33] <Mortician> and have that override the usr lib version
[01:35:15] *** Quits: radens (uid501260@id-501260.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[01:35:49] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[01:35:59] *** Quits: vaio (~gary@user/ghost) (Remote host closed the connection)
[01:36:14] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[01:36:15] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:4c19:361f:9d25:1a07) (Ping timeout: 256 seconds)
[01:36:25] *** Joins: vaio (~gary@user/ghost)
[01:37:03] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[01:39:09] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[01:41:18] <bjs> parv: Ruby has an "implicit" return on the last thing in a function
[01:41:25] *** Joins: shailangsa (~shailangs@host86-162-150-202.range86-162.btcentralplus.com)
[01:41:48] <bjs> Python doesn't have that, in Python `def f(): 42` doesn't return 42 (like Ruby would)
[01:43:34] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-ac49-a6fb-bfa4-621c.res6.spectrum.com) (Read error: Connection reset by peer)
[01:44:00] *** Quits: tdsmith (~tdsmith@kvm.kumokasumi.org) (Quit: Bye!)
[01:44:19] *** Joins: tdsmith (~tdsmith@kvm.kumokasumi.org)
[01:44:19] *** Quits: KeiraT (~k@lulzsec.co.uk) (Ping timeout: 256 seconds)
[01:44:26] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:1142:af24:973d:111c)
[01:44:47] <SnoopJ> it arguably has an implicit return, it's just always None if it's implicit, heh
[01:45:00] <parv> ;->
[01:45:07] <SnoopJ> unless that's CS jargon and I've subtly misunderstood
[01:45:28] *** Joins: Thanatos (~Thanatos@102.89.3.68)
[01:46:07] <bjs> SnoopJ: no I mean lots of languages (e.g. Rust and Ruby, and I'm sure others) return the last value in the body of the function.
[01:46:17] <SnoopJ> right
[01:47:09] *** Quits: retrosenator (~retrosena@79.sub-174-245-112.myvzw.com) (Read error: Connection reset by peer)
[01:47:10] <bjs> They're not actually doing any weird "return multiple calls at once" stuff, each call is happening separately and each has its own return, it's just that in Python you're required to write `return` explicitly to return the value
[01:47:11] *** Quits: tdsmith (~tdsmith@kvm.kumokasumi.org) (Client Quit)
[01:47:33] *** Joins: tdsmith (~tdsmith@kvm.kumokasumi.org)
[01:48:00] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:48:38] *** Joins: prudentSomeone (~textual@198.99.82.12)
[01:50:31] <jinsun> python has that "implicit" return too (if you write a lambda)
[01:51:41] *** Quits: luigibu1 (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[01:51:52] *** Joins: Kaedenn (~kaedenn@137.229.82.89)
[01:52:23] <Kaedenn> Can I set argparse arguments via environment variables? akin to `if os.environ.get("DEBUG"): args.debug = True`
[01:52:39] <Kaedenn> as in, is there an argparse API for that?
[01:52:50] <nedbat> Kaedenn: there are packages that will do that for you.  You should look at click, i think it handles that.
[01:53:26] <grym> Kaedenn: or just default=os.environ.get(...) might do you
[01:53:37] <Kaedenn> ...I feel like an idiot
[01:53:37] *** Joins: delvian (~delvian@41.13.220.222)
[01:53:37] <Kaedenn> thank you
[01:54:04] <Kaedenn> this is a stupid little toy program so I don't feel like learning a new library
[01:54:20] <Kaedenn> even if that library will make me question everything and obtain redemption for all of my sins
[01:54:25] *** Quits: sazawal (~sazawal@122.161.85.84) (Quit: Leaving)
[01:55:16] *** Quits: tdsmith (~tdsmith@kvm.kumokasumi.org) (Quit: Bye!)
[01:55:49] *** Joins: tdsmith (~tdsmith@kvm.kumokasumi.org)
[01:56:13] *** Joins: DaNeenjah (~jake@adsl-74-230-9-185.hsv.bellsouth.net)
[01:58:01] *** Joins: palasso (~palasso@user/palasso)
[01:58:59] <SnoopJ> click +1
[01:59:17] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[01:59:17] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[01:59:17] *** finn_elija is now known as FinnElija
[01:59:34] <SnoopJ> it's not really all that different once you're used to using its decorators
[02:00:17] *** Quits: Themis3000 (~Thunderbi@user/themis3000) (Ping timeout: 240 seconds)
[02:00:29] *** Quits: nomic (~nomic@185.198.243.161) (Quit: Leaving)
[02:01:05] <braxas> I'm adding typing to a library, and I'm not sure what the best way is to assert types without changing runtime behaviour: https://github.com/aucampia/rdflib/blob/3b791eccfb2c1ad33caca38159019ada90d10411/rdflib/plugins/shared/jsonld/context.py#L413-L416
[02:01:15] <braxas> What I do is: if TYPE_CHECKING: assert ...
[02:01:27] <braxas> is there other options?
[02:02:17] *** Quits: wombawomba (~andre@h95-155-227-157.cust.a3fiber.se) (Ping timeout: 240 seconds)
[02:02:59] <braxas> the other option is a # type: ignore[...]
[02:03:03] <SnoopJ> braxas, you could do `source_doc_base = typing.cast(str, source_doc_base)` there, but it's kinda messier.
[02:03:30] <SnoopJ> braxas, are you sure you need to do this? `if base:` should already narrow source_doc_base to not-None if I'm not mistaken
[02:04:06] *** Quits: tdsmith (~tdsmith@kvm.kumokasumi.org) (Quit: Bye!)
[02:04:09] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[02:04:33] <braxas> I would have expected that also but if I don't add that I get: rdflib/plugins/shared/jsonld/context.py:417: error: Value of type variable "AnyStr" of "urljoin" cannot be "Optional[str]"  [type-var]
[02:04:43] *** Quits: akk (~akk@174-28-122-47.albq.qwest.net) (Ping timeout: 256 seconds)
[02:05:42] <SnoopJ> hmm, maybe the manual annotation clobbers it, or maybe narrowing just doesn't do this
[02:05:46] *** Joins: tdsmith (~tdsmith@kvm.kumokasumi.org)
[02:06:11] *** Joins: Enitin (~Enitin@82.102.22.84)
[02:06:38] <braxas> Well the manual annotation is actually redudant, but same problem when I remove it
[02:06:50] <braxas> I think mypy is just not figuring it out
[02:07:08] <SnoopJ> of those two options I like the TYPE_CHECKING one better
[02:07:14] *** Joins: audiobirb (~audio@user/audio)
[02:07:19] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[02:08:02] <jinsun> if you are sure it would nt be None, why not assert at runtime?
[02:08:03] <braxas> Does if TYPE_CHECKING: guarded code have any runtime impact?
[02:08:21] *** Quits: knstn (~knstn@ppp-94-66-57-173.home.otenet.gr) (Quit: leaving)
[02:09:02] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[02:09:20] <jinsun> TYPE_CHECKING is just False, so stuff in that block won't run at runtime
[02:09:22] <braxas> jinsun: yes, if base is truthy then source_doc_base will be truthy as source_doc_base will have the value of source_doc_base
[02:09:41] *** Quits: Xano (~Xano@2a00:23c4:4204:700:7c5c:4a96:71c7:8551) (Remote host closed the connection)
[02:09:49] *** Quits: nanobot567 (~pi@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 240 seconds)
[02:09:54] <braxas> I think the code can be written differnelty
[02:09:57] <braxas> to avoid needing assert
[02:09:59] *** Joins: Xano (~Xano@2a00:23c4:4204:700:e0b5:ab14:6eed:483d)
[02:10:17] <braxas> I don't like the idea anyway, but I want to distinguish between runtime changes and typing changes
[02:10:29] <braxas> and not mix them in PRs
[02:10:58] <jinsun> you can write `if base and source_doc_base:` too I think
[02:11:10] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 268 seconds)
[02:11:51] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[02:13:05] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[02:13:06] <jinsun> or change self.doc_base so that it can never be None, then source_doc_base will be str always
[02:13:21] *** Joins: Vonter (~Vonter@user/vonter)
[02:14:21] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[02:15:01] *** Quits: dthpulse (~quassel@podciarou.sk) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:15:30] *** Joins: luigibu1 (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net)
[02:15:38] *** Joins: dthpulse (~quassel@podciarou.sk)
[02:16:17] *** Quits: zer0bitz (~zer0bitz@196.244.192.57) (Ping timeout: 250 seconds)
[02:17:19] *** Joins: ThanatosJ (~Thanatos@102.89.2.129)
[02:18:49] <jinsun> or it can be re-written much cleanly I think if you do the if base: block earlier when you are assigning to  source_doc_base, instead of using the or way
[02:19:18] *** Joins: raxor2k (~raxor2k@78.158.236.72)
[02:20:23] <raxor2k> lets say i know that this type of exception is a 'RunTimeError'. What is then the difference between using 'Except RunTimeError as e'   and 'Except exception as e'
[02:20:26] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 268 seconds)
[02:20:27] <raxor2k> ?
[02:20:31] *** Joins: jdmark (~jdmark@user/jdmark)
[02:20:43] <Kaedenn> raxor2k: first only handles RuntimeError second handles all exceptions
[02:20:57] *** Quits: Thanatos (~Thanatos@102.89.3.68) (Ping timeout: 240 seconds)
[02:21:00] <raxor2k> Ok but is there any difference in terms of performance ?
[02:21:09] <Kaedenn> so if you `raise ValueError("a thing")` only the second block is called
[02:21:10] <Kaedenn> no
[02:21:21] <Kaedenn> it's considered Bad Practice(tm) to use `except Exception`
[02:21:32] <raxor2k> ok i see.
[02:21:37] *** Quits: luigibu1 (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[02:21:37] <jinsun> and e will be RuntimeError in the first case (good) and Exception in the second case (bad)
[02:21:38] <Kaedenn> because then you're catching exceptions that indicate there's something wrong with your code
[02:21:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[02:22:06] <ChrisWarrick> `except Exception` is acceptable around the topmost level of the program, to allow user-friendly error handling
[02:22:16] <Kaedenn> ^ this is a good point
[02:22:22] <ChrisWarrick> otherwise, only catch the exceptions you know how to handle
[02:22:23] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[02:22:30] <braxas> jinsun: yes, will look at that in a separate PR
[02:22:35] <braxas> rewriting that is
[02:22:36] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[02:22:43] <Kaedenn> `except Exception` may handle syntax errors :)
[02:22:48] *** Joins: odoood (~odoood@2601:c8:c000:c4e0:ba27:5388:26bd:1fb0)
[02:22:49] <Kaedenn> which is *not* what you want
[02:23:07] *** Joins: blcyber_ (~blcyber@216.74.235.178)
[02:23:22] *** Quits: blcyber_ (~blcyber@216.74.235.178) (Read error: Connection reset by peer)
[02:23:30] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 268 seconds)
[02:23:56] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Quit: rickybob)
[02:27:45] *** Joins: smoke (~smoke@user/smoke)
[02:28:07] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:4c19:361f:9d25:1a07)
[02:28:28] *** Quits: DaNeenjah (~jake@adsl-74-230-9-185.hsv.bellsouth.net) (Read error: Connection reset by peer)
[02:28:36] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[02:28:40] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[02:29:36] *** Quits: raxor2k (~raxor2k@78.158.236.72) (Remote host closed the connection)
[02:30:37] *** Quits: odoood (~odoood@2601:c8:c000:c4e0:ba27:5388:26bd:1fb0) (Ping timeout: 240 seconds)
[02:31:37] *** Quits: blcyber (~blcyber@216.74.235.178) (Read error: Connection reset by peer)
[02:32:01] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:32:04] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:32:48] <parv> ... or IndexError, KeyError
[02:33:22] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:36:22] *** Quits: jinsun (~quassel@user/jinsun) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:36:40] *** Joins: odoood (~odoood@2601:c8:c000:c4e0:ba27:5388:26bd:1fb0)
[02:37:38] *** Quits: sudomann (~sudomann@2601:155:8402:4960:f4b6:2f5c:9895:3a33) (Read error: Connection reset by peer)
[02:38:02] *** Joins: sudomann (~sudomann@2601:155:8402:4960:f4b6:2f5c:9895:3a33)
[02:38:16] *** Quits: stockholm (~Andreas@p200300d2c7032f008c491a5ff84ba46f.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[02:39:41] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[02:41:56] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 252 seconds)
[02:42:17] *** Quits: dreamon (~dreamon@pd9503f67.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[02:42:59] *** Joins: rolo (~rolo@80-62-117-218-mobile.dk.customer.tdc.net)
[02:43:44] *** Quits: smoke (~smoke@user/smoke) (Quit: Leaving)
[02:45:14] *** Quits: Galladite (~Galladite@host-92-24-75-159.as13285.net) (Remote host closed the connection)
[02:47:22] <parv> TypeError is even worse!
[02:47:46] <Kaedenn> How should I obtain the language code from the current locale? Such as "en" from locale.getlocale()
[02:47:59] <Kaedenn> locale.getlocale()[0].split("_")[0] just seems dirty
[02:48:47] <parv> /\b(en)_.+/
[02:48:50] <ChrisWarrick> the locale module is dirty in the first place
[02:49:04] <SnoopJ> parv, I think they're looking for the language code for *any* locale
[02:49:07] <Kaedenn> ChrisWarrick: yes, argeed
[02:49:14] <Kaedenn> I want the language code for the *current* locale
[02:49:22] <SnoopJ> Kaedenn, which may not be en, right?
[02:49:25] <Kaedenn> correct
[02:49:25] *** Joins: Gerula (~Gerula@user/gerula)
[02:49:30] <ChrisWarrick> Kaedenn: I’d be fine with str.split, or perhaps str.partition
[02:49:39] <leitz> note to self; your code might not work if it uses incompatible data models.
[02:49:57] <parv> My point is would a regex be any better than split.
[02:50:08] <Kaedenn> leitz: welcome to reality. please enjoy your stay. there is tea on the counter.
[02:50:11] <ChrisWarrick> parv: but your regex works for english only
[02:50:14] <SnoopJ> parv, your regex won't handle language codes that aren't 'en' is my point
[02:50:24] <parv> It was an example.
[02:50:31] *** jarthur__ is now known as jarthur
[02:50:33] <SnoopJ> yes, of a solution to a different problem
[02:50:41] * SnoopJ would probably partition()
[02:50:42] <parv> /\b(..)_.+/
[02:50:46] <ChrisWarrick> >>> locale.getlocale()
[02:50:48] <ChrisWarrick> ('English_United Kingdom', '1252')
[02:50:57] <Kaedenn> ...oh god
[02:50:57] <ChrisWarrick> parv: your regex doesn’t work on Windows
[02:51:12] <parv> ChrisWarrick, Lovely
[02:51:18] <Kaedenn> okay, splitting locale.getlocale()[0] isn't an option then
[02:51:25] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[02:51:29] <Kaedenn> thanks, ChrisWarrick, I didn't know that
[02:51:42] <ChrisWarrick> Kaedenn: what do you want to accomplish?
[02:51:42] <SnoopJ> at least you'd get "English" there, heh
[02:52:08] <Kaedenn> I'm parsing the output of `apt-cache search --full <package>` and it includes `Description-<lang>` keys
[02:52:20] <Kaedenn> and I'd like to figure out which of those to display to the user
[02:52:25] <ChrisWarrick> ask the user
[02:52:28] <SnoopJ> +1
[02:52:46] <Kaedenn> but it'd be nice to have a sane default value
[02:53:02] <ChrisWarrick> LC_ALL=xx_YY.UTF-8 python -c 'import locale; print(locale.getlocale())'
[02:53:03] <SnoopJ> best-effort at putting the one you think is most relevant at the top would be sane
[02:53:04] <ChrisWarrick> (None, None)
[02:53:15] <Kaedenn> perhaps I could try to use locale.getlocale()[0] an--OH COME ON
[02:53:28] <Kaedenn> okay the locale module is terrible
[02:53:29] <SnoopJ> surprise!
[02:53:36] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.4)
[02:53:42] <SnoopJ> Kaedenn, it's not really the module, it's the concept itself that is terrible. It's a hard problem
[02:53:43] <ChrisWarrick> Kaedenn: if you get a None or an unreasonable answer, I’d just assume the default language
[02:53:55] <Kaedenn> but what *is* the default language?
[02:54:03] <ChrisWarrick> Kaedenn: Is there no 'Description:' tag?
[02:54:12] <Kaedenn> nope!
[02:54:22] <ChrisWarrick> I’d probably default to English then
[02:54:37] <ChrisWarrick> the module is terrible, since it depends on the OS and its particular configuration
[02:54:39] <Kaedenn> English, then the first result if English isn't among the results
[02:54:45] <SnoopJ> yes to be clear the module is *also* terrible
[02:55:06] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:55:32] *** Joins: rajkosto (~rajkosto@93-86-92-233.dynamic.isp.telekom.rs)
[02:55:36] <Kaedenn> 1) locale.getlocale()[0].split("_")[0] unless there's a None in there somewhere, 2) "en", 3) the first Description key
[02:55:52] *** Quits: grooverman (~grooverma@177.102.117.95) (Read error: Connection reset by peer)
[02:56:08] <Kaedenn> ChrisWarrick: thank you for enlightening me on how terrible it is to interact with locales
[02:56:08] <ChrisWarrick> Kaedenn: I doubt there would be any packages without an English description, but sure, that sounds reasonable
[02:56:14] <ChrisWarrick> Kaedenn: you’re welcome!
[02:56:16] <Kaedenn> true
[02:57:30] <Kaedenn> oh hey #unbuntu gave me https://help.ubuntu.com/community/EnvironmentVariables#The_LANGUAGE_priority_list
[02:57:37] <Kaedenn> so I can use $LANGUAGE as well
[02:58:20] * ChrisWarrick never heard of $LANGUAGE and doesn’t seem to have it set on his systems
[02:58:32] *** Joins: grooverman (~grooverma@177.102.117.95)
[02:58:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[03:00:21] <mcint> how do i package a script and its dependencies into a self-contained distributable unit?
[03:00:32] <ChrisWarrick> mcint: to whom are you distributing?
[03:00:45] *** Joins: wombawomba (~andre@h95-155-227-157.cust.a3fiber.se)
[03:00:56] <mcint> myself, on usb stick
[03:01:01] <SnoopJ> and do they have a Python runtime already installed, or do you need to distribute that, too?
[03:01:08] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 268 seconds)
[03:01:17] <mcint> it will be availble on a base os
[03:01:20] *** Quits: upsala (~zcb@185.209.196.169) (Quit: WeeChat 3.4)
[03:01:25] <ChrisWarrick> then perhaps zipapp?
[03:01:29] <SnoopJ> or shiv
[03:01:39] <SnoopJ> (which is basically zipapp + some boilerplate to deal with deps)
[03:01:49] <parv> Kaedenn, Is locale.getdefaultlocale() not suitable? That tests for $LANG & $LANGUAGE
[03:01:57] <mcint> excellent, 2 expert leads, thank you
[03:01:58] *** Joins: Terexen (~terexen@user/terexen)
[03:02:19] <Kaedenn> ChrisWarrick: what does locale.getdefaultlocale() return for your "English_" value?
[03:02:27] <mcint> and a bit more than https://stackoverflow.com/questions/4556424/
[03:02:37] <ChrisWarrick> Kaedenn: ('en_GB', 'cp1252')
[03:02:45] <Kaedenn> that looks promising
[03:02:51] <ChrisWarrick> Kaedenn: (note this is Windows — apt-cache isn’t a thing here, so you could probably disregard it)
[03:02:59] <Kaedenn> ...true
[03:03:09] <ChrisWarrick>  LC_ALL=xx_YY.UTF-8 python -c 'import locale; print(locale.getdefaultlocale())'
[03:03:11] <ChrisWarrick> ('xx_YY', 'UTF-8')
[03:03:17] <ChrisWarrick> so perhaps getdefaultlocale is what you want
[03:03:51] *** Quits: TechTheory (~lwait@2600:8800:7c03:c400:60cd:352c:88b0:13c0) (Quit: Leaving.)
[03:04:46] <ThePhilgrim> Hi, my file foo.py imports bar, and my file bar.py imports foo. bar.py contains a bunch of utility functions that foo.py uses, and one function in bar.py instantiates a class in foo.py. All of this is done after a pretty big refactor. Code works well. However, when I run my pytest suite, it now complains about circular import "AttributeError: partially initialized mode 'foo' has no attribute 'Baz' (most likely due to a circular impo
[03:05:04] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[03:05:17] *** Quits: odoood (~odoood@2601:c8:c000:c4e0:ba27:5388:26bd:1fb0) (Ping timeout: 240 seconds)
[03:05:48] <ChrisWarrick> ThePhilgrim: you’ll need to restructure your code.
[03:06:00] <ThePhilgrim> I just spend 3 hours doing that :D
[03:06:07] <ThePhilgrim> that's how the issue was introduced.
[03:06:40] <ChrisWarrick> ThePhilgrim: does the Baz class require things from bar?
[03:06:48] <ThePhilgrim> I had all the functions in bar.py in a class in foo.py, now I broke it all out into a separate file
[03:07:00] <ThePhilgrim> the Baz class calls all the functions in bar
[03:07:13] <ChrisWarrick> what part of bar calls Baz?
[03:07:35] *** Quits: Denver (~Denver@174-16-236-178.hlrn.qwest.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[03:09:17] <ThePhilgrim> the instance of Baz is passed into all the functions of bar.py, but they never do anything with the class itself. However, all the functions look something like this: "def func(server: Baz) -> None:"
[03:09:37] <ThePhilgrim> One function in bar.py instantiates another Class inside of foo.py
[03:10:02] <ChrisWarrick> to me, this sounds lke the functions in bar.py should be methods of Bar.
[03:10:32] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:82f:3ee7:8f7a:8393) (Ping timeout: 252 seconds)
[03:10:37] <ThePhilgrim> Hm, that's how I had it. They just do really different things, so I felt it didn't make sense to keep it all in a class, just for the sake of it
[03:11:46] <ChrisWarrick> they do different things, yet they are related to the same Baz?
[03:12:04] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:be01:42d:dbe5:17b1)
[03:12:59] <ThePhilgrim> Yeah sure. User sends a command to Baz, and Baz delegates that command to different functions in bar.py to carry out the work so to say
[03:13:01] *** Quits: palasso (~palasso@user/palasso) (Quit: I am not a quitter!)
[03:13:07] <ThePhilgrim> Or that's the best way I can describe it
[03:13:20] <ThePhilgrim> If it would help, I can show you the code.
[03:13:30] <ChrisWarrick> yeah, please do
[03:13:51] <moonmoon> could always do method-scoped imports to break the circle, although that's also often a code smell
[03:14:43] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Reconnecting)
[03:14:52] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:14:58] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[03:15:00] <ThePhilgrim> moonmoon, does that mean you import something in a local scope? inside a method in other words?
[03:15:06] <moonmoon> yes
[03:15:13] <ThePhilgrim> foo.py: https://dpaste.com/HQCZSX5AH , bar.py: https://dpaste.com/5SHH2DFUN
[03:15:22] <moonmoon> I do that quite often in one of my bots due to very tight coupling between modules
[03:16:05] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Remote host closed the connection)
[03:16:19] <ThePhilgrim> Ah
[03:16:23] *** Joins: mnabid (uid448607@user/mnabid)
[03:16:23] <ThePhilgrim> Never done it :)
[03:16:29] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[03:16:29] <ThePhilgrim> Haven't been coding for so long
[03:16:48] <moonmoon> (I do a lot of other very questionable things to python in said bot so it isn't a pinnacle of well-written code)
[03:16:50] <ThePhilgrim> Btw, the code works as intended, it's my pytest suite that complains!
[03:17:23] <ThePhilgrim> hehe, I guess the more confident you are in coding, the more you can be lazy while doing hobby projects
[03:17:23] <ChrisWarrick> I’d guess pytest is trying to resolve your type annotations
[03:17:23] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:be01:42d:dbe5:17b1) (Ping timeout: 250 seconds)
[03:17:32] <ThePhilgrim> I'm trying to really learn best practices etc
[03:17:48] <ThePhilgrim> Should I show the test code as well ChrisWarrick ?
[03:17:52] <ChrisWarrick> ThePhilgrim: I don’t like the design with getattr on a module
[03:18:15] <ThePhilgrim> I stole the idea from Pythons http server :)
[03:18:24] <ChrisWarrick> (which is garbage)
[03:18:36] <meatballs> I have plenty of what I call 'camembert' code. It smells bad but hits the spot perfectly.
[03:18:51] <ThePhilgrim> It's way beyond my skills, but I hear you. How would you implement that logic then?
[03:19:18] <ThePhilgrim> the client sends commands like "join", "privmsg", etc.. And I need to call them based on the command
[03:19:31] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[03:19:33] *** Joins: df00z (~df00z@cpe-69-207-141-227.rochester.res.rr.com)
[03:19:39] <ThePhilgrim> them being the functions in bar.py
[03:19:52] <grym> meatballs: if you're unlucky, the cat's run off with it later
[03:20:05] <ChrisWarrick> ThePhilgrim: what if the client sends something like send_bytes_to_user as a command?
[03:20:36] <ChrisWarrick> ThePhilgrim: I’d prefer to have a registry of commands. That might be a dict, whose members are defined manually, or with fancy @register decorators.
[03:20:41] <ThePhilgrim> If there is no attr, it calls unknown_command
[03:20:45] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:21:08] <ThePhilgrim> Hm, I don't know how to use decorators yet
[03:21:32] <ThePhilgrim> so you would do something like dict[command] = function_object?
[03:21:34] <ChrisWarrick> ThePhilgrim: moving `import handle` to the top of recv_loop could be a good-enough solution
[03:21:49] <df00z> Hm, I'
[03:21:54] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[03:21:55] <ChrisWarrick> ThePhilgrim: yes (I’d write it out as a literal if I didn’t go for the decorator though)
[03:22:45] <meatballs> @grym I'm not convinced cat would deign to sully itself listing some of my smellier code
[03:23:01] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[03:23:05] <ThePhilgrim> Hm. You mean like {"privmsg": "handle.privmsg"} ? If this is how you mean, how do you actually convert the string into a function call?
[03:23:19] *** Quits: Helle (~helle@45.83.235.185) (Ping timeout: 268 seconds)
[03:23:22] *** Joins: Denver (~Denver@174-16-236-178.hlrn.qwest.net)
[03:23:33] <ChrisWarrick> ThePhilgrim: no quotes around the function name
[03:23:45] <ChrisWarrick> and I would define the dict in handle
[03:24:11] <ThePhilgrim> oh. hm
[03:24:23] <df00z> I'm using websockets, which uses asyncIO.  Where are you supposed to store like user specific data?  Ie, if this was C++ and berkely sockets. I might store the socket ID and a reference to a user class.   Websockets in asyncio don't have an identifier.   I am just like setting userdata on the websocket class itself which seems janky as heck.
[03:24:33] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 268 seconds)
[03:24:50] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[03:25:19] <ThePhilgrim> But the function needs to be called from the dict, right? is it then {"privmsg": privmsg()} ?
[03:25:29] <ChrisWarrick> ThePhilgrim: no, it doesn’t
[03:25:39] <ChrisWarrick> ThePhilgrim: {"privmsg": privmsg}
[03:25:49] <ThePhilgrim> Okay, and how do you call that function?
[03:25:49] <df00z> Are you using like exec?
[03:25:56] <ThePhilgrim> exec is dangerous i hear
[03:26:00] <df00z> that looks like a globals\locals dict
[03:26:02] <ChrisWarrick> ThePhilgrim: functions in python are first-class objects, you can pass them around and keep references to them
[03:26:11] <ChrisWarrick> ThePhilgrim: registry["privmsg"](...)
[03:26:40] *** Joins: ccha (~ccha@user/ccha)
[03:27:13] *** Joins: Grinchios (~Grinchios@2a00:23c8:240c:f801:d815:1b9c:19da:c0d7)
[03:27:24] <ChrisWarrick> also, the most basic `register` decorator would be:   def register(f): registry[f.__name__] = f; return f
[03:27:26] *** Quits: ArtfulDodger (~ArtfulDod@183.185.116.78.rev.sfr.net) (Remote host closed the connection)
[03:27:27] <ThePhilgrim> I have to read up on registry
[03:27:46] *** Joins: ArtfulDodger (~ArtfulDod@183.185.116.78.rev.sfr.net)
[03:28:05] *** Quits: vladoski (~foo@93-36-221-58.ip62.fastwebnet.it) (Quit: Textual IRC Client: www.textualapp.com)
[03:28:10] <ThePhilgrim> Is "registry" and "@register" the same thing?
[03:28:30] <ChrisWarrick> no
[03:28:37] <ChrisWarrick> registry in my examples is the dict
[03:28:41] <ThePhilgrim> Okay, I'll read up on both then :)
[03:28:58] <ThePhilgrim> Ah, okay you just call the dict "registry" ?
[03:28:58] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[03:29:02] <ChrisWarrick> yes
[03:29:03] <ThePhilgrim> ah
[03:29:07] <ccha> hello, I'm using venv with --system-site-packages. It is possible instead of system site-packages to select another path? another venv site-packages for example? Maybe I need to change the sys.base_prefix?
[03:29:09] <ChrisWarrick> referencing the registry pattern
[03:29:29] <ChrisWarrick> ccha: don’t use --system-site-packages, it’s full of footguns and destroys all benefits of venvs
[03:29:37] <ThePhilgrim> And how come you don't like the getattr design? Any flaws there?
[03:30:07] <ChrisWarrick> ThePhilgrim: users can call all functions in the module, including those you didn’t want them to call, and those you didn’t know existed there
[03:30:13] <ccha> ChrisWarrick: I want to have a common venv to be include for other venv
[03:30:16] *** Quits: cliluw (~cliluw@47.147.73.223) (Read error: Connection reset by peer)
[03:30:21] <ChrisWarrick> ccha: that’s not a good venv practice
[03:30:27] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[03:30:41] <ChrisWarrick> ccha: the point of venvs is to have separation between them (and by extension between projects)
[03:33:11] *** Joins: saunders (~nicholas@172.103.152.184)
[03:33:13] <ccha> I have different venvs for different ansible env... then a venv for python language protocol but If I need to use lsp in ansible venvs I need to install on each venvs lsp
[03:33:13] <ThePhilgrim> ChrisWarrick: I would guess I'm covered though, since there are appropriate errors if functions are called wrongly
[03:33:13] *** Joins: TechTheory (~lwait@2600:8800:7c03:c400:c1ec:d795:1b2c:1945)
[03:33:33] <ccha> so my lsp venv should be common for all venvs
[03:33:59] <ccha> language server protocol
[03:35:05] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[03:35:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[03:35:54] *** Parts: kittonian (~kittonian@cpe-70-114-148-180.austin.res.rr.com) (Leaving)
[03:36:58] <ThePhilgrim> But anyways, I tried importing handle inside of recv_loop for now, and it works great. Tests pass! I will opt for that until tomorrow when I can focus more on figuring the alternative solution to getattr
[03:37:05] <ThePhilgrim> Thanks for all the help ChrisWarrick
[03:37:11] <ChrisWarrick> ThePhilgrim: you’re welcome!
[03:37:28] *** Joins: fikran (~fikran@user/fikran)
[03:38:30] <ChrisWarrick> ccha: if you have a common “development” stack which depends on the environment (like lsp, ipython), it’s the most typical to just install it into the venv
[03:40:19] <ccha> when I need to update lsp, I need to update it in all venvs
[03:40:38] <ChrisWarrick> what if you need to update ansible?
[03:41:05] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b1d4-3f07-bb3f-aa7e.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[03:41:14] <ccha> just update ansible in the dedicated venv
[03:41:55] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b1d4-3f07-bb3f-aa7e.res6.spectrum.com)
[03:43:37] <ccha> ansible3, ansible4, ansible5 venvs... if there are updates in ansible5, I do this one only.... but for lsp, if there is update I need to update on all venvs. If I have a common venv for lsp, I just update only lsp venv
[03:43:44] *** Joins: cliluw (~cliluw@47.147.73.223)
[03:44:31] <ccha> same If I have venv for openstack client, I can to put common for all ansible venvs
[03:44:47] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:45:21] *** Quits: Gnuman (~gnuman@user/gnuman) (Remote host closed the connection)
[03:45:58] <ChrisWarrick> a usable solution might be -e installs in all venvs from a common source
[03:46:01] <ccha> and maybe ansible venvs include both common venvs (lsp venv, openstack client venv)
[03:46:22] <ChrisWarrick> this can get unwieldy if there are lots of dependencies involved
[03:46:57] *** Quits: julia (~quassel@user/julia) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:46:57] *** Quits: prudentSomeone (~textual@198.99.82.12) (Read error: Connection reset by peer)
[03:47:13] *** Joins: Gnuman (~gnuman@user/gnuman)
[03:47:23] <ccha> same issue with ansible, lsp, openstack client in same venv
[03:47:59] *** Joins: julia (~quassel@user/julia)
[03:48:19] <ccha> what is -e ?
[03:48:49] <ccha> option with python -m venv ?
[03:49:18] *** Parts: TechTheory (~lwait@2600:8800:7c03:c400:c1ec:d795:1b2c:1945) ()
[03:49:51] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[03:50:41] *** Joins: dmr_ (~rdumitru@95.76.135.3)
[03:51:27] *** Quits: bss (bss@rie.incorporeal.org) (Quit: brb)
[03:51:31] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[03:51:58] *** Joins: yanmaani1 (~yanmaani@gateway/tor-sasl/yanmaani)
[03:52:07] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:52:14] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:52:49] *** Quits: df00z (~df00z@cpe-69-207-141-227.rochester.res.rr.com) (Ping timeout: 256 seconds)
[03:54:09] *** Quits: Grinchios (~Grinchios@2a00:23c8:240c:f801:d815:1b9c:19da:c0d7) (Ping timeout: 268 seconds)
[03:54:46] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Quit: Leaving)
[03:55:13] *** Quits: dmr_ (~rdumitru@95.76.135.3) (Ping timeout: 256 seconds)
[03:57:27] <ChrisWarrick> no, it’s a pip install option
[03:58:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[04:00:16] <ccha> ok, thank you. I will check that
[04:00:30] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:01:01] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[04:01:20] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[04:01:26] *** Joins: Enitin (~Enitin@82.102.22.84)
[04:01:57] *** Joins: sydbarret (~anton@static-186-121-195-169.acelerate.net)
[04:02:17] *** Joins: bss (bss@rie.incorporeal.org)
[04:02:28] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:1142:af24:973d:111c) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[04:02:42] <sydbarret> is there a way to change the affinity for a database opened in msaccess?
[04:02:48] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[04:03:09] <sydbarret> so the db is already opened. I wanna launch a python script to change its affinity
[04:04:20] *** Joins: zaquest (~notzaques@5.130.79.72)
[04:04:22] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[04:05:15] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[04:06:10] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Quit: ThePhilgrim)
[04:07:25] *** Joins: dmr_ (~rdumitru@95.76.135.3)
[04:12:09] *** Quits: julia (~quassel@user/julia) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:12:34] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:15:04] *** Joins: audiobirb (~audio@user/audio)
[04:16:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[04:17:18] *** ormaaj is now known as jaamro
[04:18:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:19:43] *** Joins: Malaclypse (~Malaclyps@bbcs-108-228.pub.wingo.ch)
[04:20:02] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[04:22:51] *** Quits: grimvar (~grimvar@i5C75F49B.versanet.de) (Ping timeout: 245 seconds)
[04:24:38] *** Joins: grimvar (~grimvar@i5C75F514.versanet.de)
[04:25:27] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[04:25:33] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[04:25:43] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[04:27:01] *** Joins: travaldo (~travaldo@159.203.88.148)
[04:27:07] *** Joins: rolo_ (~rolo@80-62-117-218-mobile.dk.customer.tdc.net)
[04:27:52] *** Quits: rolo_ (~rolo@80-62-117-218-mobile.dk.customer.tdc.net) (Client Quit)
[04:28:41] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 268 seconds)
[04:28:57] *** Joins: rolo_ (~rolo@80-62-117-218-mobile.dk.customer.tdc.net)
[04:29:00] *** Quits: rolo_ (~rolo@80-62-117-218-mobile.dk.customer.tdc.net) (Client Quit)
[04:30:18] *** Joins: Wulf (~Wulf@user/wulf)
[04:30:34] *** Joins: rolo_ (~rolo@80-62-117-218-mobile.dk.customer.tdc.net)
[04:30:57] *** Quits: junktext__ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 240 seconds)
[04:31:09] *** Quits: rolo_ (~rolo@80-62-117-218-mobile.dk.customer.tdc.net) (Client Quit)
[04:31:23] *** Joins: rolo_ (~rolo@80-62-117-218-mobile.dk.customer.tdc.net)
[04:32:04] <leitz> is there a code analysis tool that evaluates your code and says what minimum version you must have?
[04:32:31] *** Quits: rolo (~rolo@80-62-117-218-mobile.dk.customer.tdc.net) (Quit: WeeChat 3.4)
[04:32:38] *** Quits: rolo_ (~rolo@80-62-117-218-mobile.dk.customer.tdc.net) (Client Quit)
[04:32:56] *** Joins: rolo (~rolo@80-62-117-218-mobile.dk.customer.tdc.net)
[04:33:31] *** Quits: rolo (~rolo@80-62-117-218-mobile.dk.customer.tdc.net) (Client Quit)
[04:34:08] *** Quits: delvian (~delvian@41.13.220.222) (Ping timeout: 252 seconds)
[04:34:15] *** Joins: rolo (~rolo@80-62-117-218-mobile.dk.customer.tdc.net)
[04:37:02] *** Quits: rolo (~rolo@80-62-117-218-mobile.dk.customer.tdc.net) (Client Quit)
[04:37:46] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[04:38:01] *** Joins: rolo (~rolo@80-62-117-218-mobile.dk.customer.tdc.net)
[04:38:20] *** Quits: rolo (~rolo@80-62-117-218-mobile.dk.customer.tdc.net) (Client Quit)
[04:39:21] *** Joins: rolo (~rolo@80-62-117-218-mobile.dk.customer.tdc.net)
[04:40:44] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[04:40:53] *** Quits: rolo (~rolo@80-62-117-218-mobile.dk.customer.tdc.net) (Client Quit)
[04:41:34] *** Joins: rolo (~rolo@80-62-117-218-mobile.dk.customer.tdc.net)
[04:41:55] *** Quits: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:42:10] *** Parts: Kaedenn (~kaedenn@137.229.82.89) ()
[04:42:18] *** Quits: rolo (~rolo@80-62-117-218-mobile.dk.customer.tdc.net) (Client Quit)
[04:42:37] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[04:42:46] *** Joins: rolo (~rolo@80-62-117-218-mobile.dk.customer.tdc.net)
[04:43:11] *** Quits: damonlynch (~ngaio@66.63.167.101) (Quit: Leaving)
[04:43:22] *** Quits: rolo (~rolo@80-62-117-218-mobile.dk.customer.tdc.net) (Client Quit)
[04:43:49] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 240 seconds)
[04:43:59] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[04:44:57] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 240 seconds)
[04:45:27] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[04:47:01] *** Joins: minip (~minip@user/minip)
[04:48:19] *** Joins: quidnunc (~user@bas3-montreal02-65-94-9-48.dsl.bell.ca)
[04:48:32] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[04:51:35] *** Joins: Enitin (~Enitin@82.102.22.85)
[04:52:45] *** Joins: delvian (~delvian@41.13.220.222)
[04:53:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[04:53:53] <aphysically> jinsun_: eric added a thing to pyright for a new TypeGuard feature that allows narrowing in the negative case but I haven't tracked down if this is due to a ML/GH discussion somewhere or an intent to propose an amendment to the pEP
[04:53:58] *** Quits: beli6147 (~Thunderbi@cpe-72-132-224-120.dc.res.rr.com) (Ping timeout: 268 seconds)
[04:53:59] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 268 seconds)
[04:56:57] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[04:57:00] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[04:57:33] *** Quits: delvian (~delvian@41.13.220.222) (Ping timeout: 256 seconds)
[04:58:24] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[04:58:57] *** Quits: italo (~italo@2804:29b8:50c2:27da:e9d:92ff:fe87:c787) (Ping timeout: 240 seconds)
[05:00:53] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Client Quit)
[05:01:31] *** Quits: ThanatosJ (~Thanatos@102.89.2.129) (Ping timeout: 256 seconds)
[05:02:44] *** Quits: Denver (~Denver@174-16-236-178.hlrn.qwest.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[05:04:27] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:05:29] <hardwire> I've been using class level attributes for various things for a while.. but need some advise on how to best approach them with respect to ABC's:  https://gist.github.com/whardier/a9d4c7da17d9880f045f203e6e3dedbf
[05:05:42] *** Quits: Xano (~Xano@2a00:23c4:4204:700:e0b5:ab14:6eed:483d) (Ping timeout: 268 seconds)
[05:05:48] <hardwire> Advice even.
[05:06:42] *** Joins: Lazenca (~lazenca@user/lazenca)
[05:08:52] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[05:09:23] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[05:10:37] *** Joins: luigibu1 (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net)
[05:13:20] *** Joins: progman98 (~progman98@45-31-183-171.lightspeed.austtx.sbcglobal.net)
[05:14:48] *** Parts: progman98 (~progman98@45-31-183-171.lightspeed.austtx.sbcglobal.net) ()
[05:14:57] *** Quits: luigibu1 (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net) (Ping timeout: 240 seconds)
[05:15:56] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:16:01] *** Joins: BlaDe^ (~progman98@45-31-183-171.lightspeed.austtx.sbcglobal.net)
[05:16:06] *** Parts: BlaDe^ (~progman98@45-31-183-171.lightspeed.austtx.sbcglobal.net) ()
[05:16:09] *** Joins: BlaDe^ (~progman98@45-31-183-171.lightspeed.austtx.sbcglobal.net)
[05:16:37] <BlaDe^> Hi team! I've been narrowing down why upgrading some dependencies broke my app, and am now struggling with the underlying primitives to identify a proper fix.
[05:17:17] *** Quits: parv (~quass@user/parv) (Ping timeout: 240 seconds)
[05:17:54] <BlaDe^> My application broke when moving from starlette 0.14.2 to 0.15.0 which seems to be because it moved from asyncio to anyio -- the root cause of the failures is because my app is struggling to find the active_span for tracing, likely because i'm using the asyncio scope manager in opentracing: https://github.com/opentracing/opentracing-python/blob/master/opentracing/scope_managers/asyncio.py
[05:18:55] <BlaDe^> if I set my application to use the ThreadLocalScopeManager instead, it _does_ work, but I suspect there may be unintended side effects with multi event loops etc. It's odd I don't see any other complaints about this on github issues/google/etc so I suspect maybe I'm doing something silly. Would love some guidance / suggestions!
[05:19:26] *** Joins: Denver (~Denver@174-16-236-178.hlrn.qwest.net)
[05:20:13] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[05:20:25] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Quit: Lost terminal)
[05:24:09] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[05:24:32] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[05:25:10] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:25:31] *** Joins: nomic (~nomic@185.198.243.161)
[05:25:37] *** Quits: Denver (~Denver@174-16-236-178.hlrn.qwest.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[05:26:06] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[05:29:22] *** Quits: monchi (~joints@143.198.92.132) (Remote host closed the connection)
[05:29:25] *** Joins: capra[m] (~capramatr@2001:470:69fc:105::1:2280)
[05:29:32] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[05:30:20] *** Joins: drupin (uid7837@id-7837.uxbridge.irccloud.com)
[05:32:19] <drupin> i am getting error  when running python2 addon.py ------->> from repo ---->> https://github.com/botallen/plugin.video.botallen.hotstar
[05:32:34] *** Joins: DrBrownBear (~DrBrownbe@apollo.omarsadiq.com)
[05:33:04] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:33:17] <drupin> 'from resources.lib import main
[05:33:18] <drupin>  File "resources/lib/main.py", line 4, in <module>'
[05:33:57] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[05:34:03] *** Quits: rajkosto (~rajkosto@93-86-92-233.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[05:34:17] *** Joins: Brownbear (~DrBrownbe@apollo.omarsadiq.com)
[05:34:31] *** Joins: akk (~akk@174-28-122-47.albq.qwest.net)
[05:35:17] <grym> drupin: didn't kodi drop py2 ages ago
[05:35:23] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:37:57] *** Quits: DrBrownBear (~DrBrownbe@apollo.omarsadiq.com) (Ping timeout: 240 seconds)
[05:38:00] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[05:38:16] <drupin> grym: either python 2 /3 the error on python 3 is more big
[05:39:06] <grym> drupin: pastebin the py3 error at https://bpa.st/+pytb
[05:39:15] <drupin> ok
[05:39:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[05:40:14] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 268 seconds)
[05:40:27] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[05:40:40] *** Joins: Denver (~Denver@174-16-236-178.hlrn.qwest.net)
[05:40:52] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[05:41:00] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[05:41:18] *** Joins: Jazzy (~jaziz@user/jaziz)
[05:42:14] <drupin> grym: python 3 eror https://bpa.st/VAPA  for https://github.com/botallen/plugin.video.botallen.hotstar
[05:42:32] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[05:43:16] <grym> drupin: looks like you're missing https://github.com/willforde/script.module.codequick ?
[05:43:41] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:43:48] *** Joins: rolo (~rolo@80-62-117-218-mobile.dk.customer.tdc.net)
[05:44:30] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:4a2:85fe:edff:73e)
[05:44:31] <grym> (and possibly other dependencies)
[05:44:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[05:45:01] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:45:32] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[05:46:27] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[05:46:57] *** Joins: fikran (~fikran@user/fikran)
[05:47:13] *** Joins: fstd (~fstd@xdsl-78-35-82-60.nc.de)
[05:47:51] *** Quits: Denver (~Denver@174-16-236-178.hlrn.qwest.net) (Quit: Textual IRC Client: www.textualapp.com)
[05:48:08] <drupin> yes its shows that error in vc code pylance extension
[05:48:13] <drupin> so how do i fix that
[05:49:41] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[05:50:12] <grym> install those dependencies in the site of the python that you're using to run this code
[05:50:24] <drupin> will i need to add the codequik repo in the lib directorty?
[05:50:30] <grym> i don't know how to translate that advice into kodi-land more helpfully
[05:50:32] *** Quits: andreasbuhr (~quassel@p549dbe1a.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[05:50:57] *** Quits: rolo (~rolo@80-62-117-218-mobile.dk.customer.tdc.net) (Ping timeout: 240 seconds)
[05:50:59] *** Joins: andreasbuhr (~quassel@p549dbe5a.dip0.t-ipconnect.de)
[05:51:21] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[05:51:24] <grym> to my eyes, the way these repos are structured are kind of weird, but i think that's because i don't write kodi plugins
[05:51:57] *** Quits: yac (~user@user/yac) (Ping timeout: 256 seconds)
[05:52:12] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Read error: Connection reset by peer)
[05:55:01] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[05:55:21] *** Joins: YoungPrince (~DrBrownbe@2600:1700:9aa1:6bc0:5d16:a7e3:ad48:7689)
[05:56:05] *** Quits: qpdb (~qpdb@user/qpdb) (Ping timeout: 252 seconds)
[05:57:04] *** Joins: brabrax_ (~brabrax@user/brabrax)
[05:57:17] *** Quits: ckdCreations (~ckdCreati@2607:fb90:8352:571e:7d74:3f4f:88b1:32fb) (Ping timeout: 240 seconds)
[05:57:57] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 240 seconds)
[05:57:57] *** brabrax_ is now known as brabrax
[05:58:55] *** Joins: ckdCreations (~ckdCreati@147.55.133.140)
[05:59:10] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Read error: Connection reset by peer)
[05:59:20] *** Quits: Brownbear (~DrBrownbe@apollo.omarsadiq.com) (Ping timeout: 268 seconds)
[05:59:26] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[06:00:43] *** Joins: Enitin (~Enitin@82.102.22.84)
[06:05:34] *** Joins: mug3n_ (~mugen@gateway/tor-sasl/mugen)
[06:06:12] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[06:06:22] <BlaDe^> hi - I have def get_foo(): return xxx and @property def foo: return get_foo() -- however, my unit test is failing on asserting the property value, I get:  AssertionError: assert <opentracing.mocktracer.span.MockSpan object at 0x159e1ea90> is <property object at 0x158ff1958> -- any ideas why that doesn't want to work?
[06:06:33] *** Quits: abraxas (~abraxas@2600:8805:c880:3:c7fe:fc8e:f2cc:8056) (Quit: abraxas)
[06:07:22] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 268 seconds)
[06:08:27] *** Quits: mug3n (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 276 seconds)
[06:09:00] <SnoopJ> BlaDe^, not really, since we can't see the actual program, where the fault is
[06:09:28] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[06:09:35] *** Joins: qpdb (~qpdb@user/qpdb)
[06:11:57] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[06:12:19] *** Joins: natewrench123456 (~josh@cpe-72-228-153-194.buffalo.res.rr.com)
[06:12:42] *** Quits: Seiryu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[06:12:54] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:1c82:4428:8d53:68b9)
[06:14:28] <natewrench123456> Python is an interpreter because I am running py.exe plus the code I want interpreted
[06:15:56] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:16:10] <drupin> grym: that looks too tricky to work we try this ..... python 3 eror ---> fohttps://bpa.st/M6IA --- >  https://github.com/xenomorph1096/hotstar-vlc/blob/master/go.py
[06:16:48] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[06:17:01] <grym> drupin: well, you need to install that dependency too
[06:17:37] <grym> drupin: actually i take that back; urllib2 was refactored in py3, and doesn't exist any more
[06:17:53] <grym> so that plugin's out of date and probably won't run on modern kodi anyway
[06:17:56] <grym> find a better one
[06:18:43] *** Joins: smoke (~smoke@user/smoke)
[06:20:51] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[06:20:55] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[06:21:57] *** Quits: sydbarret (~anton@static-186-121-195-169.acelerate.net) (Quit: Going offline, see ya! (www.adiirc.com))
[06:21:59] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 256 seconds)
[06:22:41] *** Quits: YoungPrince (~DrBrownbe@2600:1700:9aa1:6bc0:5d16:a7e3:ad48:7689) (Quit: Leaving)
[06:23:09] *** Joins: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2)
[06:23:17] <BlaDe^> SnoopJ: fair! this is the code https://bpa.st/BGCA
[06:23:36] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[06:23:39] <BlaDe^> it was working fine until I upgraded starlette
[06:23:54] *** Joins: Tat (~Tat@137-025-218-069.res.spectrum.com)
[06:25:01] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:25:05] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:25:37] <SnoopJ> BlaDe^, you're defining active_span as a @property outside of a class, then? That would explain it if Line 41 in that paste is the one in the error report
[06:26:09] <SnoopJ> oh, hm, it's supposed to apply to the module, I see
[06:27:34] <BlaDe^> I've actually narrows down the issue further.... it appears the opentracing _stuff_ is stored in threading.local() -- but I can see my writes are being done by thread ThreadPoolExecutor-7_0 -- but my reads are coming from MainThread - that's why it isn't finding it, I guess. I can repro this 100% just by pip installing starlette==0.14.2 vs 0.15.0
[06:28:37] <SnoopJ> well, the test is failing because the assertion isn't holding up, and the assertion appears to be "a value was expected, not a property object"
[06:28:37] *** Joins: Enitin (~Enitin@82.102.22.84)
[06:28:51] <SnoopJ> so if something broke I would think it's the kludge
[06:29:13] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:4c19:361f:9d25:1a07) (Ping timeout: 256 seconds)
[06:29:18] <BlaDe^> I think it's showing property object because the function is returning None -- because it's not set in that thread
[06:29:52] <SnoopJ> I can't see enough of the code to say more
[06:30:05] <drupin> grym: urllib2 changes to urllib.request
[06:30:10] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[06:30:29] <grym> drupin: among some other things, yeah
[06:30:51] <grym> drupin: but if you find code that uses urllib2, it will need some more changes to run on py3
[06:31:26] *** Quits: Barones (~Barones@2804:7f3:8989:5535:3bc4:4610:62ad:ecf2) (Quit: Leaving)
[06:31:32] <drupin> correct
[06:32:06] <drupin> 2to3 is also not able to port it
[06:33:39] <grym> it usually isn't
[06:34:01] <grym> i guess https://python-future.org/futurize.html might be better, but honestly it's been ages since i've had to do this
[06:34:06] <BlaDe^> SnoopJ: my guess is it's this https://github.com/encode/starlette/compare/0.14.2...0.15.0#diff-84a35048a18ac111a4f3531b0364ad6669c07663667338654725453554d0d161L40,L41 -- they were using an executor but now a threadpool, which explains why i'm seeing two threads.. best guess so far..
[06:34:53] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[06:35:25] *** Quits: natewrench123456 (~josh@cpe-72-228-153-194.buffalo.res.rr.com) (Quit: Quit)
[06:35:45] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:36:31] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[06:37:28] *** Joins: lockywolf (~lockywolf@2a03:6000:6f63:638::177)
[06:38:27] *** Quits: akk (~akk@174-28-122-47.albq.qwest.net) (Quit: +++)
[06:38:43] *** Joins: millido (~millido@84.210.150.128)
[06:40:36] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:1c82:4428:8d53:68b9) (Quit: Leaving)
[06:40:40] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[06:41:19] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:42:12] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[06:42:54] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[06:44:41] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[06:45:40] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:8209:4ec3:3138:e3fd)
[06:47:10] *** Joins: jonthesnow (~xizhendu@36.112.179.225)
[06:47:50] *** Quits: Strom (~strom@fedora/strom) ()
[06:48:10] *** Quits: lockywolf (~lockywolf@2a03:6000:6f63:638::177) (Quit: ZNC 1.8.2 - https://znc.in)
[06:48:27] *** Joins: lockywolf (~lockywolf@2a03:6000:6f63:638::177)
[06:48:55] *** Quits: XV8 (~XV8@2601:5cb:c001:50:3d6e:cfa4:63ac:b4be) (Quit: Textual IRC Client: www.textualapp.com)
[06:49:18] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[06:49:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:49:27] *** Joins: Strom (strom@fedora/strom)
[06:49:33] *** Quits: Mortician (~Mortician@cpe-75-83-83-8.socal.res.rr.com) (Quit: Leaving)
[06:51:17] *** Joins: XV8 (~XV8@2601:5cb:c001:50:d40f:2d13:1de:ebb1)
[06:52:16] *** Joins: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com)
[06:53:07] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[06:53:51] *** Quits: travaldo (~travaldo@159.203.88.148) (Quit: travaldo)
[06:54:24] *** Joins: sydbarret (~anton@static-186-121-195-169.acelerate.net)
[06:54:27] *** Parts: sydbarret (~anton@static-186-121-195-169.acelerate.net) ()
[06:54:42] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:58:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[07:01:15] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:8209:4ec3:3138:e3fd) (Quit: Leaving)
[07:05:10] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:05:20] *** Quits: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com) (Quit: Leaving)
[07:05:37] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:06:54] *** Joins: yac (~user@user/yac)
[07:07:26] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[07:07:41] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:31cc:3ecd:4ed4:f741)
[07:07:46] *** Joins: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net)
[07:08:11] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[07:14:34] *** Quits: smoke (~smoke@user/smoke) (Quit: Leaving)
[07:14:42] *** Quits: moog (~moog@107.126.53.61) (Remote host closed the connection)
[07:16:20] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[07:16:36] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:31cc:3ecd:4ed4:f741) (Quit: Leaving)
[07:17:41] *** Joins: adeliktas0 (~adeliktas@i59F4D5BD.versanet.de)
[07:17:56] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:17:56] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:17:56] *** finn_elija is now known as FinnElija
[07:19:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[07:19:17] *** Quits: adeliktas (~adeliktas@i59F4D5C9.versanet.de) (Ping timeout: 240 seconds)
[07:19:17] *** adeliktas0 is now known as adeliktas
[07:23:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[07:24:04] *** Joins: Xano (~Xano@2a00:23c4:4204:700:4012:2e77:506e:f553)
[07:24:52] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:25:37] *** Joins: buzzard (~quassel@172.93.207.125)
[07:25:53] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:87a8:b149:43e0:4b9b)
[07:25:55] *** Joins: Naan (~naan@user/naan)
[07:28:17] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: Hay te huacho!)
[07:29:23] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:87a8:b149:43e0:4b9b) (Client Quit)
[07:29:25] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:29:46] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[07:31:17] *** Quits: saunders (~nicholas@172.103.152.184) (Ping timeout: 240 seconds)
[07:31:25] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[07:33:16] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::30) (Ping timeout: 245 seconds)
[07:33:45] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Quit: Leaving)
[07:34:14] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[07:35:05] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:87a8:b149:43e0:4b9b)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:05] *** Joins: bytehackr (~Sandipan@43.252.250.96)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:36:56] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:37:01] *** Joins: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net)
[07:37:19] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:87a8:b149:43e0:4b9b) (Client Quit)
[07:37:39] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[07:40:19] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:87a8:b149:43e0:4b9b)
[07:40:50] *** Quits: buzzard (~quassel@172.93.207.125) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[07:42:32] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:87a8:b149:43e0:4b9b) (Client Quit)
[07:45:57] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 240 seconds)
[07:46:03] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[07:47:22] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:126d:b590:1ce3:a5b6)
[07:48:19] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:48:37] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[07:49:13] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[07:49:30] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[07:49:36] *** Joins: OPK (~OPK@user/opk)
[07:53:19] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[07:53:46] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[07:53:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[07:54:07] *** Joins: ElPresidente (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net)
[07:56:11] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:56:19] *** Joins: fikran (~fikran@user/fikran)
[08:00:35] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:01:35] *** Joins: llh (~llh@user/llh)
[08:02:45] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Quit: ZNC - https://znc.in)
[08:03:36] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:4c19:361f:9d25:1a07)
[08:04:46] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:05:23] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[08:05:33] <kantlivelong> why would python3 create a python2 virtualenv?
[08:06:46] <InPhase> kantlivelong: Most likely because you called python2 and thought you called python3?
[08:07:20] <kantlivelong> InPhase: i wish it was that...
[08:07:33] <kantlivelong> $ python3 -m virtualenv test
[08:07:33] <kantlivelong> Running virtualenv with interpreter /usr/bin/python2
[08:07:49] <InPhase> And what does /usr/bin/python2 --version   show?
[08:08:06] <InPhase> I mean, what does python3 --version   show?
[08:08:17] *** jaamro is now known as ormaaj
[08:08:26] <kantlivelong> Python 3.7.3 with abs path or just by name
[08:09:08] <kantlivelong> i am very confused...
[08:09:39] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:09:43] <InPhase> Have you tried:  python3 -m venv test
[08:10:31] <kantlivelong> InPhase: i have. in that case it seems to be using py3 however the system im running it on does not have some deps for that for whatever reason and it's not something i can change easily
[08:10:57] <kantlivelong> ah. python3 -m virtualenv --python=python3 test seemed to work
[08:10:58] *** Quits: Forsaken87 (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[08:12:15] *** Joins: cdown_ (~cdown@137.220.72.66)
[08:12:36] <SnoopJ> A glance at the virtualenv docs suggests the default should be the invoking Python, so I wonder what's making yours go against that grain
[08:13:14] <SnoopJ> this kind of complexity is I think why I usually avoid virtualenv when everything I really want to mess with can be found in venv
[08:13:15] <kantlivelong> default py on the sys is py2 though would think calling w/ py3 would use that...
[08:13:41] <InPhase> Perhaps the system has some very old or corrupted virtualenv installed.
[08:14:07] <SnoopJ> Or virtualenv is just really complicated to reason about and has weird 'failure' modes
[08:14:15] <InPhase> :)
[08:14:27] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73)
[08:14:44] <SnoopJ> It seems like pretty decent tooling, I just don't want to operate a forklift when a hand-cart will do :)
[08:14:48] <kantlivelong> yeah something odd. its a fresh install of a distro thats on roughly 100k machines
[08:15:00] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:15:02] <kantlivelong> build on raspbian i believe
[08:15:10] *** Joins: cdown__ (~cdown@188.214.11.14)
[08:15:20] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[08:15:53] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 256 seconds)
[08:15:56] *** cdown__ is now known as cdown
[08:17:18] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[08:18:09] *** Quits: cdown_ (~cdown@137.220.72.66) (Ping timeout: 256 seconds)
[08:18:23] *** Joins: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net)
[08:18:46] <afidegnum> hi, can you please assist in answering this question? https://stackoverflow.com/q/70527545/5713751
[08:19:42] *** Quits: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 260 seconds)
[08:20:18] *** Joins: stockholm (~Andreas@p200300d2c704c500c416904ec59fe036.dip0.t-ipconnect.de)
[08:21:25] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[08:21:43] <SnoopJ> afidegnum, the question BrokenBenchmark asked on that post 4 minutes ago is just as applicable in here. We can't help you with the Python code you're referring to without seeing it.
[08:22:32] <SnoopJ> oh, I see, there's some buried at the bottom of that long textbox. ick.
[08:23:05] <SnoopJ> it does look incomplete though, a http://sscce.org/ would be helpful to this question
[08:24:15] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[08:25:24] <afidegnum> SnoopJ: I just modified that
[08:26:27] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[08:26:33] *** Joins: sreve_ (~quassel@p4ff44d6f.dip0.t-ipconnect.de)
[08:26:44] *** Quits: sreve (~quassel@p4ff44d67.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[08:27:03] *** Quits: trace987 (~trace@ip5b42963a.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[08:28:49] <SnoopJ> afidegnum, the line `template_tags(c)` is not doing anything with the return value of that call. Presumably you meant to integrate that into the tag_tree being built up beyond just the first level of recursion.
[08:29:31] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[08:29:39] *** Joins: trace987 (~trace@ip5b42963a.dynamic.kabel-deutschland.de)
[08:30:02] <SnoopJ> although it's sort of hard to tell because the expected/real output and the tree you provided do not appear particularly related to each other
[08:30:11] *** Quits: pyeveryt_ (~pyeveryth@64-18-153-56.starry-inc.net) (Remote host closed the connection)
[08:30:26] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:31:03] <afidegnum> SnoopJ: trying to add template_tag(c) goes out of scope,
[08:31:24] <SnoopJ> I don't know what that means
[08:33:03] <afidegnum> my attempt to pass template_tags(c) to tag_tree, resulted in an error, or None
[08:33:15] *** Quits: trace987 (~trace@ip5b42963a.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[08:33:26] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[08:33:27] <SnoopJ> tag_tree is a string, I don't know what it means to pass something to it
[08:33:49] <SnoopJ> but what you have here is a recursive function that calls itself a whole bunch of times, then throws away the result of all that work and returns tag_tree
[08:34:06] *** Quits: Forsaken87 (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[08:34:34] *** Joins: yaalon (~yaalon@2806:102e:d:20d6:d82f:11f:9f2c:c69e)
[08:34:56] <SnoopJ> in other words, you could delete the for loop and get the same output
[08:35:34] <afidegnum> I did that also and it ended me in infinite recursion error.
[08:35:53] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73)
[08:35:55] <SnoopJ> I can't see your code from the past, either.
[08:36:00] <afidegnum> the loop is supposed to pick d['children'] being a list of immediate children
[08:36:28] <SnoopJ> But it doesn't really matter what other versions did or didn't do, *this* version that I am looking at is failing because the loop does not have any effect on the program's output
[08:37:17] <SnoopJ> and other errors you encountered won't change that, but if you want help with those, you can form a separate question about them
[08:37:28] <SnoopJ> preferably one with its own SSCCE
[08:39:02] *** Joins: bluedust (~bluedust@117.207.233.49)
[08:39:14] *** Quits: Forsaken87 (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73) (Client Quit)
[08:40:57] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 240 seconds)
[08:41:00] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73)
[08:42:22] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[08:44:13] *** Joins: nuh^ (~nuh@207.5.54.6)
[08:45:24] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[08:47:03] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[08:52:31] *** Joins: julia (~quassel@user/julia)
[08:55:05] *** Quits: stockholm (~Andreas@p200300d2c704c500c416904ec59fe036.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[08:56:05] *** Joins: MarkWatson[m] (~markwatso@2001:470:69fc:105::1:5be8)
[08:58:29] *** Quits: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[08:59:15] *** Quits: yaalon (~yaalon@2806:102e:d:20d6:d82f:11f:9f2c:c69e) ()
[09:00:09] *** Joins: esenegoid (~diogenese@diogenese.velotech.net)
[09:00:13] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[09:00:37] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[09:00:57] *** Quits: Xano (~Xano@2a00:23c4:4204:700:4012:2e77:506e:f553) (Ping timeout: 240 seconds)
[09:01:05] *** esenegoid is now known as diogenese
[09:01:23] *** Quits: oafish (~oafish@2a05:f480:2000:1325::) (Quit: disconnecting)
[09:03:06] *** Quits: Gerula (~Gerula@user/gerula) (Remote host closed the connection)
[09:03:16] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::30)
[09:03:30] *** Joins: Gerula (~Gerula@user/gerula)
[09:05:01] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:06:48] *** Quits: nomic (~nomic@185.198.243.161) (Quit: Leaving)
[09:09:53] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[09:11:00] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:13:17] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 240 seconds)
[09:15:25] *** Joins: analoq (~yashi@user/dies)
[09:15:49] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:19:57] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:19:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[09:20:56] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:21:08] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b1d4-3f07-bb3f-aa7e.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[09:22:44] *** Quits: drupin (uid7837@id-7837.uxbridge.irccloud.com) ()
[09:24:14] *** Quits: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (Quit: jarthur)
[09:24:43] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[09:25:15] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:29:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[09:29:25] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[09:33:02] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:a1d2:a2a5:b27e:8986)
[09:41:28] *** Quits: lockywolf (~lockywolf@2a03:6000:6f63:638::177) (Quit: ZNC 1.8.2 - https://znc.in)
[09:42:32] *** Joins: lockywolf (~lockywolf@2a03:6000:6f63:638::177)
[09:42:32] *** Joins: aakashi2001 (~aakashi20@103.61.255.19)
[09:42:32] *** Quits: aakashi2001 (~aakashi20@103.61.255.19) (Changing host)
[09:42:32] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[09:43:17] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[09:43:32] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Remote host closed the connection)
[09:43:34] *** Quits: Themis3000 (~Thunderbi@user/themis3000) (Quit: Themis3000)
[09:43:58] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[09:44:52] *** Joins: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net)
[09:46:17] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Read error: Connection reset by peer)
[09:53:19] *** Quits: NoelFlantier3 (~Hubert@static.238.157.9.5.clients.your-server.de) (Read error: Connection reset by peer)
[09:53:40] *** Joins: NoelFlantier3 (~Hubert@static.238.157.9.5.clients.your-server.de)
[09:53:41] <afidegnum> what's the best way to write python's ternary operator? this doesn't seems to work,  d_attr = d['attrib'] if not "null"
[09:54:02] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[09:54:27] <phy1729> you need an else
[09:54:56] <phy1729> or are you trying to assign a boolean?
[09:55:34] <afidegnum> no,
[09:55:52] <afidegnum> I wanted to discard the "null" value
[09:56:03] <phy1729> and assign what in place of it?
[09:56:13] *** Joins: Omen (~Omen@2600:1702:2e30:1a40:8511:a2a3:f354:5a5e)
[09:56:20] <afidegnum> an empty string
[09:56:37] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-6d8c-7f84-473d-ccbb.res6.spectrum.com)
[09:56:57] <phy1729> d_attr = '' if d['attrib'] == 'null' else d['attrib']
[09:57:10] <afidegnum> thanks,
[09:58:13] *** Parts: Omen (~Omen@2600:1702:2e30:1a40:8511:a2a3:f354:5a5e) ()
[10:00:28] <afidegnum> strangely, json.loads returns an error, it's having a hard time parsing, the string, JSONDecodeError: Expecting property name enclosed in double quotes: line 1 column 2 (char 1)
[10:00:51] <phy1729> JSON requires double quotes not single quotes
[10:01:05] <phy1729> print output is not JSON
[10:01:38] *** Joins: ensyde (~Omen@2600:1702:2e30:1a40:8511:a2a3:f354:5a5e)
[10:01:57] *** Quits: thurs80601421053 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Ping timeout: 240 seconds)
[10:01:58] <afidegnum> here is the output js = {\"charset\": \"UTF-8\"}
[10:02:10] <afidegnum> i wanted to encode
[10:02:18] <afidegnum> loads
[10:02:25] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:126d:b590:1ce3:a5b6) (Quit: Leaving)
[10:03:33] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[10:03:40] <afidegnum> they are dynamic values, how do i parse it? or convert it to dictionary
[10:03:41] <afidegnum> ?
[10:04:51] *** Quits: lockywolf (~lockywolf@2a03:6000:6f63:638::177) (Quit: ZNC 1.8.2 - https://znc.in)
[10:05:10] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:05:40] *** Joins: fikran (~fikran@user/fikran)
[10:05:55] *** Joins: lockywolf (~lockywolf@2a03:6000:6f63:638::177)
[10:06:44] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:6ceb:a748:1495:958a)
[10:07:29] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[10:07:31] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 256 seconds)
[10:08:56] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[10:08:59] *** Joins: mIk3_09 (~Thunderbi@user/mik3-08/x-2852566)
[10:09:06] <afidegnum> how do i unescape the string to be able to load to json?
[10:09:47] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:10:08] <supakeen> You can start by pasting code that actually works and shows the problem more clearly.
[10:10:10] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[10:10:44] *** Quits: arjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[10:10:57] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Ping timeout: 240 seconds)
[10:10:57] *** mIk3_09 is now known as mIk3_08
[10:11:02] <supakeen> Alternatively code that doesn't work but is actual code you're using, what you just showed isn't valid Python and it doesn't show how you got it :)
[10:12:20] *** Joins: trace987 (~trace@ip5b42963a.dynamic.kabel-deutschland.de)
[10:14:02] *** Joins: stockholm (~Andreas@p200300d2c704c500c416904ec59fe036.dip0.t-ipconnect.de)
[10:15:15] <afidegnum> i think the issue is with the escape charachter I need to unescape it,
[10:15:28] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:18:39] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[10:19:25] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[10:20:02] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:4c19:361f:9d25:1a07) (Quit: Client closed)
[10:21:09] *** Joins: carl--- (~carl-@185.103.188.130)
[10:23:20] *** Joins: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[10:24:14] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[10:24:31] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:24:38] *** Quits: pyevery__ (~pyeveryth@64-18-153-56.starry-inc.net) (Read error: Connection reset by peer)
[10:25:37] *** Quits: carl--- (~carl-@185.103.188.130) (Ping timeout: 240 seconds)
[10:25:41] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:26:03] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-6d8c-7f84-473d-ccbb.res6.spectrum.com) (Quit: jarthur)
[10:28:49] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[10:30:58] *** Joins: onichomp (~onichomp@2806:264:4404:801a:989b:f003:8652:2800)
[10:31:14] *** Quits: miique (~miique@181.46.139.166) (Read error: Connection reset by peer)
[10:31:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[10:34:35] *** Quits: oatmealraisin (~ryan@2603-7000-4000-7c46-0000-0000-0000-16d9.res6.spectrum.com) (Quit: WeeChat 3.4)
[10:34:39] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-ac49-a6fb-bfa4-621c.res6.spectrum.com)
[10:35:00] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[10:35:38] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:36:57] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[10:37:32] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:57e1:17b0:eed0:83e6)
[10:39:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[10:45:57] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Ping timeout: 240 seconds)
[10:47:10] *** Quits: frost (~frost@user/frost) (Quit: Ping timeout (120 seconds))
[10:47:20] <afidegnum> trying to string escape also didn't work out, https://bpa.st/AWXQ
[10:48:13] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:48:42] <afidegnum> i noticed the string is double-escaped, hence json not able to encode it
[10:50:59] *** Joins: parv (~quass@user/parv)
[10:52:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[10:53:08] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[10:54:46] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:54:48] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (Quit: Connection closed for inactivity)
[10:54:56] *** Joins: gusto (~Augustus@109.255.100.54)
[10:56:11] *** Quits: pvergain (~Thunderbi@2a01:e0a:223:690:57e1:17b0:eed0:83e6) (Quit: pvergain)
[10:58:13] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:58:36] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:4a2:85fe:edff:73e) (Read error: Connection reset by peer)
[10:59:02] *** Joins: seednode (~seednode@user/seednode)
[10:59:07] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[11:01:51] *** Joins: dreamon (~dreamon@ppp-88-217-76-15.dynamic.mnet-online.de)
[11:13:20] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:15:38] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:a580:8010:7176:ab10)
[11:17:47] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:18:12] *** Joins: rendar (~rendar@user/rendar)
[11:18:49] *** Joins: mole (~mole@2001:b07:6469:43c7:c4c0:268:bc5:bd48)
[11:19:34] *** Joins: mrwick (~mrwick@user/mrwick)
[11:19:50] *** Parts: mole (~mole@2001:b07:6469:43c7:c4c0:268:bc5:bd48) ()
[11:19:57] *** Quits: lockywolf (~lockywolf@2a03:6000:6f63:638::177) (Ping timeout: 240 seconds)
[11:20:17] *** Quits: parv (~quass@user/parv) (Ping timeout: 240 seconds)
[11:21:06] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:21:18] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[11:21:40] *** Joins: upsala (~zcb@185.209.196.169)
[11:21:46] *** Joins: rsx (~dummy@ppp-188-174-149-31.dynamic.mnet-online.de)
[11:22:43] *** Quits: ArtfulDodger (~ArtfulDod@183.185.116.78.rev.sfr.net) (Ping timeout: 250 seconds)
[11:22:55] *** Quits: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se) (Read error: Connection reset by peer)
[11:23:11] *** Joins: lockywolf (~lockywolf@2a03:6000:6f63:638::177)
[11:24:51] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Read error: Connection reset by peer)
[11:24:58] <Feuermagier> What does this do?: re.sub('[./\\\\]+|[^\x21-\x7E]+', '*', filename.replace(' ', '_'))
[11:25:45] <supakeen> Tries to sanitize a filename by removing all non-ascii characters, dots, backslashes, and forward slashes
[11:26:04] <supakeen> But first it replaces all spaces with _.
[11:26:18] <Feuermagier> supakeen, ah, thx
[11:26:44] <Feuermagier> (I wrote this, but I no longer had the slightest idea of what I actually did there...)
[11:26:50] <supakeen> And not removing but replacing them with a *.
[11:27:06] *** Joins: gitargy (~gitargy@2603-8081-7602-dc00-b9b9-f38c-0102-c988.res6.spectrum.com)
[11:27:16] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Remote host closed the connection)
[11:27:25] <Feuermagier> yeah, I think this was due to a bug in pathlib not allowing "üöä" in filenames
[11:27:31] <Feuermagier> but that seems fixed now
[11:27:47] <supakeen> It's a sane approach to only allow lowest common denominator stuff in filenames.
[11:27:54] <supakeen> You never know which system they end up on.
[11:28:01] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[11:28:59] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca) (Ping timeout: 256 seconds)
[11:29:11] <Feuermagier> supakeen, well, actually it's the filesystem: https://en.wikipedia.org/wiki/Filename#Comparison_of_filename_limitations
[11:29:20] <deniska> The amount of stuff which still breaks when ran from '/home/denis/Рабочий Стол/' is too damn high
[11:29:30] <Feuermagier> hehe
[11:29:41] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:29:51] <deniska> and the space is typically the reason, not the non-ascii characters
[11:29:52] <Feuermagier> that's why I'm gonna deploy my stuff with docker
[11:30:10] <Feuermagier> deniska, well, that's why you replace space first
[11:30:32] <deniska> docker, in which images never include locales out of the box, and more stuff breaks due to that :P
[11:30:59] <Feuermagier> well, but then I can claim I am no longer at fault
[11:31:45] *** Joins: grooverman_ (~grooverma@177.102.119.40)
[11:32:17] *** Joins: NeoCore (~neocore@195.200.221.172)
[11:33:06] *** Joins: Nact (~l@host-85-27-127-179.dynamic.voo.be)
[11:33:57] *** Quits: lockywolf (~lockywolf@2a03:6000:6f63:638::177) (Ping timeout: 240 seconds)
[11:35:17] *** Quits: onichomp (~onichomp@2806:264:4404:801a:989b:f003:8652:2800) (Read error: Connection reset by peer)
[11:35:21] *** Quits: grooverman (~grooverma@177.102.117.95) (Ping timeout: 256 seconds)
[11:35:32] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:35:57] *** Joins: onichomp (~onichomp@2806:264:4404:801a:989b:f003:8652:2800)
[11:36:20] *** Joins: callen92 (~callen92@172.92.89.49)
[11:37:47] *** Joins: gitargy_ (~gitargy@072-182-019-212.res.spectrum.com)
[11:39:14] *** Quits: minip (~minip@user/minip) (Remote host closed the connection)
[11:39:18] *** Joins: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[11:39:57] *** Quits: gitargy (~gitargy@2603-8081-7602-dc00-b9b9-f38c-0102-c988.res6.spectrum.com) (Ping timeout: 240 seconds)
[11:40:27] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:40:38] <Swayze> carmack tweeting about python
[11:40:42] <Swayze> https://twitter.com/ID_AA_Carmack/status/1476294133975240712
[11:40:44] <Swayze> opinions?
[11:40:56] <Swayze> i think |mod| seems bettter than negatives
[11:41:25] <supakeen> There's always been a lot of poohah about remainder vs modulo.
[11:41:33] <supakeen> Even entire papers written about it.
[11:42:45] <supakeen> There's like 5 ways of doing almost the same, only 2 are popular ;)
[11:44:34] *** Joins: mIk3_09 (~Thunderbi@user/mik3-08/x-2852566)
[11:44:44] *** Joins: lockywolf (~lockywolf@public.lockywolf.net)
[11:45:08] *** Joins: pycode1 (~pycode3@2001:b07:5d28:551:b330:32dc:e2bc:4ce0)
[11:46:01] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:46:14] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[11:46:54] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Ping timeout: 260 seconds)
[11:46:55] *** mIk3_09 is now known as mIk3_08
[11:46:56] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[11:48:02] *** Quits: jonthesnow (~xizhendu@36.112.179.225) (Ping timeout: 240 seconds)
[11:48:25] *** Quits: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Quit: Leaving)
[11:49:42] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[11:50:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[11:50:22] *** Quits: lockywolf (~lockywolf@public.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:50:36] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:50:59] <deniska> Swayze: positive remainder is much more useful practically speaking
[11:51:23] *** Joins: lockywolf (~lockywolf@46.23.90.177)
[11:51:56] *** Quits: foul_owl (~kerry@212.102.47.57) (Ping timeout: 252 seconds)
[11:54:55] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:56:54] *** Joins: foul_owl (~kerry@212.102.47.57)
[11:57:03] *** Quits: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com) (Quit: jarthur)
[11:59:25] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[12:00:40] *** Joins: KvL (~KvL@user/KvL)
[12:00:49] *** Quits: lockywolf (~lockywolf@46.23.90.177) (Remote host closed the connection)
[12:00:49] *** Joins: tsing (~tsing@121.225.25.202)
[12:01:55] *** Joins: lockywolf (~lockywolf@46.23.90.177)
[12:05:37] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:06:47] *** Quits: CodeGeek (~codegeek@about/java/CodeGeek) (Ping timeout: 252 seconds)
[12:07:23] *** Joins: weedmic (~weedmic@5.102.235.240)
[12:07:30] *** Quits: afidegnum (~user@102.176.94.57) (Ping timeout: 268 seconds)
[12:08:47] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 256 seconds)
[12:08:59] *** Joins: CodeGeek (~codegeek@about/java/CodeGeek)
[12:09:47] *** Quits: CodeGeek (~codegeek@about/java/CodeGeek) (Max SendQ exceeded)
[12:09:49] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[12:09:58] *** Joins: bluedust_ (~bluedust@89.238.143.232)
[12:10:02] *** Joins: luigibu1 (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net)
[12:10:27] *** Quits: onichomp (~onichomp@2806:264:4404:801a:989b:f003:8652:2800) (Quit: onichomp)
[12:10:33] *** Joins: palasso (~palasso@user/palasso)
[12:11:45] *** Joins: ExeciN (~ExeciN@user/nicexe)
[12:11:45] *** Quits: lethu (~lethu@user/lethu) (Remote host closed the connection)
[12:12:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[12:12:37] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[12:13:30] *** Quits: bluedust (~bluedust@117.207.233.49) (Ping timeout: 260 seconds)
[12:13:34] *** Quits: bluedust_ (~bluedust@89.238.143.232) (Remote host closed the connection)
[12:13:39] *** Quits: weedmic (~weedmic@5.102.235.240) (Quit: Konversation terminated!)
[12:15:00] *** Joins: fikran (~fikran@user/fikran)
[12:15:34] *** Joins: ThanatosJ (~Thanatos@102.89.3.7)
[12:16:01] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[12:16:42] *** Joins: bauripalash (~bauripala@2401:4900:3822:6207:1:2:1473:e2e2)
[12:17:36] *** Quits: callen92 (~callen92@172.92.89.49) (Remote host closed the connection)
[12:18:16] *** Quits: bauripalash (~bauripala@2401:4900:3822:6207:1:2:1473:e2e2) (Client Quit)
[12:18:18] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Ping timeout: 276 seconds)
[12:18:46] *** Quits: nuh^ (~nuh@207.5.54.6) (Remote host closed the connection)
[12:18:47] *** Joins: VaniaPy (~VaniaPy@46.12.11.60.dsl.dyn.forthnet.gr)
[12:18:55] *** Quits: tsing (~tsing@121.225.25.202) (Quit: Client closed)
[12:20:04] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:20:13] *** Joins: tsing (~tsing@121.225.25.202)
[12:20:32] *** Quits: apteryx (~maxim@dsl-141-140.b2b2c.ca) (Ping timeout: 240 seconds)
[12:21:33] *** Joins: lethu (~lethu@user/lethu)
[12:21:39] <Swayze> deniska: agreed
[12:22:17] *** Quits: luigibu1 (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net) (Ping timeout: 268 seconds)
[12:23:36] *** Joins: ApostleInTriumph (~ApostleIn@ucopia-ext.saclay.inria.fr)
[12:26:07] *** Joins: netpipe (~netpipe@user/netpipe)
[12:28:48] *** Joins: afidegnum (~user@102.176.94.201)
[12:29:06] *** Quits: lethu (~lethu@user/lethu) (Remote host closed the connection)
[12:29:34] <afidegnum> what am i not doing right ? {k: v for (k, v) in dx.items() if dx} and I still have an error of AttributeError: 'NoneType' object has  no attribute 'items'
[12:29:37] *** Quits: ApostleInTriumph (~ApostleIn@ucopia-ext.saclay.inria.fr) (Ping timeout: 256 seconds)
[12:29:41] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[12:31:19] <deniska> afidegnum: the error means that `dx` happened to be None
[12:31:30] *** Quits: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de) (Remote host closed the connection)
[12:31:36] *** Quits: meti (~meti@user/meti) (Quit: ZNC - http://znc.in)
[12:31:44] *** Joins: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de)
[12:32:08] *** Quits: tsing (~tsing@121.225.25.202) (Quit: Client closed)
[12:32:36] <afidegnum> deniska: I wanted to skip it if None
[12:33:17] *** Joins: meti (~meti@user/meti)
[12:33:18] *** Joins: slav0nic (slav0nic@python.su)
[12:33:26] *** Joins: madeinhe_ (~madeinhea@36.112.79.82)
[12:33:33] <afidegnum> what should i use instead ?
[12:33:35] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[12:34:14] *** Joins: apteryx (~maxim@dsl-10-129-97.b2b2c.ca)
[12:34:15] *** Joins: kosh (~kosh@user/kosh)
[12:35:05] <deniska> afidegnum: you can put the comprehension under an if statement
[12:35:22] *** Joins: arinov (~arinov@213.194.126.155)
[12:35:39] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[12:35:49] *** Joins: tsing (~tsing@121.225.25.202)
[12:35:59] *** Quits: cthulchu (~Cthulchu@184-090-172-137.res.spectrum.com) (Ping timeout: 256 seconds)
[12:36:49] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:36:54] *** Parts: madeinhe_ (~madeinhea@36.112.79.82) ()
[12:37:21] *** Quits: tsing (~tsing@121.225.25.202) (Client Quit)
[12:37:32] <sudomann_> Cryptography  docs state its compatible with python 3.6 or greater. I have successfully run `pip install cryptography` on a system with python 3.7 installed. Why is it that poetry (my python package management tool) spits out an error message about an unsupported wheel? https://bpa.st/KCWQ#1L118
[12:37:45] <Repiphany> Or a try: except
[12:37:50] <sudomann_> Wrong line linked, SOrry: https://bpa.st/KCWQ#1L119
[12:37:58] *** Joins: the_lanetly_052_ (~the_lanet@185.30.88.216)
[12:38:01] <supakeen> sudomann_: there might not be a pre built wheel for your environment.
[12:38:35] *** Joins: lethu (~lethu@user/lethu)
[12:38:44] <supakeen> Which it isn't for some reason it's selecting a cp3.6 wheel for a 3.7 install.
[12:38:48] *** Joins: raxor2k (~raxor2k@78.158.236.72)
[12:38:53] *** Quits: ckdCreations (~ckdCreati@147.55.133.140) (Read error: Connection reset by peer)
[12:39:01] *** Joins: LordVan (~lordvan@gentoo/developer/lordvan)
[12:39:19] *** Joins: ckdCreations (~ckdCreati@2607:fb90:8346:bdfd:400d:4e86:1eca:ba46)
[12:39:54] <sudomann_> That is within docker container. I spawned a separate container with the same image, and ran `pip install cryptography` no problem. If you see here, there's no wheel with "cp37" in the name: https://pypi.org/project/cryptography/#files
[12:40:08] *** Joins: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net)
[12:40:15] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[12:40:23] *** Joins: bluedust (~bluedust@89.238.143.232)
[12:40:45] <supakeen> For some reason poetry is selecting the wrong wheel.
[12:40:47] *** Quits: the_lanetly_052 (~the_lanet@185.30.91.255) (Ping timeout: 268 seconds)
[12:40:55] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[12:41:08] <sudomann_> Can pip reveal which wheel it has installed?
[12:41:25] <supakeen> If you do a reinstall with pip -v it'll tell you which was used.
[12:41:39] <supakeen> It might also have elected to build from source instead (which is what it should do if it can't find a wheel).
[12:42:18] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[12:42:21] *** Joins: mIk3_09 (~Thunderbi@user/mik3-08/x-2852566)
[12:42:36] *** Joins: tsing (~tsing@121.225.25.202)
[12:42:40] *** Parts: tsing (~tsing@121.225.25.202) ()
[12:44:16] *** Joins: bluedust_ (~bluedust@117.207.233.49)
[12:44:19] <sudomann_> The output is disgustingly long wtf
[12:44:31] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:44:40] *** mIk3_09 is now known as mIk3_08
[12:44:40] <supakeen> well yes it'll list everythign it tried and selected
[12:45:01] <supakeen> i haven't remembered pip in a while it might just list it in its normal output as well
[12:45:06] *** Joins: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr)
[12:45:27] *** Parts: dmcc (~dmcc@88.97.3.48) ()
[12:45:36] <supakeen> Yea, it says what it's downloading.
[12:46:00] <supakeen> Ok, so the cp36 apparently means at *least* 3.6, it selects that wheel for me as well.
[12:46:12] <supakeen> Then the underlying cause is deeper than what I know of wheels.
[12:46:27] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[12:47:19] *** Quits: inomoz (~inomoz@85.26.165.50) (Ping timeout: 256 seconds)
[12:48:02] *** Quits: bluedust (~bluedust@89.238.143.232) (Ping timeout: 252 seconds)
[12:48:22] *** Quits: lethu (~lethu@user/lethu) (Remote host closed the connection)
[12:48:32] *** Quits: eroux (~eroux@102-65-85-177.ftth.web.africa) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:49:01] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[12:49:44] <sudomann_> I see that pip selected cryptography-35.0.0-cp36-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl
[12:50:11] <sudomann_> meanwhile poetry selected cryptography-35.0.0-cp36-abi3-manylinux_2_24_x86_64.whl
[12:50:29] <sudomann_> So someone earlier WAS right, poetry is picking the wrong one
[12:51:18] <sudomann_> I just dont understand whats different between the manylinux platforms that makes these tools evaluate differently :(
[12:51:22] *** Joins: eroux (~eroux@102-65-85-177.ftth.web.africa)
[12:52:50] *** Joins: roped (~lonely_@user/roped)
[12:53:29] *** Joins: lethu (~lethu@user/lethu)
[12:54:45] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[12:55:57] *** Joins: htb (~user@pool-173-48-184-153.bstnma.fios.verizon.net)
[12:56:24] *** Joins: agonhajdari (~textual@user/agonhajdari)
[12:58:32] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 240 seconds)
[12:59:30] *** Joins: slav0nic (slav0nic@python.su)
[13:00:27] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[13:01:11] *** Joins: inomoz (~inomoz@85.26.233.222)
[13:02:57] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[13:04:21] *** Quits: bluedust_ (~bluedust@117.207.233.49) (Remote host closed the connection)
[13:04:53] *** Quits: Jong (~Jong@2620:10d:c090:400::5:f0a6) (Quit: Textual IRC Client: www.textualapp.com)
[13:05:00] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:05:49] *** Joins: CodeGeek (~codegeek@about/java/CodeGeek)
[13:05:57] *** Joins: bluedust (~bluedust@117.207.233.49)
[13:06:18] *** Quits: NeilRG (~NeilRG@96-127-194-85.qc.cable.ebox.net) (Remote host closed the connection)
[13:06:24] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[13:08:03] *** Joins: legola (~legola@46.235.101.65)
[13:09:47] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[13:10:48] *** Joins: cosimone (~user@93-34-133-35.ip49.fastwebnet.it)
[13:11:41] *** Quits: CodeGeek (~codegeek@about/java/CodeGeek) (Ping timeout: 256 seconds)
[13:14:59] *** Quits: stockholm (~Andreas@p200300d2c704c500c416904ec59fe036.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[13:15:54] *** Joins: hyiltiz (~quassel@31.220.5.250)
[13:16:47] *** Joins: clarkk (~clarkk@host86-165-12-159.range86-165.btcentralplus.com)
[13:17:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[13:17:17] *** Quits: dreamon (~dreamon@ppp-88-217-76-15.dynamic.mnet-online.de) (Ping timeout: 240 seconds)
[13:18:29] *** Quits: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[13:20:17] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 240 seconds)
[13:20:24] *** Joins: sabrytos (~sabrytos@197.37.195.189)
[13:21:56] *** Joins: manti7 (~manti7@176.10.104.94)
[13:24:09] *** Quits: aphysically (~aphysical@user/aphysically) (Quit: aphysically)
[13:24:32] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:24:46] *** Joins: hyiltiz (~quassel@31.220.5.250)
[13:24:54] *** Joins: tsing64 (~tsing@121.225.25.202)
[13:26:25] *** Parts: tsing64 (~tsing@121.225.25.202) ()
[13:27:12] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[13:28:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[13:30:01] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:31:15] *** Joins: CodeGeek (~codegeek@about/java/CodeGeek)
[13:32:00] *** Joins: rolo (~rolo@80-62-117-218-mobile.dk.customer.tdc.net)
[13:32:03] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[13:32:09] *** Joins: Auron (~Auron956@user/auron)
[13:32:10] *** Joins: stockholm (~Andreas@p200300d2c704c500c416904ec59fe036.dip0.t-ipconnect.de)
[13:32:19] *** Quits: Lazenca (~lazenca@user/lazenca) (Remote host closed the connection)
[13:34:03] *** Joins: jinsun (~quassel@user/jinsun)
[13:34:19] *** Joins: Julian (~tos9@python/site-packages/Julian)
[13:34:58] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:35:20] *** Quits: CodeGeek (~codegeek@about/java/CodeGeek) (Max SendQ exceeded)
[13:37:11] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 256 seconds)
[13:39:13] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[13:41:08] *** Quits: inomoz (~inomoz@85.26.233.222) (Remote host closed the connection)
[13:41:22] *** Joins: CodeGeek (~codegeek@about/java/CodeGeek)
[13:42:14] *** Quits: CodeGeek (~codegeek@about/java/CodeGeek) (Max SendQ exceeded)
[13:43:30] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[13:44:50] *** Joins: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul)
[13:45:10] *** Quits: _moep_ (~moep@user/moep/x-3358975) (Read error: Connection reset by peer)
[13:45:43] *** Quits: rolo (~rolo@80-62-117-218-mobile.dk.customer.tdc.net) (Ping timeout: 250 seconds)
[13:46:15] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 256 seconds)
[13:46:37] *** Quits: wombawomba (~andre@h95-155-227-157.cust.a3fiber.se) (Ping timeout: 240 seconds)
[13:46:57] *** Quits: ensyde (~Omen@2600:1702:2e30:1a40:8511:a2a3:f354:5a5e) (Ping timeout: 240 seconds)
[13:47:01] *** Quits: nosoul (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 240 seconds)
[13:47:05] *** Joins: aakashi2001 (~aakashi20@103.61.255.19)
[13:47:05] *** Quits: aakashi2001 (~aakashi20@103.61.255.19) (Changing host)
[13:47:05] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[13:47:48] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[13:50:32] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 240 seconds)
[13:50:32] *** Joins: weedmic (~weedmic@5.102.235.240)
[13:52:03] *** Joins: rvalue (~rvalue@user/rvalue)
[13:52:27] *** Quits: clarkk (~clarkk@host86-165-12-159.range86-165.btcentralplus.com) (Quit: Leaving)
[13:55:11] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:55:16] *** Quits: haise01 (~haise01@user/haise01) (Quit: ZNC 1.8.2 - https://znc.in)
[13:56:13] *** Joins: haise01 (~haise01@user/haise01)
[13:56:42] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[13:57:25] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[13:57:55] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[13:57:56] *** Joins: bluedust_ (~bluedust@185.248.85.10)
[13:58:17] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[13:58:33] *** Quits: roped (~lonely_@user/roped) (Quit: Leaving)
[13:59:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[13:59:20] *** Quits: sabrytos (~sabrytos@197.37.195.189) (Read error: Connection reset by peer)
[13:59:25] *** Quits: haise01 (~haise01@user/haise01) (Remote host closed the connection)
[13:59:30] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[14:00:12] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Read error: Connection reset by peer)
[14:01:35] *** Quits: bluedust (~bluedust@117.207.233.49) (Ping timeout: 268 seconds)
[14:01:42] *** Joins: Klinda (~superleag@user/klinda)
[14:02:15] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[14:03:02] *** Joins: jonthesnow (~xizhendu@240e:305:7380:4300:22a3:ecb5:b567:7739)
[14:04:47] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[14:06:17] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[14:06:25] *** Joins: luva5 (~luva@45.141.152.36)
[14:07:13] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:47c5:424:7f27:e91c)
[14:07:34] *** Joins: dreamon (~dreamon@ppp-88-217-76-15.dynamic.mnet-online.de)
[14:07:37] *** Quits: luva (~luva@37.120.197.44) (Ping timeout: 240 seconds)
[14:07:37] *** luva5 is now known as luva
[14:09:24] *** Joins: Helle (~helle@45.83.235.185)
[14:09:48] *** Quits: netpipe (~netpipe@user/netpipe) (Quit: Client closed)
[14:10:36] *** Joins: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se)
[14:11:32] *** Joins: Enitin (~Enitin@82.102.22.84)
[14:13:41] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 245 seconds)
[14:15:30] *** Joins: vinitkme (~vinitkme@106.201.223.7)
[14:18:53] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[14:19:12] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[14:20:14] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[14:22:32] *** Quits: jim (~jim@about/linux/staff/jim) (Remote host closed the connection)
[14:22:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[14:24:21] *** Joins: fikran (~fikran@user/fikran)
[14:25:57] *** Quits: afidegnum (~user@102.176.94.201) (Ping timeout: 240 seconds)
[14:26:14] *** Quits: Echoz (~chris@user/echoz) (Ping timeout: 268 seconds)
[14:30:27] *** Joins: Echoz (~chris@user/echoz)
[14:32:06] *** Quits: vinitkme (~vinitkme@106.201.223.7) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:33:54] *** Joins: jim (~jim@about/linux/staff/jim)
[14:36:50] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:6dd5:67d6:1710:24ab)
[14:39:47] *** Joins: moldorcoder7_ (~moldorcod@37.120.143.28)
[14:40:47] *** Quits: moldorcoder7 (~moldorcod@37.120.143.28) (Ping timeout: 252 seconds)
[14:40:58] *** Joins: luva8 (~luva@146.70.62.244)
[14:41:00] *** Joins: clarkk (~clarkk@host86-165-12-159.range86-165.btcentralplus.com)
[14:42:36] *** Joins: Ischwitch (~Ingvix@user/ingvix)
[14:42:43] *** Quits: luva (~luva@45.141.152.36) (Ping timeout: 250 seconds)
[14:42:43] *** luva8 is now known as luva
[14:43:47] *** Quits: Ingvix (~Ingvix@user/ingvix) (Ping timeout: 250 seconds)
[14:43:48] *** Ischwitch is now known as Ingvix
[14:48:20] *** Joins: _moep_ (~moep@user/moep/x-3358975)
[14:48:59] *** Quits: ThanatosJ (~Thanatos@102.89.3.7) (Remote host closed the connection)
[14:49:20] *** Joins: ThanatosJ (~Thanatos@102.89.2.248)
[14:50:11] *** Quits: slisnake (~slisnake@82.102.25.13) (Read error: Connection reset by peer)
[14:51:49] *** Quits: kurfen (~kurfen@176.119.195.10) (Ping timeout: 250 seconds)
[14:53:44] *** Joins: squid_game (~squid_gam@h-98-128-168-226.NA.cust.bahnhof.se)
[14:53:51] *** Joins: kurfen (~kurfen@176.119.195.10)
[14:54:51] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 250 seconds)
[14:55:24] *** Joins: slisnake (~slisnake@82.102.25.12)
[14:55:25] *** Quits: lethu (~lethu@user/lethu) (Remote host closed the connection)
[14:55:35] *** Joins: Ad1Tech (~Ad1Tech@h104101.man.tk-internet.pl)
[14:56:24] *** Joins: Enitin (~Enitin@82.102.22.85)
[14:57:56] *** Joins: lethu (~lethu@user/lethu)
[14:58:04] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:58:30] *** Quits: upsala (~zcb@185.209.196.169) (Quit: WeeChat 3.4)
[14:58:47] *** Joins: bluedust (~bluedust@117.207.233.49)
[14:58:48] *** Joins: nomic (~nomic@185.198.243.161)
[14:59:46] *** Joins: arinov (~arinov@178.240.175.124)
[15:00:44] *** Quits: lethu (~lethu@user/lethu) (Remote host closed the connection)
[15:00:56] *** Quits: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se) (Remote host closed the connection)
[15:01:04] *** Quits: Wulf (~Wulf@user/wulf) (Quit: leaving)
[15:02:05] *** Joins: gjvc (~gjvc@29.68.246.35.bc.googleusercontent.com)
[15:02:13] *** Quits: bluedust_ (~bluedust@185.248.85.10) (Ping timeout: 250 seconds)
[15:02:29] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.4)
[15:02:35] *** Joins: stblaha (~stblaha@user/stblaha)
[15:02:54] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[15:03:31] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[15:03:44] *** Parts: stblaha (~stblaha@user/stblaha) ()
[15:04:43] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[15:04:48] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:07:32] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:6dd5:67d6:1710:24ab) (Quit: Konversation terminated!)
[15:07:37] *** Joins: jmd (~user@de.cellform.com)
[15:07:56] *** Quits: pepper (~pepper@user/pepper) (Quit: Leaving)
[15:08:01] <jmd> What is the difference between "this" and 'this' ?
[15:08:34] <ChrisWarrick> jmd: none (other than what you need to escape inside)
[15:08:42] *** Joins: pepper (~pepper@user/pepper)
[15:09:01] <jmd> Ahh.  So there is a distinction.
[15:09:22] <jmd> What might one need to escape?
[15:09:28] <ChrisWarrick> " and '
[15:09:33] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[15:09:47] <weedmic> and I recommend being consistent - like always use one or the  other
[15:10:33] *** Quits: eroux (~eroux@102-65-85-177.ftth.web.africa) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:11:02] *** Joins: lethu (~lethu@user/lethu)
[15:11:46] *** Quits: ThanatosJ (~Thanatos@102.89.2.248) (Ping timeout: 260 seconds)
[15:11:52] <raxor2k> what other alternatives than pydantic/BaseModel exists?
[15:12:23] *** Joins: someuser (~user@197.54.30.120)
[15:12:32] *** Quits: KvL (~KvL@user/KvL) (Quit: KvL)
[15:12:58] <grawity> jmd: the practical difference is only "hello \"world\"" vs 'hello "world"' – otherwise both behave the same way (e.g. both accept the same \-escapes, unlike some languages where '' is stricter)
[15:13:23] <jmd> Okay.  Thanks for the explanation.
[15:13:54] *** Joins: KvL (~KvL@user/KvL)
[15:15:07] *** Quits: led_belly (~led_belly@196.240.57.116) (Read error: Connection reset by peer)
[15:15:10] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:15:23] *** Joins: eroux (~eroux@102-65-85-177.ftth.web.africa)
[15:16:15] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[15:17:25] *** Quits: foul_owl (~kerry@212.102.47.57) (Ping timeout: 240 seconds)
[15:17:50] *** Quits: palasso (~palasso@user/palasso) (Quit: I am not a quitter!)
[15:18:09] *** Joins: palasso (~palasso@user/palasso)
[15:18:27] <lericson> i'd love a def bisect(L, i): return L[:i], L[i:]
[15:19:35] *** Joins: nomn (~nomn@user/nomn)
[15:19:45] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[15:19:55] *** Joins: anotheruser (~user@45.130.86.2)
[15:20:19] *** Quits: KvL (~KvL@user/KvL) (Ping timeout: 256 seconds)
[15:21:12] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[15:22:16] <TML> lericson: is there something preventing you from having one?
[15:22:33] <lericson> brevity
[15:22:57] *** Quits: someuser (~user@197.54.30.120) (Ping timeout: 240 seconds)
[15:23:17] *** Joins: led_belly (~led_belly@196.240.57.118)
[15:23:34] *** Joins: ThanatosJ (~Thanatos@102.89.3.208)
[15:23:56] *** Quits: raxor2k (~raxor2k@78.158.236.72) (Remote host closed the connection)
[15:24:01] *** Joins: Rum (~bourbon@user/rum)
[15:25:11] *** Quits: anotheruser (~user@45.130.86.2) (Ping timeout: 250 seconds)
[15:25:26] <nedbat> lericson: you just defined it. use it.
[15:25:53] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[15:25:59] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[15:26:43] *** Quits: theo (~theo@user/theo) (Quit: Ping timeout (120 seconds))
[15:26:58] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[15:27:05] *** Joins: theo (~theo@user/theo)
[15:27:33] *** Joins: KvL (~KvL@user/KvL)
[15:28:06] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[15:28:15] *** Quits: ThanatosJ (~Thanatos@102.89.3.208) (Ping timeout: 256 seconds)
[15:29:02] *** Joins: frost (~frost@user/frost)
[15:29:39] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:30:52] *** Joins: foul_owl (~kerry@94.140.8.106)
[15:31:02] <rakoon> Does anynone know why pytest prints ".E" (meaning 1st test success and 2nd error) even though the error happens in finalizng 1st tests fixture? It is confusing cause the 1st test hasnt finished yet :|
[15:31:25] *** Joins: ano (~ano@user/ano)
[15:31:35] <rakoon> I interpret the ".E" that the 1st test succedded and 2nd has error, or am i wrong?
[15:31:58] <nedbat> rakoon: what scope is your fixture using?
[15:32:04] <rakoon> function
[15:32:13] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 268 seconds)
[15:32:22] <nedbat> rakoon: that sounds a bit odd then.
[15:32:37] <nedbat> rakoon: you can use -v to get full test names instead of dots
[15:32:56] <rakoon> yeah, i have even a pdb on 2nd test in its first line to make sure that hasnt started
[15:33:03] <rakoon> ill try it thanks
[15:34:07] <rakoon> yeah it prints the same test twice: test_file.py::case1 PASSED and then test_file.py::case1 ERROR
[15:34:40] <rakoon> ok i think i get why
[15:35:09] <rakoon> the last line of test is assert and since that is true it prints succeed i guess and then in the finalization of the fixture the error happens
[15:35:27] <rakoon> I would expect it to print 1 time that this test errored out
[15:35:31] <rakoon> :/
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:14] <rakoon> i should use -vv by default otherwise i get confused with the dots
[15:36:21] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:10] *** Joins: willow (~willow@user/willow)
[15:37:13] *** Joins: ThanatosJ (~Thanatos@102.89.2.248)
[15:39:03] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[15:40:38] *** Joins: Wulf (~Wulf@user/wulf)
[15:43:28] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[15:45:05] *** Joins: nosklo (~nosklo@2804:14c:5b74:8196::9daf)
[15:45:15] *** Quits: Deknos (~someone@user/menace) (Quit: Deknos)
[15:45:23] *** Quits: eroux (~eroux@102-65-85-177.ftth.web.africa) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:47:01] *** Quits: Rum (~bourbon@user/rum) (Quit: WeeChat 3.4)
[15:48:47] *** Quits: stockholm (~Andreas@p200300d2c704c500c416904ec59fe036.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[15:48:52] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[15:48:58] *** Quits: Terexen (~terexen@user/terexen) (Remote host closed the connection)
[15:49:56] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[15:50:36] *** Quits: ThanatosJ (~Thanatos@102.89.2.248) (Ping timeout: 240 seconds)
[15:54:31] *** Joins: eroux (~eroux@102-65-85-177.ftth.web.africa)
[15:55:24] *** Joins: Xano (~Xano@2a00:23c4:4204:700:fc21:e40:8806:a711)
[15:57:18] <montpol> I have two cases where s = data[c[1], self.roi[0]: self.roi[2]] and s = data[self.roi[1]: self.roi[3], c[0]] but I would like to make them into one array to handle both cases i.e. s = data[c[1], self.roi[0]: self.roi[2], self.roi[1]: self.roi[3], c[0]]
[15:57:23] <montpol> but i am getting the error:
[15:57:31] <montpol> IndexError: too many indices for array: array is 2-dimensional, but 4 were indexed
[15:57:40] <montpol> Anyone know how I can solve this error?
[15:58:11] <leduyquang753> Well, that's not how it works.
[15:58:14] *** Joins: cdown (~cdown@188.214.11.14)
[15:58:22] <nedbat> montpol: i think you need np.concatenate
[15:58:33] <montpol> leduyquang753 how does it work?
[15:58:47] <leduyquang753> `[a, b]` means `[a][b]`, not "take indices `a` and `b`.
[15:59:23] <montpol> leduyquang753 not sure what you mean there
[15:59:43] <leduyquang753> You are trying to write your code as if it meant the latter.
[15:59:51] <bjs> montpol: s[a:b,c:d] is taking slice a:b of the first dimension, and slice b:c of the second dimension.
[15:59:56] <nedbat> leduyquang753: what is the right way to do it?
[15:59:58] <bjs> (if this is a numpy array)
[16:00:00] <montpol> bjs ahhhh
[16:00:12] <montpol> bjs yes it is
[16:00:16] <bjs> montpol: sorry slice c:d of the second dimension*
[16:01:18] <montpol> bjs but why cant i make it 4 dimensional then? just taking slices of various values
[16:01:22] <bjs> montpol: for example `A[0:4,11:14]` returns the 4x4 array of rows 0-3 but only columns 11-13 from those rows.
[16:01:41] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[16:01:51] <bjs> montpol: I'm not *entirely* sure what you're trying to do,  so I wouldn't be so quick to jump to the idea that you "can't"
[16:02:00] <montpol> bjs ok that makes sense
[16:02:01] <bjs> just that, the particular syntax you picked doesn't appear to be what you wanted to do
[16:02:23] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[16:02:37] <montpol> bjs i have two cases for both x and y axes but instead of having it serve as 1D, I want to to be 2D
[16:02:45] <montpol> so taking in both x and y
[16:02:57] *** Joins: apchar (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[16:03:06] <montpol> but the two cases are independent of each other
[16:03:31] *** Quits: gitargy_ (~gitargy@072-182-019-212.res.spectrum.com) (Remote host closed the connection)
[16:03:47] <bjs> montpol: so `s1 = data[c[1], self.roi[0]: self.roi[2]]` is a single row from data, and `s2 = data[self.roi[1]: self.roi[3], c[0]]` is a single column.  What do you want to do with this row and this column
[16:04:40] <bjs> (at least I assume that's what they are, it depends on what c[0], c[1] and roi actually are)
[16:05:24] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[16:05:24] <montpol> this is what i want to do: https://bpa.st/HE4Q
[16:06:08] *** Joins: zeden (~zeden@user/zeden)
[16:06:26] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[16:07:07] <nedbat> montpol: if you have code that shows what you want to do, then what is the question?
[16:07:19] *** Quits: p-i- (~Ohmu@180.183.72.213) (Remote host closed the connection)
[16:07:45] <montpol> this code only works for the old case: that s is 1D
[16:07:56] <montpol> have to improve the code to make it 2D
[16:08:00] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[16:08:23] *** Quits: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr) (Quit: Client closed)
[16:10:34] *** Jazzy is now known as jazzy
[16:11:35] *** Quits: xaltsc (~xaltsc@user/xaltsc) (Read error: Connection reset by peer)
[16:13:11] *** Joins: Tatarize (~Tat@137-025-218-069.res.spectrum.com)
[16:13:14] *** Quits: bluedust (~bluedust@117.207.233.49) (Remote host closed the connection)
[16:14:09] *** Quits: Tat (~Tat@137-025-218-069.res.spectrum.com) (Ping timeout: 256 seconds)
[16:14:50] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[16:14:52] *** Joins: Galladite (~Galladite@host-92-24-75-159.as13285.net)
[16:18:19] *** Quits: weedmic (~weedmic@5.102.235.240) (Quit: Konversation terminated!)
[16:20:08] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:22:03] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[16:22:09] *** Joins: lew (c292bc13c9@2604:bf00:561:2000::27e)
[16:22:54] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Remote host closed the connection)
[16:23:01] <lew> What are the file naming conventions for plural nouns? I know this might seem pedantic but I've always wondered
[16:23:03] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[16:23:54] <lew> eg: asset.py or assets.py
[16:24:32] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Quit: very_sneaky)
[16:24:55] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[16:26:32] *** Joins: amoros (~irc@user/amoros)
[16:26:43] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[16:26:58] *** Joins: vinitkme (~vinitkme@106.201.223.7)
[16:27:11] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[16:29:19] <leduyquang753> It's usually multiple assets.
[16:31:45] <lericson> not really
[16:31:50] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[16:31:52] <KirkMcDonald> Both are done.
[16:31:57] *** Parts: VaniaPy (~VaniaPy@46.12.11.60.dsl.dyn.forthnet.gr) ()
[16:32:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[16:32:22] <lericson> it depends on the conceptualization, is it an interface into multiple assets or does it deal with manipulation of an asset
[16:32:25] <KirkMcDonald> You just need to look at the standard library to see wild inconsistency on this.
[16:32:37] <KirkMcDonald> E.g. decimal, but fractions.
[16:32:50] <lew> let's say it contains a class representing a singular asset
[16:33:16] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 268 seconds)
[16:33:19] <lew> however, it also contains a class representing an asset bundle (plural)
[16:33:36] *** Quits: KvL (~KvL@user/KvL) (Quit: KvL)
[16:33:43] *** Joins: fikran (~fikran@user/fikran)
[16:33:57] *** Quits: B4re (~l4yer@178.239.168.223) (Ping timeout: 240 seconds)
[16:33:59] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[16:34:30] <lericson> lew: plural i would say
[16:34:38] <lericson> actually whatever
[16:34:44] <lericson> asset.Bundle and assets.Bundle sound fine
[16:34:50] <nedbat> montpol: i wish i understood numpy better
[16:36:30] *** Joins: VaniaPy (~VaniaPy@46.12.11.60.dsl.dyn.forthnet.gr)
[16:36:53] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 250 seconds)
[16:37:47] *** Joins: stockholm (~Andreas@p200300d2c704c500c416904ec59fe036.dip0.t-ipconnect.de)
[16:38:49] *** Joins: esther (~esther@2607:fb90:20d0:eecb:8de5:76ac:9cfd:ab6d)
[16:40:08] *** Joins: sambauer64 (~sambauer6@84.232.209.233)
[16:40:18] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[16:40:50] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[16:40:58] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[16:41:12] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[16:41:27] *** Joins: pvergain (~Thunderbi@2a01:e0a:223:690:47d:c4e6:5d33:c751)
[16:42:57] *** Quits: esther (~esther@2607:fb90:20d0:eecb:8de5:76ac:9cfd:ab6d) (Ping timeout: 240 seconds)
[16:43:02] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[16:43:33] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[16:45:38] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[16:47:47] *** Joins: B4re (~l4yer@178.239.168.223)
[16:49:10] *** Joins: abraxas (~abraxas@ip68-14-53-156.ri.ri.cox.net)
[16:50:59] <grym> nedbat: einsum is all you need, right >:)
[16:51:05] *** Joins: inomoz (~inomoz@85.26.233.222)
[16:51:16] <nedbat> grym: i have no idea what that word means :P
[16:51:44] <grym> nedbat: 'einstein notation' is a very concise DSL for representing matrix operations; np.einsum implements it
[16:52:11] *** Quits: nosklo (~nosklo@2804:14c:5b74:8196::9daf) (Quit: nosklo)
[16:52:17] <grym> (if you're good at that DSL, you don't really need 90% of the rest of numpy's API, at the cost of everyone else hating your guts for it)
[16:52:36] <nedbat> grym: so basically, regex for numpy.  yikes
[16:53:03] <ChrisWarrick> grym: is there any tool to translate between einsum and rest-of-numpy?
[16:53:55] <grym> ChrisWarrick: i'm not aware of one, but i also suck at einstein's notation; the last time i used it was for a pen-and-paper solid mechanics course in 2004
[16:54:33] <grym> nedbat: yeah that's not a bad analogy
[16:54:54] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 260 seconds)
[16:55:05] *** Joins: Enitin (~Enitin@82.102.22.84)
[16:55:25] <grym> nedbat: (but it predates regex by ~40 years)
[16:55:32] *** Joins: rolo (~rolo@2a02:3036:9:a52:81a4:c87c:46a6:1943)
[16:57:10] <nedbat> regex has no monopoly on powerful terse notation
[16:57:15] *** Quits: arinov (~arinov@178.240.175.124) (Ping timeout: 250 seconds)
[16:57:26] <grym> the real bear of it is, einsum is often faster :)
[16:58:03] *** Quits: rolo (~rolo@2a02:3036:9:a52:81a4:c87c:46a6:1943) (Remote host closed the connection)
[16:58:05] <ChrisWarrick> faster than well-written numpy code?
[16:58:24] *** Quits: squid_game (~squid_gam@h-98-128-168-226.NA.cust.bahnhof.se) (Remote host closed the connection)
[17:00:07] <grym> what's the difference :D
[17:00:37] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[17:00:56] <ChrisWarrick> I mean, faster than numpy code that does not use einsum, but uses all the other magic tricks and no Python loops
[17:01:32] <grym> not all the time, but more often than you would naively expect, yes einsum can be faster
[17:01:58] <grym> since it uses all those magic tricks too, but sometimes more elegantly
[17:05:23] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[17:05:55] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[17:09:03] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[17:11:15] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:47c5:424:7f27:e91c) (Quit: Konversation terminated!)
[17:12:31] *** Quits: B4re (~l4yer@178.239.168.223) (Ping timeout: 256 seconds)
[17:14:51] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:14:55] *** Joins: p-i- (~Ohmu@mx-ll-180.183.72-213.dynamic.3bb.co.th)
[17:15:10] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[17:15:26] *** Quits: schumaml (~schumaml@p200300e2ef1de00053c1821a43d17d29.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[17:17:32] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 240 seconds)
[17:18:21] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[17:18:50] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[17:19:02] *** Joins: djhankb (~djhankb@208.113.164.68)
[17:19:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[17:19:31] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 268 seconds)
[17:19:59] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:20:16] *** Joins: Enitin (~Enitin@82.102.22.85)
[17:20:27] *** Quits: stockholm (~Andreas@p200300d2c704c500c416904ec59fe036.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[17:20:32] *** Joins: miique (~miique@181.46.139.166)
[17:20:48] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[17:20:57] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[17:20:58] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[17:21:39] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[17:23:53] *** Joins: agonhajdari (~textual@user/agonhajdari)
[17:24:36] *** Joins: tomitek (~tomitek@host-80-238-118-45.jmdi.pl)
[17:25:21] *** Quits: DPA (~DPA@2a05:41c0:0:8104::a3c:10d) (Ping timeout: 245 seconds)
[17:26:01] *** Joins: B4re (~l4yer@178.239.168.223)
[17:28:24] *** Quits: circles (~circles@user/circles) (Quit: Loggin' off!)
[17:28:41] *** Joins: darksun (~darksun@user/darksun)
[17:28:41] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[17:28:46] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 268 seconds)
[17:30:04] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[17:31:26] *** Quits: vinitkme (~vinitkme@106.201.223.7) (Quit: Textual IRC Client: www.textualapp.com)
[17:32:14] *** Joins: italo (~italo@2804:29b8:50c2:27da:e9d:92ff:fe87:c787)
[17:32:41] *** Joins: stockholm (~Andreas@p200300d2c704c500c416904ec59fe036.dip0.t-ipconnect.de)
[17:33:00] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[17:33:29] *** Joins: bloody (~bloody@user/bloody)
[17:33:33] *** Quits: yanmaani1 (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[17:34:38] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b1d4-3f07-bb3f-aa7e.res6.spectrum.com)
[17:35:13] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:37:26] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (Quit: ZNC 1.8.2+deb2~bpo10+1 - https://znc.in)
[17:37:39] *** Joins: bluedust (~bluedust@117.207.233.49)
[17:39:57] *** Joins: cliluw (~cliluw@47.147.73.223)
[17:40:23] *** Joins: plastico (~plastico@neomutt/plastico)
[17:40:51] *** Joins: kosh (~kosh@user/kosh)
[17:43:10] *** Joins: DPA (~DPA@2a05:41c0:0:8104::a3c:10d)
[17:43:39] *** Quits: eroux (~eroux@102-65-85-177.ftth.web.africa) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:44:15] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[17:47:21] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:6ceb:a748:1495:958a) (Quit: Leaving)
[17:48:13] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:6ceb:a748:1495:958a)
[17:50:00] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:6ceb:a748:1495:958a) (Client Quit)
[17:50:28] *** Joins: afidegnum (~user@102.176.94.243)
[17:50:37] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 240 seconds)
[17:50:59] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:6ceb:a748:1495:958a)
[17:51:54] <afidegnum> with my dictionary comprehension: ddx = '<br/>'.join([f'{key}:: {value}' for key, value in dx.items() if dx is not None])  i'm still having an error of AttributeError: 'NoneType' object has no attribute 'items', how do i replace NoneType with an empty string in the string formatting ?
[17:54:00] <phy1729> The issue is the thing you think is a dictionary is None
[17:54:33] *** Quits: fstd (~fstd@xdsl-78-35-82-60.nc.de) (Read error: Connection reset by peer)
[17:54:45] <afidegnum> I wanted to skip the None value, replace it with something else
[17:54:49] *** Joins: fstd (~fstd@xdsl-78-35-82-60.nc.de)
[17:55:49] <phy1729> value isn't None; dx is None
[17:55:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[17:56:19] <afidegnum> oh ok
[17:58:12] <afidegnum> should i instead change  "dx is not None" to "if dx" ?
[17:58:38] <jinsun> no, do the `if dx is None` check outside the comprehension
[17:58:54] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[17:59:01] <jinsun> the comprehension is not possible to do if dx is None
[17:59:56] <afidegnum> i'm trying to put that in a lambda function but i'm getting confused
[18:00:29] <phy1729> You may need to just create a real function.
[18:00:56] <jinsun> yeah you can always write a proper function with multiple lines if stuffing everything in one expression for a lambda gets confusing
[18:01:11] *** Joins: blcyber (~blcyber@216.74.235.178)
[18:01:11] <phy1729> You might still fit in a lambda with a conditional operator, but it's not very readable that way
[18:01:28] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[18:02:41] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[18:03:01] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[18:05:04] *** Joins: Wulf (~Wulf@user/wulf)
[18:05:09] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:05:17] <jinsun> not too bad in this case I think, it would be something like, ddx =  '<br/>'.join([f'{key}:: {value}' for key, value in dx.items()] if dx is not None else [])
[18:06:19] *** Joins: zebrag (~chris@user/zebrag)
[18:06:58] <afidegnum> I managed to do this :) dxx = '<br/>'.join([f'{key}:: {value}' for key, value in dx.items() if dx is not None]) if dx is not None else ""
[18:07:21] <nedbat> afidegnum: that is too much on one line
[18:07:26] <jinsun> you don't need the if dx is None inside the comprehension
[18:07:35] <jinsun> you checked that already in the if else expression
[18:07:38] <nedbat> (and you said "if dx is not None" twicw)
[18:07:41] <nedbat> twice
[18:07:55] <afidegnum> ok, i got it
[18:08:18] *** Quits: LordVan (~lordvan@gentoo/developer/lordvan) (Quit: Leaving)
[18:10:16] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:dd0e:2e16:85db:1081)
[18:10:16] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:dd0e:2e16:85db:1081) (Changing host)
[18:10:16] *** Joins: skapata (~Skapata@user/skapata)
[18:10:30] <SnoopJ> ChrisWarrick, there's a surprising amount of not-Python that supports the contraction that makes einsum() go, but in the 'ideal' case it should be a bit slower because contraction is extra computation (vs. a broadcast/whatever that is more direct). That said, it's not a big penalty and it can do wonders for legibility with complex contractions
[18:12:34] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 268 seconds)
[18:13:27] *** Joins: ThePhilgrim (~ThePhilgr@h213-21-116-175.cust.a3fiber.se)
[18:14:03] <hodapp> <3 einsum
[18:14:09] <SnoopJ> the doc for it has some examples where it goes catastrophically wrong, too
[18:14:14] *** Joins: Wulf (~Wulf@user/wulf)
[18:14:25] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[18:14:29] *** Joins: qlixed (~qlixed@181.44.129.13)
[18:14:30] <hodapp> though, I never did figure out if there is a way to add extra dimensions in the *output* rather than just the input, e.g. like foo[:, :, None, :]
[18:14:44] *** Parts: lilibyte (lilibyte@gateway/vpn/protonvpn/lilibyte) ()
[18:15:54] <SnoopJ> hodapp, I don't think so. Certainly there's nothing like that in conventional Einstein notation
[18:16:49] *** Quits: ThePhilgrim (~ThePhilgr@h213-21-116-175.cust.a3fiber.se) (Remote host closed the connection)
[18:17:16] *** Joins: cdown_ (~cdown@163.114.131.1)
[18:17:29] *** Joins: binary01 (~binary01@cpe-74-71-15-170.nyc.res.rr.com)
[18:18:09] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:18:37] *** Quits: binary011 (~binary01@cpe-74-71-15-170.nyc.res.rr.com) (Ping timeout: 240 seconds)
[18:18:43] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 250 seconds)
[18:18:51] *** Joins: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se)
[18:19:24] *** Joins: cheater (~Username@user/cheater)
[18:19:38] *** Joins: wovixo (~wovixo@128.104.205.49)
[18:20:14] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 252 seconds)
[18:20:19] *** cdown_ is now known as cdown
[18:22:06] *** Joins: LordVan (~lordvan@gentoo/developer/lordvan)
[18:24:50] *** Quits: Tempesta (~Tempesta@user/tempesta) (Quit: See ya!)
[18:25:20] *** Joins: smqra (~rooba@208.110.85.44)
[18:27:24] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:28:12] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[18:28:23] *** Joins: Tempesta (~Tempesta@user/tempesta)
[18:28:37] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[18:31:00] <SnoopJ> nedbat, I guess einsum() probably has a little in common with code that handles backreferences in regex engines, but it's a substantially more boring grammar so I would hesitate to make that comparison
[18:31:32] <nedbat> SnoopJ: i meant the analogy of "powerful compact DSL that can confuse people"
[18:31:41] <SnoopJ> that I will readily agree to :)
[18:31:47] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[18:31:50] *** Quits: bluedust (~bluedust@117.207.233.49) (Remote host closed the connection)
[18:32:12] <SnoopJ> nobody who isn't already familiar with Einstein notation is missing out if they aren't using it
[18:32:26] *** Joins: bluedust (~bluedust@103.165.167.220)
[18:32:26] <grym> those patent clerks and their proclivity for terseness :)
[18:33:53] <supakeen> SnoopJ: The way to solve the issue was to reinstall *everything* on that pi since it was just broken by someone using pip in the *wrong* way.
[18:33:58] *** Quits: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se) (Remote host closed the connection)
[18:34:09] <supakeen> (hate those people ;))
[18:34:31] <SnoopJ> supakeen, interesting, I guess there was some rot down in the dependencies?
[18:35:47] *** Joins: Algernon666 (~Algernon6@2a04:cec0:10eb:872a:6998:4307:2323:94d4)
[18:35:57] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 240 seconds)
[18:36:14] <supakeen> probably
[18:36:17] <supakeen> Not my machine :)
[18:36:37] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 240 seconds)
[18:36:41] <supakeen> I only hack out artisinal AVR assembly into stones that are then whistled into EEPROMs by my interns.
[18:36:51] <SnoopJ> using binary wheels on raspian (or any ARM system really) seems to still be fairly fraught
[18:36:59] <SnoopJ> and compiling is not much of an option
[18:37:04] <grym> supakeen: if you can't do it by hand on a loom is it really worth doing
[18:37:17] <SnoopJ> (I guess RISC architecture did change everything >_>)
[18:37:17] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[18:37:52] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[18:38:00] <lericson> in argparse, can you say "this option accepts yes/no" and that turns into a bool?
[18:38:13] <lericson> i know about default=False, action='store_true'
[18:38:41] <grym> earlier this week i tripped across a very cute thing where someone realised that knit and purl were two things, and 0 and 1 were two things, and they could absolutely knit doom on a blanket; the thread  (hah!) subsequently unrolled  with other commenters quickly filling them in on things like jacquard looms.  Good ideas keep recurring :)
[18:38:50] *** Joins: fhifddvfre44 (~joshuaa@2603-7080-0b01-f36c-0000-0000-0000-0806.res6.spectrum.com)
[18:39:34] *** Joins: rvalue (~rvalue@user/rvalue)
[18:40:20] *** Quits: Malaclypse (~Malaclyps@bbcs-108-228.pub.wingo.ch) (Quit: WeeChat 3.4)
[18:40:28] *** Joins: ThePhilgrim (~ThePhilgr@h213-21-116-175.cust.a3fiber.se)
[18:40:38] <grym> ah, https://knittingdoom.tumblr.com/post/626292095429296128/stabbedinthenameofscience-commodorebuzzkill
[18:40:53] *** Quits: ThePhilgrim (~ThePhilgr@h213-21-116-175.cust.a3fiber.se) (Client Quit)
[18:41:00] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[18:41:09] <supakeen> Fun :)
[18:42:07] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b1d4-3f07-bb3f-aa7e.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[18:42:50] *** Joins: janemba (~janemba@94.204.254.193)
[18:43:04] *** Joins: fikran (~fikran@user/fikran)
[18:43:06] <mingdao> Are we going to get Python 7.0.0 ?
[18:43:55] *** Joins: raxor2k (~raxor2k@78.158.236.72)
[18:44:01] <lericson> yes
[18:44:09] <nedbat> mingdao: why would we?
[18:44:19] *** Quits: _flood (flooded@gateway/vpn/protonvpn/flood/x-43489060) (Quit: Leaving)
[18:44:21] <mingdao> Your twitter thread.
[18:44:34] <nedbat> mingdao: oh, i meant library v7.0.0, not python
[18:44:38] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[18:45:14] *** Joins: Roey (~Roey@user/Roey)
[18:45:25] <cluelessperson> How do I build up the skill of handling a large application and processes in the background?
[18:45:25] *** Quits: janemba (~janemba@94.204.254.193) (Client Quit)
[18:45:26] <mingdao> nedbat: I'm not much of a tweeter, and misread it.  You are one of <6 notifications I get.
[18:45:35] <nedbat> mingdao: i'm honored :)
[18:45:52] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[18:46:07] *** Joins: janemba (~janemba@94.204.254.193)
[18:46:09] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Remote host closed the connection)
[18:46:11] *** Quits: Vonter (~Vonter@user/vonter) (Quit: WeeChat 3.4)
[18:46:25] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[18:46:27] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[18:46:30] *** Quits: janemba (~janemba@94.204.254.193) (Client Quit)
[18:46:31] <cluelessperson> For example, starting up workers that handle background downloading, using a database to store queues, and a variety of things that may need to be done in the app?
[18:46:33] <leitz> cluelessperson, my path is to start small but have the end goal in mind. I do a little bit at a time, make a lot of mistakes, and keep moving forward.
[18:46:42] *** Joins: clarkk1 (~clarkk@37.120.149.34)
[18:46:53] <cluelessperson> leitz, that provides no hints as to how to manage all of this
[18:46:59] <mingdao> nedbat: Well, I still haven't stopped working too many hours and learned Python.  That is going to be one of my NY Resolutions, which I have completed every year in this millennium.  ;0
[18:47:26] <leitz> cluelessperson, have you ever played with Cucumber, the app?
[18:48:03] <leitz> Well, the BDD test framework. Not really an app.
[18:48:14] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[18:48:18] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 260 seconds)
[18:48:29] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[18:49:07] *** Joins: Vonter (~Vonter@user/vonter)
[18:49:12] *** Joins: janemba (~janemba@94.204.254.193)
[18:49:25] *** Quits: clarkk (~clarkk@host86-165-12-159.range86-165.btcentralplus.com) (Ping timeout: 256 seconds)
[18:51:20] *** Joins: sudomann1 (~sudomann@c-24-126-8-24.hsd1.wv.comcast.net)
[18:51:35] *** Joins: kmh (~kmh@2a00:6020:5004:6800:2b29:9500:2873:7d5b)
[18:51:45] *** Joins: bluedust_ (~bluedust@185.248.85.40)
[18:52:04] <leitz> cluelessperson, I'm building a Flask based character bible tool. Right now I'm not even doing Flask, or SQLAlchemy, but focusing on the core product. That let's me find mistakes early on, and then when I deeply understand things (thank you pytest), I move forward to the next topic.
[18:52:38] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 268 seconds)
[18:52:42] <cluelessperson> leitz, I have flask and sqlalchemy down, for me the background tasking is the hard part
[18:53:45] <leitz> cluelessperson, then you're ahead of me! Cool. So, set both aside, and just focus on the background tasking. Make the next project as absolutely minimal as you can, and then deeply understand it.
[18:54:05] <leitz> Write tests for it, and then work to connect it to Flask and your database stuff.
[18:54:11] <cluelessperson> maybe I need to focus on asyncio
[18:54:37] *** Quits: bluedust (~bluedust@103.165.167.220) (Ping timeout: 240 seconds)
[18:54:47] <SnoopJ> lericson, I see two options for doing this with action='store': choices=["yes", "no"] and deal with the mapping just after calling parse_args(), or abuse the `type` feature. The latter is ickier, but would be more useful if you do this several times on a single CLI: https://bpa.st/DHYA
[18:54:52] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:55:29] <lericson> SnoopJ: ah nice
[18:55:34] <lericson> this is basically what i was considering
[18:55:37] <raxor2k> in pymysql, you have this function "executemany(data, new_list)" which can push multiple datas to sql database at once. Is there a similar function in sqlalchemy(async version) ?
[18:55:37] <lericson> also casefold()
[18:55:40] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[18:56:02] *** flooded is now known as _flood
[18:56:08] <SnoopJ> lericson, I opted for lower() because "yes" and "no" are words I fully expect to be ASCII, but sure, if you prefer
[18:56:09] *** Joins: beli6147 (~Thunderbi@cpe-72-132-224-120.dc.res.rr.com)
[18:56:42] *** Joins: clarkk11 (~clarkk@host86-165-12-159.range86-165.btcentralplus.com)
[18:57:57] *** Quits: stockholm (~Andreas@p200300d2c704c500c416904ec59fe036.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[18:59:04] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[18:59:30] *** Quits: clarkk1 (~clarkk@37.120.149.34) (Ping timeout: 260 seconds)
[19:00:00] *** Joins: Ultiweb (~Ultiweb@82.40.172.221)
[19:01:12] *** Joins: schumaml (~schumaml@dslb-188-104-168-024.188.104.pools.vodafone-ip.de)
[19:03:49] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[19:04:36] *** Quits: B4re (~l4yer@178.239.168.223) (Quit: Leaving)
[19:06:11] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:06:17] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[19:06:54] <bjs> raxor2k: doesn't it have an execute method?
[19:06:54] *** Quits: Nact (~l@host-85-27-127-179.dynamic.voo.be) (Quit: Konversation terminated!)
[19:07:57] *** Joins: whaley (~whaley@097-082-197-228.res.spectrum.com)
[19:08:41] *** Quits: jay-m1261 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[19:10:20] *** Joins: Crassus (~Crassus@user/crassus)
[19:10:20] *** Joins: bluedust (~bluedust@103.165.167.220)
[19:10:35] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[19:10:42] *** Joins: l4yer (~l4yer@178.239.168.223)
[19:10:54] *** Joins: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com)
[19:11:33] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[19:12:00] *** Joins: bluedus__ (~bluedust@194.37.96.104)
[19:12:01] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[19:12:51] *** Quits: bluedust_ (~bluedust@185.248.85.40) (Ping timeout: 245 seconds)
[19:13:37] *** Joins: akk (~akk@174-28-122-47.albq.qwest.net)
[19:14:37] *** Quits: jwisbell35 (~jwisbell3@174-080-085-082.res.spectrum.com) (Client Quit)
[19:15:09] *** Joins: Geminizer (~somebody@static-173-64-25-146.bflony.fios.verizon.net)
[19:15:17] *** Quits: bluedust (~bluedust@103.165.167.220) (Ping timeout: 240 seconds)
[19:15:50] *** Joins: bluedust (~bluedust@103.165.167.220)
[19:18:32] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 268 seconds)
[19:18:32] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[19:18:35] *** Quits: ElPresidente (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net) (Read error: Connection reset by peer)
[19:18:53] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[19:19:27] *** Quits: bluedus__ (~bluedust@194.37.96.104) (Ping timeout: 256 seconds)
[19:21:03] *** Joins: nanobot567 (~pi@108-195-7-3.lightspeed.nsvltn.sbcglobal.net)
[19:21:51] *** Joins: luigibu1 (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net)
[19:23:24] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b1d4-3f07-bb3f-aa7e.res6.spectrum.com)
[19:24:25] *** Joins: magla (~gelignite@55d48631.access.ecotel.net)
[19:24:47] *** Joins: aslicedbanjo (~aslicedba@host86-168-244-6.range86-168.btcentralplus.com)
[19:25:08] <VaniaPy> if you pass the gunicorn to the docker-compose file ,in a service, with the command gunicorn hello_world.wsgi:application --bind 0.0.0.0:8000
[19:25:17] *** Quits: Geminizer (~somebody@static-173-64-25-146.bflony.fios.verizon.net) (Ping timeout: 240 seconds)
[19:25:39] <VaniaPy> can you build the compose or this is for the production server? i mean can i run it locally?
[19:26:06] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[19:26:25] <cluelessperson> VaniaPy, I have no idea what that means.  but you'd want to configure gunicorn for production usage.
[19:26:32] *** Joins: Geminizer (~somebody@static-173-64-25-146.bflony.fios.verizon.net)
[19:28:21] <VaniaPy> yeah, my target is to deploy the container to the production server and set a cron job that runs every minute
[19:28:28] <SnoopJ> VaniaPy, the command you just shared can be run locally if you have gunicorn and the hello_world package available.
[19:28:34] *** Quits: fhifddvfre44 (~joshuaa@2603-7080-0b01-f36c-0000-0000-0000-0806.res6.spectrum.com) (Quit: Leaving)
[19:28:43] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[19:28:49] <VaniaPy> SnoopJ available where?
[19:29:01] *** fling is now known as bedroller
[19:29:30] <cluelessperson> VaniaPy, why would you set a cron job?
[19:29:43] <SnoopJ> VaniaPy, gunicorn on your PATH, hello_world in your sys.path (i.e. `import hello_world` would work)
[19:29:48] <VaniaPy> cluelessperson i need to run my app 24/7
[19:30:24] <VaniaPy> i mean it must call some services 24/7 every min
[19:30:57] <lericson> does anyone know of a good way to do ray casting in 2D in python? it can be done manually but would be slow unless you spend time on cython/numba/etc.
[19:30:58] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[19:31:55] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[19:32:02] <grym> lericson: i know how to do it in fortran for sound in oceans...
[19:32:05] <SnoopJ> lericson, I imagine in 2D you could still get away with it, depending on how many rays you want to cast
[19:32:17] <grym> but that's pretty bespoke
[19:32:29] <SnoopJ> it's also in fortran :P
[19:32:49] *** Joins: hackers (~self@user/hackers)
[19:33:11] <lericson> grym: bathymetry much?
[19:33:32] <lericson> SnoopJ: it's tens of thousands of 256x256 grid maps
[19:33:46] <SnoopJ> I don't know what a "grid map" is in this context
[19:33:51] <lericson> ah, a bitmap
[19:34:12] <SnoopJ> erm, where each bit is a ray, or...?
[19:34:16] <grym> lericson: lil' bit
[19:34:26] <SnoopJ> the result of casting a ray*
[19:34:31] <lericson> yes exactly, SnoopJ
[19:34:36] *** Joins: agonhajdari (~textual@user/agonhajdari)
[19:34:43] <lericson> it's a line-of-sight map from some position in an environment of polygons
[19:34:44] *** Quits: VaniaPy (~VaniaPy@46.12.11.60.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[19:35:25] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[19:35:40] <SnoopJ> lericson, tens-of-thousands instances of casting 65536 rays sounds like it is probably too many to get away with during it purely in Python if you're going to be doing this in realtime
[19:35:45] *** Joins: menace (~someone@ppp-93-104-175-20.dynamic.mnet-online.de)
[19:35:55] *** Quits: menace (~someone@ppp-93-104-175-20.dynamic.mnet-online.de) (Changing host)
[19:35:55] *** Joins: menace (~someone@user/menace)
[19:36:31] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[19:39:05] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[19:39:41] *** Quits: andreasbuhr (~quassel@p549dbe5a.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:39:43] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:39:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[19:41:29] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[19:42:40] *** Quits: bluedust (~bluedust@103.165.167.220) (Remote host closed the connection)
[19:43:11] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[19:43:16] *** Joins: thevishy (~Nishant@2405:201:f005:c007:2dcc:1488:1871:6935)
[19:43:44] *** Quits: sudomann (~sudomann@2601:155:8402:4960:f4b6:2f5c:9895:3a33) (Read error: Connection reset by peer)
[19:43:48] *** Joins: jay-m1261 (~jay-m@41.205.30.141)
[19:43:50] *** Joins: greedom (~greedom@p200300de670b8300a6d3275d0253eda7.dip0.t-ipconnect.de)
[19:44:33] *** Joins: sudomann (~sudomann@2601:155:8402:4960:f4b6:2f5c:9895:3a33)
[19:46:41] *** Quits: luigibu1 (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net) (Ping timeout: 250 seconds)
[19:47:08] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[19:48:11] *** Joins: sudomannn (~sudomann@2601:155:8402:4960:f4b6:2f5c:9895:3a33)
[19:48:22] *** Quits: greedom (~greedom@p200300de670b8300a6d3275d0253eda7.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:48:46] *** Joins: greedom (~greedom@p200300de670b8300a6d3275d0253eda7.dip0.t-ipconnect.de)
[19:48:58] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[19:49:29] *** Joins: Enitin (~Enitin@82.102.22.85)
[19:51:01] *** Quits: sudomann (~sudomann@2601:155:8402:4960:f4b6:2f5c:9895:3a33) (Ping timeout: 240 seconds)
[19:51:29] *** Quits: magla (~gelignite@55d48631.access.ecotel.net) (Quit: Stay safe!)
[19:51:33] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[19:51:50] <lericson> the type= abuse works beautifully by the way
[19:52:14] <lericson> argparse even catches ValueErrors and prints out a nice error message
[19:52:22] *** Joins: luigibu1 (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net)
[19:53:12] *** Quits: cosimone (~user@93-34-133-35.ip49.fastwebnet.it) (Remote host closed the connection)
[19:53:13] <SnoopJ> lericson, you can raise ArgumentError if you ever need to have a little more control over that error message. It's one of many missing stairs in the argparse interface that it just swallows up some of the details of your exception
[19:53:22] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:53:39] <SnoopJ> (unless you use theirs and then it just sends it through)
[19:53:44] <lericson> i remember optparse so argparse to me is like a warm hug
[19:54:52] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[19:54:59] <SnoopJ> I only know about the exception thing because I recently did this kind of abuse and my distinct error messages were being collapsed into something useless: was that PathArg bad because it doesn't exist? Because a file was requested, but the target is a directory? Argparse would just say it was invalid :(
[19:56:10] <lericson> oh it swallows all Exception subclasses except ArgumentError?
[19:56:51] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[19:58:37] *** Quits: italo (~italo@2804:29b8:50c2:27da:e9d:92ff:fe87:c787) (Ping timeout: 250 seconds)
[19:58:52] *** bedroller is now known as fling
[19:59:27] <SnoopJ> lericson, not all of them, but TypeError and ValueError specifically are caught and discarded in favor of a generic message: https://github.com/python/cpython/blob/main/Lib/argparse.py#L2509-L2514
[19:59:37] *** Joins: VaniaPy (~VaniaPy@46.12.11.60.dsl.dyn.forthnet.gr)
[19:59:42] *** Quits: luigibu1 (~luigibu@11.red-79-159-71.dynamicip.rima-tde.net) (Ping timeout: 260 seconds)
[19:59:58] <lericson> i can see why though
[20:00:03] <SnoopJ> any Exception that isn't ArgumentTypeError, TypeError, ValueError will just sail through
[20:00:17] <SnoopJ> but it's mildly annoying that it just drops the originating exception on the ground
[20:01:56] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[20:02:04] <lericson> huh the exception variable is unbound after the except block?
[20:02:05] *** Joins: bluedust (~bluedust@103.165.167.220)
[20:02:15] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[20:02:19] <lericson> except Exception as e: pass ; · e no longer exists
[20:04:04] <SnoopJ> yea, it's kind of a sharp edge in the way names work
[20:04:20] *** Quits: blcyber (~blcyber@216.74.235.178) (Remote host closed the connection)
[20:04:21] <lericson> must be a fairly recent change though?
[20:04:27] <lericson> i'm guessing because stack frame cycles?
[20:04:39] *** Joins: blcyber (~blcyber@216.74.235.178)
[20:04:41] *** Joins: circles (~circles@user/circles)
[20:04:43] <xrogaan> What's the proper way to include data files alonside a python package?
[20:05:00] <grym> xrogaan: importlib.resources
[20:05:23] <SnoopJ> lericson, I don't know when it was introduced, sometime between 2.7 and 3.6, which are the relevant posts I have immediately at hand
[20:05:29] *** Quits: blcyber (~blcyber@216.74.235.178) (Remote host closed the connection)
[20:06:04] *** Joins: blcyber (~blcyber@216.74.235.178)
[20:06:16] <grym> xrogaan: and in setup.py/cfg/..., you want to specify package_data
[20:07:35] <xrogaan> ok, thanks
[20:07:36] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[20:07:40] <grym> which is a dict of {"package_name":["the/file/to/include/*.json"]}, or whatever
[20:07:43] <lericson> SnoopJ: https://www.python.org/dev/peps/pep-0344/
[20:08:03] *** Quits: Ultiweb (~Ultiweb@82.40.172.221) (Ping timeout: 256 seconds)
[20:08:11] <Yhg1s> lericson: 'recent' in that it's new in 3.0, yes.
[20:08:19] <grym> xrogaan: the reason to prefer importlib.resources over Path(__file__) in __init__.py is that sometimes your package isn't a file :)
[20:08:23] <SnoopJ> lericson, I generally catch exceptions under an identifier I don't use for other purposes, so I've never had to deal with this sharp corner
[20:08:28] *** Joins: Macuser (~Macuser@2600:1003:b450:7f34:8c0d:7505:22ed:e35b)
[20:08:46] <lericson> SnoopJ: me neither but now i wanted to toy around with an exception in the REPL due to our conversation about argparse
[20:09:10] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[20:09:12] <SnoopJ> I'm very fine with it being only bound to the exception for the handler (unless I perform another assignment), it's just a little annoying that it can clobber an already-defined name in the surrounding scope
[20:09:41] <SnoopJ> I guess it happens because mechanically the handler doesn't have its own scope, or something? Dunno, like I said, I've always stayed away from this one
[20:09:41] *** Quits: blcyber (~blcyber@216.74.235.178) (Remote host closed the connection)
[20:09:51] *** Quits: greedom (~greedom@p200300de670b8300a6d3275d0253eda7.dip0.t-ipconnect.de) (Remote host closed the connection)
[20:09:59] <xrogaan> grym: yeah. The issue I'm trying to figure out is how to have the packaging process gather third party files and put them in a sane place. Poetry doesn't help in this case.
[20:10:00] <lericson> seems that PEP actually doesn't explicitly say, though this other reference to it says 344 is the cause fo del https://www.python.org/dev/peps/pep-3110/#semantic-changes
[20:10:06] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[20:10:21] <lericson> "In order to resolve the garbage collection issue related to PEP 344, except statements in Python 3 will generate additional bytecode to delete the target […]"
[20:10:32] <lericson> Yhg1s: basically hot out of the oven then
[20:10:44] *** Joins: stockholm (~Andreas@p200300d2c704c500c416904ec59fe036.dip0.t-ipconnect.de)
[20:10:46] <lericson> ahh sorry i misread that quote
[20:10:52] <lericson> so that link is the justification itself
[20:11:07] <Yhg1s> if you've been living under a rock for the last ten years, sure :)
[20:11:21] <lericson> have you seen the cost of housing lately? a rock is nothing to scoff at
[20:11:29] <SnoopJ> lericson, the translation to try/except/finally given there is how I've usually thought about it
[20:11:42] <TML> When I was lad, we'd have been GLAAAD to have rock.
[20:11:55] <grym> xrogaan: that .. depends.  can you say more? if they don't belong inside the package tree (ie, users are going to want to edit them), then discard what i just said and look at something like appdirs
[20:11:56] <SnoopJ> I can't say I understand why it would assign `N = None` before the del but I didn't really write Python prior to 2.7
[20:12:18] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[20:12:35] *** Quits: Geminizer (~somebody@static-173-64-25-146.bflony.fios.verizon.net) (Read error: Connection reset by peer)
[20:13:00] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[20:13:17] <lericson> SnoopJ: imagine if the except block dels e
[20:13:23] <lericson> this makes it safe
[20:13:33] *** Quits: Xano (~Xano@2a00:23c4:4204:700:fc21:e40:8806:a711) (Quit: Leaving)
[20:13:41] <lericson> https://mail.python.org/pipermail/python-3000/2007-January/005387.html
[20:13:42] <lericson> ref ^
[20:14:11] <lericson> and i'll have to concede it's been around for a while as i'm linking ML posts from 2007
[20:14:26] <xrogaan> grym: maybe I don't understand what package_data means. Do I have to put the data within the package structure? That is, in the same folder as package/__init__.py?
[20:14:45] <raxor2k> is "Return" and "Return False" the same ?
[20:14:52] <lericson> no, raxor2k
[20:14:55] <lericson> return and return None are
[20:15:33] <grym> xrogaan: i read "include datafiles alongside a python package" to mean "when someone pip installs mything, the site-packages tree that holds mything will also include the following 8 files that are not python source code, that my package will need to use internally but the user will never need to access directly"
[20:15:39] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[20:15:40] <grym> xrogaan: is that what you're up to, or are you up to something else
[20:15:50] *** Quits: Ad1Tech (~Ad1Tech@h104101.man.tk-internet.pl) (Quit: Leaving)
[20:16:11] *** Joins: bkhl (~bkhl@user/bkhl)
[20:16:20] <xrogaan> yes
[20:16:34] <SnoopJ> lericson, I trust that Ka-Ping Yee and others thought about it and worked out a solution that fit the constraints :)
[20:16:34] <grym> answering yes to an or question is less informative than it could be :D
[20:16:36] <xrogaan> like resource files with icons.
[20:16:58] <xrogaan> `is that what you're up to?' < yes
[20:17:12] *** Quits: Vonter (~Vonter@user/vonter) (Quit: WeeChat 3.4)
[20:17:24] <grym> ok.
[20:17:32] <xrogaan> I felt that the followup question invites a more verbose answer.
[20:17:56] <grym> then yes, you'd typically include those files inside your project's file tree so that they get packaged up at wheel-making time
[20:18:16] <grym> you would not use package_data to try to include files that are outside of your source tree
[20:18:50] <xrogaan> Apparently, non-package data files aren't well liked https://setuptools.pypa.io/en/latest/userguide/datafiles.html#non-package-data-files
[20:18:58] <grym> yes, it doesn't really make sense
[20:19:30] <grym> i'm not above commiting *.ico though
[20:21:01] <raxor2k> lericson: i see
[20:22:00] <grym> in my applications, my in-package data files tend to be things like yaml configurations
[20:22:11] <grym> most of which i need but the user won't touch
[20:25:02] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:25:21] *** Quits: rsx (~dummy@ppp-188-174-149-31.dynamic.mnet-online.de) (Quit: rsx)
[20:27:19] <xrogaan> Some resources I have aren't stored within the package structure, but can be copied in at packaging time.
[20:27:49] <grym> that sounds brittle
[20:28:00] <grym> unversioned resources... spooky
[20:29:43] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[20:30:01] <lericson> it's the we
[20:30:10] <lericson> it's the we-have-always-been-at-war-with-eurasia approach
[20:30:40] <grym> err
[20:30:48] *** Joins: georgios (~georgios@user/georgios)
[20:31:56] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b1d4-3f07-bb3f-aa7e.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[20:31:57] <xrogaan> grym: not necessarily. You could need to compile several files into one and stuff like that. Can be part of the repo, but not within the src/package/ folder.
[20:32:34] *** Quits: bluedust (~bluedust@103.165.167.220) (Remote host closed the connection)
[20:32:39] *** Joins: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52)
[20:34:28] *** Joins: cthulchu (~Cthulchu@184-090-172-137.res.spectrum.com)
[20:34:53] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:35:43] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[20:37:23] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[20:38:18] *** Joins: timkofu (~timkofu@user/timkofu)
[20:38:18] *** Joins: blcyber (~blcyber@216.74.235.178)
[20:38:51] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b1d4-3f07-bb3f-aa7e.res6.spectrum.com)
[20:39:17] *** Quits: raxor2k (~raxor2k@78.158.236.72) (Remote host closed the connection)
[20:39:20] *** Quits: abraxas (~abraxas@ip68-14-53-156.ri.ri.cox.net) (Quit: abraxas)
[20:39:21] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[20:39:35] <timkofu> Where's the bug here? https://dpaste.com/G7V5TGBZD
[20:39:58] <grym> timkofu: line 2
[20:40:10] <lericson> is this a programming quiz?
[20:40:11] <grym> default mutable arguments are assigned _once_, not on every call
[20:40:15] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:40:20] <SnoopJ> timkofu, probably `contents=[]` which creates a single list at definition time. It would help if we knew what bug you were talking about.
[20:40:45] <mefistofeles> line 2
[20:40:49] * mefistofeles wants to feel cool as well
[20:40:57] <timkofu> grym: there it is. the _once_ part
[20:40:58] <timkofu> thanks
[20:41:04] <timkofu> Thanks all
[20:41:11] *** Quits: VaniaPy (~VaniaPy@46.12.11.60.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[20:41:34] <SnoopJ> timkofu, usually you default such an argument to None or another sentinel value and create the necessary default if the user didn't specify it in the function body
[20:42:17] <grym> timkofu: the idiom is usually `contents=None); if contents is None: contents = []`, which is klunky but here we are
[20:42:40] <lericson> attrs
[20:42:42] <lericson> please
[20:42:55] <grym> factory= is nice, ys
[20:43:06] <SnoopJ> grym, what's clunky about it?
[20:43:27] <grym> SnoopJ: two extra lines worth of typing and one of them indented
[20:43:32] *** Joins: timkofu_ (~timkofu@196.111.14.189)
[20:43:32] *** Quits: timkofu_ (~timkofu@196.111.14.189) (Changing host)
[20:43:32] *** Joins: timkofu_ (~timkofu@user/timkofu)
[20:43:38] *** Quits: blcyber (~blcyber@216.74.235.178) (Ping timeout: 268 seconds)
[20:43:44] <grym> that's special just for some but not all default args
[20:43:48] <SnoopJ> grym, `contents = [] if contents is None else contents` gets it onto one line but I find that substantially clunkier
[20:43:56] <grym> it's mildly ungainly either way to have to care
[20:44:00] <lericson> how to cram a variable name into a single line three times ^
[20:44:31] <SnoopJ> you could also `contents = contents or []` if you like living dangerously but it seems like a bad idea
[20:44:36] *** Quits: Macuser (~Macuser@2600:1003:b450:7f34:8c0d:7505:22ed:e35b) (Quit: Textual IRC Client: www.textualapp.com)
[20:44:53] <lericson> has weird side-effects if contents is false-like
[20:44:57] <grym> that you have to do it at all is the ungainly part, not how you do it
[20:45:10] <lericson> yep
[20:45:17] <SnoopJ> grym, I mean, no syntax makes sentinel values not-sentinel-values
[20:45:20] *** Joins: Algernon91 (~Algernon6@2a04:cec0:10ef:d61b:6998:4307:2323:94d4)
[20:45:39] <grym> it is ungainly that they're needed
[20:45:41] <SnoopJ> but you could augment function syntax to remove the need for a sentinel here, at the expense of complicating function declarations
[20:46:08] <grym> the "asssignment happens once" sharp edge is sharp; how you sheath the knife is up to you but it's a shame you have to
[20:46:09] <lericson> an obvious answer to this problem is to evaluate the default arguments on call
[20:46:15] <mefistofeles> lericson: so, how is that done with attrs?
[20:46:22] <lericson> mefistofeles: factory= like grym said
[20:46:24] <grym> mefistofeles: there's a .ib(factory=list)
[20:46:36] *** Quits: timkofu (~timkofu@user/timkofu) (Ping timeout: 245 seconds)
[20:46:43] <lericson> attrs is declarative
[20:46:47] <lericson> so you trade that off
[20:46:47] <SnoopJ> lericson, that's a very destructive change to anybody who does `arg=name` anywhere else, though
[20:46:48] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:46:57] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 240 seconds)
[20:47:00] <lericson> SnoopJ: sure
[20:47:09] *** Quits: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net) (Quit: Textual IRC Client: www.textualapp.com)
[20:47:11] *** Quits: timkofu_ (~timkofu@user/timkofu) (Remote host closed the connection)
[20:47:14] *** Joins: magla (~gelignite@55d48631.access.ecotel.net)
[20:47:20] <SnoopJ> plus the expense at call time which is probably less of a big deal
[20:47:20] <lericson> but this is caveat #1 in python tbh
[20:47:30] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b1d4-3f07-bb3f-aa7e.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[20:47:41] <SnoopJ> It's not great, but I can't think of solutions that aren't substantially worse than the inconvenience
[20:47:55] <SnoopJ> short of metaprogramming-y things like attrs
[20:48:11] <lericson> it's all just bytes in the end
[20:48:11] *** Quits: Algernon666 (~Algernon6@2a04:cec0:10eb:872a:6998:4307:2323:94d4) (Ping timeout: 252 seconds)
[20:48:20] *** Quits: tomitek (~tomitek@host-80-238-118-45.jmdi.pl) (Remote host closed the connection)
[20:48:21] <SnoopJ> you aren't wrong
[20:49:11] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[20:49:46] *** Parts: grym (~grym@user/grym) ()
[20:49:56] *** Joins: grym (~grym@user/grym)
[20:49:58] <lericson> wb
[20:50:17] <grym> hmm, my window switcher can kill frames now?
[20:50:24] <grym> weird
[20:50:34] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[20:50:44] <lericson> i think we abandoned frames in favor of dhtml
[20:51:02] <grym> i forget the right irssi noun, actually
[20:51:23] <lericson> panes? windows?
[20:51:27] <lericson> idk either
[20:51:37] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 240 seconds)
[20:51:40] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[20:51:41] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b1d4-3f07-bb3f-aa7e.res6.spectrum.com)
[20:52:25] *** Joins: fikran (~fikran@user/fikran)
[20:53:11] *** Joins: tomitek (~tomitek@host-80-238-118-45.jmdi.pl)
[20:54:21] <jinsun> there is a pep now to make mutable default arguments less painful to write https://www.python.org/dev/peps/pep-0671/
[20:55:14] <jinsun> which again looks C# inspired, looks like the Expression-bodied members syntax from C#
[20:55:41] <grym> it does indeed
[20:55:57] <grym> the inspiration goes both ways; c# has been looking more pythonic for a while now
[20:56:04] <grym> (i'm a fan)
[20:56:07] *** Joins: TechTheory (~lwait@2600:8800:7c03:c400:ce:a77e:7c3d:6b39)
[20:57:38] <jinsun> the mutable default thing is also annoying with type hinting, have to add unnessary | None to the annotation
[20:58:02] <jinsun> so it would be good to have that kind of thing I think
[20:58:03] <grym> def foo(x=>[]) looks ok to me.  when i was a c# guy i pronounced => as "such that", which scans here too
[20:58:28] <grym> and nobody's foo(x=[]) bugs break either :)
[20:58:44] <grym> guess we'll see how it goes
[20:59:20] <lericson> interesting pep jinsun
[20:59:39] <lericson> i personally prefer a := expr
[21:00:16] *** Joins: df00z (~df00z@rrcs-50-75-26-170.nys.biz.rr.com)
[21:00:23] <SnoopJ> jinsun, oh neat
[21:00:49] <df00z> Hey - is there some tool or something that can be used to check python code?  Like say I typo a variable name, I'm running an app, it won't error until it hits my code and I fix my error.  Compiled languages would bark about such a problem at compile time.
[21:01:25] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[21:01:29] <jinsun> df00z: flake8, pylint, mypy
[21:01:38] <df00z> Cool.
[21:01:40] <df00z> Thanks
[21:02:21] <SnoopJ> pylint +1, but be sure to look at the configuration options. It's kinda overly opinionated by default.
[21:02:57] <df00z> I am checking pylint out!
[21:02:58] <phy1729> flake8 is good, but is much better with plugins
[21:05:14] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 268 seconds)
[21:05:30] *** Joins: cheater (~Username@user/cheater)
[21:05:43] *** Joins: Enitin (~Enitin@82.102.22.85)
[21:06:34] *** hackers is now known as remote
[21:07:05] <grym> df00z: and, of course, pytest
[21:07:26] <SnoopJ> pytest is good for running tests, but it doesn't examine your code
[21:07:30] <grym> (which has nothing to do with linting, but testing is really good)
[21:07:46] <grym> you'll still find out at runtime, but it's _your_ runtime
[21:08:41] <df00z> Yeah, once my project is big enough I need to start writing test cases
[21:09:01] <grym> df00z: it's big enough right now
[21:09:07] <nedbat> +1
[21:09:30] <grym> df00z: if for no other reason than when it expands you can be more confident that your growth isn't breaking what you've already done
[21:09:54] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:10:24] <SnoopJ> df00z, as an aside: Python is actually compiled, it just doesn't do very much code analysis at compile time.
[21:10:46] <df00z> Ah
[21:11:40] <df00z> Thanks again
[21:11:48] <SnoopJ> mypy can give you the same sort of static analysis if you're willing to annotate your code, and there are a handful of tools that try to be more "automatic" about it, too
[21:12:15] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:6ceb:a748:1495:958a) (Quit: Leaving)
[21:12:21] <SnoopJ> kinda like exploding out the static analysis parts of a compiler for [other languages] into separate tools that you opt into when you want them :)
[21:12:31] <df00z> I am doing some annotations, like builtin types on function params.  I kinda wish you could do annotation with custom types\classes with native python.
[21:12:46] <phy1729> You can?
[21:12:48] <SnoopJ> You can :)
[21:12:51] <df00z> Wha....?
[21:13:01] <SnoopJ> `class Foo: pass;  def func(arg: Foo): ...`
[21:13:08] <phy1729> Just do it (also if the class isn't defined yet you need to quote it)
[21:13:15] <df00z> like def(self, somenumber: int, someobject: MyCustomObject)
[21:13:18] <phy1729> or import something from __future__
[21:13:23] <SnoopJ> df00z, an annotation can contain any object
[21:13:29] <df00z> Oh I didnt know that
[21:13:38] <df00z> I read somewhere it couldn't, was about mypy and why ppl use it
[21:13:41] <SnoopJ> the runtime doesn't care about them, it just stores them for use by something else
[21:13:52] <SnoopJ> (like mypy)
[21:14:05] <df00z> Cool!
[21:14:07] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Remote host closed the connection)
[21:14:14] <df00z> That is news to me
[21:15:08] *** Joins: sleepingforest (~sleepingf@pool-74-98-255-220.pitbpa.fios.verizon.net)
[21:15:43] <Evolver> Is there a fast multicore and multiprocessing suitable version of `functools.cache`? I want a two layer cache, such that if the current process cache doesn't have a key, then the central cross-process cache is used.
[21:15:52] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[21:15:56] <Evolver> and it has to be fast, otherwise it defeats the purpose
[21:16:10] <foo> SnoopJ: thanks, I do have class.
[21:16:18] <SnoopJ> foo, you're welcome
[21:16:58] *** Joins: han-solo (~han-solo@user/han-solo)
[21:17:38] *** Joins: Omega037 (~Omega037@047-233-057-109.res.spectrum.com)
[21:19:48] *** Joins: Pandadub (~Barones@189.50.88.69)
[21:21:08] *** Joins: agonhajdari (~textual@user/agonhajdari)
[21:21:35] *** Joins: italo (~italo@2804:29b8:50c2:27da:e9d:92ff:fe87:c787)
[21:21:51] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:22:29] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Ping timeout: 268 seconds)
[21:24:23] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:24:33] *** Quits: df00z (~df00z@rrcs-50-75-26-170.nys.biz.rr.com) (Ping timeout: 256 seconds)
[21:27:31] *** Quits: dreamon (~dreamon@ppp-88-217-76-15.dynamic.mnet-online.de) (Ping timeout: 256 seconds)
[21:27:52] *** Joins: blcyber (~blcyber@216.74.235.178)
[21:28:08] *** Joins: MikZyth (~MikZyth@host-18-157-66-217.spbmts.ru)
[21:28:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[21:29:38] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:29:53] *** Quits: Pandadub (~Barones@189.50.88.69) (Ping timeout: 268 seconds)
[21:29:55] <Wulf> let's say I wanted to solve jigsaw puzzles using python and "ai", what packages should I look into? Idea is to take a photo of all pieces and the algo should tell me what goes where.
[21:32:40] <SnoopJ> Wulf, probably any solution to that problem will get OpenCV involved at some level. A relatively simple approach might involve SIFT, here's an example of that: https://medium.com/cornell-tech/jigsolved-computer-vision-to-solve-jigsaw-puzzles-70b8ad8099e5
[21:34:11] *** Joins: Betal (~Betal@user/betal)
[21:34:13] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[21:34:15] *** Joins: Barones (~Barones@earth.ps5.com.br)
[21:34:25] <SnoopJ> "One further optimization to note would have been to perform SIFT...on [a] mask of the piece"
[21:34:30] <nedbat> Wulf: maybe use https://adventofcode.com/2020/day/20 as a warmup :)
[21:34:37] *** Quits: blcyber (~blcyber@216.74.235.178) (Ping timeout: 240 seconds)
[21:34:48] <grym> heh heh, masochistic jigsaw puzzles :)
[21:35:05] <grym> all
[21:35:19] <grym> monochrome pieces, no sharp borders
[21:36:03] <SnoopJ> a more robust solution would probably end up looking like nedbat's link, and the computer vision part would be extracting the features reliably
[21:36:21] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[21:36:30] <SnoopJ> Another article discussing some of that: https://towardsdatascience.com/solving-jigsaw-puzzles-with-python-and-opencv-d775ba730660?gi=346d4604f333
[21:36:31] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[21:37:30] *** Joins: kittonian (~kittonian@cpe-70-114-148-180.austin.res.rr.com)
[21:37:32] *** Quits: slackcals (~slackcals@user/slackcals) (Ping timeout: 240 seconds)
[21:37:47] *** Joins: arinov (~arinov@213.194.126.155)
[21:38:02] <Wulf> SnoopJ: thanka, but that sounds like non-ai algos. I specifically want to utilize ai. Doesn't hace to be jigsaws.
[21:38:39] <lericson> Wulf: do you mean deep learning?
[21:39:02] *** Parts: kittonian (~kittonian@cpe-70-114-148-180.austin.res.rr.com) ()
[21:39:34] <Wulf> lericson: that's possible.
[21:39:34] *** Quits: pycode1 (~pycode3@2001:b07:5d28:551:b330:32dc:e2bc:4ce0) (Ping timeout: 260 seconds)
[21:39:48] <lericson> Wulf: i'd say deep reinforcement learning then
[21:39:58] <SnoopJ> Wulf, SIFT is an extremely common technique in computer vision systems, but I guess I don't understand what "AI" means to you here. Did you read the links?
[21:39:59] *** Quits: Barones (~Barones@earth.ps5.com.br) (Ping timeout: 256 seconds)
[21:40:44] *** Joins: Barones (~Barones@189.50.80.77)
[21:41:27] *** Joins: blcyber (~blcyber@216.74.235.178)
[21:41:55] *** Joins: zmt01 (~zmt00@user/zmt00)
[21:41:57] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[21:41:58] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[21:42:32] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 240 seconds)
[21:42:50] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:28e7:8905:311b:52c5)
[21:43:48] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[21:44:46] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:45:15] *** Joins: Pandadub (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[21:45:38] <lericson> DRL is uh difficult hough
[21:45:40] <lericson> though*
[21:45:50] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b1d4-3f07-bb3f-aa7e.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[21:46:00] <SnoopJ> it's certainly less robust
[21:46:29] <lericson> than what?
[21:46:48] <SnoopJ> a solution tailed to the problem domain
[21:46:53] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[21:46:54] <SnoopJ> tailored*
[21:47:09] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 268 seconds)
[21:47:21] <SnoopJ> (as in, all the other stuff in the CV toolbox that doesn't have the kitsch appeal of "deep")
[21:47:41] *** Quits: Barones (~Barones@189.50.80.77) (Read error: Connection reset by peer)
[21:48:47] <lericson> handcrafted solutions tend to be inelegant and have weird error modes
[21:48:51] *** Joins: analoq (~yashi@user/dies)
[21:48:53] <lericson> that's basically the why of deep learning
[21:48:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[21:48:58] *** Quits: five6433 (~five6@8.40.26.66) (Quit: The Lounge - https://thelounge.chat)
[21:49:14] <lericson> for jigsaw solving i'm not so sure but in a broader sense
[21:49:15] <Wulf> SnoopJ: your links describe a reasonable solution for solving jigsaws. but that's not my goal.
[21:49:26] <SnoopJ> Wulf, then, as I said, I do not know what your goal is.
[21:49:33] <SnoopJ> It probably rests on what you think "AI" means
[21:49:34] <lericson> calling it kitsch i think tips your hand a bit :p
[21:50:05] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:50:11] *** Quits: Forkk (~forkk@li926-228.members.linode.com) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[21:50:15] <Wulf> SnoopJ: maybe learning about 'drl' is.
[21:50:28] *** Parts: akk (~akk@174-28-122-47.albq.qwest.net) (+++)
[21:50:32] <gjvc> what is DRL ?
[21:50:37] <SnoopJ> lericson, well, I work for a company that does computer vision, and I've seen one of our boffins make a SIFT model that nails a similar problem to the wall in a day. Our inference systems that rest on top of convolutional neural networks have years of invested effort, and the failure modes are many.
[21:50:38] <lericson> deep reinforcement learning
[21:50:38] *** Joins: Forkk (~forkk@li926-228.members.linode.com)
[21:50:53] <gjvc> thank you lericson
[21:51:01] <SnoopJ> Wulf, if/when you figure it out, ask #python about that, then
[21:51:29] <Wulf> i'll take a look at pytorch
[21:52:17] *** Quits: bytehackr (~Sandipan@43.252.250.96) (Ping timeout: 240 seconds)
[21:52:38] <SnoopJ> If you're going to use a convolutional network I recommend making it mostly about feature extraction. If you try to train it to solve the puzzle, you're probably going to get way weirder failure modes (and need way more data)
[21:52:53] <SnoopJ> the data may not be a problem though since you can generate your training data, here
[21:54:34] <lericson> SnoopJ: are you suggesting that the SIFT master could replace your years of work inference stack? you should probably tell your manager :p
[21:54:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[21:54:54] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:54:56] *** Quits: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 245 seconds)
[21:55:16] <SnoopJ> lericson, I am not
[21:55:28] <SnoopJ> that was a solution tailored to a specific customer problem
[21:55:41] <SnoopJ> well, prospective customer problem :)
[21:56:57] *** Joins: rolo (~rolo@80-62-117-218-mobile.dk.customer.tdc.net)
[21:57:03] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[21:57:13] <lericson> i think this topic is very complicated and the motivations and drawbacks change between domains
[21:57:30] <lericson> for feature extraction and detection, DL can be really good, and also really bad
[21:57:48] <SnoopJ> the space of failure states is massive in comparison
[21:58:01] <SnoopJ> which is not a shock, the number of parameters in the model is, too
[21:58:23] <lericson> the space of images is essentially infinite
[21:58:33] <SnoopJ> erm
[21:58:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[21:59:17] <lericson> the old wisdom is that you shouldn't have more parameters than you have data, so thankfully, infinity is the bound
[21:59:21] *** Joins: five6433 (~five6@8.40.26.73)
[21:59:32] <SnoopJ> right, and "deep" anything is basically "what if we had millions of parameters"
[21:59:41] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:59:43] <SnoopJ> "and changed them in very implicit ways"
[22:00:02] <lericson> right, and the result is things like DALL-E, GPT-3 and so on
[22:00:03] <SnoopJ> you can access novel solutions this way to be sure, but you can also find all sorts of pathological local minima
[22:00:04] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[22:00:17] <SnoopJ> well, generative networks are a "parlor trick" for the most part
[22:00:18] <lericson> truly groundbreaking results
[22:00:38] <SnoopJ> the Transformer architecture is cool, but the advances beyond its creation are "we had it learn more of Reddit"
[22:00:38] <whatsupdoc> Hi, I'm trying to import a script that has arguments and the script fails when I import it.
[22:01:03] <SnoopJ> lericson, and to my original point: the failure modes of something like GPT-3 are incredibly nuanced
[22:01:09] <whatsupdoc> How do I make the script not run
[22:01:23] <lericson> the failure modes of ORB-SLAM are incredibly un-nuanced and obvious :p
[22:01:31] *** Quits: rolo (~rolo@80-62-117-218-mobile.dk.customer.tdc.net) (Ping timeout: 256 seconds)
[22:01:50] <grym> whatsupdoc: wrap anything you don't want to run at import in either an `if __name__ =="__main__"` block at the bottom of the script, or in a function
[22:01:55] <grym> whatsupdoc: or ideally both
[22:02:03] <SnoopJ> lericson, if you think I'm arguing "not-deep solutions are always more robust," then you have misunderstood me.
[22:02:21] <whatsupdoc> grym: thank you! i forgot all about that
[22:02:37] <SnoopJ> I do think there's a tendency to consider "deep" reinforcement learning as superior because it's trendy
[22:03:03] <lericson> yes of course, it's hyped
[22:03:04] <SnoopJ> I'm certain it would require a lot more data to solve this problem
[22:03:06] <lericson> no doubt
[22:03:14] <SnoopJ> (which isn't much of a problem because you can generate it, but...)
[22:04:21] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[22:04:22] <SnoopJ> besides, domain-specific solves are usually far more interesting ;)
[22:04:37] <whatsupdoc> Is it possible to create an object on demand in python? Like in javascript, you can just do something like { asdf: "alsdkjf", alskdjf: "alsdjf"}
[22:04:48] <lericson> no, whatsupdoc
[22:05:00] <grym> """lo, an object"""
[22:05:07] <SnoopJ> whatsupdoc, do you want a dictionary?
[22:05:22] *** Quits: nanobot567 (~pi@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Quit: WeeChat 3.0)
[22:05:24] <whatsupdoc> kind of, but not really
[22:05:32] <SnoopJ> perhaps you could say more about that
[22:05:37] <whatsupdoc> i want a dictionary, but i also want dot notation
[22:05:56] <grym> whatsupdoc: there's no good way to do that
[22:06:02] <grym> there are some hacks
[22:06:03] <SnoopJ> there are libraries that provide dictionary-alikes with dot notation, but eh
[22:06:07] <Evolver> Is it possible for me to see if a key is in a `functools.cache` cache without risking a call to the underlying wrapped function?
[22:06:07] <grym> but they have ... trouble
[22:06:22] <grym> whatsupdoc: do you intend on adding or removing keys over the lifespan of the object
[22:06:30] <whatsupdoc> no
[22:06:32] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Read error: Connection reset by peer)
[22:06:34] <grym> whatsupdoc: write a class
[22:06:43] <SnoopJ> +1
[22:06:45] <whatsupdoc> I know but.....
[22:06:46] <grym> with daclasses,attrs, pydantic,... for terseness if you like
[22:06:51] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[22:06:51] <grym> (they're very nice!)
[22:06:54] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[22:06:54] <whatsupdoc> A single class for a single object
[22:06:59] <grym> whatsupdoc: i do that all the time
[22:07:01] <lericson> there is a tendency to be negative about new tech because it gets hyped up, and overused (perhaps due to toy projects such as what Wulf was looking for) -- we have to be moderate, and it seems a bit over-the-line to call all of DL kitsch, and the latest breakthroughs in generative models parlor tricks, that's all
[22:07:06] <lericson> now i have to go :) take care
[22:07:14] <SnoopJ> lericson, I don't agree, but I understand where you're coming from
[22:07:21] *** Quits: synbiose (~synbiose@user/synbiose) (Remote host closed the connection)
[22:07:53] <grym> whatsupdoc: bonus: they're a _lot_ easier to refactor!
[22:08:20] *** Quits: thevishy (~Nishant@2405:201:f005:c007:2dcc:1488:1871:6935) (Quit: Leaving)
[22:08:21] <SnoopJ> lericson, call it a bias borne out of my concerns about how hard it is to say *why* a "deep" model failed when one does.
[22:08:35] <Evolver> #RL is a place for paRlor trickLes
[22:09:01] <whatsupdoc> ok, i wrote a class lol
[22:09:07] <grym> yay!
[22:09:47] *** Joins: ld (~a0z1@193.27.14.37)
[22:10:11] <lericson> SnoopJ: absolutely, the system becomes a lot more opaque
[22:10:21] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 250 seconds)
[22:10:38] <lericson> i just treat it like really fancy regression
[22:10:42] <SnoopJ> well, that's what it is
[22:10:47] <SnoopJ> (that's what *most* things are)
[22:11:15] *** Joins: test (~WDAGUtili@78.156.235.93)
[22:11:28] <han-solo> whatsupdoc: i sometimes use `types.SimpleNamespace`
[22:12:38] <whatsupdoc> cool, so it does exist lol
[22:13:00] *** Joins: Enitin (~Enitin@82.102.22.85)
[22:13:19] *** Parts: test (~WDAGUtili@78.156.235.93) ()
[22:14:16] *** Joins: Linux77 (~LinuMage@186.233.183.58)
[22:14:41] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[22:16:45] <Evolver> It exists in many forms -- collections.namedtuple, types.SimpleNamespace, argparser.Namespace
[22:16:58] <SnoopJ> I would recommend strongly against namedtuple
[22:17:03] <Evolver> wh
[22:17:04] <SnoopJ> SimpleNamespace is nice
[22:17:13] <SnoopJ> Evolver, because it's a tuple with a side of lies
[22:17:16] <grym> https://www.attrs.org/en/stable/why.html#namedtuples
[22:17:26] <SnoopJ> vs. SimpleNamespace being an actual type
[22:18:26] <Evolver> Which one has the max performance for random attr lookups?
[22:18:34] <grym> who cares
[22:18:58] <grym> (i don't know, you can find out if you like, though)
[22:19:26] <SnoopJ> Evolver, my recommendation is based on semantics of the code, not performance.
[22:19:40] <SnoopJ> you are of course free to ignore that concern entirely
[22:20:13] *** Quits: cthulchu (~Cthulchu@184-090-172-137.res.spectrum.com) (Ping timeout: 256 seconds)
[22:20:21] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:20:27] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b1d4-3f07-bb3f-aa7e.res6.spectrum.com)
[22:21:43] <jinsun> namedtuple is good to fix existing code that returns tuple, not so much for new code
[22:22:34] *** Joins: stdout (~stdout@2605:ab80:b000:7202:3e12:af82:936c:2ff6)
[22:22:50] *** Joins: synbiose (~synbiose@user/synbiose)
[22:22:59] <SnoopJ> I would guess it might be slower in the cases where the O(N) scan of the names loses to O(1) retrieval of an attribute, but it's just a guess.
[22:23:55] *** Joins: Naan (~naan@user/naan)
[22:26:19] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[22:27:17] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[22:28:21] *** Joins: esther (~esther@2607:fb90:20d4:f19c:fe6a:4882:27b3:29d2)
[22:28:34] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[22:28:45] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[22:29:26] *** Quits: Pandadub (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Remote host closed the connection)
[22:29:47] <SnoopJ> ah, it doesn't do such a scan
[22:30:23] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:30:28] <SnoopJ> there's that, at least: https://github.com/python/cpython/blob/main/Lib/collections/__init__.py#L485-L487
[22:30:41] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[22:31:39] *** Parts: afidegnum (~user@102.176.94.243) (ERC (IRC client for Emacs 27.2))
[22:31:54] *** Joins: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net)
[22:32:51] <jiffe> when including unit tests in a pypi package, would those tests generally run at(/before) package time or at install time?
[22:33:16] *** Joins: slackcals (~slackcals@user/slackcals)
[22:33:39] <grym> i wouldn't expect them to automatically run at all
[22:33:57] <jiffe> that's why I didn't include automatic
[22:34:33] <nedbat> jiffe: it's not typical to include tests in a pypi package, or for people installing the package to expect to run tests
[22:34:37] <SnoopJ> jiffe, what do you want the tests to do?
[22:34:39] <grym> i would expect them to run if the installer/client specifically tells them to run at some time after pip install is done, but not otherwise
[22:34:49] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[22:35:06] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[22:35:12] <SnoopJ> I would normally expect them to be run as a prerequisite for packaging in the context of this question, running them at install time sounds like it wouldn't be worth it
[22:35:54] <jiffe> that's what I figured, I would expect to run unit testing before actually doing the packaging, I was just googling the subject and found a variety of answers so wasn't sure
[22:36:43] <SnoopJ> Normally I'd expect a user who cares about the test suite to have the package source in hand
[22:37:31] <SnoopJ> But I have at least once vendored tests into a package because I wanted to test the package once it was integrated in its operating environment
[22:37:32] *** Quits: blcyber (~blcyber@216.74.235.178) (Ping timeout: 240 seconds)
[22:38:26] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[22:38:43] *** Quits: truth (~truth@user/truth) (Ping timeout: 250 seconds)
[22:39:17] *** Quits: esther (~esther@2607:fb90:20d4:f19c:fe6a:4882:27b3:29d2) (Ping timeout: 240 seconds)
[22:40:15] *** Joins: truth (~truth@user/truth)
[22:41:45] *** Joins: agonhajdari (~textual@user/agonhajdari)
[22:41:52] *** Joins: esther (~esther@136.62.7.216)
[22:42:08] *** Quits: TechTheory (~lwait@2600:8800:7c03:c400:ce:a77e:7c3d:6b39) (Quit: Leaving.)
[22:45:21] *** Joins: ensyde (~ensyde@2600:1702:2e30:1a40:d506:18a6:e0ef:8a3a)
[22:46:29] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[22:49:31] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[22:50:17] *** Joins: djapo (~archangel@user/djapo)
[22:52:19] *** Joins: Thanatos (~Thanatos@105.112.75.226)
[22:52:31] *** Quits: tdsmith (~tdsmith@kvm.kumokasumi.org) (Read error: Connection reset by peer)
[22:53:54] *** Joins: paprika (~pepper@user/pepper)
[22:54:22] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 268 seconds)
[22:54:25] *** Quits: pepper (~pepper@user/pepper) (Read error: Connection reset by peer)
[22:54:38] *** Quits: LordVan (~lordvan@gentoo/developer/lordvan) (Quit: Leaving)
[22:55:13] *** paprika is now known as pepper
[22:55:29] *** Joins: tdsmith (~tdsmith@kvm.kumokasumi.org)
[22:57:59] *** Quits: stockholm (~Andreas@p200300d2c704c500c416904ec59fe036.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[22:59:08] *** Joins: twomoon (~twomoon@ip72-199-116-21.sd.sd.cox.net)
[22:59:48] *** Joins: ExpiredKebab (~sgreadly@2407:7000:a239:503:fc1e:6816:1e5:84de)
[22:59:53] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[23:00:53] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-b1d4-3f07-bb3f-aa7e.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[23:01:32] *** Joins: zer0bitz (~zer0bitz@194.34.133.91)
[23:01:46] *** Joins: fikran (~fikran@user/fikran)
[23:03:14] *** Joins: Adrixan (~Adrixan@218.72.75.34.bc.googleusercontent.com)
[23:03:20] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[23:03:38] *** Joins: qlixed (~qlixed@181.44.129.13)
[23:04:05] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 250 seconds)
[23:04:51] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 268 seconds)
[23:04:55] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:06:38] *** Quits: PocketKiller (PacKetIV@user/packetiv) (Read error: Connection reset by peer)
[23:07:57] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 240 seconds)
[23:08:33] *** Quits: sleepingforest (~sleepingf@pool-74-98-255-220.pitbpa.fios.verizon.net) (Changing host)
[23:08:33] *** Joins: sleepingforest (~sleepingf@user/sleepingforest)
[23:09:11] *** Joins: upsala (~zcb@185.209.196.169)
[23:09:31] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[23:09:57] *** Joins: ssbr (~ssbr@python/site-packages/ssbr)
[23:10:15] *** Joins: blcyber (~blcyber@216.74.235.178)
[23:10:45] *** Joins: arseru (uid515527@user/arseru)
[23:10:53] <arseru> Hi there! How would you manage to do a GET request of this? https://finviz.com/quote.ashx?t=INTC
[23:10:57] <arseru> It seems there's a cloudflare issue and I get a 503 error
[23:11:32] <nedbat> arseru: wouldn't it just be:  response = requests.get("https://finviz.com/quote.ashx?t=INTC")
[23:11:50] <jiffe> there's no way to add a directory a/b to my import path as x.y such that if a/b/q.py exists I can import x.y.q ?
[23:12:01] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:a1d2:a2a5:b27e:8986) (Quit: Textual IRC Client: www.textualapp.com)
[23:12:02] <grym> you may need to set your headers s.t. finviz doesn't catpcha you, i suppose
[23:12:21] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[23:12:32] *** Joins: jay-m1262 (~jay-m@gateway/vpn/pia/jay-m126)
[23:12:33] *** Joins: abraxas (~abraxas@2600:8805:c880:3:c7fe:fc8e:f2cc:8056)
[23:12:34] <arseru> nedbat: yes, but I get this https://bpa.st/V32A which seems to indicate some barrier before the data
[23:12:47] <arseru> grym: how can I do that?
[23:13:02] <sleepingforest> is it possible to have tox only run an environment when explicitly specified? i.e. tox -e explicit
[23:13:28] <arseru> sleepingforest: yes
[23:13:43] <nedbat> arseru: it seems like they have some layer of protection to prevent automated scraping.
[23:13:49] <sleepingforest> im aiming to always run black --check --diff src/, but make the dev run black
[23:14:08] <sleepingforest> for a ci pipeline
[23:14:09] <nedbat> sleepingforest: don't put "explicit" into your envlist setting
[23:14:28] <sleepingforest> nedbat arseru : :) thanks
[23:15:17] <arseru> nedbat: I can get it without problems with curl, it's just that the requests library doesn't seem to be able to retrieve it :S
[23:15:46] <grym> arseru: curl -vvv and see what headers are being sent
[23:15:53] <grym> and then copy them in the requests.get(...)
[23:16:00] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca)
[23:16:00] <grym> (there's a headers= kwarg)
[23:16:14] <arseru> grym: thanks! I was doing that now :)
[23:16:17] <grym> :D
[23:16:31] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[23:17:01] *** Quits: legola (~legola@46.235.101.65) (Remote host closed the connection)
[23:17:32] <bmr> sleepingforest: what IDE do your devs use?
[23:17:59] <bmr> just thinking black might make it messy, everybody except perhaps 5% uses pycharm, which formats excellent by itself
[23:18:15] <bmr> also
[23:18:18] <arseru> grym: all this? https://bpa.st/KHHA
[23:18:35] *** Quits: ssbr (~ssbr@python/site-packages/ssbr) (Ping timeout: 256 seconds)
[23:18:45] <bmr> formatting as a part of ci/cd pipeline implies your CI-engine has write-access to the source repository -- this is hugely insecure and very wrong :)
[23:19:26] *** Quits: darksun (~darksun@user/darksun) (Quit: puff)
[23:20:16] <grym> arseru: i don't see user-agent, and i was expecting to
[23:20:22] <grym> curious
[23:20:28] <sleepingforest> bmr: i do not format by CI. I check formatting with CI
[23:20:37] <bmr> ah!
[23:20:39] <sleepingforest> also devs use whatever they want
[23:20:53] <sleepingforest> allowing an explicit tox env to do this makes life easier for all :)
[23:20:59] <bmr> hehe
[23:21:18] *** Quits: Trashlord (~trash@user/trashlord) (Ping timeout: 260 seconds)
[23:21:20] <bmr> tainted? what? everything is tainted!
[23:22:16] <grym> sleepingforest: pre-commit is nice for this sort of thing
[23:22:25] <grym> your team has to install it
[23:22:29] <grym> but then it's automagic
[23:23:55] <sleepingforest> grym: yeah i considered having a .pre-commit.yml.  I think i like having tox manage the venv though.
[23:24:03] <sleepingforest> maybe i could still do that
[23:24:13] <SnoopJ> indeed
[23:26:07] *** Joins: PocketKiller (PacKetIV@user/packetiv)
[23:26:32] <sleepingforest> sometimes when im reading 20 different things that slightly overlap, i need to let the dust settle a bit
[23:27:43] <SnoopJ> a mentor of mine once told me "You don't understand something until you've forgotten it twice" and I would say it has been generally true for me with respect to tooling
[23:27:55] *** Quits: miique (~miique@181.46.139.166) (Ping timeout: 250 seconds)
[23:30:52] <sleepingforest> i agree with that heh
[23:31:10] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Read error: Connection reset by peer)
[23:31:21] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[23:31:32] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[23:31:58] *** Quits: Thanatos (~Thanatos@105.112.75.226) (Read error: Connection reset by peer)
[23:31:59] *** Quits: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 268 seconds)
[23:32:43] *** Joins: Thanatos (~Thanatos@105.112.181.16)
[23:33:19] <Evolver> Can a `multiprocessing.Manager()` instance not be used from multiple worker processes? I'm getting many errors when I try, e.g. TypeError: 'NoneType' object cannot be interpreted as an integer
[23:33:36] *** Joins: Feuermagier_ (~Feuermagi@84.17.49.78)
[23:33:46] <Evolver> This seems to be something that used to work up until a few years ago, and then it just stopped working.
[23:33:59] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 250 seconds)
[23:34:30] *** Joins: RoyK^ (~roy@user/royk)
[23:35:57] *** Quits: esther (~esther@136.62.7.216) (Ping timeout: 240 seconds)
[23:35:57] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Ping timeout: 240 seconds)
[23:36:49] *** RoyK is now known as Guest7422
[23:37:00] *** RoyK^ is now known as RoyK
[23:37:00] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[23:37:16] *** Joins: esther (~esther@2607:fb90:20d4:f19c:d1a8:2120:302a:5f4b)
[23:37:39] *** Quits: Guest7422 (~roy@user/royk) (Ping timeout: 250 seconds)
[23:38:22] <bjs> Evolver: well the error is suggesting you actually have a None not a multiprocessing Manager object at all
[23:39:36] <bjs> Evolver: but I'm a little confused, what do you mean by "used from" the worker process?
[23:39:58] <bjs> Sort of the entire point of the Manager is to produce values to be used in child processes (but where the actual data lives in the parent )
[23:40:57] *** Joins: jiffe (~jiffe@47-220-182-140.gtwncmkt04.res.dyn.suddenlink.net)
[23:41:51] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:41:52] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:42:25] <arseru> How can I move columns 3 and 4 for example, to extend column 1 in pandas?
[23:44:22] <Evolver> bjs: I'm investigating, but it's funny how it works fine when I use 0 worker processes.
[23:44:28] <Evolver> bjs: and do all my work in the main process
[23:45:45] <Evolver> arseru: not clear
[23:46:03] *** Quits: blcyber (~blcyber@216.74.235.178) (Read error: Connection reset by peer)
[23:46:03] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[23:46:52] <arseru> like if a dataframe would have col 1 with "name", col 2 with the values, col 3 with "name" again, col 4 with values, etc and I want to join rows of col 1&3 and col 2&4
[23:46:54] *** Joins: grooverman (~grooverma@177.102.117.95)
[23:46:56] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Quit: leaving)
[23:48:01] *** Quits: grooverman_ (~grooverma@177.102.119.40) (Ping timeout: 268 seconds)
[23:49:50] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[23:50:43] <Evolver> arseru: instead of going back and forth on this, it'll help if you show a notebook with a proper sample of your inputs and expected outputs
[23:51:32] *** Quits: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[23:51:40] *** Joins: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net)
[23:52:07] *** Joins: roxfan (roxfan@29.38-136-217.adsl-dyn.isp.belgacom.be)
[23:52:28] <arseru> Evolver: is this enough? https://i.imgur.com/ATkd4l2.png I would like to move column 2 below col 0, and col 3 below col 1
[23:53:56] <arseru> Evolver: I'm trying pd.concat() but I can't find the right way to combine them
[23:54:06] <jinsun> `pd.concat([df[[0, 1]], df[[2, 3]]])` ?
[23:55:06] *** Joins: aphysically (~aphysical@user/aphysically)
[23:55:51] <jinsun> the index will be repeated, but you can reset that later
[23:56:08] *** Joins: MrFantastik (~f@2607:f598:bbda:10:4e9d:551a:bc14:258e)
[23:56:14] <jinsun> or give ignore_index=True to pd.concat I guess
[23:57:02] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: Hay te huacho!)
[23:57:15] <aphysically> jinsun: https://mail.python.org/archives/list/typing-sig@python.org/thread/EMUD2D424OI53DCWQ4H5L6SJD2IXBHUL/
[23:57:22] <aphysically> see also https://github.com/python/typing/issues/996
[23:57:37] <arseru> jinsun: both give me this https://i.imgur.com/4Hl9idJ.png
[23:57:42] <aphysically> would definitely fix some typeguard pain points
[23:58:02] <jinsun> aphysically: ah nice, so he is planning to amend or extend the PEP
[23:58:14] <aphysically> currently soliciting feedback
[23:59:06] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[23:59:15] <jinsun> arseru: yeah you can't reset later, will have to ignore_index=True
[23:59:18] *** Joins: earendel (uid498179@user/earendel)
[23:59:32] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:59:57] *** Quits: esther (~esther@2607:fb90:20d4:f19c:d1a8:2120:302a:5f4b) (Ping timeout: 240 seconds)
