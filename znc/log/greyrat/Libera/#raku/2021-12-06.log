[00:00:35] <vasko> I guess I can just check `|c` is a Seq and then test if `|c[0]` is an Int, then `say(|c[1..]) if $*VERBOSE >= |c[0]`?
[00:02:58] <ggoebel> vasko: not sure if this is what you're looking for... https://docs.raku.org/language/operators#prefix_|
[00:05:21] <vasko> I think I'll settle for `sub verbose(:$n = 1, |c) { say(|c) if $*verbose >= $n }` so I can do `verbose :n(3), 'Only print this if the program is called with -v=3 or more'`
[00:20:52] <gfldex> vasko: you can have a `sub MAIN(:v($*VERBOSE), :D(:debuglevel(*$DEBUG-LEVEL)) = 1) {}`
[00:22:19] <MasterDuke> .tell atropaxer https://gist.github.com/MasterDuke17/b9ff1efd4057e1bd62da77a70ef2eca7 is a lightly edited version, it really didn't need a whole lot
[00:22:20] <tellable6> MasterDuke, I haven't seen atropaxer around, did you mean atroxaper?
[00:22:36] <MasterDuke> .tell atroxaper https://gist.github.com/MasterDuke17/b9ff1efd4057e1bd62da77a70ef2eca7 is a lightly edited version, it really didn't need a whole lot
[00:22:37] <tellable6> MasterDuke, I'll pass your message to atroxaper
[00:29:41] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[00:30:03] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de)
[00:36:32] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[00:44:07] *** Quits: nebuchadnezzar (~dad@82-65-17-178.subs.proxad.net) (Read error: Connection reset by peer)
[00:56:57] *** Joins: jjido (~Denis@90.213.58.125)
[00:59:17] <vasko> ggoebel I just ran into the same problem :D
[00:59:40] <vasko> > ("123".."234").map: *.say
[00:59:40] <vasko> 123
[00:59:40] <vasko> 124
[00:59:40] <vasko> 133
[00:59:40] <vasko> 134
[00:59:41] <vasko> 223
[00:59:41] <vasko> 224
[00:59:42] <vasko> 233
[00:59:42] <vasko> 234
[01:00:24] <vasko> Is why it was failing. I personally went for `.map: *.Int` I feel your way is to perly :P
[01:14:42] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:22:26] <ggoebel> vasko: thanks! So raku supports str ranges. Though I have to say, I don't understand how they work.
[01:22:48] <ggoebel> m: ("12".."21").flat.say
[01:22:48] <camelia> rakudo-moar d7152ea59: OUTPUT: «(12 11 22 21)␤»
[01:22:58] <ggoebel> m: ("12".."19").flat.say
[01:22:58] <camelia> rakudo-moar d7152ea59: OUTPUT: «(12 13 14 15 16 17 18 19)␤»
[01:24:53] <MasterDuke> ranges operated by calling .succ https://docs.raku.org/routine/succ#(Str)_method_succ
[01:25:33] <gfldex> vasko: Why so verbose? `».Int` will cut it! :->
[01:31:11] <vasko> gfldex I'm still learning. Cool, any time I would want to use `.map` over `»`?
[01:32:01] <gfldex> It's a hyper ans as such a candiate for auto-threading. Beside that, it's just shorter for simple cases. 
[01:32:34] <ggoebel> MasterDuke: thanks for the link to the relevant docs. Maybe I'm being dim, but I still don't understand how "12".."21" increment steps result in (12 11 22 21)
[01:33:35] <ggoebel> "Ranges always go from small to larger elements; if the start point is bigger than the end point, the range is considered empty."
[01:33:41] <gfldex> m: say ('filename-aaa.txt' .. 'filename-zzz.txt')[1..10, 900..910];
[01:33:42] <camelia> rakudo-moar d7152ea59: OUTPUT: «((filename-aab.txt filename-aac.txt filename-aad.txt filename-aae.txt filename-aaf.txt filename-aag.txt filename-aah.txt filename-aai.txt filename-aaj.txt filename-aak.txt) (filename-biq.txt filename-bir.txt filename-bis.txt filename-bit.txt filename-…»
[01:33:45] <ggoebel> how is "11" a larger element than "12"
[01:33:57] <gfldex> that's what it's meant to be used for
[01:34:06] <MasterDuke> m: say "12".succ
[01:34:06] <camelia> rakudo-moar d7152ea59: OUTPUT: «13␤»
[01:34:24] <MasterDuke> m: .say for "12".."21"
[01:34:24] <camelia> rakudo-moar d7152ea59: OUTPUT: «12␤11␤22␤21␤»
[01:34:31] *** Joins: jjido (~Denis@90.213.58.125)
[01:34:51] <MasterDuke> that's...interesting
[01:34:52] <gfldex> You are iteration over a subset of ASCII, so to speak.
[01:36:58] <MasterDuke> well, it's been that was since the initial christmas release. raku does str incrementing/ranges differently than perl, but i can't quite explain that result right now
[01:38:11] *** Quits: RakuIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net) (Remote host closed the connection)
[01:38:11] *** Joins: Geth (~LizBot@ipv4-wenzperl.connected.by.freedominter.net)
[01:38:20] *** Joins: RakuIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net)
[01:40:00] *** Joins: TempIRCLogger (~RakuIRC@ipv4-wenzperl.connected.by.freedominter.net)
[01:42:05] <ggoebel> per Coke and gfldex's suggestions, I'll just have to remember coerce things into Ints to avoid character ranges.
[01:44:40] <ggoebel> I think I prefer changing line 10 to: my (Int(Str) $x1, Int(Str) $y1, Int(Str) $x2, Int(Str) $y2) = .split(/\D+/, :skip-empty);
[01:45:06] <ggoebel> more verbose, but hard to get confused about what's going on
[01:45:33] <ggoebel> thanks for all the help
[01:55:08] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:04:50] *** Quits: MoC (~moc@user/moc) (Quit: Konversation terminated!)
[02:06:55] <tbrowder> why not use 12..21 if that’s what you intend?
[02:07:21] <gfldex> He does now. That's where the bug was.
[02:28:28] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[02:49:31] *** Quits: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 245 seconds)
[03:05:08] *** Joins: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net)
[03:10:31] *** Quits: Skarsnik_ (~Skarsnik@91-170-31-218.subs.proxad.net) (Ping timeout: 268 seconds)
[03:32:48] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:45:44] <tbrowder> .tell tony-o fez problem solved with "zef upgrade fez"
[03:45:45] <tellable6> tbrowder, I'll pass your message to tonyo
[03:52:47] <tonyo> Thanks tbrowder, another update coming soon. I'm testing fez orgs out right now
[03:52:49] <tellable6> 2021-12-04T17:25:58Z #raku <tbrowder> tonyo my fez user name was entered as tbrowder. new App::Mi6 expects it to be "zef:tbrowder". can i change it in the .fez-config.json file or do i have to start over with a new fez account, or should mi6 deal with it?
[03:52:49] <tellable6> 2021-12-04T23:37:42Z #raku <tbrowder> tonyo i need help with my fez issue #49. mi6 barfs on the "fez upload --file=Foo.tar.gz" part, and i don't understand yr readme on the tar issue.
[03:54:41] <tonyo> .tell tbrowder I know you're all set but just for posterity, fez expects your meta auth to be `zef:tbrowder`. What's the error and what info were you looking for so I can make the readme better?
[03:54:42] <tellable6> tonyo, I'll pass your message to tbrowder
[03:55:17] *** Quits: [Coke] (~coke@172.58.225.143) (Ping timeout: 256 seconds)
[03:58:04] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[03:58:45] *** Joins: Colt (~Colt@user/colt)
[03:58:52] *** Quits: abraxxa-home (~alex@smtp.hartmaier.priv.at) (Remote host closed the connection)
[04:23:18] *** Joins: monkey_ (~user@190.104.116.153)
[04:35:20] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[05:13:56] *** Quits: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 252 seconds)
[05:19:20] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[05:41:57] <tbrowder> tony-o: it's working fine. i just had an old version. a Changes file would have helped see the fix.
[05:41:59] <tellable6> 2021-12-06T00:24:42Z #raku <tonyo> tbrowder I know you're all set but just for posterity, fez expects your meta auth to be `zef:tbrowder`. What's the error and what info were you looking for so I can make the readme better?
[06:19:20] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[06:19:20] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[06:20:25] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[06:51:17] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:f767:b15a:e5b1:96f0) (Ping timeout: 268 seconds)
[06:52:12] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:b36c:1fc0:956d:d06c)
[07:52:12] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:52:13] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:52:13] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:52:13] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:52:13] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:52:13] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:52:13] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:52:13] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:52:13] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:52:13] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:52:13] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:52:13] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:52:13] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:52:13] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:52:13] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:52:13] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:52:13] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[07:52:13] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[07:52:31] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[07:52:32] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[07:52:32] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[07:52:43] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[07:52:53] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[07:53:06] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[07:54:38] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[07:54:46] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[07:55:11] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[08:10:03] *** Joins: Flwyd (~Flwyd@c-174-63-75-106.hsd1.vt.comcast.net)
[08:38:50] *** Quits: oodani (~oodani@00dani.me) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[08:39:35] *** Joins: oodani (~oodani@00dani.me)
[08:40:28] *** Joins: frost (~frost@user/frost)
[08:52:37] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[08:53:24] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[08:54:37] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[08:54:58] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[08:56:28] *** Quits: Manifest0 (~Manifest0@cst2-65-109.cust.vodafone.cz) (*.net *.split)
[08:56:28] *** Quits: jjatria (~jjatria@68.183.32.235) (*.net *.split)
[08:56:28] *** Quits: sjn (sjn@sprocket.nvg.ntnu.no) (*.net *.split)
[08:56:28] *** Quits: tobs (~tobs@taboege.de) (*.net *.split)
[08:56:29] *** Quits: gugod (gugod@li7-202.members.linode.com) (*.net *.split)
[08:56:29] *** Quits: ilogger2 (~ilogger2@colabti.org) (*.net *.split)
[08:56:29] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (*.net *.split)
[08:56:29] *** Quits: Flwyd (~Flwyd@c-174-63-75-106.hsd1.vt.comcast.net) (*.net *.split)
[08:56:29] *** Quits: euandreh (~euandreh@2804:14c:33:9fe5:b36c:1fc0:956d:d06c) (*.net *.split)
[08:56:29] *** Quits: Colt (~Colt@user/colt) (*.net *.split)
[08:56:29] *** Quits: seednode (~seednode@user/seednode) (*.net *.split)
[08:56:29] *** Quits: qorg11 (~lain@2605:6400:c022:fa04:1312:1337:0:beef) (*.net *.split)
[08:56:30] *** Quits: MasterDuke (~MasterDuk@94.0.188.131) (*.net *.split)
[08:56:30] *** Quits: renormalist (~ss5@renormalist.net) (*.net *.split)
[08:56:30] *** Quits: Summer (~summer@user/summer) (*.net *.split)
[08:56:30] *** Quits: gcd (gd@104-9-69-236.lightspeed.nsvltn.sbcglobal.net) (*.net *.split)
[08:56:30] *** Quits: kybr (ky@2600:3c01::f03c:92ff:feb3:476f) (*.net *.split)
[08:56:30] *** Quits: sftp (~sftp@79.174.36.182) (*.net *.split)
[08:56:30] *** Quits: dogbert17 (~dogbert@c83-253-59-194.bredband.tele2.se) (*.net *.split)
[08:56:31] *** Quits: silug (~silug@068-188-018-154.biz.spectrum.com) (*.net *.split)
[08:56:31] *** Quits: dmc00 (~dmc@47.186.241.232) (*.net *.split)
[08:56:31] *** Quits: ptc (~cochrane@static.150.233.203.116.clients.your-server.de) (*.net *.split)
[08:56:31] *** Quits: lucs (~lucs@user/lucs) (*.net *.split)
[08:56:32] *** Quits: tonyo (~tonyo@ec2-54-190-144-97.us-west-2.compute.amazonaws.com) (*.net *.split)
[08:56:32] *** Quits: pejayes (~pejayes@mail.patricks.tech) (*.net *.split)
[08:56:32] *** Quits: thowe (~thowe@66.39.169.133) (*.net *.split)
[08:56:32] *** Quits: sivoais (~zaki@199.19.225.239) (*.net *.split)
[08:56:32] *** Quits: vrurg (~vrurg@45.74.95.181) (*.net *.split)
[08:56:32] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (*.net *.split)
[08:56:32] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (*.net *.split)
[08:56:32] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (*.net *.split)
[08:56:32] *** Quits: mtj (~mtj@2400:8902::f03c:91ff:fe93:b7f1) (*.net *.split)
[08:56:32] *** Quits: summerisle (~eof@tty3.dev) (*.net *.split)
[08:56:32] *** Quits: jast (jast@zoidberg.org) (*.net *.split)
[08:56:33] *** Quits: Ulti (~matt@ec2-35-178-236-167.eu-west-2.compute.amazonaws.com) (*.net *.split)
[08:56:33] *** Quits: avuserow (~ak@205.178.97.166) (*.net *.split)
[08:56:33] *** Quits: goblin (~jaa@yatima.uukgoblin.net) (*.net *.split)
[08:56:33] *** Quits: mjgardner (sid182628@id-182628.ilkley.irccloud.com) (*.net *.split)
[08:56:33] *** Quits: skaji (sid178483@tinside.irccloud.com) (*.net *.split)
[08:56:33] *** Quits: tbrowder (sid168924@lymington.irccloud.com) (*.net *.split)
[08:56:33] *** Quits: rjbs (sid498898@uxbridge.irccloud.com) (*.net *.split)
[08:56:33] *** Quits: SmokeMachine (sid19088@tinside.irccloud.com) (*.net *.split)
[08:56:33] *** Quits: peder (4822@nidur.ifi.uio.no) (*.net *.split)
[08:56:33] *** Quits: hexology (~hexology@user/hexology) (*.net *.split)
[08:56:33] *** Quits: corwin (someone@fosshost/director/corwin) (*.net *.split)
[08:56:33] *** Quits: jercos (jercos@xyl.be) (*.net *.split)
[08:56:34] *** Quits: BinGOs (~bitbucket@user/bingos) (*.net *.split)
[08:56:34] *** Quits: jcallen (quassel@user/jcallen) (*.net *.split)
[08:56:34] *** Quits: ugexe (ugexe@p6.nu) (*.net *.split)
[08:56:34] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (*.net *.split)
[08:56:34] *** Quits: happy-dude (~happy-dud@2001:470:69fc:105::b4d7) (*.net *.split)
[08:56:34] *** Quits: _________ (~nobody@user/noodly) (*.net *.split)
[08:56:35] *** Quits: Altreus (~altreus@2a03:b0c0:1:e0::439:5001) (*.net *.split)
[08:56:35] *** Quits: leedo (leedo@2600:3c03::f03c:91ff:fe91:982f) (*.net *.split)
[08:56:35] *** Quits: dpk (~dpk@xn--issum-vva.nonceword.org) (*.net *.split)
[08:56:35] *** Quits: synthmeat (~synthmeat@user/synthmeat) (*.net *.split)
[08:56:35] *** Quits: timo (~timo@shells.aperture-labs.org) (*.net *.split)
[08:56:35] *** Quits: pjlsergeant (sid143467@id-143467.hampstead.irccloud.com) (*.net *.split)
[08:56:35] *** Quits: mykhal (~m@user/mykhal) (*.net *.split)
[08:56:35] *** Quits: ingy (~ingy@143.244.187.20) (*.net *.split)
[08:56:35] *** Quits: andrea[m] (~andreanit@2001:470:69fc:105::1:28a8) (*.net *.split)
[08:56:35] *** Quits: demostanis[m] (~demostani@2001:470:69fc:105::2c2) (*.net *.split)
[08:56:35] *** Quits: casaca (~casaca@user/casaca) (*.net *.split)
[08:56:35] *** Quits: sena_kun (~koto@94.142.239.45) (*.net *.split)
[08:56:35] *** Quits: sienet_ja_LSD[m] (~sienetjal@2001:470:69fc:105::1:456c) (*.net *.split)
[08:56:36] *** Quits: phogg (~phogg@user/phogg) (*.net *.split)
[08:56:36] *** Quits: Tirifto (~Tirifto@47-186-71-19.dlls.tx.frontiernet.net) (*.net *.split)
[08:56:36] *** Quits: Util_ (~bruce@047-013-182-182.res.spectrum.com) (*.net *.split)
[08:56:36] *** Quits: nine (~nine@comm.detonation.org) (*.net *.split)
[08:56:36] *** Quits: AlexDaniel (~alexdanie@2001:470:69fc:105::15e1) (*.net *.split)
[08:56:36] *** Quits: Maylay (~gren@108-198-59-230.lightspeed.miamfl.sbcglobal.net) (*.net *.split)
[08:56:36] *** Quits: bdju (~bard@user/bdju) (*.net *.split)
[08:56:36] *** Quits: moritz_ (~moritz@tina.perlgeek.de) (*.net *.split)
[08:56:36] *** Quits: broquain1 (~dbrook@static.140.30.69.159.clients.your-server.de) (*.net *.split)
[08:56:36] *** Quits: xkr47 (xkr47@91-150-17-137.customer.karistelefon.fi) (*.net *.split)
[08:56:36] *** Quits: codesections (~codesecti@codesections.com) (*.net *.split)
[08:56:36] *** Quits: mathias[m]12 (~mathiasma@2001:470:69fc:105::1:4713) (*.net *.split)
[08:56:36] *** Quits: DarthGandalf (user@znc/developer/DarthGandalf) (*.net *.split)
[08:56:36] *** Quits: chronon (~chronon@user/chronon) (*.net *.split)
[08:56:37] *** Quits: Arathorn (~arathorn@2001:470:69fc:105::1f) (*.net *.split)
[08:56:37] *** Quits: CIAvash (~ciavash@2001:470:69fc:105::264) (*.net *.split)
[08:56:37] *** Quits: merryprog (~perryprog@wikipedia/perryprog) (*.net *.split)
[08:56:37] *** Quits: Voldenet (~Voldenet@user/voldenet) (*.net *.split)
[08:56:38] *** Quits: JRaspass (~JRaspass@68.183.32.235) (*.net *.split)
[08:56:38] *** Quits: pierrot (~pi@user/pierrot) (*.net *.split)
[08:56:38] *** Quits: Juerd (juerd@computervrede.nl) (*.net *.split)
[08:56:39] *** Quits: polettix (~polettixx@linode.polettix.it) (*.net *.split)
[08:56:39] *** Quits: El_Che (~nxadm@ssh2.ulyssis.student.kuleuven.be) (*.net *.split)
[08:56:39] *** Quits: charsbar (~charsbar@ik1-311-15861.vs.sakura.ne.jp) (*.net *.split)
[08:56:39] *** Quits: jdv (~jdv79@jdv.devuyst.com) (*.net *.split)
[08:56:39] *** Quits: masak_ (~masak@137.ip-51-178-44.eu) (*.net *.split)
[08:56:39] *** Quits: jrjsmrtn (~jrjsmrtn@ip-62-235-219-205.dsl.scarlet.be) (*.net *.split)
[08:56:40] *** Quits: Od1n (~Od1n@aurora-borealis.phear.org) (*.net *.split)
[08:56:40] *** Quits: kawaii_ (sid345572@id-345572.hampstead.irccloud.com) (*.net *.split)
[08:56:40] *** Quits: rypervenche (~rypervenc@user/rypervenche) (*.net *.split)
[08:56:40] *** Quits: samcv (~samcv@194.233.102.77) (*.net *.split)
[08:56:40] *** Quits: samebchase (~thelounge@51.15.68.182) (*.net *.split)
[08:56:40] *** Quits: elcaro (~anonymous@45.32.191.75) (*.net *.split)
[08:56:40] *** Quits: dg (~dgl@dg.wtf) (*.net *.split)
[08:56:40] *** Quits: Grrrr (~tobez@ocho.tobez.org) (*.net *.split)
[08:56:40] *** Quits: wanko (~wanko@51.15.4.226) (*.net *.split)
[08:56:41] *** Quits: tejr (~tejr@user/tejr) (*.net *.split)
[08:58:10] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[08:58:10] *** Joins: Flwyd (~Flwyd@c-174-63-75-106.hsd1.vt.comcast.net)
[08:58:10] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[08:58:10] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[08:58:10] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[08:58:10] *** Joins: euandreh (~euandreh@2804:14c:33:9fe5:b36c:1fc0:956d:d06c)
[08:58:10] *** Joins: Colt (~Colt@user/colt)
[08:58:10] *** Joins: mathias[m]12 (~mathiasma@2001:470:69fc:105::1:4713)
[08:58:10] *** Joins: silug (~silug@068-188-018-154.biz.spectrum.com)
[08:58:10] *** Joins: seednode (~seednode@user/seednode)
[08:58:10] *** Joins: dmc00 (~dmc@47.186.241.232)
[08:58:10] *** Joins: tejr (~tejr@user/tejr)
[08:58:10] *** Joins: ptc (~cochrane@static.150.233.203.116.clients.your-server.de)
[08:58:10] *** Joins: Manifest0 (~Manifest0@cst2-65-109.cust.vodafone.cz)
[08:58:10] *** Joins: sienet_ja_LSD[m] (~sienetjal@2001:470:69fc:105::1:456c)
[08:58:10] *** Joins: qorg11 (~lain@2605:6400:c022:fa04:1312:1337:0:beef)
[08:58:10] *** Joins: MasterDuke (~MasterDuk@94.0.188.131)
[08:58:10] *** Joins: renormalist (~ss5@renormalist.net)
[08:58:10] *** Joins: DarthGandalf (user@znc/developer/DarthGandalf)
[08:58:10] *** Joins: mtj (~mtj@2400:8902::f03c:91ff:fe93:b7f1)
[08:58:10] *** Joins: Summer (~summer@user/summer)
[08:58:10] *** Joins: lucs (~lucs@user/lucs)
[08:58:10] *** Joins: dogbert17 (~dogbert@c83-253-59-194.bredband.tele2.se)
[08:58:10] *** Joins: hexology (~hexology@user/hexology)
[08:58:10] *** Joins: gcd (gd@104-9-69-236.lightspeed.nsvltn.sbcglobal.net)
[08:58:10] *** Joins: kybr (ky@2600:3c01::f03c:92ff:feb3:476f)
[08:58:10] *** Joins: tonyo (~tonyo@ec2-54-190-144-97.us-west-2.compute.amazonaws.com)
[08:58:10] *** Joins: sftp (~sftp@79.174.36.182)
[08:58:10] *** Joins: pejayes (~pejayes@mail.patricks.tech)
[08:58:10] *** Joins: chronon (~chronon@user/chronon)
[08:58:10] *** Joins: thowe (~thowe@66.39.169.133)
[08:58:10] *** Joins: Altreus (~altreus@2a03:b0c0:1:e0::439:5001)
[08:58:10] *** Joins: leedo (leedo@2600:3c03::f03c:91ff:fe91:982f)
[08:58:10] *** Joins: jjatria (~jjatria@68.183.32.235)
[08:58:10] *** Joins: summerisle (~eof@tty3.dev)
[08:58:10] *** Joins: tobs (~tobs@taboege.de)
[08:58:10] *** Joins: sivoais (~zaki@199.19.225.239)
[08:58:10] *** Joins: dpk (~dpk@xn--issum-vva.nonceword.org)
[08:58:10] *** Joins: sjn (sjn@sprocket.nvg.ntnu.no)
[08:58:10] *** Joins: vrurg (~vrurg@45.74.95.181)
[08:58:10] *** Joins: Arathorn (~arathorn@2001:470:69fc:105::1f)
[08:58:10] *** Joins: synthmeat (~synthmeat@user/synthmeat)
[08:58:10] *** Joins: jrjsmrtn (~jrjsmrtn@ip-62-235-219-205.dsl.scarlet.be)
[08:58:10] *** Joins: timo (~timo@shells.aperture-labs.org)
[08:58:10] *** Joins: pjlsergeant (sid143467@id-143467.hampstead.irccloud.com)
[08:58:10] *** Joins: mykhal (~m@user/mykhal)
[08:58:10] *** Joins: jast (jast@zoidberg.org)
[08:58:10] *** Joins: JRaspass (~JRaspass@68.183.32.235)
[08:58:10] *** Joins: phogg (~phogg@user/phogg)
[08:58:10] *** Joins: Tirifto (~Tirifto@47-186-71-19.dlls.tx.frontiernet.net)
[08:58:10] *** Joins: Util_ (~bruce@047-013-182-182.res.spectrum.com)
[08:58:10] *** Joins: BinGOs (~bitbucket@user/bingos)
[08:58:10] *** Joins: El_Che (~nxadm@ssh2.ulyssis.student.kuleuven.be)
[08:58:10] *** Joins: Ulti (~matt@ec2-35-178-236-167.eu-west-2.compute.amazonaws.com)
[08:58:10] *** Joins: avuserow (~ak@205.178.97.166)
[08:58:10] *** Joins: nine (~nine@comm.detonation.org)
[08:58:10] *** Joins: Od1n (~Od1n@aurora-borealis.phear.org)
[08:58:10] *** Joins: kawaii_ (sid345572@id-345572.hampstead.irccloud.com)
[08:58:10] *** Joins: goblin (~jaa@yatima.uukgoblin.net)
[08:58:10] *** Joins: rypervenche (~rypervenc@user/rypervenche)
[08:58:10] *** Joins: mjgardner (sid182628@id-182628.ilkley.irccloud.com)
[08:58:10] *** Joins: skaji (sid178483@tinside.irccloud.com)
[08:58:10] *** Joins: tbrowder (sid168924@lymington.irccloud.com)
[08:58:10] *** Joins: rjbs (sid498898@uxbridge.irccloud.com)
[08:58:10] *** Joins: SmokeMachine (sid19088@tinside.irccloud.com)
[08:58:10] *** Joins: peder (4822@nidur.ifi.uio.no)
[08:58:10] *** Joins: ingy (~ingy@143.244.187.20)
[08:58:10] *** Joins: pierrot (~pi@user/pierrot)
[08:58:10] *** Joins: corwin (someone@fosshost/director/corwin)
[08:58:10] *** Joins: jcallen (quassel@user/jcallen)
[08:58:10] *** Joins: ugexe (ugexe@p6.nu)
[08:58:10] *** Joins: GreaseMonkey (greaser@user/greasemonkey)
[08:58:10] *** Joins: jercos (jercos@xyl.be)
[08:58:10] *** Joins: samcv (~samcv@194.233.102.77)
[08:58:10] *** Joins: happy-dude (~happy-dud@2001:470:69fc:105::b4d7)
[08:58:10] *** Joins: AlexDaniel (~alexdanie@2001:470:69fc:105::15e1)
[08:58:10] *** Joins: Maylay (~gren@108-198-59-230.lightspeed.miamfl.sbcglobal.net)
[08:58:10] *** Joins: bdju (~bard@user/bdju)
[08:58:10] *** Joins: andrea[m] (~andreanit@2001:470:69fc:105::1:28a8)
[08:58:10] *** Joins: demostanis[m] (~demostani@2001:470:69fc:105::2c2)
[08:58:10] *** Joins: CIAvash (~ciavash@2001:470:69fc:105::264)
[08:58:10] *** Joins: _________ (~nobody@user/noodly)
[08:58:10] *** Joins: gugod (gugod@li7-202.members.linode.com)
[08:58:10] *** Joins: ilogger2 (~ilogger2@colabti.org)
[08:58:10] *** Joins: samebchase (~thelounge@51.15.68.182)
[08:58:10] *** Joins: casaca (~casaca@user/casaca)
[08:58:11] *** Joins: moritz_ (~moritz@tina.perlgeek.de)
[08:58:11] *** Joins: broquain1 (~dbrook@static.140.30.69.159.clients.your-server.de)
[08:58:11] *** Joins: xkr47 (xkr47@91-150-17-137.customer.karistelefon.fi)
[08:58:11] *** Joins: sena_kun (~koto@94.142.239.45)
[08:58:11] *** Joins: codesections (~codesecti@codesections.com)
[08:58:11] *** Joins: merryprog (~perryprog@wikipedia/perryprog)
[08:58:11] *** Joins: Voldenet (~Voldenet@user/voldenet)
[08:58:11] *** Joins: Juerd (juerd@computervrede.nl)
[08:58:11] *** Joins: polettix (~polettixx@linode.polettix.it)
[08:58:11] *** Joins: charsbar (~charsbar@ik1-311-15861.vs.sakura.ne.jp)
[08:58:11] *** Joins: jdv (~jdv79@jdv.devuyst.com)
[08:58:11] *** Joins: masak_ (~masak@137.ip-51-178-44.eu)
[08:58:11] *** Joins: elcaro (~anonymous@45.32.191.75)
[08:58:11] *** Joins: dg (~dgl@dg.wtf)
[08:58:11] *** Joins: Grrrr (~tobez@ocho.tobez.org)
[08:58:11] *** Joins: wanko (~wanko@51.15.4.226)
[08:58:15] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Max SendQ exceeded)
[08:58:57] *** Quits: dmc00 (~dmc@47.186.241.232) (Ping timeout: 256 seconds)
[08:59:53] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[09:00:16] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[09:00:21] *** Quits: gordonfish (~gordonfis@user/gordonfish) (Ping timeout: 248 seconds)
[09:00:41] *** Joins: Colt (~Colt@user/colt)
[09:01:21] *** Joins: gordonfish (~gordonfis@user/gordonfish)
[09:07:33] *** Quits: El_Che (~nxadm@ssh2.ulyssis.student.kuleuven.be) (*.net *.split)
[09:07:33] *** Quits: charsbar (~charsbar@ik1-311-15861.vs.sakura.ne.jp) (*.net *.split)
[09:07:34] *** Quits: jdv (~jdv79@jdv.devuyst.com) (*.net *.split)
[09:07:34] *** Quits: masak_ (~masak@137.ip-51-178-44.eu) (*.net *.split)
[09:07:40] *** Joins: masak (~masak@137.ip-51-178-44.eu)
[09:07:41] *** Joins: jdv (~jdv79@jdv.devuyst.com)
[09:07:41] *** Joins: El_Che (~nxadm@ssh2.ulyssis.student.kuleuven.be)
[09:07:43] *** Joins: charsbar (~charsbar@153.126.151.115.v6.sakura.ne.jp)
[09:08:56] *** Joins: gordonfish- (~gordonfis@user/gordonfish)
[09:10:59] *** Quits: gordonfish (~gordonfis@user/gordonfish) (Ping timeout: 252 seconds)
[09:20:28] *** Quits: jrjsmrtn (~jrjsmrtn@ip-62-235-219-205.dsl.scarlet.be) (*.net *.split)
[09:20:28] *** Quits: Od1n (~Od1n@aurora-borealis.phear.org) (*.net *.split)
[09:20:28] *** Quits: kawaii_ (sid345572@id-345572.hampstead.irccloud.com) (*.net *.split)
[09:20:28] *** Quits: rypervenche (~rypervenc@user/rypervenche) (*.net *.split)
[09:20:28] *** Quits: samcv (~samcv@194.233.102.77) (*.net *.split)
[09:20:29] *** Quits: samebchase (~thelounge@51.15.68.182) (*.net *.split)
[09:20:29] *** Quits: elcaro (~anonymous@45.32.191.75) (*.net *.split)
[09:20:29] *** Quits: dg (~dgl@dg.wtf) (*.net *.split)
[09:20:29] *** Quits: Grrrr (~tobez@ocho.tobez.org) (*.net *.split)
[09:20:29] *** Quits: wanko (~wanko@51.15.4.226) (*.net *.split)
[09:20:37] *** Joins: wanko (~wanko@51.15.4.226)
[09:20:37] *** Joins: elcaro (~anonymous@45.32.191.75)
[09:20:38] *** Joins: dg (~dgl@dg.wtf)
[09:20:42] *** Joins: Grrrr (~tobez@ocho.tobez.org)
[09:20:48] *** Joins: rypervenche (~rypervenc@2001:41d0:8:93b9::29)
[09:20:51] *** Joins: Od1n (~Od1n@aurora-borealis.phear.org)
[09:20:54] *** Joins: kawaii_ (sid345572@id-345572.hampstead.irccloud.com)
[09:21:02] *** Quits: rypervenche (~rypervenc@2001:41d0:8:93b9::29) (Changing host)
[09:21:02] *** Joins: rypervenche (~rypervenc@user/rypervenche)
[09:21:15] *** Joins: jrjsmrtn (~jrjsmrtn@ip-62-235-219-205.dsl.scarlet.be)
[09:21:38] *** Joins: samcv (~samcv@194.233.102.77)
[09:21:55] *** Joins: solitario (~adrian@www3.kiess.onl)
[09:32:46] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:35:53] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[09:53:34] *** Joins: nebuchadnezzar (~dad@82-65-17-178.subs.proxad.net)
[09:53:43] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[09:53:59] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[10:20:05] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[10:57:15] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:58:07] *** Joins: seednode (~seednode@user/seednode)
[11:08:03] *** Joins: dmc00 (~dmc@47.186.241.232)
[11:21:55] *** Joins: jjido (~Denis@90.213.58.125)
[11:23:57] *** Joins: abraxxa-home (~alex@smtp.hartmaier.priv.at)
[11:25:02] *** Joins: abraxxa (~ahartmai@smtp.hartmaier.priv.at)
[11:29:25] *** Quits: abraxxa (~ahartmai@smtp.hartmaier.priv.at) (Ping timeout: 240 seconds)
[11:30:07] *** Joins: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at)
[11:34:07] *** Joins: riffraff (~riffraff@77-234-80-248.pool.digikabel.hu)
[11:37:37] <riffraff> Hey everyone, I'm trying to build a Hash with defaults starting from a list. I can use BagHash to do a tally/count of the various things, but I can't see how to also set a default value, any clues?
[11:38:29] <riffraff> I.e. I do
[11:38:30] <riffraff> my @list = [1,2,2,3,3,3,4]
[11:38:30] <riffraff> my %h = bag @list
[11:38:31] <riffraff> %h{2} # 2
[11:38:31] <riffraff> %h{99} #raku I want a zero here, but I get (Any)
[11:42:13] *** Quits: merpaderp (~ircuser@89.111.36.243) (Ping timeout: 256 seconds)
[11:42:36] *** Joins: merpaderp (~ircuser@89.111.36.243)
[11:45:52] <riffraff> ah it seems
[11:45:52] <riffraff> my Int %h{Int} = bag a
[11:45:53] <riffraff> works :)
[11:49:18] <riffraff> ah no, still unininitialized:(
[11:49:42] <moritz_> m: my %h is default(0); say %h{42}
[11:49:42] <camelia> rakudo-moar d7152ea59: OUTPUT: «0␤»
[11:50:27] <moon-child> m: my Int:D() %h; say %h{99} #whyn't?
[11:50:27] <camelia> rakudo-moar d7152ea59: OUTPUT: «(Int)␤»
[11:54:11] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[12:02:22] <moritz_> I guess coercions to smily'ed types aren't implemented
[12:08:22] <riffraff> thanks moritz_ ! Now I think  I may have found a bug: clone'ing does not carry over the default. But I am not sure if its supposed to :)
[12:08:53] <riffraff> m: my %h is default(0); my %h2 = %h.clone; say %h2{99}
[12:08:54] <camelia> rakudo-moar d7152ea59: OUTPUT: «(Any)␤»
[12:09:29] <SmokeMachine> m: my @list = 1,2,2,3,3,3,4; my %h := bag @list; say %h{2}; say %h{99}
[12:09:29] <camelia> rakudo-moar d7152ea59: OUTPUT: «2␤0␤»
[12:10:12] <moritz_> m: my %h is default(0); my %h2 := %h.clone; say %h2{99}
[12:10:13] <camelia> rakudo-moar d7152ea59: OUTPUT: «0␤»
[12:10:35] <moritz_> riffraff: ^^ it's not the cloning that loses the default, it's the assigment. Using binding instead to avoid the assignment
[12:11:32] <SmokeMachine> riffraff: when you do %h = bag @list, you are giving a bag to a hash, to make  %h a bag, use := or my %h is Bag
[12:11:33] <riffraff> ah-ha, that makes sense, thanks again
[12:12:39] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[12:12:59] <SmokeMachine> m: my @list = 1,2,2,3,3,3,4; my %h is Bag = |@list; say %h{2}; say %h{99}
[12:12:59] <camelia> rakudo-moar d7152ea59: OUTPUT: «2␤0␤»
[12:29:15] <riffraff> ah that is also nice, so my problem was self-inflicted because I was casting the Bag into a Hash to begin with, right?
[12:29:48] <riffraff> ops, I realize now I should have been in #raku-beginner sorry for the noise :(
[12:34:54] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[12:43:47] *** Joins: dakkar (~dakkar@home.thenautilus.net)
[12:49:05] * nine didn't know that there was a raku-beginner channel
[13:15:38] *** Joins: Skarsnik_ (~Skarsnik@91-170-31-218.subs.proxad.net)
[13:20:19] *** Quits: Zero_Dogg (~zerodogg@2a02:fe1:b002:100:215:17ff:fed8:8c8) (Ping timeout: 252 seconds)
[13:52:41] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[14:04:33] *** Joins: Zero_Dogg (~zerodogg@2a02:fe1:b002:100:215:17ff:fed8:8c8)
[14:05:47] *** Joins: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net)
[14:28:23] *** Joins: atroxaper (~atroxaper@178.49.194.113)
[14:28:32] <atroxaper> Hello, #raku
[14:28:33] <tellable6> 2021-12-05T20:52:37Z #raku <MasterDuke> atroxaper https://gist.github.com/MasterDuke17/b9ff1efd4057e1bd62da77a70ef2eca7 is a lightly edited version, it really didn't need a whole lot
[14:29:53] <atroxaper> .tell MasterDuke Many-many thanks to you! You've helped me a lot. I've already add the article to the advent list.
[14:29:54] <tellable6> atroxaper, I'll pass your message to MasterDuke
[14:31:47] *** Quits: riffraff (~riffraff@77-234-80-248.pool.digikabel.hu) (Quit: Client closed)
[14:32:03] *** Joins: riffraff (~riffraff@77-234-80-248.pool.digikabel.hu)
[14:37:11] <discord-raku-bot> <Nemokosch#9980> hello hello
[14:37:35] <discord-raku-bot> <Nemokosch#9980> is there a detailed description of list comprehensions somewhere?
[14:41:11] *** Quits: riffraff (~riffraff@77-234-80-248.pool.digikabel.hu) (Quit: Client closed)
[14:41:26] *** Joins: riffraff (~riffraff@77-234-80-248.pool.digikabel.hu)
[14:45:46] *** Quits: riffraff (~riffraff@77-234-80-248.pool.digikabel.hu) (Ping timeout: 256 seconds)
[14:46:55] *** Joins: Altai-man (~sena_kun_@static-84-42-198-52.net.upcbroadband.cz)
[14:53:02] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:54:03] *** Quits: atroxaper (~atroxaper@178.49.194.113) (Remote host closed the connection)
[15:10:41] *** Joins: riffraff (~riffraff@77-234-80-248.pool.digikabel.hu)
[15:12:39] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 276 seconds)
[15:13:16] *** Joins: tejr (~tejr@user/tejr)
[15:32:52] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[15:35:01] *** Quits: Skarsnik_ (~Skarsnik@91-170-31-218.subs.proxad.net) (Ping timeout: 240 seconds)
[16:14:17] <tbrowder> tonyo: you here?
[16:18:54] <frost> m: "/dev/urandom".IO.open.read(5).read-ubits(0, 5*8)
[16:18:54] <camelia> rakudo-moar d7152ea59: ( no output )
[16:19:00] <frost> m: say "/dev/urandom".IO.open.read(5).read-ubits(0, 5*8)
[16:19:00] <camelia> rakudo-moar d7152ea59: OUTPUT: «307861414805␤»
[16:19:52] <frost> m: say "/dev/urandom".IO.open.read(5).read-ubits(0, 5*8), ' ', now - INIT now
[16:19:53] <camelia> rakudo-moar d7152ea59: OUTPUT: «442574743393 0.007803579␤»
[16:25:26] <tbrowder> info for Raku module authors: i just published two of mine on the recommended Zef repo using mi6. it works great if you prep your module repo to change it from cpan to zef properly (and it's easy to do).
[16:26:54] <tbrowder> lizmat and others have started the move already. mi6 (v2.0.1+) is fully able to greatly assist in the effort--check it out!
[16:34:41] *** Joins: atroxaper (~atroxaper@178.49.194.113)
[16:35:25] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[16:40:44] *** Joins: jjido (~Denis@90.213.58.125)
[16:45:45] *** Quits: Zero_Dogg (~zerodogg@2a02:fe1:b002:100:215:17ff:fed8:8c8) (Ping timeout: 268 seconds)
[17:24:29] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[17:29:25] *** Joins: Zero_Dogg (~zerodogg@2a02:fe1:b002:100:215:17ff:fed8:8c8)
[17:30:45] *** Quits: atroxaper (~atroxaper@178.49.194.113) (Remote host closed the connection)
[17:41:00] <ggoebel> still trying to grok Str ranges and how raku does incrementing using character classes...
[17:41:05] <ggoebel> m: ("aa".."bb")>>.say
[17:41:05] <camelia> rakudo-moar d7152ea59: OUTPUT: «aa␤ab␤ba␤bb␤»
[17:41:18] <ggoebel> m: ("ab".."ba")>>.say
[17:41:18] <camelia> rakudo-moar d7152ea59: OUTPUT: «ab␤aa␤bb␤ba␤»
[17:42:15] <ggoebel> why isn't the later «ab␤ba␤»?
[17:44:18] <ggoebel> m: "ab".succ.say
[17:44:18] <camelia> rakudo-moar d7152ea59: OUTPUT: «ac␤»
[17:44:36] <lizmat> TimToady knows
[17:44:43] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[17:52:11] <ggoebel> m: ("bb".."aa")>>.say
[17:52:11] <camelia> rakudo-moar d7152ea59: ( no output )
[17:52:16] <ggoebel> m: ("bb"..."aa")>>.say
[17:52:17] <camelia> rakudo-moar d7152ea59: OUTPUT: «bb␤ba␤ab␤aa␤»
[17:52:25] <ggoebel> m: ("ab".."ba")>>.say
[17:52:26] <camelia> rakudo-moar d7152ea59: OUTPUT: «ab␤aa␤bb␤ba␤»
[17:52:30] <ggoebel> m: ("ab"..."ba")>>.say
[17:52:31] <camelia> rakudo-moar d7152ea59: OUTPUT: «ab␤aa␤bb␤ba␤»
[17:52:49] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[17:55:37] *** Joins: atroxaper (~atroxaper@178.49.194.113)
[17:57:26] <atroxaper> ggoebel: hyper operations can be done in concurrent way.
[17:58:07] <ggoebel> m: ("aa".."bb").flat.say
[17:58:07] <camelia> rakudo-moar d7152ea59: OUTPUT: «(aa ab ba bb)␤»
[17:58:16] <ggoebel> m: ("ab".."ba").flat.say
[17:58:16] <camelia> rakudo-moar d7152ea59: OUTPUT: «(ab aa bb ba)␤»
[18:00:22] *** Joins: Sgeo (~Sgeo@user/sgeo)
[18:00:24] <ggoebel> atroxaper: regarding hyper ops... "methods can be called in an out of order, concurrent fashion. The resulting list will be in order."
[18:01:38] <El_Che> I wonder if the intellij plans around Fleet will impact Comma IDE
[18:01:40] <atroxaper> ggoebel: .say do not have a result in you case. Only the side effect. My point was for sure.
[18:02:25] <atroxaper> El_Che: Which for example?
[18:03:54] <El_Che> as I understand it, Fleet is not based on the Intellij framework but it's reqrite
[18:05:16] *** Quits: Zero_Dogg (~zerodogg@2a02:fe1:b002:100:215:17ff:fed8:8c8) (Ping timeout: 265 seconds)
[18:09:52] <El_Che> w
[18:11:54] <atroxaper> El_Che: Fleet do not require IntelliJ. Fleet uses a common code base of IntelliJ.
[18:14:42] *** Joins: A26F64 (~A26F64@cpe-74-69-167-143.stny.res.rr.com)
[18:15:29] <Altai-man> El_Che, don't take it as an official opinion or anything, but I don't see any ways for it to cause any impact on Comma so far.
[18:15:30] <tellable6> 2021-12-03T18:18:02Z #raku <SmokeMachine> Altai-man yes, that makes sense, thanks
[18:20:48] <tbrowder> m: say "12".succ
[18:20:48] <camelia> rakudo-moar d7152ea59: OUTPUT: «13␤»
[18:30:25] *** Quits: riffraff (~riffraff@77-234-80-248.pool.digikabel.hu) (Quit: Client closed)
[18:30:41] *** Joins: riffraff (~riffraff@77-234-80-248.pool.digikabel.hu)
[18:48:34] *** Joins: Zero_Dogg (~zerodogg@2a02:fe1:b002:100:215:17ff:fed8:8c8)
[18:51:03] *** Quits: riffraff (~riffraff@77-234-80-248.pool.digikabel.hu) (Quit: Client closed)
[18:51:17] *** Joins: riffraff (~riffraff@77-234-80-248.pool.digikabel.hu)
[18:55:40] *** Quits: riffraff (~riffraff@77-234-80-248.pool.digikabel.hu) (Ping timeout: 256 seconds)
[19:06:53] *** Quits: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at) (Read error: Connection reset by peer)
[19:07:38] *** Joins: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at)
[19:14:15] *** Joins: monkey_ (~user@181.114.17.106)
[19:15:11] *** Joins: [Coke] (~coke@172.58.225.20)
[19:16:42] <El_Che> atroxaper: I understood Fleet was written in Kotlyn and Rust
[19:18:17] <atroxaper> El_Che: yes.
[19:22:23] <japhb> El_Che: Do you have a link to the announcement or article or what have you?
[19:25:24] *** Joins: riffraff (~riffraff@77-234-80-248.pool.digikabel.hu)
[19:33:28] <El_Che> japhb: https://blog.jetbrains.com/blog/2021/11/29/welcome-to-fleet/ 
[19:33:55] <El_Che> japhb: there was a comment by a fleet dev with the kotlyn+rust info, but it looks it's gone
[19:36:38] <El_Che> this one: https://blog.jetbrains.com/blog/2021/11/29/welcome-to-fleet/#remark42__comment-ac6e4928-dd81-4d93-895a-ece157a8e7f4
[19:36:46] <El_Che> although it's more about the ui
[19:37:00] <El_Che> I wonder if it's kotlyn native or the jvm
[19:37:10] <El_Che> the speed of opening a file hints native
[19:39:53] <atroxaper> El_Che: native or jvm is only runtime thing. Fleet can be run on native or jvm either. No?
[19:40:51] <atroxaper> El_Che: and JB works a lot to speed up native, of course.
[19:42:49] <El_Che> atroxaper: their target is inmediate startup, no way they can do that with the jvm
[19:43:25] <El_Che> but you load the ide features by clicking a button (how lame is that???), so maybe they load the jvm then :)
[19:50:26] <atroxaper> El_Che: IDE features appears in separate process, i think. Because they can appears on another machine.
[19:52:27] <El_Che> I think so too
[20:03:38] *** Quits: A26F64 (~A26F64@cpe-74-69-167-143.stny.res.rr.com) (Quit: Connection closed)
[20:08:23] <El_Che> anyway, what I wonder if it will replace intellij platform if it's a success
[20:09:04] <El_Che> (and let's be honest, intellij is a great ide (I have ultimate) but the java only menus when programming in other languages are terrible)
[20:09:27] <El_Che> if it would be easy to fix, they would have done so already
[20:09:40] *** Quits: riffraff (~riffraff@77-234-80-248.pool.digikabel.hu) (Quit: Client closed)
[20:09:54] *** Joins: riffraff (~riffraff@77-234-80-248.pool.digikabel.hu)
[20:12:51] <[Coke]> Someone offered to buy github.com/coke from me.
[20:13:29] <ggoebel> m: my @a = (1,2); @a = @a.rotate; @a[0] += @a[1]; @a.raku.say
[20:13:29] <camelia> rakudo-moar d7152ea59: OUTPUT: «[3, 1]␤»
[20:13:33] <[Coke]> They wanted to take over the account, not somehow have me release/transfer the nick, too.
[20:13:45] <ggoebel> m: my @a = (1,2); @a[0] += (@a = @a.rotate)[1]; @a.raku.say
[20:13:46] <camelia> rakudo-moar d7152ea59: OUTPUT: «[2, 1]␤»
[20:14:15] <ggoebel> why don't those two give the same output?
[20:14:26] *** gordonfish- is now known as gordonfish
[20:16:19] <ggoebel> Coke: if it is Coca Cola... maybe they'll make an offer you can't refuse :-)
[20:17:26] <[Coke]> in the second case, the += is getting the original value before the rotate
[20:17:38] <[Coke]> ggoebel: some rando offerring 40USD.
[20:17:59] <[Coke]> I would totally have considered Coca Cola money. :)
[20:20:42] <ggoebel> thx. another difference from Perl which surprised me...
[20:22:23] <[Coke]> (to clarify, we're setting a0 in the rotated array to the 0-index of the original array plus the 1-index of the rotated array)
[20:22:37] <[Coke]> You can probaly verify that by looking at some AST output.
[20:22:42] <[Coke]> *probably
[20:22:58] <[Coke]> a0==0-index
[20:29:59] <ggoebel> m: my @a = (1,2); @a[0] += (@a[0,1] = @a.rotate)[1]; @a.raku.say
[20:29:59] <camelia> rakudo-moar d7152ea59: OUTPUT: «[3, 1]␤»
[20:30:15] <ggoebel> m: my @a = (1,2); @a[0] += (@a = @a.rotate)[1]; @a.raku.say
[20:30:16] <camelia> rakudo-moar d7152ea59: OUTPUT: «[2, 1]␤»
[20:30:35] <ggoebel> hmm... not understanding why those are different either
[20:32:09] <[Coke]> coding style aside (why would you not do the rotate first to avoid this?), I imagine you're referring directly to a[0] in the first one, and only @a as a whole in the second. You should definitely compare the --target=ast output to see what the code gen is doing in each case.
[20:32:32] <[Coke]> ... I imagine "it's because" you're...
[20:33:12] <[Coke]> "raku --target=ast -e '...'"
[20:33:45] <ggoebel> the code is just a golf of a problem I ran into when trying to collapse 2 loc into 1. Normally I write for readability, but this was for brevity.
[20:33:59] <ggoebel> will try that
[20:37:09] *** Joins: azee (~azee@89-64-90-58.dynamic.chello.pl)
[20:39:59] *** Quits: azee (~azee@89-64-90-58.dynamic.chello.pl) (Client Quit)
[20:48:13] *** Quits: synthmeat (~synthmeat@user/synthmeat) (Read error: Connection reset by peer)
[20:48:20] *** Joins: synthmeat1 (~synthmeat@user/synthmeat)
[20:52:01] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Quit: No Ping reply in 180 seconds.)
[20:52:16] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[20:54:31] *** Quits: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at) (Remote host closed the connection)
[21:00:20] *** Quits: riffraff (~riffraff@77-234-80-248.pool.digikabel.hu) (Quit: Client closed)
[21:00:34] *** Joins: riffraff (~riffraff@77-234-80-248.pool.digikabel.hu)
[21:05:01] *** Quits: dakkar (~dakkar@home.thenautilus.net) (Ping timeout: 240 seconds)
[21:14:57] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[21:15:19] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de)
[21:21:19] <tonyo> tbrowder: i'm here now, what's up?
[21:28:47] *** Quits: Flwyd (~Flwyd@c-174-63-75-106.hsd1.vt.comcast.net) (Quit: Ping timeout (120 seconds))
[21:32:37] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[21:38:45] <tbrowder> i wanted you to know mi6 and fez are interoperating well. i am working on an advent article on moving mi6 modules from cpan mgmt to fez. you might want to use part of it for yr faq or readme when it's published.
[21:40:11] <tbrowder> tonyo: ^^^
[21:42:28] *** Quits: Altai-man (~sena_kun_@static-84-42-198-52.net.upcbroadband.cz) (Quit: Leaving)
[21:45:23] <tonyo> danke, i'll add it to the FAQ
[21:49:00] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:57:10] *** Joins: patrickb (~quassel@55d47e69.access.ecotel.net)
[22:50:01] *** Quits: atroxaper (~atroxaper@178.49.194.113) ()
[22:52:12] *** Joins: melezhik (~melezhik@c-98-198-217-77.hsd1.tx.comcast.net)
[22:52:51] <melezhik> Sparky now has "watcher" mechanism allow to wait till asynchronous jobs are finished, here is an example - https://github.com/melezhik/sparrowdo/blob/master/doc/sparky-integration.md#watcher-jobs
[23:00:03] <melezhik> interesting , do I need to sleep within supply block? or it will hold CPU does useless jobs, instead of doing something useful? I am not sure how supply works from this point of view ... The reason for sleep might be not to over stretch sparky web app ...  
[23:14:41] *** Quits: monkey_ (~user@181.114.17.106) (Ping timeout: 256 seconds)
[23:33:56] *** Quits: riffraff (~riffraff@77-234-80-248.pool.digikabel.hu) (Quit: Client closed)
[23:34:12] *** Joins: riffraff (~riffraff@77-234-80-248.pool.digikabel.hu)
[23:35:26] *** Quits: riffraff (~riffraff@77-234-80-248.pool.digikabel.hu) (Client Quit)
[23:35:40] *** Joins: riffraff (~riffraff@77-234-80-248.pool.digikabel.hu)
[23:36:14] *** Quits: melezhik (~melezhik@c-98-198-217-77.hsd1.tx.comcast.net) (Quit: Connection closed)
[23:42:53] <tonyo> melezhik: what do you mean sleep in supply block? why would you need to do that?
[23:42:55] <tellable6> tonyo, I'll pass your message to melezhik
[23:44:29] *** Joins: monkey_ (~user@181.114.17.106)
[23:50:50] *** Joins: Skarsnik_ (~Skarsnik@91-170-31-218.subs.proxad.net)
