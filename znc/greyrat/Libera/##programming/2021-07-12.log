[00:01:01] <ayenet4> i don't trust google
[00:01:21] <ayenet4> they've just been up to no good lately
[00:01:23] <recursiveNode> it's just a crawler and indexer of journal papers, in this case
[00:01:23] *** Joins: ahungry (~user@99-40-9-245.lightspeed.livnmi.sbcglobal.net)
[00:01:35] <pavonia> recursiveNode: For serious reasearch I would't use wikipedia either, but I think it's a good start to find links between concepts and such
[00:02:20] <user51> GeDaMo: that's reasonable, so i'll assume that they're handled in a different layer
[00:02:39] <pavonia> I mean it's meant to be a medium for the general public
[00:03:12] <recursiveNode> pavonia I thought it was good enough to define concepts and their purpose and relationships. It turns out wikipedia definitely isn't good enough to define anything like a peer-reviewed journal would, and it's even worse at clearly defining the purpose of a concept. When it comes to relationships to other concepts, you can only dream about it. It misses most important information.
[00:03:49] <pavonia> Do you have a concret example in mind?
[00:03:53] <recursiveNode> to put it blunt, wikipedia makes people stupid :(
[00:04:03] <ayenet4> lol
[00:04:14] <ayenet4> yes google will make you smarter
[00:04:33] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:fd62:c5b8:6bd0:9137)
[00:04:42] <recursiveNode> google itself won't. Peer-reviewed papers from expert journals will.
[00:06:40] <pyzozord> I have to say I'm quite enjoiny my st terminal. Only those emoijs, but otherwise it's perfect
[00:09:51] *** Quits: freakazoid333 (~freakazoi@72.168.176.96) (Read error: Connection reset by peer)
[00:10:01] *** Quits: ayenet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[00:13:49] <recursiveNode> "Don't use secondhand information or you become a secondhand person" D.J.T.
[00:14:09] *** Quits: inom__ (~inom@176.59.102.225) (Quit: Lost terminal)
[00:14:35] <recursiveNode> by secondhand, D.J.T. probably meant garbage
[00:15:01] *** Joins: inom (~inom@176.59.102.225)
[00:15:25] *** Quits: inom (~inom@176.59.102.225) (Client Quit)
[00:17:53] *** Quits: xff0x (~xff0x@2001:1a81:5298:1800:8236:5b72:ab69:e57) (Ping timeout: 255 seconds)
[00:18:48] *** Joins: xff0x (~xff0x@2001:1a81:5298:1800:4b48:fc50:6a76:3d62)
[00:21:06] *** Quits: user51 (~user51@77.124.42.70) (Quit: leaving)
[00:23:34] *** Joins: gggp_ (~gggp@60.10.23.164)
[00:26:14] *** Quits: gggp__offline (~gggp@60.10.194.47) (Ping timeout: 272 seconds)
[00:27:07] <bihtori> I think Wikipedia is pretty cool. This week I learned there are such things as bifurcation lakes, or lakes that drain to two different basins, and they are called with that name. I don't need to read a journal to go deeper into theory of basins.
[00:27:19] <recursiveNode> btw. research means (re) search, as searching for some information again
[00:29:32] *** Quits: V (~v@anomalous.eu) (Ping timeout: 268 seconds)
[00:33:22] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Quit: leaving)
[00:33:23] <W> seems like uncertain etymology, it could also be searching backwards, as in searching the past (i.e. reading others' writings)
[00:33:30] *** Quits: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3) (Quit: Konversation terminated!)
[00:34:12] *** Joins: Izem (~Izem@65.95.172.41)
[00:34:32] *** Joins: rifl``` (~user@user/rifl)
[00:36:10] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:36:10] *** Quits: rifl`` (~user@user/rifl) (Ping timeout: 252 seconds)
[00:37:16] *** Joins: c705 (c705@alpine/contributor/c705)
[00:37:44] *** Quits: usr123 (~usr123@49.156.64.137) (Quit: Leaving)
[00:41:04] * edgar-rft curses recursiveNode again and agian
[00:41:16] <edgar-rft> agian?
[00:41:52] <edgar-rft> looks like it needs some english grammar research
[00:42:05] <recursiveNode> https://membean.com/wrotds/re-back
[00:42:41] <W> (I've found Wikipedia to be, occasionally, a good way to find primary sources. E.g. an article says "one study found X, but another study redid with larger sample and found !X", and links both; if you'd just, say, searched google scholar, you might have just found the X paper. Most people don't have time for a serious literature search. Wikipedia is fine, as long as you're willing to do some additional work and not just take the last editor's word on faith.)
[00:42:46] *** Quits: eXistenZ (~biskit@bzq-109-64-247-234.red.bezeqint.net) (Quit: Leaving)
[00:43:06] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 268 seconds)
[00:43:28] <recursiveNode> https://www.jstor.org/stable/3192382 (journal paper, yay!)
[00:43:54] <recursiveNode> W please check out the paper above from jstor on the meaning of research
[00:44:21] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[00:44:27] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[00:44:33] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[00:44:44] <W> it appears to only talk about research, not about the word research (except the title, which might just be folk etymology)
[00:45:06] *** Quits: Hazza (~Haxxa@122-199-59-136.ip4.superloop.com) (Quit: Haxxa flies away.)
[00:45:30] <recursiveNode> no, it's peer-reviewed, W
[00:45:43] <W> you have very high expectations of peer review
[00:45:49] *** Quits: Vesryn (~vesryn@user/vesryn) (Read error: Connection reset by peer)
[00:45:59] <GeDaMo> «Early Modern French rechercher (“to examine closely”), from Old French recerchier (“to seek, to look for”).» https://en.wiktionary.org/wiki/research
[00:46:03] *** Joins: Haxxa (~Haxxa@122-199-59-136.ip4.superloop.com)
[00:47:01] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[00:47:46] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[00:48:11] <W> GeDaMo, that's probably just as far as anyone has traced it; it might go further back, maybe to Latin
[00:48:39] *** Quits: blahboybaz (~blahboyba@c-67-183-225-44.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[00:48:56] <GeDaMo> Yeah, but those French meanings sound reasonable
[00:51:16] *** Joins: Vesryn (~vesryn@user/vesryn)
[00:51:58] <Square> anyone know of a 1. Non bloaty (non web) 2. Platform agnostic 3. "cloud persisted" (just a bonus - previous requirement more important). TODO list
[00:52:09] <Square> If its only on linux thats fine
[00:52:10] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[00:53:04] <pyzozord> Square: I do more or less todo.txt and a backup command that uploads to my dropbox
[00:53:14] <recursiveNode> W your suggestion that I have very high expectations of peer review doesn't hold. I know a quite a lot about peer-reviewed journals and this paper from 1979 is an article written by an expert and reviewed by several other experts. It's not a wise move to discount or dispute its title.
[00:53:29] <pyzozord> Square: can share my python dropbox script if you like
[00:53:40] <Square> pyzozord, thats like resorting to stick and stones =D
[00:53:51] <Square> sure
[00:54:10] <pyzozord> Square: well now I don't want to share my share my sticks and stones!
[00:54:22] * pyzozord holds in breath and gets a bit red
[00:54:28] <Square> =D
[00:54:52] <pyzozord> :)
[00:55:36] <pyzozord> tbh to lazy to to remove my api key and they tar it upload it.. bleh, not if you wouldn't like it anyway
[00:56:06] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[00:56:36] *** Joins: inky_ (~inky@5.77.137.159)
[00:57:13] <W> recursiveNode, experts in _art education_ not linguistics, especially not etymology. No reviewer is seriously going to challenge an inspirational opener like that on its etymology anyway, the journal specifically encourages a conversational tone.
[00:57:28] <recursiveNode> language is an art, g
[00:57:43] <pyzozord> Square: it's more or less just this https://ideone.com/Wk5FBJ
[00:57:55] <recursiveNode> it's written by an expert, and peer-reviewed by several other experts. You're wrong and inexperienced
[00:57:56] *** Quits: recursiveNode (~recursive@ip-86-49-255-142.net.upcbroadband.cz) (Quit: Going offline, see ya! (www.adiirc.com))
[00:58:06] *** Joins: Guest6121 (~Guest61@103.125.235.22)
[00:58:09] <Square> pyzozord, thanks! Ill checkit out
[00:58:21] <pyzozord> Square: I call it "member". I type "member" in directory I want to backup and it just works. Also it respects .gitignore, anything in .gitignore will not be part of the backup
[00:58:40] *** Parts: Guest6121 (~Guest61@103.125.235.22) ()
[00:59:06] *** Joins: brickfat (~brickfat@user/brickfat)
[00:59:24] *** Joins: AskerX (~Guest61@103.125.235.22)
[00:59:31] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Quit: Leaving.)
[01:00:04] *** Quits: jaysicks (~jaysicks@BC9C1F67.mobile.pool.telekom.hu) (Remote host closed the connection)
[01:02:00] *** Joins: jaysicks (~jaysicks@BC9C1F67.mobile.pool.telekom.hu)
[01:02:36] *** Parts: AskerX (~Guest61@103.125.235.22) ()
[01:03:20] *** Quits: vitorgonc (~vitorgonc@2804:d55:580c:5e00:849b:a6d:f686:9246) (Ping timeout: 255 seconds)
[01:03:57] <pyzozord> Square: I might write other backends than dropbox, it might just upload to a server with scp or just copy to some other directory on the same disk, doesn't really matter
[01:04:46] *** Joins: vitorgonc (~vitorgonc@2804:d55:58e0:2600:849b:a6d:f686:9246)
[01:04:48] <pyzozord> Square: but I am also planning to move on to gnu mailutils at some point, so I might kind of start having personal mailing lists for text only things
[01:05:29] <Square> Sounds promising.
[01:05:47] <Square> Ideally i would like google keep to be a native app.
[01:07:04] *** Quits: Izem (~Izem@65.95.172.41) (Quit: Izem)
[01:07:24] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[01:10:37] *** Joins: pegaso (~pegaso@131.72.121.184)
[01:10:51] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[01:11:31] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[01:14:05] *** Quits: nekobyte (~nekobyte@user/nekobit) (Quit: don't forget, you're here forever :3)
[01:14:24] *** Quits: xcombelle (~xavie@abayonne-654-1-273-90.w92-146.abo.wanadoo.fr) (Read error: Connection reset by peer)
[01:14:25] *** Joins: absc (~absc@37.163.3.47)
[01:14:31] *** Quits: absc (~absc@37.163.3.47) (Client Quit)
[01:14:54] *** Joins: freakazoid333 (~freakazoi@72.168.176.225)
[01:15:38] *** Quits: pegaso (~pegaso@131.72.121.184) (Quit: Leaving)
[01:16:37] *** Joins: pegaso (~pegaso@131.72.121.184)
[01:16:39] *** Joins: blahboybaz (~blahboyba@c-67-183-225-44.hsd1.wa.comcast.net)
[01:20:01] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[01:20:35] *** Joins: gggp__offline (~gggp@60.10.194.47)
[01:20:42] *** Joins: paulo___ (paulo_@112.210.214.122)
[01:21:06] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[01:23:48] *** Quits: gggp_ (~gggp@60.10.23.164) (Ping timeout: 268 seconds)
[01:24:18] *** Quits: paulo_ (~paulo_@user/paulo/x-9032687) (Ping timeout: 240 seconds)
[01:26:19] *** Joins: gggp_ (~gggp@60.10.194.47)
[01:26:57] *** Quits: snake (~snake@user/snake) (Ping timeout: 265 seconds)
[01:29:11] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[01:29:34] *** Quits: gggp__offline (~gggp@60.10.194.47) (Ping timeout: 272 seconds)
[01:31:45] *** Joins: menace (~someone@2001:a61:35bf:bb01:8dc3:30c3:7488:eca4)
[01:32:51] *** Quits: pyzozord (~pyzozord@user/pyzozord) (Quit: Lost terminal)
[01:32:54] *** Quits: menace (~someone@2001:a61:35bf:bb01:8dc3:30c3:7488:eca4) (Changing host)
[01:32:54] *** Joins: menace (~someone@user/menace)
[01:37:08] *** Quits: xkuru (~xkuru@user/xkuru) (Remote host closed the connection)
[01:37:21] *** Quits: poww0wmus1c (~poww0wmus@gateway/tor-sasl/poww0wmus1c) (Quit: leaving)
[01:37:22] *** Joins: [Kalisto]_ (~nico@user/kalisto/x-8968079)
[01:37:33] *** Joins: xkuru (~xkuru@user/xkuru)
[01:37:46] *** Joins: nekobyte (~nekobyte@user/nekobit)
[01:37:49] *** Quits: pegaso (~pegaso@131.72.121.184) (Quit: Leaving)
[01:39:53] *** Quits: [Kalisto] (~nico@user/kalisto/x-8968079) (Ping timeout: 252 seconds)
[01:40:26] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 258 seconds)
[01:40:48] *** [Kalisto]_ is now known as [Kalisto]
[01:42:25] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Read error: Connection reset by peer)
[01:43:13] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[01:45:48] *** Quits: ElectricSheep (~esheep_zn@pool-100-19-29-200.phlapa.fios.verizon.net) (Ping timeout: 258 seconds)
[01:45:52] *** Quits: nekobyte (~nekobyte@user/nekobit) (Quit: don't forget, you're here forever :3)
[01:46:05] *** Quits: zoey (~zoey@2a02:8084:a080:9e00:3fae:994c:3fdc:274d) (Ping timeout: 255 seconds)
[01:47:16] *** Joins: \c (~\c@user/o/x-1005988)
[01:48:45] *** Quits: jaysicks (~jaysicks@BC9C1F67.mobile.pool.telekom.hu) (Remote host closed the connection)
[01:49:22] *** Quits: nekonibble (~nekonibbl@user/nekobit) (Quit: Segmentation dump (core fault))
[01:49:45] *** Joins: nekonibble (~nekonibbl@user/nekobit)
[01:50:34] *** Quits: danielrparks (~quassel@2600:1700:3f7b:20f:d0dd:eb62:f921:88a9) (Quit: No Ping reply in 180 seconds.)
[01:51:41] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:51:50] *** Joins: danielrparks (~quassel@2600:1700:3f7b:20f:da70:274d:afff:7f24)
[01:51:58] *** Joins: jaysicks (~jaysicks@bc9c1f67.unconfigured.pool.telekom.hu)
[01:52:45] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:53:32] *** Quits: jaysicks (~jaysicks@bc9c1f67.unconfigured.pool.telekom.hu) (Remote host closed the connection)
[01:53:44] *** Quits: vitorgonc (~vitorgonc@2804:d55:58e0:2600:849b:a6d:f686:9246) (Ping timeout: 255 seconds)
[01:54:03] *** Joins: vitorgonc (~vitorgonc@2804:d55:580c:5e00:849b:a6d:f686:9246)
[01:54:13] *** Joins: jaysicks (~jaysicks@BC9C1F67.unconfigured.pool.telekom.hu)
[01:54:14] *** Quits: [Kalisto] (~nico@user/kalisto/x-8968079) (Ping timeout: 258 seconds)
[01:54:30] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 265 seconds)
[01:54:33] *** Quits: Akuli (~Akuli@87-94-111-20.bb.dnainternet.fi) (Quit: Leaving)
[01:54:53] *** Joins: [Kalisto] (~nico@user/kalisto/x-8968079)
[01:56:07] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[01:56:28] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[01:56:43] *** Quits: menace (~someone@user/menace) (Quit: menace)
[02:01:32] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[02:04:40] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[02:07:03] *** Quits: envex (~envex@cpe-173-91-189-33.neo.res.rr.com) ()
[02:08:38] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:11:35] *** Joins: gggp__offline (~gggp@60.10.194.47)
[02:14:48] *** Quits: gggp_ (~gggp@60.10.194.47) (Ping timeout: 265 seconds)
[02:20:05] *** Quits: silverwhitefish (~hidden@47.202.102.10) (Quit: One for all, all for One (2 Corinthians 5))
[02:20:40] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 252 seconds)
[02:20:43] *** Joins: silverwhitefish (~hidden@47.202.102.10)
[02:20:53] *** silverwhitefish is now known as Guest4772
[02:22:23] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[02:24:34] *** Quits: magla (~gelignite@55d42871.access.ecotel.net) (Quit: Stay safe!)
[02:24:48] *** Quits: Leone (~Leo@45.72.231.86) ()
[02:25:17] *** Quits: gitgood (~gitgood@80-44-9-45.dynamic.dsl.as9105.com) (Ping timeout: 258 seconds)
[02:26:48] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[02:29:32] *** Joins: fbis (~fbis@2409:8a0c:9e10:4d56:408b:2979:3b4f:3a66)
[02:30:35] *** Joins: shellwirt (~shellwirt@2001:1284:f013:4856:d59:1e37:347a:600b)
[02:30:56] *** Joins: mac11 (~mac@193.228.193.41)
[02:32:38] *** Joins: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca)
[02:34:37] *** Joins: gggp_ (~gggp@60.10.194.47)
[02:35:26] *** Quits: inky_ (~inky@5.77.137.159) (Ping timeout: 272 seconds)
[02:35:26] *** Quits: JuggleTux (~tux@83.137.6.185) (Ping timeout: 272 seconds)
[02:36:23] *** Quits: fbis (~fbis@2409:8a0c:9e10:4d56:408b:2979:3b4f:3a66) (Remote host closed the connection)
[02:36:26] *** Joins: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net)
[02:37:11] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Ping timeout: 268 seconds)
[02:37:49] *** Parts: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca) (Good Bye)
[02:38:00] *** Quits: gggp__offline (~gggp@60.10.194.47) (Ping timeout: 265 seconds)
[02:38:54] *** Quits: Guest4772 (~hidden@47.202.102.10) (Quit: One for all, all for One (2 Corinthians 5))
[02:39:27] *** Joins: inky_ (~inky@46.36.119.185)
[02:39:44] *** Quits: mac11 (~mac@193.228.193.41) (Quit: Leaving)
[02:40:39] *** Joins: jazzy (~jaziz@2600:380:c114:2d85:2030:17e6:b76f:c1fa)
[02:40:40] *** Joins: gggp__offline (~gggp@60.10.194.47)
[02:41:08] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:42:09] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[02:44:18] *** Quits: gggp_ (~gggp@60.10.194.47) (Ping timeout: 272 seconds)
[02:44:49] *** Quits: gggp__offline (~gggp@60.10.194.47) (Remote host closed the connection)
[02:45:18] *** Joins: gggp__offline (~gggp@60.10.194.47)
[02:46:12] *** Joins: gggp_ (~gggp@221.219.77.87)
[02:47:01] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[02:47:48] *** Joins: gitgood (~gitgood@80-44-9-45.dynamic.dsl.as9105.com)
[02:47:48] *** Joins: silverwhitefish (~hidden@47.202.102.10)
[02:47:56] *** silverwhitefish is now known as Guest1016
[02:48:22] *** Joins: fbis (~fbis@2409:8a0c:9e10:4d56:408b:2979:3b4f:3a66)
[02:48:26] *** Joins: JuggleTux (~tux@83.137.6.190)
[02:48:52] *** Parts: Guest1016 (~hidden@47.202.102.10) ()
[02:48:58] *** Joins: snake (~snake@user/snake)
[02:49:38] *** Quits: gggp__offline (~gggp@60.10.194.47) (Ping timeout: 252 seconds)
[02:50:09] *** Joins: Necoro (~Necoro@user/necoro)
[02:50:53] *** Quits: Necoro (~Necoro@user/necoro) (Client Quit)
[02:51:18] *** Quits: \c (~\c@user/o/x-1005988) (Quit: Client closed)
[02:53:53] *** Joins: teut (~teut@106.214.16.139)
[02:54:45] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[02:55:15] *** Quits: fbis (~fbis@2409:8a0c:9e10:4d56:408b:2979:3b4f:3a66) (Remote host closed the connection)
[02:55:29] *** Joins: Guest88 (~Guest88@120.208.163.15)
[02:56:09] <teut> https://godbolt.org/z/jWv6E9G4s   in this c++ code, I  have to create  simpleGame, simpleGame1   ...   whenever I need to run  a test, I need the constructor of the class to create a new game everytime I run a function
[02:56:47] <teut> what can I do to avoid creating these  so many simpleGames and just use 1 instance and call the functions?
[02:57:36] <teut> what is needed is a design pattern or so by which   a function is triggered every time I call a function
[02:58:20] <teut> so     simpleGame.gutterBall()  should call the setup()  function  inside it.
[02:58:27] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.2)
[02:58:33] <arahael> teut: Why, is it expensive creating the simpleGame object?  As for the design pattern, perhaps a proxy pattern.
[02:58:55] <teut> its not expensive, its not elegant
[02:59:51] <arahael> teut: For tests it's considered more elegant.
[03:00:11] <arahael> Because you have more confidence that you have set things up the same way each time you run the test.
[03:00:27] <arahael> (And that the previous tests haven't impacted on your current test)
[03:00:56] <teut> yeah, this point of your is quite valid
[03:01:05] <teut> thanks, will continue with this
[03:02:02] <teut> junit in Java has  a @Setup  decorator  that does it
[03:02:39] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 265 seconds)
[03:03:33] <teut> what do they do?
[03:04:02] <teut> they use proxy pattern?
[03:04:19] *** Quits: blahboybaz (~blahboyba@c-67-183-225-44.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[03:04:23] *** Quits: shellwirt (~shellwirt@2001:1284:f013:4856:d59:1e37:347a:600b) (Quit: Leaving)
[03:05:25] <arahael> I'm not sure. In general I'd be wary of mapping what languages call "decorators" to the pattern called "decorator" - oftentimes what the language means is it just adds metadata.
[03:05:37] <arahael> (Also, I'm not a C++ person).
[03:05:42] <arahael> Erm, I'm not a *Java* person.
[03:05:50] <teut> lol, then what?
[03:06:11] <teut> those are the most common
[03:06:23] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[03:06:33] <arahael> I might assume that @Setup in Java will mark the specified method as the "setup method" for your test framework, either using metadata or by using some other technique.
[03:07:01] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[03:07:51] <teut> does  metadata  means  something related to compiler and parsing?
[03:09:01] <arahael> It's just additional information.
[03:09:23] <arahael> The "meta" bit is because it's "data about the data".
[03:09:31] <arahael> Aka, in this case, data about the method.
[03:10:06] <teut> if its parsing the  test code,  I can just call the @Setup decorator before every test
[03:10:12] <teut> it*
[03:10:30] <teut> it call call the method beneath that decorator
[03:10:37] <teut> can *
[03:10:45] <arahael> If you wnat the specifics of how it works, you'll have to look up the langauge documentation.
[03:11:01] <arahael> (It varies hugely)
[03:12:00] <teut> https://github.com/junit-team/junit5/search?q=%40Setup   doesnt look like it found anything by @Stup
[03:12:06] <teut> @Setup*
[03:14:42] <arahael> teut: Refer to sections 9.6 and 9.7 of https://docs.oracle.com/javase/specs/jls/se16/html/index.html perhaps.
[03:15:23] <teut> X)   its so long
[03:15:48] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[03:16:31] <arahael> teut: Yeah, those are the specifications, they may have more approprate reference documentation..
[03:16:47] <rannnn8888> https://dpaste.org/xkp1  I do not have much experience in the language: I try I send requests through a proxy and sometimes the proxy is not good ,
[03:16:55] <rannnn8888> I want make a 15 loop that if it fails will try to run another proxy,  and after 15 attempts if it did not work then stop where i worng here ?
[03:17:24] <teut> I havent coded in java from years, better  to leave it then
[03:17:56] <Jigsy> Are using goto events to jump to the end of a loop (because you need to check another thing) ever acceptable?
[03:18:16] <Jigsy> Using return or break would end the loop, which is not what I want.
[03:19:38] <Jigsy> Psuedo-code: https://bpa.st/raw/IWEQ
[03:19:44] *** Quits: jaysicks (~jaysicks@BC9C1F67.unconfigured.pool.telekom.hu) (Remote host closed the connection)
[03:20:27] *** Joins: jaysicks (~jaysicks@bc9c1f67.mobile.pool.telekom.hu)
[03:20:36] *** Quits: jaysicks (~jaysicks@bc9c1f67.mobile.pool.telekom.hu) (Remote host closed the connection)
[03:22:38] *** Joins: hexfive (~eric@50.35.83.177)
[03:23:21] <arahael> teut: Well, in that case I'd probably naively follow the docs for the test framework you're using.
[03:23:34] <arahael> teut: So if it says "use @Setup for...", then just do it as it says, blindly.
[03:23:50] <teut> no, I dont know how to setup modules in c++
[03:24:05] <teut> I m thust not using any test framework
[03:25:01] <arahael> teut: I doubt that.
[03:25:32] <teut> in python that I did before it has  pip package installation
[03:25:46] <teut> c+ doesnt have a thing like such
[03:26:12] <InPhase> Jigsy: Always look for the opportunity to instead do:  if (person != missing) { /* something that should happen */ }
[03:26:15] <teut> it requires setting up header files by downloading the zip
[03:26:38] <Jigsy> InPhase: In retrospect, I probably should have added a few more things.
[03:27:13] <Jigsy> Revised.
[03:27:22] <Jigsy> https://bpa.st/raw/BO2A
[03:27:48] <InPhase> !=  ...  &&
[03:27:49] <Jigsy> I couldn't seem to get any answer to this question via Google searching.
[03:27:57] <arahael> teut: Ah, sorry, you're actualyl using C++.  I keep thinking you're doing this in Java.
[03:28:03] <Jigsy> Just people complaining that goto is literally Ghengis Khan and stuff.
[03:28:23] <Jigsy> InPhase: And if it's 600 lines long?
[03:28:30] <teut> no , I just know about Junit so just was relating the things
[03:28:54] <InPhase> Jigsy: If you have 600 conditionals to check you probably need some structured keeping of state.  :)
[03:29:09] <InPhase> Jigsy: You can use logic to calculate a bool, and then switch on that.
[03:29:28] <InPhase> Jigsy: Like, calling functions to update a bool state, for example.
[03:29:54] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 272 seconds)
[03:30:22] <rannnn8888> Jigsy maybe u can help me :d https://dpaste.org/xmvU
[03:30:25] <InPhase> Jigsy: You can also prepare an array or vector of states to check.
[03:30:26] <arahael> teut: Ah, well, for C++ I would probably suggest asking for - and using, a test framework.  Two that come up from a quick google seem to be Boost.Test, and GoogleTest
[03:31:12] <teut> that comes with vs it seems
[03:31:21] <InPhase> Jigsy: With class usage, you can also morph that into simply:  if (person.GoodState())
[03:31:27] <teut> I use vscode
[03:32:09] *** Quits: hexfive (~eric@50.35.83.177) (Quit: WeeChat 3.0)
[03:32:11] <PlanckWalk> Jigsy: If the label is right before the end of the loop body, you can use "continue"
[03:32:16] <LambdaComplex> should a user's TOTP secret be encrypted in the database? (maybe using their password?)
[03:32:22] <arahael> teut: Well, again - check the docs for the given framework. :)
[03:32:25] <LambdaComplex> or is it considered acceptable to store that in plain text?
[03:32:39] <PlanckWalk> It has many of the same problems as mid-loop break or return, of course
[03:33:57] <teut> https://stackoverflow.com/questions/62910867/how-to-run-tests-and-debug-google-test-project-in-vs-code   ya looks like there is something but needs some settings to be done
[03:33:59] <PlanckWalk> But in general writing a function or method that describes what condition you're using is better
[03:34:55] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[03:35:30] <PlanckWalk> Alternatively, break it down into subconditions with functions for those
[03:36:15] <teut> actually setting it up doesnt look that difficult
[03:36:27] <teut> thankd for the help  arahael
[03:36:33] <teut> thanks*
[03:36:42] <arahael> teut: No worries, even if I was mostly a rubber duck. :)
[03:37:21] <teut> nope, nothing like that :]
[03:38:10] <arahael> Glad to help. :)
[03:40:09] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[03:41:18] <InPhase> arahael: Not too shabby.  That's the second best kind of duck.
[03:41:49] <arahael> InPhase: "Be slightly irritating"? ;)
[03:42:36] *** Quits: teut (~teut@106.214.16.139) (Quit: Connection closed)
[03:42:41] <InPhase> Rubber duck is surpassed only by roast duck.
[03:43:04] * arahael does enjoy roast duck.
[03:45:26] *** Quits: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca) (Read error: Connection reset by peer)
[03:48:56] *** Joins: omegahack0 (~omega@2603-6010-a529-9c00-6250-3f26-37cf-336b.res6.spectrum.com)
[03:48:59] *** Joins: omegahack_ (~omega@2603-6010-a529-9c00-6250-3f26-37cf-336b.res6.spectrum.com)
[03:49:06] *** Quits: omegahack_ (~omega@2603-6010-a529-9c00-6250-3f26-37cf-336b.res6.spectrum.com) (Remote host closed the connection)
[03:52:16] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:53:52] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Quit: leaving)
[03:59:12] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 265 seconds)
[03:59:37] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[04:06:18] <LambdaComplex> quack
[04:06:39] *** Joins: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca)
[04:06:54] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[04:08:05] *** Quits: freakazoid333 (~freakazoi@72.168.176.225) (Remote host closed the connection)
[04:08:15] *** Joins: art_vandelay (~art_vande@bras-base-toroon63x9w-grc-21-174-89-102-174.dsl.bell.ca)
[04:08:19] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[04:08:34] *** Joins: freakazoid333 (~freakazoi@72.168.176.225)
[04:08:41] *** Quits: freakazoid333 (~freakazoi@72.168.176.225) (Read error: Connection reset by peer)
[04:09:51] *** Joins: freakazoid333 (~freakazoi@72.168.176.225)
[04:10:14] *** Quits: freakazoid333 (~freakazoi@72.168.176.225) (Remote host closed the connection)
[04:10:17] *** Joins: envex (~envex@cpe-173-91-189-33.neo.res.rr.com)
[04:10:28] *** Joins: ayenet4 (~0x100@32.211.211.39)
[04:10:52] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[04:11:35] *** Joins: freakazoid333 (~freakazoi@72.168.176.225)
[04:11:40] *** Quits: freakazoid333 (~freakazoi@72.168.176.225) (Remote host closed the connection)
[04:11:47] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[04:12:39] *** Joins: freakazoid333 (~freakazoi@72.168.176.225)
[04:14:33] *** Joins: silverwhitefish (~hidden@47.202.102.10)
[04:14:39] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[04:15:52] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[04:16:52] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[04:17:44] *** Quits: freakazoid333 (~freakazoi@72.168.176.225) (Read error: Connection reset by peer)
[04:18:46] *** Joins: freakazoid333 (~freakazoi@72.168.176.27)
[04:19:06] *** Quits: jazzy (~jaziz@2600:380:c114:2d85:2030:17e6:b76f:c1fa) (Ping timeout: 240 seconds)
[04:20:10] *** Quits: Guest88 (~Guest88@120.208.163.15) (Ping timeout: 268 seconds)
[04:20:24] *** Quits: paulo___ (paulo_@112.210.214.122) (Remote host closed the connection)
[04:21:56] *** Quits: freakazoid333 (~freakazoi@72.168.176.27) (Read error: Connection reset by peer)
[04:22:28] *** Joins: freakazoid333 (~freakazoi@72.168.176.27)
[04:24:16] *** Quits: b1101 (~b1101@ool-44c01641.dyn.optonline.net) (Quit: b1101)
[04:25:25] *** Joins: kikijiki (~Thunderbi@user/kikijiki)
[04:25:26] *** Quits: kikijiki (~Thunderbi@user/kikijiki) (Client Quit)
[04:26:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 255 seconds)
[04:28:05] *** Joins: Kacper_ (~kasper93@89-74-110-199.dynamic.chello.pl)
[04:30:02] *** Quits: kasper93 (~kasper93@89-74-110-199.dynamic.chello.pl) (Ping timeout: 268 seconds)
[04:30:02] *** Kacper_ is now known as kasper93
[04:30:05] *** Joins: b1101 (~b1101@ool-44c01641.dyn.optonline.net)
[04:33:01] *** Quits: freakazoid333 (~freakazoi@72.168.176.27) (Read error: Connection reset by peer)
[04:33:08] *** Joins: immibis__ (~immibis@62.156.144.218)
[04:33:45] *** Joins: freakazoid333 (~freakazoi@72.168.176.27)
[04:35:44] *** Quits: immibis_ (~immibis@2a02:3032:400:aff2:d899:f991:dcec:5708) (Ping timeout: 255 seconds)
[04:44:50] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 268 seconds)
[04:45:16] *** Joins: CodeSpelunker (~CodeSpelu@user/codespelunker)
[04:47:54] *** Quits: nekonibble (~nekonibbl@user/nekobit) (Ping timeout: 240 seconds)
[04:49:19] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[04:49:30] *** Joins: russjr083 (~russjr08@fw.internal.russ.network)
[04:49:34] *** Joins: nekonibble (~nekonibbl@user/nekobit)
[04:50:18] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:51:13] *** Quits: russjr08 (~russjr08@fw.internal.russ.network) (Ping timeout: 246 seconds)
[04:52:13] *** Joins: russjr08 (~russjr08@fw.internal.russ.network)
[04:54:18] *** Quits: russjr083 (~russjr08@fw.internal.russ.network) (Ping timeout: 252 seconds)
[04:54:39] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[04:54:44] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[04:55:00] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:55:28] *** Parts: LunarJetman (LunarJetma@97e14d2e.skybroadband.com) ()
[04:55:56] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 258 seconds)
[04:58:34] *** Quits: silverwhitefish (~hidden@47.202.102.10) (Quit: One for all, all for One (2 Corinthians 5))
[04:58:54] *** Joins: silverwhitefish (~hidden@47.202.102.10)
[05:00:23] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:3012:8da5:3c00:21ae) (Read error: Connection reset by peer)
[05:06:15] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:30b4:a90d:5552:2d9e)
[05:06:45] *** Quits: Cyp_ (~cyp@192038128058.mbb.telenor.dk) (Excess Flood)
[05:07:04] *** Joins: Chewt (~hayden@2601:1c0:8101:7310::5ae3)
[05:07:10] *** Joins: Cyp_ (~cyp@192038128058.mbb.telenor.dk)
[05:07:49] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[05:08:04] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[05:09:06] *** Joins: qaph (~weechat@user/qaph)
[05:10:08] *** Joins: dcand (~dcand@user/dcand)
[05:12:11] *** Quits: kron (~weechat@user/qaph) (Ping timeout: 265 seconds)
[05:12:13] *** qaph is now known as kron
[05:12:21] *** Parts: dcand (~dcand@user/dcand) (Leaving)
[05:12:29] *** Quits: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net) (Quit: WeeChat 2.8)
[05:14:20] *** Quits: CodeSpelunker (~CodeSpelu@user/codespelunker) (Ping timeout: 258 seconds)
[05:15:05] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[05:18:20] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[05:21:26] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[05:22:54] *** Joins: nekobyte (~nekobyte@user/nekobit)
[05:24:55] *** Quits: a-a (uid506782@id-506782.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[05:27:06] *** Quits: nekonibble (~nekonibbl@user/nekobit) (Ping timeout: 240 seconds)
[05:30:58] *** Quits: nekobyte (~nekobyte@user/nekobit) (Quit: don't forget, you're here forever :3)
[05:42:38] *** Joins: pete443 (~pete@user/pete443)
[05:42:43] *** Quits: entuland (~entuland@user/entuland) (Quit: Leaving)
[05:43:05] *** Quits: pete443_ (~pete@user/pete443) (Ping timeout: 252 seconds)
[05:45:02] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (Ping timeout: 255 seconds)
[05:45:32] *** Joins: kmh (~kmh@p200300df5f043000fdf0a34e1b882bd5.dip0.t-ipconnect.de)
[05:47:20] *** Quits: kmh_ (~kmh@p2e511d5e.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[05:52:37] *** Joins: gggp__offline (~gggp@60.10.194.47)
[05:52:59] *** Quits: birkoff (birkoff@user/birkoff) (Quit: ZNC 1.8.2 - https://znc.in)
[05:55:25] *** gggp__offline is now known as gggp
[05:55:44] *** Quits: gggp_ (~gggp@221.219.77.87) (Ping timeout: 258 seconds)
[05:57:17] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[05:59:10] <vdamewood> Your mission, should you choose to accept it, is to refuse this mission.
[06:01:14] *** Quits: xff0x (~xff0x@2001:1a81:5298:1800:4b48:fc50:6a76:3d62) (Ping timeout: 255 seconds)
[06:01:55] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[06:03:02] *** Joins: xff0x (~xff0x@2001:1a81:52d6:3f00:c2c2:4eb1:4c10:1645)
[06:07:12] *** Joins: gggp_ (~gggp@60.10.194.47)
[06:07:35] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:09:09] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 258 seconds)
[06:09:20] *** Quits: brabrax- (~brabrax@user/brabrax) (Ping timeout: 255 seconds)
[06:10:21] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[06:10:40] *** Quits: gggp (~gggp@60.10.194.47) (Ping timeout: 265 seconds)
[06:11:20] * CoJaBo self-destructs recursively
[06:12:46] *** Joins: foozle (~foozle@2001-b011-c001-52e7-80e9-2afb-6a38-71f0.dynamic-ip6.hinet.net)
[06:13:14] *** Joins: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[06:13:19] *** Joins: gggp__offline (~gggp@60.10.194.47)
[06:15:21] *** Joins: Guest5946 (~Guest59@S01069050ca4e3573.cg.shawcable.net)
[06:15:42] *** Quits: gggp_ (~gggp@60.10.194.47) (Ping timeout: 252 seconds)
[06:19:39] <Joanna> vdamewood: the only way to win is to not play the game..
[06:20:15] <vdamewood> Joanna: Shall we play a game?
[06:20:56] <Joanna> What game ?
[06:21:11] <vdamewood> Tic Tac Toe?
[06:21:34] <vdamewood> It's less stressful than Global Thermonuclear War
[06:21:43] <Joanna> That’s a rather simple game
[06:21:52] <Joanna> Ha
[06:22:02] <freakazoid333> buzzkill
[06:22:10] *** Quits: Tazmainian (~Tazmainia@41.193.169.28) (Quit: Leaving)
[06:22:21] <Joanna> Is there something happening in the news recently that I missed ?
[06:22:37] <vdamewood> Joanna: No, I'm referencing the same movie you did.
[06:22:55] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:23:52] *** Joins: nekobyte (~nekobyte@user/nekobit)
[06:24:48] <Joanna> Is that the movie where he said the goal of the game is to find the purpose of the game ?
[06:25:15] <vdamewood> No. Wargames.
[06:25:24] <Joanna> I came across that phrase outside of the movie I don’t remember the name of the movie
[06:25:24] <ayenet4> thats the one with the whoppr
[06:25:27] <Joanna> Ah
[06:25:34] <ayenet4> how about a nice game of burger time
[06:26:06] *** Joins: roent (~roent@user/roent)
[06:26:08] <Joanna> There are all sorts of games that you are guaranteed to lose if you play
[06:26:24] <vdamewood> Joanna: Like knifey-spooney.
[06:27:10] <Joanna> I don’t know what that is
[06:27:36] <vdamewood> It's a Simpsons reference.
[06:27:47] *** Joins: gggp_ (~gggp@123.113.191.251)
[06:28:47] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[06:30:44] *** Quits: gggp__offline (~gggp@60.10.194.47) (Ping timeout: 252 seconds)
[06:31:16] <Joanna> I haven’t watched simpsons in long time :)
[06:31:30] *** Joins: lunarkitty (uid501895@user/pyra)
[06:32:19] <Joanna> I haven’t watched tv since they changed the signals and made old TVs obselete actually
[06:33:29] * vdamewood hands Joanna a Disney+
[06:35:08] <CoJaBo> Eww, D+
[06:35:09] *** Joins: CodeSpelunker (~CodeSpelu@user/codespelunker)
[06:37:30] *** Quits: misnor (~misnor@156.57.153.38) (Remote host closed the connection)
[06:37:54] *** Quits: cajiga (~john@2601:85:280:f700:1058:cef1:9aa8:cbe1) (Ping timeout: 240 seconds)
[06:37:57] *** Joins: birkoff (birkoff@thunderirc.net)
[06:37:57] *** Quits: birkoff (birkoff@thunderirc.net) (Changing host)
[06:37:57] *** Joins: birkoff (birkoff@user/birkoff)
[06:40:58] *** gggp_ is now known as gggp
[06:42:15] *** Quits: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca) (Quit: Izem)
[06:42:33] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Quit: Leaving)
[06:42:37] *** Joins: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca)
[06:42:47] *** Joins: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net)
[06:43:16] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[06:44:00] *** Quits: x003fgqwe (uid479614@id-479614.tooting.irccloud.com) (Read error: Connection reset by peer)
[06:44:07] *** Joins: x003fgqwe (uid479614@id-479614.tooting.irccloud.com)
[06:48:09] *** Quits: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth) (Quit: shibboleth)
[06:49:33] *** Quits: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net) (Quit: WeeChat 2.8)
[06:49:58] *** Joins: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[06:50:06] *** Quits: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net) (Client Quit)
[06:50:29] *** Joins: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[06:52:43] *** Joins: lucf117 (~lucf117@user/lucf117)
[06:52:53] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[06:57:04] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[06:57:30] *** Quits: Rounin (~david@cm-84.212.130.215.getinternet.no) (Ping timeout: 252 seconds)
[07:06:10] *** Joins: gggp_ (~gggp@221.219.77.87)
[07:07:16] *** Quits: lerzer (~lerzer@101.175.100.42) (Ping timeout: 246 seconds)
[07:09:20] *** Quits: gggp (~gggp@123.113.191.251) (Ping timeout: 258 seconds)
[07:12:37] *** Quits: roent (~roent@user/roent) (Quit: My client has gone to sleep. ZZZzzz…)
[07:13:33] *** Quits: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net) (Quit: WeeChat 2.8)
[07:13:37] <Joanna> Heh
[07:13:49] *** Joins: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[07:14:40] <vdamewood> Better grade than a D-
[07:14:43] <Joanna> I used to watch simpsons late at night and I was always bombarded with ads for horror movies so when the tv stopped working I was glad
[07:15:05] <Joanna> 11pm Simpson’s reruns
[07:15:09] <vdamewood> I know what I did last summer.
[07:15:20] <vdamewood> I stayed inside.
[07:15:52] *** gggp_ is now known as gggp
[07:17:40] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 252 seconds)
[07:20:57] <Quietwalker> Hmm.
[07:21:05] <Quietwalker> I think amazon is broken.
[07:24:11] *** Joins: pandakekok9 (~job@user/job)
[07:26:00] <vdamewood> Porquois?
[07:27:39] <ayenet4> amazon is just a symptom
[07:28:37] *** Joins: \c (~\c@user/o/x-1005988)
[07:33:58] *** Quits: todda7 (~torstein@2a02:587:3263:7a00:c164:3af2:38e5:311) (Remote host closed the connection)
[07:34:24] *** Joins: todda7 (~torstein@2a02:587:3263:7a00:c164:3af2:38e5:311)
[07:34:32] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[07:35:25] *** Quits: esran (~esran@cb.conical-effort.net) (Quit: ZNC 1.8.x-nightly-20190530-13450c7f - https://znc.in)
[07:35:45] *** Joins: gggp_ (~gggp@60.10.194.47)
[07:37:07] *** Joins: esran (~esran@cb.conical-effort.net)
[07:38:28] *** Quits: gggp (~gggp@221.219.77.87) (Ping timeout: 258 seconds)
[07:40:14] *** Quits: gggp_ (~gggp@60.10.194.47) (Ping timeout: 255 seconds)
[07:44:43] *** Joins: Retr0id9 (~Retr0id@user/retr0id)
[07:45:10] *** Quits: freakazoid333 (~freakazoi@72.168.176.27) (Read error: Connection reset by peer)
[07:45:42] *** Joins: freakazoid333 (~freakazoi@72.168.176.27)
[07:45:54] *** Quits: Retr0id (~Retr0id@user/retr0id) (Ping timeout: 252 seconds)
[07:45:54] *** Retr0id9 is now known as Retr0id
[07:47:22] *** Quits: edr (~edr@user/edr) (Ping timeout: 252 seconds)
[07:49:03] *** Joins: edr (~edr@enlo.co)
[07:49:03] *** Quits: edr (~edr@enlo.co) (Changing host)
[07:49:03] *** Joins: edr (~edr@user/edr)
[07:51:24] *** Joins: CodePoint (~BitShift@2600:1700:3070:3790::29)
[07:56:43] *** Joins: TheRedRipper (~TheRedRip@user/theredripper)
[07:57:14] <TheRedRipper> hullo again
[07:59:03] *** Joins: gnux (~notadevel@user/gnux)
[07:59:06] <gnux> hello
[07:59:24] *** Quits: ayenet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[07:59:37] *** Joins: ayenet4 (~0x100@32.211.211.39)
[08:02:53] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[08:03:45] *** Joins: amigojapan (uid86330@id-86330.brockwell.irccloud.com)
[08:03:57] *** Quits: snake (~snake@user/snake) (Quit: Leaving)
[08:07:06] *** Quits: gitgood (~gitgood@80-44-9-45.dynamic.dsl.as9105.com) (Ping timeout: 268 seconds)
[08:07:41] *** Quits: Chewt (~hayden@2601:1c0:8101:7310::5ae3) (Ping timeout: 255 seconds)
[08:08:05] *** Joins: Chewt (~hayden@2601:1c0:8101:7310::5ae3)
[08:10:21] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[08:10:28] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 272 seconds)
[08:11:17] <TheRedRipper> hi
[08:13:43] *** Joins: Raguile (~Raguile@user/raguile)
[08:14:48] *** Quits: jmcgnh (~jmcgnh@c-98-229-233-252.hsd1.nh.comcast.net) (Changing host)
[08:14:48] *** Joins: jmcgnh (~jmcgnh@user/jmcgnh)
[08:15:03] <beaky> hello my name is beaky
[08:15:13] <Izem> hello
[08:15:34] *** Quits: ayenet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[08:15:47] *** Joins: ayenet4 (~0x100@32.211.211.39)
[08:16:53] *** Joins: wei2912 (~wei2912@112.199.250.21)
[08:18:31] <TheRedRipper> ih
[08:18:34] <TheRedRipper> hi
[08:18:58] *** Quits: CodeSpelunker (~CodeSpelu@user/codespelunker) (Quit: CodeSpelunker)
[08:19:43] *** Quits: LiftLeft (~LiftLeft@154.21.23.6) (Ping timeout: 265 seconds)
[08:20:06] <Izem> math is too hard, is there an alternative? :P
[08:20:33] <TheRedRipper> programming
[08:21:03] <Izem> you know what, you might be right
[08:21:06] *** Quits: c0rrupt (c0rrupt@cpe-75-180-32-100.columbus.res.rr.com) (Remote host closed the connection)
[08:21:13] <Izem> the bonus is that it is executable :D
[08:21:14] <ayenet4> what are we gramming?
[08:21:21] <Izem> sums
[08:21:29] <TheRedRipper> im currently making a tax thing for class
[08:21:31] *** Quits: ITD4004 (~ITD4004@187.61.233.248) (Remote host closed the connection)
[08:21:44] <TheRedRipper> i have a 5 hour coding run to do :p
[08:21:44] <beaky> just use interactive theorem provers like coq or lean so you can approach maths in a programming way
[08:21:55] <TheRedRipper> ^
[08:22:06] *** Joins: HaMsTeRs (~mx@14-0-225-132.static.pccw-hkt.com)
[08:22:15] <Izem> hmm, that'd required me to switch books, but I suppose that is not a bad trade off
[08:22:28] <Izem> software foundations seems more gentle than concrete math
[08:23:23] *** Quits: ayenet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[08:23:35] *** Joins: ayenet4 (~0x100@32.211.211.39)
[08:23:57] <Izem> do you use coq for modeling?
[08:24:47] *** Quits: vitorgonc (~vitorgonc@2804:d55:580c:5e00:849b:a6d:f686:9246) (Ping timeout: 255 seconds)
[08:25:23] <beaky> yes tho right now im using agda
[08:26:07] <beaky> soon once i figure out how my tea database should work i should be able to fully represent it in agda
[08:26:15] *** Quits: ChromaCat248 (~ChromaCat@user/chromacat248) (Remote host closed the connection)
[08:28:01] *** Quits: Guest5946 (~Guest59@S01069050ca4e3573.cg.shawcable.net) (Quit: Connection closed)
[08:28:51] *** Joins: rany_ (~rany@user/rany)
[08:29:06] *** Joins: ChromaCat248 (~ChromaCat@user/chromacat248)
[08:29:16] <Izem> what does agda give you over coq?
[08:29:32] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[08:30:43] <beaky> agda syntax looks cooler and you get unicode and mixfix definitions i think those are the main benefit of agda
[08:31:03] <beaky> and some things like dependent pattern matching are easier and less verbose in agda
[08:32:44] <Izem> I see
[08:34:41] *** Quits: CodePoint (~BitShift@2600:1700:3070:3790::29) (Quit: Never gonna give you up, never gonna let you down...)
[08:35:08] <beaky> otoh other systems like coq and lean are more used in the real world for proofs and they have way more libraries and proof automation than agda
[08:35:50] <beaky> but agda has cubical type theory the future of programming so im stickign with agda for now
[08:36:33] <beaky> the kinds of work agda is used for https://wiki.portal.chalmers.se/agda/pmwiki.php?n=Main.PapersUsingAgda
[08:37:46] *** Joins: ElectricSheep (~esheep_zn@pool-100-19-29-200.phlapa.fios.verizon.net)
[08:39:36] *** Quits: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net) (Ping timeout: 272 seconds)
[08:40:52] <Izem> nice, I just want to build programs that don't fall apart :)
[08:41:15] *** Joins: vitorgonc (~vitorgonc@2804:d55:580c:5e00:849b:a6d:f686:9246)
[08:43:59] <beaky> yes using the dependent types that these systems offer you can write programs that more precisely express and assert their own properties (like how in haskell you can only state the monad operations but not the laws whereas in coq and agda you can state and prove the laws too) and even verify them as separate theorems
[08:45:16] <AlexDelarge> beaky: perhaps you should start a channel for it
[08:47:09] *** Joins: masber (~masber@178.197.220.182)
[08:47:54] <beaky> there already are channels for them i think
[08:48:04] <AlexDelarge> uh huh
[08:50:08] *** Quits: HaMsTeRs (~mx@14-0-225-132.static.pccw-hkt.com) (Quit: Konversation terminated!)
[08:53:35] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:53:40] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[08:53:54] <beaky> also one more difference that is a matter of taste is where in systems like coq or lean the focus is on proof using tactics it is a very imperative style of proof whereas in agda it really sticks to the idea of building up proofs as dependently-typed functional programs
[08:54:36] <beaky> and where you can build proofs in the agda style in coq or lean nobody really does that i think
[08:59:46] *** Quits: nekobyte (~nekobyte@user/nekobit) (Quit: don't forget, you're here forever :3)
[09:00:18] *** Joins: nekonibble (~nekonibbl@user/nekobit)
[09:00:46] *** Quits: Chewt (~hayden@2601:1c0:8101:7310::5ae3) (Quit: WeeChat 3.1)
[09:00:57] *** Joins: Guest9 (~Guest9@103.240.204.23)
[09:01:39] *** Quits: gnux (~notadevel@user/gnux) (Quit: Leaving)
[09:01:40] <Guest9> how to copy all google docs content into a single google sheet cell?
[09:02:21] <ayenet4> ctrl-c usually
[09:02:42] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[09:02:53] <Guest9> there are several docs files, is there any automated way/function?
[09:02:53] <ayenet4> OH
[09:02:59] <ayenet4> then ctrl-v
[09:03:24] <ayenet4> followed by your serial number
[09:03:53] <AlexDelarge> Guest9: might try asking on #google
[09:04:12] <Guest9> never knew such channel exists
[09:04:19] <AlexDelarge> uh huh
[09:04:35] <AlexDelarge> Guest9: /msg alis help list
[09:04:49] <TheRedRipper> wha
[09:05:40] <Guest9> what is serail number here? ayenet4
[09:05:50] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[09:06:06] <ayenet4> its how google identifies you
[09:09:50] *** Quits: blinky42 (~quassel@user/blinky42) (Read error: Connection reset by peer)
[09:11:57] *** Joins: blinky42 (~quassel@206.245.174.16)
[09:11:57] *** Quits: blinky42 (~quassel@206.245.174.16) (Changing host)
[09:11:57] *** Joins: blinky42 (~quassel@user/blinky42)
[09:16:28] *** Quits: Guest9 (~Guest9@103.240.204.23) (Ping timeout: 252 seconds)
[09:17:42] *** __jmcantrell__ is now known as jmcantrell
[09:22:47] <beaky> hello what are some examples of famous algorithms that employ a specific data structure where they came up a better version because they switched the data structure to a more clever one
[09:23:23] *** Joins: xerxes (~xerxes@117.222.64.42)
[09:23:52] <Izem> merge sort?
[09:23:53] <beaky> like poul henning kamp making every famous heap algorithm much faster by using a much cache-friendlier heap http://phk.freebsd.dk/B-Heap/queue.html
[09:24:44] <beaky> yes i think there was a merge sort one
[09:24:50] <AlexDelarge> rofl
[09:24:58] <beaky> though i dont remember it
[09:26:39] <beaky> like going from algorithm a to faster modified algorithm a′ based on a almost completely just by swtichign the data structure
[09:27:43] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[09:27:46] <beaky> i think in merge sort knuth's books have a very big discussion on how it performs on tapes (and other external-storage oriented data structure)
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:31:21] *** Quits: BlueShark (sid10311@user/blueshark) (*.net *.split)
[09:31:21] *** Quits: NiKaN (sid385034@id-385034.brockwell.irccloud.com) (*.net *.split)
[09:31:21] *** Quits: ross (sid305269@user/ross) (*.net *.split)
[09:31:21] *** Quits: mrkajetanp (~mrkajetan@2a01:4b00:ea36:6c00:7994:941c:3f5d:2b88) (*.net *.split)
[09:31:21] *** Quits: backslash (~backslash@user/backslash) (*.net *.split)
[09:31:21] *** Quits: vito (sid1962@user/vito) (*.net *.split)
[09:31:21] *** Quits: znemo (sid500529@id-500529.highgate.irccloud.com) (*.net *.split)
[09:31:21] *** Quits: Liothen (sid23291@id-23291.brockwell.irccloud.com) (*.net *.split)
[09:31:25] *** Joins: ross_ (sid305269@user/ross)
[09:31:28] *** Joins: BlueShark_ (sid10311@user/blueshark)
[09:31:28] *** Joins: znemo_ (sid500529@id-500529.highgate.irccloud.com)
[09:31:35] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[09:31:36] *** Joins: backslash (~backslash@user/backslash)
[09:31:38] *** Joins: NiKaN_ (sid385034@id-385034.brockwell.irccloud.com)
[09:31:40] *** Joins: mrkajetanp_ (~mrkajetan@2a01:4b00:ea36:6c00:7994:941c:3f5d:2b88)
[09:31:41] *** Quits: ayenet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[09:31:46] *** Joins: Liothen (sid23291@id-23291.brockwell.irccloud.com)
[09:31:48] *** Joins: vito (sid1962@user/vito)
[09:31:53] *** Joins: ayenet4 (~0x100@32.211.211.39)
[09:32:57] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[09:33:12] *** NiKaN_ is now known as NiKaN
[09:35:19] <beaky> the famous mainframe sort program https://en.wikipedia.org/wiki/Mainframe_sort_merge
[09:36:12] *** Quits: andreas303 (andreas303@ip227.orange.bnc4free.com) (*.net *.split)
[09:36:12] *** Quits: tvm (~tom@ip-89-103-250-229.net.upcbroadband.cz) (*.net *.split)
[09:36:12] *** Quits: erica (~erica@user/erica) (*.net *.split)
[09:36:12] *** Quits: webstrand (~webstrand@user/webstrand) (*.net *.split)
[09:36:12] *** Quits: hirish (~hirish@ip85.ip-137-74-20.eu) (*.net *.split)
[09:36:12] *** Quits: strudl (~strudl@user/strudl) (*.net *.split)
[09:36:12] *** Quits: cacheyourdreams (~cache@user/cacheyourdreams) (*.net *.split)
[09:36:12] *** Quits: jootoi (~jootoi@130.61.158.197) (*.net *.split)
[09:36:12] *** Quits: kzootech (~awalm@kzoo.tech) (*.net *.split)
[09:36:12] *** Quits: abirkill (snoopy@d207-216-233-23.bchsia.telus.net) (*.net *.split)
[09:36:12] *** Quits: ianmacd (ianmacd@user/ianmacd) (*.net *.split)
[09:36:12] *** Quits: cncr04s (~cncr04s@afxr.net) (*.net *.split)
[09:36:12] *** Quits: Twix (~None@2a01:4f8:192:23d0::1be4:a) (*.net *.split)
[09:36:12] *** Quits: ebb (ebb@user/ebb) (*.net *.split)
[09:36:12] *** Quits: fdisotto (~fdisotto@2a03:b0c0:3:e0::212:e001) (*.net *.split)
[09:36:12] *** Quits: Hobbyboy (Hobbyboy@hobbyboy.co.uk) (*.net *.split)
[09:36:12] *** Quits: HappyHotDog (~HappyHotD@user/happyhotdog) (*.net *.split)
[09:36:21] *** Joins: ianmacd_ (~ianmacd@faust.caliban.org)
[09:36:23] *** Joins: strudl (~strudl@tvarohova.strud.la)
[09:36:23] *** Quits: strudl (~strudl@tvarohova.strud.la) (Excess Flood)
[09:36:25] *** Joins: HappyHotDog (~HappyHotD@2600:1f11:18a:3400:2f50:7a48:f548:1191)
[09:36:33] *** Joins: cncr04s_ (~cncr04s@afxr.net)
[09:36:34] *** Joins: kzootech (~awalm@kzoo.tech)
[09:36:37] *** Joins: Hobbyboy|BNC (Hobbyboy@hobbyboy.co.uk)
[09:36:48] *** Joins: tvm (~tom@ip-89-103-250-229.net.upcbroadband.cz)
[09:36:50] *** Joins: andreas3- (andreas303@ip227.orange.bnc4free.com)
[09:36:52] *** Joins: strudl (~strudl@tvarohova.strud.la)
[09:36:52] *** Quits: strudl (~strudl@tvarohova.strud.la) (Excess Flood)
[09:36:54] *** Joins: erica (~erica@user/erica)
[09:37:03] *** Joins: cache (~cache@user/cacheyourdreams)
[09:37:05] *** Joins: abirkill- (snoopy@d207-216-233-23.bchsia.telus.net)
[09:37:08] *** Joins: webstrand (~webstrand@user/webstrand)
[09:37:15] *** Joins: ebb (ebb@user/ebb)
[09:37:16] *** Joins: Twix (~None@2a01:4f8:192:23d0::1be4:a)
[09:37:18] *** Joins: jootoi (~jootoi@130.61.158.197)
[09:37:22] *** Joins: strudl (~strudl@user/strudl)
[09:37:22] *** Quits: strudl (~strudl@user/strudl) (Excess Flood)
[09:37:24] *** Joins: hirish (~hirish@ip85.ip-137-74-20.eu)
[09:38:04] *** Joins: strudl (~strudl@user/strudl)
[09:38:05] *** Quits: strudl (~strudl@user/strudl) (Excess Flood)
[09:38:07] *** abirkill- is now known as abirkill
[09:38:17] *** Quits: nekonibble (~nekonibbl@user/nekobit) (Quit: Segmentation dump (core fault))
[09:38:24] *** Joins: strudl (~strudl@user/strudl)
[09:38:24] *** Quits: strudl (~strudl@user/strudl) (Excess Flood)
[09:38:33] *** Quits: ayenet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[09:38:46] *** Joins: ayenet4 (~0x100@32.211.211.39)
[09:38:54] *** Joins: strudl (~strudl@user/strudl)
[09:38:54] *** Quits: strudl (~strudl@user/strudl) (Excess Flood)
[09:39:22] *** Joins: strudl (~strudl@user/strudl)
[09:39:22] *** Quits: strudl (~strudl@user/strudl) (Excess Flood)
[09:39:30] *** Quits: ayenet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[09:39:43] *** Joins: ayenet4 (~0x100@32.211.211.39)
[09:39:52] *** Joins: strudl (~strudl@user/strudl)
[09:39:52] *** Quits: strudl (~strudl@user/strudl) (Excess Flood)
[09:40:07] <beaky> for enterprise-grade sorting
[09:40:24] *** Joins: strudl (~strudl@user/strudl)
[09:40:25] *** Quits: strudl (~strudl@user/strudl) (Excess Flood)
[09:40:36] *** Hobbyboy|BNC is now known as Hobbyboy
[09:40:44] <ayenet4> scalesort
[09:40:56] *** Joins: strudl (~strudl@user/strudl)
[09:41:25] *** Quits: avery (sid501608@2001:67c:2f08:1::7:a768) (*.net *.split)
[09:41:25] *** Quits: leonardus (sid358597@id-358597.tinside.irccloud.com) (*.net *.split)
[09:41:26] *** Quits: derfj (sid19429@id-19429.tinside.irccloud.com) (*.net *.split)
[09:41:26] *** Quits: baloona (~baloona@mail.baloona.de) (*.net *.split)
[09:41:26] *** Quits: ikiryo (sid109660@user/ikiryo) (*.net *.split)
[09:41:26] *** Quits: ullbeking (sid5364@id-5364.charlton.irccloud.com) (*.net *.split)
[09:41:26] *** Quits: shrub (sid500598@user/psb) (*.net *.split)
[09:41:26] *** Quits: computerquip (sid423484@user/computerquip) (*.net *.split)
[09:41:26] *** Quits: feliix42 (~felix@gibbs.uberspace.de) (*.net *.split)
[09:41:26] *** Quits: jakesyl (sid56879@id-56879.stonehaven.irccloud.com) (*.net *.split)
[09:41:26] *** Quits: edk (edk@libera/staff/edk) (*.net *.split)
[09:41:26] *** Quits: schna (sid484866@id-484866.brockwell.irccloud.com) (*.net *.split)
[09:41:26] *** Quits: phundrak (~phundrak@82-65-91-105.subs.proxad.net) (*.net *.split)
[09:41:26] *** Quits: carbolymer (~carbolyme@dropacid.net) (*.net *.split)
[09:41:26] *** Quits: neunon (~neunon@user/neunon) (*.net *.split)
[09:41:26] *** Quits: zopsi (zopsi@2600:3c00::f03c:91ff:fe14:551f) (*.net *.split)
[09:41:26] *** Quits: ine (~ine@user/ine) (*.net *.split)
[09:41:26] *** Quits: itok (sid418430@id-418430.charlton.irccloud.com) (*.net *.split)
[09:41:26] *** Quits: Tips|Cloud (sid62231@id-62231.charlton.irccloud.com) (*.net *.split)
[09:41:26] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (*.net *.split)
[09:41:26] *** Quits: koolazer (~koo@212.47.237.37) (*.net *.split)
[09:41:27] <ayenet4> strudl u floogdin
[09:41:34] *** Joins: zopsi_ (~zopsi@irc.dir.ac)
[09:41:35] *** Joins: phundrak (~phundrak@82-65-91-105.subs.proxad.net)
[09:41:38] *** Joins: ine (~ine@wolowolo.com)
[09:41:39] *** Joins: edk (edk@libera/staff/edk)
[09:41:40] *** Joins: koolazer (~koo@user/koolazer)
[09:41:45] *** Joins: carbolymer (~carbolyme@dropacid.net)
[09:41:48] *** Joins: avery (sid501608@id-501608.highgate.irccloud.com)
[09:41:52] *** Joins: ikiryo (sid109660@user/ikiryo)
[09:41:55] *** Quits: ayenet4 (~0x100@32.211.211.39) (Excess Flood)
[09:41:56] *** Joins: feliix42_ (~felix@gibbs.uberspace.de)
[09:42:09] *** Joins: ayenet4 (~0x100@32.211.211.39)
[09:42:14] *** Quits: ine (~ine@wolowolo.com) (Changing host)
[09:42:14] *** Joins: ine (~ine@user/ine)
[09:42:19] *** Joins: shrub (sid500598@id-500598.charlton.irccloud.com)
[09:42:23] *** Joins: schna (sid484866@id-484866.brockwell.irccloud.com)
[09:42:24] *** Joins: leonardus (sid358597@id-358597.tinside.irccloud.com)
[09:42:24] *** Joins: ullbeking (sid5364@2001:67c:2f08:3::14f4)
[09:42:26] *** Joins: computerquip (sid423484@id-423484.tooting.irccloud.com)
[09:42:27] *** Joins: derfj (sid19429@id-19429.tinside.irccloud.com)
[09:42:27] *** Joins: baloona (~baloona@baloona.de)
[09:42:29] *** Quits: shrub (sid500598@id-500598.charlton.irccloud.com) (Changing host)
[09:42:29] *** Joins: shrub (sid500598@user/psb)
[09:42:39] *** Quits: computerquip (sid423484@id-423484.tooting.irccloud.com) (Changing host)
[09:42:39] *** Joins: computerquip (sid423484@user/computerquip)
[09:42:39] *** Joins: Tips|Cloud (sid62231@2001:67c:2f08:3::f317)
[09:42:53] *** Joins: sa (sid1055@2a03:5180:f::41f)
[09:42:59] *** Joins: itok (sid418430@2001:67c:2f08:3::6:627e)
[09:43:05] *** Joins: neunon (~neunon@user/neunon)
[09:43:27] *** Joins: jakesyl (sid56879@stonehaven.irccloud.com)
[09:44:18] *** Quits: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net) (Remote host closed the connection)
[09:44:57] *** Quits: snep (craftxbox@2001:bc8:634:1b35::1) (*.net *.split)
[09:44:57] *** Quits: foxtrot (~foxtrot@user/foxtrot) (*.net *.split)
[09:44:58] *** Quits: rdrg109 (~rdrg109@51.195.232.80) (*.net *.split)
[09:44:58] *** Quits: dTal (quassel@dragonbox/wizzard/dtal) (*.net *.split)
[09:44:58] *** Quits: les (znc@user/les) (*.net *.split)
[09:44:58] *** Quits: d10n (~d10n@user/d10n) (*.net *.split)
[09:44:58] *** Quits: obrut (~obrut@user/obrut) (*.net *.split)
[09:44:58] *** Quits: cark (lp0@tilde.team) (*.net *.split)
[09:44:58] *** Quits: krin (sid500722@user/krin) (*.net *.split)
[09:44:58] *** Quits: dkeohane (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com) (*.net *.split)
[09:44:58] *** Quits: hexology (~hexology@user/hexology) (*.net *.split)
[09:44:58] *** Quits: lavaflow (~lavaflow@c-76-104-248-66.hsd1.wa.comcast.net) (*.net *.split)
[09:44:58] *** Quits: matrael (matrael@PLEASEJUSTLETME.BE) (*.net *.split)
[09:44:58] *** Quits: Soni (~quassel@autistic.space) (*.net *.split)
[09:44:58] *** Quits: CuriousErnestBro (~CuriousEr@user/curiousernestbro) (*.net *.split)
[09:44:58] *** Quits: rabd0 (~rabd0@2a03:b0c0:3:e0::212:e001) (*.net *.split)
[09:44:58] *** Quits: jontxu (~jon@user/jontxu) (*.net *.split)
[09:44:58] *** Quits: beaky (~beaky@2a03:b0c0:0:1010::1e:a001) (*.net *.split)
[09:44:58] *** Quits: TallonRain (sid214799@user/tallonrain) (*.net *.split)
[09:44:58] *** Quits: barlas (~aqeel@user/barlas) (*.net *.split)
[09:44:58] *** Quits: interru (~interru@fs.host.decodem.io) (*.net *.split)
[09:45:07] *** Joins: matrael_ (matrael@PLEASEJUSTLETME.BE)
[09:45:07] *** Joins: Soni (~quassel@autistic.space)
[09:45:09] *** Joins: obrut (~obrut@static.108.201.69.159.clients.your-server.de)
[09:45:13] *** Joins: rdrg109 (~rdrg109@51.195.232.80)
[09:45:13] *** Joins: barlas (~aqeel@user/barlas)
[09:45:13] *** Joins: CuriousErnestBri (~CuriousEr@user/curiousernestbro)
[09:45:14] *** Joins: cark (lp0@tilde.team)
[09:45:25] *** Joins: lavaflow (~lavaflow@c-76-104-248-66.hsd1.wa.comcast.net)
[09:45:26] *** Joins: les (znc@user/les)
[09:45:26] *** Joins: interru (~interru@fs.host.decodem.io)
[09:45:31] *** Joins: dTal (quassel@dragonbox/wizzard/dtal)
[09:45:34] *** Joins: TallonRain (sid214799@user/tallonrain)
[09:45:40] *** Joins: krin (sid500722@user/krin)
[09:46:06] *** Joins: craftxbox (craftxbox@2001:bc8:634:1b35::1)
[09:46:21] *** Joins: hexology (~hexology@user/hexology)
[09:46:23] *** Joins: southey (~foxtrot@user/foxtrot)
[09:47:09] *** Joins: d10n (~d10n@user/d10n)
[09:47:23] *** Joins: dkeohane (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com)
[09:49:07] *** Joins: jontxu (~jon@51.15.171.164)
[09:49:28] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[09:51:12] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[09:51:51] *** Joins: beaky (~beaky@2a03:b0c0:0:1010::1e:a001)
[09:54:09] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[09:54:20] *** Quits: b1101 (~b1101@ool-44c01641.dyn.optonline.net) (Quit: b1101)
[09:54:27] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[09:56:03] *** Joins: nekonibble (~nekonibbl@user/nekobit)
[09:57:44] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[09:57:46] *** Joins: TechTest (uid283215@id-283215.tooting.irccloud.com)
[10:00:13] *** Joins: password (~password@user/password2)
[10:00:56] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:05:42] *** Quits: \c (~\c@user/o/x-1005988) (Quit: Client closed)
[10:05:58] *** Quits: biberu (~biberu@user/biberu) (Ping timeout: 252 seconds)
[10:06:34] *** Joins: biberu (~biberu@user/biberu)
[10:06:36] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[10:19:11] *** Joins: roent (~roent@user/roent)
[10:21:23] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[10:23:27] *** Quits: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca) (Quit: Izem)
[10:24:14] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[10:24:28] *** Quits: compscipunk (~compscipu@2600:1700:cca0:4d1f:fa84:a423:cbf9:1471) (Quit: WeeChat 3.2)
[10:24:38] *** Quits: masber (~masber@178.197.220.182) (Quit: Client closed)
[10:25:47] *** Joins: vd_sockpuppet (~vd_sockpu@2602:4b:a4df:a201::a4)
[10:26:31] <vd_sockpuppet> !op
[10:26:42] <vd_sockpuppet> !ops
[10:26:56] <vdamewood> Yay, it works.
[10:27:19] *** Quits: vd_sockpuppet (~vd_sockpu@2602:4b:a4df:a201::a4) (Client Quit)
[10:27:43] <vdamewood> Weird, I didn't close it.
[10:28:05] <vdamewood> Oh well.
[10:29:06] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[10:29:26] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[10:29:42] <AlexDelarge> sigh
[10:30:09] <vdamewood> sai?
[10:31:35] *** Quits: ahungry (~user@99-40-9-245.lightspeed.livnmi.sbcglobal.net) (Remote host closed the connection)
[10:31:44] *** Quits: soapsudsxx (~soapsudsx@209.221.40.138) (Remote host closed the connection)
[10:33:23] *** Quits: roent (~roent@user/roent) (Quit: Bye)
[10:33:58] *** Joins: roent (~roent@user/roent)
[10:37:18] *** Quits: Fairy97 (~Fairy@2001:464a:4992:0:2975:ee0:353:13b1) (Read error: Connection reset by peer)
[10:38:21] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[10:38:46] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[10:39:04] *** Quits: ayenet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[10:42:42] <beaky> hello my name is beaky
[10:43:02] <AlexDelarge> hahahahaha
[10:43:13] <beaky> so there are binary trees but why arent there ternary trees
[10:43:36] <beaky> today i will experiment with implementing ternary trees in agda after first implementing ternary numbers
[10:44:01] *** Joins: odnes (~odnes@109-178-204-44.pat.ren.cosmote.net)
[10:46:01] *** Joins: Fairy (~Fairy@2001:464a:4992:0:5cba:1f5a:aa0:d219)
[10:46:17] <beaky> of all the integer bases it is base 3 that has the maximum information density by far (followed by base 2 and base 4, and base 'e' is the most dense but it is a real number) https://en.wikipedia.org/wiki/Radix_economy
[10:47:20] <beaky> and base 1 is the worst
[10:49:38] <arahael> beaky: Like https://hackage.haskell.org/package/TernaryTrees ?
[10:49:46] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[10:51:36] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[10:52:26] <DrMax> Ternary trees aren't that efficient... because log2 n < 2 log3 n
[10:53:24] <deniska> beaky: why 3 when we can do 8?
[10:53:24] *** Joins: teut (~teut@106.214.16.139)
[10:53:33] <teut> Uploaded file: https://uploads.kiwiirc.com/files/d309fb00adbf3a037233b01b2730e2bf/image.png
[10:53:42] <teut> whats a remote host?
[10:53:50] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[10:54:01] <deniska> a computer somewhere else
[10:54:33] <teut> am I the private network, and freenode the remote host?
[10:54:40] <teut> libera*
[10:55:06] <teut> or if using google, is google the remote host?
[10:55:46] <deniska> teut: any server somewhere on the internet can be considered a remote host to you
[10:55:56] <beaky> deniska: 8 is not as economical as 3 i think
[10:56:16] <AlexDelarge> teut: tried #networking?
[10:56:35] <deniska> beaky: but think about it, if you divide each side of a cube in half, you get how many resulting cubes?
[10:56:40] <teut> thanks, I couldnt get the channel name correct
[10:56:47] *** Quits: TheRedRipper (~TheRedRip@user/theredripper) (Quit: WeeChat 3.0)
[10:56:57] <beaky> deniska: 8 i think
[10:57:12] <beaky> like octrees
[10:57:49] <teut> the works proxy and vpn confuse me basically
[10:57:53] <teut> words*
[10:58:09] <AlexDelarge> teut: tried #networking?
[10:58:19] <teut> yes going
[10:58:21] <AlexDelarge> tried ASKING in #networking *
[10:59:08] *** Joins: ayenet4 (~0x100@32.211.211.39)
[11:00:14] <deniska> beaky: yes, octtrees are often used for dealing with 3d stuff
[11:00:28] <deniska> when you may need various levels of details per block of space
[11:00:36] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[11:01:12] <beaky> nice i like 3d
[11:01:55] *** Quits: odnes (~odnes@109-178-204-44.pat.ren.cosmote.net) (Read error: No route to host)
[11:02:29] *** Joins: odnes (~odnes@109-178-204-44.pat.ren.cosmote.net)
[11:06:11] *** Quits: roent (~roent@user/roent) (Quit: My client has gone to sleep. ZZZzzz…)
[11:11:14] *** Quits: ayenet4 (~0x100@32.211.211.39) (Remote host closed the connection)
[11:11:27] *** Joins: ehnet3d (~0x100@32.211.211.39)
[11:13:56] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[11:18:09] *** xavie is now known as xcombelle
[11:19:39] *** Joins: paulo_ (~paulo_@user/paulo/x-9032687)
[11:22:37] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[11:22:37] <paulo_> when you do TDD, do you always follow it strictly?
[11:22:46] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[11:22:48] <paulo_> do you always write tests first?
[11:24:14] <ehnet3d> i am always testing
[11:26:05] *** Joins: chemiker (~xarch@ip5f5a05e1.dynamic.kabel-deutschland.de)
[11:26:49] <beaky> after one hour of work i have finally formalized ternary numbers in agda now i must prove it is correct https://bpa.st/2EPQ
[11:27:07] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:27:30] *** Joins: aradesh (~aradesh@user/aradesh)
[11:27:55] *** Joins: roent (~roent@user/roent)
[11:29:01] *** Joins: sealizard (~budaev@190.89-11-212.nextgentel.com)
[11:29:49] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[11:30:25] <beaky> once i prove that ternary numbers are more efficient i will finally be able to make my tea database use ternary everywhere the most radically economical base
[11:30:49] <TheLinuxNerd> beaky more efficient than what?
[11:31:02] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 252 seconds)
[11:31:43] *** Joins: \c (~\c@user/o/x-1005988)
[11:32:02] <beaky> more efficient than binary
[11:32:08] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[11:32:11] <edgar-rft> When I'm doing Total Data Destruction I *always* follow it strictly.
[11:32:22] <beaky> what is total data destruction
[11:32:33] <beaky> is it like test driven development
[11:33:00] <PlanckWalk> First you write your test for whether the data is destroyed.
[11:33:28] <beaky> nice an easy thing to do if your backend is mongodb
[11:33:29] <edgar-rft> beaky: Total Data Destruction will make your computer burn and explode
[11:34:01] <beaky> ewaste management
[11:34:57] <edgar-rft> garbage incineration
[11:35:13] <beaky> see compared to the binary encoding the ternary encoding has 3 more cases but i will prove by symmetry that ternary truly is the most imformatinally compact number encoding
[11:35:55] <beaky> using agdas cubical theory to truly formalize ternary supermacy
[11:36:21] <beaky> (like quantum supremacy but more humble)
[11:36:28] <edgar-rft> you won't need all that anymore after your computer burned down
[11:36:45] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 255 seconds)
[11:36:57] <beaky> but if i apply tdd to my computer how will i complete my tea database work
[11:37:24] <edgar-rft> you still can cook your tea on the fire
[11:38:08] <beaky> o right the electronic fumes will add extra spicy tea notes
[11:39:36] <edgar-rft> correct, and after drinking it you will die soon
[11:43:30] *** Quits: SmokenatorZ (~Smokenato@177.172.117.90) (Ping timeout: 252 seconds)
[11:44:12] *** Quits: lucf117 (~lucf117@user/lucf117) (Remote host closed the connection)
[11:45:02] *** Joins: mnd999_ (~mark@2001:8b0:da3:76a2:4630:5b97:83a2:3e21)
[11:48:52] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[11:51:34] *** Joins: mrig (~mrig@user/mrig)
[11:51:55] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:51:59] *** Quits: odnes (~odnes@109-178-204-44.pat.ren.cosmote.net) (Read error: No route to host)
[11:52:49] *** Joins: odnes (~odnes@109-178-204-44.pat.ren.cosmote.net)
[11:53:42] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[11:55:02] *** Quits: odnes (~odnes@109-178-204-44.pat.ren.cosmote.net) (Read error: Connection reset by peer)
[11:55:40] *** Joins: odnes (~odnes@109-178-204-44.pat.ren.cosmote.net)
[11:57:04] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:58:16] *** Joins: SmokenatorZ (~Smokenato@152.249.4.194)
[12:00:10] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:04:24] *** Quits: SmokenatorZ (~Smokenato@152.249.4.194) (Ping timeout: 272 seconds)
[12:05:52] *** Quits: trace987 (~trace@ip5b429953.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[12:06:34] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Remote host closed the connection)
[12:06:44] *** Joins: SmokenatorZ (~Smokenato@152.249.191.199)
[12:07:49] *** Quits: odnes (~odnes@109-178-204-44.pat.ren.cosmote.net) (Read error: Connection reset by peer)
[12:08:09] <arahael> paulo_: In practice, no.  It depends on what you're doing.  I personally find that TDD is a bit pointless for UI code, as an example.
[12:08:19] *** Joins: odnes (~odnes@109-178-204-44.pat.ren.cosmote.net)
[12:09:44] <vdamewood> Slurp.
[12:10:24] <arahael> DrMax: Incidentially, the crude "log2 n < 2 log3 n" thing is probably less clear-cut if you take into account memory access patterns.
[12:10:37] *** Joins: audgirka (~audgirka@2402:e280:3e16:e48:d5ba:7034:2ac9:4275)
[12:16:03] *** Quits: roent (~roent@user/roent) (Quit: My client has gone to sleep. ZZZzzz…)
[12:16:37] *** Joins: gggpkm (~gggpkm@60.10.194.47)
[12:21:25] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:21:31] *** Quits: ehnet3d (~0x100@32.211.211.39) (Remote host closed the connection)
[12:21:52] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[12:22:12] *** Quits: SmokenatorZ (~Smokenato@152.249.191.199) (Ping timeout: 255 seconds)
[12:23:14] *** Joins: roent (~roent@user/roent)
[12:24:08] <vdamewood> I'm not sure if I want to eat, sleep, or drink.
[12:24:14] *** Quits: roent (~roent@user/roent) (Client Quit)
[12:24:33] *** Joins: alycidyne (~kova@91-160-172-214.subs.proxad.net)
[12:25:02] <alycidyne> Hello, has there ever been an OS which provides a sort of system-wide data type table?
[12:26:39] <vdamewood> alycidyne: Not that I know of.
[12:27:32] <alycidyne> vdamewood: I read about DWARF and found its idea of 'base types' interesting
[12:27:43] *** CuriousErnestBri is now known as CuriousErnestBro
[12:28:54] *** Joins: SmokenatorZ (~Smokenato@177.172.21.107)
[12:29:35] <alycidyne> I now realize that filesystems and 'Everything is a file' is just a cop-out from providing a system-wide programming environment
[12:29:53] <alycidyne> Then again, Unix was developed on the PDP-7 with a typeless programming language (B)
[12:30:09] <alycidyne> So, again, an accident of history
[12:30:29] *** Joins: Guest387272 (~interop_m@user/interop-madness/x-0950004)
[12:31:18] <alycidyne> I now wonder what a typed shell would look like.
[12:31:19] *** Quits: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[12:31:25] <arahael> alycidyne: Depends on what you mean.
[12:31:48] <arahael> PalmOS had such a database, I think.
[12:32:50] <vdamewood> alycidyne: PowerShell
[12:33:31] *** Quits: gggpkm (~gggpkm@60.10.194.47) (Remote host closed the connection)
[12:33:34] <beaky> what was it like to use lisp back in the day of lisp machines https://youtu.be/o4-YnLpLgtk?t=22
[12:33:41] *** Joins: varaindemian (~varaindem@86.124.22.31)
[12:33:55] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Killed (NickServ (GHOST command used by Guest387272)))
[12:34:20] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[12:34:27] <beaky> back when lisp was seen like a viable alternative operating system rather than just a programming language
[12:34:36] *** Guest387272 is now known as interop
[12:34:43] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Killed (NickServ (GHOST command used by interop)))
[12:34:45] *** interop is now known as interop_madness
[12:35:22] <xerxes> beaky: when is this from?
[12:35:39] <beaky> january 2013 i think
[12:36:00] <alycidyne> beaky: A LISP is really a massive micro whose BASIC is LISP :P
[12:36:08] <alycidyne> s/LISP/LISP machine/
[12:36:20] <alycidyne> (note no /g there)
[12:37:14] <xerxes> beaky: i'm sorry. when is the "back in the day"?
[12:38:16] *** Quits: neocow (~neocow@185.38.14.210) (Quit: The Lounge - https://thelounge.chat)
[12:38:51] *** Joins: neocow (~neocow@185.38.14.210)
[12:39:19] <alycidyne> arahael: do you know how DWARF works?
[12:39:36] *** Quits: xerxes (~xerxes@117.222.64.42) (Quit: leaving)
[12:40:28] *** Quits: teut (~teut@106.214.16.139) (Quit: Connection closed)
[12:40:51] <vdamewood> Damn, now that I think of it, I've written an ELF loader and, and I still don't know how DWARF works.
[12:41:00] <beaky> back in the day was like late 1970s / 1980s
[12:41:11] *** Joins: tsv (~tsv@host-176-37-170-44.b025.la.net.ua)
[12:41:14] *** Quits: foozle (~foozle@2001-b011-c001-52e7-80e9-2afb-6a38-71f0.dynamic-ip6.hinet.net) (Quit: Leaving)
[12:41:17] *** Quits: tsv (~tsv@host-176-37-170-44.b025.la.net.ua) (Remote host closed the connection)
[12:41:38] <alycidyne> vdamewood: for... what, if you don't mind me asking?
[12:41:57] *** Joins: tsv (~stsimbaly@host-176-37-170-44.b025.la.net.ua)
[12:41:59] <beaky> when the first workstations were commercialized, unix was becoming popular, other systems like vax were out there, etc.
[12:42:01] *** Quits: tsv (~stsimbaly@host-176-37-170-44.b025.la.net.ua) (Remote host closed the connection)
[12:42:14] <vdamewood> alycidyne: You mean what did I write my ELF loader for?
[12:42:20] <alycidyne> yeah
[12:42:39] <vdamewood> alycidyne: For loading the second stage of my boot loader.
[12:42:59] <beaky> all the arrogant elitist lisp users in hackernews love symbolics i think
[12:43:34] <deniska> We should go back in time Terminator style and arrange unix to be written in pascal as opposed to C
[12:43:49] <deniska> also, remove fork()
[12:45:17] <mrig> oh! so emacs really is modeling an OS :| Interesting to see a lisp machine; I'd not thought of lisp like this before.
[12:45:34] <mrig> environments are fascinating.
[12:45:59] <mrig> All shells different forms of I suppose.
[12:46:07] *** Joins: jumpArtifact (~jumpArtif@user/jumpartifact)
[12:46:37] <alycidyne> vdamewood: you wrote a toy OS?
[12:46:59] <beaky> yes back then lisp was like the future of programming alongside smalltalk
[12:47:00] <vdamewood> alycidyne: I never got to the Kernel.
[12:47:14] <arahael> alycidyne: No I don't know how DWARF works.
[12:47:14] <alycidyne> aw :|
[12:47:40] <beaky> emacs is older than lisp i think but overtime it got inspired by that lisp machine and emacs lisp was adopted
[12:47:45] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[12:48:39] <beaky> the one on that symbolics environment is "zmacs" https://en.wikipedia.org/wiki/Zmacs
[12:49:09] <mrig> https://www.emacswiki.org/emacs/TECO
[12:49:18] <beaky> it didnt use emacs lisp but a precursor to modern common lisp i think
[12:49:22] <mrig> cool, it was first a tape editor!
[12:49:31] <vdamewood> beaky : LISP 1958, EMACS 1976
[12:49:48] <beaky> yeah emacs is ancient
[12:50:28] *** Quits: jumpArtifact (~jumpArtif@user/jumpartifact) (Client Quit)
[12:51:15] *** Quits: danielrparks (~quassel@2600:1700:3f7b:20f:da70:274d:afff:7f24) (Quit: No Ping reply in 180 seconds.)
[12:51:58] <mrig> knotwork would make a nice name for an editor :)
[12:52:30] *** Joins: danielrparks (~quassel@2600:1700:3f7b:20f:7e1e:fe0c:bf8c:a3a8)
[12:52:46] <mrig> one of those fantastic English words with hundreds of meanings depending upon your vector of arrival :)
[12:53:05] *** \c is now known as \\
[12:53:10] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Read error: Connection reset by peer)
[12:53:11] <beaky> ok i guess lisp is a bit older but i think modern common lisp is a bit younger than the lisp of modern emacs (which came before common lisp i think)
[12:53:13] *** Joins: TheAceOfHearts_ (~TheAceOfH@24.41.239.76)
[12:53:13] <mrig> Programming really reminds me of knot tying though :)
[12:53:36] *** \\ is now known as Guest606
[12:53:55] *** Joins: bytefire (~bytefire@51.19.186.131)
[12:53:56] <beaky> an operating system where you can honestly say emacs is the os
[12:54:03] *** Guest606 is now known as \o`
[12:54:06] <mrig> so elegant when done correctly and absolute clown f**kery that is impossible to untie when gotten wrong.
[12:54:18] <alycidyne> beaky: someone actually made Emacs PID 1 ;)
[12:54:21] <vdamewood> beaky, yeah, Common Lisp was 1984.
[12:54:38] <alycidyne> https://www.reddit.com/r/linux/comments/2gi1ct/emacs_as_pid_1/
[12:54:52] <mrig> found a superb explanation of why some love complexity the other day :)
[12:55:02] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[12:55:13] <alycidyne> mrig: care to share?
[12:55:18] <beaky> make emacs replace systemd
[12:55:21] *** Quits: odnes (~odnes@109-178-204-44.pat.ren.cosmote.net) (Read error: No route to host)
[12:55:23] <mrig> hang on, I'll go get it.
[12:55:30] <beaky> and rewrite emacs in rust
[12:55:44] *** \o` is now known as \c
[12:56:13] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 246 seconds)
[12:56:15] *** Lord_of_Life_ is now known as Lord_of_Life
[12:56:17] *** Quits: bytefire (~bytefire@51.19.186.131) (Client Quit)
[12:56:40] <beaky> rewrite the world in rust
[12:57:12] <mrig> alycidyne: https://www.youtube.com/watch?v=nIefBSuvAGw&t=2139s
[12:57:28] <arahael> Curious expression, watching a programming video by Apple. "We'll look at the ProgressEditor next."   Uhh...  I think it means *now*. They're *now* talking about the ProgressEditor.
[12:57:52] *** Joins: Trieste (T@user/pilgrim)
[12:59:12] <alycidyne> beaky: rewrite the world in rust and I'll probably commit suicide.
[12:59:50] <alycidyne> mrig: ah, it's a youtube video :/
[12:59:55] *** Joins: rifl```` (~user@user/rifl)
[13:00:58] <arahael> alycidyne: Rust can't be that bad.
[13:01:01] <mrig> alycidyne: he is citing from 'The rise of the meritocracy' and hes videos are lectures that are well given, very low noise floor.
[13:01:28] *** Joins: halidyne (~kova@91-160-172-214.subs.proxad.net)
[13:01:30] *** Quits: rifl``` (~user@user/rifl) (Ping timeout: 265 seconds)
[13:01:56] <mrig> 'The rise of the meritocracy' is the work in which the word was coined, interestingly enough.
[13:02:17] <mrig> right I best get back to my knotwork.
[13:02:18] *** Quits: audiocat (~audio@2603-8081-1800-00ad-e450-fa91-465b-f753.res6.spectrum.com) (Ping timeout: 240 seconds)
[13:02:37] <beaky> getting back to rewriting the world in rust one line at a time
[13:02:48] <mrig> I've a broken input device that needs some fixing :|
[13:02:53] <beaky> i dont even use rust i just like it when other people use rust
[13:03:18] *** Joins: Trieste_ (T@user/pilgrim)
[13:03:21] <beaky> for isntance when looking up programs i always search for 'rust alternative'
[13:03:56] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 272 seconds)
[13:03:56] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[13:04:06] <arahael> Hmm. Disney+, which I have a subscription for, now requires "Premier Access" to see additional movies.  Guess I'll stop paying.
[13:04:40] *** Joins: absc (~absc@dynamic-adsl-94-34-217-240.clienti.tiscali.it)
[13:05:03] <vdamewood> arahael: The 'Premier Access' is just for the new movies that would be in theaters if not for COVID.
[13:05:12] *** Quits: alycidyne (~kova@91-160-172-214.subs.proxad.net) (Ping timeout: 272 seconds)
[13:05:16] *** Joins: pulse (~pulse@user/pulse)
[13:05:26] <arahael> vdamewood: Yeah, I don't really care about that bit. :)
[13:05:37] <arahael> I just see: I'm paying for a damn service, not for an advertising stream.
[13:05:51] <arahael> I want to see the movies I can watch, and not just be taunted by movies I can't watch.
[13:06:30] <vdamewood> Don't get Amazon Prime Video, then.
[13:08:22] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[13:08:56] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[13:10:21] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 255 seconds)
[13:10:32] *** Joins: Trieste (T@user/pilgrim)
[13:10:32] *** Quits: death916 (~death916@user/death916) (Ping timeout: 255 seconds)
[13:10:54] *** Quits: Trieste_ (T@user/pilgrim) (Ping timeout: 272 seconds)
[13:10:57] <arahael> Thing is, I don't care to see the adverts either.
[13:11:19] *** Joins: AndroUser2 (~androirc@modemcable010.222-200-24.mc.videotron.ca)
[13:11:23] <AndroUser2> Hi
[13:12:17] <vdamewood> arahael: I said don't do it.
[13:14:05] <arahael> I've already withdrawn my credit card from it!
[13:14:24] <vdamewood> Give it to me, then.
[13:14:53] <AndroUser2> Is there a software to move letters in a font via a script under linux? For instance switching p for b and b for p in every font of the PC?
[13:15:11] <vdamewood> Give it to me, then.no.
[13:15:25] <vdamewood> Okay, weird. I must have hit up before I typed no.
[13:15:37] <vdamewood> AndroUser2: No.
[13:15:43] <AndroUser2> Ah
[13:16:09] <AndroUser2> Will be lot of work then
[13:16:50] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 255 seconds)
[13:16:51] <Jck_true> AndroUser2: Why would you even want that?
[13:17:17] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[13:17:36] <mrig> AndroUser2: you can do that with Xmodmap
[13:18:12] <mrig> Or Xmopmab
[13:18:19] <mrig> :D
[13:18:29] *** Joins: hegstal (~hegstal@2a02:c7f:7604:8a00:e6d:4895:5c36:fc58)
[13:18:50] <mrig> Or Xmopmad rather
[13:19:05] <mrig> dang wrong letters, they all look the same :)
[13:19:32] <AndroUser2> I've made a font for my cellphone where letters and numbers are mixed. Hello is F1ii2. I feel prohected from shoulder peeker
[13:20:01] <mrig> [facepalm]
[13:20:03] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[13:20:20] <AndroUser2> protected*
[13:20:28] * mrig slaps AndroUser2 with an alphabet
[13:21:13] <AndroUser2> Is xmodmap for the display or keyboard?
[13:21:24] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[13:21:54] <mrig> keyboard to display, between the two, picked up by xserver I think, which does the mapping.
[13:23:35] <AndroUser2> so i can't use that to tell X "display M as W everywhere"
[13:24:02] <mrig> Make them all into Vi's
[13:24:29] <AndroUser2> define Vi
[13:24:43] <mrig> Oh Ve's
[13:24:59] * halidyne just looks on, shakes his head and goes back to what he was doing.
[13:25:24] <AndroUser2> Ve's?
[13:25:26] <mrig> Well it rather depend upon the vowel that follows it.
[13:25:42] <mrig> V
[13:26:45] <pikapika> The gpu and video game manufacturers are making driver writing a pain
[13:27:36] <mrig> It does sound rather complicated, very big market.
[13:27:52] <mrig> bigger than Hollywood since quite some time.
[13:27:59] <pikapika> mrig, for example i have heard news they are implementing some kind of direct connection between gpu and ssd
[13:28:20] <mrig> well replace with whichever major film producing city fits your location there.
[13:28:42] *** Quits: halidyne (~kova@91-160-172-214.subs.proxad.net) (Quit: leaving)
[13:28:42] <mrig> gpu and disk drives?
[13:28:47] <mrig> Sounds logical.
[13:28:55] <pikapika> One day might not be far when business/dev and video game laptops become completely different and incompatible pieces of hardware
[13:29:17] *** Joins: alycidyne (~kova@91-160-172-214.subs.proxad.net)
[13:29:23] <mrig> Would the market support that though?
[13:29:37] <pikapika> They already don't care about the market
[13:29:42] <alycidyne> Ugh, got an SSL read error which resulted in a bogus connection.
[13:29:53] <pikapika> For example, crypto miners are the biggest market but nvidia seems to dislike them
[13:30:02] *** Joins: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[13:30:06] <Jck_true> pikapika: That day has already come. I got a T490. You can forget about any sort of game on that
[13:30:12] *** brickfat is now known as veterminate
[13:30:23] <Jck_true> Crypto miners are the fucking scum of the earth
[13:30:27] <pikapika> Jck_true, games and gpus have become strange
[13:30:30] *** Joins: entuland (~entuland@user/entuland)
[13:30:41] <pikapika> I'd rather support crypto miners than support nvidia
[13:30:41] *** Quits: veterminate (~brickfat@user/brickfat) (Quit: Leaving)
[13:30:42] <mrig> pikapika: markets are self balancing, individual emotions don't tent to cause so much sway, it is the collective desires that count.
[13:31:32] <pikapika> Jck_true, I am thinking to the tune of there being different oses/editions for video game laptops that are incompatible with normal machines etc
[13:31:39] *** Joins: jazzy (~jaziz@2600:380:c114:2d85:2030:17e6:b76f:c1fa)
[13:31:44] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[13:31:44] <pikapika> Like Windows Gaming Edition vs Windows Standard Edition
[13:31:54] <mrig> that balancing depends more upon the nature or whims of a chaotic system than anything else.
[13:32:08] *** Quits: TheAceOfHearts_ (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[13:32:18] <mrig> pikapika: really good games do not require the latest hardware to work.
[13:32:26] <pikapika> mrig, of course
[13:32:27] <edgar-rft> cryptominers seem to have the desire to collect money...
[13:32:38] <mrig> edgar-rft: and generate heat.
[13:32:40] <pikapika> I know oblivion works on most systems and in Intel Integrated Graphics
[13:33:01] <mrig> Glorious entropy.
[13:33:16] <mrig> dang this input device wont play ball :(
[13:33:55] <mrig> I wish things were made just a little bit bigger and easier to fix.
[13:34:06] <pikapika> Exactly
[13:34:18] <deniska> pikapika: I've heard people who need beefy laptops for work that the best they can get also come with RGB keyboards and other "gamer" attributes :)
[13:34:30] <deniska> s//complain/ :)
[13:34:35] <pikapika> RGB nonsense is so annoying
[13:34:58] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[13:35:36] <mrig> Im going to pen and paper, feeling inspired after listening to Donald Knuth last night :)
[13:35:54] <mrig> just for the working out scribbling mind you.
[13:36:28] <mrig> deniska: do you mean those laptops with an ominous red glow?
[13:36:35] <mrig> they look really fast!
[13:36:42] <pulse> RGB can typically be turned off
[13:36:58] <mrig> All the really good games are pretty simple.
[13:37:03] <pulse> my mouse emits rainbows by default
[13:37:08] <pikapika> The thing is that
[13:37:10] <pulse> but you can turn it off
[13:37:21] <pikapika> I have a feeling Microsoft and hardware companies are "in on it"
[13:37:35] <pikapika> They have mutual cycles
[13:37:43] <mrig> Mine emits rainbow and the turning off function never worked, it was a amazon reject :)
[13:37:56] <pikapika> I make a new thing, and you make a new thing that only support each other and nothing older
[13:38:26] <alycidyne> pikapika: it's the idea of software as a product. It works for the same reason fads work
[13:38:46] *** Joins: death916 (~death916@c-67-182-183-147.hsd1.ca.comcast.net)
[13:38:58] <alycidyne> It's an illusion. All of the activities we do today were conceptualized in the 1960s.
[13:39:56] *** Quits: a1paca (~a1paca@user/a1paca) (Quit: ZNC 1.8.2 - https://znc.in)
[13:40:15] *** Joins: a1paca (~a1paca@user/a1paca)
[13:40:19] <pikapika> alycidyne, the 60s are the hot new thing
[13:40:22] <mrig> maya is a glorious word for this.
[13:40:28] <pikapika> Its back to thin terminals and mainframes
[13:40:35] <mrig> needs to be treated with a great deal of respect.
[13:40:45] <pikapika> I meant to say browsers and clouds
[13:40:51] <mrig> no point in grumbling about it, better to understand it.
[13:41:02] <alycidyne> pikapika: yeah, except with 10,000x more transistors on the terminals than there were on the mainframes :P
[13:41:06] <alycidyne> at least
[13:41:08] <pikapika> Exactly
[13:41:15] <pikapika> Its the bad of the 60s with none of the good
[13:41:24] <alycidyne> pikapika: because there are 10,000x more people working in the computing industry
[13:41:31] <beaky> sick modern new symbolics style keyboard with alps switches for hte low low price of around 1500 € euros https://youtu.be/jOe6lhkN7oE
[13:41:32] <alycidyne> pikapika: so we need to give them work
[13:41:53] *** Joins: odnes (~odnes@109-178-204-44.pat.ren.cosmote.net)
[13:42:52] <alycidyne> The problem is that ideas do not obey the laws of scarcity, and humans were never designed to think of anything that was not scarce
[13:43:05] <mrig> beaky: I have seen a set of 4 chairs at 60,000€ the chair.
[13:43:16] <mrig> curious thing really.
[13:43:28] <alycidyne> mrig: where?
[13:43:38] <mrig> In a ship yard
[13:44:07] <mrig> the guy in charge of carrying them through the yard was rather nervous.
[13:44:20] <mrig> up the scaffolding and onto the yacht.
[13:44:23] <beaky> 60,0000 euros per chair damn
[13:44:38] <beaky> you can buy a lot of really nice teas for that much
[13:45:08] <mrig> I've a rather funny story as to why Jaque Villneuv got dumped by Kiley Minogue if you'd like.
[13:45:16] <mrig> Straight from a crew member ;)
[13:45:34] *** Quits: varaindemian (~varaindem@86.124.22.31) (Ping timeout: 246 seconds)
[13:45:57] <mrig> He had a massive sat dish installed on his yacht so that he could have a remote internet connection back in the 2000's
[13:46:25] <mrig> She dumped him because he spent all of his time playing world of warcraft or some such on line game :D
[13:46:55] <mrig> Sorry back to programming that was rather a nerd diversion.
[13:47:26] <mrig> beaky: I think that those chairs may have been a part of the tea drinking ceremony.
[13:48:14] <beaky> for tea i sit at the ground to be at one with earth it grounds my qi
[13:48:16] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[13:48:17] <pikapika> There was a time upgrades were considered neutral to positive
[13:48:24] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[13:48:26] <pikapika> Today upgrades are a complete negative
[13:48:34] <pikapika> Always removal of features and addition of bloat
[13:48:35] <beaky> what was your most recent negative upgrade
[13:48:35] <mrig> pikapika: not all of them I'm sure.
[13:48:42] <pikapika> beaky, firefox
[13:48:59] *** Joins: wwilly (~wwilly@217.140.99.251)
[13:49:02] <beaky> but i like the latest firefox the new tabs look nice and high contrast
[13:49:30] * mrig leave me alone Kylie, can't you see that I'm in the middle of a game? <- Sorry but the thought does make me chuckle.
[13:49:33] <pikapika> Basically I dread upgrades
[13:49:38] <pikapika> instead of looking forward to them
[13:49:49] <mercenary> pikapika: so you are saying software has reached its peak, and it is all downhill from here?
[13:49:55] <mrig> pikapika: are you working with JS or something?
[13:50:01] <pulse> without regular update cycles, companies would have nothing to do
[13:50:04] <pikapika> mercenary, it hasn't reached its peak
[13:50:08] <amigojapan> beaky: single tab browsing, when...?
[13:50:10] <pulse> why do you think new iphone comes out every year with slightly different bezels
[13:50:11] <pikapika> But its also going downhill
[13:50:12] <mrig> Some precarious house of cards type of thing?
[13:50:17] <beaky> i use single tab browsing in emacs
[13:50:36] <beaky> soon i will switch from weebchat to emacs for irc once i figure out how to get irc working in emacs
[13:50:59] <Jck_true> mrig: How about a couch. https://www.fritzhansen.com/en/categories/by-series/PK26/PK26 43k USD... :|
[13:51:02] <amigojapan> beaky: ERC?
[13:51:16] <beaky> yes there are other emacs irc clients too i think
[13:51:18] <mrig> pulse: we need more 'roundedness' and make that red triangle green but keep it red?
[13:51:20] <pulse> Jck_true, looks uncomfortable
[13:51:28] <amigojapan> Yup beaky
[13:51:34] <alycidyne> pulse: ever heard of the idea that software is a branch of mathematics, and therefore software products are an illusion?
[13:51:44] <mrig> Jck_true: It is insane, but those markets exist.
[13:51:51] <pulse> ._O
[13:52:00] <pulse> alycidyne, no
[13:52:03] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[13:52:03] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[13:52:03] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[13:52:14] <mrig> alycidyne: illusions are natures way of reproducing.
[13:52:17] <pikapika> Software is a branch of electronics alycidyne
[13:52:20] <pikapika> Not of mathematics
[13:52:21] <beaky> nice there is a much more recent demo of the symbolics environment delivered in the 2021 ccc conference https://youtu.be/7RNbIEJvjUA?t=395
[13:52:33] <alycidyne> pulse: That's what Edsger Dijkstra campaigned for all his life
[13:52:36] <mrig> alycidyne: don't believe me go take a look at the birds of paradise.
[13:52:39] <pulse> software is in its own category. it didn't even exist ~70 years ago
[13:52:40] *** Joins: brickfat (~brickfat@user/brickfat)
[13:52:51] <beaky> yes software existed way before electronics like back in the punch card era
[13:52:55] <pulse> one or two generations ago there would have been no notion of software
[13:52:56] <mrig> pulse: very true, such a new thing.
[13:53:03] <alycidyne> pulse: you mean code?
[13:53:06] <mrig> still wet behind the ears really.
[13:53:11] <alycidyne> pulse: because software > code
[13:53:19] <pikapika> pulse, software is the closest to electronics if we have to connect it to any long established engineering branch
[13:53:20] <amigojapan> pulse: beaky DNA contains software
[13:53:24] <alycidyne> pulse: all code is software, but not all software is code.
[13:53:27] <pikapika> Software is about the control of digital electronics
[13:53:37] <alycidyne> pikapika: you mean machine code?
[13:53:38] * mrig draws and analogy between the complexity of software and the peacocks tail.
[13:53:44] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 272 seconds)
[13:53:47] <pikapika> alycidyne, all software is machine code
[13:53:51] * mrig shakes his tail feather.
[13:54:11] <mrig> pikapika: no point in getting irate about it though.
[13:54:28] <mrig> but reason is worth working towards mind you.
[13:54:30] <pikapika> There is no such thing as "pure mathematics" for software
[13:54:35] <pulse> you know just because a shirt is made from cotton doesn't mean the cotton is what makes the shirt
[13:54:48] <pikapika> Software is the control of digital electronics
[13:54:54] <alycidyne> pikapika: okay, do you know what the lambda calculus is?
[13:54:55] <pulse> the shirt transcends the material it was made of
[13:54:57] <pikapika> Therefore it is a branch of electronics and electrical engineering
[13:55:01] <pulse> and becomes useful in its own right
[13:55:11] <pulse> software is more than the sum of its parts
[13:55:19] <mrig> pikapika: no such thing as pure math, to my mind; Only math that we've not yet found real world symmetries of yet.
[13:55:22] <pikapika> alycidyne, completely mathematically equivalent to turing machines...both of which are mathematical theories not real systems
[13:56:03] <alycidyne> pikapika: so you're saying real systems have no relation to turing machines whatsoever?
[13:56:13] <beaky> yes but it is those formal systems that lay out the norms of what computation is (church-turing thesis)
[13:56:30] <pikapika> alycidyne, the only relation they have is in regard to halting problem and similar matters
[13:56:42] <pikapika> Which is why static type systems will always be safer than dynamic types etc
[13:56:44] <amigojapan> mrig: I believe some concepts in math Mary be fantasies tho and have no real world symmetries
[13:56:58] <amigojapan> May be
[13:57:02] <mrig> amigojapan: the sky is not the limit, you grey mind is.
[13:57:03] <pikapika> Computer Science is a branch of Mathematics
[13:57:12] <mrig> amigojapan: your lack of imagination.
[13:57:19] <pikapika> Computer Software is a branch of Engineering, specifically Electronics
[13:57:30] <alycidyne> pikapika: do you know about the Curry-Howard correspondance?
[13:57:37] <pikapika> The digital signal processing people were doing software for a long time
[13:57:44] <pikapika> Even though we call them electronics people
[13:58:34] <mrig> amigojapan: the world in Douglass Adams springs to mind, in which the inhabitants only conceptualised in 2d and had no idea that the sky was there such was the uniformity of the drabness. Until one day something fell from it...
[13:58:44] <pikapika> alycidyne, what use is that if it turns out that any program I write is apparently also some mathematical proof? The only interesting things will happen if we are able to actually achieve the transformation, especially if its possible both ways
[13:59:11] <pikapika> Anyways any theoretical construct of mathematics always has the problem of being unbounded
[13:59:18] <amigojapan> Yeah I read Flatland mrig
[13:59:22] <pikapika> Something could be "finite" in mathematics
[13:59:28] <pikapika> and be arbitarrily large
[13:59:37] <beaky> indeed there are systems that are designed according to propositions as types like coq and agda
[13:59:39] <pikapika> Lets say you proved so and so algorithm finishes in finite steps
[13:59:49] <pikapika> 10 is finite, 10^100 is finite, 10^100^100 is also finite
[14:00:01] <pikapika> Bounds computation is much more useful than any theoretical math
[14:00:21] <amigojapan> beaky: I heard they will rename coq
[14:00:27] <mrig> amigojapan: ah, so long as don't live in in :P
[14:00:42] <mrig> that would be very boring :|
[14:00:53] <beaky> yes i think they did a poll for coq
[14:01:00] <amigojapan> mrig: I live in Japan
[14:01:05] <mrig> ah cool :)
[14:01:09] <beaky> 2d forever
[14:01:32] <mrig> yay! the world is again flat and fits my inner narrative.
[14:01:37] * mrig is joking.
[14:01:56] <amigojapan> beaky: I think they should call it "rooster"
[14:02:05] * mrig sneaks a false 3d onto the 2d surface.
[14:02:06] <alycidyne> pikapika: look, if that's your attitude, then fine, but not all software is just code
[14:02:29] <pikapika> But thats all it is, software is a means to control electronic circuits
[14:02:39] <pulse> pikapika, software without a front-end is useless
[14:02:47] <pikapika> It is coincidental that some mathematical frameworks are equivalent to an abstracted form of it
[14:02:48] <pulse> and a good front-end is much more than just math
[14:02:49] <GeDaMo> Everything other than machine code is just comments :P
[14:02:56] <pulse> a good front-end requires a human touch
[14:02:59] <password> man i still suck at inheritance
[14:03:14] <password> all the syntatical sugar i need to get it right never stuck with me
[14:03:16] <mrig> pulse: as does a good backend.
[14:03:23] <pulse> mrig, sure, but less so i think
[14:03:25] <mrig> GeDaMo: heh, nice!
[14:03:30] <mrig> pulse: I beg to differ.
[14:03:34] *** Quits: aquijoule__ (~richbridg@213-225-7-126.nat.highway.a1.net) (Ping timeout: 252 seconds)
[14:03:46] <alycidyne> pikapika: so, for example, procedures intendend to be done by humans as opposed to machines is not software?
[14:03:55] <vdamewood> amigojapan: Why?
[14:03:59] <mrig> pulse: unless you want a distopian techno hell.
[14:04:09] * mrig cant breath.
[14:04:10] <amigojapan> pikapika: except in DNA software controls biotech
[14:04:17] <pikapika> Of course, often what became various business algorithms were previously manual processes
[14:04:35] <pikapika> amigojapan, thats a completely different kind of thing
[14:04:54] <amigojapan> vdamewood: cause that is what coq was meant to mean originally
[14:05:02] <pulse> there's an art to making good software
[14:05:04] <pikapika> alycidyne, the commonality in both a paper and pen process and a digital hardware program is that of finiteness of time and space
[14:05:08] <pulse> and art is surely not math
[14:05:12] <vdamewood> amigojapan: It still means that in French.
[14:05:16] <pikapika> The difference between the two is what things each is more optimized at doing
[14:05:37] <amigojapan> vdamewood: but they have decided to rename it
[14:05:43] <mrig> pulse: could be intuitive math, less of the obsession with proof?
[14:05:49] <vdamewood> amigojapan: Oh, okay.
[14:05:50] <pulse> mrig, no :p
[14:05:52] <beaky> yes framing software as 'electronic circuit control' mischaracterizes what software is about (which isn't the specification and capture of electric circuits or digital logic design, but about "algorithms" i.e. 'effectively calculable procedures')
[14:06:00] <pikapika> I think the dsp engineers are no different than software engineers
[14:06:07] <mrig> pulse: I'll ask Ramanujan what he thinks.
[14:06:22] <pikapika> beaky, signal processing techniques are also "algorithnms"
[14:06:25] <mrig> hang on, he's 100 years in the future, how can we talk?
[14:06:28] <pulse> he could do math, i doubt he could paint like bob ross
[14:06:47] <pikapika> mrig, I think hilbert was a smart man
[14:06:49] <beaky> pikapika: yes software is about the algorithms in themselves in general rather than algorithms in a domain like signal processing
[14:07:01] <vdamewood> Why are they changing it?
[14:07:02] <pulse> software is more than just algorithms
[14:07:04] <beaky> whereas its not true that signal processing as a field studies algorithms in general
[14:07:17] <mrig> pikapika: I'd love to learn more about him, am looking forwards to learning about hilbert space when my math chops are up to scratch.
[14:07:19] <pulse> it's easier to explain with games. a game is more than just algorithms seems a more explainable statement
[14:07:21] <beaky> indeed software is alot more than algorithms its also about their specification and verification
[14:07:24] <vdamewood> pulse: It's also data structures.
[14:07:34] <pulse> vdamewood, and bugs!
[14:07:36] <pikapika> beaky, software is still mainly bounded by the electronic circuits. If you try to do things that are hard or unnatural for the circuits your software is going to suck hard
[14:07:40] * vdamewood eats a bug.
[14:07:48] *** Joins: richbridger (~richbridg@mobiledyn-185-69-244-156.mrsn.at)
[14:08:12] <beaky> software isnt bounded by electronic circuits at all because software is nice and abstract you can run software without any electronics
[14:08:14] <vdamewood> Okay, Let's see if my merged ICMP listener works.
[14:08:18] <pikapika> All fields have algorithms, only ones specific to them. Pure Computer science doesen't study financial algorithms
[14:08:20] <alycidyne> pikapika: that's the equivalent of 'doc, it hurts when I do this! then don't do it'
[14:08:22] <amigojapan> pikapika: how about in mechanical computers?
[14:08:29] <pikapika> Pure computer science doesn't study perfectly valid algorithms like least squares method
[14:08:30] <pikapika> etc
[14:08:41] <pikapika> amigojapan, they have different constraints and different things that are fast and slow
[14:08:55] <pikapika> Mechanical computers can do harmonics more naturally probably
[14:08:57] <pikapika> for instance
[14:09:08] <amigojapan> pikapika: but they use software too
[14:09:27] <pikapika> You mentioned dna having algorithms. Its the same concept, they re completely different domains
[14:09:35] <alycidyne> pikapika: you can use software for whatever purpose, but just don't say that *all* software is used for that purpose
[14:09:39] <pikapika> And in this universe and timeline, mechanical computers only went as far as desk calculators
[14:09:50] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[14:09:57] <pikapika> We'd talk more about them had they evolved to the power of general purpose digital hardware
[14:10:19] <alycidyne> Reality isn't just what we talk about
[14:10:29] <pikapika> Reality is everything
[14:10:34] <amigojapan> pikapika: there was a loom that followed programs in punchcards
[14:10:43] <alycidyne> amigojapan: the Jacquard loom
[14:10:53] <pikapika> amigojapan, exactly and looms have different languages, different algorithms, different goals etc
[14:10:59] <amigojapan> Thanks alycidyne
[14:11:47] <pikapika> The FP programmers despite their highest attempts at making good langauges are failing simply because they are working against the machine. Languages like asm and C (or even Java) work so nicely because they meld with the machine, become the machine instead of trying to be something the machine isn't
[14:11:53] <amigojapan> pikapika: it still uses software. So software is not restricted to the world of electronics
[14:12:16] <pikapika> amigojapan, okay. Tell me how I can use the latest sorting algorithm on my loom.
[14:12:30] <pikapika> Or the latest advances in loom technology in my database engine.
[14:12:47] <alycidyne> pikapika: if that's all you're interested in, fine, but don't speak for *all* software
[14:12:49] <beaky> they had radix sorting on punchcards i think its how the IRS sorted records for decades before electronics
[14:13:40] <pikapika> Software is blood, guts and sweat reality of registers and buses and interrupts.
[14:13:45] <pikapika> Computer science is abstract mathematics
[14:13:50] <vdamewood> So many distros for aarch64, and i don't have an aarch64 CPU. Damn.
[14:13:58] <pikapika> The two are different fields, its only coincidence that there is some overlap between the two.
[14:14:05] <amigojapan> pikapika: I think you may be able to code a basic sorting algorithm in a loom. To for example make a pattern from the most ammount of dymples to the least
[14:14:06] <pulse> is aarch arch that has has its toes stepped on
[14:14:10] <pulse> aaa!rch
[14:14:15] *** Quits: Raguile (~Raguile@user/raguile) (Ping timeout: 256 seconds)
[14:14:19] <mrig> lol
[14:14:21] <beaky> yes if only walk to the store and get aarch64 mainboards and cpus liek we could for x86
[14:14:35] <pikapika> I don't know enough about looms to comment on that
[14:14:39] <vdamewood> beaky: If only.
[14:14:49] <alycidyne> pikapika: yet you did.
[14:14:50] <pikapika> Looms are interesting, and I want to make a simple one some day
[14:14:54] <pikapika> But they are a very different thing
[14:15:12] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[14:15:12] * vdamewood hands pikapika a bunch of punch cards
[14:15:22] <amigojapan> pikapika: they are the same thing. They use logic
[14:15:22] <pikapika> alycidyne, if looms were so similar why don't we see regular flow of programmers between the two fields
[14:15:43] <pikapika> I bet there is much more flow of programmers between dsp and general software than between these two fields
[14:15:55] <beaky> in the early days it was true all the programmres were hardcore punchcard women
[14:15:56] <alycidyne> pikapika: because that's the result of *commercial* pressures
[14:15:58] <amigojapan> pikapika: cause looms are not so popular
[14:16:09] <beaky> who transferred from looms
[14:16:14] <pikapika> How about academic papers then
[14:16:27] <alycidyne> pikapika: yes, business doesn't care about theory, but that's not an excuse to leave it behind
[14:16:32] <pikapika> Or even someone working in his free time
[14:16:37] <amigojapan> pikapika: electronics has become the main way human made software is used
[14:16:44] <pikapika> and writing books on loom equivalence theory or whatever
[14:17:10] *** Joins: Raguile (~Raguile@user/raguile)
[14:17:38] <pikapika> Electronics and software is inseparable. The main cases where old manual processes came to be useful in software also turn out to often be the more applied areas of math like numerical algorithms than pure logic or the construction of the reals etc
[14:17:41] <amigojapan> pikapika: why can't you build a mechanical touring machine?
[14:17:42] <beaky> yes in the early days of ibm i think they had alot of manuals about looms
[14:17:47] <alycidyne> pikapika: you're using an engineering phenomenon to make a decision about theory. That's what is irking me.
[14:18:04] <pikapika> amigojapan, we can, it will be better at different things and have different bottlenecks
[14:18:29] <pulse> it will be slower by a factor of 10 billion
[14:18:44] <amigojapan> pikapika: ok so then you recognize that software can exist outside of electronics
[14:18:47] <pulse> photonic circuitry is the next level
[14:18:58] <pulse> also imagine friction in computing... gah
[14:18:58] <pikapika> I deal with what happened in this timeline and in this universe
[14:19:09] <pikapika> I leave thinking of hypotheticals to writers and movie directors
[14:19:35] <alycidyne> pikapika: so you're putting mathematicians on the same level as writers and movie directors
[14:19:44] <amigojapan> pikapika: "software" is a set of instructions that direct a mechanism to do something
[14:19:46] <beaky> yes in this universe software isn't about 'electronics' at all
[14:19:48] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[14:19:50] <pikapika> Mathematics is a different branch from electronics
[14:20:03] <pikapika> It happens to be useful in the latter but it isn't It
[14:20:10] <pikapika> Likewise for mathematics and computer software
[14:20:12] <amigojapan> pikapika: it does not matter what the mechanism is made out of
[14:20:22] <CuriousErnestBro> good day
[14:20:35] <beaky> hello bro im beaky
[14:20:38] <pulse> hello CuriousErnestBro
[14:20:42] <pikapika> It absolutely does. We can talk of turing machine theory all day, but the only real implementation we have of them is electronic digital circuits.
[14:20:57] <CuriousErnestBro> I have heard that using a wrapper class around a db implementation is worse than littering ORM calls throughout your code
[14:20:57] <pikapika> Those who forget this fact of reality are bound to fall into the abyss and make the same old mistakes again and again
[14:21:12] *** Quits: paulo_ (~paulo_@user/paulo/x-9032687) (Ping timeout: 272 seconds)
[14:21:16] <alycidyne> pikapika: if the implementation is all you care about, fine, but don't constrain theory to it
[14:21:22] <pulse> CuriousErnestBro, what was the reasoning for that statement?
[14:21:25] <amigojapan> pikapika: you are closed minded
[14:21:35] <pikapika> Software engineering is a branch of digital electronics
[14:22:04] <pulse> the point of wrappers is to be the middle layer between two things, either to simplify the API or to allow interop after something changes
[14:22:11] <pikapika> amigojapan, let me know when the Haskell people manage to create a usable operating system
[14:22:26] <pulse> pikapika, software engineering includes things like psychology
[14:22:38] <CuriousErnestBro> pulse I think they said that you're just implementing a worse version of the ORM because you get to the point of "oh, I need filtering for this db call, let's add another method that does that"
[14:22:47] <pikapika> pulse, it does, but so does designing any other interface
[14:22:57] <beaky> yes there's a lot of software engineering that doesnt involve electronics at all
[14:23:06] <pikapika> Be it a web app or an airplane cockpit
[14:23:08] <pulse> pikapika, software without interface is just a bunch of dead code, so you necessarily need to include non-mathy stuff to be able to produce it
[14:23:16] *** Joins: salitos (~salitos@154.78.133.246)
[14:23:19] <amigojapan> beaky: especially DNA
[14:23:25] <pulse> CuriousErnestBro, i don't see anything wrong with that
[14:23:50] <pulse> especially if it simplifies the code that uses said wrapper
[14:24:00] <beaky> 'software engineering = electronics' is kinda like saying 'mathematics = ink' just because maths heavily involves the use of symbols and symbols are most efficiently represented in ink
[14:24:02] <CuriousErnestBro> pulse but I decided to not do that since my program is quite small (discord bot)
[14:24:05] <pulse> but idk, i'm not hugely experienced with databases
[14:24:06] *** Quits: death916 (~death916@c-67-182-183-147.hsd1.ca.comcast.net) (Changing host)
[14:24:06] *** Joins: death916 (~death916@user/death916)
[14:24:15] <pulse> CuriousErnestBro, then don't do it :p
[14:24:29] <beaky> nice i like databases
[14:24:30] <alycidyne> pikapika: I don't care about art generated by mathematics, but I will never say that problem solving is only for engineering. If your art can be expressed by a mathematical solution to a problem, fine
[14:24:37] <CuriousErnestBro> pulse this is my code https://bpa.st/5N3A
[14:24:44] *** Quits: chemiker (~xarch@ip5f5a05e1.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[14:24:54] <CuriousErnestBro> I was thinking of migrating to redis instead of using JSON files as a key-value store
[14:25:05] <pikapika> beaky, I think mathematics is ink is closer to what I believ epersonally
[14:25:15] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[14:25:18] <CuriousErnestBro> now my app doesn't have large throughput at all so JSON is probably fine for now
[14:25:18] <pikapika> I find Hilbert's philosophy on mathematics closer to my views
[14:25:31] <beaky> yes i think there was a book about how important the development of writing (and iprovements in writing) were to mathematics development
[14:25:31] <CuriousErnestBro> pikapika are you a mathematician?
[14:25:45] <pikapika> CuriousErnestBro, no
[14:25:57] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 255 seconds)
[14:26:04] <pulse> pikapika, when it comes to games, there is no algorithm for how to make a game fun. "fun" is a very important concept to games, yet no amount of algorithmic thinking will produce it
[14:26:14] <pulse> therefore games transcend the notion of being simply a bunch of digital signals
[14:26:17] <pikapika> Games are art
[14:26:20] <pulse> right
[14:26:23] <pikapika> Art is by definition not engineering or math
[14:26:25] <CuriousErnestBro> beaky I saw a video the other day about a group of mathematicians being fed up with poor writing they made a fictional persona to re-write a bunch of stuff
[14:26:28] <alycidyne> pulse: fun is not a matter of software, that's not a good example
[14:26:48] <CuriousErnestBro> beaky his name was Nicolas Bourbaki
[14:26:48] <pulse> the next point i was going to make is that software is art as well, just slightly more in the direction of pure logic than games
[14:26:55] <alycidyne> pikapika: okay, what about art generated by algorithms?
[14:26:58] <pulse> alycidyne, wait why not
[14:27:10] <pikapika> Hilbert had a very synthetic view on mathematics
[14:27:15] <pikapika> alycidyne, the end result is the art
[14:27:17] <pulse> alycidyne, if you have a bug in your game, that lower the fun. so algorithms directly either produced or diminished it
[14:27:21] <pikapika> the algorithms are pure coincidence
[14:27:21] <amigojapan> pikapika: games are full of mathematics
[14:27:27] <pikapika> Games use mathematics
[14:27:35] <alycidyne> pulse: you know some people get off on bugs
[14:27:36] <GeDaMo> Sometimes bugs increase the fun in games
[14:27:38] <pikapika> But their end goal isn't mathematical
[14:27:59] <alycidyne> pikapika: but you cannot deny that math was used. Math is a tool
[14:27:59] <pulse> alycidyne, some retro enthusiast go through heroic efforts to eliminate bugs in decades old games :p
[14:28:03] <CuriousErnestBro> I wish to understand linear algebra one day
[14:28:14] <alycidyne> pulse: it is a process, a procedure to generate statements
[14:28:30] <alycidyne> sorry meant that for pikapika
[14:28:33] <amigojapan> pikapika: the game of Life is a game that is also fully Turing compliant
[14:28:34] <pulse> anyway. my point was that software is art as well
[14:28:35] *** Joins: h4cker (~h4cker@158.255.211.151)
[14:28:41] <pikapika> The game of life isn't a game
[14:28:41] <alycidyne> pikapika: it is a process, a procedure to generate statements
[14:28:50] <beaky> yes this was the book abotu the development of formalization and how it improved mathematics over time https://www.cambridge.org/nl/academic/subjects/philosophy/logic/formal-languages-logic-philosophical-and-cognitive-analysis?format=HB&isbn=9781107020917
[14:29:12] <pulse> i mean even piping commands in the terminal is something akin to art
[14:29:17] <pulse> it's subtle but it's there
[14:29:19] <pikapika> beaky, I find most closeness with Hilbert's views on the philosophy of mathematics
[14:29:31] <GeDaMo> https://adrianb.io/2015/02/14/bunnyhop.html
[14:29:35] <pikapika> amigojapan, the game of life isn't a game
[14:29:38] <alycidyne> pikapika: the fact that math was used on something other than math itself does not change the fact that math was done
[14:29:44] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[14:29:53] <amigojapan> pikapika: all you are doing is keeping on says "X is not y"this is getting old
[14:29:53] <h4cker> zZzzZZ
[14:30:04] <pikapika> alycidyne, then I can claim that playing guitar is math because a lot of mathemaics was used in designing the signal processing circuits
[14:30:21] <beaky> nice i like hilbert
[14:30:24] <beaky> he has a cool infinite hotel
[14:30:28] <pulse> i like guitars
[14:30:31] <alycidyne> pikapika: *manufacturing* the guitar involves math
[14:30:31] <pikapika> beaky, Hilbert was a smart man
[14:30:44] <pikapika> Likewise making games needs some math
[14:30:55] <pikapika> But the end goal of a game isn't to be a math package
[14:30:58] <pulse> even good code is art
[14:31:00] <pikapika> neither is of te guitar
[14:31:03] <pulse> by itself
[14:31:17] <pikapika> And making games requires in fact the much more applied branches of mathematics
[14:31:19] <pulse> furthermore, even designing a good circuit is art
[14:31:20] *** Joins: paulo_ (~paulo_@user/paulo/x-9032687)
[14:31:23] <pulse> it's all art
[14:31:23] <pikapika> even more so guitar manufacture
[14:31:40] <pikapika> Abstract metalogic and axiomatizations of mathematics come nowhere into any of it
[14:31:50] <pikapika> Reality is finite
[14:31:50] <pulse> it's not just all some kind of dry, mundane, predictable logic. making things = creative endeavors = art
[14:31:53] <pikapika> Existence is warfare
[14:31:54] <pulse> whatever you make it's art
[14:31:58] <pulse> i rest my case
[14:31:59] <pulse> :p
[14:32:19] <pulse> how many creative sparks were needed to produce a modern CPU?
[14:32:22] <alycidyne> pikapika: okay, what if you have no one to fight?
[14:32:42] <pikapika> I am not a writer or movie director
[14:32:51] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[14:32:52] <GeDaMo> You always have reality to fight :P
[14:32:54] <pikapika> I leave such tasks to people writing fantasy/scifi books
[14:33:07] <pikapika> Its also funny you seemed to imply I think writers as inferior beings
[14:33:08] <alycidyne> pikapika: but this isn't a story, this is a situation which can happen
[14:33:08] <pulse> just don't give it to disney
[14:33:17] *** Quits: h4cker (~h4cker@158.255.211.151) (Quit: leaving)
[14:33:18] <pulse> they will make 3d animated cartoons with it
[14:33:22] <pikapika> alycidyne, well I'll do all the drugs I can get my hands on
[14:33:34] <pikapika> And play with all the weapons I have
[14:33:35] <amigojapan> pulse: alycidyne pikapika had just been saying "x is not y"over and over and it just seems to be his opinion
[14:33:37] <pikapika> Drive all the cars
[14:33:38] <pikapika> etc
[14:33:46] <alycidyne> pikapika: okay, so you exist, but you're not in warfar-
[14:33:51] *** Joins: h4cker (~h4cker@158.255.211.151)
[14:34:00] <pulse> amigojapan, is that an opinion? :p
[14:34:16] <alycidyne> Right
[14:34:20] <pikapika> Software engineering is not philosophy
[14:34:26] <pulse> it kinda is
[14:34:29] <pikapika> Curry Howard and all that stuff is philosphy
[14:34:38] <pikapika> pulse, it has a philosohy but it isn't a philosphy in itself
[14:34:41] <pulse> real philosophy should be useful
[14:34:47] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[14:34:52] <pulse> that makes engineering a much better philosophy than most philosophy
[14:34:56] <mrig> mathematics and ink have the same or a similar homotopological grouping.
[14:34:59] <alycidyne> pikapika: and insofar as philosophy never answered your questions, I assume you think it has no relation to reality then.
[14:35:04] <death916> whatdo yoy mean its not philosophy pep stands for python engineering philosophy
[14:35:21] <death916> ok mayb not but it should
[14:35:24] *** Quits: entuland (~entuland@user/entuland) (Read error: Connection reset by peer)
[14:35:27] *** Joins: snake (~snake@user/snake)
[14:36:05] <mrig> pikapika if software is synonymous with electronics, and electronics synonymous with acoustics, does that make software noisy?
[14:36:13] <mrig> or sound ...
[14:36:23] <pikapika> beaky, Hilbert had a philosophical view point very close to "mathematics IS ink"
[14:36:36] <mrig> nice, I'd like to write something that reverberates :)
[14:36:55] <pulse> i prefer Gödel
[14:37:01] *** Joins: dan01 (~dan01@2a02:2f0f:3017:4e00:34e8:4cb6:3687:cbf4)
[14:37:10] <mrig> I must read some Gödel :)
[14:37:12] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[14:37:13] <pulse> his incompleteness theorem is a nice wrench into rationalist's point of view
[14:37:18] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[14:37:32] <mrig> I'm far to ignorant of his work.
[14:37:42] <pulse> he proved that logical systems are incomplete
[14:37:51] <alycidyne> pulse: his incompleteness theorem sets a bounds on the application of logic. What you make of that is up to you.
[14:37:55] <mrig> pulse: rations are always about division, there is more to life than that :)
[14:37:55] * vdamewood hands mrig a copy of Gödel, Escher, Bach
[14:38:04] <pulse> alycidyne, it has philosophical implications
[14:38:04] <amigojapan> pulse: like when he says "a mechanical loom that uses punchcards is not software"he is just being closed minded about what software can be
[14:38:12] <beaky> gotta built mathematics one inkbottle at a time lemma by lemma
[14:38:20] <pulse> amigojapan, i don't even know what a loom is
[14:38:29] * pulse shrugs so fast he begins levitating
[14:38:33] <mrig> vdamewood: I have one, thank you for your thought; Just taken a peek into it and really enjoyed, not read in full though yet. :)
[14:38:45] <pikapika>  "Through a proof of existence, Hilbert had been able to obtain a construction"; "the proof" (i.e. the symbols on the page) was "the object"
[14:38:48] <alycidyne> pulse: well, if you want to sob because you can't apply logic to everything, fine, you are free to ignore everything else you can apply logic to
[14:38:52] <vdamewood> pulse: A devices that takes wool as input, and potputs textiles
[14:38:58] <death916> how do you not know what a loom is
[14:39:01] <death916> it holds fruit
[14:39:03] <vdamewood> outputs*
[14:39:05] <death916> fruit of the loom
[14:39:08] <mrig> pulse: ask a Luddite or an Indian cotton weaver :) They will tell you.
[14:39:15] <pulse> alycidyne, no, i'm happy with those results. they prove that logic has limits
[14:39:20] <pulse> therefore there is something in reality that isn't logical
[14:39:25] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[14:39:27] <pulse> vdamewood, i see
[14:39:39] <amigojapan> pulse: it's a machine that makes designs out of textiles. One very advanced one took punchcards programs to make the patterns
[14:39:43] <pulse> when i hear loom i think 1990s adventure game
[14:39:55] <pulse> amigojapan, hardcore
[14:40:05] <mrig> pulse: I'd argue that logic does not have limits, it is our logical axioms that are wrong.
[14:40:09] <GeDaMo> The game Loom featured weaving :P
[14:40:11] <alycidyne> pulse: yes, so why did you assume rationlists would think that Gödel's theorem would frustrate them?
[14:40:39] <pulse> mrig, no, logic has clear limits. the giveaway is that logic can "easily" explain extremely, almost unbelievably complex systems, but logic cannot and never could explain the simplest of questions
[14:40:42] <amigojapan> Brb
[14:41:11] <alycidyne> pulse: because logic is fundamentally your choice - which cannot come from anywhere other than yourself
[14:41:12] <pulse> alycidyne, because it points to the possibility that reality isn't fundamentally logical
[14:41:38] <pulse> which scratches my metaphysical itch
[14:41:43] <alycidyne> pulse: a "rationalist" who can't assume his choice is not a rationalist
[14:42:03] <pulse> you should talk to some hardcore rationalists :p
[14:42:03] <alycidyne> pulse: denying your choice in using logic is not rational
[14:42:25] <mrig> pulse: perhaps this is because our understanding of what logic is is wrong is my contention.
[14:42:37] <pulse> alycidyne, do you embrace physicalisms and/or reductionist materialism as the foundation for reality?
[14:43:38] <vdamewood> Yay, I broke my code.
[14:43:39] <alycidyne> pulse: I personally am not sure, I feel both materialism and dualism don't account for everything
[14:43:47] <vdamewood> It doesn't work. I'm sad.
[14:43:58] <vdamewood> I'm also too sleepy to fix it.
[14:44:26] <pulse> personally, i think reality is more dream-like than we typically care to admit
[14:44:28] <alycidyne> pulse: my POV is that memory, the foundation of repetition recognition (and thus of all perception of existence), relies on energy
[14:44:48] <pulse> alycidyne, i see
[14:44:55] <amigojapan> Lol vdamewood
[14:44:59] <pulse> but where does the energy come from :D
[14:45:09] <alycidyne> pulse: insofar as S = k ln(W), I guess we don't need to posit a separate substance for information and thus spirit
[14:45:18] <mrig> alycidyne: that is dhishakti in sanskrit, I'd agree with you on that.
[14:45:27] <pulse> well nobody has yet explained the prime mover question
[14:45:38] <pulse> it's very odd that anything exists, and the more you contemplate it, the more odd it is
[14:45:42] *** Joins: entuland (~entuland@user/entuland)
[14:45:54] <alycidyne> pulse: well, we don't know everything about the Big Bang yet, obviously
[14:46:12] <pulse> is there some grand "spirit" behind it? is it mechanical? if it's mechanical, who initiated it? etc
[14:46:40] <mrig> pulse: It is fun though, and I think that fun is causal, just look at baby animals playing.
[14:46:41] <pulse> alycidyne, you know the big bang is still happening right now, right :p
[14:47:03] <alycidyne> mrig: I imagine Indian philosophies have a lot of interesting answers to questions, but I haven't studied out of the desire to work out something myself. But that is interesting nevertheless.
[14:47:29] <pikapika> A surface level view considers a cyclical universe
[14:47:35] <pikapika> (ie of eastern philosophies)
[14:47:44] <mrig> alycidyne: it is that language that is the most fascinating, the language defines and structures the philosophies.
[14:48:22] <alycidyne> pulse: you... do know scientists talk about the Big Bang as a point in time, right? (e.g. we can now simulate the state of the Universe to one nanosecond *after* the Big Bang)
[14:48:42] <pulse> well, the state of the universe 13.7 something billion years after big bang is what's happening this very instant
[14:48:54] <pulse> we're just on the far end of the fractal
[14:49:09] <mrig> alycidyne: How can I make that fit my view that time is an emergent property that develops long after the base elements?
[14:49:19] <alycidyne> mrig: on that note, do you know about dependency grammars (Lucien Tesnière)? For me, they directly imply fact ontologies
[14:49:25] *** Quits: hegstal (~hegstal@2a02:c7f:7604:8a00:e6d:4895:5c36:fc58) (Remote host closed the connection)
[14:49:27] <pulse> still, no one yet figured out what came "before" big bang, or what initiated it
[14:49:33] <pulse> and who made all the rules as to how things should behave
[14:49:39] <pulse> who invented gravity
[14:49:43] <pulse> these are all questions that logic can't penetrate
[14:49:52] <mrig> alycidyne: oh no I am not at all familiar, will make a note and take a look into that; Thank you for the pointer!
[14:49:59] <pikapika> There is no reason to assume a before. Belief in god is not an answer. Who made god? Who made the god who made god? etc
[14:50:05] *** Joins: hegstal (~hegstal@2a02:c7f:7604:8a00:cb9c:8f6:3247:45ac)
[14:50:06] <GeDaMo> Didn't the big bang create time too? 'Before' may not really have any meaning
[14:50:07] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[14:50:13] <pulse> pikapika, god has the same prime mover problem as all the other theories
[14:50:24] *** Quits: sealizard (~budaev@190.89-11-212.nextgentel.com) (Remote host closed the connection)
[14:50:28] <pikapika> GeDaMo, indeed what is time without a causality
[14:50:38] <alycidyne> pikapika: it is an answer for one person. Whether others agree is a different question.
[14:50:41] <pikapika> pulse, exactly. No theory can answer the question.
[14:50:41] <amigojapan> pikapika: this mechanical touring machine could definitely do any sort algorithm https://youtu.be/vo8izCKHiF0
[14:51:04] <vdamewood> GeDaMo: There's one hypothesis that the big bang created a universe that goes backwards through time.
[14:51:09] <pulse> i get that time thing a lot, but big bang had to be initiated, right
[14:51:12] <pulse> and initiation requires time
[14:51:14] <pulse> so it's contradictory
[14:51:14] <vdamewood> *another
[14:51:32] <pulse> and it still doesn't explain the rules
[14:51:41] <pulse> who decided there should be strong force and weak force
[14:51:43] <pulse> and how they should work
[14:52:26] <pulse> at the fundamental level reality seems to elude description
[14:52:40] <pulse> either that, or our descriptions are fundamentally wrong to begin with
[14:52:51] <mrig> alycidyne: right yes, I see here it states "The notion of dependencies between grammatical units has existed since the earliest recorded grammars, e.g. Pāṇini, and the dependency concept therefore arguably predates that of phrase structure by many centuries."
[14:54:46] <alycidyne> mrig: the basic tenet of dependency grammars is that every sentence starts with a verb - which, to me, essentially states that everything is a fact, and thus directly implies logic programming
[14:54:59] *** Joins: varaindemian (~varaindem@86.124.78.162)
[14:54:59] *** Joins: TheRedRipper (~TheRedRip@user/theredripper)
[14:55:32] <pulse> it's true that our language shapes our ideas
[14:55:46] <pulse> so it's plausible that birds know more about how the universe works, than us :p
[14:55:48] <mrig> alycidyne: if your language supports it, that verb does not have to be at the start though.
[14:55:49] *** Joins: brickfat (~brickfat@user/brickfat)
[14:55:57] <pulse> they have a description that's more aligned with what is
[14:56:01] <TheRedRipper> pulse: lol maybe
[14:56:22] <pulse> maybe the point is simplicity and not complexity
[14:56:33] <alycidyne> pulse: rather that we don't know more than them :P
[14:56:35] <mrig> TheRedRipper: a salmon know more about geolocation that you do :)
[14:56:39] <pulse> you know how things just make sense when you're lying on the beach, watching stars, sipping some tasty beverage
[14:56:48] <alycidyne> after all, adding facts to a knowledge base doesn't make it more powerful
[14:56:48] <pulse> that's zen :p
[14:56:58] <pulse> alycidyne, precisely
[14:57:10] <pulse> accumulation of knowledge seems to just create more and more questions
[14:57:15] <TheRedRipper> mrig: thats the salmons problem
[14:57:24] <pulse> lol
[14:57:34] <mrig> TheRedRipper: It is of you are a bear in the right place at the right time :)
[14:57:36] <alycidyne> mrig: ... which language are you talking about?
[14:57:59] <TheRedRipper> haha
[14:58:02] <TheRedRipper> good one lmao
[14:58:23] <W> vdamewood, time is not symmetric though.
[14:58:34] <mrig> sanskrit, the word order is not important, and is used to implement higher order logic.
[14:58:47] <TheRedRipper> oof not my language then lol
[14:58:47] <pikapika> pulse, man is the creature most attutned to the forces of nature. No other animal constructed planes, cars, rockets etc
[14:58:52] <mrig> so it is important as it carries other meaning.
[14:58:52] <pulse> i read a theory that binary logic came from i ching
[14:58:56] <pulse> not sure how true
[14:59:10] <pulse> pikapika, and yet we're still just as lost as we were before we created those things
[14:59:10] <alycidyne> pikapika: you mean the most in control of the forces of nature?\
[14:59:10] <mrig> pulse: sure yes it is there, libenetz studied it.
[14:59:33] <pikapika> alycidyne, and that implies we have a better understandingo of those forces
[14:59:52] <pulse> what good is understanding of how a plane works when we can't face our own death in peace
[14:59:55] <alycidyne> pikapika: right, if you're not asking questions, I suppose
[14:59:56] <pulse> a bear doesnt' have this problem
[15:00:06] <pulse> or an otter
[15:00:12] <mrig> The first occidental scholar, if that is important, sure many other  did before them.
[15:00:17] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:00:19] <pikapika> How do you know what a bear or otter thinks
[15:00:30] <pulse> i don't, but i assume they don't have existential crises
[15:00:36] <alycidyne> pikapika: by what it's doing
[15:00:40] <pulse> i've certainly never seen a bear in an existential crisis
[15:00:46] <mrig> I was waiting for a punch line then ...
[15:00:52] <pulse> my point is we're smart in one way, we're very dumb in other
[15:01:12] <TheRedRipper> pikapika: he is one
[15:01:33] <pikapika> Who is what?
[15:01:38] <vdamewood> W: Lunch time doubly so.
[15:02:51] *** Quits: paulo_ (~paulo_@user/paulo/x-9032687) (Ping timeout: 255 seconds)
[15:02:57] <pulse> my point is don't underestimate animals and don't put humans too high :p we may be on top of the food chain but we're still practically speaking very dumb on average
[15:03:04] <mawk> W: /nick _W_
[15:03:09] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[15:03:15] <pulse> otherwise we wouldn't be depressed and we wouldn't pollute the rivers with toxic waste
[15:03:20] <mrig> pulse: fungi are at the top of the food chain.
[15:03:26] <pulse> fungi are fascinating
[15:03:36] * mrig turns the whole shebang upside down.
[15:03:51] <TheRedRipper> mrig: since when?
[15:03:52] <mrig> oh, an i
[15:03:58] <alycidyne> pulse: dumbness is not knowing how to decide... except we are animals, and animals were not designed to decide
[15:04:02] *** Quits: JuggleTux (~tux@83.137.6.190) (Ping timeout: 272 seconds)
[15:04:02] *** W is now known as _W_
[15:04:09] *** _W_ is now known as W
[15:04:17] *** Quits: varaindemian (~varaindem@86.124.78.162) (Ping timeout: 246 seconds)
[15:04:23] <pulse> we're very weird animals
[15:04:24] <W> mawk, thanks for the reminder, gotta keep it active as a backup nick
[15:04:43] <mrig> TheRedRipper: if you remove all fungi from this world we would be expanding already faster than the speed of light!
[15:04:53] <TheRedRipper> fair enough
[15:04:58] <TheRedRipper> fungi does eat all
[15:05:05] <mrig> it is at the top!
[15:05:22] <mrig> Forget that and we are done
[15:05:29] <pulse> you know what's fascinating? dog urination
[15:05:30] <mrig> predators are  parasites.
[15:05:38] <pulse> why do dogs seek the urine of other dogs, and then pee on it
[15:05:47] <pulse> i've often wondered if it's like twitter but for dogs
[15:05:57] <alycidyne> pulse: mailing list :D
[15:06:03] <pulse> something like that :p
[15:06:07] <pulse> seems fairly advanced
[15:06:16] <pulse> and sometimes my dog will take a really long time to sniff it all out
[15:06:19] <mrig> pulse: heh, dog messaging, well cats also tweet in the same way.
[15:06:38] *** Joins: roent (~roent@user/roent)
[15:06:39] <mrig> dogs can see molecular differences, that is pretty amazing.
[15:07:03] <alycidyne> There was one vid of a dog which pissed while walking on its front legs over the whole sidewalk of an entire cul de sac
[15:07:06] <mrig> Thats like seeing the hexyness with your olfactory senses :)
[15:07:21] <alycidyne> Was it writing an ordinance?
[15:07:46] <pulse> a dog's nose is amazing
[15:08:01] <pulse> if i take cheese out of my fridge my dog knows even if he's 10 meters away in a completely different room
[15:08:04] <mrig> odorate is an often overlooked sense.
[15:08:16] <mrig> as is also hearing.
[15:08:20] <alycidyne> pulse: well he heard the fridge before that ;)
[15:08:28] <mrig> when vision rules you get sort of blinded by it.
[15:08:30] <pulse> alycidyne, no, that was my theory at first too
[15:08:31] *** Joins: Rounin (~david@cm-84.212.130.215.getinternet.no)
[15:08:32] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[15:08:38] <pulse> but if i take anything else out he ignores it
[15:08:42] <pulse> only if i take cheese out
[15:08:47] <pulse> then he comes running
[15:09:00] <pulse> it does have to be open though
[15:09:04] <alycidyne> pulse: maybe he recognizes the sound of the wrapping then
[15:09:04] <mrig> sure a dog would smell cheese a mile away.
[15:09:10] <pulse> alycidyne, yeah, that's possible
[15:09:17] *** Quits: brabrax_ (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[15:09:20] <mrig> Does anything exist in the electronic realm that emulates this?
[15:09:32] <pulse> i mean i'm not sure how the cheese fragrant molecules would even make their way all across the house into a totally different room
[15:09:34] <pulse> so it probably is sound
[15:09:37] <alycidyne> mrig: spectral analysis + pattern matching
[15:09:41] *** Joins: brabrax_ (~brabrax@user/brabrax)
[15:09:48] *** Quits: roent (~roent@user/roent) (Client Quit)
[15:10:15] <mrig> alycidyne: I suppose spectral analysis is really similar yes, the olfactory senses must just be examining the hexyness some how.
[15:10:32] *** Quits: brabrax_ (~brabrax@user/brabrax) (Client Quit)
[15:10:42] <mrig> it is a quantum system though which introduces some quandaries.
[15:10:51] <mrig> right at the stem of the brain no less.
[15:11:02] <mrig> well close too that.
[15:11:18] <vdamewood> Sleepytime.
[15:11:30] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[15:11:49] <mrig> atoms are so 20 century, hexyness is the future, just ask KillerWasp! :P
[15:12:25] *** Joins: brabrax_ (~brabrax@user/brabrax)
[15:12:32] <mrig> alycidyne: oh that is an exciting thought, to look forwards too, I best get back to my maths work :)
[15:12:36] *** Joins: aquijoule_ (~richbridg@089144202018.atnat0011.highway.a1.net)
[15:12:58] <mrig> pen and paper it is then!
[15:13:19] <alycidyne> mrig: the problem with vision is in thinking that immediacy is the priority. And immediacy is a sign of a cripplingly low memory capacity.
[15:13:32] *** Quits: richbridger (~richbridg@mobiledyn-185-69-244-156.mrsn.at) (Read error: Connection reset by peer)
[15:14:00] <mrig> alycidyne: it is also an illusion that is created by the brain too.
[15:14:06] <mrig> nice point.
[15:14:07] <alycidyne> I've realized that the precondition for "thought" is memory - without it, no repetition could be recognized, and nothing could be identified
[15:14:11] <GeDaMo> https://en.wikipedia.org/wiki/Electronic_nose
[15:15:01] <pulse> https://en.wikipedia.org/wiki/Smell-O-Vision
[15:15:06] <mrig> alycidyne: I think that thinking is dispersed across different human phenotype, a distributed system. To restrict it to one person is really misleading.
[15:15:23] <mrig> I do have evidence for this, just not organised to present it as yet.
[15:15:41] <alycidyne> One theory I have is that there are no "statics" - things we see as static are, in fact, just systems with a period below that of the sampling rate
[15:15:46] <mrig> similar to the illusion of immediacy that you mention.
[15:16:14] *** Quits: brabrax_ (~brabrax@user/brabrax) (Client Quit)
[15:16:17] *** Joins: SynAckJack (~SynAckJac@cpc88111-dund15-2-0-cust100.16-4.cable.virginm.net)
[15:16:35] <CuriousErnestBro> what's the thing called in C++ where you have function(other_function, data)
[15:17:00] <mrig> That makes sense, well also the difference between the state of 'solid' and 'liquid' if you do not assume that time is a linear constant become quite interesting too.
[15:17:01] <pikapika> a functor or lambda
[15:17:05] <mrig> CuriousErnestBro: a function pointer?
[15:17:11] *** Joins: brabrax_ (~brabrax@user/brabrax)
[15:17:13] <pikapika> or a function pointer yes
[15:17:13] <mrig> Is that just a C thing?
[15:17:26] <pikapika> in C++ the same syntax could also be a functor
[15:17:30] <CuriousErnestBro> no, other_function is a module, and data is a file descriptor-ish thing
[15:17:31] *** Quits: SynAckJack (~SynAckJac@cpc88111-dund15-2-0-cust100.16-4.cable.virginm.net) (Client Quit)
[15:17:33] <mrig> I must study some C++ at some point.
[15:17:43] <pikapika> what is a "module"?
[15:17:43] <GeDaMo> Higher order function?
[15:17:43] <mrig> best do some more math first though :|
[15:17:46] <pikapika> Module isn't a C++ word
[15:17:56] <alycidyne> pikapika: C++20 has modules now
[15:18:06] <pikapika> Oh
[15:18:07] <mrig> pikapika: a facade pattern to hide your messy code? :D
[15:18:12] *** Quits: Raguile (~Raguile@user/raguile) (Ping timeout: 246 seconds)
[15:18:16] <alycidyne> pikapika: but not used in the way presented, no.
[15:18:21] <pikapika> Ok
[15:18:22] <pikapika> So yeah
[15:18:25] <CuriousErnestBro> module::func(something_from_module, something_data_is_written_to_by_something_from_module)
[15:18:27] <pikapika> Its probably just an fp or functor
[15:18:39] <pikapika> yeah its just a function pointer or functor
[15:18:43] <CuriousErnestBro> I don't know the right terms.
[15:18:47] <alycidyne> CuriousErnestBro: also that code smells *really* bad
[15:19:01] <pikapika> that :: syntax could be anything from a static class member to a namespace
[15:19:05] <CuriousErnestBro> This is a code pattern in the C++ documentation, but I forgot the name of it.
[15:19:15] <CuriousErnestBro> alycidyne I don't like it either, I'm just looking for the name
[15:19:18] <pikapika> There is no name
[15:19:22] <CuriousErnestBro> There is
[15:19:30] <pikapika> Its just passing a functor/function pointer
[15:19:34] <GeDaMo> Templates?
[15:19:43] <CuriousErnestBro> ah
[15:19:44] <CuriousErnestBro> ADL
[15:20:02] <CuriousErnestBro> Argument Dependent Lookup
[15:20:08] <CuriousErnestBro> this stuff https://en.cppreference.com/w/cpp/language/adl
[15:20:19] <TheRedRipper> thought that said AOL lmao
[15:20:33] <alycidyne> CuriousErnestBro: gah
[15:20:44] <CuriousErnestBro> found it ◡̈
[15:21:19] <pikapika> That doesn't seem like adl
[15:22:17] <CuriousErnestBro> no?
[15:22:25] <CuriousErnestBro> the specific example is: http://0x0.st/-Of9.png
[15:23:06] <alycidyne> Yep, that's ADL all right
[15:23:21] <CuriousErnestBro> apparently you don't have to do std::getline because of std::cin
[15:23:27] <CuriousErnestBro> and that looks really weird to me
[15:24:15] <alycidyne> CuriousErnestBro: it's because otherwise even operator overloading in namespaces wouldn't work
[15:24:25] <alycidyne> Including... the standard library
[15:24:45] <alycidyne> https://en.wikipedia.org/wiki/Argument-dependent_name_lookup#Example
[15:24:58] <alycidyne> So... gah
[15:26:38] <CuriousErnestBro> hmm okay
[15:26:46] <CuriousErnestBro> that doesn't really like that interesting to me
[15:26:51] <CuriousErnestBro> I'll just ignore it ◡̈
[15:29:12] *** Joins: gitgood (~gitgood@80-44-9-45.dynamic.dsl.as9105.com)
[15:29:44] <alycidyne> It's actually the major reason I haven't added operator overloading in my language yet
[15:29:52] <pikapika> Why would it be strange that a function inside a namesapce or scope has access to the other shit inside that scope
[15:29:58] *** Joins: pyzozord (~pyzozord@user/pyzozord)
[15:30:18] <pikapika> Are you "surprised" methods are able to access member variables and plan to not include classes in your language?
[15:31:50] <alycidyne> pikapika: read the second example of the link I posted
[15:33:46] <alycidyne> ADL is not without problems, and I do hope I come up with a better idea
[15:34:23] <pyzozord> GeDaMo: Have you seen the new video yet? https://www.youtube.com/watch?v=99dKzubvpKE
[15:34:31] <alycidyne> Besides, operator overloading is just a feature, not a show stopper
[15:34:51] * arahael loves operators.
[15:34:55] <GeDaMo> pyzozord: I have not
[15:34:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 276 seconds)
[15:35:03] *** Quits: wei2912 (~wei2912@112.199.250.21) (Quit: Lost terminal)
[15:35:13] <pikapika> I still don't get whats the issue. Its just operator overloading. Obviously if you overload an operator and the overload function only exists in a namespace it will call the namespace version, its not like its calling other unrelated namespaces only the namespace its it which seems...perfectly natural? You should be able to acess anything in your parent. Nobody is surprised at constructing an object and calling a member function
[15:35:13] <pikapika> that this function is able to access data inside the class ie a parent scope
[15:35:17] <pyzozord> GeDaMo: the first four minutes I think that's enough to get a good idea :)
[15:35:54] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[15:36:15] <pikapika> Actually the first example looks worse to me
[15:37:10] <pikapika> I kinda get it now. Otherwise everytime we cout we'd have to use std::operator << instead of just <<
[15:37:41] <DPA> Oh no. That example feels like missing the point of having namespaces completely... Namely, restricting an identifier to a namespace...
[15:38:09] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[15:38:32] <alycidyne> pikapika: that, and also ADL breaks equivalences which, when coupled with inattention, can result in heartbleed-class bugs
[15:38:58] <alycidyne> So, not to add without thought
[15:40:02] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[15:42:02] *** Quits: Foritus (~buggery@cpc91316-watf11-2-0-cust68.15-2.cable.virginm.net) (Ping timeout: 252 seconds)
[15:42:46] <TheRedRipper> whats ADL?
[15:42:53] <arahael> What's a good application for recovering data from a corrupt NTFS drive?
[15:43:17] <TheRedRipper> uhh
[15:43:22] <TheRedRipper> windows disk repair
[15:43:49] <arahael> Windows can't boot it, not even the windows installer can cope with it.
[15:43:59] <TheRedRipper> uhh
[15:44:01] <TheRedRipper> might be toast
[15:44:07] <alycidyne> TheRedRipper: ADL == Argument Dependent Lookup
[15:44:15] <TheRedRipper> o
[15:44:18] <arahael> TheRedRipper: Might be, but it appears to be "merely corrupt".
[15:44:26] <arahael> TheRedRipper: Linux can access it, but can't mount it.
[15:44:46] <pikapika> arahael, whats dmesg saying
[15:44:54] <TheRedRipper> why cant it mount it? too corrupt?
[15:45:03] <arahael> pikapika: I'm just working off a screenshot here.
[15:45:09] <pikapika> Whos computer is it
[15:45:48] <arahael> TheRedRipper: It says: 'The NTFS partition is in an unsafe state. Please resume and shutdown Windows fully (no hibernation or fast restarting), or... Oh, wait.
[15:45:48] *** Joins: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca)
[15:45:58] <arahael> "or mount read-only with the 'ro' option.
[15:46:09] <arahael> Well, this is a simple matter of reading. :)
[15:46:14] <TheRedRipper> yup
[15:46:19] <pikapika> arahael, only death is real
[15:46:25] *** Joins: odnes_ (~odnes@31-152-238-211.pat.amp.cosmote.net)
[15:47:08] <TheRedRipper> pikapika: why
[15:47:13] <pikapika> Hi
[15:47:28] *** Joins: enoq (~enoq@194-208-146-143.lampert.tv)
[15:47:44] *** Quits: inky_ (~inky@46.36.119.185) (Ping timeout: 272 seconds)
[15:48:07] <enoq> hi, I've got a REST api with JS backend, how would you handle "money" in the API design?
[15:48:18] <arahael> enoq: "the" API design?
[15:48:23] <enoq> go for a float, multiply by 100 (in cents), string?
[15:48:30] <arahael> enoq: Never use floats for money.
[15:48:38] <arahael> Never ever ever ever.
[15:48:38] <enoq> we don't calculate things
[15:48:53] <enoq> so technically floats should just work fine
[15:49:04] <deniska> enoq: if there's an off-chance that your money won't fit in 53 bits, go for strings
[15:49:05] <arahael> Floats will bite your ass when it comes to money.
[15:49:09] <TheRedRipper> why would you ever use float
[15:49:28] <deniska> float is the only (non-annoying) number type JS has
[15:49:32] <enoq> in Java I'd go for BigDecimal, not sure about the JS side
[15:49:39] *** Quits: odnes (~odnes@109-178-204-44.pat.ren.cosmote.net) (Ping timeout: 255 seconds)
[15:49:56] <enoq> but again, no calculations happening
[15:50:22] <deniska> Although BigInt is a thing nowadays
[15:50:22] <enoq> at least my understanding of floats is that the rounding issues only happen if you do calculations
[15:50:29] <deniska> enoq: if you're just displaying, use strings
[15:50:43] *** Quits: alycidyne (~kova@91-160-172-214.subs.proxad.net) (Quit: leaving)
[15:50:54] *** Joins: inky_ (~inky@46.36.115.34)
[15:51:08] <deniska> enoq: a float can still display something weird like $0.30000000000000004
[15:51:24] <enoq> that happens only when you add 0.1 and 0.2
[15:51:55] <enoq> but floats should be able to represent decimal numbers accurately up to some precision, right?
[15:52:05] <DPA> A JS number can be floatish or intish. In asmjs, that's made explicit using x|0, +x so it can be compiled ahead of time. Assume numbers smaller than 2^31 are intish.
[15:52:37] <deniska> enoq: JS spec has the whole algorithm on how it stringifies floating point numbers
[15:52:38] <pikapika> Whats wrong with floats?
[15:52:40] <pikapika> for money
[15:52:45] <GeDaMo> Rounding errors
[15:53:09] <pikapika> How? a float is far more accurate than needed for money
[15:53:12] <deniska> pikapika: there's no way to precisely represent any amount of cents besides .25, .50 or .75 as a float
[15:53:26] <pikapika> deniska, as he said just do *100 then
[15:53:43] <pikapika> but alright
[15:53:46] <pikapika> fixed point then
[15:53:52] <enoq> my general issue with the *100 is that I don't know how universal that is
[15:53:54] <pikapika> like some kind of bcd fixed point
[15:54:19] <enoq> and personally I'm unsure if they'll store it in JSON number format anyways in some NoSQL store
[15:54:20] <deniska> well, whatever you're counting still shouldn't be bigger than 9007199254740991
[15:54:39] <deniska> enoq: storing cents is quite common
[15:54:59] <pikapika> Are they any non-english native people here?
[15:55:26] <TheRedRipper> ¡non- what?
[15:55:38] <deniska> (while $90071992547409.91 is probably not a number you're dealing with, there were cases of cryptocurrency exchanges being drained through floating point mistakes)
[15:55:41] <enoq> tbh I think I need to talk to people anyways with regards to storage formats
[15:56:07] <enoq> deniska: isn't that related to float precision?
[15:56:07] <pikapika> TheRedRipper, do you find it funny when some terms are read with a literal translation
[15:56:15] <pikapika> esp technical or subculture terms
[15:56:24] <DPA> http://asmjs.org/spec/latest/#fixnum http://asmjs.org/spec/latest/#parameter-type-annotations
[15:56:25] <enoq> like the left part went over the limit
[15:56:43] <deniska> enoq: there's no limit for the left part, there's a single limit for both parts at once
[15:56:58] *** Joins: Crassus (~Crassus@user/crassus)
[15:57:01] <enoq> ah right
[15:57:10] <enoq> exponent
[15:57:45] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 255 seconds)
[15:57:52] <enoq> I think JS has some spec limits though
[15:57:54] <deniska> but yeah, with sh**coins it's easy to exceed the capabilities of double precision floats when you compare their price to BTC :)
[15:57:55] <enoq> iirc
[15:58:21] <enoq> 2**53 - 1
[15:58:22] <deniska> enoq: JS uses 64 bit IEEE 754 floats
[15:58:39] <deniska> that can represent accurately integer numbers up to that number, yes
[15:59:04] *** Joins: Foritus (~buggery@cpc91316-watf11-2-0-cust68.15-2.cable.virginm.net)
[15:59:08] <enoq> hm, maybe it's a good idea to not go with numbers because complexity is too high
[15:59:26] <enoq> like you need to know JS spec details
[15:59:54] *** Quits: vitorgonc (~vitorgonc@2804:d55:580c:5e00:849b:a6d:f686:9246) (Ping timeout: 240 seconds)
[16:00:07] <enoq> validated strings sounds like a better idea
[16:00:25] *** Quits: scabby (~scabby@user/scabootssca) (Ping timeout: 246 seconds)
[16:00:30] <enoq> and you can also feed these into BigInt
[16:00:37] <enoq> thanks
[16:01:52] <deniska> enoq: even if you use BigInt, you should initialize it using strings
[16:02:03] <enoq> yeah, I know
[16:02:12] <enoq> otherwise those numbers will go boom
[16:02:48] <deniska> I wonder whether you can ask json.parse to use bigint instead of numbers
[16:02:52] <arahael> Frankly, javascript's numbers are a mess.  If this were something else, such as I dunno, XML or google protocol buffers or whatever, you could just use integers.
[16:03:01] <enoq> right
[16:03:27] <arahael> Even numbers are probably fine in JSON itself, *unless* it's Javascript reading it.
[16:03:55] <enoq> I think in java you could probably even deserialize it straight into a BigDecimal out of the JSON
[16:04:11] <arahael> Yeah.  Still, the variation is concerning.  Best avoid it.
[16:04:17] <arahael> Use strings.
[16:05:08] <deniska> JSON doesn't have a strong opinion on what a number is
[16:05:35] <deniska> "a list of digits with an optional single dot somewhere the middle, and the optional minus before the whole thing"
[16:05:46] <deniska> or something along these lines :)
[16:06:31] <GeDaMo> https://www.json.org/json-en.html
[16:06:49] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[16:07:16] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[16:09:31] *** Joins: gggp (~gggp@123.113.178.134)
[16:16:17] * mrig pluck on arahael's harp string.
[16:16:38] <mrig> s/pluck/plucks/
[16:16:46] *** Joins: Thedarkb (~beno@2001:bb6:b404:188f:1ba6:37d:9e2b:30e8)
[16:16:49] <mrig> math in JS is scary.
[16:17:11] <mrig> It is interesting when considered as a language for objects for graphic display only though.
[16:17:24] <mrig> makes a little more sense in that light somehow.
[16:18:47] <Thedarkb> I'm working on a clean sheet web app, don't want to use PHP, any suggestions?
[16:19:22] <pikapika> Python
[16:19:25] <mrig> Thedarkb: golang is a nice serverside language.
[16:20:13] <Thedarkb> It looks it, I re-wrote the old back end in it last year as a test, but we're going for a whole new architecture this time around.
[16:20:39] <enoq> Thedarkb: probably pretty much anything except JS, Go and PHP
[16:20:42] *** Quits: dan01 (~dan01@2a02:2f0f:3017:4e00:34e8:4cb6:3687:cbf4) (Ping timeout: 255 seconds)
[16:20:53] <pikapika> PHP is quite good/tolerable
[16:21:01] <Thedarkb> Yeah, it's in the tolerable bracket.
[16:21:06] <Thedarkb> I think I find Go a bit more agreeable.
[16:21:20] <enoq> you probably want a good type system
[16:21:22] <pikapika> js would be in the intolerable bracket for myself
[16:21:25] <pikapika> as a server side lang
[16:21:34] <enoq> then it depends on what you want to do
[16:21:40] <pikapika> Static types are great
[16:21:45] <enoq> is it an app for a customer?
[16:22:11] <Thedarkb> It's a company I've contracted for for a few years and replacing a previous system I wrote in C#.
[16:22:34] <enoq> C# and Java/Kotlin are a great fit if you need to deal with XML or anything microsoft office
[16:23:01] <enoq> customers are absolutely fixated on excel
[16:23:14] *** Quits: el_kevino (~mote@2604:a880:400:d1::901:5001) (Quit: WeeChat 3.1)
[16:23:24] <Thedarkb> I won't this time around, fortunately, last year all of the data came in from Excel spreadsheets which were auto generated by forms.
[16:24:07] <mrig> go is quite nice all round actually.
[16:24:29] <pikapika> enoq, hoe does Java help with interfacing with ms office
[16:24:38] <mrig> I've had to write some really complicated time based code and go is superb for that.
[16:24:43] *** Joins: herme5 (~mote@2604:a880:400:d1::901:5001)
[16:24:52] <enoq> pikapika: there's an apache lib
[16:24:56] <mrig> the simplicity of the language makes complicated things easier to manage.
[16:25:09] *** herme5 is now known as el_kevino
[16:25:14] <pikapika> And how does that lib work internally
[16:25:24] <pikapika> does it make some direct ipc style connection with the office
[16:25:33] <pikapika> or does it try to parse the xml office formats
[16:29:46] <enoq> pikapika: it parses the xml stuff
[16:29:59] <enoq> OOXML is a HUGE pain
[16:30:00] <pikapika> Okay
[16:30:00] <pulse> i once opened a ~10000 line php file containing php, html, js, css and sql in copious amounts
[16:30:25] <enoq> all I'm trying to say if you need to do that you better hope for a lib
[16:30:31] <pulse> all intertwined too
[16:30:36] <pikapika> enoq, is it based on some reverse engineering or have microsoft released specs for their xml office formats? Or are the specs not very detailed and it still requires a lot of rev-eng?
[16:30:38] <enoq> and since it's such a mess it's not guaranteed to be around
[16:30:45] <enoq> pikapika: both
[16:31:01] <pikapika> enoq, yeah I see
[16:31:24] <enoq> apart from that I think Spring is an awesome framework
[16:31:27] *** Quits: kmh (~kmh@p200300df5f043000fdf0a34e1b882bd5.dip0.t-ipconnect.de) (Quit: Leaving)
[16:31:33] <enoq> I'm sure there's some great thing on the C# side as well
[16:31:38] <enoq> asp.net?
[16:31:47] <enoq> or .net mvc or whatever
[16:32:22] <enoq> so tl;dr: I'd first choose the language based on these edge cases, then choose it based on knowledge
[16:32:30] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 244 seconds)
[16:32:38] <enoq> if your time doesn't know ruby, probably not a good idea to go for rails
[16:32:44] <enoq> s/time/team
[16:32:46] *** Quits: thekingofbandit2 (thekingofb@thunix.net) (Ping timeout: 268 seconds)
[16:32:56] *** Quits: thekingofbandit (tkob@user/thekingofbandit) (Killed (NickServ (GHOST command used by thekingofbandit3!thekingofb@thunix.net)))
[16:33:01] *** Quits: jacktar (~whiteshad@gateway/tor-sasl/jacktar) (Ping timeout: 244 seconds)
[16:33:06] *** Joins: thekingofbandit (tkob@user/thekingofbandit)
[16:33:07] *** Quits: audgirka (~audgirka@2402:e280:3e16:e48:d5ba:7034:2ac9:4275) (Remote host closed the connection)
[16:33:09] <pikapika> enoq, I mean to try Java on next server project
[16:33:32] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 244 seconds)
[16:34:03] *** Quits: beelzebuzz (~rasputin@gateway/tor-sasl/beelzebuzz) (Ping timeout: 244 seconds)
[16:34:10] *** Quits: cisco87 (~quassel@lnxg33k.com) (Ping timeout: 240 seconds)
[16:34:17] *** Quits: \c (~\c@user/o/x-1005988) (Quit: Ping timeout (120 seconds))
[16:34:26] *** Joins: cisco87 (~quassel@lnxg33k.com)
[16:34:31] *** Joins: thekingofbandit3 (thekingofb@thunix.net)
[16:35:09] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[16:35:12] *** Joins: jacktar (~whiteshad@gateway/tor-sasl/jacktar)
[16:35:54] <W> When a project needs That One Library that does the complicated thing you need, in a language you wouldn't otherwise use, is when things like microservices really shines, IMO. Write a one-off service in the language, no need to do anything else in it.
[16:36:17] <pikapika> What is a service?
[16:36:37] <W> used that before specifically for parsing Microsoft documents
[16:36:57] *** Joins: kmh (~kmh@p200300df5f0430000ddb5b92e0a0f090.dip0.t-ipconnect.de)
[16:37:21] <pikapika> enoq, what is considered standard today?
[16:37:51] <pikapika> Are bare servlets still used or is some framework recommended?
[16:38:35] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[16:38:53] *** Joins: trace987 (~trace@ip5b4297b5.dynamic.kabel-deutschland.de)
[16:39:07] <W> servlets are often used, they're mostly fine, but there are a variety of frameworks people use too
[16:39:31] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[16:40:06] *** Joins: terminalpusher (~terminalp@2a01:586:104a:1:9db9:e51b:35d7:1d9a)
[16:40:21] <W> or a company that does many web projects in Java probably just write their own mini-framework on top of servlets that does the most common things like pull in known JNDI database resources and so on
[16:40:33] <enoq> pikapika: I think there's also some async stuff out there
[16:40:46] <pikapika> async is a headache
[16:41:00] <enoq> async in general is a good idea for certain use cases
[16:41:26] <enoq> but there are also cases where it doesn't perform well
[16:41:28] *** Joins: mrig (~mrig@user/mrig)
[16:41:37] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[16:42:26] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[16:43:10] <enoq> pikapika: in general I'd recommend to take a look at Kotlin and Spring Boot
[16:43:29] <enoq> if you go down the Java route
[16:44:00] <pikapika> I prefer to learn frameworks only after spending some time without one
[16:44:10] *** Joins: speckz (~speckz@2600:1700:ce0:bf00:9c38:59af:5e7d:eb7)
[16:44:16] *** Joins: Twipply (~Twipply@user/twipply)
[16:44:21] <pikapika> WHats the difference between spring and spring boot
[16:44:30] <enoq> spring is the base framework
[16:44:30] *** Joins: beelzebuzz (~rasputin@gateway/tor-sasl/beelzebuzz)
[16:44:57] <enoq> spring boot configures it for the common use cases
[16:45:16] <enoq> if you go pure spring you'll have to write tons of configuration and code to set up a web backend
[16:45:24] *** Joins: trace (~trace@ip5b4297b5.dynamic.kabel-deutschland.de)
[16:45:26] <enoq> in spring boot you just add a class with an annotation
[16:45:40] <enoq> it also bundles relevant libs together
[16:45:48] <enoq> so no need to add 10 deps, just add spring boot web
[16:46:18] <pikapika> I see
[16:46:41] <pikapika> So the sequence for learning should be raw servlets+jsp -> spring -> spring boot
[16:46:49] <enoq> probably not
[16:46:56] <pikapika> Why?
[16:47:05] <enoq> not sure if you want to learn servlets and jsp
[16:47:24] <enoq> in general you'll always deal with a framework
[16:47:24] <pikapika> Whats wrong with them
[16:47:41] <enoq> you probably won't use them very much
[16:47:58] <enoq> and they are obsolete in other areas
[16:48:22] <enoq> the thing with PHP is that the web framework is basically baked into the language itself
[16:48:23] <h4cker> who want to creat a company with me
[16:48:39] <enoq> so you learn the web framework from the get go
[16:48:40] *** Quits: hegstal (~hegstal@2a02:c7f:7604:8a00:cb9c:8f6:3247:45ac) (Ping timeout: 256 seconds)
[16:48:51] <h4cker> creating software for chemicall industry
[16:48:53] <pikapika> enoq, I would prefer to not use a framework if possible for personal apps
[16:49:01] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[16:49:02] <h4cker> and sub industry
[16:49:10] <h4cker> In EU
[16:49:12] <enoq> pikapika: in that case you might want a small framework
[16:49:12] <pikapika> Chemical software sounds exciting
[16:49:16] <h4cker> is welcome on my query
[16:49:34] <pikapika> enoq, my question is. Is there anything that makes raw servlets infeasible for the task
[16:49:39] <enoq> pikapika: there's https://ktor.io/
[16:50:04] <enoq> pikapika: infeasable not but I think it's a bit dated
[16:50:28] <terminalpusher> Is the only good way to iterate through the bits of a byte from left to right by doing this 8 times? `byte & 0b1000_0000; byte & 0b0100_0000; byte & 0b0010_0000; byte & 0b0001_0000; byte & 0b0000_1000; byte & 0b0000_0100; byte & 0b0000_0010; byte & 0b0000_0001`? I can iterate from right to left with `(byte >> index) & 1;` but for left to right I've only found that.
[16:50:47] <enoq> pikapika: there are a lot of different ways to do java web
[16:51:08] <pikapika> Obviously
[16:51:08] <enoq> there's java ee which is servlets and basically works off a war archive
[16:51:23] <enoq> so you dump your war archive into your app server
[16:51:27] <pikapika> Any language where you can write your own web server, you will have a million frameworks
[16:51:41] <pikapika> I thought that was how you did things by default in tomcat
[16:51:41] <enoq> spring boot usually bundles everything in a jar
[16:51:47] <pikapika> you put up a jar file inside somewhere
[16:51:53] <pikapika> or it was a zip of jars
[16:51:54] <pikapika> I forget
[16:51:57] *** Joins: dan01 (~dan01@2a02:2f0f:3017:4e00:34e8:4cb6:3687:cbf4)
[16:52:10] <mawk> terminalpusher: (byte >> (7-index)) & 1
[16:52:13] <enoq> so jar != war
[16:52:29] <enoq> then I think there are frameworks that don't use servlets alltogether
[16:52:44] <enoq> https://vertx.io/
[16:53:04] *** h4cker is now known as Truly_Julius_Cae
[16:53:12] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 272 seconds)
[16:53:35] *** Truly_Julius_Cae is now known as Truly_J_F_Caesar
[16:53:37] <terminalpusher> mawk: thanks
[16:53:40] <enoq> spring boot I think also has the option to not use servlets
[16:53:51] <enoq> I think the reactive one doesn't use servlets
[16:54:06] *** Quits: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net) (Quit: Client closed)
[16:54:09] <enoq> pikapika: all in all I think you might be better off asking in ##java they might have more insight
[16:54:15] <pikapika> enoq, how do you think when doing async?
[16:54:25] <pikapika> I find it the most unnatural and can never think about it
[16:54:44] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[16:54:55] <enoq> well, it's kinda easy depending on the language support
[16:55:03] <pikapika> Its not about the language
[16:55:06] <pikapika> Its the concept itself
[16:55:11] <pikapika> It is not meant for human brains
[16:55:30] <enoq> const x = doStuff() vs const x = await doStuff()
[16:55:42] <enoq> not a lot of difference, works the same basically
[16:55:49] <pikapika> But the latter simply forgoes the async part
[16:55:51] <enoq> one is blocking, the other one async
[16:55:56] <pikapika> is it
[16:56:00] <pikapika> So what happens meanwhile
[16:56:00] <enoq> which is an implementation detail kinda
[16:56:20] <enoq> blocking would halt program execution
[16:56:44] <enoq> async would continue executing and run the callback code if it hears back
[16:56:51] <enoq> it's kinda like threads
[16:57:05] <pikapika> enoq, which is ridiculous
[16:57:09] *** Quits: inky_ (~inky@46.36.115.34) (Ping timeout: 255 seconds)
[16:57:10] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 256 seconds)
[16:57:23] <enoq> why? you'll have to deal with concurrency at some point
[16:57:25] <pikapika> Which means every line of code has to check
[16:57:38] <enoq> ideally your type system takes care of that
[16:57:41] <pikapika> whether its appropriate to do this now or if we are waiting for some async
[16:57:57] <enoq> in JS you've got TS + linters
[16:58:14] <pikapika> That doesn't matter
[16:58:23] <enoq> it's the same for threads really
[16:58:25] <pikapika> the simple fact that everything after the await line will just continue to execute
[16:58:36] <pikapika> means that you have to think and add if elses everywhere
[16:58:48] <pikapika> the code could jump to the async line any time
[16:58:48] <enoq> no, everything after the await line is moved into a callback
[16:58:53] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[16:58:56] <DPA> In js, I think of everything as a critical section, except callbacks and awaits, which is where they start/end/are interrupted.
[16:59:14] <pikapika> enoq, but if the remaining code is just placed into the callback of the await, then its just the same as blocking
[16:59:22] <enoq> that's the point
[16:59:23] <pikapika> whats the point of all that convoluted syntax then
[16:59:31] <pikapika> DPA, exactly
[16:59:37] <enoq> to make async code look and behave like sync one
[16:59:52] <pikapika> then why not just make it blocking from the start
[16:59:56] <enoq> otherwise you need to deal with promises or callbacks which is error prone
[16:59:59] <pikapika> instead of all this convoluted process
[17:00:21] <enoq> because async is required for any UI thing
[17:00:37] <enoq> you don't want your app to freeze when it sends out requests to the db/web
[17:01:38] *** Joins: mobidrop (~mobidrop@217-62-121-57.cable.dynamic.v4.ziggo.nl)
[17:01:39] <enoq> that and performance
[17:01:48] <DPA> const sleep = t=>new Promise(r=>setTimeout(r, t));
[17:02:02] <DPA> await sleep(10)
[17:02:04] <pikapika> Its such an insane thing. To write the entire program in this "inverted" manner.
[17:02:37] <enoq> well, try writing a GTK program
[17:02:47] <enoq> you'll have to deal with callbacks all the time
[17:02:56] <enoq> I think Swing is also event based?
[17:03:01] <PlanckWalk> It is
[17:03:03] <enoq> and probably any other ui as well
[17:03:14] <pikapika> Event based is different from async
[17:03:20] <enoq> not really
[17:03:32] <enoq> you've got an event loop for both
[17:03:36] <pikapika> Whats hard about events? Theres a loop that pumps messages and handlers for messages
[17:03:48] <enoq> that's how async works as well
[17:03:53] <pikapika> All the code inside the handler is normal sync and sequential
[17:03:59] <enoq> no
[17:03:59] <deniska> it's hard to reason about a lot of events interacting
[17:04:07] <enoq> if your code fires events then not
[17:04:10] <deniska> the original javascript paradigm is also event oriented
[17:04:20] <pikapika> deniska, then we create variables to indicate state and if elses to guard wrong states
[17:04:31] <deniska> pikapika: been there, tried that
[17:04:32] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 256 seconds)
[17:04:39] <enoq> yeah, synchronization is a huge issue but oh well
[17:04:40] <pikapika> What other way is there?
[17:04:50] <enoq> Rust has built in support for that btw
[17:05:01] *** Quits: src (~src@user/src) (Quit: leaving)
[17:05:04] <enoq> so your typesystem will take care of prevent you from shooting you into the foot
[17:05:12] <enoq> yourself*
[17:05:32] <deniska> pikapika: once one of your events is "http request is done" event based approach goes downhill towards unmanagable complexity
[17:05:43] *** Joins: \c (~\c@user/o/x-1005988)
[17:05:59] <pikapika> Async is such a weird "inside-out" way of writing a program
[17:06:15] <enoq> async is only giving you a bit more low level control
[17:06:24] <deniska> setTimeout() just registers an event handler for a timer event
[17:06:29] <deniska> it's all events all the way down ;)
[17:06:51] <enoq> either way, as soon as you go into threads territory the wtfs are the same
[17:06:57] <deniska> but to manage that many events first JS people came up with promises, then with async-await syntax
[17:07:10] <pikapika> Yeah I hate threads too, but at least they make some sense
[17:07:29] <pikapika> Concurrency in general is just a headache
[17:07:33] *** Joins: ahungry (~user@99-40-9-245.lightspeed.livnmi.sbcglobal.net)
[17:07:55] <pikapika> And async is like "woah guys concurrency headaches are so cool, lets introduce them in non-concurrent code too"
[17:10:09] <enoq> once you understand the model, it's pretty easy
[17:10:19] <pulse> async is nice for events
[17:10:29] <enoq> but you have to learn it
[17:11:07] <enoq> https://www.youtube.com/watch?v=8aGhZQkoFbQ
[17:11:13] <enoq> I think there are similar videos
[17:12:23] *** Quits: x003fgqwe (uid479614@id-479614.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[17:13:52] *** Joins: JuggleTux (~tux@83.137.6.190)
[17:14:29] <mrig> I quite enjoy concurrency.
[17:14:40] <pikapika> I fail to understand what magic your server side code would be doing in the meanwhile of waiting for the database to return results
[17:14:43] <mrig> Seems to be at the heart of OS design too.
[17:14:50] <pikapika> It can't proceed any further without that data
[17:14:55] <mrig> systems in general.
[17:14:59] <pikapika> And if it could, you can just reorder the code to before the db call
[17:15:08] <mrig> pikapika: helping someone else?
[17:15:16] <pikapika> helping what
[17:15:36] <mrig> Serving some other request.
[17:16:24] *** Joins: scabby (~scabby@user/scabootssca)
[17:16:31] <mrig> if both requests are the same, caching and serving it up only once.
[17:18:08] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 256 seconds)
[17:18:33] *** Joins: inky_ (~inky@5.77.203.161)
[17:18:34] <pikapika> How will the same program invocation be serving two requests? There will be a different thread/process for that
[17:19:02] <pikapika> Also, it'd be such a convoluted way of writing code. Suddenly your program went from handling single request to request pools
[17:19:12] *** Quits: odnes_ (~odnes@31-152-238-211.pat.amp.cosmote.net) (Ping timeout: 255 seconds)
[17:19:25] <mrig> is async concurrency that is not ever parallel?
[17:20:00] <mrig> pikapika: well if it is a server, then there will obviously be a need to deal with multiple requests.
[17:20:01] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[17:20:06] *** Quits: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca) (Quit: Izem)
[17:20:32] <deniska> pikapika: on server side async style of concurrency makes less sense than just keeping a thread pool to handle requests
[17:20:41] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[17:20:47] <pikapika> Ok and how will async help with that? Will async mean your code automatically 'goto's to the start of the program and handles another request?
[17:20:47] <deniska> pikapika: (unless you really have a lot of concurrent requests)
[17:20:55] <pikapika> mrig
[17:21:04] <mrig> I've not really use JS much so async is somewhat less familiar to me, seems to be a state of 'check each iteration' from inside a loop?
[17:21:29] *** Quits: speckz (~speckz@2600:1700:ce0:bf00:9c38:59af:5e7d:eb7) (Quit: Textual IRC Client: www.textualapp.com)
[17:21:44] <mrig> pikapika: I'm trying to understand async from the perspective of someone who is working with concurrent code.
[17:22:04] *** Joins: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net)
[17:22:18] <mrig> Seems that it is a simulation of concurrency, by way of a loop and some ticket system?
[17:22:24] *** Joins: odnes (~odnes@31-152-238-211.pat.amp.cosmote.net)
[17:22:27] <mrig> or token system.
[17:22:46] <deniska> it is concurrency in the sense that a system is dealing with multiple things at once
[17:23:05] <deniska> while one coroutine is waiting on something, another coroutine can run
[17:23:15] *** Quits: jazzy (~jaziz@2600:380:c114:2d85:2030:17e6:b76f:c1fa) (Ping timeout: 255 seconds)
[17:23:30] <mrig> As you hope that your concurrent code will be able to achieve on a machine that only has one core.
[17:23:44] <mrig> with out getting all bottled up.
[17:24:02] <deniska> we're assuming an IO-bound application here
[17:24:17] <mrig> a scheduler with queues and tokens.
[17:24:20] <deniska> like, a program otherwise would fiddle fingers waiting for a response from another service
[17:24:49] <deniska> instead it can schedule to run something else in the meantime, like starting to handle the next incoming request
[17:24:55] <mrig> yes non blocking and a priority queue of tasks behind the scenes, that sort of thing.
[17:25:13] <mrig> I think this is awesome stuff :)
[17:25:15] <deniska> there's an event loop behind any of such system
[17:25:25] <mrig> what is your gripe with it pikapika?
[17:25:41] <mrig> deniska: a game loop :)
[17:25:51] <pikapika> Its an insane way of writing programs
[17:25:56] <pikapika> Its completely inside out and inverted
[17:26:23] <mrig> pikapika: why so; Seems perfectly logical?
[17:26:38] <deniska> You just put `await` in front of calls which do IO, otherwise it's the same as writing synchronous program :P
[17:26:52] <pikapika> deniska, is it? The rest of the code can be interrupted any time
[17:27:20] <deniska> pikapika: no, the code can only be interrupted on the lines containing `await`
[17:27:43] <mrig> pikapika: oh right, I'd not thought of it in that context; That sounds convoluted and complicated.
[17:27:48] <pikapika> Then what difference does await make? if the code after it will have to block for it anyways
[17:28:18] <deniska> pikapika: await blocks the current coroutine, another part of the code can receive control during that time
[17:28:31] <pikapika> which means any of the rest of the program
[17:28:49] <deniska> pikapika: no, that means either another awaiting coroutine, or an event handler you registered
[17:28:50] <pikapika> and which means any line can be interrupted if it happens to be the time when the await finally finishes
[17:29:09] <deniska> only lines containing `await` are to be interrupted
[17:29:30] <deniska> any block of code between two `await`s runs to completion
[17:29:50] <DPA> With async, it's easy to keep track of the logic control flow, to an extent impossible with callbacks or events alone.
[17:29:50] <DPA> Imagine writing this proxy without async: https://github.com/Daniel-Abrecht/mitm-tools/blob/master/interceptor/http.py#L12
[17:29:50] <DPA> Every time I get data, I check for which things I have enough data for, continue those, and then immediately determine if I can forward it, if I can eliminate possible protocols, and so on:
[17:29:50] <DPA> https://github.com/Daniel-Abrecht/mitm-tools/blob/master/interceptor.py#L142
[17:29:50] <DPA> Without async, I would have to split every function into multiple callbacks, add something to abort the whole thing / handle errors, and a lot of other bs. And with threads, I'd have to fuck around with mutexes & signals everywhere.
[17:29:51] <DPA> With async, it's at least somewhat understandable what I'm actually checking & doing, and I can just handle the logistics in the background and give everything the data when it arrives.
[17:30:53] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:31:00] *** Quits: terminalpusher (~terminalp@2a01:586:104a:1:9db9:e51b:35d7:1d9a) (Remote host closed the connection)
[17:31:35] <mrig> DPA: or with threads you could write blocking queue's and deal with them as if they were a data type.
[17:31:50] <mrig> theads are going to be way more efficient obviously.
[17:31:55] <mrig> If you have them
[17:32:23] <deniska> threads work the same way as async, except you have no control which lines interruptions can happen at
[17:33:06] <deniska> whether they're more efficient is debatable, really easy to tank the performance of a multithreaded program by (false) sharing
[17:33:27] <deniska> and people still feel uneasy running more than ~1000 threads at once
[17:33:40] <mrig> Sure, as they are actually working on different cores rather than being a game loop type of thing.
[17:34:12] <mrig> Does python have a lib for coroutines?
[17:34:22] <mrig> that balances threads over cores?
[17:34:25] <deniska> being on multiple cores is only efficient if you are calculating fibonacci numbers or something else CPU-bound :)
[17:34:44] <mrig> sure the yield call right?
[17:34:50] <deniska> cpython has GIL which in practice pegs threads to a single call
[17:35:15] <deniska> but yes, it has async-await coroutines, old style coroutines with `yield` and a few libraries which implement event loops in various styles
[17:35:23] <mrig> DPA How on earth do you debug this kind of code?
[17:35:27] <deniska> s/single call/single core/
[17:37:14] <DPA> mrig: Lots of debug prints, and a mental map of both control flows this program has.
[17:37:56] <DPA> Some of the print statements are still in there, commented out.
[17:38:13] <mrig> Right yes, key places so that you can remember the mental map?
[17:38:14] <deniska> I really dislike when people make `=` line up like that in code :(
[17:38:24] <deniska> Makes really easy to miss copy&paste kind of mistakes
[17:38:48] <mrig> I like using a verbose flag for printf statements in code.
[17:39:48] <mrig> DPA do you have the consideration of race conditions too, of is this mute for async code?
[17:39:56] <mrig> s/of/or/
[17:41:55] <DPA> Well, there is the main loop: https://github.com/Daniel-Abrecht/mitm-tools/blob/master/interceptor.py#L357 And the async interceptors. So those are the only 2 control flows I had to keep track of.
[17:41:55] <DPA> I don't have to worry about race conditions in this case. In other programs, there are some situations where I intentionally rely on stuff being able to execute during async though, I'll have to check if I can find an example of that.
[17:43:53] *** Joins: archie (~archie@host-79-13-212-114.retail.telecomitalia.it)
[17:43:58] <archie> hello.
[17:44:21] <mrig> Hello archie :)
[17:44:40] <archie> how do I convert an hex representation of a sha265 (string, length = 64) to an array of bytes (char[32]) ?
[17:44:47] <archie> in c++
[17:45:36] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 276 seconds)
[17:45:50] <archie> mrig hi :)
[17:46:06] <DPA> Looks like I don't have one of those in a public repo. Well, most of the time I do rely on awaits being interrupted, it's in js fetch code, where I keep a variable for the first / last request for a resource, check if it changed after the await,
[17:46:06] <DPA> and then, depending on what I want to do, await the new request from the old one, or await the old one from the new one, and such stuff.
[17:48:27] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 255 seconds)
[17:48:50] <GeDaMo> archie: didn't you ask this a week or two ago?
[17:49:35] <GeDaMo> https://cryptopp.com/docs/ref/class_hex_decoder.html
[17:49:38] <mrig> I was wondering if this is a case of needing to convert a std::string into a char *?
[17:50:23] <archie> GeDaMo I asked a similar question, which was how to get the array of byte directly using cryptopp (or something similar)
[17:50:45] *** Quits: scabby (~scabby@user/scabootssca) (Remote host closed the connection)
[17:50:53] <GeDaMo> Do you want to do it without a library?
[17:51:13] <pikapika> archie, use unsigned char
[17:51:19] *** Joins: scabby (~scabby@user/scabootssca)
[17:51:21] <archie> GeDaMo now, I do already have a computed sha256, but I do have it in string format (hex representation), and need to store it in an array of bytes (char[32])
[17:51:42] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[17:51:55] *** Joins: jazzy (~jaziz@2600:380:c114:2d85:2030:17e6:b76f:c1fa)
[17:52:19] <archie> GeDaMo without a library is better. I tried this approach https://stackoverflow.com/questions/17261798/converting-a-hex-string-to-a-byte-array/17261928
[17:53:14] <archie> GeDaMo however I don't know how to verify that is correct, maybe an algorithm which does the opposite could help
[17:53:54] *** Quits: gggp (~gggp@123.113.178.134) (Read error: Connection reset by peer)
[17:54:09] <pikapika> archie, use unsigned char
[17:54:28] <archie> pikapika why? how?
[17:54:35] <GeDaMo> uint8_t
[17:54:40] <pikapika> Yes
[17:54:45] <pikapika> uint8_t if you have C99
[17:55:30] <GeDaMo> You can easily print out bytes as hex in C with printf("%02X", byte);
[17:56:04] <archie> GeDaMo will try to print the bytes then. brb.
[17:56:23] <pikapika> You can already print your string
[17:56:29] <pikapika> What difference does it make?
[17:56:39] <pikapika> You clearly wanted the data as a bigint
[17:56:40] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 256 seconds)
[17:57:26] <GeDaMo> I think they want to verify that the conversion has worked correctly
[17:58:28] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[17:59:12] <archie> GeDaMo exactly
[17:59:27] <archie> GeDaMo your printf doesn't help though :(
[17:59:35] <GeDaMo> In what way does it not help?
[17:59:50] <archie> GeDaMo looks like the output format is different
[18:00:04] *** Quits: jazzy (~jaziz@2600:380:c114:2d85:2030:17e6:b76f:c1fa) (Ping timeout: 256 seconds)
[18:00:05] <GeDaMo> Different to what?
[18:00:35] *** Quits: rany_ (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[18:00:45] <archie> GeDaMo let's assume that's the input string: a2242ead55c94c3deb7cf2340bfef9d5bcaca22dfe66e646745ee4371c633fc8
[18:01:13] <GeDaMo> If you want it to be printed out in lower case, you can use x instead of X
[18:01:23] <archie> GeDaMo after the byte conversion, your printf outputs something like this: 6FFFFFFFA8FFFFFF...
[18:01:50] <GeDaMo> Show your code
[18:01:51] <mrig> from stack overflow "Why not make outStr an std::ostream & instead of unsigned char *?"
[18:01:58] <pikapika> GeDaMo, looks like hes using signed chars
[18:02:01] <mrig> if that makes any sense to you :)
[18:02:09] <pikapika> and printf turned it into a signed int
[18:02:11] <GeDaMo> Yeah, possibly
[18:02:33] <archie> give me a few minutes to prepare a snippet for you :)
[18:02:40] <pikapika> x is int by default isn't it
[18:04:02] *** Quits: inky_ (~inky@5.77.203.161) (Ping timeout: 256 seconds)
[18:04:24] *** Joins: inky (~inky@37.252.80.187)
[18:05:24] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 272 seconds)
[18:06:02] <\c> Styyker, what's the problem with #windows?
[18:06:23] <archie> pikapika GeDaMo https://bpa.st/AQHA
[18:07:21] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 255 seconds)
[18:07:41] <\c> Stryyker ^
[18:08:00] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 256 seconds)
[18:08:54] <GeDaMo> archie: where does byte get assigned a value?
[18:09:25] *** Joins: gggpkm (~gggpkm@123.113.178.134)
[18:09:42] <archie> GeDaMo that's a typo, sorry
[18:09:58] <archie> GeDaMo it tries to print output[i]
[18:10:09] <archie> GeDaMo it actually prints it
[18:10:21] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[18:10:36] *** Joins: rany (~rany@user/rany)
[18:11:10] <GeDaMo> output should be uint8_t not char, you'll need to include <ctype.h> (not sure what the C++ equivalent is
[18:11:32] *** Quits: freakazoid333 (~freakazoi@72.168.176.27) (Read error: Connection reset by peer)
[18:11:37] *** Quits: odnes (~odnes@31-152-238-211.pat.amp.cosmote.net) (Read error: Connection reset by peer)
[18:11:57] *** Joins: freakazoid333 (~freakazoi@72.168.176.27)
[18:13:10] <\c> at that level the equivalent in c++ would be the same (ctype.h)
[18:13:15] <archie> GeDaMo it brokes hex2bin then
[18:13:28] <GeDaMo> What do you mean by 'broke'?
[18:13:41] *** Quits: nekonibble (~nekonibbl@user/nekobit) (Read error: Connection reset by peer)
[18:13:44] *** Quits: freakazoid333 (~freakazoi@72.168.176.27) (Read error: Connection reset by peer)
[18:13:44] <pikapika> \c, its actually ccytpe I think
[18:13:46] <pikapika> for C++
[18:14:04] <archie> it takes char* as param
[18:14:08] <\c> void hex2bin(const uint_8* src, uint_8 * target)
[18:14:11] *** Joins: freakazoid333 (~freakazoi@72.168.176.27)
[18:14:40] <archie> I'm not sure uint8_t really matters right now, the print output is just a different format
[18:14:50] <\c> char is not good to use because its signedness is undefined
[18:14:59] <archie> hex2bin might be correct, I could be just printing another thing... :\
[18:15:01] *** Joins: pegaso (~reis-r@131.72.121.184)
[18:15:13] <GeDaMo> Here's a simple version I wrote https://ideone.com/rpaocU
[18:15:37] <\c> hex2bin is broken though
[18:16:04] *** Joins: nekobyte (~nekobyte@user/nekobit)
[18:17:43] <GeDaMo> \c: what problem do you see with it?
[18:17:55] <archie> GeDaMo could you test with this input? a2242ead55c94c3deb7cf2340bfef9d5bcaca22dfe66e646745ee4371c633fc8
[18:18:03] <archie> GeDaMo looks like the output differs
[18:18:05] <\c> src += 2;
[18:18:17] <GeDaMo> Two ASCII hex digits
[18:19:22] <\c> also, toupper() returns int
[18:19:35] <GeDaMo> That's intersting, mine is also wrong
[18:19:46] <\c> so the mask is not necessarily correct
[18:20:17] <pikapika> Just write your own loop
[18:20:26] <pikapika> Why wrangle so much over a simple hex reading code
[18:21:27] <archie> GeDaMo uhmmmm, I might use cryptopp's decoter to read the array of bytes and print it though
[18:21:32] <archie> *decoder
[18:21:55] *** Joins: gggpkm_ (~gggpkm@221.219.76.239)
[18:23:50] <\c> As of today I cannot go out in public
[18:24:03] <\c> because I do not have (or want) a smart phone
[18:24:10] *** Quits: gggpkm_ (~gggpkm@221.219.76.239) (Remote host closed the connection)
[18:24:12] *** Joins: xerxes (~xerxes@117.222.65.55)
[18:24:25] <\c> pretty funny. sort of. if it wasn't so serious
[18:24:26] *** Quits: gggpkm (~gggpkm@123.113.178.134) (Ping timeout: 256 seconds)
[18:25:16] <\c> At the petrol (gas) station today I held up my hand to the Qr scanner lmao
[18:27:49] <GeDaMo> OK, I was bitten by operator precedence :P
[18:28:09] <xerxes> GeDaMo: elaborate.
[18:28:15] <GeDaMo> archie: what output do you get from that input string?
[18:28:48] <GeDaMo> I used *src+1 which is seen as (*src)+1 when I wanted *(src+1)
[18:29:07] <\c> that's ONE problem :)
[18:29:37] <\c> wait, C doesn't have that precedence
[18:29:57] <\c> oh, yeah it does
[18:29:58] <archie> GeDaMo I just tested with cryptopp's hex decoder, and looks like hex2bin is working properly!
[18:30:04] <\c> osrry, just looked again
[18:30:06] <\c> sorry*
[18:30:35] <xerxes> GeDaMo: yes, that's a common one. parentheses never hurt.
[18:30:57] <\c> archie, it is if the compiler uses 2s complement and the conversion is made properly
[18:30:57] <GeDaMo> I like RPN! :P
[18:31:27] <\c> it'd probably fail on rPi
[18:31:32] <Valware> I like PRN
[18:31:45] <Valware> (pro re nata; as needed; medication)
[18:31:45] <archie> \c it should be fine for the tests I need to do
[18:31:59] <xerxes> do you have any suggestions for a keyboard? i need something cheap and durable.
[18:32:22] <Valware> xerxes: p sure you can buy keyboard and mouse set online for like £20
[18:32:26] <Valware> maybe cheaper
[18:32:27] <Valware> amazon
[18:32:38] <DPA> Here is a C version for hex2bytes: https://dpaste.org/Zrkh . I'm a bit disappointed by the gcc compiler though, it doesn't even try to validate the bounds I told it about...
[18:33:26] <xerxes> Valware: is there a preferred brand is what i wanted to ask. i have a Dell keyboard and the keys keep getting stuck.
[18:33:51] <Valware> preferred brand: disposable for when the keys inevitably get sticky or stop working
[18:34:03] <\c> I have a logitech keyboard >.<
[18:34:11] *** Joins: gggp (~gggp@60.10.23.164)
[18:34:16] <Valware> my logic is undeniable
[18:34:22] <Valware> don't get an erganomic one
[18:34:44] <\c> ms used to make good keyboards
[18:34:48] *** Joins: contagious_meow (~salitos@154.78.133.246)
[18:34:53] <Valware> I know they're supposed to be easier apparently, but I think it was still just the result of an april fools prank
[18:34:58] *** Quits: salitos (~salitos@154.78.133.246) (Read error: Connection reset by peer)
[18:35:45] <xerxes> Valware: i agree. i'm not a fan of spending $100 on a keyboard. i like to pump and dump. but the dumpables which pump the most is what i'd prefer.
[18:35:50] *** Quits: nekobyte (~nekobyte@user/nekobit) (Quit: don't forget, you're here forever :3)
[18:36:05] <Valware> then go for one that's roughly £20 instead of £10 on amazon
[18:36:08] <Valware> lool
[18:36:08] <archie> pikapika I think I should use unsigned char, you were right. The lower lever method signature which computes the sha is the following
[18:36:25] <pikapika> uint8_t would be best
[18:36:29] <archie> pikapika void sha256(const unsigned char *message, unsigned int len, unsigned char *digest)
[18:36:30] <pikapika> as was stated before
[18:36:40] <xerxes> do people really use expensive mechanical keyboards in here?
[18:36:50] *** Quits: mjs2600 (~mjs2600@c-24-91-3-49.hsd1.vt.comcast.net) (Ping timeout: 272 seconds)
[18:36:50] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[18:36:51] <xerxes> \c: how is it?
[18:37:03] <Valware> I use a typewriter
[18:37:04] <archie> pikapika I didn't understand why, however I cannot refactor all that stuff entirely to use it :(
[18:37:08] <\c> xerxes, how is what?
[18:37:28] <xerxes> \c: keyboard.
[18:37:32] *** Joins: TJ- (~root@2a01:7e00:e001:ee01:ea6f:38ff:fed4:3289)
[18:37:45] <archie> pikapika the important thing, is that the computed sha256 are correct (and the converted ones from hex too)
[18:38:00] <GeDaMo> I have a mechanical keyboard but I'm not sure how much it cost, it came with the first PC I bought in 1992
[18:38:17] *** Quits: pegaso (~reis-r@131.72.121.184) (Quit: Leaving)
[18:38:21] <beaky> nice wish i had a mechanical kebyoard like the space cadet keyboard icon of computing
[18:38:22] <pikapika> I don't understand what you are trying to do
[18:38:34] <pikapika> Are you trying to compare a given sha256 with one you calculate?
[18:38:44] <\c> xerxes, the logitech keyboard? It's good. I hated the leds at first but once set they're stored in the keyboard memory (lol) and the mechanical keys are... like mechanicals keys are supposed to be; nice
[18:38:45] <xerxes> GeDaMo: have you changed keys yet?
[18:39:14] <xerxes> \c: can you link the model?
[18:39:23] <GeDaMo> I have not
[18:39:23] <beaky> is it the ibm model f the icon of an era of pc computing
[18:39:50] <GeDaMo> Cherry G80 3000
[18:39:55] <xerxes> GeDaMo: so you are using the same keyboard since 1992.
[18:40:06] <GeDaMo> Yes
[18:40:23] <xerxes> GeDaMo: is it possible to learn this power?
[18:40:24] <beaky> nice i think chyrosran22 reviewed that keyboard model https://youtu.be/6jVRM-BVyhI?t=514
[18:40:50] <\c> logitech yu0034
[18:40:57] <GeDaMo> My nephew spilt blackcurrant juice into it at some point in the 90s :|
[18:40:58] <beaky> i think they can still be bought new old stock or used
[18:41:05] <\c> brown switches
[18:41:18] <\c> but the model has all 3 switch types
[18:41:25] <GeDaMo> One of these decades, I should give it a clean :|
[18:42:04] <xerxes> maybe i should give the mechanical keyboards a try, if they actually last decades.
[18:42:05] <beaky> yes after only a few hours my keyboard gets programmer grime and finger grease
[18:42:16] <\c> https://www.logitechg.com/en-sg/products/gaming-keyboards/g512-mechanical-gaming-keyboard.html
[18:42:33] <\c> it's not really a gaming keyboard
[18:42:43] <\c> (IMO)
[18:42:46] <beaky> you can buy the iconic ibm model f reproduction for only $400 dollers https://www.modelfkeyboards.com/product/f77-model-f-keyboard/
[18:42:58] <GeDaMo> beaky: that's a newer version than the one I have :P
[18:43:03] <xerxes> beaky: it's so frustrating. sometimes my Ctrl key would get stuck and i would be pressing Ctrl-X version of the X key. sometimes it takes me seconds to find out what's wrong.
[18:43:16] <xerxes> \c: thanks.
[18:43:35] <archie> pikapika nope, my application computes the sha256 of a given value and stores it in an array of bytes
[18:44:03] <pikapika> So why do you need conversions?
[18:44:08] <archie> pikapika I am doing a load test which uses a dump of real data from another applications, and here I have the hexadecimal format
[18:44:28] <\c> we'll see if this keyboard lasts 20 years like my last
[18:45:07] <pikapika> \c, mechanical is bullshit
[18:45:19] <sco1> yikes
[18:45:22] <pikapika> I had a keyboard, second hand at that, just a normal one that lasted years
[18:45:24] <beaky> yes soon i will upgrade to the steelseries apex pro a keyboard with sick hall effect mechanical switches
[18:45:34] <\c> pikapika why doth thou say that?
[18:45:45] <pikapika> \c, its just a way of selling overpriced crap
[18:45:48] <pikapika> Nothing else
[18:46:02] <sco1> ?
[18:46:15] <\c> pikapika I disagree. Mechanical are much nicer to type on. But maybe that's just personal preference
[18:46:35] <pikapika> Mechanical is noisier and more effort to type
[18:47:00] <sco1> Not necessarily
[18:47:02] *** Joins: cajiga (~john@45.130.83.119)
[18:47:06] <swn> The noise is so satisfying though.
[18:47:14] *** Joins: gggp_ (~gggp@60.10.23.164)
[18:47:17] <\c> pikapika perhaps that's why I have a mechanical keyboard attached to my laptop. The laptop keys are mushy
[18:47:21] <swn> And the actuation bump is supposed to help you use less effort to type
[18:47:35] <\c> And swn is correct
[18:47:44] *** Quits: gggp_ (~gggp@60.10.23.164) (Read error: Connection reset by peer)
[18:47:48] <\c> I "hit" the keys lighter on the mech. keyboard
[18:47:56] <pikapika> Noise is annoying
[18:48:07] *** Joins: gggp_ (~gggp@221.219.79.180)
[18:48:11] <\c> pikapika that's why I went brown
[18:48:17] <swn> there are quieter, even nearly silent, switches
[18:48:25] <\c> between mushy and clickity-click
[18:48:37] <pikapika> Mechanical is just a hipster name for what was simply "keyboards" without any adjectives before
[18:48:42] *** Quits: gggp_ (~gggp@221.219.79.180) (Read error: Connection reset by peer)
[18:48:46] <pikapika> And selling it at 100x the price
[18:48:51] <sco1> It's literally a different mechanism
[18:48:51] <swn> True, but as times change you need to differentiate.
[18:48:52] <pikapika> I like chiclets
[18:48:55] <pikapika> They are quiet and fast
[18:49:05] <swn> True, no ones using buckling springs anymore :P
[18:49:07] *** Quits: Jigsy (~Jigsy@user/jigsy) (Ping timeout: 246 seconds)
[18:49:09] *** Joins: nekonibble (~nekonibbl@user/nekobit)
[18:49:27] <sco1> Chicklets isn't a keyboard type
[18:49:34] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[18:49:54] <archie> Thanks a lot for the help guys, really appreciated as always :)
[18:49:57] <archie> cya^^
[18:50:14] <pikapika> sco1, whatever it is those flexible mats in laptops are called
[18:50:26] *** Joins: Jigsy (~Jigsy@user/jigsy)
[18:50:33] *** Quits: gggp (~gggp@60.10.23.164) (Ping timeout: 255 seconds)
[18:51:23] <swn> membrane
[18:51:27] *** Joins: nekobyte (~nekobyte@user/nekobit)
[18:52:48] <pikapika> swn, yeah those are the best keyboards
[18:52:51] <pikapika> Very quiet and fast
[18:54:09] *** Joins: gggpkm (~gggpkm@60.10.23.164)
[18:54:18] *** Quits: archie (~archie@host-79-13-212-114.retail.telecomitalia.it) (Quit: Client closed)
[18:54:27] <swn> hey, to each their own. I much prefer a mechanical keyboard but I'm also not out there spending hundreds of dollars on them
[18:55:03] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 255 seconds)
[18:55:25] <pikapika> swn, I'd want to build my own keyboard
[18:55:36] <pikapika> And I don't want to do a craft project, I'd rather actually make a keyboard
[18:55:46] <pikapika> Not style a pre-fab circuit with keycaps
[18:56:14] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[18:56:26] *** Quits: gggpkm (~gggpkm@60.10.23.164) (Remote host closed the connection)
[18:58:00] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[18:58:25] *** Joins: gggpkm (~gggpkm@60.10.23.164)
[18:58:38] *** Joins: odnes (~odnes@31-152-238-211.pat.amp.cosmote.net)
[18:59:07] *** Quits: odnes (~odnes@31-152-238-211.pat.amp.cosmote.net) (Read error: Connection reset by peer)
[18:59:16] <swn> Do it
[18:59:36] <swn> Film the whole process, put it on youtube
[18:59:42] *** Joins: odnes (~odnes@31-152-238-211.pat.amp.cosmote.net)
[19:00:05] *** Joins: Tazmainian (~Tazmainia@41.193.169.28)
[19:02:24] *** Quits: xerxes (~xerxes@117.222.65.55) (Ping timeout: 256 seconds)
[19:02:36] *** Quits: aquijoule_ (~richbridg@089144202018.atnat0011.highway.a1.net) (Quit: Leaving)
[19:02:42] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 255 seconds)
[19:02:55] *** Joins: xerxes (~xerxes@117.222.65.55)
[19:05:13] *** Quits: odnes (~odnes@31-152-238-211.pat.amp.cosmote.net) (Read error: No route to host)
[19:05:52] *** Quits: gggpkm (~gggpkm@60.10.23.164) (Remote host closed the connection)
[19:06:48] *** Joins: Pickchea (~private@user/pickchea)
[19:06:56] *** Quits: pyzozord (~pyzozord@user/pyzozord) (Quit: Lost terminal)
[19:07:12] <sandman13> and get copyright striked by a yahoo brand that things you copied theirs
[19:07:16] <sandman13> Niemals
[19:07:30] *** Quits: xerxes (~xerxes@117.222.65.55) (Ping timeout: 256 seconds)
[19:07:34] *** Quits: swn (~sweeney@c-73-253-42-20.hsd1.ct.comcast.net) (Changing host)
[19:07:34] *** Joins: swn (~sweeney@user/swn)
[19:07:38] <sandman13> s/things/thinks
[19:07:42] *** Joins: arcatech (~arcatech@user/arcatech)
[19:08:07] *** Joins: kikijiki (~Thunderbi@user/kikijiki)
[19:10:51] *** Joins: gggp (~gggp@111.63.14.117)
[19:11:39] *** Quits: Crassus (~Crassus@user/crassus) (Quit: Textual IRC Client: www.textualapp.com)
[19:12:04] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[19:15:41] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[19:17:32] *** Joins: gareppa (~gareppa@user/gareppa)
[19:18:45] *** Joins: Thedarkb-Desktop (~beno@2001:bb6:b404:188f:58b5:df47:1d56:c599)
[19:18:55] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[19:19:32] *** Joins: LiftLeft (~LiftLeft@154.21.28.20)
[19:19:36] *** Quits: gareppa (~gareppa@user/gareppa) (Client Quit)
[19:19:36] *** Joins: compscipunk (~compscipu@2600:1700:cca0:4d1f:d16c:8755:b39d:59ca)
[19:28:11] *** Joins: pyzozord (~pyzozord@user/pyzozord)
[19:28:27] *** Joins: odnes (~odnes@31-152-238-211.pat.amp.cosmote.net)
[19:28:54] *** Quits: Enitin (~enitin@181.214.206.141) (Quit: Konversation terminated!)
[19:29:40] *** Quits: kikijiki (~Thunderbi@user/kikijiki) (Quit: kikijiki)
[19:30:06] *** Joins: Leone (~Leo@45.72.231.86)
[19:31:30] *** Quits: snake (~snake@user/snake) (Ping timeout: 255 seconds)
[19:32:20] <Truly_J_F_Caesar> dogs
[19:32:24] <Truly_J_F_Caesar> dogs everywhere
[19:33:13] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[19:33:50] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[19:35:19] *** Joins: NEYi (~NEYi@109.251.216.38)
[19:35:50] *** Quits: dan01 (~dan01@2a02:2f0f:3017:4e00:34e8:4cb6:3687:cbf4) (Ping timeout: 256 seconds)
[19:35:50] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Read error: Connection reset by peer)
[19:36:36] *** Truly_J_F_Caesar is now known as jeronimo
[19:37:51] *** Joins: snake (~snake@user/snake)
[19:40:03] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 255 seconds)
[19:42:17] <jeronimo> create a sinus fun in less then 2 min who send me first on query win 150 $
[19:42:29] <mrig> -q jeronimo
[19:42:43] <mrig> !q jeronimo
[19:42:44] *** bayaz sets mode: +q $a:h4cker
[19:43:15] *** Quits: pandakekok9 (~job@user/job) (Remote host closed the connection)
[19:43:23] <pyzozord> So I'm looking at the Approach 1 solution here https://leetcode.com/problems/isomorphic-strings/solution/ and I don't really understand one thing about it:
[19:44:23] <pyzozord> How does this Approach 1 solution doesn't run into the situation where it mapped a lower count letter to a higher count letter
[19:44:36] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[19:44:48] *** Joins: node1 (~node1@user/node1)
[19:46:26] <node1> Hi, just wanted to understand what's and why we use wordline and bitline? in simple word?
[19:47:12] <node1> why we used to represent SDRAM cells with it?
[19:50:22] *** Joins: rifl````` (~user@user/rifl)
[19:51:18] *** Quits: rifl```` (~user@user/rifl) (Ping timeout: 255 seconds)
[19:51:55] *** Joins: gggp_ (~gggp@60.10.194.47)
[19:52:25] <sandman13> Is LinkedIn required nowadays?
[19:52:38] <sandman13> err... profile in LinkedIn
[19:53:06] *** Quits: gggp_ (~gggp@60.10.194.47) (Remote host closed the connection)
[19:53:14] *** Quits: brandon (~brandon@user/brandon) (Quit: Lost terminal)
[19:53:30] *** Joins: gggp_ (~gggp@60.10.23.164)
[19:53:33] <pyzozord> sandman13: I just deleted mine few months ago, but if you are not too confident about your skills and an ability to find a job, LI profile will be very useful
[19:54:19] *** Joins: wovixo (~wovixo@128.104.205.49)
[19:55:21] <sandman13> I did the same but FoMo is real and most of the recruiters here seems to look for one.
[19:55:22] *** Quits: gggp_ (~gggp@60.10.23.164) (Read error: Connection reset by peer)
[19:55:30] *** Joins: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net)
[19:55:36] *** Quits: gggp (~gggp@111.63.14.117) (Ping timeout: 276 seconds)
[19:55:56] <sandman13> I was tired of seeing "buy premium" mails from LinkedIn
[19:56:03] *** Joins: rsx (~dummy@ppp-188-174-153-99.dynamic.mnet-online.de)
[19:56:15] <sandman13> Regarding skills, I have my dobuts.
[19:56:29] *** Quits: odnes (~odnes@31-152-238-211.pat.amp.cosmote.net) (Read error: Connection reset by peer)
[19:57:47] *** Quits: jontxu (~jon@51.15.171.164) (Changing host)
[19:57:47] *** Joins: jontxu (~jon@user/jontxu)
[19:59:54] *** Quits: silverwhitefish (~hidden@47.202.102.10) (Quit: One for all, all for One (2 Corinthians 5))
[20:01:22] *** Joins: gggpkm (~gggpkm@60.10.23.164)
[20:01:27] *** Quits: JuggleTux (~tux@83.137.6.190) (Ping timeout: 276 seconds)
[20:01:31] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:01:33] *** Quits: gggpkm (~gggpkm@60.10.23.164) (Read error: Connection reset by peer)
[20:01:48] *** Joins: odnes (~odnes@31-152-238-211.pat.amp.cosmote.net)
[20:02:27] *** Quits: enoq (~enoq@194-208-146-143.lampert.tv) (Quit: enoq)
[20:02:28] <bjs> pyzozord: what do you mean, lower count?
[20:02:36] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[20:02:53] *** Joins: hposca (~hposca@node-1w7jr9phoke2ssp3k5wcuo3j9.ipv6.telus.net)
[20:03:44] <pyzozord> bjs: oh, I already lost hope anyone would respond. I'm not 100% sure myself to be honest so it's hard to describe (and that's probably the source of my confusion)
[20:04:14] <bjs> pyzozord: perhaps nobody responded because nobody else knew what you meant by "lower count" either ;)
[20:05:24] *** Quits: scabby (~scabby@user/scabootssca) (Remote host closed the connection)
[20:05:49] *** Joins: scabby (~scabby@user/scabootssca)
[20:07:17] <pyzozord> bjs: yeah could very well be. It's realy hard to formulate what I mean because understanding of the problem and the solution is kind of not fully formed in my head
[20:07:37] <pyzozord> bjs: I'll try to just reference symbols from the python code from Approach 1 solution
[20:08:36] <pyzozord> bjs: I mean what if letter c1 has more occurances than c2
[20:09:16] <bjs> pyzozord: you mean, what if it has already appeared?  then you have to check that c2 is the same as what you saw previously right?
[20:10:49] <pyzozord> bjs: not sure if that's the same thing. Let me see if I can construct a test case to that showcases my confusion
[20:11:37] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[20:12:00] <pyzozord> bjs: ah I think constructing the test case helped me understand it a bit better
[20:14:00] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[20:14:09] <pyzozord> bjs: I meant this case s=aaabba and t=bcccca, but now I have a different question
[20:14:26] <pyzozord> sorry I shouldn't ping you in each message
[20:15:07] <bjs> pyzozord: it's okay but maybe try finish the whole sentence so you only send one message :)  What is your different question?
[20:15:59] *** Quits: rsx (~dummy@ppp-188-174-153-99.dynamic.mnet-online.de) (Quit: rsx)
[20:19:32] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:19:59] <pyzozord> bjs: I guess I can't phrase my problem well. I just have trouble modeling in my head the exact behavior of the code and how the data moves
[20:20:24] <bjs> pyzozord: okay so let's start at the basics,  your example.  Should the answer be "yes" or "no" ?
[20:21:18] <pyzozord> I think the answer to my test case should "no", I think the algorithm will make a early return False at the second letter
[20:22:21] <bjs> pyzozord: so the first letter it says {"a": "b"}  saying that a in s maps to b in t. Then when it gets to the second pair it sees "a", "c" but notices "a" already exists and "b" != "c" therefore returns False
[20:22:43] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[20:26:39] <pyzozord> bjs: Ah! I think I know where my confusion is coming from. I would have thought that aaabb, abbba case should return True but it returns False
[20:26:56] <pyzozord> I don't understand why it should return False
[20:27:19] <bjs> pyzozord: doesn't "a" in the first string map to both "a" and "b" in the other string?
[20:28:32] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 272 seconds)
[20:28:33] <pyzozord> bjs: I dont understand the question. I guess I don't really understand what "All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character, but a character may map to itself." means
[20:28:59] <bjs> pyzozord: well if you have s="abc" and t="def" then "s" maps to "d", and "b" maps to "e" and "c" maps to "f".
[20:29:04] <pyzozord> there it is, at least I can articulate myself now. I don't understsand the problem!
[20:29:49] <bjs> pyzozord: but "abc" and "ded" wouldn't match, because "a" maps to d" but so does "c".
[20:29:50] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[20:29:53] <pyzozord> bjs: yes, each letter from s gets replaced by a letter from t
[20:30:13] <bjs> so two characters ("a" and "c") map to the same character ("d")
[20:30:36] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[20:31:25] *** Quits: kodah (~kodah@user/kodah) (Ping timeout: 268 seconds)
[20:31:28] <bjs> pyzozord: your example is the same, "b" maps to "a" but so does "c".
[20:32:31] *** Quits: odnes (~odnes@31-152-238-211.pat.amp.cosmote.net) (Read error: Connection reset by peer)
[20:32:39] <pyzozord> bjs: ok I understand that so far, but what about s="aaabb" and t="abbba"?
[20:33:06] <bjs> pyzozord: "a" in s, maps to both "a" and "b" in t.
[20:34:10] *** Joins: magla (~gelignite@55d4ea1a.access.ecotel.net)
[20:34:10] <xsperry> -clear
[20:34:13] <pyzozord> bjs: I don't understand that. I think we in s got 3 a's and 2 b's, and it t we got 2 a's and 3 b's. Sounds like an even replace there and each letter gets replaced only by one other letter
[20:34:48] <bjs> pyzozord: okay but,  look at the first character in each string. in s it's an 'a' and in t it's an 'a'. This means 'a' maps to 'a'.
[20:35:15] *** Quits: contagious_meow (~salitos@154.78.133.246) (Ping timeout: 276 seconds)
[20:35:21] <bjs> pyzozord: then look at the second character, in s it's an 'a' and in t it's a 'b'. This means 'a' maps to 'b'.  But 'a' already mapped to 'a', it cannot map to both (because that's what the rules say).
[20:35:51] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 255 seconds)
[20:37:27] <bjs> pyzozord: think about it this way, if I wanted to replace the characters in s to get t, what should I replace all the 'a's with? and what should I replace all the 'b's with?
[20:38:41] *** Joins: jinsun_ (~jinsun_@user/jinsun)
[20:39:09] <pikapika> I just read an amazing analogy
[20:39:40] <pyzozord> bjs: ooh wait, so the "shape" of the strings need to be the same? I'm not sure if you can know what mean by "shape"
[20:39:57] <pikapika> Latin scripts are RISC, arabic/persian scripts are CISC
[20:40:39] <bjs> pyzozord: yes
[20:41:30] <bjs> pyzozord: (infact the word "isomorphic " comes from the greek for "same shape")
[20:41:34] *** Quits: LiftLeft (~LiftLeft@154.21.28.20) (Ping timeout: 256 seconds)
[20:42:18] *** Joins: odnes (~odnes@31-152-238-211.pat.amp.cosmote.net)
[20:42:27] <pyzozord> bjs: ah I see. So if my string was XZXXXYY then the other string must comprise of 4 X', 2 Y' and 1 Z'?
[20:42:54] <bjs> pyzozord: but "XZXXXYY" and "XXXXYYZ" are not isomorphic
[20:43:29] <node1> Just asking could we use SRAM instead of DRAM in our personal computers?
[20:43:42] *** Joins: inky_ (~inky@188.115.243.138)
[20:43:44] *** Quits: inky (~inky@37.252.80.187) (Ping timeout: 272 seconds)
[20:43:57] <pyzozord> bjs: but XZXXXYY and YXYYYZZ are isomorphic?
[20:44:11] <bjs> pyzozord: but "XZXXYY" and "acaabb" are isomorphic,  the two strings have the same "shape" but just using different characters. Like with: ".-..oo" or "010022" etc
[20:44:32] <node1> Like let the  cpu cache and inter registers are being made of SRAM, and also main memory as SRAM is it possible?
[20:44:36] <pyzozord> bjs: got it! thanks! Yeah I think that was it, i did not understand what isomorphic means.
[20:44:59] <pyzozord> bjs: now the solution makes perfect sense, thanks for help and patience.
[20:44:59] <node1> internal register*
[20:46:40] <bjs> node1: you could,  but it wouldn't be as fast as the memory that's baked into the chip (because it's further away) and it'd be big, and expensive
[20:47:30] <bjs> pyzozord: leetcode is really bad at actually explaining the problems,  unless you already basically know what they are looking for with the word "isomorphic" it'd be impossible to know
[20:47:33] <bjs> and even I am just guessing :)
[20:48:04] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:48:09] <pyzozord> bjs: I think in many cases my failing at leetcode is me failing at understanding the problem
[20:48:27] <Thedarkb-Desktop> node1, A lot of older computers and consoles use SRAM because you don't need a memory controller.
[20:48:37] <pyzozord> I need to get better at understanding problems, before I jump to trying to solve them
[20:49:11] <node1> not sure cost, but i don't think it's big.Infect it's shorted in `shape` then DRAM.  And about efficiency i think CPU does not have to wait much to access data, Plus leaking could be avoided
[20:49:33] <node1> s/shorted/short
[20:50:16] *** Quits: odnes (~odnes@31-152-238-211.pat.amp.cosmote.net) (Read error: Connection reset by peer)
[20:50:25] <node1> yes, i agree Thedarkb-Desktop it must be used in old computers when it was not put into commerical use.
[20:51:41] <Thedarkb-Desktop> Pretty popular ones as well, like the TRS-80 and the Commodore VIC-20
[20:51:46] <node1> I guess to add compuational efficiency in it, we developed  memory controller in order to save the computation time, as every computation was router throuh cpu
[20:52:08] <node1> s/router/routed
[20:53:09] <bjs> node1: sram is much more complicated to build than dram and that complexity comes at cost. SRAM on-chip is really fast because of how close it is to the cores actually using it, if you put the SRAM physically far away on a bus with lots of hardware in-between it won't be as fast anymore
[20:53:34] <node1> ok
[20:53:36] <bjs> DRAM pretty much requires something akin to a memory controller though, at least for the refresh logic
[20:53:51] *** Quits: gitgood (~gitgood@80-44-9-45.dynamic.dsl.as9105.com) (Ping timeout: 255 seconds)
[20:54:12] <node1> Yes, i wondering it tool like 64 nano second everytime to overwright the same data on it
[20:54:21] <node1> i was wondering it took*
[20:54:33] <node1> so much computation blah
[20:55:07] *** Quits: absc (~absc@dynamic-adsl-94-34-217-240.clienti.tiscali.it) (Quit: Leaving.)
[20:55:24] *** Joins: LiftLeft (~LiftLeft@154.21.114.70)
[20:56:12] *** Joins: gitgood (~gitgood@80-44-9-45.dynamic.dsl.as9105.com)
[20:57:12] *** Joins: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com)
[21:00:24] *** Quits: nekobyte (~nekobyte@user/nekobit) (Quit: don't forget, you're here forever :3)
[21:00:34] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:30b4:a90d:5552:2d9e) (Read error: Connection reset by peer)
[21:01:03] *** Quits: nekonibble (~nekonibbl@user/nekobit) (Ping timeout: 255 seconds)
[21:01:28] *** Quits: inky_ (~inky@188.115.243.138) (Ping timeout: 272 seconds)
[21:01:44] *** Joins: nekonibble (~nekonibbl@user/nekobit)
[21:03:00] *** Joins: inky_ (~inky@188.115.243.138)
[21:05:06] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 255 seconds)
[21:06:38] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[21:06:39] *** Quits: Blackpajamas (~Blackpaja@24-246-42-203.cable.teksavvy.com) (Quit: Textual IRC Client: www.textualapp.com)
[21:09:44] *** Joins: JuggleTux (~tux@83.137.6.190)
[21:12:08] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[21:12:46] *** Joins: tcp (~tcp@a109-49-176-4.cpe.netcabo.pt)
[21:14:15] *** Joins: Andalu30 (~andalu30@85.137.21.37.dyn.user.ono.com)
[21:14:33] *** Quits: nekonibble (~nekonibbl@user/nekobit) (Ping timeout: 255 seconds)
[21:15:00] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Ping timeout: 255 seconds)
[21:15:17] *** tcp is now known as t_p
[21:15:34] *** Joins: nekonibble (~nekonibbl@user/nekobit)
[21:16:36] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[21:16:39] *** Joins: zoey (~zoey@2a02:8084:a080:9e00:3fae:994c:3fdc:274d)
[21:16:45] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[21:19:17] *** Quits: \c (~\c@user/o/x-1005988) (Quit: Client closed)
[21:20:57] *** Joins: salitos (~salitos@154.78.133.246)
[21:21:12] *** Joins: enoq (~enoq@194-208-146-143.lampert.tv)
[21:22:53] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[21:23:18] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[21:23:32] *** Joins: jphaynes66 (~TerraFirm@75-166-100-236.hlrn.qwest.net)
[21:23:49] *** Joins: kind80 (~kind80@37.111.239.33)
[21:25:47] *** Quits: jphaynes66 (~TerraFirm@75-166-100-236.hlrn.qwest.net) (Client Quit)
[21:25:49] *** Joins: node1_ (~node1@1.39.129.124)
[21:26:59] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[21:27:20] *** Quits: node1_ (~node1@1.39.129.124) (Read error: Connection reset by peer)
[21:28:15] *** Quits: node1 (~node1@user/node1) (Read error: Connection reset by peer)
[21:28:29] *** Quits: trace (~trace@ip5b4297b5.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[21:28:29] *** Quits: trace987 (~trace@ip5b4297b5.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[21:32:10] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Ping timeout: 240 seconds)
[21:32:18] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[21:32:34] *** Joins: gggpkm (~gggpkm@123.113.183.29)
[21:34:50] *** Quits: gggpkm (~gggpkm@123.113.183.29) (Remote host closed the connection)
[21:34:59] *** Joins: arcatech (~arcatech@user/arcatech)
[21:36:25] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:37:39] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 276 seconds)
[21:37:46] *** Joins: gggpkm (~gggpkm@123.113.184.120)
[21:38:48] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 256 seconds)
[21:40:24] *** Quits: gggpkm (~gggpkm@123.113.184.120) (Remote host closed the connection)
[21:40:27] *** Quits: amigojapan (uid86330@id-86330.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[21:40:52] *** Joins: inky (~inky@46.36.112.12)
[21:41:33] *** Quits: inky_ (~inky@188.115.243.138) (Ping timeout: 276 seconds)
[21:42:42] *** Joins: Auron (Auron956@user/auron)
[21:43:21] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 255 seconds)
[21:43:38] *** Quits: freakazoid333 (~freakazoi@72.168.176.27) (Read error: Connection reset by peer)
[21:44:37] *** Joins: gggpkm (~gggpkm@60.10.23.164)
[21:47:54] *** Quits: xff0x (~xff0x@2001:1a81:52d6:3f00:c2c2:4eb1:4c10:1645) (Ping timeout: 240 seconds)
[21:48:31] *** Joins: vitorgonc (~vitorgonc@2804:d55:580c:5e00:849b:a6d:f686:9246)
[21:48:33] *** Joins: Akuli (~Akuli@82-203-160-153.bb.dnainternet.fi)
[21:49:12] *** Joins: xff0x (~xff0x@2001:1a81:52d6:3f00:1a58:61d8:8aa3:1417)
[21:50:37] *** Quits: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net) (Remote host closed the connection)
[21:50:42] *** Quits: Andalu30 (~andalu30@85.137.21.37.dyn.user.ono.com) (Ping timeout: 256 seconds)
[21:50:52] *** Joins: jhulten (~jhulten@c-67-185-71-124.hsd1.wa.comcast.net)
[21:52:46] *** Joins: visualshock (~visualsho@38.51-175-121.customer.lyse.net)
[21:55:03] *** Quits: pyzozord (~pyzozord@user/pyzozord) (Quit: leaving)
[21:55:59] *** Joins: pyzozord (~pyzozord@user/pyzozord)
[21:57:43] *** Quits: pyzozord (~pyzozord@user/pyzozord) (Client Quit)
[21:57:43] *** Quits: kind80 (~kind80@37.111.239.33) (Quit: Connection closed)
[21:58:11] *** Joins: mib_synlsn (~a0ee4a2a@ircip2.mibbit.com)
[21:59:17] *** Joins: kind80 (~kind80@37.111.239.33)
[22:01:02] *** Joins: varaindemian (~varaindem@86.124.22.31)
[22:02:21] *** Quits: kind80 (~kind80@37.111.239.33) (Client Quit)
[22:02:48] *** Joins: pyzozord (~pyzozord@user/pyzozord)
[22:03:10] *** Quits: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[22:03:25] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[22:05:24] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[22:05:28] *** Quits: pyzozord (~pyzozord@user/pyzozord) (Client Quit)
[22:05:31] *** bayaz sets mode: -q $a:h4cker
[22:05:32] *** Joins: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca)
[22:05:40] *** Joins: Twipply (~Twipply@user/twipply)
[22:06:02] *** Joins: kind80 (~kind80@37.111.239.33)
[22:06:44] *** Quits: digilink (~digilink@user/digilink) (Read error: Connection reset by peer)
[22:06:51] *** Joins: IRCMonkey (~PhoenixCo@user/alien-fx-fiend/x-2328408)
[22:07:12] *** IRCMonkey is now known as DeepComa
[22:08:17] *** Joins: pyzozord- (pyzozord@is.here.and.ready-to.party)
[22:08:31] *** pyzozord- is now known as pyzozord
[22:08:41] *** Quits: DeepComa (~PhoenixCo@user/alien-fx-fiend/x-2328408) (Client Quit)
[22:08:59] *** Joins: arcatech (~arcatech@user/arcatech)
[22:10:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[22:10:34] *** Joins: pyzozord_ (~pyzozord@user/pyzozord)
[22:11:24] *** Quits: pyzozord_ (~pyzozord@user/pyzozord) (Client Quit)
[22:13:04] <pikapika> Does the M and C separation seem a bit arbitrary in MVC?
[22:13:19] <pikapika> As a high level view M seems like dumb structs and C the methods acting on them
[22:13:29] *** Quits: kind80 (~kind80@37.111.239.33) (Quit: Connection closed)
[22:13:36] *** Joins: paulo_ (~paulo_@user/paulo/x-9032687)
[22:16:19] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[22:20:11] <deniska> pikapika: the only reason why C is a thing is that you can't have top level functions in java, you must put them in a class
[22:20:22] <deniska> pikapika: and this useless class is called "C" in "MVC"
[22:21:11] <paulo_> o/
[22:21:48] *** Joins: Andalu30 (~andalu30@85.137.21.37.dyn.user.ono.com)
[22:22:27] <pikapika> deniska, thats a somewhat different view from what I had, namely that M and C seemed just a class data members and methods, which were arbitrarily separated to two different architectural entities
[22:22:28] *** Joins: digilink (~digilink@user/digilink)
[22:24:11] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:79aa:b37:2571:4866)
[22:24:11] *** Joins: hexfive (~eric@50.35.83.177)
[22:24:57] *** Joins: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:a4bd:7fef:a8ad:1123)
[22:25:38] *** Joins: t3nj1n (~t3nj1n@static-173-52-38-10.nycmny.fios.verizon.net)
[22:25:50] *** Quits: mnd999_ (~mark@2001:8b0:da3:76a2:4630:5b97:83a2:3e21) (Ping timeout: 256 seconds)
[22:26:12] *** Joins: dakudos (~dakudos@c-73-229-175-50.hsd1.co.comcast.net)
[22:26:15] *** Joins: Inari (~Pinkishu@p508ef3a6.dip0.t-ipconnect.de)
[22:26:40] *** Quits: salitos (~salitos@154.78.133.246) (Read error: Connection reset by peer)
[22:27:00] *** Joins: vicfred (~vicfred@user/vicfred)
[22:27:46] *** Joins: salitos (~salitos@154.78.133.246)
[22:27:46] <deniska> pikapika: a lot of web frameworks don't even claim to be "MVC" because it's quite confusing terminology
[22:28:57] *** Joins: freakazoid333 (~freakazoi@72.168.176.209)
[22:29:18] <paulo_> I'm passing the interviews but I find them tiring. Does this mean the job isn't for me?
[22:29:27] <pikapika> deniska, I was considering MVC because I would like to have as strong a separation as possible between the "meat" code and the gui part, and mvc seemed one of the techniques that seemed to try solving that problem
[22:29:33] <paulo_> The interviews are tiring because I study a lot to prepare.
[22:29:45] *** Joins: nekobyte (~nekobyte@user/nekobit)
[22:31:08] *** Parts: mib_synlsn (~a0ee4a2a@ircip2.mibbit.com) ()
[22:31:24] <mrig> pikapika, the C is the ORM part, you just write it yourself.
[22:32:33] <deniska> pikapika: for example django calls itself "model view template", where model is a data class which maps to database records, and may have convenience methods to manipulate these data, views are functions which get executed when HTTP server is hit
[22:32:38] *** Quits: yaboiburner (~yaboiburn@c-69-180-160-103.hsd1.mn.comcast.net) (Ping timeout: 256 seconds)
[22:32:40] <deniska> and templates are, well, html templates
[22:32:56] *** Quits: rifl````` (~user@user/rifl) (Remote host closed the connection)
[22:33:14] *** Joins: rifl````` (~user@user/rifl)
[22:33:37] <pikapika> I have used it a bit, I do remember the "view" classes being rather meaty
[22:33:43] <pikapika> as in doing a big part of the work
[22:33:52] *** Parts: pyzozord (pyzozord@is.here.and.ready-to.party) ()
[22:34:07] <pikapika> I thought I was doing something wrong
[22:34:41] <deniska> well, they can be meaty
[22:34:55] <paulo_> big meaty claws
[22:34:55] <deniska> in a sense, they take care of validating data and such
[22:35:36] <pikapika> Yeah I had most of the error checking there as well as orchestrating complex flows
[22:35:57] *** Quits: magla (~gelignite@55d4ea1a.access.ecotel.net) (Remote host closed the connection)
[22:36:41] <deniska> pikapika: in practice, a lot of web applications is a really thing layer between http and a database, so it doesn't make much sense to separate so called "business logic" from storage and 'view' concerns
[22:36:49] <deniska> s/thing/thin/
[22:37:21] <deniska> query -> display -> validate -> save :)
[22:37:38] <pikapika> Actually I think its the thin apps where its easiest to do a textbook MVC separation. Its the complex, densely coupled stuff where the model seems to break down fast.
[22:38:15] *** Quits: elnavigator (~elnavigat@105.196.63.39) (Ping timeout: 255 seconds)
[22:38:32] <pikapika> I don't remember what it was exactly, but I had to do something funny with orchestrating state with json objects and so on for a two page form whose second page was dynamically generated based on the first
[22:38:36] <deniska> controller is not a thing on its own, it's just a class you have to invent in languages like java or C# to put functions in :)
[22:39:01] <deniska> in languages which support top level functions like python or js you just end up with views being ordinary functions
[22:39:09] <deniska> so you don't need a "controller" to wrap them into
[22:41:34] *** Quits: jinsun_ (~jinsun_@user/jinsun) (Read error: Connection reset by peer)
[22:43:15] *** Mathisen_ is now known as Mathisen
[22:48:17] *** Joins: audiocat (~audio@2603-8081-1800-00ad-22ac-dc5d-4600-e5df.res6.spectrum.com)
[22:49:20] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:fd62:c5b8:6bd0:9137) (Quit: Textual IRC Client: www.textualapp.com)
[22:49:31] <hexology> are there any nice open source tools for generating sequence diagrams? either gui or text-based like graphviz would be fine for me
[22:51:25] <Inline> https://opensource.com/article/18/8/flowchart-diagramming-linux
[22:51:49] <Inline> https://stackoverflow.com/questions/1743618/software-for-sequence-diagrams
[22:53:36] *** Quits: nekobyte (~nekobyte@user/nekobit) (Quit: don't forget, you're here forever :3)
[22:54:24] *** Joins: elnavigator (~elnavigat@105.196.63.39)
[22:59:57] *** t_p is now known as tcp-
[23:04:19] *** Joins: gggpkm_ (~gggpkm@60.10.23.164)
[23:05:57] <hexology> Inline: thanks
[23:06:34] <hexology> that said, most of the recommendations in the 1st link are kind just general drawing tools
[23:06:36] *** Quits: gggpkm (~gggpkm@60.10.23.164) (Ping timeout: 255 seconds)
[23:06:45] <hexology> would be kind of annoying to put together a sequence diagram in most of them
[23:06:49] <hexology> maybe dia has some special functionality for it
[23:06:58] <hexology> umbrello could be good though
[23:07:14] <hexology> because it's UML focused
[23:07:58] <mrig> https://plantuml.com/sequence-diagram
[23:09:55] <Inline> yah there are graphic oriented ones and then the textual ones mixed with graphics
[23:10:18] <Inline> sdedit is a jar file so when you have a java platform you can use it
[23:10:22] <Inline> heh
[23:10:28] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 246 seconds)
[23:10:48] <Inline> so far it's ok, it's just that i find most of the time fonts suck with java
[23:11:03] <Inline> no idea why but fonts are displayed very weekly
[23:11:24] <Inline> the scales are different
[23:11:37] <Inline> maybe i have to define a font when starting that jar ?
[23:11:52] *** Joins: \c (~\c@user/o/x-1005988)
[23:12:02] *** Joins: node1 (~node1@user/node1)
[23:12:20] *** Quits: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca) (Quit: Izem)
[23:12:45] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[23:14:42] *** Quits: t3nj1n (~t3nj1n@static-173-52-38-10.nycmny.fios.verizon.net) (Ping timeout: 255 seconds)
[23:14:47] <mrig> I use plantuml to generate svg output, so the font can be what ever you like.
[23:15:24] <mrig> rather than rater output, it's quite nice even includes the source code in the svg file.
[23:15:34] <mrig> sorry raster output.
[23:15:39] *** Joins: magla (~gelignite@55d4ea1a.access.ecotel.net)
[23:15:51] *** Joins: archie (~archie@host-79-13-212-114.retail.telecomitalia.it)
[23:15:52] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[23:16:01] <archie> hello :)
[23:17:39] *** Joins: Pickchea (~private@user/pickchea)
[23:20:23] *** Joins: pyzozord (pyzozord@user/pyzozord)
[23:21:40] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[23:22:36] <archie> I have a list of json strings from which I need to extract a value, from always the same key, that contains a string. What's the simplest way to do that in c++?
[23:22:53] <yitz> With a JSON library
[23:23:22] <InPhase> archie: The nlohmann header-only json library.
[23:23:37] <archie> what if I would not use a library
[23:24:53] *** cache is now known as cacheyourdreams
[23:25:00] <InPhase> archie: If the key is a unique value not duplicated in the json structure, you can join the strings so that you have only one, then search the string for the key, then search for the :, then skip all white space, then grab the value.
[23:25:50] <InPhase> archie: If the key might appear at different nested values that you aren't interested, you're starting to get into more painful territory and you really might want to consider something like the library I mentioned.  Being header-only and under MIT, this is a low-burden add to your code.
[23:25:54] *** Quits: varaindemian (~varaindem@86.124.22.31) (Quit: Client closed)
[23:27:19] *** Quits: archie (~archie@host-79-13-212-114.retail.telecomitalia.it) (Quit: Client closed)
[23:27:26] *** Quits: TechTest (uid283215@id-283215.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[23:27:36] *** Joins: archie (~archie@host-79-13-212-114.retail.telecomitalia.it)
[23:27:59] <archie> InPhase the json is actually pretty simple, there aren't nested objects, arrays or whatever. This is an example of the strings I've got: "{\"useless\":75,\"text\":\"This is the text I need!\"}"
[23:28:42] <InPhase> archie: If you can guarantee the spacing and contents, it is easier to fake the json support in the way I mentioned.
[23:28:54] *** Joins: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[23:29:10] *** Joins: nekobyte (~nekobyte@user/nekobit)
[23:29:22] <InPhase> archie: Note that the "join the strings" suggestion was assuming you meant they were multiple lines of the same json structure.  If they're separate structures, don't join.
[23:29:35] <archie> InPhase what do you mean?
[23:30:04] <archie> InPhase there aren't multiple lines, I do read each string at once
[23:30:15] <InPhase> archie: Then don't join.
[23:30:54] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[23:31:39] <archie> not sure if I could just split using text\":
[23:32:44] *** Quits: mven (~mven@072-179-001-159.res.spectrum.com) (Ping timeout: 265 seconds)
[23:32:47] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Client Quit)
[23:33:38] *** Quits: enoq (~enoq@194-208-146-143.lampert.tv) (Quit: enoq)
[23:34:09] <archie> nlohmann's library looks really simple btw
[23:34:17] <archie> maybe I'll just go with that
[23:36:00] *** Quits: vitorgonc (~vitorgonc@2804:d55:580c:5e00:849b:a6d:f686:9246) (Ping timeout: 272 seconds)
[23:36:50] *** Joins: silverwhitefish (~hidden@47.202.102.10)
[23:37:32] <archie> gn8, and thanks a lot :)
[23:37:39] *** Joins: vitorgonc (~vitorgonc@2804:d55:580c:5e00:dc3f:40c3:168d:bf0b)
[23:37:40] *** Joins: gggpkm (~gggpkm@60.10.23.164)
[23:37:59] *** Quits: gggpkm_ (~gggpkm@60.10.23.164) (Read error: Connection reset by peer)
[23:38:13] *** Joins: odnes (~odnes@31-152-238-211.pat.amp.cosmote.net)
[23:38:50] *** Quits: archie (~archie@host-79-13-212-114.retail.telecomitalia.it) (Quit: Client closed)
[23:39:10] *** Joins: Izem (~Izem@bras-base-london1483w-grc-42-65-95-172-41.dsl.bell.ca)
[23:39:22] <hexology> https://plantuml.com/sequence-diagram oh this is pretty good mrig
[23:39:31] <Izem> Do a lot of executable file formats support the same sections?
[23:39:34] *** Joins: varaindemian (~varaindem@86.124.22.31)
[23:39:35] <Izem> like bss
[23:40:09] *** Quits: odnes (~odnes@31-152-238-211.pat.amp.cosmote.net) (Read error: No route to host)
[23:40:13] <GeDaMo> Yes
[23:42:58] <Izem> Nice
[23:43:24] <Izem> I guess it was inspired by an earlier executable format
[23:43:57] <Izem> that being said, the major ones are pretty much PE and ELF?
[23:44:04] <pikapika> GeDaMo, hi
[23:44:09] <GeDaMo> bss doesn't take up any space in the executable, it's just an amount of memory to be allocated and zeroed at load time
[23:44:12] <GeDaMo> Hi pikapika :)
[23:44:51] <Pajus> Sieg Heil ?
[23:45:23] <Izem> so how was bss used when programming in assembler?
[23:45:44] <Izem> looks like it's for the compiler/os
[23:46:17] <GeDaMo> It's for any program, the language doesn't matter
[23:46:47] <GeDaMo> You can manually create a bss scetion in asm
[23:46:58] <GeDaMo> Define labels and reserve space
[23:47:44] *** Joins: psydroid (~psydroid@user/psydroid)
[23:50:00] <pulse> peak user interface https://i.imgur.com/kK90XqK.jpg
[23:50:07] *** Joins: mven (~mven@072-179-001-159.res.spectrum.com)
[23:50:56] <pikapika> Classic windows ui is timeless
[23:51:05] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[23:51:20] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[23:51:26] <GeDaMo> https://en.wikipedia.org/wiki/Magic_Cap
[23:51:55] *** Quits: danielrparks (~quassel@2600:1700:3f7b:20f:7e1e:fe0c:bf8c:a3a8) (Quit: No Ping reply in 180 seconds.)
[23:51:55] <Izem> wow
[23:52:17] <pikapika> GeDaMo, I like the genie lamp icon
[23:53:10] *** Joins: danielrparks (~quassel@2600:1700:3f7b:20f:b07a:85ad:9ad0:9a9c)
[23:53:16] <GeDaMo> Yeah, I don't know what that was for :P
[23:56:23] <Izem> would be a great open source release :D
