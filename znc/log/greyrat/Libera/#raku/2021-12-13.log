[00:02:35] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[00:14:29] *** Quits: abraxxa-home (~alex@smtp.hartmaier.priv.at) (Remote host closed the connection)
[01:01:07] *** Joins: jjido (~Denis@90.213.58.125)
[01:14:10] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[01:27:45] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Remote host closed the connection)
[01:28:01] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[02:28:01] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[02:28:01] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[02:31:08] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[02:43:54] *** Joins: ggoebel (~ggoebel@107-134-157-130.lightspeed.tukrga.sbcglobal.net)
[02:45:05] *** Quits: patrickb (~quassel@55d4401f.access.ecotel.net) (Quit: Quit.)
[02:45:19] <ggoebel> m: [[0,1],[2,3],[4,5]>>.List.flat.say
[02:45:19] <camelia> rakudo-moar b5a71ab2a: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unable to parse expression in array composer; couldn't find final ']' (corresponding starter was at line 1)‚ê§at <tmp>:1‚ê§------> 3[[0,1],[2,3],[4,5]>>.List.flat.say7‚èè5<EOL>‚ê§    expecting any o‚Ä¶¬ª
[02:45:33] <ggoebel> m: [[0,1],[2,3],[4,5]]>>.List.flat.say
[02:45:33] <camelia> rakudo-moar b5a71ab2a: OUTPUT: ¬´(0 1 2 3 4 5)‚ê§¬ª
[02:46:02] <merryprog> you'd think a flat list would have square brackets, not parentheses...
[02:46:08] <merryprog> (Sorry)
[03:01:00] <ggoebel> m: my $dfGrouped = [[0,1],[2,3],[4,5]]; $dfGrouped>>.List.flat.say
[03:01:01] <camelia> rakudo-moar b5a71ab2a: OUTPUT: ¬´(0 1 2 3 4 5)‚ê§¬ª
[03:02:03] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de) (Excess Flood)
[03:02:15] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[03:02:25] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab74b.dynamic.kabel-deutschland.de)
[03:02:37] <gfldex> dd [[0,1],[2,3],[4,5]].duckmap: |*;
[03:02:41] <gfldex> m: dd [[0,1],[2,3],[4,5]].duckmap: |*;
[03:02:41] <camelia> rakudo-moar b5a71ab2a: OUTPUT: ¬´Array element = [0, 1, 2, 3, 4, 5]‚ê§¬ª
[03:06:19] <ggoebel> nice
[03:28:42] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[03:32:51] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[03:35:39] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[03:43:12] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 276 seconds)
[03:44:14] *** Joins: tejr (~tejr@user/tejr)
[04:23:40] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[04:24:11] *** Joins: tejr (~tejr@user/tejr)
[04:58:25] *** Joins: frost (~frost@user/frost)
[05:42:55] *** Quits: xinming (~xinming@115.219.34.239) (Ping timeout: 250 seconds)
[05:44:52] *** Joins: xinming (~xinming@115.219.36.99)
[05:56:44] *** Joins: colemanX (~colemanx@2605:a601:5529:1e00:3c21:7942:3fe6:13ad)
[06:19:58] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[06:36:27] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[06:36:58] *** Joins: tejr (~tejr@user/tejr)
[07:17:51] *** Quits: ProperN[out] (~holyShizn@user/propernoun) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[07:18:11] *** Joins: ProperNoun (~holyShizn@user/propernoun)
[07:22:06] *** Quits: ProperNoun (~holyShizn@user/propernoun) (Client Quit)
[07:22:26] *** Joins: ProperNoun (~holyShizn@user/propernoun)
[07:56:48] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[07:57:43] *** Joins: tejr (~tejr@user/tejr)
[09:03:44] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:03:45] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:03:45] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:03:45] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:03:45] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:03:45] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:03:45] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:03:45] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:03:45] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[09:03:45] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:03:45] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:03:45] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:03:45] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:03:45] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:03:45] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:03:45] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:03:45] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:03:45] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[09:03:45] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[09:04:10] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[09:04:25] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[09:05:33] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[09:05:58] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[09:12:27] *** Joins: gordonfish- (~gordonfis@user/gordonfish)
[09:14:46] <Geth__> ¬¶ Raku-Steering-Council/main: 8db193d8a0 | (Geoffrey Broadwell)++ | minutes/20211211.md
[09:14:46] <Geth__> ¬¶ Raku-Steering-Council/main: Add RSC meeting minutes for 2021-12-11
[09:14:46] <Geth__> ¬¶ Raku-Steering-Council/main: review: https://github.com/Raku/Raku-Steering-Council/commit/8db193d8a0
[09:14:50] *** Quits: gordonfish (~gordonfis@user/gordonfish) (Ping timeout: 260 seconds)
[09:16:03] *** Quits: Geth__ (~LizBot@ipv4-wenzperl.connected.by.freedominter.net) (Remote host closed the connection)
[09:16:11] *** Joins: Geth (~LizBot@ipv4-wenzperl.connected.by.freedominter.net)
[09:33:30] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[10:04:24] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[10:04:25] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[10:04:35] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[10:04:38] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[10:04:45] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[10:04:53] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[10:05:40] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[10:05:46] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[10:06:13] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[10:06:25] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[10:06:53] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[10:19:53] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[10:20:09] *** Joins: tejr (~tejr@user/tejr)
[10:51:35] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:52:20] *** Joins: seednode (~seednode@user/seednode)
[10:55:56] *** Joins: abraxxa (~ahartmai@smtp.hartmaier.priv.at)
[11:01:52] *** Quits: abraxxa (~ahartmai@smtp.hartmaier.priv.at) (Ping timeout: 256 seconds)
[11:02:24] *** Joins: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at)
[11:04:11] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[11:05:25] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[11:30:12] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[12:26:13] *** Joins: jjido (~Denis@90.213.58.125)
[12:29:37] *** Joins: dakkar (~dakkar@home.thenautilus.net)
[12:31:43] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[12:57:59] *** Quits: qorg11 (~lain@2605:6400:c022:fa04:1312:1337:0:beef) (Ping timeout: 252 seconds)
[13:01:28] *** Joins: qorg11 (~lain@2605:6400:c022:fa04:1312:1337:0:beef)
[13:05:26] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[13:47:45] <mykhal> hi, can cone do cross-apply like ('a'..'c') op (&lc, &uc) == <a b c A B C> ?  (op I thought could be X. or >>.>> )
[13:50:20] <moon-child> huh I thought you could do variadic map in cl but apparently not
[13:50:27] <moon-child> otherwise you could  map 
[13:50:46] <moon-child> oh, wait
[13:51:06] <moon-child> yea here ya go
[13:51:09] <moon-child> m: say map &map.assuming(*, 'a'..'c'), (&uc,&lc)
[13:51:10] <camelia> rakudo-moar b5a71ab2a: OUTPUT: ¬´((A B C) (a b c))‚ê§¬ª
[13:52:50] <mykhal> interesting.. btw, i really wanted flattened (which X<infixop> is used for)
[13:53:30] <moon-child> m: say map &slip‚àò&map.assuming(*, 'a'..'c'), (&uc,&lc)
[13:53:30] <camelia> rakudo-moar b5a71ab2a: OUTPUT: ¬´(A B C a b c)‚ê§¬ª
[13:53:39] <mykhal>  .. and wanted also some identity rather than lc on already lowcase ')
[13:54:52] <moon-child> I am not sure why there is no sub id.  But if that's what you want then why not just (|x.uc) , |x?
[14:03:35] <mykhal> not sure of "sub id", and exact usage of |x syntax
[14:04:08] <mykhal> and really hoper for cross-op or hyper
[14:05:14] <moon-child> m: say [&uc,&lc] X[&map] ('a'..'c')
[14:05:14] <camelia> rakudo-moar b5a71ab2a: OUTPUT: ¬´((A) (B) (C) (a) (b) (c))‚ê§¬ª
[14:05:27] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[14:05:27] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[14:05:28] <moon-child> not really sure why you've your heart set on X though
[14:06:12] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[14:07:38] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[14:08:20] <mykhal> moon-child++ rather nice, and ok, i'll use RX
[14:18:02] <mykhal> m: say ('a'..'c') RX[&map] [&(*~''), &uc]  # still not perfect
[14:18:02] <camelia> rakudo-moar b5a71ab2a: OUTPUT: ¬´((a) (b) (c) (A) (B) (C))‚ê§¬ª
[14:19:23] <moon-child> replace &(*~'') with &[~]
[14:31:13] <mykhal> cool, but shouldn't this rather work like that instead of assuming confusion with perlish . concat ?
[14:31:21] <mykhal> m: say ('a'..'c') X. (&[~], &uc)
[14:31:21] <camelia> rakudo-moar b5a71ab2a: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unsupported use of .  to concatenate strings.  In Raku please use: ~.‚ê§at <tmp>:1‚ê§------> 3say ('a'..'c') X.7‚èè5 (&[~], &uc)‚ê§¬ª
[14:31:48] <moon-child> why should X. work that way?
[14:40:37] <mykhal> very cnvenience; and i don't see hard philosophical problems with it, yet
[14:51:28] <mykhal> and . is (infix operator)-ish
[14:53:09] *** Joins: Altai-man (~sena_kun_@static-84-42-198-52.net.upcbroadband.cz)
[15:32:42] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[15:49:32] *** Quits: ProperNoun (~holyShizn@user/propernoun) (Ping timeout: 240 seconds)
[15:50:13] *** Joins: ProperNoun (~holyShizn@user/propernoun)
[16:15:11] <mykhal> oh..
[16:15:16] <mykhal> m: say 'a' . &uc
[16:15:17] <camelia> rakudo-moar b5a71ab2a: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unsupported use of .  to concatenate strings.  In Raku please use: ~.‚ê§at <tmp>:1‚ê§------> 3say 'a' .7‚èè5 &uc‚ê§¬ª
[16:15:59] *** Quits: gabiruh (~gabiruh@vps19177.publiccloud.com.br) (Ping timeout: 252 seconds)
[16:16:08] <mykhal> now i see the philosophical problem
[16:20:52] <Altai-man> mykhal, (whispers) haskell
[16:23:50] *** Joins: mscha (~mscha@logger.mscha.org)
[16:23:57] <mscha> ¬†my @a = [1,2], [3,4]; dd @a.map(*.Str); # OK
[16:23:57] <evalable6> mscha, rakudo-moar 343a7861d: OUTPUT: ¬´("1 2", "3 4").Seq‚ê§¬ª
[16:23:59] <mscha> my @a = [1,2], [3,4]; dd @a¬ª.Str; # Huh?
[16:23:59] <evalable6> mscha, rakudo-moar 343a7861d: OUTPUT: ¬´Array element = [["1", "2"], ["3", "4"]]‚ê§¬ª
[16:24:35] <mscha> Why aren't those equivalent?¬† ¬ª goes one level deeper than I expected.
[16:26:31] *** Joins: gabiruh (~gabiruh@vps19177.publiccloud.com.br)
[16:38:18] *** Joins: atroxaper (~atroxaper@178.49.194.113)
[16:38:35] <atroxaper> Hello, #raku
[16:39:52] <Altai-man> o/
[16:40:20] <mykhal> mscha: because of nodality "issues", it's doing rather deepmap
[16:46:28] <atroxaper> codesections: Hello. I have a question about lowbar and decided to not create the new issue for now. Is it final decision about using 'note' in Dbg package but not 'say' or 'put'? I, for example, do not use 'dd' for debug because it's output are messed with app's output.
[16:48:55] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[16:54:08] *** Quits: Zero_Dogg (~zerodogg@2a02:fe1:b002:100:215:17ff:fed8:8c8) (Ping timeout: 265 seconds)
[17:07:07] <SmokeMachine> m: say <a e i o u> X[andthen] (*.lc, *.uc)
[17:07:07] <camelia> rakudo-moar b5a71ab2a: OUTPUT: ¬´(a A e E i I o O u U)‚ê§¬ª
[17:07:27] <SmokeMachine> m: say <a e i o u> X[andthen] (*.&lc, *.&uc)
[17:07:27] <camelia> rakudo-moar b5a71ab2a: OUTPUT: ¬´(a A e E i I o O u U)‚ê§¬ª
[17:09:50] <mykhal> m: say <a e i o u> X[andthen] (~*, *.uc) #  SmokeMachine++
[17:09:50] <camelia> rakudo-moar b5a71ab2a: OUTPUT: ¬´(a A e E i I o O u U)‚ê§¬ª
[17:12:57] <SmokeMachine> but:
[17:13:23] <SmokeMachine> say <<a e i o u "">> X[andthen] (*.lc, *.uc)
[17:13:24] <evalable6> SmokeMachine, rakudo-moar 343a7861d: OUTPUT: ¬´(a A e E i I o O u U  )‚ê§¬ª
[17:13:40] <SmokeMachine> say <<a e i o u "" 0>> X[andthen] (*.lc, *.uc)
[17:13:41] <evalable6> SmokeMachine, rakudo-moar 343a7861d: OUTPUT: ¬´(a A e E i I o O u U   0 0)‚ê§¬ª
[17:13:46] <SmokeMachine> :)
[17:33:15] *** Joins: Colt (~Colt@user/colt)
[17:33:53] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[17:35:50] *** Joins: jjido (~Denis@90.213.58.125)
[17:36:49] *** Joins: Zero_Dogg (~zerodogg@2a02:fe1:b002:100:215:17ff:fed8:8c8)
[17:51:33] <mykhal> ok, is't natural, can be then .uniq'd ..
[17:53:01] <mykhal> but i'm inspecting mscha's nodality issue, thought to get expected result with
[17:53:07] <mykhal> m: my @a = [[1, 2], [3, 4]]; my method strn (Array --> Str) is nodal { self.Str }; say @a>>.strn.raku
[17:53:07] <camelia> rakudo-moar b5a71ab2a: OUTPUT: ¬´No such method 'strn' for invocant of type 'Int'.  Did you mean any of‚ê§these: 'Str', 'atan', 'sign', 'sin', 'sort', 'sqrt', 'tan'?‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[18:08:25] *** Joins: Sgeo (~Sgeo@user/sgeo)
[18:13:01] *** Quits: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot) (Ping timeout: 240 seconds)
[18:13:53] *** Quits: simcop2387 (~simcop238@perlbot/patrician/simcop2387) (Ping timeout: 265 seconds)
[18:15:42] *** Quits: jjido (~Denis@90.213.58.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[18:17:45] <gfldex> hohohoibloggedalittle: https://gfldex.wordpress.com/2021/12/13/recursive-caves/
[18:22:03] <gfldex> It's a shame that the AoC got only very small datasets to work with. Very little chance to use threading and show those Pythonists who is boss!
[18:49:24] *** Joins: simcop2387 (~simcop238@perlbot/patrician/simcop2387)
[18:50:27] *** Joins: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot)
[18:56:33] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Quit: ZNC 1.8.2 - https://znc.in)
[18:56:49] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[19:18:07] <SmokeMachine> m: my @a = [[1, 2], [3, 4]]; my method strn (Array: --> Str) is nodal { self.Str }; say @a>>.&strn.raku
[19:18:07] <camelia> rakudo-moar b5a71ab2a: OUTPUT: ¬´("1 2", "3 4")‚ê§¬ª
[19:19:38] <SmokeMachine> m: my @a = [[1, 2], [3, 4]]; my method strn (Array: --> Str()) is nodal { }; say @a>>.&strn.raku
[19:19:39] <camelia> rakudo-moar b5a71ab2a: OUTPUT: ¬´Use of Nil in string context‚ê§("", "")‚ê§  in method strn at <tmp> line 1‚ê§Use of Nil in string context‚ê§  in method strn at <tmp> line 1‚ê§¬ª
[19:19:57] <SmokeMachine> m: my @a = [[1, 2], [3, 4]]; my method strn (Array: --> Str()) is nodal { self }; say @a>>.&strn.raku
[19:19:57] <camelia> rakudo-moar b5a71ab2a: OUTPUT: ¬´("1 2", "3 4")‚ê§¬ª
[19:35:48] *** Joins: whatnext (~whatnext@static.120.96.63.178.clients.your-server.de)
[19:45:20] <tbrowder> fyi: i‚Äôm working on my Mi6::Helper module to make it easier to transform an mi6-created library for cpan to the Zef repo. should be available in a few days. the curr ver is basically a place holder showing planned features (outdated now)
[20:25:10] *** Joins: TheAthlete (~TheAthlet@176.96.230.85)
[20:36:54] *** Quits: amenonsen (~amenonsen@pitta.toroid.org) (Remote host closed the connection)
[20:38:19] *** Joins: amenonsen (~amenonsen@pitta.toroid.org)
[20:42:33] <Geth> ¬¶ doc: f101423ab5 | Coke++ | util/update-and-test
[20:42:33] <Geth> ¬¶ doc: more diagnostics
[20:42:33] <Geth> ¬¶ doc: review: https://github.com/Raku/doc/commit/f101423ab5
[20:42:43] *** Quits: Geth (~LizBot@ipv4-wenzperl.connected.by.freedominter.net) (Remote host closed the connection)
[20:42:51] *** Joins: Geth (~LizBot@ipv4-wenzperl.connected.by.freedominter.net)
[20:58:56] *** Parts: mathias[m] (~mathiasma@2001:470:69fc:105::1:4713) ()
[20:59:01] *** Joins: mathias[m] (~mathiasma@2001:470:69fc:105::1:4713)
[21:12:10] *** Quits: dakkar (~dakkar@home.thenautilus.net) (Ping timeout: 256 seconds)
[21:18:46] *** Quits: mscha (~mscha@logger.mscha.org) (Quit: Connection closed)
[21:26:28] *** Quits: colemanX (~colemanx@2605:a601:5529:1e00:3c21:7942:3fe6:13ad) (Quit: WeeChat 3.0.1)
[21:30:49] *** Quits: Xliff (~Cliff@pool-71-255-227-73.washdc.east.verizon.net) (Remote host closed the connection)
[21:32:41] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[21:33:53] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[21:43:05] *** Quits: Altai-man (~sena_kun_@static-84-42-198-52.net.upcbroadband.cz) (Quit: Leaving)
[21:48:44] *** Quits: abraxxa (~ahartmai@tsa-tc-flod.t-systems.at) (Remote host closed the connection)
[22:15:06] *** Quits: whatnext (~whatnext@static.120.96.63.178.clients.your-server.de) (Ping timeout: 260 seconds)
[22:19:07] *** Joins: Xliff (~Cliff@pool-71-255-227-73.washdc.east.verizon.net)
[22:27:00] *** Joins: lichtkind (~lichtkind@p200300d0a72272aa5403a1a5fbea63c0.dip0.t-ipconnect.de)
[22:28:56] <Xliff> gfldex: I have a lot of troubles with node walking algorithms. What materials would you suggest I read to bone up on 'em?
[22:55:53] <gfldex> Xliff: I don't really have any recommendations. I either recurse with a recursive function or I recurse with Iterators and build the stack myself.
[22:56:40] <gfldex> There are plenty of graphs where this will fail and I leave those to folk who are paid to worry about them. :)
[23:21:17] *** Quits: TheAthlete (~TheAthlet@176.96.230.85) (Quit: Connection closed)
[23:27:26] *** Joins: monkey_ (~user@181.114.17.106)
[23:56:32] *** Quits: Geth (~LizBot@ipv4-wenzperl.connected.by.freedominter.net) (Remote host closed the connection)
[23:56:40] *** Joins: Geth (~LizBot@ipv4-wenzperl.connected.by.freedominter.net)
[23:57:00] *** Quits: atroxaper (~atroxaper@178.49.194.113) ()
