[00:00:39] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68)
[00:05:06] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:05:23] *** Quits: phaleth (~user@user/phaleth) (Quit: phaleth)
[00:06:36] *** Quits: 073AAHEAI (~sven@dslb-084-057-144-135.084.057.pools.vodafone-ip.de) (Quit: Konversation terminated!)
[00:07:06] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[00:07:30] *** Joins: sgn (~sgn@user/sgn)
[00:08:45] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[00:09:06] *** Joins: sgn (~sgn@user/sgn)
[00:13:54] *** Joins: _w1ntermute_ (~sven@dslb-084-057-144-135.084.057.pools.vodafone-ip.de)
[00:18:13] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[00:18:38] *** Joins: sgn (~sgn@user/sgn)
[00:19:16] *** Quits: mizi (~mizi@user/mizi) (Ping timeout: 256 seconds)
[00:19:31] *** Quits: chgr (~ek@nat-91-137-25-18.net.encoline.de) (Quit: WeeChat 3.3)
[00:34:43] *** Joins: trafficjam (~qubes@119.17.42.59)
[00:38:31] *** Joins: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68)
[00:38:49] *** Quits: _w1ntermute_ (~sven@dslb-084-057-144-135.084.057.pools.vodafone-ip.de) (Quit: Konversation terminated!)
[00:43:25] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[00:43:51] *** Joins: sgn (~sgn@user/sgn)
[00:47:26] *** Quits: infinityfye (~infinityf@41.45.233.27) (Quit: Leaving)
[00:48:35] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[00:48:57] *** Joins: sgn (~sgn@user/sgn)
[00:50:26] *** Quits: trafficjam (~qubes@119.17.42.59) (Ping timeout: 256 seconds)
[00:57:01] *** Quits: samgranieri (~samgranie@user/samgranieri) (Ping timeout: 240 seconds)
[00:58:03] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[00:58:30] *** Joins: sgn (~sgn@user/sgn)
[00:59:30] *** Quits: yauhsien (~yauhsien@118-167-43-90.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[01:02:10] *** Joins: trafficjam (~qubes@119.17.42.59)
[01:05:15] *** Joins: yauhsien (~yauhsien@61-231-29-214.dynamic-ip.hinet.net)
[01:16:34] *** Joins: sgn_ (~sgn@user/sgn)
[01:16:35] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[01:17:25] *** Quits: sgn_ (~sgn@user/sgn) (Read error: Connection reset by peer)
[01:17:51] *** Joins: sgn (~sgn@user/sgn)
[01:26:10] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[01:26:36] *** Joins: sgn (~sgn@user/sgn)
[01:28:11] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[01:28:35] *** Joins: sgn (~sgn@user/sgn)
[01:31:13] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[01:31:28] *** Joins: sgn (~sgn@user/sgn)
[01:35:31] *** Quits: rgrinberg (~textual@2806:265:5401:8cd:18b:fa2e:c948:1d68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:36:18] *** Quits: antares80 (~antares80@216.147.105.40) (Quit: WeeChat 3.4)
[01:40:52] *** Quits: mahmutov_ (~mahmutov@5.176.2.142) (Ping timeout: 256 seconds)
[01:50:02] *** Joins: Guest43 (~Guest43@node-1w7jr9qtykj7d5sd5v6g2rhlj.ipv6.telus.net)
[01:50:37] *** Quits: Guest43 (~Guest43@node-1w7jr9qtykj7d5sd5v6g2rhlj.ipv6.telus.net) (Client Quit)
[01:53:30] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[01:53:57] *** Joins: sgn (~sgn@user/sgn)
[02:03:14] *** Joins: nfritch (~nfritch@ip174-74-21-61.om.om.cox.net)
[02:19:26] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[02:19:40] *** Joins: rgrinberg (~textual@2806:101e:7:b1fc:11d3:8083:cd07:346c)
[02:19:49] *** Joins: sgn (~sgn@user/sgn)
[02:21:17] *** Quits: cdegroot_ (~quassel@209.5.238.85) (Ping timeout: 268 seconds)
[02:25:42] <Mayel[m]> hoppity: here's how I do it with Taggify js lib https://github.com/bonfire-networks/bonfire-app/blob/main/assets/js/input_select.js 
[02:26:32] *** Quits: nfritch (~nfritch@ip174-74-21-61.om.om.cox.net) (Quit: Leaving)
[02:27:33] <Mayel[m]> IIRC select2 requires jquery which I'd rather not include, sticking with alpine.js and slim self contained libs 
[02:28:51] <hoppity> Mayel[m]: thank you very much, I will look at your code
[02:39:01] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 240 seconds)
[02:44:22] *** Quits: rgrinberg (~textual@2806:101e:7:b1fc:11d3:8083:cd07:346c) (Remote host closed the connection)
[02:45:09] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[02:45:27] *** Joins: sgn (~sgn@user/sgn)
[02:45:54] *** Joins: rgrinberg (~textual@2806:101e:7:b1fc:11d3:8083:cd07:346c)
[03:00:28] <Mayel[m]> I've also done it with LV-only, but UX people tell me the behaviour is much smoother with JS unfortunately 
[03:05:50] <Mayel[m]> also note here the data is coming from a <select> (which acts as a fallback for accessibility or clients without JS) and the idea is to hook into LV to populate the select further if you need server-based autocomplete (like if you have more data than is reasonable to include on page load) rather than needing an API
[03:16:32] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[03:16:55] *** Joins: sgn (~sgn@user/sgn)
[03:20:36] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 256 seconds)
[03:21:48] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[03:22:10] *** Joins: sgn (~sgn@user/sgn)
[03:41:19] <hoppity> Mayel[m]: How have you achieved this with LV only?
[03:49:33] *** Joins: livoreno (~livoreno@user/notzmv)
[03:57:40] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[03:58:05] *** Joins: sgn (~sgn@user/sgn)
[03:58:51] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[03:59:11] *** Joins: sgn (~sgn@user/sgn)
[04:01:29] <Mayel[m]> hoppity: the code is out of date as it was implemented in an older version of Surface, but if it can help: https://github.com/bonfire-networks/bonfire_ui_social/tree/main/lib/web/components/multiselect
[04:03:00] *** Quits: rgrinberg (~textual@2806:101e:7:b1fc:11d3:8083:cd07:346c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:05:49] *** Joins: notzmv (~zmv@user/notzmv)
[04:06:57] *** Quits: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net) (Remote host closed the connection)
[04:07:30] *** Joins: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net)
[04:12:01] *** Quits: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net) (Ping timeout: 256 seconds)
[04:16:52] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[04:17:13] *** Joins: sgn (~sgn@user/sgn)
[04:21:17] *** Joins: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net)
[04:22:10] <hoppity> Mayel[m]: thank you
[04:30:42] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[04:30:57] *** Joins: sgn (~sgn@user/sgn)
[04:38:57] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[04:39:12] *** Joins: sgn (~sgn@user/sgn)
[04:47:48] *** Joins: bingbonks[m] (~bingbonks@2001:470:69fc:105::1:667c)
[04:53:29] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:80ee:56b1:c7cc:d16d) (Quit: Textual IRC Client: www.textualapp.com)
[04:56:10] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[04:56:37] *** Joins: sgn (~sgn@user/sgn)
[05:00:06] *** Joins: cdegroot (~quassel@209.5.238.85)
[05:04:28] *** Quits: cdegroot (~quassel@209.5.238.85) (Read error: Connection reset by peer)
[05:05:20] *** Joins: cdegroot (~quassel@209.5.238.85)
[05:20:20] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[05:20:45] *** Joins: sgn (~sgn@user/sgn)
[05:32:41] *** Quits: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net) (Remote host closed the connection)
[05:33:14] *** Joins: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net)
[05:33:54] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[05:34:15] *** Joins: sgn (~sgn@user/sgn)
[05:35:02] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[05:35:26] *** Joins: sgn (~sgn@user/sgn)
[05:37:35] *** Quits: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net) (Ping timeout: 256 seconds)
[05:37:44] *** Quits: trafficjam (~qubes@119.17.42.59) (Ping timeout: 256 seconds)
[06:05:57] *** Quits: cdegroot (~quassel@209.5.238.85) (Ping timeout: 240 seconds)
[06:06:07] *** Quits: humbertowoody (~humbertow@189.131.31.180) (Read error: Connection reset by peer)
[06:06:40] *** Joins: monkeycoder (~monkey@183.171.107.43)
[06:07:20] *** Joins: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net)
[06:07:51] *** Joins: humbertowoody (~humbertow@189.131.31.180)
[06:12:22] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[06:13:28] *** Joins: sgn (~sgn@user/sgn)
[06:15:16] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[06:15:26] *** Joins: sgn (~sgn@user/sgn)
[06:28:46] *** Joins: rgrinberg (~textual@187.223.71.231)
[06:35:14] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[06:35:33] *** Joins: sgn (~sgn@user/sgn)
[06:37:39] *** Quits: jushur (~human@user/jushur) (Quit:  ¯\_(ツ)_/¯)
[06:40:55] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[06:41:20] *** Joins: sgn (~sgn@user/sgn)
[06:49:05] <monkeycoder> is it a good idea for someone who just started programming to choose Elixir as main language for startup? what possible issues will one face in foreseeable future?
[06:54:07] *** Quits: henry40408 (~henry4040@175.181.188.127) (Remote host closed the connection)
[06:54:32] *** Joins: henry40408 (~henry4040@175.181.188.127)
[06:56:35] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[06:57:32] *** Joins: sgn (~sgn@user/sgn)
[07:04:55] *** Quits: humbertowoody (~humbertow@189.131.31.180) (Read error: Connection reset by peer)
[07:05:00] *** Quits: monkeycoder (~monkey@183.171.107.43) (Ping timeout: 256 seconds)
[07:06:39] *** Joins: humbertowoody (~humbertow@189.131.31.180)
[07:08:50] <davic> rawtaz: not from what I can see but it does feel a bit iffy from my pov. Why would me putting codes into my repo ban me from my repo unless it's dmca:able? They should consider npmjs and github two different projects. I feel like they banned him on npmjs which became global
[07:10:37] *** Quits: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net) (Ping timeout: 240 seconds)
[07:11:30] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[07:11:55] *** Joins: sgn (~sgn@user/sgn)
[07:14:30] *** Joins: cdegroot (~quassel@209.5.238.85)
[07:15:12] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:15:18] *** Joins: trafficjam (~qubes@118.127.126.178)
[07:16:14] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:17:34] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[07:17:40] *** Joins: sgn_ (~sgn@user/sgn)
[07:25:40] *** Joins: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net)
[07:27:40] *** Quits: trafficjam (~qubes@118.127.126.178) (Ping timeout: 256 seconds)
[07:29:30] *** Joins: trafficjam (~qubes@118.127.126.178)
[07:30:59] *** Joins: yauhsien_ (~yauhsien@61-231-29-214.dynamic-ip.hinet.net)
[07:31:00] *** Quits: yauhsien (~yauhsien@61-231-29-214.dynamic-ip.hinet.net) (Read error: Connection reset by peer)
[07:41:17] *** Quits: sgn_ (~sgn@user/sgn) (Read error: Connection reset by peer)
[07:41:35] *** Joins: sgn (~sgn@user/sgn)
[07:50:09] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[07:50:30] *** Joins: sgn (~sgn@user/sgn)
[07:51:40] <trafficjam> hey guys
[08:00:20] *** Quits: srfsh (~srfsh@user/srfsh) (Remote host closed the connection)
[08:00:29] *** Joins: axwzl (~axwzl@61-231-190-126.dynamic-ip.hinet.net)
[08:00:32] *** Joins: srfsh (~srfsh@user/srfsh)
[08:06:09] *** Quits: axwzl (~axwzl@61-231-190-126.dynamic-ip.hinet.net) (Quit: Client closed)
[08:17:36] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[08:18:28] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[08:25:28] *** Quits: yauhsien_ (~yauhsien@61-231-29-214.dynamic-ip.hinet.net) (Remote host closed the connection)
[08:26:19] *** Joins: yauhsien (~yauhsien@61-231-29-214.dynamic-ip.hinet.net)
[08:32:50] *** Quits: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net) (Ping timeout: 256 seconds)
[08:33:23] *** Joins: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net)
[08:35:58] *** Quits: yauhsien (~yauhsien@61-231-29-214.dynamic-ip.hinet.net) (Remote host closed the connection)
[08:36:39] *** Joins: yauhsien (~yauhsien@61-231-29-214.dynamic-ip.hinet.net)
[08:37:12] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[08:37:32] *** Joins: sgn (~sgn@user/sgn)
[08:38:44] *** Joins: monkeycoder (~monkey@183.171.107.43)
[08:39:30] *** Joins: mexen (uid495612@user/mexen)
[08:41:25] <trafficjam> what's the idiomatic way of checking a list of maps for a specific key, `target = %{key: "foo"}; list = [%{key: "foo"}, %{key: "bar"}];`
[08:42:43] <trafficjam> specifically, i want to check if a map with %{key: "foo"} is contained in the list `list` 
[08:43:52] <hwrd> trafficjam Enum.any?(list, fn x -> Map.has_key?(x, "key") end) is what I'd do
[08:44:11] <hwrd> wait, you want to know if the key exists, or the key value pair is there?
[08:44:29] <trafficjam> ah yeah i also want to return the matched object
[08:44:34] <trafficjam> s/object/map
[08:45:13] <trafficjam> got it
[08:45:35] <hwrd> Enum.find, if you want to return the map
[08:45:36] <trafficjam> Enum.find(list, &(&1.key == target.key))
[08:45:51] <hwrd> yeah, that's good
[08:46:29] *** Quits: yauhsien (~yauhsien@61-231-29-214.dynamic-ip.hinet.net) (Remote host closed the connection)
[08:47:09] *** Joins: yauhsien (~yauhsien@61-231-29-214.dynamic-ip.hinet.net)
[08:50:15] <trafficjam> thanks man
[08:50:16] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[08:50:37] *** Joins: sgn (~sgn@user/sgn)
[08:51:25] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[08:54:58] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[08:56:59] *** Quits: yauhsien (~yauhsien@61-231-29-214.dynamic-ip.hinet.net) (Remote host closed the connection)
[08:57:40] *** Joins: yauhsien (~yauhsien@61-231-29-214.dynamic-ip.hinet.net)
[08:58:26] <trafficjam> another question, if i'm returning a :ok | :error, and i code something like `{:ok, data} = my_app()` when `my_app()` actually returns `{:error, reason}`, should this raise a match error?
[08:58:43] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[08:59:08] *** Joins: sgn (~sgn@user/sgn)
[09:00:28] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[09:00:50] *** Joins: sgn (~sgn@user/sgn)
[09:03:40] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[09:03:45] *** Joins: sgn_ (~sgn@user/sgn)
[09:06:16] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 256 seconds)
[09:07:29] *** Quits: yauhsien (~yauhsien@61-231-29-214.dynamic-ip.hinet.net) (Remote host closed the connection)
[09:08:09] *** Joins: yauhsien (~yauhsien@61-231-29-214.dynamic-ip.hinet.net)
[09:12:02] <hwrd> could you say that again?
[09:16:05] *** Quits: sgn_ (~sgn@user/sgn) (Read error: Connection reset by peer)
[09:16:10] *** Joins: sgn (~sgn@user/sgn)
[09:18:00] <Nicd> trafficjam: yes, it will raise a match error
[09:19:15] <trafficjam> thanks
[09:20:15] <trafficjam> hwrd: so for example when a function returns a {:ok, _res} or {:error, reason} tuple, but you match on the wrong tuple, i was wondering if it should raise a match error
[09:20:51] *** Quits: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 256 seconds)
[09:20:59] <hwrd> ah I see what you mean
[09:26:14] *** Joins: phaleth (~user@user/phaleth)
[09:36:39] <trafficjam> Nicd: is there a standard format for errors in elixir?
[09:37:10] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[09:37:35] <Nicd> `{:error, any()}` or an exception, not more than that really
[09:37:47] *** Quits: yauhsien (~yauhsien@61-231-29-214.dynamic-ip.hinet.net) (Read error: Connection reset by peer)
[09:38:17] <trafficjam> for the string i mean, like "#{reason_title}: #{reason_description}" sort of thing
[09:38:19] *** Joins: yauhsien (~yauhsien@61-231-29-214.dynamic-ip.hinet.net)
[09:38:30] <trafficjam> or does it not really matter
[09:39:36] <Nicd> there's no convention that I know of
[09:39:49] <trafficjam> ok thanks
[09:41:49] *** Quits: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net) (Ping timeout: 256 seconds)
[09:44:22] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[09:44:46] *** Joins: sgn (~sgn@user/sgn)
[09:55:05] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[09:55:30] *** Joins: sgn (~sgn@user/sgn)
[09:57:51] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[09:58:16] *** Joins: sgn (~sgn@user/sgn)
[10:10:07] *** Joins: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net)
[10:14:13] *** Quits: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net) (Ping timeout: 240 seconds)
[10:19:45] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[10:19:51] *** Joins: sgn_ (~sgn@user/sgn)
[10:22:13] *** Quits: monkeycoder (~monkey@183.171.107.43) (Ping timeout: 240 seconds)
[10:30:23] *** Joins: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net)
[10:50:01] *** Joins: infinityfye (~infinityf@41.45.233.27)
[11:06:11] *** Quits: sgn_ (~sgn@user/sgn) (Read error: Connection reset by peer)
[11:06:14] <trafficjam> anyone know why i'm getting this error for valid json?
[11:06:34] <trafficjam> iex(38)> Jason.decode!(x)
[11:06:35] *** Joins: sgn (~sgn@user/sgn)
[11:06:36] <trafficjam> ** (Jason.DecodeError) unexpected byte at position 189: 0x7B ('{')
[11:07:19] <trafficjam> i pasted the "{\"key\":\"foo\"}" (not actual json) into a json validator and it said it was valid
[11:09:27] <Nicd> show more context
[11:09:45] <Nicd> but it's not valid JSON you're pasting, most likely
[11:12:41] <trafficjam> Nicd: ah yeah it included newline characters in there, which i presume aren't json. Not sure why these validators said it was valid then
[11:13:55] <Nicd> maybe a difference with quotes, escaping, etc.
[11:20:26] <trafficjam> yeah silly stuff, all working now, thanks
[11:20:41] <trafficjam> is there a way to pipe a string to a string formating functin?
[11:21:09] <trafficjam> e.g. `x = string; x |> "#{x}"`
[11:22:39] <Nicd> `x |> then(&("foo: #{&1}"))`
[11:23:57] <trafficjam> ah of course, thanks
[11:31:45] *** Quits: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net) (Ping timeout: 256 seconds)
[11:32:12] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[11:33:11] *** Joins: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net)
[11:34:20] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[11:34:33] *** Joins: sgn (~sgn@user/sgn)
[11:37:25] *** Quits: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net) (Ping timeout: 240 seconds)
[11:55:24] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[11:55:30] *** Joins: sgn_ (~sgn@user/sgn)
[12:01:42] *** Quits: rgrinberg (~textual@187.223.71.231) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:03:38] *** Joins: fub (uid190747@id-190747.ilkley.irccloud.com)
[12:06:49] *** Quits: sgn_ (~sgn@user/sgn) (Read error: Connection reset by peer)
[12:07:14] *** Joins: sgn (~sgn@user/sgn)
[12:09:01] *** Joins: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net)
[12:17:26] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[12:17:51] *** Joins: sgn (~sgn@user/sgn)
[12:18:13] *** Quits: yauhsien (~yauhsien@61-231-29-214.dynamic-ip.hinet.net) (Remote host closed the connection)
[12:18:54] *** Joins: yauhsien (~yauhsien@61-231-29-214.dynamic-ip.hinet.net)
[12:24:21] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[12:24:46] *** Joins: sgn (~sgn@user/sgn)
[12:27:11] *** Quits: Tongir (~tangmang@2403-580f-f5--b53d-1d19-7a58-e08b.ip6.aussiebb.net) (Remote host closed the connection)
[12:28:43] *** Quits: yauhsien (~yauhsien@61-231-29-214.dynamic-ip.hinet.net) (Remote host closed the connection)
[12:29:24] *** Joins: yauhsien (~yauhsien@61-231-29-214.dynamic-ip.hinet.net)
[12:33:01] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[12:33:24] *** Joins: sgn (~sgn@user/sgn)
[12:36:33] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[12:36:56] *** Joins: sgn (~sgn@user/sgn)
[12:38:09] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[12:38:31] *** Joins: sgn (~sgn@user/sgn)
[12:39:13] *** Quits: yauhsien (~yauhsien@61-231-29-214.dynamic-ip.hinet.net) (Remote host closed the connection)
[12:39:54] *** Joins: yauhsien (~yauhsien@61-231-29-214.dynamic-ip.hinet.net)
[12:41:10] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[12:41:32] *** Joins: sgn (~sgn@user/sgn)
[12:43:03] *** Joins: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[12:44:16] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[12:44:40] *** Joins: sgn (~sgn@user/sgn)
[12:56:22] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[12:56:34] *** Joins: sgn (~sgn@user/sgn)
[12:58:39] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[12:59:04] *** Joins: sgn (~sgn@user/sgn)
[13:10:57] *** Quits: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net) (Ping timeout: 240 seconds)
[13:12:33] *** Quits: trafficjam (~qubes@118.127.126.178) (Quit: trafficjam)
[13:36:34] *** Quits: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 256 seconds)
[13:40:05] *** Joins: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net)
[13:44:55] *** Quits: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net) (Ping timeout: 256 seconds)
[13:54:42] *** Quits: sgn (~sgn@user/sgn) (Ping timeout: 256 seconds)
[13:57:36] *** Joins: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net)
[13:59:36] *** Quits: yauhsien (~yauhsien@61-231-29-214.dynamic-ip.hinet.net) (Remote host closed the connection)
[14:00:16] *** Joins: yauhsien (~yauhsien@61-231-29-214.dynamic-ip.hinet.net)
[14:03:29] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:a92f:4d2f:4882:4db9)
[14:13:33] *** Joins: trafficjam (~qubes@118.127.126.178)
[14:38:41] <trafficjam> hey guys, if i'm benchmarking `ab -n 100000 -c 1000` on a 2GB digital ocean vps, what would the bottleneck most likely be for a crud app?
[14:39:18] <Nicd> the database and network
[14:39:21] <trafficjam> cpu / memory didn't seem to change at all during this time (which makes me wonder if my phoenix backend was even being hit honestly)
[14:39:44] <trafficjam> yeah i presumed it would be postgres, wasn't sure how to verify this though
[14:42:30] <Nicd> follow the load on the system while testing with something like htop
[14:42:35] *** Joins: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[14:44:03] <trafficjam> i did, but htop showed no real change to cpu or memory usage
[14:46:11] <Nicd> are you getting good responses to ab?
[14:46:37] *** Quits: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net) (Ping timeout: 240 seconds)
[14:46:54] <Nicd> so you know it's actually hitting the Phoenix server
[14:48:02] <trafficjam> for that ab command i'm getting a lot of this response:
[14:48:03] <trafficjam> 139879525611392:error:140E0197:SSL routines:SSL_shutdown:shutdown while in init:../ssl/ssl_lib.c:2094:\nSSL handshake failed (5).\mSSL read failed (1) - closing connection
[14:48:56] <Nicd> looks like the connections aren't working then
[14:51:41] <trafficjam> just not sure why
[14:52:08] <trafficjam> what is normally the bottleneck for a relatively simple crud app at that scale?
[14:52:18] <trafficjam> (and running on that particular vps)
[14:53:37] <Nicd> the DB access
[14:57:44] <Nicd> if you are benching from outside a local network, then the network may become an issue also
[14:59:37] *** Quits: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net) (Ping timeout: 240 seconds)
[15:07:17] <phaleth> trafficjam: assuming you're not running ab locally, chances are you are spamming the server too hard, first try something like `ab -n 100 -c 10`
[15:09:11] <trafficjam> phaleth: spamming what though exactly, the vps?
[15:09:40] <trafficjam> ab -n 1000 -c 100 works fine, im just trying to figure out why -n 100000 -c 1000 doesn't
[15:11:09] <phaleth> yeah, I think you're not running ab from the vps but from outside right?
[15:11:58] <phaleth> ab doesn't work well over WAN and against HTTPS server, ab is meant to be used locally over HTTP
[15:13:54] *** Joins: grundrausch3n (~grundraus@p200300e9ef0901000ca052d76a4f18d0.dip0.t-ipconnect.de)
[15:15:01] <grundrausch3n> Hello everyone, I have a question concerning Config.Provider. Do I get the docs right, that the config providers added to the mix config for the release are only executed when starting a release, but not during development? So having a different behaviour than `release.exs`?
[15:16:43] *** Joins: pera (~pera@user/pera)
[15:19:07] <Nicd> `releases.exs` is only evaluated in releases
[15:19:19] <Nicd> `runtime.exs` is also evaluated in development
[15:21:28] <trafficjam> phaleth: i don't even think my app is being reached lol
[15:22:03] <Nicd> grundrausch3n: I'm unsure about config providers, have you tested it? my impression is that they're only evaluated in releases
[15:24:43] <grundrausch3n> Nicd I still have to verify the behaviour after the release build, but it does not seem to be read in the dev environment. I meant `runtime.exs` instead of `release.exs`, my bad
[15:25:04] <Nicd> would make sense since it's configured in the releases key in mix.exs
[15:25:37] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[15:26:15] <Nicd> grundrausch3n: what do you want to do with the provider?
[15:28:23] *** Joins: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net)
[15:35:04] <phaleth> trafficjam: test with curl first
[15:35:22] <phaleth> actually, always test with curl first
[15:39:49] <grundrausch3n> Nicd read in some config values like credentials and urls of other systems from a YAML file. The operations people are not too familiar with Elixir and it eases templating in k8s a bit. Further I wanted to make sure that certain values are set and have certain properties like length of certain keys.
[15:40:43] <grundrausch3n> Being able to also use the files in development would though make it easier to remove the credentials from the repo
[15:42:29] <trafficjam> phaleth: i tried with ab and it wasn't hitting phoenix at all
[15:42:53] <trafficjam> it's next.js spa, so that explains why
[15:43:44] <Nicd> you have to hit the API paths, not the HTML/JS pages
[15:43:52] <Nicd> ab isn't going to load your JS to execute API calls
[15:46:55] <phaleth> so, there are two apps then? one node app and one phoenix app
[15:47:37] <phaleth> just make sure to try with curl from the vps itself first, and then from outside
[15:48:25] <trafficjam> Nicd: yeah i'm too used to buildig multi-page apps, didn't click immiediately
[15:48:52] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:48:58] <trafficjam> phaleth: not node, next.js (javascript), and then an absinthe backend
[15:49:38] <phaleth> next.js is a server side framework, I guess you mean reactjs then
[15:52:18] <OliverMT> hum
[15:52:28] <OliverMT> I have a stacktrace that says it errors out here: https://github.com/elixir-lang/elixir/blob/v1.13.1/lib/elixir/lib/enum.ex#L1582
[15:52:33] <OliverMT> I have verified the versions match up
[15:52:37] <OliverMT> what can cause that?
[15:53:28] <trafficjam> phaleth: no it's a client side framework built with react
[15:55:12] <phaleth> trafficjam: ok, cool
[16:33:56] *** Quits: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net) (Ping timeout: 256 seconds)
[16:39:17] *** Quits: srfsh (~srfsh@user/srfsh) (Remote host closed the connection)
[16:39:31] *** Joins: srfsh (~srfsh@user/srfsh)
[17:12:32] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[17:20:52] *** Joins: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net)
[17:26:37] *** Quits: cdegroot (~quassel@209.5.238.85) (Ping timeout: 240 seconds)
[17:34:49] *** Joins: acorello[m] (~acorellom@2001:470:69fc:105::1:66f0)
[18:15:13] *** Quits: hoppity (~hoppity@S0106b4fbe4e5da7b.cg.shawcable.net) (Ping timeout: 256 seconds)
[18:21:36] *** Joins: gitgood (~gitgood@cpc104690-belf11-2-0-cust365.2-1.cable.virginm.net)
[18:38:13] *** Joins: notapenguin (~ryu@187.3.254.107)
[18:38:26] *** Joins: mizi (~mizi@user/mizi)
[18:41:24] *** Joins: Sgeo (~Sgeo@user/sgeo)
[18:44:43] *** Joins: rgrinberg (~textual@2806:101e:7:445d:e1a3:1c4d:1ca5:ce95)
[18:52:08] *** Joins: Snyp (~Snyp@49.207.207.174)
[18:56:00] *** Joins: hoppity (~hoppity@66.222.130.38)
[18:57:21] *** Quits: hoppity (~hoppity@66.222.130.38) (Remote host closed the connection)
[18:58:03] *** Joins: hoppity (~hoppity@66.222.130.38)
[19:03:24] *** Quits: fub (uid190747@id-190747.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[19:26:13] *** Quits: mizi (~mizi@user/mizi) (Ping timeout: 240 seconds)
[19:28:23] *** Joins: mizi (~mizi@user/mizi)
[19:58:02] *** Quits: yauhsien (~yauhsien@61-231-29-214.dynamic-ip.hinet.net) (Remote host closed the connection)
[19:58:53] *** Joins: yauhsien (~yauhsien@61-231-29-214.dynamic-ip.hinet.net)
[20:08:48] *** Quits: Snyp (~Snyp@49.207.207.174) (Quit: Textual IRC Client: www.textualapp.com)
[20:15:27] *** Joins: mahmutov_ (~mahmutov@5.176.2.142)
[20:17:34] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:a92f:4d2f:4882:4db9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:22:43] *** Quits: trafficjam (~qubes@118.127.126.178) (Ping timeout: 256 seconds)
[20:43:54] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:259f:1db:61a3:46e1)
[20:44:29] *** Quits: rgrinberg (~textual@2806:101e:7:445d:e1a3:1c4d:1ca5:ce95) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:48:13] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:259f:1db:61a3:46e1) (Ping timeout: 240 seconds)
[20:52:19] *** Joins: humberto1 (~humbertow@189.131.31.180)
[20:54:37] *** Quits: humbertowoody (~humbertow@189.131.31.180) (Ping timeout: 240 seconds)
[20:56:42] *** Quits: grundrausch3n (~grundraus@p200300e9ef0901000ca052d76a4f18d0.dip0.t-ipconnect.de) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:57:30] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[21:08:38] *** Quits: hoppity (~hoppity@66.222.130.38) (Remote host closed the connection)
[21:09:11] *** Joins: hoppity (~hoppity@66.222.130.38)
[21:11:29] *** Quits: hoppity (~hoppity@66.222.130.38) (Remote host closed the connection)
[21:11:43] *** Joins: hoppity (~hoppity@66.222.130.38)
[21:19:57] *** Quits: infinityfye (~infinityf@41.45.233.27) (Quit: Leaving)
[21:30:37] *** Quits: henry40408 (~henry4040@175.181.188.127) (Remote host closed the connection)
[21:31:03] *** Joins: henry40408 (~henry4040@175.181.188.127)
[21:43:17] *** Quits: mizi (~mizi@user/mizi) (Ping timeout: 250 seconds)
[21:45:13] *** Joins: mizi (~mizi@user/mizi)
[21:48:48] *** Quits: pera (~pera@user/pera) (Quit: leaving)
[21:48:48] *** Quits: hoppity (~hoppity@66.222.130.38) (Remote host closed the connection)
[21:49:21] *** Joins: hoppity (~hoppity@66.222.130.38)
[21:54:06] *** Quits: hoppity (~hoppity@66.222.130.38) (Ping timeout: 256 seconds)
[21:59:09] *** Joins: hoppity (~hoppity@66.222.130.38)
[22:18:54] *** Joins: chgr (~ek@nat-91-137-25-18.net.encoline.de)
[22:20:37] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 240 seconds)
[22:26:24] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[22:34:15] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[22:34:37] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 240 seconds)
[22:35:43] *** Joins: arathunku[m] (~arathunku@2001:470:69fc:105::1:746)
[22:35:57] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[22:41:13] *** Quits: hoppity (~hoppity@66.222.130.38) (Remote host closed the connection)
[22:49:27] *** Joins: robert_ (~robert@136.49.193.254)
[22:50:22] *** Joins: hoppity (~hoppity@66.222.130.38)
[22:53:30] <robert_> i have a payload with a known limited set keys entering my application as JSON. i would like to convert the payload to a defined struct. i see a comment on SO from josevalim about there being a safer way than converting the keys to_existing_atoms. anyone know what method he was alluding too?
[22:55:32] <PeterMarreck[m]> https://hexdocs.pm/elixir/1.12/String.html#to_existing_atom/1
[22:56:19] <PeterMarreck[m]> Basically it restricts conversion of string to only existing atoms, so that you avoid the security issue of... I can't remember the name of it but "atom/memory exhaustion" or something like that
[22:57:00] *** Quits: mahmutov_ (~mahmutov@5.176.2.142) (Ping timeout: 256 seconds)
[22:57:12] *** Joins: mexen (uid495612@user/mexen)
[22:57:19] <robert_> yes that is the method that seems to be the most used as a solution (memory leak being the concern). however it looked like jose was implying there is a safer solution.
[22:58:26] <PeterMarreck[m]> When I use this function, what I usually do is "introduce" the whitelisted atoms to the compiler prior to this (like as a module attribute) so that they're at least populated already in memory and won't throw errors on to_existing_atom ... the runtime creates them as it sees them
[22:59:41] <PeterMarreck[m]> I think the only safer solution is just keeping them as strings, in which case they cause a bit more overhead but get garbage-collected.
[23:00:22] *** Quits: hoppity (~hoppity@66.222.130.38) (Remote host closed the connection)
[23:01:01] *** Joins: hoppity (~hoppity@66.222.130.38)
[23:01:19] <PeterMarreck[m]> I tend to follow hexagonal design and inside the hexagon (the model) I generally use symbols when dealing with a set of whitelisted possible values with semantic meaning, and outside that (the stuff dealing with I/O) I generally use strings
[23:01:45] *** Joins: grundrausch3n (~grundraus@p200300e9ef0901000ca052d76a4f18d0.dip0.t-ipconnect.de)
[23:02:49] <PeterMarreck[m]> * semantic meaning (an enumerated type), and
[23:03:06] <robert_> makes sense. good idea for implementing the whitelist. appreciate the discussion!
[23:04:55] <PeterMarreck[m]> I also usually have some helper functions at the boundary that help switch back and forth between the internal symbol representation and the external stringified representation (such as a home style represented as :cape_cod internally but "Cape Cod" externally...)
[23:05:21] *** Quits: hoppity (~hoppity@66.222.130.38) (Ping timeout: 256 seconds)
[23:05:44] *** Joins: hoppity (~hoppity@66.222.130.38)
[23:08:50] <robert_> for sure this would be one part of the implementation of a function that transforms data entering the system.
[23:25:36] *** Quits: hoppity (~hoppity@66.222.130.38) (Changing host)
[23:25:36] *** Joins: hoppity (~hoppity@user/hoppity)
