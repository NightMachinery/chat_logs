[00:05:12] <rpav> "ld: final link failed: Nonrepresentable section on output"
[00:05:44] <rpav> i love all this setup.py bullshit that can never manage to configure anything right
[00:07:19] <Friithian> python_irl
[00:11:31] *** Quits: peeps[zen] (~peepsalot@openscad/peepsalot) (Ping timeout: 256 seconds)
[00:14:13] *** Quits: proller (~p@2a02:6b8:b081:a428::1:25) (Ping timeout: 240 seconds)
[00:19:10] *** Joins: proller (~p@62.76.32.253)
[00:19:27] *** Quits: Burgundy (~yomon@79.115.213.171) (Ping timeout: 256 seconds)
[00:24:05] <hnOsmium0001[m]> at least it's not some build.sh bullshit that tries to invoke g++ manually
[00:26:18] *** Quits: magla (~gelignite@55d41339.access.ecotel.net) (Quit: Stay safe!)
[00:26:30] *** Joins: Burgundy (~yomon@79.115.213.171)
[00:26:55] <Friithian> well, setup.py does use python with does make it pretty bad to start
[00:28:50] *** Joins: chozorho (~chozorho@2601:146:300:c30::5b28)
[00:31:57] *** Quits: Tokamak (~Tokamak@166.205.152.22) (Ping timeout: 240 seconds)
[00:33:55] *** Joins: Tokamak (~Tokamak@166.205.152.22)
[00:34:06] <LordKalma> setup.py is finnicky
[00:34:17] <LordKalma> you have to know how to write it well
[00:34:19] <LordKalma> which nobody does
[00:34:26] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 260 seconds)
[00:34:30] <LordKalma> that's why they introduced a script-less version
[00:34:35] <LordKalma> purely declarative file format
[00:37:14] <sho0p> is there an actually good build system though?
[00:37:19] <LordKalma> no
[00:37:27] <PJBoy> MSBuild
[00:37:31] <sho0p> strange right
[00:37:33] <Friithian> >microsoft
[00:37:41] <LordKalma> sho0p, not really
[00:37:47] <LordKalma> everybody develops for themselves
[00:37:50] <PJBoy> (not to be taken seriously)
[00:37:53] <sho0p> we figured as a species how to fucking programming make sense, but not how to build i t
[00:37:57] <LordKalma> if you look closely enough there isn't a good anything anywhere
[00:38:25] <LordKalma> C++ fucking sucks, python sucks, cmake sucks, Qt sucks, boost sucks, every-single-thing I try sucks
[00:38:30] <LordKalma> nothing does what *you* want
[00:38:39] <PJBoy> there's always rust
[00:38:42] <sho0p> i have faith in the c++ standard, that is a thought through thing that a mortal such as me is not even qualified to have an opinion about
[00:38:49] <PJBoy> and haskell
[00:38:56] <sho0p> but build systems are always shit
[00:39:05] <sho0p> cmake is the worst
[00:39:11] <LordKalma> cmake is the least bad
[00:39:14] <sho0p> idk, kinda starting to like it
[00:39:23] <sho0p> but it's a fucking mess the way it's used
[00:39:28] <LordKalma> yap
[00:39:32] <LordKalma> nobody writes it properly
[00:39:36] <Friithian> I like cmake
[00:39:40] <PJBoy> that's C++ for me
[00:39:42] <LordKalma> READ THE CRAIG SCOTT'S BOOK
[00:39:47] <PJBoy> I like C++, but I hate how everyone else uses it
[00:40:09] <PJBoy> which implies I'm in the wrong, but...
[00:40:15] <sho0p> yeah but that's at least something you can teach them about right PJBoy
[00:40:20] <sho0p> cause it makes sense
[00:40:30] <sho0p> build systems dont make sense
[00:40:32] <PJBoy> kinda
[00:40:54] <PJBoy> whether it's build system or programming language, you can usually easily teach people that want to learn and can't possibly teach people that don't
[00:41:16] <PJBoy> and I think not many people want to learn build systems
[00:41:42] <PJBoy> at least that's a feeling I can relate to
[00:41:46] <LordKalma> yes
[00:41:49] <LordKalma> I think you got it
[00:41:57] <LordKalma> nobody likes building build code
[00:42:05] <LordKalma> I for once, actually enjoy writing build code
[00:42:07] <sho0p> well, I spend alot of time setting the build system up when i start a new project
[00:42:18] <sho0p> but I dont understand what I'm doing, I really try though
[00:42:27] <Friithian> someone do the mr incredibles meme with Writing Code then Building Code
[00:42:29] <sho0p> eventually time becomes a  constraint and what works is what goes
[00:42:34] <sho0p> then I spend 10x more time on actual code
[00:42:45] <sho0p> so as a dev, I'm better at coding than devops
[00:43:37] <sho0p> it makes more sense then that code makes more sense right
[00:44:04] <sho0p> but also I really think that the people or comittee or whatever behind a language puts more thought into it than say a build system like cmake
[00:44:15] <sho0p> which has so much legacy and deprecated stuff
[00:44:28] <Friithian> https://i.imgur.com/NuO9k0F.png
[00:44:35] <PJBoy> I think the way it works is that every company ends up making their own bespoke build system
[00:44:37] *** Joins: Ivii (~Ivyy@2001:a62:4c3:8e01:1071:5a83:7f38:20d9)
[00:44:54] <PJBoy> and cmake just happens to be one that some company actually let out into the public and pushed it
[00:45:09] <sho0p> project i'm working on now uses conan+cmake... I'm doing it maven style, setting up boilerplate includes so people dont have to bother writing cmake
[00:45:20] <PJBoy> the bespoke build system we have at my $workplace isn't *that* far away from what I've seen of masen
[00:45:21] <sho0p> put your cpp in this folder and hpp in that folder
[00:45:37] <sho0p> and include this and that .cmake config file
[00:46:47] <sho0p> maven is great, i've used it mostly for c++ using some weird plugin
[00:46:58] <sho0p> worked great, especially with eclipse CDT
[00:47:03] <PJBoy> ew
[00:47:05] <PJBoy> ewwww
[00:47:10] <sho0p> yeah well that was a few years ago
[00:47:16] <PJBoy> :D
[00:47:27] <sho0p> clangd/cmake/vscode is goto now
[00:47:39] <sho0p> but make
[00:47:54] <sho0p> cmake
[00:48:41] <sho0p> i hate the fact that i have to configure the project for every new file I add before the indexer finds the new file though
[00:49:00] <sho0p> why can't they just figure out how to make this all work nice
[00:49:28] <PJBoy> I blame linux
[00:49:42] <Friithian> what are you blaming on linux so I might yell at you
[00:49:46] <PJBoy> the idea of system libraries is too complex
[00:49:59] <PJBoy> our puny build systems can't manage
[00:50:05] <LordKalma> sho0p, btw, there's a new GREAT cmake extension for vscode
[00:50:25] <LordKalma> josetr.cmake-language-support-vscode
[00:50:39] <LordKalma> better than twxs's old crap
[00:50:49] <sho0p> interesting!
[00:51:16] <sho0p> does it work with conan u reckon?
[00:51:23] <LordKalma> conan has nothing to do with this
[00:51:29] <LordKalma> this isn't the cmake build/run extension
[00:51:32] <LordKalma> just lang support
[00:51:37] <sho0p> oh
[00:51:40] <sho0p> OH
[00:51:44] <sho0p> oh thats nice
[00:52:19] <LordKalma> remove twxs's one and try that one
[00:52:21] <LordKalma> if you want
[00:53:00] <PJBoy> what's so cool about it?
[00:53:22] <sho0p> i'm no cmake expert and I avoid having to meddle in CMakeLists as much as possible by setting up convention over configuration in the beginning of a project
[00:53:24] <LordKalma> it uses the file-api cmake has for completions
[00:53:32] <sho0p> but it's inevitable eventually, modifications has to be done
[00:53:36] <LordKalma> and it actually has up to date keywords
[00:54:19] * PJBoy installs
[00:54:29] <LordKalma> dom't forget to remove twxs's one
[00:54:36] <PJBoy> of course
[00:54:48] <PJBoy> bah
[00:54:52] <PJBoy> it has a .net dependency
[00:54:58] <LordKalma> yes, it installs automatically
[00:55:02] <PJBoy> and was unable to automatically install it for me
[00:55:11] <LordKalma> whaat?
[00:55:14] <LordKalma> it installed fine for me
[00:55:17] <hnOsmium0001[m]> I remember it was posted on r/cpp and a bunch of people complained about not being open source
[00:55:35] <LordKalma> PJBoy, it needs the "
[00:55:36] <LordKalma> ms-dotnettools.vscode-dotnet-runtime" extension
[00:55:54] <LordKalma> yeah, the author was still considering it, I hope he does.
[00:56:03] <PJBoy> that's installed
[00:56:11] <sho0p> how is the extension audited if it's not opensource?
[00:56:25] <LordKalma> sho0p, as if any of them are hahaha
[00:56:26] <sho0p> surely vscode "marketplace" has auditing, or?
[00:56:31] <sho0p> xd
[00:56:32] <LordKalma> hahahahahahahahah
[00:56:33] <LordKalma> no
[00:56:38] <LordKalma> PJBoy, if you reload the editor it'll probably retry then
[00:56:46] <PJBoy> well it's not complaining anymore
[00:56:50] <sho0p> man, makes me scared tbh
[00:56:56] <sho0p> the things we blindly install
[00:56:57] <PJBoy> I'm not entirely sure if it's working now or not
[00:57:11] <ashafq> I am looking at a codebase where someone has created a wrapper class for Float
[00:57:21] <PJBoy> well that's tomorrow work
[00:57:34] <LordKalma> sho0p, well, *ANY* extension by red-hat, like the TOML support installs red-hat's telemetry extension
[00:57:35] <ashafq> Now I want to convert a regular float * to that... thingy
[00:57:37] <LordKalma> and that's "open source"
[00:57:40] <LordKalma> so whatever
[00:57:47] <PJBoy> what about CMake Tools
[00:57:51] <PJBoy> should I keep that one?
[00:57:55] <ashafq> It won't let me "static_cast<Float *>(ptr)"
[00:57:58] <LordKalma> yes, you need that one, PJBoy
[00:58:03] <PJBoy> cool
[00:58:03] *** Joins: Praise (~Fat@user/praise)
[00:58:32] <ashafq> Do I just "reinterpret_cast<Float *>(ptr)" then? :(
[00:58:44] <LordKalma> ashafq, yes
[00:58:47] <PJBoy> or no
[00:58:53] <LordKalma> because it's actually UB to convert between a pointer and a number
[00:58:55] <PJBoy> how about Float(*ptr)?
[00:59:19] <ashafq> I am questioning this codebase a lot right about now.
[00:59:45] <ashafq> PJBoy: Or (Float *)ptr; ?
[01:01:03] <PJBoy> nah
[01:01:11] <PJBoy> why would you want to do that :(
[01:01:29] <Alipha> ashafq: why is there a Float wrapper?
[01:01:43] <ashafq> Alipha: Only god and that guy knows
[01:01:58] <Alipha> ashafq: do you mind pastebin'ing the class definition for this Float wrapper?
[01:02:24] <ashafq> Alipha: Can't... it's work... but it's as bad as you imagine it
[01:02:48] <ashafq> class Float { ... all the operator overloading of float that really is just the same thing ... };
[01:02:59] *** Quits: cart_man (~rynot@host-78-144-121-71.as13285.net) (Quit: Konversation terminated!)
[01:03:18] <Alipha> ashafq: it doesn't inherit from any bases? it doesn't have virtual functions? it has only a single `float foo;` data member?
[01:03:40] <PJBoy> ctors?
[01:03:54] <PJBoy> surely there's a ctor that takes a float
[01:04:00] <ashafq> Alipha: Yep. Like I said, it's as bad as you imagine it. Tons of macro constructors.
[01:04:01] <Alipha> or, more simply, sizeof(Float) == sizeof(float)?
[01:04:19] <PJBoy> I don't like where you're going with this Alipha
[01:04:23] <ashafq> Alipha: yes, sizeof(Float) == sizeof(float)
[01:04:25] <Alipha> PJBoy: i know :-)
[01:04:37] <Inline> lier
[01:04:45] <Inline> Float > float
[01:04:47] <Inline> lol
[01:05:08] * Inline waits for an ascii joke
[01:05:20] <PJBoy> geordi -w << ("Float" > "float")
[01:05:21] <geordi> false
[01:05:22] <Alipha> ashafq: while completely Undefined Behavior, `reinterpret_cast<Float*>(ptr)` will most-likely "work fine" *looks at PJBoy*
[01:05:32] <PJBoy> >:(
[01:05:39] <ashafq> Alipha: I hope it works
[01:05:46] <Alipha> geordi: -w << ("float" > "Float")
[01:05:47] <geordi> false
[01:05:54] <Inline> hahahah
[01:06:09] <PJBoy> surely there's just `Float(*ptr)`
[01:06:17] <PJBoy> you would make a float wrapper with no way to initialise it
[01:06:19] <PJBoy> *wouldn't
[01:06:37] <ashafq> geordi: -w << (std::string("Float") > std::string("float"))
[01:06:37] <geordi> false
[01:06:46] <Alipha> i mean, if you can make a Float object (which lives long enough) and then use a pointer to that, then by all means, do that
[01:07:56] <Alipha> geordi: -w << ("float" > "Float"), ("Float" > "float");
[01:07:57] <geordi> false, true
[01:08:46] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (Remote host closed the connection)
[01:09:11] *** Joins: Inline (~Inline@aftr-37-201-240-204.unity-media.net)
[01:09:39] <Alipha> Inline: you're out of line
[01:10:05] <Alipha> (i just thought of that joke now. you're not actually out of line)
[01:10:13] *** Quits: PetabyteTrillion (~X@81.171.62.85) (Ping timeout: 250 seconds)
[01:10:27] *** Quits: Tokamak (~Tokamak@166.205.152.22) (Ping timeout: 256 seconds)
[01:11:01] <LordKalma> I came here to learn C++ and hear bad jokes. And apparently, we're out of C++.
[01:11:36] *** Joins: wielding (~wielding@user/wielding)
[01:12:01] <ashafq> LordKalma: https://youtu.be/TeduHyHdH3A?list=TLPQMjAxMjIwMjFwnkLCO1TgDA I was watching this today
[01:13:27] <Alipha> we need someone named Extern and we'll see who wins
[01:13:31] *** Joins: Tokamak (~Tokamak@172.58.191.109)
[01:19:09] <ashafq> Is there a extern "FORTRAN" in C++?
[01:25:47] <PJBoy> you use extern "C" for fortran
[01:26:01] <InPhase> ashafq: There's BIND(C) in Fortran.
[01:28:37] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:32:05] *** Quits: robod34 (Username@79.113.195.239) (Quit: Goe offline! ( http://marius.sucan.ro/ ))
[01:32:42] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Read error: Connection reset by peer)
[01:33:17] *** Quits: varioust (~varioust@cpe-108-167-2-254.neb.res.rr.com) (Ping timeout: 240 seconds)
[01:39:54] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:40:02] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:40:02] *** ChanServ sets mode: +v npaperbot
[01:40:18] <Friithian> anyone now have any recommendations for both an svg lib (basic lines plotted) or an audio format lib for taking an arbitrary file and turning it into mono wav
[01:48:03] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[01:48:33] <LordKalma> for svg?
[01:48:34] <LordKalma> SKIA
[01:48:35] * LordKalma runs
[01:49:49] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:39ca:8a68:8a0c:f08b) (Quit: Konversation terminated!)
[01:50:58] <Friithian> I have a sneaking feeling that I shouldn't use whatever that is
[01:51:06] <LordKalma> it's a great SVG lib
[01:51:09] <LordKalma> just... good luck
[01:51:33] <Friithian> is it insanely complex for simple tasks?
[01:51:38] <LordKalma> dunno
[01:51:46] <LordKalma> but it has the fame
[01:52:39] <Friithian> oh boy yeah learning that seems to be out of scope for this project
[01:54:42] <LordKalma> about the other thing
[01:54:49] <LordKalma> unironically, I can think of the vlc (as lib)
[01:55:01] <Friithian> huh
[01:55:12] <LordKalma> it has some name, I forget
[01:55:18] <LordKalma> dunno if it's on conan
[01:55:41] <Friithian> I dont use conan lol
[01:56:10] <hnOsmium0001[m]> isn't libvlc for decoding videos into bitmaps?
[01:56:39] <LordKalma> it doesn't have the audio bits too?
[01:57:16] <hnOsmium0001[m]> actually it does, it has everything related to playing videos, including audio
[01:58:07] <hnOsmium0001[m]> and for some reason vlc can work with svg https://wiki.videolan.org/SVG/
[01:58:24] <Friithian> what
[01:58:42] <Friithian> well
[01:58:49] <LordKalma> vlc is just the shit
[01:58:57] <LordKalma> I saw a talk on KDAB dev days from a dev
[01:58:58] <LordKalma> and it's like
[01:59:05] <LordKalma> they just thought if they could, not if they should
[01:59:09] <LordKalma> and just shoved everything
[01:59:19] <LordKalma> VLC can screenrecord because they were like
[01:59:25] <LordKalma> "we ahve everything anyway"
[02:02:57] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909) (Ping timeout: 240 seconds)
[02:03:55] <Friithian> well I may have to figure otu vlc
[02:06:32] *** Joins: badone (~badone@209.132.189.152)
[02:06:46] *** Joins: markong (~kvirc@213.146.188.203)
[02:16:20] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909)
[02:18:09] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[02:21:18] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909) (Ping timeout: 260 seconds)
[02:29:40] <Friithian> although looking at this all it may be overkill for my tiny, smooth brain
[02:30:43] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909)
[02:30:44] <johnny> you could just use dedicated libs tho
[02:30:54] <johnny> i mean really it depends on what else you might need
[02:31:13] <johnny> and of course it depends on whether your app is cross platform as well doesn't it?
[02:31:23] <Friithian> I plan on supporting linux and nothing else
[02:31:44] <johnny> ah if you're using linux then for svg there's dedicated libs like rsvg for the svg part
[02:31:48] <johnny> librsvg*
[02:32:38] <Friithian> the requirements are: for the audio portion: taking arbitrary audio files in, turning into wav to be then further processed, for the svg part: taking the processed audio and turning it into a line/curve that will be eventually lasered into material and played on a record player
[02:32:39] <johnny> for the audio -> mono wav , well tons of libs there. wehther you want gstreamer, ffmpeg, or something else would depend
[02:33:12] <johnny> wel if you want any arbitrary codec, well then you definitely want eithre ffmpeg or gstreamer
[02:33:26] <johnny> ffmpeg is problematic if you want it to be shipped in distros though
[02:33:31] <Friithian> oh yeah it would help if I actually said what the project is: I want to rewrite a processing project that takes audio files and turns them into an svg to laser cut a vinyl (not actually using vinyl)
[02:33:32] <johnny> like as part of official packages
[02:33:45] <johnny> it's possible you could just do a gstreamer plugin for that
[02:33:47] <Friithian> I have no intent of doing so currently
[02:34:07] <johnny> well using gstreamer makes it automatically possible, whle using ffmpeg means you can't easily
[02:34:49] <Friithian> well hopefully it isn't more difficult to use gstreamer, although either way I have to learn a ton
[02:35:08] <johnny> howoever, it maybe possible to get the data from the rpocessed audio eaier in ffmpeg, but i wouldn't know
[02:35:19] <johnny> i'd suggest asking the gstreamer folks if the answer isn't clear
[02:35:28] <johnny> clear from a web search i mean
[02:35:29] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909) (Ping timeout: 252 seconds)
[02:36:16] <johnny> i will admit i'm very biased against ffmpeg due to its architecture
[02:36:38] <Friithian> I've only used ffmpeg fromt he cli so I've never had the (dis?)pleasure of working more deeply with it
[02:36:40] <johnny> it's a very useful program, but as a library I would avoid it
[02:37:09] <Friithian> alright, I shall try gstreamer and librsvg and see if my head explodes
[02:39:29] *** Joins: nips (~nips@178.43.73.167.ipv4.supernova.orange.pl)
[02:39:37] *** TinoDidriksen sets mode: -b *!*@94-225-47-8.access.telenet.be
[02:40:15] <johnny> of course it might just be plain easier to do with ffmpeg, so you still might wanna go with it anyways :)
[02:40:24] <Friithian> we shall see
[02:40:59] *** TinoDidriksen sets mode: -o TinoDidriksen
[02:42:17] <Friithian> either way the end result will be better than the seperate python program that outputs the data in a txt file that is then read by processing that the project I am working off of does
[02:45:46] *** Quits: MaddHatter (~maddhatt@user/maddhatter) (Remote host closed the connection)
[02:47:40] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909)
[02:51:43] <johnny> well you could still do it in python via bindings to gstreamer or ffmpeg
[02:51:52] <johnny> pretty sure they both exist
[02:51:57] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909) (Ping timeout: 240 seconds)
[02:52:45] <Friithian> I could do that, but I would have to off myself out of professional embarrassment
[02:52:46] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[02:53:27] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[02:54:06] <johnny> eh
[02:54:12] <johnny> it's totally fine..
[02:54:29] <johnny> i mean you're basically writing glue ayways, so you shouldn't feel bad about t
[02:54:32] <Friithian> I have… an intense dislike for python
[02:55:01] <PJBoy> I love python except for when I'm using it
[02:55:46] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[02:56:06] <johnny> if you use linux you basically get a pretty good interpreted language for free mostly out of the box
[02:56:12] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[02:56:19] <johnny> that's pretty hard to beat
[02:56:43] <Friithian> oh it is really easy to beat: just don't be python
[02:57:14] <Friithian> no one knows the legitimacy of my hatred
[02:57:46] <johnny> hah
[02:57:57] *** Quits: Tokamak (~Tokamak@172.58.191.109) (Ping timeout: 240 seconds)
[02:58:12] <johnny> i'd rather write it than C++ most of the time
[02:58:15] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[02:58:45] <Friithian> for stuff that I want simple quick scripting I just use bash
[02:59:33] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[02:59:35] <johnny> now that is a language i hate
[02:59:45] <johnny> i just can't do stringly typed stuff like that
[02:59:50] <johnny> that's why i don't use cmake
[03:00:28] <Friithian> bash isn't supposed to be something serious, as those in #bash would say, you have !graduated (to a more… fitting language)
[03:00:30] <johnny> of course if it's a one liner i'd write on the cli, then sure
[03:01:50] <Friithian> I should really flesh out the outline of this project, make a git repo, etc. Maybe tomorrow
[03:02:32] *** Joins: Tokamak (~Tokamak@172.58.191.109)
[03:02:40] <Friithian> I will say though: this program when I actually write it will be a lot faster than the processing one, even though not a single person cared about that
[03:05:53] <kalven> word
[03:05:59] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909)
[03:06:23] <Friithian> oh god trying to read python, I hate it
[03:09:01] <Friithian> hm, with how wav files are laid out, I may not need a lib
[03:10:58] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909) (Ping timeout: 268 seconds)
[03:15:22] *** Quits: nips (~nips@178.43.73.167.ipv4.supernova.orange.pl) (Quit: Konversation terminated!)
[03:15:26] *** Quits: nojhan (uid443807@id-443807.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[03:17:10] *** Joins: peeps[zen] (~peepsalot@openscad/peepsalot)
[03:18:02] <Friithian> oh heck I have to name this project also
[03:20:24] <Friithian> actually related to c++: does gcc or clang support output formatting yet
[03:20:46] <kalven> formatting of what?
[03:20:53] <Friithian> text
[03:20:56] <Friithian> heck I am tired
[03:21:05] <kalven> as in std::format?
[03:21:18] <Friithian> iirc there was a thing in c++20 for printf string formatting or something
[03:22:21] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909)
[03:22:42] <Friithian> yeah std::format
[03:26:57] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909) (Ping timeout: 240 seconds)
[03:30:05] *** Joins: RazielZ (~Raziel@user/raziel)
[03:31:56] *** Joins: john99 (~john99@199.246.103.34.bc.googleusercontent.com)
[03:32:33] *** Quits: Raziel (~Raziel@user/raziel) (Ping timeout: 268 seconds)
[03:40:07] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:21ba:a382:6b6:54c4)
[03:40:56] <very_sneaky> `private: double __foo;` is reserved? you can't name things with a double underscore prefix?
[03:41:03] *** Quits: Ivii (~Ivyy@2001:a62:4c3:8e01:1071:5a83:7f38:20d9) (Quit: Leaving)
[03:41:03] <very_sneaky> Alipha: ^
[03:41:56] <Alipha> !reserved
[03:41:57] <nolyc> You are not allowed to create any name which: 1) contains two consecutive underscores, 2) begins with an underscore followed by an uppercase letter or 3) begins with an underscore and is in the global namespace ([lib.requirements]/[requirements]). Literal suffixes are an exception and must start with an underscore.
[03:42:51] <PJBoy> wish the compiler would warn on those
[03:42:53] <very_sneaky> heh. there you go. regardless, i do like the python notation for visibility
[03:42:57] <hnOsmium0001[m]> Friithian: my honest suggestion: just give up and use fmtlib (heck I'll even use the header only version and bite the compile time increase)
[03:43:52] <PJBoy> only MSVC have implemented std::format
[03:44:05] <PJBoy> and even then, fmtlib has extra features
[03:44:32] <PJBoy> so I second that suggestion
[03:44:53] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:21ba:a382:6b6:54c4) (Ping timeout: 268 seconds)
[03:45:40] <hnOsmium0001[m]> there is also apparently the defect that std::format is implicitly locale dependent if you give it chrono stuff, and the oh-my-god-MSVC-promised-ABI-stability-how-do-we-fix-this ABI hell
[03:45:40] <hnOsmium0001[m]> (which I didn't bother to investigate at all)
[03:45:52] <PJBoy> bahahaha
[03:46:00] <Friithian> alright I shall do what I always do and just chain a shitton of <<s
[03:46:08] <PJBoy> :<
[03:46:22] <hnOsmium0001[m]> printf
[03:46:35] <PJBoy> :<
[03:46:39] * hnOsmium0001[m] runs
[03:46:47] <Friithian> well, in reality it'll be a ``I'll figure it out when I get to it'' sorta dealeyo
[03:48:06] <Friithian> oh that reminds me I need a lib for command line args, I remember getting a good recommendation here but I can't for the life of me remember it
[03:48:27] <kalven> getopt is pretty rad
[03:50:54] <hnOsmium0001[m]> I use this just because it's in conan-center https://github.com/p-ranav/argparse
[03:50:54] <hnOsmium0001[m]> works pretty well for basic stuff though not very configurable (e.g. you can't change to use --long-args=value instead of --long-args value)
[03:50:56] <hnOsmium0001[m]> header-only
[03:51:12] <Friithian> argparse that sounds familiar
[03:52:09] <Friithian> and so far all the libs I plan on using are gpl compatible so I am happy
[03:52:54] <john99> Hi, exist some reason/way that can make the members of a class not reachable from a pointer of that class?
[03:54:02] <Friithian> I think my mind was just cruising in 5th gear, then I switched from 5th to first instead of 4th reading that
[03:54:47] <Friithian> are you asking about a way so if there is a pointer to a class you cannot access specific members, but if you just have an instance you can?
[03:56:38] *** Quits: badone (~badone@209.132.189.152) (Quit: ZNC 1.7.5 - https://znc.in)
[03:57:14] <john99> yup
[03:57:21] <Friithian> why?
[03:57:23] <john99> i am debugging a program and i found that
[03:57:41] <john99> (i am debugging my own program)
[03:57:48] <john99> and i dont know how to fix that
[03:59:00] <Friithian> that seems like an issue with a debugger and not c++ itself
[03:59:18] <Friithian> it would help to know what debugger you're using (and it may help to find a place that specializes in it)
[04:00:01] <john99> no
[04:00:22] <john99> if i try to use taht member in taht part of the code the program not compile
[04:00:37] <john99> okay, the long explain
[04:01:31] <john99> i ahve :
[04:01:31] <john99> Engine* engine = create_engine();
[04:01:32] <john99> Connection* conn = engine_connect(engine)// this work
[04:02:05] <john99> Connection* engine_connect(Engine*){ return engine ->connect(); }
[04:02:13] <john99> but iff y try change that for
[04:02:44] <john99> Engine* engine = create_engine();
[04:02:45] <john99> Connection* conn = engine->connect() // this not compile
[04:03:45] <hnOsmium0001[m]> john99: you can try making `Engine::connect()` private, and then making `Connection* engine_conenct(Engine*)` a friend of `Engine`
[04:04:05] *** Quits: Guest4472 (~somewhere@122-199-43-68.ip4.superloop.com) (Quit: No Ping reply in 180 seconds.)
[04:04:06] <PJBoy> does engine_connect's parameter not have a name?
[04:04:28] <john99> the name is engine
[04:04:41] <john99> sorry
[04:04:44] <john99> Connection
[04:05:19] *** Joins: etolier (~somewhere@122-199-43-68.ip4.superloop.com)
[04:05:27] <john99> uff, Engine* create_engine(const char*__restrict uri);
[04:05:27] <john99> Connection* engine_connect(Engine* engine);
[04:05:33] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 256 seconds)
[04:05:43] *** etolier is now known as Guest6406
[04:05:48] <PJBoy> gotcha
[04:06:18] <john99> ?
[04:06:52] <PJBoy> just saying I see it does have a name
[04:08:16] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[04:08:25] <john99> ok, to be exact
[04:08:26] <john99> extern "C" Connection* engine_connect(Engine* engine);
[04:10:53] *** Joins: realsh00p (~sh00p@2001:9b1:41e9:e800:dfc6:b074:1f6f:9b73)
[04:10:55] *** Quits: sh00p (~sh00p@2001:9b1:41e9:e800:dfc6:b074:1f6f:9b73) (Remote host closed the connection)
[04:13:26] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909)
[04:14:21] *** Joins: frost (~frost@user/frost)
[04:14:24] *** Quits: frost (~frost@user/frost) (Client Quit)
[04:15:00] <hnOsmium0001[m]> https://github.com/godotengine/godot/blob/HEAD/core/object/class_db.h#L220-L289
[04:15:00] <hnOsmium0001[m]> guys this is c++, can we please not pull a java and use initializer_list or varadic template instead?
[04:15:19] <hnOsmium0001[m]> the best part about this is, you can see in git blame that people had to add more overloads over time
[04:15:33] <PJBoy> fuck
[04:15:37] *** Quits: Burgundy (~yomon@79.115.213.171) (Ping timeout: 240 seconds)
[04:15:52] <PJBoy> I wasn't prepared for that
[04:17:17] <Friithian> jesus
[04:18:13] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909) (Ping timeout: 240 seconds)
[04:18:16] <PJBoy> looking at the implementations, yeah
[04:18:20] <PJBoy> that's trivial with initializer_list
[04:18:54] <PJBoy> even an array
[04:19:02] <Friithian> has someone opened an issue going ``excuse me wtf is this''?
[04:19:55] <PJBoy> this lets you bind function pointers to the various n-ary overloads, whereas initializer_list doesn't
[04:20:23] <PJBoy> but on the off-chance that's useful, templates would still work
[04:20:47] <hnOsmium0001[m]> shitposting aside, it works fine and results in better looking user code compared to initializer_list, and better error messages compared to `template<typename Ts..., class = std::common_type_t<Ts...>> bind_method(Ts... defs)`
[04:21:54] <hnOsmium0001[m]> in other news, KDE neochat has a rendering bug where < and > in inline code blocks are rendered as &lt; and &gt;
[04:22:38] <Friithian> just use konversation like a normal person
[04:23:00] <PJBoy> you can get the best of both by making a `Ret bind_method(auto... args) { return bind_method({args...}); } Ret bind_method(initializer_list<const char*> il) { ... }`
[04:23:11] <hnOsmium0001[m]> I want message history, plus I'm in a bunch of matrix rooms as well so this prevents me from having to have both open
[04:23:24] <Friithian> I have message history :P
[04:23:44] <hnOsmium0001[m]> well, as in I don't want to be bothered to setup a bouncer
[04:23:55] <Friithian> this ain't a bouncer
[04:24:08] <Friithian> it is irssi running in tmux on my vps
[04:24:10] <hnOsmium0001[m]> huh? how does that work?
[04:25:09] <Friithian> who needs a bouncer when you just run your client on your server and ssh in
[04:25:27] *** Quits: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de) (Remote host closed the connection)
[04:25:34] <hnOsmium0001[m]> well that's not really konversation is it :P
[04:25:34] <hnOsmium0001[m]> also: scratch that to instead "I don't want to be bothered to setup any server"
[04:26:04] <Friithian> it's a good learning and fun
[04:26:10] <Friithian> I still don
[04:26:17] <Friithian> 't have an actually webpage though
[04:26:30] <hnOsmium0001[m]> in the spirit of shitposting, there is also https://github.com/godotengine/godot/blob/1906b59675/core/object/class_db.h#L58-L71 and https://github.com/godotengine/godot/blob/1906b59675/core/object/class_db.cpp#L40-L225
[04:27:01] <Friithian> well that's one heck of a stair case
[04:28:14] <hnOsmium0001[m]> wtf is the point of this class https://github.com/godotengine/godot/blob/1906b59675ce807d3be35924a1b4338976061e0f/core/string/string_name.h#L40-L43
[04:28:26] <hnOsmium0001[m]> it literally just wraps a `const char*`
[04:28:47] *** Quits: andreasbuhr (~quassel@p549db80f.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[04:28:58] <hnOsmium0001[m]> also some curiously reserved names like `_Data` right below it in `StringName`
[04:29:14] <Friithian> only god knows at this point
[04:29:37] <john99> i want cry
[04:30:14] <john99> i have a header old header file in the system and the compiler is including the old version
[04:31:03] <john99> but in the cpp file is "linking" against the definition "its in the same file"
[04:31:10] *** Joins: bu5hyt0p_ (~rmsare@2601:281:c780:a510:6d40:63c6:3a27:e5b8)
[04:31:43] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909)
[04:32:08] <Friithian> this time I switched from 6th to reverse cruising down the highway, and yes, I really like hitchhiker's
[04:32:59] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[04:35:26] *** Quits: namo (~nomo@95.87.208.95) (Ping timeout: 268 seconds)
[04:36:01] *** Quits: john99 (~john99@199.246.103.34.bc.googleusercontent.com) (Ping timeout: 256 seconds)
[04:36:41] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909) (Ping timeout: 268 seconds)
[04:39:40] <PJBoy> could be a super basic strong typedef
[04:48:16] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909)
[04:49:19] <very_sneaky> does anybody here use vim/have you used it for any serious amount of refactoring
[04:51:37] <Friithian> I use neovim, seriousness is, uh, it exists but not in high quantities
[04:52:37] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909) (Ping timeout: 240 seconds)
[04:58:13] <very_sneaky> Friithian: do you use YCM? I'm trying to use it's `:YcmCompleter RefactorRename` method, but it doesn't seem to be renaming across file boundaries
[04:58:38] <Friithian> I use ycm, uh, no idea how it works or how to actually use it
[04:58:58] <very_sneaky> haha no worries, i'll ask in their gitter
[04:59:42] <Friithian> that reminds me I need to redo my entire neovim configuration, it is horrid currently
[04:59:59] <very_sneaky> i've just turned clang-tidy on, works well with ycm
[05:00:28] <Friithian> clang-tidy is lovely
[05:00:30] <very_sneaky> shortcut <leader>f to `:YcmCompleter FixIt` makes it easy to apply suggestions
[05:00:32] <Friithian> clang-format is also useful
[05:00:40] <very_sneaky> yeah i have that as well
[05:01:04] <hnOsmium0001[m]> I think your best bet for renaming is using ccls currently, clangd also works but not as reliably as ccls
[05:01:05] <johnny> i remember using neovim
[05:01:08] <hnOsmium0001[m]> ycm - not sure how it works
[05:01:23] <johnny> oh.. hnOsmium0001[m] cn you tell me a bit about ccls vs clangd?
[05:01:23] <Friithian> it's hard to forget using it
[05:01:25] <very_sneaky> ycm is a vim interface for clangd, basically
[05:01:32] <johnny> did it used to be?
[05:01:40] <johnny> i thought ycm existed before clangd
[05:02:01] <very_sneaky> perhaps not - ycm works for a bunch of languages, clangd is just the current c++ language server
[05:02:03] <johnny> and also that it supported other languages not supported by clang tooling
[05:02:20] <hnOsmium0001[m]> johnny: clangd is a llvm project that provides an LSP implementation based on clang's frontend, ccls is a 3rd party LSP impl that forked from cquery (it died) and also uses clang's frontend
[05:02:24] <very_sneaky> it uses whatever language server is available for the language it's parsing - jedi for python i think
[05:03:16] <johnny> does plain vim has support for lsp nowadays?
[05:03:43] <hnOsmium0001[m]> clangd is actually much easier to setup since they provide prebuilt binaries for a lot of platforms, ccls you have to compile from source (though there are AURs for it)
[05:03:56] <Friithian> vim supports plugins so yeah
[05:04:05] <johnny> but isn't lsp built into neovim?
[05:04:16] <hnOsmium0001[m]> vim - pretty sure no; neovim already has a LSP implementation called nvim-lsp
[05:04:18] <johnny> or more like ships with it by default
[05:04:26] <Friithian> I just use coc
[05:04:38] <very_sneaky> why coc over ycm?
[05:04:41] <johnny> i switched from neovim some time ago
[05:04:48] <johnny> got tired of messin with plugins
[05:04:54] <Friithian> over? I have both iirc
[05:04:59] <Friithian> god I need to redo my config
[05:05:12] <very_sneaky> don't they fulfil substantially the same function
[05:05:18] <hnOsmium0001[m]> coc.nvim more or less tries to emulate the vscode extension experience
[05:05:21] <very_sneaky> like having ALE as well
[05:05:46] <hnOsmium0001[m]> the goal is so you can just `:CocInstall some-language` and it just works, though people really like to complain about the attached nodejs process
[05:05:55] <Friithian> I do a fair bit without really paying attention to stuff, I tend to fix code manually rather than auto
[05:07:30] <very_sneaky> i'm trying to use the tools available more and more
[05:07:44] <very_sneaky> i've got a reason to refactor, i should try and make that easy on myself lol
[05:10:36] <Friithian> eh, just do what I do and have my linter yell at me every so often when it catches something obvious and for everything else manually figure it all out
[05:10:44] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[05:10:50] <Friithian> note: this only works on small projects
[05:11:16] *** Joins: Colt (~Colt@user/colt)
[05:13:49] <very_sneaky> hmm, so it seems to refactor fine when i have the buffers open
[05:13:53] <very_sneaky> but not when they're not open :\
[05:15:19] <hnOsmium0001[m]> there is also clang-rename as a standalone tool, though I've never used it nor have I seen anybody use it
[05:15:34] <very_sneaky> oh yeah
[05:15:50] *** Quits: kaph (~kaph@net-2-47-236-216.cust.vodafonedsl.it) (Ping timeout: 260 seconds)
[05:17:02] <very_sneaky> looking at the help, it seems pretty clunky to use - need to provide a yaml file with old name new name pairs
[05:18:37] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[05:28:17] *** Quits: Tokamak (~Tokamak@172.58.191.109) (Ping timeout: 256 seconds)
[05:28:37] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[05:29:22] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[05:30:33] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:2546:cc91:ef22:afaa) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:31:12] *** Joins: Tokamak (~Tokamak@107.116.82.65)
[05:32:50] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[05:34:56] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[05:37:40] *** Quits: xkpe (xkpe@cpc115884-addl5-2-0-cust1413.6-3.cable.virginm.net) (Remote host closed the connection)
[05:37:52] *** Quits: nshire (~nshire@user/nshire) (Read error: Connection reset by peer)
[05:39:55] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:40:04] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:40:04] *** ChanServ sets mode: +v npaperbot
[05:41:55] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:45:40] *** Quits: malloy (~jimery@116.30.221.255) (Ping timeout: 250 seconds)
[05:45:50] *** Joins: nshire (~nshire@user/nshire)
[05:47:50] *** Joins: malloy (~jimery@116.30.221.255)
[05:49:36] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Quit: very_sneaky)
[05:50:18] <rpav> hrm i want a sortof mutual abstraction between something that _takes_ mostly-arbitrary types (some tuple<Ts..>, struct S, etc) and something that decodes them
[05:51:09] <rpav> the receiver not abstracting the decoder is fairly trivial .. doing it both ways is probably possible, but i'm not sure how efficient
[05:56:49] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[05:59:02] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Ping timeout: 240 seconds)
[06:00:04] <rpav> actually pimpl might be reasonable and reduce to a single virtual call, surely no more than 2
[06:01:20] <rpav> if the impl knew both the required type and was generated for the decoder specifically, it would be 1 🤔
[06:01:23] *** Joins: zmt01 (~zmt00@user/zmt00)
[06:05:17] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[06:12:22] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[06:19:08] *** Joins: varioust (~varioust@cpe-108-167-2-254.neb.res.rr.com)
[06:36:50] *** Joins: adeliktas8 (~adeliktas@i59F4A6C3.versanet.de)
[06:38:36] *** Quits: adeliktas (~adeliktas@i59F52293.versanet.de) (Ping timeout: 240 seconds)
[06:38:37] *** adeliktas8 is now known as adeliktas
[06:39:49] *** Quits: tabakhase (tabakhase@user/tabakhase) (Ping timeout: 240 seconds)
[06:46:46] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[06:48:06] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[06:52:29] *** Joins: tabakhase (~tabakhase@user/tabakhase)
[06:55:36] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[07:03:54] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[07:05:58] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909)
[07:08:10] *** Joins: kaph_ (~kaph@net-2-47-236-216.cust.vodafonedsl.it)
[07:10:37] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909) (Ping timeout: 240 seconds)
[07:15:41] <very_sneaky> hmm, i'm not sure clang-tidy [readability-identifier-naming] is granular enough for what i want
[07:16:49] <Friithian> sed and pray
[07:28:08] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[07:29:42] *** Quits: headline (sid102736@2a03:5180:f::1:9150) ()
[07:30:07] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[07:30:17] *** Quits: varioust (~varioust@cpe-108-167-2-254.neb.res.rr.com) (Ping timeout: 240 seconds)
[07:31:12] <very_sneaky> lol, you like to live on the edge i see
[07:34:17] *** Quits: Tokamak (~Tokamak@107.116.82.65) (Ping timeout: 240 seconds)
[07:36:39] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Read error: Connection reset by peer)
[07:38:19] *** Joins: Tokamak (~Tokamak@172.58.188.156)
[07:39:18] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909)
[07:40:44] *** Quits: pulse (~pulse@user/pulse) (Quit: My hovercraft is full of eels)
[07:43:00] <Friithian> it's worked so far when I've had to do it, but again, smol project
[07:44:45] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909) (Ping timeout: 268 seconds)
[07:53:34] *** Joins: rajkosto (~rajkosto@93-86-90-106.dynamic.isp.telekom.rs)
[07:53:57] <very_sneaky> i'm learning just how bad my code is from clang-tidy
[07:57:57] *** Quits: adeliktas (~adeliktas@i59F4A6C3.versanet.de) (Ping timeout: 240 seconds)
[07:58:29] *** Joins: adeliktas (~adeliktas@i59F4D750.versanet.de)
[08:10:18] *** Joins: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de)
[08:10:24] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[08:11:32] <hnOsmium0001[m]> IMO most of not all current tools are unable to cover all use cases for identifer naming
[08:11:37] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909)
[08:12:50] <hnOsmium0001[m]> personally I just disable that check and verify myself (though tbf my preferred naming style is pretty obscure - using underscores for namespacing of member variables)
[08:16:17] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909) (Ping timeout: 240 seconds)
[08:19:07] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[08:21:54] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[08:24:50] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 268 seconds)
[08:28:42] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909)
[08:28:42] *** Quits: Kebianizao (~Kebianiza@188.127.160.11) (Read error: Connection reset by peer)
[08:37:22] *** Joins: Kebianizao (~Kebianiza@188.127.160.11)
[08:38:09] *** Joins: seninha (~seninha@user/seninha)
[08:41:40] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[08:43:22] *** Joins: ravan (~ravan@user/ravan)
[08:44:21] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[08:50:30] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[08:56:37] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[08:56:43] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[08:57:00] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[09:16:29] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[09:17:15] *** Joins: frost (~frost@user/frost)
[09:18:55] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[09:23:37] *** Quits: proller (~p@62.76.32.253) (Ping timeout: 240 seconds)
[09:32:26] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:95f6:3ba2:27fb:222)
[09:33:33] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[09:35:15] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[09:35:55] <very_sneaky> hnOsmium0001[m]: i take it back, there are a couple of small gripes that i have - i.e., clang-tidy isn't able to identify smart pointers as pointer types, but aside from that what i thought was missing was ability to distinguish between public/private/protected member variable naming conventions - i was blind though, it absolutely can do this
[09:36:16] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[09:36:42] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[09:37:10] *** Quits: skapata (~Skapata@user/skapata) (Quit: Ĝis.)
[09:37:37] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:95f6:3ba2:27fb:222) (Ping timeout: 268 seconds)
[09:37:46] <AmR> Any one know wxWidgets ?
[09:38:34] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909) (Ping timeout: 260 seconds)
[09:38:58] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[09:39:55] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:40:03] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:40:03] *** ChanServ sets mode: +v npaperbot
[09:48:24] <RandomReader> what do you mean about identifying smart pointers in a clang-tidy context?
[09:51:26] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[09:52:25] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909)
[09:54:30] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[09:56:00] <hnOsmium0001[m]> RandomReader: probably pointers are prefix p: pFoo, but smart pointers aren't considered "pointers" by clang-tidy
[09:57:21] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909) (Ping timeout: 268 seconds)
[10:08:22] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909)
[10:12:32] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909) (Ping timeout: 252 seconds)
[10:13:35] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:959e:f772:789b:bf56) (Quit: Quit)
[10:17:23] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:bc5b:dbe0:79e5:a909)
[10:35:37] *** Quits: bu5hyt0p_ (~rmsare@2601:281:c780:a510:6d40:63c6:3a27:e5b8) (Ping timeout: 240 seconds)
[10:45:03] <RandomReader> hm, is that desirable? I would have thought that ownership semantics would be important enough to be distinct in that situation, so a generic pFoo prefix would be misleading
[10:45:40] <RandomReader> I don't usually use those kinds of naming conventions though, so not sure what's common
[10:46:14] *** Quits: Colt (~Colt@user/colt) (Ping timeout: 260 seconds)
[10:46:41] *** Joins: Colt (~Colt@user/colt)
[10:50:41] <very_sneaky> yeah, that
[10:51:22] <very_sneaky> the way i use it is oh p is a pointer, so not the actual resource - not necessarily to identify ownership semantics, though you definitely could do that i guess
[10:53:10] <very_sneaky> the real reason i care though is because the style guide we use at work mandates it, and codifying what it says will be easier than convincing a change in the style guide
[11:02:14] *** Quits: r-g (~r-g@51.159.55.86) (Read error: Connection reset by peer)
[11:06:36] *** Quits: ravan (~ravan@user/ravan) (Read error: Connection reset by peer)
[11:06:54] *** Joins: ravan (~ravan@user/ravan)
[11:09:14] <RandomReader> ah
[11:14:49] *** Joins: JohnMS (~JohnMS@2a02:a311:a344:9b00:4ecc:6aff:fed0:fdf)
[11:15:05] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[11:22:38] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:ed:4fde:2b80:ca)
[11:23:56] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[11:25:34] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[11:39:20] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[11:39:49] *** Quits: artok (~azo@mobile-access-bcee09-192.dhcp.inet.fi) (Quit: to work)
[11:45:46] *** Joins: xkuru (~xkuru@user/xkuru)
[11:51:07] *** JohnMS is now known as JohnMS_AWAY
[11:51:10] *** JohnMS_AWAY is now known as JohnMS
[11:55:17] *** Quits: chozorho (~chozorho@2601:146:300:c30::5b28) (Quit: WeeChat 3.0)
[11:58:38] *** Joins: namo (~nomo@95.87.208.95)
[12:04:37] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[12:13:47] *** Joins: robod34 (Username@79.113.195.239)
[12:21:39] *** Joins: meator (~meator@user/meator)
[12:23:05] *** Parts: meator (~meator@user/meator) ()
[12:29:15] *** Joins: r-g (~r-g@195-154-105-157.rev.poneytelecom.eu)
[12:35:17] *** Joins: andreasbuhr (~quassel@p549db9c9.dip0.t-ipconnect.de)
[12:35:20] *** Quits: andreasbuhr (~quassel@p549db9c9.dip0.t-ipconnect.de) (Client Quit)
[12:54:22] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[12:54:57] *** Joins: cursey (~cursey@user/cursey)
[12:55:58] *** Joins: nojhan (uid443807@id-443807.lymington.irccloud.com)
[12:59:22] *** Quits: sho0p (~z@h-213-164-223-180.A498.priv.bahnhof.se) ()
[13:01:27] *** Joins: Simplar (~Simplar@188.163.93.76)
[13:09:59] *** Joins: plastico (~plastico@neomutt/plastico)
[13:20:24] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[13:22:22] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[13:29:18] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[13:31:33] *** Joins: PJBoy (~PJBoy@host31-48-117-179.range31-48.btcentralplus.com)
[13:31:33] *** Quits: PJBoy (~PJBoy@host31-48-117-179.range31-48.btcentralplus.com) (Changing host)
[13:31:33] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:31:39] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[13:33:22] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[13:35:56] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:39:18] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[13:39:56] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:40:03] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:40:03] *** ChanServ sets mode: +v npaperbot
[13:44:19] <AmR> Any one know And see this strange behavior https://gifyu.com/image/SS7Wj
[13:48:56] *** Quits: JohnMS (~JohnMS@2a02:a311:a344:9b00:4ecc:6aff:fed0:fdf) (Remote host closed the connection)
[13:49:29] *** Joins: JohnMS (~JohnMS@2a02:a311:a344:9b00:4ecc:6aff:fed0:fdf)
[13:50:37] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Ping timeout: 240 seconds)
[13:52:51] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[13:52:54] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 260 seconds)
[13:55:33] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[14:00:33] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 256 seconds)
[14:00:57] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[14:03:43] *** Joins: dextaa5 (~DV@user/dextaa)
[14:04:19] *** Quits: dextaa (~DV@user/dextaa) (Ping timeout: 265 seconds)
[14:13:50] <johnny> you're in the wrong channel
[14:16:03] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[14:16:58] *** JohnMS is now known as JohnMS_AWAY
[14:19:03] * Haohmaru is feeding parametrically-generated pseudo-random "data signals" into his compressor, and doing statistic
[14:20:01] <Haohmaru> it seems my 4bit compression only begins to be worth it when the signal has 16-ish value durations
[14:21:31] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:22:01] <Haohmaru> could i have said it more confusing.. i meant value-flip period of 16-ish bits
[14:22:19] *** JohnMS_AWAY is now known as JohnMS
[14:22:56] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[14:22:56] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[14:24:22] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[14:29:17] *** Quits: letto (~letto@188.26.158.104) (Ping timeout: 240 seconds)
[14:40:14] *** Joins: Burgundy (~yomon@79.115.213.171)
[14:43:58] *** Quits: barometz (~dvanb@i117058.upc-i.chello.nl) (Quit: you can't fire me!)
[14:45:54] *** Joins: barometz (~dvanb@i117058.upc-i.chello.nl)
[14:48:24] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[15:00:33] *** Joins: RazielXYZ (~Raziel@user/raziel)
[15:01:40] *** Joins: markong (~kvirc@213.146.188.203)
[15:04:01] *** Quits: RazielZ (~Raziel@user/raziel) (Ping timeout: 256 seconds)
[15:12:48] *** Quits: derwolf (~DerWolf@2a01:4f8:c0c:554a::1) (Quit: Bye)
[15:13:07] *** Joins: derwolf (~DerWolf@static.143.125.47.78.clients.your-server.de)
[15:18:28] <Haohmaru> !fact
[15:18:29] <nolyc> Haohmaru: The digits 8 and 9 are not octal digits.
[15:20:42] <Haohmaru> << 08;
[15:20:42] <geordi> error: invalid digit "8" in octal constant
[15:21:27] <CoderCharmander> !fact
[15:21:28] <nolyc> CoderCharmander: A pointer to objects of type T is referred to as a ``pointer to T''.
[15:22:56] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 268 seconds)
[15:23:20] <PJBoy> wow these facts
[15:23:29] <PJBoy> for all the things the spec leaves unspecified
[15:24:16] <PJBoy> it feels the need to clarify how octal works
[15:24:36] <PJBoy> and fairly basic English construction
[15:28:22] <Haohmaru> you take a circle, and you hammer it untill it has 8 corners
[15:28:53] <Haohmaru> why isn't october the 8th month?
[15:31:36] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[15:32:43] <PJBoy> because the romans added two months in the middle of the year for some reason
[15:33:10] <PJBoy> presumably july and august
[15:33:27] <Haohmaru> huh, was it 10 months per year before that?
[15:33:32] <PJBoy> yeah I believe so
[15:33:36] <Haohmaru> wow
[15:34:02] <Haohmaru> ancient cases of inconsistency
[15:39:53] <CoderCharmander> So it's for backwards compatibility
[15:42:27] <Haohmaru> it introduces an inconsistency..
[15:43:00] <Haohmaru> and so then December probably had to do with Decimal.. 10
[15:43:27] <Haohmaru> they should've appended their dumb extra two months at the end like a sane person
[15:43:42] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Quit: very_sneaky)
[15:44:07] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[15:44:21] <Haohmaru> ... October, November, December, Elevenbruary, Twelvuary
[15:47:05] <PJBoy> think they'd be Henember and Dodecember
[15:51:52] <Haohmaru> they could've renamed them to the musical notes
[15:52:02] <Haohmaru> roughly
[15:53:13] *** Joins: Roughy (~mdaw45ns@user/roughy)
[16:01:47] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 268 seconds)
[16:02:13] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[16:04:48] *** Joins: seninha (~seninha@user/seninha)
[16:10:21] *** Joins: pulse (~pulse@user/pulse)
[16:16:55] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:28a8:69e0:9f71:fd7)
[16:16:55] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:28a8:69e0:9f71:fd7) (Changing host)
[16:16:55] *** Joins: skapata (~Skapata@user/skapata)
[16:32:37] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 268 seconds)
[16:33:04] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[16:51:38] <Haohmaru> !fact
[16:51:39] <nolyc> Haohmaru: A function object is an object of a function object type.
[16:52:00] <Haohmaru> bind -> mlown
[16:53:03] <xkoncek> once i read something about that function names actually decay to funtion pointers
[16:53:28] <xkoncek> and some other sntactic funniness which is why you can dereference function pointers as many times as you want
[16:53:52] <xkoncek> and that function pointer as well as "function reference" can bot be invoked using ()
[16:53:57] *** Quits: rajkosto (~rajkosto@93-86-90-106.dynamic.isp.telekom.rs) (Ping timeout: 240 seconds)
[16:54:09] *** Joins: kvik (~kvik@92-242-240-91.broadband.mtnet.hr)
[16:55:09] <rpav> this compile command heh
[16:55:33] <rpav> -DNDEBUG -g .. -O3 .. -O2 .. -O2
[16:56:32] <Haohmaru> -Oillegally-fast-math
[16:56:48] <rpav> -Oslow -Ofast -Obig -Osmall
[16:57:07] <Haohmaru> -Ohardererer
[16:57:31] <Haohmaru> -fjingle-bells
[16:57:32] <rpav> -fforce-faster-f00f
[16:57:52] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[16:58:39] <Haohmaru> -flto -fmore-lto -fjasonturner-grade-asm-output
[17:02:31] <Haohmaru> need to statically link your program with the whole OS into one binary, and then LTO-dafuq-out-of-it ;P~
[17:07:24] *** purplex_ is now known as purplex
[17:07:36] <r-g> xkoncek: Yes, the multiple dereferencing works because of the decay. Every time you apply dereferencing with `*` the function type decays to a function pointer. And in turn you get a function type that decays all over again.
[17:07:56] *** Joins: rajkosto (~rajkosto@93-86-90-106.dynamic.isp.telekom.rs)
[17:08:09] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[17:13:40] *** Joins: Deneb (~johnch@30.125.7.51.dyn.plus.net)
[17:14:18] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[17:15:34] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[17:24:33] *** Quits: |7| (~seachdamh@user/seachdamh) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[17:25:18] *** Joins: letto (~letto@188.26.158.104)
[17:28:44] *** Quits: kvik (~kvik@92-242-240-91.broadband.mtnet.hr) (Ping timeout: 268 seconds)
[17:30:20] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[17:30:28] *** Joins: ravan (~ravan@user/ravan)
[17:39:30] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[17:39:56] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:40:03] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:40:03] *** ChanServ sets mode: +v npaperbot
[17:53:15] *** Quits: JohnMS (~JohnMS@2a02:a311:a344:9b00:4ecc:6aff:fed0:fdf) (Quit: Konversation terminated!)
[17:53:24] *** Quits: frost (~frost@user/frost) (Ping timeout: 268 seconds)
[17:58:51] *** Joins: magla (~gelignite@55d4c16b.access.ecotel.net)
[17:59:17] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Ping timeout: 240 seconds)
[18:00:28] <Haohmaru> !fact
[18:00:29] <nolyc> Haohmaru: As described in [class.bit], a reference cannot be bound directly to a bit-field.
[18:09:20] <Haohmaru> bluh this is a puzzle.. https://pastebin.com/5MDWxu73
[18:10:14] <rpav> i feel like that sequence of numbers looks vaguely familiar
[18:10:15] <Haohmaru> that's 256 values, i need a LUT of this, but i feel there must be some funky math capable of reproducing those values
[18:10:44] <Haohmaru> yeah, most probably, there are similar such sequences
[18:11:22] <rpav> maybe vaguely similar to a bit count sequence
[18:11:26] <barometz> https://oeis.org/search?q=0+1+2+1+2+3+2+1+2+3+4+3+2+3+2+1+2+3+4+3+4+5+4+3+2+3+4+3+2+3+2+1+2+3&language=english&go=Search
[18:11:34] <Haohmaru> input is 0 to 255, output should be the corresponding number from that paste (i've printed them on one line as decimal, and then as bitset<3> for convenience)
[18:11:54] <Haohmaru> huh
[18:12:14] <rpav> barometz: aha
[18:12:48] <Haohmaru> first obvious clues are: the whole sequence is symmetric to itself with 1 appended on the 2nd half
[18:13:19] <Haohmaru> the lowest bit isn't needed since that just flips every time, so it's input&0x01
[18:13:28] <rpav> Haohmaru: if you're bit counting there are already compressed versions of this
[18:13:39] <rpav> let me see
[18:13:55] *** Joins: kvik (~kvik@93-136-231-38.adsl.net.t-com.hr)
[18:14:51] <Haohmaru> the sequence comes from the following: given an 8bit byte, count the number of "transients" it contains, assuming previous bit is 0
[18:15:02] <rpav> "transients"? :P
[18:15:08] <Haohmaru> where "transient" i call a value transition
[18:15:20] <rpav> did you see the link barometz pasted
[18:16:01] <rpav> lots of links and info off that, probably one of them is useful for whatever you're doing
[18:18:25] <Haohmaru> i saw, graycode is maybe related..
[18:18:26] *** Joins: kvik_ (~kvik@93-136-231-38.adsl.net.t-com.hr)
[18:19:06] <AmR> Any one know wxWidgets ?
[18:20:21] <AmR> Any one know And see this strange behavior https://gifyu.com/image/SS7Wj I add panel to frame, I use wxWidgets, And My main desktop is KDE, But Frame change it silef to dlg ?!!! I talk About Bookkeeper window..
[18:20:34] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[18:20:36] <rpav> wxWidgets .. a crude weapon for a more barbaric age
[18:21:17] *** Quits: kvik (~kvik@93-136-231-38.adsl.net.t-com.hr) (Ping timeout: 240 seconds)
[18:22:13] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[18:24:43] <Haohmaru> i can't figure out the formulas x_x
[18:31:50] *** dextaa5 is now known as dextaa
[18:34:18] *** Joins: ferdna (~ferdna@user/ferdna)
[18:48:16] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[18:50:37] <AmR> Any One know why windows title bar change like that ?
[18:53:26] *** Joins: bu5hyt0p_ (~rmsare@2601:281:c780:a510:31c5:bd6a:19eb:499b)
[18:56:33] <AmR> I installing Ubuntu for only test that :(
[18:59:59] *** Quits: Simplar (~Simplar@188.163.93.76) (Quit: Going offline, see ya! (www.adiirc.com))
[19:00:06] <great_taste> hmm writing highly experimental code... it's becoming messy... will need a rewrite "eventually" :)
[19:01:01] <rpav> rewrite when you know enough to go forward and not rewriting would provide more resistance
[19:01:30] <rpav> experimental code splatting is a good way to explore and make progress quickly though
[19:02:04] <great_taste> it's the only way sometimes, because you just don't know how you're gonna make it all work a priori
[19:02:32] <rpav> yeah, and if you spend a ton of time "thinking hard" you usually end up with something about as coherent as any dream
[19:03:14] <great_taste> the problem is we never find the time to clean it up, because it never feels "finished"
[19:03:26] <great_taste> there's always more bs to do
[19:03:38] <rpav> well you can clean up as soon as it gets annoying to keep doing what you are, and you have a pretty good idea of what's going on
[19:04:12] <rpav> i almost always clean up .. sometimes sooner, sometimes later, but it's definitely worth it and will save time
[19:05:40] <great_taste> yes I have to take a step back at some point and rethink the architecture to make something concise
[19:08:28] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[19:08:44] *** Joins: n3rdy1 (~n3rdy1@2601:281:c780:a510:31c5:bd6a:19eb:499b)
[19:09:26] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[19:09:52] *** Parts: bu5hyt0p_ (~rmsare@2601:281:c780:a510:31c5:bd6a:19eb:499b) ()
[19:10:38] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[19:15:20] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[19:17:26] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[19:26:40] *** Quits: r-g (~r-g@195-154-105-157.rev.poneytelecom.eu) (Quit: r-g)
[19:29:38] *** Joins: chozorho (~chozorho@2601:146:300:c30::9401)
[19:30:21] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[19:41:26] *** Joins: zmt00 (~zmt00@user/zmt00)
[19:52:47] *** Joins: scoobydoo_ (~scooby@user/scoobydoo)
[19:54:43] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 256 seconds)
[19:54:44] *** scoobydoo_ is now known as scoobydoo
[19:55:37] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) (Ping timeout: 240 seconds)
[19:56:57] *** Quits: rajkosto (~rajkosto@93-86-90-106.dynamic.isp.telekom.rs) (Ping timeout: 240 seconds)
[20:23:25] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:23:30] *** Joins: evocatus (~rg@62.182.78.42)
[20:30:14] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Quit: Hello71)
[20:31:03] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[20:31:45] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[20:37:28] *** Joins: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net)
[20:37:51] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[20:41:17] *** Quits: evocatus (~rg@62.182.78.42) (Quit: Konversation terminated!)
[20:54:03] *** Joins: proller (~p@62.76.32.253)
[21:04:10] *** Joins: rajkosto (~rajkosto@93-86-7-199.dynamic.isp.telekom.rs)
[21:15:40] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[21:18:01] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[21:21:41] *** Quits: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net) (Remote host closed the connection)
[21:29:55] *** Quits: rajkosto (~rajkosto@93-86-7-199.dynamic.isp.telekom.rs) (Ping timeout: 256 seconds)
[21:37:14] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 260 seconds)
[21:39:56] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:40:04] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:40:04] *** ChanServ sets mode: +v npaperbot
[21:47:51] *** Joins: rayw (~ray@cpc83999-pool15-2-0-cust1.15-1.cable.virginm.net)
[21:50:26] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[21:52:57] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 240 seconds)
[21:57:18] *** Joins: seninha (~seninha@user/seninha)
[22:01:48] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[22:03:11] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[22:12:24] *** Quits: DrMax (~DrMax@node-1w7jra94757g0eo72mt0a6p21.ipv6.telus.net) (Ping timeout: 268 seconds)
[22:14:16] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:4945:e3af:4088:41b5)
[22:14:16] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:4945:e3af:4088:41b5) (Changing host)
[22:14:16] *** Joins: skapata (~Skapata@user/skapata)
[22:23:58] *** Joins: DrMax (~DrMax@node-1w7jra94757g05r4hkl32blfy.ipv6.telus.net)
[22:26:39] *** Quits: magla (~gelignite@55d4c16b.access.ecotel.net) (Quit: Stay safe!)
[22:27:51] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 245 seconds)
[23:13:43] *** Joins: HvszrStykp (~X@81.171.62.82)
[23:32:02] *** Quits: HvszrStykp (~X@81.171.62.82) (Ping timeout: 260 seconds)
[23:35:05] *** Quits: Terminus (~null@user/terminus) (Ping timeout: 250 seconds)
[23:37:11] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:ed:4fde:2b80:ca) (Ping timeout: 252 seconds)
[23:39:01] *** Joins: Terminus (~null@user/terminus)
[23:40:23] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:751a:858f:9fad:5840)
[23:49:16] *** Joins: Guest64 (~Guest64@46.109.136.184)
[23:49:19] <Guest64> hey
[23:49:29] <Guest64> I'm compiling diablo 2 opensource
[23:49:33] <Guest64> with cmake
[23:49:37] <Guest64> and visual studio
[23:49:47] <Guest64> once .exe is built
[23:50:02] <Guest64> the thing really does not run because it missed SDL2 library
[23:50:31] <Guest64> I looked at CMakeLists and it has lines that choose library from the folder and it's there
[23:50:41] *** Joins: magla (~gelignite@55d4c16b.access.ecotel.net)
[23:50:47] <Guest64> Set the "Where to build the files" to be ./Build. (This is so that the git repository doesn't pick this up as a source directory).
[23:51:03] <Guest64> I am unsure what's meant with ./Build here
[23:51:13] <Guest64> that's a Linux slash?
[23:51:33] <Guest64> and where is Build supposed to be
[23:51:52] <Guest64> I compiled it in ordinary folder on desktop
[23:52:01] <Guest64> https://github.com/eezstreet/OpenD2
[23:55:34] *** Quits: Deneb (~johnch@30.125.7.51.dyn.plus.net) (Quit: Leaving)
