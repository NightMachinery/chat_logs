[00:00:13] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 258 seconds)
[00:00:20] *** Joins: summersault (~summersau@179.221.251.16)
[00:00:48] *** Joins: LiftLeft (~LiftLeft@154.21.28.208)
[00:06:34] *** Quits: Guest85 (~Guest85@p200300c8cf22760048c263663174e9c2.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[00:06:54] *** Quits: Rockwood_ (~Rocky@user/rocky) (Quit: The Time is Over)
[00:12:18] *** Quits: cbleslie2 (~cbleslie@47.148.37.101) (Ping timeout: 240 seconds)
[00:12:28] *** Quits: federico_it (~textual@151.95.116.125) (Quit: Textual IRC Client: www.textualapp.com)
[00:16:10] *** Joins: mexen (uid495612@user/mexen)
[00:19:12] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[00:19:30] *** Quits: l__q_ (~modinfo@user/modinfo) (Ping timeout: 240 seconds)
[00:22:43] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[00:23:19] *** Joins: summersault (~summersau@179.221.251.16)
[00:27:06] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 240 seconds)
[00:28:54] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:3e:d956:df20:973) (Quit: Leaving)
[00:31:51] *** Quits: mattil (~mattilinn@87-92-149-13.rev.dnainternet.fi) (Quit: Leaving)
[00:32:26] <austincheney> I have no idea what you guys are talking about but for a general approach to decisions in programming there are two things that will determine success and yet are commonly avoided.  1. Always choose the most simple path where simple means fewer and thus less flexible. 2. Always save composition for last. Any effort spent on composition returns a net negative.
[00:32:53] <ljharb> i'm not sure what you mean by the second one
[00:33:05] <ljharb> but also, "simple" is not always better
[00:33:26] <ljharb> often there's some complexity you can add in the early stages that makes the later stages much simpler than otherwise
[00:33:27] <austincheney> composition is the answer to the question:  "How will I put this together?"
[00:35:42] <austincheney> ljharb, that is a planning consideration and if a developer is willing to invest that much in planning they have likely balanced complexity against other competing non-technical requirements
[00:38:36] <ljharb> right but planning is effort spent on composition
[00:38:44] <ljharb> and if you don't plan for that early, you are guaranteed to have a non-simple result
[00:41:04] *** Joins: Enissay (~Enissay@user/enissay)
[00:44:59] *** Joins: l__q_ (~modinfo@user/modinfo)
[00:45:09] *** Quits: Haxxa (~Haxxa@122.199.45.186) (Quit: Haxxa flies away.)
[00:46:07] *** Joins: Haxxa (~Haxxa@122.199.45.186)
[00:46:13] <ashnur> https://www.youtube.com/watch?v=SnhIax2o3u8
[00:46:13] <skillbot> YouTube Title: Dave Snowden - Innovation Dialogue Strategy and Complexity
[00:47:03] *** Joins: cisme_ (~cisme_@2600:1700:d980:1a40:ac44:5063:41b3:193a)
[00:47:13] *** Joins: xsperry (~as@user/xsperry)
[00:49:38] *** Joins: matsaman (~matsaman@user/matsaman)
[00:51:46] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[00:54:16] *** Quits: shailangsa (~shailangs@host86-186-142-59.range86-186.btcentralplus.com) (Ping timeout: 258 seconds)
[00:58:52] *** Quits: mei (~mei@user/mei) (Ping timeout: 245 seconds)
[01:01:25] <relipse> How do you like my es6 class: http://cworklog.test/hourly-salary-calculator/js/hourlysalarycalc.js
[01:01:31] *** Joins: jmft2 (~JMFT@81.149.115.87.dyn.plus.net)
[01:01:41] <relipse> err
[01:01:57] <relipse> https://cworklog.com/hourly-salary-calculator/js/hourlysalarycalc.js
[01:02:27] *** Quits: fweht (uid404746@id-404746.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[01:02:38] <ashnur> i love how it should be automatically better because it's a "class"
[01:03:55] <sheetjs> classes are classy, or something
[01:04:55] <ashnur> yeah, so great, now you have to remember to overwrite the default everywhere because that's not part of the responsibilities of this class
[01:05:10] <ashnur> good thing it's in js and you don't also need a locking mechanism between the methods
[01:06:40] <GreenJello> relipse, it's a bit confusingly designed
[01:06:52] <GreenJello> like why the last two methods don't use `this`
[01:07:08] <relipse> i didn't want them to use this
[01:07:08] <GreenJello> or why this isn't just two functions
[01:07:17] <GreenJello> then why are they on the class?
[01:07:30] <relipse> because they are related
[01:07:32] <sheetjs> calculate should do both calculations and store the result
[01:07:34] <relipse> could be static
[01:07:40] <sheetjs> then the getters would just return the specific result
[01:07:46] <relipse> is there static in js?
[01:07:49] <GreenJello> yes
[01:08:19] <ljharb> relipse: a method that doesn't use `this` shouldn't be on the instance.
[01:08:31] <relipse> so where do I put it
[01:08:39] <relipse> in PHP i would use public static function
[01:08:45] <ljharb> JS has `static`
[01:08:49] <relipse> oh
[01:09:10] *** Joins: vysn (~vysn@user/vysn)
[01:09:25] <ljharb> but also, there's no real reason this needs to be a class, and classes are bad. this could easily be a few functions that take an object literal.
[01:09:47] <ljharb> relipse: also, avoid switch, use a linter, and JS idiom generally prefers camelCase over snake_case
[01:11:54] <relipse> classes are awesome
[01:11:59] <relipse> object oriented programming
[01:12:37] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 245 seconds)
[01:12:49] <GreenJello> they're sometimes fine, but here you're just trying to compute a number, and not really retaining any state
[01:13:39] <GreenJello> unless you're reusing the instance by mutating it when the user changes inputs?
[01:13:44] *** Quits: enoq (~enoq@194-208-179-35.lampert.tv) (Quit: enoq)
[01:17:05] <ashnur> relipse, more like PLOP
[01:17:17] <relipse> what is PLOP?
[01:17:52] <matsaman> it's like FIZZ
[01:17:55] <matsaman> but just as meaningless
[01:18:56] <ashnur> relipse, PLace Oriented Programming
[01:22:06] <matsaman> I feel like 'PO' is both shorter and less ambiguous =P
[01:23:06] *** Quits: legit (petru@2a03:b0c0:3:f0::60:1000) (Quit: WeeChat 2.8)
[01:23:30] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[01:27:54] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 240 seconds)
[01:28:45] *** Joins: wroathe (~wroathe@96-88-30-181-static.hfc.comcastbusiness.net)
[01:29:07] <sheetjs> what's FIZZ?
[01:31:46] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[01:35:10] <wroathe> sheetjs: The first half of fizzbuzz
[01:36:22] <ljharb> relipse: OOP is junk
[01:36:32] <sheetjs> n> const x = "fizzbuzz"; x.slice(0, x.length>>1) == "FIZZ"
[01:36:32] <jellobot> (okay) false
[01:36:40] <ljharb> relipse: focusing on object-oriented programming is like focusing on pants-oriented clothing
[01:36:58] <sheetjs> wroathe: it's the first half of FIZZBUZZ
[01:37:00] <relipse> in PHP you can do self::callmystaticmethod()
[01:37:02] <relipse> how do you do that in JS?
[01:37:09] <wroathe> sheetjs: You got me there
[01:37:31] <relipse> or do I have to name the full class name
[01:38:04] <wroathe> relipse: By not using static methods. They're pointless in Javascript.
[01:38:12] <relipse> I disagree
[01:38:13] <wroathe> relipse: Just define a function and export it from a module
[01:38:21] <relipse> ok I'm listening
[01:38:26] <wroathe> lol
[01:38:33] <wroathe> Nope. You've already disagreed. Someone else will have to help.
[01:38:46] <entuland> well you already provided the solution :P
[01:38:58] <relipse> whoever invented static had some good idea
[01:39:13] <relipse> this is mostly subjective talk here
[01:39:21] <ljharb> relipse: `Foo.bar
[01:39:26] <ljharb> relipse: where `Foo` is the constructor
[01:39:31] <GreenJello> ljharb, pants tend to be the most important clothes
[01:39:35] <ljharb> relipse: and yes, you always hardcode the class name
[01:39:36] <wroathe> They're a stopgap for languages that don't support first class functions
[01:39:39] <GreenJello> legally speaking
[01:39:41] <ljharb> GreenJello: not if you're wearing underwear
[01:39:42] <entuland> by the way, I'm refactoring my code and getting rid of all instantiations - nothing fancy, just taking advantage of destructuring when returning stuff, it's making my code way easier to reason about
[01:39:53] <wroathe> Javascript supports first class functions, hence static methods are pointless
[01:40:02] <relipse> what is a first class function
[01:40:14] <cis> a function that paid extra for the nice seats
[01:40:17] <entuland> eheheh
[01:40:26] <wroathe> A function that can be declared at the top level, or as an expression, and is a first class value within a program
[01:40:37] <wroathe> Meaning it can be returned from other functions and assigned to variables
[01:41:00] <entuland> relipse, think about Java - you can't have standalone functions there, you are forced to attach them to a class - there you have no other option but have static methods
[01:41:18] *** Joins: Anonamy (~Anonamy@node-1w7jr9qgfucx13fyrpxrlwog9.ipv6.telus.net)
[01:41:32] <relipse> that's the beauty of Java
[01:41:35] <relipse> and PHP
[01:41:42] <wroathe> I disagree
[01:41:45] * wroathe drops mic
[01:41:47] <relipse> did you guys take object oriented coding in College?
[01:42:05] <entuland> wait, you can have standalone functions in PHP, that's different stuff
[01:42:26] <relipse> right most good programmers strive to be OO
[01:42:27] <entuland> in Java you have no choice, in PHP you do have a choice
[01:42:30] <relipse> true
[01:42:39] <entuland> I'm going the other way - I'm trying to go functional myself
[01:42:45] <relipse> sign
[01:42:47] <relipse> sigh
[01:42:56] <entuland> been messing with OO for ages with C++, PHP and other languages
[01:43:14] <wroathe> I did my time with OOP, and now I've got programming PTSD. Quite happy with my new post-OOP mindset.
[01:43:29] <entuland> in the end it's just tools, feel free to use it if you're happy with OOP, relipse
[01:47:38] <relipse> there, i made it static https://cworklog.com/hourly-salary-calculator/js/hourlysalarycalc.js
[01:47:39] *** Joins: hendursa1 (~weechat@user/hendursaga)
[01:48:13] <wroathe> I tried
[01:48:17] *** Joins: summersault (~summersau@179.221.251.16)
[01:48:41] <ljharb> static methods aren't pointless if you have instances. it's just that instances are pointless.
[01:48:48] <ljharb> relipse: java is the worst, there's no beauty there
[01:49:10] <ljharb> relipse: most good programmers realize that OO sucks. programmers who took college courses all took OO classes.
[01:49:15] <relipse> the beauty in java is that everything is OO
[01:49:22] <ljharb> no it's not
[01:49:29] <relipse> except for types like int ant bool
[01:49:32] <ljharb> java, also php, eventually added first-class functions
[01:49:36] <ljharb> to try to catch up to javascript
[01:49:47] <ljharb> ok so "everything except some things", which means "not everything", gotcha
[01:49:54] <entuland> relipse, have you ever read this page? http://steve-yegge.blogspot.com/2006/03/execution-in-kingdom-of-nouns.html
[01:49:57] <relipse> this is all subjective conversation
[01:50:21] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[01:50:22] <ljharb> relipse: so?
[01:50:29] <ljharb> relipse: that doesn't change it's value or correctness
[01:50:34] <relipse> meaning no one really has an authority
[01:50:36] <ljharb> definitely read that nouns article
[01:50:38] <ljharb> !classes @ relipse
[01:50:39] <jellobot> relipse, Class hierarchies? Don't do that! http://raganwald.com/2014/03/31/class-hierarchies-dont-do-that.html (See also, !inheritance)
[01:50:42] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[01:50:47] <ljharb> relipse: right. which means it's only subjective experience that's useful
[01:50:50] *** Joins: mickey8 (~user@user/mickey)
[01:50:58] <wroathe> https://github.com/EnterpriseQualityCoding/FizzBuzzEnterpriseEdition
[01:51:01] <ljharb> relipse: which means that subjective conversation is *the only way you can learn anything about which patterns are better*
[01:51:11] <ljharb> relipse: hence, we're talking about it, and you can ignore it at your peril
[01:51:26] <ljharb> (subjective conversation or experience, ofc)
[01:52:36] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 252 seconds)
[01:59:41] *** Quits: TheFireSwamp (~root@159.65.182.108) (Remote host closed the connection)
[02:00:29] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[02:00:56] *** Joins: thiras (~thiras@user/thiras)
[02:02:22] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:ac0a:bb04:1852:c943)
[02:02:56] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[02:04:52] *** Joins: summersault (~summersau@179.221.251.16)
[02:10:04] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[02:11:47] *** Quits: CoolerY (~CoolerX@user/coolerx) (Ping timeout: 245 seconds)
[02:14:13] *** Joins: celphi (uid97751@user/celphi)
[02:14:59] *** Joins: shailangsa (~shailangs@host86-185-58-139.range86-185.btcentralplus.com)
[02:16:16] *** Quits: Anonamy (~Anonamy@node-1w7jr9qgfucx13fyrpxrlwog9.ipv6.telus.net) (Quit: Leaving)
[02:21:19] *** Joins: Anonamy (~Anonamy@node-1w7jr9qgfucx13fyrpxrlwog9.ipv6.telus.net)
[02:23:59] <Anonamy> hi, OK so I am using a bootstrap library that looks like this
[02:24:17] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[02:24:22] <Anonamy> markers [{ latLng: [7.35, 134.46], name: "Palau" },],
[02:24:30] <onosendi> How do you combine variables with a string in Sass? `$foo = 5; color.adjust(#fff, $lightness: #{foo}%);` gives me "SassError: Expected expression." If I drop the %, it says: 5 is invalid.
[02:24:51] <Anonamy> I made it work by inputting variables from an array, like this
[02:25:06] <Anonamy>  markers: [
[02:25:06] <Anonamy>             { latLng: (centerlocations[0]), name: (centerlocationnames[0]) },
[02:25:06] <Anonamy>           ],
[02:25:42] <Anonamy> however I would like to input the entire arrays instead of each index of them,    (without the [0]  ...
[02:26:04] <ljharb> Anonamy: please never paste multiple lines into irc. use gist or codesandbox or something
[02:26:13] <Anonamy> roger that thanks
[02:28:47] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 250 seconds)
[02:28:49] <onosendi> `$foo: 5; $bar: 5 * 1%; hsl(0, 0%, $bar)` did the trick.
[02:28:52] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 245 seconds)
[02:29:01] <Anonamy> onosendi, noce
[02:29:20] <Anonamy> I mean nice
[02:30:02] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:31] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:30:36] <onosendi> Ugh, maybe it didn't.
[02:30:38] <onosendi> wtf
[02:34:34] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[02:41:30] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[02:42:04] *** Joins: hendursaga (~weechat@user/hendursaga)
[02:46:16] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Quit: Ping timeout (120 seconds))
[02:47:10] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[02:51:55] <Anonamy> https://paste.ubuntu.com/p/zVVYYB9td9/
[02:52:31] <Anonamy> Hi, I am stuck on some Javascript coding and an array .. I am not sure how to get it to work.
[02:54:40] <GreenJello> you can use array.map which passes the index as the second argument to your function
[02:57:09] *** Joins: summersault (~summersau@179.221.251.16)
[03:01:30] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 240 seconds)
[03:01:58] *** Quits: Harlin (~DonQixote@2603:300b:663:e800:7802:faf8:53d5:9a78) (Read error: Connection reset by peer)
[03:02:10] *** Joins: Harlin (~DonQixote@2603:300b:663:e800:9551:fbe6:2bbc:5130)
[03:04:26] <Anonamy> GreenJello, thanks !  ok so I don't quite follow
[03:04:38] <Anonamy> instead of this..  { latLng: centerlocations[0], name: centerlocationnames[0] },
[03:06:32] <Anonamy> { latLng: centerlocations.map(), centerlocationnames.map()},   ??
[03:12:47] *** Joins: dmgk (~dmgk@user/dmgk)
[03:13:08] <cis> Anonamy: markers = centerlocationnames.map((cln) => ({ latLng: cln[0], name: cln[1] })));
[03:13:23] <cis> Anonamy: or whatever the indexes of latLng/name are
[03:14:27] *** Joins: summersault (~summersau@179.221.251.16)
[03:15:19] <Anonamy> thanks cis I am going to try with that
[03:19:23] <GreenJello> Anonamy, markers: centerlocations.map((x, i) => ({ latLng: centerlocations[i], name: centerlocationnames[i] })))
[03:20:53] <Anonamy> thanks !
[03:22:19] <Anonamy> getting a strange bracket error msg but I am sure it will work
[03:24:12] <Anonamy> maybe I should define markers outside of the code that creates the Boostrap map
[03:25:03] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[03:26:28] <Anonamy> GreenJello, ok I added that line of code like this    https://paste.ubuntu.com/p/qNkVg3kfvG/
[03:27:13] <Anonamy> betI get a bracket error {  .. I tried replacing the semicolon with a comma but that did not work
[03:28:24] <GreenJello> comma, and one fewer )
[03:28:44] *** Quits: l__q_ (~modinfo@user/modinfo) (Ping timeout: 252 seconds)
[03:28:48] <Anonamy> woo hoo ! that did it
[03:28:57] <Anonamy> thanks GreenJello
[03:29:39] *** Joins: l__q_ (~modinfo@user/modinfo)
[03:29:52] *** Joins: orbyt_v10 (~orbyt_v10@172.92.4.78)
[03:31:16] <Anonamy> awesome, now I can input the coordinates into the database on the backend, and the frontend will put them on the map. ! Thanks for the help.
[03:32:15] *** Joins: CoolerY (~CoolerX@user/coolerx)
[03:34:10] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[03:34:30] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 258 seconds)
[03:34:48] *** Quits: wroathe (~wroathe@96-88-30-181-static.hfc.comcastbusiness.net) (Ping timeout: 256 seconds)
[03:38:02] *** Quits: CoolerY (~CoolerX@user/coolerx) (Ping timeout: 245 seconds)
[03:40:32] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:d98d:361b:6a7c:f3a4)
[03:41:11] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:ac0a:bb04:1852:c943) (Quit: Leaving)
[03:47:22] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 240 seconds)
[04:00:06] *** Joins: summersault (~summersau@179.221.251.16)
[04:06:30] *** Joins: gehn (~gehn@user/gehn)
[04:06:33] *** Quits: Lukeyface (~Luke@2.218.182.67) ()
[04:09:08] *** Joins: masber (~masber@178.197.196.20)
[04:09:09] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[04:09:22] *** Quits: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net) ()
[04:15:27] *** Joins: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net)
[04:16:50] *** Joins: dankle (~dankle@2603-7080-1800-2600-b47f-25ba-593b-34f1.res6.spectrum.com)
[04:20:42] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:6925:f7b9:512:9f85) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:26:38] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 258 seconds)
[04:30:03] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[04:30:24] *** Joins: hendursaga (~weechat@user/hendursaga)
[04:30:48] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[04:31:30] *** Quits: dankle (~dankle@2603-7080-1800-2600-b47f-25ba-593b-34f1.res6.spectrum.com) (Quit: Iridium IRC Client)
[04:32:05] *** Joins: Danishman (~Allan@2-104-144-110-cable.dk.customer.tdc.net)
[04:33:06] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 240 seconds)
[04:35:19] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 250 seconds)
[04:39:42] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:d98d:361b:6a7c:f3a4) (Ping timeout: 245 seconds)
[04:47:01] *** Joins: funhouse (~funhouse@user/funhouse)
[04:47:46] *** Joins: summersault (~summersau@179.221.251.16)
[04:51:50] *** Quits: LtHummus (~lthummus@97-126-113-251.tukw.qwest.net) (Quit: ZNC 1.8.2 - https://znc.in)
[04:52:06] *** Joins: JohnComputation2 (~JohnCompu@gateway/tor-sasl/johncomputation)
[04:52:19] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 258 seconds)
[04:53:16] *** Quits: JohnComputation (~JohnCompu@gateway/tor-sasl/johncomputation) (Remote host closed the connection)
[04:54:39] *** Joins: LtHummus (~lthummus@97-126-113-251.tukw.qwest.net)
[04:58:39] *** Quits: Atum_ (~IRC@user/atum/x-2392232) (Quit: Atum_)
[05:02:37] *** Quits: jmft2 (~JMFT@81.149.115.87.dyn.plus.net) (Ping timeout: 245 seconds)
[05:04:16] *** Joins: g00fy (~g00fy@user/g00fy)
[05:05:11] *** Joins: summersault (~summersau@179.221.251.16)
[05:06:20] *** Quits: g00fy (~g00fy@user/g00fy) (Remote host closed the connection)
[05:22:10] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 240 seconds)
[05:26:06] *** Quits: Danishman (~Allan@2-104-144-110-cable.dk.customer.tdc.net) (Quit: Leaving)
[05:29:01] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[05:30:50] *** Quits: xsperry (~as@user/xsperry) (Remote host closed the connection)
[05:31:34] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[05:34:31] *** Joins: jess (~jess@libera/staff/jess)
[05:35:09] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 276 seconds)
[05:36:04] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 256 seconds)
[05:38:05] *** Joins: kmh (~kmh@p200300df5f031500dc3f22e5691fdfcd.dip0.t-ipconnect.de)
[05:39:27] *** Quits: kmh_ (~kmh@p5dcc60d3.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[05:48:18] *** Quits: Bombo (atom@user/bombo) (Ping timeout: 240 seconds)
[05:48:51] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[05:48:52] *** Joins: IceMichael (~IceMichae@dynamic-046-114-158-142.46.114.pool.telefonica.de)
[05:49:48] *** Joins: Bombo (atom@p4ff006a8.dip0.t-ipconnect.de)
[05:49:49] *** Quits: Bombo (atom@p4ff006a8.dip0.t-ipconnect.de) (Changing host)
[05:49:49] *** Joins: Bombo (atom@user/bombo)
[05:51:33] *** Joins: mrdata_ (~mrdata@135-23-182-185.cpe.pppoe.ca)
[05:51:35] *** Joins: summersault (~summersau@179.221.251.16)
[05:51:48] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[05:53:27] *** Quits: IceMichael (~IceMichae@dynamic-046-114-158-142.46.114.pool.telefonica.de) (Ping timeout: 245 seconds)
[05:53:52] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 272 seconds)
[05:54:18] *** Quits: mrdata (~mrdata@user/mrdata) (Ping timeout: 240 seconds)
[05:55:57] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 258 seconds)
[05:59:29] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[06:07:21] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.2)
[06:08:13] *** Joins: summersault (~summersau@179.221.251.16)
[06:16:01] *** Joins: kenliten (~kenliten@190.80.246.235)
[06:17:52] *** Quits: masber (~masber@178.197.196.20) (Quit: Client closed)
[06:26:19] *** Quits: kenliten (~kenliten@190.80.246.235) (Ping timeout: 246 seconds)
[06:28:31] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[06:28:49] *** Joins: summersault (~summersau@179.221.251.16)
[06:31:07] <Slade> does javascript have any sort of sparse array concept?
[06:31:52] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 272 seconds)
[06:32:16] <sheetjs> there's no dense array concept to begin with
[06:32:18] <ljharb> Slade: yes, and sparse arrays are terrible
[06:32:21] <ljharb> yes there is.
[06:32:33] *** Joins: xsperry (~as@user/xsperry)
[06:32:34] <ljharb> in JS, a dense array is one where every index from 0 to length - 1 is an own property
[06:32:34] *** Quits: xsperry (~as@user/xsperry) (Excess Flood)
[06:32:41] <ljharb> a sparse array is an array where that isn't true
[06:33:01] <sheetjs> does the spec distinguish between those cases?
[06:33:03] <ljharb> an array index that isn't an own property is called a "hole". sparse arrays have holes.
[06:33:13] <ljharb> sheetjs: i mean, kind of?
[06:33:15] <ljharb> not with those terms
[06:33:15] <Slade> ljharb, so it'll use the memory for every element? if say i start at 15000 or something?
[06:33:22] <ljharb> Slade: it depends
[06:33:26] <ljharb> Slade: but also, there's no such thing as memory
[06:33:32] <ljharb> Slade: so if you're thinking in terms of memory you're already wrong
[06:33:52] <ljharb> Slade: obviously if you do `var a = []; a.length = 15000` it won't take up 15,000 items worth of memory
[06:34:09] <ljharb> Slade: but sparse arrays are also super slow. so you pay a huge cost.
[06:34:28] <Slade> n>  a=[];a[1500] = 'foo'; a[1900] = 'bar;a
[06:34:29] <jellobot> (fail) SyntaxError: Invalid or unexpected token
[06:34:34] <ljharb> sheetjs: some array methods use `HasProperty`, some don't
[06:34:34] <Slade> n>  a=[];a[1500] = 'foo'; a[1900] = 'bar';a
[06:34:35] <jellobot> (okay) [ <1500 empty items>, 'foo', <399 empty items>, 'bar' ]
[06:34:43] <ljharb> sheetjs: modern methods treat holes like a dense undefined
[06:34:58] <ljharb> Slade: but basically, never ever do that
[06:35:28] <Slade> ljharb, yea. its acceptable in lua, i wasnt sure if javascript did the raw thing, or not with it
[06:35:50] <Slade> n>  a={};a[1500] = 'foo'; a[1900] = 'bar';a
[06:35:50] <jellobot> (okay) { '1500': 'foo', '1900': 'bar' }
[06:36:16] <Slade> guess thats the way to do it
[06:36:38] <ljharb> its the same
[06:36:43] <ljharb> oh that’s an object
[06:36:49] *** Quits: mrdata_ (~mrdata@135-23-182-185.cpe.pppoe.ca) (Changing host)
[06:36:49] *** Joins: mrdata_ (~mrdata@user/mrdata)
[06:36:50] <ljharb> yeah if the indexes are keys, use an object
[06:37:11] <ljharb> only use an array for a conceptually atomic list
[06:37:17] <Slade> just coming up with a caching mechanism
[06:37:38] <ljharb> for what?
[06:38:31] <Slade> hm. so standard books/authors thing..   I'm doing a query to get a list of books, which have authorids..  i'll look up the authorid locally and fetch it if its missing
[06:39:26] <Slade> seems more intelligent than sending the authors info with each record.
[06:41:07] <Slade> i'm about to try rxdb to see if its more intelligent at this.
[06:43:12] *** mrdata_ is now known as mrdata
[06:47:05] *** Joins: matsaman (~matsaman@user/matsaman)
[06:48:19] *** Joins: Rockwood (~Rocky@user/rocky)
[06:49:38] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[06:53:54] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 240 seconds)
[06:53:58] <ljharb> Slade: sounds perfect for graphql
[06:57:24] <Slade> ljharb, indeed, this is a wrapper around graphql
[06:58:33] <ljharb> why does graphql need a wrapper?
[06:58:36] <ljharb> graphql usually *is* the wrapper
[07:00:20] <Slade> ljharb, there is no way to subquery a query, using apollo at least
[07:01:27] <Slade> i can write a fragment and directly query on the key. but thats about the limits
[07:01:40] <Slade> (assuming that key exists)
[07:02:31] <Slade> i'm certainly interested in your ideas on this matter tho :)
[07:02:32] *** Joins: zebrag (~chris@user/zebrag)
[07:03:08] <ljharb> and why aren't fragments sufficient?
[07:03:33] <Slade> i would still need to wrap logic around it for querying if it not here. (group query not just 1 by 1)
[07:04:42] <Slade> and can just query by id
[07:05:51] <Slade> i feel maybe i could replace apollos cache to make it more useful.
[07:06:26] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[07:10:37] <Slade> ljharb, any experience with rxdb?
[07:10:57] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 245 seconds)
[07:10:59] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[07:11:20] *** Joins: matsaman (~matsaman@user/matsaman)
[07:17:43] *** Quits: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070) (Quit: I Break D Ert)
[07:18:03] *** Joins: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070)
[07:22:25] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[07:24:09] *** Joins: Betal (~Betal@user/betal)
[07:27:20] *** Joins: Betal_ (~Betal@user/betal)
[07:28:52] *** Quits: Betal (~Betal@user/betal) (Ping timeout: 245 seconds)
[07:34:34] *** Betal_ is now known as Betal
[07:50:49] *** Joins: ferdna (~ferdna@user/ferdna)
[07:52:39] <l__q_> n> new Date() == new Date()
[07:52:40] <jellobot> (okay) false
[07:53:08] <l__q_> why?
[07:53:49] <l__q_> n> new Date() >= new Date()
[07:53:49] <jellobot> (okay) true
[07:53:54] <l__q_> hm
[07:54:04] <GreenJello> they're different objects
[07:54:09] *** Joins: IceMichael (~IceMichae@dynamic-046-114-152-175.46.114.pool.telefonica.de)
[07:54:44] <l__q_> right
[07:54:48] <l__q_> thanks
[07:56:52] <l__q_> n> Math.floor(new Date()) === Math.floor(new Date())
[07:56:52] <jellobot> (okay) true
[07:56:58] <l__q_> right
[07:57:16] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[07:58:33] *** Quits: IceMichael (~IceMichae@dynamic-046-114-152-175.46.114.pool.telefonica.de) (Ping timeout: 250 seconds)
[08:03:29] *** Joins: vysn (~vysn@user/vysn)
[08:07:13] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[08:10:42] *** Joins: WishBoy (~WishBoy@user/wishboy)
[08:11:30] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 240 seconds)
[08:14:24] *** Quits: Anonamy (~Anonamy@node-1w7jr9qgfucx13fyrpxrlwog9.ipv6.telus.net) (Remote host closed the connection)
[08:18:49] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[08:22:56] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:8127:f149:8078:593f)
[08:23:00] *** Quits: alyx (alyx@atheme/alyx) (Quit: AAAAAAAAA)
[08:24:12] *** Joins: Guest28 (~Guest28@c-73-162-10-115.hsd1.ca.comcast.net)
[08:24:13] *** Joins: crazyhorse (~crazyhors@14-203-50-65.tpgi.com.au)
[08:25:05] *** Quits: Guest28 (~Guest28@c-73-162-10-115.hsd1.ca.comcast.net) (Client Quit)
[08:27:22] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:8127:f149:8078:593f) (Ping timeout: 258 seconds)
[08:29:54] *** Joins: Akimb (~Akimb@86.100.13.100)
[08:37:17] *** Quits: Akimb (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[08:38:39] *** Joins: mickey84 (~user@user/mickey)
[08:40:25] *** Quits: mickey8 (~user@user/mickey) (Ping timeout: 244 seconds)
[08:40:26] *** mickey84 is now known as mickey8
[08:41:28] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[08:46:10] *** Quits: kmh (~kmh@p200300df5f031500dc3f22e5691fdfcd.dip0.t-ipconnect.de) (Quit: Leaving)
[08:50:10] *** Quits: name_ (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 240 seconds)
[08:55:00] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[08:58:23] *** Joins: wintersky (uid453465@id-453465.brockwell.irccloud.com)
[09:00:42] *** Joins: kmh (~kmh@p200300df5f031500dc05e9b97966e73c.dip0.t-ipconnect.de)
[09:02:57] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[09:08:00] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[09:12:18] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 240 seconds)
[09:18:49] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Remote host closed the connection)
[09:19:08] *** Joins: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net)
[09:20:29] *** Joins: Akimb (~Akimb@82-135-197-171.static.zebra.lt)
[09:21:52] *** Joins: IceMichael (~IceMichae@dynamic-046-114-152-175.46.114.pool.telefonica.de)
[09:22:43] *** Quits: stiv3n (~stiv3n@c-73-92-94-201.hsd1.ca.comcast.net) (Quit: WeeChat 3.0.1)
[09:22:57] *** Quits: Northwoods (~Northwood@103.223.9.125) (Ping timeout: 258 seconds)
[09:23:20] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Ping timeout: 258 seconds)
[09:24:39] *** Joins: Northwoods (~Northwood@180.188.236.125)
[09:26:04] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Read error: Connection reset by peer)
[09:28:49] *** Quits: WishBoy (~WishBoy@user/wishboy) (*.net *.split)
[09:28:50] *** Quits: LtHummus (~lthummus@97-126-113-251.tukw.qwest.net) (*.net *.split)
[09:28:50] *** Quits: BUSY (~BUSY@user/busy) (*.net *.split)
[09:28:50] *** Quits: codebam (~codebam@user/codebam) (*.net *.split)
[09:28:50] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi) (*.net *.split)
[09:28:50] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (*.net *.split)
[09:28:50] *** Quits: pizdets (~pizdets@183.182.111.62) (*.net *.split)
[09:28:50] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (*.net *.split)
[09:28:50] *** Quits: Isthmusi (~Isthmus@user/isveni) (*.net *.split)
[09:28:50] *** Quits: acidsys (~LSD@2.lsd.systems) (*.net *.split)
[09:28:50] *** Quits: irrgit (~irrgit@192.241.175.183) (*.net *.split)
[09:28:50] *** Quits: Jonno_FTW (~come@user/jonno-ftw/x-0835346) (*.net *.split)
[09:28:50] *** Quits: paulcarroty (~paulcarro@2001:470:69fc:105::216) (*.net *.split)
[09:28:51] *** Quits: deadbeat (~quassel@user/deadbeat) (*.net *.split)
[09:28:51] *** Quits: Popzi (~Popzi@95.150.161.138) (*.net *.split)
[09:28:51] *** Quits: michaelis (~michaelis@193.183.209.17) (*.net *.split)
[09:28:51] *** Quits: doc (~doc@user/doc) (*.net *.split)
[09:28:51] *** Quits: tabakhase (tabakhase@user/tabakhase) (*.net *.split)
[09:28:51] *** Quits: FightingFalcon (~none@user/fightingfalcon) (*.net *.split)
[09:28:51] *** Quits: unixcat64 (thelounge@fedora/hyperreal) (*.net *.split)
[09:28:51] *** Quits: dyCrazyEd (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (*.net *.split)
[09:29:08] *** Joins: WishBoy (~WishBoy@user/wishboy)
[09:29:08] *** Joins: LtHummus (~lthummus@97-126-113-251.tukw.qwest.net)
[09:29:08] *** Joins: BUSY (~BUSY@user/busy)
[09:29:08] *** Joins: codebam (~codebam@user/codebam)
[09:29:08] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb52-57.dhcp.inet.fi)
[09:29:08] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[09:29:08] *** Joins: pizdets (~pizdets@183.182.111.62)
[09:29:08] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[09:29:08] *** Joins: Isthmusi (~Isthmus@user/isveni)
[09:29:08] *** Joins: acidsys (~LSD@2.lsd.systems)
[09:29:08] *** Joins: irrgit (~irrgit@192.241.175.183)
[09:29:08] *** Joins: Jonno_FTW (~come@user/jonno-ftw/x-0835346)
[09:29:08] *** Joins: paulcarroty (~paulcarro@2001:470:69fc:105::216)
[09:29:08] *** Joins: deadbeat (~quassel@user/deadbeat)
[09:29:08] *** Joins: Popzi (~Popzi@95.150.161.138)
[09:29:08] *** Joins: michaelis (~michaelis@193.183.209.17)
[09:29:08] *** Joins: dyCrazyEd (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[09:29:08] *** Joins: doc (~doc@user/doc)
[09:29:08] *** Joins: tabakhase (tabakhase@user/tabakhase)
[09:29:08] *** Joins: FightingFalcon (~none@user/fightingfalcon)
[09:29:08] *** Joins: unixcat64 (thelounge@fedora/hyperreal)
[09:31:03] *** Quits: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net) (*.net *.split)
[09:31:03] *** Quits: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net) (*.net *.split)
[09:31:03] *** Quits: VectorX (~VectorX@user/vectorx) (*.net *.split)
[09:31:03] *** Quits: thekingofbandit (thekingofb@user/thekingofbandit) (*.net *.split)
[09:31:03] *** Quits: Albright (~Albright@149.28.13.173) (*.net *.split)
[09:31:03] *** Quits: zopsi (~zopsi@irc.dir.ac) (*.net *.split)
[09:31:03] *** Quits: abirkill (snoopy@d172-218-198-90.bchsia.telus.net) (*.net *.split)
[09:31:03] *** Quits: jellobot (~jellobot@104.248.16.142) (*.net *.split)
[09:31:03] *** Quits: fkrauthan (~fkrauthan@user/fkrauthan) (*.net *.split)
[09:31:03] *** Quits: shan (shan@user/shan) (*.net *.split)
[09:31:03] *** Quits: bestdesign (~bestdesig@order.a.whore.website) (*.net *.split)
[09:31:03] *** Quits: LIERO (~no@user/liero) (*.net *.split)
[09:31:03] *** Quits: simius (~simius@user/simius) (*.net *.split)
[09:31:03] *** Quits: phenom (~primus@user/phenom) (*.net *.split)
[09:31:04] *** Quits: albertlast (~nix@0exclusive.de) (*.net *.split)
[09:31:04] *** Quits: edk (edk@libera/staff/edk) (*.net *.split)
[09:31:04] *** Quits: s1b1 (~s1b1@user/s1b1) (*.net *.split)
[09:31:04] *** Quits: klys (~mdasoh@show.op8.us) (*.net *.split)
[09:31:04] *** Quits: Spydar007 (~spydar007@user/spydar007) (*.net *.split)
[09:31:04] *** Quits: Alexendoo (~Alexendoo@macleod.io) (*.net *.split)
[09:31:04] *** Quits: CoJaBo (~aztec@user/CoJaBo) (*.net *.split)
[09:31:04] *** Quits: qwedfg (~qwedfg@user/qwedfg) (*.net *.split)
[09:31:04] *** Quits: DK3 (~DK3@rs000042.fastrootserver.de) (*.net *.split)
[09:31:04] *** Quits: phryk (~totallyno@user/phryk) (*.net *.split)
[09:31:04] *** Quits: niko (~niko@libera/staff/niko) (*.net *.split)
[09:31:04] *** Quits: dka (~code-is-a@ns3059207.ip-193-70-33.eu) (*.net *.split)
[09:31:04] *** Quits: ringo_ (~ringo@157.230.117.128) (*.net *.split)
[09:31:04] *** Quits: Svitkona (~Svitkona@157.245.38.135) (*.net *.split)
[09:31:04] *** Quits: Cork (~Cork@user/cork) (*.net *.split)
[09:31:04] *** Joins: CoJaBo_ (~aztec@c-73-64-56-249.hsd1.pa.comcast.net)
[09:31:05] *** Joins: Albright_ (~Albright@149.28.13.173)
[09:31:07] *** Joins: LIERO_ (~no@vmi473477.contaboserver.net)
[09:31:07] *** Joins: simius_ (~simius@user/simius)
[09:31:07] *** Joins: dka_ (~code-is-a@ns3059207.ip-193-70-33.eu)
[09:31:08] *** Joins: buu_ (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net)
[09:31:08] *** Joins: lmat_ (~Lmat@c-68-58-60-231.hsd1.in.comcast.net)
[09:31:10] *** Joins: jellobot1 (~jellobot@104.248.16.142)
[09:31:19] *** Joins: edk (edk@libera/staff/edk)
[09:31:24] *** Joins: bestdesign (~bestdesig@order.a.whore.website)
[09:31:27] *** Joins: DK3 (~DK3@rs000042.fastrootserver.de)
[09:31:27] *** Joins: Svitkona1 (~Svitkona@157.245.38.135)
[09:31:34] *** Joins: zopsi (~zopsi@irc.dir.ac)
[09:31:34] *** ChanServ sets mode: +v jellobot1
[09:31:34] *** jellobot1 is now known as jellobot
[09:31:49] *** Joins: thekingofbandit (thekingofb@thunix.net)
[09:31:54] *** Quits: thekingofbandit (thekingofb@thunix.net) (Changing host)
[09:31:54] *** Joins: thekingofbandit (thekingofb@user/thekingofbandit)
[09:32:11] *** Joins: Alexendoo (~Alexendoo@macleod.io)
[09:32:12] *** Quits: greggerz (~greggerzm@2001:470:69fc:105::da2) (Ping timeout: 245 seconds)
[09:32:21] *** Joins: abirkill (snoopy@d172-218-198-90.bchsia.telus.net)
[09:32:21] *** Joins: phryk (~totallyno@user/phryk)
[09:32:23] *** Joins: phenom (~primus@user/phenom)
[09:32:23] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[09:32:23] *** Joins: fkrauthan (~fkrauthan@user/fkrauthan)
[09:32:28] *** Joins: Spydar007 (~spydar007@user/spydar007)
[09:32:35] *** Quits: nicoty[m] (~nicoty@user/nicoty) (Ping timeout: 250 seconds)
[09:32:50] *** Quits: seabass (~seabassfo@2001:470:69fc:105::187) (Ping timeout: 252 seconds)
[09:32:56] *** Quits: WillPittenger (~willpitte@2001:470:69fc:105::1bf) (Ping timeout: 256 seconds)
[09:33:01] *** Quits: paulcarroty (~paulcarro@2001:470:69fc:105::216) (Ping timeout: 272 seconds)
[09:33:02] *** Quits: falafel (~falafel@pool-96-255-70-50.washdc.fios.verizon.net) (Ping timeout: 245 seconds)
[09:33:09] *** Joins: ringo_ (~ringo@157.230.117.128)
[09:33:34] *** Quits: kadoban (~kadoban@user/kadoban) (Ping timeout: 272 seconds)
[09:33:35] *** Joins: shan (shan@user/shan)
[09:34:26] *** Joins: Cork (~Cork@user/cork)
[09:34:27] *** Quits: acidsys (~LSD@2.lsd.systems) (Excess Flood)
[09:34:50] *** Quits: greyrat_ (~greyrat@ip202.ip-51-178-215.eu) (Bye)
[09:36:39] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[09:36:44] *** Quits: loke[m] (~loke@2001:470:69fc:105::237) (Ping timeout: 272 seconds)
[09:36:44] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Killed (NickServ (GHOST command used by Sven_vB_)))
[09:36:45] *** Joins: Sven_vB_ (~sven@user/sven-vb/x-2094958)
[09:36:57] *** Quits: repo[m] (~repo@user/repo) (Ping timeout: 276 seconds)
[09:36:58] *** Joins: DCTWD (~dc@uz.utmappro.com)
[09:37:00] *** Joins: dmgk (~dmgk@user/dmgk)
[09:37:26] *** Quits: dyCrazyEd (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 272 seconds)
[09:37:49] *** Server sets mode: +Ccntz 
[09:38:09] *** Joins: AlbertLast (~nix@0exclusive.de)
[09:39:42] *** Quits: Northwoods (~Northwood@180.188.236.125) (Ping timeout: 245 seconds)
[09:39:49] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Ping timeout: 258 seconds)
[09:40:13] *** Joins: webstrand (~webstrand@user/webstrand)
[09:40:18] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 256 seconds)
[09:41:15] *** Joins: Northwoods (~Northwood@103.223.9.173)
[09:41:15] *** Joins: klys (~mdasoh@show.op8.us)
[09:41:19] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[09:45:07] *** Joins: PikaChokeMe (~PikaChoke@c-24-11-1-200.hsd1.ut.comcast.net)
[09:45:12] *** Joins: s1b1 (~s1b1@user/s1b1)
[09:45:48] <PikaChokeMe> https://gist.github.com/PikaChokeMe/0ee1c5d6e08658efbf8e6bd456b1173b I have all these members that like... sort of meet the same interface... technically they do because my working language is actually type script. Is there some fancy way to like slurp aggregate all these values together?
[09:46:41] <PikaChokeMe> like if I have object a, b, and c and the all have "haste" on them. Is there some fancy syntatic magic to just smash a.haste + b.haste + c.haste together?
[09:47:48] <PikaChokeMe> even better if I have a, b, and c and they all have haste and skill and wisdom, is there a way to get a new object d where d.haste = a.haste + b.haste + c.haste and d.skill = a.skill + b.skill + c.skill and so on?
[09:48:20] *** Quits: gambl0re (~gambl0re@24.140.237.124) (Ping timeout: 252 seconds)
[09:48:24] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[09:51:22] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-118.prtc.net)
[09:52:13] <sheetjs> [a,b,c].reduce((s,x) => s+x.haste, 0)
[09:52:46] <GreenJello> you might have to tell typescript what type the array is here, though
[09:53:30] <GreenJello> that you're only concerned with the objects having the haste property
[09:53:45] <sheetjs> general problem: [a,b,c].reduce((s,x) => { Object.entries(x).forEach(([k,v]) => s[k] = (s[k]||0) + v); return s; }, 0)
[09:54:39] <GreenJello> or the easy solution is to use lodash's sumBy
[09:54:46] <GreenJello> which should already have the right types
[09:55:29] <PikaChokeMe> :O
[09:55:35] <PikaChokeMe> https://gist.github.com/PikaChokeMe/a2cc6799d48d0f2d94a488601110881a
[09:56:48] <PikaChokeMe> How performant is this?
[09:57:43] <GreenJello> measure and find out if it's a problem
[09:58:42] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-118.prtc.net) (Quit: Client closed)
[09:58:53] <GreenJello> it should be worse than writing out the property accesses and building the result object explicitly, but unclear if that matters in your case
[10:00:17] <GreenJello> and difference is smaller if the objects end up being in dictionary mode for other reasons
[10:01:10] *** Joins: niko (~niko@libera/staff/niko)
[10:02:36] <ljharb> Slade: nope
[10:02:58] <ljharb> PikaChokeMe: performance rarely matters anyways
[10:04:57] *** Joins: repo[m] (~repo@user/repo)
[10:05:07] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[10:05:19] <PikaChokeMe> monkaS
[10:06:39] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[10:07:02] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 258 seconds)
[10:11:41] *** Joins: greggerz (~greggerzm@2001:470:69fc:105::da2)
[10:13:07] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:ac0a:bb04:1852:c943)
[10:14:52] *** Joins: kadoban (~kadoban@user/kadoban)
[10:20:24] *** Joins: paulcarroty (~paulcarro@2001:470:69fc:105::216)
[10:27:08] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[10:27:56] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 252 seconds)
[10:33:45] *** Joins: seabass (~seabassfo@2001:470:69fc:105::187)
[10:35:01] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[10:36:07] *** Joins: Guest93 (~Guest93@p200300c8cf22760098fff3922573bf05.dip0.t-ipconnect.de)
[10:36:57] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:ac0a:bb04:1852:c943) (Quit: Leaving)
[10:42:26] *** Quits: orbyt_v10 (~orbyt_v10@172.92.4.78) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:44:38] *** Joins: Deide (~deide@user/deide)
[10:45:02] <Slade> ljharb, little cliff notes version for react if you're ever interested. https://github.com/cvara/rxdb-hooks    i've a fan of the concepts of the big boy version (couchdb)  which is the reason it piques my interest.
[10:45:21] <Slade> cliff notes/1 pager explanation:P
[10:45:51] <ljharb> it would take a lot to beat MySQL/postgres
[10:45:56] *** Joins: mei (~mei@user/mei)
[10:46:00] <ljharb> a lot more than interesting
[10:46:18] <Slade> oh well rxdb is browser side. so..  but i love postgresql
[10:46:41] *** Joins: loke[m] (~loke@2001:470:69fc:105::237)
[10:47:49] <Slade> couchdb is a versioned documentdb that handles giant attachments and speaks native rest. and uses javascript for conflict resolution.  different use cases than postgresql
[10:50:50] <Slade> tho with how badass postgresqls jsonb handling is becoming and autographql tools like hasura, the number of use cases is shrinking rapidly
[10:52:52] *** Joins: hygl (uid16621@id-16621.tinside.irccloud.com)
[10:54:05] <ljharb> a browser-side db is kind of silly
[10:54:13] <ljharb> Slade: what use cases do you think?
[10:54:19] <ljharb> Slade: pg is an amazing json document store
[10:54:25] <Slade> pg is amazing
[10:55:14] <ljharb> right but i mean, "different use cases" is what mongo people say, but there doesn't exist a use case where mongo is the best choice
[10:55:24] <ljharb> couchdb is what npm used for a long time
[10:56:12] <Slade> oh, use cases for couch over postgres is basically going to be constrained for large data, and eventual concurrent scenario these days
[10:56:23] <Slade> large data.. big blobs of data, not lots of records
[10:59:00] <Slade> browser-side db, i'm actually playing with for a mobile app.. keep the data the user needs so its more readily available.  i'm not convinced i cant wrap something nice around apollo yet tho
[11:01:31] *** Joins: nicoty[m] (~nicoty@user/nicoty)
[11:02:01] <ljharb> a mobile app should use the native solution for the OS
[11:02:04] <ljharb> coredata on ios, eg
[11:02:38] *** Joins: WillPittenger (~willpitte@2001:470:69fc:105::1bf)
[11:04:08] <Slade> rxdb plugs into sqlite on mobile.
[11:06:12] <Slade> hoping i can send push notifications to tell the app to grab new data
[11:07:06] <ljharb> sure but on ios, coredata is the best choice
[11:07:12] <ljharb> and i'd be surprised if sqlite was the best choice on android
[11:08:57] <Slade> i wonder if asyncstorage uses those.  i use it for unstructured data
[11:09:20] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[11:10:40] <Slade> hmm i suspect this is a different coredata. https://www.npmjs.com/package/react-native-coredata
[11:11:19] *** Joins: jazzy (~jaziz@2600:380:8562:6b2:8c7e:762:5a80:c3e1)
[11:16:02] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Ping timeout: 258 seconds)
[11:16:47] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Ping timeout: 245 seconds)
[11:17:27] *** Joins: Alvin_ (~Alvin@122.162.213.4)
[11:20:38] *** Quits: Aayush (~Alvin@user/aayush) (Ping timeout: 258 seconds)
[11:20:40] <ljharb> Slade: no, i think that's the right one.
[11:20:43] <ljharb> Slade: you're using RN, yes?
[11:21:03] <Slade> ljharb, yea, it really seems like the sanest choice
[11:21:30] <Slade> well according to that doc, coredata is android too
[11:21:58] <ljharb> there you go then
[11:23:21] <Slade> looked at flutter.  thats a lot of koolaid
[11:23:38] <Slade> writing it native sounds like a mistake
[11:25:22] <ljharb> yeah i wouldn't go with flutter
[11:26:29] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[11:26:59] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[11:31:17] <Slade> ljharb, been pretty impressed with RN so far, actually using expo so far.
[11:33:23] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-51.prtc.net)
[11:33:36] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-51.prtc.net) (Write error: Broken pipe)
[11:34:17] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-118.prtc.net)
[11:35:08] *** Joins: epolanski (uid312403@id-312403.brockwell.irccloud.com)
[11:37:43] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:39:20] *** Quits: lightstalker (~BT@user/lightstalker) (Ping timeout: 252 seconds)
[11:39:34] *** Joins: lightstalker (~BT@user/lightstalker)
[11:45:33] *** Quits: LiftLeft (~LiftLeft@154.21.28.208) (Ping timeout: 258 seconds)
[11:49:05] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[11:54:05] *** Quits: crazyhorse (~crazyhors@14-203-50-65.tpgi.com.au) (Remote host closed the connection)
[12:01:12] *** Quits: codebam (~codebam@user/codebam) (Ping timeout: 272 seconds)
[12:05:35] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Read error: Connection reset by peer)
[12:13:52] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[12:14:28] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Remote host closed the connection)
[12:16:39] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[12:16:42] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[12:21:35] *** Quits: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net) (Ping timeout: 258 seconds)
[12:30:12] *** Joins: Guest92 (Guest92@2600:3c01::f03c:92ff:feaf:a31)
[12:31:52] *** Quits: Guest92 (Guest92@2600:3c01::f03c:92ff:feaf:a31) (Client Quit)
[12:32:13] *** Joins: Guest92 (Guest92@2600:3c01::f03c:92ff:feaf:a31)
[12:32:32] *** Quits: silly_ (~silly@user/silly) (Read error: Connection reset by peer)
[12:33:36] *** Quits: Guest92 (Guest92@2600:3c01::f03c:92ff:feaf:a31) (Client Quit)
[12:33:58] *** Joins: Guest68 (Guest68@2600:3c01::f03c:92ff:feaf:a31)
[12:34:51] *** Quits: Guest68 (Guest68@2600:3c01::f03c:92ff:feaf:a31) (Client Quit)
[12:35:23] *** Joins: Guest68 (Guest68@2600:3c01::f03c:92ff:feaf:a31)
[12:35:41] *** Quits: Guest68 (Guest68@2600:3c01::f03c:92ff:feaf:a31) (Client Quit)
[12:35:49] *** Joins: coc0nut_ (~coc0nut@user/coc0nut)
[12:35:50] *** Joins: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[12:35:50] *** Quits: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Changing host)
[12:35:50] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[12:36:02] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:36:19] *** Joins: Guest68 (Guest68@2600:3c01::f03c:92ff:feaf:a31)
[12:36:32] *** Quits: coc0nut (~coc0nut@user/coc0nut) (Ping timeout: 256 seconds)
[12:37:13] *** Quits: Guest68 (Guest68@2600:3c01::f03c:92ff:feaf:a31) (Client Quit)
[12:37:30] *** Joins: Guest68 (Guest68@2600:3c01::f03c:92ff:feaf:a31)
[12:38:23] *** Quits: Guest68 (Guest68@2600:3c01::f03c:92ff:feaf:a31) (Client Quit)
[12:38:31] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[12:38:36] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:38:37] *** Joins: Guest68 (Guest68@2600:3c01::f03c:92ff:feaf:a31)
[12:39:30] *** Quits: Guest68 (Guest68@2600:3c01::f03c:92ff:feaf:a31) (Client Quit)
[12:40:15] *** Joins: Guest9259 (Guest92@2600:3c01::f03c:92ff:feaf:a31)
[12:41:37] *** Quits: Guest9259 (Guest92@2600:3c01::f03c:92ff:feaf:a31) (Client Quit)
[12:41:49] *** Joins: Guest92 (Guest92@2600:3c01::f03c:92ff:feaf:a31)
[12:43:02] *** Quits: l__q_ (~modinfo@user/modinfo) (Ping timeout: 245 seconds)
[12:43:12] *** Quits: Guest92 (Guest92@2600:3c01::f03c:92ff:feaf:a31) (Client Quit)
[12:43:26] *** Joins: Guest92 (Guest92@2600:3c01::f03c:92ff:feaf:a31)
[12:44:20] *** Quits: Guest92 (Guest92@2600:3c01::f03c:92ff:feaf:a31) (Client Quit)
[12:44:31] *** Joins: Guest92 (Guest92@2600:3c01::f03c:92ff:feaf:a31)
[12:44:41] *** Quits: Guest92 (Guest92@2600:3c01::f03c:92ff:feaf:a31) (Client Quit)
[12:44:43] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:45:20] *** Joins: Guest36 (~Guest36@pool-138.248.176.62.dynamic.wobline-ip.de)
[12:50:00] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:ac0a:bb04:1852:c943)
[12:50:16] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[12:55:52] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-118.prtc.net) (Ping timeout: 246 seconds)
[12:58:36] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:04:57] <Koopz> who's the guy responsible for the constructor of Map?
[13:05:45] <Koopz> feels like they intentionally wanted to make it a pain in the ass just so everyone continues using Objects instead
[13:06:28] *** Joins: straykitten (~straykitt@subs24-116-206-8-30.three.co.id)
[13:06:30] *** Quits: straykitten (~straykitt@subs24-116-206-8-30.three.co.id) (Remote host closed the connection)
[13:13:01] <epolanski> hey all, I have a dist folder that is the output of the build
[13:13:23] <epolanski> is there some cli tool that allows me to get some stats about the folder, like weight, weight per file type, etc?
[13:13:32] <epolanski> du -h isn't really user friendly
[13:14:08] *** Quits: YoungFrog (~youngfrog@2a02:a03f:c21b:f900:6d52:8e54:ebf0:b3f1) (Quit: ZNC 1.7.x-git-3-96481995 - https://znc.in)
[13:14:27] *** Joins: YoungFrog (~youngfrog@39.129-180-91.adsl-dyn.isp.belgacom.be)
[13:15:47] *** Joins: Harlin_ (~DonQixote@lsp-nmrx-178-215.lsp01.numerex.com)
[13:17:11] *** Joins: Harlin__ (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net)
[13:18:02] *** Quits: Harlin (~DonQixote@2603:300b:663:e800:9551:fbe6:2bbc:5130) (Ping timeout: 245 seconds)
[13:18:30] *** Joins: dyCrazyEd (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[13:21:51] *** Quits: Harlin_ (~DonQixote@lsp-nmrx-178-215.lsp01.numerex.com) (Ping timeout: 276 seconds)
[13:22:15] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:ac0a:bb04:1852:c943) (Quit: Leaving)
[13:22:54] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[13:27:01] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[13:27:03] *** Quits: coc0nut_ (~coc0nut@user/coc0nut) (Ping timeout: 276 seconds)
[13:28:21] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[13:32:08] *** Quits: EPic_ (apic@apic.name) (Quit: Reconnecting)
[13:32:16] *** Joins: APic (apic@apic.name)
[13:35:16] *** Joins: entuland (~entuland@user/entuland)
[13:36:37] *** Quits: jazzy (~jaziz@2600:380:8562:6b2:8c7e:762:5a80:c3e1) (Remote host closed the connection)
[13:36:57] *** Joins: jazzy (~jaziz@2600:380:8562:6b2:8c7e:762:5a80:c3e1)
[13:38:41] *** Quits: PikaChokeMe (~PikaChoke@c-24-11-1-200.hsd1.ut.comcast.net) (Quit: Leaving)
[13:40:36] *** jazzy is now known as jazzy2
[13:40:52] *** jazzy2 is now known as jazzy
[13:41:12] *** jazzy is now known as Jazzy
[13:41:19] *** Jazzy is now known as jazzy
[13:44:27] *** Quits: hassoon_ (hassoon@grape.ircnow.org) (Changing host)
[13:44:27] *** Joins: hassoon_ (hassoon@user/hassoon)
[13:47:19] <hassoon_> 'morning
[13:47:27] *** hassoon_ is now known as hassoon
[14:03:26] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Quit: WeeChat 3.2)
[14:03:42] *** Joins: CoolerX (~CoolerX@user/coolerx)
[14:21:46] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[14:22:37] *** Parts: LIERO_ (~no@vmi473477.contaboserver.net) ()
[14:22:59] *** Joins: LIERO (~no@user/liero)
[14:25:56] *** Joins: Guest0 (Guest0@2600:3c01::f03c:92ff:feaf:a31)
[14:26:50] *** Quits: Guest0 (Guest0@2600:3c01::f03c:92ff:feaf:a31) (Client Quit)
[14:29:02] *** Joins: vysn (~vysn@user/vysn)
[14:32:21] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[14:37:38] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 272 seconds)
[14:38:31] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:bdd3:9575:8c0c:314)
[14:39:28] *** Quits: Guest36 (~Guest36@pool-138.248.176.62.dynamic.wobline-ip.de) (Ping timeout: 272 seconds)
[14:46:19] *** Quits: Guest93 (~Guest93@p200300c8cf22760098fff3922573bf05.dip0.t-ipconnect.de) (Quit: Client closed)
[14:56:11] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[15:07:03] *** Joins: pulse (~pulse@user/pulse)
[15:13:01] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 268 seconds)
[15:14:45] *** Joins: wolfshappen (~waff@irc.furworks.de)
[15:17:09] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 258 seconds)
[15:18:28] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[15:27:14] *** Joins: skidz (sid506825@user/mucholoco)
[15:27:32] <skidz> hey. why do not i have in my chrome js console the financial() function?
[15:30:25] <skidz> never mind.
[15:31:00] <skidz> how do i parse a number of either 2, 2.0, or 2, to a fixed number of decimals number?
[15:31:20] <skidz> third should be 2.
[15:31:50] *** Quits: wolfshappen (~waff@irc.furworks.de) (Quit: later)
[15:32:00] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[15:32:14] *** Joins: wolfshappen (~waff@irc.furworks.de)
[15:33:02] *** Quits: Harlin__ (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net) (Read error: Connection reset by peer)
[15:33:16] *** Joins: Harlin__ (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net)
[15:37:49] <paulcarroty> .toFixed()
[15:44:17] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[15:45:08] *** Quits: strive (~strive@user/strive) (Ping timeout: 258 seconds)
[15:46:27] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Remote host closed the connection)
[15:47:05] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[15:52:15] *** Joins: summersault (~summersau@179.221.251.16)
[15:57:17] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[15:59:15] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[16:03:16] *** Parts: dmgk (~dmgk@user/dmgk) ()
[16:21:28] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[16:22:08] *** Joins: CoolerX (~CoolerX@user/coolerx)
[16:26:37] *** Quits: Enissay (~Enissay@user/enissay) (Quit: WeeChat 3.0)
[16:27:21] *** Joins: Enissay (~Enissay@user/enissay)
[16:32:41] *** Quits: Enissay (~Enissay@user/enissay) (Quit: WeeChat 3.0)
[16:32:50] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 256 seconds)
[16:33:26] *** Joins: Enissay (~Enissay@user/enissay)
[16:37:31] *** Joins: Guest87 (~Guest87@p200300c8cf22760098fff3922573bf05.dip0.t-ipconnect.de)
[16:38:23] *** Quits: APic (apic@apic.name) (Read error: error:1408F10B:SSL routines:ssl3_get_record:wrong version number)
[16:41:37] *** Joins: summersault (~summersau@179.221.251.16)
[16:43:32] *** Joins: APic (apic@apic.name)
[16:44:56] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 272 seconds)
[16:47:54] *** Quits: celphi (uid97751@user/celphi) (Quit: Connection closed for inactivity)
[16:49:48] *** Joins: mat001 (~mat001@c-73-223-64-126.hsd1.ca.comcast.net)
[16:59:05] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:44a5:d8a3:809:6e7e)
[17:03:10] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi)
[17:18:06] *** Joins: N4buc0- (~N4buc0@2001:1284:f013:588:9d9a:dab7:dccc:fa80)
[17:20:58] *** Quits: N4buc0 (~N4buc0@2001:1284:f016:1112:26cc:c84b:ec1e:fb2) (Ping timeout: 258 seconds)
[17:21:49] <Koopz> DataTables...
[17:21:53] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 268 seconds)
[17:22:04] <Koopz> my most favourite thing while simultanously the most annoying one
[17:22:55] *** Joins: wovixo (~wovixo@128.104.205.49)
[17:23:35] <Koopz> i'm currently tinkering on a site that uses halfmoon css and now am wondering how i'm gonna deal with the table pagination
[17:24:24] <Koopz> would be awesome if i could somehow overwrite the renderer for it to spit out the html i need
[17:27:54] *** Joins: pulse (~pulse@user/pulse)
[17:34:47] *** Svitkona1 is now known as Svitkona
[17:36:47] *** Quits: cisme_ (~cisme_@2600:1700:d980:1a40:ac44:5063:41b3:193a) (Ping timeout: 245 seconds)
[17:50:08] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[17:50:27] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[17:50:58] *** Joins: mei (~mei@user/mei)
[17:53:00] *** Quits: Cork (~Cork@user/cork) (Quit: .)
[17:53:33] *** Quits: arthurpbs (~arthurpbs@168.121.98.198) (Ping timeout: 276 seconds)
[17:54:34] *** Quits: LSD (~LSD@2.lsd.systems) (Ping timeout: 240 seconds)
[17:54:47] *** Joins: Cork (~Cork@user/cork)
[17:55:21] *** Quits: siyb1 (~siyb@h081217185055.dyn.cm.kabsi.at) (Ping timeout: 248 seconds)
[17:55:53] *** Joins: summersault (~summersau@179.221.251.16)
[17:57:37] *** Joins: siyb1 (~siyb@h081217185055.dyn.cm.kabsi.at)
[17:57:55] *** Joins: NoiseEee (~NoiseEee@178.128.153.219)
[17:58:32] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[17:59:58] *** theglass is now known as glass
[18:00:02] *** glass is now known as theglass
[18:01:11] <FlorianBad> If I want to set the a style propriety in Javascript but I want that propriety's name to be in a var, isn't that the right way to do it?  `ele.style[ele_prop] = value;`
[18:01:37] <FlorianBad> so e.g. ele_prop = 'margin-left'
[18:03:53] <Koopz> ele.style.eleProp = value
[18:04:42] *** Joins: LSD (~LSD@2.lsd.systems)
[18:04:49] <Koopz> style properties are available in camelCase form
[18:05:39] <Koopz> background-color: #fff === element.style.backgroundColor = '#fff';
[18:06:14] <FlorianBad> hmm, that seems so wrong
[18:06:24] <FlorianBad> I mean it "feels" wrong
[18:07:14] <FlorianBad> how could javascript know that ele.style.eleProp is not an actual 'eleProp' propriety when ele.style.display is the 'display' propriety?
[18:07:24] <Koopz> well you can't use hyphens in variable names so unless you want to clutter your code with square brackets i don't see any alternative
[18:07:55] <Koopz> property*
[18:08:01] <FlorianBad> Ok so I think you misunderstood my question
[18:08:14] <FlorianBad> I'll try to explain better
[18:09:24] <FlorianBad> Let's say I have  `var prop_name = 'margin-left';`  and  I want to set `ele.style.marginLeft = value;` but without using "marginLeft", using my var instead, prop_name. How do I do this?
[18:10:24] <FlorianBad> Ah... someone reminded me of setProperty on #css :)
[18:10:30] <FlorianBad> indeed
[18:12:49] *** Quits: Akimb (~Akimb@82-135-197-171.static.zebra.lt) (Read error: Connection reset by peer)
[18:14:50] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[18:22:52] *** Joins: cisme_ (~cisme_@2600:1700:d980:1a40:d3b6:62fc:f830:d1f5)
[18:23:06] *** Quits: cisme_ (~cisme_@2600:1700:d980:1a40:d3b6:62fc:f830:d1f5) (Changing host)
[18:23:06] *** Joins: cisme_ (~cisme_@user/cisme/x-1186982)
[18:25:28] *** Quits: happymeal` (~happymeal@75-28-166-198.lightspeed.tukrga.sbcglobal.net) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[18:25:46] *** Joins: momus (~momus@ec2-18-195-22-48.eu-central-1.compute.amazonaws.com)
[18:25:48] *** Joins: happymeal (~happymeal@user/happymeal)
[18:29:35] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[18:30:07] <no_gravity> Is there any difference in "function f() {return}" and "function f() {}"?
[18:30:16] *** Quits: Guest87 (~Guest87@p200300c8cf22760098fff3922573bf05.dip0.t-ipconnect.de) (Quit: Ping timeout (120 seconds))
[18:30:41] <no_gravity> n> function f1() {}; function f2() {return}; [f1(),f2()]
[18:30:42] <jellobot> (okay) [ undefined, undefined ]
[18:30:48] *** Joins: Guest87 (~Guest87@p200300c8cf22760098fff3922573bf05.dip0.t-ipconnect.de)
[18:33:19] <DPA> n>function f1() {}; function f2() {return}; [f1,f2].map(x=>x.toString())
[18:33:20] <jellobot> (okay) [ 'function f1() {}', 'function f2() {return}' ]
[18:33:58] <no_gravity> DPA: Yeah. I mean difference when called :)
[18:34:15] <DPA> I don't think so
[18:35:44] *** Joins: gambl0re (~gambl0re@24.140.237.124)
[18:35:51] *** Joins: summersault (~summersau@179.221.251.16)
[18:41:05] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[18:41:10] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[18:41:20] *** Joins: t3nj1n (~t3nj1n@pool-96-246-146-100.nycmny.fios.verizon.net)
[18:41:40] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[18:45:29] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 248 seconds)
[18:46:00] *** Quits: jazzy (~jaziz@2600:380:8562:6b2:8c7e:762:5a80:c3e1) (Ping timeout: 256 seconds)
[18:48:48] *** Joins: silly (~silly@user/silly)
[18:50:15] *** Parts: kinabalu- (~kinabalu@198.23.166.98) ()
[18:50:24] *** Joins: kinabalu (~kinabalu@about/java/kinabalu)
[18:53:04] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[18:53:33] *** Joins: hendursaga (~weechat@user/hendursaga)
[19:02:17] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[19:02:39] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[19:04:19] *** Quits: mven (~mven@072-179-001-159.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[19:09:06] *** Joins: orbyt_v10 (~orbyt_v10@172.92.4.78)
[19:10:13] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df05f-197.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:10:28] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[19:13:30] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 268 seconds)
[19:15:14] *** Joins: Deneb (~johnch@93.125.7.51.dyn.plus.net)
[19:15:19] *** Joins: stiv3n (~stiv3n@184.170.252.218)
[19:16:05] <no_gravity> How would you guys record a short clip about clicking a button on a website?
[19:17:34] <cis> no_gravity: a video clip? an animation? a gif? animated DOM elements?
[19:18:05] <IceMichael> and which operating system?
[19:18:29] <IceMichael> on macOS use quicktime and done
[19:18:48] <no_gravity> Found it! There is "SimpleScreenRecorder" in my Linux distro which does it nicely.
[19:19:21] <Deneb> I am a little stuck with a javascript problem, namely, how to wait until an event is complete. The code is listening to a freader.onload(0) event and loading the contents into a textarea. That part works. However, I then need to do something with textarea.value but can't begin to take the action until the onload event is complete. I tried hooking into the textarea.input event using addEventListner() but it never triggered. In any case,
[19:19:21] <Deneb> program execution runs on and the function exits before the onload event is complete.
[19:19:45] *** Quits: Harlin__ (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net) (Quit: Leaving)
[19:19:51] *** Joins: summersault (~summersau@179.221.251.16)
[19:20:01] *** Joins: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net)
[19:22:17] *** Parts: loke (~loke@junk.nocrew.org) (Leaving)
[19:22:34] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[19:22:48] <Deneb> a snippet of my code: https://dpaste.org/St34
[19:23:37] *** Joins: summersault (~summersau@179.221.251.16)
[19:24:29] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[19:24:31] <Deneb> I am calling readFromTape(); line 26 return the correct result and works fine however lines 28-34 do not. The function exits before the event triggered by line 33 is complete.
[19:24:57] *** Joins: duds- (~duds-@gateway/tor-sasl/duds)
[19:25:59] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[19:26:54] *** Joins: iffraff (~quassel@136.49.178.170)
[19:27:55] *** Joins: summersault (~summersau@179.221.251.16)
[19:28:19] <Deneb> I tried setting a value in readFile() line 14, but how do I wait check for that value in readFromTape()? JavaScript does not seem to have any concept of a sleep or wait function and I discovered quickly that a while loop a bad idea!
[19:31:18] <Deneb> its all weel and good to have things event driven, but sometimes one needs to wait until something is complete before moving on... preferably without locking up the browser....
[19:32:14] <cis> Deneb: look into Promises and async/await functions
[19:33:42] <Deneb> cis: thanks. reading up on it.
[19:34:00] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[19:34:45] <FlorianBad> How do I concat a key name inside an object declaration? For example  `object  = { a : 1,  [foo+bar] : 2 }`  If I do that my recent chrome has no problem but an old one fails on the [
[19:37:18] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[19:38:30] <deadbeat> FlorianBad: object = { a : 1}; object[foo+bar] = 2; this is probably available in older browsers, just from the top of my head
[19:39:02] <FlorianBad> ok but is there really no way to do it in the same  {}   ?
[19:39:47] <deadbeat> well older browser versions do not support the syntax, so if you want to support them and still use that syntax, you have to check if there is a polyfill for that, don't know
[19:40:17] <FlorianBad> ok
[19:40:35] *** Joins: junktext (~junktext@109.201.152.168)
[19:41:33] <deadbeat> here you find a compatibility list, "computed property name" is what you are using here https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer#browser_compatibility
[19:42:33] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 248 seconds)
[19:43:51] *** Quits: bodiccea (~bodiccea@user/bodiccea) (Read error: Connection reset by peer)
[19:45:57] *** Joins: codebam (~codebam@user/codebam)
[19:46:12] *** Quits: N4buc0- (~N4buc0@2001:1284:f013:588:9d9a:dab7:dccc:fa80) (Remote host closed the connection)
[19:46:23] *** Joins: N4buc0- (~N4buc0@2001:1284:f013:588:3639:135d:ad58:d3e8)
[19:47:22] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[19:48:52] *** Joins: bodiccea (~bodiccea@user/bodiccea)
[19:52:47] <silly> you can use babel to transpile your code for older browsers
[19:55:50] <cis> FlorianBad: const foo = { [`${bar}${baz}`] : "qux" };
[19:59:40] *** LSD is now known as acidsys
[20:00:52] <FlorianBad> cis: hmm, that doesn't seem to be working
[20:01:12] <FlorianBad> ah, wait, you still put the []
[20:01:49] <cis> oh, I missed that losing those was a requirement
[20:01:56] <cis> how old is the browser you're targeting?
[20:01:59] *** Joins: summersault (~summersau@179.221.251.16)
[20:02:38] <FlorianBad> Chrome 37
[20:03:10] <cis> wow, from 2014
[20:04:08] <FlorianBad> lol  I'm just doing some testing and I'm trying to do my best to be reasonnably compatible
[20:04:25] <FlorianBad> or more than reasonnably, really as much as possible
[20:05:16] <cis> you probably don't have to go back that far, unless you know your users are locked in for some reason
[20:06:02] <FlorianBad> So this "computed" thing is compatible since 2015 then?
[20:06:48] *** Joins: mattil (~mattilinn@87-92-142-109.rev.dnainternet.fi)
[20:06:54] *** Joins: celphi (uid97751@user/celphi)
[20:08:19] *** Quits: mattil (~mattilinn@87-92-142-109.rev.dnainternet.fi) (Remote host closed the connection)
[20:08:46] *** Joins: mattil (~mattilinn@87-92-142-109.rev.dnainternet.fi)
[20:12:27] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[20:12:54] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[20:13:42] *** Joins: summersault (~summersau@179.221.251.16)
[20:14:13] <entuland> since "Computed property names" are marked as 47 in that table for chrome, yes, pretty much so
[20:15:34] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[20:15:45] *** Joins: mattilinnanvuori (~mattilinn@87-92-142-109.rev.dnainternet.fi)
[20:16:11] *** Joins: summersault (~summersau@179.221.251.16)
[20:19:02] *** Quits: mattilinnanvuori (~mattilinn@87-92-142-109.rev.dnainternet.fi) (Remote host closed the connection)
[20:20:06] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[20:20:28] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[20:20:46] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Remote host closed the connection)
[20:21:53] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[20:23:23] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[20:23:26] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Remote host closed the connection)
[20:24:02] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[20:24:42] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Client Quit)
[20:24:57] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[20:25:46] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[20:31:47] *** Quits: anton (anton@tloks.com) (Ping timeout: 245 seconds)
[20:35:16] *** Joins: Guest12 (~Guest12@2001:861:3701:db70:959:58fc:2780:1614)
[20:36:48] <ljharb> FlorianBad: but, use babel
[20:37:11] *** Quits: Guest12 (~Guest12@2001:861:3701:db70:959:58fc:2780:1614) (Quit: Client closed)
[20:38:43] *** Joins: Rockwood (~Rocky@user/rocky)
[20:39:19] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[20:40:58] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[20:41:24] <FlorianBad> ljharb: uh?
[20:42:27] *** Joins: Betal (~Betal@user/betal)
[20:42:31] *** Joins: CoolerX (~CoolerX@user/coolerx)
[20:43:34] *** Joins: vysn (~vysn@user/vysn)
[20:44:32] *** Joins: Neuromancer (~Neuromanc@user/neuromancer)
[20:44:34] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 268 seconds)
[20:49:10] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[20:50:22] <Deneb> is there any way to trigger a file open dialogue without having to use .click() ?
[20:50:57] <GreenJello> don't think so, why?
[20:51:11] *** Quits: orbyt_v10 (~orbyt_v10@172.92.4.78) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:52:12] <Rockwood> entuland, o/
[20:53:18] <Deneb> well, I am wanting to prompt the user to open a file on disk, but, the .click() event returns immediately. I am loading the file inot a textarea and then need to to something with it.
[20:54:14] <GreenJello> add a 'change' event listener to the input, which will trigger when they select a file
[20:54:43] <GreenJello> and then you can use FileReader to get the contents
[20:54:58] *** Quits: mattil (~mattilinn@87-92-142-109.rev.dnainternet.fi) (Read error: Connection reset by peer)
[20:55:07] <Deneb> GreenJello: tried that, but the event didn't trigger. Seems it only has an input event anyway.
[20:55:35] <entuland> a live link or a fiddle may help to show your actual code
[20:56:01] *** Joins: pulse (~pulse@user/pulse)
[20:56:53] <entuland> the change event is definitely there and gets fired properly
[20:57:34] <Rockwood> hi
[20:57:54] *** Quits: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net) (Quit: Leaving)
[20:59:23] *** Parts: cythrawll_ (sid384410@id-384410.charlton.irccloud.com) ()
[20:59:53] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 248 seconds)
[21:00:21] *** Joins: cythrawll (sid384410@id-384410.charlton.irccloud.com)
[21:00:39] <Deneb> https://dpaste.org/NNS5
[21:02:43] *** Joins: mattil (~mattilinn@87-92-142-109.rev.dnainternet.fi)
[21:04:21] <Deneb> entuland: I don't doubt it, but was looking at this. Shows only an 'input' event. I tried using addEventListner as suggested but it didn't seem to trigger.
[21:07:42] <Deneb> GreenJello: yes, that is something like what I am trying to do. They choose a file, the text gets loaded into the textarea. At present they have to click a button so 'select' the file and load it into the emulator. Select essentially copies the contents of the textarea into the emulator. I am trying to make it possible to load the file directly from the emulator but the problem is that program executioon exits the function before the events
[21:07:42] <Deneb> are complete. My addition of promise did not seem to help.
[21:08:38] <GreenJello> !repaste
[21:08:39] <jellobot> GreenJello, Repasted Deneb's paste to https://git.io/JRgHz
[21:09:30] *** Joins: xsperry (~as@user/xsperry)
[21:09:39] <Deneb> ok, I see it. Can use git.io from now on if you like.
[21:09:58] *** Joins: Harlin (~DonQixote@c-24-128-8-53.hsd1.co.comcast.net)
[21:10:43] <GreenJello> I don't really understand your paste. The functions don't seem to call each other, and you don't have any event listeners
[21:12:10] <GreenJello> and there are other functions you call that do something?
[21:12:56] *** Quits: Guest87 (~Guest87@p200300c8cf22760098fff3922573bf05.dip0.t-ipconnect.de) (Quit: Client closed)
[21:14:17] <GreenJello> btw, I had to !repaste because you didn't select the right language in the dropdown, so it was painful to read
[21:14:31] <GreenJello> I don't care what paste site you use as long as it's highlighted reasonably
[21:14:41] *** Joins: Naan (~Naan@user/naan)
[21:15:37] <Deneb> importProgram is called in response to a button click. This calls readFile. That part works. The file is loaded into the textarea. The user can do something interactively from the web page. What I am trying to get to work is readFromTape. This is called from the emulator I am collaborating on. The idea is that is should prompt the use to open a file and the file gets loaded directly into the emulator rather than into the textarea. I guess I
[21:15:38] <Deneb> am trying to prompt the file open disalogue by calling document.getElementById('importFile').click(); in readFromTape. The file is getting loaded into the textarea, but I can't access its contents to pull into the emulator.
[21:18:14] <GreenJello> if you're able to put the contents in a textarea, then you're already reading it
[21:18:20] <GreenJello> not sure what the issue is
[21:18:21] <Deneb> I think the problem is that what happens whenb .click() is triggered is asynchronous and happens "in the background" while the function moves on and terminates.
[21:19:05] <Deneb> the result is that textarea.value is null.
[21:19:30] <GreenJello> you said it's getting loaded into the textarea...?
[21:20:03] <Deneb> yes it is. If I open the web dialogue with the text area then the content is there
[21:20:13] <Deneb> yet, line 54 in the function seems null
[21:20:41] <Deneb> *sees
[21:20:43] <GreenJello> #program is the textarea?
[21:20:50] <GreenJello> you're setting its value to ''
[21:21:15] *** Joins: LiftLeft (~LiftLeft@154.21.28.119)
[21:21:16] <Deneb> yes, I am clearing it before loading new content
[21:21:31] <Deneb> which should happen at line 50
[21:21:54] *** Joins: Guest8 (~Guest8@dynamic-046-114-159-010.46.114.pool.telefonica.de)
[21:22:26] <GreenJello> but then it loads correctly if you ignore your logs, right?
[21:22:36] <Deneb> that is to say, it does happen. I can select a file in the file open dialog and its contents appear in textarea after the dialog is closed
[21:22:39] <GreenJello> so just stop expecting it to be loaded on that specific line
[21:23:29] <GreenJello> you didn't include the event listener, but it'll be loaded when that fires, if ever
[21:23:31] <Deneb> GreenJello: it has to be loaded before 'upload_to_tek' is called.
[21:23:48] <GreenJello> so call that from the event listener or importProgram
[21:24:47] <Deneb> yes, I actually tried that and still got a null return, but yes, I agree that makes sense
[21:25:13] <Deneb> i.e. calling it from the event listner - see the commented out code
[21:25:49] *** Joins: cloudbender6 (~cloudbend@user/cloudbender)
[21:26:39] <Deneb> the console log showed 'Uploading to Tek...' and then I still got a null value
[21:26:46] <GreenJello> I don't think a textarea's value can be null
[21:26:52] <GreenJello> so it's not a textarea?
[21:27:06] <Deneb> anyway, thanks for having a look.
[21:27:35] <Deneb> GreenJello: yes, 'program' is a textarea
[21:27:53] *** Quits: Guest8 (~Guest8@dynamic-046-114-159-010.46.114.pool.telefonica.de) (Quit: Ping timeout (120 seconds))
[21:28:24] <GreenJello> try logging program itself to verify that
[21:28:58] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Ping timeout: 268 seconds)
[21:29:51] *** Joins: Rockwood_ (~Rocky@user/rocky)
[21:29:53] *** Joins: Guest8 (~Guest8@dynamic-046-114-159-010.46.114.pool.telefonica.de)
[21:32:40] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 268 seconds)
[21:32:48] *** Joins: summersault (~summersau@179.221.251.16)
[21:33:19] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[21:33:19] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[21:34:14] <Deneb> already did. I think the reason is that the operation is still asynchronous. importProgram ends before the load is complete.
[21:34:35] <GreenJello> that is true
[21:34:42] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[21:34:54] <GreenJello> but the commented out log is after the file is read
[21:35:20] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[21:35:42] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[21:37:57] <Naan> in Cypress, at the top of plugins/index.js it has this  /// <reference types="cypress" />
[21:37:57] <Naan>  ... after googling I find a page about triple-slash directives in typescript. Does they also serve a purpose in js?
[21:40:05] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[21:40:42] *** Joins: Atum_ (~IRC@user/atum/x-2392232)
[21:41:16] <GreenJello> nope, it's just for TS
[21:41:17] <Deneb> GreenJello: also true.
[21:41:30] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[21:44:55] *** Joins: name_ (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[21:44:59] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 268 seconds)
[21:45:17] <GreenJello> Naan, well, with one exception, in that some editors use the TS language server to power autocomplete in JS code, e.g. in vscode
[21:46:30] <Naan> thanks GJ ... yep saw the Cypress docs actually mention it in the context of IntelliSense. woops.
[21:47:22] <Naan> I'm only looking at this because I noticed a lint --fix changed it to // / because of "spaced-comment" and I was like hm do I care
[21:51:01] *** Joins: onosendi (~onosendi@user/onosendi)
[21:58:18] *** Joins: summersault (~summersau@179.221.251.16)
[21:58:36] *** Joins: straykitten (~straykitt@subs25-116-206-9-33.three.co.id)
[22:00:14] *** Joins: lidenbrock (~lidenbroc@2804:14c:32:8120:a109:dea1:e873:f9a8)
[22:00:49] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[22:01:51] *** Quits: name_ (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 268 seconds)
[22:04:07] *** Joins: summersault (~summersau@179.221.251.16)
[22:05:33] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:bdd3:9575:8c0c:314) (Ping timeout: 268 seconds)
[22:07:16] *** Joins: theseb (~cs@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[22:07:50] <theseb>  how does a nodejs javascript program ask the user for a number?
[22:08:25] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[22:08:40] *** Joins: summersault (~summersau@179.221.251.16)
[22:09:44] <GreenJello> theseb, please don't cross post
[22:10:04] *** Quits: dka_ (~code-is-a@ns3059207.ip-193-70-33.eu) (Quit: My Ex-Girlfriend once told me: I'm not a slut, I'm just popular)
[22:10:38] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:44a5:d8a3:809:6e7e) (Quit: Leaving)
[22:10:38] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[22:11:18] <Deneb> GreenJello: you were right. "so just stop expecting it to be loaded on that specific line". That got me thinking about it differently and getting the onload event to signal the emulator that the load is complete rather than relying on the function to complete. I now have it working. Thank you for being a sounding board! :-)
[22:12:21] <GreenJello> glad it worked out
[22:13:55] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[22:17:53] *** Joins: Akimb (~Akimb@86.100.13.100)
[22:18:40] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:bdd3:9575:8c0c:314)
[22:19:35] *** Quits: beeza (sid53872@tinside.irccloud.com) (Ping timeout: 258 seconds)
[22:19:49] *** Quits: N4buc0- (~N4buc0@2001:1284:f013:588:3639:135d:ad58:d3e8) (Remote host closed the connection)
[22:20:31] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[22:20:36] *** Joins: Akimbass (~Akimb@86.100.13.100)
[22:20:49] *** Joins: beeza (sid53872@id-53872.tinside.irccloud.com)
[22:21:27] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[22:23:16] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[22:23:37] *** Quits: Akimb (~Akimb@86.100.13.100) (Ping timeout: 248 seconds)
[22:25:02] *** Quits: straykitten (~straykitt@subs25-116-206-9-33.three.co.id) (Ping timeout: 272 seconds)
[22:26:49] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 248 seconds)
[22:30:26] *** Joins: mexen (uid495612@user/mexen)
[22:37:09] *** Joins: straykitten (~straykitt@subs24-116-206-8-61.three.co.id)
[22:40:44] *** Joins: ckdcreation (~ckdCreati@147.55.130.37)
[22:40:52] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[22:43:50] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[22:45:29] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 248 seconds)
[22:45:58] *** Quits: cryocaustik (~cryocaust@user/cryocaustik) (Quit: Ping timeout (120 seconds))
[22:46:19] *** Joins: cryocaustik (~cryocaust@user/cryocaustik)
[22:48:55] *** Joins: dka (~code-is-a@ns3059207.ip-193-70-33.eu)
[22:50:06] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[22:50:10] *** jess is now known as j
[22:50:28] *** j is now known as jess
[22:51:30] *** Joins: ___Rockwood__ (~Rocky@user/rocky)
[22:51:39] *** ___Rockwood__ is now known as Rockwood
[22:55:05] *** Quits: Rockwood_ (~Rocky@user/rocky) (Ping timeout: 248 seconds)
[22:57:53] *** Joins: Tobbi__ (~Tobbi@2a02:8108:1240:48ec:88fa:1bd8:6b2e:a2d2)
[22:59:03] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:bdd3:9575:8c0c:314) (Ping timeout: 276 seconds)
[23:05:26] *** Quits: Deneb (~johnch@93.125.7.51.dyn.plus.net) (Quit: Leaving)
[23:10:31] <Rockwood> good night cya
[23:10:33] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 248 seconds)
[23:11:15] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[23:11:37] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Ping timeout: 248 seconds)
[23:12:09] *** Joins: mven (~mven@072-179-001-159.res.spectrum.com)
[23:15:16] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[23:16:40] *** Quits: lmat_ (~Lmat@c-68-58-60-231.hsd1.in.comcast.net) (Quit: leaving)
[23:16:54] *** Quits: codebam (~codebam@user/codebam) (Quit: WeeChat 3.2)
[23:16:55] *** Joins: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net)
[23:17:18] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:44a5:d8a3:809:6e7e)
[23:17:21] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:44a5:d8a3:809:6e7e) (Remote host closed the connection)
[23:17:32] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 272 seconds)
[23:18:37] *** Quits: px (~px@ool-18bb89ab.dyn.optonline.net) (Changing host)
[23:18:37] *** Joins: px (~px@user/px)
[23:18:54] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[23:19:13] *** Joins: mickey8 (~user@user/mickey)
[23:20:22] *** Joins: codebam (~codebam@user/codebam)
[23:21:10] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[23:21:19] *** Quits: Guest8 (~Guest8@dynamic-046-114-159-010.46.114.pool.telefonica.de) (Ping timeout: 246 seconds)
[23:22:47] *** Quits: skillbot (~skillbot@user/skillbot) (Remote host closed the connection)
[23:23:02] *** Joins: skillbot (~skillbot@li1200-69.members.linode.com)
[23:23:02] *** Quits: skillbot (~skillbot@li1200-69.members.linode.com) (Changing host)
[23:23:02] *** Joins: skillbot (~skillbot@user/skillbot)
[23:23:02] *** ChanServ sets mode: +v skillbot
[23:24:13] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:44a5:d8a3:809:6e7e)
[23:32:47] *** Quits: gehn (~gehn@user/gehn) (Ping timeout: 252 seconds)
[23:33:37] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[23:35:06] *** Joins: summersault (~summersau@179.221.251.16)
[23:36:53] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[23:38:17] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Ping timeout: 248 seconds)
[23:40:37] *** Joins: orbyt_v10 (~orbyt_v10@172.92.4.78)
[23:40:39] *** Quits: mattil (~mattilinn@87-92-142-109.rev.dnainternet.fi) (Quit: Leaving)
[23:40:52] *** Joins: howdoi (uid224@id-224.tooting.irccloud.com)
[23:41:03] *** Quits: nomic (~nomic@2a00:23c6:9902:2401:44a5:d8a3:809:6e7e) (Quit: Leaving)
[23:41:41] *** Joins: comatory_ (~ondrejsyn@217.11.241.69)
[23:42:09] *** Quits: cloudbender6 (~cloudbend@user/cloudbender) (Ping timeout: 268 seconds)
[23:42:15] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Quit: WeeChat 3.2)
[23:46:28] *** Quits: comatory_ (~ondrejsyn@217.11.241.69) (Ping timeout: 268 seconds)
[23:49:20] <NoiseEee> i won, everyone
[23:49:48] <systemfault> Wwweee
[23:49:50] <NoiseEee> just came across some code with the following inlineJS: "MM_jumpMenu('window',this,0)"
[23:50:05] <NoiseEee> MM friggin jumpMenu
[23:50:08] <NoiseEee> cant even
[23:50:25] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[23:50:28] <NoiseEee> https://macromedia.dreamweaver.narkive.com/LC8aetc8/mm-jumpmenu
[23:51:00] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[23:51:41] *** Joins: greta (uid510567@id-510567.tinside.irccloud.com)
[23:51:42] *** Quits: greta (uid510567@id-510567.tinside.irccloud.com) (Client Quit)
[23:53:47] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[23:54:11] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[23:56:32] *** Quits: Akimbass (~Akimb@86.100.13.100) (Read error: Connection reset by peer)
[23:59:27] *** Joins: nomic (~nomic@2a00:23c6:9902:2401:44a5:d8a3:809:6e7e)
