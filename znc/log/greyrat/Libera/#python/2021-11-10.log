[00:00:49] *** Quits: bdeshi (~bdeshi@bdeshi.space) (Quit: bouncer disconnect)
[00:03:06] *** jbe_ is now known as jbe
[00:03:21] *** Joins: bdeshi (~bdeshi@bdeshi.space)
[00:04:17] <Payam> Hi everyone. Please look here. I try to get the expected result using list(map(x,lastname, name)) but it gave me wrong answer. I can do list(map(x,[lastname] * len(x), [name] *len(x))) but it doesnt seem so inteligent. can someone else give me another idea?
[00:04:31] <Payam> https://bpa.st/7OQQ
[00:05:37] *** Joins: tabakhase (~tabakhase@user/tabakhase)
[00:06:22] *** Quits: jay-m1262 (~jay-m@154.72.160.199) (Ping timeout: 260 seconds)
[00:06:32] *** Quits: mei3 (~mei@user/mei) (Ping timeout: 240 seconds)
[00:06:32] *** Quits: stockholm (~Andreas@p200300d2c70d0b007808b17fa3d1397f.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[00:06:52] *** Joins: ArclightVenus_ (~arclightv@bl20-152-95.dsl.telepac.pt)
[00:07:31] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[00:07:38] <KirkMcDonald> Payam: [myname(i, name, lastname) for i in x]
[00:08:05] <Payam> I am so stupid
[00:08:20] *** Joins: jay-m1262 (~jay-m@129.0.77.216)
[00:08:23] *** Quits: Mach` (~Mach@86.121.208.210) (Ping timeout: 246 seconds)
[00:08:29] *** hexeme is now known as ldlework
[00:08:30] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[00:09:02] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 240 seconds)
[00:09:27] *** Quits: emf (~emf@2620:10d:c090:400::5:defd) (Read error: Connection reset by peer)
[00:09:29] *** Joins: emf_ (~emf@2620:10d:c090:400::5:defd)
[00:09:49] <Wooble> or, keeping it unpythonically functional: list(map(functools.partial(myname, g=name, h=lastname), x))
[00:10:32] *** Quits: BlueSky_ (~BlueSky@user/bluesky) (Ping timeout: 240 seconds)
[00:12:19] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:12:43] *** Quits: xsx (~x@140.red-88-20-100.staticip.rima-tde.net) (Ping timeout: 250 seconds)
[00:14:29] *** Quits: emf_ (~emf@2620:10d:c090:400::5:defd) (Read error: Connection reset by peer)
[00:14:45] *** Joins: emf (~emf@2620:10d:c090:400::5:defd)
[00:14:52] <Payam> why is it called pythonic or unpythonic?
[00:14:57] <Payam> what does it even mean?
[00:15:22] <Wooble> Payam: in this case, I think it would make Guido sad. :)
[00:15:43] <Wooble> he's, umm... not a fan of map()
[00:15:45] *** Quits: greedom (~greedom@x59cc9b10.dyn.telefonica.de) (Remote host closed the connection)
[00:16:04] <Payam> I once tried map while using processthreadpool
[00:16:09] <Payam> and it messed everything up
[00:16:23] <Wooble> list(itertools.starmap(myname, itertools.product(x, [name], [lastname]))) # done
[00:16:26] <Payam> but I was new in Python(still am)
[00:17:21] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[00:19:11] <Wooble> probably the concurrency was more likely to make things confusing than the map :)
[00:19:33] *** Quits: emf (~emf@2620:10d:c090:400::5:defd) (Read error: Connection reset by peer)
[00:19:52] *** Joins: emf (~emf@2620:10d:c090:400::5:defd)
[00:20:37] *** Quits: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:21:32] *** Joins: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com)
[00:23:03] *** pizzaiolo is now known as pizza
[00:23:04] *** Quits: teut (~teut@223.182.71.245) (Ping timeout: 256 seconds)
[00:23:39] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[00:25:11] *** Joins: Viewday6 (~Viewday@user/viewday)
[00:25:29] *** Quits: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com) (Client Quit)
[00:27:22] *** Quits: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[00:27:33] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[00:27:33] *** Viewday6 is now known as Viewday
[00:28:02] *** Joins: QuantumCurious (uid526336@id-526336.uxbridge.irccloud.com)
[00:29:57] *** Joins: stockholm (~Andreas@p200300d2c70d0b007808b17fa3d1397f.dip0.t-ipconnect.de)
[00:30:07] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[00:30:32] *** Quits: ArclightVenus_ (~arclightv@bl20-152-95.dsl.telepac.pt) (Ping timeout: 240 seconds)
[00:31:02] *** Joins: emf_ (~emf@163.114.130.1)
[00:32:06] *** Joins: Naan (~Naan@user/naan)
[00:32:11] *** Quits: emf (~emf@2620:10d:c090:400::5:defd) (Ping timeout: 245 seconds)
[00:35:16] *** Quits: jay-m1262 (~jay-m@129.0.77.216) (Read error: Connection reset by peer)
[00:35:20] *** Quits: Dantali0n (~Dantali0n@2a10:3781:15ed::2003) (Quit: Bye)
[00:35:54] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[00:36:06] *** Joins: x_kuru (~xkuru@user/xkuru)
[00:36:27] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[00:37:08] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[00:37:45] *** Quits: emf_ (~emf@163.114.130.1) (Ping timeout: 256 seconds)
[00:37:54] *** Quits: webmind (~webmind@user/webmind) (Ping timeout: 268 seconds)
[00:38:02] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 240 seconds)
[00:38:03] *** Joins: emf (~emf@2620:10d:c090:400::5:defd)
[00:38:17] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 250 seconds)
[00:38:32] *** Quits: Bardon (~Bardon@user/Bardon) (Ping timeout: 268 seconds)
[00:38:51] *** Joins: Sario (uid356235@fosshost/cdo/Sario)
[00:39:41] *** Joins: Dantali0n (~Dantali0n@2a10:3781:15ed::2003)
[00:39:55] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:40:43] *** Joins: xsx (~x@140.red-88-20-100.staticip.rima-tde.net)
[00:42:27] *** Quits: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d) (Quit: WeeChat 3.3)
[00:43:43] *** Joins: hanaan (~naan@user/naan)
[00:44:11] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[00:44:42] *** Quits: harpia (~harpia@2804:2aec:205:1400:1a8b:e47a:9188:7f77) (Quit: harpia)
[00:44:56] *** Quits: emf (~emf@2620:10d:c090:400::5:defd) (Read error: Connection reset by peer)
[00:44:57] *** Joins: emf_ (~emf@2620:10d:c090:400::5:defd)
[00:45:41] *** Quits: xsx (~x@140.red-88-20-100.staticip.rima-tde.net) (Ping timeout: 256 seconds)
[00:45:52] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[00:46:17] *** Quits: grooverman (~grooverma@177.102.119.40) (Remote host closed the connection)
[00:46:32] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 250 seconds)
[00:50:01] *** Quits: emf_ (~emf@2620:10d:c090:400::5:defd) (Read error: Connection reset by peer)
[00:50:02] *** Joins: emf (~emf@163.114.132.5)
[00:51:54] *** Joins: Pickchea (~private@user/pickchea)
[00:52:50] *** Joins: grooverman (~grooverma@179.99.123.165)
[00:52:55] *** Quits: canton7 (canton7@about/csharp/canton7) (Quit: ZNC - http://znc.in)
[00:53:40] *** Quits: Payam (~Payam@138.106.57.131) (Ping timeout: 256 seconds)
[00:53:57] *** Joins: jle (~jle@user/jle)
[00:54:22] *** Joins: Viewday4 (~Viewday@user/viewday)
[00:54:24] *** Quits: jamwil (~jamwil@user/jamwil) (Quit: leaving)
[00:55:01] *** Joins: canton7 (~canton7@about/csharp/canton7)
[00:55:06] *** Joins: emf_ (~emf@2620:10d:c090:400::5:4199)
[00:56:27] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[00:56:27] *** Viewday4 is now known as Viewday
[00:56:46] *** Quits: emf (~emf@163.114.132.5) (Ping timeout: 260 seconds)
[00:56:48] <jle> what is best practice for the following scenario?: I want to sys.exit(0) if cond1 or cond2 fails.. the second condition needs to be imported, but I want to check cond1 first.. I could of course do: if a: sys.exit(0); import x; if x.b: sys.exit(0) but it looks unclean to have import after the first "if"?
[00:58:06] <jle> move everything to a function? seems kind of bloat: def b(): import x; return(x.b); if b(): sys.exit(0)
[00:58:42] <grym> jle: barring Very Good Reasons to the contrary, imports go at the top of a module anyway
[00:59:15] *** Joins: amogorkon (~amogorkon@port-83-236-35-197.dynamic.as20676.net)
[00:59:28] <grym> so `import sys; import x; if not a and x.b: sys.exit(0)`
[01:00:59] *** Joins: jamwil (~jamwil@user/jamwil)
[01:01:09] <jle> ah, I forgot one important details.. cond1 is checking the python version.. I don't want to continue if version_major < 3, but still exit with return code 0.. so it only makes sense to import with python3 and only with python3 I want to fail if the import/function call fails
[01:01:16] <jle> detail*
[01:02:50] <grym> i wouldn't fret the cost of always importing sys
[01:03:25] <grym> i also wouldn't bother writing new code that you expect to be run with python 2, but you may have legacy requirements that force your hand
[01:04:03] <jle> sys is cond1 that I always import, the problem is cond2 that is a module that only the python3 version of this application supports.. we still have a lot of python 2.6 and 2.7
[01:04:24] *** Quits: HenryG (~quassel@2607:5300:201:3000::f63) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[01:05:04] <Wooble> wanting to exit cleanly in py2 might count as a Very Good Reason to move the import after the check.
[01:05:22] <grym> it might, yes
[01:05:42] <grym> i wonder if six does things like this
[01:05:48] <Wooble> (although exit status 0 when doing nothing because the user screwed up seems like an odd choice)
[01:06:05] *** Quits: guenhael (Thunderbir@gateway/vpn/protonvpn/guenhael) (Ping timeout: 264 seconds)
[01:06:06] <jle> hmm. yeah.. or is it better to put it inside its own function?
[01:06:08] *** Joins: guenhael1 (~Thunderbi@2a01:e0a:163:7060:db4:c0cb:81f4:b3d8)
[01:06:10] *** Joins: HenryG (~quassel@2607:5300:201:3000::f63)
[01:06:37] *** Quits: magla (~gelignite@55d4ec6e.access.ecotel.net) (Quit: Stay safe!)
[01:06:56] *** Joins: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is)
[01:06:57] <jle> Wooble: it is executed through a cfg.mgmt tool, not manually, so that is the reason why I want to fail with python3 (where it should work) and ignore it with python2
[01:07:51] <Wooble> jle: seems worse if the tool can't tell it did the wrong thing, but I don't know what the program does and whether it's fine to ignore it doing nothing :)
[01:08:01] *** Joins: odix (~ok@65.141.163.206)
[01:08:26] *** guenhael1 is now known as guenhael
[01:08:55] <Wooble> anyway, writing a function that just imports a module and returns a thing from it seems uglier than moving the import down a few lines.
[01:09:57] <jle> great, I will consider that option the lesser evil then :)
[01:10:23] <jle> oh, wait.. but then I need 2 if's
[01:10:35] <jinsun> is the version check only to prevent import error? you could do tryr except and avoid that
[01:11:35] <jinsun> something like `try: import x; if x.b: raise ImportError except ImportError: sys.exit(0)`
[01:12:05] <jle> jinsun: not really.. if the import fails with python3 I want to know.. so I kind of want: if sys.version_info.major < 3 or app.specific.thing.that.has.to.be.imported()
[01:12:23] <jle> then sys.exit(0)
[01:13:52] <jinsun> seems like you want more than that then
[01:13:54] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[01:13:56] *** hanaan is now known as Naan
[01:14:07] <jinsun> how would you know just from sys.exit(0) how it failed
[01:14:36] *** Joins: jmcb (~jmcb@nas47-67.york.ac.uk)
[01:15:05] *** Joins: xsx (~x@140.red-88-20-100.staticip.rima-tde.net)
[01:15:08] <jle> the app specific functions returns true if nothing needs to be done
[01:15:32] *** Quits: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c) (Quit: Leaving)
[01:15:45] <jinsun> so?
[01:15:56] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Ping timeout: 246 seconds)
[01:17:24] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[01:17:36] *** Quits: jmcb (~jmcb@nas47-67.york.ac.uk) (Client Quit)
[01:19:31] <jle> jinsun: https://bpa.st/Y2UQ
[01:19:56] <jle> this is basically the code now, seems ugly, but using an own function means I only need one "if" statement
[01:20:01] *** Joins: kungp (~kungp@h-46-59-2-200.A230.priv.bahnhof.se)
[01:21:10] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[01:22:42] <dfcnvt> Why did this returned as 'True' when it should be 'False'?   #  isinstance(((32-1)/3), int)
[01:23:00] <bjs> dfcnvt: what version of Python are you using?
[01:23:22] <dfcnvt> 2.7
[01:23:29] *** Joins: Viewday2 (~Viewday@user/viewday)
[01:23:45] <grym> dfcnvt: that expression evaluates to 10, then
[01:23:53] <grym> you probably want (32-1)//3
[01:24:01] <bjs> dfcnvt: did you look at what (31-1)/3 returned?
[01:24:09] <dfcnvt> Huh, I see
[01:24:16] <dfcnvt> Yeah, it returned as 10
[01:24:19] <bjs> dfcnvt: maybe you wanted to (31-1)/3.0 instead? in Python 2 division of ints returned an int
[01:24:23] <bjs> so the isinstance is correct
[01:24:26] <dfcnvt> Okay, I'll add //
[01:24:28] *** Joins: Pixi (~Pixi@user/pixi)
[01:24:33] <grym> dfcnvt: i was wrong, bjs is right
[01:24:37] <bjs> Uh // won't help
[01:24:37] <bjs> Yes :)
[01:24:52] <dfcnvt> Doh, just checked, didn't work with //
[01:24:55] <grym> using // is the opposite
[01:25:06] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Quit: Konversation terminated!)
[01:25:24] *** Joins: vit (~vit@chello085216193138.chello.sk)
[01:25:31] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[01:25:47] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[01:25:55] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[01:25:55] *** Viewday2 is now known as Viewday
[01:26:52] <dfcnvt> Err, how do you fix this?
[01:27:08] <dfcnvt> Oh, nevermind -- add the .0
[01:27:10] <grym> yep
[01:27:23] *** Joins: fikran (~fikran@user/fikran)
[01:28:35] <dfcnvt> Err....Doesn't do what I wanted...I think I need to avoid adding .0
[01:28:55] <grym> dfcnvt: well, what did you want it to do
[01:29:15] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[01:29:45] <dfcnvt> Okay, check this:    isinstance(((16-1)/3.0, int)
[01:30:04] <dfcnvt> It should return True...however it's returned False
[01:30:11] <grym> because you get a float
[01:30:17] <Repiphany> (16-1)%3 == 0
[01:30:33] <grym> dfcnvt: an int divided by a float yields a float
[01:30:36] <bjs> dfcnvt: division of a float always returns a float
[01:30:41] <bjs> even if that float happens to be a whole number
[01:30:59] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 264 seconds)
[01:31:00] <Repiphany> isinstance isn't how you should check for divisibility
[01:31:21] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 245 seconds)
[01:31:25] *** Joins: Viewday5 (~Viewday@user/viewday)
[01:31:31] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:32:01] <bjs> dfcnvt: 10/1.0 is 10.0 (not 10).  And yeah if you're trying to check if it's divisible then checking isinstance isn't going to do that :)
[01:32:40] <dfcnvt> So, if not isinstance()...then which function will do the job of checking it?
[01:32:57] <dfcnvt> To confirm whether it's an integer or a whole number
[01:33:00] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[01:33:05] *** Joins: silentwarg (~silentwar@cpe-76-171-170-68.socal.res.rr.com)
[01:33:10] <grym> dfcnvt: what are you making this test for
[01:33:17] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[01:33:17] *** Viewday5 is now known as Viewday
[01:33:24] *** Quits: jazzy (~jaziz@user/jaziz) (Read error: Connection reset by peer)
[01:33:39] *** Joins: semeion (~semeion@user/semeion)
[01:33:49] *** Joins: jazzy (~jaziz@user/jaziz)
[01:33:50] <sveinse> Does anyone know how or a package to await keyboard input (keypress, not line input) in asyncio on windows?
[01:33:59] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Ping timeout: 264 seconds)
[01:34:15] *** Quits: silentwarg (~silentwar@cpe-76-171-170-68.socal.res.rr.com) (Client Quit)
[01:34:56] <dfcnvt> grym: Nevermind what I'm making this for...but I have the changable number toward to this variable, "m" where ##  if isinstance(((m-1/3), int):
[01:35:53] <grym> dfcnvt: i asked because if what you are really testing is "is this evenly divisible by that", then your approach is wrong
[01:36:01] <grym> and if you're testing something else, then you should say so
[01:36:02] *** Quits: nrg (~NRG@user/nrg) (Quit: ZNC - https://znc.in)
[01:37:59] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[01:38:13] <dfcnvt> Right, I guess 'isinstance()' is not the right one to use...So, I'm guessing ((m-1)/3.0)%3 == 0  will do the job?  (going to test)
[01:38:31] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[01:40:41] <grym> if you want to know if m-1 is divisible by 3, use (m-1)%3==0
[01:41:24] <dfcnvt> Yeah, seem to work....
[01:41:29] <dfcnvt> Thanks
[01:41:33] <jinsun> sveinse: you could combine https://docs.python.org/3/library/msvcrt.html#msvcrt.getch and https://docs.python.org/3/library/asyncio-task.html#asyncio.to_thread
[01:41:46] *** Joins: Throgkt (~Throgkt@user/throgkt)
[01:41:56] <sveinse> jinsun: jep, thanks
[01:42:13] *** Joins: zebrag (~chris@user/zebrag)
[01:42:45] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[01:44:41] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[01:45:11] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 256 seconds)
[01:45:35] *** Joins: Seto_Kaiba (~hunterkll@remote.kisaracorporation.com)
[01:47:29] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[01:47:29] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[01:47:30] <odix> Hello, I am trying to pass an arg to a function and have it return a bool, that is passed into another function. I am quite new to python and I apologize if its butchered. Just a simple few lines of code here, I suspect I may be doing it all wrong : ) https://bpa.st/CGCQ
[01:48:18] *** Joins: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com)
[01:48:29] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 246 seconds)
[01:48:51] <KirkMcDonald> odix: Might I suggest: return user_n == "ok"
[01:48:54] *** Joins: strk (~strk@user/strk)
[01:50:36] *** Joins: nrg (~NRG@user/nrg)
[01:53:03] <odix> oooo
[01:53:07] *** Quits: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com) (Ping timeout: 256 seconds)
[01:53:49] <odix> KirkMcDonald: wait how come ?
[01:54:20] <sveinse> odix: because if the test is false, your function will return None and not False
[01:54:24] <CrtxReavr> Elimines two lines.
[01:54:42] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[01:54:47] <odix> gotcha thanks
[01:55:08] <CrtxReavr> def valid(user_n): \n    return user_n == "ok"
[01:55:16] *** Joins: Atque (~Atque@user/atque)
[01:55:39] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[01:55:48] *** Quits: stdout (~stdout@216.163.21.11) (Quit: Leaving)
[01:55:54] <CrtxReavr> Not sure what your end-goal is here, but maybe you want to question if you need that function at all.
[01:56:12] *** Joins: Viewday1 (~Viewday@user/viewday)
[01:56:32] *** Quits: gitly (~gitly@85.255.235.82) (Ping timeout: 240 seconds)
[01:56:43] <odix> Was more of an exercise in learning. Seeing if I could put together a function that returns a boolean and compare that boolean in another function to return something else
[01:56:44] *** Quits: jamesmartinez (uid6451@id-6451.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[01:56:55] <odix> All nested
[01:57:51] <odix> Hopefully the idea makes sense the codes just all screwed up : )
[01:58:13] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[01:58:13] *** Viewday1 is now known as Viewday
[01:58:28] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[01:58:52] <jinsun> you probably want to use the isvalid variable in the check function then, otherwise you didn't do the 2nd half of what you wanted
[01:58:53] *** Joins: gitly (~gitly@148.252.133.174)
[01:59:09] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.3)
[01:59:14] *** Quits: nomic (~nomic@185.192.69.217) (Quit: Leaving)
[01:59:45] *** Joins: emerent_ (~quassel@p200300cd57485556ba27ebfffed28a59.dip0.t-ipconnect.de)
[01:59:45] *** Quits: emerent (~quassel@p200300cd574855efba27ebfffed28a59.dip0.t-ipconnect.de) (Killed (erbium.libera.chat (Nickname regained by services)))
[01:59:45] *** emerent_ is now known as emerent
[01:59:53] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[02:00:24] <grym> odix: https://bpa.st/TAAQ something like this?
[02:00:30] *** Quits: anthraxx (~anthraxx@archlinux/developer/anthraxx) (Remote host closed the connection)
[02:00:40] *** Joins: djapo (~archangel@user/djapo)
[02:01:37] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 256 seconds)
[02:02:09] <odix> grym: yes exactly!
[02:02:27] <odix> definitely over my head right now but I will pick this apart
[02:02:40] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[02:02:51] <grym> not too much to clarify, so question away
[02:03:33] *** Quits: uint_t (~refujee@c-24-22-76-106.hsd1.wa.comcast.net) (Quit: Konversation terminated!)
[02:03:34] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[02:03:48] *** Joins: waynew (~wayne@user/waynew)
[02:04:52] <odix> I have not even seen the -> after function parameters...assuming that just changes the function to a boolean without having to manually type in return True ?
[02:05:09] <grym> odix: no, it's just markup for your eyes and external tools
[02:05:14] <odix> no wait...lost
[02:05:25] <odix> oh ;\
[02:05:48] *** Quits: Tas-sos (~Tas-sos@46-174-70.adsl.cyta.gr) (Quit: Lost terminal)
[02:05:50] <grym> this code performs exactly the same: https://bpa.st/35LA
[02:06:01] <grym> er, it would if the function name hadn't changed
[02:06:02] *** Quits: stockholm (~Andreas@p200300d2c70d0b007808b17fa3d1397f.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[02:06:27] <odix> so to clarify valid is turning "ok" is checkuser checking the boolean value or if just anything is present ?
[02:06:44] <odix> returning* sorry
[02:07:17] *** Quits: gitly (~gitly@148.252.133.174) (Ping timeout: 256 seconds)
[02:07:20] <odix> oh! its returning the value of ok == ok
[02:07:28] <grym> odix: the reason is_valid returns a bool is because the statement `variable == other_variable` is.. yes, exactly
[02:07:42] *** Quits: xsx (~x@140.red-88-20-100.staticip.rima-tde.net) (Ping timeout: 260 seconds)
[02:07:48] <odix> sorry duh thats what you guys meant save me a couple lines
[02:07:57] *** Joins: srilyk (~wayne@user/waynew)
[02:08:24] <odix> I think I understand everything else though. Thank you for helping me out
[02:08:28] <grym> cheers
[02:09:02] *** Quits: hrob (~hrob@31-209-221-88.dsl.dynamic.simnet.is) (Ping timeout: 256 seconds)
[02:09:15] <doc> I'm trying to optimise some docker builds with --mount=type=cache and seeing "Downloading ..." for pip install even though they should be getting stored in the docker build cache. Is that normal and just badly named, in that it might be downloading from the cache to site-packages?
[02:09:35] <odix> grym: I guess I was trying to determine the bool value within the parameter of the function
[02:09:49] <odix> grym: thanks again
[02:11:02] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 240 seconds)
[02:11:06] *** Joins: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[02:12:39] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 276 seconds)
[02:13:02] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[02:13:24] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:13:39] *** Joins: kosh (~kosh@user/kosh)
[02:14:11] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[02:14:56] *** Joins: mdemo (~mdemo@user/mdemo22)
[02:17:18] *** Joins: Viewday1 (~Viewday@user/viewday)
[02:17:32] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 246 seconds)
[02:17:58] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[02:18:21] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[02:18:24] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[02:18:32] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 240 seconds)
[02:19:11] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[02:19:11] *** Viewday1 is now known as Viewday
[02:19:36] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[02:20:23] <strk> how do I force reinstallation/rebuild of a module via pip ?
[02:20:41] <strk> pip freeze shows I have pyproj==3.2.1
[02:20:43] <strk> I'd like to rebuild it
[02:21:34] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:22:47] *** Joins: tracey (~trace@x590fedb5.dyn.telefonica.de)
[02:23:04] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[02:23:43] <CrtxReavr> Bah.
[02:23:54] <CrtxReavr> I've got to learn MongoDB.
[02:24:01] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[02:24:08] <grym> pymongo is ... okay
[02:24:08] *** Joins: stockholm (~Andreas@p200300d2c70d0b007808b17fa3d1397f.dip0.t-ipconnect.de)
[02:24:41] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[02:24:58] *** Joins: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[02:26:20] <CrtxReavr> Oh, so it's just a server hosting a JSON-alike?
[02:27:14] <strk> uninstalling and re-installing the package gives me a cached thing:
[02:27:16] <strk>   Using cached pyproj-3.2.1-cp39-cp39-manylinux2010_x86_64.whl (6.3 MB)
[02:27:21] <strk> also I suspect it contains a binary
[02:27:31] <strk> how can I possibly rebuild that package ? I want to use system library
[02:27:41] *** Quits: tracey (~trace@x590fedb5.dyn.telefonica.de) (Ping timeout: 256 seconds)
[02:28:35] *** Joins: hailhydra (~hailhydra@136.36.153.168)
[02:29:29] *** Quits: lbracher (~lucas@94.105.106.159.dyn.edpnet.net) (Ping timeout: 264 seconds)
[02:29:42] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[02:30:04] <grym> CrtxReavr: it's sql without the fun
[02:30:15] <sveinse> haha
[02:30:20] <hailhydra> I am having trouble connecting vscode's debugger to a kubernetes pod running a virtualbox vm with docker containers inside the vm running a django stack. Does anyone ever done something similar?
[02:30:32] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[02:31:02] <jinsun> strk: maybe `pip install --force-reinstall --no-cache-dir pyproj`
[02:31:05] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[02:31:30] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:32:06] <CrtxReavr> Yikes.
[02:32:14] <CrtxReavr> I may actually like MongoDB.
[02:32:33] <CrtxReavr> I can see why the SQL zealots hate it.
[02:32:42] <zln> what is the escape sequence for 'ESC' ? :)
[02:33:06] *** Quits: upsala (~zcb@185.213.155.252) (Quit: WeeChat 3.3)
[02:33:34] <CrtxReavr> esc = "\x1b"
[02:33:50] <zln> CrtxReavr: nice :D Thanks!
[02:33:59] <strk> jinsun: seems to work BUT I'm afraid the module being installed DOES contain a binary so it's not rebuilding anything :(
[02:34:02] <strk> this file: /usr/local/lib/python3.9/site-packages/pyproj.libs/libproj-ce980207.so.22.1.1
[02:34:23] <strk> can I ask pip to NOT ever install binaries but always rebuild cpython things ?
[02:34:52] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:35:03] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[02:35:51] <zodd> is there a pythonic way to check if an array has an element which is also in a second array? (besides looping over it)
[02:36:05] <grym> zodd: are you going to be doing it a lot?
[02:36:10] <jinsun> strk: there is a --no-binary option also, --no-binary :all: or --no-binary pyproj
[02:36:22] <grym> zodd: and, do you care about duplicates
[02:36:51] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:37:03] <adder> any(a in array2 for a in array1)
[02:37:03] <jamwil> zodd: sets are fairly useful for that
[02:37:13] *** Quits: srilyk (~wayne@user/waynew) (Quit: WeeChat 2.9)
[02:37:34] <zodd> I want to check args if they are in an array, so a onetime operation
[02:37:35] <grym> zodd: set(foo).intersection(bar) returns, well, the intersection
[02:37:51] <zodd> ah. cool
[02:38:02] <strk> pip install --force-reinstall --no-cache-dir --no-binary pyproj # ERROR: You must give at least one requirement to install (see "pip help install")
[02:38:04] <grym> there are other operations available too
[02:38:05] <strk> jinsun: ^
[02:38:42] *** Joins: Bakunin (~Lindis@user/lindis)
[02:38:53] <jinsun> strk: I think you will have to repeat pyproj, the first one is eaten by --no-binary
[02:39:09] <strk> oh
[02:39:12] <strk> yep
[02:39:35] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 246 seconds)
[02:40:41] <zodd> hmm. making it harder than it is. Got it. Thanks
[02:41:01] *** Quits: codifica1 (~pep@187.red-83-46-128.dynamicip.rima-tde.net) (Quit: leaving)
[02:41:19] <grym> sets are great
[02:41:31] *** Joins: grooverman_ (~grooverma@179.99.123.165)
[02:43:02] *** Quits: grooverman (~grooverma@179.99.123.165) (Ping timeout: 240 seconds)
[02:44:53] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[02:45:48] *** Joins: Viewday2 (~Viewday@user/viewday)
[02:46:08] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[02:46:24] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[02:46:25] <strk> jinsun: I decided to try the apt package instead, but after installing it I get: ModuleNotFoundError: No module named 'pyproj'
[02:46:35] <strk> how do I inspect the PATH ?
[02:46:40] *** Joins: Warped (~Warped@user/warped)
[02:46:45] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:46:57] <strk> ['', '/usr/local/lib/python39.zip', '/usr/local/lib/python3.9', '/usr/local/lib/python3.9/lib-dynload', '/usr/local/lib/python3.9/site-packages']
[02:47:13] <strk> apt package is in /usr/lib/python3/dist-packages/pyproj
[02:47:20] <strk> there, figured
[02:47:22] <strk> uff
[02:47:22] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Client Quit)
[02:47:31] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[02:47:31] *** Viewday2 is now known as Viewday
[02:47:48] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[02:48:41] *** Quits: chele_ (~chele@user/chele) (Remote host closed the connection)
[02:49:23] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[02:49:46] <jinsun> adding the site-packages of another python installation to sys.path seems like a bad idea
[02:49:47] *** Quits: Valeria (~Valeria@user/valeria) (Quit: Textual IRC Client: www.textualapp.com)
[02:50:10] <strk> yeah,I'll continue the attempt to build from source that module, via pip
[02:50:37] <strk> SUCCESS
[02:51:45] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[02:52:00] *** Quits: SuperLag (~akulbe@user/superlag) (Ping timeout: 260 seconds)
[02:52:02] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[02:52:27] *** Joins: ckdCreations (~ckdCreati@147.55.130.37)
[02:52:27] <strk> ok, now to wrap everything up... (how) can I specify --no-binary in requirements.txt ?
[02:52:40] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[02:53:36] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:53:45] <CrtxReavr> strk, you can add to sys.path, or you can set a PYTHONPATH environment variable which will get prepended to sys.path on python invocation.
[02:55:52] <CrtxReavr> strk, maybe your apt-installed package is for a different (default) python version?
[02:55:57] <jinsun> strk: you can add a line `--no-binary pyproj` at the top (in addition to pyproj later)
[02:56:41] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[02:57:02] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[02:57:04] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:57:27] *** Joins: srhm (~srhm@user/srhm)
[02:58:17] <CrtxReavr> I rather doubt your OS is using 3.9 as it's default python.
[02:58:56] <CrtxReavr> s/\'//
[02:59:08] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:00:07] *** Quits: brelod_ (~me@90.244.150.142) (Quit: leaving)
[03:00:16] <lionslicer> guys, asked about a program a few hours ago. the program received input about a period of time in the following format: hours minutes and seconds.
[03:00:19] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[03:00:39] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[03:00:41] <lionslicer> for instance: 1h 0m 30s would be 3630 seconds
[03:00:42] *** Quits: fannagoganna (uid110488@id-110488.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[03:00:55] <lionslicer> I'm sort of doing a variation on theme
[03:01:24] <lionslicer> now I receive input about days, months and years
[03:01:40] <lionslicer> and the program turns everything into days
[03:02:01] <lionslicer> https://bpa.st/EOVQ
[03:02:53] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Quit: ZNC - http://znc.in)
[03:03:03] <jinsun> months can have not 30 days also
[03:03:14] <jinsun> so this one is much harder
[03:03:37] <lionslicer> yeah
[03:03:41] <jinsun> but if you don't care about being exact then this will do
[03:03:46] <lionslicer> but the common estimate is correct right?
[03:03:51] <lionslicer> yeah yeah
[03:03:51] *** Joins: pycurious (~Adium@user/pycurious)
[03:04:07] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Remote host closed the connection)
[03:04:13] <jinsun> if you have to be exact then you need a starting date also, maybe just take today
[03:04:20] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[03:04:42] <lionslicer> ok, so I think the code is much cleaner than the last program
[03:05:31] <lionslicer> jinsun: I don't have to be precise. I'm just studying for a test. I'm starting with simple stuff and then move on to more advanced stuff
[03:05:38] <lionslicer> well "advanced" lol
[03:06:12] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:06:32] <jinsun> okay, yeah then this is fine
[03:06:58] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[03:07:14] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[03:07:55] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:09:05] <dfcnvt> What solutions that will generate answers that involves branching out into a tree?
[03:09:15] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:2010:1f0c:b16:6a06)
[03:10:32] *** Quits: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net) (Ping timeout: 240 seconds)
[03:11:00] *** Quits: binary011 (~binary01@192.110.171.216) (Read error: No route to host)
[03:11:11] *** Joins: binary011 (~binary01@192.110.171.216)
[03:11:41] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[03:12:02] *** Quits: vit (~vit@chello085216193138.chello.sk) (Ping timeout: 240 seconds)
[03:12:24] *** Joins: naranja (~orange@user/orangeboxcutter)
[03:12:35] <strk> jinsun: at the top of pip install -r requirements.txt you mean ?
[03:12:41] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[03:12:49] *** Joins: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com)
[03:12:53] <strk> or at the top of requirements.txt ?
[03:13:00] <jinsun> inside your requirements.txt
[03:13:32] *** Quits: deutor (~quassel@82.177.4.226) (Ping timeout: 240 seconds)
[03:13:50] *** Joins: Roey (~Roey@user/Roey)
[03:13:51] *** Quits: asd (~noname@user/asd) (Ping timeout: 250 seconds)
[03:14:03] *** Joins: Viewday9 (~Viewday@user/viewday)
[03:14:11] <dfcnvt> Here's my messy code >> https://paste.ofcode.org/3yJixgetwBzB8sqh7Lzubw
[03:14:12] *** Joins: deutor (~quassel@176.221.113.10)
[03:15:04] <dfcnvt> Line 9 to 16 would be the core interest of doing the computation...where as the rest would need to recode it into a working expectation of generating the tree (perhaps into a json format)
[03:15:05] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[03:15:13] *** Joins: Nicholaus04[m] (~nicholaus@2001:470:69fc:105::1:3038)
[03:15:32] <dfcnvt> So, I'm scratching my head on this one.
[03:15:51] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[03:15:51] *** Viewday9 is now known as Viewday
[03:16:07] *** vdamewood is now known as Guest5784
[03:16:07] *** Quits: Guest5784 (~vdamewood@fedora/vdamewood) (Killed (iridium.libera.chat (Nickname regained by services)))
[03:16:07] *** vinleod is now known as vdamewood
[03:16:55] *** Quits: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053) (Quit: WeeChat 3.3)
[03:17:33] *** Quits: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com) (Ping timeout: 256 seconds)
[03:18:06] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Ping timeout: 260 seconds)
[03:18:50] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[03:21:04] *** Quits: palasso_ (~palasso@user/palasso) (Remote host closed the connection)
[03:21:23] *** Joins: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053)
[03:21:43] *** Quits: binary011 (~binary01@192.110.171.216) (Read error: Connection reset by peer)
[03:22:54] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[03:23:10] *** Joins: binary011 (~binary01@192.110.171.216)
[03:23:13] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[03:25:31] *** Joins: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz)
[03:26:21] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:26:51] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[03:27:36] *** Quits: Inline (~Inline@2a02:908:1252:7a80:6c0:2b98:1609:4e92) (Ping timeout: 245 seconds)
[03:27:39] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:28:52] *** Joins: zln (~zln@c80-217-230-193.bredband.tele2.se)
[03:29:00] <jamwil> Just a heads up if anyone uses `poetry export` in any CI/CD, there's an issue with pyparsing 3.0.5 and requirements with extra deps will fail. Might save you some time staring at a bunch of red Xs that weren't there yesterday.
[03:29:36] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[03:30:32] *** Quits: stockholm (~Andreas@p200300d2c70d0b007808b17fa3d1397f.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[03:30:33] *** Joins: asd (~noname@user/asd)
[03:31:19] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[03:31:39] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:31:48] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[03:33:24] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:33:49] *** Joins: ali1234 (~al@user/ali1234)
[03:33:55] *** Quits: Akuli (~Akuli@213.216.211.233) (Quit: Leaving)
[03:34:16] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 268 seconds)
[03:34:41] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[03:35:32] <Samian> Hello. Is there a way to split a large list into many segments given a list of segment start indices?
[03:35:50] <Samian> I mean, is there a function call that does this? I can implement this myself otherwise
[03:36:43] *** Joins: fikran (~fikran@user/fikran)
[03:36:49] <nedbat> Samian: there isn't a function like that in the stdlib
[03:37:15] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:37:37] <Samian> [[long_long[s:e] for s,e in zip(segment_indices_list[:-1], segment_indices_list[1:]]
[03:37:40] <Samian> that should do it
[03:37:53] <Samian> s/long_long/long_list
[03:37:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[03:38:02] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 246 seconds)
[03:38:27] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 276 seconds)
[03:38:37] *** Quits: ali1234 (~al@user/ali1234) (Client Quit)
[03:38:56] *** Joins: ali1234 (~al@user/ali1234)
[03:38:56] *** Quits: ali1234 (~al@user/ali1234) (Client Quit)
[03:39:06] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[03:39:16] *** Joins: ali1234 (~al@user/ali1234)
[03:39:27] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[03:40:50] *** Quits: spuz (~spuz@95.150.9.41) (Ping timeout: 256 seconds)
[03:41:40] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 268 seconds)
[03:41:44] *** Joins: georgios (~georgios@user/georgios)
[03:41:48] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[03:42:39] *** Joins: Viewday6 (~Viewday@user/viewday)
[03:43:01] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[03:43:20] *** Joins: pycurious (~Adium@user/pycurious)
[03:43:39] *** Joins: gigamonkey (~user@192-184-131-110.fiber.dynamic.sonic.net)
[03:44:11] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[03:44:11] *** Viewday6 is now known as Viewday
[03:44:12] *** Joins: scruz (~scruz@41.58.241.56)
[03:44:40] *** Joins: Inline (~Inline@aftr-37-201-240-235.unity-media.net)
[03:45:07] *** Joins: Auron (Auron956@user/auron)
[03:45:49] *** Joins: xardas (~xhunter@149.233.51.127)
[03:45:57] <xardas> Hi there.
[03:46:02] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 240 seconds)
[03:46:32] <xardas> Do you guys know the steps or the logic behind finding the average image from a set of images ?
[03:46:50] <rama> what do you mean by average?
[03:47:36] <rama> like the subjective most average picture in the set? i.e. the lighting is kinda messed up in this one or man i wish my eyes were open in that one?
[03:47:44] <rama> or is there a characteristic that you inspect?
[03:48:41] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[03:49:15] *** Joins: ano (~ano@user/ano)
[03:51:02] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[03:51:03] *** Joins: Viewday0 (~Viewday@user/viewday)
[03:51:03] *** Joins: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net)
[03:51:36] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:51:54] <odix> is it considered bad coding to use multiple if statements instead of elif ?
[03:52:41] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[03:52:41] *** Viewday0 is now known as Viewday
[03:52:58] <phy1729> They do different things
[03:53:22] *** Joins: runelind_ (~runelind@user/runelind)
[03:53:42] *** Quits: zodd (~zodd@84-106-80-107.cable.dynamic.v4.ziggo.nl) (Quit: Leaving)
[03:54:22] *** Quits: runelind (~runelind@user/runelind) (Ping timeout: 244 seconds)
[03:54:32] <odix> pby1729: but I can setup a script to do the same thing using both statements
[03:55:47] <phy1729> I'm saying if a: ... elif b: ...     behaves differently than if a: ...    if b: ...
[03:56:05] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[03:56:19] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[03:56:42] <odix> im confused on that actually
[03:56:51] *** Quits: emf_ (~emf@2620:10d:c090:400::5:4199) (Read error: Connection reset by peer)
[03:57:09] <KirkMcDonald> Two separate `if` statements can both be true.
[03:57:13] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[03:57:45] <odix> ahhh
[03:58:23] <odix> is there a different in the speed at which python processes them if in simplified order ?
[03:58:24] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[03:59:04] <phy1729> Well if a is true in the first case, b doesn't have to be checked at all
[03:59:20] <phy1729> The primary question is which logic is correct
[03:59:45] <odix> now it makes sense
[04:00:09] <odix> so yea it could work but its bad logic and forces it to do more than needed
[04:00:13] <odix> gotcha
[04:01:09] <phy1729> If the cases are disjoint (say one test is   a == 17 and the other is a == 29 and a isn't modified)  then both work, but I'd go with the elif (or match in 3.10)
[04:01:32] *** Quits: srhm (~srhm@user/srhm) (Ping timeout: 240 seconds)
[04:02:08] *** Joins: emf (~emf@2620:10d:c090:400::5:f986)
[04:02:37] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[04:02:44] *** Quits: servytor (uid525486@id-525486.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[04:02:50] *** Joins: jazzy2 (~jaziz@user/jaziz)
[04:04:36] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[04:04:53] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 264 seconds)
[04:05:12] <scruz> i need help installing poetry. currently, i manage projects using a combination of pyenv and pip-tools.
[04:05:19] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[04:05:37] *** Quits: scruz (~scruz@41.58.241.56) (Remote host closed the connection)
[04:06:04] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Read error: Connection reset by peer)
[04:06:13] *** Quits: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz) (Quit: Textual IRC Client: www.textualapp.com)
[04:06:41] *** Joins: pycurious (~Adium@user/pycurious)
[04:07:00] <xardas> rama this is what i meant https://ibb.co/ftvCmcF
[04:07:15] <xardas> it worked now . I'm writing this in java not in python
[04:07:21] *** Joins: Viewday9 (~Viewday@user/viewday)
[04:09:07] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[04:09:07] *** Viewday9 is now known as Viewday
[04:09:09] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[04:09:26] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[04:09:43] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[04:11:51] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[04:12:02] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[04:12:41] *** Joins: Macuser (~Macuser@216.30.159.201)
[04:13:32] *** Quits: emerent (~quassel@p200300cd57485556ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[04:13:41] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[04:14:03] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[04:14:31] *** Joins: scruz (~scruz@41.58.241.56)
[04:14:47] *** Joins: emerent (~quassel@p5b265b66.dip0.t-ipconnect.de)
[04:16:04] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:19:28] *** emerent is now known as Guest999
[04:19:28] *** Joins: emerent_ (~quassel@p200300cd5703cdd4ba27ebfffed28a59.dip0.t-ipconnect.de)
[04:19:28] *** Quits: Guest999 (~quassel@p5b265b66.dip0.t-ipconnect.de) (Killed (osmium.libera.chat (Nickname regained by services)))
[04:19:28] *** emerent_ is now known as emerent
[04:19:34] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[04:21:05] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 264 seconds)
[04:21:40] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[04:21:56] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:22:40] *** Quits: akk (~akk@75.161.146.115) (Quit: +++)
[04:22:42] *** Joins: Wulf (~Wulf@user/wulf)
[04:24:32] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[04:26:41] *** Joins: pycurious (~Adium@user/pycurious)
[04:28:46] *** lunchd is now known as launchd
[04:30:58] *** Quits: thiras (~thiras@user/thiras) (Quit: Leaving)
[04:32:00] *** Joins: Viewday3 (~Viewday@user/viewday)
[04:32:01] *** Joins: Mach` (~Mach@2a02:2f09:d105:f200:51b0:54f2:9c95:a5e9)
[04:34:03] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[04:34:03] *** Viewday3 is now known as Viewday
[04:34:22] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Quit: Leaving)
[04:36:08] *** Quits: Mach` (~Mach@2a02:2f09:d105:f200:51b0:54f2:9c95:a5e9) (Ping timeout: 246 seconds)
[04:36:37] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 250 seconds)
[04:37:02] *** Quits: guenhael (~Thunderbi@2a01:e0a:163:7060:db4:c0cb:81f4:b3d8) (Ping timeout: 240 seconds)
[04:39:38] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[04:40:41] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 246 seconds)
[04:41:40] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[04:42:02] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[04:42:07] <scruz> okay, installing poetry is a chore
[04:44:10] <nedbat> scruz: why isn't it:  pip install poetry
[04:44:54] <scruz> nedbat: apparently not
[04:45:12] <nedbat> scruz: the docs say you can
[04:45:18] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:45:29] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[04:45:49] <nedbat> scruz: how are you trying to do it?
[04:46:17] <scruz> by the way described on the README
[04:46:42] <scruz> it first complained about not having virtualenv, then i installed virtualenv from apt
[04:47:16] <grym> the last time i installed poetry was with get-poetry.py, but it's been a while.
[04:47:24] <scruz> then it died, saying that virtualenv didn't have a cli_run attribute (apparently, too old)
[04:47:29] <grym> i would _probably_ `pipx install poetry` and expect it to work, today
[04:47:54] <scruz> so i ended up having to use of of my pyenv pythons
[04:48:13] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[04:48:19] <scruz> grym: i used the newer install-poetry.py script
[04:48:48] <scruz> the docs mention that get-poetry.py is deprecated, then goes ahead to use it anyway :(
[04:49:28] *** Joins: ArclightVenus_ (~arclightv@bl20-152-95.dsl.telepac.pt)
[04:50:04] <scruz> it's done, and when i try to do poetry --version, i get a modulenotfound
[04:50:25] <nedbat> scruz: it sounds like this is a compounding of a few problems
[04:50:31] <scruz> do i need poetry to use pyptoject.toml?
[04:50:33] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[04:50:44] *** Quits: ArclightVenus_ (~arclightv@bl20-152-95.dsl.telepac.pt) (Client Quit)
[04:50:51] <scruz> i generally manage my projects using a combination of pyenv and pip-tools
[04:52:40] <jinsun> you can use pyproject.toml with pip + setuptools (or any oter backend also)
[04:52:58] <jinsun> it is not poetry specific thing
[04:53:30] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:53:40] <scruz> ah, i guess i had to use the full path to the installed poetry version
[04:54:38] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[04:54:43] <scruz> i'll suss out a cleaner way to have this set up
[04:54:58] <scruz> thanks, nedbat, grym, jinsun
[04:56:02] *** Quits: ElPresidente (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 240 seconds)
[04:57:08] *** Joins: ElPresidente (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net)
[04:57:52] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[05:00:16] *** Joins: amo (~amogorkon@port-92-196-112-168.dynamic.as20676.net)
[05:00:25] *** Joins: Viewday8 (~Viewday@user/viewday)
[05:00:31] *** Joins: aknot (~aknot@2603:900a:1503:17bb:dd06:253a:312b:9c4f)
[05:02:23] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[05:02:23] *** Viewday8 is now known as Viewday
[05:02:31] *** Quits: HenryTheLongshot (~Henry@46.101.4.181) (Quit: ZNC 1.6.3 - http://znc.in)
[05:03:32] *** Quits: amogorkon (~amogorkon@port-83-236-35-197.dynamic.as20676.net) (Ping timeout: 240 seconds)
[05:03:53] *** Joins: HenryTheLongshot (~Henry@46.101.4.181)
[05:05:26] *** Joins: frost (~frost@user/frost)
[05:07:32] *** Quits: soman (~soman@83.139.147.234) (Ping timeout: 256 seconds)
[05:08:45] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:12:52] *** Joins: Nact (~l@2a02:2788:11c4:6e6:a22b:167a:b4a4:994c)
[05:15:19] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[05:15:46] *** Joins: pycurious (~Adium@user/pycurious)
[05:15:50] <Samian> Is this ugly or okay? list(map(np.frombuffer, map(dctx.decompress, record)))
[05:16:09] <Samian> it beats multiple lines of for loops imo
[05:16:25] <grym> i tend to find comprehensions easier to read
[05:16:32] <Samian> good point
[05:16:36] *** Quits: xardas (~xhunter@149.233.51.127) (Ping timeout: 256 seconds)
[05:16:39] <Samian> comprehension! let me try it
[05:17:21] <Samian> [np.frombuffer(blob) for blob in map(dctx.decompress, record)]
[05:17:30] <Samian> ahhh there we go. That's beautiful right there
[05:18:20] <nedbat> Samian: [np.frombuffer(dctx.decompress(rec)) for rec in record]     ?
[05:18:26] <grym> ^
[05:18:29] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-0496-0e7e-86fc-e34f.res6.spectrum.com)
[05:18:29] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[05:18:32] <grym> that's what i'd've done
[05:18:34] <Samian> oh that to
[05:18:38] <Samian> *too
[05:18:39] *** Joins: Yugi (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[05:18:58] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-8401-b6bf-59da-e16a.res6.spectrum.com) (Read error: Connection reset by peer)
[05:19:29] <Samian> even more beautiful! Thank you nedbat  and grym
[05:19:41] <grym> and yes, that's nicer than the loop
[05:19:56] <grym> (though a list of ndarrays... i dunno, man :D )
[05:20:39] <georgios> hello. i have an issue with defensive programming in my homework. casting input() to int for example and then testing for certain integer values is plain wrong. simply because if i feed input() with an str, int() will blow up stopping execution. is there a way  to avoid this with a clause, say with a while loop, to test if what i got was an str or not and a variable is > 100?
[05:21:32] *** Quits: Seto_Kaiba (~hunterkll@remote.kisaracorporation.com) (Ping timeout: 240 seconds)
[05:21:37] <grym> georgios: do you know about try/except yet?
[05:24:20] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-0496-0e7e-86fc-e34f.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[05:24:29] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[05:25:03] *** Joins: Viewday5 (~Viewday@user/viewday)
[05:26:34] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[05:27:19] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[05:27:19] *** Viewday5 is now known as Viewday
[05:27:28] <georgios> grym: no
[05:28:01] <grym> georgios: this sort of thing is what it's for
[05:28:08] <georgios> i saw some reference to  it in stack overflow and that's all
[05:28:24] *** Quits: flokuehn (~flokuehn@87.123.247.74) (Ping timeout: 244 seconds)
[05:28:29] <georgios> this is an exception, right?
[05:28:36] <grym> yes, it's a ValueError
[05:28:58] *** Quits: binary011 (~binary01@192.110.171.216) (Read error: Connection reset by peer)
[05:29:00] *** Joins: binary01 (~binary01@192.110.171.216)
[05:29:30] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[05:30:24] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:30:26] *** Joins: flokuehn (~flokuehn@87.123.247.65)
[05:30:40] <georgios> why have they done things so comlicated??
[05:30:46] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[05:31:17] <georgios> how about var.isdigit()?
[05:31:56] <grym> why test, when you can try and handle getting it wrong
[05:32:29] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:34:10] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:2010:1f0c:b16:6a06) (Ping timeout: 256 seconds)
[05:34:38] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[05:34:43] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[05:35:48] *** ezzieygu1wuf is now known as ezzieyguywuf
[05:36:00] <georgios> because i havent been taught about this, and i have the impressio exceptions are more expensive
[05:36:16] <grym> they are not
[05:36:21] <grym> so no worries there
[05:42:36] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 276 seconds)
[05:43:01] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[05:44:19] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[05:46:04] *** Joins: fikran (~fikran@user/fikran)
[05:46:58] <georgios> but, at what grade of sophistication? i come from Java and can't say i like it when i have to (maybe because i don't know how to do it well) create big try/catch blocks
[05:47:11] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: AA TOO NEE ZUBARALHADEEEEEEEEEEEED)
[05:47:24] <grym> it's pretty common
[05:47:25] *** Quits: bim9262 (~bim9262@user/bim9262) (Quit: ZNC - https://znc.in)
[05:47:46] <georgios> i cry when i see transistors suffer
[05:47:46] <grym> try: int(something) except ValueError as e : #ha ha no, try again
[05:49:10] *** Joins: tokerboker (~tokerboke@c-73-71-182-125.hsd1.ca.comcast.net)
[05:51:28] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[05:51:42] *** Quits: Bakunin (~Lindis@user/lindis) (Ping timeout: 276 seconds)
[05:51:48] <jinsun> georgios: https://docs.python.org/3/glossary.html#term-EAFP
[05:51:57] <grym> georgios: won't you love finding out how for loops work :)
[05:52:47] <grym> (they raise StopException )
[05:53:23] <jinsun> StopIteration
[05:53:33] *** Joins: Viewday6 (~Viewday@user/viewday)
[05:54:23] *** Joins: pycurious (~Adium@user/pycurious)
[05:54:25] <jinsun> but yeah the main thing is exceptions are used for control flow all the time
[05:54:47] *** Joins: bim9262 (~bim9262@user/bim9262)
[05:55:05] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[05:55:05] *** Viewday6 is now known as Viewday
[05:55:26] *** Joins: jonthesnow (~xizhendu@36.112.204.20)
[05:56:21] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:5d10:8850:6285:4e0e)
[05:57:40] *** Joins: Viewday5 (~Viewday@user/viewday)
[05:58:32] *** Quits: Inline (~Inline@aftr-37-201-240-235.unity-media.net) (Ping timeout: 240 seconds)
[05:58:56] *** Joins: TML (~tml@user/tml)
[05:59:15] *** Quits: Viewday (~Viewday@user/viewday) (Read error: Connection reset by peer)
[05:59:15] *** Viewday5 is now known as Viewday
[06:01:22] *** Quits: alzgh (~alzgh@user/alzgh) (Ping timeout: 256 seconds)
[06:01:53] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 264 seconds)
[06:02:53] *** Joins: ExpiredKebab (~sgreadly@32.58.252.27.dyn.cust.vf.net.nz)
[06:03:08] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[06:03:24] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[06:04:09] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[06:04:31] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[06:04:42] *** Joins: xsx (~x@140.red-88-20-100.staticip.rima-tde.net)
[06:05:53] *** Quits: johnjay (~pi@192.142.100.50) (Ping timeout: 250 seconds)
[06:06:41] *** Quits: Yugi (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 264 seconds)
[06:06:58] *** Quits: bim9262 (~bim9262@user/bim9262) (Quit: ZNC - https://znc.in)
[06:07:16] *** Joins: Fiji (~Fiji@user/fiji)
[06:07:41] *** Joins: bim9262 (~bim9262@user/bim9262)
[06:07:52] *** Joins: alzgh (alzgh@user/alzgh)
[06:08:57] *** Joins: johnjay (~pi@192.142.100.50)
[06:09:21] *** Quits: xsx (~x@140.red-88-20-100.staticip.rima-tde.net) (Ping timeout: 250 seconds)
[06:10:29] *** Quits: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net) (Quit: Konversation terminated!)
[06:14:38] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[06:15:23] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Ping timeout: 264 seconds)
[06:15:42] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[06:17:55] *** Quits: hel0 (~hel0@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[06:18:48] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Remote host closed the connection)
[06:19:07] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9971-ce5a-c805-3e08.res6.spectrum.com)
[06:19:45] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 250 seconds)
[06:20:18] *** Joins: brabrax (~brabrax@user/brabrax)
[06:20:46] <dre> why does the rhs of 'or' assignment attempt to evaluate/
[06:20:47] <dre> ?
[06:21:39] <dre> I have a D1 = dict(a=1,b=2) and D2 = dict(empty=True)
[06:21:44] <dre> I want to say:
[06:22:07] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:2010:1f0c:b16:6a06)
[06:22:34] <dre> results = D.get('empty', None) or some_func(D['a'], D['b'])
[06:22:46] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: Textual IRC Client: www.textualapp.com)
[06:22:59] <dre> but it tries to evaluate some_func before getting the 'empty' key, and thus, raising KeyError.
[06:23:26] *** Quits: kenwoodfox (~quassel@user/kenwoodfox) (Ping timeout: 260 seconds)
[06:23:32] *** Quits: aknot (~aknot@2603:900a:1503:17bb:dd06:253a:312b:9c4f) (Ping timeout: 240 seconds)
[06:23:32] <dre> for D1 I want results = some_func(D1['a'], D1['b'])    but for D2 I want results = True
[06:24:05] <dre> (this is a trivial example highlighting what the issue is, not that my code is using 'D1' or True values here)
[06:24:15] <dre> unless...
[06:24:45] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[06:24:59] <dre> nvm I'm dumb.
[06:26:48] *** Joins: kenwoodfox (~quassel@user/kenwoodfox)
[06:27:29] <dre> the value for 'empty' I was getting was a falsy vaule, causing the 'or' to swithc
[06:28:47] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[06:29:05] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 256 seconds)
[06:29:32] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[06:29:38] *** Joins: JavaBean (~JavaBean@user/javabean)
[06:30:02] *** Quits: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr) (Quit: ZNC 1.8.2 - https://znc.in)
[06:30:48] *** Joins: RiFo (~RiFo@user/rifo)
[06:35:23] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:35:41] *** Joins: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr)
[06:36:27] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:38:58] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[06:41:10] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[06:42:23] *** Joins: Viewday9 (~Viewday@user/viewday)
[06:44:23] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[06:44:23] *** Viewday9 is now known as Viewday
[06:44:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:47:11] *** Joins: SlaveGeek334269 (~SlaveGeek@gateway/vpn/pia/slavegeek334269)
[06:48:20] *** Quits: Axy (~Axy@user/axy) (Ping timeout: 260 seconds)
[06:50:47] *** Quits: Elzington (~Elzington@static-68-235-44-53.cust.tzulo.com) (Quit: Leaving)
[06:50:49] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Killed (NickServ (GHOST command used by jeho1)))
[06:52:44] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[06:52:51] *** Quits: mdemo (~mdemo@user/mdemo22) (Quit: The Lounge - https://thelounge.github.io)
[06:53:01] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[06:53:02] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 240 seconds)
[06:54:05] *** Quits: kostkon (~androirc@2a02:587:a115:613c:d067:8cf:12ba:3d42) (Ping timeout: 264 seconds)
[06:55:02] *** Quits: kenwoodfox (~quassel@user/kenwoodfox) (Ping timeout: 240 seconds)
[07:00:27] *** Joins: kenwoodfox (~quassel@user/kenwoodfox)
[07:03:18] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[07:03:21] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[07:05:49] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:05:49] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:05:49] *** finn_elija is now known as FinnElija
[07:05:54] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:05:55] *** Joins: cliluw (~cliluw@47.147.80.149)
[07:06:14] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[07:06:49] *** Joins: mcpac82 (~textual@p5dc1c677.dip0.t-ipconnect.de)
[07:08:39] *** Joins: nyjets (~zz@2001:8003:1612:d500:90ae:f6da:98b8:499)
[07:09:50] *** Joins: dba (uid502594@id-502594.hampstead.irccloud.com)
[07:10:47] *** Quits: Abrax (~Abrax@user/abrax) (Quit: Leaving)
[07:11:02] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[07:11:26] *** Joins: Viewday1 (~Viewday@user/viewday)
[07:11:32] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 240 seconds)
[07:13:17] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[07:13:17] *** Viewday1 is now known as Viewday
[07:13:47] *** Quits: Barones (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Remote host closed the connection)
[07:14:50] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[07:16:49] <cliluw> What does "~=" in a requirements.txt version mean?
[07:18:05] <jinsun> cliluw: https://www.python.org/dev/peps/pep-0440/#compatible-release
[07:18:40] *** Quits: Sario (uid356235@fosshost/cdo/Sario) (Quit: Connection closed for inactivity)
[07:19:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[07:20:02] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[07:20:04] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:21:47] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:23:01] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 250 seconds)
[07:26:24] *** Joins: Axy (~Axy@user/axy)
[07:27:05] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Remote host closed the connection)
[07:27:27] *** Quits: kenwoodfox (~quassel@user/kenwoodfox) (Ping timeout: 256 seconds)
[07:29:12] *** Quits: alzgh (alzgh@user/alzgh) (Ping timeout: 256 seconds)
[07:29:14] *** Joins: kenwoodfox (~quassel@user/kenwoodfox)
[07:30:51] *** Joins: Abrax (~Abrax@user/abrax)
[07:30:52] *** Joins: INeedAHandle (~INeedAHan@user/ineedahandle)
[07:32:15] *** Quits: Gudddu (~Guddu@186.106.129.22) (Quit: Leaving)
[07:33:32] *** Joins: bitreverb (~bitcycle@174-21-36-109.tukw.qwest.net)
[07:33:41] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:33:53] *** Quits: INeedAHandle (~INeedAHan@user/ineedahandle) (Client Quit)
[07:34:35] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 264 seconds)
[07:34:37] *** Joins: alzgh (~alzgh@user/alzgh)
[07:35:33] *** Joins: Viewday2 (~Viewday@user/viewday)
[07:35:35] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:05] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:37:39] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[07:37:39] *** Viewday2 is now known as Viewday
[07:39:20] *** Quits: NeoCore (~neocore@37.120.204.164) (Quit: Leaving)
[07:39:23] *** Joins: hel0 (~hel0@user/redrum88)
[07:41:57] *** Joins: jinsun (~quassel@user/jinsun)
[07:42:17] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:42:35] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[07:43:10] *** Joins: Bakunin (~Lindis@user/lindis)
[07:43:20] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[07:43:35] *** Joins: thisdude (~thisdude@pool-72-65-50-80.bflony.fios.verizon.net)
[07:44:43] *** Seto_Kaiba is now known as Hunterkll
[07:45:00] <thisdude> any users of the arrow datetime library know how to always have the distance show a digit? or even only the distance without the human words? e.g. instead of "an hour ago" have it be "1 hour ago" or even just "1"
[07:45:53] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[07:47:26] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[07:49:56] *** Joins: gulzar (~gulzar@14.139.123.36)
[07:51:15] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 256 seconds)
[07:51:59] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Read error: Connection reset by peer)
[07:52:07] <gulzar> Hi. Few days ago  I aksed a question to inset a new column with * or - . Aanswer was:    df_res["mark"] = df_res.res_num.isin(lst_res).map({True: "*", False: "."})      , problem, the res_num is not unique. Uniqueness comesby two columns. So Now I have a) al the rows as df where I need to put * and others should get -  b) a list/set of tuple with two values from two columns. c) indices of the rows where too put te *   .  I tried iloc[lst)inidces] but it
[07:52:09] <gulzar> throwsTypeError: unhashable type: 'list'   Any help please
[07:52:39] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[07:53:02] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[07:54:01] <gulzar> So the question will be: I have a list of indices. Insert * if the index exist in list else put -
[07:54:06] <gulzar> in dataframe
[07:54:50] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[07:55:25] *** Joins: fikran (~fikran@user/fikran)
[07:57:32] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 240 seconds)
[07:59:27] *** Joins: Viewday5 (~Viewday@user/viewday)
[08:00:02] *** Joins: lethu (~lethu@user/lethu)
[08:00:02] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[08:00:24] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:01:27] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 256 seconds)
[08:01:27] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[08:01:27] *** Viewday5 is now known as Viewday
[08:02:57] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:2010:1f0c:b16:6a06) (Quit: Client closed)
[08:04:51] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[08:04:59] *** Quits: hailhydra (~hailhydra@136.36.153.168) (Ping timeout: 268 seconds)
[08:11:51] *** Quits: MercilessDeth (~brad@136.49.59.177) (Quit: Konversation terminated!)
[08:11:56] *** Quits: hel0 (~hel0@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[08:13:40] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[08:14:35] *** Quits: sreve (~quassel@p4ff44cd9.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[08:16:09] *** Quits: twofingersneat (~twofinger@174-080-036-228.res.spectrum.com) (Read error: Connection reset by peer)
[08:16:28] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[08:24:19] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[08:25:07] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[08:26:01] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[08:27:31] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 256 seconds)
[08:27:33] <gulzar> Solved. I added new column and set value of all rows to '-'  then for these indices changed the value to '*'
[08:27:47] *** Joins: Viewday1 (~Viewday@user/viewday)
[08:28:00] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Quit: ZNC - https://znc.in)
[08:28:33] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[08:28:38] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[08:28:41] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[08:29:22] *** Quits: Viewday (~Viewday@user/viewday) (Read error: Connection reset by peer)
[08:29:23] *** Viewday1 is now known as Viewday
[08:30:01] *** Quits: emerent (~quassel@p200300cd5703cdd4ba27ebfffed28a59.dip0.t-ipconnect.de) (Remote host closed the connection)
[08:30:11] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[08:31:01] *** Joins: djhankb (~djhankb@208.113.164.68)
[08:31:45] *** Joins: emerent (~quassel@p200300cd5703cdd4ba27ebfffed28a59.dip0.t-ipconnect.de)
[08:32:35] *** Joins: hailhydra (~hailhydra@136.36.153.168)
[08:33:03] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[08:33:07] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[08:35:00] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:36:00] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:36:18] *** Joins: MercilessDeth (~brad@136.49.59.177)
[08:36:56] *** Joins: ravan_ (~ravan@user/ravan)
[08:38:51] *** Quits: hailhydra (~hailhydra@136.36.153.168) (Ping timeout: 256 seconds)
[08:39:23] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 246 seconds)
[08:39:32] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[08:40:32] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[08:40:33] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[08:47:22] *** Joins: Viewday3 (~Viewday@user/viewday)
[08:48:51] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Read error: Connection reset by peer)
[08:49:37] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[08:49:37] *** Viewday3 is now known as Viewday
[08:51:58] *** Joins: Viewday6 (~Viewday@user/viewday)
[08:53:24] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[08:54:09] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[08:54:09] *** Viewday6 is now known as Viewday
[08:54:11] *** Quits: lionslicer (~lionslice@2804:d41:a7a6:1300:10fc:fe6e:4721:d309) (Quit: Leaving)
[08:55:11] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Client Quit)
[08:57:08] *** Quits: x_kuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[08:57:45] *** Quits: Bakunin (~Lindis@user/lindis) (Quit: taco tuesday)
[09:02:07] *** Joins: hel0 (~hel0@user/redrum88)
[09:02:48] *** Quits: nyjets (~zz@2001:8003:1612:d500:90ae:f6da:98b8:499) (Ping timeout: 260 seconds)
[09:03:59] *** Quits: justm3 (~Username@82-171-42-20.fixed.kpn.net) (Ping timeout: 250 seconds)
[09:04:03] *** Joins: justm3 (~Username@82-171-42-20.fixed.kpn.net)
[09:04:06] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Quit: Leaving)
[09:04:32] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:04:51] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 250 seconds)
[09:04:57] *** ravan_ is now known as ravan
[09:06:11] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:07:46] *** Joins: xsx (~x@140.red-88-20-100.staticip.rima-tde.net)
[09:08:42] *** Quits: alxndr (~alexander@ybti.net) (Remote host closed the connection)
[09:11:35] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9971-ce5a-c805-3e08.res6.spectrum.com) (Remote host closed the connection)
[09:12:01] *** Joins: Viewday0 (~Viewday@user/viewday)
[09:12:08] *** Joins: alxndr (~alexander@ybti.net)
[09:12:17] *** Quits: xsx (~x@140.red-88-20-100.staticip.rima-tde.net) (Ping timeout: 256 seconds)
[09:13:59] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[09:13:59] *** Viewday0 is now known as Viewday
[09:15:09] *** Quits: mcpac82 (~textual@p5dc1c677.dip0.t-ipconnect.de) (Quit: mcpac82)
[09:15:15] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:16:02] *** Quits: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Read error: Connection reset by peer)
[09:16:05] *** Joins: nyjets (~zz@2001:8003:1612:d500:5d1:6077:62ce:c82d)
[09:16:29] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 246 seconds)
[09:17:55] *** Joins: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[09:18:07] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (Quit: leaving)
[09:21:35] *** Joins: mcpac82 (~textual@212.25.0.228)
[09:22:59] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[09:23:30] *** Quits: mcpac82 (~textual@212.25.0.228) (Client Quit)
[09:23:35] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:25:28] *** Joins: vit (~vit@chello085216193138.chello.sk)
[09:25:54] *** Joins: upsala (~zcb@185.213.155.252)
[09:27:18] *** yyolk is now known as yolk
[09:30:06] *** Quits: nyjets (~zz@2001:8003:1612:d500:5d1:6077:62ce:c82d) (Quit: WeeChat 1.1.1)
[09:32:12] *** dece_ is now known as dece
[09:33:21] *** Joins: stranac (~stranac@195.29.239.126)
[09:33:31] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[09:35:06] *** Quits: emf (~emf@2620:10d:c090:400::5:f986) (Ping timeout: 245 seconds)
[09:37:24] *** Joins: Viewday6 (~Viewday@user/viewday)
[09:37:40] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[09:39:00] *** Quits: Viewday (~Viewday@user/viewday) (Read error: Connection reset by peer)
[09:39:00] *** Viewday6 is now known as Viewday
[09:39:26] *** Joins: dthpulse (~quassel@podciarou.sk)
[09:41:47] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[09:41:48] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[09:43:07] *** Joins: hailhydra (~hailhydra@136.36.153.168)
[09:44:44] *** Quits: hel0 (~hel0@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[09:46:02] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[09:46:17] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 256 seconds)
[09:49:27] *** Quits: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016) (Quit: Client limit exceeded: 20000)
[09:49:29] *** Quits: hailhydra (~hailhydra@136.36.153.168) (Ping timeout: 250 seconds)
[09:49:29] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[09:49:46] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[09:50:02] *** Quits: gulzar (~gulzar@14.139.123.36) (Quit: Konversation terminated!)
[09:51:32] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 240 seconds)
[09:52:20] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[09:53:00] *** Joins: cdleonard (~cdleonard@ec2-52-70-55-94.compute-1.amazonaws.com)
[09:53:35] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:57:22] *** Quits: Hummer12007 (061e0434dc@2604:bf00:710:0:5054:ff:feea:5006) (Read error: Connection reset by peer)
[09:57:29] *** Joins: Hummer12007 (061e0434dc@chat.sr.ht)
[09:57:39] *** Joins: djapo (~archangel@user/djapo)
[09:58:02] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[10:01:02] *** Joins: kostkon (~androirc@athedsl-393939.home.otenet.gr)
[10:02:03] *** nvz_ is now known as mvz
[10:02:09] *** mvz is now known as nvz
[10:02:19] *** Quits: Viewday (~Viewday@user/viewday) (Read error: Connection reset by peer)
[10:02:31] *** Joins: Viewday (~Viewday@user/viewday)
[10:02:32] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[10:03:04] *** Quits: Omega037 (~Omega037@047-024-168-024.res.spectrum.com) ()
[10:04:46] *** Joins: fikran (~fikran@user/fikran)
[10:06:57] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[10:07:05] *** Quits: scruz (~scruz@41.58.241.56) (Quit: Leaving)
[10:07:55] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[10:08:37] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[10:12:31] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[10:14:49] *** Joins: stockholm (~Andreas@p200300d2c708e00069139500aa25ed3d.dip0.t-ipconnect.de)
[10:16:41] *** Joins: fdan (~fdan@103.215.168.1)
[10:16:54] <fdan> t = [1,2,3,4] , how to convert this into a string '1234'
[10:16:57] *** Joins: aleko1[m] (~aleko1@2001:470:69fc:105::1:1016)
[10:17:34] <rindolf> fdan: "".join(map str,t)
[10:17:44] <rindolf> untested!
[10:18:01] <fdan> doesnt work
[10:18:17] <stranac> rindolf: missing parentheses for map()
[10:18:21] <stranac> fdan: ''.join(str(x) for x in t)
[10:18:51] <fdan> stranac: "".join(map(str),t)
[10:18:53] <fdan> still doesnt work
[10:18:55] *** Joins: nomic (~nomic@185.192.69.7)
[10:19:12] <rindolf> stranac: ah, thanks
[10:19:18] <stranac> fdan: that one would be "".join(map(str, t))
[10:19:29] <rindolf> fdan: "".join(map( str,t))
[10:19:53] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[10:20:32] *** Quits: TJ- (~root@user/tj-) (Ping timeout: 240 seconds)
[10:21:02] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[10:21:12] *** Joins: Enitin (~Enitin@82.102.22.85)
[10:21:27] *** Joins: TJ- (~root@user/tj-)
[10:22:25] <fdan> sure, thanks
[10:23:00] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:24:23] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[10:24:35] *** Quits: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com) (Ping timeout: 250 seconds)
[10:25:26] *** Joins: Derailed (~tom@ec2-13-211-184-100.ap-southeast-2.compute.amazonaws.com)
[10:26:40] *** Joins: Viewday5 (~Viewday@user/viewday)
[10:28:47] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[10:28:48] *** Viewday5 is now known as Viewday
[10:30:02] *** Joins: xcombelle (~xavie@176-139-252-198.abo.bbox.fr)
[10:32:24] <rindolf> fdan: you're welcome
[10:34:31] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[10:34:46] *** Quits: ede (~ede@user/ede) (Remote host closed the connection)
[10:35:31] *** Joins: ede (~ede@user/ede)
[10:36:55] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:40:45] *** Joins: mcpac82 (~textual@212.25.0.228)
[10:41:18] *** Joins: gusto (~Augustus@109.255.100.54)
[10:43:10] *** Joins: ExeciN (~ExeciN@user/nicexe)
[10:44:37] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[10:44:48] *** Joins: kosh (~kosh@user/kosh)
[10:45:42] <bookworm> functional style over a generator expression?
[10:46:11] * bookworm shoos rindolf back to the nix channel
[10:47:27] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:47:41] *** Joins: Viewday6 (~Viewday@user/viewday)
[10:48:10] *** Joins: seednode (~seednode@user/seednode)
[10:48:23] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[10:48:27] <rindolf> bookworm: "nix"? https://en.wikipedia.org/wiki/Nix_package_manager ?
[10:49:16] *** Joins: VaniaPy (~VaniaPy@46.12.226.1.dsl.dyn.forthnet.gr)
[10:49:45] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[10:49:45] *** Viewday6 is now known as Viewday
[10:50:04] <bookworm> the first functional style thing that came to my mind ;P
[10:50:05] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[10:50:27] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[10:50:44] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Client Quit)
[10:51:30] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[10:52:05] <rindolf> bookworm: ok, generator exprs can be purely functional too
[10:52:08] *** Quits: upsala (~zcb@185.213.155.252) (Quit: WeeChat 3.3)
[10:52:26] *** Parts: VaniaPy (~VaniaPy@46.12.226.1.dsl.dyn.forthnet.gr) ()
[10:52:30] <bookworm> sure
[10:52:45] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 250 seconds)
[10:52:48] <bookworm> I was just poking fun at your style choice
[10:53:10] <bookworm> js folks use map a lot, python people less so
[10:54:04] *** Joins: manti7 (~manti7@176.10.104.94)
[10:55:15] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[10:55:28] <odix> is bitchX still a thing ?
[10:55:29] <odix> oops
[10:56:05] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Client Quit)
[10:59:18] *** Quits: kostkon (~androirc@athedsl-393939.home.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[10:59:47] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[11:01:20] <rindolf> bookworm: i see
[11:01:56] <braxas> is there any PEP or something I can point to that says don't do one class per file programming?
[11:02:14] <braxas> The best I can find is this: https://stackoverflow.com/questions/106896/possibilities-for-python-classes-organized-across-files
[11:02:39] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[11:03:09] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[11:03:12] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 268 seconds)
[11:06:42] *** Quits: stranac (~stranac@195.29.239.126) (Ping timeout: 260 seconds)
[11:08:25] <deniska> braxas: just point them to… pretty much any opensource python project
[11:08:26] <kosh> I use map extensively for parallelization
[11:08:48] <kosh> braxas, I don't know of any PEP for that, how many I put in a file depends on how big they are
[11:09:04] <kosh> braxas, I don't like scrolling through thousands of loc because there are so many classes or functions in a file
[11:09:46] <BrenBarn> the real question is what are other people pointing to say anyone SHOULD do one-class-per-file programming?
[11:09:59] <deniska> BrenBarn: java, probably
[11:10:40] *** wils is now known as wilz
[11:10:41] *** Joins: greedom (~greedom@x59cc9b74.dyn.telefonica.de)
[11:10:50] <kosh> I have never seen something in python that suggested one class per file, even very early on that was not the case
[11:11:00] <kosh> I have not seen that in c++ either
[11:11:30] <deniska> it's a compilation error in java to have more than one top level class in a file
[11:11:40] <deniska> might be C# as well?
[11:12:14] *** Joins: Viewday4 (~Viewday@user/viewday)
[11:12:16] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:13:08] <BrenBarn> it always seemed nuts that java required that
[11:13:42] *** Seto_Kaiba is now known as Hunterkll
[11:14:07] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[11:14:07] *** Viewday4 is now known as Viewday
[11:14:52] *** Joins: stranac (~stranac@195.29.239.126)
[11:14:56] <kosh> java is weird
[11:15:05] <kosh> doesn't it require everything to be in a class or at least it used to
[11:15:56] <deniska> it does
[11:16:08] <rindolf> kosh: https://steve-yegge.blogspot.com/2006/03/execution-in-kingdom-of-nouns.html
[11:16:12] <deniska> so no more or fewer than 1 class per file :)
[11:16:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[11:16:57] *** Joins: ericlee (~ericlee@2601:647:4681:3420::2)
[11:17:54] *** Quits: vit (~vit@chello085216193138.chello.sk) (Quit: Konversation terminated!)
[11:18:02] *** Joins: mrwick (~mrwick@user/mrwick)
[11:18:22] <kosh> I have not spent more than about an hour or two with java in my life, long enough to make hello world and see some basic stuff but not beyond that
[11:18:33] *** Joins: tscopp (~tms@c-76-115-26-235.hsd1.or.comcast.net)
[11:18:42] <kosh> java is not really relevant to what I do because of the type of language it is
[11:19:17] <kosh> for the stuff I do it runs slower than python programs do while also being harder to write
[11:20:18] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[11:21:10] *** Joins: tempate (~alpha@user/tempate)
[11:21:20] *** Joins: ras_manny (~ras_manny@196.24.166.120)
[11:21:21] <tempate> Hello. Is there a better way of doing https://bpa.st/PU6Q ?
[11:21:40] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Client Quit)
[11:21:46] <kosh> on a different note visual studio has been encouraging me to add type annotations to functions and so far it has helped improve the code :)
[11:22:30] *** Joins: tobybl (~tobybl@213.31.135.91)
[11:23:48] <ras_manny> I have a very basic caching mechanism using python dictionaries. Anytime I rerun my app(it is a fastapi app), I realize the cache is cleared. I am not sure what exactly I am missing. My guess is that I am making a mess of OOP constructs in Python
[11:23:51] <ras_manny> https://gist.github.com/theSekyi/72f24e0b250ee573ee05466352000eb3
[11:24:28] <adder> deniska, I think it's exactly one /public/ class, you can have other classes in a file IIRC
[11:24:37] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[11:24:58] <kosh> one of my professors in hpc one commented that we could write our code in c,c++,fortran, python, julia etc. but if we wrote it in java we shoudl be thrown out the window
[11:25:09] <ras_manny> am I missing something in my code?
[11:25:47] <rindolf> ras_manny: {} does not persist across process exits
[11:25:56] *** Quits: OPK (~OPK@user/opk) (Remote host closed the connection)
[11:26:21] *** Joins: swensson (~swensson@213.88.131.10)
[11:26:24] <rindolf> ras_manny: it is stored in RAM
[11:26:26] <kosh> I have also being using attrs to make a lot more dataclasses to make it easier to work with bundles of data and better define what bundles are required
[11:27:36] <ras_manny> rindolf: thanks...I thought as much. Is there any way I can circumvent this?
[11:27:46] <adder> write to disk obviously
[11:27:58] *** Joins: whatif (~user@114.250.136.140)
[11:28:18] <deniska> or never shut down the process :)
[11:28:35] <rindolf> ras_manny: use https://www.shlomifish.org/open-source/resources/databases-list/ or similar
[11:28:36] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[11:28:40] <ras_manny> Writing to disc means I have to store the data in a file or db
[11:28:51] <whatif> does python support multiple items in for? like [ [x,y,z] for x,y,z in alist if (x+y+z) == 0 ]
[11:29:07] <rindolf> whatif: yes, it does
[11:29:32] <ras_manny> rindolf: I am trying to build this from ground up as learning process.
[11:29:32] *** Quits: TJ- (~root@user/tj-) (Ping timeout: 240 seconds)
[11:29:39] <deniska> whatif: depends on what you want to do, this construct will expect a list like [[1, 2, 3], [4, 5, 6]]
[11:29:41] <whatif> rindolf: does it need a ()? like for (x,y,z) in ?
[11:30:06] <whatif> deniska: yes
[11:30:36] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[11:30:44] *** Joins: TJ- (~root@user/tj-)
[11:30:45] <rindolf> whatif: not usually
[11:30:51] <ras_manny> deniska: The page is server is automatically reloaded when changes are made to the code. Does each reload shut down the process?
[11:30:53] <adder> ras_manny, spilling to disk is inevitable if you want to ensure persistence.
[11:30:53] <whatif> rindolf: ok
[11:31:05] <deniska> ras_manny: I'd think so
[11:31:56] *** Joins: grooverman (~grooverma@177.95.12.14)
[11:32:02] <adder> note that I'm not suggesting a write-through strategy that would /always/ spill to disk
[11:32:08] <deniska> ras_manny: also, each time the route handler is run, you create a new ItemCache()
[11:32:30] *** Joins: grooverman__ (~grooverma@177.102.119.40)
[11:32:34] <deniska> ras_manny: so it won't get cached even across hits to the same server
[11:33:13] <whatif> alist=[-1,0,1,2,-1,-4]; [[x,y,z] for x,y,z in alist if (x+y+z) == 0]; get erorr TypeError: cannot unpack non-iterable int object, what's wrong?
[11:33:24] <ras_manny> adder: can you explain what you mean by a "write-through strategy"?
[11:34:33] <ras_manny> deniska: I think that is the problem. How do I resolve that? I mean prevent the creation of ItemCache per each run of the route handler?
[11:35:02] *** Quits: grooverman_ (~grooverma@179.99.123.165) (Ping timeout: 240 seconds)
[11:35:57] <Repiphany> whatif: `for x, y, z in alist:`  expects exactly three elements to unpack in each item of alist
[11:35:59] <ras_manny> I understand that instantiating the variable ItemCache() each time clears the cache
[11:36:31] *** Quits: grooverman (~grooverma@177.95.12.14) (Ping timeout: 250 seconds)
[11:37:00] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[11:37:08] *** Joins: Viewday8 (~Viewday@user/viewday)
[11:37:19] <whatif> Repiphany: I see
[11:37:24] *** Joins: palasso (~palasso@user/palasso)
[11:38:22] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: Bridge terminating on SIGTERM)
[11:38:47] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[11:38:48] *** Quits: tempate (~alpha@user/tempate) (Quit: Leaving.)
[11:39:03] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[11:39:03] *** Viewday8 is now known as Viewday
[11:39:05] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[11:39:10] <deniska> ras_manny: well, the simplest way is just to create it somewhere outside of the functions
[11:39:37] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[11:40:54] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[11:41:02] *** Quits: mallkrampus (~mallkramp@172.93.207.86) (Ping timeout: 240 seconds)
[11:41:47] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[11:41:53] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[11:42:10] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[11:42:16] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:42:27] *** Quits: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[11:42:38] *** Joins: elissparke (~elisspark@pool-96-238-11-235.prvdri.fios.verizon.net)
[11:42:41] *** Quits: Helle (~helle@80-100-16-232.ip.xs4all.nl) (Ping timeout: 268 seconds)
[11:43:09] *** Joins: ras_manny64 (~ras_manny@196.24.166.120)
[11:43:29] *** Quits: zuQe8 (~zuQe8@cpc105068-sgyl40-2-0-cust196.18-2.cable.virginm.net) (Ping timeout: 246 seconds)
[11:45:00] <elissparke> I've got a Windows program that needs to run a python server in the background. I can't seem for the life of me to get that to work. I've tried linking to python39.lib and doing Py_Initialize() and then PyRun_SimpleString() but nothing shows up, not even an error. Then I tried run-time linking to python39.dll and doing the whole GetProcAddress()
[11:45:01] <elissparke> thing to call those two Py_ functions, and still nothing happens at all. I can't even do a "print('test')" in PyRun_SimpleString() and there's no errors whatsoever. What is going wrong?
[11:45:20] *** Quits: ras_manny (~ras_manny@196.24.166.120) (Ping timeout: 256 seconds)
[11:45:53] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:46:26] <KirkMcDonald> elissparke: Is this a console program?
[11:46:30] *** Joins: carl- (~carl-@185.103.188.130)
[11:46:52] <elissparke> KirkMcDonald: it's a Win32 program, it starts as a wWinMain
[11:47:21] *** Quits: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net) (Ping timeout: 250 seconds)
[11:47:22] *** Joins: sidj (~sid@user/sidj)
[11:47:25] <KirkMcDonald> elissparke: But is there a command prompt window associated with it? E.g. if you used `printf()` from C, would that output appear somewhere?
[11:48:19] *** Joins: vlm (~vlm@user/vlm)
[11:48:59] *** Joins: OPK (~OPK@user/opk)
[11:49:33] <elissparke> KirkMcDonald: printf() goes nowhere but OutputDebugString() can output to the Output window
[11:50:16] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-7564-321e-ff0d-0ba0.res6.spectrum.com) (Quit: jarthur)
[11:50:41] <KirkMcDonald> What's the "Output" window? Is this a feature of your IDE? In any case, Python's print() writes to stdout, unless you provide it with some other file to write to. And exceptions would get written to stderr.
[11:51:03] <elissparke> however, I'm trying to do just: PyRun_SimpleString("import me");
[11:51:04] <elissparke> and I have me.py that generates an empty file (it does this when I run it with "python me.py") but the empty file is not generated by the PyRun_SimpleString()
[11:51:07] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:51:12] *** Quits: greedom (~greedom@x59cc9b74.dyn.telefonica.de) (Remote host closed the connection)
[11:51:24] <elissparke> yeah it's an IDE feature. I guess I should try to figure out where the stdout and stderr are going to
[11:51:31] *** Quits: jonthesnow (~xizhendu@36.112.204.20) (Ping timeout: 256 seconds)
[11:52:03] *** Quits: Zer0xFF (m-3laxwu@matrix.michaelsasser.org) (Remote host closed the connection)
[11:52:07] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[11:52:12] <KirkMcDonald> As I recall, there is a linker flag on Windows which determines whether an executable uses a command prompt window or not.
[11:52:20] *** Joins: tempate (~alpha@user/tempate)
[11:52:30] *** Joins: ubert (~Thunderbi@p200300ecdf4fca6ff42c1e431d1c483e.dip0.t-ipconnect.de)
[11:52:37] *** Quits: tempate (~alpha@user/tempate) (Client Quit)
[11:52:45] *** Joins: thurs8060142 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[11:53:17] <KirkMcDonald> Your typical GUI program will disable the command prompt window, and will simply discard stdout and stderr, but you may find it useful to re-enable it.
[11:53:25] *** Quits: thurs806014 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Read error: Connection reset by peer)
[11:53:25] *** thurs8060142 is now known as thurs806014
[11:53:41] <KirkMcDonald> If just for debug purposes.
[11:54:00] <elissparke> hmm I don't see it, but I'll try to do it another way
[11:54:02] *** Joins: Zer0xFF (m-3laxwu@matrix.michaelsasser.org)
[11:54:42] *** Joins: mallkrampus (~mallkramp@172.93.207.88)
[11:55:09] <elissparke> okay, I got the console with an AllocConsole and redirected output there. seems good so far
[11:55:25] *** Joins: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net)
[11:55:42] *** Joins: rendar (~rendar@user/rendar)
[11:56:42] <elissparke> KirkMcDonald: so printf() now spits out to the console, but PyRun_SimpleString("print('test')"); does not
[11:57:20] <elissparke> and I've put stderr there too, so I should see any messages
[11:57:28] *** Quits: ubert (~Thunderbi@p200300ecdf4fca6ff42c1e431d1c483e.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[11:57:49] *** Joins: ubert (~Thunderbi@p548c9652.dip0.t-ipconnect.de)
[12:00:03] *** Quits: TJ- (~root@user/tj-) (Changing host)
[12:00:03] *** Joins: TJ- (~root@about/linux/staff/tj-)
[12:01:19] *** Joins: djapo (~archangel@user/djapo)
[12:01:21] *** Joins: vladoski (~vladoski@2001:b07:add:d406:1267:a9cc:4ea9:4324)
[12:01:43] <elissparke> KirkMcDonald: here's a super simple pastebin of a program that doesn't print anything to the console: https://pastebin.com/fKC3b959
[12:01:48] *** Joins: Viewday2 (~Viewday@user/viewday)
[12:02:28] <KirkMcDonald> elissparke: What happens if it's `print("test", flush=True)` ?
[12:02:46] <elissparke> same, empty console
[12:03:14] <elissparke> when I add "printf("here");" underneath it, there "here" prints, but not the "test"
[12:03:49] <KirkMcDonald> Yeah, I don't know.
[12:03:59] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[12:03:59] *** Viewday2 is now known as Viewday
[12:04:06] <KirkMcDonald> Embedding Python has never been its strong suit.
[12:04:57] <KirkMcDonald> elissparke: What does PyRun_SimpleString return?
[12:05:19] *** Quits: fdan (~fdan@103.215.168.1) (Quit: Client closed)
[12:05:31] <elissparke> KirkMcDonald: returns 0, which should mean good
[12:05:39] *** Joins: gusto (~Augustus@109.255.100.54)
[12:05:41] <elissparke> no worries, thanks for thinking about it either way
[12:05:42] <KirkMcDonald> Yes.
[12:06:04] <elissparke> it's just been frustrating me for 6 hours today, and I'm still stuck at the most simple example
[12:06:59] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[12:07:17] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 264 seconds)
[12:08:23] *** Quits: nomic (~nomic@185.192.69.7) (Quit: Leaving)
[12:08:28] *** Joins: soman (~soman@83.139.147.234)
[12:08:28] <KirkMcDonald> Try adding a call to Py_Finalize() as well, to see if it blows up on shutdown somehow.
[12:08:44] *** Joins: chele (~chele@user/chele)
[12:08:50] *** Joins: gregoryloscombe (~gregorylo@213.86.15.34)
[12:09:07] *** Falcon|1 is now known as Falcon|
[12:11:44] *** Quits: redgloboli (~redglobol@user/redgloboli) (Ping timeout: 260 seconds)
[12:12:03] <elissparke> KirkMcDonald: nothing blows up, works just fine with the finalize call too
[12:12:29] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[12:12:38] <elissparke> but still nothing showing up, and my guess so far is the python code is simply not being run
[12:14:07] *** Joins: fikran (~fikran@user/fikran)
[12:15:00] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[12:15:00] *** Joins: brelod (~me@90.244.150.142)
[12:15:42] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[12:20:06] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[12:20:11] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[12:20:13] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Client Quit)
[12:21:12] *** Joins: shad (~shad@user/shad)
[12:22:27] *** Joins: Viewday9 (~Viewday@user/viewday)
[12:24:18] *** Joins: Bardon (~Bardon@user/Bardon)
[12:24:23] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[12:24:23] *** Viewday9 is now known as Viewday
[12:24:38] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[12:25:10] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:26:03] *** Joins: mei3 (~mei@user/mei)
[12:26:53] *** Joins: parv (~quass@user/parv)
[12:30:09] *** Quits: mcpac82 (~textual@212.25.0.228) (Quit: mcpac82)
[12:31:08] *** Joins: mcpac82 (~textual@212.25.0.228)
[12:31:22] *** Joins: legola (~legola@46.235.101.181)
[12:32:48] <raek> this is that linker option, by the way: https://docs.microsoft.com/en-us/cpp/build/reference/subsystem-specify-subsystem?view=msvc-170
[12:33:00] *** Joins: redgloboli (~redglobol@user/redgloboli)
[12:33:29] *** Joins: guenhael (~Thunderbi@2a01:e0a:163:7060:31c8:69f3:e5e4:73ba)
[12:33:43] *** Quits: sharperguy (~sharpergu@fnord.cryptophone.de) (Ping timeout: 250 seconds)
[12:34:53] *** Quits: gregoryloscombe (~gregorylo@213.86.15.34) (Ping timeout: 264 seconds)
[12:35:17] *** Joins: gregoryloscombe (~gregorylo@ec2-176-34-75-169.eu-west-1.compute.amazonaws.com)
[12:35:22] <raek> hmm. AllocConsole(). I should memorize that
[12:35:49] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[12:35:57] *** dcaro_away is now known as dcaro
[12:36:01] <elissparke> raek: oh yeah I see right it just changes whether it's a GUI or console app
[12:37:23] *** Quits: tobybl (~tobybl@213.31.135.91) (Quit: Leaving...)
[12:37:34] <raek> I suspect the /SUBSYSTEM flag is why there are separate console_scripts and gui_scripts entry points in python packages
[12:38:00] *** Joins: dcode200 (~dcode200@87-63-32-71-dynamic.dk.customer.tdc.net)
[12:38:08] *** Joins: arinov (~arinov@213.194.126.155)
[12:38:08] *** Joins: iflema (~ian@user/iflema)
[12:38:18] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[12:39:10] *** Joins: tobybl (~tobybl@213.31.135.91)
[12:41:23] *** Quits: tscopp (~tms@c-76-115-26-235.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[12:41:25] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[12:41:44] *** Quits: swensson (~swensson@213.88.131.10) (Quit: Client closed)
[12:42:35] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Remote host closed the connection)
[12:42:49] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 250 seconds)
[12:42:53] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[12:43:07] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[12:46:54] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[12:47:32] *** Joins: Viewday7 (~Viewday@user/viewday)
[12:49:19] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[12:49:19] *** Viewday7 is now known as Viewday
[12:49:53] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[12:54:32] *** Quits: guenhael (~Thunderbi@2a01:e0a:163:7060:31c8:69f3:e5e4:73ba) (Ping timeout: 240 seconds)
[12:58:19] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[13:00:03] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:01:42] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[13:02:26] *** Quits: dlam (~dlam@dlam.me) (Ping timeout: 260 seconds)
[13:04:17] *** Quits: vimal (~vimal@2a02:a210:9600:1600:3271:adb4:e3fb:289a) (Ping timeout: 264 seconds)
[13:05:01] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[13:05:11] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[13:05:38] *** Joins: paul424 (~tom@ip-31-0-126-115.multi.internet.cyfrowypolsat.pl)
[13:05:46] <paul424> string or str / integer or int ?
[13:05:51] *** Quits: Nact (~l@2a02:2788:11c4:6e6:a22b:167a:b4a4:994c) (Read error: Connection reset by peer)
[13:05:53] <paul424> what is a valid name in python ?
[13:06:02] *** Quits: nicode (~nic@2607:f2c0:9580:700:eed9:f4c8:5f08:d5b6) (Ping timeout: 240 seconds)
[13:07:34] *** Joins: Viewday3 (~Viewday@user/viewday)
[13:09:09] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[13:09:09] *** Viewday3 is now known as Viewday
[13:09:13] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:09:30] *** Joins: xsx (~x@140.red-88-20-100.staticip.rima-tde.net)
[13:11:20] <rindolf> paul424: the functions are https://docs.python.org/3/library/functions.html#built-in-funcs
[13:12:19] <w0rp> I can't wait until there's a PEP and what not in place to support generic type bounds of types.
[13:12:47] <w0rp> TypeVar('U', bound=T[V]), etc.
[13:13:12] <paul424> rindolf, I meant the types ...
[13:13:33] <rendar> what is the best way to connect 2 python programs through SSH?
[13:13:39] *** Quits: phantomcircuit (~phantomci@192.241.205.97) (Quit: ZNC - https://znc.in)
[13:14:00] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[13:14:00] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:14:01] <w0rp> In my working with typing in Python I've hit several cases where it would be really handy if you could define those more complex types.
[13:14:08] *** Quits: xsx (~x@140.red-88-20-100.staticip.rima-tde.net) (Ping timeout: 246 seconds)
[13:14:39] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:15:20] *** Joins: CoolerX (~user@user/coolerx)
[13:15:22] <CoolerX> Hi
[13:15:28] <CoolerX> I have this python2 script https://github.com/ll-todd-family/hplip/blob/master/base/models.py#L338
[13:15:38] *** Joins: vimal (~vimal@2a02:a210:9600:1600:4fb4:e20f:72bc:9bf8)
[13:15:42] <CoolerX> can you explain how it works? does it assign to self.released_dat ?
[13:16:07] <rendar> it seems its asyncssh
[13:16:35] *** Quits: TJ- (~root@about/linux/staff/tj-) (Read error: Connection reset by peer)
[13:17:21] *** Joins: TJ- (~root@about/linux/staff/tj-)
[13:18:47] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[13:18:47] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[13:18:52] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:19:22] <bookworm> CoolerX: yes
[13:19:38] <bookworm> it's a hacky way to avoid temp variables
[13:20:17] <bookworm> rather than doing the search, then assigning, they assign first and only then check if the result is valid, if so you can stop searching
[13:24:34] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[13:24:44] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[13:25:56] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 245 seconds)
[13:29:12] *** Joins: pwnd_sfw1 (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[13:29:16] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Ping timeout: 245 seconds)
[13:29:16] *** pwnd_sfw1 is now known as pwnd_sfw
[13:29:33] *** Quits: mallkrampus (~mallkramp@172.93.207.88) (Ping timeout: 256 seconds)
[13:29:40] *** Quits: extnct (~extnct@2604:180:2:a54:1::9ce7) (Remote host closed the connection)
[13:31:08] <CoolerX> bookworm: thanks
[13:31:22] *** Quits: Proxysna (~Proxysna@62.119.254.142) (Remote host closed the connection)
[13:31:56] *** Joins: xa0s (~xa0s@mab.sdf.org)
[13:32:35] *** Joins: Viewday8 (~Viewday@user/viewday)
[13:34:39] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[13:34:39] *** Viewday8 is now known as Viewday
[13:35:03] *** Joins: sharperguy (~sharpergu@dancefloor-nat.fuckup.club.berlin.ccc.de)
[13:35:32] *** Quits: Coldblackice (~c@user/coldblackice) (Ping timeout: 240 seconds)
[13:36:15] <bookworm> the fun thing is that this might not actually be faster at all, depending on how the interpreter is designed... accessing a object variable is a hashmap lookup in python iirc
[13:36:45] *** Quits: Celelibi (celelibi@user/celelibi) (Ping timeout: 268 seconds)
[13:37:06] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[13:37:15] <bookworm> whereas a proper temp variable would have just been a pointer
[13:38:19] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:38:46] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[13:39:26] *** Joins: Sario (uid356235@fosshost/cdo/Sario)
[13:39:29] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[13:39:59] *** Quits: wovixo (~wovixo@128.104.205.49) (Read error: Connection reset by peer)
[13:40:27] <parv> bookworm, Was this speed up mentioned in the commit log (which I had not read)? There was certainly no comment.
[13:41:20] <bookworm> no, but why else would they write it in such an non-idiomatic way? They avoided temp vars for some reason
[13:41:44] *** Joins: phantomcircuit (~phantomci@2604:a880:1:20::f2:c001)
[13:41:46] *** Joins: Celelibi (celelibi@user/celelibi)
[13:42:26] <parv> Like you mentioned earlier: just iterate over the list & not have to assign separately
[13:42:41] <bookworm> but why?
[13:42:46] *** Joins: mallkrampus (~mallkramp@172.93.177.92)
[13:42:56] <bookworm> you type even more text and it's harder to read
[13:43:18] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[13:43:26] *** Quits: gregoryloscombe (~gregorylo@ec2-176-34-75-169.eu-west-1.compute.amazonaws.com) (Quit: WeeChat 3.2)
[13:44:01] <parv> Typing part I agree, but not on readability.
[13:44:10] <bookworm> I personally find it strange to assign to an object only to immediately throw it away again
[13:44:17] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[13:44:25] <bookworm> for me assignment means I actually need it
[13:44:41] <bookworm> it implies that you've already found what you are looking for
[13:45:08] <jinsun> it would have been more lines with temp variable no? extra line for assignment later
[13:45:11] <w0rp> There should be a separate #python-typing channel for typing nerds like me.
[13:45:22] <w0rp> I have many thoughts on typing.
[13:45:35] <deniska> using `for` loop header to assign to a variable used beyond the loop is shenanigans
[13:45:45] <bookworm> ^
[13:45:51] <bookworm> my opinion exactly
[13:46:35] <parv> w0rp, Do you have any opinion on "runtype"?
[13:47:35] <w0rp> Interesting. I hadn't seen that.
[13:47:47] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 264 seconds)
[13:47:47] <w0rp> I actually tried to implement the same thing myself way, way back when.
[13:47:53] <w0rp> In a "toy project" kind of way.
[13:48:11] <w0rp> When annotations got added to Python 3, I implemented very rudimentary contracts via the annotations.
[13:48:41] <w0rp> Is that the library which made it so lazy evaluation of annotations can't be done yet?
[13:48:43] <parv> w0rp, My interest in it is due to multidispatching (than runtime type validation itself).
[13:49:40] <w0rp> I know there was one library that broke as a result of turning lazy evaluation of annotations on by default.
[13:49:44] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[13:50:12] <w0rp> parv: I have only just heard of this library myself.
[13:50:18] *** Quits: legola (~legola@46.235.101.181) (Remote host closed the connection)
[13:50:32] <parv> Right
[13:50:38] <w0rp> So far my interests with typing have been applying decent type checking to a Django codebase with Pyright.
[13:50:53] <w0rp> I will eventually write an article explaining how it's done. I've got the blessing of my CEO to do so, when it's good enough.
[13:51:04] <parv> Sweet
[13:51:18] *** Joins: ToAruShiroiNeko (~eva@user/toarushiroineko)
[13:51:32] <w0rp> I think the one bit of advice I can share with everyone is accepting that it won't be perfect.
[13:51:37] <w0rp> And just making it "good enough," but not perfect.
[13:51:37] <ToAruShiroiNeko> Hello, I am trying to figure out how to use my python package.
[13:52:18] <w0rp> You could get closer to perfection if Pyright had a plugin system and if you could define `U = TypeVar('U', bound=T[V])`
[13:52:24] <ToAruShiroiNeko> I set it up with a method within a certain class but when I try to access it, I get an error about how a string does not contain the method.
[13:52:26] <w0rp> And if you could create a Protocol from a concrete type.
[13:52:33] <w0rp> And maybe if you could do Intersection[T, U].
[13:52:39] *** Joins: Viewday8 (~Viewday@user/viewday)
[13:52:54] <jinsun> intersection types is an open issue
[13:52:54] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[13:52:57] <w0rp> Those are just three things I found as limitations, which are things you can do with TypeScript pretty easily.
[13:53:13] <w0rp> But then also Python does many things TS cannot, such as invariant, covariant, and contravariant types.
[13:53:19] <w0rp> And being able to type decorators now.
[13:53:20] *** Quits: Viewday (~Viewday@user/viewday) (Read error: Connection reset by peer)
[13:53:20] *** Viewday8 is now known as Viewday
[13:53:33] <jinsun> https://github.com/python/typing/issues/213
[13:53:37] <w0rp> Yeah.
[13:53:48] <ToAruShiroiNeko> my __init__.py contains all the imports
[13:53:49] <w0rp> These things will all come "some day."
[13:53:58] <w0rp> I'm just using whatever I can use right now.
[13:54:34] <w0rp> In many cases I go through a series of things that cannot be done and end up with, "Ehh, it's Any."
[13:54:36] <ToAruShiroiNeko> such as from pack.myclass import myclass which imports the class in myclass.py with the class name myclass.
[13:54:37] <w0rp> Or something like that.
[13:54:46] <ToAruShiroiNeko> Is this not how it should be done?
[13:55:06] *** Joins: Klinda (~superleag@user/klinda)
[13:55:39] <jinsun> w0rp: protocol from concrete type will be nice yes, what would `U = TypeVar('U', bound=T[V])` mean?
[13:55:54] *** Joins: drogas (~drogas@jump2.jet.uk)
[13:56:01] <w0rp> So, in many other languages, like TS, you can do `U extends T<V>`
[13:56:18] <w0rp> And then you can have, for example, `<V extends ..., U extends T<V>>`
[13:56:25] <w0rp> In the case of Django...
[13:56:46] <w0rp> `[M, QuerySet[M]]` for the `Manager` class.
[13:57:12] <w0rp> Because you can define subclasses of QuerySet that have additional methods.
[13:57:20] <jinsun> ah okay
[13:57:39] <w0rp> At the moment django-stubs has just [M] and can't give you information about the QuerySet really.
[13:57:57] <w0rp> So I ended up writing an entire replacement type as a new base Manager, restricted so you cannot use Manager.from_queryset
[13:58:01] <w0rp> Which is a good tradeoff.
[13:58:11] <w0rp> And that new class is aware of the QuerySet type.
[13:58:41] <w0rp> Downside is you need to write `ThatNewType[MyModel, QuerySet[MyModel]]` when you have a base QuerySet.
[13:58:43] *** Joins: n00b101 (uid448161@id-448161.lymington.irccloud.com)
[13:58:51] <w0rp> Which is a bit redundant, but works.
[13:59:12] <n00b101> I have a 25 lines of story displayed in a webpage. One user can select a word/number/symbol or anything in that page with their mouse select.
[13:59:12] <n00b101> can I get:
[13:59:12] <n00b101> - the word itself
[13:59:12] <n00b101> - the line number
[13:59:12] <n00b101> -index number
[13:59:12] <n00b101> To my backend flask app?
[13:59:13] *** litharge sets mode: +q $a:n00b101
[13:59:18] <w0rp> Whereas in TS you could write just `ThatNewType<MyModel>` and it would know the type of U because it's T<V>.
[13:59:45] *** litharge sets mode: -q $a:n00b101
[13:59:47] <n00b101> https://www.irccloud.com/pastebin/FJOVsHW4
[14:00:08] <w0rp> Big difference with TS though is that it's all based on structural typing instead of nomimal typing, and Python has first nominal typing but also structural typing via Protocol.
[14:00:10] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[14:00:13] <w0rp> Which is more powerful, but harder to manage.
[14:00:44] <w0rp> Which I did find kind of strange given Python's reputation as the "duck typing" language, but it kind of also makes sense.
[14:01:04] <w0rp> (Because "duck typing" and "structural typing" are basically the same thing.)
[14:02:28] *** Joins: dlam (~dlam@dlam.me)
[14:02:31] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:03:52] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[14:04:37] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:05:34] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[14:06:21] *** Quits: inomoz (~inomoz@176.59.125.26) (Quit: WeeChat 3.3)
[14:06:25] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[14:07:01] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[14:07:02] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[14:07:27] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[14:09:02] *** Joins: frost (~frost@user/frost)
[14:11:07] *** Joins: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de)
[14:11:29] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[14:12:57] *** Joins: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net)
[14:15:14] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Ping timeout: 260 seconds)
[14:15:47] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:16:01] *** Quits: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[14:16:02] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[14:16:07] *** Quits: whatif (~user@114.250.136.140) (Quit: ERC (IRC client for Emacs 26.3))
[14:16:24] *** Quits: dba (uid502594@id-502594.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:17:15] *** dcaro is now known as dcaro_lunch
[14:17:29] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[14:17:32] *** Quits: alexyov (~alexyov@79.124.0.2) (Quit: alexyov)
[14:18:05] *** Joins: Viewday6 (~Viewday@user/viewday)
[14:18:07] *** Joins: alexyov (~alexyov@79.124.0.2)
[14:19:00] *** Quits: alexyov (~alexyov@79.124.0.2) (Client Quit)
[14:19:46] *** Joins: alexyov (~alexyov@79.124.0.2)
[14:19:59] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[14:19:59] *** Viewday6 is now known as Viewday
[14:20:17] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[14:20:27] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[14:20:40] <rindolf> n00b101: hi
[14:21:04] <n00b101> Hi
[14:21:12] <rindolf> n00b101: you can use the <a> tag:
[14:21:18] <n00b101> Can you see my message?
[14:21:41] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[14:22:48] <n00b101> rindolf: I don't understand the point
[14:23:08] <rindolf> n00b101: part of it
[14:23:25] <rindolf> n00b101: you can use the <a> tag to handle clicks
[14:23:28] *** Joins: fikran (~fikran@user/fikran)
[14:23:33] *** Joins: jonaskabrink_ (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de)
[14:23:49] <n00b101> <a> is for hyperlinks?
[14:23:57] *** Quits: odix (~ok@65.141.163.206) (Ping timeout: 256 seconds)
[14:23:59] <rindolf> n00b101: yes
[14:24:27] <n00b101> But.. is a long line.
[14:24:31] <rindolf> n00b101: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a
[14:25:10] <rindolf> n00b101: then break it into pieces server-side
[14:25:14] <ede> rindolf: because of 'id'?
[14:25:24] *** Quits: tobybl (~tobybl@213.31.135.91) (Quit: Leaving...)
[14:25:33] <n00b101> How then the index number, line number works?
[14:25:51] <rindolf> n00b101: you can also use clientside js
[14:26:10] <rindolf> ede: what?
[14:26:22] <ede> rindolf: why <a> specifically?
[14:26:37] <n00b101> rindolf: I don't understand the answer tbh
[14:27:03] *** Joins: Tas-sos (~Tas-sos@46-174-70.adsl.cyta.gr)
[14:27:05] *** Joins: AnonV (~AnonV@user/anonv)
[14:27:15] *** Quits: AlanMD (~AlanMD@86.121.179.183) (Remote host closed the connection)
[14:27:17] *** Quits: jonaskabrink_ (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de) (Client Quit)
[14:27:22] *** Joins: tobybl (~tobybl@213.31.135.91)
[14:27:37] <ede> n00b101: your definition of 'line'? source lines aren't necessarily lines displayed in the browser. unless you use <pre>
[14:27:59] <rindolf> n00b101: wrap every word in an <a href="...">myword</a> element
[14:28:02] *** Joins: AlanMD (~AlanMD@86.121.179.183)
[14:29:05] <ede> that's. hm. maybe JS taking care of click/mark events would be it. just like lyrics and bible sites like to do it.
[14:29:09] *** Joins: nyah (~nyah@94.6.71.219)
[14:29:24] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[14:29:26] *** Quits: mei3 (~mei@user/mei) (Read error: Connection reset by peer)
[14:29:37] *** erry_ is now known as erry
[14:29:50] *** Joins: frost (~frost@user/frost)
[14:29:51] <ede> <p onclick="..:"> and i guess there should be something similar for marking text
[14:30:26] *** Joins: jonaskabrink_ (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de)
[14:30:51] *** Joins: xsx (~x@140.red-88-20-100.staticip.rima-tde.net)
[14:31:02] <ede> n00b101: jQuery could have what you're looking for, maybe some of the other frameworks, not sure how modular they are. and then use AJAX to send it to the server and have a python script handle it.
[14:31:06] <ede> something like this maybe
[14:31:41] <n00b101> What exactly in jQuery?
[14:32:09] <ede> i'd ask folks in #jquery
[14:32:24] <bookworm> jquery is pretty much obsolete now that the things are directly in the js spec
[14:32:36] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Client Quit)
[14:33:00] <n00b101> Obsolete?
[14:33:06] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[14:33:09] <ede> sounds like how an instant translator would work, mark a word, select 'translate' from the context menu, get a popup with a translation even taking into account the context.
[14:33:13] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[14:33:20] *** Joins: spithash (~spithash@user/spithash)
[14:33:33] *** Joins: mike18_ (~geri@217-149-160-150.nat.highway.telekom.at)
[14:33:35] <mike18_> hi
[14:33:36] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[14:33:43] <n00b101> That's right. But I also need index number and line number
[14:33:44] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[14:33:45] <mike18_> are enums in python widly used?
[14:33:54] <mike18_> class Foo(Enum): ...
[14:34:04] <rindolf> bookworm: https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f ;)
[14:34:06] <vdamewood> define widely.
[14:35:20] <rindolf> n00b101: "lines" in html are unreliable
[14:35:49] <mike18_> something which should be used to diff between 2 different types for a manual_run to recreate a dataset
[14:36:11] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[14:36:15] <n00b101> rindolf: what do you suggest
[14:36:19] <w0rp> I sometimes wonder if it's not a terrible idea to suggest that the builtin `any` function could be used as a special case replacement for `Any`.
[14:36:24] <w0rp> It would be kind of weird, but also kind of make sense.
[14:36:55] <w0rp> Typing is already kind of a syntax hack as it is.
[14:37:33] *** Joins: darksun (~darksun@user/darksun)
[14:37:49] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[14:38:12] <w0rp> With Go adding an `any` keyword recently as a breaking change and making it so `any` is the same as `interface{}`, I'd say it's not unusual to add special cases to make things a little easier to write.
[14:38:25] *** Joins: legola (~legola@46.235.101.181)
[14:38:30] *** Joins: Viewday4 (~Viewday@user/viewday)
[14:39:10] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Quit: WeeChat 3.2.1)
[14:39:19] <rindolf> n00b101: do you want lines of text as the browser displays them? or those delimited by <br>?
[14:40:23] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[14:40:23] *** Viewday4 is now known as Viewday
[14:40:44] <n00b101> rindolf: I upload a file with story. Yes , the line, and everything should be displayed same as in the file
[14:41:18] <rindolf> n00b101: it won't always
[14:41:58] <parv> Is there a backport of some sort of newer syntax of Union as A | B for 3.6?
[14:42:20] *** Joins: Jonopoly (~Jonopoly@user/jonopoly)
[14:42:28] <rindolf> n00b101: which format is the file?
[14:42:51] <n00b101> rindolf: txt
[14:43:13] <rindolf> n00b101: ah
[14:43:42] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[14:44:49] <parv> .oO( I can see it -- Load the file in a frame; track cursor via #javascript for which there ought to be something already ... )
[14:44:59] *** Joins: analoq (~yashi@user/dies)
[14:45:18] <rindolf> n00b101: well, see https://github.com/shlomif/Freenode-programming-channel-FAQ/blob/master/FAQ_with_ToC__generated.md#how-can-i-learn-web-development-htmletc - you're lacking understanding
[14:45:40] *** Joins: upsala (~zcb@185.213.155.252)
[14:46:33] <analoq> to make sure my program runs on any windows machine i can simply bundle my program with the embedded python package. What i havent figured out is how do i bundle optional packages that i would normally install via pip?
[14:46:44] *** Parts: SlaveGeek334269 (~SlaveGeek@gateway/vpn/pia/slavegeek334269) ()
[14:47:13] *** Joins: bbcseven (~orangeext@user/orangeextract)
[14:47:25] <n00b101> rindolf: you didn't say what's the problem and why did you say that
[14:47:25] <rindolf> analoq: which installer are you using?
[14:47:50] *** Quits: ckdCreations (~ckdCreati@147.55.130.37) (Read error: Connection reset by peer)
[14:48:03] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[14:48:09] <analoq> rindolf: non it's just an archive
[14:48:11] <Repiphany> analoq: Look at something like pyinstaller
[14:48:23] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:48:23] *** Quits: sharperguy (~sharpergu@dancefloor-nat.fuckup.club.berlin.ccc.de) (Ping timeout: 264 seconds)
[14:49:03] <rindolf> n00b101: i give up: https://www.youtube.com/watch?v=_FCld2UJMRg # walking away. good luck!
[14:49:44] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[14:49:50] <jinsun> parv: the future import to get 3.10 syntax works only for 3.7+ unfortunately, luckily 3.6 is going to be EOL in a month
[14:49:51] *** Joins: AnonV_ (~AnonV@user/anonv)
[14:49:59] *** Joins: sharperguy (~sharpergu@fnord.cryptophone.de)
[14:50:00] *** Joins: rossw (~rossw@cpc158585-brad24-2-0-cust291.17-1.cable.virginm.net)
[14:50:05] *** Quits: AnonV (~AnonV@user/anonv) (Quit: Leaving)
[14:50:05] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[14:50:09] *** Quits: AnonV_ (~AnonV@user/anonv) (Client Quit)
[14:50:27] *** Joins: AnonV (~AnonV@user/anonv)
[14:50:32] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 240 seconds)
[14:50:35] <rindolf> analoq: then add a relative path to the modules' paths?
[14:50:38] <parv> jinsun, Thanks. EOL matters only if Rocky Linux would update it
[14:51:29] <jinsun> ah if you are stuck with distro python then too bad
[14:51:39] <parv> Yeah ... work ...
[14:51:58] <rendar> anyone had experiences with hdf5 or parquet? which is one is better?
[14:52:17] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[14:52:30] <jinsun> parv: well you just lose some nice syntax, the ugly Union works and does the same thing
[14:52:32] <parv> I would happily build & install 3.10 only if work would let me
[14:52:38] *** Quits: paul424 (~tom@ip-31-0-126-115.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[14:52:50] <analoq> rindolf: ah and then simply adjust the "import ...."?
[14:52:56] *** Joins: ckdCreations (~ckdCreati@147.55.133.130)
[14:53:17] <ede> rindolf: great reading. os is it WebAssembly or PyJS in 2021?
[14:53:24] <parv> jinsun, Right. I have just started on adding types, so ...
[14:53:28] <rindolf> analoq: no
[14:53:35] <bookworm> rindolf: XD that article is awesome, if a little too close at the truth
[14:54:01] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[14:54:20] *** Joins: nomic (~nomic@185.192.69.7)
[14:54:31] <analoq> you mean the PATH path? or w/e the python equivalent is called?
[14:54:47] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:55:14] <parv> analoq, Python library|module|package path.
[14:55:19] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:55:25] <rindolf> analoq: https://realpython.com/lessons/module-search-path/
[14:55:32] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:55:44] <analoq> i see
[14:55:47] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[14:55:55] *** Quits: ras_manny64 (~ras_manny@196.24.166.120) (Quit: Client closed)
[14:56:10] <ede> n00b101: if you think of a specific result in a webbrowser, get away from the python part and look what you can do about that one. there are #html and #css
[14:56:11] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[14:56:32] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:56:43] <analoq> that looks promising
[14:56:46] <rindolf> analoq: the subsequent, runtime, import statements should remain the same
[14:57:16] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[14:58:14] <rindolf> ede: knock yourself out: https://github.com/jashkenas/coffeescript/wiki/List-of-languages-that-compile-to-JS
[14:59:06] *** Joins: Viewday8 (~Viewday@user/viewday)
[14:59:08] <analoq> rindolf: yeah makes sense otherwise i would need to potentially touch every module
[14:59:09] <ede> rindolf: wow. i was thinking a few times already about what could be used in theory.
[14:59:43] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[15:00:13] *** Quits: mallkrampus (~mallkramp@172.93.177.92) (Ping timeout: 256 seconds)
[15:00:22] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Client Quit)
[15:00:47] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[15:00:47] *** Viewday8 is now known as Viewday
[15:01:17] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 264 seconds)
[15:01:57] *** Quits: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se) (Remote host closed the connection)
[15:03:37] *** Joins: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se)
[15:03:51] *** Joins: fdan (~fdan@192.146.154.3)
[15:04:23] *** Joins: guenhael (~Thunderbi@2a01:e0a:163:7060:3d5b:7aad:2dd4:6ffc)
[15:06:05] *** Quits: alkino (~quassel@user/alkino) (Ping timeout: 264 seconds)
[15:06:05] *** Joins: alkino_ (~quassel@user/alkino)
[15:06:37] *** Joins: gitly (~gitly@85.255.233.182)
[15:07:25] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 268 seconds)
[15:07:34] *** Joins: Viewday6 (~Viewday@user/viewday)
[15:07:39] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[15:08:22] *** Quits: AnonV (~AnonV@user/anonv) (Quit: Leaving)
[15:09:06] *** Joins: millido (~millido@84.210.150.128)
[15:09:17] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[15:09:17] *** Viewday6 is now known as Viewday
[15:09:51] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[15:10:18] *** Quits: rMdes (~rmdes@my.armada.digital) (Quit: The Lounge - https://thelounge.github.io)
[15:10:50] *** Quits: parv (~quass@user/parv) (Quit: parv)
[15:11:49] *** Joins: fikran (~fikran@user/fikran)
[15:12:32] *** Joins: doko (~doko@2a02:8106:1a:7600:b0f9:a0a0:d4d2:7287)
[15:12:35] *** Joins: fdan87 (~fdan@103.215.168.1)
[15:13:07] *** Joins: mallkrampus (~mallkramp@172.93.207.90)
[15:13:08] *** Joins: Atque (~Atque@user/atque)
[15:14:02] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 260 seconds)
[15:14:27] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[15:15:33] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:16:08] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 256 seconds)
[15:16:28] *** Quits: mallkrampus (~mallkramp@172.93.207.90) (Read error: Connection reset by peer)
[15:17:05] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[15:17:38] <n00b101> ede: idk js. I there any way to do this inside python/flask? I mean get the index number and line number of selected word/letter
[15:17:46] *** Quits: soman (~soman@83.139.147.234) (Quit: Client closed)
[15:18:28] *** Joins: mage (~julien@orval.bbpf.belspo.be)
[15:18:37] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[15:18:46] <ede> n00b101: so the user marks a word in the browser. how would you handle this in the browser in the first place?
[15:18:55] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 256 seconds)
[15:20:06] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[15:20:16] <n00b101> That's my question. A guy said this "create an endpoint that gets requested each time the thing is selected"
[15:20:48] <n00b101> "pass the index number and line number as parameters to the request to the endpoint"
[15:21:05] <n00b101> Idk what he meant but left me confused
[15:21:20] <ede> heh just like the one from that story :)
[15:21:44] <n00b101> What?
[15:21:45] *** Quits: jonaskabrink_ (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[15:21:51] <ede> if you do things in the browser be prepared to use JS
[15:22:00] <ede> that one https://hackernoon.com/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f
[15:22:18] <n00b101> Okay. So I gotta learn JS?😒
[15:22:31] <n00b101> jQuery may be?
[15:22:51] <ede> or at least how to include something that would do the job, you don't have to become a master of all classes.
[15:22:55] *** Joins: timkofu (~timkofu@user/timkofu)
[15:23:10] *** Quits: timkofu (~timkofu@user/timkofu) (Quit: 1)
[15:23:36] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[15:23:43] <ede> maybe you can do it with python and compile it into JS (that's the other link) but you still have to understand what happenes in the browser
[15:24:01] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[15:24:07] *** Joins: Viewday8 (~Viewday@user/viewday)
[15:24:30] <ede> you could send all your text as a JSON object, but the user still uses the mouse to interact with the GUI
[15:25:35] <ede> n00b101: look for bibleserver.com or what it was, iirc it opens a small popup when you select text. may be the approach you're thinking of.
[15:25:43] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[15:25:44] *** Viewday8 is now known as Viewday
[15:26:16] <n00b101> Again, should I learn Js of jQuery?
[15:26:21] <n00b101> Or*
[15:27:52] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: bbl testing sway and wayland.)
[15:27:57] *** Joins: timkofu (~timkofu@user/timkofu)
[15:28:02] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 240 seconds)
[15:28:20] *** Joins: Viewday1 (~Viewday@user/viewday)
[15:29:04] <ede> the foundation would be JS or Actionsript or ECMA or w/e it's called in 2021
[15:29:41] <ede> not sure if you should, i just don't see an alternative how you could handle the situation with your text.
[15:30:11] *** Joins: mallkrampus (~mallkramp@172.93.207.85)
[15:30:15] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[15:30:34] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[15:30:43] <ede> you could /join #javascript, describe what you want to do and see if it's just as easy as including a simple .js
[15:30:53] *** Joins: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de)
[15:31:14] <ede> did this years ago with timeline.js already with next to no clue on js
[15:31:46] <ede> (it's just because of the daily abuse of JS by people who don't think about a real solution)
[15:32:13] *** Joins: jonaskabrink_ (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de)
[15:32:30] *** Joins: ras_manny (~ras_manny@196.24.166.120)
[15:33:47] *** Quits: guenhael (~Thunderbi@2a01:e0a:163:7060:3d5b:7aad:2dd4:6ffc) (Ping timeout: 246 seconds)
[15:33:56] <ras_manny> I am trying to mock patch a test in an app using pytest. I can see that, the specific function is being detected but it doesn't return the expected output https://gist.github.com/theSekyi/4fac1ef38c9cc3183186fa96a70378ee
[15:34:34] *** Quits: xsx (~x@140.red-88-20-100.staticip.rima-tde.net) (Ping timeout: 260 seconds)
[15:34:44] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[15:35:05] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[15:35:24] *** Quits: fdan87 (~fdan@103.215.168.1) (Ping timeout: 256 seconds)
[15:35:32] *** Quits: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de) (Ping timeout: 246 seconds)
[15:35:32] *** jonaskabrink_ is now known as jonaskabrink
[15:35:49] <rindolf> ras_manny: ah
[15:35:53] *** Quits: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de) (Client Quit)
[15:35:55] *** Quits: shad (~shad@user/shad) (Ping timeout: 256 seconds)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:09] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[15:36:28] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:43] <nedbat> ras_manny: your default value is computed once when the module is imported, before the patch has happened
[15:36:51] <ras_manny> rindolf: I want the endpoint to constantly return the value of `item_1`
[15:37:11] *** Joins: jonthesnow (~xizhendu@240e:305:7380:4300:22a3:ecb5:b567:7739)
[15:37:29] *** Joins: jonaskabrink (~jonaskabr@ip1f12b838.dynamic.kabel-deutschland.de)
[15:37:33] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Remote host closed the connection)
[15:37:52] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[15:39:11] <ras_manny> nedbat: you mean the value of `item_1` is computed once the module is imported? or are you referring to `main.get_item_service`?
[15:39:25] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[15:39:42] *** Quits: frost (~frost@user/frost) (Ping timeout: 260 seconds)
[15:39:42] <nedbat> ras_manny: https://gist.github.com/theSekyi/4fac1ef38c9cc3183186fa96a70378ee#file-main-py-L12 the value of item_service
[15:42:34] <ras_manny> yes, I understand that. Since `item_service` is returned from `get_item_service()`, shouldn't patching `get_item_service()` consistently return the same value of  `item_service`?
[15:42:56] *** Parts: bbcseven (~orangeext@user/orangeextract) (Leaving)
[15:43:02] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[15:43:04] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[15:43:09] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[15:43:16] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:43:18] <nedbat> ras_manny: what does Depends do on line 12?
[15:43:24] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[15:44:24] <ras_manny> it is a construct from FastAPI for dependency injection(https://fastapi.tiangolo.com/tutorial/dependencies/)
[15:44:46] <mike18_> hi i have a utc hour and want to generate the timezone name in python using pendulum - how to do that?
[15:44:53] <bjs> ras_manny: but you already passed the old get_item_service before you patched it
[15:45:22] *** Joins: Viewday19 (~Viewday@user/viewday)
[15:46:39] <ras_manny> bjs: I must be missing something or my understanding of patching is lacking.....can you please explain a bit further?
[15:46:59] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 250 seconds)
[15:47:07] <mike18_> the timezone which local time is 2am and matches that given utc hour
[15:47:08] <bjs> ras_manny: patching is basically just like assigning a new value. If I went `d = Depends(get_item_value); get_item_value = new_thing; ...` the Depends() object isn't affected
[15:47:15] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[15:47:15] *** Viewday19 is now known as Viewday1
[15:48:33] <bjs> because it has already been created and has the "old" get_item_value and the assignment doesn't change that.  The first assignment is like the default in your `def` and the second is like the patch() call.
[15:49:10] *** Quits: Sazpaimon (~wat@pool-71-175-29-161.phlapa.fios.verizon.net) (Read error: Connection reset by peer)
[15:49:39] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[15:49:42] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Client Quit)
[15:50:10] <ras_manny> I thought patching the function `get_item_value` will automatically reflect in what `Depends(get_item_value)` returns
[15:52:40] <ras_manny> I guess I thought `Depends` takes the function passed to it and returns the value of that function. If that is the case, why won't it return values of the patch applied to the function passed to `Depends`. Sorry for the questions which might be completely naive
[15:54:22] *** Quits: elissparke (~elisspark@pool-96-238-11-235.prvdri.fios.verizon.net) (Quit: Client closed)
[15:54:36] <bjs> ras_manny: well, I don't know what `Depends` is or what it does
[15:54:48] <bjs> but I can see that you call it *before* you patch get_item_value
[15:55:15] <rendar> anyone had experiences with hdf5 or parquet? which is one is better?
[15:55:52] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1)
[15:56:20] <ras_manny> bjs: How do I patch before calling depends?
[15:56:24] <bjs> ras_manny: have you tried moving that into the function?  saying `def read_item(..., item_service=None)` then in the function `if item_service is None: item_service = Depends(get_item_service)`
[15:56:38] <bjs> (I'm not sure why it had to be a default argument?)
[15:58:00] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Remote host closed the connection)
[15:58:31] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[15:59:20] *** Quits: timkofu (~timkofu@user/timkofu) (Ping timeout: 246 seconds)
[16:01:03] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[16:05:48] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[16:05:55] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[16:06:00] *** Joins: Viewday13 (~Viewday@user/viewday)
[16:06:10] *** Joins: sreve (~quassel@p4ff44d0e.dip0.t-ipconnect.de)
[16:06:18] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[16:06:20] <ras_manny> I think it can only be passed as a default argument(https://fastapi.tiangolo.com/tutorial/dependencies/)
[16:06:47] <mike18_> hi can i do that in python pandas? enablement["local_time"] = enablement["zone_name"].apply(self.local_time_hour(self.now)) ?
[16:07:55] <ras_manny> mike18_ what are you trying to do?
[16:07:57] *** Joins: han-solo (~hanish@user/han-solo)
[16:08:13] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[16:08:13] *** Viewday13 is now known as Viewday1
[16:08:31] <sreve> I have code that works with an dict read by an yaml file (yaml.safe_load(...)) but now I have also some json files with the same structure. But the keys/strings are quoted after json.load(...). How can I easy convert the dict and remove the quotes?
[16:08:32] *** Quits: lastshell (~lastshell@user/lastshell) (Ping timeout: 240 seconds)
[16:08:58] <mike18_> ras_manny: take the current time: do: self.now.in_timezone(tz_str).hour and apply to local_time
[16:09:08] <mike18_> the tz_str is in pandas df
[16:09:12] <grawity> hmm, "quoted"?
[16:09:27] <mike18_> ras_manny: but in that case i want to provide the self.now from outside
[16:09:31] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[16:09:43] <grawity> sreve: gonna need an example of your inputs and outputs
[16:10:02] <sreve> grawity: yes quoted with " .... I think of removing all " in the file.
[16:10:20] *** Quits: thisdude (~thisdude@pool-72-65-50-80.bflony.fios.verizon.net) (Quit: Client closed)
[16:10:26] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[16:10:34] *** Joins: lastshell (~lastshell@user/lastshell)
[16:10:46] <grawity> do you mean as part of the *value*?
[16:11:12] <mike18_> ras_manny: here: https://ideone.com/W7W34q
[16:11:19] <mike18_> do you follow? :)
[16:12:12] <sreve> grawity: json and yaml are very similar. In json you must quote the strings. In yaml it is optional.
[16:12:26] <sveinse> Is the package multi-await the way to go if I need to await on two different tasks and want to return when the first returns?
[16:12:29] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:12:36] *** Joins: Elodin (~weechat@user/elodin)
[16:12:37] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Read error: Connection reset by peer)
[16:12:46] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[16:13:11] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:13:13] <Yhg1s> sveinse: why not asyncio.wait()?
[16:13:48] <grawity> sreve: okay, but how does that relate to your specific situation? can you show an actual example of what input you're loading and what result you're getting with the unnecessary quotes in it?
[16:14:20] <ras_manny> mike18_: Yes but I think you should give a sample dataframe as part of the question and add your expected output
[16:16:36] *** Joins: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net)
[16:16:41] *** Joins: pycurious (~Adium@user/pycurious)
[16:16:55] <sveinse> Yhg1s: http://www.hydrogen18.com/blog/python-await-multiple.html
[16:19:26] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[16:20:02] <Yhg1s> sveinse: I'm not sure why you share that link.
[16:20:09] *** Joins: Atque (~Atque@user/atque)
[16:20:20] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:357d:3a4b:f5d4:bb2e) (Quit: Textual IRC Client: www.textualapp.com)
[16:20:50] <sreve> grawity: When I read in a yaml as dict, than it conatins {"key1": "str1", "key2": "str2", ...} but when I read in the json the dict contains {"'key1'": "'str1'", "'key2'": "'str2'", ... }
[16:21:47] <mike18_> ras_manny: do you know what i try to do?
[16:21:59] <mike18_> im not sure if i can pass a parameter into that function
[16:22:04] <mike18_> with dataframe.apply
[16:22:37] *** Joins: tracey (~trace@dynamic-002-247-251-105.2.247.pool.telefonica.de)
[16:22:38] <deniska> sreve: how does the json file look?
[16:22:59] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[16:23:03] <deniska> sreve: and how are you loading it
[16:23:44] <grawity> sreve: ok, I see – what's the raw JSON like, then?
[16:24:07] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[16:24:16] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[16:24:25] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[16:25:16] *** Quits: han-solo (~hanish@user/han-solo) (Read error: Connection reset by peer)
[16:25:53] *** Quits: dcode200 (~dcode200@87-63-32-71-dynamic.dk.customer.tdc.net) (Quit: Leaving)
[16:26:04] <sreve> grawity: { \nl "openapi": "3.0.1", \nl .... } and the yaml is: openapi: "3.0.1" \nl ...
[16:27:10] *** Joins: Viewday10 (~Viewday@user/viewday)
[16:27:19] <sveinse> Yhg1s: Never mind. The point were that asyncio.wait() have some limitations, but I see now in the docs that in recent py that using a coro directly is deprecated, which were exactly to my point. It just needs a bit boiler code around it.
[16:27:29] *** Quits: tracey (~trace@dynamic-002-247-251-105.2.247.pool.telefonica.de) (Ping timeout: 256 seconds)
[16:27:33] <mike18_> ras_manny: link: create_dataframe
[16:27:48] <mike18_> ras_manny: https://replit.com/join/epbnbsnkar-surfman19
[16:28:01] *** Joins: han-solo (~hanish@user/han-solo)
[16:28:37] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[16:28:37] *** Viewday10 is now known as Viewday1
[16:29:08] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Remote host closed the connection)
[16:31:34] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[16:31:40] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi)
[16:32:34] *** Joins: ubert1 (~Thunderbi@2a02:8109:9880:303c:ca5b:76ff:fe29:f233)
[16:33:03] *** Joins: y2o (~y2o@nat-wifivisitas-1x.campus.utfsm.cl)
[16:35:29] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 264 seconds)
[16:36:07] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[16:36:15] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[16:38:02] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[16:38:25] *** Joins: shad (~shad@user/shad)
[16:39:02] *** Joins: extnct (~extnct@2604:180:2:a54:1::9ce7)
[16:41:58] *** Joins: pro (~pro@user/pro)
[16:42:57] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[16:43:01] *** Quits: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Read error: Connection reset by peer)
[16:43:01] *** Quits: jonthesnow (~xizhendu@240e:305:7380:4300:22a3:ecb5:b567:7739) (Ping timeout: 245 seconds)
[16:45:53] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[16:46:06] *** Joins: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[16:46:57] *** Quits: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Read error: Connection reset by peer)
[16:47:45] *** Joins: Viewday14 (~Viewday@user/viewday)
[16:48:12] *** Joins: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[16:48:22] *** Joins: rickybob (rickybob@gateway/vpn/protonvpn/rickybob)
[16:48:33] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:50:09] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[16:52:03] *** Joins: Viewday1 (~Viewday@user/viewday)
[16:52:20] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Remote host closed the connection)
[16:52:21] *** Joins: Macuser (~Macuser@216.30.159.201)
[16:52:50] *** Quits: Macuser (~Macuser@216.30.159.201) (Client Quit)
[16:54:07] *** Quits: Viewday14 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[16:56:03] *** Quits: jim (~jim@about/linux/staff/jim) (Quit: Leaving)
[16:56:38] *** morrigan_ is now known as morrigan
[16:56:47] *** Joins: jim (~jim@about/linux/staff/jim)
[16:58:44] *** Joins: pycurious (~Adium@user/pycurious)
[16:59:07] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[17:01:52] *** Joins: chele_ (~chele@user/chele)
[17:02:35] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[17:03:05] *** Quits: gggp (~gggp@111-251-148-239.dynamic-ip.hinet.net) (Ping timeout: 264 seconds)
[17:03:26] *** Joins: Ninpo (~Ninpo@user/ninpo)
[17:03:45] *** Quits: chele (~chele@user/chele) (Ping timeout: 256 seconds)
[17:03:53] *** Quits: y2o (~y2o@nat-wifivisitas-1x.campus.utfsm.cl) (Quit: Leaving)
[17:04:44] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:06:36] *** Joins: gggp (~gggp@220-136-153-49.dynamic-ip.hinet.net)
[17:06:53] *** Joins: teut (~teut@223.182.71.245)
[17:07:21] *** Joins: xardas (~xardas@149.233.51.127)
[17:07:32] <xardas> What's the best way to install Tensorflow2 on mac os ? with pip right ?
[17:07:32] *** Joins: pro_z (~pro_z@37.214.56.218)
[17:07:47] <xardas> What about brew ?
[17:07:56] *** Joins: Viewday13 (~Viewday@user/viewday)
[17:08:29] <grym> i don't recommend mixing and matching system package managers and pip
[17:09:06] <lericson> xardas: install tf2 into a virtualenv
[17:09:06] * Lando-SpacePimp sips.
[17:09:56] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:09:59] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[17:09:59] *** Viewday13 is now known as Viewday1
[17:10:09] <grym> xardas: what kind of a mac?
[17:10:35] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[17:10:39] *** Joins: y2o (~y2o@nat-wifivisitas-1x.campus.utfsm.cl)
[17:11:06] <xardas> Macbook air M1
[17:11:28] <xardas> macOs Big Sur v11.6
[17:11:34] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:11:39] <grym> xardas: looks like you want some special handling, then https://developer.apple.com/metal/tensorflow-plugin/
[17:11:43] <grym> assuming TF2
[17:11:55] <xardas> lericson so maybe I should use a vpn ?
[17:11:57] <grym> if you need TF1 i think you're out of luck, you'll be stuck on CPU only
[17:12:14] <grym> xardas: vpn and venv have nothing to do with each other
[17:12:42] *** Quits: coc0nut (~coc0nut@user/coc0nut) (Quit: ZNC 1.8.2 - https://znc.in)
[17:12:50] <xardas> ah ok
[17:12:57] <xardas> thanks for the link let me check it
[17:13:15] <grym> (i've never done any of this myself; i run all my ML stuff on linux, it's easier)
[17:13:48] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[17:14:52] <xardas> I'm still new to all of this .
[17:14:59] <xardas> Trying my best
[17:15:50] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[17:16:10] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:16:11] <mike18_> hi how can i make that work in python? https://replit.com/join/epbnbsnkar-surfman19
[17:16:41] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 250 seconds)
[17:17:03] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[17:17:10] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:17:12] *** Joins: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com)
[17:17:51] <bjs> mike18_: what is that?  is that the link you meant to give?
[17:17:59] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[17:18:07] <mike18_> let me share code somewhere else
[17:18:23] <bjs> mike18_: https://bpa.st/+python works well usuallyhttps://bpa.st/+python
[17:18:24] <mike18_> https://ideone.com/NUmT0y
[17:18:44] <mike18_> https://bpa.st/YEQQ
[17:19:06] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[17:19:07] <mike18_> i want to pass the local_time_hour func which i pass apply the parameter self.now
[17:19:43] <mike18_> apply takes a function
[17:19:44] <bjs> mike18_: you mean you want to overwrite self.now ?
[17:19:52] <mike18_> no
[17:20:12] <mike18_> i want to pass local_time_hour the parameter self.now
[17:20:19] <bjs> mike18_: oh, maybe you just want a lambda?
[17:20:21] <mike18_> which gets used in dataframa apply
[17:20:23] <bjs> (or functools.partial)
[17:20:25] <mike18_> i think so
[17:20:38] *** Joins: superboot (~agentgasm@user/superboot)
[17:20:43] <bjs> mike18_: .apply(lambda v: self.local_time_hour(v, self.now))   like that maybe?
[17:20:48] <mike18_> oh
[17:21:04] <bjs> oh?
[17:21:10] *** Joins: fikran (~fikran@user/fikran)
[17:21:21] <mike18_> bjs: perfect. how does it work internally?
[17:21:22] *** Quits: ras_manny (~ras_manny@196.24.166.120) (Ping timeout: 256 seconds)
[17:21:43] <bjs> mike18_: lambda is just another way to write `def`
[17:22:07] <bjs> it makes a new function
[17:22:10] <mike18_> to change the signature?
[17:22:29] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[17:22:32] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[17:22:41] <bjs> mike18_: signature?
[17:22:55] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[17:23:14] <mike18_> to get it to use a different function
[17:23:23] <bjs> mike18_: I mean, I made a function which calls another function
[17:23:32] <mike18_> ok
[17:23:42] <bjs> mike18_: no different to `def my_new_func(v): return some_other_func(v, 42)`
[17:23:47] <bjs> just using `lambda` not `def`
[17:25:32] *** Quits: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com) (Ping timeout: 240 seconds)
[17:25:35] *** Joins: Julian (~tos9@python/site-packages/Julian)
[17:25:38] <mike18_> ok
[17:25:53] *** Joins: servytor (uid525486@id-525486.hampstead.irccloud.com)
[17:26:54] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[17:27:32] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Ping timeout: 240 seconds)
[17:28:41] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[17:29:02] *** Joins: roped (~lonely_@user/roped)
[17:32:53] *** Joins: Viewday14 (~Viewday@user/viewday)
[17:32:56] *** dcaro_lunch is now known as dcaro
[17:33:23] *** Quits: Vision (~Vision@024-178-231-173.res.spectrum.com) (Ping timeout: 264 seconds)
[17:34:55] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[17:34:55] *** Viewday14 is now known as Viewday1
[17:35:11] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 264 seconds)
[17:36:00] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[17:36:10] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:37:01] *** Quits: legola (~legola@46.235.101.181) (Remote host closed the connection)
[17:37:34] *** Joins: Enitin (~Enitin@82.102.22.86)
[17:38:19] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[17:38:26] *** Quits: n00b101 (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[17:38:45] *** Joins: BlueSky (~BlueSky@user/bluesky)
[17:39:36] *** Quits: BlueSky (~BlueSky@user/bluesky) (Read error: Connection reset by peer)
[17:39:56] *** Joins: BlueSky (~BlueSky@user/bluesky)
[17:40:20] *** Quits: stockholm (~Andreas@p200300d2c708e00069139500aa25ed3d.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[17:40:31] *** Quits: eblip (~eb0t@90.209.247.46) (Ping timeout: 245 seconds)
[17:41:06] *** Quits: BlueSky (~BlueSky@user/bluesky) (Read error: Connection reset by peer)
[17:41:25] *** Joins: BlueSky (~BlueSky@user/bluesky)
[17:41:34] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 268 seconds)
[17:42:44] *** Joins: eblip (~eb0t@90.199.241.70)
[17:43:24] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[17:43:59] *** Joins: BlueSky_ (~BlueSky@user/bluesky)
[17:44:30] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[17:44:36] *** Quits: BlueSky_ (~BlueSky@user/bluesky) (Read error: Connection reset by peer)
[17:44:53] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[17:45:54] *** Quits: gggp (~gggp@220-136-153-49.dynamic-ip.hinet.net) (Remote host closed the connection)
[17:46:02] *** Quits: BlueSky (~BlueSky@user/bluesky) (Ping timeout: 240 seconds)
[17:46:25] *** Joins: BlueSky (~BlueSky@user/bluesky)
[17:46:26] *** Joins: gggp (~gggp@220-136-153-49.dynamic-ip.hinet.net)
[17:47:06] *** Quits: BlueSky (~BlueSky@user/bluesky) (Read error: Connection reset by peer)
[17:47:36] *** Joins: BlueSky (~BlueSky@user/bluesky)
[17:48:03] *** Joins: legola (~legola@46.235.101.181)
[17:48:06] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[17:48:07] *** justCity is now known as justache
[17:48:36] *** Quits: BlueSky (~BlueSky@user/bluesky) (Read error: Connection reset by peer)
[17:48:37] <mike18_> how can i overwrite the hour for pendulum.now() ?
[17:49:00] *** Joins: BlueSky (~BlueSky@user/bluesky)
[17:49:02] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 240 seconds)
[17:49:14] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[17:50:06] *** Quits: BlueSky (~BlueSky@user/bluesky) (Read error: Connection reset by peer)
[17:50:33] *** Joins: BlueSky (~BlueSky@user/bluesky)
[17:51:26] *** Joins: stockholm (~Andreas@p200300d2c708e00069139500aa25ed3d.dip0.t-ipconnect.de)
[17:52:09] *** Quits: BlueSky (~BlueSky@user/bluesky) (Remote host closed the connection)
[17:53:01] *** Joins: fredrikhl (~fhl@myrsnipa.uio.no)
[17:53:42] *** Joins: Viewday19 (~Viewday@user/viewday)
[17:54:06] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:54:08] <mike18_> self.now() = pendulum.now() self.now().at(hour=10, minute=0, second=0) ... getting error 'DateTime' object is not callable
[17:54:10] <CrtxReavr> o_O
[17:54:21] <mike18_> but it works for: self.now().at(hour=10, minute=0, second=0)
[17:54:23] <mike18_> whats the diff?
[17:54:41] <Ninpo> is that the actual code
[17:54:47] <Ninpo> because self.now() = looks wrong
[17:55:07] <grym> self.now = , maybe
[17:55:17] *** Quits: Harlin (~DonQixote@75-163-144-60.clsp.qwest.net) (Remote host closed the connection)
[17:55:26] <mike18_> yeah
[17:55:29] <Ninpo> also now() is a function that returns a DateTime object
[17:55:35] <mike18_> it should be self.now.at
[17:55:42] <Ninpo> and it's correct that you can't call a DateTime object
[17:55:47] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:55:53] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[17:55:53] *** Viewday19 is now known as Viewday1
[17:56:03] <Ninpo> so, bob = pendulum.now() assigns the result of the callable to bob, which is now a DateTime object
[17:56:10] <Ninpo> bob() would be invalid
[17:56:56] <CrtxReavr> mike18_, you're trying to create a time object for 10 hours in the future?
[17:57:27] <mike18_> nope - its for manual re-run
[17:57:46] <CrtxReavr> o_O
[17:57:48] <mike18_> lets say it failed some hours ago - for manual re-run the algo
[17:58:00] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[17:58:02] <mike18_>  / data generation
[17:58:18] <Ninpo> mike18_: you can use self.now.set(hour=12) or whatever
[17:58:26] <Ninpo> https://pendulum.eustace.io/docs/#fluent-helpers
[17:58:28] <mike18_> .at is the same as set?
[17:58:43] <Ninpo> at also works
[17:59:14] <Ninpo> set modifies it, on doesn't I think
[17:59:17] <Ninpo> on/at
[17:59:31] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[17:59:44] <mike18_> i dont want to modify self.now
[17:59:53] <mike18_> just it would return a new date
[18:00:05] <mike18_> time_for_manual_run = self.now.at(hour=int(self.dba_manual_run_for_hour), minute=0, second=0)
[18:00:21] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Read error: Connection reset by peer)
[18:00:34] <Ninpo> oh now I'm incorrect just re-read and experimented
[18:00:39] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[18:00:41] <Ninpo> s/now/no
[18:01:18] <Ninpo> https://bpa.st/32BQ
[18:01:26] *** Joins: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net)
[18:01:26] *** Joins: sedeki (~textual@user/sedeki)
[18:01:29] <Ninpo> there's a subtle difference between at(10) and set(hour=10)
[18:02:04] <Ninpo> but neither modify the DT object.
[18:03:32] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Ping timeout: 240 seconds)
[18:05:00] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[18:05:55] *** Quits: xheimlich (~xheimlich@179.218.1.150) (Quit: leaving)
[18:07:22] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Read error: Connection reset by peer)
[18:07:47] *** Quits: sedeki (~textual@user/sedeki) (Ping timeout: 246 seconds)
[18:08:30] *** Joins: sedeki (~textual@user/sedeki)
[18:08:42] *** Joins: scruz (~scruz@41.58.249.215)
[18:09:07] <scruz> does anyone here use strawberry and sqlalchemy in the same application?
[18:09:21] <mike18_> Ninpo:  what diff?
[18:09:46] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[18:11:50] <InPhase> Ninpo: You can tell from the fact that it displays an output that those are creating a new DateTime that's modified.  You're to assign it or reassign it for an update.
[18:11:51] *** Quits: mcpac82 (~textual@212.25.0.228) (Read error: Connection reset by peer)
[18:11:57] *** Joins: Shou (~nyah@wikipedia/Davepeta)
[18:13:19] <roped> I have read somewhere that setup.py is not cool anymore. What should I read to educate myself about what's cool nowadays?
[18:13:19] *** Joins: wovixo (~wovixo@128.104.205.49)
[18:13:45] <Julian> roped: Don't go for hype.
[18:14:22] <grym> roped:  `python setup.py <action>` isn't a great idea, anyway.
[18:14:25] <Julian> roped: setup.py is fine -- but also setup.cfg is a better format in some sense (better because it doesn't use python code to define data) -- there are also entirely non-setuptools-using ways to define how to build your project, poetry being the most popular
[18:14:45] <Julian> roped: neither of the above have what to do with what grym mentioned, which is *running* setup.py yourself hasn't been a cool thing to do for ~10 years
[18:14:52] <The-Compiler> roped: https://packaging.python.org/tutorials/packaging-projects/ has some words on setup.cfg
[18:15:12] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:15:24] <grym> setup.cfg + the smolest setup.py seems fine
[18:15:30] <grym> (that way you get -e )
[18:15:37] *** Quits: withere__ (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: If dreams are like movies, then memories are films about ghosts.)
[18:15:51] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[18:16:04] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[18:16:12] *** Joins: Inline (~Inline@aftr-37-201-240-235.unity-media.net)
[18:16:17] <The-Compiler> roped: then there are things aiming to replace that entirely, like Pipenv, poetry or flit. I wouldn't recommend Pipenv, also see e.g. https://chriswarrick.com/blog/2018/07/17/pipenv-promises-a-lot-delivers-very-little/ - poetry seems nice if you don't really need all the other tooling integrating with the "traditional" way
[18:16:20] <Julian> grym: https://github.com/pypa/pip/pull/8212
[18:16:54] <grym> Julian: neat
[18:17:07] <The-Compiler> yep, with editable installs being supported for e.g. poetry now, I can seriously consider it
[18:17:15] <grym> yeah that's the good good
[18:17:31] <roped> so, my amateurish and superficial conclusion after reading all of this is that I should stick to writing setup.py files for my stuff? :D
[18:17:42] <The-Compiler> (this is part of pip 21.3 (2021-10-11))
[18:17:48] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-34c3-239e-b6b7-c683.res6.spectrum.com)
[18:17:49] <Ninpo> if that's what you know and it works sure why not
[18:17:52] <The-Compiler> so, quite recent
[18:18:02] <grym> roped: worst case, they're easy to port now
[18:18:05] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Quit: guenhael)
[18:18:10] <Ninpo> oh didn't know poetry did editable installs now
[18:18:18] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[18:18:28] <grym> roped: imo as long as i can reliably `pip install [-e]` your thing on 3.7+, i do not actually care what you do in there
[18:18:50] *** Quits: Jonopoly (~Jonopoly@user/jonopoly) (Quit: WeeChat 3.0)
[18:18:50] <grym> if i have to get up to weird shenanigans instead, i'm less enthusiastic
[18:18:55] <Ninpo> same
[18:19:02] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[18:19:43] <The-Compiler> Ninpo: that was a change in Python/pip, not in poetry itself IIRC
[18:19:53] <Ninpo> oh right
[18:20:24] *** Joins: xkuru (~xkuru@user/xkuru)
[18:21:02] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Client Quit)
[18:21:13] *** Joins: guenhael (~Thunderbi@193.52.208.98)
[18:21:34] *** Quits: Samian (~s@user/samian) (Read error: Connection reset by peer)
[18:21:53] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[18:22:29] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 246 seconds)
[18:22:36] *** Joins: tracey (~trace@dynamic-002-247-251-105.2.247.pool.telefonica.de)
[18:22:36] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[18:22:59] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[18:23:08] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[18:23:30] *** Joins: emerent_ (~quassel@p200300cd572fe8a8ba27ebfffed28a59.dip0.t-ipconnect.de)
[18:23:30] *** emerent is now known as Guest9840
[18:23:30] *** Quits: Guest9840 (~quassel@p200300cd5703cdd4ba27ebfffed28a59.dip0.t-ipconnect.de) (Killed (iridium.libera.chat (Nickname regained by services)))
[18:23:30] *** emerent_ is now known as emerent
[18:23:48] *** Quits: martums (~martums@user/martums) (Read error: Connection reset by peer)
[18:23:51] *** Quits: alkino_ (~quassel@user/alkino) (Ping timeout: 250 seconds)
[18:23:53] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Client Quit)
[18:24:07] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[18:24:08] *** Joins: alkino (~quassel@user/alkino)
[18:24:13] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[18:24:37] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[18:24:43] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[18:24:59] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[18:27:37] *** Quits: tracey (~trace@dynamic-002-247-251-105.2.247.pool.telefonica.de) (Ping timeout: 256 seconds)
[18:29:27] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[18:29:32] *** Quits: rickybob (rickybob@gateway/vpn/protonvpn/rickybob) (Ping timeout: 240 seconds)
[18:31:10] *** Joins: alzgh (~alzgh@user/alzgh)
[18:33:49] *** Quits: Shou (~nyah@wikipedia/Davepeta) (Ping timeout: 250 seconds)
[18:33:57] *** Joins: martums (~martums@user/martums)
[18:34:01] *** Joins: nicode (~nic@2607:f2c0:958a:3d00:6940:c7c1:1805:8798)
[18:34:15] *** Quits: emerent (~quassel@p200300cd572fe8a8ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[18:34:38] *** Joins: emerent (~quassel@p200300cd57303249ba27ebfffed28a59.dip0.t-ipconnect.de)
[18:34:51] *** Quits: Viewday1 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[18:35:12] *** Joins: Viewday1 (~Viewday@user/viewday)
[18:36:09] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[18:36:14] *** Quits: scruz (~scruz@41.58.249.215) (Quit: Leaving)
[18:36:52] *** Quits: chatcat_ (chatcat@gateway/vpn/airvpn/chatcat) (Read error: Connection reset by peer)
[18:38:16] *** Joins: hailhydra (~hailhydra@136.36.153.168)
[18:39:41] *** Joins: chatcat (~chatcat@ip-24-53-119-61.user.start.ca)
[18:40:35] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Ping timeout: 264 seconds)
[18:42:32] *** Quits: hailhydra (~hailhydra@136.36.153.168) (Ping timeout: 240 seconds)
[18:45:13] <CrtxReavr> I think pipenv has found a niche in tutorials, 'cause you can easily create a venv and install the required modules in a single step.
[18:45:32] *** Quits: emerent (~quassel@p200300cd57303249ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[18:46:18] *** Joins: emerent (~quassel@p200300cd57307093ba27ebfffed28a59.dip0.t-ipconnect.de)
[18:46:35] *** Joins: hailhydra (~hailhydra@136.36.153.168)
[18:47:53] *** Joins: weibullguy (weibullguy@gateway/vpn/protonvpn/weibullguy)
[18:48:33] *** Joins: DaNeenjah (~jake@adsl-74-230-8-177.hsv.bellsouth.net)
[18:49:24] <deniska> single step: python3.10 -m venv .venv && pip install -r requirements.txt
[18:50:40] *** Joins: p-i- (~Ohmu@49.230.164.104)
[18:50:58] *** Joins: harpia (~harpia@2804:2aec:205:1400:1a8b:e47a:9188:7f77)
[18:51:04] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:51:28] <phy1729> won't that install it for the user not in the venv?
[18:51:41] <deniska> python3.10 -m venv .venv && .venv/bin/pip install -r requirements.txt # forgot :)
[18:51:43] <tmart> yeah, he didn't activate
[18:51:53] <tmart> so much for "single step"
[18:52:16] <han-solo> what activate ?
[18:52:40] <deniska> where we're going we don't need activate
[18:52:41] *** Quits: iflema (~ian@user/iflema) (Remote host closed the connection)
[18:52:56] <han-solo> heh
[18:53:04] *** Joins: iflema (~ian@user/iflema)
[18:53:08] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[18:53:12] <tmart> in virtual envs, there are scripts named "activate" that prepend the PATH variable with the venv's binaries (so they'll be executed instead)
[18:53:14] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Read error: Connection reset by peer)
[18:53:26] <deniska> yeah, I don't use these
[18:53:32] *** Quits: lethu (~lethu@user/lethu) (Remote host closed the connection)
[18:53:55] <tmart> that's why you erred on your single step though. maybe you should?
[18:54:14] <han-solo> what error ? :)
[18:54:14] <deniska> no, then I always run things in the wrong venv
[18:54:17] <phy1729> Using the binary in the venv suffices
[18:54:44] <deniska> Nowadays I typically have ./scripts/run.sh in the project root
[18:54:57] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:55:31] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[18:55:50] *** Joins: Viewday12 (~Viewday@user/viewday)
[18:56:38] *** Joins: p-i-_ (~Ohmu@2001:44c8:460a:a83c:19b0:c2ce:7a73:2925)
[18:57:18] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[18:57:37] *** Joins: mimmy (~mimmyjau@72.142.88.18)
[18:57:39] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[18:57:40] *** Viewday12 is now known as Viewday1
[18:57:43] *** Quits: asthasr_ (~asthasr@162.210.28.151) (Quit: asthasr_)
[18:58:04] <deniska> (because for some reason things I'm working on require bazillion env vars)
[18:58:09] *** Quits: p-i- (~Ohmu@49.230.164.104) (Read error: Connection reset by peer)
[18:58:11] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[18:58:15] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[18:58:19] <deniska> (also, I quite dislike using env vars for configuration)
[18:58:32] *** Quits: stockholm (~Andreas@p200300d2c708e00069139500aa25ed3d.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[18:58:54] <grym> deniska: at least there's direnv, but yeah ... hurray, global stringly typed state
[18:58:56] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[18:59:22] *** Quits: nicode (~nic@2607:f2c0:958a:3d00:6940:c7c1:1805:8798) (Quit: WeeChat 2.8)
[18:59:34] * jwhisnant was just going to mention direnv ...
[18:59:40] <rendar> is pickle the best way to send python data through sockets, network and unix sockets?
[18:59:43] <deniska> grym: heh, guess what, tests sometimes need different settings :)
[18:59:45] * han-solo notes to self. Learn docker
[19:00:10] <grym> deniska: oh boy don't they
[19:01:27] *** Joins: Ergo^ (~ergo@91.238.59.144)
[19:01:31] *** Joins: xsx (~x@140.red-88-20-100.staticip.rima-tde.net)
[19:02:21] <deniska> what I dislike about env vars is that it's never obvious where they're coming from, and it's way too easy to accidentally show them to people
[19:02:22] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Client Quit)
[19:02:36] <MacGyver> rendar: No. In fact, it's probably the worst way you can come up with.
[19:03:02] <rendar> ok, and the 3 top best ways are...?
[19:03:15] <MacGyver> rendar: You mostly don't want to serialize and deserialize actual python objects.
[19:03:19] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 256 seconds)
[19:03:22] *** Joins: jr_web_dev (~jr_web_de@ool-18bee068.dyn.optonline.net)
[19:03:26] <rendar> but i have to pass them through processes
[19:03:40] *** Joins: Julian (~tos9@python/site-packages/Julian)
[19:03:52] <rendar> i have children processes that must execute a command and report a result
[19:04:04] *** Joins: abraxas (~abraxas@2600:8805:c880:3:c7fe:fc8e:f2cc:8056)
[19:04:47] *** Joins: dohtem (uid524096@user/dohtem)
[19:05:06] <rendar> what is the best way to achieve this?
[19:06:12] *** Joins: Pixi_ (~Pixi@user/pixi)
[19:06:17] *** Quits: harpia (~harpia@2804:2aec:205:1400:1a8b:e47a:9188:7f77) (Quit: harpia)
[19:06:30] <MacGyver> Ah, so it's single-system. Then you could maybe get away with pickling, but there's mechanisms in the multiprocessing library for this.
[19:06:46] <jr_web_dev> im looking for a library or framework or whatever that would let me create a file explorer treeview in a pane.  Similar to how to a GUI file explorer on a desktop, where one clicks the plus and minus symbol and it collapses or expands the folder.  The thing is im not using an actual device like a harddrive or usb to go "explore", i have a bunch of string values. based off these string values i want
[19:06:48] <jr_web_dev> to create this hierarchy file explorer "treeview"
[19:06:49] <jwhisnant> deniska: grym: I like - https://pypi.org/project/pytest-env/ for that ...
[19:07:08] *** Parts: strk (~strk@user/strk) (WeeChat 3.0.1)
[19:07:25] <MacGyver> multiprocessing takes care of any (un)pickling in the background for you.
[19:07:35] <rendar> MacGyver, yes ok but i use asyncio
[19:08:06] <deniska> jwhisnant: sources of env vars are not obvious, let's add one more :)
[19:08:07] <rendar> MacGyver, and, just to know, what are the solutions instead of pickling?
[19:08:23] <jwhisnant> rendar: let's back up a bit. Can you describe what you are trying to do more concretely?
[19:08:25] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 256 seconds)
[19:08:37] <MacGyver> rendar: When it's about network sockets, you mostly want to serialize the relevant data in a well-defined protocol, rather than python objects.
[19:09:10] *** Quits: mimmy (~mimmyjau@72.142.88.18) (Quit: WeeChat 3.3)
[19:09:10] <jwhisnant> deniska: we should create a new standard. https://xkcd.com/927/
[19:09:19] <rendar> jwhisnant, i have a distributed system that must execute commands and report results of that command
[19:09:23] <MacGyver> rendar: Doesn't really matter what you serialize *to*, as long as it's a mechanism that allows the remote end to build a new object based on the data, rather than having to deserialize the object itself successfully.
[19:09:37] <MacGyver> rendar: That's what the big fat warning at the top of the pickle-documentation is about.
[19:09:48] <jwhisnant> rendar: maybe celery?
[19:10:10] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 260 seconds)
[19:10:17] <rendar> jwhisnant, nope
[19:11:10] <rendar> MacGyver, ok, i see
[19:11:39] *** Quits: jdmark2 (~jdmark@097-102-095-007.res.spectrum.com) (Quit: Leaving)
[19:11:41] <MacGyver> (The go-to for most people nowadays is json serialization)
[19:11:53] <rendar> MacGyver, i also thought about json
[19:11:56] *** Joins: jdmark (~jdmark@097-102-095-007.res.spectrum.com)
[19:12:04] <rendar> why should i prefer json over pickle?
[19:12:37] <deniska> it's not executing arbitrary python code, you can view it in a text editor, and other languages understand it too
[19:12:40] <MacGyver> Because pickle is insecure.
[19:12:55] <MacGyver> That's really the long and short of it.
[19:13:05] *** Joins: magla (~gelignite@55d416cc.access.ecotel.net)
[19:13:21] <MacGyver> Pickle is decent if the pickled objects are trustworthy and compatible.
[19:13:25] *** Joins: stockholm (~Andreas@p200300d2c708e00069139500aa25ed3d.dip0.t-ipconnect.de)
[19:13:29] <rendar> deniska, thanks, that helps a lot
[19:13:33] <MacGyver> But you mentioned network sockets, which almost guarantees that is not the case.
[19:13:37] <rendar> i didn't know that picke can run code
[19:13:49] *** Joins: Julian (~tos9@python/site-packages/Julian)
[19:14:00] <rendar> MacGyver, why? json data is used a lot across http protocol
[19:14:00] <MacGyver> That's the big fat warning at the top of the pickle documentation.
[19:14:07] <MacGyver> rendar: Why what?
[19:14:16] <rendar> MacGyver, json is not the case
[19:14:26] <MacGyver> You misunderstand.
[19:14:33] <MacGyver> Pickle is decent if the pickled objects are trustworthy and compatible.
[19:14:35] <MacGyver> But you mentioned network sockets, which almost guarantees that is not the case.
[19:14:42] <rendar> oh, ok i see now, thanks
[19:14:46] <MacGyver> "that" refers to the objects being trustworthy.
[19:14:50] <rendar> ok ok
[19:14:58] <The-Compiler> rendar: https://nedbatchelder.com/blog/202006/pickles_nine_flaws.html
[19:16:13] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[19:16:23] *** Joins: Viewday17 (~Viewday@user/viewday)
[19:16:32] <jwhisnant> rendar: ok. why is this a poor choice for your use cae?
[19:16:35] <jwhisnant> case
[19:16:51] *** Quits: xardas (~xardas@149.233.51.127) (Quit: Client closed)
[19:17:04] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[19:17:23] *** Joins: mickey8 (~user@user/mickey)
[19:18:03] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[19:18:04] *** Viewday17 is now known as Viewday1
[19:18:09] *** Joins: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de)
[19:18:29] *** Quits: luva (~luva@45.141.152.44) (Ping timeout: 246 seconds)
[19:21:02] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 240 seconds)
[19:23:42] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[19:23:45] *** Quits: gggp (~gggp@220-136-153-49.dynamic-ip.hinet.net) (Remote host closed the connection)
[19:24:24] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[19:25:02] <drogas> hi
[19:25:04] <jr_web_dev> anyone know a gui framework like tkinter thats best for creating a file explorer treeview? i want to create a folder structure based of given string values.. so lets say i have an array = [folder1, folder2, folder3] etc. i can then build by string values.. anyone knows a good tutorial on this?]
[19:25:43] <p-i-_> Using mplfinance (which comes straight from matplotlib), I have 2N axes (for N plots: pricechart + vol). how to get all the vol axes to have height 1 and to sharey?
[19:25:47] *** Quits: drogas (~drogas@jump2.jet.uk) (Quit: Connection closed)
[19:25:58] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[19:26:03] *** Joins: zhukovgreen (~ab017i2@2a0f:8742:88c:0:7512:eb47:9235:ae4f)
[19:26:26] *** Joins: mickey8 (~user@user/mickey)
[19:27:03] *** Joins: drogas (~drogas@jump2.jet.uk)
[19:27:07] *** Quits: drogas (~drogas@jump2.jet.uk) (Client Quit)
[19:27:12] *** Joins: drogas76 (~drogas@jump2.jet.uk)
[19:27:27] <drogas76> https://bpa.st/XTNA
[19:27:29] <drogas76> I'm not sure I understand that
[19:27:39] <drogas76> what does `super().` do
[19:27:49] <drogas76> this is inside a class btw
[19:28:21] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[19:28:21] <avu> drogas76: it calls the __init__ method of the next superclass in the MRO
[19:28:33] *** Quits: pro (~pro@user/pro) (Quit: WeeChat 3.3)
[19:28:37] *** Joins: bindu (~bindu@user/bindu)
[19:28:51] *** Joins: lionslicer (~lionslice@2804:d41:a7a6:1300:14eb:2bb0:cf4c:8078)
[19:28:53] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[19:28:53] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[19:29:05] <drogas76> what is MRO
[19:29:22] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[19:29:26] *** Quits: alzgh (~alzgh@user/alzgh) (Ping timeout: 256 seconds)
[19:29:35] <avu> drogas76: the method resolution order
[19:29:38] <p-i-_> https://bpa.st/NQAA <-- this is my plotting code
[19:29:50] <avu> drogas76: https://docs.python.org/3/glossary.html#term-method-resolution-order
[19:30:02] <p-i-_> I'm not sure how to make the even numbered axes different heights from the odd numbered axes
[19:30:02] <avu> drogas76: for super() see https://docs.python.org/3/library/functions.html#super
[19:30:24] <drogas76> mnn okay I will have a read
[19:30:31] *** Joins: fikran (~fikran@user/fikran)
[19:30:36] <bjs> drogas76: in Python a class can inherit from multiple other classes. Like `class Child(Parent1, Parent2, Parent3)` and in that case there is no single "parent".  super() works out which one to call
[19:31:13] <drogas76> ah so it looks into all classes to find out the arguments given to __init__?
[19:31:15] <bjs> it gets complicated and super() does all the work for you, so you should basically always use super() to call the parent methods.
[19:31:43] <bjs> drogas76: no, the job of super is not to figure out which arguments to pass (you do that) but *which class* to call
[19:31:59] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[19:32:17] <bjs> drogas76: if in __init__ you want to call the "parent" __init__,  then super() works out which is the "parent" for you
[19:32:45] *** Quits: jr_web_dev (~jr_web_de@ool-18bee068.dyn.optonline.net) (Quit: WeeChat 2.8)
[19:33:49] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:34:04] <drogas76> still can't wrap my head around it
[19:34:27] <avu> drogas76: read https://docs.python.org/3/library/functions.html#super - it even links to a more detailed article in the end in case the docs themselves aren't enough
[19:34:35] *** Joins: ianliu (~ianliu@201-13-38-104.dsl.telesp.net.br)
[19:35:00] *** Joins: Shou (~nyah@wikipedia/Davepeta)
[19:35:06] *** Joins: yaalon (~yaalon@24.243.76.137)
[19:35:09] *** Joins: davef (sid287421@user/davef)
[19:35:31] <bjs> drogas76: when you write an __init__ (or any method really) it overwrites what method that was inherited.  But sometimes (very often) you want to call the original method from within yours.  e.g. a Child __init__ might want to call Parent.__init__ anyway
[19:36:07] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:36:09] <bjs> drogas76: instead of writing Parent.__init__(self, ...) to call it (and getting it wrong) you let Python do it by saying super().__init__(...)   then super works out to call Parent's __init__
[19:36:14] <avu> ...or help bjs procrastinate by extracting the same information out of them interactively =)
[19:36:21] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[19:36:23] <bjs> my code is compiling
[19:36:51] <drogas76> ah okay! bj that makes a bit more sense now.
[19:36:52] *** Joins: gregoryloscombe (~gregorylo@213.86.15.34)
[19:36:55] *** Joins: Viewday19 (~Viewday@user/viewday)
[19:36:56] * avu .oO( https://xkcd.com/303/ )
[19:36:57] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[19:37:07] <drogas76> and it will look into all parent classes of the child?
[19:37:40] <ianliu> I created an environment with "virtualenv env", activated it and installed IPython with pip. When I launch ipython, I get this error: http://ix.io/3EBu , and I can't import any modules from the environment. What's going on here?
[19:37:42] *** Joins: DnzAtWrk (~DnzAtWrk@2914.pc.puv.fi)
[19:37:55] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Remote host closed the connection)
[19:38:05] <gregoryloscombe> question, is there an escape char to allow {} to be in string.format(), eg "string {} \{\}".format("blah")
[19:38:27] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[19:38:27] *** Viewday19 is now known as Viewday1
[19:38:42] <avu> gregoryloscombe: {{ and }}
[19:38:56] *** Quits: lastshell (~lastshell@user/lastshell) (Quit: WeeChat 3.0)
[19:39:36] <gregoryloscombe> perfect, thank you!
[19:40:43] <bjs> drogas76: yes, and it'll look at what type `self` actually was (to know what class it started with)
[19:41:11] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:41:49] *** Quits: guenhael (~Thunderbi@193.52.208.98) (Ping timeout: 268 seconds)
[19:42:05] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Remote host closed the connection)
[19:42:09] <drogas76> Thanks Ben, always helpful :)
[19:42:24] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[19:42:31] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[19:43:06] *** Joins: alzgh (alzgh@user/alzgh)
[19:44:54] *** Quits: DnzAtWrk (~DnzAtWrk@2914.pc.puv.fi) (Ping timeout: 268 seconds)
[19:45:11] *** Quits: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de) (Quit: WeeChat 3.3)
[19:45:43] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[19:45:51] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[19:45:54] *** Joins: yaalon (~yaalon@24.243.76.137)
[19:46:04] *** Joins: JanC (~janc@user/janc)
[19:46:48] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[19:47:09] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[19:47:18] *** Quits: ianliu (~ianliu@201-13-38-104.dsl.telesp.net.br) (Quit: WeeChat 3.3)
[19:49:04] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[19:49:41] *** Joins: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[19:50:24] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[19:50:32] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 240 seconds)
[19:52:11] *** Quits: carl- (~carl-@185.103.188.130) (Ping timeout: 245 seconds)
[19:52:48] *** Joins: Viewday14 (~Viewday@user/viewday)
[19:54:03] *** Joins: hel0 (~hel0@user/redrum88)
[19:54:13] *** Joins: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de)
[19:54:53] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[19:54:53] *** Viewday14 is now known as Viewday1
[19:56:16] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[19:57:36] *** Joins: mimmyjau (~mimmy@72.142.88.18)
[19:58:02] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[19:58:34] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-6407-dc09-fb7a-51c4.res6.spectrum.com)
[19:58:41] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[19:58:48] *** Quits: mimmyjau (~mimmy@72.142.88.18) (Client Quit)
[19:59:57] *** Joins: Barones (~Barones@2804:48dc:8500:0:6904:c7e7:9177:1a9c)
[19:59:57] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 276 seconds)
[20:00:20] *** Joins: BinarySavior (~BinarySav@idlerpg/player/BinarySavior)
[20:00:37] <BinarySavior> test(y)
[20:00:49] <BinarySavior> (y)
[20:00:55] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 250 seconds)
[20:01:02] <BinarySavior> sorry i thought i was in off-topic
[20:02:57] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[20:04:58] *** Quits: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de) (Quit: WeeChat 3.3)
[20:06:02] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 240 seconds)
[20:06:10] *** Quits: legola (~legola@46.235.101.181) (Remote host closed the connection)
[20:06:45] *** Joins: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[20:07:51] *** Joins: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de)
[20:08:20] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[20:08:33] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[20:08:46] *** Joins: mimmy (~mimmy@72.142.88.18)
[20:09:52] *** Joins: jr_web_dev (~jr_web_de@ool-18bee068.dyn.optonline.net)
[20:10:02] *** Quits: mike18_ (~geri@217-149-160-150.nat.highway.telekom.at) (Remote host closed the connection)
[20:10:36] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[20:11:00] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 276 seconds)
[20:11:29] *** Quits: sharperguy (~sharpergu@fnord.cryptophone.de) (Ping timeout: 264 seconds)
[20:11:57] <jr_web_dev> Do any of you know whats the best algorithm for converting this structure.. dog_folder/german_shepards/1.jpg, dog_folder/german_sherpards/2.jpg, dog_folder/mutts/1.jpg, cat_folder/persians/1.jpg.. so that unique files and folders print every new line.  Does anyone know a site that can break it down for me?
[20:12:25] *** Joins: Viewday11 (~Viewday@user/viewday)
[20:12:32] *** Joins: JeffH (~JeffH@205.sub-174-198-141.myvzw.com)
[20:12:36] <jr_web_dev> those paths are string datatype
[20:12:36] <grym> jr_web_dev: is that a string?
[20:12:42] <jr_web_dev> yes
[20:12:44] <grym> is it one string, or many strings
[20:12:46] <jr_web_dev> there string
[20:12:54] <jr_web_dev> i have an array of strings
[20:13:02] <grym> print('\n'.join(thelist))
[20:13:11] <jr_web_dev> each looking like dog_folder/germans etc
[20:13:11] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[20:13:22] <jr_web_dev> wow that simple
[20:13:30] <jr_web_dev> let me see
[20:14:20] *** Quits: ToAruShiroiNeko (~eva@user/toarushiroineko) ()
[20:14:43] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[20:14:43] *** Viewday11 is now known as Viewday1
[20:14:58] <jr_web_dev> so im printing the values in a for loop.. so for folder in folders: print(folder) how would i do that grym
[20:15:17] <grym> kind of like that, then
[20:15:28] <jr_web_dev> ok its printing each character let me see what im doing wrong
[20:15:53] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 246 seconds)
[20:16:30] <jr_web_dev> for folder in folders: print(folder.name) <-- this is how im actually doing it
[20:16:37] <grym> https://bpa.st/H2VQ
[20:16:43] <grym> you might have a single string
[20:17:50] <jr_web_dev> hmm
[20:18:47] <grym> (in which case you'll want to make a list out of it)
[20:18:49] *** Joins: BlueSky (~BlueSky@user/bluesky)
[20:18:51] *** Joins: luva (~luva@37.120.197.53)
[20:19:50] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[20:19:56] *** Joins: yaalon (~yaalon@24.243.76.137)
[20:20:05] *** Quits: bitreverb (~bitcycle@174-21-36-109.tukw.qwest.net) (Ping timeout: 246 seconds)
[20:20:07] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[20:20:25] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[20:20:29] <jr_web_dev> yeah im getting close there grym thanks so much man
[20:20:49] <grym> cheers
[20:20:53] <JeffH> Anyone here use vscode?  Is there a way to have it ask for command line parameters when debugging?
[20:22:21] *** Quits: jr_web_dev (~jr_web_de@ool-18bee068.dyn.optonline.net) (Quit: WeeChat 2.8)
[20:22:37] *** Quits: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de) (Quit: WeeChat 3.3)
[20:23:04] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[20:24:12] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[20:25:15] *** Quits: ali1234 (~al@user/ali1234) (Remote host closed the connection)
[20:25:27] *** Joins: ali1234 (~al@user/ali1234)
[20:27:05] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 264 seconds)
[20:27:40] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[20:27:50] *** Quits: JeffH (~JeffH@205.sub-174-198-141.myvzw.com) (Remote host closed the connection)
[20:30:24] *** dcaro is now known as dcaro_away
[20:31:30] <jinsun_> <JeffH> "Anyone here use vscode?  Is..." <- you can provide args in launch.json, see https://code.visualstudio.com/docs/python/debugging
[20:32:11] *** Quits: ubert1 (~Thunderbi@2a02:8109:9880:303c:ca5b:76ff:fe29:f233) (Remote host closed the connection)
[20:32:14] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[20:33:32] *** Joins: Viewday19 (~Viewday@user/viewday)
[20:34:02] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 240 seconds)
[20:35:10] *** Quits: alzgh (alzgh@user/alzgh) (Ping timeout: 256 seconds)
[20:35:11] *** Quits: Viewday1 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[20:35:12] *** Viewday19 is now known as Viewday1
[20:35:41] <hailhydra> Does anyone here use skaffold vscode and django? How do you debug your manage.py commands? we can't get out debugger to attach
[20:36:02] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 260 seconds)
[20:36:05] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 264 seconds)
[20:37:23] *** Quits: RiFo (~RiFo@user/rifo) (Ping timeout: 256 seconds)
[20:38:06] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[20:38:40] *** Joins: alzgh (~alzgh@user/alzgh)
[20:38:45] *** Quits: zhukovgreen (~ab017i2@2a0f:8742:88c:0:7512:eb47:9235:ae4f) (Quit: WeeChat 3.3)
[20:39:30] *** Joins: guenhael (~Thunderbi@2a01:e0a:163:7060:e044:f8df:1dd9:8d03)
[20:39:55] *** Quits: irrgit_ (~irrgit@192.241.175.183) (Ping timeout: 250 seconds)
[20:43:03] *** Quits: drogas76 (~drogas@jump2.jet.uk) (Ping timeout: 256 seconds)
[20:43:03] *** Joins: irrgit_ (~irrgit@192.241.175.183)
[20:43:31] *** Joins: harpia (~harpia@143.208.84.235)
[20:43:53] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 264 seconds)
[20:44:16] <mefistofeles> any ideas on how to profile code that runs slower on just some iterations? like has a cyclic behavior
[20:44:43] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1) (Quit: Leaving)
[20:44:49] *** Joins: tobybl (~tobybl@213.31.135.91)
[20:45:14] *** Joins: Roey (~Roey@user/Roey)
[20:46:36] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:46:45] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 276 seconds)
[20:49:02] *** Quits: tobybl (~tobybl@213.31.135.91) (Ping timeout: 240 seconds)
[20:49:13] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[20:50:05] *** Joins: yaalon (~yaalon@24.243.76.137)
[20:51:48] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[20:52:40] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[20:53:06] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[20:53:16] *** Joins: impermanence (~impermane@c-75-73-193-204.hsd1.mn.comcast.net)
[20:53:24] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[20:53:57] <impermanence> is there a better python repl than ptpython or bpython?  I thought I recalled a different one that had like built-in shell functions to like `ls` and `env` but I can't remembmer
[20:54:02] *** Joins: Viewday17 (~Viewday@user/viewday)
[20:54:54] *** Quits: vladoski (~vladoski@2001:b07:add:d406:1267:a9cc:4ea9:4324) (Remote host closed the connection)
[20:54:56] <CuriousErnestBro> hi grym where do I find resources of "industry standards" in python, like "use pyenv" "use direnv" "use poetry" "use black" etc
[20:55:09] <avu> impermanence: sounds like you may be looking for ipython
[20:55:16] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[20:55:17] <impermanence> avu: bingo
[20:55:23] <impermanence> ipython, thank you
[20:55:48] *** Quits: impermanence (~impermane@c-75-73-193-204.hsd1.mn.comcast.net) (Client Quit)
[20:56:05] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[20:56:05] *** Viewday17 is now known as Viewday1
[20:57:16] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-6407-dc09-fb7a-51c4.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[20:57:47] *** Joins: yaalon (~yaalon@24.243.76.137)
[20:58:33] *** Joins: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de)
[20:58:36] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[20:58:57] *** Joins: foobaz212 (~foobaz212@88.98.219.238)
[20:59:06] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[21:00:01] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[21:00:34] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[21:00:47] *** Joins: ano (~ano@user/ano)
[21:01:52] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[21:01:54] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[21:02:20] *** Joins: ghost43_ (~ghost43@gateway/tor-sasl/ghost43)
[21:02:42] *** Joins: pystardust (~pystardus@45.32.119.11)
[21:02:57] *** Joins: kosh (~kosh@user/kosh)
[21:04:58] <grym> CuriousErnestBro: those are all matters of taste, i'm afraid, so it's all community consensus stuff (and there's more than one community)
[21:05:04] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[21:06:02] <grym> CuriousErnestBro: (those are all pretty good choices, i'd say, which mostly means that i use those things too)
[21:07:06] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[21:07:30] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[21:07:37] <CuriousErnestBro> grym what else would you recommend, anything I'm forgetting?
[21:08:58] <grym> CuriousErnestBro: isort, pytest, maybe something like pre-commit to take some of the scut work away
[21:09:14] <grym> (ie, to run black,isort,... for you)
[21:09:22] <grym> lots of people like tox; i don't know anything about it
[21:09:52] <grym> CuriousErnestBro: a best practice i really appreciate is "make everything you make pip-installable"
[21:09:53] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[21:10:01] <grym> (_how_ you do that, i care a lot less about)
[21:10:03] <CuriousErnestBro> ah, I did that once
[21:10:07] <CuriousErnestBro> with setup.py right?
[21:10:22] <grym> yeah.  if i can't pip install your thing i'm very unlikely to care about it further
[21:10:58] <grym> (but to be clear, this is a litany of opinions; there may be places where none of these things pertain, i just haven't found them)
[21:11:28] <CuriousErnestBro> I see, thank you
[21:13:02] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:13:12] *** Quits: ckdCreations (~ckdCreati@147.55.133.130) (Quit: Leaving)
[21:13:24] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 276 seconds)
[21:13:44] <dob1> I am a bit confused on requests, when I do r.json() what I get is not a valid json
[21:13:52] *** Joins: yaalon (~yaalon@24.243.76.137)
[21:13:56] <dob1> it's single quoted
[21:14:01] *** Joins: CombatVet (~c4@user/combatvet)
[21:14:11] <han-solo> it returns the `dict`
[21:14:19] <rindolf> CuriousErnestBro: https://github.com/Kristories/awesome-guidelines and https://github.com/shlomif/Freenode-programming-channel-FAQ/blob/master/FAQ_with_ToC__generated.md#what-are-some-best-practices-in-programming-that-i-should-adopt
[21:14:26] *** Joins: Viewday17 (~Viewday@user/viewday)
[21:14:46] <grym> dob1: r.json() deserialises it for you
[21:14:51] <grym> r.content() ..? doesn't
[21:14:59] <han-solo> nope
[21:15:12] *** Quits: upsala (~zcb@185.213.155.252) (Quit: WeeChat 3.3)
[21:15:14] *** Quits: naranja (~orange@user/orangeboxcutter) (Remote host closed the connection)
[21:15:17] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[21:15:35] *** Joins: naranja (~orange@user/orangeboxcutter)
[21:15:45] *** Joins: jay-m1262 (~jay-m@154.72.160.46)
[21:15:52] *** Joins: de-facto (~de-facto@user/de-facto)
[21:15:56] <dob1> r.content ? I don't have content()
[21:16:01] <jinsun> r.content (bytes) or r.text  (str)
[21:16:29] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[21:16:29] *** Viewday17 is now known as Viewday1
[21:16:36] <jinsun> both are just fields/properties not functions
[21:16:52] <han-solo> it probably does `json.loads(r.text)` or something
[21:16:57] <han-solo> the r.json()
[21:16:59] <dob1> it's a bit confusing json()
[21:17:16] <dob1> at least for me
[21:17:32] <han-solo> yeah, `r.to_dict()` would have made more sense maybe
[21:17:34] <grym> dob1: yeah, it's ... too cleverly named, i've generally felt
[21:17:59] <jinsun> yes .json() doesn't give a json and json= parameter in request doesn't takejson
[21:18:02] *** Joins: Julian (~tos9@python/site-packages/Julian)
[21:18:09] <han-solo> yeah ':)
[21:18:11] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 246 seconds)
[21:18:17] <han-solo> it's...too clever
[21:18:20] <elwoodpd> What is the best way to remove the last row from a csv file?
[21:18:29] <dob1> jinsun, ah no???
[21:18:35] <elwoodpd> seem to get conflicting answers on stack exchange
[21:18:43] <dob1> json in parameter is not json??
[21:18:49] <ChrisWarrick> jinsun: what’s a json?
[21:18:52] <jinsun> it takes a dict there
[21:19:06] <dob1> well I have to review... I am not sure if my code is ok now :)
[21:19:09] <jinsun> not a json string
[21:19:09] <ChrisWarrick> jinsun: what did you expect?
[21:19:14] <grym> elwoodpd: lots of ways depending on what you need.
[21:19:20] <rendar> json clearly doesn't support integers, since it's JS, but if i dumps and loads back json, the type is int -- e.g.: https://bpa.st/CTJA  -- what is the trick here?
[21:19:50] <ChrisWarrick> jinsun: passing a json string to a specially named argument doesn’t make much sense
[21:19:57] <grym> elwoodpd: do you want to modify the file itself, or do you want to omit the last line from ingest, or ...
[21:20:01] <ChrisWarrick> rendar: json doesn’t say anything about how numbers work in it
[21:20:02] *** Quits: BlueSky (~BlueSky@user/bluesky) (Ping timeout: 240 seconds)
[21:20:07] <elwoodpd> I want to modify the file itself
[21:20:09] *** Quits: Julian (~tos9@python/site-packages/Julian) (Client Quit)
[21:20:26] <grym> elwoodpd: sed -i '$d' thefile.csv >:)
[21:20:41] <elwoodpd> har har
[21:20:47] <ChrisWarrick> rendar: most languages that have an integer type will interpret a number without a decimal point as int
[21:20:50] <rendar> ChrisWarrick, are you sure?
[21:20:53] <grym> elwoodpd: that is, in fact, how i'd do it at least sometimes.
[21:20:57] <rendar> ChrisWarrick, i see
[21:20:58] <jinsun> ChrisWarrick: yeah I expected dict actually just because I expected magic (otherwise the argument would be useless), but some people think json = json string and expect that
[21:20:59] *** Quits: jay-m1262 (~jay-m@154.72.160.46) (Ping timeout: 246 seconds)
[21:20:59] <elwoodpd> it needs to happen as part of a python function
[21:21:20] <ChrisWarrick> rendar: https://www.ecma-international.org/wp-content/uploads/ECMA-404_2nd_edition_december_2017.pdf
[21:21:27] <grym> (i would also at least consider the silliness factor of doing that in subprocess.run)
[21:21:28] <dob1> I was failing doing my_script.py |jq  I was using r.json() and at last I saw it was not json but as you said to me a dict
[21:21:30] <ChrisWarrick> rendar: “JSON is agnostic about the semantics of numbers. In any  programming language, there can be a variety  of  number  types  of  various  capacities  and  complements,  fixed  or  floating,  binary  or  decimal.  That  can  make  interchange between different programming languages difficult. JSON instead offers only the representation of  numbers that humans use: a sequence of digits. All
[21:21:32] <ChrisWarrick> programming languages know how to make sense of digit  sequences even if they disagree on internal representations. That is enough to allow interchange.”
[21:21:41] <rendar> ok ok, i see
[21:21:48] *** Quits: chele_ (~chele@user/chele) (Remote host closed the connection)
[21:21:54] <rendar> then python when sees all digits in json, takes the entry as an integer
[21:22:26] <ChrisWarrick> rendar: yes
[21:23:02] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[21:23:02] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 240 seconds)
[21:23:20] *** Quits: k_sze (~k_sze@mail2.kalunite.net) (Ping timeout: 260 seconds)
[21:23:49] *** Joins: k_sze (~k_sze@mail2.kalunite.net)
[21:23:51] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[21:24:25] <elwoodpd> I would rather not load Pandas
[21:24:32] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[21:24:36] <elwoodpd> cause I have got away with just csv for now
[21:24:44] <grym> elwoodpd: how big is the file
[21:25:04] <elwoodpd> small ish
[21:25:04] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[21:25:07] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[21:25:36] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (Remote host closed the connection)
[21:25:48] <grym> you can juggle it with a tempfile then, maybe, then read in every line and write out all but the last one
[21:25:50] <deniska> rendar: I like to say that many languages have better json support than js :)
[21:26:09] *** Joins: tobybl (~tobybl@213.31.135.91)
[21:26:15] <rendar> :)
[21:26:23] <rendar> eheh nice
[21:26:25] <deniska> rendar: iirc json standard only tells you what a number looks like, not any specific type it should be deserialized into
[21:26:29] *** Joins: zebrag (~chris@user/zebrag)
[21:26:51] <rendar> indeed
[21:28:35] <causasui> this is why amazon ion is a thing afaik. not necessarily advocating for it tho
[21:30:00] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[21:30:52] *** Joins: cheater (~Username@user/cheater)
[21:31:02] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 240 seconds)
[21:31:04] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[21:31:18] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[21:32:32] *** Quits: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 246 seconds)
[21:32:58] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[21:33:21] <ChrisWarrick> yeah, good luck with that name
[21:33:47] <elwoodpd> grym, will this avoid putting the whole file in memory? https://bpa.st/N36A
[21:34:18] <ChrisWarrick> elwoodpd: does it really need to?
[21:34:55] <elwoodpd> I am not sure tbh
[21:35:19] *** Joins: yaalon (~yaalon@24.243.76.137)
[21:35:26] *** Joins: Viewday12 (~Viewday@user/viewday)
[21:35:33] <elwoodpd> currently the csv is pretty small
[21:36:06] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[21:36:55] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[21:36:59] *** Quits: defn (~n0b0dy@user/defn) (Ping timeout: 264 seconds)
[21:37:11] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-6407-dc09-fb7a-51c4.res6.spectrum.com)
[21:37:13] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[21:37:27] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[21:37:28] *** Viewday12 is now known as Viewday1
[21:37:37] <elwoodpd> But if it is all in memory with that implementation there isn't much point in the temp file right?
[21:38:01] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[21:38:03] *** Joins: fofoni (~fofoni@user/fofoni)
[21:38:21] *** Joins: defn (~n0b0dy@user/defn)
[21:38:41] <jinsun> still safer to write to temp file and rename
[21:39:52] *** Joins: fikran (~fikran@user/fikran)
[21:42:13] *** Joins: Valeria (~Valeria@user/valeria)
[21:43:18] *** Quits: gregoryloscombe (~gregorylo@213.86.15.34) (Quit: WeeChat 3.2)
[21:44:43] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[21:44:59] *** Joins: fofoni_ (~fofoni@user/fofoni)
[21:45:14] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[21:45:32] *** Quits: defn (~n0b0dy@user/defn) (Ping timeout: 240 seconds)
[21:45:47] <han-solo> elwoodpd: https://bpa.st/QWTA # not great, could be broken too ':)
[21:47:09] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[21:47:29] *** Joins: yaalon (~yaalon@24.243.76.137)
[21:49:15] *** Joins: cosimone (~user@93-44-184-123.ip98.fastwebnet.it)
[21:50:00] *** Joins: Omega037 (~Omega037@047-024-168-024.res.spectrum.com)
[21:51:07] *** Joins: pycurious (~Adium@user/pycurious)
[21:51:18] *** Joins: defn (~n0b0dy@user/defn)
[21:51:43] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[21:52:04] *** Joins: jazzy2 (~jaziz@user/jaziz)
[21:52:15] *** Quits: fofoni_ (~fofoni@user/fofoni) (Quit: Leaving)
[21:52:33] *** Joins: Harlin (~DonQixote@75-163-144-60.clsp.qwest.net)
[21:52:40] *** Joins: fofoni_ (~fofoni@user/fofoni)
[21:52:45] *** rapha is now known as Vapha
[21:53:02] *** Quits: fofoni (~fofoni@user/fofoni) (Quit: Leaving)
[21:53:39] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[21:53:53] *** Joins: fofoni (~fofoni@user/fofoni)
[21:54:01] *** Vapha is now known as rapha
[21:54:49] *** Joins: yaalon (~yaalon@24.243.76.137)
[21:56:19] *** Quits: fofoni_ (~fofoni@user/fofoni) (Client Quit)
[21:57:09] <zln> If I create two dict view objects e.g: mykeys = mydict.keys(); myvalues = mydict.values(); is the order in both views the same? Or should I do it in a for loop to get the same order?
[21:57:30] *** Joins: fofoni_ (~fofoni@user/fofoni)
[21:57:32] <grym> zln: they're in the same order, but it sounds like you want `for key, value in mydict.items()`
[21:57:43] <grym> which gives you a key, value tuple over and over
[21:58:33] *** Quits: fofoni (~fofoni@user/fofoni) (Client Quit)
[21:58:34] *** Joins: pgib (~textual@173.38.117.83)
[21:58:36] *** Quits: fofoni_ (~fofoni@user/fofoni) (Client Quit)
[21:59:09] <zln> grym, nice. Yes, that seems like a better idea. But when there is new keys, values added to the dict. Do I need to worry about order of those additions?
[21:59:29] *** Joins: nosoul (nosoul@gateway/vpn/protonvpn/nosoul)
[21:59:54] <zln> I would assume that python would try to make the view objects match the order
[21:59:55] *** Joins: fofoni (~fofoni@user/fofoni)
[22:00:08] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[22:00:19] <zln> with the new additions after the view objects is created
[22:00:32] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[22:01:18] *** Joins: elissparke (~elisspark@pool-96-238-11-235.prvdri.fios.verizon.net)
[22:01:20] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[22:01:49] <grym> zln: as of python 3.7, dict ordering is insertion order
[22:02:12] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[22:02:13] <zln> ah nice. missed that one :) thanks!
[22:02:17] <grym> zln: adding or removing things to an object that you are currently looping over is a bad idea, and i don't recommend it
[22:03:33] <zln> grym: not when looping. I mean if I later in the code add key:value paris to the dictionary, would the existing key viewo object and value view object be in synch regarding the order of new additions
[22:03:46] *** Joins: yaalon (~yaalon@24.243.76.137)
[22:04:21] <grym> zln: oh.  i have absolutely no idea, i don't think i've ever cached a view
[22:04:39] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:04:56] <zln> I thought I could use the view objects to lookup and maybe use one's index to find data at index in the second view object ??? :)
[22:05:22] *** Joins: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com)
[22:05:25] <grym> zln: looks like yes, but https://bpa.st/WLHQ
[22:05:27] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[22:05:33] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[22:05:34] <grym> that's an odd thing i would not have particularly thought to do
[22:05:41] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[22:05:56] <zln> grym: I know, it sounded very odd now when I put it out loud :D
[22:06:02] <elissparke> if anyone has experience with running Python from Windows, I'm not able to figure out why my simple "hello world" doesn't work: https://pastebin.com/1jSxcpAg
[22:06:08] <grym> zln: the whole point of dicts is that you don't do index juggling, though .. if you know the key, just .. ask for the value
[22:06:15] *** Joins: yaalon (~yaalon@24.243.76.137)
[22:06:33] <grym> zln: with either thedict[key] or thedict.get(key, default)
[22:06:36] <elissparke> by running Python from Windows, I mean from inside a wWinMain() win32 program, using run-time linking
[22:06:38] <zln> grym: yeah, sometimes I know the value only
[22:07:00] <flower_> hm psutil not found. Having python 3.9 and 3.10 installed. when I install: python3.10 -m pip install psutil, I get errors
[22:07:14] <mav`rik> Hi all. If anyone has used the gitlab API I could do with a little help. I have a path to a nested project (subgroup-within-subgroup), and I'd like to query the API to return the Project for that. I start at Group level (because I'm only interested in repos under that group). Other than iterating over subgroups this feels painful.
[22:07:15] <grym> zln: [k for k,v in thedict.items() if v==therightvalue]
[22:07:25] <grym> zln: (note that multiple keys can have the same value)
[22:08:20] <grym> so you can't exploit the fact that keyviews are setlike here, i think, because you do need to just check all of them
[22:08:21] <zln> grym: I thought I could skip looping every time for this
[22:08:37] *** Joins: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[22:08:38] <grym> if you want the key(s) that have a given value, i think you can't
[22:08:39] *** Joins: INeedAHandle (~INeedAHan@user/ineedahandle)
[22:08:40] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[22:08:48] <grym> but i could be missing something
[22:09:12] <zln> I see, sounds like I can play around with that a little :)
[22:09:15] <grym> if you know your values are unique, you could make an inverse dict and search _that_
[22:09:24] <zln> ah
[22:09:28] <zln> that sound better
[22:09:46] <grym> inverse = {v:k for k,v in thedict.items()}; inverse[thedictvalue]
[22:09:49] *** Quits: CoolerX (~user@user/coolerx) (Ping timeout: 268 seconds)
[22:09:50] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:09:52] <zln> I'll go with inverse
[22:09:53] *** Joins: jfcaron (~jfcaron@scp-8480-gw1.phys.sfu.ca)
[22:09:55] *** Joins: podeni (~podeni@188.27.129.177)
[22:10:01] <zln> grym: nice! thanks!
[22:10:20] <grym> but this will blow up if: the values in thedict aren't hashable, or, thedict's values are not distinct
[22:11:03] <zln> I see, both keys and values will be unique but I'll keep that in mind.
[22:11:31] <zln> grym: can I somehow keep them unique without manually doing it?
[22:11:46] <podeni> Hi everyone. I have an issue that's been bugging me. I want to get the content of the following URL delenitijfxcu.seashantywisconsin.xyz but because the HTTPS certificate is bugged out, Python keeps throwing out "[SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error". I tried urllib.request.Request and the requests package.
[22:12:02] *** Joins: Viewday18 (~Viewday@user/viewday)
[22:12:10] *** Joins: bloody (~bloody@user/bloody)
[22:12:12] <grym> zln: well, you won't get a choice, but the last one in wins
[22:12:21] *** Joins: ckdCreations (~ckdCreati@147.55.133.142)
[22:12:28] <zln> grym: fair enough :)
[22:13:14] <Swayze> podeni: did u try the solution from stackoverflow?
[22:13:15] <zln> elissparke: if you have the option, use wsl instead
[22:13:42] *** Joins: lethu (~lethu@user/lethu)
[22:13:43] <mefistofeles> ok, I may ask again just in case... what can you do when you have to profile code that runs many iteraations and changes performance in every iteration? So i'd like to spot what's causing the performance loss in the iteration
[22:13:52] *** Quits: lethu (~lethu@user/lethu) (Client Quit)
[22:14:17] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[22:14:17] *** Viewday18 is now known as Viewday1
[22:14:35] *** Joins: emf (~emf@2620:10d:c090:400::5:69be)
[22:14:39] *** Joins: Macuser (~Macuser@216.30.159.201)
[22:15:02] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[22:15:09] <mav`rik> mefistofeles: can you create a different profile output per iteration?
[22:15:11] <elissparke> zln can't, I have a giant win32 program that just needs to run some python
[22:16:01] <podeni> Swayze yes, I tried ctx.verify_mode = ssl.CERT_NONE for urllib.request.Request, and verify=False for requests
[22:16:17] *** Quits: p-i-_ (~Ohmu@2001:44c8:460a:a83c:19b0:c2ce:7a73:2925) (Ping timeout: 264 seconds)
[22:16:23] <elissparke> but this was the simplest example I could come up with, and it still doesn't work. and the documentation isn't that great for Win32 -> PyRun_*
[22:16:25] <mefistofeles> mav`rik: well, that depends on the profiler, doesn't it?
[22:16:26] <Swayze> https://stackoverflow.com/questions/32910093/python-requests-gets-tlsv1-alert-internal-error?lq=1
[22:16:31] <Swayze> these podeni ^
[22:16:31] *** Joins: greentree (~greentree@pool-71-167-6-205.nycmny.fios.verizon.net)
[22:17:09] *** Joins: Matt343 (~Matt343@c-69-181-108-8.hsd1.ca.comcast.net)
[22:17:09] <flower_> `ImportError: cannot import name '_psutil_linux' from partially initialized module 'psutil' (most likely due to a circular import)
[22:17:15] <flower_> hm
[22:17:51] <greentree> how could i get each individual file from a .tar.gz to upload to somewhere
[22:18:09] <zln> elissparke: is it the same problem in the other scenarios? that you cannot see print or is there other errors?
[22:18:09] <podeni> Yes, that as well. But the CLI cURL also has issues with it I see.
[22:18:15] <greentree> just tarfile.getmembers() and for each element use extractfile?
[22:18:16] <grym> greentree: tarfile?
[22:18:40] <zln> elissparke: 0 could be the print return value. Print returns None and prints to the stdout as a side effect
[22:18:45] <greentree> i would just .read() on the file?
[22:18:49] *** Quits: Sario (uid356235@fosshost/cdo/Sario) (Quit: Connection closed for inactivity)
[22:19:07] <zln> elissparke: It could be that you just don't print to right place?
[22:19:10] *** Joins: lethu (~lethu@user/lethu)
[22:19:25] <mav`rik> mefistofeles: okay, in that case perhaps... why profiler are you using that doesn't (for example) allow you to created a new file per call? (follow-on questions include "how are you triggering the profiler?")
[22:19:30] <elissparke> zln: and there's no other visible errors or exceptions or return codes. it's like the string inside PyRun_SimpleString() isn't being run
[22:19:30] <zln> elissparke: or haven't pointed out stdout
[22:19:33] <mav`rik> s/why/which/
[22:20:01] *** Joins: paku (~paku@2409:4070:221c:6d4e:57c:4654:30eb:5d7)
[22:20:02] <elissparke> zln: but the printf() after it works. also I tried doing "open('test', 'w')" instead of the print() and no file is generated either
[22:20:20] *** Parts: novasenco (novasenco@user/nova) (♥☺)
[22:22:56] <mefistofeles> mav`rik: I was trying to do something with this new scalene profiling, because the code is a mix between python and C++/native code
[22:23:11] <mefistofeles> s/profiling/profiler
[22:23:14] *** Parts: Amnesia (~Amnesia@user/amnesia) ()
[22:23:19] <elissparke> zln: I gotta run but I appreciate the help!
[22:23:59] <zln> elissparke: https://cpp.hotexamples.com/examples/-/-/PyRun_String/cpp-pyrun_string-function-examples.html
[22:24:02] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[22:24:19] <zln> have a look at those, I've seen som file io and other things that could help
[22:24:49] <mav`rik> mefistofeles: is the runtime of an individual iteration very short?
[22:25:05] <elissparke> zln: thanks
[22:25:08] *** Quits: elissparke (~elisspark@pool-96-238-11-235.prvdri.fios.verizon.net) (Quit: Client closed)
[22:25:27] <mefistofeles> mav`rik: 1-2 s
[22:25:34] <mefistofeles> not that short
[22:26:01] <mav`rik> mefistofeles: indeed, my initial thought was maybe some kind of sampling issue, but that's much longer than I was thinking
[22:26:01] <mefistofeles> mav`rik: I guess I could try something with cprofile and dumping after every iteration to a file, right?
[22:26:04] *** Joins: SallyAhaj_ (SallyAhaj@user/sallyahaj)
[22:26:26] *** Joins: pycurious (~Adium@user/pycurious)
[22:26:26] <mefistofeles> mav`rik: well, that's the gross iteration, the issue could be in a way shorter and deeper cycle
[22:26:29] *** Quits: pro_z (~pro_z@37.214.56.218) (Ping timeout: 264 seconds)
[22:26:33] <mefistofeles> that's what I have to find out
[22:26:44] <mav`rik> mefistofeles: yeah, I don't see that scalene is something you can wrap or call into directly as you can with some others, which was my initial thought
[22:26:59] *** Joins: yaalon (~yaalon@24.243.76.137)
[22:27:11] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:fcbc:82d8:6a9b:bafd)
[22:27:33] *** Quits: BtbN (btbn@ffmpeg/developer/btbn) (Remote host closed the connection)
[22:28:16] *** Quits: foobaz212 (~foobaz212@88.98.219.238) (Quit: Client closed)
[22:28:27] *** Joins: foobaz212 (~foobaz212@88.98.219.238)
[22:28:35] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Ping timeout: 264 seconds)
[22:28:42] <stewie925> hi guys, is there a way to make a  StringIO comma-delimited text   csv.reader()-readable?
[22:28:55] <grym> stewie925: yes, that should Just Work
[22:29:01] <grym> s/should/does
[22:29:09] *** Quits: paku (~paku@2409:4070:221c:6d4e:57c:4654:30eb:5d7) (Quit: Leaving)
[22:29:15] *** Joins: acegallagher (~Ace@174-16-184-4.hlrn.qwest.net)
[22:29:34] *** Quits: roped (~lonely_@user/roped) (Quit: Leaving)
[22:29:45] *** Quits: justache (~justache@user/justache) (Read error: Connection reset by peer)
[22:30:16] *** Joins: Narrat (~omnius@p200300df5f0ba03406ea56fffe2e7cdc.dip0.t-ipconnect.de)
[22:30:45] <han-solo> if you already have a list of strings in case, csv.reader will take that too, i think
[22:30:53] *** Quits: anonymeowo (~anonymeow@185.213.154.243) (Remote host closed the connection)
[22:31:01] <grym> han-solo: i don't think so but i could be wrong
[22:31:04] *** Joins: justache (~justache@user/justache)
[22:31:14] <stewie925> grym: let me post it on bpast
[22:31:23] *** Joins: BtbN (btbn@ffmpeg/developer/btbn)
[22:31:30] <mav`rik> mefistofeles: you might be able to do something programattically with scalene since it still supports more traditional methods of profiling like https://github.com/plasma-umass/scalene/blob/master/scalene/scalene_profiler.py#L621
[22:31:36] <han-solo> grym: `list(csv.reader(['hello|world|asdfsf', 'sdfsdf|dsf|sdf'], delimiter='|'))` # i was thinking something like that
[22:32:21] <grym> stewie925: https://bpa.st/WRXQ
[22:32:26] <grym> han-solo: ^
[22:32:31] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[22:32:40] <stewie925> han-solo, ok now I see you brought a good point -  I do not have \n in my StringIO lines
[22:32:47] <stewie925> bu I have commas
[22:32:58] <SnoopJ> stewie925, your question would be a lot more answerable if we could see the rest of it
[22:33:02] *** Quits: foobaz212 (~foobaz212@88.98.219.238) (Ping timeout: 256 seconds)
[22:33:05] *** Joins: Viewday18 (~Viewday@user/viewday)
[22:33:10] <han-solo> grym: yeah i meant a list of strings, for some reason
[22:33:31] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: Ping timeout (120 seconds))
[22:33:38] <stewie925> sorry, guys, ok let me copy my code to bpast now... brb
[22:33:52] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[22:34:01] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[22:34:41] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[22:34:41] *** Viewday18 is now known as Viewday1
[22:34:49] *** Joins: foobaz212 (~foobaz212@88.98.219.238)
[22:34:57] <mefistofeles> mav`rik: yeah, I was also trying the scalene_profiler.start() and .stop() but it's not giving me what I expect, sometimes it says the program didn't run long enough
[22:35:05] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[22:35:12] <mefistofeles> mav`rik: trying with cprofile now
[22:35:35] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[22:36:01] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:1d7d:b2a6:bcce:595d)
[22:36:27] <stewie925> oh sorry, guys, I typed in csv.DictReader not csv.reader(). grrrrr
[22:36:55] <stewie925> my bad
[22:37:19] <grym> stewie925: i usually use dictreader anyway
[22:37:23] <grym> it'll work too
[22:37:59] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 246 seconds)
[22:38:25] *** Quits: pigweed (~pigweed@97.119.229.243) (Read error: Connection reset by peer)
[22:38:46] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[22:39:49] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[22:39:50] *** Quits: foobaz212 (~foobaz212@88.98.219.238) (Ping timeout: 256 seconds)
[22:40:53] <stewie925> grym: yeah but it kinda looks ugly -  csv reader returns  `['John', 'Doe', 'one.email.com'], ['Jane', 'Doe', 'two.email.com'] `  while dict reader returns `{ 'None':['John', 'Doe', 'johndoe@bogusemail.com']}, { 'None':['Jane', 'Doe', 'two@email.com'] `
[22:41:19] <stewie925> I mean DictReader output looks ugly...
[22:41:41] *** Joins: yaalon (~yaalon@24.243.76.137)
[22:41:46] <grym> stewie925: no it doesn't https://bpa.st/OVEQ
[22:42:15] <stewie925> thank you grym, let me try yours
[22:42:24] <han-solo> stewie925: can we see the input ?
[22:42:45] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[22:42:50] <grym> stewie925: (you may need to do some massaging, specification of column names, etc.  read the docs and update as required)
[22:43:12] *** Joins: foobaz212 (~foobaz212@88.98.219.238)
[22:43:19] <stewie925> yes Han-solo - here it is https://bpa.st/S2WA - I use dictreader() and I am sure I missed something
[22:43:25] *** Joins: CoolerX (~user@user/coolerx)
[22:43:36] <stewie925> gram, thank you, yes will do that:)
[22:43:45] <stewie925> I mean grym
[22:44:20] *** Quits: DerpGusta_ (~quassel@user/derpgusta) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:45:05] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-7cfd-7535-6a92-0681.res6.spectrum.com)
[22:45:05] *** Quits: Haxxa (~Haxxa@122.199.46.64) (Quit: Haxxa flies away.)
[22:45:07] *** Joins: SallyAhaj__ (~SallyAhaj@user/sallyahaj)
[22:45:08] *** SallyAhaj__ is now known as SallyAhaj
[22:46:01] *** Quits: Inline (~Inline@aftr-37-201-240-235.unity-media.net) (Ping timeout: 250 seconds)
[22:47:13] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:47:17] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[22:47:22] <doc> I've a docker build process using --mount=type=cache which I use to cache packages in pip install. It's working, I'm seeing it using cached packages instead of downloading them. The weird thing is the Dockerfile is using --no-cache-dir on all pip installs (was there when I got here!). Should the cache even be working? Do I have a completely incorrect understanding of --no-cache-dir or what's going on here?
[22:47:32] *** Quits: SallyAhaj_ (SallyAhaj@user/sallyahaj) (Ping timeout: 240 seconds)
[22:47:50] <han-solo> stewie925: ah, you have an extra newline at the start
[22:48:42] <han-solo> also, you don't skip nothing with dict reader, you get the mapping, which is very convenient(at times) i think
[22:49:03] <stewie925> han-solo, yeah I messed up with that one big time :D
[22:49:19] <stewie925> I am looking to write out the "csv_data" to a json file...
[22:49:40] <stewie925> that's my next exercise
[22:49:58] *** Joins: Sario (uid356235@fosshost/cdo/Sario)
[22:50:16] <stewie925> I will giggle and check python links
[22:50:26] <stewie925> s/giggle/google
[22:50:27] <grym> stewie925: so ... https://bpa.st/PO7A
[22:50:29] <mav`rik> stewie925: https://bpa.st/3MQQ covers the issue han-solo raised
[22:50:47] <grym> and then just pathlib.Path(outputjson).write_text()
[22:51:07] <stewie925> oh wow, thank you grym!!!
[22:51:35] <stewie925> tank you mav`rik
[22:51:39] <stewie925> thank you
[22:51:41] <stewie925> can't type
[22:53:35] <mav`rik> Also, in case anyone can help, the gitlab API is causing me grief, if you have experience with it I'd appreciate some help. Most specifically is "if I have a "path" to a project under a top-level group (company name) how do I use the API to get the project (with the given path) under said group?
[22:53:53] <teut> https://bpa.st/PCOQ#1L43   can someone simple that function?
[22:54:08] *** Joins: yaalon (~yaalon@24.243.76.137)
[22:54:10] *** Quits: yaalon (~yaalon@24.243.76.137) (Remote host closed the connection)
[22:54:13] *** Joins: Viewday13 (~Viewday@user/viewday)
[22:54:51] *** Quits: KombuchaKip (~kip@192.252.230.5) (Quit: Leaving.)
[22:55:32] <teut> just need help in removing that   age = 1 or age=3  condition
[22:55:37] *** Joins: upsala (~zcb@185.213.155.252)
[22:55:39] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[22:55:39] *** Viewday13 is now known as Viewday1
[22:56:06] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 276 seconds)
[22:56:17] <teut> I m vectorizing it too
[22:56:40] *** Joins: KombuchaKip (~kip@192.252.230.5)
[22:57:17] <teut> if looks like if is not needed
[22:58:02] *** Quits: Valeria (~Valeria@user/valeria) (Ping timeout: 240 seconds)
[22:59:08] *** Joins: kr0nk (~kr0nk@user/kr0nk)
[22:59:46] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 260 seconds)
[23:00:05] <mav`rik> teut: ugly as sin, but: if age == (1 + (row["Age"] >= old_start_age)) or age == 3:
[23:00:51] <teut> I agree, it was much worse
[23:00:59] <teut> I extracted out two functions
[23:01:09] <mav`rik> teut: oh?
[23:01:16] <teut> but problem is I need to vectorize it
[23:01:34] <teut> idiot guy used pandas but no features of it
[23:02:36] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[23:02:39] <teut> so its done for each row , but I can use vectorized operation to apply on specfic rows
[23:03:15] *** Quits: nomic (~nomic@185.192.69.7) (Quit: Leaving)
[23:04:49] *** Joins: pigweed (~pigweed@97.119.229.243)
[23:05:00] <teut> the 2 ifs below line 42 look awkward
[23:05:07] <teut> since body is same
[23:05:16] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Quit: Ping timeout (120 seconds))
[23:05:26] *** Joins: mimmy (~mimmy@72.142.88.18)
[23:05:44] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[23:06:58] *** Joins: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d)
[23:07:15] *** Joins: d3sync (~d3sync@62.1.63.20.dsl.dyn.forthnet.gr)
[23:08:21] <octav1a> How can I get the list of compiled-in modules for an existing python installation?  Sysadmin didn't compile with SSL and so some stuff didn't work, and he is asking me "what other modules I need". I know at least I need sqlite, but I'm not sure the full list to provide. (basically I want whatever comes with an official linux package distribution)
[23:08:51] <octav1a> I'd like to list it out instead of just saying "everything"
[23:09:44] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Remote host closed the connection)
[23:10:01] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[23:10:36] *** Joins: slav0nic (slav0nic@python.su)
[23:10:46] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[23:11:11] *** Hash is now known as stoned
[23:12:20] <dav1d> octav1a, https://github.com/archlinux/svntogit-packages/blob/packages/python/trunk/PKGBUILD#L59 is that good enough? Archlinux python package
[23:13:13] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 256 seconds)
[23:13:47] <octav1a> dav1d: I see an sqlite in there .. is SSL somewhere?
[23:14:39] <dav1d> no clue, sorry, I personally would have assumed you'd need to disable ssl
[23:14:53] *** Joins: Viewday18 (~Viewday@user/viewday)
[23:15:04] <stewie925> question on file path -   my script is in `~/documents/python/tests ` folder but why is it that when I try to get the `pathlib.Path.cwd() ` it is showing ' /dcuments/python ` and ignores the *testing* subfolder?
[23:15:37] <mav`rik> stewie925: how is it being executed?
[23:16:08] <stewie925> I am using vscode , and I am in debugging mode
[23:16:34] <stewie925> oh let me check something..
[23:16:35] *** Quits: jfcaron (~jfcaron@scp-8480-gw1.phys.sfu.ca) (Quit: Client closed)
[23:16:43] <mav`rik> stewie925: CWD is the current working directory of the python process. If your python shell is being executed at the project level then that would explain it
[23:17:11] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[23:17:11] *** Viewday18 is now known as Viewday1
[23:18:32] <stewie925>  mav`rik: so how do I point to the same folder as my script - "normally" I always have to add `os.path.dirname(__file__)` and then append it to the with open (output file)  command
[23:19:14] <grym> stewie925: Path(__file__).parent.joinpath(outfilename)
[23:19:30] <stewie925> hi grym, thank you
[23:19:43] *** Joins: AsenMx (~AsenMx@user/asenmx)
[23:19:43] <grym> stewie925: but i generally prefer a world where i pass in the location where i want my data placed as a CLI argument
[23:20:03] <grym> (perhaps with a default of "right here!")
[23:20:11] *** Quits: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net) (Ping timeout: 264 seconds)
[23:20:13] *** Quits: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[23:20:30] <stewie925> if there is an easy way to do that hehe, but I'll settle for this for now
[23:20:34] <han-solo> i like the use of '/'` by pathlib :)
[23:20:34] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[23:20:55] <han-solo> so maybe `.parent / outfilename` # :)
[23:21:03] <grym> either's fine
[23:21:26] <han-solo> yeah
[23:21:31] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[23:21:39] *** Quits: Matt343 (~Matt343@c-69-181-108-8.hsd1.ca.comcast.net) (Quit: Client closed)
[23:21:43] <stewie925> gracias :)
[23:21:47] *** Joins: tmart (~tmart@74-194-163-71.bcstcmtk01.res.dyn.suddenlink.net)
[23:22:39] <stewie925> oh wow, the parent did return the subfolder
[23:23:16] <grym> stewie925: pathlib's nice
[23:23:17] <stewie925> 1Path(__file__).parent`
[23:23:22] <stewie925> `Path(__file__).parent`
[23:23:47] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Ping timeout: 264 seconds)
[23:25:01] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:25:56] *** Quits: chatcat (~chatcat@ip-24-53-119-61.user.start.ca) (Read error: Connection reset by peer)
[23:26:56] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[23:27:19] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[23:28:07] <stewie925> yeah, I ve been stuck on os.path so I will now switch to Pathlib from now on :)
[23:28:28] *** Joins: nomic (~nomic@185.192.69.7)
[23:28:54] <grym> it has much to recommend it
[23:29:48] *** Joins: plastico (~plastico@neomutt/plastico)
[23:30:28] <Tas-sos> Hello Python community o/
[23:30:43] <Tas-sos> How can I stop some unittest unexpected ?
[23:31:22] <Tas-sos> For example, I have this tests :
[23:31:23] <Tas-sos> https://github.com/grnet/agora-sp/blob/devel/tests/selenium_tests/agora_unit_tests.py#L31-L33
[23:31:45] *** Joins: mike18_ (~geri@217-149-160-150.nat.highway.telekom.at)
[23:32:03] <mike18_> hi is there a way to tell python test coverage not to measure coverage in the test itself? :)
[23:32:17] <Tas-sos> I want for example if  `ContactFormValidations`  fails to stop all tests!
[23:32:20] <mike18_> im running: coverage run -m pytest -sv ./tests/unit && coverage report
[23:33:22] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:33:45] <mav`rik> mike18_: coverage --omit "test/*"  maybe?
[23:33:55] <mike18_> whats omit?
[23:34:01] *** Joins: chatcat (~chatcat@ip-24-53-119-61.user.start.ca)
[23:34:06] <mav`rik> mike18_: https://coverage.readthedocs.io/en/coverage-4.3.3/source.html#source
[23:34:09] <mike18_> coverage run coverage --omit "test/*" -m pytest -sv ./tests/unit && coverage report ?
[23:34:31] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[23:34:35] <mike18_> i mean: coverage run --omit "test/*" -m pytest -sv ./tests/unit && coverage report
[23:34:54] <mav`rik> mike18_: in your case it'd likely be `--omit "tests/unit/*"` I think, but sure
[23:35:07] <mike18_> entire tests folder?
[23:35:22] <mike18_> i try: coverage run --omit "tests/unit/*" -m pytest -sv ./tests/unit && coverage report
[23:35:36] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[23:35:56] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[23:36:09] <mav`rik> mike18_: failing that you could try `--source whatever_your_package_is_called`
[23:36:17] *** Joins: Viewday17 (~Viewday@user/viewday)
[23:36:41] *** Quits: pgib (~textual@173.38.117.83) (Quit: 00 PC LOAD LETTER)
[23:37:23] <mike18_> looks good!
[23:37:29] *** Joins: rendar (~rendar@user/rendar)
[23:37:36] <mike18_> test coverage dropped to 87% now :D
[23:37:52] *** Quits: Viewday1 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[23:37:52] *** Viewday17 is now known as Viewday1
[23:38:01] *** Quits: jpic (~jpic@82.142.10.150) (Ping timeout: 250 seconds)
[23:38:10] <mav`rik> mike18_: the benefit of using source over omit is that source also tells you about files that weren't exercised at all
[23:38:15] *** Joins: nicode (~nic@2607:f2c0:958a:3d00:6940:c7c1:1805:8798)
[23:38:31] <mike18_> in what sense?
[23:39:17] *** Quits: millido (~millido@84.210.150.128) (Ping timeout: 256 seconds)
[23:39:25] <mav`rik> mike18_: assume you had a module which wasn't imported by any other in your tree, and no test files imported/tested it. Without --source that file wouldn't be considered in the report since it wasn't in the output
[23:39:43] <mike18_> hm
[23:39:55] <mike18_> but i need to manually include all dirs with src...
[23:39:57] *** Joins: jpic (~jpic@82.142.20.182)
[23:39:58] <mike18_> source
[23:40:20] <mav`rik> mike18_: no, just the top level package name, unless I'm misunderstanding your code layout
[23:40:55] <mike18_> i dotn have a single src dir
[23:41:06] *** Quits: mav`rik (~unknown@ec2-54-171-126-99.eu-west-1.compute.amazonaws.com) (Quit: leaving)
[23:41:07] <rendar> let's say i do async requests, each containing a command that a remote process should execute, then i wait json response from the socket.. now the problem is i can get half json from the socket, which i can't parse if its not a full json, how to solve this?
[23:41:16] <mike18_> i have api/api.py with a class api in it ... etc.
[23:41:34] <mike18_> and api/init.py
[23:41:36] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[23:42:05] *** Joins: ano (~ano@user/ano)
[23:42:49] <grawity> I guess buffer it and keep waiting for responses until you get one with some indication of "end of message"? (e.g. connection closed, or '\n', or length prefix)
[23:43:45] *** Joins: mei3 (~mei@user/mei)
[23:46:07] <rendar> grawity, basically i should buffer until { and }
[23:46:12] <rendar> that would represent a json "unit"
[23:46:36] <grawity> hmm if you want to do it this way, look into streaming JSON parsers
[23:46:52] <grawity> e.g. https://github.com/kashifrazzaqui/json-streamer looks like it'd tell you about 'doc_end' when it reaches that last }
[23:47:17] <grawity> but I was actually trying to speak about delimiters that don't require understanding JSON structure
[23:47:22] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[23:47:46] <rendar> yes right
[23:47:54] <rendar> do you think i should have e.g. a \0 delimiter?
[23:48:47] <grawity> maybe? I think that'd work, yes
[23:49:12] *** Joins: fikran (~fikran@user/fikran)
[23:50:02] <grawity> (many protocols use a length prefix, i.e. something like a 4-byte len(message) before each message ... I don't really know which approach is better in your case, I guess a delimiter is easier for the sender but a length prefix is easier for the receiver)
[23:51:42] *** Joins: Viewday15 (~Viewday@user/viewday)
[23:52:41] <deniska> heh, I actually had to deal with "jsons back to back without any delimeter over tcp" some time ago
[23:53:26] <rendar> deniska, lol, and what was your solution?
[23:53:27] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[23:53:27] *** Viewday15 is now known as Viewday1
[23:53:30] <zln> if I am a server, and have two clients and one client wants to send a file to the other. Can I make them to talk to each other directly for transfer instead of forwarding from one to the other
[23:53:36] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[23:53:57] <Swayze> yeah?
[23:54:20] <zln> Swayze: how do I do that, do I send receivers socket to the one that want's to send?
[23:54:33] <deniska> rendar: json module in python has a function which is "parse until you can parse, then return the parsed structure, and the position on which you stopped"
[23:54:35] <grawity> yes, things like VoIP apps do that often, but ... better hope both peers aren't behind firewalls and NATs and other things
[23:54:41] <bparker> ^
[23:54:42] <grawity> otherwise you're in "NAT holepunching" hell
[23:54:46] <Swayze> exactly what grawity is saying
[23:54:59] <grawity> tailscale had an informative article about how annoying that is
[23:55:01] <Swayze> hence proxying through your server is probably 'safest'
[23:55:22] <zln> grawity: it's for testing locally only at this moment. Not for productions or something serious.
[23:55:30] <zln> Just wonder how the process is
[23:55:44] <grawity> oh, and P2P programs like bittorrent, their whole design is based around this of course -- the tracker is the "server" and it tells peers where to find each other
[23:55:59] <zln> ah
[23:55:59] <grawity> with the same issues, port forwarding, NAT etc
[23:56:07] <rendar> deniska, wow! what is this function called? it's exactly what i need
[23:56:14] *** Quits: podeni (~podeni@188.27.129.177) (Ping timeout: 260 seconds)
[23:56:15] <deniska> rendar: anyway, the code I came up with: https://bpa.st/OCLQ
[23:56:25] <Swayze> services like teamviewer and anydesk work 'easily' becoz they proxy dat thru centralized servers
[23:56:32] <Swayze> so they dont need to worry abotu firewalls and nats etc
[23:56:33] <mefistofeles> I guess zln is asking for a "standard" protocol to do this, which I don't think there is, but I don't really know much about these things
[23:56:46] <Swayze> ftp is protocol
[23:56:48] <bparker> IRC has DCC for this purpose
[23:56:49] <grawity> zln: in the ideal world, you ask one client to 'listen' and it tells you its IP adresses (plural, nowadays) and listening port
[23:56:51] <Swayze> you are looking for
[23:56:54] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:fcbc:82d8:6a9b:bafd) (Ping timeout: 256 seconds)
[23:57:10] <grawity> zln: and you forward it to the other client which connects ... indeed IRC's /dcc send  works a lot like that, too
[23:57:10] <bparker> ftp has something similar I think
[23:57:13] <bparker> FXP iirc
[23:57:19] <zln> nah, more about if the way is to send the receivers socket to sender or vice versa and stuff. I'm really beginner
[23:57:21] <grawity> yeah it used to be a thing in FTP
[23:57:31] <mefistofeles> ftp sounds limiting, what if you want to pass messages as well? not just data files
[23:57:42] <Swayze> he didnt ask for that
[23:57:42] <zln> or do I simply send the ip/port as a buffer
[23:57:56] <deniska> rendar: json.JSONDecoder().raw_decode
[23:58:02] <grawity> zln: to make sure, are the two clients both remote (i.e. across the network) or are they local processes (i.e. all on the same machine as you)?
[23:58:14] <zln> grawity: same machine
[23:58:20] <grawity> mefistofeles: did you know email delivery that's now SMTP was originally part of FTP
[23:58:20] <mefistofeles> Swayze: ok true, they mentioned "talk to each other" but it is for file transfer... that's why I thought it was something more general
[23:58:39] <grawity> zln: I mean, is that part of the architecture or is it just "current situation for testing"?
[23:58:40] <bparker> email delivery was originally part of UUCP
[23:58:54] <grawity> bparker: yes but that wasn't what's now SMTP
[23:59:17] <zln> grawity: I'will not extend it to something with remote machines. Just the architecture
[23:59:21] <bparker> either way it makes sense as the text-based protocol is similar
[23:59:24] *** Joins: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com)
[23:59:25] <grawity> zln: ah, okay, that changes things quite a bit then
[23:59:39] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[23:59:44] <Swayze> you would write your own 'server' in the clients that listen too and accept files from other clients
[23:59:49] <zln> grawity: I guess to the better :)
[23:59:56] <Swayze> you could determine the protocol for yourself
[23:59:57] <zln> Swayze:ah
