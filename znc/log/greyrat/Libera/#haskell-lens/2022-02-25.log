[02:52:22] <jackdk> Zemyla: I think dibblego had a package which defined a decimal digit type, with constructors representing zero to nine. You need more than that, though, to avoid some joker representing numbers with a very large pile of initial zeroea
[02:53:26] <dibblego> oh hi
[17:58:00] <Zemyla> :t withPrism _Cons $ \co uc f -> let { go s = case uc s of { Left t -> pure t; Right (a, s') -> liftA2 (curry co) (f a) (go s') } } in go
[17:58:02] <lambdabot> (Cons t1 c t2 b, Applicative f) => (t2 -> f b) -> t1 -> f c
