[00:01:55] *** Quits: nikola2 (~nikola2@93-86-190-207.dynamic.isp.telekom.rs) (Quit: Yaaic - Yet another Android IRC client - http://www.yaaic.org)
[00:02:03] *** Joins: nikola2 (~nikola2@93-86-190-207.dynamic.isp.telekom.rs)
[00:03:40] *** Joins: ecloud (~quassel@192.89.120.58)
[00:11:59] <vandusen> [eggs] remote-mailbox version 1.0.4 (for CHICKEN 5) has been released
[00:21:26] *** Joins: klovett_ (~klovett@mobile-166-137-178-168.mycingular.net)
[00:23:51] *** Quits: klovett (~klovett@mobile-166-137-178-168.mycingular.net) (Ping timeout: 256 seconds)
[01:29:16] *** Joins: klovett (~klovett@mobile-166-137-178-168.mycingular.net)
[01:31:17] *** Quits: klovett_ (~klovett@mobile-166-137-178-168.mycingular.net) (Ping timeout: 256 seconds)
[01:43:39] *** Quits: Zipheir (~wcm@98.4.178.27) (Quit: Eadem mutata resurgo.)
[02:03:21] *** Quits: Soni (~quassel@autistic.space) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[02:05:57] *** Joins: Soni (~quassel@autistic.space)
[02:10:42] *** Joins: seepel (~seepel@c-24-4-200-111.hsd1.ca.comcast.net)
[02:22:41] *** Joins: klovett_ (~klovett@166.205.90.177)
[02:24:54] *** Quits: klovett (~klovett@mobile-166-137-178-168.mycingular.net) (Ping timeout: 260 seconds)
[03:13:44] *** Joins: monkey_ (~user@190.104.116.153)
[03:32:33] *** Quits: andyjpb (~andyjpb@user/andyjpb) (Ping timeout: 256 seconds)
[03:48:02] *** Quits: simonwo (~simonwo@cpc160097-nmal26-2-0-cust8.19-2.cable.virginm.net) (Remote host closed the connection)
[03:48:56] *** Joins: Zipheir (~wcm@98.4.178.27)
[03:52:10] *** Quits: fantazo (~fantazo@192-164-154-92.hdsl.highway.telekom.at) (Ping timeout: 260 seconds)
[03:57:02] *** Joins: rgherdt (~rgherdt@2a02:8109:86c0:d8d:e097:ace:b6b8:a6c1)
[04:42:29] *** Joins: d4 (~d4@151.51.135.32)
[04:42:38] *** Parts: d4 (~d4@151.51.135.32) ()
[04:42:58] *** Joins: wxallowed (~d4@151.51.135.32)
[04:46:57] <vandusen> "wxallowed" pasted "Macro bug" http://paste.call-cc.org/paste?id=ddec55164049d6449773aca88b8f68f0238b65a1
[04:47:11] <wxallowed> Hello I have this problem ^
[04:49:10] <wxallowed> I have a macro and [ (0) don't know how to debug it ] (1) symbols doesn't get unwrapped from my macro like it doesn't get evaluated
[04:57:23] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 264 seconds)
[04:58:44] *** Quits: rgherdt (~rgherdt@2a02:8109:86c0:d8d:e097:ace:b6b8:a6c1) (Remote host closed the connection)
[04:59:01] *** Joins: rgherdt (~rgherdt@2a02:8109:86c0:d8d:e097:ace:b6b8:a6c1)
[05:04:12] <dieggsy> wxallowed: i haven't carefully looked at your code but for (0), ,x or (expand ... ) can help debug macros
[05:04:29] <dieggsy> so at the repl: ,x (bundle ...) or (expand '(bundle ...))
[05:04:55] <dieggsy> this shows what the macro is expanding into
[05:06:51] <wxallowed> Thank you that helps me seeing that (bundle foo (quote bar)) => (quote (bundle foo bar))
[05:12:39] <wxallowed> Adding a special rule for quote makes it work. So (1) doen't apply. (2) How can I avoid writing every special case for things like quote, define, let and so on in my macro?
[05:15:59] *** Quits: rgherdt (~rgherdt@2a02:8109:86c0:d8d:e097:ace:b6b8:a6c1) (Ping timeout: 264 seconds)
[05:40:34] <vandusen> [eggs repo (r40906, by kon)] most functor interface procedures are to be pure, more specific types
[05:46:05] *** Joins: s-liao (~s-liao@101.86.103.113)
[05:48:50] *** Quits: klovett_ (~klovett@166.205.90.177) (Quit: ZZZzzz…)
[05:58:37] *** Joins: klovett (~klovett@166.205.90.177)
[06:38:11] *** Quits: s-liao (~s-liao@101.86.103.113) (Quit: Ping timeout (120 seconds))
[06:42:35] *** Joins: s-liao (~s-liao@101.86.103.113)
[07:45:54] *** Quits: s-liao (~s-liao@101.86.103.113) (Ping timeout: 256 seconds)
[09:16:26] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[09:28:27] *** Joins: ublx (~ublx@user/ublx)
[09:30:01] <vandusen> [eggs repo (r40907, by kon)] revert levenshtein
[09:35:06] *** Quits: mononote (~mononote@user/mononote) (Ping timeout: 245 seconds)
[09:49:58] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:41b0:6e8:d3fa:5cea)
[09:49:58] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:41b0:6e8:d3fa:5cea) (Changing host)
[09:49:58] *** Joins: skapata (~Skapata@user/skapata)
[09:52:07] *** Joins: clacke (88d96f2df3@knopi.disroot.org)
[10:10:50] <vandusen> "freee" pasted "freeeee" http://paste.call-cc.org/paste?id=14bd05135fa4ec56b7f1ca77b82859488fd66ff7
[10:10:50] <judybot> vandusen: spam 14bd05135fa4ec56b7f1ca77b82859488fd66ff7
[10:10:51] <vandusen> judybot: I have deleted 1 paste(s) with hash 14bd05135fa4ec56b7f1ca77b82859488fd66ff7 successfully.
[10:11:53] <vandusen> [eggs] levenshtein version 2.1.1 (for CHICKEN 5) has been released
[10:17:37] *** Quits: ecloud (~quassel@192.89.120.58) (Quit: No Ping reply in 180 seconds.)
[10:18:50] *** Joins: ecloud (~quassel@192.89.120.58)
[10:22:49] *** Quits: nikola2 (~nikola2@93-86-190-207.dynamic.isp.telekom.rs) (Ping timeout: 256 seconds)
[10:22:59] <vandusen> [eggs repo (r40908, by kon)] more specific types, fix functor cost vs fixnum issues, add flonum cost tests
[10:23:45] <vandusen> [eggs repo (r40909, by kon)] rel 2.1.2
[10:40:36] *** Joins: fantazo (~fantazo@192-164-154-92.hdsl.highway.telekom.at)
[10:52:31] *** Joins: s-liao (~s-liao@101.86.101.64)
[10:52:42] *** Joins: retropikzel (~retropikz@dsl-trebng22-54f932-93.dhcp.inet.fi)
[11:02:22] *** Parts: retropikzel (~retropikz@dsl-trebng22-54f932-93.dhcp.inet.fi) (Leaving)
[11:06:30] *** Quits: s-liao (~s-liao@101.86.101.64) (Ping timeout: 256 seconds)
[11:11:46] <vandusen> [eggs] levenshtein version 2.1.2 (for CHICKEN 5) has been released
[11:18:38] <vandusen> [eggs repo (r40910, by kon)] remove TBD (done), move support module into own file
[11:18:54] *** Quits: ublx (~ublx@user/ublx) (Quit: ublx)
[11:19:03] *** Joins: ublx (~ublx@user/ublx)
[11:19:37] *** Quits: ublx (~ublx@user/ublx) (Client Quit)
[11:19:58] *** Joins: ublx (~ublx@user/ublx)
[11:42:50] *** Joins: mononote (~mononote@user/mononote)
[11:45:17] *** Joins: s-liao (~s-liao@101.86.101.64)
[11:48:25] <vandusen> "freee" pasted "freeeee" http://paste.call-cc.org/paste?id=916bb705c5d15fd69e283ef89ce3f2e083cdde87
[11:48:25] <judybot> vandusen: spam 916bb705c5d15fd69e283ef89ce3f2e083cdde87
[11:48:26] <vandusen> judybot: I have deleted 1 paste(s) with hash 916bb705c5d15fd69e283ef89ce3f2e083cdde87 successfully.
[11:48:55] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[12:13:45] *** Quits: ublx (~ublx@user/ublx) (Quit: ublx)
[12:24:15] *** Joins: retropikzel (~retropikz@dsl-trebng22-54f932-93.dhcp.inet.fi)
[13:00:04] *** Joins: rgherdt (~rgherdt@2a02:8109:86c0:d8d:e097:ace:b6b8:a6c1)
[13:19:08] *** Quits: fantazo (~fantazo@192-164-154-92.hdsl.highway.telekom.at) (Read error: Connection reset by peer)
[13:29:21] *** Quits: rgherdt (~rgherdt@2a02:8109:86c0:d8d:e097:ace:b6b8:a6c1) (Remote host closed the connection)
[13:51:51] *** Joins: nikola2 (~nikola2@93-86-190-207.dynamic.isp.telekom.rs)
[13:55:56] *** Quits: s-liao (~s-liao@101.86.101.64) (Ping timeout: 256 seconds)
[14:13:36] *** Joins: s-liao (~s-liao@101.86.101.64)
[14:16:51] *** Quits: klovett (~klovett@166.205.90.177) (Ping timeout: 256 seconds)
[14:24:02] *** Quits: mangol (~mangol@lisp.fi) (Quit: leaving)
[14:26:22] *** Joins: s-liao21 (~s-liao@101.86.101.64)
[14:27:48] *** Quits: s-liao (~s-liao@101.86.101.64) (Quit: Client closed)
[14:51:50] *** Joins: rgherdt (~rgherdt@2a02:8109:86c0:d8d:f999:7dbf:ab48:5803)
[15:26:23] *** Joins: retropikzel_ (~retropikz@83-245-249-67-nat-p.elisa-mobile.fi)
[15:29:11] *** Quits: retropikzel (~retropikz@dsl-trebng22-54f932-93.dhcp.inet.fi) (Ping timeout: 264 seconds)
[15:37:55] *** Quits: s-liao21 (~s-liao@101.86.101.64) (Quit: Client closed)
[15:46:52] *** Joins: s-liao (~s-liao@101.86.101.64)
[15:53:03] *** Quits: retropikzel_ (~retropikz@83-245-249-67-nat-p.elisa-mobile.fi) (Remote host closed the connection)
[15:53:22] *** Joins: retropikzel_ (~retropikz@83-245-249-67-nat-p.elisa-mobile.fi)
[16:05:08] *** Quits: s-liao (~s-liao@101.86.101.64) (Ping timeout: 256 seconds)
[16:15:03] *** Joins: retropikzel (~retropikz@83-245-249-67-nat-p.elisa-mobile.fi)
[16:17:11] *** Quits: retropikzel_ (~retropikz@83-245-249-67-nat-p.elisa-mobile.fi) (Ping timeout: 264 seconds)
[16:18:36] *** Quits: retropikzel (~retropikz@83-245-249-67-nat-p.elisa-mobile.fi) (Remote host closed the connection)
[16:19:08] *** Joins: retropikzel (~retropikz@83-245-249-67-nat-p.elisa-mobile.fi)
[16:30:59] *** Quits: retropikzel (~retropikz@83-245-249-67-nat-p.elisa-mobile.fi) (Ping timeout: 264 seconds)
[16:32:32] *** Joins: retropikzel (~retropikz@dsl-trebng22-54f932-93.dhcp.inet.fi)
[16:45:01] *** Quits: oneofvalts (~oneofvalt@2001:19f0:6c01:2d9c:5400:2ff:fea2:a386) (Quit: çal paranı, al da gel, sen d'oyna!)
[16:45:15] *** Joins: oneofvalts (~oneofvalt@2001:19f0:6c01:2d9c:5400:2ff:fea2:a386)
[17:04:33] *** Joins: s-liao (~s-liao@101.86.101.64)
[17:49:32] *** Joins: monkey_ (~user@190.104.116.153)
[17:53:42] *** Quits: s-liao (~s-liao@101.86.101.64) (Quit: Client closed)
[20:08:46] *** Joins: sjors (~sjors@64-56-178-143.ftth.glasoperator.nl)
[20:09:40] <sjors> Hello! I'm trying to compile my Scheme code to a DLL on Windows and call its functions from C. The DLL produced by the compiler doesn't come with a header. How should I call the functions in the DLL? Thank you
[20:12:27] <wasamasa> you'll have to write your own header file documenting the API in any case
[20:12:56] <wasamasa> and probably more stuff, like using define-external
[20:13:43] <sjors> Ah I see, I think I can manage. Thank you
[20:13:52] <wasamasa> or using embedded mode or whatever
[20:14:00] <sjors> I was hoping there was a way to generate the header file based on what was defined with define-external
[20:14:28] <wasamasa> it's normal for C programmers to write their own header files
[20:15:13] <sjors> I've done something like this before in Unity. It offered a way to write just the function signature and then use [DllImport("librarynamehere")] above it. That was very nice
[20:15:29] <sjors> But I think I can figure out how to do it here as well
[20:15:51] <sjors> Thanks again
[20:15:57] <wasamasa> is that equivalent to using foreign-lambda and linking to the file in question?
[20:16:38] <sjors> I haven't used foreign-lambda before. The Unity example just finds the DLL function based on the signature, so you can call it from C#
[20:17:42] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:60e3:f790:778c:1e41)
[20:17:42] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:60e3:f790:778c:1e41) (Changing host)
[20:17:42] *** Joins: skapata (~Skapata@user/skapata)
[20:18:21] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[20:18:46] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:60e3:f790:778c:1e41)
[20:18:46] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:60e3:f790:778c:1e41) (Changing host)
[20:18:46] *** Joins: skapata (~Skapata@user/skapata)
[20:30:11] *** Joins: klovett (~klovett@166.205.90.177)
[20:43:19] <sjors> Should I call anything in particular before accessing my DLL functions? Right now it just crashes my program when I call one.
[20:50:13] <wasamasa> embedded mode, lol
[20:50:35] <sjors> What do you mean by that?
[20:50:38] <wasamasa> I'd expect you need to call CHICKEN_initialize and so on
[20:50:40] <wasamasa> http://wiki.call-cc.org/man/5/Embedding
[20:50:57] <wasamasa> you cannot just run scheme code from C
[20:51:06] <wasamasa> you need to do a minimum of initialization first
[20:51:48] <Bunny351> sjors: look for CHICKEN_initialize in the manual, you init the Scheme runtime before your exposed define-external's can be called
[20:52:34] <sjors> I see
[20:52:45] <sjors> I thought it was only necessary if you wanted to run arbitrary commands in a hosted REPL
[20:53:19] <sjors> This makes more sense, thanks again
[20:55:42] <Bunny351> you're welcome. if you have trouble geting things to work, just ask here
[20:57:14] <sjors> I appreciate it!
[21:00:55] <sjors> So I can run Scheme logic in my application now (with CHICKEN_eval_string), but calling the method I imported from my DLL (imported with GetProcAddress and called like a C function Foo();) still crashes the program
[21:04:38] <sjors> Maybe I should not use CHICKEN_default_toplevel when calling CHICKEN_run
[21:20:30] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[21:20:58] <sjors> I think I found the right resource for this: https://wiki.call-cc.org/man/5/Units%20and%20linking%20model . Thanks for all the help
[21:25:37] *** Joins: monkey_ (~user@190.104.116.153)
[21:32:36] *** Quits: mononote (~mononote@user/mononote) (Ping timeout: 245 seconds)
[21:45:42] *** Quits: sjors (~sjors@64-56-178-143.ftth.glasoperator.nl) (Ping timeout: 256 seconds)
[22:25:30] *** Joins: sjors (~sjors@64-56-178-143.ftth.glasoperator.nl)
[22:44:32] *** Joins: johnjay (~pi@192.142.100.50)
[22:49:48] *** Joins: mangol (~mangol@lisp.fi)
[22:54:13] <sjors> How should DLLs compiled from Scheme code be used? Are they supposed to be loaded with (load "library.dll")?
[23:00:51] *** Quits: klovett (~klovett@166.205.90.177) (Quit: ZZZzzz…)
[23:03:32] <wasamasa> vandusen: doc load
[23:03:33] <vandusen> (load FILE [EVALPROC])  http://api.call-cc.org/doc/eval/load
[23:03:33] <vandusen> (load filename)  http://api.call-cc.org/doc/scheme/load
[23:03:33] <vandusen> (load  filepath) → sdl2:surface  http://api.call-cc.org/doc/sdl2-image/load
[23:04:05] <wasamasa> > On platforms that support it (currently BSD, Haiku, MacOS X, Linux, Solaris, and Windows), load can be used to load shared objects.
[23:06:56] <sjors> OK, I am able to load the shared object. Now I'd like to call this method: (define-external (foo (c-string x)) int (string-length x)) . Taken from the documentation. Is there an example of how this is done?
[23:07:13] <sjors> Calling the method foo from the CSI just causes it to freeze
[23:31:01] <wasamasa> that's for calling from C
[23:31:55] <wasamasa> like, suppose you have foreign code that takes a function pointer, you could pass foo to it
[23:33:16] <sjors> In that case, do you still need to load with CHICKEN_load?
[23:33:54] <wasamasa> no idea what you plan to do really
[23:36:24] <sjors> I'd like to program a video game. My video, audio and input is handled by an SDL program in C, but I want my game rules to be written in Chicken Scheme. I'm trying to find the best way to query data from the Chicken Scheme library, which I suspect must be by calling methods defined with (define-external).
[23:36:53] <johnjay> sjors: sounds cool!
[23:38:04] <sjors> johnjay: I think so too :)
[23:38:19] <wasamasa> you'll probably be happier doing it the other way around and using as much scheme as possible
[23:38:47] <wasamasa> or using a scheme with a better embedding story
[23:39:10] <johnjay> wasamasa: i thought chicken was the best scheme. for like c things
[23:39:35] *** Joins: mononote (~mononote@user/mononote)
[23:40:02] <sjors> wasamasa: I think that could work here. I didn't think of that, because earlier I tried something like this in an existing engine and it wasn't possible to have Chicken call functions from that engine
[23:40:24] <wasamasa> there's a blog post from the hypergiant author explaining that strategy
[23:41:14] <johnjay> this one? https://news.ycombinator.com/item?id=18647562
[23:41:20] <sjors> To be exact: I was looking for a way to run C# code in Unreal Engine. The only way I could do it was to host the CLR inside a DLL
[23:41:45] <sjors> Thanks, I will try this approach
[23:41:57] <wasamasa> johnjay: yeah, appendix A
[23:43:38] <sjors> I don't want to write my SDL logic in Chicken, so I will just do that in a C dll and define foreign functions to call in the Scheme application
[23:45:01] <sjors> That poses its own challenges of course, but I'll give it a shot
[23:45:09] <sjors> Thanks again
[23:45:49] <wasamasa> another question is why you'd want a function that can be both called from C and scheme
[23:46:00] <wasamasa> they have different ideas about how they're called
[23:46:15] <johnjay> wasamasa: apparently 6 was an attempt to make scheme fully real-world power like common lisp but it created a lot of conflict
[23:46:35] <johnjay> i'm not sure what scheme's niche is. but it's somewhere between educational and industrial i guess
[23:47:57] <sjors> wasamasa: I actually only wanted the function to be callable from C, but it should be able to read and return data from the Scheme application
[23:48:13] <johnjay> wasamasa: ah ok he's saying that you should do the whole thing in scheme, then just implement the slower parts in C on an ad hoc basis
[23:48:30] <wasamasa> sjors: I don't see the problem with that, these external functions are written in scheme after all
[23:48:38] <sjors> Basically the Scheme application runs all the game logic, and the C application gives user feedback and takes input
[23:49:22] <sjors> wasamasa: My problem is that I couldn't get the function to work. It always crashed my application if I tried to call it from C
[23:49:46] <sjors> And the documentation / examples are rather sparse
[23:49:58] <Bunny351> sjors: so you either have the main prg in C and call externals in a Scheme DLL or write the core in Scheme and do UI in C.
[23:50:20] <wasamasa> yes, as I was alluding earlier, the embedding story is a far less explored road 
[23:50:22] <sjors> Bunny351: I tried the first approach and got stuck. The second approach might work
[23:50:29] <Bunny351> if you embed scheme in C, then you don't load the DLL with scheme's load, you do LoadlLibrary, etc.
[23:50:56] <Bunny351> ok, the 2nd is probably simpler, just do all interactions with the graphics/event subsystem in foreign-lambdas
[23:51:19] <sjors> LoadLibrary and GetProcAddress with a typedef. In this case: typedef int (*Foo)(char* input); I think. But calling it always crashed so I guess I didn't initialize Chicken or something
[23:51:37] <wasamasa> same with windows
[23:54:06] <sjors> I read I should do: CHICKEN_run(C_toplevel); but C_toplevel is undefined. I'm having trouble understanding the typedef signature of C_toplevel in the generated C code (it uses things like c_noret)
[23:54:37] <wasamasa> don't forget to #include "chicken.h"
[23:54:44] <sjors> I have
[23:54:54] <sjors> Because CHICKEN_run is defined and works
[23:55:00] <sjors> if I use the default toplevel
[23:55:22] <Bunny351> how did you compile the DLL? C_toplevel should be defined. or did you use "(declare (unit ...))"?
[23:55:38] <sjors> csc -dll -embedded library.scm
[23:55:45] <sjors> which produces library.so
[23:55:54] <sjors> if I use the -k flag I can see the C code
[23:56:08] <sjors> I did not use the declare unit
[23:56:38] <sjors> But library.so does not come with a header, so I guess I have to load it manually and provide a typedef for C_toplevel
[23:57:48] <sjors> In the generated code:
[23:57:48] <sjors> C_noret_decl(C_toplevel)
[23:57:49] <sjors> C_externexport void C_ccall C_toplevel(C_word c,C_word *av) C_noret;
[23:59:38] <Bunny351> looks good
[23:59:56] <johnjay> wasamasa: that hypergiant blog post is awesome. it has a link to a tutorial on arcsynthesis.org which doesn't exist anymore but is in archive.org
