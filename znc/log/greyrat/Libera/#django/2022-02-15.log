[00:02:48] *** Quits: sliss (~sliss@109.136.165.60) (Quit: sliss)
[00:03:25] *** Joins: sliss (~sliss@109.136.165.60)
[00:05:40] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[00:10:10] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[00:10:57] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[00:15:48] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 240 seconds)
[00:17:58] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[00:22:56] *** Quits: sliss (~sliss@109.136.165.60) (Quit: sliss)
[00:23:30] *** Joins: sliss (~sliss@109.136.165.60)
[00:29:43] *** Quits: wyre (~wyre@user/wyre) (Quit: ZNC 1.8.2 - https://znc.in)
[00:31:37] *** Joins: wyre (~wyre@user/wyre)
[00:34:14] *** Quits: dor (~erg@188.147.1.86.nat.umts.dynamic.t-mobile.pl) (Remote host closed the connection)
[00:43:03] *** Quits: sliss (~sliss@109.136.165.60) (Quit: sliss)
[00:43:40] *** Joins: sliss (~sliss@109.136.165.60)
[00:46:08] *** Quits: ekathva (~ekathva@n3k05e951yzy0eo5x-1.v6.elisa-mobile.fi) (Quit: Leaving)
[00:54:22] *** Quits: kristijonas (~kristijon@81-7-103-234.static.zebra.lt) (Ping timeout: 272 seconds)
[01:03:11] *** Quits: sliss (~sliss@109.136.165.60) (Quit: sliss)
[01:03:45] *** Joins: sliss (~sliss@109.136.165.60)
[01:05:24] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 252 seconds)
[01:08:28] *** Joins: kristijonas (~kristijon@81-7-103-234.static.zebra.lt)
[01:11:28] *** Quits: kristijonas (~kristijon@81-7-103-234.static.zebra.lt) (Remote host closed the connection)
[01:23:13] *** Quits: Nightelf (~Nightelf@156.213.138.244) (Read error: Connection reset by peer)
[01:23:18] *** Quits: sliss (~sliss@109.136.165.60) (Quit: sliss)
[01:23:54] *** Joins: sliss (~sliss@109.136.165.60)
[01:35:06] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Read error: Connection reset by peer)
[01:37:08] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[01:42:26] *** Joins: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it)
[01:43:26] *** Quits: sliss (~sliss@109.136.165.60) (Quit: sliss)
[01:43:59] *** Joins: sliss (~sliss@109.136.165.60)
[01:49:02] *** Joins: audiobirb (~audio@user/audio)
[01:54:04] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[01:56:01] *** Joins: Atque (~Atque@user/atque)
[01:56:58] *** Quits: sliss (~sliss@109.136.165.60) (Quit: sliss)
[02:16:18] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[02:22:35] <schinckel> serafeim: There’s a typo in that blog post: it says `—quit` where I think it should be `—quiet`
[02:23:18] *** Quits: henbruas (~henbruas@ti0003a400-2412.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[02:24:17] *** Joins: henbruas (~henbruas@ti0003a400-2412.bb.online.no)
[02:33:57] *** Joins: Kalov (~Thunderbi@181.226.96.240)
[02:35:52] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[02:45:26] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[02:48:27] *** Parts: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it) ()
[02:51:01] <FunkyBob> morning, schinckel
[02:56:19] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[02:58:02] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[02:59:39] <schinckel> Morning!
[03:07:30] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 252 seconds)
[03:28:36] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 240 seconds)
[03:34:42] *** Quits: rb (~augh@theguntretort.com) (Ping timeout: 250 seconds)
[03:38:03] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[03:40:04] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[03:42:12] *** Joins: rwb (~augh@209.141.39.190)
[03:43:55] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[03:44:05] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[03:44:38] *** Joins: djapo (~archangel@user/djapo)
[03:44:53] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[03:45:25] <dodobrain> schinckel, you around ?
[03:49:11] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[03:52:43] <schinckel> Yeah.
[03:56:22] <dodobrain> i'm playing around with row level security
[03:56:36] <dodobrain> have some questions for you :)
[03:58:57] <FunkyBob> oop, here comes fun :)
[04:01:10] <dodobrain> lol..
[04:01:32] <FunkyBob> I did some work with RLS a few years ago, too...
[04:01:37] <dodobrain> so i'm thinking of writing middleware to change roles based on requests. is this a bad way doing things?
[04:02:14] <schinckel> It’s probably reasonable. That’s how I did it with django-occupation (and with django-boarding-house).
[04:02:19] <FunkyBob> we set the DB to not persist between requests, and a middleware to set the role on connection
[04:02:30] <FunkyBob> just to be extra sure
[04:02:32] <dodobrain> i'm thinking of say a long running request that makes many many db calls via the orm for roleA, then in the middle of this process happenning, a request for roleB comes in thats super short and very quick. this changes the role to roleB
[04:02:57] <dodobrain> do the future remaining db calls for the previous request now end up using roleB ?
[04:03:12] <FunkyBob> each request should have its own DB connection
[04:03:14] <schinckel> We use session pooling (rather than transaction/statement pooling) for setting postgres variables in a middleware that we use for audit logs.
[04:03:15] <dodobrain> because i dont know how the orm handles "sessions" or "connections"
[04:03:18] <FunkyBob> and so its own connection state
[04:03:34] <dodobrain> FunkyBob, its not new connection per request
[04:03:40] <FunkyBob> dodobrain: I know
[04:03:44] <FunkyBob> doesn't change what I said
[04:03:58] <FunkyBob> if you have two requests in parallel, t hey will have their own connections
[04:04:08] <dodobrain> own connections to the db ?
[04:04:10] <schinckel> (And then the “end” of the middleware resets those pg variablies)
[04:04:12] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[04:04:19] <FunkyBob> yes, own connection to the DB
[04:04:45] <dodobrain> isn;t it better to have a reusable connection pool to postgres ?
[04:04:51] <dodobrain> i thought the django orm will do this
[04:06:59] <dodobrain> schinckel, you had some blog article or something right?
[04:07:01] * dodobrain looks
[04:07:25] <schinckel> https://schinckel.net/2017/12/20/django-multitenancy-using-postgres-row-level-security/
[04:08:02] <FunkyBob> dodobrain: not sure about with async... but with threads, django will keep one connection PER THREAD
[04:08:12] <schinckel> The big caveat is that was only an experiment - I’ve not used in in production.
[04:08:16] <FunkyBob> so each request will reuse that connection... and not share it with any concurrent requests
[04:08:40] <schinckel> FunkyBob has used RLS as a partitioning tool in production - but I don’t think that was as multi-tenancy.
[04:09:49] <dodobrain> i'm doing it for multi-tenancy and also using django-organizations
[04:28:16] <dodobrain> schinckel, would you deploy rls in prod or would you rather simply have multiple deployments per tenant/thingo or would you implement the segregation/filtering in the app
[04:28:31] <dodobrain> same question to FunkyBob as well. specifically for multi-tenancy
[04:28:43] <FunkyBob> as always, "it depends"
[04:28:54] <FunkyBob> don't know enough about your use case to advise one way or t'other
[04:30:22] <dodobrain> the use case is that we have an app working in prod and we are adding support for "organizations" and we want to be able to provide some assurances about data access security between "admins" of different organizations
[04:31:11] <dodobrain> either can be rls so db does the filtering or can be app level where we do the filtering or we dont change anything but have multiple deployments for each oprganization
[04:31:46] <FunkyBob> do you have any need for cross-realm queries?
[04:32:12] <FunkyBob> if not, you're likely better off with separate instances
[04:32:43] <dodobrain> the last one requires a lot more work on the infra automation scripts and deciding on how we will have developers able to work and test out multiple orgs
[04:56:45] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[04:57:28] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[05:01:48] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[05:23:06] *** Quits: slavfox (~slavfox@93.158.232.111) (Quit: ZNC 1.8.2 - https://znc.in)
[05:23:56] *** Joins: slavfox (~slavfox@93.158.232.111)
[05:34:33] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:38:37] *** Quits: Throgkt (~Throgkt@user/throgkt) (Ping timeout: 250 seconds)
[05:40:58] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:43:48] *** Quits: henbruas (~henbruas@ti0003a400-2412.bb.online.no) (Ping timeout: 240 seconds)
[05:44:37] *** Joins: henbruas (~henbruas@ti0003a400-2412.bb.online.no)
[05:47:57] *** Quits: cyphase (~cyphase@user/cyphase) (Ping timeout: 240 seconds)
[05:50:29] *** Joins: audio (~audio@user/audio)
[05:51:32] *** Joins: Throgkt (~Throgkt@user/throgkt)
[05:53:55] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:01:33] *** Quits: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net) (Ping timeout: 256 seconds)
[06:07:29] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:11:01] *** Joins: cyphase (~cyphase@user/cyphase)
[06:19:08] *** Quits: schinckel (uid38120@id-38120.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[06:21:06] *** Joins: ubernostrum (~jbennett@75-37-202-116.lightspeed.snmtca.sbcglobal.net)
[06:34:28] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Ping timeout: 272 seconds)
[06:39:06] *** Quits: svedrin (~quassel@tiamat.funzt-halt.net) (Quit: https://quassel-irc.org - Komfortabler Chat. Überall.)
[06:39:21] *** Joins: svedrin (~quassel@tiamat.funzt-halt.net)
[06:47:44] *** Joins: rob4226 (~Thunderbi@154.6.25.127)
[06:56:38] *** Quits: lucascastro (~lucascast@192-140-51-251.static.oncabo.net.br) (Ping timeout: 272 seconds)
[06:56:44] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[06:57:03] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[06:57:57] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 240 seconds)
[06:58:30] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 252 seconds)
[06:58:38] *** Joins: cliluw (~cliluw@47.147.73.223)
[07:20:06] *** Quits: Kalov (~Thunderbi@181.226.96.240) (Quit: Kalov)
[07:23:10] *** Quits: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net) (Quit: Bye.)
[07:41:17] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[07:49:50] *** Quits: sreve_ (~quassel@p549d73fe.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[07:50:05] *** Joins: sreve (~quassel@p4ff44d01.dip0.t-ipconnect.de)
[08:16:26] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 272 seconds)
[08:40:03] *** Joins: pepper (~pepper@user/pepper)
[08:45:37] *** Joins: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[08:46:38] *** Joins: rusrushal13 (~rusrushal@103.85.18.34)
[08:56:44] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[08:56:47] *** Joins: schinckel (uid38120@id-38120.ilkley.irccloud.com)
[08:57:10] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[08:59:12] *** Joins: ekathva (~ekathva@n3k04mk1g2jsn5ncy-1.v6.elisa-mobile.fi)
[09:07:00] *** audio is now known as audiofreeze
[09:22:13] *** Quits: cowsay-moo (~cowsay-mo@2001:1b60:1010:3:1015:7287:79e8:85d8) (Ping timeout: 250 seconds)
[10:00:03] *** Joins: mattil (~mattil@87-92-28-123.bb.dnainternet.fi)
[10:00:05] *** Quits: mattil (~mattil@87-92-28-123.bb.dnainternet.fi) (Remote host closed the connection)
[10:05:38] <serafeim> hello friends
[10:05:47] <serafeim> schinckel: thank you!
[10:11:41] <serafeim> i was finally able to understad why django 4.x f*cked  my csrf
[10:12:13] <serafeim> in django 4.x you need to set CSRF_TRUSTED_ORIGINS and CSRF_COOKIE_DOMAIN. these options *were not needed* in django 3.x
[10:12:28] <serafeim> of course the good people in django *DO NOT* mention that at all in the release notes
[10:12:57] <serafeim> so i was searching f*cking hay for some hours. thank you django people for the great update notes
[10:13:03] <serafeim> you f me good
[10:15:57] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[10:16:27] <serafeim> here's the note in the release notes: https://docs.djangoproject.com/en/4.0/releases/4.0/#configuring-it-may-now-be-required
[10:17:21] <serafeim> look at the wording: > As CSRF protection now consults the Origin header, you may need to set CSRF_TRUSTED_ORIGINS, particularly if you allow requests from subdomains by setting CSRF_COOKIE_DOMAIN (or SESSION_COOKIE_DOMAIN if CSRF_USE_SESSIONS is enabled) to a value starting with a dot.
[10:19:05] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Client Quit)
[10:19:52] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[10:28:20] *** Joins: mattil (~mattil@87-92-28-123.bb.dnainternet.fi)
[10:28:28] *** Quits: mattil (~mattil@87-92-28-123.bb.dnainternet.fi) (Remote host closed the connection)
[10:30:46] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:37:00] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[10:38:19] *** Quits: dkliban (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net) (Read error: Connection reset by peer)
[10:39:06] *** Joins: dkliban (~dkliban@99-3-68-61.lightspeed.rlghnc.sbcglobal.net)
[10:49:20] *** Joins: ekathva_ (~ekathva@n3k06ap29nlro92ao-1.v6.elisa-mobile.fi)
[10:49:28] *** Quits: ekathva_ (~ekathva@n3k06ap29nlro92ao-1.v6.elisa-mobile.fi) (Remote host closed the connection)
[10:56:47] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Remote host closed the connection)
[10:57:17] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[11:04:42] *** Joins: sliss (~sliss@109.136.165.60)
[11:04:44] *** Quits: audiofreeze (~audio@user/audio) (Read error: Connection reset by peer)
[11:11:57] *** Quits: nathanhi (~nathanhi@user/nathanhi) (Quit: bye)
[11:13:11] *** Joins: nathanhi (~nathanhi@user/nathanhi)
[11:16:07] *** Joins: mrwick (~mrwick@user/mrwick)
[11:19:18] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Remote host closed the connection)
[11:24:34] *** Quits: sliss (~sliss@109.136.165.60) (Quit: sliss)
[11:25:11] *** Joins: sliss (~sliss@109.136.165.60)
[11:28:19] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[11:29:15] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[11:32:27] *** Joins: pycode (~pycode3@2001:b07:5d28:551:644b:594a:36b3:4be)
[11:37:00] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 240 seconds)
[11:38:12] *** Quits: llanhmod (~developer@user/domhnall/x-2887755) (Quit: leaving)
[11:45:26] *** Joins: pepper (~pepper@user/pepper)
[11:48:23] *** Joins: LordKalma_ (~LordKalma@server.ruilvo.com)
[11:48:29] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Read error: Connection reset by peer)
[11:50:45] *** LordKalma_ is now known as LordKalma
[11:51:31] *** Quits: mrwick (~mrwick@user/mrwick) (Quit: Lost terminal)
[11:52:05] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[11:55:49] *** Joins: teut (~teut@122.161.83.81)
[11:58:52] *** Joins: neilbags (~neilbags@103.77.233.53)
[12:00:42] *** Joins: dor (~erg@188.147.1.86.nat.umts.dynamic.t-mobile.pl)
[12:05:09] <neilbags> Hey all, I'm pretty new to django, this is my second project and I need an audit log of changes to my models. This is a case/client management system which will have around 10 users - mysql database, drf, and a react frontend. Single developer.  I don't need to be able to roll-back or anything - may need to display historical changes at some point. Looking for something simple that isn't going to bite me. I can see a few projects like
[12:05:10] <neilbags> django-simple-history, django-reversion, and django-audit-log. Are there any others I should be considering, has anyone got any experience/thoughts on this, or suggestions of questions I should be asking myself when choosing?
[12:07:05] *** Quits: teut (~teut@122.161.83.81) (Quit: Client closed)
[12:08:52] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[12:09:14] *** Joins: mrwick (~mrwick@user/mrwick)
[12:11:34] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[12:27:21] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:27:46] <gordonjcp> neilbags: whichever one netbox uses seems to work well
[12:28:14] <gordonjcp> neilbags: I don't know what's going on inside netbox, but you could probably find out
[12:31:07] *** Joins: luigibu (~luigi@93.176.155.54)
[12:32:45] *** Joins: Kohe (~Kohe@46.12.76.236.dsl.dyn.forthnet.gr)
[12:33:42] *** Joins: rob4227 (~Thunderbi@45.131.195.118)
[12:35:00] *** Quits: rob4226 (~Thunderbi@154.6.25.127) (Ping timeout: 240 seconds)
[12:35:00] *** rob4227 is now known as rob4226
[12:46:47] *** Joins: sandeepk (~sandeepk@223.130.30.23)
[12:48:30] *** Quits: oisota (~oisota@user/oisota) (Quit: Ping timeout (120 seconds))
[12:48:40] *** Joins: oisota (~oisota@user/oisota)
[12:50:09] *** Joins: explore (uid233125@id-233125.hampstead.irccloud.com)
[12:50:52] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[12:57:47] *** Quits: MiguelX413 (~MiguelX41@108-195-200-9.uvs.frokca.sbcglobal.net) (Ping timeout: 256 seconds)
[13:02:54] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[13:03:32] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[13:06:39] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[13:06:55] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[13:07:19] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[13:24:53] *** Quits: pycode (~pycode3@2001:b07:5d28:551:644b:594a:36b3:4be) (Ping timeout: 250 seconds)
[13:53:14] *** Joins: ashwanig (~ashwani@2405:201:8017:d811:9afe:f69a:8f87:7a85)
[13:53:46] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[13:54:17] <ashwanig> Hi everyone, I am reading up about how emails work behind the scenes. Curious to know if anyone has worked with SMTP protocols and managing SMTP connections while sending emails. Is using a connection pool in djagno good idea while sending mass emails concurrently?
[14:09:45] *** Joins: szymon (~ugh@37.120.211.198)
[14:19:19] <FunkyBob> ashwanig: when you say concurrently...
[14:19:30] <FunkyBob> how many processes do you expect to be sending mail at once?
[14:19:55] <FunkyBob> I tend to use a local mail queue, so the web process can hand of the message asap, then leave it to the queue to deal with calling about, resending, etc etc
[14:28:49] <ashwanig> FunkyBob, yes I am specifically talking about the process after the mail object is in queue. I have not figured out how many processes is needed but what I am thinking is to scale the workers as in needed based on availability
[14:30:11] <ashwanig> lets say at one go I am trying to send 1M emails. Now I want to divide these emails into batches for worker processes to consume and send mails
[14:31:47] <ashwanig> My thought is I can create a SMTP connection pool and share this among workers. Is this approach any good?
[14:32:11] *** Joins: humanBird (~humanBird@098-148-010-232.res.spectrum.com)
[14:33:00] *** Quits: cliluw (~cliluw@47.147.73.223) (Ping timeout: 240 seconds)
[14:33:05] <ashwanig> My current implementation actually sends X emails in batch (lets say 100). In that I am opening and closing SMTP manually. Looking for some advice to improve this architecture
[14:33:25] *** Joins: cliluw (~cliluw@47.147.73.223)
[14:33:59] <ashwanig> Also if there's a single failure in a batch, it affects all recipients in the batch.
[14:41:05] <humanBird> i'm looking at the structure of the biostars django app.  i'm seeing a nginx.conf and a uwsgi.ini.  i assume these are the files i need to modify to get django app to talk to the uwsgi server, which talks to the nginx server, which talks to the docker container, which talks to the host, which talks to whatever there is on some web hosting
[14:41:06] <humanBird> environment in AWS, which talks to the outside world?
[14:41:40] <humanBird> i'm not sure where to start with deplying to prod.
[14:41:56] <humanBird> i think i need some sort of kubernetes stuff too
[14:42:38] <GinFuyou> Is not point of docker is that you don't need to touch any configs inside of it?
[14:43:03] <ashwanig> humanBird, this might help https://docs.djangoproject.com/en/4.0/howto/deployment/
[14:43:28] <humanBird> i'm also reading that the database should be in it's own docker container as well.  not sure how django config will talk to it
[14:44:44] <GinFuyou> What are you actually are trying to do?
[14:47:40] <humanBird> dockerize the biostars forum project for deployment on something like aws/digital ocean/linode etc etc etc
[14:48:17] <humanBird> it's using uwsgi.  there's also nginx  conf files in this structure but i'm not sure if it's using nginx or not when i python manage.py runserver
[14:48:36] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[14:50:39] <humanBird> so far i've been able to get a alpine conda linux image to install GCC so i can pip install stuff and copy the django project folder into the image.  but now what?  where you go?  executing a python manage.py runserver doesn't seem like it would do much and also the database needs to live somewhere else for better decoupling/replication/load
[14:50:40] <humanBird> balancing. seems very complicated
[14:51:02] <humanBird> i'm not really a sysadmin
[14:55:21] <ashwanig> humanBird, You can spend some time reading about how a django app is deployed and how to deploy using uWSGI/docker/nginx. You will slowly get hang of it. Django docs is a great starting point
[14:56:57] <GinFuyou> I also find docker too complicated even though it tries to make things easier, it does it in some weird ways
[14:56:59] <serafeim> for starters, dont use wsgi
[14:57:02] <serafeim> for starters, dont use Uwsgi
[14:57:05] <serafeim> use gunicorn
[14:57:09] <humanBird> i'm reading .  it feels like a lot of complications to deal with right now heh.  nginx in it's own container talking to multiple containers of uwsgi  talking to  the app talking to multiple containers of database
[14:57:47] <humanBird> This project uses uwsgi.  i don't even know where all the parts oft he uwsgi live in this project
[14:58:08] <GinFuyou> gunicorn vs uwsgi wouldn't be that much of a simplification. Yeah, it's easier, but if you already have a config...
[14:58:17] <humanBird> it's going to take weeks for me to figure out how to rip uwsgi out and put gunicorn in
[14:58:51] <GinFuyou> well, no, it's a drop-in replacement
[14:59:30] <humanBird> in any case, what actually happens when you python manage.py runserver?  sounds liek there's a lot of magic in setting up some local server behind the scenes.
[14:59:46] <serafeim> yes you can even run them in parallel... you just change where nginx points to
[15:00:15] <humanBird> i don't think it sets up a nginx proxy that somehow delivers to gunicorn/uwsgi/wsgi/whatever  which then talkst o django and goes back the other way
[15:02:42] <GinFuyou> humanBird, runserver just runs a built-in dev-only wsgi server
[15:03:13] <GinFuyou> and autoreloader if you don't opt out of it, that's all
[15:04:29] <humanBird> sounds like i would need to explicitly start wsgi, nginx, and postgres all separately in production then with some "orchestration" tool.  And then based on some config files, it'll know to start serving django functionality?
[15:07:01] <GinFuyou> Well, typically "orchestration tool" is the systemd
[15:07:16] <humanBird> https://docs.docker.com/samples/django/  heh.  "don't use the built in dev server".  The docker docs are giving me an example of a docker setup using dev server.   isnt' the point of docker to productionize?
[15:07:56] <GinFuyou> but in case of docker, e.g. wsgi can be entry point for docker running, at least it's what I've seen
[15:10:45] *** Quits: lithium_sulfate (~li2so4@sr388.sophieversum.net) (Quit: .)
[15:12:08] <dang`r`us> with docker you'd probably use docker-compose or whatever its successor is
[15:12:33] <dang`r`us> or, if you want to get fancy, do it kubernetes style (but I think that's massive overkill for most deployments)
[15:12:55] <humanBird> ok. i think i have a better idea of what should be done.  uwsgi/wsgi/gunicorn on same container as django file project directory.  have the final command of container start wsgi server with exposed http ports so the containers can talk to each other.  Do similar steps with postgres container and nginx.    Nginx will be the thing actually
[15:12:55] <humanBird> exposed to the web browser
[15:13:19] <humanBird> I read somewhere that docker-compose is local host only and kubernetes is for networked containers.
[15:13:53] <humanBird> and that docker swarm is obsolete and not maintained
[15:14:26] <humanBird> then i got sidetracked into "12 point apps" and a whole bunch of other stuff trying to get the background on docker. it's very complicated
[15:14:53] <dang`r`us> 12factor?
[15:15:06] <dang`r`us> 12factor is (typically) good practice
[15:15:22] <dang`r`us> but it can be a lot trying to take every aspect of django deployment in at once
[15:16:01] *** Quits: sliss (~sliss@109.136.165.60) (Quit: sliss)
[15:16:11] <humanBird> i went to the 12-factor site and their copyright date is 2017.  then i start researching more and people are saying it should be more like 19 factor because thigns are missing
[15:16:16] <dang`r`us> anyway, you can use docker-compose in production too
[15:16:23] <humanBird> and then i decided that this is not useful for me to read about and stopped
[15:16:42] *** Joins: sliss (~sliss@109.136.165.60)
[15:16:57] *** Joins: lithium_sulfate (~li2so4@sr388.sophieversum.net)
[15:20:41] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[15:22:12] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 240 seconds)
[15:24:51] *** Joins: pepper (~pepper@user/pepper)
[15:25:29] <humanBird> apparently, biostars django project is using a makefile which has a functio called "forum_deploy" which uses ansible
[15:27:36] <humanBird> ok.  so instead of kubernetes i gotta use ansible.  and replace their ansible directions like uwsgi: init that calls uwsgi-http: 8000    with the appropriate docker container setup calls
[15:31:01] *** Quits: szymon (~ugh@37.120.211.198) (Remote host closed the connection)
[15:32:24] *** Joins: F40PH (~david@d54C34DA5.access.telenet.be)
[15:38:19] <humanBird> i need a break.. turns out i still need to use kubernetes to deploy this app.  And i need to learn ansible now too because it's "configuration management" versus "container infrastructure management".
[15:40:51] *** Joins: teut (~teut@122.161.83.81)
[15:41:26] <dang`r`us> that's quite a handfull
[15:42:17] <serafeim> l o l
[15:42:25] <serafeim> is this app so complex ?
[15:42:28] <serafeim> why use all this crap ?
[15:42:35] <serafeim> docker, kubernytes what the f ?
[15:42:46] <serafeim> these are useless junk
[15:42:57] <teut> thats required for microservices
[15:43:06] <serafeim> lol i don't think so
[15:44:49] *** Quits: ekathva (~ekathva@n3k04mk1g2jsn5ncy-1.v6.elisa-mobile.fi) (Quit: Leaving)
[15:45:14] <humanBird> i wish there was a guide like the old elementary school song Dem Dry Bones.  It would be a lot easier than me ctrl + shift +f through code to find out where everything starts and gets connected
[15:45:59] <humanBird> apparently in this project, it starts with a make file.
[15:47:02] *** Joins: pycode (~pycode3@2001:b07:5d28:551:d2f4:e1ff:7758:267)
[15:48:19] <humanBird> makefile -> ansible file -> server-migrate.sh is the thing that actually migrates the data in django... no "python manage.py migrate --whatever"
[15:57:13] <F40PH> Is there a way in the django template to define a block without outputting it directly?
[15:57:24] <F40PH> I'm passing it to an include as a parameter
[15:57:56] <F40PH> now it shows up twice of course, because I'm also outputting the parameter in the included template
[15:59:08] *** Quits: schinckel (uid38120@id-38120.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[16:03:04] <GinFuyou> F40PH, not sure, what are you trying to achieve?
[16:06:22] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 272 seconds)
[16:07:34] *** Joins: lucascastro (~lucascast@192-140-51-251.static.oncabo.net.br)
[16:07:40] <F40PH> Trying to make a "section" component, which would accept a "title" parameter (single line of text), but also a "body" parameter (multiline text)
[16:08:49] <GinFuyou> sounds like an included template or django-sniplates widget
[16:12:15] <F40PH> Here's a concrete example of what I'm trying to do: https://dpaste.org/s66i
[16:14:45] *** Quits: pycode (~pycode3@2001:b07:5d28:551:d2f4:e1ff:7758:267) (Ping timeout: 250 seconds)
[16:18:11] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[16:18:38] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Client Quit)
[16:34:26] *** Joins: st46k (~st46k@103.88.2.85)
[16:36:48] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[16:39:46] *** Quits: explore (uid233125@id-233125.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[16:44:16] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:45:05] *** Joins: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net)
[16:45:07] *** Quits: stats4647 (~stats4647@ip174-67-220-13.oc.oc.cox.net) (Client Quit)
[16:47:09] *** Quits: st46k (~st46k@103.88.2.85) (Quit: Client closed)
[17:14:43] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[17:19:48] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Quit: Bin weg.)
[17:22:06] *** Joins: pycode (~pycode3@2001:b07:5d28:551:5267:7e42:40a7:19d1)
[17:23:31] *** Joins: explore (uid233125@id-233125.hampstead.irccloud.com)
[17:24:29] <explore> hey
[17:25:20] <explore> is possible to have main site in django, but say the api server be done in another language? Rust/Go or something, but the session info/cookies from Django carry over to the API servers? how does that work? mebbe there's a tutorial on this? >.<
[17:25:49] <apollo13> sure, there is nothing special about that
[17:26:05] <explore> so if you log into Django server, as long as you haven't explicitly logged out, your access to a Rust api server would continue to work
[17:26:07] <apollo13> the api server just needs to validate the session id from the django storage (ie the db)
[17:26:23] <explore> cooool
[17:26:26] <apollo13> [depending on whatever is configured as session store]
[17:26:41] <explore> i am not very tech savvy, has someone done a walk through or something like that?
[17:27:03] <explore> not sure how to google for this
[17:32:16] <apollo13> no idea, but it really isn't more than taking the value from the cookie and verifying it
[17:32:21] <explore> mebbe something like "Django session integration"
[17:32:27] <explore> ok ok
[17:33:29] <apollo13> there might be, dunno
[17:33:45] *** Joins: cowsay-moo (~cowsay-mo@2a04:9dc0:0:200:1016:bd22:cab9:ccc9)
[17:42:00] <explore> mebbe what i need is something called Oauth? not familiar w/ it
[17:43:25] <GinFuyou> no, you don't need it
[17:45:00] *** Quits: humanBird (~humanBird@098-148-010-232.res.spectrum.com) (Quit: Client closed)
[17:46:31] *** Quits: pipapipapibo (~w@c-24-17-130-228.hsd1.wa.comcast.net) (Remote host closed the connection)
[17:55:58] <explore> mebbe i'll scour stackoverflow a bit, i am searching "django session" and django integration"
[17:58:06] <explore> gosh this OAuth doohickey looks useful, i'll learn it too
[17:58:22] <explore> but you right right, i mean if i can just undress the session cookie, just do that
[17:58:28] <explore> r right
[17:58:51] <explore> as long as the session sekrits matches what's in teh db, it's kosher
[18:04:34] *** Joins: theprophet (~theprophe@212.58.102.155)
[18:06:59] <theprophet> since, i am learning django i am making and delleting and then starting over many django projects and apps, to be more familliar, so my following question is, i am using a text editors like, pycharm and visual studio code,, so everytime i am doing this i am creating a folder for the particular project and create everything there, what i dont get it
[18:07:00] <theprophet> is , me doing that is wrong? cause is making a folder in my computer mannually is same thing as creating virtual env?
[18:07:11] *** Quits: rusrushal13 (~rusrushal@103.85.18.34) (Ping timeout: 256 seconds)
[18:07:33] <theprophet> or its not?
[18:08:46] <sheepman[m]> A virtual env is more than just a folder, it's got a bunch of stuff in it that the venv module creates
[18:09:05] <sheepman[m]> If you're using pycharm, though, it should create and activate virtualenvs for you
[18:09:41] <theprophet> sheepman[m] yes pycharm does.
[18:10:31] <theprophet> sheepman[m]  vsc does not?
[18:10:55] <sheepman[m]> honestly, I don't know, I don't use it
[18:11:10] <theprophet> which do you use?
[18:11:17] <sheepman[m]> well, that's kinda a lie, I edited powershell in it once but I don't use it for python
[18:11:23] <sheepman[m]> Pycharm all the way
[18:11:49] <sheepman[m]> Pycharm Professional has really, really good django support and will do autocomplete for template tags and such
[18:12:06] <sheepman[m]> If you're just getting started, I don't know that it's worth the money, but it's pretty cool
[18:12:14] <theprophet> sheepman[m] do you had to memorize the shell commands for venv?
[18:12:16] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: leaving)
[18:12:40] <theprophet> i cant, i am really poor , cant afford to pay things like that.
[18:12:45] <sheepman[m]> I did memorize the shell commands for venv, but not for pycharm :P
[18:13:06] <sheepman[m]> That's very fair. Pycharm Community edition is also very good
[18:13:10] <LordKalma> vscode does manage venvs pretty well
[18:13:24] <LordKalma> if you're using a lot of django projects created at the same time, you don't need a local env
[18:13:30] <LordKalma> you can use a system-wide env manager
[18:13:36] <LordKalma> for example I have a conda environment for django
[18:13:43] <theprophet> when  creating, project in pycharm i see venv in the name. but i am not sure if vsc has it too
[18:13:49] <LordKalma> albeit now I just use docker, it's really the best experience
[18:13:55] <LordKalma> theprophet, yeah, not that integration, afaik
[18:14:48] <theprophet> LordKalma for what do you use docker for?
[18:15:20] <theprophet> that second for is uneccessary
[18:15:30] <theprophet> is docker also a venv?
[18:15:33] <LordKalma> to have a very very nice and easy development and deployment environment
[18:15:37] <LordKalma> no, docker is a container system
[18:15:56] <LordKalma> think mini-VMs, but not actual VMs :p
[18:16:03] <theprophet> whats vms?
[18:16:09] <LordKalma> virtual machine
[18:16:11] <LordKalma> nevermind :)
[18:16:12] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[18:16:12] <theprophet> ah
[18:16:15] <theprophet> gotcha
[18:17:42] <theprophet> LordKalma if i use vsc, and i install django for example, where is it installed in the folder, where i started project or somewhere else?
[18:21:01] <LordKalma> that depends on how you manage your environment
[18:21:20] <LordKalma> there are like systems that create a local python executable alongside your project
[18:21:25] <LordKalma> that might be what pycharm does, no idea
[18:21:36] <LordKalma> and you can also just `pip install django` globally
[18:21:40] <theprophet> yes thats what pycharm does
[18:21:48] <LordKalma> or use any other of the 324234 environment management systems there are
[18:22:03] <theprophet> LordKalma so if i install django globally, where does it automaticly install?
[18:22:15] <LordKalma> in your system's python
[18:22:20] <theprophet> i see
[18:22:26] <LordKalma> django-admin startproject isn't related to actually installing django
[18:22:47] *** Joins: crumpo (~crumpo@user/crumpo)
[18:22:55] <theprophet> yes , that i know, i just have different questions, non related too.
[18:23:01] <theprophet> ok, thank you
[18:28:20] <crumpo> Is it possible to delete keys from a JSONField with the ORM? E.g. if I have a `json_data` JSONField and some of my model instances have `json_data` looking like `{prop: "something", ...}` is there a simple way I can remove the `prop` key for all instances in a queryset?
[18:29:04] <crumpo> Ideally I'd like to take those `prop` values and store them in e.g. a CharField before deleting them. I'd love to know if this can be done concisely, without multiple update() calls.
[18:34:43] *** Joins: thiras (~thiras@user/thiras)
[18:50:12] *** Quits: neilbags (~neilbags@103.77.233.53) (Ping timeout: 252 seconds)
[18:51:06] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[18:55:10] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[18:58:03] *** Joins: pipapipapibo (~w@50.239.254.186)
[18:58:45] *** Joins: READ10 (~dallan@user/read10)
[18:59:39] *** Quits: luigibu (~luigi@93.176.155.54) (Quit: WeeChat 3.4)
[19:32:54] *** Quits: teut (~teut@122.161.83.81) (Quit: Client closed)
[19:34:04] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[19:34:13] *** Joins: xkuru (~xkuru@user/xkuru)
[19:34:43] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[19:36:22] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[19:45:44] *** Quits: theprophet (~theprophe@212.58.102.155) (Quit: Client closed)
[19:53:24] *** Quits: ashwanig (~ashwani@2405:201:8017:d811:9afe:f69a:8f87:7a85) (Ping timeout: 240 seconds)
[19:58:50] *** Quits: merrinx (~merrinx@ti0028a400-1685.bb.online.no) (Quit: WeeChat 3.3)
[19:59:37] *** Joins: merrinx (~merrinx@ti0028a400-1685.bb.online.no)
[20:09:32] *** Quits: sliss (~sliss@109.136.165.60) (Quit: sliss)
[20:10:08] *** Joins: sliss (~sliss@109.136.165.60)
[20:15:09] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[20:17:39] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Ping timeout: 252 seconds)
[20:18:50] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) (Client Quit)
[20:19:09] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[20:21:24] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 240 seconds)
[20:35:58] *** Quits: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Quit: Ping timeout (120 seconds))
[20:36:09] *** Joins: zuQe85 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[20:39:46] *** Quits: explore (uid233125@id-233125.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[21:00:10] <merrinx> Need some expertise, making a testcase for login a user. But getting a bad response: HttpResponseRedirect objects has no attribute data
[21:00:28] <merrinx> https://dpaste.com/4KFJ9Z836
[21:00:39] <merrinx> line 48
[21:01:16] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:03:41] <dodo> merrinx: .data is a drf thing, is it not? not django
[21:03:53] *** Joins: Xof (~Xof@157-131-136-66.dedicated.static.sonic.net)
[21:04:15] <merrinx> then to assert i just check if redirected?
[21:04:41] <dodo> depends on what you want to test :)
[21:04:52] <merrinx> it the user get logged in on the site
[21:05:02] <dodo> generally speaking, i wouldn't test a core view
[21:05:10] <merrinx> ah ok
[21:05:50] <dodo> but, you'd want to test that the user is actually logged in i guess
[21:05:55] <merrinx> yes
[21:06:18] <dodo> contrib.auth must have tests for that, i'd read them..
[21:06:56] *** Quits: sandeepk (~sandeepk@223.130.30.23) (Quit: Leaving)
[21:08:11] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[21:08:34] <merrinx> ok, i checked if the user got redirected as set in settings, then if tru then i know he is logged inn
[21:08:38] <merrinx> true**
[21:09:14] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[21:09:26] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[21:12:24] *** Quits: sliss (~sliss@109.136.165.60) (Quit: sliss)
[21:13:01] *** Joins: sliss (~sliss@109.136.165.60)
[21:13:17] *** Joins: newdimension (~newdimnes@user/newdimension)
[21:17:54] *** rwb is now known as rb
[21:23:23] *** Quits: Harlin (~DonQixote@75-163-174-136.clsp.qwest.net) (Quit: Leaving)
[21:25:35] *** Joins: teut (~teut@122.161.83.81)
[21:30:48] *** Quits: pipapipapibo (~w@50.239.254.186) (Remote host closed the connection)
[21:39:14] *** Joins: explore (uid233125@id-233125.hampstead.irccloud.com)
[21:55:58] *** Quits: thiras (~thiras@user/thiras) (Remote host closed the connection)
[21:56:23] *** Joins: thiras (~thiras@user/thiras)
[22:02:52] <merrinx> Got the user test working, trying to create test for the employee class , but keep failing on assertion equal
[22:03:00] <merrinx> https://dpaste.com/9XNX5R22T
[22:03:06] <merrinx> that is the test case and the models is
[22:03:12] <merrinx> https://dpaste.com/7LGSG3HLZ
[22:03:18] <merrinx> if anyone can look at it
[22:04:45] <crumpo> I would avoid `Employee.objects.get(user_id=1)`
[22:05:05] <merrinx> how to get the id then?
[22:05:08] <crumpo> If other tests run before this, they could create another user and so self.user would have a different ID
[22:05:20] <crumpo> Instead, you can do `Employee.objects.get(user=self.user)`
[22:05:30] <merrinx> i am running the specific employee tests
[22:05:45] <merrinx> python3 manage.py tests employees
[22:05:54] <merrinx> then should not the user test not be run?
[22:06:47] <crumpo> The test will run
[22:06:57] <merrinx> ah, ok what do i do instead?
[22:07:10] <crumpo> Try Employee.objects.get(user=self.user)
[22:07:34] <crumpo> I don't know what your specific error is so perhaps this isn't the solution. It's just something else to think about
[22:08:12] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[22:08:22] <merrinx> AssertionError: <django.db.models.fields.AutoField: employee_id> != 'employee_id'
[22:08:31] <merrinx> that is when i use user=self.user
[22:12:39] *** Quits: lucascastro (~lucascast@192-140-51-251.static.oncabo.net.br) (Read error: Connection reset by peer)
[22:13:05] *** Joins: lucascastro (~lucascast@192-140-51-251.static.oncabo.net.br)
[22:13:12] *** Quits: sliss (~sliss@109.136.165.60) (Quit: sliss)
[22:14:52] <crumpo> What are you trying to test here?
[22:15:42] <merrinx> if the employee is getting created
[22:15:55] <merrinx> then just verify that with employee id is set
[22:17:49] <crumpo> OK, I don't think it's necessary to test that the employee is being created - you're testing Django code that is already well tested
[22:18:29] <crumpo> But if you really want to check the employee exists, you can do Employee.objects.filter(user=self.user).exists(), for example
[22:19:36] *** Joins: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com)
[22:19:46] <LuxuryMode> I have added my web app's domain to `CORS_ALLOWED_ORIGINS` in my Django settings, but I'm still seeing errors that request was `blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource` Any ideas on what else I might need to do here? I do have nginx in front of the Django app and thought maybe the issue exists at the nginx level, but I can see that requests are going through and reaching
[22:19:46] <LuxuryMode> the Django server and I assume they wouldn't if nginx itself was blocking the CORS request
[22:21:49] <merrinx> crumpo: that also works :D
[22:21:51] <merrinx> thanks
[22:27:53] <ktosiek> LuxuryMode: do you see an Origin header in the request? Are you using django-cors-headers? Do you have any other CORS_* settings?
[22:29:45] <LuxuryMode> ktosiek: There is an origin header in the request, yes. I am using django-cors-headers.
[22:30:12] <LuxuryMode> Very strange, the request works now. I am wondering if some previous containers were still running and my changes hadn't been fully rolled out.
[22:30:13] *** Joins: x_kuru (~xkuru@user/xkuru)
[22:32:36] <b-rex> is there a way to get a queryset of all objects through a relationship e.g. a model Attachment has a ManyToMany with Message, which has a ForeignKey to Channel, and I want to get all the Channels related to the Attachment through every Message it is related to?
[22:33:30] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 252 seconds)
[22:33:42] <LuxuryMode> ktosiek: but other settings include: `CORS_ALLOWED_ORIGINS`, `CORS_ALLOW_CREDENTIALS`, `CORS_ALLOW_HEADERS` and one I just added `CORS_ALLOWED_ORIGIN_REGEXES`
[22:41:06] <LuxuryMode> ktosiek: very strange, back to failing intermittently. Getting a 502 with "CORS Missing Allow Origin error"
[22:41:43] *** Quits: pycode (~pycode3@2001:b07:5d28:551:5267:7e42:40a7:19d1) (Ping timeout: 250 seconds)
[22:43:03] *** Quits: lucascastro (~lucascast@192-140-51-251.static.oncabo.net.br) (Remote host closed the connection)
[22:47:00] *** Joins: lucascastro (~lucascast@192-140-51-251.static.oncabo.net.br)
[22:56:06] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[22:59:15] *** Joins: blackout69 (~blackout6@net-31-156-121-253.cust.vodafonedsl.it)
[23:02:14] *** Quits: newdimension (~newdimnes@user/newdimension) (Remote host closed the connection)
[23:03:30] <ktosiek> 502? Is that a crash inside your app? I'm not sure if django-cors-headers adds CORS headers to 5xx responses
[23:05:46] *** Quits: READ10 (~dallan@user/read10) (Quit: WeeChat 3.4)
[23:17:41] *** Joins: pidroid8 (~pidroid@user/pidroid)
[23:19:38] *** Quits: pidroid (~pidroid@user/pidroid) (Ping timeout: 260 seconds)
[23:19:38] *** pidroid8 is now known as pidroid
[23:22:08] <LuxuryMode> Good question ktosiek I'm not sure why Firefox says 502 and CORS error.
[23:22:35] <LuxuryMode> One time there definitely was a server error...OSError can not allocate memory...the request is a file upload.
[23:22:56] <LuxuryMode> But other times I saw the same 502/CORS combo even without an error on the server.
[23:29:08] *** Quits: dor (~erg@188.147.1.86.nat.umts.dynamic.t-mobile.pl) (Remote host closed the connection)
[23:31:48] <ktosiek> LuxuryMode: have you checked nginx logs? Maybe there's a problem between the proxy and your app.
[23:33:21] <LuxuryMode> Good call, checking that ktosiek
[23:47:55] <LuxuryMode> I do see a warning "*5066 a client request body is buffered to a temporary file /var/cache/nginx/client_temp/0000000007" ktosiek
[23:49:21] <LuxuryMode> Apparently this means the size of the uploaded file was larger than the in-memory buffer reserved for uploads. The directive client_body_buffer_size controls the size of that buffer.
[23:51:04] <LuxuryMode> Silly question but "By default, buffer size is equal to two memory pages. This is 8K on x86, other 32-bit platforms, and x86-64. It is usually 16K on other 64-bit platforms." 8/16K whats?
[23:52:43] <Wooble> bytes
[23:53:31] *** Quits: pepper (~pepper@user/pepper) (Read error: Connection reset by peer)
[23:54:24] <LuxuryMode> woah ok...so 0.016 MBs
[23:54:53] <LuxuryMode> I suppose the file upload handling will only write several thousand bytes at a time...?
[23:55:40] <LuxuryMode> In other words, don't need several MBs of client_body_buffer_size in order to be able to handle uploading files of that size?
[23:57:51] *** Joins: pepper (~pepper@user/pepper)
[23:59:35] <Wooble> might be a better question for an nginx channel but I don't think most sites would buffer large files in RAM
[23:59:39] *** Joins: sliss (~sliss@109.136.165.60)
