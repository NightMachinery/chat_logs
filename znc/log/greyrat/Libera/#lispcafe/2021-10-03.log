[00:20:20] <pl> gilberth: AFAIK BLISS was similar in typing to B 
[00:25:50] <gilberth> Oh, then I need to read up. Thanks.
[00:26:36] <gilberth> The FILE server seems to behave. I know would like to have some stress test of sorts.
[00:28:26] <gilberth> I should watch my typing. * now
[00:45:40] <gilberth> Why is it that with both the CADR and Opengenera I always keep finding myself at the debugger by just playing around?
[00:57:13] <pl> well, VLM2 is... broken on non-alpha, and I'm not sure it's not broken on Alpha either
[00:57:22] <pl> and it was honestly never finished
[00:57:42] <pl> (both in terms of original plan for VLM itself, and in terms of system and application software)
[01:06:54] <gilberth> Well, I am not so sure it is the emulator being buggy.
[01:07:43] <gilberth> But then bugs really haunt me. It appears I expose a bug with any software in no time.
[01:08:51] <gilberth> And with FILE.c I won't call that bugs, because it perhaps worked fine in its original environment.
[01:10:08] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 252 seconds)
[01:13:16] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[01:16:46] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[01:18:20] *** Server sets mode: +nrt 
[01:36:04] <kakuhen_> i just had a matrix client crash on exit because qt itself tried calling a QWidget destructor before exiting
[01:36:51] <kakuhen_> extremely epic bug
[01:36:59] *** Joins: dra (~dra@2a04:4540:640b:a300:e522:3040:cdfb:9cf5)
[01:37:03] <dra> Hello!
[01:37:42] <gilberth> Time to read the what I can find or the schematics. Are CADR interrupts level or edge triggered?
[01:37:50] <gilberth> Hello dra!
[01:41:39] *** kakuhen_ is now known as kakuhen
[01:58:58] *** Quits: shka (~herr@109.231.6.176) (Ping timeout: 260 seconds)
[02:03:26] *** Joins: molson (~molson@2001-48F8-704A-CA1-0-0-75F-1006-static.midco.net)
[02:20:48] *** Joins: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa)
[02:27:09] <gilberth> Does someone know if a GLUT app would be easy to compiler using Windows?
[02:27:44] <hayley> Good morning everyone!
[02:28:22] <gilberth> Good morning, milady. Can't you come up with another greeting?
[02:31:47] * hayley uploaded an image: (669KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/ETrzHqWUUksMwPJChenAkUUg/no-fucking-way.png >
[02:34:14] <gilberth> Fair enough.
[02:35:35] <gilberth> This wifi I am having here is fubar, my two machines cannot see each other.
[02:37:06] <hayley> https://www.youtube.com/watch?v=XQTdobbMpKU
[02:37:07] -ixelp- I Die: You Die - YouTube
[02:39:24] *** Quits: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa) (Remote host closed the connection)
[02:41:21] <gilberth> I wonder whether I could patch the CADR to make use of the scroll wheel? That would be nifty.
[02:41:49] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 252 seconds)
[02:50:52] *** Quits: dra (~dra@2a04:4540:640b:a300:e522:3040:cdfb:9cf5) (Ping timeout: 250 seconds)
[02:55:04] *** Quits: X-Scale (~ARM@83.223.242.77) (Ping timeout: 252 seconds)
[02:58:03] * hayley uploaded an image: (181KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/wevKyNLcJKBysQyvezsXQzaP/moss-handbook.jpeg >
[02:58:04] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[02:58:21] <gilberth> Somehow interrupts get lost. :(
[02:59:01] * gilberth is reminded to read that damn book.
[02:59:46] <gilberth> I would appreciate if it really were that large, as its print is tiny.
[02:59:57] <hayley> Sadly I've only sprung this image on two people in the few years of having it, and one didn't speak English but admitted to not knowing shit about memory management.
[03:02:50] <gilberth> Was it all Greek to the other person?
[03:03:38] <hayley> Perhaps, because I can speak Greek too.
[03:05:31] <gilberth> You didn't get the pun.
[03:06:01] <hayley> They only spoke French.
[03:06:22] <gilberth> You speak French?
[03:06:30] <hayley> Barely.
[03:07:02] <hayley> At least I'm not getting called every insult under the sun for not getting the joke. That's why I don't bother there.
[03:09:27] <gilberth> Are you in bad mood?
[03:10:09] <hayley> Reminds me that I eventually have to figure out a part time job for next semester (hey, I am about halfway through this semester, it is not too early). IIRC beach is retiring next year, so I can't exactly do what I did this year.
[03:11:05] <hayley> I am now. If I keep if up I can probably write a third part for my famous "Federation without decentralisation" article series.
[03:13:02] <hayley> AFAICT no one is hiring for an uneducated compiler writer, and there aren't many other things I would want to program.
[03:14:22] <gilberth> Well, if the compensation is about right you might call it compensation for endured pain.
[03:14:48] <hayley> Already considered billing the university for that.
[03:15:01] <gilberth> That bad?
[03:15:09] <hayley> Yes.
[03:15:33] <gilberth> You wanted to leave the country, anyway.
[03:15:41] <hayley> Yes.
[03:16:45] <gilberth> It's fun to watch how the GC on the CADR is taking minutes, yet the machine is responsible all the time.
[03:17:05] <gilberth> And it hits the disk all the time.
[03:17:21] <hayley> Say thankyou Henry Baker in the next 19.78 seconds or you will have not incremental copying GC
[03:17:53] <gilberth> Do I want an incremental copying GC?
[03:18:08] <gilberth> How about concurrent?
[03:18:41] <hayley> Yes, you can make it concurrent.
[03:19:14] <gilberth> You do that for us. You're becomingg the expert here.
[03:19:39] <hayley> Turn every pointer fixup into a CAS (don't care about if it succeeds though - if it doesn't, then another thread fixed it up), and have a background thread do copying work too.
[03:20:30] <gilberth> It's still funny how the GC was off by default on the CADR. I wonder what the issues were. Also consider those area hacks.
[03:20:47] <hayley> Non-generational GC?
[03:22:03] <gilberth> Sure. But you would need to GC eventually and it runs while you could continue working on that machine, so no https://www.youtube.com/watch?v=3vJWVyEBcdE&t=994s
[03:22:03] -ixelp- Garbage the Video - YouTube
[03:22:50] * hayley uploaded an image: (231KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/YmItSZQARgJDAEnCblWYowFI/cringe-copying-gc.jpeg >
[03:27:15] * hayley uploaded an image: (440KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/jjUDEfZlmsNDxYAVqWaRkibt/rip-bozo2.png >
[03:28:53] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[03:40:06] *** Joins: cyberbanjo (~user@2607:fb90:4251:ffb6:1059:2a08:5fed:6000)
[03:56:22] <hayley> Apparently there is an incremental incrementally copying GC and that wasn't a typo.
[04:04:42] <gilberth> What's that?
[04:05:21] <hayley> https://dl.acm.org/doi/10.1145/29650.29677
[04:05:22] -ixelp- Incremental incrementally compacting garbage collection | Papers of the Symposium on Interpreters and interpretive techn [...]
[04:06:54] <gilberth> Is there any GC paper you have not read?
[04:07:06] <hayley> Probably.
[04:08:03] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[04:09:32] <pl> gilberth: CADR had shitty GC for significant portion of its life
[04:09:54] <pl> gilberth: especially once you started swapping (and that was quickly)
[04:10:15] <gilberth> So this was about trashing?
[04:10:25] <pl> the main improvements in both Symbolics and LMI lines early on was in GC, afaik
[04:10:38] <hayley> https://www.youtube.com/watch?v=ns-fw7a16Gw
[04:10:39] -ixelp- jean-jacques burnel - Freddie Laker - YouTube
[04:10:41] <pl> gilberth: well, more like shitty GC in general /combined/ with thrashing
[04:10:55] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[04:11:14] <pl> anyway, from what I gathered, all the memes about running with GC disabled are CADR-related
[04:11:50] <gilberth> Now, that makes sense considering that it is not generational.
[04:12:55] <gilberth> Even with GC off the CADR likes to hit the disk often. What I find curious though is when you switch windows, it writes to the disk alot. And only writes.
[04:13:10] *** Quits: random-nick (~random-ni@87.116.165.220) (Ping timeout: 252 seconds)
[04:13:30] <pl> it didn't have all that much of memory, iircv
[04:13:55] <gilberth> Sure, but why only writes?
[04:14:21] <pl> would have to trace the code, and honestly I'm more of a symbolics person :P
[04:16:00] <gilberth> Well, I was dragged away, because initially I only wanted to make the emulated frame buffer not being that damn slow. It's pretty responsive now.
[04:19:44] <gilberth> BTW why can't I hit c-space? It's eaten by the X server. I seriously should down^Wupgrade that machine to macOS 10.10 from 10.14.
[04:20:58] <gilberth> Ah it's a shortcut for macOS. *sigh*
[04:38:07] <kakuhen> i ranted about this before 
[04:38:16] <kakuhen> C-SPC in emacs will bring up the interface to change to japanese keyboard on my end
[04:38:32] <kakuhen> so i have to use shift + arrow arrows to mark a region, or use my mouse
[04:41:36] *** Joins: Qwnavery (~Qwnavery@user/qwnavery)
[04:42:11] <kakuhen> eventually, the solution to mac problems will be to upgrade to a linux desktop ;)
[04:43:19] <kakuhen> earlier today i was experimenting with void linux with musl libc, and it was pretty nice; unfortunately it still has the usual probelms i find with most linux distros as far as package management goes
[04:44:02] <kakuhen> something like pkgsrc or freebsd ports in a linux distro would be great; gentoo seems very close but what little ive read about it online makes me believe it just takes the worst of freebsd ports and leaves out all the good parts. 
[04:44:55] <moon-child> why not just use freebsd?
[04:46:06] <kakuhen> none of my computers have decent hardware support
[04:46:19] <kakuhen> and even on linux they need to be loaded up with proprietary blobs or else it just will never work
[04:46:47] <kakuhen> case in point: my trackpad uses some really stupid configuration over I2C, and iichid (some experimental driver to get this stuff working on freebsd) didn't help much, regardless of the amt of tinkering i did
[04:46:58] <kakuhen> if i used an actual desktop computer then yeah I'd probably be using freebsd as a daily driver
[04:47:08] <kakuhen> unfortunately i move around too much for that.
[04:48:29] <gilberth> kakuhen: Well, the short cut could be changed to sth else.
[04:48:38] * moon-child uses linux on desktop, for work; but freebsd on laptop
[04:48:43] <kakuhen> the nice part about linux over freebsd, ironically, is the abundance of proprietary drivers for my hardware heh
[04:49:09] <kakuhen> i did the mistake of trying debian on my ideapad for the first time in nearly a decade a few months ago
[04:49:17] <kakuhen> i forgot they have this stupid policy where they refuse to ship "non-free" firmware or whatever
[04:49:27] <kakuhen> so after booting into a fresh install of debian, my computer just hung on boot
[04:49:39] <kakuhen> just a black screen with a blinking cursor; no output whatsoever. couldn't even switch tty's
[04:49:59] <kakuhen> had to end up chrooting from a live cd and enabling some stupid custom repo that allows installing non-free firmware, and then installing whatever i needed for my laptop.
[04:50:55] <kakuhen> a friend then told me that the fedora project doesn't care about the free/non-free firmware stuff, and that it'd mostly "just work" ootb
[04:51:17] <kakuhen> he was correct; and I actually kinda like fedora, but wow trying to compile clisp on it made me realized how much of a mess it is under the hood
[04:51:48] <kakuhen> i think i mentioned it here weeks ago; config script complains libsigsegv is missing, so I install it with dnf, and the clisp config script STILL can't find it
[04:51:58] <kakuhen> and I think pkg-config wasn't showing anything either
[04:52:18] <kakuhen> not even homebrew was that bad when i used it on my mac
[04:52:59] <kakuhen> oh and bootstrapping ccl also gave me a strange issue that i have no idea how to fix
[04:53:19] <kakuhen> you have to install some linux headers before you can attempt compiling the lisp kernel, but even if you do that, the bootstrap image will crash in the middle of loading some fasl
[04:54:08] <kakuhen> meanwhile bootstrapping literally just worked for me on mac os and freebsd; though I'll admit Clozure et al can do a better job at maintaining the documentation for this. A lot of the information provided in the guide seems to not work anymore.
[05:03:16] <moon-child> 'fedora doesn't care about nonfree' oh, is that what rpmfusion is for?
[05:03:34] <moon-child> at least in the past they didn't ship with mp3 or a number of other things, so you had to get them from a 3rd-party repo.  I guess mp3 is no longer an issue, heh
[05:03:50] <kakuhen> moon-child: well, it somehow shipped with the firmware my laptop needs to boot properly
[05:03:52] <pl> kakuhen: huh, what makes you think gentoo takes the worst of freebsd ports?
[05:04:17] <kakuhen> and most of that firmware is labelled by debian as "non-free" and tucked away in some repo commented out in the apt sources list
[05:04:34] <kakuhen> so yes, in that respect, fedora seems to be more ok with debian with shipping non-free firmware.
[05:04:52] <pl> I might be biased and I haven't used BSD all that much, but it always felt to me like BSD ports stopped at 1/10th of what portage was doing and the devs seemed to instead look at binary packaging
[05:08:02] <kakuhen> pl: well, i've seen complaints online about e.g. USE flags not carrying over with updates to packages
[05:08:40] <kakuhen> if you enable X variant in a port on freebsd, then any update to the port will still compile with it
[05:09:04] <pl> kakuhen: USE flags specified by overrides don't, written down it doesn't matter, and Portage will record the last set of use flags and inform you if it's different
[05:09:24] <pl> but overrides are, well, overrides. You shouldn't expect them to be kept (IMO)
[05:09:55] <pl> in this, Portage is arguably a bit closer to Nix
[05:09:55] <|3b|> gilberth: if you mean the opengl GLUT, i think the mingw64 freeglut works with cl-glut on windows
[05:10:48] <|3b|> might need to (glut:show-window) on first window to get it to show up
[05:11:42] * |3b| has mostly been using glut lately (on windows), but not 100% sure that's the dll i've been using
[05:11:43] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[05:11:58] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 252 seconds)
[05:11:59] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[05:12:15] <Qwnavery> I'm running void fulltime on both my laptop and desktop. My laptop is musl but my desktop is glib because nvidia. I don't understand your issue with the package manager?
[05:14:18] <moon-child> isn't GLUT just an inferior SDL?
[05:14:53] <|3b|> depends on your definition of inferior, but for a lot of uses it might be
[05:16:58] *** Joins: Mandus (~aasmundo@0.51-175-33.customer.lyse.net)
[05:16:59] * |3b| uses glut because glop2 doesn't exist yet and i'm cl-glut maintainer so might as well use that until it does :p
[05:18:12] <hayley> https://www.youtube.com/watch?v=sJFxwBfFkyM 
[05:18:13] -ixelp- Exploring Sun Solaris 7 for SPARC - YouTube
[05:24:29] <gilberth> |3b|: Yes, I was considering to use (OpenGL) GLUT for the CADR emulator. It kinda was designed as a cross platform lib and would me give vsync.
[05:32:32] <gilberth> |3b|: There isn't a GLUT by MS anymore?
[05:47:51] *** Quits: Qwnavery (~Qwnavery@user/qwnavery) (Quit: WeeChat 3.3)
[05:48:20] * hayley reads how to do linear regression with map-reduce.
[05:48:36] <hayley> If they're seriously going to tell me that 50,000 samples is enough to make linear regression slow, I'll just throw more hardware at it.
[05:53:54] <gilberth> hayley: CLOSOS in a box, when?
[05:54:10] <hayley> Well, first you need a CLOSOS, and second you need a box.
[05:54:39] <gilberth> The later is by far easier to make, start with that :-)
[05:55:09] <hayley> You can get cardboard boxes from Bunnings Warehouse for free, but it looks weird if you don't use the box to take any gardening supplies home in.
[05:56:06] <gilberth> Didn't you plan to switch careers and grow vegetables instead?
[05:56:39] <hayley> It's always possible.
[05:57:02] <gilberth> Less bugs, for sure. But then you are not as haunted as I am.
[05:59:37] <hayley> How did I get to 2,609 words for homework when I only had 1,100 yesterday at this time? I certainly haven't written 1,500 words in this time.
[06:01:25] <hayley> Well, what kind of box? Do I sell the server with CLOSOS on it already?
[06:02:08] * hayley uploaded an image: (22KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/jkhbvPAAzjphAwOFhYaUPATY/cars.png >
[06:02:16] <hayley> Here is a graph of cars sold per colour and year though.
[06:06:49] *** Quits: emacsoma1 (~emacsoman@136.60.128.68) (Quit: WeeChat 3.3)
[06:07:52] *** Joins: emacsomancer (~emacsoman@136.60.128.68)
[06:21:15] <mfiano> hayley: This seems like something you would have jumped on. I was bored so jumped on it myself: https://www.reddit.com/r/Common_Lisp/comments/q07rij/how_to_speed_up_array_writes/
[06:21:16] -ixelp- How to speed up array writes? : Common_Lisp
[06:22:44] <hayley> Nothing else I'd say, except maybe a dumb compiler would avoid computing indices with ROW-MAJOR-AREF.
[06:24:22] <hayley> And, well, don't declare (safety 0) if you can help it, and prefer to use more specific unsafe things (e.g. disabling bounds checks but not type checks) if your implementation allows. Else you'll get sent to https://www.youtube.com/watch?v=tbHix56qfG8 again
[06:24:23] -ixelp- The Aircrash Bureau - YouTube
[06:25:15] <mfiano> To be fair, safety should never be below speed. You can still get the compiler to do very strange things otherwise.
[06:26:22] <mfiano> There are different semantics in some places that I can't recall when safety is below speed. I remember struct fields having very wrong values because of this once, which is how I know.
[06:26:26] <mfiano> (on SBCL)
[06:26:39] <mfiano> I researched the spec at the time but can't for the life of me remember what
[06:27:41] * hayley spots an IMUL instruction in the disassembly of iterating over a 2d array. Ouch.
[06:30:13] <hayley> And it's gone with ROW-MAJOR-AREF. A pity.
[06:31:09] <hayley> I recall I had a really dumb bug with mixing up queues and mailboxes on SBCL in (safety 1) (speed 3) code, and that convinced stassats that not checking struct types above (safety 0) was too much of a hassle.
[06:33:43] <mfiano> Ah
[06:34:14] <hayley> https://www.reddit.com/r/programming/comments/q07z0v/denigma_is_an_ai_tool_that_explains_code_in/
[06:34:15] -ixelp- Denigma is an AI tool that explains code in conversational English : programming
[06:34:22] <mfiano> I keep editing my post with more info. I'm going back to code now.
[06:36:04] <hayley> I gave it the code for UPDATE-SYSTEM-FOR-NEW-INTERESTING-BLOCK-PREDICATE, and it insisted my code takes Clojure namespaces for arguments, added some filler words to the documentation string, replaced the kebab-case with snake_case, and made up what it thinks "interesting" and "uninteresting" sets are.
[06:38:34] <mfiano> I'm really excited my renderer might actually be able to render something soon. Maybe it'll just work, but more likely I'll be iterating on all the bugs I couldn't "see" during the last month of design :)
[06:43:13] * hayley enables the line-by-line mode and reads the explanation.
[06:43:18] <hayley> "The code is not working properly." ):
[06:54:17] <gilberth> I am not there yet, the CADR wants to close a data connection with the FILE server and the FILE server is not reacting in any way. *sigh*
[06:58:04] <hayley> As Knuth said, I have proven the code correct, but I still don't know if it works :(
[07:14:40] *** Quits: semz (~none@user/semz) (Ping timeout: 252 seconds)
[07:15:47] <|3b|> gilberth: not sure if there has ever been a MS glut, and if there were it would probably be horribly out of date anyway :p (not that the free one is all that actively developed)
[07:17:02] <gilberth> |3b|: Fair enough. The initial Windows NT came with GLUT ;)
[07:17:40] <gilberth> And fake POSIX.
[07:17:48] <|3b|> yeah, wasn't sure out old NT, or who provided it if it did have it
[07:18:19] <|3b|> *wasn't sure about
[07:18:52] <gilberth> Well I briefly looked into it at that time, looked kind of promising. And that POSIX subsystem wasn't too bad actually.
[07:18:54] <hayley> gilberth: Seems we have a list of "books on implementing Lisp" in http://www.ai.sri.com/~delacaze/alu-site/alu/table/books.htm
[07:18:55] -ixelp- ALU: Lisp Books
[07:20:03] <mfiano> Oh yes, I posted that in the main channel but forgot we had gilberth here only
[07:21:39] <gilberth> Yes, I hide here. I am too off-topic for #lisp's taste of these days.
[07:22:12] <mfiano> Even more off-topic for the main channel then :p
[07:22:16] <hayley> I think you want #commonlisp now.
[07:22:32] <mfiano> #lisp is more generic
[07:23:25] <gilberth> Yes. Pity they renamed #lisp to #commonlisp. Anyhow, it's cozy here and I'll hide just here.
[07:23:50] * hayley uploaded an image: (89KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/bvAqPhFlecGEdyquBxrpnXwn/directness-principle.jpeg >
[07:27:01] <gilberth> I wonder if that portable implementation of Lisp is really that portable, as when you want to really, really portable, you would wind up using your own stack because of GC. Like CLISP does.
[07:27:57] <hayley> You can use a shadow stack IIRC.
[07:28:08] <gilberth> XLISP is odd in this regard. It keeps a second stack with pointers to your local C variables.
[07:28:17] *** Joins: semz (~none@user/semz)
[07:28:35] <hayley> http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.19.5570&rep=rep1&type=pdf
[07:28:52] <hayley> That's precisely a shadow stack.
[07:30:09] <gilberth> I'd rather link my stack frames. Like { T loc[5] = { sp, 5 }; sp = loc; .... sp = loc[0]; } modulo casts.
[07:30:39] <mfiano> Not sure. It's very old and pricey.
[07:30:58] <mfiano> It could be portable in that it runs on all C implementations of the year 1989
[07:31:58] <moon-child> gilberth: linked list of stack frames?
[07:32:02] <moon-child> I do not like that
[07:32:16] <gilberth> Yes, but XLISP although designed for tiny machines, wastes a lot of space with its second stack with pointers to each and every local variable.
[07:33:08] <gilberth> moon-child: Why not? Would you rather have your own second stack?
[07:35:32] <gilberth> With a linked list of stack frames, the compiler is free to keep the local variables in registers. Not so with a second stack or XLISP's approach.
[07:39:54] *** Joins: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f)
[07:41:26] <hayley> You only have to spill to the stack when you safepoint, which usually means any function which allocates.
[07:43:08] <moon-child> gilberth: I mean, make the stack linear
[07:43:29] <moon-child> though I would have a separate call and data stack
[07:44:07] *** Joins: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt)
[07:45:58] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[07:47:07] <hayley> Apparently I'm not allowed to enjoy my weekend after I've finished homework.
[07:47:23] *** Joins: seere_ (~seere@user/seere)
[07:51:40] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[07:52:57] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[07:52:58] *** Quits: Mandus (~aasmundo@0.51-175-33.customer.lyse.net) (*.net *.split)
[07:52:58] *** Quits: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt) (*.net *.split)
[07:53:00] *** Quits: commandoline (~commandol@ubuntu/member/commandoline) (*.net *.split)
[07:53:00] *** Quits: seere (~seere@user/seere) (*.net *.split)
[07:57:01] *** Joins: JSharp_ (sid4580@id-4580.lymington.irccloud.com)
[07:57:47] *** Joins: pl_ (sid98063@id-98063.helmsley.irccloud.com)
[07:57:49] *** Joins: White__Flame (~quassel@user/white-flame/x-6930243)
[07:58:24] *** Quits: JSharp (sid4580@id-4580.lymington.irccloud.com) (Ping timeout: 252 seconds)
[07:58:25] *** JSharp_ is now known as JSharp
[07:58:28] *** Quits: White_Flame (~quassel@user/white-flame/x-6930243) (Ping timeout: 252 seconds)
[07:58:28] *** Quits: pl (sid98063@2a03:5180:f:1::1:7f0f) (Ping timeout: 252 seconds)
[07:58:29] *** pl_ is now known as pl
[07:58:40] *** Quits: gin (~gin@user/gin) (Ping timeout: 252 seconds)
[07:59:13] *** Quits: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f) (Quit: Leaving)
[07:59:33] *** Joins: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f)
[07:59:46] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (Ping timeout: 252 seconds)
[08:03:23] *** Quits: OlCe (~user@lfbn-nic-1-565-28.w90-118.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[08:04:54] *** Joins: aeth_ (~aeth@user/aeth)
[08:04:55] *** Quits: aeth (~aeth@user/aeth) (Killed (NickServ (GHOST command used by aeth_)))
[08:04:57] *** aeth_ is now known as aeth
[08:05:36] *** Joins: molson_ (~molson@2001-48F8-704A-CA1-0-0-75F-1006-static.midco.net)
[08:06:08] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[08:06:19] *** White__Flame is now known as White_Flame
[08:06:54] *** Joins: notzmv- (~zmv@user/notzmv)
[08:07:14] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[08:07:35] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 252 seconds)
[08:07:58] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[08:08:08] *** Quits: molson (~molson@2001-48F8-704A-CA1-0-0-75F-1006-static.midco.net) (Ping timeout: 252 seconds)
[08:09:14] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[08:09:45] *** Quits: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f) (Quit: Leaving)
[08:12:51] *** Quits: cyberbanjo (~user@2607:fb90:4251:ffb6:1059:2a08:5fed:6000) (Read error: Connection reset by peer)
[08:18:28] *** Quits: ixelp (~ixelp@p5492d8bb.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[08:22:02] *** Joins: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f)
[08:23:58] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[08:26:07] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 240 seconds)
[08:26:32] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[08:31:25] *** Joins: ratzkewa1zke (~ec2-user@ec2-34-217-87-98.us-west-2.compute.amazonaws.com)
[08:31:58] *** Joins: semz_ (~none@user/semz)
[08:33:31] *** Quits: ratzkewatzke (~ec2-user@ec2-34-217-87-98.us-west-2.compute.amazonaws.com) (Ping timeout: 252 seconds)
[08:33:31] *** Quits: semz (~none@user/semz) (Ping timeout: 252 seconds)
[08:33:46] *** Quits: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f) (Quit: Leaving)
[08:33:58] *** Joins: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f)
[08:41:14] <hayley> https://twitter.com/paulkidd/status/1312582620622909440/photo/1 Australia has 16 time zones today
[08:45:29] <dave0> maw
[08:46:07] <dave0> hayley: i forgot about daylight saving and slept in till 1pm today instead of noon
[08:46:55] <White_Flame> there's even a .3 in there? an 18 minute offset?
[08:54:40] *** Quits: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f) (Quit: Leaving)
[08:55:24] *** Joins: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f)
[09:26:55] *** Quits: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f) (Quit: Leaving)
[09:27:25] *** Joins: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f)
[09:33:13] *** Joins: Qwnavery (~Qwnavery@user/qwnavery)
[09:35:40] <hayley> How to make infinite energy: 1. Get some C shitter to complain bignums are "untyped" integers 2. Attach generator to Peano's grave 3. Peano spins in grave 4. Infinite energy
[09:37:47] <Qwnavery> lmao
[09:40:01] <moon-child> kinda tempted to link the section of agner showing all the arithmetic ops are the same cost for all int sizes
[09:40:28] <moon-child> (except div I guess, but you get what you pay for in any event)
[09:40:28] <hayley> Well, such "rEaL tYpEs" don't include bignums.
[09:41:00] <moon-child> yea but they're talking about like 'promoting' an '8-bit int' to a '32-bit int' kinda thing, as if that has a cost
[09:41:26] <hayley> Ah yeah.
[09:41:39] *** Quits: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f) (Quit: Leaving)
[09:41:54] *** Joins: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f)
[09:42:05] <hayley> But I'm still going to complain that \mathbb{N} and \mathbb{Z} are more often used types than [0, 2^n) for some natural n.
[09:42:36] *** Quits: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f) (Remote host closed the connection)
[09:42:50] <moon-child> just curious, do y'all use latex-rendering irc clients
[09:42:52] <moon-child> ?
[09:43:01] <hayley> No, sadly.
[09:43:13] <hayley> Apparently the Facebook messenger renders TeX.
[09:43:20] <moon-child> :D
[09:45:07] <hayley> But machine-oriented types for integers really really really really really should be opt-in. I'm going to link https://gitlab.freedesktop.org/polkit/polkit/-/issues/74 until I drop dead.
[09:45:22] <gilberth> The trouble is, they don't even talk about integers but elements of a modulo ring. Or bit patters.
[09:46:01] <moon-child> rereading 'growing a language'.  Forgot how good it is.  'I have to say the full phrase “Java programming language,” for there is a guy who works where I do who deals with the laws of marks of trade, and he told me I have to say it that way'
[09:46:49] <hayley> Like, if you care about performance, hopefully you have pulled out a profiler and found the loop which would go faster if you had ADD in one instruction. But, again, this handmade dot network circlejerk is more concerned with making IPC go brr rather than writing reasonable code.
[09:47:15] <moon-child> indeed
[09:48:01] <hayley> In any case we really should rip apart the "writing code for other people" and "writing fast code" definitions of "systems" programming.
[09:52:52] <gilberth> On the CADR: You open a file with OPEN, forget a while about it and then TYI [READ-CHAR] on it and the machine says it's closed. Hmm.
[09:53:48] <hayley> What's funny is that LLVM and HotSpot et al still use CL-ish integer type lattices with any ranges internally, though the languages only have mod 2^(2^(3+n)) arithmetic at the language level.
[09:55:22] <gilberth> I can't use LLVM to compile Pascal?
[09:56:04] <hayley> What I mean is that the integer type is i8 or something, though LLVM might happily infer [1, 100] internally. There might be metadata for it, actually, but I can't remember.
[09:56:49] <hayley> https://llvm.org/docs/LangRef.html#range-metadata The range metadata.
[09:56:53] <gilberth> That was my question. I can't have say 0..99 as a type to LLVM?
[09:57:37] <hayley> %a = load i8, i8* %x, align 1, !range !0 ... !0 = !{ i8 0, i8 100 }
[09:58:40] <gilberth> ah
[09:59:48] <hayley> So you still need to know that it is a subtype of some i(ceiling (log n 2)) type.
[10:01:00] <hayley> Lispers 🤝 ML-ers 🤝 Pascal quiche eaters
[10:01:07] <hayley>      lol machine integer types are dumb
[10:01:54] <gilberth> This even wouldn't be a fit for those computers working with trits.
[10:03:09] <gilberth> Or on BCD :-)
[10:03:15] <hayley> So, not only are machine integer types a safety problem and a maintainability problem, they also manage to be unportable. IIRC Rust still defaults to 32-bit ints if you don't specify an integer type.
[10:04:43] <gilberth> 32-bit or what ever is convenient?
[10:07:17] <gilberth> The safety problem only arises because no type checks are done.
[10:07:32] <kakuhen> why can't more languages have a proper numeric tower like common lisp does
[10:07:45] <kakuhen> like seriously, how the fuck is it 2021 and not a single popular language natively supports something as basic as a rational number
[10:08:04] <kakuhen> meanwhile in common lisp I can just type 3/5 at the repl and it will store that as a rational
[10:08:24] <gilberth> Because ease of implementation won.
[10:09:01] <hayley> .oO( Welcome to 1980! (3 / 5) class. -> Fraction)
[10:11:09] <moon-child> gilberth: are rational numbers difficult to implement?
[10:11:45] <hayley> Bike implemented ratio arithmetic for SICL not too long ago. I think he had to use one funny algorithm for something...
[10:12:23] <gilberth> moon-child: The is no machine struction for ratio arithmetric. And you want bignums in there => GC.
[10:12:38] <gilberth> * instruction
[10:12:39] <hayley> https://github.com/robert-strandh/SICL/pull/209/commits
[10:13:07] <hayley> No, no funny algorithms. But I don't know how writing fast ratio arithmetic is done.
[10:13:57] <gilberth> Are there short cuts? Relevant to "small" rational numbers?
[10:14:22] <hayley> When the denominator is 1...
[10:14:34] <gilberth> Anyhow, the world is somehow stuck at the C mindset.
[10:14:50] <hayley> I wouldn't expect a language called C3 to escape a C mindset somehow.
[10:14:51] <moon-child> if you know the range of the numbers in question you might perform short machine divides, which are cheaper than long ones
[10:16:15] <gilberth> moon-child: I was thinking in terms of O-calculus. There are faster algorithms for e.g. integer multiplication than doing it the obvious way.
[10:16:34] <hayley> Consultancy idea: rewrite C program to use GMP throughout, then ask precisely where the client says it's safe to compute mod 2^n. If they don't know, nothing uses int.
[10:17:14] * hayley puts https://www.youtube.com/watch?v=PX6c_7upnwc on jukebox again
[10:17:22] <gilberth> It would be suffice to have a damn C compile which would do type checking.
[10:17:26] <moon-child> gilberth: what sort of O calculus concerns itself only with small numbers? ;)
[10:17:32] <moon-child> but yeah, that does sound like an interesting line of inquiry
[10:17:59] <hayley> Crashing with broken code is better than not crashing with broken code. But not crashing with not broken code is even better.
[10:18:06] <moon-child> perhaps trying to choose common denominators rather than minimal ones
[10:18:29] <gilberth> hayley: When a machine crashes, I cannot root it anymore.
[10:18:38] <hayley> gilberth: Good point.
[10:21:42] <hayley> In the vain of https://gbracha.blogspot.com/2011/06/types-are-anti-modular.html you could get in a lot of trouble by saying that integer types are anti-modular.
[10:21:43] <gilberth> Anyhow the whole state of the industry is a bad joke.
[10:22:59] * hayley reads "One of the advantages of blogging is I get so many people to tell me I'm wrong" and somehow reversed it to say "One of the advantages of blogging is I get to tell so many people they're wrong"
[10:24:41] <moon-child> I mean, both are true
[10:25:35] <hayley> One of the advantages of https://applied-language/ is I get to tell so many people they're wrong. But they don't read it, of course.
[10:25:42] <hayley> *applied-langua.ge
[10:35:20] <hayley> Huh, I apparently made $25 off some weird crypto token which counts likes you get on YouTube or something. Over 3 years or so, but it's $25 more than YouTube gave me.
[10:38:45] <mfiano> I made about $150kusd gambling altcoins about 6 or 7 years ago. Glad I cashed out then, even though I'd be a multi-millionaire today. What a complete waste of time for...a Ponzi scheme.
[10:39:11] <moon-child> ;o
[10:39:42] <moon-child> I feel like there are better volatile investments
[10:40:11] <hayley> I made $300 from one photoshop job by forgetting about the dogecoin for 5 years.
[10:43:35] <hayley> FWIW I only sold in 2019, before Elon Musk shitposted or something. Else my 12,345 DOGE would pay for a new computer now :)
[10:44:10] <kakuhen> banks near LA now announce they accept dogecoin
[10:44:28] <kakuhen> i wonder what the dogecoin dev is doing right now
[10:44:36] <kakuhen> iirc he made it as a joke within 2 hours and didnt really think twice about it 
[10:44:39] <hayley> Seriously, it's 20 US cents per doge? Back in my day, ye could get 1e6 doge for AU$150 or so.
[10:44:56] <hayley> Well, one of them thinks it was a big mistake in hindsight.
[10:45:41] *** Joins: shka (~herr@109.231.6.176)
[10:46:15] <hayley> But if I had bought then, gilberth would be asking me for the CLOSOS money.
[10:50:16] <mfiano> Well managed to get my shader compiler integrated into my renderer tonight. Still no idea how it renders yet though :)
[10:50:56] <mfiano> All the pieces are converging now though...don't think it will be long.
[11:16:31] <hayley> gilberth: should I get the CLOSOS money from http://www.bakercapital.com/
[11:38:43] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:39:12] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[12:40:52] <White_Flame> buy GME and stick it to the hedge funds¡
[12:43:11] <shka> this thing is still going on?
[12:46:43] <White_Flame> yep, although the whole public mania that drove it up is long over
[12:46:49] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 252 seconds)
[12:46:55] <White_Flame> the "short squeeze" is this weird fantasy they're still on
[12:47:13] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[13:03:03] *** Joins: chiselfu1e (~chiselfus@user/chiselfuse)
[13:05:00] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 276 seconds)
[13:24:56] *** Joins: random-nick (~random-ni@87.116.183.117)
[13:39:57] <mfiano> I wish I could specialize a method parameter to be a [non-generalized] boolean
[13:40:32] <hayley> There's the NULL class, right? Then NULL for false, T for true.
[13:40:46] <mfiano> I have a generic function with a ton of methods, and one piece of behavior must only occur when given an explicit NIL or T, but T is the superclass of all classes, and will catch to much
[13:41:00] <mfiano> I guess I could do two eql methods
[13:41:04] <hayley> (eql 'nil) and (eql 't)?
[13:41:13] <mfiano> Yeah, a bit unfortunate, but yeah
[13:42:15] <pjb> (eql 'nil) = null
[13:42:39] <mfiano> Yes I was just trying to encode it all into 1 method without duplication or an auxiliary function
[13:43:01] <mfiano> I will need 1 or the other here
[13:43:03] <mfiano> Oh well
[13:43:06] <pjb> Yes.
[13:43:14] <pjb> Or accept generalized booleans.
[14:12:44] *** Quits: ozzymcduff (~mathieu@81-234-151-21-no94.tbcn.telia.com) (Remote host closed the connection)
[14:17:12] *** Joins: ozzymcduff (~mathieu@81-234-151-21-no94.tbcn.telia.com)
[14:33:14] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 245 seconds)
[14:34:54] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[14:43:11] <hayley> moon-child: Worse, they seem to think there is one C ABI.
[14:51:19] *** Quits: Qwnavery (~Qwnavery@user/qwnavery) (Quit: WeeChat 3.3)
[15:14:20] <hayley> https://www.youtube.com/watch?v=mcio_lL0iDk
[15:16:48] *** Joins: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa)
[15:47:03] * hayley hears Music for Airports downstairs and wonder what's gone horribly right.
[15:47:27] <dave0> brian eno?
[15:47:35] <hayley> Yes.
[15:47:41] <hayley> Very strange for my dad.
[15:47:42] <dave0> nice
[15:48:07] <dave0> maybe he's been replaced by an identical replicant and your real dad was abducted by aliens
[15:48:15] <dave0> i'm not saying it was aliens
[15:48:18] <dave0> but it was aliens
[15:48:42] <hayley> I'm not complaining.
[15:49:02] <hayley> .oO(Divorce papers should be processed any day now...)
[15:56:01] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 252 seconds)
[15:56:13] <hayley> Rather than scymtym's Eclector censoring-client, I want a vulgar-client that allows `#\Shit` to read as 💩
[15:58:31] <dave0> poop emoji
[16:00:10] <hayley> I still wonder how hard implementing the (- position constant) thing would be. Doesn't look that hard to me, though my representation for tag assignments really stinks.
[16:05:30] <hayley> Seems it would help with eliminating a lot of variables, but I am not entirely sure of how well it works.
[16:10:57] <hayley> But gilberth gets along fine even without dataflow apparently, though he has only 8 registers which is interesting to me (as my naïve grep duplicates registers so that each RE in the vector is "independent").
[16:12:24] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[16:24:31] *** Joins: makomo (~makomo@user/makomo)
[16:25:10] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 252 seconds)
[16:26:38] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[16:31:16] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 252 seconds)
[16:32:13] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[16:40:04] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 252 seconds)
[16:42:32] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[17:35:46] *** Quits: shka (~herr@109.231.6.176) (Quit: Konversation terminated!)
[17:39:51] *** Joins: shka (~herr@109.231.6.176)
[17:40:52] <dave0> nite all
[17:40:58] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[18:02:21] <gilberth> Good morning #lispcafe!
[18:05:43] <gilberth> Hmm, when I say send(2) instead of write(2) and recv(2) instead of read(2) this FILE.c seems to behave.
[18:47:29] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[18:50:55] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[18:54:59] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[18:58:07] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 252 seconds)
[18:59:44] <gilberth> Hmm, somehow I must pace interrupts. The disk emulation already has that, an I/O request is made and as this is an emulation the request would be fulfilled instantly to the CADR, which is something it does not expect and the interrupt would be lost. And this despite it looks like the interrupts level triggered. Hmm.
[19:00:50] <gilberth> This hurts performance quite a bit as a decay counter needs to be maintained each cycle.
[19:03:29] <gilberth> There is a comment saying that the Chaosnet board should be in another thread, which makes sense as otherwise the fd to the choasd would be polled each n cycles and as this is syscall, this hurts performance, too.
[19:38:26] *** notzmv- is now known as notzmv
[19:42:53] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[19:44:51] *** Server sets mode: +nrt 
[19:54:01] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Quit: WeeChat 3.3)
[19:56:27] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[20:06:19] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 252 seconds)
[20:08:05] *** Quits: clothespin (~awolven@c-73-209-95-92.hsd1.il.comcast.net) (Quit: WeeChat 2.8)
[20:08:08] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[20:50:56] <pl> In terms of CHAOS code - usim is mostly new code, chaos is mostly resurrected code contemporary to real life CADRs being in use, AFAIK 
[20:52:23] <gilberth> pl: Yes, this is what I gathered.
[20:53:42] <gilberth> Anyhow, more ICs arrived: <http://clim.rocks/gilbert/74F381.jpg> [kinda blurry, sorry.] Many ALUs to be build.
[20:57:43] <gilberth> pl: It seems to work quite well now. I'll attempt to put the emulated chaos board in a second thread, so that the CPU doesn't need to poll(2) all the time; This hurts performance quite a bit. The CPU emulator itself is pretty fast, but only slowed down by this hardware emulation. On my Xeon 3.6GHz I am now at 10ns cycle time when I disable this polling, without even touching the CPU itself. And as Brad Parker said, this code was crafted
[21:01:17] <pjb> Hardware emulation could be run in parallel on a different code…
[21:01:44] <gilberth> Yes, this is what I do for the console already.
[21:03:13] <gilberth> I mean, in real hardware the various I/O boards also just set some interrupt flag when needing attention.
[21:15:16] <gilberth> Hmm, I have 266 of those '381 now. That is way more than I need, but they are (1) rare because this are SMD parts and (2) were really cheap. I need to update my inventory list.
[21:17:02] <gilberth> I still miss the carry-lookahead IC as SMD parts. :(
[21:18:29] <gilberth> When done right according to the data sheets, you could add two 32-bit numbers in just 20ns.
[22:02:22] *** Joins: nwoob (~apple@103.233.122.232)
[22:03:11] <nwoob> How does one learn to architect large projects
[22:15:04] <gilberth> nwoob: Good question. I'd say it takes practice.
[22:19:28] *** seere_ is now known as seere
[22:37:31] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 252 seconds)
[22:44:12] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[22:54:51] *** Quits: dec0d3r (~dec0d3r@2001:8003:4810:9600:7275:1afb:1707:8eaa) (Remote host closed the connection)
[23:09:04] *** Quits: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net) (Ping timeout: 245 seconds)
[23:10:53] *** Joins: Mandus_ (~aasmundo@0.51-175-33.customer.lyse.net)
[23:23:50] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[23:24:13] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[23:49:01] *** Quits: nwoob (~apple@103.233.122.232) (Ping timeout: 252 seconds)
[23:57:21] <Gnuxie> selwyn https://www.theguardian.com/uk-news/2021/oct/03/vulgar-and-sexist-whatsapp-evidence-ignored-says-ex-met-detective
[23:57:47] <Gnuxie> >Kimberley is set to be compensated after a tribunal last month ruled a job offer was withdrawn from her a day after she told her civilian line manager about sexist messages and images on the WhatsApp group.
