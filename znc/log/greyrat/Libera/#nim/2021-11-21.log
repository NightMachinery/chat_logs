[00:00:05] <FromDiscord> <michaelb> I see, will make the needed change, thanks for taking a look
[00:05:19] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[00:06:26] *** Joins: xet7 (~xet7@user/xet7)
[00:14:34] *** Quits: terminalpusher (~terminalp@2a01:586:12e7:1:ecac:12bf:39fa:2ed) (Remote host closed the connection)
[00:27:51] <FromDiscord> <𝙧𝙚𝙢> @ElegantBeef ur writing a wm right? need help w/ reparenting the titlebar (i want to create) so thats its above the frame window w/ the content
[00:28:01] <FromDiscord> <𝙧𝙚𝙢> kinda having trouble figuring out how to do it
[00:31:23] *** rwb is now known as rb
[00:52:37] *** Parts: clemens3 (~clemens@225.40.150.83.ftth.as8758.net) (WeeChat 2.7)
[01:06:35] <FromDiscord> <Elegantbeef> I never did the titlebar stuff or framing, but my understanding is you create a new window position it then reparent the child
[01:07:00] <FromDiscord> <Elegantbeef> I believe https://github.com/avahe-kellenberger/nimdow might've done it, but i dont know.
[01:07:03] <FromDiscord> <Elegantbeef> Pinging prestige!
[01:15:31] <FromDiscord> <𝙧𝙚𝙢> could you ping him and ask?
[01:15:42] <FromDiscord> <𝙧𝙚𝙢> if he's in the server
[01:16:04] <FromDiscord> <Elegantbeef> I just did
[01:16:28] <FromDiscord> <𝙧𝙚𝙢> i can successfully frame it but i can't figure out how to parent a titlebar
[01:16:55] <FromDiscord> <Elegantbeef> Is it not just a case of parenting the title bar and parent the child bar?
[01:17:00] <FromDiscord> <Elegantbeef> child window\
[01:17:09] <FromDiscord> <𝙧𝙚𝙢> tried but it didn't work apparently
[01:17:16] <FromDiscord> <𝙧𝙚𝙢> it doesn't error but it just didn't show up?
[01:17:57] <FromDiscord> <Elegantbeef> Yea i'm not too good with x11
[01:18:02] <FromDiscord> <𝙧𝙚𝙢> @Prestige could u tell me how u did the titlebars if u did it?
[01:18:14] <FromDiscord> <Elegantbeef> I dont even know if he has title bars
[01:18:18] <FromDiscord> <Elegantbeef> And i already pinged him
[01:18:23] <FromDiscord> <𝙧𝙚𝙢> it doesn't show u pinged him for me on discord
[01:18:30] <FromDiscord> <Elegantbeef> Cause he's an irc user
[01:18:37] <FromDiscord> <𝙧𝙚𝙢> ohhhh
[01:18:37] <FromDiscord> <Elegantbeef> So.... me typing `prestige` did it
[01:18:48] <FromDiscord> <𝙧𝙚𝙢> mb i forgot this was bridged
[01:19:00] <FromDiscord> <Elegantbeef> There is bot next to my name
[01:19:12] <FromDiscord> <𝙧𝙚𝙢> 😳
[01:19:19] *** Quits: sagax (~sagax_nb@user/sagax) (Ping timeout: 250 seconds)
[01:30:16] *** Joins: krux02 (~krux02@p200300e8170c11004db6e8013ca32c23.dip0.t-ipconnect.de)
[01:30:50] *** Joins: PMunch (~PMunch@user/pmunch)
[03:33:22] <PMunch> @rem, for titlebars you need to reparent into a window and then draw the title yourself with whatever drawing library you're comfortable with
[03:33:44] *** Quits: PMunch (~PMunch@user/pmunch) (Quit: leaving)
[03:34:16] <FromDiscord> <pmunch> @𝙧𝙚𝙢\: ^
[03:34:48] <FromDiscord> <Elegantbeef> What a world pmunch have to go from one protocol to another just to ping someone on a completely seperate platform 😛
[03:37:42] <FromDiscord> <pmunch> That's just the kind of service I offer for this community 😋
[03:38:11] <FromDiscord> <Elegantbeef> Servicing the community one round about ping at a time
[03:43:40] *** Joins: Guest24e (~Guest24e@184.100.128.199)
[03:43:50] <Guest24e> uwu
[03:43:53] *** Quits: Guest24e (~Guest24e@184.100.128.199) (Client Quit)
[03:48:38] <FromDiscord> <𝙧𝙚𝙢> ill take a look at it in a bit thank you pmunch
[04:14:25] <nrds> <06Prestige99> Ah it pinged me but I was asleep
[04:14:38] <FromDiscord> <Elegantbeef> I have a name!
[04:14:55] <nrds> <06Prestige99> I meant the program but yes, hello beef :)
[04:15:00] <nrds> <06Prestige99> it pinged me both times
[04:17:07] <FromDiscord> <Elegantbeef> Of course that's what you meant, but my shitty jokes dont care!
[04:22:06] *** Quits: krux02 (~krux02@p200300e8170c11004db6e8013ca32c23.dip0.t-ipconnect.de) (Remote host closed the connection)
[04:25:01] *** Quits: lumo_e (~enrico@151.29.48.90) (Remote host closed the connection)
[04:29:15] *** Quits: src_ (~src@user/src) (Quit: Leaving)
[05:04:07] <FromDiscord> <creikey> Anybody up to review a bit of nim code?
[05:04:55] <FromDiscord> <creikey> (edit) "Anybody up to review a bit of nim code? ... " 03added "https://github.com/creikey/learn-nim/blob/main/bf.nim would love to know what language features I should be using that would make this more concise"
[05:05:20] <FromDiscord> <Elegantbeef> Oh hell yea time make you cry!
[05:07:41] <FromDiscord> <Elegantbeef> https://github.com/creikey/learn-nim/blob/main/bf.nim#L64-L89 can be replaced with https://play.nim-lang.org/#ix=3FDb
[05:10:15] <FromDiscord> <Elegantbeef> https://github.com/creikey/learn-nim/blob/main/bf.nim#L9-L21 is just a more complicated https://play.nim-lang.org/#ix=3FDc
[05:10:54] <FromDiscord> <Elegantbeef> Dont need `result =` here https://github.com/creikey/learn-nim/blob/main/bf.nim#L34-L38
[05:12:36] <FromDiscord> <Elegantbeef> Actually that can be done better
[05:13:53] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3FDd for instance
[05:14:25] <FromDiscord> <Elegantbeef> @creikey\: hopefully that's good enough 😛
[05:15:09] <FromDiscord> <creikey> In reply to @Elegantbeef "https://play.nim-lang.org/#ix=3FDd for instance": wow didn't know you could return var like that
[05:15:17] <FromDiscord> <creikey> In reply to @Elegantbeef "<@180866243819995136>\: hopefully that's good": yeah thanks a lot
[05:15:43] <FromDiscord> <Elegantbeef> `var` is just a pointer that cannot be held onto directly
[05:15:51] <FromDiscord> <Elegantbeef> Well presently
[05:16:28] <FromDiscord> <Elegantbeef> It's slightly safer than `ptr int`, since you cannot hold onto it and have a pointer that outlives an object
[05:16:52] <FromDiscord> <creikey> yeah I read in the tutorial that ptr was mainly for C interop but I couldn't figure out how else to do what I was trying to do
[05:17:01] <FromDiscord> <creikey> https://github.com/creikey/learn-nim/blob/main/bf.nim
[05:17:03] <FromDiscord> <creikey> added all of your changes
[05:17:20] <FromDiscord> <creikey> 3 less lines and easier to read 10/10 review
[05:17:25] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3FDe
[05:18:02] <FromDiscord> <creikey> sent a code paste, see https://play.nim-lang.org/#ix=3FDf
[05:18:12] <FromDiscord> <Elegantbeef> Neither, it'll silently work
[05:18:28] <FromDiscord> <Elegantbeef> It's a dangling pointer so you just have a pointer to memory that can be grown into and reused
[05:18:53] <FromDiscord> <Elegantbeef> The way the stack works is when you enter a new procedure you grow the stack with all the variables you need, so eventually you'll have a pointer to something you dont want to
[05:19:21] <FromDiscord> <creikey> the stack isn't lost after the proc is finished?
[05:19:35] <FromDiscord> <creikey> In reply to @Elegantbeef "It's a dangling pointer": oh yeah I see what you mean
[05:19:48] <FromDiscord> <Elegantbeef> Well it is but it doesnt 0 it or anything, it just goes up and new initialisation will write over it
[05:19:52] <FromDiscord> <creikey> it's still valid program memory so the operating system won't get mad but it's somewhere farther up in the stack the program isn't using right now
[05:20:01] <FromDiscord> <Elegantbeef> Yep
[05:20:10] <FromDiscord> <Elegantbeef> Dangling pointers are worse than nilable ptrs
[05:20:31] <FromDiscord> <Elegantbeef> Atleast when you dereference a nil pointer you know it's a nil reference, a dangling pointer will seem phantomlike
[05:20:37] <FromDiscord> <creikey> var is guaranteed to not dangle? you said you couldn't hold a reference to it, does that mean you couldn't do like var foo = getMem()
[05:20:51] <FromDiscord> <creikey> In reply to @Elegantbeef "Atleast when you dereference": yeah I actually like when a program segfaults
[05:20:54] <FromDiscord> <creikey> at least you know
[05:21:07] <FromDiscord> <Elegantbeef> You can do that but it's a copy until view types are stable
[05:21:08] <FromDiscord> <Elegantbeef> View types are nim's borrowed checked type stuff
[05:21:28] <FromDiscord> <creikey> worst thing to deal with ever is a silent memory bug in a machine learning backpropagation function so the model doesn't learn things and you think it's a problem with the math not the programming
[05:21:37] <FromDiscord> <Elegantbeef> In a future Nim when you'd do `var foo = getMem()` it'd check to ensure `foo` does not outlive the place of borrow
[05:21:47] <FromDiscord> <Elegantbeef> So with a global variable it'd never outlive it
[05:21:58] <FromDiscord> <creikey> In reply to @Elegantbeef "In a future Nim": like the borrow checker in rust
[05:22:13] <FromDiscord> <Elegantbeef> Yep
[05:22:45] <FromDiscord> <𝙧𝙚𝙢> so i took a nap, sorry for that but i can send my code
[05:22:50] <FromDiscord> <Elegantbeef> The premise of them are very nice since they allow you to get more performance and safer APIs
[05:23:05] <FromDiscord> <creikey> In reply to @Elegantbeef "You can do that": would view types need a special annotation? it seems kinda strange that things would just be copied like that and there's no indication that you're not mutating the variable returned as var
[05:23:18] <FromDiscord> <Elegantbeef> Well `var` would be the annotation
[05:23:36] <FromDiscord> <creikey> at the call site I mean
[05:24:03] <FromDiscord> <Elegantbeef> I think there was at a point, but idk if the newer stuff needs it
[05:24:07] <FromDiscord> <creikey> so like `var foo = getMem()` copies the `var uint8` that's returned instead of having  amutable reference
[05:24:19] <FromDiscord> <creikey> (edit) "so like `var foo = getMem()` copies the `var uint8` that's returned instead of having  amutable reference ... " 03added "right now, but after the change it goes to having a mutable reference with no change in syntax"
[05:24:19] <FromDiscord> <Elegantbeef> the syntax `var foo: var uint8 = getMem()` was floated at one point
[05:24:25] <FromDiscord> <creikey> (edit) "amutable" => "a mutable"
[05:24:30] <FromDiscord> <Elegantbeef> Dont know if that's the present idea
[05:24:39] <FromDiscord> <𝙧𝙚𝙢> https://pastebin.com/3AXZrarE
[05:24:56] <FromDiscord> <𝙧𝙚𝙢> could u guys have a look and see if im reparenting it wrong?
[05:25:11] <FromDiscord> <Elegantbeef> You can read about them if you want, but it's not stable so stuff will change https://nim-lang.org/docs/manual_experimental.html#view-types
[05:25:51] <FromDiscord> <creikey> lol proc view type
[05:25:58] <FromDiscord> <creikey> monkeypatching when
[05:26:29] <FromDiscord> <𝙧𝙚𝙢> elegantbeef could u and possibly pmunch have a look at that code pls?
[05:26:41] <FromDiscord> <creikey> In reply to @𝙧𝙚𝙢 "https://pastebin.com/3AXZrarE": is this nim calling C or is there a nice x11 nim library
[05:26:53] <FromDiscord> <Elegantbeef> It's nim -\> C X11
[05:26:55] <FromDiscord> <𝙧𝙚𝙢> nim x11 library but its very raw
[05:27:03] <FromDiscord> <𝙧𝙚𝙢> i abstracted most of the functions myself
[05:27:07] <FromDiscord> <Elegantbeef> X11 isnt a terrible C API, there are some ugly bits, but it's pretty tame
[05:27:30] *** Joins: Guest4437 (~Guest44@78-58-204-19.static.zebra.lt)
[05:27:31] <FromDiscord> <Elegantbeef> Like i said rem i'm not that competent with X11, it seems mostly fine
[05:27:42] <FromDiscord> <𝙧𝙚𝙢> except its not because it doesnt show the titlebar...
[05:27:52] <FromDiscord> <creikey> In reply to @Elegantbeef "X11 isnt a terrible": I wouldn't say the api is the problem, more how the underlying structure of x11 is obfuscated and poorly documented
[05:28:11] <FromDiscord> <𝙧𝙚𝙢> it has white here https://media.discordapp.net/attachments/371759389889003532/911797607301545995/unknown.png
[05:28:17] <FromDiscord> <Elegantbeef> Indeed, the most fun part is trying to reason how to make it work
[05:28:21] <FromDiscord> <𝙧𝙚𝙢> the titlebar should be `0x0000ff`
[05:28:42] <FromDiscord> <𝙧𝙚𝙢> i spent hours trying to get this working and couldnt figure out whats wrong w/ it
[05:29:10] <FromDiscord> <Elegantbeef> Isnt the colour stuff an index in a colour map and not a hex colour?
[05:29:27] <FromDiscord> <creikey> In reply to @𝙧𝙚𝙢 "i spent hours trying": the most productive x11 development session
[05:29:32] <FromDiscord> <𝙧𝙚𝙢> In reply to @Elegantbeef "Isnt the colour stuff": no
[05:29:41] <FromDiscord> <𝙧𝙚𝙢> this works fine
[05:29:49] <FromDiscord> <𝙧𝙚𝙢> sent a code paste, see https://play.nim-lang.org/#ix=3FDh
[05:29:51] <FromDiscord> <𝙧𝙚𝙢> BgColor and BorderColor are hex values
[05:30:38] <FromDiscord> <𝙧𝙚𝙢> sent a code paste, see https://play.nim-lang.org/#ix=3FDl
[05:30:39] <FromDiscord> <𝙧𝙚𝙢> so it makes zero fucking sense
[05:31:13] <FromDiscord> <𝙧𝙚𝙢> it definitely supports hex codes to some degree @ElegantBeef
[05:33:29] <FromDiscord> <Elegantbeef> So doing `0x00ff00` makes it what colour?
[05:34:03] <FromDiscord> <𝙧𝙚𝙢> green
[05:34:09] <FromDiscord> <𝙧𝙚𝙢> but NOT the titlebar
[05:34:12] *** Quits: Guest4437 (~Guest44@78-58-204-19.static.zebra.lt) (Ping timeout: 256 seconds)
[05:34:18] <FromDiscord> <𝙧𝙚𝙢> just the frames background color or border
[05:35:10] <FromDiscord> <Elegantbeef> Well i dont know what to say
[05:35:18] <FromDiscord> <Elegantbeef> X11 hasnt been kind to me even at the best of times
[05:36:13] *** Joins: Guest2 (~Guest2@2001:ce8:131:5f61:a028:c146:d958:9908)
[05:36:52] <FromDiscord> <𝙧𝙚𝙢> can we ping the x11 gods
[05:37:02] <nrds> <06Prestige99> hello, what's going on here
[05:37:10] <FromDiscord> <𝙧𝙚𝙢> oh shit he has spoken
[05:37:14] <nrds> <06Prestige99> lmao
[05:37:17] <FromDiscord> <𝙧𝙚𝙢> my x11 titlebar isnt showing up
[05:37:24] <FromDiscord> <Elegantbeef> Psh most of his knowledge comes from my first WM 😛
[05:37:25] <FromDiscord> <𝙧𝙚𝙢> and i cant figure out why
[05:37:39] <nrds> <06Prestige99> shhh beef
[05:38:52] *** Quits: Guest2 (~Guest2@2001:ce8:131:5f61:a028:c146:d958:9908) (Client Quit)
[05:39:40] <FromDiscord> <𝙧𝙚𝙢> so any ideas prestige?
[05:39:47] <FromDiscord> <𝙧𝙚𝙢> i sent the code above i can relink if u want
[05:39:56] <nrds> <06Prestige99> Looking at the pastebin atm, was this? https://pastebin.com/3AXZrarE
[05:40:08] <FromDiscord> <𝙧𝙚𝙢> yeah this is it
[05:40:36] <nrds> <06Prestige99> Isn't the decoration the parent?
[05:40:39] <nrds> <06Prestige99> supposed to be*
[05:41:38] <nrds> <06Prestige99> If you haven't seen https://jichu4n.com/posts/how-x-window-managers-work-and-how-to-write-one-part-iii/ I'd recommend it
[05:41:52] <nrds> <06Prestige99> there's a bit in there about reparenting
[05:42:13] <FromDiscord> <𝙧𝙚𝙢> read this
[05:42:18] <FromDiscord> <𝙧𝙚𝙢> btu it didnt cover this much
[05:42:22] <FromDiscord> <𝙧𝙚𝙢> besides framing the window
[05:43:01] <FromDiscord> <𝙧𝙚𝙢> if i make the thing a parent
[05:43:03] <FromDiscord> <𝙧𝙚𝙢> i get this
[05:43:10] <FromDiscord> <𝙧𝙚𝙢> sent a code paste, see https://play.nim-lang.org/#ix=3FDo
[05:43:12] <nrds> <06Prestige99> is this all the code? I could check it out in like 30 mins when I'm not busy
[05:43:22] <FromDiscord> <𝙧𝙚𝙢> sent a code paste, see https://play.nim-lang.org/#ix=3FDp
[05:43:24] <FromDiscord> <𝙧𝙚𝙢> this is just the code for reparenting
[05:43:50] <FromDiscord> <𝙧𝙚𝙢> if u can throw together a dummy x11 thing quickly and get this working id appreciate it
[05:44:16] <FromDiscord> <𝙧𝙚𝙢> i could push the broken code to github if u would rather
[05:44:23] <nrds> <06Prestige99> sure
[05:45:36] <FromDiscord> <𝙧𝙚𝙢> lemme make a branch temporarily
[05:46:18] <FromDiscord> <𝙧𝙚𝙢> actually fuck it ill just push to main and add a ntoe its broken
[05:46:18] <FromDiscord> <Elegantbeef> I'm waiting for a DM from prestige that says "Stop telling people i know anything about X11, the shit is unknowable"
[05:47:18] <nrds> <06Prestige99> lol 
[05:48:30] <nrds> <06Prestige99> I'm busy for like 30 mins but should be able to help after
[05:50:16] <FromDiscord> <𝙧𝙚𝙢> https://github.com/megabytesofrem/whim
[06:24:12] <FromDiscord> <𝙧𝙚𝙢> could u take a look at it?
[06:25:03] <nrds> <06Prestige99> taking a look now
[06:25:45] <FromDiscord> <codic> oh wow @𝙧𝙚𝙢 it's you
[06:27:20] <FromDiscord> <codic> sent a code paste, see https://play.nim-lang.org/#ix=3FDC
[06:28:09] <FromDiscord> <𝙧𝙚𝙢> wdym
[06:28:18] <FromDiscord> <𝙧𝙚𝙢> im tryint to add the subwindow for  the titlebar frame
[06:28:21] <FromDiscord> <codic> sent a code paste, see https://play.nim-lang.org/#ix=3FDE
[06:28:34] <FromDiscord> <codic> 1 sec lemme look at your code
[06:29:36] <nrds> <06Prestige99> So is anything working atm? or
[06:29:44] <FromDiscord> <𝙧𝙚𝙢> wdym
[06:29:50] <FromDiscord> <𝙧𝙚𝙢> the border around the windows works
[06:29:53] <FromDiscord> <codic> @𝙧𝙚𝙢 you never map `w` 😉
[06:29:57] <FromDiscord> <𝙧𝙚𝙢> just the titkebar color doesnt work
[06:29:59] <FromDiscord> <codic> change this to
[06:30:03] <FromDiscord> <codic> sent a code paste, see https://play.nim-lang.org/#ix=3FDF
[06:30:04] <nrds> <06Prestige99> hm I tried to spawn a terminal but it's just black 
[06:30:11] <FromDiscord> <𝙧𝙚𝙢> bc u dont have urxvt
[06:30:15] <FromDiscord> <codic> sent a code paste, see https://paste.rs/Q9r
[06:30:24] <nrds> <06Prestige99> nah I tried spawning my terminal inside it
[06:30:29] <FromDiscord> <codic> you need to map the child of the frame too
[06:30:31] <FromDiscord> <𝙧𝙚𝙢> weird it works fro me
[06:30:45] <FromDiscord> <𝙧𝙚𝙢> sent a code paste, see https://play.nim-lang.org/#ix=3FDJ
[06:31:01] <nrds> <06Prestige99> yeah looks like you only map the frame
[06:31:02] <FromDiscord> <codic> That should work yeah
[06:31:30] <FromDiscord> <codic> well
[06:31:33] <FromDiscord> <codic> [frame, w, decoration]
[06:31:35] <FromDiscord> <codic> you need to map all 3
[06:31:50] <FromDiscord> <codic> I don't know how it's working for you right now
[06:31:51] <FromDiscord> <𝙧𝙚𝙢> hoyl shit that did it
[06:31:53] <FromDiscord> <codic> 👍
[06:31:54] <FromDiscord> <𝙧𝙚𝙢> idk
[06:32:01] <FromDiscord> <𝙧𝙚𝙢> i followed that guys tutorial in C++
[06:32:02] <nrds> <06Prestige99> Lol
[06:32:05] <FromDiscord> <𝙧𝙚𝙢> pretty shit tutorial if i may add
[06:32:13] <FromDiscord> <codic> sent a code paste, see https://play.nim-lang.org/#ix=3FDK
[06:32:15] <FromDiscord> <codic> the code is shit but it explains the concepts rather nicely
[06:32:18] <FromDiscord> <𝙧𝙚𝙢> https://github.com/jichu4n/basic_wm↵this shit tutorial
[06:32:21] <nrds> <06Prestige99> there aren't many good tuts around I think
[06:32:42] <FromDiscord> <𝙧𝙚𝙢> @codic send ur wm
[06:32:46] <FromDiscord> <𝙧𝙚𝙢> ill take a  look at it
[06:32:51] <nrds> <06Prestige99> but yeah, need to map everything. Makes the windows visible
[06:33:02] <nrds> <06Prestige99> @codic is your wm reparenting?
[06:33:04] <FromDiscord> <𝙧𝙚𝙢> i thought u only map the parent window
[06:33:44] <FromDiscord> <codic> In reply to @nrds "<Prestige> <@562086061153583122> is your": indeed
[06:33:49] <FromDiscord> <codic> In reply to @𝙧𝙚𝙢 "i thought u only": no, you need to map everything
[06:33:58] <FromDiscord> <codic> by that logic mapping `root` would map everything lol
[06:34:13] <FromDiscord> <𝙧𝙚𝙢> ahh
[06:34:43] <nrds> <06Prestige99> Nice. I don't reparent, but then again I don't care for titlebars
[06:34:43] <FromDiscord> <𝙧𝙚𝙢> so that was just the issue the whole time
[06:34:45] <FromDiscord> <𝙧𝙚𝙢> the code was fine
[06:34:57] <FromDiscord> <codic> I haven't published it on github or anything yet, and it needs a couple other files to run (and also I need to refactor some shit), but it should help with getting gist: https://www.toptal.com/developers/hastebin/wocoqehure.rust
[06:35:01] <FromDiscord> <codic> (edit) "gist:" => "the gist of how to do stuff:"
[06:35:10] <FromDiscord> <codic> In reply to @nrds "<Prestige> Nice. I don't": Yeah tbh reparenting is a huge pain in the ass
[06:35:14] <FromDiscord> <𝙧𝙚𝙢> whys it say this is rust
[06:35:22] <FromDiscord> <Elegantbeef> Cause codic likes self harm
[06:35:23] <FromDiscord> <Elegantbeef> I mean
[06:35:30] <FromDiscord> <codic> Idk
[06:35:31] <FromDiscord> <codic> hastebin sucks
[06:35:31] <FromDiscord> <codic> I don't know why the Hastebin link changed either
[06:35:36] <FromDiscord> <codic> no it's nim
[06:35:38] <FromDiscord> <codic> smh
[06:35:44] <FromDiscord> <𝙧𝙚𝙢> also wtf is XInternAtom
[06:35:51] <FromDiscord> <codic> gets atom int from string
[06:35:58] <FromDiscord> <codic> https://tronche.com/gui/x/xlib/window-information/properties-and-atoms.html
[06:36:00] <FromDiscord> <Elegantbeef> It uses a herusitic to find the file extension and nim has similarities to rust
[06:36:01] <FromDiscord> <𝙧𝙚𝙢> do i need to worry about this shit yet
[06:36:07] <FromDiscord> <Elegantbeef> `let x: T` for instance
[06:36:19] <FromDiscord> <𝙧𝙚𝙢> thats like saying typescript is rust
[06:36:21] <FromDiscord> <codic> nah, but you do if you want to write something usable in the long run
[06:36:22] <FromDiscord> <𝙧𝙚𝙢> because both have lets
[06:36:29] <FromDiscord> <codic> hastebin's file detection is the worst thing ever
[06:36:34] <FromDiscord> <Elegantbeef> That's not what i said
[06:36:36] <FromDiscord> <𝙧𝙚𝙢> this documentation looks kinda aids ngl
[06:36:37] <FromDiscord> <codic> it often classifies languages it supports as other shit
[06:36:40] <FromDiscord> <Elegantbeef> I said it uses heuristics
[06:36:53] <FromDiscord> <𝙧𝙚𝙢> so what the fuck do i need to implement in the WM
[06:36:56] <FromDiscord> <𝙧𝙚𝙢> and how would i go about doing it
[06:37:13] <nrds> <06Prestige99> depends on the goals of your WM really
[06:37:16] <FromDiscord> <Elegantbeef> That doc is pretty much where i got most the information
[06:37:27] <FromDiscord> <codic> ^ + reading and stealing from other WMs :p
[06:37:29] <FromDiscord> <codic> and stack overflow
[06:37:31] <FromDiscord> <𝙧𝙚𝙢> this doc looks very aids to read
[06:37:47] <nrds> <06Prestige99> https://specifications.freedesktop.org/wm-spec/wm-spec-1.3.html
[06:38:11] <FromDiscord> <Elegantbeef> Well then stop implementing the WM there isnt much on X11's api
[06:38:12] <nrds> <06Prestige99> https://tronche.com/gui/x/xlib/ btw
[06:38:25] <FromDiscord> <𝙧𝙚𝙢> In reply to @Elegantbeef "Well then stop implementing": wdym
[06:38:42] <FromDiscord> <𝙧𝙚𝙢> i wanna write my own for fun but this looks confusing as fuck to implement all these stuff
[06:38:50] <FromDiscord> <codic> Also ewmh is very useful https://specifications.freedesktop.org/wm-spec/wm-spec-1.3.html
[06:38:53] <FromDiscord> <codic> Oh damn prestige just sent that
[06:38:57] <nrds> <06Prestige99> :)
[06:39:04] <nrds> <06Prestige99> @  : yes it's crazy a bit
[06:39:05] <FromDiscord> <Elegantbeef> There isnt much easily digestable information on X11 so these docs are the best, plus already existing implementations
[06:39:07] <FromDiscord> <𝙧𝙚𝙢> so are these just variables i set on the WM?
[06:39:21] <FromDiscord> <codic> Atoms are very general purpose
[06:39:25] <FromDiscord> <𝙧𝙚𝙢> to let clients know shit about it?
[06:39:36] <FromDiscord> <codic> They can be "Variables" you set on windows, they can be used in ClientMessageEvents, etc
[06:39:42] <FromDiscord> <codic> For example
[06:39:56] <FromDiscord> <codic> Say you want to set the window title of your window (from client perspective )
[06:40:03] <FromDiscord> <codic> You set the WM_NAME or _NET_WM_NAME atom on it
[06:40:10] <FromDiscord> <codic> Or, if your WM wants to set it's name, you do that on the root window
[06:40:21] <FromDiscord> <𝙧𝙚𝙢> can i read that atom and get the window title?
[06:40:27] <FromDiscord> <codic> yes
[06:40:34] <FromDiscord> <𝙧𝙚𝙢> ahhhh i see
[06:40:38] <FromDiscord> <codic> XFetchName, the other is a bit more complex, but the code is in my wm
[06:40:40] <FromDiscord> <𝙧𝙚𝙢> this isnt that hard as i thought then
[06:40:43] <FromDiscord> <codic> Another use case; say you (the client) wanna fullscreen a window
[06:40:45] <FromDiscord> <𝙧𝙚𝙢> its just global variables i assume
[06:41:07] <FromDiscord> <codic> You send a ClientMessage to the root window saying _NET_WM_WINDOW_FULLSCREEN
[06:41:12] <FromDiscord> <codic> And you give your window id as the 2nd parameter
[06:41:27] <FromDiscord> <codic> And whether to fullscreen or un-fullscreen as 3rd
[06:41:36] <FromDiscord> <codic> Then the WM reads that and, well, fullscreens/unfullscreens
[06:41:45] <FromDiscord> <𝙧𝙚𝙢> i see
[06:41:55] <FromDiscord> <𝙧𝙚𝙢> but if my wm wont support fullscreen windows for e g?
[06:41:59] <FromDiscord> <𝙧𝙚𝙢> then i dont nee dto add that or?
[06:42:36] <FromDiscord> <codic> sent a code paste, see https://play.nim-lang.org/#ix=3FDM
[06:42:47] <FromDiscord> <codic> In reply to @𝙧𝙚𝙢 "then i dont nee": sure, ig
[06:42:57] <FromDiscord> <𝙧𝙚𝙢> can i just use XFetchName
[06:43:01] <FromDiscord> <codic> that was just one example of course
[06:43:02] <FromDiscord> <𝙧𝙚𝙢> instead of this or
[06:43:30] <FromDiscord> <𝙧𝙚𝙢> also what is netAtoms
[06:43:44] <FromDiscord> <codic> sent a code paste, see https://play.nim-lang.org/#ix=3FDO
[06:43:47] <FromDiscord> <codic> but a lot of modern clients will set _NET_WM_NAME
[06:43:50] <FromDiscord> <codic> and ancient ones WM_NAME
[06:43:53] <FromDiscord> <codic> so my method tries both
[06:43:57] <FromDiscord> <𝙧𝙚𝙢> is `ret.addr` same as addr ret
[06:44:00] <FromDiscord> <𝙧𝙚𝙢> just you did it weirdly
[06:44:13] <FromDiscord> <codic> In reply to @𝙧𝙚𝙢 "is `ret.addr` same as": yes
[06:44:15] <FromDiscord> <codic> I don't see what's weird
[06:44:19] <FromDiscord> <codic> Nim has ufcs
[06:44:32] <FromDiscord> <𝙧𝙚𝙢> i thought it was a keyword at first
[06:44:34] <FromDiscord> <codic> x y and y.x are equivalent
[06:44:37] <FromDiscord> <codic> no, it's a function
[06:44:54] <FromDiscord> <codic> a "magic" function (implemented in compilier), but still a function, so syntaxually all the function rules apply
[06:45:13] <FromDiscord> <codic> netAtoms is the array of atoms, which I might or might not have copied from Prestige's nimdow because too lazy to write it all out
[06:45:33] <nrds> <06Prestige99> https://github.com/avahe-kellenberger/nimdow if you're interested
[06:45:50] <nrds> <06Prestige99> I think.. https://github.com/avahe-kellenberger/nimdow/blob/master/src/nimdowpkg/xatoms.nim
[06:46:20] <FromDiscord> <𝙧𝙚𝙢> ill take a look, thanks
[06:49:08] <FromDiscord> <codic> yes I stole it from there
[06:49:14] <FromDiscord> <codic> I have no shame!
[06:49:51] <FromDiscord> <codic> i did add a couple things I needed for my wm though
[06:50:52] <FromDiscord> <codic> btw prestige I implemented _NET_FRAME_EXTENTS in worm, mind if I submit a pr to nimdow for that?
[06:51:10] <nrds> <06Prestige99> Sure thing
[06:51:13] <FromDiscord> <codic> ewmh says it is a "MUST", and for nimdow it's really simple to add because of no titlebar
[06:51:18] <FromDiscord> <codic> 👍
[06:51:21] <FromDiscord> <𝙧𝙚𝙢> wait are u the worm guy
[06:51:35] <FromDiscord> <𝙧𝙚𝙢> @codic
[06:51:41] <FromDiscord> <codic> yes
[06:51:48] <FromDiscord> <𝙧𝙚𝙢> ur thing inspired me kinda
[06:52:18] <FromDiscord> <codic> 👍 the link I sent is the rewrite of worm
[06:52:40] <FromDiscord> <codic> (edit) "👍 the ... linkcontains" 03added "hastebin" | "is" => "contains part of"
[06:53:12] <FromDiscord> <codic> btw you just said 4 days ago ↵> yeah i could never do that↵and now you are, cool!
[06:55:26] <FromDiscord> <𝙧𝙚𝙢> im rewriting the code to be more modular rn
[06:55:41] <FromDiscord> <𝙧𝙚𝙢> i only started learning nim a few days ago but i got the hang of it fast
[06:56:00] <FromDiscord> <𝙧𝙚𝙢> probably bc its syntactically similar to python and other languages mixed together
[07:06:32] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:07:26] <nrds> <06Prestige99> @Elegantbeef pointer question again. Need to call a proc from inside a cdecl callback, I'm able to store a pointer to this proc and that pointer is passed to the callback. But I must not be referencing it correctly, again
[07:07:49] <nrds> <06Prestige99> https://play.nim-lang.org/#ix=3FDQ 
[07:09:42] <FromDiscord> <Pietro Peterlongo> More mentions of Nim than expected in this HN discussion about upcoming Advent of Code\: https://news.ycombinator.com/item?id=29292818
[07:10:13] <FromDiscord> <Elegantbeef> Where do you reference it again?
[07:10:29] <nrds> <06Prestige99> that userData object is just a pointer
[07:10:40] <nrds> <06Prestige99> so that let cb line
[07:11:00] <FromDiscord> <Elegantbeef> Ok so can we remove this from your code?
[07:11:24] <nrds> <06Prestige99> which part?
[07:11:54] <FromDiscord> <Elegantbeef> The entire thing so i can reason the issue at hand and run it
[07:12:37] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3FDT like this
[07:13:08] <nrds> <06Prestige99> what's the nimcall pragma?
[07:13:18] <FromDiscord> <Elegantbeef> It's a calling convention
[07:13:33] <FromDiscord> <Elegantbeef> Like `cdecl` or `closure` it's Nim's default calling convention
[07:14:05] <nrds> <06Prestige99> uh I'll slim down my example I guess
[07:14:21] <nrds> <06Prestige99> https://play.nim-lang.org/#ix=3FDU
[07:14:23] <FromDiscord> <Elegantbeef> It's nice to be able to run it 😛
[07:14:31] <nrds> <06Prestige99> I'll have to think about how to easily recreate this
[07:14:56] <FromDiscord> <Elegantbeef> The issue is probably the `ptr proc` since nim stores them as pointers that's redundant
[07:15:08] <nrds> <06Prestige99> wouldn't it be a ptr to a ptr?
[07:15:11] <FromDiscord> <Elegantbeef> it should just be `proc(){.nimcall.}` or similar
[07:15:47] <nrds> <06Prestige99> seems I can't past a proc to a pointer
[07:15:52] <nrds> <06Prestige99> cast*
[07:16:03] <FromDiscord> <Elegantbeef> I literally just did
[07:16:36] <nrds> <06Prestige99> weird, I get an error saying I can't
[07:16:48] <FromDiscord> <Elegantbeef> A concrete proc to pointer?
[07:17:27] <nrds> <06Prestige99> I have tho `callback: proc()` param, then I create `var c = callback` then I can't cast c to a pointer
[07:17:34] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3FDV
[07:17:37] <FromDiscord> <Elegantbeef> Remember `proc()` is a closure
[07:17:44] <FromDiscord> <Elegantbeef> you need to specify `{.nimCall.}`
[07:18:09] <nrds> <06Prestige99> oh? I need to find the docs on that
[07:18:47] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/manual.html#types-procedural-type
[07:19:50] <nrds> <06Prestige99> hm I'll try recreating it
[07:20:21] *** Quits: vicecea (~vicecea@gateway/vpn/pia/vicecea) (Remote host closed the connection)
[07:20:50] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[07:23:16] <nrds> <06Prestige99> ok https://play.nim-lang.org/#ix=3FE1 
[07:23:22] <nrds> <06Prestige99> (original recreated)
[07:23:52] <nrds> <06Prestige99> so you're saying I should add {.nimCall.} to the callback param type?
[07:27:16] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3FE3
[07:28:55] <nrds> <06Prestige99> aha, thanks
[07:29:27] <nrds> <06Prestige99> "As a special extension, a procedure of the calling convention nimcall can be passed to a parameter that expects a proc of the calling convention closure"
[07:29:35] <nrds> <06Prestige99> So how is this different from {.closure.} ?
[07:29:54] <FromDiscord> <Elegantbeef> closures store other data with the pointer to hold the state
[07:30:39] <nrds> <06Prestige99> so it's just a little more efficient? Cool, I could be using this in a lot of places instead of closure then...
[07:32:47] <FromDiscord> <Elegantbeef> A bit and it also points at the proc 😛
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[09:53:19] <FromDiscord> <𝙧𝙚𝙢> hey all
[09:53:24] <FromDiscord> <𝙧𝙚𝙢> i have another ambiguous error
[09:53:51] <FromDiscord> <𝙧𝙚𝙢> sent a code paste, see https://play.nim-lang.org/#ix=3FEu
[09:54:03] <FromDiscord> <𝙧𝙚𝙢> sent a code paste, see https://play.nim-lang.org/#ix=3FEv
[09:54:04] <FromDiscord> <𝙧𝙚𝙢> trying to use it like
[09:54:12] <FromDiscord> <𝙧𝙚𝙢> sent a code paste, see https://play.nim-lang.org/#ix=3FEw
[09:54:34] <FromDiscord> <𝙧𝙚𝙢> what am i doing wrong here
[09:54:57] <FromDiscord> <Elegantbeef> You're using a macro for a template
[09:55:32] <FromDiscord> <𝙧𝙚𝙢> wdym
[09:55:47] <FromDiscord> <Elegantbeef> sent a code paste, see https://play.nim-lang.org/#ix=3FEx
[09:57:03] <FromDiscord> <𝙧𝙚𝙢> same issue
[09:57:11] <FromDiscord> <𝙧𝙚𝙢> sent a code paste, see https://play.nim-lang.org/#ix=3FEy
[09:57:18] <FromDiscord> <𝙧𝙚𝙢> sent a code paste, see https://play.nim-lang.org/#ix=3FEz
[09:57:26] <FromDiscord> <𝙧𝙚𝙢> sent a code paste, see https://play.nim-lang.org/#ix=3FEA
[09:57:38] <FromDiscord> <𝙧𝙚𝙢> (edit) "same" => "still has"
[09:58:24] <FromDiscord> <Elegantbeef> should binding be `: string`?
[09:58:32] <FromDiscord> <𝙧𝙚𝙢> yeah
[09:58:33] <FromDiscord> <Elegantbeef> I dont even see `'8'` here
[09:58:45] <FromDiscord> <𝙧𝙚𝙢> not the issue tho
[09:58:50] <FromDiscord> <𝙧𝙚𝙢> Mod1Mask is being converted to 8
[09:58:58] <FromDiscord> <𝙧𝙚𝙢> its `int literal(8)`
[09:59:09] <FromDiscord> <𝙧𝙚𝙢> cant do shit about that btw its just the ugly  X11 api
[09:59:17] <FromDiscord> <Elegantbeef> Yea i know
[09:59:31] <FromDiscord> <𝙧𝙚𝙢> so what do i do to fix it
[09:59:35] <FromDiscord> <𝙧𝙚𝙢> the template broke it
[09:59:38] <FromDiscord> <Elegantbeef> ah yes the issue is `modMask` is replaced with `8: 8`
[09:59:40] <FromDiscord> <𝙧𝙚𝙢> it wasnt working w/ the macro before
[09:59:48] <FromDiscord> <𝙧𝙚𝙢> yeah
[09:59:51] <FromDiscord> <𝙧𝙚𝙢> so what do i do
[09:59:55] <FromDiscord> <Elegantbeef> change the `modMask` param to something like `modMsk`
[10:00:06] <FromDiscord> <Elegantbeef> then the field `modMask` will not get replaced with `7`
[10:00:12] <FromDiscord> <Elegantbeef> `8` even
[10:00:26] <FromDiscord> <𝙧𝙚𝙢> back to the fucking problem 1
[10:00:33] <FromDiscord> <𝙧𝙚𝙢> sent a code paste, see https://play.nim-lang.org/#ix=3FEB
[10:00:37] <FromDiscord> <Elegantbeef> Do you have tables imported?
[10:00:47] <FromDiscord> <𝙧𝙚𝙢> im about to kill myself
[10:00:48] <FromDiscord> <𝙧𝙚𝙢> no
[10:01:07] <FromDiscord> <𝙧𝙚𝙢> this is the only language that requires that which is weird
[10:01:24] <FromDiscord> <Elegantbeef> type bound operations are a RFC, so go upvote that if you want it
[10:01:28] <FromDiscord> <Elegantbeef> Well free standing procedures are lovely
[10:01:55] <FromDiscord> <Elegantbeef> Why dont you put an `export tables` in the file where you import?
[10:02:07] <FromDiscord> <Elegantbeef> in the file you import\
[10:02:42] <FromDiscord> <Elegantbeef> Might i suggest right here put `export tables`
[10:02:44] <FromDiscord> <Elegantbeef> https://github.com/megabytesofrem/whim/blob/main/src/whim/types.nim#L3
[10:03:06] <FromDiscord> <Elegantbeef> Then you dont have to import tables ever you just `import types`
[10:04:38] <FromDiscord> <Elegantbeef> not having it come with the type is annoying in some cases, but you didnt do yourselfs any favours ignoring me 😛
[10:06:13] <FromDiscord> <𝙧𝙚𝙢> thats old code on github i rewrote the entire thing
[10:06:19] <FromDiscord> <𝙧𝙚𝙢> ill add an export tho lol
[10:06:56] <FromDiscord> <Elegantbeef> Hey the code was changed 4 hours ago, so that's after i said you can/should export tables! 😜
[10:09:09] <FromDiscord> <Rika> In reply to @𝙧𝙚𝙢 "this is the only": Well this language is weird, and I guess it also embraces it really hard
[10:11:09] <NimEventer> New thread by Oyster: Strformat with user-defined width?, see https://forum.nim-lang.org/t/8644
[10:11:21] <FromDiscord> <𝙧𝙚𝙢> 4 hrs is an eternity :p https://media.discordapp.net/attachments/371759389889003532/911868868748804136/unknown.png
[10:14:52] <FromDiscord> <Rika> Damn beef you quick
[10:15:34] <FromDiscord> <Elegantbeef> Gotta race to get those invisible karma points
[10:16:27] <FromDiscord> <Elegantbeef> Do have to appreciate that they used `var width = 2` for simulating user input, nice to see
[10:16:39] <FromDiscord> <Rika> No u
[10:20:36] <FromDiscord> <Elegantbeef> I'm nice to see?
[10:20:41] <FromDiscord> <Elegantbeef> Dont fucking lie to me rika
[10:57:15] <NimEventer> New thread by Plgupa: Course on Nim programming language, see https://forum.nim-lang.org/t/8645
[11:25:57] *** Joins: gbrlmarn (~gbrlmarn@5-15-253-69.residential.rdsnet.ro)
[11:26:33] *** Quits: gbrlmarn (~gbrlmarn@5-15-253-69.residential.rdsnet.ro) (Client Quit)
[12:07:24] *** Joins: terminalpusher (~terminalp@2a01:586:12e7:1:89c3:58c2:e0e9:27cc)
[13:06:41] <FromDiscord> <Samyak2306> greetings developers. I need help regarding the following. I m a programmer since 5 years. I make physics and maths simulations and sometimes 2d games for fun. I want to earn with my skills. Is there a server where a beginner like me can get opportunity to start earning
[13:08:15] <FromDiscord> <Elegantbeef> This server is related to the Nim programming language
[13:08:45] <FromDiscord> <Samyak2306> oh
[13:10:12] <FromDiscord> <enthus1ast> @Samyak2306\:  But now that you're here, you could have a look at Nim, its fun \:)
[13:10:59] <FromDiscord> <Rika> What
[13:11:17] <FromDiscord> <Samyak2306> no thanks. I m a maths and physics enthusiast. I make simulations and I m happy with that😅
[13:12:04] <FromDiscord> <Rika> Okay
[13:14:24] *** Joins: Vladar (~Vladar@46.162.2.53)
[13:14:36] <FromDiscord> <evoalg> @ElegantBeef once you asked me what programming language I come from (python for me, but I don't even know that well) ...what programming language did you come from?
[13:15:51] <FromDiscord> <Rika> C#
[13:15:54] <FromDiscord> <Rika> He comes from C#
[13:16:34] <FromDiscord> <evoalg> oh ok!
[13:17:07] <FromDiscord> <evoalg> and you Rika from C/C++ ?
[13:17:11] <FromDiscord> <Elegantbeef> Yea what rika said
[13:17:48] <FromDiscord> <Elegantbeef> I'd hardly say i came from C# though since i was a shit programmer
[13:17:56] <FromDiscord> <Rika> I come from Python surprisingly
[13:18:07] <FromDiscord> <Rika> Surprisingly for you perhaps
[13:18:13] <FromDiscord> <Elegantbeef> But then again i never used a system language which i feel encourages becoming a less shitty one
[13:18:17] <FromDiscord> <evoalg> hehe
[13:18:34] <FromDiscord> <Rika> I was frustrated with how slow it was like most people who move from Python
[13:19:02] <FromDiscord> <evoalg> Rika do you still do stuff in python sometimes though?
[13:19:16] <FromDiscord> <Rika> No
[13:19:19] <FromDiscord> <Rika> I’ve completely left it
[13:19:30] <FromDiscord> <evoalg> wow ... divorced
[13:19:37] <FromDiscord> <Rika> All I can do in Python I can do in Nim better
[13:19:51] <FromDiscord> <evoalg> Nice
[13:19:55] <FromDiscord> <Rika> Not touching that shit again
[13:20:03] <FromDiscord> <evoalg> lol
[13:20:12] <FromDiscord> <Rika> Unless god forces my hand or something I guess
[13:20:27] <FromDiscord> <evoalg> @ElegantBeef will you go back for c#? ... perhaps for work?
[13:20:39] <FromDiscord> <Recruit_main707> He still uses c# iirc
[13:20:46] <FromDiscord> <Rika> How dare he
[13:20:48] <FromDiscord> <Elegantbeef> No i dont
[13:20:52] <FromDiscord> <evoalg> lol
[13:20:54] <FromDiscord> <Recruit_main707> Nice
[13:21:03] <FromDiscord> <Rika> Recruit arrested for libel
[13:21:14] <FromDiscord> <Elegantbeef> I mainly used C# due to the Unity engine, but i've since moved on from there
[13:21:30] <FromDiscord> <evoalg> omg I can't stop laughing again
[13:21:38] <FromDiscord> <Recruit_main707> In reply to @Rika "Recruit arrested for libel": I apologize for my sins please forgive me
[13:21:45] <FromDiscord> <Elegantbeef> Good that was a rude thing to accuse someone of
[13:21:50] <FromDiscord> <Rika> Lol
[13:23:19] <FromDiscord> <Recruit_main707> In reply to @Rika "All I can do": This deserves to be quoted in a talk
[13:23:40] <FromDiscord> <Rika> In reply to @Recruit_main707 "This deserves to be": The downside is that it just takes longer to write everything since ya know
[13:23:43] <FromDiscord> <Rika> Batteries not included
[13:23:55] <FromDiscord> <Rika> Hell screws not fucking included
[13:24:07] <FromDiscord> <Rika> Hell maybe even “make the fucking product yourself”
[13:24:13] <FromDiscord> <Elegantbeef> To answer the question personally i dont have any reason to use C#
[13:24:44] <FromDiscord> <Elegantbeef> It'll almost certainly infuriate me now 😀
[13:25:46] <FromDiscord> <Elegantbeef> "I want a set of enums, time to bit op them together"... "It'd be nice if ranges were IEnumerables" ... "Would be cool if this function was attached to the type aswell as an instance without an extension method" and so on
[13:26:43] <FromDiscord> <evoalg> one day I'll understand those examples
[13:26:55] <FromDiscord> <Rika> You’re planning on learning C#?!?!?
[13:27:00] <FromDiscord> <Rika> What the fuck
[13:27:02] <FromDiscord> <evoalg> no way
[13:27:11] <FromDiscord> <Rika> What beef mentioned were C# stuff
[13:27:15] <FromDiscord> <Elegantbeef> C# introduced ranges but you cannot do `foreach(var a in 3...5)` for instance (This is the ienumerable)
[13:27:23] <FromDiscord> <Rika> Why?
[13:27:31] <FromDiscord> <Elegantbeef> Cause they're idiots
[13:27:32] <FromDiscord> <Rika> Sounds absolutely stupid
[13:27:48] <FromDiscord> <Elegantbeef> They now have switch expressions in a fucking atrocious syntax
[13:28:04] <FromDiscord> <Elegantbeef> Say what you will about the Nim implementation but atleast the syntax is sensible and works well
[13:28:48] <FromDiscord> <Elegantbeef> Oh another thing is that in C# most people use a dictionary for a Enum -\> value relation
[13:28:51] <FromDiscord> <Rika> I’m scared to Google
[13:29:13] <FromDiscord> <Rika> W-what is this syntax
[13:30:01] <FromDiscord> <Recruit_main707> I have recently gone down the rabbit hole of stack based langs because I think they are underrated, but normally i use Nim or write glue code in c++/python to use nim
[13:30:25] <FromDiscord> <Rika> I have no idea what I’m reading when I see this C# switch exp syntax lol
[13:30:32] <FromDiscord> <Recruit_main707> It took me 5 minutes to write that shit because discord is fucking broken in the phone
[13:30:47] <FromDiscord> <Elegantbeef> Yea it's absurd to me
[13:31:15] <FromDiscord> <Elegantbeef> Why not just make all statements expressions if they have a value, not a fucking clue
[13:31:16] *** Joins: krux02 (~krux02@p200300e8170c11004db6e8013ca32c23.dip0.t-ipconnect.de)
[13:31:26] <FromDiscord> <Elegantbeef> Rust and Nim both do this and it's sensible
[13:31:37] <FromDiscord> <evoalg> In reply to @Recruit_main707 "I have recently gone": glue code is easier or something?
[13:32:00] <FromDiscord> <Rika> In reply to @evoalg "glue code is easier": Glue code just means using a programming language to glue two other languages together
[13:32:34] <FromDiscord> <Rika> So if there’s like no easy way to use x library in Nim you use a glue language to communicate
[13:32:52] <FromDiscord> <evoalg> like numpy or something?
[13:33:05] <FromDiscord> <Rika> I mean yeah
[13:33:49] <FromDiscord> <Rika> Numpy to Python to Nim via Nimpy afaik?
[13:33:52] <FromDiscord> <Rika> I guess
[13:34:17] <FromDiscord> <evoalg> Rika you don't miss ipython?
[13:34:40] <FromDiscord> <evoalg> (to do something quick)
[13:35:17] <FromDiscord> <Rika> No I never used it
[13:35:41] <FromDiscord> <Elegantbeef> Have you used inim evoalg?
[13:35:42] <FromDiscord> <Rika> I wrote scripts on either a temp file or echo then piped it into Python/Nim
[13:35:59] <FromDiscord> <Elegantbeef> Yea i do the same just `nvim /tmp/test.nim` 😀
[13:36:09] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[13:36:20] <FromDiscord> <Rika> I have a “scratches” folder lol
[13:36:35] <FromDiscord> <Rika> Never know if I need whatever random shit I write again
[13:37:11] <FromDiscord> <Elegantbeef> There is so much stuff I have lost to time helping people, i've written too many macros, that i'd like to revist and just dont have anymore
[13:37:22] <FromDiscord> <Elegantbeef> One too many commas that time!
[13:38:33] <FromDiscord> <evoalg> you should be collecting them for your book
[13:38:44] <FromDiscord> <Elegantbeef> Silly you i cannot write
[13:38:58] <FromDiscord> <evoalg> that once called "Playing with Nim"
[13:39:13] <FromDiscord> <evoalg> one
[13:39:15] <FromDiscord> <Elegantbeef> Nah it'll be called "Playing with Nimself"
[13:39:22] <FromDiscord> <evoalg> LOL
[13:39:48] <FromDiscord> <Rika> Let’s coauthor a book beef
[13:40:14] <FromDiscord> <Elegantbeef> Murder mystery?
[13:40:18] <FromDiscord> <Rika> Lol
[13:40:23] <FromDiscord> <Rika> Who killed the Nim compiler
[13:40:38] <FromDiscord> <Elegantbeef> Who and why killed the Nim compiler\
[13:40:45] <FromDiscord> <Elegantbeef> You'll be the who, and i'll find the why
[13:41:13] <FromDiscord> <Rika> Lol
[13:41:34] <FromDiscord> <Rika> I make the worst macro (that’s supposed to work) in existence and you fix the compiler so it works
[13:41:58] <FromDiscord> <Elegantbeef> Nice a tutorial on how to "Break and repair the Nim compiler"
[13:42:14] <FromDiscord> <Rika> That’s gonna be one challenge though ngl
[13:43:36] <NimEventer> New thread by Vladar: Converter is used through intermediate module?, see https://forum.nim-lang.org/t/8646
[13:46:55] <FromDiscord> <evoalg> well, that conversation produced real tears
[13:47:20] <FromDiscord> <Elegantbeef> Lol
[14:14:05] *** Joins: filcuc (~filippo@37.160.163.245)
[14:16:08] <filcuc> i'm trying to add support for arc in NimQml after a bit of shuffling the code around due to automatic creation of the =destroy method i get this error  Error: internal error: expr: proc not init "delete" 
[14:16:23] <filcuc> any idea without having to create a full bug report?
[14:17:34] <filcuc> another thing is that if i want to use =destroy istead of finalizers i've to split my QObject type definition into the "ref" and not "ref" since the =destroy() wants a "var object" 
[14:21:14] <filcuc> in other words what's the meaning of "expr: proc not init"
[14:28:40] <filcuc> ok during the shuffling of code i thought that forward declaring the finalizers would be enough...for solving the proc not init "delete" i had to put the actual implementation of the finalizer proc before the "new"
[15:11:36] *** Joins: src (~src@user/src)
[15:22:30] *** Quits: filcuc (~filippo@37.160.163.245) (Ping timeout: 260 seconds)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:55] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:52] *** Joins: beeswax (~knightshr@dynamic-046-114-149-077.46.114.pool.telefonica.de)
[15:38:28] <beeswax> I've got a problem with some asyncnet code. when trying someting like let future = await connect(socket, host, port)
[15:38:48] <beeswax> the compiler complains that the expression has no type or is ambiguous
[15:45:22] <beeswax> could it be because the return type of asyncnet/connect is Future[void]? How do I tell wether an error occured or not?
[15:52:25] <FromDiscord> <hotdog> In reply to @beeswax "I've got a problem": If you want the future just remove the “await”
[15:52:34] <FromDiscord> <hotdog> As await will consume the future
[15:53:35] <beeswax> oh okay, the documentation in std/asyncdispatch shows await being used like that
[15:54:11] <FromDiscord> <hotdog> Are you sure?
[15:54:19] <FromDiscord> <hotdog> Await should return the value
[15:54:24] <FromDiscord> <hotdog> Not a future
[15:54:57] <FromDiscord> <hotdog> E.g if the proc returns Future[string], await will give you the string
[15:55:15] <FromDiscord> <hotdog> You can catch errors the normal way with try/except
[15:55:20] <beeswax> yep, I didn't realize you'd immediately get the value from await, not the future
[15:56:00] <beeswax> okay, there seems to be a note that try/except might not work and the safer way would be to use yield & checking future.failed
[15:56:45] <FromDiscord> <hotdog> In reply to @beeswax "okay, there seems to": You can do that, getting the future and handling it manually
[15:57:10] <FromDiscord> <hotdog> I haven’t had problems catching errors though so I can’t really comment on how necessary it is
[15:58:03] <FromDiscord> <Yardanico> In reply to @beeswax "okay, there seems to": this note was actually removed in the devel nim :)
[15:58:23] <FromDiscord> <Yardanico> https://github.com/nim-lang/Nim/pull/19108
[15:58:52] <FromDiscord> <Yardanico> i mean the order of priority was changed - you can use try/except normally, but also yield if you really want to
[15:59:07] <beeswax> thanks, I think I'll be asking some more questions about await in the future (no pun intended)
[16:16:33] <FromDiscord> <dom96> beeswax: that note is outdated, the docs are updated in devel
[16:21:01] <FromDiscord> <dom96> bah, and I see Yardanico already said that 🙂
[16:31:51] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[16:49:41] <FromDiscord> <lenis> sent a code paste, see https://play.nim-lang.org/#ix=3FG7
[16:49:45] <FromDiscord> <lenis> it looks quite disgusting and im not sure if it even works
[16:50:49] <FromDiscord> <Yardanico> that's the normal way, `[]` in nim is pointer dereferencing operator
[16:51:01] <FromDiscord> <Yardanico> the code you showed underlying contents of one pointer to another
[16:51:07] <FromDiscord> <Yardanico> ah, right, this code is a bit wrong
[16:51:17] <FromDiscord> <Yardanico> `pointer` is the "generic pointer" type, nim won't know what to do if you dereference it
[16:51:24] <FromDiscord> <lenis> ok youre right
[16:51:26] <FromDiscord> <Yardanico> just write it like this
[16:51:29] <FromDiscord> <Yardanico> sent a code paste, see https://play.nim-lang.org/#ix=3FG8
[16:51:35] <FromDiscord> <lenis> yeah thats pretty much what i got
[16:51:41] <FromDiscord> <Yardanico> this will copy underlying contents from the pointer that someOtherPointer() returns to myPointer
[16:51:43] <FromDiscord> <lenis> actually much more disgusting but it should be the same
[16:51:53] <FromDiscord> <Yardanico> In reply to @lenis "actually much more disgusting": pointers aren't mean to be nice to work with :)
[16:51:57] <FromDiscord> <Yardanico> (edit) "mean" => "meant"
[16:52:07] <FromDiscord> <lenis> uhh
[16:52:07] <FromDiscord> <lenis> sent a code paste, see https://play.nim-lang.org/#ix=3FG9
[16:52:23] <FromDiscord> <lenis> that
[16:52:26] <FromDiscord> <Yardanico> how do you get fvPosOut ?
[16:52:26] <FromDiscord> <lenis> (edit) "https://play.nim-lang.org/#ix=3FG9" => "https://play.nim-lang.org/#ix=3FGa"
[16:52:35] <FromDiscord> <Yardanico> also why are you using `[]` in such a wrong way
[16:52:35] <FromDiscord> <lenis> passed in from a callback from a library
[16:52:47] <FromDiscord> <Yardanico> it's an array subscript operator in nim
[16:52:59] <FromDiscord> <lenis> sent a code paste, see https://play.nim-lang.org/#ix=3FGb
[16:53:20] <FromDiscord> <Yardanico> sent a code paste, see https://play.nim-lang.org/#ix=3FGc
[16:53:25] <FromDiscord> <Yardanico> `fvPosOut: ptr Vec3f` in argument list
[16:53:31] <FromDiscord> <lenis> (edit) "https://play.nim-lang.org/#ix=3FGb" => "https://play.nim-lang.org/#ix=3FGd"
[16:53:48] <FromDiscord> <lenis> ah yeah that makes sense
[16:54:06] <FromDiscord> <lenis> the ptr stores 3 cfloats which is the same structure as Vec3f
[16:54:15] <FromDiscord> <lenis> and i need to write into it
[16:54:36] <beeswax> okay, I've got some more issues. Any ideas why wrapConnectedSocket won't perform a proper TLS handshake?
[16:54:59] <FromDiscord> <Yardanico> In reply to @beeswax "okay, I've got some": are you not compiling with `-d:ssl` by any chance?
[16:55:09] <beeswax> there's the typical SYN, ACK, SYNACK and then the client tries to send the client hello but only sends a couple bytes
[16:55:13] <FromDiscord> <Yardanico> hmm
[16:55:43] <FromDiscord> <lenis> Thanks btw Yardanico
[16:55:58] <FromDiscord> <lenis> its a bit cleaner
[16:56:09] <FromDiscord> <Yardanico> In reply to @lenis "Thanks btw Yardanico": what types are mesh.indices and mesh.vertexPositions btw?
[16:56:22] <FromDiscord> <Yardanico> also what type is `m_pUserData`
[16:56:36] <beeswax> then the next call to sock.send raises an Error "no ciphers available", which makes sense. Wireshark shows that no proper handshake has been performed
[16:57:10] <beeswax> I do compile with `-d:ssl`. Without it the newContext proc isn't even available
[16:58:37] <FromDiscord> <lenis> sent a code paste, see https://play.nim-lang.org/#ix=3FGf
[16:59:29] <FromDiscord> <lenis> they're GltfArray[uint16] and GltfArray[Vec3f]
[17:00:05] <FromDiscord> <Yardanico> ah ok then, just didn't understand why are you using the array subscript operator like that
[17:00:25] <FromDiscord> <Yardanico> [] as a proc means it's an array subscript operator
[17:00:40] <FromDiscord> <lenis> I know. but i believe it wont run it if its in the same file
[17:00:44] <FromDiscord> <lenis> or at least i thought so
[17:00:59] <FromDiscord> <Yardanico> huh?
[17:01:03] <FromDiscord> <lenis> its the same when you override getters and setters
[17:01:07] <FromDiscord> <Yardanico> your last line in that callback is the same as `posOut[] = mesh.vertexPositions[int mesh.indices[iFace  3 + iVert][]][]`
[17:01:09] <FromDiscord> <lenis> thats how you can do property types in nim
[17:01:15] <FromDiscord> <Yardanico> sent a code paste, see https://paste.rs/dyu
[17:01:35] <FromDiscord> <lenis> cause you can do this
[17:02:54] *** Joins: arkurious (~arkurious@user/arkurious)
[17:03:28] <FromDiscord> <lenis> sent a code paste, see https://play.nim-lang.org/#ix=3FGg
[17:03:35] <FromDiscord> <Yardanico> yes, but how is this related to the array subscript operator?
[17:03:42] <FromDiscord> <Yardanico> i know you can do getters and setters in nim :)
[17:03:49] <FromDiscord> <Yardanico> also in your example you didn't export the setter
[17:04:09] <FromDiscord> <lenis> you're right i forgot
[17:04:30] <FromDiscord> <Yardanico> array subscript operator doesn't have limitations like "cannot be used in the same module" or something like that
[17:04:39] <FromDiscord> <lenis> but to use the setter you have to use `time=`(myType, 10) in the file
[17:04:45] <FromDiscord> <Rika> You don’t?
[17:04:54] <FromDiscord> <Yardanico> In reply to @lenis "but to use the": no
[17:04:57] <FromDiscord> <Rika> Oh you mean
[17:04:59] <FromDiscord> <Rika> I get it
[17:05:00] <FromDiscord> <lenis> I thought you did, to prevent recursive issues
[17:05:10] <FromDiscord> <Rika> Because otherwise you would access the field
[17:05:16] <FromDiscord> <Rika> It doesn’t apply for []
[17:05:16] <FromDiscord> <lenis> yes
[17:05:20] <FromDiscord> <Yardanico> In reply to @lenis "I thought you did,": ah, you mean it that way - yes, but that doesn't apply for [] anyway
[17:05:29] <FromDiscord> <Yardanico> it applies to setters specifically only if you have the same name for the field and the setter
[17:05:37] <FromDiscord> <Yardanico> so you can easily fix that by naming the field in the object differently
[17:05:53] <FromDiscord> <Yardanico> also you don't need to export your field in the object if you also export the setter and getter
[17:06:02] <FromDiscord> <Yardanico> because otherwise it'll be ambiguous again
[17:06:28] <FromDiscord> <Yardanico> sent a code paste, see https://play.nim-lang.org/#ix=3FGi
[17:06:30] <FromDiscord> <Yardanico> this is your example rewritten "properly"
[17:06:31] <FromDiscord> <lenis> you're right i just rushed it haha
[17:06:35] <FromDiscord> <lenis> your version is correct
[17:06:41] <FromDiscord> <Yardanico> also forgot the return value for the getter
[17:06:43] <FromDiscord> <lenis> anyway, the array accesspr works
[17:06:46] <FromDiscord> <lenis> I had no idea
[17:06:53] <FromDiscord> <Yardanico> sent a code paste, see https://play.nim-lang.org/#ix=3FGj
[17:07:15] <FromDiscord> <lenis> i just thought all special `` procs could only be called externally unless referenced by name
[17:07:18] <FromDiscord> <Yardanico> In reply to @lenis "I had no idea": but it would be very weird if a language had that sort of limitations, no?
[17:07:24] <FromDiscord> <Yardanico> (edit) "limitations," => "limitation,"
[17:07:39] <FromDiscord> <Yardanico> In reply to @lenis "i just thought all": `` by itself is actually just syntax for stropping
[17:08:00] <FromDiscord> <Yardanico> sent a code paste, see https://play.nim-lang.org/#ix=3FGk
[17:08:07] <FromDiscord> <Yardanico> so that the symbols inside are treated as a part of the identifier and not as actual operators
[17:09:01] <FromDiscord> <lenis> yes but i thought [] is a special operator like @
[17:09:13] <FromDiscord> <Yardanico> wdym "special"?
[17:10:02] <FromDiscord> <Yardanico> @lenis also about your MyType example - i was wrong too, you don't need to name it differently
[17:10:15] <FromDiscord> <Yardanico> but it didn't work in your case because you exported both the field and the getter
[17:10:23] <FromDiscord> <Yardanico> sent a code paste, see https://play.nim-lang.org/#ix=3FGl
[17:10:37] <FromDiscord> <Yardanico> https://nim-lang.org/docs/manual.html#procedures-properties↵"the builtin dot access is preferred if it is available"
[17:11:26] <FromDiscord> <lenis> mhh
[17:11:35] <FromDiscord> <Yardanico> hm
[17:11:37] <FromDiscord> <lenis> well @ is weird because it acts up when you try to override it
[17:11:47] <FromDiscord> <Rika> How?
[17:12:16] <FromDiscord> <lenis> that works
[17:12:19] <FromDiscord> <lenis> sent a code paste, see https://play.nim-lang.org/#ix=3FGm
[17:12:28] <FromDiscord> <lenis> but as soon as you add a second argument to the template, nim gets confused
[17:12:53] <FromDiscord> <Yardanico> and how did you call it with two arguments?
[17:12:58] <FromDiscord> <lenis> because, lets say you do this
[17:13:26] <FromDiscord> <lenis> sent a code paste, see https://play.nim-lang.org/#ix=3FGn
[17:13:26] <FromDiscord> <lenis> now you need 2 parameters
[17:13:29] <FromDiscord> <lenis> so, you would think
[17:13:31] <FromDiscord> <Rika> Okay
[17:13:45] <FromDiscord> <lenis> sent a code paste, see https://play.nim-lang.org/#ix=3FGo
[17:13:48] <FromDiscord> <Rika> That’s not how you would call it
[17:13:58] <FromDiscord> <lenis> but that doesnt work because now it assumed (KeyPressEvent, keyW) is a tuple
[17:14:03] <FromDiscord> <Rika> Because it is
[17:14:08] <FromDiscord> <Rika> Because that’s how it’s parsed
[17:14:29] <FromDiscord> <Rika> @ is more akin to a unary operator than a function
[17:14:39] <FromDiscord> <lenis> sent a code paste, see https://play.nim-lang.org/#ix=3FGq
[17:14:40] <FromDiscord> <lenis> and then it works
[17:14:49] <FromDiscord> <Rika> Just like +(1, 2) is not 1+2
[17:15:33] <FromDiscord> <lenis> but, if you dont use @ but you use an unused identifier like "on"
[17:15:36] <FromDiscord> <lenis> then it works fine
[17:15:56] <FromDiscord> <Yardanico> In reply to @lenis "but, if you dont": because it's a function, not an operator then
[17:16:50] <FromDiscord> <Rika> Anything that starts with a symbol (kinda vague when talking about Unicode but you get the gist) would be an operator
[17:16:59] <FromDiscord> <Rika> Anything with a letter would be a function
[17:17:13] <FromDiscord> <lenis> well there you go. thats what i meany by special treatment I guess
[17:17:22] <FromDiscord> <Rika> It’s not only on @ though
[17:17:27] <FromDiscord> <Yardanico> In reply to @lenis "well there you go.": see https://nim-lang.org/docs/manual.html#lexical-analysis-operators
[17:18:37] <FromDiscord> <lenis> Thats a useful part of the documentation
[17:18:42] <FromDiscord> <lenis> Havent seen that before
[17:18:48] <FromDiscord> <Yardanico> well, duh, it's the manual :)
[17:18:53] <FromDiscord> <Yardanico> it explains most of the language :)
[17:19:02] <FromDiscord> <lenis> so the issue with the @ example is that it's priority as an operator is greater than if it were a function?
[17:19:36] <FromDiscord> <Rika> No, it’s an operator
[17:19:57] <FromDiscord> <Rika> You don’t use function syntax on operators
[17:20:25] <FromDiscord> <lenis> In reply to @Yardanico "well, duh, it's the": Well I skimmed though it selectivelt haha
[17:20:28] <FromDiscord> <Yardanico> yes, they're either unary (that's why it worked with 1 argument) or binary (two arguments)
[17:20:39] <FromDiscord> <lenis> And i mostly went off whats explained in the 2 tutorials, and the book on manning
[17:20:56] <FromDiscord> <Yardanico> sent a code paste, see https://play.nim-lang.org/#ix=3FGt
[17:21:01] <FromDiscord> <Yardanico> because in the latter case you're actually using it as a binary operator
[17:21:09] <FromDiscord> <Yardanico> and if it was `@KeyPressEvent` then you're using it as an unary operator
[17:21:09] <FromDiscord> <lenis> I see
[17:21:21] <FromDiscord> <lenis> unfortunately the syntax isnt as intuitive for what I wanted to use it for haha
[17:21:42] <FromDiscord> <lenis> I thought it would be nice to use @ like "at" for event handling but it wasnt meant to be
[17:21:44] <FromDiscord> <Yardanico> i mean, using `on` instead of `@` is pretty intuitive too
[17:21:57] <FromDiscord> <lenis> it is, thats what i changed to
[17:22:18] <FromDiscord> <Rika> I’d say on is better than @
[17:22:27] <FromDiscord> <lenis> sent a code paste, see https://play.nim-lang.org/#ix=3FGv
[17:24:40] <FromDiscord> <lenis> i wanted to add the first one so you could filter events, which improves performance overhead because im using this in nimscript interop
[17:25:00] <FromDiscord> <lenis> so there is some noticeable performance overhead in calling the event handler
[18:18:32] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[18:50:24] <FromDiscord> <sharpcdf> how can i add a icon to the program at compile time?
[18:51:17] <FromDiscord> <Yardanico> In reply to @sharpcdf "how can i add": like this https://github.com/nim-lang/Nim/blob/devel/compiler/nim.nim#L11
[18:51:27] <FromDiscord> <Yardanico> of course you need to prepare .res or .o beforehand
[18:51:53] <FromDiscord> <Yardanico> https://forum.nim-lang.org/t/5680
[18:52:02] <FromDiscord> <Yardanico> https://forum.nim-lang.org/t/1862
[18:56:26] *** Joins: PMunch (~PMunch@user/pmunch)
[19:11:17] *** Joins: fputs6 (~fputs@67.59.83.166)
[19:12:41] *** Quits: fputs (~fputs@67.59.83.166) (Ping timeout: 250 seconds)
[19:12:41] *** fputs6 is now known as fputs
[19:29:11] *** Quits: beeswax (~knightshr@dynamic-046-114-149-077.46.114.pool.telefonica.de) (Ping timeout: 264 seconds)
[19:44:24] <FromDiscord> <gdquest> Hey there. Is there a place you can conveniently download the manual and class reference for offline use?
[19:45:38] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[19:45:58] <FromDiscord> <Yardanico> it's not offered officially, but you can build docs for offline use (if you have the full nim installation)
[19:46:36] <FromDiscord> <gdquest> I'm on the Nim repository right now. I can't find instructions to build the docs. Do you know where I could find them?
[19:47:04] <FromDiscord> <gdquest> I'm pretty new to Nim, still getting started
[19:47:59] <FromDiscord> <gdquest> Okay I see now, gotta read the `koch` tool's docs
[19:48:35] <FromDiscord> <Yardanico> `./koch docs --localdocs:folder` should work if you're on linux
[19:48:43] <FromDiscord> <gdquest> Thanks much!
[19:48:52] <FromDiscord> <gdquest> That's really easy and perfect, thanks
[19:49:00] <FromDiscord> <Yardanico> sorry `./koch --localdocs:folder docs`
[19:49:29] <FromDiscord> <Yardanico> it'll take quite a while though, because a lot of examples in the nim documentation are compiled to ensure that they're working
[19:49:37] <FromDiscord> <Yardanico> some are even being run tested
[19:49:37] <FromDiscord> <gdquest> It's also a great example, this program, I'm looking to code a similar little "build system"
[19:50:41] <FromDiscord> <Yardanico> you can also build PDFs for some stuff like the manual, but it requires some latex stuff to be installed
[19:51:34] <FromDiscord> <gdquest> Html would be perfect to me
[19:53:04] <FromDiscord> <gdquest> Thanks for your help, compiling now
[20:07:52] <FromDiscord> <Yardanico> there's no way to force nim to see an array of uint8 as that without specifying the suffix for the first value, right?
[20:08:14] <FromDiscord> <Yardanico> just adding nim support to wasm4 and their template for png2src (converts a png into a sprite for wasm4) only allows you to get all bytes
[20:08:30] <FromDiscord> <Yardanico> so you get var bunny: array[64, uint8] = [0x1, 0x2, 0x3, ...] and nim will complain
[20:18:10] <FromDiscord> <Yardanico> guess i'll just add more replaces to the template
[20:18:39] <FromDiscord> <hmmm> what's the nim approved way of writing if 20 <= thingy <= 30: do thongy
[20:18:56] <FromDiscord> <Yardanico> if 20 <= thingy and thingy <= 30
[20:19:12] <FromDiscord> <hmmm> oh, for one time my way is equal to the official way
[20:19:16] <FromDiscord> <hmmm> ty yardy
[20:19:21] <FromDiscord> <Yardanico> there's no "official way"
[20:19:40] <FromDiscord> <hmmm> ye but u know what I mean
[20:19:44] *** Joins: beeswax (~knightshr@dynamic-046-114-149-077.46.114.pool.telefonica.de)
[20:19:47] <FromDiscord> <hmmm> 😋
[20:32:15] *** Quits: dtomato (~dtomato@82-64-189-70.subs.proxad.net) (Quit: The Lounge - https://thelounge.chat)
[20:33:06] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
[20:41:51] *** Quits: robertmeta (sid514@user/robertmeta) (Remote host closed the connection)
[20:45:14] *** Joins: Vladar (~Vladar@46.162.2.53)
[20:49:05] *** Quits: euantorano (sid180289@helmsley.irccloud.com) (Ping timeout: 246 seconds)
[20:53:21] *** Quits: elph (uid286227@lymington.irccloud.com) (Ping timeout: 256 seconds)
[20:53:25] *** Quits: ormiret (sid314108@lymington.irccloud.com) (Ping timeout: 250 seconds)
[20:53:50] *** Quits: notchris (sid181145@hampstead.irccloud.com) (Ping timeout: 260 seconds)
[20:54:17] *** Quits: LyndsySimon (sid34452@lymington.irccloud.com) (Ping timeout: 250 seconds)
[21:45:57] *** Joins: Zevv (~Zevvvvv@not.connected.by.freedominter.net)
[21:54:32] <FromDiscord> <𝙧𝙚𝙢> sent a code paste, see https://play.nim-lang.org/#ix=3FIp
[21:54:35] *** Quits: beeswax (~knightshr@dynamic-046-114-149-077.46.114.pool.telefonica.de) (Quit: leaving)
[21:54:58] <FromDiscord> <𝙧𝙚𝙢> anything look amiss?
[21:54:59] <FromDiscord> <𝙧𝙚𝙢> sent a code paste, see https://play.nim-lang.org/#ix=3FIq
[22:20:12] *** Joins: robertmeta (sid514@user/robertmeta)
[22:20:21] <FromDiscord> <creikey> In reply to @gdquest "Hey there. Is there": What's gdquest doing in here??
[22:28:13] *** Joins: euantorano (sid180289@id-180289.helmsley.irccloud.com)
[22:33:09] <FromDiscord> <deech> sent a code paste, see https://play.nim-lang.org/#ix=3FIC
[22:33:27] <FromDiscord> <Yardanico> In reply to @deech "When I pass `--app:staticlib": yes, noMain means it won't make the `main` C function
[22:33:56] <FromDiscord> <Yardanico> Nim still makes its own `NimMain` because modules might have Nim code on the global level which won't be called if you don't call NimMain
[22:34:54] <FromDiscord> <deech> When I try to link this from another Nim program as just a plain static archive with some `extern`ed function these functions clash.
[22:36:35] *** Joins: notchris (sid181145@id-181145.hampstead.irccloud.com)
[22:38:21] *** Joins: ormiret (sid314108@id-314108.lymington.irccloud.com)
[22:38:25] <FromDiscord> <deech> Is there any way to not generate this? I have a static archive generated with the CPP backend that `extern`s some functions to be used with a program written with the C backend, both have `NimMain`, `PreMain` etc and fails to link the executable.
[22:41:13] *** Joins: LyndsySimon (sid34452@id-34452.lymington.irccloud.com)
[22:41:54] <FromDiscord> <Yardanico> In reply to @deech "Is there any way": I don't think so, not without patching the compiler or patching the C source manually after the Nim compilation step :(
[22:42:07] <FromDiscord> <Yardanico> There's at least https://github.com/nim-lang/Nim/issues/15955 open about it, maybe more issues. You can comment in that issue to make it more active
[22:42:44] <FromDiscord> <Yardanico> oh, seems like one workaround is to use `-Wl,--allow-multiple-definition` from that issue, but it might result in broken code
[22:43:13] *** Joins: elph (uid286227@id-286227.lymington.irccloud.com)
[22:44:09] <FromDiscord> <deech> There's also this https://github.com/nim-lang/Nim/issues/15955#issuecomment-948255187.
[22:45:15] <FromDiscord> <Yardanico> In reply to @deech "There's also this https://github.com/nim-lang/Nim/i": you'll have to do it for each nim static archive
[22:45:29] <FromDiscord> <Yardanico> well, for each except the first one
[22:45:31] <FromDiscord> <deech> Yep, it seems that way.
[22:45:42] <FromDiscord> <Yardanico> and global code won't work anyway
[22:45:58] <FromDiscord> <Yardanico> and global code is important - it's used in some modules for initialization
[22:46:02] <FromDiscord> <Yardanico> i'm talking about stdlib
[22:46:55] <FromDiscord> <Yardanico> even stuff as simple as the random module
[22:49:07] <FromDiscord> <deech> Hmmm,  I think the modules I'm using to make the archive don't have any global initialization but if they do I'm pretty blocked.
[22:58:45] <FromDiscord> <deech> Is there a no stdlib option when compiling?
[23:00:33] <FromDiscord> <Yardanico> In reply to @deech "Is there a no": not really, and most stdlib modules don't use any global state :)
[23:20:11] <FromDiscord> <gdquest> In reply to @creikey "What's gdquest doing in": Learning some Nim! We're looking to use it to make some little native executables we can have everyone in the team use.
[23:20:28] <FromDiscord> <creikey> In reply to @gdquest "Learning some Nim! We're": Ah nice
[23:21:43] <FromDiscord> <creikey> In reply to @gdquest "Learning some Nim! We're": I learned godot as one of my first programming things, I remember your stuff was pretty helpful. Afterwards I've had a similar journey I think where I learned c/c++ and contributed to the engine, then rust, then got tired of the syntax and experimented with all the other native languages
[23:44:22] <FromDiscord> <𝙧𝙚𝙢> hey could anyone help w/ my x11 issue?↵https://canary.discord.com/channels/371759389889003530/371759389889003532/912045814065553448
[23:50:24] *** Quits: dtomato (~dtomato@82-64-189-70.subs.proxad.net) (Quit: The Lounge - https://thelounge.chat)
[23:58:15] *** Joins: dtomato (~dtomato@82-64-189-70.subs.proxad.net)
