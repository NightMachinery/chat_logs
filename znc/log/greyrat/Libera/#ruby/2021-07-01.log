[00:12:14] *** Joins: drincruz_ (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[00:14:42] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 240 seconds)
[00:15:46] *** Quits: lad (~lad@user/lad) (Remote host closed the connection)
[00:35:02] *** Quits: unyu (~pyon@user/pyon) (Ping timeout: 268 seconds)
[00:36:57] *** Joins: unyu (~pyon@user/pyon)
[00:43:11] *** Quits: _ht (~quassel@82-169-194-8.biz.kpn.net) (Remote host closed the connection)
[01:00:22] *** Quits: CrazyEddy (~CrazyEddy@overkill.epicsol.org) (Ping timeout: 252 seconds)
[01:03:38] *** Joins: lunarkitty (uid501895@user/pyra)
[01:09:04] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[01:53:42] *** Joins: ur5us (~ur5us@2406:e002:6b09:8901:dc29:12ba:98a9:f1d4)
[02:02:36] *** Quits: dmang (~dmang@user/dmang) (Remote host closed the connection)
[02:03:24] *** Quits: [jamez] (~james@64.25.196.228) (Ping timeout: 265 seconds)
[02:16:17] <splud> greetings rubyists.
[02:17:45] <bougyman> Hey splud 
[02:18:15] <splud> I'm needing to implement a file upload on a system not normally running a webserver, and with minimal changes to the system.  I realize that the ruby installation has WEBrick on it.  Pretty quickly, I have a servlet running that can take POST'ed files.
[02:19:41] <splud> except these stream into the WEBrick core functionality and then are passed as an in-memory buffer to the do_POST handler.  is there some way to get the parsed data to be streamed to a file, avoiding (ugh) 60+ MB of ram usage when iploading a file?
[02:20:08] <splud> (this is on a smaller space constrained platform)
[02:21:25] *** Quits: ur5us (~ur5us@2406:e002:6b09:8901:dc29:12ba:98a9:f1d4) (Ping timeout: 256 seconds)
[02:21:27] <splud> and very much ram constrained.
[02:21:44] <splud> afk a couple, need to put something away
[02:23:39] *** Joins: Garb0 (~Garb0@user/garb0)
[02:31:56] <adam12> splud: Maybe pass a block to req.body? I'm not sure what you have so far.
[02:32:20] <adam12> splud: Or use IO.copy_stream, depending on where you're putting it.
[02:38:33] *** Quits: jhass[m] (~jhass@about/ruby/jhass) (Remote host closed the connection)
[02:38:33] *** Quits: ckrailo (~ckrailo@2001:470:69fc:105::2b33) (Remote host closed the connection)
[02:39:11] *** Joins: jhass[m] (~jhass@about/ruby/jhass)
[02:43:07] *** Joins: ckrailo (~ckrailo@2001:470:69fc:105::2b33)
[02:47:36] <splud> adam12 - to be clear. I'm not sending a request to another host, I need THIS host to be able to accept a POST, and the resources available to do that are limited.
[02:48:00] <splud> I can nc and spool data to a file, but then that needs subsequent parse.
[02:48:13] <splud> (nc in lieu of WEBrick)
[02:48:27] <splud> and it's just plain 'meh' way to do it,
[02:49:22] <splud> ven if I do nothing qith the req in do_POST, the servlet instance is going to have a massive RAM buffer.
[02:54:56] *** Joins: ur5us (~ur5us@2406:e002:6b09:8901:dc29:12ba:98a9:f1d4)
[02:57:10] <splud> adam12 ?
[02:57:30] <splud> is there some way of getting req.body into a block?
[03:14:07] *** Quits: chonkbit (~chonkbit@2600:1700:2150:1d40:86c5:a6ff:fe3b:ae7a) (Ping timeout: 256 seconds)
[03:26:43] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[03:28:49] *** Quits: drincruz_ (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Ping timeout: 258 seconds)
[03:50:23] *** Joins: drincruz_ (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[03:51:14] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 252 seconds)
[03:52:33] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:12:22] *** Joins: MalkbabY (MalkbabY@user/malkbaby)
[04:15:27] <adam12> ?code splud
[04:15:27] <ruby[bot]> splud: We can't help you without your code, please post it to https://gist.github.com
[04:15:48] *** Quits: MalkbabY_ (MalkbabY@user/malkbaby) (Ping timeout: 252 seconds)
[04:19:02] *** Joins: relyks (~Thunderbi@ool-45725d43.dyn.optonline.net)
[04:21:41] *** Quits: rg (~rg@user/rg) (Quit: Leaving)
[04:34:21] *** Quits: kaivai (~kaivai@user/kaivai) (Quit: ZNC - https://znc.in)
[04:37:03] *** Joins: kaivai (~kaivai@user/kaivai)
[04:38:32] <splud> I've examined the source for webrick, not possible to accomplish here.
[04:39:33] <splud> a large POST = DoS.
[04:41:48] <adam12> splud: Without seeing what you're doing, I can only guess, but I was basing it off this here: https://github.com/ruby/webrick/blob/3515081a51b91b730267ba2b224039ecfbf8bd7b/lib/webrick/httprequest.rb#L255-L259
[04:42:05] <adam12> splud: It's rare to see WEBrick in the wild anymore tho, so I can't even really begin to speculate.
[04:43:50] <splud> Not in a position to upgrade the devices, but can push a script - and WEBrick is available.
[04:44:42] <splud> You're basing the IO stuff on httpREQUEST.  That'd be where webrick is sending a request to another host.  httpSERVER is what is at play here.
[04:45:01] <aighearach> splud: Can you push binary gems?
[04:45:14] <adam12> splud: Hmm? Do you get arguments to do_POST?
[04:45:47] <adam12> Like these guys here? https://github.com/ruby/webrick/blob/3515081a51b91b730267ba2b224039ecfbf8bd7b/lib/webrick/httpservlet/abstract.rb#L105
[04:45:54] <splud> I get req, rsp args - which are arrays.  req of course is an absolute whopper if the POSTed file is large.
[04:45:59] <adam12> What kind of class is `req`? Maybe I'm not following.
[04:46:06] <splud> Can't push gems.
[04:46:19] <adam12> Ah. So `req` is provided but you can't use it because the body is large?
[04:46:41] <adam12> What kind of class is req? do you know?
[04:46:46] <splud> trying to avoid having the module even put stuff there - I want to shunt the data to a file.
[04:47:40] <splud>      req = create_request(@config)
[04:48:11] <adam12> https://github.com/ruby/webrick/blob/3515081a51b91b730267ba2b224039ecfbf8bd7b/lib/webrick/httpserver.rb#L231 right? an instance of HTTPRequest?
[04:49:39] <adam12> I'm kind of surprised you couldn't do something like: def do_POST(req, res); f = Tempfile.new; IO.copy_stream(req, f); end
[04:50:36] <splud> surely WEBrick still has req['data'] in a memory block?  That's what I'm trying to avoid
[04:50:45] <splud> 60MB archive being pushed.
[04:50:51] <aighearach> splud: if you can receive a POST and you can open a file, can you execute a binary?
[04:51:40] <splud> the device does not necessarily have a connection to the outside world. A client is connecting via a private network.
[04:51:56] <splud> just in case said binary is something to fetch remote gem files.
[04:53:27] <splud> otherwise, the device would be _retrieving_ this resource instead of having it POSTed to it.
[04:54:06] <splud> I gave something that works _for now_, it's just that is it ugly on RAM.
[05:02:26] *** Quits: sdfuiojklqaz (~sdfuiojkl@pool-108-49-187-144.bstnma.fios.verizon.net) (Remote host closed the connection)
[05:03:05] *** Joins: sdfuiojklqaz (~sdfuiojkl@pool-108-49-187-144.bstnma.fios.verizon.net)
[05:07:06] *** Quits: sdfuiojklqaz (~sdfuiojkl@pool-108-49-187-144.bstnma.fios.verizon.net) (Ping timeout: 240 seconds)
[05:12:59] <adam12> https://gist.github.com/adam12/c15bccf5860ce6b0d5283dbccecb9cec
[05:13:07] <aighearach> splud: if you're not also on the same private network how would you upload a script? It seems odd to have an appliance running Ruby that lets you upload scripts and create sockets but not execute binaries.
[05:16:38] *** Quits: kaivai (~kaivai@user/kaivai) (Quit: ZNC - https://znc.in)
[05:19:06] *** Joins: kaivai (~kaivai@user/kaivai)
[05:26:04] <splud> what binary are you suggesting?  I'm working with what is in the rootfs of the device, and am not at liberty to change that.
[05:27:44] <splud> adam12 - I should have been clear - I'm already able to take the req and dump it into a file.  This happens AFTER the WEBrick is already holding (at this time) over 60MB in RAM due to the ENTIRE package having been POSTed
[05:29:32] <splud> I was rather hoping there was a mechanism to have WEBrick _supply_ the req as a stream.  Allowing for it to be written as it is received (after the HTTPServer has processed the headers, though yes, I get that multipart affords some complications)
[05:29:55] <adam12> Are you sure that's not what's happening? How are you measuring memory use?
[05:29:58] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[05:32:41] *** Quits: drincruz_ (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Ping timeout: 265 seconds)
[05:34:38] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 252 seconds)
[05:34:42] *** Quits: ur5us (~ur5us@2406:e002:6b09:8901:dc29:12ba:98a9:f1d4) (Ping timeout: 240 seconds)
[05:49:09] <aighearach> splud: I was thinking a web server
[05:49:49] <aighearach> But there were some fairly robust WEBrick setups once upon a time, like 2005, it can be done
[06:00:43] <splud> watching the process grow in memory consumption with top.  or checking in /proc/{pid}/ for memory statistics.
[06:01:55] <splud> once do_POST has those variables, they are x size, not a stream - they're IN RAM.
[06:04:35] <splud> Anyway, I have some meetings here (and have been doing further investigations at a different workstation and checking here, thus lag).
[06:17:50] *** Joins: Garb00 (~Garb0@user/garb0)
[06:21:14] *** Quits: Garb0 (~Garb0@user/garb0) (Ping timeout: 272 seconds)
[06:23:20] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[06:31:28] *** Joins: lunarkitty (uid501895@user/pyra)
[06:33:03] *** Joins: ur5us (~ur5us@2406:e002:6b09:8901:dc29:12ba:98a9:f1d4)
[06:38:41] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[06:40:52] *** Joins: [jamez] (~james@64.25.196.228)
[06:42:32] *** Quits: finsternis (~X@23.226.237.192) (Read error: Connection reset by peer)
[06:43:12] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 252 seconds)
[07:01:00] *** Quits: lucf117 (~lucf117@user/lucf117) (Remote host closed the connection)
[07:08:26] *** Joins: lad (~lad@user/lad)
[07:13:42] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 265 seconds)
[07:46:22] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[07:50:50] *** Quits: kaivai (~kaivai@user/kaivai) (Quit: ZNC - https://znc.in)
[07:51:23] *** Joins: kaivai (~kaivai@user/kaivai)
[07:53:06] *** Quits: kaivai (~kaivai@user/kaivai) (Client Quit)
[07:58:57] *** Joins: kaivai (~kaivai@user/kaivai)
[08:07:28] *** Quits: ur5us (~ur5us@2406:e002:6b09:8901:dc29:12ba:98a9:f1d4) (Read error: Connection reset by peer)
[08:07:29] *** Quits: justache (~justache@user/justache) (Quit: Ping timeout (120 seconds))
[08:07:30] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Ping timeout: 258 seconds)
[08:07:49] *** Joins: ur5us (~ur5us@2406:e002:6b09:8901:dc29:12ba:98a9:f1d4)
[08:08:09] *** Joins: justache (~justache@user/justache)
[08:15:30] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[08:27:18] *** Joins: MalkbabY_ (MalkbabY@user/malkbaby)
[08:30:38] *** Quits: MalkbabY (MalkbabY@user/malkbaby) (Ping timeout: 252 seconds)
[08:31:33] *** Joins: jetchisel (jetchisel@user/jetchisel)
[08:43:20] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[08:46:04] *** Joins: sdfuiojklqaz (~sdfuiojkl@pool-108-49-187-144.bstnma.fios.verizon.net)
[08:50:26] *** Quits: sdfuiojklqaz (~sdfuiojkl@pool-108-49-187-144.bstnma.fios.verizon.net) (Ping timeout: 258 seconds)
[08:50:46] *** Quits: Garb00 (~Garb0@user/garb0) (Quit: Garb00)
[08:53:40] *** Quits: _aeris_ (~aeris@gateway/tor-sasl/aeris) (Remote host closed the connection)
[08:54:06] *** Joins: _aeris_ (~aeris@gateway/tor-sasl/aeris)
[09:09:22] *** Quits: saba_sedigh (~saba_sedi@109.125.168.28) (Ping timeout: 246 seconds)
[09:11:31] *** Joins: saba_sedigh (~saba_sedi@69.197.155.150)
[09:39:37] *** Quits: relyks (~Thunderbi@ool-45725d43.dyn.optonline.net) (Quit: relyks)
[09:44:18] *** Quits: ur5us (~ur5us@2406:e002:6b09:8901:dc29:12ba:98a9:f1d4) (Ping timeout: 240 seconds)
[09:44:20] *** Quits: [jamez] (~james@64.25.196.228) (Ping timeout: 252 seconds)
[10:00:07] *** Joins: rg (~rg@user/rg)
[10:12:49] *** Parts: jamesmartinez (~keinbock@37.44.247.165) ()
[10:13:42] *** Joins: Guest2015 (~Guest20@2a01:aec0:8002:3c00:20c3:906f:1410:b56e)
[10:15:47] *** Quits: Guest2015 (~Guest20@2a01:aec0:8002:3c00:20c3:906f:1410:b56e) (Client Quit)
[10:17:04] *** Quits: jmcgnh (~jmcgnh@c-98-229-233-252.hsd1.nh.comcast.net) (Ping timeout: 258 seconds)
[10:22:20] *** Joins: jmcgnh (~jmcgnh@c-98-229-233-252.hsd1.nh.comcast.net)
[10:38:09] *** Joins: dka (~code-is-a@ns3059207.ip-193-70-33.eu)
[10:38:55] *** Joins: _ht (~quassel@82-169-194-8.biz.kpn.net)
[10:40:24] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[10:45:20] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 272 seconds)
[11:18:29] *** Joins: relyks (~Thunderbi@ool-45725d43.dyn.optonline.net)
[11:33:10] *** Joins: teclator (~quassel@85.155.180.70.dyn.user.ono.com)
[11:33:30] *** Joins: dvgorod (~dvgorod@94.19.245.86)
[11:38:52] *** Joins: relyks1 (~Thunderbi@141.98.100.149)
[11:39:30] *** Quits: relyks (~Thunderbi@ool-45725d43.dyn.optonline.net) (Ping timeout: 240 seconds)
[11:39:30] *** relyks1 is now known as relyks
[11:47:10] *** Joins: relyks1 (~Thunderbi@89.238.143.229)
[11:48:42] *** Quits: relyks (~Thunderbi@141.98.100.149) (Ping timeout: 240 seconds)
[11:48:42] *** relyks1 is now known as relyks
[11:58:48] *** Quits: relyks (~Thunderbi@89.238.143.229) (Ping timeout: 272 seconds)
[11:58:48] *** Joins: relyks1 (~Thunderbi@ool-45725d43.dyn.optonline.net)
[12:01:06] *** relyks1 is now known as relyks
[12:20:54] <nakilon> > arguments forwarding now supports leading arguments.
[12:21:02] <nakilon>     def method_missing(meth, ...)
[12:21:02] <nakilon>       send(:"do_#{ meth }", ...)
[12:21:26] <nakilon> what is the "leading arguments" term? is it somewhere else I can read about it?
[12:21:41] <nakilon> I need it for translation from English
[12:23:36] <nakilon> фnd why not "trailing"?
[12:24:52] <nakilon> ah, it means the that leading were forwarded
[12:25:40] *** Quits: saba_sedigh (~saba_sedi@69.197.155.150) (Ping timeout: 252 seconds)
[12:28:33] *** Joins: saba_sedigh (~saba_sedi@69.197.155.150)
[12:35:02] *** Joins: MalkbabY (MalkbabY@user/malkbaby)
[12:38:30] *** Quits: MalkbabY_ (MalkbabY@user/malkbaby) (Ping timeout: 252 seconds)
[12:52:38] <nakilon> * Promote default gems to bundled gems.   (rexml,  rss) -- what does this mean?
[12:54:06] <nakilon> nvm https://nts.strzibny.name/ruby-stdlib-default-bundled-gems/
[12:57:08] *** Quits: reset (~reset@user/reset) (Quit: reset)
[13:09:07] *** Quits: saba_sedigh (~saba_sedi@69.197.155.150) (Ping timeout: 256 seconds)
[13:13:41] *** Joins: saba_sedigh (~saba_sedi@5.160.105.148)
[13:21:50] *** Quits: saba_sedigh (~saba_sedi@5.160.105.148) (Ping timeout: 258 seconds)
[13:33:38] *** Quits: mollerup (~nmm@customer-212-237-103-18.ip4.gigabit.dk) (Read error: Connection reset by peer)
[13:33:56] *** Joins: mollerup (~nmm@customer-2a00-7660-1612-0168-496a-8588-c940-0fae.ip6.gigabit.dk)
[13:42:42] *** Quits: mollerup (~nmm@customer-2a00-7660-1612-0168-496a-8588-c940-0fae.ip6.gigabit.dk) (Ping timeout: 240 seconds)
[14:24:21] *** Quits: weaksauce (~textual@ip68-5-101-101.oc.oc.cox.net) (Ping timeout: 265 seconds)
[14:27:46] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[14:30:13] *** Joins: jetchisel (jetchisel@user/jetchisel)
[14:42:09] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[14:45:39] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.2)
[14:46:35] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 256 seconds)
[14:59:27] *** Joins: dvgorod_ (~dvgorod@94.19.245.86)
[15:01:52] *** Quits: dvgorod (~dvgorod@94.19.245.86) (Ping timeout: 252 seconds)
[15:06:45] *** Joins: rassoc (~rassoc@139.174.228.245)
[15:08:00] *** Joins: dvgorod (~dvgorod@94.19.245.86)
[15:10:42] *** Quits: dvgorod_ (~dvgorod@94.19.245.86) (Ping timeout: 258 seconds)
[15:52:45] *** Quits: jacktar (~whiteshad@gateway/tor-sasl/jacktar) (Ping timeout: 244 seconds)
[15:53:43] *** Joins: jacktar (~whiteshad@gateway/tor-sasl/jacktar)
[16:01:59] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[16:33:43] *** Joins: [jamez] (~james@64.25.196.228)
[16:47:20] *** Joins: MalkbabY_ (MalkbabY@user/malkbaby)
[16:50:41] *** Quits: MalkbabY (MalkbabY@user/malkbaby) (Ping timeout: 256 seconds)
[17:46:30] *** Quits: lad (~lad@user/lad) (Ping timeout: 252 seconds)
[18:08:27] <nakilon> >> {b: 0, c: 1} => {b:} ; b
[18:08:33] <ruby[bot]> nakilon: # =>  (https://carc.in/#/r/bgmv)
[18:10:24] <aesthetikx> what just happened
[18:19:22] <nakilon> I wish I knew
[18:19:43] <nakilon> it's a code from ruby-lang.com news page
[18:19:46] <nakilon> an old one
[18:19:50] <nakilon> relatively
[18:20:07] <aesthetikx> which page
[18:20:20] <aesthetikx> you have piqued my interest
[18:37:28] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[18:48:52] <nakilon> aesthetikx https://www.ruby-lang.org/en/news/2020/12/25/ruby-3-0-0-released/
[18:50:14] *** Joins: jetchisel (jetchisel@user/jetchisel)
[18:53:04] <aesthetikx> woah
[19:22:24] *** Joins: finsternis (~X@23.226.237.192)
[19:30:27] <havenwood> nakilon: https://stdgems.org/ is a nice site
[19:31:41] <nakilon> havenwood you say it because it is relevant to something I asked?
[19:34:05] *** Joins: jwr (~jwr@pool-71-182-194-5.pitbpa.fios.verizon.net)
[19:37:05] <jwr> We have a need to build our docker images using a vanilla ubuntu:20.04 image instead of the offical ruby images on docker hub. Then, to be able to install whichever ruby version we want, I'm thinking of using rvm in the vanilla 20.04 image. Is rvm inside of docker a terrible idea?
[19:38:16] *** Quits: dvgorod (~dvgorod@94.19.245.86) (Ping timeout: 258 seconds)
[19:38:25] <nakilon> I believe docker tells you that you can do the same things inside it that you usually do outside so there should be nothing wrong
[19:40:46] <jwr> Right, but IIRC rvm will compile from source, so I need gcc and probably a bunch of other dependencies. I'm wondering how messy it would be to install rvm in a build image and then copy the desired ruby version into a slimmed down image without build deps.
[19:43:05] *** Joins: goldfish (~goldfish@user/goldfish)
[19:43:17] *** Joins: chonkbit (~chonkbit@2600:1700:2150:1d40:86c5:a6ff:fe3b:ae7a)
[19:43:54] <adam12> jwr: rvm might _not_ compile from source. It will try to use a binary. Depends on platform.
[19:44:16] <adam12> jwr: aarch64 or mips, probably source. But for x86_64, probably binary.
[19:44:42] <adam12> jwr: And don't forget about multi-stage build files, tho I'm not sure they'd help you here a lot.
[19:45:48] <jwr> adam12: oh, if rvm will attempt to use a binary then maybe this is all way easier than i thought. that's good to know.
[19:49:50] *** Quits: kaivai (~kaivai@user/kaivai) (Quit: ZNC - https://znc.in)
[19:52:22] *** Joins: kaivai (~kaivai@user/kaivai)
[19:53:30] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 265 seconds)
[19:54:05] *** Joins: reset (~reset@user/reset)
[19:57:10] <jwr> adam12: it did use a binary, that's cool. is there a way that i can know which files rvm installed when it installed ruby? eg so that i can do `COPY --from=builder /usr/local/rvm /usr/local/rmv`?
[19:58:06] *** Joins: vos (~vos@host86-191-139-217.range86-191.btcentralplus.com)
[20:00:32] *** Joins: sdfuiojklqaz (~sdfuiojkl@pool-108-49-187-144.bstnma.fios.verizon.net)
[20:06:50] <adam12> jwr: I'm not sure to be honest.
[20:09:14] <jwr> looks like `rvm info` shows most of that, and it does appear to have installed everything inside /usr/local/rvm.
[20:11:30] *** Quits: vos (~vos@host86-191-139-217.range86-191.btcentralplus.com) (Quit: WeeChat 3.2)
[20:14:07] *** Joins: Garb0 (~Garb0@user/garb0)
[20:14:40] *** Joins: vos (~vos@host86-191-139-217.range86-191.btcentralplus.com)
[20:24:53] *** Quits: Garb0 (~Garb0@user/garb0) (Ping timeout: 256 seconds)
[20:30:32] *** Joins: jamesmartinez (~keinbock@37.44.247.165)
[20:32:34] *** Joins: Guest49 (~Guest49@c-73-94-35-209.hsd1.mn.comcast.net)
[20:33:51] *** Quits: [jamez] (~james@64.25.196.228) (Ping timeout: 258 seconds)
[20:34:21] *** Quits: Guest49 (~Guest49@c-73-94-35-209.hsd1.mn.comcast.net) (Client Quit)
[20:39:13] *** Toledo is now known as TomNook
[20:40:48] *** Joins: AriT93 (~AriT93@8.18.220.189)
[20:56:06] *** Joins: lucf117 (~lucf117@user/lucf117)
[20:57:04] *** Joins: MalkbabY (MalkbabY@user/malkbaby)
[21:00:18] *** Quits: MalkbabY_ (MalkbabY@user/malkbaby) (Ping timeout: 240 seconds)
[21:09:22] <jidar> why would you have a COPY command that you're really trying to just do a RUN command?
[21:09:26] <jidar> is_confused
[21:10:25] <jidar> > Is rvm inside of docker a terrible idea?
[21:10:35] <jidar> so it's not that it's a terrible idea, it's that the use of a container negates any need for it
[21:11:23] <jidar> ie: containers are entirely about setting up an environment (just one) to run or execute something, using rvm on top of a container is or at least to me, feels dirty because why not just install whatever you're going to use, why install something that's going to install something else
[21:15:52] *** Quits: AriT93 (~AriT93@8.18.220.189) (Remote host closed the connection)
[21:26:58] *** Quits: kaivai (~kaivai@user/kaivai) (Quit: ZNC - https://znc.in)
[21:29:24] *** Joins: kaivai (~kaivai@user/kaivai)
[21:34:14] <nakilon> why run if it's copy?
[21:34:30] <nakilon> it looks like a multistep dockerfile directive
[21:35:20] <jidar> because you're literally (in this example) using COPY for what was installed via a RUN
[21:36:04] <nakilon> why not?
[21:36:31] <jidar> I don't know how to explain it any better than that..
[21:36:42] <jidar> also likely not the channel
[21:36:50] <nakilon> dude did RUN and then he wants to do COPY -- this is two step build
[21:37:17] <nakilon> because he wants to copy to a different context
[21:37:44] <nakilon> or image, whatever tt's called
[21:39:31] *** Joins: AriT93 (~AriT93@8.18.220.189)
[21:41:24] *** Joins: [jamez] (~james@64.25.196.228)
[21:44:42] *** Joins: lad (~lad@user/lad)
[21:54:15] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-4-120.prtc.net)
[21:55:54] *** Joins: weaksauce (~textual@ip68-5-101-101.oc.oc.cox.net)
[21:57:50] *** Quits: AriT93 (~AriT93@8.18.220.189) (Remote host closed the connection)
[22:03:39] *** Quits: _aeris_ (~aeris@gateway/tor-sasl/aeris) (Remote host closed the connection)
[22:03:55] *** Joins: _aeris_ (~aeris@gateway/tor-sasl/aeris)
[22:04:18] *** Joins: TomyWork (~TomyLobo@p200300e80f133c00e838f9cf8c4ed7f6.dip0.t-ipconnect.de)
[22:06:44] *** Joins: wyrran (~micah@c-73-217-16-79.hsd1.co.comcast.net)
[22:16:44] *** Joins: Garb0 (~Garb0@user/garb0)
[22:29:53] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-4-120.prtc.net) (Quit: Client closed)
[22:30:11] *** Joins: AriT93 (~AriT93@8.18.220.189)
[22:30:36] *** Quits: TomyWork (~TomyLobo@p200300e80f133c00e838f9cf8c4ed7f6.dip0.t-ipconnect.de) (Remote host closed the connection)
[22:34:31] *** Quits: vos (~vos@host86-191-139-217.range86-191.btcentralplus.com) (Quit: WeeChat 3.2)
[22:39:45] *** Quits: kaivai (~kaivai@user/kaivai) (Quit: ZNC - https://znc.in)
[22:42:14] *** Joins: kaivai (~kaivai@user/kaivai)
[22:48:15] *** Quits: wyrran (~micah@c-73-217-16-79.hsd1.co.comcast.net) (Ping timeout: 256 seconds)
[22:48:20] *** Quits: kaivai (~kaivai@user/kaivai) (Quit: ZNC - https://znc.in)
[22:48:29] *** Joins: wyrran (~micah@c-73-217-16-79.hsd1.co.comcast.net)
[22:48:52] *** Quits: lucf117 (~lucf117@user/lucf117) (Read error: Connection reset by peer)
[22:50:48] *** Joins: kaivai (~kaivai@user/kaivai)
[23:35:47] *** Quits: lad (~lad@user/lad) (Remote host closed the connection)
[23:36:33] *** Joins: lad (~lad@user/lad)
[23:44:31] *** Joins: Garb00 (~Garb0@user/garb0)
[23:47:26] *** Quits: Garb0 (~Garb0@user/garb0) (Ping timeout: 258 seconds)
[23:52:02] *** Quits: Garb00 (~Garb0@user/garb0) (Ping timeout: 258 seconds)
[23:52:51] *** Quits: wyrran (~micah@c-73-217-16-79.hsd1.co.comcast.net) (Ping timeout: 256 seconds)
[23:53:04] *** Joins: wyrran (~micah@c-73-217-16-79.hsd1.co.comcast.net)
[23:57:25] *** Joins: Rounin (~david@cm-84.212.130.215.getinternet.no)
